; ModuleID = 'irs-onlybc/xmlparse.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.XML_Feature = type { i32, i8*, i64 }
%struct.XML_ParserStruct = type { i8*, i8*, i8*, %struct.XML_Memory_Handling_Suite, i8*, i8*, i8*, i64, i8*, i8*, i8*, void (i8*, i8*, i8**)*, void (i8*, i8*)*, void (i8*, i8*, i32)*, void (i8*, i8*, i8*)*, void (i8*, i8*)*, void (i8*)*, void (i8*)*, void (i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i32)*, void (i8*)*, void (i8*, i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*)*, void (i8*, i8*)*, i32 (i8*)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, %struct.XML_ParserStruct*, void (i8*, i8*, i32)*, i32 (i8*, i8*, %struct.XML_Encoding*)*, void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i32)*, %struct.encoding*, %struct.INIT_ENCODING, %struct.encoding*, i8*, i8, i8, i8*, i8*, i8*, void (i8*)*, %struct.prolog_state, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)*, i32, i8*, i8*, i8*, %struct.open_internal_entity*, %struct.open_internal_entity*, i8, i32, %struct.ENTITY*, i8*, i8*, i8*, i8*, i8*, i8*, %struct.ELEMENT_TYPE*, %struct.attribute_id*, i8, i8, %struct.DTD*, i8*, %struct.tag*, %struct.tag*, %struct.binding*, %struct.binding*, i32, i32, i32, %struct.ATTRIBUTE*, %struct.NS_ATT*, i64, i8, %struct.position, %struct.STRING_POOL, %struct.STRING_POOL, i8*, i32, i8, %struct.XML_ParserStruct*, %struct.XML_ParsingStatus, i8, i8, i32, i64 }
%struct.XML_Memory_Handling_Suite = type { i8* (i64)*, i8* (i8*, i64)*, void (i8*)* }
%struct.XML_Encoding = type { [256 x i32], i8*, i32 (i8*, i8*)*, void (i8*)* }
%struct.XML_cp = type { i32, i32, i8*, i32, %struct.XML_cp* }
%struct.INIT_ENCODING = type { %struct.encoding, %struct.encoding** }
%struct.encoding = type { [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [2 x i32 (%struct.encoding*, i8*, i8*, i8**)*], i32 (%struct.encoding*, i8*, i8*)*, i32 (%struct.encoding*, i8*, i8*, i8*)*, i32 (%struct.encoding*, i8*)*, i8* (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*, i32, %struct.ATTRIBUTE*)*, i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*, i8*)*, void (%struct.encoding*, i8*, i8*, %struct.position*)*, i32 (%struct.encoding*, i8*, i8*, i8**)*, void (%struct.encoding*, i8**, i8*, i8**, i8*)*, void (%struct.encoding*, i8**, i8*, i16**, i16*)*, i32, i8, i8 }
%struct.prolog_state = type { i32 (%struct.prolog_state*, i32, i8*, i8*, %struct.encoding*)*, i32, i32, i32, i32, i32 }
%struct.open_internal_entity = type { i8*, i8*, %struct.open_internal_entity*, %struct.ENTITY*, i32, i8 }
%struct.ENTITY = type { i8*, i8*, i32, i32, i8*, i8*, i8*, i8*, i8, i8, i8 }
%struct.ELEMENT_TYPE = type { i8*, %struct.prefix*, %struct.attribute_id*, i32, i32, %struct.DEFAULT_ATTRIBUTE* }
%struct.prefix = type { i8*, %struct.binding* }
%struct.DEFAULT_ATTRIBUTE = type { %struct.attribute_id*, i8, i8* }
%struct.attribute_id = type { i8*, %struct.prefix*, i8, i8 }
%struct.DTD = type { %struct.HASH_TABLE, %struct.HASH_TABLE, %struct.HASH_TABLE, %struct.HASH_TABLE, %struct.STRING_POOL, %struct.STRING_POOL, i8, i8, i8, i8, %struct.HASH_TABLE, %struct.prefix, i8, %struct.CONTENT_SCAFFOLD*, i32, i32, i32, i32, i32* }
%struct.HASH_TABLE = type { %struct.NAMED**, i8, i64, i64, %struct.XML_Memory_Handling_Suite* }
%struct.NAMED = type { i8* }
%struct.CONTENT_SCAFFOLD = type { i32, i32, i8*, i32, i32, i32, i32 }
%struct.tag = type { %struct.tag*, i8*, i32, %struct.TAG_NAME, i8*, i8*, %struct.binding* }
%struct.TAG_NAME = type { i8*, i8*, i8*, i32, i32, i32 }
%struct.binding = type { %struct.prefix*, %struct.binding*, %struct.binding*, %struct.attribute_id*, i8*, i32, i32 }
%struct.ATTRIBUTE = type { i8*, i8*, i8*, i8 }
%struct.NS_ATT = type { i64, i64, i8* }
%struct.position = type { i64, i64 }
%struct.STRING_POOL = type { %struct.block*, %struct.block*, i8*, i8*, i8*, %struct.XML_Memory_Handling_Suite* }
%struct.block = type { %struct.block*, i32, [1 x i8] }
%struct.XML_ParsingStatus = type { i32, i8 }
%struct.HASH_TABLE_ITER = type { %struct.NAMED**, %struct.NAMED** }
%struct.XML_Expat_Version = type { i32, i32, i32 }

@PyExpat_XML_ErrorString.message = internal constant [41 x i8*] [i8* null, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.39, i32 0, i32 0)], align 16
@.str = private unnamed_addr constant [14 x i8] c"out of memory\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"syntax error\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"no element found\00", align 1
@.str.3 = private unnamed_addr constant [32 x i8] c"not well-formed (invalid token)\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"unclosed token\00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"partial character\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"mismatched tag\00", align 1
@.str.7 = private unnamed_addr constant [20 x i8] c"duplicate attribute\00", align 1
@.str.8 = private unnamed_addr constant [28 x i8] c"junk after document element\00", align 1
@.str.9 = private unnamed_addr constant [35 x i8] c"illegal parameter entity reference\00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"undefined entity\00", align 1
@.str.11 = private unnamed_addr constant [27 x i8] c"recursive entity reference\00", align 1
@.str.12 = private unnamed_addr constant [20 x i8] c"asynchronous entity\00", align 1
@.str.13 = private unnamed_addr constant [38 x i8] c"reference to invalid character number\00", align 1
@.str.14 = private unnamed_addr constant [27 x i8] c"reference to binary entity\00", align 1
@.str.15 = private unnamed_addr constant [42 x i8] c"reference to external entity in attribute\00", align 1
@.str.16 = private unnamed_addr constant [47 x i8] c"XML or text declaration not at start of entity\00", align 1
@.str.17 = private unnamed_addr constant [17 x i8] c"unknown encoding\00", align 1
@.str.18 = private unnamed_addr constant [51 x i8] c"encoding specified in XML declaration is incorrect\00", align 1
@.str.19 = private unnamed_addr constant [23 x i8] c"unclosed CDATA section\00", align 1
@.str.20 = private unnamed_addr constant [46 x i8] c"error in processing external entity reference\00", align 1
@.str.21 = private unnamed_addr constant [27 x i8] c"document is not standalone\00", align 1
@.str.22 = private unnamed_addr constant [51 x i8] c"unexpected parser state - please send a bug report\00", align 1
@.str.23 = private unnamed_addr constant [36 x i8] c"entity declared in parameter entity\00", align 1
@.str.24 = private unnamed_addr constant [52 x i8] c"requested feature requires XML_DTD support in Expat\00", align 1
@.str.25 = private unnamed_addr constant [45 x i8] c"cannot change setting once parsing has begun\00", align 1
@.str.26 = private unnamed_addr constant [15 x i8] c"unbound prefix\00", align 1
@.str.27 = private unnamed_addr constant [26 x i8] c"must not undeclare prefix\00", align 1
@.str.28 = private unnamed_addr constant [38 x i8] c"incomplete markup in parameter entity\00", align 1
@.str.29 = private unnamed_addr constant [32 x i8] c"XML declaration not well-formed\00", align 1
@.str.30 = private unnamed_addr constant [33 x i8] c"text declaration not well-formed\00", align 1
@.str.31 = private unnamed_addr constant [34 x i8] c"illegal character(s) in public id\00", align 1
@.str.32 = private unnamed_addr constant [17 x i8] c"parser suspended\00", align 1
@.str.33 = private unnamed_addr constant [21 x i8] c"parser not suspended\00", align 1
@.str.34 = private unnamed_addr constant [16 x i8] c"parsing aborted\00", align 1
@.str.35 = private unnamed_addr constant [17 x i8] c"parsing finished\00", align 1
@.str.36 = private unnamed_addr constant [44 x i8] c"cannot suspend in external parameter entity\00", align 1
@.str.37 = private unnamed_addr constant [80 x i8] c"reserved prefix (xml) must not be undeclared or bound to another namespace name\00", align 1
@.str.38 = private unnamed_addr constant [59 x i8] c"reserved prefix (xmlns) must not be declared or undeclared\00", align 1
@.str.39 = private unnamed_addr constant [64 x i8] c"prefix must not be bound to one of the reserved namespace names\00", align 1
@.str.40 = private unnamed_addr constant [12 x i8] c"expat_2.1.0\00", align 1
@PyExpat_XML_GetFeatureList.features = internal constant [6 x %struct.XML_Feature] [%struct.XML_Feature { i32 6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.41, i32 0, i32 0), i64 1 }, %struct.XML_Feature { i32 7, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.42, i32 0, i32 0), i64 1 }, %struct.XML_Feature { i32 3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43, i32 0, i32 0), i64 0 }, %struct.XML_Feature { i32 4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.44, i32 0, i32 0), i64 1024 }, %struct.XML_Feature { i32 8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i32 0, i32 0), i64 0 }, %struct.XML_Feature zeroinitializer], align 16
@.str.41 = private unnamed_addr constant [17 x i8] c"sizeof(XML_Char)\00", align 1
@.str.42 = private unnamed_addr constant [18 x i8] c"sizeof(XML_LChar)\00", align 1
@.str.43 = private unnamed_addr constant [8 x i8] c"XML_DTD\00", align 1
@.str.44 = private unnamed_addr constant [18 x i8] c"XML_CONTEXT_BYTES\00", align 1
@.str.45 = private unnamed_addr constant [7 x i8] c"XML_NS\00", align 1
@doProlog.externalSubsetName = internal constant [2 x i8] c"#\00", align 1
@doProlog.atypeCDATA = internal constant [6 x i8] c"CDATA\00", align 1
@doProlog.atypeID = internal constant [3 x i8] c"ID\00", align 1
@doProlog.atypeIDREF = internal constant [6 x i8] c"IDREF\00", align 1
@doProlog.atypeIDREFS = internal constant [7 x i8] c"IDREFS\00", align 1
@doProlog.atypeENTITY = internal constant [7 x i8] c"ENTITY\00", align 1
@doProlog.atypeENTITIES = internal constant [9 x i8] c"ENTITIES\00", align 1
@doProlog.atypeNMTOKEN = internal constant [8 x i8] c"NMTOKEN\00", align 1
@doProlog.atypeNMTOKENS = internal constant [9 x i8] c"NMTOKENS\00", align 1
@doProlog.notationPrefix = internal constant [10 x i8] c"NOTATION(\00", align 1
@doProlog.enumValueSep = internal constant [2 x i8] c"|\00", align 1
@doProlog.enumValueStart = internal constant [2 x i8] c"(\00", align 1
@addBinding.xmlNamespace = internal constant [37 x i8] c"http://www.w3.org/XML/1998/namespace\00", align 16
@addBinding.xmlLen = internal constant i32 36, align 4
@addBinding.xmlnsNamespace = internal constant [30 x i8] c"http://www.w3.org/2000/xmlns/\00", align 16
@addBinding.xmlnsLen = internal constant i32 29, align 4
@implicitContext = internal constant [41 x i8] c"xml=http://www.w3.org/XML/1998/namespace\00", align 16

; Function Attrs: nounwind uwtable
define %struct.XML_ParserStruct* @PyExpat_XML_ParserCreate(i8* %encodingName) #0 {
entry:
  %encodingName.addr = alloca i8*, align 8
  store i8* %encodingName, i8** %encodingName.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %encodingName.addr, metadata !662, metadata !2293), !dbg !2294
  %0 = load i8*, i8** %encodingName.addr, align 8, !dbg !2295, !tbaa !2289
  %call = call %struct.XML_ParserStruct* @PyExpat_XML_ParserCreate_MM(i8* %0, %struct.XML_Memory_Handling_Suite* null, i8* null), !dbg !2296
  ret %struct.XML_ParserStruct* %call, !dbg !2297
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind uwtable
define %struct.XML_ParserStruct* @PyExpat_XML_ParserCreate_MM(i8* %encodingName, %struct.XML_Memory_Handling_Suite* %memsuite, i8* %nameSep) #0 {
entry:
  %encodingName.addr = alloca i8*, align 8
  %memsuite.addr = alloca %struct.XML_Memory_Handling_Suite*, align 8
  %nameSep.addr = alloca i8*, align 8
  store i8* %encodingName, i8** %encodingName.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %encodingName.addr, metadata !675, metadata !2293), !dbg !2298
  store %struct.XML_Memory_Handling_Suite* %memsuite, %struct.XML_Memory_Handling_Suite** %memsuite.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_Memory_Handling_Suite** %memsuite.addr, metadata !676, metadata !2293), !dbg !2299
  store i8* %nameSep, i8** %nameSep.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %nameSep.addr, metadata !677, metadata !2293), !dbg !2300
  %0 = load i8*, i8** %encodingName.addr, align 8, !dbg !2301, !tbaa !2289
  %1 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %memsuite.addr, align 8, !dbg !2302, !tbaa !2289
  %2 = load i8*, i8** %nameSep.addr, align 8, !dbg !2303, !tbaa !2289
  %call = call %struct.XML_ParserStruct* @parserCreate(i8* %0, %struct.XML_Memory_Handling_Suite* %1, i8* %2, %struct.DTD* null), !dbg !2304
  ret %struct.XML_ParserStruct* %call, !dbg !2305
}

; Function Attrs: nounwind uwtable
define %struct.XML_ParserStruct* @PyExpat_XML_ParserCreateNS(i8* %encodingName, i8 signext %nsSep) #0 {
entry:
  %encodingName.addr = alloca i8*, align 8
  %nsSep.addr = alloca i8, align 1
  %tmp = alloca [2 x i8], align 1
  store i8* %encodingName, i8** %encodingName.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %encodingName.addr, metadata !667, metadata !2293), !dbg !2306
  store i8 %nsSep, i8* %nsSep.addr, align 1, !tbaa !2307
  call void @llvm.dbg.declare(metadata i8* %nsSep.addr, metadata !668, metadata !2293), !dbg !2308
  %0 = bitcast [2 x i8]* %tmp to i8*, !dbg !2309
  call void @llvm.lifetime.start(i64 2, i8* %0) #2, !dbg !2309
  call void @llvm.dbg.declare(metadata [2 x i8]* %tmp, metadata !669, metadata !2293), !dbg !2310
  %1 = load i8, i8* %nsSep.addr, align 1, !dbg !2311, !tbaa !2307
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i32 0, i32 0, !dbg !2312
  store i8 %1, i8* %arraydecay, align 1, !dbg !2313, !tbaa !2307
  %2 = load i8*, i8** %encodingName.addr, align 8, !dbg !2314, !tbaa !2289
  %arraydecay1 = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i32 0, i32 0, !dbg !2315
  %call = call %struct.XML_ParserStruct* @PyExpat_XML_ParserCreate_MM(i8* %2, %struct.XML_Memory_Handling_Suite* null, i8* %arraydecay1), !dbg !2316
  %3 = bitcast [2 x i8]* %tmp to i8*, !dbg !2317
  call void @llvm.lifetime.end(i64 2, i8* %3) #2, !dbg !2317
  ret %struct.XML_ParserStruct* %call, !dbg !2318
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #2

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #2

; Function Attrs: nounwind uwtable
define internal %struct.XML_ParserStruct* @parserCreate(i8* %encodingName, %struct.XML_Memory_Handling_Suite* %memsuite, i8* %nameSep, %struct.DTD* %dtd) #0 {
entry:
  %retval = alloca %struct.XML_ParserStruct*, align 8
  %encodingName.addr = alloca i8*, align 8
  %memsuite.addr = alloca %struct.XML_Memory_Handling_Suite*, align 8
  %nameSep.addr = alloca i8*, align 8
  %dtd.addr = alloca %struct.DTD*, align 8
  %parser = alloca %struct.XML_ParserStruct*, align 8
  %mtemp = alloca %struct.XML_Memory_Handling_Suite*, align 8
  %mtemp6 = alloca %struct.XML_Memory_Handling_Suite*, align 8
  %cleanup.dest.slot = alloca i32
  store i8* %encodingName, i8** %encodingName.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %encodingName.addr, metadata !1124, metadata !2293), !dbg !2319
  store %struct.XML_Memory_Handling_Suite* %memsuite, %struct.XML_Memory_Handling_Suite** %memsuite.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_Memory_Handling_Suite** %memsuite.addr, metadata !1125, metadata !2293), !dbg !2320
  store i8* %nameSep, i8** %nameSep.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %nameSep.addr, metadata !1126, metadata !2293), !dbg !2321
  store %struct.DTD* %dtd, %struct.DTD** %dtd.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.DTD** %dtd.addr, metadata !1127, metadata !2293), !dbg !2322
  %0 = bitcast %struct.XML_ParserStruct** %parser to i8*, !dbg !2323
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !2323
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser, metadata !1128, metadata !2293), !dbg !2324
  %1 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %memsuite.addr, align 8, !dbg !2325, !tbaa !2289
  %tobool = icmp ne %struct.XML_Memory_Handling_Suite* %1, null, !dbg !2325
  br i1 %tobool, label %if.then, label %if.else, !dbg !2326

if.then:                                          ; preds = %entry
  %2 = bitcast %struct.XML_Memory_Handling_Suite** %mtemp to i8*, !dbg !2327
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !2327
  call void @llvm.dbg.declare(metadata %struct.XML_Memory_Handling_Suite** %mtemp, metadata !1129, metadata !2293), !dbg !2328
  %3 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %memsuite.addr, align 8, !dbg !2329, !tbaa !2289
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %3, i32 0, i32 0, !dbg !2330
  %4 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8, !dbg !2330, !tbaa !2331
  %call = call i8* %4(i64 936), !dbg !2329
  %5 = bitcast i8* %call to %struct.XML_ParserStruct*, !dbg !2333
  store %struct.XML_ParserStruct* %5, %struct.XML_ParserStruct** %parser, align 8, !dbg !2334, !tbaa !2289
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2335, !tbaa !2289
  %cmp = icmp ne %struct.XML_ParserStruct* %6, null, !dbg !2337
  br i1 %cmp, label %if.then.1, label %if.end, !dbg !2338

if.then.1:                                        ; preds = %if.then
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2339, !tbaa !2289
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 3, !dbg !2341
  store %struct.XML_Memory_Handling_Suite* %m_mem, %struct.XML_Memory_Handling_Suite** %mtemp, align 8, !dbg !2342, !tbaa !2289
  %8 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %memsuite.addr, align 8, !dbg !2343, !tbaa !2289
  %malloc_fcn2 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %8, i32 0, i32 0, !dbg !2344
  %9 = load i8* (i64)*, i8* (i64)** %malloc_fcn2, align 8, !dbg !2344, !tbaa !2331
  %10 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mtemp, align 8, !dbg !2345, !tbaa !2289
  %malloc_fcn3 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %10, i32 0, i32 0, !dbg !2346
  store i8* (i64)* %9, i8* (i64)** %malloc_fcn3, align 8, !dbg !2347, !tbaa !2331
  %11 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %memsuite.addr, align 8, !dbg !2348, !tbaa !2289
  %realloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %11, i32 0, i32 1, !dbg !2349
  %12 = load i8* (i8*, i64)*, i8* (i8*, i64)** %realloc_fcn, align 8, !dbg !2349, !tbaa !2350
  %13 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mtemp, align 8, !dbg !2351, !tbaa !2289
  %realloc_fcn4 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %13, i32 0, i32 1, !dbg !2352
  store i8* (i8*, i64)* %12, i8* (i8*, i64)** %realloc_fcn4, align 8, !dbg !2353, !tbaa !2350
  %14 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %memsuite.addr, align 8, !dbg !2354, !tbaa !2289
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %14, i32 0, i32 2, !dbg !2355
  %15 = load void (i8*)*, void (i8*)** %free_fcn, align 8, !dbg !2355, !tbaa !2356
  %16 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mtemp, align 8, !dbg !2357, !tbaa !2289
  %free_fcn5 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %16, i32 0, i32 2, !dbg !2358
  store void (i8*)* %15, void (i8*)** %free_fcn5, align 8, !dbg !2359, !tbaa !2356
  br label %if.end, !dbg !2360

if.end:                                           ; preds = %if.then.1, %if.then
  %17 = bitcast %struct.XML_Memory_Handling_Suite** %mtemp to i8*, !dbg !2361
  call void @llvm.lifetime.end(i64 8, i8* %17) #2, !dbg !2361
  br label %if.end.15, !dbg !2362

if.else:                                          ; preds = %entry
  %18 = bitcast %struct.XML_Memory_Handling_Suite** %mtemp6 to i8*, !dbg !2363
  call void @llvm.lifetime.start(i64 8, i8* %18) #2, !dbg !2363
  call void @llvm.dbg.declare(metadata %struct.XML_Memory_Handling_Suite** %mtemp6, metadata !1132, metadata !2293), !dbg !2364
  %call7 = call noalias i8* @malloc(i64 936) #2, !dbg !2365
  %19 = bitcast i8* %call7 to %struct.XML_ParserStruct*, !dbg !2366
  store %struct.XML_ParserStruct* %19, %struct.XML_ParserStruct** %parser, align 8, !dbg !2367, !tbaa !2289
  %20 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2368, !tbaa !2289
  %cmp8 = icmp ne %struct.XML_ParserStruct* %20, null, !dbg !2370
  br i1 %cmp8, label %if.then.9, label %if.end.14, !dbg !2371

if.then.9:                                        ; preds = %if.else
  %21 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2372, !tbaa !2289
  %m_mem10 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %21, i32 0, i32 3, !dbg !2374
  store %struct.XML_Memory_Handling_Suite* %m_mem10, %struct.XML_Memory_Handling_Suite** %mtemp6, align 8, !dbg !2375, !tbaa !2289
  %22 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mtemp6, align 8, !dbg !2376, !tbaa !2289
  %malloc_fcn11 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %22, i32 0, i32 0, !dbg !2377
  store i8* (i64)* @malloc, i8* (i64)** %malloc_fcn11, align 8, !dbg !2378, !tbaa !2331
  %23 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mtemp6, align 8, !dbg !2379, !tbaa !2289
  %realloc_fcn12 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %23, i32 0, i32 1, !dbg !2380
  store i8* (i8*, i64)* @realloc, i8* (i8*, i64)** %realloc_fcn12, align 8, !dbg !2381, !tbaa !2350
  %24 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mtemp6, align 8, !dbg !2382, !tbaa !2289
  %free_fcn13 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %24, i32 0, i32 2, !dbg !2383
  store void (i8*)* @free, void (i8*)** %free_fcn13, align 8, !dbg !2384, !tbaa !2356
  br label %if.end.14, !dbg !2385

if.end.14:                                        ; preds = %if.then.9, %if.else
  %25 = bitcast %struct.XML_Memory_Handling_Suite** %mtemp6 to i8*, !dbg !2386
  call void @llvm.lifetime.end(i64 8, i8* %25) #2, !dbg !2386
  br label %if.end.15

if.end.15:                                        ; preds = %if.end.14, %if.end
  %26 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2387, !tbaa !2289
  %tobool16 = icmp ne %struct.XML_ParserStruct* %26, null, !dbg !2387
  br i1 %tobool16, label %if.end.18, label %if.then.17, !dbg !2389

if.then.17:                                       ; preds = %if.end.15
  %27 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2390, !tbaa !2289
  store %struct.XML_ParserStruct* %27, %struct.XML_ParserStruct** %retval, !dbg !2391
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2391

if.end.18:                                        ; preds = %if.end.15
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2392, !tbaa !2289
  %m_buffer = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %28, i32 0, i32 2, !dbg !2393
  store i8* null, i8** %m_buffer, align 8, !dbg !2394, !tbaa !2395
  %29 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2405, !tbaa !2289
  %m_bufferLim = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %29, i32 0, i32 6, !dbg !2406
  store i8* null, i8** %m_bufferLim, align 8, !dbg !2407, !tbaa !2408
  %30 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2409, !tbaa !2289
  %m_attsSize = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %30, i32 0, i32 71, !dbg !2410
  store i32 16, i32* %m_attsSize, align 4, !dbg !2411, !tbaa !2412
  %31 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2413, !tbaa !2289
  %m_mem19 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %31, i32 0, i32 3, !dbg !2414
  %malloc_fcn20 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem19, i32 0, i32 0, !dbg !2415
  %32 = load i8* (i64)*, i8* (i64)** %malloc_fcn20, align 8, !dbg !2415, !tbaa !2416
  %33 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2417, !tbaa !2289
  %m_attsSize21 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %33, i32 0, i32 71, !dbg !2418
  %34 = load i32, i32* %m_attsSize21, align 4, !dbg !2418, !tbaa !2412
  %conv = sext i32 %34 to i64, !dbg !2419
  %mul = mul i64 %conv, 32, !dbg !2420
  %call22 = call i8* %32(i64 %mul), !dbg !2413
  %35 = bitcast i8* %call22 to %struct.ATTRIBUTE*, !dbg !2421
  %36 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2422, !tbaa !2289
  %m_atts = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %36, i32 0, i32 74, !dbg !2423
  store %struct.ATTRIBUTE* %35, %struct.ATTRIBUTE** %m_atts, align 8, !dbg !2424, !tbaa !2425
  %37 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2426, !tbaa !2289
  %m_atts23 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %37, i32 0, i32 74, !dbg !2428
  %38 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts23, align 8, !dbg !2428, !tbaa !2425
  %cmp24 = icmp eq %struct.ATTRIBUTE* %38, null, !dbg !2429
  br i1 %cmp24, label %if.then.26, label %if.end.29, !dbg !2430

if.then.26:                                       ; preds = %if.end.18
  %39 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2431, !tbaa !2289
  %m_mem27 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %39, i32 0, i32 3, !dbg !2433
  %free_fcn28 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem27, i32 0, i32 2, !dbg !2434
  %40 = load void (i8*)*, void (i8*)** %free_fcn28, align 8, !dbg !2434, !tbaa !2435
  %41 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2436, !tbaa !2289
  %42 = bitcast %struct.XML_ParserStruct* %41 to i8*, !dbg !2437
  call void %40(i8* %42), !dbg !2431
  store %struct.XML_ParserStruct* null, %struct.XML_ParserStruct** %retval, !dbg !2438
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2438

if.end.29:                                        ; preds = %if.end.18
  %43 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2439, !tbaa !2289
  %m_mem30 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %43, i32 0, i32 3, !dbg !2440
  %malloc_fcn31 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem30, i32 0, i32 0, !dbg !2441
  %44 = load i8* (i64)*, i8* (i64)** %malloc_fcn31, align 8, !dbg !2441, !tbaa !2416
  %call32 = call i8* %44(i64 1024), !dbg !2439
  %45 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2442, !tbaa !2289
  %m_dataBuf = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %45, i32 0, i32 9, !dbg !2443
  store i8* %call32, i8** %m_dataBuf, align 8, !dbg !2444, !tbaa !2445
  %46 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2446, !tbaa !2289
  %m_dataBuf33 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %46, i32 0, i32 9, !dbg !2448
  %47 = load i8*, i8** %m_dataBuf33, align 8, !dbg !2448, !tbaa !2445
  %cmp34 = icmp eq i8* %47, null, !dbg !2449
  br i1 %cmp34, label %if.then.36, label %if.end.42, !dbg !2450

if.then.36:                                       ; preds = %if.end.29
  %48 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2451, !tbaa !2289
  %m_mem37 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %48, i32 0, i32 3, !dbg !2453
  %free_fcn38 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem37, i32 0, i32 2, !dbg !2454
  %49 = load void (i8*)*, void (i8*)** %free_fcn38, align 8, !dbg !2454, !tbaa !2435
  %50 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2455, !tbaa !2289
  %m_atts39 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %50, i32 0, i32 74, !dbg !2456
  %51 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts39, align 8, !dbg !2456, !tbaa !2425
  %52 = bitcast %struct.ATTRIBUTE* %51 to i8*, !dbg !2457
  call void %49(i8* %52), !dbg !2451
  %53 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2458, !tbaa !2289
  %m_mem40 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %53, i32 0, i32 3, !dbg !2459
  %free_fcn41 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem40, i32 0, i32 2, !dbg !2460
  %54 = load void (i8*)*, void (i8*)** %free_fcn41, align 8, !dbg !2460, !tbaa !2435
  %55 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2461, !tbaa !2289
  %56 = bitcast %struct.XML_ParserStruct* %55 to i8*, !dbg !2462
  call void %54(i8* %56), !dbg !2458
  store %struct.XML_ParserStruct* null, %struct.XML_ParserStruct** %retval, !dbg !2463
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2463

if.end.42:                                        ; preds = %if.end.29
  %57 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2464, !tbaa !2289
  %m_dataBuf43 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %57, i32 0, i32 9, !dbg !2465
  %58 = load i8*, i8** %m_dataBuf43, align 8, !dbg !2465, !tbaa !2445
  %add.ptr = getelementptr i8, i8* %58, i64 1024, !dbg !2466
  %59 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2467, !tbaa !2289
  %m_dataBufEnd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %59, i32 0, i32 10, !dbg !2468
  store i8* %add.ptr, i8** %m_dataBufEnd, align 8, !dbg !2469, !tbaa !2470
  %60 = load %struct.DTD*, %struct.DTD** %dtd.addr, align 8, !dbg !2471, !tbaa !2289
  %tobool44 = icmp ne %struct.DTD* %60, null, !dbg !2471
  br i1 %tobool44, label %if.then.45, label %if.else.46, !dbg !2473

if.then.45:                                       ; preds = %if.end.42
  %61 = load %struct.DTD*, %struct.DTD** %dtd.addr, align 8, !dbg !2474, !tbaa !2289
  %62 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2475, !tbaa !2289
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %62, i32 0, i32 65, !dbg !2476
  store %struct.DTD* %61, %struct.DTD** %m_dtd, align 8, !dbg !2477, !tbaa !2478
  br label %if.end.63, !dbg !2479

if.else.46:                                       ; preds = %if.end.42
  %63 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2480, !tbaa !2289
  %m_mem47 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %63, i32 0, i32 3, !dbg !2482
  %call48 = call %struct.DTD* @dtdCreate(%struct.XML_Memory_Handling_Suite* %m_mem47), !dbg !2483
  %64 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2484, !tbaa !2289
  %m_dtd49 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %64, i32 0, i32 65, !dbg !2485
  store %struct.DTD* %call48, %struct.DTD** %m_dtd49, align 8, !dbg !2486, !tbaa !2478
  %65 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2487, !tbaa !2289
  %m_dtd50 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %65, i32 0, i32 65, !dbg !2489
  %66 = load %struct.DTD*, %struct.DTD** %m_dtd50, align 8, !dbg !2489, !tbaa !2478
  %cmp51 = icmp eq %struct.DTD* %66, null, !dbg !2490
  br i1 %cmp51, label %if.then.53, label %if.end.62, !dbg !2491

if.then.53:                                       ; preds = %if.else.46
  %67 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2492, !tbaa !2289
  %m_mem54 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %67, i32 0, i32 3, !dbg !2494
  %free_fcn55 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem54, i32 0, i32 2, !dbg !2495
  %68 = load void (i8*)*, void (i8*)** %free_fcn55, align 8, !dbg !2495, !tbaa !2435
  %69 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2496, !tbaa !2289
  %m_dataBuf56 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %69, i32 0, i32 9, !dbg !2497
  %70 = load i8*, i8** %m_dataBuf56, align 8, !dbg !2497, !tbaa !2445
  call void %68(i8* %70), !dbg !2492
  %71 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2498, !tbaa !2289
  %m_mem57 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %71, i32 0, i32 3, !dbg !2499
  %free_fcn58 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem57, i32 0, i32 2, !dbg !2500
  %72 = load void (i8*)*, void (i8*)** %free_fcn58, align 8, !dbg !2500, !tbaa !2435
  %73 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2501, !tbaa !2289
  %m_atts59 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %73, i32 0, i32 74, !dbg !2502
  %74 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts59, align 8, !dbg !2502, !tbaa !2425
  %75 = bitcast %struct.ATTRIBUTE* %74 to i8*, !dbg !2503
  call void %72(i8* %75), !dbg !2498
  %76 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2504, !tbaa !2289
  %m_mem60 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %76, i32 0, i32 3, !dbg !2505
  %free_fcn61 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem60, i32 0, i32 2, !dbg !2506
  %77 = load void (i8*)*, void (i8*)** %free_fcn61, align 8, !dbg !2506, !tbaa !2435
  %78 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2507, !tbaa !2289
  %79 = bitcast %struct.XML_ParserStruct* %78 to i8*, !dbg !2508
  call void %77(i8* %79), !dbg !2504
  store %struct.XML_ParserStruct* null, %struct.XML_ParserStruct** %retval, !dbg !2509
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2509

if.end.62:                                        ; preds = %if.else.46
  br label %if.end.63

if.end.63:                                        ; preds = %if.end.62, %if.then.45
  %80 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2510, !tbaa !2289
  %m_freeBindingList = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %80, i32 0, i32 70, !dbg !2511
  store %struct.binding* null, %struct.binding** %m_freeBindingList, align 8, !dbg !2512, !tbaa !2513
  %81 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2514, !tbaa !2289
  %m_freeTagList = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %81, i32 0, i32 68, !dbg !2515
  store %struct.tag* null, %struct.tag** %m_freeTagList, align 8, !dbg !2516, !tbaa !2517
  %82 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2518, !tbaa !2289
  %m_freeInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %82, i32 0, i32 51, !dbg !2519
  store %struct.open_internal_entity* null, %struct.open_internal_entity** %m_freeInternalEntities, align 8, !dbg !2520, !tbaa !2521
  %83 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2522, !tbaa !2289
  %m_groupSize = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %83, i32 0, i32 82, !dbg !2523
  store i32 0, i32* %m_groupSize, align 4, !dbg !2524, !tbaa !2525
  %84 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2526, !tbaa !2289
  %m_groupConnector = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %84, i32 0, i32 81, !dbg !2527
  store i8* null, i8** %m_groupConnector, align 8, !dbg !2528, !tbaa !2529
  %85 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2530, !tbaa !2289
  %m_unknownEncodingHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %85, i32 0, i32 29, !dbg !2531
  store i32 (i8*, i8*, %struct.XML_Encoding*)* null, i32 (i8*, i8*, %struct.XML_Encoding*)** %m_unknownEncodingHandler, align 8, !dbg !2532, !tbaa !2533
  %86 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2534, !tbaa !2289
  %m_unknownEncodingHandlerData = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %86, i32 0, i32 42, !dbg !2535
  store i8* null, i8** %m_unknownEncodingHandlerData, align 8, !dbg !2536, !tbaa !2537
  %87 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2538, !tbaa !2289
  %m_namespaceSeparator = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %87, i32 0, i32 83, !dbg !2539
  store i8 33, i8* %m_namespaceSeparator, align 1, !dbg !2540, !tbaa !2541
  %88 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2542, !tbaa !2289
  %m_ns = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %88, i32 0, i32 38, !dbg !2543
  store i8 0, i8* %m_ns, align 1, !dbg !2544, !tbaa !2545
  %89 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2546, !tbaa !2289
  %m_ns_triplets = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %89, i32 0, i32 39, !dbg !2547
  store i8 0, i8* %m_ns_triplets, align 1, !dbg !2548, !tbaa !2549
  %90 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2550, !tbaa !2289
  %m_nsAtts = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %90, i32 0, i32 75, !dbg !2551
  store %struct.NS_ATT* null, %struct.NS_ATT** %m_nsAtts, align 8, !dbg !2552, !tbaa !2553
  %91 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2554, !tbaa !2289
  %m_nsAttsVersion = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %91, i32 0, i32 76, !dbg !2555
  store i64 0, i64* %m_nsAttsVersion, align 8, !dbg !2556, !tbaa !2557
  %92 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2558, !tbaa !2289
  %m_nsAttsPower = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %92, i32 0, i32 77, !dbg !2559
  store i8 0, i8* %m_nsAttsPower, align 1, !dbg !2560, !tbaa !2561
  %93 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2562, !tbaa !2289
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %93, i32 0, i32 79, !dbg !2563
  %94 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2564, !tbaa !2289
  %m_mem64 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %94, i32 0, i32 3, !dbg !2565
  call void @poolInit(%struct.STRING_POOL* %m_tempPool, %struct.XML_Memory_Handling_Suite* %m_mem64), !dbg !2566
  %95 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2567, !tbaa !2289
  %m_temp2Pool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %95, i32 0, i32 80, !dbg !2568
  %96 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2569, !tbaa !2289
  %m_mem65 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %96, i32 0, i32 3, !dbg !2570
  call void @poolInit(%struct.STRING_POOL* %m_temp2Pool, %struct.XML_Memory_Handling_Suite* %m_mem65), !dbg !2571
  %97 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2572, !tbaa !2289
  %98 = load i8*, i8** %encodingName.addr, align 8, !dbg !2573, !tbaa !2289
  call void @parserInit(%struct.XML_ParserStruct* %97, i8* %98), !dbg !2574
  %99 = load i8*, i8** %encodingName.addr, align 8, !dbg !2575, !tbaa !2289
  %tobool66 = icmp ne i8* %99, null, !dbg !2575
  br i1 %tobool66, label %land.lhs.true, label %if.end.69, !dbg !2577

land.lhs.true:                                    ; preds = %if.end.63
  %100 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2578, !tbaa !2289
  %m_protocolEncodingName = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %100, i32 0, i32 37, !dbg !2580
  %101 = load i8*, i8** %m_protocolEncodingName, align 8, !dbg !2580, !tbaa !2581
  %tobool67 = icmp ne i8* %101, null, !dbg !2582
  br i1 %tobool67, label %if.end.69, label %if.then.68, !dbg !2583

if.then.68:                                       ; preds = %land.lhs.true
  %102 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2584, !tbaa !2289
  call void @PyExpat_XML_ParserFree(%struct.XML_ParserStruct* %102), !dbg !2586
  store %struct.XML_ParserStruct* null, %struct.XML_ParserStruct** %retval, !dbg !2587
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2587

if.end.69:                                        ; preds = %land.lhs.true, %if.end.63
  %103 = load i8*, i8** %nameSep.addr, align 8, !dbg !2588, !tbaa !2289
  %tobool70 = icmp ne i8* %103, null, !dbg !2588
  br i1 %tobool70, label %if.then.71, label %if.else.75, !dbg !2590

if.then.71:                                       ; preds = %if.end.69
  %104 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2591, !tbaa !2289
  %m_ns72 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %104, i32 0, i32 38, !dbg !2593
  store i8 1, i8* %m_ns72, align 1, !dbg !2594, !tbaa !2545
  %call73 = call %struct.encoding* @PyExpat_XmlGetUtf8InternalEncodingNS(), !dbg !2595
  %105 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2596, !tbaa !2289
  %m_internalEncoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %105, i32 0, i32 36, !dbg !2597
  store %struct.encoding* %call73, %struct.encoding** %m_internalEncoding, align 8, !dbg !2598, !tbaa !2599
  %106 = load i8*, i8** %nameSep.addr, align 8, !dbg !2600, !tbaa !2289
  %107 = load i8, i8* %106, align 1, !dbg !2601, !tbaa !2307
  %108 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2602, !tbaa !2289
  %m_namespaceSeparator74 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %108, i32 0, i32 83, !dbg !2603
  store i8 %107, i8* %m_namespaceSeparator74, align 1, !dbg !2604, !tbaa !2541
  br label %if.end.78, !dbg !2605

if.else.75:                                       ; preds = %if.end.69
  %call76 = call %struct.encoding* @PyExpat_XmlGetUtf8InternalEncoding(), !dbg !2606
  %109 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2608, !tbaa !2289
  %m_internalEncoding77 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %109, i32 0, i32 36, !dbg !2609
  store %struct.encoding* %call76, %struct.encoding** %m_internalEncoding77, align 8, !dbg !2610, !tbaa !2599
  br label %if.end.78

if.end.78:                                        ; preds = %if.else.75, %if.then.71
  %110 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !2611, !tbaa !2289
  store %struct.XML_ParserStruct* %110, %struct.XML_ParserStruct** %retval, !dbg !2612
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2612

cleanup:                                          ; preds = %if.end.78, %if.then.68, %if.then.53, %if.then.36, %if.then.26, %if.then.17
  %111 = bitcast %struct.XML_ParserStruct** %parser to i8*, !dbg !2613
  call void @llvm.lifetime.end(i64 8, i8* %111) #2, !dbg !2613
  %112 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %retval, !dbg !2613
  ret %struct.XML_ParserStruct* %112, !dbg !2613
}

; Function Attrs: nounwind uwtable
define zeroext i8 @PyExpat_XML_ParserReset(%struct.XML_ParserStruct* %parser, i8* %encodingName) #0 {
entry:
  %retval = alloca i8, align 1
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %encodingName.addr = alloca i8*, align 8
  %tStk = alloca %struct.tag*, align 8
  %openEntityList = alloca %struct.open_internal_entity*, align 8
  %cleanup.dest.slot = alloca i32
  %tag = alloca %struct.tag*, align 8
  %openEntity = alloca %struct.open_internal_entity*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !682, metadata !2293), !dbg !2614
  store i8* %encodingName, i8** %encodingName.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %encodingName.addr, metadata !683, metadata !2293), !dbg !2615
  %0 = bitcast %struct.tag** %tStk to i8*, !dbg !2616
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !2616
  call void @llvm.dbg.declare(metadata %struct.tag** %tStk, metadata !684, metadata !2293), !dbg !2617
  %1 = bitcast %struct.open_internal_entity** %openEntityList to i8*, !dbg !2618
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !2618
  call void @llvm.dbg.declare(metadata %struct.open_internal_entity** %openEntityList, metadata !685, metadata !2293), !dbg !2619
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2620, !tbaa !2289
  %m_parentParser = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 84, !dbg !2622
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %m_parentParser, align 8, !dbg !2622, !tbaa !2623
  %tobool = icmp ne %struct.XML_ParserStruct* %3, null, !dbg !2624
  br i1 %tobool, label %if.then, label %if.end, !dbg !2625

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, !dbg !2626
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2626

if.end:                                           ; preds = %entry
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2627, !tbaa !2289
  %m_tagStack = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 67, !dbg !2628
  %5 = load %struct.tag*, %struct.tag** %m_tagStack, align 8, !dbg !2628, !tbaa !2629
  store %struct.tag* %5, %struct.tag** %tStk, align 8, !dbg !2630, !tbaa !2289
  br label %while.cond, !dbg !2631

while.cond:                                       ; preds = %while.body, %if.end
  %6 = load %struct.tag*, %struct.tag** %tStk, align 8, !dbg !2632, !tbaa !2289
  %tobool1 = icmp ne %struct.tag* %6, null, !dbg !2631
  br i1 %tobool1, label %while.body, label %while.end, !dbg !2631

while.body:                                       ; preds = %while.cond
  %7 = bitcast %struct.tag** %tag to i8*, !dbg !2635
  call void @llvm.lifetime.start(i64 8, i8* %7) #2, !dbg !2635
  call void @llvm.dbg.declare(metadata %struct.tag** %tag, metadata !686, metadata !2293), !dbg !2636
  %8 = load %struct.tag*, %struct.tag** %tStk, align 8, !dbg !2637, !tbaa !2289
  store %struct.tag* %8, %struct.tag** %tag, align 8, !dbg !2636, !tbaa !2289
  %9 = load %struct.tag*, %struct.tag** %tStk, align 8, !dbg !2638, !tbaa !2289
  %parent = getelementptr inbounds %struct.tag, %struct.tag* %9, i32 0, i32 0, !dbg !2639
  %10 = load %struct.tag*, %struct.tag** %parent, align 8, !dbg !2639, !tbaa !2640
  store %struct.tag* %10, %struct.tag** %tStk, align 8, !dbg !2643, !tbaa !2289
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2644, !tbaa !2289
  %m_freeTagList = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 68, !dbg !2645
  %12 = load %struct.tag*, %struct.tag** %m_freeTagList, align 8, !dbg !2645, !tbaa !2517
  %13 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !2646, !tbaa !2289
  %parent2 = getelementptr inbounds %struct.tag, %struct.tag* %13, i32 0, i32 0, !dbg !2647
  store %struct.tag* %12, %struct.tag** %parent2, align 8, !dbg !2648, !tbaa !2640
  %14 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2649, !tbaa !2289
  %15 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !2650, !tbaa !2289
  %bindings = getelementptr inbounds %struct.tag, %struct.tag* %15, i32 0, i32 6, !dbg !2651
  %16 = load %struct.binding*, %struct.binding** %bindings, align 8, !dbg !2651, !tbaa !2652
  call void @moveToFreeBindingList(%struct.XML_ParserStruct* %14, %struct.binding* %16), !dbg !2653
  %17 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !2654, !tbaa !2289
  %bindings3 = getelementptr inbounds %struct.tag, %struct.tag* %17, i32 0, i32 6, !dbg !2655
  store %struct.binding* null, %struct.binding** %bindings3, align 8, !dbg !2656, !tbaa !2652
  %18 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !2657, !tbaa !2289
  %19 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2658, !tbaa !2289
  %m_freeTagList4 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %19, i32 0, i32 68, !dbg !2659
  store %struct.tag* %18, %struct.tag** %m_freeTagList4, align 8, !dbg !2660, !tbaa !2517
  %20 = bitcast %struct.tag** %tag to i8*, !dbg !2661
  call void @llvm.lifetime.end(i64 8, i8* %20) #2, !dbg !2661
  br label %while.cond, !dbg !2631

while.end:                                        ; preds = %while.cond
  %21 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2662, !tbaa !2289
  %m_openInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %21, i32 0, i32 50, !dbg !2663
  %22 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities, align 8, !dbg !2663, !tbaa !2664
  store %struct.open_internal_entity* %22, %struct.open_internal_entity** %openEntityList, align 8, !dbg !2665, !tbaa !2289
  br label %while.cond.5, !dbg !2666

while.cond.5:                                     ; preds = %while.body.7, %while.end
  %23 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntityList, align 8, !dbg !2667, !tbaa !2289
  %tobool6 = icmp ne %struct.open_internal_entity* %23, null, !dbg !2666
  br i1 %tobool6, label %while.body.7, label %while.end.10, !dbg !2666

while.body.7:                                     ; preds = %while.cond.5
  %24 = bitcast %struct.open_internal_entity** %openEntity to i8*, !dbg !2668
  call void @llvm.lifetime.start(i64 8, i8* %24) #2, !dbg !2668
  call void @llvm.dbg.declare(metadata %struct.open_internal_entity** %openEntity, metadata !688, metadata !2293), !dbg !2669
  %25 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntityList, align 8, !dbg !2670, !tbaa !2289
  store %struct.open_internal_entity* %25, %struct.open_internal_entity** %openEntity, align 8, !dbg !2669, !tbaa !2289
  %26 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !2671, !tbaa !2289
  %next = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %26, i32 0, i32 2, !dbg !2672
  %27 = load %struct.open_internal_entity*, %struct.open_internal_entity** %next, align 8, !dbg !2672, !tbaa !2673
  store %struct.open_internal_entity* %27, %struct.open_internal_entity** %openEntityList, align 8, !dbg !2675, !tbaa !2289
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2676, !tbaa !2289
  %m_freeInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %28, i32 0, i32 51, !dbg !2677
  %29 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_freeInternalEntities, align 8, !dbg !2677, !tbaa !2521
  %30 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !2678, !tbaa !2289
  %next8 = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %30, i32 0, i32 2, !dbg !2679
  store %struct.open_internal_entity* %29, %struct.open_internal_entity** %next8, align 8, !dbg !2680, !tbaa !2673
  %31 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !2681, !tbaa !2289
  %32 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2682, !tbaa !2289
  %m_freeInternalEntities9 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %32, i32 0, i32 51, !dbg !2683
  store %struct.open_internal_entity* %31, %struct.open_internal_entity** %m_freeInternalEntities9, align 8, !dbg !2684, !tbaa !2521
  %33 = bitcast %struct.open_internal_entity** %openEntity to i8*, !dbg !2685
  call void @llvm.lifetime.end(i64 8, i8* %33) #2, !dbg !2685
  br label %while.cond.5, !dbg !2666

while.end.10:                                     ; preds = %while.cond.5
  %34 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2686, !tbaa !2289
  %35 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2687, !tbaa !2289
  %m_inheritedBindings = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %35, i32 0, i32 69, !dbg !2688
  %36 = load %struct.binding*, %struct.binding** %m_inheritedBindings, align 8, !dbg !2688, !tbaa !2689
  call void @moveToFreeBindingList(%struct.XML_ParserStruct* %34, %struct.binding* %36), !dbg !2690
  %37 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2691, !tbaa !2289
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %37, i32 0, i32 3, !dbg !2692
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 2, !dbg !2693
  %38 = load void (i8*)*, void (i8*)** %free_fcn, align 8, !dbg !2693, !tbaa !2435
  %39 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2694, !tbaa !2289
  %m_unknownEncodingMem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %39, i32 0, i32 40, !dbg !2695
  %40 = load i8*, i8** %m_unknownEncodingMem, align 8, !dbg !2695, !tbaa !2696
  call void %38(i8* %40), !dbg !2691
  %41 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2697, !tbaa !2289
  %m_unknownEncodingRelease = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %41, i32 0, i32 43, !dbg !2699
  %42 = load void (i8*)*, void (i8*)** %m_unknownEncodingRelease, align 8, !dbg !2699, !tbaa !2700
  %tobool11 = icmp ne void (i8*)* %42, null, !dbg !2701
  br i1 %tobool11, label %if.then.12, label %if.end.14, !dbg !2702

if.then.12:                                       ; preds = %while.end.10
  %43 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2703, !tbaa !2289
  %m_unknownEncodingRelease13 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %43, i32 0, i32 43, !dbg !2704
  %44 = load void (i8*)*, void (i8*)** %m_unknownEncodingRelease13, align 8, !dbg !2704, !tbaa !2700
  %45 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2705, !tbaa !2289
  %m_unknownEncodingData = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %45, i32 0, i32 41, !dbg !2706
  %46 = load i8*, i8** %m_unknownEncodingData, align 8, !dbg !2706, !tbaa !2707
  call void %44(i8* %46), !dbg !2708
  br label %if.end.14, !dbg !2708

if.end.14:                                        ; preds = %if.then.12, %while.end.10
  %47 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2709, !tbaa !2289
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %47, i32 0, i32 79, !dbg !2710
  call void @poolClear(%struct.STRING_POOL* %m_tempPool), !dbg !2711
  %48 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2712, !tbaa !2289
  %m_temp2Pool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %48, i32 0, i32 80, !dbg !2713
  call void @poolClear(%struct.STRING_POOL* %m_temp2Pool), !dbg !2714
  %49 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2715, !tbaa !2289
  %50 = load i8*, i8** %encodingName.addr, align 8, !dbg !2716, !tbaa !2289
  call void @parserInit(%struct.XML_ParserStruct* %49, i8* %50), !dbg !2717
  %51 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2718, !tbaa !2289
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %51, i32 0, i32 65, !dbg !2719
  %52 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !2719, !tbaa !2478
  %53 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2720, !tbaa !2289
  %m_mem15 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %53, i32 0, i32 3, !dbg !2721
  call void @dtdReset(%struct.DTD* %52, %struct.XML_Memory_Handling_Suite* %m_mem15), !dbg !2722
  store i8 1, i8* %retval, !dbg !2723
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2723

cleanup:                                          ; preds = %if.end.14, %if.then
  %54 = bitcast %struct.open_internal_entity** %openEntityList to i8*, !dbg !2724
  call void @llvm.lifetime.end(i64 8, i8* %54) #2, !dbg !2724
  %55 = bitcast %struct.tag** %tStk to i8*, !dbg !2724
  call void @llvm.lifetime.end(i64 8, i8* %55) #2, !dbg !2724
  %56 = load i8, i8* %retval, !dbg !2724
  ret i8 %56, !dbg !2724
}

; Function Attrs: nounwind uwtable
define internal void @moveToFreeBindingList(%struct.XML_ParserStruct* %parser, %struct.binding* %bindings) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %bindings.addr = alloca %struct.binding*, align 8
  %b = alloca %struct.binding*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1158, metadata !2293), !dbg !2725
  store %struct.binding* %bindings, %struct.binding** %bindings.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.binding** %bindings.addr, metadata !1159, metadata !2293), !dbg !2726
  br label %while.cond, !dbg !2727

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.binding*, %struct.binding** %bindings.addr, align 8, !dbg !2728, !tbaa !2289
  %tobool = icmp ne %struct.binding* %0, null, !dbg !2727
  br i1 %tobool, label %while.body, label %while.end, !dbg !2727

while.body:                                       ; preds = %while.cond
  %1 = bitcast %struct.binding** %b to i8*, !dbg !2731
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !2731
  call void @llvm.dbg.declare(metadata %struct.binding** %b, metadata !1160, metadata !2293), !dbg !2732
  %2 = load %struct.binding*, %struct.binding** %bindings.addr, align 8, !dbg !2733, !tbaa !2289
  store %struct.binding* %2, %struct.binding** %b, align 8, !dbg !2732, !tbaa !2289
  %3 = load %struct.binding*, %struct.binding** %bindings.addr, align 8, !dbg !2734, !tbaa !2289
  %nextTagBinding = getelementptr inbounds %struct.binding, %struct.binding* %3, i32 0, i32 1, !dbg !2735
  %4 = load %struct.binding*, %struct.binding** %nextTagBinding, align 8, !dbg !2735, !tbaa !2736
  store %struct.binding* %4, %struct.binding** %bindings.addr, align 8, !dbg !2738, !tbaa !2289
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2739, !tbaa !2289
  %m_freeBindingList = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 70, !dbg !2740
  %6 = load %struct.binding*, %struct.binding** %m_freeBindingList, align 8, !dbg !2740, !tbaa !2513
  %7 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !2741, !tbaa !2289
  %nextTagBinding1 = getelementptr inbounds %struct.binding, %struct.binding* %7, i32 0, i32 1, !dbg !2742
  store %struct.binding* %6, %struct.binding** %nextTagBinding1, align 8, !dbg !2743, !tbaa !2736
  %8 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !2744, !tbaa !2289
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2745, !tbaa !2289
  %m_freeBindingList2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 70, !dbg !2746
  store %struct.binding* %8, %struct.binding** %m_freeBindingList2, align 8, !dbg !2747, !tbaa !2513
  %10 = bitcast %struct.binding** %b to i8*, !dbg !2748
  call void @llvm.lifetime.end(i64 8, i8* %10) #2, !dbg !2748
  br label %while.cond, !dbg !2727

while.end:                                        ; preds = %while.cond
  ret void, !dbg !2749
}

; Function Attrs: nounwind uwtable
define internal void @poolClear(%struct.STRING_POOL* %pool) #0 {
entry:
  %pool.addr = alloca %struct.STRING_POOL*, align 8
  %p = alloca %struct.block*, align 8
  %tem = alloca %struct.block*, align 8
  store %struct.STRING_POOL* %pool, %struct.STRING_POOL** %pool.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.STRING_POOL** %pool.addr, metadata !2215, metadata !2293), !dbg !2750
  %0 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !2751, !tbaa !2289
  %freeBlocks = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %0, i32 0, i32 1, !dbg !2752
  %1 = load %struct.block*, %struct.block** %freeBlocks, align 8, !dbg !2752, !tbaa !2753
  %tobool = icmp ne %struct.block* %1, null, !dbg !2751
  br i1 %tobool, label %if.else, label %if.then, !dbg !2754

if.then:                                          ; preds = %entry
  %2 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !2755, !tbaa !2289
  %blocks = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %2, i32 0, i32 0, !dbg !2756
  %3 = load %struct.block*, %struct.block** %blocks, align 8, !dbg !2756, !tbaa !2757
  %4 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !2758, !tbaa !2289
  %freeBlocks1 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %4, i32 0, i32 1, !dbg !2759
  store %struct.block* %3, %struct.block** %freeBlocks1, align 8, !dbg !2760, !tbaa !2753
  br label %if.end, !dbg !2758

if.else:                                          ; preds = %entry
  %5 = bitcast %struct.block** %p to i8*, !dbg !2761
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !2761
  call void @llvm.dbg.declare(metadata %struct.block** %p, metadata !2216, metadata !2293), !dbg !2762
  %6 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !2763, !tbaa !2289
  %blocks2 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %6, i32 0, i32 0, !dbg !2764
  %7 = load %struct.block*, %struct.block** %blocks2, align 8, !dbg !2764, !tbaa !2757
  store %struct.block* %7, %struct.block** %p, align 8, !dbg !2762, !tbaa !2289
  br label %while.cond, !dbg !2765

while.cond:                                       ; preds = %while.body, %if.else
  %8 = load %struct.block*, %struct.block** %p, align 8, !dbg !2766, !tbaa !2289
  %tobool3 = icmp ne %struct.block* %8, null, !dbg !2765
  br i1 %tobool3, label %while.body, label %while.end, !dbg !2765

while.body:                                       ; preds = %while.cond
  %9 = bitcast %struct.block** %tem to i8*, !dbg !2769
  call void @llvm.lifetime.start(i64 8, i8* %9) #2, !dbg !2769
  call void @llvm.dbg.declare(metadata %struct.block** %tem, metadata !2219, metadata !2293), !dbg !2770
  %10 = load %struct.block*, %struct.block** %p, align 8, !dbg !2771, !tbaa !2289
  %next = getelementptr inbounds %struct.block, %struct.block* %10, i32 0, i32 0, !dbg !2772
  %11 = load %struct.block*, %struct.block** %next, align 8, !dbg !2772, !tbaa !2773
  store %struct.block* %11, %struct.block** %tem, align 8, !dbg !2770, !tbaa !2289
  %12 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !2775, !tbaa !2289
  %freeBlocks4 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %12, i32 0, i32 1, !dbg !2776
  %13 = load %struct.block*, %struct.block** %freeBlocks4, align 8, !dbg !2776, !tbaa !2753
  %14 = load %struct.block*, %struct.block** %p, align 8, !dbg !2777, !tbaa !2289
  %next5 = getelementptr inbounds %struct.block, %struct.block* %14, i32 0, i32 0, !dbg !2778
  store %struct.block* %13, %struct.block** %next5, align 8, !dbg !2779, !tbaa !2773
  %15 = load %struct.block*, %struct.block** %p, align 8, !dbg !2780, !tbaa !2289
  %16 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !2781, !tbaa !2289
  %freeBlocks6 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %16, i32 0, i32 1, !dbg !2782
  store %struct.block* %15, %struct.block** %freeBlocks6, align 8, !dbg !2783, !tbaa !2753
  %17 = load %struct.block*, %struct.block** %tem, align 8, !dbg !2784, !tbaa !2289
  store %struct.block* %17, %struct.block** %p, align 8, !dbg !2785, !tbaa !2289
  %18 = bitcast %struct.block** %tem to i8*, !dbg !2786
  call void @llvm.lifetime.end(i64 8, i8* %18) #2, !dbg !2786
  br label %while.cond, !dbg !2765

while.end:                                        ; preds = %while.cond
  %19 = bitcast %struct.block** %p to i8*, !dbg !2787
  call void @llvm.lifetime.end(i64 8, i8* %19) #2, !dbg !2787
  br label %if.end

if.end:                                           ; preds = %while.end, %if.then
  %20 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !2788, !tbaa !2289
  %blocks7 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %20, i32 0, i32 0, !dbg !2789
  store %struct.block* null, %struct.block** %blocks7, align 8, !dbg !2790, !tbaa !2757
  %21 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !2791, !tbaa !2289
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %21, i32 0, i32 4, !dbg !2792
  store i8* null, i8** %start, align 8, !dbg !2793, !tbaa !2794
  %22 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !2795, !tbaa !2289
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %22, i32 0, i32 3, !dbg !2796
  store i8* null, i8** %ptr, align 8, !dbg !2797, !tbaa !2798
  %23 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !2799, !tbaa !2289
  %end = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %23, i32 0, i32 2, !dbg !2800
  store i8* null, i8** %end, align 8, !dbg !2801, !tbaa !2802
  ret void, !dbg !2803
}

; Function Attrs: nounwind uwtable
define internal void @parserInit(%struct.XML_ParserStruct* %parser, i8* %encodingName) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %encodingName.addr = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1166, metadata !2293), !dbg !2804
  store i8* %encodingName, i8** %encodingName.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %encodingName.addr, metadata !1167, metadata !2293), !dbg !2805
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2806, !tbaa !2289
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 45, !dbg !2807
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @prologInitProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8, !dbg !2808, !tbaa !2809
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2810, !tbaa !2289
  %m_prologState = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 44, !dbg !2811
  call void @PyExpat_XmlPrologStateInit(%struct.prolog_state* %m_prologState), !dbg !2812
  %2 = load i8*, i8** %encodingName.addr, align 8, !dbg !2813, !tbaa !2289
  %cmp = icmp ne i8* %2, null, !dbg !2814
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !2813

cond.true:                                        ; preds = %entry
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2815, !tbaa !2289
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 79, !dbg !2816
  %4 = load i8*, i8** %encodingName.addr, align 8, !dbg !2817, !tbaa !2289
  %call = call i8* @poolCopyString(%struct.STRING_POOL* %m_tempPool, i8* %4), !dbg !2818
  br label %cond.end, !dbg !2813

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !2819

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ null, %cond.false ], !dbg !2813
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2821, !tbaa !2289
  %m_protocolEncodingName = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 37, !dbg !2824
  store i8* %cond, i8** %m_protocolEncodingName, align 8, !dbg !2825, !tbaa !2581
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2826, !tbaa !2289
  %m_curBase = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 66, !dbg !2827
  store i8* null, i8** %m_curBase, align 8, !dbg !2828, !tbaa !2829
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2830, !tbaa !2289
  %m_initEncoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 35, !dbg !2831
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2832, !tbaa !2289
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 34, !dbg !2833
  %call1 = call i32 @PyExpat_XmlInitEncoding(%struct.INIT_ENCODING* %m_initEncoding, %struct.encoding** %m_encoding, i8* null), !dbg !2834
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2835, !tbaa !2289
  %m_userData = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 0, !dbg !2836
  store i8* null, i8** %m_userData, align 8, !dbg !2837, !tbaa !2838
  %10 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2839, !tbaa !2289
  %m_handlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %10, i32 0, i32 1, !dbg !2840
  store i8* null, i8** %m_handlerArg, align 8, !dbg !2841, !tbaa !2842
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2843, !tbaa !2289
  %m_startElementHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 11, !dbg !2844
  store void (i8*, i8*, i8**)* null, void (i8*, i8*, i8**)** %m_startElementHandler, align 8, !dbg !2845, !tbaa !2846
  %12 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2847, !tbaa !2289
  %m_endElementHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %12, i32 0, i32 12, !dbg !2848
  store void (i8*, i8*)* null, void (i8*, i8*)** %m_endElementHandler, align 8, !dbg !2849, !tbaa !2850
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2851, !tbaa !2289
  %m_characterDataHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 13, !dbg !2852
  store void (i8*, i8*, i32)* null, void (i8*, i8*, i32)** %m_characterDataHandler, align 8, !dbg !2853, !tbaa !2854
  %14 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2855, !tbaa !2289
  %m_processingInstructionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %14, i32 0, i32 14, !dbg !2856
  store void (i8*, i8*, i8*)* null, void (i8*, i8*, i8*)** %m_processingInstructionHandler, align 8, !dbg !2857, !tbaa !2858
  %15 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2859, !tbaa !2289
  %m_commentHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %15, i32 0, i32 15, !dbg !2860
  store void (i8*, i8*)* null, void (i8*, i8*)** %m_commentHandler, align 8, !dbg !2861, !tbaa !2862
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2863, !tbaa !2289
  %m_startCdataSectionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 16, !dbg !2864
  store void (i8*)* null, void (i8*)** %m_startCdataSectionHandler, align 8, !dbg !2865, !tbaa !2866
  %17 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2867, !tbaa !2289
  %m_endCdataSectionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %17, i32 0, i32 17, !dbg !2868
  store void (i8*)* null, void (i8*)** %m_endCdataSectionHandler, align 8, !dbg !2869, !tbaa !2870
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2871, !tbaa !2289
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 18, !dbg !2872
  store void (i8*, i8*, i32)* null, void (i8*, i8*, i32)** %m_defaultHandler, align 8, !dbg !2873, !tbaa !2874
  %19 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2875, !tbaa !2289
  %m_startDoctypeDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %19, i32 0, i32 19, !dbg !2876
  store void (i8*, i8*, i8*, i8*, i32)* null, void (i8*, i8*, i8*, i8*, i32)** %m_startDoctypeDeclHandler, align 8, !dbg !2877, !tbaa !2878
  %20 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2879, !tbaa !2289
  %m_endDoctypeDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %20, i32 0, i32 20, !dbg !2880
  store void (i8*)* null, void (i8*)** %m_endDoctypeDeclHandler, align 8, !dbg !2881, !tbaa !2882
  %21 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2883, !tbaa !2289
  %m_unparsedEntityDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %21, i32 0, i32 21, !dbg !2884
  store void (i8*, i8*, i8*, i8*, i8*, i8*)* null, void (i8*, i8*, i8*, i8*, i8*, i8*)** %m_unparsedEntityDeclHandler, align 8, !dbg !2885, !tbaa !2886
  %22 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2887, !tbaa !2289
  %m_notationDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %22, i32 0, i32 22, !dbg !2888
  store void (i8*, i8*, i8*, i8*, i8*)* null, void (i8*, i8*, i8*, i8*, i8*)** %m_notationDeclHandler, align 8, !dbg !2889, !tbaa !2890
  %23 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2891, !tbaa !2289
  %m_startNamespaceDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %23, i32 0, i32 23, !dbg !2892
  store void (i8*, i8*, i8*)* null, void (i8*, i8*, i8*)** %m_startNamespaceDeclHandler, align 8, !dbg !2893, !tbaa !2894
  %24 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2895, !tbaa !2289
  %m_endNamespaceDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %24, i32 0, i32 24, !dbg !2896
  store void (i8*, i8*)* null, void (i8*, i8*)** %m_endNamespaceDeclHandler, align 8, !dbg !2897, !tbaa !2898
  %25 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2899, !tbaa !2289
  %m_notStandaloneHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %25, i32 0, i32 25, !dbg !2900
  store i32 (i8*)* null, i32 (i8*)** %m_notStandaloneHandler, align 8, !dbg !2901, !tbaa !2902
  %26 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2903, !tbaa !2289
  %m_externalEntityRefHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %26, i32 0, i32 26, !dbg !2904
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)* null, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %m_externalEntityRefHandler, align 8, !dbg !2905, !tbaa !2906
  %27 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2907, !tbaa !2289
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2908, !tbaa !2289
  %m_externalEntityRefHandlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %28, i32 0, i32 27, !dbg !2909
  store %struct.XML_ParserStruct* %27, %struct.XML_ParserStruct** %m_externalEntityRefHandlerArg, align 8, !dbg !2910, !tbaa !2911
  %29 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2912, !tbaa !2289
  %m_skippedEntityHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %29, i32 0, i32 28, !dbg !2913
  store void (i8*, i8*, i32)* null, void (i8*, i8*, i32)** %m_skippedEntityHandler, align 8, !dbg !2914, !tbaa !2915
  %30 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2916, !tbaa !2289
  %m_elementDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %30, i32 0, i32 30, !dbg !2917
  store void (i8*, i8*, %struct.XML_cp*)* null, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler, align 8, !dbg !2918, !tbaa !2919
  %31 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2920, !tbaa !2289
  %m_attlistDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %31, i32 0, i32 31, !dbg !2921
  store void (i8*, i8*, i8*, i8*, i8*, i32)* null, void (i8*, i8*, i8*, i8*, i8*, i32)** %m_attlistDeclHandler, align 8, !dbg !2922, !tbaa !2923
  %32 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2924, !tbaa !2289
  %m_entityDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %32, i32 0, i32 32, !dbg !2925
  store void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* null, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler, align 8, !dbg !2926, !tbaa !2927
  %33 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2928, !tbaa !2289
  %m_xmlDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %33, i32 0, i32 33, !dbg !2929
  store void (i8*, i8*, i8*, i32)* null, void (i8*, i8*, i8*, i32)** %m_xmlDeclHandler, align 8, !dbg !2930, !tbaa !2931
  %34 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2932, !tbaa !2289
  %m_buffer = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %34, i32 0, i32 2, !dbg !2933
  %35 = load i8*, i8** %m_buffer, align 8, !dbg !2933, !tbaa !2395
  %36 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2934, !tbaa !2289
  %m_bufferPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %36, i32 0, i32 4, !dbg !2935
  store i8* %35, i8** %m_bufferPtr, align 8, !dbg !2936, !tbaa !2937
  %37 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2938, !tbaa !2289
  %m_buffer2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %37, i32 0, i32 2, !dbg !2939
  %38 = load i8*, i8** %m_buffer2, align 8, !dbg !2939, !tbaa !2395
  %39 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2940, !tbaa !2289
  %m_bufferEnd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %39, i32 0, i32 5, !dbg !2941
  store i8* %38, i8** %m_bufferEnd, align 8, !dbg !2942, !tbaa !2943
  %40 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2944, !tbaa !2289
  %m_parseEndByteIndex = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %40, i32 0, i32 7, !dbg !2945
  store i64 0, i64* %m_parseEndByteIndex, align 8, !dbg !2946, !tbaa !2947
  %41 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2948, !tbaa !2289
  %m_parseEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %41, i32 0, i32 8, !dbg !2949
  store i8* null, i8** %m_parseEndPtr, align 8, !dbg !2950, !tbaa !2951
  %42 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2952, !tbaa !2289
  %m_declElementType = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %42, i32 0, i32 61, !dbg !2953
  store %struct.ELEMENT_TYPE* null, %struct.ELEMENT_TYPE** %m_declElementType, align 8, !dbg !2954, !tbaa !2955
  %43 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2956, !tbaa !2289
  %m_declAttributeId = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %43, i32 0, i32 62, !dbg !2957
  store %struct.attribute_id* null, %struct.attribute_id** %m_declAttributeId, align 8, !dbg !2958, !tbaa !2959
  %44 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2960, !tbaa !2289
  %m_declEntity = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %44, i32 0, i32 54, !dbg !2961
  store %struct.ENTITY* null, %struct.ENTITY** %m_declEntity, align 8, !dbg !2962, !tbaa !2963
  %45 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2964, !tbaa !2289
  %m_doctypeName = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %45, i32 0, i32 55, !dbg !2965
  store i8* null, i8** %m_doctypeName, align 8, !dbg !2966, !tbaa !2967
  %46 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2968, !tbaa !2289
  %m_doctypeSysid = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %46, i32 0, i32 56, !dbg !2969
  store i8* null, i8** %m_doctypeSysid, align 8, !dbg !2970, !tbaa !2971
  %47 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2972, !tbaa !2289
  %m_doctypePubid = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %47, i32 0, i32 57, !dbg !2973
  store i8* null, i8** %m_doctypePubid, align 8, !dbg !2974, !tbaa !2975
  %48 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2976, !tbaa !2289
  %m_declAttributeType = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %48, i32 0, i32 58, !dbg !2977
  store i8* null, i8** %m_declAttributeType, align 8, !dbg !2978, !tbaa !2979
  %49 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2980, !tbaa !2289
  %m_declNotationName = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %49, i32 0, i32 59, !dbg !2981
  store i8* null, i8** %m_declNotationName, align 8, !dbg !2982, !tbaa !2983
  %50 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2984, !tbaa !2289
  %m_declNotationPublicId = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %50, i32 0, i32 60, !dbg !2985
  store i8* null, i8** %m_declNotationPublicId, align 8, !dbg !2986, !tbaa !2987
  %51 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2988, !tbaa !2289
  %m_declAttributeIsCdata = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %51, i32 0, i32 63, !dbg !2989
  store i8 0, i8* %m_declAttributeIsCdata, align 1, !dbg !2990, !tbaa !2991
  %52 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2992, !tbaa !2289
  %m_declAttributeIsId = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %52, i32 0, i32 64, !dbg !2993
  store i8 0, i8* %m_declAttributeIsId, align 1, !dbg !2994, !tbaa !2995
  %53 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2996, !tbaa !2289
  %m_position = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %53, i32 0, i32 78, !dbg !2997
  %54 = bitcast %struct.position* %m_position to i8*, !dbg !2998
  call void @llvm.memset.p0i8.i64(i8* %54, i8 0, i64 16, i32 8, i1 false), !dbg !2998
  %55 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2999, !tbaa !2289
  %m_errorCode = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %55, i32 0, i32 46, !dbg !3000
  store i32 0, i32* %m_errorCode, align 4, !dbg !3001, !tbaa !3002
  %56 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3003, !tbaa !2289
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %56, i32 0, i32 47, !dbg !3004
  store i8* null, i8** %m_eventPtr, align 8, !dbg !3005, !tbaa !3006
  %57 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3007, !tbaa !2289
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %57, i32 0, i32 48, !dbg !3008
  store i8* null, i8** %m_eventEndPtr, align 8, !dbg !3009, !tbaa !3010
  %58 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3011, !tbaa !2289
  %m_positionPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %58, i32 0, i32 49, !dbg !3012
  store i8* null, i8** %m_positionPtr, align 8, !dbg !3013, !tbaa !3014
  %59 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3015, !tbaa !2289
  %m_openInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %59, i32 0, i32 50, !dbg !3016
  store %struct.open_internal_entity* null, %struct.open_internal_entity** %m_openInternalEntities, align 8, !dbg !3017, !tbaa !2664
  %60 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3018, !tbaa !2289
  %m_defaultExpandInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %60, i32 0, i32 52, !dbg !3019
  store i8 1, i8* %m_defaultExpandInternalEntities, align 1, !dbg !3020, !tbaa !3021
  %61 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3022, !tbaa !2289
  %m_tagLevel = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %61, i32 0, i32 53, !dbg !3023
  store i32 0, i32* %m_tagLevel, align 4, !dbg !3024, !tbaa !3025
  %62 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3026, !tbaa !2289
  %m_tagStack = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %62, i32 0, i32 67, !dbg !3027
  store %struct.tag* null, %struct.tag** %m_tagStack, align 8, !dbg !3028, !tbaa !2629
  %63 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3029, !tbaa !2289
  %m_inheritedBindings = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %63, i32 0, i32 69, !dbg !3030
  store %struct.binding* null, %struct.binding** %m_inheritedBindings, align 8, !dbg !3031, !tbaa !2689
  %64 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3032, !tbaa !2289
  %m_nSpecifiedAtts = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %64, i32 0, i32 72, !dbg !3033
  store i32 0, i32* %m_nSpecifiedAtts, align 4, !dbg !3034, !tbaa !3035
  %65 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3036, !tbaa !2289
  %m_unknownEncodingMem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %65, i32 0, i32 40, !dbg !3037
  store i8* null, i8** %m_unknownEncodingMem, align 8, !dbg !3038, !tbaa !2696
  %66 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3039, !tbaa !2289
  %m_unknownEncodingRelease = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %66, i32 0, i32 43, !dbg !3040
  store void (i8*)* null, void (i8*)** %m_unknownEncodingRelease, align 8, !dbg !3041, !tbaa !2700
  %67 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3042, !tbaa !2289
  %m_unknownEncodingData = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %67, i32 0, i32 41, !dbg !3043
  store i8* null, i8** %m_unknownEncodingData, align 8, !dbg !3044, !tbaa !2707
  %68 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3045, !tbaa !2289
  %m_parentParser = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %68, i32 0, i32 84, !dbg !3046
  store %struct.XML_ParserStruct* null, %struct.XML_ParserStruct** %m_parentParser, align 8, !dbg !3047, !tbaa !2623
  %69 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3048, !tbaa !2289
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %69, i32 0, i32 85, !dbg !3049
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0, !dbg !3050
  store i32 0, i32* %parsing, align 4, !dbg !3051, !tbaa !3052
  %70 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3053, !tbaa !2289
  %m_isParamEntity = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %70, i32 0, i32 86, !dbg !3054
  store i8 0, i8* %m_isParamEntity, align 1, !dbg !3055, !tbaa !3056
  %71 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3057, !tbaa !2289
  %m_useForeignDTD = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %71, i32 0, i32 87, !dbg !3058
  store i8 0, i8* %m_useForeignDTD, align 1, !dbg !3059, !tbaa !3060
  %72 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3061, !tbaa !2289
  %m_paramEntityParsing = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %72, i32 0, i32 88, !dbg !3062
  store i32 0, i32* %m_paramEntityParsing, align 4, !dbg !3063, !tbaa !3064
  %73 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3065, !tbaa !2289
  %m_hash_secret_salt = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %73, i32 0, i32 89, !dbg !3066
  store i64 0, i64* %m_hash_secret_salt, align 8, !dbg !3067, !tbaa !3068
  ret void, !dbg !3069
}

; Function Attrs: nounwind uwtable
define internal void @dtdReset(%struct.DTD* %p, %struct.XML_Memory_Handling_Suite* %ms) #0 {
entry:
  %p.addr = alloca %struct.DTD*, align 8
  %ms.addr = alloca %struct.XML_Memory_Handling_Suite*, align 8
  %iter = alloca %struct.HASH_TABLE_ITER, align 8
  %e = alloca %struct.ELEMENT_TYPE*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.DTD* %p, %struct.DTD** %p.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.DTD** %p.addr, metadata !2115, metadata !2293), !dbg !3070
  store %struct.XML_Memory_Handling_Suite* %ms, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_Memory_Handling_Suite** %ms.addr, metadata !2116, metadata !2293), !dbg !3071
  %0 = bitcast %struct.HASH_TABLE_ITER* %iter to i8*, !dbg !3072
  call void @llvm.lifetime.start(i64 16, i8* %0) #2, !dbg !3072
  call void @llvm.dbg.declare(metadata %struct.HASH_TABLE_ITER* %iter, metadata !2117, metadata !2293), !dbg !3073
  %1 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !3074, !tbaa !2289
  %elementTypes = getelementptr inbounds %struct.DTD, %struct.DTD* %1, i32 0, i32 1, !dbg !3075
  call void @hashTableIterInit(%struct.HASH_TABLE_ITER* %iter, %struct.HASH_TABLE* %elementTypes), !dbg !3076
  br label %for.cond, !dbg !3077

for.cond:                                         ; preds = %cleanup.cont, %entry
  %2 = bitcast %struct.ELEMENT_TYPE** %e to i8*, !dbg !3078
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !3078
  call void @llvm.dbg.declare(metadata %struct.ELEMENT_TYPE** %e, metadata !2118, metadata !2293), !dbg !3079
  %call = call %struct.NAMED* @hashTableIterNext(%struct.HASH_TABLE_ITER* %iter), !dbg !3080
  %3 = bitcast %struct.NAMED* %call to %struct.ELEMENT_TYPE*, !dbg !3081
  store %struct.ELEMENT_TYPE* %3, %struct.ELEMENT_TYPE** %e, align 8, !dbg !3079, !tbaa !2289
  %4 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %e, align 8, !dbg !3082, !tbaa !2289
  %tobool = icmp ne %struct.ELEMENT_TYPE* %4, null, !dbg !3082
  br i1 %tobool, label %if.end, label %if.then, !dbg !3084

if.then:                                          ; preds = %for.cond
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3085

if.end:                                           ; preds = %for.cond
  %5 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %e, align 8, !dbg !3086, !tbaa !2289
  %allocDefaultAtts = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %5, i32 0, i32 4, !dbg !3088
  %6 = load i32, i32* %allocDefaultAtts, align 4, !dbg !3088, !tbaa !3089
  %cmp = icmp ne i32 %6, 0, !dbg !3091
  br i1 %cmp, label %if.then.1, label %if.end.2, !dbg !3092

if.then.1:                                        ; preds = %if.end
  %7 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !dbg !3093, !tbaa !2289
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %7, i32 0, i32 2, !dbg !3094
  %8 = load void (i8*)*, void (i8*)** %free_fcn, align 8, !dbg !3094, !tbaa !2356
  %9 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %e, align 8, !dbg !3095, !tbaa !2289
  %defaultAtts = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %9, i32 0, i32 5, !dbg !3096
  %10 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts, align 8, !dbg !3096, !tbaa !3097
  %11 = bitcast %struct.DEFAULT_ATTRIBUTE* %10 to i8*, !dbg !3095
  call void %8(i8* %11), !dbg !3093
  br label %if.end.2, !dbg !3093

if.end.2:                                         ; preds = %if.then.1, %if.end
  store i32 0, i32* %cleanup.dest.slot, !dbg !3098
  br label %cleanup, !dbg !3098

cleanup:                                          ; preds = %if.end.2, %if.then
  %12 = bitcast %struct.ELEMENT_TYPE** %e to i8*, !dbg !3099
  call void @llvm.lifetime.end(i64 8, i8* %12) #2, !dbg !3099
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 2, label %for.end
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.cond, !dbg !3101

for.end:                                          ; preds = %cleanup
  %13 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !3102, !tbaa !2289
  %generalEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %13, i32 0, i32 0, !dbg !3103
  call void @hashTableClear(%struct.HASH_TABLE* %generalEntities), !dbg !3104
  %14 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !3105, !tbaa !2289
  %paramEntityRead = getelementptr inbounds %struct.DTD, %struct.DTD* %14, i32 0, i32 9, !dbg !3106
  store i8 0, i8* %paramEntityRead, align 1, !dbg !3107, !tbaa !3108
  %15 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !3112, !tbaa !2289
  %paramEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %15, i32 0, i32 10, !dbg !3113
  call void @hashTableClear(%struct.HASH_TABLE* %paramEntities), !dbg !3114
  %16 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !3115, !tbaa !2289
  %elementTypes3 = getelementptr inbounds %struct.DTD, %struct.DTD* %16, i32 0, i32 1, !dbg !3116
  call void @hashTableClear(%struct.HASH_TABLE* %elementTypes3), !dbg !3117
  %17 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !3118, !tbaa !2289
  %attributeIds = getelementptr inbounds %struct.DTD, %struct.DTD* %17, i32 0, i32 2, !dbg !3119
  call void @hashTableClear(%struct.HASH_TABLE* %attributeIds), !dbg !3120
  %18 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !3121, !tbaa !2289
  %prefixes = getelementptr inbounds %struct.DTD, %struct.DTD* %18, i32 0, i32 3, !dbg !3122
  call void @hashTableClear(%struct.HASH_TABLE* %prefixes), !dbg !3123
  %19 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !3124, !tbaa !2289
  %pool = getelementptr inbounds %struct.DTD, %struct.DTD* %19, i32 0, i32 4, !dbg !3125
  call void @poolClear(%struct.STRING_POOL* %pool), !dbg !3126
  %20 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !3127, !tbaa !2289
  %entityValuePool = getelementptr inbounds %struct.DTD, %struct.DTD* %20, i32 0, i32 5, !dbg !3128
  call void @poolClear(%struct.STRING_POOL* %entityValuePool), !dbg !3129
  %21 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !3130, !tbaa !2289
  %defaultPrefix = getelementptr inbounds %struct.DTD, %struct.DTD* %21, i32 0, i32 11, !dbg !3131
  %name = getelementptr inbounds %struct.prefix, %struct.prefix* %defaultPrefix, i32 0, i32 0, !dbg !3132
  store i8* null, i8** %name, align 8, !dbg !3133, !tbaa !3134
  %22 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !3135, !tbaa !2289
  %defaultPrefix4 = getelementptr inbounds %struct.DTD, %struct.DTD* %22, i32 0, i32 11, !dbg !3136
  %binding = getelementptr inbounds %struct.prefix, %struct.prefix* %defaultPrefix4, i32 0, i32 1, !dbg !3137
  store %struct.binding* null, %struct.binding** %binding, align 8, !dbg !3138, !tbaa !3139
  %23 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !3140, !tbaa !2289
  %in_eldecl = getelementptr inbounds %struct.DTD, %struct.DTD* %23, i32 0, i32 12, !dbg !3141
  store i8 0, i8* %in_eldecl, align 1, !dbg !3142, !tbaa !3143
  %24 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !dbg !3144, !tbaa !2289
  %free_fcn5 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %24, i32 0, i32 2, !dbg !3145
  %25 = load void (i8*)*, void (i8*)** %free_fcn5, align 8, !dbg !3145, !tbaa !2356
  %26 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !3146, !tbaa !2289
  %scaffIndex = getelementptr inbounds %struct.DTD, %struct.DTD* %26, i32 0, i32 18, !dbg !3147
  %27 = load i32*, i32** %scaffIndex, align 8, !dbg !3147, !tbaa !3148
  %28 = bitcast i32* %27 to i8*, !dbg !3146
  call void %25(i8* %28), !dbg !3144
  %29 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !3149, !tbaa !2289
  %scaffIndex6 = getelementptr inbounds %struct.DTD, %struct.DTD* %29, i32 0, i32 18, !dbg !3150
  store i32* null, i32** %scaffIndex6, align 8, !dbg !3151, !tbaa !3148
  %30 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !dbg !3152, !tbaa !2289
  %free_fcn7 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %30, i32 0, i32 2, !dbg !3153
  %31 = load void (i8*)*, void (i8*)** %free_fcn7, align 8, !dbg !3153, !tbaa !2356
  %32 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !3154, !tbaa !2289
  %scaffold = getelementptr inbounds %struct.DTD, %struct.DTD* %32, i32 0, i32 13, !dbg !3155
  %33 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold, align 8, !dbg !3155, !tbaa !3156
  %34 = bitcast %struct.CONTENT_SCAFFOLD* %33 to i8*, !dbg !3154
  call void %31(i8* %34), !dbg !3152
  %35 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !3157, !tbaa !2289
  %scaffold8 = getelementptr inbounds %struct.DTD, %struct.DTD* %35, i32 0, i32 13, !dbg !3158
  store %struct.CONTENT_SCAFFOLD* null, %struct.CONTENT_SCAFFOLD** %scaffold8, align 8, !dbg !3159, !tbaa !3156
  %36 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !3160, !tbaa !2289
  %scaffLevel = getelementptr inbounds %struct.DTD, %struct.DTD* %36, i32 0, i32 17, !dbg !3161
  store i32 0, i32* %scaffLevel, align 4, !dbg !3162, !tbaa !3163
  %37 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !3164, !tbaa !2289
  %scaffSize = getelementptr inbounds %struct.DTD, %struct.DTD* %37, i32 0, i32 15, !dbg !3165
  store i32 0, i32* %scaffSize, align 4, !dbg !3166, !tbaa !3167
  %38 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !3168, !tbaa !2289
  %scaffCount = getelementptr inbounds %struct.DTD, %struct.DTD* %38, i32 0, i32 16, !dbg !3169
  store i32 0, i32* %scaffCount, align 4, !dbg !3170, !tbaa !3171
  %39 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !3172, !tbaa !2289
  %contentStringLen = getelementptr inbounds %struct.DTD, %struct.DTD* %39, i32 0, i32 14, !dbg !3173
  store i32 0, i32* %contentStringLen, align 4, !dbg !3174, !tbaa !3175
  %40 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !3176, !tbaa !2289
  %keepProcessing = getelementptr inbounds %struct.DTD, %struct.DTD* %40, i32 0, i32 6, !dbg !3177
  store i8 1, i8* %keepProcessing, align 1, !dbg !3178, !tbaa !3179
  %41 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !3180, !tbaa !2289
  %hasParamEntityRefs = getelementptr inbounds %struct.DTD, %struct.DTD* %41, i32 0, i32 7, !dbg !3181
  store i8 0, i8* %hasParamEntityRefs, align 1, !dbg !3182, !tbaa !3183
  %42 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !3184, !tbaa !2289
  %standalone = getelementptr inbounds %struct.DTD, %struct.DTD* %42, i32 0, i32 8, !dbg !3185
  store i8 0, i8* %standalone, align 1, !dbg !3186, !tbaa !3187
  %43 = bitcast %struct.HASH_TABLE_ITER* %iter to i8*, !dbg !3188
  call void @llvm.lifetime.end(i64 16, i8* %43) #2, !dbg !3188
  ret void, !dbg !3188

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define i32 @PyExpat_XML_SetEncoding(%struct.XML_ParserStruct* %parser, i8* %encodingName) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %encodingName.addr = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !694, metadata !2293), !dbg !3189
  store i8* %encodingName, i8** %encodingName.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %encodingName.addr, metadata !695, metadata !2293), !dbg !3190
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3191, !tbaa !2289
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 85, !dbg !3193
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0, !dbg !3194
  %1 = load i32, i32* %parsing, align 4, !dbg !3194, !tbaa !3052
  %cmp = icmp eq i32 %1, 1, !dbg !3195
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3196

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3197, !tbaa !2289
  %m_parsingStatus1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 85, !dbg !3199
  %parsing2 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus1, i32 0, i32 0, !dbg !3200
  %3 = load i32, i32* %parsing2, align 4, !dbg !3200, !tbaa !3052
  %cmp3 = icmp eq i32 %3, 3, !dbg !3201
  br i1 %cmp3, label %if.then, label %if.end, !dbg !3202

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, !dbg !3203
  br label %return, !dbg !3203

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i8*, i8** %encodingName.addr, align 8, !dbg !3204, !tbaa !2289
  %cmp4 = icmp eq i8* %4, null, !dbg !3206
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !3207

if.then.5:                                        ; preds = %if.end
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3208, !tbaa !2289
  %m_protocolEncodingName = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 37, !dbg !3209
  store i8* null, i8** %m_protocolEncodingName, align 8, !dbg !3210, !tbaa !2581
  br label %if.end.10, !dbg !3211

if.else:                                          ; preds = %if.end
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3212, !tbaa !2289
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 79, !dbg !3214
  %7 = load i8*, i8** %encodingName.addr, align 8, !dbg !3215, !tbaa !2289
  %call = call i8* @poolCopyString(%struct.STRING_POOL* %m_tempPool, i8* %7), !dbg !3216
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3217, !tbaa !2289
  %m_protocolEncodingName6 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 37, !dbg !3218
  store i8* %call, i8** %m_protocolEncodingName6, align 8, !dbg !3219, !tbaa !2581
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3220, !tbaa !2289
  %m_protocolEncodingName7 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 37, !dbg !3222
  %10 = load i8*, i8** %m_protocolEncodingName7, align 8, !dbg !3222, !tbaa !2581
  %tobool = icmp ne i8* %10, null, !dbg !3223
  br i1 %tobool, label %if.end.9, label %if.then.8, !dbg !3224

if.then.8:                                        ; preds = %if.else
  store i32 0, i32* %retval, !dbg !3225
  br label %return, !dbg !3225

if.end.9:                                         ; preds = %if.else
  br label %if.end.10

if.end.10:                                        ; preds = %if.end.9, %if.then.5
  store i32 1, i32* %retval, !dbg !3226
  br label %return, !dbg !3226

return:                                           ; preds = %if.end.10, %if.then.8, %if.then
  %11 = load i32, i32* %retval, !dbg !3227
  ret i32 %11, !dbg !3227
}

; Function Attrs: nounwind uwtable
define internal i8* @poolCopyString(%struct.STRING_POOL* %pool, i8* %s) #0 {
entry:
  %retval = alloca i8*, align 8
  %pool.addr = alloca %struct.STRING_POOL*, align 8
  %s.addr = alloca i8*, align 8
  store %struct.STRING_POOL* %pool, %struct.STRING_POOL** %pool.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.STRING_POOL** %pool.addr, metadata !2231, metadata !2293), !dbg !3228
  store i8* %s, i8** %s.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !2232, metadata !2293), !dbg !3229
  br label %do.body, !dbg !3230

do.body:                                          ; preds = %do.cond, %entry
  %0 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !3231, !tbaa !2289
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %0, i32 0, i32 3, !dbg !3234
  %1 = load i8*, i8** %ptr, align 8, !dbg !3234, !tbaa !2798
  %2 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !3235, !tbaa !2289
  %end = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %2, i32 0, i32 2, !dbg !3236
  %3 = load i8*, i8** %end, align 8, !dbg !3236, !tbaa !2802
  %cmp = icmp eq i8* %1, %3, !dbg !3237
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !3238

land.lhs.true:                                    ; preds = %do.body
  %4 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !3239, !tbaa !2289
  %call = call zeroext i8 @poolGrow(%struct.STRING_POOL* %4), !dbg !3241
  %tobool = icmp ne i8 %call, 0, !dbg !3241
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3242

cond.true:                                        ; preds = %land.lhs.true
  br i1 false, label %if.end, label %if.then, !dbg !3243

cond.false:                                       ; preds = %land.lhs.true, %do.body
  %5 = load i8*, i8** %s.addr, align 8, !dbg !3245, !tbaa !2289
  %6 = load i8, i8* %5, align 1, !dbg !3248, !tbaa !2307
  %7 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !3249, !tbaa !2289
  %ptr1 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %7, i32 0, i32 3, !dbg !3250
  %8 = load i8*, i8** %ptr1, align 8, !dbg !3251, !tbaa !2798
  %incdec.ptr = getelementptr i8, i8* %8, i32 1, !dbg !3251
  store i8* %incdec.ptr, i8** %ptr1, align 8, !dbg !3251, !tbaa !2798
  store i8 %6, i8* %8, align 1, !dbg !3252, !tbaa !2307
  br i1 true, label %if.end, label %if.then, !dbg !3242

if.then:                                          ; preds = %cond.false, %cond.true
  store i8* null, i8** %retval, !dbg !3253
  br label %return, !dbg !3253

if.end:                                           ; preds = %cond.false, %cond.true
  br label %do.cond, !dbg !3254

do.cond:                                          ; preds = %if.end
  %9 = load i8*, i8** %s.addr, align 8, !dbg !3255, !tbaa !2289
  %incdec.ptr2 = getelementptr i8, i8* %9, i32 1, !dbg !3255
  store i8* %incdec.ptr2, i8** %s.addr, align 8, !dbg !3255, !tbaa !2289
  %10 = load i8, i8* %9, align 1, !dbg !3257, !tbaa !2307
  %tobool3 = icmp ne i8 %10, 0, !dbg !3254
  br i1 %tobool3, label %do.body, label %do.end, !dbg !3254

do.end:                                           ; preds = %do.cond
  %11 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !3258, !tbaa !2289
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %11, i32 0, i32 4, !dbg !3259
  %12 = load i8*, i8** %start, align 8, !dbg !3259, !tbaa !2794
  store i8* %12, i8** %s.addr, align 8, !dbg !3260, !tbaa !2289
  %13 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !3261, !tbaa !2289
  %ptr4 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %13, i32 0, i32 3, !dbg !3262
  %14 = load i8*, i8** %ptr4, align 8, !dbg !3262, !tbaa !2798
  %15 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !3263, !tbaa !2289
  %start5 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %15, i32 0, i32 4, !dbg !3264
  store i8* %14, i8** %start5, align 8, !dbg !3265, !tbaa !2794
  %16 = load i8*, i8** %s.addr, align 8, !dbg !3266, !tbaa !2289
  store i8* %16, i8** %retval, !dbg !3267
  br label %return, !dbg !3267

return:                                           ; preds = %do.end, %if.then
  %17 = load i8*, i8** %retval, !dbg !3268
  ret i8* %17, !dbg !3268
}

; Function Attrs: nounwind uwtable
define %struct.XML_ParserStruct* @PyExpat_XML_ExternalEntityParserCreate(%struct.XML_ParserStruct* %oldParser, i8* %context, i8* %encodingName) #0 {
entry:
  %retval = alloca %struct.XML_ParserStruct*, align 8
  %oldParser.addr = alloca %struct.XML_ParserStruct*, align 8
  %context.addr = alloca i8*, align 8
  %encodingName.addr = alloca i8*, align 8
  %parser = alloca %struct.XML_ParserStruct*, align 8
  %newDtd = alloca %struct.DTD*, align 8
  %oldDtd = alloca %struct.DTD*, align 8
  %oldStartElementHandler = alloca void (i8*, i8*, i8**)*, align 8
  %oldEndElementHandler = alloca void (i8*, i8*)*, align 8
  %oldCharacterDataHandler = alloca void (i8*, i8*, i32)*, align 8
  %oldProcessingInstructionHandler = alloca void (i8*, i8*, i8*)*, align 8
  %oldCommentHandler = alloca void (i8*, i8*)*, align 8
  %oldStartCdataSectionHandler = alloca void (i8*)*, align 8
  %oldEndCdataSectionHandler = alloca void (i8*)*, align 8
  %oldDefaultHandler = alloca void (i8*, i8*, i32)*, align 8
  %oldUnparsedEntityDeclHandler = alloca void (i8*, i8*, i8*, i8*, i8*, i8*)*, align 8
  %oldNotationDeclHandler = alloca void (i8*, i8*, i8*, i8*, i8*)*, align 8
  %oldStartNamespaceDeclHandler = alloca void (i8*, i8*, i8*)*, align 8
  %oldEndNamespaceDeclHandler = alloca void (i8*, i8*)*, align 8
  %oldNotStandaloneHandler = alloca i32 (i8*)*, align 8
  %oldExternalEntityRefHandler = alloca i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, align 8
  %oldSkippedEntityHandler = alloca void (i8*, i8*, i32)*, align 8
  %oldUnknownEncodingHandler = alloca i32 (i8*, i8*, %struct.XML_Encoding*)*, align 8
  %oldElementDeclHandler = alloca void (i8*, i8*, %struct.XML_cp*)*, align 8
  %oldAttlistDeclHandler = alloca void (i8*, i8*, i8*, i8*, i8*, i32)*, align 8
  %oldEntityDeclHandler = alloca void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, align 8
  %oldXmlDeclHandler = alloca void (i8*, i8*, i8*, i32)*, align 8
  %oldDeclElementType = alloca %struct.ELEMENT_TYPE*, align 8
  %oldUserData = alloca i8*, align 8
  %oldHandlerArg = alloca i8*, align 8
  %oldDefaultExpandInternalEntities = alloca i8, align 1
  %oldExternalEntityRefHandlerArg = alloca %struct.XML_ParserStruct*, align 8
  %oldParamEntityParsing = alloca i32, align 4
  %oldInEntityValue = alloca i32, align 4
  %oldns_triplets = alloca i8, align 1
  %oldhash_secret_salt = alloca i64, align 8
  %tmp = alloca [2 x i8], align 1
  %cleanup.dest.slot = alloca i32
  store %struct.XML_ParserStruct* %oldParser, %struct.XML_ParserStruct** %oldParser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %oldParser.addr, metadata !700, metadata !2293), !dbg !3269
  store i8* %context, i8** %context.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !701, metadata !2293), !dbg !3270
  store i8* %encodingName, i8** %encodingName.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %encodingName.addr, metadata !702, metadata !2293), !dbg !3271
  %0 = bitcast %struct.XML_ParserStruct** %parser to i8*, !dbg !3272
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !3272
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser, metadata !703, metadata !2293), !dbg !3273
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8, !dbg !3274, !tbaa !2289
  store %struct.XML_ParserStruct* %1, %struct.XML_ParserStruct** %parser, align 8, !dbg !3273, !tbaa !2289
  %2 = bitcast %struct.DTD** %newDtd to i8*, !dbg !3275
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !3275
  call void @llvm.dbg.declare(metadata %struct.DTD** %newDtd, metadata !704, metadata !2293), !dbg !3276
  store %struct.DTD* null, %struct.DTD** %newDtd, align 8, !dbg !3276, !tbaa !2289
  %3 = bitcast %struct.DTD** %oldDtd to i8*, !dbg !3277
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !3277
  call void @llvm.dbg.declare(metadata %struct.DTD** %oldDtd, metadata !705, metadata !2293), !dbg !3278
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3279, !tbaa !2289
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 65, !dbg !3280
  %5 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !3280, !tbaa !2478
  store %struct.DTD* %5, %struct.DTD** %oldDtd, align 8, !dbg !3278, !tbaa !2289
  %6 = bitcast void (i8*, i8*, i8**)** %oldStartElementHandler to i8*, !dbg !3281
  call void @llvm.lifetime.start(i64 8, i8* %6) #2, !dbg !3281
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8**)** %oldStartElementHandler, metadata !706, metadata !2293), !dbg !3282
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3283, !tbaa !2289
  %m_startElementHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 11, !dbg !3284
  %8 = load void (i8*, i8*, i8**)*, void (i8*, i8*, i8**)** %m_startElementHandler, align 8, !dbg !3284, !tbaa !2846
  store void (i8*, i8*, i8**)* %8, void (i8*, i8*, i8**)** %oldStartElementHandler, align 8, !dbg !3282, !tbaa !2289
  %9 = bitcast void (i8*, i8*)** %oldEndElementHandler to i8*, !dbg !3285
  call void @llvm.lifetime.start(i64 8, i8* %9) #2, !dbg !3285
  call void @llvm.dbg.declare(metadata void (i8*, i8*)** %oldEndElementHandler, metadata !707, metadata !2293), !dbg !3286
  %10 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3287, !tbaa !2289
  %m_endElementHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %10, i32 0, i32 12, !dbg !3288
  %11 = load void (i8*, i8*)*, void (i8*, i8*)** %m_endElementHandler, align 8, !dbg !3288, !tbaa !2850
  store void (i8*, i8*)* %11, void (i8*, i8*)** %oldEndElementHandler, align 8, !dbg !3286, !tbaa !2289
  %12 = bitcast void (i8*, i8*, i32)** %oldCharacterDataHandler to i8*, !dbg !3289
  call void @llvm.lifetime.start(i64 8, i8* %12) #2, !dbg !3289
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i32)** %oldCharacterDataHandler, metadata !708, metadata !2293), !dbg !3290
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3291, !tbaa !2289
  %m_characterDataHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 13, !dbg !3292
  %14 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler, align 8, !dbg !3292, !tbaa !2854
  store void (i8*, i8*, i32)* %14, void (i8*, i8*, i32)** %oldCharacterDataHandler, align 8, !dbg !3290, !tbaa !2289
  %15 = bitcast void (i8*, i8*, i8*)** %oldProcessingInstructionHandler to i8*, !dbg !3293
  call void @llvm.lifetime.start(i64 8, i8* %15) #2, !dbg !3293
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %oldProcessingInstructionHandler, metadata !709, metadata !2293), !dbg !3294
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3295, !tbaa !2289
  %m_processingInstructionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 14, !dbg !3296
  %17 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %m_processingInstructionHandler, align 8, !dbg !3296, !tbaa !2858
  store void (i8*, i8*, i8*)* %17, void (i8*, i8*, i8*)** %oldProcessingInstructionHandler, align 8, !dbg !3294, !tbaa !2289
  %18 = bitcast void (i8*, i8*)** %oldCommentHandler to i8*, !dbg !3297
  call void @llvm.lifetime.start(i64 8, i8* %18) #2, !dbg !3297
  call void @llvm.dbg.declare(metadata void (i8*, i8*)** %oldCommentHandler, metadata !710, metadata !2293), !dbg !3298
  %19 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3299, !tbaa !2289
  %m_commentHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %19, i32 0, i32 15, !dbg !3300
  %20 = load void (i8*, i8*)*, void (i8*, i8*)** %m_commentHandler, align 8, !dbg !3300, !tbaa !2862
  store void (i8*, i8*)* %20, void (i8*, i8*)** %oldCommentHandler, align 8, !dbg !3298, !tbaa !2289
  %21 = bitcast void (i8*)** %oldStartCdataSectionHandler to i8*, !dbg !3301
  call void @llvm.lifetime.start(i64 8, i8* %21) #2, !dbg !3301
  call void @llvm.dbg.declare(metadata void (i8*)** %oldStartCdataSectionHandler, metadata !711, metadata !2293), !dbg !3302
  %22 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3303, !tbaa !2289
  %m_startCdataSectionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %22, i32 0, i32 16, !dbg !3304
  %23 = load void (i8*)*, void (i8*)** %m_startCdataSectionHandler, align 8, !dbg !3304, !tbaa !2866
  store void (i8*)* %23, void (i8*)** %oldStartCdataSectionHandler, align 8, !dbg !3302, !tbaa !2289
  %24 = bitcast void (i8*)** %oldEndCdataSectionHandler to i8*, !dbg !3305
  call void @llvm.lifetime.start(i64 8, i8* %24) #2, !dbg !3305
  call void @llvm.dbg.declare(metadata void (i8*)** %oldEndCdataSectionHandler, metadata !712, metadata !2293), !dbg !3306
  %25 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3307, !tbaa !2289
  %m_endCdataSectionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %25, i32 0, i32 17, !dbg !3308
  %26 = load void (i8*)*, void (i8*)** %m_endCdataSectionHandler, align 8, !dbg !3308, !tbaa !2870
  store void (i8*)* %26, void (i8*)** %oldEndCdataSectionHandler, align 8, !dbg !3306, !tbaa !2289
  %27 = bitcast void (i8*, i8*, i32)** %oldDefaultHandler to i8*, !dbg !3309
  call void @llvm.lifetime.start(i64 8, i8* %27) #2, !dbg !3309
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i32)** %oldDefaultHandler, metadata !713, metadata !2293), !dbg !3310
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3311, !tbaa !2289
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %28, i32 0, i32 18, !dbg !3312
  %29 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler, align 8, !dbg !3312, !tbaa !2874
  store void (i8*, i8*, i32)* %29, void (i8*, i8*, i32)** %oldDefaultHandler, align 8, !dbg !3310, !tbaa !2289
  %30 = bitcast void (i8*, i8*, i8*, i8*, i8*, i8*)** %oldUnparsedEntityDeclHandler to i8*, !dbg !3313
  call void @llvm.lifetime.start(i64 8, i8* %30) #2, !dbg !3313
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i8*, i8*, i8*)** %oldUnparsedEntityDeclHandler, metadata !714, metadata !2293), !dbg !3314
  %31 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3315, !tbaa !2289
  %m_unparsedEntityDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %31, i32 0, i32 21, !dbg !3316
  %32 = load void (i8*, i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*, i8*)** %m_unparsedEntityDeclHandler, align 8, !dbg !3316, !tbaa !2886
  store void (i8*, i8*, i8*, i8*, i8*, i8*)* %32, void (i8*, i8*, i8*, i8*, i8*, i8*)** %oldUnparsedEntityDeclHandler, align 8, !dbg !3314, !tbaa !2289
  %33 = bitcast void (i8*, i8*, i8*, i8*, i8*)** %oldNotationDeclHandler to i8*, !dbg !3317
  call void @llvm.lifetime.start(i64 8, i8* %33) #2, !dbg !3317
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i8*, i8*)** %oldNotationDeclHandler, metadata !715, metadata !2293), !dbg !3318
  %34 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3319, !tbaa !2289
  %m_notationDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %34, i32 0, i32 22, !dbg !3320
  %35 = load void (i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*)** %m_notationDeclHandler, align 8, !dbg !3320, !tbaa !2890
  store void (i8*, i8*, i8*, i8*, i8*)* %35, void (i8*, i8*, i8*, i8*, i8*)** %oldNotationDeclHandler, align 8, !dbg !3318, !tbaa !2289
  %36 = bitcast void (i8*, i8*, i8*)** %oldStartNamespaceDeclHandler to i8*, !dbg !3321
  call void @llvm.lifetime.start(i64 8, i8* %36) #2, !dbg !3321
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %oldStartNamespaceDeclHandler, metadata !716, metadata !2293), !dbg !3322
  %37 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3323, !tbaa !2289
  %m_startNamespaceDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %37, i32 0, i32 23, !dbg !3324
  %38 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %m_startNamespaceDeclHandler, align 8, !dbg !3324, !tbaa !2894
  store void (i8*, i8*, i8*)* %38, void (i8*, i8*, i8*)** %oldStartNamespaceDeclHandler, align 8, !dbg !3322, !tbaa !2289
  %39 = bitcast void (i8*, i8*)** %oldEndNamespaceDeclHandler to i8*, !dbg !3325
  call void @llvm.lifetime.start(i64 8, i8* %39) #2, !dbg !3325
  call void @llvm.dbg.declare(metadata void (i8*, i8*)** %oldEndNamespaceDeclHandler, metadata !717, metadata !2293), !dbg !3326
  %40 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3327, !tbaa !2289
  %m_endNamespaceDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %40, i32 0, i32 24, !dbg !3328
  %41 = load void (i8*, i8*)*, void (i8*, i8*)** %m_endNamespaceDeclHandler, align 8, !dbg !3328, !tbaa !2898
  store void (i8*, i8*)* %41, void (i8*, i8*)** %oldEndNamespaceDeclHandler, align 8, !dbg !3326, !tbaa !2289
  %42 = bitcast i32 (i8*)** %oldNotStandaloneHandler to i8*, !dbg !3329
  call void @llvm.lifetime.start(i64 8, i8* %42) #2, !dbg !3329
  call void @llvm.dbg.declare(metadata i32 (i8*)** %oldNotStandaloneHandler, metadata !718, metadata !2293), !dbg !3330
  %43 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3331, !tbaa !2289
  %m_notStandaloneHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %43, i32 0, i32 25, !dbg !3332
  %44 = load i32 (i8*)*, i32 (i8*)** %m_notStandaloneHandler, align 8, !dbg !3332, !tbaa !2902
  store i32 (i8*)* %44, i32 (i8*)** %oldNotStandaloneHandler, align 8, !dbg !3330, !tbaa !2289
  %45 = bitcast i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %oldExternalEntityRefHandler to i8*, !dbg !3333
  call void @llvm.lifetime.start(i64 8, i8* %45) #2, !dbg !3333
  call void @llvm.dbg.declare(metadata i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %oldExternalEntityRefHandler, metadata !719, metadata !2293), !dbg !3334
  %46 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3335, !tbaa !2289
  %m_externalEntityRefHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %46, i32 0, i32 26, !dbg !3336
  %47 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %m_externalEntityRefHandler, align 8, !dbg !3336, !tbaa !2906
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)* %47, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %oldExternalEntityRefHandler, align 8, !dbg !3334, !tbaa !2289
  %48 = bitcast void (i8*, i8*, i32)** %oldSkippedEntityHandler to i8*, !dbg !3337
  call void @llvm.lifetime.start(i64 8, i8* %48) #2, !dbg !3337
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i32)** %oldSkippedEntityHandler, metadata !720, metadata !2293), !dbg !3338
  %49 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3339, !tbaa !2289
  %m_skippedEntityHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %49, i32 0, i32 28, !dbg !3340
  %50 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_skippedEntityHandler, align 8, !dbg !3340, !tbaa !2915
  store void (i8*, i8*, i32)* %50, void (i8*, i8*, i32)** %oldSkippedEntityHandler, align 8, !dbg !3338, !tbaa !2289
  %51 = bitcast i32 (i8*, i8*, %struct.XML_Encoding*)** %oldUnknownEncodingHandler to i8*, !dbg !3341
  call void @llvm.lifetime.start(i64 8, i8* %51) #2, !dbg !3341
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, %struct.XML_Encoding*)** %oldUnknownEncodingHandler, metadata !721, metadata !2293), !dbg !3342
  %52 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3343, !tbaa !2289
  %m_unknownEncodingHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %52, i32 0, i32 29, !dbg !3344
  %53 = load i32 (i8*, i8*, %struct.XML_Encoding*)*, i32 (i8*, i8*, %struct.XML_Encoding*)** %m_unknownEncodingHandler, align 8, !dbg !3344, !tbaa !2533
  store i32 (i8*, i8*, %struct.XML_Encoding*)* %53, i32 (i8*, i8*, %struct.XML_Encoding*)** %oldUnknownEncodingHandler, align 8, !dbg !3342, !tbaa !2289
  %54 = bitcast void (i8*, i8*, %struct.XML_cp*)** %oldElementDeclHandler to i8*, !dbg !3345
  call void @llvm.lifetime.start(i64 8, i8* %54) #2, !dbg !3345
  call void @llvm.dbg.declare(metadata void (i8*, i8*, %struct.XML_cp*)** %oldElementDeclHandler, metadata !722, metadata !2293), !dbg !3346
  %55 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3347, !tbaa !2289
  %m_elementDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %55, i32 0, i32 30, !dbg !3348
  %56 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler, align 8, !dbg !3348, !tbaa !2919
  store void (i8*, i8*, %struct.XML_cp*)* %56, void (i8*, i8*, %struct.XML_cp*)** %oldElementDeclHandler, align 8, !dbg !3346, !tbaa !2289
  %57 = bitcast void (i8*, i8*, i8*, i8*, i8*, i32)** %oldAttlistDeclHandler to i8*, !dbg !3349
  call void @llvm.lifetime.start(i64 8, i8* %57) #2, !dbg !3349
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i8*, i8*, i32)** %oldAttlistDeclHandler, metadata !723, metadata !2293), !dbg !3350
  %58 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3351, !tbaa !2289
  %m_attlistDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %58, i32 0, i32 31, !dbg !3352
  %59 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %m_attlistDeclHandler, align 8, !dbg !3352, !tbaa !2923
  store void (i8*, i8*, i8*, i8*, i8*, i32)* %59, void (i8*, i8*, i8*, i8*, i8*, i32)** %oldAttlistDeclHandler, align 8, !dbg !3350, !tbaa !2289
  %60 = bitcast void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %oldEntityDeclHandler to i8*, !dbg !3353
  call void @llvm.lifetime.start(i64 8, i8* %60) #2, !dbg !3353
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %oldEntityDeclHandler, metadata !724, metadata !2293), !dbg !3354
  %61 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3355, !tbaa !2289
  %m_entityDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %61, i32 0, i32 32, !dbg !3356
  %62 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler, align 8, !dbg !3356, !tbaa !2927
  store void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %62, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %oldEntityDeclHandler, align 8, !dbg !3354, !tbaa !2289
  %63 = bitcast void (i8*, i8*, i8*, i32)** %oldXmlDeclHandler to i8*, !dbg !3357
  call void @llvm.lifetime.start(i64 8, i8* %63) #2, !dbg !3357
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i32)** %oldXmlDeclHandler, metadata !725, metadata !2293), !dbg !3358
  %64 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3359, !tbaa !2289
  %m_xmlDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %64, i32 0, i32 33, !dbg !3360
  %65 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %m_xmlDeclHandler, align 8, !dbg !3360, !tbaa !2931
  store void (i8*, i8*, i8*, i32)* %65, void (i8*, i8*, i8*, i32)** %oldXmlDeclHandler, align 8, !dbg !3358, !tbaa !2289
  %66 = bitcast %struct.ELEMENT_TYPE** %oldDeclElementType to i8*, !dbg !3361
  call void @llvm.lifetime.start(i64 8, i8* %66) #2, !dbg !3361
  call void @llvm.dbg.declare(metadata %struct.ELEMENT_TYPE** %oldDeclElementType, metadata !726, metadata !2293), !dbg !3362
  %67 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3363, !tbaa !2289
  %m_declElementType = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %67, i32 0, i32 61, !dbg !3364
  %68 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %m_declElementType, align 8, !dbg !3364, !tbaa !2955
  store %struct.ELEMENT_TYPE* %68, %struct.ELEMENT_TYPE** %oldDeclElementType, align 8, !dbg !3362, !tbaa !2289
  %69 = bitcast i8** %oldUserData to i8*, !dbg !3365
  call void @llvm.lifetime.start(i64 8, i8* %69) #2, !dbg !3365
  call void @llvm.dbg.declare(metadata i8** %oldUserData, metadata !727, metadata !2293), !dbg !3366
  %70 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3367, !tbaa !2289
  %m_userData = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %70, i32 0, i32 0, !dbg !3368
  %71 = load i8*, i8** %m_userData, align 8, !dbg !3368, !tbaa !2838
  store i8* %71, i8** %oldUserData, align 8, !dbg !3366, !tbaa !2289
  %72 = bitcast i8** %oldHandlerArg to i8*, !dbg !3369
  call void @llvm.lifetime.start(i64 8, i8* %72) #2, !dbg !3369
  call void @llvm.dbg.declare(metadata i8** %oldHandlerArg, metadata !728, metadata !2293), !dbg !3370
  %73 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3371, !tbaa !2289
  %m_handlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %73, i32 0, i32 1, !dbg !3372
  %74 = load i8*, i8** %m_handlerArg, align 8, !dbg !3372, !tbaa !2842
  store i8* %74, i8** %oldHandlerArg, align 8, !dbg !3370, !tbaa !2289
  call void @llvm.lifetime.start(i64 1, i8* %oldDefaultExpandInternalEntities) #2, !dbg !3373
  call void @llvm.dbg.declare(metadata i8* %oldDefaultExpandInternalEntities, metadata !729, metadata !2293), !dbg !3374
  %75 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3375, !tbaa !2289
  %m_defaultExpandInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %75, i32 0, i32 52, !dbg !3376
  %76 = load i8, i8* %m_defaultExpandInternalEntities, align 1, !dbg !3376, !tbaa !3021
  store i8 %76, i8* %oldDefaultExpandInternalEntities, align 1, !dbg !3374, !tbaa !2307
  %77 = bitcast %struct.XML_ParserStruct** %oldExternalEntityRefHandlerArg to i8*, !dbg !3377
  call void @llvm.lifetime.start(i64 8, i8* %77) #2, !dbg !3377
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %oldExternalEntityRefHandlerArg, metadata !730, metadata !2293), !dbg !3378
  %78 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3379, !tbaa !2289
  %m_externalEntityRefHandlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %78, i32 0, i32 27, !dbg !3380
  %79 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %m_externalEntityRefHandlerArg, align 8, !dbg !3380, !tbaa !2911
  store %struct.XML_ParserStruct* %79, %struct.XML_ParserStruct** %oldExternalEntityRefHandlerArg, align 8, !dbg !3378, !tbaa !2289
  %80 = bitcast i32* %oldParamEntityParsing to i8*, !dbg !3381
  call void @llvm.lifetime.start(i64 4, i8* %80) #2, !dbg !3381
  call void @llvm.dbg.declare(metadata i32* %oldParamEntityParsing, metadata !731, metadata !2293), !dbg !3382
  %81 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3383, !tbaa !2289
  %m_paramEntityParsing = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %81, i32 0, i32 88, !dbg !3384
  %82 = load i32, i32* %m_paramEntityParsing, align 4, !dbg !3384, !tbaa !3064
  store i32 %82, i32* %oldParamEntityParsing, align 4, !dbg !3382, !tbaa !2307
  %83 = bitcast i32* %oldInEntityValue to i8*, !dbg !3385
  call void @llvm.lifetime.start(i64 4, i8* %83) #2, !dbg !3385
  call void @llvm.dbg.declare(metadata i32* %oldInEntityValue, metadata !732, metadata !2293), !dbg !3386
  %84 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3387, !tbaa !2289
  %m_prologState = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %84, i32 0, i32 44, !dbg !3388
  %inEntityValue = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState, i32 0, i32 5, !dbg !3389
  %85 = load i32, i32* %inEntityValue, align 4, !dbg !3389, !tbaa !3390
  store i32 %85, i32* %oldInEntityValue, align 4, !dbg !3386, !tbaa !3391
  call void @llvm.lifetime.start(i64 1, i8* %oldns_triplets) #2, !dbg !3392
  call void @llvm.dbg.declare(metadata i8* %oldns_triplets, metadata !733, metadata !2293), !dbg !3393
  %86 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3394, !tbaa !2289
  %m_ns_triplets = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %86, i32 0, i32 39, !dbg !3395
  %87 = load i8, i8* %m_ns_triplets, align 1, !dbg !3395, !tbaa !2549
  store i8 %87, i8* %oldns_triplets, align 1, !dbg !3393, !tbaa !2307
  %88 = bitcast i64* %oldhash_secret_salt to i8*, !dbg !3396
  call void @llvm.lifetime.start(i64 8, i8* %88) #2, !dbg !3396
  call void @llvm.dbg.declare(metadata i64* %oldhash_secret_salt, metadata !734, metadata !2293), !dbg !3397
  %89 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3398, !tbaa !2289
  %m_hash_secret_salt = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %89, i32 0, i32 89, !dbg !3399
  %90 = load i64, i64* %m_hash_secret_salt, align 8, !dbg !3399, !tbaa !3068
  store i64 %90, i64* %oldhash_secret_salt, align 8, !dbg !3397, !tbaa !3400
  %91 = load i8*, i8** %context.addr, align 8, !dbg !3401, !tbaa !2289
  %tobool = icmp ne i8* %91, null, !dbg !3401
  br i1 %tobool, label %if.end, label %if.then, !dbg !3403

if.then:                                          ; preds = %entry
  %92 = load %struct.DTD*, %struct.DTD** %oldDtd, align 8, !dbg !3404, !tbaa !2289
  store %struct.DTD* %92, %struct.DTD** %newDtd, align 8, !dbg !3405, !tbaa !2289
  br label %if.end, !dbg !3406

if.end:                                           ; preds = %if.then, %entry
  %93 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3407, !tbaa !2289
  %m_ns = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %93, i32 0, i32 38, !dbg !3408
  %94 = load i8, i8* %m_ns, align 1, !dbg !3408, !tbaa !2545
  %tobool1 = icmp ne i8 %94, 0, !dbg !3409
  br i1 %tobool1, label %if.then.2, label %if.else, !dbg !3410

if.then.2:                                        ; preds = %if.end
  %95 = bitcast [2 x i8]* %tmp to i8*, !dbg !3411
  call void @llvm.lifetime.start(i64 2, i8* %95) #2, !dbg !3411
  call void @llvm.dbg.declare(metadata [2 x i8]* %tmp, metadata !735, metadata !2293), !dbg !3412
  %96 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3413, !tbaa !2289
  %m_namespaceSeparator = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %96, i32 0, i32 83, !dbg !3414
  %97 = load i8, i8* %m_namespaceSeparator, align 1, !dbg !3414, !tbaa !2541
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i32 0, i32 0, !dbg !3415
  store i8 %97, i8* %arraydecay, align 1, !dbg !3416, !tbaa !2307
  %98 = load i8*, i8** %encodingName.addr, align 8, !dbg !3417, !tbaa !2289
  %99 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3418, !tbaa !2289
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %99, i32 0, i32 3, !dbg !3419
  %arraydecay3 = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i32 0, i32 0, !dbg !3420
  %100 = load %struct.DTD*, %struct.DTD** %newDtd, align 8, !dbg !3421, !tbaa !2289
  %call = call %struct.XML_ParserStruct* @parserCreate(i8* %98, %struct.XML_Memory_Handling_Suite* %m_mem, i8* %arraydecay3, %struct.DTD* %100), !dbg !3422
  store %struct.XML_ParserStruct* %call, %struct.XML_ParserStruct** %parser, align 8, !dbg !3423, !tbaa !2289
  %101 = bitcast [2 x i8]* %tmp to i8*, !dbg !3424
  call void @llvm.lifetime.end(i64 2, i8* %101) #2, !dbg !3424
  br label %if.end.6, !dbg !3425

if.else:                                          ; preds = %if.end
  %102 = load i8*, i8** %encodingName.addr, align 8, !dbg !3426, !tbaa !2289
  %103 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3428, !tbaa !2289
  %m_mem4 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %103, i32 0, i32 3, !dbg !3429
  %104 = load %struct.DTD*, %struct.DTD** %newDtd, align 8, !dbg !3430, !tbaa !2289
  %call5 = call %struct.XML_ParserStruct* @parserCreate(i8* %102, %struct.XML_Memory_Handling_Suite* %m_mem4, i8* null, %struct.DTD* %104), !dbg !3431
  store %struct.XML_ParserStruct* %call5, %struct.XML_ParserStruct** %parser, align 8, !dbg !3432, !tbaa !2289
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.2
  %105 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3433, !tbaa !2289
  %tobool7 = icmp ne %struct.XML_ParserStruct* %105, null, !dbg !3433
  br i1 %tobool7, label %if.end.9, label %if.then.8, !dbg !3435

if.then.8:                                        ; preds = %if.end.6
  store %struct.XML_ParserStruct* null, %struct.XML_ParserStruct** %retval, !dbg !3436
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3436

if.end.9:                                         ; preds = %if.end.6
  %106 = load void (i8*, i8*, i8**)*, void (i8*, i8*, i8**)** %oldStartElementHandler, align 8, !dbg !3437, !tbaa !2289
  %107 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3438, !tbaa !2289
  %m_startElementHandler10 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %107, i32 0, i32 11, !dbg !3439
  store void (i8*, i8*, i8**)* %106, void (i8*, i8*, i8**)** %m_startElementHandler10, align 8, !dbg !3440, !tbaa !2846
  %108 = load void (i8*, i8*)*, void (i8*, i8*)** %oldEndElementHandler, align 8, !dbg !3441, !tbaa !2289
  %109 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3442, !tbaa !2289
  %m_endElementHandler11 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %109, i32 0, i32 12, !dbg !3443
  store void (i8*, i8*)* %108, void (i8*, i8*)** %m_endElementHandler11, align 8, !dbg !3444, !tbaa !2850
  %110 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %oldCharacterDataHandler, align 8, !dbg !3445, !tbaa !2289
  %111 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3446, !tbaa !2289
  %m_characterDataHandler12 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %111, i32 0, i32 13, !dbg !3447
  store void (i8*, i8*, i32)* %110, void (i8*, i8*, i32)** %m_characterDataHandler12, align 8, !dbg !3448, !tbaa !2854
  %112 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %oldProcessingInstructionHandler, align 8, !dbg !3449, !tbaa !2289
  %113 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3450, !tbaa !2289
  %m_processingInstructionHandler13 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %113, i32 0, i32 14, !dbg !3451
  store void (i8*, i8*, i8*)* %112, void (i8*, i8*, i8*)** %m_processingInstructionHandler13, align 8, !dbg !3452, !tbaa !2858
  %114 = load void (i8*, i8*)*, void (i8*, i8*)** %oldCommentHandler, align 8, !dbg !3453, !tbaa !2289
  %115 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3454, !tbaa !2289
  %m_commentHandler14 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %115, i32 0, i32 15, !dbg !3455
  store void (i8*, i8*)* %114, void (i8*, i8*)** %m_commentHandler14, align 8, !dbg !3456, !tbaa !2862
  %116 = load void (i8*)*, void (i8*)** %oldStartCdataSectionHandler, align 8, !dbg !3457, !tbaa !2289
  %117 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3458, !tbaa !2289
  %m_startCdataSectionHandler15 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %117, i32 0, i32 16, !dbg !3459
  store void (i8*)* %116, void (i8*)** %m_startCdataSectionHandler15, align 8, !dbg !3460, !tbaa !2866
  %118 = load void (i8*)*, void (i8*)** %oldEndCdataSectionHandler, align 8, !dbg !3461, !tbaa !2289
  %119 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3462, !tbaa !2289
  %m_endCdataSectionHandler16 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %119, i32 0, i32 17, !dbg !3463
  store void (i8*)* %118, void (i8*)** %m_endCdataSectionHandler16, align 8, !dbg !3464, !tbaa !2870
  %120 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %oldDefaultHandler, align 8, !dbg !3465, !tbaa !2289
  %121 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3466, !tbaa !2289
  %m_defaultHandler17 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %121, i32 0, i32 18, !dbg !3467
  store void (i8*, i8*, i32)* %120, void (i8*, i8*, i32)** %m_defaultHandler17, align 8, !dbg !3468, !tbaa !2874
  %122 = load void (i8*, i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*, i8*)** %oldUnparsedEntityDeclHandler, align 8, !dbg !3469, !tbaa !2289
  %123 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3470, !tbaa !2289
  %m_unparsedEntityDeclHandler18 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %123, i32 0, i32 21, !dbg !3471
  store void (i8*, i8*, i8*, i8*, i8*, i8*)* %122, void (i8*, i8*, i8*, i8*, i8*, i8*)** %m_unparsedEntityDeclHandler18, align 8, !dbg !3472, !tbaa !2886
  %124 = load void (i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*)** %oldNotationDeclHandler, align 8, !dbg !3473, !tbaa !2289
  %125 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3474, !tbaa !2289
  %m_notationDeclHandler19 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %125, i32 0, i32 22, !dbg !3475
  store void (i8*, i8*, i8*, i8*, i8*)* %124, void (i8*, i8*, i8*, i8*, i8*)** %m_notationDeclHandler19, align 8, !dbg !3476, !tbaa !2890
  %126 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %oldStartNamespaceDeclHandler, align 8, !dbg !3477, !tbaa !2289
  %127 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3478, !tbaa !2289
  %m_startNamespaceDeclHandler20 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %127, i32 0, i32 23, !dbg !3479
  store void (i8*, i8*, i8*)* %126, void (i8*, i8*, i8*)** %m_startNamespaceDeclHandler20, align 8, !dbg !3480, !tbaa !2894
  %128 = load void (i8*, i8*)*, void (i8*, i8*)** %oldEndNamespaceDeclHandler, align 8, !dbg !3481, !tbaa !2289
  %129 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3482, !tbaa !2289
  %m_endNamespaceDeclHandler21 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %129, i32 0, i32 24, !dbg !3483
  store void (i8*, i8*)* %128, void (i8*, i8*)** %m_endNamespaceDeclHandler21, align 8, !dbg !3484, !tbaa !2898
  %130 = load i32 (i8*)*, i32 (i8*)** %oldNotStandaloneHandler, align 8, !dbg !3485, !tbaa !2289
  %131 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3486, !tbaa !2289
  %m_notStandaloneHandler22 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %131, i32 0, i32 25, !dbg !3487
  store i32 (i8*)* %130, i32 (i8*)** %m_notStandaloneHandler22, align 8, !dbg !3488, !tbaa !2902
  %132 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %oldExternalEntityRefHandler, align 8, !dbg !3489, !tbaa !2289
  %133 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3490, !tbaa !2289
  %m_externalEntityRefHandler23 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %133, i32 0, i32 26, !dbg !3491
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)* %132, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %m_externalEntityRefHandler23, align 8, !dbg !3492, !tbaa !2906
  %134 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %oldSkippedEntityHandler, align 8, !dbg !3493, !tbaa !2289
  %135 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3494, !tbaa !2289
  %m_skippedEntityHandler24 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %135, i32 0, i32 28, !dbg !3495
  store void (i8*, i8*, i32)* %134, void (i8*, i8*, i32)** %m_skippedEntityHandler24, align 8, !dbg !3496, !tbaa !2915
  %136 = load i32 (i8*, i8*, %struct.XML_Encoding*)*, i32 (i8*, i8*, %struct.XML_Encoding*)** %oldUnknownEncodingHandler, align 8, !dbg !3497, !tbaa !2289
  %137 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3498, !tbaa !2289
  %m_unknownEncodingHandler25 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %137, i32 0, i32 29, !dbg !3499
  store i32 (i8*, i8*, %struct.XML_Encoding*)* %136, i32 (i8*, i8*, %struct.XML_Encoding*)** %m_unknownEncodingHandler25, align 8, !dbg !3500, !tbaa !2533
  %138 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %oldElementDeclHandler, align 8, !dbg !3501, !tbaa !2289
  %139 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3502, !tbaa !2289
  %m_elementDeclHandler26 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %139, i32 0, i32 30, !dbg !3503
  store void (i8*, i8*, %struct.XML_cp*)* %138, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler26, align 8, !dbg !3504, !tbaa !2919
  %140 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %oldAttlistDeclHandler, align 8, !dbg !3505, !tbaa !2289
  %141 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3506, !tbaa !2289
  %m_attlistDeclHandler27 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %141, i32 0, i32 31, !dbg !3507
  store void (i8*, i8*, i8*, i8*, i8*, i32)* %140, void (i8*, i8*, i8*, i8*, i8*, i32)** %m_attlistDeclHandler27, align 8, !dbg !3508, !tbaa !2923
  %142 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %oldEntityDeclHandler, align 8, !dbg !3509, !tbaa !2289
  %143 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3510, !tbaa !2289
  %m_entityDeclHandler28 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %143, i32 0, i32 32, !dbg !3511
  store void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %142, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler28, align 8, !dbg !3512, !tbaa !2927
  %144 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %oldXmlDeclHandler, align 8, !dbg !3513, !tbaa !2289
  %145 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3514, !tbaa !2289
  %m_xmlDeclHandler29 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %145, i32 0, i32 33, !dbg !3515
  store void (i8*, i8*, i8*, i32)* %144, void (i8*, i8*, i8*, i32)** %m_xmlDeclHandler29, align 8, !dbg !3516, !tbaa !2931
  %146 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldDeclElementType, align 8, !dbg !3517, !tbaa !2289
  %147 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3518, !tbaa !2289
  %m_declElementType30 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %147, i32 0, i32 61, !dbg !3519
  store %struct.ELEMENT_TYPE* %146, %struct.ELEMENT_TYPE** %m_declElementType30, align 8, !dbg !3520, !tbaa !2955
  %148 = load i8*, i8** %oldUserData, align 8, !dbg !3521, !tbaa !2289
  %149 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3522, !tbaa !2289
  %m_userData31 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %149, i32 0, i32 0, !dbg !3523
  store i8* %148, i8** %m_userData31, align 8, !dbg !3524, !tbaa !2838
  %150 = load i8*, i8** %oldUserData, align 8, !dbg !3525, !tbaa !2289
  %151 = load i8*, i8** %oldHandlerArg, align 8, !dbg !3527, !tbaa !2289
  %cmp = icmp eq i8* %150, %151, !dbg !3528
  br i1 %cmp, label %if.then.32, label %if.else.35, !dbg !3529

if.then.32:                                       ; preds = %if.end.9
  %152 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3530, !tbaa !2289
  %m_userData33 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %152, i32 0, i32 0, !dbg !3531
  %153 = load i8*, i8** %m_userData33, align 8, !dbg !3531, !tbaa !2838
  %154 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3532, !tbaa !2289
  %m_handlerArg34 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %154, i32 0, i32 1, !dbg !3533
  store i8* %153, i8** %m_handlerArg34, align 8, !dbg !3534, !tbaa !2842
  br label %if.end.37, !dbg !3535

if.else.35:                                       ; preds = %if.end.9
  %155 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3536, !tbaa !2289
  %156 = bitcast %struct.XML_ParserStruct* %155 to i8*, !dbg !3536
  %157 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3537, !tbaa !2289
  %m_handlerArg36 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %157, i32 0, i32 1, !dbg !3538
  store i8* %156, i8** %m_handlerArg36, align 8, !dbg !3539, !tbaa !2842
  br label %if.end.37

if.end.37:                                        ; preds = %if.else.35, %if.then.32
  %158 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldExternalEntityRefHandlerArg, align 8, !dbg !3540, !tbaa !2289
  %159 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8, !dbg !3542, !tbaa !2289
  %cmp38 = icmp ne %struct.XML_ParserStruct* %158, %159, !dbg !3543
  br i1 %cmp38, label %if.then.39, label %if.end.41, !dbg !3544

if.then.39:                                       ; preds = %if.end.37
  %160 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldExternalEntityRefHandlerArg, align 8, !dbg !3545, !tbaa !2289
  %161 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3546, !tbaa !2289
  %m_externalEntityRefHandlerArg40 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %161, i32 0, i32 27, !dbg !3547
  store %struct.XML_ParserStruct* %160, %struct.XML_ParserStruct** %m_externalEntityRefHandlerArg40, align 8, !dbg !3548, !tbaa !2911
  br label %if.end.41, !dbg !3549

if.end.41:                                        ; preds = %if.then.39, %if.end.37
  %162 = load i8, i8* %oldDefaultExpandInternalEntities, align 1, !dbg !3550, !tbaa !2307
  %163 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3551, !tbaa !2289
  %m_defaultExpandInternalEntities42 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %163, i32 0, i32 52, !dbg !3552
  store i8 %162, i8* %m_defaultExpandInternalEntities42, align 1, !dbg !3553, !tbaa !3021
  %164 = load i8, i8* %oldns_triplets, align 1, !dbg !3554, !tbaa !2307
  %165 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3555, !tbaa !2289
  %m_ns_triplets43 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %165, i32 0, i32 39, !dbg !3556
  store i8 %164, i8* %m_ns_triplets43, align 1, !dbg !3557, !tbaa !2549
  %166 = load i64, i64* %oldhash_secret_salt, align 8, !dbg !3558, !tbaa !3400
  %167 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3559, !tbaa !2289
  %m_hash_secret_salt44 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %167, i32 0, i32 89, !dbg !3560
  store i64 %166, i64* %m_hash_secret_salt44, align 8, !dbg !3561, !tbaa !3068
  %168 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8, !dbg !3562, !tbaa !2289
  %169 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3563, !tbaa !2289
  %m_parentParser = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %169, i32 0, i32 84, !dbg !3564
  store %struct.XML_ParserStruct* %168, %struct.XML_ParserStruct** %m_parentParser, align 8, !dbg !3565, !tbaa !2623
  %170 = load i32, i32* %oldParamEntityParsing, align 4, !dbg !3566, !tbaa !2307
  %171 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3567, !tbaa !2289
  %m_paramEntityParsing45 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %171, i32 0, i32 88, !dbg !3568
  store i32 %170, i32* %m_paramEntityParsing45, align 4, !dbg !3569, !tbaa !3064
  %172 = load i32, i32* %oldInEntityValue, align 4, !dbg !3570, !tbaa !3391
  %173 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3571, !tbaa !2289
  %m_prologState46 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %173, i32 0, i32 44, !dbg !3572
  %inEntityValue47 = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState46, i32 0, i32 5, !dbg !3573
  store i32 %172, i32* %inEntityValue47, align 4, !dbg !3574, !tbaa !3390
  %174 = load i8*, i8** %context.addr, align 8, !dbg !3575, !tbaa !2289
  %tobool48 = icmp ne i8* %174, null, !dbg !3575
  br i1 %tobool48, label %if.then.49, label %if.else.58, !dbg !3577

if.then.49:                                       ; preds = %if.end.41
  %175 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8, !dbg !3578, !tbaa !2289
  %176 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3581, !tbaa !2289
  %m_dtd50 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %176, i32 0, i32 65, !dbg !3582
  %177 = load %struct.DTD*, %struct.DTD** %m_dtd50, align 8, !dbg !3582, !tbaa !2478
  %178 = load %struct.DTD*, %struct.DTD** %oldDtd, align 8, !dbg !3583, !tbaa !2289
  %179 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3584, !tbaa !2289
  %m_mem51 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %179, i32 0, i32 3, !dbg !3585
  %call52 = call i32 @dtdCopy(%struct.XML_ParserStruct* %175, %struct.DTD* %177, %struct.DTD* %178, %struct.XML_Memory_Handling_Suite* %m_mem51), !dbg !3586
  %tobool53 = icmp ne i32 %call52, 0, !dbg !3586
  br i1 %tobool53, label %lor.lhs.false, label %if.then.56, !dbg !3587

lor.lhs.false:                                    ; preds = %if.then.49
  %180 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3588, !tbaa !2289
  %181 = load i8*, i8** %context.addr, align 8, !dbg !3590, !tbaa !2289
  %call54 = call zeroext i8 @setContext(%struct.XML_ParserStruct* %180, i8* %181), !dbg !3591
  %tobool55 = icmp ne i8 %call54, 0, !dbg !3591
  br i1 %tobool55, label %if.end.57, label %if.then.56, !dbg !3592

if.then.56:                                       ; preds = %lor.lhs.false, %if.then.49
  %182 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3593, !tbaa !2289
  call void @PyExpat_XML_ParserFree(%struct.XML_ParserStruct* %182), !dbg !3595
  store %struct.XML_ParserStruct* null, %struct.XML_ParserStruct** %retval, !dbg !3596
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3596

if.end.57:                                        ; preds = %lor.lhs.false
  %183 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3597, !tbaa !2289
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %183, i32 0, i32 45, !dbg !3598
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @externalEntityInitProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8, !dbg !3599, !tbaa !2809
  br label %if.end.61, !dbg !3600

if.else.58:                                       ; preds = %if.end.41
  %184 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3601, !tbaa !2289
  %m_isParamEntity = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %184, i32 0, i32 86, !dbg !3603
  store i8 1, i8* %m_isParamEntity, align 1, !dbg !3604, !tbaa !3056
  %185 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3605, !tbaa !2289
  %m_prologState59 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %185, i32 0, i32 44, !dbg !3606
  call void @PyExpat_XmlPrologStateInitExternalEntity(%struct.prolog_state* %m_prologState59), !dbg !3607
  %186 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3608, !tbaa !2289
  %m_processor60 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %186, i32 0, i32 45, !dbg !3609
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @externalParEntInitProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor60, align 8, !dbg !3610, !tbaa !2809
  br label %if.end.61

if.end.61:                                        ; preds = %if.else.58, %if.end.57
  %187 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !3611, !tbaa !2289
  store %struct.XML_ParserStruct* %187, %struct.XML_ParserStruct** %retval, !dbg !3612
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3612

cleanup:                                          ; preds = %if.end.61, %if.then.56, %if.then.8
  %188 = bitcast i64* %oldhash_secret_salt to i8*, !dbg !3613
  call void @llvm.lifetime.end(i64 8, i8* %188) #2, !dbg !3613
  call void @llvm.lifetime.end(i64 1, i8* %oldns_triplets) #2, !dbg !3613
  %189 = bitcast i32* %oldInEntityValue to i8*, !dbg !3613
  call void @llvm.lifetime.end(i64 4, i8* %189) #2, !dbg !3613
  %190 = bitcast i32* %oldParamEntityParsing to i8*, !dbg !3613
  call void @llvm.lifetime.end(i64 4, i8* %190) #2, !dbg !3613
  %191 = bitcast %struct.XML_ParserStruct** %oldExternalEntityRefHandlerArg to i8*, !dbg !3613
  call void @llvm.lifetime.end(i64 8, i8* %191) #2, !dbg !3613
  call void @llvm.lifetime.end(i64 1, i8* %oldDefaultExpandInternalEntities) #2, !dbg !3613
  %192 = bitcast i8** %oldHandlerArg to i8*, !dbg !3613
  call void @llvm.lifetime.end(i64 8, i8* %192) #2, !dbg !3613
  %193 = bitcast i8** %oldUserData to i8*, !dbg !3613
  call void @llvm.lifetime.end(i64 8, i8* %193) #2, !dbg !3613
  %194 = bitcast %struct.ELEMENT_TYPE** %oldDeclElementType to i8*, !dbg !3613
  call void @llvm.lifetime.end(i64 8, i8* %194) #2, !dbg !3613
  %195 = bitcast void (i8*, i8*, i8*, i32)** %oldXmlDeclHandler to i8*, !dbg !3613
  call void @llvm.lifetime.end(i64 8, i8* %195) #2, !dbg !3613
  %196 = bitcast void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %oldEntityDeclHandler to i8*, !dbg !3613
  call void @llvm.lifetime.end(i64 8, i8* %196) #2, !dbg !3613
  %197 = bitcast void (i8*, i8*, i8*, i8*, i8*, i32)** %oldAttlistDeclHandler to i8*, !dbg !3613
  call void @llvm.lifetime.end(i64 8, i8* %197) #2, !dbg !3613
  %198 = bitcast void (i8*, i8*, %struct.XML_cp*)** %oldElementDeclHandler to i8*, !dbg !3613
  call void @llvm.lifetime.end(i64 8, i8* %198) #2, !dbg !3613
  %199 = bitcast i32 (i8*, i8*, %struct.XML_Encoding*)** %oldUnknownEncodingHandler to i8*, !dbg !3613
  call void @llvm.lifetime.end(i64 8, i8* %199) #2, !dbg !3613
  %200 = bitcast void (i8*, i8*, i32)** %oldSkippedEntityHandler to i8*, !dbg !3613
  call void @llvm.lifetime.end(i64 8, i8* %200) #2, !dbg !3613
  %201 = bitcast i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %oldExternalEntityRefHandler to i8*, !dbg !3613
  call void @llvm.lifetime.end(i64 8, i8* %201) #2, !dbg !3613
  %202 = bitcast i32 (i8*)** %oldNotStandaloneHandler to i8*, !dbg !3613
  call void @llvm.lifetime.end(i64 8, i8* %202) #2, !dbg !3613
  %203 = bitcast void (i8*, i8*)** %oldEndNamespaceDeclHandler to i8*, !dbg !3613
  call void @llvm.lifetime.end(i64 8, i8* %203) #2, !dbg !3613
  %204 = bitcast void (i8*, i8*, i8*)** %oldStartNamespaceDeclHandler to i8*, !dbg !3613
  call void @llvm.lifetime.end(i64 8, i8* %204) #2, !dbg !3613
  %205 = bitcast void (i8*, i8*, i8*, i8*, i8*)** %oldNotationDeclHandler to i8*, !dbg !3613
  call void @llvm.lifetime.end(i64 8, i8* %205) #2, !dbg !3613
  %206 = bitcast void (i8*, i8*, i8*, i8*, i8*, i8*)** %oldUnparsedEntityDeclHandler to i8*, !dbg !3613
  call void @llvm.lifetime.end(i64 8, i8* %206) #2, !dbg !3613
  %207 = bitcast void (i8*, i8*, i32)** %oldDefaultHandler to i8*, !dbg !3613
  call void @llvm.lifetime.end(i64 8, i8* %207) #2, !dbg !3613
  %208 = bitcast void (i8*)** %oldEndCdataSectionHandler to i8*, !dbg !3613
  call void @llvm.lifetime.end(i64 8, i8* %208) #2, !dbg !3613
  %209 = bitcast void (i8*)** %oldStartCdataSectionHandler to i8*, !dbg !3613
  call void @llvm.lifetime.end(i64 8, i8* %209) #2, !dbg !3613
  %210 = bitcast void (i8*, i8*)** %oldCommentHandler to i8*, !dbg !3613
  call void @llvm.lifetime.end(i64 8, i8* %210) #2, !dbg !3613
  %211 = bitcast void (i8*, i8*, i8*)** %oldProcessingInstructionHandler to i8*, !dbg !3613
  call void @llvm.lifetime.end(i64 8, i8* %211) #2, !dbg !3613
  %212 = bitcast void (i8*, i8*, i32)** %oldCharacterDataHandler to i8*, !dbg !3613
  call void @llvm.lifetime.end(i64 8, i8* %212) #2, !dbg !3613
  %213 = bitcast void (i8*, i8*)** %oldEndElementHandler to i8*, !dbg !3613
  call void @llvm.lifetime.end(i64 8, i8* %213) #2, !dbg !3613
  %214 = bitcast void (i8*, i8*, i8**)** %oldStartElementHandler to i8*, !dbg !3613
  call void @llvm.lifetime.end(i64 8, i8* %214) #2, !dbg !3613
  %215 = bitcast %struct.DTD** %oldDtd to i8*, !dbg !3613
  call void @llvm.lifetime.end(i64 8, i8* %215) #2, !dbg !3613
  %216 = bitcast %struct.DTD** %newDtd to i8*, !dbg !3613
  call void @llvm.lifetime.end(i64 8, i8* %216) #2, !dbg !3613
  %217 = bitcast %struct.XML_ParserStruct** %parser to i8*, !dbg !3613
  call void @llvm.lifetime.end(i64 8, i8* %217) #2, !dbg !3613
  %218 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %retval, !dbg !3613
  ret %struct.XML_ParserStruct* %218, !dbg !3613
}

; Function Attrs: nounwind uwtable
define internal i32 @dtdCopy(%struct.XML_ParserStruct* %oldParser, %struct.DTD* %newDtd, %struct.DTD* %oldDtd, %struct.XML_Memory_Handling_Suite* %ms) #0 {
entry:
  %retval = alloca i32, align 4
  %oldParser.addr = alloca %struct.XML_ParserStruct*, align 8
  %newDtd.addr = alloca %struct.DTD*, align 8
  %oldDtd.addr = alloca %struct.DTD*, align 8
  %ms.addr = alloca %struct.XML_Memory_Handling_Suite*, align 8
  %iter = alloca %struct.HASH_TABLE_ITER, align 8
  %name = alloca i8*, align 8
  %oldP = alloca %struct.prefix*, align 8
  %cleanup.dest.slot = alloca i32
  %newA = alloca %struct.attribute_id*, align 8
  %name13 = alloca i8*, align 8
  %oldA = alloca %struct.attribute_id*, align 8
  %i = alloca i32, align 4
  %newE = alloca %struct.ELEMENT_TYPE*, align 8
  %name62 = alloca i8*, align 8
  %oldE = alloca %struct.ELEMENT_TYPE*, align 8
  store %struct.XML_ParserStruct* %oldParser, %struct.XML_ParserStruct** %oldParser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %oldParser.addr, metadata !2150, metadata !2293), !dbg !3614
  store %struct.DTD* %newDtd, %struct.DTD** %newDtd.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.DTD** %newDtd.addr, metadata !2151, metadata !2293), !dbg !3615
  store %struct.DTD* %oldDtd, %struct.DTD** %oldDtd.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.DTD** %oldDtd.addr, metadata !2152, metadata !2293), !dbg !3616
  store %struct.XML_Memory_Handling_Suite* %ms, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_Memory_Handling_Suite** %ms.addr, metadata !2153, metadata !2293), !dbg !3617
  %0 = bitcast %struct.HASH_TABLE_ITER* %iter to i8*, !dbg !3618
  call void @llvm.lifetime.start(i64 16, i8* %0) #2, !dbg !3618
  call void @llvm.dbg.declare(metadata %struct.HASH_TABLE_ITER* %iter, metadata !2154, metadata !2293), !dbg !3619
  %1 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8, !dbg !3620, !tbaa !2289
  %prefixes = getelementptr inbounds %struct.DTD, %struct.DTD* %1, i32 0, i32 3, !dbg !3621
  call void @hashTableIterInit(%struct.HASH_TABLE_ITER* %iter, %struct.HASH_TABLE* %prefixes), !dbg !3622
  br label %for.cond, !dbg !3623

for.cond:                                         ; preds = %cleanup.cont, %entry
  %2 = bitcast i8** %name to i8*, !dbg !3624
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !3624
  call void @llvm.dbg.declare(metadata i8** %name, metadata !2155, metadata !2293), !dbg !3625
  %3 = bitcast %struct.prefix** %oldP to i8*, !dbg !3626
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !3626
  call void @llvm.dbg.declare(metadata %struct.prefix** %oldP, metadata !2159, metadata !2293), !dbg !3627
  %call = call %struct.NAMED* @hashTableIterNext(%struct.HASH_TABLE_ITER* %iter), !dbg !3628
  %4 = bitcast %struct.NAMED* %call to %struct.prefix*, !dbg !3629
  store %struct.prefix* %4, %struct.prefix** %oldP, align 8, !dbg !3627, !tbaa !2289
  %5 = load %struct.prefix*, %struct.prefix** %oldP, align 8, !dbg !3630, !tbaa !2289
  %tobool = icmp ne %struct.prefix* %5, null, !dbg !3630
  br i1 %tobool, label %if.end, label %if.then, !dbg !3632

if.then:                                          ; preds = %for.cond
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3633

if.end:                                           ; preds = %for.cond
  %6 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !3634, !tbaa !2289
  %pool = getelementptr inbounds %struct.DTD, %struct.DTD* %6, i32 0, i32 4, !dbg !3635
  %7 = load %struct.prefix*, %struct.prefix** %oldP, align 8, !dbg !3636, !tbaa !2289
  %name1 = getelementptr inbounds %struct.prefix, %struct.prefix* %7, i32 0, i32 0, !dbg !3637
  %8 = load i8*, i8** %name1, align 8, !dbg !3637, !tbaa !3638
  %call2 = call i8* @poolCopyString(%struct.STRING_POOL* %pool, i8* %8), !dbg !3639
  store i8* %call2, i8** %name, align 8, !dbg !3640, !tbaa !2289
  %9 = load i8*, i8** %name, align 8, !dbg !3641, !tbaa !2289
  %tobool3 = icmp ne i8* %9, null, !dbg !3641
  br i1 %tobool3, label %if.end.5, label %if.then.4, !dbg !3643

if.then.4:                                        ; preds = %if.end
  store i32 0, i32* %retval, !dbg !3644
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3644

if.end.5:                                         ; preds = %if.end
  %10 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8, !dbg !3645, !tbaa !2289
  %11 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !3647, !tbaa !2289
  %prefixes6 = getelementptr inbounds %struct.DTD, %struct.DTD* %11, i32 0, i32 3, !dbg !3648
  %12 = load i8*, i8** %name, align 8, !dbg !3649, !tbaa !2289
  %call7 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %10, %struct.HASH_TABLE* %prefixes6, i8* %12, i64 16), !dbg !3650
  %tobool8 = icmp ne %struct.NAMED* %call7, null, !dbg !3650
  br i1 %tobool8, label %if.end.10, label %if.then.9, !dbg !3651

if.then.9:                                        ; preds = %if.end.5
  store i32 0, i32* %retval, !dbg !3652
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3652

if.end.10:                                        ; preds = %if.end.5
  store i32 0, i32* %cleanup.dest.slot, !dbg !3653
  br label %cleanup, !dbg !3653

cleanup:                                          ; preds = %if.end.10, %if.then.9, %if.then.4, %if.then
  %13 = bitcast %struct.prefix** %oldP to i8*, !dbg !3654
  call void @llvm.lifetime.end(i64 8, i8* %13) #2, !dbg !3654
  %14 = bitcast i8** %name to i8*, !dbg !3654
  call void @llvm.lifetime.end(i64 8, i8* %14) #2, !dbg !3654
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.183 [
    i32 0, label %cleanup.cont
    i32 2, label %for.end
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.cond, !dbg !3656

for.end:                                          ; preds = %cleanup
  %15 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8, !dbg !3657, !tbaa !2289
  %attributeIds = getelementptr inbounds %struct.DTD, %struct.DTD* %15, i32 0, i32 2, !dbg !3658
  call void @hashTableIterInit(%struct.HASH_TABLE_ITER* %iter, %struct.HASH_TABLE* %attributeIds), !dbg !3659
  br label %for.cond.12, !dbg !3660

for.cond.12:                                      ; preds = %cleanup.cont.59, %for.end
  %16 = bitcast %struct.attribute_id** %newA to i8*, !dbg !3661
  call void @llvm.lifetime.start(i64 8, i8* %16) #2, !dbg !3661
  call void @llvm.dbg.declare(metadata %struct.attribute_id** %newA, metadata !2162, metadata !2293), !dbg !3662
  %17 = bitcast i8** %name13 to i8*, !dbg !3663
  call void @llvm.lifetime.start(i64 8, i8* %17) #2, !dbg !3663
  call void @llvm.dbg.declare(metadata i8** %name13, metadata !2166, metadata !2293), !dbg !3664
  %18 = bitcast %struct.attribute_id** %oldA to i8*, !dbg !3665
  call void @llvm.lifetime.start(i64 8, i8* %18) #2, !dbg !3665
  call void @llvm.dbg.declare(metadata %struct.attribute_id** %oldA, metadata !2167, metadata !2293), !dbg !3666
  %call14 = call %struct.NAMED* @hashTableIterNext(%struct.HASH_TABLE_ITER* %iter), !dbg !3667
  %19 = bitcast %struct.NAMED* %call14 to %struct.attribute_id*, !dbg !3668
  store %struct.attribute_id* %19, %struct.attribute_id** %oldA, align 8, !dbg !3666, !tbaa !2289
  %20 = load %struct.attribute_id*, %struct.attribute_id** %oldA, align 8, !dbg !3669, !tbaa !2289
  %tobool15 = icmp ne %struct.attribute_id* %20, null, !dbg !3669
  br i1 %tobool15, label %if.end.17, label %if.then.16, !dbg !3671

if.then.16:                                       ; preds = %for.cond.12
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup.55, !dbg !3672

if.end.17:                                        ; preds = %for.cond.12
  %21 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !3673, !tbaa !2289
  %pool18 = getelementptr inbounds %struct.DTD, %struct.DTD* %21, i32 0, i32 4, !dbg !3675
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool18, i32 0, i32 3, !dbg !3676
  %22 = load i8*, i8** %ptr, align 8, !dbg !3676, !tbaa !2798
  %23 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !3677, !tbaa !2289
  %pool19 = getelementptr inbounds %struct.DTD, %struct.DTD* %23, i32 0, i32 4, !dbg !3678
  %end = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool19, i32 0, i32 2, !dbg !3679
  %24 = load i8*, i8** %end, align 8, !dbg !3679, !tbaa !2802
  %cmp = icmp eq i8* %22, %24, !dbg !3680
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !3681

land.lhs.true:                                    ; preds = %if.end.17
  %25 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !3682, !tbaa !2289
  %pool20 = getelementptr inbounds %struct.DTD, %struct.DTD* %25, i32 0, i32 4, !dbg !3684
  %call21 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %pool20), !dbg !3685
  %tobool22 = icmp ne i8 %call21, 0, !dbg !3685
  br i1 %tobool22, label %cond.false, label %cond.true, !dbg !3686

cond.true:                                        ; preds = %land.lhs.true
  br i1 false, label %if.end.26, label %if.then.25, !dbg !3687

cond.false:                                       ; preds = %land.lhs.true, %if.end.17
  %26 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !3689, !tbaa !2289
  %pool23 = getelementptr inbounds %struct.DTD, %struct.DTD* %26, i32 0, i32 4, !dbg !3692
  %ptr24 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool23, i32 0, i32 3, !dbg !3693
  %27 = load i8*, i8** %ptr24, align 8, !dbg !3694, !tbaa !2798
  %incdec.ptr = getelementptr i8, i8* %27, i32 1, !dbg !3694
  store i8* %incdec.ptr, i8** %ptr24, align 8, !dbg !3694, !tbaa !2798
  store i8 0, i8* %27, align 1, !dbg !3695, !tbaa !2307
  br i1 true, label %if.end.26, label %if.then.25, !dbg !3686

if.then.25:                                       ; preds = %cond.false, %cond.true
  store i32 0, i32* %retval, !dbg !3696
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.55, !dbg !3696

if.end.26:                                        ; preds = %cond.false, %cond.true
  %28 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !3697, !tbaa !2289
  %pool27 = getelementptr inbounds %struct.DTD, %struct.DTD* %28, i32 0, i32 4, !dbg !3698
  %29 = load %struct.attribute_id*, %struct.attribute_id** %oldA, align 8, !dbg !3699, !tbaa !2289
  %name28 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %29, i32 0, i32 0, !dbg !3700
  %30 = load i8*, i8** %name28, align 8, !dbg !3700, !tbaa !3701
  %call29 = call i8* @poolCopyString(%struct.STRING_POOL* %pool27, i8* %30), !dbg !3703
  store i8* %call29, i8** %name13, align 8, !dbg !3704, !tbaa !2289
  %31 = load i8*, i8** %name13, align 8, !dbg !3705, !tbaa !2289
  %tobool30 = icmp ne i8* %31, null, !dbg !3705
  br i1 %tobool30, label %if.end.32, label %if.then.31, !dbg !3707

if.then.31:                                       ; preds = %if.end.26
  store i32 0, i32* %retval, !dbg !3708
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.55, !dbg !3708

if.end.32:                                        ; preds = %if.end.26
  %32 = load i8*, i8** %name13, align 8, !dbg !3709, !tbaa !2289
  %incdec.ptr33 = getelementptr i8, i8* %32, i32 1, !dbg !3709
  store i8* %incdec.ptr33, i8** %name13, align 8, !dbg !3709, !tbaa !2289
  %33 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8, !dbg !3710, !tbaa !2289
  %34 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !3711, !tbaa !2289
  %attributeIds34 = getelementptr inbounds %struct.DTD, %struct.DTD* %34, i32 0, i32 2, !dbg !3712
  %35 = load i8*, i8** %name13, align 8, !dbg !3713, !tbaa !2289
  %call35 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %33, %struct.HASH_TABLE* %attributeIds34, i8* %35, i64 24), !dbg !3714
  %36 = bitcast %struct.NAMED* %call35 to %struct.attribute_id*, !dbg !3715
  store %struct.attribute_id* %36, %struct.attribute_id** %newA, align 8, !dbg !3716, !tbaa !2289
  %37 = load %struct.attribute_id*, %struct.attribute_id** %newA, align 8, !dbg !3717, !tbaa !2289
  %tobool36 = icmp ne %struct.attribute_id* %37, null, !dbg !3717
  br i1 %tobool36, label %if.end.38, label %if.then.37, !dbg !3719

if.then.37:                                       ; preds = %if.end.32
  store i32 0, i32* %retval, !dbg !3720
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.55, !dbg !3720

if.end.38:                                        ; preds = %if.end.32
  %38 = load %struct.attribute_id*, %struct.attribute_id** %oldA, align 8, !dbg !3721, !tbaa !2289
  %maybeTokenized = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %38, i32 0, i32 2, !dbg !3722
  %39 = load i8, i8* %maybeTokenized, align 1, !dbg !3722, !tbaa !3723
  %40 = load %struct.attribute_id*, %struct.attribute_id** %newA, align 8, !dbg !3724, !tbaa !2289
  %maybeTokenized39 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %40, i32 0, i32 2, !dbg !3725
  store i8 %39, i8* %maybeTokenized39, align 1, !dbg !3726, !tbaa !3723
  %41 = load %struct.attribute_id*, %struct.attribute_id** %oldA, align 8, !dbg !3727, !tbaa !2289
  %prefix = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %41, i32 0, i32 1, !dbg !3729
  %42 = load %struct.prefix*, %struct.prefix** %prefix, align 8, !dbg !3729, !tbaa !3730
  %tobool40 = icmp ne %struct.prefix* %42, null, !dbg !3727
  br i1 %tobool40, label %if.then.41, label %if.end.54, !dbg !3731

if.then.41:                                       ; preds = %if.end.38
  %43 = load %struct.attribute_id*, %struct.attribute_id** %oldA, align 8, !dbg !3732, !tbaa !2289
  %xmlns = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %43, i32 0, i32 3, !dbg !3734
  %44 = load i8, i8* %xmlns, align 1, !dbg !3734, !tbaa !3735
  %45 = load %struct.attribute_id*, %struct.attribute_id** %newA, align 8, !dbg !3736, !tbaa !2289
  %xmlns42 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %45, i32 0, i32 3, !dbg !3737
  store i8 %44, i8* %xmlns42, align 1, !dbg !3738, !tbaa !3735
  %46 = load %struct.attribute_id*, %struct.attribute_id** %oldA, align 8, !dbg !3739, !tbaa !2289
  %prefix43 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %46, i32 0, i32 1, !dbg !3741
  %47 = load %struct.prefix*, %struct.prefix** %prefix43, align 8, !dbg !3741, !tbaa !3730
  %48 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8, !dbg !3742, !tbaa !2289
  %defaultPrefix = getelementptr inbounds %struct.DTD, %struct.DTD* %48, i32 0, i32 11, !dbg !3743
  %cmp44 = icmp eq %struct.prefix* %47, %defaultPrefix, !dbg !3744
  br i1 %cmp44, label %if.then.45, label %if.else, !dbg !3745

if.then.45:                                       ; preds = %if.then.41
  %49 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !3746, !tbaa !2289
  %defaultPrefix46 = getelementptr inbounds %struct.DTD, %struct.DTD* %49, i32 0, i32 11, !dbg !3747
  %50 = load %struct.attribute_id*, %struct.attribute_id** %newA, align 8, !dbg !3748, !tbaa !2289
  %prefix47 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %50, i32 0, i32 1, !dbg !3749
  store %struct.prefix* %defaultPrefix46, %struct.prefix** %prefix47, align 8, !dbg !3750, !tbaa !3730
  br label %if.end.53, !dbg !3748

if.else:                                          ; preds = %if.then.41
  %51 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8, !dbg !3751, !tbaa !2289
  %52 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !3752, !tbaa !2289
  %prefixes48 = getelementptr inbounds %struct.DTD, %struct.DTD* %52, i32 0, i32 3, !dbg !3753
  %53 = load %struct.attribute_id*, %struct.attribute_id** %oldA, align 8, !dbg !3754, !tbaa !2289
  %prefix49 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %53, i32 0, i32 1, !dbg !3755
  %54 = load %struct.prefix*, %struct.prefix** %prefix49, align 8, !dbg !3755, !tbaa !3730
  %name50 = getelementptr inbounds %struct.prefix, %struct.prefix* %54, i32 0, i32 0, !dbg !3756
  %55 = load i8*, i8** %name50, align 8, !dbg !3756, !tbaa !3638
  %call51 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %51, %struct.HASH_TABLE* %prefixes48, i8* %55, i64 0), !dbg !3757
  %56 = bitcast %struct.NAMED* %call51 to %struct.prefix*, !dbg !3758
  %57 = load %struct.attribute_id*, %struct.attribute_id** %newA, align 8, !dbg !3759, !tbaa !2289
  %prefix52 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %57, i32 0, i32 1, !dbg !3760
  store %struct.prefix* %56, %struct.prefix** %prefix52, align 8, !dbg !3761, !tbaa !3730
  br label %if.end.53

if.end.53:                                        ; preds = %if.else, %if.then.45
  br label %if.end.54, !dbg !3762

if.end.54:                                        ; preds = %if.end.53, %if.end.38
  store i32 0, i32* %cleanup.dest.slot, !dbg !3763
  br label %cleanup.55, !dbg !3763

cleanup.55:                                       ; preds = %if.end.54, %if.then.37, %if.then.31, %if.then.25, %if.then.16
  %58 = bitcast %struct.attribute_id** %oldA to i8*, !dbg !3764
  call void @llvm.lifetime.end(i64 8, i8* %58) #2, !dbg !3764
  %59 = bitcast i8** %name13 to i8*, !dbg !3764
  call void @llvm.lifetime.end(i64 8, i8* %59) #2, !dbg !3764
  %60 = bitcast %struct.attribute_id** %newA to i8*, !dbg !3764
  call void @llvm.lifetime.end(i64 8, i8* %60) #2, !dbg !3764
  %cleanup.dest.58 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.58, label %cleanup.183 [
    i32 0, label %cleanup.cont.59
    i32 4, label %for.end.60
  ]

cleanup.cont.59:                                  ; preds = %cleanup.55
  br label %for.cond.12, !dbg !3766

for.end.60:                                       ; preds = %cleanup.55
  %61 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8, !dbg !3767, !tbaa !2289
  %elementTypes = getelementptr inbounds %struct.DTD, %struct.DTD* %61, i32 0, i32 1, !dbg !3768
  call void @hashTableIterInit(%struct.HASH_TABLE_ITER* %iter, %struct.HASH_TABLE* %elementTypes), !dbg !3769
  br label %for.cond.61, !dbg !3770

for.cond.61:                                      ; preds = %cleanup.cont.159, %for.end.60
  %62 = bitcast i32* %i to i8*, !dbg !3771
  call void @llvm.lifetime.start(i64 4, i8* %62) #2, !dbg !3771
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2168, metadata !2293), !dbg !3772
  %63 = bitcast %struct.ELEMENT_TYPE** %newE to i8*, !dbg !3773
  call void @llvm.lifetime.start(i64 8, i8* %63) #2, !dbg !3773
  call void @llvm.dbg.declare(metadata %struct.ELEMENT_TYPE** %newE, metadata !2172, metadata !2293), !dbg !3774
  %64 = bitcast i8** %name62 to i8*, !dbg !3775
  call void @llvm.lifetime.start(i64 8, i8* %64) #2, !dbg !3775
  call void @llvm.dbg.declare(metadata i8** %name62, metadata !2173, metadata !2293), !dbg !3776
  %65 = bitcast %struct.ELEMENT_TYPE** %oldE to i8*, !dbg !3777
  call void @llvm.lifetime.start(i64 8, i8* %65) #2, !dbg !3777
  call void @llvm.dbg.declare(metadata %struct.ELEMENT_TYPE** %oldE, metadata !2174, metadata !2293), !dbg !3778
  %call63 = call %struct.NAMED* @hashTableIterNext(%struct.HASH_TABLE_ITER* %iter), !dbg !3779
  %66 = bitcast %struct.NAMED* %call63 to %struct.ELEMENT_TYPE*, !dbg !3780
  store %struct.ELEMENT_TYPE* %66, %struct.ELEMENT_TYPE** %oldE, align 8, !dbg !3778, !tbaa !2289
  %67 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8, !dbg !3781, !tbaa !2289
  %tobool64 = icmp ne %struct.ELEMENT_TYPE* %67, null, !dbg !3781
  br i1 %tobool64, label %if.end.66, label %if.then.65, !dbg !3783

if.then.65:                                       ; preds = %for.cond.61
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.154, !dbg !3784

if.end.66:                                        ; preds = %for.cond.61
  %68 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !3785, !tbaa !2289
  %pool67 = getelementptr inbounds %struct.DTD, %struct.DTD* %68, i32 0, i32 4, !dbg !3786
  %69 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8, !dbg !3787, !tbaa !2289
  %name68 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %69, i32 0, i32 0, !dbg !3788
  %70 = load i8*, i8** %name68, align 8, !dbg !3788, !tbaa !3789
  %call69 = call i8* @poolCopyString(%struct.STRING_POOL* %pool67, i8* %70), !dbg !3790
  store i8* %call69, i8** %name62, align 8, !dbg !3791, !tbaa !2289
  %71 = load i8*, i8** %name62, align 8, !dbg !3792, !tbaa !2289
  %tobool70 = icmp ne i8* %71, null, !dbg !3792
  br i1 %tobool70, label %if.end.72, label %if.then.71, !dbg !3794

if.then.71:                                       ; preds = %if.end.66
  store i32 0, i32* %retval, !dbg !3795
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.154, !dbg !3795

if.end.72:                                        ; preds = %if.end.66
  %72 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8, !dbg !3796, !tbaa !2289
  %73 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !3797, !tbaa !2289
  %elementTypes73 = getelementptr inbounds %struct.DTD, %struct.DTD* %73, i32 0, i32 1, !dbg !3798
  %74 = load i8*, i8** %name62, align 8, !dbg !3799, !tbaa !2289
  %call74 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %72, %struct.HASH_TABLE* %elementTypes73, i8* %74, i64 40), !dbg !3800
  %75 = bitcast %struct.NAMED* %call74 to %struct.ELEMENT_TYPE*, !dbg !3801
  store %struct.ELEMENT_TYPE* %75, %struct.ELEMENT_TYPE** %newE, align 8, !dbg !3802, !tbaa !2289
  %76 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8, !dbg !3803, !tbaa !2289
  %tobool75 = icmp ne %struct.ELEMENT_TYPE* %76, null, !dbg !3803
  br i1 %tobool75, label %if.end.77, label %if.then.76, !dbg !3805

if.then.76:                                       ; preds = %if.end.72
  store i32 0, i32* %retval, !dbg !3806
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.154, !dbg !3806

if.end.77:                                        ; preds = %if.end.72
  %77 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8, !dbg !3807, !tbaa !2289
  %nDefaultAtts = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %77, i32 0, i32 3, !dbg !3809
  %78 = load i32, i32* %nDefaultAtts, align 4, !dbg !3809, !tbaa !3810
  %tobool78 = icmp ne i32 %78, 0, !dbg !3807
  br i1 %tobool78, label %if.then.79, label %if.end.86, !dbg !3811

if.then.79:                                       ; preds = %if.end.77
  %79 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !dbg !3812, !tbaa !2289
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %79, i32 0, i32 0, !dbg !3814
  %80 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8, !dbg !3814, !tbaa !2331
  %81 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8, !dbg !3815, !tbaa !2289
  %nDefaultAtts80 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %81, i32 0, i32 3, !dbg !3816
  %82 = load i32, i32* %nDefaultAtts80, align 4, !dbg !3816, !tbaa !3810
  %conv = sext i32 %82 to i64, !dbg !3815
  %mul = mul i64 %conv, 24, !dbg !3817
  %call81 = call i8* %80(i64 %mul), !dbg !3812
  %83 = bitcast i8* %call81 to %struct.DEFAULT_ATTRIBUTE*, !dbg !3818
  %84 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8, !dbg !3819, !tbaa !2289
  %defaultAtts = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %84, i32 0, i32 5, !dbg !3820
  store %struct.DEFAULT_ATTRIBUTE* %83, %struct.DEFAULT_ATTRIBUTE** %defaultAtts, align 8, !dbg !3821, !tbaa !3097
  %85 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8, !dbg !3822, !tbaa !2289
  %defaultAtts82 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %85, i32 0, i32 5, !dbg !3824
  %86 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts82, align 8, !dbg !3824, !tbaa !3097
  %tobool83 = icmp ne %struct.DEFAULT_ATTRIBUTE* %86, null, !dbg !3822
  br i1 %tobool83, label %if.end.85, label %if.then.84, !dbg !3825

if.then.84:                                       ; preds = %if.then.79
  %87 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !dbg !3826, !tbaa !2289
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %87, i32 0, i32 2, !dbg !3828
  %88 = load void (i8*)*, void (i8*)** %free_fcn, align 8, !dbg !3828, !tbaa !2356
  %89 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8, !dbg !3829, !tbaa !2289
  %90 = bitcast %struct.ELEMENT_TYPE* %89 to i8*, !dbg !3829
  call void %88(i8* %90), !dbg !3826
  store i32 0, i32* %retval, !dbg !3830
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.154, !dbg !3830

if.end.85:                                        ; preds = %if.then.79
  br label %if.end.86, !dbg !3831

if.end.86:                                        ; preds = %if.end.85, %if.end.77
  %91 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8, !dbg !3832, !tbaa !2289
  %idAtt = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %91, i32 0, i32 2, !dbg !3834
  %92 = load %struct.attribute_id*, %struct.attribute_id** %idAtt, align 8, !dbg !3834, !tbaa !3835
  %tobool87 = icmp ne %struct.attribute_id* %92, null, !dbg !3832
  br i1 %tobool87, label %if.then.88, label %if.end.94, !dbg !3836

if.then.88:                                       ; preds = %if.end.86
  %93 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8, !dbg !3837, !tbaa !2289
  %94 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !3838, !tbaa !2289
  %attributeIds89 = getelementptr inbounds %struct.DTD, %struct.DTD* %94, i32 0, i32 2, !dbg !3839
  %95 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8, !dbg !3840, !tbaa !2289
  %idAtt90 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %95, i32 0, i32 2, !dbg !3841
  %96 = load %struct.attribute_id*, %struct.attribute_id** %idAtt90, align 8, !dbg !3841, !tbaa !3835
  %name91 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %96, i32 0, i32 0, !dbg !3842
  %97 = load i8*, i8** %name91, align 8, !dbg !3842, !tbaa !3701
  %call92 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %93, %struct.HASH_TABLE* %attributeIds89, i8* %97, i64 0), !dbg !3843
  %98 = bitcast %struct.NAMED* %call92 to %struct.attribute_id*, !dbg !3844
  %99 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8, !dbg !3845, !tbaa !2289
  %idAtt93 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %99, i32 0, i32 2, !dbg !3846
  store %struct.attribute_id* %98, %struct.attribute_id** %idAtt93, align 8, !dbg !3847, !tbaa !3835
  br label %if.end.94, !dbg !3845

if.end.94:                                        ; preds = %if.then.88, %if.end.86
  %100 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8, !dbg !3848, !tbaa !2289
  %nDefaultAtts95 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %100, i32 0, i32 3, !dbg !3849
  %101 = load i32, i32* %nDefaultAtts95, align 4, !dbg !3849, !tbaa !3810
  %102 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8, !dbg !3850, !tbaa !2289
  %nDefaultAtts96 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %102, i32 0, i32 3, !dbg !3851
  store i32 %101, i32* %nDefaultAtts96, align 4, !dbg !3852, !tbaa !3810
  %103 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8, !dbg !3853, !tbaa !2289
  %allocDefaultAtts = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %103, i32 0, i32 4, !dbg !3854
  store i32 %101, i32* %allocDefaultAtts, align 4, !dbg !3855, !tbaa !3089
  %104 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8, !dbg !3856, !tbaa !2289
  %prefix97 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %104, i32 0, i32 1, !dbg !3858
  %105 = load %struct.prefix*, %struct.prefix** %prefix97, align 8, !dbg !3858, !tbaa !3859
  %tobool98 = icmp ne %struct.prefix* %105, null, !dbg !3856
  br i1 %tobool98, label %if.then.99, label %if.end.105, !dbg !3860

if.then.99:                                       ; preds = %if.end.94
  %106 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8, !dbg !3861, !tbaa !2289
  %107 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !3862, !tbaa !2289
  %prefixes100 = getelementptr inbounds %struct.DTD, %struct.DTD* %107, i32 0, i32 3, !dbg !3863
  %108 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8, !dbg !3864, !tbaa !2289
  %prefix101 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %108, i32 0, i32 1, !dbg !3865
  %109 = load %struct.prefix*, %struct.prefix** %prefix101, align 8, !dbg !3865, !tbaa !3859
  %name102 = getelementptr inbounds %struct.prefix, %struct.prefix* %109, i32 0, i32 0, !dbg !3866
  %110 = load i8*, i8** %name102, align 8, !dbg !3866, !tbaa !3638
  %call103 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %106, %struct.HASH_TABLE* %prefixes100, i8* %110, i64 0), !dbg !3867
  %111 = bitcast %struct.NAMED* %call103 to %struct.prefix*, !dbg !3868
  %112 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8, !dbg !3869, !tbaa !2289
  %prefix104 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %112, i32 0, i32 1, !dbg !3870
  store %struct.prefix* %111, %struct.prefix** %prefix104, align 8, !dbg !3871, !tbaa !3859
  br label %if.end.105, !dbg !3869

if.end.105:                                       ; preds = %if.then.99, %if.end.94
  store i32 0, i32* %i, align 4, !dbg !3872, !tbaa !3391
  br label %for.cond.106, !dbg !3874

for.cond.106:                                     ; preds = %for.inc, %if.end.105
  %113 = load i32, i32* %i, align 4, !dbg !3875, !tbaa !3391
  %114 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8, !dbg !3879, !tbaa !2289
  %nDefaultAtts107 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %114, i32 0, i32 3, !dbg !3880
  %115 = load i32, i32* %nDefaultAtts107, align 4, !dbg !3880, !tbaa !3810
  %cmp108 = icmp slt i32 %113, %115, !dbg !3881
  br i1 %cmp108, label %for.body, label %for.end.153, !dbg !3882

for.body:                                         ; preds = %for.cond.106
  %116 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8, !dbg !3883, !tbaa !2289
  %117 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !3885, !tbaa !2289
  %attributeIds110 = getelementptr inbounds %struct.DTD, %struct.DTD* %117, i32 0, i32 2, !dbg !3886
  %118 = load i32, i32* %i, align 4, !dbg !3887, !tbaa !3391
  %idxprom = sext i32 %118 to i64, !dbg !3888
  %119 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8, !dbg !3888, !tbaa !2289
  %defaultAtts111 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %119, i32 0, i32 5, !dbg !3889
  %120 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts111, align 8, !dbg !3889, !tbaa !3097
  %arrayidx = getelementptr %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %120, i64 %idxprom, !dbg !3888
  %id = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %arrayidx, i32 0, i32 0, !dbg !3890
  %121 = load %struct.attribute_id*, %struct.attribute_id** %id, align 8, !dbg !3890, !tbaa !3891
  %name112 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %121, i32 0, i32 0, !dbg !3893
  %122 = load i8*, i8** %name112, align 8, !dbg !3893, !tbaa !3701
  %call113 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %116, %struct.HASH_TABLE* %attributeIds110, i8* %122, i64 0), !dbg !3894
  %123 = bitcast %struct.NAMED* %call113 to %struct.attribute_id*, !dbg !3895
  %124 = load i32, i32* %i, align 4, !dbg !3896, !tbaa !3391
  %idxprom114 = sext i32 %124 to i64, !dbg !3897
  %125 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8, !dbg !3897, !tbaa !2289
  %defaultAtts115 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %125, i32 0, i32 5, !dbg !3898
  %126 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts115, align 8, !dbg !3898, !tbaa !3097
  %arrayidx116 = getelementptr %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %126, i64 %idxprom114, !dbg !3897
  %id117 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %arrayidx116, i32 0, i32 0, !dbg !3899
  store %struct.attribute_id* %123, %struct.attribute_id** %id117, align 8, !dbg !3900, !tbaa !3891
  %127 = load i32, i32* %i, align 4, !dbg !3901, !tbaa !3391
  %idxprom118 = sext i32 %127 to i64, !dbg !3902
  %128 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8, !dbg !3902, !tbaa !2289
  %defaultAtts119 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %128, i32 0, i32 5, !dbg !3903
  %129 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts119, align 8, !dbg !3903, !tbaa !3097
  %arrayidx120 = getelementptr %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %129, i64 %idxprom118, !dbg !3902
  %isCdata = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %arrayidx120, i32 0, i32 1, !dbg !3904
  %130 = load i8, i8* %isCdata, align 1, !dbg !3904, !tbaa !3905
  %131 = load i32, i32* %i, align 4, !dbg !3906, !tbaa !3391
  %idxprom121 = sext i32 %131 to i64, !dbg !3907
  %132 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8, !dbg !3907, !tbaa !2289
  %defaultAtts122 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %132, i32 0, i32 5, !dbg !3908
  %133 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts122, align 8, !dbg !3908, !tbaa !3097
  %arrayidx123 = getelementptr %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %133, i64 %idxprom121, !dbg !3907
  %isCdata124 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %arrayidx123, i32 0, i32 1, !dbg !3909
  store i8 %130, i8* %isCdata124, align 1, !dbg !3910, !tbaa !3905
  %134 = load i32, i32* %i, align 4, !dbg !3911, !tbaa !3391
  %idxprom125 = sext i32 %134 to i64, !dbg !3913
  %135 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8, !dbg !3913, !tbaa !2289
  %defaultAtts126 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %135, i32 0, i32 5, !dbg !3914
  %136 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts126, align 8, !dbg !3914, !tbaa !3097
  %arrayidx127 = getelementptr %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %136, i64 %idxprom125, !dbg !3913
  %value = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %arrayidx127, i32 0, i32 2, !dbg !3915
  %137 = load i8*, i8** %value, align 8, !dbg !3915, !tbaa !3916
  %tobool128 = icmp ne i8* %137, null, !dbg !3913
  br i1 %tobool128, label %if.then.129, label %if.else.147, !dbg !3917

if.then.129:                                      ; preds = %for.body
  %138 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !3918, !tbaa !2289
  %pool130 = getelementptr inbounds %struct.DTD, %struct.DTD* %138, i32 0, i32 4, !dbg !3920
  %139 = load i32, i32* %i, align 4, !dbg !3921, !tbaa !3391
  %idxprom131 = sext i32 %139 to i64, !dbg !3922
  %140 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8, !dbg !3922, !tbaa !2289
  %defaultAtts132 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %140, i32 0, i32 5, !dbg !3923
  %141 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts132, align 8, !dbg !3923, !tbaa !3097
  %arrayidx133 = getelementptr %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %141, i64 %idxprom131, !dbg !3922
  %value134 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %arrayidx133, i32 0, i32 2, !dbg !3924
  %142 = load i8*, i8** %value134, align 8, !dbg !3924, !tbaa !3916
  %call135 = call i8* @poolCopyString(%struct.STRING_POOL* %pool130, i8* %142), !dbg !3925
  %143 = load i32, i32* %i, align 4, !dbg !3926, !tbaa !3391
  %idxprom136 = sext i32 %143 to i64, !dbg !3927
  %144 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8, !dbg !3927, !tbaa !2289
  %defaultAtts137 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %144, i32 0, i32 5, !dbg !3928
  %145 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts137, align 8, !dbg !3928, !tbaa !3097
  %arrayidx138 = getelementptr %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %145, i64 %idxprom136, !dbg !3927
  %value139 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %arrayidx138, i32 0, i32 2, !dbg !3929
  store i8* %call135, i8** %value139, align 8, !dbg !3930, !tbaa !3916
  %146 = load i32, i32* %i, align 4, !dbg !3931, !tbaa !3391
  %idxprom140 = sext i32 %146 to i64, !dbg !3933
  %147 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8, !dbg !3933, !tbaa !2289
  %defaultAtts141 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %147, i32 0, i32 5, !dbg !3934
  %148 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts141, align 8, !dbg !3934, !tbaa !3097
  %arrayidx142 = getelementptr %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %148, i64 %idxprom140, !dbg !3933
  %value143 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %arrayidx142, i32 0, i32 2, !dbg !3935
  %149 = load i8*, i8** %value143, align 8, !dbg !3935, !tbaa !3916
  %tobool144 = icmp ne i8* %149, null, !dbg !3933
  br i1 %tobool144, label %if.end.146, label %if.then.145, !dbg !3936

if.then.145:                                      ; preds = %if.then.129
  store i32 0, i32* %retval, !dbg !3937
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.154, !dbg !3937

if.end.146:                                       ; preds = %if.then.129
  br label %if.end.152, !dbg !3938

if.else.147:                                      ; preds = %for.body
  %150 = load i32, i32* %i, align 4, !dbg !3939, !tbaa !3391
  %idxprom148 = sext i32 %150 to i64, !dbg !3940
  %151 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8, !dbg !3940, !tbaa !2289
  %defaultAtts149 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %151, i32 0, i32 5, !dbg !3941
  %152 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts149, align 8, !dbg !3941, !tbaa !3097
  %arrayidx150 = getelementptr %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %152, i64 %idxprom148, !dbg !3940
  %value151 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %arrayidx150, i32 0, i32 2, !dbg !3942
  store i8* null, i8** %value151, align 8, !dbg !3943, !tbaa !3916
  br label %if.end.152

if.end.152:                                       ; preds = %if.else.147, %if.end.146
  br label %for.inc, !dbg !3944

for.inc:                                          ; preds = %if.end.152
  %153 = load i32, i32* %i, align 4, !dbg !3945, !tbaa !3391
  %inc = add i32 %153, 1, !dbg !3945
  store i32 %inc, i32* %i, align 4, !dbg !3945, !tbaa !3391
  br label %for.cond.106, !dbg !3946

for.end.153:                                      ; preds = %for.cond.106
  store i32 0, i32* %cleanup.dest.slot, !dbg !3947
  br label %cleanup.154, !dbg !3947

cleanup.154:                                      ; preds = %for.end.153, %if.then.145, %if.then.84, %if.then.76, %if.then.71, %if.then.65
  %154 = bitcast %struct.ELEMENT_TYPE** %oldE to i8*, !dbg !3948
  call void @llvm.lifetime.end(i64 8, i8* %154) #2, !dbg !3948
  %155 = bitcast i8** %name62 to i8*, !dbg !3948
  call void @llvm.lifetime.end(i64 8, i8* %155) #2, !dbg !3948
  %156 = bitcast %struct.ELEMENT_TYPE** %newE to i8*, !dbg !3948
  call void @llvm.lifetime.end(i64 8, i8* %156) #2, !dbg !3948
  %157 = bitcast i32* %i to i8*, !dbg !3948
  call void @llvm.lifetime.end(i64 4, i8* %157) #2, !dbg !3948
  %cleanup.dest.158 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.158, label %cleanup.183 [
    i32 0, label %cleanup.cont.159
    i32 6, label %for.end.160
  ]

cleanup.cont.159:                                 ; preds = %cleanup.154
  br label %for.cond.61, !dbg !3950

for.end.160:                                      ; preds = %cleanup.154
  %158 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8, !dbg !3951, !tbaa !2289
  %159 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !3953, !tbaa !2289
  %generalEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %159, i32 0, i32 0, !dbg !3954
  %160 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !3955, !tbaa !2289
  %pool161 = getelementptr inbounds %struct.DTD, %struct.DTD* %160, i32 0, i32 4, !dbg !3956
  %161 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8, !dbg !3957, !tbaa !2289
  %generalEntities162 = getelementptr inbounds %struct.DTD, %struct.DTD* %161, i32 0, i32 0, !dbg !3958
  %call163 = call i32 @copyEntityTable(%struct.XML_ParserStruct* %158, %struct.HASH_TABLE* %generalEntities, %struct.STRING_POOL* %pool161, %struct.HASH_TABLE* %generalEntities162), !dbg !3959
  %tobool164 = icmp ne i32 %call163, 0, !dbg !3959
  br i1 %tobool164, label %if.end.166, label %if.then.165, !dbg !3960

if.then.165:                                      ; preds = %for.end.160
  store i32 0, i32* %retval, !dbg !3961
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.183, !dbg !3961

if.end.166:                                       ; preds = %for.end.160
  %162 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8, !dbg !3962, !tbaa !2289
  %163 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !3964, !tbaa !2289
  %paramEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %163, i32 0, i32 10, !dbg !3965
  %164 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !3966, !tbaa !2289
  %pool167 = getelementptr inbounds %struct.DTD, %struct.DTD* %164, i32 0, i32 4, !dbg !3967
  %165 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8, !dbg !3968, !tbaa !2289
  %paramEntities168 = getelementptr inbounds %struct.DTD, %struct.DTD* %165, i32 0, i32 10, !dbg !3969
  %call169 = call i32 @copyEntityTable(%struct.XML_ParserStruct* %162, %struct.HASH_TABLE* %paramEntities, %struct.STRING_POOL* %pool167, %struct.HASH_TABLE* %paramEntities168), !dbg !3970
  %tobool170 = icmp ne i32 %call169, 0, !dbg !3970
  br i1 %tobool170, label %if.end.172, label %if.then.171, !dbg !3971

if.then.171:                                      ; preds = %if.end.166
  store i32 0, i32* %retval, !dbg !3972
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.183, !dbg !3972

if.end.172:                                       ; preds = %if.end.166
  %166 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8, !dbg !3973, !tbaa !2289
  %paramEntityRead = getelementptr inbounds %struct.DTD, %struct.DTD* %166, i32 0, i32 9, !dbg !3974
  %167 = load i8, i8* %paramEntityRead, align 1, !dbg !3974, !tbaa !3108
  %168 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !3975, !tbaa !2289
  %paramEntityRead173 = getelementptr inbounds %struct.DTD, %struct.DTD* %168, i32 0, i32 9, !dbg !3976
  store i8 %167, i8* %paramEntityRead173, align 1, !dbg !3977, !tbaa !3108
  %169 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8, !dbg !3978, !tbaa !2289
  %keepProcessing = getelementptr inbounds %struct.DTD, %struct.DTD* %169, i32 0, i32 6, !dbg !3979
  %170 = load i8, i8* %keepProcessing, align 1, !dbg !3979, !tbaa !3179
  %171 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !3980, !tbaa !2289
  %keepProcessing174 = getelementptr inbounds %struct.DTD, %struct.DTD* %171, i32 0, i32 6, !dbg !3981
  store i8 %170, i8* %keepProcessing174, align 1, !dbg !3982, !tbaa !3179
  %172 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8, !dbg !3983, !tbaa !2289
  %hasParamEntityRefs = getelementptr inbounds %struct.DTD, %struct.DTD* %172, i32 0, i32 7, !dbg !3984
  %173 = load i8, i8* %hasParamEntityRefs, align 1, !dbg !3984, !tbaa !3183
  %174 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !3985, !tbaa !2289
  %hasParamEntityRefs175 = getelementptr inbounds %struct.DTD, %struct.DTD* %174, i32 0, i32 7, !dbg !3986
  store i8 %173, i8* %hasParamEntityRefs175, align 1, !dbg !3987, !tbaa !3183
  %175 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8, !dbg !3988, !tbaa !2289
  %standalone = getelementptr inbounds %struct.DTD, %struct.DTD* %175, i32 0, i32 8, !dbg !3989
  %176 = load i8, i8* %standalone, align 1, !dbg !3989, !tbaa !3187
  %177 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !3990, !tbaa !2289
  %standalone176 = getelementptr inbounds %struct.DTD, %struct.DTD* %177, i32 0, i32 8, !dbg !3991
  store i8 %176, i8* %standalone176, align 1, !dbg !3992, !tbaa !3187
  %178 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8, !dbg !3993, !tbaa !2289
  %in_eldecl = getelementptr inbounds %struct.DTD, %struct.DTD* %178, i32 0, i32 12, !dbg !3994
  %179 = load i8, i8* %in_eldecl, align 1, !dbg !3994, !tbaa !3143
  %180 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !3995, !tbaa !2289
  %in_eldecl177 = getelementptr inbounds %struct.DTD, %struct.DTD* %180, i32 0, i32 12, !dbg !3996
  store i8 %179, i8* %in_eldecl177, align 1, !dbg !3997, !tbaa !3143
  %181 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8, !dbg !3998, !tbaa !2289
  %scaffold = getelementptr inbounds %struct.DTD, %struct.DTD* %181, i32 0, i32 13, !dbg !3999
  %182 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold, align 8, !dbg !3999, !tbaa !3156
  %183 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !4000, !tbaa !2289
  %scaffold178 = getelementptr inbounds %struct.DTD, %struct.DTD* %183, i32 0, i32 13, !dbg !4001
  store %struct.CONTENT_SCAFFOLD* %182, %struct.CONTENT_SCAFFOLD** %scaffold178, align 8, !dbg !4002, !tbaa !3156
  %184 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8, !dbg !4003, !tbaa !2289
  %contentStringLen = getelementptr inbounds %struct.DTD, %struct.DTD* %184, i32 0, i32 14, !dbg !4004
  %185 = load i32, i32* %contentStringLen, align 4, !dbg !4004, !tbaa !3175
  %186 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !4005, !tbaa !2289
  %contentStringLen179 = getelementptr inbounds %struct.DTD, %struct.DTD* %186, i32 0, i32 14, !dbg !4006
  store i32 %185, i32* %contentStringLen179, align 4, !dbg !4007, !tbaa !3175
  %187 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8, !dbg !4008, !tbaa !2289
  %scaffSize = getelementptr inbounds %struct.DTD, %struct.DTD* %187, i32 0, i32 15, !dbg !4009
  %188 = load i32, i32* %scaffSize, align 4, !dbg !4009, !tbaa !3167
  %189 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !4010, !tbaa !2289
  %scaffSize180 = getelementptr inbounds %struct.DTD, %struct.DTD* %189, i32 0, i32 15, !dbg !4011
  store i32 %188, i32* %scaffSize180, align 4, !dbg !4012, !tbaa !3167
  %190 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8, !dbg !4013, !tbaa !2289
  %scaffLevel = getelementptr inbounds %struct.DTD, %struct.DTD* %190, i32 0, i32 17, !dbg !4014
  %191 = load i32, i32* %scaffLevel, align 4, !dbg !4014, !tbaa !3163
  %192 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !4015, !tbaa !2289
  %scaffLevel181 = getelementptr inbounds %struct.DTD, %struct.DTD* %192, i32 0, i32 17, !dbg !4016
  store i32 %191, i32* %scaffLevel181, align 4, !dbg !4017, !tbaa !3163
  %193 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8, !dbg !4018, !tbaa !2289
  %scaffIndex = getelementptr inbounds %struct.DTD, %struct.DTD* %193, i32 0, i32 18, !dbg !4019
  %194 = load i32*, i32** %scaffIndex, align 8, !dbg !4019, !tbaa !3148
  %195 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !4020, !tbaa !2289
  %scaffIndex182 = getelementptr inbounds %struct.DTD, %struct.DTD* %195, i32 0, i32 18, !dbg !4021
  store i32* %194, i32** %scaffIndex182, align 8, !dbg !4022, !tbaa !3148
  store i32 1, i32* %retval, !dbg !4023
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.183, !dbg !4023

cleanup.183:                                      ; preds = %if.end.172, %if.then.171, %if.then.165, %cleanup.154, %cleanup.55, %cleanup
  %196 = bitcast %struct.HASH_TABLE_ITER* %iter to i8*, !dbg !4024
  call void @llvm.lifetime.end(i64 16, i8* %196) #2, !dbg !4024
  %197 = load i32, i32* %retval, !dbg !4024
  ret i32 %197, !dbg !4024
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @setContext(%struct.XML_ParserStruct* %parser, i8* %context) #0 {
entry:
  %retval = alloca i8, align 1
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %context.addr = alloca i8*, align 8
  %dtd = alloca %struct.DTD*, align 8
  %s = alloca i8*, align 8
  %e = alloca %struct.ENTITY*, align 8
  %cleanup.dest.slot = alloca i32
  %prefix = alloca %struct.prefix*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !2100, metadata !2293), !dbg !4025
  store i8* %context, i8** %context.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !2101, metadata !2293), !dbg !4026
  %0 = bitcast %struct.DTD** %dtd to i8*, !dbg !4027
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !4027
  call void @llvm.dbg.declare(metadata %struct.DTD** %dtd, metadata !2102, metadata !2293), !dbg !4028
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4029, !tbaa !2289
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 65, !dbg !4030
  %2 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !4030, !tbaa !2478
  store %struct.DTD* %2, %struct.DTD** %dtd, align 8, !dbg !4028, !tbaa !2289
  %3 = bitcast i8** %s to i8*, !dbg !4031
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !4031
  call void @llvm.dbg.declare(metadata i8** %s, metadata !2103, metadata !2293), !dbg !4032
  %4 = load i8*, i8** %context.addr, align 8, !dbg !4033, !tbaa !2289
  store i8* %4, i8** %s, align 8, !dbg !4032, !tbaa !2289
  br label %while.cond, !dbg !4034

while.cond:                                       ; preds = %if.end.164, %entry
  %5 = load i8*, i8** %context.addr, align 8, !dbg !4035, !tbaa !2289
  %6 = load i8, i8* %5, align 1, !dbg !4038, !tbaa !2307
  %conv = sext i8 %6 to i32, !dbg !4038
  %cmp = icmp ne i32 %conv, 0, !dbg !4039
  br i1 %cmp, label %while.body, label %while.end, !dbg !4034

while.body:                                       ; preds = %while.cond
  %7 = load i8*, i8** %s, align 8, !dbg !4040, !tbaa !2289
  %8 = load i8, i8* %7, align 1, !dbg !4041, !tbaa !2307
  %conv2 = sext i8 %8 to i32, !dbg !4041
  %cmp3 = icmp eq i32 %conv2, 12, !dbg !4042
  br i1 %cmp3, label %if.then, label %lor.lhs.false, !dbg !4043

lor.lhs.false:                                    ; preds = %while.body
  %9 = load i8*, i8** %s, align 8, !dbg !4044, !tbaa !2289
  %10 = load i8, i8* %9, align 1, !dbg !4046, !tbaa !2307
  %conv5 = sext i8 %10 to i32, !dbg !4046
  %cmp6 = icmp eq i32 %conv5, 0, !dbg !4047
  br i1 %cmp6, label %if.then, label %if.else, !dbg !4048

if.then:                                          ; preds = %lor.lhs.false, %while.body
  %11 = bitcast %struct.ENTITY** %e to i8*, !dbg !4049
  call void @llvm.lifetime.start(i64 8, i8* %11) #2, !dbg !4049
  call void @llvm.dbg.declare(metadata %struct.ENTITY** %e, metadata !2104, metadata !2293), !dbg !4050
  %12 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4051, !tbaa !2289
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %12, i32 0, i32 79, !dbg !4053
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool, i32 0, i32 3, !dbg !4054
  %13 = load i8*, i8** %ptr, align 8, !dbg !4054, !tbaa !2798
  %14 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4055, !tbaa !2289
  %m_tempPool8 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %14, i32 0, i32 79, !dbg !4056
  %end = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool8, i32 0, i32 2, !dbg !4057
  %15 = load i8*, i8** %end, align 8, !dbg !4057, !tbaa !2802
  %cmp9 = icmp eq i8* %13, %15, !dbg !4058
  br i1 %cmp9, label %land.lhs.true, label %cond.false, !dbg !4059

land.lhs.true:                                    ; preds = %if.then
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4060, !tbaa !2289
  %m_tempPool11 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 79, !dbg !4062
  %call = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool11), !dbg !4063
  %tobool = icmp ne i8 %call, 0, !dbg !4063
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !4064

cond.true:                                        ; preds = %land.lhs.true
  br i1 false, label %if.end, label %if.then.14, !dbg !4065

cond.false:                                       ; preds = %land.lhs.true, %if.then
  %17 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4067, !tbaa !2289
  %m_tempPool12 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %17, i32 0, i32 79, !dbg !4070
  %ptr13 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool12, i32 0, i32 3, !dbg !4071
  %18 = load i8*, i8** %ptr13, align 8, !dbg !4072, !tbaa !2798
  %incdec.ptr = getelementptr i8, i8* %18, i32 1, !dbg !4072
  store i8* %incdec.ptr, i8** %ptr13, align 8, !dbg !4072, !tbaa !2798
  store i8 0, i8* %18, align 1, !dbg !4073, !tbaa !2307
  br i1 true, label %if.end, label %if.then.14, !dbg !4064

if.then.14:                                       ; preds = %cond.false, %cond.true
  store i8 0, i8* %retval, !dbg !4074
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4074

if.end:                                           ; preds = %cond.false, %cond.true
  %19 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4075, !tbaa !2289
  %20 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !4076, !tbaa !2289
  %generalEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %20, i32 0, i32 0, !dbg !4077
  %21 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4078, !tbaa !2289
  %m_tempPool15 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %21, i32 0, i32 79, !dbg !4079
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool15, i32 0, i32 4, !dbg !4080
  %22 = load i8*, i8** %start, align 8, !dbg !4080, !tbaa !2794
  %call16 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %19, %struct.HASH_TABLE* %generalEntities, i8* %22, i64 0), !dbg !4081
  %23 = bitcast %struct.NAMED* %call16 to %struct.ENTITY*, !dbg !4082
  store %struct.ENTITY* %23, %struct.ENTITY** %e, align 8, !dbg !4083, !tbaa !2289
  %24 = load %struct.ENTITY*, %struct.ENTITY** %e, align 8, !dbg !4084, !tbaa !2289
  %tobool17 = icmp ne %struct.ENTITY* %24, null, !dbg !4084
  br i1 %tobool17, label %if.then.18, label %if.end.19, !dbg !4086

if.then.18:                                       ; preds = %if.end
  %25 = load %struct.ENTITY*, %struct.ENTITY** %e, align 8, !dbg !4087, !tbaa !2289
  %open = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %25, i32 0, i32 8, !dbg !4088
  store i8 1, i8* %open, align 1, !dbg !4089, !tbaa !4090
  br label %if.end.19, !dbg !4087

if.end.19:                                        ; preds = %if.then.18, %if.end
  %26 = load i8*, i8** %s, align 8, !dbg !4092, !tbaa !2289
  %27 = load i8, i8* %26, align 1, !dbg !4094, !tbaa !2307
  %conv20 = sext i8 %27 to i32, !dbg !4094
  %cmp21 = icmp ne i32 %conv20, 0, !dbg !4095
  br i1 %cmp21, label %if.then.23, label %if.end.25, !dbg !4096

if.then.23:                                       ; preds = %if.end.19
  %28 = load i8*, i8** %s, align 8, !dbg !4097, !tbaa !2289
  %incdec.ptr24 = getelementptr i8, i8* %28, i32 1, !dbg !4097
  store i8* %incdec.ptr24, i8** %s, align 8, !dbg !4097, !tbaa !2289
  br label %if.end.25, !dbg !4098

if.end.25:                                        ; preds = %if.then.23, %if.end.19
  %29 = load i8*, i8** %s, align 8, !dbg !4099, !tbaa !2289
  store i8* %29, i8** %context.addr, align 8, !dbg !4100, !tbaa !2289
  %30 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4101, !tbaa !2289
  %m_tempPool26 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %30, i32 0, i32 79, !dbg !4102
  %start27 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool26, i32 0, i32 4, !dbg !4103
  %31 = load i8*, i8** %start27, align 8, !dbg !4103, !tbaa !2794
  %32 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4104, !tbaa !2289
  %m_tempPool28 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %32, i32 0, i32 79, !dbg !4105
  %ptr29 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool28, i32 0, i32 3, !dbg !4106
  store i8* %31, i8** %ptr29, align 8, !dbg !4107, !tbaa !2798
  store i32 0, i32* %cleanup.dest.slot, !dbg !4108
  br label %cleanup, !dbg !4108

cleanup:                                          ; preds = %if.end.25, %if.then.14
  %33 = bitcast %struct.ENTITY** %e to i8*, !dbg !4109
  call void @llvm.lifetime.end(i64 8, i8* %33) #2, !dbg !4109
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.165 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.164, !dbg !4110

if.else:                                          ; preds = %lor.lhs.false
  %34 = load i8*, i8** %s, align 8, !dbg !4111, !tbaa !2289
  %35 = load i8, i8* %34, align 1, !dbg !4112, !tbaa !2307
  %conv30 = sext i8 %35 to i32, !dbg !4112
  %cmp31 = icmp eq i32 %conv30, 61, !dbg !4113
  br i1 %cmp31, label %if.then.33, label %if.else.144, !dbg !4114

if.then.33:                                       ; preds = %if.else
  %36 = bitcast %struct.prefix** %prefix to i8*, !dbg !4115
  call void @llvm.lifetime.start(i64 8, i8* %36) #2, !dbg !4115
  call void @llvm.dbg.declare(metadata %struct.prefix** %prefix, metadata !2108, metadata !2293), !dbg !4116
  %37 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4117, !tbaa !2289
  %m_tempPool34 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %37, i32 0, i32 79, !dbg !4119
  %ptr35 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool34, i32 0, i32 3, !dbg !4120
  %38 = load i8*, i8** %ptr35, align 8, !dbg !4120, !tbaa !2798
  %39 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4121, !tbaa !2289
  %m_tempPool36 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %39, i32 0, i32 79, !dbg !4122
  %start37 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool36, i32 0, i32 4, !dbg !4123
  %40 = load i8*, i8** %start37, align 8, !dbg !4123, !tbaa !2794
  %sub.ptr.lhs.cast = ptrtoint i8* %38 to i64, !dbg !4124
  %sub.ptr.rhs.cast = ptrtoint i8* %40 to i64, !dbg !4124
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4124
  %cmp38 = icmp eq i64 %sub.ptr.sub, 0, !dbg !4125
  br i1 %cmp38, label %if.then.40, label %if.else.41, !dbg !4126

if.then.40:                                       ; preds = %if.then.33
  %41 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !4127, !tbaa !2289
  %defaultPrefix = getelementptr inbounds %struct.DTD, %struct.DTD* %41, i32 0, i32 11, !dbg !4128
  store %struct.prefix* %defaultPrefix, %struct.prefix** %prefix, align 8, !dbg !4129, !tbaa !2289
  br label %if.end.82, !dbg !4130

if.else.41:                                       ; preds = %if.then.33
  %42 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4131, !tbaa !2289
  %m_tempPool42 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %42, i32 0, i32 79, !dbg !4134
  %ptr43 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool42, i32 0, i32 3, !dbg !4135
  %43 = load i8*, i8** %ptr43, align 8, !dbg !4135, !tbaa !2798
  %44 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4136, !tbaa !2289
  %m_tempPool44 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %44, i32 0, i32 79, !dbg !4137
  %end45 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool44, i32 0, i32 2, !dbg !4138
  %45 = load i8*, i8** %end45, align 8, !dbg !4138, !tbaa !2802
  %cmp46 = icmp eq i8* %43, %45, !dbg !4139
  br i1 %cmp46, label %land.lhs.true.48, label %cond.false.53, !dbg !4140

land.lhs.true.48:                                 ; preds = %if.else.41
  %46 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4141, !tbaa !2289
  %m_tempPool49 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %46, i32 0, i32 79, !dbg !4143
  %call50 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool49), !dbg !4144
  %tobool51 = icmp ne i8 %call50, 0, !dbg !4144
  br i1 %tobool51, label %cond.false.53, label %cond.true.52, !dbg !4145

cond.true.52:                                     ; preds = %land.lhs.true.48
  br i1 false, label %if.end.58, label %if.then.57, !dbg !4146

cond.false.53:                                    ; preds = %land.lhs.true.48, %if.else.41
  %47 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4148, !tbaa !2289
  %m_tempPool54 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %47, i32 0, i32 79, !dbg !4151
  %ptr55 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool54, i32 0, i32 3, !dbg !4152
  %48 = load i8*, i8** %ptr55, align 8, !dbg !4153, !tbaa !2798
  %incdec.ptr56 = getelementptr i8, i8* %48, i32 1, !dbg !4153
  store i8* %incdec.ptr56, i8** %ptr55, align 8, !dbg !4153, !tbaa !2798
  store i8 0, i8* %48, align 1, !dbg !4154, !tbaa !2307
  br i1 true, label %if.end.58, label %if.then.57, !dbg !4145

if.then.57:                                       ; preds = %cond.false.53, %cond.true.52
  store i8 0, i8* %retval, !dbg !4155
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.141, !dbg !4155

if.end.58:                                        ; preds = %cond.false.53, %cond.true.52
  %49 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4156, !tbaa !2289
  %50 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !4157, !tbaa !2289
  %prefixes = getelementptr inbounds %struct.DTD, %struct.DTD* %50, i32 0, i32 3, !dbg !4158
  %51 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4159, !tbaa !2289
  %m_tempPool59 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %51, i32 0, i32 79, !dbg !4160
  %start60 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool59, i32 0, i32 4, !dbg !4161
  %52 = load i8*, i8** %start60, align 8, !dbg !4161, !tbaa !2794
  %call61 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %49, %struct.HASH_TABLE* %prefixes, i8* %52, i64 16), !dbg !4162
  %53 = bitcast %struct.NAMED* %call61 to %struct.prefix*, !dbg !4163
  store %struct.prefix* %53, %struct.prefix** %prefix, align 8, !dbg !4164, !tbaa !2289
  %54 = load %struct.prefix*, %struct.prefix** %prefix, align 8, !dbg !4165, !tbaa !2289
  %tobool62 = icmp ne %struct.prefix* %54, null, !dbg !4165
  br i1 %tobool62, label %if.end.64, label %if.then.63, !dbg !4167

if.then.63:                                       ; preds = %if.end.58
  store i8 0, i8* %retval, !dbg !4168
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.141, !dbg !4168

if.end.64:                                        ; preds = %if.end.58
  %55 = load %struct.prefix*, %struct.prefix** %prefix, align 8, !dbg !4169, !tbaa !2289
  %name = getelementptr inbounds %struct.prefix, %struct.prefix* %55, i32 0, i32 0, !dbg !4171
  %56 = load i8*, i8** %name, align 8, !dbg !4171, !tbaa !3638
  %57 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4172, !tbaa !2289
  %m_tempPool65 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %57, i32 0, i32 79, !dbg !4173
  %start66 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool65, i32 0, i32 4, !dbg !4174
  %58 = load i8*, i8** %start66, align 8, !dbg !4174, !tbaa !2794
  %cmp67 = icmp eq i8* %56, %58, !dbg !4175
  br i1 %cmp67, label %if.then.69, label %if.end.77, !dbg !4176

if.then.69:                                       ; preds = %if.end.64
  %59 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !4177, !tbaa !2289
  %pool = getelementptr inbounds %struct.DTD, %struct.DTD* %59, i32 0, i32 4, !dbg !4179
  %60 = load %struct.prefix*, %struct.prefix** %prefix, align 8, !dbg !4180, !tbaa !2289
  %name70 = getelementptr inbounds %struct.prefix, %struct.prefix* %60, i32 0, i32 0, !dbg !4181
  %61 = load i8*, i8** %name70, align 8, !dbg !4181, !tbaa !3638
  %call71 = call i8* @poolCopyString(%struct.STRING_POOL* %pool, i8* %61), !dbg !4182
  %62 = load %struct.prefix*, %struct.prefix** %prefix, align 8, !dbg !4183, !tbaa !2289
  %name72 = getelementptr inbounds %struct.prefix, %struct.prefix* %62, i32 0, i32 0, !dbg !4184
  store i8* %call71, i8** %name72, align 8, !dbg !4185, !tbaa !3638
  %63 = load %struct.prefix*, %struct.prefix** %prefix, align 8, !dbg !4186, !tbaa !2289
  %name73 = getelementptr inbounds %struct.prefix, %struct.prefix* %63, i32 0, i32 0, !dbg !4188
  %64 = load i8*, i8** %name73, align 8, !dbg !4188, !tbaa !3638
  %tobool74 = icmp ne i8* %64, null, !dbg !4186
  br i1 %tobool74, label %if.end.76, label %if.then.75, !dbg !4189

if.then.75:                                       ; preds = %if.then.69
  store i8 0, i8* %retval, !dbg !4190
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.141, !dbg !4190

if.end.76:                                        ; preds = %if.then.69
  br label %if.end.77, !dbg !4191

if.end.77:                                        ; preds = %if.end.76, %if.end.64
  %65 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4192, !tbaa !2289
  %m_tempPool78 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %65, i32 0, i32 79, !dbg !4193
  %start79 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool78, i32 0, i32 4, !dbg !4194
  %66 = load i8*, i8** %start79, align 8, !dbg !4194, !tbaa !2794
  %67 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4195, !tbaa !2289
  %m_tempPool80 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %67, i32 0, i32 79, !dbg !4196
  %ptr81 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool80, i32 0, i32 3, !dbg !4197
  store i8* %66, i8** %ptr81, align 8, !dbg !4198, !tbaa !2798
  br label %if.end.82

if.end.82:                                        ; preds = %if.end.77, %if.then.40
  %68 = load i8*, i8** %s, align 8, !dbg !4199, !tbaa !2289
  %add.ptr = getelementptr i8, i8* %68, i64 1, !dbg !4201
  store i8* %add.ptr, i8** %context.addr, align 8, !dbg !4202, !tbaa !2289
  br label %for.cond, !dbg !4203

for.cond:                                         ; preds = %for.inc, %if.end.82
  %69 = load i8*, i8** %context.addr, align 8, !dbg !4204, !tbaa !2289
  %70 = load i8, i8* %69, align 1, !dbg !4206, !tbaa !2307
  %conv83 = sext i8 %70 to i32, !dbg !4206
  %cmp84 = icmp ne i32 %conv83, 12, !dbg !4207
  br i1 %cmp84, label %land.rhs, label %land.end, !dbg !4208

land.rhs:                                         ; preds = %for.cond
  %71 = load i8*, i8** %context.addr, align 8, !dbg !4209, !tbaa !2289
  %72 = load i8, i8* %71, align 1, !dbg !4211, !tbaa !2307
  %conv86 = sext i8 %72 to i32, !dbg !4211
  %cmp87 = icmp ne i32 %conv86, 0, !dbg !4212
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %73 = phi i1 [ false, %for.cond ], [ %cmp87, %land.rhs ]
  br i1 %73, label %for.body, label %for.end, !dbg !4213

for.body:                                         ; preds = %land.end
  %74 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4214, !tbaa !2289
  %m_tempPool89 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %74, i32 0, i32 79, !dbg !4216
  %ptr90 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool89, i32 0, i32 3, !dbg !4217
  %75 = load i8*, i8** %ptr90, align 8, !dbg !4217, !tbaa !2798
  %76 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4218, !tbaa !2289
  %m_tempPool91 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %76, i32 0, i32 79, !dbg !4219
  %end92 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool91, i32 0, i32 2, !dbg !4220
  %77 = load i8*, i8** %end92, align 8, !dbg !4220, !tbaa !2802
  %cmp93 = icmp eq i8* %75, %77, !dbg !4221
  br i1 %cmp93, label %land.lhs.true.95, label %cond.false.100, !dbg !4222

land.lhs.true.95:                                 ; preds = %for.body
  %78 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4223, !tbaa !2289
  %m_tempPool96 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %78, i32 0, i32 79, !dbg !4225
  %call97 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool96), !dbg !4226
  %tobool98 = icmp ne i8 %call97, 0, !dbg !4226
  br i1 %tobool98, label %cond.false.100, label %cond.true.99, !dbg !4227

cond.true.99:                                     ; preds = %land.lhs.true.95
  br i1 false, label %if.end.105, label %if.then.104, !dbg !4228

cond.false.100:                                   ; preds = %land.lhs.true.95, %for.body
  %79 = load i8*, i8** %context.addr, align 8, !dbg !4230, !tbaa !2289
  %80 = load i8, i8* %79, align 1, !dbg !4233, !tbaa !2307
  %81 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4234, !tbaa !2289
  %m_tempPool101 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %81, i32 0, i32 79, !dbg !4235
  %ptr102 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool101, i32 0, i32 3, !dbg !4236
  %82 = load i8*, i8** %ptr102, align 8, !dbg !4237, !tbaa !2798
  %incdec.ptr103 = getelementptr i8, i8* %82, i32 1, !dbg !4237
  store i8* %incdec.ptr103, i8** %ptr102, align 8, !dbg !4237, !tbaa !2798
  store i8 %80, i8* %82, align 1, !dbg !4238, !tbaa !2307
  br i1 true, label %if.end.105, label %if.then.104, !dbg !4227

if.then.104:                                      ; preds = %cond.false.100, %cond.true.99
  store i8 0, i8* %retval, !dbg !4239
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.141, !dbg !4239

if.end.105:                                       ; preds = %cond.false.100, %cond.true.99
  br label %for.inc, !dbg !4240

for.inc:                                          ; preds = %if.end.105
  %83 = load i8*, i8** %context.addr, align 8, !dbg !4243, !tbaa !2289
  %incdec.ptr106 = getelementptr i8, i8* %83, i32 1, !dbg !4243
  store i8* %incdec.ptr106, i8** %context.addr, align 8, !dbg !4243, !tbaa !2289
  br label %for.cond, !dbg !4244

for.end:                                          ; preds = %land.end
  %84 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4245, !tbaa !2289
  %m_tempPool107 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %84, i32 0, i32 79, !dbg !4247
  %ptr108 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool107, i32 0, i32 3, !dbg !4248
  %85 = load i8*, i8** %ptr108, align 8, !dbg !4248, !tbaa !2798
  %86 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4249, !tbaa !2289
  %m_tempPool109 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %86, i32 0, i32 79, !dbg !4250
  %end110 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool109, i32 0, i32 2, !dbg !4251
  %87 = load i8*, i8** %end110, align 8, !dbg !4251, !tbaa !2802
  %cmp111 = icmp eq i8* %85, %87, !dbg !4252
  br i1 %cmp111, label %land.lhs.true.113, label %cond.false.118, !dbg !4253

land.lhs.true.113:                                ; preds = %for.end
  %88 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4254, !tbaa !2289
  %m_tempPool114 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %88, i32 0, i32 79, !dbg !4256
  %call115 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool114), !dbg !4257
  %tobool116 = icmp ne i8 %call115, 0, !dbg !4257
  br i1 %tobool116, label %cond.false.118, label %cond.true.117, !dbg !4258

cond.true.117:                                    ; preds = %land.lhs.true.113
  br i1 false, label %if.end.123, label %if.then.122, !dbg !4259

cond.false.118:                                   ; preds = %land.lhs.true.113, %for.end
  %89 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4261, !tbaa !2289
  %m_tempPool119 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %89, i32 0, i32 79, !dbg !4264
  %ptr120 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool119, i32 0, i32 3, !dbg !4265
  %90 = load i8*, i8** %ptr120, align 8, !dbg !4266, !tbaa !2798
  %incdec.ptr121 = getelementptr i8, i8* %90, i32 1, !dbg !4266
  store i8* %incdec.ptr121, i8** %ptr120, align 8, !dbg !4266, !tbaa !2798
  store i8 0, i8* %90, align 1, !dbg !4267, !tbaa !2307
  br i1 true, label %if.end.123, label %if.then.122, !dbg !4258

if.then.122:                                      ; preds = %cond.false.118, %cond.true.117
  store i8 0, i8* %retval, !dbg !4268
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.141, !dbg !4268

if.end.123:                                       ; preds = %cond.false.118, %cond.true.117
  %91 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4269, !tbaa !2289
  %92 = load %struct.prefix*, %struct.prefix** %prefix, align 8, !dbg !4271, !tbaa !2289
  %93 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4272, !tbaa !2289
  %m_tempPool124 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %93, i32 0, i32 79, !dbg !4273
  %start125 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool124, i32 0, i32 4, !dbg !4274
  %94 = load i8*, i8** %start125, align 8, !dbg !4274, !tbaa !2794
  %95 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4275, !tbaa !2289
  %m_inheritedBindings = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %95, i32 0, i32 69, !dbg !4276
  %call126 = call i32 @addBinding(%struct.XML_ParserStruct* %91, %struct.prefix* %92, %struct.attribute_id* null, i8* %94, %struct.binding** %m_inheritedBindings), !dbg !4277
  %cmp127 = icmp ne i32 %call126, 0, !dbg !4278
  br i1 %cmp127, label %if.then.129, label %if.end.130, !dbg !4279

if.then.129:                                      ; preds = %if.end.123
  store i8 0, i8* %retval, !dbg !4280
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.141, !dbg !4280

if.end.130:                                       ; preds = %if.end.123
  %96 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4281, !tbaa !2289
  %m_tempPool131 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %96, i32 0, i32 79, !dbg !4282
  %start132 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool131, i32 0, i32 4, !dbg !4283
  %97 = load i8*, i8** %start132, align 8, !dbg !4283, !tbaa !2794
  %98 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4284, !tbaa !2289
  %m_tempPool133 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %98, i32 0, i32 79, !dbg !4285
  %ptr134 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool133, i32 0, i32 3, !dbg !4286
  store i8* %97, i8** %ptr134, align 8, !dbg !4287, !tbaa !2798
  %99 = load i8*, i8** %context.addr, align 8, !dbg !4288, !tbaa !2289
  %100 = load i8, i8* %99, align 1, !dbg !4290, !tbaa !2307
  %conv135 = sext i8 %100 to i32, !dbg !4290
  %cmp136 = icmp ne i32 %conv135, 0, !dbg !4291
  br i1 %cmp136, label %if.then.138, label %if.end.140, !dbg !4292

if.then.138:                                      ; preds = %if.end.130
  %101 = load i8*, i8** %context.addr, align 8, !dbg !4293, !tbaa !2289
  %incdec.ptr139 = getelementptr i8, i8* %101, i32 1, !dbg !4293
  store i8* %incdec.ptr139, i8** %context.addr, align 8, !dbg !4293, !tbaa !2289
  br label %if.end.140, !dbg !4293

if.end.140:                                       ; preds = %if.then.138, %if.end.130
  %102 = load i8*, i8** %context.addr, align 8, !dbg !4294, !tbaa !2289
  store i8* %102, i8** %s, align 8, !dbg !4295, !tbaa !2289
  store i32 0, i32* %cleanup.dest.slot, !dbg !4296
  br label %cleanup.141, !dbg !4296

cleanup.141:                                      ; preds = %if.end.140, %if.then.129, %if.then.122, %if.then.104, %if.then.75, %if.then.63, %if.then.57
  %103 = bitcast %struct.prefix** %prefix to i8*, !dbg !4297
  call void @llvm.lifetime.end(i64 8, i8* %103) #2, !dbg !4297
  %cleanup.dest.142 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.142, label %cleanup.165 [
    i32 0, label %cleanup.cont.143
  ]

cleanup.cont.143:                                 ; preds = %cleanup.141
  br label %if.end.163, !dbg !4299

if.else.144:                                      ; preds = %if.else
  %104 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4300, !tbaa !2289
  %m_tempPool145 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %104, i32 0, i32 79, !dbg !4303
  %ptr146 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool145, i32 0, i32 3, !dbg !4304
  %105 = load i8*, i8** %ptr146, align 8, !dbg !4304, !tbaa !2798
  %106 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4305, !tbaa !2289
  %m_tempPool147 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %106, i32 0, i32 79, !dbg !4306
  %end148 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool147, i32 0, i32 2, !dbg !4307
  %107 = load i8*, i8** %end148, align 8, !dbg !4307, !tbaa !2802
  %cmp149 = icmp eq i8* %105, %107, !dbg !4308
  br i1 %cmp149, label %land.lhs.true.151, label %cond.false.156, !dbg !4309

land.lhs.true.151:                                ; preds = %if.else.144
  %108 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4310, !tbaa !2289
  %m_tempPool152 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %108, i32 0, i32 79, !dbg !4312
  %call153 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool152), !dbg !4313
  %tobool154 = icmp ne i8 %call153, 0, !dbg !4313
  br i1 %tobool154, label %cond.false.156, label %cond.true.155, !dbg !4314

cond.true.155:                                    ; preds = %land.lhs.true.151
  br i1 false, label %if.end.161, label %if.then.160, !dbg !4315

cond.false.156:                                   ; preds = %land.lhs.true.151, %if.else.144
  %109 = load i8*, i8** %s, align 8, !dbg !4317, !tbaa !2289
  %110 = load i8, i8* %109, align 1, !dbg !4320, !tbaa !2307
  %111 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4321, !tbaa !2289
  %m_tempPool157 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %111, i32 0, i32 79, !dbg !4322
  %ptr158 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool157, i32 0, i32 3, !dbg !4323
  %112 = load i8*, i8** %ptr158, align 8, !dbg !4324, !tbaa !2798
  %incdec.ptr159 = getelementptr i8, i8* %112, i32 1, !dbg !4324
  store i8* %incdec.ptr159, i8** %ptr158, align 8, !dbg !4324, !tbaa !2798
  store i8 %110, i8* %112, align 1, !dbg !4325, !tbaa !2307
  br i1 true, label %if.end.161, label %if.then.160, !dbg !4314

if.then.160:                                      ; preds = %cond.false.156, %cond.true.155
  store i8 0, i8* %retval, !dbg !4326
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.165, !dbg !4326

if.end.161:                                       ; preds = %cond.false.156, %cond.true.155
  %113 = load i8*, i8** %s, align 8, !dbg !4327, !tbaa !2289
  %incdec.ptr162 = getelementptr i8, i8* %113, i32 1, !dbg !4327
  store i8* %incdec.ptr162, i8** %s, align 8, !dbg !4327, !tbaa !2289
  br label %if.end.163

if.end.163:                                       ; preds = %if.end.161, %cleanup.cont.143
  br label %if.end.164

if.end.164:                                       ; preds = %if.end.163, %cleanup.cont
  br label %while.cond, !dbg !4034

while.end:                                        ; preds = %while.cond
  store i8 1, i8* %retval, !dbg !4328
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.165, !dbg !4328

cleanup.165:                                      ; preds = %while.end, %if.then.160, %cleanup.141, %cleanup
  %114 = bitcast i8** %s to i8*, !dbg !4329
  call void @llvm.lifetime.end(i64 8, i8* %114) #2, !dbg !4329
  %115 = bitcast %struct.DTD** %dtd to i8*, !dbg !4329
  call void @llvm.lifetime.end(i64 8, i8* %115) #2, !dbg !4329
  %116 = load i8, i8* %retval, !dbg !4329
  ret i8 %116, !dbg !4329
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_ParserFree(%struct.XML_ParserStruct* %parser) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %tagList = alloca %struct.tag*, align 8
  %entityList = alloca %struct.open_internal_entity*, align 8
  %cleanup.dest.slot = alloca i32
  %p = alloca %struct.tag*, align 8
  %openEntity = alloca %struct.open_internal_entity*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !742, metadata !2293), !dbg !4330
  %0 = bitcast %struct.tag** %tagList to i8*, !dbg !4331
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !4331
  call void @llvm.dbg.declare(metadata %struct.tag** %tagList, metadata !743, metadata !2293), !dbg !4332
  %1 = bitcast %struct.open_internal_entity** %entityList to i8*, !dbg !4333
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !4333
  call void @llvm.dbg.declare(metadata %struct.open_internal_entity** %entityList, metadata !744, metadata !2293), !dbg !4334
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4335, !tbaa !2289
  %cmp = icmp eq %struct.XML_ParserStruct* %2, null, !dbg !4337
  br i1 %cmp, label %if.then, label %if.end, !dbg !4338

if.then:                                          ; preds = %entry
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.50, !dbg !4339

if.end:                                           ; preds = %entry
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4340, !tbaa !2289
  %m_tagStack = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 67, !dbg !4341
  %4 = load %struct.tag*, %struct.tag** %m_tagStack, align 8, !dbg !4341, !tbaa !2629
  store %struct.tag* %4, %struct.tag** %tagList, align 8, !dbg !4342, !tbaa !2289
  br label %for.cond, !dbg !4343

for.cond:                                         ; preds = %cleanup.cont, %if.end
  %5 = bitcast %struct.tag** %p to i8*, !dbg !4344
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !4344
  call void @llvm.dbg.declare(metadata %struct.tag** %p, metadata !745, metadata !2293), !dbg !4345
  %6 = load %struct.tag*, %struct.tag** %tagList, align 8, !dbg !4346, !tbaa !2289
  %cmp1 = icmp eq %struct.tag* %6, null, !dbg !4348
  br i1 %cmp1, label %if.then.2, label %if.end.8, !dbg !4349

if.then.2:                                        ; preds = %for.cond
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4350, !tbaa !2289
  %m_freeTagList = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 68, !dbg !4353
  %8 = load %struct.tag*, %struct.tag** %m_freeTagList, align 8, !dbg !4353, !tbaa !2517
  %cmp3 = icmp eq %struct.tag* %8, null, !dbg !4354
  br i1 %cmp3, label %if.then.4, label %if.end.5, !dbg !4355

if.then.4:                                        ; preds = %if.then.2
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4356

if.end.5:                                         ; preds = %if.then.2
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4357, !tbaa !2289
  %m_freeTagList6 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 68, !dbg !4358
  %10 = load %struct.tag*, %struct.tag** %m_freeTagList6, align 8, !dbg !4358, !tbaa !2517
  store %struct.tag* %10, %struct.tag** %tagList, align 8, !dbg !4359, !tbaa !2289
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4360, !tbaa !2289
  %m_freeTagList7 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 68, !dbg !4361
  store %struct.tag* null, %struct.tag** %m_freeTagList7, align 8, !dbg !4362, !tbaa !2517
  br label %if.end.8, !dbg !4363

if.end.8:                                         ; preds = %if.end.5, %for.cond
  %12 = load %struct.tag*, %struct.tag** %tagList, align 8, !dbg !4364, !tbaa !2289
  store %struct.tag* %12, %struct.tag** %p, align 8, !dbg !4365, !tbaa !2289
  %13 = load %struct.tag*, %struct.tag** %tagList, align 8, !dbg !4366, !tbaa !2289
  %parent = getelementptr inbounds %struct.tag, %struct.tag* %13, i32 0, i32 0, !dbg !4367
  %14 = load %struct.tag*, %struct.tag** %parent, align 8, !dbg !4367, !tbaa !2640
  store %struct.tag* %14, %struct.tag** %tagList, align 8, !dbg !4368, !tbaa !2289
  %15 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4369, !tbaa !2289
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %15, i32 0, i32 3, !dbg !4370
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 2, !dbg !4371
  %16 = load void (i8*)*, void (i8*)** %free_fcn, align 8, !dbg !4371, !tbaa !2435
  %17 = load %struct.tag*, %struct.tag** %p, align 8, !dbg !4372, !tbaa !2289
  %buf = getelementptr inbounds %struct.tag, %struct.tag* %17, i32 0, i32 4, !dbg !4373
  %18 = load i8*, i8** %buf, align 8, !dbg !4373, !tbaa !4374
  call void %16(i8* %18), !dbg !4369
  %19 = load %struct.tag*, %struct.tag** %p, align 8, !dbg !4375, !tbaa !2289
  %bindings = getelementptr inbounds %struct.tag, %struct.tag* %19, i32 0, i32 6, !dbg !4376
  %20 = load %struct.binding*, %struct.binding** %bindings, align 8, !dbg !4376, !tbaa !2652
  %21 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4377, !tbaa !2289
  call void @destroyBindings(%struct.binding* %20, %struct.XML_ParserStruct* %21), !dbg !4378
  %22 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4379, !tbaa !2289
  %m_mem9 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %22, i32 0, i32 3, !dbg !4380
  %free_fcn10 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem9, i32 0, i32 2, !dbg !4381
  %23 = load void (i8*)*, void (i8*)** %free_fcn10, align 8, !dbg !4381, !tbaa !2435
  %24 = load %struct.tag*, %struct.tag** %p, align 8, !dbg !4382, !tbaa !2289
  %25 = bitcast %struct.tag* %24 to i8*, !dbg !4383
  call void %23(i8* %25), !dbg !4379
  store i32 0, i32* %cleanup.dest.slot, !dbg !4384
  br label %cleanup, !dbg !4384

cleanup:                                          ; preds = %if.end.8, %if.then.4
  %26 = bitcast %struct.tag** %p to i8*, !dbg !4385
  call void @llvm.lifetime.end(i64 8, i8* %26) #2, !dbg !4385
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 2, label %for.end
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.cond, !dbg !4387

for.end:                                          ; preds = %cleanup
  %27 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4388, !tbaa !2289
  %m_openInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %27, i32 0, i32 50, !dbg !4389
  %28 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities, align 8, !dbg !4389, !tbaa !2664
  store %struct.open_internal_entity* %28, %struct.open_internal_entity** %entityList, align 8, !dbg !4390, !tbaa !2289
  br label %for.cond.11, !dbg !4391

for.cond.11:                                      ; preds = %cleanup.cont.24, %for.end
  %29 = bitcast %struct.open_internal_entity** %openEntity to i8*, !dbg !4392
  call void @llvm.lifetime.start(i64 8, i8* %29) #2, !dbg !4392
  call void @llvm.dbg.declare(metadata %struct.open_internal_entity** %openEntity, metadata !749, metadata !2293), !dbg !4393
  %30 = load %struct.open_internal_entity*, %struct.open_internal_entity** %entityList, align 8, !dbg !4394, !tbaa !2289
  %cmp12 = icmp eq %struct.open_internal_entity* %30, null, !dbg !4396
  br i1 %cmp12, label %if.then.13, label %if.end.19, !dbg !4397

if.then.13:                                       ; preds = %for.cond.11
  %31 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4398, !tbaa !2289
  %m_freeInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %31, i32 0, i32 51, !dbg !4401
  %32 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_freeInternalEntities, align 8, !dbg !4401, !tbaa !2521
  %cmp14 = icmp eq %struct.open_internal_entity* %32, null, !dbg !4402
  br i1 %cmp14, label %if.then.15, label %if.end.16, !dbg !4403

if.then.15:                                       ; preds = %if.then.13
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup.22, !dbg !4404

if.end.16:                                        ; preds = %if.then.13
  %33 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4405, !tbaa !2289
  %m_freeInternalEntities17 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %33, i32 0, i32 51, !dbg !4406
  %34 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_freeInternalEntities17, align 8, !dbg !4406, !tbaa !2521
  store %struct.open_internal_entity* %34, %struct.open_internal_entity** %entityList, align 8, !dbg !4407, !tbaa !2289
  %35 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4408, !tbaa !2289
  %m_freeInternalEntities18 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %35, i32 0, i32 51, !dbg !4409
  store %struct.open_internal_entity* null, %struct.open_internal_entity** %m_freeInternalEntities18, align 8, !dbg !4410, !tbaa !2521
  br label %if.end.19, !dbg !4411

if.end.19:                                        ; preds = %if.end.16, %for.cond.11
  %36 = load %struct.open_internal_entity*, %struct.open_internal_entity** %entityList, align 8, !dbg !4412, !tbaa !2289
  store %struct.open_internal_entity* %36, %struct.open_internal_entity** %openEntity, align 8, !dbg !4413, !tbaa !2289
  %37 = load %struct.open_internal_entity*, %struct.open_internal_entity** %entityList, align 8, !dbg !4414, !tbaa !2289
  %next = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %37, i32 0, i32 2, !dbg !4415
  %38 = load %struct.open_internal_entity*, %struct.open_internal_entity** %next, align 8, !dbg !4415, !tbaa !2673
  store %struct.open_internal_entity* %38, %struct.open_internal_entity** %entityList, align 8, !dbg !4416, !tbaa !2289
  %39 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4417, !tbaa !2289
  %m_mem20 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %39, i32 0, i32 3, !dbg !4418
  %free_fcn21 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem20, i32 0, i32 2, !dbg !4419
  %40 = load void (i8*)*, void (i8*)** %free_fcn21, align 8, !dbg !4419, !tbaa !2435
  %41 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !4420, !tbaa !2289
  %42 = bitcast %struct.open_internal_entity* %41 to i8*, !dbg !4421
  call void %40(i8* %42), !dbg !4417
  store i32 0, i32* %cleanup.dest.slot, !dbg !4422
  br label %cleanup.22, !dbg !4422

cleanup.22:                                       ; preds = %if.end.19, %if.then.15
  %43 = bitcast %struct.open_internal_entity** %openEntity to i8*, !dbg !4423
  call void @llvm.lifetime.end(i64 8, i8* %43) #2, !dbg !4423
  %cleanup.dest.23 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.23, label %unreachable [
    i32 0, label %cleanup.cont.24
    i32 4, label %for.end.25
  ]

cleanup.cont.24:                                  ; preds = %cleanup.22
  br label %for.cond.11, !dbg !4425

for.end.25:                                       ; preds = %cleanup.22
  %44 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4426, !tbaa !2289
  %m_freeBindingList = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %44, i32 0, i32 70, !dbg !4427
  %45 = load %struct.binding*, %struct.binding** %m_freeBindingList, align 8, !dbg !4427, !tbaa !2513
  %46 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4428, !tbaa !2289
  call void @destroyBindings(%struct.binding* %45, %struct.XML_ParserStruct* %46), !dbg !4429
  %47 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4430, !tbaa !2289
  %m_inheritedBindings = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %47, i32 0, i32 69, !dbg !4431
  %48 = load %struct.binding*, %struct.binding** %m_inheritedBindings, align 8, !dbg !4431, !tbaa !2689
  %49 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4432, !tbaa !2289
  call void @destroyBindings(%struct.binding* %48, %struct.XML_ParserStruct* %49), !dbg !4433
  %50 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4434, !tbaa !2289
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %50, i32 0, i32 79, !dbg !4435
  call void @poolDestroy(%struct.STRING_POOL* %m_tempPool), !dbg !4436
  %51 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4437, !tbaa !2289
  %m_temp2Pool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %51, i32 0, i32 80, !dbg !4438
  call void @poolDestroy(%struct.STRING_POOL* %m_temp2Pool), !dbg !4439
  %52 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4440, !tbaa !2289
  %m_isParamEntity = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %52, i32 0, i32 86, !dbg !4442
  %53 = load i8, i8* %m_isParamEntity, align 1, !dbg !4442, !tbaa !3056
  %tobool = icmp ne i8 %53, 0, !dbg !4443
  br i1 %tobool, label %if.end.31, label %land.lhs.true, !dbg !4444

land.lhs.true:                                    ; preds = %for.end.25
  %54 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4445, !tbaa !2289
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %54, i32 0, i32 65, !dbg !4447
  %55 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !4447, !tbaa !2478
  %tobool26 = icmp ne %struct.DTD* %55, null, !dbg !4448
  br i1 %tobool26, label %if.then.27, label %if.end.31, !dbg !4449

if.then.27:                                       ; preds = %land.lhs.true
  %56 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4450, !tbaa !2289
  %m_dtd28 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %56, i32 0, i32 65, !dbg !4451
  %57 = load %struct.DTD*, %struct.DTD** %m_dtd28, align 8, !dbg !4451, !tbaa !2478
  %58 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4452, !tbaa !2289
  %m_parentParser = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %58, i32 0, i32 84, !dbg !4453
  %59 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %m_parentParser, align 8, !dbg !4453, !tbaa !2623
  %tobool29 = icmp ne %struct.XML_ParserStruct* %59, null, !dbg !4454
  %lnot = xor i1 %tobool29, true, !dbg !4454
  %lnot.ext = zext i1 %lnot to i32, !dbg !4454
  %conv = trunc i32 %lnot.ext to i8, !dbg !4455
  %60 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4456, !tbaa !2289
  %m_mem30 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %60, i32 0, i32 3, !dbg !4457
  call void @dtdDestroy(%struct.DTD* %57, i8 zeroext %conv, %struct.XML_Memory_Handling_Suite* %m_mem30), !dbg !4458
  br label %if.end.31, !dbg !4458

if.end.31:                                        ; preds = %if.then.27, %land.lhs.true, %for.end.25
  %61 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4459, !tbaa !2289
  %m_mem32 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %61, i32 0, i32 3, !dbg !4460
  %free_fcn33 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem32, i32 0, i32 2, !dbg !4461
  %62 = load void (i8*)*, void (i8*)** %free_fcn33, align 8, !dbg !4461, !tbaa !2435
  %63 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4462, !tbaa !2289
  %m_atts = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %63, i32 0, i32 74, !dbg !4463
  %64 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts, align 8, !dbg !4463, !tbaa !2425
  %65 = bitcast %struct.ATTRIBUTE* %64 to i8*, !dbg !4464
  call void %62(i8* %65), !dbg !4459
  %66 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4465, !tbaa !2289
  %m_mem34 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %66, i32 0, i32 3, !dbg !4466
  %free_fcn35 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem34, i32 0, i32 2, !dbg !4467
  %67 = load void (i8*)*, void (i8*)** %free_fcn35, align 8, !dbg !4467, !tbaa !2435
  %68 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4468, !tbaa !2289
  %m_groupConnector = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %68, i32 0, i32 81, !dbg !4469
  %69 = load i8*, i8** %m_groupConnector, align 8, !dbg !4469, !tbaa !2529
  call void %67(i8* %69), !dbg !4465
  %70 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4470, !tbaa !2289
  %m_mem36 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %70, i32 0, i32 3, !dbg !4471
  %free_fcn37 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem36, i32 0, i32 2, !dbg !4472
  %71 = load void (i8*)*, void (i8*)** %free_fcn37, align 8, !dbg !4472, !tbaa !2435
  %72 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4473, !tbaa !2289
  %m_buffer = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %72, i32 0, i32 2, !dbg !4474
  %73 = load i8*, i8** %m_buffer, align 8, !dbg !4474, !tbaa !2395
  call void %71(i8* %73), !dbg !4470
  %74 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4475, !tbaa !2289
  %m_mem38 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %74, i32 0, i32 3, !dbg !4476
  %free_fcn39 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem38, i32 0, i32 2, !dbg !4477
  %75 = load void (i8*)*, void (i8*)** %free_fcn39, align 8, !dbg !4477, !tbaa !2435
  %76 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4478, !tbaa !2289
  %m_dataBuf = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %76, i32 0, i32 9, !dbg !4479
  %77 = load i8*, i8** %m_dataBuf, align 8, !dbg !4479, !tbaa !2445
  call void %75(i8* %77), !dbg !4475
  %78 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4480, !tbaa !2289
  %m_mem40 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %78, i32 0, i32 3, !dbg !4481
  %free_fcn41 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem40, i32 0, i32 2, !dbg !4482
  %79 = load void (i8*)*, void (i8*)** %free_fcn41, align 8, !dbg !4482, !tbaa !2435
  %80 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4483, !tbaa !2289
  %m_nsAtts = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %80, i32 0, i32 75, !dbg !4484
  %81 = load %struct.NS_ATT*, %struct.NS_ATT** %m_nsAtts, align 8, !dbg !4484, !tbaa !2553
  %82 = bitcast %struct.NS_ATT* %81 to i8*, !dbg !4485
  call void %79(i8* %82), !dbg !4480
  %83 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4486, !tbaa !2289
  %m_mem42 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %83, i32 0, i32 3, !dbg !4487
  %free_fcn43 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem42, i32 0, i32 2, !dbg !4488
  %84 = load void (i8*)*, void (i8*)** %free_fcn43, align 8, !dbg !4488, !tbaa !2435
  %85 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4489, !tbaa !2289
  %m_unknownEncodingMem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %85, i32 0, i32 40, !dbg !4490
  %86 = load i8*, i8** %m_unknownEncodingMem, align 8, !dbg !4490, !tbaa !2696
  call void %84(i8* %86), !dbg !4486
  %87 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4491, !tbaa !2289
  %m_unknownEncodingRelease = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %87, i32 0, i32 43, !dbg !4493
  %88 = load void (i8*)*, void (i8*)** %m_unknownEncodingRelease, align 8, !dbg !4493, !tbaa !2700
  %tobool44 = icmp ne void (i8*)* %88, null, !dbg !4494
  br i1 %tobool44, label %if.then.45, label %if.end.47, !dbg !4495

if.then.45:                                       ; preds = %if.end.31
  %89 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4496, !tbaa !2289
  %m_unknownEncodingRelease46 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %89, i32 0, i32 43, !dbg !4497
  %90 = load void (i8*)*, void (i8*)** %m_unknownEncodingRelease46, align 8, !dbg !4497, !tbaa !2700
  %91 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4498, !tbaa !2289
  %m_unknownEncodingData = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %91, i32 0, i32 41, !dbg !4499
  %92 = load i8*, i8** %m_unknownEncodingData, align 8, !dbg !4499, !tbaa !2707
  call void %90(i8* %92), !dbg !4500
  br label %if.end.47, !dbg !4500

if.end.47:                                        ; preds = %if.then.45, %if.end.31
  %93 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4501, !tbaa !2289
  %m_mem48 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %93, i32 0, i32 3, !dbg !4502
  %free_fcn49 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem48, i32 0, i32 2, !dbg !4503
  %94 = load void (i8*)*, void (i8*)** %free_fcn49, align 8, !dbg !4503, !tbaa !2435
  %95 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4504, !tbaa !2289
  %96 = bitcast %struct.XML_ParserStruct* %95 to i8*, !dbg !4505
  call void %94(i8* %96), !dbg !4501
  store i32 0, i32* %cleanup.dest.slot, !dbg !4506
  br label %cleanup.50, !dbg !4506

cleanup.50:                                       ; preds = %if.end.47, %if.then
  %97 = bitcast %struct.open_internal_entity** %entityList to i8*, !dbg !4507
  call void @llvm.lifetime.end(i64 8, i8* %97) #2, !dbg !4507
  %98 = bitcast %struct.tag** %tagList to i8*, !dbg !4507
  call void @llvm.lifetime.end(i64 8, i8* %98) #2, !dbg !4507
  %cleanup.dest.52 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.52, label %unreachable [
    i32 0, label %cleanup.cont.53
    i32 1, label %cleanup.cont.53
  ]

cleanup.cont.53:                                  ; preds = %cleanup.50, %cleanup.50
  ret void, !dbg !4506

unreachable:                                      ; preds = %cleanup.50, %cleanup.22, %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @externalEntityInitProcessor(%struct.XML_ParserStruct* %parser, i8* %start, i8* %end, i8** %endPtr) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %endPtr.addr = alloca i8**, align 8
  %result = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !2013, metadata !2293), !dbg !4509
  store i8* %start, i8** %start.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %start.addr, metadata !2014, metadata !2293), !dbg !4510
  store i8* %end, i8** %end.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !2015, metadata !2293), !dbg !4511
  store i8** %endPtr, i8*** %endPtr.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8*** %endPtr.addr, metadata !2016, metadata !2293), !dbg !4512
  %0 = bitcast i32* %result to i8*, !dbg !4513
  call void @llvm.lifetime.start(i64 4, i8* %0) #2, !dbg !4513
  call void @llvm.dbg.declare(metadata i32* %result, metadata !2017, metadata !2293), !dbg !4514
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4515, !tbaa !2289
  %call = call i32 @initializeEncoding(%struct.XML_ParserStruct* %1), !dbg !4516
  store i32 %call, i32* %result, align 4, !dbg !4514, !tbaa !2307
  %2 = load i32, i32* %result, align 4, !dbg !4517, !tbaa !2307
  %cmp = icmp ne i32 %2, 0, !dbg !4519
  br i1 %cmp, label %if.then, label %if.end, !dbg !4520

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %result, align 4, !dbg !4521, !tbaa !2307
  store i32 %3, i32* %retval, !dbg !4522
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4522

if.end:                                           ; preds = %entry
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4523, !tbaa !2289
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 45, !dbg !4524
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @externalEntityInitProcessor2, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8, !dbg !4525, !tbaa !2809
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4526, !tbaa !2289
  %6 = load i8*, i8** %start.addr, align 8, !dbg !4527, !tbaa !2289
  %7 = load i8*, i8** %end.addr, align 8, !dbg !4528, !tbaa !2289
  %8 = load i8**, i8*** %endPtr.addr, align 8, !dbg !4529, !tbaa !2289
  %call1 = call i32 @externalEntityInitProcessor2(%struct.XML_ParserStruct* %5, i8* %6, i8* %7, i8** %8), !dbg !4530
  store i32 %call1, i32* %retval, !dbg !4531
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4531

cleanup:                                          ; preds = %if.end, %if.then
  %9 = bitcast i32* %result to i8*, !dbg !4532
  call void @llvm.lifetime.end(i64 4, i8* %9) #2, !dbg !4532
  %10 = load i32, i32* %retval, !dbg !4532
  ret i32 %10, !dbg !4532
}

declare void @PyExpat_XmlPrologStateInitExternalEntity(%struct.prolog_state*) #3

; Function Attrs: nounwind uwtable
define internal i32 @externalParEntInitProcessor(%struct.XML_ParserStruct* %parser, i8* %s, i8* %end, i8** %nextPtr) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %s.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextPtr.addr = alloca i8**, align 8
  %result = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !2039, metadata !2293), !dbg !4533
  store i8* %s, i8** %s.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !2040, metadata !2293), !dbg !4534
  store i8* %end, i8** %end.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !2041, metadata !2293), !dbg !4535
  store i8** %nextPtr, i8*** %nextPtr.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8*** %nextPtr.addr, metadata !2042, metadata !2293), !dbg !4536
  %0 = bitcast i32* %result to i8*, !dbg !4537
  call void @llvm.lifetime.start(i64 4, i8* %0) #2, !dbg !4537
  call void @llvm.dbg.declare(metadata i32* %result, metadata !2043, metadata !2293), !dbg !4538
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4539, !tbaa !2289
  %call = call i32 @initializeEncoding(%struct.XML_ParserStruct* %1), !dbg !4540
  store i32 %call, i32* %result, align 4, !dbg !4538, !tbaa !2307
  %2 = load i32, i32* %result, align 4, !dbg !4541, !tbaa !2307
  %cmp = icmp ne i32 %2, 0, !dbg !4543
  br i1 %cmp, label %if.then, label %if.end, !dbg !4544

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %result, align 4, !dbg !4545, !tbaa !2307
  store i32 %3, i32* %retval, !dbg !4546
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4546

if.end:                                           ; preds = %entry
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4547, !tbaa !2289
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 65, !dbg !4548
  %5 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !4548, !tbaa !2478
  %paramEntityRead = getelementptr inbounds %struct.DTD, %struct.DTD* %5, i32 0, i32 9, !dbg !4549
  store i8 1, i8* %paramEntityRead, align 1, !dbg !4550, !tbaa !3108
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4551, !tbaa !2289
  %m_prologState = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 44, !dbg !4553
  %inEntityValue = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState, i32 0, i32 5, !dbg !4554
  %7 = load i32, i32* %inEntityValue, align 4, !dbg !4554, !tbaa !3390
  %tobool = icmp ne i32 %7, 0, !dbg !4555
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !4556

if.then.1:                                        ; preds = %if.end
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4557, !tbaa !2289
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 45, !dbg !4559
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @entityValueInitProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8, !dbg !4560, !tbaa !2809
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4561, !tbaa !2289
  %10 = load i8*, i8** %s.addr, align 8, !dbg !4562, !tbaa !2289
  %11 = load i8*, i8** %end.addr, align 8, !dbg !4563, !tbaa !2289
  %12 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !4564, !tbaa !2289
  %call2 = call i32 @entityValueInitProcessor(%struct.XML_ParserStruct* %9, i8* %10, i8* %11, i8** %12), !dbg !4565
  store i32 %call2, i32* %retval, !dbg !4566
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4566

if.else:                                          ; preds = %if.end
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4567, !tbaa !2289
  %m_processor3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 45, !dbg !4569
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @externalParEntProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor3, align 8, !dbg !4570, !tbaa !2809
  %14 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4571, !tbaa !2289
  %15 = load i8*, i8** %s.addr, align 8, !dbg !4572, !tbaa !2289
  %16 = load i8*, i8** %end.addr, align 8, !dbg !4573, !tbaa !2289
  %17 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !4574, !tbaa !2289
  %call4 = call i32 @externalParEntProcessor(%struct.XML_ParserStruct* %14, i8* %15, i8* %16, i8** %17), !dbg !4575
  store i32 %call4, i32* %retval, !dbg !4576
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4576

cleanup:                                          ; preds = %if.else, %if.then.1, %if.then
  %18 = bitcast i32* %result to i8*, !dbg !4577
  call void @llvm.lifetime.end(i64 4, i8* %18) #2, !dbg !4577
  %19 = load i32, i32* %retval, !dbg !4577
  ret i32 %19, !dbg !4577
}

; Function Attrs: nounwind uwtable
define internal void @destroyBindings(%struct.binding* %bindings, %struct.XML_ParserStruct* %parser) #0 {
entry:
  %bindings.addr = alloca %struct.binding*, align 8
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %b = alloca %struct.binding*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.binding* %bindings, %struct.binding** %bindings.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.binding** %bindings.addr, metadata !1997, metadata !2293), !dbg !4578
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1998, metadata !2293), !dbg !4579
  br label %for.cond, !dbg !4580

for.cond:                                         ; preds = %cleanup.cont, %entry
  %0 = bitcast %struct.binding** %b to i8*, !dbg !4581
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !4581
  call void @llvm.dbg.declare(metadata %struct.binding** %b, metadata !1999, metadata !2293), !dbg !4582
  %1 = load %struct.binding*, %struct.binding** %bindings.addr, align 8, !dbg !4583, !tbaa !2289
  store %struct.binding* %1, %struct.binding** %b, align 8, !dbg !4582, !tbaa !2289
  %2 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !4584, !tbaa !2289
  %tobool = icmp ne %struct.binding* %2, null, !dbg !4584
  br i1 %tobool, label %if.end, label %if.then, !dbg !4586

if.then:                                          ; preds = %for.cond
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4587

if.end:                                           ; preds = %for.cond
  %3 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !4588, !tbaa !2289
  %nextTagBinding = getelementptr inbounds %struct.binding, %struct.binding* %3, i32 0, i32 1, !dbg !4589
  %4 = load %struct.binding*, %struct.binding** %nextTagBinding, align 8, !dbg !4589, !tbaa !2736
  store %struct.binding* %4, %struct.binding** %bindings.addr, align 8, !dbg !4590, !tbaa !2289
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4591, !tbaa !2289
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 3, !dbg !4592
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 2, !dbg !4593
  %6 = load void (i8*)*, void (i8*)** %free_fcn, align 8, !dbg !4593, !tbaa !2435
  %7 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !4594, !tbaa !2289
  %uri = getelementptr inbounds %struct.binding, %struct.binding* %7, i32 0, i32 4, !dbg !4595
  %8 = load i8*, i8** %uri, align 8, !dbg !4595, !tbaa !4596
  call void %6(i8* %8), !dbg !4591
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4597, !tbaa !2289
  %m_mem1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 3, !dbg !4598
  %free_fcn2 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem1, i32 0, i32 2, !dbg !4599
  %10 = load void (i8*)*, void (i8*)** %free_fcn2, align 8, !dbg !4599, !tbaa !2435
  %11 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !4600, !tbaa !2289
  %12 = bitcast %struct.binding* %11 to i8*, !dbg !4601
  call void %10(i8* %12), !dbg !4597
  store i32 0, i32* %cleanup.dest.slot, !dbg !4602
  br label %cleanup, !dbg !4602

cleanup:                                          ; preds = %if.end, %if.then
  %13 = bitcast %struct.binding** %b to i8*, !dbg !4603
  call void @llvm.lifetime.end(i64 8, i8* %13) #2, !dbg !4603
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 2, label %for.end
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.cond, !dbg !4605

for.end:                                          ; preds = %cleanup
  ret void, !dbg !4606

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @poolDestroy(%struct.STRING_POOL* %pool) #0 {
entry:
  %pool.addr = alloca %struct.STRING_POOL*, align 8
  %p = alloca %struct.block*, align 8
  %tem = alloca %struct.block*, align 8
  %tem4 = alloca %struct.block*, align 8
  store %struct.STRING_POOL* %pool, %struct.STRING_POOL** %pool.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.STRING_POOL** %pool.addr, metadata !2223, metadata !2293), !dbg !4607
  %0 = bitcast %struct.block** %p to i8*, !dbg !4608
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !4608
  call void @llvm.dbg.declare(metadata %struct.block** %p, metadata !2224, metadata !2293), !dbg !4609
  %1 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !4610, !tbaa !2289
  %blocks = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %1, i32 0, i32 0, !dbg !4611
  %2 = load %struct.block*, %struct.block** %blocks, align 8, !dbg !4611, !tbaa !2757
  store %struct.block* %2, %struct.block** %p, align 8, !dbg !4609, !tbaa !2289
  br label %while.cond, !dbg !4612

while.cond:                                       ; preds = %while.body, %entry
  %3 = load %struct.block*, %struct.block** %p, align 8, !dbg !4613, !tbaa !2289
  %tobool = icmp ne %struct.block* %3, null, !dbg !4612
  br i1 %tobool, label %while.body, label %while.end, !dbg !4612

while.body:                                       ; preds = %while.cond
  %4 = bitcast %struct.block** %tem to i8*, !dbg !4616
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !4616
  call void @llvm.dbg.declare(metadata %struct.block** %tem, metadata !2225, metadata !2293), !dbg !4617
  %5 = load %struct.block*, %struct.block** %p, align 8, !dbg !4618, !tbaa !2289
  %next = getelementptr inbounds %struct.block, %struct.block* %5, i32 0, i32 0, !dbg !4619
  %6 = load %struct.block*, %struct.block** %next, align 8, !dbg !4619, !tbaa !2773
  store %struct.block* %6, %struct.block** %tem, align 8, !dbg !4617, !tbaa !2289
  %7 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !4620, !tbaa !2289
  %mem = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %7, i32 0, i32 5, !dbg !4621
  %8 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mem, align 8, !dbg !4621, !tbaa !4622
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %8, i32 0, i32 2, !dbg !4623
  %9 = load void (i8*)*, void (i8*)** %free_fcn, align 8, !dbg !4623, !tbaa !2356
  %10 = load %struct.block*, %struct.block** %p, align 8, !dbg !4624, !tbaa !2289
  %11 = bitcast %struct.block* %10 to i8*, !dbg !4624
  call void %9(i8* %11), !dbg !4620
  %12 = load %struct.block*, %struct.block** %tem, align 8, !dbg !4625, !tbaa !2289
  store %struct.block* %12, %struct.block** %p, align 8, !dbg !4626, !tbaa !2289
  %13 = bitcast %struct.block** %tem to i8*, !dbg !4627
  call void @llvm.lifetime.end(i64 8, i8* %13) #2, !dbg !4627
  br label %while.cond, !dbg !4612

while.end:                                        ; preds = %while.cond
  %14 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !4628, !tbaa !2289
  %freeBlocks = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %14, i32 0, i32 1, !dbg !4629
  %15 = load %struct.block*, %struct.block** %freeBlocks, align 8, !dbg !4629, !tbaa !2753
  store %struct.block* %15, %struct.block** %p, align 8, !dbg !4630, !tbaa !2289
  br label %while.cond.1, !dbg !4631

while.cond.1:                                     ; preds = %while.body.3, %while.end
  %16 = load %struct.block*, %struct.block** %p, align 8, !dbg !4632, !tbaa !2289
  %tobool2 = icmp ne %struct.block* %16, null, !dbg !4631
  br i1 %tobool2, label %while.body.3, label %while.end.8, !dbg !4631

while.body.3:                                     ; preds = %while.cond.1
  %17 = bitcast %struct.block** %tem4 to i8*, !dbg !4633
  call void @llvm.lifetime.start(i64 8, i8* %17) #2, !dbg !4633
  call void @llvm.dbg.declare(metadata %struct.block** %tem4, metadata !2227, metadata !2293), !dbg !4634
  %18 = load %struct.block*, %struct.block** %p, align 8, !dbg !4635, !tbaa !2289
  %next5 = getelementptr inbounds %struct.block, %struct.block* %18, i32 0, i32 0, !dbg !4636
  %19 = load %struct.block*, %struct.block** %next5, align 8, !dbg !4636, !tbaa !2773
  store %struct.block* %19, %struct.block** %tem4, align 8, !dbg !4634, !tbaa !2289
  %20 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !4637, !tbaa !2289
  %mem6 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %20, i32 0, i32 5, !dbg !4638
  %21 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mem6, align 8, !dbg !4638, !tbaa !4622
  %free_fcn7 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %21, i32 0, i32 2, !dbg !4639
  %22 = load void (i8*)*, void (i8*)** %free_fcn7, align 8, !dbg !4639, !tbaa !2356
  %23 = load %struct.block*, %struct.block** %p, align 8, !dbg !4640, !tbaa !2289
  %24 = bitcast %struct.block* %23 to i8*, !dbg !4640
  call void %22(i8* %24), !dbg !4637
  %25 = load %struct.block*, %struct.block** %tem4, align 8, !dbg !4641, !tbaa !2289
  store %struct.block* %25, %struct.block** %p, align 8, !dbg !4642, !tbaa !2289
  %26 = bitcast %struct.block** %tem4 to i8*, !dbg !4643
  call void @llvm.lifetime.end(i64 8, i8* %26) #2, !dbg !4643
  br label %while.cond.1, !dbg !4631

while.end.8:                                      ; preds = %while.cond.1
  %27 = bitcast %struct.block** %p to i8*, !dbg !4644
  call void @llvm.lifetime.end(i64 8, i8* %27) #2, !dbg !4644
  ret void, !dbg !4644
}

; Function Attrs: nounwind uwtable
define internal void @dtdDestroy(%struct.DTD* %p, i8 zeroext %isDocEntity, %struct.XML_Memory_Handling_Suite* %ms) #0 {
entry:
  %p.addr = alloca %struct.DTD*, align 8
  %isDocEntity.addr = alloca i8, align 1
  %ms.addr = alloca %struct.XML_Memory_Handling_Suite*, align 8
  %iter = alloca %struct.HASH_TABLE_ITER, align 8
  %e = alloca %struct.ELEMENT_TYPE*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.DTD* %p, %struct.DTD** %p.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.DTD** %p.addr, metadata !2132, metadata !2293), !dbg !4645
  store i8 %isDocEntity, i8* %isDocEntity.addr, align 1, !tbaa !2307
  call void @llvm.dbg.declare(metadata i8* %isDocEntity.addr, metadata !2133, metadata !2293), !dbg !4646
  store %struct.XML_Memory_Handling_Suite* %ms, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_Memory_Handling_Suite** %ms.addr, metadata !2134, metadata !2293), !dbg !4647
  %0 = bitcast %struct.HASH_TABLE_ITER* %iter to i8*, !dbg !4648
  call void @llvm.lifetime.start(i64 16, i8* %0) #2, !dbg !4648
  call void @llvm.dbg.declare(metadata %struct.HASH_TABLE_ITER* %iter, metadata !2135, metadata !2293), !dbg !4649
  %1 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !4650, !tbaa !2289
  %elementTypes = getelementptr inbounds %struct.DTD, %struct.DTD* %1, i32 0, i32 1, !dbg !4651
  call void @hashTableIterInit(%struct.HASH_TABLE_ITER* %iter, %struct.HASH_TABLE* %elementTypes), !dbg !4652
  br label %for.cond, !dbg !4653

for.cond:                                         ; preds = %cleanup.cont, %entry
  %2 = bitcast %struct.ELEMENT_TYPE** %e to i8*, !dbg !4654
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !4654
  call void @llvm.dbg.declare(metadata %struct.ELEMENT_TYPE** %e, metadata !2136, metadata !2293), !dbg !4655
  %call = call %struct.NAMED* @hashTableIterNext(%struct.HASH_TABLE_ITER* %iter), !dbg !4656
  %3 = bitcast %struct.NAMED* %call to %struct.ELEMENT_TYPE*, !dbg !4657
  store %struct.ELEMENT_TYPE* %3, %struct.ELEMENT_TYPE** %e, align 8, !dbg !4655, !tbaa !2289
  %4 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %e, align 8, !dbg !4658, !tbaa !2289
  %tobool = icmp ne %struct.ELEMENT_TYPE* %4, null, !dbg !4658
  br i1 %tobool, label %if.end, label %if.then, !dbg !4660

if.then:                                          ; preds = %for.cond
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4661

if.end:                                           ; preds = %for.cond
  %5 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %e, align 8, !dbg !4662, !tbaa !2289
  %allocDefaultAtts = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %5, i32 0, i32 4, !dbg !4664
  %6 = load i32, i32* %allocDefaultAtts, align 4, !dbg !4664, !tbaa !3089
  %cmp = icmp ne i32 %6, 0, !dbg !4665
  br i1 %cmp, label %if.then.1, label %if.end.2, !dbg !4666

if.then.1:                                        ; preds = %if.end
  %7 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !dbg !4667, !tbaa !2289
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %7, i32 0, i32 2, !dbg !4668
  %8 = load void (i8*)*, void (i8*)** %free_fcn, align 8, !dbg !4668, !tbaa !2356
  %9 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %e, align 8, !dbg !4669, !tbaa !2289
  %defaultAtts = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %9, i32 0, i32 5, !dbg !4670
  %10 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts, align 8, !dbg !4670, !tbaa !3097
  %11 = bitcast %struct.DEFAULT_ATTRIBUTE* %10 to i8*, !dbg !4669
  call void %8(i8* %11), !dbg !4667
  br label %if.end.2, !dbg !4667

if.end.2:                                         ; preds = %if.then.1, %if.end
  store i32 0, i32* %cleanup.dest.slot, !dbg !4671
  br label %cleanup, !dbg !4671

cleanup:                                          ; preds = %if.end.2, %if.then
  %12 = bitcast %struct.ELEMENT_TYPE** %e to i8*, !dbg !4672
  call void @llvm.lifetime.end(i64 8, i8* %12) #2, !dbg !4672
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 2, label %for.end
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.cond, !dbg !4674

for.end:                                          ; preds = %cleanup
  %13 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !4675, !tbaa !2289
  %generalEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %13, i32 0, i32 0, !dbg !4676
  call void @hashTableDestroy(%struct.HASH_TABLE* %generalEntities), !dbg !4677
  %14 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !4678, !tbaa !2289
  %paramEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %14, i32 0, i32 10, !dbg !4679
  call void @hashTableDestroy(%struct.HASH_TABLE* %paramEntities), !dbg !4680
  %15 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !4681, !tbaa !2289
  %elementTypes3 = getelementptr inbounds %struct.DTD, %struct.DTD* %15, i32 0, i32 1, !dbg !4682
  call void @hashTableDestroy(%struct.HASH_TABLE* %elementTypes3), !dbg !4683
  %16 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !4684, !tbaa !2289
  %attributeIds = getelementptr inbounds %struct.DTD, %struct.DTD* %16, i32 0, i32 2, !dbg !4685
  call void @hashTableDestroy(%struct.HASH_TABLE* %attributeIds), !dbg !4686
  %17 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !4687, !tbaa !2289
  %prefixes = getelementptr inbounds %struct.DTD, %struct.DTD* %17, i32 0, i32 3, !dbg !4688
  call void @hashTableDestroy(%struct.HASH_TABLE* %prefixes), !dbg !4689
  %18 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !4690, !tbaa !2289
  %pool = getelementptr inbounds %struct.DTD, %struct.DTD* %18, i32 0, i32 4, !dbg !4691
  call void @poolDestroy(%struct.STRING_POOL* %pool), !dbg !4692
  %19 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !4693, !tbaa !2289
  %entityValuePool = getelementptr inbounds %struct.DTD, %struct.DTD* %19, i32 0, i32 5, !dbg !4694
  call void @poolDestroy(%struct.STRING_POOL* %entityValuePool), !dbg !4695
  %20 = load i8, i8* %isDocEntity.addr, align 1, !dbg !4696, !tbaa !2307
  %tobool4 = icmp ne i8 %20, 0, !dbg !4696
  br i1 %tobool4, label %if.then.5, label %if.end.8, !dbg !4698

if.then.5:                                        ; preds = %for.end
  %21 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !dbg !4699, !tbaa !2289
  %free_fcn6 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %21, i32 0, i32 2, !dbg !4701
  %22 = load void (i8*)*, void (i8*)** %free_fcn6, align 8, !dbg !4701, !tbaa !2356
  %23 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !4702, !tbaa !2289
  %scaffIndex = getelementptr inbounds %struct.DTD, %struct.DTD* %23, i32 0, i32 18, !dbg !4703
  %24 = load i32*, i32** %scaffIndex, align 8, !dbg !4703, !tbaa !3148
  %25 = bitcast i32* %24 to i8*, !dbg !4702
  call void %22(i8* %25), !dbg !4699
  %26 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !dbg !4704, !tbaa !2289
  %free_fcn7 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %26, i32 0, i32 2, !dbg !4705
  %27 = load void (i8*)*, void (i8*)** %free_fcn7, align 8, !dbg !4705, !tbaa !2356
  %28 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !4706, !tbaa !2289
  %scaffold = getelementptr inbounds %struct.DTD, %struct.DTD* %28, i32 0, i32 13, !dbg !4707
  %29 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold, align 8, !dbg !4707, !tbaa !3156
  %30 = bitcast %struct.CONTENT_SCAFFOLD* %29 to i8*, !dbg !4706
  call void %27(i8* %30), !dbg !4704
  br label %if.end.8, !dbg !4708

if.end.8:                                         ; preds = %if.then.5, %for.end
  %31 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !dbg !4709, !tbaa !2289
  %free_fcn9 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %31, i32 0, i32 2, !dbg !4710
  %32 = load void (i8*)*, void (i8*)** %free_fcn9, align 8, !dbg !4710, !tbaa !2356
  %33 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !4711, !tbaa !2289
  %34 = bitcast %struct.DTD* %33 to i8*, !dbg !4711
  call void %32(i8* %34), !dbg !4709
  %35 = bitcast %struct.HASH_TABLE_ITER* %iter to i8*, !dbg !4712
  call void @llvm.lifetime.end(i64 16, i8* %35) #2, !dbg !4712
  ret void, !dbg !4712

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_UseParserAsHandlerArg(%struct.XML_ParserStruct* %parser) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !755, metadata !2293), !dbg !4713
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4714, !tbaa !2289
  %1 = bitcast %struct.XML_ParserStruct* %0 to i8*, !dbg !4714
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4715, !tbaa !2289
  %m_handlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 1, !dbg !4716
  store i8* %1, i8** %m_handlerArg, align 8, !dbg !4717, !tbaa !2842
  ret void, !dbg !4718
}

; Function Attrs: nounwind uwtable
define i32 @PyExpat_XML_UseForeignDTD(%struct.XML_ParserStruct* %parser, i8 zeroext %useDTD) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %useDTD.addr = alloca i8, align 1
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !760, metadata !2293), !dbg !4719
  store i8 %useDTD, i8* %useDTD.addr, align 1, !tbaa !2307
  call void @llvm.dbg.declare(metadata i8* %useDTD.addr, metadata !761, metadata !2293), !dbg !4720
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4721, !tbaa !2289
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 85, !dbg !4723
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0, !dbg !4724
  %1 = load i32, i32* %parsing, align 4, !dbg !4724, !tbaa !3052
  %cmp = icmp eq i32 %1, 1, !dbg !4725
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4726

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4727, !tbaa !2289
  %m_parsingStatus1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 85, !dbg !4729
  %parsing2 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus1, i32 0, i32 0, !dbg !4730
  %3 = load i32, i32* %parsing2, align 4, !dbg !4730, !tbaa !3052
  %cmp3 = icmp eq i32 %3, 3, !dbg !4731
  br i1 %cmp3, label %if.then, label %if.end, !dbg !4732

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 26, i32* %retval, !dbg !4733
  br label %return, !dbg !4733

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i8, i8* %useDTD.addr, align 1, !dbg !4734, !tbaa !2307
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4735, !tbaa !2289
  %m_useForeignDTD = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 87, !dbg !4736
  store i8 %4, i8* %m_useForeignDTD, align 1, !dbg !4737, !tbaa !3060
  store i32 0, i32* %retval, !dbg !4738
  br label %return, !dbg !4738

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, !dbg !4739
  ret i32 %6, !dbg !4739
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetReturnNSTriplet(%struct.XML_ParserStruct* %parser, i32 %do_nst) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %do_nst.addr = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !766, metadata !2293), !dbg !4740
  store i32 %do_nst, i32* %do_nst.addr, align 4, !tbaa !3391
  call void @llvm.dbg.declare(metadata i32* %do_nst.addr, metadata !767, metadata !2293), !dbg !4741
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4742, !tbaa !2289
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 85, !dbg !4744
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0, !dbg !4745
  %1 = load i32, i32* %parsing, align 4, !dbg !4745, !tbaa !3052
  %cmp = icmp eq i32 %1, 1, !dbg !4746
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4747

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4748, !tbaa !2289
  %m_parsingStatus1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 85, !dbg !4750
  %parsing2 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus1, i32 0, i32 0, !dbg !4751
  %3 = load i32, i32* %parsing2, align 4, !dbg !4751, !tbaa !3052
  %cmp3 = icmp eq i32 %3, 3, !dbg !4752
  br i1 %cmp3, label %if.then, label %if.end, !dbg !4753

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !4754

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i32, i32* %do_nst.addr, align 4, !dbg !4755, !tbaa !3391
  %tobool = icmp ne i32 %4, 0, !dbg !4755
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !4755
  %conv = trunc i32 %cond to i8, !dbg !4755
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4756, !tbaa !2289
  %m_ns_triplets = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 39, !dbg !4757
  store i8 %conv, i8* %m_ns_triplets, align 1, !dbg !4758, !tbaa !2549
  br label %return, !dbg !4759

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !4760
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetUserData(%struct.XML_ParserStruct* %parser, i8* %p) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %p.addr = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !772, metadata !2293), !dbg !4762
  store i8* %p, i8** %p.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !773, metadata !2293), !dbg !4763
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4764, !tbaa !2289
  %m_handlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 1, !dbg !4766
  %1 = load i8*, i8** %m_handlerArg, align 8, !dbg !4766, !tbaa !2842
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4767, !tbaa !2289
  %m_userData = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 0, !dbg !4768
  %3 = load i8*, i8** %m_userData, align 8, !dbg !4768, !tbaa !2838
  %cmp = icmp eq i8* %1, %3, !dbg !4769
  br i1 %cmp, label %if.then, label %if.else, !dbg !4770

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %p.addr, align 8, !dbg !4771, !tbaa !2289
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4772, !tbaa !2289
  %m_userData1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 0, !dbg !4773
  store i8* %4, i8** %m_userData1, align 8, !dbg !4774, !tbaa !2838
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4775, !tbaa !2289
  %m_handlerArg2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 1, !dbg !4776
  store i8* %4, i8** %m_handlerArg2, align 8, !dbg !4777, !tbaa !2842
  br label %if.end, !dbg !4778

if.else:                                          ; preds = %entry
  %7 = load i8*, i8** %p.addr, align 8, !dbg !4779, !tbaa !2289
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4780, !tbaa !2289
  %m_userData3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 0, !dbg !4781
  store i8* %7, i8** %m_userData3, align 8, !dbg !4782, !tbaa !2838
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !4783
}

; Function Attrs: nounwind uwtable
define i32 @PyExpat_XML_SetBase(%struct.XML_ParserStruct* %parser, i8* %p) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %p.addr = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !776, metadata !2293), !dbg !4784
  store i8* %p, i8** %p.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !777, metadata !2293), !dbg !4785
  %0 = load i8*, i8** %p.addr, align 8, !dbg !4786, !tbaa !2289
  %tobool = icmp ne i8* %0, null, !dbg !4786
  br i1 %tobool, label %if.then, label %if.else, !dbg !4788

if.then:                                          ; preds = %entry
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4789, !tbaa !2289
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 65, !dbg !4791
  %2 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !4791, !tbaa !2478
  %pool = getelementptr inbounds %struct.DTD, %struct.DTD* %2, i32 0, i32 4, !dbg !4792
  %3 = load i8*, i8** %p.addr, align 8, !dbg !4793, !tbaa !2289
  %call = call i8* @poolCopyString(%struct.STRING_POOL* %pool, i8* %3), !dbg !4794
  store i8* %call, i8** %p.addr, align 8, !dbg !4795, !tbaa !2289
  %4 = load i8*, i8** %p.addr, align 8, !dbg !4796, !tbaa !2289
  %tobool1 = icmp ne i8* %4, null, !dbg !4796
  br i1 %tobool1, label %if.end, label %if.then.2, !dbg !4798

if.then.2:                                        ; preds = %if.then
  store i32 0, i32* %retval, !dbg !4799
  br label %return, !dbg !4799

if.end:                                           ; preds = %if.then
  %5 = load i8*, i8** %p.addr, align 8, !dbg !4800, !tbaa !2289
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4801, !tbaa !2289
  %m_curBase = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 66, !dbg !4802
  store i8* %5, i8** %m_curBase, align 8, !dbg !4803, !tbaa !2829
  br label %if.end.4, !dbg !4804

if.else:                                          ; preds = %entry
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4805, !tbaa !2289
  %m_curBase3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 66, !dbg !4806
  store i8* null, i8** %m_curBase3, align 8, !dbg !4807, !tbaa !2829
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %if.end
  store i32 1, i32* %retval, !dbg !4808
  br label %return, !dbg !4808

return:                                           ; preds = %if.end.4, %if.then.2
  %8 = load i32, i32* %retval, !dbg !4809
  ret i32 %8, !dbg !4809
}

; Function Attrs: nounwind uwtable
define i8* @PyExpat_XML_GetBase(%struct.XML_ParserStruct* %parser) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !782, metadata !2293), !dbg !4810
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4811, !tbaa !2289
  %m_curBase = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 66, !dbg !4812
  %1 = load i8*, i8** %m_curBase, align 8, !dbg !4812, !tbaa !2829
  ret i8* %1, !dbg !4813
}

; Function Attrs: nounwind uwtable
define i32 @PyExpat_XML_GetSpecifiedAttributeCount(%struct.XML_ParserStruct* %parser) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !787, metadata !2293), !dbg !4814
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4815, !tbaa !2289
  %m_nSpecifiedAtts = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 72, !dbg !4816
  %1 = load i32, i32* %m_nSpecifiedAtts, align 4, !dbg !4816, !tbaa !3035
  ret i32 %1, !dbg !4817
}

; Function Attrs: nounwind uwtable
define i32 @PyExpat_XML_GetIdAttributeIndex(%struct.XML_ParserStruct* %parser) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !790, metadata !2293), !dbg !4818
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4819, !tbaa !2289
  %m_idAttIndex = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 73, !dbg !4820
  %1 = load i32, i32* %m_idAttIndex, align 4, !dbg !4820, !tbaa !4821
  ret i32 %1, !dbg !4822
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetElementHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i8**)* %start, void (i8*, i8*)* %end) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca void (i8*, i8*, i8**)*, align 8
  %end.addr = alloca void (i8*, i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !795, metadata !2293), !dbg !4823
  store void (i8*, i8*, i8**)* %start, void (i8*, i8*, i8**)** %start.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8**)** %start.addr, metadata !796, metadata !2293), !dbg !4824
  store void (i8*, i8*)* %end, void (i8*, i8*)** %end.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata void (i8*, i8*)** %end.addr, metadata !797, metadata !2293), !dbg !4825
  %0 = load void (i8*, i8*, i8**)*, void (i8*, i8*, i8**)** %start.addr, align 8, !dbg !4826, !tbaa !2289
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4827, !tbaa !2289
  %m_startElementHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 11, !dbg !4828
  store void (i8*, i8*, i8**)* %0, void (i8*, i8*, i8**)** %m_startElementHandler, align 8, !dbg !4829, !tbaa !2846
  %2 = load void (i8*, i8*)*, void (i8*, i8*)** %end.addr, align 8, !dbg !4830, !tbaa !2289
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4831, !tbaa !2289
  %m_endElementHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 12, !dbg !4832
  store void (i8*, i8*)* %2, void (i8*, i8*)** %m_endElementHandler, align 8, !dbg !4833, !tbaa !2850
  ret void, !dbg !4834
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetStartElementHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i8**)* %start) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca void (i8*, i8*, i8**)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !802, metadata !2293), !dbg !4835
  store void (i8*, i8*, i8**)* %start, void (i8*, i8*, i8**)** %start.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8**)** %start.addr, metadata !803, metadata !2293), !dbg !4836
  %0 = load void (i8*, i8*, i8**)*, void (i8*, i8*, i8**)** %start.addr, align 8, !dbg !4837, !tbaa !2289
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4838, !tbaa !2289
  %m_startElementHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 11, !dbg !4839
  store void (i8*, i8*, i8**)* %0, void (i8*, i8*, i8**)** %m_startElementHandler, align 8, !dbg !4840, !tbaa !2846
  ret void, !dbg !4841
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetEndElementHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*)* %end) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %end.addr = alloca void (i8*, i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !808, metadata !2293), !dbg !4842
  store void (i8*, i8*)* %end, void (i8*, i8*)** %end.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata void (i8*, i8*)** %end.addr, metadata !809, metadata !2293), !dbg !4843
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** %end.addr, align 8, !dbg !4844, !tbaa !2289
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4845, !tbaa !2289
  %m_endElementHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 12, !dbg !4846
  store void (i8*, i8*)* %0, void (i8*, i8*)** %m_endElementHandler, align 8, !dbg !4847, !tbaa !2850
  ret void, !dbg !4848
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetCharacterDataHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i32)* %handler) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca void (i8*, i8*, i32)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !814, metadata !2293), !dbg !4849
  store void (i8*, i8*, i32)* %handler, void (i8*, i8*, i32)** %handler.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i32)** %handler.addr, metadata !815, metadata !2293), !dbg !4850
  %0 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %handler.addr, align 8, !dbg !4851, !tbaa !2289
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4852, !tbaa !2289
  %m_characterDataHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 13, !dbg !4853
  store void (i8*, i8*, i32)* %0, void (i8*, i8*, i32)** %m_characterDataHandler, align 8, !dbg !4854, !tbaa !2854
  ret void, !dbg !4855
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetProcessingInstructionHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i8*)* %handler) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca void (i8*, i8*, i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !820, metadata !2293), !dbg !4856
  store void (i8*, i8*, i8*)* %handler, void (i8*, i8*, i8*)** %handler.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %handler.addr, metadata !821, metadata !2293), !dbg !4857
  %0 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %handler.addr, align 8, !dbg !4858, !tbaa !2289
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4859, !tbaa !2289
  %m_processingInstructionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 14, !dbg !4860
  store void (i8*, i8*, i8*)* %0, void (i8*, i8*, i8*)** %m_processingInstructionHandler, align 8, !dbg !4861, !tbaa !2858
  ret void, !dbg !4862
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetCommentHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*)* %handler) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca void (i8*, i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !826, metadata !2293), !dbg !4863
  store void (i8*, i8*)* %handler, void (i8*, i8*)** %handler.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata void (i8*, i8*)** %handler.addr, metadata !827, metadata !2293), !dbg !4864
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** %handler.addr, align 8, !dbg !4865, !tbaa !2289
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4866, !tbaa !2289
  %m_commentHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 15, !dbg !4867
  store void (i8*, i8*)* %0, void (i8*, i8*)** %m_commentHandler, align 8, !dbg !4868, !tbaa !2862
  ret void, !dbg !4869
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetCdataSectionHandler(%struct.XML_ParserStruct* %parser, void (i8*)* %start, void (i8*)* %end) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca void (i8*)*, align 8
  %end.addr = alloca void (i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !832, metadata !2293), !dbg !4870
  store void (i8*)* %start, void (i8*)** %start.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata void (i8*)** %start.addr, metadata !833, metadata !2293), !dbg !4871
  store void (i8*)* %end, void (i8*)** %end.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata void (i8*)** %end.addr, metadata !834, metadata !2293), !dbg !4872
  %0 = load void (i8*)*, void (i8*)** %start.addr, align 8, !dbg !4873, !tbaa !2289
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4874, !tbaa !2289
  %m_startCdataSectionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 16, !dbg !4875
  store void (i8*)* %0, void (i8*)** %m_startCdataSectionHandler, align 8, !dbg !4876, !tbaa !2866
  %2 = load void (i8*)*, void (i8*)** %end.addr, align 8, !dbg !4877, !tbaa !2289
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4878, !tbaa !2289
  %m_endCdataSectionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 17, !dbg !4879
  store void (i8*)* %2, void (i8*)** %m_endCdataSectionHandler, align 8, !dbg !4880, !tbaa !2870
  ret void, !dbg !4881
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetStartCdataSectionHandler(%struct.XML_ParserStruct* %parser, void (i8*)* %start) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca void (i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !839, metadata !2293), !dbg !4882
  store void (i8*)* %start, void (i8*)** %start.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata void (i8*)** %start.addr, metadata !840, metadata !2293), !dbg !4883
  %0 = load void (i8*)*, void (i8*)** %start.addr, align 8, !dbg !4884, !tbaa !2289
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4885, !tbaa !2289
  %m_startCdataSectionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 16, !dbg !4886
  store void (i8*)* %0, void (i8*)** %m_startCdataSectionHandler, align 8, !dbg !4887, !tbaa !2866
  ret void, !dbg !4888
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetEndCdataSectionHandler(%struct.XML_ParserStruct* %parser, void (i8*)* %end) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %end.addr = alloca void (i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !845, metadata !2293), !dbg !4889
  store void (i8*)* %end, void (i8*)** %end.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata void (i8*)** %end.addr, metadata !846, metadata !2293), !dbg !4890
  %0 = load void (i8*)*, void (i8*)** %end.addr, align 8, !dbg !4891, !tbaa !2289
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4892, !tbaa !2289
  %m_endCdataSectionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 17, !dbg !4893
  store void (i8*)* %0, void (i8*)** %m_endCdataSectionHandler, align 8, !dbg !4894, !tbaa !2870
  ret void, !dbg !4895
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetDefaultHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i32)* %handler) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca void (i8*, i8*, i32)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !851, metadata !2293), !dbg !4896
  store void (i8*, i8*, i32)* %handler, void (i8*, i8*, i32)** %handler.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i32)** %handler.addr, metadata !852, metadata !2293), !dbg !4897
  %0 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %handler.addr, align 8, !dbg !4898, !tbaa !2289
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4899, !tbaa !2289
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 18, !dbg !4900
  store void (i8*, i8*, i32)* %0, void (i8*, i8*, i32)** %m_defaultHandler, align 8, !dbg !4901, !tbaa !2874
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4902, !tbaa !2289
  %m_defaultExpandInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 52, !dbg !4903
  store i8 0, i8* %m_defaultExpandInternalEntities, align 1, !dbg !4904, !tbaa !3021
  ret void, !dbg !4905
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetDefaultHandlerExpand(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i32)* %handler) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca void (i8*, i8*, i32)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !855, metadata !2293), !dbg !4906
  store void (i8*, i8*, i32)* %handler, void (i8*, i8*, i32)** %handler.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i32)** %handler.addr, metadata !856, metadata !2293), !dbg !4907
  %0 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %handler.addr, align 8, !dbg !4908, !tbaa !2289
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4909, !tbaa !2289
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 18, !dbg !4910
  store void (i8*, i8*, i32)* %0, void (i8*, i8*, i32)** %m_defaultHandler, align 8, !dbg !4911, !tbaa !2874
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4912, !tbaa !2289
  %m_defaultExpandInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 52, !dbg !4913
  store i8 1, i8* %m_defaultExpandInternalEntities, align 1, !dbg !4914, !tbaa !3021
  ret void, !dbg !4915
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetDoctypeDeclHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i8*, i8*, i32)* %start, void (i8*)* %end) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca void (i8*, i8*, i8*, i8*, i32)*, align 8
  %end.addr = alloca void (i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !861, metadata !2293), !dbg !4916
  store void (i8*, i8*, i8*, i8*, i32)* %start, void (i8*, i8*, i8*, i8*, i32)** %start.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i8*, i32)** %start.addr, metadata !862, metadata !2293), !dbg !4917
  store void (i8*)* %end, void (i8*)** %end.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata void (i8*)** %end.addr, metadata !863, metadata !2293), !dbg !4918
  %0 = load void (i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i32)** %start.addr, align 8, !dbg !4919, !tbaa !2289
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4920, !tbaa !2289
  %m_startDoctypeDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 19, !dbg !4921
  store void (i8*, i8*, i8*, i8*, i32)* %0, void (i8*, i8*, i8*, i8*, i32)** %m_startDoctypeDeclHandler, align 8, !dbg !4922, !tbaa !2878
  %2 = load void (i8*)*, void (i8*)** %end.addr, align 8, !dbg !4923, !tbaa !2289
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4924, !tbaa !2289
  %m_endDoctypeDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 20, !dbg !4925
  store void (i8*)* %2, void (i8*)** %m_endDoctypeDeclHandler, align 8, !dbg !4926, !tbaa !2882
  ret void, !dbg !4927
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetStartDoctypeDeclHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i8*, i8*, i32)* %start) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca void (i8*, i8*, i8*, i8*, i32)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !868, metadata !2293), !dbg !4928
  store void (i8*, i8*, i8*, i8*, i32)* %start, void (i8*, i8*, i8*, i8*, i32)** %start.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i8*, i32)** %start.addr, metadata !869, metadata !2293), !dbg !4929
  %0 = load void (i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i32)** %start.addr, align 8, !dbg !4930, !tbaa !2289
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4931, !tbaa !2289
  %m_startDoctypeDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 19, !dbg !4932
  store void (i8*, i8*, i8*, i8*, i32)* %0, void (i8*, i8*, i8*, i8*, i32)** %m_startDoctypeDeclHandler, align 8, !dbg !4933, !tbaa !2878
  ret void, !dbg !4934
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetEndDoctypeDeclHandler(%struct.XML_ParserStruct* %parser, void (i8*)* %end) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %end.addr = alloca void (i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !874, metadata !2293), !dbg !4935
  store void (i8*)* %end, void (i8*)** %end.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata void (i8*)** %end.addr, metadata !875, metadata !2293), !dbg !4936
  %0 = load void (i8*)*, void (i8*)** %end.addr, align 8, !dbg !4937, !tbaa !2289
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4938, !tbaa !2289
  %m_endDoctypeDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 20, !dbg !4939
  store void (i8*)* %0, void (i8*)** %m_endDoctypeDeclHandler, align 8, !dbg !4940, !tbaa !2882
  ret void, !dbg !4941
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetUnparsedEntityDeclHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i8*, i8*, i8*, i8*)* %handler) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca void (i8*, i8*, i8*, i8*, i8*, i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !880, metadata !2293), !dbg !4942
  store void (i8*, i8*, i8*, i8*, i8*, i8*)* %handler, void (i8*, i8*, i8*, i8*, i8*, i8*)** %handler.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i8*, i8*, i8*)** %handler.addr, metadata !881, metadata !2293), !dbg !4943
  %0 = load void (i8*, i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*, i8*)** %handler.addr, align 8, !dbg !4944, !tbaa !2289
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4945, !tbaa !2289
  %m_unparsedEntityDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 21, !dbg !4946
  store void (i8*, i8*, i8*, i8*, i8*, i8*)* %0, void (i8*, i8*, i8*, i8*, i8*, i8*)** %m_unparsedEntityDeclHandler, align 8, !dbg !4947, !tbaa !2886
  ret void, !dbg !4948
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetNotationDeclHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i8*, i8*, i8*)* %handler) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca void (i8*, i8*, i8*, i8*, i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !886, metadata !2293), !dbg !4949
  store void (i8*, i8*, i8*, i8*, i8*)* %handler, void (i8*, i8*, i8*, i8*, i8*)** %handler.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i8*, i8*)** %handler.addr, metadata !887, metadata !2293), !dbg !4950
  %0 = load void (i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*)** %handler.addr, align 8, !dbg !4951, !tbaa !2289
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4952, !tbaa !2289
  %m_notationDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 22, !dbg !4953
  store void (i8*, i8*, i8*, i8*, i8*)* %0, void (i8*, i8*, i8*, i8*, i8*)** %m_notationDeclHandler, align 8, !dbg !4954, !tbaa !2890
  ret void, !dbg !4955
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetNamespaceDeclHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i8*)* %start, void (i8*, i8*)* %end) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca void (i8*, i8*, i8*)*, align 8
  %end.addr = alloca void (i8*, i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !892, metadata !2293), !dbg !4956
  store void (i8*, i8*, i8*)* %start, void (i8*, i8*, i8*)** %start.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %start.addr, metadata !893, metadata !2293), !dbg !4957
  store void (i8*, i8*)* %end, void (i8*, i8*)** %end.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata void (i8*, i8*)** %end.addr, metadata !894, metadata !2293), !dbg !4958
  %0 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %start.addr, align 8, !dbg !4959, !tbaa !2289
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4960, !tbaa !2289
  %m_startNamespaceDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 23, !dbg !4961
  store void (i8*, i8*, i8*)* %0, void (i8*, i8*, i8*)** %m_startNamespaceDeclHandler, align 8, !dbg !4962, !tbaa !2894
  %2 = load void (i8*, i8*)*, void (i8*, i8*)** %end.addr, align 8, !dbg !4963, !tbaa !2289
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4964, !tbaa !2289
  %m_endNamespaceDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 24, !dbg !4965
  store void (i8*, i8*)* %2, void (i8*, i8*)** %m_endNamespaceDeclHandler, align 8, !dbg !4966, !tbaa !2898
  ret void, !dbg !4967
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetStartNamespaceDeclHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i8*)* %start) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca void (i8*, i8*, i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !899, metadata !2293), !dbg !4968
  store void (i8*, i8*, i8*)* %start, void (i8*, i8*, i8*)** %start.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %start.addr, metadata !900, metadata !2293), !dbg !4969
  %0 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %start.addr, align 8, !dbg !4970, !tbaa !2289
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4971, !tbaa !2289
  %m_startNamespaceDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 23, !dbg !4972
  store void (i8*, i8*, i8*)* %0, void (i8*, i8*, i8*)** %m_startNamespaceDeclHandler, align 8, !dbg !4973, !tbaa !2894
  ret void, !dbg !4974
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetEndNamespaceDeclHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*)* %end) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %end.addr = alloca void (i8*, i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !905, metadata !2293), !dbg !4975
  store void (i8*, i8*)* %end, void (i8*, i8*)** %end.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata void (i8*, i8*)** %end.addr, metadata !906, metadata !2293), !dbg !4976
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** %end.addr, align 8, !dbg !4977, !tbaa !2289
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4978, !tbaa !2289
  %m_endNamespaceDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 24, !dbg !4979
  store void (i8*, i8*)* %0, void (i8*, i8*)** %m_endNamespaceDeclHandler, align 8, !dbg !4980, !tbaa !2898
  ret void, !dbg !4981
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetNotStandaloneHandler(%struct.XML_ParserStruct* %parser, i32 (i8*)* %handler) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca i32 (i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !911, metadata !2293), !dbg !4982
  store i32 (i8*)* %handler, i32 (i8*)** %handler.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i32 (i8*)** %handler.addr, metadata !912, metadata !2293), !dbg !4983
  %0 = load i32 (i8*)*, i32 (i8*)** %handler.addr, align 8, !dbg !4984, !tbaa !2289
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4985, !tbaa !2289
  %m_notStandaloneHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 25, !dbg !4986
  store i32 (i8*)* %0, i32 (i8*)** %m_notStandaloneHandler, align 8, !dbg !4987, !tbaa !2902
  ret void, !dbg !4988
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetExternalEntityRefHandler(%struct.XML_ParserStruct* %parser, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)* %handler) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !917, metadata !2293), !dbg !4989
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)* %handler, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %handler.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %handler.addr, metadata !918, metadata !2293), !dbg !4990
  %0 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %handler.addr, align 8, !dbg !4991, !tbaa !2289
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4992, !tbaa !2289
  %m_externalEntityRefHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 26, !dbg !4993
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)* %0, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %m_externalEntityRefHandler, align 8, !dbg !4994, !tbaa !2906
  ret void, !dbg !4995
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetExternalEntityRefHandlerArg(%struct.XML_ParserStruct* %parser, i8* %arg) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %arg.addr = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !921, metadata !2293), !dbg !4996
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !922, metadata !2293), !dbg !4997
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !4998, !tbaa !2289
  %tobool = icmp ne i8* %0, null, !dbg !4998
  br i1 %tobool, label %if.then, label %if.else, !dbg !5000

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !5001, !tbaa !2289
  %2 = bitcast i8* %1 to %struct.XML_ParserStruct*, !dbg !5002
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5003, !tbaa !2289
  %m_externalEntityRefHandlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 27, !dbg !5004
  store %struct.XML_ParserStruct* %2, %struct.XML_ParserStruct** %m_externalEntityRefHandlerArg, align 8, !dbg !5005, !tbaa !2911
  br label %if.end, !dbg !5006

if.else:                                          ; preds = %entry
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5007, !tbaa !2289
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5008, !tbaa !2289
  %m_externalEntityRefHandlerArg1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 27, !dbg !5009
  store %struct.XML_ParserStruct* %4, %struct.XML_ParserStruct** %m_externalEntityRefHandlerArg1, align 8, !dbg !5010, !tbaa !2911
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !5011
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetSkippedEntityHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i32)* %handler) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca void (i8*, i8*, i32)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !927, metadata !2293), !dbg !5012
  store void (i8*, i8*, i32)* %handler, void (i8*, i8*, i32)** %handler.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i32)** %handler.addr, metadata !928, metadata !2293), !dbg !5013
  %0 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %handler.addr, align 8, !dbg !5014, !tbaa !2289
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5015, !tbaa !2289
  %m_skippedEntityHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 28, !dbg !5016
  store void (i8*, i8*, i32)* %0, void (i8*, i8*, i32)** %m_skippedEntityHandler, align 8, !dbg !5017, !tbaa !2915
  ret void, !dbg !5018
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetUnknownEncodingHandler(%struct.XML_ParserStruct* %parser, i32 (i8*, i8*, %struct.XML_Encoding*)* %handler, i8* %data) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca i32 (i8*, i8*, %struct.XML_Encoding*)*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !933, metadata !2293), !dbg !5019
  store i32 (i8*, i8*, %struct.XML_Encoding*)* %handler, i32 (i8*, i8*, %struct.XML_Encoding*)** %handler.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, %struct.XML_Encoding*)** %handler.addr, metadata !934, metadata !2293), !dbg !5020
  store i8* %data, i8** %data.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !935, metadata !2293), !dbg !5021
  %0 = load i32 (i8*, i8*, %struct.XML_Encoding*)*, i32 (i8*, i8*, %struct.XML_Encoding*)** %handler.addr, align 8, !dbg !5022, !tbaa !2289
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5023, !tbaa !2289
  %m_unknownEncodingHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 29, !dbg !5024
  store i32 (i8*, i8*, %struct.XML_Encoding*)* %0, i32 (i8*, i8*, %struct.XML_Encoding*)** %m_unknownEncodingHandler, align 8, !dbg !5025, !tbaa !2533
  %2 = load i8*, i8** %data.addr, align 8, !dbg !5026, !tbaa !2289
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5027, !tbaa !2289
  %m_unknownEncodingHandlerData = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 42, !dbg !5028
  store i8* %2, i8** %m_unknownEncodingHandlerData, align 8, !dbg !5029, !tbaa !2537
  ret void, !dbg !5030
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetElementDeclHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, %struct.XML_cp*)* %eldecl) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %eldecl.addr = alloca void (i8*, i8*, %struct.XML_cp*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !940, metadata !2293), !dbg !5031
  store void (i8*, i8*, %struct.XML_cp*)* %eldecl, void (i8*, i8*, %struct.XML_cp*)** %eldecl.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata void (i8*, i8*, %struct.XML_cp*)** %eldecl.addr, metadata !941, metadata !2293), !dbg !5032
  %0 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %eldecl.addr, align 8, !dbg !5033, !tbaa !2289
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5034, !tbaa !2289
  %m_elementDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 30, !dbg !5035
  store void (i8*, i8*, %struct.XML_cp*)* %0, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler, align 8, !dbg !5036, !tbaa !2919
  ret void, !dbg !5037
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetAttlistDeclHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i8*, i8*, i8*, i32)* %attdecl) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %attdecl.addr = alloca void (i8*, i8*, i8*, i8*, i8*, i32)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !946, metadata !2293), !dbg !5038
  store void (i8*, i8*, i8*, i8*, i8*, i32)* %attdecl, void (i8*, i8*, i8*, i8*, i8*, i32)** %attdecl.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i8*, i8*, i32)** %attdecl.addr, metadata !947, metadata !2293), !dbg !5039
  %0 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %attdecl.addr, align 8, !dbg !5040, !tbaa !2289
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5041, !tbaa !2289
  %m_attlistDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 31, !dbg !5042
  store void (i8*, i8*, i8*, i8*, i8*, i32)* %0, void (i8*, i8*, i8*, i8*, i8*, i32)** %m_attlistDeclHandler, align 8, !dbg !5043, !tbaa !2923
  ret void, !dbg !5044
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetEntityDeclHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %handler) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !952, metadata !2293), !dbg !5045
  store void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %handler, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %handler.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %handler.addr, metadata !953, metadata !2293), !dbg !5046
  %0 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %handler.addr, align 8, !dbg !5047, !tbaa !2289
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5048, !tbaa !2289
  %m_entityDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 32, !dbg !5049
  store void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %0, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler, align 8, !dbg !5050, !tbaa !2927
  ret void, !dbg !5051
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetXmlDeclHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i8*, i32)* %handler) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca void (i8*, i8*, i8*, i32)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !958, metadata !2293), !dbg !5052
  store void (i8*, i8*, i8*, i32)* %handler, void (i8*, i8*, i8*, i32)** %handler.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i32)** %handler.addr, metadata !959, metadata !2293), !dbg !5053
  %0 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %handler.addr, align 8, !dbg !5054, !tbaa !2289
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5055, !tbaa !2289
  %m_xmlDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 33, !dbg !5056
  store void (i8*, i8*, i8*, i32)* %0, void (i8*, i8*, i8*, i32)** %m_xmlDeclHandler, align 8, !dbg !5057, !tbaa !2931
  ret void, !dbg !5058
}

; Function Attrs: nounwind uwtable
define i32 @PyExpat_XML_SetParamEntityParsing(%struct.XML_ParserStruct* %parser, i32 %peParsing) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %peParsing.addr = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !964, metadata !2293), !dbg !5059
  store i32 %peParsing, i32* %peParsing.addr, align 4, !tbaa !2307
  call void @llvm.dbg.declare(metadata i32* %peParsing.addr, metadata !965, metadata !2293), !dbg !5060
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5061, !tbaa !2289
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 85, !dbg !5063
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0, !dbg !5064
  %1 = load i32, i32* %parsing, align 4, !dbg !5064, !tbaa !3052
  %cmp = icmp eq i32 %1, 1, !dbg !5065
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5066

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5067, !tbaa !2289
  %m_parsingStatus1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 85, !dbg !5069
  %parsing2 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus1, i32 0, i32 0, !dbg !5070
  %3 = load i32, i32* %parsing2, align 4, !dbg !5070, !tbaa !3052
  %cmp3 = icmp eq i32 %3, 3, !dbg !5071
  br i1 %cmp3, label %if.then, label %if.end, !dbg !5072

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, !dbg !5073
  br label %return, !dbg !5073

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i32, i32* %peParsing.addr, align 4, !dbg !5074, !tbaa !2307
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5075, !tbaa !2289
  %m_paramEntityParsing = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 88, !dbg !5076
  store i32 %4, i32* %m_paramEntityParsing, align 4, !dbg !5077, !tbaa !3064
  store i32 1, i32* %retval, !dbg !5078
  br label %return, !dbg !5078

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, !dbg !5079
  ret i32 %6, !dbg !5079
}

; Function Attrs: nounwind uwtable
define i32 @PyExpat_XML_SetHashSalt(%struct.XML_ParserStruct* %parser, i64 %hash_salt) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %hash_salt.addr = alloca i64, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !970, metadata !2293), !dbg !5080
  store i64 %hash_salt, i64* %hash_salt.addr, align 8, !tbaa !3400
  call void @llvm.dbg.declare(metadata i64* %hash_salt.addr, metadata !971, metadata !2293), !dbg !5081
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5082, !tbaa !2289
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 85, !dbg !5084
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0, !dbg !5085
  %1 = load i32, i32* %parsing, align 4, !dbg !5085, !tbaa !3052
  %cmp = icmp eq i32 %1, 1, !dbg !5086
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5087

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5088, !tbaa !2289
  %m_parsingStatus1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 85, !dbg !5090
  %parsing2 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus1, i32 0, i32 0, !dbg !5091
  %3 = load i32, i32* %parsing2, align 4, !dbg !5091, !tbaa !3052
  %cmp3 = icmp eq i32 %3, 3, !dbg !5092
  br i1 %cmp3, label %if.then, label %if.end, !dbg !5093

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, !dbg !5094
  br label %return, !dbg !5094

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i64, i64* %hash_salt.addr, align 8, !dbg !5095, !tbaa !3400
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5096, !tbaa !2289
  %m_hash_secret_salt = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 89, !dbg !5097
  store i64 %4, i64* %m_hash_secret_salt, align 8, !dbg !5098, !tbaa !3068
  store i32 1, i32* %retval, !dbg !5099
  br label %return, !dbg !5099

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, !dbg !5100
  ret i32 %6, !dbg !5100
}

; Function Attrs: nounwind uwtable
define i32 @PyExpat_XML_Parse(%struct.XML_ParserStruct* %parser, i8* %s, i32 %len, i32 %isFinal) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %s.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %isFinal.addr = alloca i32, align 4
  %buff = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !976, metadata !2293), !dbg !5101
  store i8* %s, i8** %s.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !977, metadata !2293), !dbg !5102
  store i32 %len, i32* %len.addr, align 4, !tbaa !3391
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !978, metadata !2293), !dbg !5103
  store i32 %isFinal, i32* %isFinal.addr, align 4, !tbaa !3391
  call void @llvm.dbg.declare(metadata i32* %isFinal.addr, metadata !979, metadata !2293), !dbg !5104
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5105, !tbaa !2289
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 85, !dbg !5106
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0, !dbg !5107
  %1 = load i32, i32* %parsing, align 4, !dbg !5107, !tbaa !3052
  switch i32 %1, label %sw.default [
    i32 3, label %sw.bb
    i32 2, label %sw.bb.1
    i32 0, label %sw.bb.3
  ], !dbg !5108

sw.bb:                                            ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5109, !tbaa !2289
  %m_errorCode = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 46, !dbg !5111
  store i32 33, i32* %m_errorCode, align 4, !dbg !5112, !tbaa !3002
  store i32 0, i32* %retval, !dbg !5113
  br label %return, !dbg !5113

sw.bb.1:                                          ; preds = %entry
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5114, !tbaa !2289
  %m_errorCode2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 46, !dbg !5115
  store i32 36, i32* %m_errorCode2, align 4, !dbg !5116, !tbaa !3002
  store i32 0, i32* %retval, !dbg !5117
  br label %return, !dbg !5117

sw.bb.3:                                          ; preds = %entry
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5118, !tbaa !2289
  %m_parentParser = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 84, !dbg !5120
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %m_parentParser, align 8, !dbg !5120, !tbaa !2623
  %cmp = icmp eq %struct.XML_ParserStruct* %5, null, !dbg !5121
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5122

land.lhs.true:                                    ; preds = %sw.bb.3
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5123, !tbaa !2289
  %call = call zeroext i8 @startParsing(%struct.XML_ParserStruct* %6), !dbg !5125
  %tobool = icmp ne i8 %call, 0, !dbg !5125
  br i1 %tobool, label %if.end, label %if.then, !dbg !5126

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5127, !tbaa !2289
  %m_errorCode4 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 46, !dbg !5129
  store i32 1, i32* %m_errorCode4, align 4, !dbg !5130, !tbaa !3002
  store i32 0, i32* %retval, !dbg !5131
  br label %return, !dbg !5131

if.end:                                           ; preds = %land.lhs.true, %sw.bb.3
  br label %sw.default, !dbg !5132

sw.default:                                       ; preds = %entry, %if.end
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5135, !tbaa !2289
  %m_parsingStatus5 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 85, !dbg !5136
  %parsing6 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus5, i32 0, i32 0, !dbg !5137
  store i32 1, i32* %parsing6, align 4, !dbg !5138, !tbaa !3052
  br label %sw.epilog, !dbg !5139

sw.epilog:                                        ; preds = %sw.default
  %9 = load i32, i32* %len.addr, align 4, !dbg !5140, !tbaa !3391
  %cmp7 = icmp eq i32 %9, 0, !dbg !5141
  br i1 %cmp7, label %if.then.8, label %if.else, !dbg !5142

if.then.8:                                        ; preds = %sw.epilog
  %10 = load i32, i32* %isFinal.addr, align 4, !dbg !5143, !tbaa !3391
  %conv = trunc i32 %10 to i8, !dbg !5145
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5146, !tbaa !2289
  %m_parsingStatus9 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 85, !dbg !5147
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus9, i32 0, i32 1, !dbg !5148
  store i8 %conv, i8* %finalBuffer, align 1, !dbg !5149, !tbaa !5150
  %12 = load i32, i32* %isFinal.addr, align 4, !dbg !5151, !tbaa !3391
  %tobool10 = icmp ne i32 %12, 0, !dbg !5151
  br i1 %tobool10, label %if.end.12, label %if.then.11, !dbg !5153

if.then.11:                                       ; preds = %if.then.8
  store i32 1, i32* %retval, !dbg !5154
  br label %return, !dbg !5154

if.end.12:                                        ; preds = %if.then.8
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5155, !tbaa !2289
  %m_bufferPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 4, !dbg !5156
  %14 = load i8*, i8** %m_bufferPtr, align 8, !dbg !5156, !tbaa !2937
  %15 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5157, !tbaa !2289
  %m_positionPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %15, i32 0, i32 49, !dbg !5158
  store i8* %14, i8** %m_positionPtr, align 8, !dbg !5159, !tbaa !3014
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5160, !tbaa !2289
  %m_bufferEnd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 5, !dbg !5161
  %17 = load i8*, i8** %m_bufferEnd, align 8, !dbg !5161, !tbaa !2943
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5162, !tbaa !2289
  %m_parseEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 8, !dbg !5163
  store i8* %17, i8** %m_parseEndPtr, align 8, !dbg !5164, !tbaa !2951
  %19 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5165, !tbaa !2289
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %19, i32 0, i32 45, !dbg !5166
  %20 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8, !dbg !5166, !tbaa !2809
  %21 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5167, !tbaa !2289
  %22 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5168, !tbaa !2289
  %m_bufferPtr13 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %22, i32 0, i32 4, !dbg !5169
  %23 = load i8*, i8** %m_bufferPtr13, align 8, !dbg !5169, !tbaa !2937
  %24 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5170, !tbaa !2289
  %m_parseEndPtr14 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %24, i32 0, i32 8, !dbg !5171
  %25 = load i8*, i8** %m_parseEndPtr14, align 8, !dbg !5171, !tbaa !2951
  %26 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5172, !tbaa !2289
  %m_bufferPtr15 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %26, i32 0, i32 4, !dbg !5173
  %call16 = call i32 %20(%struct.XML_ParserStruct* %21, i8* %23, i8* %25, i8** %m_bufferPtr15), !dbg !5174
  %27 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5175, !tbaa !2289
  %m_errorCode17 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %27, i32 0, i32 46, !dbg !5176
  store i32 %call16, i32* %m_errorCode17, align 4, !dbg !5177, !tbaa !3002
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5178, !tbaa !2289
  %m_errorCode18 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %28, i32 0, i32 46, !dbg !5180
  %29 = load i32, i32* %m_errorCode18, align 4, !dbg !5180, !tbaa !3002
  %cmp19 = icmp eq i32 %29, 0, !dbg !5181
  br i1 %cmp19, label %if.then.21, label %if.end.34, !dbg !5182

if.then.21:                                       ; preds = %if.end.12
  %30 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5183, !tbaa !2289
  %m_parsingStatus22 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %30, i32 0, i32 85, !dbg !5185
  %parsing23 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus22, i32 0, i32 0, !dbg !5186
  %31 = load i32, i32* %parsing23, align 4, !dbg !5186, !tbaa !3052
  switch i32 %31, label %sw.default.33 [
    i32 3, label %sw.bb.24
    i32 0, label %sw.bb.30
    i32 1, label %sw.bb.30
  ], !dbg !5187

sw.bb.24:                                         ; preds = %if.then.21
  %32 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5188, !tbaa !2289
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %32, i32 0, i32 34, !dbg !5190
  %33 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !5190, !tbaa !5191
  %updatePosition = getelementptr inbounds %struct.encoding, %struct.encoding* %33, i32 0, i32 9, !dbg !5192
  %34 = load void (%struct.encoding*, i8*, i8*, %struct.position*)*, void (%struct.encoding*, i8*, i8*, %struct.position*)** %updatePosition, align 8, !dbg !5192, !tbaa !5193
  %35 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5194, !tbaa !2289
  %m_encoding25 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %35, i32 0, i32 34, !dbg !5195
  %36 = load %struct.encoding*, %struct.encoding** %m_encoding25, align 8, !dbg !5195, !tbaa !5191
  %37 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5196, !tbaa !2289
  %m_positionPtr26 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %37, i32 0, i32 49, !dbg !5197
  %38 = load i8*, i8** %m_positionPtr26, align 8, !dbg !5197, !tbaa !3014
  %39 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5198, !tbaa !2289
  %m_bufferPtr27 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %39, i32 0, i32 4, !dbg !5199
  %40 = load i8*, i8** %m_bufferPtr27, align 8, !dbg !5199, !tbaa !2937
  %41 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5200, !tbaa !2289
  %m_position = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %41, i32 0, i32 78, !dbg !5201
  call void %34(%struct.encoding* %36, i8* %38, i8* %40, %struct.position* %m_position), !dbg !5202
  %42 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5203, !tbaa !2289
  %m_bufferPtr28 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %42, i32 0, i32 4, !dbg !5204
  %43 = load i8*, i8** %m_bufferPtr28, align 8, !dbg !5204, !tbaa !2937
  %44 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5205, !tbaa !2289
  %m_positionPtr29 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %44, i32 0, i32 49, !dbg !5206
  store i8* %43, i8** %m_positionPtr29, align 8, !dbg !5207, !tbaa !3014
  store i32 2, i32* %retval, !dbg !5208
  br label %return, !dbg !5208

sw.bb.30:                                         ; preds = %if.then.21, %if.then.21
  %45 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5209, !tbaa !2289
  %m_parsingStatus31 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %45, i32 0, i32 85, !dbg !5210
  %parsing32 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus31, i32 0, i32 0, !dbg !5211
  store i32 2, i32* %parsing32, align 4, !dbg !5212, !tbaa !3052
  br label %sw.default.33, !dbg !5213

sw.default.33:                                    ; preds = %if.then.21, %sw.bb.30
  store i32 1, i32* %retval, !dbg !5214
  br label %return, !dbg !5214

if.end.34:                                        ; preds = %if.end.12
  %46 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5215, !tbaa !2289
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %46, i32 0, i32 47, !dbg !5216
  %47 = load i8*, i8** %m_eventPtr, align 8, !dbg !5216, !tbaa !3006
  %48 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5217, !tbaa !2289
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %48, i32 0, i32 48, !dbg !5218
  store i8* %47, i8** %m_eventEndPtr, align 8, !dbg !5219, !tbaa !3010
  %49 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5220, !tbaa !2289
  %m_processor35 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %49, i32 0, i32 45, !dbg !5221
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @errorProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor35, align 8, !dbg !5222, !tbaa !2809
  store i32 0, i32* %retval, !dbg !5223
  br label %return, !dbg !5223

if.else:                                          ; preds = %sw.epilog
  %50 = bitcast i8** %buff to i8*, !dbg !5224
  call void @llvm.lifetime.start(i64 8, i8* %50) #2, !dbg !5224
  call void @llvm.dbg.declare(metadata i8** %buff, metadata !980, metadata !2293), !dbg !5225
  %51 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5226, !tbaa !2289
  %52 = load i32, i32* %len.addr, align 4, !dbg !5227, !tbaa !3391
  %call36 = call i8* @PyExpat_XML_GetBuffer(%struct.XML_ParserStruct* %51, i32 %52), !dbg !5228
  store i8* %call36, i8** %buff, align 8, !dbg !5225, !tbaa !2289
  %53 = load i8*, i8** %buff, align 8, !dbg !5229, !tbaa !2289
  %cmp37 = icmp eq i8* %53, null, !dbg !5231
  br i1 %cmp37, label %if.then.39, label %if.else.40, !dbg !5232

if.then.39:                                       ; preds = %if.else
  store i32 0, i32* %retval, !dbg !5233
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5233

if.else.40:                                       ; preds = %if.else
  %54 = load i8*, i8** %buff, align 8, !dbg !5234, !tbaa !2289
  %55 = load i8*, i8** %s.addr, align 8, !dbg !5236, !tbaa !2289
  %56 = load i32, i32* %len.addr, align 4, !dbg !5237, !tbaa !3391
  %conv41 = sext i32 %56 to i64, !dbg !5237
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %54, i8* %55, i64 %conv41, i32 1, i1 false), !dbg !5238
  %57 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5239, !tbaa !2289
  %58 = load i32, i32* %len.addr, align 4, !dbg !5240, !tbaa !3391
  %59 = load i32, i32* %isFinal.addr, align 4, !dbg !5241, !tbaa !3391
  %call42 = call i32 @PyExpat_XML_ParseBuffer(%struct.XML_ParserStruct* %57, i32 %58, i32 %59), !dbg !5242
  store i32 %call42, i32* %retval, !dbg !5243
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5243

cleanup:                                          ; preds = %if.else.40, %if.then.39
  %60 = bitcast i8** %buff to i8*, !dbg !5244
  call void @llvm.lifetime.end(i64 8, i8* %60) #2, !dbg !5244
  br label %return

return:                                           ; preds = %cleanup, %if.end.34, %sw.default.33, %sw.bb.24, %if.then.11, %if.then, %sw.bb.1, %sw.bb
  %61 = load i32, i32* %retval, !dbg !5245
  ret i32 %61, !dbg !5245
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @startParsing(%struct.XML_ParserStruct* %parser) #0 {
entry:
  %retval = alloca i8, align 1
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !2005, metadata !2293), !dbg !5246
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5247, !tbaa !2289
  %m_hash_secret_salt = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 89, !dbg !5249
  %1 = load i64, i64* %m_hash_secret_salt, align 8, !dbg !5249, !tbaa !3068
  %cmp = icmp eq i64 %1, 0, !dbg !5250
  br i1 %cmp, label %if.then, label %if.end, !dbg !5251

if.then:                                          ; preds = %entry
  %call = call i64 @generate_hash_secret_salt(), !dbg !5252
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5253, !tbaa !2289
  %m_hash_secret_salt1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 89, !dbg !5254
  store i64 %call, i64* %m_hash_secret_salt1, align 8, !dbg !5255, !tbaa !3068
  br label %if.end, !dbg !5256

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5257, !tbaa !2289
  %m_ns = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 38, !dbg !5259
  %4 = load i8, i8* %m_ns, align 1, !dbg !5259, !tbaa !2545
  %tobool = icmp ne i8 %4, 0, !dbg !5260
  br i1 %tobool, label %if.then.2, label %if.end.4, !dbg !5261

if.then.2:                                        ; preds = %if.end
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5262, !tbaa !2289
  %call3 = call zeroext i8 @setContext(%struct.XML_ParserStruct* %5, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @implicitContext, i32 0, i32 0)), !dbg !5264
  store i8 %call3, i8* %retval, !dbg !5265
  br label %return, !dbg !5265

if.end.4:                                         ; preds = %if.end
  store i8 1, i8* %retval, !dbg !5266
  br label %return, !dbg !5266

return:                                           ; preds = %if.end.4, %if.then.2
  %6 = load i8, i8* %retval, !dbg !5267
  ret i8 %6, !dbg !5267
}

; Function Attrs: nounwind uwtable
define internal i32 @errorProcessor(%struct.XML_ParserStruct* %parser, i8* %s, i8* %end, i8** %nextPtr) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %s.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextPtr.addr = alloca i8**, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !2080, metadata !2293), !dbg !5268
  store i8* %s, i8** %s.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !2081, metadata !2293), !dbg !5269
  store i8* %end, i8** %end.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !2082, metadata !2293), !dbg !5270
  store i8** %nextPtr, i8*** %nextPtr.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8*** %nextPtr.addr, metadata !2083, metadata !2293), !dbg !5271
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5272, !tbaa !2289
  %m_errorCode = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 46, !dbg !5273
  %1 = load i32, i32* %m_errorCode, align 4, !dbg !5273, !tbaa !3002
  ret i32 %1, !dbg !5274
}

; Function Attrs: nounwind uwtable
define i8* @PyExpat_XML_GetBuffer(%struct.XML_ParserStruct* %parser, i32 %len) #0 {
entry:
  %retval = alloca i8*, align 8
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %len.addr = alloca i32, align 4
  %neededSize = alloca i32, align 4
  %keep = alloca i32, align 4
  %offset = alloca i32, align 4
  %newBuf = alloca i8*, align 8
  %bufferSize = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %keep80 = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !996, metadata !2293), !dbg !5275
  store i32 %len, i32* %len.addr, align 4, !tbaa !3391
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !997, metadata !2293), !dbg !5276
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5277, !tbaa !2289
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 85, !dbg !5278
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0, !dbg !5279
  %1 = load i32, i32* %parsing, align 4, !dbg !5279, !tbaa !3052
  switch i32 %1, label %sw.default [
    i32 3, label %sw.bb
    i32 2, label %sw.bb.1
  ], !dbg !5280

sw.bb:                                            ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5281, !tbaa !2289
  %m_errorCode = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 46, !dbg !5283
  store i32 33, i32* %m_errorCode, align 4, !dbg !5284, !tbaa !3002
  store i8* null, i8** %retval, !dbg !5285
  br label %return, !dbg !5285

sw.bb.1:                                          ; preds = %entry
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5286, !tbaa !2289
  %m_errorCode2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 46, !dbg !5287
  store i32 36, i32* %m_errorCode2, align 4, !dbg !5288, !tbaa !3002
  store i8* null, i8** %retval, !dbg !5289
  br label %return, !dbg !5289

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !5290

sw.epilog:                                        ; preds = %sw.default
  %4 = load i32, i32* %len.addr, align 4, !dbg !5291, !tbaa !3391
  %conv = sext i32 %4 to i64, !dbg !5291
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5292, !tbaa !2289
  %m_bufferLim = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 6, !dbg !5293
  %6 = load i8*, i8** %m_bufferLim, align 8, !dbg !5293, !tbaa !2408
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5294, !tbaa !2289
  %m_bufferEnd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 5, !dbg !5295
  %8 = load i8*, i8** %m_bufferEnd, align 8, !dbg !5295, !tbaa !2943
  %sub.ptr.lhs.cast = ptrtoint i8* %6 to i64, !dbg !5296
  %sub.ptr.rhs.cast = ptrtoint i8* %8 to i64, !dbg !5296
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5296
  %cmp = icmp sgt i64 %conv, %sub.ptr.sub, !dbg !5297
  br i1 %cmp, label %if.then, label %if.end.136, !dbg !5298

if.then:                                          ; preds = %sw.epilog
  %9 = bitcast i32* %neededSize to i8*, !dbg !5299
  call void @llvm.lifetime.start(i64 4, i8* %9) #2, !dbg !5299
  call void @llvm.dbg.declare(metadata i32* %neededSize, metadata !998, metadata !2293), !dbg !5300
  %10 = load i32, i32* %len.addr, align 4, !dbg !5301, !tbaa !3391
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5302, !tbaa !2289
  %m_bufferEnd4 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 5, !dbg !5303
  %12 = load i8*, i8** %m_bufferEnd4, align 8, !dbg !5303, !tbaa !2943
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5304, !tbaa !2289
  %m_bufferPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 4, !dbg !5305
  %14 = load i8*, i8** %m_bufferPtr, align 8, !dbg !5305, !tbaa !2937
  %sub.ptr.lhs.cast5 = ptrtoint i8* %12 to i64, !dbg !5306
  %sub.ptr.rhs.cast6 = ptrtoint i8* %14 to i64, !dbg !5306
  %sub.ptr.sub7 = sub i64 %sub.ptr.lhs.cast5, %sub.ptr.rhs.cast6, !dbg !5306
  %conv8 = trunc i64 %sub.ptr.sub7 to i32, !dbg !5307
  %add = add i32 %10, %conv8, !dbg !5308
  store i32 %add, i32* %neededSize, align 4, !dbg !5300, !tbaa !3391
  %15 = bitcast i32* %keep to i8*, !dbg !5309
  call void @llvm.lifetime.start(i64 4, i8* %15) #2, !dbg !5309
  call void @llvm.dbg.declare(metadata i32* %keep, metadata !1001, metadata !2293), !dbg !5310
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5311, !tbaa !2289
  %m_bufferPtr9 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 4, !dbg !5312
  %17 = load i8*, i8** %m_bufferPtr9, align 8, !dbg !5312, !tbaa !2937
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5313, !tbaa !2289
  %m_buffer = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 2, !dbg !5314
  %19 = load i8*, i8** %m_buffer, align 8, !dbg !5314, !tbaa !2395
  %sub.ptr.lhs.cast10 = ptrtoint i8* %17 to i64, !dbg !5315
  %sub.ptr.rhs.cast11 = ptrtoint i8* %19 to i64, !dbg !5315
  %sub.ptr.sub12 = sub i64 %sub.ptr.lhs.cast10, %sub.ptr.rhs.cast11, !dbg !5315
  %conv13 = trunc i64 %sub.ptr.sub12 to i32, !dbg !5316
  store i32 %conv13, i32* %keep, align 4, !dbg !5310, !tbaa !3391
  %20 = load i32, i32* %keep, align 4, !dbg !5317, !tbaa !3391
  %cmp14 = icmp sgt i32 %20, 1024, !dbg !5319
  br i1 %cmp14, label %if.then.16, label %if.end, !dbg !5320

if.then.16:                                       ; preds = %if.then
  store i32 1024, i32* %keep, align 4, !dbg !5321, !tbaa !3391
  br label %if.end, !dbg !5322

if.end:                                           ; preds = %if.then.16, %if.then
  %21 = load i32, i32* %keep, align 4, !dbg !5323, !tbaa !3391
  %22 = load i32, i32* %neededSize, align 4, !dbg !5324, !tbaa !3391
  %add17 = add i32 %22, %21, !dbg !5324
  store i32 %add17, i32* %neededSize, align 4, !dbg !5324, !tbaa !3391
  %23 = load i32, i32* %neededSize, align 4, !dbg !5325, !tbaa !3391
  %conv18 = sext i32 %23 to i64, !dbg !5325
  %24 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5326, !tbaa !2289
  %m_bufferLim19 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %24, i32 0, i32 6, !dbg !5327
  %25 = load i8*, i8** %m_bufferLim19, align 8, !dbg !5327, !tbaa !2408
  %26 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5328, !tbaa !2289
  %m_buffer20 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %26, i32 0, i32 2, !dbg !5329
  %27 = load i8*, i8** %m_buffer20, align 8, !dbg !5329, !tbaa !2395
  %sub.ptr.lhs.cast21 = ptrtoint i8* %25 to i64, !dbg !5330
  %sub.ptr.rhs.cast22 = ptrtoint i8* %27 to i64, !dbg !5330
  %sub.ptr.sub23 = sub i64 %sub.ptr.lhs.cast21, %sub.ptr.rhs.cast22, !dbg !5330
  %cmp24 = icmp sle i64 %conv18, %sub.ptr.sub23, !dbg !5331
  br i1 %cmp24, label %if.then.26, label %if.else, !dbg !5332

if.then.26:                                       ; preds = %if.end
  %28 = load i32, i32* %keep, align 4, !dbg !5333, !tbaa !3391
  %conv27 = sext i32 %28 to i64, !dbg !5333
  %29 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5334, !tbaa !2289
  %m_bufferPtr28 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %29, i32 0, i32 4, !dbg !5335
  %30 = load i8*, i8** %m_bufferPtr28, align 8, !dbg !5335, !tbaa !2937
  %31 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5336, !tbaa !2289
  %m_buffer29 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %31, i32 0, i32 2, !dbg !5337
  %32 = load i8*, i8** %m_buffer29, align 8, !dbg !5337, !tbaa !2395
  %sub.ptr.lhs.cast30 = ptrtoint i8* %30 to i64, !dbg !5338
  %sub.ptr.rhs.cast31 = ptrtoint i8* %32 to i64, !dbg !5338
  %sub.ptr.sub32 = sub i64 %sub.ptr.lhs.cast30, %sub.ptr.rhs.cast31, !dbg !5338
  %cmp33 = icmp slt i64 %conv27, %sub.ptr.sub32, !dbg !5339
  br i1 %cmp33, label %if.then.35, label %if.end.56, !dbg !5340

if.then.35:                                       ; preds = %if.then.26
  %33 = bitcast i32* %offset to i8*, !dbg !5341
  call void @llvm.lifetime.start(i64 4, i8* %33) #2, !dbg !5341
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !1002, metadata !2293), !dbg !5342
  %34 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5343, !tbaa !2289
  %m_bufferPtr36 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %34, i32 0, i32 4, !dbg !5344
  %35 = load i8*, i8** %m_bufferPtr36, align 8, !dbg !5344, !tbaa !2937
  %36 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5345, !tbaa !2289
  %m_buffer37 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %36, i32 0, i32 2, !dbg !5346
  %37 = load i8*, i8** %m_buffer37, align 8, !dbg !5346, !tbaa !2395
  %sub.ptr.lhs.cast38 = ptrtoint i8* %35 to i64, !dbg !5347
  %sub.ptr.rhs.cast39 = ptrtoint i8* %37 to i64, !dbg !5347
  %sub.ptr.sub40 = sub i64 %sub.ptr.lhs.cast38, %sub.ptr.rhs.cast39, !dbg !5347
  %conv41 = trunc i64 %sub.ptr.sub40 to i32, !dbg !5348
  %38 = load i32, i32* %keep, align 4, !dbg !5349, !tbaa !3391
  %sub = sub i32 %conv41, %38, !dbg !5350
  store i32 %sub, i32* %offset, align 4, !dbg !5342, !tbaa !3391
  %39 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5351, !tbaa !2289
  %m_buffer42 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %39, i32 0, i32 2, !dbg !5352
  %40 = load i8*, i8** %m_buffer42, align 8, !dbg !5352, !tbaa !2395
  %41 = load i32, i32* %offset, align 4, !dbg !5353, !tbaa !3391
  %idxprom = sext i32 %41 to i64, !dbg !5354
  %42 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5355, !tbaa !2289
  %m_buffer43 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %42, i32 0, i32 2, !dbg !5356
  %43 = load i8*, i8** %m_buffer43, align 8, !dbg !5356, !tbaa !2395
  %arrayidx = getelementptr i8, i8* %43, i64 %idxprom, !dbg !5354
  %44 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5357, !tbaa !2289
  %m_bufferEnd44 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %44, i32 0, i32 5, !dbg !5358
  %45 = load i8*, i8** %m_bufferEnd44, align 8, !dbg !5358, !tbaa !2943
  %46 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5359, !tbaa !2289
  %m_bufferPtr45 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %46, i32 0, i32 4, !dbg !5360
  %47 = load i8*, i8** %m_bufferPtr45, align 8, !dbg !5360, !tbaa !2937
  %sub.ptr.lhs.cast46 = ptrtoint i8* %45 to i64, !dbg !5361
  %sub.ptr.rhs.cast47 = ptrtoint i8* %47 to i64, !dbg !5361
  %sub.ptr.sub48 = sub i64 %sub.ptr.lhs.cast46, %sub.ptr.rhs.cast47, !dbg !5361
  %48 = load i32, i32* %keep, align 4, !dbg !5362, !tbaa !3391
  %conv49 = sext i32 %48 to i64, !dbg !5362
  %add50 = add i64 %sub.ptr.sub48, %conv49, !dbg !5363
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %40, i8* %arrayidx, i64 %add50, i32 1, i1 false), !dbg !5364
  %49 = load i32, i32* %offset, align 4, !dbg !5365, !tbaa !3391
  %50 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5366, !tbaa !2289
  %m_bufferEnd51 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %50, i32 0, i32 5, !dbg !5367
  %51 = load i8*, i8** %m_bufferEnd51, align 8, !dbg !5368, !tbaa !2943
  %idx.ext = sext i32 %49 to i64, !dbg !5368
  %idx.neg = sub i64 0, %idx.ext, !dbg !5368
  %add.ptr = getelementptr i8, i8* %51, i64 %idx.neg, !dbg !5368
  store i8* %add.ptr, i8** %m_bufferEnd51, align 8, !dbg !5368, !tbaa !2943
  %52 = load i32, i32* %offset, align 4, !dbg !5369, !tbaa !3391
  %53 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5370, !tbaa !2289
  %m_bufferPtr52 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %53, i32 0, i32 4, !dbg !5371
  %54 = load i8*, i8** %m_bufferPtr52, align 8, !dbg !5372, !tbaa !2937
  %idx.ext53 = sext i32 %52 to i64, !dbg !5372
  %idx.neg54 = sub i64 0, %idx.ext53, !dbg !5372
  %add.ptr55 = getelementptr i8, i8* %54, i64 %idx.neg54, !dbg !5372
  store i8* %add.ptr55, i8** %m_bufferPtr52, align 8, !dbg !5372, !tbaa !2937
  %55 = bitcast i32* %offset to i8*, !dbg !5373
  call void @llvm.lifetime.end(i64 4, i8* %55) #2, !dbg !5373
  br label %if.end.56, !dbg !5374

if.end.56:                                        ; preds = %if.then.35, %if.then.26
  br label %if.end.131, !dbg !5375

if.else:                                          ; preds = %if.end
  %56 = bitcast i8** %newBuf to i8*, !dbg !5376
  call void @llvm.lifetime.start(i64 8, i8* %56) #2, !dbg !5376
  call void @llvm.dbg.declare(metadata i8** %newBuf, metadata !1007, metadata !2293), !dbg !5377
  %57 = bitcast i32* %bufferSize to i8*, !dbg !5378
  call void @llvm.lifetime.start(i64 4, i8* %57) #2, !dbg !5378
  call void @llvm.dbg.declare(metadata i32* %bufferSize, metadata !1009, metadata !2293), !dbg !5379
  %58 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5380, !tbaa !2289
  %m_bufferLim57 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %58, i32 0, i32 6, !dbg !5381
  %59 = load i8*, i8** %m_bufferLim57, align 8, !dbg !5381, !tbaa !2408
  %60 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5382, !tbaa !2289
  %m_bufferPtr58 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %60, i32 0, i32 4, !dbg !5383
  %61 = load i8*, i8** %m_bufferPtr58, align 8, !dbg !5383, !tbaa !2937
  %sub.ptr.lhs.cast59 = ptrtoint i8* %59 to i64, !dbg !5384
  %sub.ptr.rhs.cast60 = ptrtoint i8* %61 to i64, !dbg !5384
  %sub.ptr.sub61 = sub i64 %sub.ptr.lhs.cast59, %sub.ptr.rhs.cast60, !dbg !5384
  %conv62 = trunc i64 %sub.ptr.sub61 to i32, !dbg !5385
  store i32 %conv62, i32* %bufferSize, align 4, !dbg !5379, !tbaa !3391
  %62 = load i32, i32* %bufferSize, align 4, !dbg !5386, !tbaa !3391
  %cmp63 = icmp eq i32 %62, 0, !dbg !5388
  br i1 %cmp63, label %if.then.65, label %if.end.66, !dbg !5389

if.then.65:                                       ; preds = %if.else
  store i32 1024, i32* %bufferSize, align 4, !dbg !5390, !tbaa !3391
  br label %if.end.66, !dbg !5391

if.end.66:                                        ; preds = %if.then.65, %if.else
  br label %do.body, !dbg !5392

do.body:                                          ; preds = %do.cond, %if.end.66
  %63 = load i32, i32* %bufferSize, align 4, !dbg !5393, !tbaa !3391
  %mul = mul i32 %63, 2, !dbg !5393
  store i32 %mul, i32* %bufferSize, align 4, !dbg !5393, !tbaa !3391
  br label %do.cond, !dbg !5395

do.cond:                                          ; preds = %do.body
  %64 = load i32, i32* %bufferSize, align 4, !dbg !5396, !tbaa !3391
  %65 = load i32, i32* %neededSize, align 4, !dbg !5398, !tbaa !3391
  %cmp67 = icmp slt i32 %64, %65, !dbg !5399
  br i1 %cmp67, label %do.body, label %do.end, !dbg !5395

do.end:                                           ; preds = %do.cond
  %66 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5400, !tbaa !2289
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %66, i32 0, i32 3, !dbg !5401
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 0, !dbg !5402
  %67 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8, !dbg !5402, !tbaa !2416
  %68 = load i32, i32* %bufferSize, align 4, !dbg !5403, !tbaa !3391
  %conv69 = sext i32 %68 to i64, !dbg !5404
  %call = call i8* %67(i64 %conv69), !dbg !5400
  store i8* %call, i8** %newBuf, align 8, !dbg !5405, !tbaa !2289
  %69 = load i8*, i8** %newBuf, align 8, !dbg !5406, !tbaa !2289
  %cmp70 = icmp eq i8* %69, null, !dbg !5408
  br i1 %cmp70, label %if.then.72, label %if.end.74, !dbg !5409

if.then.72:                                       ; preds = %do.end
  %70 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5410, !tbaa !2289
  %m_errorCode73 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %70, i32 0, i32 46, !dbg !5412
  store i32 1, i32* %m_errorCode73, align 4, !dbg !5413, !tbaa !3002
  store i8* null, i8** %retval, !dbg !5414
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5414

if.end.74:                                        ; preds = %do.end
  %71 = load i8*, i8** %newBuf, align 8, !dbg !5415, !tbaa !2289
  %72 = load i32, i32* %bufferSize, align 4, !dbg !5416, !tbaa !3391
  %idx.ext75 = sext i32 %72 to i64, !dbg !5417
  %add.ptr76 = getelementptr i8, i8* %71, i64 %idx.ext75, !dbg !5417
  %73 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5418, !tbaa !2289
  %m_bufferLim77 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %73, i32 0, i32 6, !dbg !5419
  store i8* %add.ptr76, i8** %m_bufferLim77, align 8, !dbg !5420, !tbaa !2408
  %74 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5421, !tbaa !2289
  %m_bufferPtr78 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %74, i32 0, i32 4, !dbg !5422
  %75 = load i8*, i8** %m_bufferPtr78, align 8, !dbg !5422, !tbaa !2937
  %tobool = icmp ne i8* %75, null, !dbg !5423
  br i1 %tobool, label %if.then.79, label %if.else.119, !dbg !5424

if.then.79:                                       ; preds = %if.end.74
  %76 = bitcast i32* %keep80 to i8*, !dbg !5425
  call void @llvm.lifetime.start(i64 4, i8* %76) #2, !dbg !5425
  call void @llvm.dbg.declare(metadata i32* %keep80, metadata !1010, metadata !2293), !dbg !5426
  %77 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5427, !tbaa !2289
  %m_bufferPtr81 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %77, i32 0, i32 4, !dbg !5428
  %78 = load i8*, i8** %m_bufferPtr81, align 8, !dbg !5428, !tbaa !2937
  %79 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5429, !tbaa !2289
  %m_buffer82 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %79, i32 0, i32 2, !dbg !5430
  %80 = load i8*, i8** %m_buffer82, align 8, !dbg !5430, !tbaa !2395
  %sub.ptr.lhs.cast83 = ptrtoint i8* %78 to i64, !dbg !5431
  %sub.ptr.rhs.cast84 = ptrtoint i8* %80 to i64, !dbg !5431
  %sub.ptr.sub85 = sub i64 %sub.ptr.lhs.cast83, %sub.ptr.rhs.cast84, !dbg !5431
  %conv86 = trunc i64 %sub.ptr.sub85 to i32, !dbg !5432
  store i32 %conv86, i32* %keep80, align 4, !dbg !5426, !tbaa !3391
  %81 = load i32, i32* %keep80, align 4, !dbg !5433, !tbaa !3391
  %cmp87 = icmp sgt i32 %81, 1024, !dbg !5435
  br i1 %cmp87, label %if.then.89, label %if.end.90, !dbg !5436

if.then.89:                                       ; preds = %if.then.79
  store i32 1024, i32* %keep80, align 4, !dbg !5437, !tbaa !3391
  br label %if.end.90, !dbg !5438

if.end.90:                                        ; preds = %if.then.89, %if.then.79
  %82 = load i8*, i8** %newBuf, align 8, !dbg !5439, !tbaa !2289
  %83 = load i32, i32* %keep80, align 4, !dbg !5440, !tbaa !3391
  %sub91 = sub i32 0, %83, !dbg !5441
  %idxprom92 = sext i32 %sub91 to i64, !dbg !5442
  %84 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5443, !tbaa !2289
  %m_bufferPtr93 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %84, i32 0, i32 4, !dbg !5444
  %85 = load i8*, i8** %m_bufferPtr93, align 8, !dbg !5444, !tbaa !2937
  %arrayidx94 = getelementptr i8, i8* %85, i64 %idxprom92, !dbg !5442
  %86 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5445, !tbaa !2289
  %m_bufferEnd95 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %86, i32 0, i32 5, !dbg !5446
  %87 = load i8*, i8** %m_bufferEnd95, align 8, !dbg !5446, !tbaa !2943
  %88 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5447, !tbaa !2289
  %m_bufferPtr96 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %88, i32 0, i32 4, !dbg !5448
  %89 = load i8*, i8** %m_bufferPtr96, align 8, !dbg !5448, !tbaa !2937
  %sub.ptr.lhs.cast97 = ptrtoint i8* %87 to i64, !dbg !5449
  %sub.ptr.rhs.cast98 = ptrtoint i8* %89 to i64, !dbg !5449
  %sub.ptr.sub99 = sub i64 %sub.ptr.lhs.cast97, %sub.ptr.rhs.cast98, !dbg !5449
  %90 = load i32, i32* %keep80, align 4, !dbg !5450, !tbaa !3391
  %conv100 = sext i32 %90 to i64, !dbg !5450
  %add101 = add i64 %sub.ptr.sub99, %conv100, !dbg !5451
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %82, i8* %arrayidx94, i64 %add101, i32 1, i1 false), !dbg !5452
  %91 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5453, !tbaa !2289
  %m_mem102 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %91, i32 0, i32 3, !dbg !5454
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem102, i32 0, i32 2, !dbg !5455
  %92 = load void (i8*)*, void (i8*)** %free_fcn, align 8, !dbg !5455, !tbaa !2435
  %93 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5456, !tbaa !2289
  %m_buffer103 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %93, i32 0, i32 2, !dbg !5457
  %94 = load i8*, i8** %m_buffer103, align 8, !dbg !5457, !tbaa !2395
  call void %92(i8* %94), !dbg !5453
  %95 = load i8*, i8** %newBuf, align 8, !dbg !5458, !tbaa !2289
  %96 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5459, !tbaa !2289
  %m_buffer104 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %96, i32 0, i32 2, !dbg !5460
  store i8* %95, i8** %m_buffer104, align 8, !dbg !5461, !tbaa !2395
  %97 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5462, !tbaa !2289
  %m_buffer105 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %97, i32 0, i32 2, !dbg !5463
  %98 = load i8*, i8** %m_buffer105, align 8, !dbg !5463, !tbaa !2395
  %99 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5464, !tbaa !2289
  %m_bufferEnd106 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %99, i32 0, i32 5, !dbg !5465
  %100 = load i8*, i8** %m_bufferEnd106, align 8, !dbg !5465, !tbaa !2943
  %101 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5466, !tbaa !2289
  %m_bufferPtr107 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %101, i32 0, i32 4, !dbg !5467
  %102 = load i8*, i8** %m_bufferPtr107, align 8, !dbg !5467, !tbaa !2937
  %sub.ptr.lhs.cast108 = ptrtoint i8* %100 to i64, !dbg !5468
  %sub.ptr.rhs.cast109 = ptrtoint i8* %102 to i64, !dbg !5468
  %sub.ptr.sub110 = sub i64 %sub.ptr.lhs.cast108, %sub.ptr.rhs.cast109, !dbg !5468
  %add.ptr111 = getelementptr i8, i8* %98, i64 %sub.ptr.sub110, !dbg !5469
  %103 = load i32, i32* %keep80, align 4, !dbg !5470, !tbaa !3391
  %idx.ext112 = sext i32 %103 to i64, !dbg !5471
  %add.ptr113 = getelementptr i8, i8* %add.ptr111, i64 %idx.ext112, !dbg !5471
  %104 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5472, !tbaa !2289
  %m_bufferEnd114 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %104, i32 0, i32 5, !dbg !5473
  store i8* %add.ptr113, i8** %m_bufferEnd114, align 8, !dbg !5474, !tbaa !2943
  %105 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5475, !tbaa !2289
  %m_buffer115 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %105, i32 0, i32 2, !dbg !5476
  %106 = load i8*, i8** %m_buffer115, align 8, !dbg !5476, !tbaa !2395
  %107 = load i32, i32* %keep80, align 4, !dbg !5477, !tbaa !3391
  %idx.ext116 = sext i32 %107 to i64, !dbg !5478
  %add.ptr117 = getelementptr i8, i8* %106, i64 %idx.ext116, !dbg !5478
  %108 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5479, !tbaa !2289
  %m_bufferPtr118 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %108, i32 0, i32 4, !dbg !5480
  store i8* %add.ptr117, i8** %m_bufferPtr118, align 8, !dbg !5481, !tbaa !2937
  %109 = bitcast i32* %keep80 to i8*, !dbg !5482
  call void @llvm.lifetime.end(i64 4, i8* %109) #2, !dbg !5482
  br label %if.end.129, !dbg !5483

if.else.119:                                      ; preds = %if.end.74
  %110 = load i8*, i8** %newBuf, align 8, !dbg !5484, !tbaa !2289
  %111 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5486, !tbaa !2289
  %m_bufferEnd120 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %111, i32 0, i32 5, !dbg !5487
  %112 = load i8*, i8** %m_bufferEnd120, align 8, !dbg !5487, !tbaa !2943
  %113 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5488, !tbaa !2289
  %m_bufferPtr121 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %113, i32 0, i32 4, !dbg !5489
  %114 = load i8*, i8** %m_bufferPtr121, align 8, !dbg !5489, !tbaa !2937
  %sub.ptr.lhs.cast122 = ptrtoint i8* %112 to i64, !dbg !5490
  %sub.ptr.rhs.cast123 = ptrtoint i8* %114 to i64, !dbg !5490
  %sub.ptr.sub124 = sub i64 %sub.ptr.lhs.cast122, %sub.ptr.rhs.cast123, !dbg !5490
  %add.ptr125 = getelementptr i8, i8* %110, i64 %sub.ptr.sub124, !dbg !5491
  %115 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5492, !tbaa !2289
  %m_bufferEnd126 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %115, i32 0, i32 5, !dbg !5493
  store i8* %add.ptr125, i8** %m_bufferEnd126, align 8, !dbg !5494, !tbaa !2943
  %116 = load i8*, i8** %newBuf, align 8, !dbg !5495, !tbaa !2289
  %117 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5496, !tbaa !2289
  %m_buffer127 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %117, i32 0, i32 2, !dbg !5497
  store i8* %116, i8** %m_buffer127, align 8, !dbg !5498, !tbaa !2395
  %118 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5499, !tbaa !2289
  %m_bufferPtr128 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %118, i32 0, i32 4, !dbg !5500
  store i8* %116, i8** %m_bufferPtr128, align 8, !dbg !5501, !tbaa !2937
  br label %if.end.129

if.end.129:                                       ; preds = %if.else.119, %if.end.90
  store i32 0, i32* %cleanup.dest.slot, !dbg !5502
  br label %cleanup, !dbg !5502

cleanup:                                          ; preds = %if.end.129, %if.then.72
  %119 = bitcast i32* %bufferSize to i8*, !dbg !5503
  call void @llvm.lifetime.end(i64 4, i8* %119) #2, !dbg !5503
  %120 = bitcast i8** %newBuf to i8*, !dbg !5503
  call void @llvm.lifetime.end(i64 8, i8* %120) #2, !dbg !5503
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.132 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.131

if.end.131:                                       ; preds = %cleanup.cont, %if.end.56
  %121 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5505, !tbaa !2289
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %121, i32 0, i32 48, !dbg !5506
  store i8* null, i8** %m_eventEndPtr, align 8, !dbg !5507, !tbaa !3010
  %122 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5508, !tbaa !2289
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %122, i32 0, i32 47, !dbg !5509
  store i8* null, i8** %m_eventPtr, align 8, !dbg !5510, !tbaa !3006
  %123 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5511, !tbaa !2289
  %m_positionPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %123, i32 0, i32 49, !dbg !5512
  store i8* null, i8** %m_positionPtr, align 8, !dbg !5513, !tbaa !3014
  store i32 0, i32* %cleanup.dest.slot, !dbg !5514
  br label %cleanup.132, !dbg !5514

cleanup.132:                                      ; preds = %if.end.131, %cleanup
  %124 = bitcast i32* %keep to i8*, !dbg !5515
  call void @llvm.lifetime.end(i64 4, i8* %124) #2, !dbg !5515
  %125 = bitcast i32* %neededSize to i8*, !dbg !5515
  call void @llvm.lifetime.end(i64 4, i8* %125) #2, !dbg !5515
  %cleanup.dest.134 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.134, label %unreachable [
    i32 0, label %cleanup.cont.135
    i32 1, label %return
  ]

cleanup.cont.135:                                 ; preds = %cleanup.132
  br label %if.end.136, !dbg !5517

if.end.136:                                       ; preds = %cleanup.cont.135, %sw.epilog
  %126 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5518, !tbaa !2289
  %m_bufferEnd137 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %126, i32 0, i32 5, !dbg !5519
  %127 = load i8*, i8** %m_bufferEnd137, align 8, !dbg !5519, !tbaa !2943
  store i8* %127, i8** %retval, !dbg !5520
  br label %return, !dbg !5520

return:                                           ; preds = %if.end.136, %cleanup.132, %sw.bb.1, %sw.bb
  %128 = load i8*, i8** %retval, !dbg !5521
  ret i8* %128, !dbg !5521

unreachable:                                      ; preds = %cleanup.132
  unreachable
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: nounwind uwtable
define i32 @PyExpat_XML_ParseBuffer(%struct.XML_ParserStruct* %parser, i32 %len, i32 %isFinal) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %len.addr = alloca i32, align 4
  %isFinal.addr = alloca i32, align 4
  %start = alloca i8*, align 8
  %result = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !987, metadata !2293), !dbg !5522
  store i32 %len, i32* %len.addr, align 4, !tbaa !3391
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !988, metadata !2293), !dbg !5523
  store i32 %isFinal, i32* %isFinal.addr, align 4, !tbaa !3391
  call void @llvm.dbg.declare(metadata i32* %isFinal.addr, metadata !989, metadata !2293), !dbg !5524
  %0 = bitcast i8** %start to i8*, !dbg !5525
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !5525
  call void @llvm.dbg.declare(metadata i8** %start, metadata !990, metadata !2293), !dbg !5526
  %1 = bitcast i32* %result to i8*, !dbg !5527
  call void @llvm.lifetime.start(i64 4, i8* %1) #2, !dbg !5527
  call void @llvm.dbg.declare(metadata i32* %result, metadata !991, metadata !2293), !dbg !5528
  store i32 1, i32* %result, align 4, !dbg !5528, !tbaa !2307
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5529, !tbaa !2289
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 85, !dbg !5530
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0, !dbg !5531
  %3 = load i32, i32* %parsing, align 4, !dbg !5531, !tbaa !3052
  switch i32 %3, label %sw.default [
    i32 3, label %sw.bb
    i32 2, label %sw.bb.1
    i32 0, label %sw.bb.3
  ], !dbg !5532

sw.bb:                                            ; preds = %entry
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5533, !tbaa !2289
  %m_errorCode = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 46, !dbg !5535
  store i32 33, i32* %m_errorCode, align 4, !dbg !5536, !tbaa !3002
  store i32 0, i32* %retval, !dbg !5537
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5537

sw.bb.1:                                          ; preds = %entry
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5538, !tbaa !2289
  %m_errorCode2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 46, !dbg !5539
  store i32 36, i32* %m_errorCode2, align 4, !dbg !5540, !tbaa !3002
  store i32 0, i32* %retval, !dbg !5541
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5541

sw.bb.3:                                          ; preds = %entry
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5542, !tbaa !2289
  %m_parentParser = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 84, !dbg !5544
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %m_parentParser, align 8, !dbg !5544, !tbaa !2623
  %cmp = icmp eq %struct.XML_ParserStruct* %7, null, !dbg !5545
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5546

land.lhs.true:                                    ; preds = %sw.bb.3
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5547, !tbaa !2289
  %call = call zeroext i8 @startParsing(%struct.XML_ParserStruct* %8), !dbg !5549
  %tobool = icmp ne i8 %call, 0, !dbg !5549
  br i1 %tobool, label %if.end, label %if.then, !dbg !5550

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5551, !tbaa !2289
  %m_errorCode4 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 46, !dbg !5553
  store i32 1, i32* %m_errorCode4, align 4, !dbg !5554, !tbaa !3002
  store i32 0, i32* %retval, !dbg !5555
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5555

if.end:                                           ; preds = %land.lhs.true, %sw.bb.3
  br label %sw.default, !dbg !5556

sw.default:                                       ; preds = %entry, %if.end
  %10 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5559, !tbaa !2289
  %m_parsingStatus5 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %10, i32 0, i32 85, !dbg !5560
  %parsing6 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus5, i32 0, i32 0, !dbg !5561
  store i32 1, i32* %parsing6, align 4, !dbg !5562, !tbaa !3052
  br label %sw.epilog, !dbg !5563

sw.epilog:                                        ; preds = %sw.default
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5564, !tbaa !2289
  %m_bufferPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 4, !dbg !5565
  %12 = load i8*, i8** %m_bufferPtr, align 8, !dbg !5565, !tbaa !2937
  store i8* %12, i8** %start, align 8, !dbg !5566, !tbaa !2289
  %13 = load i8*, i8** %start, align 8, !dbg !5567, !tbaa !2289
  %14 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5568, !tbaa !2289
  %m_positionPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %14, i32 0, i32 49, !dbg !5569
  store i8* %13, i8** %m_positionPtr, align 8, !dbg !5570, !tbaa !3014
  %15 = load i32, i32* %len.addr, align 4, !dbg !5571, !tbaa !3391
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5572, !tbaa !2289
  %m_bufferEnd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 5, !dbg !5573
  %17 = load i8*, i8** %m_bufferEnd, align 8, !dbg !5574, !tbaa !2943
  %idx.ext = sext i32 %15 to i64, !dbg !5574
  %add.ptr = getelementptr i8, i8* %17, i64 %idx.ext, !dbg !5574
  store i8* %add.ptr, i8** %m_bufferEnd, align 8, !dbg !5574, !tbaa !2943
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5575, !tbaa !2289
  %m_bufferEnd7 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 5, !dbg !5576
  %19 = load i8*, i8** %m_bufferEnd7, align 8, !dbg !5576, !tbaa !2943
  %20 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5577, !tbaa !2289
  %m_parseEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %20, i32 0, i32 8, !dbg !5578
  store i8* %19, i8** %m_parseEndPtr, align 8, !dbg !5579, !tbaa !2951
  %21 = load i32, i32* %len.addr, align 4, !dbg !5580, !tbaa !3391
  %conv = sext i32 %21 to i64, !dbg !5580
  %22 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5581, !tbaa !2289
  %m_parseEndByteIndex = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %22, i32 0, i32 7, !dbg !5582
  %23 = load i64, i64* %m_parseEndByteIndex, align 8, !dbg !5583, !tbaa !2947
  %add = add i64 %23, %conv, !dbg !5583
  store i64 %add, i64* %m_parseEndByteIndex, align 8, !dbg !5583, !tbaa !2947
  %24 = load i32, i32* %isFinal.addr, align 4, !dbg !5584, !tbaa !3391
  %conv8 = trunc i32 %24 to i8, !dbg !5585
  %25 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5586, !tbaa !2289
  %m_parsingStatus9 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %25, i32 0, i32 85, !dbg !5587
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus9, i32 0, i32 1, !dbg !5588
  store i8 %conv8, i8* %finalBuffer, align 1, !dbg !5589, !tbaa !5150
  %26 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5590, !tbaa !2289
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %26, i32 0, i32 45, !dbg !5591
  %27 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8, !dbg !5591, !tbaa !2809
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5592, !tbaa !2289
  %29 = load i8*, i8** %start, align 8, !dbg !5593, !tbaa !2289
  %30 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5594, !tbaa !2289
  %m_parseEndPtr10 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %30, i32 0, i32 8, !dbg !5595
  %31 = load i8*, i8** %m_parseEndPtr10, align 8, !dbg !5595, !tbaa !2951
  %32 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5596, !tbaa !2289
  %m_bufferPtr11 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %32, i32 0, i32 4, !dbg !5597
  %call12 = call i32 %27(%struct.XML_ParserStruct* %28, i8* %29, i8* %31, i8** %m_bufferPtr11), !dbg !5598
  %33 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5599, !tbaa !2289
  %m_errorCode13 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %33, i32 0, i32 46, !dbg !5600
  store i32 %call12, i32* %m_errorCode13, align 4, !dbg !5601, !tbaa !3002
  %34 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5602, !tbaa !2289
  %m_errorCode14 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %34, i32 0, i32 46, !dbg !5604
  %35 = load i32, i32* %m_errorCode14, align 4, !dbg !5604, !tbaa !3002
  %cmp15 = icmp ne i32 %35, 0, !dbg !5605
  br i1 %cmp15, label %if.then.17, label %if.else, !dbg !5606

if.then.17:                                       ; preds = %sw.epilog
  %36 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5607, !tbaa !2289
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %36, i32 0, i32 47, !dbg !5609
  %37 = load i8*, i8** %m_eventPtr, align 8, !dbg !5609, !tbaa !3006
  %38 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5610, !tbaa !2289
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %38, i32 0, i32 48, !dbg !5611
  store i8* %37, i8** %m_eventEndPtr, align 8, !dbg !5612, !tbaa !3010
  %39 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5613, !tbaa !2289
  %m_processor18 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %39, i32 0, i32 45, !dbg !5614
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @errorProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor18, align 8, !dbg !5615, !tbaa !2809
  store i32 0, i32* %retval, !dbg !5616
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5616

if.else:                                          ; preds = %sw.epilog
  %40 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5617, !tbaa !2289
  %m_parsingStatus19 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %40, i32 0, i32 85, !dbg !5619
  %parsing20 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus19, i32 0, i32 0, !dbg !5620
  %41 = load i32, i32* %parsing20, align 4, !dbg !5620, !tbaa !3052
  switch i32 %41, label %sw.default.28 [
    i32 3, label %sw.bb.21
    i32 0, label %sw.bb.22
    i32 1, label %sw.bb.22
  ], !dbg !5621

sw.bb.21:                                         ; preds = %if.else
  store i32 2, i32* %result, align 4, !dbg !5622, !tbaa !2307
  br label %sw.epilog.29, !dbg !5624

sw.bb.22:                                         ; preds = %if.else, %if.else
  %42 = load i32, i32* %isFinal.addr, align 4, !dbg !5625, !tbaa !3391
  %tobool23 = icmp ne i32 %42, 0, !dbg !5625
  br i1 %tobool23, label %if.then.24, label %if.end.27, !dbg !5627

if.then.24:                                       ; preds = %sw.bb.22
  %43 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5628, !tbaa !2289
  %m_parsingStatus25 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %43, i32 0, i32 85, !dbg !5630
  %parsing26 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus25, i32 0, i32 0, !dbg !5631
  store i32 2, i32* %parsing26, align 4, !dbg !5632, !tbaa !3052
  %44 = load i32, i32* %result, align 4, !dbg !5633, !tbaa !2307
  store i32 %44, i32* %retval, !dbg !5634
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5634

if.end.27:                                        ; preds = %sw.bb.22
  br label %sw.default.28, !dbg !5635

sw.default.28:                                    ; preds = %if.else, %if.end.27
  br label %sw.epilog.29, !dbg !5637

sw.epilog.29:                                     ; preds = %sw.default.28, %sw.bb.21
  br label %if.end.30

if.end.30:                                        ; preds = %sw.epilog.29
  %45 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5638, !tbaa !2289
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %45, i32 0, i32 34, !dbg !5639
  %46 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !5639, !tbaa !5191
  %updatePosition = getelementptr inbounds %struct.encoding, %struct.encoding* %46, i32 0, i32 9, !dbg !5640
  %47 = load void (%struct.encoding*, i8*, i8*, %struct.position*)*, void (%struct.encoding*, i8*, i8*, %struct.position*)** %updatePosition, align 8, !dbg !5640, !tbaa !5193
  %48 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5641, !tbaa !2289
  %m_encoding31 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %48, i32 0, i32 34, !dbg !5642
  %49 = load %struct.encoding*, %struct.encoding** %m_encoding31, align 8, !dbg !5642, !tbaa !5191
  %50 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5643, !tbaa !2289
  %m_positionPtr32 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %50, i32 0, i32 49, !dbg !5644
  %51 = load i8*, i8** %m_positionPtr32, align 8, !dbg !5644, !tbaa !3014
  %52 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5645, !tbaa !2289
  %m_bufferPtr33 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %52, i32 0, i32 4, !dbg !5646
  %53 = load i8*, i8** %m_bufferPtr33, align 8, !dbg !5646, !tbaa !2937
  %54 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5647, !tbaa !2289
  %m_position = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %54, i32 0, i32 78, !dbg !5648
  call void %47(%struct.encoding* %49, i8* %51, i8* %53, %struct.position* %m_position), !dbg !5649
  %55 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5650, !tbaa !2289
  %m_bufferPtr34 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %55, i32 0, i32 4, !dbg !5651
  %56 = load i8*, i8** %m_bufferPtr34, align 8, !dbg !5651, !tbaa !2937
  %57 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5652, !tbaa !2289
  %m_positionPtr35 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %57, i32 0, i32 49, !dbg !5653
  store i8* %56, i8** %m_positionPtr35, align 8, !dbg !5654, !tbaa !3014
  %58 = load i32, i32* %result, align 4, !dbg !5655, !tbaa !2307
  store i32 %58, i32* %retval, !dbg !5656
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5656

cleanup:                                          ; preds = %if.end.30, %if.then.24, %if.then.17, %if.then, %sw.bb.1, %sw.bb
  %59 = bitcast i32* %result to i8*, !dbg !5657
  call void @llvm.lifetime.end(i64 4, i8* %59) #2, !dbg !5657
  %60 = bitcast i8** %start to i8*, !dbg !5657
  call void @llvm.lifetime.end(i64 8, i8* %60) #2, !dbg !5657
  %61 = load i32, i32* %retval, !dbg !5657
  ret i32 %61, !dbg !5657
}

; Function Attrs: nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: nounwind uwtable
define i32 @PyExpat_XML_StopParser(%struct.XML_ParserStruct* %parser, i8 zeroext %resumable) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %resumable.addr = alloca i8, align 1
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1017, metadata !2293), !dbg !5658
  store i8 %resumable, i8* %resumable.addr, align 1, !tbaa !2307
  call void @llvm.dbg.declare(metadata i8* %resumable.addr, metadata !1018, metadata !2293), !dbg !5659
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5660, !tbaa !2289
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 85, !dbg !5661
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0, !dbg !5662
  %1 = load i32, i32* %parsing, align 4, !dbg !5662, !tbaa !3052
  switch i32 %1, label %sw.default [
    i32 3, label %sw.bb
    i32 2, label %sw.bb.3
  ], !dbg !5663

sw.bb:                                            ; preds = %entry
  %2 = load i8, i8* %resumable.addr, align 1, !dbg !5664, !tbaa !2307
  %tobool = icmp ne i8 %2, 0, !dbg !5664
  br i1 %tobool, label %if.then, label %if.end, !dbg !5667

if.then:                                          ; preds = %sw.bb
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5668, !tbaa !2289
  %m_errorCode = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 46, !dbg !5670
  store i32 33, i32* %m_errorCode, align 4, !dbg !5671, !tbaa !3002
  store i32 0, i32* %retval, !dbg !5672
  br label %return, !dbg !5672

if.end:                                           ; preds = %sw.bb
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5673, !tbaa !2289
  %m_parsingStatus1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 85, !dbg !5674
  %parsing2 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus1, i32 0, i32 0, !dbg !5675
  store i32 2, i32* %parsing2, align 4, !dbg !5676, !tbaa !3052
  br label %sw.epilog, !dbg !5677

sw.bb.3:                                          ; preds = %entry
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5678, !tbaa !2289
  %m_errorCode4 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 46, !dbg !5679
  store i32 36, i32* %m_errorCode4, align 4, !dbg !5680, !tbaa !3002
  store i32 0, i32* %retval, !dbg !5681
  br label %return, !dbg !5681

sw.default:                                       ; preds = %entry
  %6 = load i8, i8* %resumable.addr, align 1, !dbg !5682, !tbaa !2307
  %tobool5 = icmp ne i8 %6, 0, !dbg !5682
  br i1 %tobool5, label %if.then.6, label %if.else, !dbg !5684

if.then.6:                                        ; preds = %sw.default
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5685, !tbaa !2289
  %m_isParamEntity = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 86, !dbg !5688
  %8 = load i8, i8* %m_isParamEntity, align 1, !dbg !5688, !tbaa !3056
  %tobool7 = icmp ne i8 %8, 0, !dbg !5689
  br i1 %tobool7, label %if.then.8, label %if.end.10, !dbg !5690

if.then.8:                                        ; preds = %if.then.6
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5691, !tbaa !2289
  %m_errorCode9 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 46, !dbg !5693
  store i32 37, i32* %m_errorCode9, align 4, !dbg !5694, !tbaa !3002
  store i32 0, i32* %retval, !dbg !5695
  br label %return, !dbg !5695

if.end.10:                                        ; preds = %if.then.6
  %10 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5696, !tbaa !2289
  %m_parsingStatus11 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %10, i32 0, i32 85, !dbg !5697
  %parsing12 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus11, i32 0, i32 0, !dbg !5698
  store i32 3, i32* %parsing12, align 4, !dbg !5699, !tbaa !3052
  br label %if.end.15, !dbg !5700

if.else:                                          ; preds = %sw.default
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5701, !tbaa !2289
  %m_parsingStatus13 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 85, !dbg !5702
  %parsing14 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus13, i32 0, i32 0, !dbg !5703
  store i32 2, i32* %parsing14, align 4, !dbg !5704, !tbaa !3052
  br label %if.end.15

if.end.15:                                        ; preds = %if.else, %if.end.10
  br label %sw.epilog, !dbg !5705

sw.epilog:                                        ; preds = %if.end.15, %if.end
  store i32 1, i32* %retval, !dbg !5706
  br label %return, !dbg !5706

return:                                           ; preds = %sw.epilog, %if.then.8, %sw.bb.3, %if.then
  %12 = load i32, i32* %retval, !dbg !5707
  ret i32 %12, !dbg !5707
}

; Function Attrs: nounwind uwtable
define i32 @PyExpat_XML_ResumeParser(%struct.XML_ParserStruct* %parser) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %result = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1023, metadata !2293), !dbg !5708
  %0 = bitcast i32* %result to i8*, !dbg !5709
  call void @llvm.lifetime.start(i64 4, i8* %0) #2, !dbg !5709
  call void @llvm.dbg.declare(metadata i32* %result, metadata !1024, metadata !2293), !dbg !5710
  store i32 1, i32* %result, align 4, !dbg !5710, !tbaa !2307
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5711, !tbaa !2289
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 85, !dbg !5713
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0, !dbg !5714
  %2 = load i32, i32* %parsing, align 4, !dbg !5714, !tbaa !3052
  %cmp = icmp ne i32 %2, 3, !dbg !5715
  br i1 %cmp, label %if.then, label %if.end, !dbg !5716

if.then:                                          ; preds = %entry
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5717, !tbaa !2289
  %m_errorCode = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 46, !dbg !5719
  store i32 34, i32* %m_errorCode, align 4, !dbg !5720, !tbaa !3002
  store i32 0, i32* %retval, !dbg !5721
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5721

if.end:                                           ; preds = %entry
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5722, !tbaa !2289
  %m_parsingStatus1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 85, !dbg !5723
  %parsing2 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus1, i32 0, i32 0, !dbg !5724
  store i32 1, i32* %parsing2, align 4, !dbg !5725, !tbaa !3052
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5726, !tbaa !2289
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 45, !dbg !5727
  %6 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8, !dbg !5727, !tbaa !2809
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5728, !tbaa !2289
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5729, !tbaa !2289
  %m_bufferPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 4, !dbg !5730
  %9 = load i8*, i8** %m_bufferPtr, align 8, !dbg !5730, !tbaa !2937
  %10 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5731, !tbaa !2289
  %m_parseEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %10, i32 0, i32 8, !dbg !5732
  %11 = load i8*, i8** %m_parseEndPtr, align 8, !dbg !5732, !tbaa !2951
  %12 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5733, !tbaa !2289
  %m_bufferPtr3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %12, i32 0, i32 4, !dbg !5734
  %call = call i32 %6(%struct.XML_ParserStruct* %7, i8* %9, i8* %11, i8** %m_bufferPtr3), !dbg !5735
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5736, !tbaa !2289
  %m_errorCode4 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 46, !dbg !5737
  store i32 %call, i32* %m_errorCode4, align 4, !dbg !5738, !tbaa !3002
  %14 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5739, !tbaa !2289
  %m_errorCode5 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %14, i32 0, i32 46, !dbg !5741
  %15 = load i32, i32* %m_errorCode5, align 4, !dbg !5741, !tbaa !3002
  %cmp6 = icmp ne i32 %15, 0, !dbg !5742
  br i1 %cmp6, label %if.then.7, label %if.else, !dbg !5743

if.then.7:                                        ; preds = %if.end
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5744, !tbaa !2289
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 47, !dbg !5746
  %17 = load i8*, i8** %m_eventPtr, align 8, !dbg !5746, !tbaa !3006
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5747, !tbaa !2289
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 48, !dbg !5748
  store i8* %17, i8** %m_eventEndPtr, align 8, !dbg !5749, !tbaa !3010
  %19 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5750, !tbaa !2289
  %m_processor8 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %19, i32 0, i32 45, !dbg !5751
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @errorProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor8, align 8, !dbg !5752, !tbaa !2809
  store i32 0, i32* %retval, !dbg !5753
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5753

if.else:                                          ; preds = %if.end
  %20 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5754, !tbaa !2289
  %m_parsingStatus9 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %20, i32 0, i32 85, !dbg !5756
  %parsing10 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus9, i32 0, i32 0, !dbg !5757
  %21 = load i32, i32* %parsing10, align 4, !dbg !5757, !tbaa !3052
  switch i32 %21, label %sw.default [
    i32 3, label %sw.bb
    i32 0, label %sw.bb.11
    i32 1, label %sw.bb.11
  ], !dbg !5758

sw.bb:                                            ; preds = %if.else
  store i32 2, i32* %result, align 4, !dbg !5759, !tbaa !2307
  br label %sw.epilog, !dbg !5761

sw.bb.11:                                         ; preds = %if.else, %if.else
  %22 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5762, !tbaa !2289
  %m_parsingStatus12 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %22, i32 0, i32 85, !dbg !5764
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus12, i32 0, i32 1, !dbg !5765
  %23 = load i8, i8* %finalBuffer, align 1, !dbg !5765, !tbaa !5150
  %tobool = icmp ne i8 %23, 0, !dbg !5766
  br i1 %tobool, label %if.then.13, label %if.end.16, !dbg !5767

if.then.13:                                       ; preds = %sw.bb.11
  %24 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5768, !tbaa !2289
  %m_parsingStatus14 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %24, i32 0, i32 85, !dbg !5770
  %parsing15 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus14, i32 0, i32 0, !dbg !5771
  store i32 2, i32* %parsing15, align 4, !dbg !5772, !tbaa !3052
  %25 = load i32, i32* %result, align 4, !dbg !5773, !tbaa !2307
  store i32 %25, i32* %retval, !dbg !5774
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5774

if.end.16:                                        ; preds = %sw.bb.11
  br label %sw.default, !dbg !5775

sw.default:                                       ; preds = %if.else, %if.end.16
  br label %sw.epilog, !dbg !5777

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  br label %if.end.17

if.end.17:                                        ; preds = %sw.epilog
  %26 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5778, !tbaa !2289
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %26, i32 0, i32 34, !dbg !5779
  %27 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !5779, !tbaa !5191
  %updatePosition = getelementptr inbounds %struct.encoding, %struct.encoding* %27, i32 0, i32 9, !dbg !5780
  %28 = load void (%struct.encoding*, i8*, i8*, %struct.position*)*, void (%struct.encoding*, i8*, i8*, %struct.position*)** %updatePosition, align 8, !dbg !5780, !tbaa !5193
  %29 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5781, !tbaa !2289
  %m_encoding18 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %29, i32 0, i32 34, !dbg !5782
  %30 = load %struct.encoding*, %struct.encoding** %m_encoding18, align 8, !dbg !5782, !tbaa !5191
  %31 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5783, !tbaa !2289
  %m_positionPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %31, i32 0, i32 49, !dbg !5784
  %32 = load i8*, i8** %m_positionPtr, align 8, !dbg !5784, !tbaa !3014
  %33 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5785, !tbaa !2289
  %m_bufferPtr19 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %33, i32 0, i32 4, !dbg !5786
  %34 = load i8*, i8** %m_bufferPtr19, align 8, !dbg !5786, !tbaa !2937
  %35 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5787, !tbaa !2289
  %m_position = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %35, i32 0, i32 78, !dbg !5788
  call void %28(%struct.encoding* %30, i8* %32, i8* %34, %struct.position* %m_position), !dbg !5789
  %36 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5790, !tbaa !2289
  %m_bufferPtr20 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %36, i32 0, i32 4, !dbg !5791
  %37 = load i8*, i8** %m_bufferPtr20, align 8, !dbg !5791, !tbaa !2937
  %38 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5792, !tbaa !2289
  %m_positionPtr21 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %38, i32 0, i32 49, !dbg !5793
  store i8* %37, i8** %m_positionPtr21, align 8, !dbg !5794, !tbaa !3014
  %39 = load i32, i32* %result, align 4, !dbg !5795, !tbaa !2307
  store i32 %39, i32* %retval, !dbg !5796
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5796

cleanup:                                          ; preds = %if.end.17, %if.then.13, %if.then.7, %if.then
  %40 = bitcast i32* %result to i8*, !dbg !5797
  call void @llvm.lifetime.end(i64 4, i8* %40) #2, !dbg !5797
  %41 = load i32, i32* %retval, !dbg !5797
  ret i32 %41, !dbg !5797
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_GetParsingStatus(%struct.XML_ParserStruct* %parser, %struct.XML_ParsingStatus* %status) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %status.addr = alloca %struct.XML_ParsingStatus*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1030, metadata !2293), !dbg !5798
  store %struct.XML_ParsingStatus* %status, %struct.XML_ParsingStatus** %status.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParsingStatus** %status.addr, metadata !1031, metadata !2293), !dbg !5799
  %0 = load %struct.XML_ParsingStatus*, %struct.XML_ParsingStatus** %status.addr, align 8, !dbg !5800, !tbaa !2289
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5801, !tbaa !2289
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 85, !dbg !5802
  %2 = bitcast %struct.XML_ParsingStatus* %0 to i8*, !dbg !5802
  %3 = bitcast %struct.XML_ParsingStatus* %m_parsingStatus to i8*, !dbg !5802
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* %3, i64 8, i32 4, i1 false), !dbg !5802, !tbaa.struct !5803
  ret void, !dbg !5804
}

; Function Attrs: nounwind uwtable
define i32 @PyExpat_XML_GetErrorCode(%struct.XML_ParserStruct* %parser) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1036, metadata !2293), !dbg !5805
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5806, !tbaa !2289
  %m_errorCode = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 46, !dbg !5807
  %1 = load i32, i32* %m_errorCode, align 4, !dbg !5807, !tbaa !3002
  ret i32 %1, !dbg !5808
}

; Function Attrs: nounwind uwtable
define i64 @PyExpat_XML_GetCurrentByteIndex(%struct.XML_ParserStruct* %parser) #0 {
entry:
  %retval = alloca i64, align 8
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1041, metadata !2293), !dbg !5809
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5810, !tbaa !2289
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 47, !dbg !5812
  %1 = load i8*, i8** %m_eventPtr, align 8, !dbg !5812, !tbaa !3006
  %tobool = icmp ne i8* %1, null, !dbg !5813
  br i1 %tobool, label %if.then, label %if.end, !dbg !5814

if.then:                                          ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5815, !tbaa !2289
  %m_parseEndByteIndex = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 7, !dbg !5816
  %3 = load i64, i64* %m_parseEndByteIndex, align 8, !dbg !5816, !tbaa !2947
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5817, !tbaa !2289
  %m_parseEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 8, !dbg !5818
  %5 = load i8*, i8** %m_parseEndPtr, align 8, !dbg !5818, !tbaa !2951
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5819, !tbaa !2289
  %m_eventPtr1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 47, !dbg !5820
  %7 = load i8*, i8** %m_eventPtr1, align 8, !dbg !5820, !tbaa !3006
  %sub.ptr.lhs.cast = ptrtoint i8* %5 to i64, !dbg !5821
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !5821
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5821
  %sub = sub i64 %3, %sub.ptr.sub, !dbg !5822
  store i64 %sub, i64* %retval, !dbg !5823
  br label %return, !dbg !5823

if.end:                                           ; preds = %entry
  store i64 -1, i64* %retval, !dbg !5824
  br label %return, !dbg !5824

return:                                           ; preds = %if.end, %if.then
  %8 = load i64, i64* %retval, !dbg !5825
  ret i64 %8, !dbg !5825
}

; Function Attrs: nounwind uwtable
define i32 @PyExpat_XML_GetCurrentByteCount(%struct.XML_ParserStruct* %parser) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1044, metadata !2293), !dbg !5826
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5827, !tbaa !2289
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 48, !dbg !5829
  %1 = load i8*, i8** %m_eventEndPtr, align 8, !dbg !5829, !tbaa !3010
  %tobool = icmp ne i8* %1, null, !dbg !5830
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5831

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5832, !tbaa !2289
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 47, !dbg !5834
  %3 = load i8*, i8** %m_eventPtr, align 8, !dbg !5834, !tbaa !3006
  %tobool1 = icmp ne i8* %3, null, !dbg !5835
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5836

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5837, !tbaa !2289
  %m_eventEndPtr2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 48, !dbg !5838
  %5 = load i8*, i8** %m_eventEndPtr2, align 8, !dbg !5838, !tbaa !3010
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5839, !tbaa !2289
  %m_eventPtr3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 47, !dbg !5840
  %7 = load i8*, i8** %m_eventPtr3, align 8, !dbg !5840, !tbaa !3006
  %sub.ptr.lhs.cast = ptrtoint i8* %5 to i64, !dbg !5841
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !5841
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5841
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !5842
  store i32 %conv, i32* %retval, !dbg !5843
  br label %return, !dbg !5843

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, !dbg !5844
  br label %return, !dbg !5844

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, !dbg !5845
  ret i32 %8, !dbg !5845
}

; Function Attrs: nounwind uwtable
define i8* @PyExpat_XML_GetInputContext(%struct.XML_ParserStruct* %parser, i32* %offset, i32* %size) #0 {
entry:
  %retval = alloca i8*, align 8
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %offset.addr = alloca i32*, align 8
  %size.addr = alloca i32*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1049, metadata !2293), !dbg !5846
  store i32* %offset, i32** %offset.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i32** %offset.addr, metadata !1050, metadata !2293), !dbg !5847
  store i32* %size, i32** %size.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i32** %size.addr, metadata !1051, metadata !2293), !dbg !5848
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5849, !tbaa !2289
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 47, !dbg !5851
  %1 = load i8*, i8** %m_eventPtr, align 8, !dbg !5851, !tbaa !3006
  %tobool = icmp ne i8* %1, null, !dbg !5852
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5853

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5854, !tbaa !2289
  %m_buffer = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 2, !dbg !5856
  %3 = load i8*, i8** %m_buffer, align 8, !dbg !5856, !tbaa !2395
  %tobool1 = icmp ne i8* %3, null, !dbg !5857
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5858

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5859, !tbaa !2289
  %m_eventPtr2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 47, !dbg !5861
  %5 = load i8*, i8** %m_eventPtr2, align 8, !dbg !5861, !tbaa !3006
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5862, !tbaa !2289
  %m_buffer3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 2, !dbg !5863
  %7 = load i8*, i8** %m_buffer3, align 8, !dbg !5863, !tbaa !2395
  %sub.ptr.lhs.cast = ptrtoint i8* %5 to i64, !dbg !5864
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !5864
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5864
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !5865
  %8 = load i32*, i32** %offset.addr, align 8, !dbg !5866, !tbaa !2289
  store i32 %conv, i32* %8, align 4, !dbg !5867, !tbaa !3391
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5868, !tbaa !2289
  %m_bufferEnd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 5, !dbg !5869
  %10 = load i8*, i8** %m_bufferEnd, align 8, !dbg !5869, !tbaa !2943
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5870, !tbaa !2289
  %m_buffer4 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 2, !dbg !5871
  %12 = load i8*, i8** %m_buffer4, align 8, !dbg !5871, !tbaa !2395
  %sub.ptr.lhs.cast5 = ptrtoint i8* %10 to i64, !dbg !5872
  %sub.ptr.rhs.cast6 = ptrtoint i8* %12 to i64, !dbg !5872
  %sub.ptr.sub7 = sub i64 %sub.ptr.lhs.cast5, %sub.ptr.rhs.cast6, !dbg !5872
  %conv8 = trunc i64 %sub.ptr.sub7 to i32, !dbg !5873
  %13 = load i32*, i32** %size.addr, align 8, !dbg !5874, !tbaa !2289
  store i32 %conv8, i32* %13, align 4, !dbg !5875, !tbaa !3391
  %14 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5876, !tbaa !2289
  %m_buffer9 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %14, i32 0, i32 2, !dbg !5877
  %15 = load i8*, i8** %m_buffer9, align 8, !dbg !5877, !tbaa !2395
  store i8* %15, i8** %retval, !dbg !5878
  br label %return, !dbg !5878

if.end:                                           ; preds = %land.lhs.true, %entry
  store i8* null, i8** %retval, !dbg !5879
  br label %return, !dbg !5879

return:                                           ; preds = %if.end, %if.then
  %16 = load i8*, i8** %retval, !dbg !5880
  ret i8* %16, !dbg !5880
}

; Function Attrs: nounwind uwtable
define i64 @PyExpat_XML_GetCurrentLineNumber(%struct.XML_ParserStruct* %parser) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1056, metadata !2293), !dbg !5881
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5882, !tbaa !2289
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 47, !dbg !5884
  %1 = load i8*, i8** %m_eventPtr, align 8, !dbg !5884, !tbaa !3006
  %tobool = icmp ne i8* %1, null, !dbg !5885
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5886

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5887, !tbaa !2289
  %m_eventPtr1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 47, !dbg !5889
  %3 = load i8*, i8** %m_eventPtr1, align 8, !dbg !5889, !tbaa !3006
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5890, !tbaa !2289
  %m_positionPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 49, !dbg !5891
  %5 = load i8*, i8** %m_positionPtr, align 8, !dbg !5891, !tbaa !3014
  %cmp = icmp uge i8* %3, %5, !dbg !5892
  br i1 %cmp, label %if.then, label %if.end, !dbg !5893

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5894, !tbaa !2289
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 34, !dbg !5896
  %7 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !5896, !tbaa !5191
  %updatePosition = getelementptr inbounds %struct.encoding, %struct.encoding* %7, i32 0, i32 9, !dbg !5897
  %8 = load void (%struct.encoding*, i8*, i8*, %struct.position*)*, void (%struct.encoding*, i8*, i8*, %struct.position*)** %updatePosition, align 8, !dbg !5897, !tbaa !5193
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5898, !tbaa !2289
  %m_encoding2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 34, !dbg !5899
  %10 = load %struct.encoding*, %struct.encoding** %m_encoding2, align 8, !dbg !5899, !tbaa !5191
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5900, !tbaa !2289
  %m_positionPtr3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 49, !dbg !5901
  %12 = load i8*, i8** %m_positionPtr3, align 8, !dbg !5901, !tbaa !3014
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5902, !tbaa !2289
  %m_eventPtr4 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 47, !dbg !5903
  %14 = load i8*, i8** %m_eventPtr4, align 8, !dbg !5903, !tbaa !3006
  %15 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5904, !tbaa !2289
  %m_position = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %15, i32 0, i32 78, !dbg !5905
  call void %8(%struct.encoding* %10, i8* %12, i8* %14, %struct.position* %m_position), !dbg !5906
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5907, !tbaa !2289
  %m_eventPtr5 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 47, !dbg !5908
  %17 = load i8*, i8** %m_eventPtr5, align 8, !dbg !5908, !tbaa !3006
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5909, !tbaa !2289
  %m_positionPtr6 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 49, !dbg !5910
  store i8* %17, i8** %m_positionPtr6, align 8, !dbg !5911, !tbaa !3014
  br label %if.end, !dbg !5912

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %19 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5913, !tbaa !2289
  %m_position7 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %19, i32 0, i32 78, !dbg !5914
  %lineNumber = getelementptr inbounds %struct.position, %struct.position* %m_position7, i32 0, i32 0, !dbg !5915
  %20 = load i64, i64* %lineNumber, align 8, !dbg !5915, !tbaa !5916
  %add = add i64 %20, 1, !dbg !5917
  ret i64 %add, !dbg !5918
}

; Function Attrs: nounwind uwtable
define i64 @PyExpat_XML_GetCurrentColumnNumber(%struct.XML_ParserStruct* %parser) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1059, metadata !2293), !dbg !5919
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5920, !tbaa !2289
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 47, !dbg !5922
  %1 = load i8*, i8** %m_eventPtr, align 8, !dbg !5922, !tbaa !3006
  %tobool = icmp ne i8* %1, null, !dbg !5923
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5924

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5925, !tbaa !2289
  %m_eventPtr1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 47, !dbg !5927
  %3 = load i8*, i8** %m_eventPtr1, align 8, !dbg !5927, !tbaa !3006
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5928, !tbaa !2289
  %m_positionPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 49, !dbg !5929
  %5 = load i8*, i8** %m_positionPtr, align 8, !dbg !5929, !tbaa !3014
  %cmp = icmp uge i8* %3, %5, !dbg !5930
  br i1 %cmp, label %if.then, label %if.end, !dbg !5931

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5932, !tbaa !2289
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 34, !dbg !5934
  %7 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !5934, !tbaa !5191
  %updatePosition = getelementptr inbounds %struct.encoding, %struct.encoding* %7, i32 0, i32 9, !dbg !5935
  %8 = load void (%struct.encoding*, i8*, i8*, %struct.position*)*, void (%struct.encoding*, i8*, i8*, %struct.position*)** %updatePosition, align 8, !dbg !5935, !tbaa !5193
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5936, !tbaa !2289
  %m_encoding2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 34, !dbg !5937
  %10 = load %struct.encoding*, %struct.encoding** %m_encoding2, align 8, !dbg !5937, !tbaa !5191
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5938, !tbaa !2289
  %m_positionPtr3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 49, !dbg !5939
  %12 = load i8*, i8** %m_positionPtr3, align 8, !dbg !5939, !tbaa !3014
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5940, !tbaa !2289
  %m_eventPtr4 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 47, !dbg !5941
  %14 = load i8*, i8** %m_eventPtr4, align 8, !dbg !5941, !tbaa !3006
  %15 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5942, !tbaa !2289
  %m_position = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %15, i32 0, i32 78, !dbg !5943
  call void %8(%struct.encoding* %10, i8* %12, i8* %14, %struct.position* %m_position), !dbg !5944
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5945, !tbaa !2289
  %m_eventPtr5 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 47, !dbg !5946
  %17 = load i8*, i8** %m_eventPtr5, align 8, !dbg !5946, !tbaa !3006
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5947, !tbaa !2289
  %m_positionPtr6 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 49, !dbg !5948
  store i8* %17, i8** %m_positionPtr6, align 8, !dbg !5949, !tbaa !3014
  br label %if.end, !dbg !5950

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %19 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5951, !tbaa !2289
  %m_position7 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %19, i32 0, i32 78, !dbg !5952
  %columnNumber = getelementptr inbounds %struct.position, %struct.position* %m_position7, i32 0, i32 1, !dbg !5953
  %20 = load i64, i64* %columnNumber, align 8, !dbg !5953, !tbaa !5954
  ret i64 %20, !dbg !5955
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_FreeContentModel(%struct.XML_ParserStruct* %parser, %struct.XML_cp* %model) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %model.addr = alloca %struct.XML_cp*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1064, metadata !2293), !dbg !5956
  store %struct.XML_cp* %model, %struct.XML_cp** %model.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_cp** %model.addr, metadata !1065, metadata !2293), !dbg !5957
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5958, !tbaa !2289
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 3, !dbg !5959
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 2, !dbg !5960
  %1 = load void (i8*)*, void (i8*)** %free_fcn, align 8, !dbg !5960, !tbaa !2435
  %2 = load %struct.XML_cp*, %struct.XML_cp** %model.addr, align 8, !dbg !5961, !tbaa !2289
  %3 = bitcast %struct.XML_cp* %2 to i8*, !dbg !5962
  call void %1(i8* %3), !dbg !5958
  ret void, !dbg !5963
}

; Function Attrs: nounwind uwtable
define i8* @PyExpat_XML_MemMalloc(%struct.XML_ParserStruct* %parser, i64 %size) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %size.addr = alloca i64, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1070, metadata !2293), !dbg !5964
  store i64 %size, i64* %size.addr, align 8, !tbaa !3400
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !1071, metadata !2293), !dbg !5965
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5966, !tbaa !2289
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 3, !dbg !5967
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 0, !dbg !5968
  %1 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8, !dbg !5968, !tbaa !2416
  %2 = load i64, i64* %size.addr, align 8, !dbg !5969, !tbaa !3400
  %call = call i8* %1(i64 %2), !dbg !5966
  ret i8* %call, !dbg !5970
}

; Function Attrs: nounwind uwtable
define i8* @PyExpat_XML_MemRealloc(%struct.XML_ParserStruct* %parser, i8* %ptr, i64 %size) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1076, metadata !2293), !dbg !5971
  store i8* %ptr, i8** %ptr.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !1077, metadata !2293), !dbg !5972
  store i64 %size, i64* %size.addr, align 8, !tbaa !3400
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !1078, metadata !2293), !dbg !5973
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5974, !tbaa !2289
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 3, !dbg !5975
  %realloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 1, !dbg !5976
  %1 = load i8* (i8*, i64)*, i8* (i8*, i64)** %realloc_fcn, align 8, !dbg !5976, !tbaa !5977
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !5978, !tbaa !2289
  %3 = load i64, i64* %size.addr, align 8, !dbg !5979, !tbaa !3400
  %call = call i8* %1(i8* %2, i64 %3), !dbg !5974
  ret i8* %call, !dbg !5980
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_MemFree(%struct.XML_ParserStruct* %parser, i8* %ptr) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %ptr.addr = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1081, metadata !2293), !dbg !5981
  store i8* %ptr, i8** %ptr.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !1082, metadata !2293), !dbg !5982
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5983, !tbaa !2289
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 3, !dbg !5984
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 2, !dbg !5985
  %1 = load void (i8*)*, void (i8*)** %free_fcn, align 8, !dbg !5985, !tbaa !2435
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !5986, !tbaa !2289
  call void %1(i8* %2), !dbg !5983
  ret void, !dbg !5987
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_DefaultCurrent(%struct.XML_ParserStruct* %parser) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1085, metadata !2293), !dbg !5988
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5989, !tbaa !2289
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 18, !dbg !5991
  %1 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler, align 8, !dbg !5991, !tbaa !2874
  %tobool = icmp ne void (i8*, i8*, i32)* %1, null, !dbg !5992
  br i1 %tobool, label %if.then, label %if.end.5, !dbg !5993

if.then:                                          ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5994, !tbaa !2289
  %m_openInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 50, !dbg !5997
  %3 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities, align 8, !dbg !5997, !tbaa !2664
  %tobool1 = icmp ne %struct.open_internal_entity* %3, null, !dbg !5998
  br i1 %tobool1, label %if.then.2, label %if.else, !dbg !5999

if.then.2:                                        ; preds = %if.then
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6000, !tbaa !2289
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6001, !tbaa !2289
  %m_internalEncoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 36, !dbg !6002
  %6 = load %struct.encoding*, %struct.encoding** %m_internalEncoding, align 8, !dbg !6002, !tbaa !2599
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6003, !tbaa !2289
  %m_openInternalEntities3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 50, !dbg !6004
  %8 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities3, align 8, !dbg !6004, !tbaa !2664
  %internalEventPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %8, i32 0, i32 0, !dbg !6005
  %9 = load i8*, i8** %internalEventPtr, align 8, !dbg !6005, !tbaa !6006
  %10 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6007, !tbaa !2289
  %m_openInternalEntities4 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %10, i32 0, i32 50, !dbg !6008
  %11 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities4, align 8, !dbg !6008, !tbaa !2664
  %internalEventEndPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %11, i32 0, i32 1, !dbg !6009
  %12 = load i8*, i8** %internalEventEndPtr, align 8, !dbg !6009, !tbaa !6010
  call void @reportDefault(%struct.XML_ParserStruct* %4, %struct.encoding* %6, i8* %9, i8* %12), !dbg !6011
  br label %if.end, !dbg !6011

if.else:                                          ; preds = %if.then
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6012, !tbaa !2289
  %14 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6013, !tbaa !2289
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %14, i32 0, i32 34, !dbg !6014
  %15 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !6014, !tbaa !5191
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6015, !tbaa !2289
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 47, !dbg !6016
  %17 = load i8*, i8** %m_eventPtr, align 8, !dbg !6016, !tbaa !3006
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6017, !tbaa !2289
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 48, !dbg !6018
  %19 = load i8*, i8** %m_eventEndPtr, align 8, !dbg !6018, !tbaa !3010
  call void @reportDefault(%struct.XML_ParserStruct* %13, %struct.encoding* %15, i8* %17, i8* %19), !dbg !6019
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.2
  br label %if.end.5, !dbg !6020

if.end.5:                                         ; preds = %if.end, %entry
  ret void, !dbg !6021
}

; Function Attrs: nounwind uwtable
define internal void @reportDefault(%struct.XML_ParserStruct* %parser, %struct.encoding* %enc, i8* %s, i8* %end) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %s.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %eventPP = alloca i8**, align 8
  %eventEndPP = alloca i8**, align 8
  %dataPtr = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !2088, metadata !2293), !dbg !6022
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !2089, metadata !2293), !dbg !6023
  store i8* %s, i8** %s.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !2090, metadata !2293), !dbg !6024
  store i8* %end, i8** %end.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !2091, metadata !2293), !dbg !6025
  %0 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6026, !tbaa !2289
  %isUtf8 = getelementptr inbounds %struct.encoding, %struct.encoding* %0, i32 0, i32 14, !dbg !6027
  %1 = load i8, i8* %isUtf8, align 1, !dbg !6027, !tbaa !6028
  %tobool = icmp ne i8 %1, 0, !dbg !6029
  br i1 %tobool, label %if.else.7, label %if.then, !dbg !6030

if.then:                                          ; preds = %entry
  %2 = bitcast i8*** %eventPP to i8*, !dbg !6031
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !6031
  call void @llvm.dbg.declare(metadata i8*** %eventPP, metadata !2092, metadata !2293), !dbg !6032
  %3 = bitcast i8*** %eventEndPP to i8*, !dbg !6033
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !6033
  call void @llvm.dbg.declare(metadata i8*** %eventEndPP, metadata !2095, metadata !2293), !dbg !6034
  %4 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6035, !tbaa !2289
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6037, !tbaa !2289
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 34, !dbg !6038
  %6 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !6038, !tbaa !5191
  %cmp = icmp eq %struct.encoding* %4, %6, !dbg !6039
  br i1 %cmp, label %if.then.1, label %if.else, !dbg !6040

if.then.1:                                        ; preds = %if.then
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6041, !tbaa !2289
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 47, !dbg !6043
  store i8** %m_eventPtr, i8*** %eventPP, align 8, !dbg !6044, !tbaa !2289
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6045, !tbaa !2289
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 48, !dbg !6046
  store i8** %m_eventEndPtr, i8*** %eventEndPP, align 8, !dbg !6047, !tbaa !2289
  br label %if.end, !dbg !6048

if.else:                                          ; preds = %if.then
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6049, !tbaa !2289
  %m_openInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 50, !dbg !6051
  %10 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities, align 8, !dbg !6051, !tbaa !2664
  %internalEventPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %10, i32 0, i32 0, !dbg !6052
  store i8** %internalEventPtr, i8*** %eventPP, align 8, !dbg !6053, !tbaa !2289
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6054, !tbaa !2289
  %m_openInternalEntities2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 50, !dbg !6055
  %12 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities2, align 8, !dbg !6055, !tbaa !2664
  %internalEventEndPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %12, i32 0, i32 1, !dbg !6056
  store i8** %internalEventEndPtr, i8*** %eventEndPP, align 8, !dbg !6057, !tbaa !2289
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  br label %do.body, !dbg !6058

do.body:                                          ; preds = %do.cond, %if.end
  %13 = bitcast i8** %dataPtr to i8*, !dbg !6059
  call void @llvm.lifetime.start(i64 8, i8* %13) #2, !dbg !6059
  call void @llvm.dbg.declare(metadata i8** %dataPtr, metadata !2096, metadata !2293), !dbg !6060
  %14 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6061, !tbaa !2289
  %m_dataBuf = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %14, i32 0, i32 9, !dbg !6062
  %15 = load i8*, i8** %m_dataBuf, align 8, !dbg !6062, !tbaa !2445
  store i8* %15, i8** %dataPtr, align 8, !dbg !6060, !tbaa !2289
  %16 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6063, !tbaa !2289
  %utf8Convert = getelementptr inbounds %struct.encoding, %struct.encoding* %16, i32 0, i32 11, !dbg !6064
  %17 = load void (%struct.encoding*, i8**, i8*, i8**, i8*)*, void (%struct.encoding*, i8**, i8*, i8**, i8*)** %utf8Convert, align 8, !dbg !6064, !tbaa !6065
  %18 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6066, !tbaa !2289
  %19 = load i8*, i8** %end.addr, align 8, !dbg !6067, !tbaa !2289
  %20 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6068, !tbaa !2289
  %m_dataBufEnd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %20, i32 0, i32 10, !dbg !6069
  %21 = load i8*, i8** %m_dataBufEnd, align 8, !dbg !6069, !tbaa !2470
  call void %17(%struct.encoding* %18, i8** %s.addr, i8* %19, i8** %dataPtr, i8* %21), !dbg !6070
  %22 = load i8*, i8** %s.addr, align 8, !dbg !6071, !tbaa !2289
  %23 = load i8**, i8*** %eventEndPP, align 8, !dbg !6072, !tbaa !2289
  store i8* %22, i8** %23, align 8, !dbg !6073, !tbaa !2289
  %24 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6074, !tbaa !2289
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %24, i32 0, i32 18, !dbg !6075
  %25 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler, align 8, !dbg !6075, !tbaa !2874
  %26 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6076, !tbaa !2289
  %m_handlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %26, i32 0, i32 1, !dbg !6077
  %27 = load i8*, i8** %m_handlerArg, align 8, !dbg !6077, !tbaa !2842
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6078, !tbaa !2289
  %m_dataBuf3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %28, i32 0, i32 9, !dbg !6079
  %29 = load i8*, i8** %m_dataBuf3, align 8, !dbg !6079, !tbaa !2445
  %30 = load i8*, i8** %dataPtr, align 8, !dbg !6080, !tbaa !2289
  %31 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6081, !tbaa !2289
  %m_dataBuf4 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %31, i32 0, i32 9, !dbg !6082
  %32 = load i8*, i8** %m_dataBuf4, align 8, !dbg !6082, !tbaa !2445
  %sub.ptr.lhs.cast = ptrtoint i8* %30 to i64, !dbg !6083
  %sub.ptr.rhs.cast = ptrtoint i8* %32 to i64, !dbg !6083
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6083
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !6084
  call void %25(i8* %27, i8* %29, i32 %conv), !dbg !6085
  %33 = load i8*, i8** %s.addr, align 8, !dbg !6086, !tbaa !2289
  %34 = load i8**, i8*** %eventPP, align 8, !dbg !6087, !tbaa !2289
  store i8* %33, i8** %34, align 8, !dbg !6088, !tbaa !2289
  %35 = bitcast i8** %dataPtr to i8*, !dbg !6089
  call void @llvm.lifetime.end(i64 8, i8* %35) #2, !dbg !6089
  br label %do.cond, !dbg !6090

do.cond:                                          ; preds = %do.body
  %36 = load i8*, i8** %s.addr, align 8, !dbg !6091, !tbaa !2289
  %37 = load i8*, i8** %end.addr, align 8, !dbg !6093, !tbaa !2289
  %cmp5 = icmp ne i8* %36, %37, !dbg !6094
  br i1 %cmp5, label %do.body, label %do.end, !dbg !6090

do.end:                                           ; preds = %do.cond
  %38 = bitcast i8*** %eventEndPP to i8*, !dbg !6095
  call void @llvm.lifetime.end(i64 8, i8* %38) #2, !dbg !6095
  %39 = bitcast i8*** %eventPP to i8*, !dbg !6095
  call void @llvm.lifetime.end(i64 8, i8* %39) #2, !dbg !6095
  br label %if.end.14, !dbg !6096

if.else.7:                                        ; preds = %entry
  %40 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6097, !tbaa !2289
  %m_defaultHandler8 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %40, i32 0, i32 18, !dbg !6098
  %41 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler8, align 8, !dbg !6098, !tbaa !2874
  %42 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6099, !tbaa !2289
  %m_handlerArg9 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %42, i32 0, i32 1, !dbg !6100
  %43 = load i8*, i8** %m_handlerArg9, align 8, !dbg !6100, !tbaa !2842
  %44 = load i8*, i8** %s.addr, align 8, !dbg !6101, !tbaa !2289
  %45 = load i8*, i8** %end.addr, align 8, !dbg !6102, !tbaa !2289
  %46 = load i8*, i8** %s.addr, align 8, !dbg !6103, !tbaa !2289
  %sub.ptr.lhs.cast10 = ptrtoint i8* %45 to i64, !dbg !6104
  %sub.ptr.rhs.cast11 = ptrtoint i8* %46 to i64, !dbg !6104
  %sub.ptr.sub12 = sub i64 %sub.ptr.lhs.cast10, %sub.ptr.rhs.cast11, !dbg !6104
  %conv13 = trunc i64 %sub.ptr.sub12 to i32, !dbg !6105
  call void %41(i8* %43, i8* %44, i32 %conv13), !dbg !6106
  br label %if.end.14

if.end.14:                                        ; preds = %if.else.7, %do.end
  ret void, !dbg !6107
}

; Function Attrs: nounwind uwtable
define i8* @PyExpat_XML_ErrorString(i32 %code) #0 {
entry:
  %retval = alloca i8*, align 8
  %code.addr = alloca i32, align 4
  store i32 %code, i32* %code.addr, align 4, !tbaa !2307
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !1093, metadata !2293), !dbg !6108
  %0 = load i32, i32* %code.addr, align 4, !dbg !6109, !tbaa !2307
  %cmp = icmp ugt i32 %0, 0, !dbg !6111
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6112

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %code.addr, align 4, !dbg !6113, !tbaa !2307
  %conv = zext i32 %1 to i64, !dbg !6113
  %cmp1 = icmp ult i64 %conv, 41, !dbg !6115
  br i1 %cmp1, label %if.then, label %if.end, !dbg !6116

if.then:                                          ; preds = %land.lhs.true
  %2 = load i32, i32* %code.addr, align 4, !dbg !6117, !tbaa !2307
  %idxprom = zext i32 %2 to i64, !dbg !6118
  %arrayidx = getelementptr [41 x i8*], [41 x i8*]* @PyExpat_XML_ErrorString.message, i32 0, i64 %idxprom, !dbg !6118
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !6118, !tbaa !2289
  store i8* %3, i8** %retval, !dbg !6119
  br label %return, !dbg !6119

if.end:                                           ; preds = %land.lhs.true, %entry
  store i8* null, i8** %retval, !dbg !6120
  br label %return, !dbg !6120

return:                                           ; preds = %if.end, %if.then
  %4 = load i8*, i8** %retval, !dbg !6121
  ret i8* %4, !dbg !6121
}

; Function Attrs: nounwind uwtable
define i8* @PyExpat_XML_ExpatVersion() #0 {
entry:
  ret i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.40, i32 0, i32 0), !dbg !6122
}

; Function Attrs: nounwind uwtable
define { i64, i32 } @PyExpat_XML_ExpatVersionInfo() #0 {
entry:
  %retval = alloca %struct.XML_Expat_Version, align 4
  %version = alloca %struct.XML_Expat_Version, align 4
  %tmp = alloca { i64, i32 }, align 4
  %0 = bitcast %struct.XML_Expat_Version* %version to i8*, !dbg !6123
  call void @llvm.lifetime.start(i64 12, i8* %0) #2, !dbg !6123
  call void @llvm.dbg.declare(metadata %struct.XML_Expat_Version* %version, metadata !1108, metadata !2293), !dbg !6124
  %major = getelementptr inbounds %struct.XML_Expat_Version, %struct.XML_Expat_Version* %version, i32 0, i32 0, !dbg !6125
  store i32 2, i32* %major, align 4, !dbg !6126, !tbaa !6127
  %minor = getelementptr inbounds %struct.XML_Expat_Version, %struct.XML_Expat_Version* %version, i32 0, i32 1, !dbg !6129
  store i32 1, i32* %minor, align 4, !dbg !6130, !tbaa !6131
  %micro = getelementptr inbounds %struct.XML_Expat_Version, %struct.XML_Expat_Version* %version, i32 0, i32 2, !dbg !6132
  store i32 0, i32* %micro, align 4, !dbg !6133, !tbaa !6134
  %1 = bitcast %struct.XML_Expat_Version* %retval to i8*, !dbg !6135
  %2 = bitcast %struct.XML_Expat_Version* %version to i8*, !dbg !6135
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %2, i64 12, i32 4, i1 false), !dbg !6135, !tbaa.struct !6136
  %3 = bitcast %struct.XML_Expat_Version* %version to i8*, !dbg !6137
  call void @llvm.lifetime.end(i64 12, i8* %3) #2, !dbg !6137
  %4 = bitcast { i64, i32 }* %tmp to i8*, !dbg !6137
  %5 = bitcast %struct.XML_Expat_Version* %retval to i8*, !dbg !6137
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* %5, i64 12, i32 4, i1 false), !dbg !6137
  %6 = load { i64, i32 }, { i64, i32 }* %tmp, align 4, !dbg !6137
  ret { i64, i32 } %6, !dbg !6137
}

; Function Attrs: nounwind uwtable
define %struct.XML_Feature* @PyExpat_XML_GetFeatureList() #0 {
entry:
  ret %struct.XML_Feature* getelementptr inbounds ([6 x %struct.XML_Feature], [6 x %struct.XML_Feature]* @PyExpat_XML_GetFeatureList.features, i32 0, i32 0), !dbg !6138
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #4

; Function Attrs: nounwind
declare i8* @realloc(i8*, i64) #4

; Function Attrs: nounwind
declare void @free(i8*) #4

; Function Attrs: nounwind uwtable
define internal %struct.DTD* @dtdCreate(%struct.XML_Memory_Handling_Suite* %ms) #0 {
entry:
  %retval = alloca %struct.DTD*, align 8
  %ms.addr = alloca %struct.XML_Memory_Handling_Suite*, align 8
  %p = alloca %struct.DTD*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.XML_Memory_Handling_Suite* %ms, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_Memory_Handling_Suite** %ms.addr, metadata !1138, metadata !2293), !dbg !6139
  %0 = bitcast %struct.DTD** %p to i8*, !dbg !6140
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6140
  call void @llvm.dbg.declare(metadata %struct.DTD** %p, metadata !1139, metadata !2293), !dbg !6141
  %1 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !dbg !6142, !tbaa !2289
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %1, i32 0, i32 0, !dbg !6143
  %2 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8, !dbg !6143, !tbaa !2331
  %call = call i8* %2(i64 360), !dbg !6142
  %3 = bitcast i8* %call to %struct.DTD*, !dbg !6144
  store %struct.DTD* %3, %struct.DTD** %p, align 8, !dbg !6141, !tbaa !2289
  %4 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !6145, !tbaa !2289
  %cmp = icmp eq %struct.DTD* %4, null, !dbg !6147
  br i1 %cmp, label %if.then, label %if.end, !dbg !6148

if.then:                                          ; preds = %entry
  %5 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !6149, !tbaa !2289
  store %struct.DTD* %5, %struct.DTD** %retval, !dbg !6150
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6150

if.end:                                           ; preds = %entry
  %6 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !6151, !tbaa !2289
  %pool = getelementptr inbounds %struct.DTD, %struct.DTD* %6, i32 0, i32 4, !dbg !6152
  %7 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !dbg !6153, !tbaa !2289
  call void @poolInit(%struct.STRING_POOL* %pool, %struct.XML_Memory_Handling_Suite* %7), !dbg !6154
  %8 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !6155, !tbaa !2289
  %entityValuePool = getelementptr inbounds %struct.DTD, %struct.DTD* %8, i32 0, i32 5, !dbg !6156
  %9 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !dbg !6157, !tbaa !2289
  call void @poolInit(%struct.STRING_POOL* %entityValuePool, %struct.XML_Memory_Handling_Suite* %9), !dbg !6158
  %10 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !6159, !tbaa !2289
  %generalEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %10, i32 0, i32 0, !dbg !6160
  %11 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !dbg !6161, !tbaa !2289
  call void @hashTableInit(%struct.HASH_TABLE* %generalEntities, %struct.XML_Memory_Handling_Suite* %11), !dbg !6162
  %12 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !6163, !tbaa !2289
  %elementTypes = getelementptr inbounds %struct.DTD, %struct.DTD* %12, i32 0, i32 1, !dbg !6164
  %13 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !dbg !6165, !tbaa !2289
  call void @hashTableInit(%struct.HASH_TABLE* %elementTypes, %struct.XML_Memory_Handling_Suite* %13), !dbg !6166
  %14 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !6167, !tbaa !2289
  %attributeIds = getelementptr inbounds %struct.DTD, %struct.DTD* %14, i32 0, i32 2, !dbg !6168
  %15 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !dbg !6169, !tbaa !2289
  call void @hashTableInit(%struct.HASH_TABLE* %attributeIds, %struct.XML_Memory_Handling_Suite* %15), !dbg !6170
  %16 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !6171, !tbaa !2289
  %prefixes = getelementptr inbounds %struct.DTD, %struct.DTD* %16, i32 0, i32 3, !dbg !6172
  %17 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !dbg !6173, !tbaa !2289
  call void @hashTableInit(%struct.HASH_TABLE* %prefixes, %struct.XML_Memory_Handling_Suite* %17), !dbg !6174
  %18 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !6175, !tbaa !2289
  %paramEntityRead = getelementptr inbounds %struct.DTD, %struct.DTD* %18, i32 0, i32 9, !dbg !6176
  store i8 0, i8* %paramEntityRead, align 1, !dbg !6177, !tbaa !3108
  %19 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !6178, !tbaa !2289
  %paramEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %19, i32 0, i32 10, !dbg !6179
  %20 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !dbg !6180, !tbaa !2289
  call void @hashTableInit(%struct.HASH_TABLE* %paramEntities, %struct.XML_Memory_Handling_Suite* %20), !dbg !6181
  %21 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !6182, !tbaa !2289
  %defaultPrefix = getelementptr inbounds %struct.DTD, %struct.DTD* %21, i32 0, i32 11, !dbg !6183
  %name = getelementptr inbounds %struct.prefix, %struct.prefix* %defaultPrefix, i32 0, i32 0, !dbg !6184
  store i8* null, i8** %name, align 8, !dbg !6185, !tbaa !3134
  %22 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !6186, !tbaa !2289
  %defaultPrefix1 = getelementptr inbounds %struct.DTD, %struct.DTD* %22, i32 0, i32 11, !dbg !6187
  %binding = getelementptr inbounds %struct.prefix, %struct.prefix* %defaultPrefix1, i32 0, i32 1, !dbg !6188
  store %struct.binding* null, %struct.binding** %binding, align 8, !dbg !6189, !tbaa !3139
  %23 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !6190, !tbaa !2289
  %in_eldecl = getelementptr inbounds %struct.DTD, %struct.DTD* %23, i32 0, i32 12, !dbg !6191
  store i8 0, i8* %in_eldecl, align 1, !dbg !6192, !tbaa !3143
  %24 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !6193, !tbaa !2289
  %scaffIndex = getelementptr inbounds %struct.DTD, %struct.DTD* %24, i32 0, i32 18, !dbg !6194
  store i32* null, i32** %scaffIndex, align 8, !dbg !6195, !tbaa !3148
  %25 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !6196, !tbaa !2289
  %scaffold = getelementptr inbounds %struct.DTD, %struct.DTD* %25, i32 0, i32 13, !dbg !6197
  store %struct.CONTENT_SCAFFOLD* null, %struct.CONTENT_SCAFFOLD** %scaffold, align 8, !dbg !6198, !tbaa !3156
  %26 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !6199, !tbaa !2289
  %scaffLevel = getelementptr inbounds %struct.DTD, %struct.DTD* %26, i32 0, i32 17, !dbg !6200
  store i32 0, i32* %scaffLevel, align 4, !dbg !6201, !tbaa !3163
  %27 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !6202, !tbaa !2289
  %scaffSize = getelementptr inbounds %struct.DTD, %struct.DTD* %27, i32 0, i32 15, !dbg !6203
  store i32 0, i32* %scaffSize, align 4, !dbg !6204, !tbaa !3167
  %28 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !6205, !tbaa !2289
  %scaffCount = getelementptr inbounds %struct.DTD, %struct.DTD* %28, i32 0, i32 16, !dbg !6206
  store i32 0, i32* %scaffCount, align 4, !dbg !6207, !tbaa !3171
  %29 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !6208, !tbaa !2289
  %contentStringLen = getelementptr inbounds %struct.DTD, %struct.DTD* %29, i32 0, i32 14, !dbg !6209
  store i32 0, i32* %contentStringLen, align 4, !dbg !6210, !tbaa !3175
  %30 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !6211, !tbaa !2289
  %keepProcessing = getelementptr inbounds %struct.DTD, %struct.DTD* %30, i32 0, i32 6, !dbg !6212
  store i8 1, i8* %keepProcessing, align 1, !dbg !6213, !tbaa !3179
  %31 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !6214, !tbaa !2289
  %hasParamEntityRefs = getelementptr inbounds %struct.DTD, %struct.DTD* %31, i32 0, i32 7, !dbg !6215
  store i8 0, i8* %hasParamEntityRefs, align 1, !dbg !6216, !tbaa !3183
  %32 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !6217, !tbaa !2289
  %standalone = getelementptr inbounds %struct.DTD, %struct.DTD* %32, i32 0, i32 8, !dbg !6218
  store i8 0, i8* %standalone, align 1, !dbg !6219, !tbaa !3187
  %33 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !6220, !tbaa !2289
  store %struct.DTD* %33, %struct.DTD** %retval, !dbg !6221
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6221

cleanup:                                          ; preds = %if.end, %if.then
  %34 = bitcast %struct.DTD** %p to i8*, !dbg !6222
  call void @llvm.lifetime.end(i64 8, i8* %34) #2, !dbg !6222
  %35 = load %struct.DTD*, %struct.DTD** %retval, !dbg !6222
  ret %struct.DTD* %35, !dbg !6222
}

; Function Attrs: nounwind uwtable
define internal void @poolInit(%struct.STRING_POOL* %pool, %struct.XML_Memory_Handling_Suite* %ms) #0 {
entry:
  %pool.addr = alloca %struct.STRING_POOL*, align 8
  %ms.addr = alloca %struct.XML_Memory_Handling_Suite*, align 8
  store %struct.STRING_POOL* %pool, %struct.STRING_POOL** %pool.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.STRING_POOL** %pool.addr, metadata !1152, metadata !2293), !dbg !6223
  store %struct.XML_Memory_Handling_Suite* %ms, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_Memory_Handling_Suite** %ms.addr, metadata !1153, metadata !2293), !dbg !6224
  %0 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6225, !tbaa !2289
  %blocks = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %0, i32 0, i32 0, !dbg !6226
  store %struct.block* null, %struct.block** %blocks, align 8, !dbg !6227, !tbaa !2757
  %1 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6228, !tbaa !2289
  %freeBlocks = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %1, i32 0, i32 1, !dbg !6229
  store %struct.block* null, %struct.block** %freeBlocks, align 8, !dbg !6230, !tbaa !2753
  %2 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6231, !tbaa !2289
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %2, i32 0, i32 4, !dbg !6232
  store i8* null, i8** %start, align 8, !dbg !6233, !tbaa !2794
  %3 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6234, !tbaa !2289
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %3, i32 0, i32 3, !dbg !6235
  store i8* null, i8** %ptr, align 8, !dbg !6236, !tbaa !2798
  %4 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6237, !tbaa !2289
  %end = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %4, i32 0, i32 2, !dbg !6238
  store i8* null, i8** %end, align 8, !dbg !6239, !tbaa !2802
  %5 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !dbg !6240, !tbaa !2289
  %6 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6241, !tbaa !2289
  %mem = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %6, i32 0, i32 5, !dbg !6242
  store %struct.XML_Memory_Handling_Suite* %5, %struct.XML_Memory_Handling_Suite** %mem, align 8, !dbg !6243, !tbaa !4622
  ret void, !dbg !6244
}

declare %struct.encoding* @PyExpat_XmlGetUtf8InternalEncodingNS() #3

declare %struct.encoding* @PyExpat_XmlGetUtf8InternalEncoding() #3

; Function Attrs: nounwind uwtable
define internal void @hashTableInit(%struct.HASH_TABLE* %p, %struct.XML_Memory_Handling_Suite* %ms) #0 {
entry:
  %p.addr = alloca %struct.HASH_TABLE*, align 8
  %ms.addr = alloca %struct.XML_Memory_Handling_Suite*, align 8
  store %struct.HASH_TABLE* %p, %struct.HASH_TABLE** %p.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.HASH_TABLE** %p.addr, metadata !1145, metadata !2293), !dbg !6245
  store %struct.XML_Memory_Handling_Suite* %ms, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_Memory_Handling_Suite** %ms.addr, metadata !1146, metadata !2293), !dbg !6246
  %0 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %p.addr, align 8, !dbg !6247, !tbaa !2289
  %power = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %0, i32 0, i32 1, !dbg !6248
  store i8 0, i8* %power, align 1, !dbg !6249, !tbaa !6250
  %1 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %p.addr, align 8, !dbg !6251, !tbaa !2289
  %size = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %1, i32 0, i32 2, !dbg !6252
  store i64 0, i64* %size, align 8, !dbg !6253, !tbaa !6254
  %2 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %p.addr, align 8, !dbg !6255, !tbaa !2289
  %used = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %2, i32 0, i32 3, !dbg !6256
  store i64 0, i64* %used, align 8, !dbg !6257, !tbaa !6258
  %3 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %p.addr, align 8, !dbg !6259, !tbaa !2289
  %v = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %3, i32 0, i32 0, !dbg !6260
  store %struct.NAMED** null, %struct.NAMED*** %v, align 8, !dbg !6261, !tbaa !6262
  %4 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !dbg !6263, !tbaa !2289
  %5 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %p.addr, align 8, !dbg !6264, !tbaa !2289
  %mem = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %5, i32 0, i32 4, !dbg !6265
  store %struct.XML_Memory_Handling_Suite* %4, %struct.XML_Memory_Handling_Suite** %mem, align 8, !dbg !6266, !tbaa !6267
  ret void, !dbg !6268
}

; Function Attrs: nounwind uwtable
define internal i32 @prologInitProcessor(%struct.XML_ParserStruct* %parser, i8* %s, i8* %end, i8** %nextPtr) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %s.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextPtr.addr = alloca i8**, align 8
  %result = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1170, metadata !2293), !dbg !6269
  store i8* %s, i8** %s.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !1171, metadata !2293), !dbg !6270
  store i8* %end, i8** %end.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !1172, metadata !2293), !dbg !6271
  store i8** %nextPtr, i8*** %nextPtr.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8*** %nextPtr.addr, metadata !1173, metadata !2293), !dbg !6272
  %0 = bitcast i32* %result to i8*, !dbg !6273
  call void @llvm.lifetime.start(i64 4, i8* %0) #2, !dbg !6273
  call void @llvm.dbg.declare(metadata i32* %result, metadata !1174, metadata !2293), !dbg !6274
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6275, !tbaa !2289
  %call = call i32 @initializeEncoding(%struct.XML_ParserStruct* %1), !dbg !6276
  store i32 %call, i32* %result, align 4, !dbg !6274, !tbaa !2307
  %2 = load i32, i32* %result, align 4, !dbg !6277, !tbaa !2307
  %cmp = icmp ne i32 %2, 0, !dbg !6279
  br i1 %cmp, label %if.then, label %if.end, !dbg !6280

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %result, align 4, !dbg !6281, !tbaa !2307
  store i32 %3, i32* %retval, !dbg !6282
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6282

if.end:                                           ; preds = %entry
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6283, !tbaa !2289
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 45, !dbg !6284
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @prologProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8, !dbg !6285, !tbaa !2809
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6286, !tbaa !2289
  %6 = load i8*, i8** %s.addr, align 8, !dbg !6287, !tbaa !2289
  %7 = load i8*, i8** %end.addr, align 8, !dbg !6288, !tbaa !2289
  %8 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !6289, !tbaa !2289
  %call1 = call i32 @prologProcessor(%struct.XML_ParserStruct* %5, i8* %6, i8* %7, i8** %8), !dbg !6290
  store i32 %call1, i32* %retval, !dbg !6291
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6291

cleanup:                                          ; preds = %if.end, %if.then
  %9 = bitcast i32* %result to i8*, !dbg !6292
  call void @llvm.lifetime.end(i64 4, i8* %9) #2, !dbg !6292
  %10 = load i32, i32* %retval, !dbg !6292
  ret i32 %10, !dbg !6292
}

declare void @PyExpat_XmlPrologStateInit(%struct.prolog_state*) #3

declare i32 @PyExpat_XmlInitEncoding(%struct.INIT_ENCODING*, %struct.encoding**, i8*) #3

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #2

; Function Attrs: nounwind uwtable
define internal i32 @initializeEncoding(%struct.XML_ParserStruct* %parser) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %s = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1177, metadata !2293), !dbg !6293
  %0 = bitcast i8** %s to i8*, !dbg !6294
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6294
  call void @llvm.dbg.declare(metadata i8** %s, metadata !1178, metadata !2293), !dbg !6295
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6296, !tbaa !2289
  %m_protocolEncodingName = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 37, !dbg !6297
  %2 = load i8*, i8** %m_protocolEncodingName, align 8, !dbg !6297, !tbaa !2581
  store i8* %2, i8** %s, align 8, !dbg !6298, !tbaa !2289
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6299, !tbaa !2289
  %m_ns = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 38, !dbg !6301
  %4 = load i8, i8* %m_ns, align 1, !dbg !6301, !tbaa !2545
  %conv = zext i8 %4 to i32, !dbg !6302
  %tobool = icmp ne i32 %conv, 0, !dbg !6302
  %cond = select i1 %tobool, i32 (%struct.INIT_ENCODING*, %struct.encoding**, i8*)* @PyExpat_XmlInitEncodingNS, i32 (%struct.INIT_ENCODING*, %struct.encoding**, i8*)* @PyExpat_XmlInitEncoding, !dbg !6302
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6303, !tbaa !2289
  %m_initEncoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 35, !dbg !6304
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6305, !tbaa !2289
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 34, !dbg !6306
  %7 = load i8*, i8** %s, align 8, !dbg !6307, !tbaa !2289
  %call = call i32 %cond(%struct.INIT_ENCODING* %m_initEncoding, %struct.encoding** %m_encoding, i8* %7), !dbg !6308
  %tobool1 = icmp ne i32 %call, 0, !dbg !6308
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6309

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, !dbg !6310
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6310

if.end:                                           ; preds = %entry
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6311, !tbaa !2289
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6312, !tbaa !2289
  %m_protocolEncodingName2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 37, !dbg !6313
  %10 = load i8*, i8** %m_protocolEncodingName2, align 8, !dbg !6313, !tbaa !2581
  %call3 = call i32 @handleUnknownEncoding(%struct.XML_ParserStruct* %8, i8* %10), !dbg !6314
  store i32 %call3, i32* %retval, !dbg !6315
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6315

cleanup:                                          ; preds = %if.end, %if.then
  %11 = bitcast i8** %s to i8*, !dbg !6316
  call void @llvm.lifetime.end(i64 8, i8* %11) #2, !dbg !6316
  %12 = load i32, i32* %retval, !dbg !6316
  ret i32 %12, !dbg !6316
}

; Function Attrs: nounwind uwtable
define internal i32 @prologProcessor(%struct.XML_ParserStruct* %parser, i8* %s, i8* %end, i8** %nextPtr) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %s.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextPtr.addr = alloca i8**, align 8
  %next = alloca i8*, align 8
  %tok = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1195, metadata !2293), !dbg !6317
  store i8* %s, i8** %s.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !1196, metadata !2293), !dbg !6318
  store i8* %end, i8** %end.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !1197, metadata !2293), !dbg !6319
  store i8** %nextPtr, i8*** %nextPtr.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8*** %nextPtr.addr, metadata !1198, metadata !2293), !dbg !6320
  %0 = bitcast i8** %next to i8*, !dbg !6321
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6321
  call void @llvm.dbg.declare(metadata i8** %next, metadata !1199, metadata !2293), !dbg !6322
  %1 = load i8*, i8** %s.addr, align 8, !dbg !6323, !tbaa !2289
  store i8* %1, i8** %next, align 8, !dbg !6322, !tbaa !2289
  %2 = bitcast i32* %tok to i8*, !dbg !6324
  call void @llvm.lifetime.start(i64 4, i8* %2) #2, !dbg !6324
  call void @llvm.dbg.declare(metadata i32* %tok, metadata !1200, metadata !2293), !dbg !6325
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6326, !tbaa !2289
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 34, !dbg !6327
  %4 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !6327, !tbaa !5191
  %scanners = getelementptr inbounds %struct.encoding, %struct.encoding* %4, i32 0, i32 0, !dbg !6328
  %arrayidx = getelementptr [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners, i32 0, i64 0, !dbg !6329
  %5 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx, align 8, !dbg !6329, !tbaa !2289
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6330, !tbaa !2289
  %m_encoding1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 34, !dbg !6331
  %7 = load %struct.encoding*, %struct.encoding** %m_encoding1, align 8, !dbg !6331, !tbaa !5191
  %8 = load i8*, i8** %s.addr, align 8, !dbg !6332, !tbaa !2289
  %9 = load i8*, i8** %end.addr, align 8, !dbg !6333, !tbaa !2289
  %call = call i32 %5(%struct.encoding* %7, i8* %8, i8* %9, i8** %next), !dbg !6334
  store i32 %call, i32* %tok, align 4, !dbg !6325, !tbaa !3391
  %10 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6335, !tbaa !2289
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6336, !tbaa !2289
  %m_encoding2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 34, !dbg !6337
  %12 = load %struct.encoding*, %struct.encoding** %m_encoding2, align 8, !dbg !6337, !tbaa !5191
  %13 = load i8*, i8** %s.addr, align 8, !dbg !6338, !tbaa !2289
  %14 = load i8*, i8** %end.addr, align 8, !dbg !6339, !tbaa !2289
  %15 = load i32, i32* %tok, align 4, !dbg !6340, !tbaa !3391
  %16 = load i8*, i8** %next, align 8, !dbg !6341, !tbaa !2289
  %17 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !6342, !tbaa !2289
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6343, !tbaa !2289
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 85, !dbg !6344
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 1, !dbg !6345
  %19 = load i8, i8* %finalBuffer, align 1, !dbg !6345, !tbaa !5150
  %tobool = icmp ne i8 %19, 0, !dbg !6346
  %lnot = xor i1 %tobool, true, !dbg !6346
  %lnot.ext = zext i1 %lnot to i32, !dbg !6346
  %conv = trunc i32 %lnot.ext to i8, !dbg !6347
  %call3 = call i32 @doProlog(%struct.XML_ParserStruct* %10, %struct.encoding* %12, i8* %13, i8* %14, i32 %15, i8* %16, i8** %17, i8 zeroext %conv), !dbg !6348
  %20 = bitcast i32* %tok to i8*, !dbg !6349
  call void @llvm.lifetime.end(i64 4, i8* %20) #2, !dbg !6349
  %21 = bitcast i8** %next to i8*, !dbg !6349
  call void @llvm.lifetime.end(i64 8, i8* %21) #2, !dbg !6349
  ret i32 %call3, !dbg !6350
}

declare i32 @PyExpat_XmlInitEncodingNS(%struct.INIT_ENCODING*, %struct.encoding**, i8*) #3

; Function Attrs: nounwind uwtable
define internal i32 @handleUnknownEncoding(%struct.XML_ParserStruct* %parser, i8* %encodingName) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %encodingName.addr = alloca i8*, align 8
  %info = alloca %struct.XML_Encoding, align 8
  %i = alloca i32, align 4
  %enc = alloca %struct.encoding*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1183, metadata !2293), !dbg !6351
  store i8* %encodingName, i8** %encodingName.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %encodingName.addr, metadata !1184, metadata !2293), !dbg !6352
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6353, !tbaa !2289
  %m_unknownEncodingHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 29, !dbg !6354
  %1 = load i32 (i8*, i8*, %struct.XML_Encoding*)*, i32 (i8*, i8*, %struct.XML_Encoding*)** %m_unknownEncodingHandler, align 8, !dbg !6354, !tbaa !2533
  %tobool = icmp ne i32 (i8*, i8*, %struct.XML_Encoding*)* %1, null, !dbg !6355
  br i1 %tobool, label %if.then, label %if.end.39, !dbg !6356

if.then:                                          ; preds = %entry
  %2 = bitcast %struct.XML_Encoding* %info to i8*, !dbg !6357
  call void @llvm.lifetime.start(i64 1048, i8* %2) #2, !dbg !6357
  call void @llvm.dbg.declare(metadata %struct.XML_Encoding* %info, metadata !1185, metadata !2293), !dbg !6358
  %3 = bitcast i32* %i to i8*, !dbg !6359
  call void @llvm.lifetime.start(i64 4, i8* %3) #2, !dbg !6359
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1188, metadata !2293), !dbg !6360
  store i32 0, i32* %i, align 4, !dbg !6361, !tbaa !3391
  br label %for.cond, !dbg !6363

for.cond:                                         ; preds = %for.inc, %if.then
  %4 = load i32, i32* %i, align 4, !dbg !6364, !tbaa !3391
  %cmp = icmp slt i32 %4, 256, !dbg !6368
  br i1 %cmp, label %for.body, label %for.end, !dbg !6369

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %i, align 4, !dbg !6370, !tbaa !3391
  %idxprom = sext i32 %5 to i64, !dbg !6371
  %map = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 0, !dbg !6372
  %arrayidx = getelementptr [256 x i32], [256 x i32]* %map, i32 0, i64 %idxprom, !dbg !6371
  store i32 -1, i32* %arrayidx, align 4, !dbg !6373, !tbaa !3391
  br label %for.inc, !dbg !6371

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !6374, !tbaa !3391
  %inc = add i32 %6, 1, !dbg !6374
  store i32 %inc, i32* %i, align 4, !dbg !6374, !tbaa !3391
  br label %for.cond, !dbg !6375

for.end:                                          ; preds = %for.cond
  %convert = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 2, !dbg !6376
  store i32 (i8*, i8*)* null, i32 (i8*, i8*)** %convert, align 8, !dbg !6377, !tbaa !6378
  %data = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 1, !dbg !6380
  store i8* null, i8** %data, align 8, !dbg !6381, !tbaa !6382
  %release = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 3, !dbg !6383
  store void (i8*)* null, void (i8*)** %release, align 8, !dbg !6384, !tbaa !6385
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6386, !tbaa !2289
  %m_unknownEncodingHandler1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 29, !dbg !6387
  %8 = load i32 (i8*, i8*, %struct.XML_Encoding*)*, i32 (i8*, i8*, %struct.XML_Encoding*)** %m_unknownEncodingHandler1, align 8, !dbg !6387, !tbaa !2533
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6388, !tbaa !2289
  %m_unknownEncodingHandlerData = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 42, !dbg !6389
  %10 = load i8*, i8** %m_unknownEncodingHandlerData, align 8, !dbg !6389, !tbaa !2537
  %11 = load i8*, i8** %encodingName.addr, align 8, !dbg !6390, !tbaa !2289
  %call = call i32 %8(i8* %10, i8* %11, %struct.XML_Encoding* %info), !dbg !6391
  %tobool2 = icmp ne i32 %call, 0, !dbg !6391
  br i1 %tobool2, label %if.then.3, label %if.end.27, !dbg !6392

if.then.3:                                        ; preds = %for.end
  %12 = bitcast %struct.encoding** %enc to i8*, !dbg !6393
  call void @llvm.lifetime.start(i64 8, i8* %12) #2, !dbg !6393
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc, metadata !1189, metadata !2293), !dbg !6394
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6395, !tbaa !2289
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 3, !dbg !6396
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 0, !dbg !6397
  %14 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8, !dbg !6397, !tbaa !2416
  %call4 = call i32 @PyExpat_XmlSizeOfUnknownEncoding(), !dbg !6398
  %conv = sext i32 %call4 to i64, !dbg !6399
  %call5 = call i8* %14(i64 %conv), !dbg !6395
  %15 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6400, !tbaa !2289
  %m_unknownEncodingMem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %15, i32 0, i32 40, !dbg !6401
  store i8* %call5, i8** %m_unknownEncodingMem, align 8, !dbg !6402, !tbaa !2696
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6403, !tbaa !2289
  %m_unknownEncodingMem6 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 40, !dbg !6405
  %17 = load i8*, i8** %m_unknownEncodingMem6, align 8, !dbg !6405, !tbaa !2696
  %tobool7 = icmp ne i8* %17, null, !dbg !6406
  br i1 %tobool7, label %if.end.14, label %if.then.8, !dbg !6407

if.then.8:                                        ; preds = %if.then.3
  %release9 = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 3, !dbg !6408
  %18 = load void (i8*)*, void (i8*)** %release9, align 8, !dbg !6408, !tbaa !6385
  %tobool10 = icmp ne void (i8*)* %18, null, !dbg !6411
  br i1 %tobool10, label %if.then.11, label %if.end, !dbg !6412

if.then.11:                                       ; preds = %if.then.8
  %release12 = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 3, !dbg !6413
  %19 = load void (i8*)*, void (i8*)** %release12, align 8, !dbg !6413, !tbaa !6385
  %data13 = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 1, !dbg !6414
  %20 = load i8*, i8** %data13, align 8, !dbg !6414, !tbaa !6382
  call void %19(i8* %20), !dbg !6415
  br label %if.end, !dbg !6415

if.end:                                           ; preds = %if.then.11, %if.then.8
  store i32 1, i32* %retval, !dbg !6416
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6416

if.end.14:                                        ; preds = %if.then.3
  %21 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6417, !tbaa !2289
  %m_ns = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %21, i32 0, i32 38, !dbg !6418
  %22 = load i8, i8* %m_ns, align 1, !dbg !6418, !tbaa !2545
  %conv15 = zext i8 %22 to i32, !dbg !6419
  %tobool16 = icmp ne i32 %conv15, 0, !dbg !6419
  %cond = select i1 %tobool16, %struct.encoding* (i8*, i32*, i32 (i8*, i8*)*, i8*)* @PyExpat_XmlInitUnknownEncodingNS, %struct.encoding* (i8*, i32*, i32 (i8*, i8*)*, i8*)* @PyExpat_XmlInitUnknownEncoding, !dbg !6419
  %23 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6420, !tbaa !2289
  %m_unknownEncodingMem17 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %23, i32 0, i32 40, !dbg !6421
  %24 = load i8*, i8** %m_unknownEncodingMem17, align 8, !dbg !6421, !tbaa !2696
  %map18 = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 0, !dbg !6422
  %arraydecay = getelementptr inbounds [256 x i32], [256 x i32]* %map18, i32 0, i32 0, !dbg !6423
  %convert19 = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 2, !dbg !6424
  %25 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %convert19, align 8, !dbg !6424, !tbaa !6378
  %data20 = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 1, !dbg !6425
  %26 = load i8*, i8** %data20, align 8, !dbg !6425, !tbaa !6382
  %call21 = call %struct.encoding* %cond(i8* %24, i32* %arraydecay, i32 (i8*, i8*)* %25, i8* %26), !dbg !6426
  store %struct.encoding* %call21, %struct.encoding** %enc, align 8, !dbg !6427, !tbaa !2289
  %27 = load %struct.encoding*, %struct.encoding** %enc, align 8, !dbg !6428, !tbaa !2289
  %tobool22 = icmp ne %struct.encoding* %27, null, !dbg !6428
  br i1 %tobool22, label %if.then.23, label %if.end.26, !dbg !6430

if.then.23:                                       ; preds = %if.end.14
  %data24 = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 1, !dbg !6431
  %28 = load i8*, i8** %data24, align 8, !dbg !6431, !tbaa !6382
  %29 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6433, !tbaa !2289
  %m_unknownEncodingData = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %29, i32 0, i32 41, !dbg !6434
  store i8* %28, i8** %m_unknownEncodingData, align 8, !dbg !6435, !tbaa !2707
  %release25 = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 3, !dbg !6436
  %30 = load void (i8*)*, void (i8*)** %release25, align 8, !dbg !6436, !tbaa !6385
  %31 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6437, !tbaa !2289
  %m_unknownEncodingRelease = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %31, i32 0, i32 43, !dbg !6438
  store void (i8*)* %30, void (i8*)** %m_unknownEncodingRelease, align 8, !dbg !6439, !tbaa !2700
  %32 = load %struct.encoding*, %struct.encoding** %enc, align 8, !dbg !6440, !tbaa !2289
  %33 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6441, !tbaa !2289
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %33, i32 0, i32 34, !dbg !6442
  store %struct.encoding* %32, %struct.encoding** %m_encoding, align 8, !dbg !6443, !tbaa !5191
  store i32 0, i32* %retval, !dbg !6444
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6444

if.end.26:                                        ; preds = %if.end.14
  store i32 0, i32* %cleanup.dest.slot, !dbg !6445
  br label %cleanup, !dbg !6445

cleanup:                                          ; preds = %if.end.26, %if.then.23, %if.end
  %34 = bitcast %struct.encoding** %enc to i8*, !dbg !6446
  call void @llvm.lifetime.end(i64 8, i8* %34) #2, !dbg !6446
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.35 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.27, !dbg !6448

if.end.27:                                        ; preds = %cleanup.cont, %for.end
  %release28 = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 3, !dbg !6449
  %35 = load void (i8*)*, void (i8*)** %release28, align 8, !dbg !6449, !tbaa !6385
  %cmp29 = icmp ne void (i8*)* %35, null, !dbg !6451
  br i1 %cmp29, label %if.then.31, label %if.end.34, !dbg !6452

if.then.31:                                       ; preds = %if.end.27
  %release32 = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 3, !dbg !6453
  %36 = load void (i8*)*, void (i8*)** %release32, align 8, !dbg !6453, !tbaa !6385
  %data33 = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 1, !dbg !6454
  %37 = load i8*, i8** %data33, align 8, !dbg !6454, !tbaa !6382
  call void %36(i8* %37), !dbg !6455
  br label %if.end.34, !dbg !6455

if.end.34:                                        ; preds = %if.then.31, %if.end.27
  store i32 0, i32* %cleanup.dest.slot, !dbg !6456
  br label %cleanup.35, !dbg !6456

cleanup.35:                                       ; preds = %if.end.34, %cleanup
  %38 = bitcast i32* %i to i8*, !dbg !6457
  call void @llvm.lifetime.end(i64 4, i8* %38) #2, !dbg !6457
  %39 = bitcast %struct.XML_Encoding* %info to i8*, !dbg !6457
  call void @llvm.lifetime.end(i64 1048, i8* %39) #2, !dbg !6457
  %cleanup.dest.37 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.37, label %unreachable [
    i32 0, label %cleanup.cont.38
    i32 1, label %return
  ]

cleanup.cont.38:                                  ; preds = %cleanup.35
  br label %if.end.39, !dbg !6459

if.end.39:                                        ; preds = %cleanup.cont.38, %entry
  store i32 18, i32* %retval, !dbg !6460
  br label %return, !dbg !6460

return:                                           ; preds = %if.end.39, %cleanup.35
  %40 = load i32, i32* %retval, !dbg !6461
  ret i32 %40, !dbg !6461

unreachable:                                      ; preds = %cleanup.35
  unreachable
}

declare i32 @PyExpat_XmlSizeOfUnknownEncoding() #3

declare %struct.encoding* @PyExpat_XmlInitUnknownEncodingNS(i8*, i32*, i32 (i8*, i8*)*, i8*) #3

declare %struct.encoding* @PyExpat_XmlInitUnknownEncoding(i8*, i32*, i32 (i8*, i8*)*, i8*) #3

; Function Attrs: nounwind uwtable
define internal i32 @doProlog(%struct.XML_ParserStruct* %parser, %struct.encoding* %enc, i8* %s, i8* %end, i32 %tok, i8* %next, i8** %nextPtr, i8 zeroext %haveMore) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %s.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %tok.addr = alloca i32, align 4
  %next.addr = alloca i8*, align 8
  %nextPtr.addr = alloca i8**, align 8
  %haveMore.addr = alloca i8, align 1
  %dtd = alloca %struct.DTD*, align 8
  %eventPP = alloca i8**, align 8
  %eventEndPP = alloca i8**, align 8
  %quant = alloca i32, align 4
  %role = alloca i32, align 4
  %handleDefault = alloca i8, align 1
  %cleanup.dest.slot = alloca i32
  %result = alloca i32, align 4
  %result68 = alloca i32, align 4
  %pubId = alloca i8*, align 8
  %tem = alloca i8*, align 8
  %hadParamEntityRefs = alloca i8, align 1
  %entity = alloca %struct.ENTITY*, align 8
  %hadParamEntityRefs220 = alloca i8, align 1
  %entity229 = alloca %struct.ENTITY*, align 8
  %prefix = alloca i8*, align 8
  %attVal = alloca i8*, align 8
  %result429 = alloca i32, align 4
  %result539 = alloca i32, align 4
  %name771 = alloca i8*, align 8
  %name826 = alloca i8*, align 8
  %tem908 = alloca i8*, align 8
  %systemId937 = alloca i8*, align 8
  %result979 = alloca i32, align 4
  %temp = alloca i8*, align 8
  %temp1014 = alloca i32*, align 8
  %myindex = alloca i32, align 4
  %name1154 = alloca i8*, align 8
  %entity1155 = alloca %struct.ENTITY*, align 8
  %result1216 = alloca i32, align 4
  %betweenDecl1217 = alloca i8, align 1
  %content = alloca %struct.XML_cp*, align 8
  %el = alloca %struct.ELEMENT_TYPE*, align 8
  %name1340 = alloca i8*, align 8
  %nameLen = alloca i32, align 4
  %nxt = alloca i8*, align 8
  %myindex1350 = alloca i32, align 4
  %model = alloca %struct.XML_cp*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1205, metadata !2293), !dbg !6462
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !1206, metadata !2293), !dbg !6463
  store i8* %s, i8** %s.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !1207, metadata !2293), !dbg !6464
  store i8* %end, i8** %end.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !1208, metadata !2293), !dbg !6465
  store i32 %tok, i32* %tok.addr, align 4, !tbaa !3391
  call void @llvm.dbg.declare(metadata i32* %tok.addr, metadata !1209, metadata !2293), !dbg !6466
  store i8* %next, i8** %next.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %next.addr, metadata !1210, metadata !2293), !dbg !6467
  store i8** %nextPtr, i8*** %nextPtr.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8*** %nextPtr.addr, metadata !1211, metadata !2293), !dbg !6468
  store i8 %haveMore, i8* %haveMore.addr, align 1, !tbaa !2307
  call void @llvm.dbg.declare(metadata i8* %haveMore.addr, metadata !1212, metadata !2293), !dbg !6469
  %0 = bitcast %struct.DTD** %dtd to i8*, !dbg !6470
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6470
  call void @llvm.dbg.declare(metadata %struct.DTD** %dtd, metadata !1213, metadata !2293), !dbg !6471
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6472, !tbaa !2289
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 65, !dbg !6473
  %2 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !6473, !tbaa !2478
  store %struct.DTD* %2, %struct.DTD** %dtd, align 8, !dbg !6471, !tbaa !2289
  %3 = bitcast i8*** %eventPP to i8*, !dbg !6474
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !6474
  call void @llvm.dbg.declare(metadata i8*** %eventPP, metadata !1215, metadata !2293), !dbg !6475
  %4 = bitcast i8*** %eventEndPP to i8*, !dbg !6476
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !6476
  call void @llvm.dbg.declare(metadata i8*** %eventEndPP, metadata !1216, metadata !2293), !dbg !6477
  %5 = bitcast i32* %quant to i8*, !dbg !6478
  call void @llvm.lifetime.start(i64 4, i8* %5) #2, !dbg !6478
  call void @llvm.dbg.declare(metadata i32* %quant, metadata !1217, metadata !2293), !dbg !6479
  %6 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6480, !tbaa !2289
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6482, !tbaa !2289
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 34, !dbg !6483
  %8 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !6483, !tbaa !5191
  %cmp = icmp eq %struct.encoding* %6, %8, !dbg !6484
  br i1 %cmp, label %if.then, label %if.else, !dbg !6485

if.then:                                          ; preds = %entry
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6486, !tbaa !2289
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 47, !dbg !6488
  store i8** %m_eventPtr, i8*** %eventPP, align 8, !dbg !6489, !tbaa !2289
  %10 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6490, !tbaa !2289
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %10, i32 0, i32 48, !dbg !6491
  store i8** %m_eventEndPtr, i8*** %eventEndPP, align 8, !dbg !6492, !tbaa !2289
  br label %if.end, !dbg !6493

if.else:                                          ; preds = %entry
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6494, !tbaa !2289
  %m_openInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 50, !dbg !6496
  %12 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities, align 8, !dbg !6496, !tbaa !2664
  %internalEventPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %12, i32 0, i32 0, !dbg !6497
  store i8** %internalEventPtr, i8*** %eventPP, align 8, !dbg !6498, !tbaa !2289
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6499, !tbaa !2289
  %m_openInternalEntities1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 50, !dbg !6500
  %14 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities1, align 8, !dbg !6500, !tbaa !2664
  %internalEventEndPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %14, i32 0, i32 1, !dbg !6501
  store i8** %internalEventEndPtr, i8*** %eventEndPP, align 8, !dbg !6502, !tbaa !2289
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.cond, !dbg !6503

for.cond:                                         ; preds = %cleanup.cont.1495, %if.end
  %15 = bitcast i32* %role to i8*, !dbg !6504
  call void @llvm.lifetime.start(i64 4, i8* %15) #2, !dbg !6504
  call void @llvm.dbg.declare(metadata i32* %role, metadata !1218, metadata !2293), !dbg !6505
  call void @llvm.lifetime.start(i64 1, i8* %handleDefault) #2, !dbg !6506
  call void @llvm.dbg.declare(metadata i8* %handleDefault, metadata !1222, metadata !2293), !dbg !6507
  store i8 1, i8* %handleDefault, align 1, !dbg !6507, !tbaa !2307
  %16 = load i8*, i8** %s.addr, align 8, !dbg !6508, !tbaa !2289
  %17 = load i8**, i8*** %eventPP, align 8, !dbg !6509, !tbaa !2289
  store i8* %16, i8** %17, align 8, !dbg !6510, !tbaa !2289
  %18 = load i8*, i8** %next.addr, align 8, !dbg !6511, !tbaa !2289
  %19 = load i8**, i8*** %eventEndPP, align 8, !dbg !6512, !tbaa !2289
  store i8* %18, i8** %19, align 8, !dbg !6513, !tbaa !2289
  %20 = load i32, i32* %tok.addr, align 4, !dbg !6514, !tbaa !3391
  %cmp2 = icmp sle i32 %20, 0, !dbg !6516
  br i1 %cmp2, label %if.then.3, label %if.end.33, !dbg !6517

if.then.3:                                        ; preds = %for.cond
  %21 = load i8, i8* %haveMore.addr, align 1, !dbg !6518, !tbaa !2307
  %conv = zext i8 %21 to i32, !dbg !6518
  %tobool = icmp ne i32 %conv, 0, !dbg !6518
  br i1 %tobool, label %land.lhs.true, label %if.end.7, !dbg !6521

land.lhs.true:                                    ; preds = %if.then.3
  %22 = load i32, i32* %tok.addr, align 4, !dbg !6522, !tbaa !3391
  %cmp4 = icmp ne i32 %22, 0, !dbg !6524
  br i1 %cmp4, label %if.then.6, label %if.end.7, !dbg !6525

if.then.6:                                        ; preds = %land.lhs.true
  %23 = load i8*, i8** %s.addr, align 8, !dbg !6526, !tbaa !2289
  %24 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !6528, !tbaa !2289
  store i8* %23, i8** %24, align 8, !dbg !6529, !tbaa !2289
  store i32 0, i32* %retval, !dbg !6530
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1492, !dbg !6530

if.end.7:                                         ; preds = %land.lhs.true, %if.then.3
  %25 = load i32, i32* %tok.addr, align 4, !dbg !6531, !tbaa !3391
  switch i32 %25, label %sw.default [
    i32 0, label %sw.bb
    i32 -1, label %sw.bb.8
    i32 -2, label %sw.bb.9
    i32 -15, label %sw.bb.10
    i32 -4, label %sw.bb.11
  ], !dbg !6532

sw.bb:                                            ; preds = %if.end.7
  %26 = load i8*, i8** %next.addr, align 8, !dbg !6533, !tbaa !2289
  %27 = load i8**, i8*** %eventPP, align 8, !dbg !6535, !tbaa !2289
  store i8* %26, i8** %27, align 8, !dbg !6536, !tbaa !2289
  store i32 4, i32* %retval, !dbg !6537
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1492, !dbg !6537

sw.bb.8:                                          ; preds = %if.end.7
  store i32 5, i32* %retval, !dbg !6538
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1492, !dbg !6538

sw.bb.9:                                          ; preds = %if.end.7
  store i32 6, i32* %retval, !dbg !6539
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1492, !dbg !6539

sw.bb.10:                                         ; preds = %if.end.7
  %28 = load i32, i32* %tok.addr, align 4, !dbg !6540, !tbaa !3391
  %sub = sub i32 0, %28, !dbg !6541
  store i32 %sub, i32* %tok.addr, align 4, !dbg !6542, !tbaa !3391
  br label %sw.epilog, !dbg !6543

sw.bb.11:                                         ; preds = %if.end.7
  %29 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6544, !tbaa !2289
  %30 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6546, !tbaa !2289
  %m_encoding12 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %30, i32 0, i32 34, !dbg !6547
  %31 = load %struct.encoding*, %struct.encoding** %m_encoding12, align 8, !dbg !6547, !tbaa !5191
  %cmp13 = icmp ne %struct.encoding* %29, %31, !dbg !6548
  br i1 %cmp13, label %land.lhs.true.15, label %if.end.19, !dbg !6549

land.lhs.true.15:                                 ; preds = %sw.bb.11
  %32 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6550, !tbaa !2289
  %m_openInternalEntities16 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %32, i32 0, i32 50, !dbg !6552
  %33 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities16, align 8, !dbg !6552, !tbaa !2664
  %betweenDecl = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %33, i32 0, i32 5, !dbg !6553
  %34 = load i8, i8* %betweenDecl, align 1, !dbg !6553, !tbaa !6554
  %tobool17 = icmp ne i8 %34, 0, !dbg !6555
  br i1 %tobool17, label %if.end.19, label %if.then.18, !dbg !6556

if.then.18:                                       ; preds = %land.lhs.true.15
  %35 = load i8*, i8** %s.addr, align 8, !dbg !6557, !tbaa !2289
  %36 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !6559, !tbaa !2289
  store i8* %35, i8** %36, align 8, !dbg !6560, !tbaa !2289
  store i32 0, i32* %retval, !dbg !6561
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1492, !dbg !6561

if.end.19:                                        ; preds = %land.lhs.true.15, %sw.bb.11
  %37 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6562, !tbaa !2289
  %m_isParamEntity = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %37, i32 0, i32 86, !dbg !6564
  %38 = load i8, i8* %m_isParamEntity, align 1, !dbg !6564, !tbaa !3056
  %conv20 = zext i8 %38 to i32, !dbg !6565
  %tobool21 = icmp ne i32 %conv20, 0, !dbg !6565
  br i1 %tobool21, label %if.then.25, label %lor.lhs.false, !dbg !6566

lor.lhs.false:                                    ; preds = %if.end.19
  %39 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6567, !tbaa !2289
  %40 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6569, !tbaa !2289
  %m_encoding22 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %40, i32 0, i32 34, !dbg !6570
  %41 = load %struct.encoding*, %struct.encoding** %m_encoding22, align 8, !dbg !6570, !tbaa !5191
  %cmp23 = icmp ne %struct.encoding* %39, %41, !dbg !6571
  br i1 %cmp23, label %if.then.25, label %if.end.31, !dbg !6572

if.then.25:                                       ; preds = %lor.lhs.false, %if.end.19
  %42 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6573, !tbaa !2289
  %m_prologState = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %42, i32 0, i32 44, !dbg !6576
  %handler = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState, i32 0, i32 0, !dbg !6577
  %43 = load i32 (%struct.prolog_state*, i32, i8*, i8*, %struct.encoding*)*, i32 (%struct.prolog_state*, i32, i8*, i8*, %struct.encoding*)** %handler, align 8, !dbg !6577, !tbaa !6578
  %44 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6579, !tbaa !2289
  %m_prologState26 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %44, i32 0, i32 44, !dbg !6580
  %45 = load i8*, i8** %end.addr, align 8, !dbg !6581, !tbaa !2289
  %46 = load i8*, i8** %end.addr, align 8, !dbg !6582, !tbaa !2289
  %47 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6583, !tbaa !2289
  %call = call i32 %43(%struct.prolog_state* %m_prologState26, i32 -4, i8* %45, i8* %46, %struct.encoding* %47), !dbg !6584
  %cmp27 = icmp eq i32 %call, -1, !dbg !6585
  br i1 %cmp27, label %if.then.29, label %if.end.30, !dbg !6586

if.then.29:                                       ; preds = %if.then.25
  store i32 29, i32* %retval, !dbg !6587
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1492, !dbg !6587

if.end.30:                                        ; preds = %if.then.25
  %48 = load i8*, i8** %s.addr, align 8, !dbg !6588, !tbaa !2289
  %49 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !6589, !tbaa !2289
  store i8* %48, i8** %49, align 8, !dbg !6590, !tbaa !2289
  store i32 0, i32* %retval, !dbg !6591
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1492, !dbg !6591

if.end.31:                                        ; preds = %lor.lhs.false
  store i32 3, i32* %retval, !dbg !6592
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1492, !dbg !6592

sw.default:                                       ; preds = %if.end.7
  %50 = load i32, i32* %tok.addr, align 4, !dbg !6593, !tbaa !3391
  %sub32 = sub i32 0, %50, !dbg !6594
  store i32 %sub32, i32* %tok.addr, align 4, !dbg !6595, !tbaa !3391
  %51 = load i8*, i8** %end.addr, align 8, !dbg !6596, !tbaa !2289
  store i8* %51, i8** %next.addr, align 8, !dbg !6597, !tbaa !2289
  br label %sw.epilog, !dbg !6598

sw.epilog:                                        ; preds = %sw.default, %sw.bb.10
  br label %if.end.33, !dbg !6599

if.end.33:                                        ; preds = %sw.epilog, %for.cond
  %52 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6600, !tbaa !2289
  %m_prologState34 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %52, i32 0, i32 44, !dbg !6601
  %handler35 = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState34, i32 0, i32 0, !dbg !6602
  %53 = load i32 (%struct.prolog_state*, i32, i8*, i8*, %struct.encoding*)*, i32 (%struct.prolog_state*, i32, i8*, i8*, %struct.encoding*)** %handler35, align 8, !dbg !6602, !tbaa !6578
  %54 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6603, !tbaa !2289
  %m_prologState36 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %54, i32 0, i32 44, !dbg !6604
  %55 = load i32, i32* %tok.addr, align 4, !dbg !6605, !tbaa !3391
  %56 = load i8*, i8** %s.addr, align 8, !dbg !6606, !tbaa !2289
  %57 = load i8*, i8** %next.addr, align 8, !dbg !6607, !tbaa !2289
  %58 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6608, !tbaa !2289
  %call37 = call i32 %53(%struct.prolog_state* %m_prologState36, i32 %55, i8* %56, i8* %57, %struct.encoding* %58), !dbg !6609
  store i32 %call37, i32* %role, align 4, !dbg !6610, !tbaa !3391
  %59 = load i32, i32* %role, align 4, !dbg !6611, !tbaa !3391
  switch i32 %59, label %sw.epilog.1478 [
    i32 1, label %sw.bb.38
    i32 4, label %sw.bb.45
    i32 7, label %sw.bb.56
    i32 57, label %sw.bb.67
    i32 6, label %sw.bb.78
    i32 14, label %sw.bb.106
    i32 8, label %sw.bb.142
    i32 2, label %sw.bb.216
    i32 34, label %sw.bb.274
    i32 22, label %sw.bb.280
    i32 23, label %sw.bb.286
    i32 24, label %sw.bb.289
    i32 25, label %sw.bb.292
    i32 26, label %sw.bb.294
    i32 27, label %sw.bb.296
    i32 28, label %sw.bb.298
    i32 29, label %sw.bb.300
    i32 30, label %sw.bb.302
    i32 31, label %sw.bb.311
    i32 32, label %sw.bb.311
    i32 35, label %sw.bb.343
    i32 36, label %sw.bb.343
    i32 37, label %sw.bb.425
    i32 38, label %sw.bb.425
    i32 12, label %sw.bb.535
    i32 5, label %sw.bb.592
    i32 13, label %sw.bb.648
    i32 15, label %sw.bb.684
    i32 16, label %sw.bb.709
    i32 9, label %sw.bb.762
    i32 10, label %sw.bb.822
    i32 18, label %sw.bb.884
    i32 21, label %sw.bb.899
    i32 19, label %sw.bb.930
    i32 20, label %sw.bb.960
    i32 -1, label %sw.bb.974
    i32 58, label %sw.bb.978
    i32 44, label %sw.bb.996
    i32 50, label %sw.bb.1069
    i32 49, label %sw.bb.1093
    i32 60, label %sw.bb.1146
    i32 59, label %sw.bb.1146
    i32 40, label %sw.bb.1273
    i32 41, label %sw.bb.1286
    i32 42, label %sw.bb.1286
    i32 43, label %sw.bb.1315
    i32 51, label %sw.bb.1333
    i32 53, label %sw.bb.1334
    i32 52, label %sw.bb.1335
    i32 54, label %sw.bb.1336
    i32 45, label %sw.bb.1390
    i32 47, label %sw.bb.1391
    i32 46, label %sw.bb.1392
    i32 48, label %sw.bb.1393
    i32 55, label %sw.bb.1432
    i32 56, label %sw.bb.1437
    i32 0, label %sw.bb.1442
    i32 3, label %sw.bb.1445
    i32 11, label %sw.bb.1450
    i32 17, label %sw.bb.1459
    i32 33, label %sw.bb.1464
    i32 39, label %sw.bb.1473
  ], !dbg !6612

sw.bb.38:                                         ; preds = %if.end.33
  %60 = bitcast i32* %result to i8*, !dbg !6613
  call void @llvm.lifetime.start(i64 4, i8* %60) #2, !dbg !6613
  call void @llvm.dbg.declare(metadata i32* %result, metadata !1223, metadata !2293), !dbg !6614
  %61 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6615, !tbaa !2289
  %62 = load i8*, i8** %s.addr, align 8, !dbg !6616, !tbaa !2289
  %63 = load i8*, i8** %next.addr, align 8, !dbg !6617, !tbaa !2289
  %call39 = call i32 @processXmlDecl(%struct.XML_ParserStruct* %61, i32 0, i8* %62, i8* %63), !dbg !6618
  store i32 %call39, i32* %result, align 4, !dbg !6614, !tbaa !2307
  %64 = load i32, i32* %result, align 4, !dbg !6619, !tbaa !2307
  %cmp40 = icmp ne i32 %64, 0, !dbg !6621
  br i1 %cmp40, label %if.then.42, label %if.end.43, !dbg !6622

if.then.42:                                       ; preds = %sw.bb.38
  %65 = load i32, i32* %result, align 4, !dbg !6623, !tbaa !2307
  store i32 %65, i32* %retval, !dbg !6624
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6624

if.end.43:                                        ; preds = %sw.bb.38
  %66 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6625, !tbaa !2289
  %m_encoding44 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %66, i32 0, i32 34, !dbg !6626
  %67 = load %struct.encoding*, %struct.encoding** %m_encoding44, align 8, !dbg !6626, !tbaa !5191
  store %struct.encoding* %67, %struct.encoding** %enc.addr, align 8, !dbg !6627, !tbaa !2289
  store i8 0, i8* %handleDefault, align 1, !dbg !6628, !tbaa !2307
  store i32 0, i32* %cleanup.dest.slot, !dbg !6629
  br label %cleanup, !dbg !6629

cleanup:                                          ; preds = %if.end.43, %if.then.42
  %68 = bitcast i32* %result to i8*, !dbg !6630
  call void @llvm.lifetime.end(i64 4, i8* %68) #2, !dbg !6630
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.1492 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %sw.epilog.1478, !dbg !6632

sw.bb.45:                                         ; preds = %if.end.33
  %69 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6633, !tbaa !2289
  %m_startDoctypeDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %69, i32 0, i32 19, !dbg !6635
  %70 = load void (i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i32)** %m_startDoctypeDeclHandler, align 8, !dbg !6635, !tbaa !2878
  %tobool46 = icmp ne void (i8*, i8*, i8*, i8*, i32)* %70, null, !dbg !6636
  br i1 %tobool46, label %if.then.47, label %if.end.55, !dbg !6637

if.then.47:                                       ; preds = %sw.bb.45
  %71 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6638, !tbaa !2289
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %71, i32 0, i32 79, !dbg !6640
  %72 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6641, !tbaa !2289
  %73 = load i8*, i8** %s.addr, align 8, !dbg !6642, !tbaa !2289
  %74 = load i8*, i8** %next.addr, align 8, !dbg !6643, !tbaa !2289
  %call48 = call i8* @poolStoreString(%struct.STRING_POOL* %m_tempPool, %struct.encoding* %72, i8* %73, i8* %74), !dbg !6644
  %75 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6645, !tbaa !2289
  %m_doctypeName = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %75, i32 0, i32 55, !dbg !6646
  store i8* %call48, i8** %m_doctypeName, align 8, !dbg !6647, !tbaa !2967
  %76 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6648, !tbaa !2289
  %m_doctypeName49 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %76, i32 0, i32 55, !dbg !6650
  %77 = load i8*, i8** %m_doctypeName49, align 8, !dbg !6650, !tbaa !2967
  %tobool50 = icmp ne i8* %77, null, !dbg !6651
  br i1 %tobool50, label %if.end.52, label %if.then.51, !dbg !6652

if.then.51:                                       ; preds = %if.then.47
  store i32 1, i32* %retval, !dbg !6653
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1492, !dbg !6653

if.end.52:                                        ; preds = %if.then.47
  %78 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6654, !tbaa !2289
  %m_tempPool53 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %78, i32 0, i32 79, !dbg !6655
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool53, i32 0, i32 3, !dbg !6656
  %79 = load i8*, i8** %ptr, align 8, !dbg !6656, !tbaa !2798
  %80 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6657, !tbaa !2289
  %m_tempPool54 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %80, i32 0, i32 79, !dbg !6658
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool54, i32 0, i32 4, !dbg !6659
  store i8* %79, i8** %start, align 8, !dbg !6660, !tbaa !2794
  %81 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6661, !tbaa !2289
  %m_doctypePubid = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %81, i32 0, i32 57, !dbg !6662
  store i8* null, i8** %m_doctypePubid, align 8, !dbg !6663, !tbaa !2975
  store i8 0, i8* %handleDefault, align 1, !dbg !6664, !tbaa !2307
  br label %if.end.55, !dbg !6665

if.end.55:                                        ; preds = %if.end.52, %sw.bb.45
  %82 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6666, !tbaa !2289
  %m_doctypeSysid = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %82, i32 0, i32 56, !dbg !6667
  store i8* null, i8** %m_doctypeSysid, align 8, !dbg !6668, !tbaa !2971
  br label %sw.epilog.1478, !dbg !6669

sw.bb.56:                                         ; preds = %if.end.33
  %83 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6670, !tbaa !2289
  %m_startDoctypeDeclHandler57 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %83, i32 0, i32 19, !dbg !6672
  %84 = load void (i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i32)** %m_startDoctypeDeclHandler57, align 8, !dbg !6672, !tbaa !2878
  %tobool58 = icmp ne void (i8*, i8*, i8*, i8*, i32)* %84, null, !dbg !6673
  br i1 %tobool58, label %if.then.59, label %if.end.66, !dbg !6674

if.then.59:                                       ; preds = %sw.bb.56
  %85 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6675, !tbaa !2289
  %m_startDoctypeDeclHandler60 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %85, i32 0, i32 19, !dbg !6677
  %86 = load void (i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i32)** %m_startDoctypeDeclHandler60, align 8, !dbg !6677, !tbaa !2878
  %87 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6678, !tbaa !2289
  %m_handlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %87, i32 0, i32 1, !dbg !6679
  %88 = load i8*, i8** %m_handlerArg, align 8, !dbg !6679, !tbaa !2842
  %89 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6680, !tbaa !2289
  %m_doctypeName61 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %89, i32 0, i32 55, !dbg !6681
  %90 = load i8*, i8** %m_doctypeName61, align 8, !dbg !6681, !tbaa !2967
  %91 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6682, !tbaa !2289
  %m_doctypeSysid62 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %91, i32 0, i32 56, !dbg !6683
  %92 = load i8*, i8** %m_doctypeSysid62, align 8, !dbg !6683, !tbaa !2971
  %93 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6684, !tbaa !2289
  %m_doctypePubid63 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %93, i32 0, i32 57, !dbg !6685
  %94 = load i8*, i8** %m_doctypePubid63, align 8, !dbg !6685, !tbaa !2975
  call void %86(i8* %88, i8* %90, i8* %92, i8* %94, i32 1), !dbg !6686
  %95 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6687, !tbaa !2289
  %m_doctypeName64 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %95, i32 0, i32 55, !dbg !6688
  store i8* null, i8** %m_doctypeName64, align 8, !dbg !6689, !tbaa !2967
  %96 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6690, !tbaa !2289
  %m_tempPool65 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %96, i32 0, i32 79, !dbg !6691
  call void @poolClear(%struct.STRING_POOL* %m_tempPool65), !dbg !6692
  store i8 0, i8* %handleDefault, align 1, !dbg !6693, !tbaa !2307
  br label %if.end.66, !dbg !6694

if.end.66:                                        ; preds = %if.then.59, %sw.bb.56
  br label %sw.epilog.1478, !dbg !6695

sw.bb.67:                                         ; preds = %if.end.33
  %97 = bitcast i32* %result68 to i8*, !dbg !6696
  call void @llvm.lifetime.start(i64 4, i8* %97) #2, !dbg !6696
  call void @llvm.dbg.declare(metadata i32* %result68, metadata !1226, metadata !2293), !dbg !6697
  %98 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6698, !tbaa !2289
  %99 = load i8*, i8** %s.addr, align 8, !dbg !6699, !tbaa !2289
  %100 = load i8*, i8** %next.addr, align 8, !dbg !6700, !tbaa !2289
  %call69 = call i32 @processXmlDecl(%struct.XML_ParserStruct* %98, i32 1, i8* %99, i8* %100), !dbg !6701
  store i32 %call69, i32* %result68, align 4, !dbg !6697, !tbaa !2307
  %101 = load i32, i32* %result68, align 4, !dbg !6702, !tbaa !2307
  %cmp70 = icmp ne i32 %101, 0, !dbg !6704
  br i1 %cmp70, label %if.then.72, label %if.end.73, !dbg !6705

if.then.72:                                       ; preds = %sw.bb.67
  %102 = load i32, i32* %result68, align 4, !dbg !6706, !tbaa !2307
  store i32 %102, i32* %retval, !dbg !6707
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.75, !dbg !6707

if.end.73:                                        ; preds = %sw.bb.67
  %103 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6708, !tbaa !2289
  %m_encoding74 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %103, i32 0, i32 34, !dbg !6709
  %104 = load %struct.encoding*, %struct.encoding** %m_encoding74, align 8, !dbg !6709, !tbaa !5191
  store %struct.encoding* %104, %struct.encoding** %enc.addr, align 8, !dbg !6710, !tbaa !2289
  store i8 0, i8* %handleDefault, align 1, !dbg !6711, !tbaa !2307
  store i32 0, i32* %cleanup.dest.slot, !dbg !6712
  br label %cleanup.75, !dbg !6712

cleanup.75:                                       ; preds = %if.end.73, %if.then.72
  %105 = bitcast i32* %result68 to i8*, !dbg !6713
  call void @llvm.lifetime.end(i64 4, i8* %105) #2, !dbg !6713
  %cleanup.dest.76 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.76, label %cleanup.1492 [
    i32 0, label %cleanup.cont.77
  ]

cleanup.cont.77:                                  ; preds = %cleanup.75
  br label %sw.epilog.1478, !dbg !6714

sw.bb.78:                                         ; preds = %if.end.33
  %106 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6715, !tbaa !2289
  %m_useForeignDTD = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %106, i32 0, i32 87, !dbg !6716
  store i8 0, i8* %m_useForeignDTD, align 1, !dbg !6717, !tbaa !3060
  %107 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6718, !tbaa !2289
  %108 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6719, !tbaa !2289
  %paramEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %108, i32 0, i32 10, !dbg !6720
  %call79 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %107, %struct.HASH_TABLE* %paramEntities, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @doProlog.externalSubsetName, i32 0, i32 0), i64 64), !dbg !6721
  %109 = bitcast %struct.NAMED* %call79 to %struct.ENTITY*, !dbg !6722
  %110 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6723, !tbaa !2289
  %m_declEntity = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %110, i32 0, i32 54, !dbg !6724
  store %struct.ENTITY* %109, %struct.ENTITY** %m_declEntity, align 8, !dbg !6725, !tbaa !2963
  %111 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6726, !tbaa !2289
  %m_declEntity80 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %111, i32 0, i32 54, !dbg !6728
  %112 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity80, align 8, !dbg !6728, !tbaa !2963
  %tobool81 = icmp ne %struct.ENTITY* %112, null, !dbg !6729
  br i1 %tobool81, label %if.end.83, label %if.then.82, !dbg !6730

if.then.82:                                       ; preds = %sw.bb.78
  store i32 1, i32* %retval, !dbg !6731
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1492, !dbg !6731

if.end.83:                                        ; preds = %sw.bb.78
  %113 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6732, !tbaa !2289
  %hasParamEntityRefs = getelementptr inbounds %struct.DTD, %struct.DTD* %113, i32 0, i32 7, !dbg !6733
  store i8 1, i8* %hasParamEntityRefs, align 1, !dbg !6734, !tbaa !3183
  %114 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6735, !tbaa !2289
  %m_startDoctypeDeclHandler84 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %114, i32 0, i32 19, !dbg !6736
  %115 = load void (i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i32)** %m_startDoctypeDeclHandler84, align 8, !dbg !6736, !tbaa !2878
  %tobool85 = icmp ne void (i8*, i8*, i8*, i8*, i32)* %115, null, !dbg !6737
  br i1 %tobool85, label %if.then.86, label %if.end.105, !dbg !6738

if.then.86:                                       ; preds = %if.end.83
  %116 = bitcast i8** %pubId to i8*, !dbg !6739
  call void @llvm.lifetime.start(i64 8, i8* %116) #2, !dbg !6739
  call void @llvm.dbg.declare(metadata i8** %pubId, metadata !1228, metadata !2293), !dbg !6740
  %117 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6741, !tbaa !2289
  %isPublicId = getelementptr inbounds %struct.encoding, %struct.encoding* %117, i32 0, i32 10, !dbg !6743
  %118 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %isPublicId, align 8, !dbg !6743, !tbaa !6744
  %119 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6745, !tbaa !2289
  %120 = load i8*, i8** %s.addr, align 8, !dbg !6746, !tbaa !2289
  %121 = load i8*, i8** %next.addr, align 8, !dbg !6747, !tbaa !2289
  %122 = load i8**, i8*** %eventPP, align 8, !dbg !6748, !tbaa !2289
  %call87 = call i32 %118(%struct.encoding* %119, i8* %120, i8* %121, i8** %122), !dbg !6749
  %tobool88 = icmp ne i32 %call87, 0, !dbg !6749
  br i1 %tobool88, label %if.end.90, label %if.then.89, !dbg !6750

if.then.89:                                       ; preds = %if.then.86
  store i32 32, i32* %retval, !dbg !6751
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.104, !dbg !6751

if.end.90:                                        ; preds = %if.then.86
  %123 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6752, !tbaa !2289
  %m_tempPool91 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %123, i32 0, i32 79, !dbg !6753
  %124 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6754, !tbaa !2289
  %125 = load i8*, i8** %s.addr, align 8, !dbg !6755, !tbaa !2289
  %126 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6756, !tbaa !2289
  %minBytesPerChar = getelementptr inbounds %struct.encoding, %struct.encoding* %126, i32 0, i32 13, !dbg !6757
  %127 = load i32, i32* %minBytesPerChar, align 4, !dbg !6757, !tbaa !6758
  %idx.ext = sext i32 %127 to i64, !dbg !6759
  %add.ptr = getelementptr i8, i8* %125, i64 %idx.ext, !dbg !6759
  %128 = load i8*, i8** %next.addr, align 8, !dbg !6760, !tbaa !2289
  %129 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6761, !tbaa !2289
  %minBytesPerChar92 = getelementptr inbounds %struct.encoding, %struct.encoding* %129, i32 0, i32 13, !dbg !6762
  %130 = load i32, i32* %minBytesPerChar92, align 4, !dbg !6762, !tbaa !6758
  %idx.ext93 = sext i32 %130 to i64, !dbg !6763
  %idx.neg = sub i64 0, %idx.ext93, !dbg !6763
  %add.ptr94 = getelementptr i8, i8* %128, i64 %idx.neg, !dbg !6763
  %call95 = call i8* @poolStoreString(%struct.STRING_POOL* %m_tempPool91, %struct.encoding* %124, i8* %add.ptr, i8* %add.ptr94), !dbg !6764
  store i8* %call95, i8** %pubId, align 8, !dbg !6765, !tbaa !2289
  %131 = load i8*, i8** %pubId, align 8, !dbg !6766, !tbaa !2289
  %tobool96 = icmp ne i8* %131, null, !dbg !6766
  br i1 %tobool96, label %if.end.98, label %if.then.97, !dbg !6768

if.then.97:                                       ; preds = %if.end.90
  store i32 1, i32* %retval, !dbg !6769
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.104, !dbg !6769

if.end.98:                                        ; preds = %if.end.90
  %132 = load i8*, i8** %pubId, align 8, !dbg !6770, !tbaa !2289
  call void @normalizePublicId(i8* %132), !dbg !6771
  %133 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6772, !tbaa !2289
  %m_tempPool99 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %133, i32 0, i32 79, !dbg !6773
  %ptr100 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool99, i32 0, i32 3, !dbg !6774
  %134 = load i8*, i8** %ptr100, align 8, !dbg !6774, !tbaa !2798
  %135 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6775, !tbaa !2289
  %m_tempPool101 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %135, i32 0, i32 79, !dbg !6776
  %start102 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool101, i32 0, i32 4, !dbg !6777
  store i8* %134, i8** %start102, align 8, !dbg !6778, !tbaa !2794
  %136 = load i8*, i8** %pubId, align 8, !dbg !6779, !tbaa !2289
  %137 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6780, !tbaa !2289
  %m_doctypePubid103 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %137, i32 0, i32 57, !dbg !6781
  store i8* %136, i8** %m_doctypePubid103, align 8, !dbg !6782, !tbaa !2975
  store i8 0, i8* %handleDefault, align 1, !dbg !6783, !tbaa !2307
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.104, !dbg !6784

cleanup.104:                                      ; preds = %if.end.98, %if.then.97, %if.then.89
  %138 = bitcast i8** %pubId to i8*, !dbg !6785
  call void @llvm.lifetime.end(i64 8, i8* %138) #2, !dbg !6785
  %cleanup.dest112 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest112, label %cleanup.1492 [
    i32 6, label %alreadyChecked
  ]

if.end.105:                                       ; preds = %if.end.83
  br label %sw.bb.106, !dbg !6786

sw.bb.106:                                        ; preds = %if.end.33, %if.end.105
  %139 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6788, !tbaa !2289
  %isPublicId107 = getelementptr inbounds %struct.encoding, %struct.encoding* %139, i32 0, i32 10, !dbg !6790
  %140 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %isPublicId107, align 8, !dbg !6790, !tbaa !6744
  %141 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6791, !tbaa !2289
  %142 = load i8*, i8** %s.addr, align 8, !dbg !6792, !tbaa !2289
  %143 = load i8*, i8** %next.addr, align 8, !dbg !6793, !tbaa !2289
  %144 = load i8**, i8*** %eventPP, align 8, !dbg !6794, !tbaa !2289
  %call108 = call i32 %140(%struct.encoding* %141, i8* %142, i8* %143, i8** %144), !dbg !6795
  %tobool109 = icmp ne i32 %call108, 0, !dbg !6795
  br i1 %tobool109, label %if.end.111, label %if.then.110, !dbg !6796

if.then.110:                                      ; preds = %sw.bb.106
  store i32 32, i32* %retval, !dbg !6797
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1492, !dbg !6797

if.end.111:                                       ; preds = %sw.bb.106
  br label %alreadyChecked, !dbg !6798

alreadyChecked:                                   ; preds = %if.end.111, %cleanup.104
  %145 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6800, !tbaa !2289
  %keepProcessing = getelementptr inbounds %struct.DTD, %struct.DTD* %145, i32 0, i32 6, !dbg !6801
  %146 = load i8, i8* %keepProcessing, align 1, !dbg !6801, !tbaa !3179
  %conv113 = zext i8 %146 to i32, !dbg !6800
  %tobool114 = icmp ne i32 %conv113, 0, !dbg !6800
  br i1 %tobool114, label %land.lhs.true.115, label %if.end.141, !dbg !6802

land.lhs.true.115:                                ; preds = %alreadyChecked
  %147 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6803, !tbaa !2289
  %m_declEntity116 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %147, i32 0, i32 54, !dbg !6805
  %148 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity116, align 8, !dbg !6805, !tbaa !2963
  %tobool117 = icmp ne %struct.ENTITY* %148, null, !dbg !6806
  br i1 %tobool117, label %if.then.118, label %if.end.141, !dbg !6807

if.then.118:                                      ; preds = %land.lhs.true.115
  %149 = bitcast i8** %tem to i8*, !dbg !6808
  call void @llvm.lifetime.start(i64 8, i8* %149) #2, !dbg !6808
  call void @llvm.dbg.declare(metadata i8** %tem, metadata !1231, metadata !2293), !dbg !6809
  %150 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6810, !tbaa !2289
  %pool = getelementptr inbounds %struct.DTD, %struct.DTD* %150, i32 0, i32 4, !dbg !6811
  %151 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6812, !tbaa !2289
  %152 = load i8*, i8** %s.addr, align 8, !dbg !6813, !tbaa !2289
  %153 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6814, !tbaa !2289
  %minBytesPerChar119 = getelementptr inbounds %struct.encoding, %struct.encoding* %153, i32 0, i32 13, !dbg !6815
  %154 = load i32, i32* %minBytesPerChar119, align 4, !dbg !6815, !tbaa !6758
  %idx.ext120 = sext i32 %154 to i64, !dbg !6816
  %add.ptr121 = getelementptr i8, i8* %152, i64 %idx.ext120, !dbg !6816
  %155 = load i8*, i8** %next.addr, align 8, !dbg !6817, !tbaa !2289
  %156 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6818, !tbaa !2289
  %minBytesPerChar122 = getelementptr inbounds %struct.encoding, %struct.encoding* %156, i32 0, i32 13, !dbg !6819
  %157 = load i32, i32* %minBytesPerChar122, align 4, !dbg !6819, !tbaa !6758
  %idx.ext123 = sext i32 %157 to i64, !dbg !6820
  %idx.neg124 = sub i64 0, %idx.ext123, !dbg !6820
  %add.ptr125 = getelementptr i8, i8* %155, i64 %idx.neg124, !dbg !6820
  %call126 = call i8* @poolStoreString(%struct.STRING_POOL* %pool, %struct.encoding* %151, i8* %add.ptr121, i8* %add.ptr125), !dbg !6821
  store i8* %call126, i8** %tem, align 8, !dbg !6809, !tbaa !2289
  %158 = load i8*, i8** %tem, align 8, !dbg !6822, !tbaa !2289
  %tobool127 = icmp ne i8* %158, null, !dbg !6822
  br i1 %tobool127, label %if.end.129, label %if.then.128, !dbg !6824

if.then.128:                                      ; preds = %if.then.118
  store i32 1, i32* %retval, !dbg !6825
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.138, !dbg !6825

if.end.129:                                       ; preds = %if.then.118
  %159 = load i8*, i8** %tem, align 8, !dbg !6826, !tbaa !2289
  call void @normalizePublicId(i8* %159), !dbg !6827
  %160 = load i8*, i8** %tem, align 8, !dbg !6828, !tbaa !2289
  %161 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6829, !tbaa !2289
  %m_declEntity130 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %161, i32 0, i32 54, !dbg !6830
  %162 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity130, align 8, !dbg !6830, !tbaa !2963
  %publicId = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %162, i32 0, i32 6, !dbg !6831
  store i8* %160, i8** %publicId, align 8, !dbg !6832, !tbaa !6833
  %163 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6834, !tbaa !2289
  %pool131 = getelementptr inbounds %struct.DTD, %struct.DTD* %163, i32 0, i32 4, !dbg !6835
  %ptr132 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool131, i32 0, i32 3, !dbg !6836
  %164 = load i8*, i8** %ptr132, align 8, !dbg !6836, !tbaa !2798
  %165 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6837, !tbaa !2289
  %pool133 = getelementptr inbounds %struct.DTD, %struct.DTD* %165, i32 0, i32 4, !dbg !6838
  %start134 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool133, i32 0, i32 4, !dbg !6839
  store i8* %164, i8** %start134, align 8, !dbg !6840, !tbaa !2794
  %166 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6841, !tbaa !2289
  %m_entityDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %166, i32 0, i32 32, !dbg !6843
  %167 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler, align 8, !dbg !6843, !tbaa !2927
  %tobool135 = icmp ne void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %167, null, !dbg !6844
  br i1 %tobool135, label %if.then.136, label %if.end.137, !dbg !6845

if.then.136:                                      ; preds = %if.end.129
  store i8 0, i8* %handleDefault, align 1, !dbg !6846, !tbaa !2307
  br label %if.end.137, !dbg !6847

if.end.137:                                       ; preds = %if.then.136, %if.end.129
  store i32 0, i32* %cleanup.dest.slot, !dbg !6848
  br label %cleanup.138, !dbg !6848

cleanup.138:                                      ; preds = %if.end.137, %if.then.128
  %168 = bitcast i8** %tem to i8*, !dbg !6849
  call void @llvm.lifetime.end(i64 8, i8* %168) #2, !dbg !6849
  %cleanup.dest.139 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.139, label %cleanup.1492 [
    i32 0, label %cleanup.cont.140
  ]

cleanup.cont.140:                                 ; preds = %cleanup.138
  br label %if.end.141, !dbg !6850

if.end.141:                                       ; preds = %cleanup.cont.140, %land.lhs.true.115, %alreadyChecked
  br label %sw.epilog.1478, !dbg !6851

sw.bb.142:                                        ; preds = %if.end.33
  %169 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6852, !tbaa !2289
  %m_doctypeName143 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %169, i32 0, i32 55, !dbg !6854
  %170 = load i8*, i8** %m_doctypeName143, align 8, !dbg !6854, !tbaa !2967
  %tobool144 = icmp ne i8* %170, null, !dbg !6855
  br i1 %tobool144, label %if.then.145, label %if.end.152, !dbg !6856

if.then.145:                                      ; preds = %sw.bb.142
  %171 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6857, !tbaa !2289
  %m_startDoctypeDeclHandler146 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %171, i32 0, i32 19, !dbg !6859
  %172 = load void (i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i32)** %m_startDoctypeDeclHandler146, align 8, !dbg !6859, !tbaa !2878
  %173 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6860, !tbaa !2289
  %m_handlerArg147 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %173, i32 0, i32 1, !dbg !6861
  %174 = load i8*, i8** %m_handlerArg147, align 8, !dbg !6861, !tbaa !2842
  %175 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6862, !tbaa !2289
  %m_doctypeName148 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %175, i32 0, i32 55, !dbg !6863
  %176 = load i8*, i8** %m_doctypeName148, align 8, !dbg !6863, !tbaa !2967
  %177 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6864, !tbaa !2289
  %m_doctypeSysid149 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %177, i32 0, i32 56, !dbg !6865
  %178 = load i8*, i8** %m_doctypeSysid149, align 8, !dbg !6865, !tbaa !2971
  %179 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6866, !tbaa !2289
  %m_doctypePubid150 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %179, i32 0, i32 57, !dbg !6867
  %180 = load i8*, i8** %m_doctypePubid150, align 8, !dbg !6867, !tbaa !2975
  call void %172(i8* %174, i8* %176, i8* %178, i8* %180, i32 0), !dbg !6868
  %181 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6869, !tbaa !2289
  %m_tempPool151 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %181, i32 0, i32 79, !dbg !6870
  call void @poolClear(%struct.STRING_POOL* %m_tempPool151), !dbg !6871
  store i8 0, i8* %handleDefault, align 1, !dbg !6872, !tbaa !2307
  br label %if.end.152, !dbg !6873

if.end.152:                                       ; preds = %if.then.145, %sw.bb.142
  %182 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6874, !tbaa !2289
  %m_doctypeSysid153 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %182, i32 0, i32 56, !dbg !6875
  %183 = load i8*, i8** %m_doctypeSysid153, align 8, !dbg !6875, !tbaa !2971
  %tobool154 = icmp ne i8* %183, null, !dbg !6876
  br i1 %tobool154, label %if.then.159, label %lor.lhs.false.155, !dbg !6877

lor.lhs.false.155:                                ; preds = %if.end.152
  %184 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6878, !tbaa !2289
  %m_useForeignDTD156 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %184, i32 0, i32 87, !dbg !6880
  %185 = load i8, i8* %m_useForeignDTD156, align 1, !dbg !6880, !tbaa !3060
  %conv157 = zext i8 %185 to i32, !dbg !6881
  %tobool158 = icmp ne i32 %conv157, 0, !dbg !6881
  br i1 %tobool158, label %if.then.159, label %if.end.210, !dbg !6882

if.then.159:                                      ; preds = %lor.lhs.false.155, %if.end.152
  call void @llvm.lifetime.start(i64 1, i8* %hadParamEntityRefs) #2, !dbg !6883
  call void @llvm.dbg.declare(metadata i8* %hadParamEntityRefs, metadata !1234, metadata !2293), !dbg !6884
  %186 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6885, !tbaa !2289
  %hasParamEntityRefs160 = getelementptr inbounds %struct.DTD, %struct.DTD* %186, i32 0, i32 7, !dbg !6886
  %187 = load i8, i8* %hasParamEntityRefs160, align 1, !dbg !6886, !tbaa !3183
  store i8 %187, i8* %hadParamEntityRefs, align 1, !dbg !6884, !tbaa !2307
  %188 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6887, !tbaa !2289
  %hasParamEntityRefs161 = getelementptr inbounds %struct.DTD, %struct.DTD* %188, i32 0, i32 7, !dbg !6888
  store i8 1, i8* %hasParamEntityRefs161, align 1, !dbg !6889, !tbaa !3183
  %189 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6890, !tbaa !2289
  %m_paramEntityParsing = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %189, i32 0, i32 88, !dbg !6891
  %190 = load i32, i32* %m_paramEntityParsing, align 4, !dbg !6891, !tbaa !3064
  %tobool162 = icmp ne i32 %190, 0, !dbg !6892
  br i1 %tobool162, label %land.lhs.true.163, label %if.end.205, !dbg !6893

land.lhs.true.163:                                ; preds = %if.then.159
  %191 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6894, !tbaa !2289
  %m_externalEntityRefHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %191, i32 0, i32 26, !dbg !6896
  %192 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %m_externalEntityRefHandler, align 8, !dbg !6896, !tbaa !2906
  %tobool164 = icmp ne i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)* %192, null, !dbg !6897
  br i1 %tobool164, label %if.then.165, label %if.end.205, !dbg !6898

if.then.165:                                      ; preds = %land.lhs.true.163
  %193 = bitcast %struct.ENTITY** %entity to i8*, !dbg !6899
  call void @llvm.lifetime.start(i64 8, i8* %193) #2, !dbg !6899
  call void @llvm.dbg.declare(metadata %struct.ENTITY** %entity, metadata !1237, metadata !2293), !dbg !6900
  %194 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6901, !tbaa !2289
  %195 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6902, !tbaa !2289
  %paramEntities166 = getelementptr inbounds %struct.DTD, %struct.DTD* %195, i32 0, i32 10, !dbg !6903
  %call167 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %194, %struct.HASH_TABLE* %paramEntities166, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @doProlog.externalSubsetName, i32 0, i32 0), i64 64), !dbg !6904
  %196 = bitcast %struct.NAMED* %call167 to %struct.ENTITY*, !dbg !6905
  store %struct.ENTITY* %196, %struct.ENTITY** %entity, align 8, !dbg !6900, !tbaa !2289
  %197 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !6906, !tbaa !2289
  %tobool168 = icmp ne %struct.ENTITY* %197, null, !dbg !6906
  br i1 %tobool168, label %if.end.170, label %if.then.169, !dbg !6908

if.then.169:                                      ; preds = %if.then.165
  store i32 1, i32* %retval, !dbg !6909
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.202, !dbg !6909

if.end.170:                                       ; preds = %if.then.165
  %198 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6910, !tbaa !2289
  %m_useForeignDTD171 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %198, i32 0, i32 87, !dbg !6912
  %199 = load i8, i8* %m_useForeignDTD171, align 1, !dbg !6912, !tbaa !3060
  %tobool172 = icmp ne i8 %199, 0, !dbg !6913
  br i1 %tobool172, label %if.then.173, label %if.end.174, !dbg !6914

if.then.173:                                      ; preds = %if.end.170
  %200 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6915, !tbaa !2289
  %m_curBase = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %200, i32 0, i32 66, !dbg !6916
  %201 = load i8*, i8** %m_curBase, align 8, !dbg !6916, !tbaa !2829
  %202 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !6917, !tbaa !2289
  %base = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %202, i32 0, i32 5, !dbg !6918
  store i8* %201, i8** %base, align 8, !dbg !6919, !tbaa !6920
  br label %if.end.174, !dbg !6917

if.end.174:                                       ; preds = %if.then.173, %if.end.170
  %203 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6921, !tbaa !2289
  %paramEntityRead = getelementptr inbounds %struct.DTD, %struct.DTD* %203, i32 0, i32 9, !dbg !6922
  store i8 0, i8* %paramEntityRead, align 1, !dbg !6923, !tbaa !3108
  %204 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6924, !tbaa !2289
  %m_externalEntityRefHandler175 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %204, i32 0, i32 26, !dbg !6926
  %205 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %m_externalEntityRefHandler175, align 8, !dbg !6926, !tbaa !2906
  %206 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6927, !tbaa !2289
  %m_externalEntityRefHandlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %206, i32 0, i32 27, !dbg !6928
  %207 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %m_externalEntityRefHandlerArg, align 8, !dbg !6928, !tbaa !2911
  %208 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !6929, !tbaa !2289
  %base176 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %208, i32 0, i32 5, !dbg !6930
  %209 = load i8*, i8** %base176, align 8, !dbg !6930, !tbaa !6920
  %210 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !6931, !tbaa !2289
  %systemId = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %210, i32 0, i32 4, !dbg !6932
  %211 = load i8*, i8** %systemId, align 8, !dbg !6932, !tbaa !6933
  %212 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !6934, !tbaa !2289
  %publicId177 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %212, i32 0, i32 6, !dbg !6935
  %213 = load i8*, i8** %publicId177, align 8, !dbg !6935, !tbaa !6833
  %call178 = call i32 %205(%struct.XML_ParserStruct* %207, i8* null, i8* %209, i8* %211, i8* %213), !dbg !6936
  %tobool179 = icmp ne i32 %call178, 0, !dbg !6936
  br i1 %tobool179, label %if.end.181, label %if.then.180, !dbg !6937

if.then.180:                                      ; preds = %if.end.174
  store i32 21, i32* %retval, !dbg !6938
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.202, !dbg !6938

if.end.181:                                       ; preds = %if.end.174
  %214 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6939, !tbaa !2289
  %paramEntityRead182 = getelementptr inbounds %struct.DTD, %struct.DTD* %214, i32 0, i32 9, !dbg !6941
  %215 = load i8, i8* %paramEntityRead182, align 1, !dbg !6941, !tbaa !3108
  %tobool183 = icmp ne i8 %215, 0, !dbg !6939
  br i1 %tobool183, label %if.then.184, label %if.else.195, !dbg !6942

if.then.184:                                      ; preds = %if.end.181
  %216 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6943, !tbaa !2289
  %standalone = getelementptr inbounds %struct.DTD, %struct.DTD* %216, i32 0, i32 8, !dbg !6946
  %217 = load i8, i8* %standalone, align 1, !dbg !6946, !tbaa !3187
  %tobool185 = icmp ne i8 %217, 0, !dbg !6943
  br i1 %tobool185, label %if.end.194, label %land.lhs.true.186, !dbg !6947

land.lhs.true.186:                                ; preds = %if.then.184
  %218 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6948, !tbaa !2289
  %m_notStandaloneHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %218, i32 0, i32 25, !dbg !6949
  %219 = load i32 (i8*)*, i32 (i8*)** %m_notStandaloneHandler, align 8, !dbg !6949, !tbaa !2902
  %tobool187 = icmp ne i32 (i8*)* %219, null, !dbg !6950
  br i1 %tobool187, label %land.lhs.true.188, label %if.end.194, !dbg !6951

land.lhs.true.188:                                ; preds = %land.lhs.true.186
  %220 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6952, !tbaa !2289
  %m_notStandaloneHandler189 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %220, i32 0, i32 25, !dbg !6953
  %221 = load i32 (i8*)*, i32 (i8*)** %m_notStandaloneHandler189, align 8, !dbg !6953, !tbaa !2902
  %222 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6954, !tbaa !2289
  %m_handlerArg190 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %222, i32 0, i32 1, !dbg !6955
  %223 = load i8*, i8** %m_handlerArg190, align 8, !dbg !6955, !tbaa !2842
  %call191 = call i32 %221(i8* %223), !dbg !6956
  %tobool192 = icmp ne i32 %call191, 0, !dbg !6956
  br i1 %tobool192, label %if.end.194, label %if.then.193, !dbg !6957

if.then.193:                                      ; preds = %land.lhs.true.188
  store i32 22, i32* %retval, !dbg !6958
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.202, !dbg !6958

if.end.194:                                       ; preds = %land.lhs.true.188, %land.lhs.true.186, %if.then.184
  br label %if.end.201, !dbg !6959

if.else.195:                                      ; preds = %if.end.181
  %224 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6960, !tbaa !2289
  %m_doctypeSysid196 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %224, i32 0, i32 56, !dbg !6962
  %225 = load i8*, i8** %m_doctypeSysid196, align 8, !dbg !6962, !tbaa !2971
  %tobool197 = icmp ne i8* %225, null, !dbg !6963
  br i1 %tobool197, label %if.end.200, label %if.then.198, !dbg !6964

if.then.198:                                      ; preds = %if.else.195
  %226 = load i8, i8* %hadParamEntityRefs, align 1, !dbg !6965, !tbaa !2307
  %227 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6966, !tbaa !2289
  %hasParamEntityRefs199 = getelementptr inbounds %struct.DTD, %struct.DTD* %227, i32 0, i32 7, !dbg !6967
  store i8 %226, i8* %hasParamEntityRefs199, align 1, !dbg !6968, !tbaa !3183
  br label %if.end.200, !dbg !6966

if.end.200:                                       ; preds = %if.then.198, %if.else.195
  br label %if.end.201

if.end.201:                                       ; preds = %if.end.200, %if.end.194
  store i32 0, i32* %cleanup.dest.slot, !dbg !6969
  br label %cleanup.202, !dbg !6969

cleanup.202:                                      ; preds = %if.end.201, %if.then.193, %if.then.180, %if.then.169
  %228 = bitcast %struct.ENTITY** %entity to i8*, !dbg !6970
  call void @llvm.lifetime.end(i64 8, i8* %228) #2, !dbg !6970
  %cleanup.dest.203 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.203, label %cleanup.207 [
    i32 0, label %cleanup.cont.204
  ]

cleanup.cont.204:                                 ; preds = %cleanup.202
  br label %if.end.205, !dbg !6971

if.end.205:                                       ; preds = %cleanup.cont.204, %land.lhs.true.163, %if.then.159
  %229 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6972, !tbaa !2289
  %m_useForeignDTD206 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %229, i32 0, i32 87, !dbg !6973
  store i8 0, i8* %m_useForeignDTD206, align 1, !dbg !6974, !tbaa !3060
  store i32 0, i32* %cleanup.dest.slot, !dbg !6975
  br label %cleanup.207, !dbg !6975

cleanup.207:                                      ; preds = %if.end.205, %cleanup.202
  call void @llvm.lifetime.end(i64 1, i8* %hadParamEntityRefs) #2, !dbg !6975
  %cleanup.dest.208 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.208, label %cleanup.1492 [
    i32 0, label %cleanup.cont.209
  ]

cleanup.cont.209:                                 ; preds = %cleanup.207
  br label %if.end.210, !dbg !6976

if.end.210:                                       ; preds = %cleanup.cont.209, %lor.lhs.false.155
  %230 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6977, !tbaa !2289
  %m_endDoctypeDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %230, i32 0, i32 20, !dbg !6979
  %231 = load void (i8*)*, void (i8*)** %m_endDoctypeDeclHandler, align 8, !dbg !6979, !tbaa !2882
  %tobool211 = icmp ne void (i8*)* %231, null, !dbg !6980
  br i1 %tobool211, label %if.then.212, label %if.end.215, !dbg !6981

if.then.212:                                      ; preds = %if.end.210
  %232 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6982, !tbaa !2289
  %m_endDoctypeDeclHandler213 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %232, i32 0, i32 20, !dbg !6984
  %233 = load void (i8*)*, void (i8*)** %m_endDoctypeDeclHandler213, align 8, !dbg !6984, !tbaa !2882
  %234 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6985, !tbaa !2289
  %m_handlerArg214 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %234, i32 0, i32 1, !dbg !6986
  %235 = load i8*, i8** %m_handlerArg214, align 8, !dbg !6986, !tbaa !2842
  call void %233(i8* %235), !dbg !6987
  store i8 0, i8* %handleDefault, align 1, !dbg !6988, !tbaa !2307
  br label %if.end.215, !dbg !6989

if.end.215:                                       ; preds = %if.then.212, %if.end.210
  br label %sw.epilog.1478, !dbg !6990

sw.bb.216:                                        ; preds = %if.end.33
  %236 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6991, !tbaa !2289
  %m_useForeignDTD217 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %236, i32 0, i32 87, !dbg !6992
  %237 = load i8, i8* %m_useForeignDTD217, align 1, !dbg !6992, !tbaa !3060
  %tobool218 = icmp ne i8 %237, 0, !dbg !6993
  br i1 %tobool218, label %if.then.219, label %if.end.272, !dbg !6994

if.then.219:                                      ; preds = %sw.bb.216
  call void @llvm.lifetime.start(i64 1, i8* %hadParamEntityRefs220) #2, !dbg !6995
  call void @llvm.dbg.declare(metadata i8* %hadParamEntityRefs220, metadata !1240, metadata !2293), !dbg !6996
  %238 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6997, !tbaa !2289
  %hasParamEntityRefs221 = getelementptr inbounds %struct.DTD, %struct.DTD* %238, i32 0, i32 7, !dbg !6998
  %239 = load i8, i8* %hasParamEntityRefs221, align 1, !dbg !6998, !tbaa !3183
  store i8 %239, i8* %hadParamEntityRefs220, align 1, !dbg !6996, !tbaa !2307
  %240 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6999, !tbaa !2289
  %hasParamEntityRefs222 = getelementptr inbounds %struct.DTD, %struct.DTD* %240, i32 0, i32 7, !dbg !7000
  store i8 1, i8* %hasParamEntityRefs222, align 1, !dbg !7001, !tbaa !3183
  %241 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7002, !tbaa !2289
  %m_paramEntityParsing223 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %241, i32 0, i32 88, !dbg !7003
  %242 = load i32, i32* %m_paramEntityParsing223, align 4, !dbg !7003, !tbaa !3064
  %tobool224 = icmp ne i32 %242, 0, !dbg !7004
  br i1 %tobool224, label %land.lhs.true.225, label %if.end.268, !dbg !7005

land.lhs.true.225:                                ; preds = %if.then.219
  %243 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7006, !tbaa !2289
  %m_externalEntityRefHandler226 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %243, i32 0, i32 26, !dbg !7008
  %244 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %m_externalEntityRefHandler226, align 8, !dbg !7008, !tbaa !2906
  %tobool227 = icmp ne i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)* %244, null, !dbg !7009
  br i1 %tobool227, label %if.then.228, label %if.end.268, !dbg !7010

if.then.228:                                      ; preds = %land.lhs.true.225
  %245 = bitcast %struct.ENTITY** %entity229 to i8*, !dbg !7011
  call void @llvm.lifetime.start(i64 8, i8* %245) #2, !dbg !7011
  call void @llvm.dbg.declare(metadata %struct.ENTITY** %entity229, metadata !1243, metadata !2293), !dbg !7012
  %246 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7013, !tbaa !2289
  %247 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7014, !tbaa !2289
  %paramEntities230 = getelementptr inbounds %struct.DTD, %struct.DTD* %247, i32 0, i32 10, !dbg !7015
  %call231 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %246, %struct.HASH_TABLE* %paramEntities230, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @doProlog.externalSubsetName, i32 0, i32 0), i64 64), !dbg !7016
  %248 = bitcast %struct.NAMED* %call231 to %struct.ENTITY*, !dbg !7017
  store %struct.ENTITY* %248, %struct.ENTITY** %entity229, align 8, !dbg !7012, !tbaa !2289
  %249 = load %struct.ENTITY*, %struct.ENTITY** %entity229, align 8, !dbg !7018, !tbaa !2289
  %tobool232 = icmp ne %struct.ENTITY* %249, null, !dbg !7018
  br i1 %tobool232, label %if.end.234, label %if.then.233, !dbg !7020

if.then.233:                                      ; preds = %if.then.228
  store i32 1, i32* %retval, !dbg !7021
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.265, !dbg !7021

if.end.234:                                       ; preds = %if.then.228
  %250 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7022, !tbaa !2289
  %m_curBase235 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %250, i32 0, i32 66, !dbg !7023
  %251 = load i8*, i8** %m_curBase235, align 8, !dbg !7023, !tbaa !2829
  %252 = load %struct.ENTITY*, %struct.ENTITY** %entity229, align 8, !dbg !7024, !tbaa !2289
  %base236 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %252, i32 0, i32 5, !dbg !7025
  store i8* %251, i8** %base236, align 8, !dbg !7026, !tbaa !6920
  %253 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7027, !tbaa !2289
  %paramEntityRead237 = getelementptr inbounds %struct.DTD, %struct.DTD* %253, i32 0, i32 9, !dbg !7028
  store i8 0, i8* %paramEntityRead237, align 1, !dbg !7029, !tbaa !3108
  %254 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7030, !tbaa !2289
  %m_externalEntityRefHandler238 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %254, i32 0, i32 26, !dbg !7032
  %255 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %m_externalEntityRefHandler238, align 8, !dbg !7032, !tbaa !2906
  %256 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7033, !tbaa !2289
  %m_externalEntityRefHandlerArg239 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %256, i32 0, i32 27, !dbg !7034
  %257 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %m_externalEntityRefHandlerArg239, align 8, !dbg !7034, !tbaa !2911
  %258 = load %struct.ENTITY*, %struct.ENTITY** %entity229, align 8, !dbg !7035, !tbaa !2289
  %base240 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %258, i32 0, i32 5, !dbg !7036
  %259 = load i8*, i8** %base240, align 8, !dbg !7036, !tbaa !6920
  %260 = load %struct.ENTITY*, %struct.ENTITY** %entity229, align 8, !dbg !7037, !tbaa !2289
  %systemId241 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %260, i32 0, i32 4, !dbg !7038
  %261 = load i8*, i8** %systemId241, align 8, !dbg !7038, !tbaa !6933
  %262 = load %struct.ENTITY*, %struct.ENTITY** %entity229, align 8, !dbg !7039, !tbaa !2289
  %publicId242 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %262, i32 0, i32 6, !dbg !7040
  %263 = load i8*, i8** %publicId242, align 8, !dbg !7040, !tbaa !6833
  %call243 = call i32 %255(%struct.XML_ParserStruct* %257, i8* null, i8* %259, i8* %261, i8* %263), !dbg !7041
  %tobool244 = icmp ne i32 %call243, 0, !dbg !7041
  br i1 %tobool244, label %if.end.246, label %if.then.245, !dbg !7042

if.then.245:                                      ; preds = %if.end.234
  store i32 21, i32* %retval, !dbg !7043
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.265, !dbg !7043

if.end.246:                                       ; preds = %if.end.234
  %264 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7044, !tbaa !2289
  %paramEntityRead247 = getelementptr inbounds %struct.DTD, %struct.DTD* %264, i32 0, i32 9, !dbg !7046
  %265 = load i8, i8* %paramEntityRead247, align 1, !dbg !7046, !tbaa !3108
  %tobool248 = icmp ne i8 %265, 0, !dbg !7044
  br i1 %tobool248, label %if.then.249, label %if.else.262, !dbg !7047

if.then.249:                                      ; preds = %if.end.246
  %266 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7048, !tbaa !2289
  %standalone250 = getelementptr inbounds %struct.DTD, %struct.DTD* %266, i32 0, i32 8, !dbg !7051
  %267 = load i8, i8* %standalone250, align 1, !dbg !7051, !tbaa !3187
  %tobool251 = icmp ne i8 %267, 0, !dbg !7048
  br i1 %tobool251, label %if.end.261, label %land.lhs.true.252, !dbg !7052

land.lhs.true.252:                                ; preds = %if.then.249
  %268 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7053, !tbaa !2289
  %m_notStandaloneHandler253 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %268, i32 0, i32 25, !dbg !7054
  %269 = load i32 (i8*)*, i32 (i8*)** %m_notStandaloneHandler253, align 8, !dbg !7054, !tbaa !2902
  %tobool254 = icmp ne i32 (i8*)* %269, null, !dbg !7055
  br i1 %tobool254, label %land.lhs.true.255, label %if.end.261, !dbg !7056

land.lhs.true.255:                                ; preds = %land.lhs.true.252
  %270 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7057, !tbaa !2289
  %m_notStandaloneHandler256 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %270, i32 0, i32 25, !dbg !7058
  %271 = load i32 (i8*)*, i32 (i8*)** %m_notStandaloneHandler256, align 8, !dbg !7058, !tbaa !2902
  %272 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7059, !tbaa !2289
  %m_handlerArg257 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %272, i32 0, i32 1, !dbg !7060
  %273 = load i8*, i8** %m_handlerArg257, align 8, !dbg !7060, !tbaa !2842
  %call258 = call i32 %271(i8* %273), !dbg !7061
  %tobool259 = icmp ne i32 %call258, 0, !dbg !7061
  br i1 %tobool259, label %if.end.261, label %if.then.260, !dbg !7062

if.then.260:                                      ; preds = %land.lhs.true.255
  store i32 22, i32* %retval, !dbg !7063
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.265, !dbg !7063

if.end.261:                                       ; preds = %land.lhs.true.255, %land.lhs.true.252, %if.then.249
  br label %if.end.264, !dbg !7064

if.else.262:                                      ; preds = %if.end.246
  %274 = load i8, i8* %hadParamEntityRefs220, align 1, !dbg !7065, !tbaa !2307
  %275 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7066, !tbaa !2289
  %hasParamEntityRefs263 = getelementptr inbounds %struct.DTD, %struct.DTD* %275, i32 0, i32 7, !dbg !7067
  store i8 %274, i8* %hasParamEntityRefs263, align 1, !dbg !7068, !tbaa !3183
  br label %if.end.264

if.end.264:                                       ; preds = %if.else.262, %if.end.261
  store i32 0, i32* %cleanup.dest.slot, !dbg !7069
  br label %cleanup.265, !dbg !7069

cleanup.265:                                      ; preds = %if.end.264, %if.then.260, %if.then.245, %if.then.233
  %276 = bitcast %struct.ENTITY** %entity229 to i8*, !dbg !7070
  call void @llvm.lifetime.end(i64 8, i8* %276) #2, !dbg !7070
  %cleanup.dest.266 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.266, label %cleanup.269 [
    i32 0, label %cleanup.cont.267
  ]

cleanup.cont.267:                                 ; preds = %cleanup.265
  br label %if.end.268, !dbg !7071

if.end.268:                                       ; preds = %cleanup.cont.267, %land.lhs.true.225, %if.then.219
  store i32 0, i32* %cleanup.dest.slot, !dbg !7072
  br label %cleanup.269, !dbg !7072

cleanup.269:                                      ; preds = %if.end.268, %cleanup.265
  call void @llvm.lifetime.end(i64 1, i8* %hadParamEntityRefs220) #2, !dbg !7072
  %cleanup.dest.270 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.270, label %cleanup.1492 [
    i32 0, label %cleanup.cont.271
  ]

cleanup.cont.271:                                 ; preds = %cleanup.269
  br label %if.end.272, !dbg !7073

if.end.272:                                       ; preds = %cleanup.cont.271, %sw.bb.216
  %277 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7074, !tbaa !2289
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %277, i32 0, i32 45, !dbg !7075
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @contentProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8, !dbg !7076, !tbaa !2809
  %278 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7077, !tbaa !2289
  %279 = load i8*, i8** %s.addr, align 8, !dbg !7078, !tbaa !2289
  %280 = load i8*, i8** %end.addr, align 8, !dbg !7079, !tbaa !2289
  %281 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !7080, !tbaa !2289
  %call273 = call i32 @contentProcessor(%struct.XML_ParserStruct* %278, i8* %279, i8* %280, i8** %281), !dbg !7081
  store i32 %call273, i32* %retval, !dbg !7082
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1492, !dbg !7082

sw.bb.274:                                        ; preds = %if.end.33
  %282 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7083, !tbaa !2289
  %283 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7084, !tbaa !2289
  %284 = load i8*, i8** %s.addr, align 8, !dbg !7085, !tbaa !2289
  %285 = load i8*, i8** %next.addr, align 8, !dbg !7086, !tbaa !2289
  %call275 = call %struct.ELEMENT_TYPE* @getElementType(%struct.XML_ParserStruct* %282, %struct.encoding* %283, i8* %284, i8* %285), !dbg !7087
  %286 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7088, !tbaa !2289
  %m_declElementType = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %286, i32 0, i32 61, !dbg !7089
  store %struct.ELEMENT_TYPE* %call275, %struct.ELEMENT_TYPE** %m_declElementType, align 8, !dbg !7090, !tbaa !2955
  %287 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7091, !tbaa !2289
  %m_declElementType276 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %287, i32 0, i32 61, !dbg !7093
  %288 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %m_declElementType276, align 8, !dbg !7093, !tbaa !2955
  %tobool277 = icmp ne %struct.ELEMENT_TYPE* %288, null, !dbg !7094
  br i1 %tobool277, label %if.end.279, label %if.then.278, !dbg !7095

if.then.278:                                      ; preds = %sw.bb.274
  store i32 1, i32* %retval, !dbg !7096
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1492, !dbg !7096

if.end.279:                                       ; preds = %sw.bb.274
  br label %checkAttListDeclHandler, !dbg !7097

sw.bb.280:                                        ; preds = %if.end.33
  %289 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7098, !tbaa !2289
  %290 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7099, !tbaa !2289
  %291 = load i8*, i8** %s.addr, align 8, !dbg !7100, !tbaa !2289
  %292 = load i8*, i8** %next.addr, align 8, !dbg !7101, !tbaa !2289
  %call281 = call %struct.attribute_id* @getAttributeId(%struct.XML_ParserStruct* %289, %struct.encoding* %290, i8* %291, i8* %292), !dbg !7102
  %293 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7103, !tbaa !2289
  %m_declAttributeId = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %293, i32 0, i32 62, !dbg !7104
  store %struct.attribute_id* %call281, %struct.attribute_id** %m_declAttributeId, align 8, !dbg !7105, !tbaa !2959
  %294 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7106, !tbaa !2289
  %m_declAttributeId282 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %294, i32 0, i32 62, !dbg !7108
  %295 = load %struct.attribute_id*, %struct.attribute_id** %m_declAttributeId282, align 8, !dbg !7108, !tbaa !2959
  %tobool283 = icmp ne %struct.attribute_id* %295, null, !dbg !7109
  br i1 %tobool283, label %if.end.285, label %if.then.284, !dbg !7110

if.then.284:                                      ; preds = %sw.bb.280
  store i32 1, i32* %retval, !dbg !7111
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1492, !dbg !7111

if.end.285:                                       ; preds = %sw.bb.280
  %296 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7112, !tbaa !2289
  %m_declAttributeIsCdata = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %296, i32 0, i32 63, !dbg !7113
  store i8 0, i8* %m_declAttributeIsCdata, align 1, !dbg !7114, !tbaa !2991
  %297 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7115, !tbaa !2289
  %m_declAttributeType = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %297, i32 0, i32 58, !dbg !7116
  store i8* null, i8** %m_declAttributeType, align 8, !dbg !7117, !tbaa !2979
  %298 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7118, !tbaa !2289
  %m_declAttributeIsId = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %298, i32 0, i32 64, !dbg !7119
  store i8 0, i8* %m_declAttributeIsId, align 1, !dbg !7120, !tbaa !2995
  br label %checkAttListDeclHandler, !dbg !7121

sw.bb.286:                                        ; preds = %if.end.33
  %299 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7122, !tbaa !2289
  %m_declAttributeIsCdata287 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %299, i32 0, i32 63, !dbg !7123
  store i8 1, i8* %m_declAttributeIsCdata287, align 1, !dbg !7124, !tbaa !2991
  %300 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7125, !tbaa !2289
  %m_declAttributeType288 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %300, i32 0, i32 58, !dbg !7126
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @doProlog.atypeCDATA, i32 0, i32 0), i8** %m_declAttributeType288, align 8, !dbg !7127, !tbaa !2979
  br label %checkAttListDeclHandler, !dbg !7128

sw.bb.289:                                        ; preds = %if.end.33
  %301 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7129, !tbaa !2289
  %m_declAttributeIsId290 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %301, i32 0, i32 64, !dbg !7130
  store i8 1, i8* %m_declAttributeIsId290, align 1, !dbg !7131, !tbaa !2995
  %302 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7132, !tbaa !2289
  %m_declAttributeType291 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %302, i32 0, i32 58, !dbg !7133
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @doProlog.atypeID, i32 0, i32 0), i8** %m_declAttributeType291, align 8, !dbg !7134, !tbaa !2979
  br label %checkAttListDeclHandler, !dbg !7135

sw.bb.292:                                        ; preds = %if.end.33
  %303 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7136, !tbaa !2289
  %m_declAttributeType293 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %303, i32 0, i32 58, !dbg !7137
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @doProlog.atypeIDREF, i32 0, i32 0), i8** %m_declAttributeType293, align 8, !dbg !7138, !tbaa !2979
  br label %checkAttListDeclHandler, !dbg !7139

sw.bb.294:                                        ; preds = %if.end.33
  %304 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7140, !tbaa !2289
  %m_declAttributeType295 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %304, i32 0, i32 58, !dbg !7141
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @doProlog.atypeIDREFS, i32 0, i32 0), i8** %m_declAttributeType295, align 8, !dbg !7142, !tbaa !2979
  br label %checkAttListDeclHandler, !dbg !7143

sw.bb.296:                                        ; preds = %if.end.33
  %305 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7144, !tbaa !2289
  %m_declAttributeType297 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %305, i32 0, i32 58, !dbg !7145
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @doProlog.atypeENTITY, i32 0, i32 0), i8** %m_declAttributeType297, align 8, !dbg !7146, !tbaa !2979
  br label %checkAttListDeclHandler, !dbg !7147

sw.bb.298:                                        ; preds = %if.end.33
  %306 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7148, !tbaa !2289
  %m_declAttributeType299 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %306, i32 0, i32 58, !dbg !7149
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @doProlog.atypeENTITIES, i32 0, i32 0), i8** %m_declAttributeType299, align 8, !dbg !7150, !tbaa !2979
  br label %checkAttListDeclHandler, !dbg !7151

sw.bb.300:                                        ; preds = %if.end.33
  %307 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7152, !tbaa !2289
  %m_declAttributeType301 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %307, i32 0, i32 58, !dbg !7153
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @doProlog.atypeNMTOKEN, i32 0, i32 0), i8** %m_declAttributeType301, align 8, !dbg !7154, !tbaa !2979
  br label %checkAttListDeclHandler, !dbg !7155

sw.bb.302:                                        ; preds = %if.end.33
  %308 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7156, !tbaa !2289
  %m_declAttributeType303 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %308, i32 0, i32 58, !dbg !7157
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @doProlog.atypeNMTOKENS, i32 0, i32 0), i8** %m_declAttributeType303, align 8, !dbg !7158, !tbaa !2979
  br label %checkAttListDeclHandler, !dbg !7159

checkAttListDeclHandler:                          ; preds = %sw.bb.302, %sw.bb.300, %sw.bb.298, %sw.bb.296, %sw.bb.294, %sw.bb.292, %sw.bb.289, %sw.bb.286, %if.end.285, %if.end.279
  %309 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7160, !tbaa !2289
  %keepProcessing304 = getelementptr inbounds %struct.DTD, %struct.DTD* %309, i32 0, i32 6, !dbg !7162
  %310 = load i8, i8* %keepProcessing304, align 1, !dbg !7162, !tbaa !3179
  %conv305 = zext i8 %310 to i32, !dbg !7160
  %tobool306 = icmp ne i32 %conv305, 0, !dbg !7160
  br i1 %tobool306, label %land.lhs.true.307, label %if.end.310, !dbg !7163

land.lhs.true.307:                                ; preds = %checkAttListDeclHandler
  %311 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7164, !tbaa !2289
  %m_attlistDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %311, i32 0, i32 31, !dbg !7166
  %312 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %m_attlistDeclHandler, align 8, !dbg !7166, !tbaa !2923
  %tobool308 = icmp ne void (i8*, i8*, i8*, i8*, i8*, i32)* %312, null, !dbg !7167
  br i1 %tobool308, label %if.then.309, label %if.end.310, !dbg !7168

if.then.309:                                      ; preds = %land.lhs.true.307
  store i8 0, i8* %handleDefault, align 1, !dbg !7169, !tbaa !2307
  br label %if.end.310, !dbg !7170

if.end.310:                                       ; preds = %if.then.309, %land.lhs.true.307, %checkAttListDeclHandler
  br label %sw.epilog.1478, !dbg !7171

sw.bb.311:                                        ; preds = %if.end.33, %if.end.33
  %313 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7172, !tbaa !2289
  %keepProcessing312 = getelementptr inbounds %struct.DTD, %struct.DTD* %313, i32 0, i32 6, !dbg !7173
  %314 = load i8, i8* %keepProcessing312, align 1, !dbg !7173, !tbaa !3179
  %conv313 = zext i8 %314 to i32, !dbg !7172
  %tobool314 = icmp ne i32 %conv313, 0, !dbg !7172
  br i1 %tobool314, label %land.lhs.true.315, label %if.end.342, !dbg !7174

land.lhs.true.315:                                ; preds = %sw.bb.311
  %315 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7175, !tbaa !2289
  %m_attlistDeclHandler316 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %315, i32 0, i32 31, !dbg !7177
  %316 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %m_attlistDeclHandler316, align 8, !dbg !7177, !tbaa !2923
  %tobool317 = icmp ne void (i8*, i8*, i8*, i8*, i8*, i32)* %316, null, !dbg !7178
  br i1 %tobool317, label %if.then.318, label %if.end.342, !dbg !7179

if.then.318:                                      ; preds = %land.lhs.true.315
  %317 = bitcast i8** %prefix to i8*, !dbg !7180
  call void @llvm.lifetime.start(i64 8, i8* %317) #2, !dbg !7180
  call void @llvm.dbg.declare(metadata i8** %prefix, metadata !1246, metadata !2293), !dbg !7181
  %318 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7182, !tbaa !2289
  %m_declAttributeType319 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %318, i32 0, i32 58, !dbg !7184
  %319 = load i8*, i8** %m_declAttributeType319, align 8, !dbg !7184, !tbaa !2979
  %tobool320 = icmp ne i8* %319, null, !dbg !7185
  br i1 %tobool320, label %if.then.321, label %if.else.322, !dbg !7186

if.then.321:                                      ; preds = %if.then.318
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @doProlog.enumValueSep, i32 0, i32 0), i8** %prefix, align 8, !dbg !7187, !tbaa !2289
  br label %if.end.325, !dbg !7189

if.else.322:                                      ; preds = %if.then.318
  %320 = load i32, i32* %role, align 4, !dbg !7190, !tbaa !3391
  %cmp323 = icmp eq i32 %320, 32, !dbg !7192
  %cond = select i1 %cmp323, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @doProlog.notationPrefix, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @doProlog.enumValueStart, i32 0, i32 0), !dbg !7190
  store i8* %cond, i8** %prefix, align 8, !dbg !7193, !tbaa !2289
  br label %if.end.325

if.end.325:                                       ; preds = %if.else.322, %if.then.321
  %321 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7194, !tbaa !2289
  %m_tempPool326 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %321, i32 0, i32 79, !dbg !7196
  %322 = load i8*, i8** %prefix, align 8, !dbg !7197, !tbaa !2289
  %call327 = call i8* @poolAppendString(%struct.STRING_POOL* %m_tempPool326, i8* %322), !dbg !7198
  %tobool328 = icmp ne i8* %call327, null, !dbg !7198
  br i1 %tobool328, label %if.end.330, label %if.then.329, !dbg !7199

if.then.329:                                      ; preds = %if.end.325
  store i32 1, i32* %retval, !dbg !7200
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.339, !dbg !7200

if.end.330:                                       ; preds = %if.end.325
  %323 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7201, !tbaa !2289
  %m_tempPool331 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %323, i32 0, i32 79, !dbg !7203
  %324 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7204, !tbaa !2289
  %325 = load i8*, i8** %s.addr, align 8, !dbg !7205, !tbaa !2289
  %326 = load i8*, i8** %next.addr, align 8, !dbg !7206, !tbaa !2289
  %call332 = call i8* @poolAppend(%struct.STRING_POOL* %m_tempPool331, %struct.encoding* %324, i8* %325, i8* %326), !dbg !7207
  %tobool333 = icmp ne i8* %call332, null, !dbg !7207
  br i1 %tobool333, label %if.end.335, label %if.then.334, !dbg !7208

if.then.334:                                      ; preds = %if.end.330
  store i32 1, i32* %retval, !dbg !7209
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.339, !dbg !7209

if.end.335:                                       ; preds = %if.end.330
  %327 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7210, !tbaa !2289
  %m_tempPool336 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %327, i32 0, i32 79, !dbg !7211
  %start337 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool336, i32 0, i32 4, !dbg !7212
  %328 = load i8*, i8** %start337, align 8, !dbg !7212, !tbaa !7213
  %329 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7214, !tbaa !2289
  %m_declAttributeType338 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %329, i32 0, i32 58, !dbg !7215
  store i8* %328, i8** %m_declAttributeType338, align 8, !dbg !7216, !tbaa !2979
  store i8 0, i8* %handleDefault, align 1, !dbg !7217, !tbaa !2307
  store i32 0, i32* %cleanup.dest.slot, !dbg !7218
  br label %cleanup.339, !dbg !7218

cleanup.339:                                      ; preds = %if.end.335, %if.then.334, %if.then.329
  %330 = bitcast i8** %prefix to i8*, !dbg !7219
  call void @llvm.lifetime.end(i64 8, i8* %330) #2, !dbg !7219
  %cleanup.dest.340 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.340, label %cleanup.1492 [
    i32 0, label %cleanup.cont.341
  ]

cleanup.cont.341:                                 ; preds = %cleanup.339
  br label %if.end.342, !dbg !7220

if.end.342:                                       ; preds = %cleanup.cont.341, %land.lhs.true.315, %sw.bb.311
  br label %sw.epilog.1478, !dbg !7221

sw.bb.343:                                        ; preds = %if.end.33, %if.end.33
  %331 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7222, !tbaa !2289
  %keepProcessing344 = getelementptr inbounds %struct.DTD, %struct.DTD* %331, i32 0, i32 6, !dbg !7224
  %332 = load i8, i8* %keepProcessing344, align 1, !dbg !7224, !tbaa !3179
  %tobool345 = icmp ne i8 %332, 0, !dbg !7222
  br i1 %tobool345, label %if.then.346, label %if.end.424, !dbg !7225

if.then.346:                                      ; preds = %sw.bb.343
  %333 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7226, !tbaa !2289
  %m_declElementType347 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %333, i32 0, i32 61, !dbg !7229
  %334 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %m_declElementType347, align 8, !dbg !7229, !tbaa !2955
  %335 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7230, !tbaa !2289
  %m_declAttributeId348 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %335, i32 0, i32 62, !dbg !7231
  %336 = load %struct.attribute_id*, %struct.attribute_id** %m_declAttributeId348, align 8, !dbg !7231, !tbaa !2959
  %337 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7232, !tbaa !2289
  %m_declAttributeIsCdata349 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %337, i32 0, i32 63, !dbg !7233
  %338 = load i8, i8* %m_declAttributeIsCdata349, align 1, !dbg !7233, !tbaa !2991
  %339 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7234, !tbaa !2289
  %m_declAttributeIsId350 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %339, i32 0, i32 64, !dbg !7235
  %340 = load i8, i8* %m_declAttributeIsId350, align 1, !dbg !7235, !tbaa !2995
  %341 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7236, !tbaa !2289
  %call351 = call i32 @defineAttribute(%struct.ELEMENT_TYPE* %334, %struct.attribute_id* %336, i8 zeroext %338, i8 zeroext %340, i8* null, %struct.XML_ParserStruct* %341), !dbg !7237
  %tobool352 = icmp ne i32 %call351, 0, !dbg !7237
  br i1 %tobool352, label %if.end.354, label %if.then.353, !dbg !7238

if.then.353:                                      ; preds = %if.then.346
  store i32 1, i32* %retval, !dbg !7239
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1492, !dbg !7239

if.end.354:                                       ; preds = %if.then.346
  %342 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7240, !tbaa !2289
  %m_attlistDeclHandler355 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %342, i32 0, i32 31, !dbg !7242
  %343 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %m_attlistDeclHandler355, align 8, !dbg !7242, !tbaa !2923
  %tobool356 = icmp ne void (i8*, i8*, i8*, i8*, i8*, i32)* %343, null, !dbg !7243
  br i1 %tobool356, label %land.lhs.true.357, label %if.end.423, !dbg !7244

land.lhs.true.357:                                ; preds = %if.end.354
  %344 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7245, !tbaa !2289
  %m_declAttributeType358 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %344, i32 0, i32 58, !dbg !7247
  %345 = load i8*, i8** %m_declAttributeType358, align 8, !dbg !7247, !tbaa !2979
  %tobool359 = icmp ne i8* %345, null, !dbg !7248
  br i1 %tobool359, label %if.then.360, label %if.end.423, !dbg !7249

if.then.360:                                      ; preds = %land.lhs.true.357
  %346 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7250, !tbaa !2289
  %m_declAttributeType361 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %346, i32 0, i32 58, !dbg !7253
  %347 = load i8*, i8** %m_declAttributeType361, align 8, !dbg !7253, !tbaa !2979
  %348 = load i8, i8* %347, align 1, !dbg !7254, !tbaa !2307
  %conv362 = sext i8 %348 to i32, !dbg !7254
  %cmp363 = icmp eq i32 %conv362, 40, !dbg !7255
  br i1 %cmp363, label %if.then.375, label %lor.lhs.false.365, !dbg !7256

lor.lhs.false.365:                                ; preds = %if.then.360
  %349 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7257, !tbaa !2289
  %m_declAttributeType366 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %349, i32 0, i32 58, !dbg !7259
  %350 = load i8*, i8** %m_declAttributeType366, align 8, !dbg !7259, !tbaa !2979
  %351 = load i8, i8* %350, align 1, !dbg !7260, !tbaa !2307
  %conv367 = sext i8 %351 to i32, !dbg !7260
  %cmp368 = icmp eq i32 %conv367, 78, !dbg !7261
  br i1 %cmp368, label %land.lhs.true.370, label %if.end.413, !dbg !7262

land.lhs.true.370:                                ; preds = %lor.lhs.false.365
  %352 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7263, !tbaa !2289
  %m_declAttributeType371 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %352, i32 0, i32 58, !dbg !7264
  %353 = load i8*, i8** %m_declAttributeType371, align 8, !dbg !7264, !tbaa !2979
  %arrayidx = getelementptr i8, i8* %353, i64 1, !dbg !7265
  %354 = load i8, i8* %arrayidx, align 1, !dbg !7265, !tbaa !2307
  %conv372 = sext i8 %354 to i32, !dbg !7265
  %cmp373 = icmp eq i32 %conv372, 79, !dbg !7266
  br i1 %cmp373, label %if.then.375, label %if.end.413, !dbg !7267

if.then.375:                                      ; preds = %land.lhs.true.370, %if.then.360
  %355 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7268, !tbaa !2289
  %m_tempPool376 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %355, i32 0, i32 79, !dbg !7271
  %ptr377 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool376, i32 0, i32 3, !dbg !7272
  %356 = load i8*, i8** %ptr377, align 8, !dbg !7272, !tbaa !2798
  %357 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7273, !tbaa !2289
  %m_tempPool378 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %357, i32 0, i32 79, !dbg !7274
  %end379 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool378, i32 0, i32 2, !dbg !7275
  %358 = load i8*, i8** %end379, align 8, !dbg !7275, !tbaa !2802
  %cmp380 = icmp eq i8* %356, %358, !dbg !7276
  br i1 %cmp380, label %land.lhs.true.382, label %cond.false, !dbg !7277

land.lhs.true.382:                                ; preds = %if.then.375
  %359 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7278, !tbaa !2289
  %m_tempPool383 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %359, i32 0, i32 79, !dbg !7280
  %call384 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool383), !dbg !7281
  %tobool385 = icmp ne i8 %call384, 0, !dbg !7281
  br i1 %tobool385, label %cond.false, label %cond.true, !dbg !7282

cond.true:                                        ; preds = %land.lhs.true.382
  br i1 false, label %lor.lhs.false.388, label %if.then.404, !dbg !7283

cond.false:                                       ; preds = %land.lhs.true.382, %if.then.375
  %360 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7284, !tbaa !2289
  %m_tempPool386 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %360, i32 0, i32 79, !dbg !7286
  %ptr387 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool386, i32 0, i32 3, !dbg !7287
  %361 = load i8*, i8** %ptr387, align 8, !dbg !7288, !tbaa !2798
  %incdec.ptr = getelementptr i8, i8* %361, i32 1, !dbg !7288
  store i8* %incdec.ptr, i8** %ptr387, align 8, !dbg !7288, !tbaa !2798
  store i8 41, i8* %361, align 1, !dbg !7289, !tbaa !2307
  br i1 true, label %lor.lhs.false.388, label %if.then.404, !dbg !7282

lor.lhs.false.388:                                ; preds = %cond.false, %cond.true
  %362 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7290, !tbaa !2289
  %m_tempPool389 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %362, i32 0, i32 79, !dbg !7291
  %ptr390 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool389, i32 0, i32 3, !dbg !7292
  %363 = load i8*, i8** %ptr390, align 8, !dbg !7292, !tbaa !2798
  %364 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7293, !tbaa !2289
  %m_tempPool391 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %364, i32 0, i32 79, !dbg !7294
  %end392 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool391, i32 0, i32 2, !dbg !7295
  %365 = load i8*, i8** %end392, align 8, !dbg !7295, !tbaa !2802
  %cmp393 = icmp eq i8* %363, %365, !dbg !7296
  br i1 %cmp393, label %land.lhs.true.395, label %cond.false.400, !dbg !7297

land.lhs.true.395:                                ; preds = %lor.lhs.false.388
  %366 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7298, !tbaa !2289
  %m_tempPool396 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %366, i32 0, i32 79, !dbg !7299
  %call397 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool396), !dbg !7300
  %tobool398 = icmp ne i8 %call397, 0, !dbg !7300
  br i1 %tobool398, label %cond.false.400, label %cond.true.399, !dbg !7301

cond.true.399:                                    ; preds = %land.lhs.true.395
  br i1 false, label %if.end.405, label %if.then.404, !dbg !7302

cond.false.400:                                   ; preds = %land.lhs.true.395, %lor.lhs.false.388
  %367 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7303, !tbaa !2289
  %m_tempPool401 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %367, i32 0, i32 79, !dbg !7305
  %ptr402 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool401, i32 0, i32 3, !dbg !7306
  %368 = load i8*, i8** %ptr402, align 8, !dbg !7307, !tbaa !2798
  %incdec.ptr403 = getelementptr i8, i8* %368, i32 1, !dbg !7307
  store i8* %incdec.ptr403, i8** %ptr402, align 8, !dbg !7307, !tbaa !2798
  store i8 0, i8* %368, align 1, !dbg !7308, !tbaa !2307
  br i1 true, label %if.end.405, label %if.then.404, !dbg !7301

if.then.404:                                      ; preds = %cond.false.400, %cond.true.399, %cond.false, %cond.true
  store i32 1, i32* %retval, !dbg !7309
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1492, !dbg !7309

if.end.405:                                       ; preds = %cond.false.400, %cond.true.399
  %369 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7310, !tbaa !2289
  %m_tempPool406 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %369, i32 0, i32 79, !dbg !7311
  %start407 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool406, i32 0, i32 4, !dbg !7312
  %370 = load i8*, i8** %start407, align 8, !dbg !7312, !tbaa !7213
  %371 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7313, !tbaa !2289
  %m_declAttributeType408 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %371, i32 0, i32 58, !dbg !7314
  store i8* %370, i8** %m_declAttributeType408, align 8, !dbg !7315, !tbaa !2979
  %372 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7316, !tbaa !2289
  %m_tempPool409 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %372, i32 0, i32 79, !dbg !7317
  %ptr410 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool409, i32 0, i32 3, !dbg !7318
  %373 = load i8*, i8** %ptr410, align 8, !dbg !7318, !tbaa !2798
  %374 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7319, !tbaa !2289
  %m_tempPool411 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %374, i32 0, i32 79, !dbg !7320
  %start412 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool411, i32 0, i32 4, !dbg !7321
  store i8* %373, i8** %start412, align 8, !dbg !7322, !tbaa !2794
  br label %if.end.413, !dbg !7323

if.end.413:                                       ; preds = %if.end.405, %land.lhs.true.370, %lor.lhs.false.365
  %375 = load i8*, i8** %s.addr, align 8, !dbg !7324, !tbaa !2289
  %376 = load i8**, i8*** %eventEndPP, align 8, !dbg !7325, !tbaa !2289
  store i8* %375, i8** %376, align 8, !dbg !7326, !tbaa !2289
  %377 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7327, !tbaa !2289
  %m_attlistDeclHandler414 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %377, i32 0, i32 31, !dbg !7328
  %378 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %m_attlistDeclHandler414, align 8, !dbg !7328, !tbaa !2923
  %379 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7329, !tbaa !2289
  %m_handlerArg415 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %379, i32 0, i32 1, !dbg !7330
  %380 = load i8*, i8** %m_handlerArg415, align 8, !dbg !7330, !tbaa !2842
  %381 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7331, !tbaa !2289
  %m_declElementType416 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %381, i32 0, i32 61, !dbg !7332
  %382 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %m_declElementType416, align 8, !dbg !7332, !tbaa !2955
  %name = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %382, i32 0, i32 0, !dbg !7333
  %383 = load i8*, i8** %name, align 8, !dbg !7333, !tbaa !3789
  %384 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7334, !tbaa !2289
  %m_declAttributeId417 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %384, i32 0, i32 62, !dbg !7335
  %385 = load %struct.attribute_id*, %struct.attribute_id** %m_declAttributeId417, align 8, !dbg !7335, !tbaa !2959
  %name418 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %385, i32 0, i32 0, !dbg !7336
  %386 = load i8*, i8** %name418, align 8, !dbg !7336, !tbaa !3701
  %387 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7337, !tbaa !2289
  %m_declAttributeType419 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %387, i32 0, i32 58, !dbg !7338
  %388 = load i8*, i8** %m_declAttributeType419, align 8, !dbg !7338, !tbaa !2979
  %389 = load i32, i32* %role, align 4, !dbg !7339, !tbaa !3391
  %cmp420 = icmp eq i32 %389, 36, !dbg !7340
  %conv421 = zext i1 %cmp420 to i32, !dbg !7340
  call void %378(i8* %380, i8* %383, i8* %386, i8* %388, i8* null, i32 %conv421), !dbg !7341
  %390 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7342, !tbaa !2289
  %m_tempPool422 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %390, i32 0, i32 79, !dbg !7343
  call void @poolClear(%struct.STRING_POOL* %m_tempPool422), !dbg !7344
  store i8 0, i8* %handleDefault, align 1, !dbg !7345, !tbaa !2307
  br label %if.end.423, !dbg !7346

if.end.423:                                       ; preds = %if.end.413, %land.lhs.true.357, %if.end.354
  br label %if.end.424, !dbg !7347

if.end.424:                                       ; preds = %if.end.423, %sw.bb.343
  br label %sw.epilog.1478, !dbg !7348

sw.bb.425:                                        ; preds = %if.end.33, %if.end.33
  %391 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7349, !tbaa !2289
  %keepProcessing426 = getelementptr inbounds %struct.DTD, %struct.DTD* %391, i32 0, i32 6, !dbg !7350
  %392 = load i8, i8* %keepProcessing426, align 1, !dbg !7350, !tbaa !3179
  %tobool427 = icmp ne i8 %392, 0, !dbg !7349
  br i1 %tobool427, label %if.then.428, label %if.end.534, !dbg !7351

if.then.428:                                      ; preds = %sw.bb.425
  %393 = bitcast i8** %attVal to i8*, !dbg !7352
  call void @llvm.lifetime.start(i64 8, i8* %393) #2, !dbg !7352
  call void @llvm.dbg.declare(metadata i8** %attVal, metadata !1249, metadata !2293), !dbg !7353
  %394 = bitcast i32* %result429 to i8*, !dbg !7354
  call void @llvm.lifetime.start(i64 4, i8* %394) #2, !dbg !7354
  call void @llvm.dbg.declare(metadata i32* %result429, metadata !1252, metadata !2293), !dbg !7355
  %395 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7356, !tbaa !2289
  %396 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7357, !tbaa !2289
  %397 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7358, !tbaa !2289
  %m_declAttributeIsCdata430 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %397, i32 0, i32 63, !dbg !7359
  %398 = load i8, i8* %m_declAttributeIsCdata430, align 1, !dbg !7359, !tbaa !2991
  %399 = load i8*, i8** %s.addr, align 8, !dbg !7360, !tbaa !2289
  %400 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7361, !tbaa !2289
  %minBytesPerChar431 = getelementptr inbounds %struct.encoding, %struct.encoding* %400, i32 0, i32 13, !dbg !7362
  %401 = load i32, i32* %minBytesPerChar431, align 4, !dbg !7362, !tbaa !6758
  %idx.ext432 = sext i32 %401 to i64, !dbg !7363
  %add.ptr433 = getelementptr i8, i8* %399, i64 %idx.ext432, !dbg !7363
  %402 = load i8*, i8** %next.addr, align 8, !dbg !7364, !tbaa !2289
  %403 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7365, !tbaa !2289
  %minBytesPerChar434 = getelementptr inbounds %struct.encoding, %struct.encoding* %403, i32 0, i32 13, !dbg !7366
  %404 = load i32, i32* %minBytesPerChar434, align 4, !dbg !7366, !tbaa !6758
  %idx.ext435 = sext i32 %404 to i64, !dbg !7367
  %idx.neg436 = sub i64 0, %idx.ext435, !dbg !7367
  %add.ptr437 = getelementptr i8, i8* %402, i64 %idx.neg436, !dbg !7367
  %405 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7368, !tbaa !2289
  %pool438 = getelementptr inbounds %struct.DTD, %struct.DTD* %405, i32 0, i32 4, !dbg !7369
  %call439 = call i32 @storeAttributeValue(%struct.XML_ParserStruct* %395, %struct.encoding* %396, i8 zeroext %398, i8* %add.ptr433, i8* %add.ptr437, %struct.STRING_POOL* %pool438), !dbg !7370
  store i32 %call439, i32* %result429, align 4, !dbg !7355, !tbaa !2307
  %406 = load i32, i32* %result429, align 4, !dbg !7371, !tbaa !2307
  %tobool440 = icmp ne i32 %406, 0, !dbg !7371
  br i1 %tobool440, label %if.then.441, label %if.end.442, !dbg !7373

if.then.441:                                      ; preds = %if.then.428
  %407 = load i32, i32* %result429, align 4, !dbg !7374, !tbaa !2307
  store i32 %407, i32* %retval, !dbg !7375
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.530, !dbg !7375

if.end.442:                                       ; preds = %if.then.428
  %408 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7376, !tbaa !2289
  %pool443 = getelementptr inbounds %struct.DTD, %struct.DTD* %408, i32 0, i32 4, !dbg !7377
  %start444 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool443, i32 0, i32 4, !dbg !7378
  %409 = load i8*, i8** %start444, align 8, !dbg !7378, !tbaa !2794
  store i8* %409, i8** %attVal, align 8, !dbg !7379, !tbaa !2289
  %410 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7380, !tbaa !2289
  %pool445 = getelementptr inbounds %struct.DTD, %struct.DTD* %410, i32 0, i32 4, !dbg !7381
  %ptr446 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool445, i32 0, i32 3, !dbg !7382
  %411 = load i8*, i8** %ptr446, align 8, !dbg !7382, !tbaa !2798
  %412 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7383, !tbaa !2289
  %pool447 = getelementptr inbounds %struct.DTD, %struct.DTD* %412, i32 0, i32 4, !dbg !7384
  %start448 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool447, i32 0, i32 4, !dbg !7385
  store i8* %411, i8** %start448, align 8, !dbg !7386, !tbaa !2794
  %413 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7387, !tbaa !2289
  %m_declElementType449 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %413, i32 0, i32 61, !dbg !7389
  %414 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %m_declElementType449, align 8, !dbg !7389, !tbaa !2955
  %415 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7390, !tbaa !2289
  %m_declAttributeId450 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %415, i32 0, i32 62, !dbg !7391
  %416 = load %struct.attribute_id*, %struct.attribute_id** %m_declAttributeId450, align 8, !dbg !7391, !tbaa !2959
  %417 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7392, !tbaa !2289
  %m_declAttributeIsCdata451 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %417, i32 0, i32 63, !dbg !7393
  %418 = load i8, i8* %m_declAttributeIsCdata451, align 1, !dbg !7393, !tbaa !2991
  %419 = load i8*, i8** %attVal, align 8, !dbg !7394, !tbaa !2289
  %420 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7395, !tbaa !2289
  %call452 = call i32 @defineAttribute(%struct.ELEMENT_TYPE* %414, %struct.attribute_id* %416, i8 zeroext %418, i8 zeroext 0, i8* %419, %struct.XML_ParserStruct* %420), !dbg !7396
  %tobool453 = icmp ne i32 %call452, 0, !dbg !7396
  br i1 %tobool453, label %if.end.455, label %if.then.454, !dbg !7397

if.then.454:                                      ; preds = %if.end.442
  store i32 1, i32* %retval, !dbg !7398
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.530, !dbg !7398

if.end.455:                                       ; preds = %if.end.442
  %421 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7399, !tbaa !2289
  %m_attlistDeclHandler456 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %421, i32 0, i32 31, !dbg !7401
  %422 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %m_attlistDeclHandler456, align 8, !dbg !7401, !tbaa !2923
  %tobool457 = icmp ne void (i8*, i8*, i8*, i8*, i8*, i32)* %422, null, !dbg !7402
  br i1 %tobool457, label %land.lhs.true.458, label %if.end.529, !dbg !7403

land.lhs.true.458:                                ; preds = %if.end.455
  %423 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7404, !tbaa !2289
  %m_declAttributeType459 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %423, i32 0, i32 58, !dbg !7406
  %424 = load i8*, i8** %m_declAttributeType459, align 8, !dbg !7406, !tbaa !2979
  %tobool460 = icmp ne i8* %424, null, !dbg !7407
  br i1 %tobool460, label %if.then.461, label %if.end.529, !dbg !7408

if.then.461:                                      ; preds = %land.lhs.true.458
  %425 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7409, !tbaa !2289
  %m_declAttributeType462 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %425, i32 0, i32 58, !dbg !7412
  %426 = load i8*, i8** %m_declAttributeType462, align 8, !dbg !7412, !tbaa !2979
  %427 = load i8, i8* %426, align 1, !dbg !7413, !tbaa !2307
  %conv463 = sext i8 %427 to i32, !dbg !7413
  %cmp464 = icmp eq i32 %conv463, 40, !dbg !7414
  br i1 %cmp464, label %if.then.477, label %lor.lhs.false.466, !dbg !7415

lor.lhs.false.466:                                ; preds = %if.then.461
  %428 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7416, !tbaa !2289
  %m_declAttributeType467 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %428, i32 0, i32 58, !dbg !7418
  %429 = load i8*, i8** %m_declAttributeType467, align 8, !dbg !7418, !tbaa !2979
  %430 = load i8, i8* %429, align 1, !dbg !7419, !tbaa !2307
  %conv468 = sext i8 %430 to i32, !dbg !7419
  %cmp469 = icmp eq i32 %conv468, 78, !dbg !7420
  br i1 %cmp469, label %land.lhs.true.471, label %if.end.518, !dbg !7421

land.lhs.true.471:                                ; preds = %lor.lhs.false.466
  %431 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7422, !tbaa !2289
  %m_declAttributeType472 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %431, i32 0, i32 58, !dbg !7423
  %432 = load i8*, i8** %m_declAttributeType472, align 8, !dbg !7423, !tbaa !2979
  %arrayidx473 = getelementptr i8, i8* %432, i64 1, !dbg !7424
  %433 = load i8, i8* %arrayidx473, align 1, !dbg !7424, !tbaa !2307
  %conv474 = sext i8 %433 to i32, !dbg !7424
  %cmp475 = icmp eq i32 %conv474, 79, !dbg !7425
  br i1 %cmp475, label %if.then.477, label %if.end.518, !dbg !7426

if.then.477:                                      ; preds = %land.lhs.true.471, %if.then.461
  %434 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7427, !tbaa !2289
  %m_tempPool478 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %434, i32 0, i32 79, !dbg !7430
  %ptr479 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool478, i32 0, i32 3, !dbg !7431
  %435 = load i8*, i8** %ptr479, align 8, !dbg !7431, !tbaa !2798
  %436 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7432, !tbaa !2289
  %m_tempPool480 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %436, i32 0, i32 79, !dbg !7433
  %end481 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool480, i32 0, i32 2, !dbg !7434
  %437 = load i8*, i8** %end481, align 8, !dbg !7434, !tbaa !2802
  %cmp482 = icmp eq i8* %435, %437, !dbg !7435
  br i1 %cmp482, label %land.lhs.true.484, label %cond.false.489, !dbg !7436

land.lhs.true.484:                                ; preds = %if.then.477
  %438 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7437, !tbaa !2289
  %m_tempPool485 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %438, i32 0, i32 79, !dbg !7439
  %call486 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool485), !dbg !7440
  %tobool487 = icmp ne i8 %call486, 0, !dbg !7440
  br i1 %tobool487, label %cond.false.489, label %cond.true.488, !dbg !7441

cond.true.488:                                    ; preds = %land.lhs.true.484
  br i1 false, label %lor.lhs.false.493, label %if.then.509, !dbg !7442

cond.false.489:                                   ; preds = %land.lhs.true.484, %if.then.477
  %439 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7443, !tbaa !2289
  %m_tempPool490 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %439, i32 0, i32 79, !dbg !7445
  %ptr491 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool490, i32 0, i32 3, !dbg !7446
  %440 = load i8*, i8** %ptr491, align 8, !dbg !7447, !tbaa !2798
  %incdec.ptr492 = getelementptr i8, i8* %440, i32 1, !dbg !7447
  store i8* %incdec.ptr492, i8** %ptr491, align 8, !dbg !7447, !tbaa !2798
  store i8 41, i8* %440, align 1, !dbg !7448, !tbaa !2307
  br i1 true, label %lor.lhs.false.493, label %if.then.509, !dbg !7441

lor.lhs.false.493:                                ; preds = %cond.false.489, %cond.true.488
  %441 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7449, !tbaa !2289
  %m_tempPool494 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %441, i32 0, i32 79, !dbg !7450
  %ptr495 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool494, i32 0, i32 3, !dbg !7451
  %442 = load i8*, i8** %ptr495, align 8, !dbg !7451, !tbaa !2798
  %443 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7452, !tbaa !2289
  %m_tempPool496 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %443, i32 0, i32 79, !dbg !7453
  %end497 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool496, i32 0, i32 2, !dbg !7454
  %444 = load i8*, i8** %end497, align 8, !dbg !7454, !tbaa !2802
  %cmp498 = icmp eq i8* %442, %444, !dbg !7455
  br i1 %cmp498, label %land.lhs.true.500, label %cond.false.505, !dbg !7456

land.lhs.true.500:                                ; preds = %lor.lhs.false.493
  %445 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7457, !tbaa !2289
  %m_tempPool501 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %445, i32 0, i32 79, !dbg !7458
  %call502 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool501), !dbg !7459
  %tobool503 = icmp ne i8 %call502, 0, !dbg !7459
  br i1 %tobool503, label %cond.false.505, label %cond.true.504, !dbg !7460

cond.true.504:                                    ; preds = %land.lhs.true.500
  br i1 false, label %if.end.510, label %if.then.509, !dbg !7461

cond.false.505:                                   ; preds = %land.lhs.true.500, %lor.lhs.false.493
  %446 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7462, !tbaa !2289
  %m_tempPool506 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %446, i32 0, i32 79, !dbg !7464
  %ptr507 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool506, i32 0, i32 3, !dbg !7465
  %447 = load i8*, i8** %ptr507, align 8, !dbg !7466, !tbaa !2798
  %incdec.ptr508 = getelementptr i8, i8* %447, i32 1, !dbg !7466
  store i8* %incdec.ptr508, i8** %ptr507, align 8, !dbg !7466, !tbaa !2798
  store i8 0, i8* %447, align 1, !dbg !7467, !tbaa !2307
  br i1 true, label %if.end.510, label %if.then.509, !dbg !7460

if.then.509:                                      ; preds = %cond.false.505, %cond.true.504, %cond.false.489, %cond.true.488
  store i32 1, i32* %retval, !dbg !7468
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.530, !dbg !7468

if.end.510:                                       ; preds = %cond.false.505, %cond.true.504
  %448 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7469, !tbaa !2289
  %m_tempPool511 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %448, i32 0, i32 79, !dbg !7470
  %start512 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool511, i32 0, i32 4, !dbg !7471
  %449 = load i8*, i8** %start512, align 8, !dbg !7471, !tbaa !7213
  %450 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7472, !tbaa !2289
  %m_declAttributeType513 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %450, i32 0, i32 58, !dbg !7473
  store i8* %449, i8** %m_declAttributeType513, align 8, !dbg !7474, !tbaa !2979
  %451 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7475, !tbaa !2289
  %m_tempPool514 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %451, i32 0, i32 79, !dbg !7476
  %ptr515 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool514, i32 0, i32 3, !dbg !7477
  %452 = load i8*, i8** %ptr515, align 8, !dbg !7477, !tbaa !2798
  %453 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7478, !tbaa !2289
  %m_tempPool516 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %453, i32 0, i32 79, !dbg !7479
  %start517 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool516, i32 0, i32 4, !dbg !7480
  store i8* %452, i8** %start517, align 8, !dbg !7481, !tbaa !2794
  br label %if.end.518, !dbg !7482

if.end.518:                                       ; preds = %if.end.510, %land.lhs.true.471, %lor.lhs.false.466
  %454 = load i8*, i8** %s.addr, align 8, !dbg !7483, !tbaa !2289
  %455 = load i8**, i8*** %eventEndPP, align 8, !dbg !7484, !tbaa !2289
  store i8* %454, i8** %455, align 8, !dbg !7485, !tbaa !2289
  %456 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7486, !tbaa !2289
  %m_attlistDeclHandler519 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %456, i32 0, i32 31, !dbg !7487
  %457 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %m_attlistDeclHandler519, align 8, !dbg !7487, !tbaa !2923
  %458 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7488, !tbaa !2289
  %m_handlerArg520 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %458, i32 0, i32 1, !dbg !7489
  %459 = load i8*, i8** %m_handlerArg520, align 8, !dbg !7489, !tbaa !2842
  %460 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7490, !tbaa !2289
  %m_declElementType521 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %460, i32 0, i32 61, !dbg !7491
  %461 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %m_declElementType521, align 8, !dbg !7491, !tbaa !2955
  %name522 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %461, i32 0, i32 0, !dbg !7492
  %462 = load i8*, i8** %name522, align 8, !dbg !7492, !tbaa !3789
  %463 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7493, !tbaa !2289
  %m_declAttributeId523 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %463, i32 0, i32 62, !dbg !7494
  %464 = load %struct.attribute_id*, %struct.attribute_id** %m_declAttributeId523, align 8, !dbg !7494, !tbaa !2959
  %name524 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %464, i32 0, i32 0, !dbg !7495
  %465 = load i8*, i8** %name524, align 8, !dbg !7495, !tbaa !3701
  %466 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7496, !tbaa !2289
  %m_declAttributeType525 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %466, i32 0, i32 58, !dbg !7497
  %467 = load i8*, i8** %m_declAttributeType525, align 8, !dbg !7497, !tbaa !2979
  %468 = load i8*, i8** %attVal, align 8, !dbg !7498, !tbaa !2289
  %469 = load i32, i32* %role, align 4, !dbg !7499, !tbaa !3391
  %cmp526 = icmp eq i32 %469, 38, !dbg !7500
  %conv527 = zext i1 %cmp526 to i32, !dbg !7500
  call void %457(i8* %459, i8* %462, i8* %465, i8* %467, i8* %468, i32 %conv527), !dbg !7501
  %470 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7502, !tbaa !2289
  %m_tempPool528 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %470, i32 0, i32 79, !dbg !7503
  call void @poolClear(%struct.STRING_POOL* %m_tempPool528), !dbg !7504
  store i8 0, i8* %handleDefault, align 1, !dbg !7505, !tbaa !2307
  br label %if.end.529, !dbg !7506

if.end.529:                                       ; preds = %if.end.518, %land.lhs.true.458, %if.end.455
  store i32 0, i32* %cleanup.dest.slot, !dbg !7507
  br label %cleanup.530, !dbg !7507

cleanup.530:                                      ; preds = %if.end.529, %if.then.509, %if.then.454, %if.then.441
  %471 = bitcast i32* %result429 to i8*, !dbg !7508
  call void @llvm.lifetime.end(i64 4, i8* %471) #2, !dbg !7508
  %472 = bitcast i8** %attVal to i8*, !dbg !7508
  call void @llvm.lifetime.end(i64 8, i8* %472) #2, !dbg !7508
  %cleanup.dest.532 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.532, label %cleanup.1492 [
    i32 0, label %cleanup.cont.533
  ]

cleanup.cont.533:                                 ; preds = %cleanup.530
  br label %if.end.534, !dbg !7510

if.end.534:                                       ; preds = %cleanup.cont.533, %sw.bb.425
  br label %sw.epilog.1478, !dbg !7511

sw.bb.535:                                        ; preds = %if.end.33
  %473 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7512, !tbaa !2289
  %keepProcessing536 = getelementptr inbounds %struct.DTD, %struct.DTD* %473, i32 0, i32 6, !dbg !7513
  %474 = load i8, i8* %keepProcessing536, align 1, !dbg !7513, !tbaa !3179
  %tobool537 = icmp ne i8 %474, 0, !dbg !7512
  br i1 %tobool537, label %if.then.538, label %if.end.591, !dbg !7514

if.then.538:                                      ; preds = %sw.bb.535
  %475 = bitcast i32* %result539 to i8*, !dbg !7515
  call void @llvm.lifetime.start(i64 4, i8* %475) #2, !dbg !7515
  call void @llvm.dbg.declare(metadata i32* %result539, metadata !1253, metadata !2293), !dbg !7516
  %476 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7517, !tbaa !2289
  %477 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7518, !tbaa !2289
  %478 = load i8*, i8** %s.addr, align 8, !dbg !7519, !tbaa !2289
  %479 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7520, !tbaa !2289
  %minBytesPerChar540 = getelementptr inbounds %struct.encoding, %struct.encoding* %479, i32 0, i32 13, !dbg !7521
  %480 = load i32, i32* %minBytesPerChar540, align 4, !dbg !7521, !tbaa !6758
  %idx.ext541 = sext i32 %480 to i64, !dbg !7522
  %add.ptr542 = getelementptr i8, i8* %478, i64 %idx.ext541, !dbg !7522
  %481 = load i8*, i8** %next.addr, align 8, !dbg !7523, !tbaa !2289
  %482 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7524, !tbaa !2289
  %minBytesPerChar543 = getelementptr inbounds %struct.encoding, %struct.encoding* %482, i32 0, i32 13, !dbg !7525
  %483 = load i32, i32* %minBytesPerChar543, align 4, !dbg !7525, !tbaa !6758
  %idx.ext544 = sext i32 %483 to i64, !dbg !7526
  %idx.neg545 = sub i64 0, %idx.ext544, !dbg !7526
  %add.ptr546 = getelementptr i8, i8* %481, i64 %idx.neg545, !dbg !7526
  %call547 = call i32 @storeEntityValue(%struct.XML_ParserStruct* %476, %struct.encoding* %477, i8* %add.ptr542, i8* %add.ptr546), !dbg !7527
  store i32 %call547, i32* %result539, align 4, !dbg !7516, !tbaa !2307
  %484 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7528, !tbaa !2289
  %m_declEntity548 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %484, i32 0, i32 54, !dbg !7530
  %485 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity548, align 8, !dbg !7530, !tbaa !2963
  %tobool549 = icmp ne %struct.ENTITY* %485, null, !dbg !7531
  br i1 %tobool549, label %if.then.550, label %if.else.578, !dbg !7532

if.then.550:                                      ; preds = %if.then.538
  %486 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7533, !tbaa !2289
  %entityValuePool = getelementptr inbounds %struct.DTD, %struct.DTD* %486, i32 0, i32 5, !dbg !7535
  %start551 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %entityValuePool, i32 0, i32 4, !dbg !7536
  %487 = load i8*, i8** %start551, align 8, !dbg !7536, !tbaa !2794
  %488 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7537, !tbaa !2289
  %m_declEntity552 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %488, i32 0, i32 54, !dbg !7538
  %489 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity552, align 8, !dbg !7538, !tbaa !2963
  %textPtr = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %489, i32 0, i32 1, !dbg !7539
  store i8* %487, i8** %textPtr, align 8, !dbg !7540, !tbaa !7541
  %490 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7542, !tbaa !2289
  %entityValuePool553 = getelementptr inbounds %struct.DTD, %struct.DTD* %490, i32 0, i32 5, !dbg !7543
  %ptr554 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %entityValuePool553, i32 0, i32 3, !dbg !7544
  %491 = load i8*, i8** %ptr554, align 8, !dbg !7544, !tbaa !2798
  %492 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7545, !tbaa !2289
  %entityValuePool555 = getelementptr inbounds %struct.DTD, %struct.DTD* %492, i32 0, i32 5, !dbg !7546
  %start556 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %entityValuePool555, i32 0, i32 4, !dbg !7547
  %493 = load i8*, i8** %start556, align 8, !dbg !7547, !tbaa !2794
  %sub.ptr.lhs.cast = ptrtoint i8* %491 to i64, !dbg !7548
  %sub.ptr.rhs.cast = ptrtoint i8* %493 to i64, !dbg !7548
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7548
  %conv557 = trunc i64 %sub.ptr.sub to i32, !dbg !7549
  %494 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7550, !tbaa !2289
  %m_declEntity558 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %494, i32 0, i32 54, !dbg !7551
  %495 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity558, align 8, !dbg !7551, !tbaa !2963
  %textLen = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %495, i32 0, i32 2, !dbg !7552
  store i32 %conv557, i32* %textLen, align 4, !dbg !7553, !tbaa !7554
  %496 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7555, !tbaa !2289
  %entityValuePool559 = getelementptr inbounds %struct.DTD, %struct.DTD* %496, i32 0, i32 5, !dbg !7556
  %ptr560 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %entityValuePool559, i32 0, i32 3, !dbg !7557
  %497 = load i8*, i8** %ptr560, align 8, !dbg !7557, !tbaa !2798
  %498 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7558, !tbaa !2289
  %entityValuePool561 = getelementptr inbounds %struct.DTD, %struct.DTD* %498, i32 0, i32 5, !dbg !7559
  %start562 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %entityValuePool561, i32 0, i32 4, !dbg !7560
  store i8* %497, i8** %start562, align 8, !dbg !7561, !tbaa !2794
  %499 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7562, !tbaa !2289
  %m_entityDeclHandler563 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %499, i32 0, i32 32, !dbg !7564
  %500 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler563, align 8, !dbg !7564, !tbaa !2927
  %tobool564 = icmp ne void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %500, null, !dbg !7565
  br i1 %tobool564, label %if.then.565, label %if.end.577, !dbg !7566

if.then.565:                                      ; preds = %if.then.550
  %501 = load i8*, i8** %s.addr, align 8, !dbg !7567, !tbaa !2289
  %502 = load i8**, i8*** %eventEndPP, align 8, !dbg !7569, !tbaa !2289
  store i8* %501, i8** %502, align 8, !dbg !7570, !tbaa !2289
  %503 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7571, !tbaa !2289
  %m_entityDeclHandler566 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %503, i32 0, i32 32, !dbg !7572
  %504 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler566, align 8, !dbg !7572, !tbaa !2927
  %505 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7573, !tbaa !2289
  %m_handlerArg567 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %505, i32 0, i32 1, !dbg !7574
  %506 = load i8*, i8** %m_handlerArg567, align 8, !dbg !7574, !tbaa !2842
  %507 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7575, !tbaa !2289
  %m_declEntity568 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %507, i32 0, i32 54, !dbg !7576
  %508 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity568, align 8, !dbg !7576, !tbaa !2963
  %name569 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %508, i32 0, i32 0, !dbg !7577
  %509 = load i8*, i8** %name569, align 8, !dbg !7577, !tbaa !7578
  %510 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7579, !tbaa !2289
  %m_declEntity570 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %510, i32 0, i32 54, !dbg !7580
  %511 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity570, align 8, !dbg !7580, !tbaa !2963
  %is_param = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %511, i32 0, i32 9, !dbg !7581
  %512 = load i8, i8* %is_param, align 1, !dbg !7581, !tbaa !7582
  %conv571 = zext i8 %512 to i32, !dbg !7583
  %513 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7584, !tbaa !2289
  %m_declEntity572 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %513, i32 0, i32 54, !dbg !7585
  %514 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity572, align 8, !dbg !7585, !tbaa !2963
  %textPtr573 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %514, i32 0, i32 1, !dbg !7586
  %515 = load i8*, i8** %textPtr573, align 8, !dbg !7586, !tbaa !7541
  %516 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7587, !tbaa !2289
  %m_declEntity574 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %516, i32 0, i32 54, !dbg !7588
  %517 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity574, align 8, !dbg !7588, !tbaa !2963
  %textLen575 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %517, i32 0, i32 2, !dbg !7589
  %518 = load i32, i32* %textLen575, align 4, !dbg !7589, !tbaa !7554
  %519 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7590, !tbaa !2289
  %m_curBase576 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %519, i32 0, i32 66, !dbg !7591
  %520 = load i8*, i8** %m_curBase576, align 8, !dbg !7591, !tbaa !2829
  call void %504(i8* %506, i8* %509, i32 %conv571, i8* %515, i32 %518, i8* %520, i8* null, i8* null, i8* null), !dbg !7592
  store i8 0, i8* %handleDefault, align 1, !dbg !7593, !tbaa !2307
  br label %if.end.577, !dbg !7594

if.end.577:                                       ; preds = %if.then.565, %if.then.550
  br label %if.end.583, !dbg !7595

if.else.578:                                      ; preds = %if.then.538
  %521 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7596, !tbaa !2289
  %entityValuePool579 = getelementptr inbounds %struct.DTD, %struct.DTD* %521, i32 0, i32 5, !dbg !7597
  %start580 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %entityValuePool579, i32 0, i32 4, !dbg !7598
  %522 = load i8*, i8** %start580, align 8, !dbg !7598, !tbaa !2794
  %523 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7599, !tbaa !2289
  %entityValuePool581 = getelementptr inbounds %struct.DTD, %struct.DTD* %523, i32 0, i32 5, !dbg !7600
  %ptr582 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %entityValuePool581, i32 0, i32 3, !dbg !7601
  store i8* %522, i8** %ptr582, align 8, !dbg !7602, !tbaa !2798
  br label %if.end.583

if.end.583:                                       ; preds = %if.else.578, %if.end.577
  %524 = load i32, i32* %result539, align 4, !dbg !7603, !tbaa !2307
  %cmp584 = icmp ne i32 %524, 0, !dbg !7605
  br i1 %cmp584, label %if.then.586, label %if.end.587, !dbg !7606

if.then.586:                                      ; preds = %if.end.583
  %525 = load i32, i32* %result539, align 4, !dbg !7607, !tbaa !2307
  store i32 %525, i32* %retval, !dbg !7608
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.588, !dbg !7608

if.end.587:                                       ; preds = %if.end.583
  store i32 0, i32* %cleanup.dest.slot, !dbg !7609
  br label %cleanup.588, !dbg !7609

cleanup.588:                                      ; preds = %if.end.587, %if.then.586
  %526 = bitcast i32* %result539 to i8*, !dbg !7610
  call void @llvm.lifetime.end(i64 4, i8* %526) #2, !dbg !7610
  %cleanup.dest.589 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.589, label %cleanup.1492 [
    i32 0, label %cleanup.cont.590
  ]

cleanup.cont.590:                                 ; preds = %cleanup.588
  br label %if.end.591, !dbg !7612

if.end.591:                                       ; preds = %cleanup.cont.590, %sw.bb.535
  br label %sw.epilog.1478, !dbg !7613

sw.bb.592:                                        ; preds = %if.end.33
  %527 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7614, !tbaa !2289
  %m_useForeignDTD593 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %527, i32 0, i32 87, !dbg !7615
  store i8 0, i8* %m_useForeignDTD593, align 1, !dbg !7616, !tbaa !3060
  %528 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7617, !tbaa !2289
  %hasParamEntityRefs594 = getelementptr inbounds %struct.DTD, %struct.DTD* %528, i32 0, i32 7, !dbg !7618
  store i8 1, i8* %hasParamEntityRefs594, align 1, !dbg !7619, !tbaa !3183
  %529 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7620, !tbaa !2289
  %m_startDoctypeDeclHandler595 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %529, i32 0, i32 19, !dbg !7622
  %530 = load void (i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i32)** %m_startDoctypeDeclHandler595, align 8, !dbg !7622, !tbaa !2878
  %tobool596 = icmp ne void (i8*, i8*, i8*, i8*, i32)* %530, null, !dbg !7623
  br i1 %tobool596, label %if.then.597, label %if.else.617, !dbg !7624

if.then.597:                                      ; preds = %sw.bb.592
  %531 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7625, !tbaa !2289
  %m_tempPool598 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %531, i32 0, i32 79, !dbg !7627
  %532 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7628, !tbaa !2289
  %533 = load i8*, i8** %s.addr, align 8, !dbg !7629, !tbaa !2289
  %534 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7630, !tbaa !2289
  %minBytesPerChar599 = getelementptr inbounds %struct.encoding, %struct.encoding* %534, i32 0, i32 13, !dbg !7631
  %535 = load i32, i32* %minBytesPerChar599, align 4, !dbg !7631, !tbaa !6758
  %idx.ext600 = sext i32 %535 to i64, !dbg !7632
  %add.ptr601 = getelementptr i8, i8* %533, i64 %idx.ext600, !dbg !7632
  %536 = load i8*, i8** %next.addr, align 8, !dbg !7633, !tbaa !2289
  %537 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7634, !tbaa !2289
  %minBytesPerChar602 = getelementptr inbounds %struct.encoding, %struct.encoding* %537, i32 0, i32 13, !dbg !7635
  %538 = load i32, i32* %minBytesPerChar602, align 4, !dbg !7635, !tbaa !6758
  %idx.ext603 = sext i32 %538 to i64, !dbg !7636
  %idx.neg604 = sub i64 0, %idx.ext603, !dbg !7636
  %add.ptr605 = getelementptr i8, i8* %536, i64 %idx.neg604, !dbg !7636
  %call606 = call i8* @poolStoreString(%struct.STRING_POOL* %m_tempPool598, %struct.encoding* %532, i8* %add.ptr601, i8* %add.ptr605), !dbg !7637
  %539 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7638, !tbaa !2289
  %m_doctypeSysid607 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %539, i32 0, i32 56, !dbg !7639
  store i8* %call606, i8** %m_doctypeSysid607, align 8, !dbg !7640, !tbaa !2971
  %540 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7641, !tbaa !2289
  %m_doctypeSysid608 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %540, i32 0, i32 56, !dbg !7643
  %541 = load i8*, i8** %m_doctypeSysid608, align 8, !dbg !7643, !tbaa !2971
  %cmp609 = icmp eq i8* %541, null, !dbg !7644
  br i1 %cmp609, label %if.then.611, label %if.end.612, !dbg !7645

if.then.611:                                      ; preds = %if.then.597
  store i32 1, i32* %retval, !dbg !7646
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1492, !dbg !7646

if.end.612:                                       ; preds = %if.then.597
  %542 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7647, !tbaa !2289
  %m_tempPool613 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %542, i32 0, i32 79, !dbg !7648
  %ptr614 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool613, i32 0, i32 3, !dbg !7649
  %543 = load i8*, i8** %ptr614, align 8, !dbg !7649, !tbaa !2798
  %544 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7650, !tbaa !2289
  %m_tempPool615 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %544, i32 0, i32 79, !dbg !7651
  %start616 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool615, i32 0, i32 4, !dbg !7652
  store i8* %543, i8** %start616, align 8, !dbg !7653, !tbaa !2794
  store i8 0, i8* %handleDefault, align 1, !dbg !7654, !tbaa !2307
  br label %if.end.619, !dbg !7655

if.else.617:                                      ; preds = %sw.bb.592
  %545 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7656, !tbaa !2289
  %m_doctypeSysid618 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %545, i32 0, i32 56, !dbg !7657
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @doProlog.externalSubsetName, i32 0, i32 0), i8** %m_doctypeSysid618, align 8, !dbg !7658, !tbaa !2971
  br label %if.end.619

if.end.619:                                       ; preds = %if.else.617, %if.end.612
  %546 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7659, !tbaa !2289
  %standalone620 = getelementptr inbounds %struct.DTD, %struct.DTD* %546, i32 0, i32 8, !dbg !7661
  %547 = load i8, i8* %standalone620, align 1, !dbg !7661, !tbaa !3187
  %tobool621 = icmp ne i8 %547, 0, !dbg !7659
  br i1 %tobool621, label %if.end.634, label %land.lhs.true.622, !dbg !7662

land.lhs.true.622:                                ; preds = %if.end.619
  %548 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7663, !tbaa !2289
  %m_paramEntityParsing623 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %548, i32 0, i32 88, !dbg !7665
  %549 = load i32, i32* %m_paramEntityParsing623, align 4, !dbg !7665, !tbaa !3064
  %tobool624 = icmp ne i32 %549, 0, !dbg !7666
  br i1 %tobool624, label %if.end.634, label %land.lhs.true.625, !dbg !7667

land.lhs.true.625:                                ; preds = %land.lhs.true.622
  %550 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7668, !tbaa !2289
  %m_notStandaloneHandler626 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %550, i32 0, i32 25, !dbg !7669
  %551 = load i32 (i8*)*, i32 (i8*)** %m_notStandaloneHandler626, align 8, !dbg !7669, !tbaa !2902
  %tobool627 = icmp ne i32 (i8*)* %551, null, !dbg !7670
  br i1 %tobool627, label %land.lhs.true.628, label %if.end.634, !dbg !7671

land.lhs.true.628:                                ; preds = %land.lhs.true.625
  %552 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7672, !tbaa !2289
  %m_notStandaloneHandler629 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %552, i32 0, i32 25, !dbg !7673
  %553 = load i32 (i8*)*, i32 (i8*)** %m_notStandaloneHandler629, align 8, !dbg !7673, !tbaa !2902
  %554 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7674, !tbaa !2289
  %m_handlerArg630 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %554, i32 0, i32 1, !dbg !7675
  %555 = load i8*, i8** %m_handlerArg630, align 8, !dbg !7675, !tbaa !2842
  %call631 = call i32 %553(i8* %555), !dbg !7676
  %tobool632 = icmp ne i32 %call631, 0, !dbg !7676
  br i1 %tobool632, label %if.end.634, label %if.then.633, !dbg !7677

if.then.633:                                      ; preds = %land.lhs.true.628
  store i32 22, i32* %retval, !dbg !7678
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1492, !dbg !7678

if.end.634:                                       ; preds = %land.lhs.true.628, %land.lhs.true.625, %land.lhs.true.622, %if.end.619
  %556 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7679, !tbaa !2289
  %m_declEntity635 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %556, i32 0, i32 54, !dbg !7681
  %557 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity635, align 8, !dbg !7681, !tbaa !2963
  %tobool636 = icmp ne %struct.ENTITY* %557, null, !dbg !7682
  br i1 %tobool636, label %if.end.647, label %if.then.637, !dbg !7683

if.then.637:                                      ; preds = %if.end.634
  %558 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7684, !tbaa !2289
  %559 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7686, !tbaa !2289
  %paramEntities638 = getelementptr inbounds %struct.DTD, %struct.DTD* %559, i32 0, i32 10, !dbg !7687
  %call639 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %558, %struct.HASH_TABLE* %paramEntities638, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @doProlog.externalSubsetName, i32 0, i32 0), i64 64), !dbg !7688
  %560 = bitcast %struct.NAMED* %call639 to %struct.ENTITY*, !dbg !7689
  %561 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7690, !tbaa !2289
  %m_declEntity640 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %561, i32 0, i32 54, !dbg !7691
  store %struct.ENTITY* %560, %struct.ENTITY** %m_declEntity640, align 8, !dbg !7692, !tbaa !2963
  %562 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7693, !tbaa !2289
  %m_declEntity641 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %562, i32 0, i32 54, !dbg !7695
  %563 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity641, align 8, !dbg !7695, !tbaa !2963
  %tobool642 = icmp ne %struct.ENTITY* %563, null, !dbg !7696
  br i1 %tobool642, label %if.end.644, label %if.then.643, !dbg !7697

if.then.643:                                      ; preds = %if.then.637
  store i32 1, i32* %retval, !dbg !7698
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1492, !dbg !7698

if.end.644:                                       ; preds = %if.then.637
  %564 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7699, !tbaa !2289
  %m_declEntity645 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %564, i32 0, i32 54, !dbg !7700
  %565 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity645, align 8, !dbg !7700, !tbaa !2963
  %publicId646 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %565, i32 0, i32 6, !dbg !7701
  store i8* null, i8** %publicId646, align 8, !dbg !7702, !tbaa !6833
  br label %if.end.647, !dbg !7703

if.end.647:                                       ; preds = %if.end.644, %if.end.634
  br label %sw.bb.648, !dbg !7704

sw.bb.648:                                        ; preds = %if.end.33, %if.end.647
  %566 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7706, !tbaa !2289
  %keepProcessing649 = getelementptr inbounds %struct.DTD, %struct.DTD* %566, i32 0, i32 6, !dbg !7708
  %567 = load i8, i8* %keepProcessing649, align 1, !dbg !7708, !tbaa !3179
  %conv650 = zext i8 %567 to i32, !dbg !7706
  %tobool651 = icmp ne i32 %conv650, 0, !dbg !7706
  br i1 %tobool651, label %land.lhs.true.652, label %if.end.683, !dbg !7709

land.lhs.true.652:                                ; preds = %sw.bb.648
  %568 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7710, !tbaa !2289
  %m_declEntity653 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %568, i32 0, i32 54, !dbg !7712
  %569 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity653, align 8, !dbg !7712, !tbaa !2963
  %tobool654 = icmp ne %struct.ENTITY* %569, null, !dbg !7713
  br i1 %tobool654, label %if.then.655, label %if.end.683, !dbg !7714

if.then.655:                                      ; preds = %land.lhs.true.652
  %570 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7715, !tbaa !2289
  %pool656 = getelementptr inbounds %struct.DTD, %struct.DTD* %570, i32 0, i32 4, !dbg !7717
  %571 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7718, !tbaa !2289
  %572 = load i8*, i8** %s.addr, align 8, !dbg !7719, !tbaa !2289
  %573 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7720, !tbaa !2289
  %minBytesPerChar657 = getelementptr inbounds %struct.encoding, %struct.encoding* %573, i32 0, i32 13, !dbg !7721
  %574 = load i32, i32* %minBytesPerChar657, align 4, !dbg !7721, !tbaa !6758
  %idx.ext658 = sext i32 %574 to i64, !dbg !7722
  %add.ptr659 = getelementptr i8, i8* %572, i64 %idx.ext658, !dbg !7722
  %575 = load i8*, i8** %next.addr, align 8, !dbg !7723, !tbaa !2289
  %576 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7724, !tbaa !2289
  %minBytesPerChar660 = getelementptr inbounds %struct.encoding, %struct.encoding* %576, i32 0, i32 13, !dbg !7725
  %577 = load i32, i32* %minBytesPerChar660, align 4, !dbg !7725, !tbaa !6758
  %idx.ext661 = sext i32 %577 to i64, !dbg !7726
  %idx.neg662 = sub i64 0, %idx.ext661, !dbg !7726
  %add.ptr663 = getelementptr i8, i8* %575, i64 %idx.neg662, !dbg !7726
  %call664 = call i8* @poolStoreString(%struct.STRING_POOL* %pool656, %struct.encoding* %571, i8* %add.ptr659, i8* %add.ptr663), !dbg !7727
  %578 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7728, !tbaa !2289
  %m_declEntity665 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %578, i32 0, i32 54, !dbg !7729
  %579 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity665, align 8, !dbg !7729, !tbaa !2963
  %systemId666 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %579, i32 0, i32 4, !dbg !7730
  store i8* %call664, i8** %systemId666, align 8, !dbg !7731, !tbaa !6933
  %580 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7732, !tbaa !2289
  %m_declEntity667 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %580, i32 0, i32 54, !dbg !7734
  %581 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity667, align 8, !dbg !7734, !tbaa !2963
  %systemId668 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %581, i32 0, i32 4, !dbg !7735
  %582 = load i8*, i8** %systemId668, align 8, !dbg !7735, !tbaa !6933
  %tobool669 = icmp ne i8* %582, null, !dbg !7736
  br i1 %tobool669, label %if.end.671, label %if.then.670, !dbg !7737

if.then.670:                                      ; preds = %if.then.655
  store i32 1, i32* %retval, !dbg !7738
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1492, !dbg !7738

if.end.671:                                       ; preds = %if.then.655
  %583 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7739, !tbaa !2289
  %m_curBase672 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %583, i32 0, i32 66, !dbg !7740
  %584 = load i8*, i8** %m_curBase672, align 8, !dbg !7740, !tbaa !2829
  %585 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7741, !tbaa !2289
  %m_declEntity673 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %585, i32 0, i32 54, !dbg !7742
  %586 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity673, align 8, !dbg !7742, !tbaa !2963
  %base674 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %586, i32 0, i32 5, !dbg !7743
  store i8* %584, i8** %base674, align 8, !dbg !7744, !tbaa !6920
  %587 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7745, !tbaa !2289
  %pool675 = getelementptr inbounds %struct.DTD, %struct.DTD* %587, i32 0, i32 4, !dbg !7746
  %ptr676 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool675, i32 0, i32 3, !dbg !7747
  %588 = load i8*, i8** %ptr676, align 8, !dbg !7747, !tbaa !2798
  %589 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7748, !tbaa !2289
  %pool677 = getelementptr inbounds %struct.DTD, %struct.DTD* %589, i32 0, i32 4, !dbg !7749
  %start678 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool677, i32 0, i32 4, !dbg !7750
  store i8* %588, i8** %start678, align 8, !dbg !7751, !tbaa !2794
  %590 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7752, !tbaa !2289
  %m_entityDeclHandler679 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %590, i32 0, i32 32, !dbg !7754
  %591 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler679, align 8, !dbg !7754, !tbaa !2927
  %tobool680 = icmp ne void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %591, null, !dbg !7755
  br i1 %tobool680, label %if.then.681, label %if.end.682, !dbg !7756

if.then.681:                                      ; preds = %if.end.671
  store i8 0, i8* %handleDefault, align 1, !dbg !7757, !tbaa !2307
  br label %if.end.682, !dbg !7758

if.end.682:                                       ; preds = %if.then.681, %if.end.671
  br label %if.end.683, !dbg !7759

if.end.683:                                       ; preds = %if.end.682, %land.lhs.true.652, %sw.bb.648
  br label %sw.epilog.1478, !dbg !7760

sw.bb.684:                                        ; preds = %if.end.33
  %592 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7761, !tbaa !2289
  %keepProcessing685 = getelementptr inbounds %struct.DTD, %struct.DTD* %592, i32 0, i32 6, !dbg !7763
  %593 = load i8, i8* %keepProcessing685, align 1, !dbg !7763, !tbaa !3179
  %conv686 = zext i8 %593 to i32, !dbg !7761
  %tobool687 = icmp ne i32 %conv686, 0, !dbg !7761
  br i1 %tobool687, label %land.lhs.true.688, label %if.end.708, !dbg !7764

land.lhs.true.688:                                ; preds = %sw.bb.684
  %594 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7765, !tbaa !2289
  %m_declEntity689 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %594, i32 0, i32 54, !dbg !7767
  %595 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity689, align 8, !dbg !7767, !tbaa !2963
  %tobool690 = icmp ne %struct.ENTITY* %595, null, !dbg !7768
  br i1 %tobool690, label %land.lhs.true.691, label %if.end.708, !dbg !7769

land.lhs.true.691:                                ; preds = %land.lhs.true.688
  %596 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7770, !tbaa !2289
  %m_entityDeclHandler692 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %596, i32 0, i32 32, !dbg !7772
  %597 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler692, align 8, !dbg !7772, !tbaa !2927
  %tobool693 = icmp ne void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %597, null, !dbg !7773
  br i1 %tobool693, label %if.then.694, label %if.end.708, !dbg !7774

if.then.694:                                      ; preds = %land.lhs.true.691
  %598 = load i8*, i8** %s.addr, align 8, !dbg !7775, !tbaa !2289
  %599 = load i8**, i8*** %eventEndPP, align 8, !dbg !7777, !tbaa !2289
  store i8* %598, i8** %599, align 8, !dbg !7778, !tbaa !2289
  %600 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7779, !tbaa !2289
  %m_entityDeclHandler695 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %600, i32 0, i32 32, !dbg !7780
  %601 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler695, align 8, !dbg !7780, !tbaa !2927
  %602 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7781, !tbaa !2289
  %m_handlerArg696 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %602, i32 0, i32 1, !dbg !7782
  %603 = load i8*, i8** %m_handlerArg696, align 8, !dbg !7782, !tbaa !2842
  %604 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7783, !tbaa !2289
  %m_declEntity697 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %604, i32 0, i32 54, !dbg !7784
  %605 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity697, align 8, !dbg !7784, !tbaa !2963
  %name698 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %605, i32 0, i32 0, !dbg !7785
  %606 = load i8*, i8** %name698, align 8, !dbg !7785, !tbaa !7578
  %607 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7786, !tbaa !2289
  %m_declEntity699 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %607, i32 0, i32 54, !dbg !7787
  %608 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity699, align 8, !dbg !7787, !tbaa !2963
  %is_param700 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %608, i32 0, i32 9, !dbg !7788
  %609 = load i8, i8* %is_param700, align 1, !dbg !7788, !tbaa !7582
  %conv701 = zext i8 %609 to i32, !dbg !7789
  %610 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7790, !tbaa !2289
  %m_declEntity702 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %610, i32 0, i32 54, !dbg !7791
  %611 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity702, align 8, !dbg !7791, !tbaa !2963
  %base703 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %611, i32 0, i32 5, !dbg !7792
  %612 = load i8*, i8** %base703, align 8, !dbg !7792, !tbaa !6920
  %613 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7793, !tbaa !2289
  %m_declEntity704 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %613, i32 0, i32 54, !dbg !7794
  %614 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity704, align 8, !dbg !7794, !tbaa !2963
  %systemId705 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %614, i32 0, i32 4, !dbg !7795
  %615 = load i8*, i8** %systemId705, align 8, !dbg !7795, !tbaa !6933
  %616 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7796, !tbaa !2289
  %m_declEntity706 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %616, i32 0, i32 54, !dbg !7797
  %617 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity706, align 8, !dbg !7797, !tbaa !2963
  %publicId707 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %617, i32 0, i32 6, !dbg !7798
  %618 = load i8*, i8** %publicId707, align 8, !dbg !7798, !tbaa !6833
  call void %601(i8* %603, i8* %606, i32 %conv701, i8* null, i32 0, i8* %612, i8* %615, i8* %618, i8* null), !dbg !7799
  store i8 0, i8* %handleDefault, align 1, !dbg !7800, !tbaa !2307
  br label %if.end.708, !dbg !7801

if.end.708:                                       ; preds = %if.then.694, %land.lhs.true.691, %land.lhs.true.688, %sw.bb.684
  br label %sw.epilog.1478, !dbg !7802

sw.bb.709:                                        ; preds = %if.end.33
  %619 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7803, !tbaa !2289
  %keepProcessing710 = getelementptr inbounds %struct.DTD, %struct.DTD* %619, i32 0, i32 6, !dbg !7805
  %620 = load i8, i8* %keepProcessing710, align 1, !dbg !7805, !tbaa !3179
  %conv711 = zext i8 %620 to i32, !dbg !7803
  %tobool712 = icmp ne i32 %conv711, 0, !dbg !7803
  br i1 %tobool712, label %land.lhs.true.713, label %if.end.761, !dbg !7806

land.lhs.true.713:                                ; preds = %sw.bb.709
  %621 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7807, !tbaa !2289
  %m_declEntity714 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %621, i32 0, i32 54, !dbg !7809
  %622 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity714, align 8, !dbg !7809, !tbaa !2963
  %tobool715 = icmp ne %struct.ENTITY* %622, null, !dbg !7810
  br i1 %tobool715, label %if.then.716, label %if.end.761, !dbg !7811

if.then.716:                                      ; preds = %land.lhs.true.713
  %623 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7812, !tbaa !2289
  %pool717 = getelementptr inbounds %struct.DTD, %struct.DTD* %623, i32 0, i32 4, !dbg !7814
  %624 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7815, !tbaa !2289
  %625 = load i8*, i8** %s.addr, align 8, !dbg !7816, !tbaa !2289
  %626 = load i8*, i8** %next.addr, align 8, !dbg !7817, !tbaa !2289
  %call718 = call i8* @poolStoreString(%struct.STRING_POOL* %pool717, %struct.encoding* %624, i8* %625, i8* %626), !dbg !7818
  %627 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7819, !tbaa !2289
  %m_declEntity719 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %627, i32 0, i32 54, !dbg !7820
  %628 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity719, align 8, !dbg !7820, !tbaa !2963
  %notation = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %628, i32 0, i32 7, !dbg !7821
  store i8* %call718, i8** %notation, align 8, !dbg !7822, !tbaa !7823
  %629 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7824, !tbaa !2289
  %m_declEntity720 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %629, i32 0, i32 54, !dbg !7826
  %630 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity720, align 8, !dbg !7826, !tbaa !2963
  %notation721 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %630, i32 0, i32 7, !dbg !7827
  %631 = load i8*, i8** %notation721, align 8, !dbg !7827, !tbaa !7823
  %tobool722 = icmp ne i8* %631, null, !dbg !7828
  br i1 %tobool722, label %if.end.724, label %if.then.723, !dbg !7829

if.then.723:                                      ; preds = %if.then.716
  store i32 1, i32* %retval, !dbg !7830
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1492, !dbg !7830

if.end.724:                                       ; preds = %if.then.716
  %632 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7831, !tbaa !2289
  %pool725 = getelementptr inbounds %struct.DTD, %struct.DTD* %632, i32 0, i32 4, !dbg !7832
  %ptr726 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool725, i32 0, i32 3, !dbg !7833
  %633 = load i8*, i8** %ptr726, align 8, !dbg !7833, !tbaa !2798
  %634 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7834, !tbaa !2289
  %pool727 = getelementptr inbounds %struct.DTD, %struct.DTD* %634, i32 0, i32 4, !dbg !7835
  %start728 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool727, i32 0, i32 4, !dbg !7836
  store i8* %633, i8** %start728, align 8, !dbg !7837, !tbaa !2794
  %635 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7838, !tbaa !2289
  %m_unparsedEntityDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %635, i32 0, i32 21, !dbg !7840
  %636 = load void (i8*, i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*, i8*)** %m_unparsedEntityDeclHandler, align 8, !dbg !7840, !tbaa !2886
  %tobool729 = icmp ne void (i8*, i8*, i8*, i8*, i8*, i8*)* %636, null, !dbg !7841
  br i1 %tobool729, label %if.then.730, label %if.else.743, !dbg !7842

if.then.730:                                      ; preds = %if.end.724
  %637 = load i8*, i8** %s.addr, align 8, !dbg !7843, !tbaa !2289
  %638 = load i8**, i8*** %eventEndPP, align 8, !dbg !7845, !tbaa !2289
  store i8* %637, i8** %638, align 8, !dbg !7846, !tbaa !2289
  %639 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7847, !tbaa !2289
  %m_unparsedEntityDeclHandler731 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %639, i32 0, i32 21, !dbg !7848
  %640 = load void (i8*, i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*, i8*)** %m_unparsedEntityDeclHandler731, align 8, !dbg !7848, !tbaa !2886
  %641 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7849, !tbaa !2289
  %m_handlerArg732 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %641, i32 0, i32 1, !dbg !7850
  %642 = load i8*, i8** %m_handlerArg732, align 8, !dbg !7850, !tbaa !2842
  %643 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7851, !tbaa !2289
  %m_declEntity733 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %643, i32 0, i32 54, !dbg !7852
  %644 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity733, align 8, !dbg !7852, !tbaa !2963
  %name734 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %644, i32 0, i32 0, !dbg !7853
  %645 = load i8*, i8** %name734, align 8, !dbg !7853, !tbaa !7578
  %646 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7854, !tbaa !2289
  %m_declEntity735 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %646, i32 0, i32 54, !dbg !7855
  %647 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity735, align 8, !dbg !7855, !tbaa !2963
  %base736 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %647, i32 0, i32 5, !dbg !7856
  %648 = load i8*, i8** %base736, align 8, !dbg !7856, !tbaa !6920
  %649 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7857, !tbaa !2289
  %m_declEntity737 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %649, i32 0, i32 54, !dbg !7858
  %650 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity737, align 8, !dbg !7858, !tbaa !2963
  %systemId738 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %650, i32 0, i32 4, !dbg !7859
  %651 = load i8*, i8** %systemId738, align 8, !dbg !7859, !tbaa !6933
  %652 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7860, !tbaa !2289
  %m_declEntity739 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %652, i32 0, i32 54, !dbg !7861
  %653 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity739, align 8, !dbg !7861, !tbaa !2963
  %publicId740 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %653, i32 0, i32 6, !dbg !7862
  %654 = load i8*, i8** %publicId740, align 8, !dbg !7862, !tbaa !6833
  %655 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7863, !tbaa !2289
  %m_declEntity741 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %655, i32 0, i32 54, !dbg !7864
  %656 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity741, align 8, !dbg !7864, !tbaa !2963
  %notation742 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %656, i32 0, i32 7, !dbg !7865
  %657 = load i8*, i8** %notation742, align 8, !dbg !7865, !tbaa !7823
  call void %640(i8* %642, i8* %645, i8* %648, i8* %651, i8* %654, i8* %657), !dbg !7866
  store i8 0, i8* %handleDefault, align 1, !dbg !7867, !tbaa !2307
  br label %if.end.760, !dbg !7868

if.else.743:                                      ; preds = %if.end.724
  %658 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7869, !tbaa !2289
  %m_entityDeclHandler744 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %658, i32 0, i32 32, !dbg !7871
  %659 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler744, align 8, !dbg !7871, !tbaa !2927
  %tobool745 = icmp ne void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %659, null, !dbg !7872
  br i1 %tobool745, label %if.then.746, label %if.end.759, !dbg !7873

if.then.746:                                      ; preds = %if.else.743
  %660 = load i8*, i8** %s.addr, align 8, !dbg !7874, !tbaa !2289
  %661 = load i8**, i8*** %eventEndPP, align 8, !dbg !7876, !tbaa !2289
  store i8* %660, i8** %661, align 8, !dbg !7877, !tbaa !2289
  %662 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7878, !tbaa !2289
  %m_entityDeclHandler747 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %662, i32 0, i32 32, !dbg !7879
  %663 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler747, align 8, !dbg !7879, !tbaa !2927
  %664 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7880, !tbaa !2289
  %m_handlerArg748 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %664, i32 0, i32 1, !dbg !7881
  %665 = load i8*, i8** %m_handlerArg748, align 8, !dbg !7881, !tbaa !2842
  %666 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7882, !tbaa !2289
  %m_declEntity749 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %666, i32 0, i32 54, !dbg !7883
  %667 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity749, align 8, !dbg !7883, !tbaa !2963
  %name750 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %667, i32 0, i32 0, !dbg !7884
  %668 = load i8*, i8** %name750, align 8, !dbg !7884, !tbaa !7578
  %669 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7885, !tbaa !2289
  %m_declEntity751 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %669, i32 0, i32 54, !dbg !7886
  %670 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity751, align 8, !dbg !7886, !tbaa !2963
  %base752 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %670, i32 0, i32 5, !dbg !7887
  %671 = load i8*, i8** %base752, align 8, !dbg !7887, !tbaa !6920
  %672 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7888, !tbaa !2289
  %m_declEntity753 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %672, i32 0, i32 54, !dbg !7889
  %673 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity753, align 8, !dbg !7889, !tbaa !2963
  %systemId754 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %673, i32 0, i32 4, !dbg !7890
  %674 = load i8*, i8** %systemId754, align 8, !dbg !7890, !tbaa !6933
  %675 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7891, !tbaa !2289
  %m_declEntity755 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %675, i32 0, i32 54, !dbg !7892
  %676 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity755, align 8, !dbg !7892, !tbaa !2963
  %publicId756 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %676, i32 0, i32 6, !dbg !7893
  %677 = load i8*, i8** %publicId756, align 8, !dbg !7893, !tbaa !6833
  %678 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7894, !tbaa !2289
  %m_declEntity757 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %678, i32 0, i32 54, !dbg !7895
  %679 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity757, align 8, !dbg !7895, !tbaa !2963
  %notation758 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %679, i32 0, i32 7, !dbg !7896
  %680 = load i8*, i8** %notation758, align 8, !dbg !7896, !tbaa !7823
  call void %663(i8* %665, i8* %668, i32 0, i8* null, i32 0, i8* %671, i8* %674, i8* %677, i8* %680), !dbg !7897
  store i8 0, i8* %handleDefault, align 1, !dbg !7898, !tbaa !2307
  br label %if.end.759, !dbg !7899

if.end.759:                                       ; preds = %if.then.746, %if.else.743
  br label %if.end.760

if.end.760:                                       ; preds = %if.end.759, %if.then.730
  br label %if.end.761, !dbg !7900

if.end.761:                                       ; preds = %if.end.760, %land.lhs.true.713, %sw.bb.709
  br label %sw.epilog.1478, !dbg !7901

sw.bb.762:                                        ; preds = %if.end.33
  %681 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7902, !tbaa !2289
  %predefinedEntityName = getelementptr inbounds %struct.encoding, %struct.encoding* %681, i32 0, i32 8, !dbg !7904
  %682 = load i32 (%struct.encoding*, i8*, i8*)*, i32 (%struct.encoding*, i8*, i8*)** %predefinedEntityName, align 8, !dbg !7904, !tbaa !7905
  %683 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7906, !tbaa !2289
  %684 = load i8*, i8** %s.addr, align 8, !dbg !7907, !tbaa !2289
  %685 = load i8*, i8** %next.addr, align 8, !dbg !7908, !tbaa !2289
  %call763 = call i32 %682(%struct.encoding* %683, i8* %684, i8* %685), !dbg !7909
  %tobool764 = icmp ne i32 %call763, 0, !dbg !7909
  br i1 %tobool764, label %if.then.765, label %if.end.767, !dbg !7910

if.then.765:                                      ; preds = %sw.bb.762
  %686 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7911, !tbaa !2289
  %m_declEntity766 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %686, i32 0, i32 54, !dbg !7913
  store %struct.ENTITY* null, %struct.ENTITY** %m_declEntity766, align 8, !dbg !7914, !tbaa !2963
  br label %sw.epilog.1478, !dbg !7915

if.end.767:                                       ; preds = %sw.bb.762
  %687 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7916, !tbaa !2289
  %keepProcessing768 = getelementptr inbounds %struct.DTD, %struct.DTD* %687, i32 0, i32 6, !dbg !7917
  %688 = load i8, i8* %keepProcessing768, align 1, !dbg !7917, !tbaa !3179
  %tobool769 = icmp ne i8 %688, 0, !dbg !7916
  br i1 %tobool769, label %if.then.770, label %if.else.815, !dbg !7918

if.then.770:                                      ; preds = %if.end.767
  %689 = bitcast i8** %name771 to i8*, !dbg !7919
  call void @llvm.lifetime.start(i64 8, i8* %689) #2, !dbg !7919
  call void @llvm.dbg.declare(metadata i8** %name771, metadata !1256, metadata !2293), !dbg !7920
  %690 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7921, !tbaa !2289
  %pool772 = getelementptr inbounds %struct.DTD, %struct.DTD* %690, i32 0, i32 4, !dbg !7922
  %691 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7923, !tbaa !2289
  %692 = load i8*, i8** %s.addr, align 8, !dbg !7924, !tbaa !2289
  %693 = load i8*, i8** %next.addr, align 8, !dbg !7925, !tbaa !2289
  %call773 = call i8* @poolStoreString(%struct.STRING_POOL* %pool772, %struct.encoding* %691, i8* %692, i8* %693), !dbg !7926
  store i8* %call773, i8** %name771, align 8, !dbg !7920, !tbaa !2289
  %694 = load i8*, i8** %name771, align 8, !dbg !7927, !tbaa !2289
  %tobool774 = icmp ne i8* %694, null, !dbg !7927
  br i1 %tobool774, label %if.end.776, label %if.then.775, !dbg !7929

if.then.775:                                      ; preds = %if.then.770
  store i32 1, i32* %retval, !dbg !7930
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.812, !dbg !7930

if.end.776:                                       ; preds = %if.then.770
  %695 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7931, !tbaa !2289
  %696 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7932, !tbaa !2289
  %generalEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %696, i32 0, i32 0, !dbg !7933
  %697 = load i8*, i8** %name771, align 8, !dbg !7934, !tbaa !2289
  %call777 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %695, %struct.HASH_TABLE* %generalEntities, i8* %697, i64 64), !dbg !7935
  %698 = bitcast %struct.NAMED* %call777 to %struct.ENTITY*, !dbg !7936
  %699 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7937, !tbaa !2289
  %m_declEntity778 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %699, i32 0, i32 54, !dbg !7938
  store %struct.ENTITY* %698, %struct.ENTITY** %m_declEntity778, align 8, !dbg !7939, !tbaa !2963
  %700 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7940, !tbaa !2289
  %m_declEntity779 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %700, i32 0, i32 54, !dbg !7942
  %701 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity779, align 8, !dbg !7942, !tbaa !2963
  %tobool780 = icmp ne %struct.ENTITY* %701, null, !dbg !7943
  br i1 %tobool780, label %if.end.782, label %if.then.781, !dbg !7944

if.then.781:                                      ; preds = %if.end.776
  store i32 1, i32* %retval, !dbg !7945
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.812, !dbg !7945

if.end.782:                                       ; preds = %if.end.776
  %702 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7946, !tbaa !2289
  %m_declEntity783 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %702, i32 0, i32 54, !dbg !7948
  %703 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity783, align 8, !dbg !7948, !tbaa !2963
  %name784 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %703, i32 0, i32 0, !dbg !7949
  %704 = load i8*, i8** %name784, align 8, !dbg !7949, !tbaa !7578
  %705 = load i8*, i8** %name771, align 8, !dbg !7950, !tbaa !2289
  %cmp785 = icmp ne i8* %704, %705, !dbg !7951
  br i1 %cmp785, label %if.then.787, label %if.else.793, !dbg !7952

if.then.787:                                      ; preds = %if.end.782
  %706 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7953, !tbaa !2289
  %pool788 = getelementptr inbounds %struct.DTD, %struct.DTD* %706, i32 0, i32 4, !dbg !7955
  %start789 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool788, i32 0, i32 4, !dbg !7956
  %707 = load i8*, i8** %start789, align 8, !dbg !7956, !tbaa !2794
  %708 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7957, !tbaa !2289
  %pool790 = getelementptr inbounds %struct.DTD, %struct.DTD* %708, i32 0, i32 4, !dbg !7958
  %ptr791 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool790, i32 0, i32 3, !dbg !7959
  store i8* %707, i8** %ptr791, align 8, !dbg !7960, !tbaa !2798
  %709 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7961, !tbaa !2289
  %m_declEntity792 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %709, i32 0, i32 54, !dbg !7962
  store %struct.ENTITY* null, %struct.ENTITY** %m_declEntity792, align 8, !dbg !7963, !tbaa !2963
  br label %if.end.811, !dbg !7964

if.else.793:                                      ; preds = %if.end.782
  %710 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7965, !tbaa !2289
  %pool794 = getelementptr inbounds %struct.DTD, %struct.DTD* %710, i32 0, i32 4, !dbg !7967
  %ptr795 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool794, i32 0, i32 3, !dbg !7968
  %711 = load i8*, i8** %ptr795, align 8, !dbg !7968, !tbaa !2798
  %712 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7969, !tbaa !2289
  %pool796 = getelementptr inbounds %struct.DTD, %struct.DTD* %712, i32 0, i32 4, !dbg !7970
  %start797 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool796, i32 0, i32 4, !dbg !7971
  store i8* %711, i8** %start797, align 8, !dbg !7972, !tbaa !2794
  %713 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7973, !tbaa !2289
  %m_declEntity798 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %713, i32 0, i32 54, !dbg !7974
  %714 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity798, align 8, !dbg !7974, !tbaa !2963
  %publicId799 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %714, i32 0, i32 6, !dbg !7975
  store i8* null, i8** %publicId799, align 8, !dbg !7976, !tbaa !6833
  %715 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7977, !tbaa !2289
  %m_declEntity800 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %715, i32 0, i32 54, !dbg !7978
  %716 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity800, align 8, !dbg !7978, !tbaa !2963
  %is_param801 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %716, i32 0, i32 9, !dbg !7979
  store i8 0, i8* %is_param801, align 1, !dbg !7980, !tbaa !7582
  %717 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7981, !tbaa !2289
  %m_parentParser = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %717, i32 0, i32 84, !dbg !7982
  %718 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %m_parentParser, align 8, !dbg !7982, !tbaa !2623
  %tobool802 = icmp ne %struct.XML_ParserStruct* %718, null, !dbg !7983
  br i1 %tobool802, label %lor.end, label %lor.rhs, !dbg !7984

lor.rhs:                                          ; preds = %if.else.793
  %719 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7985, !tbaa !2289
  %m_openInternalEntities803 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %719, i32 0, i32 50, !dbg !7987
  %720 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities803, align 8, !dbg !7987, !tbaa !2664
  %tobool804 = icmp ne %struct.open_internal_entity* %720, null, !dbg !7984
  br label %lor.end, !dbg !7984

lor.end:                                          ; preds = %lor.rhs, %if.else.793
  %721 = phi i1 [ true, %if.else.793 ], [ %tobool804, %lor.rhs ]
  %lnot = xor i1 %721, true, !dbg !7988
  %lnot.ext = zext i1 %lnot to i32, !dbg !7988
  %conv805 = trunc i32 %lnot.ext to i8, !dbg !7988
  %722 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7991, !tbaa !2289
  %m_declEntity806 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %722, i32 0, i32 54, !dbg !7992
  %723 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity806, align 8, !dbg !7992, !tbaa !2963
  %is_internal = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %723, i32 0, i32 10, !dbg !7993
  store i8 %conv805, i8* %is_internal, align 1, !dbg !7994, !tbaa !7995
  %724 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7996, !tbaa !2289
  %m_entityDeclHandler807 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %724, i32 0, i32 32, !dbg !7998
  %725 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler807, align 8, !dbg !7998, !tbaa !2927
  %tobool808 = icmp ne void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %725, null, !dbg !7999
  br i1 %tobool808, label %if.then.809, label %if.end.810, !dbg !8000

if.then.809:                                      ; preds = %lor.end
  store i8 0, i8* %handleDefault, align 1, !dbg !8001, !tbaa !2307
  br label %if.end.810, !dbg !8002

if.end.810:                                       ; preds = %if.then.809, %lor.end
  br label %if.end.811

if.end.811:                                       ; preds = %if.end.810, %if.then.787
  store i32 0, i32* %cleanup.dest.slot, !dbg !8003
  br label %cleanup.812, !dbg !8003

cleanup.812:                                      ; preds = %if.end.811, %if.then.781, %if.then.775
  %726 = bitcast i8** %name771 to i8*, !dbg !8004
  call void @llvm.lifetime.end(i64 8, i8* %726) #2, !dbg !8004
  %cleanup.dest.813 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.813, label %cleanup.1492 [
    i32 0, label %cleanup.cont.814
  ]

cleanup.cont.814:                                 ; preds = %cleanup.812
  br label %if.end.821, !dbg !8006

if.else.815:                                      ; preds = %if.end.767
  %727 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8007, !tbaa !2289
  %pool816 = getelementptr inbounds %struct.DTD, %struct.DTD* %727, i32 0, i32 4, !dbg !8009
  %start817 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool816, i32 0, i32 4, !dbg !8010
  %728 = load i8*, i8** %start817, align 8, !dbg !8010, !tbaa !2794
  %729 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8011, !tbaa !2289
  %pool818 = getelementptr inbounds %struct.DTD, %struct.DTD* %729, i32 0, i32 4, !dbg !8012
  %ptr819 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool818, i32 0, i32 3, !dbg !8013
  store i8* %728, i8** %ptr819, align 8, !dbg !8014, !tbaa !2798
  %730 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8015, !tbaa !2289
  %m_declEntity820 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %730, i32 0, i32 54, !dbg !8016
  store %struct.ENTITY* null, %struct.ENTITY** %m_declEntity820, align 8, !dbg !8017, !tbaa !2963
  br label %if.end.821

if.end.821:                                       ; preds = %if.else.815, %cleanup.cont.814
  br label %sw.epilog.1478, !dbg !8018

sw.bb.822:                                        ; preds = %if.end.33
  %731 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8019, !tbaa !2289
  %keepProcessing823 = getelementptr inbounds %struct.DTD, %struct.DTD* %731, i32 0, i32 6, !dbg !8020
  %732 = load i8, i8* %keepProcessing823, align 1, !dbg !8020, !tbaa !3179
  %tobool824 = icmp ne i8 %732, 0, !dbg !8019
  br i1 %tobool824, label %if.then.825, label %if.else.877, !dbg !8021

if.then.825:                                      ; preds = %sw.bb.822
  %733 = bitcast i8** %name826 to i8*, !dbg !8022
  call void @llvm.lifetime.start(i64 8, i8* %733) #2, !dbg !8022
  call void @llvm.dbg.declare(metadata i8** %name826, metadata !1260, metadata !2293), !dbg !8023
  %734 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8024, !tbaa !2289
  %pool827 = getelementptr inbounds %struct.DTD, %struct.DTD* %734, i32 0, i32 4, !dbg !8025
  %735 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8026, !tbaa !2289
  %736 = load i8*, i8** %s.addr, align 8, !dbg !8027, !tbaa !2289
  %737 = load i8*, i8** %next.addr, align 8, !dbg !8028, !tbaa !2289
  %call828 = call i8* @poolStoreString(%struct.STRING_POOL* %pool827, %struct.encoding* %735, i8* %736, i8* %737), !dbg !8029
  store i8* %call828, i8** %name826, align 8, !dbg !8023, !tbaa !2289
  %738 = load i8*, i8** %name826, align 8, !dbg !8030, !tbaa !2289
  %tobool829 = icmp ne i8* %738, null, !dbg !8030
  br i1 %tobool829, label %if.end.831, label %if.then.830, !dbg !8032

if.then.830:                                      ; preds = %if.then.825
  store i32 1, i32* %retval, !dbg !8033
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.874, !dbg !8033

if.end.831:                                       ; preds = %if.then.825
  %739 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8034, !tbaa !2289
  %740 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8035, !tbaa !2289
  %paramEntities832 = getelementptr inbounds %struct.DTD, %struct.DTD* %740, i32 0, i32 10, !dbg !8036
  %741 = load i8*, i8** %name826, align 8, !dbg !8037, !tbaa !2289
  %call833 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %739, %struct.HASH_TABLE* %paramEntities832, i8* %741, i64 64), !dbg !8038
  %742 = bitcast %struct.NAMED* %call833 to %struct.ENTITY*, !dbg !8039
  %743 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8040, !tbaa !2289
  %m_declEntity834 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %743, i32 0, i32 54, !dbg !8041
  store %struct.ENTITY* %742, %struct.ENTITY** %m_declEntity834, align 8, !dbg !8042, !tbaa !2963
  %744 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8043, !tbaa !2289
  %m_declEntity835 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %744, i32 0, i32 54, !dbg !8045
  %745 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity835, align 8, !dbg !8045, !tbaa !2963
  %tobool836 = icmp ne %struct.ENTITY* %745, null, !dbg !8046
  br i1 %tobool836, label %if.end.838, label %if.then.837, !dbg !8047

if.then.837:                                      ; preds = %if.end.831
  store i32 1, i32* %retval, !dbg !8048
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.874, !dbg !8048

if.end.838:                                       ; preds = %if.end.831
  %746 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8049, !tbaa !2289
  %m_declEntity839 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %746, i32 0, i32 54, !dbg !8051
  %747 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity839, align 8, !dbg !8051, !tbaa !2963
  %name840 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %747, i32 0, i32 0, !dbg !8052
  %748 = load i8*, i8** %name840, align 8, !dbg !8052, !tbaa !7578
  %749 = load i8*, i8** %name826, align 8, !dbg !8053, !tbaa !2289
  %cmp841 = icmp ne i8* %748, %749, !dbg !8054
  br i1 %cmp841, label %if.then.843, label %if.else.849, !dbg !8055

if.then.843:                                      ; preds = %if.end.838
  %750 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8056, !tbaa !2289
  %pool844 = getelementptr inbounds %struct.DTD, %struct.DTD* %750, i32 0, i32 4, !dbg !8058
  %start845 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool844, i32 0, i32 4, !dbg !8059
  %751 = load i8*, i8** %start845, align 8, !dbg !8059, !tbaa !2794
  %752 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8060, !tbaa !2289
  %pool846 = getelementptr inbounds %struct.DTD, %struct.DTD* %752, i32 0, i32 4, !dbg !8061
  %ptr847 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool846, i32 0, i32 3, !dbg !8062
  store i8* %751, i8** %ptr847, align 8, !dbg !8063, !tbaa !2798
  %753 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8064, !tbaa !2289
  %m_declEntity848 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %753, i32 0, i32 54, !dbg !8065
  store %struct.ENTITY* null, %struct.ENTITY** %m_declEntity848, align 8, !dbg !8066, !tbaa !2963
  br label %if.end.873, !dbg !8067

if.else.849:                                      ; preds = %if.end.838
  %754 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8068, !tbaa !2289
  %pool850 = getelementptr inbounds %struct.DTD, %struct.DTD* %754, i32 0, i32 4, !dbg !8070
  %ptr851 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool850, i32 0, i32 3, !dbg !8071
  %755 = load i8*, i8** %ptr851, align 8, !dbg !8071, !tbaa !2798
  %756 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8072, !tbaa !2289
  %pool852 = getelementptr inbounds %struct.DTD, %struct.DTD* %756, i32 0, i32 4, !dbg !8073
  %start853 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool852, i32 0, i32 4, !dbg !8074
  store i8* %755, i8** %start853, align 8, !dbg !8075, !tbaa !2794
  %757 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8076, !tbaa !2289
  %m_declEntity854 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %757, i32 0, i32 54, !dbg !8077
  %758 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity854, align 8, !dbg !8077, !tbaa !2963
  %publicId855 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %758, i32 0, i32 6, !dbg !8078
  store i8* null, i8** %publicId855, align 8, !dbg !8079, !tbaa !6833
  %759 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8080, !tbaa !2289
  %m_declEntity856 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %759, i32 0, i32 54, !dbg !8081
  %760 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity856, align 8, !dbg !8081, !tbaa !2963
  %is_param857 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %760, i32 0, i32 9, !dbg !8082
  store i8 1, i8* %is_param857, align 1, !dbg !8083, !tbaa !7582
  %761 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8084, !tbaa !2289
  %m_parentParser858 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %761, i32 0, i32 84, !dbg !8085
  %762 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %m_parentParser858, align 8, !dbg !8085, !tbaa !2623
  %tobool859 = icmp ne %struct.XML_ParserStruct* %762, null, !dbg !8086
  br i1 %tobool859, label %lor.end.863, label %lor.rhs.860, !dbg !8087

lor.rhs.860:                                      ; preds = %if.else.849
  %763 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8088, !tbaa !2289
  %m_openInternalEntities861 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %763, i32 0, i32 50, !dbg !8090
  %764 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities861, align 8, !dbg !8090, !tbaa !2664
  %tobool862 = icmp ne %struct.open_internal_entity* %764, null, !dbg !8087
  br label %lor.end.863, !dbg !8087

lor.end.863:                                      ; preds = %lor.rhs.860, %if.else.849
  %765 = phi i1 [ true, %if.else.849 ], [ %tobool862, %lor.rhs.860 ]
  %lnot864 = xor i1 %765, true, !dbg !8091
  %lnot.ext865 = zext i1 %lnot864 to i32, !dbg !8091
  %conv866 = trunc i32 %lnot.ext865 to i8, !dbg !8091
  %766 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8094, !tbaa !2289
  %m_declEntity867 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %766, i32 0, i32 54, !dbg !8095
  %767 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity867, align 8, !dbg !8095, !tbaa !2963
  %is_internal868 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %767, i32 0, i32 10, !dbg !8096
  store i8 %conv866, i8* %is_internal868, align 1, !dbg !8097, !tbaa !7995
  %768 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8098, !tbaa !2289
  %m_entityDeclHandler869 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %768, i32 0, i32 32, !dbg !8100
  %769 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler869, align 8, !dbg !8100, !tbaa !2927
  %tobool870 = icmp ne void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %769, null, !dbg !8101
  br i1 %tobool870, label %if.then.871, label %if.end.872, !dbg !8102

if.then.871:                                      ; preds = %lor.end.863
  store i8 0, i8* %handleDefault, align 1, !dbg !8103, !tbaa !2307
  br label %if.end.872, !dbg !8104

if.end.872:                                       ; preds = %if.then.871, %lor.end.863
  br label %if.end.873

if.end.873:                                       ; preds = %if.end.872, %if.then.843
  store i32 0, i32* %cleanup.dest.slot, !dbg !8105
  br label %cleanup.874, !dbg !8105

cleanup.874:                                      ; preds = %if.end.873, %if.then.837, %if.then.830
  %770 = bitcast i8** %name826 to i8*, !dbg !8106
  call void @llvm.lifetime.end(i64 8, i8* %770) #2, !dbg !8106
  %cleanup.dest.875 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.875, label %cleanup.1492 [
    i32 0, label %cleanup.cont.876
  ]

cleanup.cont.876:                                 ; preds = %cleanup.874
  br label %if.end.883, !dbg !8108

if.else.877:                                      ; preds = %sw.bb.822
  %771 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8109, !tbaa !2289
  %pool878 = getelementptr inbounds %struct.DTD, %struct.DTD* %771, i32 0, i32 4, !dbg !8111
  %start879 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool878, i32 0, i32 4, !dbg !8112
  %772 = load i8*, i8** %start879, align 8, !dbg !8112, !tbaa !2794
  %773 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8113, !tbaa !2289
  %pool880 = getelementptr inbounds %struct.DTD, %struct.DTD* %773, i32 0, i32 4, !dbg !8114
  %ptr881 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool880, i32 0, i32 3, !dbg !8115
  store i8* %772, i8** %ptr881, align 8, !dbg !8116, !tbaa !2798
  %774 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8117, !tbaa !2289
  %m_declEntity882 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %774, i32 0, i32 54, !dbg !8118
  store %struct.ENTITY* null, %struct.ENTITY** %m_declEntity882, align 8, !dbg !8119, !tbaa !2963
  br label %if.end.883

if.end.883:                                       ; preds = %if.else.877, %cleanup.cont.876
  br label %sw.epilog.1478, !dbg !8120

sw.bb.884:                                        ; preds = %if.end.33
  %775 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8121, !tbaa !2289
  %m_declNotationPublicId = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %775, i32 0, i32 60, !dbg !8122
  store i8* null, i8** %m_declNotationPublicId, align 8, !dbg !8123, !tbaa !2987
  %776 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8124, !tbaa !2289
  %m_declNotationName = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %776, i32 0, i32 59, !dbg !8125
  store i8* null, i8** %m_declNotationName, align 8, !dbg !8126, !tbaa !2983
  %777 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8127, !tbaa !2289
  %m_notationDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %777, i32 0, i32 22, !dbg !8129
  %778 = load void (i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*)** %m_notationDeclHandler, align 8, !dbg !8129, !tbaa !2890
  %tobool885 = icmp ne void (i8*, i8*, i8*, i8*, i8*)* %778, null, !dbg !8130
  br i1 %tobool885, label %if.then.886, label %if.end.898, !dbg !8131

if.then.886:                                      ; preds = %sw.bb.884
  %779 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8132, !tbaa !2289
  %m_tempPool887 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %779, i32 0, i32 79, !dbg !8134
  %780 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8135, !tbaa !2289
  %781 = load i8*, i8** %s.addr, align 8, !dbg !8136, !tbaa !2289
  %782 = load i8*, i8** %next.addr, align 8, !dbg !8137, !tbaa !2289
  %call888 = call i8* @poolStoreString(%struct.STRING_POOL* %m_tempPool887, %struct.encoding* %780, i8* %781, i8* %782), !dbg !8138
  %783 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8139, !tbaa !2289
  %m_declNotationName889 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %783, i32 0, i32 59, !dbg !8140
  store i8* %call888, i8** %m_declNotationName889, align 8, !dbg !8141, !tbaa !2983
  %784 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8142, !tbaa !2289
  %m_declNotationName890 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %784, i32 0, i32 59, !dbg !8144
  %785 = load i8*, i8** %m_declNotationName890, align 8, !dbg !8144, !tbaa !2983
  %tobool891 = icmp ne i8* %785, null, !dbg !8145
  br i1 %tobool891, label %if.end.893, label %if.then.892, !dbg !8146

if.then.892:                                      ; preds = %if.then.886
  store i32 1, i32* %retval, !dbg !8147
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1492, !dbg !8147

if.end.893:                                       ; preds = %if.then.886
  %786 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8148, !tbaa !2289
  %m_tempPool894 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %786, i32 0, i32 79, !dbg !8149
  %ptr895 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool894, i32 0, i32 3, !dbg !8150
  %787 = load i8*, i8** %ptr895, align 8, !dbg !8150, !tbaa !2798
  %788 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8151, !tbaa !2289
  %m_tempPool896 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %788, i32 0, i32 79, !dbg !8152
  %start897 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool896, i32 0, i32 4, !dbg !8153
  store i8* %787, i8** %start897, align 8, !dbg !8154, !tbaa !2794
  store i8 0, i8* %handleDefault, align 1, !dbg !8155, !tbaa !2307
  br label %if.end.898, !dbg !8156

if.end.898:                                       ; preds = %if.end.893, %sw.bb.884
  br label %sw.epilog.1478, !dbg !8157

sw.bb.899:                                        ; preds = %if.end.33
  %789 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8158, !tbaa !2289
  %isPublicId900 = getelementptr inbounds %struct.encoding, %struct.encoding* %789, i32 0, i32 10, !dbg !8160
  %790 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %isPublicId900, align 8, !dbg !8160, !tbaa !6744
  %791 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8161, !tbaa !2289
  %792 = load i8*, i8** %s.addr, align 8, !dbg !8162, !tbaa !2289
  %793 = load i8*, i8** %next.addr, align 8, !dbg !8163, !tbaa !2289
  %794 = load i8**, i8*** %eventPP, align 8, !dbg !8164, !tbaa !2289
  %call901 = call i32 %790(%struct.encoding* %791, i8* %792, i8* %793, i8** %794), !dbg !8165
  %tobool902 = icmp ne i32 %call901, 0, !dbg !8165
  br i1 %tobool902, label %if.end.904, label %if.then.903, !dbg !8166

if.then.903:                                      ; preds = %sw.bb.899
  store i32 32, i32* %retval, !dbg !8167
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1492, !dbg !8167

if.end.904:                                       ; preds = %sw.bb.899
  %795 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8168, !tbaa !2289
  %m_declNotationName905 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %795, i32 0, i32 59, !dbg !8169
  %796 = load i8*, i8** %m_declNotationName905, align 8, !dbg !8169, !tbaa !2983
  %tobool906 = icmp ne i8* %796, null, !dbg !8170
  br i1 %tobool906, label %if.then.907, label %if.end.929, !dbg !8171

if.then.907:                                      ; preds = %if.end.904
  %797 = bitcast i8** %tem908 to i8*, !dbg !8172
  call void @llvm.lifetime.start(i64 8, i8* %797) #2, !dbg !8172
  call void @llvm.dbg.declare(metadata i8** %tem908, metadata !1263, metadata !2293), !dbg !8173
  %798 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8174, !tbaa !2289
  %m_tempPool909 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %798, i32 0, i32 79, !dbg !8175
  %799 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8176, !tbaa !2289
  %800 = load i8*, i8** %s.addr, align 8, !dbg !8177, !tbaa !2289
  %801 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8178, !tbaa !2289
  %minBytesPerChar910 = getelementptr inbounds %struct.encoding, %struct.encoding* %801, i32 0, i32 13, !dbg !8179
  %802 = load i32, i32* %minBytesPerChar910, align 4, !dbg !8179, !tbaa !6758
  %idx.ext911 = sext i32 %802 to i64, !dbg !8180
  %add.ptr912 = getelementptr i8, i8* %800, i64 %idx.ext911, !dbg !8180
  %803 = load i8*, i8** %next.addr, align 8, !dbg !8181, !tbaa !2289
  %804 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8182, !tbaa !2289
  %minBytesPerChar913 = getelementptr inbounds %struct.encoding, %struct.encoding* %804, i32 0, i32 13, !dbg !8183
  %805 = load i32, i32* %minBytesPerChar913, align 4, !dbg !8183, !tbaa !6758
  %idx.ext914 = sext i32 %805 to i64, !dbg !8184
  %idx.neg915 = sub i64 0, %idx.ext914, !dbg !8184
  %add.ptr916 = getelementptr i8, i8* %803, i64 %idx.neg915, !dbg !8184
  %call917 = call i8* @poolStoreString(%struct.STRING_POOL* %m_tempPool909, %struct.encoding* %799, i8* %add.ptr912, i8* %add.ptr916), !dbg !8185
  store i8* %call917, i8** %tem908, align 8, !dbg !8173, !tbaa !2289
  %806 = load i8*, i8** %tem908, align 8, !dbg !8186, !tbaa !2289
  %tobool918 = icmp ne i8* %806, null, !dbg !8186
  br i1 %tobool918, label %if.end.920, label %if.then.919, !dbg !8188

if.then.919:                                      ; preds = %if.then.907
  store i32 1, i32* %retval, !dbg !8189
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.926, !dbg !8189

if.end.920:                                       ; preds = %if.then.907
  %807 = load i8*, i8** %tem908, align 8, !dbg !8190, !tbaa !2289
  call void @normalizePublicId(i8* %807), !dbg !8191
  %808 = load i8*, i8** %tem908, align 8, !dbg !8192, !tbaa !2289
  %809 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8193, !tbaa !2289
  %m_declNotationPublicId921 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %809, i32 0, i32 60, !dbg !8194
  store i8* %808, i8** %m_declNotationPublicId921, align 8, !dbg !8195, !tbaa !2987
  %810 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8196, !tbaa !2289
  %m_tempPool922 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %810, i32 0, i32 79, !dbg !8197
  %ptr923 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool922, i32 0, i32 3, !dbg !8198
  %811 = load i8*, i8** %ptr923, align 8, !dbg !8198, !tbaa !2798
  %812 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8199, !tbaa !2289
  %m_tempPool924 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %812, i32 0, i32 79, !dbg !8200
  %start925 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool924, i32 0, i32 4, !dbg !8201
  store i8* %811, i8** %start925, align 8, !dbg !8202, !tbaa !2794
  store i8 0, i8* %handleDefault, align 1, !dbg !8203, !tbaa !2307
  store i32 0, i32* %cleanup.dest.slot, !dbg !8204
  br label %cleanup.926, !dbg !8204

cleanup.926:                                      ; preds = %if.end.920, %if.then.919
  %813 = bitcast i8** %tem908 to i8*, !dbg !8205
  call void @llvm.lifetime.end(i64 8, i8* %813) #2, !dbg !8205
  %cleanup.dest.927 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.927, label %cleanup.1492 [
    i32 0, label %cleanup.cont.928
  ]

cleanup.cont.928:                                 ; preds = %cleanup.926
  br label %if.end.929, !dbg !8207

if.end.929:                                       ; preds = %cleanup.cont.928, %if.end.904
  br label %sw.epilog.1478, !dbg !8208

sw.bb.930:                                        ; preds = %if.end.33
  %814 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8209, !tbaa !2289
  %m_declNotationName931 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %814, i32 0, i32 59, !dbg !8210
  %815 = load i8*, i8** %m_declNotationName931, align 8, !dbg !8210, !tbaa !2983
  %tobool932 = icmp ne i8* %815, null, !dbg !8211
  br i1 %tobool932, label %land.lhs.true.933, label %if.end.958, !dbg !8212

land.lhs.true.933:                                ; preds = %sw.bb.930
  %816 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8213, !tbaa !2289
  %m_notationDeclHandler934 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %816, i32 0, i32 22, !dbg !8215
  %817 = load void (i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*)** %m_notationDeclHandler934, align 8, !dbg !8215, !tbaa !2890
  %tobool935 = icmp ne void (i8*, i8*, i8*, i8*, i8*)* %817, null, !dbg !8216
  br i1 %tobool935, label %if.then.936, label %if.end.958, !dbg !8217

if.then.936:                                      ; preds = %land.lhs.true.933
  %818 = bitcast i8** %systemId937 to i8*, !dbg !8218
  call void @llvm.lifetime.start(i64 8, i8* %818) #2, !dbg !8218
  call void @llvm.dbg.declare(metadata i8** %systemId937, metadata !1266, metadata !2293), !dbg !8219
  %819 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8220, !tbaa !2289
  %m_tempPool938 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %819, i32 0, i32 79, !dbg !8221
  %820 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8222, !tbaa !2289
  %821 = load i8*, i8** %s.addr, align 8, !dbg !8223, !tbaa !2289
  %822 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8224, !tbaa !2289
  %minBytesPerChar939 = getelementptr inbounds %struct.encoding, %struct.encoding* %822, i32 0, i32 13, !dbg !8225
  %823 = load i32, i32* %minBytesPerChar939, align 4, !dbg !8225, !tbaa !6758
  %idx.ext940 = sext i32 %823 to i64, !dbg !8226
  %add.ptr941 = getelementptr i8, i8* %821, i64 %idx.ext940, !dbg !8226
  %824 = load i8*, i8** %next.addr, align 8, !dbg !8227, !tbaa !2289
  %825 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8228, !tbaa !2289
  %minBytesPerChar942 = getelementptr inbounds %struct.encoding, %struct.encoding* %825, i32 0, i32 13, !dbg !8229
  %826 = load i32, i32* %minBytesPerChar942, align 4, !dbg !8229, !tbaa !6758
  %idx.ext943 = sext i32 %826 to i64, !dbg !8230
  %idx.neg944 = sub i64 0, %idx.ext943, !dbg !8230
  %add.ptr945 = getelementptr i8, i8* %824, i64 %idx.neg944, !dbg !8230
  %call946 = call i8* @poolStoreString(%struct.STRING_POOL* %m_tempPool938, %struct.encoding* %820, i8* %add.ptr941, i8* %add.ptr945), !dbg !8231
  store i8* %call946, i8** %systemId937, align 8, !dbg !8219, !tbaa !2289
  %827 = load i8*, i8** %systemId937, align 8, !dbg !8232, !tbaa !2289
  %tobool947 = icmp ne i8* %827, null, !dbg !8232
  br i1 %tobool947, label %if.end.949, label %if.then.948, !dbg !8234

if.then.948:                                      ; preds = %if.then.936
  store i32 1, i32* %retval, !dbg !8235
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.955, !dbg !8235

if.end.949:                                       ; preds = %if.then.936
  %828 = load i8*, i8** %s.addr, align 8, !dbg !8236, !tbaa !2289
  %829 = load i8**, i8*** %eventEndPP, align 8, !dbg !8237, !tbaa !2289
  store i8* %828, i8** %829, align 8, !dbg !8238, !tbaa !2289
  %830 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8239, !tbaa !2289
  %m_notationDeclHandler950 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %830, i32 0, i32 22, !dbg !8240
  %831 = load void (i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*)** %m_notationDeclHandler950, align 8, !dbg !8240, !tbaa !2890
  %832 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8241, !tbaa !2289
  %m_handlerArg951 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %832, i32 0, i32 1, !dbg !8242
  %833 = load i8*, i8** %m_handlerArg951, align 8, !dbg !8242, !tbaa !2842
  %834 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8243, !tbaa !2289
  %m_declNotationName952 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %834, i32 0, i32 59, !dbg !8244
  %835 = load i8*, i8** %m_declNotationName952, align 8, !dbg !8244, !tbaa !2983
  %836 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8245, !tbaa !2289
  %m_curBase953 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %836, i32 0, i32 66, !dbg !8246
  %837 = load i8*, i8** %m_curBase953, align 8, !dbg !8246, !tbaa !2829
  %838 = load i8*, i8** %systemId937, align 8, !dbg !8247, !tbaa !2289
  %839 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8248, !tbaa !2289
  %m_declNotationPublicId954 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %839, i32 0, i32 60, !dbg !8249
  %840 = load i8*, i8** %m_declNotationPublicId954, align 8, !dbg !8249, !tbaa !2987
  call void %831(i8* %833, i8* %835, i8* %837, i8* %838, i8* %840), !dbg !8250
  store i8 0, i8* %handleDefault, align 1, !dbg !8251, !tbaa !2307
  store i32 0, i32* %cleanup.dest.slot, !dbg !8252
  br label %cleanup.955, !dbg !8252

cleanup.955:                                      ; preds = %if.end.949, %if.then.948
  %841 = bitcast i8** %systemId937 to i8*, !dbg !8253
  call void @llvm.lifetime.end(i64 8, i8* %841) #2, !dbg !8253
  %cleanup.dest.956 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.956, label %cleanup.1492 [
    i32 0, label %cleanup.cont.957
  ]

cleanup.cont.957:                                 ; preds = %cleanup.955
  br label %if.end.958, !dbg !8254

if.end.958:                                       ; preds = %cleanup.cont.957, %land.lhs.true.933, %sw.bb.930
  %842 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8255, !tbaa !2289
  %m_tempPool959 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %842, i32 0, i32 79, !dbg !8256
  call void @poolClear(%struct.STRING_POOL* %m_tempPool959), !dbg !8257
  br label %sw.epilog.1478, !dbg !8258

sw.bb.960:                                        ; preds = %if.end.33
  %843 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8259, !tbaa !2289
  %m_declNotationPublicId961 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %843, i32 0, i32 60, !dbg !8261
  %844 = load i8*, i8** %m_declNotationPublicId961, align 8, !dbg !8261, !tbaa !2987
  %tobool962 = icmp ne i8* %844, null, !dbg !8262
  br i1 %tobool962, label %land.lhs.true.963, label %if.end.972, !dbg !8263

land.lhs.true.963:                                ; preds = %sw.bb.960
  %845 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8264, !tbaa !2289
  %m_notationDeclHandler964 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %845, i32 0, i32 22, !dbg !8266
  %846 = load void (i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*)** %m_notationDeclHandler964, align 8, !dbg !8266, !tbaa !2890
  %tobool965 = icmp ne void (i8*, i8*, i8*, i8*, i8*)* %846, null, !dbg !8267
  br i1 %tobool965, label %if.then.966, label %if.end.972, !dbg !8268

if.then.966:                                      ; preds = %land.lhs.true.963
  %847 = load i8*, i8** %s.addr, align 8, !dbg !8269, !tbaa !2289
  %848 = load i8**, i8*** %eventEndPP, align 8, !dbg !8271, !tbaa !2289
  store i8* %847, i8** %848, align 8, !dbg !8272, !tbaa !2289
  %849 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8273, !tbaa !2289
  %m_notationDeclHandler967 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %849, i32 0, i32 22, !dbg !8274
  %850 = load void (i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*)** %m_notationDeclHandler967, align 8, !dbg !8274, !tbaa !2890
  %851 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8275, !tbaa !2289
  %m_handlerArg968 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %851, i32 0, i32 1, !dbg !8276
  %852 = load i8*, i8** %m_handlerArg968, align 8, !dbg !8276, !tbaa !2842
  %853 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8277, !tbaa !2289
  %m_declNotationName969 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %853, i32 0, i32 59, !dbg !8278
  %854 = load i8*, i8** %m_declNotationName969, align 8, !dbg !8278, !tbaa !2983
  %855 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8279, !tbaa !2289
  %m_curBase970 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %855, i32 0, i32 66, !dbg !8280
  %856 = load i8*, i8** %m_curBase970, align 8, !dbg !8280, !tbaa !2829
  %857 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8281, !tbaa !2289
  %m_declNotationPublicId971 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %857, i32 0, i32 60, !dbg !8282
  %858 = load i8*, i8** %m_declNotationPublicId971, align 8, !dbg !8282, !tbaa !2987
  call void %850(i8* %852, i8* %854, i8* %856, i8* null, i8* %858), !dbg !8283
  store i8 0, i8* %handleDefault, align 1, !dbg !8284, !tbaa !2307
  br label %if.end.972, !dbg !8285

if.end.972:                                       ; preds = %if.then.966, %land.lhs.true.963, %sw.bb.960
  %859 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8286, !tbaa !2289
  %m_tempPool973 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %859, i32 0, i32 79, !dbg !8287
  call void @poolClear(%struct.STRING_POOL* %m_tempPool973), !dbg !8288
  br label %sw.epilog.1478, !dbg !8289

sw.bb.974:                                        ; preds = %if.end.33
  %860 = load i32, i32* %tok.addr, align 4, !dbg !8290, !tbaa !3391
  switch i32 %860, label %sw.default.977 [
    i32 28, label %sw.bb.975
    i32 12, label %sw.bb.976
  ], !dbg !8291

sw.bb.975:                                        ; preds = %sw.bb.974
  store i32 10, i32* %retval, !dbg !8292
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1492, !dbg !8292

sw.bb.976:                                        ; preds = %sw.bb.974
  store i32 17, i32* %retval, !dbg !8294
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1492, !dbg !8294

sw.default.977:                                   ; preds = %sw.bb.974
  store i32 2, i32* %retval, !dbg !8295
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1492, !dbg !8295

sw.bb.978:                                        ; preds = %if.end.33
  %861 = bitcast i32* %result979 to i8*, !dbg !8296
  call void @llvm.lifetime.start(i64 4, i8* %861) #2, !dbg !8296
  call void @llvm.dbg.declare(metadata i32* %result979, metadata !1269, metadata !2293), !dbg !8297
  %862 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8298, !tbaa !2289
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %862, i32 0, i32 18, !dbg !8300
  %863 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler, align 8, !dbg !8300, !tbaa !2874
  %tobool980 = icmp ne void (i8*, i8*, i32)* %863, null, !dbg !8301
  br i1 %tobool980, label %if.then.981, label %if.end.982, !dbg !8302

if.then.981:                                      ; preds = %sw.bb.978
  %864 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8303, !tbaa !2289
  %865 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8304, !tbaa !2289
  %866 = load i8*, i8** %s.addr, align 8, !dbg !8305, !tbaa !2289
  %867 = load i8*, i8** %next.addr, align 8, !dbg !8306, !tbaa !2289
  call void @reportDefault(%struct.XML_ParserStruct* %864, %struct.encoding* %865, i8* %866, i8* %867), !dbg !8307
  br label %if.end.982, !dbg !8307

if.end.982:                                       ; preds = %if.then.981, %sw.bb.978
  store i8 0, i8* %handleDefault, align 1, !dbg !8308, !tbaa !2307
  %868 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8309, !tbaa !2289
  %869 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8310, !tbaa !2289
  %870 = load i8*, i8** %end.addr, align 8, !dbg !8311, !tbaa !2289
  %871 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !8312, !tbaa !2289
  %872 = load i8, i8* %haveMore.addr, align 1, !dbg !8313, !tbaa !2307
  %call983 = call i32 @doIgnoreSection(%struct.XML_ParserStruct* %868, %struct.encoding* %869, i8** %next.addr, i8* %870, i8** %871, i8 zeroext %872), !dbg !8314
  store i32 %call983, i32* %result979, align 4, !dbg !8315, !tbaa !2307
  %873 = load i32, i32* %result979, align 4, !dbg !8316, !tbaa !2307
  %cmp984 = icmp ne i32 %873, 0, !dbg !8318
  br i1 %cmp984, label %if.then.986, label %if.else.987, !dbg !8319

if.then.986:                                      ; preds = %if.end.982
  %874 = load i32, i32* %result979, align 4, !dbg !8320, !tbaa !2307
  store i32 %874, i32* %retval, !dbg !8321
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.993, !dbg !8321

if.else.987:                                      ; preds = %if.end.982
  %875 = load i8*, i8** %next.addr, align 8, !dbg !8322, !tbaa !2289
  %tobool988 = icmp ne i8* %875, null, !dbg !8322
  br i1 %tobool988, label %if.end.991, label %if.then.989, !dbg !8324

if.then.989:                                      ; preds = %if.else.987
  %876 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8325, !tbaa !2289
  %m_processor990 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %876, i32 0, i32 45, !dbg !8327
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @ignoreSectionProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor990, align 8, !dbg !8328, !tbaa !2809
  %877 = load i32, i32* %result979, align 4, !dbg !8329, !tbaa !2307
  store i32 %877, i32* %retval, !dbg !8330
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.993, !dbg !8330

if.end.991:                                       ; preds = %if.else.987
  br label %if.end.992

if.end.992:                                       ; preds = %if.end.991
  store i32 0, i32* %cleanup.dest.slot, !dbg !8331
  br label %cleanup.993, !dbg !8331

cleanup.993:                                      ; preds = %if.end.992, %if.then.989, %if.then.986
  %878 = bitcast i32* %result979 to i8*, !dbg !8332
  call void @llvm.lifetime.end(i64 4, i8* %878) #2, !dbg !8332
  %cleanup.dest.994 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.994, label %cleanup.1492 [
    i32 0, label %cleanup.cont.995
  ]

cleanup.cont.995:                                 ; preds = %cleanup.993
  br label %sw.epilog.1478, !dbg !8333

sw.bb.996:                                        ; preds = %if.end.33
  %879 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8334, !tbaa !2289
  %m_prologState997 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %879, i32 0, i32 44, !dbg !8335
  %level = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState997, i32 0, i32 1, !dbg !8336
  %880 = load i32, i32* %level, align 4, !dbg !8336, !tbaa !8337
  %881 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8338, !tbaa !2289
  %m_groupSize = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %881, i32 0, i32 82, !dbg !8339
  %882 = load i32, i32* %m_groupSize, align 4, !dbg !8339, !tbaa !2525
  %cmp998 = icmp uge i32 %880, %882, !dbg !8340
  br i1 %cmp998, label %if.then.1000, label %if.end.1044, !dbg !8341

if.then.1000:                                     ; preds = %sw.bb.996
  %883 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8342, !tbaa !2289
  %m_groupSize1001 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %883, i32 0, i32 82, !dbg !8343
  %884 = load i32, i32* %m_groupSize1001, align 4, !dbg !8343, !tbaa !2525
  %tobool1002 = icmp ne i32 %884, 0, !dbg !8344
  br i1 %tobool1002, label %if.then.1003, label %if.else.1034, !dbg !8345

if.then.1003:                                     ; preds = %if.then.1000
  %885 = bitcast i8** %temp to i8*, !dbg !8346
  call void @llvm.lifetime.start(i64 8, i8* %885) #2, !dbg !8346
  call void @llvm.dbg.declare(metadata i8** %temp, metadata !1271, metadata !2293), !dbg !8347
  %886 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8348, !tbaa !2289
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %886, i32 0, i32 3, !dbg !8349
  %realloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 1, !dbg !8350
  %887 = load i8* (i8*, i64)*, i8* (i8*, i64)** %realloc_fcn, align 8, !dbg !8350, !tbaa !5977
  %888 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8351, !tbaa !2289
  %m_groupConnector = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %888, i32 0, i32 81, !dbg !8352
  %889 = load i8*, i8** %m_groupConnector, align 8, !dbg !8352, !tbaa !2529
  %890 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8353, !tbaa !2289
  %m_groupSize1004 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %890, i32 0, i32 82, !dbg !8354
  %891 = load i32, i32* %m_groupSize1004, align 4, !dbg !8355, !tbaa !2525
  %mul = mul i32 %891, 2, !dbg !8355
  store i32 %mul, i32* %m_groupSize1004, align 4, !dbg !8355, !tbaa !2525
  %conv1005 = zext i32 %mul to i64, !dbg !8356
  %call1006 = call i8* %887(i8* %889, i64 %conv1005), !dbg !8348
  store i8* %call1006, i8** %temp, align 8, !dbg !8347, !tbaa !2289
  %892 = load i8*, i8** %temp, align 8, !dbg !8357, !tbaa !2289
  %cmp1007 = icmp eq i8* %892, null, !dbg !8359
  br i1 %cmp1007, label %if.then.1009, label %if.end.1010, !dbg !8360

if.then.1009:                                     ; preds = %if.then.1003
  store i32 1, i32* %retval, !dbg !8361
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1031, !dbg !8361

if.end.1010:                                      ; preds = %if.then.1003
  %893 = load i8*, i8** %temp, align 8, !dbg !8362, !tbaa !2289
  %894 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8363, !tbaa !2289
  %m_groupConnector1011 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %894, i32 0, i32 81, !dbg !8364
  store i8* %893, i8** %m_groupConnector1011, align 8, !dbg !8365, !tbaa !2529
  %895 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8366, !tbaa !2289
  %scaffIndex = getelementptr inbounds %struct.DTD, %struct.DTD* %895, i32 0, i32 18, !dbg !8367
  %896 = load i32*, i32** %scaffIndex, align 8, !dbg !8367, !tbaa !3148
  %tobool1012 = icmp ne i32* %896, null, !dbg !8366
  br i1 %tobool1012, label %if.then.1013, label %if.end.1030, !dbg !8368

if.then.1013:                                     ; preds = %if.end.1010
  %897 = bitcast i32** %temp1014 to i8*, !dbg !8369
  call void @llvm.lifetime.start(i64 8, i8* %897) #2, !dbg !8369
  call void @llvm.dbg.declare(metadata i32** %temp1014, metadata !1276, metadata !2293), !dbg !8370
  %898 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8371, !tbaa !2289
  %m_mem1015 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %898, i32 0, i32 3, !dbg !8372
  %realloc_fcn1016 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem1015, i32 0, i32 1, !dbg !8373
  %899 = load i8* (i8*, i64)*, i8* (i8*, i64)** %realloc_fcn1016, align 8, !dbg !8373, !tbaa !5977
  %900 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8374, !tbaa !2289
  %scaffIndex1017 = getelementptr inbounds %struct.DTD, %struct.DTD* %900, i32 0, i32 18, !dbg !8375
  %901 = load i32*, i32** %scaffIndex1017, align 8, !dbg !8375, !tbaa !3148
  %902 = bitcast i32* %901 to i8*, !dbg !8376
  %903 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8377, !tbaa !2289
  %m_groupSize1018 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %903, i32 0, i32 82, !dbg !8378
  %904 = load i32, i32* %m_groupSize1018, align 4, !dbg !8378, !tbaa !2525
  %conv1019 = zext i32 %904 to i64, !dbg !8379
  %mul1020 = mul i64 %conv1019, 4, !dbg !8380
  %call1021 = call i8* %899(i8* %902, i64 %mul1020), !dbg !8371
  %905 = bitcast i8* %call1021 to i32*, !dbg !8381
  store i32* %905, i32** %temp1014, align 8, !dbg !8370, !tbaa !2289
  %906 = load i32*, i32** %temp1014, align 8, !dbg !8382, !tbaa !2289
  %cmp1022 = icmp eq i32* %906, null, !dbg !8384
  br i1 %cmp1022, label %if.then.1024, label %if.end.1025, !dbg !8385

if.then.1024:                                     ; preds = %if.then.1013
  store i32 1, i32* %retval, !dbg !8386
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1027, !dbg !8386

if.end.1025:                                      ; preds = %if.then.1013
  %907 = load i32*, i32** %temp1014, align 8, !dbg !8387, !tbaa !2289
  %908 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8388, !tbaa !2289
  %scaffIndex1026 = getelementptr inbounds %struct.DTD, %struct.DTD* %908, i32 0, i32 18, !dbg !8389
  store i32* %907, i32** %scaffIndex1026, align 8, !dbg !8390, !tbaa !3148
  store i32 0, i32* %cleanup.dest.slot, !dbg !8391
  br label %cleanup.1027, !dbg !8391

cleanup.1027:                                     ; preds = %if.end.1025, %if.then.1024
  %909 = bitcast i32** %temp1014 to i8*, !dbg !8392
  call void @llvm.lifetime.end(i64 8, i8* %909) #2, !dbg !8392
  %cleanup.dest.1028 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.1028, label %cleanup.1031 [
    i32 0, label %cleanup.cont.1029
  ]

cleanup.cont.1029:                                ; preds = %cleanup.1027
  br label %if.end.1030, !dbg !8394

if.end.1030:                                      ; preds = %cleanup.cont.1029, %if.end.1010
  store i32 0, i32* %cleanup.dest.slot, !dbg !8395
  br label %cleanup.1031, !dbg !8395

cleanup.1031:                                     ; preds = %if.end.1030, %cleanup.1027, %if.then.1009
  %910 = bitcast i8** %temp to i8*, !dbg !8396
  call void @llvm.lifetime.end(i64 8, i8* %910) #2, !dbg !8396
  %cleanup.dest.1032 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.1032, label %cleanup.1492 [
    i32 0, label %cleanup.cont.1033
  ]

cleanup.cont.1033:                                ; preds = %cleanup.1031
  br label %if.end.1043, !dbg !8398

if.else.1034:                                     ; preds = %if.then.1000
  %911 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8399, !tbaa !2289
  %m_mem1035 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %911, i32 0, i32 3, !dbg !8401
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem1035, i32 0, i32 0, !dbg !8402
  %912 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8, !dbg !8402, !tbaa !2416
  %913 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8403, !tbaa !2289
  %m_groupSize1036 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %913, i32 0, i32 82, !dbg !8404
  store i32 32, i32* %m_groupSize1036, align 4, !dbg !8405, !tbaa !2525
  %call1037 = call i8* %912(i64 32), !dbg !8399
  %914 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8406, !tbaa !2289
  %m_groupConnector1038 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %914, i32 0, i32 81, !dbg !8407
  store i8* %call1037, i8** %m_groupConnector1038, align 8, !dbg !8408, !tbaa !2529
  %915 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8409, !tbaa !2289
  %m_groupConnector1039 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %915, i32 0, i32 81, !dbg !8411
  %916 = load i8*, i8** %m_groupConnector1039, align 8, !dbg !8411, !tbaa !2529
  %tobool1040 = icmp ne i8* %916, null, !dbg !8412
  br i1 %tobool1040, label %if.end.1042, label %if.then.1041, !dbg !8413

if.then.1041:                                     ; preds = %if.else.1034
  store i32 1, i32* %retval, !dbg !8414
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1492, !dbg !8414

if.end.1042:                                      ; preds = %if.else.1034
  br label %if.end.1043

if.end.1043:                                      ; preds = %if.end.1042, %cleanup.cont.1033
  br label %if.end.1044, !dbg !8415

if.end.1044:                                      ; preds = %if.end.1043, %sw.bb.996
  %917 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8416, !tbaa !2289
  %m_prologState1045 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %917, i32 0, i32 44, !dbg !8417
  %level1046 = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState1045, i32 0, i32 1, !dbg !8418
  %918 = load i32, i32* %level1046, align 4, !dbg !8418, !tbaa !8337
  %idxprom = zext i32 %918 to i64, !dbg !8419
  %919 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8420, !tbaa !2289
  %m_groupConnector1047 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %919, i32 0, i32 81, !dbg !8421
  %920 = load i8*, i8** %m_groupConnector1047, align 8, !dbg !8421, !tbaa !2529
  %arrayidx1048 = getelementptr i8, i8* %920, i64 %idxprom, !dbg !8419
  store i8 0, i8* %arrayidx1048, align 1, !dbg !8422, !tbaa !2307
  %921 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8423, !tbaa !2289
  %in_eldecl = getelementptr inbounds %struct.DTD, %struct.DTD* %921, i32 0, i32 12, !dbg !8424
  %922 = load i8, i8* %in_eldecl, align 1, !dbg !8424, !tbaa !3143
  %tobool1049 = icmp ne i8 %922, 0, !dbg !8423
  br i1 %tobool1049, label %if.then.1050, label %if.end.1068, !dbg !8425

if.then.1050:                                     ; preds = %if.end.1044
  %923 = bitcast i32* %myindex to i8*, !dbg !8426
  call void @llvm.lifetime.start(i64 4, i8* %923) #2, !dbg !8426
  call void @llvm.dbg.declare(metadata i32* %myindex, metadata !1279, metadata !2293), !dbg !8427
  %924 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8428, !tbaa !2289
  %call1051 = call i32 @nextScaffoldPart(%struct.XML_ParserStruct* %924), !dbg !8429
  store i32 %call1051, i32* %myindex, align 4, !dbg !8427, !tbaa !3391
  %925 = load i32, i32* %myindex, align 4, !dbg !8430, !tbaa !3391
  %cmp1052 = icmp slt i32 %925, 0, !dbg !8432
  br i1 %cmp1052, label %if.then.1054, label %if.end.1055, !dbg !8433

if.then.1054:                                     ; preds = %if.then.1050
  store i32 1, i32* %retval, !dbg !8434
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1065, !dbg !8434

if.end.1055:                                      ; preds = %if.then.1050
  %926 = load i32, i32* %myindex, align 4, !dbg !8435, !tbaa !3391
  %927 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8436, !tbaa !2289
  %scaffLevel = getelementptr inbounds %struct.DTD, %struct.DTD* %927, i32 0, i32 17, !dbg !8437
  %928 = load i32, i32* %scaffLevel, align 4, !dbg !8437, !tbaa !3163
  %idxprom1056 = sext i32 %928 to i64, !dbg !8438
  %929 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8438, !tbaa !2289
  %scaffIndex1057 = getelementptr inbounds %struct.DTD, %struct.DTD* %929, i32 0, i32 18, !dbg !8439
  %930 = load i32*, i32** %scaffIndex1057, align 8, !dbg !8439, !tbaa !3148
  %arrayidx1058 = getelementptr i32, i32* %930, i64 %idxprom1056, !dbg !8438
  store i32 %926, i32* %arrayidx1058, align 4, !dbg !8440, !tbaa !3391
  %931 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8441, !tbaa !2289
  %scaffLevel1059 = getelementptr inbounds %struct.DTD, %struct.DTD* %931, i32 0, i32 17, !dbg !8442
  %932 = load i32, i32* %scaffLevel1059, align 4, !dbg !8443, !tbaa !3163
  %inc = add i32 %932, 1, !dbg !8443
  store i32 %inc, i32* %scaffLevel1059, align 4, !dbg !8443, !tbaa !3163
  %933 = load i32, i32* %myindex, align 4, !dbg !8444, !tbaa !3391
  %idxprom1060 = sext i32 %933 to i64, !dbg !8445
  %934 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8445, !tbaa !2289
  %scaffold = getelementptr inbounds %struct.DTD, %struct.DTD* %934, i32 0, i32 13, !dbg !8446
  %935 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold, align 8, !dbg !8446, !tbaa !3156
  %arrayidx1061 = getelementptr %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %935, i64 %idxprom1060, !dbg !8445
  %type = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx1061, i32 0, i32 0, !dbg !8447
  store i32 6, i32* %type, align 4, !dbg !8448, !tbaa !8449
  %936 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8451, !tbaa !2289
  %m_elementDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %936, i32 0, i32 30, !dbg !8453
  %937 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler, align 8, !dbg !8453, !tbaa !2919
  %tobool1062 = icmp ne void (i8*, i8*, %struct.XML_cp*)* %937, null, !dbg !8454
  br i1 %tobool1062, label %if.then.1063, label %if.end.1064, !dbg !8455

if.then.1063:                                     ; preds = %if.end.1055
  store i8 0, i8* %handleDefault, align 1, !dbg !8456, !tbaa !2307
  br label %if.end.1064, !dbg !8457

if.end.1064:                                      ; preds = %if.then.1063, %if.end.1055
  store i32 0, i32* %cleanup.dest.slot, !dbg !8458
  br label %cleanup.1065, !dbg !8458

cleanup.1065:                                     ; preds = %if.end.1064, %if.then.1054
  %938 = bitcast i32* %myindex to i8*, !dbg !8459
  call void @llvm.lifetime.end(i64 4, i8* %938) #2, !dbg !8459
  %cleanup.dest.1066 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.1066, label %cleanup.1492 [
    i32 0, label %cleanup.cont.1067
  ]

cleanup.cont.1067:                                ; preds = %cleanup.1065
  br label %if.end.1068, !dbg !8461

if.end.1068:                                      ; preds = %cleanup.cont.1067, %if.end.1044
  br label %sw.epilog.1478, !dbg !8462

sw.bb.1069:                                       ; preds = %if.end.33
  %939 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8463, !tbaa !2289
  %m_prologState1070 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %939, i32 0, i32 44, !dbg !8465
  %level1071 = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState1070, i32 0, i32 1, !dbg !8466
  %940 = load i32, i32* %level1071, align 4, !dbg !8466, !tbaa !8337
  %idxprom1072 = zext i32 %940 to i64, !dbg !8467
  %941 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8468, !tbaa !2289
  %m_groupConnector1073 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %941, i32 0, i32 81, !dbg !8469
  %942 = load i8*, i8** %m_groupConnector1073, align 8, !dbg !8469, !tbaa !2529
  %arrayidx1074 = getelementptr i8, i8* %942, i64 %idxprom1072, !dbg !8467
  %943 = load i8, i8* %arrayidx1074, align 1, !dbg !8467, !tbaa !2307
  %conv1075 = sext i8 %943 to i32, !dbg !8467
  %cmp1076 = icmp eq i32 %conv1075, 124, !dbg !8470
  br i1 %cmp1076, label %if.then.1078, label %if.end.1079, !dbg !8471

if.then.1078:                                     ; preds = %sw.bb.1069
  store i32 2, i32* %retval, !dbg !8472
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1492, !dbg !8472

if.end.1079:                                      ; preds = %sw.bb.1069
  %944 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8473, !tbaa !2289
  %m_prologState1080 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %944, i32 0, i32 44, !dbg !8474
  %level1081 = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState1080, i32 0, i32 1, !dbg !8475
  %945 = load i32, i32* %level1081, align 4, !dbg !8475, !tbaa !8337
  %idxprom1082 = zext i32 %945 to i64, !dbg !8476
  %946 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8477, !tbaa !2289
  %m_groupConnector1083 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %946, i32 0, i32 81, !dbg !8478
  %947 = load i8*, i8** %m_groupConnector1083, align 8, !dbg !8478, !tbaa !2529
  %arrayidx1084 = getelementptr i8, i8* %947, i64 %idxprom1082, !dbg !8476
  store i8 44, i8* %arrayidx1084, align 1, !dbg !8479, !tbaa !2307
  %948 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8480, !tbaa !2289
  %in_eldecl1085 = getelementptr inbounds %struct.DTD, %struct.DTD* %948, i32 0, i32 12, !dbg !8482
  %949 = load i8, i8* %in_eldecl1085, align 1, !dbg !8482, !tbaa !3143
  %conv1086 = zext i8 %949 to i32, !dbg !8480
  %tobool1087 = icmp ne i32 %conv1086, 0, !dbg !8480
  br i1 %tobool1087, label %land.lhs.true.1088, label %if.end.1092, !dbg !8483

land.lhs.true.1088:                               ; preds = %if.end.1079
  %950 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8484, !tbaa !2289
  %m_elementDeclHandler1089 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %950, i32 0, i32 30, !dbg !8486
  %951 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler1089, align 8, !dbg !8486, !tbaa !2919
  %tobool1090 = icmp ne void (i8*, i8*, %struct.XML_cp*)* %951, null, !dbg !8487
  br i1 %tobool1090, label %if.then.1091, label %if.end.1092, !dbg !8488

if.then.1091:                                     ; preds = %land.lhs.true.1088
  store i8 0, i8* %handleDefault, align 1, !dbg !8489, !tbaa !2307
  br label %if.end.1092, !dbg !8490

if.end.1092:                                      ; preds = %if.then.1091, %land.lhs.true.1088, %if.end.1079
  br label %sw.epilog.1478, !dbg !8491

sw.bb.1093:                                       ; preds = %if.end.33
  %952 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8492, !tbaa !2289
  %m_prologState1094 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %952, i32 0, i32 44, !dbg !8494
  %level1095 = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState1094, i32 0, i32 1, !dbg !8495
  %953 = load i32, i32* %level1095, align 4, !dbg !8495, !tbaa !8337
  %idxprom1096 = zext i32 %953 to i64, !dbg !8496
  %954 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8497, !tbaa !2289
  %m_groupConnector1097 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %954, i32 0, i32 81, !dbg !8498
  %955 = load i8*, i8** %m_groupConnector1097, align 8, !dbg !8498, !tbaa !2529
  %arrayidx1098 = getelementptr i8, i8* %955, i64 %idxprom1096, !dbg !8496
  %956 = load i8, i8* %arrayidx1098, align 1, !dbg !8496, !tbaa !2307
  %conv1099 = sext i8 %956 to i32, !dbg !8496
  %cmp1100 = icmp eq i32 %conv1099, 44, !dbg !8499
  br i1 %cmp1100, label %if.then.1102, label %if.end.1103, !dbg !8500

if.then.1102:                                     ; preds = %sw.bb.1093
  store i32 2, i32* %retval, !dbg !8501
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1492, !dbg !8501

if.end.1103:                                      ; preds = %sw.bb.1093
  %957 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8502, !tbaa !2289
  %in_eldecl1104 = getelementptr inbounds %struct.DTD, %struct.DTD* %957, i32 0, i32 12, !dbg !8504
  %958 = load i8, i8* %in_eldecl1104, align 1, !dbg !8504, !tbaa !3143
  %conv1105 = zext i8 %958 to i32, !dbg !8502
  %tobool1106 = icmp ne i32 %conv1105, 0, !dbg !8502
  br i1 %tobool1106, label %land.lhs.true.1107, label %if.end.1140, !dbg !8505

land.lhs.true.1107:                               ; preds = %if.end.1103
  %959 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8506, !tbaa !2289
  %m_prologState1108 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %959, i32 0, i32 44, !dbg !8508
  %level1109 = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState1108, i32 0, i32 1, !dbg !8509
  %960 = load i32, i32* %level1109, align 4, !dbg !8509, !tbaa !8337
  %idxprom1110 = zext i32 %960 to i64, !dbg !8510
  %961 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8511, !tbaa !2289
  %m_groupConnector1111 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %961, i32 0, i32 81, !dbg !8512
  %962 = load i8*, i8** %m_groupConnector1111, align 8, !dbg !8512, !tbaa !2529
  %arrayidx1112 = getelementptr i8, i8* %962, i64 %idxprom1110, !dbg !8510
  %963 = load i8, i8* %arrayidx1112, align 1, !dbg !8510, !tbaa !2307
  %tobool1113 = icmp ne i8 %963, 0, !dbg !8510
  br i1 %tobool1113, label %if.end.1140, label %land.lhs.true.1114, !dbg !8513

land.lhs.true.1114:                               ; preds = %land.lhs.true.1107
  %964 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8514, !tbaa !2289
  %scaffLevel1115 = getelementptr inbounds %struct.DTD, %struct.DTD* %964, i32 0, i32 17, !dbg !8515
  %965 = load i32, i32* %scaffLevel1115, align 4, !dbg !8515, !tbaa !3163
  %sub1116 = sub i32 %965, 1, !dbg !8516
  %idxprom1117 = sext i32 %sub1116 to i64, !dbg !8517
  %966 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8517, !tbaa !2289
  %scaffIndex1118 = getelementptr inbounds %struct.DTD, %struct.DTD* %966, i32 0, i32 18, !dbg !8518
  %967 = load i32*, i32** %scaffIndex1118, align 8, !dbg !8518, !tbaa !3148
  %arrayidx1119 = getelementptr i32, i32* %967, i64 %idxprom1117, !dbg !8517
  %968 = load i32, i32* %arrayidx1119, align 4, !dbg !8517, !tbaa !3391
  %idxprom1120 = sext i32 %968 to i64, !dbg !8519
  %969 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8519, !tbaa !2289
  %scaffold1121 = getelementptr inbounds %struct.DTD, %struct.DTD* %969, i32 0, i32 13, !dbg !8520
  %970 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold1121, align 8, !dbg !8520, !tbaa !3156
  %arrayidx1122 = getelementptr %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %970, i64 %idxprom1120, !dbg !8519
  %type1123 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx1122, i32 0, i32 0, !dbg !8521
  %971 = load i32, i32* %type1123, align 4, !dbg !8521, !tbaa !8449
  %cmp1124 = icmp ne i32 %971, 3, !dbg !8522
  br i1 %cmp1124, label %if.then.1126, label %if.end.1140, !dbg !8523

if.then.1126:                                     ; preds = %land.lhs.true.1114
  %972 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8524, !tbaa !2289
  %scaffLevel1127 = getelementptr inbounds %struct.DTD, %struct.DTD* %972, i32 0, i32 17, !dbg !8526
  %973 = load i32, i32* %scaffLevel1127, align 4, !dbg !8526, !tbaa !3163
  %sub1128 = sub i32 %973, 1, !dbg !8527
  %idxprom1129 = sext i32 %sub1128 to i64, !dbg !8528
  %974 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8528, !tbaa !2289
  %scaffIndex1130 = getelementptr inbounds %struct.DTD, %struct.DTD* %974, i32 0, i32 18, !dbg !8529
  %975 = load i32*, i32** %scaffIndex1130, align 8, !dbg !8529, !tbaa !3148
  %arrayidx1131 = getelementptr i32, i32* %975, i64 %idxprom1129, !dbg !8528
  %976 = load i32, i32* %arrayidx1131, align 4, !dbg !8528, !tbaa !3391
  %idxprom1132 = sext i32 %976 to i64, !dbg !8530
  %977 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8530, !tbaa !2289
  %scaffold1133 = getelementptr inbounds %struct.DTD, %struct.DTD* %977, i32 0, i32 13, !dbg !8531
  %978 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold1133, align 8, !dbg !8531, !tbaa !3156
  %arrayidx1134 = getelementptr %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %978, i64 %idxprom1132, !dbg !8530
  %type1135 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx1134, i32 0, i32 0, !dbg !8532
  store i32 5, i32* %type1135, align 4, !dbg !8533, !tbaa !8449
  %979 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8534, !tbaa !2289
  %m_elementDeclHandler1136 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %979, i32 0, i32 30, !dbg !8536
  %980 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler1136, align 8, !dbg !8536, !tbaa !2919
  %tobool1137 = icmp ne void (i8*, i8*, %struct.XML_cp*)* %980, null, !dbg !8537
  br i1 %tobool1137, label %if.then.1138, label %if.end.1139, !dbg !8538

if.then.1138:                                     ; preds = %if.then.1126
  store i8 0, i8* %handleDefault, align 1, !dbg !8539, !tbaa !2307
  br label %if.end.1139, !dbg !8540

if.end.1139:                                      ; preds = %if.then.1138, %if.then.1126
  br label %if.end.1140, !dbg !8541

if.end.1140:                                      ; preds = %if.end.1139, %land.lhs.true.1114, %land.lhs.true.1107, %if.end.1103
  %981 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8542, !tbaa !2289
  %m_prologState1141 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %981, i32 0, i32 44, !dbg !8543
  %level1142 = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState1141, i32 0, i32 1, !dbg !8544
  %982 = load i32, i32* %level1142, align 4, !dbg !8544, !tbaa !8337
  %idxprom1143 = zext i32 %982 to i64, !dbg !8545
  %983 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8546, !tbaa !2289
  %m_groupConnector1144 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %983, i32 0, i32 81, !dbg !8547
  %984 = load i8*, i8** %m_groupConnector1144, align 8, !dbg !8547, !tbaa !2529
  %arrayidx1145 = getelementptr i8, i8* %984, i64 %idxprom1143, !dbg !8545
  store i8 124, i8* %arrayidx1145, align 1, !dbg !8548, !tbaa !2307
  br label %sw.epilog.1478, !dbg !8549

sw.bb.1146:                                       ; preds = %if.end.33, %if.end.33
  %985 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8550, !tbaa !2289
  %hasParamEntityRefs1147 = getelementptr inbounds %struct.DTD, %struct.DTD* %985, i32 0, i32 7, !dbg !8551
  store i8 1, i8* %hasParamEntityRefs1147, align 1, !dbg !8552, !tbaa !3183
  %986 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8553, !tbaa !2289
  %m_paramEntityParsing1148 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %986, i32 0, i32 88, !dbg !8554
  %987 = load i32, i32* %m_paramEntityParsing1148, align 4, !dbg !8554, !tbaa !3064
  %tobool1149 = icmp ne i32 %987, 0, !dbg !8555
  br i1 %tobool1149, label %if.else.1153, label %if.then.1150, !dbg !8556

if.then.1150:                                     ; preds = %sw.bb.1146
  %988 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8557, !tbaa !2289
  %standalone1151 = getelementptr inbounds %struct.DTD, %struct.DTD* %988, i32 0, i32 8, !dbg !8558
  %989 = load i8, i8* %standalone1151, align 1, !dbg !8558, !tbaa !3187
  %990 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8559, !tbaa !2289
  %keepProcessing1152 = getelementptr inbounds %struct.DTD, %struct.DTD* %990, i32 0, i32 6, !dbg !8560
  store i8 %989, i8* %keepProcessing1152, align 1, !dbg !8561, !tbaa !3179
  br label %if.end.1260, !dbg !8559

if.else.1153:                                     ; preds = %sw.bb.1146
  %991 = bitcast i8** %name1154 to i8*, !dbg !8562
  call void @llvm.lifetime.start(i64 8, i8* %991) #2, !dbg !8562
  call void @llvm.dbg.declare(metadata i8** %name1154, metadata !1282, metadata !2293), !dbg !8563
  %992 = bitcast %struct.ENTITY** %entity1155 to i8*, !dbg !8564
  call void @llvm.lifetime.start(i64 8, i8* %992) #2, !dbg !8564
  call void @llvm.dbg.declare(metadata %struct.ENTITY** %entity1155, metadata !1285, metadata !2293), !dbg !8565
  %993 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8566, !tbaa !2289
  %pool1156 = getelementptr inbounds %struct.DTD, %struct.DTD* %993, i32 0, i32 4, !dbg !8567
  %994 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8568, !tbaa !2289
  %995 = load i8*, i8** %s.addr, align 8, !dbg !8569, !tbaa !2289
  %996 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8570, !tbaa !2289
  %minBytesPerChar1157 = getelementptr inbounds %struct.encoding, %struct.encoding* %996, i32 0, i32 13, !dbg !8571
  %997 = load i32, i32* %minBytesPerChar1157, align 4, !dbg !8571, !tbaa !6758
  %idx.ext1158 = sext i32 %997 to i64, !dbg !8572
  %add.ptr1159 = getelementptr i8, i8* %995, i64 %idx.ext1158, !dbg !8572
  %998 = load i8*, i8** %next.addr, align 8, !dbg !8573, !tbaa !2289
  %999 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8574, !tbaa !2289
  %minBytesPerChar1160 = getelementptr inbounds %struct.encoding, %struct.encoding* %999, i32 0, i32 13, !dbg !8575
  %1000 = load i32, i32* %minBytesPerChar1160, align 4, !dbg !8575, !tbaa !6758
  %idx.ext1161 = sext i32 %1000 to i64, !dbg !8576
  %idx.neg1162 = sub i64 0, %idx.ext1161, !dbg !8576
  %add.ptr1163 = getelementptr i8, i8* %998, i64 %idx.neg1162, !dbg !8576
  %call1164 = call i8* @poolStoreString(%struct.STRING_POOL* %pool1156, %struct.encoding* %994, i8* %add.ptr1159, i8* %add.ptr1163), !dbg !8577
  store i8* %call1164, i8** %name1154, align 8, !dbg !8578, !tbaa !2289
  %1001 = load i8*, i8** %name1154, align 8, !dbg !8579, !tbaa !2289
  %tobool1165 = icmp ne i8* %1001, null, !dbg !8579
  br i1 %tobool1165, label %if.end.1167, label %if.then.1166, !dbg !8581

if.then.1166:                                     ; preds = %if.else.1153
  store i32 1, i32* %retval, !dbg !8582
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1256, !dbg !8582

if.end.1167:                                      ; preds = %if.else.1153
  %1002 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8583, !tbaa !2289
  %1003 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8584, !tbaa !2289
  %paramEntities1168 = getelementptr inbounds %struct.DTD, %struct.DTD* %1003, i32 0, i32 10, !dbg !8585
  %1004 = load i8*, i8** %name1154, align 8, !dbg !8586, !tbaa !2289
  %call1169 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %1002, %struct.HASH_TABLE* %paramEntities1168, i8* %1004, i64 0), !dbg !8587
  %1005 = bitcast %struct.NAMED* %call1169 to %struct.ENTITY*, !dbg !8588
  store %struct.ENTITY* %1005, %struct.ENTITY** %entity1155, align 8, !dbg !8589, !tbaa !2289
  %1006 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8590, !tbaa !2289
  %pool1170 = getelementptr inbounds %struct.DTD, %struct.DTD* %1006, i32 0, i32 4, !dbg !8591
  %start1171 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool1170, i32 0, i32 4, !dbg !8592
  %1007 = load i8*, i8** %start1171, align 8, !dbg !8592, !tbaa !2794
  %1008 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8593, !tbaa !2289
  %pool1172 = getelementptr inbounds %struct.DTD, %struct.DTD* %1008, i32 0, i32 4, !dbg !8594
  %ptr1173 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool1172, i32 0, i32 3, !dbg !8595
  store i8* %1007, i8** %ptr1173, align 8, !dbg !8596, !tbaa !2798
  %1009 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8597, !tbaa !2289
  %m_prologState1174 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1009, i32 0, i32 44, !dbg !8599
  %documentEntity = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState1174, i32 0, i32 4, !dbg !8600
  %1010 = load i32, i32* %documentEntity, align 4, !dbg !8600, !tbaa !8601
  %tobool1175 = icmp ne i32 %1010, 0, !dbg !8602
  br i1 %tobool1175, label %land.lhs.true.1176, label %if.else.1195, !dbg !8603

land.lhs.true.1176:                               ; preds = %if.end.1167
  %1011 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8604, !tbaa !2289
  %standalone1177 = getelementptr inbounds %struct.DTD, %struct.DTD* %1011, i32 0, i32 8, !dbg !8605
  %1012 = load i8, i8* %standalone1177, align 1, !dbg !8605, !tbaa !3187
  %conv1178 = zext i8 %1012 to i32, !dbg !8604
  %tobool1179 = icmp ne i32 %conv1178, 0, !dbg !8604
  br i1 %tobool1179, label %cond.true.1180, label %cond.false.1183, !dbg !8606

cond.true.1180:                                   ; preds = %land.lhs.true.1176
  %1013 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8607, !tbaa !2289
  %m_openInternalEntities1181 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1013, i32 0, i32 50, !dbg !8608
  %1014 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities1181, align 8, !dbg !8608, !tbaa !2664
  %tobool1182 = icmp ne %struct.open_internal_entity* %1014, null, !dbg !8609
  br i1 %tobool1182, label %if.else.1195, label %if.then.1186, !dbg !8604

cond.false.1183:                                  ; preds = %land.lhs.true.1176
  %1015 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8610, !tbaa !2289
  %hasParamEntityRefs1184 = getelementptr inbounds %struct.DTD, %struct.DTD* %1015, i32 0, i32 7, !dbg !8611
  %1016 = load i8, i8* %hasParamEntityRefs1184, align 1, !dbg !8611, !tbaa !3183
  %tobool1185 = icmp ne i8 %1016, 0, !dbg !8610
  br i1 %tobool1185, label %if.else.1195, label %if.then.1186, !dbg !8606

if.then.1186:                                     ; preds = %cond.false.1183, %cond.true.1180
  %1017 = load %struct.ENTITY*, %struct.ENTITY** %entity1155, align 8, !dbg !8612, !tbaa !2289
  %tobool1187 = icmp ne %struct.ENTITY* %1017, null, !dbg !8612
  br i1 %tobool1187, label %if.else.1189, label %if.then.1188, !dbg !8615

if.then.1188:                                     ; preds = %if.then.1186
  store i32 11, i32* %retval, !dbg !8616
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1256, !dbg !8616

if.else.1189:                                     ; preds = %if.then.1186
  %1018 = load %struct.ENTITY*, %struct.ENTITY** %entity1155, align 8, !dbg !8617, !tbaa !2289
  %is_internal1190 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %1018, i32 0, i32 10, !dbg !8619
  %1019 = load i8, i8* %is_internal1190, align 1, !dbg !8619, !tbaa !7995
  %tobool1191 = icmp ne i8 %1019, 0, !dbg !8617
  br i1 %tobool1191, label %if.end.1193, label %if.then.1192, !dbg !8620

if.then.1192:                                     ; preds = %if.else.1189
  store i32 24, i32* %retval, !dbg !8621
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1256, !dbg !8621

if.end.1193:                                      ; preds = %if.else.1189
  br label %if.end.1194

if.end.1194:                                      ; preds = %if.end.1193
  br label %if.end.1209, !dbg !8622

if.else.1195:                                     ; preds = %cond.false.1183, %cond.true.1180, %if.end.1167
  %1020 = load %struct.ENTITY*, %struct.ENTITY** %entity1155, align 8, !dbg !8623, !tbaa !2289
  %tobool1196 = icmp ne %struct.ENTITY* %1020, null, !dbg !8623
  br i1 %tobool1196, label %if.end.1208, label %if.then.1197, !dbg !8625

if.then.1197:                                     ; preds = %if.else.1195
  %1021 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8626, !tbaa !2289
  %standalone1198 = getelementptr inbounds %struct.DTD, %struct.DTD* %1021, i32 0, i32 8, !dbg !8628
  %1022 = load i8, i8* %standalone1198, align 1, !dbg !8628, !tbaa !3187
  %1023 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8629, !tbaa !2289
  %keepProcessing1199 = getelementptr inbounds %struct.DTD, %struct.DTD* %1023, i32 0, i32 6, !dbg !8630
  store i8 %1022, i8* %keepProcessing1199, align 1, !dbg !8631, !tbaa !3179
  %1024 = load i32, i32* %role, align 4, !dbg !8632, !tbaa !3391
  %cmp1200 = icmp eq i32 %1024, 60, !dbg !8634
  br i1 %cmp1200, label %land.lhs.true.1202, label %if.end.1207, !dbg !8635

land.lhs.true.1202:                               ; preds = %if.then.1197
  %1025 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8636, !tbaa !2289
  %m_skippedEntityHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1025, i32 0, i32 28, !dbg !8638
  %1026 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_skippedEntityHandler, align 8, !dbg !8638, !tbaa !2915
  %tobool1203 = icmp ne void (i8*, i8*, i32)* %1026, null, !dbg !8639
  br i1 %tobool1203, label %if.then.1204, label %if.end.1207, !dbg !8640

if.then.1204:                                     ; preds = %land.lhs.true.1202
  %1027 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8641, !tbaa !2289
  %m_skippedEntityHandler1205 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1027, i32 0, i32 28, !dbg !8643
  %1028 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_skippedEntityHandler1205, align 8, !dbg !8643, !tbaa !2915
  %1029 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8644, !tbaa !2289
  %m_handlerArg1206 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1029, i32 0, i32 1, !dbg !8645
  %1030 = load i8*, i8** %m_handlerArg1206, align 8, !dbg !8645, !tbaa !2842
  %1031 = load i8*, i8** %name1154, align 8, !dbg !8646, !tbaa !2289
  call void %1028(i8* %1030, i8* %1031, i32 1), !dbg !8647
  store i8 0, i8* %handleDefault, align 1, !dbg !8648, !tbaa !2307
  br label %if.end.1207, !dbg !8649

if.end.1207:                                      ; preds = %if.then.1204, %land.lhs.true.1202, %if.then.1197
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup.1256, !dbg !8650

if.end.1208:                                      ; preds = %if.else.1195
  br label %if.end.1209

if.end.1209:                                      ; preds = %if.end.1208, %if.end.1194
  %1032 = load %struct.ENTITY*, %struct.ENTITY** %entity1155, align 8, !dbg !8651, !tbaa !2289
  %open = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %1032, i32 0, i32 8, !dbg !8653
  %1033 = load i8, i8* %open, align 1, !dbg !8653, !tbaa !4090
  %tobool1210 = icmp ne i8 %1033, 0, !dbg !8651
  br i1 %tobool1210, label %if.then.1211, label %if.end.1212, !dbg !8654

if.then.1211:                                     ; preds = %if.end.1209
  store i32 12, i32* %retval, !dbg !8655
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1256, !dbg !8655

if.end.1212:                                      ; preds = %if.end.1209
  %1034 = load %struct.ENTITY*, %struct.ENTITY** %entity1155, align 8, !dbg !8656, !tbaa !2289
  %textPtr1213 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %1034, i32 0, i32 1, !dbg !8657
  %1035 = load i8*, i8** %textPtr1213, align 8, !dbg !8657, !tbaa !7541
  %tobool1214 = icmp ne i8* %1035, null, !dbg !8656
  br i1 %tobool1214, label %if.then.1215, label %if.end.1229, !dbg !8658

if.then.1215:                                     ; preds = %if.end.1212
  %1036 = bitcast i32* %result1216 to i8*, !dbg !8659
  call void @llvm.lifetime.start(i64 4, i8* %1036) #2, !dbg !8659
  call void @llvm.dbg.declare(metadata i32* %result1216, metadata !1286, metadata !2293), !dbg !8660
  call void @llvm.lifetime.start(i64 1, i8* %betweenDecl1217) #2, !dbg !8661
  call void @llvm.dbg.declare(metadata i8* %betweenDecl1217, metadata !1289, metadata !2293), !dbg !8662
  %1037 = load i32, i32* %role, align 4, !dbg !8663, !tbaa !3391
  %cmp1218 = icmp eq i32 %1037, 60, !dbg !8664
  %cond1220 = select i1 %cmp1218, i32 1, i32 0, !dbg !8663
  %conv1221 = trunc i32 %cond1220 to i8, !dbg !8665
  store i8 %conv1221, i8* %betweenDecl1217, align 1, !dbg !8662, !tbaa !2307
  %1038 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8666, !tbaa !2289
  %1039 = load %struct.ENTITY*, %struct.ENTITY** %entity1155, align 8, !dbg !8667, !tbaa !2289
  %1040 = load i8, i8* %betweenDecl1217, align 1, !dbg !8668, !tbaa !2307
  %call1222 = call i32 @processInternalEntity(%struct.XML_ParserStruct* %1038, %struct.ENTITY* %1039, i8 zeroext %1040), !dbg !8669
  store i32 %call1222, i32* %result1216, align 4, !dbg !8670, !tbaa !2307
  %1041 = load i32, i32* %result1216, align 4, !dbg !8671, !tbaa !2307
  %cmp1223 = icmp ne i32 %1041, 0, !dbg !8673
  br i1 %cmp1223, label %if.then.1225, label %if.end.1226, !dbg !8674

if.then.1225:                                     ; preds = %if.then.1215
  %1042 = load i32, i32* %result1216, align 4, !dbg !8675, !tbaa !2307
  store i32 %1042, i32* %retval, !dbg !8676
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1227, !dbg !8676

if.end.1226:                                      ; preds = %if.then.1215
  store i8 0, i8* %handleDefault, align 1, !dbg !8677, !tbaa !2307
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup.1227, !dbg !8678

cleanup.1227:                                     ; preds = %if.end.1226, %if.then.1225
  call void @llvm.lifetime.end(i64 1, i8* %betweenDecl1217) #2, !dbg !8679
  %1043 = bitcast i32* %result1216 to i8*, !dbg !8679
  call void @llvm.lifetime.end(i64 4, i8* %1043) #2, !dbg !8679
  br label %cleanup.1256

if.end.1229:                                      ; preds = %if.end.1212
  %1044 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8680, !tbaa !2289
  %m_externalEntityRefHandler1230 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1044, i32 0, i32 26, !dbg !8682
  %1045 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %m_externalEntityRefHandler1230, align 8, !dbg !8682, !tbaa !2906
  %tobool1231 = icmp ne i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)* %1045, null, !dbg !8683
  br i1 %tobool1231, label %if.then.1232, label %if.else.1252, !dbg !8684

if.then.1232:                                     ; preds = %if.end.1229
  %1046 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8685, !tbaa !2289
  %paramEntityRead1233 = getelementptr inbounds %struct.DTD, %struct.DTD* %1046, i32 0, i32 9, !dbg !8687
  store i8 0, i8* %paramEntityRead1233, align 1, !dbg !8688, !tbaa !3108
  %1047 = load %struct.ENTITY*, %struct.ENTITY** %entity1155, align 8, !dbg !8689, !tbaa !2289
  %open1234 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %1047, i32 0, i32 8, !dbg !8690
  store i8 1, i8* %open1234, align 1, !dbg !8691, !tbaa !4090
  %1048 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8692, !tbaa !2289
  %m_externalEntityRefHandler1235 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1048, i32 0, i32 26, !dbg !8694
  %1049 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %m_externalEntityRefHandler1235, align 8, !dbg !8694, !tbaa !2906
  %1050 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8695, !tbaa !2289
  %m_externalEntityRefHandlerArg1236 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1050, i32 0, i32 27, !dbg !8696
  %1051 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %m_externalEntityRefHandlerArg1236, align 8, !dbg !8696, !tbaa !2911
  %1052 = load %struct.ENTITY*, %struct.ENTITY** %entity1155, align 8, !dbg !8697, !tbaa !2289
  %base1237 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %1052, i32 0, i32 5, !dbg !8698
  %1053 = load i8*, i8** %base1237, align 8, !dbg !8698, !tbaa !6920
  %1054 = load %struct.ENTITY*, %struct.ENTITY** %entity1155, align 8, !dbg !8699, !tbaa !2289
  %systemId1238 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %1054, i32 0, i32 4, !dbg !8700
  %1055 = load i8*, i8** %systemId1238, align 8, !dbg !8700, !tbaa !6933
  %1056 = load %struct.ENTITY*, %struct.ENTITY** %entity1155, align 8, !dbg !8701, !tbaa !2289
  %publicId1239 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %1056, i32 0, i32 6, !dbg !8702
  %1057 = load i8*, i8** %publicId1239, align 8, !dbg !8702, !tbaa !6833
  %call1240 = call i32 %1049(%struct.XML_ParserStruct* %1051, i8* null, i8* %1053, i8* %1055, i8* %1057), !dbg !8703
  %tobool1241 = icmp ne i32 %call1240, 0, !dbg !8703
  br i1 %tobool1241, label %if.end.1244, label %if.then.1242, !dbg !8704

if.then.1242:                                     ; preds = %if.then.1232
  %1058 = load %struct.ENTITY*, %struct.ENTITY** %entity1155, align 8, !dbg !8705, !tbaa !2289
  %open1243 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %1058, i32 0, i32 8, !dbg !8707
  store i8 0, i8* %open1243, align 1, !dbg !8708, !tbaa !4090
  store i32 21, i32* %retval, !dbg !8709
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1256, !dbg !8709

if.end.1244:                                      ; preds = %if.then.1232
  %1059 = load %struct.ENTITY*, %struct.ENTITY** %entity1155, align 8, !dbg !8710, !tbaa !2289
  %open1245 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %1059, i32 0, i32 8, !dbg !8711
  store i8 0, i8* %open1245, align 1, !dbg !8712, !tbaa !4090
  store i8 0, i8* %handleDefault, align 1, !dbg !8713, !tbaa !2307
  %1060 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8714, !tbaa !2289
  %paramEntityRead1246 = getelementptr inbounds %struct.DTD, %struct.DTD* %1060, i32 0, i32 9, !dbg !8716
  %1061 = load i8, i8* %paramEntityRead1246, align 1, !dbg !8716, !tbaa !3108
  %tobool1247 = icmp ne i8 %1061, 0, !dbg !8714
  br i1 %tobool1247, label %if.end.1251, label %if.then.1248, !dbg !8717

if.then.1248:                                     ; preds = %if.end.1244
  %1062 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8718, !tbaa !2289
  %standalone1249 = getelementptr inbounds %struct.DTD, %struct.DTD* %1062, i32 0, i32 8, !dbg !8720
  %1063 = load i8, i8* %standalone1249, align 1, !dbg !8720, !tbaa !3187
  %1064 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8721, !tbaa !2289
  %keepProcessing1250 = getelementptr inbounds %struct.DTD, %struct.DTD* %1064, i32 0, i32 6, !dbg !8722
  store i8 %1063, i8* %keepProcessing1250, align 1, !dbg !8723, !tbaa !3179
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup.1256, !dbg !8724

if.end.1251:                                      ; preds = %if.end.1244
  br label %if.end.1255, !dbg !8725

if.else.1252:                                     ; preds = %if.end.1229
  %1065 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8726, !tbaa !2289
  %standalone1253 = getelementptr inbounds %struct.DTD, %struct.DTD* %1065, i32 0, i32 8, !dbg !8728
  %1066 = load i8, i8* %standalone1253, align 1, !dbg !8728, !tbaa !3187
  %1067 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8729, !tbaa !2289
  %keepProcessing1254 = getelementptr inbounds %struct.DTD, %struct.DTD* %1067, i32 0, i32 6, !dbg !8730
  store i8 %1066, i8* %keepProcessing1254, align 1, !dbg !8731, !tbaa !3179
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup.1256, !dbg !8732

if.end.1255:                                      ; preds = %if.end.1251
  store i32 0, i32* %cleanup.dest.slot, !dbg !8733
  br label %cleanup.1256, !dbg !8733

cleanup.1256:                                     ; preds = %if.end.1255, %if.else.1252, %if.then.1248, %if.then.1242, %cleanup.1227, %if.then.1211, %if.end.1207, %if.then.1192, %if.then.1188, %if.then.1166
  %1068 = bitcast %struct.ENTITY** %entity1155 to i8*, !dbg !8734
  call void @llvm.lifetime.end(i64 8, i8* %1068) #2, !dbg !8734
  %1069 = bitcast i8** %name1154 to i8*, !dbg !8734
  call void @llvm.lifetime.end(i64 8, i8* %1069) #2, !dbg !8734
  %cleanup.dest.1258 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.1258, label %cleanup.1492 [
    i32 0, label %cleanup.cont.1259
    i32 5, label %sw.epilog.1478
  ]

cleanup.cont.1259:                                ; preds = %cleanup.1256
  br label %if.end.1260

if.end.1260:                                      ; preds = %cleanup.cont.1259, %if.then.1150
  %1070 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8736, !tbaa !2289
  %standalone1261 = getelementptr inbounds %struct.DTD, %struct.DTD* %1070, i32 0, i32 8, !dbg !8738
  %1071 = load i8, i8* %standalone1261, align 1, !dbg !8738, !tbaa !3187
  %tobool1262 = icmp ne i8 %1071, 0, !dbg !8736
  br i1 %tobool1262, label %if.end.1272, label %land.lhs.true.1263, !dbg !8739

land.lhs.true.1263:                               ; preds = %if.end.1260
  %1072 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8740, !tbaa !2289
  %m_notStandaloneHandler1264 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1072, i32 0, i32 25, !dbg !8741
  %1073 = load i32 (i8*)*, i32 (i8*)** %m_notStandaloneHandler1264, align 8, !dbg !8741, !tbaa !2902
  %tobool1265 = icmp ne i32 (i8*)* %1073, null, !dbg !8742
  br i1 %tobool1265, label %land.lhs.true.1266, label %if.end.1272, !dbg !8743

land.lhs.true.1266:                               ; preds = %land.lhs.true.1263
  %1074 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8744, !tbaa !2289
  %m_notStandaloneHandler1267 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1074, i32 0, i32 25, !dbg !8745
  %1075 = load i32 (i8*)*, i32 (i8*)** %m_notStandaloneHandler1267, align 8, !dbg !8745, !tbaa !2902
  %1076 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8746, !tbaa !2289
  %m_handlerArg1268 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1076, i32 0, i32 1, !dbg !8747
  %1077 = load i8*, i8** %m_handlerArg1268, align 8, !dbg !8747, !tbaa !2842
  %call1269 = call i32 %1075(i8* %1077), !dbg !8748
  %tobool1270 = icmp ne i32 %call1269, 0, !dbg !8748
  br i1 %tobool1270, label %if.end.1272, label %if.then.1271, !dbg !8749

if.then.1271:                                     ; preds = %land.lhs.true.1266
  store i32 22, i32* %retval, !dbg !8750
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1492, !dbg !8750

if.end.1272:                                      ; preds = %land.lhs.true.1266, %land.lhs.true.1263, %if.end.1260
  br label %sw.epilog.1478, !dbg !8751

sw.bb.1273:                                       ; preds = %if.end.33
  %1078 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8752, !tbaa !2289
  %m_elementDeclHandler1274 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1078, i32 0, i32 30, !dbg !8754
  %1079 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler1274, align 8, !dbg !8754, !tbaa !2919
  %tobool1275 = icmp ne void (i8*, i8*, %struct.XML_cp*)* %1079, null, !dbg !8755
  br i1 %tobool1275, label %if.then.1276, label %if.end.1285, !dbg !8756

if.then.1276:                                     ; preds = %sw.bb.1273
  %1080 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8757, !tbaa !2289
  %1081 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8759, !tbaa !2289
  %1082 = load i8*, i8** %s.addr, align 8, !dbg !8760, !tbaa !2289
  %1083 = load i8*, i8** %next.addr, align 8, !dbg !8761, !tbaa !2289
  %call1277 = call %struct.ELEMENT_TYPE* @getElementType(%struct.XML_ParserStruct* %1080, %struct.encoding* %1081, i8* %1082, i8* %1083), !dbg !8762
  %1084 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8763, !tbaa !2289
  %m_declElementType1278 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1084, i32 0, i32 61, !dbg !8764
  store %struct.ELEMENT_TYPE* %call1277, %struct.ELEMENT_TYPE** %m_declElementType1278, align 8, !dbg !8765, !tbaa !2955
  %1085 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8766, !tbaa !2289
  %m_declElementType1279 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1085, i32 0, i32 61, !dbg !8768
  %1086 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %m_declElementType1279, align 8, !dbg !8768, !tbaa !2955
  %tobool1280 = icmp ne %struct.ELEMENT_TYPE* %1086, null, !dbg !8769
  br i1 %tobool1280, label %if.end.1282, label %if.then.1281, !dbg !8770

if.then.1281:                                     ; preds = %if.then.1276
  store i32 1, i32* %retval, !dbg !8771
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1492, !dbg !8771

if.end.1282:                                      ; preds = %if.then.1276
  %1087 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8772, !tbaa !2289
  %scaffLevel1283 = getelementptr inbounds %struct.DTD, %struct.DTD* %1087, i32 0, i32 17, !dbg !8773
  store i32 0, i32* %scaffLevel1283, align 4, !dbg !8774, !tbaa !3163
  %1088 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8775, !tbaa !2289
  %scaffCount = getelementptr inbounds %struct.DTD, %struct.DTD* %1088, i32 0, i32 16, !dbg !8776
  store i32 0, i32* %scaffCount, align 4, !dbg !8777, !tbaa !3171
  %1089 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8778, !tbaa !2289
  %in_eldecl1284 = getelementptr inbounds %struct.DTD, %struct.DTD* %1089, i32 0, i32 12, !dbg !8779
  store i8 1, i8* %in_eldecl1284, align 1, !dbg !8780, !tbaa !3143
  store i8 0, i8* %handleDefault, align 1, !dbg !8781, !tbaa !2307
  br label %if.end.1285, !dbg !8782

if.end.1285:                                      ; preds = %if.end.1282, %sw.bb.1273
  br label %sw.epilog.1478, !dbg !8783

sw.bb.1286:                                       ; preds = %if.end.33, %if.end.33
  %1090 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8784, !tbaa !2289
  %in_eldecl1287 = getelementptr inbounds %struct.DTD, %struct.DTD* %1090, i32 0, i32 12, !dbg !8785
  %1091 = load i8, i8* %in_eldecl1287, align 1, !dbg !8785, !tbaa !3143
  %tobool1288 = icmp ne i8 %1091, 0, !dbg !8784
  br i1 %tobool1288, label %if.then.1289, label %if.end.1314, !dbg !8786

if.then.1289:                                     ; preds = %sw.bb.1286
  %1092 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8787, !tbaa !2289
  %m_elementDeclHandler1290 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1092, i32 0, i32 30, !dbg !8788
  %1093 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler1290, align 8, !dbg !8788, !tbaa !2919
  %tobool1291 = icmp ne void (i8*, i8*, %struct.XML_cp*)* %1093, null, !dbg !8789
  br i1 %tobool1291, label %if.then.1292, label %if.end.1312, !dbg !8790

if.then.1292:                                     ; preds = %if.then.1289
  %1094 = bitcast %struct.XML_cp** %content to i8*, !dbg !8791
  call void @llvm.lifetime.start(i64 8, i8* %1094) #2, !dbg !8791
  call void @llvm.dbg.declare(metadata %struct.XML_cp** %content, metadata !1290, metadata !2293), !dbg !8792
  %1095 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8793, !tbaa !2289
  %m_mem1293 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1095, i32 0, i32 3, !dbg !8794
  %malloc_fcn1294 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem1293, i32 0, i32 0, !dbg !8795
  %1096 = load i8* (i64)*, i8* (i64)** %malloc_fcn1294, align 8, !dbg !8795, !tbaa !2416
  %call1295 = call i8* %1096(i64 32), !dbg !8793
  %1097 = bitcast i8* %call1295 to %struct.XML_cp*, !dbg !8796
  store %struct.XML_cp* %1097, %struct.XML_cp** %content, align 8, !dbg !8792, !tbaa !2289
  %1098 = load %struct.XML_cp*, %struct.XML_cp** %content, align 8, !dbg !8797, !tbaa !2289
  %tobool1296 = icmp ne %struct.XML_cp* %1098, null, !dbg !8797
  br i1 %tobool1296, label %if.end.1298, label %if.then.1297, !dbg !8799

if.then.1297:                                     ; preds = %if.then.1292
  store i32 1, i32* %retval, !dbg !8800
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1309, !dbg !8800

if.end.1298:                                      ; preds = %if.then.1292
  %1099 = load %struct.XML_cp*, %struct.XML_cp** %content, align 8, !dbg !8801, !tbaa !2289
  %quant1299 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %1099, i32 0, i32 1, !dbg !8802
  store i32 0, i32* %quant1299, align 4, !dbg !8803, !tbaa !8804
  %1100 = load %struct.XML_cp*, %struct.XML_cp** %content, align 8, !dbg !8806, !tbaa !2289
  %name1300 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %1100, i32 0, i32 2, !dbg !8807
  store i8* null, i8** %name1300, align 8, !dbg !8808, !tbaa !8809
  %1101 = load %struct.XML_cp*, %struct.XML_cp** %content, align 8, !dbg !8810, !tbaa !2289
  %numchildren = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %1101, i32 0, i32 3, !dbg !8811
  store i32 0, i32* %numchildren, align 4, !dbg !8812, !tbaa !8813
  %1102 = load %struct.XML_cp*, %struct.XML_cp** %content, align 8, !dbg !8814, !tbaa !2289
  %children = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %1102, i32 0, i32 4, !dbg !8815
  store %struct.XML_cp* null, %struct.XML_cp** %children, align 8, !dbg !8816, !tbaa !8817
  %1103 = load i32, i32* %role, align 4, !dbg !8818, !tbaa !3391
  %cmp1301 = icmp eq i32 %1103, 41, !dbg !8819
  %cond1303 = select i1 %cmp1301, i32 2, i32 1, !dbg !8820
  %1104 = load %struct.XML_cp*, %struct.XML_cp** %content, align 8, !dbg !8821, !tbaa !2289
  %type1304 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %1104, i32 0, i32 0, !dbg !8822
  store i32 %cond1303, i32* %type1304, align 4, !dbg !8823, !tbaa !8824
  %1105 = load i8*, i8** %s.addr, align 8, !dbg !8825, !tbaa !2289
  %1106 = load i8**, i8*** %eventEndPP, align 8, !dbg !8826, !tbaa !2289
  store i8* %1105, i8** %1106, align 8, !dbg !8827, !tbaa !2289
  %1107 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8828, !tbaa !2289
  %m_elementDeclHandler1305 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1107, i32 0, i32 30, !dbg !8829
  %1108 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler1305, align 8, !dbg !8829, !tbaa !2919
  %1109 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8830, !tbaa !2289
  %m_handlerArg1306 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1109, i32 0, i32 1, !dbg !8831
  %1110 = load i8*, i8** %m_handlerArg1306, align 8, !dbg !8831, !tbaa !2842
  %1111 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8832, !tbaa !2289
  %m_declElementType1307 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1111, i32 0, i32 61, !dbg !8833
  %1112 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %m_declElementType1307, align 8, !dbg !8833, !tbaa !2955
  %name1308 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %1112, i32 0, i32 0, !dbg !8834
  %1113 = load i8*, i8** %name1308, align 8, !dbg !8834, !tbaa !3789
  %1114 = load %struct.XML_cp*, %struct.XML_cp** %content, align 8, !dbg !8835, !tbaa !2289
  call void %1108(i8* %1110, i8* %1113, %struct.XML_cp* %1114), !dbg !8836
  store i8 0, i8* %handleDefault, align 1, !dbg !8837, !tbaa !2307
  store i32 0, i32* %cleanup.dest.slot, !dbg !8838
  br label %cleanup.1309, !dbg !8838

cleanup.1309:                                     ; preds = %if.end.1298, %if.then.1297
  %1115 = bitcast %struct.XML_cp** %content to i8*, !dbg !8839
  call void @llvm.lifetime.end(i64 8, i8* %1115) #2, !dbg !8839
  %cleanup.dest.1310 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.1310, label %cleanup.1492 [
    i32 0, label %cleanup.cont.1311
  ]

cleanup.cont.1311:                                ; preds = %cleanup.1309
  br label %if.end.1312, !dbg !8841

if.end.1312:                                      ; preds = %cleanup.cont.1311, %if.then.1289
  %1116 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8842, !tbaa !2289
  %in_eldecl1313 = getelementptr inbounds %struct.DTD, %struct.DTD* %1116, i32 0, i32 12, !dbg !8843
  store i8 0, i8* %in_eldecl1313, align 1, !dbg !8844, !tbaa !3143
  br label %if.end.1314, !dbg !8845

if.end.1314:                                      ; preds = %if.end.1312, %sw.bb.1286
  br label %sw.epilog.1478, !dbg !8846

sw.bb.1315:                                       ; preds = %if.end.33
  %1117 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8847, !tbaa !2289
  %in_eldecl1316 = getelementptr inbounds %struct.DTD, %struct.DTD* %1117, i32 0, i32 12, !dbg !8849
  %1118 = load i8, i8* %in_eldecl1316, align 1, !dbg !8849, !tbaa !3143
  %tobool1317 = icmp ne i8 %1118, 0, !dbg !8847
  br i1 %tobool1317, label %if.then.1318, label %if.end.1332, !dbg !8850

if.then.1318:                                     ; preds = %sw.bb.1315
  %1119 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8851, !tbaa !2289
  %scaffLevel1319 = getelementptr inbounds %struct.DTD, %struct.DTD* %1119, i32 0, i32 17, !dbg !8853
  %1120 = load i32, i32* %scaffLevel1319, align 4, !dbg !8853, !tbaa !3163
  %sub1320 = sub i32 %1120, 1, !dbg !8854
  %idxprom1321 = sext i32 %sub1320 to i64, !dbg !8855
  %1121 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8855, !tbaa !2289
  %scaffIndex1322 = getelementptr inbounds %struct.DTD, %struct.DTD* %1121, i32 0, i32 18, !dbg !8856
  %1122 = load i32*, i32** %scaffIndex1322, align 8, !dbg !8856, !tbaa !3148
  %arrayidx1323 = getelementptr i32, i32* %1122, i64 %idxprom1321, !dbg !8855
  %1123 = load i32, i32* %arrayidx1323, align 4, !dbg !8855, !tbaa !3391
  %idxprom1324 = sext i32 %1123 to i64, !dbg !8857
  %1124 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8857, !tbaa !2289
  %scaffold1325 = getelementptr inbounds %struct.DTD, %struct.DTD* %1124, i32 0, i32 13, !dbg !8858
  %1125 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold1325, align 8, !dbg !8858, !tbaa !3156
  %arrayidx1326 = getelementptr %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %1125, i64 %idxprom1324, !dbg !8857
  %type1327 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx1326, i32 0, i32 0, !dbg !8859
  store i32 3, i32* %type1327, align 4, !dbg !8860, !tbaa !8449
  %1126 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8861, !tbaa !2289
  %m_elementDeclHandler1328 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1126, i32 0, i32 30, !dbg !8863
  %1127 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler1328, align 8, !dbg !8863, !tbaa !2919
  %tobool1329 = icmp ne void (i8*, i8*, %struct.XML_cp*)* %1127, null, !dbg !8864
  br i1 %tobool1329, label %if.then.1330, label %if.end.1331, !dbg !8865

if.then.1330:                                     ; preds = %if.then.1318
  store i8 0, i8* %handleDefault, align 1, !dbg !8866, !tbaa !2307
  br label %if.end.1331, !dbg !8867

if.end.1331:                                      ; preds = %if.then.1330, %if.then.1318
  br label %if.end.1332, !dbg !8868

if.end.1332:                                      ; preds = %if.end.1331, %sw.bb.1315
  br label %sw.epilog.1478, !dbg !8869

sw.bb.1333:                                       ; preds = %if.end.33
  store i32 0, i32* %quant, align 4, !dbg !8870, !tbaa !2307
  br label %elementContent, !dbg !8871

sw.bb.1334:                                       ; preds = %if.end.33
  store i32 1, i32* %quant, align 4, !dbg !8872, !tbaa !2307
  br label %elementContent, !dbg !8873

sw.bb.1335:                                       ; preds = %if.end.33
  store i32 2, i32* %quant, align 4, !dbg !8874, !tbaa !2307
  br label %elementContent, !dbg !8875

sw.bb.1336:                                       ; preds = %if.end.33
  store i32 3, i32* %quant, align 4, !dbg !8876, !tbaa !2307
  br label %elementContent, !dbg !8877

elementContent:                                   ; preds = %sw.bb.1336, %sw.bb.1335, %sw.bb.1334, %sw.bb.1333
  %1128 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8878, !tbaa !2289
  %in_eldecl1337 = getelementptr inbounds %struct.DTD, %struct.DTD* %1128, i32 0, i32 12, !dbg !8879
  %1129 = load i8, i8* %in_eldecl1337, align 1, !dbg !8879, !tbaa !3143
  %tobool1338 = icmp ne i8 %1129, 0, !dbg !8878
  br i1 %tobool1338, label %if.then.1339, label %if.end.1389, !dbg !8880

if.then.1339:                                     ; preds = %elementContent
  %1130 = bitcast %struct.ELEMENT_TYPE** %el to i8*, !dbg !8881
  call void @llvm.lifetime.start(i64 8, i8* %1130) #2, !dbg !8881
  call void @llvm.dbg.declare(metadata %struct.ELEMENT_TYPE** %el, metadata !1295, metadata !2293), !dbg !8882
  %1131 = bitcast i8** %name1340 to i8*, !dbg !8883
  call void @llvm.lifetime.start(i64 8, i8* %1131) #2, !dbg !8883
  call void @llvm.dbg.declare(metadata i8** %name1340, metadata !1298, metadata !2293), !dbg !8884
  %1132 = bitcast i32* %nameLen to i8*, !dbg !8885
  call void @llvm.lifetime.start(i64 4, i8* %1132) #2, !dbg !8885
  call void @llvm.dbg.declare(metadata i32* %nameLen, metadata !1299, metadata !2293), !dbg !8886
  %1133 = bitcast i8** %nxt to i8*, !dbg !8887
  call void @llvm.lifetime.start(i64 8, i8* %1133) #2, !dbg !8887
  call void @llvm.dbg.declare(metadata i8** %nxt, metadata !1300, metadata !2293), !dbg !8888
  %1134 = load i32, i32* %quant, align 4, !dbg !8889, !tbaa !2307
  %cmp1341 = icmp eq i32 %1134, 0, !dbg !8890
  br i1 %cmp1341, label %cond.true.1343, label %cond.false.1344, !dbg !8889

cond.true.1343:                                   ; preds = %if.then.1339
  %1135 = load i8*, i8** %next.addr, align 8, !dbg !8891, !tbaa !2289
  br label %cond.end, !dbg !8889

cond.false.1344:                                  ; preds = %if.then.1339
  %1136 = load i8*, i8** %next.addr, align 8, !dbg !8892, !tbaa !2289
  %1137 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8893, !tbaa !2289
  %minBytesPerChar1345 = getelementptr inbounds %struct.encoding, %struct.encoding* %1137, i32 0, i32 13, !dbg !8894
  %1138 = load i32, i32* %minBytesPerChar1345, align 4, !dbg !8894, !tbaa !6758
  %idx.ext1346 = sext i32 %1138 to i64, !dbg !8895
  %idx.neg1347 = sub i64 0, %idx.ext1346, !dbg !8895
  %add.ptr1348 = getelementptr i8, i8* %1136, i64 %idx.neg1347, !dbg !8895
  br label %cond.end, !dbg !8889

cond.end:                                         ; preds = %cond.false.1344, %cond.true.1343
  %cond1349 = phi i8* [ %1135, %cond.true.1343 ], [ %add.ptr1348, %cond.false.1344 ], !dbg !8889
  store i8* %cond1349, i8** %nxt, align 8, !dbg !8896, !tbaa !2289
  %1139 = bitcast i32* %myindex1350 to i8*, !dbg !8899
  call void @llvm.lifetime.start(i64 4, i8* %1139) #2, !dbg !8899
  call void @llvm.dbg.declare(metadata i32* %myindex1350, metadata !1301, metadata !2293), !dbg !8900
  %1140 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8901, !tbaa !2289
  %call1351 = call i32 @nextScaffoldPart(%struct.XML_ParserStruct* %1140), !dbg !8902
  store i32 %call1351, i32* %myindex1350, align 4, !dbg !8900, !tbaa !3391
  %1141 = load i32, i32* %myindex1350, align 4, !dbg !8903, !tbaa !3391
  %cmp1352 = icmp slt i32 %1141, 0, !dbg !8905
  br i1 %cmp1352, label %if.then.1354, label %if.end.1355, !dbg !8906

if.then.1354:                                     ; preds = %cond.end
  store i32 1, i32* %retval, !dbg !8907
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1382, !dbg !8907

if.end.1355:                                      ; preds = %cond.end
  %1142 = load i32, i32* %myindex1350, align 4, !dbg !8908, !tbaa !3391
  %idxprom1356 = sext i32 %1142 to i64, !dbg !8909
  %1143 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8909, !tbaa !2289
  %scaffold1357 = getelementptr inbounds %struct.DTD, %struct.DTD* %1143, i32 0, i32 13, !dbg !8910
  %1144 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold1357, align 8, !dbg !8910, !tbaa !3156
  %arrayidx1358 = getelementptr %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %1144, i64 %idxprom1356, !dbg !8909
  %type1359 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx1358, i32 0, i32 0, !dbg !8911
  store i32 4, i32* %type1359, align 4, !dbg !8912, !tbaa !8449
  %1145 = load i32, i32* %quant, align 4, !dbg !8913, !tbaa !2307
  %1146 = load i32, i32* %myindex1350, align 4, !dbg !8914, !tbaa !3391
  %idxprom1360 = sext i32 %1146 to i64, !dbg !8915
  %1147 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8915, !tbaa !2289
  %scaffold1361 = getelementptr inbounds %struct.DTD, %struct.DTD* %1147, i32 0, i32 13, !dbg !8916
  %1148 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold1361, align 8, !dbg !8916, !tbaa !3156
  %arrayidx1362 = getelementptr %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %1148, i64 %idxprom1360, !dbg !8915
  %quant1363 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx1362, i32 0, i32 1, !dbg !8917
  store i32 %1145, i32* %quant1363, align 4, !dbg !8918, !tbaa !8919
  %1149 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8920, !tbaa !2289
  %1150 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8921, !tbaa !2289
  %1151 = load i8*, i8** %s.addr, align 8, !dbg !8922, !tbaa !2289
  %1152 = load i8*, i8** %nxt, align 8, !dbg !8923, !tbaa !2289
  %call1364 = call %struct.ELEMENT_TYPE* @getElementType(%struct.XML_ParserStruct* %1149, %struct.encoding* %1150, i8* %1151, i8* %1152), !dbg !8924
  store %struct.ELEMENT_TYPE* %call1364, %struct.ELEMENT_TYPE** %el, align 8, !dbg !8925, !tbaa !2289
  %1153 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %el, align 8, !dbg !8926, !tbaa !2289
  %tobool1365 = icmp ne %struct.ELEMENT_TYPE* %1153, null, !dbg !8926
  br i1 %tobool1365, label %if.end.1367, label %if.then.1366, !dbg !8928

if.then.1366:                                     ; preds = %if.end.1355
  store i32 1, i32* %retval, !dbg !8929
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1382, !dbg !8929

if.end.1367:                                      ; preds = %if.end.1355
  %1154 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %el, align 8, !dbg !8930, !tbaa !2289
  %name1368 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %1154, i32 0, i32 0, !dbg !8931
  %1155 = load i8*, i8** %name1368, align 8, !dbg !8931, !tbaa !3789
  store i8* %1155, i8** %name1340, align 8, !dbg !8932, !tbaa !2289
  %1156 = load i8*, i8** %name1340, align 8, !dbg !8933, !tbaa !2289
  %1157 = load i32, i32* %myindex1350, align 4, !dbg !8934, !tbaa !3391
  %idxprom1369 = sext i32 %1157 to i64, !dbg !8935
  %1158 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8935, !tbaa !2289
  %scaffold1370 = getelementptr inbounds %struct.DTD, %struct.DTD* %1158, i32 0, i32 13, !dbg !8936
  %1159 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold1370, align 8, !dbg !8936, !tbaa !3156
  %arrayidx1371 = getelementptr %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %1159, i64 %idxprom1369, !dbg !8935
  %name1372 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx1371, i32 0, i32 2, !dbg !8937
  store i8* %1156, i8** %name1372, align 8, !dbg !8938, !tbaa !8939
  store i32 0, i32* %nameLen, align 4, !dbg !8940, !tbaa !3391
  br label %for.cond.1373, !dbg !8941

for.cond.1373:                                    ; preds = %for.body, %if.end.1367
  %1160 = load i32, i32* %nameLen, align 4, !dbg !8942, !tbaa !3391
  %inc1374 = add i32 %1160, 1, !dbg !8942
  store i32 %inc1374, i32* %nameLen, align 4, !dbg !8942, !tbaa !3391
  %idxprom1375 = sext i32 %1160 to i64, !dbg !8947
  %1161 = load i8*, i8** %name1340, align 8, !dbg !8947, !tbaa !2289
  %arrayidx1376 = getelementptr i8, i8* %1161, i64 %idxprom1375, !dbg !8947
  %1162 = load i8, i8* %arrayidx1376, align 1, !dbg !8947, !tbaa !2307
  %tobool1377 = icmp ne i8 %1162, 0, !dbg !8948
  br i1 %tobool1377, label %for.body, label %for.end, !dbg !8948

for.body:                                         ; preds = %for.cond.1373
  br label %for.cond.1373, !dbg !8949

for.end:                                          ; preds = %for.cond.1373
  %1163 = load i32, i32* %nameLen, align 4, !dbg !8951, !tbaa !3391
  %1164 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8952, !tbaa !2289
  %contentStringLen = getelementptr inbounds %struct.DTD, %struct.DTD* %1164, i32 0, i32 14, !dbg !8953
  %1165 = load i32, i32* %contentStringLen, align 4, !dbg !8954, !tbaa !3175
  %add = add i32 %1165, %1163, !dbg !8954
  store i32 %add, i32* %contentStringLen, align 4, !dbg !8954, !tbaa !3175
  %1166 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8955, !tbaa !2289
  %m_elementDeclHandler1378 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1166, i32 0, i32 30, !dbg !8957
  %1167 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler1378, align 8, !dbg !8957, !tbaa !2919
  %tobool1379 = icmp ne void (i8*, i8*, %struct.XML_cp*)* %1167, null, !dbg !8958
  br i1 %tobool1379, label %if.then.1380, label %if.end.1381, !dbg !8959

if.then.1380:                                     ; preds = %for.end
  store i8 0, i8* %handleDefault, align 1, !dbg !8960, !tbaa !2307
  br label %if.end.1381, !dbg !8961

if.end.1381:                                      ; preds = %if.then.1380, %for.end
  store i32 0, i32* %cleanup.dest.slot, !dbg !8962
  br label %cleanup.1382, !dbg !8962

cleanup.1382:                                     ; preds = %if.end.1381, %if.then.1366, %if.then.1354
  %1168 = bitcast i32* %myindex1350 to i8*, !dbg !8963
  call void @llvm.lifetime.end(i64 4, i8* %1168) #2, !dbg !8963
  %1169 = bitcast i8** %nxt to i8*, !dbg !8963
  call void @llvm.lifetime.end(i64 8, i8* %1169) #2, !dbg !8963
  %1170 = bitcast i32* %nameLen to i8*, !dbg !8963
  call void @llvm.lifetime.end(i64 4, i8* %1170) #2, !dbg !8963
  %1171 = bitcast i8** %name1340 to i8*, !dbg !8963
  call void @llvm.lifetime.end(i64 8, i8* %1171) #2, !dbg !8963
  %1172 = bitcast %struct.ELEMENT_TYPE** %el to i8*, !dbg !8963
  call void @llvm.lifetime.end(i64 8, i8* %1172) #2, !dbg !8963
  %cleanup.dest.1387 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.1387, label %cleanup.1492 [
    i32 0, label %cleanup.cont.1388
  ]

cleanup.cont.1388:                                ; preds = %cleanup.1382
  br label %if.end.1389, !dbg !8965

if.end.1389:                                      ; preds = %cleanup.cont.1388, %elementContent
  br label %sw.epilog.1478, !dbg !8966

sw.bb.1390:                                       ; preds = %if.end.33
  store i32 0, i32* %quant, align 4, !dbg !8967, !tbaa !2307
  br label %closeGroup, !dbg !8968

sw.bb.1391:                                       ; preds = %if.end.33
  store i32 1, i32* %quant, align 4, !dbg !8969, !tbaa !2307
  br label %closeGroup, !dbg !8970

sw.bb.1392:                                       ; preds = %if.end.33
  store i32 2, i32* %quant, align 4, !dbg !8971, !tbaa !2307
  br label %closeGroup, !dbg !8972

sw.bb.1393:                                       ; preds = %if.end.33
  store i32 3, i32* %quant, align 4, !dbg !8973, !tbaa !2307
  br label %closeGroup, !dbg !8974

closeGroup:                                       ; preds = %sw.bb.1393, %sw.bb.1392, %sw.bb.1391, %sw.bb.1390
  %1173 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8975, !tbaa !2289
  %in_eldecl1394 = getelementptr inbounds %struct.DTD, %struct.DTD* %1173, i32 0, i32 12, !dbg !8976
  %1174 = load i8, i8* %in_eldecl1394, align 1, !dbg !8976, !tbaa !3143
  %tobool1395 = icmp ne i8 %1174, 0, !dbg !8975
  br i1 %tobool1395, label %if.then.1396, label %if.end.1431, !dbg !8977

if.then.1396:                                     ; preds = %closeGroup
  %1175 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8978, !tbaa !2289
  %m_elementDeclHandler1397 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1175, i32 0, i32 30, !dbg !8980
  %1176 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler1397, align 8, !dbg !8980, !tbaa !2919
  %tobool1398 = icmp ne void (i8*, i8*, %struct.XML_cp*)* %1176, null, !dbg !8981
  br i1 %tobool1398, label %if.then.1399, label %if.end.1400, !dbg !8982

if.then.1399:                                     ; preds = %if.then.1396
  store i8 0, i8* %handleDefault, align 1, !dbg !8983, !tbaa !2307
  br label %if.end.1400, !dbg !8984

if.end.1400:                                      ; preds = %if.then.1399, %if.then.1396
  %1177 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8985, !tbaa !2289
  %scaffLevel1401 = getelementptr inbounds %struct.DTD, %struct.DTD* %1177, i32 0, i32 17, !dbg !8986
  %1178 = load i32, i32* %scaffLevel1401, align 4, !dbg !8987, !tbaa !3163
  %dec = add i32 %1178, -1, !dbg !8987
  store i32 %dec, i32* %scaffLevel1401, align 4, !dbg !8987, !tbaa !3163
  %1179 = load i32, i32* %quant, align 4, !dbg !8988, !tbaa !2307
  %1180 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8989, !tbaa !2289
  %scaffLevel1402 = getelementptr inbounds %struct.DTD, %struct.DTD* %1180, i32 0, i32 17, !dbg !8990
  %1181 = load i32, i32* %scaffLevel1402, align 4, !dbg !8990, !tbaa !3163
  %idxprom1403 = sext i32 %1181 to i64, !dbg !8991
  %1182 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8991, !tbaa !2289
  %scaffIndex1404 = getelementptr inbounds %struct.DTD, %struct.DTD* %1182, i32 0, i32 18, !dbg !8992
  %1183 = load i32*, i32** %scaffIndex1404, align 8, !dbg !8992, !tbaa !3148
  %arrayidx1405 = getelementptr i32, i32* %1183, i64 %idxprom1403, !dbg !8991
  %1184 = load i32, i32* %arrayidx1405, align 4, !dbg !8991, !tbaa !3391
  %idxprom1406 = sext i32 %1184 to i64, !dbg !8993
  %1185 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8993, !tbaa !2289
  %scaffold1407 = getelementptr inbounds %struct.DTD, %struct.DTD* %1185, i32 0, i32 13, !dbg !8994
  %1186 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold1407, align 8, !dbg !8994, !tbaa !3156
  %arrayidx1408 = getelementptr %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %1186, i64 %idxprom1406, !dbg !8993
  %quant1409 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx1408, i32 0, i32 1, !dbg !8995
  store i32 %1179, i32* %quant1409, align 4, !dbg !8996, !tbaa !8919
  %1187 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8997, !tbaa !2289
  %scaffLevel1410 = getelementptr inbounds %struct.DTD, %struct.DTD* %1187, i32 0, i32 17, !dbg !8998
  %1188 = load i32, i32* %scaffLevel1410, align 4, !dbg !8998, !tbaa !3163
  %cmp1411 = icmp eq i32 %1188, 0, !dbg !8999
  br i1 %cmp1411, label %if.then.1413, label %if.end.1430, !dbg !9000

if.then.1413:                                     ; preds = %if.end.1400
  %1189 = load i8, i8* %handleDefault, align 1, !dbg !9001, !tbaa !2307
  %tobool1414 = icmp ne i8 %1189, 0, !dbg !9001
  br i1 %tobool1414, label %if.end.1427, label %if.then.1415, !dbg !9002

if.then.1415:                                     ; preds = %if.then.1413
  %1190 = bitcast %struct.XML_cp** %model to i8*, !dbg !9003
  call void @llvm.lifetime.start(i64 8, i8* %1190) #2, !dbg !9003
  call void @llvm.dbg.declare(metadata %struct.XML_cp** %model, metadata !1302, metadata !2293), !dbg !9004
  %1191 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9005, !tbaa !2289
  %call1416 = call %struct.XML_cp* @build_model(%struct.XML_ParserStruct* %1191), !dbg !9006
  store %struct.XML_cp* %call1416, %struct.XML_cp** %model, align 8, !dbg !9004, !tbaa !2289
  %1192 = load %struct.XML_cp*, %struct.XML_cp** %model, align 8, !dbg !9007, !tbaa !2289
  %tobool1417 = icmp ne %struct.XML_cp* %1192, null, !dbg !9007
  br i1 %tobool1417, label %if.end.1419, label %if.then.1418, !dbg !9009

if.then.1418:                                     ; preds = %if.then.1415
  store i32 1, i32* %retval, !dbg !9010
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1424, !dbg !9010

if.end.1419:                                      ; preds = %if.then.1415
  %1193 = load i8*, i8** %s.addr, align 8, !dbg !9011, !tbaa !2289
  %1194 = load i8**, i8*** %eventEndPP, align 8, !dbg !9012, !tbaa !2289
  store i8* %1193, i8** %1194, align 8, !dbg !9013, !tbaa !2289
  %1195 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9014, !tbaa !2289
  %m_elementDeclHandler1420 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1195, i32 0, i32 30, !dbg !9015
  %1196 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler1420, align 8, !dbg !9015, !tbaa !2919
  %1197 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9016, !tbaa !2289
  %m_handlerArg1421 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1197, i32 0, i32 1, !dbg !9017
  %1198 = load i8*, i8** %m_handlerArg1421, align 8, !dbg !9017, !tbaa !2842
  %1199 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9018, !tbaa !2289
  %m_declElementType1422 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1199, i32 0, i32 61, !dbg !9019
  %1200 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %m_declElementType1422, align 8, !dbg !9019, !tbaa !2955
  %name1423 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %1200, i32 0, i32 0, !dbg !9020
  %1201 = load i8*, i8** %name1423, align 8, !dbg !9020, !tbaa !3789
  %1202 = load %struct.XML_cp*, %struct.XML_cp** %model, align 8, !dbg !9021, !tbaa !2289
  call void %1196(i8* %1198, i8* %1201, %struct.XML_cp* %1202), !dbg !9022
  store i32 0, i32* %cleanup.dest.slot, !dbg !9023
  br label %cleanup.1424, !dbg !9023

cleanup.1424:                                     ; preds = %if.end.1419, %if.then.1418
  %1203 = bitcast %struct.XML_cp** %model to i8*, !dbg !9024
  call void @llvm.lifetime.end(i64 8, i8* %1203) #2, !dbg !9024
  %cleanup.dest.1425 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.1425, label %cleanup.1492 [
    i32 0, label %cleanup.cont.1426
  ]

cleanup.cont.1426:                                ; preds = %cleanup.1424
  br label %if.end.1427, !dbg !9026

if.end.1427:                                      ; preds = %cleanup.cont.1426, %if.then.1413
  %1204 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !9027, !tbaa !2289
  %in_eldecl1428 = getelementptr inbounds %struct.DTD, %struct.DTD* %1204, i32 0, i32 12, !dbg !9028
  store i8 0, i8* %in_eldecl1428, align 1, !dbg !9029, !tbaa !3143
  %1205 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !9030, !tbaa !2289
  %contentStringLen1429 = getelementptr inbounds %struct.DTD, %struct.DTD* %1205, i32 0, i32 14, !dbg !9031
  store i32 0, i32* %contentStringLen1429, align 4, !dbg !9032, !tbaa !3175
  br label %if.end.1430, !dbg !9033

if.end.1430:                                      ; preds = %if.end.1427, %if.end.1400
  br label %if.end.1431, !dbg !9034

if.end.1431:                                      ; preds = %if.end.1430, %closeGroup
  br label %sw.epilog.1478, !dbg !9035

sw.bb.1432:                                       ; preds = %if.end.33
  %1206 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9036, !tbaa !2289
  %1207 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !9038, !tbaa !2289
  %1208 = load i8*, i8** %s.addr, align 8, !dbg !9039, !tbaa !2289
  %1209 = load i8*, i8** %next.addr, align 8, !dbg !9040, !tbaa !2289
  %call1433 = call i32 @reportProcessingInstruction(%struct.XML_ParserStruct* %1206, %struct.encoding* %1207, i8* %1208, i8* %1209), !dbg !9041
  %tobool1434 = icmp ne i32 %call1433, 0, !dbg !9041
  br i1 %tobool1434, label %if.end.1436, label %if.then.1435, !dbg !9042

if.then.1435:                                     ; preds = %sw.bb.1432
  store i32 1, i32* %retval, !dbg !9043
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1492, !dbg !9043

if.end.1436:                                      ; preds = %sw.bb.1432
  store i8 0, i8* %handleDefault, align 1, !dbg !9044, !tbaa !2307
  br label %sw.epilog.1478, !dbg !9045

sw.bb.1437:                                       ; preds = %if.end.33
  %1210 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9046, !tbaa !2289
  %1211 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !9048, !tbaa !2289
  %1212 = load i8*, i8** %s.addr, align 8, !dbg !9049, !tbaa !2289
  %1213 = load i8*, i8** %next.addr, align 8, !dbg !9050, !tbaa !2289
  %call1438 = call i32 @reportComment(%struct.XML_ParserStruct* %1210, %struct.encoding* %1211, i8* %1212, i8* %1213), !dbg !9051
  %tobool1439 = icmp ne i32 %call1438, 0, !dbg !9051
  br i1 %tobool1439, label %if.end.1441, label %if.then.1440, !dbg !9052

if.then.1440:                                     ; preds = %sw.bb.1437
  store i32 1, i32* %retval, !dbg !9053
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1492, !dbg !9053

if.end.1441:                                      ; preds = %sw.bb.1437
  store i8 0, i8* %handleDefault, align 1, !dbg !9054, !tbaa !2307
  br label %sw.epilog.1478, !dbg !9055

sw.bb.1442:                                       ; preds = %if.end.33
  %1214 = load i32, i32* %tok.addr, align 4, !dbg !9056, !tbaa !3391
  switch i32 %1214, label %sw.epilog.1444 [
    i32 14, label %sw.bb.1443
  ], !dbg !9057

sw.bb.1443:                                       ; preds = %sw.bb.1442
  store i8 0, i8* %handleDefault, align 1, !dbg !9058, !tbaa !2307
  br label %sw.epilog.1444, !dbg !9060

sw.epilog.1444:                                   ; preds = %sw.bb.1442, %sw.bb.1443
  br label %sw.epilog.1478, !dbg !9061

sw.bb.1445:                                       ; preds = %if.end.33
  %1215 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9062, !tbaa !2289
  %m_startDoctypeDeclHandler1446 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1215, i32 0, i32 19, !dbg !9064
  %1216 = load void (i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i32)** %m_startDoctypeDeclHandler1446, align 8, !dbg !9064, !tbaa !2878
  %tobool1447 = icmp ne void (i8*, i8*, i8*, i8*, i32)* %1216, null, !dbg !9065
  br i1 %tobool1447, label %if.then.1448, label %if.end.1449, !dbg !9066

if.then.1448:                                     ; preds = %sw.bb.1445
  store i8 0, i8* %handleDefault, align 1, !dbg !9067, !tbaa !2307
  br label %if.end.1449, !dbg !9068

if.end.1449:                                      ; preds = %if.then.1448, %sw.bb.1445
  br label %sw.epilog.1478, !dbg !9069

sw.bb.1450:                                       ; preds = %if.end.33
  %1217 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !9070, !tbaa !2289
  %keepProcessing1451 = getelementptr inbounds %struct.DTD, %struct.DTD* %1217, i32 0, i32 6, !dbg !9072
  %1218 = load i8, i8* %keepProcessing1451, align 1, !dbg !9072, !tbaa !3179
  %conv1452 = zext i8 %1218 to i32, !dbg !9070
  %tobool1453 = icmp ne i32 %conv1452, 0, !dbg !9070
  br i1 %tobool1453, label %land.lhs.true.1454, label %if.end.1458, !dbg !9073

land.lhs.true.1454:                               ; preds = %sw.bb.1450
  %1219 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9074, !tbaa !2289
  %m_entityDeclHandler1455 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1219, i32 0, i32 32, !dbg !9076
  %1220 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler1455, align 8, !dbg !9076, !tbaa !2927
  %tobool1456 = icmp ne void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %1220, null, !dbg !9077
  br i1 %tobool1456, label %if.then.1457, label %if.end.1458, !dbg !9078

if.then.1457:                                     ; preds = %land.lhs.true.1454
  store i8 0, i8* %handleDefault, align 1, !dbg !9079, !tbaa !2307
  br label %if.end.1458, !dbg !9080

if.end.1458:                                      ; preds = %if.then.1457, %land.lhs.true.1454, %sw.bb.1450
  br label %sw.epilog.1478, !dbg !9081

sw.bb.1459:                                       ; preds = %if.end.33
  %1221 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9082, !tbaa !2289
  %m_notationDeclHandler1460 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1221, i32 0, i32 22, !dbg !9084
  %1222 = load void (i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*)** %m_notationDeclHandler1460, align 8, !dbg !9084, !tbaa !2890
  %tobool1461 = icmp ne void (i8*, i8*, i8*, i8*, i8*)* %1222, null, !dbg !9085
  br i1 %tobool1461, label %if.then.1462, label %if.end.1463, !dbg !9086

if.then.1462:                                     ; preds = %sw.bb.1459
  store i8 0, i8* %handleDefault, align 1, !dbg !9087, !tbaa !2307
  br label %if.end.1463, !dbg !9088

if.end.1463:                                      ; preds = %if.then.1462, %sw.bb.1459
  br label %sw.epilog.1478, !dbg !9089

sw.bb.1464:                                       ; preds = %if.end.33
  %1223 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !9090, !tbaa !2289
  %keepProcessing1465 = getelementptr inbounds %struct.DTD, %struct.DTD* %1223, i32 0, i32 6, !dbg !9092
  %1224 = load i8, i8* %keepProcessing1465, align 1, !dbg !9092, !tbaa !3179
  %conv1466 = zext i8 %1224 to i32, !dbg !9090
  %tobool1467 = icmp ne i32 %conv1466, 0, !dbg !9090
  br i1 %tobool1467, label %land.lhs.true.1468, label %if.end.1472, !dbg !9093

land.lhs.true.1468:                               ; preds = %sw.bb.1464
  %1225 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9094, !tbaa !2289
  %m_attlistDeclHandler1469 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1225, i32 0, i32 31, !dbg !9096
  %1226 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %m_attlistDeclHandler1469, align 8, !dbg !9096, !tbaa !2923
  %tobool1470 = icmp ne void (i8*, i8*, i8*, i8*, i8*, i32)* %1226, null, !dbg !9097
  br i1 %tobool1470, label %if.then.1471, label %if.end.1472, !dbg !9098

if.then.1471:                                     ; preds = %land.lhs.true.1468
  store i8 0, i8* %handleDefault, align 1, !dbg !9099, !tbaa !2307
  br label %if.end.1472, !dbg !9100

if.end.1472:                                      ; preds = %if.then.1471, %land.lhs.true.1468, %sw.bb.1464
  br label %sw.epilog.1478, !dbg !9101

sw.bb.1473:                                       ; preds = %if.end.33
  %1227 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9102, !tbaa !2289
  %m_elementDeclHandler1474 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1227, i32 0, i32 30, !dbg !9104
  %1228 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler1474, align 8, !dbg !9104, !tbaa !2919
  %tobool1475 = icmp ne void (i8*, i8*, %struct.XML_cp*)* %1228, null, !dbg !9105
  br i1 %tobool1475, label %if.then.1476, label %if.end.1477, !dbg !9106

if.then.1476:                                     ; preds = %sw.bb.1473
  store i8 0, i8* %handleDefault, align 1, !dbg !9107, !tbaa !2307
  br label %if.end.1477, !dbg !9108

if.end.1477:                                      ; preds = %if.then.1476, %sw.bb.1473
  br label %sw.epilog.1478, !dbg !9109

sw.epilog.1478:                                   ; preds = %if.end.33, %if.end.1477, %if.end.1472, %if.end.1463, %if.end.1458, %if.end.1449, %sw.epilog.1444, %if.end.1441, %if.end.1436, %if.end.1431, %if.end.1389, %if.end.1332, %if.end.1314, %if.end.1285, %if.end.1272, %cleanup.1256, %if.end.1140, %if.end.1092, %if.end.1068, %cleanup.cont.995, %if.end.972, %if.end.958, %if.end.929, %if.end.898, %if.end.883, %if.end.821, %if.then.765, %if.end.761, %if.end.708, %if.end.683, %if.end.591, %if.end.534, %if.end.424, %if.end.342, %if.end.310, %if.end.215, %if.end.141, %cleanup.cont.77, %if.end.66, %if.end.55, %cleanup.cont
  %1229 = load i8, i8* %handleDefault, align 1, !dbg !9110, !tbaa !2307
  %conv1479 = zext i8 %1229 to i32, !dbg !9110
  %tobool1480 = icmp ne i32 %conv1479, 0, !dbg !9110
  br i1 %tobool1480, label %land.lhs.true.1481, label %if.end.1485, !dbg !9112

land.lhs.true.1481:                               ; preds = %sw.epilog.1478
  %1230 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9113, !tbaa !2289
  %m_defaultHandler1482 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1230, i32 0, i32 18, !dbg !9115
  %1231 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler1482, align 8, !dbg !9115, !tbaa !2874
  %tobool1483 = icmp ne void (i8*, i8*, i32)* %1231, null, !dbg !9116
  br i1 %tobool1483, label %if.then.1484, label %if.end.1485, !dbg !9117

if.then.1484:                                     ; preds = %land.lhs.true.1481
  %1232 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9118, !tbaa !2289
  %1233 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !9119, !tbaa !2289
  %1234 = load i8*, i8** %s.addr, align 8, !dbg !9120, !tbaa !2289
  %1235 = load i8*, i8** %next.addr, align 8, !dbg !9121, !tbaa !2289
  call void @reportDefault(%struct.XML_ParserStruct* %1232, %struct.encoding* %1233, i8* %1234, i8* %1235), !dbg !9122
  br label %if.end.1485, !dbg !9122

if.end.1485:                                      ; preds = %if.then.1484, %land.lhs.true.1481, %sw.epilog.1478
  %1236 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9123, !tbaa !2289
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1236, i32 0, i32 85, !dbg !9124
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0, !dbg !9125
  %1237 = load i32, i32* %parsing, align 4, !dbg !9125, !tbaa !3052
  switch i32 %1237, label %sw.default.1488 [
    i32 3, label %sw.bb.1486
    i32 2, label %sw.bb.1487
  ], !dbg !9126

sw.bb.1486:                                       ; preds = %if.end.1485
  %1238 = load i8*, i8** %next.addr, align 8, !dbg !9127, !tbaa !2289
  %1239 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !9129, !tbaa !2289
  store i8* %1238, i8** %1239, align 8, !dbg !9130, !tbaa !2289
  store i32 0, i32* %retval, !dbg !9131
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1492, !dbg !9131

sw.bb.1487:                                       ; preds = %if.end.1485
  store i32 35, i32* %retval, !dbg !9132
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1492, !dbg !9132

sw.default.1488:                                  ; preds = %if.end.1485
  %1240 = load i8*, i8** %next.addr, align 8, !dbg !9133, !tbaa !2289
  store i8* %1240, i8** %s.addr, align 8, !dbg !9134, !tbaa !2289
  %1241 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !9135, !tbaa !2289
  %scanners = getelementptr inbounds %struct.encoding, %struct.encoding* %1241, i32 0, i32 0, !dbg !9136
  %arrayidx1489 = getelementptr [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners, i32 0, i64 0, !dbg !9137
  %1242 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx1489, align 8, !dbg !9137, !tbaa !2289
  %1243 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !9138, !tbaa !2289
  %1244 = load i8*, i8** %s.addr, align 8, !dbg !9139, !tbaa !2289
  %1245 = load i8*, i8** %end.addr, align 8, !dbg !9140, !tbaa !2289
  %call1490 = call i32 %1242(%struct.encoding* %1243, i8* %1244, i8* %1245, i8** %next.addr), !dbg !9141
  store i32 %call1490, i32* %tok.addr, align 4, !dbg !9142, !tbaa !3391
  br label %sw.epilog.1491, !dbg !9143

sw.epilog.1491:                                   ; preds = %sw.default.1488
  store i32 0, i32* %cleanup.dest.slot, !dbg !9144
  br label %cleanup.1492, !dbg !9144

cleanup.1492:                                     ; preds = %sw.epilog.1491, %sw.bb.1487, %sw.bb.1486, %if.then.1440, %if.then.1435, %cleanup.1424, %cleanup.1382, %cleanup.1309, %if.then.1281, %if.then.1271, %cleanup.1256, %if.then.1102, %if.then.1078, %cleanup.1065, %if.then.1041, %cleanup.1031, %cleanup.993, %sw.default.977, %sw.bb.976, %sw.bb.975, %cleanup.955, %cleanup.926, %if.then.903, %if.then.892, %cleanup.874, %cleanup.812, %if.then.723, %if.then.670, %if.then.643, %if.then.633, %if.then.611, %cleanup.588, %cleanup.530, %if.then.404, %if.then.353, %cleanup.339, %if.then.284, %if.then.278, %if.end.272, %cleanup.269, %cleanup.207, %cleanup.138, %cleanup.104, %if.then.110, %if.then.82, %cleanup.75, %if.then.51, %cleanup, %if.end.31, %if.end.30, %if.then.29, %if.then.18, %sw.bb.9, %sw.bb.8, %sw.bb, %if.then.6
  call void @llvm.lifetime.end(i64 1, i8* %handleDefault) #2, !dbg !9144
  %1246 = bitcast i32* %role to i8*, !dbg !9145
  call void @llvm.lifetime.end(i64 4, i8* %1246) #2, !dbg !9145
  %cleanup.dest.1494 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.1494, label %cleanup.1496 [
    i32 0, label %cleanup.cont.1495
  ]

cleanup.cont.1495:                                ; preds = %cleanup.1492
  br label %for.cond, !dbg !9147

cleanup.1496:                                     ; preds = %cleanup.1492
  %1247 = bitcast i32* %quant to i8*, !dbg !9148
  call void @llvm.lifetime.end(i64 4, i8* %1247) #2, !dbg !9148
  %1248 = bitcast i8*** %eventEndPP to i8*, !dbg !9148
  call void @llvm.lifetime.end(i64 8, i8* %1248) #2, !dbg !9148
  %1249 = bitcast i8*** %eventPP to i8*, !dbg !9148
  call void @llvm.lifetime.end(i64 8, i8* %1249) #2, !dbg !9148
  %1250 = bitcast %struct.DTD** %dtd to i8*, !dbg !9148
  call void @llvm.lifetime.end(i64 8, i8* %1250) #2, !dbg !9148
  %1251 = load i32, i32* %retval, !dbg !9148
  ret i32 %1251, !dbg !9148
}

; Function Attrs: nounwind uwtable
define internal i32 @processXmlDecl(%struct.XML_ParserStruct* %parser, i32 %isGeneralTextEntity, i8* %s, i8* %next) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %isGeneralTextEntity.addr = alloca i32, align 4
  %s.addr = alloca i8*, align 8
  %next.addr = alloca i8*, align 8
  %encodingName = alloca i8*, align 8
  %storedEncName = alloca i8*, align 8
  %newEncoding = alloca %struct.encoding*, align 8
  %version = alloca i8*, align 8
  %versionend = alloca i8*, align 8
  %storedversion = alloca i8*, align 8
  %standalone = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %result = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1313, metadata !2293), !dbg !9149
  store i32 %isGeneralTextEntity, i32* %isGeneralTextEntity.addr, align 4, !tbaa !3391
  call void @llvm.dbg.declare(metadata i32* %isGeneralTextEntity.addr, metadata !1314, metadata !2293), !dbg !9150
  store i8* %s, i8** %s.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !1315, metadata !2293), !dbg !9151
  store i8* %next, i8** %next.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %next.addr, metadata !1316, metadata !2293), !dbg !9152
  %0 = bitcast i8** %encodingName to i8*, !dbg !9153
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !9153
  call void @llvm.dbg.declare(metadata i8** %encodingName, metadata !1317, metadata !2293), !dbg !9154
  store i8* null, i8** %encodingName, align 8, !dbg !9154, !tbaa !2289
  %1 = bitcast i8** %storedEncName to i8*, !dbg !9155
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !9155
  call void @llvm.dbg.declare(metadata i8** %storedEncName, metadata !1318, metadata !2293), !dbg !9156
  store i8* null, i8** %storedEncName, align 8, !dbg !9156, !tbaa !2289
  %2 = bitcast %struct.encoding** %newEncoding to i8*, !dbg !9157
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !9157
  call void @llvm.dbg.declare(metadata %struct.encoding** %newEncoding, metadata !1319, metadata !2293), !dbg !9158
  store %struct.encoding* null, %struct.encoding** %newEncoding, align 8, !dbg !9158, !tbaa !2289
  %3 = bitcast i8** %version to i8*, !dbg !9159
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !9159
  call void @llvm.dbg.declare(metadata i8** %version, metadata !1320, metadata !2293), !dbg !9160
  store i8* null, i8** %version, align 8, !dbg !9160, !tbaa !2289
  %4 = bitcast i8** %versionend to i8*, !dbg !9161
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !9161
  call void @llvm.dbg.declare(metadata i8** %versionend, metadata !1321, metadata !2293), !dbg !9162
  %5 = bitcast i8** %storedversion to i8*, !dbg !9163
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !9163
  call void @llvm.dbg.declare(metadata i8** %storedversion, metadata !1322, metadata !2293), !dbg !9164
  store i8* null, i8** %storedversion, align 8, !dbg !9164, !tbaa !2289
  %6 = bitcast i32* %standalone to i8*, !dbg !9165
  call void @llvm.lifetime.start(i64 4, i8* %6) #2, !dbg !9165
  call void @llvm.dbg.declare(metadata i32* %standalone, metadata !1323, metadata !2293), !dbg !9166
  store i32 -1, i32* %standalone, align 4, !dbg !9166, !tbaa !3391
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9167, !tbaa !2289
  %m_ns = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 38, !dbg !9169
  %8 = load i8, i8* %m_ns, align 1, !dbg !9169, !tbaa !2545
  %conv = zext i8 %8 to i32, !dbg !9170
  %tobool = icmp ne i32 %conv, 0, !dbg !9170
  %cond = select i1 %tobool, i32 (i32, %struct.encoding*, i8*, i8*, i8**, i8**, i8**, i8**, %struct.encoding**, i32*)* @PyExpat_XmlParseXmlDeclNS, i32 (i32, %struct.encoding*, i8*, i8*, i8**, i8**, i8**, i8**, %struct.encoding**, i32*)* @PyExpat_XmlParseXmlDecl, !dbg !9170
  %9 = load i32, i32* %isGeneralTextEntity.addr, align 4, !dbg !9171, !tbaa !3391
  %10 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9172, !tbaa !2289
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %10, i32 0, i32 34, !dbg !9173
  %11 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !9173, !tbaa !5191
  %12 = load i8*, i8** %s.addr, align 8, !dbg !9174, !tbaa !2289
  %13 = load i8*, i8** %next.addr, align 8, !dbg !9175, !tbaa !2289
  %14 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9176, !tbaa !2289
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %14, i32 0, i32 47, !dbg !9177
  %call = call i32 %cond(i32 %9, %struct.encoding* %11, i8* %12, i8* %13, i8** %m_eventPtr, i8** %version, i8** %versionend, i8** %encodingName, %struct.encoding** %newEncoding, i32* %standalone), !dbg !9178
  %tobool1 = icmp ne i32 %call, 0, !dbg !9178
  br i1 %tobool1, label %if.end, label %if.then, !dbg !9179

if.then:                                          ; preds = %entry
  %15 = load i32, i32* %isGeneralTextEntity.addr, align 4, !dbg !9180, !tbaa !3391
  %tobool2 = icmp ne i32 %15, 0, !dbg !9180
  br i1 %tobool2, label %if.then.3, label %if.else, !dbg !9183

if.then.3:                                        ; preds = %if.then
  store i32 31, i32* %retval, !dbg !9184
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.96, !dbg !9184

if.else:                                          ; preds = %if.then
  store i32 30, i32* %retval, !dbg !9185
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.96, !dbg !9185

if.end:                                           ; preds = %entry
  %16 = load i32, i32* %isGeneralTextEntity.addr, align 4, !dbg !9186, !tbaa !3391
  %tobool4 = icmp ne i32 %16, 0, !dbg !9186
  br i1 %tobool4, label %if.end.13, label %land.lhs.true, !dbg !9188

land.lhs.true:                                    ; preds = %if.end
  %17 = load i32, i32* %standalone, align 4, !dbg !9189, !tbaa !3391
  %cmp = icmp eq i32 %17, 1, !dbg !9191
  br i1 %cmp, label %if.then.6, label %if.end.13, !dbg !9192

if.then.6:                                        ; preds = %land.lhs.true
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9193, !tbaa !2289
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 65, !dbg !9195
  %19 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !9195, !tbaa !2478
  %standalone7 = getelementptr inbounds %struct.DTD, %struct.DTD* %19, i32 0, i32 8, !dbg !9196
  store i8 1, i8* %standalone7, align 1, !dbg !9197, !tbaa !3187
  %20 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9198, !tbaa !2289
  %m_paramEntityParsing = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %20, i32 0, i32 88, !dbg !9200
  %21 = load i32, i32* %m_paramEntityParsing, align 4, !dbg !9200, !tbaa !3064
  %cmp8 = icmp eq i32 %21, 1, !dbg !9201
  br i1 %cmp8, label %if.then.10, label %if.end.12, !dbg !9202

if.then.10:                                       ; preds = %if.then.6
  %22 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9203, !tbaa !2289
  %m_paramEntityParsing11 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %22, i32 0, i32 88, !dbg !9204
  store i32 0, i32* %m_paramEntityParsing11, align 4, !dbg !9205, !tbaa !3064
  br label %if.end.12, !dbg !9206

if.end.12:                                        ; preds = %if.then.10, %if.then.6
  br label %if.end.13, !dbg !9207

if.end.13:                                        ; preds = %if.end.12, %land.lhs.true, %if.end
  %23 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9208, !tbaa !2289
  %m_xmlDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %23, i32 0, i32 33, !dbg !9210
  %24 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %m_xmlDeclHandler, align 8, !dbg !9210, !tbaa !2931
  %tobool14 = icmp ne void (i8*, i8*, i8*, i32)* %24, null, !dbg !9211
  br i1 %tobool14, label %if.then.15, label %if.else.43, !dbg !9212

if.then.15:                                       ; preds = %if.end.13
  %25 = load i8*, i8** %encodingName, align 8, !dbg !9213, !tbaa !2289
  %cmp16 = icmp ne i8* %25, null, !dbg !9216
  br i1 %cmp16, label %if.then.18, label %if.end.29, !dbg !9217

if.then.18:                                       ; preds = %if.then.15
  %26 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9218, !tbaa !2289
  %m_temp2Pool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %26, i32 0, i32 80, !dbg !9220
  %27 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9221, !tbaa !2289
  %m_encoding19 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %27, i32 0, i32 34, !dbg !9222
  %28 = load %struct.encoding*, %struct.encoding** %m_encoding19, align 8, !dbg !9222, !tbaa !5191
  %29 = load i8*, i8** %encodingName, align 8, !dbg !9223, !tbaa !2289
  %30 = load i8*, i8** %encodingName, align 8, !dbg !9224, !tbaa !2289
  %31 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9225, !tbaa !2289
  %m_encoding20 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %31, i32 0, i32 34, !dbg !9226
  %32 = load %struct.encoding*, %struct.encoding** %m_encoding20, align 8, !dbg !9226, !tbaa !5191
  %nameLength = getelementptr inbounds %struct.encoding, %struct.encoding* %32, i32 0, i32 4, !dbg !9227
  %33 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %nameLength, align 8, !dbg !9227, !tbaa !9228
  %34 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9229, !tbaa !2289
  %m_encoding21 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %34, i32 0, i32 34, !dbg !9230
  %35 = load %struct.encoding*, %struct.encoding** %m_encoding21, align 8, !dbg !9230, !tbaa !5191
  %36 = load i8*, i8** %encodingName, align 8, !dbg !9231, !tbaa !2289
  %call22 = call i32 %33(%struct.encoding* %35, i8* %36), !dbg !9232
  %idx.ext = sext i32 %call22 to i64, !dbg !9233
  %add.ptr = getelementptr i8, i8* %30, i64 %idx.ext, !dbg !9233
  %call23 = call i8* @poolStoreString(%struct.STRING_POOL* %m_temp2Pool, %struct.encoding* %28, i8* %29, i8* %add.ptr), !dbg !9234
  store i8* %call23, i8** %storedEncName, align 8, !dbg !9235, !tbaa !2289
  %37 = load i8*, i8** %storedEncName, align 8, !dbg !9236, !tbaa !2289
  %tobool24 = icmp ne i8* %37, null, !dbg !9236
  br i1 %tobool24, label %if.end.26, label %if.then.25, !dbg !9238

if.then.25:                                       ; preds = %if.then.18
  store i32 1, i32* %retval, !dbg !9239
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.96, !dbg !9239

if.end.26:                                        ; preds = %if.then.18
  %38 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9240, !tbaa !2289
  %m_temp2Pool27 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %38, i32 0, i32 80, !dbg !9241
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_temp2Pool27, i32 0, i32 3, !dbg !9242
  %39 = load i8*, i8** %ptr, align 8, !dbg !9242, !tbaa !2798
  %40 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9243, !tbaa !2289
  %m_temp2Pool28 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %40, i32 0, i32 80, !dbg !9244
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_temp2Pool28, i32 0, i32 4, !dbg !9245
  store i8* %39, i8** %start, align 8, !dbg !9246, !tbaa !2794
  br label %if.end.29, !dbg !9247

if.end.29:                                        ; preds = %if.end.26, %if.then.15
  %41 = load i8*, i8** %version, align 8, !dbg !9248, !tbaa !2289
  %tobool30 = icmp ne i8* %41, null, !dbg !9248
  br i1 %tobool30, label %if.then.31, label %if.end.41, !dbg !9250

if.then.31:                                       ; preds = %if.end.29
  %42 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9251, !tbaa !2289
  %m_temp2Pool32 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %42, i32 0, i32 80, !dbg !9253
  %43 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9254, !tbaa !2289
  %m_encoding33 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %43, i32 0, i32 34, !dbg !9255
  %44 = load %struct.encoding*, %struct.encoding** %m_encoding33, align 8, !dbg !9255, !tbaa !5191
  %45 = load i8*, i8** %version, align 8, !dbg !9256, !tbaa !2289
  %46 = load i8*, i8** %versionend, align 8, !dbg !9257, !tbaa !2289
  %47 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9258, !tbaa !2289
  %m_encoding34 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %47, i32 0, i32 34, !dbg !9259
  %48 = load %struct.encoding*, %struct.encoding** %m_encoding34, align 8, !dbg !9259, !tbaa !5191
  %minBytesPerChar = getelementptr inbounds %struct.encoding, %struct.encoding* %48, i32 0, i32 13, !dbg !9260
  %49 = load i32, i32* %minBytesPerChar, align 4, !dbg !9260, !tbaa !6758
  %idx.ext35 = sext i32 %49 to i64, !dbg !9261
  %idx.neg = sub i64 0, %idx.ext35, !dbg !9261
  %add.ptr36 = getelementptr i8, i8* %46, i64 %idx.neg, !dbg !9261
  %call37 = call i8* @poolStoreString(%struct.STRING_POOL* %m_temp2Pool32, %struct.encoding* %44, i8* %45, i8* %add.ptr36), !dbg !9262
  store i8* %call37, i8** %storedversion, align 8, !dbg !9263, !tbaa !2289
  %50 = load i8*, i8** %storedversion, align 8, !dbg !9264, !tbaa !2289
  %tobool38 = icmp ne i8* %50, null, !dbg !9264
  br i1 %tobool38, label %if.end.40, label %if.then.39, !dbg !9266

if.then.39:                                       ; preds = %if.then.31
  store i32 1, i32* %retval, !dbg !9267
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.96, !dbg !9267

if.end.40:                                        ; preds = %if.then.31
  br label %if.end.41, !dbg !9268

if.end.41:                                        ; preds = %if.end.40, %if.end.29
  %51 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9269, !tbaa !2289
  %m_xmlDeclHandler42 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %51, i32 0, i32 33, !dbg !9270
  %52 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %m_xmlDeclHandler42, align 8, !dbg !9270, !tbaa !2931
  %53 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9271, !tbaa !2289
  %m_handlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %53, i32 0, i32 1, !dbg !9272
  %54 = load i8*, i8** %m_handlerArg, align 8, !dbg !9272, !tbaa !2842
  %55 = load i8*, i8** %storedversion, align 8, !dbg !9273, !tbaa !2289
  %56 = load i8*, i8** %storedEncName, align 8, !dbg !9274, !tbaa !2289
  %57 = load i32, i32* %standalone, align 4, !dbg !9275, !tbaa !3391
  call void %52(i8* %54, i8* %55, i8* %56, i32 %57), !dbg !9276
  br label %if.end.48, !dbg !9277

if.else.43:                                       ; preds = %if.end.13
  %58 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9278, !tbaa !2289
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %58, i32 0, i32 18, !dbg !9280
  %59 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler, align 8, !dbg !9280, !tbaa !2874
  %tobool44 = icmp ne void (i8*, i8*, i32)* %59, null, !dbg !9281
  br i1 %tobool44, label %if.then.45, label %if.end.47, !dbg !9282

if.then.45:                                       ; preds = %if.else.43
  %60 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9283, !tbaa !2289
  %61 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9284, !tbaa !2289
  %m_encoding46 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %61, i32 0, i32 34, !dbg !9285
  %62 = load %struct.encoding*, %struct.encoding** %m_encoding46, align 8, !dbg !9285, !tbaa !5191
  %63 = load i8*, i8** %s.addr, align 8, !dbg !9286, !tbaa !2289
  %64 = load i8*, i8** %next.addr, align 8, !dbg !9287, !tbaa !2289
  call void @reportDefault(%struct.XML_ParserStruct* %60, %struct.encoding* %62, i8* %63, i8* %64), !dbg !9288
  br label %if.end.47, !dbg !9288

if.end.47:                                        ; preds = %if.then.45, %if.else.43
  br label %if.end.48

if.end.48:                                        ; preds = %if.end.47, %if.end.41
  %65 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9289, !tbaa !2289
  %m_protocolEncodingName = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %65, i32 0, i32 37, !dbg !9290
  %66 = load i8*, i8** %m_protocolEncodingName, align 8, !dbg !9290, !tbaa !2581
  %cmp49 = icmp eq i8* %66, null, !dbg !9291
  br i1 %cmp49, label %if.then.51, label %if.end.90, !dbg !9292

if.then.51:                                       ; preds = %if.end.48
  %67 = load %struct.encoding*, %struct.encoding** %newEncoding, align 8, !dbg !9293, !tbaa !2289
  %tobool52 = icmp ne %struct.encoding* %67, null, !dbg !9293
  br i1 %tobool52, label %if.then.53, label %if.else.63, !dbg !9294

if.then.53:                                       ; preds = %if.then.51
  %68 = load %struct.encoding*, %struct.encoding** %newEncoding, align 8, !dbg !9295, !tbaa !2289
  %minBytesPerChar54 = getelementptr inbounds %struct.encoding, %struct.encoding* %68, i32 0, i32 13, !dbg !9298
  %69 = load i32, i32* %minBytesPerChar54, align 4, !dbg !9298, !tbaa !6758
  %70 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9299, !tbaa !2289
  %m_encoding55 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %70, i32 0, i32 34, !dbg !9300
  %71 = load %struct.encoding*, %struct.encoding** %m_encoding55, align 8, !dbg !9300, !tbaa !5191
  %minBytesPerChar56 = getelementptr inbounds %struct.encoding, %struct.encoding* %71, i32 0, i32 13, !dbg !9301
  %72 = load i32, i32* %minBytesPerChar56, align 4, !dbg !9301, !tbaa !6758
  %cmp57 = icmp ne i32 %69, %72, !dbg !9302
  br i1 %cmp57, label %if.then.59, label %if.end.61, !dbg !9303

if.then.59:                                       ; preds = %if.then.53
  %73 = load i8*, i8** %encodingName, align 8, !dbg !9304, !tbaa !2289
  %74 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9306, !tbaa !2289
  %m_eventPtr60 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %74, i32 0, i32 47, !dbg !9307
  store i8* %73, i8** %m_eventPtr60, align 8, !dbg !9308, !tbaa !3006
  store i32 19, i32* %retval, !dbg !9309
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.96, !dbg !9309

if.end.61:                                        ; preds = %if.then.53
  %75 = load %struct.encoding*, %struct.encoding** %newEncoding, align 8, !dbg !9310, !tbaa !2289
  %76 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9311, !tbaa !2289
  %m_encoding62 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %76, i32 0, i32 34, !dbg !9312
  store %struct.encoding* %75, %struct.encoding** %m_encoding62, align 8, !dbg !9313, !tbaa !5191
  br label %if.end.89, !dbg !9314

if.else.63:                                       ; preds = %if.then.51
  %77 = load i8*, i8** %encodingName, align 8, !dbg !9315, !tbaa !2289
  %tobool64 = icmp ne i8* %77, null, !dbg !9315
  br i1 %tobool64, label %if.then.65, label %if.end.88, !dbg !9316

if.then.65:                                       ; preds = %if.else.63
  %78 = bitcast i32* %result to i8*, !dbg !9317
  call void @llvm.lifetime.start(i64 4, i8* %78) #2, !dbg !9317
  call void @llvm.dbg.declare(metadata i32* %result, metadata !1324, metadata !2293), !dbg !9318
  %79 = load i8*, i8** %storedEncName, align 8, !dbg !9319, !tbaa !2289
  %tobool66 = icmp ne i8* %79, null, !dbg !9319
  br i1 %tobool66, label %if.end.80, label %if.then.67, !dbg !9321

if.then.67:                                       ; preds = %if.then.65
  %80 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9322, !tbaa !2289
  %m_temp2Pool68 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %80, i32 0, i32 80, !dbg !9324
  %81 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9325, !tbaa !2289
  %m_encoding69 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %81, i32 0, i32 34, !dbg !9326
  %82 = load %struct.encoding*, %struct.encoding** %m_encoding69, align 8, !dbg !9326, !tbaa !5191
  %83 = load i8*, i8** %encodingName, align 8, !dbg !9327, !tbaa !2289
  %84 = load i8*, i8** %encodingName, align 8, !dbg !9328, !tbaa !2289
  %85 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9329, !tbaa !2289
  %m_encoding70 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %85, i32 0, i32 34, !dbg !9330
  %86 = load %struct.encoding*, %struct.encoding** %m_encoding70, align 8, !dbg !9330, !tbaa !5191
  %nameLength71 = getelementptr inbounds %struct.encoding, %struct.encoding* %86, i32 0, i32 4, !dbg !9331
  %87 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %nameLength71, align 8, !dbg !9331, !tbaa !9228
  %88 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9332, !tbaa !2289
  %m_encoding72 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %88, i32 0, i32 34, !dbg !9333
  %89 = load %struct.encoding*, %struct.encoding** %m_encoding72, align 8, !dbg !9333, !tbaa !5191
  %90 = load i8*, i8** %encodingName, align 8, !dbg !9334, !tbaa !2289
  %call73 = call i32 %87(%struct.encoding* %89, i8* %90), !dbg !9335
  %idx.ext74 = sext i32 %call73 to i64, !dbg !9336
  %add.ptr75 = getelementptr i8, i8* %84, i64 %idx.ext74, !dbg !9336
  %call76 = call i8* @poolStoreString(%struct.STRING_POOL* %m_temp2Pool68, %struct.encoding* %82, i8* %83, i8* %add.ptr75), !dbg !9337
  store i8* %call76, i8** %storedEncName, align 8, !dbg !9338, !tbaa !2289
  %91 = load i8*, i8** %storedEncName, align 8, !dbg !9339, !tbaa !2289
  %tobool77 = icmp ne i8* %91, null, !dbg !9339
  br i1 %tobool77, label %if.end.79, label %if.then.78, !dbg !9341

if.then.78:                                       ; preds = %if.then.67
  store i32 1, i32* %retval, !dbg !9342
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9342

if.end.79:                                        ; preds = %if.then.67
  br label %if.end.80, !dbg !9343

if.end.80:                                        ; preds = %if.end.79, %if.then.65
  %92 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9344, !tbaa !2289
  %93 = load i8*, i8** %storedEncName, align 8, !dbg !9345, !tbaa !2289
  %call81 = call i32 @handleUnknownEncoding(%struct.XML_ParserStruct* %92, i8* %93), !dbg !9346
  store i32 %call81, i32* %result, align 4, !dbg !9347, !tbaa !2307
  %94 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9348, !tbaa !2289
  %m_temp2Pool82 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %94, i32 0, i32 80, !dbg !9349
  call void @poolClear(%struct.STRING_POOL* %m_temp2Pool82), !dbg !9350
  %95 = load i32, i32* %result, align 4, !dbg !9351, !tbaa !2307
  %cmp83 = icmp eq i32 %95, 18, !dbg !9353
  br i1 %cmp83, label %if.then.85, label %if.end.87, !dbg !9354

if.then.85:                                       ; preds = %if.end.80
  %96 = load i8*, i8** %encodingName, align 8, !dbg !9355, !tbaa !2289
  %97 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9356, !tbaa !2289
  %m_eventPtr86 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %97, i32 0, i32 47, !dbg !9357
  store i8* %96, i8** %m_eventPtr86, align 8, !dbg !9358, !tbaa !3006
  br label %if.end.87, !dbg !9359

if.end.87:                                        ; preds = %if.then.85, %if.end.80
  %98 = load i32, i32* %result, align 4, !dbg !9360, !tbaa !2307
  store i32 %98, i32* %retval, !dbg !9361
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9361

cleanup:                                          ; preds = %if.end.87, %if.then.78
  %99 = bitcast i32* %result to i8*, !dbg !9362
  call void @llvm.lifetime.end(i64 4, i8* %99) #2, !dbg !9362
  br label %cleanup.96

if.end.88:                                        ; preds = %if.else.63
  br label %if.end.89

if.end.89:                                        ; preds = %if.end.88, %if.end.61
  br label %if.end.90, !dbg !9363

if.end.90:                                        ; preds = %if.end.89, %if.end.48
  %100 = load i8*, i8** %storedEncName, align 8, !dbg !9364, !tbaa !2289
  %tobool91 = icmp ne i8* %100, null, !dbg !9364
  br i1 %tobool91, label %if.then.93, label %lor.lhs.false, !dbg !9366

lor.lhs.false:                                    ; preds = %if.end.90
  %101 = load i8*, i8** %storedversion, align 8, !dbg !9367, !tbaa !2289
  %tobool92 = icmp ne i8* %101, null, !dbg !9367
  br i1 %tobool92, label %if.then.93, label %if.end.95, !dbg !9369

if.then.93:                                       ; preds = %lor.lhs.false, %if.end.90
  %102 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9370, !tbaa !2289
  %m_temp2Pool94 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %102, i32 0, i32 80, !dbg !9371
  call void @poolClear(%struct.STRING_POOL* %m_temp2Pool94), !dbg !9372
  br label %if.end.95, !dbg !9372

if.end.95:                                        ; preds = %if.then.93, %lor.lhs.false
  store i32 0, i32* %retval, !dbg !9373
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.96, !dbg !9373

cleanup.96:                                       ; preds = %if.end.95, %cleanup, %if.then.59, %if.then.39, %if.then.25, %if.else, %if.then.3
  %103 = bitcast i32* %standalone to i8*, !dbg !9374
  call void @llvm.lifetime.end(i64 4, i8* %103) #2, !dbg !9374
  %104 = bitcast i8** %storedversion to i8*, !dbg !9374
  call void @llvm.lifetime.end(i64 8, i8* %104) #2, !dbg !9374
  %105 = bitcast i8** %versionend to i8*, !dbg !9374
  call void @llvm.lifetime.end(i64 8, i8* %105) #2, !dbg !9374
  %106 = bitcast i8** %version to i8*, !dbg !9374
  call void @llvm.lifetime.end(i64 8, i8* %106) #2, !dbg !9374
  %107 = bitcast %struct.encoding** %newEncoding to i8*, !dbg !9374
  call void @llvm.lifetime.end(i64 8, i8* %107) #2, !dbg !9374
  %108 = bitcast i8** %storedEncName to i8*, !dbg !9374
  call void @llvm.lifetime.end(i64 8, i8* %108) #2, !dbg !9374
  %109 = bitcast i8** %encodingName to i8*, !dbg !9374
  call void @llvm.lifetime.end(i64 8, i8* %109) #2, !dbg !9374
  %110 = load i32, i32* %retval, !dbg !9374
  ret i32 %110, !dbg !9374
}

; Function Attrs: nounwind uwtable
define internal i8* @poolStoreString(%struct.STRING_POOL* %pool, %struct.encoding* %enc, i8* %ptr, i8* %end) #0 {
entry:
  %retval = alloca i8*, align 8
  %pool.addr = alloca %struct.STRING_POOL*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  store %struct.STRING_POOL* %pool, %struct.STRING_POOL** %pool.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.STRING_POOL** %pool.addr, metadata !1334, metadata !2293), !dbg !9375
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !1335, metadata !2293), !dbg !9376
  store i8* %ptr, i8** %ptr.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !1336, metadata !2293), !dbg !9377
  store i8* %end, i8** %end.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !1337, metadata !2293), !dbg !9378
  %0 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !9379, !tbaa !2289
  %1 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !9381, !tbaa !2289
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !9382, !tbaa !2289
  %3 = load i8*, i8** %end.addr, align 8, !dbg !9383, !tbaa !2289
  %call = call i8* @poolAppend(%struct.STRING_POOL* %0, %struct.encoding* %1, i8* %2, i8* %3), !dbg !9384
  %tobool = icmp ne i8* %call, null, !dbg !9384
  br i1 %tobool, label %if.end, label %if.then, !dbg !9385

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, !dbg !9386
  br label %return, !dbg !9386

if.end:                                           ; preds = %entry
  %4 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !9387, !tbaa !2289
  %ptr1 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %4, i32 0, i32 3, !dbg !9389
  %5 = load i8*, i8** %ptr1, align 8, !dbg !9389, !tbaa !2798
  %6 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !9390, !tbaa !2289
  %end2 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %6, i32 0, i32 2, !dbg !9391
  %7 = load i8*, i8** %end2, align 8, !dbg !9391, !tbaa !2802
  %cmp = icmp eq i8* %5, %7, !dbg !9392
  br i1 %cmp, label %land.lhs.true, label %if.end.6, !dbg !9393

land.lhs.true:                                    ; preds = %if.end
  %8 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !9394, !tbaa !2289
  %call3 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %8), !dbg !9396
  %tobool4 = icmp ne i8 %call3, 0, !dbg !9396
  br i1 %tobool4, label %if.end.6, label %if.then.5, !dbg !9397

if.then.5:                                        ; preds = %land.lhs.true
  store i8* null, i8** %retval, !dbg !9398
  br label %return, !dbg !9398

if.end.6:                                         ; preds = %land.lhs.true, %if.end
  %9 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !9399, !tbaa !2289
  %ptr7 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %9, i32 0, i32 3, !dbg !9400
  %10 = load i8*, i8** %ptr7, align 8, !dbg !9401, !tbaa !2798
  %incdec.ptr = getelementptr i8, i8* %10, i32 1, !dbg !9401
  store i8* %incdec.ptr, i8** %ptr7, align 8, !dbg !9401, !tbaa !2798
  store i8 0, i8* %10, align 1, !dbg !9402, !tbaa !2307
  %11 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !9403, !tbaa !2289
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %11, i32 0, i32 4, !dbg !9404
  %12 = load i8*, i8** %start, align 8, !dbg !9404, !tbaa !2794
  store i8* %12, i8** %retval, !dbg !9405
  br label %return, !dbg !9405

return:                                           ; preds = %if.end.6, %if.then.5, %if.then
  %13 = load i8*, i8** %retval, !dbg !9406
  ret i8* %13, !dbg !9406
}

; Function Attrs: nounwind uwtable
define internal %struct.NAMED* @lookup(%struct.XML_ParserStruct* %parser, %struct.HASH_TABLE* %table, i8* %name, i64 %createSize) #0 {
entry:
  %retval = alloca %struct.NAMED*, align 8
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %table.addr = alloca %struct.HASH_TABLE*, align 8
  %name.addr = alloca i8*, align 8
  %createSize.addr = alloca i64, align 8
  %i = alloca i64, align 8
  %tsize = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %h = alloca i64, align 8
  %mask = alloca i64, align 8
  %step = alloca i8, align 1
  %newPower = alloca i8, align 1
  %newSize = alloca i64, align 8
  %newMask = alloca i64, align 8
  %tsize61 = alloca i64, align 8
  %newV = alloca %struct.NAMED**, align 8
  %newHash = alloca i64, align 8
  %j = alloca i64, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1342, metadata !2293), !dbg !9407
  store %struct.HASH_TABLE* %table, %struct.HASH_TABLE** %table.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.HASH_TABLE** %table.addr, metadata !1343, metadata !2293), !dbg !9408
  store i8* %name, i8** %name.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !1344, metadata !2293), !dbg !9409
  store i64 %createSize, i64* %createSize.addr, align 8, !tbaa !3400
  call void @llvm.dbg.declare(metadata i64* %createSize.addr, metadata !1345, metadata !2293), !dbg !9410
  %0 = bitcast i64* %i to i8*, !dbg !9411
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !9411
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1346, metadata !2293), !dbg !9412
  %1 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !9413, !tbaa !2289
  %size = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %1, i32 0, i32 2, !dbg !9414
  %2 = load i64, i64* %size, align 8, !dbg !9414, !tbaa !6254
  %cmp = icmp eq i64 %2, 0, !dbg !9415
  br i1 %cmp, label %if.then, label %if.else, !dbg !9416

if.then:                                          ; preds = %entry
  %3 = bitcast i64* %tsize to i8*, !dbg !9417
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !9417
  call void @llvm.dbg.declare(metadata i64* %tsize, metadata !1347, metadata !2293), !dbg !9418
  %4 = load i64, i64* %createSize.addr, align 8, !dbg !9419, !tbaa !3400
  %tobool = icmp ne i64 %4, 0, !dbg !9419
  br i1 %tobool, label %if.end, label %if.then.1, !dbg !9421

if.then.1:                                        ; preds = %if.then
  store %struct.NAMED* null, %struct.NAMED** %retval, !dbg !9422
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9422

if.end:                                           ; preds = %if.then
  %5 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !9423, !tbaa !2289
  %power = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %5, i32 0, i32 1, !dbg !9424
  store i8 6, i8* %power, align 1, !dbg !9425, !tbaa !6250
  %6 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !9426, !tbaa !2289
  %size2 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %6, i32 0, i32 2, !dbg !9427
  store i64 64, i64* %size2, align 8, !dbg !9428, !tbaa !6254
  %7 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !9429, !tbaa !2289
  %size3 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %7, i32 0, i32 2, !dbg !9430
  %8 = load i64, i64* %size3, align 8, !dbg !9430, !tbaa !6254
  %mul = mul i64 %8, 8, !dbg !9431
  store i64 %mul, i64* %tsize, align 8, !dbg !9432, !tbaa !3400
  %9 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !9433, !tbaa !2289
  %mem = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %9, i32 0, i32 4, !dbg !9434
  %10 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mem, align 8, !dbg !9434, !tbaa !6267
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %10, i32 0, i32 0, !dbg !9435
  %11 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8, !dbg !9435, !tbaa !2331
  %12 = load i64, i64* %tsize, align 8, !dbg !9436, !tbaa !3400
  %call = call i8* %11(i64 %12), !dbg !9433
  %13 = bitcast i8* %call to %struct.NAMED**, !dbg !9437
  %14 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !9438, !tbaa !2289
  %v = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %14, i32 0, i32 0, !dbg !9439
  store %struct.NAMED** %13, %struct.NAMED*** %v, align 8, !dbg !9440, !tbaa !6262
  %15 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !9441, !tbaa !2289
  %v4 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %15, i32 0, i32 0, !dbg !9443
  %16 = load %struct.NAMED**, %struct.NAMED*** %v4, align 8, !dbg !9443, !tbaa !6262
  %tobool5 = icmp ne %struct.NAMED** %16, null, !dbg !9441
  br i1 %tobool5, label %if.end.8, label %if.then.6, !dbg !9444

if.then.6:                                        ; preds = %if.end
  %17 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !9445, !tbaa !2289
  %size7 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %17, i32 0, i32 2, !dbg !9447
  store i64 0, i64* %size7, align 8, !dbg !9448, !tbaa !6254
  store %struct.NAMED* null, %struct.NAMED** %retval, !dbg !9449
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9449

if.end.8:                                         ; preds = %if.end
  %18 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !9450, !tbaa !2289
  %v9 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %18, i32 0, i32 0, !dbg !9451
  %19 = load %struct.NAMED**, %struct.NAMED*** %v9, align 8, !dbg !9451, !tbaa !6262
  %20 = bitcast %struct.NAMED** %19 to i8*, !dbg !9452
  %21 = load i64, i64* %tsize, align 8, !dbg !9453, !tbaa !3400
  call void @llvm.memset.p0i8.i64(i8* %20, i8 0, i64 %21, i32 8, i1 false), !dbg !9452
  %22 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9454, !tbaa !2289
  %23 = load i8*, i8** %name.addr, align 8, !dbg !9455, !tbaa !2289
  %call10 = call i64 @hash(%struct.XML_ParserStruct* %22, i8* %23), !dbg !9456
  %24 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !9457, !tbaa !2289
  %size11 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %24, i32 0, i32 2, !dbg !9458
  %25 = load i64, i64* %size11, align 8, !dbg !9458, !tbaa !6254
  %sub = sub i64 %25, 1, !dbg !9459
  %and = and i64 %call10, %sub, !dbg !9460
  store i64 %and, i64* %i, align 8, !dbg !9461, !tbaa !3400
  store i32 0, i32* %cleanup.dest.slot, !dbg !9462
  br label %cleanup, !dbg !9462

cleanup:                                          ; preds = %if.end.8, %if.then.6, %if.then.1
  %26 = bitcast i64* %tsize to i8*, !dbg !9463
  call void @llvm.lifetime.end(i64 8, i8* %26) #2, !dbg !9463
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.185 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.165, !dbg !9465

if.else:                                          ; preds = %entry
  %27 = bitcast i64* %h to i8*, !dbg !9466
  call void @llvm.lifetime.start(i64 8, i8* %27) #2, !dbg !9466
  call void @llvm.dbg.declare(metadata i64* %h, metadata !1350, metadata !2293), !dbg !9467
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9468, !tbaa !2289
  %29 = load i8*, i8** %name.addr, align 8, !dbg !9469, !tbaa !2289
  %call12 = call i64 @hash(%struct.XML_ParserStruct* %28, i8* %29), !dbg !9470
  store i64 %call12, i64* %h, align 8, !dbg !9467, !tbaa !3400
  %30 = bitcast i64* %mask to i8*, !dbg !9471
  call void @llvm.lifetime.start(i64 8, i8* %30) #2, !dbg !9471
  call void @llvm.dbg.declare(metadata i64* %mask, metadata !1352, metadata !2293), !dbg !9472
  %31 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !9473, !tbaa !2289
  %size13 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %31, i32 0, i32 2, !dbg !9474
  %32 = load i64, i64* %size13, align 8, !dbg !9474, !tbaa !6254
  %sub14 = sub i64 %32, 1, !dbg !9475
  store i64 %sub14, i64* %mask, align 8, !dbg !9472, !tbaa !3400
  call void @llvm.lifetime.start(i64 1, i8* %step) #2, !dbg !9476
  call void @llvm.dbg.declare(metadata i8* %step, metadata !1353, metadata !2293), !dbg !9477
  store i8 0, i8* %step, align 1, !dbg !9477, !tbaa !2307
  %33 = load i64, i64* %h, align 8, !dbg !9478, !tbaa !3400
  %34 = load i64, i64* %mask, align 8, !dbg !9479, !tbaa !3400
  %and15 = and i64 %33, %34, !dbg !9480
  store i64 %and15, i64* %i, align 8, !dbg !9481, !tbaa !3400
  br label %while.cond, !dbg !9482

while.cond:                                       ; preds = %cond.end, %if.else
  %35 = load i64, i64* %i, align 8, !dbg !9483, !tbaa !3400
  %36 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !9486, !tbaa !2289
  %v16 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %36, i32 0, i32 0, !dbg !9487
  %37 = load %struct.NAMED**, %struct.NAMED*** %v16, align 8, !dbg !9487, !tbaa !6262
  %arrayidx = getelementptr %struct.NAMED*, %struct.NAMED** %37, i64 %35, !dbg !9486
  %38 = load %struct.NAMED*, %struct.NAMED** %arrayidx, align 8, !dbg !9486, !tbaa !2289
  %tobool17 = icmp ne %struct.NAMED* %38, null, !dbg !9482
  br i1 %tobool17, label %while.body, label %while.end, !dbg !9482

while.body:                                       ; preds = %while.cond
  %39 = load i8*, i8** %name.addr, align 8, !dbg !9488, !tbaa !2289
  %40 = load i64, i64* %i, align 8, !dbg !9491, !tbaa !3400
  %41 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !9492, !tbaa !2289
  %v18 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %41, i32 0, i32 0, !dbg !9493
  %42 = load %struct.NAMED**, %struct.NAMED*** %v18, align 8, !dbg !9493, !tbaa !6262
  %arrayidx19 = getelementptr %struct.NAMED*, %struct.NAMED** %42, i64 %40, !dbg !9492
  %43 = load %struct.NAMED*, %struct.NAMED** %arrayidx19, align 8, !dbg !9492, !tbaa !2289
  %name20 = getelementptr inbounds %struct.NAMED, %struct.NAMED* %43, i32 0, i32 0, !dbg !9494
  %44 = load i8*, i8** %name20, align 8, !dbg !9494, !tbaa !9495
  %call21 = call zeroext i8 @keyeq(i8* %39, i8* %44), !dbg !9497
  %tobool22 = icmp ne i8 %call21, 0, !dbg !9497
  br i1 %tobool22, label %if.then.23, label %if.end.26, !dbg !9498

if.then.23:                                       ; preds = %while.body
  %45 = load i64, i64* %i, align 8, !dbg !9499, !tbaa !3400
  %46 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !9500, !tbaa !2289
  %v24 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %46, i32 0, i32 0, !dbg !9501
  %47 = load %struct.NAMED**, %struct.NAMED*** %v24, align 8, !dbg !9501, !tbaa !6262
  %arrayidx25 = getelementptr %struct.NAMED*, %struct.NAMED** %47, i64 %45, !dbg !9500
  %48 = load %struct.NAMED*, %struct.NAMED** %arrayidx25, align 8, !dbg !9500, !tbaa !2289
  store %struct.NAMED* %48, %struct.NAMED** %retval, !dbg !9502
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.160, !dbg !9502

if.end.26:                                        ; preds = %while.body
  %49 = load i8, i8* %step, align 1, !dbg !9503, !tbaa !2307
  %tobool27 = icmp ne i8 %49, 0, !dbg !9503
  br i1 %tobool27, label %if.end.35, label %if.then.28, !dbg !9505

if.then.28:                                       ; preds = %if.end.26
  %50 = load i64, i64* %h, align 8, !dbg !9506, !tbaa !3400
  %51 = load i64, i64* %mask, align 8, !dbg !9507, !tbaa !3400
  %neg = xor i64 %51, -1, !dbg !9508
  %and29 = and i64 %50, %neg, !dbg !9509
  %52 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !9510, !tbaa !2289
  %power30 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %52, i32 0, i32 1, !dbg !9511
  %53 = load i8, i8* %power30, align 1, !dbg !9511, !tbaa !6250
  %conv = zext i8 %53 to i32, !dbg !9512
  %sub31 = sub i32 %conv, 1, !dbg !9513
  %sh_prom = zext i32 %sub31 to i64, !dbg !9514
  %shr = lshr i64 %and29, %sh_prom, !dbg !9514
  %54 = load i64, i64* %mask, align 8, !dbg !9515, !tbaa !3400
  %shr32 = lshr i64 %54, 2, !dbg !9516
  %and33 = and i64 %shr, %shr32, !dbg !9517
  %or = or i64 %and33, 1, !dbg !9518
  %conv34 = trunc i64 %or to i8, !dbg !9519
  store i8 %conv34, i8* %step, align 1, !dbg !9520, !tbaa !2307
  br label %if.end.35, !dbg !9521

if.end.35:                                        ; preds = %if.then.28, %if.end.26
  %55 = load i64, i64* %i, align 8, !dbg !9522, !tbaa !3400
  %56 = load i8, i8* %step, align 1, !dbg !9523, !tbaa !2307
  %conv36 = zext i8 %56 to i64, !dbg !9523
  %cmp37 = icmp ult i64 %55, %conv36, !dbg !9524
  br i1 %cmp37, label %cond.true, label %cond.false, !dbg !9522

cond.true:                                        ; preds = %if.end.35
  %57 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !9525, !tbaa !2289
  %size39 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %57, i32 0, i32 2, !dbg !9527
  %58 = load i64, i64* %size39, align 8, !dbg !9527, !tbaa !6254
  %59 = load i8, i8* %step, align 1, !dbg !9528, !tbaa !2307
  %conv40 = zext i8 %59 to i64, !dbg !9528
  %sub41 = sub i64 %58, %conv40, !dbg !9529
  %60 = load i64, i64* %i, align 8, !dbg !9530, !tbaa !3400
  %add = add i64 %60, %sub41, !dbg !9530
  store i64 %add, i64* %i, align 8, !dbg !9530, !tbaa !3400
  br label %cond.end, !dbg !9522

cond.false:                                       ; preds = %if.end.35
  %61 = load i8, i8* %step, align 1, !dbg !9531, !tbaa !2307
  %conv42 = zext i8 %61 to i64, !dbg !9531
  %62 = load i64, i64* %i, align 8, !dbg !9533, !tbaa !3400
  %sub43 = sub i64 %62, %conv42, !dbg !9533
  store i64 %sub43, i64* %i, align 8, !dbg !9533, !tbaa !3400
  br label %cond.end, !dbg !9522

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %add, %cond.true ], [ %sub43, %cond.false ], !dbg !9522
  br label %while.cond, !dbg !9482

while.end:                                        ; preds = %while.cond
  %63 = load i64, i64* %createSize.addr, align 8, !dbg !9534, !tbaa !3400
  %tobool44 = icmp ne i64 %63, 0, !dbg !9534
  br i1 %tobool44, label %if.end.46, label %if.then.45, !dbg !9536

if.then.45:                                       ; preds = %while.end
  store %struct.NAMED* null, %struct.NAMED** %retval, !dbg !9537
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.160, !dbg !9537

if.end.46:                                        ; preds = %while.end
  %64 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !9538, !tbaa !2289
  %used = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %64, i32 0, i32 3, !dbg !9539
  %65 = load i64, i64* %used, align 8, !dbg !9539, !tbaa !6258
  %66 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !9540, !tbaa !2289
  %power47 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %66, i32 0, i32 1, !dbg !9541
  %67 = load i8, i8* %power47, align 1, !dbg !9541, !tbaa !6250
  %conv48 = zext i8 %67 to i32, !dbg !9540
  %sub49 = sub i32 %conv48, 1, !dbg !9542
  %sh_prom50 = zext i32 %sub49 to i64, !dbg !9543
  %shr51 = lshr i64 %65, %sh_prom50, !dbg !9543
  %tobool52 = icmp ne i64 %shr51, 0, !dbg !9543
  br i1 %tobool52, label %if.then.53, label %if.end.159, !dbg !9544

if.then.53:                                       ; preds = %if.end.46
  call void @llvm.lifetime.start(i64 1, i8* %newPower) #2, !dbg !9545
  call void @llvm.dbg.declare(metadata i8* %newPower, metadata !1354, metadata !2293), !dbg !9546
  %68 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !9547, !tbaa !2289
  %power54 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %68, i32 0, i32 1, !dbg !9548
  %69 = load i8, i8* %power54, align 1, !dbg !9548, !tbaa !6250
  %conv55 = zext i8 %69 to i32, !dbg !9547
  %add56 = add i32 %conv55, 1, !dbg !9549
  %conv57 = trunc i32 %add56 to i8, !dbg !9547
  store i8 %conv57, i8* %newPower, align 1, !dbg !9546, !tbaa !2307
  %70 = bitcast i64* %newSize to i8*, !dbg !9550
  call void @llvm.lifetime.start(i64 8, i8* %70) #2, !dbg !9550
  call void @llvm.dbg.declare(metadata i64* %newSize, metadata !1357, metadata !2293), !dbg !9551
  %71 = load i8, i8* %newPower, align 1, !dbg !9552, !tbaa !2307
  %conv58 = zext i8 %71 to i32, !dbg !9552
  %sh_prom59 = zext i32 %conv58 to i64, !dbg !9553
  %shl = shl i64 1, %sh_prom59, !dbg !9553
  store i64 %shl, i64* %newSize, align 8, !dbg !9551, !tbaa !3400
  %72 = bitcast i64* %newMask to i8*, !dbg !9554
  call void @llvm.lifetime.start(i64 8, i8* %72) #2, !dbg !9554
  call void @llvm.dbg.declare(metadata i64* %newMask, metadata !1358, metadata !2293), !dbg !9555
  %73 = load i64, i64* %newSize, align 8, !dbg !9556, !tbaa !3400
  %sub60 = sub i64 %73, 1, !dbg !9557
  store i64 %sub60, i64* %newMask, align 8, !dbg !9555, !tbaa !3400
  %74 = bitcast i64* %tsize61 to i8*, !dbg !9558
  call void @llvm.lifetime.start(i64 8, i8* %74) #2, !dbg !9558
  call void @llvm.dbg.declare(metadata i64* %tsize61, metadata !1359, metadata !2293), !dbg !9559
  %75 = load i64, i64* %newSize, align 8, !dbg !9560, !tbaa !3400
  %mul62 = mul i64 %75, 8, !dbg !9561
  store i64 %mul62, i64* %tsize61, align 8, !dbg !9559, !tbaa !3400
  %76 = bitcast %struct.NAMED*** %newV to i8*, !dbg !9562
  call void @llvm.lifetime.start(i64 8, i8* %76) #2, !dbg !9562
  call void @llvm.dbg.declare(metadata %struct.NAMED*** %newV, metadata !1360, metadata !2293), !dbg !9563
  %77 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !9564, !tbaa !2289
  %mem63 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %77, i32 0, i32 4, !dbg !9565
  %78 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mem63, align 8, !dbg !9565, !tbaa !6267
  %malloc_fcn64 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %78, i32 0, i32 0, !dbg !9566
  %79 = load i8* (i64)*, i8* (i64)** %malloc_fcn64, align 8, !dbg !9566, !tbaa !2331
  %80 = load i64, i64* %tsize61, align 8, !dbg !9567, !tbaa !3400
  %call65 = call i8* %79(i64 %80), !dbg !9564
  %81 = bitcast i8* %call65 to %struct.NAMED**, !dbg !9568
  store %struct.NAMED** %81, %struct.NAMED*** %newV, align 8, !dbg !9563, !tbaa !2289
  %82 = load %struct.NAMED**, %struct.NAMED*** %newV, align 8, !dbg !9569, !tbaa !2289
  %tobool66 = icmp ne %struct.NAMED** %82, null, !dbg !9569
  br i1 %tobool66, label %if.end.68, label %if.then.67, !dbg !9571

if.then.67:                                       ; preds = %if.then.53
  store %struct.NAMED* null, %struct.NAMED** %retval, !dbg !9572
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.152, !dbg !9572

if.end.68:                                        ; preds = %if.then.53
  %83 = load %struct.NAMED**, %struct.NAMED*** %newV, align 8, !dbg !9573, !tbaa !2289
  %84 = bitcast %struct.NAMED** %83 to i8*, !dbg !9574
  %85 = load i64, i64* %tsize61, align 8, !dbg !9575, !tbaa !3400
  call void @llvm.memset.p0i8.i64(i8* %84, i8 0, i64 %85, i32 8, i1 false), !dbg !9574
  store i64 0, i64* %i, align 8, !dbg !9576, !tbaa !3400
  br label %for.cond, !dbg !9577

for.cond:                                         ; preds = %for.inc, %if.end.68
  %86 = load i64, i64* %i, align 8, !dbg !9578, !tbaa !3400
  %87 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !9581, !tbaa !2289
  %size69 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %87, i32 0, i32 2, !dbg !9582
  %88 = load i64, i64* %size69, align 8, !dbg !9582, !tbaa !6254
  %cmp70 = icmp ult i64 %86, %88, !dbg !9583
  br i1 %cmp70, label %for.body, label %for.end, !dbg !9584

for.body:                                         ; preds = %for.cond
  %89 = load i64, i64* %i, align 8, !dbg !9585, !tbaa !3400
  %90 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !9586, !tbaa !2289
  %v72 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %90, i32 0, i32 0, !dbg !9587
  %91 = load %struct.NAMED**, %struct.NAMED*** %v72, align 8, !dbg !9587, !tbaa !6262
  %arrayidx73 = getelementptr %struct.NAMED*, %struct.NAMED** %91, i64 %89, !dbg !9586
  %92 = load %struct.NAMED*, %struct.NAMED** %arrayidx73, align 8, !dbg !9586, !tbaa !2289
  %tobool74 = icmp ne %struct.NAMED* %92, null, !dbg !9586
  br i1 %tobool74, label %if.then.75, label %if.end.114, !dbg !9588

if.then.75:                                       ; preds = %for.body
  %93 = bitcast i64* %newHash to i8*, !dbg !9589
  call void @llvm.lifetime.start(i64 8, i8* %93) #2, !dbg !9589
  call void @llvm.dbg.declare(metadata i64* %newHash, metadata !1361, metadata !2293), !dbg !9590
  %94 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9591, !tbaa !2289
  %95 = load i64, i64* %i, align 8, !dbg !9592, !tbaa !3400
  %96 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !9593, !tbaa !2289
  %v76 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %96, i32 0, i32 0, !dbg !9594
  %97 = load %struct.NAMED**, %struct.NAMED*** %v76, align 8, !dbg !9594, !tbaa !6262
  %arrayidx77 = getelementptr %struct.NAMED*, %struct.NAMED** %97, i64 %95, !dbg !9593
  %98 = load %struct.NAMED*, %struct.NAMED** %arrayidx77, align 8, !dbg !9593, !tbaa !2289
  %name78 = getelementptr inbounds %struct.NAMED, %struct.NAMED* %98, i32 0, i32 0, !dbg !9595
  %99 = load i8*, i8** %name78, align 8, !dbg !9595, !tbaa !9495
  %call79 = call i64 @hash(%struct.XML_ParserStruct* %94, i8* %99), !dbg !9596
  store i64 %call79, i64* %newHash, align 8, !dbg !9590, !tbaa !3400
  %100 = bitcast i64* %j to i8*, !dbg !9597
  call void @llvm.lifetime.start(i64 8, i8* %100) #2, !dbg !9597
  call void @llvm.dbg.declare(metadata i64* %j, metadata !1366, metadata !2293), !dbg !9598
  %101 = load i64, i64* %newHash, align 8, !dbg !9599, !tbaa !3400
  %102 = load i64, i64* %newMask, align 8, !dbg !9600, !tbaa !3400
  %and80 = and i64 %101, %102, !dbg !9601
  store i64 %and80, i64* %j, align 8, !dbg !9598, !tbaa !3400
  store i8 0, i8* %step, align 1, !dbg !9602, !tbaa !2307
  br label %while.cond.81, !dbg !9603

while.cond.81:                                    ; preds = %cond.end.108, %if.then.75
  %103 = load i64, i64* %j, align 8, !dbg !9604, !tbaa !3400
  %104 = load %struct.NAMED**, %struct.NAMED*** %newV, align 8, !dbg !9607, !tbaa !2289
  %arrayidx82 = getelementptr %struct.NAMED*, %struct.NAMED** %104, i64 %103, !dbg !9607
  %105 = load %struct.NAMED*, %struct.NAMED** %arrayidx82, align 8, !dbg !9607, !tbaa !2289
  %tobool83 = icmp ne %struct.NAMED* %105, null, !dbg !9603
  br i1 %tobool83, label %while.body.84, label %while.end.110, !dbg !9603

while.body.84:                                    ; preds = %while.cond.81
  %106 = load i8, i8* %step, align 1, !dbg !9608, !tbaa !2307
  %tobool85 = icmp ne i8 %106, 0, !dbg !9608
  br i1 %tobool85, label %if.end.97, label %if.then.86, !dbg !9611

if.then.86:                                       ; preds = %while.body.84
  %107 = load i64, i64* %newHash, align 8, !dbg !9612, !tbaa !3400
  %108 = load i64, i64* %newMask, align 8, !dbg !9613, !tbaa !3400
  %neg87 = xor i64 %108, -1, !dbg !9614
  %and88 = and i64 %107, %neg87, !dbg !9615
  %109 = load i8, i8* %newPower, align 1, !dbg !9616, !tbaa !2307
  %conv89 = zext i8 %109 to i32, !dbg !9617
  %sub90 = sub i32 %conv89, 1, !dbg !9618
  %sh_prom91 = zext i32 %sub90 to i64, !dbg !9619
  %shr92 = lshr i64 %and88, %sh_prom91, !dbg !9619
  %110 = load i64, i64* %newMask, align 8, !dbg !9620, !tbaa !3400
  %shr93 = lshr i64 %110, 2, !dbg !9621
  %and94 = and i64 %shr92, %shr93, !dbg !9622
  %or95 = or i64 %and94, 1, !dbg !9623
  %conv96 = trunc i64 %or95 to i8, !dbg !9624
  store i8 %conv96, i8* %step, align 1, !dbg !9625, !tbaa !2307
  br label %if.end.97, !dbg !9626

if.end.97:                                        ; preds = %if.then.86, %while.body.84
  %111 = load i64, i64* %j, align 8, !dbg !9627, !tbaa !3400
  %112 = load i8, i8* %step, align 1, !dbg !9628, !tbaa !2307
  %conv98 = zext i8 %112 to i64, !dbg !9628
  %cmp99 = icmp ult i64 %111, %conv98, !dbg !9629
  br i1 %cmp99, label %cond.true.101, label %cond.false.105, !dbg !9627

cond.true.101:                                    ; preds = %if.end.97
  %113 = load i64, i64* %newSize, align 8, !dbg !9630, !tbaa !3400
  %114 = load i8, i8* %step, align 1, !dbg !9632, !tbaa !2307
  %conv102 = zext i8 %114 to i64, !dbg !9632
  %sub103 = sub i64 %113, %conv102, !dbg !9633
  %115 = load i64, i64* %j, align 8, !dbg !9634, !tbaa !3400
  %add104 = add i64 %115, %sub103, !dbg !9634
  store i64 %add104, i64* %j, align 8, !dbg !9634, !tbaa !3400
  br label %cond.end.108, !dbg !9627

cond.false.105:                                   ; preds = %if.end.97
  %116 = load i8, i8* %step, align 1, !dbg !9635, !tbaa !2307
  %conv106 = zext i8 %116 to i64, !dbg !9635
  %117 = load i64, i64* %j, align 8, !dbg !9637, !tbaa !3400
  %sub107 = sub i64 %117, %conv106, !dbg !9637
  store i64 %sub107, i64* %j, align 8, !dbg !9637, !tbaa !3400
  br label %cond.end.108, !dbg !9627

cond.end.108:                                     ; preds = %cond.false.105, %cond.true.101
  %cond109 = phi i64 [ %add104, %cond.true.101 ], [ %sub107, %cond.false.105 ], !dbg !9627
  br label %while.cond.81, !dbg !9603

while.end.110:                                    ; preds = %while.cond.81
  %118 = load i64, i64* %i, align 8, !dbg !9638, !tbaa !3400
  %119 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !9639, !tbaa !2289
  %v111 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %119, i32 0, i32 0, !dbg !9640
  %120 = load %struct.NAMED**, %struct.NAMED*** %v111, align 8, !dbg !9640, !tbaa !6262
  %arrayidx112 = getelementptr %struct.NAMED*, %struct.NAMED** %120, i64 %118, !dbg !9639
  %121 = load %struct.NAMED*, %struct.NAMED** %arrayidx112, align 8, !dbg !9639, !tbaa !2289
  %122 = load i64, i64* %j, align 8, !dbg !9641, !tbaa !3400
  %123 = load %struct.NAMED**, %struct.NAMED*** %newV, align 8, !dbg !9642, !tbaa !2289
  %arrayidx113 = getelementptr %struct.NAMED*, %struct.NAMED** %123, i64 %122, !dbg !9642
  store %struct.NAMED* %121, %struct.NAMED** %arrayidx113, align 8, !dbg !9643, !tbaa !2289
  %124 = bitcast i64* %j to i8*, !dbg !9644
  call void @llvm.lifetime.end(i64 8, i8* %124) #2, !dbg !9644
  %125 = bitcast i64* %newHash to i8*, !dbg !9644
  call void @llvm.lifetime.end(i64 8, i8* %125) #2, !dbg !9644
  br label %if.end.114, !dbg !9645

if.end.114:                                       ; preds = %while.end.110, %for.body
  br label %for.inc, !dbg !9646

for.inc:                                          ; preds = %if.end.114
  %126 = load i64, i64* %i, align 8, !dbg !9648, !tbaa !3400
  %inc = add i64 %126, 1, !dbg !9648
  store i64 %inc, i64* %i, align 8, !dbg !9648, !tbaa !3400
  br label %for.cond, !dbg !9649

for.end:                                          ; preds = %for.cond
  %127 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !9650, !tbaa !2289
  %mem115 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %127, i32 0, i32 4, !dbg !9651
  %128 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mem115, align 8, !dbg !9651, !tbaa !6267
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %128, i32 0, i32 2, !dbg !9652
  %129 = load void (i8*)*, void (i8*)** %free_fcn, align 8, !dbg !9652, !tbaa !2356
  %130 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !9653, !tbaa !2289
  %v116 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %130, i32 0, i32 0, !dbg !9654
  %131 = load %struct.NAMED**, %struct.NAMED*** %v116, align 8, !dbg !9654, !tbaa !6262
  %132 = bitcast %struct.NAMED** %131 to i8*, !dbg !9653
  call void %129(i8* %132), !dbg !9650
  %133 = load %struct.NAMED**, %struct.NAMED*** %newV, align 8, !dbg !9655, !tbaa !2289
  %134 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !9656, !tbaa !2289
  %v117 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %134, i32 0, i32 0, !dbg !9657
  store %struct.NAMED** %133, %struct.NAMED*** %v117, align 8, !dbg !9658, !tbaa !6262
  %135 = load i8, i8* %newPower, align 1, !dbg !9659, !tbaa !2307
  %136 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !9660, !tbaa !2289
  %power118 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %136, i32 0, i32 1, !dbg !9661
  store i8 %135, i8* %power118, align 1, !dbg !9662, !tbaa !6250
  %137 = load i64, i64* %newSize, align 8, !dbg !9663, !tbaa !3400
  %138 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !9664, !tbaa !2289
  %size119 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %138, i32 0, i32 2, !dbg !9665
  store i64 %137, i64* %size119, align 8, !dbg !9666, !tbaa !6254
  %139 = load i64, i64* %h, align 8, !dbg !9667, !tbaa !3400
  %140 = load i64, i64* %newMask, align 8, !dbg !9668, !tbaa !3400
  %and120 = and i64 %139, %140, !dbg !9669
  store i64 %and120, i64* %i, align 8, !dbg !9670, !tbaa !3400
  store i8 0, i8* %step, align 1, !dbg !9671, !tbaa !2307
  br label %while.cond.121, !dbg !9672

while.cond.121:                                   ; preds = %cond.end.149, %for.end
  %141 = load i64, i64* %i, align 8, !dbg !9673, !tbaa !3400
  %142 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !9676, !tbaa !2289
  %v122 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %142, i32 0, i32 0, !dbg !9677
  %143 = load %struct.NAMED**, %struct.NAMED*** %v122, align 8, !dbg !9677, !tbaa !6262
  %arrayidx123 = getelementptr %struct.NAMED*, %struct.NAMED** %143, i64 %141, !dbg !9676
  %144 = load %struct.NAMED*, %struct.NAMED** %arrayidx123, align 8, !dbg !9676, !tbaa !2289
  %tobool124 = icmp ne %struct.NAMED* %144, null, !dbg !9672
  br i1 %tobool124, label %while.body.125, label %while.end.151, !dbg !9672

while.body.125:                                   ; preds = %while.cond.121
  %145 = load i8, i8* %step, align 1, !dbg !9678, !tbaa !2307
  %tobool126 = icmp ne i8 %145, 0, !dbg !9678
  br i1 %tobool126, label %if.end.138, label %if.then.127, !dbg !9681

if.then.127:                                      ; preds = %while.body.125
  %146 = load i64, i64* %h, align 8, !dbg !9682, !tbaa !3400
  %147 = load i64, i64* %newMask, align 8, !dbg !9683, !tbaa !3400
  %neg128 = xor i64 %147, -1, !dbg !9684
  %and129 = and i64 %146, %neg128, !dbg !9685
  %148 = load i8, i8* %newPower, align 1, !dbg !9686, !tbaa !2307
  %conv130 = zext i8 %148 to i32, !dbg !9687
  %sub131 = sub i32 %conv130, 1, !dbg !9688
  %sh_prom132 = zext i32 %sub131 to i64, !dbg !9689
  %shr133 = lshr i64 %and129, %sh_prom132, !dbg !9689
  %149 = load i64, i64* %newMask, align 8, !dbg !9690, !tbaa !3400
  %shr134 = lshr i64 %149, 2, !dbg !9691
  %and135 = and i64 %shr133, %shr134, !dbg !9692
  %or136 = or i64 %and135, 1, !dbg !9693
  %conv137 = trunc i64 %or136 to i8, !dbg !9694
  store i8 %conv137, i8* %step, align 1, !dbg !9695, !tbaa !2307
  br label %if.end.138, !dbg !9696

if.end.138:                                       ; preds = %if.then.127, %while.body.125
  %150 = load i64, i64* %i, align 8, !dbg !9697, !tbaa !3400
  %151 = load i8, i8* %step, align 1, !dbg !9698, !tbaa !2307
  %conv139 = zext i8 %151 to i64, !dbg !9698
  %cmp140 = icmp ult i64 %150, %conv139, !dbg !9699
  br i1 %cmp140, label %cond.true.142, label %cond.false.146, !dbg !9697

cond.true.142:                                    ; preds = %if.end.138
  %152 = load i64, i64* %newSize, align 8, !dbg !9700, !tbaa !3400
  %153 = load i8, i8* %step, align 1, !dbg !9702, !tbaa !2307
  %conv143 = zext i8 %153 to i64, !dbg !9702
  %sub144 = sub i64 %152, %conv143, !dbg !9703
  %154 = load i64, i64* %i, align 8, !dbg !9704, !tbaa !3400
  %add145 = add i64 %154, %sub144, !dbg !9704
  store i64 %add145, i64* %i, align 8, !dbg !9704, !tbaa !3400
  br label %cond.end.149, !dbg !9697

cond.false.146:                                   ; preds = %if.end.138
  %155 = load i8, i8* %step, align 1, !dbg !9705, !tbaa !2307
  %conv147 = zext i8 %155 to i64, !dbg !9705
  %156 = load i64, i64* %i, align 8, !dbg !9707, !tbaa !3400
  %sub148 = sub i64 %156, %conv147, !dbg !9707
  store i64 %sub148, i64* %i, align 8, !dbg !9707, !tbaa !3400
  br label %cond.end.149, !dbg !9697

cond.end.149:                                     ; preds = %cond.false.146, %cond.true.142
  %cond150 = phi i64 [ %add145, %cond.true.142 ], [ %sub148, %cond.false.146 ], !dbg !9697
  br label %while.cond.121, !dbg !9672

while.end.151:                                    ; preds = %while.cond.121
  store i32 0, i32* %cleanup.dest.slot, !dbg !9708
  br label %cleanup.152, !dbg !9708

cleanup.152:                                      ; preds = %while.end.151, %if.then.67
  %157 = bitcast %struct.NAMED*** %newV to i8*, !dbg !9709
  call void @llvm.lifetime.end(i64 8, i8* %157) #2, !dbg !9709
  %158 = bitcast i64* %tsize61 to i8*, !dbg !9709
  call void @llvm.lifetime.end(i64 8, i8* %158) #2, !dbg !9709
  %159 = bitcast i64* %newMask to i8*, !dbg !9709
  call void @llvm.lifetime.end(i64 8, i8* %159) #2, !dbg !9709
  %160 = bitcast i64* %newSize to i8*, !dbg !9709
  call void @llvm.lifetime.end(i64 8, i8* %160) #2, !dbg !9709
  call void @llvm.lifetime.end(i64 1, i8* %newPower) #2, !dbg !9709
  %cleanup.dest.157 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.157, label %cleanup.160 [
    i32 0, label %cleanup.cont.158
  ]

cleanup.cont.158:                                 ; preds = %cleanup.152
  br label %if.end.159, !dbg !9711

if.end.159:                                       ; preds = %cleanup.cont.158, %if.end.46
  store i32 0, i32* %cleanup.dest.slot, !dbg !9712
  br label %cleanup.160, !dbg !9712

cleanup.160:                                      ; preds = %if.end.159, %cleanup.152, %if.then.45, %if.then.23
  call void @llvm.lifetime.end(i64 1, i8* %step) #2, !dbg !9712
  %161 = bitcast i64* %mask to i8*, !dbg !9713
  call void @llvm.lifetime.end(i64 8, i8* %161) #2, !dbg !9713
  %162 = bitcast i64* %h to i8*, !dbg !9713
  call void @llvm.lifetime.end(i64 8, i8* %162) #2, !dbg !9713
  %cleanup.dest.163 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.163, label %cleanup.185 [
    i32 0, label %cleanup.cont.164
  ]

cleanup.cont.164:                                 ; preds = %cleanup.160
  br label %if.end.165

if.end.165:                                       ; preds = %cleanup.cont.164, %cleanup.cont
  %163 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !9714, !tbaa !2289
  %mem166 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %163, i32 0, i32 4, !dbg !9715
  %164 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mem166, align 8, !dbg !9715, !tbaa !6267
  %malloc_fcn167 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %164, i32 0, i32 0, !dbg !9716
  %165 = load i8* (i64)*, i8* (i64)** %malloc_fcn167, align 8, !dbg !9716, !tbaa !2331
  %166 = load i64, i64* %createSize.addr, align 8, !dbg !9717, !tbaa !3400
  %call168 = call i8* %165(i64 %166), !dbg !9714
  %167 = bitcast i8* %call168 to %struct.NAMED*, !dbg !9718
  %168 = load i64, i64* %i, align 8, !dbg !9719, !tbaa !3400
  %169 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !9720, !tbaa !2289
  %v169 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %169, i32 0, i32 0, !dbg !9721
  %170 = load %struct.NAMED**, %struct.NAMED*** %v169, align 8, !dbg !9721, !tbaa !6262
  %arrayidx170 = getelementptr %struct.NAMED*, %struct.NAMED** %170, i64 %168, !dbg !9720
  store %struct.NAMED* %167, %struct.NAMED** %arrayidx170, align 8, !dbg !9722, !tbaa !2289
  %171 = load i64, i64* %i, align 8, !dbg !9723, !tbaa !3400
  %172 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !9725, !tbaa !2289
  %v171 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %172, i32 0, i32 0, !dbg !9726
  %173 = load %struct.NAMED**, %struct.NAMED*** %v171, align 8, !dbg !9726, !tbaa !6262
  %arrayidx172 = getelementptr %struct.NAMED*, %struct.NAMED** %173, i64 %171, !dbg !9725
  %174 = load %struct.NAMED*, %struct.NAMED** %arrayidx172, align 8, !dbg !9725, !tbaa !2289
  %tobool173 = icmp ne %struct.NAMED* %174, null, !dbg !9725
  br i1 %tobool173, label %if.end.175, label %if.then.174, !dbg !9727

if.then.174:                                      ; preds = %if.end.165
  store %struct.NAMED* null, %struct.NAMED** %retval, !dbg !9728
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.185, !dbg !9728

if.end.175:                                       ; preds = %if.end.165
  %175 = load i64, i64* %i, align 8, !dbg !9729, !tbaa !3400
  %176 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !9730, !tbaa !2289
  %v176 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %176, i32 0, i32 0, !dbg !9731
  %177 = load %struct.NAMED**, %struct.NAMED*** %v176, align 8, !dbg !9731, !tbaa !6262
  %arrayidx177 = getelementptr %struct.NAMED*, %struct.NAMED** %177, i64 %175, !dbg !9730
  %178 = load %struct.NAMED*, %struct.NAMED** %arrayidx177, align 8, !dbg !9730, !tbaa !2289
  %179 = bitcast %struct.NAMED* %178 to i8*, !dbg !9732
  %180 = load i64, i64* %createSize.addr, align 8, !dbg !9733, !tbaa !3400
  call void @llvm.memset.p0i8.i64(i8* %179, i8 0, i64 %180, i32 8, i1 false), !dbg !9732
  %181 = load i8*, i8** %name.addr, align 8, !dbg !9734, !tbaa !2289
  %182 = load i64, i64* %i, align 8, !dbg !9735, !tbaa !3400
  %183 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !9736, !tbaa !2289
  %v178 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %183, i32 0, i32 0, !dbg !9737
  %184 = load %struct.NAMED**, %struct.NAMED*** %v178, align 8, !dbg !9737, !tbaa !6262
  %arrayidx179 = getelementptr %struct.NAMED*, %struct.NAMED** %184, i64 %182, !dbg !9736
  %185 = load %struct.NAMED*, %struct.NAMED** %arrayidx179, align 8, !dbg !9736, !tbaa !2289
  %name180 = getelementptr inbounds %struct.NAMED, %struct.NAMED* %185, i32 0, i32 0, !dbg !9738
  store i8* %181, i8** %name180, align 8, !dbg !9739, !tbaa !9495
  %186 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !9740, !tbaa !2289
  %used181 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %186, i32 0, i32 3, !dbg !9741
  %187 = load i64, i64* %used181, align 8, !dbg !9742, !tbaa !6258
  %inc182 = add i64 %187, 1, !dbg !9742
  store i64 %inc182, i64* %used181, align 8, !dbg !9742, !tbaa !6258
  %188 = load i64, i64* %i, align 8, !dbg !9743, !tbaa !3400
  %189 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !9744, !tbaa !2289
  %v183 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %189, i32 0, i32 0, !dbg !9745
  %190 = load %struct.NAMED**, %struct.NAMED*** %v183, align 8, !dbg !9745, !tbaa !6262
  %arrayidx184 = getelementptr %struct.NAMED*, %struct.NAMED** %190, i64 %188, !dbg !9744
  %191 = load %struct.NAMED*, %struct.NAMED** %arrayidx184, align 8, !dbg !9744, !tbaa !2289
  store %struct.NAMED* %191, %struct.NAMED** %retval, !dbg !9746
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.185, !dbg !9746

cleanup.185:                                      ; preds = %if.end.175, %if.then.174, %cleanup.160, %cleanup
  %192 = bitcast i64* %i to i8*, !dbg !9747
  call void @llvm.lifetime.end(i64 8, i8* %192) #2, !dbg !9747
  %193 = load %struct.NAMED*, %struct.NAMED** %retval, !dbg !9747
  ret %struct.NAMED* %193, !dbg !9747
}

; Function Attrs: nounwind uwtable
define internal void @normalizePublicId(i8* %publicId) #0 {
entry:
  %publicId.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  %s = alloca i8*, align 8
  store i8* %publicId, i8** %publicId.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %publicId.addr, metadata !1384, metadata !2293), !dbg !9748
  %0 = bitcast i8** %p to i8*, !dbg !9749
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !9749
  call void @llvm.dbg.declare(metadata i8** %p, metadata !1385, metadata !2293), !dbg !9750
  %1 = load i8*, i8** %publicId.addr, align 8, !dbg !9751, !tbaa !2289
  store i8* %1, i8** %p, align 8, !dbg !9750, !tbaa !2289
  %2 = bitcast i8** %s to i8*, !dbg !9752
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !9752
  call void @llvm.dbg.declare(metadata i8** %s, metadata !1386, metadata !2293), !dbg !9753
  %3 = load i8*, i8** %publicId.addr, align 8, !dbg !9754, !tbaa !2289
  store i8* %3, i8** %s, align 8, !dbg !9756, !tbaa !2289
  br label %for.cond, !dbg !9757

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i8*, i8** %s, align 8, !dbg !9758, !tbaa !2289
  %5 = load i8, i8* %4, align 1, !dbg !9762, !tbaa !2307
  %tobool = icmp ne i8 %5, 0, !dbg !9763
  br i1 %tobool, label %for.body, label %for.end, !dbg !9763

for.body:                                         ; preds = %for.cond
  %6 = load i8*, i8** %s, align 8, !dbg !9764, !tbaa !2289
  %7 = load i8, i8* %6, align 1, !dbg !9766, !tbaa !2307
  %conv = sext i8 %7 to i32, !dbg !9766
  switch i32 %conv, label %sw.default [
    i32 32, label %sw.bb
    i32 13, label %sw.bb
    i32 10, label %sw.bb
  ], !dbg !9767

sw.bb:                                            ; preds = %for.body, %for.body, %for.body
  %8 = load i8*, i8** %p, align 8, !dbg !9768, !tbaa !2289
  %9 = load i8*, i8** %publicId.addr, align 8, !dbg !9771, !tbaa !2289
  %cmp = icmp ne i8* %8, %9, !dbg !9772
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !9773

land.lhs.true:                                    ; preds = %sw.bb
  %10 = load i8*, i8** %p, align 8, !dbg !9774, !tbaa !2289
  %arrayidx = getelementptr i8, i8* %10, i64 -1, !dbg !9774
  %11 = load i8, i8* %arrayidx, align 1, !dbg !9774, !tbaa !2307
  %conv2 = sext i8 %11 to i32, !dbg !9774
  %cmp3 = icmp ne i32 %conv2, 32, !dbg !9776
  br i1 %cmp3, label %if.then, label %if.end, !dbg !9777

if.then:                                          ; preds = %land.lhs.true
  %12 = load i8*, i8** %p, align 8, !dbg !9778, !tbaa !2289
  %incdec.ptr = getelementptr i8, i8* %12, i32 1, !dbg !9778
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !9778, !tbaa !2289
  store i8 32, i8* %12, align 1, !dbg !9779, !tbaa !2307
  br label %if.end, !dbg !9780

if.end:                                           ; preds = %if.then, %land.lhs.true, %sw.bb
  br label %sw.epilog, !dbg !9781

sw.default:                                       ; preds = %for.body
  %13 = load i8*, i8** %s, align 8, !dbg !9782, !tbaa !2289
  %14 = load i8, i8* %13, align 1, !dbg !9783, !tbaa !2307
  %15 = load i8*, i8** %p, align 8, !dbg !9784, !tbaa !2289
  %incdec.ptr5 = getelementptr i8, i8* %15, i32 1, !dbg !9784
  store i8* %incdec.ptr5, i8** %p, align 8, !dbg !9784, !tbaa !2289
  store i8 %14, i8* %15, align 1, !dbg !9785, !tbaa !2307
  br label %sw.epilog, !dbg !9786

sw.epilog:                                        ; preds = %sw.default, %if.end
  br label %for.inc, !dbg !9787

for.inc:                                          ; preds = %sw.epilog
  %16 = load i8*, i8** %s, align 8, !dbg !9788, !tbaa !2289
  %incdec.ptr6 = getelementptr i8, i8* %16, i32 1, !dbg !9788
  store i8* %incdec.ptr6, i8** %s, align 8, !dbg !9788, !tbaa !2289
  br label %for.cond, !dbg !9789

for.end:                                          ; preds = %for.cond
  %17 = load i8*, i8** %p, align 8, !dbg !9790, !tbaa !2289
  %18 = load i8*, i8** %publicId.addr, align 8, !dbg !9792, !tbaa !2289
  %cmp7 = icmp ne i8* %17, %18, !dbg !9793
  br i1 %cmp7, label %land.lhs.true.9, label %if.end.16, !dbg !9794

land.lhs.true.9:                                  ; preds = %for.end
  %19 = load i8*, i8** %p, align 8, !dbg !9795, !tbaa !2289
  %arrayidx10 = getelementptr i8, i8* %19, i64 -1, !dbg !9795
  %20 = load i8, i8* %arrayidx10, align 1, !dbg !9795, !tbaa !2307
  %conv11 = sext i8 %20 to i32, !dbg !9795
  %cmp12 = icmp eq i32 %conv11, 32, !dbg !9797
  br i1 %cmp12, label %if.then.14, label %if.end.16, !dbg !9798

if.then.14:                                       ; preds = %land.lhs.true.9
  %21 = load i8*, i8** %p, align 8, !dbg !9799, !tbaa !2289
  %incdec.ptr15 = getelementptr i8, i8* %21, i32 -1, !dbg !9799
  store i8* %incdec.ptr15, i8** %p, align 8, !dbg !9799, !tbaa !2289
  br label %if.end.16, !dbg !9799

if.end.16:                                        ; preds = %if.then.14, %land.lhs.true.9, %for.end
  %22 = load i8*, i8** %p, align 8, !dbg !9800, !tbaa !2289
  store i8 0, i8* %22, align 1, !dbg !9801, !tbaa !2307
  %23 = bitcast i8** %s to i8*, !dbg !9802
  call void @llvm.lifetime.end(i64 8, i8* %23) #2, !dbg !9802
  %24 = bitcast i8** %p to i8*, !dbg !9802
  call void @llvm.lifetime.end(i64 8, i8* %24) #2, !dbg !9802
  ret void, !dbg !9802
}

; Function Attrs: nounwind uwtable
define internal i32 @contentProcessor(%struct.XML_ParserStruct* %parser, i8* %start, i8* %end, i8** %endPtr) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %endPtr.addr = alloca i8**, align 8
  %result = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1389, metadata !2293), !dbg !9803
  store i8* %start, i8** %start.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %start.addr, metadata !1390, metadata !2293), !dbg !9804
  store i8* %end, i8** %end.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !1391, metadata !2293), !dbg !9805
  store i8** %endPtr, i8*** %endPtr.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8*** %endPtr.addr, metadata !1392, metadata !2293), !dbg !9806
  %0 = bitcast i32* %result to i8*, !dbg !9807
  call void @llvm.lifetime.start(i64 4, i8* %0) #2, !dbg !9807
  call void @llvm.dbg.declare(metadata i32* %result, metadata !1393, metadata !2293), !dbg !9808
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9809, !tbaa !2289
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9810, !tbaa !2289
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 34, !dbg !9811
  %3 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !9811, !tbaa !5191
  %4 = load i8*, i8** %start.addr, align 8, !dbg !9812, !tbaa !2289
  %5 = load i8*, i8** %end.addr, align 8, !dbg !9813, !tbaa !2289
  %6 = load i8**, i8*** %endPtr.addr, align 8, !dbg !9814, !tbaa !2289
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9815, !tbaa !2289
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 85, !dbg !9816
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 1, !dbg !9817
  %8 = load i8, i8* %finalBuffer, align 1, !dbg !9817, !tbaa !5150
  %tobool = icmp ne i8 %8, 0, !dbg !9818
  %lnot = xor i1 %tobool, true, !dbg !9818
  %lnot.ext = zext i1 %lnot to i32, !dbg !9818
  %conv = trunc i32 %lnot.ext to i8, !dbg !9819
  %call = call i32 @doContent(%struct.XML_ParserStruct* %1, i32 0, %struct.encoding* %3, i8* %4, i8* %5, i8** %6, i8 zeroext %conv), !dbg !9820
  store i32 %call, i32* %result, align 4, !dbg !9808, !tbaa !2307
  %9 = load i32, i32* %result, align 4, !dbg !9821, !tbaa !2307
  %cmp = icmp eq i32 %9, 0, !dbg !9823
  br i1 %cmp, label %if.then, label %if.end.5, !dbg !9824

if.then:                                          ; preds = %entry
  %10 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9825, !tbaa !2289
  %call2 = call zeroext i8 @storeRawNames(%struct.XML_ParserStruct* %10), !dbg !9828
  %tobool3 = icmp ne i8 %call2, 0, !dbg !9828
  br i1 %tobool3, label %if.end, label %if.then.4, !dbg !9829

if.then.4:                                        ; preds = %if.then
  store i32 1, i32* %retval, !dbg !9830
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9830

if.end:                                           ; preds = %if.then
  br label %if.end.5, !dbg !9831

if.end.5:                                         ; preds = %if.end, %entry
  %11 = load i32, i32* %result, align 4, !dbg !9832, !tbaa !2307
  store i32 %11, i32* %retval, !dbg !9833
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9833

cleanup:                                          ; preds = %if.end.5, %if.then.4
  %12 = bitcast i32* %result to i8*, !dbg !9834
  call void @llvm.lifetime.end(i64 4, i8* %12) #2, !dbg !9834
  %13 = load i32, i32* %retval, !dbg !9834
  ret i32 %13, !dbg !9834
}

; Function Attrs: nounwind uwtable
define internal %struct.ELEMENT_TYPE* @getElementType(%struct.XML_ParserStruct* %parser, %struct.encoding* %enc, i8* %ptr, i8* %end) #0 {
entry:
  %retval = alloca %struct.ELEMENT_TYPE*, align 8
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %dtd = alloca %struct.DTD*, align 8
  %name = alloca i8*, align 8
  %ret = alloca %struct.ELEMENT_TYPE*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1734, metadata !2293), !dbg !9835
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !1735, metadata !2293), !dbg !9836
  store i8* %ptr, i8** %ptr.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !1736, metadata !2293), !dbg !9837
  store i8* %end, i8** %end.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !1737, metadata !2293), !dbg !9838
  %0 = bitcast %struct.DTD** %dtd to i8*, !dbg !9839
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !9839
  call void @llvm.dbg.declare(metadata %struct.DTD** %dtd, metadata !1738, metadata !2293), !dbg !9840
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9841, !tbaa !2289
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 65, !dbg !9842
  %2 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !9842, !tbaa !2478
  store %struct.DTD* %2, %struct.DTD** %dtd, align 8, !dbg !9840, !tbaa !2289
  %3 = bitcast i8** %name to i8*, !dbg !9843
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !9843
  call void @llvm.dbg.declare(metadata i8** %name, metadata !1739, metadata !2293), !dbg !9844
  %4 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !9845, !tbaa !2289
  %pool = getelementptr inbounds %struct.DTD, %struct.DTD* %4, i32 0, i32 4, !dbg !9846
  %5 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !9847, !tbaa !2289
  %6 = load i8*, i8** %ptr.addr, align 8, !dbg !9848, !tbaa !2289
  %7 = load i8*, i8** %end.addr, align 8, !dbg !9849, !tbaa !2289
  %call = call i8* @poolStoreString(%struct.STRING_POOL* %pool, %struct.encoding* %5, i8* %6, i8* %7), !dbg !9850
  store i8* %call, i8** %name, align 8, !dbg !9844, !tbaa !2289
  %8 = bitcast %struct.ELEMENT_TYPE** %ret to i8*, !dbg !9851
  call void @llvm.lifetime.start(i64 8, i8* %8) #2, !dbg !9851
  call void @llvm.dbg.declare(metadata %struct.ELEMENT_TYPE** %ret, metadata !1740, metadata !2293), !dbg !9852
  %9 = load i8*, i8** %name, align 8, !dbg !9853, !tbaa !2289
  %tobool = icmp ne i8* %9, null, !dbg !9853
  br i1 %tobool, label %if.end, label %if.then, !dbg !9855

if.then:                                          ; preds = %entry
  store %struct.ELEMENT_TYPE* null, %struct.ELEMENT_TYPE** %retval, !dbg !9856
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9856

if.end:                                           ; preds = %entry
  %10 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9857, !tbaa !2289
  %11 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !9858, !tbaa !2289
  %elementTypes = getelementptr inbounds %struct.DTD, %struct.DTD* %11, i32 0, i32 1, !dbg !9859
  %12 = load i8*, i8** %name, align 8, !dbg !9860, !tbaa !2289
  %call1 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %10, %struct.HASH_TABLE* %elementTypes, i8* %12, i64 40), !dbg !9861
  %13 = bitcast %struct.NAMED* %call1 to %struct.ELEMENT_TYPE*, !dbg !9862
  store %struct.ELEMENT_TYPE* %13, %struct.ELEMENT_TYPE** %ret, align 8, !dbg !9863, !tbaa !2289
  %14 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %ret, align 8, !dbg !9864, !tbaa !2289
  %tobool2 = icmp ne %struct.ELEMENT_TYPE* %14, null, !dbg !9864
  br i1 %tobool2, label %if.end.4, label %if.then.3, !dbg !9866

if.then.3:                                        ; preds = %if.end
  store %struct.ELEMENT_TYPE* null, %struct.ELEMENT_TYPE** %retval, !dbg !9867
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9867

if.end.4:                                         ; preds = %if.end
  %15 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %ret, align 8, !dbg !9868, !tbaa !2289
  %name5 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %15, i32 0, i32 0, !dbg !9870
  %16 = load i8*, i8** %name5, align 8, !dbg !9870, !tbaa !3789
  %17 = load i8*, i8** %name, align 8, !dbg !9871, !tbaa !2289
  %cmp = icmp ne i8* %16, %17, !dbg !9872
  br i1 %cmp, label %if.then.6, label %if.else, !dbg !9873

if.then.6:                                        ; preds = %if.end.4
  %18 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !9874, !tbaa !2289
  %pool7 = getelementptr inbounds %struct.DTD, %struct.DTD* %18, i32 0, i32 4, !dbg !9875
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool7, i32 0, i32 4, !dbg !9876
  %19 = load i8*, i8** %start, align 8, !dbg !9876, !tbaa !2794
  %20 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !9877, !tbaa !2289
  %pool8 = getelementptr inbounds %struct.DTD, %struct.DTD* %20, i32 0, i32 4, !dbg !9878
  %ptr9 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool8, i32 0, i32 3, !dbg !9879
  store i8* %19, i8** %ptr9, align 8, !dbg !9880, !tbaa !2798
  br label %if.end.18, !dbg !9881

if.else:                                          ; preds = %if.end.4
  %21 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !9882, !tbaa !2289
  %pool10 = getelementptr inbounds %struct.DTD, %struct.DTD* %21, i32 0, i32 4, !dbg !9884
  %ptr11 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool10, i32 0, i32 3, !dbg !9885
  %22 = load i8*, i8** %ptr11, align 8, !dbg !9885, !tbaa !2798
  %23 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !9886, !tbaa !2289
  %pool12 = getelementptr inbounds %struct.DTD, %struct.DTD* %23, i32 0, i32 4, !dbg !9887
  %start13 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool12, i32 0, i32 4, !dbg !9888
  store i8* %22, i8** %start13, align 8, !dbg !9889, !tbaa !2794
  %24 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9890, !tbaa !2289
  %25 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %ret, align 8, !dbg !9892, !tbaa !2289
  %call14 = call i32 @setElementTypePrefix(%struct.XML_ParserStruct* %24, %struct.ELEMENT_TYPE* %25), !dbg !9893
  %tobool15 = icmp ne i32 %call14, 0, !dbg !9893
  br i1 %tobool15, label %if.end.17, label %if.then.16, !dbg !9894

if.then.16:                                       ; preds = %if.else
  store %struct.ELEMENT_TYPE* null, %struct.ELEMENT_TYPE** %retval, !dbg !9895
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9895

if.end.17:                                        ; preds = %if.else
  br label %if.end.18

if.end.18:                                        ; preds = %if.end.17, %if.then.6
  %26 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %ret, align 8, !dbg !9896, !tbaa !2289
  store %struct.ELEMENT_TYPE* %26, %struct.ELEMENT_TYPE** %retval, !dbg !9897
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9897

cleanup:                                          ; preds = %if.end.18, %if.then.16, %if.then.3, %if.then
  %27 = bitcast %struct.ELEMENT_TYPE** %ret to i8*, !dbg !9898
  call void @llvm.lifetime.end(i64 8, i8* %27) #2, !dbg !9898
  %28 = bitcast i8** %name to i8*, !dbg !9898
  call void @llvm.lifetime.end(i64 8, i8* %28) #2, !dbg !9898
  %29 = bitcast %struct.DTD** %dtd to i8*, !dbg !9898
  call void @llvm.lifetime.end(i64 8, i8* %29) #2, !dbg !9898
  %30 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %retval, !dbg !9898
  ret %struct.ELEMENT_TYPE* %30, !dbg !9898
}

; Function Attrs: nounwind uwtable
define internal %struct.attribute_id* @getAttributeId(%struct.XML_ParserStruct* %parser, %struct.encoding* %enc, i8* %start, i8* %end) #0 {
entry:
  %retval = alloca %struct.attribute_id*, align 8
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %start.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %dtd = alloca %struct.DTD*, align 8
  %id = alloca %struct.attribute_id*, align 8
  %name = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1745, metadata !2293), !dbg !9899
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !1746, metadata !2293), !dbg !9900
  store i8* %start, i8** %start.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %start.addr, metadata !1747, metadata !2293), !dbg !9901
  store i8* %end, i8** %end.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !1748, metadata !2293), !dbg !9902
  %0 = bitcast %struct.DTD** %dtd to i8*, !dbg !9903
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !9903
  call void @llvm.dbg.declare(metadata %struct.DTD** %dtd, metadata !1749, metadata !2293), !dbg !9904
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9905, !tbaa !2289
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 65, !dbg !9906
  %2 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !9906, !tbaa !2478
  store %struct.DTD* %2, %struct.DTD** %dtd, align 8, !dbg !9904, !tbaa !2289
  %3 = bitcast %struct.attribute_id** %id to i8*, !dbg !9907
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !9907
  call void @llvm.dbg.declare(metadata %struct.attribute_id** %id, metadata !1750, metadata !2293), !dbg !9908
  %4 = bitcast i8** %name to i8*, !dbg !9909
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !9909
  call void @llvm.dbg.declare(metadata i8** %name, metadata !1751, metadata !2293), !dbg !9910
  %5 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !9911, !tbaa !2289
  %pool = getelementptr inbounds %struct.DTD, %struct.DTD* %5, i32 0, i32 4, !dbg !9913
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool, i32 0, i32 3, !dbg !9914
  %6 = load i8*, i8** %ptr, align 8, !dbg !9914, !tbaa !2798
  %7 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !9915, !tbaa !2289
  %pool1 = getelementptr inbounds %struct.DTD, %struct.DTD* %7, i32 0, i32 4, !dbg !9916
  %end2 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool1, i32 0, i32 2, !dbg !9917
  %8 = load i8*, i8** %end2, align 8, !dbg !9917, !tbaa !2802
  %cmp = icmp eq i8* %6, %8, !dbg !9918
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !9919

land.lhs.true:                                    ; preds = %entry
  %9 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !9920, !tbaa !2289
  %pool3 = getelementptr inbounds %struct.DTD, %struct.DTD* %9, i32 0, i32 4, !dbg !9922
  %call = call zeroext i8 @poolGrow(%struct.STRING_POOL* %pool3), !dbg !9923
  %tobool = icmp ne i8 %call, 0, !dbg !9923
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !9924

cond.true:                                        ; preds = %land.lhs.true
  br i1 false, label %if.end, label %if.then, !dbg !9925

cond.false:                                       ; preds = %land.lhs.true, %entry
  %10 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !9927, !tbaa !2289
  %pool4 = getelementptr inbounds %struct.DTD, %struct.DTD* %10, i32 0, i32 4, !dbg !9930
  %ptr5 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool4, i32 0, i32 3, !dbg !9931
  %11 = load i8*, i8** %ptr5, align 8, !dbg !9932, !tbaa !2798
  %incdec.ptr = getelementptr i8, i8* %11, i32 1, !dbg !9932
  store i8* %incdec.ptr, i8** %ptr5, align 8, !dbg !9932, !tbaa !2798
  store i8 0, i8* %11, align 1, !dbg !9933, !tbaa !2307
  br i1 true, label %if.end, label %if.then, !dbg !9924

if.then:                                          ; preds = %cond.false, %cond.true
  store %struct.attribute_id* null, %struct.attribute_id** %retval, !dbg !9934
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.151, !dbg !9934

if.end:                                           ; preds = %cond.false, %cond.true
  %12 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !9935, !tbaa !2289
  %pool6 = getelementptr inbounds %struct.DTD, %struct.DTD* %12, i32 0, i32 4, !dbg !9936
  %13 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !9937, !tbaa !2289
  %14 = load i8*, i8** %start.addr, align 8, !dbg !9938, !tbaa !2289
  %15 = load i8*, i8** %end.addr, align 8, !dbg !9939, !tbaa !2289
  %call7 = call i8* @poolStoreString(%struct.STRING_POOL* %pool6, %struct.encoding* %13, i8* %14, i8* %15), !dbg !9940
  store i8* %call7, i8** %name, align 8, !dbg !9941, !tbaa !2289
  %16 = load i8*, i8** %name, align 8, !dbg !9942, !tbaa !2289
  %tobool8 = icmp ne i8* %16, null, !dbg !9942
  br i1 %tobool8, label %if.end.10, label %if.then.9, !dbg !9944

if.then.9:                                        ; preds = %if.end
  store %struct.attribute_id* null, %struct.attribute_id** %retval, !dbg !9945
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.151, !dbg !9945

if.end.10:                                        ; preds = %if.end
  %17 = load i8*, i8** %name, align 8, !dbg !9946, !tbaa !2289
  %incdec.ptr11 = getelementptr i8, i8* %17, i32 1, !dbg !9946
  store i8* %incdec.ptr11, i8** %name, align 8, !dbg !9946, !tbaa !2289
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9947, !tbaa !2289
  %19 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !9948, !tbaa !2289
  %attributeIds = getelementptr inbounds %struct.DTD, %struct.DTD* %19, i32 0, i32 2, !dbg !9949
  %20 = load i8*, i8** %name, align 8, !dbg !9950, !tbaa !2289
  %call12 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %18, %struct.HASH_TABLE* %attributeIds, i8* %20, i64 24), !dbg !9951
  %21 = bitcast %struct.NAMED* %call12 to %struct.attribute_id*, !dbg !9952
  store %struct.attribute_id* %21, %struct.attribute_id** %id, align 8, !dbg !9953, !tbaa !2289
  %22 = load %struct.attribute_id*, %struct.attribute_id** %id, align 8, !dbg !9954, !tbaa !2289
  %tobool13 = icmp ne %struct.attribute_id* %22, null, !dbg !9954
  br i1 %tobool13, label %if.end.15, label %if.then.14, !dbg !9956

if.then.14:                                       ; preds = %if.end.10
  store %struct.attribute_id* null, %struct.attribute_id** %retval, !dbg !9957
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.151, !dbg !9957

if.end.15:                                        ; preds = %if.end.10
  %23 = load %struct.attribute_id*, %struct.attribute_id** %id, align 8, !dbg !9958, !tbaa !2289
  %name16 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %23, i32 0, i32 0, !dbg !9959
  %24 = load i8*, i8** %name16, align 8, !dbg !9959, !tbaa !3701
  %25 = load i8*, i8** %name, align 8, !dbg !9960, !tbaa !2289
  %cmp17 = icmp ne i8* %24, %25, !dbg !9961
  br i1 %cmp17, label %if.then.18, label %if.else, !dbg !9962

if.then.18:                                       ; preds = %if.end.15
  %26 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !9963, !tbaa !2289
  %pool19 = getelementptr inbounds %struct.DTD, %struct.DTD* %26, i32 0, i32 4, !dbg !9964
  %start20 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool19, i32 0, i32 4, !dbg !9965
  %27 = load i8*, i8** %start20, align 8, !dbg !9965, !tbaa !2794
  %28 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !9966, !tbaa !2289
  %pool21 = getelementptr inbounds %struct.DTD, %struct.DTD* %28, i32 0, i32 4, !dbg !9967
  %ptr22 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool21, i32 0, i32 3, !dbg !9968
  store i8* %27, i8** %ptr22, align 8, !dbg !9969, !tbaa !2798
  br label %if.end.150, !dbg !9970

if.else:                                          ; preds = %if.end.15
  %29 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !9971, !tbaa !2289
  %pool23 = getelementptr inbounds %struct.DTD, %struct.DTD* %29, i32 0, i32 4, !dbg !9972
  %ptr24 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool23, i32 0, i32 3, !dbg !9973
  %30 = load i8*, i8** %ptr24, align 8, !dbg !9973, !tbaa !2798
  %31 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !9974, !tbaa !2289
  %pool25 = getelementptr inbounds %struct.DTD, %struct.DTD* %31, i32 0, i32 4, !dbg !9975
  %start26 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool25, i32 0, i32 4, !dbg !9976
  store i8* %30, i8** %start26, align 8, !dbg !9977, !tbaa !2794
  %32 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9978, !tbaa !2289
  %m_ns = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %32, i32 0, i32 38, !dbg !9979
  %33 = load i8, i8* %m_ns, align 1, !dbg !9979, !tbaa !2545
  %tobool27 = icmp ne i8 %33, 0, !dbg !9980
  br i1 %tobool27, label %if.else.29, label %if.then.28, !dbg !9981

if.then.28:                                       ; preds = %if.else
  br label %if.end.149, !dbg !9982

if.else.29:                                       ; preds = %if.else
  %34 = load i8*, i8** %name, align 8, !dbg !9984, !tbaa !2289
  %arrayidx = getelementptr i8, i8* %34, i64 0, !dbg !9984
  %35 = load i8, i8* %arrayidx, align 1, !dbg !9984, !tbaa !2307
  %conv = sext i8 %35 to i32, !dbg !9984
  %cmp30 = icmp eq i32 %conv, 120, !dbg !9985
  br i1 %cmp30, label %land.lhs.true.32, label %if.else.71, !dbg !9986

land.lhs.true.32:                                 ; preds = %if.else.29
  %36 = load i8*, i8** %name, align 8, !dbg !9987, !tbaa !2289
  %arrayidx33 = getelementptr i8, i8* %36, i64 1, !dbg !9987
  %37 = load i8, i8* %arrayidx33, align 1, !dbg !9987, !tbaa !2307
  %conv34 = sext i8 %37 to i32, !dbg !9987
  %cmp35 = icmp eq i32 %conv34, 109, !dbg !9989
  br i1 %cmp35, label %land.lhs.true.37, label %if.else.71, !dbg !9990

land.lhs.true.37:                                 ; preds = %land.lhs.true.32
  %38 = load i8*, i8** %name, align 8, !dbg !9991, !tbaa !2289
  %arrayidx38 = getelementptr i8, i8* %38, i64 2, !dbg !9991
  %39 = load i8, i8* %arrayidx38, align 1, !dbg !9991, !tbaa !2307
  %conv39 = sext i8 %39 to i32, !dbg !9991
  %cmp40 = icmp eq i32 %conv39, 108, !dbg !9992
  br i1 %cmp40, label %land.lhs.true.42, label %if.else.71, !dbg !9993

land.lhs.true.42:                                 ; preds = %land.lhs.true.37
  %40 = load i8*, i8** %name, align 8, !dbg !9994, !tbaa !2289
  %arrayidx43 = getelementptr i8, i8* %40, i64 3, !dbg !9994
  %41 = load i8, i8* %arrayidx43, align 1, !dbg !9994, !tbaa !2307
  %conv44 = sext i8 %41 to i32, !dbg !9994
  %cmp45 = icmp eq i32 %conv44, 110, !dbg !9995
  br i1 %cmp45, label %land.lhs.true.47, label %if.else.71, !dbg !9996

land.lhs.true.47:                                 ; preds = %land.lhs.true.42
  %42 = load i8*, i8** %name, align 8, !dbg !9997, !tbaa !2289
  %arrayidx48 = getelementptr i8, i8* %42, i64 4, !dbg !9997
  %43 = load i8, i8* %arrayidx48, align 1, !dbg !9997, !tbaa !2307
  %conv49 = sext i8 %43 to i32, !dbg !9997
  %cmp50 = icmp eq i32 %conv49, 115, !dbg !9998
  br i1 %cmp50, label %land.lhs.true.52, label %if.else.71, !dbg !9999

land.lhs.true.52:                                 ; preds = %land.lhs.true.47
  %44 = load i8*, i8** %name, align 8, !dbg !10000, !tbaa !2289
  %arrayidx53 = getelementptr i8, i8* %44, i64 5, !dbg !10000
  %45 = load i8, i8* %arrayidx53, align 1, !dbg !10000, !tbaa !2307
  %conv54 = sext i8 %45 to i32, !dbg !10000
  %cmp55 = icmp eq i32 %conv54, 0, !dbg !10001
  br i1 %cmp55, label %if.then.61, label %lor.lhs.false, !dbg !10002

lor.lhs.false:                                    ; preds = %land.lhs.true.52
  %46 = load i8*, i8** %name, align 8, !dbg !10003, !tbaa !2289
  %arrayidx57 = getelementptr i8, i8* %46, i64 5, !dbg !10003
  %47 = load i8, i8* %arrayidx57, align 1, !dbg !10003, !tbaa !2307
  %conv58 = sext i8 %47 to i32, !dbg !10003
  %cmp59 = icmp eq i32 %conv58, 58, !dbg !10005
  br i1 %cmp59, label %if.then.61, label %if.else.71, !dbg !10006

if.then.61:                                       ; preds = %lor.lhs.false, %land.lhs.true.52
  %48 = load i8*, i8** %name, align 8, !dbg !10007, !tbaa !2289
  %arrayidx62 = getelementptr i8, i8* %48, i64 5, !dbg !10007
  %49 = load i8, i8* %arrayidx62, align 1, !dbg !10007, !tbaa !2307
  %conv63 = sext i8 %49 to i32, !dbg !10007
  %cmp64 = icmp eq i32 %conv63, 0, !dbg !10010
  br i1 %cmp64, label %if.then.66, label %if.else.67, !dbg !10011

if.then.66:                                       ; preds = %if.then.61
  %50 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !10012, !tbaa !2289
  %defaultPrefix = getelementptr inbounds %struct.DTD, %struct.DTD* %50, i32 0, i32 11, !dbg !10013
  %51 = load %struct.attribute_id*, %struct.attribute_id** %id, align 8, !dbg !10014, !tbaa !2289
  %prefix = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %51, i32 0, i32 1, !dbg !10015
  store %struct.prefix* %defaultPrefix, %struct.prefix** %prefix, align 8, !dbg !10016, !tbaa !3730
  br label %if.end.70, !dbg !10014

if.else.67:                                       ; preds = %if.then.61
  %52 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10017, !tbaa !2289
  %53 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !10018, !tbaa !2289
  %prefixes = getelementptr inbounds %struct.DTD, %struct.DTD* %53, i32 0, i32 3, !dbg !10019
  %54 = load i8*, i8** %name, align 8, !dbg !10020, !tbaa !2289
  %add.ptr = getelementptr i8, i8* %54, i64 6, !dbg !10021
  %call68 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %52, %struct.HASH_TABLE* %prefixes, i8* %add.ptr, i64 16), !dbg !10022
  %55 = bitcast %struct.NAMED* %call68 to %struct.prefix*, !dbg !10023
  %56 = load %struct.attribute_id*, %struct.attribute_id** %id, align 8, !dbg !10024, !tbaa !2289
  %prefix69 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %56, i32 0, i32 1, !dbg !10025
  store %struct.prefix* %55, %struct.prefix** %prefix69, align 8, !dbg !10026, !tbaa !3730
  br label %if.end.70

if.end.70:                                        ; preds = %if.else.67, %if.then.66
  %57 = load %struct.attribute_id*, %struct.attribute_id** %id, align 8, !dbg !10027, !tbaa !2289
  %xmlns = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %57, i32 0, i32 3, !dbg !10028
  store i8 1, i8* %xmlns, align 1, !dbg !10029, !tbaa !3735
  br label %if.end.148, !dbg !10030

if.else.71:                                       ; preds = %lor.lhs.false, %land.lhs.true.47, %land.lhs.true.42, %land.lhs.true.37, %land.lhs.true.32, %if.else.29
  %58 = bitcast i32* %i to i8*, !dbg !10031
  call void @llvm.lifetime.start(i64 4, i8* %58) #2, !dbg !10031
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1752, metadata !2293), !dbg !10032
  store i32 0, i32* %i, align 4, !dbg !10033, !tbaa !3391
  br label %for.cond, !dbg !10034

for.cond:                                         ; preds = %for.inc.143, %if.else.71
  %59 = load i32, i32* %i, align 4, !dbg !10035, !tbaa !3391
  %idxprom = sext i32 %59 to i64, !dbg !10038
  %60 = load i8*, i8** %name, align 8, !dbg !10038, !tbaa !2289
  %arrayidx72 = getelementptr i8, i8* %60, i64 %idxprom, !dbg !10038
  %61 = load i8, i8* %arrayidx72, align 1, !dbg !10038, !tbaa !2307
  %tobool73 = icmp ne i8 %61, 0, !dbg !10039
  br i1 %tobool73, label %for.body, label %for.end.145, !dbg !10039

for.body:                                         ; preds = %for.cond
  %62 = load i32, i32* %i, align 4, !dbg !10040, !tbaa !3391
  %idxprom74 = sext i32 %62 to i64, !dbg !10041
  %63 = load i8*, i8** %name, align 8, !dbg !10041, !tbaa !2289
  %arrayidx75 = getelementptr i8, i8* %63, i64 %idxprom74, !dbg !10041
  %64 = load i8, i8* %arrayidx75, align 1, !dbg !10041, !tbaa !2307
  %conv76 = sext i8 %64 to i32, !dbg !10041
  %cmp77 = icmp eq i32 %conv76, 58, !dbg !10042
  br i1 %cmp77, label %if.then.79, label %if.end.142, !dbg !10043

if.then.79:                                       ; preds = %for.body
  %65 = bitcast i32* %j to i8*, !dbg !10044
  call void @llvm.lifetime.start(i64 4, i8* %65) #2, !dbg !10044
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1758, metadata !2293), !dbg !10045
  store i32 0, i32* %j, align 4, !dbg !10046, !tbaa !3391
  br label %for.cond.80, !dbg !10048

for.cond.80:                                      ; preds = %for.inc, %if.then.79
  %66 = load i32, i32* %j, align 4, !dbg !10049, !tbaa !3391
  %67 = load i32, i32* %i, align 4, !dbg !10053, !tbaa !3391
  %cmp81 = icmp slt i32 %66, %67, !dbg !10054
  br i1 %cmp81, label %for.body.83, label %for.end, !dbg !10055

for.body.83:                                      ; preds = %for.cond.80
  %68 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !10056, !tbaa !2289
  %pool84 = getelementptr inbounds %struct.DTD, %struct.DTD* %68, i32 0, i32 4, !dbg !10059
  %ptr85 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool84, i32 0, i32 3, !dbg !10060
  %69 = load i8*, i8** %ptr85, align 8, !dbg !10060, !tbaa !2798
  %70 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !10061, !tbaa !2289
  %pool86 = getelementptr inbounds %struct.DTD, %struct.DTD* %70, i32 0, i32 4, !dbg !10062
  %end87 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool86, i32 0, i32 2, !dbg !10063
  %71 = load i8*, i8** %end87, align 8, !dbg !10063, !tbaa !2802
  %cmp88 = icmp eq i8* %69, %71, !dbg !10064
  br i1 %cmp88, label %land.lhs.true.90, label %cond.false.95, !dbg !10065

land.lhs.true.90:                                 ; preds = %for.body.83
  %72 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !10066, !tbaa !2289
  %pool91 = getelementptr inbounds %struct.DTD, %struct.DTD* %72, i32 0, i32 4, !dbg !10068
  %call92 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %pool91), !dbg !10069
  %tobool93 = icmp ne i8 %call92, 0, !dbg !10069
  br i1 %tobool93, label %cond.false.95, label %cond.true.94, !dbg !10070

cond.true.94:                                     ; preds = %land.lhs.true.90
  br i1 false, label %if.end.102, label %if.then.101, !dbg !10071

cond.false.95:                                    ; preds = %land.lhs.true.90, %for.body.83
  %73 = load i32, i32* %j, align 4, !dbg !10073, !tbaa !3391
  %idxprom96 = sext i32 %73 to i64, !dbg !10076
  %74 = load i8*, i8** %name, align 8, !dbg !10076, !tbaa !2289
  %arrayidx97 = getelementptr i8, i8* %74, i64 %idxprom96, !dbg !10076
  %75 = load i8, i8* %arrayidx97, align 1, !dbg !10076, !tbaa !2307
  %76 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !10077, !tbaa !2289
  %pool98 = getelementptr inbounds %struct.DTD, %struct.DTD* %76, i32 0, i32 4, !dbg !10078
  %ptr99 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool98, i32 0, i32 3, !dbg !10079
  %77 = load i8*, i8** %ptr99, align 8, !dbg !10080, !tbaa !2798
  %incdec.ptr100 = getelementptr i8, i8* %77, i32 1, !dbg !10080
  store i8* %incdec.ptr100, i8** %ptr99, align 8, !dbg !10080, !tbaa !2798
  store i8 %75, i8* %77, align 1, !dbg !10081, !tbaa !2307
  br i1 true, label %if.end.102, label %if.then.101, !dbg !10070

if.then.101:                                      ; preds = %cond.false.95, %cond.true.94
  store %struct.attribute_id* null, %struct.attribute_id** %retval, !dbg !10082
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10082

if.end.102:                                       ; preds = %cond.false.95, %cond.true.94
  br label %for.inc, !dbg !10083

for.inc:                                          ; preds = %if.end.102
  %78 = load i32, i32* %j, align 4, !dbg !10084, !tbaa !3391
  %inc = add i32 %78, 1, !dbg !10084
  store i32 %inc, i32* %j, align 4, !dbg !10084, !tbaa !3391
  br label %for.cond.80, !dbg !10085

for.end:                                          ; preds = %for.cond.80
  %79 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !10086, !tbaa !2289
  %pool103 = getelementptr inbounds %struct.DTD, %struct.DTD* %79, i32 0, i32 4, !dbg !10088
  %ptr104 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool103, i32 0, i32 3, !dbg !10089
  %80 = load i8*, i8** %ptr104, align 8, !dbg !10089, !tbaa !2798
  %81 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !10090, !tbaa !2289
  %pool105 = getelementptr inbounds %struct.DTD, %struct.DTD* %81, i32 0, i32 4, !dbg !10091
  %end106 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool105, i32 0, i32 2, !dbg !10092
  %82 = load i8*, i8** %end106, align 8, !dbg !10092, !tbaa !2802
  %cmp107 = icmp eq i8* %80, %82, !dbg !10093
  br i1 %cmp107, label %land.lhs.true.109, label %cond.false.114, !dbg !10094

land.lhs.true.109:                                ; preds = %for.end
  %83 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !10095, !tbaa !2289
  %pool110 = getelementptr inbounds %struct.DTD, %struct.DTD* %83, i32 0, i32 4, !dbg !10097
  %call111 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %pool110), !dbg !10098
  %tobool112 = icmp ne i8 %call111, 0, !dbg !10098
  br i1 %tobool112, label %cond.false.114, label %cond.true.113, !dbg !10099

cond.true.113:                                    ; preds = %land.lhs.true.109
  br i1 false, label %if.end.119, label %if.then.118, !dbg !10100

cond.false.114:                                   ; preds = %land.lhs.true.109, %for.end
  %84 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !10102, !tbaa !2289
  %pool115 = getelementptr inbounds %struct.DTD, %struct.DTD* %84, i32 0, i32 4, !dbg !10105
  %ptr116 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool115, i32 0, i32 3, !dbg !10106
  %85 = load i8*, i8** %ptr116, align 8, !dbg !10107, !tbaa !2798
  %incdec.ptr117 = getelementptr i8, i8* %85, i32 1, !dbg !10107
  store i8* %incdec.ptr117, i8** %ptr116, align 8, !dbg !10107, !tbaa !2798
  store i8 0, i8* %85, align 1, !dbg !10108, !tbaa !2307
  br i1 true, label %if.end.119, label %if.then.118, !dbg !10099

if.then.118:                                      ; preds = %cond.false.114, %cond.true.113
  store %struct.attribute_id* null, %struct.attribute_id** %retval, !dbg !10109
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10109

if.end.119:                                       ; preds = %cond.false.114, %cond.true.113
  %86 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10110, !tbaa !2289
  %87 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !10111, !tbaa !2289
  %prefixes120 = getelementptr inbounds %struct.DTD, %struct.DTD* %87, i32 0, i32 3, !dbg !10112
  %88 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !10113, !tbaa !2289
  %pool121 = getelementptr inbounds %struct.DTD, %struct.DTD* %88, i32 0, i32 4, !dbg !10114
  %start122 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool121, i32 0, i32 4, !dbg !10115
  %89 = load i8*, i8** %start122, align 8, !dbg !10115, !tbaa !2794
  %call123 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %86, %struct.HASH_TABLE* %prefixes120, i8* %89, i64 16), !dbg !10116
  %90 = bitcast %struct.NAMED* %call123 to %struct.prefix*, !dbg !10117
  %91 = load %struct.attribute_id*, %struct.attribute_id** %id, align 8, !dbg !10118, !tbaa !2289
  %prefix124 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %91, i32 0, i32 1, !dbg !10119
  store %struct.prefix* %90, %struct.prefix** %prefix124, align 8, !dbg !10120, !tbaa !3730
  %92 = load %struct.attribute_id*, %struct.attribute_id** %id, align 8, !dbg !10121, !tbaa !2289
  %prefix125 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %92, i32 0, i32 1, !dbg !10123
  %93 = load %struct.prefix*, %struct.prefix** %prefix125, align 8, !dbg !10123, !tbaa !3730
  %name126 = getelementptr inbounds %struct.prefix, %struct.prefix* %93, i32 0, i32 0, !dbg !10124
  %94 = load i8*, i8** %name126, align 8, !dbg !10124, !tbaa !3638
  %95 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !10125, !tbaa !2289
  %pool127 = getelementptr inbounds %struct.DTD, %struct.DTD* %95, i32 0, i32 4, !dbg !10126
  %start128 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool127, i32 0, i32 4, !dbg !10127
  %96 = load i8*, i8** %start128, align 8, !dbg !10127, !tbaa !2794
  %cmp129 = icmp eq i8* %94, %96, !dbg !10128
  br i1 %cmp129, label %if.then.131, label %if.else.136, !dbg !10129

if.then.131:                                      ; preds = %if.end.119
  %97 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !10130, !tbaa !2289
  %pool132 = getelementptr inbounds %struct.DTD, %struct.DTD* %97, i32 0, i32 4, !dbg !10131
  %ptr133 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool132, i32 0, i32 3, !dbg !10132
  %98 = load i8*, i8** %ptr133, align 8, !dbg !10132, !tbaa !2798
  %99 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !10133, !tbaa !2289
  %pool134 = getelementptr inbounds %struct.DTD, %struct.DTD* %99, i32 0, i32 4, !dbg !10134
  %start135 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool134, i32 0, i32 4, !dbg !10135
  store i8* %98, i8** %start135, align 8, !dbg !10136, !tbaa !2794
  br label %if.end.141, !dbg !10137

if.else.136:                                      ; preds = %if.end.119
  %100 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !10138, !tbaa !2289
  %pool137 = getelementptr inbounds %struct.DTD, %struct.DTD* %100, i32 0, i32 4, !dbg !10139
  %start138 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool137, i32 0, i32 4, !dbg !10140
  %101 = load i8*, i8** %start138, align 8, !dbg !10140, !tbaa !2794
  %102 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !10141, !tbaa !2289
  %pool139 = getelementptr inbounds %struct.DTD, %struct.DTD* %102, i32 0, i32 4, !dbg !10142
  %ptr140 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool139, i32 0, i32 3, !dbg !10143
  store i8* %101, i8** %ptr140, align 8, !dbg !10144, !tbaa !2798
  br label %if.end.141

if.end.141:                                       ; preds = %if.else.136, %if.then.131
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10145

cleanup:                                          ; preds = %if.end.141, %if.then.118, %if.then.101
  %103 = bitcast i32* %j to i8*, !dbg !10146
  call void @llvm.lifetime.end(i64 4, i8* %103) #2, !dbg !10146
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.146 [
    i32 2, label %for.end.145
  ]

if.end.142:                                       ; preds = %for.body
  br label %for.inc.143, !dbg !10147

for.inc.143:                                      ; preds = %if.end.142
  %104 = load i32, i32* %i, align 4, !dbg !10148, !tbaa !3391
  %inc144 = add i32 %104, 1, !dbg !10148
  store i32 %inc144, i32* %i, align 4, !dbg !10148, !tbaa !3391
  br label %for.cond, !dbg !10149

for.end.145:                                      ; preds = %cleanup, %for.cond
  store i32 0, i32* %cleanup.dest.slot, !dbg !10150
  br label %cleanup.146, !dbg !10150

cleanup.146:                                      ; preds = %for.end.145, %cleanup
  %105 = bitcast i32* %i to i8*, !dbg !10151
  call void @llvm.lifetime.end(i64 4, i8* %105) #2, !dbg !10151
  %cleanup.dest.147 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.147, label %cleanup.151 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup.146
  br label %if.end.148

if.end.148:                                       ; preds = %cleanup.cont, %if.end.70
  br label %if.end.149

if.end.149:                                       ; preds = %if.end.148, %if.then.28
  br label %if.end.150

if.end.150:                                       ; preds = %if.end.149, %if.then.18
  %106 = load %struct.attribute_id*, %struct.attribute_id** %id, align 8, !dbg !10152, !tbaa !2289
  store %struct.attribute_id* %106, %struct.attribute_id** %retval, !dbg !10153
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.151, !dbg !10153

cleanup.151:                                      ; preds = %if.end.150, %cleanup.146, %if.then.14, %if.then.9, %if.then
  %107 = bitcast i8** %name to i8*, !dbg !10154
  call void @llvm.lifetime.end(i64 8, i8* %107) #2, !dbg !10154
  %108 = bitcast %struct.attribute_id** %id to i8*, !dbg !10154
  call void @llvm.lifetime.end(i64 8, i8* %108) #2, !dbg !10154
  %109 = bitcast %struct.DTD** %dtd to i8*, !dbg !10154
  call void @llvm.lifetime.end(i64 8, i8* %109) #2, !dbg !10154
  %110 = load %struct.attribute_id*, %struct.attribute_id** %retval, !dbg !10154
  ret %struct.attribute_id* %110, !dbg !10154
}

; Function Attrs: nounwind uwtable
define internal i8* @poolAppendString(%struct.STRING_POOL* %pool, i8* %s) #0 {
entry:
  %retval = alloca i8*, align 8
  %pool.addr = alloca %struct.STRING_POOL*, align 8
  %s.addr = alloca i8*, align 8
  store %struct.STRING_POOL* %pool, %struct.STRING_POOL** %pool.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.STRING_POOL** %pool.addr, metadata !1768, metadata !2293), !dbg !10155
  store i8* %s, i8** %s.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !1769, metadata !2293), !dbg !10156
  br label %while.cond, !dbg !10157

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i8*, i8** %s.addr, align 8, !dbg !10158, !tbaa !2289
  %1 = load i8, i8* %0, align 1, !dbg !10161, !tbaa !2307
  %tobool = icmp ne i8 %1, 0, !dbg !10157
  br i1 %tobool, label %while.body, label %while.end, !dbg !10157

while.body:                                       ; preds = %while.cond
  %2 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10162, !tbaa !2289
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %2, i32 0, i32 3, !dbg !10165
  %3 = load i8*, i8** %ptr, align 8, !dbg !10165, !tbaa !2798
  %4 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10166, !tbaa !2289
  %end = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %4, i32 0, i32 2, !dbg !10167
  %5 = load i8*, i8** %end, align 8, !dbg !10167, !tbaa !2802
  %cmp = icmp eq i8* %3, %5, !dbg !10168
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !10169

land.lhs.true:                                    ; preds = %while.body
  %6 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10170, !tbaa !2289
  %call = call zeroext i8 @poolGrow(%struct.STRING_POOL* %6), !dbg !10172
  %tobool1 = icmp ne i8 %call, 0, !dbg !10172
  br i1 %tobool1, label %cond.false, label %cond.true, !dbg !10173

cond.true:                                        ; preds = %land.lhs.true
  br i1 false, label %if.end, label %if.then, !dbg !10174

cond.false:                                       ; preds = %land.lhs.true, %while.body
  %7 = load i8*, i8** %s.addr, align 8, !dbg !10176, !tbaa !2289
  %8 = load i8, i8* %7, align 1, !dbg !10179, !tbaa !2307
  %9 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10180, !tbaa !2289
  %ptr2 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %9, i32 0, i32 3, !dbg !10181
  %10 = load i8*, i8** %ptr2, align 8, !dbg !10182, !tbaa !2798
  %incdec.ptr = getelementptr i8, i8* %10, i32 1, !dbg !10182
  store i8* %incdec.ptr, i8** %ptr2, align 8, !dbg !10182, !tbaa !2798
  store i8 %8, i8* %10, align 1, !dbg !10183, !tbaa !2307
  br i1 true, label %if.end, label %if.then, !dbg !10173

if.then:                                          ; preds = %cond.false, %cond.true
  store i8* null, i8** %retval, !dbg !10184
  br label %return, !dbg !10184

if.end:                                           ; preds = %cond.false, %cond.true
  %11 = load i8*, i8** %s.addr, align 8, !dbg !10185, !tbaa !2289
  %incdec.ptr3 = getelementptr i8, i8* %11, i32 1, !dbg !10185
  store i8* %incdec.ptr3, i8** %s.addr, align 8, !dbg !10185, !tbaa !2289
  br label %while.cond, !dbg !10157

while.end:                                        ; preds = %while.cond
  %12 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10186, !tbaa !2289
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %12, i32 0, i32 4, !dbg !10187
  %13 = load i8*, i8** %start, align 8, !dbg !10187, !tbaa !2794
  store i8* %13, i8** %retval, !dbg !10188
  br label %return, !dbg !10188

return:                                           ; preds = %while.end, %if.then
  %14 = load i8*, i8** %retval, !dbg !10189
  ret i8* %14, !dbg !10189
}

; Function Attrs: nounwind uwtable
define internal i8* @poolAppend(%struct.STRING_POOL* %pool, %struct.encoding* %enc, i8* %ptr, i8* %end) #0 {
entry:
  %retval = alloca i8*, align 8
  %pool.addr = alloca %struct.STRING_POOL*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  store %struct.STRING_POOL* %pool, %struct.STRING_POOL** %pool.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.STRING_POOL** %pool.addr, metadata !1772, metadata !2293), !dbg !10190
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !1773, metadata !2293), !dbg !10191
  store i8* %ptr, i8** %ptr.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !1774, metadata !2293), !dbg !10192
  store i8* %end, i8** %end.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !1775, metadata !2293), !dbg !10193
  %0 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10194, !tbaa !2289
  %ptr1 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %0, i32 0, i32 3, !dbg !10196
  %1 = load i8*, i8** %ptr1, align 8, !dbg !10196, !tbaa !2798
  %tobool = icmp ne i8* %1, null, !dbg !10194
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !10197

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10198, !tbaa !2289
  %call = call zeroext i8 @poolGrow(%struct.STRING_POOL* %2), !dbg !10200
  %tobool2 = icmp ne i8 %call, 0, !dbg !10200
  br i1 %tobool2, label %if.end, label %if.then, !dbg !10201

if.then:                                          ; preds = %land.lhs.true
  store i8* null, i8** %retval, !dbg !10202
  br label %return, !dbg !10202

if.end:                                           ; preds = %land.lhs.true, %entry
  br label %for.cond, !dbg !10203

for.cond:                                         ; preds = %if.end.10, %if.end
  %3 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10204, !tbaa !2289
  %utf8Convert = getelementptr inbounds %struct.encoding, %struct.encoding* %3, i32 0, i32 11, !dbg !10208
  %4 = load void (%struct.encoding*, i8**, i8*, i8**, i8*)*, void (%struct.encoding*, i8**, i8*, i8**, i8*)** %utf8Convert, align 8, !dbg !10208, !tbaa !6065
  %5 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10209, !tbaa !2289
  %6 = load i8*, i8** %end.addr, align 8, !dbg !10210, !tbaa !2289
  %7 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10211, !tbaa !2289
  %ptr3 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %7, i32 0, i32 3, !dbg !10212
  %8 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10213, !tbaa !2289
  %end4 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %8, i32 0, i32 2, !dbg !10214
  %9 = load i8*, i8** %end4, align 8, !dbg !10214, !tbaa !2802
  call void %4(%struct.encoding* %5, i8** %ptr.addr, i8* %6, i8** %ptr3, i8* %9), !dbg !10215
  %10 = load i8*, i8** %ptr.addr, align 8, !dbg !10216, !tbaa !2289
  %11 = load i8*, i8** %end.addr, align 8, !dbg !10218, !tbaa !2289
  %cmp = icmp eq i8* %10, %11, !dbg !10219
  br i1 %cmp, label %if.then.5, label %if.end.6, !dbg !10220

if.then.5:                                        ; preds = %for.cond
  br label %for.end, !dbg !10221

if.end.6:                                         ; preds = %for.cond
  %12 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10222, !tbaa !2289
  %call7 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %12), !dbg !10224
  %tobool8 = icmp ne i8 %call7, 0, !dbg !10224
  br i1 %tobool8, label %if.end.10, label %if.then.9, !dbg !10225

if.then.9:                                        ; preds = %if.end.6
  store i8* null, i8** %retval, !dbg !10226
  br label %return, !dbg !10226

if.end.10:                                        ; preds = %if.end.6
  br label %for.cond, !dbg !10227

for.end:                                          ; preds = %if.then.5
  %13 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10228, !tbaa !2289
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %13, i32 0, i32 4, !dbg !10229
  %14 = load i8*, i8** %start, align 8, !dbg !10229, !tbaa !2794
  store i8* %14, i8** %retval, !dbg !10230
  br label %return, !dbg !10230

return:                                           ; preds = %for.end, %if.then.9, %if.then
  %15 = load i8*, i8** %retval, !dbg !10231
  ret i8* %15, !dbg !10231
}

; Function Attrs: nounwind uwtable
define internal i32 @defineAttribute(%struct.ELEMENT_TYPE* %type, %struct.attribute_id* %attId, i8 zeroext %isCdata, i8 zeroext %isId, i8* %value, %struct.XML_ParserStruct* %parser) #0 {
entry:
  %retval = alloca i32, align 4
  %type.addr = alloca %struct.ELEMENT_TYPE*, align 8
  %attId.addr = alloca %struct.attribute_id*, align 8
  %isCdata.addr = alloca i8, align 1
  %isId.addr = alloca i8, align 1
  %value.addr = alloca i8*, align 8
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %att = alloca %struct.DEFAULT_ATTRIBUTE*, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %temp = alloca %struct.DEFAULT_ATTRIBUTE*, align 8
  %count = alloca i32, align 4
  store %struct.ELEMENT_TYPE* %type, %struct.ELEMENT_TYPE** %type.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.ELEMENT_TYPE** %type.addr, metadata !1780, metadata !2293), !dbg !10232
  store %struct.attribute_id* %attId, %struct.attribute_id** %attId.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.attribute_id** %attId.addr, metadata !1781, metadata !2293), !dbg !10233
  store i8 %isCdata, i8* %isCdata.addr, align 1, !tbaa !2307
  call void @llvm.dbg.declare(metadata i8* %isCdata.addr, metadata !1782, metadata !2293), !dbg !10234
  store i8 %isId, i8* %isId.addr, align 1, !tbaa !2307
  call void @llvm.dbg.declare(metadata i8* %isId.addr, metadata !1783, metadata !2293), !dbg !10235
  store i8* %value, i8** %value.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !1784, metadata !2293), !dbg !10236
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1785, metadata !2293), !dbg !10237
  %0 = bitcast %struct.DEFAULT_ATTRIBUTE** %att to i8*, !dbg !10238
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !10238
  call void @llvm.dbg.declare(metadata %struct.DEFAULT_ATTRIBUTE** %att, metadata !1786, metadata !2293), !dbg !10239
  %1 = load i8*, i8** %value.addr, align 8, !dbg !10240, !tbaa !2289
  %tobool = icmp ne i8* %1, null, !dbg !10240
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !10241

lor.lhs.false:                                    ; preds = %entry
  %2 = load i8, i8* %isId.addr, align 1, !dbg !10242, !tbaa !2307
  %conv = zext i8 %2 to i32, !dbg !10242
  %tobool1 = icmp ne i32 %conv, 0, !dbg !10242
  br i1 %tobool1, label %if.then, label %if.end.14, !dbg !10244

if.then:                                          ; preds = %lor.lhs.false, %entry
  %3 = bitcast i32* %i to i8*, !dbg !10245
  call void @llvm.lifetime.start(i64 4, i8* %3) #2, !dbg !10245
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1787, metadata !2293), !dbg !10246
  store i32 0, i32* %i, align 4, !dbg !10247, !tbaa !3391
  br label %for.cond, !dbg !10249

for.cond:                                         ; preds = %for.inc, %if.then
  %4 = load i32, i32* %i, align 4, !dbg !10250, !tbaa !3391
  %5 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8, !dbg !10254, !tbaa !2289
  %nDefaultAtts = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %5, i32 0, i32 3, !dbg !10255
  %6 = load i32, i32* %nDefaultAtts, align 4, !dbg !10255, !tbaa !3810
  %cmp = icmp slt i32 %4, %6, !dbg !10256
  br i1 %cmp, label %for.body, label %for.end, !dbg !10257

for.body:                                         ; preds = %for.cond
  %7 = load %struct.attribute_id*, %struct.attribute_id** %attId.addr, align 8, !dbg !10258, !tbaa !2289
  %8 = load i32, i32* %i, align 4, !dbg !10260, !tbaa !3391
  %idxprom = sext i32 %8 to i64, !dbg !10261
  %9 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8, !dbg !10261, !tbaa !2289
  %defaultAtts = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %9, i32 0, i32 5, !dbg !10262
  %10 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts, align 8, !dbg !10262, !tbaa !3097
  %arrayidx = getelementptr %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %10, i64 %idxprom, !dbg !10261
  %id = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %arrayidx, i32 0, i32 0, !dbg !10263
  %11 = load %struct.attribute_id*, %struct.attribute_id** %id, align 8, !dbg !10263, !tbaa !3891
  %cmp3 = icmp eq %struct.attribute_id* %7, %11, !dbg !10264
  br i1 %cmp3, label %if.then.5, label %if.end, !dbg !10265

if.then.5:                                        ; preds = %for.body
  store i32 1, i32* %retval, !dbg !10266
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10266

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !10267

for.inc:                                          ; preds = %if.end
  %12 = load i32, i32* %i, align 4, !dbg !10269, !tbaa !3391
  %inc = add i32 %12, 1, !dbg !10269
  store i32 %inc, i32* %i, align 4, !dbg !10269, !tbaa !3391
  br label %for.cond, !dbg !10270

for.end:                                          ; preds = %for.cond
  %13 = load i8, i8* %isId.addr, align 1, !dbg !10271, !tbaa !2307
  %conv6 = zext i8 %13 to i32, !dbg !10271
  %tobool7 = icmp ne i32 %conv6, 0, !dbg !10271
  br i1 %tobool7, label %land.lhs.true, label %if.end.13, !dbg !10273

land.lhs.true:                                    ; preds = %for.end
  %14 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8, !dbg !10274, !tbaa !2289
  %idAtt = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %14, i32 0, i32 2, !dbg !10276
  %15 = load %struct.attribute_id*, %struct.attribute_id** %idAtt, align 8, !dbg !10276, !tbaa !3835
  %tobool8 = icmp ne %struct.attribute_id* %15, null, !dbg !10277
  br i1 %tobool8, label %if.end.13, label %land.lhs.true.9, !dbg !10278

land.lhs.true.9:                                  ; preds = %land.lhs.true
  %16 = load %struct.attribute_id*, %struct.attribute_id** %attId.addr, align 8, !dbg !10279, !tbaa !2289
  %xmlns = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %16, i32 0, i32 3, !dbg !10281
  %17 = load i8, i8* %xmlns, align 1, !dbg !10281, !tbaa !3735
  %tobool10 = icmp ne i8 %17, 0, !dbg !10282
  br i1 %tobool10, label %if.end.13, label %if.then.11, !dbg !10283

if.then.11:                                       ; preds = %land.lhs.true.9
  %18 = load %struct.attribute_id*, %struct.attribute_id** %attId.addr, align 8, !dbg !10284, !tbaa !2289
  %19 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8, !dbg !10285, !tbaa !2289
  %idAtt12 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %19, i32 0, i32 2, !dbg !10286
  store %struct.attribute_id* %18, %struct.attribute_id** %idAtt12, align 8, !dbg !10287, !tbaa !3835
  br label %if.end.13, !dbg !10285

if.end.13:                                        ; preds = %if.then.11, %land.lhs.true.9, %land.lhs.true, %for.end
  store i32 0, i32* %cleanup.dest.slot, !dbg !10288
  br label %cleanup, !dbg !10288

cleanup:                                          ; preds = %if.end.13, %if.then.5
  %20 = bitcast i32* %i to i8*, !dbg !10289
  call void @llvm.lifetime.end(i64 4, i8* %20) #2, !dbg !10289
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.59 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.14, !dbg !10290

if.end.14:                                        ; preds = %cleanup.cont, %lor.lhs.false
  %21 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8, !dbg !10291, !tbaa !2289
  %nDefaultAtts15 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %21, i32 0, i32 3, !dbg !10292
  %22 = load i32, i32* %nDefaultAtts15, align 4, !dbg !10292, !tbaa !3810
  %23 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8, !dbg !10293, !tbaa !2289
  %allocDefaultAtts = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %23, i32 0, i32 4, !dbg !10294
  %24 = load i32, i32* %allocDefaultAtts, align 4, !dbg !10294, !tbaa !3089
  %cmp16 = icmp eq i32 %22, %24, !dbg !10295
  br i1 %cmp16, label %if.then.18, label %if.end.49, !dbg !10296

if.then.18:                                       ; preds = %if.end.14
  %25 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8, !dbg !10297, !tbaa !2289
  %allocDefaultAtts19 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %25, i32 0, i32 4, !dbg !10298
  %26 = load i32, i32* %allocDefaultAtts19, align 4, !dbg !10298, !tbaa !3089
  %cmp20 = icmp eq i32 %26, 0, !dbg !10299
  br i1 %cmp20, label %if.then.22, label %if.else, !dbg !10300

if.then.22:                                       ; preds = %if.then.18
  %27 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8, !dbg !10301, !tbaa !2289
  %allocDefaultAtts23 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %27, i32 0, i32 4, !dbg !10303
  store i32 8, i32* %allocDefaultAtts23, align 4, !dbg !10304, !tbaa !3089
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10305, !tbaa !2289
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %28, i32 0, i32 3, !dbg !10306
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 0, !dbg !10307
  %29 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8, !dbg !10307, !tbaa !2416
  %30 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8, !dbg !10308, !tbaa !2289
  %allocDefaultAtts24 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %30, i32 0, i32 4, !dbg !10309
  %31 = load i32, i32* %allocDefaultAtts24, align 4, !dbg !10309, !tbaa !3089
  %conv25 = sext i32 %31 to i64, !dbg !10308
  %mul = mul i64 %conv25, 24, !dbg !10310
  %call = call i8* %29(i64 %mul), !dbg !10305
  %32 = bitcast i8* %call to %struct.DEFAULT_ATTRIBUTE*, !dbg !10311
  %33 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8, !dbg !10312, !tbaa !2289
  %defaultAtts26 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %33, i32 0, i32 5, !dbg !10313
  store %struct.DEFAULT_ATTRIBUTE* %32, %struct.DEFAULT_ATTRIBUTE** %defaultAtts26, align 8, !dbg !10314, !tbaa !3097
  %34 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8, !dbg !10315, !tbaa !2289
  %defaultAtts27 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %34, i32 0, i32 5, !dbg !10317
  %35 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts27, align 8, !dbg !10317, !tbaa !3097
  %tobool28 = icmp ne %struct.DEFAULT_ATTRIBUTE* %35, null, !dbg !10315
  br i1 %tobool28, label %if.end.30, label %if.then.29, !dbg !10318

if.then.29:                                       ; preds = %if.then.22
  store i32 0, i32* %retval, !dbg !10319
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.59, !dbg !10319

if.end.30:                                        ; preds = %if.then.22
  br label %if.end.48, !dbg !10320

if.else:                                          ; preds = %if.then.18
  %36 = bitcast %struct.DEFAULT_ATTRIBUTE** %temp to i8*, !dbg !10321
  call void @llvm.lifetime.start(i64 8, i8* %36) #2, !dbg !10321
  call void @llvm.dbg.declare(metadata %struct.DEFAULT_ATTRIBUTE** %temp, metadata !1790, metadata !2293), !dbg !10322
  %37 = bitcast i32* %count to i8*, !dbg !10323
  call void @llvm.lifetime.start(i64 4, i8* %37) #2, !dbg !10323
  call void @llvm.dbg.declare(metadata i32* %count, metadata !1795, metadata !2293), !dbg !10324
  %38 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8, !dbg !10325, !tbaa !2289
  %allocDefaultAtts31 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %38, i32 0, i32 4, !dbg !10326
  %39 = load i32, i32* %allocDefaultAtts31, align 4, !dbg !10326, !tbaa !3089
  %mul32 = mul i32 %39, 2, !dbg !10327
  store i32 %mul32, i32* %count, align 4, !dbg !10324, !tbaa !3391
  %40 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10328, !tbaa !2289
  %m_mem33 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %40, i32 0, i32 3, !dbg !10329
  %realloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem33, i32 0, i32 1, !dbg !10330
  %41 = load i8* (i8*, i64)*, i8* (i8*, i64)** %realloc_fcn, align 8, !dbg !10330, !tbaa !5977
  %42 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8, !dbg !10331, !tbaa !2289
  %defaultAtts34 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %42, i32 0, i32 5, !dbg !10332
  %43 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts34, align 8, !dbg !10332, !tbaa !3097
  %44 = bitcast %struct.DEFAULT_ATTRIBUTE* %43 to i8*, !dbg !10333
  %45 = load i32, i32* %count, align 4, !dbg !10334, !tbaa !3391
  %conv35 = sext i32 %45 to i64, !dbg !10334
  %mul36 = mul i64 %conv35, 24, !dbg !10335
  %call37 = call i8* %41(i8* %44, i64 %mul36), !dbg !10328
  %46 = bitcast i8* %call37 to %struct.DEFAULT_ATTRIBUTE*, !dbg !10336
  store %struct.DEFAULT_ATTRIBUTE* %46, %struct.DEFAULT_ATTRIBUTE** %temp, align 8, !dbg !10337, !tbaa !2289
  %47 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %temp, align 8, !dbg !10338, !tbaa !2289
  %cmp38 = icmp eq %struct.DEFAULT_ATTRIBUTE* %47, null, !dbg !10340
  br i1 %cmp38, label %if.then.40, label %if.end.41, !dbg !10341

if.then.40:                                       ; preds = %if.else
  store i32 0, i32* %retval, !dbg !10342
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.44, !dbg !10342

if.end.41:                                        ; preds = %if.else
  %48 = load i32, i32* %count, align 4, !dbg !10343, !tbaa !3391
  %49 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8, !dbg !10344, !tbaa !2289
  %allocDefaultAtts42 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %49, i32 0, i32 4, !dbg !10345
  store i32 %48, i32* %allocDefaultAtts42, align 4, !dbg !10346, !tbaa !3089
  %50 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %temp, align 8, !dbg !10347, !tbaa !2289
  %51 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8, !dbg !10348, !tbaa !2289
  %defaultAtts43 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %51, i32 0, i32 5, !dbg !10349
  store %struct.DEFAULT_ATTRIBUTE* %50, %struct.DEFAULT_ATTRIBUTE** %defaultAtts43, align 8, !dbg !10350, !tbaa !3097
  store i32 0, i32* %cleanup.dest.slot, !dbg !10351
  br label %cleanup.44, !dbg !10351

cleanup.44:                                       ; preds = %if.end.41, %if.then.40
  %52 = bitcast i32* %count to i8*, !dbg !10352
  call void @llvm.lifetime.end(i64 4, i8* %52) #2, !dbg !10352
  %53 = bitcast %struct.DEFAULT_ATTRIBUTE** %temp to i8*, !dbg !10352
  call void @llvm.lifetime.end(i64 8, i8* %53) #2, !dbg !10352
  %cleanup.dest.46 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.46, label %cleanup.59 [
    i32 0, label %cleanup.cont.47
  ]

cleanup.cont.47:                                  ; preds = %cleanup.44
  br label %if.end.48

if.end.48:                                        ; preds = %cleanup.cont.47, %if.end.30
  br label %if.end.49, !dbg !10354

if.end.49:                                        ; preds = %if.end.48, %if.end.14
  %54 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8, !dbg !10355, !tbaa !2289
  %defaultAtts50 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %54, i32 0, i32 5, !dbg !10356
  %55 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts50, align 8, !dbg !10356, !tbaa !3097
  %56 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8, !dbg !10357, !tbaa !2289
  %nDefaultAtts51 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %56, i32 0, i32 3, !dbg !10358
  %57 = load i32, i32* %nDefaultAtts51, align 4, !dbg !10358, !tbaa !3810
  %idx.ext = sext i32 %57 to i64, !dbg !10359
  %add.ptr = getelementptr %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %55, i64 %idx.ext, !dbg !10359
  store %struct.DEFAULT_ATTRIBUTE* %add.ptr, %struct.DEFAULT_ATTRIBUTE** %att, align 8, !dbg !10360, !tbaa !2289
  %58 = load %struct.attribute_id*, %struct.attribute_id** %attId.addr, align 8, !dbg !10361, !tbaa !2289
  %59 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %att, align 8, !dbg !10362, !tbaa !2289
  %id52 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %59, i32 0, i32 0, !dbg !10363
  store %struct.attribute_id* %58, %struct.attribute_id** %id52, align 8, !dbg !10364, !tbaa !3891
  %60 = load i8*, i8** %value.addr, align 8, !dbg !10365, !tbaa !2289
  %61 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %att, align 8, !dbg !10366, !tbaa !2289
  %value53 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %61, i32 0, i32 2, !dbg !10367
  store i8* %60, i8** %value53, align 8, !dbg !10368, !tbaa !3916
  %62 = load i8, i8* %isCdata.addr, align 1, !dbg !10369, !tbaa !2307
  %63 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %att, align 8, !dbg !10370, !tbaa !2289
  %isCdata54 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %63, i32 0, i32 1, !dbg !10371
  store i8 %62, i8* %isCdata54, align 1, !dbg !10372, !tbaa !3905
  %64 = load i8, i8* %isCdata.addr, align 1, !dbg !10373, !tbaa !2307
  %tobool55 = icmp ne i8 %64, 0, !dbg !10373
  br i1 %tobool55, label %if.end.57, label %if.then.56, !dbg !10375

if.then.56:                                       ; preds = %if.end.49
  %65 = load %struct.attribute_id*, %struct.attribute_id** %attId.addr, align 8, !dbg !10376, !tbaa !2289
  %maybeTokenized = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %65, i32 0, i32 2, !dbg !10377
  store i8 1, i8* %maybeTokenized, align 1, !dbg !10378, !tbaa !3723
  br label %if.end.57, !dbg !10376

if.end.57:                                        ; preds = %if.then.56, %if.end.49
  %66 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8, !dbg !10379, !tbaa !2289
  %nDefaultAtts58 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %66, i32 0, i32 3, !dbg !10380
  %67 = load i32, i32* %nDefaultAtts58, align 4, !dbg !10381, !tbaa !3810
  %add = add i32 %67, 1, !dbg !10381
  store i32 %add, i32* %nDefaultAtts58, align 4, !dbg !10381, !tbaa !3810
  store i32 1, i32* %retval, !dbg !10382
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.59, !dbg !10382

cleanup.59:                                       ; preds = %if.end.57, %cleanup.44, %if.then.29, %cleanup
  %68 = bitcast %struct.DEFAULT_ATTRIBUTE** %att to i8*, !dbg !10383
  call void @llvm.lifetime.end(i64 8, i8* %68) #2, !dbg !10383
  %69 = load i32, i32* %retval, !dbg !10383
  ret i32 %69, !dbg !10383
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @poolGrow(%struct.STRING_POOL* %pool) #0 {
entry:
  %retval = alloca i8, align 1
  %pool.addr = alloca %struct.STRING_POOL*, align 8
  %tem = alloca %struct.block*, align 8
  %blockSize = alloca i32, align 4
  %temp = alloca %struct.block*, align 8
  %cleanup.dest.slot = alloca i32
  %tem102 = alloca %struct.block*, align 8
  %blockSize103 = alloca i32, align 4
  store %struct.STRING_POOL* %pool, %struct.STRING_POOL** %pool.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.STRING_POOL** %pool.addr, metadata !1800, metadata !2293), !dbg !10384
  %0 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10385, !tbaa !2289
  %freeBlocks = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %0, i32 0, i32 1, !dbg !10386
  %1 = load %struct.block*, %struct.block** %freeBlocks, align 8, !dbg !10386, !tbaa !2753
  %tobool = icmp ne %struct.block* %1, null, !dbg !10385
  br i1 %tobool, label %if.then, label %if.end.56, !dbg !10387

if.then:                                          ; preds = %entry
  %2 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10388, !tbaa !2289
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %2, i32 0, i32 4, !dbg !10390
  %3 = load i8*, i8** %start, align 8, !dbg !10390, !tbaa !2794
  %cmp = icmp eq i8* %3, null, !dbg !10391
  br i1 %cmp, label %if.then.1, label %if.end, !dbg !10392

if.then.1:                                        ; preds = %if.then
  %4 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10393, !tbaa !2289
  %freeBlocks2 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %4, i32 0, i32 1, !dbg !10395
  %5 = load %struct.block*, %struct.block** %freeBlocks2, align 8, !dbg !10395, !tbaa !2753
  %6 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10396, !tbaa !2289
  %blocks = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %6, i32 0, i32 0, !dbg !10397
  store %struct.block* %5, %struct.block** %blocks, align 8, !dbg !10398, !tbaa !2757
  %7 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10399, !tbaa !2289
  %freeBlocks3 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %7, i32 0, i32 1, !dbg !10400
  %8 = load %struct.block*, %struct.block** %freeBlocks3, align 8, !dbg !10400, !tbaa !2753
  %next = getelementptr inbounds %struct.block, %struct.block* %8, i32 0, i32 0, !dbg !10401
  %9 = load %struct.block*, %struct.block** %next, align 8, !dbg !10401, !tbaa !2773
  %10 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10402, !tbaa !2289
  %freeBlocks4 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %10, i32 0, i32 1, !dbg !10403
  store %struct.block* %9, %struct.block** %freeBlocks4, align 8, !dbg !10404, !tbaa !2753
  %11 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10405, !tbaa !2289
  %blocks5 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %11, i32 0, i32 0, !dbg !10406
  %12 = load %struct.block*, %struct.block** %blocks5, align 8, !dbg !10406, !tbaa !2757
  %next6 = getelementptr inbounds %struct.block, %struct.block* %12, i32 0, i32 0, !dbg !10407
  store %struct.block* null, %struct.block** %next6, align 8, !dbg !10408, !tbaa !2773
  %13 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10409, !tbaa !2289
  %blocks7 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %13, i32 0, i32 0, !dbg !10410
  %14 = load %struct.block*, %struct.block** %blocks7, align 8, !dbg !10410, !tbaa !2757
  %s = getelementptr inbounds %struct.block, %struct.block* %14, i32 0, i32 2, !dbg !10411
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %s, i32 0, i32 0, !dbg !10409
  %15 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10412, !tbaa !2289
  %start8 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %15, i32 0, i32 4, !dbg !10413
  store i8* %arraydecay, i8** %start8, align 8, !dbg !10414, !tbaa !2794
  %16 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10415, !tbaa !2289
  %start9 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %16, i32 0, i32 4, !dbg !10416
  %17 = load i8*, i8** %start9, align 8, !dbg !10416, !tbaa !2794
  %18 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10417, !tbaa !2289
  %blocks10 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %18, i32 0, i32 0, !dbg !10418
  %19 = load %struct.block*, %struct.block** %blocks10, align 8, !dbg !10418, !tbaa !2757
  %size = getelementptr inbounds %struct.block, %struct.block* %19, i32 0, i32 1, !dbg !10419
  %20 = load i32, i32* %size, align 4, !dbg !10419, !tbaa !10420
  %idx.ext = sext i32 %20 to i64, !dbg !10421
  %add.ptr = getelementptr i8, i8* %17, i64 %idx.ext, !dbg !10421
  %21 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10422, !tbaa !2289
  %end = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %21, i32 0, i32 2, !dbg !10423
  store i8* %add.ptr, i8** %end, align 8, !dbg !10424, !tbaa !2802
  %22 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10425, !tbaa !2289
  %start11 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %22, i32 0, i32 4, !dbg !10426
  %23 = load i8*, i8** %start11, align 8, !dbg !10426, !tbaa !2794
  %24 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10427, !tbaa !2289
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %24, i32 0, i32 3, !dbg !10428
  store i8* %23, i8** %ptr, align 8, !dbg !10429, !tbaa !2798
  store i8 1, i8* %retval, !dbg !10430
  br label %return, !dbg !10430

if.end:                                           ; preds = %if.then
  %25 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10431, !tbaa !2289
  %end12 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %25, i32 0, i32 2, !dbg !10432
  %26 = load i8*, i8** %end12, align 8, !dbg !10432, !tbaa !2802
  %27 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10433, !tbaa !2289
  %start13 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %27, i32 0, i32 4, !dbg !10434
  %28 = load i8*, i8** %start13, align 8, !dbg !10434, !tbaa !2794
  %sub.ptr.lhs.cast = ptrtoint i8* %26 to i64, !dbg !10435
  %sub.ptr.rhs.cast = ptrtoint i8* %28 to i64, !dbg !10435
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10435
  %29 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10436, !tbaa !2289
  %freeBlocks14 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %29, i32 0, i32 1, !dbg !10437
  %30 = load %struct.block*, %struct.block** %freeBlocks14, align 8, !dbg !10437, !tbaa !2753
  %size15 = getelementptr inbounds %struct.block, %struct.block* %30, i32 0, i32 1, !dbg !10438
  %31 = load i32, i32* %size15, align 4, !dbg !10438, !tbaa !10420
  %conv = sext i32 %31 to i64, !dbg !10436
  %cmp16 = icmp slt i64 %sub.ptr.sub, %conv, !dbg !10439
  br i1 %cmp16, label %if.then.18, label %if.end.55, !dbg !10440

if.then.18:                                       ; preds = %if.end
  %32 = bitcast %struct.block** %tem to i8*, !dbg !10441
  call void @llvm.lifetime.start(i64 8, i8* %32) #2, !dbg !10441
  call void @llvm.dbg.declare(metadata %struct.block** %tem, metadata !1801, metadata !2293), !dbg !10442
  %33 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10443, !tbaa !2289
  %freeBlocks19 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %33, i32 0, i32 1, !dbg !10444
  %34 = load %struct.block*, %struct.block** %freeBlocks19, align 8, !dbg !10444, !tbaa !2753
  %next20 = getelementptr inbounds %struct.block, %struct.block* %34, i32 0, i32 0, !dbg !10445
  %35 = load %struct.block*, %struct.block** %next20, align 8, !dbg !10445, !tbaa !2773
  store %struct.block* %35, %struct.block** %tem, align 8, !dbg !10442, !tbaa !2289
  %36 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10446, !tbaa !2289
  %blocks21 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %36, i32 0, i32 0, !dbg !10447
  %37 = load %struct.block*, %struct.block** %blocks21, align 8, !dbg !10447, !tbaa !2757
  %38 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10448, !tbaa !2289
  %freeBlocks22 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %38, i32 0, i32 1, !dbg !10449
  %39 = load %struct.block*, %struct.block** %freeBlocks22, align 8, !dbg !10449, !tbaa !2753
  %next23 = getelementptr inbounds %struct.block, %struct.block* %39, i32 0, i32 0, !dbg !10450
  store %struct.block* %37, %struct.block** %next23, align 8, !dbg !10451, !tbaa !2773
  %40 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10452, !tbaa !2289
  %freeBlocks24 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %40, i32 0, i32 1, !dbg !10453
  %41 = load %struct.block*, %struct.block** %freeBlocks24, align 8, !dbg !10453, !tbaa !2753
  %42 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10454, !tbaa !2289
  %blocks25 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %42, i32 0, i32 0, !dbg !10455
  store %struct.block* %41, %struct.block** %blocks25, align 8, !dbg !10456, !tbaa !2757
  %43 = load %struct.block*, %struct.block** %tem, align 8, !dbg !10457, !tbaa !2289
  %44 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10458, !tbaa !2289
  %freeBlocks26 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %44, i32 0, i32 1, !dbg !10459
  store %struct.block* %43, %struct.block** %freeBlocks26, align 8, !dbg !10460, !tbaa !2753
  %45 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10461, !tbaa !2289
  %blocks27 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %45, i32 0, i32 0, !dbg !10462
  %46 = load %struct.block*, %struct.block** %blocks27, align 8, !dbg !10462, !tbaa !2757
  %s28 = getelementptr inbounds %struct.block, %struct.block* %46, i32 0, i32 2, !dbg !10463
  %47 = bitcast [1 x i8]* %s28 to i8*, !dbg !10464
  %48 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10465, !tbaa !2289
  %start29 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %48, i32 0, i32 4, !dbg !10466
  %49 = load i8*, i8** %start29, align 8, !dbg !10466, !tbaa !2794
  %50 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10467, !tbaa !2289
  %end30 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %50, i32 0, i32 2, !dbg !10468
  %51 = load i8*, i8** %end30, align 8, !dbg !10468, !tbaa !2802
  %52 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10469, !tbaa !2289
  %start31 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %52, i32 0, i32 4, !dbg !10470
  %53 = load i8*, i8** %start31, align 8, !dbg !10470, !tbaa !2794
  %sub.ptr.lhs.cast32 = ptrtoint i8* %51 to i64, !dbg !10471
  %sub.ptr.rhs.cast33 = ptrtoint i8* %53 to i64, !dbg !10471
  %sub.ptr.sub34 = sub i64 %sub.ptr.lhs.cast32, %sub.ptr.rhs.cast33, !dbg !10471
  %mul = mul i64 %sub.ptr.sub34, 1, !dbg !10472
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %49, i64 %mul, i32 1, i1 false), !dbg !10464
  %54 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10473, !tbaa !2289
  %blocks35 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %54, i32 0, i32 0, !dbg !10474
  %55 = load %struct.block*, %struct.block** %blocks35, align 8, !dbg !10474, !tbaa !2757
  %s36 = getelementptr inbounds %struct.block, %struct.block* %55, i32 0, i32 2, !dbg !10475
  %arraydecay37 = getelementptr inbounds [1 x i8], [1 x i8]* %s36, i32 0, i32 0, !dbg !10473
  %56 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10476, !tbaa !2289
  %ptr38 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %56, i32 0, i32 3, !dbg !10477
  %57 = load i8*, i8** %ptr38, align 8, !dbg !10477, !tbaa !2798
  %58 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10478, !tbaa !2289
  %start39 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %58, i32 0, i32 4, !dbg !10479
  %59 = load i8*, i8** %start39, align 8, !dbg !10479, !tbaa !2794
  %sub.ptr.lhs.cast40 = ptrtoint i8* %57 to i64, !dbg !10480
  %sub.ptr.rhs.cast41 = ptrtoint i8* %59 to i64, !dbg !10480
  %sub.ptr.sub42 = sub i64 %sub.ptr.lhs.cast40, %sub.ptr.rhs.cast41, !dbg !10480
  %add.ptr43 = getelementptr i8, i8* %arraydecay37, i64 %sub.ptr.sub42, !dbg !10481
  %60 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10482, !tbaa !2289
  %ptr44 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %60, i32 0, i32 3, !dbg !10483
  store i8* %add.ptr43, i8** %ptr44, align 8, !dbg !10484, !tbaa !2798
  %61 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10485, !tbaa !2289
  %blocks45 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %61, i32 0, i32 0, !dbg !10486
  %62 = load %struct.block*, %struct.block** %blocks45, align 8, !dbg !10486, !tbaa !2757
  %s46 = getelementptr inbounds %struct.block, %struct.block* %62, i32 0, i32 2, !dbg !10487
  %arraydecay47 = getelementptr inbounds [1 x i8], [1 x i8]* %s46, i32 0, i32 0, !dbg !10485
  %63 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10488, !tbaa !2289
  %start48 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %63, i32 0, i32 4, !dbg !10489
  store i8* %arraydecay47, i8** %start48, align 8, !dbg !10490, !tbaa !2794
  %64 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10491, !tbaa !2289
  %start49 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %64, i32 0, i32 4, !dbg !10492
  %65 = load i8*, i8** %start49, align 8, !dbg !10492, !tbaa !2794
  %66 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10493, !tbaa !2289
  %blocks50 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %66, i32 0, i32 0, !dbg !10494
  %67 = load %struct.block*, %struct.block** %blocks50, align 8, !dbg !10494, !tbaa !2757
  %size51 = getelementptr inbounds %struct.block, %struct.block* %67, i32 0, i32 1, !dbg !10495
  %68 = load i32, i32* %size51, align 4, !dbg !10495, !tbaa !10420
  %idx.ext52 = sext i32 %68 to i64, !dbg !10496
  %add.ptr53 = getelementptr i8, i8* %65, i64 %idx.ext52, !dbg !10496
  %69 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10497, !tbaa !2289
  %end54 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %69, i32 0, i32 2, !dbg !10498
  store i8* %add.ptr53, i8** %end54, align 8, !dbg !10499, !tbaa !2802
  store i8 1, i8* %retval, !dbg !10500
  %70 = bitcast %struct.block** %tem to i8*, !dbg !10501
  call void @llvm.lifetime.end(i64 8, i8* %70) #2, !dbg !10501
  br label %return

if.end.55:                                        ; preds = %if.end
  br label %if.end.56, !dbg !10502

if.end.56:                                        ; preds = %if.end.55, %entry
  %71 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10503, !tbaa !2289
  %blocks57 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %71, i32 0, i32 0, !dbg !10504
  %72 = load %struct.block*, %struct.block** %blocks57, align 8, !dbg !10504, !tbaa !2757
  %tobool58 = icmp ne %struct.block* %72, null, !dbg !10503
  br i1 %tobool58, label %land.lhs.true, label %if.else, !dbg !10505

land.lhs.true:                                    ; preds = %if.end.56
  %73 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10506, !tbaa !2289
  %start59 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %73, i32 0, i32 4, !dbg !10508
  %74 = load i8*, i8** %start59, align 8, !dbg !10508, !tbaa !2794
  %75 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10509, !tbaa !2289
  %blocks60 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %75, i32 0, i32 0, !dbg !10510
  %76 = load %struct.block*, %struct.block** %blocks60, align 8, !dbg !10510, !tbaa !2757
  %s61 = getelementptr inbounds %struct.block, %struct.block* %76, i32 0, i32 2, !dbg !10511
  %arraydecay62 = getelementptr inbounds [1 x i8], [1 x i8]* %s61, i32 0, i32 0, !dbg !10509
  %cmp63 = icmp eq i8* %74, %arraydecay62, !dbg !10512
  br i1 %cmp63, label %if.then.65, label %if.else, !dbg !10513

if.then.65:                                       ; preds = %land.lhs.true
  %77 = bitcast i32* %blockSize to i8*, !dbg !10514
  call void @llvm.lifetime.start(i64 4, i8* %77) #2, !dbg !10514
  call void @llvm.dbg.declare(metadata i32* %blockSize, metadata !1806, metadata !2293), !dbg !10515
  %78 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10516, !tbaa !2289
  %end66 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %78, i32 0, i32 2, !dbg !10517
  %79 = load i8*, i8** %end66, align 8, !dbg !10517, !tbaa !2802
  %80 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10518, !tbaa !2289
  %start67 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %80, i32 0, i32 4, !dbg !10519
  %81 = load i8*, i8** %start67, align 8, !dbg !10519, !tbaa !2794
  %sub.ptr.lhs.cast68 = ptrtoint i8* %79 to i64, !dbg !10520
  %sub.ptr.rhs.cast69 = ptrtoint i8* %81 to i64, !dbg !10520
  %sub.ptr.sub70 = sub i64 %sub.ptr.lhs.cast68, %sub.ptr.rhs.cast69, !dbg !10520
  %conv71 = trunc i64 %sub.ptr.sub70 to i32, !dbg !10521
  %mul72 = mul i32 %conv71, 2, !dbg !10522
  store i32 %mul72, i32* %blockSize, align 4, !dbg !10515, !tbaa !3391
  %82 = bitcast %struct.block** %temp to i8*, !dbg !10523
  call void @llvm.lifetime.start(i64 8, i8* %82) #2, !dbg !10523
  call void @llvm.dbg.declare(metadata %struct.block** %temp, metadata !1809, metadata !2293), !dbg !10524
  %83 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10525, !tbaa !2289
  %mem = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %83, i32 0, i32 5, !dbg !10526
  %84 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mem, align 8, !dbg !10526, !tbaa !4622
  %realloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %84, i32 0, i32 1, !dbg !10527
  %85 = load i8* (i8*, i64)*, i8* (i8*, i64)** %realloc_fcn, align 8, !dbg !10527, !tbaa !2350
  %86 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10528, !tbaa !2289
  %blocks73 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %86, i32 0, i32 0, !dbg !10529
  %87 = load %struct.block*, %struct.block** %blocks73, align 8, !dbg !10529, !tbaa !2757
  %88 = bitcast %struct.block* %87 to i8*, !dbg !10528
  %89 = load i32, i32* %blockSize, align 4, !dbg !10530, !tbaa !3391
  %conv74 = sext i32 %89 to i64, !dbg !10530
  %mul75 = mul i64 %conv74, 1, !dbg !10531
  %add = add i64 12, %mul75, !dbg !10532
  %call = call i8* %85(i8* %88, i64 %add), !dbg !10525
  %90 = bitcast i8* %call to %struct.block*, !dbg !10533
  store %struct.block* %90, %struct.block** %temp, align 8, !dbg !10524, !tbaa !2289
  %91 = load %struct.block*, %struct.block** %temp, align 8, !dbg !10534, !tbaa !2289
  %cmp76 = icmp eq %struct.block* %91, null, !dbg !10536
  br i1 %cmp76, label %if.then.78, label %if.end.79, !dbg !10537

if.then.78:                                       ; preds = %if.then.65
  store i8 0, i8* %retval, !dbg !10538
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10538

if.end.79:                                        ; preds = %if.then.65
  %92 = load %struct.block*, %struct.block** %temp, align 8, !dbg !10539, !tbaa !2289
  %93 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10540, !tbaa !2289
  %blocks80 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %93, i32 0, i32 0, !dbg !10541
  store %struct.block* %92, %struct.block** %blocks80, align 8, !dbg !10542, !tbaa !2757
  %94 = load i32, i32* %blockSize, align 4, !dbg !10543, !tbaa !3391
  %95 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10544, !tbaa !2289
  %blocks81 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %95, i32 0, i32 0, !dbg !10545
  %96 = load %struct.block*, %struct.block** %blocks81, align 8, !dbg !10545, !tbaa !2757
  %size82 = getelementptr inbounds %struct.block, %struct.block* %96, i32 0, i32 1, !dbg !10546
  store i32 %94, i32* %size82, align 4, !dbg !10547, !tbaa !10420
  %97 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10548, !tbaa !2289
  %blocks83 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %97, i32 0, i32 0, !dbg !10549
  %98 = load %struct.block*, %struct.block** %blocks83, align 8, !dbg !10549, !tbaa !2757
  %s84 = getelementptr inbounds %struct.block, %struct.block* %98, i32 0, i32 2, !dbg !10550
  %arraydecay85 = getelementptr inbounds [1 x i8], [1 x i8]* %s84, i32 0, i32 0, !dbg !10548
  %99 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10551, !tbaa !2289
  %ptr86 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %99, i32 0, i32 3, !dbg !10552
  %100 = load i8*, i8** %ptr86, align 8, !dbg !10552, !tbaa !2798
  %101 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10553, !tbaa !2289
  %start87 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %101, i32 0, i32 4, !dbg !10554
  %102 = load i8*, i8** %start87, align 8, !dbg !10554, !tbaa !2794
  %sub.ptr.lhs.cast88 = ptrtoint i8* %100 to i64, !dbg !10555
  %sub.ptr.rhs.cast89 = ptrtoint i8* %102 to i64, !dbg !10555
  %sub.ptr.sub90 = sub i64 %sub.ptr.lhs.cast88, %sub.ptr.rhs.cast89, !dbg !10555
  %add.ptr91 = getelementptr i8, i8* %arraydecay85, i64 %sub.ptr.sub90, !dbg !10556
  %103 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10557, !tbaa !2289
  %ptr92 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %103, i32 0, i32 3, !dbg !10558
  store i8* %add.ptr91, i8** %ptr92, align 8, !dbg !10559, !tbaa !2798
  %104 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10560, !tbaa !2289
  %blocks93 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %104, i32 0, i32 0, !dbg !10561
  %105 = load %struct.block*, %struct.block** %blocks93, align 8, !dbg !10561, !tbaa !2757
  %s94 = getelementptr inbounds %struct.block, %struct.block* %105, i32 0, i32 2, !dbg !10562
  %arraydecay95 = getelementptr inbounds [1 x i8], [1 x i8]* %s94, i32 0, i32 0, !dbg !10560
  %106 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10563, !tbaa !2289
  %start96 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %106, i32 0, i32 4, !dbg !10564
  store i8* %arraydecay95, i8** %start96, align 8, !dbg !10565, !tbaa !2794
  %107 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10566, !tbaa !2289
  %start97 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %107, i32 0, i32 4, !dbg !10567
  %108 = load i8*, i8** %start97, align 8, !dbg !10567, !tbaa !2794
  %109 = load i32, i32* %blockSize, align 4, !dbg !10568, !tbaa !3391
  %idx.ext98 = sext i32 %109 to i64, !dbg !10569
  %add.ptr99 = getelementptr i8, i8* %108, i64 %idx.ext98, !dbg !10569
  %110 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10570, !tbaa !2289
  %end100 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %110, i32 0, i32 2, !dbg !10571
  store i8* %add.ptr99, i8** %end100, align 8, !dbg !10572, !tbaa !2802
  store i32 0, i32* %cleanup.dest.slot, !dbg !10573
  br label %cleanup, !dbg !10573

cleanup:                                          ; preds = %if.end.79, %if.then.78
  %111 = bitcast %struct.block** %temp to i8*, !dbg !10574
  call void @llvm.lifetime.end(i64 8, i8* %111) #2, !dbg !10574
  %112 = bitcast i32* %blockSize to i8*, !dbg !10574
  call void @llvm.lifetime.end(i64 4, i8* %112) #2, !dbg !10574
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.163, !dbg !10575

if.else:                                          ; preds = %land.lhs.true, %if.end.56
  %113 = bitcast %struct.block** %tem102 to i8*, !dbg !10576
  call void @llvm.lifetime.start(i64 8, i8* %113) #2, !dbg !10576
  call void @llvm.dbg.declare(metadata %struct.block** %tem102, metadata !1810, metadata !2293), !dbg !10577
  %114 = bitcast i32* %blockSize103 to i8*, !dbg !10578
  call void @llvm.lifetime.start(i64 4, i8* %114) #2, !dbg !10578
  call void @llvm.dbg.declare(metadata i32* %blockSize103, metadata !1812, metadata !2293), !dbg !10579
  %115 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10580, !tbaa !2289
  %end104 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %115, i32 0, i32 2, !dbg !10581
  %116 = load i8*, i8** %end104, align 8, !dbg !10581, !tbaa !2802
  %117 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10582, !tbaa !2289
  %start105 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %117, i32 0, i32 4, !dbg !10583
  %118 = load i8*, i8** %start105, align 8, !dbg !10583, !tbaa !2794
  %sub.ptr.lhs.cast106 = ptrtoint i8* %116 to i64, !dbg !10584
  %sub.ptr.rhs.cast107 = ptrtoint i8* %118 to i64, !dbg !10584
  %sub.ptr.sub108 = sub i64 %sub.ptr.lhs.cast106, %sub.ptr.rhs.cast107, !dbg !10584
  %conv109 = trunc i64 %sub.ptr.sub108 to i32, !dbg !10585
  store i32 %conv109, i32* %blockSize103, align 4, !dbg !10579, !tbaa !3391
  %119 = load i32, i32* %blockSize103, align 4, !dbg !10586, !tbaa !3391
  %cmp110 = icmp slt i32 %119, 1024, !dbg !10588
  br i1 %cmp110, label %if.then.112, label %if.else.113, !dbg !10589

if.then.112:                                      ; preds = %if.else
  store i32 1024, i32* %blockSize103, align 4, !dbg !10590, !tbaa !3391
  br label %if.end.115, !dbg !10591

if.else.113:                                      ; preds = %if.else
  %120 = load i32, i32* %blockSize103, align 4, !dbg !10592, !tbaa !3391
  %mul114 = mul i32 %120, 2, !dbg !10592
  store i32 %mul114, i32* %blockSize103, align 4, !dbg !10592, !tbaa !3391
  br label %if.end.115

if.end.115:                                       ; preds = %if.else.113, %if.then.112
  %121 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10593, !tbaa !2289
  %mem116 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %121, i32 0, i32 5, !dbg !10594
  %122 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mem116, align 8, !dbg !10594, !tbaa !4622
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %122, i32 0, i32 0, !dbg !10595
  %123 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8, !dbg !10595, !tbaa !2331
  %124 = load i32, i32* %blockSize103, align 4, !dbg !10596, !tbaa !3391
  %conv117 = sext i32 %124 to i64, !dbg !10596
  %mul118 = mul i64 %conv117, 1, !dbg !10597
  %add119 = add i64 12, %mul118, !dbg !10598
  %call120 = call i8* %123(i64 %add119), !dbg !10593
  %125 = bitcast i8* %call120 to %struct.block*, !dbg !10599
  store %struct.block* %125, %struct.block** %tem102, align 8, !dbg !10600, !tbaa !2289
  %126 = load %struct.block*, %struct.block** %tem102, align 8, !dbg !10601, !tbaa !2289
  %tobool121 = icmp ne %struct.block* %126, null, !dbg !10601
  br i1 %tobool121, label %if.end.123, label %if.then.122, !dbg !10603

if.then.122:                                      ; preds = %if.end.115
  store i8 0, i8* %retval, !dbg !10604
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.159, !dbg !10604

if.end.123:                                       ; preds = %if.end.115
  %127 = load i32, i32* %blockSize103, align 4, !dbg !10605, !tbaa !3391
  %128 = load %struct.block*, %struct.block** %tem102, align 8, !dbg !10606, !tbaa !2289
  %size124 = getelementptr inbounds %struct.block, %struct.block* %128, i32 0, i32 1, !dbg !10607
  store i32 %127, i32* %size124, align 4, !dbg !10608, !tbaa !10420
  %129 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10609, !tbaa !2289
  %blocks125 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %129, i32 0, i32 0, !dbg !10610
  %130 = load %struct.block*, %struct.block** %blocks125, align 8, !dbg !10610, !tbaa !2757
  %131 = load %struct.block*, %struct.block** %tem102, align 8, !dbg !10611, !tbaa !2289
  %next126 = getelementptr inbounds %struct.block, %struct.block* %131, i32 0, i32 0, !dbg !10612
  store %struct.block* %130, %struct.block** %next126, align 8, !dbg !10613, !tbaa !2773
  %132 = load %struct.block*, %struct.block** %tem102, align 8, !dbg !10614, !tbaa !2289
  %133 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10615, !tbaa !2289
  %blocks127 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %133, i32 0, i32 0, !dbg !10616
  store %struct.block* %132, %struct.block** %blocks127, align 8, !dbg !10617, !tbaa !2757
  %134 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10618, !tbaa !2289
  %ptr128 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %134, i32 0, i32 3, !dbg !10620
  %135 = load i8*, i8** %ptr128, align 8, !dbg !10620, !tbaa !2798
  %136 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10621, !tbaa !2289
  %start129 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %136, i32 0, i32 4, !dbg !10622
  %137 = load i8*, i8** %start129, align 8, !dbg !10622, !tbaa !2794
  %cmp130 = icmp ne i8* %135, %137, !dbg !10623
  br i1 %cmp130, label %if.then.132, label %if.end.141, !dbg !10624

if.then.132:                                      ; preds = %if.end.123
  %138 = load %struct.block*, %struct.block** %tem102, align 8, !dbg !10625, !tbaa !2289
  %s133 = getelementptr inbounds %struct.block, %struct.block* %138, i32 0, i32 2, !dbg !10626
  %139 = bitcast [1 x i8]* %s133 to i8*, !dbg !10627
  %140 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10628, !tbaa !2289
  %start134 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %140, i32 0, i32 4, !dbg !10629
  %141 = load i8*, i8** %start134, align 8, !dbg !10629, !tbaa !2794
  %142 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10630, !tbaa !2289
  %ptr135 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %142, i32 0, i32 3, !dbg !10631
  %143 = load i8*, i8** %ptr135, align 8, !dbg !10631, !tbaa !2798
  %144 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10632, !tbaa !2289
  %start136 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %144, i32 0, i32 4, !dbg !10633
  %145 = load i8*, i8** %start136, align 8, !dbg !10633, !tbaa !2794
  %sub.ptr.lhs.cast137 = ptrtoint i8* %143 to i64, !dbg !10634
  %sub.ptr.rhs.cast138 = ptrtoint i8* %145 to i64, !dbg !10634
  %sub.ptr.sub139 = sub i64 %sub.ptr.lhs.cast137, %sub.ptr.rhs.cast138, !dbg !10634
  %mul140 = mul i64 %sub.ptr.sub139, 1, !dbg !10635
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %139, i8* %141, i64 %mul140, i32 1, i1 false), !dbg !10627
  br label %if.end.141, !dbg !10627

if.end.141:                                       ; preds = %if.then.132, %if.end.123
  %146 = load %struct.block*, %struct.block** %tem102, align 8, !dbg !10636, !tbaa !2289
  %s142 = getelementptr inbounds %struct.block, %struct.block* %146, i32 0, i32 2, !dbg !10637
  %arraydecay143 = getelementptr inbounds [1 x i8], [1 x i8]* %s142, i32 0, i32 0, !dbg !10636
  %147 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10638, !tbaa !2289
  %ptr144 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %147, i32 0, i32 3, !dbg !10639
  %148 = load i8*, i8** %ptr144, align 8, !dbg !10639, !tbaa !2798
  %149 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10640, !tbaa !2289
  %start145 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %149, i32 0, i32 4, !dbg !10641
  %150 = load i8*, i8** %start145, align 8, !dbg !10641, !tbaa !2794
  %sub.ptr.lhs.cast146 = ptrtoint i8* %148 to i64, !dbg !10642
  %sub.ptr.rhs.cast147 = ptrtoint i8* %150 to i64, !dbg !10642
  %sub.ptr.sub148 = sub i64 %sub.ptr.lhs.cast146, %sub.ptr.rhs.cast147, !dbg !10642
  %add.ptr149 = getelementptr i8, i8* %arraydecay143, i64 %sub.ptr.sub148, !dbg !10643
  %151 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10644, !tbaa !2289
  %ptr150 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %151, i32 0, i32 3, !dbg !10645
  store i8* %add.ptr149, i8** %ptr150, align 8, !dbg !10646, !tbaa !2798
  %152 = load %struct.block*, %struct.block** %tem102, align 8, !dbg !10647, !tbaa !2289
  %s151 = getelementptr inbounds %struct.block, %struct.block* %152, i32 0, i32 2, !dbg !10648
  %arraydecay152 = getelementptr inbounds [1 x i8], [1 x i8]* %s151, i32 0, i32 0, !dbg !10647
  %153 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10649, !tbaa !2289
  %start153 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %153, i32 0, i32 4, !dbg !10650
  store i8* %arraydecay152, i8** %start153, align 8, !dbg !10651, !tbaa !2794
  %154 = load %struct.block*, %struct.block** %tem102, align 8, !dbg !10652, !tbaa !2289
  %s154 = getelementptr inbounds %struct.block, %struct.block* %154, i32 0, i32 2, !dbg !10653
  %arraydecay155 = getelementptr inbounds [1 x i8], [1 x i8]* %s154, i32 0, i32 0, !dbg !10652
  %155 = load i32, i32* %blockSize103, align 4, !dbg !10654, !tbaa !3391
  %idx.ext156 = sext i32 %155 to i64, !dbg !10655
  %add.ptr157 = getelementptr i8, i8* %arraydecay155, i64 %idx.ext156, !dbg !10655
  %156 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10656, !tbaa !2289
  %end158 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %156, i32 0, i32 2, !dbg !10657
  store i8* %add.ptr157, i8** %end158, align 8, !dbg !10658, !tbaa !2802
  store i32 0, i32* %cleanup.dest.slot, !dbg !10659
  br label %cleanup.159, !dbg !10659

cleanup.159:                                      ; preds = %if.end.141, %if.then.122
  %157 = bitcast i32* %blockSize103 to i8*, !dbg !10660
  call void @llvm.lifetime.end(i64 4, i8* %157) #2, !dbg !10660
  %158 = bitcast %struct.block** %tem102 to i8*, !dbg !10660
  call void @llvm.lifetime.end(i64 8, i8* %158) #2, !dbg !10660
  %cleanup.dest.161 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.161, label %unreachable [
    i32 0, label %cleanup.cont.162
    i32 1, label %return
  ]

cleanup.cont.162:                                 ; preds = %cleanup.159
  br label %if.end.163

if.end.163:                                       ; preds = %cleanup.cont.162, %cleanup.cont
  store i8 1, i8* %retval, !dbg !10661
  br label %return, !dbg !10661

return:                                           ; preds = %if.end.163, %cleanup.159, %cleanup, %if.then.18, %if.then.1
  %159 = load i8, i8* %retval, !dbg !10662
  ret i8 %159, !dbg !10662

unreachable:                                      ; preds = %cleanup.159, %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @storeAttributeValue(%struct.XML_ParserStruct* %parser, %struct.encoding* %enc, i8 zeroext %isCdata, i8* %ptr, i8* %end, %struct.STRING_POOL* %pool) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %isCdata.addr = alloca i8, align 1
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %pool.addr = alloca %struct.STRING_POOL*, align 8
  %result = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1817, metadata !2293), !dbg !10663
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !1818, metadata !2293), !dbg !10664
  store i8 %isCdata, i8* %isCdata.addr, align 1, !tbaa !2307
  call void @llvm.dbg.declare(metadata i8* %isCdata.addr, metadata !1819, metadata !2293), !dbg !10665
  store i8* %ptr, i8** %ptr.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !1820, metadata !2293), !dbg !10666
  store i8* %end, i8** %end.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !1821, metadata !2293), !dbg !10667
  store %struct.STRING_POOL* %pool, %struct.STRING_POOL** %pool.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.STRING_POOL** %pool.addr, metadata !1822, metadata !2293), !dbg !10668
  %0 = bitcast i32* %result to i8*, !dbg !10669
  call void @llvm.lifetime.start(i64 4, i8* %0) #2, !dbg !10669
  call void @llvm.dbg.declare(metadata i32* %result, metadata !1823, metadata !2293), !dbg !10670
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10671, !tbaa !2289
  %2 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10672, !tbaa !2289
  %3 = load i8, i8* %isCdata.addr, align 1, !dbg !10673, !tbaa !2307
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !10674, !tbaa !2289
  %5 = load i8*, i8** %end.addr, align 8, !dbg !10675, !tbaa !2289
  %6 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10676, !tbaa !2289
  %call = call i32 @appendAttributeValue(%struct.XML_ParserStruct* %1, %struct.encoding* %2, i8 zeroext %3, i8* %4, i8* %5, %struct.STRING_POOL* %6), !dbg !10677
  store i32 %call, i32* %result, align 4, !dbg !10670, !tbaa !2307
  %7 = load i32, i32* %result, align 4, !dbg !10678, !tbaa !2307
  %tobool = icmp ne i32 %7, 0, !dbg !10678
  br i1 %tobool, label %if.then, label %if.end, !dbg !10680

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %result, align 4, !dbg !10681, !tbaa !2307
  store i32 %8, i32* %retval, !dbg !10682
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10682

if.end:                                           ; preds = %entry
  %9 = load i8, i8* %isCdata.addr, align 1, !dbg !10683, !tbaa !2307
  %tobool1 = icmp ne i8 %9, 0, !dbg !10683
  br i1 %tobool1, label %if.end.9, label %land.lhs.true, !dbg !10685

land.lhs.true:                                    ; preds = %if.end
  %10 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10686, !tbaa !2289
  %ptr2 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %10, i32 0, i32 3, !dbg !10688
  %11 = load i8*, i8** %ptr2, align 8, !dbg !10688, !tbaa !2798
  %12 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10689, !tbaa !2289
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %12, i32 0, i32 4, !dbg !10690
  %13 = load i8*, i8** %start, align 8, !dbg !10690, !tbaa !2794
  %sub.ptr.lhs.cast = ptrtoint i8* %11 to i64, !dbg !10691
  %sub.ptr.rhs.cast = ptrtoint i8* %13 to i64, !dbg !10691
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10691
  %tobool3 = icmp ne i64 %sub.ptr.sub, 0, !dbg !10691
  br i1 %tobool3, label %land.lhs.true.4, label %if.end.9, !dbg !10692

land.lhs.true.4:                                  ; preds = %land.lhs.true
  %14 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10693, !tbaa !2289
  %ptr5 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %14, i32 0, i32 3, !dbg !10695
  %15 = load i8*, i8** %ptr5, align 8, !dbg !10695, !tbaa !2798
  %arrayidx = getelementptr i8, i8* %15, i64 -1, !dbg !10696
  %16 = load i8, i8* %arrayidx, align 1, !dbg !10696, !tbaa !2307
  %conv = sext i8 %16 to i32, !dbg !10697
  %cmp = icmp eq i32 %conv, 32, !dbg !10698
  br i1 %cmp, label %if.then.7, label %if.end.9, !dbg !10699

if.then.7:                                        ; preds = %land.lhs.true.4
  %17 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10700, !tbaa !2289
  %ptr8 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %17, i32 0, i32 3, !dbg !10701
  %18 = load i8*, i8** %ptr8, align 8, !dbg !10702, !tbaa !2798
  %incdec.ptr = getelementptr i8, i8* %18, i32 -1, !dbg !10702
  store i8* %incdec.ptr, i8** %ptr8, align 8, !dbg !10702, !tbaa !2798
  br label %if.end.9, !dbg !10703

if.end.9:                                         ; preds = %if.then.7, %land.lhs.true.4, %land.lhs.true, %if.end
  %19 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10704, !tbaa !2289
  %ptr10 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %19, i32 0, i32 3, !dbg !10706
  %20 = load i8*, i8** %ptr10, align 8, !dbg !10706, !tbaa !2798
  %21 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10707, !tbaa !2289
  %end11 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %21, i32 0, i32 2, !dbg !10708
  %22 = load i8*, i8** %end11, align 8, !dbg !10708, !tbaa !2802
  %cmp12 = icmp eq i8* %20, %22, !dbg !10709
  br i1 %cmp12, label %land.lhs.true.14, label %cond.false, !dbg !10710

land.lhs.true.14:                                 ; preds = %if.end.9
  %23 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10711, !tbaa !2289
  %call15 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %23), !dbg !10713
  %tobool16 = icmp ne i8 %call15, 0, !dbg !10713
  br i1 %tobool16, label %cond.false, label %cond.true, !dbg !10714

cond.true:                                        ; preds = %land.lhs.true.14
  br i1 false, label %if.end.20, label %if.then.19, !dbg !10715

cond.false:                                       ; preds = %land.lhs.true.14, %if.end.9
  %24 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !10717, !tbaa !2289
  %ptr17 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %24, i32 0, i32 3, !dbg !10720
  %25 = load i8*, i8** %ptr17, align 8, !dbg !10721, !tbaa !2798
  %incdec.ptr18 = getelementptr i8, i8* %25, i32 1, !dbg !10721
  store i8* %incdec.ptr18, i8** %ptr17, align 8, !dbg !10721, !tbaa !2798
  store i8 0, i8* %25, align 1, !dbg !10722, !tbaa !2307
  br i1 true, label %if.end.20, label %if.then.19, !dbg !10714

if.then.19:                                       ; preds = %cond.false, %cond.true
  store i32 1, i32* %retval, !dbg !10723
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10723

if.end.20:                                        ; preds = %cond.false, %cond.true
  store i32 0, i32* %retval, !dbg !10724
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10724

cleanup:                                          ; preds = %if.end.20, %if.then.19, %if.then
  %26 = bitcast i32* %result to i8*, !dbg !10725
  call void @llvm.lifetime.end(i64 4, i8* %26) #2, !dbg !10725
  %27 = load i32, i32* %retval, !dbg !10725
  ret i32 %27, !dbg !10725
}

; Function Attrs: nounwind uwtable
define internal i32 @storeEntityValue(%struct.XML_ParserStruct* %parser, %struct.encoding* %enc, i8* %entityTextPtr, i8* %entityTextEnd) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %entityTextPtr.addr = alloca i8*, align 8
  %entityTextEnd.addr = alloca i8*, align 8
  %dtd = alloca %struct.DTD*, align 8
  %pool = alloca %struct.STRING_POOL*, align 8
  %result = alloca i32, align 4
  %oldInEntityValue = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %next = alloca i8*, align 8
  %tok = alloca i32, align 4
  %name = alloca i8*, align 8
  %entity = alloca %struct.ENTITY*, align 8
  %buf = alloca [4 x i8], align 1
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1856, metadata !2293), !dbg !10726
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !1857, metadata !2293), !dbg !10727
  store i8* %entityTextPtr, i8** %entityTextPtr.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %entityTextPtr.addr, metadata !1858, metadata !2293), !dbg !10728
  store i8* %entityTextEnd, i8** %entityTextEnd.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %entityTextEnd.addr, metadata !1859, metadata !2293), !dbg !10729
  %0 = bitcast %struct.DTD** %dtd to i8*, !dbg !10730
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !10730
  call void @llvm.dbg.declare(metadata %struct.DTD** %dtd, metadata !1860, metadata !2293), !dbg !10731
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10732, !tbaa !2289
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 65, !dbg !10733
  %2 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !10733, !tbaa !2478
  store %struct.DTD* %2, %struct.DTD** %dtd, align 8, !dbg !10731, !tbaa !2289
  %3 = bitcast %struct.STRING_POOL** %pool to i8*, !dbg !10734
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !10734
  call void @llvm.dbg.declare(metadata %struct.STRING_POOL** %pool, metadata !1861, metadata !2293), !dbg !10735
  %4 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !10736, !tbaa !2289
  %entityValuePool = getelementptr inbounds %struct.DTD, %struct.DTD* %4, i32 0, i32 5, !dbg !10737
  store %struct.STRING_POOL* %entityValuePool, %struct.STRING_POOL** %pool, align 8, !dbg !10735, !tbaa !2289
  %5 = bitcast i32* %result to i8*, !dbg !10738
  call void @llvm.lifetime.start(i64 4, i8* %5) #2, !dbg !10738
  call void @llvm.dbg.declare(metadata i32* %result, metadata !1862, metadata !2293), !dbg !10739
  store i32 0, i32* %result, align 4, !dbg !10739, !tbaa !2307
  %6 = bitcast i32* %oldInEntityValue to i8*, !dbg !10740
  call void @llvm.lifetime.start(i64 4, i8* %6) #2, !dbg !10740
  call void @llvm.dbg.declare(metadata i32* %oldInEntityValue, metadata !1863, metadata !2293), !dbg !10741
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10742, !tbaa !2289
  %m_prologState = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 44, !dbg !10743
  %inEntityValue = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState, i32 0, i32 5, !dbg !10744
  %8 = load i32, i32* %inEntityValue, align 4, !dbg !10744, !tbaa !3390
  store i32 %8, i32* %oldInEntityValue, align 4, !dbg !10741, !tbaa !3391
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10745, !tbaa !2289
  %m_prologState1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 44, !dbg !10746
  %inEntityValue2 = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState1, i32 0, i32 5, !dbg !10747
  store i32 1, i32* %inEntityValue2, align 4, !dbg !10748, !tbaa !3390
  %10 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool, align 8, !dbg !10749, !tbaa !2289
  %blocks = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %10, i32 0, i32 0, !dbg !10751
  %11 = load %struct.block*, %struct.block** %blocks, align 8, !dbg !10751, !tbaa !2757
  %tobool = icmp ne %struct.block* %11, null, !dbg !10749
  br i1 %tobool, label %if.end.5, label %if.then, !dbg !10752

if.then:                                          ; preds = %entry
  %12 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool, align 8, !dbg !10753, !tbaa !2289
  %call = call zeroext i8 @poolGrow(%struct.STRING_POOL* %12), !dbg !10756
  %tobool3 = icmp ne i8 %call, 0, !dbg !10756
  br i1 %tobool3, label %if.end, label %if.then.4, !dbg !10757

if.then.4:                                        ; preds = %if.then
  store i32 1, i32* %retval, !dbg !10758
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.153, !dbg !10758

if.end:                                           ; preds = %if.then
  br label %if.end.5, !dbg !10759

if.end.5:                                         ; preds = %if.end, %entry
  br label %for.cond, !dbg !10760

for.cond:                                         ; preds = %cleanup.cont.150, %if.end.5
  %13 = bitcast i8** %next to i8*, !dbg !10761
  call void @llvm.lifetime.start(i64 8, i8* %13) #2, !dbg !10761
  call void @llvm.dbg.declare(metadata i8** %next, metadata !1864, metadata !2293), !dbg !10762
  %14 = bitcast i32* %tok to i8*, !dbg !10763
  call void @llvm.lifetime.start(i64 4, i8* %14) #2, !dbg !10763
  call void @llvm.dbg.declare(metadata i32* %tok, metadata !1868, metadata !2293), !dbg !10764
  %15 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10765, !tbaa !2289
  %literalScanners = getelementptr inbounds %struct.encoding, %struct.encoding* %15, i32 0, i32 1, !dbg !10766
  %arrayidx = getelementptr [2 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [2 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %literalScanners, i32 0, i64 1, !dbg !10767
  %16 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx, align 8, !dbg !10767, !tbaa !2289
  %17 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10768, !tbaa !2289
  %18 = load i8*, i8** %entityTextPtr.addr, align 8, !dbg !10769, !tbaa !2289
  %19 = load i8*, i8** %entityTextEnd.addr, align 8, !dbg !10770, !tbaa !2289
  %call6 = call i32 %16(%struct.encoding* %17, i8* %18, i8* %19, i8** %next), !dbg !10771
  store i32 %call6, i32* %tok, align 4, !dbg !10764, !tbaa !3391
  %20 = load i32, i32* %tok, align 4, !dbg !10772, !tbaa !3391
  switch i32 %20, label %sw.default [
    i32 28, label %sw.bb
    i32 -4, label %sw.bb.67
    i32 9, label %sw.bb.68
    i32 6, label %sw.bb.68
    i32 -3, label %sw.bb.73
    i32 7, label %sw.bb.77
    i32 10, label %sw.bb.86
    i32 -1, label %sw.bb.127
    i32 0, label %sw.bb.134
  ], !dbg !10773

sw.bb:                                            ; preds = %for.cond
  %21 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10774, !tbaa !2289
  %m_isParamEntity = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %21, i32 0, i32 86, !dbg !10775
  %22 = load i8, i8* %m_isParamEntity, align 1, !dbg !10775, !tbaa !3056
  %conv = zext i8 %22 to i32, !dbg !10776
  %tobool7 = icmp ne i32 %conv, 0, !dbg !10776
  br i1 %tobool7, label %if.then.9, label %lor.lhs.false, !dbg !10777

lor.lhs.false:                                    ; preds = %sw.bb
  %23 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10778, !tbaa !2289
  %24 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10780, !tbaa !2289
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %24, i32 0, i32 34, !dbg !10781
  %25 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !10781, !tbaa !5191
  %cmp = icmp ne %struct.encoding* %23, %25, !dbg !10782
  br i1 %cmp, label %if.then.9, label %if.end.65, !dbg !10783

if.then.9:                                        ; preds = %lor.lhs.false, %sw.bb
  %26 = bitcast i8** %name to i8*, !dbg !10784
  call void @llvm.lifetime.start(i64 8, i8* %26) #2, !dbg !10784
  call void @llvm.dbg.declare(metadata i8** %name, metadata !1869, metadata !2293), !dbg !10785
  %27 = bitcast %struct.ENTITY** %entity to i8*, !dbg !10786
  call void @llvm.lifetime.start(i64 8, i8* %27) #2, !dbg !10786
  call void @llvm.dbg.declare(metadata %struct.ENTITY** %entity, metadata !1873, metadata !2293), !dbg !10787
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10788, !tbaa !2289
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %28, i32 0, i32 79, !dbg !10789
  %29 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10790, !tbaa !2289
  %30 = load i8*, i8** %entityTextPtr.addr, align 8, !dbg !10791, !tbaa !2289
  %31 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10792, !tbaa !2289
  %minBytesPerChar = getelementptr inbounds %struct.encoding, %struct.encoding* %31, i32 0, i32 13, !dbg !10793
  %32 = load i32, i32* %minBytesPerChar, align 4, !dbg !10793, !tbaa !6758
  %idx.ext = sext i32 %32 to i64, !dbg !10794
  %add.ptr = getelementptr i8, i8* %30, i64 %idx.ext, !dbg !10794
  %33 = load i8*, i8** %next, align 8, !dbg !10795, !tbaa !2289
  %34 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10796, !tbaa !2289
  %minBytesPerChar10 = getelementptr inbounds %struct.encoding, %struct.encoding* %34, i32 0, i32 13, !dbg !10797
  %35 = load i32, i32* %minBytesPerChar10, align 4, !dbg !10797, !tbaa !6758
  %idx.ext11 = sext i32 %35 to i64, !dbg !10798
  %idx.neg = sub i64 0, %idx.ext11, !dbg !10798
  %add.ptr12 = getelementptr i8, i8* %33, i64 %idx.neg, !dbg !10798
  %call13 = call i8* @poolStoreString(%struct.STRING_POOL* %m_tempPool, %struct.encoding* %29, i8* %add.ptr, i8* %add.ptr12), !dbg !10799
  store i8* %call13, i8** %name, align 8, !dbg !10800, !tbaa !2289
  %36 = load i8*, i8** %name, align 8, !dbg !10801, !tbaa !2289
  %tobool14 = icmp ne i8* %36, null, !dbg !10801
  br i1 %tobool14, label %if.end.16, label %if.then.15, !dbg !10803

if.then.15:                                       ; preds = %if.then.9
  store i32 1, i32* %result, align 4, !dbg !10804, !tbaa !2307
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10806

if.end.16:                                        ; preds = %if.then.9
  %37 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10807, !tbaa !2289
  %38 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !10808, !tbaa !2289
  %paramEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %38, i32 0, i32 10, !dbg !10809
  %39 = load i8*, i8** %name, align 8, !dbg !10810, !tbaa !2289
  %call17 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %37, %struct.HASH_TABLE* %paramEntities, i8* %39, i64 0), !dbg !10811
  %40 = bitcast %struct.NAMED* %call17 to %struct.ENTITY*, !dbg !10812
  store %struct.ENTITY* %40, %struct.ENTITY** %entity, align 8, !dbg !10813, !tbaa !2289
  %41 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10814, !tbaa !2289
  %m_tempPool18 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %41, i32 0, i32 79, !dbg !10815
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool18, i32 0, i32 4, !dbg !10816
  %42 = load i8*, i8** %start, align 8, !dbg !10816, !tbaa !2794
  %43 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10817, !tbaa !2289
  %m_tempPool19 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %43, i32 0, i32 79, !dbg !10818
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool19, i32 0, i32 3, !dbg !10819
  store i8* %42, i8** %ptr, align 8, !dbg !10820, !tbaa !2798
  %44 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !10821, !tbaa !2289
  %tobool20 = icmp ne %struct.ENTITY* %44, null, !dbg !10821
  br i1 %tobool20, label %if.end.22, label %if.then.21, !dbg !10823

if.then.21:                                       ; preds = %if.end.16
  %45 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !10824, !tbaa !2289
  %standalone = getelementptr inbounds %struct.DTD, %struct.DTD* %45, i32 0, i32 8, !dbg !10826
  %46 = load i8, i8* %standalone, align 1, !dbg !10826, !tbaa !3187
  %47 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !10827, !tbaa !2289
  %keepProcessing = getelementptr inbounds %struct.DTD, %struct.DTD* %47, i32 0, i32 6, !dbg !10828
  store i8 %46, i8* %keepProcessing, align 1, !dbg !10829, !tbaa !3179
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10830

if.end.22:                                        ; preds = %if.end.16
  %48 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !10831, !tbaa !2289
  %open = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %48, i32 0, i32 8, !dbg !10833
  %49 = load i8, i8* %open, align 1, !dbg !10833, !tbaa !4090
  %tobool23 = icmp ne i8 %49, 0, !dbg !10831
  br i1 %tobool23, label %if.then.24, label %if.end.30, !dbg !10834

if.then.24:                                       ; preds = %if.end.22
  %50 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10835, !tbaa !2289
  %51 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10838, !tbaa !2289
  %m_encoding25 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %51, i32 0, i32 34, !dbg !10839
  %52 = load %struct.encoding*, %struct.encoding** %m_encoding25, align 8, !dbg !10839, !tbaa !5191
  %cmp26 = icmp eq %struct.encoding* %50, %52, !dbg !10840
  br i1 %cmp26, label %if.then.28, label %if.end.29, !dbg !10841

if.then.28:                                       ; preds = %if.then.24
  %53 = load i8*, i8** %entityTextPtr.addr, align 8, !dbg !10842, !tbaa !2289
  %54 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10843, !tbaa !2289
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %54, i32 0, i32 47, !dbg !10844
  store i8* %53, i8** %m_eventPtr, align 8, !dbg !10845, !tbaa !3006
  br label %if.end.29, !dbg !10846

if.end.29:                                        ; preds = %if.then.28, %if.then.24
  store i32 12, i32* %result, align 4, !dbg !10847, !tbaa !2307
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10848

if.end.30:                                        ; preds = %if.end.22
  %55 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !10849, !tbaa !2289
  %systemId = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %55, i32 0, i32 4, !dbg !10851
  %56 = load i8*, i8** %systemId, align 8, !dbg !10851, !tbaa !6933
  %tobool31 = icmp ne i8* %56, null, !dbg !10849
  br i1 %tobool31, label %if.then.32, label %if.else.53, !dbg !10852

if.then.32:                                       ; preds = %if.end.30
  %57 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10853, !tbaa !2289
  %m_externalEntityRefHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %57, i32 0, i32 26, !dbg !10856
  %58 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %m_externalEntityRefHandler, align 8, !dbg !10856, !tbaa !2906
  %tobool33 = icmp ne i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)* %58, null, !dbg !10857
  br i1 %tobool33, label %if.then.34, label %if.else, !dbg !10858

if.then.34:                                       ; preds = %if.then.32
  %59 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !10859, !tbaa !2289
  %paramEntityRead = getelementptr inbounds %struct.DTD, %struct.DTD* %59, i32 0, i32 9, !dbg !10861
  store i8 0, i8* %paramEntityRead, align 1, !dbg !10862, !tbaa !3108
  %60 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !10863, !tbaa !2289
  %open35 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %60, i32 0, i32 8, !dbg !10864
  store i8 1, i8* %open35, align 1, !dbg !10865, !tbaa !4090
  %61 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10866, !tbaa !2289
  %m_externalEntityRefHandler36 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %61, i32 0, i32 26, !dbg !10868
  %62 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %m_externalEntityRefHandler36, align 8, !dbg !10868, !tbaa !2906
  %63 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10869, !tbaa !2289
  %m_externalEntityRefHandlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %63, i32 0, i32 27, !dbg !10870
  %64 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %m_externalEntityRefHandlerArg, align 8, !dbg !10870, !tbaa !2911
  %65 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !10871, !tbaa !2289
  %base = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %65, i32 0, i32 5, !dbg !10872
  %66 = load i8*, i8** %base, align 8, !dbg !10872, !tbaa !6920
  %67 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !10873, !tbaa !2289
  %systemId37 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %67, i32 0, i32 4, !dbg !10874
  %68 = load i8*, i8** %systemId37, align 8, !dbg !10874, !tbaa !6933
  %69 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !10875, !tbaa !2289
  %publicId = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %69, i32 0, i32 6, !dbg !10876
  %70 = load i8*, i8** %publicId, align 8, !dbg !10876, !tbaa !6833
  %call38 = call i32 %62(%struct.XML_ParserStruct* %64, i8* null, i8* %66, i8* %68, i8* %70), !dbg !10877
  %tobool39 = icmp ne i32 %call38, 0, !dbg !10877
  br i1 %tobool39, label %if.end.42, label %if.then.40, !dbg !10878

if.then.40:                                       ; preds = %if.then.34
  %71 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !10879, !tbaa !2289
  %open41 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %71, i32 0, i32 8, !dbg !10881
  store i8 0, i8* %open41, align 1, !dbg !10882, !tbaa !4090
  store i32 21, i32* %result, align 4, !dbg !10883, !tbaa !2307
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10884

if.end.42:                                        ; preds = %if.then.34
  %72 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !10885, !tbaa !2289
  %open43 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %72, i32 0, i32 8, !dbg !10886
  store i8 0, i8* %open43, align 1, !dbg !10887, !tbaa !4090
  %73 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !10888, !tbaa !2289
  %paramEntityRead44 = getelementptr inbounds %struct.DTD, %struct.DTD* %73, i32 0, i32 9, !dbg !10890
  %74 = load i8, i8* %paramEntityRead44, align 1, !dbg !10890, !tbaa !3108
  %tobool45 = icmp ne i8 %74, 0, !dbg !10888
  br i1 %tobool45, label %if.end.49, label %if.then.46, !dbg !10891

if.then.46:                                       ; preds = %if.end.42
  %75 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !10892, !tbaa !2289
  %standalone47 = getelementptr inbounds %struct.DTD, %struct.DTD* %75, i32 0, i32 8, !dbg !10893
  %76 = load i8, i8* %standalone47, align 1, !dbg !10893, !tbaa !3187
  %77 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !10894, !tbaa !2289
  %keepProcessing48 = getelementptr inbounds %struct.DTD, %struct.DTD* %77, i32 0, i32 6, !dbg !10895
  store i8 %76, i8* %keepProcessing48, align 1, !dbg !10896, !tbaa !3179
  br label %if.end.49, !dbg !10894

if.end.49:                                        ; preds = %if.then.46, %if.end.42
  br label %if.end.52, !dbg !10897

if.else:                                          ; preds = %if.then.32
  %78 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !10898, !tbaa !2289
  %standalone50 = getelementptr inbounds %struct.DTD, %struct.DTD* %78, i32 0, i32 8, !dbg !10899
  %79 = load i8, i8* %standalone50, align 1, !dbg !10899, !tbaa !3187
  %80 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !10900, !tbaa !2289
  %keepProcessing51 = getelementptr inbounds %struct.DTD, %struct.DTD* %80, i32 0, i32 6, !dbg !10901
  store i8 %79, i8* %keepProcessing51, align 1, !dbg !10902, !tbaa !3179
  br label %if.end.52

if.end.52:                                        ; preds = %if.else, %if.end.49
  br label %if.end.63, !dbg !10903

if.else.53:                                       ; preds = %if.end.30
  %81 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !10904, !tbaa !2289
  %open54 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %81, i32 0, i32 8, !dbg !10906
  store i8 1, i8* %open54, align 1, !dbg !10907, !tbaa !4090
  %82 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10908, !tbaa !2289
  %83 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10909, !tbaa !2289
  %m_internalEncoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %83, i32 0, i32 36, !dbg !10910
  %84 = load %struct.encoding*, %struct.encoding** %m_internalEncoding, align 8, !dbg !10910, !tbaa !2599
  %85 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !10911, !tbaa !2289
  %textPtr = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %85, i32 0, i32 1, !dbg !10912
  %86 = load i8*, i8** %textPtr, align 8, !dbg !10912, !tbaa !7541
  %87 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !10913, !tbaa !2289
  %textPtr55 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %87, i32 0, i32 1, !dbg !10914
  %88 = load i8*, i8** %textPtr55, align 8, !dbg !10914, !tbaa !7541
  %89 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !10915, !tbaa !2289
  %textLen = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %89, i32 0, i32 2, !dbg !10916
  %90 = load i32, i32* %textLen, align 4, !dbg !10916, !tbaa !7554
  %idx.ext56 = sext i32 %90 to i64, !dbg !10917
  %add.ptr57 = getelementptr i8, i8* %88, i64 %idx.ext56, !dbg !10917
  %call58 = call i32 @storeEntityValue(%struct.XML_ParserStruct* %82, %struct.encoding* %84, i8* %86, i8* %add.ptr57), !dbg !10918
  store i32 %call58, i32* %result, align 4, !dbg !10919, !tbaa !2307
  %91 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !10920, !tbaa !2289
  %open59 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %91, i32 0, i32 8, !dbg !10921
  store i8 0, i8* %open59, align 1, !dbg !10922, !tbaa !4090
  %92 = load i32, i32* %result, align 4, !dbg !10923, !tbaa !2307
  %tobool60 = icmp ne i32 %92, 0, !dbg !10923
  br i1 %tobool60, label %if.then.61, label %if.end.62, !dbg !10925

if.then.61:                                       ; preds = %if.else.53
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10926

if.end.62:                                        ; preds = %if.else.53
  br label %if.end.63

if.end.63:                                        ; preds = %if.end.62, %if.end.52
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10927

cleanup:                                          ; preds = %if.then.61, %if.then.40, %if.end.29, %if.then.21, %if.then.15, %if.end.63
  %93 = bitcast %struct.ENTITY** %entity to i8*, !dbg !10928
  call void @llvm.lifetime.end(i64 8, i8* %93) #2, !dbg !10928
  %94 = bitcast i8** %name to i8*, !dbg !10928
  call void @llvm.lifetime.end(i64 8, i8* %94) #2, !dbg !10928
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.147 [
    i32 4, label %sw.epilog
  ]

if.end.65:                                        ; preds = %lor.lhs.false
  %95 = load i8*, i8** %entityTextPtr.addr, align 8, !dbg !10929, !tbaa !2289
  %96 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10930, !tbaa !2289
  %m_eventPtr66 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %96, i32 0, i32 47, !dbg !10931
  store i8* %95, i8** %m_eventPtr66, align 8, !dbg !10932, !tbaa !3006
  store i32 10, i32* %result, align 4, !dbg !10933, !tbaa !2307
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup.147, !dbg !10934

sw.bb.67:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4, !dbg !10935, !tbaa !2307
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup.147, !dbg !10936

sw.bb.68:                                         ; preds = %for.cond, %for.cond
  %97 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool, align 8, !dbg !10937, !tbaa !2289
  %98 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10939, !tbaa !2289
  %99 = load i8*, i8** %entityTextPtr.addr, align 8, !dbg !10940, !tbaa !2289
  %100 = load i8*, i8** %next, align 8, !dbg !10941, !tbaa !2289
  %call69 = call i8* @poolAppend(%struct.STRING_POOL* %97, %struct.encoding* %98, i8* %99, i8* %100), !dbg !10942
  %tobool70 = icmp ne i8* %call69, null, !dbg !10942
  br i1 %tobool70, label %if.end.72, label %if.then.71, !dbg !10943

if.then.71:                                       ; preds = %sw.bb.68
  store i32 1, i32* %result, align 4, !dbg !10944, !tbaa !2307
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup.147, !dbg !10946

if.end.72:                                        ; preds = %sw.bb.68
  br label %sw.epilog, !dbg !10947

sw.bb.73:                                         ; preds = %for.cond
  %101 = load i8*, i8** %entityTextPtr.addr, align 8, !dbg !10948, !tbaa !2289
  %102 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10949, !tbaa !2289
  %minBytesPerChar74 = getelementptr inbounds %struct.encoding, %struct.encoding* %102, i32 0, i32 13, !dbg !10950
  %103 = load i32, i32* %minBytesPerChar74, align 4, !dbg !10950, !tbaa !6758
  %idx.ext75 = sext i32 %103 to i64, !dbg !10951
  %add.ptr76 = getelementptr i8, i8* %101, i64 %idx.ext75, !dbg !10951
  store i8* %add.ptr76, i8** %next, align 8, !dbg !10952, !tbaa !2289
  br label %sw.bb.77, !dbg !10953

sw.bb.77:                                         ; preds = %for.cond, %sw.bb.73
  %104 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool, align 8, !dbg !10954, !tbaa !2289
  %end = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %104, i32 0, i32 2, !dbg !10956
  %105 = load i8*, i8** %end, align 8, !dbg !10956, !tbaa !2802
  %106 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool, align 8, !dbg !10957, !tbaa !2289
  %ptr78 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %106, i32 0, i32 3, !dbg !10958
  %107 = load i8*, i8** %ptr78, align 8, !dbg !10958, !tbaa !2798
  %cmp79 = icmp eq i8* %105, %107, !dbg !10959
  br i1 %cmp79, label %land.lhs.true, label %if.end.84, !dbg !10960

land.lhs.true:                                    ; preds = %sw.bb.77
  %108 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool, align 8, !dbg !10961, !tbaa !2289
  %call81 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %108), !dbg !10963
  %tobool82 = icmp ne i8 %call81, 0, !dbg !10963
  br i1 %tobool82, label %if.end.84, label %if.then.83, !dbg !10964

if.then.83:                                       ; preds = %land.lhs.true
  store i32 1, i32* %result, align 4, !dbg !10965, !tbaa !2307
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup.147, !dbg !10967

if.end.84:                                        ; preds = %land.lhs.true, %sw.bb.77
  %109 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool, align 8, !dbg !10968, !tbaa !2289
  %ptr85 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %109, i32 0, i32 3, !dbg !10969
  %110 = load i8*, i8** %ptr85, align 8, !dbg !10970, !tbaa !2798
  %incdec.ptr = getelementptr i8, i8* %110, i32 1, !dbg !10970
  store i8* %incdec.ptr, i8** %ptr85, align 8, !dbg !10970, !tbaa !2798
  store i8 10, i8* %110, align 1, !dbg !10971, !tbaa !2307
  br label %sw.epilog, !dbg !10972

sw.bb.86:                                         ; preds = %for.cond
  %111 = bitcast [4 x i8]* %buf to i8*, !dbg !10973
  call void @llvm.lifetime.start(i64 4, i8* %111) #2, !dbg !10973
  call void @llvm.dbg.declare(metadata [4 x i8]* %buf, metadata !1874, metadata !2293), !dbg !10974
  %112 = bitcast i32* %i to i8*, !dbg !10975
  call void @llvm.lifetime.start(i64 4, i8* %112) #2, !dbg !10975
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1876, metadata !2293), !dbg !10976
  %113 = bitcast i32* %n to i8*, !dbg !10977
  call void @llvm.lifetime.start(i64 4, i8* %113) #2, !dbg !10977
  call void @llvm.dbg.declare(metadata i32* %n, metadata !1877, metadata !2293), !dbg !10978
  %114 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10979, !tbaa !2289
  %charRefNumber = getelementptr inbounds %struct.encoding, %struct.encoding* %114, i32 0, i32 7, !dbg !10980
  %115 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %charRefNumber, align 8, !dbg !10980, !tbaa !10981
  %116 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10982, !tbaa !2289
  %117 = load i8*, i8** %entityTextPtr.addr, align 8, !dbg !10983, !tbaa !2289
  %call87 = call i32 %115(%struct.encoding* %116, i8* %117), !dbg !10984
  store i32 %call87, i32* %n, align 4, !dbg !10978, !tbaa !3391
  %118 = load i32, i32* %n, align 4, !dbg !10985, !tbaa !3391
  %cmp88 = icmp slt i32 %118, 0, !dbg !10987
  br i1 %cmp88, label %if.then.90, label %if.end.97, !dbg !10988

if.then.90:                                       ; preds = %sw.bb.86
  %119 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10989, !tbaa !2289
  %120 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10992, !tbaa !2289
  %m_encoding91 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %120, i32 0, i32 34, !dbg !10993
  %121 = load %struct.encoding*, %struct.encoding** %m_encoding91, align 8, !dbg !10993, !tbaa !5191
  %cmp92 = icmp eq %struct.encoding* %119, %121, !dbg !10994
  br i1 %cmp92, label %if.then.94, label %if.end.96, !dbg !10995

if.then.94:                                       ; preds = %if.then.90
  %122 = load i8*, i8** %entityTextPtr.addr, align 8, !dbg !10996, !tbaa !2289
  %123 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10997, !tbaa !2289
  %m_eventPtr95 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %123, i32 0, i32 47, !dbg !10998
  store i8* %122, i8** %m_eventPtr95, align 8, !dbg !10999, !tbaa !3006
  br label %if.end.96, !dbg !11000

if.end.96:                                        ; preds = %if.then.94, %if.then.90
  store i32 14, i32* %result, align 4, !dbg !11001, !tbaa !2307
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup.123, !dbg !11002

if.end.97:                                        ; preds = %sw.bb.86
  %124 = load i32, i32* %n, align 4, !dbg !11003, !tbaa !3391
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i32 0, i32 0, !dbg !11004
  %call98 = call i32 @PyExpat_XmlUtf8Encode(i32 %124, i8* %arraydecay), !dbg !11005
  store i32 %call98, i32* %n, align 4, !dbg !11006, !tbaa !3391
  %125 = load i32, i32* %n, align 4, !dbg !11007, !tbaa !3391
  %tobool99 = icmp ne i32 %125, 0, !dbg !11007
  br i1 %tobool99, label %if.end.107, label %if.then.100, !dbg !11009

if.then.100:                                      ; preds = %if.end.97
  %126 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11010, !tbaa !2289
  %127 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11013, !tbaa !2289
  %m_encoding101 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %127, i32 0, i32 34, !dbg !11014
  %128 = load %struct.encoding*, %struct.encoding** %m_encoding101, align 8, !dbg !11014, !tbaa !5191
  %cmp102 = icmp eq %struct.encoding* %126, %128, !dbg !11015
  br i1 %cmp102, label %if.then.104, label %if.end.106, !dbg !11016

if.then.104:                                      ; preds = %if.then.100
  %129 = load i8*, i8** %entityTextPtr.addr, align 8, !dbg !11017, !tbaa !2289
  %130 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11018, !tbaa !2289
  %m_eventPtr105 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %130, i32 0, i32 47, !dbg !11019
  store i8* %129, i8** %m_eventPtr105, align 8, !dbg !11020, !tbaa !3006
  br label %if.end.106, !dbg !11021

if.end.106:                                       ; preds = %if.then.104, %if.then.100
  store i32 14, i32* %result, align 4, !dbg !11022, !tbaa !2307
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup.123, !dbg !11023

if.end.107:                                       ; preds = %if.end.97
  store i32 0, i32* %i, align 4, !dbg !11024, !tbaa !3391
  br label %for.cond.108, !dbg !11026

for.cond.108:                                     ; preds = %for.inc, %if.end.107
  %131 = load i32, i32* %i, align 4, !dbg !11027, !tbaa !3391
  %132 = load i32, i32* %n, align 4, !dbg !11031, !tbaa !3391
  %cmp109 = icmp slt i32 %131, %132, !dbg !11032
  br i1 %cmp109, label %for.body, label %for.end, !dbg !11033

for.body:                                         ; preds = %for.cond.108
  %133 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool, align 8, !dbg !11034, !tbaa !2289
  %end111 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %133, i32 0, i32 2, !dbg !11037
  %134 = load i8*, i8** %end111, align 8, !dbg !11037, !tbaa !2802
  %135 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool, align 8, !dbg !11038, !tbaa !2289
  %ptr112 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %135, i32 0, i32 3, !dbg !11039
  %136 = load i8*, i8** %ptr112, align 8, !dbg !11039, !tbaa !2798
  %cmp113 = icmp eq i8* %134, %136, !dbg !11040
  br i1 %cmp113, label %land.lhs.true.115, label %if.end.119, !dbg !11041

land.lhs.true.115:                                ; preds = %for.body
  %137 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool, align 8, !dbg !11042, !tbaa !2289
  %call116 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %137), !dbg !11044
  %tobool117 = icmp ne i8 %call116, 0, !dbg !11044
  br i1 %tobool117, label %if.end.119, label %if.then.118, !dbg !11045

if.then.118:                                      ; preds = %land.lhs.true.115
  store i32 1, i32* %result, align 4, !dbg !11046, !tbaa !2307
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup.123, !dbg !11048

if.end.119:                                       ; preds = %land.lhs.true.115, %for.body
  %138 = load i32, i32* %i, align 4, !dbg !11049, !tbaa !3391
  %idxprom = sext i32 %138 to i64, !dbg !11050
  %arrayidx120 = getelementptr [4 x i8], [4 x i8]* %buf, i32 0, i64 %idxprom, !dbg !11050
  %139 = load i8, i8* %arrayidx120, align 1, !dbg !11050, !tbaa !2307
  %140 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool, align 8, !dbg !11051, !tbaa !2289
  %ptr121 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %140, i32 0, i32 3, !dbg !11052
  %141 = load i8*, i8** %ptr121, align 8, !dbg !11053, !tbaa !2798
  %incdec.ptr122 = getelementptr i8, i8* %141, i32 1, !dbg !11053
  store i8* %incdec.ptr122, i8** %ptr121, align 8, !dbg !11053, !tbaa !2798
  store i8 %139, i8* %141, align 1, !dbg !11054, !tbaa !2307
  br label %for.inc, !dbg !11055

for.inc:                                          ; preds = %if.end.119
  %142 = load i32, i32* %i, align 4, !dbg !11056, !tbaa !3391
  %inc = add i32 %142, 1, !dbg !11056
  store i32 %inc, i32* %i, align 4, !dbg !11056, !tbaa !3391
  br label %for.cond.108, !dbg !11057

for.end:                                          ; preds = %for.cond.108
  store i32 0, i32* %cleanup.dest.slot, !dbg !11058
  br label %cleanup.123, !dbg !11058

cleanup.123:                                      ; preds = %if.then.118, %if.end.106, %if.end.96, %for.end
  %143 = bitcast i32* %n to i8*, !dbg !11059
  call void @llvm.lifetime.end(i64 4, i8* %143) #2, !dbg !11059
  %144 = bitcast i32* %i to i8*, !dbg !11059
  call void @llvm.lifetime.end(i64 4, i8* %144) #2, !dbg !11059
  %145 = bitcast [4 x i8]* %buf to i8*, !dbg !11059
  call void @llvm.lifetime.end(i64 4, i8* %145) #2, !dbg !11059
  %cleanup.dest.126 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.126, label %cleanup.147 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup.123
  br label %sw.epilog, !dbg !11061

sw.bb.127:                                        ; preds = %for.cond
  %146 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11062, !tbaa !2289
  %147 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11064, !tbaa !2289
  %m_encoding128 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %147, i32 0, i32 34, !dbg !11065
  %148 = load %struct.encoding*, %struct.encoding** %m_encoding128, align 8, !dbg !11065, !tbaa !5191
  %cmp129 = icmp eq %struct.encoding* %146, %148, !dbg !11066
  br i1 %cmp129, label %if.then.131, label %if.end.133, !dbg !11067

if.then.131:                                      ; preds = %sw.bb.127
  %149 = load i8*, i8** %entityTextPtr.addr, align 8, !dbg !11068, !tbaa !2289
  %150 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11069, !tbaa !2289
  %m_eventPtr132 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %150, i32 0, i32 47, !dbg !11070
  store i8* %149, i8** %m_eventPtr132, align 8, !dbg !11071, !tbaa !3006
  br label %if.end.133, !dbg !11072

if.end.133:                                       ; preds = %if.then.131, %sw.bb.127
  store i32 4, i32* %result, align 4, !dbg !11073, !tbaa !2307
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup.147, !dbg !11074

sw.bb.134:                                        ; preds = %for.cond
  %151 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11075, !tbaa !2289
  %152 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11077, !tbaa !2289
  %m_encoding135 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %152, i32 0, i32 34, !dbg !11078
  %153 = load %struct.encoding*, %struct.encoding** %m_encoding135, align 8, !dbg !11078, !tbaa !5191
  %cmp136 = icmp eq %struct.encoding* %151, %153, !dbg !11079
  br i1 %cmp136, label %if.then.138, label %if.end.140, !dbg !11080

if.then.138:                                      ; preds = %sw.bb.134
  %154 = load i8*, i8** %next, align 8, !dbg !11081, !tbaa !2289
  %155 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11082, !tbaa !2289
  %m_eventPtr139 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %155, i32 0, i32 47, !dbg !11083
  store i8* %154, i8** %m_eventPtr139, align 8, !dbg !11084, !tbaa !3006
  br label %if.end.140, !dbg !11085

if.end.140:                                       ; preds = %if.then.138, %sw.bb.134
  store i32 4, i32* %result, align 4, !dbg !11086, !tbaa !2307
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup.147, !dbg !11087

sw.default:                                       ; preds = %for.cond
  %156 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11088, !tbaa !2289
  %157 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11090, !tbaa !2289
  %m_encoding141 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %157, i32 0, i32 34, !dbg !11091
  %158 = load %struct.encoding*, %struct.encoding** %m_encoding141, align 8, !dbg !11091, !tbaa !5191
  %cmp142 = icmp eq %struct.encoding* %156, %158, !dbg !11092
  br i1 %cmp142, label %if.then.144, label %if.end.146, !dbg !11093

if.then.144:                                      ; preds = %sw.default
  %159 = load i8*, i8** %entityTextPtr.addr, align 8, !dbg !11094, !tbaa !2289
  %160 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11095, !tbaa !2289
  %m_eventPtr145 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %160, i32 0, i32 47, !dbg !11096
  store i8* %159, i8** %m_eventPtr145, align 8, !dbg !11097, !tbaa !3006
  br label %if.end.146, !dbg !11098

if.end.146:                                       ; preds = %if.then.144, %sw.default
  store i32 23, i32* %result, align 4, !dbg !11099, !tbaa !2307
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup.147, !dbg !11100

sw.epilog:                                        ; preds = %cleanup.cont, %if.end.84, %if.end.72, %cleanup
  %161 = load i8*, i8** %next, align 8, !dbg !11101, !tbaa !2289
  store i8* %161, i8** %entityTextPtr.addr, align 8, !dbg !11102, !tbaa !2289
  store i32 0, i32* %cleanup.dest.slot, !dbg !11103
  br label %cleanup.147, !dbg !11103

cleanup.147:                                      ; preds = %if.end.146, %if.end.140, %if.end.133, %if.then.83, %if.then.71, %sw.bb.67, %if.end.65, %sw.epilog, %cleanup.123, %cleanup
  %162 = bitcast i32* %tok to i8*, !dbg !11104
  call void @llvm.lifetime.end(i64 4, i8* %162) #2, !dbg !11104
  %163 = bitcast i8** %next to i8*, !dbg !11104
  call void @llvm.lifetime.end(i64 8, i8* %163) #2, !dbg !11104
  %cleanup.dest.149 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.149, label %cleanup.153 [
    i32 0, label %cleanup.cont.150
    i32 5, label %endEntityValue
  ]

cleanup.cont.150:                                 ; preds = %cleanup.147
  br label %for.cond, !dbg !11106

endEntityValue:                                   ; preds = %cleanup.147
  %164 = load i32, i32* %oldInEntityValue, align 4, !dbg !11107, !tbaa !3391
  %165 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11108, !tbaa !2289
  %m_prologState151 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %165, i32 0, i32 44, !dbg !11109
  %inEntityValue152 = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState151, i32 0, i32 5, !dbg !11110
  store i32 %164, i32* %inEntityValue152, align 4, !dbg !11111, !tbaa !3390
  %166 = load i32, i32* %result, align 4, !dbg !11112, !tbaa !2307
  store i32 %166, i32* %retval, !dbg !11113
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.153, !dbg !11113

cleanup.153:                                      ; preds = %endEntityValue, %cleanup.147, %if.then.4
  %167 = bitcast i32* %oldInEntityValue to i8*, !dbg !11114
  call void @llvm.lifetime.end(i64 4, i8* %167) #2, !dbg !11114
  %168 = bitcast i32* %result to i8*, !dbg !11114
  call void @llvm.lifetime.end(i64 4, i8* %168) #2, !dbg !11114
  %169 = bitcast %struct.STRING_POOL** %pool to i8*, !dbg !11114
  call void @llvm.lifetime.end(i64 8, i8* %169) #2, !dbg !11114
  %170 = bitcast %struct.DTD** %dtd to i8*, !dbg !11114
  call void @llvm.lifetime.end(i64 8, i8* %170) #2, !dbg !11114
  %171 = load i32, i32* %retval, !dbg !11114
  ret i32 %171, !dbg !11114
}

; Function Attrs: nounwind uwtable
define internal i32 @doIgnoreSection(%struct.XML_ParserStruct* %parser, %struct.encoding* %enc, i8** %startPtr, i8* %end, i8** %nextPtr, i8 zeroext %haveMore) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %startPtr.addr = alloca i8**, align 8
  %end.addr = alloca i8*, align 8
  %nextPtr.addr = alloca i8**, align 8
  %haveMore.addr = alloca i8, align 1
  %next = alloca i8*, align 8
  %tok = alloca i32, align 4
  %s = alloca i8*, align 8
  %eventPP = alloca i8**, align 8
  %eventEndPP = alloca i8**, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1880, metadata !2293), !dbg !11115
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !1881, metadata !2293), !dbg !11116
  store i8** %startPtr, i8*** %startPtr.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8*** %startPtr.addr, metadata !1882, metadata !2293), !dbg !11117
  store i8* %end, i8** %end.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !1883, metadata !2293), !dbg !11118
  store i8** %nextPtr, i8*** %nextPtr.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8*** %nextPtr.addr, metadata !1884, metadata !2293), !dbg !11119
  store i8 %haveMore, i8* %haveMore.addr, align 1, !tbaa !2307
  call void @llvm.dbg.declare(metadata i8* %haveMore.addr, metadata !1885, metadata !2293), !dbg !11120
  %0 = bitcast i8** %next to i8*, !dbg !11121
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !11121
  call void @llvm.dbg.declare(metadata i8** %next, metadata !1886, metadata !2293), !dbg !11122
  %1 = bitcast i32* %tok to i8*, !dbg !11123
  call void @llvm.lifetime.start(i64 4, i8* %1) #2, !dbg !11123
  call void @llvm.dbg.declare(metadata i32* %tok, metadata !1887, metadata !2293), !dbg !11124
  %2 = bitcast i8** %s to i8*, !dbg !11125
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !11125
  call void @llvm.dbg.declare(metadata i8** %s, metadata !1888, metadata !2293), !dbg !11126
  %3 = load i8**, i8*** %startPtr.addr, align 8, !dbg !11127, !tbaa !2289
  %4 = load i8*, i8** %3, align 8, !dbg !11128, !tbaa !2289
  store i8* %4, i8** %s, align 8, !dbg !11126, !tbaa !2289
  %5 = bitcast i8*** %eventPP to i8*, !dbg !11129
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !11129
  call void @llvm.dbg.declare(metadata i8*** %eventPP, metadata !1889, metadata !2293), !dbg !11130
  %6 = bitcast i8*** %eventEndPP to i8*, !dbg !11131
  call void @llvm.lifetime.start(i64 8, i8* %6) #2, !dbg !11131
  call void @llvm.dbg.declare(metadata i8*** %eventEndPP, metadata !1890, metadata !2293), !dbg !11132
  %7 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11133, !tbaa !2289
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11135, !tbaa !2289
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 34, !dbg !11136
  %9 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !11136, !tbaa !5191
  %cmp = icmp eq %struct.encoding* %7, %9, !dbg !11137
  br i1 %cmp, label %if.then, label %if.else, !dbg !11138

if.then:                                          ; preds = %entry
  %10 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11139, !tbaa !2289
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %10, i32 0, i32 47, !dbg !11141
  store i8** %m_eventPtr, i8*** %eventPP, align 8, !dbg !11142, !tbaa !2289
  %11 = load i8*, i8** %s, align 8, !dbg !11143, !tbaa !2289
  %12 = load i8**, i8*** %eventPP, align 8, !dbg !11144, !tbaa !2289
  store i8* %11, i8** %12, align 8, !dbg !11145, !tbaa !2289
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11146, !tbaa !2289
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 48, !dbg !11147
  store i8** %m_eventEndPtr, i8*** %eventEndPP, align 8, !dbg !11148, !tbaa !2289
  br label %if.end, !dbg !11149

if.else:                                          ; preds = %entry
  %14 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11150, !tbaa !2289
  %m_openInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %14, i32 0, i32 50, !dbg !11152
  %15 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities, align 8, !dbg !11152, !tbaa !2664
  %internalEventPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %15, i32 0, i32 0, !dbg !11153
  store i8** %internalEventPtr, i8*** %eventPP, align 8, !dbg !11154, !tbaa !2289
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11155, !tbaa !2289
  %m_openInternalEntities1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 50, !dbg !11156
  %17 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities1, align 8, !dbg !11156, !tbaa !2664
  %internalEventEndPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %17, i32 0, i32 1, !dbg !11157
  store i8** %internalEventEndPtr, i8*** %eventEndPP, align 8, !dbg !11158, !tbaa !2289
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %18 = load i8*, i8** %s, align 8, !dbg !11159, !tbaa !2289
  %19 = load i8**, i8*** %eventPP, align 8, !dbg !11160, !tbaa !2289
  store i8* %18, i8** %19, align 8, !dbg !11161, !tbaa !2289
  %20 = load i8**, i8*** %startPtr.addr, align 8, !dbg !11162, !tbaa !2289
  store i8* null, i8** %20, align 8, !dbg !11163, !tbaa !2289
  %21 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11164, !tbaa !2289
  %scanners = getelementptr inbounds %struct.encoding, %struct.encoding* %21, i32 0, i32 0, !dbg !11165
  %arrayidx = getelementptr [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners, i32 0, i64 3, !dbg !11166
  %22 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx, align 8, !dbg !11166, !tbaa !2289
  %23 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11167, !tbaa !2289
  %24 = load i8*, i8** %s, align 8, !dbg !11168, !tbaa !2289
  %25 = load i8*, i8** %end.addr, align 8, !dbg !11169, !tbaa !2289
  %call = call i32 %22(%struct.encoding* %23, i8* %24, i8* %25, i8** %next), !dbg !11170
  store i32 %call, i32* %tok, align 4, !dbg !11171, !tbaa !3391
  %26 = load i8*, i8** %next, align 8, !dbg !11172, !tbaa !2289
  %27 = load i8**, i8*** %eventEndPP, align 8, !dbg !11173, !tbaa !2289
  store i8* %26, i8** %27, align 8, !dbg !11174, !tbaa !2289
  %28 = load i32, i32* %tok, align 4, !dbg !11175, !tbaa !3391
  switch i32 %28, label %sw.default [
    i32 42, label %sw.bb
    i32 0, label %sw.bb.7
    i32 -2, label %sw.bb.8
    i32 -1, label %sw.bb.12
    i32 -4, label %sw.bb.12
  ], !dbg !11176

sw.bb:                                            ; preds = %if.end
  %29 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11177, !tbaa !2289
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %29, i32 0, i32 18, !dbg !11180
  %30 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler, align 8, !dbg !11180, !tbaa !2874
  %tobool = icmp ne void (i8*, i8*, i32)* %30, null, !dbg !11181
  br i1 %tobool, label %if.then.2, label %if.end.3, !dbg !11182

if.then.2:                                        ; preds = %sw.bb
  %31 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11183, !tbaa !2289
  %32 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11184, !tbaa !2289
  %33 = load i8*, i8** %s, align 8, !dbg !11185, !tbaa !2289
  %34 = load i8*, i8** %next, align 8, !dbg !11186, !tbaa !2289
  call void @reportDefault(%struct.XML_ParserStruct* %31, %struct.encoding* %32, i8* %33, i8* %34), !dbg !11187
  br label %if.end.3, !dbg !11187

if.end.3:                                         ; preds = %if.then.2, %sw.bb
  %35 = load i8*, i8** %next, align 8, !dbg !11188, !tbaa !2289
  %36 = load i8**, i8*** %startPtr.addr, align 8, !dbg !11189, !tbaa !2289
  store i8* %35, i8** %36, align 8, !dbg !11190, !tbaa !2289
  %37 = load i8*, i8** %next, align 8, !dbg !11191, !tbaa !2289
  %38 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !11192, !tbaa !2289
  store i8* %37, i8** %38, align 8, !dbg !11193, !tbaa !2289
  %39 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11194, !tbaa !2289
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %39, i32 0, i32 85, !dbg !11196
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0, !dbg !11197
  %40 = load i32, i32* %parsing, align 4, !dbg !11197, !tbaa !3052
  %cmp4 = icmp eq i32 %40, 2, !dbg !11198
  br i1 %cmp4, label %if.then.5, label %if.else.6, !dbg !11199

if.then.5:                                        ; preds = %if.end.3
  store i32 35, i32* %retval, !dbg !11200
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11200

if.else.6:                                        ; preds = %if.end.3
  store i32 0, i32* %retval, !dbg !11201
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11201

sw.bb.7:                                          ; preds = %if.end
  %41 = load i8*, i8** %next, align 8, !dbg !11202, !tbaa !2289
  %42 = load i8**, i8*** %eventPP, align 8, !dbg !11203, !tbaa !2289
  store i8* %41, i8** %42, align 8, !dbg !11204, !tbaa !2289
  store i32 4, i32* %retval, !dbg !11205
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11205

sw.bb.8:                                          ; preds = %if.end
  %43 = load i8, i8* %haveMore.addr, align 1, !dbg !11206, !tbaa !2307
  %tobool9 = icmp ne i8 %43, 0, !dbg !11206
  br i1 %tobool9, label %if.then.10, label %if.end.11, !dbg !11208

if.then.10:                                       ; preds = %sw.bb.8
  %44 = load i8*, i8** %s, align 8, !dbg !11209, !tbaa !2289
  %45 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !11211, !tbaa !2289
  store i8* %44, i8** %45, align 8, !dbg !11212, !tbaa !2289
  store i32 0, i32* %retval, !dbg !11213
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11213

if.end.11:                                        ; preds = %sw.bb.8
  store i32 6, i32* %retval, !dbg !11214
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11214

sw.bb.12:                                         ; preds = %if.end, %if.end
  %46 = load i8, i8* %haveMore.addr, align 1, !dbg !11215, !tbaa !2307
  %tobool13 = icmp ne i8 %46, 0, !dbg !11215
  br i1 %tobool13, label %if.then.14, label %if.end.15, !dbg !11217

if.then.14:                                       ; preds = %sw.bb.12
  %47 = load i8*, i8** %s, align 8, !dbg !11218, !tbaa !2289
  %48 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !11220, !tbaa !2289
  store i8* %47, i8** %48, align 8, !dbg !11221, !tbaa !2289
  store i32 0, i32* %retval, !dbg !11222
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11222

if.end.15:                                        ; preds = %sw.bb.12
  store i32 2, i32* %retval, !dbg !11223
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11223

sw.default:                                       ; preds = %if.end
  %49 = load i8*, i8** %next, align 8, !dbg !11224, !tbaa !2289
  %50 = load i8**, i8*** %eventPP, align 8, !dbg !11225, !tbaa !2289
  store i8* %49, i8** %50, align 8, !dbg !11226, !tbaa !2289
  store i32 23, i32* %retval, !dbg !11227
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11227

cleanup:                                          ; preds = %sw.default, %if.end.15, %if.then.14, %if.end.11, %if.then.10, %sw.bb.7, %if.else.6, %if.then.5
  %51 = bitcast i8*** %eventEndPP to i8*, !dbg !11228
  call void @llvm.lifetime.end(i64 8, i8* %51) #2, !dbg !11228
  %52 = bitcast i8*** %eventPP to i8*, !dbg !11228
  call void @llvm.lifetime.end(i64 8, i8* %52) #2, !dbg !11228
  %53 = bitcast i8** %s to i8*, !dbg !11228
  call void @llvm.lifetime.end(i64 8, i8* %53) #2, !dbg !11228
  %54 = bitcast i32* %tok to i8*, !dbg !11228
  call void @llvm.lifetime.end(i64 4, i8* %54) #2, !dbg !11228
  %55 = bitcast i8** %next to i8*, !dbg !11228
  call void @llvm.lifetime.end(i64 8, i8* %55) #2, !dbg !11228
  %56 = load i32, i32* %retval, !dbg !11228
  ret i32 %56, !dbg !11228
}

; Function Attrs: nounwind uwtable
define internal i32 @ignoreSectionProcessor(%struct.XML_ParserStruct* %parser, i8* %start, i8* %end, i8** %endPtr) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %endPtr.addr = alloca i8**, align 8
  %result = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1893, metadata !2293), !dbg !11229
  store i8* %start, i8** %start.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %start.addr, metadata !1894, metadata !2293), !dbg !11230
  store i8* %end, i8** %end.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !1895, metadata !2293), !dbg !11231
  store i8** %endPtr, i8*** %endPtr.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8*** %endPtr.addr, metadata !1896, metadata !2293), !dbg !11232
  %0 = bitcast i32* %result to i8*, !dbg !11233
  call void @llvm.lifetime.start(i64 4, i8* %0) #2, !dbg !11233
  call void @llvm.dbg.declare(metadata i32* %result, metadata !1897, metadata !2293), !dbg !11234
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11235, !tbaa !2289
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11236, !tbaa !2289
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 34, !dbg !11237
  %3 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !11237, !tbaa !5191
  %4 = load i8*, i8** %end.addr, align 8, !dbg !11238, !tbaa !2289
  %5 = load i8**, i8*** %endPtr.addr, align 8, !dbg !11239, !tbaa !2289
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11240, !tbaa !2289
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 85, !dbg !11241
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 1, !dbg !11242
  %7 = load i8, i8* %finalBuffer, align 1, !dbg !11242, !tbaa !5150
  %tobool = icmp ne i8 %7, 0, !dbg !11243
  %lnot = xor i1 %tobool, true, !dbg !11243
  %lnot.ext = zext i1 %lnot to i32, !dbg !11243
  %conv = trunc i32 %lnot.ext to i8, !dbg !11244
  %call = call i32 @doIgnoreSection(%struct.XML_ParserStruct* %1, %struct.encoding* %3, i8** %start.addr, i8* %4, i8** %5, i8 zeroext %conv), !dbg !11245
  store i32 %call, i32* %result, align 4, !dbg !11234, !tbaa !2307
  %8 = load i32, i32* %result, align 4, !dbg !11246, !tbaa !2307
  %cmp = icmp ne i32 %8, 0, !dbg !11248
  br i1 %cmp, label %if.then, label %if.end, !dbg !11249

if.then:                                          ; preds = %entry
  %9 = load i32, i32* %result, align 4, !dbg !11250, !tbaa !2307
  store i32 %9, i32* %retval, !dbg !11251
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11251

if.end:                                           ; preds = %entry
  %10 = load i8*, i8** %start.addr, align 8, !dbg !11252, !tbaa !2289
  %tobool2 = icmp ne i8* %10, null, !dbg !11252
  br i1 %tobool2, label %if.then.3, label %if.end.5, !dbg !11254

if.then.3:                                        ; preds = %if.end
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11255, !tbaa !2289
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 45, !dbg !11257
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @prologProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8, !dbg !11258, !tbaa !2809
  %12 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11259, !tbaa !2289
  %13 = load i8*, i8** %start.addr, align 8, !dbg !11260, !tbaa !2289
  %14 = load i8*, i8** %end.addr, align 8, !dbg !11261, !tbaa !2289
  %15 = load i8**, i8*** %endPtr.addr, align 8, !dbg !11262, !tbaa !2289
  %call4 = call i32 @prologProcessor(%struct.XML_ParserStruct* %12, i8* %13, i8* %14, i8** %15), !dbg !11263
  store i32 %call4, i32* %retval, !dbg !11264
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11264

if.end.5:                                         ; preds = %if.end
  %16 = load i32, i32* %result, align 4, !dbg !11265, !tbaa !2307
  store i32 %16, i32* %retval, !dbg !11266
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11266

cleanup:                                          ; preds = %if.end.5, %if.then.3, %if.then
  %17 = bitcast i32* %result to i8*, !dbg !11267
  call void @llvm.lifetime.end(i64 4, i8* %17) #2, !dbg !11267
  %18 = load i32, i32* %retval, !dbg !11267
  ret i32 %18, !dbg !11267
}

; Function Attrs: nounwind uwtable
define internal i32 @nextScaffoldPart(%struct.XML_ParserStruct* %parser) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %dtd = alloca %struct.DTD*, align 8
  %me = alloca %struct.CONTENT_SCAFFOLD*, align 8
  %next = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %temp = alloca %struct.CONTENT_SCAFFOLD*, align 8
  %parent = alloca %struct.CONTENT_SCAFFOLD*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1900, metadata !2293), !dbg !11268
  %0 = bitcast %struct.DTD** %dtd to i8*, !dbg !11269
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !11269
  call void @llvm.dbg.declare(metadata %struct.DTD** %dtd, metadata !1901, metadata !2293), !dbg !11270
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11271, !tbaa !2289
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 65, !dbg !11272
  %2 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !11272, !tbaa !2478
  store %struct.DTD* %2, %struct.DTD** %dtd, align 8, !dbg !11270, !tbaa !2289
  %3 = bitcast %struct.CONTENT_SCAFFOLD** %me to i8*, !dbg !11273
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !11273
  call void @llvm.dbg.declare(metadata %struct.CONTENT_SCAFFOLD** %me, metadata !1902, metadata !2293), !dbg !11274
  %4 = bitcast i32* %next to i8*, !dbg !11275
  call void @llvm.lifetime.start(i64 4, i8* %4) #2, !dbg !11275
  call void @llvm.dbg.declare(metadata i32* %next, metadata !1903, metadata !2293), !dbg !11276
  %5 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11277, !tbaa !2289
  %scaffIndex = getelementptr inbounds %struct.DTD, %struct.DTD* %5, i32 0, i32 18, !dbg !11279
  %6 = load i32*, i32** %scaffIndex, align 8, !dbg !11279, !tbaa !3148
  %tobool = icmp ne i32* %6, null, !dbg !11277
  br i1 %tobool, label %if.end.6, label %if.then, !dbg !11280

if.then:                                          ; preds = %entry
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11281, !tbaa !2289
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 3, !dbg !11283
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 0, !dbg !11284
  %8 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8, !dbg !11284, !tbaa !2416
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11285, !tbaa !2289
  %m_groupSize = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 82, !dbg !11286
  %10 = load i32, i32* %m_groupSize, align 4, !dbg !11286, !tbaa !2525
  %conv = zext i32 %10 to i64, !dbg !11287
  %mul = mul i64 %conv, 4, !dbg !11288
  %call = call i8* %8(i64 %mul), !dbg !11281
  %11 = bitcast i8* %call to i32*, !dbg !11289
  %12 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11290, !tbaa !2289
  %scaffIndex1 = getelementptr inbounds %struct.DTD, %struct.DTD* %12, i32 0, i32 18, !dbg !11291
  store i32* %11, i32** %scaffIndex1, align 8, !dbg !11292, !tbaa !3148
  %13 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11293, !tbaa !2289
  %scaffIndex2 = getelementptr inbounds %struct.DTD, %struct.DTD* %13, i32 0, i32 18, !dbg !11295
  %14 = load i32*, i32** %scaffIndex2, align 8, !dbg !11295, !tbaa !3148
  %tobool3 = icmp ne i32* %14, null, !dbg !11293
  br i1 %tobool3, label %if.end, label %if.then.4, !dbg !11296

if.then.4:                                        ; preds = %if.then
  store i32 -1, i32* %retval, !dbg !11297
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.65, !dbg !11297

if.end:                                           ; preds = %if.then
  %15 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11298, !tbaa !2289
  %scaffIndex5 = getelementptr inbounds %struct.DTD, %struct.DTD* %15, i32 0, i32 18, !dbg !11299
  %16 = load i32*, i32** %scaffIndex5, align 8, !dbg !11299, !tbaa !3148
  %arrayidx = getelementptr i32, i32* %16, i64 0, !dbg !11298
  store i32 0, i32* %arrayidx, align 4, !dbg !11300, !tbaa !3391
  br label %if.end.6, !dbg !11301

if.end.6:                                         ; preds = %if.end, %entry
  %17 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11302, !tbaa !2289
  %scaffCount = getelementptr inbounds %struct.DTD, %struct.DTD* %17, i32 0, i32 16, !dbg !11303
  %18 = load i32, i32* %scaffCount, align 4, !dbg !11303, !tbaa !3171
  %19 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11304, !tbaa !2289
  %scaffSize = getelementptr inbounds %struct.DTD, %struct.DTD* %19, i32 0, i32 15, !dbg !11305
  %20 = load i32, i32* %scaffSize, align 4, !dbg !11305, !tbaa !3167
  %cmp = icmp uge i32 %18, %20, !dbg !11306
  br i1 %cmp, label %if.then.8, label %if.end.34, !dbg !11307

if.then.8:                                        ; preds = %if.end.6
  %21 = bitcast %struct.CONTENT_SCAFFOLD** %temp to i8*, !dbg !11308
  call void @llvm.lifetime.start(i64 8, i8* %21) #2, !dbg !11308
  call void @llvm.dbg.declare(metadata %struct.CONTENT_SCAFFOLD** %temp, metadata !1904, metadata !2293), !dbg !11309
  %22 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11310, !tbaa !2289
  %scaffold = getelementptr inbounds %struct.DTD, %struct.DTD* %22, i32 0, i32 13, !dbg !11312
  %23 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold, align 8, !dbg !11312, !tbaa !3156
  %tobool9 = icmp ne %struct.CONTENT_SCAFFOLD* %23, null, !dbg !11310
  br i1 %tobool9, label %if.then.10, label %if.else, !dbg !11313

if.then.10:                                       ; preds = %if.then.8
  %24 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11314, !tbaa !2289
  %m_mem11 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %24, i32 0, i32 3, !dbg !11316
  %realloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem11, i32 0, i32 1, !dbg !11317
  %25 = load i8* (i8*, i64)*, i8* (i8*, i64)** %realloc_fcn, align 8, !dbg !11317, !tbaa !5977
  %26 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11318, !tbaa !2289
  %scaffold12 = getelementptr inbounds %struct.DTD, %struct.DTD* %26, i32 0, i32 13, !dbg !11319
  %27 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold12, align 8, !dbg !11319, !tbaa !3156
  %28 = bitcast %struct.CONTENT_SCAFFOLD* %27 to i8*, !dbg !11320
  %29 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11321, !tbaa !2289
  %scaffSize13 = getelementptr inbounds %struct.DTD, %struct.DTD* %29, i32 0, i32 15, !dbg !11322
  %30 = load i32, i32* %scaffSize13, align 4, !dbg !11322, !tbaa !3167
  %mul14 = mul i32 %30, 2, !dbg !11323
  %conv15 = zext i32 %mul14 to i64, !dbg !11321
  %mul16 = mul i64 %conv15, 32, !dbg !11324
  %call17 = call i8* %25(i8* %28, i64 %mul16), !dbg !11314
  %31 = bitcast i8* %call17 to %struct.CONTENT_SCAFFOLD*, !dbg !11325
  store %struct.CONTENT_SCAFFOLD* %31, %struct.CONTENT_SCAFFOLD** %temp, align 8, !dbg !11326, !tbaa !2289
  %32 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %temp, align 8, !dbg !11327, !tbaa !2289
  %cmp18 = icmp eq %struct.CONTENT_SCAFFOLD* %32, null, !dbg !11329
  br i1 %cmp18, label %if.then.20, label %if.end.21, !dbg !11330

if.then.20:                                       ; preds = %if.then.10
  store i32 -1, i32* %retval, !dbg !11331
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11331

if.end.21:                                        ; preds = %if.then.10
  %33 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11332, !tbaa !2289
  %scaffSize22 = getelementptr inbounds %struct.DTD, %struct.DTD* %33, i32 0, i32 15, !dbg !11333
  %34 = load i32, i32* %scaffSize22, align 4, !dbg !11334, !tbaa !3167
  %mul23 = mul i32 %34, 2, !dbg !11334
  store i32 %mul23, i32* %scaffSize22, align 4, !dbg !11334, !tbaa !3167
  br label %if.end.32, !dbg !11335

if.else:                                          ; preds = %if.then.8
  %35 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11336, !tbaa !2289
  %m_mem24 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %35, i32 0, i32 3, !dbg !11338
  %malloc_fcn25 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem24, i32 0, i32 0, !dbg !11339
  %36 = load i8* (i64)*, i8* (i64)** %malloc_fcn25, align 8, !dbg !11339, !tbaa !2416
  %call26 = call i8* %36(i64 1024), !dbg !11336
  %37 = bitcast i8* %call26 to %struct.CONTENT_SCAFFOLD*, !dbg !11340
  store %struct.CONTENT_SCAFFOLD* %37, %struct.CONTENT_SCAFFOLD** %temp, align 8, !dbg !11341, !tbaa !2289
  %38 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %temp, align 8, !dbg !11342, !tbaa !2289
  %cmp27 = icmp eq %struct.CONTENT_SCAFFOLD* %38, null, !dbg !11344
  br i1 %cmp27, label %if.then.29, label %if.end.30, !dbg !11345

if.then.29:                                       ; preds = %if.else
  store i32 -1, i32* %retval, !dbg !11346
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11346

if.end.30:                                        ; preds = %if.else
  %39 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11347, !tbaa !2289
  %scaffSize31 = getelementptr inbounds %struct.DTD, %struct.DTD* %39, i32 0, i32 15, !dbg !11348
  store i32 32, i32* %scaffSize31, align 4, !dbg !11349, !tbaa !3167
  br label %if.end.32

if.end.32:                                        ; preds = %if.end.30, %if.end.21
  %40 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %temp, align 8, !dbg !11350, !tbaa !2289
  %41 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11351, !tbaa !2289
  %scaffold33 = getelementptr inbounds %struct.DTD, %struct.DTD* %41, i32 0, i32 13, !dbg !11352
  store %struct.CONTENT_SCAFFOLD* %40, %struct.CONTENT_SCAFFOLD** %scaffold33, align 8, !dbg !11353, !tbaa !3156
  store i32 0, i32* %cleanup.dest.slot, !dbg !11354
  br label %cleanup, !dbg !11354

cleanup:                                          ; preds = %if.end.32, %if.then.29, %if.then.20
  %42 = bitcast %struct.CONTENT_SCAFFOLD** %temp to i8*, !dbg !11355
  call void @llvm.lifetime.end(i64 8, i8* %42) #2, !dbg !11355
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.65 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.34, !dbg !11357

if.end.34:                                        ; preds = %cleanup.cont, %if.end.6
  %43 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11358, !tbaa !2289
  %scaffCount35 = getelementptr inbounds %struct.DTD, %struct.DTD* %43, i32 0, i32 16, !dbg !11359
  %44 = load i32, i32* %scaffCount35, align 4, !dbg !11360, !tbaa !3171
  %inc = add i32 %44, 1, !dbg !11360
  store i32 %inc, i32* %scaffCount35, align 4, !dbg !11360, !tbaa !3171
  store i32 %44, i32* %next, align 4, !dbg !11361, !tbaa !3391
  %45 = load i32, i32* %next, align 4, !dbg !11362, !tbaa !3391
  %idxprom = sext i32 %45 to i64, !dbg !11363
  %46 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11363, !tbaa !2289
  %scaffold36 = getelementptr inbounds %struct.DTD, %struct.DTD* %46, i32 0, i32 13, !dbg !11364
  %47 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold36, align 8, !dbg !11364, !tbaa !3156
  %arrayidx37 = getelementptr %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %47, i64 %idxprom, !dbg !11363
  store %struct.CONTENT_SCAFFOLD* %arrayidx37, %struct.CONTENT_SCAFFOLD** %me, align 8, !dbg !11365, !tbaa !2289
  %48 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11366, !tbaa !2289
  %scaffLevel = getelementptr inbounds %struct.DTD, %struct.DTD* %48, i32 0, i32 17, !dbg !11367
  %49 = load i32, i32* %scaffLevel, align 4, !dbg !11367, !tbaa !3163
  %tobool38 = icmp ne i32 %49, 0, !dbg !11366
  br i1 %tobool38, label %if.then.39, label %if.end.60, !dbg !11368

if.then.39:                                       ; preds = %if.end.34
  %50 = bitcast %struct.CONTENT_SCAFFOLD** %parent to i8*, !dbg !11369
  call void @llvm.lifetime.start(i64 8, i8* %50) #2, !dbg !11369
  call void @llvm.dbg.declare(metadata %struct.CONTENT_SCAFFOLD** %parent, metadata !1907, metadata !2293), !dbg !11370
  %51 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11371, !tbaa !2289
  %scaffLevel40 = getelementptr inbounds %struct.DTD, %struct.DTD* %51, i32 0, i32 17, !dbg !11372
  %52 = load i32, i32* %scaffLevel40, align 4, !dbg !11372, !tbaa !3163
  %sub = sub i32 %52, 1, !dbg !11373
  %idxprom41 = sext i32 %sub to i64, !dbg !11374
  %53 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11374, !tbaa !2289
  %scaffIndex42 = getelementptr inbounds %struct.DTD, %struct.DTD* %53, i32 0, i32 18, !dbg !11375
  %54 = load i32*, i32** %scaffIndex42, align 8, !dbg !11375, !tbaa !3148
  %arrayidx43 = getelementptr i32, i32* %54, i64 %idxprom41, !dbg !11374
  %55 = load i32, i32* %arrayidx43, align 4, !dbg !11374, !tbaa !3391
  %idxprom44 = sext i32 %55 to i64, !dbg !11376
  %56 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11376, !tbaa !2289
  %scaffold45 = getelementptr inbounds %struct.DTD, %struct.DTD* %56, i32 0, i32 13, !dbg !11377
  %57 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold45, align 8, !dbg !11377, !tbaa !3156
  %arrayidx46 = getelementptr %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %57, i64 %idxprom44, !dbg !11376
  store %struct.CONTENT_SCAFFOLD* %arrayidx46, %struct.CONTENT_SCAFFOLD** %parent, align 8, !dbg !11370, !tbaa !2289
  %58 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %parent, align 8, !dbg !11378, !tbaa !2289
  %lastchild = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %58, i32 0, i32 4, !dbg !11380
  %59 = load i32, i32* %lastchild, align 4, !dbg !11380, !tbaa !11381
  %tobool47 = icmp ne i32 %59, 0, !dbg !11378
  br i1 %tobool47, label %if.then.48, label %if.end.53, !dbg !11382

if.then.48:                                       ; preds = %if.then.39
  %60 = load i32, i32* %next, align 4, !dbg !11383, !tbaa !3391
  %61 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %parent, align 8, !dbg !11385, !tbaa !2289
  %lastchild49 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %61, i32 0, i32 4, !dbg !11386
  %62 = load i32, i32* %lastchild49, align 4, !dbg !11386, !tbaa !11381
  %idxprom50 = sext i32 %62 to i64, !dbg !11387
  %63 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11387, !tbaa !2289
  %scaffold51 = getelementptr inbounds %struct.DTD, %struct.DTD* %63, i32 0, i32 13, !dbg !11388
  %64 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold51, align 8, !dbg !11388, !tbaa !3156
  %arrayidx52 = getelementptr %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %64, i64 %idxprom50, !dbg !11387
  %nextsib = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx52, i32 0, i32 6, !dbg !11389
  store i32 %60, i32* %nextsib, align 4, !dbg !11390, !tbaa !11391
  br label %if.end.53, !dbg !11392

if.end.53:                                        ; preds = %if.then.48, %if.then.39
  %65 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %parent, align 8, !dbg !11393, !tbaa !2289
  %childcnt = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %65, i32 0, i32 5, !dbg !11395
  %66 = load i32, i32* %childcnt, align 4, !dbg !11395, !tbaa !11396
  %tobool54 = icmp ne i32 %66, 0, !dbg !11393
  br i1 %tobool54, label %if.end.56, label %if.then.55, !dbg !11397

if.then.55:                                       ; preds = %if.end.53
  %67 = load i32, i32* %next, align 4, !dbg !11398, !tbaa !3391
  %68 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %parent, align 8, !dbg !11399, !tbaa !2289
  %firstchild = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %68, i32 0, i32 3, !dbg !11400
  store i32 %67, i32* %firstchild, align 4, !dbg !11401, !tbaa !11402
  br label %if.end.56, !dbg !11399

if.end.56:                                        ; preds = %if.then.55, %if.end.53
  %69 = load i32, i32* %next, align 4, !dbg !11403, !tbaa !3391
  %70 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %parent, align 8, !dbg !11404, !tbaa !2289
  %lastchild57 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %70, i32 0, i32 4, !dbg !11405
  store i32 %69, i32* %lastchild57, align 4, !dbg !11406, !tbaa !11381
  %71 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %parent, align 8, !dbg !11407, !tbaa !2289
  %childcnt58 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %71, i32 0, i32 5, !dbg !11408
  %72 = load i32, i32* %childcnt58, align 4, !dbg !11409, !tbaa !11396
  %inc59 = add i32 %72, 1, !dbg !11409
  store i32 %inc59, i32* %childcnt58, align 4, !dbg !11409, !tbaa !11396
  %73 = bitcast %struct.CONTENT_SCAFFOLD** %parent to i8*, !dbg !11410
  call void @llvm.lifetime.end(i64 8, i8* %73) #2, !dbg !11410
  br label %if.end.60, !dbg !11411

if.end.60:                                        ; preds = %if.end.56, %if.end.34
  %74 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %me, align 8, !dbg !11412, !tbaa !2289
  %nextsib61 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %74, i32 0, i32 6, !dbg !11413
  store i32 0, i32* %nextsib61, align 4, !dbg !11414, !tbaa !11391
  %75 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %me, align 8, !dbg !11415, !tbaa !2289
  %childcnt62 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %75, i32 0, i32 5, !dbg !11416
  store i32 0, i32* %childcnt62, align 4, !dbg !11417, !tbaa !11396
  %76 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %me, align 8, !dbg !11418, !tbaa !2289
  %lastchild63 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %76, i32 0, i32 4, !dbg !11419
  store i32 0, i32* %lastchild63, align 4, !dbg !11420, !tbaa !11381
  %77 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %me, align 8, !dbg !11421, !tbaa !2289
  %firstchild64 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %77, i32 0, i32 3, !dbg !11422
  store i32 0, i32* %firstchild64, align 4, !dbg !11423, !tbaa !11402
  %78 = load i32, i32* %next, align 4, !dbg !11424, !tbaa !3391
  store i32 %78, i32* %retval, !dbg !11425
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.65, !dbg !11425

cleanup.65:                                       ; preds = %if.end.60, %cleanup, %if.then.4
  %79 = bitcast i32* %next to i8*, !dbg !11426
  call void @llvm.lifetime.end(i64 4, i8* %79) #2, !dbg !11426
  %80 = bitcast %struct.CONTENT_SCAFFOLD** %me to i8*, !dbg !11426
  call void @llvm.lifetime.end(i64 8, i8* %80) #2, !dbg !11426
  %81 = bitcast %struct.DTD** %dtd to i8*, !dbg !11426
  call void @llvm.lifetime.end(i64 8, i8* %81) #2, !dbg !11426
  %82 = load i32, i32* %retval, !dbg !11426
  ret i32 %82, !dbg !11426
}

; Function Attrs: nounwind uwtable
define internal i32 @processInternalEntity(%struct.XML_ParserStruct* %parser, %struct.ENTITY* %entity, i8 zeroext %betweenDecl) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %entity.addr = alloca %struct.ENTITY*, align 8
  %betweenDecl.addr = alloca i8, align 1
  %textStart = alloca i8*, align 8
  %textEnd = alloca i8*, align 8
  %next = alloca i8*, align 8
  %result = alloca i32, align 4
  %openEntity = alloca %struct.open_internal_entity*, align 8
  %cleanup.dest.slot = alloca i32
  %tok = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1914, metadata !2293), !dbg !11427
  store %struct.ENTITY* %entity, %struct.ENTITY** %entity.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.ENTITY** %entity.addr, metadata !1915, metadata !2293), !dbg !11428
  store i8 %betweenDecl, i8* %betweenDecl.addr, align 1, !tbaa !2307
  call void @llvm.dbg.declare(metadata i8* %betweenDecl.addr, metadata !1916, metadata !2293), !dbg !11429
  %0 = bitcast i8** %textStart to i8*, !dbg !11430
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !11430
  call void @llvm.dbg.declare(metadata i8** %textStart, metadata !1917, metadata !2293), !dbg !11431
  %1 = bitcast i8** %textEnd to i8*, !dbg !11430
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !11430
  call void @llvm.dbg.declare(metadata i8** %textEnd, metadata !1918, metadata !2293), !dbg !11432
  %2 = bitcast i8** %next to i8*, !dbg !11433
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !11433
  call void @llvm.dbg.declare(metadata i8** %next, metadata !1919, metadata !2293), !dbg !11434
  %3 = bitcast i32* %result to i8*, !dbg !11435
  call void @llvm.lifetime.start(i64 4, i8* %3) #2, !dbg !11435
  call void @llvm.dbg.declare(metadata i32* %result, metadata !1920, metadata !2293), !dbg !11436
  %4 = bitcast %struct.open_internal_entity** %openEntity to i8*, !dbg !11437
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !11437
  call void @llvm.dbg.declare(metadata %struct.open_internal_entity** %openEntity, metadata !1921, metadata !2293), !dbg !11438
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11439, !tbaa !2289
  %m_freeInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 51, !dbg !11441
  %6 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_freeInternalEntities, align 8, !dbg !11441, !tbaa !2521
  %tobool = icmp ne %struct.open_internal_entity* %6, null, !dbg !11442
  br i1 %tobool, label %if.then, label %if.else, !dbg !11443

if.then:                                          ; preds = %entry
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11444, !tbaa !2289
  %m_freeInternalEntities1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 51, !dbg !11446
  %8 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_freeInternalEntities1, align 8, !dbg !11446, !tbaa !2521
  store %struct.open_internal_entity* %8, %struct.open_internal_entity** %openEntity, align 8, !dbg !11447, !tbaa !2289
  %9 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !11448, !tbaa !2289
  %next2 = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %9, i32 0, i32 2, !dbg !11449
  %10 = load %struct.open_internal_entity*, %struct.open_internal_entity** %next2, align 8, !dbg !11449, !tbaa !2673
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11450, !tbaa !2289
  %m_freeInternalEntities3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 51, !dbg !11451
  store %struct.open_internal_entity* %10, %struct.open_internal_entity** %m_freeInternalEntities3, align 8, !dbg !11452, !tbaa !2521
  br label %if.end.6, !dbg !11453

if.else:                                          ; preds = %entry
  %12 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11454, !tbaa !2289
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %12, i32 0, i32 3, !dbg !11456
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 0, !dbg !11457
  %13 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8, !dbg !11457, !tbaa !2416
  %call = call i8* %13(i64 40), !dbg !11454
  %14 = bitcast i8* %call to %struct.open_internal_entity*, !dbg !11458
  store %struct.open_internal_entity* %14, %struct.open_internal_entity** %openEntity, align 8, !dbg !11459, !tbaa !2289
  %15 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !11460, !tbaa !2289
  %tobool4 = icmp ne %struct.open_internal_entity* %15, null, !dbg !11460
  br i1 %tobool4, label %if.end, label %if.then.5, !dbg !11462

if.then.5:                                        ; preds = %if.else
  store i32 1, i32* %retval, !dbg !11463
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11463

if.end:                                           ; preds = %if.else
  br label %if.end.6

if.end.6:                                         ; preds = %if.end, %if.then
  %16 = load %struct.ENTITY*, %struct.ENTITY** %entity.addr, align 8, !dbg !11464, !tbaa !2289
  %open = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %16, i32 0, i32 8, !dbg !11465
  store i8 1, i8* %open, align 1, !dbg !11466, !tbaa !4090
  %17 = load %struct.ENTITY*, %struct.ENTITY** %entity.addr, align 8, !dbg !11467, !tbaa !2289
  %processed = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %17, i32 0, i32 3, !dbg !11468
  store i32 0, i32* %processed, align 4, !dbg !11469, !tbaa !11470
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11471, !tbaa !2289
  %m_openInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 50, !dbg !11472
  %19 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities, align 8, !dbg !11472, !tbaa !2664
  %20 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !11473, !tbaa !2289
  %next7 = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %20, i32 0, i32 2, !dbg !11474
  store %struct.open_internal_entity* %19, %struct.open_internal_entity** %next7, align 8, !dbg !11475, !tbaa !2673
  %21 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !11476, !tbaa !2289
  %22 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11477, !tbaa !2289
  %m_openInternalEntities8 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %22, i32 0, i32 50, !dbg !11478
  store %struct.open_internal_entity* %21, %struct.open_internal_entity** %m_openInternalEntities8, align 8, !dbg !11479, !tbaa !2664
  %23 = load %struct.ENTITY*, %struct.ENTITY** %entity.addr, align 8, !dbg !11480, !tbaa !2289
  %24 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !11481, !tbaa !2289
  %entity9 = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %24, i32 0, i32 3, !dbg !11482
  store %struct.ENTITY* %23, %struct.ENTITY** %entity9, align 8, !dbg !11483, !tbaa !11484
  %25 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11485, !tbaa !2289
  %m_tagLevel = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %25, i32 0, i32 53, !dbg !11486
  %26 = load i32, i32* %m_tagLevel, align 4, !dbg !11486, !tbaa !3025
  %27 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !11487, !tbaa !2289
  %startTagLevel = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %27, i32 0, i32 4, !dbg !11488
  store i32 %26, i32* %startTagLevel, align 4, !dbg !11489, !tbaa !11490
  %28 = load i8, i8* %betweenDecl.addr, align 1, !dbg !11491, !tbaa !2307
  %29 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !11492, !tbaa !2289
  %betweenDecl10 = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %29, i32 0, i32 5, !dbg !11493
  store i8 %28, i8* %betweenDecl10, align 1, !dbg !11494, !tbaa !6554
  %30 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !11495, !tbaa !2289
  %internalEventPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %30, i32 0, i32 0, !dbg !11496
  store i8* null, i8** %internalEventPtr, align 8, !dbg !11497, !tbaa !6006
  %31 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !11498, !tbaa !2289
  %internalEventEndPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %31, i32 0, i32 1, !dbg !11499
  store i8* null, i8** %internalEventEndPtr, align 8, !dbg !11500, !tbaa !6010
  %32 = load %struct.ENTITY*, %struct.ENTITY** %entity.addr, align 8, !dbg !11501, !tbaa !2289
  %textPtr = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %32, i32 0, i32 1, !dbg !11502
  %33 = load i8*, i8** %textPtr, align 8, !dbg !11502, !tbaa !7541
  store i8* %33, i8** %textStart, align 8, !dbg !11503, !tbaa !2289
  %34 = load %struct.ENTITY*, %struct.ENTITY** %entity.addr, align 8, !dbg !11504, !tbaa !2289
  %textPtr11 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %34, i32 0, i32 1, !dbg !11505
  %35 = load i8*, i8** %textPtr11, align 8, !dbg !11505, !tbaa !7541
  %36 = load %struct.ENTITY*, %struct.ENTITY** %entity.addr, align 8, !dbg !11506, !tbaa !2289
  %textLen = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %36, i32 0, i32 2, !dbg !11507
  %37 = load i32, i32* %textLen, align 4, !dbg !11507, !tbaa !7554
  %idx.ext = sext i32 %37 to i64, !dbg !11508
  %add.ptr = getelementptr i8, i8* %35, i64 %idx.ext, !dbg !11508
  store i8* %add.ptr, i8** %textEnd, align 8, !dbg !11509, !tbaa !2289
  %38 = load %struct.ENTITY*, %struct.ENTITY** %entity.addr, align 8, !dbg !11510, !tbaa !2289
  %is_param = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %38, i32 0, i32 9, !dbg !11511
  %39 = load i8, i8* %is_param, align 1, !dbg !11511, !tbaa !7582
  %tobool12 = icmp ne i8 %39, 0, !dbg !11510
  br i1 %tobool12, label %if.then.13, label %if.else.18, !dbg !11512

if.then.13:                                       ; preds = %if.end.6
  %40 = bitcast i32* %tok to i8*, !dbg !11513
  call void @llvm.lifetime.start(i64 4, i8* %40) #2, !dbg !11513
  call void @llvm.dbg.declare(metadata i32* %tok, metadata !1922, metadata !2293), !dbg !11514
  %41 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11515, !tbaa !2289
  %m_internalEncoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %41, i32 0, i32 36, !dbg !11516
  %42 = load %struct.encoding*, %struct.encoding** %m_internalEncoding, align 8, !dbg !11516, !tbaa !2599
  %scanners = getelementptr inbounds %struct.encoding, %struct.encoding* %42, i32 0, i32 0, !dbg !11517
  %arrayidx = getelementptr [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners, i32 0, i64 0, !dbg !11518
  %43 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx, align 8, !dbg !11518, !tbaa !2289
  %44 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11519, !tbaa !2289
  %m_internalEncoding14 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %44, i32 0, i32 36, !dbg !11520
  %45 = load %struct.encoding*, %struct.encoding** %m_internalEncoding14, align 8, !dbg !11520, !tbaa !2599
  %46 = load i8*, i8** %textStart, align 8, !dbg !11521, !tbaa !2289
  %47 = load i8*, i8** %textEnd, align 8, !dbg !11522, !tbaa !2289
  %call15 = call i32 %43(%struct.encoding* %45, i8* %46, i8* %47, i8** %next), !dbg !11523
  store i32 %call15, i32* %tok, align 4, !dbg !11514, !tbaa !3391
  %48 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11524, !tbaa !2289
  %49 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11525, !tbaa !2289
  %m_internalEncoding16 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %49, i32 0, i32 36, !dbg !11526
  %50 = load %struct.encoding*, %struct.encoding** %m_internalEncoding16, align 8, !dbg !11526, !tbaa !2599
  %51 = load i8*, i8** %textStart, align 8, !dbg !11527, !tbaa !2289
  %52 = load i8*, i8** %textEnd, align 8, !dbg !11528, !tbaa !2289
  %53 = load i32, i32* %tok, align 4, !dbg !11529, !tbaa !3391
  %54 = load i8*, i8** %next, align 8, !dbg !11530, !tbaa !2289
  %call17 = call i32 @doProlog(%struct.XML_ParserStruct* %48, %struct.encoding* %50, i8* %51, i8* %52, i32 %53, i8* %54, i8** %next, i8 zeroext 0), !dbg !11531
  store i32 %call17, i32* %result, align 4, !dbg !11532, !tbaa !2307
  %55 = bitcast i32* %tok to i8*, !dbg !11533
  call void @llvm.lifetime.end(i64 4, i8* %55) #2, !dbg !11533
  br label %if.end.22, !dbg !11534

if.else.18:                                       ; preds = %if.end.6
  %56 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11535, !tbaa !2289
  %57 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11536, !tbaa !2289
  %m_tagLevel19 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %57, i32 0, i32 53, !dbg !11537
  %58 = load i32, i32* %m_tagLevel19, align 4, !dbg !11537, !tbaa !3025
  %59 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11538, !tbaa !2289
  %m_internalEncoding20 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %59, i32 0, i32 36, !dbg !11539
  %60 = load %struct.encoding*, %struct.encoding** %m_internalEncoding20, align 8, !dbg !11539, !tbaa !2599
  %61 = load i8*, i8** %textStart, align 8, !dbg !11540, !tbaa !2289
  %62 = load i8*, i8** %textEnd, align 8, !dbg !11541, !tbaa !2289
  %call21 = call i32 @doContent(%struct.XML_ParserStruct* %56, i32 %58, %struct.encoding* %60, i8* %61, i8* %62, i8** %next, i8 zeroext 0), !dbg !11542
  store i32 %call21, i32* %result, align 4, !dbg !11543, !tbaa !2307
  br label %if.end.22

if.end.22:                                        ; preds = %if.else.18, %if.then.13
  %63 = load i32, i32* %result, align 4, !dbg !11544, !tbaa !2307
  %cmp = icmp eq i32 %63, 0, !dbg !11546
  br i1 %cmp, label %if.then.23, label %if.end.36, !dbg !11547

if.then.23:                                       ; preds = %if.end.22
  %64 = load i8*, i8** %textEnd, align 8, !dbg !11548, !tbaa !2289
  %65 = load i8*, i8** %next, align 8, !dbg !11551, !tbaa !2289
  %cmp24 = icmp ne i8* %64, %65, !dbg !11552
  br i1 %cmp24, label %land.lhs.true, label %if.else.28, !dbg !11553

land.lhs.true:                                    ; preds = %if.then.23
  %66 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11554, !tbaa !2289
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %66, i32 0, i32 85, !dbg !11556
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0, !dbg !11557
  %67 = load i32, i32* %parsing, align 4, !dbg !11557, !tbaa !3052
  %cmp25 = icmp eq i32 %67, 3, !dbg !11558
  br i1 %cmp25, label %if.then.26, label %if.else.28, !dbg !11559

if.then.26:                                       ; preds = %land.lhs.true
  %68 = load i8*, i8** %next, align 8, !dbg !11560, !tbaa !2289
  %69 = load i8*, i8** %textStart, align 8, !dbg !11562, !tbaa !2289
  %sub.ptr.lhs.cast = ptrtoint i8* %68 to i64, !dbg !11563
  %sub.ptr.rhs.cast = ptrtoint i8* %69 to i64, !dbg !11563
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11563
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !11564
  %70 = load %struct.ENTITY*, %struct.ENTITY** %entity.addr, align 8, !dbg !11565, !tbaa !2289
  %processed27 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %70, i32 0, i32 3, !dbg !11566
  store i32 %conv, i32* %processed27, align 4, !dbg !11567, !tbaa !11470
  %71 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11568, !tbaa !2289
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %71, i32 0, i32 45, !dbg !11569
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @internalEntityProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8, !dbg !11570, !tbaa !2809
  br label %if.end.35, !dbg !11571

if.else.28:                                       ; preds = %land.lhs.true, %if.then.23
  %72 = load %struct.ENTITY*, %struct.ENTITY** %entity.addr, align 8, !dbg !11572, !tbaa !2289
  %open29 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %72, i32 0, i32 8, !dbg !11574
  store i8 0, i8* %open29, align 1, !dbg !11575, !tbaa !4090
  %73 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !11576, !tbaa !2289
  %next30 = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %73, i32 0, i32 2, !dbg !11577
  %74 = load %struct.open_internal_entity*, %struct.open_internal_entity** %next30, align 8, !dbg !11577, !tbaa !2673
  %75 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11578, !tbaa !2289
  %m_openInternalEntities31 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %75, i32 0, i32 50, !dbg !11579
  store %struct.open_internal_entity* %74, %struct.open_internal_entity** %m_openInternalEntities31, align 8, !dbg !11580, !tbaa !2664
  %76 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11581, !tbaa !2289
  %m_freeInternalEntities32 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %76, i32 0, i32 51, !dbg !11582
  %77 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_freeInternalEntities32, align 8, !dbg !11582, !tbaa !2521
  %78 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !11583, !tbaa !2289
  %next33 = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %78, i32 0, i32 2, !dbg !11584
  store %struct.open_internal_entity* %77, %struct.open_internal_entity** %next33, align 8, !dbg !11585, !tbaa !2673
  %79 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !11586, !tbaa !2289
  %80 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11587, !tbaa !2289
  %m_freeInternalEntities34 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %80, i32 0, i32 51, !dbg !11588
  store %struct.open_internal_entity* %79, %struct.open_internal_entity** %m_freeInternalEntities34, align 8, !dbg !11589, !tbaa !2521
  br label %if.end.35

if.end.35:                                        ; preds = %if.else.28, %if.then.26
  br label %if.end.36, !dbg !11590

if.end.36:                                        ; preds = %if.end.35, %if.end.22
  %81 = load i32, i32* %result, align 4, !dbg !11591, !tbaa !2307
  store i32 %81, i32* %retval, !dbg !11592
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11592

cleanup:                                          ; preds = %if.end.36, %if.then.5
  %82 = bitcast %struct.open_internal_entity** %openEntity to i8*, !dbg !11593
  call void @llvm.lifetime.end(i64 8, i8* %82) #2, !dbg !11593
  %83 = bitcast i32* %result to i8*, !dbg !11593
  call void @llvm.lifetime.end(i64 4, i8* %83) #2, !dbg !11593
  %84 = bitcast i8** %next to i8*, !dbg !11593
  call void @llvm.lifetime.end(i64 8, i8* %84) #2, !dbg !11593
  %85 = bitcast i8** %textEnd to i8*, !dbg !11593
  call void @llvm.lifetime.end(i64 8, i8* %85) #2, !dbg !11593
  %86 = bitcast i8** %textStart to i8*, !dbg !11593
  call void @llvm.lifetime.end(i64 8, i8* %86) #2, !dbg !11593
  %87 = load i32, i32* %retval, !dbg !11593
  ret i32 %87, !dbg !11593
}

; Function Attrs: nounwind uwtable
define internal %struct.XML_cp* @build_model(%struct.XML_ParserStruct* %parser) #0 {
entry:
  %retval = alloca %struct.XML_cp*, align 8
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %dtd = alloca %struct.DTD*, align 8
  %ret = alloca %struct.XML_cp*, align 8
  %cpos = alloca %struct.XML_cp*, align 8
  %str = alloca i8*, align 8
  %allocsize = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1947, metadata !2293), !dbg !11594
  %0 = bitcast %struct.DTD** %dtd to i8*, !dbg !11595
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !11595
  call void @llvm.dbg.declare(metadata %struct.DTD** %dtd, metadata !1948, metadata !2293), !dbg !11596
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11597, !tbaa !2289
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 65, !dbg !11598
  %2 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !11598, !tbaa !2478
  store %struct.DTD* %2, %struct.DTD** %dtd, align 8, !dbg !11596, !tbaa !2289
  %3 = bitcast %struct.XML_cp** %ret to i8*, !dbg !11599
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !11599
  call void @llvm.dbg.declare(metadata %struct.XML_cp** %ret, metadata !1949, metadata !2293), !dbg !11600
  %4 = bitcast %struct.XML_cp** %cpos to i8*, !dbg !11601
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !11601
  call void @llvm.dbg.declare(metadata %struct.XML_cp** %cpos, metadata !1950, metadata !2293), !dbg !11602
  %5 = bitcast i8** %str to i8*, !dbg !11603
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !11603
  call void @llvm.dbg.declare(metadata i8** %str, metadata !1951, metadata !2293), !dbg !11604
  %6 = bitcast i32* %allocsize to i8*, !dbg !11605
  call void @llvm.lifetime.start(i64 4, i8* %6) #2, !dbg !11605
  call void @llvm.dbg.declare(metadata i32* %allocsize, metadata !1952, metadata !2293), !dbg !11606
  %7 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11607, !tbaa !2289
  %scaffCount = getelementptr inbounds %struct.DTD, %struct.DTD* %7, i32 0, i32 16, !dbg !11608
  %8 = load i32, i32* %scaffCount, align 4, !dbg !11608, !tbaa !3171
  %conv = zext i32 %8 to i64, !dbg !11607
  %mul = mul i64 %conv, 32, !dbg !11609
  %9 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11610, !tbaa !2289
  %contentStringLen = getelementptr inbounds %struct.DTD, %struct.DTD* %9, i32 0, i32 14, !dbg !11611
  %10 = load i32, i32* %contentStringLen, align 4, !dbg !11611, !tbaa !3175
  %conv1 = zext i32 %10 to i64, !dbg !11610
  %mul2 = mul i64 %conv1, 1, !dbg !11612
  %add = add i64 %mul, %mul2, !dbg !11613
  %conv3 = trunc i64 %add to i32, !dbg !11614
  store i32 %conv3, i32* %allocsize, align 4, !dbg !11606, !tbaa !3391
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11615, !tbaa !2289
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 3, !dbg !11616
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 0, !dbg !11617
  %12 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8, !dbg !11617, !tbaa !2416
  %13 = load i32, i32* %allocsize, align 4, !dbg !11618, !tbaa !3391
  %conv4 = sext i32 %13 to i64, !dbg !11619
  %call = call i8* %12(i64 %conv4), !dbg !11615
  %14 = bitcast i8* %call to %struct.XML_cp*, !dbg !11620
  store %struct.XML_cp* %14, %struct.XML_cp** %ret, align 8, !dbg !11621, !tbaa !2289
  %15 = load %struct.XML_cp*, %struct.XML_cp** %ret, align 8, !dbg !11622, !tbaa !2289
  %tobool = icmp ne %struct.XML_cp* %15, null, !dbg !11622
  br i1 %tobool, label %if.end, label %if.then, !dbg !11624

if.then:                                          ; preds = %entry
  store %struct.XML_cp* null, %struct.XML_cp** %retval, !dbg !11625
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11625

if.end:                                           ; preds = %entry
  %16 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11626, !tbaa !2289
  %scaffCount5 = getelementptr inbounds %struct.DTD, %struct.DTD* %16, i32 0, i32 16, !dbg !11627
  %17 = load i32, i32* %scaffCount5, align 4, !dbg !11627, !tbaa !3171
  %idxprom = zext i32 %17 to i64, !dbg !11628
  %18 = load %struct.XML_cp*, %struct.XML_cp** %ret, align 8, !dbg !11628, !tbaa !2289
  %arrayidx = getelementptr %struct.XML_cp, %struct.XML_cp* %18, i64 %idxprom, !dbg !11628
  %19 = bitcast %struct.XML_cp* %arrayidx to i8*, !dbg !11629
  store i8* %19, i8** %str, align 8, !dbg !11630, !tbaa !2289
  %20 = load %struct.XML_cp*, %struct.XML_cp** %ret, align 8, !dbg !11631, !tbaa !2289
  %arrayidx6 = getelementptr %struct.XML_cp, %struct.XML_cp* %20, i64 1, !dbg !11631
  store %struct.XML_cp* %arrayidx6, %struct.XML_cp** %cpos, align 8, !dbg !11632, !tbaa !2289
  %21 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11633, !tbaa !2289
  %22 = load %struct.XML_cp*, %struct.XML_cp** %ret, align 8, !dbg !11634, !tbaa !2289
  call void @build_node(%struct.XML_ParserStruct* %21, i32 0, %struct.XML_cp* %22, %struct.XML_cp** %cpos, i8** %str), !dbg !11635
  %23 = load %struct.XML_cp*, %struct.XML_cp** %ret, align 8, !dbg !11636, !tbaa !2289
  store %struct.XML_cp* %23, %struct.XML_cp** %retval, !dbg !11637
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11637

cleanup:                                          ; preds = %if.end, %if.then
  %24 = bitcast i32* %allocsize to i8*, !dbg !11638
  call void @llvm.lifetime.end(i64 4, i8* %24) #2, !dbg !11638
  %25 = bitcast i8** %str to i8*, !dbg !11638
  call void @llvm.lifetime.end(i64 8, i8* %25) #2, !dbg !11638
  %26 = bitcast %struct.XML_cp** %cpos to i8*, !dbg !11638
  call void @llvm.lifetime.end(i64 8, i8* %26) #2, !dbg !11638
  %27 = bitcast %struct.XML_cp** %ret to i8*, !dbg !11638
  call void @llvm.lifetime.end(i64 8, i8* %27) #2, !dbg !11638
  %28 = bitcast %struct.DTD** %dtd to i8*, !dbg !11638
  call void @llvm.lifetime.end(i64 8, i8* %28) #2, !dbg !11638
  %29 = load %struct.XML_cp*, %struct.XML_cp** %retval, !dbg !11638
  ret %struct.XML_cp* %29, !dbg !11638
}

; Function Attrs: nounwind uwtable
define internal i32 @reportProcessingInstruction(%struct.XML_ParserStruct* %parser, %struct.encoding* %enc, i8* %start, i8* %end) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %start.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %target = alloca i8*, align 8
  %data = alloca i8*, align 8
  %tem = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1975, metadata !2293), !dbg !11639
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !1976, metadata !2293), !dbg !11640
  store i8* %start, i8** %start.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %start.addr, metadata !1977, metadata !2293), !dbg !11641
  store i8* %end, i8** %end.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !1978, metadata !2293), !dbg !11642
  %0 = bitcast i8** %target to i8*, !dbg !11643
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !11643
  call void @llvm.dbg.declare(metadata i8** %target, metadata !1979, metadata !2293), !dbg !11644
  %1 = bitcast i8** %data to i8*, !dbg !11645
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !11645
  call void @llvm.dbg.declare(metadata i8** %data, metadata !1980, metadata !2293), !dbg !11646
  %2 = bitcast i8** %tem to i8*, !dbg !11647
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !11647
  call void @llvm.dbg.declare(metadata i8** %tem, metadata !1981, metadata !2293), !dbg !11648
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11649, !tbaa !2289
  %m_processingInstructionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 14, !dbg !11651
  %4 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %m_processingInstructionHandler, align 8, !dbg !11651, !tbaa !2858
  %tobool = icmp ne void (i8*, i8*, i8*)* %4, null, !dbg !11652
  br i1 %tobool, label %if.end.3, label %if.then, !dbg !11653

if.then:                                          ; preds = %entry
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11654, !tbaa !2289
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 18, !dbg !11657
  %6 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler, align 8, !dbg !11657, !tbaa !2874
  %tobool1 = icmp ne void (i8*, i8*, i32)* %6, null, !dbg !11658
  br i1 %tobool1, label %if.then.2, label %if.end, !dbg !11659

if.then.2:                                        ; preds = %if.then
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11660, !tbaa !2289
  %8 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11661, !tbaa !2289
  %9 = load i8*, i8** %start.addr, align 8, !dbg !11662, !tbaa !2289
  %10 = load i8*, i8** %end.addr, align 8, !dbg !11663, !tbaa !2289
  call void @reportDefault(%struct.XML_ParserStruct* %7, %struct.encoding* %8, i8* %9, i8* %10), !dbg !11664
  br label %if.end, !dbg !11664

if.end:                                           ; preds = %if.then.2, %if.then
  store i32 1, i32* %retval, !dbg !11665
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11665

if.end.3:                                         ; preds = %entry
  %11 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11666, !tbaa !2289
  %minBytesPerChar = getelementptr inbounds %struct.encoding, %struct.encoding* %11, i32 0, i32 13, !dbg !11667
  %12 = load i32, i32* %minBytesPerChar, align 4, !dbg !11667, !tbaa !6758
  %mul = mul i32 %12, 2, !dbg !11668
  %13 = load i8*, i8** %start.addr, align 8, !dbg !11669, !tbaa !2289
  %idx.ext = sext i32 %mul to i64, !dbg !11669
  %add.ptr = getelementptr i8, i8* %13, i64 %idx.ext, !dbg !11669
  store i8* %add.ptr, i8** %start.addr, align 8, !dbg !11669, !tbaa !2289
  %14 = load i8*, i8** %start.addr, align 8, !dbg !11670, !tbaa !2289
  %15 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11671, !tbaa !2289
  %nameLength = getelementptr inbounds %struct.encoding, %struct.encoding* %15, i32 0, i32 4, !dbg !11672
  %16 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %nameLength, align 8, !dbg !11672, !tbaa !9228
  %17 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11673, !tbaa !2289
  %18 = load i8*, i8** %start.addr, align 8, !dbg !11674, !tbaa !2289
  %call = call i32 %16(%struct.encoding* %17, i8* %18), !dbg !11675
  %idx.ext4 = sext i32 %call to i64, !dbg !11676
  %add.ptr5 = getelementptr i8, i8* %14, i64 %idx.ext4, !dbg !11676
  store i8* %add.ptr5, i8** %tem, align 8, !dbg !11677, !tbaa !2289
  %19 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11678, !tbaa !2289
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %19, i32 0, i32 79, !dbg !11679
  %20 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11680, !tbaa !2289
  %21 = load i8*, i8** %start.addr, align 8, !dbg !11681, !tbaa !2289
  %22 = load i8*, i8** %tem, align 8, !dbg !11682, !tbaa !2289
  %call6 = call i8* @poolStoreString(%struct.STRING_POOL* %m_tempPool, %struct.encoding* %20, i8* %21, i8* %22), !dbg !11683
  store i8* %call6, i8** %target, align 8, !dbg !11684, !tbaa !2289
  %23 = load i8*, i8** %target, align 8, !dbg !11685, !tbaa !2289
  %tobool7 = icmp ne i8* %23, null, !dbg !11685
  br i1 %tobool7, label %if.end.9, label %if.then.8, !dbg !11687

if.then.8:                                        ; preds = %if.end.3
  store i32 0, i32* %retval, !dbg !11688
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11688

if.end.9:                                         ; preds = %if.end.3
  %24 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11689, !tbaa !2289
  %m_tempPool10 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %24, i32 0, i32 79, !dbg !11690
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool10, i32 0, i32 3, !dbg !11691
  %25 = load i8*, i8** %ptr, align 8, !dbg !11691, !tbaa !2798
  %26 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11692, !tbaa !2289
  %m_tempPool11 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %26, i32 0, i32 79, !dbg !11693
  %start12 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool11, i32 0, i32 4, !dbg !11694
  store i8* %25, i8** %start12, align 8, !dbg !11695, !tbaa !2794
  %27 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11696, !tbaa !2289
  %m_tempPool13 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %27, i32 0, i32 79, !dbg !11697
  %28 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11698, !tbaa !2289
  %29 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11699, !tbaa !2289
  %skipS = getelementptr inbounds %struct.encoding, %struct.encoding* %29, i32 0, i32 5, !dbg !11700
  %30 = load i8* (%struct.encoding*, i8*)*, i8* (%struct.encoding*, i8*)** %skipS, align 8, !dbg !11700, !tbaa !11701
  %31 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11702, !tbaa !2289
  %32 = load i8*, i8** %tem, align 8, !dbg !11703, !tbaa !2289
  %call14 = call i8* %30(%struct.encoding* %31, i8* %32), !dbg !11704
  %33 = load i8*, i8** %end.addr, align 8, !dbg !11705, !tbaa !2289
  %34 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11706, !tbaa !2289
  %minBytesPerChar15 = getelementptr inbounds %struct.encoding, %struct.encoding* %34, i32 0, i32 13, !dbg !11707
  %35 = load i32, i32* %minBytesPerChar15, align 4, !dbg !11707, !tbaa !6758
  %mul16 = mul i32 %35, 2, !dbg !11708
  %idx.ext17 = sext i32 %mul16 to i64, !dbg !11709
  %idx.neg = sub i64 0, %idx.ext17, !dbg !11709
  %add.ptr18 = getelementptr i8, i8* %33, i64 %idx.neg, !dbg !11709
  %call19 = call i8* @poolStoreString(%struct.STRING_POOL* %m_tempPool13, %struct.encoding* %28, i8* %call14, i8* %add.ptr18), !dbg !11710
  store i8* %call19, i8** %data, align 8, !dbg !11711, !tbaa !2289
  %36 = load i8*, i8** %data, align 8, !dbg !11712, !tbaa !2289
  %tobool20 = icmp ne i8* %36, null, !dbg !11712
  br i1 %tobool20, label %if.end.22, label %if.then.21, !dbg !11714

if.then.21:                                       ; preds = %if.end.9
  store i32 0, i32* %retval, !dbg !11715
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11715

if.end.22:                                        ; preds = %if.end.9
  %37 = load i8*, i8** %data, align 8, !dbg !11716, !tbaa !2289
  call void @normalizeLines(i8* %37), !dbg !11717
  %38 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11718, !tbaa !2289
  %m_processingInstructionHandler23 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %38, i32 0, i32 14, !dbg !11719
  %39 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %m_processingInstructionHandler23, align 8, !dbg !11719, !tbaa !2858
  %40 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11720, !tbaa !2289
  %m_handlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %40, i32 0, i32 1, !dbg !11721
  %41 = load i8*, i8** %m_handlerArg, align 8, !dbg !11721, !tbaa !2842
  %42 = load i8*, i8** %target, align 8, !dbg !11722, !tbaa !2289
  %43 = load i8*, i8** %data, align 8, !dbg !11723, !tbaa !2289
  call void %39(i8* %41, i8* %42, i8* %43), !dbg !11724
  %44 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11725, !tbaa !2289
  %m_tempPool24 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %44, i32 0, i32 79, !dbg !11726
  call void @poolClear(%struct.STRING_POOL* %m_tempPool24), !dbg !11727
  store i32 1, i32* %retval, !dbg !11728
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11728

cleanup:                                          ; preds = %if.end.22, %if.then.21, %if.then.8, %if.end
  %45 = bitcast i8** %tem to i8*, !dbg !11729
  call void @llvm.lifetime.end(i64 8, i8* %45) #2, !dbg !11729
  %46 = bitcast i8** %data to i8*, !dbg !11729
  call void @llvm.lifetime.end(i64 8, i8* %46) #2, !dbg !11729
  %47 = bitcast i8** %target to i8*, !dbg !11729
  call void @llvm.lifetime.end(i64 8, i8* %47) #2, !dbg !11729
  %48 = load i32, i32* %retval, !dbg !11729
  ret i32 %48, !dbg !11729
}

; Function Attrs: nounwind uwtable
define internal i32 @reportComment(%struct.XML_ParserStruct* %parser, %struct.encoding* %enc, i8* %start, i8* %end) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %start.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %data = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1988, metadata !2293), !dbg !11730
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !1989, metadata !2293), !dbg !11731
  store i8* %start, i8** %start.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %start.addr, metadata !1990, metadata !2293), !dbg !11732
  store i8* %end, i8** %end.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !1991, metadata !2293), !dbg !11733
  %0 = bitcast i8** %data to i8*, !dbg !11734
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !11734
  call void @llvm.dbg.declare(metadata i8** %data, metadata !1992, metadata !2293), !dbg !11735
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11736, !tbaa !2289
  %m_commentHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 15, !dbg !11738
  %2 = load void (i8*, i8*)*, void (i8*, i8*)** %m_commentHandler, align 8, !dbg !11738, !tbaa !2862
  %tobool = icmp ne void (i8*, i8*)* %2, null, !dbg !11739
  br i1 %tobool, label %if.end.3, label %if.then, !dbg !11740

if.then:                                          ; preds = %entry
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11741, !tbaa !2289
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 18, !dbg !11744
  %4 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler, align 8, !dbg !11744, !tbaa !2874
  %tobool1 = icmp ne void (i8*, i8*, i32)* %4, null, !dbg !11745
  br i1 %tobool1, label %if.then.2, label %if.end, !dbg !11746

if.then.2:                                        ; preds = %if.then
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11747, !tbaa !2289
  %6 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11748, !tbaa !2289
  %7 = load i8*, i8** %start.addr, align 8, !dbg !11749, !tbaa !2289
  %8 = load i8*, i8** %end.addr, align 8, !dbg !11750, !tbaa !2289
  call void @reportDefault(%struct.XML_ParserStruct* %5, %struct.encoding* %6, i8* %7, i8* %8), !dbg !11751
  br label %if.end, !dbg !11751

if.end:                                           ; preds = %if.then.2, %if.then
  store i32 1, i32* %retval, !dbg !11752
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11752

if.end.3:                                         ; preds = %entry
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11753, !tbaa !2289
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 79, !dbg !11754
  %10 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11755, !tbaa !2289
  %11 = load i8*, i8** %start.addr, align 8, !dbg !11756, !tbaa !2289
  %12 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11757, !tbaa !2289
  %minBytesPerChar = getelementptr inbounds %struct.encoding, %struct.encoding* %12, i32 0, i32 13, !dbg !11758
  %13 = load i32, i32* %minBytesPerChar, align 4, !dbg !11758, !tbaa !6758
  %mul = mul i32 %13, 4, !dbg !11759
  %idx.ext = sext i32 %mul to i64, !dbg !11760
  %add.ptr = getelementptr i8, i8* %11, i64 %idx.ext, !dbg !11760
  %14 = load i8*, i8** %end.addr, align 8, !dbg !11761, !tbaa !2289
  %15 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11762, !tbaa !2289
  %minBytesPerChar4 = getelementptr inbounds %struct.encoding, %struct.encoding* %15, i32 0, i32 13, !dbg !11763
  %16 = load i32, i32* %minBytesPerChar4, align 4, !dbg !11763, !tbaa !6758
  %mul5 = mul i32 %16, 3, !dbg !11764
  %idx.ext6 = sext i32 %mul5 to i64, !dbg !11765
  %idx.neg = sub i64 0, %idx.ext6, !dbg !11765
  %add.ptr7 = getelementptr i8, i8* %14, i64 %idx.neg, !dbg !11765
  %call = call i8* @poolStoreString(%struct.STRING_POOL* %m_tempPool, %struct.encoding* %10, i8* %add.ptr, i8* %add.ptr7), !dbg !11766
  store i8* %call, i8** %data, align 8, !dbg !11767, !tbaa !2289
  %17 = load i8*, i8** %data, align 8, !dbg !11768, !tbaa !2289
  %tobool8 = icmp ne i8* %17, null, !dbg !11768
  br i1 %tobool8, label %if.end.10, label %if.then.9, !dbg !11770

if.then.9:                                        ; preds = %if.end.3
  store i32 0, i32* %retval, !dbg !11771
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11771

if.end.10:                                        ; preds = %if.end.3
  %18 = load i8*, i8** %data, align 8, !dbg !11772, !tbaa !2289
  call void @normalizeLines(i8* %18), !dbg !11773
  %19 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11774, !tbaa !2289
  %m_commentHandler11 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %19, i32 0, i32 15, !dbg !11775
  %20 = load void (i8*, i8*)*, void (i8*, i8*)** %m_commentHandler11, align 8, !dbg !11775, !tbaa !2862
  %21 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11776, !tbaa !2289
  %m_handlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %21, i32 0, i32 1, !dbg !11777
  %22 = load i8*, i8** %m_handlerArg, align 8, !dbg !11777, !tbaa !2842
  %23 = load i8*, i8** %data, align 8, !dbg !11778, !tbaa !2289
  call void %20(i8* %22, i8* %23), !dbg !11779
  %24 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11780, !tbaa !2289
  %m_tempPool12 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %24, i32 0, i32 79, !dbg !11781
  call void @poolClear(%struct.STRING_POOL* %m_tempPool12), !dbg !11782
  store i32 1, i32* %retval, !dbg !11783
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11783

cleanup:                                          ; preds = %if.end.10, %if.then.9, %if.end
  %25 = bitcast i8** %data to i8*, !dbg !11784
  call void @llvm.lifetime.end(i64 8, i8* %25) #2, !dbg !11784
  %26 = load i32, i32* %retval, !dbg !11784
  ret i32 %26, !dbg !11784
}

declare i32 @PyExpat_XmlParseXmlDeclNS(i32, %struct.encoding*, i8*, i8*, i8**, i8**, i8**, i8**, %struct.encoding**, i32*) #3

declare i32 @PyExpat_XmlParseXmlDecl(i32, %struct.encoding*, i8*, i8*, i8**, i8**, i8**, i8**, %struct.encoding**, i32*) #3

; Function Attrs: nounwind uwtable
define internal i64 @hash(%struct.XML_ParserStruct* %parser, i8* %s) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %s.addr = alloca i8*, align 8
  %h = alloca i64, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1371, metadata !2293), !dbg !11785
  store i8* %s, i8** %s.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !1372, metadata !2293), !dbg !11786
  %0 = bitcast i64* %h to i8*, !dbg !11787
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !11787
  call void @llvm.dbg.declare(metadata i64* %h, metadata !1373, metadata !2293), !dbg !11788
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11789, !tbaa !2289
  %m_hash_secret_salt = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 89, !dbg !11790
  %2 = load i64, i64* %m_hash_secret_salt, align 8, !dbg !11790, !tbaa !3068
  store i64 %2, i64* %h, align 8, !dbg !11788, !tbaa !3400
  br label %while.cond, !dbg !11791

while.cond:                                       ; preds = %while.body, %entry
  %3 = load i8*, i8** %s.addr, align 8, !dbg !11792, !tbaa !2289
  %4 = load i8, i8* %3, align 1, !dbg !11795, !tbaa !2307
  %tobool = icmp ne i8 %4, 0, !dbg !11791
  br i1 %tobool, label %while.body, label %while.end, !dbg !11791

while.body:                                       ; preds = %while.cond
  %5 = load i64, i64* %h, align 8, !dbg !11796, !tbaa !3400
  %mul = mul i64 %5, 1000003, !dbg !11797
  %6 = load i8*, i8** %s.addr, align 8, !dbg !11798, !tbaa !2289
  %incdec.ptr = getelementptr i8, i8* %6, i32 1, !dbg !11798
  store i8* %incdec.ptr, i8** %s.addr, align 8, !dbg !11798, !tbaa !2289
  %7 = load i8, i8* %6, align 1, !dbg !11799, !tbaa !2307
  %conv = zext i8 %7 to i64, !dbg !11800
  %xor = xor i64 %mul, %conv, !dbg !11801
  store i64 %xor, i64* %h, align 8, !dbg !11802, !tbaa !3400
  br label %while.cond, !dbg !11791

while.end:                                        ; preds = %while.cond
  %8 = load i64, i64* %h, align 8, !dbg !11803, !tbaa !3400
  %9 = bitcast i64* %h to i8*, !dbg !11804
  call void @llvm.lifetime.end(i64 8, i8* %9) #2, !dbg !11804
  ret i64 %8, !dbg !11805
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @keyeq(i8* %s1, i8* %s2) #0 {
entry:
  %retval = alloca i8, align 1
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  store i8* %s1, i8** %s1.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !1378, metadata !2293), !dbg !11806
  store i8* %s2, i8** %s2.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !1379, metadata !2293), !dbg !11807
  br label %for.cond, !dbg !11808

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !11809, !tbaa !2289
  %1 = load i8, i8* %0, align 1, !dbg !11814, !tbaa !2307
  %conv = sext i8 %1 to i32, !dbg !11814
  %2 = load i8*, i8** %s2.addr, align 8, !dbg !11815, !tbaa !2289
  %3 = load i8, i8* %2, align 1, !dbg !11816, !tbaa !2307
  %conv1 = sext i8 %3 to i32, !dbg !11816
  %cmp = icmp eq i32 %conv, %conv1, !dbg !11817
  br i1 %cmp, label %for.body, label %for.end, !dbg !11818

for.body:                                         ; preds = %for.cond
  %4 = load i8*, i8** %s1.addr, align 8, !dbg !11819, !tbaa !2289
  %5 = load i8, i8* %4, align 1, !dbg !11821, !tbaa !2307
  %conv3 = sext i8 %5 to i32, !dbg !11821
  %cmp4 = icmp eq i32 %conv3, 0, !dbg !11822
  br i1 %cmp4, label %if.then, label %if.end, !dbg !11823

if.then:                                          ; preds = %for.body
  store i8 1, i8* %retval, !dbg !11824
  br label %return, !dbg !11824

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !11825

for.inc:                                          ; preds = %if.end
  %6 = load i8*, i8** %s1.addr, align 8, !dbg !11827, !tbaa !2289
  %incdec.ptr = getelementptr i8, i8* %6, i32 1, !dbg !11827
  store i8* %incdec.ptr, i8** %s1.addr, align 8, !dbg !11827, !tbaa !2289
  %7 = load i8*, i8** %s2.addr, align 8, !dbg !11828, !tbaa !2289
  %incdec.ptr6 = getelementptr i8, i8* %7, i32 1, !dbg !11828
  store i8* %incdec.ptr6, i8** %s2.addr, align 8, !dbg !11828, !tbaa !2289
  br label %for.cond, !dbg !11829

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, !dbg !11830
  br label %return, !dbg !11830

return:                                           ; preds = %for.end, %if.then
  %8 = load i8, i8* %retval, !dbg !11831
  ret i8 %8, !dbg !11831
}

; Function Attrs: nounwind uwtable
define internal i32 @doContent(%struct.XML_ParserStruct* %parser, i32 %startTagLevel, %struct.encoding* %enc, i8* %s, i8* %end, i8** %nextPtr, i8 zeroext %haveMore) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %startTagLevel.addr = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %s.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextPtr.addr = alloca i8**, align 8
  %haveMore.addr = alloca i8, align 1
  %dtd = alloca %struct.DTD*, align 8
  %eventPP = alloca i8**, align 8
  %eventEndPP = alloca i8**, align 8
  %next = alloca i8*, align 8
  %tok = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %c = alloca i8, align 1
  %name = alloca i8*, align 8
  %entity = alloca %struct.ENTITY*, align 8
  %ch = alloca i8, align 1
  %result = alloca i32, align 4
  %context = alloca i8*, align 8
  %tag = alloca %struct.tag*, align 8
  %result157 = alloca i32, align 4
  %toPtr = alloca i8*, align 8
  %rawNameEnd = alloca i8*, align 8
  %fromPtr = alloca i8*, align 8
  %bufSize = alloca i32, align 4
  %convLen = alloca i32, align 4
  %temp = alloca i8*, align 8
  %rawName262 = alloca i8*, align 8
  %result266 = alloca i32, align 4
  %bindings267 = alloca %struct.binding*, align 8
  %noElmHandlers = alloca i8, align 1
  %name268 = alloca %struct.TAG_NAME, align 8
  %b = alloca %struct.binding*, align 8
  %len = alloca i32, align 4
  %rawName347 = alloca i8*, align 8
  %tag348 = alloca %struct.tag*, align 8
  %localPart375 = alloca i8*, align 8
  %prefix376 = alloca i8*, align 8
  %uri = alloca i8*, align 8
  %b424 = alloca %struct.binding*, align 8
  %n = alloca i32, align 4
  %buf465 = alloca [4 x i8], align 1
  %c484 = alloca i8, align 1
  %result494 = alloca i32, align 4
  %dataPtr = alloca i8*, align 8
  %charDataHandler = alloca void (i8*, i8*, i32)*, align 8
  %dataPtr566 = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1398, metadata !2293), !dbg !11832
  store i32 %startTagLevel, i32* %startTagLevel.addr, align 4, !tbaa !3391
  call void @llvm.dbg.declare(metadata i32* %startTagLevel.addr, metadata !1399, metadata !2293), !dbg !11833
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !1400, metadata !2293), !dbg !11834
  store i8* %s, i8** %s.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !1401, metadata !2293), !dbg !11835
  store i8* %end, i8** %end.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !1402, metadata !2293), !dbg !11836
  store i8** %nextPtr, i8*** %nextPtr.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8*** %nextPtr.addr, metadata !1403, metadata !2293), !dbg !11837
  store i8 %haveMore, i8* %haveMore.addr, align 1, !tbaa !2307
  call void @llvm.dbg.declare(metadata i8* %haveMore.addr, metadata !1404, metadata !2293), !dbg !11838
  %0 = bitcast %struct.DTD** %dtd to i8*, !dbg !11839
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !11839
  call void @llvm.dbg.declare(metadata %struct.DTD** %dtd, metadata !1405, metadata !2293), !dbg !11840
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11841, !tbaa !2289
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 65, !dbg !11842
  %2 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !11842, !tbaa !2478
  store %struct.DTD* %2, %struct.DTD** %dtd, align 8, !dbg !11840, !tbaa !2289
  %3 = bitcast i8*** %eventPP to i8*, !dbg !11843
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !11843
  call void @llvm.dbg.declare(metadata i8*** %eventPP, metadata !1406, metadata !2293), !dbg !11844
  %4 = bitcast i8*** %eventEndPP to i8*, !dbg !11845
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !11845
  call void @llvm.dbg.declare(metadata i8*** %eventEndPP, metadata !1407, metadata !2293), !dbg !11846
  %5 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11847, !tbaa !2289
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11849, !tbaa !2289
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 34, !dbg !11850
  %7 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !11850, !tbaa !5191
  %cmp = icmp eq %struct.encoding* %5, %7, !dbg !11851
  br i1 %cmp, label %if.then, label %if.else, !dbg !11852

if.then:                                          ; preds = %entry
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11853, !tbaa !2289
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 47, !dbg !11855
  store i8** %m_eventPtr, i8*** %eventPP, align 8, !dbg !11856, !tbaa !2289
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11857, !tbaa !2289
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 48, !dbg !11858
  store i8** %m_eventEndPtr, i8*** %eventEndPP, align 8, !dbg !11859, !tbaa !2289
  br label %if.end, !dbg !11860

if.else:                                          ; preds = %entry
  %10 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11861, !tbaa !2289
  %m_openInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %10, i32 0, i32 50, !dbg !11863
  %11 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities, align 8, !dbg !11863, !tbaa !2664
  %internalEventPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %11, i32 0, i32 0, !dbg !11864
  store i8** %internalEventPtr, i8*** %eventPP, align 8, !dbg !11865, !tbaa !2289
  %12 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11866, !tbaa !2289
  %m_openInternalEntities1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %12, i32 0, i32 50, !dbg !11867
  %13 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities1, align 8, !dbg !11867, !tbaa !2664
  %internalEventEndPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %13, i32 0, i32 1, !dbg !11868
  store i8** %internalEventEndPtr, i8*** %eventEndPP, align 8, !dbg !11869, !tbaa !2289
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %14 = load i8*, i8** %s.addr, align 8, !dbg !11870, !tbaa !2289
  %15 = load i8**, i8*** %eventPP, align 8, !dbg !11871, !tbaa !2289
  store i8* %14, i8** %15, align 8, !dbg !11872, !tbaa !2289
  br label %for.cond, !dbg !11873

for.cond:                                         ; preds = %cleanup.cont.619, %if.end
  %16 = bitcast i8** %next to i8*, !dbg !11874
  call void @llvm.lifetime.start(i64 8, i8* %16) #2, !dbg !11874
  call void @llvm.dbg.declare(metadata i8** %next, metadata !1408, metadata !2293), !dbg !11875
  %17 = load i8*, i8** %s.addr, align 8, !dbg !11876, !tbaa !2289
  store i8* %17, i8** %next, align 8, !dbg !11875, !tbaa !2289
  %18 = bitcast i32* %tok to i8*, !dbg !11877
  call void @llvm.lifetime.start(i64 4, i8* %18) #2, !dbg !11877
  call void @llvm.dbg.declare(metadata i32* %tok, metadata !1412, metadata !2293), !dbg !11878
  %19 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11879, !tbaa !2289
  %scanners = getelementptr inbounds %struct.encoding, %struct.encoding* %19, i32 0, i32 0, !dbg !11880
  %arrayidx = getelementptr [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners, i32 0, i64 1, !dbg !11881
  %20 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx, align 8, !dbg !11881, !tbaa !2289
  %21 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11882, !tbaa !2289
  %22 = load i8*, i8** %s.addr, align 8, !dbg !11883, !tbaa !2289
  %23 = load i8*, i8** %end.addr, align 8, !dbg !11884, !tbaa !2289
  %call = call i32 %20(%struct.encoding* %21, i8* %22, i8* %23, i8** %next), !dbg !11885
  store i32 %call, i32* %tok, align 4, !dbg !11878, !tbaa !3391
  %24 = load i8*, i8** %next, align 8, !dbg !11886, !tbaa !2289
  %25 = load i8**, i8*** %eventEndPP, align 8, !dbg !11887, !tbaa !2289
  store i8* %24, i8** %25, align 8, !dbg !11888, !tbaa !2289
  %26 = load i32, i32* %tok, align 4, !dbg !11889, !tbaa !3391
  switch i32 %26, label %sw.default [
    i32 -3, label %sw.bb
    i32 -4, label %sw.bb.18
    i32 0, label %sw.bb.29
    i32 -1, label %sw.bb.30
    i32 -2, label %sw.bb.34
    i32 9, label %sw.bb.38
    i32 2, label %sw.bb.156
    i32 1, label %sw.bb.156
    i32 4, label %sw.bb.261
    i32 3, label %sw.bb.261
    i32 5, label %sw.bb.341
    i32 10, label %sw.bb.456
    i32 12, label %sw.bb.479
    i32 7, label %sw.bb.480
    i32 8, label %sw.bb.493
    i32 -5, label %sw.bb.517
    i32 6, label %sw.bb.558
    i32 11, label %sw.bb.598
    i32 13, label %sw.bb.603
  ], !dbg !11890

sw.bb:                                            ; preds = %for.cond
  %27 = load i8, i8* %haveMore.addr, align 1, !dbg !11891, !tbaa !2307
  %tobool = icmp ne i8 %27, 0, !dbg !11891
  br i1 %tobool, label %if.then.2, label %if.end.3, !dbg !11893

if.then.2:                                        ; preds = %sw.bb
  %28 = load i8*, i8** %s.addr, align 8, !dbg !11894, !tbaa !2289
  %29 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !11896, !tbaa !2289
  store i8* %28, i8** %29, align 8, !dbg !11897, !tbaa !2289
  store i32 0, i32* %retval, !dbg !11898
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.616, !dbg !11898

if.end.3:                                         ; preds = %sw.bb
  %30 = load i8*, i8** %end.addr, align 8, !dbg !11899, !tbaa !2289
  %31 = load i8**, i8*** %eventEndPP, align 8, !dbg !11900, !tbaa !2289
  store i8* %30, i8** %31, align 8, !dbg !11901, !tbaa !2289
  %32 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11902, !tbaa !2289
  %m_characterDataHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %32, i32 0, i32 13, !dbg !11903
  %33 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler, align 8, !dbg !11903, !tbaa !2854
  %tobool4 = icmp ne void (i8*, i8*, i32)* %33, null, !dbg !11904
  br i1 %tobool4, label %if.then.5, label %if.else.7, !dbg !11905

if.then.5:                                        ; preds = %if.end.3
  call void @llvm.lifetime.start(i64 1, i8* %c) #2, !dbg !11906
  call void @llvm.dbg.declare(metadata i8* %c, metadata !1413, metadata !2293), !dbg !11907
  store i8 10, i8* %c, align 1, !dbg !11907, !tbaa !2307
  %34 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11908, !tbaa !2289
  %m_characterDataHandler6 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %34, i32 0, i32 13, !dbg !11909
  %35 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler6, align 8, !dbg !11909, !tbaa !2854
  %36 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11910, !tbaa !2289
  %m_handlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %36, i32 0, i32 1, !dbg !11911
  %37 = load i8*, i8** %m_handlerArg, align 8, !dbg !11911, !tbaa !2842
  call void %35(i8* %37, i8* %c, i32 1), !dbg !11912
  call void @llvm.lifetime.end(i64 1, i8* %c) #2, !dbg !11913
  br label %if.end.11, !dbg !11914

if.else.7:                                        ; preds = %if.end.3
  %38 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11915, !tbaa !2289
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %38, i32 0, i32 18, !dbg !11917
  %39 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler, align 8, !dbg !11917, !tbaa !2874
  %tobool8 = icmp ne void (i8*, i8*, i32)* %39, null, !dbg !11918
  br i1 %tobool8, label %if.then.9, label %if.end.10, !dbg !11919

if.then.9:                                        ; preds = %if.else.7
  %40 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11920, !tbaa !2289
  %41 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11921, !tbaa !2289
  %42 = load i8*, i8** %s.addr, align 8, !dbg !11922, !tbaa !2289
  %43 = load i8*, i8** %end.addr, align 8, !dbg !11923, !tbaa !2289
  call void @reportDefault(%struct.XML_ParserStruct* %40, %struct.encoding* %41, i8* %42, i8* %43), !dbg !11924
  br label %if.end.10, !dbg !11924

if.end.10:                                        ; preds = %if.then.9, %if.else.7
  br label %if.end.11

if.end.11:                                        ; preds = %if.end.10, %if.then.5
  %44 = load i32, i32* %startTagLevel.addr, align 4, !dbg !11925, !tbaa !3391
  %cmp12 = icmp eq i32 %44, 0, !dbg !11927
  br i1 %cmp12, label %if.then.13, label %if.end.14, !dbg !11928

if.then.13:                                       ; preds = %if.end.11
  store i32 3, i32* %retval, !dbg !11929
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.616, !dbg !11929

if.end.14:                                        ; preds = %if.end.11
  %45 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11930, !tbaa !2289
  %m_tagLevel = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %45, i32 0, i32 53, !dbg !11932
  %46 = load i32, i32* %m_tagLevel, align 4, !dbg !11932, !tbaa !3025
  %47 = load i32, i32* %startTagLevel.addr, align 4, !dbg !11933, !tbaa !3391
  %cmp15 = icmp ne i32 %46, %47, !dbg !11934
  br i1 %cmp15, label %if.then.16, label %if.end.17, !dbg !11935

if.then.16:                                       ; preds = %if.end.14
  store i32 13, i32* %retval, !dbg !11936
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.616, !dbg !11936

if.end.17:                                        ; preds = %if.end.14
  %48 = load i8*, i8** %end.addr, align 8, !dbg !11937, !tbaa !2289
  %49 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !11938, !tbaa !2289
  store i8* %48, i8** %49, align 8, !dbg !11939, !tbaa !2289
  store i32 0, i32* %retval, !dbg !11940
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.616, !dbg !11940

sw.bb.18:                                         ; preds = %for.cond
  %50 = load i8, i8* %haveMore.addr, align 1, !dbg !11941, !tbaa !2307
  %tobool19 = icmp ne i8 %50, 0, !dbg !11941
  br i1 %tobool19, label %if.then.20, label %if.end.21, !dbg !11943

if.then.20:                                       ; preds = %sw.bb.18
  %51 = load i8*, i8** %s.addr, align 8, !dbg !11944, !tbaa !2289
  %52 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !11946, !tbaa !2289
  store i8* %51, i8** %52, align 8, !dbg !11947, !tbaa !2289
  store i32 0, i32* %retval, !dbg !11948
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.616, !dbg !11948

if.end.21:                                        ; preds = %sw.bb.18
  %53 = load i32, i32* %startTagLevel.addr, align 4, !dbg !11949, !tbaa !3391
  %cmp22 = icmp sgt i32 %53, 0, !dbg !11951
  br i1 %cmp22, label %if.then.23, label %if.end.28, !dbg !11952

if.then.23:                                       ; preds = %if.end.21
  %54 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11953, !tbaa !2289
  %m_tagLevel24 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %54, i32 0, i32 53, !dbg !11956
  %55 = load i32, i32* %m_tagLevel24, align 4, !dbg !11956, !tbaa !3025
  %56 = load i32, i32* %startTagLevel.addr, align 4, !dbg !11957, !tbaa !3391
  %cmp25 = icmp ne i32 %55, %56, !dbg !11958
  br i1 %cmp25, label %if.then.26, label %if.end.27, !dbg !11959

if.then.26:                                       ; preds = %if.then.23
  store i32 13, i32* %retval, !dbg !11960
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.616, !dbg !11960

if.end.27:                                        ; preds = %if.then.23
  %57 = load i8*, i8** %s.addr, align 8, !dbg !11961, !tbaa !2289
  %58 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !11962, !tbaa !2289
  store i8* %57, i8** %58, align 8, !dbg !11963, !tbaa !2289
  store i32 0, i32* %retval, !dbg !11964
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.616, !dbg !11964

if.end.28:                                        ; preds = %if.end.21
  store i32 3, i32* %retval, !dbg !11965
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.616, !dbg !11965

sw.bb.29:                                         ; preds = %for.cond
  %59 = load i8*, i8** %next, align 8, !dbg !11966, !tbaa !2289
  %60 = load i8**, i8*** %eventPP, align 8, !dbg !11967, !tbaa !2289
  store i8* %59, i8** %60, align 8, !dbg !11968, !tbaa !2289
  store i32 4, i32* %retval, !dbg !11969
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.616, !dbg !11969

sw.bb.30:                                         ; preds = %for.cond
  %61 = load i8, i8* %haveMore.addr, align 1, !dbg !11970, !tbaa !2307
  %tobool31 = icmp ne i8 %61, 0, !dbg !11970
  br i1 %tobool31, label %if.then.32, label %if.end.33, !dbg !11972

if.then.32:                                       ; preds = %sw.bb.30
  %62 = load i8*, i8** %s.addr, align 8, !dbg !11973, !tbaa !2289
  %63 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !11975, !tbaa !2289
  store i8* %62, i8** %63, align 8, !dbg !11976, !tbaa !2289
  store i32 0, i32* %retval, !dbg !11977
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.616, !dbg !11977

if.end.33:                                        ; preds = %sw.bb.30
  store i32 5, i32* %retval, !dbg !11978
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.616, !dbg !11978

sw.bb.34:                                         ; preds = %for.cond
  %64 = load i8, i8* %haveMore.addr, align 1, !dbg !11979, !tbaa !2307
  %tobool35 = icmp ne i8 %64, 0, !dbg !11979
  br i1 %tobool35, label %if.then.36, label %if.end.37, !dbg !11981

if.then.36:                                       ; preds = %sw.bb.34
  %65 = load i8*, i8** %s.addr, align 8, !dbg !11982, !tbaa !2289
  %66 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !11984, !tbaa !2289
  store i8* %65, i8** %66, align 8, !dbg !11985, !tbaa !2289
  store i32 0, i32* %retval, !dbg !11986
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.616, !dbg !11986

if.end.37:                                        ; preds = %sw.bb.34
  store i32 6, i32* %retval, !dbg !11987
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.616, !dbg !11987

sw.bb.38:                                         ; preds = %for.cond
  %67 = bitcast i8** %name to i8*, !dbg !11988
  call void @llvm.lifetime.start(i64 8, i8* %67) #2, !dbg !11988
  call void @llvm.dbg.declare(metadata i8** %name, metadata !1417, metadata !2293), !dbg !11989
  %68 = bitcast %struct.ENTITY** %entity to i8*, !dbg !11990
  call void @llvm.lifetime.start(i64 8, i8* %68) #2, !dbg !11990
  call void @llvm.dbg.declare(metadata %struct.ENTITY** %entity, metadata !1419, metadata !2293), !dbg !11991
  call void @llvm.lifetime.start(i64 1, i8* %ch) #2, !dbg !11992
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !1420, metadata !2293), !dbg !11993
  %69 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11994, !tbaa !2289
  %predefinedEntityName = getelementptr inbounds %struct.encoding, %struct.encoding* %69, i32 0, i32 8, !dbg !11995
  %70 = load i32 (%struct.encoding*, i8*, i8*)*, i32 (%struct.encoding*, i8*, i8*)** %predefinedEntityName, align 8, !dbg !11995, !tbaa !7905
  %71 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11996, !tbaa !2289
  %72 = load i8*, i8** %s.addr, align 8, !dbg !11997, !tbaa !2289
  %73 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11998, !tbaa !2289
  %minBytesPerChar = getelementptr inbounds %struct.encoding, %struct.encoding* %73, i32 0, i32 13, !dbg !11999
  %74 = load i32, i32* %minBytesPerChar, align 4, !dbg !11999, !tbaa !6758
  %idx.ext = sext i32 %74 to i64, !dbg !12000
  %add.ptr = getelementptr i8, i8* %72, i64 %idx.ext, !dbg !12000
  %75 = load i8*, i8** %next, align 8, !dbg !12001, !tbaa !2289
  %76 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12002, !tbaa !2289
  %minBytesPerChar39 = getelementptr inbounds %struct.encoding, %struct.encoding* %76, i32 0, i32 13, !dbg !12003
  %77 = load i32, i32* %minBytesPerChar39, align 4, !dbg !12003, !tbaa !6758
  %idx.ext40 = sext i32 %77 to i64, !dbg !12004
  %idx.neg = sub i64 0, %idx.ext40, !dbg !12004
  %add.ptr41 = getelementptr i8, i8* %75, i64 %idx.neg, !dbg !12004
  %call42 = call i32 %70(%struct.encoding* %71, i8* %add.ptr, i8* %add.ptr41), !dbg !12005
  %conv = trunc i32 %call42 to i8, !dbg !12006
  store i8 %conv, i8* %ch, align 1, !dbg !11993, !tbaa !2307
  %78 = load i8, i8* %ch, align 1, !dbg !12007, !tbaa !2307
  %tobool43 = icmp ne i8 %78, 0, !dbg !12007
  br i1 %tobool43, label %if.then.44, label %if.end.56, !dbg !12009

if.then.44:                                       ; preds = %sw.bb.38
  %79 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12010, !tbaa !2289
  %m_characterDataHandler45 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %79, i32 0, i32 13, !dbg !12013
  %80 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler45, align 8, !dbg !12013, !tbaa !2854
  %tobool46 = icmp ne void (i8*, i8*, i32)* %80, null, !dbg !12014
  br i1 %tobool46, label %if.then.47, label %if.else.50, !dbg !12015

if.then.47:                                       ; preds = %if.then.44
  %81 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12016, !tbaa !2289
  %m_characterDataHandler48 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %81, i32 0, i32 13, !dbg !12017
  %82 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler48, align 8, !dbg !12017, !tbaa !2854
  %83 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12018, !tbaa !2289
  %m_handlerArg49 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %83, i32 0, i32 1, !dbg !12019
  %84 = load i8*, i8** %m_handlerArg49, align 8, !dbg !12019, !tbaa !2842
  call void %82(i8* %84, i8* %ch, i32 1), !dbg !12020
  br label %if.end.55, !dbg !12020

if.else.50:                                       ; preds = %if.then.44
  %85 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12021, !tbaa !2289
  %m_defaultHandler51 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %85, i32 0, i32 18, !dbg !12023
  %86 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler51, align 8, !dbg !12023, !tbaa !2874
  %tobool52 = icmp ne void (i8*, i8*, i32)* %86, null, !dbg !12024
  br i1 %tobool52, label %if.then.53, label %if.end.54, !dbg !12025

if.then.53:                                       ; preds = %if.else.50
  %87 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12026, !tbaa !2289
  %88 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12027, !tbaa !2289
  %89 = load i8*, i8** %s.addr, align 8, !dbg !12028, !tbaa !2289
  %90 = load i8*, i8** %next, align 8, !dbg !12029, !tbaa !2289
  call void @reportDefault(%struct.XML_ParserStruct* %87, %struct.encoding* %88, i8* %89, i8* %90), !dbg !12030
  br label %if.end.54, !dbg !12030

if.end.54:                                        ; preds = %if.then.53, %if.else.50
  br label %if.end.55

if.end.55:                                        ; preds = %if.end.54, %if.then.47
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup.152, !dbg !12031

if.end.56:                                        ; preds = %sw.bb.38
  %91 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !12032, !tbaa !2289
  %pool = getelementptr inbounds %struct.DTD, %struct.DTD* %91, i32 0, i32 4, !dbg !12033
  %92 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12034, !tbaa !2289
  %93 = load i8*, i8** %s.addr, align 8, !dbg !12035, !tbaa !2289
  %94 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12036, !tbaa !2289
  %minBytesPerChar57 = getelementptr inbounds %struct.encoding, %struct.encoding* %94, i32 0, i32 13, !dbg !12037
  %95 = load i32, i32* %minBytesPerChar57, align 4, !dbg !12037, !tbaa !6758
  %idx.ext58 = sext i32 %95 to i64, !dbg !12038
  %add.ptr59 = getelementptr i8, i8* %93, i64 %idx.ext58, !dbg !12038
  %96 = load i8*, i8** %next, align 8, !dbg !12039, !tbaa !2289
  %97 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12040, !tbaa !2289
  %minBytesPerChar60 = getelementptr inbounds %struct.encoding, %struct.encoding* %97, i32 0, i32 13, !dbg !12041
  %98 = load i32, i32* %minBytesPerChar60, align 4, !dbg !12041, !tbaa !6758
  %idx.ext61 = sext i32 %98 to i64, !dbg !12042
  %idx.neg62 = sub i64 0, %idx.ext61, !dbg !12042
  %add.ptr63 = getelementptr i8, i8* %96, i64 %idx.neg62, !dbg !12042
  %call64 = call i8* @poolStoreString(%struct.STRING_POOL* %pool, %struct.encoding* %92, i8* %add.ptr59, i8* %add.ptr63), !dbg !12043
  store i8* %call64, i8** %name, align 8, !dbg !12044, !tbaa !2289
  %99 = load i8*, i8** %name, align 8, !dbg !12045, !tbaa !2289
  %tobool65 = icmp ne i8* %99, null, !dbg !12045
  br i1 %tobool65, label %if.end.67, label %if.then.66, !dbg !12047

if.then.66:                                       ; preds = %if.end.56
  store i32 1, i32* %retval, !dbg !12048
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.152, !dbg !12048

if.end.67:                                        ; preds = %if.end.56
  %100 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12049, !tbaa !2289
  %101 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !12050, !tbaa !2289
  %generalEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %101, i32 0, i32 0, !dbg !12051
  %102 = load i8*, i8** %name, align 8, !dbg !12052, !tbaa !2289
  %call68 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %100, %struct.HASH_TABLE* %generalEntities, i8* %102, i64 0), !dbg !12053
  %103 = bitcast %struct.NAMED* %call68 to %struct.ENTITY*, !dbg !12054
  store %struct.ENTITY* %103, %struct.ENTITY** %entity, align 8, !dbg !12055, !tbaa !2289
  %104 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !12056, !tbaa !2289
  %pool69 = getelementptr inbounds %struct.DTD, %struct.DTD* %104, i32 0, i32 4, !dbg !12057
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool69, i32 0, i32 4, !dbg !12058
  %105 = load i8*, i8** %start, align 8, !dbg !12058, !tbaa !2794
  %106 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !12059, !tbaa !2289
  %pool70 = getelementptr inbounds %struct.DTD, %struct.DTD* %106, i32 0, i32 4, !dbg !12060
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool70, i32 0, i32 3, !dbg !12061
  store i8* %105, i8** %ptr, align 8, !dbg !12062, !tbaa !2798
  %107 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !12063, !tbaa !2289
  %hasParamEntityRefs = getelementptr inbounds %struct.DTD, %struct.DTD* %107, i32 0, i32 7, !dbg !12065
  %108 = load i8, i8* %hasParamEntityRefs, align 1, !dbg !12065, !tbaa !3183
  %tobool71 = icmp ne i8 %108, 0, !dbg !12063
  br i1 %tobool71, label %lor.lhs.false, label %if.then.74, !dbg !12066

lor.lhs.false:                                    ; preds = %if.end.67
  %109 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !12067, !tbaa !2289
  %standalone = getelementptr inbounds %struct.DTD, %struct.DTD* %109, i32 0, i32 8, !dbg !12069
  %110 = load i8, i8* %standalone, align 1, !dbg !12069, !tbaa !3187
  %conv72 = zext i8 %110 to i32, !dbg !12070
  %tobool73 = icmp ne i32 %conv72, 0, !dbg !12070
  br i1 %tobool73, label %if.then.74, label %if.else.82, !dbg !12071

if.then.74:                                       ; preds = %lor.lhs.false, %if.end.67
  %111 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !12072, !tbaa !2289
  %tobool75 = icmp ne %struct.ENTITY* %111, null, !dbg !12072
  br i1 %tobool75, label %if.else.77, label %if.then.76, !dbg !12075

if.then.76:                                       ; preds = %if.then.74
  store i32 11, i32* %retval, !dbg !12076
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.152, !dbg !12076

if.else.77:                                       ; preds = %if.then.74
  %112 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !12077, !tbaa !2289
  %is_internal = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %112, i32 0, i32 10, !dbg !12079
  %113 = load i8, i8* %is_internal, align 1, !dbg !12079, !tbaa !7995
  %tobool78 = icmp ne i8 %113, 0, !dbg !12077
  br i1 %tobool78, label %if.end.80, label %if.then.79, !dbg !12080

if.then.79:                                       ; preds = %if.else.77
  store i32 24, i32* %retval, !dbg !12081
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.152, !dbg !12081

if.end.80:                                        ; preds = %if.else.77
  br label %if.end.81

if.end.81:                                        ; preds = %if.end.80
  br label %if.end.96, !dbg !12082

if.else.82:                                       ; preds = %lor.lhs.false
  %114 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !12083, !tbaa !2289
  %tobool83 = icmp ne %struct.ENTITY* %114, null, !dbg !12083
  br i1 %tobool83, label %if.end.95, label %if.then.84, !dbg !12085

if.then.84:                                       ; preds = %if.else.82
  %115 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12086, !tbaa !2289
  %m_skippedEntityHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %115, i32 0, i32 28, !dbg !12089
  %116 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_skippedEntityHandler, align 8, !dbg !12089, !tbaa !2915
  %tobool85 = icmp ne void (i8*, i8*, i32)* %116, null, !dbg !12090
  br i1 %tobool85, label %if.then.86, label %if.else.89, !dbg !12091

if.then.86:                                       ; preds = %if.then.84
  %117 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12092, !tbaa !2289
  %m_skippedEntityHandler87 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %117, i32 0, i32 28, !dbg !12093
  %118 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_skippedEntityHandler87, align 8, !dbg !12093, !tbaa !2915
  %119 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12094, !tbaa !2289
  %m_handlerArg88 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %119, i32 0, i32 1, !dbg !12095
  %120 = load i8*, i8** %m_handlerArg88, align 8, !dbg !12095, !tbaa !2842
  %121 = load i8*, i8** %name, align 8, !dbg !12096, !tbaa !2289
  call void %118(i8* %120, i8* %121, i32 0), !dbg !12097
  br label %if.end.94, !dbg !12097

if.else.89:                                       ; preds = %if.then.84
  %122 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12098, !tbaa !2289
  %m_defaultHandler90 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %122, i32 0, i32 18, !dbg !12100
  %123 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler90, align 8, !dbg !12100, !tbaa !2874
  %tobool91 = icmp ne void (i8*, i8*, i32)* %123, null, !dbg !12101
  br i1 %tobool91, label %if.then.92, label %if.end.93, !dbg !12102

if.then.92:                                       ; preds = %if.else.89
  %124 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12103, !tbaa !2289
  %125 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12104, !tbaa !2289
  %126 = load i8*, i8** %s.addr, align 8, !dbg !12105, !tbaa !2289
  %127 = load i8*, i8** %next, align 8, !dbg !12106, !tbaa !2289
  call void @reportDefault(%struct.XML_ParserStruct* %124, %struct.encoding* %125, i8* %126, i8* %127), !dbg !12107
  br label %if.end.93, !dbg !12107

if.end.93:                                        ; preds = %if.then.92, %if.else.89
  br label %if.end.94

if.end.94:                                        ; preds = %if.end.93, %if.then.86
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup.152, !dbg !12108

if.end.95:                                        ; preds = %if.else.82
  br label %if.end.96

if.end.96:                                        ; preds = %if.end.95, %if.end.81
  %128 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !12109, !tbaa !2289
  %open = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %128, i32 0, i32 8, !dbg !12111
  %129 = load i8, i8* %open, align 1, !dbg !12111, !tbaa !4090
  %tobool97 = icmp ne i8 %129, 0, !dbg !12109
  br i1 %tobool97, label %if.then.98, label %if.end.99, !dbg !12112

if.then.98:                                       ; preds = %if.end.96
  store i32 12, i32* %retval, !dbg !12113
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.152, !dbg !12113

if.end.99:                                        ; preds = %if.end.96
  %130 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !12114, !tbaa !2289
  %notation = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %130, i32 0, i32 7, !dbg !12116
  %131 = load i8*, i8** %notation, align 8, !dbg !12116, !tbaa !7823
  %tobool100 = icmp ne i8* %131, null, !dbg !12114
  br i1 %tobool100, label %if.then.101, label %if.end.102, !dbg !12117

if.then.101:                                      ; preds = %if.end.99
  store i32 15, i32* %retval, !dbg !12118
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.152, !dbg !12118

if.end.102:                                       ; preds = %if.end.99
  %132 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !12119, !tbaa !2289
  %textPtr = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %132, i32 0, i32 1, !dbg !12120
  %133 = load i8*, i8** %textPtr, align 8, !dbg !12120, !tbaa !7541
  %tobool103 = icmp ne i8* %133, null, !dbg !12119
  br i1 %tobool103, label %if.then.104, label %if.else.125, !dbg !12121

if.then.104:                                      ; preds = %if.end.102
  %134 = bitcast i32* %result to i8*, !dbg !12122
  call void @llvm.lifetime.start(i64 4, i8* %134) #2, !dbg !12122
  call void @llvm.dbg.declare(metadata i32* %result, metadata !1421, metadata !2293), !dbg !12123
  %135 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12124, !tbaa !2289
  %m_defaultExpandInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %135, i32 0, i32 52, !dbg !12126
  %136 = load i8, i8* %m_defaultExpandInternalEntities, align 1, !dbg !12126, !tbaa !3021
  %tobool105 = icmp ne i8 %136, 0, !dbg !12127
  br i1 %tobool105, label %if.end.119, label %if.then.106, !dbg !12128

if.then.106:                                      ; preds = %if.then.104
  %137 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12129, !tbaa !2289
  %m_skippedEntityHandler107 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %137, i32 0, i32 28, !dbg !12132
  %138 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_skippedEntityHandler107, align 8, !dbg !12132, !tbaa !2915
  %tobool108 = icmp ne void (i8*, i8*, i32)* %138, null, !dbg !12133
  br i1 %tobool108, label %if.then.109, label %if.else.113, !dbg !12134

if.then.109:                                      ; preds = %if.then.106
  %139 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12135, !tbaa !2289
  %m_skippedEntityHandler110 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %139, i32 0, i32 28, !dbg !12136
  %140 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_skippedEntityHandler110, align 8, !dbg !12136, !tbaa !2915
  %141 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12137, !tbaa !2289
  %m_handlerArg111 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %141, i32 0, i32 1, !dbg !12138
  %142 = load i8*, i8** %m_handlerArg111, align 8, !dbg !12138, !tbaa !2842
  %143 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !12139, !tbaa !2289
  %name112 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %143, i32 0, i32 0, !dbg !12140
  %144 = load i8*, i8** %name112, align 8, !dbg !12140, !tbaa !7578
  call void %140(i8* %142, i8* %144, i32 0), !dbg !12141
  br label %if.end.118, !dbg !12141

if.else.113:                                      ; preds = %if.then.106
  %145 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12142, !tbaa !2289
  %m_defaultHandler114 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %145, i32 0, i32 18, !dbg !12144
  %146 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler114, align 8, !dbg !12144, !tbaa !2874
  %tobool115 = icmp ne void (i8*, i8*, i32)* %146, null, !dbg !12145
  br i1 %tobool115, label %if.then.116, label %if.end.117, !dbg !12146

if.then.116:                                      ; preds = %if.else.113
  %147 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12147, !tbaa !2289
  %148 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12148, !tbaa !2289
  %149 = load i8*, i8** %s.addr, align 8, !dbg !12149, !tbaa !2289
  %150 = load i8*, i8** %next, align 8, !dbg !12150, !tbaa !2289
  call void @reportDefault(%struct.XML_ParserStruct* %147, %struct.encoding* %148, i8* %149, i8* %150), !dbg !12151
  br label %if.end.117, !dbg !12151

if.end.117:                                       ; preds = %if.then.116, %if.else.113
  br label %if.end.118

if.end.118:                                       ; preds = %if.end.117, %if.then.109
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12152

if.end.119:                                       ; preds = %if.then.104
  %151 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12153, !tbaa !2289
  %152 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !12154, !tbaa !2289
  %call120 = call i32 @processInternalEntity(%struct.XML_ParserStruct* %151, %struct.ENTITY* %152, i8 zeroext 0), !dbg !12155
  store i32 %call120, i32* %result, align 4, !dbg !12156, !tbaa !2307
  %153 = load i32, i32* %result, align 4, !dbg !12157, !tbaa !2307
  %cmp121 = icmp ne i32 %153, 0, !dbg !12159
  br i1 %cmp121, label %if.then.123, label %if.end.124, !dbg !12160

if.then.123:                                      ; preds = %if.end.119
  %154 = load i32, i32* %result, align 4, !dbg !12161, !tbaa !2307
  store i32 %154, i32* %retval, !dbg !12162
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12162

if.end.124:                                       ; preds = %if.end.119
  store i32 0, i32* %cleanup.dest.slot, !dbg !12163
  br label %cleanup, !dbg !12163

cleanup:                                          ; preds = %if.end.124, %if.then.123, %if.end.118
  %155 = bitcast i32* %result to i8*, !dbg !12164
  call void @llvm.lifetime.end(i64 4, i8* %155) #2, !dbg !12164
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.152 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.151, !dbg !12166

if.else.125:                                      ; preds = %if.end.102
  %156 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12167, !tbaa !2289
  %m_externalEntityRefHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %156, i32 0, i32 26, !dbg !12168
  %157 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %m_externalEntityRefHandler, align 8, !dbg !12168, !tbaa !2906
  %tobool126 = icmp ne i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)* %157, null, !dbg !12169
  br i1 %tobool126, label %if.then.127, label %if.else.145, !dbg !12170

if.then.127:                                      ; preds = %if.else.125
  %158 = bitcast i8** %context to i8*, !dbg !12171
  call void @llvm.lifetime.start(i64 8, i8* %158) #2, !dbg !12171
  call void @llvm.dbg.declare(metadata i8** %context, metadata !1424, metadata !2293), !dbg !12172
  %159 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !12173, !tbaa !2289
  %open128 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %159, i32 0, i32 8, !dbg !12174
  store i8 1, i8* %open128, align 1, !dbg !12175, !tbaa !4090
  %160 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12176, !tbaa !2289
  %call129 = call i8* @getContext(%struct.XML_ParserStruct* %160), !dbg !12177
  store i8* %call129, i8** %context, align 8, !dbg !12178, !tbaa !2289
  %161 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !12179, !tbaa !2289
  %open130 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %161, i32 0, i32 8, !dbg !12180
  store i8 0, i8* %open130, align 1, !dbg !12181, !tbaa !4090
  %162 = load i8*, i8** %context, align 8, !dbg !12182, !tbaa !2289
  %tobool131 = icmp ne i8* %162, null, !dbg !12182
  br i1 %tobool131, label %if.end.133, label %if.then.132, !dbg !12184

if.then.132:                                      ; preds = %if.then.127
  store i32 1, i32* %retval, !dbg !12185
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.142, !dbg !12185

if.end.133:                                       ; preds = %if.then.127
  %163 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12186, !tbaa !2289
  %m_externalEntityRefHandler134 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %163, i32 0, i32 26, !dbg !12188
  %164 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %m_externalEntityRefHandler134, align 8, !dbg !12188, !tbaa !2906
  %165 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12189, !tbaa !2289
  %m_externalEntityRefHandlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %165, i32 0, i32 27, !dbg !12190
  %166 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %m_externalEntityRefHandlerArg, align 8, !dbg !12190, !tbaa !2911
  %167 = load i8*, i8** %context, align 8, !dbg !12191, !tbaa !2289
  %168 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !12192, !tbaa !2289
  %base = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %168, i32 0, i32 5, !dbg !12193
  %169 = load i8*, i8** %base, align 8, !dbg !12193, !tbaa !6920
  %170 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !12194, !tbaa !2289
  %systemId = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %170, i32 0, i32 4, !dbg !12195
  %171 = load i8*, i8** %systemId, align 8, !dbg !12195, !tbaa !6933
  %172 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !12196, !tbaa !2289
  %publicId = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %172, i32 0, i32 6, !dbg !12197
  %173 = load i8*, i8** %publicId, align 8, !dbg !12197, !tbaa !6833
  %call135 = call i32 %164(%struct.XML_ParserStruct* %166, i8* %167, i8* %169, i8* %171, i8* %173), !dbg !12198
  %tobool136 = icmp ne i32 %call135, 0, !dbg !12198
  br i1 %tobool136, label %if.end.138, label %if.then.137, !dbg !12199

if.then.137:                                      ; preds = %if.end.133
  store i32 21, i32* %retval, !dbg !12200
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.142, !dbg !12200

if.end.138:                                       ; preds = %if.end.133
  %174 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12201, !tbaa !2289
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %174, i32 0, i32 79, !dbg !12202
  %start139 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool, i32 0, i32 4, !dbg !12203
  %175 = load i8*, i8** %start139, align 8, !dbg !12203, !tbaa !2794
  %176 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12204, !tbaa !2289
  %m_tempPool140 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %176, i32 0, i32 79, !dbg !12205
  %ptr141 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool140, i32 0, i32 3, !dbg !12206
  store i8* %175, i8** %ptr141, align 8, !dbg !12207, !tbaa !2798
  store i32 0, i32* %cleanup.dest.slot, !dbg !12208
  br label %cleanup.142, !dbg !12208

cleanup.142:                                      ; preds = %if.end.138, %if.then.137, %if.then.132
  %177 = bitcast i8** %context to i8*, !dbg !12209
  call void @llvm.lifetime.end(i64 8, i8* %177) #2, !dbg !12209
  %cleanup.dest.143 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.143, label %cleanup.152 [
    i32 0, label %cleanup.cont.144
  ]

cleanup.cont.144:                                 ; preds = %cleanup.142
  br label %if.end.150, !dbg !12211

if.else.145:                                      ; preds = %if.else.125
  %178 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12212, !tbaa !2289
  %m_defaultHandler146 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %178, i32 0, i32 18, !dbg !12214
  %179 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler146, align 8, !dbg !12214, !tbaa !2874
  %tobool147 = icmp ne void (i8*, i8*, i32)* %179, null, !dbg !12215
  br i1 %tobool147, label %if.then.148, label %if.end.149, !dbg !12216

if.then.148:                                      ; preds = %if.else.145
  %180 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12217, !tbaa !2289
  %181 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12218, !tbaa !2289
  %182 = load i8*, i8** %s.addr, align 8, !dbg !12219, !tbaa !2289
  %183 = load i8*, i8** %next, align 8, !dbg !12220, !tbaa !2289
  call void @reportDefault(%struct.XML_ParserStruct* %180, %struct.encoding* %181, i8* %182, i8* %183), !dbg !12221
  br label %if.end.149, !dbg !12221

if.end.149:                                       ; preds = %if.then.148, %if.else.145
  br label %if.end.150

if.end.150:                                       ; preds = %if.end.149, %cleanup.cont.144
  br label %if.end.151

if.end.151:                                       ; preds = %if.end.150, %cleanup.cont
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup.152, !dbg !12222

cleanup.152:                                      ; preds = %if.end.151, %cleanup.142, %cleanup, %if.then.101, %if.then.98, %if.end.94, %if.then.79, %if.then.76, %if.then.66, %if.end.55
  call void @llvm.lifetime.end(i64 1, i8* %ch) #2, !dbg !12223
  %184 = bitcast %struct.ENTITY** %entity to i8*, !dbg !12223
  call void @llvm.lifetime.end(i64 8, i8* %184) #2, !dbg !12223
  %185 = bitcast i8** %name to i8*, !dbg !12223
  call void @llvm.lifetime.end(i64 8, i8* %185) #2, !dbg !12223
  %cleanup.dest.155 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.155, label %cleanup.616 [
    i32 4, label %sw.epilog
  ]

sw.bb.156:                                        ; preds = %for.cond, %for.cond
  %186 = bitcast %struct.tag** %tag to i8*, !dbg !12224
  call void @llvm.lifetime.start(i64 8, i8* %186) #2, !dbg !12224
  call void @llvm.dbg.declare(metadata %struct.tag** %tag, metadata !1427, metadata !2293), !dbg !12225
  %187 = bitcast i32* %result157 to i8*, !dbg !12226
  call void @llvm.lifetime.start(i64 4, i8* %187) #2, !dbg !12226
  call void @llvm.dbg.declare(metadata i32* %result157, metadata !1429, metadata !2293), !dbg !12227
  %188 = bitcast i8** %toPtr to i8*, !dbg !12228
  call void @llvm.lifetime.start(i64 8, i8* %188) #2, !dbg !12228
  call void @llvm.dbg.declare(metadata i8** %toPtr, metadata !1430, metadata !2293), !dbg !12229
  %189 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12230, !tbaa !2289
  %m_freeTagList = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %189, i32 0, i32 68, !dbg !12232
  %190 = load %struct.tag*, %struct.tag** %m_freeTagList, align 8, !dbg !12232, !tbaa !2517
  %tobool158 = icmp ne %struct.tag* %190, null, !dbg !12233
  br i1 %tobool158, label %if.then.159, label %if.else.163, !dbg !12234

if.then.159:                                      ; preds = %sw.bb.156
  %191 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12235, !tbaa !2289
  %m_freeTagList160 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %191, i32 0, i32 68, !dbg !12237
  %192 = load %struct.tag*, %struct.tag** %m_freeTagList160, align 8, !dbg !12237, !tbaa !2517
  store %struct.tag* %192, %struct.tag** %tag, align 8, !dbg !12238, !tbaa !2289
  %193 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12239, !tbaa !2289
  %m_freeTagList161 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %193, i32 0, i32 68, !dbg !12240
  %194 = load %struct.tag*, %struct.tag** %m_freeTagList161, align 8, !dbg !12240, !tbaa !2517
  %parent = getelementptr inbounds %struct.tag, %struct.tag* %194, i32 0, i32 0, !dbg !12241
  %195 = load %struct.tag*, %struct.tag** %parent, align 8, !dbg !12241, !tbaa !2640
  %196 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12242, !tbaa !2289
  %m_freeTagList162 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %196, i32 0, i32 68, !dbg !12243
  store %struct.tag* %195, %struct.tag** %m_freeTagList162, align 8, !dbg !12244, !tbaa !2517
  br label %if.end.178, !dbg !12245

if.else.163:                                      ; preds = %sw.bb.156
  %197 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12246, !tbaa !2289
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %197, i32 0, i32 3, !dbg !12248
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 0, !dbg !12249
  %198 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8, !dbg !12249, !tbaa !2416
  %call164 = call i8* %198(i64 88), !dbg !12246
  %199 = bitcast i8* %call164 to %struct.tag*, !dbg !12250
  store %struct.tag* %199, %struct.tag** %tag, align 8, !dbg !12251, !tbaa !2289
  %200 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !12252, !tbaa !2289
  %tobool165 = icmp ne %struct.tag* %200, null, !dbg !12252
  br i1 %tobool165, label %if.end.167, label %if.then.166, !dbg !12254

if.then.166:                                      ; preds = %if.else.163
  store i32 1, i32* %retval, !dbg !12255
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.257, !dbg !12255

if.end.167:                                       ; preds = %if.else.163
  %201 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12256, !tbaa !2289
  %m_mem168 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %201, i32 0, i32 3, !dbg !12257
  %malloc_fcn169 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem168, i32 0, i32 0, !dbg !12258
  %202 = load i8* (i64)*, i8* (i64)** %malloc_fcn169, align 8, !dbg !12258, !tbaa !2416
  %call170 = call i8* %202(i64 32), !dbg !12256
  %203 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !12259, !tbaa !2289
  %buf = getelementptr inbounds %struct.tag, %struct.tag* %203, i32 0, i32 4, !dbg !12260
  store i8* %call170, i8** %buf, align 8, !dbg !12261, !tbaa !4374
  %204 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !12262, !tbaa !2289
  %buf171 = getelementptr inbounds %struct.tag, %struct.tag* %204, i32 0, i32 4, !dbg !12264
  %205 = load i8*, i8** %buf171, align 8, !dbg !12264, !tbaa !4374
  %tobool172 = icmp ne i8* %205, null, !dbg !12262
  br i1 %tobool172, label %if.end.175, label %if.then.173, !dbg !12265

if.then.173:                                      ; preds = %if.end.167
  %206 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12266, !tbaa !2289
  %m_mem174 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %206, i32 0, i32 3, !dbg !12268
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem174, i32 0, i32 2, !dbg !12269
  %207 = load void (i8*)*, void (i8*)** %free_fcn, align 8, !dbg !12269, !tbaa !2435
  %208 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !12270, !tbaa !2289
  %209 = bitcast %struct.tag* %208 to i8*, !dbg !12271
  call void %207(i8* %209), !dbg !12266
  store i32 1, i32* %retval, !dbg !12272
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.257, !dbg !12272

if.end.175:                                       ; preds = %if.end.167
  %210 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !12273, !tbaa !2289
  %buf176 = getelementptr inbounds %struct.tag, %struct.tag* %210, i32 0, i32 4, !dbg !12274
  %211 = load i8*, i8** %buf176, align 8, !dbg !12274, !tbaa !4374
  %add.ptr177 = getelementptr i8, i8* %211, i64 32, !dbg !12275
  %212 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !12276, !tbaa !2289
  %bufEnd = getelementptr inbounds %struct.tag, %struct.tag* %212, i32 0, i32 5, !dbg !12277
  store i8* %add.ptr177, i8** %bufEnd, align 8, !dbg !12278, !tbaa !12279
  br label %if.end.178

if.end.178:                                       ; preds = %if.end.175, %if.then.159
  %213 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !12280, !tbaa !2289
  %bindings = getelementptr inbounds %struct.tag, %struct.tag* %213, i32 0, i32 6, !dbg !12281
  store %struct.binding* null, %struct.binding** %bindings, align 8, !dbg !12282, !tbaa !2652
  %214 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12283, !tbaa !2289
  %m_tagStack = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %214, i32 0, i32 67, !dbg !12284
  %215 = load %struct.tag*, %struct.tag** %m_tagStack, align 8, !dbg !12284, !tbaa !2629
  %216 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !12285, !tbaa !2289
  %parent179 = getelementptr inbounds %struct.tag, %struct.tag* %216, i32 0, i32 0, !dbg !12286
  store %struct.tag* %215, %struct.tag** %parent179, align 8, !dbg !12287, !tbaa !2640
  %217 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !12288, !tbaa !2289
  %218 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12289, !tbaa !2289
  %m_tagStack180 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %218, i32 0, i32 67, !dbg !12290
  store %struct.tag* %217, %struct.tag** %m_tagStack180, align 8, !dbg !12291, !tbaa !2629
  %219 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !12292, !tbaa !2289
  %name181 = getelementptr inbounds %struct.tag, %struct.tag* %219, i32 0, i32 3, !dbg !12293
  %localPart = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name181, i32 0, i32 1, !dbg !12294
  store i8* null, i8** %localPart, align 8, !dbg !12295, !tbaa !12296
  %220 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !12297, !tbaa !2289
  %name182 = getelementptr inbounds %struct.tag, %struct.tag* %220, i32 0, i32 3, !dbg !12298
  %prefix = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name182, i32 0, i32 2, !dbg !12299
  store i8* null, i8** %prefix, align 8, !dbg !12300, !tbaa !12301
  %221 = load i8*, i8** %s.addr, align 8, !dbg !12302, !tbaa !2289
  %222 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12303, !tbaa !2289
  %minBytesPerChar183 = getelementptr inbounds %struct.encoding, %struct.encoding* %222, i32 0, i32 13, !dbg !12304
  %223 = load i32, i32* %minBytesPerChar183, align 4, !dbg !12304, !tbaa !6758
  %idx.ext184 = sext i32 %223 to i64, !dbg !12305
  %add.ptr185 = getelementptr i8, i8* %221, i64 %idx.ext184, !dbg !12305
  %224 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !12306, !tbaa !2289
  %rawName = getelementptr inbounds %struct.tag, %struct.tag* %224, i32 0, i32 1, !dbg !12307
  store i8* %add.ptr185, i8** %rawName, align 8, !dbg !12308, !tbaa !12309
  %225 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12310, !tbaa !2289
  %nameLength = getelementptr inbounds %struct.encoding, %struct.encoding* %225, i32 0, i32 4, !dbg !12311
  %226 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %nameLength, align 8, !dbg !12311, !tbaa !9228
  %227 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12312, !tbaa !2289
  %228 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !12313, !tbaa !2289
  %rawName186 = getelementptr inbounds %struct.tag, %struct.tag* %228, i32 0, i32 1, !dbg !12314
  %229 = load i8*, i8** %rawName186, align 8, !dbg !12314, !tbaa !12309
  %call187 = call i32 %226(%struct.encoding* %227, i8* %229), !dbg !12315
  %230 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !12316, !tbaa !2289
  %rawNameLength = getelementptr inbounds %struct.tag, %struct.tag* %230, i32 0, i32 2, !dbg !12317
  store i32 %call187, i32* %rawNameLength, align 4, !dbg !12318, !tbaa !12319
  %231 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12320, !tbaa !2289
  %m_tagLevel188 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %231, i32 0, i32 53, !dbg !12321
  %232 = load i32, i32* %m_tagLevel188, align 4, !dbg !12322, !tbaa !3025
  %inc = add i32 %232, 1, !dbg !12322
  store i32 %inc, i32* %m_tagLevel188, align 4, !dbg !12322, !tbaa !3025
  %233 = bitcast i8** %rawNameEnd to i8*, !dbg !12323
  call void @llvm.lifetime.start(i64 8, i8* %233) #2, !dbg !12323
  call void @llvm.dbg.declare(metadata i8** %rawNameEnd, metadata !1431, metadata !2293), !dbg !12324
  %234 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !12325, !tbaa !2289
  %rawName189 = getelementptr inbounds %struct.tag, %struct.tag* %234, i32 0, i32 1, !dbg !12326
  %235 = load i8*, i8** %rawName189, align 8, !dbg !12326, !tbaa !12309
  %236 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !12327, !tbaa !2289
  %rawNameLength190 = getelementptr inbounds %struct.tag, %struct.tag* %236, i32 0, i32 2, !dbg !12328
  %237 = load i32, i32* %rawNameLength190, align 4, !dbg !12328, !tbaa !12319
  %idx.ext191 = sext i32 %237 to i64, !dbg !12329
  %add.ptr192 = getelementptr i8, i8* %235, i64 %idx.ext191, !dbg !12329
  store i8* %add.ptr192, i8** %rawNameEnd, align 8, !dbg !12324, !tbaa !2289
  %238 = bitcast i8** %fromPtr to i8*, !dbg !12330
  call void @llvm.lifetime.start(i64 8, i8* %238) #2, !dbg !12330
  call void @llvm.dbg.declare(metadata i8** %fromPtr, metadata !1433, metadata !2293), !dbg !12331
  %239 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !12332, !tbaa !2289
  %rawName193 = getelementptr inbounds %struct.tag, %struct.tag* %239, i32 0, i32 1, !dbg !12333
  %240 = load i8*, i8** %rawName193, align 8, !dbg !12333, !tbaa !12309
  store i8* %240, i8** %fromPtr, align 8, !dbg !12331, !tbaa !2289
  %241 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !12334, !tbaa !2289
  %buf194 = getelementptr inbounds %struct.tag, %struct.tag* %241, i32 0, i32 4, !dbg !12335
  %242 = load i8*, i8** %buf194, align 8, !dbg !12335, !tbaa !4374
  store i8* %242, i8** %toPtr, align 8, !dbg !12336, !tbaa !2289
  br label %for.cond.195, !dbg !12337

for.cond.195:                                     ; preds = %cleanup.cont.231, %if.end.178
  %243 = bitcast i32* %bufSize to i8*, !dbg !12338
  call void @llvm.lifetime.start(i64 4, i8* %243) #2, !dbg !12338
  call void @llvm.dbg.declare(metadata i32* %bufSize, metadata !1434, metadata !2293), !dbg !12339
  %244 = bitcast i32* %convLen to i8*, !dbg !12340
  call void @llvm.lifetime.start(i64 4, i8* %244) #2, !dbg !12340
  call void @llvm.dbg.declare(metadata i32* %convLen, metadata !1438, metadata !2293), !dbg !12341
  %245 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12342, !tbaa !2289
  %utf8Convert = getelementptr inbounds %struct.encoding, %struct.encoding* %245, i32 0, i32 11, !dbg !12343
  %246 = load void (%struct.encoding*, i8**, i8*, i8**, i8*)*, void (%struct.encoding*, i8**, i8*, i8**, i8*)** %utf8Convert, align 8, !dbg !12343, !tbaa !6065
  %247 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12344, !tbaa !2289
  %248 = load i8*, i8** %rawNameEnd, align 8, !dbg !12345, !tbaa !2289
  %249 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !12346, !tbaa !2289
  %bufEnd196 = getelementptr inbounds %struct.tag, %struct.tag* %249, i32 0, i32 5, !dbg !12347
  %250 = load i8*, i8** %bufEnd196, align 8, !dbg !12347, !tbaa !12279
  %add.ptr197 = getelementptr i8, i8* %250, i64 -1, !dbg !12348
  call void %246(%struct.encoding* %247, i8** %fromPtr, i8* %248, i8** %toPtr, i8* %add.ptr197), !dbg !12349
  %251 = load i8*, i8** %toPtr, align 8, !dbg !12350, !tbaa !2289
  %252 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !12351, !tbaa !2289
  %buf198 = getelementptr inbounds %struct.tag, %struct.tag* %252, i32 0, i32 4, !dbg !12352
  %253 = load i8*, i8** %buf198, align 8, !dbg !12352, !tbaa !4374
  %sub.ptr.lhs.cast = ptrtoint i8* %251 to i64, !dbg !12353
  %sub.ptr.rhs.cast = ptrtoint i8* %253 to i64, !dbg !12353
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !12353
  %conv199 = trunc i64 %sub.ptr.sub to i32, !dbg !12354
  store i32 %conv199, i32* %convLen, align 4, !dbg !12355, !tbaa !3391
  %254 = load i8*, i8** %fromPtr, align 8, !dbg !12356, !tbaa !2289
  %255 = load i8*, i8** %rawNameEnd, align 8, !dbg !12358, !tbaa !2289
  %cmp200 = icmp eq i8* %254, %255, !dbg !12359
  br i1 %cmp200, label %if.then.202, label %if.end.204, !dbg !12360

if.then.202:                                      ; preds = %for.cond.195
  %256 = load i32, i32* %convLen, align 4, !dbg !12361, !tbaa !3391
  %257 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !12363, !tbaa !2289
  %name203 = getelementptr inbounds %struct.tag, %struct.tag* %257, i32 0, i32 3, !dbg !12364
  %strLen = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name203, i32 0, i32 3, !dbg !12365
  store i32 %256, i32* %strLen, align 4, !dbg !12366, !tbaa !12367
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup.228, !dbg !12368

if.end.204:                                       ; preds = %for.cond.195
  %258 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !12369, !tbaa !2289
  %bufEnd205 = getelementptr inbounds %struct.tag, %struct.tag* %258, i32 0, i32 5, !dbg !12370
  %259 = load i8*, i8** %bufEnd205, align 8, !dbg !12370, !tbaa !12279
  %260 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !12371, !tbaa !2289
  %buf206 = getelementptr inbounds %struct.tag, %struct.tag* %260, i32 0, i32 4, !dbg !12372
  %261 = load i8*, i8** %buf206, align 8, !dbg !12372, !tbaa !4374
  %sub.ptr.lhs.cast207 = ptrtoint i8* %259 to i64, !dbg !12373
  %sub.ptr.rhs.cast208 = ptrtoint i8* %261 to i64, !dbg !12373
  %sub.ptr.sub209 = sub i64 %sub.ptr.lhs.cast207, %sub.ptr.rhs.cast208, !dbg !12373
  %conv210 = trunc i64 %sub.ptr.sub209 to i32, !dbg !12374
  %shl = shl i32 %conv210, 1, !dbg !12375
  store i32 %shl, i32* %bufSize, align 4, !dbg !12376, !tbaa !3391
  %262 = bitcast i8** %temp to i8*, !dbg !12377
  call void @llvm.lifetime.start(i64 8, i8* %262) #2, !dbg !12377
  call void @llvm.dbg.declare(metadata i8** %temp, metadata !1439, metadata !2293), !dbg !12378
  %263 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12379, !tbaa !2289
  %m_mem211 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %263, i32 0, i32 3, !dbg !12380
  %realloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem211, i32 0, i32 1, !dbg !12381
  %264 = load i8* (i8*, i64)*, i8* (i8*, i64)** %realloc_fcn, align 8, !dbg !12381, !tbaa !5977
  %265 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !12382, !tbaa !2289
  %buf212 = getelementptr inbounds %struct.tag, %struct.tag* %265, i32 0, i32 4, !dbg !12383
  %266 = load i8*, i8** %buf212, align 8, !dbg !12383, !tbaa !4374
  %267 = load i32, i32* %bufSize, align 4, !dbg !12384, !tbaa !3391
  %conv213 = sext i32 %267 to i64, !dbg !12385
  %call214 = call i8* %264(i8* %266, i64 %conv213), !dbg !12379
  store i8* %call214, i8** %temp, align 8, !dbg !12378, !tbaa !2289
  %268 = load i8*, i8** %temp, align 8, !dbg !12386, !tbaa !2289
  %cmp215 = icmp eq i8* %268, null, !dbg !12388
  br i1 %cmp215, label %if.then.217, label %if.end.218, !dbg !12389

if.then.217:                                      ; preds = %if.end.204
  store i32 1, i32* %retval, !dbg !12390
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.225, !dbg !12390

if.end.218:                                       ; preds = %if.end.204
  %269 = load i8*, i8** %temp, align 8, !dbg !12391, !tbaa !2289
  %270 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !12392, !tbaa !2289
  %buf219 = getelementptr inbounds %struct.tag, %struct.tag* %270, i32 0, i32 4, !dbg !12393
  store i8* %269, i8** %buf219, align 8, !dbg !12394, !tbaa !4374
  %271 = load i8*, i8** %temp, align 8, !dbg !12395, !tbaa !2289
  %272 = load i32, i32* %bufSize, align 4, !dbg !12396, !tbaa !3391
  %idx.ext220 = sext i32 %272 to i64, !dbg !12397
  %add.ptr221 = getelementptr i8, i8* %271, i64 %idx.ext220, !dbg !12397
  %273 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !12398, !tbaa !2289
  %bufEnd222 = getelementptr inbounds %struct.tag, %struct.tag* %273, i32 0, i32 5, !dbg !12399
  store i8* %add.ptr221, i8** %bufEnd222, align 8, !dbg !12400, !tbaa !12279
  %274 = load i8*, i8** %temp, align 8, !dbg !12401, !tbaa !2289
  %275 = load i32, i32* %convLen, align 4, !dbg !12402, !tbaa !3391
  %idx.ext223 = sext i32 %275 to i64, !dbg !12403
  %add.ptr224 = getelementptr i8, i8* %274, i64 %idx.ext223, !dbg !12403
  store i8* %add.ptr224, i8** %toPtr, align 8, !dbg !12404, !tbaa !2289
  store i32 0, i32* %cleanup.dest.slot, !dbg !12405
  br label %cleanup.225, !dbg !12405

cleanup.225:                                      ; preds = %if.end.218, %if.then.217
  %276 = bitcast i8** %temp to i8*, !dbg !12406
  call void @llvm.lifetime.end(i64 8, i8* %276) #2, !dbg !12406
  %cleanup.dest.226 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.226, label %cleanup.228 [
    i32 0, label %cleanup.cont.227
  ]

cleanup.cont.227:                                 ; preds = %cleanup.225
  store i32 0, i32* %cleanup.dest.slot, !dbg !12408
  br label %cleanup.228, !dbg !12408

cleanup.228:                                      ; preds = %cleanup.cont.227, %cleanup.225, %if.then.202
  %277 = bitcast i32* %convLen to i8*, !dbg !12409
  call void @llvm.lifetime.end(i64 4, i8* %277) #2, !dbg !12409
  %278 = bitcast i32* %bufSize to i8*, !dbg !12409
  call void @llvm.lifetime.end(i64 4, i8* %278) #2, !dbg !12409
  %cleanup.dest.230 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.230, label %cleanup.232 [
    i32 0, label %cleanup.cont.231
    i32 5, label %for.end
  ]

cleanup.cont.231:                                 ; preds = %cleanup.228
  br label %for.cond.195, !dbg !12411

for.end:                                          ; preds = %cleanup.228
  store i32 0, i32* %cleanup.dest.slot, !dbg !12412
  br label %cleanup.232, !dbg !12412

cleanup.232:                                      ; preds = %for.end, %cleanup.228
  %279 = bitcast i8** %fromPtr to i8*, !dbg !12413
  call void @llvm.lifetime.end(i64 8, i8* %279) #2, !dbg !12413
  %280 = bitcast i8** %rawNameEnd to i8*, !dbg !12413
  call void @llvm.lifetime.end(i64 8, i8* %280) #2, !dbg !12413
  %cleanup.dest.234 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.234, label %cleanup.257 [
    i32 0, label %cleanup.cont.235
  ]

cleanup.cont.235:                                 ; preds = %cleanup.232
  %281 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !12415, !tbaa !2289
  %buf236 = getelementptr inbounds %struct.tag, %struct.tag* %281, i32 0, i32 4, !dbg !12416
  %282 = load i8*, i8** %buf236, align 8, !dbg !12416, !tbaa !4374
  %283 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !12417, !tbaa !2289
  %name237 = getelementptr inbounds %struct.tag, %struct.tag* %283, i32 0, i32 3, !dbg !12418
  %str = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name237, i32 0, i32 0, !dbg !12419
  store i8* %282, i8** %str, align 8, !dbg !12420, !tbaa !12421
  %284 = load i8*, i8** %toPtr, align 8, !dbg !12422, !tbaa !2289
  store i8 0, i8* %284, align 1, !dbg !12423, !tbaa !2307
  %285 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12424, !tbaa !2289
  %286 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12425, !tbaa !2289
  %287 = load i8*, i8** %s.addr, align 8, !dbg !12426, !tbaa !2289
  %288 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !12427, !tbaa !2289
  %name238 = getelementptr inbounds %struct.tag, %struct.tag* %288, i32 0, i32 3, !dbg !12428
  %289 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !12429, !tbaa !2289
  %bindings239 = getelementptr inbounds %struct.tag, %struct.tag* %289, i32 0, i32 6, !dbg !12430
  %call240 = call i32 @storeAtts(%struct.XML_ParserStruct* %285, %struct.encoding* %286, i8* %287, %struct.TAG_NAME* %name238, %struct.binding** %bindings239), !dbg !12431
  store i32 %call240, i32* %result157, align 4, !dbg !12432, !tbaa !2307
  %290 = load i32, i32* %result157, align 4, !dbg !12433, !tbaa !2307
  %tobool241 = icmp ne i32 %290, 0, !dbg !12433
  br i1 %tobool241, label %if.then.242, label %if.end.243, !dbg !12435

if.then.242:                                      ; preds = %cleanup.cont.235
  %291 = load i32, i32* %result157, align 4, !dbg !12436, !tbaa !2307
  store i32 %291, i32* %retval, !dbg !12437
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.257, !dbg !12437

if.end.243:                                       ; preds = %cleanup.cont.235
  %292 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12438, !tbaa !2289
  %m_startElementHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %292, i32 0, i32 11, !dbg !12440
  %293 = load void (i8*, i8*, i8**)*, void (i8*, i8*, i8**)** %m_startElementHandler, align 8, !dbg !12440, !tbaa !2846
  %tobool244 = icmp ne void (i8*, i8*, i8**)* %293, null, !dbg !12441
  br i1 %tobool244, label %if.then.245, label %if.else.250, !dbg !12442

if.then.245:                                      ; preds = %if.end.243
  %294 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12443, !tbaa !2289
  %m_startElementHandler246 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %294, i32 0, i32 11, !dbg !12444
  %295 = load void (i8*, i8*, i8**)*, void (i8*, i8*, i8**)** %m_startElementHandler246, align 8, !dbg !12444, !tbaa !2846
  %296 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12445, !tbaa !2289
  %m_handlerArg247 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %296, i32 0, i32 1, !dbg !12446
  %297 = load i8*, i8** %m_handlerArg247, align 8, !dbg !12446, !tbaa !2842
  %298 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !12447, !tbaa !2289
  %name248 = getelementptr inbounds %struct.tag, %struct.tag* %298, i32 0, i32 3, !dbg !12448
  %str249 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name248, i32 0, i32 0, !dbg !12449
  %299 = load i8*, i8** %str249, align 8, !dbg !12449, !tbaa !12421
  %300 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12450, !tbaa !2289
  %m_atts = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %300, i32 0, i32 74, !dbg !12451
  %301 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts, align 8, !dbg !12451, !tbaa !2425
  %302 = bitcast %struct.ATTRIBUTE* %301 to i8**, !dbg !12452
  call void %295(i8* %297, i8* %299, i8** %302), !dbg !12453
  br label %if.end.255, !dbg !12453

if.else.250:                                      ; preds = %if.end.243
  %303 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12454, !tbaa !2289
  %m_defaultHandler251 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %303, i32 0, i32 18, !dbg !12456
  %304 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler251, align 8, !dbg !12456, !tbaa !2874
  %tobool252 = icmp ne void (i8*, i8*, i32)* %304, null, !dbg !12457
  br i1 %tobool252, label %if.then.253, label %if.end.254, !dbg !12458

if.then.253:                                      ; preds = %if.else.250
  %305 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12459, !tbaa !2289
  %306 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12460, !tbaa !2289
  %307 = load i8*, i8** %s.addr, align 8, !dbg !12461, !tbaa !2289
  %308 = load i8*, i8** %next, align 8, !dbg !12462, !tbaa !2289
  call void @reportDefault(%struct.XML_ParserStruct* %305, %struct.encoding* %306, i8* %307, i8* %308), !dbg !12463
  br label %if.end.254, !dbg !12463

if.end.254:                                       ; preds = %if.then.253, %if.else.250
  br label %if.end.255

if.end.255:                                       ; preds = %if.end.254, %if.then.245
  %309 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12464, !tbaa !2289
  %m_tempPool256 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %309, i32 0, i32 79, !dbg !12465
  call void @poolClear(%struct.STRING_POOL* %m_tempPool256), !dbg !12466
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup.257, !dbg !12467

cleanup.257:                                      ; preds = %if.end.255, %if.then.242, %cleanup.232, %if.then.173, %if.then.166
  %310 = bitcast i8** %toPtr to i8*, !dbg !12468
  call void @llvm.lifetime.end(i64 8, i8* %310) #2, !dbg !12468
  %311 = bitcast i32* %result157 to i8*, !dbg !12468
  call void @llvm.lifetime.end(i64 4, i8* %311) #2, !dbg !12468
  %312 = bitcast %struct.tag** %tag to i8*, !dbg !12468
  call void @llvm.lifetime.end(i64 8, i8* %312) #2, !dbg !12468
  %cleanup.dest.260 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.260, label %cleanup.616 [
    i32 4, label %sw.epilog
  ]

sw.bb.261:                                        ; preds = %for.cond, %for.cond
  %313 = bitcast i8** %rawName262 to i8*, !dbg !12469
  call void @llvm.lifetime.start(i64 8, i8* %313) #2, !dbg !12469
  call void @llvm.dbg.declare(metadata i8** %rawName262, metadata !1441, metadata !2293), !dbg !12470
  %314 = load i8*, i8** %s.addr, align 8, !dbg !12471, !tbaa !2289
  %315 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12472, !tbaa !2289
  %minBytesPerChar263 = getelementptr inbounds %struct.encoding, %struct.encoding* %315, i32 0, i32 13, !dbg !12473
  %316 = load i32, i32* %minBytesPerChar263, align 4, !dbg !12473, !tbaa !6758
  %idx.ext264 = sext i32 %316 to i64, !dbg !12474
  %add.ptr265 = getelementptr i8, i8* %314, i64 %idx.ext264, !dbg !12474
  store i8* %add.ptr265, i8** %rawName262, align 8, !dbg !12470, !tbaa !2289
  %317 = bitcast i32* %result266 to i8*, !dbg !12475
  call void @llvm.lifetime.start(i64 4, i8* %317) #2, !dbg !12475
  call void @llvm.dbg.declare(metadata i32* %result266, metadata !1443, metadata !2293), !dbg !12476
  %318 = bitcast %struct.binding** %bindings267 to i8*, !dbg !12477
  call void @llvm.lifetime.start(i64 8, i8* %318) #2, !dbg !12477
  call void @llvm.dbg.declare(metadata %struct.binding** %bindings267, metadata !1444, metadata !2293), !dbg !12478
  store %struct.binding* null, %struct.binding** %bindings267, align 8, !dbg !12478, !tbaa !2289
  call void @llvm.lifetime.start(i64 1, i8* %noElmHandlers) #2, !dbg !12479
  call void @llvm.dbg.declare(metadata i8* %noElmHandlers, metadata !1445, metadata !2293), !dbg !12480
  store i8 1, i8* %noElmHandlers, align 1, !dbg !12480, !tbaa !2307
  %319 = bitcast %struct.TAG_NAME* %name268 to i8*, !dbg !12481
  call void @llvm.lifetime.start(i64 40, i8* %319) #2, !dbg !12481
  call void @llvm.dbg.declare(metadata %struct.TAG_NAME* %name268, metadata !1446, metadata !2293), !dbg !12482
  %320 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12483, !tbaa !2289
  %m_tempPool269 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %320, i32 0, i32 79, !dbg !12484
  %321 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12485, !tbaa !2289
  %322 = load i8*, i8** %rawName262, align 8, !dbg !12486, !tbaa !2289
  %323 = load i8*, i8** %rawName262, align 8, !dbg !12487, !tbaa !2289
  %324 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12488, !tbaa !2289
  %nameLength270 = getelementptr inbounds %struct.encoding, %struct.encoding* %324, i32 0, i32 4, !dbg !12489
  %325 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %nameLength270, align 8, !dbg !12489, !tbaa !9228
  %326 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12490, !tbaa !2289
  %327 = load i8*, i8** %rawName262, align 8, !dbg !12491, !tbaa !2289
  %call271 = call i32 %325(%struct.encoding* %326, i8* %327), !dbg !12492
  %idx.ext272 = sext i32 %call271 to i64, !dbg !12493
  %add.ptr273 = getelementptr i8, i8* %323, i64 %idx.ext272, !dbg !12493
  %call274 = call i8* @poolStoreString(%struct.STRING_POOL* %m_tempPool269, %struct.encoding* %321, i8* %322, i8* %add.ptr273), !dbg !12494
  %str275 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name268, i32 0, i32 0, !dbg !12495
  store i8* %call274, i8** %str275, align 8, !dbg !12496, !tbaa !12497
  %str276 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name268, i32 0, i32 0, !dbg !12498
  %328 = load i8*, i8** %str276, align 8, !dbg !12498, !tbaa !12497
  %tobool277 = icmp ne i8* %328, null, !dbg !12500
  br i1 %tobool277, label %if.end.279, label %if.then.278, !dbg !12501

if.then.278:                                      ; preds = %sw.bb.261
  store i32 1, i32* %retval, !dbg !12502
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.328, !dbg !12502

if.end.279:                                       ; preds = %sw.bb.261
  %329 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12503, !tbaa !2289
  %m_tempPool280 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %329, i32 0, i32 79, !dbg !12504
  %ptr281 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool280, i32 0, i32 3, !dbg !12505
  %330 = load i8*, i8** %ptr281, align 8, !dbg !12505, !tbaa !2798
  %331 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12506, !tbaa !2289
  %m_tempPool282 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %331, i32 0, i32 79, !dbg !12507
  %start283 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool282, i32 0, i32 4, !dbg !12508
  store i8* %330, i8** %start283, align 8, !dbg !12509, !tbaa !2794
  %332 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12510, !tbaa !2289
  %333 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12511, !tbaa !2289
  %334 = load i8*, i8** %s.addr, align 8, !dbg !12512, !tbaa !2289
  %call284 = call i32 @storeAtts(%struct.XML_ParserStruct* %332, %struct.encoding* %333, i8* %334, %struct.TAG_NAME* %name268, %struct.binding** %bindings267), !dbg !12513
  store i32 %call284, i32* %result266, align 4, !dbg !12514, !tbaa !2307
  %335 = load i32, i32* %result266, align 4, !dbg !12515, !tbaa !2307
  %tobool285 = icmp ne i32 %335, 0, !dbg !12515
  br i1 %tobool285, label %if.then.286, label %if.end.287, !dbg !12517

if.then.286:                                      ; preds = %if.end.279
  %336 = load i32, i32* %result266, align 4, !dbg !12518, !tbaa !2307
  store i32 %336, i32* %retval, !dbg !12519
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.328, !dbg !12519

if.end.287:                                       ; preds = %if.end.279
  %337 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12520, !tbaa !2289
  %m_tempPool288 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %337, i32 0, i32 79, !dbg !12521
  %ptr289 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool288, i32 0, i32 3, !dbg !12522
  %338 = load i8*, i8** %ptr289, align 8, !dbg !12522, !tbaa !2798
  %339 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12523, !tbaa !2289
  %m_tempPool290 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %339, i32 0, i32 79, !dbg !12524
  %start291 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool290, i32 0, i32 4, !dbg !12525
  store i8* %338, i8** %start291, align 8, !dbg !12526, !tbaa !2794
  %340 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12527, !tbaa !2289
  %m_startElementHandler292 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %340, i32 0, i32 11, !dbg !12529
  %341 = load void (i8*, i8*, i8**)*, void (i8*, i8*, i8**)** %m_startElementHandler292, align 8, !dbg !12529, !tbaa !2846
  %tobool293 = icmp ne void (i8*, i8*, i8**)* %341, null, !dbg !12530
  br i1 %tobool293, label %if.then.294, label %if.end.299, !dbg !12531

if.then.294:                                      ; preds = %if.end.287
  %342 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12532, !tbaa !2289
  %m_startElementHandler295 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %342, i32 0, i32 11, !dbg !12534
  %343 = load void (i8*, i8*, i8**)*, void (i8*, i8*, i8**)** %m_startElementHandler295, align 8, !dbg !12534, !tbaa !2846
  %344 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12535, !tbaa !2289
  %m_handlerArg296 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %344, i32 0, i32 1, !dbg !12536
  %345 = load i8*, i8** %m_handlerArg296, align 8, !dbg !12536, !tbaa !2842
  %str297 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name268, i32 0, i32 0, !dbg !12537
  %346 = load i8*, i8** %str297, align 8, !dbg !12537, !tbaa !12497
  %347 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12538, !tbaa !2289
  %m_atts298 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %347, i32 0, i32 74, !dbg !12539
  %348 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts298, align 8, !dbg !12539, !tbaa !2425
  %349 = bitcast %struct.ATTRIBUTE* %348 to i8**, !dbg !12540
  call void %343(i8* %345, i8* %346, i8** %349), !dbg !12541
  store i8 0, i8* %noElmHandlers, align 1, !dbg !12542, !tbaa !2307
  br label %if.end.299, !dbg !12543

if.end.299:                                       ; preds = %if.then.294, %if.end.287
  %350 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12544, !tbaa !2289
  %m_endElementHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %350, i32 0, i32 12, !dbg !12546
  %351 = load void (i8*, i8*)*, void (i8*, i8*)** %m_endElementHandler, align 8, !dbg !12546, !tbaa !2850
  %tobool300 = icmp ne void (i8*, i8*)* %351, null, !dbg !12547
  br i1 %tobool300, label %if.then.301, label %if.end.309, !dbg !12548

if.then.301:                                      ; preds = %if.end.299
  %352 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12549, !tbaa !2289
  %m_startElementHandler302 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %352, i32 0, i32 11, !dbg !12552
  %353 = load void (i8*, i8*, i8**)*, void (i8*, i8*, i8**)** %m_startElementHandler302, align 8, !dbg !12552, !tbaa !2846
  %tobool303 = icmp ne void (i8*, i8*, i8**)* %353, null, !dbg !12553
  br i1 %tobool303, label %if.then.304, label %if.end.305, !dbg !12554

if.then.304:                                      ; preds = %if.then.301
  %354 = load i8**, i8*** %eventEndPP, align 8, !dbg !12555, !tbaa !2289
  %355 = load i8*, i8** %354, align 8, !dbg !12556, !tbaa !2289
  %356 = load i8**, i8*** %eventPP, align 8, !dbg !12557, !tbaa !2289
  store i8* %355, i8** %356, align 8, !dbg !12558, !tbaa !2289
  br label %if.end.305, !dbg !12559

if.end.305:                                       ; preds = %if.then.304, %if.then.301
  %357 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12560, !tbaa !2289
  %m_endElementHandler306 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %357, i32 0, i32 12, !dbg !12561
  %358 = load void (i8*, i8*)*, void (i8*, i8*)** %m_endElementHandler306, align 8, !dbg !12561, !tbaa !2850
  %359 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12562, !tbaa !2289
  %m_handlerArg307 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %359, i32 0, i32 1, !dbg !12563
  %360 = load i8*, i8** %m_handlerArg307, align 8, !dbg !12563, !tbaa !2842
  %str308 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name268, i32 0, i32 0, !dbg !12564
  %361 = load i8*, i8** %str308, align 8, !dbg !12564, !tbaa !12497
  call void %358(i8* %360, i8* %361), !dbg !12565
  store i8 0, i8* %noElmHandlers, align 1, !dbg !12566, !tbaa !2307
  br label %if.end.309, !dbg !12567

if.end.309:                                       ; preds = %if.end.305, %if.end.299
  %362 = load i8, i8* %noElmHandlers, align 1, !dbg !12568, !tbaa !2307
  %conv310 = zext i8 %362 to i32, !dbg !12568
  %tobool311 = icmp ne i32 %conv310, 0, !dbg !12568
  br i1 %tobool311, label %land.lhs.true, label %if.end.315, !dbg !12570

land.lhs.true:                                    ; preds = %if.end.309
  %363 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12571, !tbaa !2289
  %m_defaultHandler312 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %363, i32 0, i32 18, !dbg !12573
  %364 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler312, align 8, !dbg !12573, !tbaa !2874
  %tobool313 = icmp ne void (i8*, i8*, i32)* %364, null, !dbg !12574
  br i1 %tobool313, label %if.then.314, label %if.end.315, !dbg !12575

if.then.314:                                      ; preds = %land.lhs.true
  %365 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12576, !tbaa !2289
  %366 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12577, !tbaa !2289
  %367 = load i8*, i8** %s.addr, align 8, !dbg !12578, !tbaa !2289
  %368 = load i8*, i8** %next, align 8, !dbg !12579, !tbaa !2289
  call void @reportDefault(%struct.XML_ParserStruct* %365, %struct.encoding* %366, i8* %367, i8* %368), !dbg !12580
  br label %if.end.315, !dbg !12580

if.end.315:                                       ; preds = %if.then.314, %land.lhs.true, %if.end.309
  %369 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12581, !tbaa !2289
  %m_tempPool316 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %369, i32 0, i32 79, !dbg !12582
  call void @poolClear(%struct.STRING_POOL* %m_tempPool316), !dbg !12583
  br label %while.cond, !dbg !12584

while.cond:                                       ; preds = %if.end.324, %if.end.315
  %370 = load %struct.binding*, %struct.binding** %bindings267, align 8, !dbg !12585, !tbaa !2289
  %tobool317 = icmp ne %struct.binding* %370, null, !dbg !12584
  br i1 %tobool317, label %while.body, label %while.end, !dbg !12584

while.body:                                       ; preds = %while.cond
  %371 = bitcast %struct.binding** %b to i8*, !dbg !12588
  call void @llvm.lifetime.start(i64 8, i8* %371) #2, !dbg !12588
  call void @llvm.dbg.declare(metadata %struct.binding** %b, metadata !1447, metadata !2293), !dbg !12589
  %372 = load %struct.binding*, %struct.binding** %bindings267, align 8, !dbg !12590, !tbaa !2289
  store %struct.binding* %372, %struct.binding** %b, align 8, !dbg !12589, !tbaa !2289
  %373 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12591, !tbaa !2289
  %m_endNamespaceDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %373, i32 0, i32 24, !dbg !12593
  %374 = load void (i8*, i8*)*, void (i8*, i8*)** %m_endNamespaceDeclHandler, align 8, !dbg !12593, !tbaa !2898
  %tobool318 = icmp ne void (i8*, i8*)* %374, null, !dbg !12594
  br i1 %tobool318, label %if.then.319, label %if.end.324, !dbg !12595

if.then.319:                                      ; preds = %while.body
  %375 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12596, !tbaa !2289
  %m_endNamespaceDeclHandler320 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %375, i32 0, i32 24, !dbg !12597
  %376 = load void (i8*, i8*)*, void (i8*, i8*)** %m_endNamespaceDeclHandler320, align 8, !dbg !12597, !tbaa !2898
  %377 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12598, !tbaa !2289
  %m_handlerArg321 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %377, i32 0, i32 1, !dbg !12599
  %378 = load i8*, i8** %m_handlerArg321, align 8, !dbg !12599, !tbaa !2842
  %379 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !12600, !tbaa !2289
  %prefix322 = getelementptr inbounds %struct.binding, %struct.binding* %379, i32 0, i32 0, !dbg !12601
  %380 = load %struct.prefix*, %struct.prefix** %prefix322, align 8, !dbg !12601, !tbaa !12602
  %name323 = getelementptr inbounds %struct.prefix, %struct.prefix* %380, i32 0, i32 0, !dbg !12603
  %381 = load i8*, i8** %name323, align 8, !dbg !12603, !tbaa !3638
  call void %376(i8* %378, i8* %381), !dbg !12604
  br label %if.end.324, !dbg !12604

if.end.324:                                       ; preds = %if.then.319, %while.body
  %382 = load %struct.binding*, %struct.binding** %bindings267, align 8, !dbg !12605, !tbaa !2289
  %nextTagBinding = getelementptr inbounds %struct.binding, %struct.binding* %382, i32 0, i32 1, !dbg !12606
  %383 = load %struct.binding*, %struct.binding** %nextTagBinding, align 8, !dbg !12606, !tbaa !2736
  store %struct.binding* %383, %struct.binding** %bindings267, align 8, !dbg !12607, !tbaa !2289
  %384 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12608, !tbaa !2289
  %m_freeBindingList = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %384, i32 0, i32 70, !dbg !12609
  %385 = load %struct.binding*, %struct.binding** %m_freeBindingList, align 8, !dbg !12609, !tbaa !2513
  %386 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !12610, !tbaa !2289
  %nextTagBinding325 = getelementptr inbounds %struct.binding, %struct.binding* %386, i32 0, i32 1, !dbg !12611
  store %struct.binding* %385, %struct.binding** %nextTagBinding325, align 8, !dbg !12612, !tbaa !2736
  %387 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !12613, !tbaa !2289
  %388 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12614, !tbaa !2289
  %m_freeBindingList326 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %388, i32 0, i32 70, !dbg !12615
  store %struct.binding* %387, %struct.binding** %m_freeBindingList326, align 8, !dbg !12616, !tbaa !2513
  %389 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !12617, !tbaa !2289
  %prevPrefixBinding = getelementptr inbounds %struct.binding, %struct.binding* %389, i32 0, i32 2, !dbg !12618
  %390 = load %struct.binding*, %struct.binding** %prevPrefixBinding, align 8, !dbg !12618, !tbaa !12619
  %391 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !12620, !tbaa !2289
  %prefix327 = getelementptr inbounds %struct.binding, %struct.binding* %391, i32 0, i32 0, !dbg !12621
  %392 = load %struct.prefix*, %struct.prefix** %prefix327, align 8, !dbg !12621, !tbaa !12602
  %binding = getelementptr inbounds %struct.prefix, %struct.prefix* %392, i32 0, i32 1, !dbg !12622
  store %struct.binding* %390, %struct.binding** %binding, align 8, !dbg !12623, !tbaa !12624
  %393 = bitcast %struct.binding** %b to i8*, !dbg !12625
  call void @llvm.lifetime.end(i64 8, i8* %393) #2, !dbg !12625
  br label %while.cond, !dbg !12584

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %cleanup.dest.slot, !dbg !12626
  br label %cleanup.328, !dbg !12626

cleanup.328:                                      ; preds = %while.end, %if.then.286, %if.then.278
  %394 = bitcast %struct.TAG_NAME* %name268 to i8*, !dbg !12627
  call void @llvm.lifetime.end(i64 40, i8* %394) #2, !dbg !12627
  call void @llvm.lifetime.end(i64 1, i8* %noElmHandlers) #2, !dbg !12627
  %395 = bitcast %struct.binding** %bindings267 to i8*, !dbg !12627
  call void @llvm.lifetime.end(i64 8, i8* %395) #2, !dbg !12627
  %396 = bitcast i32* %result266 to i8*, !dbg !12627
  call void @llvm.lifetime.end(i64 4, i8* %396) #2, !dbg !12627
  %397 = bitcast i8** %rawName262 to i8*, !dbg !12627
  call void @llvm.lifetime.end(i64 8, i8* %397) #2, !dbg !12627
  %cleanup.dest.333 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.333, label %cleanup.616 [
    i32 0, label %cleanup.cont.334
  ]

cleanup.cont.334:                                 ; preds = %cleanup.328
  %398 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12629, !tbaa !2289
  %m_tagLevel335 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %398, i32 0, i32 53, !dbg !12631
  %399 = load i32, i32* %m_tagLevel335, align 4, !dbg !12631, !tbaa !3025
  %cmp336 = icmp eq i32 %399, 0, !dbg !12632
  br i1 %cmp336, label %if.then.338, label %if.end.340, !dbg !12633

if.then.338:                                      ; preds = %cleanup.cont.334
  %400 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12634, !tbaa !2289
  %401 = load i8*, i8** %next, align 8, !dbg !12635, !tbaa !2289
  %402 = load i8*, i8** %end.addr, align 8, !dbg !12636, !tbaa !2289
  %403 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !12637, !tbaa !2289
  %call339 = call i32 @epilogProcessor(%struct.XML_ParserStruct* %400, i8* %401, i8* %402, i8** %403), !dbg !12638
  store i32 %call339, i32* %retval, !dbg !12639
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.616, !dbg !12639

if.end.340:                                       ; preds = %cleanup.cont.334
  br label %sw.epilog, !dbg !12640

sw.bb.341:                                        ; preds = %for.cond
  %404 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12641, !tbaa !2289
  %m_tagLevel342 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %404, i32 0, i32 53, !dbg !12642
  %405 = load i32, i32* %m_tagLevel342, align 4, !dbg !12642, !tbaa !3025
  %406 = load i32, i32* %startTagLevel.addr, align 4, !dbg !12643, !tbaa !3391
  %cmp343 = icmp eq i32 %405, %406, !dbg !12644
  br i1 %cmp343, label %if.then.345, label %if.else.346, !dbg !12645

if.then.345:                                      ; preds = %sw.bb.341
  store i32 13, i32* %retval, !dbg !12646
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.616, !dbg !12646

if.else.346:                                      ; preds = %sw.bb.341
  %407 = bitcast i32* %len to i8*, !dbg !12647
  call void @llvm.lifetime.start(i64 4, i8* %407) #2, !dbg !12647
  call void @llvm.dbg.declare(metadata i32* %len, metadata !1449, metadata !2293), !dbg !12648
  %408 = bitcast i8** %rawName347 to i8*, !dbg !12649
  call void @llvm.lifetime.start(i64 8, i8* %408) #2, !dbg !12649
  call void @llvm.dbg.declare(metadata i8** %rawName347, metadata !1452, metadata !2293), !dbg !12650
  %409 = bitcast %struct.tag** %tag348 to i8*, !dbg !12651
  call void @llvm.lifetime.start(i64 8, i8* %409) #2, !dbg !12651
  call void @llvm.dbg.declare(metadata %struct.tag** %tag348, metadata !1453, metadata !2293), !dbg !12652
  %410 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12653, !tbaa !2289
  %m_tagStack349 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %410, i32 0, i32 67, !dbg !12654
  %411 = load %struct.tag*, %struct.tag** %m_tagStack349, align 8, !dbg !12654, !tbaa !2629
  store %struct.tag* %411, %struct.tag** %tag348, align 8, !dbg !12652, !tbaa !2289
  %412 = load %struct.tag*, %struct.tag** %tag348, align 8, !dbg !12655, !tbaa !2289
  %parent350 = getelementptr inbounds %struct.tag, %struct.tag* %412, i32 0, i32 0, !dbg !12656
  %413 = load %struct.tag*, %struct.tag** %parent350, align 8, !dbg !12656, !tbaa !2640
  %414 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12657, !tbaa !2289
  %m_tagStack351 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %414, i32 0, i32 67, !dbg !12658
  store %struct.tag* %413, %struct.tag** %m_tagStack351, align 8, !dbg !12659, !tbaa !2629
  %415 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12660, !tbaa !2289
  %m_freeTagList352 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %415, i32 0, i32 68, !dbg !12661
  %416 = load %struct.tag*, %struct.tag** %m_freeTagList352, align 8, !dbg !12661, !tbaa !2517
  %417 = load %struct.tag*, %struct.tag** %tag348, align 8, !dbg !12662, !tbaa !2289
  %parent353 = getelementptr inbounds %struct.tag, %struct.tag* %417, i32 0, i32 0, !dbg !12663
  store %struct.tag* %416, %struct.tag** %parent353, align 8, !dbg !12664, !tbaa !2640
  %418 = load %struct.tag*, %struct.tag** %tag348, align 8, !dbg !12665, !tbaa !2289
  %419 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12666, !tbaa !2289
  %m_freeTagList354 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %419, i32 0, i32 68, !dbg !12667
  store %struct.tag* %418, %struct.tag** %m_freeTagList354, align 8, !dbg !12668, !tbaa !2517
  %420 = load i8*, i8** %s.addr, align 8, !dbg !12669, !tbaa !2289
  %421 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12670, !tbaa !2289
  %minBytesPerChar355 = getelementptr inbounds %struct.encoding, %struct.encoding* %421, i32 0, i32 13, !dbg !12671
  %422 = load i32, i32* %minBytesPerChar355, align 4, !dbg !12671, !tbaa !6758
  %mul = mul i32 %422, 2, !dbg !12672
  %idx.ext356 = sext i32 %mul to i64, !dbg !12673
  %add.ptr357 = getelementptr i8, i8* %420, i64 %idx.ext356, !dbg !12673
  store i8* %add.ptr357, i8** %rawName347, align 8, !dbg !12674, !tbaa !2289
  %423 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12675, !tbaa !2289
  %nameLength358 = getelementptr inbounds %struct.encoding, %struct.encoding* %423, i32 0, i32 4, !dbg !12676
  %424 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %nameLength358, align 8, !dbg !12676, !tbaa !9228
  %425 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12677, !tbaa !2289
  %426 = load i8*, i8** %rawName347, align 8, !dbg !12678, !tbaa !2289
  %call359 = call i32 %424(%struct.encoding* %425, i8* %426), !dbg !12679
  store i32 %call359, i32* %len, align 4, !dbg !12680, !tbaa !3391
  %427 = load i32, i32* %len, align 4, !dbg !12681, !tbaa !3391
  %428 = load %struct.tag*, %struct.tag** %tag348, align 8, !dbg !12683, !tbaa !2289
  %rawNameLength360 = getelementptr inbounds %struct.tag, %struct.tag* %428, i32 0, i32 2, !dbg !12684
  %429 = load i32, i32* %rawNameLength360, align 4, !dbg !12684, !tbaa !12319
  %cmp361 = icmp ne i32 %427, %429, !dbg !12685
  br i1 %cmp361, label %if.then.369, label %lor.lhs.false.363, !dbg !12686

lor.lhs.false.363:                                ; preds = %if.else.346
  %430 = load %struct.tag*, %struct.tag** %tag348, align 8, !dbg !12687, !tbaa !2289
  %rawName364 = getelementptr inbounds %struct.tag, %struct.tag* %430, i32 0, i32 1, !dbg !12689
  %431 = load i8*, i8** %rawName364, align 8, !dbg !12689, !tbaa !12309
  %432 = load i8*, i8** %rawName347, align 8, !dbg !12690, !tbaa !2289
  %433 = load i32, i32* %len, align 4, !dbg !12691, !tbaa !3391
  %conv365 = sext i32 %433 to i64, !dbg !12691
  %call366 = call i32 @memcmp(i8* %431, i8* %432, i64 %conv365) #6, !dbg !12692
  %cmp367 = icmp ne i32 %call366, 0, !dbg !12693
  br i1 %cmp367, label %if.then.369, label %if.end.370, !dbg !12694

if.then.369:                                      ; preds = %lor.lhs.false.363, %if.else.346
  %434 = load i8*, i8** %rawName347, align 8, !dbg !12695, !tbaa !2289
  %435 = load i8**, i8*** %eventPP, align 8, !dbg !12697, !tbaa !2289
  store i8* %434, i8** %435, align 8, !dbg !12698, !tbaa !2289
  store i32 7, i32* %retval, !dbg !12699
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.450, !dbg !12699

if.end.370:                                       ; preds = %lor.lhs.false.363
  %436 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12700, !tbaa !2289
  %m_tagLevel371 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %436, i32 0, i32 53, !dbg !12701
  %437 = load i32, i32* %m_tagLevel371, align 4, !dbg !12702, !tbaa !3025
  %dec = add i32 %437, -1, !dbg !12702
  store i32 %dec, i32* %m_tagLevel371, align 4, !dbg !12702, !tbaa !3025
  %438 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12703, !tbaa !2289
  %m_endElementHandler372 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %438, i32 0, i32 12, !dbg !12704
  %439 = load void (i8*, i8*)*, void (i8*, i8*)** %m_endElementHandler372, align 8, !dbg !12704, !tbaa !2850
  %tobool373 = icmp ne void (i8*, i8*)* %439, null, !dbg !12705
  br i1 %tobool373, label %if.then.374, label %if.else.414, !dbg !12706

if.then.374:                                      ; preds = %if.end.370
  %440 = bitcast i8** %localPart375 to i8*, !dbg !12707
  call void @llvm.lifetime.start(i64 8, i8* %440) #2, !dbg !12707
  call void @llvm.dbg.declare(metadata i8** %localPart375, metadata !1454, metadata !2293), !dbg !12708
  %441 = bitcast i8** %prefix376 to i8*, !dbg !12709
  call void @llvm.lifetime.start(i64 8, i8* %441) #2, !dbg !12709
  call void @llvm.dbg.declare(metadata i8** %prefix376, metadata !1457, metadata !2293), !dbg !12710
  %442 = bitcast i8** %uri to i8*, !dbg !12711
  call void @llvm.lifetime.start(i64 8, i8* %442) #2, !dbg !12711
  call void @llvm.dbg.declare(metadata i8** %uri, metadata !1458, metadata !2293), !dbg !12712
  %443 = load %struct.tag*, %struct.tag** %tag348, align 8, !dbg !12713, !tbaa !2289
  %name377 = getelementptr inbounds %struct.tag, %struct.tag* %443, i32 0, i32 3, !dbg !12714
  %localPart378 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name377, i32 0, i32 1, !dbg !12715
  %444 = load i8*, i8** %localPart378, align 8, !dbg !12715, !tbaa !12296
  store i8* %444, i8** %localPart375, align 8, !dbg !12716, !tbaa !2289
  %445 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12717, !tbaa !2289
  %m_ns = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %445, i32 0, i32 38, !dbg !12719
  %446 = load i8, i8* %m_ns, align 1, !dbg !12719, !tbaa !2545
  %conv379 = zext i8 %446 to i32, !dbg !12720
  %tobool380 = icmp ne i32 %conv379, 0, !dbg !12720
  br i1 %tobool380, label %land.lhs.true.381, label %if.end.409, !dbg !12721

land.lhs.true.381:                                ; preds = %if.then.374
  %447 = load i8*, i8** %localPart375, align 8, !dbg !12722, !tbaa !2289
  %tobool382 = icmp ne i8* %447, null, !dbg !12722
  br i1 %tobool382, label %if.then.383, label %if.end.409, !dbg !12724

if.then.383:                                      ; preds = %land.lhs.true.381
  %448 = load %struct.tag*, %struct.tag** %tag348, align 8, !dbg !12725, !tbaa !2289
  %name384 = getelementptr inbounds %struct.tag, %struct.tag* %448, i32 0, i32 3, !dbg !12727
  %str385 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name384, i32 0, i32 0, !dbg !12728
  %449 = load i8*, i8** %str385, align 8, !dbg !12728, !tbaa !12421
  %450 = load %struct.tag*, %struct.tag** %tag348, align 8, !dbg !12729, !tbaa !2289
  %name386 = getelementptr inbounds %struct.tag, %struct.tag* %450, i32 0, i32 3, !dbg !12730
  %uriLen = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name386, i32 0, i32 4, !dbg !12731
  %451 = load i32, i32* %uriLen, align 4, !dbg !12731, !tbaa !12732
  %idx.ext387 = sext i32 %451 to i64, !dbg !12733
  %add.ptr388 = getelementptr i8, i8* %449, i64 %idx.ext387, !dbg !12733
  store i8* %add.ptr388, i8** %uri, align 8, !dbg !12734, !tbaa !2289
  br label %while.cond.389, !dbg !12735

while.cond.389:                                   ; preds = %while.body.391, %if.then.383
  %452 = load i8*, i8** %localPart375, align 8, !dbg !12736, !tbaa !2289
  %453 = load i8, i8* %452, align 1, !dbg !12739, !tbaa !2307
  %tobool390 = icmp ne i8 %453, 0, !dbg !12735
  br i1 %tobool390, label %while.body.391, label %while.end.393, !dbg !12735

while.body.391:                                   ; preds = %while.cond.389
  %454 = load i8*, i8** %localPart375, align 8, !dbg !12740, !tbaa !2289
  %incdec.ptr = getelementptr i8, i8* %454, i32 1, !dbg !12740
  store i8* %incdec.ptr, i8** %localPart375, align 8, !dbg !12740, !tbaa !2289
  %455 = load i8, i8* %454, align 1, !dbg !12742, !tbaa !2307
  %456 = load i8*, i8** %uri, align 8, !dbg !12743, !tbaa !2289
  %incdec.ptr392 = getelementptr i8, i8* %456, i32 1, !dbg !12743
  store i8* %incdec.ptr392, i8** %uri, align 8, !dbg !12743, !tbaa !2289
  store i8 %455, i8* %456, align 1, !dbg !12744, !tbaa !2307
  br label %while.cond.389, !dbg !12735

while.end.393:                                    ; preds = %while.cond.389
  %457 = load %struct.tag*, %struct.tag** %tag348, align 8, !dbg !12745, !tbaa !2289
  %name394 = getelementptr inbounds %struct.tag, %struct.tag* %457, i32 0, i32 3, !dbg !12746
  %prefix395 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name394, i32 0, i32 2, !dbg !12747
  %458 = load i8*, i8** %prefix395, align 8, !dbg !12747, !tbaa !12301
  store i8* %458, i8** %prefix376, align 8, !dbg !12748, !tbaa !2289
  %459 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12749, !tbaa !2289
  %m_ns_triplets = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %459, i32 0, i32 39, !dbg !12751
  %460 = load i8, i8* %m_ns_triplets, align 1, !dbg !12751, !tbaa !2549
  %conv396 = zext i8 %460 to i32, !dbg !12752
  %tobool397 = icmp ne i32 %conv396, 0, !dbg !12752
  br i1 %tobool397, label %land.lhs.true.398, label %if.end.408, !dbg !12753

land.lhs.true.398:                                ; preds = %while.end.393
  %461 = load i8*, i8** %prefix376, align 8, !dbg !12754, !tbaa !2289
  %tobool399 = icmp ne i8* %461, null, !dbg !12754
  br i1 %tobool399, label %if.then.400, label %if.end.408, !dbg !12756

if.then.400:                                      ; preds = %land.lhs.true.398
  %462 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12757, !tbaa !2289
  %m_namespaceSeparator = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %462, i32 0, i32 83, !dbg !12759
  %463 = load i8, i8* %m_namespaceSeparator, align 1, !dbg !12759, !tbaa !2541
  %464 = load i8*, i8** %uri, align 8, !dbg !12760, !tbaa !2289
  %incdec.ptr401 = getelementptr i8, i8* %464, i32 1, !dbg !12760
  store i8* %incdec.ptr401, i8** %uri, align 8, !dbg !12760, !tbaa !2289
  store i8 %463, i8* %464, align 1, !dbg !12761, !tbaa !2307
  br label %while.cond.402, !dbg !12762

while.cond.402:                                   ; preds = %while.body.404, %if.then.400
  %465 = load i8*, i8** %prefix376, align 8, !dbg !12763, !tbaa !2289
  %466 = load i8, i8* %465, align 1, !dbg !12766, !tbaa !2307
  %tobool403 = icmp ne i8 %466, 0, !dbg !12762
  br i1 %tobool403, label %while.body.404, label %while.end.407, !dbg !12762

while.body.404:                                   ; preds = %while.cond.402
  %467 = load i8*, i8** %prefix376, align 8, !dbg !12767, !tbaa !2289
  %incdec.ptr405 = getelementptr i8, i8* %467, i32 1, !dbg !12767
  store i8* %incdec.ptr405, i8** %prefix376, align 8, !dbg !12767, !tbaa !2289
  %468 = load i8, i8* %467, align 1, !dbg !12769, !tbaa !2307
  %469 = load i8*, i8** %uri, align 8, !dbg !12770, !tbaa !2289
  %incdec.ptr406 = getelementptr i8, i8* %469, i32 1, !dbg !12770
  store i8* %incdec.ptr406, i8** %uri, align 8, !dbg !12770, !tbaa !2289
  store i8 %468, i8* %469, align 1, !dbg !12771, !tbaa !2307
  br label %while.cond.402, !dbg !12762

while.end.407:                                    ; preds = %while.cond.402
  br label %if.end.408, !dbg !12772

if.end.408:                                       ; preds = %while.end.407, %land.lhs.true.398, %while.end.393
  %470 = load i8*, i8** %uri, align 8, !dbg !12773, !tbaa !2289
  store i8 0, i8* %470, align 1, !dbg !12774, !tbaa !2307
  br label %if.end.409, !dbg !12775

if.end.409:                                       ; preds = %if.end.408, %land.lhs.true.381, %if.then.374
  %471 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12776, !tbaa !2289
  %m_endElementHandler410 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %471, i32 0, i32 12, !dbg !12777
  %472 = load void (i8*, i8*)*, void (i8*, i8*)** %m_endElementHandler410, align 8, !dbg !12777, !tbaa !2850
  %473 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12778, !tbaa !2289
  %m_handlerArg411 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %473, i32 0, i32 1, !dbg !12779
  %474 = load i8*, i8** %m_handlerArg411, align 8, !dbg !12779, !tbaa !2842
  %475 = load %struct.tag*, %struct.tag** %tag348, align 8, !dbg !12780, !tbaa !2289
  %name412 = getelementptr inbounds %struct.tag, %struct.tag* %475, i32 0, i32 3, !dbg !12781
  %str413 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name412, i32 0, i32 0, !dbg !12782
  %476 = load i8*, i8** %str413, align 8, !dbg !12782, !tbaa !12421
  call void %472(i8* %474, i8* %476), !dbg !12783
  %477 = bitcast i8** %uri to i8*, !dbg !12784
  call void @llvm.lifetime.end(i64 8, i8* %477) #2, !dbg !12784
  %478 = bitcast i8** %prefix376 to i8*, !dbg !12784
  call void @llvm.lifetime.end(i64 8, i8* %478) #2, !dbg !12784
  %479 = bitcast i8** %localPart375 to i8*, !dbg !12784
  call void @llvm.lifetime.end(i64 8, i8* %479) #2, !dbg !12784
  br label %if.end.419, !dbg !12785

if.else.414:                                      ; preds = %if.end.370
  %480 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12786, !tbaa !2289
  %m_defaultHandler415 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %480, i32 0, i32 18, !dbg !12788
  %481 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler415, align 8, !dbg !12788, !tbaa !2874
  %tobool416 = icmp ne void (i8*, i8*, i32)* %481, null, !dbg !12789
  br i1 %tobool416, label %if.then.417, label %if.end.418, !dbg !12790

if.then.417:                                      ; preds = %if.else.414
  %482 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12791, !tbaa !2289
  %483 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12792, !tbaa !2289
  %484 = load i8*, i8** %s.addr, align 8, !dbg !12793, !tbaa !2289
  %485 = load i8*, i8** %next, align 8, !dbg !12794, !tbaa !2289
  call void @reportDefault(%struct.XML_ParserStruct* %482, %struct.encoding* %483, i8* %484, i8* %485), !dbg !12795
  br label %if.end.418, !dbg !12795

if.end.418:                                       ; preds = %if.then.417, %if.else.414
  br label %if.end.419

if.end.419:                                       ; preds = %if.end.418, %if.end.409
  br label %while.cond.420, !dbg !12796

while.cond.420:                                   ; preds = %if.end.433, %if.end.419
  %486 = load %struct.tag*, %struct.tag** %tag348, align 8, !dbg !12797, !tbaa !2289
  %bindings421 = getelementptr inbounds %struct.tag, %struct.tag* %486, i32 0, i32 6, !dbg !12800
  %487 = load %struct.binding*, %struct.binding** %bindings421, align 8, !dbg !12800, !tbaa !2652
  %tobool422 = icmp ne %struct.binding* %487, null, !dbg !12796
  br i1 %tobool422, label %while.body.423, label %while.end.443, !dbg !12796

while.body.423:                                   ; preds = %while.cond.420
  %488 = bitcast %struct.binding** %b424 to i8*, !dbg !12801
  call void @llvm.lifetime.start(i64 8, i8* %488) #2, !dbg !12801
  call void @llvm.dbg.declare(metadata %struct.binding** %b424, metadata !1459, metadata !2293), !dbg !12802
  %489 = load %struct.tag*, %struct.tag** %tag348, align 8, !dbg !12803, !tbaa !2289
  %bindings425 = getelementptr inbounds %struct.tag, %struct.tag* %489, i32 0, i32 6, !dbg !12804
  %490 = load %struct.binding*, %struct.binding** %bindings425, align 8, !dbg !12804, !tbaa !2652
  store %struct.binding* %490, %struct.binding** %b424, align 8, !dbg !12802, !tbaa !2289
  %491 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12805, !tbaa !2289
  %m_endNamespaceDeclHandler426 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %491, i32 0, i32 24, !dbg !12807
  %492 = load void (i8*, i8*)*, void (i8*, i8*)** %m_endNamespaceDeclHandler426, align 8, !dbg !12807, !tbaa !2898
  %tobool427 = icmp ne void (i8*, i8*)* %492, null, !dbg !12808
  br i1 %tobool427, label %if.then.428, label %if.end.433, !dbg !12809

if.then.428:                                      ; preds = %while.body.423
  %493 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12810, !tbaa !2289
  %m_endNamespaceDeclHandler429 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %493, i32 0, i32 24, !dbg !12811
  %494 = load void (i8*, i8*)*, void (i8*, i8*)** %m_endNamespaceDeclHandler429, align 8, !dbg !12811, !tbaa !2898
  %495 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12812, !tbaa !2289
  %m_handlerArg430 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %495, i32 0, i32 1, !dbg !12813
  %496 = load i8*, i8** %m_handlerArg430, align 8, !dbg !12813, !tbaa !2842
  %497 = load %struct.binding*, %struct.binding** %b424, align 8, !dbg !12814, !tbaa !2289
  %prefix431 = getelementptr inbounds %struct.binding, %struct.binding* %497, i32 0, i32 0, !dbg !12815
  %498 = load %struct.prefix*, %struct.prefix** %prefix431, align 8, !dbg !12815, !tbaa !12602
  %name432 = getelementptr inbounds %struct.prefix, %struct.prefix* %498, i32 0, i32 0, !dbg !12816
  %499 = load i8*, i8** %name432, align 8, !dbg !12816, !tbaa !3638
  call void %494(i8* %496, i8* %499), !dbg !12817
  br label %if.end.433, !dbg !12817

if.end.433:                                       ; preds = %if.then.428, %while.body.423
  %500 = load %struct.tag*, %struct.tag** %tag348, align 8, !dbg !12818, !tbaa !2289
  %bindings434 = getelementptr inbounds %struct.tag, %struct.tag* %500, i32 0, i32 6, !dbg !12819
  %501 = load %struct.binding*, %struct.binding** %bindings434, align 8, !dbg !12819, !tbaa !2652
  %nextTagBinding435 = getelementptr inbounds %struct.binding, %struct.binding* %501, i32 0, i32 1, !dbg !12820
  %502 = load %struct.binding*, %struct.binding** %nextTagBinding435, align 8, !dbg !12820, !tbaa !2736
  %503 = load %struct.tag*, %struct.tag** %tag348, align 8, !dbg !12821, !tbaa !2289
  %bindings436 = getelementptr inbounds %struct.tag, %struct.tag* %503, i32 0, i32 6, !dbg !12822
  store %struct.binding* %502, %struct.binding** %bindings436, align 8, !dbg !12823, !tbaa !2652
  %504 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12824, !tbaa !2289
  %m_freeBindingList437 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %504, i32 0, i32 70, !dbg !12825
  %505 = load %struct.binding*, %struct.binding** %m_freeBindingList437, align 8, !dbg !12825, !tbaa !2513
  %506 = load %struct.binding*, %struct.binding** %b424, align 8, !dbg !12826, !tbaa !2289
  %nextTagBinding438 = getelementptr inbounds %struct.binding, %struct.binding* %506, i32 0, i32 1, !dbg !12827
  store %struct.binding* %505, %struct.binding** %nextTagBinding438, align 8, !dbg !12828, !tbaa !2736
  %507 = load %struct.binding*, %struct.binding** %b424, align 8, !dbg !12829, !tbaa !2289
  %508 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12830, !tbaa !2289
  %m_freeBindingList439 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %508, i32 0, i32 70, !dbg !12831
  store %struct.binding* %507, %struct.binding** %m_freeBindingList439, align 8, !dbg !12832, !tbaa !2513
  %509 = load %struct.binding*, %struct.binding** %b424, align 8, !dbg !12833, !tbaa !2289
  %prevPrefixBinding440 = getelementptr inbounds %struct.binding, %struct.binding* %509, i32 0, i32 2, !dbg !12834
  %510 = load %struct.binding*, %struct.binding** %prevPrefixBinding440, align 8, !dbg !12834, !tbaa !12619
  %511 = load %struct.binding*, %struct.binding** %b424, align 8, !dbg !12835, !tbaa !2289
  %prefix441 = getelementptr inbounds %struct.binding, %struct.binding* %511, i32 0, i32 0, !dbg !12836
  %512 = load %struct.prefix*, %struct.prefix** %prefix441, align 8, !dbg !12836, !tbaa !12602
  %binding442 = getelementptr inbounds %struct.prefix, %struct.prefix* %512, i32 0, i32 1, !dbg !12837
  store %struct.binding* %510, %struct.binding** %binding442, align 8, !dbg !12838, !tbaa !12624
  %513 = bitcast %struct.binding** %b424 to i8*, !dbg !12839
  call void @llvm.lifetime.end(i64 8, i8* %513) #2, !dbg !12839
  br label %while.cond.420, !dbg !12796

while.end.443:                                    ; preds = %while.cond.420
  %514 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12840, !tbaa !2289
  %m_tagLevel444 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %514, i32 0, i32 53, !dbg !12842
  %515 = load i32, i32* %m_tagLevel444, align 4, !dbg !12842, !tbaa !3025
  %cmp445 = icmp eq i32 %515, 0, !dbg !12843
  br i1 %cmp445, label %if.then.447, label %if.end.449, !dbg !12844

if.then.447:                                      ; preds = %while.end.443
  %516 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12845, !tbaa !2289
  %517 = load i8*, i8** %next, align 8, !dbg !12846, !tbaa !2289
  %518 = load i8*, i8** %end.addr, align 8, !dbg !12847, !tbaa !2289
  %519 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !12848, !tbaa !2289
  %call448 = call i32 @epilogProcessor(%struct.XML_ParserStruct* %516, i8* %517, i8* %518, i8** %519), !dbg !12849
  store i32 %call448, i32* %retval, !dbg !12850
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.450, !dbg !12850

if.end.449:                                       ; preds = %while.end.443
  store i32 0, i32* %cleanup.dest.slot, !dbg !12851
  br label %cleanup.450, !dbg !12851

cleanup.450:                                      ; preds = %if.end.449, %if.then.447, %if.then.369
  %520 = bitcast %struct.tag** %tag348 to i8*, !dbg !12852
  call void @llvm.lifetime.end(i64 8, i8* %520) #2, !dbg !12852
  %521 = bitcast i8** %rawName347 to i8*, !dbg !12852
  call void @llvm.lifetime.end(i64 8, i8* %521) #2, !dbg !12852
  %522 = bitcast i32* %len to i8*, !dbg !12852
  call void @llvm.lifetime.end(i64 4, i8* %522) #2, !dbg !12852
  %cleanup.dest.453 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.453, label %cleanup.616 [
    i32 0, label %cleanup.cont.454
  ]

cleanup.cont.454:                                 ; preds = %cleanup.450
  br label %if.end.455

if.end.455:                                       ; preds = %cleanup.cont.454
  br label %sw.epilog, !dbg !12854

sw.bb.456:                                        ; preds = %for.cond
  %523 = bitcast i32* %n to i8*, !dbg !12855
  call void @llvm.lifetime.start(i64 4, i8* %523) #2, !dbg !12855
  call void @llvm.dbg.declare(metadata i32* %n, metadata !1461, metadata !2293), !dbg !12856
  %524 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12857, !tbaa !2289
  %charRefNumber = getelementptr inbounds %struct.encoding, %struct.encoding* %524, i32 0, i32 7, !dbg !12858
  %525 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %charRefNumber, align 8, !dbg !12858, !tbaa !10981
  %526 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12859, !tbaa !2289
  %527 = load i8*, i8** %s.addr, align 8, !dbg !12860, !tbaa !2289
  %call457 = call i32 %525(%struct.encoding* %526, i8* %527), !dbg !12861
  store i32 %call457, i32* %n, align 4, !dbg !12856, !tbaa !3391
  %528 = load i32, i32* %n, align 4, !dbg !12862, !tbaa !3391
  %cmp458 = icmp slt i32 %528, 0, !dbg !12864
  br i1 %cmp458, label %if.then.460, label %if.end.461, !dbg !12865

if.then.460:                                      ; preds = %sw.bb.456
  store i32 14, i32* %retval, !dbg !12866
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.476, !dbg !12866

if.end.461:                                       ; preds = %sw.bb.456
  %529 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12867, !tbaa !2289
  %m_characterDataHandler462 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %529, i32 0, i32 13, !dbg !12868
  %530 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler462, align 8, !dbg !12868, !tbaa !2854
  %tobool463 = icmp ne void (i8*, i8*, i32)* %530, null, !dbg !12869
  br i1 %tobool463, label %if.then.464, label %if.else.470, !dbg !12870

if.then.464:                                      ; preds = %if.end.461
  %531 = bitcast [4 x i8]* %buf465 to i8*, !dbg !12871
  call void @llvm.lifetime.start(i64 4, i8* %531) #2, !dbg !12871
  call void @llvm.dbg.declare(metadata [4 x i8]* %buf465, metadata !1463, metadata !2293), !dbg !12872
  %532 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12873, !tbaa !2289
  %m_characterDataHandler466 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %532, i32 0, i32 13, !dbg !12874
  %533 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler466, align 8, !dbg !12874, !tbaa !2854
  %534 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12875, !tbaa !2289
  %m_handlerArg467 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %534, i32 0, i32 1, !dbg !12876
  %535 = load i8*, i8** %m_handlerArg467, align 8, !dbg !12876, !tbaa !2842
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %buf465, i32 0, i32 0, !dbg !12877
  %536 = load i32, i32* %n, align 4, !dbg !12878, !tbaa !3391
  %arraydecay468 = getelementptr inbounds [4 x i8], [4 x i8]* %buf465, i32 0, i32 0, !dbg !12879
  %call469 = call i32 @PyExpat_XmlUtf8Encode(i32 %536, i8* %arraydecay468), !dbg !12880
  call void %533(i8* %535, i8* %arraydecay, i32 %call469), !dbg !12881
  %537 = bitcast [4 x i8]* %buf465 to i8*, !dbg !12882
  call void @llvm.lifetime.end(i64 4, i8* %537) #2, !dbg !12882
  br label %if.end.475, !dbg !12883

if.else.470:                                      ; preds = %if.end.461
  %538 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12884, !tbaa !2289
  %m_defaultHandler471 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %538, i32 0, i32 18, !dbg !12886
  %539 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler471, align 8, !dbg !12886, !tbaa !2874
  %tobool472 = icmp ne void (i8*, i8*, i32)* %539, null, !dbg !12887
  br i1 %tobool472, label %if.then.473, label %if.end.474, !dbg !12888

if.then.473:                                      ; preds = %if.else.470
  %540 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12889, !tbaa !2289
  %541 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12890, !tbaa !2289
  %542 = load i8*, i8** %s.addr, align 8, !dbg !12891, !tbaa !2289
  %543 = load i8*, i8** %next, align 8, !dbg !12892, !tbaa !2289
  call void @reportDefault(%struct.XML_ParserStruct* %540, %struct.encoding* %541, i8* %542, i8* %543), !dbg !12893
  br label %if.end.474, !dbg !12893

if.end.474:                                       ; preds = %if.then.473, %if.else.470
  br label %if.end.475

if.end.475:                                       ; preds = %if.end.474, %if.then.464
  store i32 0, i32* %cleanup.dest.slot, !dbg !12894
  br label %cleanup.476, !dbg !12894

cleanup.476:                                      ; preds = %if.end.475, %if.then.460
  %544 = bitcast i32* %n to i8*, !dbg !12895
  call void @llvm.lifetime.end(i64 4, i8* %544) #2, !dbg !12895
  %cleanup.dest.477 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.477, label %cleanup.616 [
    i32 0, label %cleanup.cont.478
  ]

cleanup.cont.478:                                 ; preds = %cleanup.476
  br label %sw.epilog, !dbg !12896

sw.bb.479:                                        ; preds = %for.cond
  store i32 17, i32* %retval, !dbg !12897
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.616, !dbg !12897

sw.bb.480:                                        ; preds = %for.cond
  %545 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12898, !tbaa !2289
  %m_characterDataHandler481 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %545, i32 0, i32 13, !dbg !12899
  %546 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler481, align 8, !dbg !12899, !tbaa !2854
  %tobool482 = icmp ne void (i8*, i8*, i32)* %546, null, !dbg !12900
  br i1 %tobool482, label %if.then.483, label %if.else.487, !dbg !12901

if.then.483:                                      ; preds = %sw.bb.480
  call void @llvm.lifetime.start(i64 1, i8* %c484) #2, !dbg !12902
  call void @llvm.dbg.declare(metadata i8* %c484, metadata !1467, metadata !2293), !dbg !12903
  store i8 10, i8* %c484, align 1, !dbg !12903, !tbaa !2307
  %547 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12904, !tbaa !2289
  %m_characterDataHandler485 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %547, i32 0, i32 13, !dbg !12905
  %548 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler485, align 8, !dbg !12905, !tbaa !2854
  %549 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12906, !tbaa !2289
  %m_handlerArg486 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %549, i32 0, i32 1, !dbg !12907
  %550 = load i8*, i8** %m_handlerArg486, align 8, !dbg !12907, !tbaa !2842
  call void %548(i8* %550, i8* %c484, i32 1), !dbg !12908
  call void @llvm.lifetime.end(i64 1, i8* %c484) #2, !dbg !12909
  br label %if.end.492, !dbg !12910

if.else.487:                                      ; preds = %sw.bb.480
  %551 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12911, !tbaa !2289
  %m_defaultHandler488 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %551, i32 0, i32 18, !dbg !12913
  %552 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler488, align 8, !dbg !12913, !tbaa !2874
  %tobool489 = icmp ne void (i8*, i8*, i32)* %552, null, !dbg !12914
  br i1 %tobool489, label %if.then.490, label %if.end.491, !dbg !12915

if.then.490:                                      ; preds = %if.else.487
  %553 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12916, !tbaa !2289
  %554 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12917, !tbaa !2289
  %555 = load i8*, i8** %s.addr, align 8, !dbg !12918, !tbaa !2289
  %556 = load i8*, i8** %next, align 8, !dbg !12919, !tbaa !2289
  call void @reportDefault(%struct.XML_ParserStruct* %553, %struct.encoding* %554, i8* %555, i8* %556), !dbg !12920
  br label %if.end.491, !dbg !12920

if.end.491:                                       ; preds = %if.then.490, %if.else.487
  br label %if.end.492

if.end.492:                                       ; preds = %if.end.491, %if.then.483
  br label %sw.epilog, !dbg !12921

sw.bb.493:                                        ; preds = %for.cond
  %557 = bitcast i32* %result494 to i8*, !dbg !12922
  call void @llvm.lifetime.start(i64 4, i8* %557) #2, !dbg !12922
  call void @llvm.dbg.declare(metadata i32* %result494, metadata !1470, metadata !2293), !dbg !12923
  %558 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12924, !tbaa !2289
  %m_startCdataSectionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %558, i32 0, i32 16, !dbg !12926
  %559 = load void (i8*)*, void (i8*)** %m_startCdataSectionHandler, align 8, !dbg !12926, !tbaa !2866
  %tobool495 = icmp ne void (i8*)* %559, null, !dbg !12927
  br i1 %tobool495, label %if.then.496, label %if.else.499, !dbg !12928

if.then.496:                                      ; preds = %sw.bb.493
  %560 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12929, !tbaa !2289
  %m_startCdataSectionHandler497 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %560, i32 0, i32 16, !dbg !12930
  %561 = load void (i8*)*, void (i8*)** %m_startCdataSectionHandler497, align 8, !dbg !12930, !tbaa !2866
  %562 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12931, !tbaa !2289
  %m_handlerArg498 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %562, i32 0, i32 1, !dbg !12932
  %563 = load i8*, i8** %m_handlerArg498, align 8, !dbg !12932, !tbaa !2842
  call void %561(i8* %563), !dbg !12933
  br label %if.end.504, !dbg !12933

if.else.499:                                      ; preds = %sw.bb.493
  %564 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12934, !tbaa !2289
  %m_defaultHandler500 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %564, i32 0, i32 18, !dbg !12936
  %565 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler500, align 8, !dbg !12936, !tbaa !2874
  %tobool501 = icmp ne void (i8*, i8*, i32)* %565, null, !dbg !12937
  br i1 %tobool501, label %if.then.502, label %if.end.503, !dbg !12938

if.then.502:                                      ; preds = %if.else.499
  %566 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12939, !tbaa !2289
  %567 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12940, !tbaa !2289
  %568 = load i8*, i8** %s.addr, align 8, !dbg !12941, !tbaa !2289
  %569 = load i8*, i8** %next, align 8, !dbg !12942, !tbaa !2289
  call void @reportDefault(%struct.XML_ParserStruct* %566, %struct.encoding* %567, i8* %568, i8* %569), !dbg !12943
  br label %if.end.503, !dbg !12943

if.end.503:                                       ; preds = %if.then.502, %if.else.499
  br label %if.end.504

if.end.504:                                       ; preds = %if.end.503, %if.then.496
  %570 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12944, !tbaa !2289
  %571 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12945, !tbaa !2289
  %572 = load i8*, i8** %end.addr, align 8, !dbg !12946, !tbaa !2289
  %573 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !12947, !tbaa !2289
  %574 = load i8, i8* %haveMore.addr, align 1, !dbg !12948, !tbaa !2307
  %call505 = call i32 @doCdataSection(%struct.XML_ParserStruct* %570, %struct.encoding* %571, i8** %next, i8* %572, i8** %573, i8 zeroext %574), !dbg !12949
  store i32 %call505, i32* %result494, align 4, !dbg !12950, !tbaa !2307
  %575 = load i32, i32* %result494, align 4, !dbg !12951, !tbaa !2307
  %cmp506 = icmp ne i32 %575, 0, !dbg !12953
  br i1 %cmp506, label %if.then.508, label %if.else.509, !dbg !12954

if.then.508:                                      ; preds = %if.end.504
  %576 = load i32, i32* %result494, align 4, !dbg !12955, !tbaa !2307
  store i32 %576, i32* %retval, !dbg !12956
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.514, !dbg !12956

if.else.509:                                      ; preds = %if.end.504
  %577 = load i8*, i8** %next, align 8, !dbg !12957, !tbaa !2289
  %tobool510 = icmp ne i8* %577, null, !dbg !12957
  br i1 %tobool510, label %if.end.512, label %if.then.511, !dbg !12959

if.then.511:                                      ; preds = %if.else.509
  %578 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12960, !tbaa !2289
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %578, i32 0, i32 45, !dbg !12962
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @cdataSectionProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8, !dbg !12963, !tbaa !2809
  %579 = load i32, i32* %result494, align 4, !dbg !12964, !tbaa !2307
  store i32 %579, i32* %retval, !dbg !12965
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.514, !dbg !12965

if.end.512:                                       ; preds = %if.else.509
  br label %if.end.513

if.end.513:                                       ; preds = %if.end.512
  store i32 0, i32* %cleanup.dest.slot, !dbg !12966
  br label %cleanup.514, !dbg !12966

cleanup.514:                                      ; preds = %if.end.513, %if.then.511, %if.then.508
  %580 = bitcast i32* %result494 to i8*, !dbg !12967
  call void @llvm.lifetime.end(i64 4, i8* %580) #2, !dbg !12967
  %cleanup.dest.515 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.515, label %cleanup.616 [
    i32 0, label %cleanup.cont.516
  ]

cleanup.cont.516:                                 ; preds = %cleanup.514
  br label %sw.epilog, !dbg !12968

sw.bb.517:                                        ; preds = %for.cond
  %581 = load i8, i8* %haveMore.addr, align 1, !dbg !12969, !tbaa !2307
  %tobool518 = icmp ne i8 %581, 0, !dbg !12969
  br i1 %tobool518, label %if.then.519, label %if.end.520, !dbg !12971

if.then.519:                                      ; preds = %sw.bb.517
  %582 = load i8*, i8** %s.addr, align 8, !dbg !12972, !tbaa !2289
  %583 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !12974, !tbaa !2289
  store i8* %582, i8** %583, align 8, !dbg !12975, !tbaa !2289
  store i32 0, i32* %retval, !dbg !12976
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.616, !dbg !12976

if.end.520:                                       ; preds = %sw.bb.517
  %584 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12977, !tbaa !2289
  %m_characterDataHandler521 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %584, i32 0, i32 13, !dbg !12978
  %585 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler521, align 8, !dbg !12978, !tbaa !2854
  %tobool522 = icmp ne void (i8*, i8*, i32)* %585, null, !dbg !12979
  br i1 %tobool522, label %if.then.523, label %if.else.543, !dbg !12980

if.then.523:                                      ; preds = %if.end.520
  %586 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12981, !tbaa !2289
  %isUtf8 = getelementptr inbounds %struct.encoding, %struct.encoding* %586, i32 0, i32 14, !dbg !12982
  %587 = load i8, i8* %isUtf8, align 1, !dbg !12982, !tbaa !6028
  %tobool524 = icmp ne i8 %587, 0, !dbg !12983
  br i1 %tobool524, label %if.else.535, label %if.then.525, !dbg !12984

if.then.525:                                      ; preds = %if.then.523
  %588 = bitcast i8** %dataPtr to i8*, !dbg !12985
  call void @llvm.lifetime.start(i64 8, i8* %588) #2, !dbg !12985
  call void @llvm.dbg.declare(metadata i8** %dataPtr, metadata !1472, metadata !2293), !dbg !12986
  %589 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12987, !tbaa !2289
  %m_dataBuf = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %589, i32 0, i32 9, !dbg !12988
  %590 = load i8*, i8** %m_dataBuf, align 8, !dbg !12988, !tbaa !2445
  store i8* %590, i8** %dataPtr, align 8, !dbg !12986, !tbaa !2289
  %591 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12989, !tbaa !2289
  %utf8Convert526 = getelementptr inbounds %struct.encoding, %struct.encoding* %591, i32 0, i32 11, !dbg !12990
  %592 = load void (%struct.encoding*, i8**, i8*, i8**, i8*)*, void (%struct.encoding*, i8**, i8*, i8**, i8*)** %utf8Convert526, align 8, !dbg !12990, !tbaa !6065
  %593 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12991, !tbaa !2289
  %594 = load i8*, i8** %end.addr, align 8, !dbg !12992, !tbaa !2289
  %595 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12993, !tbaa !2289
  %m_dataBufEnd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %595, i32 0, i32 10, !dbg !12994
  %596 = load i8*, i8** %m_dataBufEnd, align 8, !dbg !12994, !tbaa !2470
  call void %592(%struct.encoding* %593, i8** %s.addr, i8* %594, i8** %dataPtr, i8* %596), !dbg !12995
  %597 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12996, !tbaa !2289
  %m_characterDataHandler527 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %597, i32 0, i32 13, !dbg !12997
  %598 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler527, align 8, !dbg !12997, !tbaa !2854
  %599 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12998, !tbaa !2289
  %m_handlerArg528 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %599, i32 0, i32 1, !dbg !12999
  %600 = load i8*, i8** %m_handlerArg528, align 8, !dbg !12999, !tbaa !2842
  %601 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13000, !tbaa !2289
  %m_dataBuf529 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %601, i32 0, i32 9, !dbg !13001
  %602 = load i8*, i8** %m_dataBuf529, align 8, !dbg !13001, !tbaa !2445
  %603 = load i8*, i8** %dataPtr, align 8, !dbg !13002, !tbaa !2289
  %604 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13003, !tbaa !2289
  %m_dataBuf530 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %604, i32 0, i32 9, !dbg !13004
  %605 = load i8*, i8** %m_dataBuf530, align 8, !dbg !13004, !tbaa !2445
  %sub.ptr.lhs.cast531 = ptrtoint i8* %603 to i64, !dbg !13005
  %sub.ptr.rhs.cast532 = ptrtoint i8* %605 to i64, !dbg !13005
  %sub.ptr.sub533 = sub i64 %sub.ptr.lhs.cast531, %sub.ptr.rhs.cast532, !dbg !13005
  %conv534 = trunc i64 %sub.ptr.sub533 to i32, !dbg !13006
  call void %598(i8* %600, i8* %602, i32 %conv534), !dbg !13007
  %606 = bitcast i8** %dataPtr to i8*, !dbg !13008
  call void @llvm.lifetime.end(i64 8, i8* %606) #2, !dbg !13008
  br label %if.end.542, !dbg !13009

if.else.535:                                      ; preds = %if.then.523
  %607 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13010, !tbaa !2289
  %m_characterDataHandler536 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %607, i32 0, i32 13, !dbg !13011
  %608 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler536, align 8, !dbg !13011, !tbaa !2854
  %609 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13012, !tbaa !2289
  %m_handlerArg537 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %609, i32 0, i32 1, !dbg !13013
  %610 = load i8*, i8** %m_handlerArg537, align 8, !dbg !13013, !tbaa !2842
  %611 = load i8*, i8** %s.addr, align 8, !dbg !13014, !tbaa !2289
  %612 = load i8*, i8** %end.addr, align 8, !dbg !13015, !tbaa !2289
  %613 = load i8*, i8** %s.addr, align 8, !dbg !13016, !tbaa !2289
  %sub.ptr.lhs.cast538 = ptrtoint i8* %612 to i64, !dbg !13017
  %sub.ptr.rhs.cast539 = ptrtoint i8* %613 to i64, !dbg !13017
  %sub.ptr.sub540 = sub i64 %sub.ptr.lhs.cast538, %sub.ptr.rhs.cast539, !dbg !13017
  %conv541 = trunc i64 %sub.ptr.sub540 to i32, !dbg !13018
  call void %608(i8* %610, i8* %611, i32 %conv541), !dbg !13019
  br label %if.end.542

if.end.542:                                       ; preds = %if.else.535, %if.then.525
  br label %if.end.548, !dbg !13020

if.else.543:                                      ; preds = %if.end.520
  %614 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13021, !tbaa !2289
  %m_defaultHandler544 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %614, i32 0, i32 18, !dbg !13023
  %615 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler544, align 8, !dbg !13023, !tbaa !2874
  %tobool545 = icmp ne void (i8*, i8*, i32)* %615, null, !dbg !13024
  br i1 %tobool545, label %if.then.546, label %if.end.547, !dbg !13025

if.then.546:                                      ; preds = %if.else.543
  %616 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13026, !tbaa !2289
  %617 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13027, !tbaa !2289
  %618 = load i8*, i8** %s.addr, align 8, !dbg !13028, !tbaa !2289
  %619 = load i8*, i8** %end.addr, align 8, !dbg !13029, !tbaa !2289
  call void @reportDefault(%struct.XML_ParserStruct* %616, %struct.encoding* %617, i8* %618, i8* %619), !dbg !13030
  br label %if.end.547, !dbg !13030

if.end.547:                                       ; preds = %if.then.546, %if.else.543
  br label %if.end.548

if.end.548:                                       ; preds = %if.end.547, %if.end.542
  %620 = load i32, i32* %startTagLevel.addr, align 4, !dbg !13031, !tbaa !3391
  %cmp549 = icmp eq i32 %620, 0, !dbg !13033
  br i1 %cmp549, label %if.then.551, label %if.end.552, !dbg !13034

if.then.551:                                      ; preds = %if.end.548
  %621 = load i8*, i8** %end.addr, align 8, !dbg !13035, !tbaa !2289
  %622 = load i8**, i8*** %eventPP, align 8, !dbg !13037, !tbaa !2289
  store i8* %621, i8** %622, align 8, !dbg !13038, !tbaa !2289
  store i32 3, i32* %retval, !dbg !13039
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.616, !dbg !13039

if.end.552:                                       ; preds = %if.end.548
  %623 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13040, !tbaa !2289
  %m_tagLevel553 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %623, i32 0, i32 53, !dbg !13042
  %624 = load i32, i32* %m_tagLevel553, align 4, !dbg !13042, !tbaa !3025
  %625 = load i32, i32* %startTagLevel.addr, align 4, !dbg !13043, !tbaa !3391
  %cmp554 = icmp ne i32 %624, %625, !dbg !13044
  br i1 %cmp554, label %if.then.556, label %if.end.557, !dbg !13045

if.then.556:                                      ; preds = %if.end.552
  %626 = load i8*, i8** %end.addr, align 8, !dbg !13046, !tbaa !2289
  %627 = load i8**, i8*** %eventPP, align 8, !dbg !13048, !tbaa !2289
  store i8* %626, i8** %627, align 8, !dbg !13049, !tbaa !2289
  store i32 13, i32* %retval, !dbg !13050
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.616, !dbg !13050

if.end.557:                                       ; preds = %if.end.552
  %628 = load i8*, i8** %end.addr, align 8, !dbg !13051, !tbaa !2289
  %629 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !13052, !tbaa !2289
  store i8* %628, i8** %629, align 8, !dbg !13053, !tbaa !2289
  store i32 0, i32* %retval, !dbg !13054
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.616, !dbg !13054

sw.bb.558:                                        ; preds = %for.cond
  %630 = bitcast void (i8*, i8*, i32)** %charDataHandler to i8*, !dbg !13055
  call void @llvm.lifetime.start(i64 8, i8* %630) #2, !dbg !13055
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i32)** %charDataHandler, metadata !1477, metadata !2293), !dbg !13056
  %631 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13057, !tbaa !2289
  %m_characterDataHandler559 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %631, i32 0, i32 13, !dbg !13058
  %632 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler559, align 8, !dbg !13058, !tbaa !2854
  store void (i8*, i8*, i32)* %632, void (i8*, i8*, i32)** %charDataHandler, align 8, !dbg !13056, !tbaa !2289
  %633 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %charDataHandler, align 8, !dbg !13059, !tbaa !2289
  %tobool560 = icmp ne void (i8*, i8*, i32)* %633, null, !dbg !13059
  br i1 %tobool560, label %if.then.561, label %if.else.592, !dbg !13060

if.then.561:                                      ; preds = %sw.bb.558
  %634 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13061, !tbaa !2289
  %isUtf8562 = getelementptr inbounds %struct.encoding, %struct.encoding* %634, i32 0, i32 14, !dbg !13062
  %635 = load i8, i8* %isUtf8562, align 1, !dbg !13062, !tbaa !6028
  %tobool563 = icmp ne i8 %635, 0, !dbg !13063
  br i1 %tobool563, label %if.else.585, label %if.then.564, !dbg !13064

if.then.564:                                      ; preds = %if.then.561
  br label %for.cond.565, !dbg !13065

for.cond.565:                                     ; preds = %cleanup.cont.583, %if.then.564
  %636 = bitcast i8** %dataPtr566 to i8*, !dbg !13066
  call void @llvm.lifetime.start(i64 8, i8* %636) #2, !dbg !13066
  call void @llvm.dbg.declare(metadata i8** %dataPtr566, metadata !1479, metadata !2293), !dbg !13067
  %637 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13068, !tbaa !2289
  %m_dataBuf567 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %637, i32 0, i32 9, !dbg !13069
  %638 = load i8*, i8** %m_dataBuf567, align 8, !dbg !13069, !tbaa !2445
  store i8* %638, i8** %dataPtr566, align 8, !dbg !13067, !tbaa !2289
  %639 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13070, !tbaa !2289
  %utf8Convert568 = getelementptr inbounds %struct.encoding, %struct.encoding* %639, i32 0, i32 11, !dbg !13071
  %640 = load void (%struct.encoding*, i8**, i8*, i8**, i8*)*, void (%struct.encoding*, i8**, i8*, i8**, i8*)** %utf8Convert568, align 8, !dbg !13071, !tbaa !6065
  %641 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13072, !tbaa !2289
  %642 = load i8*, i8** %next, align 8, !dbg !13073, !tbaa !2289
  %643 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13074, !tbaa !2289
  %m_dataBufEnd569 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %643, i32 0, i32 10, !dbg !13075
  %644 = load i8*, i8** %m_dataBufEnd569, align 8, !dbg !13075, !tbaa !2470
  call void %640(%struct.encoding* %641, i8** %s.addr, i8* %642, i8** %dataPtr566, i8* %644), !dbg !13076
  %645 = load i8*, i8** %s.addr, align 8, !dbg !13077, !tbaa !2289
  %646 = load i8**, i8*** %eventEndPP, align 8, !dbg !13078, !tbaa !2289
  store i8* %645, i8** %646, align 8, !dbg !13079, !tbaa !2289
  %647 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %charDataHandler, align 8, !dbg !13080, !tbaa !2289
  %648 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13081, !tbaa !2289
  %m_handlerArg570 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %648, i32 0, i32 1, !dbg !13082
  %649 = load i8*, i8** %m_handlerArg570, align 8, !dbg !13082, !tbaa !2842
  %650 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13083, !tbaa !2289
  %m_dataBuf571 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %650, i32 0, i32 9, !dbg !13084
  %651 = load i8*, i8** %m_dataBuf571, align 8, !dbg !13084, !tbaa !2445
  %652 = load i8*, i8** %dataPtr566, align 8, !dbg !13085, !tbaa !2289
  %653 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13086, !tbaa !2289
  %m_dataBuf572 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %653, i32 0, i32 9, !dbg !13087
  %654 = load i8*, i8** %m_dataBuf572, align 8, !dbg !13087, !tbaa !2445
  %sub.ptr.lhs.cast573 = ptrtoint i8* %652 to i64, !dbg !13088
  %sub.ptr.rhs.cast574 = ptrtoint i8* %654 to i64, !dbg !13088
  %sub.ptr.sub575 = sub i64 %sub.ptr.lhs.cast573, %sub.ptr.rhs.cast574, !dbg !13088
  %conv576 = trunc i64 %sub.ptr.sub575 to i32, !dbg !13089
  call void %647(i8* %649, i8* %651, i32 %conv576), !dbg !13080
  %655 = load i8*, i8** %s.addr, align 8, !dbg !13090, !tbaa !2289
  %656 = load i8*, i8** %next, align 8, !dbg !13092, !tbaa !2289
  %cmp577 = icmp eq i8* %655, %656, !dbg !13093
  br i1 %cmp577, label %if.then.579, label %if.end.580, !dbg !13094

if.then.579:                                      ; preds = %for.cond.565
  store i32 15, i32* %cleanup.dest.slot
  br label %cleanup.581, !dbg !13095

if.end.580:                                       ; preds = %for.cond.565
  %657 = load i8*, i8** %s.addr, align 8, !dbg !13096, !tbaa !2289
  %658 = load i8**, i8*** %eventPP, align 8, !dbg !13097, !tbaa !2289
  store i8* %657, i8** %658, align 8, !dbg !13098, !tbaa !2289
  store i32 0, i32* %cleanup.dest.slot, !dbg !13099
  br label %cleanup.581, !dbg !13099

cleanup.581:                                      ; preds = %if.end.580, %if.then.579
  %659 = bitcast i8** %dataPtr566 to i8*, !dbg !13100
  call void @llvm.lifetime.end(i64 8, i8* %659) #2, !dbg !13100
  %cleanup.dest.582 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.582, label %unreachable [
    i32 0, label %cleanup.cont.583
    i32 15, label %for.end.584
  ]

cleanup.cont.583:                                 ; preds = %cleanup.581
  br label %for.cond.565, !dbg !13102

for.end.584:                                      ; preds = %cleanup.581
  br label %if.end.591, !dbg !13103

if.else.585:                                      ; preds = %if.then.561
  %660 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %charDataHandler, align 8, !dbg !13104, !tbaa !2289
  %661 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13105, !tbaa !2289
  %m_handlerArg586 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %661, i32 0, i32 1, !dbg !13106
  %662 = load i8*, i8** %m_handlerArg586, align 8, !dbg !13106, !tbaa !2842
  %663 = load i8*, i8** %s.addr, align 8, !dbg !13107, !tbaa !2289
  %664 = load i8*, i8** %next, align 8, !dbg !13108, !tbaa !2289
  %665 = load i8*, i8** %s.addr, align 8, !dbg !13109, !tbaa !2289
  %sub.ptr.lhs.cast587 = ptrtoint i8* %664 to i64, !dbg !13110
  %sub.ptr.rhs.cast588 = ptrtoint i8* %665 to i64, !dbg !13110
  %sub.ptr.sub589 = sub i64 %sub.ptr.lhs.cast587, %sub.ptr.rhs.cast588, !dbg !13110
  %conv590 = trunc i64 %sub.ptr.sub589 to i32, !dbg !13111
  call void %660(i8* %662, i8* %663, i32 %conv590), !dbg !13104
  br label %if.end.591

if.end.591:                                       ; preds = %if.else.585, %for.end.584
  br label %if.end.597, !dbg !13112

if.else.592:                                      ; preds = %sw.bb.558
  %666 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13113, !tbaa !2289
  %m_defaultHandler593 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %666, i32 0, i32 18, !dbg !13115
  %667 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler593, align 8, !dbg !13115, !tbaa !2874
  %tobool594 = icmp ne void (i8*, i8*, i32)* %667, null, !dbg !13116
  br i1 %tobool594, label %if.then.595, label %if.end.596, !dbg !13117

if.then.595:                                      ; preds = %if.else.592
  %668 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13118, !tbaa !2289
  %669 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13119, !tbaa !2289
  %670 = load i8*, i8** %s.addr, align 8, !dbg !13120, !tbaa !2289
  %671 = load i8*, i8** %next, align 8, !dbg !13121, !tbaa !2289
  call void @reportDefault(%struct.XML_ParserStruct* %668, %struct.encoding* %669, i8* %670, i8* %671), !dbg !13122
  br label %if.end.596, !dbg !13122

if.end.596:                                       ; preds = %if.then.595, %if.else.592
  br label %if.end.597

if.end.597:                                       ; preds = %if.end.596, %if.end.591
  %672 = bitcast void (i8*, i8*, i32)** %charDataHandler to i8*, !dbg !13123
  call void @llvm.lifetime.end(i64 8, i8* %672) #2, !dbg !13123
  br label %sw.epilog, !dbg !13124

sw.bb.598:                                        ; preds = %for.cond
  %673 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13125, !tbaa !2289
  %674 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13127, !tbaa !2289
  %675 = load i8*, i8** %s.addr, align 8, !dbg !13128, !tbaa !2289
  %676 = load i8*, i8** %next, align 8, !dbg !13129, !tbaa !2289
  %call599 = call i32 @reportProcessingInstruction(%struct.XML_ParserStruct* %673, %struct.encoding* %674, i8* %675, i8* %676), !dbg !13130
  %tobool600 = icmp ne i32 %call599, 0, !dbg !13130
  br i1 %tobool600, label %if.end.602, label %if.then.601, !dbg !13131

if.then.601:                                      ; preds = %sw.bb.598
  store i32 1, i32* %retval, !dbg !13132
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.616, !dbg !13132

if.end.602:                                       ; preds = %sw.bb.598
  br label %sw.epilog, !dbg !13133

sw.bb.603:                                        ; preds = %for.cond
  %677 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13134, !tbaa !2289
  %678 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13136, !tbaa !2289
  %679 = load i8*, i8** %s.addr, align 8, !dbg !13137, !tbaa !2289
  %680 = load i8*, i8** %next, align 8, !dbg !13138, !tbaa !2289
  %call604 = call i32 @reportComment(%struct.XML_ParserStruct* %677, %struct.encoding* %678, i8* %679, i8* %680), !dbg !13139
  %tobool605 = icmp ne i32 %call604, 0, !dbg !13139
  br i1 %tobool605, label %if.end.607, label %if.then.606, !dbg !13140

if.then.606:                                      ; preds = %sw.bb.603
  store i32 1, i32* %retval, !dbg !13141
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.616, !dbg !13141

if.end.607:                                       ; preds = %sw.bb.603
  br label %sw.epilog, !dbg !13142

sw.default:                                       ; preds = %for.cond
  %681 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13143, !tbaa !2289
  %m_defaultHandler608 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %681, i32 0, i32 18, !dbg !13145
  %682 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler608, align 8, !dbg !13145, !tbaa !2874
  %tobool609 = icmp ne void (i8*, i8*, i32)* %682, null, !dbg !13146
  br i1 %tobool609, label %if.then.610, label %if.end.611, !dbg !13147

if.then.610:                                      ; preds = %sw.default
  %683 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13148, !tbaa !2289
  %684 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13149, !tbaa !2289
  %685 = load i8*, i8** %s.addr, align 8, !dbg !13150, !tbaa !2289
  %686 = load i8*, i8** %next, align 8, !dbg !13151, !tbaa !2289
  call void @reportDefault(%struct.XML_ParserStruct* %683, %struct.encoding* %684, i8* %685, i8* %686), !dbg !13152
  br label %if.end.611, !dbg !13152

if.end.611:                                       ; preds = %if.then.610, %sw.default
  br label %sw.epilog, !dbg !13153

sw.epilog:                                        ; preds = %if.end.611, %if.end.607, %if.end.602, %if.end.597, %cleanup.cont.516, %if.end.492, %cleanup.cont.478, %if.end.455, %if.end.340, %cleanup.257, %cleanup.152
  %687 = load i8*, i8** %next, align 8, !dbg !13154, !tbaa !2289
  store i8* %687, i8** %s.addr, align 8, !dbg !13155, !tbaa !2289
  %688 = load i8**, i8*** %eventPP, align 8, !dbg !13156, !tbaa !2289
  store i8* %687, i8** %688, align 8, !dbg !13157, !tbaa !2289
  %689 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13158, !tbaa !2289
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %689, i32 0, i32 85, !dbg !13159
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0, !dbg !13160
  %690 = load i32, i32* %parsing, align 4, !dbg !13160, !tbaa !3052
  switch i32 %690, label %sw.default.614 [
    i32 3, label %sw.bb.612
    i32 2, label %sw.bb.613
  ], !dbg !13161

sw.bb.612:                                        ; preds = %sw.epilog
  %691 = load i8*, i8** %next, align 8, !dbg !13162, !tbaa !2289
  %692 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !13164, !tbaa !2289
  store i8* %691, i8** %692, align 8, !dbg !13165, !tbaa !2289
  store i32 0, i32* %retval, !dbg !13166
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.616, !dbg !13166

sw.bb.613:                                        ; preds = %sw.epilog
  store i32 35, i32* %retval, !dbg !13167
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.616, !dbg !13167

sw.default.614:                                   ; preds = %sw.epilog
  br label %sw.epilog.615, !dbg !13168

sw.epilog.615:                                    ; preds = %sw.default.614
  store i32 0, i32* %cleanup.dest.slot, !dbg !13169
  br label %cleanup.616, !dbg !13169

cleanup.616:                                      ; preds = %sw.epilog.615, %sw.bb.613, %sw.bb.612, %if.then.606, %if.then.601, %if.end.557, %if.then.556, %if.then.551, %if.then.519, %cleanup.514, %sw.bb.479, %cleanup.476, %cleanup.450, %if.then.345, %if.then.338, %cleanup.328, %cleanup.257, %cleanup.152, %if.end.37, %if.then.36, %if.end.33, %if.then.32, %sw.bb.29, %if.end.28, %if.end.27, %if.then.26, %if.then.20, %if.end.17, %if.then.16, %if.then.13, %if.then.2
  %693 = bitcast i32* %tok to i8*, !dbg !13170
  call void @llvm.lifetime.end(i64 4, i8* %693) #2, !dbg !13170
  %694 = bitcast i8** %next to i8*, !dbg !13170
  call void @llvm.lifetime.end(i64 8, i8* %694) #2, !dbg !13170
  %cleanup.dest.618 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.618, label %cleanup.620 [
    i32 0, label %cleanup.cont.619
  ]

cleanup.cont.619:                                 ; preds = %cleanup.616
  br label %for.cond, !dbg !13172

cleanup.620:                                      ; preds = %cleanup.616
  %695 = bitcast i8*** %eventEndPP to i8*, !dbg !13173
  call void @llvm.lifetime.end(i64 8, i8* %695) #2, !dbg !13173
  %696 = bitcast i8*** %eventPP to i8*, !dbg !13173
  call void @llvm.lifetime.end(i64 8, i8* %696) #2, !dbg !13173
  %697 = bitcast %struct.DTD** %dtd to i8*, !dbg !13173
  call void @llvm.lifetime.end(i64 8, i8* %697) #2, !dbg !13173
  %698 = load i32, i32* %retval, !dbg !13173
  ret i32 %698, !dbg !13173

unreachable:                                      ; preds = %cleanup.581
  unreachable
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @storeRawNames(%struct.XML_ParserStruct* %parser) #0 {
entry:
  %retval = alloca i8, align 1
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %tag = alloca %struct.tag*, align 8
  %bufSize = alloca i32, align 4
  %nameLen = alloca i32, align 4
  %rawNameBuf = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %temp = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1721, metadata !2293), !dbg !13174
  %0 = bitcast %struct.tag** %tag to i8*, !dbg !13175
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !13175
  call void @llvm.dbg.declare(metadata %struct.tag** %tag, metadata !1722, metadata !2293), !dbg !13176
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13177, !tbaa !2289
  %m_tagStack = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 67, !dbg !13178
  %2 = load %struct.tag*, %struct.tag** %m_tagStack, align 8, !dbg !13178, !tbaa !2629
  store %struct.tag* %2, %struct.tag** %tag, align 8, !dbg !13176, !tbaa !2289
  br label %while.cond, !dbg !13179

while.cond:                                       ; preds = %cleanup.cont.55, %entry
  %3 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !13180, !tbaa !2289
  %tobool = icmp ne %struct.tag* %3, null, !dbg !13179
  br i1 %tobool, label %while.body, label %while.end, !dbg !13179

while.body:                                       ; preds = %while.cond
  %4 = bitcast i32* %bufSize to i8*, !dbg !13183
  call void @llvm.lifetime.start(i64 4, i8* %4) #2, !dbg !13183
  call void @llvm.dbg.declare(metadata i32* %bufSize, metadata !1723, metadata !2293), !dbg !13184
  %5 = bitcast i32* %nameLen to i8*, !dbg !13185
  call void @llvm.lifetime.start(i64 4, i8* %5) #2, !dbg !13185
  call void @llvm.dbg.declare(metadata i32* %nameLen, metadata !1725, metadata !2293), !dbg !13186
  %6 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !13187, !tbaa !2289
  %name = getelementptr inbounds %struct.tag, %struct.tag* %6, i32 0, i32 3, !dbg !13188
  %strLen = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name, i32 0, i32 3, !dbg !13189
  %7 = load i32, i32* %strLen, align 4, !dbg !13189, !tbaa !12367
  %add = add i32 %7, 1, !dbg !13190
  %conv = sext i32 %add to i64, !dbg !13191
  %mul = mul i64 1, %conv, !dbg !13192
  %conv1 = trunc i64 %mul to i32, !dbg !13193
  store i32 %conv1, i32* %nameLen, align 4, !dbg !13186, !tbaa !3391
  %8 = bitcast i8** %rawNameBuf to i8*, !dbg !13194
  call void @llvm.lifetime.start(i64 8, i8* %8) #2, !dbg !13194
  call void @llvm.dbg.declare(metadata i8** %rawNameBuf, metadata !1726, metadata !2293), !dbg !13195
  %9 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !13196, !tbaa !2289
  %buf = getelementptr inbounds %struct.tag, %struct.tag* %9, i32 0, i32 4, !dbg !13197
  %10 = load i8*, i8** %buf, align 8, !dbg !13197, !tbaa !4374
  %11 = load i32, i32* %nameLen, align 4, !dbg !13198, !tbaa !3391
  %idx.ext = sext i32 %11 to i64, !dbg !13199
  %add.ptr = getelementptr i8, i8* %10, i64 %idx.ext, !dbg !13199
  store i8* %add.ptr, i8** %rawNameBuf, align 8, !dbg !13195, !tbaa !2289
  %12 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !13200, !tbaa !2289
  %rawName = getelementptr inbounds %struct.tag, %struct.tag* %12, i32 0, i32 1, !dbg !13202
  %13 = load i8*, i8** %rawName, align 8, !dbg !13202, !tbaa !12309
  %14 = load i8*, i8** %rawNameBuf, align 8, !dbg !13203, !tbaa !2289
  %cmp = icmp eq i8* %13, %14, !dbg !13204
  br i1 %cmp, label %if.then, label %if.end, !dbg !13205

if.then:                                          ; preds = %while.body
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup.51, !dbg !13206

if.end:                                           ; preds = %while.body
  %15 = load i32, i32* %nameLen, align 4, !dbg !13207, !tbaa !3391
  %conv3 = sext i32 %15 to i64, !dbg !13207
  %16 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !13208, !tbaa !2289
  %rawNameLength = getelementptr inbounds %struct.tag, %struct.tag* %16, i32 0, i32 2, !dbg !13209
  %17 = load i32, i32* %rawNameLength, align 4, !dbg !13209, !tbaa !12319
  %conv4 = sext i32 %17 to i64, !dbg !13210
  %add5 = add i64 %conv4, 0, !dbg !13211
  %add6 = add i64 %conv3, %add5, !dbg !13212
  %conv7 = trunc i64 %add6 to i32, !dbg !13207
  store i32 %conv7, i32* %bufSize, align 4, !dbg !13213, !tbaa !3391
  %18 = load i32, i32* %bufSize, align 4, !dbg !13214, !tbaa !3391
  %conv8 = sext i32 %18 to i64, !dbg !13214
  %19 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !13215, !tbaa !2289
  %bufEnd = getelementptr inbounds %struct.tag, %struct.tag* %19, i32 0, i32 5, !dbg !13216
  %20 = load i8*, i8** %bufEnd, align 8, !dbg !13216, !tbaa !12279
  %21 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !13217, !tbaa !2289
  %buf9 = getelementptr inbounds %struct.tag, %struct.tag* %21, i32 0, i32 4, !dbg !13218
  %22 = load i8*, i8** %buf9, align 8, !dbg !13218, !tbaa !4374
  %sub.ptr.lhs.cast = ptrtoint i8* %20 to i64, !dbg !13219
  %sub.ptr.rhs.cast = ptrtoint i8* %22 to i64, !dbg !13219
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !13219
  %cmp10 = icmp sgt i64 %conv8, %sub.ptr.sub, !dbg !13220
  br i1 %cmp10, label %if.then.12, label %if.end.46, !dbg !13221

if.then.12:                                       ; preds = %if.end
  %23 = bitcast i8** %temp to i8*, !dbg !13222
  call void @llvm.lifetime.start(i64 8, i8* %23) #2, !dbg !13222
  call void @llvm.dbg.declare(metadata i8** %temp, metadata !1727, metadata !2293), !dbg !13223
  %24 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13224, !tbaa !2289
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %24, i32 0, i32 3, !dbg !13225
  %realloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 1, !dbg !13226
  %25 = load i8* (i8*, i64)*, i8* (i8*, i64)** %realloc_fcn, align 8, !dbg !13226, !tbaa !5977
  %26 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !13227, !tbaa !2289
  %buf13 = getelementptr inbounds %struct.tag, %struct.tag* %26, i32 0, i32 4, !dbg !13228
  %27 = load i8*, i8** %buf13, align 8, !dbg !13228, !tbaa !4374
  %28 = load i32, i32* %bufSize, align 4, !dbg !13229, !tbaa !3391
  %conv14 = sext i32 %28 to i64, !dbg !13230
  %call = call i8* %25(i8* %27, i64 %conv14), !dbg !13224
  store i8* %call, i8** %temp, align 8, !dbg !13223, !tbaa !2289
  %29 = load i8*, i8** %temp, align 8, !dbg !13231, !tbaa !2289
  %cmp15 = icmp eq i8* %29, null, !dbg !13233
  br i1 %cmp15, label %if.then.17, label %if.end.18, !dbg !13234

if.then.17:                                       ; preds = %if.then.12
  store i8 0, i8* %retval, !dbg !13235
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13235

if.end.18:                                        ; preds = %if.then.12
  %30 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !13236, !tbaa !2289
  %name19 = getelementptr inbounds %struct.tag, %struct.tag* %30, i32 0, i32 3, !dbg !13238
  %str = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name19, i32 0, i32 0, !dbg !13239
  %31 = load i8*, i8** %str, align 8, !dbg !13239, !tbaa !12421
  %32 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !13240, !tbaa !2289
  %buf20 = getelementptr inbounds %struct.tag, %struct.tag* %32, i32 0, i32 4, !dbg !13241
  %33 = load i8*, i8** %buf20, align 8, !dbg !13241, !tbaa !4374
  %cmp21 = icmp eq i8* %31, %33, !dbg !13242
  br i1 %cmp21, label %if.then.23, label %if.end.26, !dbg !13243

if.then.23:                                       ; preds = %if.end.18
  %34 = load i8*, i8** %temp, align 8, !dbg !13244, !tbaa !2289
  %35 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !13245, !tbaa !2289
  %name24 = getelementptr inbounds %struct.tag, %struct.tag* %35, i32 0, i32 3, !dbg !13246
  %str25 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name24, i32 0, i32 0, !dbg !13247
  store i8* %34, i8** %str25, align 8, !dbg !13248, !tbaa !12421
  br label %if.end.26, !dbg !13245

if.end.26:                                        ; preds = %if.then.23, %if.end.18
  %36 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !13249, !tbaa !2289
  %name27 = getelementptr inbounds %struct.tag, %struct.tag* %36, i32 0, i32 3, !dbg !13251
  %localPart = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name27, i32 0, i32 1, !dbg !13252
  %37 = load i8*, i8** %localPart, align 8, !dbg !13252, !tbaa !12296
  %tobool28 = icmp ne i8* %37, null, !dbg !13249
  br i1 %tobool28, label %if.then.29, label %if.end.39, !dbg !13253

if.then.29:                                       ; preds = %if.end.26
  %38 = load i8*, i8** %temp, align 8, !dbg !13254, !tbaa !2289
  %39 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !13255, !tbaa !2289
  %name30 = getelementptr inbounds %struct.tag, %struct.tag* %39, i32 0, i32 3, !dbg !13256
  %localPart31 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name30, i32 0, i32 1, !dbg !13257
  %40 = load i8*, i8** %localPart31, align 8, !dbg !13257, !tbaa !12296
  %41 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !13258, !tbaa !2289
  %buf32 = getelementptr inbounds %struct.tag, %struct.tag* %41, i32 0, i32 4, !dbg !13259
  %42 = load i8*, i8** %buf32, align 8, !dbg !13259, !tbaa !4374
  %sub.ptr.lhs.cast33 = ptrtoint i8* %40 to i64, !dbg !13260
  %sub.ptr.rhs.cast34 = ptrtoint i8* %42 to i64, !dbg !13260
  %sub.ptr.sub35 = sub i64 %sub.ptr.lhs.cast33, %sub.ptr.rhs.cast34, !dbg !13260
  %add.ptr36 = getelementptr i8, i8* %38, i64 %sub.ptr.sub35, !dbg !13261
  %43 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !13262, !tbaa !2289
  %name37 = getelementptr inbounds %struct.tag, %struct.tag* %43, i32 0, i32 3, !dbg !13263
  %localPart38 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name37, i32 0, i32 1, !dbg !13264
  store i8* %add.ptr36, i8** %localPart38, align 8, !dbg !13265, !tbaa !12296
  br label %if.end.39, !dbg !13262

if.end.39:                                        ; preds = %if.then.29, %if.end.26
  %44 = load i8*, i8** %temp, align 8, !dbg !13266, !tbaa !2289
  %45 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !13267, !tbaa !2289
  %buf40 = getelementptr inbounds %struct.tag, %struct.tag* %45, i32 0, i32 4, !dbg !13268
  store i8* %44, i8** %buf40, align 8, !dbg !13269, !tbaa !4374
  %46 = load i8*, i8** %temp, align 8, !dbg !13270, !tbaa !2289
  %47 = load i32, i32* %bufSize, align 4, !dbg !13271, !tbaa !3391
  %idx.ext41 = sext i32 %47 to i64, !dbg !13272
  %add.ptr42 = getelementptr i8, i8* %46, i64 %idx.ext41, !dbg !13272
  %48 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !13273, !tbaa !2289
  %bufEnd43 = getelementptr inbounds %struct.tag, %struct.tag* %48, i32 0, i32 5, !dbg !13274
  store i8* %add.ptr42, i8** %bufEnd43, align 8, !dbg !13275, !tbaa !12279
  %49 = load i8*, i8** %temp, align 8, !dbg !13276, !tbaa !2289
  %50 = load i32, i32* %nameLen, align 4, !dbg !13277, !tbaa !3391
  %idx.ext44 = sext i32 %50 to i64, !dbg !13278
  %add.ptr45 = getelementptr i8, i8* %49, i64 %idx.ext44, !dbg !13278
  store i8* %add.ptr45, i8** %rawNameBuf, align 8, !dbg !13279, !tbaa !2289
  store i32 0, i32* %cleanup.dest.slot, !dbg !13280
  br label %cleanup, !dbg !13280

cleanup:                                          ; preds = %if.end.39, %if.then.17
  %51 = bitcast i8** %temp to i8*, !dbg !13281
  call void @llvm.lifetime.end(i64 8, i8* %51) #2, !dbg !13281
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.51 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.46, !dbg !13283

if.end.46:                                        ; preds = %cleanup.cont, %if.end
  %52 = load i8*, i8** %rawNameBuf, align 8, !dbg !13284, !tbaa !2289
  %53 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !13285, !tbaa !2289
  %rawName47 = getelementptr inbounds %struct.tag, %struct.tag* %53, i32 0, i32 1, !dbg !13286
  %54 = load i8*, i8** %rawName47, align 8, !dbg !13286, !tbaa !12309
  %55 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !13287, !tbaa !2289
  %rawNameLength48 = getelementptr inbounds %struct.tag, %struct.tag* %55, i32 0, i32 2, !dbg !13288
  %56 = load i32, i32* %rawNameLength48, align 4, !dbg !13288, !tbaa !12319
  %conv49 = sext i32 %56 to i64, !dbg !13287
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %54, i64 %conv49, i32 1, i1 false), !dbg !13289
  %57 = load i8*, i8** %rawNameBuf, align 8, !dbg !13290, !tbaa !2289
  %58 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !13291, !tbaa !2289
  %rawName50 = getelementptr inbounds %struct.tag, %struct.tag* %58, i32 0, i32 1, !dbg !13292
  store i8* %57, i8** %rawName50, align 8, !dbg !13293, !tbaa !12309
  %59 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !13294, !tbaa !2289
  %parent = getelementptr inbounds %struct.tag, %struct.tag* %59, i32 0, i32 0, !dbg !13295
  %60 = load %struct.tag*, %struct.tag** %parent, align 8, !dbg !13295, !tbaa !2640
  store %struct.tag* %60, %struct.tag** %tag, align 8, !dbg !13296, !tbaa !2289
  store i32 0, i32* %cleanup.dest.slot, !dbg !13297
  br label %cleanup.51, !dbg !13297

cleanup.51:                                       ; preds = %if.end.46, %cleanup, %if.then
  %61 = bitcast i8** %rawNameBuf to i8*, !dbg !13298
  call void @llvm.lifetime.end(i64 8, i8* %61) #2, !dbg !13298
  %62 = bitcast i32* %nameLen to i8*, !dbg !13298
  call void @llvm.lifetime.end(i64 4, i8* %62) #2, !dbg !13298
  %63 = bitcast i32* %bufSize to i8*, !dbg !13298
  call void @llvm.lifetime.end(i64 4, i8* %63) #2, !dbg !13298
  %cleanup.dest.54 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.54, label %cleanup.56 [
    i32 0, label %cleanup.cont.55
    i32 3, label %while.end
  ]

cleanup.cont.55:                                  ; preds = %cleanup.51
  br label %while.cond, !dbg !13179

while.end:                                        ; preds = %cleanup.51, %while.cond
  store i8 1, i8* %retval, !dbg !13299
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.56, !dbg !13299

cleanup.56:                                       ; preds = %while.end, %cleanup.51
  %64 = bitcast %struct.tag** %tag to i8*, !dbg !13300
  call void @llvm.lifetime.end(i64 8, i8* %64) #2, !dbg !13300
  %65 = load i8, i8* %retval, !dbg !13300
  ret i8 %65, !dbg !13300
}

; Function Attrs: nounwind uwtable
define internal i8* @getContext(%struct.XML_ParserStruct* %parser) #0 {
entry:
  %retval = alloca i8*, align 8
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %dtd = alloca %struct.DTD*, align 8
  %iter = alloca %struct.HASH_TABLE_ITER, align 8
  %needSep = alloca i8, align 1
  %i = alloca i32, align 4
  %len = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %i34 = alloca i32, align 4
  %len35 = alloca i32, align 4
  %s = alloca i8*, align 8
  %prefix = alloca %struct.prefix*, align 8
  %s146 = alloca i8*, align 8
  %e = alloca %struct.ENTITY*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1489, metadata !2293), !dbg !13301
  %0 = bitcast %struct.DTD** %dtd to i8*, !dbg !13302
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !13302
  call void @llvm.dbg.declare(metadata %struct.DTD** %dtd, metadata !1490, metadata !2293), !dbg !13303
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13304, !tbaa !2289
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 65, !dbg !13305
  %2 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !13305, !tbaa !2478
  store %struct.DTD* %2, %struct.DTD** %dtd, align 8, !dbg !13303, !tbaa !2289
  %3 = bitcast %struct.HASH_TABLE_ITER* %iter to i8*, !dbg !13306
  call void @llvm.lifetime.start(i64 16, i8* %3) #2, !dbg !13306
  call void @llvm.dbg.declare(metadata %struct.HASH_TABLE_ITER* %iter, metadata !1491, metadata !2293), !dbg !13307
  call void @llvm.lifetime.start(i64 1, i8* %needSep) #2, !dbg !13308
  call void @llvm.dbg.declare(metadata i8* %needSep, metadata !1497, metadata !2293), !dbg !13309
  store i8 0, i8* %needSep, align 1, !dbg !13309, !tbaa !2307
  %4 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !13310, !tbaa !2289
  %defaultPrefix = getelementptr inbounds %struct.DTD, %struct.DTD* %4, i32 0, i32 11, !dbg !13311
  %binding = getelementptr inbounds %struct.prefix, %struct.prefix* %defaultPrefix, i32 0, i32 1, !dbg !13312
  %5 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !13312, !tbaa !3139
  %tobool = icmp ne %struct.binding* %5, null, !dbg !13310
  br i1 %tobool, label %if.then, label %if.end.32, !dbg !13313

if.then:                                          ; preds = %entry
  %6 = bitcast i32* %i to i8*, !dbg !13314
  call void @llvm.lifetime.start(i64 4, i8* %6) #2, !dbg !13314
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1498, metadata !2293), !dbg !13315
  %7 = bitcast i32* %len to i8*, !dbg !13316
  call void @llvm.lifetime.start(i64 4, i8* %7) #2, !dbg !13316
  call void @llvm.dbg.declare(metadata i32* %len, metadata !1501, metadata !2293), !dbg !13317
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13318, !tbaa !2289
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 79, !dbg !13320
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool, i32 0, i32 3, !dbg !13321
  %9 = load i8*, i8** %ptr, align 8, !dbg !13321, !tbaa !2798
  %10 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13322, !tbaa !2289
  %m_tempPool1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %10, i32 0, i32 79, !dbg !13323
  %end = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool1, i32 0, i32 2, !dbg !13324
  %11 = load i8*, i8** %end, align 8, !dbg !13324, !tbaa !2802
  %cmp = icmp eq i8* %9, %11, !dbg !13325
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !13326

land.lhs.true:                                    ; preds = %if.then
  %12 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13327, !tbaa !2289
  %m_tempPool2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %12, i32 0, i32 79, !dbg !13329
  %call = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool2), !dbg !13330
  %tobool3 = icmp ne i8 %call, 0, !dbg !13330
  br i1 %tobool3, label %cond.false, label %cond.true, !dbg !13331

cond.true:                                        ; preds = %land.lhs.true
  br i1 false, label %if.end, label %if.then.6, !dbg !13332

cond.false:                                       ; preds = %land.lhs.true, %if.then
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13334, !tbaa !2289
  %m_tempPool4 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 79, !dbg !13337
  %ptr5 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool4, i32 0, i32 3, !dbg !13338
  %14 = load i8*, i8** %ptr5, align 8, !dbg !13339, !tbaa !2798
  %incdec.ptr = getelementptr i8, i8* %14, i32 1, !dbg !13339
  store i8* %incdec.ptr, i8** %ptr5, align 8, !dbg !13339, !tbaa !2798
  store i8 61, i8* %14, align 1, !dbg !13340, !tbaa !2307
  br i1 true, label %if.end, label %if.then.6, !dbg !13331

if.then.6:                                        ; preds = %cond.false, %cond.true
  store i8* null, i8** %retval, !dbg !13341
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13341

if.end:                                           ; preds = %cond.false, %cond.true
  %15 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !13342, !tbaa !2289
  %defaultPrefix7 = getelementptr inbounds %struct.DTD, %struct.DTD* %15, i32 0, i32 11, !dbg !13343
  %binding8 = getelementptr inbounds %struct.prefix, %struct.prefix* %defaultPrefix7, i32 0, i32 1, !dbg !13344
  %16 = load %struct.binding*, %struct.binding** %binding8, align 8, !dbg !13344, !tbaa !3139
  %uriLen = getelementptr inbounds %struct.binding, %struct.binding* %16, i32 0, i32 5, !dbg !13345
  %17 = load i32, i32* %uriLen, align 4, !dbg !13345, !tbaa !13346
  store i32 %17, i32* %len, align 4, !dbg !13347, !tbaa !3391
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13348, !tbaa !2289
  %m_namespaceSeparator = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 83, !dbg !13350
  %19 = load i8, i8* %m_namespaceSeparator, align 1, !dbg !13350, !tbaa !2541
  %tobool9 = icmp ne i8 %19, 0, !dbg !13351
  br i1 %tobool9, label %if.then.10, label %if.end.11, !dbg !13352

if.then.10:                                       ; preds = %if.end
  %20 = load i32, i32* %len, align 4, !dbg !13353, !tbaa !3391
  %dec = add i32 %20, -1, !dbg !13353
  store i32 %dec, i32* %len, align 4, !dbg !13353, !tbaa !3391
  br label %if.end.11, !dbg !13354

if.end.11:                                        ; preds = %if.then.10, %if.end
  store i32 0, i32* %i, align 4, !dbg !13355, !tbaa !3391
  br label %for.cond, !dbg !13357

for.cond:                                         ; preds = %for.inc, %if.end.11
  %21 = load i32, i32* %i, align 4, !dbg !13358, !tbaa !3391
  %22 = load i32, i32* %len, align 4, !dbg !13362, !tbaa !3391
  %cmp12 = icmp slt i32 %21, %22, !dbg !13363
  br i1 %cmp12, label %for.body, label %for.end, !dbg !13364

for.body:                                         ; preds = %for.cond
  %23 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13365, !tbaa !2289
  %m_tempPool13 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %23, i32 0, i32 79, !dbg !13367
  %ptr14 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool13, i32 0, i32 3, !dbg !13368
  %24 = load i8*, i8** %ptr14, align 8, !dbg !13368, !tbaa !2798
  %25 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13369, !tbaa !2289
  %m_tempPool15 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %25, i32 0, i32 79, !dbg !13370
  %end16 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool15, i32 0, i32 2, !dbg !13371
  %26 = load i8*, i8** %end16, align 8, !dbg !13371, !tbaa !2802
  %cmp17 = icmp eq i8* %24, %26, !dbg !13372
  br i1 %cmp17, label %land.lhs.true.18, label %cond.false.23, !dbg !13373

land.lhs.true.18:                                 ; preds = %for.body
  %27 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13374, !tbaa !2289
  %m_tempPool19 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %27, i32 0, i32 79, !dbg !13376
  %call20 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool19), !dbg !13377
  %tobool21 = icmp ne i8 %call20, 0, !dbg !13377
  br i1 %tobool21, label %cond.false.23, label %cond.true.22, !dbg !13378

cond.true.22:                                     ; preds = %land.lhs.true.18
  br i1 false, label %if.end.30, label %if.then.29, !dbg !13379

cond.false.23:                                    ; preds = %land.lhs.true.18, %for.body
  %28 = load i32, i32* %i, align 4, !dbg !13381, !tbaa !3391
  %idxprom = sext i32 %28 to i64, !dbg !13384
  %29 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !13384, !tbaa !2289
  %defaultPrefix24 = getelementptr inbounds %struct.DTD, %struct.DTD* %29, i32 0, i32 11, !dbg !13385
  %binding25 = getelementptr inbounds %struct.prefix, %struct.prefix* %defaultPrefix24, i32 0, i32 1, !dbg !13386
  %30 = load %struct.binding*, %struct.binding** %binding25, align 8, !dbg !13386, !tbaa !3139
  %uri = getelementptr inbounds %struct.binding, %struct.binding* %30, i32 0, i32 4, !dbg !13387
  %31 = load i8*, i8** %uri, align 8, !dbg !13387, !tbaa !4596
  %arrayidx = getelementptr i8, i8* %31, i64 %idxprom, !dbg !13384
  %32 = load i8, i8* %arrayidx, align 1, !dbg !13384, !tbaa !2307
  %33 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13388, !tbaa !2289
  %m_tempPool26 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %33, i32 0, i32 79, !dbg !13389
  %ptr27 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool26, i32 0, i32 3, !dbg !13390
  %34 = load i8*, i8** %ptr27, align 8, !dbg !13391, !tbaa !2798
  %incdec.ptr28 = getelementptr i8, i8* %34, i32 1, !dbg !13391
  store i8* %incdec.ptr28, i8** %ptr27, align 8, !dbg !13391, !tbaa !2798
  store i8 %32, i8* %34, align 1, !dbg !13392, !tbaa !2307
  br i1 true, label %if.end.30, label %if.then.29, !dbg !13378

if.then.29:                                       ; preds = %cond.false.23, %cond.true.22
  store i8* null, i8** %retval, !dbg !13393
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13393

if.end.30:                                        ; preds = %cond.false.23, %cond.true.22
  br label %for.inc, !dbg !13394

for.inc:                                          ; preds = %if.end.30
  %35 = load i32, i32* %i, align 4, !dbg !13397, !tbaa !3391
  %inc = add i32 %35, 1, !dbg !13397
  store i32 %inc, i32* %i, align 4, !dbg !13397, !tbaa !3391
  br label %for.cond, !dbg !13398

for.end:                                          ; preds = %for.cond
  store i8 1, i8* %needSep, align 1, !dbg !13399, !tbaa !2307
  store i32 0, i32* %cleanup.dest.slot, !dbg !13400
  br label %cleanup, !dbg !13400

cleanup:                                          ; preds = %for.end, %if.then.29, %if.then.6
  %36 = bitcast i32* %len to i8*, !dbg !13401
  call void @llvm.lifetime.end(i64 4, i8* %36) #2, !dbg !13401
  %37 = bitcast i32* %i to i8*, !dbg !13401
  call void @llvm.lifetime.end(i64 4, i8* %37) #2, !dbg !13401
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.221 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.32, !dbg !13403

if.end.32:                                        ; preds = %cleanup.cont, %entry
  %38 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !13404, !tbaa !2289
  %prefixes = getelementptr inbounds %struct.DTD, %struct.DTD* %38, i32 0, i32 3, !dbg !13405
  call void @hashTableIterInit(%struct.HASH_TABLE_ITER* %iter, %struct.HASH_TABLE* %prefixes), !dbg !13406
  br label %for.cond.33, !dbg !13407

for.cond.33:                                      ; preds = %cleanup.cont.143, %cleanup.138, %if.end.32
  %39 = bitcast i32* %i34 to i8*, !dbg !13408
  call void @llvm.lifetime.start(i64 4, i8* %39) #2, !dbg !13408
  call void @llvm.dbg.declare(metadata i32* %i34, metadata !1502, metadata !2293), !dbg !13409
  %40 = bitcast i32* %len35 to i8*, !dbg !13410
  call void @llvm.lifetime.start(i64 4, i8* %40) #2, !dbg !13410
  call void @llvm.dbg.declare(metadata i32* %len35, metadata !1506, metadata !2293), !dbg !13411
  %41 = bitcast i8** %s to i8*, !dbg !13412
  call void @llvm.lifetime.start(i64 8, i8* %41) #2, !dbg !13412
  call void @llvm.dbg.declare(metadata i8** %s, metadata !1507, metadata !2293), !dbg !13413
  %42 = bitcast %struct.prefix** %prefix to i8*, !dbg !13414
  call void @llvm.lifetime.start(i64 8, i8* %42) #2, !dbg !13414
  call void @llvm.dbg.declare(metadata %struct.prefix** %prefix, metadata !1508, metadata !2293), !dbg !13415
  %call36 = call %struct.NAMED* @hashTableIterNext(%struct.HASH_TABLE_ITER* %iter), !dbg !13416
  %43 = bitcast %struct.NAMED* %call36 to %struct.prefix*, !dbg !13417
  store %struct.prefix* %43, %struct.prefix** %prefix, align 8, !dbg !13415, !tbaa !2289
  %44 = load %struct.prefix*, %struct.prefix** %prefix, align 8, !dbg !13418, !tbaa !2289
  %tobool37 = icmp ne %struct.prefix* %44, null, !dbg !13418
  br i1 %tobool37, label %if.end.39, label %if.then.38, !dbg !13420

if.then.38:                                       ; preds = %for.cond.33
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup.138, !dbg !13421

if.end.39:                                        ; preds = %for.cond.33
  %45 = load %struct.prefix*, %struct.prefix** %prefix, align 8, !dbg !13422, !tbaa !2289
  %binding40 = getelementptr inbounds %struct.prefix, %struct.prefix* %45, i32 0, i32 1, !dbg !13424
  %46 = load %struct.binding*, %struct.binding** %binding40, align 8, !dbg !13424, !tbaa !12624
  %tobool41 = icmp ne %struct.binding* %46, null, !dbg !13422
  br i1 %tobool41, label %if.end.43, label %if.then.42, !dbg !13425

if.then.42:                                       ; preds = %if.end.39
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.138, !dbg !13426

if.end.43:                                        ; preds = %if.end.39
  %47 = load i8, i8* %needSep, align 1, !dbg !13427, !tbaa !2307
  %conv = zext i8 %47 to i32, !dbg !13427
  %tobool44 = icmp ne i32 %conv, 0, !dbg !13427
  br i1 %tobool44, label %land.lhs.true.45, label %if.end.62, !dbg !13429

land.lhs.true.45:                                 ; preds = %if.end.43
  %48 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13430, !tbaa !2289
  %m_tempPool46 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %48, i32 0, i32 79, !dbg !13432
  %ptr47 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool46, i32 0, i32 3, !dbg !13433
  %49 = load i8*, i8** %ptr47, align 8, !dbg !13433, !tbaa !2798
  %50 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13434, !tbaa !2289
  %m_tempPool48 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %50, i32 0, i32 79, !dbg !13435
  %end49 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool48, i32 0, i32 2, !dbg !13436
  %51 = load i8*, i8** %end49, align 8, !dbg !13436, !tbaa !2802
  %cmp50 = icmp eq i8* %49, %51, !dbg !13437
  br i1 %cmp50, label %land.lhs.true.52, label %cond.false.57, !dbg !13438

land.lhs.true.52:                                 ; preds = %land.lhs.true.45
  %52 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13439, !tbaa !2289
  %m_tempPool53 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %52, i32 0, i32 79, !dbg !13441
  %call54 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool53), !dbg !13442
  %tobool55 = icmp ne i8 %call54, 0, !dbg !13442
  br i1 %tobool55, label %cond.false.57, label %cond.true.56, !dbg !13443

cond.true.56:                                     ; preds = %land.lhs.true.52
  br i1 false, label %if.end.62, label %if.then.61, !dbg !13444

cond.false.57:                                    ; preds = %land.lhs.true.52, %land.lhs.true.45
  %53 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13446, !tbaa !2289
  %m_tempPool58 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %53, i32 0, i32 79, !dbg !13449
  %ptr59 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool58, i32 0, i32 3, !dbg !13450
  %54 = load i8*, i8** %ptr59, align 8, !dbg !13451, !tbaa !2798
  %incdec.ptr60 = getelementptr i8, i8* %54, i32 1, !dbg !13451
  store i8* %incdec.ptr60, i8** %ptr59, align 8, !dbg !13451, !tbaa !2798
  store i8 12, i8* %54, align 1, !dbg !13452, !tbaa !2307
  br i1 true, label %if.end.62, label %if.then.61, !dbg !13443

if.then.61:                                       ; preds = %cond.false.57, %cond.true.56
  store i8* null, i8** %retval, !dbg !13453
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.138, !dbg !13453

if.end.62:                                        ; preds = %cond.false.57, %cond.true.56, %if.end.43
  %55 = load %struct.prefix*, %struct.prefix** %prefix, align 8, !dbg !13454, !tbaa !2289
  %name = getelementptr inbounds %struct.prefix, %struct.prefix* %55, i32 0, i32 0, !dbg !13456
  %56 = load i8*, i8** %name, align 8, !dbg !13456, !tbaa !3638
  store i8* %56, i8** %s, align 8, !dbg !13457, !tbaa !2289
  br label %for.cond.63, !dbg !13458

for.cond.63:                                      ; preds = %for.inc.83, %if.end.62
  %57 = load i8*, i8** %s, align 8, !dbg !13459, !tbaa !2289
  %58 = load i8, i8* %57, align 1, !dbg !13463, !tbaa !2307
  %tobool64 = icmp ne i8 %58, 0, !dbg !13464
  br i1 %tobool64, label %for.body.65, label %for.end.85, !dbg !13464

for.body.65:                                      ; preds = %for.cond.63
  %59 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13465, !tbaa !2289
  %m_tempPool66 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %59, i32 0, i32 79, !dbg !13467
  %ptr67 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool66, i32 0, i32 3, !dbg !13468
  %60 = load i8*, i8** %ptr67, align 8, !dbg !13468, !tbaa !2798
  %61 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13469, !tbaa !2289
  %m_tempPool68 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %61, i32 0, i32 79, !dbg !13470
  %end69 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool68, i32 0, i32 2, !dbg !13471
  %62 = load i8*, i8** %end69, align 8, !dbg !13471, !tbaa !2802
  %cmp70 = icmp eq i8* %60, %62, !dbg !13472
  br i1 %cmp70, label %land.lhs.true.72, label %cond.false.77, !dbg !13473

land.lhs.true.72:                                 ; preds = %for.body.65
  %63 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13474, !tbaa !2289
  %m_tempPool73 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %63, i32 0, i32 79, !dbg !13476
  %call74 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool73), !dbg !13477
  %tobool75 = icmp ne i8 %call74, 0, !dbg !13477
  br i1 %tobool75, label %cond.false.77, label %cond.true.76, !dbg !13478

cond.true.76:                                     ; preds = %land.lhs.true.72
  br i1 false, label %if.end.82, label %if.then.81, !dbg !13479

cond.false.77:                                    ; preds = %land.lhs.true.72, %for.body.65
  %64 = load i8*, i8** %s, align 8, !dbg !13481, !tbaa !2289
  %65 = load i8, i8* %64, align 1, !dbg !13484, !tbaa !2307
  %66 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13485, !tbaa !2289
  %m_tempPool78 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %66, i32 0, i32 79, !dbg !13486
  %ptr79 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool78, i32 0, i32 3, !dbg !13487
  %67 = load i8*, i8** %ptr79, align 8, !dbg !13488, !tbaa !2798
  %incdec.ptr80 = getelementptr i8, i8* %67, i32 1, !dbg !13488
  store i8* %incdec.ptr80, i8** %ptr79, align 8, !dbg !13488, !tbaa !2798
  store i8 %65, i8* %67, align 1, !dbg !13489, !tbaa !2307
  br i1 true, label %if.end.82, label %if.then.81, !dbg !13478

if.then.81:                                       ; preds = %cond.false.77, %cond.true.76
  store i8* null, i8** %retval, !dbg !13490
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.138, !dbg !13490

if.end.82:                                        ; preds = %cond.false.77, %cond.true.76
  br label %for.inc.83, !dbg !13491

for.inc.83:                                       ; preds = %if.end.82
  %68 = load i8*, i8** %s, align 8, !dbg !13494, !tbaa !2289
  %incdec.ptr84 = getelementptr i8, i8* %68, i32 1, !dbg !13494
  store i8* %incdec.ptr84, i8** %s, align 8, !dbg !13494, !tbaa !2289
  br label %for.cond.63, !dbg !13495

for.end.85:                                       ; preds = %for.cond.63
  %69 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13496, !tbaa !2289
  %m_tempPool86 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %69, i32 0, i32 79, !dbg !13498
  %ptr87 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool86, i32 0, i32 3, !dbg !13499
  %70 = load i8*, i8** %ptr87, align 8, !dbg !13499, !tbaa !2798
  %71 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13500, !tbaa !2289
  %m_tempPool88 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %71, i32 0, i32 79, !dbg !13501
  %end89 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool88, i32 0, i32 2, !dbg !13502
  %72 = load i8*, i8** %end89, align 8, !dbg !13502, !tbaa !2802
  %cmp90 = icmp eq i8* %70, %72, !dbg !13503
  br i1 %cmp90, label %land.lhs.true.92, label %cond.false.97, !dbg !13504

land.lhs.true.92:                                 ; preds = %for.end.85
  %73 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13505, !tbaa !2289
  %m_tempPool93 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %73, i32 0, i32 79, !dbg !13507
  %call94 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool93), !dbg !13508
  %tobool95 = icmp ne i8 %call94, 0, !dbg !13508
  br i1 %tobool95, label %cond.false.97, label %cond.true.96, !dbg !13509

cond.true.96:                                     ; preds = %land.lhs.true.92
  br i1 false, label %if.end.102, label %if.then.101, !dbg !13510

cond.false.97:                                    ; preds = %land.lhs.true.92, %for.end.85
  %74 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13512, !tbaa !2289
  %m_tempPool98 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %74, i32 0, i32 79, !dbg !13515
  %ptr99 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool98, i32 0, i32 3, !dbg !13516
  %75 = load i8*, i8** %ptr99, align 8, !dbg !13517, !tbaa !2798
  %incdec.ptr100 = getelementptr i8, i8* %75, i32 1, !dbg !13517
  store i8* %incdec.ptr100, i8** %ptr99, align 8, !dbg !13517, !tbaa !2798
  store i8 61, i8* %75, align 1, !dbg !13518, !tbaa !2307
  br i1 true, label %if.end.102, label %if.then.101, !dbg !13509

if.then.101:                                      ; preds = %cond.false.97, %cond.true.96
  store i8* null, i8** %retval, !dbg !13519
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.138, !dbg !13519

if.end.102:                                       ; preds = %cond.false.97, %cond.true.96
  %76 = load %struct.prefix*, %struct.prefix** %prefix, align 8, !dbg !13520, !tbaa !2289
  %binding103 = getelementptr inbounds %struct.prefix, %struct.prefix* %76, i32 0, i32 1, !dbg !13521
  %77 = load %struct.binding*, %struct.binding** %binding103, align 8, !dbg !13521, !tbaa !12624
  %uriLen104 = getelementptr inbounds %struct.binding, %struct.binding* %77, i32 0, i32 5, !dbg !13522
  %78 = load i32, i32* %uriLen104, align 4, !dbg !13522, !tbaa !13346
  store i32 %78, i32* %len35, align 4, !dbg !13523, !tbaa !3391
  %79 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13524, !tbaa !2289
  %m_namespaceSeparator105 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %79, i32 0, i32 83, !dbg !13526
  %80 = load i8, i8* %m_namespaceSeparator105, align 1, !dbg !13526, !tbaa !2541
  %tobool106 = icmp ne i8 %80, 0, !dbg !13527
  br i1 %tobool106, label %if.then.107, label %if.end.109, !dbg !13528

if.then.107:                                      ; preds = %if.end.102
  %81 = load i32, i32* %len35, align 4, !dbg !13529, !tbaa !3391
  %dec108 = add i32 %81, -1, !dbg !13529
  store i32 %dec108, i32* %len35, align 4, !dbg !13529, !tbaa !3391
  br label %if.end.109, !dbg !13530

if.end.109:                                       ; preds = %if.then.107, %if.end.102
  store i32 0, i32* %i34, align 4, !dbg !13531, !tbaa !3391
  br label %for.cond.110, !dbg !13533

for.cond.110:                                     ; preds = %for.inc.135, %if.end.109
  %82 = load i32, i32* %i34, align 4, !dbg !13534, !tbaa !3391
  %83 = load i32, i32* %len35, align 4, !dbg !13538, !tbaa !3391
  %cmp111 = icmp slt i32 %82, %83, !dbg !13539
  br i1 %cmp111, label %for.body.113, label %for.end.137, !dbg !13540

for.body.113:                                     ; preds = %for.cond.110
  %84 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13541, !tbaa !2289
  %m_tempPool114 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %84, i32 0, i32 79, !dbg !13543
  %ptr115 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool114, i32 0, i32 3, !dbg !13544
  %85 = load i8*, i8** %ptr115, align 8, !dbg !13544, !tbaa !2798
  %86 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13545, !tbaa !2289
  %m_tempPool116 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %86, i32 0, i32 79, !dbg !13546
  %end117 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool116, i32 0, i32 2, !dbg !13547
  %87 = load i8*, i8** %end117, align 8, !dbg !13547, !tbaa !2802
  %cmp118 = icmp eq i8* %85, %87, !dbg !13548
  br i1 %cmp118, label %land.lhs.true.120, label %cond.false.125, !dbg !13549

land.lhs.true.120:                                ; preds = %for.body.113
  %88 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13550, !tbaa !2289
  %m_tempPool121 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %88, i32 0, i32 79, !dbg !13552
  %call122 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool121), !dbg !13553
  %tobool123 = icmp ne i8 %call122, 0, !dbg !13553
  br i1 %tobool123, label %cond.false.125, label %cond.true.124, !dbg !13554

cond.true.124:                                    ; preds = %land.lhs.true.120
  br i1 false, label %if.end.134, label %if.then.133, !dbg !13555

cond.false.125:                                   ; preds = %land.lhs.true.120, %for.body.113
  %89 = load i32, i32* %i34, align 4, !dbg !13557, !tbaa !3391
  %idxprom126 = sext i32 %89 to i64, !dbg !13560
  %90 = load %struct.prefix*, %struct.prefix** %prefix, align 8, !dbg !13560, !tbaa !2289
  %binding127 = getelementptr inbounds %struct.prefix, %struct.prefix* %90, i32 0, i32 1, !dbg !13561
  %91 = load %struct.binding*, %struct.binding** %binding127, align 8, !dbg !13561, !tbaa !12624
  %uri128 = getelementptr inbounds %struct.binding, %struct.binding* %91, i32 0, i32 4, !dbg !13562
  %92 = load i8*, i8** %uri128, align 8, !dbg !13562, !tbaa !4596
  %arrayidx129 = getelementptr i8, i8* %92, i64 %idxprom126, !dbg !13560
  %93 = load i8, i8* %arrayidx129, align 1, !dbg !13560, !tbaa !2307
  %94 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13563, !tbaa !2289
  %m_tempPool130 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %94, i32 0, i32 79, !dbg !13564
  %ptr131 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool130, i32 0, i32 3, !dbg !13565
  %95 = load i8*, i8** %ptr131, align 8, !dbg !13566, !tbaa !2798
  %incdec.ptr132 = getelementptr i8, i8* %95, i32 1, !dbg !13566
  store i8* %incdec.ptr132, i8** %ptr131, align 8, !dbg !13566, !tbaa !2798
  store i8 %93, i8* %95, align 1, !dbg !13567, !tbaa !2307
  br i1 true, label %if.end.134, label %if.then.133, !dbg !13554

if.then.133:                                      ; preds = %cond.false.125, %cond.true.124
  store i8* null, i8** %retval, !dbg !13568
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.138, !dbg !13568

if.end.134:                                       ; preds = %cond.false.125, %cond.true.124
  br label %for.inc.135, !dbg !13569

for.inc.135:                                      ; preds = %if.end.134
  %96 = load i32, i32* %i34, align 4, !dbg !13572, !tbaa !3391
  %inc136 = add i32 %96, 1, !dbg !13572
  store i32 %inc136, i32* %i34, align 4, !dbg !13572, !tbaa !3391
  br label %for.cond.110, !dbg !13573

for.end.137:                                      ; preds = %for.cond.110
  store i8 1, i8* %needSep, align 1, !dbg !13574, !tbaa !2307
  store i32 0, i32* %cleanup.dest.slot, !dbg !13575
  br label %cleanup.138, !dbg !13575

cleanup.138:                                      ; preds = %for.end.137, %if.then.133, %if.then.101, %if.then.81, %if.then.61, %if.then.42, %if.then.38
  %97 = bitcast %struct.prefix** %prefix to i8*, !dbg !13576
  call void @llvm.lifetime.end(i64 8, i8* %97) #2, !dbg !13576
  %98 = bitcast i8** %s to i8*, !dbg !13576
  call void @llvm.lifetime.end(i64 8, i8* %98) #2, !dbg !13576
  %99 = bitcast i32* %len35 to i8*, !dbg !13576
  call void @llvm.lifetime.end(i64 4, i8* %99) #2, !dbg !13576
  %100 = bitcast i32* %i34 to i8*, !dbg !13576
  call void @llvm.lifetime.end(i64 4, i8* %100) #2, !dbg !13576
  %cleanup.dest.142 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.142, label %cleanup.221 [
    i32 0, label %cleanup.cont.143
    i32 5, label %for.end.144
    i32 6, label %for.cond.33
  ]

cleanup.cont.143:                                 ; preds = %cleanup.138
  br label %for.cond.33, !dbg !13578

for.end.144:                                      ; preds = %cleanup.138
  %101 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !13579, !tbaa !2289
  %generalEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %101, i32 0, i32 0, !dbg !13580
  call void @hashTableIterInit(%struct.HASH_TABLE_ITER* %iter, %struct.HASH_TABLE* %generalEntities), !dbg !13581
  br label %for.cond.145, !dbg !13582

for.cond.145:                                     ; preds = %cleanup.cont.201, %cleanup.198, %for.end.144
  %102 = bitcast i8** %s146 to i8*, !dbg !13583
  call void @llvm.lifetime.start(i64 8, i8* %102) #2, !dbg !13583
  call void @llvm.dbg.declare(metadata i8** %s146, metadata !1509, metadata !2293), !dbg !13584
  %103 = bitcast %struct.ENTITY** %e to i8*, !dbg !13585
  call void @llvm.lifetime.start(i64 8, i8* %103) #2, !dbg !13585
  call void @llvm.dbg.declare(metadata %struct.ENTITY** %e, metadata !1513, metadata !2293), !dbg !13586
  %call147 = call %struct.NAMED* @hashTableIterNext(%struct.HASH_TABLE_ITER* %iter), !dbg !13587
  %104 = bitcast %struct.NAMED* %call147 to %struct.ENTITY*, !dbg !13588
  store %struct.ENTITY* %104, %struct.ENTITY** %e, align 8, !dbg !13586, !tbaa !2289
  %105 = load %struct.ENTITY*, %struct.ENTITY** %e, align 8, !dbg !13589, !tbaa !2289
  %tobool148 = icmp ne %struct.ENTITY* %105, null, !dbg !13589
  br i1 %tobool148, label %if.end.150, label %if.then.149, !dbg !13591

if.then.149:                                      ; preds = %for.cond.145
  store i32 13, i32* %cleanup.dest.slot
  br label %cleanup.198, !dbg !13592

if.end.150:                                       ; preds = %for.cond.145
  %106 = load %struct.ENTITY*, %struct.ENTITY** %e, align 8, !dbg !13593, !tbaa !2289
  %open = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %106, i32 0, i32 8, !dbg !13595
  %107 = load i8, i8* %open, align 1, !dbg !13595, !tbaa !4090
  %tobool151 = icmp ne i8 %107, 0, !dbg !13593
  br i1 %tobool151, label %if.end.153, label %if.then.152, !dbg !13596

if.then.152:                                      ; preds = %if.end.150
  store i32 14, i32* %cleanup.dest.slot
  br label %cleanup.198, !dbg !13597

if.end.153:                                       ; preds = %if.end.150
  %108 = load i8, i8* %needSep, align 1, !dbg !13598, !tbaa !2307
  %conv154 = zext i8 %108 to i32, !dbg !13598
  %tobool155 = icmp ne i32 %conv154, 0, !dbg !13598
  br i1 %tobool155, label %land.lhs.true.156, label %if.end.173, !dbg !13600

land.lhs.true.156:                                ; preds = %if.end.153
  %109 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13601, !tbaa !2289
  %m_tempPool157 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %109, i32 0, i32 79, !dbg !13603
  %ptr158 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool157, i32 0, i32 3, !dbg !13604
  %110 = load i8*, i8** %ptr158, align 8, !dbg !13604, !tbaa !2798
  %111 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13605, !tbaa !2289
  %m_tempPool159 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %111, i32 0, i32 79, !dbg !13606
  %end160 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool159, i32 0, i32 2, !dbg !13607
  %112 = load i8*, i8** %end160, align 8, !dbg !13607, !tbaa !2802
  %cmp161 = icmp eq i8* %110, %112, !dbg !13608
  br i1 %cmp161, label %land.lhs.true.163, label %cond.false.168, !dbg !13609

land.lhs.true.163:                                ; preds = %land.lhs.true.156
  %113 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13610, !tbaa !2289
  %m_tempPool164 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %113, i32 0, i32 79, !dbg !13612
  %call165 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool164), !dbg !13613
  %tobool166 = icmp ne i8 %call165, 0, !dbg !13613
  br i1 %tobool166, label %cond.false.168, label %cond.true.167, !dbg !13614

cond.true.167:                                    ; preds = %land.lhs.true.163
  br i1 false, label %if.end.173, label %if.then.172, !dbg !13615

cond.false.168:                                   ; preds = %land.lhs.true.163, %land.lhs.true.156
  %114 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13617, !tbaa !2289
  %m_tempPool169 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %114, i32 0, i32 79, !dbg !13620
  %ptr170 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool169, i32 0, i32 3, !dbg !13621
  %115 = load i8*, i8** %ptr170, align 8, !dbg !13622, !tbaa !2798
  %incdec.ptr171 = getelementptr i8, i8* %115, i32 1, !dbg !13622
  store i8* %incdec.ptr171, i8** %ptr170, align 8, !dbg !13622, !tbaa !2798
  store i8 12, i8* %115, align 1, !dbg !13623, !tbaa !2307
  br i1 true, label %if.end.173, label %if.then.172, !dbg !13614

if.then.172:                                      ; preds = %cond.false.168, %cond.true.167
  store i8* null, i8** %retval, !dbg !13624
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.198, !dbg !13624

if.end.173:                                       ; preds = %cond.false.168, %cond.true.167, %if.end.153
  %116 = load %struct.ENTITY*, %struct.ENTITY** %e, align 8, !dbg !13625, !tbaa !2289
  %name174 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %116, i32 0, i32 0, !dbg !13627
  %117 = load i8*, i8** %name174, align 8, !dbg !13627, !tbaa !7578
  store i8* %117, i8** %s146, align 8, !dbg !13628, !tbaa !2289
  br label %for.cond.175, !dbg !13629

for.cond.175:                                     ; preds = %for.inc.195, %if.end.173
  %118 = load i8*, i8** %s146, align 8, !dbg !13630, !tbaa !2289
  %119 = load i8, i8* %118, align 1, !dbg !13634, !tbaa !2307
  %tobool176 = icmp ne i8 %119, 0, !dbg !13635
  br i1 %tobool176, label %for.body.177, label %for.end.197, !dbg !13635

for.body.177:                                     ; preds = %for.cond.175
  %120 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13636, !tbaa !2289
  %m_tempPool178 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %120, i32 0, i32 79, !dbg !13638
  %ptr179 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool178, i32 0, i32 3, !dbg !13639
  %121 = load i8*, i8** %ptr179, align 8, !dbg !13639, !tbaa !2798
  %122 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13640, !tbaa !2289
  %m_tempPool180 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %122, i32 0, i32 79, !dbg !13641
  %end181 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool180, i32 0, i32 2, !dbg !13642
  %123 = load i8*, i8** %end181, align 8, !dbg !13642, !tbaa !2802
  %cmp182 = icmp eq i8* %121, %123, !dbg !13643
  br i1 %cmp182, label %land.lhs.true.184, label %cond.false.189, !dbg !13644

land.lhs.true.184:                                ; preds = %for.body.177
  %124 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13645, !tbaa !2289
  %m_tempPool185 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %124, i32 0, i32 79, !dbg !13647
  %call186 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool185), !dbg !13648
  %tobool187 = icmp ne i8 %call186, 0, !dbg !13648
  br i1 %tobool187, label %cond.false.189, label %cond.true.188, !dbg !13649

cond.true.188:                                    ; preds = %land.lhs.true.184
  br i1 false, label %if.end.194, label %if.then.193, !dbg !13650

cond.false.189:                                   ; preds = %land.lhs.true.184, %for.body.177
  %125 = load i8*, i8** %s146, align 8, !dbg !13652, !tbaa !2289
  %126 = load i8, i8* %125, align 1, !dbg !13655, !tbaa !2307
  %127 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13656, !tbaa !2289
  %m_tempPool190 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %127, i32 0, i32 79, !dbg !13657
  %ptr191 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool190, i32 0, i32 3, !dbg !13658
  %128 = load i8*, i8** %ptr191, align 8, !dbg !13659, !tbaa !2798
  %incdec.ptr192 = getelementptr i8, i8* %128, i32 1, !dbg !13659
  store i8* %incdec.ptr192, i8** %ptr191, align 8, !dbg !13659, !tbaa !2798
  store i8 %126, i8* %128, align 1, !dbg !13660, !tbaa !2307
  br i1 true, label %if.end.194, label %if.then.193, !dbg !13649

if.then.193:                                      ; preds = %cond.false.189, %cond.true.188
  store i8* null, i8** %retval, !dbg !13661
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.198, !dbg !13661

if.end.194:                                       ; preds = %cond.false.189, %cond.true.188
  br label %for.inc.195, !dbg !13662

for.inc.195:                                      ; preds = %if.end.194
  %129 = load i8*, i8** %s146, align 8, !dbg !13665, !tbaa !2289
  %incdec.ptr196 = getelementptr i8, i8* %129, i32 1, !dbg !13665
  store i8* %incdec.ptr196, i8** %s146, align 8, !dbg !13665, !tbaa !2289
  br label %for.cond.175, !dbg !13666

for.end.197:                                      ; preds = %for.cond.175
  store i8 1, i8* %needSep, align 1, !dbg !13667, !tbaa !2307
  store i32 0, i32* %cleanup.dest.slot, !dbg !13668
  br label %cleanup.198, !dbg !13668

cleanup.198:                                      ; preds = %for.end.197, %if.then.193, %if.then.172, %if.then.152, %if.then.149
  %130 = bitcast %struct.ENTITY** %e to i8*, !dbg !13669
  call void @llvm.lifetime.end(i64 8, i8* %130) #2, !dbg !13669
  %131 = bitcast i8** %s146 to i8*, !dbg !13669
  call void @llvm.lifetime.end(i64 8, i8* %131) #2, !dbg !13669
  %cleanup.dest.200 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.200, label %cleanup.221 [
    i32 0, label %cleanup.cont.201
    i32 13, label %for.end.202
    i32 14, label %for.cond.145
  ]

cleanup.cont.201:                                 ; preds = %cleanup.198
  br label %for.cond.145, !dbg !13671

for.end.202:                                      ; preds = %cleanup.198
  %132 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13672, !tbaa !2289
  %m_tempPool203 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %132, i32 0, i32 79, !dbg !13674
  %ptr204 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool203, i32 0, i32 3, !dbg !13675
  %133 = load i8*, i8** %ptr204, align 8, !dbg !13675, !tbaa !2798
  %134 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13676, !tbaa !2289
  %m_tempPool205 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %134, i32 0, i32 79, !dbg !13677
  %end206 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool205, i32 0, i32 2, !dbg !13678
  %135 = load i8*, i8** %end206, align 8, !dbg !13678, !tbaa !2802
  %cmp207 = icmp eq i8* %133, %135, !dbg !13679
  br i1 %cmp207, label %land.lhs.true.209, label %cond.false.214, !dbg !13680

land.lhs.true.209:                                ; preds = %for.end.202
  %136 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13681, !tbaa !2289
  %m_tempPool210 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %136, i32 0, i32 79, !dbg !13683
  %call211 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool210), !dbg !13684
  %tobool212 = icmp ne i8 %call211, 0, !dbg !13684
  br i1 %tobool212, label %cond.false.214, label %cond.true.213, !dbg !13685

cond.true.213:                                    ; preds = %land.lhs.true.209
  br i1 false, label %if.end.219, label %if.then.218, !dbg !13686

cond.false.214:                                   ; preds = %land.lhs.true.209, %for.end.202
  %137 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13688, !tbaa !2289
  %m_tempPool215 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %137, i32 0, i32 79, !dbg !13691
  %ptr216 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool215, i32 0, i32 3, !dbg !13692
  %138 = load i8*, i8** %ptr216, align 8, !dbg !13693, !tbaa !2798
  %incdec.ptr217 = getelementptr i8, i8* %138, i32 1, !dbg !13693
  store i8* %incdec.ptr217, i8** %ptr216, align 8, !dbg !13693, !tbaa !2798
  store i8 0, i8* %138, align 1, !dbg !13694, !tbaa !2307
  br i1 true, label %if.end.219, label %if.then.218, !dbg !13685

if.then.218:                                      ; preds = %cond.false.214, %cond.true.213
  store i8* null, i8** %retval, !dbg !13695
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.221, !dbg !13695

if.end.219:                                       ; preds = %cond.false.214, %cond.true.213
  %139 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13696, !tbaa !2289
  %m_tempPool220 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %139, i32 0, i32 79, !dbg !13697
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool220, i32 0, i32 4, !dbg !13698
  %140 = load i8*, i8** %start, align 8, !dbg !13698, !tbaa !7213
  store i8* %140, i8** %retval, !dbg !13699
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.221, !dbg !13699

cleanup.221:                                      ; preds = %if.end.219, %if.then.218, %cleanup.198, %cleanup.138, %cleanup
  call void @llvm.lifetime.end(i64 1, i8* %needSep) #2, !dbg !13700
  %141 = bitcast %struct.HASH_TABLE_ITER* %iter to i8*, !dbg !13700
  call void @llvm.lifetime.end(i64 16, i8* %141) #2, !dbg !13700
  %142 = bitcast %struct.DTD** %dtd to i8*, !dbg !13700
  call void @llvm.lifetime.end(i64 8, i8* %142) #2, !dbg !13700
  %143 = load i8*, i8** %retval, !dbg !13700
  ret i8* %143, !dbg !13700
}

; Function Attrs: nounwind uwtable
define internal i32 @storeAtts(%struct.XML_ParserStruct* %parser, %struct.encoding* %enc, i8* %attStr, %struct.TAG_NAME* %tagNamePtr, %struct.binding** %bindingsPtr) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %attStr.addr = alloca i8*, align 8
  %tagNamePtr.addr = alloca %struct.TAG_NAME*, align 8
  %bindingsPtr.addr = alloca %struct.binding**, align 8
  %dtd = alloca %struct.DTD*, align 8
  %elementType = alloca %struct.ELEMENT_TYPE*, align 8
  %nDefaultAtts = alloca i32, align 4
  %appAtts = alloca i8**, align 8
  %attIndex = alloca i32, align 4
  %prefixLen = alloca i32, align 4
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %uri = alloca i8*, align 8
  %nPrefixes = alloca i32, align 4
  %binding = alloca %struct.binding*, align 8
  %localPart = alloca i8*, align 8
  %name = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %oldAttsSize = alloca i32, align 4
  %temp = alloca %struct.ATTRIBUTE*, align 8
  %currAtt = alloca %struct.ATTRIBUTE*, align 8
  %attId = alloca %struct.attribute_id*, align 8
  %result = alloca i32, align 4
  %isCdata = alloca i8, align 1
  %j = alloca i32, align 4
  %result146 = alloca i32, align 4
  %da = alloca %struct.DEFAULT_ATTRIBUTE*, align 8
  %result221 = alloca i32, align 4
  %j273 = alloca i32, align 4
  %version = alloca i64, align 8
  %nsAttsSize = alloca i32, align 4
  %temp280 = alloca %struct.NS_ATT*, align 8
  %s = alloca i8*, align 8
  %id335 = alloca %struct.attribute_id*, align 8
  %b = alloca %struct.binding*, align 8
  %uriHash = alloca i64, align 8
  %c = alloca i8, align 1
  %c378 = alloca i8, align 1
  %step = alloca i8, align 1
  %mask = alloca i64, align 8
  %s1 = alloca i8*, align 8
  %s2 = alloca i8*, align 8
  %p = alloca %struct.tag*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1536, metadata !2293), !dbg !13701
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !1537, metadata !2293), !dbg !13702
  store i8* %attStr, i8** %attStr.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %attStr.addr, metadata !1538, metadata !2293), !dbg !13703
  store %struct.TAG_NAME* %tagNamePtr, %struct.TAG_NAME** %tagNamePtr.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.TAG_NAME** %tagNamePtr.addr, metadata !1539, metadata !2293), !dbg !13704
  store %struct.binding** %bindingsPtr, %struct.binding*** %bindingsPtr.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.binding*** %bindingsPtr.addr, metadata !1540, metadata !2293), !dbg !13705
  %0 = bitcast %struct.DTD** %dtd to i8*, !dbg !13706
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !13706
  call void @llvm.dbg.declare(metadata %struct.DTD** %dtd, metadata !1541, metadata !2293), !dbg !13707
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13708, !tbaa !2289
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 65, !dbg !13709
  %2 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !13709, !tbaa !2478
  store %struct.DTD* %2, %struct.DTD** %dtd, align 8, !dbg !13707, !tbaa !2289
  %3 = bitcast %struct.ELEMENT_TYPE** %elementType to i8*, !dbg !13710
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !13710
  call void @llvm.dbg.declare(metadata %struct.ELEMENT_TYPE** %elementType, metadata !1542, metadata !2293), !dbg !13711
  %4 = bitcast i32* %nDefaultAtts to i8*, !dbg !13712
  call void @llvm.lifetime.start(i64 4, i8* %4) #2, !dbg !13712
  call void @llvm.dbg.declare(metadata i32* %nDefaultAtts, metadata !1543, metadata !2293), !dbg !13713
  %5 = bitcast i8*** %appAtts to i8*, !dbg !13714
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !13714
  call void @llvm.dbg.declare(metadata i8*** %appAtts, metadata !1544, metadata !2293), !dbg !13715
  %6 = bitcast i32* %attIndex to i8*, !dbg !13716
  call void @llvm.lifetime.start(i64 4, i8* %6) #2, !dbg !13716
  call void @llvm.dbg.declare(metadata i32* %attIndex, metadata !1545, metadata !2293), !dbg !13717
  store i32 0, i32* %attIndex, align 4, !dbg !13717, !tbaa !3391
  %7 = bitcast i32* %prefixLen to i8*, !dbg !13718
  call void @llvm.lifetime.start(i64 4, i8* %7) #2, !dbg !13718
  call void @llvm.dbg.declare(metadata i32* %prefixLen, metadata !1546, metadata !2293), !dbg !13719
  %8 = bitcast i32* %i to i8*, !dbg !13720
  call void @llvm.lifetime.start(i64 4, i8* %8) #2, !dbg !13720
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1547, metadata !2293), !dbg !13721
  %9 = bitcast i32* %n to i8*, !dbg !13722
  call void @llvm.lifetime.start(i64 4, i8* %9) #2, !dbg !13722
  call void @llvm.dbg.declare(metadata i32* %n, metadata !1548, metadata !2293), !dbg !13723
  %10 = bitcast i8** %uri to i8*, !dbg !13724
  call void @llvm.lifetime.start(i64 8, i8* %10) #2, !dbg !13724
  call void @llvm.dbg.declare(metadata i8** %uri, metadata !1549, metadata !2293), !dbg !13725
  %11 = bitcast i32* %nPrefixes to i8*, !dbg !13726
  call void @llvm.lifetime.start(i64 4, i8* %11) #2, !dbg !13726
  call void @llvm.dbg.declare(metadata i32* %nPrefixes, metadata !1550, metadata !2293), !dbg !13727
  store i32 0, i32* %nPrefixes, align 4, !dbg !13727, !tbaa !3391
  %12 = bitcast %struct.binding** %binding to i8*, !dbg !13728
  call void @llvm.lifetime.start(i64 8, i8* %12) #2, !dbg !13728
  call void @llvm.dbg.declare(metadata %struct.binding** %binding, metadata !1551, metadata !2293), !dbg !13729
  %13 = bitcast i8** %localPart to i8*, !dbg !13730
  call void @llvm.lifetime.start(i64 8, i8* %13) #2, !dbg !13730
  call void @llvm.dbg.declare(metadata i8** %localPart, metadata !1552, metadata !2293), !dbg !13731
  %14 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13732, !tbaa !2289
  %15 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !13733, !tbaa !2289
  %elementTypes = getelementptr inbounds %struct.DTD, %struct.DTD* %15, i32 0, i32 1, !dbg !13734
  %16 = load %struct.TAG_NAME*, %struct.TAG_NAME** %tagNamePtr.addr, align 8, !dbg !13735, !tbaa !2289
  %str = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %16, i32 0, i32 0, !dbg !13736
  %17 = load i8*, i8** %str, align 8, !dbg !13736, !tbaa !12497
  %call = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %14, %struct.HASH_TABLE* %elementTypes, i8* %17, i64 0), !dbg !13737
  %18 = bitcast %struct.NAMED* %call to %struct.ELEMENT_TYPE*, !dbg !13738
  store %struct.ELEMENT_TYPE* %18, %struct.ELEMENT_TYPE** %elementType, align 8, !dbg !13739, !tbaa !2289
  %19 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType, align 8, !dbg !13740, !tbaa !2289
  %tobool = icmp ne %struct.ELEMENT_TYPE* %19, null, !dbg !13740
  br i1 %tobool, label %if.end.15, label %if.then, !dbg !13741

if.then:                                          ; preds = %entry
  %20 = bitcast i8** %name to i8*, !dbg !13742
  call void @llvm.lifetime.start(i64 8, i8* %20) #2, !dbg !13742
  call void @llvm.dbg.declare(metadata i8** %name, metadata !1553, metadata !2293), !dbg !13743
  %21 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !13744, !tbaa !2289
  %pool = getelementptr inbounds %struct.DTD, %struct.DTD* %21, i32 0, i32 4, !dbg !13745
  %22 = load %struct.TAG_NAME*, %struct.TAG_NAME** %tagNamePtr.addr, align 8, !dbg !13746, !tbaa !2289
  %str1 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %22, i32 0, i32 0, !dbg !13747
  %23 = load i8*, i8** %str1, align 8, !dbg !13747, !tbaa !12497
  %call2 = call i8* @poolCopyString(%struct.STRING_POOL* %pool, i8* %23), !dbg !13748
  store i8* %call2, i8** %name, align 8, !dbg !13743, !tbaa !2289
  %24 = load i8*, i8** %name, align 8, !dbg !13749, !tbaa !2289
  %tobool3 = icmp ne i8* %24, null, !dbg !13749
  br i1 %tobool3, label %if.end, label %if.then.4, !dbg !13751

if.then.4:                                        ; preds = %if.then
  store i32 1, i32* %retval, !dbg !13752
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13752

if.end:                                           ; preds = %if.then
  %25 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13753, !tbaa !2289
  %26 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !13754, !tbaa !2289
  %elementTypes5 = getelementptr inbounds %struct.DTD, %struct.DTD* %26, i32 0, i32 1, !dbg !13755
  %27 = load i8*, i8** %name, align 8, !dbg !13756, !tbaa !2289
  %call6 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %25, %struct.HASH_TABLE* %elementTypes5, i8* %27, i64 40), !dbg !13757
  %28 = bitcast %struct.NAMED* %call6 to %struct.ELEMENT_TYPE*, !dbg !13758
  store %struct.ELEMENT_TYPE* %28, %struct.ELEMENT_TYPE** %elementType, align 8, !dbg !13759, !tbaa !2289
  %29 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType, align 8, !dbg !13760, !tbaa !2289
  %tobool7 = icmp ne %struct.ELEMENT_TYPE* %29, null, !dbg !13760
  br i1 %tobool7, label %if.end.9, label %if.then.8, !dbg !13762

if.then.8:                                        ; preds = %if.end
  store i32 1, i32* %retval, !dbg !13763
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13763

if.end.9:                                         ; preds = %if.end
  %30 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13764, !tbaa !2289
  %m_ns = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %30, i32 0, i32 38, !dbg !13766
  %31 = load i8, i8* %m_ns, align 1, !dbg !13766, !tbaa !2545
  %conv = zext i8 %31 to i32, !dbg !13767
  %tobool10 = icmp ne i32 %conv, 0, !dbg !13767
  br i1 %tobool10, label %land.lhs.true, label %if.end.14, !dbg !13768

land.lhs.true:                                    ; preds = %if.end.9
  %32 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13769, !tbaa !2289
  %33 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType, align 8, !dbg !13771, !tbaa !2289
  %call11 = call i32 @setElementTypePrefix(%struct.XML_ParserStruct* %32, %struct.ELEMENT_TYPE* %33), !dbg !13772
  %tobool12 = icmp ne i32 %call11, 0, !dbg !13772
  br i1 %tobool12, label %if.end.14, label %if.then.13, !dbg !13773

if.then.13:                                       ; preds = %land.lhs.true
  store i32 1, i32* %retval, !dbg !13774
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13774

if.end.14:                                        ; preds = %land.lhs.true, %if.end.9
  store i32 0, i32* %cleanup.dest.slot, !dbg !13775
  br label %cleanup, !dbg !13775

cleanup:                                          ; preds = %if.end.14, %if.then.13, %if.then.8, %if.then.4
  %34 = bitcast i8** %name to i8*, !dbg !13776
  call void @llvm.lifetime.end(i64 8, i8* %34) #2, !dbg !13776
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.690 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.15, !dbg !13778

if.end.15:                                        ; preds = %cleanup.cont, %entry
  %35 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType, align 8, !dbg !13779, !tbaa !2289
  %nDefaultAtts16 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %35, i32 0, i32 3, !dbg !13780
  %36 = load i32, i32* %nDefaultAtts16, align 4, !dbg !13780, !tbaa !3810
  store i32 %36, i32* %nDefaultAtts, align 4, !dbg !13781, !tbaa !3391
  %37 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13782, !tbaa !2289
  %getAtts = getelementptr inbounds %struct.encoding, %struct.encoding* %37, i32 0, i32 6, !dbg !13783
  %38 = load i32 (%struct.encoding*, i8*, i32, %struct.ATTRIBUTE*)*, i32 (%struct.encoding*, i8*, i32, %struct.ATTRIBUTE*)** %getAtts, align 8, !dbg !13783, !tbaa !13784
  %39 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13785, !tbaa !2289
  %40 = load i8*, i8** %attStr.addr, align 8, !dbg !13786, !tbaa !2289
  %41 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13787, !tbaa !2289
  %m_attsSize = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %41, i32 0, i32 71, !dbg !13788
  %42 = load i32, i32* %m_attsSize, align 4, !dbg !13788, !tbaa !2412
  %43 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13789, !tbaa !2289
  %m_atts = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %43, i32 0, i32 74, !dbg !13790
  %44 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts, align 8, !dbg !13790, !tbaa !2425
  %call17 = call i32 %38(%struct.encoding* %39, i8* %40, i32 %42, %struct.ATTRIBUTE* %44), !dbg !13791
  store i32 %call17, i32* %n, align 4, !dbg !13792, !tbaa !3391
  %45 = load i32, i32* %n, align 4, !dbg !13793, !tbaa !3391
  %46 = load i32, i32* %nDefaultAtts, align 4, !dbg !13794, !tbaa !3391
  %add = add i32 %45, %46, !dbg !13795
  %47 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13796, !tbaa !2289
  %m_attsSize18 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %47, i32 0, i32 71, !dbg !13797
  %48 = load i32, i32* %m_attsSize18, align 4, !dbg !13797, !tbaa !2412
  %cmp = icmp sgt i32 %add, %48, !dbg !13798
  br i1 %cmp, label %if.then.20, label %if.end.45, !dbg !13799

if.then.20:                                       ; preds = %if.end.15
  %49 = bitcast i32* %oldAttsSize to i8*, !dbg !13800
  call void @llvm.lifetime.start(i64 4, i8* %49) #2, !dbg !13800
  call void @llvm.dbg.declare(metadata i32* %oldAttsSize, metadata !1556, metadata !2293), !dbg !13801
  %50 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13802, !tbaa !2289
  %m_attsSize21 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %50, i32 0, i32 71, !dbg !13803
  %51 = load i32, i32* %m_attsSize21, align 4, !dbg !13803, !tbaa !2412
  store i32 %51, i32* %oldAttsSize, align 4, !dbg !13801, !tbaa !3391
  %52 = bitcast %struct.ATTRIBUTE** %temp to i8*, !dbg !13804
  call void @llvm.lifetime.start(i64 8, i8* %52) #2, !dbg !13804
  call void @llvm.dbg.declare(metadata %struct.ATTRIBUTE** %temp, metadata !1559, metadata !2293), !dbg !13805
  %53 = load i32, i32* %n, align 4, !dbg !13806, !tbaa !3391
  %54 = load i32, i32* %nDefaultAtts, align 4, !dbg !13807, !tbaa !3391
  %add22 = add i32 %53, %54, !dbg !13808
  %add23 = add i32 %add22, 16, !dbg !13809
  %55 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13810, !tbaa !2289
  %m_attsSize24 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %55, i32 0, i32 71, !dbg !13811
  store i32 %add23, i32* %m_attsSize24, align 4, !dbg !13812, !tbaa !2412
  %56 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13813, !tbaa !2289
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %56, i32 0, i32 3, !dbg !13814
  %realloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 1, !dbg !13815
  %57 = load i8* (i8*, i64)*, i8* (i8*, i64)** %realloc_fcn, align 8, !dbg !13815, !tbaa !5977
  %58 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13816, !tbaa !2289
  %m_atts25 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %58, i32 0, i32 74, !dbg !13817
  %59 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts25, align 8, !dbg !13817, !tbaa !2425
  %60 = bitcast %struct.ATTRIBUTE* %59 to i8*, !dbg !13818
  %61 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13819, !tbaa !2289
  %m_attsSize26 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %61, i32 0, i32 71, !dbg !13820
  %62 = load i32, i32* %m_attsSize26, align 4, !dbg !13820, !tbaa !2412
  %conv27 = sext i32 %62 to i64, !dbg !13821
  %mul = mul i64 %conv27, 32, !dbg !13822
  %call28 = call i8* %57(i8* %60, i64 %mul), !dbg !13813
  %63 = bitcast i8* %call28 to %struct.ATTRIBUTE*, !dbg !13823
  store %struct.ATTRIBUTE* %63, %struct.ATTRIBUTE** %temp, align 8, !dbg !13824, !tbaa !2289
  %64 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %temp, align 8, !dbg !13825, !tbaa !2289
  %cmp29 = icmp eq %struct.ATTRIBUTE* %64, null, !dbg !13827
  br i1 %cmp29, label %if.then.31, label %if.end.32, !dbg !13828

if.then.31:                                       ; preds = %if.then.20
  store i32 1, i32* %retval, !dbg !13829
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.41, !dbg !13829

if.end.32:                                        ; preds = %if.then.20
  %65 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %temp, align 8, !dbg !13830, !tbaa !2289
  %66 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13831, !tbaa !2289
  %m_atts33 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %66, i32 0, i32 74, !dbg !13832
  store %struct.ATTRIBUTE* %65, %struct.ATTRIBUTE** %m_atts33, align 8, !dbg !13833, !tbaa !2425
  %67 = load i32, i32* %n, align 4, !dbg !13834, !tbaa !3391
  %68 = load i32, i32* %oldAttsSize, align 4, !dbg !13836, !tbaa !3391
  %cmp34 = icmp sgt i32 %67, %68, !dbg !13837
  br i1 %cmp34, label %if.then.36, label %if.end.40, !dbg !13838

if.then.36:                                       ; preds = %if.end.32
  %69 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13839, !tbaa !2289
  %getAtts37 = getelementptr inbounds %struct.encoding, %struct.encoding* %69, i32 0, i32 6, !dbg !13840
  %70 = load i32 (%struct.encoding*, i8*, i32, %struct.ATTRIBUTE*)*, i32 (%struct.encoding*, i8*, i32, %struct.ATTRIBUTE*)** %getAtts37, align 8, !dbg !13840, !tbaa !13784
  %71 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13841, !tbaa !2289
  %72 = load i8*, i8** %attStr.addr, align 8, !dbg !13842, !tbaa !2289
  %73 = load i32, i32* %n, align 4, !dbg !13843, !tbaa !3391
  %74 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13844, !tbaa !2289
  %m_atts38 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %74, i32 0, i32 74, !dbg !13845
  %75 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts38, align 8, !dbg !13845, !tbaa !2425
  %call39 = call i32 %70(%struct.encoding* %71, i8* %72, i32 %73, %struct.ATTRIBUTE* %75), !dbg !13846
  br label %if.end.40, !dbg !13847

if.end.40:                                        ; preds = %if.then.36, %if.end.32
  store i32 0, i32* %cleanup.dest.slot, !dbg !13848
  br label %cleanup.41, !dbg !13848

cleanup.41:                                       ; preds = %if.end.40, %if.then.31
  %76 = bitcast %struct.ATTRIBUTE** %temp to i8*, !dbg !13849
  call void @llvm.lifetime.end(i64 8, i8* %76) #2, !dbg !13849
  %77 = bitcast i32* %oldAttsSize to i8*, !dbg !13849
  call void @llvm.lifetime.end(i64 4, i8* %77) #2, !dbg !13849
  %cleanup.dest.43 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.43, label %cleanup.690 [
    i32 0, label %cleanup.cont.44
  ]

cleanup.cont.44:                                  ; preds = %cleanup.41
  br label %if.end.45, !dbg !13851

if.end.45:                                        ; preds = %cleanup.cont.44, %if.end.15
  %78 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13852, !tbaa !2289
  %m_atts46 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %78, i32 0, i32 74, !dbg !13853
  %79 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts46, align 8, !dbg !13853, !tbaa !2425
  %80 = bitcast %struct.ATTRIBUTE* %79 to i8**, !dbg !13854
  store i8** %80, i8*** %appAtts, align 8, !dbg !13855, !tbaa !2289
  store i32 0, i32* %i, align 4, !dbg !13856, !tbaa !3391
  br label %for.cond, !dbg !13857

for.cond:                                         ; preds = %for.inc.170, %if.end.45
  %81 = load i32, i32* %i, align 4, !dbg !13858, !tbaa !3391
  %82 = load i32, i32* %n, align 4, !dbg !13861, !tbaa !3391
  %cmp47 = icmp slt i32 %81, %82, !dbg !13862
  br i1 %cmp47, label %for.body, label %for.end.172, !dbg !13863

for.body:                                         ; preds = %for.cond
  %83 = bitcast %struct.ATTRIBUTE** %currAtt to i8*, !dbg !13864
  call void @llvm.lifetime.start(i64 8, i8* %83) #2, !dbg !13864
  call void @llvm.dbg.declare(metadata %struct.ATTRIBUTE** %currAtt, metadata !1560, metadata !2293), !dbg !13865
  %84 = load i32, i32* %i, align 4, !dbg !13866, !tbaa !3391
  %idxprom = sext i32 %84 to i64, !dbg !13867
  %85 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13868, !tbaa !2289
  %m_atts49 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %85, i32 0, i32 74, !dbg !13869
  %86 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts49, align 8, !dbg !13869, !tbaa !2425
  %arrayidx = getelementptr %struct.ATTRIBUTE, %struct.ATTRIBUTE* %86, i64 %idxprom, !dbg !13867
  store %struct.ATTRIBUTE* %arrayidx, %struct.ATTRIBUTE** %currAtt, align 8, !dbg !13865, !tbaa !2289
  %87 = bitcast %struct.attribute_id** %attId to i8*, !dbg !13870
  call void @llvm.lifetime.start(i64 8, i8* %87) #2, !dbg !13870
  call void @llvm.dbg.declare(metadata %struct.attribute_id** %attId, metadata !1564, metadata !2293), !dbg !13871
  %88 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13872, !tbaa !2289
  %89 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13873, !tbaa !2289
  %90 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %currAtt, align 8, !dbg !13874, !tbaa !2289
  %name50 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %90, i32 0, i32 0, !dbg !13875
  %91 = load i8*, i8** %name50, align 8, !dbg !13875, !tbaa !13876
  %92 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %currAtt, align 8, !dbg !13878, !tbaa !2289
  %name51 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %92, i32 0, i32 0, !dbg !13879
  %93 = load i8*, i8** %name51, align 8, !dbg !13879, !tbaa !13876
  %94 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13880, !tbaa !2289
  %nameLength = getelementptr inbounds %struct.encoding, %struct.encoding* %94, i32 0, i32 4, !dbg !13881
  %95 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %nameLength, align 8, !dbg !13881, !tbaa !9228
  %96 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13882, !tbaa !2289
  %97 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %currAtt, align 8, !dbg !13883, !tbaa !2289
  %name52 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %97, i32 0, i32 0, !dbg !13884
  %98 = load i8*, i8** %name52, align 8, !dbg !13884, !tbaa !13876
  %call53 = call i32 %95(%struct.encoding* %96, i8* %98), !dbg !13885
  %idx.ext = sext i32 %call53 to i64, !dbg !13886
  %add.ptr = getelementptr i8, i8* %93, i64 %idx.ext, !dbg !13886
  %call54 = call %struct.attribute_id* @getAttributeId(%struct.XML_ParserStruct* %88, %struct.encoding* %89, i8* %91, i8* %add.ptr), !dbg !13887
  store %struct.attribute_id* %call54, %struct.attribute_id** %attId, align 8, !dbg !13871, !tbaa !2289
  %99 = load %struct.attribute_id*, %struct.attribute_id** %attId, align 8, !dbg !13888, !tbaa !2289
  %tobool55 = icmp ne %struct.attribute_id* %99, null, !dbg !13888
  br i1 %tobool55, label %if.end.57, label %if.then.56, !dbg !13890

if.then.56:                                       ; preds = %for.body
  store i32 1, i32* %retval, !dbg !13891
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.166, !dbg !13891

if.end.57:                                        ; preds = %for.body
  %100 = load %struct.attribute_id*, %struct.attribute_id** %attId, align 8, !dbg !13892, !tbaa !2289
  %name58 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %100, i32 0, i32 0, !dbg !13894
  %101 = load i8*, i8** %name58, align 8, !dbg !13894, !tbaa !3701
  %arrayidx59 = getelementptr i8, i8* %101, i64 -1, !dbg !13895
  %102 = load i8, i8* %arrayidx59, align 1, !dbg !13895, !tbaa !2307
  %tobool60 = icmp ne i8 %102, 0, !dbg !13895
  br i1 %tobool60, label %if.then.61, label %if.end.70, !dbg !13896

if.then.61:                                       ; preds = %if.end.57
  %103 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13897, !tbaa !2289
  %104 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13900, !tbaa !2289
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %104, i32 0, i32 34, !dbg !13901
  %105 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !13901, !tbaa !5191
  %cmp62 = icmp eq %struct.encoding* %103, %105, !dbg !13902
  br i1 %cmp62, label %if.then.64, label %if.end.69, !dbg !13903

if.then.64:                                       ; preds = %if.then.61
  %106 = load i32, i32* %i, align 4, !dbg !13904, !tbaa !3391
  %idxprom65 = sext i32 %106 to i64, !dbg !13905
  %107 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13906, !tbaa !2289
  %m_atts66 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %107, i32 0, i32 74, !dbg !13907
  %108 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts66, align 8, !dbg !13907, !tbaa !2425
  %arrayidx67 = getelementptr %struct.ATTRIBUTE, %struct.ATTRIBUTE* %108, i64 %idxprom65, !dbg !13905
  %name68 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx67, i32 0, i32 0, !dbg !13908
  %109 = load i8*, i8** %name68, align 8, !dbg !13908, !tbaa !13876
  %110 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13909, !tbaa !2289
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %110, i32 0, i32 47, !dbg !13910
  store i8* %109, i8** %m_eventPtr, align 8, !dbg !13911, !tbaa !3006
  br label %if.end.69, !dbg !13912

if.end.69:                                        ; preds = %if.then.64, %if.then.61
  store i32 8, i32* %retval, !dbg !13913
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.166, !dbg !13913

if.end.70:                                        ; preds = %if.end.57
  %111 = load %struct.attribute_id*, %struct.attribute_id** %attId, align 8, !dbg !13914, !tbaa !2289
  %name71 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %111, i32 0, i32 0, !dbg !13915
  %112 = load i8*, i8** %name71, align 8, !dbg !13915, !tbaa !3701
  %arrayidx72 = getelementptr i8, i8* %112, i64 -1, !dbg !13916
  store i8 1, i8* %arrayidx72, align 1, !dbg !13917, !tbaa !2307
  %113 = load %struct.attribute_id*, %struct.attribute_id** %attId, align 8, !dbg !13918, !tbaa !2289
  %name73 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %113, i32 0, i32 0, !dbg !13919
  %114 = load i8*, i8** %name73, align 8, !dbg !13919, !tbaa !3701
  %115 = load i32, i32* %attIndex, align 4, !dbg !13920, !tbaa !3391
  %inc = add i32 %115, 1, !dbg !13920
  store i32 %inc, i32* %attIndex, align 4, !dbg !13920, !tbaa !3391
  %idxprom74 = sext i32 %115 to i64, !dbg !13921
  %116 = load i8**, i8*** %appAtts, align 8, !dbg !13921, !tbaa !2289
  %arrayidx75 = getelementptr i8*, i8** %116, i64 %idxprom74, !dbg !13921
  store i8* %114, i8** %arrayidx75, align 8, !dbg !13922, !tbaa !2289
  %117 = load i32, i32* %i, align 4, !dbg !13923, !tbaa !3391
  %idxprom76 = sext i32 %117 to i64, !dbg !13924
  %118 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13925, !tbaa !2289
  %m_atts77 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %118, i32 0, i32 74, !dbg !13926
  %119 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts77, align 8, !dbg !13926, !tbaa !2425
  %arrayidx78 = getelementptr %struct.ATTRIBUTE, %struct.ATTRIBUTE* %119, i64 %idxprom76, !dbg !13924
  %normalized = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx78, i32 0, i32 3, !dbg !13927
  %120 = load i8, i8* %normalized, align 1, !dbg !13927, !tbaa !13928
  %tobool79 = icmp ne i8 %120, 0, !dbg !13924
  br i1 %tobool79, label %if.else, label %if.then.80, !dbg !13929

if.then.80:                                       ; preds = %if.end.70
  %121 = bitcast i32* %result to i8*, !dbg !13930
  call void @llvm.lifetime.start(i64 4, i8* %121) #2, !dbg !13930
  call void @llvm.dbg.declare(metadata i32* %result, metadata !1565, metadata !2293), !dbg !13931
  call void @llvm.lifetime.start(i64 1, i8* %isCdata) #2, !dbg !13932
  call void @llvm.dbg.declare(metadata i8* %isCdata, metadata !1568, metadata !2293), !dbg !13933
  store i8 1, i8* %isCdata, align 1, !dbg !13933, !tbaa !2307
  %122 = load %struct.attribute_id*, %struct.attribute_id** %attId, align 8, !dbg !13934, !tbaa !2289
  %maybeTokenized = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %122, i32 0, i32 2, !dbg !13935
  %123 = load i8, i8* %maybeTokenized, align 1, !dbg !13935, !tbaa !3723
  %tobool81 = icmp ne i8 %123, 0, !dbg !13934
  br i1 %tobool81, label %if.then.82, label %if.end.98, !dbg !13936

if.then.82:                                       ; preds = %if.then.80
  %124 = bitcast i32* %j to i8*, !dbg !13937
  call void @llvm.lifetime.start(i64 4, i8* %124) #2, !dbg !13937
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1569, metadata !2293), !dbg !13938
  store i32 0, i32* %j, align 4, !dbg !13939, !tbaa !3391
  br label %for.cond.83, !dbg !13941

for.cond.83:                                      ; preds = %for.inc, %if.then.82
  %125 = load i32, i32* %j, align 4, !dbg !13942, !tbaa !3391
  %126 = load i32, i32* %nDefaultAtts, align 4, !dbg !13946, !tbaa !3391
  %cmp84 = icmp slt i32 %125, %126, !dbg !13947
  br i1 %cmp84, label %for.body.86, label %for.end, !dbg !13948

for.body.86:                                      ; preds = %for.cond.83
  %127 = load %struct.attribute_id*, %struct.attribute_id** %attId, align 8, !dbg !13949, !tbaa !2289
  %128 = load i32, i32* %j, align 4, !dbg !13952, !tbaa !3391
  %idxprom87 = sext i32 %128 to i64, !dbg !13953
  %129 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType, align 8, !dbg !13953, !tbaa !2289
  %defaultAtts = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %129, i32 0, i32 5, !dbg !13954
  %130 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts, align 8, !dbg !13954, !tbaa !3097
  %arrayidx88 = getelementptr %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %130, i64 %idxprom87, !dbg !13953
  %id = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %arrayidx88, i32 0, i32 0, !dbg !13955
  %131 = load %struct.attribute_id*, %struct.attribute_id** %id, align 8, !dbg !13955, !tbaa !3891
  %cmp89 = icmp eq %struct.attribute_id* %127, %131, !dbg !13956
  br i1 %cmp89, label %if.then.91, label %if.end.96, !dbg !13957

if.then.91:                                       ; preds = %for.body.86
  %132 = load i32, i32* %j, align 4, !dbg !13958, !tbaa !3391
  %idxprom92 = sext i32 %132 to i64, !dbg !13960
  %133 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType, align 8, !dbg !13960, !tbaa !2289
  %defaultAtts93 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %133, i32 0, i32 5, !dbg !13961
  %134 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts93, align 8, !dbg !13961, !tbaa !3097
  %arrayidx94 = getelementptr %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %134, i64 %idxprom92, !dbg !13960
  %isCdata95 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %arrayidx94, i32 0, i32 1, !dbg !13962
  %135 = load i8, i8* %isCdata95, align 1, !dbg !13962, !tbaa !3905
  store i8 %135, i8* %isCdata, align 1, !dbg !13963, !tbaa !2307
  br label %for.end, !dbg !13964

if.end.96:                                        ; preds = %for.body.86
  br label %for.inc, !dbg !13965

for.inc:                                          ; preds = %if.end.96
  %136 = load i32, i32* %j, align 4, !dbg !13966, !tbaa !3391
  %inc97 = add i32 %136, 1, !dbg !13966
  store i32 %inc97, i32* %j, align 4, !dbg !13966, !tbaa !3391
  br label %for.cond.83, !dbg !13967

for.end:                                          ; preds = %if.then.91, %for.cond.83
  %137 = bitcast i32* %j to i8*, !dbg !13968
  call void @llvm.lifetime.end(i64 4, i8* %137) #2, !dbg !13968
  br label %if.end.98, !dbg !13969

if.end.98:                                        ; preds = %for.end, %if.then.80
  %138 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13970, !tbaa !2289
  %139 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13971, !tbaa !2289
  %140 = load i8, i8* %isCdata, align 1, !dbg !13972, !tbaa !2307
  %141 = load i32, i32* %i, align 4, !dbg !13973, !tbaa !3391
  %idxprom99 = sext i32 %141 to i64, !dbg !13974
  %142 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13975, !tbaa !2289
  %m_atts100 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %142, i32 0, i32 74, !dbg !13976
  %143 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts100, align 8, !dbg !13976, !tbaa !2425
  %arrayidx101 = getelementptr %struct.ATTRIBUTE, %struct.ATTRIBUTE* %143, i64 %idxprom99, !dbg !13974
  %valuePtr = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx101, i32 0, i32 1, !dbg !13977
  %144 = load i8*, i8** %valuePtr, align 8, !dbg !13977, !tbaa !13978
  %145 = load i32, i32* %i, align 4, !dbg !13979, !tbaa !3391
  %idxprom102 = sext i32 %145 to i64, !dbg !13980
  %146 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13981, !tbaa !2289
  %m_atts103 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %146, i32 0, i32 74, !dbg !13982
  %147 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts103, align 8, !dbg !13982, !tbaa !2425
  %arrayidx104 = getelementptr %struct.ATTRIBUTE, %struct.ATTRIBUTE* %147, i64 %idxprom102, !dbg !13980
  %valueEnd = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx104, i32 0, i32 2, !dbg !13983
  %148 = load i8*, i8** %valueEnd, align 8, !dbg !13983, !tbaa !13984
  %149 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13985, !tbaa !2289
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %149, i32 0, i32 79, !dbg !13986
  %call105 = call i32 @storeAttributeValue(%struct.XML_ParserStruct* %138, %struct.encoding* %139, i8 zeroext %140, i8* %144, i8* %148, %struct.STRING_POOL* %m_tempPool), !dbg !13987
  store i32 %call105, i32* %result, align 4, !dbg !13988, !tbaa !2307
  %150 = load i32, i32* %result, align 4, !dbg !13989, !tbaa !2307
  %tobool106 = icmp ne i32 %150, 0, !dbg !13989
  br i1 %tobool106, label %if.then.107, label %if.end.108, !dbg !13991

if.then.107:                                      ; preds = %if.end.98
  %151 = load i32, i32* %result, align 4, !dbg !13992, !tbaa !2307
  store i32 %151, i32* %retval, !dbg !13993
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.115, !dbg !13993

if.end.108:                                       ; preds = %if.end.98
  %152 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !13994, !tbaa !2289
  %m_tempPool109 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %152, i32 0, i32 79, !dbg !13995
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool109, i32 0, i32 4, !dbg !13996
  %153 = load i8*, i8** %start, align 8, !dbg !13996, !tbaa !2794
  %154 = load i32, i32* %attIndex, align 4, !dbg !13997, !tbaa !3391
  %idxprom110 = sext i32 %154 to i64, !dbg !13998
  %155 = load i8**, i8*** %appAtts, align 8, !dbg !13998, !tbaa !2289
  %arrayidx111 = getelementptr i8*, i8** %155, i64 %idxprom110, !dbg !13998
  store i8* %153, i8** %arrayidx111, align 8, !dbg !13999, !tbaa !2289
  %156 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14000, !tbaa !2289
  %m_tempPool112 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %156, i32 0, i32 79, !dbg !14001
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool112, i32 0, i32 3, !dbg !14002
  %157 = load i8*, i8** %ptr, align 8, !dbg !14002, !tbaa !2798
  %158 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14003, !tbaa !2289
  %m_tempPool113 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %158, i32 0, i32 79, !dbg !14004
  %start114 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool113, i32 0, i32 4, !dbg !14005
  store i8* %157, i8** %start114, align 8, !dbg !14006, !tbaa !2794
  store i32 0, i32* %cleanup.dest.slot, !dbg !14007
  br label %cleanup.115, !dbg !14007

cleanup.115:                                      ; preds = %if.end.108, %if.then.107
  call void @llvm.lifetime.end(i64 1, i8* %isCdata) #2, !dbg !14007
  %159 = bitcast i32* %result to i8*, !dbg !14008
  call void @llvm.lifetime.end(i64 4, i8* %159) #2, !dbg !14008
  %cleanup.dest.117 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.117, label %cleanup.166 [
    i32 0, label %cleanup.cont.118
  ]

cleanup.cont.118:                                 ; preds = %cleanup.115
  br label %if.end.141, !dbg !14010

if.else:                                          ; preds = %if.end.70
  %160 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14011, !tbaa !2289
  %m_tempPool119 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %160, i32 0, i32 79, !dbg !14013
  %161 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !14014, !tbaa !2289
  %162 = load i32, i32* %i, align 4, !dbg !14015, !tbaa !3391
  %idxprom120 = sext i32 %162 to i64, !dbg !14016
  %163 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14017, !tbaa !2289
  %m_atts121 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %163, i32 0, i32 74, !dbg !14018
  %164 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts121, align 8, !dbg !14018, !tbaa !2425
  %arrayidx122 = getelementptr %struct.ATTRIBUTE, %struct.ATTRIBUTE* %164, i64 %idxprom120, !dbg !14016
  %valuePtr123 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx122, i32 0, i32 1, !dbg !14019
  %165 = load i8*, i8** %valuePtr123, align 8, !dbg !14019, !tbaa !13978
  %166 = load i32, i32* %i, align 4, !dbg !14020, !tbaa !3391
  %idxprom124 = sext i32 %166 to i64, !dbg !14021
  %167 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14022, !tbaa !2289
  %m_atts125 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %167, i32 0, i32 74, !dbg !14023
  %168 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts125, align 8, !dbg !14023, !tbaa !2425
  %arrayidx126 = getelementptr %struct.ATTRIBUTE, %struct.ATTRIBUTE* %168, i64 %idxprom124, !dbg !14021
  %valueEnd127 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx126, i32 0, i32 2, !dbg !14024
  %169 = load i8*, i8** %valueEnd127, align 8, !dbg !14024, !tbaa !13984
  %call128 = call i8* @poolStoreString(%struct.STRING_POOL* %m_tempPool119, %struct.encoding* %161, i8* %165, i8* %169), !dbg !14025
  %170 = load i32, i32* %attIndex, align 4, !dbg !14026, !tbaa !3391
  %idxprom129 = sext i32 %170 to i64, !dbg !14027
  %171 = load i8**, i8*** %appAtts, align 8, !dbg !14027, !tbaa !2289
  %arrayidx130 = getelementptr i8*, i8** %171, i64 %idxprom129, !dbg !14027
  store i8* %call128, i8** %arrayidx130, align 8, !dbg !14028, !tbaa !2289
  %172 = load i32, i32* %attIndex, align 4, !dbg !14029, !tbaa !3391
  %idxprom131 = sext i32 %172 to i64, !dbg !14031
  %173 = load i8**, i8*** %appAtts, align 8, !dbg !14031, !tbaa !2289
  %arrayidx132 = getelementptr i8*, i8** %173, i64 %idxprom131, !dbg !14031
  %174 = load i8*, i8** %arrayidx132, align 8, !dbg !14031, !tbaa !2289
  %cmp133 = icmp eq i8* %174, null, !dbg !14032
  br i1 %cmp133, label %if.then.135, label %if.end.136, !dbg !14033

if.then.135:                                      ; preds = %if.else
  store i32 1, i32* %retval, !dbg !14034
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.166, !dbg !14034

if.end.136:                                       ; preds = %if.else
  %175 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14035, !tbaa !2289
  %m_tempPool137 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %175, i32 0, i32 79, !dbg !14036
  %ptr138 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool137, i32 0, i32 3, !dbg !14037
  %176 = load i8*, i8** %ptr138, align 8, !dbg !14037, !tbaa !2798
  %177 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14038, !tbaa !2289
  %m_tempPool139 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %177, i32 0, i32 79, !dbg !14039
  %start140 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool139, i32 0, i32 4, !dbg !14040
  store i8* %176, i8** %start140, align 8, !dbg !14041, !tbaa !2794
  br label %if.end.141

if.end.141:                                       ; preds = %if.end.136, %cleanup.cont.118
  %178 = load %struct.attribute_id*, %struct.attribute_id** %attId, align 8, !dbg !14042, !tbaa !2289
  %prefix = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %178, i32 0, i32 1, !dbg !14043
  %179 = load %struct.prefix*, %struct.prefix** %prefix, align 8, !dbg !14043, !tbaa !3730
  %tobool142 = icmp ne %struct.prefix* %179, null, !dbg !14042
  br i1 %tobool142, label %if.then.143, label %if.else.163, !dbg !14044

if.then.143:                                      ; preds = %if.end.141
  %180 = load %struct.attribute_id*, %struct.attribute_id** %attId, align 8, !dbg !14045, !tbaa !2289
  %xmlns = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %180, i32 0, i32 3, !dbg !14046
  %181 = load i8, i8* %xmlns, align 1, !dbg !14046, !tbaa !3735
  %tobool144 = icmp ne i8 %181, 0, !dbg !14045
  br i1 %tobool144, label %if.then.145, label %if.else.157, !dbg !14047

if.then.145:                                      ; preds = %if.then.143
  %182 = bitcast i32* %result146 to i8*, !dbg !14048
  call void @llvm.lifetime.start(i64 4, i8* %182) #2, !dbg !14048
  call void @llvm.dbg.declare(metadata i32* %result146, metadata !1572, metadata !2293), !dbg !14049
  %183 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14050, !tbaa !2289
  %184 = load %struct.attribute_id*, %struct.attribute_id** %attId, align 8, !dbg !14051, !tbaa !2289
  %prefix147 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %184, i32 0, i32 1, !dbg !14052
  %185 = load %struct.prefix*, %struct.prefix** %prefix147, align 8, !dbg !14052, !tbaa !3730
  %186 = load %struct.attribute_id*, %struct.attribute_id** %attId, align 8, !dbg !14053, !tbaa !2289
  %187 = load i32, i32* %attIndex, align 4, !dbg !14054, !tbaa !3391
  %idxprom148 = sext i32 %187 to i64, !dbg !14055
  %188 = load i8**, i8*** %appAtts, align 8, !dbg !14055, !tbaa !2289
  %arrayidx149 = getelementptr i8*, i8** %188, i64 %idxprom148, !dbg !14055
  %189 = load i8*, i8** %arrayidx149, align 8, !dbg !14055, !tbaa !2289
  %190 = load %struct.binding**, %struct.binding*** %bindingsPtr.addr, align 8, !dbg !14056, !tbaa !2289
  %call150 = call i32 @addBinding(%struct.XML_ParserStruct* %183, %struct.prefix* %185, %struct.attribute_id* %186, i8* %189, %struct.binding** %190), !dbg !14057
  store i32 %call150, i32* %result146, align 4, !dbg !14049, !tbaa !2307
  %191 = load i32, i32* %result146, align 4, !dbg !14058, !tbaa !2307
  %tobool151 = icmp ne i32 %191, 0, !dbg !14058
  br i1 %tobool151, label %if.then.152, label %if.end.153, !dbg !14060

if.then.152:                                      ; preds = %if.then.145
  %192 = load i32, i32* %result146, align 4, !dbg !14061, !tbaa !2307
  store i32 %192, i32* %retval, !dbg !14062
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.154, !dbg !14062

if.end.153:                                       ; preds = %if.then.145
  %193 = load i32, i32* %attIndex, align 4, !dbg !14063, !tbaa !3391
  %dec = add i32 %193, -1, !dbg !14063
  store i32 %dec, i32* %attIndex, align 4, !dbg !14063, !tbaa !3391
  store i32 0, i32* %cleanup.dest.slot, !dbg !14064
  br label %cleanup.154, !dbg !14064

cleanup.154:                                      ; preds = %if.end.153, %if.then.152
  %194 = bitcast i32* %result146 to i8*, !dbg !14065
  call void @llvm.lifetime.end(i64 4, i8* %194) #2, !dbg !14065
  %cleanup.dest.155 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.155, label %cleanup.166 [
    i32 0, label %cleanup.cont.156
  ]

cleanup.cont.156:                                 ; preds = %cleanup.154
  br label %if.end.162, !dbg !14067

if.else.157:                                      ; preds = %if.then.143
  %195 = load i32, i32* %attIndex, align 4, !dbg !14068, !tbaa !3391
  %inc158 = add i32 %195, 1, !dbg !14068
  store i32 %inc158, i32* %attIndex, align 4, !dbg !14068, !tbaa !3391
  %196 = load i32, i32* %nPrefixes, align 4, !dbg !14070, !tbaa !3391
  %inc159 = add i32 %196, 1, !dbg !14070
  store i32 %inc159, i32* %nPrefixes, align 4, !dbg !14070, !tbaa !3391
  %197 = load %struct.attribute_id*, %struct.attribute_id** %attId, align 8, !dbg !14071, !tbaa !2289
  %name160 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %197, i32 0, i32 0, !dbg !14072
  %198 = load i8*, i8** %name160, align 8, !dbg !14072, !tbaa !3701
  %arrayidx161 = getelementptr i8, i8* %198, i64 -1, !dbg !14073
  store i8 2, i8* %arrayidx161, align 1, !dbg !14074, !tbaa !2307
  br label %if.end.162

if.end.162:                                       ; preds = %if.else.157, %cleanup.cont.156
  br label %if.end.165, !dbg !14075

if.else.163:                                      ; preds = %if.end.141
  %199 = load i32, i32* %attIndex, align 4, !dbg !14076, !tbaa !3391
  %inc164 = add i32 %199, 1, !dbg !14076
  store i32 %inc164, i32* %attIndex, align 4, !dbg !14076, !tbaa !3391
  br label %if.end.165

if.end.165:                                       ; preds = %if.else.163, %if.end.162
  store i32 0, i32* %cleanup.dest.slot, !dbg !14077
  br label %cleanup.166, !dbg !14077

cleanup.166:                                      ; preds = %if.end.165, %cleanup.154, %if.then.135, %cleanup.115, %if.end.69, %if.then.56
  %200 = bitcast %struct.attribute_id** %attId to i8*, !dbg !14078
  call void @llvm.lifetime.end(i64 8, i8* %200) #2, !dbg !14078
  %201 = bitcast %struct.ATTRIBUTE** %currAtt to i8*, !dbg !14078
  call void @llvm.lifetime.end(i64 8, i8* %201) #2, !dbg !14078
  %cleanup.dest.168 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.168, label %cleanup.690 [
    i32 0, label %cleanup.cont.169
  ]

cleanup.cont.169:                                 ; preds = %cleanup.166
  br label %for.inc.170, !dbg !14079

for.inc.170:                                      ; preds = %cleanup.cont.169
  %202 = load i32, i32* %i, align 4, !dbg !14080, !tbaa !3391
  %inc171 = add i32 %202, 1, !dbg !14080
  store i32 %inc171, i32* %i, align 4, !dbg !14080, !tbaa !3391
  br label %for.cond, !dbg !14081

for.end.172:                                      ; preds = %for.cond
  %203 = load i32, i32* %attIndex, align 4, !dbg !14082, !tbaa !3391
  %204 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14083, !tbaa !2289
  %m_nSpecifiedAtts = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %204, i32 0, i32 72, !dbg !14084
  store i32 %203, i32* %m_nSpecifiedAtts, align 4, !dbg !14085, !tbaa !3035
  %205 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType, align 8, !dbg !14086, !tbaa !2289
  %idAtt = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %205, i32 0, i32 2, !dbg !14088
  %206 = load %struct.attribute_id*, %struct.attribute_id** %idAtt, align 8, !dbg !14088, !tbaa !3835
  %tobool173 = icmp ne %struct.attribute_id* %206, null, !dbg !14086
  br i1 %tobool173, label %land.lhs.true.174, label %if.else.196, !dbg !14089

land.lhs.true.174:                                ; preds = %for.end.172
  %207 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType, align 8, !dbg !14090, !tbaa !2289
  %idAtt175 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %207, i32 0, i32 2, !dbg !14092
  %208 = load %struct.attribute_id*, %struct.attribute_id** %idAtt175, align 8, !dbg !14092, !tbaa !3835
  %name176 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %208, i32 0, i32 0, !dbg !14093
  %209 = load i8*, i8** %name176, align 8, !dbg !14093, !tbaa !3701
  %arrayidx177 = getelementptr i8, i8* %209, i64 -1, !dbg !14094
  %210 = load i8, i8* %arrayidx177, align 1, !dbg !14094, !tbaa !2307
  %conv178 = sext i8 %210 to i32, !dbg !14094
  %tobool179 = icmp ne i32 %conv178, 0, !dbg !14094
  br i1 %tobool179, label %if.then.180, label %if.else.196, !dbg !14095

if.then.180:                                      ; preds = %land.lhs.true.174
  store i32 0, i32* %i, align 4, !dbg !14096, !tbaa !3391
  br label %for.cond.181, !dbg !14099

for.cond.181:                                     ; preds = %for.inc.193, %if.then.180
  %211 = load i32, i32* %i, align 4, !dbg !14100, !tbaa !3391
  %212 = load i32, i32* %attIndex, align 4, !dbg !14104, !tbaa !3391
  %cmp182 = icmp slt i32 %211, %212, !dbg !14105
  br i1 %cmp182, label %for.body.184, label %for.end.195, !dbg !14106

for.body.184:                                     ; preds = %for.cond.181
  %213 = load i32, i32* %i, align 4, !dbg !14107, !tbaa !3391
  %idxprom185 = sext i32 %213 to i64, !dbg !14109
  %214 = load i8**, i8*** %appAtts, align 8, !dbg !14109, !tbaa !2289
  %arrayidx186 = getelementptr i8*, i8** %214, i64 %idxprom185, !dbg !14109
  %215 = load i8*, i8** %arrayidx186, align 8, !dbg !14109, !tbaa !2289
  %216 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType, align 8, !dbg !14110, !tbaa !2289
  %idAtt187 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %216, i32 0, i32 2, !dbg !14111
  %217 = load %struct.attribute_id*, %struct.attribute_id** %idAtt187, align 8, !dbg !14111, !tbaa !3835
  %name188 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %217, i32 0, i32 0, !dbg !14112
  %218 = load i8*, i8** %name188, align 8, !dbg !14112, !tbaa !3701
  %cmp189 = icmp eq i8* %215, %218, !dbg !14113
  br i1 %cmp189, label %if.then.191, label %if.end.192, !dbg !14114

if.then.191:                                      ; preds = %for.body.184
  %219 = load i32, i32* %i, align 4, !dbg !14115, !tbaa !3391
  %220 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14117, !tbaa !2289
  %m_idAttIndex = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %220, i32 0, i32 73, !dbg !14118
  store i32 %219, i32* %m_idAttIndex, align 4, !dbg !14119, !tbaa !4821
  br label %for.end.195, !dbg !14120

if.end.192:                                       ; preds = %for.body.184
  br label %for.inc.193, !dbg !14121

for.inc.193:                                      ; preds = %if.end.192
  %221 = load i32, i32* %i, align 4, !dbg !14123, !tbaa !3391
  %add194 = add i32 %221, 2, !dbg !14123
  store i32 %add194, i32* %i, align 4, !dbg !14123, !tbaa !3391
  br label %for.cond.181, !dbg !14124

for.end.195:                                      ; preds = %if.then.191, %for.cond.181
  br label %if.end.198, !dbg !14125

if.else.196:                                      ; preds = %land.lhs.true.174, %for.end.172
  %222 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14126, !tbaa !2289
  %m_idAttIndex197 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %222, i32 0, i32 73, !dbg !14127
  store i32 -1, i32* %m_idAttIndex197, align 4, !dbg !14128, !tbaa !4821
  br label %if.end.198

if.end.198:                                       ; preds = %if.else.196, %for.end.195
  store i32 0, i32* %i, align 4, !dbg !14129, !tbaa !3391
  br label %for.cond.199, !dbg !14130

for.cond.199:                                     ; preds = %for.inc.266, %if.end.198
  %223 = load i32, i32* %i, align 4, !dbg !14131, !tbaa !3391
  %224 = load i32, i32* %nDefaultAtts, align 4, !dbg !14134, !tbaa !3391
  %cmp200 = icmp slt i32 %223, %224, !dbg !14135
  br i1 %cmp200, label %for.body.202, label %for.end.268, !dbg !14136

for.body.202:                                     ; preds = %for.cond.199
  %225 = bitcast %struct.DEFAULT_ATTRIBUTE** %da to i8*, !dbg !14137
  call void @llvm.lifetime.start(i64 8, i8* %225) #2, !dbg !14137
  call void @llvm.dbg.declare(metadata %struct.DEFAULT_ATTRIBUTE** %da, metadata !1577, metadata !2293), !dbg !14138
  %226 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType, align 8, !dbg !14139, !tbaa !2289
  %defaultAtts203 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %226, i32 0, i32 5, !dbg !14140
  %227 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts203, align 8, !dbg !14140, !tbaa !3097
  %228 = load i32, i32* %i, align 4, !dbg !14141, !tbaa !3391
  %idx.ext204 = sext i32 %228 to i64, !dbg !14142
  %add.ptr205 = getelementptr %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %227, i64 %idx.ext204, !dbg !14142
  store %struct.DEFAULT_ATTRIBUTE* %add.ptr205, %struct.DEFAULT_ATTRIBUTE** %da, align 8, !dbg !14138, !tbaa !2289
  %229 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8, !dbg !14143, !tbaa !2289
  %id206 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %229, i32 0, i32 0, !dbg !14144
  %230 = load %struct.attribute_id*, %struct.attribute_id** %id206, align 8, !dbg !14144, !tbaa !3891
  %name207 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %230, i32 0, i32 0, !dbg !14145
  %231 = load i8*, i8** %name207, align 8, !dbg !14145, !tbaa !3701
  %arrayidx208 = getelementptr i8, i8* %231, i64 -1, !dbg !14146
  %232 = load i8, i8* %arrayidx208, align 1, !dbg !14146, !tbaa !2307
  %tobool209 = icmp ne i8 %232, 0, !dbg !14146
  br i1 %tobool209, label %if.end.262, label %land.lhs.true.210, !dbg !14147

land.lhs.true.210:                                ; preds = %for.body.202
  %233 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8, !dbg !14148, !tbaa !2289
  %value = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %233, i32 0, i32 2, !dbg !14150
  %234 = load i8*, i8** %value, align 8, !dbg !14150, !tbaa !3916
  %tobool211 = icmp ne i8* %234, null, !dbg !14151
  br i1 %tobool211, label %if.then.212, label %if.end.262, !dbg !14152

if.then.212:                                      ; preds = %land.lhs.true.210
  %235 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8, !dbg !14153, !tbaa !2289
  %id213 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %235, i32 0, i32 0, !dbg !14154
  %236 = load %struct.attribute_id*, %struct.attribute_id** %id213, align 8, !dbg !14154, !tbaa !3891
  %prefix214 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %236, i32 0, i32 1, !dbg !14155
  %237 = load %struct.prefix*, %struct.prefix** %prefix214, align 8, !dbg !14155, !tbaa !3730
  %tobool215 = icmp ne %struct.prefix* %237, null, !dbg !14153
  br i1 %tobool215, label %if.then.216, label %if.else.248, !dbg !14156

if.then.216:                                      ; preds = %if.then.212
  %238 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8, !dbg !14157, !tbaa !2289
  %id217 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %238, i32 0, i32 0, !dbg !14158
  %239 = load %struct.attribute_id*, %struct.attribute_id** %id217, align 8, !dbg !14158, !tbaa !3891
  %xmlns218 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %239, i32 0, i32 3, !dbg !14159
  %240 = load i8, i8* %xmlns218, align 1, !dbg !14159, !tbaa !3735
  %tobool219 = icmp ne i8 %240, 0, !dbg !14157
  br i1 %tobool219, label %if.then.220, label %if.else.233, !dbg !14160

if.then.220:                                      ; preds = %if.then.216
  %241 = bitcast i32* %result221 to i8*, !dbg !14161
  call void @llvm.lifetime.start(i64 4, i8* %241) #2, !dbg !14161
  call void @llvm.dbg.declare(metadata i32* %result221, metadata !1583, metadata !2293), !dbg !14162
  %242 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14163, !tbaa !2289
  %243 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8, !dbg !14164, !tbaa !2289
  %id222 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %243, i32 0, i32 0, !dbg !14165
  %244 = load %struct.attribute_id*, %struct.attribute_id** %id222, align 8, !dbg !14165, !tbaa !3891
  %prefix223 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %244, i32 0, i32 1, !dbg !14166
  %245 = load %struct.prefix*, %struct.prefix** %prefix223, align 8, !dbg !14166, !tbaa !3730
  %246 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8, !dbg !14167, !tbaa !2289
  %id224 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %246, i32 0, i32 0, !dbg !14168
  %247 = load %struct.attribute_id*, %struct.attribute_id** %id224, align 8, !dbg !14168, !tbaa !3891
  %248 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8, !dbg !14169, !tbaa !2289
  %value225 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %248, i32 0, i32 2, !dbg !14170
  %249 = load i8*, i8** %value225, align 8, !dbg !14170, !tbaa !3916
  %250 = load %struct.binding**, %struct.binding*** %bindingsPtr.addr, align 8, !dbg !14171, !tbaa !2289
  %call226 = call i32 @addBinding(%struct.XML_ParserStruct* %242, %struct.prefix* %245, %struct.attribute_id* %247, i8* %249, %struct.binding** %250), !dbg !14172
  store i32 %call226, i32* %result221, align 4, !dbg !14162, !tbaa !2307
  %251 = load i32, i32* %result221, align 4, !dbg !14173, !tbaa !2307
  %tobool227 = icmp ne i32 %251, 0, !dbg !14173
  br i1 %tobool227, label %if.then.228, label %if.end.229, !dbg !14175

if.then.228:                                      ; preds = %if.then.220
  %252 = load i32, i32* %result221, align 4, !dbg !14176, !tbaa !2307
  store i32 %252, i32* %retval, !dbg !14177
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.230, !dbg !14177

if.end.229:                                       ; preds = %if.then.220
  store i32 0, i32* %cleanup.dest.slot, !dbg !14178
  br label %cleanup.230, !dbg !14178

cleanup.230:                                      ; preds = %if.end.229, %if.then.228
  %253 = bitcast i32* %result221 to i8*, !dbg !14179
  call void @llvm.lifetime.end(i64 4, i8* %253) #2, !dbg !14179
  %cleanup.dest.231 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.231, label %cleanup.263 [
    i32 0, label %cleanup.cont.232
  ]

cleanup.cont.232:                                 ; preds = %cleanup.230
  br label %if.end.247, !dbg !14181

if.else.233:                                      ; preds = %if.then.216
  %254 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8, !dbg !14182, !tbaa !2289
  %id234 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %254, i32 0, i32 0, !dbg !14184
  %255 = load %struct.attribute_id*, %struct.attribute_id** %id234, align 8, !dbg !14184, !tbaa !3891
  %name235 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %255, i32 0, i32 0, !dbg !14185
  %256 = load i8*, i8** %name235, align 8, !dbg !14185, !tbaa !3701
  %arrayidx236 = getelementptr i8, i8* %256, i64 -1, !dbg !14186
  store i8 2, i8* %arrayidx236, align 1, !dbg !14187, !tbaa !2307
  %257 = load i32, i32* %nPrefixes, align 4, !dbg !14188, !tbaa !3391
  %inc237 = add i32 %257, 1, !dbg !14188
  store i32 %inc237, i32* %nPrefixes, align 4, !dbg !14188, !tbaa !3391
  %258 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8, !dbg !14189, !tbaa !2289
  %id238 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %258, i32 0, i32 0, !dbg !14190
  %259 = load %struct.attribute_id*, %struct.attribute_id** %id238, align 8, !dbg !14190, !tbaa !3891
  %name239 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %259, i32 0, i32 0, !dbg !14191
  %260 = load i8*, i8** %name239, align 8, !dbg !14191, !tbaa !3701
  %261 = load i32, i32* %attIndex, align 4, !dbg !14192, !tbaa !3391
  %inc240 = add i32 %261, 1, !dbg !14192
  store i32 %inc240, i32* %attIndex, align 4, !dbg !14192, !tbaa !3391
  %idxprom241 = sext i32 %261 to i64, !dbg !14193
  %262 = load i8**, i8*** %appAtts, align 8, !dbg !14193, !tbaa !2289
  %arrayidx242 = getelementptr i8*, i8** %262, i64 %idxprom241, !dbg !14193
  store i8* %260, i8** %arrayidx242, align 8, !dbg !14194, !tbaa !2289
  %263 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8, !dbg !14195, !tbaa !2289
  %value243 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %263, i32 0, i32 2, !dbg !14196
  %264 = load i8*, i8** %value243, align 8, !dbg !14196, !tbaa !3916
  %265 = load i32, i32* %attIndex, align 4, !dbg !14197, !tbaa !3391
  %inc244 = add i32 %265, 1, !dbg !14197
  store i32 %inc244, i32* %attIndex, align 4, !dbg !14197, !tbaa !3391
  %idxprom245 = sext i32 %265 to i64, !dbg !14198
  %266 = load i8**, i8*** %appAtts, align 8, !dbg !14198, !tbaa !2289
  %arrayidx246 = getelementptr i8*, i8** %266, i64 %idxprom245, !dbg !14198
  store i8* %264, i8** %arrayidx246, align 8, !dbg !14199, !tbaa !2289
  br label %if.end.247

if.end.247:                                       ; preds = %if.else.233, %cleanup.cont.232
  br label %if.end.261, !dbg !14200

if.else.248:                                      ; preds = %if.then.212
  %267 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8, !dbg !14201, !tbaa !2289
  %id249 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %267, i32 0, i32 0, !dbg !14203
  %268 = load %struct.attribute_id*, %struct.attribute_id** %id249, align 8, !dbg !14203, !tbaa !3891
  %name250 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %268, i32 0, i32 0, !dbg !14204
  %269 = load i8*, i8** %name250, align 8, !dbg !14204, !tbaa !3701
  %arrayidx251 = getelementptr i8, i8* %269, i64 -1, !dbg !14205
  store i8 1, i8* %arrayidx251, align 1, !dbg !14206, !tbaa !2307
  %270 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8, !dbg !14207, !tbaa !2289
  %id252 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %270, i32 0, i32 0, !dbg !14208
  %271 = load %struct.attribute_id*, %struct.attribute_id** %id252, align 8, !dbg !14208, !tbaa !3891
  %name253 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %271, i32 0, i32 0, !dbg !14209
  %272 = load i8*, i8** %name253, align 8, !dbg !14209, !tbaa !3701
  %273 = load i32, i32* %attIndex, align 4, !dbg !14210, !tbaa !3391
  %inc254 = add i32 %273, 1, !dbg !14210
  store i32 %inc254, i32* %attIndex, align 4, !dbg !14210, !tbaa !3391
  %idxprom255 = sext i32 %273 to i64, !dbg !14211
  %274 = load i8**, i8*** %appAtts, align 8, !dbg !14211, !tbaa !2289
  %arrayidx256 = getelementptr i8*, i8** %274, i64 %idxprom255, !dbg !14211
  store i8* %272, i8** %arrayidx256, align 8, !dbg !14212, !tbaa !2289
  %275 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8, !dbg !14213, !tbaa !2289
  %value257 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %275, i32 0, i32 2, !dbg !14214
  %276 = load i8*, i8** %value257, align 8, !dbg !14214, !tbaa !3916
  %277 = load i32, i32* %attIndex, align 4, !dbg !14215, !tbaa !3391
  %inc258 = add i32 %277, 1, !dbg !14215
  store i32 %inc258, i32* %attIndex, align 4, !dbg !14215, !tbaa !3391
  %idxprom259 = sext i32 %277 to i64, !dbg !14216
  %278 = load i8**, i8*** %appAtts, align 8, !dbg !14216, !tbaa !2289
  %arrayidx260 = getelementptr i8*, i8** %278, i64 %idxprom259, !dbg !14216
  store i8* %276, i8** %arrayidx260, align 8, !dbg !14217, !tbaa !2289
  br label %if.end.261

if.end.261:                                       ; preds = %if.else.248, %if.end.247
  br label %if.end.262, !dbg !14218

if.end.262:                                       ; preds = %if.end.261, %land.lhs.true.210, %for.body.202
  store i32 0, i32* %cleanup.dest.slot, !dbg !14219
  br label %cleanup.263, !dbg !14219

cleanup.263:                                      ; preds = %if.end.262, %cleanup.230
  %279 = bitcast %struct.DEFAULT_ATTRIBUTE** %da to i8*, !dbg !14220
  call void @llvm.lifetime.end(i64 8, i8* %279) #2, !dbg !14220
  %cleanup.dest.264 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.264, label %cleanup.690 [
    i32 0, label %cleanup.cont.265
  ]

cleanup.cont.265:                                 ; preds = %cleanup.263
  br label %for.inc.266, !dbg !14221

for.inc.266:                                      ; preds = %cleanup.cont.265
  %280 = load i32, i32* %i, align 4, !dbg !14222, !tbaa !3391
  %inc267 = add i32 %280, 1, !dbg !14222
  store i32 %inc267, i32* %i, align 4, !dbg !14222, !tbaa !3391
  br label %for.cond.199, !dbg !14223

for.end.268:                                      ; preds = %for.cond.199
  %281 = load i32, i32* %attIndex, align 4, !dbg !14224, !tbaa !3391
  %idxprom269 = sext i32 %281 to i64, !dbg !14225
  %282 = load i8**, i8*** %appAtts, align 8, !dbg !14225, !tbaa !2289
  %arrayidx270 = getelementptr i8*, i8** %282, i64 %idxprom269, !dbg !14225
  store i8* null, i8** %arrayidx270, align 8, !dbg !14226, !tbaa !2289
  store i32 0, i32* %i, align 4, !dbg !14227, !tbaa !3391
  %283 = load i32, i32* %nPrefixes, align 4, !dbg !14228, !tbaa !3391
  %tobool271 = icmp ne i32 %283, 0, !dbg !14228
  br i1 %tobool271, label %if.then.272, label %if.end.548, !dbg !14229

if.then.272:                                      ; preds = %for.end.268
  %284 = bitcast i32* %j273 to i8*, !dbg !14230
  call void @llvm.lifetime.start(i64 4, i8* %284) #2, !dbg !14230
  call void @llvm.dbg.declare(metadata i32* %j273, metadata !1590, metadata !2293), !dbg !14231
  %285 = bitcast i64* %version to i8*, !dbg !14232
  call void @llvm.lifetime.start(i64 8, i8* %285) #2, !dbg !14232
  call void @llvm.dbg.declare(metadata i64* %version, metadata !1593, metadata !2293), !dbg !14233
  %286 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14234, !tbaa !2289
  %m_nsAttsVersion = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %286, i32 0, i32 76, !dbg !14235
  %287 = load i64, i64* %m_nsAttsVersion, align 8, !dbg !14235, !tbaa !2557
  store i64 %287, i64* %version, align 8, !dbg !14233, !tbaa !3400
  %288 = bitcast i32* %nsAttsSize to i8*, !dbg !14236
  call void @llvm.lifetime.start(i64 4, i8* %288) #2, !dbg !14236
  call void @llvm.dbg.declare(metadata i32* %nsAttsSize, metadata !1594, metadata !2293), !dbg !14237
  %289 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14238, !tbaa !2289
  %m_nsAttsPower = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %289, i32 0, i32 77, !dbg !14239
  %290 = load i8, i8* %m_nsAttsPower, align 1, !dbg !14239, !tbaa !2561
  %conv274 = zext i8 %290 to i32, !dbg !14240
  %shl = shl i32 1, %conv274, !dbg !14241
  store i32 %shl, i32* %nsAttsSize, align 4, !dbg !14237, !tbaa !3391
  %291 = load i32, i32* %nPrefixes, align 4, !dbg !14242, !tbaa !3391
  %shl275 = shl i32 %291, 1, !dbg !14243
  %292 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14244, !tbaa !2289
  %m_nsAttsPower276 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %292, i32 0, i32 77, !dbg !14245
  %293 = load i8, i8* %m_nsAttsPower276, align 1, !dbg !14245, !tbaa !2561
  %conv277 = zext i8 %293 to i32, !dbg !14246
  %shr = ashr i32 %shl275, %conv277, !dbg !14247
  %tobool278 = icmp ne i32 %shr, 0, !dbg !14247
  br i1 %tobool278, label %if.then.279, label %if.end.308, !dbg !14248

if.then.279:                                      ; preds = %if.then.272
  %294 = bitcast %struct.NS_ATT** %temp280 to i8*, !dbg !14249
  call void @llvm.lifetime.start(i64 8, i8* %294) #2, !dbg !14249
  call void @llvm.dbg.declare(metadata %struct.NS_ATT** %temp280, metadata !1595, metadata !2293), !dbg !14250
  br label %while.cond, !dbg !14251

while.cond:                                       ; preds = %while.body, %if.then.279
  %295 = load i32, i32* %nPrefixes, align 4, !dbg !14252, !tbaa !3391
  %296 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14255, !tbaa !2289
  %m_nsAttsPower281 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %296, i32 0, i32 77, !dbg !14256
  %297 = load i8, i8* %m_nsAttsPower281, align 1, !dbg !14257, !tbaa !2561
  %inc282 = add i8 %297, 1, !dbg !14257
  store i8 %inc282, i8* %m_nsAttsPower281, align 1, !dbg !14257, !tbaa !2561
  %conv283 = zext i8 %297 to i32, !dbg !14258
  %shr284 = ashr i32 %295, %conv283, !dbg !14259
  %tobool285 = icmp ne i32 %shr284, 0, !dbg !14251
  br i1 %tobool285, label %while.body, label %while.end, !dbg !14251

while.body:                                       ; preds = %while.cond
  br label %while.cond, !dbg !14260

while.end:                                        ; preds = %while.cond
  %298 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14262, !tbaa !2289
  %m_nsAttsPower286 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %298, i32 0, i32 77, !dbg !14264
  %299 = load i8, i8* %m_nsAttsPower286, align 1, !dbg !14264, !tbaa !2561
  %conv287 = zext i8 %299 to i32, !dbg !14265
  %cmp288 = icmp slt i32 %conv287, 3, !dbg !14266
  br i1 %cmp288, label %if.then.290, label %if.end.292, !dbg !14267

if.then.290:                                      ; preds = %while.end
  %300 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14268, !tbaa !2289
  %m_nsAttsPower291 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %300, i32 0, i32 77, !dbg !14269
  store i8 3, i8* %m_nsAttsPower291, align 1, !dbg !14270, !tbaa !2561
  br label %if.end.292, !dbg !14271

if.end.292:                                       ; preds = %if.then.290, %while.end
  %301 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14272, !tbaa !2289
  %m_nsAttsPower293 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %301, i32 0, i32 77, !dbg !14273
  %302 = load i8, i8* %m_nsAttsPower293, align 1, !dbg !14273, !tbaa !2561
  %conv294 = zext i8 %302 to i32, !dbg !14274
  %shl295 = shl i32 1, %conv294, !dbg !14275
  store i32 %shl295, i32* %nsAttsSize, align 4, !dbg !14276, !tbaa !3391
  %303 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14277, !tbaa !2289
  %m_mem296 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %303, i32 0, i32 3, !dbg !14278
  %realloc_fcn297 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem296, i32 0, i32 1, !dbg !14279
  %304 = load i8* (i8*, i64)*, i8* (i8*, i64)** %realloc_fcn297, align 8, !dbg !14279, !tbaa !5977
  %305 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14280, !tbaa !2289
  %m_nsAtts = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %305, i32 0, i32 75, !dbg !14281
  %306 = load %struct.NS_ATT*, %struct.NS_ATT** %m_nsAtts, align 8, !dbg !14281, !tbaa !2553
  %307 = bitcast %struct.NS_ATT* %306 to i8*, !dbg !14282
  %308 = load i32, i32* %nsAttsSize, align 4, !dbg !14283, !tbaa !3391
  %conv298 = sext i32 %308 to i64, !dbg !14283
  %mul299 = mul i64 %conv298, 24, !dbg !14284
  %call300 = call i8* %304(i8* %307, i64 %mul299), !dbg !14277
  %309 = bitcast i8* %call300 to %struct.NS_ATT*, !dbg !14285
  store %struct.NS_ATT* %309, %struct.NS_ATT** %temp280, align 8, !dbg !14286, !tbaa !2289
  %310 = load %struct.NS_ATT*, %struct.NS_ATT** %temp280, align 8, !dbg !14287, !tbaa !2289
  %tobool301 = icmp ne %struct.NS_ATT* %310, null, !dbg !14287
  br i1 %tobool301, label %if.end.303, label %if.then.302, !dbg !14289

if.then.302:                                      ; preds = %if.end.292
  store i32 1, i32* %retval, !dbg !14290
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.305, !dbg !14290

if.end.303:                                       ; preds = %if.end.292
  %311 = load %struct.NS_ATT*, %struct.NS_ATT** %temp280, align 8, !dbg !14291, !tbaa !2289
  %312 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14292, !tbaa !2289
  %m_nsAtts304 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %312, i32 0, i32 75, !dbg !14293
  store %struct.NS_ATT* %311, %struct.NS_ATT** %m_nsAtts304, align 8, !dbg !14294, !tbaa !2553
  store i64 0, i64* %version, align 8, !dbg !14295, !tbaa !3400
  store i32 0, i32* %cleanup.dest.slot, !dbg !14296
  br label %cleanup.305, !dbg !14296

cleanup.305:                                      ; preds = %if.end.303, %if.then.302
  %313 = bitcast %struct.NS_ATT** %temp280 to i8*, !dbg !14297
  call void @llvm.lifetime.end(i64 8, i8* %313) #2, !dbg !14297
  %cleanup.dest.306 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.306, label %cleanup.543 [
    i32 0, label %cleanup.cont.307
  ]

cleanup.cont.307:                                 ; preds = %cleanup.305
  br label %if.end.308, !dbg !14299

if.end.308:                                       ; preds = %cleanup.cont.307, %if.then.272
  %314 = load i64, i64* %version, align 8, !dbg !14300, !tbaa !3400
  %tobool309 = icmp ne i64 %314, 0, !dbg !14300
  br i1 %tobool309, label %if.end.321, label %if.then.310, !dbg !14302

if.then.310:                                      ; preds = %if.end.308
  store i64 4294967295, i64* %version, align 8, !dbg !14303, !tbaa !3400
  %315 = load i32, i32* %nsAttsSize, align 4, !dbg !14305, !tbaa !3391
  store i32 %315, i32* %j273, align 4, !dbg !14307, !tbaa !3391
  br label %for.cond.311, !dbg !14308

for.cond.311:                                     ; preds = %for.body.314, %if.then.310
  %316 = load i32, i32* %j273, align 4, !dbg !14309, !tbaa !3391
  %cmp312 = icmp ne i32 %316, 0, !dbg !14313
  br i1 %cmp312, label %for.body.314, label %for.end.320, !dbg !14314

for.body.314:                                     ; preds = %for.cond.311
  %317 = load i64, i64* %version, align 8, !dbg !14315, !tbaa !3400
  %318 = load i32, i32* %j273, align 4, !dbg !14316, !tbaa !3391
  %dec315 = add i32 %318, -1, !dbg !14316
  store i32 %dec315, i32* %j273, align 4, !dbg !14316, !tbaa !3391
  %idxprom316 = sext i32 %dec315 to i64, !dbg !14317
  %319 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14318, !tbaa !2289
  %m_nsAtts317 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %319, i32 0, i32 75, !dbg !14319
  %320 = load %struct.NS_ATT*, %struct.NS_ATT** %m_nsAtts317, align 8, !dbg !14319, !tbaa !2553
  %arrayidx318 = getelementptr %struct.NS_ATT, %struct.NS_ATT* %320, i64 %idxprom316, !dbg !14317
  %version319 = getelementptr inbounds %struct.NS_ATT, %struct.NS_ATT* %arrayidx318, i32 0, i32 0, !dbg !14320
  store i64 %317, i64* %version319, align 8, !dbg !14321, !tbaa !14322
  br label %for.cond.311, !dbg !14324

for.end.320:                                      ; preds = %for.cond.311
  br label %if.end.321, !dbg !14325

if.end.321:                                       ; preds = %for.end.320, %if.end.308
  %321 = load i64, i64* %version, align 8, !dbg !14326, !tbaa !3400
  %dec322 = add i64 %321, -1, !dbg !14326
  store i64 %dec322, i64* %version, align 8, !dbg !14326, !tbaa !3400
  %322 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14327, !tbaa !2289
  %m_nsAttsVersion323 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %322, i32 0, i32 76, !dbg !14328
  store i64 %dec322, i64* %m_nsAttsVersion323, align 8, !dbg !14329, !tbaa !2557
  br label %for.cond.324, !dbg !14330

for.cond.324:                                     ; preds = %for.inc.540, %if.end.321
  %323 = load i32, i32* %i, align 4, !dbg !14331, !tbaa !3391
  %324 = load i32, i32* %attIndex, align 4, !dbg !14334, !tbaa !3391
  %cmp325 = icmp slt i32 %323, %324, !dbg !14335
  br i1 %cmp325, label %for.body.327, label %for.end.542, !dbg !14336

for.body.327:                                     ; preds = %for.cond.324
  %325 = bitcast i8** %s to i8*, !dbg !14337
  call void @llvm.lifetime.start(i64 8, i8* %325) #2, !dbg !14337
  call void @llvm.dbg.declare(metadata i8** %s, metadata !1598, metadata !2293), !dbg !14338
  %326 = load i32, i32* %i, align 4, !dbg !14339, !tbaa !3391
  %idxprom328 = sext i32 %326 to i64, !dbg !14340
  %327 = load i8**, i8*** %appAtts, align 8, !dbg !14340, !tbaa !2289
  %arrayidx329 = getelementptr i8*, i8** %327, i64 %idxprom328, !dbg !14340
  %328 = load i8*, i8** %arrayidx329, align 8, !dbg !14340, !tbaa !2289
  store i8* %328, i8** %s, align 8, !dbg !14338, !tbaa !2289
  %329 = load i8*, i8** %s, align 8, !dbg !14341, !tbaa !2289
  %arrayidx330 = getelementptr i8, i8* %329, i64 -1, !dbg !14341
  %330 = load i8, i8* %arrayidx330, align 1, !dbg !14341, !tbaa !2307
  %conv331 = sext i8 %330 to i32, !dbg !14341
  %cmp332 = icmp eq i32 %conv331, 2, !dbg !14342
  br i1 %cmp332, label %if.then.334, label %if.else.534, !dbg !14343

if.then.334:                                      ; preds = %for.body.327
  %331 = bitcast %struct.attribute_id** %id335 to i8*, !dbg !14344
  call void @llvm.lifetime.start(i64 8, i8* %331) #2, !dbg !14344
  call void @llvm.dbg.declare(metadata %struct.attribute_id** %id335, metadata !1602, metadata !2293), !dbg !14345
  %332 = bitcast %struct.binding** %b to i8*, !dbg !14346
  call void @llvm.lifetime.start(i64 8, i8* %332) #2, !dbg !14346
  call void @llvm.dbg.declare(metadata %struct.binding** %b, metadata !1605, metadata !2293), !dbg !14347
  %333 = bitcast i64* %uriHash to i8*, !dbg !14348
  call void @llvm.lifetime.start(i64 8, i8* %333) #2, !dbg !14348
  call void @llvm.dbg.declare(metadata i64* %uriHash, metadata !1608, metadata !2293), !dbg !14349
  %334 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14350, !tbaa !2289
  %m_hash_secret_salt = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %334, i32 0, i32 89, !dbg !14351
  %335 = load i64, i64* %m_hash_secret_salt, align 8, !dbg !14351, !tbaa !3068
  store i64 %335, i64* %uriHash, align 8, !dbg !14349, !tbaa !3400
  %336 = load i8*, i8** %s, align 8, !dbg !14352, !tbaa !2289
  %arrayidx336 = getelementptr i8, i8* %336, i64 -1, !dbg !14353
  store i8 0, i8* %arrayidx336, align 1, !dbg !14354, !tbaa !2307
  %337 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14355, !tbaa !2289
  %338 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !14356, !tbaa !2289
  %attributeIds = getelementptr inbounds %struct.DTD, %struct.DTD* %338, i32 0, i32 2, !dbg !14357
  %339 = load i8*, i8** %s, align 8, !dbg !14358, !tbaa !2289
  %call337 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %337, %struct.HASH_TABLE* %attributeIds, i8* %339, i64 0), !dbg !14359
  %340 = bitcast %struct.NAMED* %call337 to %struct.attribute_id*, !dbg !14360
  store %struct.attribute_id* %340, %struct.attribute_id** %id335, align 8, !dbg !14361, !tbaa !2289
  %341 = load %struct.attribute_id*, %struct.attribute_id** %id335, align 8, !dbg !14362, !tbaa !2289
  %prefix338 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %341, i32 0, i32 1, !dbg !14363
  %342 = load %struct.prefix*, %struct.prefix** %prefix338, align 8, !dbg !14363, !tbaa !3730
  %binding339 = getelementptr inbounds %struct.prefix, %struct.prefix* %342, i32 0, i32 1, !dbg !14364
  %343 = load %struct.binding*, %struct.binding** %binding339, align 8, !dbg !14364, !tbaa !12624
  store %struct.binding* %343, %struct.binding** %b, align 8, !dbg !14365, !tbaa !2289
  %344 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !14366, !tbaa !2289
  %tobool340 = icmp ne %struct.binding* %344, null, !dbg !14366
  br i1 %tobool340, label %if.end.342, label %if.then.341, !dbg !14368

if.then.341:                                      ; preds = %if.then.334
  store i32 27, i32* %retval, !dbg !14369
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.529, !dbg !14369

if.end.342:                                       ; preds = %if.then.334
  store i32 0, i32* %j273, align 4, !dbg !14370, !tbaa !3391
  br label %for.cond.343, !dbg !14371

for.cond.343:                                     ; preds = %for.inc.368, %if.end.342
  %345 = load i32, i32* %j273, align 4, !dbg !14372, !tbaa !3391
  %346 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !14375, !tbaa !2289
  %uriLen = getelementptr inbounds %struct.binding, %struct.binding* %346, i32 0, i32 5, !dbg !14376
  %347 = load i32, i32* %uriLen, align 4, !dbg !14376, !tbaa !13346
  %cmp344 = icmp slt i32 %345, %347, !dbg !14377
  br i1 %cmp344, label %for.body.346, label %for.end.370, !dbg !14378

for.body.346:                                     ; preds = %for.cond.343
  call void @llvm.lifetime.start(i64 1, i8* %c) #2, !dbg !14379
  call void @llvm.dbg.declare(metadata i8* %c, metadata !1609, metadata !2293), !dbg !14380
  %348 = load i32, i32* %j273, align 4, !dbg !14381, !tbaa !3391
  %idxprom347 = sext i32 %348 to i64, !dbg !14382
  %349 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !14382, !tbaa !2289
  %uri348 = getelementptr inbounds %struct.binding, %struct.binding* %349, i32 0, i32 4, !dbg !14383
  %350 = load i8*, i8** %uri348, align 8, !dbg !14383, !tbaa !4596
  %arrayidx349 = getelementptr i8, i8* %350, i64 %idxprom347, !dbg !14382
  %351 = load i8, i8* %arrayidx349, align 1, !dbg !14382, !tbaa !2307
  store i8 %351, i8* %c, align 1, !dbg !14380, !tbaa !2307
  %352 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14384, !tbaa !2289
  %m_tempPool350 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %352, i32 0, i32 79, !dbg !14386
  %ptr351 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool350, i32 0, i32 3, !dbg !14387
  %353 = load i8*, i8** %ptr351, align 8, !dbg !14387, !tbaa !2798
  %354 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14388, !tbaa !2289
  %m_tempPool352 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %354, i32 0, i32 79, !dbg !14389
  %end = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool352, i32 0, i32 2, !dbg !14390
  %355 = load i8*, i8** %end, align 8, !dbg !14390, !tbaa !2802
  %cmp353 = icmp eq i8* %353, %355, !dbg !14391
  br i1 %cmp353, label %land.lhs.true.355, label %cond.false, !dbg !14392

land.lhs.true.355:                                ; preds = %for.body.346
  %356 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14393, !tbaa !2289
  %m_tempPool356 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %356, i32 0, i32 79, !dbg !14395
  %call357 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool356), !dbg !14396
  %tobool358 = icmp ne i8 %call357, 0, !dbg !14396
  br i1 %tobool358, label %cond.false, label %cond.true, !dbg !14397

cond.true:                                        ; preds = %land.lhs.true.355
  br i1 false, label %if.end.362, label %if.then.361, !dbg !14398

cond.false:                                       ; preds = %land.lhs.true.355, %for.body.346
  %357 = load i8, i8* %c, align 1, !dbg !14400, !tbaa !2307
  %358 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14403, !tbaa !2289
  %m_tempPool359 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %358, i32 0, i32 79, !dbg !14404
  %ptr360 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool359, i32 0, i32 3, !dbg !14405
  %359 = load i8*, i8** %ptr360, align 8, !dbg !14406, !tbaa !2798
  %incdec.ptr = getelementptr i8, i8* %359, i32 1, !dbg !14406
  store i8* %incdec.ptr, i8** %ptr360, align 8, !dbg !14406, !tbaa !2798
  store i8 %357, i8* %359, align 1, !dbg !14407, !tbaa !2307
  br i1 true, label %if.end.362, label %if.then.361, !dbg !14397

if.then.361:                                      ; preds = %cond.false, %cond.true
  store i32 1, i32* %retval, !dbg !14408
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.365, !dbg !14408

if.end.362:                                       ; preds = %cond.false, %cond.true
  %360 = load i64, i64* %uriHash, align 8, !dbg !14409, !tbaa !3400
  %mul363 = mul i64 %360, 1000003, !dbg !14410
  %361 = load i8, i8* %c, align 1, !dbg !14411, !tbaa !2307
  %conv364 = zext i8 %361 to i64, !dbg !14412
  %xor = xor i64 %mul363, %conv364, !dbg !14413
  store i64 %xor, i64* %uriHash, align 8, !dbg !14414, !tbaa !3400
  store i32 0, i32* %cleanup.dest.slot, !dbg !14415
  br label %cleanup.365, !dbg !14415

cleanup.365:                                      ; preds = %if.end.362, %if.then.361
  call void @llvm.lifetime.end(i64 1, i8* %c) #2, !dbg !14415
  %cleanup.dest.366 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.366, label %cleanup.529 [
    i32 0, label %cleanup.cont.367
  ]

cleanup.cont.367:                                 ; preds = %cleanup.365
  br label %for.inc.368, !dbg !14416

for.inc.368:                                      ; preds = %cleanup.cont.367
  %362 = load i32, i32* %j273, align 4, !dbg !14417, !tbaa !3391
  %inc369 = add i32 %362, 1, !dbg !14417
  store i32 %inc369, i32* %j273, align 4, !dbg !14417, !tbaa !3391
  br label %for.cond.343, !dbg !14418

for.end.370:                                      ; preds = %for.cond.343
  br label %while.cond.371, !dbg !14419

while.cond.371:                                   ; preds = %while.body.376, %for.end.370
  %363 = load i8*, i8** %s, align 8, !dbg !14420, !tbaa !2289
  %incdec.ptr372 = getelementptr i8, i8* %363, i32 1, !dbg !14420
  store i8* %incdec.ptr372, i8** %s, align 8, !dbg !14420, !tbaa !2289
  %364 = load i8, i8* %363, align 1, !dbg !14423, !tbaa !2307
  %conv373 = sext i8 %364 to i32, !dbg !14423
  %cmp374 = icmp ne i32 %conv373, 58, !dbg !14424
  br i1 %cmp374, label %while.body.376, label %while.end.377, !dbg !14419

while.body.376:                                   ; preds = %while.cond.371
  br label %while.cond.371, !dbg !14425

while.end.377:                                    ; preds = %while.cond.371
  br label %do.body, !dbg !14427

do.body:                                          ; preds = %do.cond, %while.end.377
  call void @llvm.lifetime.start(i64 1, i8* %c378) #2, !dbg !14428
  call void @llvm.dbg.declare(metadata i8* %c378, metadata !1613, metadata !2293), !dbg !14429
  %365 = load i8*, i8** %s, align 8, !dbg !14430, !tbaa !2289
  %366 = load i8, i8* %365, align 1, !dbg !14431, !tbaa !2307
  store i8 %366, i8* %c378, align 1, !dbg !14429, !tbaa !2307
  %367 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14432, !tbaa !2289
  %m_tempPool379 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %367, i32 0, i32 79, !dbg !14434
  %ptr380 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool379, i32 0, i32 3, !dbg !14435
  %368 = load i8*, i8** %ptr380, align 8, !dbg !14435, !tbaa !2798
  %369 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14436, !tbaa !2289
  %m_tempPool381 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %369, i32 0, i32 79, !dbg !14437
  %end382 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool381, i32 0, i32 2, !dbg !14438
  %370 = load i8*, i8** %end382, align 8, !dbg !14438, !tbaa !2802
  %cmp383 = icmp eq i8* %368, %370, !dbg !14439
  br i1 %cmp383, label %land.lhs.true.385, label %cond.false.390, !dbg !14440

land.lhs.true.385:                                ; preds = %do.body
  %371 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14441, !tbaa !2289
  %m_tempPool386 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %371, i32 0, i32 79, !dbg !14443
  %call387 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool386), !dbg !14444
  %tobool388 = icmp ne i8 %call387, 0, !dbg !14444
  br i1 %tobool388, label %cond.false.390, label %cond.true.389, !dbg !14445

cond.true.389:                                    ; preds = %land.lhs.true.385
  br i1 false, label %if.end.395, label %if.then.394, !dbg !14446

cond.false.390:                                   ; preds = %land.lhs.true.385, %do.body
  %372 = load i8*, i8** %s, align 8, !dbg !14448, !tbaa !2289
  %373 = load i8, i8* %372, align 1, !dbg !14451, !tbaa !2307
  %374 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14452, !tbaa !2289
  %m_tempPool391 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %374, i32 0, i32 79, !dbg !14453
  %ptr392 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool391, i32 0, i32 3, !dbg !14454
  %375 = load i8*, i8** %ptr392, align 8, !dbg !14455, !tbaa !2798
  %incdec.ptr393 = getelementptr i8, i8* %375, i32 1, !dbg !14455
  store i8* %incdec.ptr393, i8** %ptr392, align 8, !dbg !14455, !tbaa !2798
  store i8 %373, i8* %375, align 1, !dbg !14456, !tbaa !2307
  br i1 true, label %if.end.395, label %if.then.394, !dbg !14445

if.then.394:                                      ; preds = %cond.false.390, %cond.true.389
  store i32 1, i32* %retval, !dbg !14457
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.399, !dbg !14457

if.end.395:                                       ; preds = %cond.false.390, %cond.true.389
  %376 = load i64, i64* %uriHash, align 8, !dbg !14458, !tbaa !3400
  %mul396 = mul i64 %376, 1000003, !dbg !14459
  %377 = load i8, i8* %c378, align 1, !dbg !14460, !tbaa !2307
  %conv397 = zext i8 %377 to i64, !dbg !14461
  %xor398 = xor i64 %mul396, %conv397, !dbg !14462
  store i64 %xor398, i64* %uriHash, align 8, !dbg !14463, !tbaa !3400
  store i32 0, i32* %cleanup.dest.slot, !dbg !14464
  br label %cleanup.399, !dbg !14464

cleanup.399:                                      ; preds = %if.end.395, %if.then.394
  call void @llvm.lifetime.end(i64 1, i8* %c378) #2, !dbg !14464
  %cleanup.dest.400 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.400, label %cleanup.529 [
    i32 0, label %cleanup.cont.401
  ]

cleanup.cont.401:                                 ; preds = %cleanup.399
  br label %do.cond, !dbg !14465

do.cond:                                          ; preds = %cleanup.cont.401
  %378 = load i8*, i8** %s, align 8, !dbg !14466, !tbaa !2289
  %incdec.ptr402 = getelementptr i8, i8* %378, i32 1, !dbg !14466
  store i8* %incdec.ptr402, i8** %s, align 8, !dbg !14466, !tbaa !2289
  %379 = load i8, i8* %378, align 1, !dbg !14467, !tbaa !2307
  %tobool403 = icmp ne i8 %379, 0, !dbg !14465
  br i1 %tobool403, label %do.body, label %do.end, !dbg !14465

do.end:                                           ; preds = %do.cond
  call void @llvm.lifetime.start(i64 1, i8* %step) #2, !dbg !14468
  call void @llvm.dbg.declare(metadata i8* %step, metadata !1615, metadata !2293), !dbg !14469
  store i8 0, i8* %step, align 1, !dbg !14469, !tbaa !2307
  %380 = bitcast i64* %mask to i8*, !dbg !14470
  call void @llvm.lifetime.start(i64 8, i8* %380) #2, !dbg !14470
  call void @llvm.dbg.declare(metadata i64* %mask, metadata !1617, metadata !2293), !dbg !14471
  %381 = load i32, i32* %nsAttsSize, align 4, !dbg !14472, !tbaa !3391
  %sub = sub i32 %381, 1, !dbg !14473
  %conv404 = sext i32 %sub to i64, !dbg !14472
  store i64 %conv404, i64* %mask, align 8, !dbg !14471, !tbaa !3400
  %382 = load i64, i64* %uriHash, align 8, !dbg !14474, !tbaa !3400
  %383 = load i64, i64* %mask, align 8, !dbg !14475, !tbaa !3400
  %and = and i64 %382, %383, !dbg !14476
  %conv405 = trunc i64 %and to i32, !dbg !14474
  store i32 %conv405, i32* %j273, align 4, !dbg !14477, !tbaa !3391
  br label %while.cond.406, !dbg !14478

while.cond.406:                                   ; preds = %cond.end, %do.end
  %384 = load i32, i32* %j273, align 4, !dbg !14479, !tbaa !3391
  %idxprom407 = sext i32 %384 to i64, !dbg !14482
  %385 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14483, !tbaa !2289
  %m_nsAtts408 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %385, i32 0, i32 75, !dbg !14484
  %386 = load %struct.NS_ATT*, %struct.NS_ATT** %m_nsAtts408, align 8, !dbg !14484, !tbaa !2553
  %arrayidx409 = getelementptr %struct.NS_ATT, %struct.NS_ATT* %386, i64 %idxprom407, !dbg !14482
  %version410 = getelementptr inbounds %struct.NS_ATT, %struct.NS_ATT* %arrayidx409, i32 0, i32 0, !dbg !14485
  %387 = load i64, i64* %version410, align 8, !dbg !14485, !tbaa !14322
  %388 = load i64, i64* %version, align 8, !dbg !14486, !tbaa !3400
  %cmp411 = icmp eq i64 %387, %388, !dbg !14487
  br i1 %cmp411, label %while.body.413, label %while.end.469, !dbg !14478

while.body.413:                                   ; preds = %while.cond.406
  %389 = load i64, i64* %uriHash, align 8, !dbg !14488, !tbaa !3400
  %390 = load i32, i32* %j273, align 4, !dbg !14489, !tbaa !3391
  %idxprom414 = sext i32 %390 to i64, !dbg !14490
  %391 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14491, !tbaa !2289
  %m_nsAtts415 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %391, i32 0, i32 75, !dbg !14492
  %392 = load %struct.NS_ATT*, %struct.NS_ATT** %m_nsAtts415, align 8, !dbg !14492, !tbaa !2553
  %arrayidx416 = getelementptr %struct.NS_ATT, %struct.NS_ATT* %392, i64 %idxprom414, !dbg !14490
  %hash = getelementptr inbounds %struct.NS_ATT, %struct.NS_ATT* %arrayidx416, i32 0, i32 1, !dbg !14493
  %393 = load i64, i64* %hash, align 8, !dbg !14493, !tbaa !14494
  %cmp417 = icmp eq i64 %389, %393, !dbg !14495
  br i1 %cmp417, label %if.then.419, label %if.end.447, !dbg !14496

if.then.419:                                      ; preds = %while.body.413
  %394 = bitcast i8** %s1 to i8*, !dbg !14497
  call void @llvm.lifetime.start(i64 8, i8* %394) #2, !dbg !14497
  call void @llvm.dbg.declare(metadata i8** %s1, metadata !1618, metadata !2293), !dbg !14498
  %395 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14499, !tbaa !2289
  %m_tempPool420 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %395, i32 0, i32 79, !dbg !14500
  %start421 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool420, i32 0, i32 4, !dbg !14501
  %396 = load i8*, i8** %start421, align 8, !dbg !14501, !tbaa !2794
  store i8* %396, i8** %s1, align 8, !dbg !14498, !tbaa !2289
  %397 = bitcast i8** %s2 to i8*, !dbg !14502
  call void @llvm.lifetime.start(i64 8, i8* %397) #2, !dbg !14502
  call void @llvm.dbg.declare(metadata i8** %s2, metadata !1622, metadata !2293), !dbg !14503
  %398 = load i32, i32* %j273, align 4, !dbg !14504, !tbaa !3391
  %idxprom422 = sext i32 %398 to i64, !dbg !14505
  %399 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14506, !tbaa !2289
  %m_nsAtts423 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %399, i32 0, i32 75, !dbg !14507
  %400 = load %struct.NS_ATT*, %struct.NS_ATT** %m_nsAtts423, align 8, !dbg !14507, !tbaa !2553
  %arrayidx424 = getelementptr %struct.NS_ATT, %struct.NS_ATT* %400, i64 %idxprom422, !dbg !14505
  %uriName = getelementptr inbounds %struct.NS_ATT, %struct.NS_ATT* %arrayidx424, i32 0, i32 2, !dbg !14508
  %401 = load i8*, i8** %uriName, align 8, !dbg !14508, !tbaa !14509
  store i8* %401, i8** %s2, align 8, !dbg !14503, !tbaa !2289
  br label %for.cond.425, !dbg !14510

for.cond.425:                                     ; preds = %for.inc.434, %if.then.419
  %402 = load i8*, i8** %s1, align 8, !dbg !14511, !tbaa !2289
  %403 = load i8, i8* %402, align 1, !dbg !14516, !tbaa !2307
  %conv426 = sext i8 %403 to i32, !dbg !14516
  %404 = load i8*, i8** %s2, align 8, !dbg !14517, !tbaa !2289
  %405 = load i8, i8* %404, align 1, !dbg !14518, !tbaa !2307
  %conv427 = sext i8 %405 to i32, !dbg !14518
  %cmp428 = icmp eq i32 %conv426, %conv427, !dbg !14519
  br i1 %cmp428, label %land.rhs, label %land.end, !dbg !14520

land.rhs:                                         ; preds = %for.cond.425
  %406 = load i8*, i8** %s1, align 8, !dbg !14521, !tbaa !2289
  %407 = load i8, i8* %406, align 1, !dbg !14523, !tbaa !2307
  %conv430 = sext i8 %407 to i32, !dbg !14523
  %cmp431 = icmp ne i32 %conv430, 0, !dbg !14524
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond.425
  %408 = phi i1 [ false, %for.cond.425 ], [ %cmp431, %land.rhs ]
  br i1 %408, label %for.body.433, label %for.end.437, !dbg !14525

for.body.433:                                     ; preds = %land.end
  br label %for.inc.434, !dbg !14527

for.inc.434:                                      ; preds = %for.body.433
  %409 = load i8*, i8** %s1, align 8, !dbg !14529, !tbaa !2289
  %incdec.ptr435 = getelementptr i8, i8* %409, i32 1, !dbg !14529
  store i8* %incdec.ptr435, i8** %s1, align 8, !dbg !14529, !tbaa !2289
  %410 = load i8*, i8** %s2, align 8, !dbg !14531, !tbaa !2289
  %incdec.ptr436 = getelementptr i8, i8* %410, i32 1, !dbg !14531
  store i8* %incdec.ptr436, i8** %s2, align 8, !dbg !14531, !tbaa !2289
  br label %for.cond.425, !dbg !14532

for.end.437:                                      ; preds = %land.end
  %411 = load i8*, i8** %s1, align 8, !dbg !14533, !tbaa !2289
  %412 = load i8, i8* %411, align 1, !dbg !14535, !tbaa !2307
  %conv438 = sext i8 %412 to i32, !dbg !14535
  %cmp439 = icmp eq i32 %conv438, 0, !dbg !14536
  br i1 %cmp439, label %if.then.441, label %if.end.442, !dbg !14537

if.then.441:                                      ; preds = %for.end.437
  store i32 8, i32* %retval, !dbg !14538
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.443, !dbg !14538

if.end.442:                                       ; preds = %for.end.437
  store i32 0, i32* %cleanup.dest.slot, !dbg !14539
  br label %cleanup.443, !dbg !14539

cleanup.443:                                      ; preds = %if.end.442, %if.then.441
  %413 = bitcast i8** %s2 to i8*, !dbg !14540
  call void @llvm.lifetime.end(i64 8, i8* %413) #2, !dbg !14540
  %414 = bitcast i8** %s1 to i8*, !dbg !14540
  call void @llvm.lifetime.end(i64 8, i8* %414) #2, !dbg !14540
  %cleanup.dest.445 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.445, label %cleanup.470 [
    i32 0, label %cleanup.cont.446
  ]

cleanup.cont.446:                                 ; preds = %cleanup.443
  br label %if.end.447, !dbg !14542

if.end.447:                                       ; preds = %cleanup.cont.446, %while.body.413
  %415 = load i8, i8* %step, align 1, !dbg !14543, !tbaa !2307
  %tobool448 = icmp ne i8 %415, 0, !dbg !14543
  br i1 %tobool448, label %if.end.458, label %if.then.449, !dbg !14545

if.then.449:                                      ; preds = %if.end.447
  %416 = load i64, i64* %uriHash, align 8, !dbg !14546, !tbaa !3400
  %417 = load i64, i64* %mask, align 8, !dbg !14547, !tbaa !3400
  %neg = xor i64 %417, -1, !dbg !14548
  %and450 = and i64 %416, %neg, !dbg !14549
  %418 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14550, !tbaa !2289
  %m_nsAttsPower451 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %418, i32 0, i32 77, !dbg !14551
  %419 = load i8, i8* %m_nsAttsPower451, align 1, !dbg !14551, !tbaa !2561
  %conv452 = zext i8 %419 to i32, !dbg !14552
  %sub453 = sub i32 %conv452, 1, !dbg !14553
  %sh_prom = zext i32 %sub453 to i64, !dbg !14554
  %shr454 = lshr i64 %and450, %sh_prom, !dbg !14554
  %420 = load i64, i64* %mask, align 8, !dbg !14555, !tbaa !3400
  %shr455 = lshr i64 %420, 2, !dbg !14556
  %and456 = and i64 %shr454, %shr455, !dbg !14557
  %or = or i64 %and456, 1, !dbg !14558
  %conv457 = trunc i64 %or to i8, !dbg !14559
  store i8 %conv457, i8* %step, align 1, !dbg !14560, !tbaa !2307
  br label %if.end.458, !dbg !14561

if.end.458:                                       ; preds = %if.then.449, %if.end.447
  %421 = load i32, i32* %j273, align 4, !dbg !14562, !tbaa !3391
  %422 = load i8, i8* %step, align 1, !dbg !14563, !tbaa !2307
  %conv459 = zext i8 %422 to i32, !dbg !14563
  %cmp460 = icmp slt i32 %421, %conv459, !dbg !14564
  br i1 %cmp460, label %cond.true.462, label %cond.false.466, !dbg !14562

cond.true.462:                                    ; preds = %if.end.458
  %423 = load i32, i32* %nsAttsSize, align 4, !dbg !14565, !tbaa !3391
  %424 = load i8, i8* %step, align 1, !dbg !14567, !tbaa !2307
  %conv463 = zext i8 %424 to i32, !dbg !14567
  %sub464 = sub i32 %423, %conv463, !dbg !14568
  %425 = load i32, i32* %j273, align 4, !dbg !14569, !tbaa !3391
  %add465 = add i32 %425, %sub464, !dbg !14569
  store i32 %add465, i32* %j273, align 4, !dbg !14569, !tbaa !3391
  br label %cond.end, !dbg !14562

cond.false.466:                                   ; preds = %if.end.458
  %426 = load i8, i8* %step, align 1, !dbg !14570, !tbaa !2307
  %conv467 = zext i8 %426 to i32, !dbg !14570
  %427 = load i32, i32* %j273, align 4, !dbg !14572, !tbaa !3391
  %sub468 = sub i32 %427, %conv467, !dbg !14572
  store i32 %sub468, i32* %j273, align 4, !dbg !14572, !tbaa !3391
  br label %cond.end, !dbg !14562

cond.end:                                         ; preds = %cond.false.466, %cond.true.462
  %cond = phi i32 [ %add465, %cond.true.462 ], [ %sub468, %cond.false.466 ], !dbg !14562
  br label %while.cond.406, !dbg !14478

while.end.469:                                    ; preds = %while.cond.406
  store i32 0, i32* %cleanup.dest.slot, !dbg !14573
  br label %cleanup.470, !dbg !14573

cleanup.470:                                      ; preds = %while.end.469, %cleanup.443
  %428 = bitcast i64* %mask to i8*, !dbg !14574
  call void @llvm.lifetime.end(i64 8, i8* %428) #2, !dbg !14574
  call void @llvm.lifetime.end(i64 1, i8* %step) #2, !dbg !14574
  %cleanup.dest.472 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.472, label %cleanup.529 [
    i32 0, label %cleanup.cont.473
  ]

cleanup.cont.473:                                 ; preds = %cleanup.470
  %429 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14575, !tbaa !2289
  %m_ns_triplets = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %429, i32 0, i32 39, !dbg !14577
  %430 = load i8, i8* %m_ns_triplets, align 1, !dbg !14577, !tbaa !2549
  %tobool474 = icmp ne i8 %430, 0, !dbg !14578
  br i1 %tobool474, label %if.then.475, label %if.end.503, !dbg !14579

if.then.475:                                      ; preds = %cleanup.cont.473
  %431 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14580, !tbaa !2289
  %m_namespaceSeparator = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %431, i32 0, i32 83, !dbg !14582
  %432 = load i8, i8* %m_namespaceSeparator, align 1, !dbg !14582, !tbaa !2541
  %433 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14583, !tbaa !2289
  %m_tempPool476 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %433, i32 0, i32 79, !dbg !14584
  %ptr477 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool476, i32 0, i32 3, !dbg !14585
  %434 = load i8*, i8** %ptr477, align 8, !dbg !14585, !tbaa !14586
  %arrayidx478 = getelementptr i8, i8* %434, i64 -1, !dbg !14587
  store i8 %432, i8* %arrayidx478, align 1, !dbg !14588, !tbaa !2307
  %435 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !14589, !tbaa !2289
  %prefix479 = getelementptr inbounds %struct.binding, %struct.binding* %435, i32 0, i32 0, !dbg !14590
  %436 = load %struct.prefix*, %struct.prefix** %prefix479, align 8, !dbg !14590, !tbaa !12602
  %name480 = getelementptr inbounds %struct.prefix, %struct.prefix* %436, i32 0, i32 0, !dbg !14591
  %437 = load i8*, i8** %name480, align 8, !dbg !14591, !tbaa !3638
  store i8* %437, i8** %s, align 8, !dbg !14592, !tbaa !2289
  br label %do.body.481, !dbg !14593

do.body.481:                                      ; preds = %do.cond.499, %if.then.475
  %438 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14594, !tbaa !2289
  %m_tempPool482 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %438, i32 0, i32 79, !dbg !14597
  %ptr483 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool482, i32 0, i32 3, !dbg !14598
  %439 = load i8*, i8** %ptr483, align 8, !dbg !14598, !tbaa !2798
  %440 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14599, !tbaa !2289
  %m_tempPool484 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %440, i32 0, i32 79, !dbg !14600
  %end485 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool484, i32 0, i32 2, !dbg !14601
  %441 = load i8*, i8** %end485, align 8, !dbg !14601, !tbaa !2802
  %cmp486 = icmp eq i8* %439, %441, !dbg !14602
  br i1 %cmp486, label %land.lhs.true.488, label %cond.false.493, !dbg !14603

land.lhs.true.488:                                ; preds = %do.body.481
  %442 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14604, !tbaa !2289
  %m_tempPool489 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %442, i32 0, i32 79, !dbg !14606
  %call490 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool489), !dbg !14607
  %tobool491 = icmp ne i8 %call490, 0, !dbg !14607
  br i1 %tobool491, label %cond.false.493, label %cond.true.492, !dbg !14608

cond.true.492:                                    ; preds = %land.lhs.true.488
  br i1 false, label %if.end.498, label %if.then.497, !dbg !14609

cond.false.493:                                   ; preds = %land.lhs.true.488, %do.body.481
  %443 = load i8*, i8** %s, align 8, !dbg !14611, !tbaa !2289
  %444 = load i8, i8* %443, align 1, !dbg !14614, !tbaa !2307
  %445 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14615, !tbaa !2289
  %m_tempPool494 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %445, i32 0, i32 79, !dbg !14616
  %ptr495 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool494, i32 0, i32 3, !dbg !14617
  %446 = load i8*, i8** %ptr495, align 8, !dbg !14618, !tbaa !2798
  %incdec.ptr496 = getelementptr i8, i8* %446, i32 1, !dbg !14618
  store i8* %incdec.ptr496, i8** %ptr495, align 8, !dbg !14618, !tbaa !2798
  store i8 %444, i8* %446, align 1, !dbg !14619, !tbaa !2307
  br i1 true, label %if.end.498, label %if.then.497, !dbg !14608

if.then.497:                                      ; preds = %cond.false.493, %cond.true.492
  store i32 1, i32* %retval, !dbg !14620
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.529, !dbg !14620

if.end.498:                                       ; preds = %cond.false.493, %cond.true.492
  br label %do.cond.499, !dbg !14621

do.cond.499:                                      ; preds = %if.end.498
  %447 = load i8*, i8** %s, align 8, !dbg !14622, !tbaa !2289
  %incdec.ptr500 = getelementptr i8, i8* %447, i32 1, !dbg !14622
  store i8* %incdec.ptr500, i8** %s, align 8, !dbg !14622, !tbaa !2289
  %448 = load i8, i8* %447, align 1, !dbg !14624, !tbaa !2307
  %tobool501 = icmp ne i8 %448, 0, !dbg !14621
  br i1 %tobool501, label %do.body.481, label %do.end.502, !dbg !14621

do.end.502:                                       ; preds = %do.cond.499
  br label %if.end.503, !dbg !14625

if.end.503:                                       ; preds = %do.end.502, %cleanup.cont.473
  %449 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14626, !tbaa !2289
  %m_tempPool504 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %449, i32 0, i32 79, !dbg !14627
  %start505 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool504, i32 0, i32 4, !dbg !14628
  %450 = load i8*, i8** %start505, align 8, !dbg !14628, !tbaa !2794
  store i8* %450, i8** %s, align 8, !dbg !14629, !tbaa !2289
  %451 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14630, !tbaa !2289
  %m_tempPool506 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %451, i32 0, i32 79, !dbg !14631
  %ptr507 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool506, i32 0, i32 3, !dbg !14632
  %452 = load i8*, i8** %ptr507, align 8, !dbg !14632, !tbaa !2798
  %453 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14633, !tbaa !2289
  %m_tempPool508 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %453, i32 0, i32 79, !dbg !14634
  %start509 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool508, i32 0, i32 4, !dbg !14635
  store i8* %452, i8** %start509, align 8, !dbg !14636, !tbaa !2794
  %454 = load i8*, i8** %s, align 8, !dbg !14637, !tbaa !2289
  %455 = load i32, i32* %i, align 4, !dbg !14638, !tbaa !3391
  %idxprom510 = sext i32 %455 to i64, !dbg !14639
  %456 = load i8**, i8*** %appAtts, align 8, !dbg !14639, !tbaa !2289
  %arrayidx511 = getelementptr i8*, i8** %456, i64 %idxprom510, !dbg !14639
  store i8* %454, i8** %arrayidx511, align 8, !dbg !14640, !tbaa !2289
  %457 = load i64, i64* %version, align 8, !dbg !14641, !tbaa !3400
  %458 = load i32, i32* %j273, align 4, !dbg !14642, !tbaa !3391
  %idxprom512 = sext i32 %458 to i64, !dbg !14643
  %459 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14644, !tbaa !2289
  %m_nsAtts513 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %459, i32 0, i32 75, !dbg !14645
  %460 = load %struct.NS_ATT*, %struct.NS_ATT** %m_nsAtts513, align 8, !dbg !14645, !tbaa !2553
  %arrayidx514 = getelementptr %struct.NS_ATT, %struct.NS_ATT* %460, i64 %idxprom512, !dbg !14643
  %version515 = getelementptr inbounds %struct.NS_ATT, %struct.NS_ATT* %arrayidx514, i32 0, i32 0, !dbg !14646
  store i64 %457, i64* %version515, align 8, !dbg !14647, !tbaa !14322
  %461 = load i64, i64* %uriHash, align 8, !dbg !14648, !tbaa !3400
  %462 = load i32, i32* %j273, align 4, !dbg !14649, !tbaa !3391
  %idxprom516 = sext i32 %462 to i64, !dbg !14650
  %463 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14651, !tbaa !2289
  %m_nsAtts517 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %463, i32 0, i32 75, !dbg !14652
  %464 = load %struct.NS_ATT*, %struct.NS_ATT** %m_nsAtts517, align 8, !dbg !14652, !tbaa !2553
  %arrayidx518 = getelementptr %struct.NS_ATT, %struct.NS_ATT* %464, i64 %idxprom516, !dbg !14650
  %hash519 = getelementptr inbounds %struct.NS_ATT, %struct.NS_ATT* %arrayidx518, i32 0, i32 1, !dbg !14653
  store i64 %461, i64* %hash519, align 8, !dbg !14654, !tbaa !14494
  %465 = load i8*, i8** %s, align 8, !dbg !14655, !tbaa !2289
  %466 = load i32, i32* %j273, align 4, !dbg !14656, !tbaa !3391
  %idxprom520 = sext i32 %466 to i64, !dbg !14657
  %467 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14658, !tbaa !2289
  %m_nsAtts521 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %467, i32 0, i32 75, !dbg !14659
  %468 = load %struct.NS_ATT*, %struct.NS_ATT** %m_nsAtts521, align 8, !dbg !14659, !tbaa !2553
  %arrayidx522 = getelementptr %struct.NS_ATT, %struct.NS_ATT* %468, i64 %idxprom520, !dbg !14657
  %uriName523 = getelementptr inbounds %struct.NS_ATT, %struct.NS_ATT* %arrayidx522, i32 0, i32 2, !dbg !14660
  store i8* %465, i8** %uriName523, align 8, !dbg !14661, !tbaa !14509
  %469 = load i32, i32* %nPrefixes, align 4, !dbg !14662, !tbaa !3391
  %dec524 = add i32 %469, -1, !dbg !14662
  store i32 %dec524, i32* %nPrefixes, align 4, !dbg !14662, !tbaa !3391
  %tobool525 = icmp ne i32 %dec524, 0, !dbg !14662
  br i1 %tobool525, label %if.end.528, label %if.then.526, !dbg !14664

if.then.526:                                      ; preds = %if.end.503
  %470 = load i32, i32* %i, align 4, !dbg !14665, !tbaa !3391
  %add527 = add i32 %470, 2, !dbg !14665
  store i32 %add527, i32* %i, align 4, !dbg !14665, !tbaa !3391
  store i32 18, i32* %cleanup.dest.slot
  br label %cleanup.529, !dbg !14667

if.end.528:                                       ; preds = %if.end.503
  store i32 0, i32* %cleanup.dest.slot, !dbg !14668
  br label %cleanup.529, !dbg !14668

cleanup.529:                                      ; preds = %if.end.528, %if.then.526, %if.then.497, %cleanup.470, %cleanup.399, %cleanup.365, %if.then.341
  %471 = bitcast i64* %uriHash to i8*, !dbg !14669
  call void @llvm.lifetime.end(i64 8, i8* %471) #2, !dbg !14669
  %472 = bitcast %struct.binding** %b to i8*, !dbg !14669
  call void @llvm.lifetime.end(i64 8, i8* %472) #2, !dbg !14669
  %473 = bitcast %struct.attribute_id** %id335 to i8*, !dbg !14669
  call void @llvm.lifetime.end(i64 8, i8* %473) #2, !dbg !14669
  %cleanup.dest.532 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.532, label %cleanup.537 [
    i32 0, label %cleanup.cont.533
  ]

cleanup.cont.533:                                 ; preds = %cleanup.529
  br label %if.end.536, !dbg !14671

if.else.534:                                      ; preds = %for.body.327
  %474 = load i8*, i8** %s, align 8, !dbg !14672, !tbaa !2289
  %arrayidx535 = getelementptr i8, i8* %474, i64 -1, !dbg !14673
  store i8 0, i8* %arrayidx535, align 1, !dbg !14674, !tbaa !2307
  br label %if.end.536

if.end.536:                                       ; preds = %if.else.534, %cleanup.cont.533
  store i32 0, i32* %cleanup.dest.slot, !dbg !14675
  br label %cleanup.537, !dbg !14675

cleanup.537:                                      ; preds = %if.end.536, %cleanup.529
  %475 = bitcast i8** %s to i8*, !dbg !14676
  call void @llvm.lifetime.end(i64 8, i8* %475) #2, !dbg !14676
  %cleanup.dest.538 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.538, label %cleanup.543 [
    i32 0, label %cleanup.cont.539
    i32 18, label %for.end.542
  ]

cleanup.cont.539:                                 ; preds = %cleanup.537
  br label %for.inc.540, !dbg !14677

for.inc.540:                                      ; preds = %cleanup.cont.539
  %476 = load i32, i32* %i, align 4, !dbg !14678, !tbaa !3391
  %add541 = add i32 %476, 2, !dbg !14678
  store i32 %add541, i32* %i, align 4, !dbg !14678, !tbaa !3391
  br label %for.cond.324, !dbg !14679

for.end.542:                                      ; preds = %cleanup.537, %for.cond.324
  store i32 0, i32* %cleanup.dest.slot, !dbg !14680
  br label %cleanup.543, !dbg !14680

cleanup.543:                                      ; preds = %for.end.542, %cleanup.537, %cleanup.305
  %477 = bitcast i32* %nsAttsSize to i8*, !dbg !14681
  call void @llvm.lifetime.end(i64 4, i8* %477) #2, !dbg !14681
  %478 = bitcast i64* %version to i8*, !dbg !14681
  call void @llvm.lifetime.end(i64 8, i8* %478) #2, !dbg !14681
  %479 = bitcast i32* %j273 to i8*, !dbg !14681
  call void @llvm.lifetime.end(i64 4, i8* %479) #2, !dbg !14681
  %cleanup.dest.546 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.546, label %cleanup.690 [
    i32 0, label %cleanup.cont.547
  ]

cleanup.cont.547:                                 ; preds = %cleanup.543
  br label %if.end.548, !dbg !14683

if.end.548:                                       ; preds = %cleanup.cont.547, %for.end.268
  br label %for.cond.549, !dbg !14684

for.cond.549:                                     ; preds = %for.inc.556, %if.end.548
  %480 = load i32, i32* %i, align 4, !dbg !14685, !tbaa !3391
  %481 = load i32, i32* %attIndex, align 4, !dbg !14690, !tbaa !3391
  %cmp550 = icmp slt i32 %480, %481, !dbg !14691
  br i1 %cmp550, label %for.body.552, label %for.end.558, !dbg !14692

for.body.552:                                     ; preds = %for.cond.549
  %482 = load i32, i32* %i, align 4, !dbg !14693, !tbaa !3391
  %idxprom553 = sext i32 %482 to i64, !dbg !14694
  %483 = load i8**, i8*** %appAtts, align 8, !dbg !14694, !tbaa !2289
  %arrayidx554 = getelementptr i8*, i8** %483, i64 %idxprom553, !dbg !14694
  %484 = load i8*, i8** %arrayidx554, align 8, !dbg !14694, !tbaa !2289
  %arrayidx555 = getelementptr i8, i8* %484, i64 -1, !dbg !14695
  store i8 0, i8* %arrayidx555, align 1, !dbg !14696, !tbaa !2307
  br label %for.inc.556, !dbg !14695

for.inc.556:                                      ; preds = %for.body.552
  %485 = load i32, i32* %i, align 4, !dbg !14697, !tbaa !3391
  %add557 = add i32 %485, 2, !dbg !14697
  store i32 %add557, i32* %i, align 4, !dbg !14697, !tbaa !3391
  br label %for.cond.549, !dbg !14698

for.end.558:                                      ; preds = %for.cond.549
  %486 = load %struct.binding**, %struct.binding*** %bindingsPtr.addr, align 8, !dbg !14699, !tbaa !2289
  %487 = load %struct.binding*, %struct.binding** %486, align 8, !dbg !14701, !tbaa !2289
  store %struct.binding* %487, %struct.binding** %binding, align 8, !dbg !14702, !tbaa !2289
  br label %for.cond.559, !dbg !14703

for.cond.559:                                     ; preds = %for.inc.565, %for.end.558
  %488 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !14704, !tbaa !2289
  %tobool560 = icmp ne %struct.binding* %488, null, !dbg !14708
  br i1 %tobool560, label %for.body.561, label %for.end.566, !dbg !14708

for.body.561:                                     ; preds = %for.cond.559
  %489 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !14709, !tbaa !2289
  %attId562 = getelementptr inbounds %struct.binding, %struct.binding* %489, i32 0, i32 3, !dbg !14710
  %490 = load %struct.attribute_id*, %struct.attribute_id** %attId562, align 8, !dbg !14710, !tbaa !14711
  %name563 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %490, i32 0, i32 0, !dbg !14712
  %491 = load i8*, i8** %name563, align 8, !dbg !14712, !tbaa !3701
  %arrayidx564 = getelementptr i8, i8* %491, i64 -1, !dbg !14709
  store i8 0, i8* %arrayidx564, align 1, !dbg !14713, !tbaa !2307
  br label %for.inc.565, !dbg !14709

for.inc.565:                                      ; preds = %for.body.561
  %492 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !14714, !tbaa !2289
  %nextTagBinding = getelementptr inbounds %struct.binding, %struct.binding* %492, i32 0, i32 1, !dbg !14715
  %493 = load %struct.binding*, %struct.binding** %nextTagBinding, align 8, !dbg !14715, !tbaa !2736
  store %struct.binding* %493, %struct.binding** %binding, align 8, !dbg !14716, !tbaa !2289
  br label %for.cond.559, !dbg !14717

for.end.566:                                      ; preds = %for.cond.559
  %494 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14718, !tbaa !2289
  %m_ns567 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %494, i32 0, i32 38, !dbg !14720
  %495 = load i8, i8* %m_ns567, align 1, !dbg !14720, !tbaa !2545
  %tobool568 = icmp ne i8 %495, 0, !dbg !14721
  br i1 %tobool568, label %if.end.570, label %if.then.569, !dbg !14722

if.then.569:                                      ; preds = %for.end.566
  store i32 0, i32* %retval, !dbg !14723
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.690, !dbg !14723

if.end.570:                                       ; preds = %for.end.566
  %496 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType, align 8, !dbg !14724, !tbaa !2289
  %prefix571 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %496, i32 0, i32 1, !dbg !14726
  %497 = load %struct.prefix*, %struct.prefix** %prefix571, align 8, !dbg !14726, !tbaa !3859
  %tobool572 = icmp ne %struct.prefix* %497, null, !dbg !14724
  br i1 %tobool572, label %if.then.573, label %if.else.587, !dbg !14727

if.then.573:                                      ; preds = %if.end.570
  %498 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType, align 8, !dbg !14728, !tbaa !2289
  %prefix574 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %498, i32 0, i32 1, !dbg !14730
  %499 = load %struct.prefix*, %struct.prefix** %prefix574, align 8, !dbg !14730, !tbaa !3859
  %binding575 = getelementptr inbounds %struct.prefix, %struct.prefix* %499, i32 0, i32 1, !dbg !14731
  %500 = load %struct.binding*, %struct.binding** %binding575, align 8, !dbg !14731, !tbaa !12624
  store %struct.binding* %500, %struct.binding** %binding, align 8, !dbg !14732, !tbaa !2289
  %501 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !14733, !tbaa !2289
  %tobool576 = icmp ne %struct.binding* %501, null, !dbg !14733
  br i1 %tobool576, label %if.end.578, label %if.then.577, !dbg !14735

if.then.577:                                      ; preds = %if.then.573
  store i32 27, i32* %retval, !dbg !14736
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.690, !dbg !14736

if.end.578:                                       ; preds = %if.then.573
  %502 = load %struct.TAG_NAME*, %struct.TAG_NAME** %tagNamePtr.addr, align 8, !dbg !14737, !tbaa !2289
  %str579 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %502, i32 0, i32 0, !dbg !14738
  %503 = load i8*, i8** %str579, align 8, !dbg !14738, !tbaa !12497
  store i8* %503, i8** %localPart, align 8, !dbg !14739, !tbaa !2289
  br label %while.cond.580, !dbg !14740

while.cond.580:                                   ; preds = %while.body.585, %if.end.578
  %504 = load i8*, i8** %localPart, align 8, !dbg !14741, !tbaa !2289
  %incdec.ptr581 = getelementptr i8, i8* %504, i32 1, !dbg !14741
  store i8* %incdec.ptr581, i8** %localPart, align 8, !dbg !14741, !tbaa !2289
  %505 = load i8, i8* %504, align 1, !dbg !14744, !tbaa !2307
  %conv582 = sext i8 %505 to i32, !dbg !14744
  %cmp583 = icmp ne i32 %conv582, 58, !dbg !14745
  br i1 %cmp583, label %while.body.585, label %while.end.586, !dbg !14740

while.body.585:                                   ; preds = %while.cond.580
  br label %while.cond.580, !dbg !14746

while.end.586:                                    ; preds = %while.cond.580
  br label %if.end.596, !dbg !14748

if.else.587:                                      ; preds = %if.end.570
  %506 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !14749, !tbaa !2289
  %defaultPrefix = getelementptr inbounds %struct.DTD, %struct.DTD* %506, i32 0, i32 11, !dbg !14751
  %binding588 = getelementptr inbounds %struct.prefix, %struct.prefix* %defaultPrefix, i32 0, i32 1, !dbg !14752
  %507 = load %struct.binding*, %struct.binding** %binding588, align 8, !dbg !14752, !tbaa !3139
  %tobool589 = icmp ne %struct.binding* %507, null, !dbg !14749
  br i1 %tobool589, label %if.then.590, label %if.else.594, !dbg !14753

if.then.590:                                      ; preds = %if.else.587
  %508 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !14754, !tbaa !2289
  %defaultPrefix591 = getelementptr inbounds %struct.DTD, %struct.DTD* %508, i32 0, i32 11, !dbg !14756
  %binding592 = getelementptr inbounds %struct.prefix, %struct.prefix* %defaultPrefix591, i32 0, i32 1, !dbg !14757
  %509 = load %struct.binding*, %struct.binding** %binding592, align 8, !dbg !14757, !tbaa !3139
  store %struct.binding* %509, %struct.binding** %binding, align 8, !dbg !14758, !tbaa !2289
  %510 = load %struct.TAG_NAME*, %struct.TAG_NAME** %tagNamePtr.addr, align 8, !dbg !14759, !tbaa !2289
  %str593 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %510, i32 0, i32 0, !dbg !14760
  %511 = load i8*, i8** %str593, align 8, !dbg !14760, !tbaa !12497
  store i8* %511, i8** %localPart, align 8, !dbg !14761, !tbaa !2289
  br label %if.end.595, !dbg !14762

if.else.594:                                      ; preds = %if.else.587
  store i32 0, i32* %retval, !dbg !14763
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.690, !dbg !14763

if.end.595:                                       ; preds = %if.then.590
  br label %if.end.596

if.end.596:                                       ; preds = %if.end.595, %while.end.586
  store i32 0, i32* %prefixLen, align 4, !dbg !14764, !tbaa !3391
  %512 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14765, !tbaa !2289
  %m_ns_triplets597 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %512, i32 0, i32 39, !dbg !14767
  %513 = load i8, i8* %m_ns_triplets597, align 1, !dbg !14767, !tbaa !2549
  %conv598 = zext i8 %513 to i32, !dbg !14768
  %tobool599 = icmp ne i32 %conv598, 0, !dbg !14768
  br i1 %tobool599, label %land.lhs.true.600, label %if.end.614, !dbg !14769

land.lhs.true.600:                                ; preds = %if.end.596
  %514 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !14770, !tbaa !2289
  %prefix601 = getelementptr inbounds %struct.binding, %struct.binding* %514, i32 0, i32 0, !dbg !14772
  %515 = load %struct.prefix*, %struct.prefix** %prefix601, align 8, !dbg !14772, !tbaa !12602
  %name602 = getelementptr inbounds %struct.prefix, %struct.prefix* %515, i32 0, i32 0, !dbg !14773
  %516 = load i8*, i8** %name602, align 8, !dbg !14773, !tbaa !3638
  %tobool603 = icmp ne i8* %516, null, !dbg !14774
  br i1 %tobool603, label %if.then.604, label %if.end.614, !dbg !14775

if.then.604:                                      ; preds = %land.lhs.true.600
  br label %for.cond.605, !dbg !14776

for.cond.605:                                     ; preds = %for.body.612, %if.then.604
  %517 = load i32, i32* %prefixLen, align 4, !dbg !14778, !tbaa !3391
  %inc606 = add i32 %517, 1, !dbg !14778
  store i32 %inc606, i32* %prefixLen, align 4, !dbg !14778, !tbaa !3391
  %idxprom607 = sext i32 %517 to i64, !dbg !14783
  %518 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !14783, !tbaa !2289
  %prefix608 = getelementptr inbounds %struct.binding, %struct.binding* %518, i32 0, i32 0, !dbg !14784
  %519 = load %struct.prefix*, %struct.prefix** %prefix608, align 8, !dbg !14784, !tbaa !12602
  %name609 = getelementptr inbounds %struct.prefix, %struct.prefix* %519, i32 0, i32 0, !dbg !14785
  %520 = load i8*, i8** %name609, align 8, !dbg !14785, !tbaa !3638
  %arrayidx610 = getelementptr i8, i8* %520, i64 %idxprom607, !dbg !14783
  %521 = load i8, i8* %arrayidx610, align 1, !dbg !14783, !tbaa !2307
  %tobool611 = icmp ne i8 %521, 0, !dbg !14786
  br i1 %tobool611, label %for.body.612, label %for.end.613, !dbg !14786

for.body.612:                                     ; preds = %for.cond.605
  br label %for.cond.605, !dbg !14787

for.end.613:                                      ; preds = %for.cond.605
  br label %if.end.614, !dbg !14789

if.end.614:                                       ; preds = %for.end.613, %land.lhs.true.600, %if.end.596
  %522 = load i8*, i8** %localPart, align 8, !dbg !14790, !tbaa !2289
  %523 = load %struct.TAG_NAME*, %struct.TAG_NAME** %tagNamePtr.addr, align 8, !dbg !14791, !tbaa !2289
  %localPart615 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %523, i32 0, i32 1, !dbg !14792
  store i8* %522, i8** %localPart615, align 8, !dbg !14793, !tbaa !14794
  %524 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !14795, !tbaa !2289
  %uriLen616 = getelementptr inbounds %struct.binding, %struct.binding* %524, i32 0, i32 5, !dbg !14796
  %525 = load i32, i32* %uriLen616, align 4, !dbg !14796, !tbaa !13346
  %526 = load %struct.TAG_NAME*, %struct.TAG_NAME** %tagNamePtr.addr, align 8, !dbg !14797, !tbaa !2289
  %uriLen617 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %526, i32 0, i32 4, !dbg !14798
  store i32 %525, i32* %uriLen617, align 4, !dbg !14799, !tbaa !14800
  %527 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !14801, !tbaa !2289
  %prefix618 = getelementptr inbounds %struct.binding, %struct.binding* %527, i32 0, i32 0, !dbg !14802
  %528 = load %struct.prefix*, %struct.prefix** %prefix618, align 8, !dbg !14802, !tbaa !12602
  %name619 = getelementptr inbounds %struct.prefix, %struct.prefix* %528, i32 0, i32 0, !dbg !14803
  %529 = load i8*, i8** %name619, align 8, !dbg !14803, !tbaa !3638
  %530 = load %struct.TAG_NAME*, %struct.TAG_NAME** %tagNamePtr.addr, align 8, !dbg !14804, !tbaa !2289
  %prefix620 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %530, i32 0, i32 2, !dbg !14805
  store i8* %529, i8** %prefix620, align 8, !dbg !14806, !tbaa !14807
  %531 = load i32, i32* %prefixLen, align 4, !dbg !14808, !tbaa !3391
  %532 = load %struct.TAG_NAME*, %struct.TAG_NAME** %tagNamePtr.addr, align 8, !dbg !14809, !tbaa !2289
  %prefixLen621 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %532, i32 0, i32 5, !dbg !14810
  store i32 %531, i32* %prefixLen621, align 4, !dbg !14811, !tbaa !14812
  store i32 0, i32* %i, align 4, !dbg !14813, !tbaa !3391
  br label %for.cond.622, !dbg !14815

for.cond.622:                                     ; preds = %for.body.627, %if.end.614
  %533 = load i32, i32* %i, align 4, !dbg !14816, !tbaa !3391
  %inc623 = add i32 %533, 1, !dbg !14816
  store i32 %inc623, i32* %i, align 4, !dbg !14816, !tbaa !3391
  %idxprom624 = sext i32 %533 to i64, !dbg !14820
  %534 = load i8*, i8** %localPart, align 8, !dbg !14820, !tbaa !2289
  %arrayidx625 = getelementptr i8, i8* %534, i64 %idxprom624, !dbg !14820
  %535 = load i8, i8* %arrayidx625, align 1, !dbg !14820, !tbaa !2307
  %tobool626 = icmp ne i8 %535, 0, !dbg !14821
  br i1 %tobool626, label %for.body.627, label %for.end.628, !dbg !14821

for.body.627:                                     ; preds = %for.cond.622
  br label %for.cond.622, !dbg !14822

for.end.628:                                      ; preds = %for.cond.622
  %536 = load i32, i32* %i, align 4, !dbg !14824, !tbaa !3391
  %537 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !14825, !tbaa !2289
  %uriLen629 = getelementptr inbounds %struct.binding, %struct.binding* %537, i32 0, i32 5, !dbg !14826
  %538 = load i32, i32* %uriLen629, align 4, !dbg !14826, !tbaa !13346
  %add630 = add i32 %536, %538, !dbg !14827
  %539 = load i32, i32* %prefixLen, align 4, !dbg !14828, !tbaa !3391
  %add631 = add i32 %add630, %539, !dbg !14829
  store i32 %add631, i32* %n, align 4, !dbg !14830, !tbaa !3391
  %540 = load i32, i32* %n, align 4, !dbg !14831, !tbaa !3391
  %541 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !14832, !tbaa !2289
  %uriAlloc = getelementptr inbounds %struct.binding, %struct.binding* %541, i32 0, i32 6, !dbg !14833
  %542 = load i32, i32* %uriAlloc, align 4, !dbg !14833, !tbaa !14834
  %cmp632 = icmp sgt i32 %540, %542, !dbg !14835
  br i1 %cmp632, label %if.then.634, label %if.end.669, !dbg !14836

if.then.634:                                      ; preds = %for.end.628
  %543 = bitcast %struct.tag** %p to i8*, !dbg !14837
  call void @llvm.lifetime.start(i64 8, i8* %543) #2, !dbg !14837
  call void @llvm.dbg.declare(metadata %struct.tag** %p, metadata !1623, metadata !2293), !dbg !14838
  %544 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14839, !tbaa !2289
  %m_mem635 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %544, i32 0, i32 3, !dbg !14840
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem635, i32 0, i32 0, !dbg !14841
  %545 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8, !dbg !14841, !tbaa !2416
  %546 = load i32, i32* %n, align 4, !dbg !14842, !tbaa !3391
  %add636 = add i32 %546, 24, !dbg !14843
  %conv637 = sext i32 %add636 to i64, !dbg !14844
  %mul638 = mul i64 %conv637, 1, !dbg !14845
  %call639 = call i8* %545(i64 %mul638), !dbg !14839
  store i8* %call639, i8** %uri, align 8, !dbg !14846, !tbaa !2289
  %547 = load i8*, i8** %uri, align 8, !dbg !14847, !tbaa !2289
  %tobool640 = icmp ne i8* %547, null, !dbg !14847
  br i1 %tobool640, label %if.end.642, label %if.then.641, !dbg !14849

if.then.641:                                      ; preds = %if.then.634
  store i32 1, i32* %retval, !dbg !14850
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.666, !dbg !14850

if.end.642:                                       ; preds = %if.then.634
  %548 = load i32, i32* %n, align 4, !dbg !14851, !tbaa !3391
  %add643 = add i32 %548, 24, !dbg !14852
  %549 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !14853, !tbaa !2289
  %uriAlloc644 = getelementptr inbounds %struct.binding, %struct.binding* %549, i32 0, i32 6, !dbg !14854
  store i32 %add643, i32* %uriAlloc644, align 4, !dbg !14855, !tbaa !14834
  %550 = load i8*, i8** %uri, align 8, !dbg !14856, !tbaa !2289
  %551 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !14857, !tbaa !2289
  %uri645 = getelementptr inbounds %struct.binding, %struct.binding* %551, i32 0, i32 4, !dbg !14858
  %552 = load i8*, i8** %uri645, align 8, !dbg !14858, !tbaa !4596
  %553 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !14859, !tbaa !2289
  %uriLen646 = getelementptr inbounds %struct.binding, %struct.binding* %553, i32 0, i32 5, !dbg !14860
  %554 = load i32, i32* %uriLen646, align 4, !dbg !14860, !tbaa !13346
  %conv647 = sext i32 %554 to i64, !dbg !14859
  %mul648 = mul i64 %conv647, 1, !dbg !14861
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %550, i8* %552, i64 %mul648, i32 1, i1 false), !dbg !14862
  %555 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14863, !tbaa !2289
  %m_tagStack = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %555, i32 0, i32 67, !dbg !14865
  %556 = load %struct.tag*, %struct.tag** %m_tagStack, align 8, !dbg !14865, !tbaa !2629
  store %struct.tag* %556, %struct.tag** %p, align 8, !dbg !14866, !tbaa !2289
  br label %for.cond.649, !dbg !14867

for.cond.649:                                     ; preds = %for.inc.661, %if.end.642
  %557 = load %struct.tag*, %struct.tag** %p, align 8, !dbg !14868, !tbaa !2289
  %tobool650 = icmp ne %struct.tag* %557, null, !dbg !14872
  br i1 %tobool650, label %for.body.651, label %for.end.662, !dbg !14872

for.body.651:                                     ; preds = %for.cond.649
  %558 = load %struct.tag*, %struct.tag** %p, align 8, !dbg !14873, !tbaa !2289
  %name652 = getelementptr inbounds %struct.tag, %struct.tag* %558, i32 0, i32 3, !dbg !14875
  %str653 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name652, i32 0, i32 0, !dbg !14876
  %559 = load i8*, i8** %str653, align 8, !dbg !14876, !tbaa !12421
  %560 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !14877, !tbaa !2289
  %uri654 = getelementptr inbounds %struct.binding, %struct.binding* %560, i32 0, i32 4, !dbg !14878
  %561 = load i8*, i8** %uri654, align 8, !dbg !14878, !tbaa !4596
  %cmp655 = icmp eq i8* %559, %561, !dbg !14879
  br i1 %cmp655, label %if.then.657, label %if.end.660, !dbg !14880

if.then.657:                                      ; preds = %for.body.651
  %562 = load i8*, i8** %uri, align 8, !dbg !14881, !tbaa !2289
  %563 = load %struct.tag*, %struct.tag** %p, align 8, !dbg !14882, !tbaa !2289
  %name658 = getelementptr inbounds %struct.tag, %struct.tag* %563, i32 0, i32 3, !dbg !14883
  %str659 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name658, i32 0, i32 0, !dbg !14884
  store i8* %562, i8** %str659, align 8, !dbg !14885, !tbaa !12421
  br label %if.end.660, !dbg !14882

if.end.660:                                       ; preds = %if.then.657, %for.body.651
  br label %for.inc.661, !dbg !14886

for.inc.661:                                      ; preds = %if.end.660
  %564 = load %struct.tag*, %struct.tag** %p, align 8, !dbg !14888, !tbaa !2289
  %parent = getelementptr inbounds %struct.tag, %struct.tag* %564, i32 0, i32 0, !dbg !14889
  %565 = load %struct.tag*, %struct.tag** %parent, align 8, !dbg !14889, !tbaa !2640
  store %struct.tag* %565, %struct.tag** %p, align 8, !dbg !14890, !tbaa !2289
  br label %for.cond.649, !dbg !14891

for.end.662:                                      ; preds = %for.cond.649
  %566 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14892, !tbaa !2289
  %m_mem663 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %566, i32 0, i32 3, !dbg !14893
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem663, i32 0, i32 2, !dbg !14894
  %567 = load void (i8*)*, void (i8*)** %free_fcn, align 8, !dbg !14894, !tbaa !2435
  %568 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !14895, !tbaa !2289
  %uri664 = getelementptr inbounds %struct.binding, %struct.binding* %568, i32 0, i32 4, !dbg !14896
  %569 = load i8*, i8** %uri664, align 8, !dbg !14896, !tbaa !4596
  call void %567(i8* %569), !dbg !14892
  %570 = load i8*, i8** %uri, align 8, !dbg !14897, !tbaa !2289
  %571 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !14898, !tbaa !2289
  %uri665 = getelementptr inbounds %struct.binding, %struct.binding* %571, i32 0, i32 4, !dbg !14899
  store i8* %570, i8** %uri665, align 8, !dbg !14900, !tbaa !4596
  store i32 0, i32* %cleanup.dest.slot, !dbg !14901
  br label %cleanup.666, !dbg !14901

cleanup.666:                                      ; preds = %for.end.662, %if.then.641
  %572 = bitcast %struct.tag** %p to i8*, !dbg !14902
  call void @llvm.lifetime.end(i64 8, i8* %572) #2, !dbg !14902
  %cleanup.dest.667 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.667, label %cleanup.690 [
    i32 0, label %cleanup.cont.668
  ]

cleanup.cont.668:                                 ; preds = %cleanup.666
  br label %if.end.669, !dbg !14904

if.end.669:                                       ; preds = %cleanup.cont.668, %for.end.628
  %573 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !14905, !tbaa !2289
  %uri670 = getelementptr inbounds %struct.binding, %struct.binding* %573, i32 0, i32 4, !dbg !14906
  %574 = load i8*, i8** %uri670, align 8, !dbg !14906, !tbaa !4596
  %575 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !14907, !tbaa !2289
  %uriLen671 = getelementptr inbounds %struct.binding, %struct.binding* %575, i32 0, i32 5, !dbg !14908
  %576 = load i32, i32* %uriLen671, align 4, !dbg !14908, !tbaa !13346
  %idx.ext672 = sext i32 %576 to i64, !dbg !14909
  %add.ptr673 = getelementptr i8, i8* %574, i64 %idx.ext672, !dbg !14909
  store i8* %add.ptr673, i8** %uri, align 8, !dbg !14910, !tbaa !2289
  %577 = load i8*, i8** %uri, align 8, !dbg !14911, !tbaa !2289
  %578 = load i8*, i8** %localPart, align 8, !dbg !14912, !tbaa !2289
  %579 = load i32, i32* %i, align 4, !dbg !14913, !tbaa !3391
  %conv674 = sext i32 %579 to i64, !dbg !14913
  %mul675 = mul i64 %conv674, 1, !dbg !14914
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %577, i8* %578, i64 %mul675, i32 1, i1 false), !dbg !14915
  %580 = load i32, i32* %prefixLen, align 4, !dbg !14916, !tbaa !3391
  %tobool676 = icmp ne i32 %580, 0, !dbg !14916
  br i1 %tobool676, label %if.then.677, label %if.end.687, !dbg !14918

if.then.677:                                      ; preds = %if.end.669
  %581 = load i32, i32* %i, align 4, !dbg !14919, !tbaa !3391
  %sub678 = sub i32 %581, 1, !dbg !14921
  %582 = load i8*, i8** %uri, align 8, !dbg !14922, !tbaa !2289
  %idx.ext679 = sext i32 %sub678 to i64, !dbg !14922
  %add.ptr680 = getelementptr i8, i8* %582, i64 %idx.ext679, !dbg !14922
  store i8* %add.ptr680, i8** %uri, align 8, !dbg !14922, !tbaa !2289
  %583 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14923, !tbaa !2289
  %m_namespaceSeparator681 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %583, i32 0, i32 83, !dbg !14924
  %584 = load i8, i8* %m_namespaceSeparator681, align 1, !dbg !14924, !tbaa !2541
  %585 = load i8*, i8** %uri, align 8, !dbg !14925, !tbaa !2289
  store i8 %584, i8* %585, align 1, !dbg !14926, !tbaa !2307
  %586 = load i8*, i8** %uri, align 8, !dbg !14927, !tbaa !2289
  %add.ptr682 = getelementptr i8, i8* %586, i64 1, !dbg !14928
  %587 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !14929, !tbaa !2289
  %prefix683 = getelementptr inbounds %struct.binding, %struct.binding* %587, i32 0, i32 0, !dbg !14930
  %588 = load %struct.prefix*, %struct.prefix** %prefix683, align 8, !dbg !14930, !tbaa !12602
  %name684 = getelementptr inbounds %struct.prefix, %struct.prefix* %588, i32 0, i32 0, !dbg !14931
  %589 = load i8*, i8** %name684, align 8, !dbg !14931, !tbaa !3638
  %590 = load i32, i32* %prefixLen, align 4, !dbg !14932, !tbaa !3391
  %conv685 = sext i32 %590 to i64, !dbg !14932
  %mul686 = mul i64 %conv685, 1, !dbg !14933
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr682, i8* %589, i64 %mul686, i32 1, i1 false), !dbg !14934
  br label %if.end.687, !dbg !14935

if.end.687:                                       ; preds = %if.then.677, %if.end.669
  %591 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !14936, !tbaa !2289
  %uri688 = getelementptr inbounds %struct.binding, %struct.binding* %591, i32 0, i32 4, !dbg !14937
  %592 = load i8*, i8** %uri688, align 8, !dbg !14937, !tbaa !4596
  %593 = load %struct.TAG_NAME*, %struct.TAG_NAME** %tagNamePtr.addr, align 8, !dbg !14938, !tbaa !2289
  %str689 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %593, i32 0, i32 0, !dbg !14939
  store i8* %592, i8** %str689, align 8, !dbg !14940, !tbaa !12497
  store i32 0, i32* %retval, !dbg !14941
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.690, !dbg !14941

cleanup.690:                                      ; preds = %if.end.687, %cleanup.666, %if.else.594, %if.then.577, %if.then.569, %cleanup.543, %cleanup.263, %cleanup.166, %cleanup.41, %cleanup
  %594 = bitcast i8** %localPart to i8*, !dbg !14942
  call void @llvm.lifetime.end(i64 8, i8* %594) #2, !dbg !14942
  %595 = bitcast %struct.binding** %binding to i8*, !dbg !14942
  call void @llvm.lifetime.end(i64 8, i8* %595) #2, !dbg !14942
  %596 = bitcast i32* %nPrefixes to i8*, !dbg !14942
  call void @llvm.lifetime.end(i64 4, i8* %596) #2, !dbg !14942
  %597 = bitcast i8** %uri to i8*, !dbg !14942
  call void @llvm.lifetime.end(i64 8, i8* %597) #2, !dbg !14942
  %598 = bitcast i32* %n to i8*, !dbg !14942
  call void @llvm.lifetime.end(i64 4, i8* %598) #2, !dbg !14942
  %599 = bitcast i32* %i to i8*, !dbg !14942
  call void @llvm.lifetime.end(i64 4, i8* %599) #2, !dbg !14942
  %600 = bitcast i32* %prefixLen to i8*, !dbg !14942
  call void @llvm.lifetime.end(i64 4, i8* %600) #2, !dbg !14942
  %601 = bitcast i32* %attIndex to i8*, !dbg !14942
  call void @llvm.lifetime.end(i64 4, i8* %601) #2, !dbg !14942
  %602 = bitcast i8*** %appAtts to i8*, !dbg !14942
  call void @llvm.lifetime.end(i64 8, i8* %602) #2, !dbg !14942
  %603 = bitcast i32* %nDefaultAtts to i8*, !dbg !14942
  call void @llvm.lifetime.end(i64 4, i8* %603) #2, !dbg !14942
  %604 = bitcast %struct.ELEMENT_TYPE** %elementType to i8*, !dbg !14942
  call void @llvm.lifetime.end(i64 8, i8* %604) #2, !dbg !14942
  %605 = bitcast %struct.DTD** %dtd to i8*, !dbg !14942
  call void @llvm.lifetime.end(i64 8, i8* %605) #2, !dbg !14942
  %606 = load i32, i32* %retval, !dbg !14942
  ret i32 %606, !dbg !14942
}

; Function Attrs: nounwind uwtable
define internal i32 @epilogProcessor(%struct.XML_ParserStruct* %parser, i8* %s, i8* %end, i8** %nextPtr) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %s.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextPtr.addr = alloca i8**, align 8
  %next = alloca i8*, align 8
  %tok = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1662, metadata !2293), !dbg !14943
  store i8* %s, i8** %s.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !1663, metadata !2293), !dbg !14944
  store i8* %end, i8** %end.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !1664, metadata !2293), !dbg !14945
  store i8** %nextPtr, i8*** %nextPtr.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8*** %nextPtr.addr, metadata !1665, metadata !2293), !dbg !14946
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14947, !tbaa !2289
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 45, !dbg !14948
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @epilogProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8, !dbg !14949, !tbaa !2809
  %1 = load i8*, i8** %s.addr, align 8, !dbg !14950, !tbaa !2289
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14951, !tbaa !2289
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 47, !dbg !14952
  store i8* %1, i8** %m_eventPtr, align 8, !dbg !14953, !tbaa !3006
  br label %for.cond, !dbg !14954

for.cond:                                         ; preds = %cleanup.cont, %entry
  %3 = bitcast i8** %next to i8*, !dbg !14955
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !14955
  call void @llvm.dbg.declare(metadata i8** %next, metadata !1666, metadata !2293), !dbg !14956
  store i8* null, i8** %next, align 8, !dbg !14956, !tbaa !2289
  %4 = bitcast i32* %tok to i8*, !dbg !14957
  call void @llvm.lifetime.start(i64 4, i8* %4) #2, !dbg !14957
  call void @llvm.dbg.declare(metadata i32* %tok, metadata !1670, metadata !2293), !dbg !14958
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14959, !tbaa !2289
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 34, !dbg !14960
  %6 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !14960, !tbaa !5191
  %scanners = getelementptr inbounds %struct.encoding, %struct.encoding* %6, i32 0, i32 0, !dbg !14961
  %arrayidx = getelementptr [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners, i32 0, i64 0, !dbg !14962
  %7 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx, align 8, !dbg !14962, !tbaa !2289
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14963, !tbaa !2289
  %m_encoding1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 34, !dbg !14964
  %9 = load %struct.encoding*, %struct.encoding** %m_encoding1, align 8, !dbg !14964, !tbaa !5191
  %10 = load i8*, i8** %s.addr, align 8, !dbg !14965, !tbaa !2289
  %11 = load i8*, i8** %end.addr, align 8, !dbg !14966, !tbaa !2289
  %call = call i32 %7(%struct.encoding* %9, i8* %10, i8* %11, i8** %next), !dbg !14967
  store i32 %call, i32* %tok, align 4, !dbg !14958, !tbaa !3391
  %12 = load i8*, i8** %next, align 8, !dbg !14968, !tbaa !2289
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14969, !tbaa !2289
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 48, !dbg !14970
  store i8* %12, i8** %m_eventEndPtr, align 8, !dbg !14971, !tbaa !3010
  %14 = load i32, i32* %tok, align 4, !dbg !14972, !tbaa !3391
  switch i32 %14, label %sw.default [
    i32 -15, label %sw.bb
    i32 -4, label %sw.bb.5
    i32 15, label %sw.bb.6
    i32 11, label %sw.bb.12
    i32 13, label %sw.bb.18
    i32 0, label %sw.bb.24
    i32 -1, label %sw.bb.26
    i32 -2, label %sw.bb.31
  ], !dbg !14973

sw.bb:                                            ; preds = %for.cond
  %15 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14974, !tbaa !2289
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %15, i32 0, i32 18, !dbg !14977
  %16 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler, align 8, !dbg !14977, !tbaa !2874
  %tobool = icmp ne void (i8*, i8*, i32)* %16, null, !dbg !14978
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !14979

if.then:                                          ; preds = %sw.bb
  %17 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14980, !tbaa !2289
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14982, !tbaa !2289
  %m_encoding2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 34, !dbg !14983
  %19 = load %struct.encoding*, %struct.encoding** %m_encoding2, align 8, !dbg !14983, !tbaa !5191
  %20 = load i8*, i8** %s.addr, align 8, !dbg !14984, !tbaa !2289
  %21 = load i8*, i8** %next, align 8, !dbg !14985, !tbaa !2289
  call void @reportDefault(%struct.XML_ParserStruct* %17, %struct.encoding* %19, i8* %20, i8* %21), !dbg !14986
  %22 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !14987, !tbaa !2289
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %22, i32 0, i32 85, !dbg !14989
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0, !dbg !14990
  %23 = load i32, i32* %parsing, align 4, !dbg !14990, !tbaa !3052
  %cmp = icmp eq i32 %23, 2, !dbg !14991
  br i1 %cmp, label %if.then.3, label %if.end, !dbg !14992

if.then.3:                                        ; preds = %if.then
  store i32 35, i32* %retval, !dbg !14993
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14993

if.end:                                           ; preds = %if.then
  br label %if.end.4, !dbg !14994

if.end.4:                                         ; preds = %if.end, %sw.bb
  %24 = load i8*, i8** %next, align 8, !dbg !14995, !tbaa !2289
  %25 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !14996, !tbaa !2289
  store i8* %24, i8** %25, align 8, !dbg !14997, !tbaa !2289
  store i32 0, i32* %retval, !dbg !14998
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14998

sw.bb.5:                                          ; preds = %for.cond
  %26 = load i8*, i8** %s.addr, align 8, !dbg !14999, !tbaa !2289
  %27 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !15000, !tbaa !2289
  store i8* %26, i8** %27, align 8, !dbg !15001, !tbaa !2289
  store i32 0, i32* %retval, !dbg !15002
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15002

sw.bb.6:                                          ; preds = %for.cond
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15003, !tbaa !2289
  %m_defaultHandler7 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %28, i32 0, i32 18, !dbg !15005
  %29 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler7, align 8, !dbg !15005, !tbaa !2874
  %tobool8 = icmp ne void (i8*, i8*, i32)* %29, null, !dbg !15006
  br i1 %tobool8, label %if.then.9, label %if.end.11, !dbg !15007

if.then.9:                                        ; preds = %sw.bb.6
  %30 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15008, !tbaa !2289
  %31 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15009, !tbaa !2289
  %m_encoding10 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %31, i32 0, i32 34, !dbg !15010
  %32 = load %struct.encoding*, %struct.encoding** %m_encoding10, align 8, !dbg !15010, !tbaa !5191
  %33 = load i8*, i8** %s.addr, align 8, !dbg !15011, !tbaa !2289
  %34 = load i8*, i8** %next, align 8, !dbg !15012, !tbaa !2289
  call void @reportDefault(%struct.XML_ParserStruct* %30, %struct.encoding* %32, i8* %33, i8* %34), !dbg !15013
  br label %if.end.11, !dbg !15013

if.end.11:                                        ; preds = %if.then.9, %sw.bb.6
  br label %sw.epilog, !dbg !15014

sw.bb.12:                                         ; preds = %for.cond
  %35 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15015, !tbaa !2289
  %36 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15017, !tbaa !2289
  %m_encoding13 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %36, i32 0, i32 34, !dbg !15018
  %37 = load %struct.encoding*, %struct.encoding** %m_encoding13, align 8, !dbg !15018, !tbaa !5191
  %38 = load i8*, i8** %s.addr, align 8, !dbg !15019, !tbaa !2289
  %39 = load i8*, i8** %next, align 8, !dbg !15020, !tbaa !2289
  %call14 = call i32 @reportProcessingInstruction(%struct.XML_ParserStruct* %35, %struct.encoding* %37, i8* %38, i8* %39), !dbg !15021
  %tobool15 = icmp ne i32 %call14, 0, !dbg !15021
  br i1 %tobool15, label %if.end.17, label %if.then.16, !dbg !15022

if.then.16:                                       ; preds = %sw.bb.12
  store i32 1, i32* %retval, !dbg !15023
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15023

if.end.17:                                        ; preds = %sw.bb.12
  br label %sw.epilog, !dbg !15024

sw.bb.18:                                         ; preds = %for.cond
  %40 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15025, !tbaa !2289
  %41 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15027, !tbaa !2289
  %m_encoding19 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %41, i32 0, i32 34, !dbg !15028
  %42 = load %struct.encoding*, %struct.encoding** %m_encoding19, align 8, !dbg !15028, !tbaa !5191
  %43 = load i8*, i8** %s.addr, align 8, !dbg !15029, !tbaa !2289
  %44 = load i8*, i8** %next, align 8, !dbg !15030, !tbaa !2289
  %call20 = call i32 @reportComment(%struct.XML_ParserStruct* %40, %struct.encoding* %42, i8* %43, i8* %44), !dbg !15031
  %tobool21 = icmp ne i32 %call20, 0, !dbg !15031
  br i1 %tobool21, label %if.end.23, label %if.then.22, !dbg !15032

if.then.22:                                       ; preds = %sw.bb.18
  store i32 1, i32* %retval, !dbg !15033
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15033

if.end.23:                                        ; preds = %sw.bb.18
  br label %sw.epilog, !dbg !15034

sw.bb.24:                                         ; preds = %for.cond
  %45 = load i8*, i8** %next, align 8, !dbg !15035, !tbaa !2289
  %46 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15036, !tbaa !2289
  %m_eventPtr25 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %46, i32 0, i32 47, !dbg !15037
  store i8* %45, i8** %m_eventPtr25, align 8, !dbg !15038, !tbaa !3006
  store i32 4, i32* %retval, !dbg !15039
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15039

sw.bb.26:                                         ; preds = %for.cond
  %47 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15040, !tbaa !2289
  %m_parsingStatus27 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %47, i32 0, i32 85, !dbg !15042
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus27, i32 0, i32 1, !dbg !15043
  %48 = load i8, i8* %finalBuffer, align 1, !dbg !15043, !tbaa !5150
  %tobool28 = icmp ne i8 %48, 0, !dbg !15044
  br i1 %tobool28, label %if.end.30, label %if.then.29, !dbg !15045

if.then.29:                                       ; preds = %sw.bb.26
  %49 = load i8*, i8** %s.addr, align 8, !dbg !15046, !tbaa !2289
  %50 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !15048, !tbaa !2289
  store i8* %49, i8** %50, align 8, !dbg !15049, !tbaa !2289
  store i32 0, i32* %retval, !dbg !15050
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15050

if.end.30:                                        ; preds = %sw.bb.26
  store i32 5, i32* %retval, !dbg !15051
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15051

sw.bb.31:                                         ; preds = %for.cond
  %51 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15052, !tbaa !2289
  %m_parsingStatus32 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %51, i32 0, i32 85, !dbg !15054
  %finalBuffer33 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus32, i32 0, i32 1, !dbg !15055
  %52 = load i8, i8* %finalBuffer33, align 1, !dbg !15055, !tbaa !5150
  %tobool34 = icmp ne i8 %52, 0, !dbg !15056
  br i1 %tobool34, label %if.end.36, label %if.then.35, !dbg !15057

if.then.35:                                       ; preds = %sw.bb.31
  %53 = load i8*, i8** %s.addr, align 8, !dbg !15058, !tbaa !2289
  %54 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !15060, !tbaa !2289
  store i8* %53, i8** %54, align 8, !dbg !15061, !tbaa !2289
  store i32 0, i32* %retval, !dbg !15062
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15062

if.end.36:                                        ; preds = %sw.bb.31
  store i32 6, i32* %retval, !dbg !15063
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15063

sw.default:                                       ; preds = %for.cond
  store i32 9, i32* %retval, !dbg !15064
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15064

sw.epilog:                                        ; preds = %if.end.23, %if.end.17, %if.end.11
  %55 = load i8*, i8** %next, align 8, !dbg !15065, !tbaa !2289
  store i8* %55, i8** %s.addr, align 8, !dbg !15066, !tbaa !2289
  %56 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15067, !tbaa !2289
  %m_eventPtr37 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %56, i32 0, i32 47, !dbg !15068
  store i8* %55, i8** %m_eventPtr37, align 8, !dbg !15069, !tbaa !3006
  %57 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15070, !tbaa !2289
  %m_parsingStatus38 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %57, i32 0, i32 85, !dbg !15071
  %parsing39 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus38, i32 0, i32 0, !dbg !15072
  %58 = load i32, i32* %parsing39, align 4, !dbg !15072, !tbaa !3052
  switch i32 %58, label %sw.default.42 [
    i32 3, label %sw.bb.40
    i32 2, label %sw.bb.41
  ], !dbg !15073

sw.bb.40:                                         ; preds = %sw.epilog
  %59 = load i8*, i8** %next, align 8, !dbg !15074, !tbaa !2289
  %60 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !15076, !tbaa !2289
  store i8* %59, i8** %60, align 8, !dbg !15077, !tbaa !2289
  store i32 0, i32* %retval, !dbg !15078
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15078

sw.bb.41:                                         ; preds = %sw.epilog
  store i32 35, i32* %retval, !dbg !15079
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15079

sw.default.42:                                    ; preds = %sw.epilog
  br label %sw.epilog.43, !dbg !15080

sw.epilog.43:                                     ; preds = %sw.default.42
  store i32 0, i32* %cleanup.dest.slot, !dbg !15081
  br label %cleanup, !dbg !15081

cleanup:                                          ; preds = %sw.epilog.43, %sw.bb.41, %sw.bb.40, %sw.default, %if.end.36, %if.then.35, %if.end.30, %if.then.29, %sw.bb.24, %if.then.22, %if.then.16, %sw.bb.5, %if.end.4, %if.then.3
  %61 = bitcast i32* %tok to i8*, !dbg !15082
  call void @llvm.lifetime.end(i64 4, i8* %61) #2, !dbg !15082
  %62 = bitcast i8** %next to i8*, !dbg !15082
  call void @llvm.lifetime.end(i64 8, i8* %62) #2, !dbg !15082
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.cond, !dbg !15084

return:                                           ; preds = %cleanup
  %63 = load i32, i32* %retval, !dbg !15085
  ret i32 %63, !dbg !15085

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #5

declare i32 @PyExpat_XmlUtf8Encode(i32, i8*) #3

; Function Attrs: nounwind uwtable
define internal i32 @doCdataSection(%struct.XML_ParserStruct* %parser, %struct.encoding* %enc, i8** %startPtr, i8* %end, i8** %nextPtr, i8 zeroext %haveMore) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %startPtr.addr = alloca i8**, align 8
  %end.addr = alloca i8*, align 8
  %nextPtr.addr = alloca i8**, align 8
  %haveMore.addr = alloca i8, align 1
  %s = alloca i8*, align 8
  %eventPP = alloca i8**, align 8
  %eventEndPP = alloca i8**, align 8
  %next = alloca i8*, align 8
  %tok = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %c = alloca i8, align 1
  %charDataHandler = alloca void (i8*, i8*, i32)*, align 8
  %dataPtr = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1675, metadata !2293), !dbg !15086
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !1676, metadata !2293), !dbg !15087
  store i8** %startPtr, i8*** %startPtr.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8*** %startPtr.addr, metadata !1677, metadata !2293), !dbg !15088
  store i8* %end, i8** %end.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !1678, metadata !2293), !dbg !15089
  store i8** %nextPtr, i8*** %nextPtr.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8*** %nextPtr.addr, metadata !1679, metadata !2293), !dbg !15090
  store i8 %haveMore, i8* %haveMore.addr, align 1, !tbaa !2307
  call void @llvm.dbg.declare(metadata i8* %haveMore.addr, metadata !1680, metadata !2293), !dbg !15091
  %0 = bitcast i8** %s to i8*, !dbg !15092
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !15092
  call void @llvm.dbg.declare(metadata i8** %s, metadata !1681, metadata !2293), !dbg !15093
  %1 = load i8**, i8*** %startPtr.addr, align 8, !dbg !15094, !tbaa !2289
  %2 = load i8*, i8** %1, align 8, !dbg !15095, !tbaa !2289
  store i8* %2, i8** %s, align 8, !dbg !15093, !tbaa !2289
  %3 = bitcast i8*** %eventPP to i8*, !dbg !15096
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !15096
  call void @llvm.dbg.declare(metadata i8*** %eventPP, metadata !1682, metadata !2293), !dbg !15097
  %4 = bitcast i8*** %eventEndPP to i8*, !dbg !15098
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !15098
  call void @llvm.dbg.declare(metadata i8*** %eventEndPP, metadata !1683, metadata !2293), !dbg !15099
  %5 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !15100, !tbaa !2289
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15102, !tbaa !2289
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 34, !dbg !15103
  %7 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !15103, !tbaa !5191
  %cmp = icmp eq %struct.encoding* %5, %7, !dbg !15104
  br i1 %cmp, label %if.then, label %if.else, !dbg !15105

if.then:                                          ; preds = %entry
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15106, !tbaa !2289
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 47, !dbg !15108
  store i8** %m_eventPtr, i8*** %eventPP, align 8, !dbg !15109, !tbaa !2289
  %9 = load i8*, i8** %s, align 8, !dbg !15110, !tbaa !2289
  %10 = load i8**, i8*** %eventPP, align 8, !dbg !15111, !tbaa !2289
  store i8* %9, i8** %10, align 8, !dbg !15112, !tbaa !2289
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15113, !tbaa !2289
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 48, !dbg !15114
  store i8** %m_eventEndPtr, i8*** %eventEndPP, align 8, !dbg !15115, !tbaa !2289
  br label %if.end, !dbg !15116

if.else:                                          ; preds = %entry
  %12 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15117, !tbaa !2289
  %m_openInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %12, i32 0, i32 50, !dbg !15119
  %13 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities, align 8, !dbg !15119, !tbaa !2664
  %internalEventPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %13, i32 0, i32 0, !dbg !15120
  store i8** %internalEventPtr, i8*** %eventPP, align 8, !dbg !15121, !tbaa !2289
  %14 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15122, !tbaa !2289
  %m_openInternalEntities1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %14, i32 0, i32 50, !dbg !15123
  %15 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities1, align 8, !dbg !15123, !tbaa !2664
  %internalEventEndPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %15, i32 0, i32 1, !dbg !15124
  store i8** %internalEventEndPtr, i8*** %eventEndPP, align 8, !dbg !15125, !tbaa !2289
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %16 = load i8*, i8** %s, align 8, !dbg !15126, !tbaa !2289
  %17 = load i8**, i8*** %eventPP, align 8, !dbg !15127, !tbaa !2289
  store i8* %16, i8** %17, align 8, !dbg !15128, !tbaa !2289
  %18 = load i8**, i8*** %startPtr.addr, align 8, !dbg !15129, !tbaa !2289
  store i8* null, i8** %18, align 8, !dbg !15130, !tbaa !2289
  br label %for.cond, !dbg !15131

for.cond:                                         ; preds = %cleanup.cont.68, %if.end
  %19 = bitcast i8** %next to i8*, !dbg !15132
  call void @llvm.lifetime.start(i64 8, i8* %19) #2, !dbg !15132
  call void @llvm.dbg.declare(metadata i8** %next, metadata !1684, metadata !2293), !dbg !15133
  %20 = bitcast i32* %tok to i8*, !dbg !15134
  call void @llvm.lifetime.start(i64 4, i8* %20) #2, !dbg !15134
  call void @llvm.dbg.declare(metadata i32* %tok, metadata !1688, metadata !2293), !dbg !15135
  %21 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !15136, !tbaa !2289
  %scanners = getelementptr inbounds %struct.encoding, %struct.encoding* %21, i32 0, i32 0, !dbg !15137
  %arrayidx = getelementptr [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners, i32 0, i64 2, !dbg !15138
  %22 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx, align 8, !dbg !15138, !tbaa !2289
  %23 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !15139, !tbaa !2289
  %24 = load i8*, i8** %s, align 8, !dbg !15140, !tbaa !2289
  %25 = load i8*, i8** %end.addr, align 8, !dbg !15141, !tbaa !2289
  %call = call i32 %22(%struct.encoding* %23, i8* %24, i8* %25, i8** %next), !dbg !15142
  store i32 %call, i32* %tok, align 4, !dbg !15135, !tbaa !3391
  %26 = load i8*, i8** %next, align 8, !dbg !15143, !tbaa !2289
  %27 = load i8**, i8*** %eventEndPP, align 8, !dbg !15144, !tbaa !2289
  store i8* %26, i8** %27, align 8, !dbg !15145, !tbaa !2289
  %28 = load i32, i32* %tok, align 4, !dbg !15146, !tbaa !3391
  switch i32 %28, label %sw.default [
    i32 40, label %sw.bb
    i32 7, label %sw.bb.12
    i32 6, label %sw.bb.23
    i32 0, label %sw.bb.50
    i32 -2, label %sw.bb.51
    i32 -1, label %sw.bb.55
    i32 -4, label %sw.bb.55
  ], !dbg !15147

sw.bb:                                            ; preds = %for.cond
  %29 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15148, !tbaa !2289
  %m_endCdataSectionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %29, i32 0, i32 17, !dbg !15150
  %30 = load void (i8*)*, void (i8*)** %m_endCdataSectionHandler, align 8, !dbg !15150, !tbaa !2870
  %tobool = icmp ne void (i8*)* %30, null, !dbg !15151
  br i1 %tobool, label %if.then.2, label %if.else.4, !dbg !15152

if.then.2:                                        ; preds = %sw.bb
  %31 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15153, !tbaa !2289
  %m_endCdataSectionHandler3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %31, i32 0, i32 17, !dbg !15154
  %32 = load void (i8*)*, void (i8*)** %m_endCdataSectionHandler3, align 8, !dbg !15154, !tbaa !2870
  %33 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15155, !tbaa !2289
  %m_handlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %33, i32 0, i32 1, !dbg !15156
  %34 = load i8*, i8** %m_handlerArg, align 8, !dbg !15156, !tbaa !2842
  call void %32(i8* %34), !dbg !15157
  br label %if.end.8, !dbg !15157

if.else.4:                                        ; preds = %sw.bb
  %35 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15158, !tbaa !2289
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %35, i32 0, i32 18, !dbg !15160
  %36 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler, align 8, !dbg !15160, !tbaa !2874
  %tobool5 = icmp ne void (i8*, i8*, i32)* %36, null, !dbg !15161
  br i1 %tobool5, label %if.then.6, label %if.end.7, !dbg !15162

if.then.6:                                        ; preds = %if.else.4
  %37 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15163, !tbaa !2289
  %38 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !15164, !tbaa !2289
  %39 = load i8*, i8** %s, align 8, !dbg !15165, !tbaa !2289
  %40 = load i8*, i8** %next, align 8, !dbg !15166, !tbaa !2289
  call void @reportDefault(%struct.XML_ParserStruct* %37, %struct.encoding* %38, i8* %39, i8* %40), !dbg !15167
  br label %if.end.7, !dbg !15167

if.end.7:                                         ; preds = %if.then.6, %if.else.4
  br label %if.end.8

if.end.8:                                         ; preds = %if.end.7, %if.then.2
  %41 = load i8*, i8** %next, align 8, !dbg !15168, !tbaa !2289
  %42 = load i8**, i8*** %startPtr.addr, align 8, !dbg !15169, !tbaa !2289
  store i8* %41, i8** %42, align 8, !dbg !15170, !tbaa !2289
  %43 = load i8*, i8** %next, align 8, !dbg !15171, !tbaa !2289
  %44 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !15172, !tbaa !2289
  store i8* %43, i8** %44, align 8, !dbg !15173, !tbaa !2289
  %45 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15174, !tbaa !2289
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %45, i32 0, i32 85, !dbg !15176
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0, !dbg !15177
  %46 = load i32, i32* %parsing, align 4, !dbg !15177, !tbaa !3052
  %cmp9 = icmp eq i32 %46, 2, !dbg !15178
  br i1 %cmp9, label %if.then.10, label %if.else.11, !dbg !15179

if.then.10:                                       ; preds = %if.end.8
  store i32 35, i32* %retval, !dbg !15180
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.65, !dbg !15180

if.else.11:                                       ; preds = %if.end.8
  store i32 0, i32* %retval, !dbg !15181
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.65, !dbg !15181

sw.bb.12:                                         ; preds = %for.cond
  %47 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15182, !tbaa !2289
  %m_characterDataHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %47, i32 0, i32 13, !dbg !15183
  %48 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler, align 8, !dbg !15183, !tbaa !2854
  %tobool13 = icmp ne void (i8*, i8*, i32)* %48, null, !dbg !15184
  br i1 %tobool13, label %if.then.14, label %if.else.17, !dbg !15185

if.then.14:                                       ; preds = %sw.bb.12
  call void @llvm.lifetime.start(i64 1, i8* %c) #2, !dbg !15186
  call void @llvm.dbg.declare(metadata i8* %c, metadata !1689, metadata !2293), !dbg !15187
  store i8 10, i8* %c, align 1, !dbg !15187, !tbaa !2307
  %49 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15188, !tbaa !2289
  %m_characterDataHandler15 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %49, i32 0, i32 13, !dbg !15189
  %50 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler15, align 8, !dbg !15189, !tbaa !2854
  %51 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15190, !tbaa !2289
  %m_handlerArg16 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %51, i32 0, i32 1, !dbg !15191
  %52 = load i8*, i8** %m_handlerArg16, align 8, !dbg !15191, !tbaa !2842
  call void %50(i8* %52, i8* %c, i32 1), !dbg !15192
  call void @llvm.lifetime.end(i64 1, i8* %c) #2, !dbg !15193
  br label %if.end.22, !dbg !15194

if.else.17:                                       ; preds = %sw.bb.12
  %53 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15195, !tbaa !2289
  %m_defaultHandler18 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %53, i32 0, i32 18, !dbg !15197
  %54 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler18, align 8, !dbg !15197, !tbaa !2874
  %tobool19 = icmp ne void (i8*, i8*, i32)* %54, null, !dbg !15198
  br i1 %tobool19, label %if.then.20, label %if.end.21, !dbg !15199

if.then.20:                                       ; preds = %if.else.17
  %55 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15200, !tbaa !2289
  %56 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !15201, !tbaa !2289
  %57 = load i8*, i8** %s, align 8, !dbg !15202, !tbaa !2289
  %58 = load i8*, i8** %next, align 8, !dbg !15203, !tbaa !2289
  call void @reportDefault(%struct.XML_ParserStruct* %55, %struct.encoding* %56, i8* %57, i8* %58), !dbg !15204
  br label %if.end.21, !dbg !15204

if.end.21:                                        ; preds = %if.then.20, %if.else.17
  br label %if.end.22

if.end.22:                                        ; preds = %if.end.21, %if.then.14
  br label %sw.epilog, !dbg !15205

sw.bb.23:                                         ; preds = %for.cond
  %59 = bitcast void (i8*, i8*, i32)** %charDataHandler to i8*, !dbg !15206
  call void @llvm.lifetime.start(i64 8, i8* %59) #2, !dbg !15206
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i32)** %charDataHandler, metadata !1693, metadata !2293), !dbg !15207
  %60 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15208, !tbaa !2289
  %m_characterDataHandler24 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %60, i32 0, i32 13, !dbg !15209
  %61 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler24, align 8, !dbg !15209, !tbaa !2854
  store void (i8*, i8*, i32)* %61, void (i8*, i8*, i32)** %charDataHandler, align 8, !dbg !15207, !tbaa !2289
  %62 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %charDataHandler, align 8, !dbg !15210, !tbaa !2289
  %tobool25 = icmp ne void (i8*, i8*, i32)* %62, null, !dbg !15210
  br i1 %tobool25, label %if.then.26, label %if.else.44, !dbg !15211

if.then.26:                                       ; preds = %sw.bb.23
  %63 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !15212, !tbaa !2289
  %isUtf8 = getelementptr inbounds %struct.encoding, %struct.encoding* %63, i32 0, i32 14, !dbg !15213
  %64 = load i8, i8* %isUtf8, align 1, !dbg !15213, !tbaa !6028
  %tobool27 = icmp ne i8 %64, 0, !dbg !15214
  br i1 %tobool27, label %if.else.37, label %if.then.28, !dbg !15215

if.then.28:                                       ; preds = %if.then.26
  br label %for.cond.29, !dbg !15216

for.cond.29:                                      ; preds = %cleanup.cont, %if.then.28
  %65 = bitcast i8** %dataPtr to i8*, !dbg !15217
  call void @llvm.lifetime.start(i64 8, i8* %65) #2, !dbg !15217
  call void @llvm.dbg.declare(metadata i8** %dataPtr, metadata !1695, metadata !2293), !dbg !15218
  %66 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15219, !tbaa !2289
  %m_dataBuf = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %66, i32 0, i32 9, !dbg !15220
  %67 = load i8*, i8** %m_dataBuf, align 8, !dbg !15220, !tbaa !2445
  store i8* %67, i8** %dataPtr, align 8, !dbg !15218, !tbaa !2289
  %68 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !15221, !tbaa !2289
  %utf8Convert = getelementptr inbounds %struct.encoding, %struct.encoding* %68, i32 0, i32 11, !dbg !15222
  %69 = load void (%struct.encoding*, i8**, i8*, i8**, i8*)*, void (%struct.encoding*, i8**, i8*, i8**, i8*)** %utf8Convert, align 8, !dbg !15222, !tbaa !6065
  %70 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !15223, !tbaa !2289
  %71 = load i8*, i8** %next, align 8, !dbg !15224, !tbaa !2289
  %72 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15225, !tbaa !2289
  %m_dataBufEnd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %72, i32 0, i32 10, !dbg !15226
  %73 = load i8*, i8** %m_dataBufEnd, align 8, !dbg !15226, !tbaa !2470
  call void %69(%struct.encoding* %70, i8** %s, i8* %71, i8** %dataPtr, i8* %73), !dbg !15227
  %74 = load i8*, i8** %next, align 8, !dbg !15228, !tbaa !2289
  %75 = load i8**, i8*** %eventEndPP, align 8, !dbg !15229, !tbaa !2289
  store i8* %74, i8** %75, align 8, !dbg !15230, !tbaa !2289
  %76 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %charDataHandler, align 8, !dbg !15231, !tbaa !2289
  %77 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15232, !tbaa !2289
  %m_handlerArg30 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %77, i32 0, i32 1, !dbg !15233
  %78 = load i8*, i8** %m_handlerArg30, align 8, !dbg !15233, !tbaa !2842
  %79 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15234, !tbaa !2289
  %m_dataBuf31 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %79, i32 0, i32 9, !dbg !15235
  %80 = load i8*, i8** %m_dataBuf31, align 8, !dbg !15235, !tbaa !2445
  %81 = load i8*, i8** %dataPtr, align 8, !dbg !15236, !tbaa !2289
  %82 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15237, !tbaa !2289
  %m_dataBuf32 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %82, i32 0, i32 9, !dbg !15238
  %83 = load i8*, i8** %m_dataBuf32, align 8, !dbg !15238, !tbaa !2445
  %sub.ptr.lhs.cast = ptrtoint i8* %81 to i64, !dbg !15239
  %sub.ptr.rhs.cast = ptrtoint i8* %83 to i64, !dbg !15239
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !15239
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !15240
  call void %76(i8* %78, i8* %80, i32 %conv), !dbg !15231
  %84 = load i8*, i8** %s, align 8, !dbg !15241, !tbaa !2289
  %85 = load i8*, i8** %next, align 8, !dbg !15243, !tbaa !2289
  %cmp33 = icmp eq i8* %84, %85, !dbg !15244
  br i1 %cmp33, label %if.then.35, label %if.end.36, !dbg !15245

if.then.35:                                       ; preds = %for.cond.29
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15246

if.end.36:                                        ; preds = %for.cond.29
  %86 = load i8*, i8** %s, align 8, !dbg !15247, !tbaa !2289
  %87 = load i8**, i8*** %eventPP, align 8, !dbg !15248, !tbaa !2289
  store i8* %86, i8** %87, align 8, !dbg !15249, !tbaa !2289
  store i32 0, i32* %cleanup.dest.slot, !dbg !15250
  br label %cleanup, !dbg !15250

cleanup:                                          ; preds = %if.end.36, %if.then.35
  %88 = bitcast i8** %dataPtr to i8*, !dbg !15251
  call void @llvm.lifetime.end(i64 8, i8* %88) #2, !dbg !15251
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 5, label %for.end
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.cond.29, !dbg !15253

for.end:                                          ; preds = %cleanup
  br label %if.end.43, !dbg !15254

if.else.37:                                       ; preds = %if.then.26
  %89 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %charDataHandler, align 8, !dbg !15255, !tbaa !2289
  %90 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15256, !tbaa !2289
  %m_handlerArg38 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %90, i32 0, i32 1, !dbg !15257
  %91 = load i8*, i8** %m_handlerArg38, align 8, !dbg !15257, !tbaa !2842
  %92 = load i8*, i8** %s, align 8, !dbg !15258, !tbaa !2289
  %93 = load i8*, i8** %next, align 8, !dbg !15259, !tbaa !2289
  %94 = load i8*, i8** %s, align 8, !dbg !15260, !tbaa !2289
  %sub.ptr.lhs.cast39 = ptrtoint i8* %93 to i64, !dbg !15261
  %sub.ptr.rhs.cast40 = ptrtoint i8* %94 to i64, !dbg !15261
  %sub.ptr.sub41 = sub i64 %sub.ptr.lhs.cast39, %sub.ptr.rhs.cast40, !dbg !15261
  %conv42 = trunc i64 %sub.ptr.sub41 to i32, !dbg !15262
  call void %89(i8* %91, i8* %92, i32 %conv42), !dbg !15255
  br label %if.end.43

if.end.43:                                        ; preds = %if.else.37, %for.end
  br label %if.end.49, !dbg !15263

if.else.44:                                       ; preds = %sw.bb.23
  %95 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15264, !tbaa !2289
  %m_defaultHandler45 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %95, i32 0, i32 18, !dbg !15266
  %96 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler45, align 8, !dbg !15266, !tbaa !2874
  %tobool46 = icmp ne void (i8*, i8*, i32)* %96, null, !dbg !15267
  br i1 %tobool46, label %if.then.47, label %if.end.48, !dbg !15268

if.then.47:                                       ; preds = %if.else.44
  %97 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15269, !tbaa !2289
  %98 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !15270, !tbaa !2289
  %99 = load i8*, i8** %s, align 8, !dbg !15271, !tbaa !2289
  %100 = load i8*, i8** %next, align 8, !dbg !15272, !tbaa !2289
  call void @reportDefault(%struct.XML_ParserStruct* %97, %struct.encoding* %98, i8* %99, i8* %100), !dbg !15273
  br label %if.end.48, !dbg !15273

if.end.48:                                        ; preds = %if.then.47, %if.else.44
  br label %if.end.49

if.end.49:                                        ; preds = %if.end.48, %if.end.43
  %101 = bitcast void (i8*, i8*, i32)** %charDataHandler to i8*, !dbg !15274
  call void @llvm.lifetime.end(i64 8, i8* %101) #2, !dbg !15274
  br label %sw.epilog, !dbg !15275

sw.bb.50:                                         ; preds = %for.cond
  %102 = load i8*, i8** %next, align 8, !dbg !15276, !tbaa !2289
  %103 = load i8**, i8*** %eventPP, align 8, !dbg !15277, !tbaa !2289
  store i8* %102, i8** %103, align 8, !dbg !15278, !tbaa !2289
  store i32 4, i32* %retval, !dbg !15279
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.65, !dbg !15279

sw.bb.51:                                         ; preds = %for.cond
  %104 = load i8, i8* %haveMore.addr, align 1, !dbg !15280, !tbaa !2307
  %tobool52 = icmp ne i8 %104, 0, !dbg !15280
  br i1 %tobool52, label %if.then.53, label %if.end.54, !dbg !15282

if.then.53:                                       ; preds = %sw.bb.51
  %105 = load i8*, i8** %s, align 8, !dbg !15283, !tbaa !2289
  %106 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !15285, !tbaa !2289
  store i8* %105, i8** %106, align 8, !dbg !15286, !tbaa !2289
  store i32 0, i32* %retval, !dbg !15287
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.65, !dbg !15287

if.end.54:                                        ; preds = %sw.bb.51
  store i32 6, i32* %retval, !dbg !15288
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.65, !dbg !15288

sw.bb.55:                                         ; preds = %for.cond, %for.cond
  %107 = load i8, i8* %haveMore.addr, align 1, !dbg !15289, !tbaa !2307
  %tobool56 = icmp ne i8 %107, 0, !dbg !15289
  br i1 %tobool56, label %if.then.57, label %if.end.58, !dbg !15291

if.then.57:                                       ; preds = %sw.bb.55
  %108 = load i8*, i8** %s, align 8, !dbg !15292, !tbaa !2289
  %109 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !15294, !tbaa !2289
  store i8* %108, i8** %109, align 8, !dbg !15295, !tbaa !2289
  store i32 0, i32* %retval, !dbg !15296
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.65, !dbg !15296

if.end.58:                                        ; preds = %sw.bb.55
  store i32 20, i32* %retval, !dbg !15297
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.65, !dbg !15297

sw.default:                                       ; preds = %for.cond
  %110 = load i8*, i8** %next, align 8, !dbg !15298, !tbaa !2289
  %111 = load i8**, i8*** %eventPP, align 8, !dbg !15299, !tbaa !2289
  store i8* %110, i8** %111, align 8, !dbg !15300, !tbaa !2289
  store i32 23, i32* %retval, !dbg !15301
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.65, !dbg !15301

sw.epilog:                                        ; preds = %if.end.49, %if.end.22
  %112 = load i8*, i8** %next, align 8, !dbg !15302, !tbaa !2289
  store i8* %112, i8** %s, align 8, !dbg !15303, !tbaa !2289
  %113 = load i8**, i8*** %eventPP, align 8, !dbg !15304, !tbaa !2289
  store i8* %112, i8** %113, align 8, !dbg !15305, !tbaa !2289
  %114 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15306, !tbaa !2289
  %m_parsingStatus59 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %114, i32 0, i32 85, !dbg !15307
  %parsing60 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus59, i32 0, i32 0, !dbg !15308
  %115 = load i32, i32* %parsing60, align 4, !dbg !15308, !tbaa !3052
  switch i32 %115, label %sw.default.63 [
    i32 3, label %sw.bb.61
    i32 2, label %sw.bb.62
  ], !dbg !15309

sw.bb.61:                                         ; preds = %sw.epilog
  %116 = load i8*, i8** %next, align 8, !dbg !15310, !tbaa !2289
  %117 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !15312, !tbaa !2289
  store i8* %116, i8** %117, align 8, !dbg !15313, !tbaa !2289
  store i32 0, i32* %retval, !dbg !15314
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.65, !dbg !15314

sw.bb.62:                                         ; preds = %sw.epilog
  store i32 35, i32* %retval, !dbg !15315
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.65, !dbg !15315

sw.default.63:                                    ; preds = %sw.epilog
  br label %sw.epilog.64, !dbg !15316

sw.epilog.64:                                     ; preds = %sw.default.63
  store i32 0, i32* %cleanup.dest.slot, !dbg !15317
  br label %cleanup.65, !dbg !15317

cleanup.65:                                       ; preds = %sw.epilog.64, %sw.bb.62, %sw.bb.61, %sw.default, %if.end.58, %if.then.57, %if.end.54, %if.then.53, %sw.bb.50, %if.else.11, %if.then.10
  %118 = bitcast i32* %tok to i8*, !dbg !15318
  call void @llvm.lifetime.end(i64 4, i8* %118) #2, !dbg !15318
  %119 = bitcast i8** %next to i8*, !dbg !15318
  call void @llvm.lifetime.end(i64 8, i8* %119) #2, !dbg !15318
  %cleanup.dest.67 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.67, label %cleanup.69 [
    i32 0, label %cleanup.cont.68
  ]

cleanup.cont.68:                                  ; preds = %cleanup.65
  br label %for.cond, !dbg !15320

cleanup.69:                                       ; preds = %cleanup.65
  %120 = bitcast i8*** %eventEndPP to i8*, !dbg !15321
  call void @llvm.lifetime.end(i64 8, i8* %120) #2, !dbg !15321
  %121 = bitcast i8*** %eventPP to i8*, !dbg !15321
  call void @llvm.lifetime.end(i64 8, i8* %121) #2, !dbg !15321
  %122 = bitcast i8** %s to i8*, !dbg !15321
  call void @llvm.lifetime.end(i64 8, i8* %122) #2, !dbg !15321
  %123 = load i32, i32* %retval, !dbg !15321
  ret i32 %123, !dbg !15321

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @cdataSectionProcessor(%struct.XML_ParserStruct* %parser, i8* %start, i8* %end, i8** %endPtr) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %endPtr.addr = alloca i8**, align 8
  %result = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1705, metadata !2293), !dbg !15322
  store i8* %start, i8** %start.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %start.addr, metadata !1706, metadata !2293), !dbg !15323
  store i8* %end, i8** %end.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !1707, metadata !2293), !dbg !15324
  store i8** %endPtr, i8*** %endPtr.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8*** %endPtr.addr, metadata !1708, metadata !2293), !dbg !15325
  %0 = bitcast i32* %result to i8*, !dbg !15326
  call void @llvm.lifetime.start(i64 4, i8* %0) #2, !dbg !15326
  call void @llvm.dbg.declare(metadata i32* %result, metadata !1709, metadata !2293), !dbg !15327
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15328, !tbaa !2289
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15329, !tbaa !2289
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 34, !dbg !15330
  %3 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !15330, !tbaa !5191
  %4 = load i8*, i8** %end.addr, align 8, !dbg !15331, !tbaa !2289
  %5 = load i8**, i8*** %endPtr.addr, align 8, !dbg !15332, !tbaa !2289
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15333, !tbaa !2289
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 85, !dbg !15334
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 1, !dbg !15335
  %7 = load i8, i8* %finalBuffer, align 1, !dbg !15335, !tbaa !5150
  %tobool = icmp ne i8 %7, 0, !dbg !15336
  %lnot = xor i1 %tobool, true, !dbg !15336
  %lnot.ext = zext i1 %lnot to i32, !dbg !15336
  %conv = trunc i32 %lnot.ext to i8, !dbg !15337
  %call = call i32 @doCdataSection(%struct.XML_ParserStruct* %1, %struct.encoding* %3, i8** %start.addr, i8* %4, i8** %5, i8 zeroext %conv), !dbg !15338
  store i32 %call, i32* %result, align 4, !dbg !15327, !tbaa !2307
  %8 = load i32, i32* %result, align 4, !dbg !15339, !tbaa !2307
  %cmp = icmp ne i32 %8, 0, !dbg !15341
  br i1 %cmp, label %if.then, label %if.end, !dbg !15342

if.then:                                          ; preds = %entry
  %9 = load i32, i32* %result, align 4, !dbg !15343, !tbaa !2307
  store i32 %9, i32* %retval, !dbg !15344
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15344

if.end:                                           ; preds = %entry
  %10 = load i8*, i8** %start.addr, align 8, !dbg !15345, !tbaa !2289
  %tobool2 = icmp ne i8* %10, null, !dbg !15345
  br i1 %tobool2, label %if.then.3, label %if.end.9, !dbg !15347

if.then.3:                                        ; preds = %if.end
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15348, !tbaa !2289
  %m_parentParser = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 84, !dbg !15351
  %12 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %m_parentParser, align 8, !dbg !15351, !tbaa !2623
  %tobool4 = icmp ne %struct.XML_ParserStruct* %12, null, !dbg !15352
  br i1 %tobool4, label %if.then.5, label %if.else, !dbg !15353

if.then.5:                                        ; preds = %if.then.3
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15354, !tbaa !2289
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 45, !dbg !15356
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @externalEntityContentProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8, !dbg !15357, !tbaa !2809
  %14 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15358, !tbaa !2289
  %15 = load i8*, i8** %start.addr, align 8, !dbg !15359, !tbaa !2289
  %16 = load i8*, i8** %end.addr, align 8, !dbg !15360, !tbaa !2289
  %17 = load i8**, i8*** %endPtr.addr, align 8, !dbg !15361, !tbaa !2289
  %call6 = call i32 @externalEntityContentProcessor(%struct.XML_ParserStruct* %14, i8* %15, i8* %16, i8** %17), !dbg !15362
  store i32 %call6, i32* %retval, !dbg !15363
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15363

if.else:                                          ; preds = %if.then.3
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15364, !tbaa !2289
  %m_processor7 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 45, !dbg !15366
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @contentProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor7, align 8, !dbg !15367, !tbaa !2809
  %19 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15368, !tbaa !2289
  %20 = load i8*, i8** %start.addr, align 8, !dbg !15369, !tbaa !2289
  %21 = load i8*, i8** %end.addr, align 8, !dbg !15370, !tbaa !2289
  %22 = load i8**, i8*** %endPtr.addr, align 8, !dbg !15371, !tbaa !2289
  %call8 = call i32 @contentProcessor(%struct.XML_ParserStruct* %19, i8* %20, i8* %21, i8** %22), !dbg !15372
  store i32 %call8, i32* %retval, !dbg !15373
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15373

if.end.9:                                         ; preds = %if.end
  %23 = load i32, i32* %result, align 4, !dbg !15374, !tbaa !2307
  store i32 %23, i32* %retval, !dbg !15375
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15375

cleanup:                                          ; preds = %if.end.9, %if.else, %if.then.5, %if.then
  %24 = bitcast i32* %result to i8*, !dbg !15376
  call void @llvm.lifetime.end(i64 4, i8* %24) #2, !dbg !15376
  %25 = load i32, i32* %retval, !dbg !15376
  ret i32 %25, !dbg !15376
}

; Function Attrs: nounwind uwtable
define internal void @hashTableIterInit(%struct.HASH_TABLE_ITER* %iter, %struct.HASH_TABLE* %table) #0 {
entry:
  %iter.addr = alloca %struct.HASH_TABLE_ITER*, align 8
  %table.addr = alloca %struct.HASH_TABLE*, align 8
  store %struct.HASH_TABLE_ITER* %iter, %struct.HASH_TABLE_ITER** %iter.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.HASH_TABLE_ITER** %iter.addr, metadata !1521, metadata !2293), !dbg !15377
  store %struct.HASH_TABLE* %table, %struct.HASH_TABLE** %table.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.HASH_TABLE** %table.addr, metadata !1522, metadata !2293), !dbg !15378
  %0 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !15379, !tbaa !2289
  %v = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %0, i32 0, i32 0, !dbg !15380
  %1 = load %struct.NAMED**, %struct.NAMED*** %v, align 8, !dbg !15380, !tbaa !6262
  %2 = load %struct.HASH_TABLE_ITER*, %struct.HASH_TABLE_ITER** %iter.addr, align 8, !dbg !15381, !tbaa !2289
  %p = getelementptr inbounds %struct.HASH_TABLE_ITER, %struct.HASH_TABLE_ITER* %2, i32 0, i32 0, !dbg !15382
  store %struct.NAMED** %1, %struct.NAMED*** %p, align 8, !dbg !15383, !tbaa !15384
  %3 = load %struct.HASH_TABLE_ITER*, %struct.HASH_TABLE_ITER** %iter.addr, align 8, !dbg !15386, !tbaa !2289
  %p1 = getelementptr inbounds %struct.HASH_TABLE_ITER, %struct.HASH_TABLE_ITER* %3, i32 0, i32 0, !dbg !15387
  %4 = load %struct.NAMED**, %struct.NAMED*** %p1, align 8, !dbg !15387, !tbaa !15384
  %5 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !15388, !tbaa !2289
  %size = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %5, i32 0, i32 2, !dbg !15389
  %6 = load i64, i64* %size, align 8, !dbg !15389, !tbaa !6254
  %add.ptr = getelementptr %struct.NAMED*, %struct.NAMED** %4, i64 %6, !dbg !15390
  %7 = load %struct.HASH_TABLE_ITER*, %struct.HASH_TABLE_ITER** %iter.addr, align 8, !dbg !15391, !tbaa !2289
  %end = getelementptr inbounds %struct.HASH_TABLE_ITER, %struct.HASH_TABLE_ITER* %7, i32 0, i32 1, !dbg !15392
  store %struct.NAMED** %add.ptr, %struct.NAMED*** %end, align 8, !dbg !15393, !tbaa !15394
  ret void, !dbg !15395
}

; Function Attrs: nounwind uwtable
define internal %struct.NAMED* @hashTableIterNext(%struct.HASH_TABLE_ITER* %iter) #0 {
entry:
  %retval = alloca %struct.NAMED*, align 8
  %iter.addr = alloca %struct.HASH_TABLE_ITER*, align 8
  %tem = alloca %struct.NAMED*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.HASH_TABLE_ITER* %iter, %struct.HASH_TABLE_ITER** %iter.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.HASH_TABLE_ITER** %iter.addr, metadata !1527, metadata !2293), !dbg !15396
  br label %while.cond, !dbg !15397

while.cond:                                       ; preds = %cleanup.cont, %entry
  %0 = load %struct.HASH_TABLE_ITER*, %struct.HASH_TABLE_ITER** %iter.addr, align 8, !dbg !15398, !tbaa !2289
  %p = getelementptr inbounds %struct.HASH_TABLE_ITER, %struct.HASH_TABLE_ITER* %0, i32 0, i32 0, !dbg !15401
  %1 = load %struct.NAMED**, %struct.NAMED*** %p, align 8, !dbg !15401, !tbaa !15384
  %2 = load %struct.HASH_TABLE_ITER*, %struct.HASH_TABLE_ITER** %iter.addr, align 8, !dbg !15402, !tbaa !2289
  %end = getelementptr inbounds %struct.HASH_TABLE_ITER, %struct.HASH_TABLE_ITER* %2, i32 0, i32 1, !dbg !15403
  %3 = load %struct.NAMED**, %struct.NAMED*** %end, align 8, !dbg !15403, !tbaa !15394
  %cmp = icmp ne %struct.NAMED** %1, %3, !dbg !15404
  br i1 %cmp, label %while.body, label %while.end, !dbg !15397

while.body:                                       ; preds = %while.cond
  %4 = bitcast %struct.NAMED** %tem to i8*, !dbg !15405
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !15405
  call void @llvm.dbg.declare(metadata %struct.NAMED** %tem, metadata !1528, metadata !2293), !dbg !15406
  %5 = load %struct.HASH_TABLE_ITER*, %struct.HASH_TABLE_ITER** %iter.addr, align 8, !dbg !15407, !tbaa !2289
  %p1 = getelementptr inbounds %struct.HASH_TABLE_ITER, %struct.HASH_TABLE_ITER* %5, i32 0, i32 0, !dbg !15408
  %6 = load %struct.NAMED**, %struct.NAMED*** %p1, align 8, !dbg !15409, !tbaa !15384
  %incdec.ptr = getelementptr %struct.NAMED*, %struct.NAMED** %6, i32 1, !dbg !15409
  store %struct.NAMED** %incdec.ptr, %struct.NAMED*** %p1, align 8, !dbg !15409, !tbaa !15384
  %7 = load %struct.NAMED*, %struct.NAMED** %6, align 8, !dbg !15410, !tbaa !2289
  store %struct.NAMED* %7, %struct.NAMED** %tem, align 8, !dbg !15406, !tbaa !2289
  %8 = load %struct.NAMED*, %struct.NAMED** %tem, align 8, !dbg !15411, !tbaa !2289
  %tobool = icmp ne %struct.NAMED* %8, null, !dbg !15411
  br i1 %tobool, label %if.then, label %if.end, !dbg !15413

if.then:                                          ; preds = %while.body
  %9 = load %struct.NAMED*, %struct.NAMED** %tem, align 8, !dbg !15414, !tbaa !2289
  store %struct.NAMED* %9, %struct.NAMED** %retval, !dbg !15415
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15415

if.end:                                           ; preds = %while.body
  store i32 0, i32* %cleanup.dest.slot, !dbg !15416
  br label %cleanup, !dbg !15416

cleanup:                                          ; preds = %if.end, %if.then
  %10 = bitcast %struct.NAMED** %tem to i8*, !dbg !15417
  call void @llvm.lifetime.end(i64 8, i8* %10) #2, !dbg !15417
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %while.cond, !dbg !15397

while.end:                                        ; preds = %while.cond
  store %struct.NAMED* null, %struct.NAMED** %retval, !dbg !15418
  br label %return, !dbg !15418

return:                                           ; preds = %while.end, %cleanup
  %11 = load %struct.NAMED*, %struct.NAMED** %retval, !dbg !15419
  ret %struct.NAMED* %11, !dbg !15419

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @setElementTypePrefix(%struct.XML_ParserStruct* %parser, %struct.ELEMENT_TYPE* %elementType) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %elementType.addr = alloca %struct.ELEMENT_TYPE*, align 8
  %dtd = alloca %struct.DTD*, align 8
  %name = alloca i8*, align 8
  %prefix = alloca %struct.prefix*, align 8
  %s = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1630, metadata !2293), !dbg !15420
  store %struct.ELEMENT_TYPE* %elementType, %struct.ELEMENT_TYPE** %elementType.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.ELEMENT_TYPE** %elementType.addr, metadata !1631, metadata !2293), !dbg !15421
  %0 = bitcast %struct.DTD** %dtd to i8*, !dbg !15422
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !15422
  call void @llvm.dbg.declare(metadata %struct.DTD** %dtd, metadata !1632, metadata !2293), !dbg !15423
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15424, !tbaa !2289
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 65, !dbg !15425
  %2 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !15425, !tbaa !2478
  store %struct.DTD* %2, %struct.DTD** %dtd, align 8, !dbg !15423, !tbaa !2289
  %3 = bitcast i8** %name to i8*, !dbg !15426
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !15426
  call void @llvm.dbg.declare(metadata i8** %name, metadata !1633, metadata !2293), !dbg !15427
  %4 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType.addr, align 8, !dbg !15428, !tbaa !2289
  %name1 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %4, i32 0, i32 0, !dbg !15429
  %5 = load i8*, i8** %name1, align 8, !dbg !15429, !tbaa !3789
  store i8* %5, i8** %name, align 8, !dbg !15430, !tbaa !2289
  br label %for.cond, !dbg !15431

for.cond:                                         ; preds = %for.inc.57, %entry
  %6 = load i8*, i8** %name, align 8, !dbg !15432, !tbaa !2289
  %7 = load i8, i8* %6, align 1, !dbg !15435, !tbaa !2307
  %tobool = icmp ne i8 %7, 0, !dbg !15436
  br i1 %tobool, label %for.body, label %for.end.59, !dbg !15436

for.body:                                         ; preds = %for.cond
  %8 = load i8*, i8** %name, align 8, !dbg !15437, !tbaa !2289
  %9 = load i8, i8* %8, align 1, !dbg !15438, !tbaa !2307
  %conv = sext i8 %9 to i32, !dbg !15438
  %cmp = icmp eq i32 %conv, 58, !dbg !15439
  br i1 %cmp, label %if.then, label %if.end.56, !dbg !15440

if.then:                                          ; preds = %for.body
  %10 = bitcast %struct.prefix** %prefix to i8*, !dbg !15441
  call void @llvm.lifetime.start(i64 8, i8* %10) #2, !dbg !15441
  call void @llvm.dbg.declare(metadata %struct.prefix** %prefix, metadata !1634, metadata !2293), !dbg !15442
  %11 = bitcast i8** %s to i8*, !dbg !15443
  call void @llvm.lifetime.start(i64 8, i8* %11) #2, !dbg !15443
  call void @llvm.dbg.declare(metadata i8** %s, metadata !1640, metadata !2293), !dbg !15444
  %12 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType.addr, align 8, !dbg !15445, !tbaa !2289
  %name3 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %12, i32 0, i32 0, !dbg !15447
  %13 = load i8*, i8** %name3, align 8, !dbg !15447, !tbaa !3789
  store i8* %13, i8** %s, align 8, !dbg !15448, !tbaa !2289
  br label %for.cond.4, !dbg !15449

for.cond.4:                                       ; preds = %for.inc, %if.then
  %14 = load i8*, i8** %s, align 8, !dbg !15450, !tbaa !2289
  %15 = load i8*, i8** %name, align 8, !dbg !15454, !tbaa !2289
  %cmp5 = icmp ne i8* %14, %15, !dbg !15455
  br i1 %cmp5, label %for.body.7, label %for.end, !dbg !15456

for.body.7:                                       ; preds = %for.cond.4
  %16 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !15457, !tbaa !2289
  %pool = getelementptr inbounds %struct.DTD, %struct.DTD* %16, i32 0, i32 4, !dbg !15460
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool, i32 0, i32 3, !dbg !15461
  %17 = load i8*, i8** %ptr, align 8, !dbg !15461, !tbaa !2798
  %18 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !15462, !tbaa !2289
  %pool8 = getelementptr inbounds %struct.DTD, %struct.DTD* %18, i32 0, i32 4, !dbg !15463
  %end = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool8, i32 0, i32 2, !dbg !15464
  %19 = load i8*, i8** %end, align 8, !dbg !15464, !tbaa !2802
  %cmp9 = icmp eq i8* %17, %19, !dbg !15465
  br i1 %cmp9, label %land.lhs.true, label %cond.false, !dbg !15466

land.lhs.true:                                    ; preds = %for.body.7
  %20 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !15467, !tbaa !2289
  %pool11 = getelementptr inbounds %struct.DTD, %struct.DTD* %20, i32 0, i32 4, !dbg !15469
  %call = call zeroext i8 @poolGrow(%struct.STRING_POOL* %pool11), !dbg !15470
  %tobool12 = icmp ne i8 %call, 0, !dbg !15470
  br i1 %tobool12, label %cond.false, label %cond.true, !dbg !15471

cond.true:                                        ; preds = %land.lhs.true
  br i1 false, label %if.end, label %if.then.15, !dbg !15472

cond.false:                                       ; preds = %land.lhs.true, %for.body.7
  %21 = load i8*, i8** %s, align 8, !dbg !15474, !tbaa !2289
  %22 = load i8, i8* %21, align 1, !dbg !15477, !tbaa !2307
  %23 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !15478, !tbaa !2289
  %pool13 = getelementptr inbounds %struct.DTD, %struct.DTD* %23, i32 0, i32 4, !dbg !15479
  %ptr14 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool13, i32 0, i32 3, !dbg !15480
  %24 = load i8*, i8** %ptr14, align 8, !dbg !15481, !tbaa !2798
  %incdec.ptr = getelementptr i8, i8* %24, i32 1, !dbg !15481
  store i8* %incdec.ptr, i8** %ptr14, align 8, !dbg !15481, !tbaa !2798
  store i8 %22, i8* %24, align 1, !dbg !15482, !tbaa !2307
  br i1 true, label %if.end, label %if.then.15, !dbg !15471

if.then.15:                                       ; preds = %cond.false, %cond.true
  store i32 0, i32* %retval, !dbg !15483
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15483

if.end:                                           ; preds = %cond.false, %cond.true
  br label %for.inc, !dbg !15484

for.inc:                                          ; preds = %if.end
  %25 = load i8*, i8** %s, align 8, !dbg !15485, !tbaa !2289
  %incdec.ptr16 = getelementptr i8, i8* %25, i32 1, !dbg !15485
  store i8* %incdec.ptr16, i8** %s, align 8, !dbg !15485, !tbaa !2289
  br label %for.cond.4, !dbg !15486

for.end:                                          ; preds = %for.cond.4
  %26 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !15487, !tbaa !2289
  %pool17 = getelementptr inbounds %struct.DTD, %struct.DTD* %26, i32 0, i32 4, !dbg !15489
  %ptr18 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool17, i32 0, i32 3, !dbg !15490
  %27 = load i8*, i8** %ptr18, align 8, !dbg !15490, !tbaa !2798
  %28 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !15491, !tbaa !2289
  %pool19 = getelementptr inbounds %struct.DTD, %struct.DTD* %28, i32 0, i32 4, !dbg !15492
  %end20 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool19, i32 0, i32 2, !dbg !15493
  %29 = load i8*, i8** %end20, align 8, !dbg !15493, !tbaa !2802
  %cmp21 = icmp eq i8* %27, %29, !dbg !15494
  br i1 %cmp21, label %land.lhs.true.23, label %cond.false.28, !dbg !15495

land.lhs.true.23:                                 ; preds = %for.end
  %30 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !15496, !tbaa !2289
  %pool24 = getelementptr inbounds %struct.DTD, %struct.DTD* %30, i32 0, i32 4, !dbg !15498
  %call25 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %pool24), !dbg !15499
  %tobool26 = icmp ne i8 %call25, 0, !dbg !15499
  br i1 %tobool26, label %cond.false.28, label %cond.true.27, !dbg !15500

cond.true.27:                                     ; preds = %land.lhs.true.23
  br i1 false, label %if.end.33, label %if.then.32, !dbg !15501

cond.false.28:                                    ; preds = %land.lhs.true.23, %for.end
  %31 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !15503, !tbaa !2289
  %pool29 = getelementptr inbounds %struct.DTD, %struct.DTD* %31, i32 0, i32 4, !dbg !15506
  %ptr30 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool29, i32 0, i32 3, !dbg !15507
  %32 = load i8*, i8** %ptr30, align 8, !dbg !15508, !tbaa !2798
  %incdec.ptr31 = getelementptr i8, i8* %32, i32 1, !dbg !15508
  store i8* %incdec.ptr31, i8** %ptr30, align 8, !dbg !15508, !tbaa !2798
  store i8 0, i8* %32, align 1, !dbg !15509, !tbaa !2307
  br i1 true, label %if.end.33, label %if.then.32, !dbg !15500

if.then.32:                                       ; preds = %cond.false.28, %cond.true.27
  store i32 0, i32* %retval, !dbg !15510
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15510

if.end.33:                                        ; preds = %cond.false.28, %cond.true.27
  %33 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15511, !tbaa !2289
  %34 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !15512, !tbaa !2289
  %prefixes = getelementptr inbounds %struct.DTD, %struct.DTD* %34, i32 0, i32 3, !dbg !15513
  %35 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !15514, !tbaa !2289
  %pool34 = getelementptr inbounds %struct.DTD, %struct.DTD* %35, i32 0, i32 4, !dbg !15515
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool34, i32 0, i32 4, !dbg !15516
  %36 = load i8*, i8** %start, align 8, !dbg !15516, !tbaa !2794
  %call35 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %33, %struct.HASH_TABLE* %prefixes, i8* %36, i64 16), !dbg !15517
  %37 = bitcast %struct.NAMED* %call35 to %struct.prefix*, !dbg !15518
  store %struct.prefix* %37, %struct.prefix** %prefix, align 8, !dbg !15519, !tbaa !2289
  %38 = load %struct.prefix*, %struct.prefix** %prefix, align 8, !dbg !15520, !tbaa !2289
  %tobool36 = icmp ne %struct.prefix* %38, null, !dbg !15520
  br i1 %tobool36, label %if.end.38, label %if.then.37, !dbg !15522

if.then.37:                                       ; preds = %if.end.33
  store i32 0, i32* %retval, !dbg !15523
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15523

if.end.38:                                        ; preds = %if.end.33
  %39 = load %struct.prefix*, %struct.prefix** %prefix, align 8, !dbg !15524, !tbaa !2289
  %name39 = getelementptr inbounds %struct.prefix, %struct.prefix* %39, i32 0, i32 0, !dbg !15526
  %40 = load i8*, i8** %name39, align 8, !dbg !15526, !tbaa !3638
  %41 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !15527, !tbaa !2289
  %pool40 = getelementptr inbounds %struct.DTD, %struct.DTD* %41, i32 0, i32 4, !dbg !15528
  %start41 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool40, i32 0, i32 4, !dbg !15529
  %42 = load i8*, i8** %start41, align 8, !dbg !15529, !tbaa !2794
  %cmp42 = icmp eq i8* %40, %42, !dbg !15530
  br i1 %cmp42, label %if.then.44, label %if.else, !dbg !15531

if.then.44:                                       ; preds = %if.end.38
  %43 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !15532, !tbaa !2289
  %pool45 = getelementptr inbounds %struct.DTD, %struct.DTD* %43, i32 0, i32 4, !dbg !15533
  %ptr46 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool45, i32 0, i32 3, !dbg !15534
  %44 = load i8*, i8** %ptr46, align 8, !dbg !15534, !tbaa !2798
  %45 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !15535, !tbaa !2289
  %pool47 = getelementptr inbounds %struct.DTD, %struct.DTD* %45, i32 0, i32 4, !dbg !15536
  %start48 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool47, i32 0, i32 4, !dbg !15537
  store i8* %44, i8** %start48, align 8, !dbg !15538, !tbaa !2794
  br label %if.end.53, !dbg !15539

if.else:                                          ; preds = %if.end.38
  %46 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !15540, !tbaa !2289
  %pool49 = getelementptr inbounds %struct.DTD, %struct.DTD* %46, i32 0, i32 4, !dbg !15541
  %start50 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool49, i32 0, i32 4, !dbg !15542
  %47 = load i8*, i8** %start50, align 8, !dbg !15542, !tbaa !2794
  %48 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !15543, !tbaa !2289
  %pool51 = getelementptr inbounds %struct.DTD, %struct.DTD* %48, i32 0, i32 4, !dbg !15544
  %ptr52 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool51, i32 0, i32 3, !dbg !15545
  store i8* %47, i8** %ptr52, align 8, !dbg !15546, !tbaa !2798
  br label %if.end.53

if.end.53:                                        ; preds = %if.else, %if.then.44
  %49 = load %struct.prefix*, %struct.prefix** %prefix, align 8, !dbg !15547, !tbaa !2289
  %50 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType.addr, align 8, !dbg !15548, !tbaa !2289
  %prefix54 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %50, i32 0, i32 1, !dbg !15549
  store %struct.prefix* %49, %struct.prefix** %prefix54, align 8, !dbg !15550, !tbaa !3859
  store i32 0, i32* %cleanup.dest.slot, !dbg !15551
  br label %cleanup, !dbg !15551

cleanup:                                          ; preds = %if.end.53, %if.then.37, %if.then.32, %if.then.15
  %51 = bitcast i8** %s to i8*, !dbg !15552
  call void @llvm.lifetime.end(i64 8, i8* %51) #2, !dbg !15552
  %52 = bitcast %struct.prefix** %prefix to i8*, !dbg !15552
  call void @llvm.lifetime.end(i64 8, i8* %52) #2, !dbg !15552
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.60 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.56, !dbg !15554

if.end.56:                                        ; preds = %cleanup.cont, %for.body
  br label %for.inc.57, !dbg !15555

for.inc.57:                                       ; preds = %if.end.56
  %53 = load i8*, i8** %name, align 8, !dbg !15556, !tbaa !2289
  %incdec.ptr58 = getelementptr i8, i8* %53, i32 1, !dbg !15556
  store i8* %incdec.ptr58, i8** %name, align 8, !dbg !15556, !tbaa !2289
  br label %for.cond, !dbg !15557

for.end.59:                                       ; preds = %for.cond
  store i32 1, i32* %retval, !dbg !15558
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.60, !dbg !15558

cleanup.60:                                       ; preds = %for.end.59, %cleanup
  %54 = bitcast i8** %name to i8*, !dbg !15559
  call void @llvm.lifetime.end(i64 8, i8* %54) #2, !dbg !15559
  %55 = bitcast %struct.DTD** %dtd to i8*, !dbg !15559
  call void @llvm.lifetime.end(i64 8, i8* %55) #2, !dbg !15559
  %56 = load i32, i32* %retval, !dbg !15559
  ret i32 %56, !dbg !15559
}

; Function Attrs: nounwind uwtable
define internal i32 @addBinding(%struct.XML_ParserStruct* %parser, %struct.prefix* %prefix, %struct.attribute_id* %attId, i8* %uri, %struct.binding** %bindingsPtr) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %prefix.addr = alloca %struct.prefix*, align 8
  %attId.addr = alloca %struct.attribute_id*, align 8
  %uri.addr = alloca i8*, align 8
  %bindingsPtr.addr = alloca %struct.binding**, align 8
  %mustBeXML = alloca i8, align 1
  %isXML = alloca i8, align 1
  %isXMLNS = alloca i8, align 1
  %b = alloca %struct.binding*, align 8
  %len = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %temp = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1645, metadata !2293), !dbg !15560
  store %struct.prefix* %prefix, %struct.prefix** %prefix.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.prefix** %prefix.addr, metadata !1646, metadata !2293), !dbg !15561
  store %struct.attribute_id* %attId, %struct.attribute_id** %attId.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.attribute_id** %attId.addr, metadata !1647, metadata !2293), !dbg !15562
  store i8* %uri, i8** %uri.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %uri.addr, metadata !1648, metadata !2293), !dbg !15563
  store %struct.binding** %bindingsPtr, %struct.binding*** %bindingsPtr.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.binding*** %bindingsPtr.addr, metadata !1649, metadata !2293), !dbg !15564
  call void @llvm.lifetime.start(i64 1, i8* %mustBeXML) #2, !dbg !15565
  call void @llvm.dbg.declare(metadata i8* %mustBeXML, metadata !1650, metadata !2293), !dbg !15566
  store i8 0, i8* %mustBeXML, align 1, !dbg !15566, !tbaa !2307
  call void @llvm.lifetime.start(i64 1, i8* %isXML) #2, !dbg !15567
  call void @llvm.dbg.declare(metadata i8* %isXML, metadata !1651, metadata !2293), !dbg !15568
  store i8 1, i8* %isXML, align 1, !dbg !15568, !tbaa !2307
  call void @llvm.lifetime.start(i64 1, i8* %isXMLNS) #2, !dbg !15569
  call void @llvm.dbg.declare(metadata i8* %isXMLNS, metadata !1652, metadata !2293), !dbg !15570
  store i8 1, i8* %isXMLNS, align 1, !dbg !15570, !tbaa !2307
  %0 = bitcast %struct.binding** %b to i8*, !dbg !15571
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !15571
  call void @llvm.dbg.declare(metadata %struct.binding** %b, metadata !1653, metadata !2293), !dbg !15572
  %1 = bitcast i32* %len to i8*, !dbg !15573
  call void @llvm.lifetime.start(i64 4, i8* %1) #2, !dbg !15573
  call void @llvm.dbg.declare(metadata i32* %len, metadata !1654, metadata !2293), !dbg !15574
  %2 = load i8*, i8** %uri.addr, align 8, !dbg !15575, !tbaa !2289
  %3 = load i8, i8* %2, align 1, !dbg !15577, !tbaa !2307
  %conv = sext i8 %3 to i32, !dbg !15577
  %cmp = icmp eq i32 %conv, 0, !dbg !15578
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !15579

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8, !dbg !15580, !tbaa !2289
  %name = getelementptr inbounds %struct.prefix, %struct.prefix* %4, i32 0, i32 0, !dbg !15582
  %5 = load i8*, i8** %name, align 8, !dbg !15582, !tbaa !3638
  %tobool = icmp ne i8* %5, null, !dbg !15583
  br i1 %tobool, label %if.then, label %if.end, !dbg !15584

if.then:                                          ; preds = %land.lhs.true
  store i32 28, i32* %retval, !dbg !15585
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.184, !dbg !15585

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8, !dbg !15586, !tbaa !2289
  %name2 = getelementptr inbounds %struct.prefix, %struct.prefix* %6, i32 0, i32 0, !dbg !15588
  %7 = load i8*, i8** %name2, align 8, !dbg !15588, !tbaa !3638
  %tobool3 = icmp ne i8* %7, null, !dbg !15586
  br i1 %tobool3, label %land.lhs.true.4, label %if.end.48, !dbg !15589

land.lhs.true.4:                                  ; preds = %if.end
  %8 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8, !dbg !15590, !tbaa !2289
  %name5 = getelementptr inbounds %struct.prefix, %struct.prefix* %8, i32 0, i32 0, !dbg !15592
  %9 = load i8*, i8** %name5, align 8, !dbg !15592, !tbaa !3638
  %arrayidx = getelementptr i8, i8* %9, i64 0, !dbg !15593
  %10 = load i8, i8* %arrayidx, align 1, !dbg !15593, !tbaa !2307
  %conv6 = sext i8 %10 to i32, !dbg !15593
  %cmp7 = icmp eq i32 %conv6, 120, !dbg !15594
  br i1 %cmp7, label %land.lhs.true.9, label %if.end.48, !dbg !15595

land.lhs.true.9:                                  ; preds = %land.lhs.true.4
  %11 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8, !dbg !15596, !tbaa !2289
  %name10 = getelementptr inbounds %struct.prefix, %struct.prefix* %11, i32 0, i32 0, !dbg !15597
  %12 = load i8*, i8** %name10, align 8, !dbg !15597, !tbaa !3638
  %arrayidx11 = getelementptr i8, i8* %12, i64 1, !dbg !15598
  %13 = load i8, i8* %arrayidx11, align 1, !dbg !15598, !tbaa !2307
  %conv12 = sext i8 %13 to i32, !dbg !15598
  %cmp13 = icmp eq i32 %conv12, 109, !dbg !15599
  br i1 %cmp13, label %land.lhs.true.15, label %if.end.48, !dbg !15600

land.lhs.true.15:                                 ; preds = %land.lhs.true.9
  %14 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8, !dbg !15601, !tbaa !2289
  %name16 = getelementptr inbounds %struct.prefix, %struct.prefix* %14, i32 0, i32 0, !dbg !15602
  %15 = load i8*, i8** %name16, align 8, !dbg !15602, !tbaa !3638
  %arrayidx17 = getelementptr i8, i8* %15, i64 2, !dbg !15603
  %16 = load i8, i8* %arrayidx17, align 1, !dbg !15603, !tbaa !2307
  %conv18 = sext i8 %16 to i32, !dbg !15603
  %cmp19 = icmp eq i32 %conv18, 108, !dbg !15604
  br i1 %cmp19, label %if.then.21, label %if.end.48, !dbg !15605

if.then.21:                                       ; preds = %land.lhs.true.15
  %17 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8, !dbg !15606, !tbaa !2289
  %name22 = getelementptr inbounds %struct.prefix, %struct.prefix* %17, i32 0, i32 0, !dbg !15609
  %18 = load i8*, i8** %name22, align 8, !dbg !15609, !tbaa !3638
  %arrayidx23 = getelementptr i8, i8* %18, i64 3, !dbg !15606
  %19 = load i8, i8* %arrayidx23, align 1, !dbg !15606, !tbaa !2307
  %conv24 = sext i8 %19 to i32, !dbg !15606
  %cmp25 = icmp eq i32 %conv24, 110, !dbg !15610
  br i1 %cmp25, label %land.lhs.true.27, label %if.end.40, !dbg !15611

land.lhs.true.27:                                 ; preds = %if.then.21
  %20 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8, !dbg !15612, !tbaa !2289
  %name28 = getelementptr inbounds %struct.prefix, %struct.prefix* %20, i32 0, i32 0, !dbg !15614
  %21 = load i8*, i8** %name28, align 8, !dbg !15614, !tbaa !3638
  %arrayidx29 = getelementptr i8, i8* %21, i64 4, !dbg !15615
  %22 = load i8, i8* %arrayidx29, align 1, !dbg !15615, !tbaa !2307
  %conv30 = sext i8 %22 to i32, !dbg !15615
  %cmp31 = icmp eq i32 %conv30, 115, !dbg !15616
  br i1 %cmp31, label %land.lhs.true.33, label %if.end.40, !dbg !15617

land.lhs.true.33:                                 ; preds = %land.lhs.true.27
  %23 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8, !dbg !15618, !tbaa !2289
  %name34 = getelementptr inbounds %struct.prefix, %struct.prefix* %23, i32 0, i32 0, !dbg !15619
  %24 = load i8*, i8** %name34, align 8, !dbg !15619, !tbaa !3638
  %arrayidx35 = getelementptr i8, i8* %24, i64 5, !dbg !15620
  %25 = load i8, i8* %arrayidx35, align 1, !dbg !15620, !tbaa !2307
  %conv36 = sext i8 %25 to i32, !dbg !15620
  %cmp37 = icmp eq i32 %conv36, 0, !dbg !15621
  br i1 %cmp37, label %if.then.39, label %if.end.40, !dbg !15622

if.then.39:                                       ; preds = %land.lhs.true.33
  store i32 39, i32* %retval, !dbg !15623
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.184, !dbg !15623

if.end.40:                                        ; preds = %land.lhs.true.33, %land.lhs.true.27, %if.then.21
  %26 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8, !dbg !15624, !tbaa !2289
  %name41 = getelementptr inbounds %struct.prefix, %struct.prefix* %26, i32 0, i32 0, !dbg !15626
  %27 = load i8*, i8** %name41, align 8, !dbg !15626, !tbaa !3638
  %arrayidx42 = getelementptr i8, i8* %27, i64 3, !dbg !15624
  %28 = load i8, i8* %arrayidx42, align 1, !dbg !15624, !tbaa !2307
  %conv43 = sext i8 %28 to i32, !dbg !15624
  %cmp44 = icmp eq i32 %conv43, 0, !dbg !15627
  br i1 %cmp44, label %if.then.46, label %if.end.47, !dbg !15628

if.then.46:                                       ; preds = %if.end.40
  store i8 1, i8* %mustBeXML, align 1, !dbg !15629, !tbaa !2307
  br label %if.end.47, !dbg !15630

if.end.47:                                        ; preds = %if.then.46, %if.end.40
  br label %if.end.48, !dbg !15631

if.end.48:                                        ; preds = %if.end.47, %land.lhs.true.15, %land.lhs.true.9, %land.lhs.true.4, %if.end
  store i32 0, i32* %len, align 4, !dbg !15632, !tbaa !3391
  br label %for.cond, !dbg !15634

for.cond:                                         ; preds = %for.inc, %if.end.48
  %29 = load i32, i32* %len, align 4, !dbg !15635, !tbaa !3391
  %idxprom = sext i32 %29 to i64, !dbg !15639
  %30 = load i8*, i8** %uri.addr, align 8, !dbg !15639, !tbaa !2289
  %arrayidx49 = getelementptr i8, i8* %30, i64 %idxprom, !dbg !15639
  %31 = load i8, i8* %arrayidx49, align 1, !dbg !15639, !tbaa !2307
  %tobool50 = icmp ne i8 %31, 0, !dbg !15640
  br i1 %tobool50, label %for.body, label %for.end, !dbg !15640

for.body:                                         ; preds = %for.cond
  %32 = load i8, i8* %isXML, align 1, !dbg !15641, !tbaa !2307
  %conv51 = zext i8 %32 to i32, !dbg !15641
  %tobool52 = icmp ne i32 %conv51, 0, !dbg !15641
  br i1 %tobool52, label %land.lhs.true.53, label %if.end.65, !dbg !15644

land.lhs.true.53:                                 ; preds = %for.body
  %33 = load i32, i32* %len, align 4, !dbg !15645, !tbaa !3391
  %cmp54 = icmp sgt i32 %33, 36, !dbg !15647
  br i1 %cmp54, label %if.then.64, label %lor.lhs.false, !dbg !15648

lor.lhs.false:                                    ; preds = %land.lhs.true.53
  %34 = load i32, i32* %len, align 4, !dbg !15649, !tbaa !3391
  %idxprom56 = sext i32 %34 to i64, !dbg !15651
  %35 = load i8*, i8** %uri.addr, align 8, !dbg !15651, !tbaa !2289
  %arrayidx57 = getelementptr i8, i8* %35, i64 %idxprom56, !dbg !15651
  %36 = load i8, i8* %arrayidx57, align 1, !dbg !15651, !tbaa !2307
  %conv58 = sext i8 %36 to i32, !dbg !15651
  %37 = load i32, i32* %len, align 4, !dbg !15652, !tbaa !3391
  %idxprom59 = sext i32 %37 to i64, !dbg !15653
  %arrayidx60 = getelementptr [37 x i8], [37 x i8]* @addBinding.xmlNamespace, i32 0, i64 %idxprom59, !dbg !15653
  %38 = load i8, i8* %arrayidx60, align 1, !dbg !15653, !tbaa !2307
  %conv61 = sext i8 %38 to i32, !dbg !15653
  %cmp62 = icmp ne i32 %conv58, %conv61, !dbg !15654
  br i1 %cmp62, label %if.then.64, label %if.end.65, !dbg !15655

if.then.64:                                       ; preds = %lor.lhs.false, %land.lhs.true.53
  store i8 0, i8* %isXML, align 1, !dbg !15656, !tbaa !2307
  br label %if.end.65, !dbg !15657

if.end.65:                                        ; preds = %if.then.64, %lor.lhs.false, %for.body
  %39 = load i8, i8* %mustBeXML, align 1, !dbg !15658, !tbaa !2307
  %tobool66 = icmp ne i8 %39, 0, !dbg !15658
  br i1 %tobool66, label %if.end.83, label %land.lhs.true.67, !dbg !15660

land.lhs.true.67:                                 ; preds = %if.end.65
  %40 = load i8, i8* %isXMLNS, align 1, !dbg !15661, !tbaa !2307
  %conv68 = zext i8 %40 to i32, !dbg !15661
  %tobool69 = icmp ne i32 %conv68, 0, !dbg !15661
  br i1 %tobool69, label %land.lhs.true.70, label %if.end.83, !dbg !15663

land.lhs.true.70:                                 ; preds = %land.lhs.true.67
  %41 = load i32, i32* %len, align 4, !dbg !15664, !tbaa !3391
  %cmp71 = icmp sgt i32 %41, 29, !dbg !15665
  br i1 %cmp71, label %if.then.82, label %lor.lhs.false.73, !dbg !15666

lor.lhs.false.73:                                 ; preds = %land.lhs.true.70
  %42 = load i32, i32* %len, align 4, !dbg !15667, !tbaa !3391
  %idxprom74 = sext i32 %42 to i64, !dbg !15669
  %43 = load i8*, i8** %uri.addr, align 8, !dbg !15669, !tbaa !2289
  %arrayidx75 = getelementptr i8, i8* %43, i64 %idxprom74, !dbg !15669
  %44 = load i8, i8* %arrayidx75, align 1, !dbg !15669, !tbaa !2307
  %conv76 = sext i8 %44 to i32, !dbg !15669
  %45 = load i32, i32* %len, align 4, !dbg !15670, !tbaa !3391
  %idxprom77 = sext i32 %45 to i64, !dbg !15671
  %arrayidx78 = getelementptr [30 x i8], [30 x i8]* @addBinding.xmlnsNamespace, i32 0, i64 %idxprom77, !dbg !15671
  %46 = load i8, i8* %arrayidx78, align 1, !dbg !15671, !tbaa !2307
  %conv79 = sext i8 %46 to i32, !dbg !15671
  %cmp80 = icmp ne i32 %conv76, %conv79, !dbg !15672
  br i1 %cmp80, label %if.then.82, label %if.end.83, !dbg !15673

if.then.82:                                       ; preds = %lor.lhs.false.73, %land.lhs.true.70
  store i8 0, i8* %isXMLNS, align 1, !dbg !15674, !tbaa !2307
  br label %if.end.83, !dbg !15675

if.end.83:                                        ; preds = %if.then.82, %lor.lhs.false.73, %land.lhs.true.67, %if.end.65
  br label %for.inc, !dbg !15676

for.inc:                                          ; preds = %if.end.83
  %47 = load i32, i32* %len, align 4, !dbg !15677, !tbaa !3391
  %inc = add i32 %47, 1, !dbg !15677
  store i32 %inc, i32* %len, align 4, !dbg !15677, !tbaa !3391
  br label %for.cond, !dbg !15678

for.end:                                          ; preds = %for.cond
  %48 = load i8, i8* %isXML, align 1, !dbg !15679, !tbaa !2307
  %conv84 = zext i8 %48 to i32, !dbg !15679
  %tobool85 = icmp ne i32 %conv84, 0, !dbg !15679
  br i1 %tobool85, label %land.rhs, label %land.end, !dbg !15680

land.rhs:                                         ; preds = %for.end
  %49 = load i32, i32* %len, align 4, !dbg !15681, !tbaa !3391
  %cmp86 = icmp eq i32 %49, 36, !dbg !15683
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.end
  %50 = phi i1 [ false, %for.end ], [ %cmp86, %land.rhs ]
  %land.ext = zext i1 %50 to i32, !dbg !15684
  %conv88 = trunc i32 %land.ext to i8, !dbg !15679
  store i8 %conv88, i8* %isXML, align 1, !dbg !15686, !tbaa !2307
  %51 = load i8, i8* %isXMLNS, align 1, !dbg !15687, !tbaa !2307
  %conv89 = zext i8 %51 to i32, !dbg !15687
  %tobool90 = icmp ne i32 %conv89, 0, !dbg !15687
  br i1 %tobool90, label %land.rhs.91, label %land.end.94, !dbg !15688

land.rhs.91:                                      ; preds = %land.end
  %52 = load i32, i32* %len, align 4, !dbg !15689, !tbaa !3391
  %cmp92 = icmp eq i32 %52, 29, !dbg !15690
  br label %land.end.94

land.end.94:                                      ; preds = %land.rhs.91, %land.end
  %53 = phi i1 [ false, %land.end ], [ %cmp92, %land.rhs.91 ]
  %land.ext95 = zext i1 %53 to i32, !dbg !15691
  %conv96 = trunc i32 %land.ext95 to i8, !dbg !15687
  store i8 %conv96, i8* %isXMLNS, align 1, !dbg !15692, !tbaa !2307
  %54 = load i8, i8* %mustBeXML, align 1, !dbg !15693, !tbaa !2307
  %conv97 = zext i8 %54 to i32, !dbg !15693
  %55 = load i8, i8* %isXML, align 1, !dbg !15695, !tbaa !2307
  %conv98 = zext i8 %55 to i32, !dbg !15695
  %cmp99 = icmp ne i32 %conv97, %conv98, !dbg !15696
  br i1 %cmp99, label %if.then.101, label %if.end.104, !dbg !15697

if.then.101:                                      ; preds = %land.end.94
  %56 = load i8, i8* %mustBeXML, align 1, !dbg !15698, !tbaa !2307
  %conv102 = zext i8 %56 to i32, !dbg !15698
  %tobool103 = icmp ne i32 %conv102, 0, !dbg !15698
  %cond = select i1 %tobool103, i32 38, i32 40, !dbg !15698
  store i32 %cond, i32* %retval, !dbg !15699
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.184, !dbg !15699

if.end.104:                                       ; preds = %land.end.94
  %57 = load i8, i8* %isXMLNS, align 1, !dbg !15700, !tbaa !2307
  %tobool105 = icmp ne i8 %57, 0, !dbg !15700
  br i1 %tobool105, label %if.then.106, label %if.end.107, !dbg !15702

if.then.106:                                      ; preds = %if.end.104
  store i32 40, i32* %retval, !dbg !15703
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.184, !dbg !15703

if.end.107:                                       ; preds = %if.end.104
  %58 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15704, !tbaa !2289
  %m_namespaceSeparator = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %58, i32 0, i32 83, !dbg !15706
  %59 = load i8, i8* %m_namespaceSeparator, align 1, !dbg !15706, !tbaa !2541
  %tobool108 = icmp ne i8 %59, 0, !dbg !15707
  br i1 %tobool108, label %if.then.109, label %if.end.111, !dbg !15708

if.then.109:                                      ; preds = %if.end.107
  %60 = load i32, i32* %len, align 4, !dbg !15709, !tbaa !3391
  %inc110 = add i32 %60, 1, !dbg !15709
  store i32 %inc110, i32* %len, align 4, !dbg !15709, !tbaa !3391
  br label %if.end.111, !dbg !15710

if.end.111:                                       ; preds = %if.then.109, %if.end.107
  %61 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15711, !tbaa !2289
  %m_freeBindingList = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %61, i32 0, i32 70, !dbg !15712
  %62 = load %struct.binding*, %struct.binding** %m_freeBindingList, align 8, !dbg !15712, !tbaa !2513
  %tobool112 = icmp ne %struct.binding* %62, null, !dbg !15713
  br i1 %tobool112, label %if.then.113, label %if.else, !dbg !15714

if.then.113:                                      ; preds = %if.end.111
  %63 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15715, !tbaa !2289
  %m_freeBindingList114 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %63, i32 0, i32 70, !dbg !15716
  %64 = load %struct.binding*, %struct.binding** %m_freeBindingList114, align 8, !dbg !15716, !tbaa !2513
  store %struct.binding* %64, %struct.binding** %b, align 8, !dbg !15717, !tbaa !2289
  %65 = load i32, i32* %len, align 4, !dbg !15718, !tbaa !3391
  %66 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !15719, !tbaa !2289
  %uriAlloc = getelementptr inbounds %struct.binding, %struct.binding* %66, i32 0, i32 6, !dbg !15720
  %67 = load i32, i32* %uriAlloc, align 4, !dbg !15720, !tbaa !14834
  %cmp115 = icmp sgt i32 %65, %67, !dbg !15721
  br i1 %cmp115, label %if.then.117, label %if.end.127, !dbg !15722

if.then.117:                                      ; preds = %if.then.113
  %68 = bitcast i8** %temp to i8*, !dbg !15723
  call void @llvm.lifetime.start(i64 8, i8* %68) #2, !dbg !15723
  call void @llvm.dbg.declare(metadata i8** %temp, metadata !1655, metadata !2293), !dbg !15724
  %69 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15725, !tbaa !2289
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %69, i32 0, i32 3, !dbg !15726
  %realloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 1, !dbg !15727
  %70 = load i8* (i8*, i64)*, i8* (i8*, i64)** %realloc_fcn, align 8, !dbg !15727, !tbaa !5977
  %71 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !15728, !tbaa !2289
  %uri118 = getelementptr inbounds %struct.binding, %struct.binding* %71, i32 0, i32 4, !dbg !15729
  %72 = load i8*, i8** %uri118, align 8, !dbg !15729, !tbaa !4596
  %73 = load i32, i32* %len, align 4, !dbg !15730, !tbaa !3391
  %add = add i32 %73, 24, !dbg !15731
  %conv119 = sext i32 %add to i64, !dbg !15732
  %mul = mul i64 1, %conv119, !dbg !15733
  %call = call i8* %70(i8* %72, i64 %mul), !dbg !15725
  store i8* %call, i8** %temp, align 8, !dbg !15724, !tbaa !2289
  %74 = load i8*, i8** %temp, align 8, !dbg !15734, !tbaa !2289
  %cmp120 = icmp eq i8* %74, null, !dbg !15736
  br i1 %cmp120, label %if.then.122, label %if.end.123, !dbg !15737

if.then.122:                                      ; preds = %if.then.117
  store i32 1, i32* %retval, !dbg !15738
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15738

if.end.123:                                       ; preds = %if.then.117
  %75 = load i8*, i8** %temp, align 8, !dbg !15739, !tbaa !2289
  %76 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !15740, !tbaa !2289
  %uri124 = getelementptr inbounds %struct.binding, %struct.binding* %76, i32 0, i32 4, !dbg !15741
  store i8* %75, i8** %uri124, align 8, !dbg !15742, !tbaa !4596
  %77 = load i32, i32* %len, align 4, !dbg !15743, !tbaa !3391
  %add125 = add i32 %77, 24, !dbg !15744
  %78 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !15745, !tbaa !2289
  %uriAlloc126 = getelementptr inbounds %struct.binding, %struct.binding* %78, i32 0, i32 6, !dbg !15746
  store i32 %add125, i32* %uriAlloc126, align 4, !dbg !15747, !tbaa !14834
  store i32 0, i32* %cleanup.dest.slot, !dbg !15748
  br label %cleanup, !dbg !15748

cleanup:                                          ; preds = %if.end.123, %if.then.122
  %79 = bitcast i8** %temp to i8*, !dbg !15749
  call void @llvm.lifetime.end(i64 8, i8* %79) #2, !dbg !15749
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.184 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.127, !dbg !15751

if.end.127:                                       ; preds = %cleanup.cont, %if.then.113
  %80 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !15752, !tbaa !2289
  %nextTagBinding = getelementptr inbounds %struct.binding, %struct.binding* %80, i32 0, i32 1, !dbg !15753
  %81 = load %struct.binding*, %struct.binding** %nextTagBinding, align 8, !dbg !15753, !tbaa !2736
  %82 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15754, !tbaa !2289
  %m_freeBindingList128 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %82, i32 0, i32 70, !dbg !15755
  store %struct.binding* %81, %struct.binding** %m_freeBindingList128, align 8, !dbg !15756, !tbaa !2513
  br label %if.end.148, !dbg !15757

if.else:                                          ; preds = %if.end.111
  %83 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15758, !tbaa !2289
  %m_mem129 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %83, i32 0, i32 3, !dbg !15760
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem129, i32 0, i32 0, !dbg !15761
  %84 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8, !dbg !15761, !tbaa !2416
  %call130 = call i8* %84(i64 48), !dbg !15758
  %85 = bitcast i8* %call130 to %struct.binding*, !dbg !15762
  store %struct.binding* %85, %struct.binding** %b, align 8, !dbg !15763, !tbaa !2289
  %86 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !15764, !tbaa !2289
  %tobool131 = icmp ne %struct.binding* %86, null, !dbg !15764
  br i1 %tobool131, label %if.end.133, label %if.then.132, !dbg !15766

if.then.132:                                      ; preds = %if.else
  store i32 1, i32* %retval, !dbg !15767
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.184, !dbg !15767

if.end.133:                                       ; preds = %if.else
  %87 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15768, !tbaa !2289
  %m_mem134 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %87, i32 0, i32 3, !dbg !15769
  %malloc_fcn135 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem134, i32 0, i32 0, !dbg !15770
  %88 = load i8* (i64)*, i8* (i64)** %malloc_fcn135, align 8, !dbg !15770, !tbaa !2416
  %89 = load i32, i32* %len, align 4, !dbg !15771, !tbaa !3391
  %add136 = add i32 %89, 24, !dbg !15772
  %conv137 = sext i32 %add136 to i64, !dbg !15773
  %mul138 = mul i64 1, %conv137, !dbg !15774
  %call139 = call i8* %88(i64 %mul138), !dbg !15768
  %90 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !15775, !tbaa !2289
  %uri140 = getelementptr inbounds %struct.binding, %struct.binding* %90, i32 0, i32 4, !dbg !15776
  store i8* %call139, i8** %uri140, align 8, !dbg !15777, !tbaa !4596
  %91 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !15778, !tbaa !2289
  %uri141 = getelementptr inbounds %struct.binding, %struct.binding* %91, i32 0, i32 4, !dbg !15780
  %92 = load i8*, i8** %uri141, align 8, !dbg !15780, !tbaa !4596
  %tobool142 = icmp ne i8* %92, null, !dbg !15778
  br i1 %tobool142, label %if.end.145, label %if.then.143, !dbg !15781

if.then.143:                                      ; preds = %if.end.133
  %93 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15782, !tbaa !2289
  %m_mem144 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %93, i32 0, i32 3, !dbg !15784
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem144, i32 0, i32 2, !dbg !15785
  %94 = load void (i8*)*, void (i8*)** %free_fcn, align 8, !dbg !15785, !tbaa !2435
  %95 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !15786, !tbaa !2289
  %96 = bitcast %struct.binding* %95 to i8*, !dbg !15787
  call void %94(i8* %96), !dbg !15782
  store i32 1, i32* %retval, !dbg !15788
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.184, !dbg !15788

if.end.145:                                       ; preds = %if.end.133
  %97 = load i32, i32* %len, align 4, !dbg !15789, !tbaa !3391
  %add146 = add i32 %97, 24, !dbg !15790
  %98 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !15791, !tbaa !2289
  %uriAlloc147 = getelementptr inbounds %struct.binding, %struct.binding* %98, i32 0, i32 6, !dbg !15792
  store i32 %add146, i32* %uriAlloc147, align 4, !dbg !15793, !tbaa !14834
  br label %if.end.148

if.end.148:                                       ; preds = %if.end.145, %if.end.127
  %99 = load i32, i32* %len, align 4, !dbg !15794, !tbaa !3391
  %100 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !15795, !tbaa !2289
  %uriLen = getelementptr inbounds %struct.binding, %struct.binding* %100, i32 0, i32 5, !dbg !15796
  store i32 %99, i32* %uriLen, align 4, !dbg !15797, !tbaa !13346
  %101 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !15798, !tbaa !2289
  %uri149 = getelementptr inbounds %struct.binding, %struct.binding* %101, i32 0, i32 4, !dbg !15799
  %102 = load i8*, i8** %uri149, align 8, !dbg !15799, !tbaa !4596
  %103 = load i8*, i8** %uri.addr, align 8, !dbg !15800, !tbaa !2289
  %104 = load i32, i32* %len, align 4, !dbg !15801, !tbaa !3391
  %conv150 = sext i32 %104 to i64, !dbg !15801
  %mul151 = mul i64 %conv150, 1, !dbg !15802
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %102, i8* %103, i64 %mul151, i32 1, i1 false), !dbg !15803
  %105 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15804, !tbaa !2289
  %m_namespaceSeparator152 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %105, i32 0, i32 83, !dbg !15806
  %106 = load i8, i8* %m_namespaceSeparator152, align 1, !dbg !15806, !tbaa !2541
  %tobool153 = icmp ne i8 %106, 0, !dbg !15807
  br i1 %tobool153, label %if.then.154, label %if.end.159, !dbg !15808

if.then.154:                                      ; preds = %if.end.148
  %107 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15809, !tbaa !2289
  %m_namespaceSeparator155 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %107, i32 0, i32 83, !dbg !15810
  %108 = load i8, i8* %m_namespaceSeparator155, align 1, !dbg !15810, !tbaa !2541
  %109 = load i32, i32* %len, align 4, !dbg !15811, !tbaa !3391
  %sub = sub i32 %109, 1, !dbg !15812
  %idxprom156 = sext i32 %sub to i64, !dbg !15813
  %110 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !15813, !tbaa !2289
  %uri157 = getelementptr inbounds %struct.binding, %struct.binding* %110, i32 0, i32 4, !dbg !15814
  %111 = load i8*, i8** %uri157, align 8, !dbg !15814, !tbaa !4596
  %arrayidx158 = getelementptr i8, i8* %111, i64 %idxprom156, !dbg !15813
  store i8 %108, i8* %arrayidx158, align 1, !dbg !15815, !tbaa !2307
  br label %if.end.159, !dbg !15813

if.end.159:                                       ; preds = %if.then.154, %if.end.148
  %112 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8, !dbg !15816, !tbaa !2289
  %113 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !15817, !tbaa !2289
  %prefix160 = getelementptr inbounds %struct.binding, %struct.binding* %113, i32 0, i32 0, !dbg !15818
  store %struct.prefix* %112, %struct.prefix** %prefix160, align 8, !dbg !15819, !tbaa !12602
  %114 = load %struct.attribute_id*, %struct.attribute_id** %attId.addr, align 8, !dbg !15820, !tbaa !2289
  %115 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !15821, !tbaa !2289
  %attId161 = getelementptr inbounds %struct.binding, %struct.binding* %115, i32 0, i32 3, !dbg !15822
  store %struct.attribute_id* %114, %struct.attribute_id** %attId161, align 8, !dbg !15823, !tbaa !14711
  %116 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8, !dbg !15824, !tbaa !2289
  %binding = getelementptr inbounds %struct.prefix, %struct.prefix* %116, i32 0, i32 1, !dbg !15825
  %117 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !15825, !tbaa !12624
  %118 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !15826, !tbaa !2289
  %prevPrefixBinding = getelementptr inbounds %struct.binding, %struct.binding* %118, i32 0, i32 2, !dbg !15827
  store %struct.binding* %117, %struct.binding** %prevPrefixBinding, align 8, !dbg !15828, !tbaa !12619
  %119 = load i8*, i8** %uri.addr, align 8, !dbg !15829, !tbaa !2289
  %120 = load i8, i8* %119, align 1, !dbg !15831, !tbaa !2307
  %conv162 = sext i8 %120 to i32, !dbg !15831
  %cmp163 = icmp eq i32 %conv162, 0, !dbg !15832
  br i1 %cmp163, label %land.lhs.true.165, label %if.else.170, !dbg !15833

land.lhs.true.165:                                ; preds = %if.end.159
  %121 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8, !dbg !15834, !tbaa !2289
  %122 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15836, !tbaa !2289
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %122, i32 0, i32 65, !dbg !15837
  %123 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !15837, !tbaa !2478
  %defaultPrefix = getelementptr inbounds %struct.DTD, %struct.DTD* %123, i32 0, i32 11, !dbg !15838
  %cmp166 = icmp eq %struct.prefix* %121, %defaultPrefix, !dbg !15839
  br i1 %cmp166, label %if.then.168, label %if.else.170, !dbg !15840

if.then.168:                                      ; preds = %land.lhs.true.165
  %124 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8, !dbg !15841, !tbaa !2289
  %binding169 = getelementptr inbounds %struct.prefix, %struct.prefix* %124, i32 0, i32 1, !dbg !15842
  store %struct.binding* null, %struct.binding** %binding169, align 8, !dbg !15843, !tbaa !12624
  br label %if.end.172, !dbg !15841

if.else.170:                                      ; preds = %land.lhs.true.165, %if.end.159
  %125 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !15844, !tbaa !2289
  %126 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8, !dbg !15845, !tbaa !2289
  %binding171 = getelementptr inbounds %struct.prefix, %struct.prefix* %126, i32 0, i32 1, !dbg !15846
  store %struct.binding* %125, %struct.binding** %binding171, align 8, !dbg !15847, !tbaa !12624
  br label %if.end.172

if.end.172:                                       ; preds = %if.else.170, %if.then.168
  %127 = load %struct.binding**, %struct.binding*** %bindingsPtr.addr, align 8, !dbg !15848, !tbaa !2289
  %128 = load %struct.binding*, %struct.binding** %127, align 8, !dbg !15849, !tbaa !2289
  %129 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !15850, !tbaa !2289
  %nextTagBinding173 = getelementptr inbounds %struct.binding, %struct.binding* %129, i32 0, i32 1, !dbg !15851
  store %struct.binding* %128, %struct.binding** %nextTagBinding173, align 8, !dbg !15852, !tbaa !2736
  %130 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !15853, !tbaa !2289
  %131 = load %struct.binding**, %struct.binding*** %bindingsPtr.addr, align 8, !dbg !15854, !tbaa !2289
  store %struct.binding* %130, %struct.binding** %131, align 8, !dbg !15855, !tbaa !2289
  %132 = load %struct.attribute_id*, %struct.attribute_id** %attId.addr, align 8, !dbg !15856, !tbaa !2289
  %tobool174 = icmp ne %struct.attribute_id* %132, null, !dbg !15856
  br i1 %tobool174, label %land.lhs.true.175, label %if.end.183, !dbg !15858

land.lhs.true.175:                                ; preds = %if.end.172
  %133 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15859, !tbaa !2289
  %m_startNamespaceDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %133, i32 0, i32 23, !dbg !15861
  %134 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %m_startNamespaceDeclHandler, align 8, !dbg !15861, !tbaa !2894
  %tobool176 = icmp ne void (i8*, i8*, i8*)* %134, null, !dbg !15862
  br i1 %tobool176, label %if.then.177, label %if.end.183, !dbg !15863

if.then.177:                                      ; preds = %land.lhs.true.175
  %135 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15864, !tbaa !2289
  %m_startNamespaceDeclHandler178 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %135, i32 0, i32 23, !dbg !15865
  %136 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %m_startNamespaceDeclHandler178, align 8, !dbg !15865, !tbaa !2894
  %137 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15866, !tbaa !2289
  %m_handlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %137, i32 0, i32 1, !dbg !15867
  %138 = load i8*, i8** %m_handlerArg, align 8, !dbg !15867, !tbaa !2842
  %139 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8, !dbg !15868, !tbaa !2289
  %name179 = getelementptr inbounds %struct.prefix, %struct.prefix* %139, i32 0, i32 0, !dbg !15869
  %140 = load i8*, i8** %name179, align 8, !dbg !15869, !tbaa !3638
  %141 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8, !dbg !15870, !tbaa !2289
  %binding180 = getelementptr inbounds %struct.prefix, %struct.prefix* %141, i32 0, i32 1, !dbg !15871
  %142 = load %struct.binding*, %struct.binding** %binding180, align 8, !dbg !15871, !tbaa !12624
  %tobool181 = icmp ne %struct.binding* %142, null, !dbg !15870
  br i1 %tobool181, label %cond.true, label %cond.false, !dbg !15870

cond.true:                                        ; preds = %if.then.177
  %143 = load i8*, i8** %uri.addr, align 8, !dbg !15872, !tbaa !2289
  br label %cond.end, !dbg !15870

cond.false:                                       ; preds = %if.then.177
  br label %cond.end, !dbg !15873

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond182 = phi i8* [ %143, %cond.true ], [ null, %cond.false ], !dbg !15870
  call void %136(i8* %138, i8* %140, i8* %cond182), !dbg !15875
  br label %if.end.183, !dbg !15875

if.end.183:                                       ; preds = %cond.end, %land.lhs.true.175, %if.end.172
  store i32 0, i32* %retval, !dbg !15876
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.184, !dbg !15876

cleanup.184:                                      ; preds = %if.end.183, %if.then.143, %if.then.132, %cleanup, %if.then.106, %if.then.101, %if.then.39, %if.then
  %144 = bitcast i32* %len to i8*, !dbg !15877
  call void @llvm.lifetime.end(i64 4, i8* %144) #2, !dbg !15877
  %145 = bitcast %struct.binding** %b to i8*, !dbg !15877
  call void @llvm.lifetime.end(i64 8, i8* %145) #2, !dbg !15877
  call void @llvm.lifetime.end(i64 1, i8* %isXMLNS) #2, !dbg !15877
  call void @llvm.lifetime.end(i64 1, i8* %isXML) #2, !dbg !15877
  call void @llvm.lifetime.end(i64 1, i8* %mustBeXML) #2, !dbg !15877
  %146 = load i32, i32* %retval, !dbg !15877
  ret i32 %146, !dbg !15877
}

; Function Attrs: nounwind uwtable
define internal i32 @externalEntityContentProcessor(%struct.XML_ParserStruct* %parser, i8* %start, i8* %end, i8** %endPtr) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %endPtr.addr = alloca i8**, align 8
  %result = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1712, metadata !2293), !dbg !15878
  store i8* %start, i8** %start.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %start.addr, metadata !1713, metadata !2293), !dbg !15879
  store i8* %end, i8** %end.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !1714, metadata !2293), !dbg !15880
  store i8** %endPtr, i8*** %endPtr.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8*** %endPtr.addr, metadata !1715, metadata !2293), !dbg !15881
  %0 = bitcast i32* %result to i8*, !dbg !15882
  call void @llvm.lifetime.start(i64 4, i8* %0) #2, !dbg !15882
  call void @llvm.dbg.declare(metadata i32* %result, metadata !1716, metadata !2293), !dbg !15883
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15884, !tbaa !2289
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15885, !tbaa !2289
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 34, !dbg !15886
  %3 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !15886, !tbaa !5191
  %4 = load i8*, i8** %start.addr, align 8, !dbg !15887, !tbaa !2289
  %5 = load i8*, i8** %end.addr, align 8, !dbg !15888, !tbaa !2289
  %6 = load i8**, i8*** %endPtr.addr, align 8, !dbg !15889, !tbaa !2289
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15890, !tbaa !2289
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 85, !dbg !15891
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 1, !dbg !15892
  %8 = load i8, i8* %finalBuffer, align 1, !dbg !15892, !tbaa !5150
  %tobool = icmp ne i8 %8, 0, !dbg !15893
  %lnot = xor i1 %tobool, true, !dbg !15893
  %lnot.ext = zext i1 %lnot to i32, !dbg !15893
  %conv = trunc i32 %lnot.ext to i8, !dbg !15894
  %call = call i32 @doContent(%struct.XML_ParserStruct* %1, i32 1, %struct.encoding* %3, i8* %4, i8* %5, i8** %6, i8 zeroext %conv), !dbg !15895
  store i32 %call, i32* %result, align 4, !dbg !15883, !tbaa !2307
  %9 = load i32, i32* %result, align 4, !dbg !15896, !tbaa !2307
  %cmp = icmp eq i32 %9, 0, !dbg !15898
  br i1 %cmp, label %if.then, label %if.end.5, !dbg !15899

if.then:                                          ; preds = %entry
  %10 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15900, !tbaa !2289
  %call2 = call zeroext i8 @storeRawNames(%struct.XML_ParserStruct* %10), !dbg !15903
  %tobool3 = icmp ne i8 %call2, 0, !dbg !15903
  br i1 %tobool3, label %if.end, label %if.then.4, !dbg !15904

if.then.4:                                        ; preds = %if.then
  store i32 1, i32* %retval, !dbg !15905
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15905

if.end:                                           ; preds = %if.then
  br label %if.end.5, !dbg !15906

if.end.5:                                         ; preds = %if.end, %entry
  %11 = load i32, i32* %result, align 4, !dbg !15907, !tbaa !2307
  store i32 %11, i32* %retval, !dbg !15908
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15908

cleanup:                                          ; preds = %if.end.5, %if.then.4
  %12 = bitcast i32* %result to i8*, !dbg !15909
  call void @llvm.lifetime.end(i64 4, i8* %12) #2, !dbg !15909
  %13 = load i32, i32* %retval, !dbg !15909
  ret i32 %13, !dbg !15909
}

; Function Attrs: nounwind uwtable
define internal i32 @appendAttributeValue(%struct.XML_ParserStruct* %parser, %struct.encoding* %enc, i8 zeroext %isCdata, i8* %ptr, i8* %end, %struct.STRING_POOL* %pool) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %isCdata.addr = alloca i8, align 1
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %pool.addr = alloca %struct.STRING_POOL*, align 8
  %dtd = alloca %struct.DTD*, align 8
  %next = alloca i8*, align 8
  %tok = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %buf = alloca [4 x i8], align 1
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %name = alloca i8*, align 8
  %entity = alloca %struct.ENTITY*, align 8
  %checkEntityDecl = alloca i8, align 1
  %ch = alloca i8, align 1
  %result = alloca i32, align 4
  %textEnd = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1826, metadata !2293), !dbg !15910
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !1827, metadata !2293), !dbg !15911
  store i8 %isCdata, i8* %isCdata.addr, align 1, !tbaa !2307
  call void @llvm.dbg.declare(metadata i8* %isCdata.addr, metadata !1828, metadata !2293), !dbg !15912
  store i8* %ptr, i8** %ptr.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !1829, metadata !2293), !dbg !15913
  store i8* %end, i8** %end.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !1830, metadata !2293), !dbg !15914
  store %struct.STRING_POOL* %pool, %struct.STRING_POOL** %pool.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.STRING_POOL** %pool.addr, metadata !1831, metadata !2293), !dbg !15915
  %0 = bitcast %struct.DTD** %dtd to i8*, !dbg !15916
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !15916
  call void @llvm.dbg.declare(metadata %struct.DTD** %dtd, metadata !1832, metadata !2293), !dbg !15917
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15918, !tbaa !2289
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 65, !dbg !15919
  %2 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !15919, !tbaa !2478
  store %struct.DTD* %2, %struct.DTD** %dtd, align 8, !dbg !15917, !tbaa !2289
  br label %for.cond, !dbg !15920

for.cond:                                         ; preds = %cleanup.cont.225, %entry
  %3 = bitcast i8** %next to i8*, !dbg !15921
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !15921
  call void @llvm.dbg.declare(metadata i8** %next, metadata !1833, metadata !2293), !dbg !15922
  %4 = bitcast i32* %tok to i8*, !dbg !15923
  call void @llvm.lifetime.start(i64 4, i8* %4) #2, !dbg !15923
  call void @llvm.dbg.declare(metadata i32* %tok, metadata !1837, metadata !2293), !dbg !15924
  %5 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !15925, !tbaa !2289
  %literalScanners = getelementptr inbounds %struct.encoding, %struct.encoding* %5, i32 0, i32 1, !dbg !15926
  %arrayidx = getelementptr [2 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [2 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %literalScanners, i32 0, i64 0, !dbg !15927
  %6 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx, align 8, !dbg !15927, !tbaa !2289
  %7 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !15928, !tbaa !2289
  %8 = load i8*, i8** %ptr.addr, align 8, !dbg !15929, !tbaa !2289
  %9 = load i8*, i8** %end.addr, align 8, !dbg !15930, !tbaa !2289
  %call = call i32 %6(%struct.encoding* %7, i8* %8, i8* %9, i8** %next), !dbg !15931
  store i32 %call, i32* %tok, align 4, !dbg !15924, !tbaa !3391
  %10 = load i32, i32* %tok, align 4, !dbg !15932, !tbaa !3391
  switch i32 %10, label %sw.default [
    i32 -4, label %sw.bb
    i32 0, label %sw.bb.1
    i32 -1, label %sw.bb.2
    i32 10, label %sw.bb.8
    i32 6, label %sw.bb.54
    i32 -3, label %sw.bb.59
    i32 39, label %sw.bb.60
    i32 7, label %sw.bb.60
    i32 9, label %sw.bb.91
  ], !dbg !15933

sw.bb:                                            ; preds = %for.cond
  store i32 0, i32* %retval, !dbg !15934
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.222, !dbg !15934

sw.bb.1:                                          ; preds = %for.cond
  %11 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !15935, !tbaa !2289
  %12 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15937, !tbaa !2289
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %12, i32 0, i32 34, !dbg !15938
  %13 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !15938, !tbaa !5191
  %cmp = icmp eq %struct.encoding* %11, %13, !dbg !15939
  br i1 %cmp, label %if.then, label %if.end, !dbg !15940

if.then:                                          ; preds = %sw.bb.1
  %14 = load i8*, i8** %next, align 8, !dbg !15941, !tbaa !2289
  %15 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15942, !tbaa !2289
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %15, i32 0, i32 47, !dbg !15943
  store i8* %14, i8** %m_eventPtr, align 8, !dbg !15944, !tbaa !3006
  br label %if.end, !dbg !15945

if.end:                                           ; preds = %if.then, %sw.bb.1
  store i32 4, i32* %retval, !dbg !15946
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.222, !dbg !15946

sw.bb.2:                                          ; preds = %for.cond
  %16 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !15947, !tbaa !2289
  %17 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15949, !tbaa !2289
  %m_encoding3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %17, i32 0, i32 34, !dbg !15950
  %18 = load %struct.encoding*, %struct.encoding** %m_encoding3, align 8, !dbg !15950, !tbaa !5191
  %cmp4 = icmp eq %struct.encoding* %16, %18, !dbg !15951
  br i1 %cmp4, label %if.then.5, label %if.end.7, !dbg !15952

if.then.5:                                        ; preds = %sw.bb.2
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !15953, !tbaa !2289
  %20 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15954, !tbaa !2289
  %m_eventPtr6 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %20, i32 0, i32 47, !dbg !15955
  store i8* %19, i8** %m_eventPtr6, align 8, !dbg !15956, !tbaa !3006
  br label %if.end.7, !dbg !15957

if.end.7:                                         ; preds = %if.then.5, %sw.bb.2
  store i32 4, i32* %retval, !dbg !15958
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.222, !dbg !15958

sw.bb.8:                                          ; preds = %for.cond
  %21 = bitcast [4 x i8]* %buf to i8*, !dbg !15959
  call void @llvm.lifetime.start(i64 4, i8* %21) #2, !dbg !15959
  call void @llvm.dbg.declare(metadata [4 x i8]* %buf, metadata !1838, metadata !2293), !dbg !15960
  %22 = bitcast i32* %i to i8*, !dbg !15961
  call void @llvm.lifetime.start(i64 4, i8* %22) #2, !dbg !15961
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1841, metadata !2293), !dbg !15962
  %23 = bitcast i32* %n to i8*, !dbg !15963
  call void @llvm.lifetime.start(i64 4, i8* %23) #2, !dbg !15963
  call void @llvm.dbg.declare(metadata i32* %n, metadata !1842, metadata !2293), !dbg !15964
  %24 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !15965, !tbaa !2289
  %charRefNumber = getelementptr inbounds %struct.encoding, %struct.encoding* %24, i32 0, i32 7, !dbg !15966
  %25 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %charRefNumber, align 8, !dbg !15966, !tbaa !10981
  %26 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !15967, !tbaa !2289
  %27 = load i8*, i8** %ptr.addr, align 8, !dbg !15968, !tbaa !2289
  %call9 = call i32 %25(%struct.encoding* %26, i8* %27), !dbg !15969
  store i32 %call9, i32* %n, align 4, !dbg !15964, !tbaa !3391
  %28 = load i32, i32* %n, align 4, !dbg !15970, !tbaa !3391
  %cmp10 = icmp slt i32 %28, 0, !dbg !15972
  br i1 %cmp10, label %if.then.11, label %if.end.17, !dbg !15973

if.then.11:                                       ; preds = %sw.bb.8
  %29 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !15974, !tbaa !2289
  %30 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15977, !tbaa !2289
  %m_encoding12 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %30, i32 0, i32 34, !dbg !15978
  %31 = load %struct.encoding*, %struct.encoding** %m_encoding12, align 8, !dbg !15978, !tbaa !5191
  %cmp13 = icmp eq %struct.encoding* %29, %31, !dbg !15979
  br i1 %cmp13, label %if.then.14, label %if.end.16, !dbg !15980

if.then.14:                                       ; preds = %if.then.11
  %32 = load i8*, i8** %ptr.addr, align 8, !dbg !15981, !tbaa !2289
  %33 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !15982, !tbaa !2289
  %m_eventPtr15 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %33, i32 0, i32 47, !dbg !15983
  store i8* %32, i8** %m_eventPtr15, align 8, !dbg !15984, !tbaa !3006
  br label %if.end.16, !dbg !15985

if.end.16:                                        ; preds = %if.then.14, %if.then.11
  store i32 14, i32* %retval, !dbg !15986
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15986

if.end.17:                                        ; preds = %sw.bb.8
  %34 = load i8, i8* %isCdata.addr, align 1, !dbg !15987, !tbaa !2307
  %tobool = icmp ne i8 %34, 0, !dbg !15987
  br i1 %tobool, label %if.end.27, label %land.lhs.true, !dbg !15989

land.lhs.true:                                    ; preds = %if.end.17
  %35 = load i32, i32* %n, align 4, !dbg !15990, !tbaa !3391
  %cmp18 = icmp eq i32 %35, 32, !dbg !15992
  br i1 %cmp18, label %land.lhs.true.19, label %if.end.27, !dbg !15993

land.lhs.true.19:                                 ; preds = %land.lhs.true
  %36 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !15994, !tbaa !2289
  %ptr20 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %36, i32 0, i32 3, !dbg !15995
  %37 = load i8*, i8** %ptr20, align 8, !dbg !15995, !tbaa !2798
  %38 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !15996, !tbaa !2289
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %38, i32 0, i32 4, !dbg !15997
  %39 = load i8*, i8** %start, align 8, !dbg !15997, !tbaa !2794
  %sub.ptr.lhs.cast = ptrtoint i8* %37 to i64, !dbg !15998
  %sub.ptr.rhs.cast = ptrtoint i8* %39 to i64, !dbg !15998
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !15998
  %cmp21 = icmp eq i64 %sub.ptr.sub, 0, !dbg !15999
  br i1 %cmp21, label %if.then.26, label %lor.lhs.false, !dbg !16000

lor.lhs.false:                                    ; preds = %land.lhs.true.19
  %40 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !16001, !tbaa !2289
  %ptr22 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %40, i32 0, i32 3, !dbg !16003
  %41 = load i8*, i8** %ptr22, align 8, !dbg !16003, !tbaa !2798
  %arrayidx23 = getelementptr i8, i8* %41, i64 -1, !dbg !16004
  %42 = load i8, i8* %arrayidx23, align 1, !dbg !16004, !tbaa !2307
  %conv = sext i8 %42 to i32, !dbg !16005
  %cmp24 = icmp eq i32 %conv, 32, !dbg !16006
  br i1 %cmp24, label %if.then.26, label %if.end.27, !dbg !16007

if.then.26:                                       ; preds = %lor.lhs.false, %land.lhs.true.19
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !16008

if.end.27:                                        ; preds = %lor.lhs.false, %land.lhs.true, %if.end.17
  %43 = load i32, i32* %n, align 4, !dbg !16009, !tbaa !3391
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i32 0, i32 0, !dbg !16010
  %call28 = call i32 @PyExpat_XmlUtf8Encode(i32 %43, i8* %arraydecay), !dbg !16011
  store i32 %call28, i32* %n, align 4, !dbg !16012, !tbaa !3391
  %44 = load i32, i32* %n, align 4, !dbg !16013, !tbaa !3391
  %tobool29 = icmp ne i32 %44, 0, !dbg !16013
  br i1 %tobool29, label %if.end.37, label %if.then.30, !dbg !16015

if.then.30:                                       ; preds = %if.end.27
  %45 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !16016, !tbaa !2289
  %46 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16019, !tbaa !2289
  %m_encoding31 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %46, i32 0, i32 34, !dbg !16020
  %47 = load %struct.encoding*, %struct.encoding** %m_encoding31, align 8, !dbg !16020, !tbaa !5191
  %cmp32 = icmp eq %struct.encoding* %45, %47, !dbg !16021
  br i1 %cmp32, label %if.then.34, label %if.end.36, !dbg !16022

if.then.34:                                       ; preds = %if.then.30
  %48 = load i8*, i8** %ptr.addr, align 8, !dbg !16023, !tbaa !2289
  %49 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16024, !tbaa !2289
  %m_eventPtr35 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %49, i32 0, i32 47, !dbg !16025
  store i8* %48, i8** %m_eventPtr35, align 8, !dbg !16026, !tbaa !3006
  br label %if.end.36, !dbg !16027

if.end.36:                                        ; preds = %if.then.34, %if.then.30
  store i32 14, i32* %retval, !dbg !16028
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !16028

if.end.37:                                        ; preds = %if.end.27
  store i32 0, i32* %i, align 4, !dbg !16029, !tbaa !3391
  br label %for.cond.38, !dbg !16031

for.cond.38:                                      ; preds = %for.inc, %if.end.37
  %50 = load i32, i32* %i, align 4, !dbg !16032, !tbaa !3391
  %51 = load i32, i32* %n, align 4, !dbg !16036, !tbaa !3391
  %cmp39 = icmp slt i32 %50, %51, !dbg !16037
  br i1 %cmp39, label %for.body, label %for.end, !dbg !16038

for.body:                                         ; preds = %for.cond.38
  %52 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !16039, !tbaa !2289
  %ptr41 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %52, i32 0, i32 3, !dbg !16042
  %53 = load i8*, i8** %ptr41, align 8, !dbg !16042, !tbaa !2798
  %54 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !16043, !tbaa !2289
  %end42 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %54, i32 0, i32 2, !dbg !16044
  %55 = load i8*, i8** %end42, align 8, !dbg !16044, !tbaa !2802
  %cmp43 = icmp eq i8* %53, %55, !dbg !16045
  br i1 %cmp43, label %land.lhs.true.45, label %cond.false, !dbg !16046

land.lhs.true.45:                                 ; preds = %for.body
  %56 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !16047, !tbaa !2289
  %call46 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %56), !dbg !16049
  %tobool47 = icmp ne i8 %call46, 0, !dbg !16049
  br i1 %tobool47, label %cond.false, label %cond.true, !dbg !16050

cond.true:                                        ; preds = %land.lhs.true.45
  br i1 false, label %if.end.51, label %if.then.50, !dbg !16051

cond.false:                                       ; preds = %land.lhs.true.45, %for.body
  %57 = load i32, i32* %i, align 4, !dbg !16053, !tbaa !3391
  %idxprom = sext i32 %57 to i64, !dbg !16056
  %arrayidx48 = getelementptr [4 x i8], [4 x i8]* %buf, i32 0, i64 %idxprom, !dbg !16056
  %58 = load i8, i8* %arrayidx48, align 1, !dbg !16056, !tbaa !2307
  %59 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !16057, !tbaa !2289
  %ptr49 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %59, i32 0, i32 3, !dbg !16058
  %60 = load i8*, i8** %ptr49, align 8, !dbg !16059, !tbaa !2798
  %incdec.ptr = getelementptr i8, i8* %60, i32 1, !dbg !16059
  store i8* %incdec.ptr, i8** %ptr49, align 8, !dbg !16059, !tbaa !2798
  store i8 %58, i8* %60, align 1, !dbg !16060, !tbaa !2307
  br i1 true, label %if.end.51, label %if.then.50, !dbg !16050

if.then.50:                                       ; preds = %cond.false, %cond.true
  store i32 1, i32* %retval, !dbg !16061
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !16061

if.end.51:                                        ; preds = %cond.false, %cond.true
  br label %for.inc, !dbg !16062

for.inc:                                          ; preds = %if.end.51
  %61 = load i32, i32* %i, align 4, !dbg !16063, !tbaa !3391
  %inc = add i32 %61, 1, !dbg !16063
  store i32 %inc, i32* %i, align 4, !dbg !16063, !tbaa !3391
  br label %for.cond.38, !dbg !16064

for.end:                                          ; preds = %for.cond.38
  store i32 0, i32* %cleanup.dest.slot, !dbg !16065
  br label %cleanup, !dbg !16065

cleanup:                                          ; preds = %for.end, %if.then.50, %if.end.36, %if.then.26, %if.end.16
  %62 = bitcast i32* %n to i8*, !dbg !16066
  call void @llvm.lifetime.end(i64 4, i8* %62) #2, !dbg !16066
  %63 = bitcast i32* %i to i8*, !dbg !16066
  call void @llvm.lifetime.end(i64 4, i8* %63) #2, !dbg !16066
  %64 = bitcast [4 x i8]* %buf to i8*, !dbg !16066
  call void @llvm.lifetime.end(i64 4, i8* %64) #2, !dbg !16066
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.222 [
    i32 0, label %cleanup.cont
    i32 4, label %sw.epilog
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %sw.epilog, !dbg !16068

sw.bb.54:                                         ; preds = %for.cond
  %65 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !16069, !tbaa !2289
  %66 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !16071, !tbaa !2289
  %67 = load i8*, i8** %ptr.addr, align 8, !dbg !16072, !tbaa !2289
  %68 = load i8*, i8** %next, align 8, !dbg !16073, !tbaa !2289
  %call55 = call i8* @poolAppend(%struct.STRING_POOL* %65, %struct.encoding* %66, i8* %67, i8* %68), !dbg !16074
  %tobool56 = icmp ne i8* %call55, null, !dbg !16074
  br i1 %tobool56, label %if.end.58, label %if.then.57, !dbg !16075

if.then.57:                                       ; preds = %sw.bb.54
  store i32 1, i32* %retval, !dbg !16076
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.222, !dbg !16076

if.end.58:                                        ; preds = %sw.bb.54
  br label %sw.epilog, !dbg !16077

sw.bb.59:                                         ; preds = %for.cond
  %69 = load i8*, i8** %ptr.addr, align 8, !dbg !16078, !tbaa !2289
  %70 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !16079, !tbaa !2289
  %minBytesPerChar = getelementptr inbounds %struct.encoding, %struct.encoding* %70, i32 0, i32 13, !dbg !16080
  %71 = load i32, i32* %minBytesPerChar, align 4, !dbg !16080, !tbaa !6758
  %idx.ext = sext i32 %71 to i64, !dbg !16081
  %add.ptr = getelementptr i8, i8* %69, i64 %idx.ext, !dbg !16081
  store i8* %add.ptr, i8** %next, align 8, !dbg !16082, !tbaa !2289
  br label %sw.bb.60, !dbg !16083

sw.bb.60:                                         ; preds = %for.cond, %for.cond, %sw.bb.59
  %72 = load i8, i8* %isCdata.addr, align 1, !dbg !16084, !tbaa !2307
  %tobool61 = icmp ne i8 %72, 0, !dbg !16084
  br i1 %tobool61, label %if.end.77, label %land.lhs.true.62, !dbg !16086

land.lhs.true.62:                                 ; preds = %sw.bb.60
  %73 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !16087, !tbaa !2289
  %ptr63 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %73, i32 0, i32 3, !dbg !16089
  %74 = load i8*, i8** %ptr63, align 8, !dbg !16089, !tbaa !2798
  %75 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !16090, !tbaa !2289
  %start64 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %75, i32 0, i32 4, !dbg !16091
  %76 = load i8*, i8** %start64, align 8, !dbg !16091, !tbaa !2794
  %sub.ptr.lhs.cast65 = ptrtoint i8* %74 to i64, !dbg !16092
  %sub.ptr.rhs.cast66 = ptrtoint i8* %76 to i64, !dbg !16092
  %sub.ptr.sub67 = sub i64 %sub.ptr.lhs.cast65, %sub.ptr.rhs.cast66, !dbg !16092
  %cmp68 = icmp eq i64 %sub.ptr.sub67, 0, !dbg !16093
  br i1 %cmp68, label %if.then.76, label %lor.lhs.false.70, !dbg !16094

lor.lhs.false.70:                                 ; preds = %land.lhs.true.62
  %77 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !16095, !tbaa !2289
  %ptr71 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %77, i32 0, i32 3, !dbg !16097
  %78 = load i8*, i8** %ptr71, align 8, !dbg !16097, !tbaa !2798
  %arrayidx72 = getelementptr i8, i8* %78, i64 -1, !dbg !16098
  %79 = load i8, i8* %arrayidx72, align 1, !dbg !16098, !tbaa !2307
  %conv73 = sext i8 %79 to i32, !dbg !16099
  %cmp74 = icmp eq i32 %conv73, 32, !dbg !16100
  br i1 %cmp74, label %if.then.76, label %if.end.77, !dbg !16101

if.then.76:                                       ; preds = %lor.lhs.false.70, %land.lhs.true.62
  br label %sw.epilog, !dbg !16102

if.end.77:                                        ; preds = %lor.lhs.false.70, %sw.bb.60
  %80 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !16103, !tbaa !2289
  %ptr78 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %80, i32 0, i32 3, !dbg !16105
  %81 = load i8*, i8** %ptr78, align 8, !dbg !16105, !tbaa !2798
  %82 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !16106, !tbaa !2289
  %end79 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %82, i32 0, i32 2, !dbg !16107
  %83 = load i8*, i8** %end79, align 8, !dbg !16107, !tbaa !2802
  %cmp80 = icmp eq i8* %81, %83, !dbg !16108
  br i1 %cmp80, label %land.lhs.true.82, label %cond.false.86, !dbg !16109

land.lhs.true.82:                                 ; preds = %if.end.77
  %84 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !16110, !tbaa !2289
  %call83 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %84), !dbg !16112
  %tobool84 = icmp ne i8 %call83, 0, !dbg !16112
  br i1 %tobool84, label %cond.false.86, label %cond.true.85, !dbg !16113

cond.true.85:                                     ; preds = %land.lhs.true.82
  br i1 false, label %if.end.90, label %if.then.89, !dbg !16114

cond.false.86:                                    ; preds = %land.lhs.true.82, %if.end.77
  %85 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !16116, !tbaa !2289
  %ptr87 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %85, i32 0, i32 3, !dbg !16119
  %86 = load i8*, i8** %ptr87, align 8, !dbg !16120, !tbaa !2798
  %incdec.ptr88 = getelementptr i8, i8* %86, i32 1, !dbg !16120
  store i8* %incdec.ptr88, i8** %ptr87, align 8, !dbg !16120, !tbaa !2798
  store i8 32, i8* %86, align 1, !dbg !16121, !tbaa !2307
  br i1 true, label %if.end.90, label %if.then.89, !dbg !16113

if.then.89:                                       ; preds = %cond.false.86, %cond.true.85
  store i32 1, i32* %retval, !dbg !16122
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.222, !dbg !16122

if.end.90:                                        ; preds = %cond.false.86, %cond.true.85
  br label %sw.epilog, !dbg !16123

sw.bb.91:                                         ; preds = %for.cond
  %87 = bitcast i8** %name to i8*, !dbg !16124
  call void @llvm.lifetime.start(i64 8, i8* %87) #2, !dbg !16124
  call void @llvm.dbg.declare(metadata i8** %name, metadata !1843, metadata !2293), !dbg !16125
  %88 = bitcast %struct.ENTITY** %entity to i8*, !dbg !16126
  call void @llvm.lifetime.start(i64 8, i8* %88) #2, !dbg !16126
  call void @llvm.dbg.declare(metadata %struct.ENTITY** %entity, metadata !1845, metadata !2293), !dbg !16127
  call void @llvm.lifetime.start(i64 1, i8* %checkEntityDecl) #2, !dbg !16128
  call void @llvm.dbg.declare(metadata i8* %checkEntityDecl, metadata !1846, metadata !2293), !dbg !16129
  call void @llvm.lifetime.start(i64 1, i8* %ch) #2, !dbg !16130
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !1847, metadata !2293), !dbg !16131
  %89 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !16132, !tbaa !2289
  %predefinedEntityName = getelementptr inbounds %struct.encoding, %struct.encoding* %89, i32 0, i32 8, !dbg !16133
  %90 = load i32 (%struct.encoding*, i8*, i8*)*, i32 (%struct.encoding*, i8*, i8*)** %predefinedEntityName, align 8, !dbg !16133, !tbaa !7905
  %91 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !16134, !tbaa !2289
  %92 = load i8*, i8** %ptr.addr, align 8, !dbg !16135, !tbaa !2289
  %93 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !16136, !tbaa !2289
  %minBytesPerChar92 = getelementptr inbounds %struct.encoding, %struct.encoding* %93, i32 0, i32 13, !dbg !16137
  %94 = load i32, i32* %minBytesPerChar92, align 4, !dbg !16137, !tbaa !6758
  %idx.ext93 = sext i32 %94 to i64, !dbg !16138
  %add.ptr94 = getelementptr i8, i8* %92, i64 %idx.ext93, !dbg !16138
  %95 = load i8*, i8** %next, align 8, !dbg !16139, !tbaa !2289
  %96 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !16140, !tbaa !2289
  %minBytesPerChar95 = getelementptr inbounds %struct.encoding, %struct.encoding* %96, i32 0, i32 13, !dbg !16141
  %97 = load i32, i32* %minBytesPerChar95, align 4, !dbg !16141, !tbaa !6758
  %idx.ext96 = sext i32 %97 to i64, !dbg !16142
  %idx.neg = sub i64 0, %idx.ext96, !dbg !16142
  %add.ptr97 = getelementptr i8, i8* %95, i64 %idx.neg, !dbg !16142
  %call98 = call i32 %90(%struct.encoding* %91, i8* %add.ptr94, i8* %add.ptr97), !dbg !16143
  %conv99 = trunc i32 %call98 to i8, !dbg !16144
  store i8 %conv99, i8* %ch, align 1, !dbg !16131, !tbaa !2307
  %98 = load i8, i8* %ch, align 1, !dbg !16145, !tbaa !2307
  %tobool100 = icmp ne i8 %98, 0, !dbg !16145
  br i1 %tobool100, label %if.then.101, label %if.end.115, !dbg !16147

if.then.101:                                      ; preds = %sw.bb.91
  %99 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !16148, !tbaa !2289
  %ptr102 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %99, i32 0, i32 3, !dbg !16151
  %100 = load i8*, i8** %ptr102, align 8, !dbg !16151, !tbaa !2798
  %101 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !16152, !tbaa !2289
  %end103 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %101, i32 0, i32 2, !dbg !16153
  %102 = load i8*, i8** %end103, align 8, !dbg !16153, !tbaa !2802
  %cmp104 = icmp eq i8* %100, %102, !dbg !16154
  br i1 %cmp104, label %land.lhs.true.106, label %cond.false.110, !dbg !16155

land.lhs.true.106:                                ; preds = %if.then.101
  %103 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !16156, !tbaa !2289
  %call107 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %103), !dbg !16158
  %tobool108 = icmp ne i8 %call107, 0, !dbg !16158
  br i1 %tobool108, label %cond.false.110, label %cond.true.109, !dbg !16159

cond.true.109:                                    ; preds = %land.lhs.true.106
  br i1 false, label %if.end.114, label %if.then.113, !dbg !16160

cond.false.110:                                   ; preds = %land.lhs.true.106, %if.then.101
  %104 = load i8, i8* %ch, align 1, !dbg !16162, !tbaa !2307
  %105 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !16165, !tbaa !2289
  %ptr111 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %105, i32 0, i32 3, !dbg !16166
  %106 = load i8*, i8** %ptr111, align 8, !dbg !16167, !tbaa !2798
  %incdec.ptr112 = getelementptr i8, i8* %106, i32 1, !dbg !16167
  store i8* %incdec.ptr112, i8** %ptr111, align 8, !dbg !16167, !tbaa !2798
  store i8 %104, i8* %106, align 1, !dbg !16168, !tbaa !2307
  br i1 true, label %if.end.114, label %if.then.113, !dbg !16159

if.then.113:                                      ; preds = %cond.false.110, %cond.true.109
  store i32 1, i32* %retval, !dbg !16169
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.210, !dbg !16169

if.end.114:                                       ; preds = %cond.false.110, %cond.true.109
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup.210, !dbg !16170

if.end.115:                                       ; preds = %sw.bb.91
  %107 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16171, !tbaa !2289
  %m_temp2Pool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %107, i32 0, i32 80, !dbg !16172
  %108 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !16173, !tbaa !2289
  %109 = load i8*, i8** %ptr.addr, align 8, !dbg !16174, !tbaa !2289
  %110 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !16175, !tbaa !2289
  %minBytesPerChar116 = getelementptr inbounds %struct.encoding, %struct.encoding* %110, i32 0, i32 13, !dbg !16176
  %111 = load i32, i32* %minBytesPerChar116, align 4, !dbg !16176, !tbaa !6758
  %idx.ext117 = sext i32 %111 to i64, !dbg !16177
  %add.ptr118 = getelementptr i8, i8* %109, i64 %idx.ext117, !dbg !16177
  %112 = load i8*, i8** %next, align 8, !dbg !16178, !tbaa !2289
  %113 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !16179, !tbaa !2289
  %minBytesPerChar119 = getelementptr inbounds %struct.encoding, %struct.encoding* %113, i32 0, i32 13, !dbg !16180
  %114 = load i32, i32* %minBytesPerChar119, align 4, !dbg !16180, !tbaa !6758
  %idx.ext120 = sext i32 %114 to i64, !dbg !16181
  %idx.neg121 = sub i64 0, %idx.ext120, !dbg !16181
  %add.ptr122 = getelementptr i8, i8* %112, i64 %idx.neg121, !dbg !16181
  %call123 = call i8* @poolStoreString(%struct.STRING_POOL* %m_temp2Pool, %struct.encoding* %108, i8* %add.ptr118, i8* %add.ptr122), !dbg !16182
  store i8* %call123, i8** %name, align 8, !dbg !16183, !tbaa !2289
  %115 = load i8*, i8** %name, align 8, !dbg !16184, !tbaa !2289
  %tobool124 = icmp ne i8* %115, null, !dbg !16184
  br i1 %tobool124, label %if.end.126, label %if.then.125, !dbg !16186

if.then.125:                                      ; preds = %if.end.115
  store i32 1, i32* %retval, !dbg !16187
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.210, !dbg !16187

if.end.126:                                       ; preds = %if.end.115
  %116 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16188, !tbaa !2289
  %117 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !16189, !tbaa !2289
  %generalEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %117, i32 0, i32 0, !dbg !16190
  %118 = load i8*, i8** %name, align 8, !dbg !16191, !tbaa !2289
  %call127 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %116, %struct.HASH_TABLE* %generalEntities, i8* %118, i64 0), !dbg !16192
  %119 = bitcast %struct.NAMED* %call127 to %struct.ENTITY*, !dbg !16193
  store %struct.ENTITY* %119, %struct.ENTITY** %entity, align 8, !dbg !16194, !tbaa !2289
  %120 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16195, !tbaa !2289
  %m_temp2Pool128 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %120, i32 0, i32 80, !dbg !16196
  %start129 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_temp2Pool128, i32 0, i32 4, !dbg !16197
  %121 = load i8*, i8** %start129, align 8, !dbg !16197, !tbaa !2794
  %122 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16198, !tbaa !2289
  %m_temp2Pool130 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %122, i32 0, i32 80, !dbg !16199
  %ptr131 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_temp2Pool130, i32 0, i32 3, !dbg !16200
  store i8* %121, i8** %ptr131, align 8, !dbg !16201, !tbaa !2798
  %123 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !16202, !tbaa !2289
  %124 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !16204, !tbaa !2289
  %pool132 = getelementptr inbounds %struct.DTD, %struct.DTD* %124, i32 0, i32 4, !dbg !16205
  %cmp133 = icmp eq %struct.STRING_POOL* %123, %pool132, !dbg !16206
  br i1 %cmp133, label %if.then.135, label %if.else, !dbg !16207

if.then.135:                                      ; preds = %if.end.126
  %125 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16208, !tbaa !2289
  %m_prologState = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %125, i32 0, i32 44, !dbg !16209
  %documentEntity = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState, i32 0, i32 4, !dbg !16210
  %126 = load i32, i32* %documentEntity, align 4, !dbg !16210, !tbaa !8601
  %tobool136 = icmp ne i32 %126, 0, !dbg !16211
  br i1 %tobool136, label %land.rhs, label %land.end, !dbg !16212

land.rhs:                                         ; preds = %if.then.135
  %127 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !16213, !tbaa !2289
  %standalone = getelementptr inbounds %struct.DTD, %struct.DTD* %127, i32 0, i32 8, !dbg !16214
  %128 = load i8, i8* %standalone, align 1, !dbg !16214, !tbaa !3187
  %conv137 = zext i8 %128 to i32, !dbg !16213
  %tobool138 = icmp ne i32 %conv137, 0, !dbg !16213
  br i1 %tobool138, label %cond.true.139, label %cond.false.141, !dbg !16213

cond.true.139:                                    ; preds = %land.rhs
  %129 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16215, !tbaa !2289
  %m_openInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %129, i32 0, i32 50, !dbg !16216
  %130 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities, align 8, !dbg !16216, !tbaa !2664
  %tobool140 = icmp ne %struct.open_internal_entity* %130, null, !dbg !16217
  %lnot = xor i1 %tobool140, true, !dbg !16217
  %lnot.ext = zext i1 %lnot to i32, !dbg !16217
  br label %cond.end, !dbg !16213

cond.false.141:                                   ; preds = %land.rhs
  %131 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !16218, !tbaa !2289
  %hasParamEntityRefs = getelementptr inbounds %struct.DTD, %struct.DTD* %131, i32 0, i32 7, !dbg !16219
  %132 = load i8, i8* %hasParamEntityRefs, align 1, !dbg !16219, !tbaa !3183
  %tobool142 = icmp ne i8 %132, 0, !dbg !16220
  %lnot143 = xor i1 %tobool142, true, !dbg !16220
  %lnot.ext144 = zext i1 %lnot143 to i32, !dbg !16220
  br label %cond.end, !dbg !16213

cond.end:                                         ; preds = %cond.false.141, %cond.true.139
  %cond = phi i32 [ %lnot.ext, %cond.true.139 ], [ %lnot.ext144, %cond.false.141 ], !dbg !16213
  %tobool145 = icmp ne i32 %cond, 0, !dbg !16212
  br label %land.end

land.end:                                         ; preds = %cond.end, %if.then.135
  %133 = phi i1 [ false, %if.then.135 ], [ %tobool145, %cond.end ]
  %land.ext = zext i1 %133 to i32, !dbg !16221
  %conv146 = trunc i32 %land.ext to i8, !dbg !16211
  store i8 %conv146, i8* %checkEntityDecl, align 1, !dbg !16223, !tbaa !2307
  br label %if.end.153, !dbg !16224

if.else:                                          ; preds = %if.end.126
  %134 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !16225, !tbaa !2289
  %hasParamEntityRefs147 = getelementptr inbounds %struct.DTD, %struct.DTD* %134, i32 0, i32 7, !dbg !16226
  %135 = load i8, i8* %hasParamEntityRefs147, align 1, !dbg !16226, !tbaa !3183
  %tobool148 = icmp ne i8 %135, 0, !dbg !16225
  br i1 %tobool148, label %lor.rhs, label %lor.end, !dbg !16227

lor.rhs:                                          ; preds = %if.else
  %136 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !16228, !tbaa !2289
  %standalone149 = getelementptr inbounds %struct.DTD, %struct.DTD* %136, i32 0, i32 8, !dbg !16229
  %137 = load i8, i8* %standalone149, align 1, !dbg !16229, !tbaa !3187
  %conv150 = zext i8 %137 to i32, !dbg !16230
  %tobool151 = icmp ne i32 %conv150, 0, !dbg !16227
  br label %lor.end, !dbg !16227

lor.end:                                          ; preds = %lor.rhs, %if.else
  %138 = phi i1 [ true, %if.else ], [ %tobool151, %lor.rhs ]
  %lor.ext = zext i1 %138 to i32, !dbg !16231
  %conv152 = trunc i32 %lor.ext to i8, !dbg !16234
  store i8 %conv152, i8* %checkEntityDecl, align 1, !dbg !16235, !tbaa !2307
  br label %if.end.153

if.end.153:                                       ; preds = %lor.end, %land.end
  %139 = load i8, i8* %checkEntityDecl, align 1, !dbg !16236, !tbaa !2307
  %tobool154 = icmp ne i8 %139, 0, !dbg !16236
  br i1 %tobool154, label %if.then.155, label %if.else.163, !dbg !16238

if.then.155:                                      ; preds = %if.end.153
  %140 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !16239, !tbaa !2289
  %tobool156 = icmp ne %struct.ENTITY* %140, null, !dbg !16239
  br i1 %tobool156, label %if.else.158, label %if.then.157, !dbg !16242

if.then.157:                                      ; preds = %if.then.155
  store i32 11, i32* %retval, !dbg !16243
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.210, !dbg !16243

if.else.158:                                      ; preds = %if.then.155
  %141 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !16244, !tbaa !2289
  %is_internal = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %141, i32 0, i32 10, !dbg !16246
  %142 = load i8, i8* %is_internal, align 1, !dbg !16246, !tbaa !7995
  %tobool159 = icmp ne i8 %142, 0, !dbg !16244
  br i1 %tobool159, label %if.end.161, label %if.then.160, !dbg !16247

if.then.160:                                      ; preds = %if.else.158
  store i32 24, i32* %retval, !dbg !16248
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.210, !dbg !16248

if.end.161:                                       ; preds = %if.else.158
  br label %if.end.162

if.end.162:                                       ; preds = %if.end.161
  br label %if.end.167, !dbg !16249

if.else.163:                                      ; preds = %if.end.153
  %143 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !16250, !tbaa !2289
  %tobool164 = icmp ne %struct.ENTITY* %143, null, !dbg !16250
  br i1 %tobool164, label %if.end.166, label %if.then.165, !dbg !16252

if.then.165:                                      ; preds = %if.else.163
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup.210, !dbg !16253

if.end.166:                                       ; preds = %if.else.163
  br label %if.end.167

if.end.167:                                       ; preds = %if.end.166, %if.end.162
  %144 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !16255, !tbaa !2289
  %open = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %144, i32 0, i32 8, !dbg !16257
  %145 = load i8, i8* %open, align 1, !dbg !16257, !tbaa !4090
  %tobool168 = icmp ne i8 %145, 0, !dbg !16255
  br i1 %tobool168, label %if.then.169, label %if.end.176, !dbg !16258

if.then.169:                                      ; preds = %if.end.167
  %146 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !16259, !tbaa !2289
  %147 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16262, !tbaa !2289
  %m_encoding170 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %147, i32 0, i32 34, !dbg !16263
  %148 = load %struct.encoding*, %struct.encoding** %m_encoding170, align 8, !dbg !16263, !tbaa !5191
  %cmp171 = icmp eq %struct.encoding* %146, %148, !dbg !16264
  br i1 %cmp171, label %if.then.173, label %if.end.175, !dbg !16265

if.then.173:                                      ; preds = %if.then.169
  %149 = load i8*, i8** %ptr.addr, align 8, !dbg !16266, !tbaa !2289
  %150 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16267, !tbaa !2289
  %m_eventPtr174 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %150, i32 0, i32 47, !dbg !16268
  store i8* %149, i8** %m_eventPtr174, align 8, !dbg !16269, !tbaa !3006
  br label %if.end.175, !dbg !16270

if.end.175:                                       ; preds = %if.then.173, %if.then.169
  store i32 12, i32* %retval, !dbg !16271
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.210, !dbg !16271

if.end.176:                                       ; preds = %if.end.167
  %151 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !16272, !tbaa !2289
  %notation = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %151, i32 0, i32 7, !dbg !16274
  %152 = load i8*, i8** %notation, align 8, !dbg !16274, !tbaa !7823
  %tobool177 = icmp ne i8* %152, null, !dbg !16272
  br i1 %tobool177, label %if.then.178, label %if.end.185, !dbg !16275

if.then.178:                                      ; preds = %if.end.176
  %153 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !16276, !tbaa !2289
  %154 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16279, !tbaa !2289
  %m_encoding179 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %154, i32 0, i32 34, !dbg !16280
  %155 = load %struct.encoding*, %struct.encoding** %m_encoding179, align 8, !dbg !16280, !tbaa !5191
  %cmp180 = icmp eq %struct.encoding* %153, %155, !dbg !16281
  br i1 %cmp180, label %if.then.182, label %if.end.184, !dbg !16282

if.then.182:                                      ; preds = %if.then.178
  %156 = load i8*, i8** %ptr.addr, align 8, !dbg !16283, !tbaa !2289
  %157 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16284, !tbaa !2289
  %m_eventPtr183 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %157, i32 0, i32 47, !dbg !16285
  store i8* %156, i8** %m_eventPtr183, align 8, !dbg !16286, !tbaa !3006
  br label %if.end.184, !dbg !16287

if.end.184:                                       ; preds = %if.then.182, %if.then.178
  store i32 15, i32* %retval, !dbg !16288
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.210, !dbg !16288

if.end.185:                                       ; preds = %if.end.176
  %158 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !16289, !tbaa !2289
  %textPtr = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %158, i32 0, i32 1, !dbg !16290
  %159 = load i8*, i8** %textPtr, align 8, !dbg !16290, !tbaa !7541
  %tobool186 = icmp ne i8* %159, null, !dbg !16289
  br i1 %tobool186, label %if.else.194, label %if.then.187, !dbg !16291

if.then.187:                                      ; preds = %if.end.185
  %160 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !16292, !tbaa !2289
  %161 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16295, !tbaa !2289
  %m_encoding188 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %161, i32 0, i32 34, !dbg !16296
  %162 = load %struct.encoding*, %struct.encoding** %m_encoding188, align 8, !dbg !16296, !tbaa !5191
  %cmp189 = icmp eq %struct.encoding* %160, %162, !dbg !16297
  br i1 %cmp189, label %if.then.191, label %if.end.193, !dbg !16298

if.then.191:                                      ; preds = %if.then.187
  %163 = load i8*, i8** %ptr.addr, align 8, !dbg !16299, !tbaa !2289
  %164 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16300, !tbaa !2289
  %m_eventPtr192 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %164, i32 0, i32 47, !dbg !16301
  store i8* %163, i8** %m_eventPtr192, align 8, !dbg !16302, !tbaa !3006
  br label %if.end.193, !dbg !16303

if.end.193:                                       ; preds = %if.then.191, %if.then.187
  store i32 16, i32* %retval, !dbg !16304
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.210, !dbg !16304

if.else.194:                                      ; preds = %if.end.185
  %165 = bitcast i32* %result to i8*, !dbg !16305
  call void @llvm.lifetime.start(i64 4, i8* %165) #2, !dbg !16305
  call void @llvm.dbg.declare(metadata i32* %result, metadata !1848, metadata !2293), !dbg !16306
  %166 = bitcast i8** %textEnd to i8*, !dbg !16307
  call void @llvm.lifetime.start(i64 8, i8* %166) #2, !dbg !16307
  call void @llvm.dbg.declare(metadata i8** %textEnd, metadata !1851, metadata !2293), !dbg !16308
  %167 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !16309, !tbaa !2289
  %textPtr195 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %167, i32 0, i32 1, !dbg !16310
  %168 = load i8*, i8** %textPtr195, align 8, !dbg !16310, !tbaa !7541
  %169 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !16311, !tbaa !2289
  %textLen = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %169, i32 0, i32 2, !dbg !16312
  %170 = load i32, i32* %textLen, align 4, !dbg !16312, !tbaa !7554
  %idx.ext196 = sext i32 %170 to i64, !dbg !16313
  %add.ptr197 = getelementptr i8, i8* %168, i64 %idx.ext196, !dbg !16313
  store i8* %add.ptr197, i8** %textEnd, align 8, !dbg !16308, !tbaa !2289
  %171 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !16314, !tbaa !2289
  %open198 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %171, i32 0, i32 8, !dbg !16315
  store i8 1, i8* %open198, align 1, !dbg !16316, !tbaa !4090
  %172 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16317, !tbaa !2289
  %173 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16318, !tbaa !2289
  %m_internalEncoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %173, i32 0, i32 36, !dbg !16319
  %174 = load %struct.encoding*, %struct.encoding** %m_internalEncoding, align 8, !dbg !16319, !tbaa !2599
  %175 = load i8, i8* %isCdata.addr, align 1, !dbg !16320, !tbaa !2307
  %176 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !16321, !tbaa !2289
  %textPtr199 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %176, i32 0, i32 1, !dbg !16322
  %177 = load i8*, i8** %textPtr199, align 8, !dbg !16322, !tbaa !7541
  %178 = load i8*, i8** %textEnd, align 8, !dbg !16323, !tbaa !2289
  %179 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !16324, !tbaa !2289
  %call200 = call i32 @appendAttributeValue(%struct.XML_ParserStruct* %172, %struct.encoding* %174, i8 zeroext %175, i8* %177, i8* %178, %struct.STRING_POOL* %179), !dbg !16325
  store i32 %call200, i32* %result, align 4, !dbg !16326, !tbaa !2307
  %180 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !16327, !tbaa !2289
  %open201 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %180, i32 0, i32 8, !dbg !16328
  store i8 0, i8* %open201, align 1, !dbg !16329, !tbaa !4090
  %181 = load i32, i32* %result, align 4, !dbg !16330, !tbaa !2307
  %tobool202 = icmp ne i32 %181, 0, !dbg !16330
  br i1 %tobool202, label %if.then.203, label %if.end.204, !dbg !16332

if.then.203:                                      ; preds = %if.else.194
  %182 = load i32, i32* %result, align 4, !dbg !16333, !tbaa !2307
  store i32 %182, i32* %retval, !dbg !16334
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.205, !dbg !16334

if.end.204:                                       ; preds = %if.else.194
  store i32 0, i32* %cleanup.dest.slot, !dbg !16335
  br label %cleanup.205, !dbg !16335

cleanup.205:                                      ; preds = %if.end.204, %if.then.203
  %183 = bitcast i8** %textEnd to i8*, !dbg !16336
  call void @llvm.lifetime.end(i64 8, i8* %183) #2, !dbg !16336
  %184 = bitcast i32* %result to i8*, !dbg !16336
  call void @llvm.lifetime.end(i64 4, i8* %184) #2, !dbg !16336
  %cleanup.dest.207 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.207, label %cleanup.210 [
    i32 0, label %cleanup.cont.208
  ]

cleanup.cont.208:                                 ; preds = %cleanup.205
  br label %if.end.209

if.end.209:                                       ; preds = %cleanup.cont.208
  store i32 0, i32* %cleanup.dest.slot, !dbg !16338
  br label %cleanup.210, !dbg !16338

cleanup.210:                                      ; preds = %if.end.209, %cleanup.205, %if.end.193, %if.end.184, %if.end.175, %if.then.165, %if.then.160, %if.then.157, %if.then.125, %if.end.114, %if.then.113
  call void @llvm.lifetime.end(i64 1, i8* %ch) #2, !dbg !16338
  call void @llvm.lifetime.end(i64 1, i8* %checkEntityDecl) #2, !dbg !16338
  %185 = bitcast %struct.ENTITY** %entity to i8*, !dbg !16339
  call void @llvm.lifetime.end(i64 8, i8* %185) #2, !dbg !16339
  %186 = bitcast i8** %name to i8*, !dbg !16339
  call void @llvm.lifetime.end(i64 8, i8* %186) #2, !dbg !16339
  %cleanup.dest.214 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.214, label %cleanup.222 [
    i32 0, label %cleanup.cont.215
    i32 4, label %sw.epilog
  ]

cleanup.cont.215:                                 ; preds = %cleanup.210
  br label %sw.epilog, !dbg !16340

sw.default:                                       ; preds = %for.cond
  %187 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !16341, !tbaa !2289
  %188 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16343, !tbaa !2289
  %m_encoding216 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %188, i32 0, i32 34, !dbg !16344
  %189 = load %struct.encoding*, %struct.encoding** %m_encoding216, align 8, !dbg !16344, !tbaa !5191
  %cmp217 = icmp eq %struct.encoding* %187, %189, !dbg !16345
  br i1 %cmp217, label %if.then.219, label %if.end.221, !dbg !16346

if.then.219:                                      ; preds = %sw.default
  %190 = load i8*, i8** %ptr.addr, align 8, !dbg !16347, !tbaa !2289
  %191 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16348, !tbaa !2289
  %m_eventPtr220 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %191, i32 0, i32 47, !dbg !16349
  store i8* %190, i8** %m_eventPtr220, align 8, !dbg !16350, !tbaa !3006
  br label %if.end.221, !dbg !16351

if.end.221:                                       ; preds = %if.then.219, %sw.default
  store i32 23, i32* %retval, !dbg !16352
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.222, !dbg !16352

sw.epilog:                                        ; preds = %cleanup.cont.215, %cleanup.210, %if.end.90, %if.then.76, %if.end.58, %cleanup.cont, %cleanup
  %192 = load i8*, i8** %next, align 8, !dbg !16353, !tbaa !2289
  store i8* %192, i8** %ptr.addr, align 8, !dbg !16354, !tbaa !2289
  store i32 0, i32* %cleanup.dest.slot, !dbg !16355
  br label %cleanup.222, !dbg !16355

cleanup.222:                                      ; preds = %sw.epilog, %if.end.221, %cleanup.210, %if.then.89, %if.then.57, %cleanup, %if.end.7, %if.end, %sw.bb
  %193 = bitcast i32* %tok to i8*, !dbg !16356
  call void @llvm.lifetime.end(i64 4, i8* %193) #2, !dbg !16356
  %194 = bitcast i8** %next to i8*, !dbg !16356
  call void @llvm.lifetime.end(i64 8, i8* %194) #2, !dbg !16356
  %cleanup.dest.224 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.224, label %cleanup.226 [
    i32 0, label %cleanup.cont.225
  ]

cleanup.cont.225:                                 ; preds = %cleanup.222
  br label %for.cond, !dbg !16358

cleanup.226:                                      ; preds = %cleanup.222
  %195 = bitcast %struct.DTD** %dtd to i8*, !dbg !16359
  call void @llvm.lifetime.end(i64 8, i8* %195) #2, !dbg !16359
  %196 = load i32, i32* %retval, !dbg !16359
  ret i32 %196, !dbg !16359
}

; Function Attrs: nounwind uwtable
define internal i32 @internalEntityProcessor(%struct.XML_ParserStruct* %parser, i8* %s, i8* %end, i8** %nextPtr) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %s.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextPtr.addr = alloca i8**, align 8
  %entity = alloca %struct.ENTITY*, align 8
  %textStart = alloca i8*, align 8
  %textEnd = alloca i8*, align 8
  %next = alloca i8*, align 8
  %result = alloca i32, align 4
  %openEntity = alloca %struct.open_internal_entity*, align 8
  %cleanup.dest.slot = alloca i32
  %tok = alloca i32, align 4
  %tok30 = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1927, metadata !2293), !dbg !16360
  store i8* %s, i8** %s.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !1928, metadata !2293), !dbg !16361
  store i8* %end, i8** %end.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !1929, metadata !2293), !dbg !16362
  store i8** %nextPtr, i8*** %nextPtr.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8*** %nextPtr.addr, metadata !1930, metadata !2293), !dbg !16363
  %0 = bitcast %struct.ENTITY** %entity to i8*, !dbg !16364
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !16364
  call void @llvm.dbg.declare(metadata %struct.ENTITY** %entity, metadata !1931, metadata !2293), !dbg !16365
  %1 = bitcast i8** %textStart to i8*, !dbg !16366
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !16366
  call void @llvm.dbg.declare(metadata i8** %textStart, metadata !1932, metadata !2293), !dbg !16367
  %2 = bitcast i8** %textEnd to i8*, !dbg !16366
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !16366
  call void @llvm.dbg.declare(metadata i8** %textEnd, metadata !1933, metadata !2293), !dbg !16368
  %3 = bitcast i8** %next to i8*, !dbg !16369
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !16369
  call void @llvm.dbg.declare(metadata i8** %next, metadata !1934, metadata !2293), !dbg !16370
  %4 = bitcast i32* %result to i8*, !dbg !16371
  call void @llvm.lifetime.start(i64 4, i8* %4) #2, !dbg !16371
  call void @llvm.dbg.declare(metadata i32* %result, metadata !1935, metadata !2293), !dbg !16372
  %5 = bitcast %struct.open_internal_entity** %openEntity to i8*, !dbg !16373
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !16373
  call void @llvm.dbg.declare(metadata %struct.open_internal_entity** %openEntity, metadata !1936, metadata !2293), !dbg !16374
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16375, !tbaa !2289
  %m_openInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 50, !dbg !16376
  %7 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities, align 8, !dbg !16376, !tbaa !2664
  store %struct.open_internal_entity* %7, %struct.open_internal_entity** %openEntity, align 8, !dbg !16374, !tbaa !2289
  %8 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !16377, !tbaa !2289
  %tobool = icmp ne %struct.open_internal_entity* %8, null, !dbg !16377
  br i1 %tobool, label %if.end, label %if.then, !dbg !16379

if.then:                                          ; preds = %entry
  store i32 23, i32* %retval, !dbg !16380
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !16380

if.end:                                           ; preds = %entry
  %9 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !16381, !tbaa !2289
  %entity1 = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %9, i32 0, i32 3, !dbg !16382
  %10 = load %struct.ENTITY*, %struct.ENTITY** %entity1, align 8, !dbg !16382, !tbaa !11484
  store %struct.ENTITY* %10, %struct.ENTITY** %entity, align 8, !dbg !16383, !tbaa !2289
  %11 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !16384, !tbaa !2289
  %textPtr = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %11, i32 0, i32 1, !dbg !16385
  %12 = load i8*, i8** %textPtr, align 8, !dbg !16385, !tbaa !7541
  %13 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !16386, !tbaa !2289
  %processed = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %13, i32 0, i32 3, !dbg !16387
  %14 = load i32, i32* %processed, align 4, !dbg !16387, !tbaa !11470
  %idx.ext = sext i32 %14 to i64, !dbg !16388
  %add.ptr = getelementptr i8, i8* %12, i64 %idx.ext, !dbg !16388
  store i8* %add.ptr, i8** %textStart, align 8, !dbg !16389, !tbaa !2289
  %15 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !16390, !tbaa !2289
  %textPtr2 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %15, i32 0, i32 1, !dbg !16391
  %16 = load i8*, i8** %textPtr2, align 8, !dbg !16391, !tbaa !7541
  %17 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !16392, !tbaa !2289
  %textLen = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %17, i32 0, i32 2, !dbg !16393
  %18 = load i32, i32* %textLen, align 4, !dbg !16393, !tbaa !7554
  %idx.ext3 = sext i32 %18 to i64, !dbg !16394
  %add.ptr4 = getelementptr i8, i8* %16, i64 %idx.ext3, !dbg !16394
  store i8* %add.ptr4, i8** %textEnd, align 8, !dbg !16395, !tbaa !2289
  %19 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !16396, !tbaa !2289
  %is_param = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %19, i32 0, i32 9, !dbg !16397
  %20 = load i8, i8* %is_param, align 1, !dbg !16397, !tbaa !7582
  %tobool5 = icmp ne i8 %20, 0, !dbg !16396
  br i1 %tobool5, label %if.then.6, label %if.else, !dbg !16398

if.then.6:                                        ; preds = %if.end
  %21 = bitcast i32* %tok to i8*, !dbg !16399
  call void @llvm.lifetime.start(i64 4, i8* %21) #2, !dbg !16399
  call void @llvm.dbg.declare(metadata i32* %tok, metadata !1937, metadata !2293), !dbg !16400
  %22 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16401, !tbaa !2289
  %m_internalEncoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %22, i32 0, i32 36, !dbg !16402
  %23 = load %struct.encoding*, %struct.encoding** %m_internalEncoding, align 8, !dbg !16402, !tbaa !2599
  %scanners = getelementptr inbounds %struct.encoding, %struct.encoding* %23, i32 0, i32 0, !dbg !16403
  %arrayidx = getelementptr [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners, i32 0, i64 0, !dbg !16404
  %24 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx, align 8, !dbg !16404, !tbaa !2289
  %25 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16405, !tbaa !2289
  %m_internalEncoding7 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %25, i32 0, i32 36, !dbg !16406
  %26 = load %struct.encoding*, %struct.encoding** %m_internalEncoding7, align 8, !dbg !16406, !tbaa !2599
  %27 = load i8*, i8** %textStart, align 8, !dbg !16407, !tbaa !2289
  %28 = load i8*, i8** %textEnd, align 8, !dbg !16408, !tbaa !2289
  %call = call i32 %24(%struct.encoding* %26, i8* %27, i8* %28, i8** %next), !dbg !16409
  store i32 %call, i32* %tok, align 4, !dbg !16400, !tbaa !3391
  %29 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16410, !tbaa !2289
  %30 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16411, !tbaa !2289
  %m_internalEncoding8 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %30, i32 0, i32 36, !dbg !16412
  %31 = load %struct.encoding*, %struct.encoding** %m_internalEncoding8, align 8, !dbg !16412, !tbaa !2599
  %32 = load i8*, i8** %textStart, align 8, !dbg !16413, !tbaa !2289
  %33 = load i8*, i8** %textEnd, align 8, !dbg !16414, !tbaa !2289
  %34 = load i32, i32* %tok, align 4, !dbg !16415, !tbaa !3391
  %35 = load i8*, i8** %next, align 8, !dbg !16416, !tbaa !2289
  %call9 = call i32 @doProlog(%struct.XML_ParserStruct* %29, %struct.encoding* %31, i8* %32, i8* %33, i32 %34, i8* %35, i8** %next, i8 zeroext 0), !dbg !16417
  store i32 %call9, i32* %result, align 4, !dbg !16418, !tbaa !2307
  %36 = bitcast i32* %tok to i8*, !dbg !16419
  call void @llvm.lifetime.end(i64 4, i8* %36) #2, !dbg !16419
  br label %if.end.12, !dbg !16420

if.else:                                          ; preds = %if.end
  %37 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16421, !tbaa !2289
  %38 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !16422, !tbaa !2289
  %startTagLevel = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %38, i32 0, i32 4, !dbg !16423
  %39 = load i32, i32* %startTagLevel, align 4, !dbg !16423, !tbaa !11490
  %40 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16424, !tbaa !2289
  %m_internalEncoding10 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %40, i32 0, i32 36, !dbg !16425
  %41 = load %struct.encoding*, %struct.encoding** %m_internalEncoding10, align 8, !dbg !16425, !tbaa !2599
  %42 = load i8*, i8** %textStart, align 8, !dbg !16426, !tbaa !2289
  %43 = load i8*, i8** %textEnd, align 8, !dbg !16427, !tbaa !2289
  %call11 = call i32 @doContent(%struct.XML_ParserStruct* %37, i32 %39, %struct.encoding* %41, i8* %42, i8* %43, i8** %next, i8 zeroext 0), !dbg !16428
  store i32 %call11, i32* %result, align 4, !dbg !16429, !tbaa !2307
  br label %if.end.12

if.end.12:                                        ; preds = %if.else, %if.then.6
  %44 = load i32, i32* %result, align 4, !dbg !16430, !tbaa !2307
  %cmp = icmp ne i32 %44, 0, !dbg !16432
  br i1 %cmp, label %if.then.13, label %if.else.14, !dbg !16433

if.then.13:                                       ; preds = %if.end.12
  %45 = load i32, i32* %result, align 4, !dbg !16434, !tbaa !2307
  store i32 %45, i32* %retval, !dbg !16435
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !16435

if.else.14:                                       ; preds = %if.end.12
  %46 = load i8*, i8** %textEnd, align 8, !dbg !16436, !tbaa !2289
  %47 = load i8*, i8** %next, align 8, !dbg !16438, !tbaa !2289
  %cmp15 = icmp ne i8* %46, %47, !dbg !16439
  br i1 %cmp15, label %land.lhs.true, label %if.else.20, !dbg !16440

land.lhs.true:                                    ; preds = %if.else.14
  %48 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16441, !tbaa !2289
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %48, i32 0, i32 85, !dbg !16443
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0, !dbg !16444
  %49 = load i32, i32* %parsing, align 4, !dbg !16444, !tbaa !3052
  %cmp16 = icmp eq i32 %49, 3, !dbg !16445
  br i1 %cmp16, label %if.then.17, label %if.else.20, !dbg !16446

if.then.17:                                       ; preds = %land.lhs.true
  %50 = load i8*, i8** %next, align 8, !dbg !16447, !tbaa !2289
  %51 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !16449, !tbaa !2289
  %textPtr18 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %51, i32 0, i32 1, !dbg !16450
  %52 = load i8*, i8** %textPtr18, align 8, !dbg !16450, !tbaa !7541
  %sub.ptr.lhs.cast = ptrtoint i8* %50 to i64, !dbg !16451
  %sub.ptr.rhs.cast = ptrtoint i8* %52 to i64, !dbg !16451
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !16451
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !16452
  %53 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !16453, !tbaa !2289
  %processed19 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %53, i32 0, i32 3, !dbg !16454
  store i32 %conv, i32* %processed19, align 4, !dbg !16455, !tbaa !11470
  %54 = load i32, i32* %result, align 4, !dbg !16456, !tbaa !2307
  store i32 %54, i32* %retval, !dbg !16457
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !16457

if.else.20:                                       ; preds = %land.lhs.true, %if.else.14
  %55 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !16458, !tbaa !2289
  %open = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %55, i32 0, i32 8, !dbg !16460
  store i8 0, i8* %open, align 1, !dbg !16461, !tbaa !4090
  %56 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !16462, !tbaa !2289
  %next21 = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %56, i32 0, i32 2, !dbg !16463
  %57 = load %struct.open_internal_entity*, %struct.open_internal_entity** %next21, align 8, !dbg !16463, !tbaa !2673
  %58 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16464, !tbaa !2289
  %m_openInternalEntities22 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %58, i32 0, i32 50, !dbg !16465
  store %struct.open_internal_entity* %57, %struct.open_internal_entity** %m_openInternalEntities22, align 8, !dbg !16466, !tbaa !2664
  %59 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16467, !tbaa !2289
  %m_freeInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %59, i32 0, i32 51, !dbg !16468
  %60 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_freeInternalEntities, align 8, !dbg !16468, !tbaa !2521
  %61 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !16469, !tbaa !2289
  %next23 = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %61, i32 0, i32 2, !dbg !16470
  store %struct.open_internal_entity* %60, %struct.open_internal_entity** %next23, align 8, !dbg !16471, !tbaa !2673
  %62 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !16472, !tbaa !2289
  %63 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16473, !tbaa !2289
  %m_freeInternalEntities24 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %63, i32 0, i32 51, !dbg !16474
  store %struct.open_internal_entity* %62, %struct.open_internal_entity** %m_freeInternalEntities24, align 8, !dbg !16475, !tbaa !2521
  br label %if.end.25

if.end.25:                                        ; preds = %if.else.20
  br label %if.end.26

if.end.26:                                        ; preds = %if.end.25
  %64 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !16476, !tbaa !2289
  %is_param27 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %64, i32 0, i32 9, !dbg !16477
  %65 = load i8, i8* %is_param27, align 1, !dbg !16477, !tbaa !7582
  %tobool28 = icmp ne i8 %65, 0, !dbg !16476
  br i1 %tobool28, label %if.then.29, label %if.else.40, !dbg !16478

if.then.29:                                       ; preds = %if.end.26
  %66 = bitcast i32* %tok30 to i8*, !dbg !16479
  call void @llvm.lifetime.start(i64 4, i8* %66) #2, !dbg !16479
  call void @llvm.dbg.declare(metadata i32* %tok30, metadata !1940, metadata !2293), !dbg !16480
  %67 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16481, !tbaa !2289
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %67, i32 0, i32 45, !dbg !16482
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @prologProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8, !dbg !16483, !tbaa !2809
  %68 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16484, !tbaa !2289
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %68, i32 0, i32 34, !dbg !16485
  %69 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !16485, !tbaa !5191
  %scanners31 = getelementptr inbounds %struct.encoding, %struct.encoding* %69, i32 0, i32 0, !dbg !16486
  %arrayidx32 = getelementptr [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners31, i32 0, i64 0, !dbg !16487
  %70 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx32, align 8, !dbg !16487, !tbaa !2289
  %71 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16488, !tbaa !2289
  %m_encoding33 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %71, i32 0, i32 34, !dbg !16489
  %72 = load %struct.encoding*, %struct.encoding** %m_encoding33, align 8, !dbg !16489, !tbaa !5191
  %73 = load i8*, i8** %s.addr, align 8, !dbg !16490, !tbaa !2289
  %74 = load i8*, i8** %end.addr, align 8, !dbg !16491, !tbaa !2289
  %call34 = call i32 %70(%struct.encoding* %72, i8* %73, i8* %74, i8** %next), !dbg !16492
  store i32 %call34, i32* %tok30, align 4, !dbg !16493, !tbaa !3391
  %75 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16494, !tbaa !2289
  %76 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16495, !tbaa !2289
  %m_encoding35 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %76, i32 0, i32 34, !dbg !16496
  %77 = load %struct.encoding*, %struct.encoding** %m_encoding35, align 8, !dbg !16496, !tbaa !5191
  %78 = load i8*, i8** %s.addr, align 8, !dbg !16497, !tbaa !2289
  %79 = load i8*, i8** %end.addr, align 8, !dbg !16498, !tbaa !2289
  %80 = load i32, i32* %tok30, align 4, !dbg !16499, !tbaa !3391
  %81 = load i8*, i8** %next, align 8, !dbg !16500, !tbaa !2289
  %82 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !16501, !tbaa !2289
  %83 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16502, !tbaa !2289
  %m_parsingStatus36 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %83, i32 0, i32 85, !dbg !16503
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus36, i32 0, i32 1, !dbg !16504
  %84 = load i8, i8* %finalBuffer, align 1, !dbg !16504, !tbaa !5150
  %tobool37 = icmp ne i8 %84, 0, !dbg !16505
  %lnot = xor i1 %tobool37, true, !dbg !16505
  %lnot.ext = zext i1 %lnot to i32, !dbg !16505
  %conv38 = trunc i32 %lnot.ext to i8, !dbg !16506
  %call39 = call i32 @doProlog(%struct.XML_ParserStruct* %75, %struct.encoding* %77, i8* %78, i8* %79, i32 %80, i8* %81, i8** %82, i8 zeroext %conv38), !dbg !16507
  store i32 %call39, i32* %retval, !dbg !16508
  store i32 1, i32* %cleanup.dest.slot
  %85 = bitcast i32* %tok30 to i8*, !dbg !16509
  call void @llvm.lifetime.end(i64 4, i8* %85) #2, !dbg !16509
  br label %cleanup

if.else.40:                                       ; preds = %if.end.26
  %86 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16510, !tbaa !2289
  %m_processor41 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %86, i32 0, i32 45, !dbg !16512
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @contentProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor41, align 8, !dbg !16513, !tbaa !2809
  %87 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16514, !tbaa !2289
  %88 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16515, !tbaa !2289
  %m_parentParser = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %88, i32 0, i32 84, !dbg !16516
  %89 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %m_parentParser, align 8, !dbg !16516, !tbaa !2623
  %tobool42 = icmp ne %struct.XML_ParserStruct* %89, null, !dbg !16517
  %cond = select i1 %tobool42, i32 1, i32 0, !dbg !16517
  %90 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16518, !tbaa !2289
  %m_encoding43 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %90, i32 0, i32 34, !dbg !16519
  %91 = load %struct.encoding*, %struct.encoding** %m_encoding43, align 8, !dbg !16519, !tbaa !5191
  %92 = load i8*, i8** %s.addr, align 8, !dbg !16520, !tbaa !2289
  %93 = load i8*, i8** %end.addr, align 8, !dbg !16521, !tbaa !2289
  %94 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !16522, !tbaa !2289
  %95 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16523, !tbaa !2289
  %m_parsingStatus44 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %95, i32 0, i32 85, !dbg !16524
  %finalBuffer45 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus44, i32 0, i32 1, !dbg !16525
  %96 = load i8, i8* %finalBuffer45, align 1, !dbg !16525, !tbaa !5150
  %tobool46 = icmp ne i8 %96, 0, !dbg !16526
  %lnot47 = xor i1 %tobool46, true, !dbg !16526
  %lnot.ext48 = zext i1 %lnot47 to i32, !dbg !16526
  %conv49 = trunc i32 %lnot.ext48 to i8, !dbg !16527
  %call50 = call i32 @doContent(%struct.XML_ParserStruct* %87, i32 %cond, %struct.encoding* %91, i8* %92, i8* %93, i8** %94, i8 zeroext %conv49), !dbg !16528
  store i32 %call50, i32* %retval, !dbg !16529
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !16529

cleanup:                                          ; preds = %if.else.40, %if.then.29, %if.then.17, %if.then.13, %if.then
  %97 = bitcast %struct.open_internal_entity** %openEntity to i8*, !dbg !16530
  call void @llvm.lifetime.end(i64 8, i8* %97) #2, !dbg !16530
  %98 = bitcast i32* %result to i8*, !dbg !16530
  call void @llvm.lifetime.end(i64 4, i8* %98) #2, !dbg !16530
  %99 = bitcast i8** %next to i8*, !dbg !16530
  call void @llvm.lifetime.end(i64 8, i8* %99) #2, !dbg !16530
  %100 = bitcast i8** %textEnd to i8*, !dbg !16530
  call void @llvm.lifetime.end(i64 8, i8* %100) #2, !dbg !16530
  %101 = bitcast i8** %textStart to i8*, !dbg !16530
  call void @llvm.lifetime.end(i64 8, i8* %101) #2, !dbg !16530
  %102 = bitcast %struct.ENTITY** %entity to i8*, !dbg !16530
  call void @llvm.lifetime.end(i64 8, i8* %102) #2, !dbg !16530
  %103 = load i32, i32* %retval, !dbg !16530
  ret i32 %103, !dbg !16530
}

; Function Attrs: nounwind uwtable
define internal void @build_node(%struct.XML_ParserStruct* %parser, i32 %src_node, %struct.XML_cp* %dest, %struct.XML_cp** %contpos, i8** %strpos) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %src_node.addr = alloca i32, align 4
  %dest.addr = alloca %struct.XML_cp*, align 8
  %contpos.addr = alloca %struct.XML_cp**, align 8
  %strpos.addr = alloca i8**, align 8
  %dtd = alloca %struct.DTD*, align 8
  %src = alloca i8*, align 8
  %i = alloca i32, align 4
  %cn = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1959, metadata !2293), !dbg !16531
  store i32 %src_node, i32* %src_node.addr, align 4, !tbaa !3391
  call void @llvm.dbg.declare(metadata i32* %src_node.addr, metadata !1960, metadata !2293), !dbg !16532
  store %struct.XML_cp* %dest, %struct.XML_cp** %dest.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_cp** %dest.addr, metadata !1961, metadata !2293), !dbg !16533
  store %struct.XML_cp** %contpos, %struct.XML_cp*** %contpos.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_cp*** %contpos.addr, metadata !1962, metadata !2293), !dbg !16534
  store i8** %strpos, i8*** %strpos.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8*** %strpos.addr, metadata !1963, metadata !2293), !dbg !16535
  %0 = bitcast %struct.DTD** %dtd to i8*, !dbg !16536
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !16536
  call void @llvm.dbg.declare(metadata %struct.DTD** %dtd, metadata !1964, metadata !2293), !dbg !16537
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16538, !tbaa !2289
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 65, !dbg !16539
  %2 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !16539, !tbaa !2478
  store %struct.DTD* %2, %struct.DTD** %dtd, align 8, !dbg !16537, !tbaa !2289
  %3 = load i32, i32* %src_node.addr, align 4, !dbg !16540, !tbaa !3391
  %idxprom = sext i32 %3 to i64, !dbg !16541
  %4 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !16541, !tbaa !2289
  %scaffold = getelementptr inbounds %struct.DTD, %struct.DTD* %4, i32 0, i32 13, !dbg !16542
  %5 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold, align 8, !dbg !16542, !tbaa !3156
  %arrayidx = getelementptr %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %5, i64 %idxprom, !dbg !16541
  %type = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx, i32 0, i32 0, !dbg !16543
  %6 = load i32, i32* %type, align 4, !dbg !16543, !tbaa !8449
  %7 = load %struct.XML_cp*, %struct.XML_cp** %dest.addr, align 8, !dbg !16544, !tbaa !2289
  %type1 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %7, i32 0, i32 0, !dbg !16545
  store i32 %6, i32* %type1, align 4, !dbg !16546, !tbaa !8824
  %8 = load i32, i32* %src_node.addr, align 4, !dbg !16547, !tbaa !3391
  %idxprom2 = sext i32 %8 to i64, !dbg !16548
  %9 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !16548, !tbaa !2289
  %scaffold3 = getelementptr inbounds %struct.DTD, %struct.DTD* %9, i32 0, i32 13, !dbg !16549
  %10 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold3, align 8, !dbg !16549, !tbaa !3156
  %arrayidx4 = getelementptr %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %10, i64 %idxprom2, !dbg !16548
  %quant = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx4, i32 0, i32 1, !dbg !16550
  %11 = load i32, i32* %quant, align 4, !dbg !16550, !tbaa !8919
  %12 = load %struct.XML_cp*, %struct.XML_cp** %dest.addr, align 8, !dbg !16551, !tbaa !2289
  %quant5 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %12, i32 0, i32 1, !dbg !16552
  store i32 %11, i32* %quant5, align 4, !dbg !16553, !tbaa !8804
  %13 = load %struct.XML_cp*, %struct.XML_cp** %dest.addr, align 8, !dbg !16554, !tbaa !2289
  %type6 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %13, i32 0, i32 0, !dbg !16555
  %14 = load i32, i32* %type6, align 4, !dbg !16555, !tbaa !8824
  %cmp = icmp eq i32 %14, 4, !dbg !16556
  br i1 %cmp, label %if.then, label %if.else, !dbg !16557

if.then:                                          ; preds = %entry
  %15 = bitcast i8** %src to i8*, !dbg !16558
  call void @llvm.lifetime.start(i64 8, i8* %15) #2, !dbg !16558
  call void @llvm.dbg.declare(metadata i8** %src, metadata !1965, metadata !2293), !dbg !16559
  %16 = load i8**, i8*** %strpos.addr, align 8, !dbg !16560, !tbaa !2289
  %17 = load i8*, i8** %16, align 8, !dbg !16561, !tbaa !2289
  %18 = load %struct.XML_cp*, %struct.XML_cp** %dest.addr, align 8, !dbg !16562, !tbaa !2289
  %name = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %18, i32 0, i32 2, !dbg !16563
  store i8* %17, i8** %name, align 8, !dbg !16564, !tbaa !8809
  %19 = load i32, i32* %src_node.addr, align 4, !dbg !16565, !tbaa !3391
  %idxprom7 = sext i32 %19 to i64, !dbg !16566
  %20 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !16566, !tbaa !2289
  %scaffold8 = getelementptr inbounds %struct.DTD, %struct.DTD* %20, i32 0, i32 13, !dbg !16567
  %21 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold8, align 8, !dbg !16567, !tbaa !3156
  %arrayidx9 = getelementptr %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %21, i64 %idxprom7, !dbg !16566
  %name10 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx9, i32 0, i32 2, !dbg !16568
  %22 = load i8*, i8** %name10, align 8, !dbg !16568, !tbaa !8939
  store i8* %22, i8** %src, align 8, !dbg !16569, !tbaa !2289
  br label %for.cond, !dbg !16570

for.cond:                                         ; preds = %if.end, %if.then
  %23 = load i8*, i8** %src, align 8, !dbg !16571, !tbaa !2289
  %24 = load i8, i8* %23, align 1, !dbg !16575, !tbaa !2307
  %25 = load i8**, i8*** %strpos.addr, align 8, !dbg !16576, !tbaa !2289
  %26 = load i8*, i8** %25, align 8, !dbg !16577, !tbaa !2289
  %incdec.ptr = getelementptr i8, i8* %26, i32 1, !dbg !16577
  store i8* %incdec.ptr, i8** %25, align 8, !dbg !16577, !tbaa !2289
  store i8 %24, i8* %26, align 1, !dbg !16578, !tbaa !2307
  %27 = load i8*, i8** %src, align 8, !dbg !16579, !tbaa !2289
  %28 = load i8, i8* %27, align 1, !dbg !16581, !tbaa !2307
  %tobool = icmp ne i8 %28, 0, !dbg !16581
  br i1 %tobool, label %if.end, label %if.then.11, !dbg !16582

if.then.11:                                       ; preds = %for.cond
  br label %for.end, !dbg !16583

if.end:                                           ; preds = %for.cond
  %29 = load i8*, i8** %src, align 8, !dbg !16584, !tbaa !2289
  %incdec.ptr12 = getelementptr i8, i8* %29, i32 1, !dbg !16584
  store i8* %incdec.ptr12, i8** %src, align 8, !dbg !16584, !tbaa !2289
  br label %for.cond, !dbg !16585

for.end:                                          ; preds = %if.then.11
  %30 = load %struct.XML_cp*, %struct.XML_cp** %dest.addr, align 8, !dbg !16586, !tbaa !2289
  %numchildren = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %30, i32 0, i32 3, !dbg !16587
  store i32 0, i32* %numchildren, align 4, !dbg !16588, !tbaa !8813
  %31 = load %struct.XML_cp*, %struct.XML_cp** %dest.addr, align 8, !dbg !16589, !tbaa !2289
  %children = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %31, i32 0, i32 4, !dbg !16590
  store %struct.XML_cp* null, %struct.XML_cp** %children, align 8, !dbg !16591, !tbaa !8817
  %32 = bitcast i8** %src to i8*, !dbg !16592
  call void @llvm.lifetime.end(i64 8, i8* %32) #2, !dbg !16592
  br label %if.end.33, !dbg !16593

if.else:                                          ; preds = %entry
  %33 = bitcast i32* %i to i8*, !dbg !16594
  call void @llvm.lifetime.start(i64 4, i8* %33) #2, !dbg !16594
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1968, metadata !2293), !dbg !16595
  %34 = bitcast i32* %cn to i8*, !dbg !16596
  call void @llvm.lifetime.start(i64 4, i8* %34) #2, !dbg !16596
  call void @llvm.dbg.declare(metadata i32* %cn, metadata !1970, metadata !2293), !dbg !16597
  %35 = load i32, i32* %src_node.addr, align 4, !dbg !16598, !tbaa !3391
  %idxprom13 = sext i32 %35 to i64, !dbg !16599
  %36 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !16599, !tbaa !2289
  %scaffold14 = getelementptr inbounds %struct.DTD, %struct.DTD* %36, i32 0, i32 13, !dbg !16600
  %37 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold14, align 8, !dbg !16600, !tbaa !3156
  %arrayidx15 = getelementptr %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %37, i64 %idxprom13, !dbg !16599
  %childcnt = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx15, i32 0, i32 5, !dbg !16601
  %38 = load i32, i32* %childcnt, align 4, !dbg !16601, !tbaa !11396
  %39 = load %struct.XML_cp*, %struct.XML_cp** %dest.addr, align 8, !dbg !16602, !tbaa !2289
  %numchildren16 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %39, i32 0, i32 3, !dbg !16603
  store i32 %38, i32* %numchildren16, align 4, !dbg !16604, !tbaa !8813
  %40 = load %struct.XML_cp**, %struct.XML_cp*** %contpos.addr, align 8, !dbg !16605, !tbaa !2289
  %41 = load %struct.XML_cp*, %struct.XML_cp** %40, align 8, !dbg !16606, !tbaa !2289
  %42 = load %struct.XML_cp*, %struct.XML_cp** %dest.addr, align 8, !dbg !16607, !tbaa !2289
  %children17 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %42, i32 0, i32 4, !dbg !16608
  store %struct.XML_cp* %41, %struct.XML_cp** %children17, align 8, !dbg !16609, !tbaa !8817
  %43 = load %struct.XML_cp*, %struct.XML_cp** %dest.addr, align 8, !dbg !16610, !tbaa !2289
  %numchildren18 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %43, i32 0, i32 3, !dbg !16611
  %44 = load i32, i32* %numchildren18, align 4, !dbg !16611, !tbaa !8813
  %45 = load %struct.XML_cp**, %struct.XML_cp*** %contpos.addr, align 8, !dbg !16612, !tbaa !2289
  %46 = load %struct.XML_cp*, %struct.XML_cp** %45, align 8, !dbg !16613, !tbaa !2289
  %idx.ext = zext i32 %44 to i64, !dbg !16613
  %add.ptr = getelementptr %struct.XML_cp, %struct.XML_cp* %46, i64 %idx.ext, !dbg !16613
  store %struct.XML_cp* %add.ptr, %struct.XML_cp** %45, align 8, !dbg !16613, !tbaa !2289
  store i32 0, i32* %i, align 4, !dbg !16614, !tbaa !3391
  %47 = load i32, i32* %src_node.addr, align 4, !dbg !16616, !tbaa !3391
  %idxprom19 = sext i32 %47 to i64, !dbg !16617
  %48 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !16617, !tbaa !2289
  %scaffold20 = getelementptr inbounds %struct.DTD, %struct.DTD* %48, i32 0, i32 13, !dbg !16618
  %49 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold20, align 8, !dbg !16618, !tbaa !3156
  %arrayidx21 = getelementptr %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %49, i64 %idxprom19, !dbg !16617
  %firstchild = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx21, i32 0, i32 3, !dbg !16619
  %50 = load i32, i32* %firstchild, align 4, !dbg !16619, !tbaa !11402
  store i32 %50, i32* %cn, align 4, !dbg !16620, !tbaa !3391
  br label %for.cond.22, !dbg !16621

for.cond.22:                                      ; preds = %for.inc, %if.else
  %51 = load i32, i32* %i, align 4, !dbg !16622, !tbaa !3391
  %52 = load %struct.XML_cp*, %struct.XML_cp** %dest.addr, align 8, !dbg !16624, !tbaa !2289
  %numchildren23 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %52, i32 0, i32 3, !dbg !16625
  %53 = load i32, i32* %numchildren23, align 4, !dbg !16625, !tbaa !8813
  %cmp24 = icmp ult i32 %51, %53, !dbg !16626
  br i1 %cmp24, label %for.body, label %for.end.31, !dbg !16627

for.body:                                         ; preds = %for.cond.22
  %54 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16628, !tbaa !2289
  %55 = load i32, i32* %cn, align 4, !dbg !16630, !tbaa !3391
  %56 = load i32, i32* %i, align 4, !dbg !16631, !tbaa !3391
  %idxprom25 = zext i32 %56 to i64, !dbg !16632
  %57 = load %struct.XML_cp*, %struct.XML_cp** %dest.addr, align 8, !dbg !16632, !tbaa !2289
  %children26 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %57, i32 0, i32 4, !dbg !16633
  %58 = load %struct.XML_cp*, %struct.XML_cp** %children26, align 8, !dbg !16633, !tbaa !8817
  %arrayidx27 = getelementptr %struct.XML_cp, %struct.XML_cp* %58, i64 %idxprom25, !dbg !16632
  %59 = load %struct.XML_cp**, %struct.XML_cp*** %contpos.addr, align 8, !dbg !16634, !tbaa !2289
  %60 = load i8**, i8*** %strpos.addr, align 8, !dbg !16635, !tbaa !2289
  call void @build_node(%struct.XML_ParserStruct* %54, i32 %55, %struct.XML_cp* %arrayidx27, %struct.XML_cp** %59, i8** %60), !dbg !16636
  br label %for.inc, !dbg !16637

for.inc:                                          ; preds = %for.body
  %61 = load i32, i32* %i, align 4, !dbg !16638, !tbaa !3391
  %inc = add i32 %61, 1, !dbg !16638
  store i32 %inc, i32* %i, align 4, !dbg !16638, !tbaa !3391
  %62 = load i32, i32* %cn, align 4, !dbg !16639, !tbaa !3391
  %idxprom28 = sext i32 %62 to i64, !dbg !16640
  %63 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !16640, !tbaa !2289
  %scaffold29 = getelementptr inbounds %struct.DTD, %struct.DTD* %63, i32 0, i32 13, !dbg !16641
  %64 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold29, align 8, !dbg !16641, !tbaa !3156
  %arrayidx30 = getelementptr %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %64, i64 %idxprom28, !dbg !16640
  %nextsib = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx30, i32 0, i32 6, !dbg !16642
  %65 = load i32, i32* %nextsib, align 4, !dbg !16642, !tbaa !11391
  store i32 %65, i32* %cn, align 4, !dbg !16643, !tbaa !3391
  br label %for.cond.22, !dbg !16644

for.end.31:                                       ; preds = %for.cond.22
  %66 = load %struct.XML_cp*, %struct.XML_cp** %dest.addr, align 8, !dbg !16645, !tbaa !2289
  %name32 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %66, i32 0, i32 2, !dbg !16646
  store i8* null, i8** %name32, align 8, !dbg !16647, !tbaa !8809
  %67 = bitcast i32* %cn to i8*, !dbg !16648
  call void @llvm.lifetime.end(i64 4, i8* %67) #2, !dbg !16648
  %68 = bitcast i32* %i to i8*, !dbg !16648
  call void @llvm.lifetime.end(i64 4, i8* %68) #2, !dbg !16648
  br label %if.end.33

if.end.33:                                        ; preds = %for.end.31, %for.end
  %69 = bitcast %struct.DTD** %dtd to i8*, !dbg !16649
  call void @llvm.lifetime.end(i64 8, i8* %69) #2, !dbg !16649
  ret void, !dbg !16649
}

; Function Attrs: nounwind uwtable
define internal void @normalizeLines(i8* %s) #0 {
entry:
  %s.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store i8* %s, i8** %s.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !1984, metadata !2293), !dbg !16650
  %0 = bitcast i8** %p to i8*, !dbg !16651
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !16651
  call void @llvm.dbg.declare(metadata i8** %p, metadata !1985, metadata !2293), !dbg !16652
  br label %for.cond, !dbg !16653

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8*, i8** %s.addr, align 8, !dbg !16654, !tbaa !2289
  %2 = load i8, i8* %1, align 1, !dbg !16659, !tbaa !2307
  %conv = sext i8 %2 to i32, !dbg !16659
  %cmp = icmp eq i32 %conv, 0, !dbg !16660
  br i1 %cmp, label %if.then, label %if.end, !dbg !16661

if.then:                                          ; preds = %for.cond
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !16662

if.end:                                           ; preds = %for.cond
  %3 = load i8*, i8** %s.addr, align 8, !dbg !16663, !tbaa !2289
  %4 = load i8, i8* %3, align 1, !dbg !16665, !tbaa !2307
  %conv2 = sext i8 %4 to i32, !dbg !16665
  %cmp3 = icmp eq i32 %conv2, 13, !dbg !16666
  br i1 %cmp3, label %if.then.5, label %if.end.6, !dbg !16667

if.then.5:                                        ; preds = %if.end
  br label %for.end, !dbg !16668

if.end.6:                                         ; preds = %if.end
  br label %for.inc, !dbg !16669

for.inc:                                          ; preds = %if.end.6
  %5 = load i8*, i8** %s.addr, align 8, !dbg !16670, !tbaa !2289
  %incdec.ptr = getelementptr i8, i8* %5, i32 1, !dbg !16670
  store i8* %incdec.ptr, i8** %s.addr, align 8, !dbg !16670, !tbaa !2289
  br label %for.cond, !dbg !16671

for.end:                                          ; preds = %if.then.5
  %6 = load i8*, i8** %s.addr, align 8, !dbg !16672, !tbaa !2289
  store i8* %6, i8** %p, align 8, !dbg !16673, !tbaa !2289
  br label %do.body, !dbg !16674

do.body:                                          ; preds = %do.cond, %for.end
  %7 = load i8*, i8** %s.addr, align 8, !dbg !16675, !tbaa !2289
  %8 = load i8, i8* %7, align 1, !dbg !16678, !tbaa !2307
  %conv7 = sext i8 %8 to i32, !dbg !16678
  %cmp8 = icmp eq i32 %conv7, 13, !dbg !16679
  br i1 %cmp8, label %if.then.10, label %if.else, !dbg !16680

if.then.10:                                       ; preds = %do.body
  %9 = load i8*, i8** %p, align 8, !dbg !16681, !tbaa !2289
  %incdec.ptr11 = getelementptr i8, i8* %9, i32 1, !dbg !16681
  store i8* %incdec.ptr11, i8** %p, align 8, !dbg !16681, !tbaa !2289
  store i8 10, i8* %9, align 1, !dbg !16683, !tbaa !2307
  %10 = load i8*, i8** %s.addr, align 8, !dbg !16684, !tbaa !2289
  %incdec.ptr12 = getelementptr i8, i8* %10, i32 1, !dbg !16684
  store i8* %incdec.ptr12, i8** %s.addr, align 8, !dbg !16684, !tbaa !2289
  %11 = load i8, i8* %incdec.ptr12, align 1, !dbg !16686, !tbaa !2307
  %conv13 = sext i8 %11 to i32, !dbg !16686
  %cmp14 = icmp eq i32 %conv13, 10, !dbg !16687
  br i1 %cmp14, label %if.then.16, label %if.end.18, !dbg !16688

if.then.16:                                       ; preds = %if.then.10
  %12 = load i8*, i8** %s.addr, align 8, !dbg !16689, !tbaa !2289
  %incdec.ptr17 = getelementptr i8, i8* %12, i32 1, !dbg !16689
  store i8* %incdec.ptr17, i8** %s.addr, align 8, !dbg !16689, !tbaa !2289
  br label %if.end.18, !dbg !16690

if.end.18:                                        ; preds = %if.then.16, %if.then.10
  br label %if.end.21, !dbg !16691

if.else:                                          ; preds = %do.body
  %13 = load i8*, i8** %s.addr, align 8, !dbg !16692, !tbaa !2289
  %incdec.ptr19 = getelementptr i8, i8* %13, i32 1, !dbg !16692
  store i8* %incdec.ptr19, i8** %s.addr, align 8, !dbg !16692, !tbaa !2289
  %14 = load i8, i8* %13, align 1, !dbg !16693, !tbaa !2307
  %15 = load i8*, i8** %p, align 8, !dbg !16694, !tbaa !2289
  %incdec.ptr20 = getelementptr i8, i8* %15, i32 1, !dbg !16694
  store i8* %incdec.ptr20, i8** %p, align 8, !dbg !16694, !tbaa !2289
  store i8 %14, i8* %15, align 1, !dbg !16695, !tbaa !2307
  br label %if.end.21

if.end.21:                                        ; preds = %if.else, %if.end.18
  br label %do.cond, !dbg !16696

do.cond:                                          ; preds = %if.end.21
  %16 = load i8*, i8** %s.addr, align 8, !dbg !16697, !tbaa !2289
  %17 = load i8, i8* %16, align 1, !dbg !16699, !tbaa !2307
  %tobool = icmp ne i8 %17, 0, !dbg !16696
  br i1 %tobool, label %do.body, label %do.end, !dbg !16696

do.end:                                           ; preds = %do.cond
  %18 = load i8*, i8** %p, align 8, !dbg !16700, !tbaa !2289
  store i8 0, i8* %18, align 1, !dbg !16701, !tbaa !2307
  store i32 0, i32* %cleanup.dest.slot, !dbg !16702
  br label %cleanup, !dbg !16702

cleanup:                                          ; preds = %do.end, %if.then
  %19 = bitcast i8** %p to i8*, !dbg !16703
  call void @llvm.lifetime.end(i64 8, i8* %19) #2, !dbg !16703
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !16702

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i64 @generate_hash_secret_salt() #0 {
entry:
  %seed = alloca i32, align 4
  %0 = bitcast i32* %seed to i8*, !dbg !16704
  call void @llvm.lifetime.start(i64 4, i8* %0) #2, !dbg !16704
  call void @llvm.dbg.declare(metadata i32* %seed, metadata !2010, metadata !2293), !dbg !16705
  %call = call i64 @time(i64* null) #2, !dbg !16706
  %rem = srem i64 %call, 4294967295, !dbg !16707
  %conv = trunc i64 %rem to i32, !dbg !16706
  store i32 %conv, i32* %seed, align 4, !dbg !16705, !tbaa !3391
  %1 = load i32, i32* %seed, align 4, !dbg !16708, !tbaa !3391
  call void @srand(i32 %1) #2, !dbg !16709
  %call1 = call i32 @rand() #2, !dbg !16710
  %conv2 = sext i32 %call1 to i64, !dbg !16710
  %2 = bitcast i32* %seed to i8*, !dbg !16711
  call void @llvm.lifetime.end(i64 4, i8* %2) #2, !dbg !16711
  ret i64 %conv2, !dbg !16712
}

; Function Attrs: nounwind
declare i64 @time(i64*) #4

; Function Attrs: nounwind
declare void @srand(i32) #4

; Function Attrs: nounwind
declare i32 @rand() #4

; Function Attrs: nounwind uwtable
define internal i32 @externalEntityInitProcessor2(%struct.XML_ParserStruct* %parser, i8* %start, i8* %end, i8** %endPtr) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %endPtr.addr = alloca i8**, align 8
  %next = alloca i8*, align 8
  %tok = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !2020, metadata !2293), !dbg !16713
  store i8* %start, i8** %start.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %start.addr, metadata !2021, metadata !2293), !dbg !16714
  store i8* %end, i8** %end.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !2022, metadata !2293), !dbg !16715
  store i8** %endPtr, i8*** %endPtr.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8*** %endPtr.addr, metadata !2023, metadata !2293), !dbg !16716
  %0 = bitcast i8** %next to i8*, !dbg !16717
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !16717
  call void @llvm.dbg.declare(metadata i8** %next, metadata !2024, metadata !2293), !dbg !16718
  %1 = load i8*, i8** %start.addr, align 8, !dbg !16719, !tbaa !2289
  store i8* %1, i8** %next, align 8, !dbg !16718, !tbaa !2289
  %2 = bitcast i32* %tok to i8*, !dbg !16720
  call void @llvm.lifetime.start(i64 4, i8* %2) #2, !dbg !16720
  call void @llvm.dbg.declare(metadata i32* %tok, metadata !2025, metadata !2293), !dbg !16721
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16722, !tbaa !2289
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 34, !dbg !16723
  %4 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !16723, !tbaa !5191
  %scanners = getelementptr inbounds %struct.encoding, %struct.encoding* %4, i32 0, i32 0, !dbg !16724
  %arrayidx = getelementptr [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners, i32 0, i64 1, !dbg !16725
  %5 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx, align 8, !dbg !16725, !tbaa !2289
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16726, !tbaa !2289
  %m_encoding1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 34, !dbg !16727
  %7 = load %struct.encoding*, %struct.encoding** %m_encoding1, align 8, !dbg !16727, !tbaa !5191
  %8 = load i8*, i8** %start.addr, align 8, !dbg !16728, !tbaa !2289
  %9 = load i8*, i8** %end.addr, align 8, !dbg !16729, !tbaa !2289
  %call = call i32 %5(%struct.encoding* %7, i8* %8, i8* %9, i8** %next), !dbg !16730
  store i32 %call, i32* %tok, align 4, !dbg !16721, !tbaa !3391
  %10 = load i32, i32* %tok, align 4, !dbg !16731, !tbaa !3391
  switch i32 %10, label %sw.epilog [
    i32 14, label %sw.bb
    i32 -1, label %sw.bb.2
    i32 -2, label %sw.bb.8
  ], !dbg !16732

sw.bb:                                            ; preds = %entry
  %11 = load i8*, i8** %next, align 8, !dbg !16733, !tbaa !2289
  %12 = load i8*, i8** %end.addr, align 8, !dbg !16736, !tbaa !2289
  %cmp = icmp eq i8* %11, %12, !dbg !16737
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !16738

land.lhs.true:                                    ; preds = %sw.bb
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16739, !tbaa !2289
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 85, !dbg !16741
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 1, !dbg !16742
  %14 = load i8, i8* %finalBuffer, align 1, !dbg !16742, !tbaa !5150
  %tobool = icmp ne i8 %14, 0, !dbg !16743
  br i1 %tobool, label %if.end, label %if.then, !dbg !16744

if.then:                                          ; preds = %land.lhs.true
  %15 = load i8*, i8** %next, align 8, !dbg !16745, !tbaa !2289
  %16 = load i8**, i8*** %endPtr.addr, align 8, !dbg !16747, !tbaa !2289
  store i8* %15, i8** %16, align 8, !dbg !16748, !tbaa !2289
  store i32 0, i32* %retval, !dbg !16749
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !16749

if.end:                                           ; preds = %land.lhs.true, %sw.bb
  %17 = load i8*, i8** %next, align 8, !dbg !16750, !tbaa !2289
  store i8* %17, i8** %start.addr, align 8, !dbg !16751, !tbaa !2289
  br label %sw.epilog, !dbg !16752

sw.bb.2:                                          ; preds = %entry
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16753, !tbaa !2289
  %m_parsingStatus3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 85, !dbg !16755
  %finalBuffer4 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus3, i32 0, i32 1, !dbg !16756
  %19 = load i8, i8* %finalBuffer4, align 1, !dbg !16756, !tbaa !5150
  %tobool5 = icmp ne i8 %19, 0, !dbg !16757
  br i1 %tobool5, label %if.end.7, label %if.then.6, !dbg !16758

if.then.6:                                        ; preds = %sw.bb.2
  %20 = load i8*, i8** %start.addr, align 8, !dbg !16759, !tbaa !2289
  %21 = load i8**, i8*** %endPtr.addr, align 8, !dbg !16761, !tbaa !2289
  store i8* %20, i8** %21, align 8, !dbg !16762, !tbaa !2289
  store i32 0, i32* %retval, !dbg !16763
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !16763

if.end.7:                                         ; preds = %sw.bb.2
  %22 = load i8*, i8** %start.addr, align 8, !dbg !16764, !tbaa !2289
  %23 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16765, !tbaa !2289
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %23, i32 0, i32 47, !dbg !16766
  store i8* %22, i8** %m_eventPtr, align 8, !dbg !16767, !tbaa !3006
  store i32 5, i32* %retval, !dbg !16768
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !16768

sw.bb.8:                                          ; preds = %entry
  %24 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16769, !tbaa !2289
  %m_parsingStatus9 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %24, i32 0, i32 85, !dbg !16771
  %finalBuffer10 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus9, i32 0, i32 1, !dbg !16772
  %25 = load i8, i8* %finalBuffer10, align 1, !dbg !16772, !tbaa !5150
  %tobool11 = icmp ne i8 %25, 0, !dbg !16773
  br i1 %tobool11, label %if.end.13, label %if.then.12, !dbg !16774

if.then.12:                                       ; preds = %sw.bb.8
  %26 = load i8*, i8** %start.addr, align 8, !dbg !16775, !tbaa !2289
  %27 = load i8**, i8*** %endPtr.addr, align 8, !dbg !16777, !tbaa !2289
  store i8* %26, i8** %27, align 8, !dbg !16778, !tbaa !2289
  store i32 0, i32* %retval, !dbg !16779
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !16779

if.end.13:                                        ; preds = %sw.bb.8
  %28 = load i8*, i8** %start.addr, align 8, !dbg !16780, !tbaa !2289
  %29 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16781, !tbaa !2289
  %m_eventPtr14 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %29, i32 0, i32 47, !dbg !16782
  store i8* %28, i8** %m_eventPtr14, align 8, !dbg !16783, !tbaa !3006
  store i32 6, i32* %retval, !dbg !16784
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !16784

sw.epilog:                                        ; preds = %entry, %if.end
  %30 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16785, !tbaa !2289
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %30, i32 0, i32 45, !dbg !16786
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @externalEntityInitProcessor3, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8, !dbg !16787, !tbaa !2809
  %31 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16788, !tbaa !2289
  %32 = load i8*, i8** %start.addr, align 8, !dbg !16789, !tbaa !2289
  %33 = load i8*, i8** %end.addr, align 8, !dbg !16790, !tbaa !2289
  %34 = load i8**, i8*** %endPtr.addr, align 8, !dbg !16791, !tbaa !2289
  %call15 = call i32 @externalEntityInitProcessor3(%struct.XML_ParserStruct* %31, i8* %32, i8* %33, i8** %34), !dbg !16792
  store i32 %call15, i32* %retval, !dbg !16793
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !16793

cleanup:                                          ; preds = %sw.epilog, %if.end.13, %if.then.12, %if.end.7, %if.then.6, %if.then
  %35 = bitcast i32* %tok to i8*, !dbg !16794
  call void @llvm.lifetime.end(i64 4, i8* %35) #2, !dbg !16794
  %36 = bitcast i8** %next to i8*, !dbg !16794
  call void @llvm.lifetime.end(i64 8, i8* %36) #2, !dbg !16794
  %37 = load i32, i32* %retval, !dbg !16794
  ret i32 %37, !dbg !16794
}

; Function Attrs: nounwind uwtable
define internal i32 @externalEntityInitProcessor3(%struct.XML_ParserStruct* %parser, i8* %start, i8* %end, i8** %endPtr) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %endPtr.addr = alloca i8**, align 8
  %tok = alloca i32, align 4
  %next = alloca i8*, align 8
  %result = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !2028, metadata !2293), !dbg !16795
  store i8* %start, i8** %start.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %start.addr, metadata !2029, metadata !2293), !dbg !16796
  store i8* %end, i8** %end.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !2030, metadata !2293), !dbg !16797
  store i8** %endPtr, i8*** %endPtr.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8*** %endPtr.addr, metadata !2031, metadata !2293), !dbg !16798
  %0 = bitcast i32* %tok to i8*, !dbg !16799
  call void @llvm.lifetime.start(i64 4, i8* %0) #2, !dbg !16799
  call void @llvm.dbg.declare(metadata i32* %tok, metadata !2032, metadata !2293), !dbg !16800
  %1 = bitcast i8** %next to i8*, !dbg !16801
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !16801
  call void @llvm.dbg.declare(metadata i8** %next, metadata !2033, metadata !2293), !dbg !16802
  %2 = load i8*, i8** %start.addr, align 8, !dbg !16803, !tbaa !2289
  store i8* %2, i8** %next, align 8, !dbg !16802, !tbaa !2289
  %3 = load i8*, i8** %start.addr, align 8, !dbg !16804, !tbaa !2289
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16805, !tbaa !2289
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 47, !dbg !16806
  store i8* %3, i8** %m_eventPtr, align 8, !dbg !16807, !tbaa !3006
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16808, !tbaa !2289
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 34, !dbg !16809
  %6 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !16809, !tbaa !5191
  %scanners = getelementptr inbounds %struct.encoding, %struct.encoding* %6, i32 0, i32 0, !dbg !16810
  %arrayidx = getelementptr [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners, i32 0, i64 1, !dbg !16811
  %7 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx, align 8, !dbg !16811, !tbaa !2289
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16812, !tbaa !2289
  %m_encoding1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 34, !dbg !16813
  %9 = load %struct.encoding*, %struct.encoding** %m_encoding1, align 8, !dbg !16813, !tbaa !5191
  %10 = load i8*, i8** %start.addr, align 8, !dbg !16814, !tbaa !2289
  %11 = load i8*, i8** %end.addr, align 8, !dbg !16815, !tbaa !2289
  %call = call i32 %7(%struct.encoding* %9, i8* %10, i8* %11, i8** %next), !dbg !16816
  store i32 %call, i32* %tok, align 4, !dbg !16817, !tbaa !3391
  %12 = load i8*, i8** %next, align 8, !dbg !16818, !tbaa !2289
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16819, !tbaa !2289
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 48, !dbg !16820
  store i8* %12, i8** %m_eventEndPtr, align 8, !dbg !16821, !tbaa !3010
  %14 = load i32, i32* %tok, align 4, !dbg !16822, !tbaa !3391
  switch i32 %14, label %sw.epilog.15 [
    i32 12, label %sw.bb
    i32 -1, label %sw.bb.5
    i32 -2, label %sw.bb.9
  ], !dbg !16823

sw.bb:                                            ; preds = %entry
  %15 = bitcast i32* %result to i8*, !dbg !16824
  call void @llvm.lifetime.start(i64 4, i8* %15) #2, !dbg !16824
  call void @llvm.dbg.declare(metadata i32* %result, metadata !2034, metadata !2293), !dbg !16825
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16826, !tbaa !2289
  %17 = load i8*, i8** %start.addr, align 8, !dbg !16827, !tbaa !2289
  %18 = load i8*, i8** %next, align 8, !dbg !16828, !tbaa !2289
  %call2 = call i32 @processXmlDecl(%struct.XML_ParserStruct* %16, i32 1, i8* %17, i8* %18), !dbg !16829
  store i32 %call2, i32* %result, align 4, !dbg !16830, !tbaa !2307
  %19 = load i32, i32* %result, align 4, !dbg !16831, !tbaa !2307
  %cmp = icmp ne i32 %19, 0, !dbg !16833
  br i1 %cmp, label %if.then, label %if.end, !dbg !16834

if.then:                                          ; preds = %sw.bb
  %20 = load i32, i32* %result, align 4, !dbg !16835, !tbaa !2307
  store i32 %20, i32* %retval, !dbg !16836
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !16836

if.end:                                           ; preds = %sw.bb
  %21 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16837, !tbaa !2289
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %21, i32 0, i32 85, !dbg !16838
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0, !dbg !16839
  %22 = load i32, i32* %parsing, align 4, !dbg !16839, !tbaa !3052
  switch i32 %22, label %sw.default [
    i32 3, label %sw.bb.3
    i32 2, label %sw.bb.4
  ], !dbg !16840

sw.bb.3:                                          ; preds = %if.end
  %23 = load i8*, i8** %next, align 8, !dbg !16841, !tbaa !2289
  %24 = load i8**, i8*** %endPtr.addr, align 8, !dbg !16843, !tbaa !2289
  store i8* %23, i8** %24, align 8, !dbg !16844, !tbaa !2289
  store i32 0, i32* %retval, !dbg !16845
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !16845

sw.bb.4:                                          ; preds = %if.end
  store i32 35, i32* %retval, !dbg !16846
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !16846

sw.default:                                       ; preds = %if.end
  %25 = load i8*, i8** %next, align 8, !dbg !16847, !tbaa !2289
  store i8* %25, i8** %start.addr, align 8, !dbg !16848, !tbaa !2289
  br label %sw.epilog, !dbg !16849

sw.epilog:                                        ; preds = %sw.default
  store i32 0, i32* %cleanup.dest.slot, !dbg !16850
  br label %cleanup, !dbg !16850

cleanup:                                          ; preds = %sw.epilog, %sw.bb.4, %sw.bb.3, %if.then
  %26 = bitcast i32* %result to i8*, !dbg !16851
  call void @llvm.lifetime.end(i64 4, i8* %26) #2, !dbg !16851
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.17 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %sw.epilog.15, !dbg !16853

sw.bb.5:                                          ; preds = %entry
  %27 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16854, !tbaa !2289
  %m_parsingStatus6 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %27, i32 0, i32 85, !dbg !16856
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus6, i32 0, i32 1, !dbg !16857
  %28 = load i8, i8* %finalBuffer, align 1, !dbg !16857, !tbaa !5150
  %tobool = icmp ne i8 %28, 0, !dbg !16858
  br i1 %tobool, label %if.end.8, label %if.then.7, !dbg !16859

if.then.7:                                        ; preds = %sw.bb.5
  %29 = load i8*, i8** %start.addr, align 8, !dbg !16860, !tbaa !2289
  %30 = load i8**, i8*** %endPtr.addr, align 8, !dbg !16862, !tbaa !2289
  store i8* %29, i8** %30, align 8, !dbg !16863, !tbaa !2289
  store i32 0, i32* %retval, !dbg !16864
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.17, !dbg !16864

if.end.8:                                         ; preds = %sw.bb.5
  store i32 5, i32* %retval, !dbg !16865
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.17, !dbg !16865

sw.bb.9:                                          ; preds = %entry
  %31 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16866, !tbaa !2289
  %m_parsingStatus10 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %31, i32 0, i32 85, !dbg !16868
  %finalBuffer11 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus10, i32 0, i32 1, !dbg !16869
  %32 = load i8, i8* %finalBuffer11, align 1, !dbg !16869, !tbaa !5150
  %tobool12 = icmp ne i8 %32, 0, !dbg !16870
  br i1 %tobool12, label %if.end.14, label %if.then.13, !dbg !16871

if.then.13:                                       ; preds = %sw.bb.9
  %33 = load i8*, i8** %start.addr, align 8, !dbg !16872, !tbaa !2289
  %34 = load i8**, i8*** %endPtr.addr, align 8, !dbg !16874, !tbaa !2289
  store i8* %33, i8** %34, align 8, !dbg !16875, !tbaa !2289
  store i32 0, i32* %retval, !dbg !16876
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.17, !dbg !16876

if.end.14:                                        ; preds = %sw.bb.9
  store i32 6, i32* %retval, !dbg !16877
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.17, !dbg !16877

sw.epilog.15:                                     ; preds = %entry, %cleanup.cont
  %35 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16878, !tbaa !2289
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %35, i32 0, i32 45, !dbg !16879
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @externalEntityContentProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8, !dbg !16880, !tbaa !2809
  %36 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16881, !tbaa !2289
  %m_tagLevel = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %36, i32 0, i32 53, !dbg !16882
  store i32 1, i32* %m_tagLevel, align 4, !dbg !16883, !tbaa !3025
  %37 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16884, !tbaa !2289
  %38 = load i8*, i8** %start.addr, align 8, !dbg !16885, !tbaa !2289
  %39 = load i8*, i8** %end.addr, align 8, !dbg !16886, !tbaa !2289
  %40 = load i8**, i8*** %endPtr.addr, align 8, !dbg !16887, !tbaa !2289
  %call16 = call i32 @externalEntityContentProcessor(%struct.XML_ParserStruct* %37, i8* %38, i8* %39, i8** %40), !dbg !16888
  store i32 %call16, i32* %retval, !dbg !16889
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.17, !dbg !16889

cleanup.17:                                       ; preds = %sw.epilog.15, %if.end.14, %if.then.13, %if.end.8, %if.then.7, %cleanup
  %41 = bitcast i8** %next to i8*, !dbg !16890
  call void @llvm.lifetime.end(i64 8, i8* %41) #2, !dbg !16890
  %42 = bitcast i32* %tok to i8*, !dbg !16890
  call void @llvm.lifetime.end(i64 4, i8* %42) #2, !dbg !16890
  %43 = load i32, i32* %retval, !dbg !16890
  ret i32 %43, !dbg !16890
}

; Function Attrs: nounwind uwtable
define internal i32 @entityValueInitProcessor(%struct.XML_ParserStruct* %parser, i8* %s, i8* %end, i8** %nextPtr) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %s.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextPtr.addr = alloca i8**, align 8
  %tok = alloca i32, align 4
  %start = alloca i8*, align 8
  %next = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %result = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !2046, metadata !2293), !dbg !16891
  store i8* %s, i8** %s.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !2047, metadata !2293), !dbg !16892
  store i8* %end, i8** %end.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !2048, metadata !2293), !dbg !16893
  store i8** %nextPtr, i8*** %nextPtr.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8*** %nextPtr.addr, metadata !2049, metadata !2293), !dbg !16894
  %0 = bitcast i32* %tok to i8*, !dbg !16895
  call void @llvm.lifetime.start(i64 4, i8* %0) #2, !dbg !16895
  call void @llvm.dbg.declare(metadata i32* %tok, metadata !2050, metadata !2293), !dbg !16896
  %1 = bitcast i8** %start to i8*, !dbg !16897
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !16897
  call void @llvm.dbg.declare(metadata i8** %start, metadata !2051, metadata !2293), !dbg !16898
  %2 = load i8*, i8** %s.addr, align 8, !dbg !16899, !tbaa !2289
  store i8* %2, i8** %start, align 8, !dbg !16898, !tbaa !2289
  %3 = bitcast i8** %next to i8*, !dbg !16900
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !16900
  call void @llvm.dbg.declare(metadata i8** %next, metadata !2052, metadata !2293), !dbg !16901
  %4 = load i8*, i8** %start, align 8, !dbg !16902, !tbaa !2289
  store i8* %4, i8** %next, align 8, !dbg !16901, !tbaa !2289
  %5 = load i8*, i8** %start, align 8, !dbg !16903, !tbaa !2289
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16904, !tbaa !2289
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 47, !dbg !16905
  store i8* %5, i8** %m_eventPtr, align 8, !dbg !16906, !tbaa !3006
  br label %for.cond, !dbg !16907

for.cond:                                         ; preds = %if.end.32, %entry
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16908, !tbaa !2289
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 34, !dbg !16909
  %8 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !16909, !tbaa !5191
  %scanners = getelementptr inbounds %struct.encoding, %struct.encoding* %8, i32 0, i32 0, !dbg !16910
  %arrayidx = getelementptr [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners, i32 0, i64 0, !dbg !16911
  %9 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx, align 8, !dbg !16911, !tbaa !2289
  %10 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16912, !tbaa !2289
  %m_encoding1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %10, i32 0, i32 34, !dbg !16913
  %11 = load %struct.encoding*, %struct.encoding** %m_encoding1, align 8, !dbg !16913, !tbaa !5191
  %12 = load i8*, i8** %start, align 8, !dbg !16914, !tbaa !2289
  %13 = load i8*, i8** %end.addr, align 8, !dbg !16915, !tbaa !2289
  %call = call i32 %9(%struct.encoding* %11, i8* %12, i8* %13, i8** %next), !dbg !16916
  store i32 %call, i32* %tok, align 4, !dbg !16917, !tbaa !3391
  %14 = load i8*, i8** %next, align 8, !dbg !16918, !tbaa !2289
  %15 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16919, !tbaa !2289
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %15, i32 0, i32 48, !dbg !16920
  store i8* %14, i8** %m_eventEndPtr, align 8, !dbg !16921, !tbaa !3010
  %16 = load i32, i32* %tok, align 4, !dbg !16922, !tbaa !3391
  %cmp = icmp sle i32 %16, 0, !dbg !16923
  br i1 %cmp, label %if.then, label %if.else, !dbg !16924

if.then:                                          ; preds = %for.cond
  %17 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16925, !tbaa !2289
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %17, i32 0, i32 85, !dbg !16928
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 1, !dbg !16929
  %18 = load i8, i8* %finalBuffer, align 1, !dbg !16929, !tbaa !5150
  %tobool = icmp ne i8 %18, 0, !dbg !16930
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !16931

land.lhs.true:                                    ; preds = %if.then
  %19 = load i32, i32* %tok, align 4, !dbg !16932, !tbaa !3391
  %cmp2 = icmp ne i32 %19, 0, !dbg !16934
  br i1 %cmp2, label %if.then.3, label %if.end, !dbg !16935

if.then.3:                                        ; preds = %land.lhs.true
  %20 = load i8*, i8** %s.addr, align 8, !dbg !16936, !tbaa !2289
  %21 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !16938, !tbaa !2289
  store i8* %20, i8** %21, align 8, !dbg !16939, !tbaa !2289
  store i32 0, i32* %retval, !dbg !16940
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.34, !dbg !16940

if.end:                                           ; preds = %land.lhs.true, %if.then
  %22 = load i32, i32* %tok, align 4, !dbg !16941, !tbaa !3391
  switch i32 %22, label %sw.default [
    i32 0, label %sw.bb
    i32 -1, label %sw.bb.4
    i32 -2, label %sw.bb.5
    i32 -4, label %sw.bb.6
  ], !dbg !16942

sw.bb:                                            ; preds = %if.end
  store i32 4, i32* %retval, !dbg !16943
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.34, !dbg !16943

sw.bb.4:                                          ; preds = %if.end
  store i32 5, i32* %retval, !dbg !16945
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.34, !dbg !16945

sw.bb.5:                                          ; preds = %if.end
  store i32 6, i32* %retval, !dbg !16946
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.34, !dbg !16946

sw.bb.6:                                          ; preds = %if.end
  br label %sw.default, !dbg !16946

sw.default:                                       ; preds = %if.end, %sw.bb.6
  br label %sw.epilog, !dbg !16947

sw.epilog:                                        ; preds = %sw.default
  %23 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16948, !tbaa !2289
  %24 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16949, !tbaa !2289
  %m_encoding7 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %24, i32 0, i32 34, !dbg !16950
  %25 = load %struct.encoding*, %struct.encoding** %m_encoding7, align 8, !dbg !16950, !tbaa !5191
  %26 = load i8*, i8** %s.addr, align 8, !dbg !16951, !tbaa !2289
  %27 = load i8*, i8** %end.addr, align 8, !dbg !16952, !tbaa !2289
  %call8 = call i32 @storeEntityValue(%struct.XML_ParserStruct* %23, %struct.encoding* %25, i8* %26, i8* %27), !dbg !16953
  store i32 %call8, i32* %retval, !dbg !16954
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.34, !dbg !16954

if.else:                                          ; preds = %for.cond
  %28 = load i32, i32* %tok, align 4, !dbg !16955, !tbaa !3391
  %cmp9 = icmp eq i32 %28, 12, !dbg !16956
  br i1 %cmp9, label %if.then.10, label %if.else.21, !dbg !16957

if.then.10:                                       ; preds = %if.else
  %29 = bitcast i32* %result to i8*, !dbg !16958
  call void @llvm.lifetime.start(i64 4, i8* %29) #2, !dbg !16958
  call void @llvm.dbg.declare(metadata i32* %result, metadata !2053, metadata !2293), !dbg !16959
  %30 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16960, !tbaa !2289
  %31 = load i8*, i8** %start, align 8, !dbg !16961, !tbaa !2289
  %32 = load i8*, i8** %next, align 8, !dbg !16962, !tbaa !2289
  %call11 = call i32 @processXmlDecl(%struct.XML_ParserStruct* %30, i32 0, i8* %31, i8* %32), !dbg !16963
  store i32 %call11, i32* %result, align 4, !dbg !16964, !tbaa !2307
  %33 = load i32, i32* %result, align 4, !dbg !16965, !tbaa !2307
  %cmp12 = icmp ne i32 %33, 0, !dbg !16967
  br i1 %cmp12, label %if.then.13, label %if.end.14, !dbg !16968

if.then.13:                                       ; preds = %if.then.10
  %34 = load i32, i32* %result, align 4, !dbg !16969, !tbaa !2307
  store i32 %34, i32* %retval, !dbg !16970
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !16970

if.end.14:                                        ; preds = %if.then.10
  %35 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16971, !tbaa !2289
  %m_parsingStatus15 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %35, i32 0, i32 85, !dbg !16972
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus15, i32 0, i32 0, !dbg !16973
  %36 = load i32, i32* %parsing, align 4, !dbg !16973, !tbaa !3052
  switch i32 %36, label %sw.default.18 [
    i32 3, label %sw.bb.16
    i32 2, label %sw.bb.17
  ], !dbg !16974

sw.bb.16:                                         ; preds = %if.end.14
  %37 = load i8*, i8** %next, align 8, !dbg !16975, !tbaa !2289
  %38 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !16977, !tbaa !2289
  store i8* %37, i8** %38, align 8, !dbg !16978, !tbaa !2289
  store i32 0, i32* %retval, !dbg !16979
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !16979

sw.bb.17:                                         ; preds = %if.end.14
  store i32 35, i32* %retval, !dbg !16980
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !16980

sw.default.18:                                    ; preds = %if.end.14
  %39 = load i8*, i8** %next, align 8, !dbg !16981, !tbaa !2289
  %40 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !16982, !tbaa !2289
  store i8* %39, i8** %40, align 8, !dbg !16983, !tbaa !2289
  br label %sw.epilog.19, !dbg !16984

sw.epilog.19:                                     ; preds = %sw.default.18
  %41 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16985, !tbaa !2289
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %41, i32 0, i32 45, !dbg !16986
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @entityValueProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8, !dbg !16987, !tbaa !2809
  %42 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !16988, !tbaa !2289
  %43 = load i8*, i8** %next, align 8, !dbg !16989, !tbaa !2289
  %44 = load i8*, i8** %end.addr, align 8, !dbg !16990, !tbaa !2289
  %45 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !16991, !tbaa !2289
  %call20 = call i32 @entityValueProcessor(%struct.XML_ParserStruct* %42, i8* %43, i8* %44, i8** %45), !dbg !16992
  store i32 %call20, i32* %retval, !dbg !16993
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !16993

cleanup:                                          ; preds = %sw.epilog.19, %sw.bb.17, %sw.bb.16, %if.then.13
  %46 = bitcast i32* %result to i8*, !dbg !16994
  call void @llvm.lifetime.end(i64 4, i8* %46) #2, !dbg !16994
  br label %cleanup.34

if.else.21:                                       ; preds = %if.else
  %47 = load i32, i32* %tok, align 4, !dbg !16995, !tbaa !3391
  %cmp22 = icmp eq i32 %47, 14, !dbg !16997
  br i1 %cmp22, label %land.lhs.true.23, label %if.end.30, !dbg !16998

land.lhs.true.23:                                 ; preds = %if.else.21
  %48 = load i8*, i8** %next, align 8, !dbg !16999, !tbaa !2289
  %49 = load i8*, i8** %end.addr, align 8, !dbg !17001, !tbaa !2289
  %cmp24 = icmp eq i8* %48, %49, !dbg !17002
  br i1 %cmp24, label %land.lhs.true.25, label %if.end.30, !dbg !17003

land.lhs.true.25:                                 ; preds = %land.lhs.true.23
  %50 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !17004, !tbaa !2289
  %m_parsingStatus26 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %50, i32 0, i32 85, !dbg !17006
  %finalBuffer27 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus26, i32 0, i32 1, !dbg !17007
  %51 = load i8, i8* %finalBuffer27, align 1, !dbg !17007, !tbaa !5150
  %tobool28 = icmp ne i8 %51, 0, !dbg !17008
  br i1 %tobool28, label %if.end.30, label %if.then.29, !dbg !17009

if.then.29:                                       ; preds = %land.lhs.true.25
  %52 = load i8*, i8** %next, align 8, !dbg !17010, !tbaa !2289
  %53 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !17012, !tbaa !2289
  store i8* %52, i8** %53, align 8, !dbg !17013, !tbaa !2289
  store i32 0, i32* %retval, !dbg !17014
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.34, !dbg !17014

if.end.30:                                        ; preds = %land.lhs.true.25, %land.lhs.true.23, %if.else.21
  br label %if.end.31

if.end.31:                                        ; preds = %if.end.30
  br label %if.end.32

if.end.32:                                        ; preds = %if.end.31
  %54 = load i8*, i8** %next, align 8, !dbg !17015, !tbaa !2289
  store i8* %54, i8** %start, align 8, !dbg !17016, !tbaa !2289
  %55 = load i8*, i8** %start, align 8, !dbg !17017, !tbaa !2289
  %56 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !17018, !tbaa !2289
  %m_eventPtr33 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %56, i32 0, i32 47, !dbg !17019
  store i8* %55, i8** %m_eventPtr33, align 8, !dbg !17020, !tbaa !3006
  br label %for.cond, !dbg !17021

cleanup.34:                                       ; preds = %if.then.29, %cleanup, %sw.epilog, %sw.bb.5, %sw.bb.4, %sw.bb, %if.then.3
  %57 = bitcast i8** %next to i8*, !dbg !17022
  call void @llvm.lifetime.end(i64 8, i8* %57) #2, !dbg !17022
  %58 = bitcast i8** %start to i8*, !dbg !17022
  call void @llvm.lifetime.end(i64 8, i8* %58) #2, !dbg !17022
  %59 = bitcast i32* %tok to i8*, !dbg !17022
  call void @llvm.lifetime.end(i64 4, i8* %59) #2, !dbg !17022
  %60 = load i32, i32* %retval, !dbg !17022
  ret i32 %60, !dbg !17022
}

; Function Attrs: nounwind uwtable
define internal i32 @externalParEntProcessor(%struct.XML_ParserStruct* %parser, i8* %s, i8* %end, i8** %nextPtr) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %s.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextPtr.addr = alloca i8**, align 8
  %next = alloca i8*, align 8
  %tok = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !2072, metadata !2293), !dbg !17023
  store i8* %s, i8** %s.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !2073, metadata !2293), !dbg !17024
  store i8* %end, i8** %end.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !2074, metadata !2293), !dbg !17025
  store i8** %nextPtr, i8*** %nextPtr.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8*** %nextPtr.addr, metadata !2075, metadata !2293), !dbg !17026
  %0 = bitcast i8** %next to i8*, !dbg !17027
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !17027
  call void @llvm.dbg.declare(metadata i8** %next, metadata !2076, metadata !2293), !dbg !17028
  %1 = load i8*, i8** %s.addr, align 8, !dbg !17029, !tbaa !2289
  store i8* %1, i8** %next, align 8, !dbg !17028, !tbaa !2289
  %2 = bitcast i32* %tok to i8*, !dbg !17030
  call void @llvm.lifetime.start(i64 4, i8* %2) #2, !dbg !17030
  call void @llvm.dbg.declare(metadata i32* %tok, metadata !2077, metadata !2293), !dbg !17031
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !17032, !tbaa !2289
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 34, !dbg !17033
  %4 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !17033, !tbaa !5191
  %scanners = getelementptr inbounds %struct.encoding, %struct.encoding* %4, i32 0, i32 0, !dbg !17034
  %arrayidx = getelementptr [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners, i32 0, i64 0, !dbg !17035
  %5 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx, align 8, !dbg !17035, !tbaa !2289
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !17036, !tbaa !2289
  %m_encoding1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 34, !dbg !17037
  %7 = load %struct.encoding*, %struct.encoding** %m_encoding1, align 8, !dbg !17037, !tbaa !5191
  %8 = load i8*, i8** %s.addr, align 8, !dbg !17038, !tbaa !2289
  %9 = load i8*, i8** %end.addr, align 8, !dbg !17039, !tbaa !2289
  %call = call i32 %5(%struct.encoding* %7, i8* %8, i8* %9, i8** %next), !dbg !17040
  store i32 %call, i32* %tok, align 4, !dbg !17041, !tbaa !3391
  %10 = load i32, i32* %tok, align 4, !dbg !17042, !tbaa !3391
  %cmp = icmp sle i32 %10, 0, !dbg !17044
  br i1 %cmp, label %if.then, label %if.else, !dbg !17045

if.then:                                          ; preds = %entry
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !17046, !tbaa !2289
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 85, !dbg !17049
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 1, !dbg !17050
  %12 = load i8, i8* %finalBuffer, align 1, !dbg !17050, !tbaa !5150
  %tobool = icmp ne i8 %12, 0, !dbg !17051
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !17052

land.lhs.true:                                    ; preds = %if.then
  %13 = load i32, i32* %tok, align 4, !dbg !17053, !tbaa !3391
  %cmp2 = icmp ne i32 %13, 0, !dbg !17055
  br i1 %cmp2, label %if.then.3, label %if.end, !dbg !17056

if.then.3:                                        ; preds = %land.lhs.true
  %14 = load i8*, i8** %s.addr, align 8, !dbg !17057, !tbaa !2289
  %15 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !17059, !tbaa !2289
  store i8* %14, i8** %15, align 8, !dbg !17060, !tbaa !2289
  store i32 0, i32* %retval, !dbg !17061
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !17061

if.end:                                           ; preds = %land.lhs.true, %if.then
  %16 = load i32, i32* %tok, align 4, !dbg !17062, !tbaa !3391
  switch i32 %16, label %sw.default [
    i32 0, label %sw.bb
    i32 -1, label %sw.bb.4
    i32 -2, label %sw.bb.5
    i32 -4, label %sw.bb.6
  ], !dbg !17063

sw.bb:                                            ; preds = %if.end
  store i32 4, i32* %retval, !dbg !17064
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !17064

sw.bb.4:                                          ; preds = %if.end
  store i32 5, i32* %retval, !dbg !17066
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !17066

sw.bb.5:                                          ; preds = %if.end
  store i32 6, i32* %retval, !dbg !17067
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !17067

sw.bb.6:                                          ; preds = %if.end
  br label %sw.default, !dbg !17067

sw.default:                                       ; preds = %if.end, %sw.bb.6
  br label %sw.epilog, !dbg !17068

sw.epilog:                                        ; preds = %sw.default
  br label %if.end.15, !dbg !17069

if.else:                                          ; preds = %entry
  %17 = load i32, i32* %tok, align 4, !dbg !17070, !tbaa !3391
  %cmp7 = icmp eq i32 %17, 14, !dbg !17072
  br i1 %cmp7, label %if.then.8, label %if.end.14, !dbg !17073

if.then.8:                                        ; preds = %if.else
  %18 = load i8*, i8** %next, align 8, !dbg !17074, !tbaa !2289
  store i8* %18, i8** %s.addr, align 8, !dbg !17076, !tbaa !2289
  %19 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !17077, !tbaa !2289
  %m_encoding9 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %19, i32 0, i32 34, !dbg !17078
  %20 = load %struct.encoding*, %struct.encoding** %m_encoding9, align 8, !dbg !17078, !tbaa !5191
  %scanners10 = getelementptr inbounds %struct.encoding, %struct.encoding* %20, i32 0, i32 0, !dbg !17079
  %arrayidx11 = getelementptr [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners10, i32 0, i64 0, !dbg !17080
  %21 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx11, align 8, !dbg !17080, !tbaa !2289
  %22 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !17081, !tbaa !2289
  %m_encoding12 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %22, i32 0, i32 34, !dbg !17082
  %23 = load %struct.encoding*, %struct.encoding** %m_encoding12, align 8, !dbg !17082, !tbaa !5191
  %24 = load i8*, i8** %s.addr, align 8, !dbg !17083, !tbaa !2289
  %25 = load i8*, i8** %end.addr, align 8, !dbg !17084, !tbaa !2289
  %call13 = call i32 %21(%struct.encoding* %23, i8* %24, i8* %25, i8** %next), !dbg !17085
  store i32 %call13, i32* %tok, align 4, !dbg !17086, !tbaa !3391
  br label %if.end.14, !dbg !17087

if.end.14:                                        ; preds = %if.then.8, %if.else
  br label %if.end.15

if.end.15:                                        ; preds = %if.end.14, %sw.epilog
  %26 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !17088, !tbaa !2289
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %26, i32 0, i32 45, !dbg !17089
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @prologProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8, !dbg !17090, !tbaa !2809
  %27 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !17091, !tbaa !2289
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !17092, !tbaa !2289
  %m_encoding16 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %28, i32 0, i32 34, !dbg !17093
  %29 = load %struct.encoding*, %struct.encoding** %m_encoding16, align 8, !dbg !17093, !tbaa !5191
  %30 = load i8*, i8** %s.addr, align 8, !dbg !17094, !tbaa !2289
  %31 = load i8*, i8** %end.addr, align 8, !dbg !17095, !tbaa !2289
  %32 = load i32, i32* %tok, align 4, !dbg !17096, !tbaa !3391
  %33 = load i8*, i8** %next, align 8, !dbg !17097, !tbaa !2289
  %34 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !17098, !tbaa !2289
  %35 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !17099, !tbaa !2289
  %m_parsingStatus17 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %35, i32 0, i32 85, !dbg !17100
  %finalBuffer18 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus17, i32 0, i32 1, !dbg !17101
  %36 = load i8, i8* %finalBuffer18, align 1, !dbg !17101, !tbaa !5150
  %tobool19 = icmp ne i8 %36, 0, !dbg !17102
  %lnot = xor i1 %tobool19, true, !dbg !17102
  %lnot.ext = zext i1 %lnot to i32, !dbg !17102
  %conv = trunc i32 %lnot.ext to i8, !dbg !17103
  %call20 = call i32 @doProlog(%struct.XML_ParserStruct* %27, %struct.encoding* %29, i8* %30, i8* %31, i32 %32, i8* %33, i8** %34, i8 zeroext %conv), !dbg !17104
  store i32 %call20, i32* %retval, !dbg !17105
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !17105

cleanup:                                          ; preds = %if.end.15, %sw.bb.5, %sw.bb.4, %sw.bb, %if.then.3
  %37 = bitcast i32* %tok to i8*, !dbg !17106
  call void @llvm.lifetime.end(i64 4, i8* %37) #2, !dbg !17106
  %38 = bitcast i8** %next to i8*, !dbg !17106
  call void @llvm.lifetime.end(i64 8, i8* %38) #2, !dbg !17106
  %39 = load i32, i32* %retval, !dbg !17106
  ret i32 %39, !dbg !17106
}

; Function Attrs: nounwind uwtable
define internal i32 @entityValueProcessor(%struct.XML_ParserStruct* %parser, i8* %s, i8* %end, i8** %nextPtr) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %s.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextPtr.addr = alloca i8**, align 8
  %start = alloca i8*, align 8
  %next = alloca i8*, align 8
  %enc = alloca %struct.encoding*, align 8
  %tok = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !2062, metadata !2293), !dbg !17107
  store i8* %s, i8** %s.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !2063, metadata !2293), !dbg !17108
  store i8* %end, i8** %end.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !2064, metadata !2293), !dbg !17109
  store i8** %nextPtr, i8*** %nextPtr.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8*** %nextPtr.addr, metadata !2065, metadata !2293), !dbg !17110
  %0 = bitcast i8** %start to i8*, !dbg !17111
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !17111
  call void @llvm.dbg.declare(metadata i8** %start, metadata !2066, metadata !2293), !dbg !17112
  %1 = load i8*, i8** %s.addr, align 8, !dbg !17113, !tbaa !2289
  store i8* %1, i8** %start, align 8, !dbg !17112, !tbaa !2289
  %2 = bitcast i8** %next to i8*, !dbg !17114
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !17114
  call void @llvm.dbg.declare(metadata i8** %next, metadata !2067, metadata !2293), !dbg !17115
  %3 = load i8*, i8** %s.addr, align 8, !dbg !17116, !tbaa !2289
  store i8* %3, i8** %next, align 8, !dbg !17115, !tbaa !2289
  %4 = bitcast %struct.encoding** %enc to i8*, !dbg !17117
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !17117
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc, metadata !2068, metadata !2293), !dbg !17118
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !17119, !tbaa !2289
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 34, !dbg !17120
  %6 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !17120, !tbaa !5191
  store %struct.encoding* %6, %struct.encoding** %enc, align 8, !dbg !17118, !tbaa !2289
  %7 = bitcast i32* %tok to i8*, !dbg !17121
  call void @llvm.lifetime.start(i64 4, i8* %7) #2, !dbg !17121
  call void @llvm.dbg.declare(metadata i32* %tok, metadata !2069, metadata !2293), !dbg !17122
  br label %for.cond, !dbg !17123

for.cond:                                         ; preds = %if.end.7, %entry
  %8 = load %struct.encoding*, %struct.encoding** %enc, align 8, !dbg !17124, !tbaa !2289
  %scanners = getelementptr inbounds %struct.encoding, %struct.encoding* %8, i32 0, i32 0, !dbg !17128
  %arrayidx = getelementptr [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners, i32 0, i64 0, !dbg !17129
  %9 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx, align 8, !dbg !17129, !tbaa !2289
  %10 = load %struct.encoding*, %struct.encoding** %enc, align 8, !dbg !17130, !tbaa !2289
  %11 = load i8*, i8** %start, align 8, !dbg !17131, !tbaa !2289
  %12 = load i8*, i8** %end.addr, align 8, !dbg !17132, !tbaa !2289
  %call = call i32 %9(%struct.encoding* %10, i8* %11, i8* %12, i8** %next), !dbg !17133
  store i32 %call, i32* %tok, align 4, !dbg !17134, !tbaa !3391
  %13 = load i32, i32* %tok, align 4, !dbg !17135, !tbaa !3391
  %cmp = icmp sle i32 %13, 0, !dbg !17137
  br i1 %cmp, label %if.then, label %if.end.7, !dbg !17138

if.then:                                          ; preds = %for.cond
  %14 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !17139, !tbaa !2289
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %14, i32 0, i32 85, !dbg !17142
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 1, !dbg !17143
  %15 = load i8, i8* %finalBuffer, align 1, !dbg !17143, !tbaa !5150
  %tobool = icmp ne i8 %15, 0, !dbg !17144
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !17145

land.lhs.true:                                    ; preds = %if.then
  %16 = load i32, i32* %tok, align 4, !dbg !17146, !tbaa !3391
  %cmp1 = icmp ne i32 %16, 0, !dbg !17148
  br i1 %cmp1, label %if.then.2, label %if.end, !dbg !17149

if.then.2:                                        ; preds = %land.lhs.true
  %17 = load i8*, i8** %s.addr, align 8, !dbg !17150, !tbaa !2289
  %18 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !17152, !tbaa !2289
  store i8* %17, i8** %18, align 8, !dbg !17153, !tbaa !2289
  store i32 0, i32* %retval, !dbg !17154
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !17154

if.end:                                           ; preds = %land.lhs.true, %if.then
  %19 = load i32, i32* %tok, align 4, !dbg !17155, !tbaa !3391
  switch i32 %19, label %sw.default [
    i32 0, label %sw.bb
    i32 -1, label %sw.bb.3
    i32 -2, label %sw.bb.4
    i32 -4, label %sw.bb.5
  ], !dbg !17156

sw.bb:                                            ; preds = %if.end
  store i32 4, i32* %retval, !dbg !17157
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !17157

sw.bb.3:                                          ; preds = %if.end
  store i32 5, i32* %retval, !dbg !17159
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !17159

sw.bb.4:                                          ; preds = %if.end
  store i32 6, i32* %retval, !dbg !17160
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !17160

sw.bb.5:                                          ; preds = %if.end
  br label %sw.default, !dbg !17160

sw.default:                                       ; preds = %if.end, %sw.bb.5
  br label %sw.epilog, !dbg !17161

sw.epilog:                                        ; preds = %sw.default
  %20 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !17162, !tbaa !2289
  %21 = load %struct.encoding*, %struct.encoding** %enc, align 8, !dbg !17163, !tbaa !2289
  %22 = load i8*, i8** %s.addr, align 8, !dbg !17164, !tbaa !2289
  %23 = load i8*, i8** %end.addr, align 8, !dbg !17165, !tbaa !2289
  %call6 = call i32 @storeEntityValue(%struct.XML_ParserStruct* %20, %struct.encoding* %21, i8* %22, i8* %23), !dbg !17166
  store i32 %call6, i32* %retval, !dbg !17167
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !17167

if.end.7:                                         ; preds = %for.cond
  %24 = load i8*, i8** %next, align 8, !dbg !17168, !tbaa !2289
  store i8* %24, i8** %start, align 8, !dbg !17169, !tbaa !2289
  br label %for.cond, !dbg !17170

cleanup:                                          ; preds = %sw.epilog, %sw.bb.4, %sw.bb.3, %sw.bb, %if.then.2
  %25 = bitcast i32* %tok to i8*, !dbg !17171
  call void @llvm.lifetime.end(i64 4, i8* %25) #2, !dbg !17171
  %26 = bitcast %struct.encoding** %enc to i8*, !dbg !17171
  call void @llvm.lifetime.end(i64 8, i8* %26) #2, !dbg !17171
  %27 = bitcast i8** %next to i8*, !dbg !17171
  call void @llvm.lifetime.end(i64 8, i8* %27) #2, !dbg !17171
  %28 = bitcast i8** %start to i8*, !dbg !17171
  call void @llvm.lifetime.end(i64 8, i8* %28) #2, !dbg !17171
  %29 = load i32, i32* %retval, !dbg !17171
  ret i32 %29, !dbg !17171
}

; Function Attrs: nounwind uwtable
define internal void @hashTableClear(%struct.HASH_TABLE* %table) #0 {
entry:
  %table.addr = alloca %struct.HASH_TABLE*, align 8
  %i = alloca i64, align 8
  store %struct.HASH_TABLE* %table, %struct.HASH_TABLE** %table.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.HASH_TABLE** %table.addr, metadata !2126, metadata !2293), !dbg !17172
  %0 = bitcast i64* %i to i8*, !dbg !17173
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !17173
  call void @llvm.dbg.declare(metadata i64* %i, metadata !2127, metadata !2293), !dbg !17174
  store i64 0, i64* %i, align 8, !dbg !17175, !tbaa !3400
  br label %for.cond, !dbg !17177

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64, i64* %i, align 8, !dbg !17178, !tbaa !3400
  %2 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !17182, !tbaa !2289
  %size = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %2, i32 0, i32 2, !dbg !17183
  %3 = load i64, i64* %size, align 8, !dbg !17183, !tbaa !6254
  %cmp = icmp ult i64 %1, %3, !dbg !17184
  br i1 %cmp, label %for.body, label %for.end, !dbg !17185

for.body:                                         ; preds = %for.cond
  %4 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !17186, !tbaa !2289
  %mem = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %4, i32 0, i32 4, !dbg !17188
  %5 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mem, align 8, !dbg !17188, !tbaa !6267
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %5, i32 0, i32 2, !dbg !17189
  %6 = load void (i8*)*, void (i8*)** %free_fcn, align 8, !dbg !17189, !tbaa !2356
  %7 = load i64, i64* %i, align 8, !dbg !17190, !tbaa !3400
  %8 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !17191, !tbaa !2289
  %v = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %8, i32 0, i32 0, !dbg !17192
  %9 = load %struct.NAMED**, %struct.NAMED*** %v, align 8, !dbg !17192, !tbaa !6262
  %arrayidx = getelementptr %struct.NAMED*, %struct.NAMED** %9, i64 %7, !dbg !17191
  %10 = load %struct.NAMED*, %struct.NAMED** %arrayidx, align 8, !dbg !17191, !tbaa !2289
  %11 = bitcast %struct.NAMED* %10 to i8*, !dbg !17191
  call void %6(i8* %11), !dbg !17186
  %12 = load i64, i64* %i, align 8, !dbg !17193, !tbaa !3400
  %13 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !17194, !tbaa !2289
  %v1 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %13, i32 0, i32 0, !dbg !17195
  %14 = load %struct.NAMED**, %struct.NAMED*** %v1, align 8, !dbg !17195, !tbaa !6262
  %arrayidx2 = getelementptr %struct.NAMED*, %struct.NAMED** %14, i64 %12, !dbg !17194
  store %struct.NAMED* null, %struct.NAMED** %arrayidx2, align 8, !dbg !17196, !tbaa !2289
  br label %for.inc, !dbg !17197

for.inc:                                          ; preds = %for.body
  %15 = load i64, i64* %i, align 8, !dbg !17198, !tbaa !3400
  %inc = add i64 %15, 1, !dbg !17198
  store i64 %inc, i64* %i, align 8, !dbg !17198, !tbaa !3400
  br label %for.cond, !dbg !17199

for.end:                                          ; preds = %for.cond
  %16 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !17200, !tbaa !2289
  %used = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %16, i32 0, i32 3, !dbg !17201
  store i64 0, i64* %used, align 8, !dbg !17202, !tbaa !6258
  %17 = bitcast i64* %i to i8*, !dbg !17203
  call void @llvm.lifetime.end(i64 8, i8* %17) #2, !dbg !17203
  ret void, !dbg !17203
}

; Function Attrs: nounwind uwtable
define internal void @hashTableDestroy(%struct.HASH_TABLE* %table) #0 {
entry:
  %table.addr = alloca %struct.HASH_TABLE*, align 8
  %i = alloca i64, align 8
  store %struct.HASH_TABLE* %table, %struct.HASH_TABLE** %table.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.HASH_TABLE** %table.addr, metadata !2142, metadata !2293), !dbg !17204
  %0 = bitcast i64* %i to i8*, !dbg !17205
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !17205
  call void @llvm.dbg.declare(metadata i64* %i, metadata !2143, metadata !2293), !dbg !17206
  store i64 0, i64* %i, align 8, !dbg !17207, !tbaa !3400
  br label %for.cond, !dbg !17209

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64, i64* %i, align 8, !dbg !17210, !tbaa !3400
  %2 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !17214, !tbaa !2289
  %size = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %2, i32 0, i32 2, !dbg !17215
  %3 = load i64, i64* %size, align 8, !dbg !17215, !tbaa !6254
  %cmp = icmp ult i64 %1, %3, !dbg !17216
  br i1 %cmp, label %for.body, label %for.end, !dbg !17217

for.body:                                         ; preds = %for.cond
  %4 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !17218, !tbaa !2289
  %mem = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %4, i32 0, i32 4, !dbg !17219
  %5 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mem, align 8, !dbg !17219, !tbaa !6267
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %5, i32 0, i32 2, !dbg !17220
  %6 = load void (i8*)*, void (i8*)** %free_fcn, align 8, !dbg !17220, !tbaa !2356
  %7 = load i64, i64* %i, align 8, !dbg !17221, !tbaa !3400
  %8 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !17222, !tbaa !2289
  %v = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %8, i32 0, i32 0, !dbg !17223
  %9 = load %struct.NAMED**, %struct.NAMED*** %v, align 8, !dbg !17223, !tbaa !6262
  %arrayidx = getelementptr %struct.NAMED*, %struct.NAMED** %9, i64 %7, !dbg !17222
  %10 = load %struct.NAMED*, %struct.NAMED** %arrayidx, align 8, !dbg !17222, !tbaa !2289
  %11 = bitcast %struct.NAMED* %10 to i8*, !dbg !17222
  call void %6(i8* %11), !dbg !17218
  br label %for.inc, !dbg !17218

for.inc:                                          ; preds = %for.body
  %12 = load i64, i64* %i, align 8, !dbg !17224, !tbaa !3400
  %inc = add i64 %12, 1, !dbg !17224
  store i64 %inc, i64* %i, align 8, !dbg !17224, !tbaa !3400
  br label %for.cond, !dbg !17225

for.end:                                          ; preds = %for.cond
  %13 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !17226, !tbaa !2289
  %mem1 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %13, i32 0, i32 4, !dbg !17227
  %14 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mem1, align 8, !dbg !17227, !tbaa !6267
  %free_fcn2 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %14, i32 0, i32 2, !dbg !17228
  %15 = load void (i8*)*, void (i8*)** %free_fcn2, align 8, !dbg !17228, !tbaa !2356
  %16 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !17229, !tbaa !2289
  %v3 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %16, i32 0, i32 0, !dbg !17230
  %17 = load %struct.NAMED**, %struct.NAMED*** %v3, align 8, !dbg !17230, !tbaa !6262
  %18 = bitcast %struct.NAMED** %17 to i8*, !dbg !17229
  call void %15(i8* %18), !dbg !17226
  %19 = bitcast i64* %i to i8*, !dbg !17231
  call void @llvm.lifetime.end(i64 8, i8* %19) #2, !dbg !17231
  ret void, !dbg !17231
}

; Function Attrs: nounwind uwtable
define internal i32 @copyEntityTable(%struct.XML_ParserStruct* %oldParser, %struct.HASH_TABLE* %newTable, %struct.STRING_POOL* %newPool, %struct.HASH_TABLE* %oldTable) #0 {
entry:
  %retval = alloca i32, align 4
  %oldParser.addr = alloca %struct.XML_ParserStruct*, align 8
  %newTable.addr = alloca %struct.HASH_TABLE*, align 8
  %newPool.addr = alloca %struct.STRING_POOL*, align 8
  %oldTable.addr = alloca %struct.HASH_TABLE*, align 8
  %iter = alloca %struct.HASH_TABLE_ITER, align 8
  %cachedOldBase = alloca i8*, align 8
  %cachedNewBase = alloca i8*, align 8
  %newE = alloca %struct.ENTITY*, align 8
  %name = alloca i8*, align 8
  %oldE = alloca %struct.ENTITY*, align 8
  %cleanup.dest.slot = alloca i32
  %tem = alloca i8*, align 8
  %tem41 = alloca i8*, align 8
  %tem55 = alloca i8*, align 8
  store %struct.XML_ParserStruct* %oldParser, %struct.XML_ParserStruct** %oldParser.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %oldParser.addr, metadata !2181, metadata !2293), !dbg !17232
  store %struct.HASH_TABLE* %newTable, %struct.HASH_TABLE** %newTable.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.HASH_TABLE** %newTable.addr, metadata !2182, metadata !2293), !dbg !17233
  store %struct.STRING_POOL* %newPool, %struct.STRING_POOL** %newPool.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.STRING_POOL** %newPool.addr, metadata !2183, metadata !2293), !dbg !17234
  store %struct.HASH_TABLE* %oldTable, %struct.HASH_TABLE** %oldTable.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.HASH_TABLE** %oldTable.addr, metadata !2184, metadata !2293), !dbg !17235
  %0 = bitcast %struct.HASH_TABLE_ITER* %iter to i8*, !dbg !17236
  call void @llvm.lifetime.start(i64 16, i8* %0) #2, !dbg !17236
  call void @llvm.dbg.declare(metadata %struct.HASH_TABLE_ITER* %iter, metadata !2185, metadata !2293), !dbg !17237
  %1 = bitcast i8** %cachedOldBase to i8*, !dbg !17238
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !17238
  call void @llvm.dbg.declare(metadata i8** %cachedOldBase, metadata !2186, metadata !2293), !dbg !17239
  store i8* null, i8** %cachedOldBase, align 8, !dbg !17239, !tbaa !2289
  %2 = bitcast i8** %cachedNewBase to i8*, !dbg !17240
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !17240
  call void @llvm.dbg.declare(metadata i8** %cachedNewBase, metadata !2187, metadata !2293), !dbg !17241
  store i8* null, i8** %cachedNewBase, align 8, !dbg !17241, !tbaa !2289
  %3 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %oldTable.addr, align 8, !dbg !17242, !tbaa !2289
  call void @hashTableIterInit(%struct.HASH_TABLE_ITER* %iter, %struct.HASH_TABLE* %3), !dbg !17243
  br label %for.cond, !dbg !17244

for.cond:                                         ; preds = %cleanup.cont.72, %entry
  %4 = bitcast %struct.ENTITY** %newE to i8*, !dbg !17245
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !17245
  call void @llvm.dbg.declare(metadata %struct.ENTITY** %newE, metadata !2188, metadata !2293), !dbg !17246
  %5 = bitcast i8** %name to i8*, !dbg !17247
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !17247
  call void @llvm.dbg.declare(metadata i8** %name, metadata !2192, metadata !2293), !dbg !17248
  %6 = bitcast %struct.ENTITY** %oldE to i8*, !dbg !17249
  call void @llvm.lifetime.start(i64 8, i8* %6) #2, !dbg !17249
  call void @llvm.dbg.declare(metadata %struct.ENTITY** %oldE, metadata !2193, metadata !2293), !dbg !17250
  %call = call %struct.NAMED* @hashTableIterNext(%struct.HASH_TABLE_ITER* %iter), !dbg !17251
  %7 = bitcast %struct.NAMED* %call to %struct.ENTITY*, !dbg !17252
  store %struct.ENTITY* %7, %struct.ENTITY** %oldE, align 8, !dbg !17250, !tbaa !2289
  %8 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8, !dbg !17253, !tbaa !2289
  %tobool = icmp ne %struct.ENTITY* %8, null, !dbg !17253
  br i1 %tobool, label %if.end, label %if.then, !dbg !17255

if.then:                                          ; preds = %for.cond
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.68, !dbg !17256

if.end:                                           ; preds = %for.cond
  %9 = load %struct.STRING_POOL*, %struct.STRING_POOL** %newPool.addr, align 8, !dbg !17257, !tbaa !2289
  %10 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8, !dbg !17258, !tbaa !2289
  %name1 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %10, i32 0, i32 0, !dbg !17259
  %11 = load i8*, i8** %name1, align 8, !dbg !17259, !tbaa !7578
  %call2 = call i8* @poolCopyString(%struct.STRING_POOL* %9, i8* %11), !dbg !17260
  store i8* %call2, i8** %name, align 8, !dbg !17261, !tbaa !2289
  %12 = load i8*, i8** %name, align 8, !dbg !17262, !tbaa !2289
  %tobool3 = icmp ne i8* %12, null, !dbg !17262
  br i1 %tobool3, label %if.end.5, label %if.then.4, !dbg !17264

if.then.4:                                        ; preds = %if.end
  store i32 0, i32* %retval, !dbg !17265
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.68, !dbg !17265

if.end.5:                                         ; preds = %if.end
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8, !dbg !17266, !tbaa !2289
  %14 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %newTable.addr, align 8, !dbg !17267, !tbaa !2289
  %15 = load i8*, i8** %name, align 8, !dbg !17268, !tbaa !2289
  %call6 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %13, %struct.HASH_TABLE* %14, i8* %15, i64 64), !dbg !17269
  %16 = bitcast %struct.NAMED* %call6 to %struct.ENTITY*, !dbg !17270
  store %struct.ENTITY* %16, %struct.ENTITY** %newE, align 8, !dbg !17271, !tbaa !2289
  %17 = load %struct.ENTITY*, %struct.ENTITY** %newE, align 8, !dbg !17272, !tbaa !2289
  %tobool7 = icmp ne %struct.ENTITY* %17, null, !dbg !17272
  br i1 %tobool7, label %if.end.9, label %if.then.8, !dbg !17274

if.then.8:                                        ; preds = %if.end.5
  store i32 0, i32* %retval, !dbg !17275
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.68, !dbg !17275

if.end.9:                                         ; preds = %if.end.5
  %18 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8, !dbg !17276, !tbaa !2289
  %systemId = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %18, i32 0, i32 4, !dbg !17277
  %19 = load i8*, i8** %systemId, align 8, !dbg !17277, !tbaa !6933
  %tobool10 = icmp ne i8* %19, null, !dbg !17276
  br i1 %tobool10, label %if.then.11, label %if.else.40, !dbg !17278

if.then.11:                                       ; preds = %if.end.9
  %20 = bitcast i8** %tem to i8*, !dbg !17279
  call void @llvm.lifetime.start(i64 8, i8* %20) #2, !dbg !17279
  call void @llvm.dbg.declare(metadata i8** %tem, metadata !2196, metadata !2293), !dbg !17280
  %21 = load %struct.STRING_POOL*, %struct.STRING_POOL** %newPool.addr, align 8, !dbg !17281, !tbaa !2289
  %22 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8, !dbg !17282, !tbaa !2289
  %systemId12 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %22, i32 0, i32 4, !dbg !17283
  %23 = load i8*, i8** %systemId12, align 8, !dbg !17283, !tbaa !6933
  %call13 = call i8* @poolCopyString(%struct.STRING_POOL* %21, i8* %23), !dbg !17284
  store i8* %call13, i8** %tem, align 8, !dbg !17280, !tbaa !2289
  %24 = load i8*, i8** %tem, align 8, !dbg !17285, !tbaa !2289
  %tobool14 = icmp ne i8* %24, null, !dbg !17285
  br i1 %tobool14, label %if.end.16, label %if.then.15, !dbg !17287

if.then.15:                                       ; preds = %if.then.11
  store i32 0, i32* %retval, !dbg !17288
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !17288

if.end.16:                                        ; preds = %if.then.11
  %25 = load i8*, i8** %tem, align 8, !dbg !17289, !tbaa !2289
  %26 = load %struct.ENTITY*, %struct.ENTITY** %newE, align 8, !dbg !17290, !tbaa !2289
  %systemId17 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %26, i32 0, i32 4, !dbg !17291
  store i8* %25, i8** %systemId17, align 8, !dbg !17292, !tbaa !6933
  %27 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8, !dbg !17293, !tbaa !2289
  %base = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %27, i32 0, i32 5, !dbg !17295
  %28 = load i8*, i8** %base, align 8, !dbg !17295, !tbaa !6920
  %tobool18 = icmp ne i8* %28, null, !dbg !17293
  br i1 %tobool18, label %if.then.19, label %if.end.30, !dbg !17296

if.then.19:                                       ; preds = %if.end.16
  %29 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8, !dbg !17297, !tbaa !2289
  %base20 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %29, i32 0, i32 5, !dbg !17300
  %30 = load i8*, i8** %base20, align 8, !dbg !17300, !tbaa !6920
  %31 = load i8*, i8** %cachedOldBase, align 8, !dbg !17301, !tbaa !2289
  %cmp = icmp eq i8* %30, %31, !dbg !17302
  br i1 %cmp, label %if.then.21, label %if.else, !dbg !17303

if.then.21:                                       ; preds = %if.then.19
  %32 = load i8*, i8** %cachedNewBase, align 8, !dbg !17304, !tbaa !2289
  %33 = load %struct.ENTITY*, %struct.ENTITY** %newE, align 8, !dbg !17305, !tbaa !2289
  %base22 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %33, i32 0, i32 5, !dbg !17306
  store i8* %32, i8** %base22, align 8, !dbg !17307, !tbaa !6920
  br label %if.end.29, !dbg !17305

if.else:                                          ; preds = %if.then.19
  %34 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8, !dbg !17308, !tbaa !2289
  %base23 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %34, i32 0, i32 5, !dbg !17310
  %35 = load i8*, i8** %base23, align 8, !dbg !17310, !tbaa !6920
  store i8* %35, i8** %cachedOldBase, align 8, !dbg !17311, !tbaa !2289
  %36 = load %struct.STRING_POOL*, %struct.STRING_POOL** %newPool.addr, align 8, !dbg !17312, !tbaa !2289
  %37 = load i8*, i8** %cachedOldBase, align 8, !dbg !17313, !tbaa !2289
  %call24 = call i8* @poolCopyString(%struct.STRING_POOL* %36, i8* %37), !dbg !17314
  store i8* %call24, i8** %tem, align 8, !dbg !17315, !tbaa !2289
  %38 = load i8*, i8** %tem, align 8, !dbg !17316, !tbaa !2289
  %tobool25 = icmp ne i8* %38, null, !dbg !17316
  br i1 %tobool25, label %if.end.27, label %if.then.26, !dbg !17318

if.then.26:                                       ; preds = %if.else
  store i32 0, i32* %retval, !dbg !17319
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !17319

if.end.27:                                        ; preds = %if.else
  %39 = load i8*, i8** %tem, align 8, !dbg !17320, !tbaa !2289
  %40 = load %struct.ENTITY*, %struct.ENTITY** %newE, align 8, !dbg !17321, !tbaa !2289
  %base28 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %40, i32 0, i32 5, !dbg !17322
  store i8* %39, i8** %base28, align 8, !dbg !17323, !tbaa !6920
  store i8* %39, i8** %cachedNewBase, align 8, !dbg !17324, !tbaa !2289
  br label %if.end.29

if.end.29:                                        ; preds = %if.end.27, %if.then.21
  br label %if.end.30, !dbg !17325

if.end.30:                                        ; preds = %if.end.29, %if.end.16
  %41 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8, !dbg !17326, !tbaa !2289
  %publicId = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %41, i32 0, i32 6, !dbg !17328
  %42 = load i8*, i8** %publicId, align 8, !dbg !17328, !tbaa !6833
  %tobool31 = icmp ne i8* %42, null, !dbg !17326
  br i1 %tobool31, label %if.then.32, label %if.end.39, !dbg !17329

if.then.32:                                       ; preds = %if.end.30
  %43 = load %struct.STRING_POOL*, %struct.STRING_POOL** %newPool.addr, align 8, !dbg !17330, !tbaa !2289
  %44 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8, !dbg !17332, !tbaa !2289
  %publicId33 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %44, i32 0, i32 6, !dbg !17333
  %45 = load i8*, i8** %publicId33, align 8, !dbg !17333, !tbaa !6833
  %call34 = call i8* @poolCopyString(%struct.STRING_POOL* %43, i8* %45), !dbg !17334
  store i8* %call34, i8** %tem, align 8, !dbg !17335, !tbaa !2289
  %46 = load i8*, i8** %tem, align 8, !dbg !17336, !tbaa !2289
  %tobool35 = icmp ne i8* %46, null, !dbg !17336
  br i1 %tobool35, label %if.end.37, label %if.then.36, !dbg !17338

if.then.36:                                       ; preds = %if.then.32
  store i32 0, i32* %retval, !dbg !17339
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !17339

if.end.37:                                        ; preds = %if.then.32
  %47 = load i8*, i8** %tem, align 8, !dbg !17340, !tbaa !2289
  %48 = load %struct.ENTITY*, %struct.ENTITY** %newE, align 8, !dbg !17341, !tbaa !2289
  %publicId38 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %48, i32 0, i32 6, !dbg !17342
  store i8* %47, i8** %publicId38, align 8, !dbg !17343, !tbaa !6833
  br label %if.end.39, !dbg !17344

if.end.39:                                        ; preds = %if.end.37, %if.end.30
  store i32 0, i32* %cleanup.dest.slot, !dbg !17345
  br label %cleanup, !dbg !17345

cleanup:                                          ; preds = %if.end.39, %if.then.36, %if.then.26, %if.then.15
  %49 = bitcast i8** %tem to i8*, !dbg !17346
  call void @llvm.lifetime.end(i64 8, i8* %49) #2, !dbg !17346
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.68 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.52, !dbg !17348

if.else.40:                                       ; preds = %if.end.9
  %50 = bitcast i8** %tem41 to i8*, !dbg !17349
  call void @llvm.lifetime.start(i64 8, i8* %50) #2, !dbg !17349
  call void @llvm.dbg.declare(metadata i8** %tem41, metadata !2199, metadata !2293), !dbg !17350
  %51 = load %struct.STRING_POOL*, %struct.STRING_POOL** %newPool.addr, align 8, !dbg !17351, !tbaa !2289
  %52 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8, !dbg !17352, !tbaa !2289
  %textPtr = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %52, i32 0, i32 1, !dbg !17353
  %53 = load i8*, i8** %textPtr, align 8, !dbg !17353, !tbaa !7541
  %54 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8, !dbg !17354, !tbaa !2289
  %textLen = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %54, i32 0, i32 2, !dbg !17355
  %55 = load i32, i32* %textLen, align 4, !dbg !17355, !tbaa !7554
  %call42 = call i8* @poolCopyStringN(%struct.STRING_POOL* %51, i8* %53, i32 %55), !dbg !17356
  store i8* %call42, i8** %tem41, align 8, !dbg !17350, !tbaa !2289
  %56 = load i8*, i8** %tem41, align 8, !dbg !17357, !tbaa !2289
  %tobool43 = icmp ne i8* %56, null, !dbg !17357
  br i1 %tobool43, label %if.end.45, label %if.then.44, !dbg !17359

if.then.44:                                       ; preds = %if.else.40
  store i32 0, i32* %retval, !dbg !17360
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.49, !dbg !17360

if.end.45:                                        ; preds = %if.else.40
  %57 = load i8*, i8** %tem41, align 8, !dbg !17361, !tbaa !2289
  %58 = load %struct.ENTITY*, %struct.ENTITY** %newE, align 8, !dbg !17362, !tbaa !2289
  %textPtr46 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %58, i32 0, i32 1, !dbg !17363
  store i8* %57, i8** %textPtr46, align 8, !dbg !17364, !tbaa !7541
  %59 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8, !dbg !17365, !tbaa !2289
  %textLen47 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %59, i32 0, i32 2, !dbg !17366
  %60 = load i32, i32* %textLen47, align 4, !dbg !17366, !tbaa !7554
  %61 = load %struct.ENTITY*, %struct.ENTITY** %newE, align 8, !dbg !17367, !tbaa !2289
  %textLen48 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %61, i32 0, i32 2, !dbg !17368
  store i32 %60, i32* %textLen48, align 4, !dbg !17369, !tbaa !7554
  store i32 0, i32* %cleanup.dest.slot, !dbg !17370
  br label %cleanup.49, !dbg !17370

cleanup.49:                                       ; preds = %if.end.45, %if.then.44
  %62 = bitcast i8** %tem41 to i8*, !dbg !17371
  call void @llvm.lifetime.end(i64 8, i8* %62) #2, !dbg !17371
  %cleanup.dest.50 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.50, label %cleanup.68 [
    i32 0, label %cleanup.cont.51
  ]

cleanup.cont.51:                                  ; preds = %cleanup.49
  br label %if.end.52

if.end.52:                                        ; preds = %cleanup.cont.51, %cleanup.cont
  %63 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8, !dbg !17372, !tbaa !2289
  %notation = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %63, i32 0, i32 7, !dbg !17373
  %64 = load i8*, i8** %notation, align 8, !dbg !17373, !tbaa !7823
  %tobool53 = icmp ne i8* %64, null, !dbg !17372
  br i1 %tobool53, label %if.then.54, label %if.end.65, !dbg !17374

if.then.54:                                       ; preds = %if.end.52
  %65 = bitcast i8** %tem55 to i8*, !dbg !17375
  call void @llvm.lifetime.start(i64 8, i8* %65) #2, !dbg !17375
  call void @llvm.dbg.declare(metadata i8** %tem55, metadata !2201, metadata !2293), !dbg !17376
  %66 = load %struct.STRING_POOL*, %struct.STRING_POOL** %newPool.addr, align 8, !dbg !17377, !tbaa !2289
  %67 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8, !dbg !17378, !tbaa !2289
  %notation56 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %67, i32 0, i32 7, !dbg !17379
  %68 = load i8*, i8** %notation56, align 8, !dbg !17379, !tbaa !7823
  %call57 = call i8* @poolCopyString(%struct.STRING_POOL* %66, i8* %68), !dbg !17380
  store i8* %call57, i8** %tem55, align 8, !dbg !17376, !tbaa !2289
  %69 = load i8*, i8** %tem55, align 8, !dbg !17381, !tbaa !2289
  %tobool58 = icmp ne i8* %69, null, !dbg !17381
  br i1 %tobool58, label %if.end.60, label %if.then.59, !dbg !17383

if.then.59:                                       ; preds = %if.then.54
  store i32 0, i32* %retval, !dbg !17384
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.62, !dbg !17384

if.end.60:                                        ; preds = %if.then.54
  %70 = load i8*, i8** %tem55, align 8, !dbg !17385, !tbaa !2289
  %71 = load %struct.ENTITY*, %struct.ENTITY** %newE, align 8, !dbg !17386, !tbaa !2289
  %notation61 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %71, i32 0, i32 7, !dbg !17387
  store i8* %70, i8** %notation61, align 8, !dbg !17388, !tbaa !7823
  store i32 0, i32* %cleanup.dest.slot, !dbg !17389
  br label %cleanup.62, !dbg !17389

cleanup.62:                                       ; preds = %if.end.60, %if.then.59
  %72 = bitcast i8** %tem55 to i8*, !dbg !17390
  call void @llvm.lifetime.end(i64 8, i8* %72) #2, !dbg !17390
  %cleanup.dest.63 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.63, label %cleanup.68 [
    i32 0, label %cleanup.cont.64
  ]

cleanup.cont.64:                                  ; preds = %cleanup.62
  br label %if.end.65, !dbg !17392

if.end.65:                                        ; preds = %cleanup.cont.64, %if.end.52
  %73 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8, !dbg !17393, !tbaa !2289
  %is_param = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %73, i32 0, i32 9, !dbg !17394
  %74 = load i8, i8* %is_param, align 1, !dbg !17394, !tbaa !7582
  %75 = load %struct.ENTITY*, %struct.ENTITY** %newE, align 8, !dbg !17395, !tbaa !2289
  %is_param66 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %75, i32 0, i32 9, !dbg !17396
  store i8 %74, i8* %is_param66, align 1, !dbg !17397, !tbaa !7582
  %76 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8, !dbg !17398, !tbaa !2289
  %is_internal = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %76, i32 0, i32 10, !dbg !17399
  %77 = load i8, i8* %is_internal, align 1, !dbg !17399, !tbaa !7995
  %78 = load %struct.ENTITY*, %struct.ENTITY** %newE, align 8, !dbg !17400, !tbaa !2289
  %is_internal67 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %78, i32 0, i32 10, !dbg !17401
  store i8 %77, i8* %is_internal67, align 1, !dbg !17402, !tbaa !7995
  store i32 0, i32* %cleanup.dest.slot, !dbg !17403
  br label %cleanup.68, !dbg !17403

cleanup.68:                                       ; preds = %if.end.65, %cleanup.62, %cleanup.49, %cleanup, %if.then.8, %if.then.4, %if.then
  %79 = bitcast %struct.ENTITY** %oldE to i8*, !dbg !17404
  call void @llvm.lifetime.end(i64 8, i8* %79) #2, !dbg !17404
  %80 = bitcast i8** %name to i8*, !dbg !17404
  call void @llvm.lifetime.end(i64 8, i8* %80) #2, !dbg !17404
  %81 = bitcast %struct.ENTITY** %newE to i8*, !dbg !17404
  call void @llvm.lifetime.end(i64 8, i8* %81) #2, !dbg !17404
  %cleanup.dest.71 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.71, label %cleanup.73 [
    i32 0, label %cleanup.cont.72
    i32 2, label %for.end
  ]

cleanup.cont.72:                                  ; preds = %cleanup.68
  br label %for.cond, !dbg !17406

for.end:                                          ; preds = %cleanup.68
  store i32 1, i32* %retval, !dbg !17407
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.73, !dbg !17407

cleanup.73:                                       ; preds = %for.end, %cleanup.68
  %82 = bitcast i8** %cachedNewBase to i8*, !dbg !17408
  call void @llvm.lifetime.end(i64 8, i8* %82) #2, !dbg !17408
  %83 = bitcast i8** %cachedOldBase to i8*, !dbg !17408
  call void @llvm.lifetime.end(i64 8, i8* %83) #2, !dbg !17408
  %84 = bitcast %struct.HASH_TABLE_ITER* %iter to i8*, !dbg !17408
  call void @llvm.lifetime.end(i64 16, i8* %84) #2, !dbg !17408
  %85 = load i32, i32* %retval, !dbg !17408
  ret i32 %85, !dbg !17408
}

; Function Attrs: nounwind uwtable
define internal i8* @poolCopyStringN(%struct.STRING_POOL* %pool, i8* %s, i32 %n) #0 {
entry:
  %retval = alloca i8*, align 8
  %pool.addr = alloca %struct.STRING_POOL*, align 8
  %s.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  store %struct.STRING_POOL* %pool, %struct.STRING_POOL** %pool.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata %struct.STRING_POOL** %pool.addr, metadata !2208, metadata !2293), !dbg !17409
  store i8* %s, i8** %s.addr, align 8, !tbaa !2289
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !2209, metadata !2293), !dbg !17410
  store i32 %n, i32* %n.addr, align 4, !tbaa !3391
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !2210, metadata !2293), !dbg !17411
  %0 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !17412, !tbaa !2289
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %0, i32 0, i32 3, !dbg !17414
  %1 = load i8*, i8** %ptr, align 8, !dbg !17414, !tbaa !2798
  %tobool = icmp ne i8* %1, null, !dbg !17412
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !17415

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !17416, !tbaa !2289
  %call = call zeroext i8 @poolGrow(%struct.STRING_POOL* %2), !dbg !17418
  %tobool1 = icmp ne i8 %call, 0, !dbg !17418
  br i1 %tobool1, label %if.end, label %if.then, !dbg !17419

if.then:                                          ; preds = %land.lhs.true
  store i8* null, i8** %retval, !dbg !17420
  br label %return, !dbg !17420

if.end:                                           ; preds = %land.lhs.true, %entry
  br label %for.cond, !dbg !17421

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %n.addr, align 4, !dbg !17422, !tbaa !3391
  %cmp = icmp sgt i32 %3, 0, !dbg !17427
  br i1 %cmp, label %for.body, label %for.end, !dbg !17428

for.body:                                         ; preds = %for.cond
  %4 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !17429, !tbaa !2289
  %ptr2 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %4, i32 0, i32 3, !dbg !17432
  %5 = load i8*, i8** %ptr2, align 8, !dbg !17432, !tbaa !2798
  %6 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !17433, !tbaa !2289
  %end = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %6, i32 0, i32 2, !dbg !17434
  %7 = load i8*, i8** %end, align 8, !dbg !17434, !tbaa !2802
  %cmp3 = icmp eq i8* %5, %7, !dbg !17435
  br i1 %cmp3, label %land.lhs.true.4, label %cond.false, !dbg !17436

land.lhs.true.4:                                  ; preds = %for.body
  %8 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !17437, !tbaa !2289
  %call5 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %8), !dbg !17439
  %tobool6 = icmp ne i8 %call5, 0, !dbg !17439
  br i1 %tobool6, label %cond.false, label %cond.true, !dbg !17440

cond.true:                                        ; preds = %land.lhs.true.4
  br i1 false, label %if.end.9, label %if.then.8, !dbg !17441

cond.false:                                       ; preds = %land.lhs.true.4, %for.body
  %9 = load i8*, i8** %s.addr, align 8, !dbg !17443, !tbaa !2289
  %10 = load i8, i8* %9, align 1, !dbg !17446, !tbaa !2307
  %11 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !17447, !tbaa !2289
  %ptr7 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %11, i32 0, i32 3, !dbg !17448
  %12 = load i8*, i8** %ptr7, align 8, !dbg !17449, !tbaa !2798
  %incdec.ptr = getelementptr i8, i8* %12, i32 1, !dbg !17449
  store i8* %incdec.ptr, i8** %ptr7, align 8, !dbg !17449, !tbaa !2798
  store i8 %10, i8* %12, align 1, !dbg !17450, !tbaa !2307
  br i1 true, label %if.end.9, label %if.then.8, !dbg !17440

if.then.8:                                        ; preds = %cond.false, %cond.true
  store i8* null, i8** %retval, !dbg !17451
  br label %return, !dbg !17451

if.end.9:                                         ; preds = %cond.false, %cond.true
  br label %for.inc, !dbg !17452

for.inc:                                          ; preds = %if.end.9
  %13 = load i32, i32* %n.addr, align 4, !dbg !17453, !tbaa !3391
  %dec = add i32 %13, -1, !dbg !17453
  store i32 %dec, i32* %n.addr, align 4, !dbg !17453, !tbaa !3391
  %14 = load i8*, i8** %s.addr, align 8, !dbg !17454, !tbaa !2289
  %incdec.ptr10 = getelementptr i8, i8* %14, i32 1, !dbg !17454
  store i8* %incdec.ptr10, i8** %s.addr, align 8, !dbg !17454, !tbaa !2289
  br label %for.cond, !dbg !17455

for.end:                                          ; preds = %for.cond
  %15 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !17456, !tbaa !2289
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %15, i32 0, i32 4, !dbg !17457
  %16 = load i8*, i8** %start, align 8, !dbg !17457, !tbaa !2794
  store i8* %16, i8** %s.addr, align 8, !dbg !17458, !tbaa !2289
  %17 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !17459, !tbaa !2289
  %ptr11 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %17, i32 0, i32 3, !dbg !17460
  %18 = load i8*, i8** %ptr11, align 8, !dbg !17460, !tbaa !2798
  %19 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !17461, !tbaa !2289
  %start12 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %19, i32 0, i32 4, !dbg !17462
  store i8* %18, i8** %start12, align 8, !dbg !17463, !tbaa !2794
  %20 = load i8*, i8** %s.addr, align 8, !dbg !17464, !tbaa !2289
  store i8* %20, i8** %retval, !dbg !17465
  br label %return, !dbg !17465

return:                                           ; preds = %for.end, %if.then.8, %if.then
  %21 = load i8*, i8** %retval, !dbg !17466
  ret i8* %21, !dbg !17466
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2285, !2286, !2287}
!llvm.ident = !{!2288}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.1 (https://github.com/llvm-mirror/clang.git 0dbefa1b83eb90f7a06b5df5df254ce32be3db4b) (git@github.com:kim-yoonseung/llvm.git e8e68907a8135028089af4d924da468e2b7257fa)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !155, subprograms: !657, globals: !2233)
!1 = !DIFile(filename: "xmlparse.c", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!2 = !{!3, !12, !18, !61, !67, !72, !77, !90}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "XML_Content_Type", file: !4, line: 101, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1/Modules/expat/expat.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!5 = !{!6, !7, !8, !9, !10, !11}
!6 = !DIEnumerator(name: "XML_CTYPE_EMPTY", value: 1)
!7 = !DIEnumerator(name: "XML_CTYPE_ANY", value: 2)
!8 = !DIEnumerator(name: "XML_CTYPE_MIXED", value: 3)
!9 = !DIEnumerator(name: "XML_CTYPE_NAME", value: 4)
!10 = !DIEnumerator(name: "XML_CTYPE_CHOICE", value: 5)
!11 = !DIEnumerator(name: "XML_CTYPE_SEQ", value: 6)
!12 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "XML_Content_Quant", file: !4, line: 110, size: 32, align: 32, elements: !13)
!13 = !{!14, !15, !16, !17}
!14 = !DIEnumerator(name: "XML_CQUANT_NONE", value: 0)
!15 = !DIEnumerator(name: "XML_CQUANT_OPT", value: 1)
!16 = !DIEnumerator(name: "XML_CQUANT_REP", value: 2)
!17 = !DIEnumerator(name: "XML_CQUANT_PLUS", value: 3)
!18 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "XML_Error", file: !4, line: 54, size: 32, align: 32, elements: !19)
!19 = !{!20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60}
!20 = !DIEnumerator(name: "XML_ERROR_NONE", value: 0)
!21 = !DIEnumerator(name: "XML_ERROR_NO_MEMORY", value: 1)
!22 = !DIEnumerator(name: "XML_ERROR_SYNTAX", value: 2)
!23 = !DIEnumerator(name: "XML_ERROR_NO_ELEMENTS", value: 3)
!24 = !DIEnumerator(name: "XML_ERROR_INVALID_TOKEN", value: 4)
!25 = !DIEnumerator(name: "XML_ERROR_UNCLOSED_TOKEN", value: 5)
!26 = !DIEnumerator(name: "XML_ERROR_PARTIAL_CHAR", value: 6)
!27 = !DIEnumerator(name: "XML_ERROR_TAG_MISMATCH", value: 7)
!28 = !DIEnumerator(name: "XML_ERROR_DUPLICATE_ATTRIBUTE", value: 8)
!29 = !DIEnumerator(name: "XML_ERROR_JUNK_AFTER_DOC_ELEMENT", value: 9)
!30 = !DIEnumerator(name: "XML_ERROR_PARAM_ENTITY_REF", value: 10)
!31 = !DIEnumerator(name: "XML_ERROR_UNDEFINED_ENTITY", value: 11)
!32 = !DIEnumerator(name: "XML_ERROR_RECURSIVE_ENTITY_REF", value: 12)
!33 = !DIEnumerator(name: "XML_ERROR_ASYNC_ENTITY", value: 13)
!34 = !DIEnumerator(name: "XML_ERROR_BAD_CHAR_REF", value: 14)
!35 = !DIEnumerator(name: "XML_ERROR_BINARY_ENTITY_REF", value: 15)
!36 = !DIEnumerator(name: "XML_ERROR_ATTRIBUTE_EXTERNAL_ENTITY_REF", value: 16)
!37 = !DIEnumerator(name: "XML_ERROR_MISPLACED_XML_PI", value: 17)
!38 = !DIEnumerator(name: "XML_ERROR_UNKNOWN_ENCODING", value: 18)
!39 = !DIEnumerator(name: "XML_ERROR_INCORRECT_ENCODING", value: 19)
!40 = !DIEnumerator(name: "XML_ERROR_UNCLOSED_CDATA_SECTION", value: 20)
!41 = !DIEnumerator(name: "XML_ERROR_EXTERNAL_ENTITY_HANDLING", value: 21)
!42 = !DIEnumerator(name: "XML_ERROR_NOT_STANDALONE", value: 22)
!43 = !DIEnumerator(name: "XML_ERROR_UNEXPECTED_STATE", value: 23)
!44 = !DIEnumerator(name: "XML_ERROR_ENTITY_DECLARED_IN_PE", value: 24)
!45 = !DIEnumerator(name: "XML_ERROR_FEATURE_REQUIRES_XML_DTD", value: 25)
!46 = !DIEnumerator(name: "XML_ERROR_CANT_CHANGE_FEATURE_ONCE_PARSING", value: 26)
!47 = !DIEnumerator(name: "XML_ERROR_UNBOUND_PREFIX", value: 27)
!48 = !DIEnumerator(name: "XML_ERROR_UNDECLARING_PREFIX", value: 28)
!49 = !DIEnumerator(name: "XML_ERROR_INCOMPLETE_PE", value: 29)
!50 = !DIEnumerator(name: "XML_ERROR_XML_DECL", value: 30)
!51 = !DIEnumerator(name: "XML_ERROR_TEXT_DECL", value: 31)
!52 = !DIEnumerator(name: "XML_ERROR_PUBLICID", value: 32)
!53 = !DIEnumerator(name: "XML_ERROR_SUSPENDED", value: 33)
!54 = !DIEnumerator(name: "XML_ERROR_NOT_SUSPENDED", value: 34)
!55 = !DIEnumerator(name: "XML_ERROR_ABORTED", value: 35)
!56 = !DIEnumerator(name: "XML_ERROR_FINISHED", value: 36)
!57 = !DIEnumerator(name: "XML_ERROR_SUSPEND_PE", value: 37)
!58 = !DIEnumerator(name: "XML_ERROR_RESERVED_PREFIX_XML", value: 38)
!59 = !DIEnumerator(name: "XML_ERROR_RESERVED_PREFIX_XMLNS", value: 39)
!60 = !DIEnumerator(name: "XML_ERROR_RESERVED_NAMESPACE_URI", value: 40)
!61 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "XML_Parsing", file: !4, line: 835, size: 32, align: 32, elements: !62)
!62 = !{!63, !64, !65, !66}
!63 = !DIEnumerator(name: "XML_INITIALIZED", value: 0)
!64 = !DIEnumerator(name: "XML_PARSING", value: 1)
!65 = !DIEnumerator(name: "XML_FINISHED", value: 2)
!66 = !DIEnumerator(name: "XML_SUSPENDED", value: 3)
!67 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "XML_ParamEntityParsing", file: !4, line: 876, size: 32, align: 32, elements: !68)
!68 = !{!69, !70, !71}
!69 = !DIEnumerator(name: "XML_PARAM_ENTITY_PARSING_NEVER", value: 0)
!70 = !DIEnumerator(name: "XML_PARAM_ENTITY_PARSING_UNLESS_STANDALONE", value: 1)
!71 = !DIEnumerator(name: "XML_PARAM_ENTITY_PARSING_ALWAYS", value: 2)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "XML_Status", file: !4, line: 45, size: 32, align: 32, elements: !73)
!73 = !{!74, !75, !76}
!74 = !DIEnumerator(name: "XML_STATUS_ERROR", value: 0)
!75 = !DIEnumerator(name: "XML_STATUS_OK", value: 1)
!76 = !DIEnumerator(name: "XML_STATUS_SUSPENDED", value: 2)
!77 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "XML_FeatureEnum", file: !4, line: 1011, size: 32, align: 32, elements: !78)
!78 = !{!79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89}
!79 = !DIEnumerator(name: "XML_FEATURE_END", value: 0)
!80 = !DIEnumerator(name: "XML_FEATURE_UNICODE", value: 1)
!81 = !DIEnumerator(name: "XML_FEATURE_UNICODE_WCHAR_T", value: 2)
!82 = !DIEnumerator(name: "XML_FEATURE_DTD", value: 3)
!83 = !DIEnumerator(name: "XML_FEATURE_CONTEXT_BYTES", value: 4)
!84 = !DIEnumerator(name: "XML_FEATURE_MIN_SIZE", value: 5)
!85 = !DIEnumerator(name: "XML_FEATURE_SIZEOF_XML_CHAR", value: 6)
!86 = !DIEnumerator(name: "XML_FEATURE_SIZEOF_XML_LCHAR", value: 7)
!87 = !DIEnumerator(name: "XML_FEATURE_NS", value: 8)
!88 = !DIEnumerator(name: "XML_FEATURE_LARGE_SIZE", value: 9)
!89 = !DIEnumerator(name: "XML_FEATURE_ATTR_INFO", value: 10)
!90 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !91, line: 20, size: 32, align: 32, elements: !92)
!91 = !DIFile(filename: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1/Modules/expat/xmlrole.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!92 = !{!93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154}
!93 = !DIEnumerator(name: "XML_ROLE_ERROR", value: -1)
!94 = !DIEnumerator(name: "XML_ROLE_NONE", value: 0)
!95 = !DIEnumerator(name: "XML_ROLE_XML_DECL", value: 1)
!96 = !DIEnumerator(name: "XML_ROLE_INSTANCE_START", value: 2)
!97 = !DIEnumerator(name: "XML_ROLE_DOCTYPE_NONE", value: 3)
!98 = !DIEnumerator(name: "XML_ROLE_DOCTYPE_NAME", value: 4)
!99 = !DIEnumerator(name: "XML_ROLE_DOCTYPE_SYSTEM_ID", value: 5)
!100 = !DIEnumerator(name: "XML_ROLE_DOCTYPE_PUBLIC_ID", value: 6)
!101 = !DIEnumerator(name: "XML_ROLE_DOCTYPE_INTERNAL_SUBSET", value: 7)
!102 = !DIEnumerator(name: "XML_ROLE_DOCTYPE_CLOSE", value: 8)
!103 = !DIEnumerator(name: "XML_ROLE_GENERAL_ENTITY_NAME", value: 9)
!104 = !DIEnumerator(name: "XML_ROLE_PARAM_ENTITY_NAME", value: 10)
!105 = !DIEnumerator(name: "XML_ROLE_ENTITY_NONE", value: 11)
!106 = !DIEnumerator(name: "XML_ROLE_ENTITY_VALUE", value: 12)
!107 = !DIEnumerator(name: "XML_ROLE_ENTITY_SYSTEM_ID", value: 13)
!108 = !DIEnumerator(name: "XML_ROLE_ENTITY_PUBLIC_ID", value: 14)
!109 = !DIEnumerator(name: "XML_ROLE_ENTITY_COMPLETE", value: 15)
!110 = !DIEnumerator(name: "XML_ROLE_ENTITY_NOTATION_NAME", value: 16)
!111 = !DIEnumerator(name: "XML_ROLE_NOTATION_NONE", value: 17)
!112 = !DIEnumerator(name: "XML_ROLE_NOTATION_NAME", value: 18)
!113 = !DIEnumerator(name: "XML_ROLE_NOTATION_SYSTEM_ID", value: 19)
!114 = !DIEnumerator(name: "XML_ROLE_NOTATION_NO_SYSTEM_ID", value: 20)
!115 = !DIEnumerator(name: "XML_ROLE_NOTATION_PUBLIC_ID", value: 21)
!116 = !DIEnumerator(name: "XML_ROLE_ATTRIBUTE_NAME", value: 22)
!117 = !DIEnumerator(name: "XML_ROLE_ATTRIBUTE_TYPE_CDATA", value: 23)
!118 = !DIEnumerator(name: "XML_ROLE_ATTRIBUTE_TYPE_ID", value: 24)
!119 = !DIEnumerator(name: "XML_ROLE_ATTRIBUTE_TYPE_IDREF", value: 25)
!120 = !DIEnumerator(name: "XML_ROLE_ATTRIBUTE_TYPE_IDREFS", value: 26)
!121 = !DIEnumerator(name: "XML_ROLE_ATTRIBUTE_TYPE_ENTITY", value: 27)
!122 = !DIEnumerator(name: "XML_ROLE_ATTRIBUTE_TYPE_ENTITIES", value: 28)
!123 = !DIEnumerator(name: "XML_ROLE_ATTRIBUTE_TYPE_NMTOKEN", value: 29)
!124 = !DIEnumerator(name: "XML_ROLE_ATTRIBUTE_TYPE_NMTOKENS", value: 30)
!125 = !DIEnumerator(name: "XML_ROLE_ATTRIBUTE_ENUM_VALUE", value: 31)
!126 = !DIEnumerator(name: "XML_ROLE_ATTRIBUTE_NOTATION_VALUE", value: 32)
!127 = !DIEnumerator(name: "XML_ROLE_ATTLIST_NONE", value: 33)
!128 = !DIEnumerator(name: "XML_ROLE_ATTLIST_ELEMENT_NAME", value: 34)
!129 = !DIEnumerator(name: "XML_ROLE_IMPLIED_ATTRIBUTE_VALUE", value: 35)
!130 = !DIEnumerator(name: "XML_ROLE_REQUIRED_ATTRIBUTE_VALUE", value: 36)
!131 = !DIEnumerator(name: "XML_ROLE_DEFAULT_ATTRIBUTE_VALUE", value: 37)
!132 = !DIEnumerator(name: "XML_ROLE_FIXED_ATTRIBUTE_VALUE", value: 38)
!133 = !DIEnumerator(name: "XML_ROLE_ELEMENT_NONE", value: 39)
!134 = !DIEnumerator(name: "XML_ROLE_ELEMENT_NAME", value: 40)
!135 = !DIEnumerator(name: "XML_ROLE_CONTENT_ANY", value: 41)
!136 = !DIEnumerator(name: "XML_ROLE_CONTENT_EMPTY", value: 42)
!137 = !DIEnumerator(name: "XML_ROLE_CONTENT_PCDATA", value: 43)
!138 = !DIEnumerator(name: "XML_ROLE_GROUP_OPEN", value: 44)
!139 = !DIEnumerator(name: "XML_ROLE_GROUP_CLOSE", value: 45)
!140 = !DIEnumerator(name: "XML_ROLE_GROUP_CLOSE_REP", value: 46)
!141 = !DIEnumerator(name: "XML_ROLE_GROUP_CLOSE_OPT", value: 47)
!142 = !DIEnumerator(name: "XML_ROLE_GROUP_CLOSE_PLUS", value: 48)
!143 = !DIEnumerator(name: "XML_ROLE_GROUP_CHOICE", value: 49)
!144 = !DIEnumerator(name: "XML_ROLE_GROUP_SEQUENCE", value: 50)
!145 = !DIEnumerator(name: "XML_ROLE_CONTENT_ELEMENT", value: 51)
!146 = !DIEnumerator(name: "XML_ROLE_CONTENT_ELEMENT_REP", value: 52)
!147 = !DIEnumerator(name: "XML_ROLE_CONTENT_ELEMENT_OPT", value: 53)
!148 = !DIEnumerator(name: "XML_ROLE_CONTENT_ELEMENT_PLUS", value: 54)
!149 = !DIEnumerator(name: "XML_ROLE_PI", value: 55)
!150 = !DIEnumerator(name: "XML_ROLE_COMMENT", value: 56)
!151 = !DIEnumerator(name: "XML_ROLE_TEXT_DECL", value: 57)
!152 = !DIEnumerator(name: "XML_ROLE_IGNORE_SECT", value: 58)
!153 = !DIEnumerator(name: "XML_ROLE_INNER_PARAM_ENTITY_REF", value: 59)
!154 = !DIEnumerator(name: "XML_ROLE_PARAM_ENTITY_REF", value: 60)
!155 = !{!156, !158, !159, !221, !167, !653, !358, !200, !525, !445, !595, !293, !178, !534, !180, !157, !535, !201, !598, !654, !655, !210, !479, !473, !627, !521, !485, !513, !554, !579, !436}
!156 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_Bool", file: !4, line: 28, baseType: !157)
!157 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!159 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_Parser", file: !4, line: 25, baseType: !160)
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 64, align: 64)
!161 = !DICompositeType(tag: DW_TAG_structure_type, name: "XML_ParserStruct", file: !162, line: 459, size: 7488, align: 64, elements: !163)
!162 = !DIFile(filename: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1/Modules/expat/xmlparse.c", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!163 = !{!164, !165, !166, !169, !189, !192, !193, !194, !198, !199, !202, !203, !211, !216, !222, !227, !229, !231, !233, !235, !240, !242, !247, !252, !254, !256, !261, !266, !267, !269, !288, !303, !308, !313, !318, !397, !404, !405, !406, !407, !408, !409, !410, !411, !412, !426, !431, !432, !433, !434, !435, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !520, !522, !523, !524, !596, !597, !619, !620, !621, !622, !623, !624, !625, !626, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !649, !650, !651, !652}
!164 = !DIDerivedType(tag: DW_TAG_member, name: "m_userData", scope: !161, file: !162, line: 462, baseType: !158, size: 64, align: 64)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "m_handlerArg", scope: !161, file: !162, line: 463, baseType: !158, size: 64, align: 64, offset: 64)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "m_buffer", scope: !161, file: !162, line: 464, baseType: !167, size: 64, align: 64, offset: 128)
!167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 64, align: 64)
!168 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "m_mem", scope: !161, file: !162, line: 465, baseType: !170, size: 192, align: 64, offset: 192)
!170 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !171)
!171 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_Memory_Handling_Suite", file: !4, line: 200, baseType: !172)
!172 = !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 196, size: 192, align: 64, elements: !173)
!173 = !{!174, !181, !185}
!174 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_fcn", scope: !172, file: !4, line: 197, baseType: !175, size: 64, align: 64)
!175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 64, align: 64)
!176 = !DISubroutineType(types: !177)
!177 = !{!158, !178}
!178 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !179, line: 62, baseType: !180)
!179 = !DIFile(filename: "/opt/devel/yoonseung.kim/llvm_work/build/bin/../lib/clang/3.7.1/include/stddef.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!180 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "realloc_fcn", scope: !172, file: !4, line: 198, baseType: !182, size: 64, align: 64, offset: 64)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64, align: 64)
!183 = !DISubroutineType(types: !184)
!184 = !{!158, !158, !178}
!185 = !DIDerivedType(tag: DW_TAG_member, name: "free_fcn", scope: !172, file: !4, line: 199, baseType: !186, size: 64, align: 64, offset: 128)
!186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !187, size: 64, align: 64)
!187 = !DISubroutineType(types: !188)
!188 = !{null, !158}
!189 = !DIDerivedType(tag: DW_TAG_member, name: "m_bufferPtr", scope: !161, file: !162, line: 467, baseType: !190, size: 64, align: 64, offset: 384)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64, align: 64)
!191 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !168)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "m_bufferEnd", scope: !161, file: !162, line: 469, baseType: !167, size: 64, align: 64, offset: 448)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "m_bufferLim", scope: !161, file: !162, line: 471, baseType: !190, size: 64, align: 64, offset: 512)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "m_parseEndByteIndex", scope: !161, file: !162, line: 472, baseType: !195, size: 64, align: 64, offset: 576)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_Index", file: !196, line: 111, baseType: !197)
!196 = !DIFile(filename: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1/Modules/expat/expat_external.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!197 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "m_parseEndPtr", scope: !161, file: !162, line: 473, baseType: !190, size: 64, align: 64, offset: 640)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "m_dataBuf", scope: !161, file: !162, line: 474, baseType: !200, size: 64, align: 64, offset: 704)
!200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 64, align: 64)
!201 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_Char", file: !196, line: 98, baseType: !168)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "m_dataBufEnd", scope: !161, file: !162, line: 475, baseType: !200, size: 64, align: 64, offset: 768)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "m_startElementHandler", scope: !161, file: !162, line: 476, baseType: !204, size: 64, align: 64, offset: 832)
!204 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_StartElementHandler", file: !4, line: 252, baseType: !205)
!205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !206, size: 64, align: 64)
!206 = !DISubroutineType(types: !207)
!207 = !{null, !158, !208, !210}
!208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !209, size: 64, align: 64)
!209 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !201)
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 64, align: 64)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "m_endElementHandler", scope: !161, file: !162, line: 477, baseType: !212, size: 64, align: 64, offset: 896)
!212 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_EndElementHandler", file: !4, line: 256, baseType: !213)
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 64, align: 64)
!214 = !DISubroutineType(types: !215)
!215 = !{null, !158, !208}
!216 = !DIDerivedType(tag: DW_TAG_member, name: "m_characterDataHandler", scope: !161, file: !162, line: 478, baseType: !217, size: 64, align: 64, offset: 960)
!217 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_CharacterDataHandler", file: !4, line: 261, baseType: !218)
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !219, size: 64, align: 64)
!219 = !DISubroutineType(types: !220)
!220 = !{null, !158, !208, !221}
!221 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "m_processingInstructionHandler", scope: !161, file: !162, line: 479, baseType: !223, size: 64, align: 64, offset: 1024)
!223 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_ProcessingInstructionHandler", file: !4, line: 266, baseType: !224)
!224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !225, size: 64, align: 64)
!225 = !DISubroutineType(types: !226)
!226 = !{null, !158, !208, !208}
!227 = !DIDerivedType(tag: DW_TAG_member, name: "m_commentHandler", scope: !161, file: !162, line: 480, baseType: !228, size: 64, align: 64, offset: 1088)
!228 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_CommentHandler", file: !4, line: 272, baseType: !213)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "m_startCdataSectionHandler", scope: !161, file: !162, line: 481, baseType: !230, size: 64, align: 64, offset: 1152)
!230 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_StartCdataSectionHandler", file: !4, line: 275, baseType: !186)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "m_endCdataSectionHandler", scope: !161, file: !162, line: 482, baseType: !232, size: 64, align: 64, offset: 1216)
!232 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_EndCdataSectionHandler", file: !4, line: 276, baseType: !186)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "m_defaultHandler", scope: !161, file: !162, line: 483, baseType: !234, size: 64, align: 64, offset: 1280)
!234 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_DefaultHandler", file: !4, line: 291, baseType: !218)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "m_startDoctypeDeclHandler", scope: !161, file: !162, line: 484, baseType: !236, size: 64, align: 64, offset: 1344)
!236 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_StartDoctypeDeclHandler", file: !4, line: 298, baseType: !237)
!237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !238, size: 64, align: 64)
!238 = !DISubroutineType(types: !239)
!239 = !{null, !158, !208, !208, !208, !221}
!240 = !DIDerivedType(tag: DW_TAG_member, name: "m_endDoctypeDeclHandler", scope: !161, file: !162, line: 485, baseType: !241, size: 64, align: 64, offset: 1408)
!241 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_EndDoctypeDeclHandler", file: !4, line: 309, baseType: !186)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "m_unparsedEntityDeclHandler", scope: !161, file: !162, line: 486, baseType: !243, size: 64, align: 64, offset: 1472)
!243 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_UnparsedEntityDeclHandler", file: !4, line: 353, baseType: !244)
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 64, align: 64)
!245 = !DISubroutineType(types: !246)
!246 = !{null, !158, !208, !208, !208, !208, !208}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "m_notationDeclHandler", scope: !161, file: !162, line: 487, baseType: !248, size: 64, align: 64, offset: 1536)
!248 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_NotationDeclHandler", file: !4, line: 365, baseType: !249)
!249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !250, size: 64, align: 64)
!250 = !DISubroutineType(types: !251)
!251 = !{null, !158, !208, !208, !208, !208}
!252 = !DIDerivedType(tag: DW_TAG_member, name: "m_startNamespaceDeclHandler", scope: !161, file: !162, line: 488, baseType: !253, size: 64, align: 64, offset: 1600)
!253 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_StartNamespaceDeclHandler", file: !4, line: 378, baseType: !224)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "m_endNamespaceDeclHandler", scope: !161, file: !162, line: 489, baseType: !255, size: 64, align: 64, offset: 1664)
!255 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_EndNamespaceDeclHandler", file: !4, line: 383, baseType: !213)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "m_notStandaloneHandler", scope: !161, file: !162, line: 490, baseType: !257, size: 64, align: 64, offset: 1728)
!257 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_NotStandaloneHandler", file: !4, line: 396, baseType: !258)
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !259, size: 64, align: 64)
!259 = !DISubroutineType(types: !260)
!260 = !{!221, !158}
!261 = !DIDerivedType(tag: DW_TAG_member, name: "m_externalEntityRefHandler", scope: !161, file: !162, line: 491, baseType: !262, size: 64, align: 64, offset: 1792)
!262 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_ExternalEntityRefHandler", file: !4, line: 432, baseType: !263)
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 64, align: 64)
!264 = !DISubroutineType(types: !265)
!265 = !{!221, !159, !208, !208, !208, !208}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "m_externalEntityRefHandlerArg", scope: !161, file: !162, line: 492, baseType: !159, size: 64, align: 64, offset: 1856)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "m_skippedEntityHandler", scope: !161, file: !162, line: 493, baseType: !268, size: 64, align: 64, offset: 1920)
!268 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_SkippedEntityHandler", file: !4, line: 449, baseType: !218)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "m_unknownEncodingHandler", scope: !161, file: !162, line: 494, baseType: !270, size: 64, align: 64, offset: 1984)
!270 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_UnknownEncodingHandler", file: !4, line: 528, baseType: !271)
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 64, align: 64)
!272 = !DISubroutineType(types: !273)
!273 = !{!221, !158, !208, !274}
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 64, align: 64)
!275 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_Encoding", file: !4, line: 511, baseType: !276)
!276 = !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 506, size: 8384, align: 64, elements: !277)
!277 = !{!278, !282, !283, !287}
!278 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !276, file: !4, line: 507, baseType: !279, size: 8192, align: 32)
!279 = !DICompositeType(tag: DW_TAG_array_type, baseType: !221, size: 8192, align: 32, elements: !280)
!280 = !{!281}
!281 = !DISubrange(count: 256)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !276, file: !4, line: 508, baseType: !158, size: 64, align: 64, offset: 8192)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "convert", scope: !276, file: !4, line: 509, baseType: !284, size: 64, align: 64, offset: 8256)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64, align: 64)
!285 = !DISubroutineType(types: !286)
!286 = !{!221, !158, !190}
!287 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !276, file: !4, line: 510, baseType: !186, size: 64, align: 64, offset: 8320)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "m_elementDeclHandler", scope: !161, file: !162, line: 495, baseType: !289, size: 64, align: 64, offset: 2048)
!289 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_ElementDeclHandler", file: !4, line: 150, baseType: !290)
!290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 64, align: 64)
!291 = !DISubroutineType(types: !292)
!292 = !{null, !158, !208, !293}
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !294, size: 64, align: 64)
!294 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_Content", file: !4, line: 135, baseType: !295)
!295 = !DICompositeType(tag: DW_TAG_structure_type, name: "XML_cp", file: !4, line: 137, size: 256, align: 64, elements: !296)
!296 = !{!297, !298, !299, !300, !302}
!297 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !295, file: !4, line: 138, baseType: !3, size: 32, align: 32)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "quant", scope: !295, file: !4, line: 139, baseType: !12, size: 32, align: 32, offset: 32)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !295, file: !4, line: 140, baseType: !200, size: 64, align: 64, offset: 64)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "numchildren", scope: !295, file: !4, line: 141, baseType: !301, size: 32, align: 32, offset: 128)
!301 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !295, file: !4, line: 142, baseType: !293, size: 64, align: 64, offset: 192)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "m_attlistDeclHandler", scope: !161, file: !162, line: 496, baseType: !304, size: 64, align: 64, offset: 2112)
!304 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_AttlistDeclHandler", file: !4, line: 166, baseType: !305)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 64, align: 64)
!306 = !DISubroutineType(types: !307)
!307 = !{null, !158, !208, !208, !208, !208, !221}
!308 = !DIDerivedType(tag: DW_TAG_member, name: "m_entityDeclHandler", scope: !161, file: !162, line: 497, baseType: !309, size: 64, align: 64, offset: 2176)
!309 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_EntityDeclHandler", file: !4, line: 329, baseType: !310)
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 64, align: 64)
!311 = !DISubroutineType(types: !312)
!312 = !{null, !158, !208, !221, !208, !221, !208, !208, !208, !208}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "m_xmlDeclHandler", scope: !161, file: !162, line: 498, baseType: !314, size: 64, align: 64, offset: 2240)
!314 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_XmlDeclHandler", file: !4, line: 186, baseType: !315)
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 64, align: 64)
!316 = !DISubroutineType(types: !317)
!317 = !{null, !158, !208, !208, !221}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "m_encoding", scope: !161, file: !162, line: 499, baseType: !319, size: 64, align: 64, offset: 2304)
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64, align: 64)
!320 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !321)
!321 = !DIDerivedType(tag: DW_TAG_typedef, name: "ENCODING", file: !322, line: 126, baseType: !323)
!322 = !DIFile(filename: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1/Modules/expat/xmltok.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!323 = !DICompositeType(tag: DW_TAG_structure_type, name: "encoding", file: !322, line: 133, size: 1152, align: 64, elements: !324)
!324 = !{!325, !334, !338, !342, !346, !350, !354, !366, !367, !368, !379, !380, !385, !394, !395, !396}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "scanners", scope: !323, file: !322, line: 134, baseType: !326, size: 256, align: 64)
!326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !327, size: 256, align: 64, elements: !332)
!327 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCANNER", file: !322, line: 128, baseType: !328)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 64, align: 64)
!329 = !DISubroutineType(types: !330)
!330 = !{!221, !319, !190, !190, !331}
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !190, size: 64, align: 64)
!332 = !{!333}
!333 = !DISubrange(count: 4)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "literalScanners", scope: !323, file: !322, line: 135, baseType: !335, size: 128, align: 64, offset: 256)
!335 = !DICompositeType(tag: DW_TAG_array_type, baseType: !327, size: 128, align: 64, elements: !336)
!336 = !{!337}
!337 = !DISubrange(count: 2)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "sameName", scope: !323, file: !322, line: 136, baseType: !339, size: 64, align: 64, offset: 384)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64, align: 64)
!340 = !DISubroutineType(types: !341)
!341 = !{!221, !319, !190, !190}
!342 = !DIDerivedType(tag: DW_TAG_member, name: "nameMatchesAscii", scope: !323, file: !322, line: 139, baseType: !343, size: 64, align: 64, offset: 448)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 64, align: 64)
!344 = !DISubroutineType(types: !345)
!345 = !{!221, !319, !190, !190, !190}
!346 = !DIDerivedType(tag: DW_TAG_member, name: "nameLength", scope: !323, file: !322, line: 143, baseType: !347, size: 64, align: 64, offset: 512)
!347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !348, size: 64, align: 64)
!348 = !DISubroutineType(types: !349)
!349 = !{!221, !319, !190}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "skipS", scope: !323, file: !322, line: 144, baseType: !351, size: 64, align: 64, offset: 576)
!351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 64, align: 64)
!352 = !DISubroutineType(types: !353)
!353 = !{!190, !319, !190}
!354 = !DIDerivedType(tag: DW_TAG_member, name: "getAtts", scope: !323, file: !322, line: 145, baseType: !355, size: 64, align: 64, offset: 640)
!355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !356, size: 64, align: 64)
!356 = !DISubroutineType(types: !357)
!357 = !{!221, !319, !190, !221, !358}
!358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !359, size: 64, align: 64)
!359 = !DIDerivedType(tag: DW_TAG_typedef, name: "ATTRIBUTE", file: !322, line: 123, baseType: !360)
!360 = !DICompositeType(tag: DW_TAG_structure_type, file: !322, line: 118, size: 256, align: 64, elements: !361)
!361 = !{!362, !363, !364, !365}
!362 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !360, file: !322, line: 119, baseType: !190, size: 64, align: 64)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "valuePtr", scope: !360, file: !322, line: 120, baseType: !190, size: 64, align: 64, offset: 64)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "valueEnd", scope: !360, file: !322, line: 121, baseType: !190, size: 64, align: 64, offset: 128)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "normalized", scope: !360, file: !322, line: 122, baseType: !168, size: 8, align: 8, offset: 192)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "charRefNumber", scope: !323, file: !322, line: 149, baseType: !347, size: 64, align: 64, offset: 704)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "predefinedEntityName", scope: !323, file: !322, line: 150, baseType: !339, size: 64, align: 64, offset: 768)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "updatePosition", scope: !323, file: !322, line: 153, baseType: !369, size: 64, align: 64, offset: 832)
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 64, align: 64)
!370 = !DISubroutineType(types: !371)
!371 = !{null, !319, !190, !190, !372}
!372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !373, size: 64, align: 64)
!373 = !DIDerivedType(tag: DW_TAG_typedef, name: "POSITION", file: !322, line: 116, baseType: !374)
!374 = !DICompositeType(tag: DW_TAG_structure_type, name: "position", file: !322, line: 112, size: 128, align: 64, elements: !375)
!375 = !{!376, !378}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "lineNumber", scope: !374, file: !322, line: 114, baseType: !377, size: 64, align: 64)
!377 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_Size", file: !196, line: 112, baseType: !180)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "columnNumber", scope: !374, file: !322, line: 115, baseType: !377, size: 64, align: 64, offset: 64)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "isPublicId", scope: !323, file: !322, line: 157, baseType: !328, size: 64, align: 64, offset: 896)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "utf8Convert", scope: !323, file: !322, line: 161, baseType: !381, size: 64, align: 64, offset: 960)
!381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !382, size: 64, align: 64)
!382 = !DISubroutineType(types: !383)
!383 = !{null, !319, !331, !190, !384, !190}
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 64, align: 64)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "utf16Convert", scope: !323, file: !322, line: 166, baseType: !386, size: 64, align: 64, offset: 1024)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 64, align: 64)
!387 = !DISubroutineType(types: !388)
!388 = !{null, !319, !331, !190, !389, !392}
!389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 64, align: 64)
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 64, align: 64)
!391 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 64, align: 64)
!393 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !391)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "minBytesPerChar", scope: !323, file: !322, line: 171, baseType: !221, size: 32, align: 32, offset: 1088)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "isUtf8", scope: !323, file: !322, line: 172, baseType: !168, size: 8, align: 8, offset: 1120)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "isUtf16", scope: !323, file: !322, line: 173, baseType: !168, size: 8, align: 8, offset: 1128)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "m_initEncoding", scope: !161, file: !162, line: 500, baseType: !398, size: 1216, align: 64, offset: 2368)
!398 = !DIDerivedType(tag: DW_TAG_typedef, name: "INIT_ENCODING", file: !322, line: 264, baseType: !399)
!399 = !DICompositeType(tag: DW_TAG_structure_type, file: !322, line: 261, size: 1216, align: 64, elements: !400)
!400 = !{!401, !402}
!401 = !DIDerivedType(tag: DW_TAG_member, name: "initEnc", scope: !399, file: !322, line: 262, baseType: !321, size: 1152, align: 64)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "encPtr", scope: !399, file: !322, line: 263, baseType: !403, size: 64, align: 64, offset: 1152)
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !319, size: 64, align: 64)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "m_internalEncoding", scope: !161, file: !162, line: 501, baseType: !319, size: 64, align: 64, offset: 3584)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "m_protocolEncodingName", scope: !161, file: !162, line: 502, baseType: !208, size: 64, align: 64, offset: 3648)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "m_ns", scope: !161, file: !162, line: 503, baseType: !156, size: 8, align: 8, offset: 3712)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "m_ns_triplets", scope: !161, file: !162, line: 504, baseType: !156, size: 8, align: 8, offset: 3720)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "m_unknownEncodingMem", scope: !161, file: !162, line: 505, baseType: !158, size: 64, align: 64, offset: 3776)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "m_unknownEncodingData", scope: !161, file: !162, line: 506, baseType: !158, size: 64, align: 64, offset: 3840)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "m_unknownEncodingHandlerData", scope: !161, file: !162, line: 507, baseType: !158, size: 64, align: 64, offset: 3904)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "m_unknownEncodingRelease", scope: !161, file: !162, line: 508, baseType: !186, size: 64, align: 64, offset: 3968)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "m_prologState", scope: !161, file: !162, line: 509, baseType: !413, size: 256, align: 64, offset: 4032)
!413 = !DIDerivedType(tag: DW_TAG_typedef, name: "PROLOG_STATE", file: !91, line: 100, baseType: !414)
!414 = !DICompositeType(tag: DW_TAG_structure_type, name: "prolog_state", file: !91, line: 87, size: 256, align: 64, elements: !415)
!415 = !{!416, !421, !422, !423, !424, !425}
!416 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !414, file: !91, line: 88, baseType: !417, size: 64, align: 64)
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 64, align: 64)
!418 = !DISubroutineType(types: !419)
!419 = !{!221, !420, !221, !190, !190, !319}
!420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 64, align: 64)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !414, file: !91, line: 93, baseType: !301, size: 32, align: 32, offset: 64)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "role_none", scope: !414, file: !91, line: 94, baseType: !221, size: 32, align: 32, offset: 96)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "includeLevel", scope: !414, file: !91, line: 96, baseType: !301, size: 32, align: 32, offset: 128)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "documentEntity", scope: !414, file: !91, line: 97, baseType: !221, size: 32, align: 32, offset: 160)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "inEntityValue", scope: !414, file: !91, line: 98, baseType: !221, size: 32, align: 32, offset: 192)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "m_processor", scope: !161, file: !162, line: 510, baseType: !427, size: 64, align: 64, offset: 4288)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !428, size: 64, align: 64)
!428 = !DIDerivedType(tag: DW_TAG_typedef, name: "Processor", file: !162, line: 300, baseType: !429)
!429 = !DISubroutineType(types: !430)
!430 = !{!18, !159, !190, !190, !331}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "m_errorCode", scope: !161, file: !162, line: 511, baseType: !18, size: 32, align: 32, offset: 4352)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "m_eventPtr", scope: !161, file: !162, line: 512, baseType: !190, size: 64, align: 64, offset: 4416)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "m_eventEndPtr", scope: !161, file: !162, line: 513, baseType: !190, size: 64, align: 64, offset: 4480)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "m_positionPtr", scope: !161, file: !162, line: 514, baseType: !190, size: 64, align: 64, offset: 4544)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "m_openInternalEntities", scope: !161, file: !162, line: 515, baseType: !436, size: 64, align: 64, offset: 4608)
!436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64, align: 64)
!437 = !DIDerivedType(tag: DW_TAG_typedef, name: "OPEN_INTERNAL_ENTITY", file: !162, line: 298, baseType: !438)
!438 = !DICompositeType(tag: DW_TAG_structure_type, name: "open_internal_entity", file: !162, line: 291, size: 320, align: 64, elements: !439)
!439 = !{!440, !441, !442, !444, !460, !461}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "internalEventPtr", scope: !438, file: !162, line: 292, baseType: !190, size: 64, align: 64)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "internalEventEndPtr", scope: !438, file: !162, line: 293, baseType: !190, size: 64, align: 64, offset: 64)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !438, file: !162, line: 294, baseType: !443, size: 64, align: 64, offset: 128)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 64, align: 64)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "entity", scope: !438, file: !162, line: 295, baseType: !445, size: 64, align: 64, offset: 192)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 64, align: 64)
!446 = !DIDerivedType(tag: DW_TAG_typedef, name: "ENTITY", file: !162, line: 203, baseType: !447)
!447 = !DICompositeType(tag: DW_TAG_structure_type, file: !162, line: 191, size: 512, align: 64, elements: !448)
!448 = !{!449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459}
!449 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !447, file: !162, line: 192, baseType: !208, size: 64, align: 64)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "textPtr", scope: !447, file: !162, line: 193, baseType: !208, size: 64, align: 64, offset: 64)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "textLen", scope: !447, file: !162, line: 194, baseType: !221, size: 32, align: 32, offset: 128)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "processed", scope: !447, file: !162, line: 195, baseType: !221, size: 32, align: 32, offset: 160)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "systemId", scope: !447, file: !162, line: 196, baseType: !208, size: 64, align: 64, offset: 192)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !447, file: !162, line: 197, baseType: !208, size: 64, align: 64, offset: 256)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "publicId", scope: !447, file: !162, line: 198, baseType: !208, size: 64, align: 64, offset: 320)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "notation", scope: !447, file: !162, line: 199, baseType: !208, size: 64, align: 64, offset: 384)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !447, file: !162, line: 200, baseType: !156, size: 8, align: 8, offset: 448)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "is_param", scope: !447, file: !162, line: 201, baseType: !156, size: 8, align: 8, offset: 456)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "is_internal", scope: !447, file: !162, line: 202, baseType: !156, size: 8, align: 8, offset: 464)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "startTagLevel", scope: !438, file: !162, line: 296, baseType: !221, size: 32, align: 32, offset: 256)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "betweenDecl", scope: !438, file: !162, line: 297, baseType: !156, size: 8, align: 8, offset: 288)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "m_freeInternalEntities", scope: !161, file: !162, line: 516, baseType: !436, size: 64, align: 64, offset: 4672)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "m_defaultExpandInternalEntities", scope: !161, file: !162, line: 517, baseType: !156, size: 8, align: 8, offset: 4736)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "m_tagLevel", scope: !161, file: !162, line: 518, baseType: !221, size: 32, align: 32, offset: 4768)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "m_declEntity", scope: !161, file: !162, line: 519, baseType: !445, size: 64, align: 64, offset: 4800)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "m_doctypeName", scope: !161, file: !162, line: 520, baseType: !208, size: 64, align: 64, offset: 4864)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "m_doctypeSysid", scope: !161, file: !162, line: 521, baseType: !208, size: 64, align: 64, offset: 4928)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "m_doctypePubid", scope: !161, file: !162, line: 522, baseType: !208, size: 64, align: 64, offset: 4992)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "m_declAttributeType", scope: !161, file: !162, line: 523, baseType: !208, size: 64, align: 64, offset: 5056)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "m_declNotationName", scope: !161, file: !162, line: 524, baseType: !208, size: 64, align: 64, offset: 5120)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "m_declNotationPublicId", scope: !161, file: !162, line: 525, baseType: !208, size: 64, align: 64, offset: 5184)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "m_declElementType", scope: !161, file: !162, line: 526, baseType: !473, size: 64, align: 64, offset: 5248)
!473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !474, size: 64, align: 64)
!474 = !DIDerivedType(tag: DW_TAG_typedef, name: "ELEMENT_TYPE", file: !162, line: 260, baseType: !475)
!475 = !DICompositeType(tag: DW_TAG_structure_type, file: !162, line: 253, size: 320, align: 64, elements: !476)
!476 = !{!477, !478, !506, !510, !511, !512}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !475, file: !162, line: 254, baseType: !208, size: 64, align: 64)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "prefix", scope: !475, file: !162, line: 255, baseType: !479, size: 64, align: 64, offset: 64)
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 64, align: 64)
!480 = !DIDerivedType(tag: DW_TAG_typedef, name: "PREFIX", file: !162, line: 157, baseType: !481)
!481 = !DICompositeType(tag: DW_TAG_structure_type, name: "prefix", file: !162, line: 154, size: 128, align: 64, elements: !482)
!482 = !{!483, !484}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !481, file: !162, line: 155, baseType: !208, size: 64, align: 64)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "binding", scope: !481, file: !162, line: 156, baseType: !485, size: 64, align: 64, offset: 64)
!485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 64, align: 64)
!486 = !DIDerivedType(tag: DW_TAG_typedef, name: "BINDING", file: !162, line: 152, baseType: !487)
!487 = !DICompositeType(tag: DW_TAG_structure_type, name: "binding", file: !162, line: 144, size: 384, align: 64, elements: !488)
!488 = !{!489, !491, !493, !494, !503, !504, !505}
!489 = !DIDerivedType(tag: DW_TAG_member, name: "prefix", scope: !487, file: !162, line: 145, baseType: !490, size: 64, align: 64)
!490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !481, size: 64, align: 64)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "nextTagBinding", scope: !487, file: !162, line: 146, baseType: !492, size: 64, align: 64, offset: 64)
!492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !487, size: 64, align: 64)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "prevPrefixBinding", scope: !487, file: !162, line: 147, baseType: !492, size: 64, align: 64, offset: 128)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "attId", scope: !487, file: !162, line: 148, baseType: !495, size: 64, align: 64, offset: 192)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 64, align: 64)
!496 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !497)
!497 = !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_id", file: !162, line: 234, size: 192, align: 64, elements: !498)
!498 = !{!499, !500, !501, !502}
!499 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !497, file: !162, line: 235, baseType: !200, size: 64, align: 64)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "prefix", scope: !497, file: !162, line: 236, baseType: !479, size: 64, align: 64, offset: 64)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "maybeTokenized", scope: !497, file: !162, line: 237, baseType: !156, size: 8, align: 8, offset: 128)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "xmlns", scope: !497, file: !162, line: 238, baseType: !156, size: 8, align: 8, offset: 136)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "uri", scope: !487, file: !162, line: 149, baseType: !200, size: 64, align: 64, offset: 256)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "uriLen", scope: !487, file: !162, line: 150, baseType: !221, size: 32, align: 32, offset: 320)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "uriAlloc", scope: !487, file: !162, line: 151, baseType: !221, size: 32, align: 32, offset: 352)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "idAtt", scope: !475, file: !162, line: 256, baseType: !507, size: 64, align: 64, offset: 128)
!507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !508, size: 64, align: 64)
!508 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !509)
!509 = !DIDerivedType(tag: DW_TAG_typedef, name: "ATTRIBUTE_ID", file: !162, line: 239, baseType: !497)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "nDefaultAtts", scope: !475, file: !162, line: 257, baseType: !221, size: 32, align: 32, offset: 192)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "allocDefaultAtts", scope: !475, file: !162, line: 258, baseType: !221, size: 32, align: 32, offset: 224)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "defaultAtts", scope: !475, file: !162, line: 259, baseType: !513, size: 64, align: 64, offset: 256)
!513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !514, size: 64, align: 64)
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "DEFAULT_ATTRIBUTE", file: !162, line: 245, baseType: !515)
!515 = !DICompositeType(tag: DW_TAG_structure_type, file: !162, line: 241, size: 192, align: 64, elements: !516)
!516 = !{!517, !518, !519}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !515, file: !162, line: 242, baseType: !507, size: 64, align: 64)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "isCdata", scope: !515, file: !162, line: 243, baseType: !156, size: 8, align: 8, offset: 64)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !515, file: !162, line: 244, baseType: !208, size: 64, align: 64, offset: 128)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "m_declAttributeId", scope: !161, file: !162, line: 527, baseType: !521, size: 64, align: 64, offset: 5312)
!521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !509, size: 64, align: 64)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "m_declAttributeIsCdata", scope: !161, file: !162, line: 528, baseType: !156, size: 8, align: 8, offset: 5376)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "m_declAttributeIsId", scope: !161, file: !162, line: 529, baseType: !156, size: 8, align: 8, offset: 5384)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "m_dtd", scope: !161, file: !162, line: 530, baseType: !525, size: 64, align: 64, offset: 5440)
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64, align: 64)
!526 = !DIDerivedType(tag: DW_TAG_typedef, name: "DTD", file: !162, line: 289, baseType: !527)
!527 = !DICompositeType(tag: DW_TAG_structure_type, file: !162, line: 262, size: 2880, align: 64, elements: !528)
!528 = !{!529, !546, !547, !548, !549, !570, !571, !572, !573, !574, !575, !576, !577, !578, !590, !591, !592, !593, !594}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "generalEntities", scope: !527, file: !162, line: 263, baseType: !530, size: 320, align: 64)
!530 = !DIDerivedType(tag: DW_TAG_typedef, name: "HASH_TABLE", file: !162, line: 103, baseType: !531)
!531 = !DICompositeType(tag: DW_TAG_structure_type, file: !162, line: 97, size: 320, align: 64, elements: !532)
!532 = !{!533, !541, !542, !543, !544}
!533 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !531, file: !162, line: 98, baseType: !534, size: 64, align: 64)
!534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !535, size: 64, align: 64)
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !536, size: 64, align: 64)
!536 = !DIDerivedType(tag: DW_TAG_typedef, name: "NAMED", file: !162, line: 95, baseType: !537)
!537 = !DICompositeType(tag: DW_TAG_structure_type, file: !162, line: 93, size: 64, align: 64, elements: !538)
!538 = !{!539}
!539 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !537, file: !162, line: 94, baseType: !540, size: 64, align: 64)
!540 = !DIDerivedType(tag: DW_TAG_typedef, name: "KEY", file: !162, line: 91, baseType: !208)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !531, file: !162, line: 99, baseType: !157, size: 8, align: 8, offset: 64)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !531, file: !162, line: 100, baseType: !178, size: 64, align: 64, offset: 128)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !531, file: !162, line: 101, baseType: !178, size: 64, align: 64, offset: 192)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !531, file: !162, line: 102, baseType: !545, size: 64, align: 64, offset: 256)
!545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 64, align: 64)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "elementTypes", scope: !527, file: !162, line: 264, baseType: !530, size: 320, align: 64, offset: 320)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "attributeIds", scope: !527, file: !162, line: 265, baseType: !530, size: 320, align: 64, offset: 640)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "prefixes", scope: !527, file: !162, line: 266, baseType: !530, size: 320, align: 64, offset: 960)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !527, file: !162, line: 267, baseType: !550, size: 384, align: 64, offset: 1280)
!550 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRING_POOL", file: !162, line: 230, baseType: !551)
!551 = !DICompositeType(tag: DW_TAG_structure_type, file: !162, line: 223, size: 384, align: 64, elements: !552)
!552 = !{!553, !565, !566, !567, !568, !569}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !551, file: !162, line: 224, baseType: !554, size: 64, align: 64)
!554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !555, size: 64, align: 64)
!555 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLOCK", file: !162, line: 221, baseType: !556)
!556 = !DICompositeType(tag: DW_TAG_structure_type, name: "block", file: !162, line: 217, size: 128, align: 64, elements: !557)
!557 = !{!558, !560, !561}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !556, file: !162, line: 218, baseType: !559, size: 64, align: 64)
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 64, align: 64)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !556, file: !162, line: 219, baseType: !221, size: 32, align: 32, offset: 64)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !556, file: !162, line: 220, baseType: !562, size: 8, align: 8, offset: 96)
!562 = !DICompositeType(tag: DW_TAG_array_type, baseType: !201, size: 8, align: 8, elements: !563)
!563 = !{!564}
!564 = !DISubrange(count: 1)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "freeBlocks", scope: !551, file: !162, line: 225, baseType: !554, size: 64, align: 64, offset: 64)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !551, file: !162, line: 226, baseType: !208, size: 64, align: 64, offset: 128)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !551, file: !162, line: 227, baseType: !200, size: 64, align: 64, offset: 192)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !551, file: !162, line: 228, baseType: !200, size: 64, align: 64, offset: 256)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !551, file: !162, line: 229, baseType: !545, size: 64, align: 64, offset: 320)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "entityValuePool", scope: !527, file: !162, line: 268, baseType: !550, size: 384, align: 64, offset: 1664)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "keepProcessing", scope: !527, file: !162, line: 270, baseType: !156, size: 8, align: 8, offset: 2048)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "hasParamEntityRefs", scope: !527, file: !162, line: 273, baseType: !156, size: 8, align: 8, offset: 2056)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "standalone", scope: !527, file: !162, line: 274, baseType: !156, size: 8, align: 8, offset: 2064)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "paramEntityRead", scope: !527, file: !162, line: 277, baseType: !156, size: 8, align: 8, offset: 2072)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "paramEntities", scope: !527, file: !162, line: 278, baseType: !530, size: 320, align: 64, offset: 2112)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "defaultPrefix", scope: !527, file: !162, line: 280, baseType: !480, size: 128, align: 64, offset: 2432)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "in_eldecl", scope: !527, file: !162, line: 282, baseType: !156, size: 8, align: 8, offset: 2560)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "scaffold", scope: !527, file: !162, line: 283, baseType: !579, size: 64, align: 64, offset: 2624)
!579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !580, size: 64, align: 64)
!580 = !DIDerivedType(tag: DW_TAG_typedef, name: "CONTENT_SCAFFOLD", file: !162, line: 213, baseType: !581)
!581 = !DICompositeType(tag: DW_TAG_structure_type, file: !162, line: 205, size: 256, align: 64, elements: !582)
!582 = !{!583, !584, !585, !586, !587, !588, !589}
!583 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !581, file: !162, line: 206, baseType: !3, size: 32, align: 32)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "quant", scope: !581, file: !162, line: 207, baseType: !12, size: 32, align: 32, offset: 32)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !581, file: !162, line: 208, baseType: !208, size: 64, align: 64, offset: 64)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "firstchild", scope: !581, file: !162, line: 209, baseType: !221, size: 32, align: 32, offset: 128)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "lastchild", scope: !581, file: !162, line: 210, baseType: !221, size: 32, align: 32, offset: 160)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "childcnt", scope: !581, file: !162, line: 211, baseType: !221, size: 32, align: 32, offset: 192)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "nextsib", scope: !581, file: !162, line: 212, baseType: !221, size: 32, align: 32, offset: 224)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "contentStringLen", scope: !527, file: !162, line: 284, baseType: !301, size: 32, align: 32, offset: 2688)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "scaffSize", scope: !527, file: !162, line: 285, baseType: !301, size: 32, align: 32, offset: 2720)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "scaffCount", scope: !527, file: !162, line: 286, baseType: !301, size: 32, align: 32, offset: 2752)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "scaffLevel", scope: !527, file: !162, line: 287, baseType: !221, size: 32, align: 32, offset: 2784)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "scaffIndex", scope: !527, file: !162, line: 288, baseType: !595, size: 64, align: 64, offset: 2816)
!595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !221, size: 64, align: 64)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "m_curBase", scope: !161, file: !162, line: 531, baseType: !208, size: 64, align: 64, offset: 5504)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "m_tagStack", scope: !161, file: !162, line: 532, baseType: !598, size: 64, align: 64, offset: 5568)
!598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !599, size: 64, align: 64)
!599 = !DIDerivedType(tag: DW_TAG_typedef, name: "TAG", file: !162, line: 189, baseType: !600)
!600 = !DICompositeType(tag: DW_TAG_structure_type, name: "tag", file: !162, line: 181, size: 704, align: 64, elements: !601)
!601 = !{!602, !604, !605, !606, !616, !617, !618}
!602 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !600, file: !162, line: 182, baseType: !603, size: 64, align: 64)
!603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 64, align: 64)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "rawName", scope: !600, file: !162, line: 183, baseType: !190, size: 64, align: 64, offset: 64)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "rawNameLength", scope: !600, file: !162, line: 184, baseType: !221, size: 32, align: 32, offset: 128)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !600, file: !162, line: 185, baseType: !607, size: 320, align: 64, offset: 192)
!607 = !DIDerivedType(tag: DW_TAG_typedef, name: "TAG_NAME", file: !162, line: 166, baseType: !608)
!608 = !DICompositeType(tag: DW_TAG_structure_type, file: !162, line: 159, size: 320, align: 64, elements: !609)
!609 = !{!610, !611, !612, !613, !614, !615}
!610 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !608, file: !162, line: 160, baseType: !208, size: 64, align: 64)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "localPart", scope: !608, file: !162, line: 161, baseType: !208, size: 64, align: 64, offset: 64)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "prefix", scope: !608, file: !162, line: 162, baseType: !208, size: 64, align: 64, offset: 128)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "strLen", scope: !608, file: !162, line: 163, baseType: !221, size: 32, align: 32, offset: 192)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "uriLen", scope: !608, file: !162, line: 164, baseType: !221, size: 32, align: 32, offset: 224)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "prefixLen", scope: !608, file: !162, line: 165, baseType: !221, size: 32, align: 32, offset: 256)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !600, file: !162, line: 186, baseType: !167, size: 64, align: 64, offset: 512)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "bufEnd", scope: !600, file: !162, line: 187, baseType: !167, size: 64, align: 64, offset: 576)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "bindings", scope: !600, file: !162, line: 188, baseType: !485, size: 64, align: 64, offset: 640)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "m_freeTagList", scope: !161, file: !162, line: 533, baseType: !598, size: 64, align: 64, offset: 5632)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "m_inheritedBindings", scope: !161, file: !162, line: 534, baseType: !485, size: 64, align: 64, offset: 5696)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "m_freeBindingList", scope: !161, file: !162, line: 535, baseType: !485, size: 64, align: 64, offset: 5760)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "m_attsSize", scope: !161, file: !162, line: 536, baseType: !221, size: 32, align: 32, offset: 5824)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "m_nSpecifiedAtts", scope: !161, file: !162, line: 537, baseType: !221, size: 32, align: 32, offset: 5856)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "m_idAttIndex", scope: !161, file: !162, line: 538, baseType: !221, size: 32, align: 32, offset: 5888)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "m_atts", scope: !161, file: !162, line: 539, baseType: !358, size: 64, align: 64, offset: 5952)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "m_nsAtts", scope: !161, file: !162, line: 540, baseType: !627, size: 64, align: 64, offset: 6016)
!627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !628, size: 64, align: 64)
!628 = !DIDerivedType(tag: DW_TAG_typedef, name: "NS_ATT", file: !162, line: 251, baseType: !629)
!629 = !DICompositeType(tag: DW_TAG_structure_type, file: !162, line: 247, size: 192, align: 64, elements: !630)
!630 = !{!631, !632, !633}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !629, file: !162, line: 248, baseType: !180, size: 64, align: 64)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !629, file: !162, line: 249, baseType: !180, size: 64, align: 64, offset: 64)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "uriName", scope: !629, file: !162, line: 250, baseType: !208, size: 64, align: 64, offset: 128)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "m_nsAttsVersion", scope: !161, file: !162, line: 541, baseType: !180, size: 64, align: 64, offset: 6080)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "m_nsAttsPower", scope: !161, file: !162, line: 542, baseType: !157, size: 8, align: 8, offset: 6144)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "m_position", scope: !161, file: !162, line: 546, baseType: !373, size: 128, align: 64, offset: 6208)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "m_tempPool", scope: !161, file: !162, line: 547, baseType: !550, size: 384, align: 64, offset: 6336)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "m_temp2Pool", scope: !161, file: !162, line: 548, baseType: !550, size: 384, align: 64, offset: 6720)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "m_groupConnector", scope: !161, file: !162, line: 549, baseType: !167, size: 64, align: 64, offset: 7104)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "m_groupSize", scope: !161, file: !162, line: 550, baseType: !301, size: 32, align: 32, offset: 7168)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "m_namespaceSeparator", scope: !161, file: !162, line: 551, baseType: !201, size: 8, align: 8, offset: 7200)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "m_parentParser", scope: !161, file: !162, line: 552, baseType: !159, size: 64, align: 64, offset: 7232)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "m_parsingStatus", scope: !161, file: !162, line: 553, baseType: !644, size: 64, align: 32, offset: 7296)
!644 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_ParsingStatus", file: !4, line: 845, baseType: !645)
!645 = !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 842, size: 64, align: 32, elements: !646)
!646 = !{!647, !648}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "parsing", scope: !645, file: !4, line: 843, baseType: !61, size: 32, align: 32)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "finalBuffer", scope: !645, file: !4, line: 844, baseType: !156, size: 8, align: 8, offset: 32)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "m_isParamEntity", scope: !161, file: !162, line: 555, baseType: !156, size: 8, align: 8, offset: 7360)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "m_useForeignDTD", scope: !161, file: !162, line: 556, baseType: !156, size: 8, align: 8, offset: 7368)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "m_paramEntityParsing", scope: !161, file: !162, line: 557, baseType: !67, size: 32, align: 32, offset: 7392)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "m_hash_secret_salt", scope: !161, file: !162, line: 559, baseType: !180, size: 64, align: 64, offset: 7424)
!653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 64, align: 64)
!654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !655, size: 64, align: 64)
!655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !656, size: 64, align: 64)
!656 = !DIDerivedType(tag: DW_TAG_typedef, name: "ICHAR", file: !162, line: 44, baseType: !168)
!657 = !{!658, !663, !671, !678, !690, !696, !738, !753, !756, !762, !768, !774, !778, !783, !788, !791, !798, !804, !810, !816, !822, !828, !835, !841, !847, !853, !857, !864, !870, !876, !882, !888, !895, !901, !907, !913, !919, !923, !929, !936, !942, !948, !954, !960, !966, !972, !983, !992, !1013, !1019, !1025, !1032, !1037, !1042, !1045, !1052, !1057, !1060, !1066, !1072, !1079, !1083, !1086, !1094, !1098, !1109, !1120, !1134, !1140, !1147, !1154, !1162, !1168, !1175, !1179, !1193, !1201, !1309, !1330, !1338, !1367, !1374, !1380, !1387, !1394, !1487, !1514, !1523, !1530, !1626, !1641, !1660, !1671, !1703, !1710, !1717, !1730, !1741, !1764, !1770, !1776, !1796, !1813, !1824, !1852, !1878, !1891, !1898, !1910, !1925, !1943, !1953, !1971, !1982, !1986, !1993, !2003, !2006, !2011, !2018, !2026, !2037, !2044, !2060, !2070, !2078, !2084, !2098, !2111, !2122, !2128, !2140, !2144, !2177, !2204, !2211, !2221, !2229}
!658 = !DISubprogram(name: "PyExpat_XML_ParserCreate", scope: !162, file: !162, line: 671, type: !659, isLocal: false, isDefinition: true, scopeLine: 672, flags: DIFlagPrototyped, isOptimized: true, function: %struct.XML_ParserStruct* (i8*)* @PyExpat_XML_ParserCreate, variables: !661)
!659 = !DISubroutineType(types: !660)
!660 = !{!159, !208}
!661 = !{!662}
!662 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "encodingName", arg: 1, scope: !658, file: !162, line: 671, type: !208)
!663 = !DISubprogram(name: "PyExpat_XML_ParserCreateNS", scope: !162, file: !162, line: 677, type: !664, isLocal: false, isDefinition: true, scopeLine: 678, flags: DIFlagPrototyped, isOptimized: true, function: %struct.XML_ParserStruct* (i8*, i8)* @PyExpat_XML_ParserCreateNS, variables: !666)
!664 = !DISubroutineType(types: !665)
!665 = !{!159, !208, !201}
!666 = !{!667, !668, !669}
!667 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "encodingName", arg: 1, scope: !663, file: !162, line: 677, type: !208)
!668 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nsSep", arg: 2, scope: !663, file: !162, line: 677, type: !201)
!669 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !663, file: !162, line: 679, type: !670)
!670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !201, size: 16, align: 8, elements: !336)
!671 = !DISubprogram(name: "PyExpat_XML_ParserCreate_MM", scope: !162, file: !162, line: 717, type: !672, isLocal: false, isDefinition: true, scopeLine: 720, flags: DIFlagPrototyped, isOptimized: true, function: %struct.XML_ParserStruct* (i8*, %struct.XML_Memory_Handling_Suite*, i8*)* @PyExpat_XML_ParserCreate_MM, variables: !674)
!672 = !DISubroutineType(types: !673)
!673 = !{!159, !208, !545, !208}
!674 = !{!675, !676, !677}
!675 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "encodingName", arg: 1, scope: !671, file: !162, line: 717, type: !208)
!676 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "memsuite", arg: 2, scope: !671, file: !162, line: 718, type: !545)
!677 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nameSep", arg: 3, scope: !671, file: !162, line: 719, type: !208)
!678 = !DISubprogram(name: "PyExpat_XML_ParserReset", scope: !162, file: !162, line: 925, type: !679, isLocal: false, isDefinition: true, scopeLine: 926, flags: DIFlagPrototyped, isOptimized: true, function: i8 (%struct.XML_ParserStruct*, i8*)* @PyExpat_XML_ParserReset, variables: !681)
!679 = !DISubroutineType(types: !680)
!680 = !{!156, !159, !208}
!681 = !{!682, !683, !684, !685, !686, !688}
!682 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !678, file: !162, line: 925, type: !159)
!683 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "encodingName", arg: 2, scope: !678, file: !162, line: 925, type: !208)
!684 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tStk", scope: !678, file: !162, line: 927, type: !598)
!685 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "openEntityList", scope: !678, file: !162, line: 928, type: !436)
!686 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tag", scope: !687, file: !162, line: 934, type: !598)
!687 = distinct !DILexicalBlock(scope: !678, file: !162, line: 933, column: 16)
!688 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "openEntity", scope: !689, file: !162, line: 944, type: !436)
!689 = distinct !DILexicalBlock(scope: !678, file: !162, line: 943, column: 26)
!690 = !DISubprogram(name: "PyExpat_XML_SetEncoding", scope: !162, file: !162, line: 961, type: !691, isLocal: false, isDefinition: true, scopeLine: 962, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, i8*)* @PyExpat_XML_SetEncoding, variables: !693)
!691 = !DISubroutineType(types: !692)
!692 = !{!72, !159, !208}
!693 = !{!694, !695}
!694 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !690, file: !162, line: 961, type: !159)
!695 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "encodingName", arg: 2, scope: !690, file: !162, line: 961, type: !208)
!696 = !DISubprogram(name: "PyExpat_XML_ExternalEntityParserCreate", scope: !162, file: !162, line: 980, type: !697, isLocal: false, isDefinition: true, scopeLine: 983, flags: DIFlagPrototyped, isOptimized: true, function: %struct.XML_ParserStruct* (%struct.XML_ParserStruct*, i8*, i8*)* @PyExpat_XML_ExternalEntityParserCreate, variables: !699)
!697 = !DISubroutineType(types: !698)
!698 = !{!159, !159, !208, !208}
!699 = !{!700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735}
!700 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "oldParser", arg: 1, scope: !696, file: !162, line: 980, type: !159)
!701 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "context", arg: 2, scope: !696, file: !162, line: 981, type: !208)
!702 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "encodingName", arg: 3, scope: !696, file: !162, line: 982, type: !208)
!703 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "parser", scope: !696, file: !162, line: 984, type: !159)
!704 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newDtd", scope: !696, file: !162, line: 985, type: !525)
!705 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldDtd", scope: !696, file: !162, line: 986, type: !525)
!706 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldStartElementHandler", scope: !696, file: !162, line: 987, type: !204)
!707 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldEndElementHandler", scope: !696, file: !162, line: 988, type: !212)
!708 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldCharacterDataHandler", scope: !696, file: !162, line: 989, type: !217)
!709 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldProcessingInstructionHandler", scope: !696, file: !162, line: 990, type: !223)
!710 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldCommentHandler", scope: !696, file: !162, line: 992, type: !228)
!711 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldStartCdataSectionHandler", scope: !696, file: !162, line: 993, type: !230)
!712 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldEndCdataSectionHandler", scope: !696, file: !162, line: 995, type: !232)
!713 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldDefaultHandler", scope: !696, file: !162, line: 997, type: !234)
!714 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldUnparsedEntityDeclHandler", scope: !696, file: !162, line: 998, type: !243)
!715 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldNotationDeclHandler", scope: !696, file: !162, line: 1000, type: !248)
!716 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldStartNamespaceDeclHandler", scope: !696, file: !162, line: 1001, type: !253)
!717 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldEndNamespaceDeclHandler", scope: !696, file: !162, line: 1003, type: !255)
!718 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldNotStandaloneHandler", scope: !696, file: !162, line: 1005, type: !257)
!719 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldExternalEntityRefHandler", scope: !696, file: !162, line: 1006, type: !262)
!720 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldSkippedEntityHandler", scope: !696, file: !162, line: 1008, type: !268)
!721 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldUnknownEncodingHandler", scope: !696, file: !162, line: 1009, type: !270)
!722 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldElementDeclHandler", scope: !696, file: !162, line: 1011, type: !289)
!723 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldAttlistDeclHandler", scope: !696, file: !162, line: 1012, type: !304)
!724 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldEntityDeclHandler", scope: !696, file: !162, line: 1013, type: !309)
!725 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldXmlDeclHandler", scope: !696, file: !162, line: 1014, type: !314)
!726 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldDeclElementType", scope: !696, file: !162, line: 1015, type: !473)
!727 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldUserData", scope: !696, file: !162, line: 1017, type: !158)
!728 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldHandlerArg", scope: !696, file: !162, line: 1018, type: !158)
!729 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldDefaultExpandInternalEntities", scope: !696, file: !162, line: 1019, type: !156)
!730 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldExternalEntityRefHandlerArg", scope: !696, file: !162, line: 1020, type: !159)
!731 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldParamEntityParsing", scope: !696, file: !162, line: 1022, type: !67)
!732 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldInEntityValue", scope: !696, file: !162, line: 1023, type: !221)
!733 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldns_triplets", scope: !696, file: !162, line: 1025, type: !156)
!734 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldhash_secret_salt", scope: !696, file: !162, line: 1031, type: !180)
!735 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !736, file: !162, line: 1044, type: !670)
!736 = distinct !DILexicalBlock(scope: !737, file: !162, line: 1043, column: 23)
!737 = distinct !DILexicalBlock(scope: !696, file: !162, line: 1043, column: 7)
!738 = !DISubprogram(name: "PyExpat_XML_ParserFree", scope: !162, file: !162, line: 1130, type: !739, isLocal: false, isDefinition: true, scopeLine: 1131, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*)* @PyExpat_XML_ParserFree, variables: !741)
!739 = !DISubroutineType(types: !740)
!740 = !{null, !159}
!741 = !{!742, !743, !744, !745, !749}
!742 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !738, file: !162, line: 1130, type: !159)
!743 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tagList", scope: !738, file: !162, line: 1132, type: !598)
!744 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "entityList", scope: !738, file: !162, line: 1133, type: !436)
!745 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p", scope: !746, file: !162, line: 1139, type: !598)
!746 = distinct !DILexicalBlock(scope: !747, file: !162, line: 1138, column: 12)
!747 = distinct !DILexicalBlock(scope: !748, file: !162, line: 1138, column: 3)
!748 = distinct !DILexicalBlock(scope: !738, file: !162, line: 1138, column: 3)
!749 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "openEntity", scope: !750, file: !162, line: 1155, type: !436)
!750 = distinct !DILexicalBlock(scope: !751, file: !162, line: 1154, column: 12)
!751 = distinct !DILexicalBlock(scope: !752, file: !162, line: 1154, column: 3)
!752 = distinct !DILexicalBlock(scope: !738, file: !162, line: 1154, column: 3)
!753 = !DISubprogram(name: "PyExpat_XML_UseParserAsHandlerArg", scope: !162, file: !162, line: 1195, type: !739, isLocal: false, isDefinition: true, scopeLine: 1196, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*)* @PyExpat_XML_UseParserAsHandlerArg, variables: !754)
!754 = !{!755}
!755 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !753, file: !162, line: 1195, type: !159)
!756 = !DISubprogram(name: "PyExpat_XML_UseForeignDTD", scope: !162, file: !162, line: 1201, type: !757, isLocal: false, isDefinition: true, scopeLine: 1202, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, i8)* @PyExpat_XML_UseForeignDTD, variables: !759)
!757 = !DISubroutineType(types: !758)
!758 = !{!18, !159, !156}
!759 = !{!760, !761}
!760 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !756, file: !162, line: 1201, type: !159)
!761 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "useDTD", arg: 2, scope: !756, file: !162, line: 1201, type: !156)
!762 = !DISubprogram(name: "PyExpat_XML_SetReturnNSTriplet", scope: !162, file: !162, line: 1215, type: !763, isLocal: false, isDefinition: true, scopeLine: 1216, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*, i32)* @PyExpat_XML_SetReturnNSTriplet, variables: !765)
!763 = !DISubroutineType(types: !764)
!764 = !{null, !159, !221}
!765 = !{!766, !767}
!766 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !762, file: !162, line: 1215, type: !159)
!767 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "do_nst", arg: 2, scope: !762, file: !162, line: 1215, type: !221)
!768 = !DISubprogram(name: "PyExpat_XML_SetUserData", scope: !162, file: !162, line: 1224, type: !769, isLocal: false, isDefinition: true, scopeLine: 1225, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*, i8*)* @PyExpat_XML_SetUserData, variables: !771)
!769 = !DISubroutineType(types: !770)
!770 = !{null, !159, !158}
!771 = !{!772, !773}
!772 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !768, file: !162, line: 1224, type: !159)
!773 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "p", arg: 2, scope: !768, file: !162, line: 1224, type: !158)
!774 = !DISubprogram(name: "PyExpat_XML_SetBase", scope: !162, file: !162, line: 1233, type: !691, isLocal: false, isDefinition: true, scopeLine: 1234, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, i8*)* @PyExpat_XML_SetBase, variables: !775)
!775 = !{!776, !777}
!776 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !774, file: !162, line: 1233, type: !159)
!777 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "p", arg: 2, scope: !774, file: !162, line: 1233, type: !208)
!778 = !DISubprogram(name: "PyExpat_XML_GetBase", scope: !162, file: !162, line: 1247, type: !779, isLocal: false, isDefinition: true, scopeLine: 1248, flags: DIFlagPrototyped, isOptimized: true, function: i8* (%struct.XML_ParserStruct*)* @PyExpat_XML_GetBase, variables: !781)
!779 = !DISubroutineType(types: !780)
!780 = !{!208, !159}
!781 = !{!782}
!782 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !778, file: !162, line: 1247, type: !159)
!783 = !DISubprogram(name: "PyExpat_XML_GetSpecifiedAttributeCount", scope: !162, file: !162, line: 1253, type: !784, isLocal: false, isDefinition: true, scopeLine: 1254, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*)* @PyExpat_XML_GetSpecifiedAttributeCount, variables: !786)
!784 = !DISubroutineType(types: !785)
!785 = !{!221, !159}
!786 = !{!787}
!787 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !783, file: !162, line: 1253, type: !159)
!788 = !DISubprogram(name: "PyExpat_XML_GetIdAttributeIndex", scope: !162, file: !162, line: 1259, type: !784, isLocal: false, isDefinition: true, scopeLine: 1260, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*)* @PyExpat_XML_GetIdAttributeIndex, variables: !789)
!789 = !{!790}
!790 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !788, file: !162, line: 1259, type: !159)
!791 = !DISubprogram(name: "PyExpat_XML_SetElementHandler", scope: !162, file: !162, line: 1273, type: !792, isLocal: false, isDefinition: true, scopeLine: 1276, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*, void (i8*, i8*, i8**)*, void (i8*, i8*)*)* @PyExpat_XML_SetElementHandler, variables: !794)
!792 = !DISubroutineType(types: !793)
!793 = !{null, !159, !204, !212}
!794 = !{!795, !796, !797}
!795 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !791, file: !162, line: 1273, type: !159)
!796 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 2, scope: !791, file: !162, line: 1274, type: !204)
!797 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 3, scope: !791, file: !162, line: 1275, type: !212)
!798 = !DISubprogram(name: "PyExpat_XML_SetStartElementHandler", scope: !162, file: !162, line: 1282, type: !799, isLocal: false, isDefinition: true, scopeLine: 1283, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*, void (i8*, i8*, i8**)*)* @PyExpat_XML_SetStartElementHandler, variables: !801)
!799 = !DISubroutineType(types: !800)
!800 = !{null, !159, !204}
!801 = !{!802, !803}
!802 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !798, file: !162, line: 1282, type: !159)
!803 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 2, scope: !798, file: !162, line: 1283, type: !204)
!804 = !DISubprogram(name: "PyExpat_XML_SetEndElementHandler", scope: !162, file: !162, line: 1288, type: !805, isLocal: false, isDefinition: true, scopeLine: 1289, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*, void (i8*, i8*)*)* @PyExpat_XML_SetEndElementHandler, variables: !807)
!805 = !DISubroutineType(types: !806)
!806 = !{null, !159, !212}
!807 = !{!808, !809}
!808 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !804, file: !162, line: 1288, type: !159)
!809 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 2, scope: !804, file: !162, line: 1289, type: !212)
!810 = !DISubprogram(name: "PyExpat_XML_SetCharacterDataHandler", scope: !162, file: !162, line: 1294, type: !811, isLocal: false, isDefinition: true, scopeLine: 1296, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*, void (i8*, i8*, i32)*)* @PyExpat_XML_SetCharacterDataHandler, variables: !813)
!811 = !DISubroutineType(types: !812)
!812 = !{null, !159, !217}
!813 = !{!814, !815}
!814 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !810, file: !162, line: 1294, type: !159)
!815 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "handler", arg: 2, scope: !810, file: !162, line: 1295, type: !217)
!816 = !DISubprogram(name: "PyExpat_XML_SetProcessingInstructionHandler", scope: !162, file: !162, line: 1301, type: !817, isLocal: false, isDefinition: true, scopeLine: 1303, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*, void (i8*, i8*, i8*)*)* @PyExpat_XML_SetProcessingInstructionHandler, variables: !819)
!817 = !DISubroutineType(types: !818)
!818 = !{null, !159, !223}
!819 = !{!820, !821}
!820 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !816, file: !162, line: 1301, type: !159)
!821 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "handler", arg: 2, scope: !816, file: !162, line: 1302, type: !223)
!822 = !DISubprogram(name: "PyExpat_XML_SetCommentHandler", scope: !162, file: !162, line: 1308, type: !823, isLocal: false, isDefinition: true, scopeLine: 1310, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*, void (i8*, i8*)*)* @PyExpat_XML_SetCommentHandler, variables: !825)
!823 = !DISubroutineType(types: !824)
!824 = !{null, !159, !228}
!825 = !{!826, !827}
!826 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !822, file: !162, line: 1308, type: !159)
!827 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "handler", arg: 2, scope: !822, file: !162, line: 1309, type: !228)
!828 = !DISubprogram(name: "PyExpat_XML_SetCdataSectionHandler", scope: !162, file: !162, line: 1315, type: !829, isLocal: false, isDefinition: true, scopeLine: 1318, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*, void (i8*)*, void (i8*)*)* @PyExpat_XML_SetCdataSectionHandler, variables: !831)
!829 = !DISubroutineType(types: !830)
!830 = !{null, !159, !230, !232}
!831 = !{!832, !833, !834}
!832 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !828, file: !162, line: 1315, type: !159)
!833 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 2, scope: !828, file: !162, line: 1316, type: !230)
!834 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 3, scope: !828, file: !162, line: 1317, type: !232)
!835 = !DISubprogram(name: "PyExpat_XML_SetStartCdataSectionHandler", scope: !162, file: !162, line: 1324, type: !836, isLocal: false, isDefinition: true, scopeLine: 1325, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*, void (i8*)*)* @PyExpat_XML_SetStartCdataSectionHandler, variables: !838)
!836 = !DISubroutineType(types: !837)
!837 = !{null, !159, !230}
!838 = !{!839, !840}
!839 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !835, file: !162, line: 1324, type: !159)
!840 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 2, scope: !835, file: !162, line: 1325, type: !230)
!841 = !DISubprogram(name: "PyExpat_XML_SetEndCdataSectionHandler", scope: !162, file: !162, line: 1330, type: !842, isLocal: false, isDefinition: true, scopeLine: 1331, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*, void (i8*)*)* @PyExpat_XML_SetEndCdataSectionHandler, variables: !844)
!842 = !DISubroutineType(types: !843)
!843 = !{null, !159, !232}
!844 = !{!845, !846}
!845 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !841, file: !162, line: 1330, type: !159)
!846 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 2, scope: !841, file: !162, line: 1331, type: !232)
!847 = !DISubprogram(name: "PyExpat_XML_SetDefaultHandler", scope: !162, file: !162, line: 1336, type: !848, isLocal: false, isDefinition: true, scopeLine: 1338, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*, void (i8*, i8*, i32)*)* @PyExpat_XML_SetDefaultHandler, variables: !850)
!848 = !DISubroutineType(types: !849)
!849 = !{null, !159, !234}
!850 = !{!851, !852}
!851 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !847, file: !162, line: 1336, type: !159)
!852 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "handler", arg: 2, scope: !847, file: !162, line: 1337, type: !234)
!853 = !DISubprogram(name: "PyExpat_XML_SetDefaultHandlerExpand", scope: !162, file: !162, line: 1344, type: !848, isLocal: false, isDefinition: true, scopeLine: 1346, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*, void (i8*, i8*, i32)*)* @PyExpat_XML_SetDefaultHandlerExpand, variables: !854)
!854 = !{!855, !856}
!855 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !853, file: !162, line: 1344, type: !159)
!856 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "handler", arg: 2, scope: !853, file: !162, line: 1345, type: !234)
!857 = !DISubprogram(name: "PyExpat_XML_SetDoctypeDeclHandler", scope: !162, file: !162, line: 1352, type: !858, isLocal: false, isDefinition: true, scopeLine: 1355, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*, void (i8*, i8*, i8*, i8*, i32)*, void (i8*)*)* @PyExpat_XML_SetDoctypeDeclHandler, variables: !860)
!858 = !DISubroutineType(types: !859)
!859 = !{null, !159, !236, !241}
!860 = !{!861, !862, !863}
!861 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !857, file: !162, line: 1352, type: !159)
!862 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 2, scope: !857, file: !162, line: 1353, type: !236)
!863 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 3, scope: !857, file: !162, line: 1354, type: !241)
!864 = !DISubprogram(name: "PyExpat_XML_SetStartDoctypeDeclHandler", scope: !162, file: !162, line: 1361, type: !865, isLocal: false, isDefinition: true, scopeLine: 1362, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*, void (i8*, i8*, i8*, i8*, i32)*)* @PyExpat_XML_SetStartDoctypeDeclHandler, variables: !867)
!865 = !DISubroutineType(types: !866)
!866 = !{null, !159, !236}
!867 = !{!868, !869}
!868 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !864, file: !162, line: 1361, type: !159)
!869 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 2, scope: !864, file: !162, line: 1362, type: !236)
!870 = !DISubprogram(name: "PyExpat_XML_SetEndDoctypeDeclHandler", scope: !162, file: !162, line: 1367, type: !871, isLocal: false, isDefinition: true, scopeLine: 1368, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*, void (i8*)*)* @PyExpat_XML_SetEndDoctypeDeclHandler, variables: !873)
!871 = !DISubroutineType(types: !872)
!872 = !{null, !159, !241}
!873 = !{!874, !875}
!874 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !870, file: !162, line: 1367, type: !159)
!875 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 2, scope: !870, file: !162, line: 1368, type: !241)
!876 = !DISubprogram(name: "PyExpat_XML_SetUnparsedEntityDeclHandler", scope: !162, file: !162, line: 1373, type: !877, isLocal: false, isDefinition: true, scopeLine: 1375, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*, void (i8*, i8*, i8*, i8*, i8*, i8*)*)* @PyExpat_XML_SetUnparsedEntityDeclHandler, variables: !879)
!877 = !DISubroutineType(types: !878)
!878 = !{null, !159, !243}
!879 = !{!880, !881}
!880 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !876, file: !162, line: 1373, type: !159)
!881 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "handler", arg: 2, scope: !876, file: !162, line: 1374, type: !243)
!882 = !DISubprogram(name: "PyExpat_XML_SetNotationDeclHandler", scope: !162, file: !162, line: 1380, type: !883, isLocal: false, isDefinition: true, scopeLine: 1382, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*, void (i8*, i8*, i8*, i8*, i8*)*)* @PyExpat_XML_SetNotationDeclHandler, variables: !885)
!883 = !DISubroutineType(types: !884)
!884 = !{null, !159, !248}
!885 = !{!886, !887}
!886 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !882, file: !162, line: 1380, type: !159)
!887 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "handler", arg: 2, scope: !882, file: !162, line: 1381, type: !248)
!888 = !DISubprogram(name: "PyExpat_XML_SetNamespaceDeclHandler", scope: !162, file: !162, line: 1387, type: !889, isLocal: false, isDefinition: true, scopeLine: 1390, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*, void (i8*, i8*, i8*)*, void (i8*, i8*)*)* @PyExpat_XML_SetNamespaceDeclHandler, variables: !891)
!889 = !DISubroutineType(types: !890)
!890 = !{null, !159, !253, !255}
!891 = !{!892, !893, !894}
!892 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !888, file: !162, line: 1387, type: !159)
!893 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 2, scope: !888, file: !162, line: 1388, type: !253)
!894 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 3, scope: !888, file: !162, line: 1389, type: !255)
!895 = !DISubprogram(name: "PyExpat_XML_SetStartNamespaceDeclHandler", scope: !162, file: !162, line: 1396, type: !896, isLocal: false, isDefinition: true, scopeLine: 1397, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*, void (i8*, i8*, i8*)*)* @PyExpat_XML_SetStartNamespaceDeclHandler, variables: !898)
!896 = !DISubroutineType(types: !897)
!897 = !{null, !159, !253}
!898 = !{!899, !900}
!899 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !895, file: !162, line: 1396, type: !159)
!900 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 2, scope: !895, file: !162, line: 1397, type: !253)
!901 = !DISubprogram(name: "PyExpat_XML_SetEndNamespaceDeclHandler", scope: !162, file: !162, line: 1402, type: !902, isLocal: false, isDefinition: true, scopeLine: 1403, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*, void (i8*, i8*)*)* @PyExpat_XML_SetEndNamespaceDeclHandler, variables: !904)
!902 = !DISubroutineType(types: !903)
!903 = !{null, !159, !255}
!904 = !{!905, !906}
!905 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !901, file: !162, line: 1402, type: !159)
!906 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 2, scope: !901, file: !162, line: 1403, type: !255)
!907 = !DISubprogram(name: "PyExpat_XML_SetNotStandaloneHandler", scope: !162, file: !162, line: 1408, type: !908, isLocal: false, isDefinition: true, scopeLine: 1410, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*, i32 (i8*)*)* @PyExpat_XML_SetNotStandaloneHandler, variables: !910)
!908 = !DISubroutineType(types: !909)
!909 = !{null, !159, !257}
!910 = !{!911, !912}
!911 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !907, file: !162, line: 1408, type: !159)
!912 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "handler", arg: 2, scope: !907, file: !162, line: 1409, type: !257)
!913 = !DISubprogram(name: "PyExpat_XML_SetExternalEntityRefHandler", scope: !162, file: !162, line: 1415, type: !914, isLocal: false, isDefinition: true, scopeLine: 1417, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*)* @PyExpat_XML_SetExternalEntityRefHandler, variables: !916)
!914 = !DISubroutineType(types: !915)
!915 = !{null, !159, !262}
!916 = !{!917, !918}
!917 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !913, file: !162, line: 1415, type: !159)
!918 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "handler", arg: 2, scope: !913, file: !162, line: 1416, type: !262)
!919 = !DISubprogram(name: "PyExpat_XML_SetExternalEntityRefHandlerArg", scope: !162, file: !162, line: 1422, type: !769, isLocal: false, isDefinition: true, scopeLine: 1423, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*, i8*)* @PyExpat_XML_SetExternalEntityRefHandlerArg, variables: !920)
!920 = !{!921, !922}
!921 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !919, file: !162, line: 1422, type: !159)
!922 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !919, file: !162, line: 1422, type: !158)
!923 = !DISubprogram(name: "PyExpat_XML_SetSkippedEntityHandler", scope: !162, file: !162, line: 1431, type: !924, isLocal: false, isDefinition: true, scopeLine: 1433, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*, void (i8*, i8*, i32)*)* @PyExpat_XML_SetSkippedEntityHandler, variables: !926)
!924 = !DISubroutineType(types: !925)
!925 = !{null, !159, !268}
!926 = !{!927, !928}
!927 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !923, file: !162, line: 1431, type: !159)
!928 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "handler", arg: 2, scope: !923, file: !162, line: 1432, type: !268)
!929 = !DISubprogram(name: "PyExpat_XML_SetUnknownEncodingHandler", scope: !162, file: !162, line: 1438, type: !930, isLocal: false, isDefinition: true, scopeLine: 1441, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*, i32 (i8*, i8*, %struct.XML_Encoding*)*, i8*)* @PyExpat_XML_SetUnknownEncodingHandler, variables: !932)
!930 = !DISubroutineType(types: !931)
!931 = !{null, !159, !270, !158}
!932 = !{!933, !934, !935}
!933 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !929, file: !162, line: 1438, type: !159)
!934 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "handler", arg: 2, scope: !929, file: !162, line: 1439, type: !270)
!935 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "data", arg: 3, scope: !929, file: !162, line: 1440, type: !158)
!936 = !DISubprogram(name: "PyExpat_XML_SetElementDeclHandler", scope: !162, file: !162, line: 1447, type: !937, isLocal: false, isDefinition: true, scopeLine: 1449, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*, void (i8*, i8*, %struct.XML_cp*)*)* @PyExpat_XML_SetElementDeclHandler, variables: !939)
!937 = !DISubroutineType(types: !938)
!938 = !{null, !159, !289}
!939 = !{!940, !941}
!940 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !936, file: !162, line: 1447, type: !159)
!941 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "eldecl", arg: 2, scope: !936, file: !162, line: 1448, type: !289)
!942 = !DISubprogram(name: "PyExpat_XML_SetAttlistDeclHandler", scope: !162, file: !162, line: 1454, type: !943, isLocal: false, isDefinition: true, scopeLine: 1456, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*, void (i8*, i8*, i8*, i8*, i8*, i32)*)* @PyExpat_XML_SetAttlistDeclHandler, variables: !945)
!943 = !DISubroutineType(types: !944)
!944 = !{null, !159, !304}
!945 = !{!946, !947}
!946 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !942, file: !162, line: 1454, type: !159)
!947 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "attdecl", arg: 2, scope: !942, file: !162, line: 1455, type: !304)
!948 = !DISubprogram(name: "PyExpat_XML_SetEntityDeclHandler", scope: !162, file: !162, line: 1461, type: !949, isLocal: false, isDefinition: true, scopeLine: 1463, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*)* @PyExpat_XML_SetEntityDeclHandler, variables: !951)
!949 = !DISubroutineType(types: !950)
!950 = !{null, !159, !309}
!951 = !{!952, !953}
!952 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !948, file: !162, line: 1461, type: !159)
!953 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "handler", arg: 2, scope: !948, file: !162, line: 1462, type: !309)
!954 = !DISubprogram(name: "PyExpat_XML_SetXmlDeclHandler", scope: !162, file: !162, line: 1468, type: !955, isLocal: false, isDefinition: true, scopeLine: 1469, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*, void (i8*, i8*, i8*, i32)*)* @PyExpat_XML_SetXmlDeclHandler, variables: !957)
!955 = !DISubroutineType(types: !956)
!956 = !{null, !159, !314}
!957 = !{!958, !959}
!958 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !954, file: !162, line: 1468, type: !159)
!959 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "handler", arg: 2, scope: !954, file: !162, line: 1469, type: !314)
!960 = !DISubprogram(name: "PyExpat_XML_SetParamEntityParsing", scope: !162, file: !162, line: 1474, type: !961, isLocal: false, isDefinition: true, scopeLine: 1476, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, i32)* @PyExpat_XML_SetParamEntityParsing, variables: !963)
!961 = !DISubroutineType(types: !962)
!962 = !{!221, !159, !67}
!963 = !{!964, !965}
!964 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !960, file: !162, line: 1474, type: !159)
!965 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "peParsing", arg: 2, scope: !960, file: !162, line: 1475, type: !67)
!966 = !DISubprogram(name: "PyExpat_XML_SetHashSalt", scope: !162, file: !162, line: 1489, type: !967, isLocal: false, isDefinition: true, scopeLine: 1491, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, i64)* @PyExpat_XML_SetHashSalt, variables: !969)
!967 = !DISubroutineType(types: !968)
!968 = !{!221, !159, !180}
!969 = !{!970, !971}
!970 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !966, file: !162, line: 1489, type: !159)
!971 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "hash_salt", arg: 2, scope: !966, file: !162, line: 1490, type: !180)
!972 = !DISubprogram(name: "PyExpat_XML_Parse", scope: !162, file: !162, line: 1500, type: !973, isLocal: false, isDefinition: true, scopeLine: 1501, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, i8*, i32, i32)* @PyExpat_XML_Parse, variables: !975)
!973 = !DISubroutineType(types: !974)
!974 = !{!72, !159, !190, !221, !221}
!975 = !{!976, !977, !978, !979, !980}
!976 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !972, file: !162, line: 1500, type: !159)
!977 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s", arg: 2, scope: !972, file: !162, line: 1500, type: !190)
!978 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "len", arg: 3, scope: !972, file: !162, line: 1500, type: !221)
!979 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "isFinal", arg: 4, scope: !972, file: !162, line: 1500, type: !221)
!980 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buff", scope: !981, file: !162, line: 1612, type: !158)
!981 = distinct !DILexicalBlock(scope: !982, file: !162, line: 1611, column: 8)
!982 = distinct !DILexicalBlock(scope: !972, file: !162, line: 1518, column: 7)
!983 = !DISubprogram(name: "PyExpat_XML_ParseBuffer", scope: !162, file: !162, line: 1623, type: !984, isLocal: false, isDefinition: true, scopeLine: 1624, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, i32, i32)* @PyExpat_XML_ParseBuffer, variables: !986)
!984 = !DISubroutineType(types: !985)
!985 = !{!72, !159, !221, !221}
!986 = !{!987, !988, !989, !990, !991}
!987 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !983, file: !162, line: 1623, type: !159)
!988 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "len", arg: 2, scope: !983, file: !162, line: 1623, type: !221)
!989 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "isFinal", arg: 3, scope: !983, file: !162, line: 1623, type: !221)
!990 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "start", scope: !983, file: !162, line: 1625, type: !190)
!991 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !983, file: !162, line: 1626, type: !72)
!992 = !DISubprogram(name: "PyExpat_XML_GetBuffer", scope: !162, file: !162, line: 1679, type: !993, isLocal: false, isDefinition: true, scopeLine: 1680, flags: DIFlagPrototyped, isOptimized: true, function: i8* (%struct.XML_ParserStruct*, i32)* @PyExpat_XML_GetBuffer, variables: !995)
!993 = !DISubroutineType(types: !994)
!994 = !{!158, !159, !221}
!995 = !{!996, !997, !998, !1001, !1002, !1007, !1009, !1010}
!996 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !992, file: !162, line: 1679, type: !159)
!997 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "len", arg: 2, scope: !992, file: !162, line: 1679, type: !221)
!998 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "neededSize", scope: !999, file: !162, line: 1693, type: !221)
!999 = distinct !DILexicalBlock(scope: !1000, file: !162, line: 1691, column: 60)
!1000 = distinct !DILexicalBlock(scope: !992, file: !162, line: 1691, column: 7)
!1001 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "keep", scope: !999, file: !162, line: 1695, type: !221)
!1002 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset", scope: !1003, file: !162, line: 1704, type: !221)
!1003 = distinct !DILexicalBlock(scope: !1004, file: !162, line: 1703, column: 62)
!1004 = distinct !DILexicalBlock(scope: !1005, file: !162, line: 1703, column: 11)
!1005 = distinct !DILexicalBlock(scope: !1006, file: !162, line: 1701, column: 67)
!1006 = distinct !DILexicalBlock(scope: !999, file: !162, line: 1701, column: 9)
!1007 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newBuf", scope: !1008, file: !162, line: 1716, type: !167)
!1008 = distinct !DILexicalBlock(scope: !1006, file: !162, line: 1715, column: 10)
!1009 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bufferSize", scope: !1008, file: !162, line: 1717, type: !221)
!1010 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "keep", scope: !1011, file: !162, line: 1731, type: !221)
!1011 = distinct !DILexicalBlock(scope: !1012, file: !162, line: 1730, column: 34)
!1012 = distinct !DILexicalBlock(scope: !1008, file: !162, line: 1730, column: 11)
!1013 = !DISubprogram(name: "PyExpat_XML_StopParser", scope: !162, file: !162, line: 1760, type: !1014, isLocal: false, isDefinition: true, scopeLine: 1761, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, i8)* @PyExpat_XML_StopParser, variables: !1016)
!1014 = !DISubroutineType(types: !1015)
!1015 = !{!72, !159, !156}
!1016 = !{!1017, !1018}
!1017 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1013, file: !162, line: 1760, type: !159)
!1018 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "resumable", arg: 2, scope: !1013, file: !162, line: 1760, type: !156)
!1019 = !DISubprogram(name: "PyExpat_XML_ResumeParser", scope: !162, file: !162, line: 1790, type: !1020, isLocal: false, isDefinition: true, scopeLine: 1791, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*)* @PyExpat_XML_ResumeParser, variables: !1022)
!1020 = !DISubroutineType(types: !1021)
!1021 = !{!72, !159}
!1022 = !{!1023, !1024}
!1023 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1019, file: !162, line: 1790, type: !159)
!1024 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1019, file: !162, line: 1792, type: !72)
!1025 = !DISubprogram(name: "PyExpat_XML_GetParsingStatus", scope: !162, file: !162, line: 1828, type: !1026, isLocal: false, isDefinition: true, scopeLine: 1829, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*, %struct.XML_ParsingStatus*)* @PyExpat_XML_GetParsingStatus, variables: !1029)
!1026 = !DISubroutineType(types: !1027)
!1027 = !{null, !159, !1028}
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 64, align: 64)
!1029 = !{!1030, !1031}
!1030 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1025, file: !162, line: 1828, type: !159)
!1031 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 2, scope: !1025, file: !162, line: 1828, type: !1028)
!1032 = !DISubprogram(name: "PyExpat_XML_GetErrorCode", scope: !162, file: !162, line: 1835, type: !1033, isLocal: false, isDefinition: true, scopeLine: 1836, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*)* @PyExpat_XML_GetErrorCode, variables: !1035)
!1033 = !DISubroutineType(types: !1034)
!1034 = !{!18, !159}
!1035 = !{!1036}
!1036 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1032, file: !162, line: 1835, type: !159)
!1037 = !DISubprogram(name: "PyExpat_XML_GetCurrentByteIndex", scope: !162, file: !162, line: 1841, type: !1038, isLocal: false, isDefinition: true, scopeLine: 1842, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct.XML_ParserStruct*)* @PyExpat_XML_GetCurrentByteIndex, variables: !1040)
!1038 = !DISubroutineType(types: !1039)
!1039 = !{!195, !159}
!1040 = !{!1041}
!1041 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1037, file: !162, line: 1841, type: !159)
!1042 = !DISubprogram(name: "PyExpat_XML_GetCurrentByteCount", scope: !162, file: !162, line: 1849, type: !784, isLocal: false, isDefinition: true, scopeLine: 1850, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*)* @PyExpat_XML_GetCurrentByteCount, variables: !1043)
!1043 = !{!1044}
!1044 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1042, file: !162, line: 1849, type: !159)
!1045 = !DISubprogram(name: "PyExpat_XML_GetInputContext", scope: !162, file: !162, line: 1857, type: !1046, isLocal: false, isDefinition: true, scopeLine: 1858, flags: DIFlagPrototyped, isOptimized: true, function: i8* (%struct.XML_ParserStruct*, i32*, i32*)* @PyExpat_XML_GetInputContext, variables: !1048)
!1046 = !DISubroutineType(types: !1047)
!1047 = !{!190, !159, !595, !595}
!1048 = !{!1049, !1050, !1051}
!1049 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1045, file: !162, line: 1857, type: !159)
!1050 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "offset", arg: 2, scope: !1045, file: !162, line: 1857, type: !595)
!1051 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "size", arg: 3, scope: !1045, file: !162, line: 1857, type: !595)
!1052 = !DISubprogram(name: "PyExpat_XML_GetCurrentLineNumber", scope: !162, file: !162, line: 1870, type: !1053, isLocal: false, isDefinition: true, scopeLine: 1871, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct.XML_ParserStruct*)* @PyExpat_XML_GetCurrentLineNumber, variables: !1055)
!1053 = !DISubroutineType(types: !1054)
!1054 = !{!377, !159}
!1055 = !{!1056}
!1056 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1052, file: !162, line: 1870, type: !159)
!1057 = !DISubprogram(name: "PyExpat_XML_GetCurrentColumnNumber", scope: !162, file: !162, line: 1880, type: !1053, isLocal: false, isDefinition: true, scopeLine: 1881, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct.XML_ParserStruct*)* @PyExpat_XML_GetCurrentColumnNumber, variables: !1058)
!1058 = !{!1059}
!1059 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1057, file: !162, line: 1880, type: !159)
!1060 = !DISubprogram(name: "PyExpat_XML_FreeContentModel", scope: !162, file: !162, line: 1890, type: !1061, isLocal: false, isDefinition: true, scopeLine: 1891, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*, %struct.XML_cp*)* @PyExpat_XML_FreeContentModel, variables: !1063)
!1061 = !DISubroutineType(types: !1062)
!1062 = !{null, !159, !293}
!1063 = !{!1064, !1065}
!1064 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1060, file: !162, line: 1890, type: !159)
!1065 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "model", arg: 2, scope: !1060, file: !162, line: 1890, type: !293)
!1066 = !DISubprogram(name: "PyExpat_XML_MemMalloc", scope: !162, file: !162, line: 1896, type: !1067, isLocal: false, isDefinition: true, scopeLine: 1897, flags: DIFlagPrototyped, isOptimized: true, function: i8* (%struct.XML_ParserStruct*, i64)* @PyExpat_XML_MemMalloc, variables: !1069)
!1067 = !DISubroutineType(types: !1068)
!1068 = !{!158, !159, !178}
!1069 = !{!1070, !1071}
!1070 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1066, file: !162, line: 1896, type: !159)
!1071 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "size", arg: 2, scope: !1066, file: !162, line: 1896, type: !178)
!1072 = !DISubprogram(name: "PyExpat_XML_MemRealloc", scope: !162, file: !162, line: 1902, type: !1073, isLocal: false, isDefinition: true, scopeLine: 1903, flags: DIFlagPrototyped, isOptimized: true, function: i8* (%struct.XML_ParserStruct*, i8*, i64)* @PyExpat_XML_MemRealloc, variables: !1075)
!1073 = !DISubroutineType(types: !1074)
!1074 = !{!158, !159, !158, !178}
!1075 = !{!1076, !1077, !1078}
!1076 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1072, file: !162, line: 1902, type: !159)
!1077 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ptr", arg: 2, scope: !1072, file: !162, line: 1902, type: !158)
!1078 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "size", arg: 3, scope: !1072, file: !162, line: 1902, type: !178)
!1079 = !DISubprogram(name: "PyExpat_XML_MemFree", scope: !162, file: !162, line: 1908, type: !769, isLocal: false, isDefinition: true, scopeLine: 1909, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*, i8*)* @PyExpat_XML_MemFree, variables: !1080)
!1080 = !{!1081, !1082}
!1081 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1079, file: !162, line: 1908, type: !159)
!1082 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ptr", arg: 2, scope: !1079, file: !162, line: 1908, type: !158)
!1083 = !DISubprogram(name: "PyExpat_XML_DefaultCurrent", scope: !162, file: !162, line: 1914, type: !739, isLocal: false, isDefinition: true, scopeLine: 1915, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*)* @PyExpat_XML_DefaultCurrent, variables: !1084)
!1084 = !{!1085}
!1085 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1083, file: !162, line: 1914, type: !159)
!1086 = !DISubprogram(name: "PyExpat_XML_ErrorString", scope: !162, file: !162, line: 1928, type: !1087, isLocal: false, isDefinition: true, scopeLine: 1929, flags: DIFlagPrototyped, isOptimized: true, function: i8* (i32)* @PyExpat_XML_ErrorString, variables: !1092)
!1087 = !DISubroutineType(types: !1088)
!1088 = !{!1089, !18}
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 64, align: 64)
!1090 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1091)
!1091 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_LChar", file: !196, line: 99, baseType: !168)
!1092 = !{!1093}
!1093 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "code", arg: 1, scope: !1086, file: !162, line: 1928, type: !18)
!1094 = !DISubprogram(name: "PyExpat_XML_ExpatVersion", scope: !162, file: !162, line: 1979, type: !1095, isLocal: false, isDefinition: true, scopeLine: 1979, flags: DIFlagPrototyped, isOptimized: true, function: i8* ()* @PyExpat_XML_ExpatVersion, variables: !1097)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{!1089}
!1097 = !{}
!1098 = !DISubprogram(name: "PyExpat_XML_ExpatVersionInfo", scope: !162, file: !162, line: 1999, type: !1099, isLocal: false, isDefinition: true, scopeLine: 2000, flags: DIFlagPrototyped, isOptimized: true, function: { i64, i32 } ()* @PyExpat_XML_ExpatVersionInfo, variables: !1107)
!1099 = !DISubroutineType(types: !1100)
!1100 = !{!1101}
!1101 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_Expat_Version", file: !4, line: 1002, baseType: !1102)
!1102 = !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 998, size: 96, align: 32, elements: !1103)
!1103 = !{!1104, !1105, !1106}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !1102, file: !4, line: 999, baseType: !221, size: 32, align: 32)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !1102, file: !4, line: 1000, baseType: !221, size: 32, align: 32, offset: 32)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "micro", scope: !1102, file: !4, line: 1001, baseType: !221, size: 32, align: 32, offset: 64)
!1107 = !{!1108}
!1108 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "version", scope: !1098, file: !162, line: 2001, type: !1101)
!1109 = !DISubprogram(name: "PyExpat_XML_GetFeatureList", scope: !162, file: !162, line: 2011, type: !1110, isLocal: false, isDefinition: true, scopeLine: 2012, flags: DIFlagPrototyped, isOptimized: true, function: %struct.XML_Feature* ()* @PyExpat_XML_GetFeatureList, variables: !1097)
!1110 = !DISubroutineType(types: !1111)
!1111 = !{!1112}
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 64, align: 64)
!1113 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1114)
!1114 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_Feature", file: !4, line: 1030, baseType: !1115)
!1115 = !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 1026, size: 192, align: 64, elements: !1116)
!1116 = !{!1117, !1118, !1119}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "feature", scope: !1115, file: !4, line: 1027, baseType: !77, size: 32, align: 32)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1115, file: !4, line: 1028, baseType: !1089, size: 64, align: 64, offset: 64)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1115, file: !4, line: 1029, baseType: !197, size: 64, align: 64, offset: 128)
!1120 = !DISubprogram(name: "parserCreate", scope: !162, file: !162, line: 725, type: !1121, isLocal: true, isDefinition: true, scopeLine: 729, flags: DIFlagPrototyped, isOptimized: true, function: %struct.XML_ParserStruct* (i8*, %struct.XML_Memory_Handling_Suite*, i8*, %struct.DTD*)* @parserCreate, variables: !1123)
!1121 = !DISubroutineType(types: !1122)
!1122 = !{!159, !208, !545, !208, !525}
!1123 = !{!1124, !1125, !1126, !1127, !1128, !1129, !1132}
!1124 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "encodingName", arg: 1, scope: !1120, file: !162, line: 725, type: !208)
!1125 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "memsuite", arg: 2, scope: !1120, file: !162, line: 726, type: !545)
!1126 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nameSep", arg: 3, scope: !1120, file: !162, line: 727, type: !208)
!1127 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dtd", arg: 4, scope: !1120, file: !162, line: 728, type: !525)
!1128 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "parser", scope: !1120, file: !162, line: 730, type: !159)
!1129 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mtemp", scope: !1130, file: !162, line: 733, type: !653)
!1130 = distinct !DILexicalBlock(scope: !1131, file: !162, line: 732, column: 17)
!1131 = distinct !DILexicalBlock(scope: !1120, file: !162, line: 732, column: 7)
!1132 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mtemp", scope: !1133, file: !162, line: 744, type: !653)
!1133 = distinct !DILexicalBlock(scope: !1131, file: !162, line: 743, column: 8)
!1134 = !DISubprogram(name: "dtdCreate", scope: !162, file: !162, line: 5645, type: !1135, isLocal: true, isDefinition: true, scopeLine: 5646, flags: DIFlagPrototyped, isOptimized: true, function: %struct.DTD* (%struct.XML_Memory_Handling_Suite*)* @dtdCreate, variables: !1137)
!1135 = !DISubroutineType(types: !1136)
!1136 = !{!525, !545}
!1137 = !{!1138, !1139}
!1138 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ms", arg: 1, scope: !1134, file: !162, line: 5645, type: !545)
!1139 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p", scope: !1134, file: !162, line: 5647, type: !525)
!1140 = !DISubprogram(name: "hashTableInit", scope: !162, file: !162, line: 6069, type: !1141, isLocal: true, isDefinition: true, scopeLine: 6070, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.HASH_TABLE*, %struct.XML_Memory_Handling_Suite*)* @hashTableInit, variables: !1144)
!1141 = !DISubroutineType(types: !1142)
!1142 = !{null, !1143, !545}
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 64, align: 64)
!1144 = !{!1145, !1146}
!1145 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "p", arg: 1, scope: !1140, file: !162, line: 6069, type: !1143)
!1146 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ms", arg: 2, scope: !1140, file: !162, line: 6069, type: !545)
!1147 = !DISubprogram(name: "poolInit", scope: !162, file: !162, line: 6097, type: !1148, isLocal: true, isDefinition: true, scopeLine: 6098, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.STRING_POOL*, %struct.XML_Memory_Handling_Suite*)* @poolInit, variables: !1151)
!1148 = !DISubroutineType(types: !1149)
!1149 = !{null, !1150, !545}
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 64, align: 64)
!1151 = !{!1152, !1153}
!1152 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pool", arg: 1, scope: !1147, file: !162, line: 6097, type: !1150)
!1153 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ms", arg: 2, scope: !1147, file: !162, line: 6097, type: !545)
!1154 = !DISubprogram(name: "moveToFreeBindingList", scope: !162, file: !162, line: 914, type: !1155, isLocal: true, isDefinition: true, scopeLine: 915, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*, %struct.binding*)* @moveToFreeBindingList, variables: !1157)
!1155 = !DISubroutineType(types: !1156)
!1156 = !{null, !159, !485}
!1157 = !{!1158, !1159, !1160}
!1158 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1154, file: !162, line: 914, type: !159)
!1159 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "bindings", arg: 2, scope: !1154, file: !162, line: 914, type: !485)
!1160 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "b", scope: !1161, file: !162, line: 917, type: !485)
!1161 = distinct !DILexicalBlock(scope: !1154, file: !162, line: 916, column: 20)
!1162 = !DISubprogram(name: "parserInit", scope: !162, file: !162, line: 840, type: !1163, isLocal: true, isDefinition: true, scopeLine: 841, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*, i8*)* @parserInit, variables: !1165)
!1163 = !DISubroutineType(types: !1164)
!1164 = !{null, !159, !208}
!1165 = !{!1166, !1167}
!1166 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1162, file: !162, line: 840, type: !159)
!1167 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "encodingName", arg: 2, scope: !1162, file: !162, line: 840, type: !208)
!1168 = !DISubprogram(name: "prologInitProcessor", scope: !162, file: !162, line: 3547, type: !429, isLocal: true, isDefinition: true, scopeLine: 3551, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @prologInitProcessor, variables: !1169)
!1169 = !{!1170, !1171, !1172, !1173, !1174}
!1170 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1168, file: !162, line: 3547, type: !159)
!1171 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s", arg: 2, scope: !1168, file: !162, line: 3548, type: !190)
!1172 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 3, scope: !1168, file: !162, line: 3549, type: !190)
!1173 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nextPtr", arg: 4, scope: !1168, file: !162, line: 3550, type: !331)
!1174 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1168, file: !162, line: 3552, type: !18)
!1175 = !DISubprogram(name: "initializeEncoding", scope: !162, file: !162, line: 3390, type: !1033, isLocal: true, isDefinition: true, scopeLine: 3391, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*)* @initializeEncoding, variables: !1176)
!1176 = !{!1177, !1178}
!1177 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1175, file: !162, line: 3390, type: !159)
!1178 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !1175, file: !162, line: 3392, type: !190)
!1179 = !DISubprogram(name: "handleUnknownEncoding", scope: !162, file: !162, line: 3508, type: !1180, isLocal: true, isDefinition: true, scopeLine: 3509, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, i8*)* @handleUnknownEncoding, variables: !1182)
!1180 = !DISubroutineType(types: !1181)
!1181 = !{!18, !159, !208}
!1182 = !{!1183, !1184, !1185, !1188, !1189}
!1183 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1179, file: !162, line: 3508, type: !159)
!1184 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "encodingName", arg: 2, scope: !1179, file: !162, line: 3508, type: !208)
!1185 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "info", scope: !1186, file: !162, line: 3511, type: !275)
!1186 = distinct !DILexicalBlock(scope: !1187, file: !162, line: 3510, column: 43)
!1187 = distinct !DILexicalBlock(scope: !1179, file: !162, line: 3510, column: 7)
!1188 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1186, file: !162, line: 3512, type: !221)
!1189 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "enc", scope: !1190, file: !162, line: 3520, type: !1192)
!1190 = distinct !DILexicalBlock(scope: !1191, file: !162, line: 3519, column: 40)
!1191 = distinct !DILexicalBlock(scope: !1186, file: !162, line: 3518, column: 9)
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !321, size: 64, align: 64)
!1193 = !DISubprogram(name: "prologProcessor", scope: !162, file: !162, line: 3732, type: !429, isLocal: true, isDefinition: true, scopeLine: 3736, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @prologProcessor, variables: !1194)
!1194 = !{!1195, !1196, !1197, !1198, !1199, !1200}
!1195 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1193, file: !162, line: 3732, type: !159)
!1196 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s", arg: 2, scope: !1193, file: !162, line: 3733, type: !190)
!1197 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 3, scope: !1193, file: !162, line: 3734, type: !190)
!1198 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nextPtr", arg: 4, scope: !1193, file: !162, line: 3735, type: !331)
!1199 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "next", scope: !1193, file: !162, line: 3737, type: !190)
!1200 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tok", scope: !1193, file: !162, line: 3738, type: !221)
!1201 = !DISubprogram(name: "doProlog", scope: !162, file: !162, line: 3744, type: !1202, isLocal: true, isDefinition: true, scopeLine: 3752, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, %struct.encoding*, i8*, i8*, i32, i8*, i8**, i8)* @doProlog, variables: !1204)
!1202 = !DISubroutineType(types: !1203)
!1203 = !{!18, !159, !319, !190, !190, !221, !190, !331, !156}
!1204 = !{!1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1215, !1216, !1217, !1218, !1222, !1223, !1226, !1228, !1231, !1234, !1237, !1240, !1243, !1246, !1249, !1252, !1253, !1256, !1260, !1263, !1266, !1269, !1271, !1276, !1279, !1282, !1285, !1286, !1289, !1290, !1295, !1298, !1299, !1300, !1301, !1302}
!1205 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1201, file: !162, line: 3744, type: !159)
!1206 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "enc", arg: 2, scope: !1201, file: !162, line: 3745, type: !319)
!1207 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s", arg: 3, scope: !1201, file: !162, line: 3746, type: !190)
!1208 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 4, scope: !1201, file: !162, line: 3747, type: !190)
!1209 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tok", arg: 5, scope: !1201, file: !162, line: 3748, type: !221)
!1210 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "next", arg: 6, scope: !1201, file: !162, line: 3749, type: !190)
!1211 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nextPtr", arg: 7, scope: !1201, file: !162, line: 3750, type: !331)
!1212 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "haveMore", arg: 8, scope: !1201, file: !162, line: 3751, type: !156)
!1213 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dtd", scope: !1201, file: !162, line: 3777, type: !1214)
!1214 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !525)
!1215 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "eventPP", scope: !1201, file: !162, line: 3779, type: !331)
!1216 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "eventEndPP", scope: !1201, file: !162, line: 3780, type: !331)
!1217 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "quant", scope: !1201, file: !162, line: 3781, type: !12)
!1218 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "role", scope: !1219, file: !162, line: 3793, type: !221)
!1219 = distinct !DILexicalBlock(scope: !1220, file: !162, line: 3792, column: 12)
!1220 = distinct !DILexicalBlock(scope: !1221, file: !162, line: 3792, column: 3)
!1221 = distinct !DILexicalBlock(scope: !1201, file: !162, line: 3792, column: 3)
!1222 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "handleDefault", scope: !1219, file: !162, line: 3794, type: !156)
!1223 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1224, file: !162, line: 3843, type: !18)
!1224 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 3842, column: 7)
!1225 = distinct !DILexicalBlock(scope: !1219, file: !162, line: 3840, column: 19)
!1226 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1227, file: !162, line: 3873, type: !18)
!1227 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 3872, column: 7)
!1228 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pubId", scope: !1229, file: !162, line: 3893, type: !200)
!1229 = distinct !DILexicalBlock(scope: !1230, file: !162, line: 3892, column: 48)
!1230 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 3892, column: 11)
!1231 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tem", scope: !1232, file: !162, line: 3913, type: !200)
!1232 = distinct !DILexicalBlock(scope: !1233, file: !162, line: 3912, column: 58)
!1233 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 3912, column: 11)
!1234 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hadParamEntityRefs", scope: !1235, file: !162, line: 3939, type: !156)
!1235 = distinct !DILexicalBlock(scope: !1236, file: !162, line: 3938, column: 66)
!1236 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 3938, column: 11)
!1237 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "entity", scope: !1238, file: !162, line: 3942, type: !445)
!1238 = distinct !DILexicalBlock(scope: !1239, file: !162, line: 3941, column: 85)
!1239 = distinct !DILexicalBlock(scope: !1235, file: !162, line: 3941, column: 13)
!1240 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hadParamEntityRefs", scope: !1241, file: !162, line: 3984, type: !156)
!1241 = distinct !DILexicalBlock(scope: !1242, file: !162, line: 3983, column: 38)
!1242 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 3983, column: 11)
!1243 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "entity", scope: !1244, file: !162, line: 3987, type: !445)
!1244 = distinct !DILexicalBlock(scope: !1245, file: !162, line: 3986, column: 85)
!1245 = distinct !DILexicalBlock(scope: !1241, file: !162, line: 3986, column: 13)
!1246 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "prefix", scope: !1247, file: !162, line: 4062, type: !208)
!1247 = distinct !DILexicalBlock(scope: !1248, file: !162, line: 4061, column: 66)
!1248 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4061, column: 11)
!1249 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "attVal", scope: !1250, file: !162, line: 4109, type: !208)
!1250 = distinct !DILexicalBlock(scope: !1251, file: !162, line: 4108, column: 32)
!1251 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4108, column: 11)
!1252 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1250, file: !162, line: 4110, type: !18)
!1253 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1254, file: !162, line: 4146, type: !18)
!1254 = distinct !DILexicalBlock(scope: !1255, file: !162, line: 4145, column: 32)
!1255 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4145, column: 11)
!1256 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !1257, file: !162, line: 4274, type: !208)
!1257 = distinct !DILexicalBlock(scope: !1258, file: !162, line: 4273, column: 34)
!1258 = distinct !DILexicalBlock(scope: !1259, file: !162, line: 4273, column: 13)
!1259 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4268, column: 7)
!1260 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !1261, file: !162, line: 4306, type: !208)
!1261 = distinct !DILexicalBlock(scope: !1262, file: !162, line: 4305, column: 32)
!1262 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4305, column: 11)
!1263 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tem", scope: !1264, file: !162, line: 4352, type: !200)
!1264 = distinct !DILexicalBlock(scope: !1265, file: !162, line: 4351, column: 41)
!1265 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4351, column: 11)
!1266 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "systemId", scope: !1267, file: !162, line: 4366, type: !208)
!1267 = distinct !DILexicalBlock(scope: !1268, file: !162, line: 4365, column: 76)
!1268 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4365, column: 11)
!1269 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1270, file: !162, line: 4408, type: !18)
!1270 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4407, column: 7)
!1271 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !1272, file: !162, line: 4425, type: !167)
!1272 = distinct !DILexicalBlock(scope: !1273, file: !162, line: 4424, column: 36)
!1273 = distinct !DILexicalBlock(scope: !1274, file: !162, line: 4424, column: 13)
!1274 = distinct !DILexicalBlock(scope: !1275, file: !162, line: 4423, column: 67)
!1275 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4423, column: 11)
!1276 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !1277, file: !162, line: 4430, type: !595)
!1277 = distinct !DILexicalBlock(scope: !1278, file: !162, line: 4429, column: 32)
!1278 = distinct !DILexicalBlock(scope: !1272, file: !162, line: 4429, column: 15)
!1279 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "myindex", scope: !1280, file: !162, line: 4445, type: !221)
!1280 = distinct !DILexicalBlock(scope: !1281, file: !162, line: 4444, column: 27)
!1281 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4444, column: 11)
!1282 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !1283, file: !162, line: 4484, type: !208)
!1283 = distinct !DILexicalBlock(scope: !1284, file: !162, line: 4483, column: 12)
!1284 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4481, column: 11)
!1285 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "entity", scope: !1283, file: !162, line: 4485, type: !445)
!1286 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1287, file: !162, line: 4518, type: !18)
!1287 = distinct !DILexicalBlock(scope: !1288, file: !162, line: 4517, column: 30)
!1288 = distinct !DILexicalBlock(scope: !1283, file: !162, line: 4517, column: 13)
!1289 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "betweenDecl", scope: !1287, file: !162, line: 4519, type: !156)
!1290 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "content", scope: !1291, file: !162, line: 4575, type: !293)
!1291 = distinct !DILexicalBlock(scope: !1292, file: !162, line: 4574, column: 45)
!1292 = distinct !DILexicalBlock(scope: !1293, file: !162, line: 4574, column: 13)
!1293 = distinct !DILexicalBlock(scope: !1294, file: !162, line: 4573, column: 27)
!1294 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4573, column: 11)
!1295 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "el", scope: !1296, file: !162, line: 4615, type: !473)
!1296 = distinct !DILexicalBlock(scope: !1297, file: !162, line: 4614, column: 27)
!1297 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4614, column: 11)
!1298 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !1296, file: !162, line: 4616, type: !208)
!1299 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nameLen", scope: !1296, file: !162, line: 4617, type: !221)
!1300 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nxt", scope: !1296, file: !162, line: 4618, type: !190)
!1301 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "myindex", scope: !1296, file: !162, line: 4621, type: !221)
!1302 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "model", scope: !1303, file: !162, line: 4658, type: !293)
!1303 = distinct !DILexicalBlock(scope: !1304, file: !162, line: 4657, column: 31)
!1304 = distinct !DILexicalBlock(scope: !1305, file: !162, line: 4657, column: 15)
!1305 = distinct !DILexicalBlock(scope: !1306, file: !162, line: 4656, column: 35)
!1306 = distinct !DILexicalBlock(scope: !1307, file: !162, line: 4656, column: 13)
!1307 = distinct !DILexicalBlock(scope: !1308, file: !162, line: 4651, column: 27)
!1308 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4651, column: 11)
!1309 = !DISubprogram(name: "processXmlDecl", scope: !162, file: !162, line: 3419, type: !1310, isLocal: true, isDefinition: true, scopeLine: 3421, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, i32, i8*, i8*)* @processXmlDecl, variables: !1312)
!1310 = !DISubroutineType(types: !1311)
!1311 = !{!18, !159, !221, !190, !190}
!1312 = !{!1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324}
!1313 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1309, file: !162, line: 3419, type: !159)
!1314 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "isGeneralTextEntity", arg: 2, scope: !1309, file: !162, line: 3419, type: !221)
!1315 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s", arg: 3, scope: !1309, file: !162, line: 3420, type: !190)
!1316 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "next", arg: 4, scope: !1309, file: !162, line: 3420, type: !190)
!1317 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "encodingName", scope: !1309, file: !162, line: 3422, type: !190)
!1318 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "storedEncName", scope: !1309, file: !162, line: 3423, type: !208)
!1319 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newEncoding", scope: !1309, file: !162, line: 3424, type: !319)
!1320 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "version", scope: !1309, file: !162, line: 3425, type: !190)
!1321 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "versionend", scope: !1309, file: !162, line: 3426, type: !190)
!1322 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "storedversion", scope: !1309, file: !162, line: 3427, type: !208)
!1323 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "standalone", scope: !1309, file: !162, line: 3428, type: !221)
!1324 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1325, file: !162, line: 3485, type: !18)
!1325 = distinct !DILexicalBlock(scope: !1326, file: !162, line: 3484, column: 28)
!1326 = distinct !DILexicalBlock(scope: !1327, file: !162, line: 3484, column: 14)
!1327 = distinct !DILexicalBlock(scope: !1328, file: !162, line: 3477, column: 9)
!1328 = distinct !DILexicalBlock(scope: !1329, file: !162, line: 3476, column: 55)
!1329 = distinct !DILexicalBlock(scope: !1309, file: !162, line: 3476, column: 7)
!1330 = !DISubprogram(name: "poolStoreString", scope: !162, file: !162, line: 6198, type: !1331, isLocal: true, isDefinition: true, scopeLine: 6200, flags: DIFlagPrototyped, isOptimized: true, function: i8* (%struct.STRING_POOL*, %struct.encoding*, i8*, i8*)* @poolStoreString, variables: !1333)
!1331 = !DISubroutineType(types: !1332)
!1332 = !{!200, !1150, !319, !190, !190}
!1333 = !{!1334, !1335, !1336, !1337}
!1334 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pool", arg: 1, scope: !1330, file: !162, line: 6198, type: !1150)
!1335 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "enc", arg: 2, scope: !1330, file: !162, line: 6198, type: !319)
!1336 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ptr", arg: 3, scope: !1330, file: !162, line: 6199, type: !190)
!1337 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 4, scope: !1330, file: !162, line: 6199, type: !190)
!1338 = !DISubprogram(name: "lookup", scope: !162, file: !162, line: 5970, type: !1339, isLocal: true, isDefinition: true, scopeLine: 5971, flags: DIFlagPrototyped, isOptimized: true, function: %struct.NAMED* (%struct.XML_ParserStruct*, %struct.HASH_TABLE*, i8*, i64)* @lookup, variables: !1341)
!1339 = !DISubroutineType(types: !1340)
!1340 = !{!535, !159, !1143, !540, !178}
!1341 = !{!1342, !1343, !1344, !1345, !1346, !1347, !1350, !1352, !1353, !1354, !1357, !1358, !1359, !1360, !1361, !1366}
!1342 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1338, file: !162, line: 5970, type: !159)
!1343 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "table", arg: 2, scope: !1338, file: !162, line: 5970, type: !1143)
!1344 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "name", arg: 3, scope: !1338, file: !162, line: 5970, type: !540)
!1345 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "createSize", arg: 4, scope: !1338, file: !162, line: 5970, type: !178)
!1346 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1338, file: !162, line: 5972, type: !178)
!1347 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tsize", scope: !1348, file: !162, line: 5974, type: !178)
!1348 = distinct !DILexicalBlock(scope: !1349, file: !162, line: 5973, column: 25)
!1349 = distinct !DILexicalBlock(scope: !1338, file: !162, line: 5973, column: 7)
!1350 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "h", scope: !1351, file: !162, line: 5990, type: !180)
!1351 = distinct !DILexicalBlock(scope: !1349, file: !162, line: 5989, column: 8)
!1352 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mask", scope: !1351, file: !162, line: 5991, type: !180)
!1353 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "step", scope: !1351, file: !162, line: 5992, type: !157)
!1354 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newPower", scope: !1355, file: !162, line: 6006, type: !157)
!1355 = distinct !DILexicalBlock(scope: !1356, file: !162, line: 6005, column: 44)
!1356 = distinct !DILexicalBlock(scope: !1351, file: !162, line: 6005, column: 9)
!1357 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newSize", scope: !1355, file: !162, line: 6007, type: !178)
!1358 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newMask", scope: !1355, file: !162, line: 6008, type: !180)
!1359 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tsize", scope: !1355, file: !162, line: 6009, type: !178)
!1360 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newV", scope: !1355, file: !162, line: 6010, type: !534)
!1361 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newHash", scope: !1362, file: !162, line: 6016, type: !180)
!1362 = distinct !DILexicalBlock(scope: !1363, file: !162, line: 6015, column: 26)
!1363 = distinct !DILexicalBlock(scope: !1364, file: !162, line: 6015, column: 13)
!1364 = distinct !DILexicalBlock(scope: !1365, file: !162, line: 6014, column: 7)
!1365 = distinct !DILexicalBlock(scope: !1355, file: !162, line: 6014, column: 7)
!1366 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !1362, file: !162, line: 6017, type: !178)
!1367 = !DISubprogram(name: "hash", scope: !162, file: !162, line: 5961, type: !1368, isLocal: true, isDefinition: true, scopeLine: 5962, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct.XML_ParserStruct*, i8*)* @hash, variables: !1370)
!1368 = !DISubroutineType(types: !1369)
!1369 = !{!180, !159, !540}
!1370 = !{!1371, !1372, !1373}
!1371 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1367, file: !162, line: 5961, type: !159)
!1372 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s", arg: 2, scope: !1367, file: !162, line: 5961, type: !540)
!1373 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "h", scope: !1367, file: !162, line: 5963, type: !180)
!1374 = !DISubprogram(name: "keyeq", scope: !162, file: !162, line: 5952, type: !1375, isLocal: true, isDefinition: true, scopeLine: 5953, flags: DIFlagPrototyped, isOptimized: true, function: i8 (i8*, i8*)* @keyeq, variables: !1377)
!1375 = !DISubroutineType(types: !1376)
!1376 = !{!156, !540, !540}
!1377 = !{!1378, !1379}
!1378 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s1", arg: 1, scope: !1374, file: !162, line: 5952, type: !540)
!1379 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s2", arg: 2, scope: !1374, file: !162, line: 5952, type: !540)
!1380 = !DISubprogram(name: "normalizePublicId", scope: !162, file: !162, line: 5623, type: !1381, isLocal: true, isDefinition: true, scopeLine: 5624, flags: DIFlagPrototyped, isOptimized: true, function: void (i8*)* @normalizePublicId, variables: !1383)
!1381 = !DISubroutineType(types: !1382)
!1382 = !{null, !200}
!1383 = !{!1384, !1385, !1386}
!1384 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "publicId", arg: 1, scope: !1380, file: !162, line: 5623, type: !200)
!1385 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p", scope: !1380, file: !162, line: 5625, type: !200)
!1386 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !1380, file: !162, line: 5626, type: !200)
!1387 = !DISubprogram(name: "contentProcessor", scope: !162, file: !162, line: 2100, type: !429, isLocal: true, isDefinition: true, scopeLine: 2104, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @contentProcessor, variables: !1388)
!1388 = !{!1389, !1390, !1391, !1392, !1393}
!1389 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1387, file: !162, line: 2100, type: !159)
!1390 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 2, scope: !1387, file: !162, line: 2101, type: !190)
!1391 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 3, scope: !1387, file: !162, line: 2102, type: !190)
!1392 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "endPtr", arg: 4, scope: !1387, file: !162, line: 2103, type: !331)
!1393 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1387, file: !162, line: 2105, type: !18)
!1394 = !DISubprogram(name: "doContent", scope: !162, file: !162, line: 2231, type: !1395, isLocal: true, isDefinition: true, scopeLine: 2238, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, i32, %struct.encoding*, i8*, i8*, i8**, i8)* @doContent, variables: !1397)
!1395 = !DISubroutineType(types: !1396)
!1396 = !{!18, !159, !221, !319, !190, !190, !331, !156}
!1397 = !{!1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1412, !1413, !1417, !1419, !1420, !1421, !1424, !1427, !1429, !1430, !1431, !1433, !1434, !1438, !1439, !1441, !1443, !1444, !1445, !1446, !1447, !1449, !1452, !1453, !1454, !1457, !1458, !1459, !1461, !1463, !1467, !1470, !1472, !1477, !1479}
!1398 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1394, file: !162, line: 2231, type: !159)
!1399 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "startTagLevel", arg: 2, scope: !1394, file: !162, line: 2232, type: !221)
!1400 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "enc", arg: 3, scope: !1394, file: !162, line: 2233, type: !319)
!1401 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s", arg: 4, scope: !1394, file: !162, line: 2234, type: !190)
!1402 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 5, scope: !1394, file: !162, line: 2235, type: !190)
!1403 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nextPtr", arg: 6, scope: !1394, file: !162, line: 2236, type: !331)
!1404 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "haveMore", arg: 7, scope: !1394, file: !162, line: 2237, type: !156)
!1405 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dtd", scope: !1394, file: !162, line: 2240, type: !1214)
!1406 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "eventPP", scope: !1394, file: !162, line: 2242, type: !331)
!1407 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "eventEndPP", scope: !1394, file: !162, line: 2243, type: !331)
!1408 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "next", scope: !1409, file: !162, line: 2255, type: !190)
!1409 = distinct !DILexicalBlock(scope: !1410, file: !162, line: 2254, column: 12)
!1410 = distinct !DILexicalBlock(scope: !1411, file: !162, line: 2254, column: 3)
!1411 = distinct !DILexicalBlock(scope: !1394, file: !162, line: 2254, column: 3)
!1412 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tok", scope: !1409, file: !162, line: 2256, type: !221)
!1413 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !1414, file: !162, line: 2266, type: !201)
!1414 = distinct !DILexicalBlock(scope: !1415, file: !162, line: 2265, column: 45)
!1415 = distinct !DILexicalBlock(scope: !1416, file: !162, line: 2265, column: 11)
!1416 = distinct !DILexicalBlock(scope: !1409, file: !162, line: 2258, column: 18)
!1417 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !1418, file: !162, line: 2309, type: !208)
!1418 = distinct !DILexicalBlock(scope: !1416, file: !162, line: 2308, column: 7)
!1419 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "entity", scope: !1418, file: !162, line: 2310, type: !445)
!1420 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ch", scope: !1418, file: !162, line: 2311, type: !201)
!1421 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1422, file: !162, line: 2350, type: !18)
!1422 = distinct !DILexicalBlock(scope: !1423, file: !162, line: 2349, column: 30)
!1423 = distinct !DILexicalBlock(scope: !1418, file: !162, line: 2349, column: 13)
!1424 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "context", scope: !1425, file: !162, line: 2363, type: !208)
!1425 = distinct !DILexicalBlock(scope: !1426, file: !162, line: 2362, column: 56)
!1426 = distinct !DILexicalBlock(scope: !1423, file: !162, line: 2362, column: 18)
!1427 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tag", scope: !1428, file: !162, line: 2385, type: !598)
!1428 = distinct !DILexicalBlock(scope: !1416, file: !162, line: 2384, column: 7)
!1429 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1428, file: !162, line: 2386, type: !18)
!1430 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "toPtr", scope: !1428, file: !162, line: 2387, type: !200)
!1431 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rawNameEnd", scope: !1432, file: !162, line: 2412, type: !190)
!1432 = distinct !DILexicalBlock(scope: !1428, file: !162, line: 2411, column: 9)
!1433 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fromPtr", scope: !1432, file: !162, line: 2413, type: !190)
!1434 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bufSize", scope: !1435, file: !162, line: 2416, type: !221)
!1435 = distinct !DILexicalBlock(scope: !1436, file: !162, line: 2415, column: 20)
!1436 = distinct !DILexicalBlock(scope: !1437, file: !162, line: 2415, column: 11)
!1437 = distinct !DILexicalBlock(scope: !1432, file: !162, line: 2415, column: 11)
!1438 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "convLen", scope: !1435, file: !162, line: 2417, type: !221)
!1439 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !1440, file: !162, line: 2428, type: !167)
!1440 = distinct !DILexicalBlock(scope: !1435, file: !162, line: 2427, column: 13)
!1441 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rawName", scope: !1442, file: !162, line: 2454, type: !190)
!1442 = distinct !DILexicalBlock(scope: !1416, file: !162, line: 2453, column: 7)
!1443 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1442, file: !162, line: 2455, type: !18)
!1444 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bindings", scope: !1442, file: !162, line: 2456, type: !485)
!1445 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "noElmHandlers", scope: !1442, file: !162, line: 2457, type: !156)
!1446 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !1442, file: !162, line: 2458, type: !607)
!1447 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "b", scope: !1448, file: !162, line: 2482, type: !485)
!1448 = distinct !DILexicalBlock(scope: !1442, file: !162, line: 2481, column: 26)
!1449 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !1450, file: !162, line: 2498, type: !221)
!1450 = distinct !DILexicalBlock(scope: !1451, file: !162, line: 2497, column: 12)
!1451 = distinct !DILexicalBlock(scope: !1416, file: !162, line: 2495, column: 11)
!1452 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rawName", scope: !1450, file: !162, line: 2499, type: !190)
!1453 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tag", scope: !1450, file: !162, line: 2500, type: !598)
!1454 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "localPart", scope: !1455, file: !162, line: 2513, type: !208)
!1455 = distinct !DILexicalBlock(scope: !1456, file: !162, line: 2512, column: 44)
!1456 = distinct !DILexicalBlock(scope: !1450, file: !162, line: 2512, column: 13)
!1457 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "prefix", scope: !1455, file: !162, line: 2514, type: !208)
!1458 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "uri", scope: !1455, file: !162, line: 2515, type: !200)
!1459 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "b", scope: !1460, file: !162, line: 2537, type: !485)
!1460 = distinct !DILexicalBlock(scope: !1450, file: !162, line: 2536, column: 31)
!1461 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1462, file: !162, line: 2551, type: !221)
!1462 = distinct !DILexicalBlock(scope: !1416, file: !162, line: 2550, column: 7)
!1463 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !1464, file: !162, line: 2555, type: !1466)
!1464 = distinct !DILexicalBlock(scope: !1465, file: !162, line: 2554, column: 47)
!1465 = distinct !DILexicalBlock(scope: !1462, file: !162, line: 2554, column: 13)
!1466 = !DICompositeType(tag: DW_TAG_array_type, baseType: !201, size: 32, align: 8, elements: !332)
!1467 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !1468, file: !162, line: 2566, type: !201)
!1468 = distinct !DILexicalBlock(scope: !1469, file: !162, line: 2565, column: 45)
!1469 = distinct !DILexicalBlock(scope: !1416, file: !162, line: 2565, column: 11)
!1470 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1471, file: !162, line: 2574, type: !18)
!1471 = distinct !DILexicalBlock(scope: !1416, file: !162, line: 2573, column: 7)
!1472 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dataPtr", scope: !1473, file: !162, line: 2611, type: !655)
!1473 = distinct !DILexicalBlock(scope: !1474, file: !162, line: 2610, column: 31)
!1474 = distinct !DILexicalBlock(scope: !1475, file: !162, line: 2610, column: 13)
!1475 = distinct !DILexicalBlock(scope: !1476, file: !162, line: 2609, column: 45)
!1476 = distinct !DILexicalBlock(scope: !1416, file: !162, line: 2609, column: 11)
!1477 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "charDataHandler", scope: !1478, file: !162, line: 2638, type: !217)
!1478 = distinct !DILexicalBlock(scope: !1416, file: !162, line: 2637, column: 7)
!1479 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dataPtr", scope: !1480, file: !162, line: 2642, type: !655)
!1480 = distinct !DILexicalBlock(scope: !1481, file: !162, line: 2641, column: 22)
!1481 = distinct !DILexicalBlock(scope: !1482, file: !162, line: 2641, column: 13)
!1482 = distinct !DILexicalBlock(scope: !1483, file: !162, line: 2641, column: 13)
!1483 = distinct !DILexicalBlock(scope: !1484, file: !162, line: 2640, column: 33)
!1484 = distinct !DILexicalBlock(scope: !1485, file: !162, line: 2640, column: 15)
!1485 = distinct !DILexicalBlock(scope: !1486, file: !162, line: 2639, column: 30)
!1486 = distinct !DILexicalBlock(scope: !1478, file: !162, line: 2639, column: 13)
!1487 = !DISubprogram(name: "getContext", scope: !162, file: !162, line: 5493, type: !779, isLocal: true, isDefinition: true, scopeLine: 5494, flags: DIFlagPrototyped, isOptimized: true, function: i8* (%struct.XML_ParserStruct*)* @getContext, variables: !1488)
!1488 = !{!1489, !1490, !1491, !1497, !1498, !1501, !1502, !1506, !1507, !1508, !1509, !1513}
!1489 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1487, file: !162, line: 5493, type: !159)
!1490 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dtd", scope: !1487, file: !162, line: 5495, type: !1214)
!1491 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iter", scope: !1487, file: !162, line: 5496, type: !1492)
!1492 = !DIDerivedType(tag: DW_TAG_typedef, name: "HASH_TABLE_ITER", file: !162, line: 133, baseType: !1493)
!1493 = !DICompositeType(tag: DW_TAG_structure_type, file: !162, line: 130, size: 128, align: 64, elements: !1494)
!1494 = !{!1495, !1496}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1493, file: !162, line: 131, baseType: !534, size: 64, align: 64)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1493, file: !162, line: 132, baseType: !534, size: 64, align: 64, offset: 64)
!1497 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "needSep", scope: !1487, file: !162, line: 5497, type: !156)
!1498 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1499, file: !162, line: 5500, type: !221)
!1499 = distinct !DILexicalBlock(scope: !1500, file: !162, line: 5499, column: 35)
!1500 = distinct !DILexicalBlock(scope: !1487, file: !162, line: 5499, column: 7)
!1501 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !1499, file: !162, line: 5501, type: !221)
!1502 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1503, file: !162, line: 5515, type: !221)
!1503 = distinct !DILexicalBlock(scope: !1504, file: !162, line: 5514, column: 12)
!1504 = distinct !DILexicalBlock(scope: !1505, file: !162, line: 5514, column: 3)
!1505 = distinct !DILexicalBlock(scope: !1487, file: !162, line: 5514, column: 3)
!1506 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !1503, file: !162, line: 5516, type: !221)
!1507 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !1503, file: !162, line: 5517, type: !208)
!1508 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "prefix", scope: !1503, file: !162, line: 5518, type: !479)
!1509 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !1510, file: !162, line: 5542, type: !208)
!1510 = distinct !DILexicalBlock(scope: !1511, file: !162, line: 5541, column: 12)
!1511 = distinct !DILexicalBlock(scope: !1512, file: !162, line: 5541, column: 3)
!1512 = distinct !DILexicalBlock(scope: !1487, file: !162, line: 5541, column: 3)
!1513 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "e", scope: !1510, file: !162, line: 5543, type: !445)
!1514 = !DISubprogram(name: "hashTableIterInit", scope: !162, file: !162, line: 6079, type: !1515, isLocal: true, isDefinition: true, scopeLine: 6080, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.HASH_TABLE_ITER*, %struct.HASH_TABLE*)* @hashTableIterInit, variables: !1520)
!1515 = !DISubroutineType(types: !1516)
!1516 = !{null, !1517, !1518}
!1517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 64, align: 64)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 64, align: 64)
!1519 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !530)
!1520 = !{!1521, !1522}
!1521 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "iter", arg: 1, scope: !1514, file: !162, line: 6079, type: !1517)
!1522 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "table", arg: 2, scope: !1514, file: !162, line: 6079, type: !1518)
!1523 = !DISubprogram(name: "hashTableIterNext", scope: !162, file: !162, line: 6086, type: !1524, isLocal: true, isDefinition: true, scopeLine: 6087, flags: DIFlagPrototyped, isOptimized: true, function: %struct.NAMED* (%struct.HASH_TABLE_ITER*)* @hashTableIterNext, variables: !1526)
!1524 = !DISubroutineType(types: !1525)
!1525 = !{!535, !1517}
!1526 = !{!1527, !1528}
!1527 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "iter", arg: 1, scope: !1523, file: !162, line: 6086, type: !1517)
!1528 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tem", scope: !1529, file: !162, line: 6089, type: !535)
!1529 = distinct !DILexicalBlock(scope: !1523, file: !162, line: 6088, column: 32)
!1530 = !DISubprogram(name: "storeAtts", scope: !162, file: !162, line: 2698, type: !1531, isLocal: true, isDefinition: true, scopeLine: 2701, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, %struct.encoding*, i8*, %struct.TAG_NAME*, %struct.binding**)* @storeAtts, variables: !1535)
!1531 = !DISubroutineType(types: !1532)
!1532 = !{!18, !159, !319, !190, !1533, !1534}
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !607, size: 64, align: 64)
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !485, size: 64, align: 64)
!1535 = !{!1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1556, !1559, !1560, !1564, !1565, !1568, !1569, !1572, !1577, !1583, !1590, !1593, !1594, !1595, !1598, !1602, !1605, !1608, !1609, !1613, !1615, !1617, !1618, !1622, !1623}
!1536 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1530, file: !162, line: 2698, type: !159)
!1537 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "enc", arg: 2, scope: !1530, file: !162, line: 2698, type: !319)
!1538 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "attStr", arg: 3, scope: !1530, file: !162, line: 2699, type: !190)
!1539 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tagNamePtr", arg: 4, scope: !1530, file: !162, line: 2699, type: !1533)
!1540 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "bindingsPtr", arg: 5, scope: !1530, file: !162, line: 2700, type: !1534)
!1541 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dtd", scope: !1530, file: !162, line: 2702, type: !1214)
!1542 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "elementType", scope: !1530, file: !162, line: 2703, type: !473)
!1543 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nDefaultAtts", scope: !1530, file: !162, line: 2704, type: !221)
!1544 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "appAtts", scope: !1530, file: !162, line: 2705, type: !210)
!1545 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "attIndex", scope: !1530, file: !162, line: 2706, type: !221)
!1546 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "prefixLen", scope: !1530, file: !162, line: 2707, type: !221)
!1547 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1530, file: !162, line: 2708, type: !221)
!1548 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1530, file: !162, line: 2709, type: !221)
!1549 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "uri", scope: !1530, file: !162, line: 2710, type: !200)
!1550 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nPrefixes", scope: !1530, file: !162, line: 2711, type: !221)
!1551 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "binding", scope: !1530, file: !162, line: 2712, type: !485)
!1552 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "localPart", scope: !1530, file: !162, line: 2713, type: !208)
!1553 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !1554, file: !162, line: 2718, type: !208)
!1554 = distinct !DILexicalBlock(scope: !1555, file: !162, line: 2717, column: 21)
!1555 = distinct !DILexicalBlock(scope: !1530, file: !162, line: 2717, column: 7)
!1556 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldAttsSize", scope: !1557, file: !162, line: 2733, type: !221)
!1557 = distinct !DILexicalBlock(scope: !1558, file: !162, line: 2732, column: 48)
!1558 = distinct !DILexicalBlock(scope: !1530, file: !162, line: 2732, column: 7)
!1559 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !1557, file: !162, line: 2734, type: !358)
!1560 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "currAtt", scope: !1561, file: !162, line: 2755, type: !358)
!1561 = distinct !DILexicalBlock(scope: !1562, file: !162, line: 2754, column: 27)
!1562 = distinct !DILexicalBlock(scope: !1563, file: !162, line: 2754, column: 3)
!1563 = distinct !DILexicalBlock(scope: !1530, file: !162, line: 2754, column: 3)
!1564 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "attId", scope: !1561, file: !162, line: 2760, type: !521)
!1565 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1566, file: !162, line: 2785, type: !18)
!1566 = distinct !DILexicalBlock(scope: !1567, file: !162, line: 2784, column: 42)
!1567 = distinct !DILexicalBlock(scope: !1561, file: !162, line: 2784, column: 9)
!1568 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "isCdata", scope: !1566, file: !162, line: 2786, type: !156)
!1569 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !1570, file: !162, line: 2790, type: !221)
!1570 = distinct !DILexicalBlock(scope: !1571, file: !162, line: 2789, column: 34)
!1571 = distinct !DILexicalBlock(scope: !1566, file: !162, line: 2789, column: 11)
!1572 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1573, file: !162, line: 2820, type: !18)
!1573 = distinct !DILexicalBlock(scope: !1574, file: !162, line: 2818, column: 25)
!1574 = distinct !DILexicalBlock(scope: !1575, file: !162, line: 2818, column: 11)
!1575 = distinct !DILexicalBlock(scope: !1576, file: !162, line: 2817, column: 24)
!1576 = distinct !DILexicalBlock(scope: !1561, file: !162, line: 2817, column: 9)
!1577 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "da", scope: !1578, file: !162, line: 2851, type: !1581)
!1578 = distinct !DILexicalBlock(scope: !1579, file: !162, line: 2850, column: 38)
!1579 = distinct !DILexicalBlock(scope: !1580, file: !162, line: 2850, column: 3)
!1580 = distinct !DILexicalBlock(scope: !1530, file: !162, line: 2850, column: 3)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 64, align: 64)
!1582 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !514)
!1583 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1584, file: !162, line: 2855, type: !18)
!1584 = distinct !DILexicalBlock(scope: !1585, file: !162, line: 2854, column: 28)
!1585 = distinct !DILexicalBlock(scope: !1586, file: !162, line: 2854, column: 13)
!1586 = distinct !DILexicalBlock(scope: !1587, file: !162, line: 2853, column: 27)
!1587 = distinct !DILexicalBlock(scope: !1588, file: !162, line: 2853, column: 11)
!1588 = distinct !DILexicalBlock(scope: !1589, file: !162, line: 2852, column: 43)
!1589 = distinct !DILexicalBlock(scope: !1578, file: !162, line: 2852, column: 9)
!1590 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !1591, file: !162, line: 2880, type: !221)
!1591 = distinct !DILexicalBlock(scope: !1592, file: !162, line: 2879, column: 18)
!1592 = distinct !DILexicalBlock(scope: !1530, file: !162, line: 2879, column: 7)
!1593 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "version", scope: !1591, file: !162, line: 2881, type: !180)
!1594 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nsAttsSize", scope: !1591, file: !162, line: 2882, type: !221)
!1595 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !1596, file: !162, line: 2885, type: !627)
!1596 = distinct !DILexicalBlock(scope: !1597, file: !162, line: 2884, column: 54)
!1597 = distinct !DILexicalBlock(scope: !1591, file: !162, line: 2884, column: 9)
!1598 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !1599, file: !162, line: 2907, type: !208)
!1599 = distinct !DILexicalBlock(scope: !1600, file: !162, line: 2906, column: 34)
!1600 = distinct !DILexicalBlock(scope: !1601, file: !162, line: 2906, column: 5)
!1601 = distinct !DILexicalBlock(scope: !1591, file: !162, line: 2906, column: 5)
!1602 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "id", scope: !1603, file: !162, line: 2909, type: !521)
!1603 = distinct !DILexicalBlock(scope: !1604, file: !162, line: 2908, column: 23)
!1604 = distinct !DILexicalBlock(scope: !1599, file: !162, line: 2908, column: 11)
!1605 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "b", scope: !1603, file: !162, line: 2910, type: !1606)
!1606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1607, size: 64, align: 64)
!1607 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !486)
!1608 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "uriHash", scope: !1603, file: !162, line: 2911, type: !180)
!1609 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !1610, file: !162, line: 2920, type: !209)
!1610 = distinct !DILexicalBlock(scope: !1611, file: !162, line: 2919, column: 41)
!1611 = distinct !DILexicalBlock(scope: !1612, file: !162, line: 2919, column: 9)
!1612 = distinct !DILexicalBlock(scope: !1603, file: !162, line: 2919, column: 9)
!1613 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !1614, file: !162, line: 2928, type: !209)
!1614 = distinct !DILexicalBlock(scope: !1603, file: !162, line: 2927, column: 12)
!1615 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "step", scope: !1616, file: !162, line: 2937, type: !157)
!1616 = distinct !DILexicalBlock(scope: !1603, file: !162, line: 2934, column: 9)
!1617 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mask", scope: !1616, file: !162, line: 2938, type: !180)
!1618 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s1", scope: !1619, file: !162, line: 2943, type: !208)
!1619 = distinct !DILexicalBlock(scope: !1620, file: !162, line: 2942, column: 56)
!1620 = distinct !DILexicalBlock(scope: !1621, file: !162, line: 2942, column: 17)
!1621 = distinct !DILexicalBlock(scope: !1616, file: !162, line: 2940, column: 60)
!1622 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s2", scope: !1619, file: !162, line: 2944, type: !208)
!1623 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p", scope: !1624, file: !162, line: 3021, type: !598)
!1624 = distinct !DILexicalBlock(scope: !1625, file: !162, line: 3020, column: 30)
!1625 = distinct !DILexicalBlock(scope: !1530, file: !162, line: 3020, column: 7)
!1626 = !DISubprogram(name: "setElementTypePrefix", scope: !162, file: !162, line: 5400, type: !1627, isLocal: true, isDefinition: true, scopeLine: 5401, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, %struct.ELEMENT_TYPE*)* @setElementTypePrefix, variables: !1629)
!1627 = !DISubroutineType(types: !1628)
!1628 = !{!221, !159, !473}
!1629 = !{!1630, !1631, !1632, !1633, !1634, !1640}
!1630 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1626, file: !162, line: 5400, type: !159)
!1631 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "elementType", arg: 2, scope: !1626, file: !162, line: 5400, type: !473)
!1632 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dtd", scope: !1626, file: !162, line: 5402, type: !1214)
!1633 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !1626, file: !162, line: 5403, type: !208)
!1634 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "prefix", scope: !1635, file: !162, line: 5406, type: !479)
!1635 = distinct !DILexicalBlock(scope: !1636, file: !162, line: 5405, column: 24)
!1636 = distinct !DILexicalBlock(scope: !1637, file: !162, line: 5405, column: 9)
!1637 = distinct !DILexicalBlock(scope: !1638, file: !162, line: 5404, column: 49)
!1638 = distinct !DILexicalBlock(scope: !1639, file: !162, line: 5404, column: 3)
!1639 = distinct !DILexicalBlock(scope: !1626, file: !162, line: 5404, column: 3)
!1640 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !1635, file: !162, line: 5407, type: !208)
!1641 = !DISubprogram(name: "addBinding", scope: !162, file: !162, line: 3050, type: !1642, isLocal: true, isDefinition: true, scopeLine: 3052, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, %struct.prefix*, %struct.attribute_id*, i8*, %struct.binding**)* @addBinding, variables: !1644)
!1642 = !DISubroutineType(types: !1643)
!1643 = !{!18, !159, !479, !507, !208, !1534}
!1644 = !{!1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655}
!1645 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1641, file: !162, line: 3050, type: !159)
!1646 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "prefix", arg: 2, scope: !1641, file: !162, line: 3050, type: !479)
!1647 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "attId", arg: 3, scope: !1641, file: !162, line: 3050, type: !507)
!1648 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "uri", arg: 4, scope: !1641, file: !162, line: 3051, type: !208)
!1649 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "bindingsPtr", arg: 5, scope: !1641, file: !162, line: 3051, type: !1534)
!1650 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mustBeXML", scope: !1641, file: !162, line: 3073, type: !156)
!1651 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "isXML", scope: !1641, file: !162, line: 3074, type: !156)
!1652 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "isXMLNS", scope: !1641, file: !162, line: 3075, type: !156)
!1653 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "b", scope: !1641, file: !162, line: 3077, type: !485)
!1654 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !1641, file: !162, line: 3078, type: !221)
!1655 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !1656, file: !162, line: 3122, type: !200)
!1656 = distinct !DILexicalBlock(scope: !1657, file: !162, line: 3121, column: 28)
!1657 = distinct !DILexicalBlock(scope: !1658, file: !162, line: 3121, column: 9)
!1658 = distinct !DILexicalBlock(scope: !1659, file: !162, line: 3119, column: 36)
!1659 = distinct !DILexicalBlock(scope: !1641, file: !162, line: 3119, column: 7)
!1660 = !DISubprogram(name: "epilogProcessor", scope: !162, file: !162, line: 4728, type: !429, isLocal: true, isDefinition: true, scopeLine: 4732, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @epilogProcessor, variables: !1661)
!1661 = !{!1662, !1663, !1664, !1665, !1666, !1670}
!1662 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1660, file: !162, line: 4728, type: !159)
!1663 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s", arg: 2, scope: !1660, file: !162, line: 4729, type: !190)
!1664 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 3, scope: !1660, file: !162, line: 4730, type: !190)
!1665 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nextPtr", arg: 4, scope: !1660, file: !162, line: 4731, type: !331)
!1666 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "next", scope: !1667, file: !162, line: 4736, type: !190)
!1667 = distinct !DILexicalBlock(scope: !1668, file: !162, line: 4735, column: 12)
!1668 = distinct !DILexicalBlock(scope: !1669, file: !162, line: 4735, column: 3)
!1669 = distinct !DILexicalBlock(scope: !1660, file: !162, line: 4735, column: 3)
!1670 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tok", scope: !1667, file: !162, line: 4737, type: !221)
!1671 = !DISubprogram(name: "doCdataSection", scope: !162, file: !162, line: 3193, type: !1672, isLocal: true, isDefinition: true, scopeLine: 3199, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, %struct.encoding*, i8**, i8*, i8**, i8)* @doCdataSection, variables: !1674)
!1672 = !DISubroutineType(types: !1673)
!1673 = !{!18, !159, !319, !331, !190, !331, !156}
!1674 = !{!1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1688, !1689, !1693, !1695}
!1675 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1671, file: !162, line: 3193, type: !159)
!1676 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "enc", arg: 2, scope: !1671, file: !162, line: 3194, type: !319)
!1677 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "startPtr", arg: 3, scope: !1671, file: !162, line: 3195, type: !331)
!1678 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 4, scope: !1671, file: !162, line: 3196, type: !190)
!1679 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nextPtr", arg: 5, scope: !1671, file: !162, line: 3197, type: !331)
!1680 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "haveMore", arg: 6, scope: !1671, file: !162, line: 3198, type: !156)
!1681 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !1671, file: !162, line: 3200, type: !190)
!1682 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "eventPP", scope: !1671, file: !162, line: 3201, type: !331)
!1683 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "eventEndPP", scope: !1671, file: !162, line: 3202, type: !331)
!1684 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "next", scope: !1685, file: !162, line: 3216, type: !190)
!1685 = distinct !DILexicalBlock(scope: !1686, file: !162, line: 3215, column: 12)
!1686 = distinct !DILexicalBlock(scope: !1687, file: !162, line: 3215, column: 3)
!1687 = distinct !DILexicalBlock(scope: !1671, file: !162, line: 3215, column: 3)
!1688 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tok", scope: !1685, file: !162, line: 3217, type: !221)
!1689 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !1690, file: !162, line: 3238, type: !201)
!1690 = distinct !DILexicalBlock(scope: !1691, file: !162, line: 3237, column: 45)
!1691 = distinct !DILexicalBlock(scope: !1692, file: !162, line: 3237, column: 11)
!1692 = distinct !DILexicalBlock(scope: !1685, file: !162, line: 3219, column: 18)
!1693 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "charDataHandler", scope: !1694, file: !162, line: 3246, type: !217)
!1694 = distinct !DILexicalBlock(scope: !1692, file: !162, line: 3245, column: 7)
!1695 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dataPtr", scope: !1696, file: !162, line: 3250, type: !655)
!1696 = distinct !DILexicalBlock(scope: !1697, file: !162, line: 3249, column: 22)
!1697 = distinct !DILexicalBlock(scope: !1698, file: !162, line: 3249, column: 13)
!1698 = distinct !DILexicalBlock(scope: !1699, file: !162, line: 3249, column: 13)
!1699 = distinct !DILexicalBlock(scope: !1700, file: !162, line: 3248, column: 33)
!1700 = distinct !DILexicalBlock(scope: !1701, file: !162, line: 3248, column: 15)
!1701 = distinct !DILexicalBlock(scope: !1702, file: !162, line: 3247, column: 30)
!1702 = distinct !DILexicalBlock(scope: !1694, file: !162, line: 3247, column: 13)
!1703 = !DISubprogram(name: "cdataSectionProcessor", scope: !162, file: !162, line: 3167, type: !429, isLocal: true, isDefinition: true, scopeLine: 3171, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @cdataSectionProcessor, variables: !1704)
!1704 = !{!1705, !1706, !1707, !1708, !1709}
!1705 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1703, file: !162, line: 3167, type: !159)
!1706 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 2, scope: !1703, file: !162, line: 3168, type: !190)
!1707 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 3, scope: !1703, file: !162, line: 3169, type: !190)
!1708 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "endPtr", arg: 4, scope: !1703, file: !162, line: 3170, type: !331)
!1709 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1703, file: !162, line: 3172, type: !18)
!1710 = !DISubprogram(name: "externalEntityContentProcessor", scope: !162, file: !162, line: 2216, type: !429, isLocal: true, isDefinition: true, scopeLine: 2220, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @externalEntityContentProcessor, variables: !1711)
!1711 = !{!1712, !1713, !1714, !1715, !1716}
!1712 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1710, file: !162, line: 2216, type: !159)
!1713 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 2, scope: !1710, file: !162, line: 2217, type: !190)
!1714 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 3, scope: !1710, file: !162, line: 2218, type: !190)
!1715 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "endPtr", arg: 4, scope: !1710, file: !162, line: 2219, type: !331)
!1716 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1710, file: !162, line: 2221, type: !18)
!1717 = !DISubprogram(name: "storeRawNames", scope: !162, file: !162, line: 2055, type: !1718, isLocal: true, isDefinition: true, scopeLine: 2056, flags: DIFlagPrototyped, isOptimized: true, function: i8 (%struct.XML_ParserStruct*)* @storeRawNames, variables: !1720)
!1718 = !DISubroutineType(types: !1719)
!1719 = !{!156, !159}
!1720 = !{!1721, !1722, !1723, !1725, !1726, !1727}
!1721 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1717, file: !162, line: 2055, type: !159)
!1722 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tag", scope: !1717, file: !162, line: 2057, type: !598)
!1723 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bufSize", scope: !1724, file: !162, line: 2059, type: !221)
!1724 = distinct !DILexicalBlock(scope: !1717, file: !162, line: 2058, column: 15)
!1725 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nameLen", scope: !1724, file: !162, line: 2060, type: !221)
!1726 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rawNameBuf", scope: !1724, file: !162, line: 2061, type: !167)
!1727 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !1728, file: !162, line: 2074, type: !167)
!1728 = distinct !DILexicalBlock(scope: !1729, file: !162, line: 2073, column: 43)
!1729 = distinct !DILexicalBlock(scope: !1724, file: !162, line: 2073, column: 9)
!1730 = !DISubprogram(name: "getElementType", scope: !162, file: !162, line: 6381, type: !1731, isLocal: true, isDefinition: true, scopeLine: 6385, flags: DIFlagPrototyped, isOptimized: true, function: %struct.ELEMENT_TYPE* (%struct.XML_ParserStruct*, %struct.encoding*, i8*, i8*)* @getElementType, variables: !1733)
!1731 = !DISubroutineType(types: !1732)
!1732 = !{!473, !159, !319, !190, !190}
!1733 = !{!1734, !1735, !1736, !1737, !1738, !1739, !1740}
!1734 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1730, file: !162, line: 6381, type: !159)
!1735 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "enc", arg: 2, scope: !1730, file: !162, line: 6382, type: !319)
!1736 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ptr", arg: 3, scope: !1730, file: !162, line: 6383, type: !190)
!1737 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 4, scope: !1730, file: !162, line: 6384, type: !190)
!1738 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dtd", scope: !1730, file: !162, line: 6386, type: !1214)
!1739 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !1730, file: !162, line: 6387, type: !208)
!1740 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !1730, file: !162, line: 6388, type: !473)
!1741 = !DISubprogram(name: "getAttributeId", scope: !162, file: !162, line: 5430, type: !1742, isLocal: true, isDefinition: true, scopeLine: 5432, flags: DIFlagPrototyped, isOptimized: true, function: %struct.attribute_id* (%struct.XML_ParserStruct*, %struct.encoding*, i8*, i8*)* @getAttributeId, variables: !1744)
!1742 = !DISubroutineType(types: !1743)
!1743 = !{!521, !159, !319, !190, !190}
!1744 = !{!1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1758}
!1745 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1741, file: !162, line: 5430, type: !159)
!1746 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "enc", arg: 2, scope: !1741, file: !162, line: 5430, type: !319)
!1747 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 3, scope: !1741, file: !162, line: 5431, type: !190)
!1748 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 4, scope: !1741, file: !162, line: 5431, type: !190)
!1749 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dtd", scope: !1741, file: !162, line: 5433, type: !1214)
!1750 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "id", scope: !1741, file: !162, line: 5434, type: !521)
!1751 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !1741, file: !162, line: 5435, type: !208)
!1752 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1753, file: !162, line: 5465, type: !221)
!1753 = distinct !DILexicalBlock(scope: !1754, file: !162, line: 5464, column: 10)
!1754 = distinct !DILexicalBlock(scope: !1755, file: !162, line: 5452, column: 14)
!1755 = distinct !DILexicalBlock(scope: !1756, file: !162, line: 5450, column: 9)
!1756 = distinct !DILexicalBlock(scope: !1757, file: !162, line: 5448, column: 8)
!1757 = distinct !DILexicalBlock(scope: !1741, file: !162, line: 5446, column: 7)
!1758 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !1759, file: !162, line: 5469, type: !221)
!1759 = distinct !DILexicalBlock(scope: !1760, file: !162, line: 5468, column: 30)
!1760 = distinct !DILexicalBlock(scope: !1761, file: !162, line: 5468, column: 13)
!1761 = distinct !DILexicalBlock(scope: !1762, file: !162, line: 5466, column: 33)
!1762 = distinct !DILexicalBlock(scope: !1763, file: !162, line: 5466, column: 7)
!1763 = distinct !DILexicalBlock(scope: !1753, file: !162, line: 5466, column: 7)
!1764 = !DISubprogram(name: "poolAppendString", scope: !162, file: !162, line: 6187, type: !1765, isLocal: true, isDefinition: true, scopeLine: 6188, flags: DIFlagPrototyped, isOptimized: true, function: i8* (%struct.STRING_POOL*, i8*)* @poolAppendString, variables: !1767)
!1765 = !DISubroutineType(types: !1766)
!1766 = !{!208, !1150, !208}
!1767 = !{!1768, !1769}
!1768 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pool", arg: 1, scope: !1764, file: !162, line: 6187, type: !1150)
!1769 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s", arg: 2, scope: !1764, file: !162, line: 6187, type: !208)
!1770 = !DISubprogram(name: "poolAppend", scope: !162, file: !162, line: 6145, type: !1331, isLocal: true, isDefinition: true, scopeLine: 6147, flags: DIFlagPrototyped, isOptimized: true, function: i8* (%struct.STRING_POOL*, %struct.encoding*, i8*, i8*)* @poolAppend, variables: !1771)
!1771 = !{!1772, !1773, !1774, !1775}
!1772 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pool", arg: 1, scope: !1770, file: !162, line: 6145, type: !1150)
!1773 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "enc", arg: 2, scope: !1770, file: !162, line: 6145, type: !319)
!1774 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ptr", arg: 3, scope: !1770, file: !162, line: 6146, type: !190)
!1775 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 4, scope: !1770, file: !162, line: 6146, type: !190)
!1776 = !DISubprogram(name: "defineAttribute", scope: !162, file: !162, line: 5356, type: !1777, isLocal: true, isDefinition: true, scopeLine: 5358, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.ELEMENT_TYPE*, %struct.attribute_id*, i8, i8, i8*, %struct.XML_ParserStruct*)* @defineAttribute, variables: !1779)
!1777 = !DISubroutineType(types: !1778)
!1778 = !{!221, !473, !521, !156, !156, !208, !159}
!1779 = !{!1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1790, !1795}
!1780 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1776, file: !162, line: 5356, type: !473)
!1781 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "attId", arg: 2, scope: !1776, file: !162, line: 5356, type: !521)
!1782 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "isCdata", arg: 3, scope: !1776, file: !162, line: 5356, type: !156)
!1783 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "isId", arg: 4, scope: !1776, file: !162, line: 5357, type: !156)
!1784 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "value", arg: 5, scope: !1776, file: !162, line: 5357, type: !208)
!1785 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 6, scope: !1776, file: !162, line: 5357, type: !159)
!1786 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "att", scope: !1776, file: !162, line: 5359, type: !513)
!1787 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1788, file: !162, line: 5363, type: !221)
!1788 = distinct !DILexicalBlock(scope: !1789, file: !162, line: 5360, column: 22)
!1789 = distinct !DILexicalBlock(scope: !1776, file: !162, line: 5360, column: 7)
!1790 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !1791, file: !162, line: 5379, type: !513)
!1791 = distinct !DILexicalBlock(scope: !1792, file: !162, line: 5378, column: 10)
!1792 = distinct !DILexicalBlock(scope: !1793, file: !162, line: 5371, column: 9)
!1793 = distinct !DILexicalBlock(scope: !1794, file: !162, line: 5370, column: 53)
!1794 = distinct !DILexicalBlock(scope: !1776, file: !162, line: 5370, column: 7)
!1795 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "count", scope: !1791, file: !162, line: 5380, type: !221)
!1796 = !DISubprogram(name: "poolGrow", scope: !162, file: !162, line: 6210, type: !1797, isLocal: true, isDefinition: true, scopeLine: 6211, flags: DIFlagPrototyped, isOptimized: true, function: i8 (%struct.STRING_POOL*)* @poolGrow, variables: !1799)
!1797 = !DISubroutineType(types: !1798)
!1798 = !{!156, !1150}
!1799 = !{!1800, !1801, !1806, !1809, !1810, !1812}
!1800 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pool", arg: 1, scope: !1796, file: !162, line: 6210, type: !1150)
!1801 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tem", scope: !1802, file: !162, line: 6223, type: !554)
!1802 = distinct !DILexicalBlock(scope: !1803, file: !162, line: 6222, column: 59)
!1803 = distinct !DILexicalBlock(scope: !1804, file: !162, line: 6222, column: 9)
!1804 = distinct !DILexicalBlock(scope: !1805, file: !162, line: 6212, column: 25)
!1805 = distinct !DILexicalBlock(scope: !1796, file: !162, line: 6212, column: 7)
!1806 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "blockSize", scope: !1807, file: !162, line: 6236, type: !221)
!1807 = distinct !DILexicalBlock(scope: !1808, file: !162, line: 6235, column: 55)
!1808 = distinct !DILexicalBlock(scope: !1796, file: !162, line: 6235, column: 7)
!1809 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !1807, file: !162, line: 6237, type: !554)
!1810 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tem", scope: !1811, file: !162, line: 6250, type: !554)
!1811 = distinct !DILexicalBlock(scope: !1808, file: !162, line: 6249, column: 8)
!1812 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "blockSize", scope: !1811, file: !162, line: 6251, type: !221)
!1813 = !DISubprogram(name: "storeAttributeValue", scope: !162, file: !162, line: 4922, type: !1814, isLocal: true, isDefinition: true, scopeLine: 4925, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, %struct.encoding*, i8, i8*, i8*, %struct.STRING_POOL*)* @storeAttributeValue, variables: !1816)
!1814 = !DISubroutineType(types: !1815)
!1815 = !{!18, !159, !319, !156, !190, !190, !1150}
!1816 = !{!1817, !1818, !1819, !1820, !1821, !1822, !1823}
!1817 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1813, file: !162, line: 4922, type: !159)
!1818 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "enc", arg: 2, scope: !1813, file: !162, line: 4922, type: !319)
!1819 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "isCdata", arg: 3, scope: !1813, file: !162, line: 4922, type: !156)
!1820 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ptr", arg: 4, scope: !1813, file: !162, line: 4923, type: !190)
!1821 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 5, scope: !1813, file: !162, line: 4923, type: !190)
!1822 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pool", arg: 6, scope: !1813, file: !162, line: 4924, type: !1150)
!1823 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1813, file: !162, line: 4926, type: !18)
!1824 = !DISubprogram(name: "appendAttributeValue", scope: !162, file: !162, line: 4938, type: !1814, isLocal: true, isDefinition: true, scopeLine: 4941, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, %struct.encoding*, i8, i8*, i8*, %struct.STRING_POOL*)* @appendAttributeValue, variables: !1825)
!1825 = !{!1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1837, !1838, !1841, !1842, !1843, !1845, !1846, !1847, !1848, !1851}
!1826 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1824, file: !162, line: 4938, type: !159)
!1827 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "enc", arg: 2, scope: !1824, file: !162, line: 4938, type: !319)
!1828 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "isCdata", arg: 3, scope: !1824, file: !162, line: 4938, type: !156)
!1829 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ptr", arg: 4, scope: !1824, file: !162, line: 4939, type: !190)
!1830 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 5, scope: !1824, file: !162, line: 4939, type: !190)
!1831 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pool", arg: 6, scope: !1824, file: !162, line: 4940, type: !1150)
!1832 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dtd", scope: !1824, file: !162, line: 4942, type: !1214)
!1833 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "next", scope: !1834, file: !162, line: 4944, type: !190)
!1834 = distinct !DILexicalBlock(scope: !1835, file: !162, line: 4943, column: 12)
!1835 = distinct !DILexicalBlock(scope: !1836, file: !162, line: 4943, column: 3)
!1836 = distinct !DILexicalBlock(scope: !1824, file: !162, line: 4943, column: 3)
!1837 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tok", scope: !1834, file: !162, line: 4945, type: !221)
!1838 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !1839, file: !162, line: 4959, type: !1466)
!1839 = distinct !DILexicalBlock(scope: !1840, file: !162, line: 4958, column: 7)
!1840 = distinct !DILexicalBlock(scope: !1834, file: !162, line: 4946, column: 18)
!1841 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1839, file: !162, line: 4960, type: !221)
!1842 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1839, file: !162, line: 4961, type: !221)
!1843 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !1844, file: !162, line: 4999, type: !208)
!1844 = distinct !DILexicalBlock(scope: !1840, file: !162, line: 4998, column: 7)
!1845 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "entity", scope: !1844, file: !162, line: 5000, type: !445)
!1846 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "checkEntityDecl", scope: !1844, file: !162, line: 5001, type: !168)
!1847 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ch", scope: !1844, file: !162, line: 5002, type: !201)
!1848 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1849, file: !162, line: 5065, type: !18)
!1849 = distinct !DILexicalBlock(scope: !1850, file: !162, line: 5064, column: 14)
!1850 = distinct !DILexicalBlock(scope: !1844, file: !162, line: 5059, column: 13)
!1851 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "textEnd", scope: !1849, file: !162, line: 5066, type: !208)
!1852 = !DISubprogram(name: "storeEntityValue", scope: !162, file: !162, line: 5088, type: !1853, isLocal: true, isDefinition: true, scopeLine: 5092, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, %struct.encoding*, i8*, i8*)* @storeEntityValue, variables: !1855)
!1853 = !DISubroutineType(types: !1854)
!1854 = !{!18, !159, !319, !190, !190}
!1855 = !{!1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1868, !1869, !1873, !1874, !1876, !1877}
!1856 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1852, file: !162, line: 5088, type: !159)
!1857 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "enc", arg: 2, scope: !1852, file: !162, line: 5089, type: !319)
!1858 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "entityTextPtr", arg: 3, scope: !1852, file: !162, line: 5090, type: !190)
!1859 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "entityTextEnd", arg: 4, scope: !1852, file: !162, line: 5091, type: !190)
!1860 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dtd", scope: !1852, file: !162, line: 5093, type: !1214)
!1861 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pool", scope: !1852, file: !162, line: 5094, type: !1150)
!1862 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1852, file: !162, line: 5095, type: !18)
!1863 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldInEntityValue", scope: !1852, file: !162, line: 5097, type: !221)
!1864 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "next", scope: !1865, file: !162, line: 5109, type: !190)
!1865 = distinct !DILexicalBlock(scope: !1866, file: !162, line: 5108, column: 12)
!1866 = distinct !DILexicalBlock(scope: !1867, file: !162, line: 5108, column: 3)
!1867 = distinct !DILexicalBlock(scope: !1852, file: !162, line: 5108, column: 3)
!1868 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tok", scope: !1865, file: !162, line: 5110, type: !221)
!1869 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !1870, file: !162, line: 5115, type: !208)
!1870 = distinct !DILexicalBlock(scope: !1871, file: !162, line: 5114, column: 69)
!1871 = distinct !DILexicalBlock(scope: !1872, file: !162, line: 5114, column: 11)
!1872 = distinct !DILexicalBlock(scope: !1865, file: !162, line: 5111, column: 18)
!1873 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "entity", scope: !1870, file: !162, line: 5116, type: !445)
!1874 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !1875, file: !162, line: 5203, type: !1466)
!1875 = distinct !DILexicalBlock(scope: !1872, file: !162, line: 5202, column: 7)
!1876 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1875, file: !162, line: 5204, type: !221)
!1877 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1875, file: !162, line: 5205, type: !221)
!1878 = !DISubprogram(name: "doIgnoreSection", scope: !162, file: !162, line: 3329, type: !1672, isLocal: true, isDefinition: true, scopeLine: 3335, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, %struct.encoding*, i8**, i8*, i8**, i8)* @doIgnoreSection, variables: !1879)
!1879 = !{!1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890}
!1880 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1878, file: !162, line: 3329, type: !159)
!1881 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "enc", arg: 2, scope: !1878, file: !162, line: 3330, type: !319)
!1882 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "startPtr", arg: 3, scope: !1878, file: !162, line: 3331, type: !331)
!1883 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 4, scope: !1878, file: !162, line: 3332, type: !190)
!1884 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nextPtr", arg: 5, scope: !1878, file: !162, line: 3333, type: !331)
!1885 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "haveMore", arg: 6, scope: !1878, file: !162, line: 3334, type: !156)
!1886 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "next", scope: !1878, file: !162, line: 3336, type: !190)
!1887 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tok", scope: !1878, file: !162, line: 3337, type: !221)
!1888 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !1878, file: !162, line: 3338, type: !190)
!1889 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "eventPP", scope: !1878, file: !162, line: 3339, type: !331)
!1890 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "eventEndPP", scope: !1878, file: !162, line: 3340, type: !331)
!1891 = !DISubprogram(name: "ignoreSectionProcessor", scope: !162, file: !162, line: 3309, type: !429, isLocal: true, isDefinition: true, scopeLine: 3313, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @ignoreSectionProcessor, variables: !1892)
!1892 = !{!1893, !1894, !1895, !1896, !1897}
!1893 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1891, file: !162, line: 3309, type: !159)
!1894 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 2, scope: !1891, file: !162, line: 3310, type: !190)
!1895 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 3, scope: !1891, file: !162, line: 3311, type: !190)
!1896 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "endPtr", arg: 4, scope: !1891, file: !162, line: 3312, type: !331)
!1897 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1891, file: !162, line: 3314, type: !18)
!1898 = !DISubprogram(name: "nextScaffoldPart", scope: !162, file: !162, line: 6274, type: !784, isLocal: true, isDefinition: true, scopeLine: 6275, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*)* @nextScaffoldPart, variables: !1899)
!1899 = !{!1900, !1901, !1902, !1903, !1904, !1907}
!1900 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1898, file: !162, line: 6274, type: !159)
!1901 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dtd", scope: !1898, file: !162, line: 6276, type: !1214)
!1902 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "me", scope: !1898, file: !162, line: 6277, type: !579)
!1903 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "next", scope: !1898, file: !162, line: 6278, type: !221)
!1904 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !1905, file: !162, line: 6288, type: !579)
!1905 = distinct !DILexicalBlock(scope: !1906, file: !162, line: 6287, column: 42)
!1906 = distinct !DILexicalBlock(scope: !1898, file: !162, line: 6287, column: 7)
!1907 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "parent", scope: !1908, file: !162, line: 6308, type: !579)
!1908 = distinct !DILexicalBlock(scope: !1909, file: !162, line: 6307, column: 24)
!1909 = distinct !DILexicalBlock(scope: !1898, file: !162, line: 6307, column: 7)
!1910 = !DISubprogram(name: "processInternalEntity", scope: !162, file: !162, line: 4795, type: !1911, isLocal: true, isDefinition: true, scopeLine: 4797, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, %struct.ENTITY*, i8)* @processInternalEntity, variables: !1913)
!1911 = !DISubroutineType(types: !1912)
!1912 = !{!18, !159, !445, !156}
!1913 = !{!1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922}
!1914 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1910, file: !162, line: 4795, type: !159)
!1915 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "entity", arg: 2, scope: !1910, file: !162, line: 4795, type: !445)
!1916 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "betweenDecl", arg: 3, scope: !1910, file: !162, line: 4796, type: !156)
!1917 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "textStart", scope: !1910, file: !162, line: 4798, type: !190)
!1918 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "textEnd", scope: !1910, file: !162, line: 4798, type: !190)
!1919 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "next", scope: !1910, file: !162, line: 4799, type: !190)
!1920 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1910, file: !162, line: 4800, type: !18)
!1921 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "openEntity", scope: !1910, file: !162, line: 4801, type: !436)
!1922 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tok", scope: !1923, file: !162, line: 4826, type: !221)
!1923 = distinct !DILexicalBlock(scope: !1924, file: !162, line: 4825, column: 25)
!1924 = distinct !DILexicalBlock(scope: !1910, file: !162, line: 4825, column: 7)
!1925 = !DISubprogram(name: "internalEntityProcessor", scope: !162, file: !162, line: 4852, type: !429, isLocal: true, isDefinition: true, scopeLine: 4856, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @internalEntityProcessor, variables: !1926)
!1926 = !{!1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1940}
!1927 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1925, file: !162, line: 4852, type: !159)
!1928 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s", arg: 2, scope: !1925, file: !162, line: 4853, type: !190)
!1929 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 3, scope: !1925, file: !162, line: 4854, type: !190)
!1930 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nextPtr", arg: 4, scope: !1925, file: !162, line: 4855, type: !331)
!1931 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "entity", scope: !1925, file: !162, line: 4857, type: !445)
!1932 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "textStart", scope: !1925, file: !162, line: 4858, type: !190)
!1933 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "textEnd", scope: !1925, file: !162, line: 4858, type: !190)
!1934 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "next", scope: !1925, file: !162, line: 4859, type: !190)
!1935 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1925, file: !162, line: 4860, type: !18)
!1936 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "openEntity", scope: !1925, file: !162, line: 4861, type: !436)
!1937 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tok", scope: !1938, file: !162, line: 4871, type: !221)
!1938 = distinct !DILexicalBlock(scope: !1939, file: !162, line: 4870, column: 25)
!1939 = distinct !DILexicalBlock(scope: !1925, file: !162, line: 4870, column: 7)
!1940 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tok", scope: !1941, file: !162, line: 4896, type: !221)
!1941 = distinct !DILexicalBlock(scope: !1942, file: !162, line: 4895, column: 25)
!1942 = distinct !DILexicalBlock(scope: !1925, file: !162, line: 4895, column: 7)
!1943 = !DISubprogram(name: "build_model", scope: !162, file: !162, line: 6360, type: !1944, isLocal: true, isDefinition: true, scopeLine: 6361, flags: DIFlagPrototyped, isOptimized: true, function: %struct.XML_cp* (%struct.XML_ParserStruct*)* @build_model, variables: !1946)
!1944 = !DISubroutineType(types: !1945)
!1945 = !{!293, !159}
!1946 = !{!1947, !1948, !1949, !1950, !1951, !1952}
!1947 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1943, file: !162, line: 6360, type: !159)
!1948 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dtd", scope: !1943, file: !162, line: 6362, type: !1214)
!1949 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !1943, file: !162, line: 6363, type: !293)
!1950 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cpos", scope: !1943, file: !162, line: 6364, type: !293)
!1951 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "str", scope: !1943, file: !162, line: 6365, type: !200)
!1952 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "allocsize", scope: !1943, file: !162, line: 6366, type: !221)
!1953 = !DISubprogram(name: "build_node", scope: !162, file: !162, line: 6322, type: !1954, isLocal: true, isDefinition: true, scopeLine: 6327, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*, i32, %struct.XML_cp*, %struct.XML_cp**, i8**)* @build_node, variables: !1958)
!1954 = !DISubroutineType(types: !1955)
!1955 = !{null, !159, !221, !293, !1956, !1957}
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64, align: 64)
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 64, align: 64)
!1958 = !{!1959, !1960, !1961, !1962, !1963, !1964, !1965, !1968, !1970}
!1959 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1953, file: !162, line: 6322, type: !159)
!1960 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "src_node", arg: 2, scope: !1953, file: !162, line: 6323, type: !221)
!1961 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dest", arg: 3, scope: !1953, file: !162, line: 6324, type: !293)
!1962 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "contpos", arg: 4, scope: !1953, file: !162, line: 6325, type: !1956)
!1963 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "strpos", arg: 5, scope: !1953, file: !162, line: 6326, type: !1957)
!1964 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dtd", scope: !1953, file: !162, line: 6328, type: !1214)
!1965 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "src", scope: !1966, file: !162, line: 6332, type: !208)
!1966 = distinct !DILexicalBlock(scope: !1967, file: !162, line: 6331, column: 37)
!1967 = distinct !DILexicalBlock(scope: !1953, file: !162, line: 6331, column: 7)
!1968 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1969, file: !162, line: 6345, type: !301)
!1969 = distinct !DILexicalBlock(scope: !1967, file: !162, line: 6344, column: 8)
!1970 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cn", scope: !1969, file: !162, line: 6346, type: !221)
!1971 = !DISubprogram(name: "reportProcessingInstruction", scope: !162, file: !162, line: 5277, type: !1972, isLocal: true, isDefinition: true, scopeLine: 5279, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, %struct.encoding*, i8*, i8*)* @reportProcessingInstruction, variables: !1974)
!1972 = !DISubroutineType(types: !1973)
!1973 = !{!221, !159, !319, !190, !190}
!1974 = !{!1975, !1976, !1977, !1978, !1979, !1980, !1981}
!1975 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1971, file: !162, line: 5277, type: !159)
!1976 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "enc", arg: 2, scope: !1971, file: !162, line: 5277, type: !319)
!1977 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 3, scope: !1971, file: !162, line: 5278, type: !190)
!1978 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 4, scope: !1971, file: !162, line: 5278, type: !190)
!1979 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "target", scope: !1971, file: !162, line: 5280, type: !208)
!1980 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "data", scope: !1971, file: !162, line: 5281, type: !200)
!1981 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tem", scope: !1971, file: !162, line: 5282, type: !190)
!1982 = !DISubprogram(name: "normalizeLines", scope: !162, file: !162, line: 5254, type: !1381, isLocal: true, isDefinition: true, scopeLine: 5255, flags: DIFlagPrototyped, isOptimized: true, function: void (i8*)* @normalizeLines, variables: !1983)
!1983 = !{!1984, !1985}
!1984 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s", arg: 1, scope: !1982, file: !162, line: 5254, type: !200)
!1985 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p", scope: !1982, file: !162, line: 5256, type: !200)
!1986 = !DISubprogram(name: "reportComment", scope: !162, file: !162, line: 5306, type: !1972, isLocal: true, isDefinition: true, scopeLine: 5308, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, %struct.encoding*, i8*, i8*)* @reportComment, variables: !1987)
!1987 = !{!1988, !1989, !1990, !1991, !1992}
!1988 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !1986, file: !162, line: 5306, type: !159)
!1989 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "enc", arg: 2, scope: !1986, file: !162, line: 5306, type: !319)
!1990 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 3, scope: !1986, file: !162, line: 5307, type: !190)
!1991 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 4, scope: !1986, file: !162, line: 5307, type: !190)
!1992 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "data", scope: !1986, file: !162, line: 5309, type: !200)
!1993 = !DISubprogram(name: "destroyBindings", scope: !162, file: !162, line: 1117, type: !1994, isLocal: true, isDefinition: true, scopeLine: 1118, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.binding*, %struct.XML_ParserStruct*)* @destroyBindings, variables: !1996)
!1994 = !DISubroutineType(types: !1995)
!1995 = !{null, !485, !159}
!1996 = !{!1997, !1998, !1999}
!1997 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "bindings", arg: 1, scope: !1993, file: !162, line: 1117, type: !485)
!1998 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 2, scope: !1993, file: !162, line: 1117, type: !159)
!1999 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "b", scope: !2000, file: !162, line: 1120, type: !485)
!2000 = distinct !DILexicalBlock(scope: !2001, file: !162, line: 1119, column: 12)
!2001 = distinct !DILexicalBlock(scope: !2002, file: !162, line: 1119, column: 3)
!2002 = distinct !DILexicalBlock(scope: !1993, file: !162, line: 1119, column: 3)
!2003 = !DISubprogram(name: "startParsing", scope: !162, file: !162, line: 702, type: !1718, isLocal: true, isDefinition: true, scopeLine: 703, flags: DIFlagPrototyped, isOptimized: true, function: i8 (%struct.XML_ParserStruct*)* @startParsing, variables: !2004)
!2004 = !{!2005}
!2005 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !2003, file: !162, line: 702, type: !159)
!2006 = !DISubprogram(name: "generate_hash_secret_salt", scope: !162, file: !162, line: 694, type: !2007, isLocal: true, isDefinition: true, scopeLine: 695, flags: DIFlagPrototyped, isOptimized: true, function: i64 ()* @generate_hash_secret_salt, variables: !2009)
!2007 = !DISubroutineType(types: !2008)
!2008 = !{!180}
!2009 = !{!2010}
!2010 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seed", scope: !2006, file: !162, line: 696, type: !301)
!2011 = !DISubprogram(name: "externalEntityInitProcessor", scope: !162, file: !162, line: 2115, type: !429, isLocal: true, isDefinition: true, scopeLine: 2119, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @externalEntityInitProcessor, variables: !2012)
!2012 = !{!2013, !2014, !2015, !2016, !2017}
!2013 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !2011, file: !162, line: 2115, type: !159)
!2014 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 2, scope: !2011, file: !162, line: 2116, type: !190)
!2015 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 3, scope: !2011, file: !162, line: 2117, type: !190)
!2016 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "endPtr", arg: 4, scope: !2011, file: !162, line: 2118, type: !331)
!2017 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !2011, file: !162, line: 2120, type: !18)
!2018 = !DISubprogram(name: "externalEntityInitProcessor2", scope: !162, file: !162, line: 2128, type: !429, isLocal: true, isDefinition: true, scopeLine: 2132, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @externalEntityInitProcessor2, variables: !2019)
!2019 = !{!2020, !2021, !2022, !2023, !2024, !2025}
!2020 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !2018, file: !162, line: 2128, type: !159)
!2021 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 2, scope: !2018, file: !162, line: 2129, type: !190)
!2022 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 3, scope: !2018, file: !162, line: 2130, type: !190)
!2023 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "endPtr", arg: 4, scope: !2018, file: !162, line: 2131, type: !331)
!2024 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "next", scope: !2018, file: !162, line: 2133, type: !190)
!2025 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tok", scope: !2018, file: !162, line: 2134, type: !221)
!2026 = !DISubprogram(name: "externalEntityInitProcessor3", scope: !162, file: !162, line: 2168, type: !429, isLocal: true, isDefinition: true, scopeLine: 2172, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @externalEntityInitProcessor3, variables: !2027)
!2027 = !{!2028, !2029, !2030, !2031, !2032, !2033, !2034}
!2028 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !2026, file: !162, line: 2168, type: !159)
!2029 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 2, scope: !2026, file: !162, line: 2169, type: !190)
!2030 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 3, scope: !2026, file: !162, line: 2170, type: !190)
!2031 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "endPtr", arg: 4, scope: !2026, file: !162, line: 2171, type: !331)
!2032 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tok", scope: !2026, file: !162, line: 2173, type: !221)
!2033 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "next", scope: !2026, file: !162, line: 2174, type: !190)
!2034 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !2035, file: !162, line: 2182, type: !18)
!2035 = distinct !DILexicalBlock(scope: !2036, file: !162, line: 2181, column: 5)
!2036 = distinct !DILexicalBlock(scope: !2026, file: !162, line: 2179, column: 16)
!2037 = !DISubprogram(name: "externalParEntInitProcessor", scope: !162, file: !162, line: 3562, type: !429, isLocal: true, isDefinition: true, scopeLine: 3566, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @externalParEntInitProcessor, variables: !2038)
!2038 = !{!2039, !2040, !2041, !2042, !2043}
!2039 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !2037, file: !162, line: 3562, type: !159)
!2040 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s", arg: 2, scope: !2037, file: !162, line: 3563, type: !190)
!2041 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 3, scope: !2037, file: !162, line: 3564, type: !190)
!2042 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nextPtr", arg: 4, scope: !2037, file: !162, line: 3565, type: !331)
!2043 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !2037, file: !162, line: 3567, type: !18)
!2044 = !DISubprogram(name: "entityValueInitProcessor", scope: !162, file: !162, line: 3586, type: !429, isLocal: true, isDefinition: true, scopeLine: 3590, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @entityValueInitProcessor, variables: !2045)
!2045 = !{!2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053}
!2046 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !2044, file: !162, line: 3586, type: !159)
!2047 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s", arg: 2, scope: !2044, file: !162, line: 3587, type: !190)
!2048 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 3, scope: !2044, file: !162, line: 3588, type: !190)
!2049 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nextPtr", arg: 4, scope: !2044, file: !162, line: 3589, type: !331)
!2050 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tok", scope: !2044, file: !162, line: 3591, type: !221)
!2051 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "start", scope: !2044, file: !162, line: 3592, type: !190)
!2052 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "next", scope: !2044, file: !162, line: 3593, type: !190)
!2053 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !2054, file: !162, line: 3619, type: !18)
!2054 = distinct !DILexicalBlock(scope: !2055, file: !162, line: 3618, column: 25)
!2055 = distinct !DILexicalBlock(scope: !2056, file: !162, line: 3618, column: 14)
!2056 = distinct !DILexicalBlock(scope: !2057, file: !162, line: 3599, column: 9)
!2057 = distinct !DILexicalBlock(scope: !2058, file: !162, line: 3596, column: 12)
!2058 = distinct !DILexicalBlock(scope: !2059, file: !162, line: 3596, column: 3)
!2059 = distinct !DILexicalBlock(scope: !2044, file: !162, line: 3596, column: 3)
!2060 = !DISubprogram(name: "entityValueProcessor", scope: !162, file: !162, line: 3694, type: !429, isLocal: true, isDefinition: true, scopeLine: 3698, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @entityValueProcessor, variables: !2061)
!2061 = !{!2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069}
!2062 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !2060, file: !162, line: 3694, type: !159)
!2063 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s", arg: 2, scope: !2060, file: !162, line: 3695, type: !190)
!2064 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 3, scope: !2060, file: !162, line: 3696, type: !190)
!2065 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nextPtr", arg: 4, scope: !2060, file: !162, line: 3697, type: !331)
!2066 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "start", scope: !2060, file: !162, line: 3699, type: !190)
!2067 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "next", scope: !2060, file: !162, line: 3700, type: !190)
!2068 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "enc", scope: !2060, file: !162, line: 3701, type: !319)
!2069 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tok", scope: !2060, file: !162, line: 3702, type: !221)
!2070 = !DISubprogram(name: "externalParEntProcessor", scope: !162, file: !162, line: 3653, type: !429, isLocal: true, isDefinition: true, scopeLine: 3657, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @externalParEntProcessor, variables: !2071)
!2071 = !{!2072, !2073, !2074, !2075, !2076, !2077}
!2072 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !2070, file: !162, line: 3653, type: !159)
!2073 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s", arg: 2, scope: !2070, file: !162, line: 3654, type: !190)
!2074 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 3, scope: !2070, file: !162, line: 3655, type: !190)
!2075 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nextPtr", arg: 4, scope: !2070, file: !162, line: 3656, type: !331)
!2076 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "next", scope: !2070, file: !162, line: 3658, type: !190)
!2077 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tok", scope: !2070, file: !162, line: 3659, type: !221)
!2078 = !DISubprogram(name: "errorProcessor", scope: !162, file: !162, line: 4913, type: !429, isLocal: true, isDefinition: true, scopeLine: 4917, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @errorProcessor, variables: !2079)
!2079 = !{!2080, !2081, !2082, !2083}
!2080 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !2078, file: !162, line: 4913, type: !159)
!2081 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s", arg: 2, scope: !2078, file: !162, line: 4914, type: !190)
!2082 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 3, scope: !2078, file: !162, line: 4915, type: !190)
!2083 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nextPtr", arg: 4, scope: !2078, file: !162, line: 4916, type: !331)
!2084 = !DISubprogram(name: "reportDefault", scope: !162, file: !162, line: 5328, type: !2085, isLocal: true, isDefinition: true, scopeLine: 5330, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XML_ParserStruct*, %struct.encoding*, i8*, i8*)* @reportDefault, variables: !2087)
!2085 = !DISubroutineType(types: !2086)
!2086 = !{null, !159, !319, !190, !190}
!2087 = !{!2088, !2089, !2090, !2091, !2092, !2095, !2096}
!2088 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !2084, file: !162, line: 5328, type: !159)
!2089 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "enc", arg: 2, scope: !2084, file: !162, line: 5328, type: !319)
!2090 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s", arg: 3, scope: !2084, file: !162, line: 5329, type: !190)
!2091 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 4, scope: !2084, file: !162, line: 5329, type: !190)
!2092 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "eventPP", scope: !2093, file: !162, line: 5332, type: !331)
!2093 = distinct !DILexicalBlock(scope: !2094, file: !162, line: 5331, column: 25)
!2094 = distinct !DILexicalBlock(scope: !2084, file: !162, line: 5331, column: 7)
!2095 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "eventEndPP", scope: !2093, file: !162, line: 5333, type: !331)
!2096 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dataPtr", scope: !2097, file: !162, line: 5343, type: !655)
!2097 = distinct !DILexicalBlock(scope: !2093, file: !162, line: 5342, column: 8)
!2098 = !DISubprogram(name: "setContext", scope: !162, file: !162, line: 5562, type: !679, isLocal: true, isDefinition: true, scopeLine: 5563, flags: DIFlagPrototyped, isOptimized: true, function: i8 (%struct.XML_ParserStruct*, i8*)* @setContext, variables: !2099)
!2099 = !{!2100, !2101, !2102, !2103, !2104, !2108}
!2100 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parser", arg: 1, scope: !2098, file: !162, line: 5562, type: !159)
!2101 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "context", arg: 2, scope: !2098, file: !162, line: 5562, type: !208)
!2102 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dtd", scope: !2098, file: !162, line: 5564, type: !1214)
!2103 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !2098, file: !162, line: 5565, type: !208)
!2104 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "e", scope: !2105, file: !162, line: 5569, type: !445)
!2105 = distinct !DILexicalBlock(scope: !2106, file: !162, line: 5568, column: 35)
!2106 = distinct !DILexicalBlock(scope: !2107, file: !162, line: 5568, column: 9)
!2107 = distinct !DILexicalBlock(scope: !2098, file: !162, line: 5567, column: 28)
!2108 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "prefix", scope: !2109, file: !162, line: 5581, type: !479)
!2109 = distinct !DILexicalBlock(scope: !2110, file: !162, line: 5580, column: 26)
!2110 = distinct !DILexicalBlock(scope: !2106, file: !162, line: 5580, column: 14)
!2111 = !DISubprogram(name: "dtdReset", scope: !162, file: !162, line: 5678, type: !2112, isLocal: true, isDefinition: true, scopeLine: 5679, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.DTD*, %struct.XML_Memory_Handling_Suite*)* @dtdReset, variables: !2114)
!2112 = !DISubroutineType(types: !2113)
!2113 = !{null, !525, !545}
!2114 = !{!2115, !2116, !2117, !2118}
!2115 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "p", arg: 1, scope: !2111, file: !162, line: 5678, type: !525)
!2116 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ms", arg: 2, scope: !2111, file: !162, line: 5678, type: !545)
!2117 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iter", scope: !2111, file: !162, line: 5680, type: !1492)
!2118 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "e", scope: !2119, file: !162, line: 5683, type: !473)
!2119 = distinct !DILexicalBlock(scope: !2120, file: !162, line: 5682, column: 12)
!2120 = distinct !DILexicalBlock(scope: !2121, file: !162, line: 5682, column: 3)
!2121 = distinct !DILexicalBlock(scope: !2111, file: !162, line: 5682, column: 3)
!2122 = !DISubprogram(name: "hashTableClear", scope: !162, file: !162, line: 6049, type: !2123, isLocal: true, isDefinition: true, scopeLine: 6050, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.HASH_TABLE*)* @hashTableClear, variables: !2125)
!2123 = !DISubroutineType(types: !2124)
!2124 = !{null, !1143}
!2125 = !{!2126, !2127}
!2126 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "table", arg: 1, scope: !2122, file: !162, line: 6049, type: !1143)
!2127 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !2122, file: !162, line: 6051, type: !178)
!2128 = !DISubprogram(name: "dtdDestroy", scope: !162, file: !162, line: 5720, type: !2129, isLocal: true, isDefinition: true, scopeLine: 5721, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.DTD*, i8, %struct.XML_Memory_Handling_Suite*)* @dtdDestroy, variables: !2131)
!2129 = !DISubroutineType(types: !2130)
!2130 = !{null, !525, !156, !545}
!2131 = !{!2132, !2133, !2134, !2135, !2136}
!2132 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "p", arg: 1, scope: !2128, file: !162, line: 5720, type: !525)
!2133 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "isDocEntity", arg: 2, scope: !2128, file: !162, line: 5720, type: !156)
!2134 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ms", arg: 3, scope: !2128, file: !162, line: 5720, type: !545)
!2135 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iter", scope: !2128, file: !162, line: 5722, type: !1492)
!2136 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "e", scope: !2137, file: !162, line: 5725, type: !473)
!2137 = distinct !DILexicalBlock(scope: !2138, file: !162, line: 5724, column: 12)
!2138 = distinct !DILexicalBlock(scope: !2139, file: !162, line: 5724, column: 3)
!2139 = distinct !DILexicalBlock(scope: !2128, file: !162, line: 5724, column: 3)
!2140 = !DISubprogram(name: "hashTableDestroy", scope: !162, file: !162, line: 6060, type: !2123, isLocal: true, isDefinition: true, scopeLine: 6061, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.HASH_TABLE*)* @hashTableDestroy, variables: !2141)
!2141 = !{!2142, !2143}
!2142 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "table", arg: 1, scope: !2140, file: !162, line: 6060, type: !1143)
!2143 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !2140, file: !162, line: 6062, type: !178)
!2144 = !DISubprogram(name: "dtdCopy", scope: !162, file: !162, line: 5751, type: !2145, isLocal: true, isDefinition: true, scopeLine: 5752, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, %struct.DTD*, %struct.DTD*, %struct.XML_Memory_Handling_Suite*)* @dtdCopy, variables: !2149)
!2145 = !DISubroutineType(types: !2146)
!2146 = !{!221, !159, !525, !2147, !545}
!2147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2148, size: 64, align: 64)
!2148 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !526)
!2149 = !{!2150, !2151, !2152, !2153, !2154, !2155, !2159, !2162, !2166, !2167, !2168, !2172, !2173, !2174}
!2150 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "oldParser", arg: 1, scope: !2144, file: !162, line: 5751, type: !159)
!2151 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "newDtd", arg: 2, scope: !2144, file: !162, line: 5751, type: !525)
!2152 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "oldDtd", arg: 3, scope: !2144, file: !162, line: 5751, type: !2147)
!2153 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ms", arg: 4, scope: !2144, file: !162, line: 5751, type: !545)
!2154 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iter", scope: !2144, file: !162, line: 5753, type: !1492)
!2155 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !2156, file: !162, line: 5759, type: !208)
!2156 = distinct !DILexicalBlock(scope: !2157, file: !162, line: 5758, column: 12)
!2157 = distinct !DILexicalBlock(scope: !2158, file: !162, line: 5758, column: 3)
!2158 = distinct !DILexicalBlock(scope: !2144, file: !162, line: 5758, column: 3)
!2159 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldP", scope: !2156, file: !162, line: 5760, type: !2160)
!2160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2161, size: 64, align: 64)
!2161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !480)
!2162 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newA", scope: !2163, file: !162, line: 5775, type: !521)
!2163 = distinct !DILexicalBlock(scope: !2164, file: !162, line: 5774, column: 12)
!2164 = distinct !DILexicalBlock(scope: !2165, file: !162, line: 5774, column: 3)
!2165 = distinct !DILexicalBlock(scope: !2144, file: !162, line: 5774, column: 3)
!2166 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !2163, file: !162, line: 5776, type: !208)
!2167 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldA", scope: !2163, file: !162, line: 5777, type: !507)
!2168 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !2169, file: !162, line: 5808, type: !221)
!2169 = distinct !DILexicalBlock(scope: !2170, file: !162, line: 5807, column: 12)
!2170 = distinct !DILexicalBlock(scope: !2171, file: !162, line: 5807, column: 3)
!2171 = distinct !DILexicalBlock(scope: !2144, file: !162, line: 5807, column: 3)
!2172 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newE", scope: !2169, file: !162, line: 5809, type: !473)
!2173 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !2169, file: !162, line: 5810, type: !208)
!2174 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldE", scope: !2169, file: !162, line: 5811, type: !2175)
!2175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2176, size: 64, align: 64)
!2176 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !474)
!2177 = !DISubprogram(name: "copyEntityTable", scope: !162, file: !162, line: 5883, type: !2178, isLocal: true, isDefinition: true, scopeLine: 5887, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XML_ParserStruct*, %struct.HASH_TABLE*, %struct.STRING_POOL*, %struct.HASH_TABLE*)* @copyEntityTable, variables: !2180)
!2178 = !DISubroutineType(types: !2179)
!2179 = !{!221, !159, !1143, !1150, !1518}
!2180 = !{!2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2192, !2193, !2196, !2199, !2201}
!2181 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "oldParser", arg: 1, scope: !2177, file: !162, line: 5883, type: !159)
!2182 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "newTable", arg: 2, scope: !2177, file: !162, line: 5884, type: !1143)
!2183 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "newPool", arg: 3, scope: !2177, file: !162, line: 5885, type: !1150)
!2184 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "oldTable", arg: 4, scope: !2177, file: !162, line: 5886, type: !1518)
!2185 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iter", scope: !2177, file: !162, line: 5888, type: !1492)
!2186 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cachedOldBase", scope: !2177, file: !162, line: 5889, type: !208)
!2187 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cachedNewBase", scope: !2177, file: !162, line: 5890, type: !208)
!2188 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newE", scope: !2189, file: !162, line: 5895, type: !445)
!2189 = distinct !DILexicalBlock(scope: !2190, file: !162, line: 5894, column: 12)
!2190 = distinct !DILexicalBlock(scope: !2191, file: !162, line: 5894, column: 3)
!2191 = distinct !DILexicalBlock(scope: !2177, file: !162, line: 5894, column: 3)
!2192 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !2189, file: !162, line: 5896, type: !208)
!2193 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldE", scope: !2189, file: !162, line: 5897, type: !2194)
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 64, align: 64)
!2195 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !446)
!2196 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tem", scope: !2197, file: !162, line: 5907, type: !208)
!2197 = distinct !DILexicalBlock(scope: !2198, file: !162, line: 5906, column: 25)
!2198 = distinct !DILexicalBlock(scope: !2189, file: !162, line: 5906, column: 9)
!2199 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tem", scope: !2200, file: !162, line: 5930, type: !208)
!2200 = distinct !DILexicalBlock(scope: !2198, file: !162, line: 5929, column: 10)
!2201 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tem", scope: !2202, file: !162, line: 5938, type: !208)
!2202 = distinct !DILexicalBlock(scope: !2203, file: !162, line: 5937, column: 25)
!2203 = distinct !DILexicalBlock(scope: !2189, file: !162, line: 5937, column: 9)
!2204 = !DISubprogram(name: "poolCopyStringN", scope: !162, file: !162, line: 6173, type: !2205, isLocal: true, isDefinition: true, scopeLine: 6174, flags: DIFlagPrototyped, isOptimized: true, function: i8* (%struct.STRING_POOL*, i8*, i32)* @poolCopyStringN, variables: !2207)
!2205 = !DISubroutineType(types: !2206)
!2206 = !{!208, !1150, !208, !221}
!2207 = !{!2208, !2209, !2210}
!2208 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pool", arg: 1, scope: !2204, file: !162, line: 6173, type: !1150)
!2209 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s", arg: 2, scope: !2204, file: !162, line: 6173, type: !208)
!2210 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n", arg: 3, scope: !2204, file: !162, line: 6173, type: !221)
!2211 = !DISubprogram(name: "poolClear", scope: !162, file: !162, line: 6108, type: !2212, isLocal: true, isDefinition: true, scopeLine: 6109, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.STRING_POOL*)* @poolClear, variables: !2214)
!2212 = !DISubroutineType(types: !2213)
!2213 = !{null, !1150}
!2214 = !{!2215, !2216, !2219}
!2215 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pool", arg: 1, scope: !2211, file: !162, line: 6108, type: !1150)
!2216 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p", scope: !2217, file: !162, line: 6113, type: !554)
!2217 = distinct !DILexicalBlock(scope: !2218, file: !162, line: 6112, column: 8)
!2218 = distinct !DILexicalBlock(scope: !2211, file: !162, line: 6110, column: 7)
!2219 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tem", scope: !2220, file: !162, line: 6115, type: !554)
!2220 = distinct !DILexicalBlock(scope: !2217, file: !162, line: 6114, column: 15)
!2221 = !DISubprogram(name: "poolDestroy", scope: !162, file: !162, line: 6128, type: !2212, isLocal: true, isDefinition: true, scopeLine: 6129, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.STRING_POOL*)* @poolDestroy, variables: !2222)
!2222 = !{!2223, !2224, !2225, !2227}
!2223 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pool", arg: 1, scope: !2221, file: !162, line: 6128, type: !1150)
!2224 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p", scope: !2221, file: !162, line: 6130, type: !554)
!2225 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tem", scope: !2226, file: !162, line: 6132, type: !554)
!2226 = distinct !DILexicalBlock(scope: !2221, file: !162, line: 6131, column: 13)
!2227 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tem", scope: !2228, file: !162, line: 6138, type: !554)
!2228 = distinct !DILexicalBlock(scope: !2221, file: !162, line: 6137, column: 13)
!2229 = !DISubprogram(name: "poolCopyString", scope: !162, file: !162, line: 6161, type: !1765, isLocal: true, isDefinition: true, scopeLine: 6162, flags: DIFlagPrototyped, isOptimized: true, function: i8* (%struct.STRING_POOL*, i8*)* @poolCopyString, variables: !2230)
!2230 = !{!2231, !2232}
!2231 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pool", arg: 1, scope: !2229, file: !162, line: 6161, type: !1150)
!2232 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s", arg: 2, scope: !2229, file: !162, line: 6161, type: !208)
!2233 = !{!2234, !2239, !2243, !2245, !2247, !2251, !2252, !2256, !2257, !2261, !2265, !2266, !2270, !2271, !2272, !2276, !2278, !2282, !2283}
!2234 = !DIGlobalVariable(name: "message", scope: !1086, file: !162, line: 1930, type: !2235, isLocal: true, isDefinition: true, variable: [41 x i8*]* @PyExpat_XML_ErrorString.message)
!2235 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2236, size: 2624, align: 64, elements: !2237)
!2236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1089)
!2237 = !{!2238}
!2238 = !DISubrange(count: 41)
!2239 = !DIGlobalVariable(name: "features", scope: !1109, file: !162, line: 2013, type: !2240, isLocal: true, isDefinition: true, variable: [6 x %struct.XML_Feature]* @PyExpat_XML_GetFeatureList.features)
!2240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1113, size: 1152, align: 64, elements: !2241)
!2241 = !{!2242}
!2242 = !DISubrange(count: 6)
!2243 = !DIGlobalVariable(name: "externalSubsetName", scope: !1201, file: !162, line: 3754, type: !2244, isLocal: true, isDefinition: true, variable: [2 x i8]* @doProlog.externalSubsetName)
!2244 = !DICompositeType(tag: DW_TAG_array_type, baseType: !209, size: 16, align: 8, elements: !336)
!2245 = !DIGlobalVariable(name: "atypeCDATA", scope: !1201, file: !162, line: 3756, type: !2246, isLocal: true, isDefinition: true, variable: [6 x i8]* @doProlog.atypeCDATA)
!2246 = !DICompositeType(tag: DW_TAG_array_type, baseType: !209, size: 48, align: 8, elements: !2241)
!2247 = !DIGlobalVariable(name: "atypeID", scope: !1201, file: !162, line: 3758, type: !2248, isLocal: true, isDefinition: true, variable: [3 x i8]* @doProlog.atypeID)
!2248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !209, size: 24, align: 8, elements: !2249)
!2249 = !{!2250}
!2250 = !DISubrange(count: 3)
!2251 = !DIGlobalVariable(name: "atypeIDREF", scope: !1201, file: !162, line: 3759, type: !2246, isLocal: true, isDefinition: true, variable: [6 x i8]* @doProlog.atypeIDREF)
!2252 = !DIGlobalVariable(name: "atypeIDREFS", scope: !1201, file: !162, line: 3761, type: !2253, isLocal: true, isDefinition: true, variable: [7 x i8]* @doProlog.atypeIDREFS)
!2253 = !DICompositeType(tag: DW_TAG_array_type, baseType: !209, size: 56, align: 8, elements: !2254)
!2254 = !{!2255}
!2255 = !DISubrange(count: 7)
!2256 = !DIGlobalVariable(name: "atypeENTITY", scope: !1201, file: !162, line: 3763, type: !2253, isLocal: true, isDefinition: true, variable: [7 x i8]* @doProlog.atypeENTITY)
!2257 = !DIGlobalVariable(name: "atypeENTITIES", scope: !1201, file: !162, line: 3765, type: !2258, isLocal: true, isDefinition: true, variable: [9 x i8]* @doProlog.atypeENTITIES)
!2258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !209, size: 72, align: 8, elements: !2259)
!2259 = !{!2260}
!2260 = !DISubrange(count: 9)
!2261 = !DIGlobalVariable(name: "atypeNMTOKEN", scope: !1201, file: !162, line: 3767, type: !2262, isLocal: true, isDefinition: true, variable: [8 x i8]* @doProlog.atypeNMTOKEN)
!2262 = !DICompositeType(tag: DW_TAG_array_type, baseType: !209, size: 64, align: 8, elements: !2263)
!2263 = !{!2264}
!2264 = !DISubrange(count: 8)
!2265 = !DIGlobalVariable(name: "atypeNMTOKENS", scope: !1201, file: !162, line: 3769, type: !2258, isLocal: true, isDefinition: true, variable: [9 x i8]* @doProlog.atypeNMTOKENS)
!2266 = !DIGlobalVariable(name: "notationPrefix", scope: !1201, file: !162, line: 3771, type: !2267, isLocal: true, isDefinition: true, variable: [10 x i8]* @doProlog.notationPrefix)
!2267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !209, size: 80, align: 8, elements: !2268)
!2268 = !{!2269}
!2269 = !DISubrange(count: 10)
!2270 = !DIGlobalVariable(name: "enumValueSep", scope: !1201, file: !162, line: 3773, type: !2244, isLocal: true, isDefinition: true, variable: [2 x i8]* @doProlog.enumValueSep)
!2271 = !DIGlobalVariable(name: "enumValueStart", scope: !1201, file: !162, line: 3774, type: !2244, isLocal: true, isDefinition: true, variable: [2 x i8]* @doProlog.enumValueStart)
!2272 = !DIGlobalVariable(name: "xmlNamespace", scope: !1641, file: !162, line: 3053, type: !2273, isLocal: true, isDefinition: true, variable: [37 x i8]* @addBinding.xmlNamespace)
!2273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !209, size: 296, align: 8, elements: !2274)
!2274 = !{!2275}
!2275 = !DISubrange(count: 37)
!2276 = !DIGlobalVariable(name: "xmlLen", scope: !1641, file: !162, line: 3061, type: !2277, isLocal: true, isDefinition: true, variable: i32* @addBinding.xmlLen)
!2277 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !221)
!2278 = !DIGlobalVariable(name: "xmlnsNamespace", scope: !1641, file: !162, line: 3063, type: !2279, isLocal: true, isDefinition: true, variable: [30 x i8]* @addBinding.xmlnsNamespace)
!2279 = !DICompositeType(tag: DW_TAG_array_type, baseType: !209, size: 240, align: 8, elements: !2280)
!2280 = !{!2281}
!2281 = !DISubrange(count: 30)
!2282 = !DIGlobalVariable(name: "xmlnsLen", scope: !1641, file: !162, line: 3070, type: !2277, isLocal: true, isDefinition: true, variable: i32* @addBinding.xmlnsLen)
!2283 = !DIGlobalVariable(name: "implicitContext", scope: !0, file: !162, line: 684, type: !2284, isLocal: true, isDefinition: true, variable: [41 x i8]* @implicitContext)
!2284 = !DICompositeType(tag: DW_TAG_array_type, baseType: !209, size: 328, align: 8, elements: !2237)
!2285 = !{i32 2, !"Dwarf Version", i32 4}
!2286 = !{i32 2, !"Debug Info Version", i32 3}
!2287 = !{i32 1, !"PIC Level", i32 2}
!2288 = !{!"clang version 3.7.1 (https://github.com/llvm-mirror/clang.git 0dbefa1b83eb90f7a06b5df5df254ce32be3db4b) (git@github.com:kim-yoonseung/llvm.git e8e68907a8135028089af4d924da468e2b7257fa)"}
!2289 = !{!2290, !2290, i64 0}
!2290 = !{!"any pointer", !2291, i64 0}
!2291 = !{!"omnipotent char", !2292, i64 0}
!2292 = !{!"Simple C/C++ TBAA"}
!2293 = !DIExpression()
!2294 = !DILocation(line: 671, column: 42, scope: !658)
!2295 = !DILocation(line: 673, column: 38, scope: !658)
!2296 = !DILocation(line: 673, column: 10, scope: !658)
!2297 = !DILocation(line: 673, column: 3, scope: !658)
!2298 = !DILocation(line: 717, column: 45, scope: !671)
!2299 = !DILocation(line: 718, column: 54, scope: !671)
!2300 = !DILocation(line: 719, column: 37, scope: !671)
!2301 = !DILocation(line: 721, column: 23, scope: !671)
!2302 = !DILocation(line: 721, column: 37, scope: !671)
!2303 = !DILocation(line: 721, column: 47, scope: !671)
!2304 = !DILocation(line: 721, column: 10, scope: !671)
!2305 = !DILocation(line: 721, column: 3, scope: !671)
!2306 = !DILocation(line: 677, column: 44, scope: !663)
!2307 = !{!2291, !2291, i64 0}
!2308 = !DILocation(line: 677, column: 67, scope: !663)
!2309 = !DILocation(line: 679, column: 3, scope: !663)
!2310 = !DILocation(line: 679, column: 12, scope: !663)
!2311 = !DILocation(line: 680, column: 10, scope: !663)
!2312 = !DILocation(line: 680, column: 4, scope: !663)
!2313 = !DILocation(line: 680, column: 8, scope: !663)
!2314 = !DILocation(line: 681, column: 38, scope: !663)
!2315 = !DILocation(line: 681, column: 64, scope: !663)
!2316 = !DILocation(line: 681, column: 10, scope: !663)
!2317 = !DILocation(line: 682, column: 1, scope: !663)
!2318 = !DILocation(line: 681, column: 3, scope: !663)
!2319 = !DILocation(line: 725, column: 30, scope: !1120)
!2320 = !DILocation(line: 726, column: 47, scope: !1120)
!2321 = !DILocation(line: 727, column: 30, scope: !1120)
!2322 = !DILocation(line: 728, column: 19, scope: !1120)
!2323 = !DILocation(line: 730, column: 3, scope: !1120)
!2324 = !DILocation(line: 730, column: 14, scope: !1120)
!2325 = !DILocation(line: 732, column: 7, scope: !1131)
!2326 = !DILocation(line: 732, column: 7, scope: !1120)
!2327 = !DILocation(line: 733, column: 5, scope: !1130)
!2328 = !DILocation(line: 733, column: 32, scope: !1130)
!2329 = !DILocation(line: 735, column: 7, scope: !1130)
!2330 = !DILocation(line: 735, column: 17, scope: !1130)
!2331 = !{!2332, !2290, i64 0}
!2332 = !{!"", !2290, i64 0, !2290, i64 8, !2290, i64 16}
!2333 = !DILocation(line: 734, column: 14, scope: !1130)
!2334 = !DILocation(line: 734, column: 12, scope: !1130)
!2335 = !DILocation(line: 736, column: 9, scope: !2336)
!2336 = distinct !DILexicalBlock(scope: !1130, file: !162, line: 736, column: 9)
!2337 = !DILocation(line: 736, column: 16, scope: !2336)
!2338 = !DILocation(line: 736, column: 9, scope: !1130)
!2339 = !DILocation(line: 737, column: 46, scope: !2340)
!2340 = distinct !DILexicalBlock(scope: !2336, file: !162, line: 736, column: 31)
!2341 = !DILocation(line: 737, column: 54, scope: !2340)
!2342 = !DILocation(line: 737, column: 13, scope: !2340)
!2343 = !DILocation(line: 738, column: 27, scope: !2340)
!2344 = !DILocation(line: 738, column: 37, scope: !2340)
!2345 = !DILocation(line: 738, column: 7, scope: !2340)
!2346 = !DILocation(line: 738, column: 14, scope: !2340)
!2347 = !DILocation(line: 738, column: 25, scope: !2340)
!2348 = !DILocation(line: 739, column: 28, scope: !2340)
!2349 = !DILocation(line: 739, column: 38, scope: !2340)
!2350 = !{!2332, !2290, i64 8}
!2351 = !DILocation(line: 739, column: 7, scope: !2340)
!2352 = !DILocation(line: 739, column: 14, scope: !2340)
!2353 = !DILocation(line: 739, column: 26, scope: !2340)
!2354 = !DILocation(line: 740, column: 25, scope: !2340)
!2355 = !DILocation(line: 740, column: 35, scope: !2340)
!2356 = !{!2332, !2290, i64 16}
!2357 = !DILocation(line: 740, column: 7, scope: !2340)
!2358 = !DILocation(line: 740, column: 14, scope: !2340)
!2359 = !DILocation(line: 740, column: 23, scope: !2340)
!2360 = !DILocation(line: 741, column: 5, scope: !2340)
!2361 = !DILocation(line: 742, column: 3, scope: !1131)
!2362 = !DILocation(line: 742, column: 3, scope: !1130)
!2363 = !DILocation(line: 744, column: 5, scope: !1133)
!2364 = !DILocation(line: 744, column: 32, scope: !1133)
!2365 = !DILocation(line: 745, column: 26, scope: !1133)
!2366 = !DILocation(line: 745, column: 14, scope: !1133)
!2367 = !DILocation(line: 745, column: 12, scope: !1133)
!2368 = !DILocation(line: 746, column: 9, scope: !2369)
!2369 = distinct !DILexicalBlock(scope: !1133, file: !162, line: 746, column: 9)
!2370 = !DILocation(line: 746, column: 16, scope: !2369)
!2371 = !DILocation(line: 746, column: 9, scope: !1133)
!2372 = !DILocation(line: 747, column: 46, scope: !2373)
!2373 = distinct !DILexicalBlock(scope: !2369, file: !162, line: 746, column: 31)
!2374 = !DILocation(line: 747, column: 54, scope: !2373)
!2375 = !DILocation(line: 747, column: 13, scope: !2373)
!2376 = !DILocation(line: 748, column: 7, scope: !2373)
!2377 = !DILocation(line: 748, column: 14, scope: !2373)
!2378 = !DILocation(line: 748, column: 25, scope: !2373)
!2379 = !DILocation(line: 749, column: 7, scope: !2373)
!2380 = !DILocation(line: 749, column: 14, scope: !2373)
!2381 = !DILocation(line: 749, column: 26, scope: !2373)
!2382 = !DILocation(line: 750, column: 7, scope: !2373)
!2383 = !DILocation(line: 750, column: 14, scope: !2373)
!2384 = !DILocation(line: 750, column: 23, scope: !2373)
!2385 = !DILocation(line: 751, column: 5, scope: !2373)
!2386 = !DILocation(line: 752, column: 3, scope: !1131)
!2387 = !DILocation(line: 754, column: 8, scope: !2388)
!2388 = distinct !DILexicalBlock(scope: !1120, file: !162, line: 754, column: 7)
!2389 = !DILocation(line: 754, column: 7, scope: !1120)
!2390 = !DILocation(line: 755, column: 12, scope: !2388)
!2391 = !DILocation(line: 755, column: 5, scope: !2388)
!2392 = !DILocation(line: 757, column: 4, scope: !1120)
!2393 = !DILocation(line: 757, column: 12, scope: !1120)
!2394 = !DILocation(line: 757, column: 22, scope: !1120)
!2395 = !{!2396, !2290, i64 16}
!2396 = !{!"XML_ParserStruct", !2290, i64 0, !2290, i64 8, !2290, i64 16, !2332, i64 24, !2290, i64 48, !2290, i64 56, !2290, i64 64, !2397, i64 72, !2290, i64 80, !2290, i64 88, !2290, i64 96, !2290, i64 104, !2290, i64 112, !2290, i64 120, !2290, i64 128, !2290, i64 136, !2290, i64 144, !2290, i64 152, !2290, i64 160, !2290, i64 168, !2290, i64 176, !2290, i64 184, !2290, i64 192, !2290, i64 200, !2290, i64 208, !2290, i64 216, !2290, i64 224, !2290, i64 232, !2290, i64 240, !2290, i64 248, !2290, i64 256, !2290, i64 264, !2290, i64 272, !2290, i64 280, !2290, i64 288, !2398, i64 296, !2290, i64 448, !2290, i64 456, !2291, i64 464, !2291, i64 465, !2290, i64 472, !2290, i64 480, !2290, i64 488, !2290, i64 496, !2401, i64 504, !2290, i64 536, !2291, i64 544, !2290, i64 552, !2290, i64 560, !2290, i64 568, !2290, i64 576, !2290, i64 584, !2291, i64 592, !2400, i64 596, !2290, i64 600, !2290, i64 608, !2290, i64 616, !2290, i64 624, !2290, i64 632, !2290, i64 640, !2290, i64 648, !2290, i64 656, !2290, i64 664, !2291, i64 672, !2291, i64 673, !2290, i64 680, !2290, i64 688, !2290, i64 696, !2290, i64 704, !2290, i64 712, !2290, i64 720, !2400, i64 728, !2400, i64 732, !2400, i64 736, !2290, i64 744, !2290, i64 752, !2397, i64 760, !2291, i64 768, !2402, i64 776, !2403, i64 792, !2403, i64 840, !2290, i64 888, !2400, i64 896, !2291, i64 900, !2290, i64 904, !2404, i64 912, !2291, i64 920, !2291, i64 921, !2291, i64 924, !2397, i64 928}
!2397 = !{!"long", !2291, i64 0}
!2398 = !{!"", !2399, i64 0, !2290, i64 144}
!2399 = !{!"encoding", !2291, i64 0, !2291, i64 32, !2290, i64 48, !2290, i64 56, !2290, i64 64, !2290, i64 72, !2290, i64 80, !2290, i64 88, !2290, i64 96, !2290, i64 104, !2290, i64 112, !2290, i64 120, !2290, i64 128, !2400, i64 136, !2291, i64 140, !2291, i64 141}
!2400 = !{!"int", !2291, i64 0}
!2401 = !{!"prolog_state", !2290, i64 0, !2400, i64 8, !2400, i64 12, !2400, i64 16, !2400, i64 20, !2400, i64 24}
!2402 = !{!"position", !2397, i64 0, !2397, i64 8}
!2403 = !{!"", !2290, i64 0, !2290, i64 8, !2290, i64 16, !2290, i64 24, !2290, i64 32, !2290, i64 40}
!2404 = !{!"", !2291, i64 0, !2291, i64 4}
!2405 = !DILocation(line: 758, column: 4, scope: !1120)
!2406 = !DILocation(line: 758, column: 12, scope: !1120)
!2407 = !DILocation(line: 758, column: 25, scope: !1120)
!2408 = !{!2396, !2290, i64 64}
!2409 = !DILocation(line: 760, column: 4, scope: !1120)
!2410 = !DILocation(line: 760, column: 12, scope: !1120)
!2411 = !DILocation(line: 760, column: 24, scope: !1120)
!2412 = !{!2396, !2400, i64 728}
!2413 = !DILocation(line: 761, column: 36, scope: !1120)
!2414 = !DILocation(line: 761, column: 44, scope: !1120)
!2415 = !DILocation(line: 761, column: 50, scope: !1120)
!2416 = !{!2396, !2290, i64 24}
!2417 = !DILocation(line: 761, column: 63, scope: !1120)
!2418 = !DILocation(line: 761, column: 71, scope: !1120)
!2419 = !DILocation(line: 761, column: 62, scope: !1120)
!2420 = !DILocation(line: 761, column: 83, scope: !1120)
!2421 = !DILocation(line: 761, column: 22, scope: !1120)
!2422 = !DILocation(line: 761, column: 4, scope: !1120)
!2423 = !DILocation(line: 761, column: 12, scope: !1120)
!2424 = !DILocation(line: 761, column: 20, scope: !1120)
!2425 = !{!2396, !2290, i64 744}
!2426 = !DILocation(line: 762, column: 8, scope: !2427)
!2427 = distinct !DILexicalBlock(scope: !1120, file: !162, line: 762, column: 7)
!2428 = !DILocation(line: 762, column: 16, scope: !2427)
!2429 = !DILocation(line: 762, column: 24, scope: !2427)
!2430 = !DILocation(line: 762, column: 7, scope: !1120)
!2431 = !DILocation(line: 763, column: 6, scope: !2432)
!2432 = distinct !DILexicalBlock(scope: !2427, file: !162, line: 762, column: 39)
!2433 = !DILocation(line: 763, column: 14, scope: !2432)
!2434 = !DILocation(line: 763, column: 20, scope: !2432)
!2435 = !{!2396, !2290, i64 40}
!2436 = !DILocation(line: 763, column: 30, scope: !2432)
!2437 = !DILocation(line: 763, column: 29, scope: !2432)
!2438 = !DILocation(line: 764, column: 5, scope: !2432)
!2439 = !DILocation(line: 774, column: 38, scope: !1120)
!2440 = !DILocation(line: 774, column: 46, scope: !1120)
!2441 = !DILocation(line: 774, column: 52, scope: !1120)
!2442 = !DILocation(line: 774, column: 4, scope: !1120)
!2443 = !DILocation(line: 774, column: 12, scope: !1120)
!2444 = !DILocation(line: 774, column: 23, scope: !1120)
!2445 = !{!2396, !2290, i64 88}
!2446 = !DILocation(line: 775, column: 8, scope: !2447)
!2447 = distinct !DILexicalBlock(scope: !1120, file: !162, line: 775, column: 7)
!2448 = !DILocation(line: 775, column: 16, scope: !2447)
!2449 = !DILocation(line: 775, column: 27, scope: !2447)
!2450 = !DILocation(line: 775, column: 7, scope: !1120)
!2451 = !DILocation(line: 776, column: 6, scope: !2452)
!2452 = distinct !DILexicalBlock(scope: !2447, file: !162, line: 775, column: 42)
!2453 = !DILocation(line: 776, column: 14, scope: !2452)
!2454 = !DILocation(line: 776, column: 20, scope: !2452)
!2455 = !DILocation(line: 776, column: 31, scope: !2452)
!2456 = !DILocation(line: 776, column: 39, scope: !2452)
!2457 = !DILocation(line: 776, column: 29, scope: !2452)
!2458 = !DILocation(line: 780, column: 6, scope: !2452)
!2459 = !DILocation(line: 780, column: 14, scope: !2452)
!2460 = !DILocation(line: 780, column: 20, scope: !2452)
!2461 = !DILocation(line: 780, column: 30, scope: !2452)
!2462 = !DILocation(line: 780, column: 29, scope: !2452)
!2463 = !DILocation(line: 781, column: 5, scope: !2452)
!2464 = !DILocation(line: 783, column: 29, scope: !1120)
!2465 = !DILocation(line: 783, column: 37, scope: !1120)
!2466 = !DILocation(line: 783, column: 48, scope: !1120)
!2467 = !DILocation(line: 783, column: 4, scope: !1120)
!2468 = !DILocation(line: 783, column: 12, scope: !1120)
!2469 = !DILocation(line: 783, column: 26, scope: !1120)
!2470 = !{!2396, !2290, i64 96}
!2471 = !DILocation(line: 785, column: 7, scope: !2472)
!2472 = distinct !DILexicalBlock(scope: !1120, file: !162, line: 785, column: 7)
!2473 = !DILocation(line: 785, column: 7, scope: !1120)
!2474 = !DILocation(line: 786, column: 23, scope: !2472)
!2475 = !DILocation(line: 786, column: 6, scope: !2472)
!2476 = !DILocation(line: 786, column: 14, scope: !2472)
!2477 = !DILocation(line: 786, column: 21, scope: !2472)
!2478 = !{!2396, !2290, i64 680}
!2479 = !DILocation(line: 786, column: 5, scope: !2472)
!2480 = !DILocation(line: 788, column: 34, scope: !2481)
!2481 = distinct !DILexicalBlock(scope: !2472, file: !162, line: 787, column: 8)
!2482 = !DILocation(line: 788, column: 42, scope: !2481)
!2483 = !DILocation(line: 788, column: 23, scope: !2481)
!2484 = !DILocation(line: 788, column: 6, scope: !2481)
!2485 = !DILocation(line: 788, column: 14, scope: !2481)
!2486 = !DILocation(line: 788, column: 21, scope: !2481)
!2487 = !DILocation(line: 789, column: 10, scope: !2488)
!2488 = distinct !DILexicalBlock(scope: !2481, file: !162, line: 789, column: 9)
!2489 = !DILocation(line: 789, column: 18, scope: !2488)
!2490 = !DILocation(line: 789, column: 25, scope: !2488)
!2491 = !DILocation(line: 789, column: 9, scope: !2481)
!2492 = !DILocation(line: 790, column: 8, scope: !2493)
!2493 = distinct !DILexicalBlock(scope: !2488, file: !162, line: 789, column: 40)
!2494 = !DILocation(line: 790, column: 16, scope: !2493)
!2495 = !DILocation(line: 790, column: 22, scope: !2493)
!2496 = !DILocation(line: 790, column: 33, scope: !2493)
!2497 = !DILocation(line: 790, column: 41, scope: !2493)
!2498 = !DILocation(line: 791, column: 8, scope: !2493)
!2499 = !DILocation(line: 791, column: 16, scope: !2493)
!2500 = !DILocation(line: 791, column: 22, scope: !2493)
!2501 = !DILocation(line: 791, column: 33, scope: !2493)
!2502 = !DILocation(line: 791, column: 41, scope: !2493)
!2503 = !DILocation(line: 791, column: 31, scope: !2493)
!2504 = !DILocation(line: 795, column: 8, scope: !2493)
!2505 = !DILocation(line: 795, column: 16, scope: !2493)
!2506 = !DILocation(line: 795, column: 22, scope: !2493)
!2507 = !DILocation(line: 795, column: 32, scope: !2493)
!2508 = !DILocation(line: 795, column: 31, scope: !2493)
!2509 = !DILocation(line: 796, column: 7, scope: !2493)
!2510 = !DILocation(line: 800, column: 4, scope: !1120)
!2511 = !DILocation(line: 800, column: 12, scope: !1120)
!2512 = !DILocation(line: 800, column: 31, scope: !1120)
!2513 = !{!2396, !2290, i64 720}
!2514 = !DILocation(line: 801, column: 4, scope: !1120)
!2515 = !DILocation(line: 801, column: 12, scope: !1120)
!2516 = !DILocation(line: 801, column: 27, scope: !1120)
!2517 = !{!2396, !2290, i64 704}
!2518 = !DILocation(line: 802, column: 4, scope: !1120)
!2519 = !DILocation(line: 802, column: 12, scope: !1120)
!2520 = !DILocation(line: 802, column: 36, scope: !1120)
!2521 = !{!2396, !2290, i64 584}
!2522 = !DILocation(line: 804, column: 4, scope: !1120)
!2523 = !DILocation(line: 804, column: 12, scope: !1120)
!2524 = !DILocation(line: 804, column: 25, scope: !1120)
!2525 = !{!2396, !2400, i64 896}
!2526 = !DILocation(line: 805, column: 4, scope: !1120)
!2527 = !DILocation(line: 805, column: 12, scope: !1120)
!2528 = !DILocation(line: 805, column: 30, scope: !1120)
!2529 = !{!2396, !2290, i64 888}
!2530 = !DILocation(line: 807, column: 4, scope: !1120)
!2531 = !DILocation(line: 807, column: 12, scope: !1120)
!2532 = !DILocation(line: 807, column: 38, scope: !1120)
!2533 = !{!2396, !2290, i64 248}
!2534 = !DILocation(line: 808, column: 4, scope: !1120)
!2535 = !DILocation(line: 808, column: 12, scope: !1120)
!2536 = !DILocation(line: 808, column: 42, scope: !1120)
!2537 = !{!2396, !2290, i64 488}
!2538 = !DILocation(line: 810, column: 4, scope: !1120)
!2539 = !DILocation(line: 810, column: 12, scope: !1120)
!2540 = !DILocation(line: 810, column: 34, scope: !1120)
!2541 = !{!2396, !2291, i64 900}
!2542 = !DILocation(line: 811, column: 4, scope: !1120)
!2543 = !DILocation(line: 811, column: 12, scope: !1120)
!2544 = !DILocation(line: 811, column: 18, scope: !1120)
!2545 = !{!2396, !2291, i64 464}
!2546 = !DILocation(line: 812, column: 4, scope: !1120)
!2547 = !DILocation(line: 812, column: 12, scope: !1120)
!2548 = !DILocation(line: 812, column: 27, scope: !1120)
!2549 = !{!2396, !2291, i64 465}
!2550 = !DILocation(line: 814, column: 4, scope: !1120)
!2551 = !DILocation(line: 814, column: 12, scope: !1120)
!2552 = !DILocation(line: 814, column: 22, scope: !1120)
!2553 = !{!2396, !2290, i64 752}
!2554 = !DILocation(line: 815, column: 4, scope: !1120)
!2555 = !DILocation(line: 815, column: 12, scope: !1120)
!2556 = !DILocation(line: 815, column: 29, scope: !1120)
!2557 = !{!2396, !2397, i64 760}
!2558 = !DILocation(line: 816, column: 4, scope: !1120)
!2559 = !DILocation(line: 816, column: 12, scope: !1120)
!2560 = !DILocation(line: 816, column: 27, scope: !1120)
!2561 = !{!2396, !2291, i64 768}
!2562 = !DILocation(line: 818, column: 14, scope: !1120)
!2563 = !DILocation(line: 818, column: 22, scope: !1120)
!2564 = !DILocation(line: 818, column: 37, scope: !1120)
!2565 = !DILocation(line: 818, column: 45, scope: !1120)
!2566 = !DILocation(line: 818, column: 3, scope: !1120)
!2567 = !DILocation(line: 819, column: 14, scope: !1120)
!2568 = !DILocation(line: 819, column: 22, scope: !1120)
!2569 = !DILocation(line: 819, column: 38, scope: !1120)
!2570 = !DILocation(line: 819, column: 46, scope: !1120)
!2571 = !DILocation(line: 819, column: 3, scope: !1120)
!2572 = !DILocation(line: 820, column: 14, scope: !1120)
!2573 = !DILocation(line: 820, column: 22, scope: !1120)
!2574 = !DILocation(line: 820, column: 3, scope: !1120)
!2575 = !DILocation(line: 822, column: 7, scope: !2576)
!2576 = distinct !DILexicalBlock(scope: !1120, file: !162, line: 822, column: 7)
!2577 = !DILocation(line: 822, column: 20, scope: !2576)
!2578 = !DILocation(line: 822, column: 25, scope: !2579)
!2579 = !DILexicalBlockFile(scope: !2576, file: !162, discriminator: 1)
!2580 = !DILocation(line: 822, column: 33, scope: !2576)
!2581 = !{!2396, !2290, i64 456}
!2582 = !DILocation(line: 822, column: 24, scope: !2576)
!2583 = !DILocation(line: 822, column: 7, scope: !1120)
!2584 = !DILocation(line: 823, column: 28, scope: !2585)
!2585 = distinct !DILexicalBlock(scope: !2576, file: !162, line: 822, column: 58)
!2586 = !DILocation(line: 823, column: 5, scope: !2585)
!2587 = !DILocation(line: 824, column: 5, scope: !2585)
!2588 = !DILocation(line: 827, column: 7, scope: !2589)
!2589 = distinct !DILexicalBlock(scope: !1120, file: !162, line: 827, column: 7)
!2590 = !DILocation(line: 827, column: 7, scope: !1120)
!2591 = !DILocation(line: 828, column: 6, scope: !2592)
!2592 = distinct !DILexicalBlock(scope: !2589, file: !162, line: 827, column: 16)
!2593 = !DILocation(line: 828, column: 14, scope: !2592)
!2594 = !DILocation(line: 828, column: 20, scope: !2592)
!2595 = !DILocation(line: 829, column: 36, scope: !2592)
!2596 = !DILocation(line: 829, column: 6, scope: !2592)
!2597 = !DILocation(line: 829, column: 14, scope: !2592)
!2598 = !DILocation(line: 829, column: 34, scope: !2592)
!2599 = !{!2396, !2290, i64 448}
!2600 = !DILocation(line: 830, column: 39, scope: !2592)
!2601 = !DILocation(line: 830, column: 38, scope: !2592)
!2602 = !DILocation(line: 830, column: 6, scope: !2592)
!2603 = !DILocation(line: 830, column: 14, scope: !2592)
!2604 = !DILocation(line: 830, column: 36, scope: !2592)
!2605 = !DILocation(line: 831, column: 3, scope: !2592)
!2606 = !DILocation(line: 833, column: 36, scope: !2607)
!2607 = distinct !DILexicalBlock(scope: !2589, file: !162, line: 832, column: 8)
!2608 = !DILocation(line: 833, column: 6, scope: !2607)
!2609 = !DILocation(line: 833, column: 14, scope: !2607)
!2610 = !DILocation(line: 833, column: 34, scope: !2607)
!2611 = !DILocation(line: 836, column: 10, scope: !1120)
!2612 = !DILocation(line: 836, column: 3, scope: !1120)
!2613 = !DILocation(line: 837, column: 1, scope: !1120)
!2614 = !DILocation(line: 925, column: 36, scope: !678)
!2615 = !DILocation(line: 925, column: 60, scope: !678)
!2616 = !DILocation(line: 927, column: 3, scope: !678)
!2617 = !DILocation(line: 927, column: 8, scope: !678)
!2618 = !DILocation(line: 928, column: 3, scope: !678)
!2619 = !DILocation(line: 928, column: 25, scope: !678)
!2620 = !DILocation(line: 929, column: 8, scope: !2621)
!2621 = distinct !DILexicalBlock(scope: !678, file: !162, line: 929, column: 7)
!2622 = !DILocation(line: 929, column: 16, scope: !2621)
!2623 = !{!2396, !2290, i64 904}
!2624 = !DILocation(line: 929, column: 7, scope: !2621)
!2625 = !DILocation(line: 929, column: 7, scope: !678)
!2626 = !DILocation(line: 930, column: 5, scope: !2621)
!2627 = !DILocation(line: 932, column: 11, scope: !678)
!2628 = !DILocation(line: 932, column: 19, scope: !678)
!2629 = !{!2396, !2290, i64 696}
!2630 = !DILocation(line: 932, column: 8, scope: !678)
!2631 = !DILocation(line: 933, column: 3, scope: !678)
!2632 = !DILocation(line: 933, column: 10, scope: !2633)
!2633 = !DILexicalBlockFile(scope: !2634, file: !162, discriminator: 2)
!2634 = !DILexicalBlockFile(scope: !678, file: !162, discriminator: 1)
!2635 = !DILocation(line: 934, column: 5, scope: !687)
!2636 = !DILocation(line: 934, column: 10, scope: !687)
!2637 = !DILocation(line: 934, column: 16, scope: !687)
!2638 = !DILocation(line: 935, column: 12, scope: !687)
!2639 = !DILocation(line: 935, column: 18, scope: !687)
!2640 = !{!2641, !2290, i64 0}
!2641 = !{!"tag", !2290, i64 0, !2290, i64 8, !2400, i64 16, !2642, i64 24, !2290, i64 64, !2290, i64 72, !2290, i64 80}
!2642 = !{!"", !2290, i64 0, !2290, i64 8, !2290, i64 16, !2400, i64 24, !2400, i64 28, !2400, i64 32}
!2643 = !DILocation(line: 935, column: 10, scope: !687)
!2644 = !DILocation(line: 936, column: 20, scope: !687)
!2645 = !DILocation(line: 936, column: 28, scope: !687)
!2646 = !DILocation(line: 936, column: 5, scope: !687)
!2647 = !DILocation(line: 936, column: 10, scope: !687)
!2648 = !DILocation(line: 936, column: 17, scope: !687)
!2649 = !DILocation(line: 937, column: 27, scope: !687)
!2650 = !DILocation(line: 937, column: 35, scope: !687)
!2651 = !DILocation(line: 937, column: 40, scope: !687)
!2652 = !{!2641, !2290, i64 80}
!2653 = !DILocation(line: 937, column: 5, scope: !687)
!2654 = !DILocation(line: 938, column: 5, scope: !687)
!2655 = !DILocation(line: 938, column: 10, scope: !687)
!2656 = !DILocation(line: 938, column: 19, scope: !687)
!2657 = !DILocation(line: 939, column: 31, scope: !687)
!2658 = !DILocation(line: 939, column: 6, scope: !687)
!2659 = !DILocation(line: 939, column: 14, scope: !687)
!2660 = !DILocation(line: 939, column: 29, scope: !687)
!2661 = !DILocation(line: 940, column: 3, scope: !678)
!2662 = !DILocation(line: 942, column: 21, scope: !678)
!2663 = !DILocation(line: 942, column: 29, scope: !678)
!2664 = !{!2396, !2290, i64 576}
!2665 = !DILocation(line: 942, column: 18, scope: !678)
!2666 = !DILocation(line: 943, column: 3, scope: !678)
!2667 = !DILocation(line: 943, column: 10, scope: !2633)
!2668 = !DILocation(line: 944, column: 5, scope: !689)
!2669 = !DILocation(line: 944, column: 27, scope: !689)
!2670 = !DILocation(line: 944, column: 40, scope: !689)
!2671 = !DILocation(line: 945, column: 22, scope: !689)
!2672 = !DILocation(line: 945, column: 34, scope: !689)
!2673 = !{!2674, !2290, i64 16}
!2674 = !{!"open_internal_entity", !2290, i64 0, !2290, i64 8, !2290, i64 16, !2290, i64 24, !2400, i64 32, !2291, i64 36}
!2675 = !DILocation(line: 945, column: 20, scope: !689)
!2676 = !DILocation(line: 946, column: 25, scope: !689)
!2677 = !DILocation(line: 946, column: 33, scope: !689)
!2678 = !DILocation(line: 946, column: 5, scope: !689)
!2679 = !DILocation(line: 946, column: 17, scope: !689)
!2680 = !DILocation(line: 946, column: 22, scope: !689)
!2681 = !DILocation(line: 947, column: 40, scope: !689)
!2682 = !DILocation(line: 947, column: 6, scope: !689)
!2683 = !DILocation(line: 947, column: 14, scope: !689)
!2684 = !DILocation(line: 947, column: 38, scope: !689)
!2685 = !DILocation(line: 948, column: 3, scope: !678)
!2686 = !DILocation(line: 949, column: 25, scope: !678)
!2687 = !DILocation(line: 949, column: 34, scope: !678)
!2688 = !DILocation(line: 949, column: 42, scope: !678)
!2689 = !{!2396, !2290, i64 712}
!2690 = !DILocation(line: 949, column: 3, scope: !678)
!2691 = !DILocation(line: 950, column: 4, scope: !678)
!2692 = !DILocation(line: 950, column: 12, scope: !678)
!2693 = !DILocation(line: 950, column: 18, scope: !678)
!2694 = !DILocation(line: 950, column: 29, scope: !678)
!2695 = !DILocation(line: 950, column: 37, scope: !678)
!2696 = !{!2396, !2290, i64 472}
!2697 = !DILocation(line: 951, column: 8, scope: !2698)
!2698 = distinct !DILexicalBlock(scope: !678, file: !162, line: 951, column: 7)
!2699 = !DILocation(line: 951, column: 16, scope: !2698)
!2700 = !{!2396, !2290, i64 496}
!2701 = !DILocation(line: 951, column: 7, scope: !2698)
!2702 = !DILocation(line: 951, column: 7, scope: !678)
!2703 = !DILocation(line: 952, column: 6, scope: !2698)
!2704 = !DILocation(line: 952, column: 14, scope: !2698)
!2705 = !DILocation(line: 952, column: 41, scope: !2698)
!2706 = !DILocation(line: 952, column: 49, scope: !2698)
!2707 = !{!2396, !2290, i64 480}
!2708 = !DILocation(line: 952, column: 5, scope: !2698)
!2709 = !DILocation(line: 953, column: 15, scope: !678)
!2710 = !DILocation(line: 953, column: 23, scope: !678)
!2711 = !DILocation(line: 953, column: 3, scope: !678)
!2712 = !DILocation(line: 954, column: 15, scope: !678)
!2713 = !DILocation(line: 954, column: 23, scope: !678)
!2714 = !DILocation(line: 954, column: 3, scope: !678)
!2715 = !DILocation(line: 955, column: 14, scope: !678)
!2716 = !DILocation(line: 955, column: 22, scope: !678)
!2717 = !DILocation(line: 955, column: 3, scope: !678)
!2718 = !DILocation(line: 956, column: 13, scope: !678)
!2719 = !DILocation(line: 956, column: 21, scope: !678)
!2720 = !DILocation(line: 956, column: 30, scope: !678)
!2721 = !DILocation(line: 956, column: 38, scope: !678)
!2722 = !DILocation(line: 956, column: 3, scope: !678)
!2723 = !DILocation(line: 957, column: 3, scope: !678)
!2724 = !DILocation(line: 958, column: 1, scope: !678)
!2725 = !DILocation(line: 914, column: 34, scope: !1154)
!2726 = !DILocation(line: 914, column: 51, scope: !1154)
!2727 = !DILocation(line: 916, column: 3, scope: !1154)
!2728 = !DILocation(line: 916, column: 10, scope: !2729)
!2729 = !DILexicalBlockFile(scope: !2730, file: !162, discriminator: 2)
!2730 = !DILexicalBlockFile(scope: !1154, file: !162, discriminator: 1)
!2731 = !DILocation(line: 917, column: 5, scope: !1161)
!2732 = !DILocation(line: 917, column: 14, scope: !1161)
!2733 = !DILocation(line: 917, column: 18, scope: !1161)
!2734 = !DILocation(line: 918, column: 16, scope: !1161)
!2735 = !DILocation(line: 918, column: 26, scope: !1161)
!2736 = !{!2737, !2290, i64 8}
!2737 = !{!"binding", !2290, i64 0, !2290, i64 8, !2290, i64 16, !2290, i64 24, !2290, i64 32, !2400, i64 40, !2400, i64 44}
!2738 = !DILocation(line: 918, column: 14, scope: !1161)
!2739 = !DILocation(line: 919, column: 26, scope: !1161)
!2740 = !DILocation(line: 919, column: 34, scope: !1161)
!2741 = !DILocation(line: 919, column: 5, scope: !1161)
!2742 = !DILocation(line: 919, column: 8, scope: !1161)
!2743 = !DILocation(line: 919, column: 23, scope: !1161)
!2744 = !DILocation(line: 920, column: 35, scope: !1161)
!2745 = !DILocation(line: 920, column: 6, scope: !1161)
!2746 = !DILocation(line: 920, column: 14, scope: !1161)
!2747 = !DILocation(line: 920, column: 33, scope: !1161)
!2748 = !DILocation(line: 921, column: 3, scope: !1154)
!2749 = !DILocation(line: 922, column: 1, scope: !1154)
!2750 = !DILocation(line: 6108, column: 24, scope: !2211)
!2751 = !DILocation(line: 6110, column: 8, scope: !2218)
!2752 = !DILocation(line: 6110, column: 14, scope: !2218)
!2753 = !{!2403, !2290, i64 8}
!2754 = !DILocation(line: 6110, column: 7, scope: !2211)
!2755 = !DILocation(line: 6111, column: 24, scope: !2218)
!2756 = !DILocation(line: 6111, column: 30, scope: !2218)
!2757 = !{!2403, !2290, i64 0}
!2758 = !DILocation(line: 6111, column: 5, scope: !2218)
!2759 = !DILocation(line: 6111, column: 11, scope: !2218)
!2760 = !DILocation(line: 6111, column: 22, scope: !2218)
!2761 = !DILocation(line: 6113, column: 5, scope: !2217)
!2762 = !DILocation(line: 6113, column: 12, scope: !2217)
!2763 = !DILocation(line: 6113, column: 16, scope: !2217)
!2764 = !DILocation(line: 6113, column: 22, scope: !2217)
!2765 = !DILocation(line: 6114, column: 5, scope: !2217)
!2766 = !DILocation(line: 6114, column: 12, scope: !2767)
!2767 = !DILexicalBlockFile(scope: !2768, file: !162, discriminator: 2)
!2768 = !DILexicalBlockFile(scope: !2217, file: !162, discriminator: 1)
!2769 = !DILocation(line: 6115, column: 7, scope: !2220)
!2770 = !DILocation(line: 6115, column: 14, scope: !2220)
!2771 = !DILocation(line: 6115, column: 20, scope: !2220)
!2772 = !DILocation(line: 6115, column: 23, scope: !2220)
!2773 = !{!2774, !2290, i64 0}
!2774 = !{!"block", !2290, i64 0, !2400, i64 8, !2291, i64 12}
!2775 = !DILocation(line: 6116, column: 17, scope: !2220)
!2776 = !DILocation(line: 6116, column: 23, scope: !2220)
!2777 = !DILocation(line: 6116, column: 7, scope: !2220)
!2778 = !DILocation(line: 6116, column: 10, scope: !2220)
!2779 = !DILocation(line: 6116, column: 15, scope: !2220)
!2780 = !DILocation(line: 6117, column: 26, scope: !2220)
!2781 = !DILocation(line: 6117, column: 7, scope: !2220)
!2782 = !DILocation(line: 6117, column: 13, scope: !2220)
!2783 = !DILocation(line: 6117, column: 24, scope: !2220)
!2784 = !DILocation(line: 6118, column: 11, scope: !2220)
!2785 = !DILocation(line: 6118, column: 9, scope: !2220)
!2786 = !DILocation(line: 6119, column: 5, scope: !2217)
!2787 = !DILocation(line: 6120, column: 3, scope: !2218)
!2788 = !DILocation(line: 6121, column: 3, scope: !2211)
!2789 = !DILocation(line: 6121, column: 9, scope: !2211)
!2790 = !DILocation(line: 6121, column: 16, scope: !2211)
!2791 = !DILocation(line: 6122, column: 3, scope: !2211)
!2792 = !DILocation(line: 6122, column: 9, scope: !2211)
!2793 = !DILocation(line: 6122, column: 15, scope: !2211)
!2794 = !{!2403, !2290, i64 32}
!2795 = !DILocation(line: 6123, column: 3, scope: !2211)
!2796 = !DILocation(line: 6123, column: 9, scope: !2211)
!2797 = !DILocation(line: 6123, column: 13, scope: !2211)
!2798 = !{!2403, !2290, i64 24}
!2799 = !DILocation(line: 6124, column: 3, scope: !2211)
!2800 = !DILocation(line: 6124, column: 9, scope: !2211)
!2801 = !DILocation(line: 6124, column: 13, scope: !2211)
!2802 = !{!2403, !2290, i64 16}
!2803 = !DILocation(line: 6125, column: 1, scope: !2211)
!2804 = !DILocation(line: 840, column: 23, scope: !1162)
!2805 = !DILocation(line: 840, column: 47, scope: !1162)
!2806 = !DILocation(line: 842, column: 4, scope: !1162)
!2807 = !DILocation(line: 842, column: 12, scope: !1162)
!2808 = !DILocation(line: 842, column: 25, scope: !1162)
!2809 = !{!2396, !2290, i64 536}
!2810 = !DILocation(line: 843, column: 32, scope: !1162)
!2811 = !DILocation(line: 843, column: 40, scope: !1162)
!2812 = !DILocation(line: 843, column: 3, scope: !1162)
!2813 = !DILocation(line: 844, column: 39, scope: !1162)
!2814 = !DILocation(line: 844, column: 52, scope: !1162)
!2815 = !DILocation(line: 845, column: 46, scope: !1162)
!2816 = !DILocation(line: 845, column: 54, scope: !1162)
!2817 = !DILocation(line: 845, column: 67, scope: !1162)
!2818 = !DILocation(line: 845, column: 29, scope: !1162)
!2819 = !DILocation(line: 844, column: 39, scope: !2820)
!2820 = !DILexicalBlockFile(scope: !1162, file: !162, discriminator: 1)
!2821 = !DILocation(line: 844, column: 4, scope: !2822)
!2822 = !DILexicalBlockFile(scope: !2823, file: !162, discriminator: 3)
!2823 = !DILexicalBlockFile(scope: !1162, file: !162, discriminator: 2)
!2824 = !DILocation(line: 844, column: 12, scope: !1162)
!2825 = !DILocation(line: 844, column: 36, scope: !1162)
!2826 = !DILocation(line: 847, column: 4, scope: !1162)
!2827 = !DILocation(line: 847, column: 12, scope: !1162)
!2828 = !DILocation(line: 847, column: 23, scope: !1162)
!2829 = !{!2396, !2290, i64 688}
!2830 = !DILocation(line: 848, column: 29, scope: !1162)
!2831 = !DILocation(line: 848, column: 37, scope: !1162)
!2832 = !DILocation(line: 848, column: 56, scope: !1162)
!2833 = !DILocation(line: 848, column: 64, scope: !1162)
!2834 = !DILocation(line: 848, column: 3, scope: !1162)
!2835 = !DILocation(line: 849, column: 4, scope: !1162)
!2836 = !DILocation(line: 849, column: 12, scope: !1162)
!2837 = !DILocation(line: 849, column: 24, scope: !1162)
!2838 = !{!2396, !2290, i64 0}
!2839 = !DILocation(line: 850, column: 4, scope: !1162)
!2840 = !DILocation(line: 850, column: 12, scope: !1162)
!2841 = !DILocation(line: 850, column: 26, scope: !1162)
!2842 = !{!2396, !2290, i64 8}
!2843 = !DILocation(line: 851, column: 4, scope: !1162)
!2844 = !DILocation(line: 851, column: 12, scope: !1162)
!2845 = !DILocation(line: 851, column: 35, scope: !1162)
!2846 = !{!2396, !2290, i64 104}
!2847 = !DILocation(line: 852, column: 4, scope: !1162)
!2848 = !DILocation(line: 852, column: 12, scope: !1162)
!2849 = !DILocation(line: 852, column: 33, scope: !1162)
!2850 = !{!2396, !2290, i64 112}
!2851 = !DILocation(line: 853, column: 4, scope: !1162)
!2852 = !DILocation(line: 853, column: 12, scope: !1162)
!2853 = !DILocation(line: 853, column: 36, scope: !1162)
!2854 = !{!2396, !2290, i64 120}
!2855 = !DILocation(line: 854, column: 4, scope: !1162)
!2856 = !DILocation(line: 854, column: 12, scope: !1162)
!2857 = !DILocation(line: 854, column: 44, scope: !1162)
!2858 = !{!2396, !2290, i64 128}
!2859 = !DILocation(line: 855, column: 4, scope: !1162)
!2860 = !DILocation(line: 855, column: 12, scope: !1162)
!2861 = !DILocation(line: 855, column: 30, scope: !1162)
!2862 = !{!2396, !2290, i64 136}
!2863 = !DILocation(line: 856, column: 4, scope: !1162)
!2864 = !DILocation(line: 856, column: 12, scope: !1162)
!2865 = !DILocation(line: 856, column: 40, scope: !1162)
!2866 = !{!2396, !2290, i64 144}
!2867 = !DILocation(line: 857, column: 4, scope: !1162)
!2868 = !DILocation(line: 857, column: 12, scope: !1162)
!2869 = !DILocation(line: 857, column: 38, scope: !1162)
!2870 = !{!2396, !2290, i64 152}
!2871 = !DILocation(line: 858, column: 4, scope: !1162)
!2872 = !DILocation(line: 858, column: 12, scope: !1162)
!2873 = !DILocation(line: 858, column: 30, scope: !1162)
!2874 = !{!2396, !2290, i64 160}
!2875 = !DILocation(line: 859, column: 4, scope: !1162)
!2876 = !DILocation(line: 859, column: 12, scope: !1162)
!2877 = !DILocation(line: 859, column: 39, scope: !1162)
!2878 = !{!2396, !2290, i64 168}
!2879 = !DILocation(line: 860, column: 4, scope: !1162)
!2880 = !DILocation(line: 860, column: 12, scope: !1162)
!2881 = !DILocation(line: 860, column: 37, scope: !1162)
!2882 = !{!2396, !2290, i64 176}
!2883 = !DILocation(line: 861, column: 4, scope: !1162)
!2884 = !DILocation(line: 861, column: 12, scope: !1162)
!2885 = !DILocation(line: 861, column: 41, scope: !1162)
!2886 = !{!2396, !2290, i64 184}
!2887 = !DILocation(line: 862, column: 4, scope: !1162)
!2888 = !DILocation(line: 862, column: 12, scope: !1162)
!2889 = !DILocation(line: 862, column: 35, scope: !1162)
!2890 = !{!2396, !2290, i64 192}
!2891 = !DILocation(line: 863, column: 4, scope: !1162)
!2892 = !DILocation(line: 863, column: 12, scope: !1162)
!2893 = !DILocation(line: 863, column: 41, scope: !1162)
!2894 = !{!2396, !2290, i64 200}
!2895 = !DILocation(line: 864, column: 4, scope: !1162)
!2896 = !DILocation(line: 864, column: 12, scope: !1162)
!2897 = !DILocation(line: 864, column: 39, scope: !1162)
!2898 = !{!2396, !2290, i64 208}
!2899 = !DILocation(line: 865, column: 4, scope: !1162)
!2900 = !DILocation(line: 865, column: 12, scope: !1162)
!2901 = !DILocation(line: 865, column: 36, scope: !1162)
!2902 = !{!2396, !2290, i64 216}
!2903 = !DILocation(line: 866, column: 4, scope: !1162)
!2904 = !DILocation(line: 866, column: 12, scope: !1162)
!2905 = !DILocation(line: 866, column: 40, scope: !1162)
!2906 = !{!2396, !2290, i64 224}
!2907 = !DILocation(line: 867, column: 45, scope: !1162)
!2908 = !DILocation(line: 867, column: 4, scope: !1162)
!2909 = !DILocation(line: 867, column: 12, scope: !1162)
!2910 = !DILocation(line: 867, column: 43, scope: !1162)
!2911 = !{!2396, !2290, i64 232}
!2912 = !DILocation(line: 868, column: 4, scope: !1162)
!2913 = !DILocation(line: 868, column: 12, scope: !1162)
!2914 = !DILocation(line: 868, column: 36, scope: !1162)
!2915 = !{!2396, !2290, i64 240}
!2916 = !DILocation(line: 869, column: 4, scope: !1162)
!2917 = !DILocation(line: 869, column: 12, scope: !1162)
!2918 = !DILocation(line: 869, column: 34, scope: !1162)
!2919 = !{!2396, !2290, i64 256}
!2920 = !DILocation(line: 870, column: 4, scope: !1162)
!2921 = !DILocation(line: 870, column: 12, scope: !1162)
!2922 = !DILocation(line: 870, column: 34, scope: !1162)
!2923 = !{!2396, !2290, i64 264}
!2924 = !DILocation(line: 871, column: 4, scope: !1162)
!2925 = !DILocation(line: 871, column: 12, scope: !1162)
!2926 = !DILocation(line: 871, column: 33, scope: !1162)
!2927 = !{!2396, !2290, i64 272}
!2928 = !DILocation(line: 872, column: 4, scope: !1162)
!2929 = !DILocation(line: 872, column: 12, scope: !1162)
!2930 = !DILocation(line: 872, column: 30, scope: !1162)
!2931 = !{!2396, !2290, i64 280}
!2932 = !DILocation(line: 873, column: 28, scope: !1162)
!2933 = !DILocation(line: 873, column: 36, scope: !1162)
!2934 = !DILocation(line: 873, column: 4, scope: !1162)
!2935 = !DILocation(line: 873, column: 12, scope: !1162)
!2936 = !DILocation(line: 873, column: 25, scope: !1162)
!2937 = !{!2396, !2290, i64 48}
!2938 = !DILocation(line: 874, column: 28, scope: !1162)
!2939 = !DILocation(line: 874, column: 36, scope: !1162)
!2940 = !DILocation(line: 874, column: 4, scope: !1162)
!2941 = !DILocation(line: 874, column: 12, scope: !1162)
!2942 = !DILocation(line: 874, column: 25, scope: !1162)
!2943 = !{!2396, !2290, i64 56}
!2944 = !DILocation(line: 875, column: 4, scope: !1162)
!2945 = !DILocation(line: 875, column: 12, scope: !1162)
!2946 = !DILocation(line: 875, column: 33, scope: !1162)
!2947 = !{!2396, !2397, i64 72}
!2948 = !DILocation(line: 876, column: 4, scope: !1162)
!2949 = !DILocation(line: 876, column: 12, scope: !1162)
!2950 = !DILocation(line: 876, column: 27, scope: !1162)
!2951 = !{!2396, !2290, i64 80}
!2952 = !DILocation(line: 877, column: 4, scope: !1162)
!2953 = !DILocation(line: 877, column: 12, scope: !1162)
!2954 = !DILocation(line: 877, column: 31, scope: !1162)
!2955 = !{!2396, !2290, i64 656}
!2956 = !DILocation(line: 878, column: 4, scope: !1162)
!2957 = !DILocation(line: 878, column: 12, scope: !1162)
!2958 = !DILocation(line: 878, column: 31, scope: !1162)
!2959 = !{!2396, !2290, i64 664}
!2960 = !DILocation(line: 879, column: 4, scope: !1162)
!2961 = !DILocation(line: 879, column: 12, scope: !1162)
!2962 = !DILocation(line: 879, column: 26, scope: !1162)
!2963 = !{!2396, !2290, i64 600}
!2964 = !DILocation(line: 880, column: 4, scope: !1162)
!2965 = !DILocation(line: 880, column: 12, scope: !1162)
!2966 = !DILocation(line: 880, column: 27, scope: !1162)
!2967 = !{!2396, !2290, i64 608}
!2968 = !DILocation(line: 881, column: 4, scope: !1162)
!2969 = !DILocation(line: 881, column: 12, scope: !1162)
!2970 = !DILocation(line: 881, column: 28, scope: !1162)
!2971 = !{!2396, !2290, i64 616}
!2972 = !DILocation(line: 882, column: 4, scope: !1162)
!2973 = !DILocation(line: 882, column: 12, scope: !1162)
!2974 = !DILocation(line: 882, column: 28, scope: !1162)
!2975 = !{!2396, !2290, i64 624}
!2976 = !DILocation(line: 883, column: 4, scope: !1162)
!2977 = !DILocation(line: 883, column: 12, scope: !1162)
!2978 = !DILocation(line: 883, column: 33, scope: !1162)
!2979 = !{!2396, !2290, i64 632}
!2980 = !DILocation(line: 884, column: 4, scope: !1162)
!2981 = !DILocation(line: 884, column: 12, scope: !1162)
!2982 = !DILocation(line: 884, column: 32, scope: !1162)
!2983 = !{!2396, !2290, i64 640}
!2984 = !DILocation(line: 885, column: 4, scope: !1162)
!2985 = !DILocation(line: 885, column: 12, scope: !1162)
!2986 = !DILocation(line: 885, column: 36, scope: !1162)
!2987 = !{!2396, !2290, i64 648}
!2988 = !DILocation(line: 886, column: 4, scope: !1162)
!2989 = !DILocation(line: 886, column: 12, scope: !1162)
!2990 = !DILocation(line: 886, column: 36, scope: !1162)
!2991 = !{!2396, !2291, i64 672}
!2992 = !DILocation(line: 887, column: 4, scope: !1162)
!2993 = !DILocation(line: 887, column: 12, scope: !1162)
!2994 = !DILocation(line: 887, column: 33, scope: !1162)
!2995 = !{!2396, !2291, i64 673}
!2996 = !DILocation(line: 888, column: 12, scope: !1162)
!2997 = !DILocation(line: 888, column: 20, scope: !1162)
!2998 = !DILocation(line: 888, column: 3, scope: !1162)
!2999 = !DILocation(line: 889, column: 4, scope: !1162)
!3000 = !DILocation(line: 889, column: 12, scope: !1162)
!3001 = !DILocation(line: 889, column: 25, scope: !1162)
!3002 = !{!2396, !2291, i64 544}
!3003 = !DILocation(line: 890, column: 4, scope: !1162)
!3004 = !DILocation(line: 890, column: 12, scope: !1162)
!3005 = !DILocation(line: 890, column: 24, scope: !1162)
!3006 = !{!2396, !2290, i64 552}
!3007 = !DILocation(line: 891, column: 4, scope: !1162)
!3008 = !DILocation(line: 891, column: 12, scope: !1162)
!3009 = !DILocation(line: 891, column: 27, scope: !1162)
!3010 = !{!2396, !2290, i64 560}
!3011 = !DILocation(line: 892, column: 4, scope: !1162)
!3012 = !DILocation(line: 892, column: 12, scope: !1162)
!3013 = !DILocation(line: 892, column: 27, scope: !1162)
!3014 = !{!2396, !2290, i64 568}
!3015 = !DILocation(line: 893, column: 4, scope: !1162)
!3016 = !DILocation(line: 893, column: 12, scope: !1162)
!3017 = !DILocation(line: 893, column: 36, scope: !1162)
!3018 = !DILocation(line: 894, column: 4, scope: !1162)
!3019 = !DILocation(line: 894, column: 12, scope: !1162)
!3020 = !DILocation(line: 894, column: 45, scope: !1162)
!3021 = !{!2396, !2291, i64 592}
!3022 = !DILocation(line: 895, column: 4, scope: !1162)
!3023 = !DILocation(line: 895, column: 12, scope: !1162)
!3024 = !DILocation(line: 895, column: 24, scope: !1162)
!3025 = !{!2396, !2400, i64 596}
!3026 = !DILocation(line: 896, column: 4, scope: !1162)
!3027 = !DILocation(line: 896, column: 12, scope: !1162)
!3028 = !DILocation(line: 896, column: 24, scope: !1162)
!3029 = !DILocation(line: 897, column: 4, scope: !1162)
!3030 = !DILocation(line: 897, column: 12, scope: !1162)
!3031 = !DILocation(line: 897, column: 33, scope: !1162)
!3032 = !DILocation(line: 898, column: 4, scope: !1162)
!3033 = !DILocation(line: 898, column: 12, scope: !1162)
!3034 = !DILocation(line: 898, column: 30, scope: !1162)
!3035 = !{!2396, !2400, i64 732}
!3036 = !DILocation(line: 899, column: 4, scope: !1162)
!3037 = !DILocation(line: 899, column: 12, scope: !1162)
!3038 = !DILocation(line: 899, column: 34, scope: !1162)
!3039 = !DILocation(line: 900, column: 4, scope: !1162)
!3040 = !DILocation(line: 900, column: 12, scope: !1162)
!3041 = !DILocation(line: 900, column: 38, scope: !1162)
!3042 = !DILocation(line: 901, column: 4, scope: !1162)
!3043 = !DILocation(line: 901, column: 12, scope: !1162)
!3044 = !DILocation(line: 901, column: 35, scope: !1162)
!3045 = !DILocation(line: 902, column: 4, scope: !1162)
!3046 = !DILocation(line: 902, column: 12, scope: !1162)
!3047 = !DILocation(line: 902, column: 28, scope: !1162)
!3048 = !DILocation(line: 903, column: 4, scope: !1162)
!3049 = !DILocation(line: 903, column: 12, scope: !1162)
!3050 = !DILocation(line: 903, column: 28, scope: !1162)
!3051 = !DILocation(line: 903, column: 37, scope: !1162)
!3052 = !{!2396, !2291, i64 912}
!3053 = !DILocation(line: 905, column: 4, scope: !1162)
!3054 = !DILocation(line: 905, column: 12, scope: !1162)
!3055 = !DILocation(line: 905, column: 29, scope: !1162)
!3056 = !{!2396, !2291, i64 920}
!3057 = !DILocation(line: 906, column: 4, scope: !1162)
!3058 = !DILocation(line: 906, column: 12, scope: !1162)
!3059 = !DILocation(line: 906, column: 29, scope: !1162)
!3060 = !{!2396, !2291, i64 921}
!3061 = !DILocation(line: 907, column: 4, scope: !1162)
!3062 = !DILocation(line: 907, column: 12, scope: !1162)
!3063 = !DILocation(line: 907, column: 34, scope: !1162)
!3064 = !{!2396, !2291, i64 924}
!3065 = !DILocation(line: 909, column: 4, scope: !1162)
!3066 = !DILocation(line: 909, column: 12, scope: !1162)
!3067 = !DILocation(line: 909, column: 32, scope: !1162)
!3068 = !{!2396, !2397, i64 928}
!3069 = !DILocation(line: 910, column: 1, scope: !1162)
!3070 = !DILocation(line: 5678, column: 15, scope: !2111)
!3071 = !DILocation(line: 5678, column: 51, scope: !2111)
!3072 = !DILocation(line: 5680, column: 3, scope: !2111)
!3073 = !DILocation(line: 5680, column: 19, scope: !2111)
!3074 = !DILocation(line: 5681, column: 30, scope: !2111)
!3075 = !DILocation(line: 5681, column: 33, scope: !2111)
!3076 = !DILocation(line: 5681, column: 3, scope: !2111)
!3077 = !DILocation(line: 5682, column: 3, scope: !2111)
!3078 = !DILocation(line: 5683, column: 5, scope: !2119)
!3079 = !DILocation(line: 5683, column: 19, scope: !2119)
!3080 = !DILocation(line: 5683, column: 39, scope: !2119)
!3081 = !DILocation(line: 5683, column: 23, scope: !2119)
!3082 = !DILocation(line: 5684, column: 10, scope: !3083)
!3083 = distinct !DILexicalBlock(scope: !2119, file: !162, line: 5684, column: 9)
!3084 = !DILocation(line: 5684, column: 9, scope: !2119)
!3085 = !DILocation(line: 5685, column: 7, scope: !3083)
!3086 = !DILocation(line: 5686, column: 9, scope: !3087)
!3087 = distinct !DILexicalBlock(scope: !2119, file: !162, line: 5686, column: 9)
!3088 = !DILocation(line: 5686, column: 12, scope: !3087)
!3089 = !{!3090, !2400, i64 28}
!3090 = !{!"", !2290, i64 0, !2290, i64 8, !2290, i64 16, !2400, i64 24, !2400, i64 28, !2290, i64 32}
!3091 = !DILocation(line: 5686, column: 29, scope: !3087)
!3092 = !DILocation(line: 5686, column: 9, scope: !2119)
!3093 = !DILocation(line: 5687, column: 7, scope: !3087)
!3094 = !DILocation(line: 5687, column: 11, scope: !3087)
!3095 = !DILocation(line: 5687, column: 20, scope: !3087)
!3096 = !DILocation(line: 5687, column: 23, scope: !3087)
!3097 = !{!3090, !2290, i64 32}
!3098 = !DILocation(line: 5688, column: 3, scope: !2120)
!3099 = !DILocation(line: 5688, column: 3, scope: !3100)
!3100 = !DILexicalBlockFile(scope: !2120, file: !162, discriminator: 1)
!3101 = !DILocation(line: 5682, column: 3, scope: !2120)
!3102 = !DILocation(line: 5689, column: 20, scope: !2111)
!3103 = !DILocation(line: 5689, column: 23, scope: !2111)
!3104 = !DILocation(line: 5689, column: 3, scope: !2111)
!3105 = !DILocation(line: 5691, column: 3, scope: !2111)
!3106 = !DILocation(line: 5691, column: 6, scope: !2111)
!3107 = !DILocation(line: 5691, column: 22, scope: !2111)
!3108 = !{!3109, !2291, i64 259}
!3109 = !{!"", !3110, i64 0, !3110, i64 40, !3110, i64 80, !3110, i64 120, !2403, i64 160, !2403, i64 208, !2291, i64 256, !2291, i64 257, !2291, i64 258, !2291, i64 259, !3110, i64 264, !3111, i64 304, !2291, i64 320, !2290, i64 328, !2400, i64 336, !2400, i64 340, !2400, i64 344, !2400, i64 348, !2290, i64 352}
!3110 = !{!"", !2290, i64 0, !2291, i64 8, !2397, i64 16, !2397, i64 24, !2290, i64 32}
!3111 = !{!"prefix", !2290, i64 0, !2290, i64 8}
!3112 = !DILocation(line: 5692, column: 20, scope: !2111)
!3113 = !DILocation(line: 5692, column: 23, scope: !2111)
!3114 = !DILocation(line: 5692, column: 3, scope: !2111)
!3115 = !DILocation(line: 5694, column: 20, scope: !2111)
!3116 = !DILocation(line: 5694, column: 23, scope: !2111)
!3117 = !DILocation(line: 5694, column: 3, scope: !2111)
!3118 = !DILocation(line: 5695, column: 20, scope: !2111)
!3119 = !DILocation(line: 5695, column: 23, scope: !2111)
!3120 = !DILocation(line: 5695, column: 3, scope: !2111)
!3121 = !DILocation(line: 5696, column: 20, scope: !2111)
!3122 = !DILocation(line: 5696, column: 23, scope: !2111)
!3123 = !DILocation(line: 5696, column: 3, scope: !2111)
!3124 = !DILocation(line: 5697, column: 15, scope: !2111)
!3125 = !DILocation(line: 5697, column: 18, scope: !2111)
!3126 = !DILocation(line: 5697, column: 3, scope: !2111)
!3127 = !DILocation(line: 5698, column: 15, scope: !2111)
!3128 = !DILocation(line: 5698, column: 18, scope: !2111)
!3129 = !DILocation(line: 5698, column: 3, scope: !2111)
!3130 = !DILocation(line: 5699, column: 3, scope: !2111)
!3131 = !DILocation(line: 5699, column: 6, scope: !2111)
!3132 = !DILocation(line: 5699, column: 20, scope: !2111)
!3133 = !DILocation(line: 5699, column: 25, scope: !2111)
!3134 = !{!3109, !2290, i64 304}
!3135 = !DILocation(line: 5700, column: 3, scope: !2111)
!3136 = !DILocation(line: 5700, column: 6, scope: !2111)
!3137 = !DILocation(line: 5700, column: 20, scope: !2111)
!3138 = !DILocation(line: 5700, column: 28, scope: !2111)
!3139 = !{!3109, !2290, i64 312}
!3140 = !DILocation(line: 5702, column: 3, scope: !2111)
!3141 = !DILocation(line: 5702, column: 6, scope: !2111)
!3142 = !DILocation(line: 5702, column: 16, scope: !2111)
!3143 = !{!3109, !2291, i64 320}
!3144 = !DILocation(line: 5704, column: 3, scope: !2111)
!3145 = !DILocation(line: 5704, column: 7, scope: !2111)
!3146 = !DILocation(line: 5704, column: 16, scope: !2111)
!3147 = !DILocation(line: 5704, column: 19, scope: !2111)
!3148 = !{!3109, !2290, i64 352}
!3149 = !DILocation(line: 5705, column: 3, scope: !2111)
!3150 = !DILocation(line: 5705, column: 6, scope: !2111)
!3151 = !DILocation(line: 5705, column: 17, scope: !2111)
!3152 = !DILocation(line: 5706, column: 3, scope: !2111)
!3153 = !DILocation(line: 5706, column: 7, scope: !2111)
!3154 = !DILocation(line: 5706, column: 16, scope: !2111)
!3155 = !DILocation(line: 5706, column: 19, scope: !2111)
!3156 = !{!3109, !2290, i64 328}
!3157 = !DILocation(line: 5707, column: 3, scope: !2111)
!3158 = !DILocation(line: 5707, column: 6, scope: !2111)
!3159 = !DILocation(line: 5707, column: 15, scope: !2111)
!3160 = !DILocation(line: 5709, column: 3, scope: !2111)
!3161 = !DILocation(line: 5709, column: 6, scope: !2111)
!3162 = !DILocation(line: 5709, column: 17, scope: !2111)
!3163 = !{!3109, !2400, i64 348}
!3164 = !DILocation(line: 5710, column: 3, scope: !2111)
!3165 = !DILocation(line: 5710, column: 6, scope: !2111)
!3166 = !DILocation(line: 5710, column: 16, scope: !2111)
!3167 = !{!3109, !2400, i64 340}
!3168 = !DILocation(line: 5711, column: 3, scope: !2111)
!3169 = !DILocation(line: 5711, column: 6, scope: !2111)
!3170 = !DILocation(line: 5711, column: 17, scope: !2111)
!3171 = !{!3109, !2400, i64 344}
!3172 = !DILocation(line: 5712, column: 3, scope: !2111)
!3173 = !DILocation(line: 5712, column: 6, scope: !2111)
!3174 = !DILocation(line: 5712, column: 23, scope: !2111)
!3175 = !{!3109, !2400, i64 336}
!3176 = !DILocation(line: 5714, column: 3, scope: !2111)
!3177 = !DILocation(line: 5714, column: 6, scope: !2111)
!3178 = !DILocation(line: 5714, column: 21, scope: !2111)
!3179 = !{!3109, !2291, i64 256}
!3180 = !DILocation(line: 5715, column: 3, scope: !2111)
!3181 = !DILocation(line: 5715, column: 6, scope: !2111)
!3182 = !DILocation(line: 5715, column: 25, scope: !2111)
!3183 = !{!3109, !2291, i64 257}
!3184 = !DILocation(line: 5716, column: 3, scope: !2111)
!3185 = !DILocation(line: 5716, column: 6, scope: !2111)
!3186 = !DILocation(line: 5716, column: 17, scope: !2111)
!3187 = !{!3109, !2291, i64 258}
!3188 = !DILocation(line: 5717, column: 1, scope: !2111)
!3189 = !DILocation(line: 961, column: 36, scope: !690)
!3190 = !DILocation(line: 961, column: 60, scope: !690)
!3191 = !DILocation(line: 967, column: 8, scope: !3192)
!3192 = distinct !DILexicalBlock(scope: !690, file: !162, line: 967, column: 7)
!3193 = !DILocation(line: 967, column: 16, scope: !3192)
!3194 = !DILocation(line: 967, column: 32, scope: !3192)
!3195 = !DILocation(line: 967, column: 41, scope: !3192)
!3196 = !DILocation(line: 967, column: 56, scope: !3192)
!3197 = !DILocation(line: 967, column: 60, scope: !3198)
!3198 = !DILexicalBlockFile(scope: !3192, file: !162, discriminator: 1)
!3199 = !DILocation(line: 967, column: 68, scope: !3192)
!3200 = !DILocation(line: 967, column: 84, scope: !3192)
!3201 = !DILocation(line: 967, column: 93, scope: !3192)
!3202 = !DILocation(line: 967, column: 7, scope: !690)
!3203 = !DILocation(line: 968, column: 5, scope: !3192)
!3204 = !DILocation(line: 969, column: 7, scope: !3205)
!3205 = distinct !DILexicalBlock(scope: !690, file: !162, line: 969, column: 7)
!3206 = !DILocation(line: 969, column: 20, scope: !3205)
!3207 = !DILocation(line: 969, column: 7, scope: !690)
!3208 = !DILocation(line: 970, column: 6, scope: !3205)
!3209 = !DILocation(line: 970, column: 14, scope: !3205)
!3210 = !DILocation(line: 970, column: 38, scope: !3205)
!3211 = !DILocation(line: 970, column: 5, scope: !3205)
!3212 = !DILocation(line: 972, column: 57, scope: !3213)
!3213 = distinct !DILexicalBlock(scope: !3205, file: !162, line: 971, column: 8)
!3214 = !DILocation(line: 972, column: 65, scope: !3213)
!3215 = !DILocation(line: 972, column: 78, scope: !3213)
!3216 = !DILocation(line: 972, column: 40, scope: !3213)
!3217 = !DILocation(line: 972, column: 6, scope: !3213)
!3218 = !DILocation(line: 972, column: 14, scope: !3213)
!3219 = !DILocation(line: 972, column: 38, scope: !3213)
!3220 = !DILocation(line: 973, column: 11, scope: !3221)
!3221 = distinct !DILexicalBlock(scope: !3213, file: !162, line: 973, column: 9)
!3222 = !DILocation(line: 973, column: 19, scope: !3221)
!3223 = !DILocation(line: 973, column: 10, scope: !3221)
!3224 = !DILocation(line: 973, column: 9, scope: !3213)
!3225 = !DILocation(line: 974, column: 7, scope: !3221)
!3226 = !DILocation(line: 976, column: 3, scope: !690)
!3227 = !DILocation(line: 977, column: 1, scope: !690)
!3228 = !DILocation(line: 6161, column: 29, scope: !2229)
!3229 = !DILocation(line: 6161, column: 51, scope: !2229)
!3230 = !DILocation(line: 6163, column: 3, scope: !2229)
!3231 = !DILocation(line: 6164, column: 13, scope: !3232)
!3232 = distinct !DILexicalBlock(scope: !3233, file: !162, line: 6164, column: 9)
!3233 = distinct !DILexicalBlock(scope: !2229, file: !162, line: 6163, column: 6)
!3234 = !DILocation(line: 6164, column: 20, scope: !3232)
!3235 = !DILocation(line: 6164, column: 28, scope: !3232)
!3236 = !DILocation(line: 6164, column: 35, scope: !3232)
!3237 = !DILocation(line: 6164, column: 24, scope: !3232)
!3238 = !DILocation(line: 6164, column: 39, scope: !3232)
!3239 = !DILocation(line: 6164, column: 52, scope: !3240)
!3240 = !DILexicalBlockFile(scope: !3232, file: !162, discriminator: 1)
!3241 = !DILocation(line: 6164, column: 43, scope: !3232)
!3242 = !DILocation(line: 6164, column: 9, scope: !3233)
!3243 = !DILocation(line: 6164, column: 11, scope: !3244)
!3244 = !DILexicalBlockFile(scope: !3232, file: !162, discriminator: 4)
!3245 = !DILocation(line: 6164, column: 87, scope: !3246)
!3246 = !DILexicalBlockFile(scope: !3247, file: !162, discriminator: 3)
!3247 = !DILexicalBlockFile(scope: !3232, file: !162, discriminator: 2)
!3248 = !DILocation(line: 6164, column: 86, scope: !3232)
!3249 = !DILocation(line: 6164, column: 70, scope: !3232)
!3250 = !DILocation(line: 6164, column: 77, scope: !3232)
!3251 = !DILocation(line: 6164, column: 81, scope: !3232)
!3252 = !DILocation(line: 6164, column: 84, scope: !3232)
!3253 = !DILocation(line: 6165, column: 7, scope: !3232)
!3254 = !DILocation(line: 6166, column: 3, scope: !3233)
!3255 = !DILocation(line: 6166, column: 14, scope: !3256)
!3256 = !DILexicalBlockFile(scope: !2229, file: !162, discriminator: 1)
!3257 = !DILocation(line: 6166, column: 12, scope: !2229)
!3258 = !DILocation(line: 6167, column: 7, scope: !2229)
!3259 = !DILocation(line: 6167, column: 13, scope: !2229)
!3260 = !DILocation(line: 6167, column: 5, scope: !2229)
!3261 = !DILocation(line: 6168, column: 21, scope: !2229)
!3262 = !DILocation(line: 6168, column: 28, scope: !2229)
!3263 = !DILocation(line: 6168, column: 5, scope: !2229)
!3264 = !DILocation(line: 6168, column: 12, scope: !2229)
!3265 = !DILocation(line: 6168, column: 18, scope: !2229)
!3266 = !DILocation(line: 6169, column: 10, scope: !2229)
!3267 = !DILocation(line: 6169, column: 3, scope: !2229)
!3268 = !DILocation(line: 6170, column: 1, scope: !2229)
!3269 = !DILocation(line: 980, column: 51, scope: !696)
!3270 = !DILocation(line: 981, column: 48, scope: !696)
!3271 = !DILocation(line: 982, column: 48, scope: !696)
!3272 = !DILocation(line: 984, column: 3, scope: !696)
!3273 = !DILocation(line: 984, column: 14, scope: !696)
!3274 = !DILocation(line: 984, column: 23, scope: !696)
!3275 = !DILocation(line: 985, column: 3, scope: !696)
!3276 = !DILocation(line: 985, column: 8, scope: !696)
!3277 = !DILocation(line: 986, column: 3, scope: !696)
!3278 = !DILocation(line: 986, column: 8, scope: !696)
!3279 = !DILocation(line: 986, column: 18, scope: !696)
!3280 = !DILocation(line: 986, column: 26, scope: !696)
!3281 = !DILocation(line: 987, column: 3, scope: !696)
!3282 = !DILocation(line: 987, column: 27, scope: !696)
!3283 = !DILocation(line: 987, column: 53, scope: !696)
!3284 = !DILocation(line: 987, column: 61, scope: !696)
!3285 = !DILocation(line: 988, column: 3, scope: !696)
!3286 = !DILocation(line: 988, column: 25, scope: !696)
!3287 = !DILocation(line: 988, column: 49, scope: !696)
!3288 = !DILocation(line: 988, column: 57, scope: !696)
!3289 = !DILocation(line: 989, column: 3, scope: !696)
!3290 = !DILocation(line: 989, column: 28, scope: !696)
!3291 = !DILocation(line: 989, column: 55, scope: !696)
!3292 = !DILocation(line: 989, column: 63, scope: !696)
!3293 = !DILocation(line: 990, column: 3, scope: !696)
!3294 = !DILocation(line: 990, column: 36, scope: !696)
!3295 = !DILocation(line: 991, column: 10, scope: !696)
!3296 = !DILocation(line: 991, column: 18, scope: !696)
!3297 = !DILocation(line: 992, column: 3, scope: !696)
!3298 = !DILocation(line: 992, column: 22, scope: !696)
!3299 = !DILocation(line: 992, column: 43, scope: !696)
!3300 = !DILocation(line: 992, column: 51, scope: !696)
!3301 = !DILocation(line: 993, column: 3, scope: !696)
!3302 = !DILocation(line: 993, column: 32, scope: !696)
!3303 = !DILocation(line: 994, column: 10, scope: !696)
!3304 = !DILocation(line: 994, column: 18, scope: !696)
!3305 = !DILocation(line: 995, column: 3, scope: !696)
!3306 = !DILocation(line: 995, column: 30, scope: !696)
!3307 = !DILocation(line: 996, column: 10, scope: !696)
!3308 = !DILocation(line: 996, column: 18, scope: !696)
!3309 = !DILocation(line: 997, column: 3, scope: !696)
!3310 = !DILocation(line: 997, column: 22, scope: !696)
!3311 = !DILocation(line: 997, column: 43, scope: !696)
!3312 = !DILocation(line: 997, column: 51, scope: !696)
!3313 = !DILocation(line: 998, column: 3, scope: !696)
!3314 = !DILocation(line: 998, column: 33, scope: !696)
!3315 = !DILocation(line: 999, column: 10, scope: !696)
!3316 = !DILocation(line: 999, column: 18, scope: !696)
!3317 = !DILocation(line: 1000, column: 3, scope: !696)
!3318 = !DILocation(line: 1000, column: 27, scope: !696)
!3319 = !DILocation(line: 1000, column: 53, scope: !696)
!3320 = !DILocation(line: 1000, column: 61, scope: !696)
!3321 = !DILocation(line: 1001, column: 3, scope: !696)
!3322 = !DILocation(line: 1001, column: 33, scope: !696)
!3323 = !DILocation(line: 1002, column: 10, scope: !696)
!3324 = !DILocation(line: 1002, column: 18, scope: !696)
!3325 = !DILocation(line: 1003, column: 3, scope: !696)
!3326 = !DILocation(line: 1003, column: 31, scope: !696)
!3327 = !DILocation(line: 1004, column: 10, scope: !696)
!3328 = !DILocation(line: 1004, column: 18, scope: !696)
!3329 = !DILocation(line: 1005, column: 3, scope: !696)
!3330 = !DILocation(line: 1005, column: 28, scope: !696)
!3331 = !DILocation(line: 1005, column: 55, scope: !696)
!3332 = !DILocation(line: 1005, column: 63, scope: !696)
!3333 = !DILocation(line: 1006, column: 3, scope: !696)
!3334 = !DILocation(line: 1006, column: 32, scope: !696)
!3335 = !DILocation(line: 1007, column: 10, scope: !696)
!3336 = !DILocation(line: 1007, column: 18, scope: !696)
!3337 = !DILocation(line: 1008, column: 3, scope: !696)
!3338 = !DILocation(line: 1008, column: 28, scope: !696)
!3339 = !DILocation(line: 1008, column: 55, scope: !696)
!3340 = !DILocation(line: 1008, column: 63, scope: !696)
!3341 = !DILocation(line: 1009, column: 3, scope: !696)
!3342 = !DILocation(line: 1009, column: 30, scope: !696)
!3343 = !DILocation(line: 1010, column: 10, scope: !696)
!3344 = !DILocation(line: 1010, column: 18, scope: !696)
!3345 = !DILocation(line: 1011, column: 3, scope: !696)
!3346 = !DILocation(line: 1011, column: 26, scope: !696)
!3347 = !DILocation(line: 1011, column: 51, scope: !696)
!3348 = !DILocation(line: 1011, column: 59, scope: !696)
!3349 = !DILocation(line: 1012, column: 3, scope: !696)
!3350 = !DILocation(line: 1012, column: 26, scope: !696)
!3351 = !DILocation(line: 1012, column: 51, scope: !696)
!3352 = !DILocation(line: 1012, column: 59, scope: !696)
!3353 = !DILocation(line: 1013, column: 3, scope: !696)
!3354 = !DILocation(line: 1013, column: 25, scope: !696)
!3355 = !DILocation(line: 1013, column: 49, scope: !696)
!3356 = !DILocation(line: 1013, column: 57, scope: !696)
!3357 = !DILocation(line: 1014, column: 3, scope: !696)
!3358 = !DILocation(line: 1014, column: 22, scope: !696)
!3359 = !DILocation(line: 1014, column: 43, scope: !696)
!3360 = !DILocation(line: 1014, column: 51, scope: !696)
!3361 = !DILocation(line: 1015, column: 3, scope: !696)
!3362 = !DILocation(line: 1015, column: 18, scope: !696)
!3363 = !DILocation(line: 1015, column: 40, scope: !696)
!3364 = !DILocation(line: 1015, column: 48, scope: !696)
!3365 = !DILocation(line: 1017, column: 3, scope: !696)
!3366 = !DILocation(line: 1017, column: 9, scope: !696)
!3367 = !DILocation(line: 1017, column: 24, scope: !696)
!3368 = !DILocation(line: 1017, column: 32, scope: !696)
!3369 = !DILocation(line: 1018, column: 3, scope: !696)
!3370 = !DILocation(line: 1018, column: 9, scope: !696)
!3371 = !DILocation(line: 1018, column: 26, scope: !696)
!3372 = !DILocation(line: 1018, column: 34, scope: !696)
!3373 = !DILocation(line: 1019, column: 3, scope: !696)
!3374 = !DILocation(line: 1019, column: 12, scope: !696)
!3375 = !DILocation(line: 1019, column: 48, scope: !696)
!3376 = !DILocation(line: 1019, column: 56, scope: !696)
!3377 = !DILocation(line: 1020, column: 3, scope: !696)
!3378 = !DILocation(line: 1020, column: 14, scope: !696)
!3379 = !DILocation(line: 1020, column: 48, scope: !696)
!3380 = !DILocation(line: 1020, column: 56, scope: !696)
!3381 = !DILocation(line: 1022, column: 3, scope: !696)
!3382 = !DILocation(line: 1022, column: 31, scope: !696)
!3383 = !DILocation(line: 1022, column: 56, scope: !696)
!3384 = !DILocation(line: 1022, column: 64, scope: !696)
!3385 = !DILocation(line: 1023, column: 3, scope: !696)
!3386 = !DILocation(line: 1023, column: 7, scope: !696)
!3387 = !DILocation(line: 1023, column: 27, scope: !696)
!3388 = !DILocation(line: 1023, column: 35, scope: !696)
!3389 = !DILocation(line: 1023, column: 50, scope: !696)
!3390 = !{!2396, !2400, i64 528}
!3391 = !{!2400, !2400, i64 0}
!3392 = !DILocation(line: 1025, column: 3, scope: !696)
!3393 = !DILocation(line: 1025, column: 12, scope: !696)
!3394 = !DILocation(line: 1025, column: 30, scope: !696)
!3395 = !DILocation(line: 1025, column: 38, scope: !696)
!3396 = !DILocation(line: 1031, column: 3, scope: !696)
!3397 = !DILocation(line: 1031, column: 17, scope: !696)
!3398 = !DILocation(line: 1031, column: 40, scope: !696)
!3399 = !DILocation(line: 1031, column: 48, scope: !696)
!3400 = !{!2397, !2397, i64 0}
!3401 = !DILocation(line: 1034, column: 8, scope: !3402)
!3402 = distinct !DILexicalBlock(scope: !696, file: !162, line: 1034, column: 7)
!3403 = !DILocation(line: 1034, column: 7, scope: !696)
!3404 = !DILocation(line: 1035, column: 14, scope: !3402)
!3405 = !DILocation(line: 1035, column: 12, scope: !3402)
!3406 = !DILocation(line: 1035, column: 5, scope: !3402)
!3407 = !DILocation(line: 1043, column: 8, scope: !737)
!3408 = !DILocation(line: 1043, column: 16, scope: !737)
!3409 = !DILocation(line: 1043, column: 7, scope: !737)
!3410 = !DILocation(line: 1043, column: 7, scope: !696)
!3411 = !DILocation(line: 1044, column: 5, scope: !736)
!3412 = !DILocation(line: 1044, column: 14, scope: !736)
!3413 = !DILocation(line: 1045, column: 13, scope: !736)
!3414 = !DILocation(line: 1045, column: 21, scope: !736)
!3415 = !DILocation(line: 1045, column: 6, scope: !736)
!3416 = !DILocation(line: 1045, column: 10, scope: !736)
!3417 = !DILocation(line: 1046, column: 27, scope: !736)
!3418 = !DILocation(line: 1046, column: 42, scope: !736)
!3419 = !DILocation(line: 1046, column: 50, scope: !736)
!3420 = !DILocation(line: 1046, column: 57, scope: !736)
!3421 = !DILocation(line: 1046, column: 62, scope: !736)
!3422 = !DILocation(line: 1046, column: 14, scope: !736)
!3423 = !DILocation(line: 1046, column: 12, scope: !736)
!3424 = !DILocation(line: 1047, column: 3, scope: !737)
!3425 = !DILocation(line: 1047, column: 3, scope: !736)
!3426 = !DILocation(line: 1049, column: 27, scope: !3427)
!3427 = distinct !DILexicalBlock(scope: !737, file: !162, line: 1048, column: 8)
!3428 = !DILocation(line: 1049, column: 42, scope: !3427)
!3429 = !DILocation(line: 1049, column: 50, scope: !3427)
!3430 = !DILocation(line: 1049, column: 69, scope: !3427)
!3431 = !DILocation(line: 1049, column: 14, scope: !3427)
!3432 = !DILocation(line: 1049, column: 12, scope: !3427)
!3433 = !DILocation(line: 1052, column: 8, scope: !3434)
!3434 = distinct !DILexicalBlock(scope: !696, file: !162, line: 1052, column: 7)
!3435 = !DILocation(line: 1052, column: 7, scope: !696)
!3436 = !DILocation(line: 1053, column: 5, scope: !3434)
!3437 = !DILocation(line: 1055, column: 37, scope: !696)
!3438 = !DILocation(line: 1055, column: 4, scope: !696)
!3439 = !DILocation(line: 1055, column: 12, scope: !696)
!3440 = !DILocation(line: 1055, column: 35, scope: !696)
!3441 = !DILocation(line: 1056, column: 35, scope: !696)
!3442 = !DILocation(line: 1056, column: 4, scope: !696)
!3443 = !DILocation(line: 1056, column: 12, scope: !696)
!3444 = !DILocation(line: 1056, column: 33, scope: !696)
!3445 = !DILocation(line: 1057, column: 38, scope: !696)
!3446 = !DILocation(line: 1057, column: 4, scope: !696)
!3447 = !DILocation(line: 1057, column: 12, scope: !696)
!3448 = !DILocation(line: 1057, column: 36, scope: !696)
!3449 = !DILocation(line: 1058, column: 46, scope: !696)
!3450 = !DILocation(line: 1058, column: 4, scope: !696)
!3451 = !DILocation(line: 1058, column: 12, scope: !696)
!3452 = !DILocation(line: 1058, column: 44, scope: !696)
!3453 = !DILocation(line: 1059, column: 32, scope: !696)
!3454 = !DILocation(line: 1059, column: 4, scope: !696)
!3455 = !DILocation(line: 1059, column: 12, scope: !696)
!3456 = !DILocation(line: 1059, column: 30, scope: !696)
!3457 = !DILocation(line: 1060, column: 42, scope: !696)
!3458 = !DILocation(line: 1060, column: 4, scope: !696)
!3459 = !DILocation(line: 1060, column: 12, scope: !696)
!3460 = !DILocation(line: 1060, column: 40, scope: !696)
!3461 = !DILocation(line: 1061, column: 40, scope: !696)
!3462 = !DILocation(line: 1061, column: 4, scope: !696)
!3463 = !DILocation(line: 1061, column: 12, scope: !696)
!3464 = !DILocation(line: 1061, column: 38, scope: !696)
!3465 = !DILocation(line: 1062, column: 32, scope: !696)
!3466 = !DILocation(line: 1062, column: 4, scope: !696)
!3467 = !DILocation(line: 1062, column: 12, scope: !696)
!3468 = !DILocation(line: 1062, column: 30, scope: !696)
!3469 = !DILocation(line: 1063, column: 43, scope: !696)
!3470 = !DILocation(line: 1063, column: 4, scope: !696)
!3471 = !DILocation(line: 1063, column: 12, scope: !696)
!3472 = !DILocation(line: 1063, column: 41, scope: !696)
!3473 = !DILocation(line: 1064, column: 37, scope: !696)
!3474 = !DILocation(line: 1064, column: 4, scope: !696)
!3475 = !DILocation(line: 1064, column: 12, scope: !696)
!3476 = !DILocation(line: 1064, column: 35, scope: !696)
!3477 = !DILocation(line: 1065, column: 43, scope: !696)
!3478 = !DILocation(line: 1065, column: 4, scope: !696)
!3479 = !DILocation(line: 1065, column: 12, scope: !696)
!3480 = !DILocation(line: 1065, column: 41, scope: !696)
!3481 = !DILocation(line: 1066, column: 41, scope: !696)
!3482 = !DILocation(line: 1066, column: 4, scope: !696)
!3483 = !DILocation(line: 1066, column: 12, scope: !696)
!3484 = !DILocation(line: 1066, column: 39, scope: !696)
!3485 = !DILocation(line: 1067, column: 38, scope: !696)
!3486 = !DILocation(line: 1067, column: 4, scope: !696)
!3487 = !DILocation(line: 1067, column: 12, scope: !696)
!3488 = !DILocation(line: 1067, column: 36, scope: !696)
!3489 = !DILocation(line: 1068, column: 42, scope: !696)
!3490 = !DILocation(line: 1068, column: 4, scope: !696)
!3491 = !DILocation(line: 1068, column: 12, scope: !696)
!3492 = !DILocation(line: 1068, column: 40, scope: !696)
!3493 = !DILocation(line: 1069, column: 38, scope: !696)
!3494 = !DILocation(line: 1069, column: 4, scope: !696)
!3495 = !DILocation(line: 1069, column: 12, scope: !696)
!3496 = !DILocation(line: 1069, column: 36, scope: !696)
!3497 = !DILocation(line: 1070, column: 40, scope: !696)
!3498 = !DILocation(line: 1070, column: 4, scope: !696)
!3499 = !DILocation(line: 1070, column: 12, scope: !696)
!3500 = !DILocation(line: 1070, column: 38, scope: !696)
!3501 = !DILocation(line: 1071, column: 36, scope: !696)
!3502 = !DILocation(line: 1071, column: 4, scope: !696)
!3503 = !DILocation(line: 1071, column: 12, scope: !696)
!3504 = !DILocation(line: 1071, column: 34, scope: !696)
!3505 = !DILocation(line: 1072, column: 36, scope: !696)
!3506 = !DILocation(line: 1072, column: 4, scope: !696)
!3507 = !DILocation(line: 1072, column: 12, scope: !696)
!3508 = !DILocation(line: 1072, column: 34, scope: !696)
!3509 = !DILocation(line: 1073, column: 35, scope: !696)
!3510 = !DILocation(line: 1073, column: 4, scope: !696)
!3511 = !DILocation(line: 1073, column: 12, scope: !696)
!3512 = !DILocation(line: 1073, column: 33, scope: !696)
!3513 = !DILocation(line: 1074, column: 32, scope: !696)
!3514 = !DILocation(line: 1074, column: 4, scope: !696)
!3515 = !DILocation(line: 1074, column: 12, scope: !696)
!3516 = !DILocation(line: 1074, column: 30, scope: !696)
!3517 = !DILocation(line: 1075, column: 33, scope: !696)
!3518 = !DILocation(line: 1075, column: 4, scope: !696)
!3519 = !DILocation(line: 1075, column: 12, scope: !696)
!3520 = !DILocation(line: 1075, column: 31, scope: !696)
!3521 = !DILocation(line: 1076, column: 26, scope: !696)
!3522 = !DILocation(line: 1076, column: 4, scope: !696)
!3523 = !DILocation(line: 1076, column: 12, scope: !696)
!3524 = !DILocation(line: 1076, column: 24, scope: !696)
!3525 = !DILocation(line: 1077, column: 7, scope: !3526)
!3526 = distinct !DILexicalBlock(scope: !696, file: !162, line: 1077, column: 7)
!3527 = !DILocation(line: 1077, column: 22, scope: !3526)
!3528 = !DILocation(line: 1077, column: 19, scope: !3526)
!3529 = !DILocation(line: 1077, column: 7, scope: !696)
!3530 = !DILocation(line: 1078, column: 31, scope: !3526)
!3531 = !DILocation(line: 1078, column: 39, scope: !3526)
!3532 = !DILocation(line: 1078, column: 6, scope: !3526)
!3533 = !DILocation(line: 1078, column: 14, scope: !3526)
!3534 = !DILocation(line: 1078, column: 28, scope: !3526)
!3535 = !DILocation(line: 1078, column: 5, scope: !3526)
!3536 = !DILocation(line: 1080, column: 30, scope: !3526)
!3537 = !DILocation(line: 1080, column: 6, scope: !3526)
!3538 = !DILocation(line: 1080, column: 14, scope: !3526)
!3539 = !DILocation(line: 1080, column: 28, scope: !3526)
!3540 = !DILocation(line: 1081, column: 7, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !696, file: !162, line: 1081, column: 7)
!3542 = !DILocation(line: 1081, column: 41, scope: !3541)
!3543 = !DILocation(line: 1081, column: 38, scope: !3541)
!3544 = !DILocation(line: 1081, column: 7, scope: !696)
!3545 = !DILocation(line: 1082, column: 47, scope: !3541)
!3546 = !DILocation(line: 1082, column: 6, scope: !3541)
!3547 = !DILocation(line: 1082, column: 14, scope: !3541)
!3548 = !DILocation(line: 1082, column: 45, scope: !3541)
!3549 = !DILocation(line: 1082, column: 5, scope: !3541)
!3550 = !DILocation(line: 1083, column: 47, scope: !696)
!3551 = !DILocation(line: 1083, column: 4, scope: !696)
!3552 = !DILocation(line: 1083, column: 12, scope: !696)
!3553 = !DILocation(line: 1083, column: 45, scope: !696)
!3554 = !DILocation(line: 1084, column: 29, scope: !696)
!3555 = !DILocation(line: 1084, column: 4, scope: !696)
!3556 = !DILocation(line: 1084, column: 12, scope: !696)
!3557 = !DILocation(line: 1084, column: 27, scope: !696)
!3558 = !DILocation(line: 1085, column: 34, scope: !696)
!3559 = !DILocation(line: 1085, column: 4, scope: !696)
!3560 = !DILocation(line: 1085, column: 12, scope: !696)
!3561 = !DILocation(line: 1085, column: 32, scope: !696)
!3562 = !DILocation(line: 1086, column: 30, scope: !696)
!3563 = !DILocation(line: 1086, column: 4, scope: !696)
!3564 = !DILocation(line: 1086, column: 12, scope: !696)
!3565 = !DILocation(line: 1086, column: 28, scope: !696)
!3566 = !DILocation(line: 1088, column: 36, scope: !696)
!3567 = !DILocation(line: 1088, column: 4, scope: !696)
!3568 = !DILocation(line: 1088, column: 12, scope: !696)
!3569 = !DILocation(line: 1088, column: 34, scope: !696)
!3570 = !DILocation(line: 1089, column: 43, scope: !696)
!3571 = !DILocation(line: 1089, column: 4, scope: !696)
!3572 = !DILocation(line: 1089, column: 12, scope: !696)
!3573 = !DILocation(line: 1089, column: 27, scope: !696)
!3574 = !DILocation(line: 1089, column: 41, scope: !696)
!3575 = !DILocation(line: 1090, column: 7, scope: !3576)
!3576 = distinct !DILexicalBlock(scope: !696, file: !162, line: 1090, column: 7)
!3577 = !DILocation(line: 1090, column: 7, scope: !696)
!3578 = !DILocation(line: 1092, column: 18, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3580, file: !162, line: 1092, column: 9)
!3580 = distinct !DILexicalBlock(scope: !3576, file: !162, line: 1090, column: 16)
!3581 = !DILocation(line: 1092, column: 30, scope: !3579)
!3582 = !DILocation(line: 1092, column: 38, scope: !3579)
!3583 = !DILocation(line: 1092, column: 46, scope: !3579)
!3584 = !DILocation(line: 1092, column: 55, scope: !3579)
!3585 = !DILocation(line: 1092, column: 63, scope: !3579)
!3586 = !DILocation(line: 1092, column: 10, scope: !3579)
!3587 = !DILocation(line: 1093, column: 7, scope: !3579)
!3588 = !DILocation(line: 1093, column: 22, scope: !3589)
!3589 = !DILexicalBlockFile(scope: !3579, file: !162, discriminator: 1)
!3590 = !DILocation(line: 1093, column: 30, scope: !3579)
!3591 = !DILocation(line: 1093, column: 11, scope: !3579)
!3592 = !DILocation(line: 1092, column: 9, scope: !3580)
!3593 = !DILocation(line: 1094, column: 30, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3579, file: !162, line: 1093, column: 40)
!3595 = !DILocation(line: 1094, column: 7, scope: !3594)
!3596 = !DILocation(line: 1095, column: 7, scope: !3594)
!3597 = !DILocation(line: 1097, column: 6, scope: !3580)
!3598 = !DILocation(line: 1097, column: 14, scope: !3580)
!3599 = !DILocation(line: 1097, column: 27, scope: !3580)
!3600 = !DILocation(line: 1099, column: 3, scope: !3580)
!3601 = !DILocation(line: 1108, column: 6, scope: !3602)
!3602 = distinct !DILexicalBlock(scope: !3576, file: !162, line: 1100, column: 8)
!3603 = !DILocation(line: 1108, column: 14, scope: !3602)
!3604 = !DILocation(line: 1108, column: 31, scope: !3602)
!3605 = !DILocation(line: 1109, column: 48, scope: !3602)
!3606 = !DILocation(line: 1109, column: 56, scope: !3602)
!3607 = !DILocation(line: 1109, column: 5, scope: !3602)
!3608 = !DILocation(line: 1110, column: 6, scope: !3602)
!3609 = !DILocation(line: 1110, column: 14, scope: !3602)
!3610 = !DILocation(line: 1110, column: 27, scope: !3602)
!3611 = !DILocation(line: 1113, column: 10, scope: !696)
!3612 = !DILocation(line: 1113, column: 3, scope: !696)
!3613 = !DILocation(line: 1114, column: 1, scope: !696)
!3614 = !DILocation(line: 5751, column: 20, scope: !2144)
!3615 = !DILocation(line: 5751, column: 36, scope: !2144)
!3616 = !DILocation(line: 5751, column: 55, scope: !2144)
!3617 = !DILocation(line: 5751, column: 96, scope: !2144)
!3618 = !DILocation(line: 5753, column: 3, scope: !2144)
!3619 = !DILocation(line: 5753, column: 19, scope: !2144)
!3620 = !DILocation(line: 5757, column: 30, scope: !2144)
!3621 = !DILocation(line: 5757, column: 38, scope: !2144)
!3622 = !DILocation(line: 5757, column: 3, scope: !2144)
!3623 = !DILocation(line: 5758, column: 3, scope: !2144)
!3624 = !DILocation(line: 5759, column: 5, scope: !2156)
!3625 = !DILocation(line: 5759, column: 21, scope: !2156)
!3626 = !DILocation(line: 5760, column: 5, scope: !2156)
!3627 = !DILocation(line: 5760, column: 19, scope: !2156)
!3628 = !DILocation(line: 5760, column: 36, scope: !2156)
!3629 = !DILocation(line: 5760, column: 26, scope: !2156)
!3630 = !DILocation(line: 5761, column: 10, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !2156, file: !162, line: 5761, column: 9)
!3632 = !DILocation(line: 5761, column: 9, scope: !2156)
!3633 = !DILocation(line: 5762, column: 7, scope: !3631)
!3634 = !DILocation(line: 5763, column: 29, scope: !2156)
!3635 = !DILocation(line: 5763, column: 37, scope: !2156)
!3636 = !DILocation(line: 5763, column: 44, scope: !2156)
!3637 = !DILocation(line: 5763, column: 50, scope: !2156)
!3638 = !{!3111, !2290, i64 0}
!3639 = !DILocation(line: 5763, column: 12, scope: !2156)
!3640 = !DILocation(line: 5763, column: 10, scope: !2156)
!3641 = !DILocation(line: 5764, column: 10, scope: !3642)
!3642 = distinct !DILexicalBlock(scope: !2156, file: !162, line: 5764, column: 9)
!3643 = !DILocation(line: 5764, column: 9, scope: !2156)
!3644 = !DILocation(line: 5765, column: 7, scope: !3642)
!3645 = !DILocation(line: 5766, column: 17, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !2156, file: !162, line: 5766, column: 9)
!3647 = !DILocation(line: 5766, column: 30, scope: !3646)
!3648 = !DILocation(line: 5766, column: 38, scope: !3646)
!3649 = !DILocation(line: 5766, column: 49, scope: !3646)
!3650 = !DILocation(line: 5766, column: 10, scope: !3646)
!3651 = !DILocation(line: 5766, column: 9, scope: !2156)
!3652 = !DILocation(line: 5767, column: 7, scope: !3646)
!3653 = !DILocation(line: 5768, column: 3, scope: !2157)
!3654 = !DILocation(line: 5768, column: 3, scope: !3655)
!3655 = !DILexicalBlockFile(scope: !2157, file: !162, discriminator: 1)
!3656 = !DILocation(line: 5758, column: 3, scope: !2157)
!3657 = !DILocation(line: 5770, column: 30, scope: !2144)
!3658 = !DILocation(line: 5770, column: 38, scope: !2144)
!3659 = !DILocation(line: 5770, column: 3, scope: !2144)
!3660 = !DILocation(line: 5774, column: 3, scope: !2144)
!3661 = !DILocation(line: 5775, column: 5, scope: !2163)
!3662 = !DILocation(line: 5775, column: 19, scope: !2163)
!3663 = !DILocation(line: 5776, column: 5, scope: !2163)
!3664 = !DILocation(line: 5776, column: 21, scope: !2163)
!3665 = !DILocation(line: 5777, column: 5, scope: !2163)
!3666 = !DILocation(line: 5777, column: 25, scope: !2163)
!3667 = !DILocation(line: 5777, column: 48, scope: !2163)
!3668 = !DILocation(line: 5777, column: 32, scope: !2163)
!3669 = !DILocation(line: 5779, column: 10, scope: !3670)
!3670 = distinct !DILexicalBlock(scope: !2163, file: !162, line: 5779, column: 9)
!3671 = !DILocation(line: 5779, column: 9, scope: !2163)
!3672 = !DILocation(line: 5780, column: 7, scope: !3670)
!3673 = !DILocation(line: 5782, column: 15, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !2163, file: !162, line: 5782, column: 9)
!3675 = !DILocation(line: 5782, column: 23, scope: !3674)
!3676 = !DILocation(line: 5782, column: 31, scope: !3674)
!3677 = !DILocation(line: 5782, column: 41, scope: !3674)
!3678 = !DILocation(line: 5782, column: 49, scope: !3674)
!3679 = !DILocation(line: 5782, column: 57, scope: !3674)
!3680 = !DILocation(line: 5782, column: 35, scope: !3674)
!3681 = !DILocation(line: 5782, column: 61, scope: !3674)
!3682 = !DILocation(line: 5782, column: 76, scope: !3683)
!3683 = !DILexicalBlockFile(scope: !3674, file: !162, discriminator: 1)
!3684 = !DILocation(line: 5782, column: 84, scope: !3674)
!3685 = !DILocation(line: 5782, column: 65, scope: !3674)
!3686 = !DILocation(line: 5782, column: 9, scope: !2163)
!3687 = !DILocation(line: 5782, column: 11, scope: !3688)
!3688 = !DILexicalBlockFile(scope: !3674, file: !162, discriminator: 4)
!3689 = !DILocation(line: 5782, column: 105, scope: !3690)
!3690 = !DILexicalBlockFile(scope: !3691, file: !162, discriminator: 3)
!3691 = !DILexicalBlockFile(scope: !3674, file: !162, discriminator: 2)
!3692 = !DILocation(line: 5782, column: 113, scope: !3674)
!3693 = !DILocation(line: 5782, column: 121, scope: !3674)
!3694 = !DILocation(line: 5782, column: 125, scope: !3674)
!3695 = !DILocation(line: 5782, column: 128, scope: !3674)
!3696 = !DILocation(line: 5783, column: 7, scope: !3674)
!3697 = !DILocation(line: 5784, column: 29, scope: !2163)
!3698 = !DILocation(line: 5784, column: 37, scope: !2163)
!3699 = !DILocation(line: 5784, column: 44, scope: !2163)
!3700 = !DILocation(line: 5784, column: 50, scope: !2163)
!3701 = !{!3702, !2290, i64 0}
!3702 = !{!"attribute_id", !2290, i64 0, !2290, i64 8, !2291, i64 16, !2291, i64 17}
!3703 = !DILocation(line: 5784, column: 12, scope: !2163)
!3704 = !DILocation(line: 5784, column: 10, scope: !2163)
!3705 = !DILocation(line: 5785, column: 10, scope: !3706)
!3706 = distinct !DILexicalBlock(scope: !2163, file: !162, line: 5785, column: 9)
!3707 = !DILocation(line: 5785, column: 9, scope: !2163)
!3708 = !DILocation(line: 5786, column: 7, scope: !3706)
!3709 = !DILocation(line: 5787, column: 5, scope: !2163)
!3710 = !DILocation(line: 5788, column: 35, scope: !2163)
!3711 = !DILocation(line: 5788, column: 48, scope: !2163)
!3712 = !DILocation(line: 5788, column: 56, scope: !2163)
!3713 = !DILocation(line: 5788, column: 71, scope: !2163)
!3714 = !DILocation(line: 5788, column: 28, scope: !2163)
!3715 = !DILocation(line: 5788, column: 12, scope: !2163)
!3716 = !DILocation(line: 5788, column: 10, scope: !2163)
!3717 = !DILocation(line: 5790, column: 10, scope: !3718)
!3718 = distinct !DILexicalBlock(scope: !2163, file: !162, line: 5790, column: 9)
!3719 = !DILocation(line: 5790, column: 9, scope: !2163)
!3720 = !DILocation(line: 5791, column: 7, scope: !3718)
!3721 = !DILocation(line: 5792, column: 28, scope: !2163)
!3722 = !DILocation(line: 5792, column: 34, scope: !2163)
!3723 = !{!3702, !2291, i64 16}
!3724 = !DILocation(line: 5792, column: 5, scope: !2163)
!3725 = !DILocation(line: 5792, column: 11, scope: !2163)
!3726 = !DILocation(line: 5792, column: 26, scope: !2163)
!3727 = !DILocation(line: 5793, column: 9, scope: !3728)
!3728 = distinct !DILexicalBlock(scope: !2163, file: !162, line: 5793, column: 9)
!3729 = !DILocation(line: 5793, column: 15, scope: !3728)
!3730 = !{!3702, !2290, i64 8}
!3731 = !DILocation(line: 5793, column: 9, scope: !2163)
!3732 = !DILocation(line: 5794, column: 21, scope: !3733)
!3733 = distinct !DILexicalBlock(scope: !3728, file: !162, line: 5793, column: 23)
!3734 = !DILocation(line: 5794, column: 27, scope: !3733)
!3735 = !{!3702, !2291, i64 17}
!3736 = !DILocation(line: 5794, column: 7, scope: !3733)
!3737 = !DILocation(line: 5794, column: 13, scope: !3733)
!3738 = !DILocation(line: 5794, column: 19, scope: !3733)
!3739 = !DILocation(line: 5795, column: 11, scope: !3740)
!3740 = distinct !DILexicalBlock(scope: !3733, file: !162, line: 5795, column: 11)
!3741 = !DILocation(line: 5795, column: 17, scope: !3740)
!3742 = !DILocation(line: 5795, column: 28, scope: !3740)
!3743 = !DILocation(line: 5795, column: 36, scope: !3740)
!3744 = !DILocation(line: 5795, column: 24, scope: !3740)
!3745 = !DILocation(line: 5795, column: 11, scope: !3733)
!3746 = !DILocation(line: 5796, column: 25, scope: !3740)
!3747 = !DILocation(line: 5796, column: 33, scope: !3740)
!3748 = !DILocation(line: 5796, column: 9, scope: !3740)
!3749 = !DILocation(line: 5796, column: 15, scope: !3740)
!3750 = !DILocation(line: 5796, column: 22, scope: !3740)
!3751 = !DILocation(line: 5798, column: 41, scope: !3740)
!3752 = !DILocation(line: 5798, column: 54, scope: !3740)
!3753 = !DILocation(line: 5798, column: 62, scope: !3740)
!3754 = !DILocation(line: 5799, column: 41, scope: !3740)
!3755 = !DILocation(line: 5799, column: 47, scope: !3740)
!3756 = !DILocation(line: 5799, column: 55, scope: !3740)
!3757 = !DILocation(line: 5798, column: 34, scope: !3740)
!3758 = !DILocation(line: 5798, column: 24, scope: !3740)
!3759 = !DILocation(line: 5798, column: 9, scope: !3740)
!3760 = !DILocation(line: 5798, column: 15, scope: !3740)
!3761 = !DILocation(line: 5798, column: 22, scope: !3740)
!3762 = !DILocation(line: 5800, column: 5, scope: !3733)
!3763 = !DILocation(line: 5801, column: 3, scope: !2164)
!3764 = !DILocation(line: 5801, column: 3, scope: !3765)
!3765 = !DILexicalBlockFile(scope: !2164, file: !162, discriminator: 1)
!3766 = !DILocation(line: 5774, column: 3, scope: !2164)
!3767 = !DILocation(line: 5805, column: 30, scope: !2144)
!3768 = !DILocation(line: 5805, column: 38, scope: !2144)
!3769 = !DILocation(line: 5805, column: 3, scope: !2144)
!3770 = !DILocation(line: 5807, column: 3, scope: !2144)
!3771 = !DILocation(line: 5808, column: 5, scope: !2169)
!3772 = !DILocation(line: 5808, column: 9, scope: !2169)
!3773 = !DILocation(line: 5809, column: 5, scope: !2169)
!3774 = !DILocation(line: 5809, column: 19, scope: !2169)
!3775 = !DILocation(line: 5810, column: 5, scope: !2169)
!3776 = !DILocation(line: 5810, column: 21, scope: !2169)
!3777 = !DILocation(line: 5811, column: 5, scope: !2169)
!3778 = !DILocation(line: 5811, column: 25, scope: !2169)
!3779 = !DILocation(line: 5811, column: 48, scope: !2169)
!3780 = !DILocation(line: 5811, column: 32, scope: !2169)
!3781 = !DILocation(line: 5812, column: 10, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !2169, file: !162, line: 5812, column: 9)
!3783 = !DILocation(line: 5812, column: 9, scope: !2169)
!3784 = !DILocation(line: 5813, column: 7, scope: !3782)
!3785 = !DILocation(line: 5814, column: 29, scope: !2169)
!3786 = !DILocation(line: 5814, column: 37, scope: !2169)
!3787 = !DILocation(line: 5814, column: 44, scope: !2169)
!3788 = !DILocation(line: 5814, column: 50, scope: !2169)
!3789 = !{!3090, !2290, i64 0}
!3790 = !DILocation(line: 5814, column: 12, scope: !2169)
!3791 = !DILocation(line: 5814, column: 10, scope: !2169)
!3792 = !DILocation(line: 5815, column: 10, scope: !3793)
!3793 = distinct !DILexicalBlock(scope: !2169, file: !162, line: 5815, column: 9)
!3794 = !DILocation(line: 5815, column: 9, scope: !2169)
!3795 = !DILocation(line: 5816, column: 7, scope: !3793)
!3796 = !DILocation(line: 5817, column: 35, scope: !2169)
!3797 = !DILocation(line: 5817, column: 48, scope: !2169)
!3798 = !DILocation(line: 5817, column: 56, scope: !2169)
!3799 = !DILocation(line: 5817, column: 71, scope: !2169)
!3800 = !DILocation(line: 5817, column: 28, scope: !2169)
!3801 = !DILocation(line: 5817, column: 12, scope: !2169)
!3802 = !DILocation(line: 5817, column: 10, scope: !2169)
!3803 = !DILocation(line: 5819, column: 10, scope: !3804)
!3804 = distinct !DILexicalBlock(scope: !2169, file: !162, line: 5819, column: 9)
!3805 = !DILocation(line: 5819, column: 9, scope: !2169)
!3806 = !DILocation(line: 5820, column: 7, scope: !3804)
!3807 = !DILocation(line: 5821, column: 9, scope: !3808)
!3808 = distinct !DILexicalBlock(scope: !2169, file: !162, line: 5821, column: 9)
!3809 = !DILocation(line: 5821, column: 15, scope: !3808)
!3810 = !{!3090, !2400, i64 24}
!3811 = !DILocation(line: 5821, column: 9, scope: !2169)
!3812 = !DILocation(line: 5823, column: 11, scope: !3813)
!3813 = distinct !DILexicalBlock(scope: !3808, file: !162, line: 5821, column: 29)
!3814 = !DILocation(line: 5823, column: 15, scope: !3813)
!3815 = !DILocation(line: 5823, column: 26, scope: !3813)
!3816 = !DILocation(line: 5823, column: 32, scope: !3813)
!3817 = !DILocation(line: 5823, column: 45, scope: !3813)
!3818 = !DILocation(line: 5822, column: 27, scope: !3813)
!3819 = !DILocation(line: 5822, column: 7, scope: !3813)
!3820 = !DILocation(line: 5822, column: 13, scope: !3813)
!3821 = !DILocation(line: 5822, column: 25, scope: !3813)
!3822 = !DILocation(line: 5824, column: 12, scope: !3823)
!3823 = distinct !DILexicalBlock(scope: !3813, file: !162, line: 5824, column: 11)
!3824 = !DILocation(line: 5824, column: 18, scope: !3823)
!3825 = !DILocation(line: 5824, column: 11, scope: !3813)
!3826 = !DILocation(line: 5825, column: 9, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !3823, file: !162, line: 5824, column: 31)
!3828 = !DILocation(line: 5825, column: 13, scope: !3827)
!3829 = !DILocation(line: 5825, column: 22, scope: !3827)
!3830 = !DILocation(line: 5826, column: 9, scope: !3827)
!3831 = !DILocation(line: 5828, column: 5, scope: !3813)
!3832 = !DILocation(line: 5829, column: 9, scope: !3833)
!3833 = distinct !DILexicalBlock(scope: !2169, file: !162, line: 5829, column: 9)
!3834 = !DILocation(line: 5829, column: 15, scope: !3833)
!3835 = !{!3090, !2290, i64 16}
!3836 = !DILocation(line: 5829, column: 9, scope: !2169)
!3837 = !DILocation(line: 5831, column: 18, scope: !3833)
!3838 = !DILocation(line: 5831, column: 31, scope: !3833)
!3839 = !DILocation(line: 5831, column: 39, scope: !3833)
!3840 = !DILocation(line: 5831, column: 54, scope: !3833)
!3841 = !DILocation(line: 5831, column: 60, scope: !3833)
!3842 = !DILocation(line: 5831, column: 67, scope: !3833)
!3843 = !DILocation(line: 5831, column: 11, scope: !3833)
!3844 = !DILocation(line: 5830, column: 21, scope: !3833)
!3845 = !DILocation(line: 5830, column: 7, scope: !3833)
!3846 = !DILocation(line: 5830, column: 13, scope: !3833)
!3847 = !DILocation(line: 5830, column: 19, scope: !3833)
!3848 = !DILocation(line: 5832, column: 51, scope: !2169)
!3849 = !DILocation(line: 5832, column: 57, scope: !2169)
!3850 = !DILocation(line: 5832, column: 30, scope: !2169)
!3851 = !DILocation(line: 5832, column: 36, scope: !2169)
!3852 = !DILocation(line: 5832, column: 49, scope: !2169)
!3853 = !DILocation(line: 5832, column: 5, scope: !2169)
!3854 = !DILocation(line: 5832, column: 11, scope: !2169)
!3855 = !DILocation(line: 5832, column: 28, scope: !2169)
!3856 = !DILocation(line: 5833, column: 9, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !2169, file: !162, line: 5833, column: 9)
!3858 = !DILocation(line: 5833, column: 15, scope: !3857)
!3859 = !{!3090, !2290, i64 8}
!3860 = !DILocation(line: 5833, column: 9, scope: !2169)
!3861 = !DILocation(line: 5834, column: 39, scope: !3857)
!3862 = !DILocation(line: 5834, column: 52, scope: !3857)
!3863 = !DILocation(line: 5834, column: 60, scope: !3857)
!3864 = !DILocation(line: 5835, column: 39, scope: !3857)
!3865 = !DILocation(line: 5835, column: 45, scope: !3857)
!3866 = !DILocation(line: 5835, column: 53, scope: !3857)
!3867 = !DILocation(line: 5834, column: 32, scope: !3857)
!3868 = !DILocation(line: 5834, column: 22, scope: !3857)
!3869 = !DILocation(line: 5834, column: 7, scope: !3857)
!3870 = !DILocation(line: 5834, column: 13, scope: !3857)
!3871 = !DILocation(line: 5834, column: 20, scope: !3857)
!3872 = !DILocation(line: 5836, column: 12, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !2169, file: !162, line: 5836, column: 5)
!3874 = !DILocation(line: 5836, column: 10, scope: !3873)
!3875 = !DILocation(line: 5836, column: 17, scope: !3876)
!3876 = !DILexicalBlockFile(scope: !3877, file: !162, discriminator: 2)
!3877 = !DILexicalBlockFile(scope: !3878, file: !162, discriminator: 1)
!3878 = distinct !DILexicalBlock(scope: !3873, file: !162, line: 5836, column: 5)
!3879 = !DILocation(line: 5836, column: 21, scope: !3878)
!3880 = !DILocation(line: 5836, column: 27, scope: !3878)
!3881 = !DILocation(line: 5836, column: 19, scope: !3878)
!3882 = !DILocation(line: 5836, column: 5, scope: !3873)
!3883 = !DILocation(line: 5838, column: 18, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3878, file: !162, line: 5836, column: 46)
!3885 = !DILocation(line: 5838, column: 31, scope: !3884)
!3886 = !DILocation(line: 5838, column: 39, scope: !3884)
!3887 = !DILocation(line: 5838, column: 72, scope: !3884)
!3888 = !DILocation(line: 5838, column: 54, scope: !3884)
!3889 = !DILocation(line: 5838, column: 60, scope: !3884)
!3890 = !DILocation(line: 5838, column: 75, scope: !3884)
!3891 = !{!3892, !2290, i64 0}
!3892 = !{!"", !2290, i64 0, !2291, i64 8, !2290, i64 16}
!3893 = !DILocation(line: 5838, column: 79, scope: !3884)
!3894 = !DILocation(line: 5838, column: 11, scope: !3884)
!3895 = !DILocation(line: 5837, column: 33, scope: !3884)
!3896 = !DILocation(line: 5837, column: 25, scope: !3884)
!3897 = !DILocation(line: 5837, column: 7, scope: !3884)
!3898 = !DILocation(line: 5837, column: 13, scope: !3884)
!3899 = !DILocation(line: 5837, column: 28, scope: !3884)
!3900 = !DILocation(line: 5837, column: 31, scope: !3884)
!3901 = !DILocation(line: 5839, column: 56, scope: !3884)
!3902 = !DILocation(line: 5839, column: 38, scope: !3884)
!3903 = !DILocation(line: 5839, column: 44, scope: !3884)
!3904 = !DILocation(line: 5839, column: 59, scope: !3884)
!3905 = !{!3892, !2291, i64 8}
!3906 = !DILocation(line: 5839, column: 25, scope: !3884)
!3907 = !DILocation(line: 5839, column: 7, scope: !3884)
!3908 = !DILocation(line: 5839, column: 13, scope: !3884)
!3909 = !DILocation(line: 5839, column: 28, scope: !3884)
!3910 = !DILocation(line: 5839, column: 36, scope: !3884)
!3911 = !DILocation(line: 5840, column: 29, scope: !3912)
!3912 = distinct !DILexicalBlock(scope: !3884, file: !162, line: 5840, column: 11)
!3913 = !DILocation(line: 5840, column: 11, scope: !3912)
!3914 = !DILocation(line: 5840, column: 17, scope: !3912)
!3915 = !DILocation(line: 5840, column: 32, scope: !3912)
!3916 = !{!3892, !2290, i64 16}
!3917 = !DILocation(line: 5840, column: 11, scope: !3884)
!3918 = !DILocation(line: 5842, column: 32, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3912, file: !162, line: 5840, column: 39)
!3920 = !DILocation(line: 5842, column: 40, scope: !3919)
!3921 = !DILocation(line: 5842, column: 65, scope: !3919)
!3922 = !DILocation(line: 5842, column: 47, scope: !3919)
!3923 = !DILocation(line: 5842, column: 53, scope: !3919)
!3924 = !DILocation(line: 5842, column: 68, scope: !3919)
!3925 = !DILocation(line: 5842, column: 15, scope: !3919)
!3926 = !DILocation(line: 5841, column: 27, scope: !3919)
!3927 = !DILocation(line: 5841, column: 9, scope: !3919)
!3928 = !DILocation(line: 5841, column: 15, scope: !3919)
!3929 = !DILocation(line: 5841, column: 30, scope: !3919)
!3930 = !DILocation(line: 5842, column: 13, scope: !3919)
!3931 = !DILocation(line: 5843, column: 32, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3919, file: !162, line: 5843, column: 13)
!3933 = !DILocation(line: 5843, column: 14, scope: !3932)
!3934 = !DILocation(line: 5843, column: 20, scope: !3932)
!3935 = !DILocation(line: 5843, column: 35, scope: !3932)
!3936 = !DILocation(line: 5843, column: 13, scope: !3919)
!3937 = !DILocation(line: 5844, column: 11, scope: !3932)
!3938 = !DILocation(line: 5845, column: 7, scope: !3919)
!3939 = !DILocation(line: 5847, column: 27, scope: !3912)
!3940 = !DILocation(line: 5847, column: 9, scope: !3912)
!3941 = !DILocation(line: 5847, column: 15, scope: !3912)
!3942 = !DILocation(line: 5847, column: 30, scope: !3912)
!3943 = !DILocation(line: 5847, column: 36, scope: !3912)
!3944 = !DILocation(line: 5848, column: 5, scope: !3884)
!3945 = !DILocation(line: 5836, column: 42, scope: !3878)
!3946 = !DILocation(line: 5836, column: 5, scope: !3878)
!3947 = !DILocation(line: 5849, column: 3, scope: !2170)
!3948 = !DILocation(line: 5849, column: 3, scope: !3949)
!3949 = !DILexicalBlockFile(scope: !2170, file: !162, discriminator: 1)
!3950 = !DILocation(line: 5807, column: 3, scope: !2170)
!3951 = !DILocation(line: 5852, column: 24, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !2144, file: !162, line: 5852, column: 7)
!3953 = !DILocation(line: 5853, column: 26, scope: !3952)
!3954 = !DILocation(line: 5853, column: 34, scope: !3952)
!3955 = !DILocation(line: 5854, column: 26, scope: !3952)
!3956 = !DILocation(line: 5854, column: 34, scope: !3952)
!3957 = !DILocation(line: 5855, column: 26, scope: !3952)
!3958 = !DILocation(line: 5855, column: 34, scope: !3952)
!3959 = !DILocation(line: 5852, column: 8, scope: !3952)
!3960 = !DILocation(line: 5852, column: 7, scope: !2144)
!3961 = !DILocation(line: 5856, column: 7, scope: !3952)
!3962 = !DILocation(line: 5859, column: 24, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !2144, file: !162, line: 5859, column: 7)
!3964 = !DILocation(line: 5860, column: 26, scope: !3963)
!3965 = !DILocation(line: 5860, column: 34, scope: !3963)
!3966 = !DILocation(line: 5861, column: 26, scope: !3963)
!3967 = !DILocation(line: 5861, column: 34, scope: !3963)
!3968 = !DILocation(line: 5862, column: 26, scope: !3963)
!3969 = !DILocation(line: 5862, column: 34, scope: !3963)
!3970 = !DILocation(line: 5859, column: 8, scope: !3963)
!3971 = !DILocation(line: 5859, column: 7, scope: !2144)
!3972 = !DILocation(line: 5863, column: 7, scope: !3963)
!3973 = !DILocation(line: 5864, column: 29, scope: !2144)
!3974 = !DILocation(line: 5864, column: 37, scope: !2144)
!3975 = !DILocation(line: 5864, column: 3, scope: !2144)
!3976 = !DILocation(line: 5864, column: 11, scope: !2144)
!3977 = !DILocation(line: 5864, column: 27, scope: !2144)
!3978 = !DILocation(line: 5867, column: 28, scope: !2144)
!3979 = !DILocation(line: 5867, column: 36, scope: !2144)
!3980 = !DILocation(line: 5867, column: 3, scope: !2144)
!3981 = !DILocation(line: 5867, column: 11, scope: !2144)
!3982 = !DILocation(line: 5867, column: 26, scope: !2144)
!3983 = !DILocation(line: 5868, column: 32, scope: !2144)
!3984 = !DILocation(line: 5868, column: 40, scope: !2144)
!3985 = !DILocation(line: 5868, column: 3, scope: !2144)
!3986 = !DILocation(line: 5868, column: 11, scope: !2144)
!3987 = !DILocation(line: 5868, column: 30, scope: !2144)
!3988 = !DILocation(line: 5869, column: 24, scope: !2144)
!3989 = !DILocation(line: 5869, column: 32, scope: !2144)
!3990 = !DILocation(line: 5869, column: 3, scope: !2144)
!3991 = !DILocation(line: 5869, column: 11, scope: !2144)
!3992 = !DILocation(line: 5869, column: 22, scope: !2144)
!3993 = !DILocation(line: 5872, column: 23, scope: !2144)
!3994 = !DILocation(line: 5872, column: 31, scope: !2144)
!3995 = !DILocation(line: 5872, column: 3, scope: !2144)
!3996 = !DILocation(line: 5872, column: 11, scope: !2144)
!3997 = !DILocation(line: 5872, column: 21, scope: !2144)
!3998 = !DILocation(line: 5873, column: 22, scope: !2144)
!3999 = !DILocation(line: 5873, column: 30, scope: !2144)
!4000 = !DILocation(line: 5873, column: 3, scope: !2144)
!4001 = !DILocation(line: 5873, column: 11, scope: !2144)
!4002 = !DILocation(line: 5873, column: 20, scope: !2144)
!4003 = !DILocation(line: 5874, column: 30, scope: !2144)
!4004 = !DILocation(line: 5874, column: 38, scope: !2144)
!4005 = !DILocation(line: 5874, column: 3, scope: !2144)
!4006 = !DILocation(line: 5874, column: 11, scope: !2144)
!4007 = !DILocation(line: 5874, column: 28, scope: !2144)
!4008 = !DILocation(line: 5875, column: 23, scope: !2144)
!4009 = !DILocation(line: 5875, column: 31, scope: !2144)
!4010 = !DILocation(line: 5875, column: 3, scope: !2144)
!4011 = !DILocation(line: 5875, column: 11, scope: !2144)
!4012 = !DILocation(line: 5875, column: 21, scope: !2144)
!4013 = !DILocation(line: 5876, column: 24, scope: !2144)
!4014 = !DILocation(line: 5876, column: 32, scope: !2144)
!4015 = !DILocation(line: 5876, column: 3, scope: !2144)
!4016 = !DILocation(line: 5876, column: 11, scope: !2144)
!4017 = !DILocation(line: 5876, column: 22, scope: !2144)
!4018 = !DILocation(line: 5877, column: 24, scope: !2144)
!4019 = !DILocation(line: 5877, column: 32, scope: !2144)
!4020 = !DILocation(line: 5877, column: 3, scope: !2144)
!4021 = !DILocation(line: 5877, column: 11, scope: !2144)
!4022 = !DILocation(line: 5877, column: 22, scope: !2144)
!4023 = !DILocation(line: 5879, column: 3, scope: !2144)
!4024 = !DILocation(line: 5880, column: 1, scope: !2144)
!4025 = !DILocation(line: 5562, column: 23, scope: !2098)
!4026 = !DILocation(line: 5562, column: 47, scope: !2098)
!4027 = !DILocation(line: 5564, column: 3, scope: !2098)
!4028 = !DILocation(line: 5564, column: 15, scope: !2098)
!4029 = !DILocation(line: 5564, column: 22, scope: !2098)
!4030 = !DILocation(line: 5564, column: 30, scope: !2098)
!4031 = !DILocation(line: 5565, column: 3, scope: !2098)
!4032 = !DILocation(line: 5565, column: 19, scope: !2098)
!4033 = !DILocation(line: 5565, column: 23, scope: !2098)
!4034 = !DILocation(line: 5567, column: 3, scope: !2098)
!4035 = !DILocation(line: 5567, column: 11, scope: !4036)
!4036 = !DILexicalBlockFile(scope: !4037, file: !162, discriminator: 2)
!4037 = !DILexicalBlockFile(scope: !2098, file: !162, discriminator: 1)
!4038 = !DILocation(line: 5567, column: 10, scope: !2098)
!4039 = !DILocation(line: 5567, column: 19, scope: !2098)
!4040 = !DILocation(line: 5568, column: 10, scope: !2106)
!4041 = !DILocation(line: 5568, column: 9, scope: !2106)
!4042 = !DILocation(line: 5568, column: 12, scope: !2106)
!4043 = !DILocation(line: 5568, column: 20, scope: !2106)
!4044 = !DILocation(line: 5568, column: 24, scope: !4045)
!4045 = !DILexicalBlockFile(scope: !2106, file: !162, discriminator: 1)
!4046 = !DILocation(line: 5568, column: 23, scope: !2106)
!4047 = !DILocation(line: 5568, column: 26, scope: !2106)
!4048 = !DILocation(line: 5568, column: 9, scope: !2107)
!4049 = !DILocation(line: 5569, column: 7, scope: !2105)
!4050 = !DILocation(line: 5569, column: 15, scope: !2105)
!4051 = !DILocation(line: 5570, column: 17, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !2105, file: !162, line: 5570, column: 11)
!4053 = !DILocation(line: 5570, column: 25, scope: !4052)
!4054 = !DILocation(line: 5570, column: 39, scope: !4052)
!4055 = !DILocation(line: 5570, column: 49, scope: !4052)
!4056 = !DILocation(line: 5570, column: 57, scope: !4052)
!4057 = !DILocation(line: 5570, column: 71, scope: !4052)
!4058 = !DILocation(line: 5570, column: 43, scope: !4052)
!4059 = !DILocation(line: 5570, column: 75, scope: !4052)
!4060 = !DILocation(line: 5570, column: 90, scope: !4061)
!4061 = !DILexicalBlockFile(scope: !4052, file: !162, discriminator: 1)
!4062 = !DILocation(line: 5570, column: 98, scope: !4052)
!4063 = !DILocation(line: 5570, column: 79, scope: !4052)
!4064 = !DILocation(line: 5570, column: 11, scope: !2105)
!4065 = !DILocation(line: 5570, column: 13, scope: !4066)
!4066 = !DILexicalBlockFile(scope: !4052, file: !162, discriminator: 4)
!4067 = !DILocation(line: 5570, column: 125, scope: !4068)
!4068 = !DILexicalBlockFile(scope: !4069, file: !162, discriminator: 3)
!4069 = !DILexicalBlockFile(scope: !4052, file: !162, discriminator: 2)
!4070 = !DILocation(line: 5570, column: 133, scope: !4052)
!4071 = !DILocation(line: 5570, column: 147, scope: !4052)
!4072 = !DILocation(line: 5570, column: 151, scope: !4052)
!4073 = !DILocation(line: 5570, column: 154, scope: !4052)
!4074 = !DILocation(line: 5571, column: 9, scope: !4052)
!4075 = !DILocation(line: 5572, column: 28, scope: !2105)
!4076 = !DILocation(line: 5572, column: 37, scope: !2105)
!4077 = !DILocation(line: 5572, column: 42, scope: !2105)
!4078 = !DILocation(line: 5572, column: 63, scope: !2105)
!4079 = !DILocation(line: 5572, column: 71, scope: !2105)
!4080 = !DILocation(line: 5572, column: 85, scope: !2105)
!4081 = !DILocation(line: 5572, column: 21, scope: !2105)
!4082 = !DILocation(line: 5572, column: 11, scope: !2105)
!4083 = !DILocation(line: 5572, column: 9, scope: !2105)
!4084 = !DILocation(line: 5573, column: 11, scope: !4085)
!4085 = distinct !DILexicalBlock(scope: !2105, file: !162, line: 5573, column: 11)
!4086 = !DILocation(line: 5573, column: 11, scope: !2105)
!4087 = !DILocation(line: 5574, column: 9, scope: !4085)
!4088 = !DILocation(line: 5574, column: 12, scope: !4085)
!4089 = !DILocation(line: 5574, column: 17, scope: !4085)
!4090 = !{!4091, !2291, i64 56}
!4091 = !{!"", !2290, i64 0, !2290, i64 8, !2400, i64 16, !2400, i64 20, !2290, i64 24, !2290, i64 32, !2290, i64 40, !2290, i64 48, !2291, i64 56, !2291, i64 57, !2291, i64 58}
!4092 = !DILocation(line: 5575, column: 12, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !2105, file: !162, line: 5575, column: 11)
!4094 = !DILocation(line: 5575, column: 11, scope: !4093)
!4095 = !DILocation(line: 5575, column: 14, scope: !4093)
!4096 = !DILocation(line: 5575, column: 11, scope: !2105)
!4097 = !DILocation(line: 5576, column: 10, scope: !4093)
!4098 = !DILocation(line: 5576, column: 9, scope: !4093)
!4099 = !DILocation(line: 5577, column: 17, scope: !2105)
!4100 = !DILocation(line: 5577, column: 15, scope: !2105)
!4101 = !DILocation(line: 5578, column: 42, scope: !2105)
!4102 = !DILocation(line: 5578, column: 50, scope: !2105)
!4103 = !DILocation(line: 5578, column: 64, scope: !2105)
!4104 = !DILocation(line: 5578, column: 11, scope: !2105)
!4105 = !DILocation(line: 5578, column: 19, scope: !2105)
!4106 = !DILocation(line: 5578, column: 33, scope: !2105)
!4107 = !DILocation(line: 5578, column: 37, scope: !2105)
!4108 = !DILocation(line: 5579, column: 5, scope: !2106)
!4109 = !DILocation(line: 5579, column: 5, scope: !4045)
!4110 = !DILocation(line: 5579, column: 5, scope: !2105)
!4111 = !DILocation(line: 5580, column: 15, scope: !2110)
!4112 = !DILocation(line: 5580, column: 14, scope: !2110)
!4113 = !DILocation(line: 5580, column: 17, scope: !2110)
!4114 = !DILocation(line: 5580, column: 14, scope: !2106)
!4115 = !DILocation(line: 5581, column: 7, scope: !2109)
!4116 = !DILocation(line: 5581, column: 15, scope: !2109)
!4117 = !DILocation(line: 5582, column: 15, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !2109, file: !162, line: 5582, column: 11)
!4119 = !DILocation(line: 5582, column: 23, scope: !4118)
!4120 = !DILocation(line: 5582, column: 37, scope: !4118)
!4121 = !DILocation(line: 5582, column: 46, scope: !4118)
!4122 = !DILocation(line: 5582, column: 54, scope: !4118)
!4123 = !DILocation(line: 5582, column: 68, scope: !4118)
!4124 = !DILocation(line: 5582, column: 41, scope: !4118)
!4125 = !DILocation(line: 5582, column: 75, scope: !4118)
!4126 = !DILocation(line: 5582, column: 11, scope: !2109)
!4127 = !DILocation(line: 5583, column: 19, scope: !4118)
!4128 = !DILocation(line: 5583, column: 24, scope: !4118)
!4129 = !DILocation(line: 5583, column: 16, scope: !4118)
!4130 = !DILocation(line: 5583, column: 9, scope: !4118)
!4131 = !DILocation(line: 5585, column: 19, scope: !4132)
!4132 = distinct !DILexicalBlock(scope: !4133, file: !162, line: 5585, column: 13)
!4133 = distinct !DILexicalBlock(scope: !4118, file: !162, line: 5584, column: 12)
!4134 = !DILocation(line: 5585, column: 27, scope: !4132)
!4135 = !DILocation(line: 5585, column: 41, scope: !4132)
!4136 = !DILocation(line: 5585, column: 51, scope: !4132)
!4137 = !DILocation(line: 5585, column: 59, scope: !4132)
!4138 = !DILocation(line: 5585, column: 73, scope: !4132)
!4139 = !DILocation(line: 5585, column: 45, scope: !4132)
!4140 = !DILocation(line: 5585, column: 77, scope: !4132)
!4141 = !DILocation(line: 5585, column: 92, scope: !4142)
!4142 = !DILexicalBlockFile(scope: !4132, file: !162, discriminator: 1)
!4143 = !DILocation(line: 5585, column: 100, scope: !4132)
!4144 = !DILocation(line: 5585, column: 81, scope: !4132)
!4145 = !DILocation(line: 5585, column: 13, scope: !4133)
!4146 = !DILocation(line: 5585, column: 15, scope: !4147)
!4147 = !DILexicalBlockFile(scope: !4132, file: !162, discriminator: 4)
!4148 = !DILocation(line: 5585, column: 127, scope: !4149)
!4149 = !DILexicalBlockFile(scope: !4150, file: !162, discriminator: 3)
!4150 = !DILexicalBlockFile(scope: !4132, file: !162, discriminator: 2)
!4151 = !DILocation(line: 5585, column: 135, scope: !4132)
!4152 = !DILocation(line: 5585, column: 149, scope: !4132)
!4153 = !DILocation(line: 5585, column: 153, scope: !4132)
!4154 = !DILocation(line: 5585, column: 156, scope: !4132)
!4155 = !DILocation(line: 5586, column: 11, scope: !4132)
!4156 = !DILocation(line: 5587, column: 35, scope: !4133)
!4157 = !DILocation(line: 5587, column: 44, scope: !4133)
!4158 = !DILocation(line: 5587, column: 49, scope: !4133)
!4159 = !DILocation(line: 5587, column: 63, scope: !4133)
!4160 = !DILocation(line: 5587, column: 71, scope: !4133)
!4161 = !DILocation(line: 5587, column: 85, scope: !4133)
!4162 = !DILocation(line: 5587, column: 28, scope: !4133)
!4163 = !DILocation(line: 5587, column: 18, scope: !4133)
!4164 = !DILocation(line: 5587, column: 16, scope: !4133)
!4165 = !DILocation(line: 5589, column: 14, scope: !4166)
!4166 = distinct !DILexicalBlock(scope: !4133, file: !162, line: 5589, column: 13)
!4167 = !DILocation(line: 5589, column: 13, scope: !4133)
!4168 = !DILocation(line: 5590, column: 11, scope: !4166)
!4169 = !DILocation(line: 5591, column: 13, scope: !4170)
!4170 = distinct !DILexicalBlock(scope: !4133, file: !162, line: 5591, column: 13)
!4171 = !DILocation(line: 5591, column: 21, scope: !4170)
!4172 = !DILocation(line: 5591, column: 33, scope: !4170)
!4173 = !DILocation(line: 5591, column: 41, scope: !4170)
!4174 = !DILocation(line: 5591, column: 55, scope: !4170)
!4175 = !DILocation(line: 5591, column: 26, scope: !4170)
!4176 = !DILocation(line: 5591, column: 13, scope: !4133)
!4177 = !DILocation(line: 5592, column: 42, scope: !4178)
!4178 = distinct !DILexicalBlock(scope: !4170, file: !162, line: 5591, column: 63)
!4179 = !DILocation(line: 5592, column: 47, scope: !4178)
!4180 = !DILocation(line: 5592, column: 53, scope: !4178)
!4181 = !DILocation(line: 5592, column: 61, scope: !4178)
!4182 = !DILocation(line: 5592, column: 26, scope: !4178)
!4183 = !DILocation(line: 5592, column: 11, scope: !4178)
!4184 = !DILocation(line: 5592, column: 19, scope: !4178)
!4185 = !DILocation(line: 5592, column: 24, scope: !4178)
!4186 = !DILocation(line: 5593, column: 16, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4178, file: !162, line: 5593, column: 15)
!4188 = !DILocation(line: 5593, column: 24, scope: !4187)
!4189 = !DILocation(line: 5593, column: 15, scope: !4178)
!4190 = !DILocation(line: 5594, column: 13, scope: !4187)
!4191 = !DILocation(line: 5595, column: 9, scope: !4178)
!4192 = !DILocation(line: 5596, column: 44, scope: !4133)
!4193 = !DILocation(line: 5596, column: 52, scope: !4133)
!4194 = !DILocation(line: 5596, column: 66, scope: !4133)
!4195 = !DILocation(line: 5596, column: 13, scope: !4133)
!4196 = !DILocation(line: 5596, column: 21, scope: !4133)
!4197 = !DILocation(line: 5596, column: 35, scope: !4133)
!4198 = !DILocation(line: 5596, column: 39, scope: !4133)
!4199 = !DILocation(line: 5598, column: 22, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !2109, file: !162, line: 5598, column: 7)
!4201 = !DILocation(line: 5598, column: 24, scope: !4200)
!4202 = !DILocation(line: 5598, column: 20, scope: !4200)
!4203 = !DILocation(line: 5598, column: 12, scope: !4200)
!4204 = !DILocation(line: 5599, column: 13, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4200, file: !162, line: 5598, column: 7)
!4206 = !DILocation(line: 5599, column: 12, scope: !4205)
!4207 = !DILocation(line: 5599, column: 21, scope: !4205)
!4208 = !DILocation(line: 5599, column: 29, scope: !4205)
!4209 = !DILocation(line: 5599, column: 33, scope: !4210)
!4210 = !DILexicalBlockFile(scope: !4205, file: !162, discriminator: 1)
!4211 = !DILocation(line: 5599, column: 32, scope: !4205)
!4212 = !DILocation(line: 5599, column: 41, scope: !4205)
!4213 = !DILocation(line: 5598, column: 7, scope: !4200)
!4214 = !DILocation(line: 5601, column: 19, scope: !4215)
!4215 = distinct !DILexicalBlock(scope: !4205, file: !162, line: 5601, column: 13)
!4216 = !DILocation(line: 5601, column: 27, scope: !4215)
!4217 = !DILocation(line: 5601, column: 41, scope: !4215)
!4218 = !DILocation(line: 5601, column: 51, scope: !4215)
!4219 = !DILocation(line: 5601, column: 59, scope: !4215)
!4220 = !DILocation(line: 5601, column: 73, scope: !4215)
!4221 = !DILocation(line: 5601, column: 45, scope: !4215)
!4222 = !DILocation(line: 5601, column: 77, scope: !4215)
!4223 = !DILocation(line: 5601, column: 92, scope: !4224)
!4224 = !DILexicalBlockFile(scope: !4215, file: !162, discriminator: 1)
!4225 = !DILocation(line: 5601, column: 100, scope: !4215)
!4226 = !DILocation(line: 5601, column: 81, scope: !4215)
!4227 = !DILocation(line: 5601, column: 13, scope: !4205)
!4228 = !DILocation(line: 5601, column: 15, scope: !4229)
!4229 = !DILexicalBlockFile(scope: !4215, file: !162, discriminator: 4)
!4230 = !DILocation(line: 5601, column: 159, scope: !4231)
!4231 = !DILexicalBlockFile(scope: !4232, file: !162, discriminator: 3)
!4232 = !DILexicalBlockFile(scope: !4215, file: !162, discriminator: 2)
!4233 = !DILocation(line: 5601, column: 158, scope: !4215)
!4234 = !DILocation(line: 5601, column: 127, scope: !4215)
!4235 = !DILocation(line: 5601, column: 135, scope: !4215)
!4236 = !DILocation(line: 5601, column: 149, scope: !4215)
!4237 = !DILocation(line: 5601, column: 153, scope: !4215)
!4238 = !DILocation(line: 5601, column: 156, scope: !4215)
!4239 = !DILocation(line: 5602, column: 11, scope: !4215)
!4240 = !DILocation(line: 5601, column: 171, scope: !4241)
!4241 = !DILexicalBlockFile(scope: !4242, file: !162, discriminator: 6)
!4242 = !DILexicalBlockFile(scope: !4215, file: !162, discriminator: 5)
!4243 = !DILocation(line: 5600, column: 19, scope: !4205)
!4244 = !DILocation(line: 5598, column: 7, scope: !4205)
!4245 = !DILocation(line: 5603, column: 17, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !2109, file: !162, line: 5603, column: 11)
!4247 = !DILocation(line: 5603, column: 25, scope: !4246)
!4248 = !DILocation(line: 5603, column: 39, scope: !4246)
!4249 = !DILocation(line: 5603, column: 49, scope: !4246)
!4250 = !DILocation(line: 5603, column: 57, scope: !4246)
!4251 = !DILocation(line: 5603, column: 71, scope: !4246)
!4252 = !DILocation(line: 5603, column: 43, scope: !4246)
!4253 = !DILocation(line: 5603, column: 75, scope: !4246)
!4254 = !DILocation(line: 5603, column: 90, scope: !4255)
!4255 = !DILexicalBlockFile(scope: !4246, file: !162, discriminator: 1)
!4256 = !DILocation(line: 5603, column: 98, scope: !4246)
!4257 = !DILocation(line: 5603, column: 79, scope: !4246)
!4258 = !DILocation(line: 5603, column: 11, scope: !2109)
!4259 = !DILocation(line: 5603, column: 13, scope: !4260)
!4260 = !DILexicalBlockFile(scope: !4246, file: !162, discriminator: 4)
!4261 = !DILocation(line: 5603, column: 125, scope: !4262)
!4262 = !DILexicalBlockFile(scope: !4263, file: !162, discriminator: 3)
!4263 = !DILexicalBlockFile(scope: !4246, file: !162, discriminator: 2)
!4264 = !DILocation(line: 5603, column: 133, scope: !4246)
!4265 = !DILocation(line: 5603, column: 147, scope: !4246)
!4266 = !DILocation(line: 5603, column: 151, scope: !4246)
!4267 = !DILocation(line: 5603, column: 154, scope: !4246)
!4268 = !DILocation(line: 5604, column: 9, scope: !4246)
!4269 = !DILocation(line: 5605, column: 22, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !2109, file: !162, line: 5605, column: 11)
!4271 = !DILocation(line: 5605, column: 30, scope: !4270)
!4272 = !DILocation(line: 5605, column: 54, scope: !4270)
!4273 = !DILocation(line: 5605, column: 62, scope: !4270)
!4274 = !DILocation(line: 5605, column: 76, scope: !4270)
!4275 = !DILocation(line: 5606, column: 24, scope: !4270)
!4276 = !DILocation(line: 5606, column: 32, scope: !4270)
!4277 = !DILocation(line: 5605, column: 11, scope: !4270)
!4278 = !DILocation(line: 5606, column: 54, scope: !4270)
!4279 = !DILocation(line: 5605, column: 11, scope: !2109)
!4280 = !DILocation(line: 5607, column: 9, scope: !4270)
!4281 = !DILocation(line: 5608, column: 42, scope: !2109)
!4282 = !DILocation(line: 5608, column: 50, scope: !2109)
!4283 = !DILocation(line: 5608, column: 64, scope: !2109)
!4284 = !DILocation(line: 5608, column: 11, scope: !2109)
!4285 = !DILocation(line: 5608, column: 19, scope: !2109)
!4286 = !DILocation(line: 5608, column: 33, scope: !2109)
!4287 = !DILocation(line: 5608, column: 37, scope: !2109)
!4288 = !DILocation(line: 5609, column: 12, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !2109, file: !162, line: 5609, column: 11)
!4290 = !DILocation(line: 5609, column: 11, scope: !4289)
!4291 = !DILocation(line: 5609, column: 20, scope: !4289)
!4292 = !DILocation(line: 5609, column: 11, scope: !2109)
!4293 = !DILocation(line: 5610, column: 9, scope: !4289)
!4294 = !DILocation(line: 5611, column: 11, scope: !2109)
!4295 = !DILocation(line: 5611, column: 9, scope: !2109)
!4296 = !DILocation(line: 5612, column: 5, scope: !2110)
!4297 = !DILocation(line: 5612, column: 5, scope: !4298)
!4298 = !DILexicalBlockFile(scope: !2110, file: !162, discriminator: 1)
!4299 = !DILocation(line: 5612, column: 5, scope: !2109)
!4300 = !DILocation(line: 5614, column: 17, scope: !4301)
!4301 = distinct !DILexicalBlock(scope: !4302, file: !162, line: 5614, column: 11)
!4302 = distinct !DILexicalBlock(scope: !2110, file: !162, line: 5613, column: 10)
!4303 = !DILocation(line: 5614, column: 25, scope: !4301)
!4304 = !DILocation(line: 5614, column: 39, scope: !4301)
!4305 = !DILocation(line: 5614, column: 49, scope: !4301)
!4306 = !DILocation(line: 5614, column: 57, scope: !4301)
!4307 = !DILocation(line: 5614, column: 71, scope: !4301)
!4308 = !DILocation(line: 5614, column: 43, scope: !4301)
!4309 = !DILocation(line: 5614, column: 75, scope: !4301)
!4310 = !DILocation(line: 5614, column: 90, scope: !4311)
!4311 = !DILexicalBlockFile(scope: !4301, file: !162, discriminator: 1)
!4312 = !DILocation(line: 5614, column: 98, scope: !4301)
!4313 = !DILocation(line: 5614, column: 79, scope: !4301)
!4314 = !DILocation(line: 5614, column: 11, scope: !4302)
!4315 = !DILocation(line: 5614, column: 13, scope: !4316)
!4316 = !DILexicalBlockFile(scope: !4301, file: !162, discriminator: 4)
!4317 = !DILocation(line: 5614, column: 157, scope: !4318)
!4318 = !DILexicalBlockFile(scope: !4319, file: !162, discriminator: 3)
!4319 = !DILexicalBlockFile(scope: !4301, file: !162, discriminator: 2)
!4320 = !DILocation(line: 5614, column: 156, scope: !4301)
!4321 = !DILocation(line: 5614, column: 125, scope: !4301)
!4322 = !DILocation(line: 5614, column: 133, scope: !4301)
!4323 = !DILocation(line: 5614, column: 147, scope: !4301)
!4324 = !DILocation(line: 5614, column: 151, scope: !4301)
!4325 = !DILocation(line: 5614, column: 154, scope: !4301)
!4326 = !DILocation(line: 5615, column: 9, scope: !4301)
!4327 = !DILocation(line: 5616, column: 8, scope: !4302)
!4328 = !DILocation(line: 5619, column: 3, scope: !2098)
!4329 = !DILocation(line: 5620, column: 1, scope: !2098)
!4330 = !DILocation(line: 1130, column: 35, scope: !738)
!4331 = !DILocation(line: 1132, column: 3, scope: !738)
!4332 = !DILocation(line: 1132, column: 8, scope: !738)
!4333 = !DILocation(line: 1133, column: 3, scope: !738)
!4334 = !DILocation(line: 1133, column: 25, scope: !738)
!4335 = !DILocation(line: 1134, column: 7, scope: !4336)
!4336 = distinct !DILexicalBlock(scope: !738, file: !162, line: 1134, column: 7)
!4337 = !DILocation(line: 1134, column: 14, scope: !4336)
!4338 = !DILocation(line: 1134, column: 7, scope: !738)
!4339 = !DILocation(line: 1135, column: 5, scope: !4336)
!4340 = !DILocation(line: 1137, column: 14, scope: !738)
!4341 = !DILocation(line: 1137, column: 22, scope: !738)
!4342 = !DILocation(line: 1137, column: 11, scope: !738)
!4343 = !DILocation(line: 1138, column: 3, scope: !738)
!4344 = !DILocation(line: 1139, column: 5, scope: !746)
!4345 = !DILocation(line: 1139, column: 10, scope: !746)
!4346 = !DILocation(line: 1140, column: 9, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !746, file: !162, line: 1140, column: 9)
!4348 = !DILocation(line: 1140, column: 17, scope: !4347)
!4349 = !DILocation(line: 1140, column: 9, scope: !746)
!4350 = !DILocation(line: 1141, column: 12, scope: !4351)
!4351 = distinct !DILexicalBlock(scope: !4352, file: !162, line: 1141, column: 11)
!4352 = distinct !DILexicalBlock(scope: !4347, file: !162, line: 1140, column: 32)
!4353 = !DILocation(line: 1141, column: 20, scope: !4351)
!4354 = !DILocation(line: 1141, column: 35, scope: !4351)
!4355 = !DILocation(line: 1141, column: 11, scope: !4352)
!4356 = !DILocation(line: 1142, column: 9, scope: !4351)
!4357 = !DILocation(line: 1143, column: 18, scope: !4352)
!4358 = !DILocation(line: 1143, column: 26, scope: !4352)
!4359 = !DILocation(line: 1143, column: 15, scope: !4352)
!4360 = !DILocation(line: 1144, column: 8, scope: !4352)
!4361 = !DILocation(line: 1144, column: 16, scope: !4352)
!4362 = !DILocation(line: 1144, column: 31, scope: !4352)
!4363 = !DILocation(line: 1145, column: 5, scope: !4352)
!4364 = !DILocation(line: 1146, column: 9, scope: !746)
!4365 = !DILocation(line: 1146, column: 7, scope: !746)
!4366 = !DILocation(line: 1147, column: 15, scope: !746)
!4367 = !DILocation(line: 1147, column: 24, scope: !746)
!4368 = !DILocation(line: 1147, column: 13, scope: !746)
!4369 = !DILocation(line: 1148, column: 6, scope: !746)
!4370 = !DILocation(line: 1148, column: 14, scope: !746)
!4371 = !DILocation(line: 1148, column: 20, scope: !746)
!4372 = !DILocation(line: 1148, column: 30, scope: !746)
!4373 = !DILocation(line: 1148, column: 33, scope: !746)
!4374 = !{!2641, !2290, i64 64}
!4375 = !DILocation(line: 1149, column: 21, scope: !746)
!4376 = !DILocation(line: 1149, column: 24, scope: !746)
!4377 = !DILocation(line: 1149, column: 34, scope: !746)
!4378 = !DILocation(line: 1149, column: 5, scope: !746)
!4379 = !DILocation(line: 1150, column: 6, scope: !746)
!4380 = !DILocation(line: 1150, column: 14, scope: !746)
!4381 = !DILocation(line: 1150, column: 20, scope: !746)
!4382 = !DILocation(line: 1150, column: 30, scope: !746)
!4383 = !DILocation(line: 1150, column: 29, scope: !746)
!4384 = !DILocation(line: 1151, column: 3, scope: !747)
!4385 = !DILocation(line: 1151, column: 3, scope: !4386)
!4386 = !DILexicalBlockFile(scope: !747, file: !162, discriminator: 1)
!4387 = !DILocation(line: 1138, column: 3, scope: !747)
!4388 = !DILocation(line: 1153, column: 17, scope: !738)
!4389 = !DILocation(line: 1153, column: 25, scope: !738)
!4390 = !DILocation(line: 1153, column: 14, scope: !738)
!4391 = !DILocation(line: 1154, column: 3, scope: !738)
!4392 = !DILocation(line: 1155, column: 5, scope: !750)
!4393 = !DILocation(line: 1155, column: 27, scope: !750)
!4394 = !DILocation(line: 1156, column: 9, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !750, file: !162, line: 1156, column: 9)
!4396 = !DILocation(line: 1156, column: 20, scope: !4395)
!4397 = !DILocation(line: 1156, column: 9, scope: !750)
!4398 = !DILocation(line: 1157, column: 12, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4400, file: !162, line: 1157, column: 11)
!4400 = distinct !DILexicalBlock(scope: !4395, file: !162, line: 1156, column: 35)
!4401 = !DILocation(line: 1157, column: 20, scope: !4399)
!4402 = !DILocation(line: 1157, column: 44, scope: !4399)
!4403 = !DILocation(line: 1157, column: 11, scope: !4400)
!4404 = !DILocation(line: 1158, column: 9, scope: !4399)
!4405 = !DILocation(line: 1159, column: 21, scope: !4400)
!4406 = !DILocation(line: 1159, column: 29, scope: !4400)
!4407 = !DILocation(line: 1159, column: 18, scope: !4400)
!4408 = !DILocation(line: 1160, column: 8, scope: !4400)
!4409 = !DILocation(line: 1160, column: 16, scope: !4400)
!4410 = !DILocation(line: 1160, column: 40, scope: !4400)
!4411 = !DILocation(line: 1161, column: 5, scope: !4400)
!4412 = !DILocation(line: 1162, column: 18, scope: !750)
!4413 = !DILocation(line: 1162, column: 16, scope: !750)
!4414 = !DILocation(line: 1163, column: 18, scope: !750)
!4415 = !DILocation(line: 1163, column: 30, scope: !750)
!4416 = !DILocation(line: 1163, column: 16, scope: !750)
!4417 = !DILocation(line: 1164, column: 6, scope: !750)
!4418 = !DILocation(line: 1164, column: 14, scope: !750)
!4419 = !DILocation(line: 1164, column: 20, scope: !750)
!4420 = !DILocation(line: 1164, column: 30, scope: !750)
!4421 = !DILocation(line: 1164, column: 29, scope: !750)
!4422 = !DILocation(line: 1165, column: 3, scope: !751)
!4423 = !DILocation(line: 1165, column: 3, scope: !4424)
!4424 = !DILexicalBlockFile(scope: !751, file: !162, discriminator: 1)
!4425 = !DILocation(line: 1154, column: 3, scope: !751)
!4426 = !DILocation(line: 1167, column: 20, scope: !738)
!4427 = !DILocation(line: 1167, column: 28, scope: !738)
!4428 = !DILocation(line: 1167, column: 48, scope: !738)
!4429 = !DILocation(line: 1167, column: 3, scope: !738)
!4430 = !DILocation(line: 1168, column: 20, scope: !738)
!4431 = !DILocation(line: 1168, column: 28, scope: !738)
!4432 = !DILocation(line: 1168, column: 50, scope: !738)
!4433 = !DILocation(line: 1168, column: 3, scope: !738)
!4434 = !DILocation(line: 1169, column: 17, scope: !738)
!4435 = !DILocation(line: 1169, column: 25, scope: !738)
!4436 = !DILocation(line: 1169, column: 3, scope: !738)
!4437 = !DILocation(line: 1170, column: 17, scope: !738)
!4438 = !DILocation(line: 1170, column: 25, scope: !738)
!4439 = !DILocation(line: 1170, column: 3, scope: !738)
!4440 = !DILocation(line: 1175, column: 9, scope: !4441)
!4441 = distinct !DILexicalBlock(scope: !738, file: !162, line: 1175, column: 7)
!4442 = !DILocation(line: 1175, column: 17, scope: !4441)
!4443 = !DILocation(line: 1175, column: 8, scope: !4441)
!4444 = !DILocation(line: 1175, column: 34, scope: !4441)
!4445 = !DILocation(line: 1175, column: 38, scope: !4446)
!4446 = !DILexicalBlockFile(scope: !4441, file: !162, discriminator: 1)
!4447 = !DILocation(line: 1175, column: 46, scope: !4441)
!4448 = !DILocation(line: 1175, column: 37, scope: !4441)
!4449 = !DILocation(line: 1175, column: 7, scope: !738)
!4450 = !DILocation(line: 1179, column: 17, scope: !4441)
!4451 = !DILocation(line: 1179, column: 25, scope: !4441)
!4452 = !DILocation(line: 1179, column: 45, scope: !4441)
!4453 = !DILocation(line: 1179, column: 53, scope: !4441)
!4454 = !DILocation(line: 1179, column: 43, scope: !4441)
!4455 = !DILocation(line: 1179, column: 33, scope: !4441)
!4456 = !DILocation(line: 1179, column: 71, scope: !4441)
!4457 = !DILocation(line: 1179, column: 79, scope: !4441)
!4458 = !DILocation(line: 1179, column: 5, scope: !4441)
!4459 = !DILocation(line: 1180, column: 4, scope: !738)
!4460 = !DILocation(line: 1180, column: 12, scope: !738)
!4461 = !DILocation(line: 1180, column: 18, scope: !738)
!4462 = !DILocation(line: 1180, column: 37, scope: !738)
!4463 = !DILocation(line: 1180, column: 45, scope: !738)
!4464 = !DILocation(line: 1180, column: 28, scope: !738)
!4465 = !DILocation(line: 1184, column: 4, scope: !738)
!4466 = !DILocation(line: 1184, column: 12, scope: !738)
!4467 = !DILocation(line: 1184, column: 18, scope: !738)
!4468 = !DILocation(line: 1184, column: 29, scope: !738)
!4469 = !DILocation(line: 1184, column: 37, scope: !738)
!4470 = !DILocation(line: 1185, column: 4, scope: !738)
!4471 = !DILocation(line: 1185, column: 12, scope: !738)
!4472 = !DILocation(line: 1185, column: 18, scope: !738)
!4473 = !DILocation(line: 1185, column: 29, scope: !738)
!4474 = !DILocation(line: 1185, column: 37, scope: !738)
!4475 = !DILocation(line: 1186, column: 4, scope: !738)
!4476 = !DILocation(line: 1186, column: 12, scope: !738)
!4477 = !DILocation(line: 1186, column: 18, scope: !738)
!4478 = !DILocation(line: 1186, column: 29, scope: !738)
!4479 = !DILocation(line: 1186, column: 37, scope: !738)
!4480 = !DILocation(line: 1187, column: 4, scope: !738)
!4481 = !DILocation(line: 1187, column: 12, scope: !738)
!4482 = !DILocation(line: 1187, column: 18, scope: !738)
!4483 = !DILocation(line: 1187, column: 29, scope: !738)
!4484 = !DILocation(line: 1187, column: 37, scope: !738)
!4485 = !DILocation(line: 1187, column: 27, scope: !738)
!4486 = !DILocation(line: 1188, column: 4, scope: !738)
!4487 = !DILocation(line: 1188, column: 12, scope: !738)
!4488 = !DILocation(line: 1188, column: 18, scope: !738)
!4489 = !DILocation(line: 1188, column: 29, scope: !738)
!4490 = !DILocation(line: 1188, column: 37, scope: !738)
!4491 = !DILocation(line: 1189, column: 8, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !738, file: !162, line: 1189, column: 7)
!4493 = !DILocation(line: 1189, column: 16, scope: !4492)
!4494 = !DILocation(line: 1189, column: 7, scope: !4492)
!4495 = !DILocation(line: 1189, column: 7, scope: !738)
!4496 = !DILocation(line: 1190, column: 6, scope: !4492)
!4497 = !DILocation(line: 1190, column: 14, scope: !4492)
!4498 = !DILocation(line: 1190, column: 41, scope: !4492)
!4499 = !DILocation(line: 1190, column: 49, scope: !4492)
!4500 = !DILocation(line: 1190, column: 5, scope: !4492)
!4501 = !DILocation(line: 1191, column: 4, scope: !738)
!4502 = !DILocation(line: 1191, column: 12, scope: !738)
!4503 = !DILocation(line: 1191, column: 18, scope: !738)
!4504 = !DILocation(line: 1191, column: 28, scope: !738)
!4505 = !DILocation(line: 1191, column: 27, scope: !738)
!4506 = !DILocation(line: 1192, column: 1, scope: !738)
!4507 = !DILocation(line: 1192, column: 1, scope: !4508)
!4508 = !DILexicalBlockFile(scope: !738, file: !162, discriminator: 1)
!4509 = !DILocation(line: 2115, column: 40, scope: !2011)
!4510 = !DILocation(line: 2116, column: 41, scope: !2011)
!4511 = !DILocation(line: 2117, column: 41, scope: !2011)
!4512 = !DILocation(line: 2118, column: 42, scope: !2011)
!4513 = !DILocation(line: 2120, column: 3, scope: !2011)
!4514 = !DILocation(line: 2120, column: 18, scope: !2011)
!4515 = !DILocation(line: 2120, column: 46, scope: !2011)
!4516 = !DILocation(line: 2120, column: 27, scope: !2011)
!4517 = !DILocation(line: 2121, column: 7, scope: !4518)
!4518 = distinct !DILexicalBlock(scope: !2011, file: !162, line: 2121, column: 7)
!4519 = !DILocation(line: 2121, column: 14, scope: !4518)
!4520 = !DILocation(line: 2121, column: 7, scope: !2011)
!4521 = !DILocation(line: 2122, column: 12, scope: !4518)
!4522 = !DILocation(line: 2122, column: 5, scope: !4518)
!4523 = !DILocation(line: 2123, column: 4, scope: !2011)
!4524 = !DILocation(line: 2123, column: 12, scope: !2011)
!4525 = !DILocation(line: 2123, column: 25, scope: !2011)
!4526 = !DILocation(line: 2124, column: 39, scope: !2011)
!4527 = !DILocation(line: 2124, column: 47, scope: !2011)
!4528 = !DILocation(line: 2124, column: 54, scope: !2011)
!4529 = !DILocation(line: 2124, column: 59, scope: !2011)
!4530 = !DILocation(line: 2124, column: 10, scope: !2011)
!4531 = !DILocation(line: 2124, column: 3, scope: !2011)
!4532 = !DILocation(line: 2125, column: 1, scope: !2011)
!4533 = !DILocation(line: 3562, column: 40, scope: !2037)
!4534 = !DILocation(line: 3563, column: 41, scope: !2037)
!4535 = !DILocation(line: 3564, column: 41, scope: !2037)
!4536 = !DILocation(line: 3565, column: 42, scope: !2037)
!4537 = !DILocation(line: 3567, column: 3, scope: !2037)
!4538 = !DILocation(line: 3567, column: 18, scope: !2037)
!4539 = !DILocation(line: 3567, column: 46, scope: !2037)
!4540 = !DILocation(line: 3567, column: 27, scope: !2037)
!4541 = !DILocation(line: 3568, column: 7, scope: !4542)
!4542 = distinct !DILexicalBlock(scope: !2037, file: !162, line: 3568, column: 7)
!4543 = !DILocation(line: 3568, column: 14, scope: !4542)
!4544 = !DILocation(line: 3568, column: 7, scope: !2037)
!4545 = !DILocation(line: 3569, column: 12, scope: !4542)
!4546 = !DILocation(line: 3569, column: 5, scope: !4542)
!4547 = !DILocation(line: 3573, column: 4, scope: !2037)
!4548 = !DILocation(line: 3573, column: 12, scope: !2037)
!4549 = !DILocation(line: 3573, column: 20, scope: !2037)
!4550 = !DILocation(line: 3573, column: 36, scope: !2037)
!4551 = !DILocation(line: 3575, column: 8, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !2037, file: !162, line: 3575, column: 7)
!4553 = !DILocation(line: 3575, column: 16, scope: !4552)
!4554 = !DILocation(line: 3575, column: 31, scope: !4552)
!4555 = !DILocation(line: 3575, column: 7, scope: !4552)
!4556 = !DILocation(line: 3575, column: 7, scope: !2037)
!4557 = !DILocation(line: 3576, column: 6, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !4552, file: !162, line: 3575, column: 46)
!4559 = !DILocation(line: 3576, column: 14, scope: !4558)
!4560 = !DILocation(line: 3576, column: 27, scope: !4558)
!4561 = !DILocation(line: 3577, column: 37, scope: !4558)
!4562 = !DILocation(line: 3577, column: 45, scope: !4558)
!4563 = !DILocation(line: 3577, column: 48, scope: !4558)
!4564 = !DILocation(line: 3577, column: 53, scope: !4558)
!4565 = !DILocation(line: 3577, column: 12, scope: !4558)
!4566 = !DILocation(line: 3577, column: 5, scope: !4558)
!4567 = !DILocation(line: 3580, column: 6, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !4552, file: !162, line: 3579, column: 8)
!4569 = !DILocation(line: 3580, column: 14, scope: !4568)
!4570 = !DILocation(line: 3580, column: 27, scope: !4568)
!4571 = !DILocation(line: 3581, column: 36, scope: !4568)
!4572 = !DILocation(line: 3581, column: 44, scope: !4568)
!4573 = !DILocation(line: 3581, column: 47, scope: !4568)
!4574 = !DILocation(line: 3581, column: 52, scope: !4568)
!4575 = !DILocation(line: 3581, column: 12, scope: !4568)
!4576 = !DILocation(line: 3581, column: 5, scope: !4568)
!4577 = !DILocation(line: 3583, column: 1, scope: !2037)
!4578 = !DILocation(line: 1117, column: 26, scope: !1993)
!4579 = !DILocation(line: 1117, column: 47, scope: !1993)
!4580 = !DILocation(line: 1119, column: 3, scope: !1993)
!4581 = !DILocation(line: 1120, column: 5, scope: !2000)
!4582 = !DILocation(line: 1120, column: 14, scope: !2000)
!4583 = !DILocation(line: 1120, column: 18, scope: !2000)
!4584 = !DILocation(line: 1121, column: 10, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !2000, file: !162, line: 1121, column: 9)
!4586 = !DILocation(line: 1121, column: 9, scope: !2000)
!4587 = !DILocation(line: 1122, column: 7, scope: !4585)
!4588 = !DILocation(line: 1123, column: 16, scope: !2000)
!4589 = !DILocation(line: 1123, column: 19, scope: !2000)
!4590 = !DILocation(line: 1123, column: 14, scope: !2000)
!4591 = !DILocation(line: 1124, column: 6, scope: !2000)
!4592 = !DILocation(line: 1124, column: 14, scope: !2000)
!4593 = !DILocation(line: 1124, column: 20, scope: !2000)
!4594 = !DILocation(line: 1124, column: 30, scope: !2000)
!4595 = !DILocation(line: 1124, column: 33, scope: !2000)
!4596 = !{!2737, !2290, i64 32}
!4597 = !DILocation(line: 1125, column: 6, scope: !2000)
!4598 = !DILocation(line: 1125, column: 14, scope: !2000)
!4599 = !DILocation(line: 1125, column: 20, scope: !2000)
!4600 = !DILocation(line: 1125, column: 30, scope: !2000)
!4601 = !DILocation(line: 1125, column: 29, scope: !2000)
!4602 = !DILocation(line: 1126, column: 3, scope: !2001)
!4603 = !DILocation(line: 1126, column: 3, scope: !4604)
!4604 = !DILexicalBlockFile(scope: !2001, file: !162, discriminator: 1)
!4605 = !DILocation(line: 1119, column: 3, scope: !2001)
!4606 = !DILocation(line: 1127, column: 1, scope: !1993)
!4607 = !DILocation(line: 6128, column: 26, scope: !2221)
!4608 = !DILocation(line: 6130, column: 3, scope: !2221)
!4609 = !DILocation(line: 6130, column: 10, scope: !2221)
!4610 = !DILocation(line: 6130, column: 14, scope: !2221)
!4611 = !DILocation(line: 6130, column: 20, scope: !2221)
!4612 = !DILocation(line: 6131, column: 3, scope: !2221)
!4613 = !DILocation(line: 6131, column: 10, scope: !4614)
!4614 = !DILexicalBlockFile(scope: !4615, file: !162, discriminator: 2)
!4615 = !DILexicalBlockFile(scope: !2221, file: !162, discriminator: 1)
!4616 = !DILocation(line: 6132, column: 5, scope: !2226)
!4617 = !DILocation(line: 6132, column: 12, scope: !2226)
!4618 = !DILocation(line: 6132, column: 18, scope: !2226)
!4619 = !DILocation(line: 6132, column: 21, scope: !2226)
!4620 = !DILocation(line: 6133, column: 5, scope: !2226)
!4621 = !DILocation(line: 6133, column: 11, scope: !2226)
!4622 = !{!2403, !2290, i64 40}
!4623 = !DILocation(line: 6133, column: 16, scope: !2226)
!4624 = !DILocation(line: 6133, column: 25, scope: !2226)
!4625 = !DILocation(line: 6134, column: 9, scope: !2226)
!4626 = !DILocation(line: 6134, column: 7, scope: !2226)
!4627 = !DILocation(line: 6135, column: 3, scope: !2221)
!4628 = !DILocation(line: 6136, column: 7, scope: !2221)
!4629 = !DILocation(line: 6136, column: 13, scope: !2221)
!4630 = !DILocation(line: 6136, column: 5, scope: !2221)
!4631 = !DILocation(line: 6137, column: 3, scope: !2221)
!4632 = !DILocation(line: 6137, column: 10, scope: !4614)
!4633 = !DILocation(line: 6138, column: 5, scope: !2228)
!4634 = !DILocation(line: 6138, column: 12, scope: !2228)
!4635 = !DILocation(line: 6138, column: 18, scope: !2228)
!4636 = !DILocation(line: 6138, column: 21, scope: !2228)
!4637 = !DILocation(line: 6139, column: 5, scope: !2228)
!4638 = !DILocation(line: 6139, column: 11, scope: !2228)
!4639 = !DILocation(line: 6139, column: 16, scope: !2228)
!4640 = !DILocation(line: 6139, column: 25, scope: !2228)
!4641 = !DILocation(line: 6140, column: 9, scope: !2228)
!4642 = !DILocation(line: 6140, column: 7, scope: !2228)
!4643 = !DILocation(line: 6141, column: 3, scope: !2221)
!4644 = !DILocation(line: 6142, column: 1, scope: !2221)
!4645 = !DILocation(line: 5720, column: 17, scope: !2128)
!4646 = !DILocation(line: 5720, column: 29, scope: !2128)
!4647 = !DILocation(line: 5720, column: 75, scope: !2128)
!4648 = !DILocation(line: 5722, column: 3, scope: !2128)
!4649 = !DILocation(line: 5722, column: 19, scope: !2128)
!4650 = !DILocation(line: 5723, column: 30, scope: !2128)
!4651 = !DILocation(line: 5723, column: 33, scope: !2128)
!4652 = !DILocation(line: 5723, column: 3, scope: !2128)
!4653 = !DILocation(line: 5724, column: 3, scope: !2128)
!4654 = !DILocation(line: 5725, column: 5, scope: !2137)
!4655 = !DILocation(line: 5725, column: 19, scope: !2137)
!4656 = !DILocation(line: 5725, column: 39, scope: !2137)
!4657 = !DILocation(line: 5725, column: 23, scope: !2137)
!4658 = !DILocation(line: 5726, column: 10, scope: !4659)
!4659 = distinct !DILexicalBlock(scope: !2137, file: !162, line: 5726, column: 9)
!4660 = !DILocation(line: 5726, column: 9, scope: !2137)
!4661 = !DILocation(line: 5727, column: 7, scope: !4659)
!4662 = !DILocation(line: 5728, column: 9, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !2137, file: !162, line: 5728, column: 9)
!4664 = !DILocation(line: 5728, column: 12, scope: !4663)
!4665 = !DILocation(line: 5728, column: 29, scope: !4663)
!4666 = !DILocation(line: 5728, column: 9, scope: !2137)
!4667 = !DILocation(line: 5729, column: 7, scope: !4663)
!4668 = !DILocation(line: 5729, column: 11, scope: !4663)
!4669 = !DILocation(line: 5729, column: 20, scope: !4663)
!4670 = !DILocation(line: 5729, column: 23, scope: !4663)
!4671 = !DILocation(line: 5730, column: 3, scope: !2138)
!4672 = !DILocation(line: 5730, column: 3, scope: !4673)
!4673 = !DILexicalBlockFile(scope: !2138, file: !162, discriminator: 1)
!4674 = !DILocation(line: 5724, column: 3, scope: !2138)
!4675 = !DILocation(line: 5731, column: 22, scope: !2128)
!4676 = !DILocation(line: 5731, column: 25, scope: !2128)
!4677 = !DILocation(line: 5731, column: 3, scope: !2128)
!4678 = !DILocation(line: 5733, column: 22, scope: !2128)
!4679 = !DILocation(line: 5733, column: 25, scope: !2128)
!4680 = !DILocation(line: 5733, column: 3, scope: !2128)
!4681 = !DILocation(line: 5735, column: 22, scope: !2128)
!4682 = !DILocation(line: 5735, column: 25, scope: !2128)
!4683 = !DILocation(line: 5735, column: 3, scope: !2128)
!4684 = !DILocation(line: 5736, column: 22, scope: !2128)
!4685 = !DILocation(line: 5736, column: 25, scope: !2128)
!4686 = !DILocation(line: 5736, column: 3, scope: !2128)
!4687 = !DILocation(line: 5737, column: 22, scope: !2128)
!4688 = !DILocation(line: 5737, column: 25, scope: !2128)
!4689 = !DILocation(line: 5737, column: 3, scope: !2128)
!4690 = !DILocation(line: 5738, column: 17, scope: !2128)
!4691 = !DILocation(line: 5738, column: 20, scope: !2128)
!4692 = !DILocation(line: 5738, column: 3, scope: !2128)
!4693 = !DILocation(line: 5739, column: 17, scope: !2128)
!4694 = !DILocation(line: 5739, column: 20, scope: !2128)
!4695 = !DILocation(line: 5739, column: 3, scope: !2128)
!4696 = !DILocation(line: 5740, column: 7, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !2128, file: !162, line: 5740, column: 7)
!4698 = !DILocation(line: 5740, column: 7, scope: !2128)
!4699 = !DILocation(line: 5741, column: 5, scope: !4700)
!4700 = distinct !DILexicalBlock(scope: !4697, file: !162, line: 5740, column: 20)
!4701 = !DILocation(line: 5741, column: 9, scope: !4700)
!4702 = !DILocation(line: 5741, column: 18, scope: !4700)
!4703 = !DILocation(line: 5741, column: 21, scope: !4700)
!4704 = !DILocation(line: 5742, column: 5, scope: !4700)
!4705 = !DILocation(line: 5742, column: 9, scope: !4700)
!4706 = !DILocation(line: 5742, column: 18, scope: !4700)
!4707 = !DILocation(line: 5742, column: 21, scope: !4700)
!4708 = !DILocation(line: 5743, column: 3, scope: !4700)
!4709 = !DILocation(line: 5744, column: 3, scope: !2128)
!4710 = !DILocation(line: 5744, column: 7, scope: !2128)
!4711 = !DILocation(line: 5744, column: 16, scope: !2128)
!4712 = !DILocation(line: 5745, column: 1, scope: !2128)
!4713 = !DILocation(line: 1195, column: 46, scope: !753)
!4714 = !DILocation(line: 1197, column: 28, scope: !753)
!4715 = !DILocation(line: 1197, column: 4, scope: !753)
!4716 = !DILocation(line: 1197, column: 12, scope: !753)
!4717 = !DILocation(line: 1197, column: 26, scope: !753)
!4718 = !DILocation(line: 1198, column: 1, scope: !753)
!4719 = !DILocation(line: 1201, column: 38, scope: !756)
!4720 = !DILocation(line: 1201, column: 55, scope: !756)
!4721 = !DILocation(line: 1205, column: 8, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !756, file: !162, line: 1205, column: 7)
!4723 = !DILocation(line: 1205, column: 16, scope: !4722)
!4724 = !DILocation(line: 1205, column: 32, scope: !4722)
!4725 = !DILocation(line: 1205, column: 41, scope: !4722)
!4726 = !DILocation(line: 1205, column: 56, scope: !4722)
!4727 = !DILocation(line: 1205, column: 60, scope: !4728)
!4728 = !DILexicalBlockFile(scope: !4722, file: !162, discriminator: 1)
!4729 = !DILocation(line: 1205, column: 68, scope: !4722)
!4730 = !DILocation(line: 1205, column: 84, scope: !4722)
!4731 = !DILocation(line: 1205, column: 93, scope: !4722)
!4732 = !DILocation(line: 1205, column: 7, scope: !756)
!4733 = !DILocation(line: 1206, column: 5, scope: !4722)
!4734 = !DILocation(line: 1207, column: 31, scope: !756)
!4735 = !DILocation(line: 1207, column: 4, scope: !756)
!4736 = !DILocation(line: 1207, column: 12, scope: !756)
!4737 = !DILocation(line: 1207, column: 29, scope: !756)
!4738 = !DILocation(line: 1208, column: 3, scope: !756)
!4739 = !DILocation(line: 1212, column: 1, scope: !756)
!4740 = !DILocation(line: 1215, column: 43, scope: !762)
!4741 = !DILocation(line: 1215, column: 55, scope: !762)
!4742 = !DILocation(line: 1218, column: 8, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !762, file: !162, line: 1218, column: 7)
!4744 = !DILocation(line: 1218, column: 16, scope: !4743)
!4745 = !DILocation(line: 1218, column: 32, scope: !4743)
!4746 = !DILocation(line: 1218, column: 41, scope: !4743)
!4747 = !DILocation(line: 1218, column: 56, scope: !4743)
!4748 = !DILocation(line: 1218, column: 60, scope: !4749)
!4749 = !DILexicalBlockFile(scope: !4743, file: !162, discriminator: 1)
!4750 = !DILocation(line: 1218, column: 68, scope: !4743)
!4751 = !DILocation(line: 1218, column: 84, scope: !4743)
!4752 = !DILocation(line: 1218, column: 93, scope: !4743)
!4753 = !DILocation(line: 1218, column: 7, scope: !762)
!4754 = !DILocation(line: 1219, column: 5, scope: !4743)
!4755 = !DILocation(line: 1220, column: 29, scope: !762)
!4756 = !DILocation(line: 1220, column: 4, scope: !762)
!4757 = !DILocation(line: 1220, column: 12, scope: !762)
!4758 = !DILocation(line: 1220, column: 27, scope: !762)
!4759 = !DILocation(line: 1221, column: 1, scope: !762)
!4760 = !DILocation(line: 1221, column: 1, scope: !4761)
!4761 = !DILexicalBlockFile(scope: !762, file: !162, discriminator: 1)
!4762 = !DILocation(line: 1224, column: 36, scope: !768)
!4763 = !DILocation(line: 1224, column: 50, scope: !768)
!4764 = !DILocation(line: 1226, column: 8, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !768, file: !162, line: 1226, column: 7)
!4766 = !DILocation(line: 1226, column: 16, scope: !4765)
!4767 = !DILocation(line: 1226, column: 34, scope: !4765)
!4768 = !DILocation(line: 1226, column: 42, scope: !4765)
!4769 = !DILocation(line: 1226, column: 30, scope: !4765)
!4770 = !DILocation(line: 1226, column: 7, scope: !768)
!4771 = !DILocation(line: 1227, column: 53, scope: !4765)
!4772 = !DILocation(line: 1227, column: 31, scope: !4765)
!4773 = !DILocation(line: 1227, column: 39, scope: !4765)
!4774 = !DILocation(line: 1227, column: 51, scope: !4765)
!4775 = !DILocation(line: 1227, column: 6, scope: !4765)
!4776 = !DILocation(line: 1227, column: 14, scope: !4765)
!4777 = !DILocation(line: 1227, column: 28, scope: !4765)
!4778 = !DILocation(line: 1227, column: 5, scope: !4765)
!4779 = !DILocation(line: 1229, column: 28, scope: !4765)
!4780 = !DILocation(line: 1229, column: 6, scope: !4765)
!4781 = !DILocation(line: 1229, column: 14, scope: !4765)
!4782 = !DILocation(line: 1229, column: 26, scope: !4765)
!4783 = !DILocation(line: 1230, column: 1, scope: !768)
!4784 = !DILocation(line: 1233, column: 32, scope: !774)
!4785 = !DILocation(line: 1233, column: 56, scope: !774)
!4786 = !DILocation(line: 1235, column: 7, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !774, file: !162, line: 1235, column: 7)
!4788 = !DILocation(line: 1235, column: 7, scope: !774)
!4789 = !DILocation(line: 1236, column: 26, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4787, file: !162, line: 1235, column: 10)
!4791 = !DILocation(line: 1236, column: 34, scope: !4790)
!4792 = !DILocation(line: 1236, column: 42, scope: !4790)
!4793 = !DILocation(line: 1236, column: 48, scope: !4790)
!4794 = !DILocation(line: 1236, column: 9, scope: !4790)
!4795 = !DILocation(line: 1236, column: 7, scope: !4790)
!4796 = !DILocation(line: 1237, column: 10, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4790, file: !162, line: 1237, column: 9)
!4798 = !DILocation(line: 1237, column: 9, scope: !4790)
!4799 = !DILocation(line: 1238, column: 7, scope: !4797)
!4800 = !DILocation(line: 1239, column: 27, scope: !4790)
!4801 = !DILocation(line: 1239, column: 6, scope: !4790)
!4802 = !DILocation(line: 1239, column: 14, scope: !4790)
!4803 = !DILocation(line: 1239, column: 25, scope: !4790)
!4804 = !DILocation(line: 1240, column: 3, scope: !4790)
!4805 = !DILocation(line: 1242, column: 6, scope: !4787)
!4806 = !DILocation(line: 1242, column: 14, scope: !4787)
!4807 = !DILocation(line: 1242, column: 25, scope: !4787)
!4808 = !DILocation(line: 1243, column: 3, scope: !774)
!4809 = !DILocation(line: 1244, column: 1, scope: !774)
!4810 = !DILocation(line: 1247, column: 32, scope: !778)
!4811 = !DILocation(line: 1249, column: 11, scope: !778)
!4812 = !DILocation(line: 1249, column: 19, scope: !778)
!4813 = !DILocation(line: 1249, column: 3, scope: !778)
!4814 = !DILocation(line: 1253, column: 51, scope: !783)
!4815 = !DILocation(line: 1255, column: 11, scope: !783)
!4816 = !DILocation(line: 1255, column: 19, scope: !783)
!4817 = !DILocation(line: 1255, column: 3, scope: !783)
!4818 = !DILocation(line: 1259, column: 44, scope: !788)
!4819 = !DILocation(line: 1261, column: 11, scope: !788)
!4820 = !DILocation(line: 1261, column: 19, scope: !788)
!4821 = !{!2396, !2400, i64 736}
!4822 = !DILocation(line: 1261, column: 3, scope: !788)
!4823 = !DILocation(line: 1273, column: 42, scope: !791)
!4824 = !DILocation(line: 1274, column: 47, scope: !791)
!4825 = !DILocation(line: 1275, column: 45, scope: !791)
!4826 = !DILocation(line: 1277, column: 37, scope: !791)
!4827 = !DILocation(line: 1277, column: 4, scope: !791)
!4828 = !DILocation(line: 1277, column: 12, scope: !791)
!4829 = !DILocation(line: 1277, column: 35, scope: !791)
!4830 = !DILocation(line: 1278, column: 35, scope: !791)
!4831 = !DILocation(line: 1278, column: 4, scope: !791)
!4832 = !DILocation(line: 1278, column: 12, scope: !791)
!4833 = !DILocation(line: 1278, column: 33, scope: !791)
!4834 = !DILocation(line: 1279, column: 1, scope: !791)
!4835 = !DILocation(line: 1282, column: 47, scope: !798)
!4836 = !DILocation(line: 1283, column: 52, scope: !798)
!4837 = !DILocation(line: 1284, column: 37, scope: !798)
!4838 = !DILocation(line: 1284, column: 4, scope: !798)
!4839 = !DILocation(line: 1284, column: 12, scope: !798)
!4840 = !DILocation(line: 1284, column: 35, scope: !798)
!4841 = !DILocation(line: 1285, column: 1, scope: !798)
!4842 = !DILocation(line: 1288, column: 45, scope: !804)
!4843 = !DILocation(line: 1289, column: 48, scope: !804)
!4844 = !DILocation(line: 1290, column: 35, scope: !804)
!4845 = !DILocation(line: 1290, column: 4, scope: !804)
!4846 = !DILocation(line: 1290, column: 12, scope: !804)
!4847 = !DILocation(line: 1290, column: 33, scope: !804)
!4848 = !DILocation(line: 1291, column: 1, scope: !804)
!4849 = !DILocation(line: 1294, column: 48, scope: !810)
!4850 = !DILocation(line: 1295, column: 54, scope: !810)
!4851 = !DILocation(line: 1297, column: 38, scope: !810)
!4852 = !DILocation(line: 1297, column: 4, scope: !810)
!4853 = !DILocation(line: 1297, column: 12, scope: !810)
!4854 = !DILocation(line: 1297, column: 36, scope: !810)
!4855 = !DILocation(line: 1298, column: 1, scope: !810)
!4856 = !DILocation(line: 1301, column: 56, scope: !816)
!4857 = !DILocation(line: 1302, column: 70, scope: !816)
!4858 = !DILocation(line: 1304, column: 46, scope: !816)
!4859 = !DILocation(line: 1304, column: 4, scope: !816)
!4860 = !DILocation(line: 1304, column: 12, scope: !816)
!4861 = !DILocation(line: 1304, column: 44, scope: !816)
!4862 = !DILocation(line: 1305, column: 1, scope: !816)
!4863 = !DILocation(line: 1308, column: 42, scope: !822)
!4864 = !DILocation(line: 1309, column: 42, scope: !822)
!4865 = !DILocation(line: 1311, column: 32, scope: !822)
!4866 = !DILocation(line: 1311, column: 4, scope: !822)
!4867 = !DILocation(line: 1311, column: 12, scope: !822)
!4868 = !DILocation(line: 1311, column: 30, scope: !822)
!4869 = !DILocation(line: 1312, column: 1, scope: !822)
!4870 = !DILocation(line: 1315, column: 47, scope: !828)
!4871 = !DILocation(line: 1316, column: 57, scope: !828)
!4872 = !DILocation(line: 1317, column: 55, scope: !828)
!4873 = !DILocation(line: 1319, column: 42, scope: !828)
!4874 = !DILocation(line: 1319, column: 4, scope: !828)
!4875 = !DILocation(line: 1319, column: 12, scope: !828)
!4876 = !DILocation(line: 1319, column: 40, scope: !828)
!4877 = !DILocation(line: 1320, column: 40, scope: !828)
!4878 = !DILocation(line: 1320, column: 4, scope: !828)
!4879 = !DILocation(line: 1320, column: 12, scope: !828)
!4880 = !DILocation(line: 1320, column: 38, scope: !828)
!4881 = !DILocation(line: 1321, column: 1, scope: !828)
!4882 = !DILocation(line: 1324, column: 52, scope: !835)
!4883 = !DILocation(line: 1325, column: 62, scope: !835)
!4884 = !DILocation(line: 1326, column: 42, scope: !835)
!4885 = !DILocation(line: 1326, column: 4, scope: !835)
!4886 = !DILocation(line: 1326, column: 12, scope: !835)
!4887 = !DILocation(line: 1326, column: 40, scope: !835)
!4888 = !DILocation(line: 1327, column: 1, scope: !835)
!4889 = !DILocation(line: 1330, column: 50, scope: !841)
!4890 = !DILocation(line: 1331, column: 58, scope: !841)
!4891 = !DILocation(line: 1332, column: 40, scope: !841)
!4892 = !DILocation(line: 1332, column: 4, scope: !841)
!4893 = !DILocation(line: 1332, column: 12, scope: !841)
!4894 = !DILocation(line: 1332, column: 38, scope: !841)
!4895 = !DILocation(line: 1333, column: 1, scope: !841)
!4896 = !DILocation(line: 1336, column: 42, scope: !847)
!4897 = !DILocation(line: 1337, column: 42, scope: !847)
!4898 = !DILocation(line: 1339, column: 32, scope: !847)
!4899 = !DILocation(line: 1339, column: 4, scope: !847)
!4900 = !DILocation(line: 1339, column: 12, scope: !847)
!4901 = !DILocation(line: 1339, column: 30, scope: !847)
!4902 = !DILocation(line: 1340, column: 4, scope: !847)
!4903 = !DILocation(line: 1340, column: 12, scope: !847)
!4904 = !DILocation(line: 1340, column: 45, scope: !847)
!4905 = !DILocation(line: 1341, column: 1, scope: !847)
!4906 = !DILocation(line: 1344, column: 48, scope: !853)
!4907 = !DILocation(line: 1345, column: 48, scope: !853)
!4908 = !DILocation(line: 1347, column: 32, scope: !853)
!4909 = !DILocation(line: 1347, column: 4, scope: !853)
!4910 = !DILocation(line: 1347, column: 12, scope: !853)
!4911 = !DILocation(line: 1347, column: 30, scope: !853)
!4912 = !DILocation(line: 1348, column: 4, scope: !853)
!4913 = !DILocation(line: 1348, column: 12, scope: !853)
!4914 = !DILocation(line: 1348, column: 45, scope: !853)
!4915 = !DILocation(line: 1349, column: 1, scope: !853)
!4916 = !DILocation(line: 1352, column: 46, scope: !857)
!4917 = !DILocation(line: 1353, column: 55, scope: !857)
!4918 = !DILocation(line: 1354, column: 53, scope: !857)
!4919 = !DILocation(line: 1356, column: 41, scope: !857)
!4920 = !DILocation(line: 1356, column: 4, scope: !857)
!4921 = !DILocation(line: 1356, column: 12, scope: !857)
!4922 = !DILocation(line: 1356, column: 39, scope: !857)
!4923 = !DILocation(line: 1357, column: 39, scope: !857)
!4924 = !DILocation(line: 1357, column: 4, scope: !857)
!4925 = !DILocation(line: 1357, column: 12, scope: !857)
!4926 = !DILocation(line: 1357, column: 37, scope: !857)
!4927 = !DILocation(line: 1358, column: 1, scope: !857)
!4928 = !DILocation(line: 1361, column: 51, scope: !864)
!4929 = !DILocation(line: 1362, column: 60, scope: !864)
!4930 = !DILocation(line: 1363, column: 41, scope: !864)
!4931 = !DILocation(line: 1363, column: 4, scope: !864)
!4932 = !DILocation(line: 1363, column: 12, scope: !864)
!4933 = !DILocation(line: 1363, column: 39, scope: !864)
!4934 = !DILocation(line: 1364, column: 1, scope: !864)
!4935 = !DILocation(line: 1367, column: 49, scope: !870)
!4936 = !DILocation(line: 1368, column: 56, scope: !870)
!4937 = !DILocation(line: 1369, column: 39, scope: !870)
!4938 = !DILocation(line: 1369, column: 4, scope: !870)
!4939 = !DILocation(line: 1369, column: 12, scope: !870)
!4940 = !DILocation(line: 1369, column: 37, scope: !870)
!4941 = !DILocation(line: 1370, column: 1, scope: !870)
!4942 = !DILocation(line: 1373, column: 53, scope: !876)
!4943 = !DILocation(line: 1374, column: 64, scope: !876)
!4944 = !DILocation(line: 1376, column: 43, scope: !876)
!4945 = !DILocation(line: 1376, column: 4, scope: !876)
!4946 = !DILocation(line: 1376, column: 12, scope: !876)
!4947 = !DILocation(line: 1376, column: 41, scope: !876)
!4948 = !DILocation(line: 1377, column: 1, scope: !876)
!4949 = !DILocation(line: 1380, column: 47, scope: !882)
!4950 = !DILocation(line: 1381, column: 52, scope: !882)
!4951 = !DILocation(line: 1383, column: 37, scope: !882)
!4952 = !DILocation(line: 1383, column: 4, scope: !882)
!4953 = !DILocation(line: 1383, column: 12, scope: !882)
!4954 = !DILocation(line: 1383, column: 35, scope: !882)
!4955 = !DILocation(line: 1384, column: 1, scope: !882)
!4956 = !DILocation(line: 1387, column: 48, scope: !888)
!4957 = !DILocation(line: 1388, column: 59, scope: !888)
!4958 = !DILocation(line: 1389, column: 57, scope: !888)
!4959 = !DILocation(line: 1391, column: 43, scope: !888)
!4960 = !DILocation(line: 1391, column: 4, scope: !888)
!4961 = !DILocation(line: 1391, column: 12, scope: !888)
!4962 = !DILocation(line: 1391, column: 41, scope: !888)
!4963 = !DILocation(line: 1392, column: 41, scope: !888)
!4964 = !DILocation(line: 1392, column: 4, scope: !888)
!4965 = !DILocation(line: 1392, column: 12, scope: !888)
!4966 = !DILocation(line: 1392, column: 39, scope: !888)
!4967 = !DILocation(line: 1393, column: 1, scope: !888)
!4968 = !DILocation(line: 1396, column: 53, scope: !895)
!4969 = !DILocation(line: 1397, column: 64, scope: !895)
!4970 = !DILocation(line: 1398, column: 43, scope: !895)
!4971 = !DILocation(line: 1398, column: 4, scope: !895)
!4972 = !DILocation(line: 1398, column: 12, scope: !895)
!4973 = !DILocation(line: 1398, column: 41, scope: !895)
!4974 = !DILocation(line: 1399, column: 1, scope: !895)
!4975 = !DILocation(line: 1402, column: 51, scope: !901)
!4976 = !DILocation(line: 1403, column: 60, scope: !901)
!4977 = !DILocation(line: 1404, column: 41, scope: !901)
!4978 = !DILocation(line: 1404, column: 4, scope: !901)
!4979 = !DILocation(line: 1404, column: 12, scope: !901)
!4980 = !DILocation(line: 1404, column: 39, scope: !901)
!4981 = !DILocation(line: 1405, column: 1, scope: !901)
!4982 = !DILocation(line: 1408, column: 48, scope: !907)
!4983 = !DILocation(line: 1409, column: 54, scope: !907)
!4984 = !DILocation(line: 1411, column: 38, scope: !907)
!4985 = !DILocation(line: 1411, column: 4, scope: !907)
!4986 = !DILocation(line: 1411, column: 12, scope: !907)
!4987 = !DILocation(line: 1411, column: 36, scope: !907)
!4988 = !DILocation(line: 1412, column: 1, scope: !907)
!4989 = !DILocation(line: 1415, column: 52, scope: !913)
!4990 = !DILocation(line: 1416, column: 62, scope: !913)
!4991 = !DILocation(line: 1418, column: 42, scope: !913)
!4992 = !DILocation(line: 1418, column: 4, scope: !913)
!4993 = !DILocation(line: 1418, column: 12, scope: !913)
!4994 = !DILocation(line: 1418, column: 40, scope: !913)
!4995 = !DILocation(line: 1419, column: 1, scope: !913)
!4996 = !DILocation(line: 1422, column: 55, scope: !919)
!4997 = !DILocation(line: 1422, column: 69, scope: !919)
!4998 = !DILocation(line: 1424, column: 7, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !919, file: !162, line: 1424, column: 7)
!5000 = !DILocation(line: 1424, column: 7, scope: !919)
!5001 = !DILocation(line: 1425, column: 59, scope: !4999)
!5002 = !DILocation(line: 1425, column: 47, scope: !4999)
!5003 = !DILocation(line: 1425, column: 6, scope: !4999)
!5004 = !DILocation(line: 1425, column: 14, scope: !4999)
!5005 = !DILocation(line: 1425, column: 45, scope: !4999)
!5006 = !DILocation(line: 1425, column: 5, scope: !4999)
!5007 = !DILocation(line: 1427, column: 47, scope: !4999)
!5008 = !DILocation(line: 1427, column: 6, scope: !4999)
!5009 = !DILocation(line: 1427, column: 14, scope: !4999)
!5010 = !DILocation(line: 1427, column: 45, scope: !4999)
!5011 = !DILocation(line: 1428, column: 1, scope: !919)
!5012 = !DILocation(line: 1431, column: 48, scope: !923)
!5013 = !DILocation(line: 1432, column: 54, scope: !923)
!5014 = !DILocation(line: 1434, column: 38, scope: !923)
!5015 = !DILocation(line: 1434, column: 4, scope: !923)
!5016 = !DILocation(line: 1434, column: 12, scope: !923)
!5017 = !DILocation(line: 1434, column: 36, scope: !923)
!5018 = !DILocation(line: 1435, column: 1, scope: !923)
!5019 = !DILocation(line: 1438, column: 50, scope: !929)
!5020 = !DILocation(line: 1439, column: 58, scope: !929)
!5021 = !DILocation(line: 1440, column: 37, scope: !929)
!5022 = !DILocation(line: 1442, column: 40, scope: !929)
!5023 = !DILocation(line: 1442, column: 4, scope: !929)
!5024 = !DILocation(line: 1442, column: 12, scope: !929)
!5025 = !DILocation(line: 1442, column: 38, scope: !929)
!5026 = !DILocation(line: 1443, column: 44, scope: !929)
!5027 = !DILocation(line: 1443, column: 4, scope: !929)
!5028 = !DILocation(line: 1443, column: 12, scope: !929)
!5029 = !DILocation(line: 1443, column: 42, scope: !929)
!5030 = !DILocation(line: 1444, column: 1, scope: !929)
!5031 = !DILocation(line: 1447, column: 46, scope: !936)
!5032 = !DILocation(line: 1448, column: 50, scope: !936)
!5033 = !DILocation(line: 1450, column: 36, scope: !936)
!5034 = !DILocation(line: 1450, column: 4, scope: !936)
!5035 = !DILocation(line: 1450, column: 12, scope: !936)
!5036 = !DILocation(line: 1450, column: 34, scope: !936)
!5037 = !DILocation(line: 1451, column: 1, scope: !936)
!5038 = !DILocation(line: 1454, column: 46, scope: !942)
!5039 = !DILocation(line: 1455, column: 50, scope: !942)
!5040 = !DILocation(line: 1457, column: 36, scope: !942)
!5041 = !DILocation(line: 1457, column: 4, scope: !942)
!5042 = !DILocation(line: 1457, column: 12, scope: !942)
!5043 = !DILocation(line: 1457, column: 34, scope: !942)
!5044 = !DILocation(line: 1458, column: 1, scope: !942)
!5045 = !DILocation(line: 1461, column: 45, scope: !948)
!5046 = !DILocation(line: 1462, column: 48, scope: !948)
!5047 = !DILocation(line: 1464, column: 35, scope: !948)
!5048 = !DILocation(line: 1464, column: 4, scope: !948)
!5049 = !DILocation(line: 1464, column: 12, scope: !948)
!5050 = !DILocation(line: 1464, column: 33, scope: !948)
!5051 = !DILocation(line: 1465, column: 1, scope: !948)
!5052 = !DILocation(line: 1468, column: 42, scope: !954)
!5053 = !DILocation(line: 1469, column: 42, scope: !954)
!5054 = !DILocation(line: 1470, column: 32, scope: !954)
!5055 = !DILocation(line: 1470, column: 4, scope: !954)
!5056 = !DILocation(line: 1470, column: 12, scope: !954)
!5057 = !DILocation(line: 1470, column: 30, scope: !954)
!5058 = !DILocation(line: 1471, column: 1, scope: !954)
!5059 = !DILocation(line: 1474, column: 46, scope: !960)
!5060 = !DILocation(line: 1475, column: 55, scope: !960)
!5061 = !DILocation(line: 1478, column: 8, scope: !5062)
!5062 = distinct !DILexicalBlock(scope: !960, file: !162, line: 1478, column: 7)
!5063 = !DILocation(line: 1478, column: 16, scope: !5062)
!5064 = !DILocation(line: 1478, column: 32, scope: !5062)
!5065 = !DILocation(line: 1478, column: 41, scope: !5062)
!5066 = !DILocation(line: 1478, column: 56, scope: !5062)
!5067 = !DILocation(line: 1478, column: 60, scope: !5068)
!5068 = !DILexicalBlockFile(scope: !5062, file: !162, discriminator: 1)
!5069 = !DILocation(line: 1478, column: 68, scope: !5062)
!5070 = !DILocation(line: 1478, column: 84, scope: !5062)
!5071 = !DILocation(line: 1478, column: 93, scope: !5062)
!5072 = !DILocation(line: 1478, column: 7, scope: !960)
!5073 = !DILocation(line: 1479, column: 5, scope: !5062)
!5074 = !DILocation(line: 1481, column: 36, scope: !960)
!5075 = !DILocation(line: 1481, column: 4, scope: !960)
!5076 = !DILocation(line: 1481, column: 12, scope: !960)
!5077 = !DILocation(line: 1481, column: 34, scope: !960)
!5078 = !DILocation(line: 1482, column: 3, scope: !960)
!5079 = !DILocation(line: 1486, column: 1, scope: !960)
!5080 = !DILocation(line: 1489, column: 36, scope: !966)
!5081 = !DILocation(line: 1490, column: 31, scope: !966)
!5082 = !DILocation(line: 1493, column: 8, scope: !5083)
!5083 = distinct !DILexicalBlock(scope: !966, file: !162, line: 1493, column: 7)
!5084 = !DILocation(line: 1493, column: 16, scope: !5083)
!5085 = !DILocation(line: 1493, column: 32, scope: !5083)
!5086 = !DILocation(line: 1493, column: 41, scope: !5083)
!5087 = !DILocation(line: 1493, column: 56, scope: !5083)
!5088 = !DILocation(line: 1493, column: 60, scope: !5089)
!5089 = !DILexicalBlockFile(scope: !5083, file: !162, discriminator: 1)
!5090 = !DILocation(line: 1493, column: 68, scope: !5083)
!5091 = !DILocation(line: 1493, column: 84, scope: !5083)
!5092 = !DILocation(line: 1493, column: 93, scope: !5083)
!5093 = !DILocation(line: 1493, column: 7, scope: !966)
!5094 = !DILocation(line: 1494, column: 5, scope: !5083)
!5095 = !DILocation(line: 1495, column: 34, scope: !966)
!5096 = !DILocation(line: 1495, column: 4, scope: !966)
!5097 = !DILocation(line: 1495, column: 12, scope: !966)
!5098 = !DILocation(line: 1495, column: 32, scope: !966)
!5099 = !DILocation(line: 1496, column: 3, scope: !966)
!5100 = !DILocation(line: 1497, column: 1, scope: !966)
!5101 = !DILocation(line: 1500, column: 30, scope: !972)
!5102 = !DILocation(line: 1500, column: 50, scope: !972)
!5103 = !DILocation(line: 1500, column: 57, scope: !972)
!5104 = !DILocation(line: 1500, column: 66, scope: !972)
!5105 = !DILocation(line: 1502, column: 12, scope: !972)
!5106 = !DILocation(line: 1502, column: 20, scope: !972)
!5107 = !DILocation(line: 1502, column: 36, scope: !972)
!5108 = !DILocation(line: 1502, column: 3, scope: !972)
!5109 = !DILocation(line: 1504, column: 6, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !972, file: !162, line: 1502, column: 46)
!5111 = !DILocation(line: 1504, column: 14, scope: !5110)
!5112 = !DILocation(line: 1504, column: 27, scope: !5110)
!5113 = !DILocation(line: 1505, column: 5, scope: !5110)
!5114 = !DILocation(line: 1507, column: 6, scope: !5110)
!5115 = !DILocation(line: 1507, column: 14, scope: !5110)
!5116 = !DILocation(line: 1507, column: 27, scope: !5110)
!5117 = !DILocation(line: 1508, column: 5, scope: !5110)
!5118 = !DILocation(line: 1510, column: 10, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5110, file: !162, line: 1510, column: 9)
!5120 = !DILocation(line: 1510, column: 18, scope: !5119)
!5121 = !DILocation(line: 1510, column: 34, scope: !5119)
!5122 = !DILocation(line: 1510, column: 48, scope: !5119)
!5123 = !DILocation(line: 1510, column: 65, scope: !5124)
!5124 = !DILexicalBlockFile(scope: !5119, file: !162, discriminator: 1)
!5125 = !DILocation(line: 1510, column: 52, scope: !5119)
!5126 = !DILocation(line: 1510, column: 9, scope: !5110)
!5127 = !DILocation(line: 1511, column: 8, scope: !5128)
!5128 = distinct !DILexicalBlock(scope: !5119, file: !162, line: 1510, column: 74)
!5129 = !DILocation(line: 1511, column: 16, scope: !5128)
!5130 = !DILocation(line: 1511, column: 29, scope: !5128)
!5131 = !DILocation(line: 1512, column: 7, scope: !5128)
!5132 = !DILocation(line: 1510, column: 71, scope: !5133)
!5133 = !DILexicalBlockFile(scope: !5134, file: !162, discriminator: 3)
!5134 = !DILexicalBlockFile(scope: !5119, file: !162, discriminator: 2)
!5135 = !DILocation(line: 1515, column: 6, scope: !5110)
!5136 = !DILocation(line: 1515, column: 14, scope: !5110)
!5137 = !DILocation(line: 1515, column: 30, scope: !5110)
!5138 = !DILocation(line: 1515, column: 39, scope: !5110)
!5139 = !DILocation(line: 1516, column: 3, scope: !5110)
!5140 = !DILocation(line: 1518, column: 7, scope: !982)
!5141 = !DILocation(line: 1518, column: 11, scope: !982)
!5142 = !DILocation(line: 1518, column: 7, scope: !972)
!5143 = !DILocation(line: 1519, column: 55, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !982, file: !162, line: 1518, column: 17)
!5145 = !DILocation(line: 1519, column: 45, scope: !5144)
!5146 = !DILocation(line: 1519, column: 6, scope: !5144)
!5147 = !DILocation(line: 1519, column: 14, scope: !5144)
!5148 = !DILocation(line: 1519, column: 30, scope: !5144)
!5149 = !DILocation(line: 1519, column: 43, scope: !5144)
!5150 = !{!2396, !2291, i64 916}
!5151 = !DILocation(line: 1520, column: 10, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !5144, file: !162, line: 1520, column: 9)
!5153 = !DILocation(line: 1520, column: 9, scope: !5144)
!5154 = !DILocation(line: 1521, column: 7, scope: !5152)
!5155 = !DILocation(line: 1522, column: 32, scope: !5144)
!5156 = !DILocation(line: 1522, column: 40, scope: !5144)
!5157 = !DILocation(line: 1522, column: 6, scope: !5144)
!5158 = !DILocation(line: 1522, column: 14, scope: !5144)
!5159 = !DILocation(line: 1522, column: 29, scope: !5144)
!5160 = !DILocation(line: 1523, column: 32, scope: !5144)
!5161 = !DILocation(line: 1523, column: 40, scope: !5144)
!5162 = !DILocation(line: 1523, column: 6, scope: !5144)
!5163 = !DILocation(line: 1523, column: 14, scope: !5144)
!5164 = !DILocation(line: 1523, column: 29, scope: !5144)
!5165 = !DILocation(line: 1529, column: 30, scope: !5144)
!5166 = !DILocation(line: 1529, column: 38, scope: !5144)
!5167 = !DILocation(line: 1529, column: 51, scope: !5144)
!5168 = !DILocation(line: 1529, column: 60, scope: !5144)
!5169 = !DILocation(line: 1529, column: 68, scope: !5144)
!5170 = !DILocation(line: 1529, column: 83, scope: !5144)
!5171 = !DILocation(line: 1529, column: 91, scope: !5144)
!5172 = !DILocation(line: 1529, column: 109, scope: !5144)
!5173 = !DILocation(line: 1529, column: 117, scope: !5144)
!5174 = !DILocation(line: 1529, column: 29, scope: !5144)
!5175 = !DILocation(line: 1529, column: 6, scope: !5144)
!5176 = !DILocation(line: 1529, column: 14, scope: !5144)
!5177 = !DILocation(line: 1529, column: 27, scope: !5144)
!5178 = !DILocation(line: 1531, column: 10, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5144, file: !162, line: 1531, column: 9)
!5180 = !DILocation(line: 1531, column: 18, scope: !5179)
!5181 = !DILocation(line: 1531, column: 31, scope: !5179)
!5182 = !DILocation(line: 1531, column: 9, scope: !5144)
!5183 = !DILocation(line: 1532, column: 16, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5179, file: !162, line: 1531, column: 50)
!5185 = !DILocation(line: 1532, column: 24, scope: !5184)
!5186 = !DILocation(line: 1532, column: 40, scope: !5184)
!5187 = !DILocation(line: 1532, column: 7, scope: !5184)
!5188 = !DILocation(line: 1534, column: 13, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !5184, file: !162, line: 1532, column: 50)
!5190 = !DILocation(line: 1534, column: 21, scope: !5189)
!5191 = !{!2396, !2290, i64 288}
!5192 = !DILocation(line: 1534, column: 35, scope: !5189)
!5193 = !{!2399, !2290, i64 104}
!5194 = !DILocation(line: 1534, column: 52, scope: !5189)
!5195 = !DILocation(line: 1534, column: 60, scope: !5189)
!5196 = !DILocation(line: 1534, column: 74, scope: !5189)
!5197 = !DILocation(line: 1534, column: 82, scope: !5189)
!5198 = !DILocation(line: 1534, column: 99, scope: !5189)
!5199 = !DILocation(line: 1534, column: 107, scope: !5189)
!5200 = !DILocation(line: 1534, column: 123, scope: !5189)
!5201 = !DILocation(line: 1534, column: 131, scope: !5189)
!5202 = !DILocation(line: 1534, column: 10, scope: !5189)
!5203 = !DILocation(line: 1535, column: 36, scope: !5189)
!5204 = !DILocation(line: 1535, column: 44, scope: !5189)
!5205 = !DILocation(line: 1535, column: 10, scope: !5189)
!5206 = !DILocation(line: 1535, column: 18, scope: !5189)
!5207 = !DILocation(line: 1535, column: 33, scope: !5189)
!5208 = !DILocation(line: 1536, column: 9, scope: !5189)
!5209 = !DILocation(line: 1539, column: 10, scope: !5189)
!5210 = !DILocation(line: 1539, column: 18, scope: !5189)
!5211 = !DILocation(line: 1539, column: 34, scope: !5189)
!5212 = !DILocation(line: 1539, column: 43, scope: !5189)
!5213 = !DILocation(line: 1539, column: 9, scope: !5189)
!5214 = !DILocation(line: 1542, column: 9, scope: !5189)
!5215 = !DILocation(line: 1545, column: 32, scope: !5144)
!5216 = !DILocation(line: 1545, column: 40, scope: !5144)
!5217 = !DILocation(line: 1545, column: 6, scope: !5144)
!5218 = !DILocation(line: 1545, column: 14, scope: !5144)
!5219 = !DILocation(line: 1545, column: 29, scope: !5144)
!5220 = !DILocation(line: 1546, column: 6, scope: !5144)
!5221 = !DILocation(line: 1546, column: 14, scope: !5144)
!5222 = !DILocation(line: 1546, column: 27, scope: !5144)
!5223 = !DILocation(line: 1547, column: 5, scope: !5144)
!5224 = !DILocation(line: 1612, column: 5, scope: !981)
!5225 = !DILocation(line: 1612, column: 11, scope: !981)
!5226 = !DILocation(line: 1612, column: 40, scope: !981)
!5227 = !DILocation(line: 1612, column: 48, scope: !981)
!5228 = !DILocation(line: 1612, column: 18, scope: !981)
!5229 = !DILocation(line: 1613, column: 9, scope: !5230)
!5230 = distinct !DILexicalBlock(scope: !981, file: !162, line: 1613, column: 9)
!5231 = !DILocation(line: 1613, column: 14, scope: !5230)
!5232 = !DILocation(line: 1613, column: 9, scope: !981)
!5233 = !DILocation(line: 1614, column: 7, scope: !5230)
!5234 = !DILocation(line: 1616, column: 14, scope: !5235)
!5235 = distinct !DILexicalBlock(scope: !5230, file: !162, line: 1615, column: 10)
!5236 = !DILocation(line: 1616, column: 20, scope: !5235)
!5237 = !DILocation(line: 1616, column: 23, scope: !5235)
!5238 = !DILocation(line: 1616, column: 7, scope: !5235)
!5239 = !DILocation(line: 1617, column: 38, scope: !5235)
!5240 = !DILocation(line: 1617, column: 46, scope: !5235)
!5241 = !DILocation(line: 1617, column: 51, scope: !5235)
!5242 = !DILocation(line: 1617, column: 14, scope: !5235)
!5243 = !DILocation(line: 1617, column: 7, scope: !5235)
!5244 = !DILocation(line: 1619, column: 3, scope: !982)
!5245 = !DILocation(line: 1620, column: 1, scope: !972)
!5246 = !DILocation(line: 702, column: 25, scope: !2003)
!5247 = !DILocation(line: 705, column: 10, scope: !5248)
!5248 = distinct !DILexicalBlock(scope: !2003, file: !162, line: 705, column: 9)
!5249 = !DILocation(line: 705, column: 18, scope: !5248)
!5250 = !DILocation(line: 705, column: 38, scope: !5248)
!5251 = !DILocation(line: 705, column: 9, scope: !2003)
!5252 = !DILocation(line: 706, column: 38, scope: !5248)
!5253 = !DILocation(line: 706, column: 8, scope: !5248)
!5254 = !DILocation(line: 706, column: 16, scope: !5248)
!5255 = !DILocation(line: 706, column: 36, scope: !5248)
!5256 = !DILocation(line: 706, column: 7, scope: !5248)
!5257 = !DILocation(line: 707, column: 10, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !2003, file: !162, line: 707, column: 9)
!5259 = !DILocation(line: 707, column: 18, scope: !5258)
!5260 = !DILocation(line: 707, column: 9, scope: !5258)
!5261 = !DILocation(line: 707, column: 9, scope: !2003)
!5262 = !DILocation(line: 711, column: 25, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5258, file: !162, line: 707, column: 25)
!5264 = !DILocation(line: 711, column: 14, scope: !5263)
!5265 = !DILocation(line: 711, column: 7, scope: !5263)
!5266 = !DILocation(line: 713, column: 5, scope: !2003)
!5267 = !DILocation(line: 714, column: 1, scope: !2003)
!5268 = !DILocation(line: 4913, column: 27, scope: !2078)
!5269 = !DILocation(line: 4914, column: 28, scope: !2078)
!5270 = !DILocation(line: 4915, column: 28, scope: !2078)
!5271 = !DILocation(line: 4916, column: 29, scope: !2078)
!5272 = !DILocation(line: 4918, column: 11, scope: !2078)
!5273 = !DILocation(line: 4918, column: 19, scope: !2078)
!5274 = !DILocation(line: 4918, column: 3, scope: !2078)
!5275 = !DILocation(line: 1679, column: 34, scope: !992)
!5276 = !DILocation(line: 1679, column: 46, scope: !992)
!5277 = !DILocation(line: 1681, column: 12, scope: !992)
!5278 = !DILocation(line: 1681, column: 20, scope: !992)
!5279 = !DILocation(line: 1681, column: 36, scope: !992)
!5280 = !DILocation(line: 1681, column: 3, scope: !992)
!5281 = !DILocation(line: 1683, column: 6, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !992, file: !162, line: 1681, column: 46)
!5283 = !DILocation(line: 1683, column: 14, scope: !5282)
!5284 = !DILocation(line: 1683, column: 27, scope: !5282)
!5285 = !DILocation(line: 1684, column: 5, scope: !5282)
!5286 = !DILocation(line: 1686, column: 6, scope: !5282)
!5287 = !DILocation(line: 1686, column: 14, scope: !5282)
!5288 = !DILocation(line: 1686, column: 27, scope: !5282)
!5289 = !DILocation(line: 1687, column: 5, scope: !5282)
!5290 = !DILocation(line: 1689, column: 3, scope: !5282)
!5291 = !DILocation(line: 1691, column: 7, scope: !1000)
!5292 = !DILocation(line: 1691, column: 14, scope: !1000)
!5293 = !DILocation(line: 1691, column: 22, scope: !1000)
!5294 = !DILocation(line: 1691, column: 38, scope: !1000)
!5295 = !DILocation(line: 1691, column: 46, scope: !1000)
!5296 = !DILocation(line: 1691, column: 35, scope: !1000)
!5297 = !DILocation(line: 1691, column: 11, scope: !1000)
!5298 = !DILocation(line: 1691, column: 7, scope: !992)
!5299 = !DILocation(line: 1693, column: 5, scope: !999)
!5300 = !DILocation(line: 1693, column: 9, scope: !999)
!5301 = !DILocation(line: 1693, column: 22, scope: !999)
!5302 = !DILocation(line: 1693, column: 35, scope: !999)
!5303 = !DILocation(line: 1693, column: 43, scope: !999)
!5304 = !DILocation(line: 1693, column: 59, scope: !999)
!5305 = !DILocation(line: 1693, column: 67, scope: !999)
!5306 = !DILocation(line: 1693, column: 56, scope: !999)
!5307 = !DILocation(line: 1693, column: 28, scope: !999)
!5308 = !DILocation(line: 1693, column: 26, scope: !999)
!5309 = !DILocation(line: 1695, column: 5, scope: !999)
!5310 = !DILocation(line: 1695, column: 9, scope: !999)
!5311 = !DILocation(line: 1695, column: 23, scope: !999)
!5312 = !DILocation(line: 1695, column: 31, scope: !999)
!5313 = !DILocation(line: 1695, column: 47, scope: !999)
!5314 = !DILocation(line: 1695, column: 55, scope: !999)
!5315 = !DILocation(line: 1695, column: 44, scope: !999)
!5316 = !DILocation(line: 1695, column: 16, scope: !999)
!5317 = !DILocation(line: 1697, column: 9, scope: !5318)
!5318 = distinct !DILexicalBlock(scope: !999, file: !162, line: 1697, column: 9)
!5319 = !DILocation(line: 1697, column: 14, scope: !5318)
!5320 = !DILocation(line: 1697, column: 9, scope: !999)
!5321 = !DILocation(line: 1698, column: 12, scope: !5318)
!5322 = !DILocation(line: 1698, column: 7, scope: !5318)
!5323 = !DILocation(line: 1699, column: 19, scope: !999)
!5324 = !DILocation(line: 1699, column: 16, scope: !999)
!5325 = !DILocation(line: 1701, column: 9, scope: !1006)
!5326 = !DILocation(line: 1701, column: 24, scope: !1006)
!5327 = !DILocation(line: 1701, column: 32, scope: !1006)
!5328 = !DILocation(line: 1701, column: 48, scope: !1006)
!5329 = !DILocation(line: 1701, column: 56, scope: !1006)
!5330 = !DILocation(line: 1701, column: 45, scope: !1006)
!5331 = !DILocation(line: 1701, column: 20, scope: !1006)
!5332 = !DILocation(line: 1701, column: 9, scope: !999)
!5333 = !DILocation(line: 1703, column: 11, scope: !1004)
!5334 = !DILocation(line: 1703, column: 19, scope: !1004)
!5335 = !DILocation(line: 1703, column: 27, scope: !1004)
!5336 = !DILocation(line: 1703, column: 43, scope: !1004)
!5337 = !DILocation(line: 1703, column: 51, scope: !1004)
!5338 = !DILocation(line: 1703, column: 40, scope: !1004)
!5339 = !DILocation(line: 1703, column: 16, scope: !1004)
!5340 = !DILocation(line: 1703, column: 11, scope: !1005)
!5341 = !DILocation(line: 1704, column: 9, scope: !1003)
!5342 = !DILocation(line: 1704, column: 13, scope: !1003)
!5343 = !DILocation(line: 1704, column: 29, scope: !1003)
!5344 = !DILocation(line: 1704, column: 37, scope: !1003)
!5345 = !DILocation(line: 1704, column: 53, scope: !1003)
!5346 = !DILocation(line: 1704, column: 61, scope: !1003)
!5347 = !DILocation(line: 1704, column: 50, scope: !1003)
!5348 = !DILocation(line: 1704, column: 22, scope: !1003)
!5349 = !DILocation(line: 1704, column: 74, scope: !1003)
!5350 = !DILocation(line: 1704, column: 72, scope: !1003)
!5351 = !DILocation(line: 1705, column: 18, scope: !1003)
!5352 = !DILocation(line: 1705, column: 26, scope: !1003)
!5353 = !DILocation(line: 1705, column: 57, scope: !1003)
!5354 = !DILocation(line: 1705, column: 38, scope: !1003)
!5355 = !DILocation(line: 1705, column: 39, scope: !1003)
!5356 = !DILocation(line: 1705, column: 47, scope: !1003)
!5357 = !DILocation(line: 1705, column: 67, scope: !1003)
!5358 = !DILocation(line: 1705, column: 75, scope: !1003)
!5359 = !DILocation(line: 1705, column: 91, scope: !1003)
!5360 = !DILocation(line: 1705, column: 99, scope: !1003)
!5361 = !DILocation(line: 1705, column: 88, scope: !1003)
!5362 = !DILocation(line: 1705, column: 114, scope: !1003)
!5363 = !DILocation(line: 1705, column: 112, scope: !1003)
!5364 = !DILocation(line: 1705, column: 9, scope: !1003)
!5365 = !DILocation(line: 1706, column: 34, scope: !1003)
!5366 = !DILocation(line: 1706, column: 10, scope: !1003)
!5367 = !DILocation(line: 1706, column: 18, scope: !1003)
!5368 = !DILocation(line: 1706, column: 31, scope: !1003)
!5369 = !DILocation(line: 1707, column: 34, scope: !1003)
!5370 = !DILocation(line: 1707, column: 10, scope: !1003)
!5371 = !DILocation(line: 1707, column: 18, scope: !1003)
!5372 = !DILocation(line: 1707, column: 31, scope: !1003)
!5373 = !DILocation(line: 1708, column: 7, scope: !1004)
!5374 = !DILocation(line: 1708, column: 7, scope: !1003)
!5375 = !DILocation(line: 1714, column: 5, scope: !1005)
!5376 = !DILocation(line: 1716, column: 7, scope: !1008)
!5377 = !DILocation(line: 1716, column: 13, scope: !1008)
!5378 = !DILocation(line: 1717, column: 7, scope: !1008)
!5379 = !DILocation(line: 1717, column: 11, scope: !1008)
!5380 = !DILocation(line: 1717, column: 31, scope: !1008)
!5381 = !DILocation(line: 1717, column: 39, scope: !1008)
!5382 = !DILocation(line: 1717, column: 55, scope: !1008)
!5383 = !DILocation(line: 1717, column: 63, scope: !1008)
!5384 = !DILocation(line: 1717, column: 52, scope: !1008)
!5385 = !DILocation(line: 1717, column: 24, scope: !1008)
!5386 = !DILocation(line: 1718, column: 11, scope: !5387)
!5387 = distinct !DILexicalBlock(scope: !1008, file: !162, line: 1718, column: 11)
!5388 = !DILocation(line: 1718, column: 22, scope: !5387)
!5389 = !DILocation(line: 1718, column: 11, scope: !1008)
!5390 = !DILocation(line: 1719, column: 20, scope: !5387)
!5391 = !DILocation(line: 1719, column: 9, scope: !5387)
!5392 = !DILocation(line: 1720, column: 7, scope: !1008)
!5393 = !DILocation(line: 1721, column: 20, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !1008, file: !162, line: 1720, column: 10)
!5395 = !DILocation(line: 1722, column: 7, scope: !5394)
!5396 = !DILocation(line: 1722, column: 16, scope: !5397)
!5397 = !DILexicalBlockFile(scope: !1008, file: !162, discriminator: 1)
!5398 = !DILocation(line: 1722, column: 29, scope: !1008)
!5399 = !DILocation(line: 1722, column: 27, scope: !1008)
!5400 = !DILocation(line: 1723, column: 25, scope: !1008)
!5401 = !DILocation(line: 1723, column: 33, scope: !1008)
!5402 = !DILocation(line: 1723, column: 39, scope: !1008)
!5403 = !DILocation(line: 1723, column: 51, scope: !1008)
!5404 = !DILocation(line: 1723, column: 50, scope: !1008)
!5405 = !DILocation(line: 1723, column: 14, scope: !1008)
!5406 = !DILocation(line: 1724, column: 11, scope: !5407)
!5407 = distinct !DILexicalBlock(scope: !1008, file: !162, line: 1724, column: 11)
!5408 = !DILocation(line: 1724, column: 18, scope: !5407)
!5409 = !DILocation(line: 1724, column: 11, scope: !1008)
!5410 = !DILocation(line: 1725, column: 10, scope: !5411)
!5411 = distinct !DILexicalBlock(scope: !5407, file: !162, line: 1724, column: 24)
!5412 = !DILocation(line: 1725, column: 18, scope: !5411)
!5413 = !DILocation(line: 1725, column: 31, scope: !5411)
!5414 = !DILocation(line: 1726, column: 9, scope: !5411)
!5415 = !DILocation(line: 1728, column: 31, scope: !1008)
!5416 = !DILocation(line: 1728, column: 40, scope: !1008)
!5417 = !DILocation(line: 1728, column: 38, scope: !1008)
!5418 = !DILocation(line: 1728, column: 8, scope: !1008)
!5419 = !DILocation(line: 1728, column: 16, scope: !1008)
!5420 = !DILocation(line: 1728, column: 29, scope: !1008)
!5421 = !DILocation(line: 1730, column: 12, scope: !1012)
!5422 = !DILocation(line: 1730, column: 20, scope: !1012)
!5423 = !DILocation(line: 1730, column: 11, scope: !1012)
!5424 = !DILocation(line: 1730, column: 11, scope: !1008)
!5425 = !DILocation(line: 1731, column: 9, scope: !1011)
!5426 = !DILocation(line: 1731, column: 13, scope: !1011)
!5427 = !DILocation(line: 1731, column: 27, scope: !1011)
!5428 = !DILocation(line: 1731, column: 35, scope: !1011)
!5429 = !DILocation(line: 1731, column: 51, scope: !1011)
!5430 = !DILocation(line: 1731, column: 59, scope: !1011)
!5431 = !DILocation(line: 1731, column: 48, scope: !1011)
!5432 = !DILocation(line: 1731, column: 20, scope: !1011)
!5433 = !DILocation(line: 1732, column: 13, scope: !5434)
!5434 = distinct !DILexicalBlock(scope: !1011, file: !162, line: 1732, column: 13)
!5435 = !DILocation(line: 1732, column: 18, scope: !5434)
!5436 = !DILocation(line: 1732, column: 13, scope: !1011)
!5437 = !DILocation(line: 1733, column: 16, scope: !5434)
!5438 = !DILocation(line: 1733, column: 11, scope: !5434)
!5439 = !DILocation(line: 1734, column: 16, scope: !1011)
!5440 = !DILocation(line: 1734, column: 48, scope: !1011)
!5441 = !DILocation(line: 1734, column: 47, scope: !1011)
!5442 = !DILocation(line: 1734, column: 25, scope: !1011)
!5443 = !DILocation(line: 1734, column: 26, scope: !1011)
!5444 = !DILocation(line: 1734, column: 34, scope: !1011)
!5445 = !DILocation(line: 1734, column: 56, scope: !1011)
!5446 = !DILocation(line: 1734, column: 64, scope: !1011)
!5447 = !DILocation(line: 1734, column: 80, scope: !1011)
!5448 = !DILocation(line: 1734, column: 88, scope: !1011)
!5449 = !DILocation(line: 1734, column: 77, scope: !1011)
!5450 = !DILocation(line: 1734, column: 103, scope: !1011)
!5451 = !DILocation(line: 1734, column: 101, scope: !1011)
!5452 = !DILocation(line: 1734, column: 9, scope: !1011)
!5453 = !DILocation(line: 1735, column: 10, scope: !1011)
!5454 = !DILocation(line: 1735, column: 18, scope: !1011)
!5455 = !DILocation(line: 1735, column: 24, scope: !1011)
!5456 = !DILocation(line: 1735, column: 35, scope: !1011)
!5457 = !DILocation(line: 1735, column: 43, scope: !1011)
!5458 = !DILocation(line: 1736, column: 30, scope: !1011)
!5459 = !DILocation(line: 1736, column: 10, scope: !1011)
!5460 = !DILocation(line: 1736, column: 18, scope: !1011)
!5461 = !DILocation(line: 1736, column: 28, scope: !1011)
!5462 = !DILocation(line: 1737, column: 34, scope: !1011)
!5463 = !DILocation(line: 1737, column: 42, scope: !1011)
!5464 = !DILocation(line: 1737, column: 56, scope: !1011)
!5465 = !DILocation(line: 1737, column: 64, scope: !1011)
!5466 = !DILocation(line: 1737, column: 80, scope: !1011)
!5467 = !DILocation(line: 1737, column: 88, scope: !1011)
!5468 = !DILocation(line: 1737, column: 77, scope: !1011)
!5469 = !DILocation(line: 1737, column: 52, scope: !1011)
!5470 = !DILocation(line: 1737, column: 104, scope: !1011)
!5471 = !DILocation(line: 1737, column: 102, scope: !1011)
!5472 = !DILocation(line: 1737, column: 10, scope: !1011)
!5473 = !DILocation(line: 1737, column: 18, scope: !1011)
!5474 = !DILocation(line: 1737, column: 31, scope: !1011)
!5475 = !DILocation(line: 1738, column: 34, scope: !1011)
!5476 = !DILocation(line: 1738, column: 42, scope: !1011)
!5477 = !DILocation(line: 1738, column: 54, scope: !1011)
!5478 = !DILocation(line: 1738, column: 52, scope: !1011)
!5479 = !DILocation(line: 1738, column: 10, scope: !1011)
!5480 = !DILocation(line: 1738, column: 18, scope: !1011)
!5481 = !DILocation(line: 1738, column: 31, scope: !1011)
!5482 = !DILocation(line: 1739, column: 7, scope: !1012)
!5483 = !DILocation(line: 1739, column: 7, scope: !1011)
!5484 = !DILocation(line: 1741, column: 33, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !1012, file: !162, line: 1740, column: 12)
!5486 = !DILocation(line: 1741, column: 44, scope: !5485)
!5487 = !DILocation(line: 1741, column: 52, scope: !5485)
!5488 = !DILocation(line: 1741, column: 68, scope: !5485)
!5489 = !DILocation(line: 1741, column: 76, scope: !5485)
!5490 = !DILocation(line: 1741, column: 65, scope: !5485)
!5491 = !DILocation(line: 1741, column: 40, scope: !5485)
!5492 = !DILocation(line: 1741, column: 10, scope: !5485)
!5493 = !DILocation(line: 1741, column: 18, scope: !5485)
!5494 = !DILocation(line: 1741, column: 31, scope: !5485)
!5495 = !DILocation(line: 1742, column: 54, scope: !5485)
!5496 = !DILocation(line: 1742, column: 34, scope: !5485)
!5497 = !DILocation(line: 1742, column: 42, scope: !5485)
!5498 = !DILocation(line: 1742, column: 52, scope: !5485)
!5499 = !DILocation(line: 1742, column: 10, scope: !5485)
!5500 = !DILocation(line: 1742, column: 18, scope: !5485)
!5501 = !DILocation(line: 1742, column: 31, scope: !5485)
!5502 = !DILocation(line: 1752, column: 5, scope: !1006)
!5503 = !DILocation(line: 1752, column: 5, scope: !5504)
!5504 = !DILexicalBlockFile(scope: !1006, file: !162, discriminator: 1)
!5505 = !DILocation(line: 1753, column: 29, scope: !999)
!5506 = !DILocation(line: 1753, column: 37, scope: !999)
!5507 = !DILocation(line: 1753, column: 52, scope: !999)
!5508 = !DILocation(line: 1753, column: 6, scope: !999)
!5509 = !DILocation(line: 1753, column: 14, scope: !999)
!5510 = !DILocation(line: 1753, column: 26, scope: !999)
!5511 = !DILocation(line: 1754, column: 6, scope: !999)
!5512 = !DILocation(line: 1754, column: 14, scope: !999)
!5513 = !DILocation(line: 1754, column: 29, scope: !999)
!5514 = !DILocation(line: 1755, column: 3, scope: !1000)
!5515 = !DILocation(line: 1755, column: 3, scope: !5516)
!5516 = !DILexicalBlockFile(scope: !1000, file: !162, discriminator: 1)
!5517 = !DILocation(line: 1755, column: 3, scope: !999)
!5518 = !DILocation(line: 1756, column: 11, scope: !992)
!5519 = !DILocation(line: 1756, column: 19, scope: !992)
!5520 = !DILocation(line: 1756, column: 3, scope: !992)
!5521 = !DILocation(line: 1757, column: 1, scope: !992)
!5522 = !DILocation(line: 1623, column: 36, scope: !983)
!5523 = !DILocation(line: 1623, column: 48, scope: !983)
!5524 = !DILocation(line: 1623, column: 57, scope: !983)
!5525 = !DILocation(line: 1625, column: 3, scope: !983)
!5526 = !DILocation(line: 1625, column: 15, scope: !983)
!5527 = !DILocation(line: 1626, column: 3, scope: !983)
!5528 = !DILocation(line: 1626, column: 19, scope: !983)
!5529 = !DILocation(line: 1628, column: 12, scope: !983)
!5530 = !DILocation(line: 1628, column: 20, scope: !983)
!5531 = !DILocation(line: 1628, column: 36, scope: !983)
!5532 = !DILocation(line: 1628, column: 3, scope: !983)
!5533 = !DILocation(line: 1630, column: 6, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !983, file: !162, line: 1628, column: 46)
!5535 = !DILocation(line: 1630, column: 14, scope: !5534)
!5536 = !DILocation(line: 1630, column: 27, scope: !5534)
!5537 = !DILocation(line: 1631, column: 5, scope: !5534)
!5538 = !DILocation(line: 1633, column: 6, scope: !5534)
!5539 = !DILocation(line: 1633, column: 14, scope: !5534)
!5540 = !DILocation(line: 1633, column: 27, scope: !5534)
!5541 = !DILocation(line: 1634, column: 5, scope: !5534)
!5542 = !DILocation(line: 1636, column: 10, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5534, file: !162, line: 1636, column: 9)
!5544 = !DILocation(line: 1636, column: 18, scope: !5543)
!5545 = !DILocation(line: 1636, column: 34, scope: !5543)
!5546 = !DILocation(line: 1636, column: 48, scope: !5543)
!5547 = !DILocation(line: 1636, column: 65, scope: !5548)
!5548 = !DILexicalBlockFile(scope: !5543, file: !162, discriminator: 1)
!5549 = !DILocation(line: 1636, column: 52, scope: !5543)
!5550 = !DILocation(line: 1636, column: 9, scope: !5534)
!5551 = !DILocation(line: 1637, column: 8, scope: !5552)
!5552 = distinct !DILexicalBlock(scope: !5543, file: !162, line: 1636, column: 74)
!5553 = !DILocation(line: 1637, column: 16, scope: !5552)
!5554 = !DILocation(line: 1637, column: 29, scope: !5552)
!5555 = !DILocation(line: 1638, column: 7, scope: !5552)
!5556 = !DILocation(line: 1636, column: 71, scope: !5557)
!5557 = !DILexicalBlockFile(scope: !5558, file: !162, discriminator: 3)
!5558 = !DILexicalBlockFile(scope: !5543, file: !162, discriminator: 2)
!5559 = !DILocation(line: 1641, column: 6, scope: !5534)
!5560 = !DILocation(line: 1641, column: 14, scope: !5534)
!5561 = !DILocation(line: 1641, column: 30, scope: !5534)
!5562 = !DILocation(line: 1641, column: 39, scope: !5534)
!5563 = !DILocation(line: 1642, column: 3, scope: !5534)
!5564 = !DILocation(line: 1644, column: 12, scope: !983)
!5565 = !DILocation(line: 1644, column: 20, scope: !983)
!5566 = !DILocation(line: 1644, column: 9, scope: !983)
!5567 = !DILocation(line: 1645, column: 29, scope: !983)
!5568 = !DILocation(line: 1645, column: 4, scope: !983)
!5569 = !DILocation(line: 1645, column: 12, scope: !983)
!5570 = !DILocation(line: 1645, column: 27, scope: !983)
!5571 = !DILocation(line: 1646, column: 28, scope: !983)
!5572 = !DILocation(line: 1646, column: 4, scope: !983)
!5573 = !DILocation(line: 1646, column: 12, scope: !983)
!5574 = !DILocation(line: 1646, column: 25, scope: !983)
!5575 = !DILocation(line: 1647, column: 30, scope: !983)
!5576 = !DILocation(line: 1647, column: 38, scope: !983)
!5577 = !DILocation(line: 1647, column: 4, scope: !983)
!5578 = !DILocation(line: 1647, column: 12, scope: !983)
!5579 = !DILocation(line: 1647, column: 27, scope: !983)
!5580 = !DILocation(line: 1648, column: 36, scope: !983)
!5581 = !DILocation(line: 1648, column: 4, scope: !983)
!5582 = !DILocation(line: 1648, column: 12, scope: !983)
!5583 = !DILocation(line: 1648, column: 33, scope: !983)
!5584 = !DILocation(line: 1649, column: 53, scope: !983)
!5585 = !DILocation(line: 1649, column: 43, scope: !983)
!5586 = !DILocation(line: 1649, column: 4, scope: !983)
!5587 = !DILocation(line: 1649, column: 12, scope: !983)
!5588 = !DILocation(line: 1649, column: 28, scope: !983)
!5589 = !DILocation(line: 1649, column: 41, scope: !983)
!5590 = !DILocation(line: 1651, column: 28, scope: !983)
!5591 = !DILocation(line: 1651, column: 36, scope: !983)
!5592 = !DILocation(line: 1651, column: 49, scope: !983)
!5593 = !DILocation(line: 1651, column: 57, scope: !983)
!5594 = !DILocation(line: 1651, column: 65, scope: !983)
!5595 = !DILocation(line: 1651, column: 73, scope: !983)
!5596 = !DILocation(line: 1651, column: 91, scope: !983)
!5597 = !DILocation(line: 1651, column: 99, scope: !983)
!5598 = !DILocation(line: 1651, column: 27, scope: !983)
!5599 = !DILocation(line: 1651, column: 4, scope: !983)
!5600 = !DILocation(line: 1651, column: 12, scope: !983)
!5601 = !DILocation(line: 1651, column: 25, scope: !983)
!5602 = !DILocation(line: 1653, column: 8, scope: !5603)
!5603 = distinct !DILexicalBlock(scope: !983, file: !162, line: 1653, column: 7)
!5604 = !DILocation(line: 1653, column: 16, scope: !5603)
!5605 = !DILocation(line: 1653, column: 29, scope: !5603)
!5606 = !DILocation(line: 1653, column: 7, scope: !983)
!5607 = !DILocation(line: 1654, column: 32, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5603, file: !162, line: 1653, column: 48)
!5609 = !DILocation(line: 1654, column: 40, scope: !5608)
!5610 = !DILocation(line: 1654, column: 6, scope: !5608)
!5611 = !DILocation(line: 1654, column: 14, scope: !5608)
!5612 = !DILocation(line: 1654, column: 29, scope: !5608)
!5613 = !DILocation(line: 1655, column: 6, scope: !5608)
!5614 = !DILocation(line: 1655, column: 14, scope: !5608)
!5615 = !DILocation(line: 1655, column: 27, scope: !5608)
!5616 = !DILocation(line: 1656, column: 5, scope: !5608)
!5617 = !DILocation(line: 1659, column: 14, scope: !5618)
!5618 = distinct !DILexicalBlock(scope: !5603, file: !162, line: 1658, column: 8)
!5619 = !DILocation(line: 1659, column: 22, scope: !5618)
!5620 = !DILocation(line: 1659, column: 38, scope: !5618)
!5621 = !DILocation(line: 1659, column: 5, scope: !5618)
!5622 = !DILocation(line: 1661, column: 14, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5618, file: !162, line: 1659, column: 48)
!5624 = !DILocation(line: 1662, column: 7, scope: !5623)
!5625 = !DILocation(line: 1665, column: 11, scope: !5626)
!5626 = distinct !DILexicalBlock(scope: !5623, file: !162, line: 1665, column: 11)
!5627 = !DILocation(line: 1665, column: 11, scope: !5623)
!5628 = !DILocation(line: 1666, column: 10, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5626, file: !162, line: 1665, column: 20)
!5630 = !DILocation(line: 1666, column: 18, scope: !5629)
!5631 = !DILocation(line: 1666, column: 34, scope: !5629)
!5632 = !DILocation(line: 1666, column: 43, scope: !5629)
!5633 = !DILocation(line: 1667, column: 16, scope: !5629)
!5634 = !DILocation(line: 1667, column: 9, scope: !5629)
!5635 = !DILocation(line: 1665, column: 11, scope: !5636)
!5636 = !DILexicalBlockFile(scope: !5626, file: !162, discriminator: 1)
!5637 = !DILocation(line: 1670, column: 5, scope: !5623)
!5638 = !DILocation(line: 1673, column: 7, scope: !983)
!5639 = !DILocation(line: 1673, column: 15, scope: !983)
!5640 = !DILocation(line: 1673, column: 29, scope: !983)
!5641 = !DILocation(line: 1673, column: 46, scope: !983)
!5642 = !DILocation(line: 1673, column: 54, scope: !983)
!5643 = !DILocation(line: 1673, column: 68, scope: !983)
!5644 = !DILocation(line: 1673, column: 76, scope: !983)
!5645 = !DILocation(line: 1673, column: 93, scope: !983)
!5646 = !DILocation(line: 1673, column: 101, scope: !983)
!5647 = !DILocation(line: 1673, column: 117, scope: !983)
!5648 = !DILocation(line: 1673, column: 125, scope: !983)
!5649 = !DILocation(line: 1673, column: 4, scope: !983)
!5650 = !DILocation(line: 1674, column: 30, scope: !983)
!5651 = !DILocation(line: 1674, column: 38, scope: !983)
!5652 = !DILocation(line: 1674, column: 4, scope: !983)
!5653 = !DILocation(line: 1674, column: 12, scope: !983)
!5654 = !DILocation(line: 1674, column: 27, scope: !983)
!5655 = !DILocation(line: 1675, column: 10, scope: !983)
!5656 = !DILocation(line: 1675, column: 3, scope: !983)
!5657 = !DILocation(line: 1676, column: 1, scope: !983)
!5658 = !DILocation(line: 1760, column: 35, scope: !1013)
!5659 = !DILocation(line: 1760, column: 52, scope: !1013)
!5660 = !DILocation(line: 1762, column: 12, scope: !1013)
!5661 = !DILocation(line: 1762, column: 20, scope: !1013)
!5662 = !DILocation(line: 1762, column: 36, scope: !1013)
!5663 = !DILocation(line: 1762, column: 3, scope: !1013)
!5664 = !DILocation(line: 1764, column: 9, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5666, file: !162, line: 1764, column: 9)
!5666 = distinct !DILexicalBlock(scope: !1013, file: !162, line: 1762, column: 46)
!5667 = !DILocation(line: 1764, column: 9, scope: !5666)
!5668 = !DILocation(line: 1765, column: 8, scope: !5669)
!5669 = distinct !DILexicalBlock(scope: !5665, file: !162, line: 1764, column: 20)
!5670 = !DILocation(line: 1765, column: 16, scope: !5669)
!5671 = !DILocation(line: 1765, column: 29, scope: !5669)
!5672 = !DILocation(line: 1766, column: 7, scope: !5669)
!5673 = !DILocation(line: 1768, column: 6, scope: !5666)
!5674 = !DILocation(line: 1768, column: 14, scope: !5666)
!5675 = !DILocation(line: 1768, column: 30, scope: !5666)
!5676 = !DILocation(line: 1768, column: 39, scope: !5666)
!5677 = !DILocation(line: 1769, column: 5, scope: !5666)
!5678 = !DILocation(line: 1771, column: 6, scope: !5666)
!5679 = !DILocation(line: 1771, column: 14, scope: !5666)
!5680 = !DILocation(line: 1771, column: 27, scope: !5666)
!5681 = !DILocation(line: 1772, column: 5, scope: !5666)
!5682 = !DILocation(line: 1774, column: 9, scope: !5683)
!5683 = distinct !DILexicalBlock(scope: !5666, file: !162, line: 1774, column: 9)
!5684 = !DILocation(line: 1774, column: 9, scope: !5666)
!5685 = !DILocation(line: 1776, column: 12, scope: !5686)
!5686 = distinct !DILexicalBlock(scope: !5687, file: !162, line: 1776, column: 11)
!5687 = distinct !DILexicalBlock(scope: !5683, file: !162, line: 1774, column: 20)
!5688 = !DILocation(line: 1776, column: 20, scope: !5686)
!5689 = !DILocation(line: 1776, column: 11, scope: !5686)
!5690 = !DILocation(line: 1776, column: 11, scope: !5687)
!5691 = !DILocation(line: 1777, column: 10, scope: !5692)
!5692 = distinct !DILexicalBlock(scope: !5686, file: !162, line: 1776, column: 38)
!5693 = !DILocation(line: 1777, column: 18, scope: !5692)
!5694 = !DILocation(line: 1777, column: 31, scope: !5692)
!5695 = !DILocation(line: 1778, column: 9, scope: !5692)
!5696 = !DILocation(line: 1781, column: 8, scope: !5687)
!5697 = !DILocation(line: 1781, column: 16, scope: !5687)
!5698 = !DILocation(line: 1781, column: 32, scope: !5687)
!5699 = !DILocation(line: 1781, column: 41, scope: !5687)
!5700 = !DILocation(line: 1782, column: 5, scope: !5687)
!5701 = !DILocation(line: 1784, column: 8, scope: !5683)
!5702 = !DILocation(line: 1784, column: 16, scope: !5683)
!5703 = !DILocation(line: 1784, column: 32, scope: !5683)
!5704 = !DILocation(line: 1784, column: 41, scope: !5683)
!5705 = !DILocation(line: 1785, column: 3, scope: !5666)
!5706 = !DILocation(line: 1786, column: 3, scope: !1013)
!5707 = !DILocation(line: 1787, column: 1, scope: !1013)
!5708 = !DILocation(line: 1790, column: 37, scope: !1019)
!5709 = !DILocation(line: 1792, column: 3, scope: !1019)
!5710 = !DILocation(line: 1792, column: 19, scope: !1019)
!5711 = !DILocation(line: 1794, column: 8, scope: !5712)
!5712 = distinct !DILexicalBlock(scope: !1019, file: !162, line: 1794, column: 7)
!5713 = !DILocation(line: 1794, column: 16, scope: !5712)
!5714 = !DILocation(line: 1794, column: 32, scope: !5712)
!5715 = !DILocation(line: 1794, column: 41, scope: !5712)
!5716 = !DILocation(line: 1794, column: 7, scope: !1019)
!5717 = !DILocation(line: 1795, column: 6, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !5712, file: !162, line: 1794, column: 59)
!5719 = !DILocation(line: 1795, column: 14, scope: !5718)
!5720 = !DILocation(line: 1795, column: 27, scope: !5718)
!5721 = !DILocation(line: 1796, column: 5, scope: !5718)
!5722 = !DILocation(line: 1798, column: 4, scope: !1019)
!5723 = !DILocation(line: 1798, column: 12, scope: !1019)
!5724 = !DILocation(line: 1798, column: 28, scope: !1019)
!5725 = !DILocation(line: 1798, column: 37, scope: !1019)
!5726 = !DILocation(line: 1800, column: 28, scope: !1019)
!5727 = !DILocation(line: 1800, column: 36, scope: !1019)
!5728 = !DILocation(line: 1800, column: 49, scope: !1019)
!5729 = !DILocation(line: 1800, column: 58, scope: !1019)
!5730 = !DILocation(line: 1800, column: 66, scope: !1019)
!5731 = !DILocation(line: 1800, column: 81, scope: !1019)
!5732 = !DILocation(line: 1800, column: 89, scope: !1019)
!5733 = !DILocation(line: 1800, column: 107, scope: !1019)
!5734 = !DILocation(line: 1800, column: 115, scope: !1019)
!5735 = !DILocation(line: 1800, column: 27, scope: !1019)
!5736 = !DILocation(line: 1800, column: 4, scope: !1019)
!5737 = !DILocation(line: 1800, column: 12, scope: !1019)
!5738 = !DILocation(line: 1800, column: 25, scope: !1019)
!5739 = !DILocation(line: 1802, column: 8, scope: !5740)
!5740 = distinct !DILexicalBlock(scope: !1019, file: !162, line: 1802, column: 7)
!5741 = !DILocation(line: 1802, column: 16, scope: !5740)
!5742 = !DILocation(line: 1802, column: 29, scope: !5740)
!5743 = !DILocation(line: 1802, column: 7, scope: !1019)
!5744 = !DILocation(line: 1803, column: 32, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5740, file: !162, line: 1802, column: 48)
!5746 = !DILocation(line: 1803, column: 40, scope: !5745)
!5747 = !DILocation(line: 1803, column: 6, scope: !5745)
!5748 = !DILocation(line: 1803, column: 14, scope: !5745)
!5749 = !DILocation(line: 1803, column: 29, scope: !5745)
!5750 = !DILocation(line: 1804, column: 6, scope: !5745)
!5751 = !DILocation(line: 1804, column: 14, scope: !5745)
!5752 = !DILocation(line: 1804, column: 27, scope: !5745)
!5753 = !DILocation(line: 1805, column: 5, scope: !5745)
!5754 = !DILocation(line: 1808, column: 14, scope: !5755)
!5755 = distinct !DILexicalBlock(scope: !5740, file: !162, line: 1807, column: 8)
!5756 = !DILocation(line: 1808, column: 22, scope: !5755)
!5757 = !DILocation(line: 1808, column: 38, scope: !5755)
!5758 = !DILocation(line: 1808, column: 5, scope: !5755)
!5759 = !DILocation(line: 1810, column: 14, scope: !5760)
!5760 = distinct !DILexicalBlock(scope: !5755, file: !162, line: 1808, column: 48)
!5761 = !DILocation(line: 1811, column: 7, scope: !5760)
!5762 = !DILocation(line: 1814, column: 12, scope: !5763)
!5763 = distinct !DILexicalBlock(scope: !5760, file: !162, line: 1814, column: 11)
!5764 = !DILocation(line: 1814, column: 20, scope: !5763)
!5765 = !DILocation(line: 1814, column: 36, scope: !5763)
!5766 = !DILocation(line: 1814, column: 11, scope: !5763)
!5767 = !DILocation(line: 1814, column: 11, scope: !5760)
!5768 = !DILocation(line: 1815, column: 10, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5763, file: !162, line: 1814, column: 50)
!5770 = !DILocation(line: 1815, column: 18, scope: !5769)
!5771 = !DILocation(line: 1815, column: 34, scope: !5769)
!5772 = !DILocation(line: 1815, column: 43, scope: !5769)
!5773 = !DILocation(line: 1816, column: 16, scope: !5769)
!5774 = !DILocation(line: 1816, column: 9, scope: !5769)
!5775 = !DILocation(line: 1814, column: 47, scope: !5776)
!5776 = !DILexicalBlockFile(scope: !5763, file: !162, discriminator: 1)
!5777 = !DILocation(line: 1819, column: 5, scope: !5760)
!5778 = !DILocation(line: 1822, column: 7, scope: !1019)
!5779 = !DILocation(line: 1822, column: 15, scope: !1019)
!5780 = !DILocation(line: 1822, column: 29, scope: !1019)
!5781 = !DILocation(line: 1822, column: 46, scope: !1019)
!5782 = !DILocation(line: 1822, column: 54, scope: !1019)
!5783 = !DILocation(line: 1822, column: 68, scope: !1019)
!5784 = !DILocation(line: 1822, column: 76, scope: !1019)
!5785 = !DILocation(line: 1822, column: 93, scope: !1019)
!5786 = !DILocation(line: 1822, column: 101, scope: !1019)
!5787 = !DILocation(line: 1822, column: 117, scope: !1019)
!5788 = !DILocation(line: 1822, column: 125, scope: !1019)
!5789 = !DILocation(line: 1822, column: 4, scope: !1019)
!5790 = !DILocation(line: 1823, column: 30, scope: !1019)
!5791 = !DILocation(line: 1823, column: 38, scope: !1019)
!5792 = !DILocation(line: 1823, column: 4, scope: !1019)
!5793 = !DILocation(line: 1823, column: 12, scope: !1019)
!5794 = !DILocation(line: 1823, column: 27, scope: !1019)
!5795 = !DILocation(line: 1824, column: 10, scope: !1019)
!5796 = !DILocation(line: 1824, column: 3, scope: !1019)
!5797 = !DILocation(line: 1825, column: 1, scope: !1019)
!5798 = !DILocation(line: 1828, column: 41, scope: !1025)
!5799 = !DILocation(line: 1828, column: 68, scope: !1025)
!5800 = !DILocation(line: 1831, column: 4, scope: !1025)
!5801 = !DILocation(line: 1831, column: 13, scope: !1025)
!5802 = !DILocation(line: 1831, column: 21, scope: !1025)
!5803 = !{i64 0, i64 4, !2307, i64 4, i64 1, !2307}
!5804 = !DILocation(line: 1832, column: 1, scope: !1025)
!5805 = !DILocation(line: 1835, column: 37, scope: !1032)
!5806 = !DILocation(line: 1837, column: 11, scope: !1032)
!5807 = !DILocation(line: 1837, column: 19, scope: !1032)
!5808 = !DILocation(line: 1837, column: 3, scope: !1032)
!5809 = !DILocation(line: 1841, column: 44, scope: !1037)
!5810 = !DILocation(line: 1843, column: 8, scope: !5811)
!5811 = distinct !DILexicalBlock(scope: !1037, file: !162, line: 1843, column: 7)
!5812 = !DILocation(line: 1843, column: 16, scope: !5811)
!5813 = !DILocation(line: 1843, column: 7, scope: !5811)
!5814 = !DILocation(line: 1843, column: 7, scope: !1037)
!5815 = !DILocation(line: 1844, column: 13, scope: !5811)
!5816 = !DILocation(line: 1844, column: 21, scope: !5811)
!5817 = !DILocation(line: 1844, column: 46, scope: !5811)
!5818 = !DILocation(line: 1844, column: 54, scope: !5811)
!5819 = !DILocation(line: 1844, column: 72, scope: !5811)
!5820 = !DILocation(line: 1844, column: 80, scope: !5811)
!5821 = !DILocation(line: 1844, column: 69, scope: !5811)
!5822 = !DILocation(line: 1844, column: 42, scope: !5811)
!5823 = !DILocation(line: 1844, column: 5, scope: !5811)
!5824 = !DILocation(line: 1845, column: 3, scope: !1037)
!5825 = !DILocation(line: 1846, column: 1, scope: !1037)
!5826 = !DILocation(line: 1849, column: 44, scope: !1042)
!5827 = !DILocation(line: 1851, column: 8, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !1042, file: !162, line: 1851, column: 7)
!5829 = !DILocation(line: 1851, column: 16, scope: !5828)
!5830 = !DILocation(line: 1851, column: 7, scope: !5828)
!5831 = !DILocation(line: 1851, column: 31, scope: !5828)
!5832 = !DILocation(line: 1851, column: 35, scope: !5833)
!5833 = !DILexicalBlockFile(scope: !5828, file: !162, discriminator: 1)
!5834 = !DILocation(line: 1851, column: 43, scope: !5828)
!5835 = !DILocation(line: 1851, column: 34, scope: !5828)
!5836 = !DILocation(line: 1851, column: 7, scope: !1042)
!5837 = !DILocation(line: 1852, column: 19, scope: !5828)
!5838 = !DILocation(line: 1852, column: 27, scope: !5828)
!5839 = !DILocation(line: 1852, column: 45, scope: !5828)
!5840 = !DILocation(line: 1852, column: 53, scope: !5828)
!5841 = !DILocation(line: 1852, column: 42, scope: !5828)
!5842 = !DILocation(line: 1852, column: 12, scope: !5828)
!5843 = !DILocation(line: 1852, column: 5, scope: !5828)
!5844 = !DILocation(line: 1853, column: 3, scope: !1042)
!5845 = !DILocation(line: 1854, column: 1, scope: !1042)
!5846 = !DILocation(line: 1857, column: 40, scope: !1045)
!5847 = !DILocation(line: 1857, column: 53, scope: !1045)
!5848 = !DILocation(line: 1857, column: 66, scope: !1045)
!5849 = !DILocation(line: 1860, column: 8, scope: !5850)
!5850 = distinct !DILexicalBlock(scope: !1045, file: !162, line: 1860, column: 7)
!5851 = !DILocation(line: 1860, column: 16, scope: !5850)
!5852 = !DILocation(line: 1860, column: 7, scope: !5850)
!5853 = !DILocation(line: 1860, column: 28, scope: !5850)
!5854 = !DILocation(line: 1860, column: 32, scope: !5855)
!5855 = !DILexicalBlockFile(scope: !5850, file: !162, discriminator: 1)
!5856 = !DILocation(line: 1860, column: 40, scope: !5850)
!5857 = !DILocation(line: 1860, column: 31, scope: !5850)
!5858 = !DILocation(line: 1860, column: 7, scope: !1045)
!5859 = !DILocation(line: 1861, column: 22, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !5850, file: !162, line: 1860, column: 51)
!5861 = !DILocation(line: 1861, column: 30, scope: !5860)
!5862 = !DILocation(line: 1861, column: 45, scope: !5860)
!5863 = !DILocation(line: 1861, column: 53, scope: !5860)
!5864 = !DILocation(line: 1861, column: 42, scope: !5860)
!5865 = !DILocation(line: 1861, column: 15, scope: !5860)
!5866 = !DILocation(line: 1861, column: 6, scope: !5860)
!5867 = !DILocation(line: 1861, column: 13, scope: !5860)
!5868 = !DILocation(line: 1862, column: 20, scope: !5860)
!5869 = !DILocation(line: 1862, column: 28, scope: !5860)
!5870 = !DILocation(line: 1862, column: 44, scope: !5860)
!5871 = !DILocation(line: 1862, column: 52, scope: !5860)
!5872 = !DILocation(line: 1862, column: 41, scope: !5860)
!5873 = !DILocation(line: 1862, column: 13, scope: !5860)
!5874 = !DILocation(line: 1862, column: 6, scope: !5860)
!5875 = !DILocation(line: 1862, column: 11, scope: !5860)
!5876 = !DILocation(line: 1863, column: 13, scope: !5860)
!5877 = !DILocation(line: 1863, column: 21, scope: !5860)
!5878 = !DILocation(line: 1863, column: 5, scope: !5860)
!5879 = !DILocation(line: 1866, column: 3, scope: !1045)
!5880 = !DILocation(line: 1867, column: 1, scope: !1045)
!5881 = !DILocation(line: 1870, column: 45, scope: !1052)
!5882 = !DILocation(line: 1872, column: 8, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !1052, file: !162, line: 1872, column: 7)
!5884 = !DILocation(line: 1872, column: 16, scope: !5883)
!5885 = !DILocation(line: 1872, column: 7, scope: !5883)
!5886 = !DILocation(line: 1872, column: 28, scope: !5883)
!5887 = !DILocation(line: 1872, column: 32, scope: !5888)
!5888 = !DILexicalBlockFile(scope: !5883, file: !162, discriminator: 1)
!5889 = !DILocation(line: 1872, column: 40, scope: !5883)
!5890 = !DILocation(line: 1872, column: 56, scope: !5883)
!5891 = !DILocation(line: 1872, column: 64, scope: !5883)
!5892 = !DILocation(line: 1872, column: 52, scope: !5883)
!5893 = !DILocation(line: 1872, column: 7, scope: !1052)
!5894 = !DILocation(line: 1873, column: 9, scope: !5895)
!5895 = distinct !DILexicalBlock(scope: !5883, file: !162, line: 1872, column: 80)
!5896 = !DILocation(line: 1873, column: 17, scope: !5895)
!5897 = !DILocation(line: 1873, column: 31, scope: !5895)
!5898 = !DILocation(line: 1873, column: 48, scope: !5895)
!5899 = !DILocation(line: 1873, column: 56, scope: !5895)
!5900 = !DILocation(line: 1873, column: 70, scope: !5895)
!5901 = !DILocation(line: 1873, column: 78, scope: !5895)
!5902 = !DILocation(line: 1873, column: 95, scope: !5895)
!5903 = !DILocation(line: 1873, column: 103, scope: !5895)
!5904 = !DILocation(line: 1873, column: 118, scope: !5895)
!5905 = !DILocation(line: 1873, column: 126, scope: !5895)
!5906 = !DILocation(line: 1873, column: 6, scope: !5895)
!5907 = !DILocation(line: 1874, column: 32, scope: !5895)
!5908 = !DILocation(line: 1874, column: 40, scope: !5895)
!5909 = !DILocation(line: 1874, column: 6, scope: !5895)
!5910 = !DILocation(line: 1874, column: 14, scope: !5895)
!5911 = !DILocation(line: 1874, column: 29, scope: !5895)
!5912 = !DILocation(line: 1875, column: 3, scope: !5895)
!5913 = !DILocation(line: 1876, column: 11, scope: !1052)
!5914 = !DILocation(line: 1876, column: 19, scope: !1052)
!5915 = !DILocation(line: 1876, column: 31, scope: !1052)
!5916 = !{!2396, !2397, i64 776}
!5917 = !DILocation(line: 1876, column: 42, scope: !1052)
!5918 = !DILocation(line: 1876, column: 3, scope: !1052)
!5919 = !DILocation(line: 1880, column: 47, scope: !1057)
!5920 = !DILocation(line: 1882, column: 8, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !1057, file: !162, line: 1882, column: 7)
!5922 = !DILocation(line: 1882, column: 16, scope: !5921)
!5923 = !DILocation(line: 1882, column: 7, scope: !5921)
!5924 = !DILocation(line: 1882, column: 28, scope: !5921)
!5925 = !DILocation(line: 1882, column: 32, scope: !5926)
!5926 = !DILexicalBlockFile(scope: !5921, file: !162, discriminator: 1)
!5927 = !DILocation(line: 1882, column: 40, scope: !5921)
!5928 = !DILocation(line: 1882, column: 56, scope: !5921)
!5929 = !DILocation(line: 1882, column: 64, scope: !5921)
!5930 = !DILocation(line: 1882, column: 52, scope: !5921)
!5931 = !DILocation(line: 1882, column: 7, scope: !1057)
!5932 = !DILocation(line: 1883, column: 9, scope: !5933)
!5933 = distinct !DILexicalBlock(scope: !5921, file: !162, line: 1882, column: 80)
!5934 = !DILocation(line: 1883, column: 17, scope: !5933)
!5935 = !DILocation(line: 1883, column: 31, scope: !5933)
!5936 = !DILocation(line: 1883, column: 48, scope: !5933)
!5937 = !DILocation(line: 1883, column: 56, scope: !5933)
!5938 = !DILocation(line: 1883, column: 70, scope: !5933)
!5939 = !DILocation(line: 1883, column: 78, scope: !5933)
!5940 = !DILocation(line: 1883, column: 95, scope: !5933)
!5941 = !DILocation(line: 1883, column: 103, scope: !5933)
!5942 = !DILocation(line: 1883, column: 118, scope: !5933)
!5943 = !DILocation(line: 1883, column: 126, scope: !5933)
!5944 = !DILocation(line: 1883, column: 6, scope: !5933)
!5945 = !DILocation(line: 1884, column: 32, scope: !5933)
!5946 = !DILocation(line: 1884, column: 40, scope: !5933)
!5947 = !DILocation(line: 1884, column: 6, scope: !5933)
!5948 = !DILocation(line: 1884, column: 14, scope: !5933)
!5949 = !DILocation(line: 1884, column: 29, scope: !5933)
!5950 = !DILocation(line: 1885, column: 3, scope: !5933)
!5951 = !DILocation(line: 1886, column: 11, scope: !1057)
!5952 = !DILocation(line: 1886, column: 19, scope: !1057)
!5953 = !DILocation(line: 1886, column: 31, scope: !1057)
!5954 = !{!2396, !2397, i64 784}
!5955 = !DILocation(line: 1886, column: 3, scope: !1057)
!5956 = !DILocation(line: 1890, column: 41, scope: !1060)
!5957 = !DILocation(line: 1890, column: 62, scope: !1060)
!5958 = !DILocation(line: 1892, column: 4, scope: !1060)
!5959 = !DILocation(line: 1892, column: 12, scope: !1060)
!5960 = !DILocation(line: 1892, column: 18, scope: !1060)
!5961 = !DILocation(line: 1892, column: 28, scope: !1060)
!5962 = !DILocation(line: 1892, column: 27, scope: !1060)
!5963 = !DILocation(line: 1893, column: 1, scope: !1060)
!5964 = !DILocation(line: 1896, column: 34, scope: !1066)
!5965 = !DILocation(line: 1896, column: 49, scope: !1066)
!5966 = !DILocation(line: 1898, column: 11, scope: !1066)
!5967 = !DILocation(line: 1898, column: 19, scope: !1066)
!5968 = !DILocation(line: 1898, column: 25, scope: !1066)
!5969 = !DILocation(line: 1898, column: 37, scope: !1066)
!5970 = !DILocation(line: 1898, column: 3, scope: !1066)
!5971 = !DILocation(line: 1902, column: 35, scope: !1072)
!5972 = !DILocation(line: 1902, column: 49, scope: !1072)
!5973 = !DILocation(line: 1902, column: 61, scope: !1072)
!5974 = !DILocation(line: 1904, column: 11, scope: !1072)
!5975 = !DILocation(line: 1904, column: 19, scope: !1072)
!5976 = !DILocation(line: 1904, column: 25, scope: !1072)
!5977 = !{!2396, !2290, i64 32}
!5978 = !DILocation(line: 1904, column: 38, scope: !1072)
!5979 = !DILocation(line: 1904, column: 44, scope: !1072)
!5980 = !DILocation(line: 1904, column: 3, scope: !1072)
!5981 = !DILocation(line: 1908, column: 32, scope: !1079)
!5982 = !DILocation(line: 1908, column: 46, scope: !1079)
!5983 = !DILocation(line: 1910, column: 4, scope: !1079)
!5984 = !DILocation(line: 1910, column: 12, scope: !1079)
!5985 = !DILocation(line: 1910, column: 18, scope: !1079)
!5986 = !DILocation(line: 1910, column: 28, scope: !1079)
!5987 = !DILocation(line: 1911, column: 1, scope: !1079)
!5988 = !DILocation(line: 1914, column: 39, scope: !1083)
!5989 = !DILocation(line: 1916, column: 8, scope: !5990)
!5990 = distinct !DILexicalBlock(scope: !1083, file: !162, line: 1916, column: 7)
!5991 = !DILocation(line: 1916, column: 16, scope: !5990)
!5992 = !DILocation(line: 1916, column: 7, scope: !5990)
!5993 = !DILocation(line: 1916, column: 7, scope: !1083)
!5994 = !DILocation(line: 1917, column: 10, scope: !5995)
!5995 = distinct !DILexicalBlock(scope: !5996, file: !162, line: 1917, column: 9)
!5996 = distinct !DILexicalBlock(scope: !5990, file: !162, line: 1916, column: 35)
!5997 = !DILocation(line: 1917, column: 18, scope: !5995)
!5998 = !DILocation(line: 1917, column: 9, scope: !5995)
!5999 = !DILocation(line: 1917, column: 9, scope: !5996)
!6000 = !DILocation(line: 1918, column: 21, scope: !5995)
!6001 = !DILocation(line: 1919, column: 22, scope: !5995)
!6002 = !DILocation(line: 1919, column: 30, scope: !5995)
!6003 = !DILocation(line: 1920, column: 22, scope: !5995)
!6004 = !DILocation(line: 1920, column: 30, scope: !5995)
!6005 = !DILocation(line: 1920, column: 55, scope: !5995)
!6006 = !{!2674, !2290, i64 0}
!6007 = !DILocation(line: 1921, column: 22, scope: !5995)
!6008 = !DILocation(line: 1921, column: 30, scope: !5995)
!6009 = !DILocation(line: 1921, column: 55, scope: !5995)
!6010 = !{!2674, !2290, i64 8}
!6011 = !DILocation(line: 1918, column: 7, scope: !5995)
!6012 = !DILocation(line: 1923, column: 21, scope: !5995)
!6013 = !DILocation(line: 1923, column: 30, scope: !5995)
!6014 = !DILocation(line: 1923, column: 38, scope: !5995)
!6015 = !DILocation(line: 1923, column: 52, scope: !5995)
!6016 = !DILocation(line: 1923, column: 60, scope: !5995)
!6017 = !DILocation(line: 1923, column: 74, scope: !5995)
!6018 = !DILocation(line: 1923, column: 82, scope: !5995)
!6019 = !DILocation(line: 1923, column: 7, scope: !5995)
!6020 = !DILocation(line: 1924, column: 3, scope: !5996)
!6021 = !DILocation(line: 1925, column: 1, scope: !1083)
!6022 = !DILocation(line: 5328, column: 26, scope: !2084)
!6023 = !DILocation(line: 5328, column: 50, scope: !2084)
!6024 = !DILocation(line: 5329, column: 27, scope: !2084)
!6025 = !DILocation(line: 5329, column: 42, scope: !2084)
!6026 = !DILocation(line: 5331, column: 10, scope: !2094)
!6027 = !DILocation(line: 5331, column: 16, scope: !2094)
!6028 = !{!2399, !2291, i64 140}
!6029 = !DILocation(line: 5331, column: 9, scope: !2094)
!6030 = !DILocation(line: 5331, column: 7, scope: !2084)
!6031 = !DILocation(line: 5332, column: 5, scope: !2093)
!6032 = !DILocation(line: 5332, column: 18, scope: !2093)
!6033 = !DILocation(line: 5333, column: 5, scope: !2093)
!6034 = !DILocation(line: 5333, column: 18, scope: !2093)
!6035 = !DILocation(line: 5334, column: 9, scope: !6036)
!6036 = distinct !DILexicalBlock(scope: !2093, file: !162, line: 5334, column: 9)
!6037 = !DILocation(line: 5334, column: 17, scope: !6036)
!6038 = !DILocation(line: 5334, column: 25, scope: !6036)
!6039 = !DILocation(line: 5334, column: 13, scope: !6036)
!6040 = !DILocation(line: 5334, column: 9, scope: !2093)
!6041 = !DILocation(line: 5335, column: 19, scope: !6042)
!6042 = distinct !DILexicalBlock(scope: !6036, file: !162, line: 5334, column: 38)
!6043 = !DILocation(line: 5335, column: 27, scope: !6042)
!6044 = !DILocation(line: 5335, column: 15, scope: !6042)
!6045 = !DILocation(line: 5336, column: 22, scope: !6042)
!6046 = !DILocation(line: 5336, column: 30, scope: !6042)
!6047 = !DILocation(line: 5336, column: 18, scope: !6042)
!6048 = !DILocation(line: 5337, column: 5, scope: !6042)
!6049 = !DILocation(line: 5339, column: 20, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !6036, file: !162, line: 5338, column: 10)
!6051 = !DILocation(line: 5339, column: 28, scope: !6050)
!6052 = !DILocation(line: 5339, column: 53, scope: !6050)
!6053 = !DILocation(line: 5339, column: 15, scope: !6050)
!6054 = !DILocation(line: 5340, column: 23, scope: !6050)
!6055 = !DILocation(line: 5340, column: 31, scope: !6050)
!6056 = !DILocation(line: 5340, column: 56, scope: !6050)
!6057 = !DILocation(line: 5340, column: 18, scope: !6050)
!6058 = !DILocation(line: 5342, column: 5, scope: !2093)
!6059 = !DILocation(line: 5343, column: 7, scope: !2097)
!6060 = !DILocation(line: 5343, column: 14, scope: !2097)
!6061 = !DILocation(line: 5343, column: 34, scope: !2097)
!6062 = !DILocation(line: 5343, column: 42, scope: !2097)
!6063 = !DILocation(line: 5344, column: 10, scope: !2097)
!6064 = !DILocation(line: 5344, column: 16, scope: !2097)
!6065 = !{!2399, !2290, i64 120}
!6066 = !DILocation(line: 5344, column: 29, scope: !2097)
!6067 = !DILocation(line: 5344, column: 38, scope: !2097)
!6068 = !DILocation(line: 5344, column: 63, scope: !2097)
!6069 = !DILocation(line: 5344, column: 71, scope: !2097)
!6070 = !DILocation(line: 5344, column: 8, scope: !2097)
!6071 = !DILocation(line: 5345, column: 21, scope: !2097)
!6072 = !DILocation(line: 5345, column: 8, scope: !2097)
!6073 = !DILocation(line: 5345, column: 19, scope: !2097)
!6074 = !DILocation(line: 5346, column: 8, scope: !2097)
!6075 = !DILocation(line: 5346, column: 16, scope: !2097)
!6076 = !DILocation(line: 5346, column: 35, scope: !2097)
!6077 = !DILocation(line: 5346, column: 43, scope: !2097)
!6078 = !DILocation(line: 5346, column: 59, scope: !2097)
!6079 = !DILocation(line: 5346, column: 67, scope: !2097)
!6080 = !DILocation(line: 5346, column: 85, scope: !2097)
!6081 = !DILocation(line: 5346, column: 105, scope: !2097)
!6082 = !DILocation(line: 5346, column: 113, scope: !2097)
!6083 = !DILocation(line: 5346, column: 93, scope: !2097)
!6084 = !DILocation(line: 5346, column: 79, scope: !2097)
!6085 = !DILocation(line: 5346, column: 7, scope: !2097)
!6086 = !DILocation(line: 5347, column: 18, scope: !2097)
!6087 = !DILocation(line: 5347, column: 8, scope: !2097)
!6088 = !DILocation(line: 5347, column: 16, scope: !2097)
!6089 = !DILocation(line: 5348, column: 5, scope: !2093)
!6090 = !DILocation(line: 5348, column: 5, scope: !2097)
!6091 = !DILocation(line: 5348, column: 14, scope: !6092)
!6092 = !DILexicalBlockFile(scope: !2093, file: !162, discriminator: 1)
!6093 = !DILocation(line: 5348, column: 19, scope: !2093)
!6094 = !DILocation(line: 5348, column: 16, scope: !2093)
!6095 = !DILocation(line: 5349, column: 3, scope: !2094)
!6096 = !DILocation(line: 5349, column: 3, scope: !2093)
!6097 = !DILocation(line: 5351, column: 6, scope: !2094)
!6098 = !DILocation(line: 5351, column: 14, scope: !2094)
!6099 = !DILocation(line: 5351, column: 33, scope: !2094)
!6100 = !DILocation(line: 5351, column: 41, scope: !2094)
!6101 = !DILocation(line: 5351, column: 68, scope: !2094)
!6102 = !DILocation(line: 5351, column: 89, scope: !2094)
!6103 = !DILocation(line: 5351, column: 107, scope: !2094)
!6104 = !DILocation(line: 5351, column: 93, scope: !2094)
!6105 = !DILocation(line: 5351, column: 71, scope: !2094)
!6106 = !DILocation(line: 5351, column: 5, scope: !2094)
!6107 = !DILocation(line: 5352, column: 1, scope: !2084)
!6108 = !DILocation(line: 1928, column: 40, scope: !1086)
!6109 = !DILocation(line: 1973, column: 7, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !1086, file: !162, line: 1973, column: 7)
!6111 = !DILocation(line: 1973, column: 12, scope: !6110)
!6112 = !DILocation(line: 1973, column: 16, scope: !6110)
!6113 = !DILocation(line: 1973, column: 19, scope: !6114)
!6114 = !DILexicalBlockFile(scope: !6110, file: !162, discriminator: 1)
!6115 = !DILocation(line: 1973, column: 24, scope: !6110)
!6116 = !DILocation(line: 1973, column: 7, scope: !1086)
!6117 = !DILocation(line: 1974, column: 20, scope: !6110)
!6118 = !DILocation(line: 1974, column: 12, scope: !6110)
!6119 = !DILocation(line: 1974, column: 5, scope: !6110)
!6120 = !DILocation(line: 1975, column: 3, scope: !1086)
!6121 = !DILocation(line: 1976, column: 1, scope: !1086)
!6122 = !DILocation(line: 1992, column: 3, scope: !1094)
!6123 = !DILocation(line: 2001, column: 3, scope: !1098)
!6124 = !DILocation(line: 2001, column: 21, scope: !1098)
!6125 = !DILocation(line: 2003, column: 11, scope: !1098)
!6126 = !DILocation(line: 2003, column: 17, scope: !1098)
!6127 = !{!6128, !2400, i64 0}
!6128 = !{!"", !2400, i64 0, !2400, i64 4, !2400, i64 8}
!6129 = !DILocation(line: 2004, column: 11, scope: !1098)
!6130 = !DILocation(line: 2004, column: 17, scope: !1098)
!6131 = !{!6128, !2400, i64 4}
!6132 = !DILocation(line: 2005, column: 11, scope: !1098)
!6133 = !DILocation(line: 2005, column: 17, scope: !1098)
!6134 = !{!6128, !2400, i64 8}
!6135 = !DILocation(line: 2007, column: 10, scope: !1098)
!6136 = !{i64 0, i64 4, !3391, i64 4, i64 4, !3391, i64 8, i64 4, !3391}
!6137 = !DILocation(line: 2008, column: 1, scope: !1098)
!6138 = !DILocation(line: 2046, column: 3, scope: !1109)
!6139 = !DILocation(line: 5645, column: 44, scope: !1134)
!6140 = !DILocation(line: 5647, column: 3, scope: !1134)
!6141 = !DILocation(line: 5647, column: 8, scope: !1134)
!6142 = !DILocation(line: 5647, column: 19, scope: !1134)
!6143 = !DILocation(line: 5647, column: 23, scope: !1134)
!6144 = !DILocation(line: 5647, column: 12, scope: !1134)
!6145 = !DILocation(line: 5648, column: 7, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !1134, file: !162, line: 5648, column: 7)
!6147 = !DILocation(line: 5648, column: 9, scope: !6146)
!6148 = !DILocation(line: 5648, column: 7, scope: !1134)
!6149 = !DILocation(line: 5649, column: 12, scope: !6146)
!6150 = !DILocation(line: 5649, column: 5, scope: !6146)
!6151 = !DILocation(line: 5650, column: 14, scope: !1134)
!6152 = !DILocation(line: 5650, column: 17, scope: !1134)
!6153 = !DILocation(line: 5650, column: 24, scope: !1134)
!6154 = !DILocation(line: 5650, column: 3, scope: !1134)
!6155 = !DILocation(line: 5651, column: 14, scope: !1134)
!6156 = !DILocation(line: 5651, column: 17, scope: !1134)
!6157 = !DILocation(line: 5651, column: 35, scope: !1134)
!6158 = !DILocation(line: 5651, column: 3, scope: !1134)
!6159 = !DILocation(line: 5652, column: 19, scope: !1134)
!6160 = !DILocation(line: 5652, column: 22, scope: !1134)
!6161 = !DILocation(line: 5652, column: 40, scope: !1134)
!6162 = !DILocation(line: 5652, column: 3, scope: !1134)
!6163 = !DILocation(line: 5653, column: 19, scope: !1134)
!6164 = !DILocation(line: 5653, column: 22, scope: !1134)
!6165 = !DILocation(line: 5653, column: 37, scope: !1134)
!6166 = !DILocation(line: 5653, column: 3, scope: !1134)
!6167 = !DILocation(line: 5654, column: 19, scope: !1134)
!6168 = !DILocation(line: 5654, column: 22, scope: !1134)
!6169 = !DILocation(line: 5654, column: 37, scope: !1134)
!6170 = !DILocation(line: 5654, column: 3, scope: !1134)
!6171 = !DILocation(line: 5655, column: 19, scope: !1134)
!6172 = !DILocation(line: 5655, column: 22, scope: !1134)
!6173 = !DILocation(line: 5655, column: 33, scope: !1134)
!6174 = !DILocation(line: 5655, column: 3, scope: !1134)
!6175 = !DILocation(line: 5657, column: 3, scope: !1134)
!6176 = !DILocation(line: 5657, column: 6, scope: !1134)
!6177 = !DILocation(line: 5657, column: 22, scope: !1134)
!6178 = !DILocation(line: 5658, column: 19, scope: !1134)
!6179 = !DILocation(line: 5658, column: 22, scope: !1134)
!6180 = !DILocation(line: 5658, column: 38, scope: !1134)
!6181 = !DILocation(line: 5658, column: 3, scope: !1134)
!6182 = !DILocation(line: 5660, column: 3, scope: !1134)
!6183 = !DILocation(line: 5660, column: 6, scope: !1134)
!6184 = !DILocation(line: 5660, column: 20, scope: !1134)
!6185 = !DILocation(line: 5660, column: 25, scope: !1134)
!6186 = !DILocation(line: 5661, column: 3, scope: !1134)
!6187 = !DILocation(line: 5661, column: 6, scope: !1134)
!6188 = !DILocation(line: 5661, column: 20, scope: !1134)
!6189 = !DILocation(line: 5661, column: 28, scope: !1134)
!6190 = !DILocation(line: 5663, column: 3, scope: !1134)
!6191 = !DILocation(line: 5663, column: 6, scope: !1134)
!6192 = !DILocation(line: 5663, column: 16, scope: !1134)
!6193 = !DILocation(line: 5664, column: 3, scope: !1134)
!6194 = !DILocation(line: 5664, column: 6, scope: !1134)
!6195 = !DILocation(line: 5664, column: 17, scope: !1134)
!6196 = !DILocation(line: 5665, column: 3, scope: !1134)
!6197 = !DILocation(line: 5665, column: 6, scope: !1134)
!6198 = !DILocation(line: 5665, column: 15, scope: !1134)
!6199 = !DILocation(line: 5666, column: 3, scope: !1134)
!6200 = !DILocation(line: 5666, column: 6, scope: !1134)
!6201 = !DILocation(line: 5666, column: 17, scope: !1134)
!6202 = !DILocation(line: 5667, column: 3, scope: !1134)
!6203 = !DILocation(line: 5667, column: 6, scope: !1134)
!6204 = !DILocation(line: 5667, column: 16, scope: !1134)
!6205 = !DILocation(line: 5668, column: 3, scope: !1134)
!6206 = !DILocation(line: 5668, column: 6, scope: !1134)
!6207 = !DILocation(line: 5668, column: 17, scope: !1134)
!6208 = !DILocation(line: 5669, column: 3, scope: !1134)
!6209 = !DILocation(line: 5669, column: 6, scope: !1134)
!6210 = !DILocation(line: 5669, column: 23, scope: !1134)
!6211 = !DILocation(line: 5671, column: 3, scope: !1134)
!6212 = !DILocation(line: 5671, column: 6, scope: !1134)
!6213 = !DILocation(line: 5671, column: 21, scope: !1134)
!6214 = !DILocation(line: 5672, column: 3, scope: !1134)
!6215 = !DILocation(line: 5672, column: 6, scope: !1134)
!6216 = !DILocation(line: 5672, column: 25, scope: !1134)
!6217 = !DILocation(line: 5673, column: 3, scope: !1134)
!6218 = !DILocation(line: 5673, column: 6, scope: !1134)
!6219 = !DILocation(line: 5673, column: 17, scope: !1134)
!6220 = !DILocation(line: 5674, column: 10, scope: !1134)
!6221 = !DILocation(line: 5674, column: 3, scope: !1134)
!6222 = !DILocation(line: 5675, column: 1, scope: !1134)
!6223 = !DILocation(line: 6097, column: 23, scope: !1147)
!6224 = !DILocation(line: 6097, column: 62, scope: !1147)
!6225 = !DILocation(line: 6099, column: 3, scope: !1147)
!6226 = !DILocation(line: 6099, column: 9, scope: !1147)
!6227 = !DILocation(line: 6099, column: 16, scope: !1147)
!6228 = !DILocation(line: 6100, column: 3, scope: !1147)
!6229 = !DILocation(line: 6100, column: 9, scope: !1147)
!6230 = !DILocation(line: 6100, column: 20, scope: !1147)
!6231 = !DILocation(line: 6101, column: 3, scope: !1147)
!6232 = !DILocation(line: 6101, column: 9, scope: !1147)
!6233 = !DILocation(line: 6101, column: 15, scope: !1147)
!6234 = !DILocation(line: 6102, column: 3, scope: !1147)
!6235 = !DILocation(line: 6102, column: 9, scope: !1147)
!6236 = !DILocation(line: 6102, column: 13, scope: !1147)
!6237 = !DILocation(line: 6103, column: 3, scope: !1147)
!6238 = !DILocation(line: 6103, column: 9, scope: !1147)
!6239 = !DILocation(line: 6103, column: 13, scope: !1147)
!6240 = !DILocation(line: 6104, column: 15, scope: !1147)
!6241 = !DILocation(line: 6104, column: 3, scope: !1147)
!6242 = !DILocation(line: 6104, column: 9, scope: !1147)
!6243 = !DILocation(line: 6104, column: 13, scope: !1147)
!6244 = !DILocation(line: 6105, column: 1, scope: !1147)
!6245 = !DILocation(line: 6069, column: 27, scope: !1140)
!6246 = !DILocation(line: 6069, column: 63, scope: !1140)
!6247 = !DILocation(line: 6071, column: 3, scope: !1140)
!6248 = !DILocation(line: 6071, column: 6, scope: !1140)
!6249 = !DILocation(line: 6071, column: 12, scope: !1140)
!6250 = !{!3110, !2291, i64 8}
!6251 = !DILocation(line: 6072, column: 3, scope: !1140)
!6252 = !DILocation(line: 6072, column: 6, scope: !1140)
!6253 = !DILocation(line: 6072, column: 11, scope: !1140)
!6254 = !{!3110, !2397, i64 16}
!6255 = !DILocation(line: 6073, column: 3, scope: !1140)
!6256 = !DILocation(line: 6073, column: 6, scope: !1140)
!6257 = !DILocation(line: 6073, column: 11, scope: !1140)
!6258 = !{!3110, !2397, i64 24}
!6259 = !DILocation(line: 6074, column: 3, scope: !1140)
!6260 = !DILocation(line: 6074, column: 6, scope: !1140)
!6261 = !DILocation(line: 6074, column: 8, scope: !1140)
!6262 = !{!3110, !2290, i64 0}
!6263 = !DILocation(line: 6075, column: 12, scope: !1140)
!6264 = !DILocation(line: 6075, column: 3, scope: !1140)
!6265 = !DILocation(line: 6075, column: 6, scope: !1140)
!6266 = !DILocation(line: 6075, column: 10, scope: !1140)
!6267 = !{!3110, !2290, i64 32}
!6268 = !DILocation(line: 6076, column: 1, scope: !1140)
!6269 = !DILocation(line: 3547, column: 32, scope: !1168)
!6270 = !DILocation(line: 3548, column: 33, scope: !1168)
!6271 = !DILocation(line: 3549, column: 33, scope: !1168)
!6272 = !DILocation(line: 3550, column: 34, scope: !1168)
!6273 = !DILocation(line: 3552, column: 3, scope: !1168)
!6274 = !DILocation(line: 3552, column: 18, scope: !1168)
!6275 = !DILocation(line: 3552, column: 46, scope: !1168)
!6276 = !DILocation(line: 3552, column: 27, scope: !1168)
!6277 = !DILocation(line: 3553, column: 7, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !1168, file: !162, line: 3553, column: 7)
!6279 = !DILocation(line: 3553, column: 14, scope: !6278)
!6280 = !DILocation(line: 3553, column: 7, scope: !1168)
!6281 = !DILocation(line: 3554, column: 12, scope: !6278)
!6282 = !DILocation(line: 3554, column: 5, scope: !6278)
!6283 = !DILocation(line: 3555, column: 4, scope: !1168)
!6284 = !DILocation(line: 3555, column: 12, scope: !1168)
!6285 = !DILocation(line: 3555, column: 25, scope: !1168)
!6286 = !DILocation(line: 3556, column: 26, scope: !1168)
!6287 = !DILocation(line: 3556, column: 34, scope: !1168)
!6288 = !DILocation(line: 3556, column: 37, scope: !1168)
!6289 = !DILocation(line: 3556, column: 42, scope: !1168)
!6290 = !DILocation(line: 3556, column: 10, scope: !1168)
!6291 = !DILocation(line: 3556, column: 3, scope: !1168)
!6292 = !DILocation(line: 3557, column: 1, scope: !1168)
!6293 = !DILocation(line: 3390, column: 31, scope: !1175)
!6294 = !DILocation(line: 3392, column: 3, scope: !1175)
!6295 = !DILocation(line: 3392, column: 15, scope: !1175)
!6296 = !DILocation(line: 3411, column: 8, scope: !1175)
!6297 = !DILocation(line: 3411, column: 16, scope: !1175)
!6298 = !DILocation(line: 3411, column: 5, scope: !1175)
!6299 = !DILocation(line: 3413, column: 9, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !1175, file: !162, line: 3413, column: 7)
!6301 = !DILocation(line: 3413, column: 17, scope: !6300)
!6302 = !DILocation(line: 3413, column: 8, scope: !6300)
!6303 = !DILocation(line: 3413, column: 80, scope: !6300)
!6304 = !DILocation(line: 3413, column: 88, scope: !6300)
!6305 = !DILocation(line: 3413, column: 107, scope: !6300)
!6306 = !DILocation(line: 3413, column: 115, scope: !6300)
!6307 = !DILocation(line: 3413, column: 128, scope: !6300)
!6308 = !DILocation(line: 3413, column: 7, scope: !6300)
!6309 = !DILocation(line: 3413, column: 7, scope: !1175)
!6310 = !DILocation(line: 3414, column: 5, scope: !6300)
!6311 = !DILocation(line: 3415, column: 32, scope: !1175)
!6312 = !DILocation(line: 3415, column: 41, scope: !1175)
!6313 = !DILocation(line: 3415, column: 49, scope: !1175)
!6314 = !DILocation(line: 3415, column: 10, scope: !1175)
!6315 = !DILocation(line: 3415, column: 3, scope: !1175)
!6316 = !DILocation(line: 3416, column: 1, scope: !1175)
!6317 = !DILocation(line: 3732, column: 28, scope: !1193)
!6318 = !DILocation(line: 3733, column: 29, scope: !1193)
!6319 = !DILocation(line: 3734, column: 29, scope: !1193)
!6320 = !DILocation(line: 3735, column: 30, scope: !1193)
!6321 = !DILocation(line: 3737, column: 3, scope: !1193)
!6322 = !DILocation(line: 3737, column: 15, scope: !1193)
!6323 = !DILocation(line: 3737, column: 22, scope: !1193)
!6324 = !DILocation(line: 3738, column: 3, scope: !1193)
!6325 = !DILocation(line: 3738, column: 7, scope: !1193)
!6326 = !DILocation(line: 3738, column: 17, scope: !1193)
!6327 = !DILocation(line: 3738, column: 25, scope: !1193)
!6328 = !DILocation(line: 3738, column: 39, scope: !1193)
!6329 = !DILocation(line: 3738, column: 15, scope: !1193)
!6330 = !DILocation(line: 3738, column: 53, scope: !1193)
!6331 = !DILocation(line: 3738, column: 61, scope: !1193)
!6332 = !DILocation(line: 3738, column: 74, scope: !1193)
!6333 = !DILocation(line: 3738, column: 77, scope: !1193)
!6334 = !DILocation(line: 3738, column: 14, scope: !1193)
!6335 = !DILocation(line: 3739, column: 19, scope: !1193)
!6336 = !DILocation(line: 3739, column: 28, scope: !1193)
!6337 = !DILocation(line: 3739, column: 36, scope: !1193)
!6338 = !DILocation(line: 3739, column: 49, scope: !1193)
!6339 = !DILocation(line: 3739, column: 52, scope: !1193)
!6340 = !DILocation(line: 3739, column: 57, scope: !1193)
!6341 = !DILocation(line: 3739, column: 62, scope: !1193)
!6342 = !DILocation(line: 3740, column: 19, scope: !1193)
!6343 = !DILocation(line: 3740, column: 40, scope: !1193)
!6344 = !DILocation(line: 3740, column: 48, scope: !1193)
!6345 = !DILocation(line: 3740, column: 64, scope: !1193)
!6346 = !DILocation(line: 3740, column: 38, scope: !1193)
!6347 = !DILocation(line: 3740, column: 28, scope: !1193)
!6348 = !DILocation(line: 3739, column: 10, scope: !1193)
!6349 = !DILocation(line: 3741, column: 1, scope: !1193)
!6350 = !DILocation(line: 3739, column: 3, scope: !1193)
!6351 = !DILocation(line: 3508, column: 34, scope: !1179)
!6352 = !DILocation(line: 3508, column: 58, scope: !1179)
!6353 = !DILocation(line: 3510, column: 8, scope: !1187)
!6354 = !DILocation(line: 3510, column: 16, scope: !1187)
!6355 = !DILocation(line: 3510, column: 7, scope: !1187)
!6356 = !DILocation(line: 3510, column: 7, scope: !1179)
!6357 = !DILocation(line: 3511, column: 5, scope: !1186)
!6358 = !DILocation(line: 3511, column: 18, scope: !1186)
!6359 = !DILocation(line: 3512, column: 5, scope: !1186)
!6360 = !DILocation(line: 3512, column: 9, scope: !1186)
!6361 = !DILocation(line: 3513, column: 12, scope: !6362)
!6362 = distinct !DILexicalBlock(scope: !1186, file: !162, line: 3513, column: 5)
!6363 = !DILocation(line: 3513, column: 10, scope: !6362)
!6364 = !DILocation(line: 3513, column: 17, scope: !6365)
!6365 = !DILexicalBlockFile(scope: !6366, file: !162, discriminator: 2)
!6366 = !DILexicalBlockFile(scope: !6367, file: !162, discriminator: 1)
!6367 = distinct !DILexicalBlock(scope: !6362, file: !162, line: 3513, column: 5)
!6368 = !DILocation(line: 3513, column: 19, scope: !6367)
!6369 = !DILocation(line: 3513, column: 5, scope: !6362)
!6370 = !DILocation(line: 3514, column: 16, scope: !6367)
!6371 = !DILocation(line: 3514, column: 7, scope: !6367)
!6372 = !DILocation(line: 3514, column: 12, scope: !6367)
!6373 = !DILocation(line: 3514, column: 19, scope: !6367)
!6374 = !DILocation(line: 3513, column: 27, scope: !6367)
!6375 = !DILocation(line: 3513, column: 5, scope: !6367)
!6376 = !DILocation(line: 3515, column: 10, scope: !1186)
!6377 = !DILocation(line: 3515, column: 18, scope: !1186)
!6378 = !{!6379, !2290, i64 1032}
!6379 = !{!"", !2291, i64 0, !2290, i64 1024, !2290, i64 1032, !2290, i64 1040}
!6380 = !DILocation(line: 3516, column: 10, scope: !1186)
!6381 = !DILocation(line: 3516, column: 15, scope: !1186)
!6382 = !{!6379, !2290, i64 1024}
!6383 = !DILocation(line: 3517, column: 10, scope: !1186)
!6384 = !DILocation(line: 3517, column: 18, scope: !1186)
!6385 = !{!6379, !2290, i64 1040}
!6386 = !DILocation(line: 3518, column: 10, scope: !1191)
!6387 = !DILocation(line: 3518, column: 18, scope: !1191)
!6388 = !DILocation(line: 3518, column: 45, scope: !1191)
!6389 = !DILocation(line: 3518, column: 53, scope: !1191)
!6390 = !DILocation(line: 3518, column: 84, scope: !1191)
!6391 = !DILocation(line: 3518, column: 9, scope: !1191)
!6392 = !DILocation(line: 3518, column: 9, scope: !1186)
!6393 = !DILocation(line: 3520, column: 7, scope: !1190)
!6394 = !DILocation(line: 3520, column: 17, scope: !1190)
!6395 = !DILocation(line: 3521, column: 41, scope: !1190)
!6396 = !DILocation(line: 3521, column: 49, scope: !1190)
!6397 = !DILocation(line: 3521, column: 55, scope: !1190)
!6398 = !DILocation(line: 3521, column: 67, scope: !1190)
!6399 = !DILocation(line: 3521, column: 66, scope: !1190)
!6400 = !DILocation(line: 3521, column: 8, scope: !1190)
!6401 = !DILocation(line: 3521, column: 16, scope: !1190)
!6402 = !DILocation(line: 3521, column: 38, scope: !1190)
!6403 = !DILocation(line: 3522, column: 13, scope: !6404)
!6404 = distinct !DILexicalBlock(scope: !1190, file: !162, line: 3522, column: 11)
!6405 = !DILocation(line: 3522, column: 21, scope: !6404)
!6406 = !DILocation(line: 3522, column: 12, scope: !6404)
!6407 = !DILocation(line: 3522, column: 11, scope: !1190)
!6408 = !DILocation(line: 3523, column: 18, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !6410, file: !162, line: 3523, column: 13)
!6410 = distinct !DILexicalBlock(scope: !6404, file: !162, line: 3522, column: 44)
!6411 = !DILocation(line: 3523, column: 13, scope: !6409)
!6412 = !DILocation(line: 3523, column: 13, scope: !6410)
!6413 = !DILocation(line: 3524, column: 16, scope: !6409)
!6414 = !DILocation(line: 3524, column: 29, scope: !6409)
!6415 = !DILocation(line: 3524, column: 11, scope: !6409)
!6416 = !DILocation(line: 3525, column: 9, scope: !6410)
!6417 = !DILocation(line: 3527, column: 15, scope: !1190)
!6418 = !DILocation(line: 3527, column: 23, scope: !1190)
!6419 = !DILocation(line: 3527, column: 14, scope: !1190)
!6420 = !DILocation(line: 3529, column: 49, scope: !1190)
!6421 = !DILocation(line: 3529, column: 57, scope: !1190)
!6422 = !DILocation(line: 3530, column: 45, scope: !1190)
!6423 = !DILocation(line: 3530, column: 40, scope: !1190)
!6424 = !DILocation(line: 3531, column: 45, scope: !1190)
!6425 = !DILocation(line: 3532, column: 45, scope: !1190)
!6426 = !DILocation(line: 3527, column: 13, scope: !1190)
!6427 = !DILocation(line: 3527, column: 11, scope: !1190)
!6428 = !DILocation(line: 3533, column: 11, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !1190, file: !162, line: 3533, column: 11)
!6430 = !DILocation(line: 3533, column: 11, scope: !1190)
!6431 = !DILocation(line: 3534, column: 48, scope: !6432)
!6432 = distinct !DILexicalBlock(scope: !6429, file: !162, line: 3533, column: 16)
!6433 = !DILocation(line: 3534, column: 10, scope: !6432)
!6434 = !DILocation(line: 3534, column: 18, scope: !6432)
!6435 = !DILocation(line: 3534, column: 41, scope: !6432)
!6436 = !DILocation(line: 3535, column: 51, scope: !6432)
!6437 = !DILocation(line: 3535, column: 10, scope: !6432)
!6438 = !DILocation(line: 3535, column: 18, scope: !6432)
!6439 = !DILocation(line: 3535, column: 44, scope: !6432)
!6440 = !DILocation(line: 3536, column: 32, scope: !6432)
!6441 = !DILocation(line: 3536, column: 10, scope: !6432)
!6442 = !DILocation(line: 3536, column: 18, scope: !6432)
!6443 = !DILocation(line: 3536, column: 30, scope: !6432)
!6444 = !DILocation(line: 3537, column: 9, scope: !6432)
!6445 = !DILocation(line: 3539, column: 5, scope: !1191)
!6446 = !DILocation(line: 3539, column: 5, scope: !6447)
!6447 = !DILexicalBlockFile(scope: !1191, file: !162, discriminator: 1)
!6448 = !DILocation(line: 3539, column: 5, scope: !1190)
!6449 = !DILocation(line: 3540, column: 14, scope: !6450)
!6450 = distinct !DILexicalBlock(scope: !1186, file: !162, line: 3540, column: 9)
!6451 = !DILocation(line: 3540, column: 22, scope: !6450)
!6452 = !DILocation(line: 3540, column: 9, scope: !1186)
!6453 = !DILocation(line: 3541, column: 12, scope: !6450)
!6454 = !DILocation(line: 3541, column: 25, scope: !6450)
!6455 = !DILocation(line: 3541, column: 7, scope: !6450)
!6456 = !DILocation(line: 3542, column: 3, scope: !1187)
!6457 = !DILocation(line: 3542, column: 3, scope: !6458)
!6458 = !DILexicalBlockFile(scope: !1187, file: !162, discriminator: 1)
!6459 = !DILocation(line: 3542, column: 3, scope: !1186)
!6460 = !DILocation(line: 3543, column: 3, scope: !1179)
!6461 = !DILocation(line: 3544, column: 1, scope: !1179)
!6462 = !DILocation(line: 3744, column: 21, scope: !1201)
!6463 = !DILocation(line: 3745, column: 26, scope: !1201)
!6464 = !DILocation(line: 3746, column: 22, scope: !1201)
!6465 = !DILocation(line: 3747, column: 22, scope: !1201)
!6466 = !DILocation(line: 3748, column: 14, scope: !1201)
!6467 = !DILocation(line: 3749, column: 22, scope: !1201)
!6468 = !DILocation(line: 3750, column: 23, scope: !1201)
!6469 = !DILocation(line: 3751, column: 19, scope: !1201)
!6470 = !DILocation(line: 3777, column: 3, scope: !1201)
!6471 = !DILocation(line: 3777, column: 15, scope: !1201)
!6472 = !DILocation(line: 3777, column: 22, scope: !1201)
!6473 = !DILocation(line: 3777, column: 30, scope: !1201)
!6474 = !DILocation(line: 3779, column: 3, scope: !1201)
!6475 = !DILocation(line: 3779, column: 16, scope: !1201)
!6476 = !DILocation(line: 3780, column: 3, scope: !1201)
!6477 = !DILocation(line: 3780, column: 16, scope: !1201)
!6478 = !DILocation(line: 3781, column: 3, scope: !1201)
!6479 = !DILocation(line: 3781, column: 26, scope: !1201)
!6480 = !DILocation(line: 3783, column: 7, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !1201, file: !162, line: 3783, column: 7)
!6482 = !DILocation(line: 3783, column: 15, scope: !6481)
!6483 = !DILocation(line: 3783, column: 23, scope: !6481)
!6484 = !DILocation(line: 3783, column: 11, scope: !6481)
!6485 = !DILocation(line: 3783, column: 7, scope: !1201)
!6486 = !DILocation(line: 3784, column: 17, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6481, file: !162, line: 3783, column: 36)
!6488 = !DILocation(line: 3784, column: 25, scope: !6487)
!6489 = !DILocation(line: 3784, column: 13, scope: !6487)
!6490 = !DILocation(line: 3785, column: 20, scope: !6487)
!6491 = !DILocation(line: 3785, column: 28, scope: !6487)
!6492 = !DILocation(line: 3785, column: 16, scope: !6487)
!6493 = !DILocation(line: 3786, column: 3, scope: !6487)
!6494 = !DILocation(line: 3788, column: 18, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6481, file: !162, line: 3787, column: 8)
!6496 = !DILocation(line: 3788, column: 26, scope: !6495)
!6497 = !DILocation(line: 3788, column: 51, scope: !6495)
!6498 = !DILocation(line: 3788, column: 13, scope: !6495)
!6499 = !DILocation(line: 3789, column: 21, scope: !6495)
!6500 = !DILocation(line: 3789, column: 29, scope: !6495)
!6501 = !DILocation(line: 3789, column: 54, scope: !6495)
!6502 = !DILocation(line: 3789, column: 16, scope: !6495)
!6503 = !DILocation(line: 3792, column: 3, scope: !1201)
!6504 = !DILocation(line: 3793, column: 5, scope: !1219)
!6505 = !DILocation(line: 3793, column: 9, scope: !1219)
!6506 = !DILocation(line: 3794, column: 5, scope: !1219)
!6507 = !DILocation(line: 3794, column: 14, scope: !1219)
!6508 = !DILocation(line: 3795, column: 16, scope: !1219)
!6509 = !DILocation(line: 3795, column: 6, scope: !1219)
!6510 = !DILocation(line: 3795, column: 14, scope: !1219)
!6511 = !DILocation(line: 3796, column: 19, scope: !1219)
!6512 = !DILocation(line: 3796, column: 6, scope: !1219)
!6513 = !DILocation(line: 3796, column: 17, scope: !1219)
!6514 = !DILocation(line: 3797, column: 9, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !1219, file: !162, line: 3797, column: 9)
!6516 = !DILocation(line: 3797, column: 13, scope: !6515)
!6517 = !DILocation(line: 3797, column: 9, scope: !1219)
!6518 = !DILocation(line: 3798, column: 11, scope: !6519)
!6519 = distinct !DILexicalBlock(scope: !6520, file: !162, line: 3798, column: 11)
!6520 = distinct !DILexicalBlock(scope: !6515, file: !162, line: 3797, column: 19)
!6521 = !DILocation(line: 3798, column: 20, scope: !6519)
!6522 = !DILocation(line: 3798, column: 23, scope: !6523)
!6523 = !DILexicalBlockFile(scope: !6519, file: !162, discriminator: 1)
!6524 = !DILocation(line: 3798, column: 27, scope: !6519)
!6525 = !DILocation(line: 3798, column: 11, scope: !6520)
!6526 = !DILocation(line: 3799, column: 20, scope: !6527)
!6527 = distinct !DILexicalBlock(scope: !6519, file: !162, line: 3798, column: 33)
!6528 = !DILocation(line: 3799, column: 10, scope: !6527)
!6529 = !DILocation(line: 3799, column: 18, scope: !6527)
!6530 = !DILocation(line: 3800, column: 9, scope: !6527)
!6531 = !DILocation(line: 3802, column: 15, scope: !6520)
!6532 = !DILocation(line: 3802, column: 7, scope: !6520)
!6533 = !DILocation(line: 3804, column: 20, scope: !6534)
!6534 = distinct !DILexicalBlock(scope: !6520, file: !162, line: 3802, column: 20)
!6535 = !DILocation(line: 3804, column: 10, scope: !6534)
!6536 = !DILocation(line: 3804, column: 18, scope: !6534)
!6537 = !DILocation(line: 3805, column: 9, scope: !6534)
!6538 = !DILocation(line: 3807, column: 9, scope: !6534)
!6539 = !DILocation(line: 3809, column: 9, scope: !6534)
!6540 = !DILocation(line: 3811, column: 16, scope: !6534)
!6541 = !DILocation(line: 3811, column: 15, scope: !6534)
!6542 = !DILocation(line: 3811, column: 13, scope: !6534)
!6543 = !DILocation(line: 3812, column: 9, scope: !6534)
!6544 = !DILocation(line: 3816, column: 13, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6534, file: !162, line: 3816, column: 13)
!6546 = !DILocation(line: 3816, column: 21, scope: !6545)
!6547 = !DILocation(line: 3816, column: 29, scope: !6545)
!6548 = !DILocation(line: 3816, column: 17, scope: !6545)
!6549 = !DILocation(line: 3816, column: 41, scope: !6545)
!6550 = !DILocation(line: 3816, column: 46, scope: !6551)
!6551 = !DILexicalBlockFile(scope: !6545, file: !162, discriminator: 1)
!6552 = !DILocation(line: 3816, column: 54, scope: !6545)
!6553 = !DILocation(line: 3816, column: 79, scope: !6545)
!6554 = !{!2674, !2291, i64 36}
!6555 = !DILocation(line: 3816, column: 45, scope: !6545)
!6556 = !DILocation(line: 3816, column: 13, scope: !6534)
!6557 = !DILocation(line: 3817, column: 22, scope: !6558)
!6558 = distinct !DILexicalBlock(scope: !6545, file: !162, line: 3816, column: 92)
!6559 = !DILocation(line: 3817, column: 12, scope: !6558)
!6560 = !DILocation(line: 3817, column: 20, scope: !6558)
!6561 = !DILocation(line: 3818, column: 11, scope: !6558)
!6562 = !DILocation(line: 3824, column: 14, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !6534, file: !162, line: 3824, column: 13)
!6564 = !DILocation(line: 3824, column: 22, scope: !6563)
!6565 = !DILocation(line: 3824, column: 13, scope: !6563)
!6566 = !DILocation(line: 3824, column: 39, scope: !6563)
!6567 = !DILocation(line: 3824, column: 42, scope: !6568)
!6568 = !DILexicalBlockFile(scope: !6563, file: !162, discriminator: 1)
!6569 = !DILocation(line: 3824, column: 50, scope: !6563)
!6570 = !DILocation(line: 3824, column: 58, scope: !6563)
!6571 = !DILocation(line: 3824, column: 46, scope: !6563)
!6572 = !DILocation(line: 3824, column: 13, scope: !6534)
!6573 = !DILocation(line: 3825, column: 20, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !6575, file: !162, line: 3825, column: 15)
!6575 = distinct !DILexicalBlock(scope: !6563, file: !162, line: 3824, column: 71)
!6576 = !DILocation(line: 3825, column: 28, scope: !6574)
!6577 = !DILocation(line: 3825, column: 45, scope: !6574)
!6578 = !{!2401, !2290, i64 0}
!6579 = !DILocation(line: 3825, column: 56, scope: !6574)
!6580 = !DILocation(line: 3825, column: 64, scope: !6574)
!6581 = !DILocation(line: 3825, column: 84, scope: !6574)
!6582 = !DILocation(line: 3825, column: 89, scope: !6574)
!6583 = !DILocation(line: 3825, column: 94, scope: !6574)
!6584 = !DILocation(line: 3825, column: 16, scope: !6574)
!6585 = !DILocation(line: 3826, column: 15, scope: !6574)
!6586 = !DILocation(line: 3825, column: 15, scope: !6575)
!6587 = !DILocation(line: 3827, column: 13, scope: !6574)
!6588 = !DILocation(line: 3828, column: 22, scope: !6575)
!6589 = !DILocation(line: 3828, column: 12, scope: !6575)
!6590 = !DILocation(line: 3828, column: 20, scope: !6575)
!6591 = !DILocation(line: 3829, column: 11, scope: !6575)
!6592 = !DILocation(line: 3832, column: 9, scope: !6534)
!6593 = !DILocation(line: 3834, column: 16, scope: !6534)
!6594 = !DILocation(line: 3834, column: 15, scope: !6534)
!6595 = !DILocation(line: 3834, column: 13, scope: !6534)
!6596 = !DILocation(line: 3835, column: 16, scope: !6534)
!6597 = !DILocation(line: 3835, column: 14, scope: !6534)
!6598 = !DILocation(line: 3836, column: 9, scope: !6534)
!6599 = !DILocation(line: 3838, column: 5, scope: !6520)
!6600 = !DILocation(line: 3839, column: 17, scope: !1219)
!6601 = !DILocation(line: 3839, column: 25, scope: !1219)
!6602 = !DILocation(line: 3839, column: 42, scope: !1219)
!6603 = !DILocation(line: 3839, column: 53, scope: !1219)
!6604 = !DILocation(line: 3839, column: 61, scope: !1219)
!6605 = !DILocation(line: 3839, column: 77, scope: !1219)
!6606 = !DILocation(line: 3839, column: 82, scope: !1219)
!6607 = !DILocation(line: 3839, column: 85, scope: !1219)
!6608 = !DILocation(line: 3839, column: 91, scope: !1219)
!6609 = !DILocation(line: 3839, column: 13, scope: !1219)
!6610 = !DILocation(line: 3839, column: 10, scope: !1219)
!6611 = !DILocation(line: 3840, column: 13, scope: !1219)
!6612 = !DILocation(line: 3840, column: 5, scope: !1219)
!6613 = !DILocation(line: 3843, column: 9, scope: !1224)
!6614 = !DILocation(line: 3843, column: 24, scope: !1224)
!6615 = !DILocation(line: 3843, column: 48, scope: !1224)
!6616 = !DILocation(line: 3843, column: 59, scope: !1224)
!6617 = !DILocation(line: 3843, column: 62, scope: !1224)
!6618 = !DILocation(line: 3843, column: 33, scope: !1224)
!6619 = !DILocation(line: 3844, column: 13, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !1224, file: !162, line: 3844, column: 13)
!6621 = !DILocation(line: 3844, column: 20, scope: !6620)
!6622 = !DILocation(line: 3844, column: 13, scope: !1224)
!6623 = !DILocation(line: 3845, column: 18, scope: !6620)
!6624 = !DILocation(line: 3845, column: 11, scope: !6620)
!6625 = !DILocation(line: 3846, column: 16, scope: !1224)
!6626 = !DILocation(line: 3846, column: 24, scope: !1224)
!6627 = !DILocation(line: 3846, column: 13, scope: !1224)
!6628 = !DILocation(line: 3847, column: 23, scope: !1224)
!6629 = !DILocation(line: 3848, column: 7, scope: !1225)
!6630 = !DILocation(line: 3848, column: 7, scope: !6631)
!6631 = !DILexicalBlockFile(scope: !1225, file: !162, discriminator: 1)
!6632 = !DILocation(line: 3849, column: 7, scope: !1225)
!6633 = !DILocation(line: 3851, column: 12, scope: !6634)
!6634 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 3851, column: 11)
!6635 = !DILocation(line: 3851, column: 20, scope: !6634)
!6636 = !DILocation(line: 3851, column: 11, scope: !6634)
!6637 = !DILocation(line: 3851, column: 11, scope: !1225)
!6638 = !DILocation(line: 3852, column: 53, scope: !6639)
!6639 = distinct !DILexicalBlock(scope: !6634, file: !162, line: 3851, column: 48)
!6640 = !DILocation(line: 3852, column: 61, scope: !6639)
!6641 = !DILocation(line: 3852, column: 74, scope: !6639)
!6642 = !DILocation(line: 3852, column: 79, scope: !6639)
!6643 = !DILocation(line: 3852, column: 82, scope: !6639)
!6644 = !DILocation(line: 3852, column: 35, scope: !6639)
!6645 = !DILocation(line: 3852, column: 10, scope: !6639)
!6646 = !DILocation(line: 3852, column: 18, scope: !6639)
!6647 = !DILocation(line: 3852, column: 33, scope: !6639)
!6648 = !DILocation(line: 3853, column: 15, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6639, file: !162, line: 3853, column: 13)
!6650 = !DILocation(line: 3853, column: 23, scope: !6649)
!6651 = !DILocation(line: 3853, column: 14, scope: !6649)
!6652 = !DILocation(line: 3853, column: 13, scope: !6639)
!6653 = !DILocation(line: 3854, column: 11, scope: !6649)
!6654 = !DILocation(line: 3855, column: 46, scope: !6639)
!6655 = !DILocation(line: 3855, column: 54, scope: !6639)
!6656 = !DILocation(line: 3855, column: 68, scope: !6639)
!6657 = !DILocation(line: 3855, column: 13, scope: !6639)
!6658 = !DILocation(line: 3855, column: 21, scope: !6639)
!6659 = !DILocation(line: 3855, column: 35, scope: !6639)
!6660 = !DILocation(line: 3855, column: 41, scope: !6639)
!6661 = !DILocation(line: 3856, column: 10, scope: !6639)
!6662 = !DILocation(line: 3856, column: 18, scope: !6639)
!6663 = !DILocation(line: 3856, column: 34, scope: !6639)
!6664 = !DILocation(line: 3857, column: 23, scope: !6639)
!6665 = !DILocation(line: 3858, column: 7, scope: !6639)
!6666 = !DILocation(line: 3859, column: 8, scope: !1225)
!6667 = !DILocation(line: 3859, column: 16, scope: !1225)
!6668 = !DILocation(line: 3859, column: 32, scope: !1225)
!6669 = !DILocation(line: 3860, column: 7, scope: !1225)
!6670 = !DILocation(line: 3862, column: 12, scope: !6671)
!6671 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 3862, column: 11)
!6672 = !DILocation(line: 3862, column: 20, scope: !6671)
!6673 = !DILocation(line: 3862, column: 11, scope: !6671)
!6674 = !DILocation(line: 3862, column: 11, scope: !1225)
!6675 = !DILocation(line: 3863, column: 10, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6671, file: !162, line: 3862, column: 48)
!6677 = !DILocation(line: 3863, column: 18, scope: !6676)
!6678 = !DILocation(line: 3863, column: 46, scope: !6676)
!6679 = !DILocation(line: 3863, column: 54, scope: !6676)
!6680 = !DILocation(line: 3863, column: 70, scope: !6676)
!6681 = !DILocation(line: 3863, column: 78, scope: !6676)
!6682 = !DILocation(line: 3863, column: 95, scope: !6676)
!6683 = !DILocation(line: 3863, column: 103, scope: !6676)
!6684 = !DILocation(line: 3864, column: 34, scope: !6676)
!6685 = !DILocation(line: 3864, column: 42, scope: !6676)
!6686 = !DILocation(line: 3863, column: 9, scope: !6676)
!6687 = !DILocation(line: 3865, column: 10, scope: !6676)
!6688 = !DILocation(line: 3865, column: 18, scope: !6676)
!6689 = !DILocation(line: 3865, column: 33, scope: !6676)
!6690 = !DILocation(line: 3866, column: 21, scope: !6676)
!6691 = !DILocation(line: 3866, column: 29, scope: !6676)
!6692 = !DILocation(line: 3866, column: 9, scope: !6676)
!6693 = !DILocation(line: 3867, column: 23, scope: !6676)
!6694 = !DILocation(line: 3868, column: 7, scope: !6676)
!6695 = !DILocation(line: 3869, column: 7, scope: !1225)
!6696 = !DILocation(line: 3873, column: 9, scope: !1227)
!6697 = !DILocation(line: 3873, column: 24, scope: !1227)
!6698 = !DILocation(line: 3873, column: 48, scope: !1227)
!6699 = !DILocation(line: 3873, column: 59, scope: !1227)
!6700 = !DILocation(line: 3873, column: 62, scope: !1227)
!6701 = !DILocation(line: 3873, column: 33, scope: !1227)
!6702 = !DILocation(line: 3874, column: 13, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !1227, file: !162, line: 3874, column: 13)
!6704 = !DILocation(line: 3874, column: 20, scope: !6703)
!6705 = !DILocation(line: 3874, column: 13, scope: !1227)
!6706 = !DILocation(line: 3875, column: 18, scope: !6703)
!6707 = !DILocation(line: 3875, column: 11, scope: !6703)
!6708 = !DILocation(line: 3876, column: 16, scope: !1227)
!6709 = !DILocation(line: 3876, column: 24, scope: !1227)
!6710 = !DILocation(line: 3876, column: 13, scope: !1227)
!6711 = !DILocation(line: 3877, column: 23, scope: !1227)
!6712 = !DILocation(line: 3878, column: 7, scope: !1225)
!6713 = !DILocation(line: 3878, column: 7, scope: !6631)
!6714 = !DILocation(line: 3879, column: 7, scope: !1225)
!6715 = !DILocation(line: 3883, column: 8, scope: !1225)
!6716 = !DILocation(line: 3883, column: 16, scope: !1225)
!6717 = !DILocation(line: 3883, column: 33, scope: !1225)
!6718 = !DILocation(line: 3884, column: 49, scope: !1225)
!6719 = !DILocation(line: 3885, column: 38, scope: !1225)
!6720 = !DILocation(line: 3885, column: 43, scope: !1225)
!6721 = !DILocation(line: 3884, column: 42, scope: !1225)
!6722 = !DILocation(line: 3884, column: 32, scope: !1225)
!6723 = !DILocation(line: 3884, column: 8, scope: !1225)
!6724 = !DILocation(line: 3884, column: 16, scope: !1225)
!6725 = !DILocation(line: 3884, column: 30, scope: !1225)
!6726 = !DILocation(line: 3888, column: 13, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 3888, column: 11)
!6728 = !DILocation(line: 3888, column: 21, scope: !6727)
!6729 = !DILocation(line: 3888, column: 12, scope: !6727)
!6730 = !DILocation(line: 3888, column: 11, scope: !1225)
!6731 = !DILocation(line: 3889, column: 9, scope: !6727)
!6732 = !DILocation(line: 3891, column: 7, scope: !1225)
!6733 = !DILocation(line: 3891, column: 12, scope: !1225)
!6734 = !DILocation(line: 3891, column: 31, scope: !1225)
!6735 = !DILocation(line: 3892, column: 12, scope: !1230)
!6736 = !DILocation(line: 3892, column: 20, scope: !1230)
!6737 = !DILocation(line: 3892, column: 11, scope: !1230)
!6738 = !DILocation(line: 3892, column: 11, scope: !1225)
!6739 = !DILocation(line: 3893, column: 9, scope: !1229)
!6740 = !DILocation(line: 3893, column: 19, scope: !1229)
!6741 = !DILocation(line: 3894, column: 17, scope: !6742)
!6742 = distinct !DILexicalBlock(scope: !1229, file: !162, line: 3894, column: 13)
!6743 = !DILocation(line: 3894, column: 23, scope: !6742)
!6744 = !{!2399, !2290, i64 112}
!6745 = !DILocation(line: 3894, column: 35, scope: !6742)
!6746 = !DILocation(line: 3894, column: 40, scope: !6742)
!6747 = !DILocation(line: 3894, column: 43, scope: !6742)
!6748 = !DILocation(line: 3894, column: 49, scope: !6742)
!6749 = !DILocation(line: 3894, column: 15, scope: !6742)
!6750 = !DILocation(line: 3894, column: 13, scope: !1229)
!6751 = !DILocation(line: 3895, column: 11, scope: !6742)
!6752 = !DILocation(line: 3896, column: 35, scope: !1229)
!6753 = !DILocation(line: 3896, column: 43, scope: !1229)
!6754 = !DILocation(line: 3896, column: 56, scope: !1229)
!6755 = !DILocation(line: 3897, column: 33, scope: !1229)
!6756 = !DILocation(line: 3897, column: 37, scope: !1229)
!6757 = !DILocation(line: 3897, column: 42, scope: !1229)
!6758 = !{!2399, !2400, i64 136}
!6759 = !DILocation(line: 3897, column: 35, scope: !1229)
!6760 = !DILocation(line: 3898, column: 33, scope: !1229)
!6761 = !DILocation(line: 3898, column: 40, scope: !1229)
!6762 = !DILocation(line: 3898, column: 45, scope: !1229)
!6763 = !DILocation(line: 3898, column: 38, scope: !1229)
!6764 = !DILocation(line: 3896, column: 17, scope: !1229)
!6765 = !DILocation(line: 3896, column: 15, scope: !1229)
!6766 = !DILocation(line: 3899, column: 14, scope: !6767)
!6767 = distinct !DILexicalBlock(scope: !1229, file: !162, line: 3899, column: 13)
!6768 = !DILocation(line: 3899, column: 13, scope: !1229)
!6769 = !DILocation(line: 3900, column: 11, scope: !6767)
!6770 = !DILocation(line: 3901, column: 27, scope: !1229)
!6771 = !DILocation(line: 3901, column: 9, scope: !1229)
!6772 = !DILocation(line: 3902, column: 46, scope: !1229)
!6773 = !DILocation(line: 3902, column: 54, scope: !1229)
!6774 = !DILocation(line: 3902, column: 68, scope: !1229)
!6775 = !DILocation(line: 3902, column: 13, scope: !1229)
!6776 = !DILocation(line: 3902, column: 21, scope: !1229)
!6777 = !DILocation(line: 3902, column: 35, scope: !1229)
!6778 = !DILocation(line: 3902, column: 41, scope: !1229)
!6779 = !DILocation(line: 3903, column: 36, scope: !1229)
!6780 = !DILocation(line: 3903, column: 10, scope: !1229)
!6781 = !DILocation(line: 3903, column: 18, scope: !1229)
!6782 = !DILocation(line: 3903, column: 34, scope: !1229)
!6783 = !DILocation(line: 3904, column: 23, scope: !1229)
!6784 = !DILocation(line: 3905, column: 9, scope: !1229)
!6785 = !DILocation(line: 3906, column: 7, scope: !1230)
!6786 = !DILocation(line: 3892, column: 45, scope: !6787)
!6787 = !DILexicalBlockFile(scope: !1230, file: !162, discriminator: 1)
!6788 = !DILocation(line: 3909, column: 15, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 3909, column: 11)
!6790 = !DILocation(line: 3909, column: 21, scope: !6789)
!6791 = !DILocation(line: 3909, column: 33, scope: !6789)
!6792 = !DILocation(line: 3909, column: 38, scope: !6789)
!6793 = !DILocation(line: 3909, column: 41, scope: !6789)
!6794 = !DILocation(line: 3909, column: 47, scope: !6789)
!6795 = !DILocation(line: 3909, column: 13, scope: !6789)
!6796 = !DILocation(line: 3909, column: 11, scope: !1225)
!6797 = !DILocation(line: 3910, column: 9, scope: !6789)
!6798 = !DILocation(line: 3909, column: 55, scope: !6799)
!6799 = !DILexicalBlockFile(scope: !6789, file: !162, discriminator: 1)
!6800 = !DILocation(line: 3912, column: 11, scope: !1233)
!6801 = !DILocation(line: 3912, column: 16, scope: !1233)
!6802 = !DILocation(line: 3912, column: 31, scope: !1233)
!6803 = !DILocation(line: 3912, column: 35, scope: !6804)
!6804 = !DILexicalBlockFile(scope: !1233, file: !162, discriminator: 1)
!6805 = !DILocation(line: 3912, column: 43, scope: !1233)
!6806 = !DILocation(line: 3912, column: 34, scope: !1233)
!6807 = !DILocation(line: 3912, column: 11, scope: !1225)
!6808 = !DILocation(line: 3913, column: 9, scope: !1232)
!6809 = !DILocation(line: 3913, column: 19, scope: !1232)
!6810 = !DILocation(line: 3913, column: 42, scope: !1232)
!6811 = !DILocation(line: 3913, column: 47, scope: !1232)
!6812 = !DILocation(line: 3914, column: 41, scope: !1232)
!6813 = !DILocation(line: 3915, column: 41, scope: !1232)
!6814 = !DILocation(line: 3915, column: 45, scope: !1232)
!6815 = !DILocation(line: 3915, column: 50, scope: !1232)
!6816 = !DILocation(line: 3915, column: 43, scope: !1232)
!6817 = !DILocation(line: 3916, column: 41, scope: !1232)
!6818 = !DILocation(line: 3916, column: 48, scope: !1232)
!6819 = !DILocation(line: 3916, column: 53, scope: !1232)
!6820 = !DILocation(line: 3916, column: 46, scope: !1232)
!6821 = !DILocation(line: 3913, column: 25, scope: !1232)
!6822 = !DILocation(line: 3917, column: 14, scope: !6823)
!6823 = distinct !DILexicalBlock(scope: !1232, file: !162, line: 3917, column: 13)
!6824 = !DILocation(line: 3917, column: 13, scope: !1232)
!6825 = !DILocation(line: 3918, column: 11, scope: !6823)
!6826 = !DILocation(line: 3919, column: 27, scope: !1232)
!6827 = !DILocation(line: 3919, column: 9, scope: !1232)
!6828 = !DILocation(line: 3920, column: 44, scope: !1232)
!6829 = !DILocation(line: 3920, column: 10, scope: !1232)
!6830 = !DILocation(line: 3920, column: 18, scope: !1232)
!6831 = !DILocation(line: 3920, column: 33, scope: !1232)
!6832 = !DILocation(line: 3920, column: 42, scope: !1232)
!6833 = !{!4091, !2290, i64 40}
!6834 = !DILocation(line: 3921, column: 34, scope: !1232)
!6835 = !DILocation(line: 3921, column: 39, scope: !1232)
!6836 = !DILocation(line: 3921, column: 46, scope: !1232)
!6837 = !DILocation(line: 3921, column: 12, scope: !1232)
!6838 = !DILocation(line: 3921, column: 17, scope: !1232)
!6839 = !DILocation(line: 3921, column: 24, scope: !1232)
!6840 = !DILocation(line: 3921, column: 30, scope: !1232)
!6841 = !DILocation(line: 3922, column: 14, scope: !6842)
!6842 = distinct !DILexicalBlock(scope: !1232, file: !162, line: 3922, column: 13)
!6843 = !DILocation(line: 3922, column: 22, scope: !6842)
!6844 = !DILocation(line: 3922, column: 13, scope: !6842)
!6845 = !DILocation(line: 3922, column: 13, scope: !1232)
!6846 = !DILocation(line: 3923, column: 25, scope: !6842)
!6847 = !DILocation(line: 3923, column: 11, scope: !6842)
!6848 = !DILocation(line: 3924, column: 7, scope: !1233)
!6849 = !DILocation(line: 3924, column: 7, scope: !6804)
!6850 = !DILocation(line: 3924, column: 7, scope: !1232)
!6851 = !DILocation(line: 3925, column: 7, scope: !1225)
!6852 = !DILocation(line: 3927, column: 12, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 3927, column: 11)
!6854 = !DILocation(line: 3927, column: 20, scope: !6853)
!6855 = !DILocation(line: 3927, column: 11, scope: !6853)
!6856 = !DILocation(line: 3927, column: 11, scope: !1225)
!6857 = !DILocation(line: 3928, column: 10, scope: !6858)
!6858 = distinct !DILexicalBlock(scope: !6853, file: !162, line: 3927, column: 36)
!6859 = !DILocation(line: 3928, column: 18, scope: !6858)
!6860 = !DILocation(line: 3928, column: 46, scope: !6858)
!6861 = !DILocation(line: 3928, column: 54, scope: !6858)
!6862 = !DILocation(line: 3928, column: 70, scope: !6858)
!6863 = !DILocation(line: 3928, column: 78, scope: !6858)
!6864 = !DILocation(line: 3929, column: 34, scope: !6858)
!6865 = !DILocation(line: 3929, column: 42, scope: !6858)
!6866 = !DILocation(line: 3929, column: 60, scope: !6858)
!6867 = !DILocation(line: 3929, column: 68, scope: !6858)
!6868 = !DILocation(line: 3928, column: 9, scope: !6858)
!6869 = !DILocation(line: 3930, column: 21, scope: !6858)
!6870 = !DILocation(line: 3930, column: 29, scope: !6858)
!6871 = !DILocation(line: 3930, column: 9, scope: !6858)
!6872 = !DILocation(line: 3931, column: 23, scope: !6858)
!6873 = !DILocation(line: 3932, column: 7, scope: !6858)
!6874 = !DILocation(line: 3938, column: 12, scope: !1236)
!6875 = !DILocation(line: 3938, column: 20, scope: !1236)
!6876 = !DILocation(line: 3938, column: 11, scope: !1236)
!6877 = !DILocation(line: 3938, column: 36, scope: !1236)
!6878 = !DILocation(line: 3938, column: 40, scope: !6879)
!6879 = !DILexicalBlockFile(scope: !1236, file: !162, discriminator: 1)
!6880 = !DILocation(line: 3938, column: 48, scope: !1236)
!6881 = !DILocation(line: 3938, column: 39, scope: !1236)
!6882 = !DILocation(line: 3938, column: 11, scope: !1225)
!6883 = !DILocation(line: 3939, column: 9, scope: !1235)
!6884 = !DILocation(line: 3939, column: 18, scope: !1235)
!6885 = !DILocation(line: 3939, column: 39, scope: !1235)
!6886 = !DILocation(line: 3939, column: 44, scope: !1235)
!6887 = !DILocation(line: 3940, column: 9, scope: !1235)
!6888 = !DILocation(line: 3940, column: 14, scope: !1235)
!6889 = !DILocation(line: 3940, column: 33, scope: !1235)
!6890 = !DILocation(line: 3941, column: 14, scope: !1239)
!6891 = !DILocation(line: 3941, column: 22, scope: !1239)
!6892 = !DILocation(line: 3941, column: 13, scope: !1239)
!6893 = !DILocation(line: 3941, column: 44, scope: !1239)
!6894 = !DILocation(line: 3941, column: 48, scope: !6895)
!6895 = !DILexicalBlockFile(scope: !1239, file: !162, discriminator: 1)
!6896 = !DILocation(line: 3941, column: 56, scope: !1239)
!6897 = !DILocation(line: 3941, column: 47, scope: !1239)
!6898 = !DILocation(line: 3941, column: 13, scope: !1235)
!6899 = !DILocation(line: 3942, column: 11, scope: !1238)
!6900 = !DILocation(line: 3942, column: 19, scope: !1238)
!6901 = !DILocation(line: 3942, column: 45, scope: !1238)
!6902 = !DILocation(line: 3943, column: 46, scope: !1238)
!6903 = !DILocation(line: 3943, column: 51, scope: !1238)
!6904 = !DILocation(line: 3942, column: 38, scope: !1238)
!6905 = !DILocation(line: 3942, column: 28, scope: !1238)
!6906 = !DILocation(line: 3946, column: 16, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !1238, file: !162, line: 3946, column: 15)
!6908 = !DILocation(line: 3946, column: 15, scope: !1238)
!6909 = !DILocation(line: 3947, column: 13, scope: !6907)
!6910 = !DILocation(line: 3948, column: 16, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !1238, file: !162, line: 3948, column: 15)
!6912 = !DILocation(line: 3948, column: 24, scope: !6911)
!6913 = !DILocation(line: 3948, column: 15, scope: !6911)
!6914 = !DILocation(line: 3948, column: 15, scope: !1238)
!6915 = !DILocation(line: 3949, column: 29, scope: !6911)
!6916 = !DILocation(line: 3949, column: 37, scope: !6911)
!6917 = !DILocation(line: 3949, column: 13, scope: !6911)
!6918 = !DILocation(line: 3949, column: 21, scope: !6911)
!6919 = !DILocation(line: 3949, column: 26, scope: !6911)
!6920 = !{!4091, !2290, i64 32}
!6921 = !DILocation(line: 3950, column: 11, scope: !1238)
!6922 = !DILocation(line: 3950, column: 16, scope: !1238)
!6923 = !DILocation(line: 3950, column: 32, scope: !1238)
!6924 = !DILocation(line: 3951, column: 17, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !1238, file: !162, line: 3951, column: 15)
!6926 = !DILocation(line: 3951, column: 25, scope: !6925)
!6927 = !DILocation(line: 3951, column: 54, scope: !6925)
!6928 = !DILocation(line: 3951, column: 62, scope: !6925)
!6929 = !DILocation(line: 3953, column: 41, scope: !6925)
!6930 = !DILocation(line: 3953, column: 49, scope: !6925)
!6931 = !DILocation(line: 3954, column: 41, scope: !6925)
!6932 = !DILocation(line: 3954, column: 49, scope: !6925)
!6933 = !{!4091, !2290, i64 24}
!6934 = !DILocation(line: 3955, column: 41, scope: !6925)
!6935 = !DILocation(line: 3955, column: 49, scope: !6925)
!6936 = !DILocation(line: 3951, column: 16, scope: !6925)
!6937 = !DILocation(line: 3951, column: 15, scope: !1238)
!6938 = !DILocation(line: 3956, column: 13, scope: !6925)
!6939 = !DILocation(line: 3957, column: 15, scope: !6940)
!6940 = distinct !DILexicalBlock(scope: !1238, file: !162, line: 3957, column: 15)
!6941 = !DILocation(line: 3957, column: 20, scope: !6940)
!6942 = !DILocation(line: 3957, column: 15, scope: !1238)
!6943 = !DILocation(line: 3958, column: 18, scope: !6944)
!6944 = distinct !DILexicalBlock(scope: !6945, file: !162, line: 3958, column: 17)
!6945 = distinct !DILexicalBlock(scope: !6940, file: !162, line: 3957, column: 37)
!6946 = !DILocation(line: 3958, column: 23, scope: !6944)
!6947 = !DILocation(line: 3958, column: 34, scope: !6944)
!6948 = !DILocation(line: 3959, column: 18, scope: !6944)
!6949 = !DILocation(line: 3959, column: 26, scope: !6944)
!6950 = !DILocation(line: 3959, column: 17, scope: !6944)
!6951 = !DILocation(line: 3959, column: 50, scope: !6944)
!6952 = !DILocation(line: 3960, column: 19, scope: !6944)
!6953 = !DILocation(line: 3960, column: 27, scope: !6944)
!6954 = !DILocation(line: 3960, column: 52, scope: !6944)
!6955 = !DILocation(line: 3960, column: 60, scope: !6944)
!6956 = !DILocation(line: 3960, column: 18, scope: !6944)
!6957 = !DILocation(line: 3958, column: 17, scope: !6945)
!6958 = !DILocation(line: 3961, column: 15, scope: !6944)
!6959 = !DILocation(line: 3962, column: 11, scope: !6945)
!6960 = !DILocation(line: 3966, column: 22, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6940, file: !162, line: 3966, column: 20)
!6962 = !DILocation(line: 3966, column: 30, scope: !6961)
!6963 = !DILocation(line: 3966, column: 21, scope: !6961)
!6964 = !DILocation(line: 3966, column: 20, scope: !6940)
!6965 = !DILocation(line: 3967, column: 39, scope: !6961)
!6966 = !DILocation(line: 3967, column: 13, scope: !6961)
!6967 = !DILocation(line: 3967, column: 18, scope: !6961)
!6968 = !DILocation(line: 3967, column: 37, scope: !6961)
!6969 = !DILocation(line: 3969, column: 9, scope: !1239)
!6970 = !DILocation(line: 3969, column: 9, scope: !6895)
!6971 = !DILocation(line: 3969, column: 9, scope: !1238)
!6972 = !DILocation(line: 3970, column: 10, scope: !1235)
!6973 = !DILocation(line: 3970, column: 18, scope: !1235)
!6974 = !DILocation(line: 3970, column: 35, scope: !1235)
!6975 = !DILocation(line: 3971, column: 7, scope: !1236)
!6976 = !DILocation(line: 3971, column: 7, scope: !1235)
!6977 = !DILocation(line: 3973, column: 12, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 3973, column: 11)
!6979 = !DILocation(line: 3973, column: 20, scope: !6978)
!6980 = !DILocation(line: 3973, column: 11, scope: !6978)
!6981 = !DILocation(line: 3973, column: 11, scope: !1225)
!6982 = !DILocation(line: 3974, column: 10, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !6978, file: !162, line: 3973, column: 46)
!6984 = !DILocation(line: 3974, column: 18, scope: !6983)
!6985 = !DILocation(line: 3974, column: 44, scope: !6983)
!6986 = !DILocation(line: 3974, column: 52, scope: !6983)
!6987 = !DILocation(line: 3974, column: 9, scope: !6983)
!6988 = !DILocation(line: 3975, column: 23, scope: !6983)
!6989 = !DILocation(line: 3976, column: 7, scope: !6983)
!6990 = !DILocation(line: 3977, column: 7, scope: !1225)
!6991 = !DILocation(line: 3983, column: 12, scope: !1242)
!6992 = !DILocation(line: 3983, column: 20, scope: !1242)
!6993 = !DILocation(line: 3983, column: 11, scope: !1242)
!6994 = !DILocation(line: 3983, column: 11, scope: !1225)
!6995 = !DILocation(line: 3984, column: 9, scope: !1241)
!6996 = !DILocation(line: 3984, column: 18, scope: !1241)
!6997 = !DILocation(line: 3984, column: 39, scope: !1241)
!6998 = !DILocation(line: 3984, column: 44, scope: !1241)
!6999 = !DILocation(line: 3985, column: 9, scope: !1241)
!7000 = !DILocation(line: 3985, column: 14, scope: !1241)
!7001 = !DILocation(line: 3985, column: 33, scope: !1241)
!7002 = !DILocation(line: 3986, column: 14, scope: !1245)
!7003 = !DILocation(line: 3986, column: 22, scope: !1245)
!7004 = !DILocation(line: 3986, column: 13, scope: !1245)
!7005 = !DILocation(line: 3986, column: 44, scope: !1245)
!7006 = !DILocation(line: 3986, column: 48, scope: !7007)
!7007 = !DILexicalBlockFile(scope: !1245, file: !162, discriminator: 1)
!7008 = !DILocation(line: 3986, column: 56, scope: !1245)
!7009 = !DILocation(line: 3986, column: 47, scope: !1245)
!7010 = !DILocation(line: 3986, column: 13, scope: !1241)
!7011 = !DILocation(line: 3987, column: 11, scope: !1244)
!7012 = !DILocation(line: 3987, column: 19, scope: !1244)
!7013 = !DILocation(line: 3987, column: 45, scope: !1244)
!7014 = !DILocation(line: 3987, column: 54, scope: !1244)
!7015 = !DILocation(line: 3987, column: 59, scope: !1244)
!7016 = !DILocation(line: 3987, column: 38, scope: !1244)
!7017 = !DILocation(line: 3987, column: 28, scope: !1244)
!7018 = !DILocation(line: 3990, column: 16, scope: !7019)
!7019 = distinct !DILexicalBlock(scope: !1244, file: !162, line: 3990, column: 15)
!7020 = !DILocation(line: 3990, column: 15, scope: !1244)
!7021 = !DILocation(line: 3991, column: 13, scope: !7019)
!7022 = !DILocation(line: 3992, column: 27, scope: !1244)
!7023 = !DILocation(line: 3992, column: 35, scope: !1244)
!7024 = !DILocation(line: 3992, column: 11, scope: !1244)
!7025 = !DILocation(line: 3992, column: 19, scope: !1244)
!7026 = !DILocation(line: 3992, column: 24, scope: !1244)
!7027 = !DILocation(line: 3993, column: 11, scope: !1244)
!7028 = !DILocation(line: 3993, column: 16, scope: !1244)
!7029 = !DILocation(line: 3993, column: 32, scope: !1244)
!7030 = !DILocation(line: 3994, column: 17, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !1244, file: !162, line: 3994, column: 15)
!7032 = !DILocation(line: 3994, column: 25, scope: !7031)
!7033 = !DILocation(line: 3994, column: 54, scope: !7031)
!7034 = !DILocation(line: 3994, column: 62, scope: !7031)
!7035 = !DILocation(line: 3996, column: 41, scope: !7031)
!7036 = !DILocation(line: 3996, column: 49, scope: !7031)
!7037 = !DILocation(line: 3997, column: 41, scope: !7031)
!7038 = !DILocation(line: 3997, column: 49, scope: !7031)
!7039 = !DILocation(line: 3998, column: 41, scope: !7031)
!7040 = !DILocation(line: 3998, column: 49, scope: !7031)
!7041 = !DILocation(line: 3994, column: 16, scope: !7031)
!7042 = !DILocation(line: 3994, column: 15, scope: !1244)
!7043 = !DILocation(line: 3999, column: 13, scope: !7031)
!7044 = !DILocation(line: 4000, column: 15, scope: !7045)
!7045 = distinct !DILexicalBlock(scope: !1244, file: !162, line: 4000, column: 15)
!7046 = !DILocation(line: 4000, column: 20, scope: !7045)
!7047 = !DILocation(line: 4000, column: 15, scope: !1244)
!7048 = !DILocation(line: 4001, column: 18, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !7050, file: !162, line: 4001, column: 17)
!7050 = distinct !DILexicalBlock(scope: !7045, file: !162, line: 4000, column: 37)
!7051 = !DILocation(line: 4001, column: 23, scope: !7049)
!7052 = !DILocation(line: 4001, column: 34, scope: !7049)
!7053 = !DILocation(line: 4002, column: 18, scope: !7049)
!7054 = !DILocation(line: 4002, column: 26, scope: !7049)
!7055 = !DILocation(line: 4002, column: 17, scope: !7049)
!7056 = !DILocation(line: 4002, column: 50, scope: !7049)
!7057 = !DILocation(line: 4003, column: 19, scope: !7049)
!7058 = !DILocation(line: 4003, column: 27, scope: !7049)
!7059 = !DILocation(line: 4003, column: 52, scope: !7049)
!7060 = !DILocation(line: 4003, column: 60, scope: !7049)
!7061 = !DILocation(line: 4003, column: 18, scope: !7049)
!7062 = !DILocation(line: 4001, column: 17, scope: !7050)
!7063 = !DILocation(line: 4004, column: 15, scope: !7049)
!7064 = !DILocation(line: 4005, column: 11, scope: !7050)
!7065 = !DILocation(line: 4010, column: 39, scope: !7045)
!7066 = !DILocation(line: 4010, column: 13, scope: !7045)
!7067 = !DILocation(line: 4010, column: 18, scope: !7045)
!7068 = !DILocation(line: 4010, column: 37, scope: !7045)
!7069 = !DILocation(line: 4012, column: 9, scope: !1245)
!7070 = !DILocation(line: 4012, column: 9, scope: !7007)
!7071 = !DILocation(line: 4012, column: 9, scope: !1244)
!7072 = !DILocation(line: 4013, column: 7, scope: !1242)
!7073 = !DILocation(line: 4013, column: 7, scope: !1241)
!7074 = !DILocation(line: 4015, column: 8, scope: !1225)
!7075 = !DILocation(line: 4015, column: 16, scope: !1225)
!7076 = !DILocation(line: 4015, column: 29, scope: !1225)
!7077 = !DILocation(line: 4016, column: 31, scope: !1225)
!7078 = !DILocation(line: 4016, column: 39, scope: !1225)
!7079 = !DILocation(line: 4016, column: 42, scope: !1225)
!7080 = !DILocation(line: 4016, column: 47, scope: !1225)
!7081 = !DILocation(line: 4016, column: 14, scope: !1225)
!7082 = !DILocation(line: 4016, column: 7, scope: !1225)
!7083 = !DILocation(line: 4018, column: 52, scope: !1225)
!7084 = !DILocation(line: 4018, column: 60, scope: !1225)
!7085 = !DILocation(line: 4018, column: 65, scope: !1225)
!7086 = !DILocation(line: 4018, column: 68, scope: !1225)
!7087 = !DILocation(line: 4018, column: 37, scope: !1225)
!7088 = !DILocation(line: 4018, column: 8, scope: !1225)
!7089 = !DILocation(line: 4018, column: 16, scope: !1225)
!7090 = !DILocation(line: 4018, column: 35, scope: !1225)
!7091 = !DILocation(line: 4019, column: 13, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4019, column: 11)
!7093 = !DILocation(line: 4019, column: 21, scope: !7092)
!7094 = !DILocation(line: 4019, column: 12, scope: !7092)
!7095 = !DILocation(line: 4019, column: 11, scope: !1225)
!7096 = !DILocation(line: 4020, column: 9, scope: !7092)
!7097 = !DILocation(line: 4021, column: 7, scope: !1225)
!7098 = !DILocation(line: 4023, column: 52, scope: !1225)
!7099 = !DILocation(line: 4023, column: 60, scope: !1225)
!7100 = !DILocation(line: 4023, column: 65, scope: !1225)
!7101 = !DILocation(line: 4023, column: 68, scope: !1225)
!7102 = !DILocation(line: 4023, column: 37, scope: !1225)
!7103 = !DILocation(line: 4023, column: 8, scope: !1225)
!7104 = !DILocation(line: 4023, column: 16, scope: !1225)
!7105 = !DILocation(line: 4023, column: 35, scope: !1225)
!7106 = !DILocation(line: 4024, column: 13, scope: !7107)
!7107 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4024, column: 11)
!7108 = !DILocation(line: 4024, column: 21, scope: !7107)
!7109 = !DILocation(line: 4024, column: 12, scope: !7107)
!7110 = !DILocation(line: 4024, column: 11, scope: !1225)
!7111 = !DILocation(line: 4025, column: 9, scope: !7107)
!7112 = !DILocation(line: 4026, column: 8, scope: !1225)
!7113 = !DILocation(line: 4026, column: 16, scope: !1225)
!7114 = !DILocation(line: 4026, column: 40, scope: !1225)
!7115 = !DILocation(line: 4027, column: 8, scope: !1225)
!7116 = !DILocation(line: 4027, column: 16, scope: !1225)
!7117 = !DILocation(line: 4027, column: 37, scope: !1225)
!7118 = !DILocation(line: 4028, column: 8, scope: !1225)
!7119 = !DILocation(line: 4028, column: 16, scope: !1225)
!7120 = !DILocation(line: 4028, column: 37, scope: !1225)
!7121 = !DILocation(line: 4029, column: 7, scope: !1225)
!7122 = !DILocation(line: 4031, column: 8, scope: !1225)
!7123 = !DILocation(line: 4031, column: 16, scope: !1225)
!7124 = !DILocation(line: 4031, column: 40, scope: !1225)
!7125 = !DILocation(line: 4032, column: 8, scope: !1225)
!7126 = !DILocation(line: 4032, column: 16, scope: !1225)
!7127 = !DILocation(line: 4032, column: 37, scope: !1225)
!7128 = !DILocation(line: 4033, column: 7, scope: !1225)
!7129 = !DILocation(line: 4035, column: 8, scope: !1225)
!7130 = !DILocation(line: 4035, column: 16, scope: !1225)
!7131 = !DILocation(line: 4035, column: 37, scope: !1225)
!7132 = !DILocation(line: 4036, column: 8, scope: !1225)
!7133 = !DILocation(line: 4036, column: 16, scope: !1225)
!7134 = !DILocation(line: 4036, column: 37, scope: !1225)
!7135 = !DILocation(line: 4037, column: 7, scope: !1225)
!7136 = !DILocation(line: 4039, column: 8, scope: !1225)
!7137 = !DILocation(line: 4039, column: 16, scope: !1225)
!7138 = !DILocation(line: 4039, column: 37, scope: !1225)
!7139 = !DILocation(line: 4040, column: 7, scope: !1225)
!7140 = !DILocation(line: 4042, column: 8, scope: !1225)
!7141 = !DILocation(line: 4042, column: 16, scope: !1225)
!7142 = !DILocation(line: 4042, column: 37, scope: !1225)
!7143 = !DILocation(line: 4043, column: 7, scope: !1225)
!7144 = !DILocation(line: 4045, column: 8, scope: !1225)
!7145 = !DILocation(line: 4045, column: 16, scope: !1225)
!7146 = !DILocation(line: 4045, column: 37, scope: !1225)
!7147 = !DILocation(line: 4046, column: 7, scope: !1225)
!7148 = !DILocation(line: 4048, column: 8, scope: !1225)
!7149 = !DILocation(line: 4048, column: 16, scope: !1225)
!7150 = !DILocation(line: 4048, column: 37, scope: !1225)
!7151 = !DILocation(line: 4049, column: 7, scope: !1225)
!7152 = !DILocation(line: 4051, column: 8, scope: !1225)
!7153 = !DILocation(line: 4051, column: 16, scope: !1225)
!7154 = !DILocation(line: 4051, column: 37, scope: !1225)
!7155 = !DILocation(line: 4052, column: 7, scope: !1225)
!7156 = !DILocation(line: 4054, column: 8, scope: !1225)
!7157 = !DILocation(line: 4054, column: 16, scope: !1225)
!7158 = !DILocation(line: 4054, column: 37, scope: !1225)
!7159 = !DILocation(line: 4054, column: 7, scope: !1225)
!7160 = !DILocation(line: 4056, column: 11, scope: !7161)
!7161 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4056, column: 11)
!7162 = !DILocation(line: 4056, column: 16, scope: !7161)
!7163 = !DILocation(line: 4056, column: 31, scope: !7161)
!7164 = !DILocation(line: 4056, column: 35, scope: !7165)
!7165 = !DILexicalBlockFile(scope: !7161, file: !162, discriminator: 1)
!7166 = !DILocation(line: 4056, column: 43, scope: !7161)
!7167 = !DILocation(line: 4056, column: 34, scope: !7161)
!7168 = !DILocation(line: 4056, column: 11, scope: !1225)
!7169 = !DILocation(line: 4057, column: 23, scope: !7161)
!7170 = !DILocation(line: 4057, column: 9, scope: !7161)
!7171 = !DILocation(line: 4058, column: 7, scope: !1225)
!7172 = !DILocation(line: 4061, column: 11, scope: !1248)
!7173 = !DILocation(line: 4061, column: 16, scope: !1248)
!7174 = !DILocation(line: 4061, column: 31, scope: !1248)
!7175 = !DILocation(line: 4061, column: 35, scope: !7176)
!7176 = !DILexicalBlockFile(scope: !1248, file: !162, discriminator: 1)
!7177 = !DILocation(line: 4061, column: 43, scope: !1248)
!7178 = !DILocation(line: 4061, column: 34, scope: !1248)
!7179 = !DILocation(line: 4061, column: 11, scope: !1225)
!7180 = !DILocation(line: 4062, column: 9, scope: !1247)
!7181 = !DILocation(line: 4062, column: 25, scope: !1247)
!7182 = !DILocation(line: 4063, column: 14, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !1247, file: !162, line: 4063, column: 13)
!7184 = !DILocation(line: 4063, column: 22, scope: !7183)
!7185 = !DILocation(line: 4063, column: 13, scope: !7183)
!7186 = !DILocation(line: 4063, column: 13, scope: !1247)
!7187 = !DILocation(line: 4064, column: 18, scope: !7188)
!7188 = distinct !DILexicalBlock(scope: !7183, file: !162, line: 4063, column: 44)
!7189 = !DILocation(line: 4065, column: 9, scope: !7188)
!7190 = !DILocation(line: 4067, column: 21, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !7183, file: !162, line: 4066, column: 14)
!7192 = !DILocation(line: 4067, column: 26, scope: !7191)
!7193 = !DILocation(line: 4067, column: 18, scope: !7191)
!7194 = !DILocation(line: 4071, column: 33, scope: !7195)
!7195 = distinct !DILexicalBlock(scope: !1247, file: !162, line: 4071, column: 13)
!7196 = !DILocation(line: 4071, column: 41, scope: !7195)
!7197 = !DILocation(line: 4071, column: 54, scope: !7195)
!7198 = !DILocation(line: 4071, column: 14, scope: !7195)
!7199 = !DILocation(line: 4071, column: 13, scope: !1247)
!7200 = !DILocation(line: 4072, column: 11, scope: !7195)
!7201 = !DILocation(line: 4073, column: 27, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !1247, file: !162, line: 4073, column: 13)
!7203 = !DILocation(line: 4073, column: 35, scope: !7202)
!7204 = !DILocation(line: 4073, column: 48, scope: !7202)
!7205 = !DILocation(line: 4073, column: 53, scope: !7202)
!7206 = !DILocation(line: 4073, column: 56, scope: !7202)
!7207 = !DILocation(line: 4073, column: 14, scope: !7202)
!7208 = !DILocation(line: 4073, column: 13, scope: !1247)
!7209 = !DILocation(line: 4074, column: 11, scope: !7202)
!7210 = !DILocation(line: 4075, column: 42, scope: !1247)
!7211 = !DILocation(line: 4075, column: 50, scope: !1247)
!7212 = !DILocation(line: 4075, column: 62, scope: !1247)
!7213 = !{!2396, !2290, i64 824}
!7214 = !DILocation(line: 4075, column: 10, scope: !1247)
!7215 = !DILocation(line: 4075, column: 18, scope: !1247)
!7216 = !DILocation(line: 4075, column: 39, scope: !1247)
!7217 = !DILocation(line: 4076, column: 23, scope: !1247)
!7218 = !DILocation(line: 4077, column: 7, scope: !1248)
!7219 = !DILocation(line: 4077, column: 7, scope: !7176)
!7220 = !DILocation(line: 4077, column: 7, scope: !1247)
!7221 = !DILocation(line: 4078, column: 7, scope: !1225)
!7222 = !DILocation(line: 4081, column: 11, scope: !7223)
!7223 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4081, column: 11)
!7224 = !DILocation(line: 4081, column: 16, scope: !7223)
!7225 = !DILocation(line: 4081, column: 11, scope: !1225)
!7226 = !DILocation(line: 4082, column: 31, scope: !7227)
!7227 = distinct !DILexicalBlock(scope: !7228, file: !162, line: 4082, column: 13)
!7228 = distinct !DILexicalBlock(scope: !7223, file: !162, line: 4081, column: 32)
!7229 = !DILocation(line: 4082, column: 39, scope: !7227)
!7230 = !DILocation(line: 4082, column: 60, scope: !7227)
!7231 = !DILocation(line: 4082, column: 68, scope: !7227)
!7232 = !DILocation(line: 4083, column: 31, scope: !7227)
!7233 = !DILocation(line: 4083, column: 39, scope: !7227)
!7234 = !DILocation(line: 4083, column: 65, scope: !7227)
!7235 = !DILocation(line: 4083, column: 73, scope: !7227)
!7236 = !DILocation(line: 4084, column: 33, scope: !7227)
!7237 = !DILocation(line: 4082, column: 14, scope: !7227)
!7238 = !DILocation(line: 4082, column: 13, scope: !7228)
!7239 = !DILocation(line: 4085, column: 11, scope: !7227)
!7240 = !DILocation(line: 4086, column: 14, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !7228, file: !162, line: 4086, column: 13)
!7242 = !DILocation(line: 4086, column: 22, scope: !7241)
!7243 = !DILocation(line: 4086, column: 13, scope: !7241)
!7244 = !DILocation(line: 4086, column: 44, scope: !7241)
!7245 = !DILocation(line: 4086, column: 48, scope: !7246)
!7246 = !DILexicalBlockFile(scope: !7241, file: !162, discriminator: 1)
!7247 = !DILocation(line: 4086, column: 56, scope: !7241)
!7248 = !DILocation(line: 4086, column: 47, scope: !7241)
!7249 = !DILocation(line: 4086, column: 13, scope: !7228)
!7250 = !DILocation(line: 4087, column: 17, scope: !7251)
!7251 = distinct !DILexicalBlock(scope: !7252, file: !162, line: 4087, column: 15)
!7252 = distinct !DILexicalBlock(scope: !7241, file: !162, line: 4086, column: 78)
!7253 = !DILocation(line: 4087, column: 25, scope: !7251)
!7254 = !DILocation(line: 4087, column: 15, scope: !7251)
!7255 = !DILocation(line: 4087, column: 46, scope: !7251)
!7256 = !DILocation(line: 4088, column: 15, scope: !7251)
!7257 = !DILocation(line: 4088, column: 21, scope: !7258)
!7258 = !DILexicalBlockFile(scope: !7251, file: !162, discriminator: 1)
!7259 = !DILocation(line: 4088, column: 29, scope: !7251)
!7260 = !DILocation(line: 4088, column: 19, scope: !7251)
!7261 = !DILocation(line: 4088, column: 50, scope: !7251)
!7262 = !DILocation(line: 4089, column: 19, scope: !7251)
!7263 = !DILocation(line: 4089, column: 23, scope: !7258)
!7264 = !DILocation(line: 4089, column: 31, scope: !7251)
!7265 = !DILocation(line: 4089, column: 22, scope: !7251)
!7266 = !DILocation(line: 4089, column: 55, scope: !7251)
!7267 = !DILocation(line: 4087, column: 15, scope: !7252)
!7268 = !DILocation(line: 4091, column: 23, scope: !7269)
!7269 = distinct !DILexicalBlock(scope: !7270, file: !162, line: 4091, column: 17)
!7270 = distinct !DILexicalBlock(scope: !7251, file: !162, line: 4089, column: 65)
!7271 = !DILocation(line: 4091, column: 31, scope: !7269)
!7272 = !DILocation(line: 4091, column: 45, scope: !7269)
!7273 = !DILocation(line: 4091, column: 55, scope: !7269)
!7274 = !DILocation(line: 4091, column: 63, scope: !7269)
!7275 = !DILocation(line: 4091, column: 77, scope: !7269)
!7276 = !DILocation(line: 4091, column: 49, scope: !7269)
!7277 = !DILocation(line: 4091, column: 81, scope: !7269)
!7278 = !DILocation(line: 4091, column: 96, scope: !7279)
!7279 = !DILexicalBlockFile(scope: !7269, file: !162, discriminator: 1)
!7280 = !DILocation(line: 4091, column: 104, scope: !7269)
!7281 = !DILocation(line: 4091, column: 85, scope: !7269)
!7282 = !DILocation(line: 4092, column: 17, scope: !7269)
!7283 = !DILocation(line: 4091, column: 19, scope: !7269)
!7284 = !DILocation(line: 4091, column: 131, scope: !7285)
!7285 = !DILexicalBlockFile(scope: !7269, file: !162, discriminator: 2)
!7286 = !DILocation(line: 4091, column: 139, scope: !7269)
!7287 = !DILocation(line: 4091, column: 153, scope: !7269)
!7288 = !DILocation(line: 4091, column: 157, scope: !7269)
!7289 = !DILocation(line: 4091, column: 160, scope: !7269)
!7290 = !DILocation(line: 4092, column: 26, scope: !7279)
!7291 = !DILocation(line: 4092, column: 34, scope: !7269)
!7292 = !DILocation(line: 4092, column: 48, scope: !7269)
!7293 = !DILocation(line: 4092, column: 58, scope: !7269)
!7294 = !DILocation(line: 4092, column: 66, scope: !7269)
!7295 = !DILocation(line: 4092, column: 80, scope: !7269)
!7296 = !DILocation(line: 4092, column: 52, scope: !7269)
!7297 = !DILocation(line: 4092, column: 84, scope: !7269)
!7298 = !DILocation(line: 4092, column: 99, scope: !7285)
!7299 = !DILocation(line: 4092, column: 107, scope: !7269)
!7300 = !DILocation(line: 4092, column: 88, scope: !7269)
!7301 = !DILocation(line: 4091, column: 17, scope: !7270)
!7302 = !DILocation(line: 4092, column: 22, scope: !7269)
!7303 = !DILocation(line: 4092, column: 134, scope: !7304)
!7304 = !DILexicalBlockFile(scope: !7269, file: !162, discriminator: 3)
!7305 = !DILocation(line: 4092, column: 142, scope: !7269)
!7306 = !DILocation(line: 4092, column: 156, scope: !7269)
!7307 = !DILocation(line: 4092, column: 160, scope: !7269)
!7308 = !DILocation(line: 4092, column: 163, scope: !7269)
!7309 = !DILocation(line: 4093, column: 15, scope: !7269)
!7310 = !DILocation(line: 4094, column: 46, scope: !7270)
!7311 = !DILocation(line: 4094, column: 54, scope: !7270)
!7312 = !DILocation(line: 4094, column: 66, scope: !7270)
!7313 = !DILocation(line: 4094, column: 14, scope: !7270)
!7314 = !DILocation(line: 4094, column: 22, scope: !7270)
!7315 = !DILocation(line: 4094, column: 43, scope: !7270)
!7316 = !DILocation(line: 4095, column: 50, scope: !7270)
!7317 = !DILocation(line: 4095, column: 58, scope: !7270)
!7318 = !DILocation(line: 4095, column: 72, scope: !7270)
!7319 = !DILocation(line: 4095, column: 17, scope: !7270)
!7320 = !DILocation(line: 4095, column: 25, scope: !7270)
!7321 = !DILocation(line: 4095, column: 39, scope: !7270)
!7322 = !DILocation(line: 4095, column: 45, scope: !7270)
!7323 = !DILocation(line: 4096, column: 11, scope: !7270)
!7324 = !DILocation(line: 4097, column: 25, scope: !7252)
!7325 = !DILocation(line: 4097, column: 12, scope: !7252)
!7326 = !DILocation(line: 4097, column: 23, scope: !7252)
!7327 = !DILocation(line: 4098, column: 12, scope: !7252)
!7328 = !DILocation(line: 4098, column: 20, scope: !7252)
!7329 = !DILocation(line: 4098, column: 43, scope: !7252)
!7330 = !DILocation(line: 4098, column: 51, scope: !7252)
!7331 = !DILocation(line: 4098, column: 67, scope: !7252)
!7332 = !DILocation(line: 4098, column: 75, scope: !7252)
!7333 = !DILocation(line: 4098, column: 95, scope: !7252)
!7334 = !DILocation(line: 4099, column: 31, scope: !7252)
!7335 = !DILocation(line: 4099, column: 39, scope: !7252)
!7336 = !DILocation(line: 4099, column: 59, scope: !7252)
!7337 = !DILocation(line: 4099, column: 66, scope: !7252)
!7338 = !DILocation(line: 4099, column: 74, scope: !7252)
!7339 = !DILocation(line: 4100, column: 33, scope: !7252)
!7340 = !DILocation(line: 4100, column: 38, scope: !7252)
!7341 = !DILocation(line: 4098, column: 11, scope: !7252)
!7342 = !DILocation(line: 4101, column: 23, scope: !7252)
!7343 = !DILocation(line: 4101, column: 31, scope: !7252)
!7344 = !DILocation(line: 4101, column: 11, scope: !7252)
!7345 = !DILocation(line: 4102, column: 25, scope: !7252)
!7346 = !DILocation(line: 4103, column: 9, scope: !7252)
!7347 = !DILocation(line: 4104, column: 7, scope: !7228)
!7348 = !DILocation(line: 4105, column: 7, scope: !1225)
!7349 = !DILocation(line: 4108, column: 11, scope: !1251)
!7350 = !DILocation(line: 4108, column: 16, scope: !1251)
!7351 = !DILocation(line: 4108, column: 11, scope: !1225)
!7352 = !DILocation(line: 4109, column: 9, scope: !1250)
!7353 = !DILocation(line: 4109, column: 25, scope: !1250)
!7354 = !DILocation(line: 4110, column: 9, scope: !1250)
!7355 = !DILocation(line: 4110, column: 24, scope: !1250)
!7356 = !DILocation(line: 4111, column: 31, scope: !1250)
!7357 = !DILocation(line: 4111, column: 39, scope: !1250)
!7358 = !DILocation(line: 4111, column: 45, scope: !1250)
!7359 = !DILocation(line: 4111, column: 53, scope: !1250)
!7360 = !DILocation(line: 4112, column: 31, scope: !1250)
!7361 = !DILocation(line: 4112, column: 35, scope: !1250)
!7362 = !DILocation(line: 4112, column: 40, scope: !1250)
!7363 = !DILocation(line: 4112, column: 33, scope: !1250)
!7364 = !DILocation(line: 4113, column: 31, scope: !1250)
!7365 = !DILocation(line: 4113, column: 38, scope: !1250)
!7366 = !DILocation(line: 4113, column: 43, scope: !1250)
!7367 = !DILocation(line: 4113, column: 36, scope: !1250)
!7368 = !DILocation(line: 4114, column: 32, scope: !1250)
!7369 = !DILocation(line: 4114, column: 37, scope: !1250)
!7370 = !DILocation(line: 4111, column: 11, scope: !1250)
!7371 = !DILocation(line: 4115, column: 13, scope: !7372)
!7372 = distinct !DILexicalBlock(scope: !1250, file: !162, line: 4115, column: 13)
!7373 = !DILocation(line: 4115, column: 13, scope: !1250)
!7374 = !DILocation(line: 4116, column: 18, scope: !7372)
!7375 = !DILocation(line: 4116, column: 11, scope: !7372)
!7376 = !DILocation(line: 4117, column: 21, scope: !1250)
!7377 = !DILocation(line: 4117, column: 26, scope: !1250)
!7378 = !DILocation(line: 4117, column: 33, scope: !1250)
!7379 = !DILocation(line: 4117, column: 16, scope: !1250)
!7380 = !DILocation(line: 4118, column: 34, scope: !1250)
!7381 = !DILocation(line: 4118, column: 39, scope: !1250)
!7382 = !DILocation(line: 4118, column: 46, scope: !1250)
!7383 = !DILocation(line: 4118, column: 12, scope: !1250)
!7384 = !DILocation(line: 4118, column: 17, scope: !1250)
!7385 = !DILocation(line: 4118, column: 24, scope: !1250)
!7386 = !DILocation(line: 4118, column: 30, scope: !1250)
!7387 = !DILocation(line: 4120, column: 31, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !1250, file: !162, line: 4120, column: 13)
!7389 = !DILocation(line: 4120, column: 39, scope: !7388)
!7390 = !DILocation(line: 4120, column: 60, scope: !7388)
!7391 = !DILocation(line: 4120, column: 68, scope: !7388)
!7392 = !DILocation(line: 4121, column: 31, scope: !7388)
!7393 = !DILocation(line: 4121, column: 39, scope: !7388)
!7394 = !DILocation(line: 4121, column: 80, scope: !7388)
!7395 = !DILocation(line: 4121, column: 88, scope: !7388)
!7396 = !DILocation(line: 4120, column: 14, scope: !7388)
!7397 = !DILocation(line: 4120, column: 13, scope: !1250)
!7398 = !DILocation(line: 4122, column: 11, scope: !7388)
!7399 = !DILocation(line: 4123, column: 14, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !1250, file: !162, line: 4123, column: 13)
!7401 = !DILocation(line: 4123, column: 22, scope: !7400)
!7402 = !DILocation(line: 4123, column: 13, scope: !7400)
!7403 = !DILocation(line: 4123, column: 44, scope: !7400)
!7404 = !DILocation(line: 4123, column: 48, scope: !7405)
!7405 = !DILexicalBlockFile(scope: !7400, file: !162, discriminator: 1)
!7406 = !DILocation(line: 4123, column: 56, scope: !7400)
!7407 = !DILocation(line: 4123, column: 47, scope: !7400)
!7408 = !DILocation(line: 4123, column: 13, scope: !1250)
!7409 = !DILocation(line: 4124, column: 17, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7411, file: !162, line: 4124, column: 15)
!7411 = distinct !DILexicalBlock(scope: !7400, file: !162, line: 4123, column: 78)
!7412 = !DILocation(line: 4124, column: 25, scope: !7410)
!7413 = !DILocation(line: 4124, column: 15, scope: !7410)
!7414 = !DILocation(line: 4124, column: 46, scope: !7410)
!7415 = !DILocation(line: 4125, column: 15, scope: !7410)
!7416 = !DILocation(line: 4125, column: 21, scope: !7417)
!7417 = !DILexicalBlockFile(scope: !7410, file: !162, discriminator: 1)
!7418 = !DILocation(line: 4125, column: 29, scope: !7410)
!7419 = !DILocation(line: 4125, column: 19, scope: !7410)
!7420 = !DILocation(line: 4125, column: 50, scope: !7410)
!7421 = !DILocation(line: 4126, column: 19, scope: !7410)
!7422 = !DILocation(line: 4126, column: 23, scope: !7417)
!7423 = !DILocation(line: 4126, column: 31, scope: !7410)
!7424 = !DILocation(line: 4126, column: 22, scope: !7410)
!7425 = !DILocation(line: 4126, column: 55, scope: !7410)
!7426 = !DILocation(line: 4124, column: 15, scope: !7411)
!7427 = !DILocation(line: 4128, column: 23, scope: !7428)
!7428 = distinct !DILexicalBlock(scope: !7429, file: !162, line: 4128, column: 17)
!7429 = distinct !DILexicalBlock(scope: !7410, file: !162, line: 4126, column: 65)
!7430 = !DILocation(line: 4128, column: 31, scope: !7428)
!7431 = !DILocation(line: 4128, column: 45, scope: !7428)
!7432 = !DILocation(line: 4128, column: 55, scope: !7428)
!7433 = !DILocation(line: 4128, column: 63, scope: !7428)
!7434 = !DILocation(line: 4128, column: 77, scope: !7428)
!7435 = !DILocation(line: 4128, column: 49, scope: !7428)
!7436 = !DILocation(line: 4128, column: 81, scope: !7428)
!7437 = !DILocation(line: 4128, column: 96, scope: !7438)
!7438 = !DILexicalBlockFile(scope: !7428, file: !162, discriminator: 1)
!7439 = !DILocation(line: 4128, column: 104, scope: !7428)
!7440 = !DILocation(line: 4128, column: 85, scope: !7428)
!7441 = !DILocation(line: 4129, column: 17, scope: !7428)
!7442 = !DILocation(line: 4128, column: 19, scope: !7428)
!7443 = !DILocation(line: 4128, column: 131, scope: !7444)
!7444 = !DILexicalBlockFile(scope: !7428, file: !162, discriminator: 2)
!7445 = !DILocation(line: 4128, column: 139, scope: !7428)
!7446 = !DILocation(line: 4128, column: 153, scope: !7428)
!7447 = !DILocation(line: 4128, column: 157, scope: !7428)
!7448 = !DILocation(line: 4128, column: 160, scope: !7428)
!7449 = !DILocation(line: 4129, column: 26, scope: !7438)
!7450 = !DILocation(line: 4129, column: 34, scope: !7428)
!7451 = !DILocation(line: 4129, column: 48, scope: !7428)
!7452 = !DILocation(line: 4129, column: 58, scope: !7428)
!7453 = !DILocation(line: 4129, column: 66, scope: !7428)
!7454 = !DILocation(line: 4129, column: 80, scope: !7428)
!7455 = !DILocation(line: 4129, column: 52, scope: !7428)
!7456 = !DILocation(line: 4129, column: 84, scope: !7428)
!7457 = !DILocation(line: 4129, column: 99, scope: !7444)
!7458 = !DILocation(line: 4129, column: 107, scope: !7428)
!7459 = !DILocation(line: 4129, column: 88, scope: !7428)
!7460 = !DILocation(line: 4128, column: 17, scope: !7429)
!7461 = !DILocation(line: 4129, column: 22, scope: !7428)
!7462 = !DILocation(line: 4129, column: 134, scope: !7463)
!7463 = !DILexicalBlockFile(scope: !7428, file: !162, discriminator: 3)
!7464 = !DILocation(line: 4129, column: 142, scope: !7428)
!7465 = !DILocation(line: 4129, column: 156, scope: !7428)
!7466 = !DILocation(line: 4129, column: 160, scope: !7428)
!7467 = !DILocation(line: 4129, column: 163, scope: !7428)
!7468 = !DILocation(line: 4130, column: 15, scope: !7428)
!7469 = !DILocation(line: 4131, column: 46, scope: !7429)
!7470 = !DILocation(line: 4131, column: 54, scope: !7429)
!7471 = !DILocation(line: 4131, column: 66, scope: !7429)
!7472 = !DILocation(line: 4131, column: 14, scope: !7429)
!7473 = !DILocation(line: 4131, column: 22, scope: !7429)
!7474 = !DILocation(line: 4131, column: 43, scope: !7429)
!7475 = !DILocation(line: 4132, column: 50, scope: !7429)
!7476 = !DILocation(line: 4132, column: 58, scope: !7429)
!7477 = !DILocation(line: 4132, column: 72, scope: !7429)
!7478 = !DILocation(line: 4132, column: 17, scope: !7429)
!7479 = !DILocation(line: 4132, column: 25, scope: !7429)
!7480 = !DILocation(line: 4132, column: 39, scope: !7429)
!7481 = !DILocation(line: 4132, column: 45, scope: !7429)
!7482 = !DILocation(line: 4133, column: 11, scope: !7429)
!7483 = !DILocation(line: 4134, column: 25, scope: !7411)
!7484 = !DILocation(line: 4134, column: 12, scope: !7411)
!7485 = !DILocation(line: 4134, column: 23, scope: !7411)
!7486 = !DILocation(line: 4135, column: 12, scope: !7411)
!7487 = !DILocation(line: 4135, column: 20, scope: !7411)
!7488 = !DILocation(line: 4135, column: 43, scope: !7411)
!7489 = !DILocation(line: 4135, column: 51, scope: !7411)
!7490 = !DILocation(line: 4135, column: 67, scope: !7411)
!7491 = !DILocation(line: 4135, column: 75, scope: !7411)
!7492 = !DILocation(line: 4135, column: 95, scope: !7411)
!7493 = !DILocation(line: 4136, column: 31, scope: !7411)
!7494 = !DILocation(line: 4136, column: 39, scope: !7411)
!7495 = !DILocation(line: 4136, column: 59, scope: !7411)
!7496 = !DILocation(line: 4136, column: 66, scope: !7411)
!7497 = !DILocation(line: 4136, column: 74, scope: !7411)
!7498 = !DILocation(line: 4137, column: 30, scope: !7411)
!7499 = !DILocation(line: 4138, column: 30, scope: !7411)
!7500 = !DILocation(line: 4138, column: 35, scope: !7411)
!7501 = !DILocation(line: 4135, column: 11, scope: !7411)
!7502 = !DILocation(line: 4139, column: 23, scope: !7411)
!7503 = !DILocation(line: 4139, column: 31, scope: !7411)
!7504 = !DILocation(line: 4139, column: 11, scope: !7411)
!7505 = !DILocation(line: 4140, column: 25, scope: !7411)
!7506 = !DILocation(line: 4141, column: 9, scope: !7411)
!7507 = !DILocation(line: 4142, column: 7, scope: !1251)
!7508 = !DILocation(line: 4142, column: 7, scope: !7509)
!7509 = !DILexicalBlockFile(scope: !1251, file: !162, discriminator: 1)
!7510 = !DILocation(line: 4142, column: 7, scope: !1250)
!7511 = !DILocation(line: 4143, column: 7, scope: !1225)
!7512 = !DILocation(line: 4145, column: 11, scope: !1255)
!7513 = !DILocation(line: 4145, column: 16, scope: !1255)
!7514 = !DILocation(line: 4145, column: 11, scope: !1225)
!7515 = !DILocation(line: 4146, column: 9, scope: !1254)
!7516 = !DILocation(line: 4146, column: 24, scope: !1254)
!7517 = !DILocation(line: 4146, column: 50, scope: !1254)
!7518 = !DILocation(line: 4146, column: 58, scope: !1254)
!7519 = !DILocation(line: 4147, column: 45, scope: !1254)
!7520 = !DILocation(line: 4147, column: 49, scope: !1254)
!7521 = !DILocation(line: 4147, column: 54, scope: !1254)
!7522 = !DILocation(line: 4147, column: 47, scope: !1254)
!7523 = !DILocation(line: 4148, column: 45, scope: !1254)
!7524 = !DILocation(line: 4148, column: 52, scope: !1254)
!7525 = !DILocation(line: 4148, column: 57, scope: !1254)
!7526 = !DILocation(line: 4148, column: 50, scope: !1254)
!7527 = !DILocation(line: 4146, column: 33, scope: !1254)
!7528 = !DILocation(line: 4149, column: 14, scope: !7529)
!7529 = distinct !DILexicalBlock(scope: !1254, file: !162, line: 4149, column: 13)
!7530 = !DILocation(line: 4149, column: 22, scope: !7529)
!7531 = !DILocation(line: 4149, column: 13, scope: !7529)
!7532 = !DILocation(line: 4149, column: 13, scope: !1254)
!7533 = !DILocation(line: 4150, column: 48, scope: !7534)
!7534 = distinct !DILexicalBlock(scope: !7529, file: !162, line: 4149, column: 37)
!7535 = !DILocation(line: 4150, column: 53, scope: !7534)
!7536 = !DILocation(line: 4150, column: 71, scope: !7534)
!7537 = !DILocation(line: 4150, column: 12, scope: !7534)
!7538 = !DILocation(line: 4150, column: 20, scope: !7534)
!7539 = !DILocation(line: 4150, column: 35, scope: !7534)
!7540 = !DILocation(line: 4150, column: 43, scope: !7534)
!7541 = !{!4091, !2290, i64 8}
!7542 = !DILocation(line: 4151, column: 54, scope: !7534)
!7543 = !DILocation(line: 4151, column: 59, scope: !7534)
!7544 = !DILocation(line: 4151, column: 77, scope: !7534)
!7545 = !DILocation(line: 4151, column: 85, scope: !7534)
!7546 = !DILocation(line: 4151, column: 90, scope: !7534)
!7547 = !DILocation(line: 4151, column: 108, scope: !7534)
!7548 = !DILocation(line: 4151, column: 81, scope: !7534)
!7549 = !DILocation(line: 4151, column: 45, scope: !7534)
!7550 = !DILocation(line: 4151, column: 12, scope: !7534)
!7551 = !DILocation(line: 4151, column: 20, scope: !7534)
!7552 = !DILocation(line: 4151, column: 35, scope: !7534)
!7553 = !DILocation(line: 4151, column: 43, scope: !7534)
!7554 = !{!4091, !2400, i64 16}
!7555 = !DILocation(line: 4152, column: 47, scope: !7534)
!7556 = !DILocation(line: 4152, column: 52, scope: !7534)
!7557 = !DILocation(line: 4152, column: 70, scope: !7534)
!7558 = !DILocation(line: 4152, column: 14, scope: !7534)
!7559 = !DILocation(line: 4152, column: 19, scope: !7534)
!7560 = !DILocation(line: 4152, column: 37, scope: !7534)
!7561 = !DILocation(line: 4152, column: 43, scope: !7534)
!7562 = !DILocation(line: 4153, column: 16, scope: !7563)
!7563 = distinct !DILexicalBlock(scope: !7534, file: !162, line: 4153, column: 15)
!7564 = !DILocation(line: 4153, column: 24, scope: !7563)
!7565 = !DILocation(line: 4153, column: 15, scope: !7563)
!7566 = !DILocation(line: 4153, column: 15, scope: !7534)
!7567 = !DILocation(line: 4154, column: 27, scope: !7568)
!7568 = distinct !DILexicalBlock(scope: !7563, file: !162, line: 4153, column: 46)
!7569 = !DILocation(line: 4154, column: 14, scope: !7568)
!7570 = !DILocation(line: 4154, column: 25, scope: !7568)
!7571 = !DILocation(line: 4155, column: 14, scope: !7568)
!7572 = !DILocation(line: 4155, column: 22, scope: !7568)
!7573 = !DILocation(line: 4155, column: 44, scope: !7568)
!7574 = !DILocation(line: 4155, column: 52, scope: !7568)
!7575 = !DILocation(line: 4156, column: 32, scope: !7568)
!7576 = !DILocation(line: 4156, column: 40, scope: !7568)
!7577 = !DILocation(line: 4156, column: 55, scope: !7568)
!7578 = !{!4091, !2290, i64 0}
!7579 = !DILocation(line: 4157, column: 32, scope: !7568)
!7580 = !DILocation(line: 4157, column: 40, scope: !7568)
!7581 = !DILocation(line: 4157, column: 55, scope: !7568)
!7582 = !{!4091, !2291, i64 57}
!7583 = !DILocation(line: 4157, column: 31, scope: !7568)
!7584 = !DILocation(line: 4158, column: 32, scope: !7568)
!7585 = !DILocation(line: 4158, column: 40, scope: !7568)
!7586 = !DILocation(line: 4158, column: 55, scope: !7568)
!7587 = !DILocation(line: 4159, column: 32, scope: !7568)
!7588 = !DILocation(line: 4159, column: 40, scope: !7568)
!7589 = !DILocation(line: 4159, column: 55, scope: !7568)
!7590 = !DILocation(line: 4160, column: 32, scope: !7568)
!7591 = !DILocation(line: 4160, column: 40, scope: !7568)
!7592 = !DILocation(line: 4155, column: 13, scope: !7568)
!7593 = !DILocation(line: 4161, column: 27, scope: !7568)
!7594 = !DILocation(line: 4162, column: 11, scope: !7568)
!7595 = !DILocation(line: 4163, column: 9, scope: !7534)
!7596 = !DILocation(line: 4165, column: 45, scope: !7529)
!7597 = !DILocation(line: 4165, column: 50, scope: !7529)
!7598 = !DILocation(line: 4165, column: 68, scope: !7529)
!7599 = !DILocation(line: 4165, column: 14, scope: !7529)
!7600 = !DILocation(line: 4165, column: 19, scope: !7529)
!7601 = !DILocation(line: 4165, column: 37, scope: !7529)
!7602 = !DILocation(line: 4165, column: 41, scope: !7529)
!7603 = !DILocation(line: 4166, column: 13, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !1254, file: !162, line: 4166, column: 13)
!7605 = !DILocation(line: 4166, column: 20, scope: !7604)
!7606 = !DILocation(line: 4166, column: 13, scope: !1254)
!7607 = !DILocation(line: 4167, column: 18, scope: !7604)
!7608 = !DILocation(line: 4167, column: 11, scope: !7604)
!7609 = !DILocation(line: 4168, column: 7, scope: !1255)
!7610 = !DILocation(line: 4168, column: 7, scope: !7611)
!7611 = !DILexicalBlockFile(scope: !1255, file: !162, discriminator: 1)
!7612 = !DILocation(line: 4168, column: 7, scope: !1254)
!7613 = !DILocation(line: 4169, column: 7, scope: !1225)
!7614 = !DILocation(line: 4172, column: 8, scope: !1225)
!7615 = !DILocation(line: 4172, column: 16, scope: !1225)
!7616 = !DILocation(line: 4172, column: 33, scope: !1225)
!7617 = !DILocation(line: 4174, column: 7, scope: !1225)
!7618 = !DILocation(line: 4174, column: 12, scope: !1225)
!7619 = !DILocation(line: 4174, column: 31, scope: !1225)
!7620 = !DILocation(line: 4175, column: 12, scope: !7621)
!7621 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4175, column: 11)
!7622 = !DILocation(line: 4175, column: 20, scope: !7621)
!7623 = !DILocation(line: 4175, column: 11, scope: !7621)
!7624 = !DILocation(line: 4175, column: 11, scope: !1225)
!7625 = !DILocation(line: 4176, column: 54, scope: !7626)
!7626 = distinct !DILexicalBlock(scope: !7621, file: !162, line: 4175, column: 48)
!7627 = !DILocation(line: 4176, column: 62, scope: !7626)
!7628 = !DILocation(line: 4176, column: 75, scope: !7626)
!7629 = !DILocation(line: 4177, column: 40, scope: !7626)
!7630 = !DILocation(line: 4177, column: 44, scope: !7626)
!7631 = !DILocation(line: 4177, column: 49, scope: !7626)
!7632 = !DILocation(line: 4177, column: 42, scope: !7626)
!7633 = !DILocation(line: 4178, column: 40, scope: !7626)
!7634 = !DILocation(line: 4178, column: 47, scope: !7626)
!7635 = !DILocation(line: 4178, column: 52, scope: !7626)
!7636 = !DILocation(line: 4178, column: 45, scope: !7626)
!7637 = !DILocation(line: 4176, column: 36, scope: !7626)
!7638 = !DILocation(line: 4176, column: 10, scope: !7626)
!7639 = !DILocation(line: 4176, column: 18, scope: !7626)
!7640 = !DILocation(line: 4176, column: 34, scope: !7626)
!7641 = !DILocation(line: 4179, column: 14, scope: !7642)
!7642 = distinct !DILexicalBlock(scope: !7626, file: !162, line: 4179, column: 13)
!7643 = !DILocation(line: 4179, column: 22, scope: !7642)
!7644 = !DILocation(line: 4179, column: 38, scope: !7642)
!7645 = !DILocation(line: 4179, column: 13, scope: !7626)
!7646 = !DILocation(line: 4180, column: 11, scope: !7642)
!7647 = !DILocation(line: 4181, column: 46, scope: !7626)
!7648 = !DILocation(line: 4181, column: 54, scope: !7626)
!7649 = !DILocation(line: 4181, column: 68, scope: !7626)
!7650 = !DILocation(line: 4181, column: 13, scope: !7626)
!7651 = !DILocation(line: 4181, column: 21, scope: !7626)
!7652 = !DILocation(line: 4181, column: 35, scope: !7626)
!7653 = !DILocation(line: 4181, column: 41, scope: !7626)
!7654 = !DILocation(line: 4182, column: 23, scope: !7626)
!7655 = !DILocation(line: 4183, column: 7, scope: !7626)
!7656 = !DILocation(line: 4188, column: 10, scope: !7621)
!7657 = !DILocation(line: 4188, column: 18, scope: !7621)
!7658 = !DILocation(line: 4188, column: 34, scope: !7621)
!7659 = !DILocation(line: 4190, column: 12, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4190, column: 11)
!7661 = !DILocation(line: 4190, column: 17, scope: !7660)
!7662 = !DILocation(line: 4192, column: 11, scope: !7660)
!7663 = !DILocation(line: 4192, column: 16, scope: !7664)
!7664 = !DILexicalBlockFile(scope: !7660, file: !162, discriminator: 1)
!7665 = !DILocation(line: 4192, column: 24, scope: !7660)
!7666 = !DILocation(line: 4192, column: 15, scope: !7660)
!7667 = !DILocation(line: 4194, column: 11, scope: !7660)
!7668 = !DILocation(line: 4194, column: 15, scope: !7664)
!7669 = !DILocation(line: 4194, column: 23, scope: !7660)
!7670 = !DILocation(line: 4194, column: 14, scope: !7660)
!7671 = !DILocation(line: 4195, column: 11, scope: !7660)
!7672 = !DILocation(line: 4195, column: 16, scope: !7664)
!7673 = !DILocation(line: 4195, column: 24, scope: !7660)
!7674 = !DILocation(line: 4195, column: 49, scope: !7660)
!7675 = !DILocation(line: 4195, column: 57, scope: !7660)
!7676 = !DILocation(line: 4195, column: 15, scope: !7660)
!7677 = !DILocation(line: 4190, column: 11, scope: !1225)
!7678 = !DILocation(line: 4196, column: 9, scope: !7660)
!7679 = !DILocation(line: 4200, column: 13, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4200, column: 11)
!7681 = !DILocation(line: 4200, column: 21, scope: !7680)
!7682 = !DILocation(line: 4200, column: 12, scope: !7680)
!7683 = !DILocation(line: 4200, column: 11, scope: !1225)
!7684 = !DILocation(line: 4201, column: 51, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7680, file: !162, line: 4200, column: 36)
!7686 = !DILocation(line: 4202, column: 40, scope: !7685)
!7687 = !DILocation(line: 4202, column: 45, scope: !7685)
!7688 = !DILocation(line: 4201, column: 44, scope: !7685)
!7689 = !DILocation(line: 4201, column: 34, scope: !7685)
!7690 = !DILocation(line: 4201, column: 10, scope: !7685)
!7691 = !DILocation(line: 4201, column: 18, scope: !7685)
!7692 = !DILocation(line: 4201, column: 32, scope: !7685)
!7693 = !DILocation(line: 4205, column: 15, scope: !7694)
!7694 = distinct !DILexicalBlock(scope: !7685, file: !162, line: 4205, column: 13)
!7695 = !DILocation(line: 4205, column: 23, scope: !7694)
!7696 = !DILocation(line: 4205, column: 14, scope: !7694)
!7697 = !DILocation(line: 4205, column: 13, scope: !7685)
!7698 = !DILocation(line: 4206, column: 11, scope: !7694)
!7699 = !DILocation(line: 4207, column: 10, scope: !7685)
!7700 = !DILocation(line: 4207, column: 18, scope: !7685)
!7701 = !DILocation(line: 4207, column: 33, scope: !7685)
!7702 = !DILocation(line: 4207, column: 42, scope: !7685)
!7703 = !DILocation(line: 4208, column: 7, scope: !7685)
!7704 = !DILocation(line: 4200, column: 33, scope: !7705)
!7705 = !DILexicalBlockFile(scope: !7680, file: !162, discriminator: 1)
!7706 = !DILocation(line: 4212, column: 11, scope: !7707)
!7707 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4212, column: 11)
!7708 = !DILocation(line: 4212, column: 16, scope: !7707)
!7709 = !DILocation(line: 4212, column: 31, scope: !7707)
!7710 = !DILocation(line: 4212, column: 35, scope: !7711)
!7711 = !DILexicalBlockFile(scope: !7707, file: !162, discriminator: 1)
!7712 = !DILocation(line: 4212, column: 43, scope: !7707)
!7713 = !DILocation(line: 4212, column: 34, scope: !7707)
!7714 = !DILocation(line: 4212, column: 11, scope: !1225)
!7715 = !DILocation(line: 4213, column: 61, scope: !7716)
!7716 = distinct !DILexicalBlock(scope: !7707, file: !162, line: 4212, column: 58)
!7717 = !DILocation(line: 4213, column: 66, scope: !7716)
!7718 = !DILocation(line: 4213, column: 72, scope: !7716)
!7719 = !DILocation(line: 4214, column: 48, scope: !7716)
!7720 = !DILocation(line: 4214, column: 52, scope: !7716)
!7721 = !DILocation(line: 4214, column: 57, scope: !7716)
!7722 = !DILocation(line: 4214, column: 50, scope: !7716)
!7723 = !DILocation(line: 4215, column: 48, scope: !7716)
!7724 = !DILocation(line: 4215, column: 55, scope: !7716)
!7725 = !DILocation(line: 4215, column: 60, scope: !7716)
!7726 = !DILocation(line: 4215, column: 53, scope: !7716)
!7727 = !DILocation(line: 4213, column: 44, scope: !7716)
!7728 = !DILocation(line: 4213, column: 10, scope: !7716)
!7729 = !DILocation(line: 4213, column: 18, scope: !7716)
!7730 = !DILocation(line: 4213, column: 33, scope: !7716)
!7731 = !DILocation(line: 4213, column: 42, scope: !7716)
!7732 = !DILocation(line: 4216, column: 15, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7716, file: !162, line: 4216, column: 13)
!7734 = !DILocation(line: 4216, column: 23, scope: !7733)
!7735 = !DILocation(line: 4216, column: 38, scope: !7733)
!7736 = !DILocation(line: 4216, column: 14, scope: !7733)
!7737 = !DILocation(line: 4216, column: 13, scope: !7716)
!7738 = !DILocation(line: 4217, column: 11, scope: !7733)
!7739 = !DILocation(line: 4218, column: 41, scope: !7716)
!7740 = !DILocation(line: 4218, column: 49, scope: !7716)
!7741 = !DILocation(line: 4218, column: 10, scope: !7716)
!7742 = !DILocation(line: 4218, column: 18, scope: !7716)
!7743 = !DILocation(line: 4218, column: 33, scope: !7716)
!7744 = !DILocation(line: 4218, column: 38, scope: !7716)
!7745 = !DILocation(line: 4219, column: 34, scope: !7716)
!7746 = !DILocation(line: 4219, column: 39, scope: !7716)
!7747 = !DILocation(line: 4219, column: 46, scope: !7716)
!7748 = !DILocation(line: 4219, column: 12, scope: !7716)
!7749 = !DILocation(line: 4219, column: 17, scope: !7716)
!7750 = !DILocation(line: 4219, column: 24, scope: !7716)
!7751 = !DILocation(line: 4219, column: 30, scope: !7716)
!7752 = !DILocation(line: 4220, column: 14, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7716, file: !162, line: 4220, column: 13)
!7754 = !DILocation(line: 4220, column: 22, scope: !7753)
!7755 = !DILocation(line: 4220, column: 13, scope: !7753)
!7756 = !DILocation(line: 4220, column: 13, scope: !7716)
!7757 = !DILocation(line: 4221, column: 25, scope: !7753)
!7758 = !DILocation(line: 4221, column: 11, scope: !7753)
!7759 = !DILocation(line: 4222, column: 7, scope: !7716)
!7760 = !DILocation(line: 4223, column: 7, scope: !1225)
!7761 = !DILocation(line: 4225, column: 11, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4225, column: 11)
!7763 = !DILocation(line: 4225, column: 16, scope: !7762)
!7764 = !DILocation(line: 4225, column: 31, scope: !7762)
!7765 = !DILocation(line: 4225, column: 35, scope: !7766)
!7766 = !DILexicalBlockFile(scope: !7762, file: !162, discriminator: 1)
!7767 = !DILocation(line: 4225, column: 43, scope: !7762)
!7768 = !DILocation(line: 4225, column: 34, scope: !7762)
!7769 = !DILocation(line: 4225, column: 57, scope: !7762)
!7770 = !DILocation(line: 4225, column: 61, scope: !7771)
!7771 = !DILexicalBlockFile(scope: !7762, file: !162, discriminator: 2)
!7772 = !DILocation(line: 4225, column: 69, scope: !7762)
!7773 = !DILocation(line: 4225, column: 60, scope: !7762)
!7774 = !DILocation(line: 4225, column: 11, scope: !1225)
!7775 = !DILocation(line: 4226, column: 23, scope: !7776)
!7776 = distinct !DILexicalBlock(scope: !7762, file: !162, line: 4225, column: 91)
!7777 = !DILocation(line: 4226, column: 10, scope: !7776)
!7778 = !DILocation(line: 4226, column: 21, scope: !7776)
!7779 = !DILocation(line: 4227, column: 10, scope: !7776)
!7780 = !DILocation(line: 4227, column: 18, scope: !7776)
!7781 = !DILocation(line: 4227, column: 40, scope: !7776)
!7782 = !DILocation(line: 4227, column: 48, scope: !7776)
!7783 = !DILocation(line: 4228, column: 28, scope: !7776)
!7784 = !DILocation(line: 4228, column: 36, scope: !7776)
!7785 = !DILocation(line: 4228, column: 51, scope: !7776)
!7786 = !DILocation(line: 4229, column: 28, scope: !7776)
!7787 = !DILocation(line: 4229, column: 36, scope: !7776)
!7788 = !DILocation(line: 4229, column: 51, scope: !7776)
!7789 = !DILocation(line: 4229, column: 27, scope: !7776)
!7790 = !DILocation(line: 4231, column: 28, scope: !7776)
!7791 = !DILocation(line: 4231, column: 36, scope: !7776)
!7792 = !DILocation(line: 4231, column: 51, scope: !7776)
!7793 = !DILocation(line: 4232, column: 28, scope: !7776)
!7794 = !DILocation(line: 4232, column: 36, scope: !7776)
!7795 = !DILocation(line: 4232, column: 51, scope: !7776)
!7796 = !DILocation(line: 4233, column: 28, scope: !7776)
!7797 = !DILocation(line: 4233, column: 36, scope: !7776)
!7798 = !DILocation(line: 4233, column: 51, scope: !7776)
!7799 = !DILocation(line: 4227, column: 9, scope: !7776)
!7800 = !DILocation(line: 4235, column: 23, scope: !7776)
!7801 = !DILocation(line: 4236, column: 7, scope: !7776)
!7802 = !DILocation(line: 4237, column: 7, scope: !1225)
!7803 = !DILocation(line: 4239, column: 11, scope: !7804)
!7804 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4239, column: 11)
!7805 = !DILocation(line: 4239, column: 16, scope: !7804)
!7806 = !DILocation(line: 4239, column: 31, scope: !7804)
!7807 = !DILocation(line: 4239, column: 35, scope: !7808)
!7808 = !DILexicalBlockFile(scope: !7804, file: !162, discriminator: 1)
!7809 = !DILocation(line: 4239, column: 43, scope: !7804)
!7810 = !DILocation(line: 4239, column: 34, scope: !7804)
!7811 = !DILocation(line: 4239, column: 11, scope: !1225)
!7812 = !DILocation(line: 4240, column: 61, scope: !7813)
!7813 = distinct !DILexicalBlock(scope: !7804, file: !162, line: 4239, column: 58)
!7814 = !DILocation(line: 4240, column: 66, scope: !7813)
!7815 = !DILocation(line: 4240, column: 72, scope: !7813)
!7816 = !DILocation(line: 4240, column: 77, scope: !7813)
!7817 = !DILocation(line: 4240, column: 80, scope: !7813)
!7818 = !DILocation(line: 4240, column: 44, scope: !7813)
!7819 = !DILocation(line: 4240, column: 10, scope: !7813)
!7820 = !DILocation(line: 4240, column: 18, scope: !7813)
!7821 = !DILocation(line: 4240, column: 33, scope: !7813)
!7822 = !DILocation(line: 4240, column: 42, scope: !7813)
!7823 = !{!4091, !2290, i64 48}
!7824 = !DILocation(line: 4241, column: 15, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7813, file: !162, line: 4241, column: 13)
!7826 = !DILocation(line: 4241, column: 23, scope: !7825)
!7827 = !DILocation(line: 4241, column: 38, scope: !7825)
!7828 = !DILocation(line: 4241, column: 14, scope: !7825)
!7829 = !DILocation(line: 4241, column: 13, scope: !7813)
!7830 = !DILocation(line: 4242, column: 11, scope: !7825)
!7831 = !DILocation(line: 4243, column: 34, scope: !7813)
!7832 = !DILocation(line: 4243, column: 39, scope: !7813)
!7833 = !DILocation(line: 4243, column: 46, scope: !7813)
!7834 = !DILocation(line: 4243, column: 12, scope: !7813)
!7835 = !DILocation(line: 4243, column: 17, scope: !7813)
!7836 = !DILocation(line: 4243, column: 24, scope: !7813)
!7837 = !DILocation(line: 4243, column: 30, scope: !7813)
!7838 = !DILocation(line: 4244, column: 14, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7813, file: !162, line: 4244, column: 13)
!7840 = !DILocation(line: 4244, column: 22, scope: !7839)
!7841 = !DILocation(line: 4244, column: 13, scope: !7839)
!7842 = !DILocation(line: 4244, column: 13, scope: !7813)
!7843 = !DILocation(line: 4245, column: 25, scope: !7844)
!7844 = distinct !DILexicalBlock(scope: !7839, file: !162, line: 4244, column: 52)
!7845 = !DILocation(line: 4245, column: 12, scope: !7844)
!7846 = !DILocation(line: 4245, column: 23, scope: !7844)
!7847 = !DILocation(line: 4246, column: 12, scope: !7844)
!7848 = !DILocation(line: 4246, column: 20, scope: !7844)
!7849 = !DILocation(line: 4246, column: 50, scope: !7844)
!7850 = !DILocation(line: 4246, column: 58, scope: !7844)
!7851 = !DILocation(line: 4247, column: 38, scope: !7844)
!7852 = !DILocation(line: 4247, column: 46, scope: !7844)
!7853 = !DILocation(line: 4247, column: 61, scope: !7844)
!7854 = !DILocation(line: 4248, column: 38, scope: !7844)
!7855 = !DILocation(line: 4248, column: 46, scope: !7844)
!7856 = !DILocation(line: 4248, column: 61, scope: !7844)
!7857 = !DILocation(line: 4249, column: 38, scope: !7844)
!7858 = !DILocation(line: 4249, column: 46, scope: !7844)
!7859 = !DILocation(line: 4249, column: 61, scope: !7844)
!7860 = !DILocation(line: 4250, column: 38, scope: !7844)
!7861 = !DILocation(line: 4250, column: 46, scope: !7844)
!7862 = !DILocation(line: 4250, column: 61, scope: !7844)
!7863 = !DILocation(line: 4251, column: 38, scope: !7844)
!7864 = !DILocation(line: 4251, column: 46, scope: !7844)
!7865 = !DILocation(line: 4251, column: 61, scope: !7844)
!7866 = !DILocation(line: 4246, column: 11, scope: !7844)
!7867 = !DILocation(line: 4252, column: 25, scope: !7844)
!7868 = !DILocation(line: 4253, column: 9, scope: !7844)
!7869 = !DILocation(line: 4254, column: 19, scope: !7870)
!7870 = distinct !DILexicalBlock(scope: !7839, file: !162, line: 4254, column: 18)
!7871 = !DILocation(line: 4254, column: 27, scope: !7870)
!7872 = !DILocation(line: 4254, column: 18, scope: !7870)
!7873 = !DILocation(line: 4254, column: 18, scope: !7839)
!7874 = !DILocation(line: 4255, column: 25, scope: !7875)
!7875 = distinct !DILexicalBlock(scope: !7870, file: !162, line: 4254, column: 49)
!7876 = !DILocation(line: 4255, column: 12, scope: !7875)
!7877 = !DILocation(line: 4255, column: 23, scope: !7875)
!7878 = !DILocation(line: 4256, column: 12, scope: !7875)
!7879 = !DILocation(line: 4256, column: 20, scope: !7875)
!7880 = !DILocation(line: 4256, column: 42, scope: !7875)
!7881 = !DILocation(line: 4256, column: 50, scope: !7875)
!7882 = !DILocation(line: 4257, column: 30, scope: !7875)
!7883 = !DILocation(line: 4257, column: 38, scope: !7875)
!7884 = !DILocation(line: 4257, column: 53, scope: !7875)
!7885 = !DILocation(line: 4259, column: 30, scope: !7875)
!7886 = !DILocation(line: 4259, column: 38, scope: !7875)
!7887 = !DILocation(line: 4259, column: 53, scope: !7875)
!7888 = !DILocation(line: 4260, column: 30, scope: !7875)
!7889 = !DILocation(line: 4260, column: 38, scope: !7875)
!7890 = !DILocation(line: 4260, column: 53, scope: !7875)
!7891 = !DILocation(line: 4261, column: 30, scope: !7875)
!7892 = !DILocation(line: 4261, column: 38, scope: !7875)
!7893 = !DILocation(line: 4261, column: 53, scope: !7875)
!7894 = !DILocation(line: 4262, column: 30, scope: !7875)
!7895 = !DILocation(line: 4262, column: 38, scope: !7875)
!7896 = !DILocation(line: 4262, column: 53, scope: !7875)
!7897 = !DILocation(line: 4256, column: 11, scope: !7875)
!7898 = !DILocation(line: 4263, column: 25, scope: !7875)
!7899 = !DILocation(line: 4264, column: 9, scope: !7875)
!7900 = !DILocation(line: 4265, column: 7, scope: !7813)
!7901 = !DILocation(line: 4266, column: 7, scope: !1225)
!7902 = !DILocation(line: 4269, column: 16, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !1259, file: !162, line: 4269, column: 13)
!7904 = !DILocation(line: 4269, column: 22, scope: !7903)
!7905 = !{!2399, !2290, i64 96}
!7906 = !DILocation(line: 4269, column: 44, scope: !7903)
!7907 = !DILocation(line: 4269, column: 49, scope: !7903)
!7908 = !DILocation(line: 4269, column: 52, scope: !7903)
!7909 = !DILocation(line: 4269, column: 14, scope: !7903)
!7910 = !DILocation(line: 4269, column: 13, scope: !1259)
!7911 = !DILocation(line: 4270, column: 12, scope: !7912)
!7912 = distinct !DILexicalBlock(scope: !7903, file: !162, line: 4269, column: 60)
!7913 = !DILocation(line: 4270, column: 20, scope: !7912)
!7914 = !DILocation(line: 4270, column: 34, scope: !7912)
!7915 = !DILocation(line: 4271, column: 11, scope: !7912)
!7916 = !DILocation(line: 4273, column: 13, scope: !1258)
!7917 = !DILocation(line: 4273, column: 18, scope: !1258)
!7918 = !DILocation(line: 4273, column: 13, scope: !1259)
!7919 = !DILocation(line: 4274, column: 11, scope: !1257)
!7920 = !DILocation(line: 4274, column: 27, scope: !1257)
!7921 = !DILocation(line: 4274, column: 51, scope: !1257)
!7922 = !DILocation(line: 4274, column: 56, scope: !1257)
!7923 = !DILocation(line: 4274, column: 62, scope: !1257)
!7924 = !DILocation(line: 4274, column: 67, scope: !1257)
!7925 = !DILocation(line: 4274, column: 70, scope: !1257)
!7926 = !DILocation(line: 4274, column: 34, scope: !1257)
!7927 = !DILocation(line: 4275, column: 16, scope: !7928)
!7928 = distinct !DILexicalBlock(scope: !1257, file: !162, line: 4275, column: 15)
!7929 = !DILocation(line: 4275, column: 15, scope: !1257)
!7930 = !DILocation(line: 4276, column: 13, scope: !7928)
!7931 = !DILocation(line: 4277, column: 53, scope: !1257)
!7932 = !DILocation(line: 4277, column: 62, scope: !1257)
!7933 = !DILocation(line: 4277, column: 67, scope: !1257)
!7934 = !DILocation(line: 4277, column: 84, scope: !1257)
!7935 = !DILocation(line: 4277, column: 46, scope: !1257)
!7936 = !DILocation(line: 4277, column: 36, scope: !1257)
!7937 = !DILocation(line: 4277, column: 12, scope: !1257)
!7938 = !DILocation(line: 4277, column: 20, scope: !1257)
!7939 = !DILocation(line: 4277, column: 34, scope: !1257)
!7940 = !DILocation(line: 4279, column: 17, scope: !7941)
!7941 = distinct !DILexicalBlock(scope: !1257, file: !162, line: 4279, column: 15)
!7942 = !DILocation(line: 4279, column: 25, scope: !7941)
!7943 = !DILocation(line: 4279, column: 16, scope: !7941)
!7944 = !DILocation(line: 4279, column: 15, scope: !1257)
!7945 = !DILocation(line: 4280, column: 13, scope: !7941)
!7946 = !DILocation(line: 4281, column: 16, scope: !7947)
!7947 = distinct !DILexicalBlock(scope: !1257, file: !162, line: 4281, column: 15)
!7948 = !DILocation(line: 4281, column: 24, scope: !7947)
!7949 = !DILocation(line: 4281, column: 39, scope: !7947)
!7950 = !DILocation(line: 4281, column: 47, scope: !7947)
!7951 = !DILocation(line: 4281, column: 44, scope: !7947)
!7952 = !DILocation(line: 4281, column: 15, scope: !1257)
!7953 = !DILocation(line: 4282, column: 36, scope: !7954)
!7954 = distinct !DILexicalBlock(scope: !7947, file: !162, line: 4281, column: 53)
!7955 = !DILocation(line: 4282, column: 41, scope: !7954)
!7956 = !DILocation(line: 4282, column: 48, scope: !7954)
!7957 = !DILocation(line: 4282, column: 16, scope: !7954)
!7958 = !DILocation(line: 4282, column: 21, scope: !7954)
!7959 = !DILocation(line: 4282, column: 28, scope: !7954)
!7960 = !DILocation(line: 4282, column: 32, scope: !7954)
!7961 = !DILocation(line: 4283, column: 14, scope: !7954)
!7962 = !DILocation(line: 4283, column: 22, scope: !7954)
!7963 = !DILocation(line: 4283, column: 36, scope: !7954)
!7964 = !DILocation(line: 4284, column: 11, scope: !7954)
!7965 = !DILocation(line: 4286, column: 38, scope: !7966)
!7966 = distinct !DILexicalBlock(scope: !7947, file: !162, line: 4285, column: 16)
!7967 = !DILocation(line: 4286, column: 43, scope: !7966)
!7968 = !DILocation(line: 4286, column: 50, scope: !7966)
!7969 = !DILocation(line: 4286, column: 16, scope: !7966)
!7970 = !DILocation(line: 4286, column: 21, scope: !7966)
!7971 = !DILocation(line: 4286, column: 28, scope: !7966)
!7972 = !DILocation(line: 4286, column: 34, scope: !7966)
!7973 = !DILocation(line: 4287, column: 14, scope: !7966)
!7974 = !DILocation(line: 4287, column: 22, scope: !7966)
!7975 = !DILocation(line: 4287, column: 37, scope: !7966)
!7976 = !DILocation(line: 4287, column: 46, scope: !7966)
!7977 = !DILocation(line: 4288, column: 14, scope: !7966)
!7978 = !DILocation(line: 4288, column: 22, scope: !7966)
!7979 = !DILocation(line: 4288, column: 37, scope: !7966)
!7980 = !DILocation(line: 4288, column: 46, scope: !7966)
!7981 = !DILocation(line: 4292, column: 54, scope: !7966)
!7982 = !DILocation(line: 4292, column: 62, scope: !7966)
!7983 = !DILocation(line: 4292, column: 53, scope: !7966)
!7984 = !DILocation(line: 4292, column: 78, scope: !7966)
!7985 = !DILocation(line: 4292, column: 82, scope: !7986)
!7986 = !DILexicalBlockFile(scope: !7966, file: !162, discriminator: 2)
!7987 = !DILocation(line: 4292, column: 90, scope: !7966)
!7988 = !DILocation(line: 4292, column: 51, scope: !7989)
!7989 = !DILexicalBlockFile(scope: !7990, file: !162, discriminator: 3)
!7990 = !DILexicalBlockFile(scope: !7966, file: !162, discriminator: 1)
!7991 = !DILocation(line: 4292, column: 14, scope: !7966)
!7992 = !DILocation(line: 4292, column: 22, scope: !7966)
!7993 = !DILocation(line: 4292, column: 37, scope: !7966)
!7994 = !DILocation(line: 4292, column: 49, scope: !7966)
!7995 = !{!4091, !2291, i64 58}
!7996 = !DILocation(line: 4293, column: 18, scope: !7997)
!7997 = distinct !DILexicalBlock(scope: !7966, file: !162, line: 4293, column: 17)
!7998 = !DILocation(line: 4293, column: 26, scope: !7997)
!7999 = !DILocation(line: 4293, column: 17, scope: !7997)
!8000 = !DILocation(line: 4293, column: 17, scope: !7966)
!8001 = !DILocation(line: 4294, column: 29, scope: !7997)
!8002 = !DILocation(line: 4294, column: 15, scope: !7997)
!8003 = !DILocation(line: 4296, column: 9, scope: !1258)
!8004 = !DILocation(line: 4296, column: 9, scope: !8005)
!8005 = !DILexicalBlockFile(scope: !1258, file: !162, discriminator: 1)
!8006 = !DILocation(line: 4296, column: 9, scope: !1257)
!8007 = !DILocation(line: 4298, column: 34, scope: !8008)
!8008 = distinct !DILexicalBlock(scope: !1258, file: !162, line: 4297, column: 14)
!8009 = !DILocation(line: 4298, column: 39, scope: !8008)
!8010 = !DILocation(line: 4298, column: 46, scope: !8008)
!8011 = !DILocation(line: 4298, column: 14, scope: !8008)
!8012 = !DILocation(line: 4298, column: 19, scope: !8008)
!8013 = !DILocation(line: 4298, column: 26, scope: !8008)
!8014 = !DILocation(line: 4298, column: 30, scope: !8008)
!8015 = !DILocation(line: 4299, column: 12, scope: !8008)
!8016 = !DILocation(line: 4299, column: 20, scope: !8008)
!8017 = !DILocation(line: 4299, column: 34, scope: !8008)
!8018 = !DILocation(line: 4302, column: 7, scope: !1225)
!8019 = !DILocation(line: 4305, column: 11, scope: !1262)
!8020 = !DILocation(line: 4305, column: 16, scope: !1262)
!8021 = !DILocation(line: 4305, column: 11, scope: !1225)
!8022 = !DILocation(line: 4306, column: 9, scope: !1261)
!8023 = !DILocation(line: 4306, column: 25, scope: !1261)
!8024 = !DILocation(line: 4306, column: 49, scope: !1261)
!8025 = !DILocation(line: 4306, column: 54, scope: !1261)
!8026 = !DILocation(line: 4306, column: 60, scope: !1261)
!8027 = !DILocation(line: 4306, column: 65, scope: !1261)
!8028 = !DILocation(line: 4306, column: 68, scope: !1261)
!8029 = !DILocation(line: 4306, column: 32, scope: !1261)
!8030 = !DILocation(line: 4307, column: 14, scope: !8031)
!8031 = distinct !DILexicalBlock(scope: !1261, file: !162, line: 4307, column: 13)
!8032 = !DILocation(line: 4307, column: 13, scope: !1261)
!8033 = !DILocation(line: 4308, column: 11, scope: !8031)
!8034 = !DILocation(line: 4309, column: 51, scope: !1261)
!8035 = !DILocation(line: 4309, column: 60, scope: !1261)
!8036 = !DILocation(line: 4309, column: 65, scope: !1261)
!8037 = !DILocation(line: 4310, column: 44, scope: !1261)
!8038 = !DILocation(line: 4309, column: 44, scope: !1261)
!8039 = !DILocation(line: 4309, column: 34, scope: !1261)
!8040 = !DILocation(line: 4309, column: 10, scope: !1261)
!8041 = !DILocation(line: 4309, column: 18, scope: !1261)
!8042 = !DILocation(line: 4309, column: 32, scope: !1261)
!8043 = !DILocation(line: 4311, column: 15, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !1261, file: !162, line: 4311, column: 13)
!8045 = !DILocation(line: 4311, column: 23, scope: !8044)
!8046 = !DILocation(line: 4311, column: 14, scope: !8044)
!8047 = !DILocation(line: 4311, column: 13, scope: !1261)
!8048 = !DILocation(line: 4312, column: 11, scope: !8044)
!8049 = !DILocation(line: 4313, column: 14, scope: !8050)
!8050 = distinct !DILexicalBlock(scope: !1261, file: !162, line: 4313, column: 13)
!8051 = !DILocation(line: 4313, column: 22, scope: !8050)
!8052 = !DILocation(line: 4313, column: 37, scope: !8050)
!8053 = !DILocation(line: 4313, column: 45, scope: !8050)
!8054 = !DILocation(line: 4313, column: 42, scope: !8050)
!8055 = !DILocation(line: 4313, column: 13, scope: !1261)
!8056 = !DILocation(line: 4314, column: 34, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !8050, file: !162, line: 4313, column: 51)
!8058 = !DILocation(line: 4314, column: 39, scope: !8057)
!8059 = !DILocation(line: 4314, column: 46, scope: !8057)
!8060 = !DILocation(line: 4314, column: 14, scope: !8057)
!8061 = !DILocation(line: 4314, column: 19, scope: !8057)
!8062 = !DILocation(line: 4314, column: 26, scope: !8057)
!8063 = !DILocation(line: 4314, column: 30, scope: !8057)
!8064 = !DILocation(line: 4315, column: 12, scope: !8057)
!8065 = !DILocation(line: 4315, column: 20, scope: !8057)
!8066 = !DILocation(line: 4315, column: 34, scope: !8057)
!8067 = !DILocation(line: 4316, column: 9, scope: !8057)
!8068 = !DILocation(line: 4318, column: 36, scope: !8069)
!8069 = distinct !DILexicalBlock(scope: !8050, file: !162, line: 4317, column: 14)
!8070 = !DILocation(line: 4318, column: 41, scope: !8069)
!8071 = !DILocation(line: 4318, column: 48, scope: !8069)
!8072 = !DILocation(line: 4318, column: 14, scope: !8069)
!8073 = !DILocation(line: 4318, column: 19, scope: !8069)
!8074 = !DILocation(line: 4318, column: 26, scope: !8069)
!8075 = !DILocation(line: 4318, column: 32, scope: !8069)
!8076 = !DILocation(line: 4319, column: 12, scope: !8069)
!8077 = !DILocation(line: 4319, column: 20, scope: !8069)
!8078 = !DILocation(line: 4319, column: 35, scope: !8069)
!8079 = !DILocation(line: 4319, column: 44, scope: !8069)
!8080 = !DILocation(line: 4320, column: 12, scope: !8069)
!8081 = !DILocation(line: 4320, column: 20, scope: !8069)
!8082 = !DILocation(line: 4320, column: 35, scope: !8069)
!8083 = !DILocation(line: 4320, column: 44, scope: !8069)
!8084 = !DILocation(line: 4324, column: 52, scope: !8069)
!8085 = !DILocation(line: 4324, column: 60, scope: !8069)
!8086 = !DILocation(line: 4324, column: 51, scope: !8069)
!8087 = !DILocation(line: 4324, column: 76, scope: !8069)
!8088 = !DILocation(line: 4324, column: 80, scope: !8089)
!8089 = !DILexicalBlockFile(scope: !8069, file: !162, discriminator: 2)
!8090 = !DILocation(line: 4324, column: 88, scope: !8069)
!8091 = !DILocation(line: 4324, column: 49, scope: !8092)
!8092 = !DILexicalBlockFile(scope: !8093, file: !162, discriminator: 3)
!8093 = !DILexicalBlockFile(scope: !8069, file: !162, discriminator: 1)
!8094 = !DILocation(line: 4324, column: 12, scope: !8069)
!8095 = !DILocation(line: 4324, column: 20, scope: !8069)
!8096 = !DILocation(line: 4324, column: 35, scope: !8069)
!8097 = !DILocation(line: 4324, column: 47, scope: !8069)
!8098 = !DILocation(line: 4325, column: 16, scope: !8099)
!8099 = distinct !DILexicalBlock(scope: !8069, file: !162, line: 4325, column: 15)
!8100 = !DILocation(line: 4325, column: 24, scope: !8099)
!8101 = !DILocation(line: 4325, column: 15, scope: !8099)
!8102 = !DILocation(line: 4325, column: 15, scope: !8069)
!8103 = !DILocation(line: 4326, column: 27, scope: !8099)
!8104 = !DILocation(line: 4326, column: 13, scope: !8099)
!8105 = !DILocation(line: 4328, column: 7, scope: !1262)
!8106 = !DILocation(line: 4328, column: 7, scope: !8107)
!8107 = !DILexicalBlockFile(scope: !1262, file: !162, discriminator: 1)
!8108 = !DILocation(line: 4328, column: 7, scope: !1261)
!8109 = !DILocation(line: 4330, column: 32, scope: !8110)
!8110 = distinct !DILexicalBlock(scope: !1262, file: !162, line: 4329, column: 12)
!8111 = !DILocation(line: 4330, column: 37, scope: !8110)
!8112 = !DILocation(line: 4330, column: 44, scope: !8110)
!8113 = !DILocation(line: 4330, column: 12, scope: !8110)
!8114 = !DILocation(line: 4330, column: 17, scope: !8110)
!8115 = !DILocation(line: 4330, column: 24, scope: !8110)
!8116 = !DILocation(line: 4330, column: 28, scope: !8110)
!8117 = !DILocation(line: 4331, column: 10, scope: !8110)
!8118 = !DILocation(line: 4331, column: 18, scope: !8110)
!8119 = !DILocation(line: 4331, column: 32, scope: !8110)
!8120 = !DILocation(line: 4336, column: 7, scope: !1225)
!8121 = !DILocation(line: 4338, column: 8, scope: !1225)
!8122 = !DILocation(line: 4338, column: 16, scope: !1225)
!8123 = !DILocation(line: 4338, column: 40, scope: !1225)
!8124 = !DILocation(line: 4339, column: 8, scope: !1225)
!8125 = !DILocation(line: 4339, column: 16, scope: !1225)
!8126 = !DILocation(line: 4339, column: 36, scope: !1225)
!8127 = !DILocation(line: 4340, column: 12, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4340, column: 11)
!8129 = !DILocation(line: 4340, column: 20, scope: !8128)
!8130 = !DILocation(line: 4340, column: 11, scope: !8128)
!8131 = !DILocation(line: 4340, column: 11, scope: !1225)
!8132 = !DILocation(line: 4341, column: 58, scope: !8133)
!8133 = distinct !DILexicalBlock(scope: !8128, file: !162, line: 4340, column: 44)
!8134 = !DILocation(line: 4341, column: 66, scope: !8133)
!8135 = !DILocation(line: 4341, column: 79, scope: !8133)
!8136 = !DILocation(line: 4341, column: 84, scope: !8133)
!8137 = !DILocation(line: 4341, column: 87, scope: !8133)
!8138 = !DILocation(line: 4341, column: 40, scope: !8133)
!8139 = !DILocation(line: 4341, column: 10, scope: !8133)
!8140 = !DILocation(line: 4341, column: 18, scope: !8133)
!8141 = !DILocation(line: 4341, column: 38, scope: !8133)
!8142 = !DILocation(line: 4342, column: 15, scope: !8143)
!8143 = distinct !DILexicalBlock(scope: !8133, file: !162, line: 4342, column: 13)
!8144 = !DILocation(line: 4342, column: 23, scope: !8143)
!8145 = !DILocation(line: 4342, column: 14, scope: !8143)
!8146 = !DILocation(line: 4342, column: 13, scope: !8133)
!8147 = !DILocation(line: 4343, column: 11, scope: !8143)
!8148 = !DILocation(line: 4344, column: 46, scope: !8133)
!8149 = !DILocation(line: 4344, column: 54, scope: !8133)
!8150 = !DILocation(line: 4344, column: 68, scope: !8133)
!8151 = !DILocation(line: 4344, column: 13, scope: !8133)
!8152 = !DILocation(line: 4344, column: 21, scope: !8133)
!8153 = !DILocation(line: 4344, column: 35, scope: !8133)
!8154 = !DILocation(line: 4344, column: 41, scope: !8133)
!8155 = !DILocation(line: 4345, column: 23, scope: !8133)
!8156 = !DILocation(line: 4346, column: 7, scope: !8133)
!8157 = !DILocation(line: 4347, column: 7, scope: !1225)
!8158 = !DILocation(line: 4349, column: 15, scope: !8159)
!8159 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4349, column: 11)
!8160 = !DILocation(line: 4349, column: 21, scope: !8159)
!8161 = !DILocation(line: 4349, column: 33, scope: !8159)
!8162 = !DILocation(line: 4349, column: 38, scope: !8159)
!8163 = !DILocation(line: 4349, column: 41, scope: !8159)
!8164 = !DILocation(line: 4349, column: 47, scope: !8159)
!8165 = !DILocation(line: 4349, column: 13, scope: !8159)
!8166 = !DILocation(line: 4349, column: 11, scope: !1225)
!8167 = !DILocation(line: 4350, column: 9, scope: !8159)
!8168 = !DILocation(line: 4351, column: 12, scope: !1265)
!8169 = !DILocation(line: 4351, column: 20, scope: !1265)
!8170 = !DILocation(line: 4351, column: 11, scope: !1265)
!8171 = !DILocation(line: 4351, column: 11, scope: !1225)
!8172 = !DILocation(line: 4352, column: 9, scope: !1264)
!8173 = !DILocation(line: 4352, column: 19, scope: !1264)
!8174 = !DILocation(line: 4352, column: 43, scope: !1264)
!8175 = !DILocation(line: 4352, column: 51, scope: !1264)
!8176 = !DILocation(line: 4353, column: 41, scope: !1264)
!8177 = !DILocation(line: 4354, column: 41, scope: !1264)
!8178 = !DILocation(line: 4354, column: 45, scope: !1264)
!8179 = !DILocation(line: 4354, column: 50, scope: !1264)
!8180 = !DILocation(line: 4354, column: 43, scope: !1264)
!8181 = !DILocation(line: 4355, column: 41, scope: !1264)
!8182 = !DILocation(line: 4355, column: 48, scope: !1264)
!8183 = !DILocation(line: 4355, column: 53, scope: !1264)
!8184 = !DILocation(line: 4355, column: 46, scope: !1264)
!8185 = !DILocation(line: 4352, column: 25, scope: !1264)
!8186 = !DILocation(line: 4356, column: 14, scope: !8187)
!8187 = distinct !DILexicalBlock(scope: !1264, file: !162, line: 4356, column: 13)
!8188 = !DILocation(line: 4356, column: 13, scope: !1264)
!8189 = !DILocation(line: 4357, column: 11, scope: !8187)
!8190 = !DILocation(line: 4358, column: 27, scope: !1264)
!8191 = !DILocation(line: 4358, column: 9, scope: !1264)
!8192 = !DILocation(line: 4359, column: 44, scope: !1264)
!8193 = !DILocation(line: 4359, column: 10, scope: !1264)
!8194 = !DILocation(line: 4359, column: 18, scope: !1264)
!8195 = !DILocation(line: 4359, column: 42, scope: !1264)
!8196 = !DILocation(line: 4360, column: 46, scope: !1264)
!8197 = !DILocation(line: 4360, column: 54, scope: !1264)
!8198 = !DILocation(line: 4360, column: 68, scope: !1264)
!8199 = !DILocation(line: 4360, column: 13, scope: !1264)
!8200 = !DILocation(line: 4360, column: 21, scope: !1264)
!8201 = !DILocation(line: 4360, column: 35, scope: !1264)
!8202 = !DILocation(line: 4360, column: 41, scope: !1264)
!8203 = !DILocation(line: 4361, column: 23, scope: !1264)
!8204 = !DILocation(line: 4362, column: 7, scope: !1265)
!8205 = !DILocation(line: 4362, column: 7, scope: !8206)
!8206 = !DILexicalBlockFile(scope: !1265, file: !162, discriminator: 1)
!8207 = !DILocation(line: 4362, column: 7, scope: !1264)
!8208 = !DILocation(line: 4363, column: 7, scope: !1225)
!8209 = !DILocation(line: 4365, column: 12, scope: !1268)
!8210 = !DILocation(line: 4365, column: 20, scope: !1268)
!8211 = !DILocation(line: 4365, column: 11, scope: !1268)
!8212 = !DILocation(line: 4365, column: 40, scope: !1268)
!8213 = !DILocation(line: 4365, column: 44, scope: !8214)
!8214 = !DILexicalBlockFile(scope: !1268, file: !162, discriminator: 1)
!8215 = !DILocation(line: 4365, column: 52, scope: !1268)
!8216 = !DILocation(line: 4365, column: 43, scope: !1268)
!8217 = !DILocation(line: 4365, column: 11, scope: !1225)
!8218 = !DILocation(line: 4366, column: 9, scope: !1267)
!8219 = !DILocation(line: 4366, column: 25, scope: !1267)
!8220 = !DILocation(line: 4367, column: 31, scope: !1267)
!8221 = !DILocation(line: 4367, column: 39, scope: !1267)
!8222 = !DILocation(line: 4367, column: 52, scope: !1267)
!8223 = !DILocation(line: 4368, column: 29, scope: !1267)
!8224 = !DILocation(line: 4368, column: 33, scope: !1267)
!8225 = !DILocation(line: 4368, column: 38, scope: !1267)
!8226 = !DILocation(line: 4368, column: 31, scope: !1267)
!8227 = !DILocation(line: 4369, column: 29, scope: !1267)
!8228 = !DILocation(line: 4369, column: 36, scope: !1267)
!8229 = !DILocation(line: 4369, column: 41, scope: !1267)
!8230 = !DILocation(line: 4369, column: 34, scope: !1267)
!8231 = !DILocation(line: 4367, column: 13, scope: !1267)
!8232 = !DILocation(line: 4370, column: 14, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !1267, file: !162, line: 4370, column: 13)
!8234 = !DILocation(line: 4370, column: 13, scope: !1267)
!8235 = !DILocation(line: 4371, column: 11, scope: !8233)
!8236 = !DILocation(line: 4372, column: 23, scope: !1267)
!8237 = !DILocation(line: 4372, column: 10, scope: !1267)
!8238 = !DILocation(line: 4372, column: 21, scope: !1267)
!8239 = !DILocation(line: 4373, column: 10, scope: !1267)
!8240 = !DILocation(line: 4373, column: 18, scope: !1267)
!8241 = !DILocation(line: 4373, column: 42, scope: !1267)
!8242 = !DILocation(line: 4373, column: 50, scope: !1267)
!8243 = !DILocation(line: 4374, column: 30, scope: !1267)
!8244 = !DILocation(line: 4374, column: 38, scope: !1267)
!8245 = !DILocation(line: 4375, column: 30, scope: !1267)
!8246 = !DILocation(line: 4375, column: 38, scope: !1267)
!8247 = !DILocation(line: 4376, column: 29, scope: !1267)
!8248 = !DILocation(line: 4377, column: 30, scope: !1267)
!8249 = !DILocation(line: 4377, column: 38, scope: !1267)
!8250 = !DILocation(line: 4373, column: 9, scope: !1267)
!8251 = !DILocation(line: 4378, column: 23, scope: !1267)
!8252 = !DILocation(line: 4379, column: 7, scope: !1268)
!8253 = !DILocation(line: 4379, column: 7, scope: !8214)
!8254 = !DILocation(line: 4379, column: 7, scope: !1267)
!8255 = !DILocation(line: 4380, column: 19, scope: !1225)
!8256 = !DILocation(line: 4380, column: 27, scope: !1225)
!8257 = !DILocation(line: 4380, column: 7, scope: !1225)
!8258 = !DILocation(line: 4381, column: 7, scope: !1225)
!8259 = !DILocation(line: 4383, column: 12, scope: !8260)
!8260 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4383, column: 11)
!8261 = !DILocation(line: 4383, column: 20, scope: !8260)
!8262 = !DILocation(line: 4383, column: 11, scope: !8260)
!8263 = !DILocation(line: 4383, column: 44, scope: !8260)
!8264 = !DILocation(line: 4383, column: 48, scope: !8265)
!8265 = !DILexicalBlockFile(scope: !8260, file: !162, discriminator: 1)
!8266 = !DILocation(line: 4383, column: 56, scope: !8260)
!8267 = !DILocation(line: 4383, column: 47, scope: !8260)
!8268 = !DILocation(line: 4383, column: 11, scope: !1225)
!8269 = !DILocation(line: 4384, column: 23, scope: !8270)
!8270 = distinct !DILexicalBlock(scope: !8260, file: !162, line: 4383, column: 80)
!8271 = !DILocation(line: 4384, column: 10, scope: !8270)
!8272 = !DILocation(line: 4384, column: 21, scope: !8270)
!8273 = !DILocation(line: 4385, column: 10, scope: !8270)
!8274 = !DILocation(line: 4385, column: 18, scope: !8270)
!8275 = !DILocation(line: 4385, column: 42, scope: !8270)
!8276 = !DILocation(line: 4385, column: 50, scope: !8270)
!8277 = !DILocation(line: 4386, column: 30, scope: !8270)
!8278 = !DILocation(line: 4386, column: 38, scope: !8270)
!8279 = !DILocation(line: 4387, column: 30, scope: !8270)
!8280 = !DILocation(line: 4387, column: 38, scope: !8270)
!8281 = !DILocation(line: 4389, column: 30, scope: !8270)
!8282 = !DILocation(line: 4389, column: 38, scope: !8270)
!8283 = !DILocation(line: 4385, column: 9, scope: !8270)
!8284 = !DILocation(line: 4390, column: 23, scope: !8270)
!8285 = !DILocation(line: 4391, column: 7, scope: !8270)
!8286 = !DILocation(line: 4392, column: 19, scope: !1225)
!8287 = !DILocation(line: 4392, column: 27, scope: !1225)
!8288 = !DILocation(line: 4392, column: 7, scope: !1225)
!8289 = !DILocation(line: 4393, column: 7, scope: !1225)
!8290 = !DILocation(line: 4395, column: 15, scope: !1225)
!8291 = !DILocation(line: 4395, column: 7, scope: !1225)
!8292 = !DILocation(line: 4399, column: 9, scope: !8293)
!8293 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4395, column: 20)
!8294 = !DILocation(line: 4401, column: 9, scope: !8293)
!8295 = !DILocation(line: 4403, column: 9, scope: !8293)
!8296 = !DILocation(line: 4408, column: 9, scope: !1270)
!8297 = !DILocation(line: 4408, column: 24, scope: !1270)
!8298 = !DILocation(line: 4409, column: 14, scope: !8299)
!8299 = distinct !DILexicalBlock(scope: !1270, file: !162, line: 4409, column: 13)
!8300 = !DILocation(line: 4409, column: 22, scope: !8299)
!8301 = !DILocation(line: 4409, column: 13, scope: !8299)
!8302 = !DILocation(line: 4409, column: 13, scope: !1270)
!8303 = !DILocation(line: 4410, column: 25, scope: !8299)
!8304 = !DILocation(line: 4410, column: 33, scope: !8299)
!8305 = !DILocation(line: 4410, column: 38, scope: !8299)
!8306 = !DILocation(line: 4410, column: 41, scope: !8299)
!8307 = !DILocation(line: 4410, column: 11, scope: !8299)
!8308 = !DILocation(line: 4411, column: 23, scope: !1270)
!8309 = !DILocation(line: 4412, column: 34, scope: !1270)
!8310 = !DILocation(line: 4412, column: 42, scope: !1270)
!8311 = !DILocation(line: 4412, column: 54, scope: !1270)
!8312 = !DILocation(line: 4412, column: 59, scope: !1270)
!8313 = !DILocation(line: 4412, column: 68, scope: !1270)
!8314 = !DILocation(line: 4412, column: 18, scope: !1270)
!8315 = !DILocation(line: 4412, column: 16, scope: !1270)
!8316 = !DILocation(line: 4413, column: 13, scope: !8317)
!8317 = distinct !DILexicalBlock(scope: !1270, file: !162, line: 4413, column: 13)
!8318 = !DILocation(line: 4413, column: 20, scope: !8317)
!8319 = !DILocation(line: 4413, column: 13, scope: !1270)
!8320 = !DILocation(line: 4414, column: 18, scope: !8317)
!8321 = !DILocation(line: 4414, column: 11, scope: !8317)
!8322 = !DILocation(line: 4415, column: 19, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !8317, file: !162, line: 4415, column: 18)
!8324 = !DILocation(line: 4415, column: 18, scope: !8317)
!8325 = !DILocation(line: 4416, column: 12, scope: !8326)
!8326 = distinct !DILexicalBlock(scope: !8323, file: !162, line: 4415, column: 25)
!8327 = !DILocation(line: 4416, column: 20, scope: !8326)
!8328 = !DILocation(line: 4416, column: 33, scope: !8326)
!8329 = !DILocation(line: 4417, column: 18, scope: !8326)
!8330 = !DILocation(line: 4417, column: 11, scope: !8326)
!8331 = !DILocation(line: 4419, column: 7, scope: !1225)
!8332 = !DILocation(line: 4419, column: 7, scope: !6631)
!8333 = !DILocation(line: 4420, column: 7, scope: !1225)
!8334 = !DILocation(line: 4423, column: 12, scope: !1275)
!8335 = !DILocation(line: 4423, column: 20, scope: !1275)
!8336 = !DILocation(line: 4423, column: 35, scope: !1275)
!8337 = !{!2396, !2400, i64 512}
!8338 = !DILocation(line: 4423, column: 45, scope: !1275)
!8339 = !DILocation(line: 4423, column: 53, scope: !1275)
!8340 = !DILocation(line: 4423, column: 41, scope: !1275)
!8341 = !DILocation(line: 4423, column: 11, scope: !1225)
!8342 = !DILocation(line: 4424, column: 14, scope: !1273)
!8343 = !DILocation(line: 4424, column: 22, scope: !1273)
!8344 = !DILocation(line: 4424, column: 13, scope: !1273)
!8345 = !DILocation(line: 4424, column: 13, scope: !1274)
!8346 = !DILocation(line: 4425, column: 11, scope: !1272)
!8347 = !DILocation(line: 4425, column: 17, scope: !1272)
!8348 = !DILocation(line: 4425, column: 33, scope: !1272)
!8349 = !DILocation(line: 4425, column: 41, scope: !1272)
!8350 = !DILocation(line: 4425, column: 47, scope: !1272)
!8351 = !DILocation(line: 4425, column: 61, scope: !1272)
!8352 = !DILocation(line: 4425, column: 69, scope: !1272)
!8353 = !DILocation(line: 4425, column: 90, scope: !1272)
!8354 = !DILocation(line: 4425, column: 98, scope: !1272)
!8355 = !DILocation(line: 4425, column: 111, scope: !1272)
!8356 = !DILocation(line: 4425, column: 88, scope: !1272)
!8357 = !DILocation(line: 4426, column: 15, scope: !8358)
!8358 = distinct !DILexicalBlock(scope: !1272, file: !162, line: 4426, column: 15)
!8359 = !DILocation(line: 4426, column: 20, scope: !8358)
!8360 = !DILocation(line: 4426, column: 15, scope: !1272)
!8361 = !DILocation(line: 4427, column: 13, scope: !8358)
!8362 = !DILocation(line: 4428, column: 40, scope: !1272)
!8363 = !DILocation(line: 4428, column: 12, scope: !1272)
!8364 = !DILocation(line: 4428, column: 20, scope: !1272)
!8365 = !DILocation(line: 4428, column: 38, scope: !1272)
!8366 = !DILocation(line: 4429, column: 15, scope: !1278)
!8367 = !DILocation(line: 4429, column: 20, scope: !1278)
!8368 = !DILocation(line: 4429, column: 15, scope: !1272)
!8369 = !DILocation(line: 4430, column: 13, scope: !1277)
!8370 = !DILocation(line: 4430, column: 18, scope: !1277)
!8371 = !DILocation(line: 4430, column: 33, scope: !1277)
!8372 = !DILocation(line: 4430, column: 41, scope: !1277)
!8373 = !DILocation(line: 4430, column: 47, scope: !1277)
!8374 = !DILocation(line: 4430, column: 60, scope: !1277)
!8375 = !DILocation(line: 4430, column: 65, scope: !1277)
!8376 = !DILocation(line: 4430, column: 59, scope: !1277)
!8377 = !DILocation(line: 4430, column: 79, scope: !1277)
!8378 = !DILocation(line: 4430, column: 87, scope: !1277)
!8379 = !DILocation(line: 4430, column: 78, scope: !1277)
!8380 = !DILocation(line: 4430, column: 100, scope: !1277)
!8381 = !DILocation(line: 4430, column: 25, scope: !1277)
!8382 = !DILocation(line: 4432, column: 17, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !1277, file: !162, line: 4432, column: 17)
!8384 = !DILocation(line: 4432, column: 22, scope: !8383)
!8385 = !DILocation(line: 4432, column: 17, scope: !1277)
!8386 = !DILocation(line: 4433, column: 15, scope: !8383)
!8387 = !DILocation(line: 4434, column: 31, scope: !1277)
!8388 = !DILocation(line: 4434, column: 13, scope: !1277)
!8389 = !DILocation(line: 4434, column: 18, scope: !1277)
!8390 = !DILocation(line: 4434, column: 29, scope: !1277)
!8391 = !DILocation(line: 4435, column: 11, scope: !1278)
!8392 = !DILocation(line: 4435, column: 11, scope: !8393)
!8393 = !DILexicalBlockFile(scope: !1278, file: !162, discriminator: 1)
!8394 = !DILocation(line: 4435, column: 11, scope: !1277)
!8395 = !DILocation(line: 4436, column: 9, scope: !1273)
!8396 = !DILocation(line: 4436, column: 9, scope: !8397)
!8397 = !DILexicalBlockFile(scope: !1273, file: !162, discriminator: 1)
!8398 = !DILocation(line: 4436, column: 9, scope: !1272)
!8399 = !DILocation(line: 4438, column: 49, scope: !8400)
!8400 = distinct !DILexicalBlock(scope: !1273, file: !162, line: 4437, column: 14)
!8401 = !DILocation(line: 4438, column: 57, scope: !8400)
!8402 = !DILocation(line: 4438, column: 63, scope: !8400)
!8403 = !DILocation(line: 4438, column: 76, scope: !8400)
!8404 = !DILocation(line: 4438, column: 84, scope: !8400)
!8405 = !DILocation(line: 4438, column: 97, scope: !8400)
!8406 = !DILocation(line: 4438, column: 12, scope: !8400)
!8407 = !DILocation(line: 4438, column: 20, scope: !8400)
!8408 = !DILocation(line: 4438, column: 38, scope: !8400)
!8409 = !DILocation(line: 4439, column: 17, scope: !8410)
!8410 = distinct !DILexicalBlock(scope: !8400, file: !162, line: 4439, column: 15)
!8411 = !DILocation(line: 4439, column: 25, scope: !8410)
!8412 = !DILocation(line: 4439, column: 16, scope: !8410)
!8413 = !DILocation(line: 4439, column: 15, scope: !8400)
!8414 = !DILocation(line: 4440, column: 13, scope: !8410)
!8415 = !DILocation(line: 4442, column: 7, scope: !1274)
!8416 = !DILocation(line: 4443, column: 35, scope: !1225)
!8417 = !DILocation(line: 4443, column: 43, scope: !1225)
!8418 = !DILocation(line: 4443, column: 58, scope: !1225)
!8419 = !DILocation(line: 4443, column: 7, scope: !1225)
!8420 = !DILocation(line: 4443, column: 8, scope: !1225)
!8421 = !DILocation(line: 4443, column: 16, scope: !1225)
!8422 = !DILocation(line: 4443, column: 65, scope: !1225)
!8423 = !DILocation(line: 4444, column: 11, scope: !1281)
!8424 = !DILocation(line: 4444, column: 16, scope: !1281)
!8425 = !DILocation(line: 4444, column: 11, scope: !1225)
!8426 = !DILocation(line: 4445, column: 9, scope: !1280)
!8427 = !DILocation(line: 4445, column: 13, scope: !1280)
!8428 = !DILocation(line: 4445, column: 40, scope: !1280)
!8429 = !DILocation(line: 4445, column: 23, scope: !1280)
!8430 = !DILocation(line: 4446, column: 13, scope: !8431)
!8431 = distinct !DILexicalBlock(scope: !1280, file: !162, line: 4446, column: 13)
!8432 = !DILocation(line: 4446, column: 21, scope: !8431)
!8433 = !DILocation(line: 4446, column: 13, scope: !1280)
!8434 = !DILocation(line: 4447, column: 11, scope: !8431)
!8435 = !DILocation(line: 4448, column: 44, scope: !1280)
!8436 = !DILocation(line: 4448, column: 25, scope: !1280)
!8437 = !DILocation(line: 4448, column: 30, scope: !1280)
!8438 = !DILocation(line: 4448, column: 9, scope: !1280)
!8439 = !DILocation(line: 4448, column: 14, scope: !1280)
!8440 = !DILocation(line: 4448, column: 42, scope: !1280)
!8441 = !DILocation(line: 4449, column: 9, scope: !1280)
!8442 = !DILocation(line: 4449, column: 14, scope: !1280)
!8443 = !DILocation(line: 4449, column: 24, scope: !1280)
!8444 = !DILocation(line: 4450, column: 23, scope: !1280)
!8445 = !DILocation(line: 4450, column: 9, scope: !1280)
!8446 = !DILocation(line: 4450, column: 14, scope: !1280)
!8447 = !DILocation(line: 4450, column: 32, scope: !1280)
!8448 = !DILocation(line: 4450, column: 37, scope: !1280)
!8449 = !{!8450, !2291, i64 0}
!8450 = !{!"", !2291, i64 0, !2291, i64 4, !2290, i64 8, !2400, i64 16, !2400, i64 20, !2400, i64 24, !2400, i64 28}
!8451 = !DILocation(line: 4451, column: 14, scope: !8452)
!8452 = distinct !DILexicalBlock(scope: !1280, file: !162, line: 4451, column: 13)
!8453 = !DILocation(line: 4451, column: 22, scope: !8452)
!8454 = !DILocation(line: 4451, column: 13, scope: !8452)
!8455 = !DILocation(line: 4451, column: 13, scope: !1280)
!8456 = !DILocation(line: 4452, column: 25, scope: !8452)
!8457 = !DILocation(line: 4452, column: 11, scope: !8452)
!8458 = !DILocation(line: 4453, column: 7, scope: !1281)
!8459 = !DILocation(line: 4453, column: 7, scope: !8460)
!8460 = !DILexicalBlockFile(scope: !1281, file: !162, discriminator: 1)
!8461 = !DILocation(line: 4453, column: 7, scope: !1280)
!8462 = !DILocation(line: 4454, column: 7, scope: !1225)
!8463 = !DILocation(line: 4456, column: 39, scope: !8464)
!8464 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4456, column: 11)
!8465 = !DILocation(line: 4456, column: 47, scope: !8464)
!8466 = !DILocation(line: 4456, column: 62, scope: !8464)
!8467 = !DILocation(line: 4456, column: 11, scope: !8464)
!8468 = !DILocation(line: 4456, column: 12, scope: !8464)
!8469 = !DILocation(line: 4456, column: 20, scope: !8464)
!8470 = !DILocation(line: 4456, column: 69, scope: !8464)
!8471 = !DILocation(line: 4456, column: 11, scope: !1225)
!8472 = !DILocation(line: 4457, column: 9, scope: !8464)
!8473 = !DILocation(line: 4458, column: 35, scope: !1225)
!8474 = !DILocation(line: 4458, column: 43, scope: !1225)
!8475 = !DILocation(line: 4458, column: 58, scope: !1225)
!8476 = !DILocation(line: 4458, column: 7, scope: !1225)
!8477 = !DILocation(line: 4458, column: 8, scope: !1225)
!8478 = !DILocation(line: 4458, column: 16, scope: !1225)
!8479 = !DILocation(line: 4458, column: 65, scope: !1225)
!8480 = !DILocation(line: 4459, column: 11, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4459, column: 11)
!8482 = !DILocation(line: 4459, column: 16, scope: !8481)
!8483 = !DILocation(line: 4459, column: 26, scope: !8481)
!8484 = !DILocation(line: 4459, column: 30, scope: !8485)
!8485 = !DILexicalBlockFile(scope: !8481, file: !162, discriminator: 1)
!8486 = !DILocation(line: 4459, column: 38, scope: !8481)
!8487 = !DILocation(line: 4459, column: 29, scope: !8481)
!8488 = !DILocation(line: 4459, column: 11, scope: !1225)
!8489 = !DILocation(line: 4460, column: 23, scope: !8481)
!8490 = !DILocation(line: 4460, column: 9, scope: !8481)
!8491 = !DILocation(line: 4461, column: 7, scope: !1225)
!8492 = !DILocation(line: 4463, column: 39, scope: !8493)
!8493 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4463, column: 11)
!8494 = !DILocation(line: 4463, column: 47, scope: !8493)
!8495 = !DILocation(line: 4463, column: 62, scope: !8493)
!8496 = !DILocation(line: 4463, column: 11, scope: !8493)
!8497 = !DILocation(line: 4463, column: 12, scope: !8493)
!8498 = !DILocation(line: 4463, column: 20, scope: !8493)
!8499 = !DILocation(line: 4463, column: 69, scope: !8493)
!8500 = !DILocation(line: 4463, column: 11, scope: !1225)
!8501 = !DILocation(line: 4464, column: 9, scope: !8493)
!8502 = !DILocation(line: 4465, column: 11, scope: !8503)
!8503 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4465, column: 11)
!8504 = !DILocation(line: 4465, column: 16, scope: !8503)
!8505 = !DILocation(line: 4466, column: 11, scope: !8503)
!8506 = !DILocation(line: 4466, column: 43, scope: !8507)
!8507 = !DILexicalBlockFile(scope: !8503, file: !162, discriminator: 1)
!8508 = !DILocation(line: 4466, column: 51, scope: !8503)
!8509 = !DILocation(line: 4466, column: 66, scope: !8503)
!8510 = !DILocation(line: 4466, column: 15, scope: !8503)
!8511 = !DILocation(line: 4466, column: 16, scope: !8503)
!8512 = !DILocation(line: 4466, column: 24, scope: !8503)
!8513 = !DILocation(line: 4467, column: 11, scope: !8503)
!8514 = !DILocation(line: 4467, column: 45, scope: !8507)
!8515 = !DILocation(line: 4467, column: 50, scope: !8503)
!8516 = !DILocation(line: 4467, column: 61, scope: !8503)
!8517 = !DILocation(line: 4467, column: 29, scope: !8503)
!8518 = !DILocation(line: 4467, column: 34, scope: !8503)
!8519 = !DILocation(line: 4467, column: 15, scope: !8503)
!8520 = !DILocation(line: 4467, column: 20, scope: !8503)
!8521 = !DILocation(line: 4467, column: 67, scope: !8503)
!8522 = !DILocation(line: 4468, column: 15, scope: !8503)
!8523 = !DILocation(line: 4465, column: 11, scope: !1225)
!8524 = !DILocation(line: 4470, column: 39, scope: !8525)
!8525 = distinct !DILexicalBlock(scope: !8503, file: !162, line: 4469, column: 13)
!8526 = !DILocation(line: 4470, column: 44, scope: !8525)
!8527 = !DILocation(line: 4470, column: 55, scope: !8525)
!8528 = !DILocation(line: 4470, column: 23, scope: !8525)
!8529 = !DILocation(line: 4470, column: 28, scope: !8525)
!8530 = !DILocation(line: 4470, column: 9, scope: !8525)
!8531 = !DILocation(line: 4470, column: 14, scope: !8525)
!8532 = !DILocation(line: 4470, column: 61, scope: !8525)
!8533 = !DILocation(line: 4471, column: 13, scope: !8525)
!8534 = !DILocation(line: 4472, column: 14, scope: !8535)
!8535 = distinct !DILexicalBlock(scope: !8525, file: !162, line: 4472, column: 13)
!8536 = !DILocation(line: 4472, column: 22, scope: !8535)
!8537 = !DILocation(line: 4472, column: 13, scope: !8535)
!8538 = !DILocation(line: 4472, column: 13, scope: !8525)
!8539 = !DILocation(line: 4473, column: 25, scope: !8535)
!8540 = !DILocation(line: 4473, column: 11, scope: !8535)
!8541 = !DILocation(line: 4474, column: 7, scope: !8525)
!8542 = !DILocation(line: 4475, column: 35, scope: !1225)
!8543 = !DILocation(line: 4475, column: 43, scope: !1225)
!8544 = !DILocation(line: 4475, column: 58, scope: !1225)
!8545 = !DILocation(line: 4475, column: 7, scope: !1225)
!8546 = !DILocation(line: 4475, column: 8, scope: !1225)
!8547 = !DILocation(line: 4475, column: 16, scope: !1225)
!8548 = !DILocation(line: 4475, column: 65, scope: !1225)
!8549 = !DILocation(line: 4476, column: 7, scope: !1225)
!8550 = !DILocation(line: 4480, column: 7, scope: !1225)
!8551 = !DILocation(line: 4480, column: 12, scope: !1225)
!8552 = !DILocation(line: 4480, column: 31, scope: !1225)
!8553 = !DILocation(line: 4481, column: 13, scope: !1284)
!8554 = !DILocation(line: 4481, column: 21, scope: !1284)
!8555 = !DILocation(line: 4481, column: 12, scope: !1284)
!8556 = !DILocation(line: 4481, column: 11, scope: !1225)
!8557 = !DILocation(line: 4482, column: 31, scope: !1284)
!8558 = !DILocation(line: 4482, column: 36, scope: !1284)
!8559 = !DILocation(line: 4482, column: 9, scope: !1284)
!8560 = !DILocation(line: 4482, column: 14, scope: !1284)
!8561 = !DILocation(line: 4482, column: 29, scope: !1284)
!8562 = !DILocation(line: 4484, column: 9, scope: !1283)
!8563 = !DILocation(line: 4484, column: 25, scope: !1283)
!8564 = !DILocation(line: 4485, column: 9, scope: !1283)
!8565 = !DILocation(line: 4485, column: 17, scope: !1283)
!8566 = !DILocation(line: 4486, column: 33, scope: !1283)
!8567 = !DILocation(line: 4486, column: 38, scope: !1283)
!8568 = !DILocation(line: 4486, column: 44, scope: !1283)
!8569 = !DILocation(line: 4487, column: 33, scope: !1283)
!8570 = !DILocation(line: 4487, column: 37, scope: !1283)
!8571 = !DILocation(line: 4487, column: 42, scope: !1283)
!8572 = !DILocation(line: 4487, column: 35, scope: !1283)
!8573 = !DILocation(line: 4488, column: 33, scope: !1283)
!8574 = !DILocation(line: 4488, column: 40, scope: !1283)
!8575 = !DILocation(line: 4488, column: 45, scope: !1283)
!8576 = !DILocation(line: 4488, column: 38, scope: !1283)
!8577 = !DILocation(line: 4486, column: 16, scope: !1283)
!8578 = !DILocation(line: 4486, column: 14, scope: !1283)
!8579 = !DILocation(line: 4489, column: 14, scope: !8580)
!8580 = distinct !DILexicalBlock(scope: !1283, file: !162, line: 4489, column: 13)
!8581 = !DILocation(line: 4489, column: 13, scope: !1283)
!8582 = !DILocation(line: 4490, column: 11, scope: !8580)
!8583 = !DILocation(line: 4491, column: 35, scope: !1283)
!8584 = !DILocation(line: 4491, column: 44, scope: !1283)
!8585 = !DILocation(line: 4491, column: 49, scope: !1283)
!8586 = !DILocation(line: 4491, column: 64, scope: !1283)
!8587 = !DILocation(line: 4491, column: 28, scope: !1283)
!8588 = !DILocation(line: 4491, column: 18, scope: !1283)
!8589 = !DILocation(line: 4491, column: 16, scope: !1283)
!8590 = !DILocation(line: 4492, column: 32, scope: !1283)
!8591 = !DILocation(line: 4492, column: 37, scope: !1283)
!8592 = !DILocation(line: 4492, column: 44, scope: !1283)
!8593 = !DILocation(line: 4492, column: 12, scope: !1283)
!8594 = !DILocation(line: 4492, column: 17, scope: !1283)
!8595 = !DILocation(line: 4492, column: 24, scope: !1283)
!8596 = !DILocation(line: 4492, column: 28, scope: !1283)
!8597 = !DILocation(line: 4497, column: 14, scope: !8598)
!8598 = distinct !DILexicalBlock(scope: !1283, file: !162, line: 4497, column: 13)
!8599 = !DILocation(line: 4497, column: 22, scope: !8598)
!8600 = !DILocation(line: 4497, column: 37, scope: !8598)
!8601 = !{!2396, !2400, i64 524}
!8602 = !DILocation(line: 4497, column: 13, scope: !8598)
!8603 = !DILocation(line: 4497, column: 52, scope: !8598)
!8604 = !DILocation(line: 4498, column: 14, scope: !8598)
!8605 = !DILocation(line: 4498, column: 19, scope: !8598)
!8606 = !DILocation(line: 4497, column: 13, scope: !1283)
!8607 = !DILocation(line: 4499, column: 18, scope: !8598)
!8608 = !DILocation(line: 4499, column: 26, scope: !8598)
!8609 = !DILocation(line: 4499, column: 17, scope: !8598)
!8610 = !DILocation(line: 4500, column: 17, scope: !8598)
!8611 = !DILocation(line: 4500, column: 22, scope: !8598)
!8612 = !DILocation(line: 4501, column: 16, scope: !8613)
!8613 = distinct !DILexicalBlock(scope: !8614, file: !162, line: 4501, column: 15)
!8614 = distinct !DILexicalBlock(scope: !8598, file: !162, line: 4500, column: 43)
!8615 = !DILocation(line: 4501, column: 15, scope: !8614)
!8616 = !DILocation(line: 4502, column: 13, scope: !8613)
!8617 = !DILocation(line: 4503, column: 21, scope: !8618)
!8618 = distinct !DILexicalBlock(scope: !8613, file: !162, line: 4503, column: 20)
!8619 = !DILocation(line: 4503, column: 29, scope: !8618)
!8620 = !DILocation(line: 4503, column: 20, scope: !8613)
!8621 = !DILocation(line: 4504, column: 13, scope: !8618)
!8622 = !DILocation(line: 4505, column: 9, scope: !8614)
!8623 = !DILocation(line: 4506, column: 19, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8598, file: !162, line: 4506, column: 18)
!8625 = !DILocation(line: 4506, column: 18, scope: !8598)
!8626 = !DILocation(line: 4507, column: 33, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8624, file: !162, line: 4506, column: 27)
!8628 = !DILocation(line: 4507, column: 38, scope: !8627)
!8629 = !DILocation(line: 4507, column: 11, scope: !8627)
!8630 = !DILocation(line: 4507, column: 16, scope: !8627)
!8631 = !DILocation(line: 4507, column: 31, scope: !8627)
!8632 = !DILocation(line: 4509, column: 16, scope: !8633)
!8633 = distinct !DILexicalBlock(scope: !8627, file: !162, line: 4509, column: 15)
!8634 = !DILocation(line: 4509, column: 21, scope: !8633)
!8635 = !DILocation(line: 4509, column: 51, scope: !8633)
!8636 = !DILocation(line: 4509, column: 55, scope: !8637)
!8637 = !DILexicalBlockFile(scope: !8633, file: !162, discriminator: 1)
!8638 = !DILocation(line: 4509, column: 63, scope: !8633)
!8639 = !DILocation(line: 4509, column: 54, scope: !8633)
!8640 = !DILocation(line: 4509, column: 15, scope: !8627)
!8641 = !DILocation(line: 4510, column: 14, scope: !8642)
!8642 = distinct !DILexicalBlock(scope: !8633, file: !162, line: 4509, column: 88)
!8643 = !DILocation(line: 4510, column: 22, scope: !8642)
!8644 = !DILocation(line: 4510, column: 47, scope: !8642)
!8645 = !DILocation(line: 4510, column: 55, scope: !8642)
!8646 = !DILocation(line: 4510, column: 70, scope: !8642)
!8647 = !DILocation(line: 4510, column: 13, scope: !8642)
!8648 = !DILocation(line: 4511, column: 27, scope: !8642)
!8649 = !DILocation(line: 4512, column: 11, scope: !8642)
!8650 = !DILocation(line: 4513, column: 11, scope: !8627)
!8651 = !DILocation(line: 4515, column: 13, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !1283, file: !162, line: 4515, column: 13)
!8653 = !DILocation(line: 4515, column: 21, scope: !8652)
!8654 = !DILocation(line: 4515, column: 13, scope: !1283)
!8655 = !DILocation(line: 4516, column: 11, scope: !8652)
!8656 = !DILocation(line: 4517, column: 13, scope: !1288)
!8657 = !DILocation(line: 4517, column: 21, scope: !1288)
!8658 = !DILocation(line: 4517, column: 13, scope: !1283)
!8659 = !DILocation(line: 4518, column: 11, scope: !1287)
!8660 = !DILocation(line: 4518, column: 26, scope: !1287)
!8661 = !DILocation(line: 4519, column: 11, scope: !1287)
!8662 = !DILocation(line: 4519, column: 20, scope: !1287)
!8663 = !DILocation(line: 4520, column: 14, scope: !1287)
!8664 = !DILocation(line: 4520, column: 19, scope: !1287)
!8665 = !DILocation(line: 4520, column: 13, scope: !1287)
!8666 = !DILocation(line: 4521, column: 42, scope: !1287)
!8667 = !DILocation(line: 4521, column: 50, scope: !1287)
!8668 = !DILocation(line: 4521, column: 58, scope: !1287)
!8669 = !DILocation(line: 4521, column: 20, scope: !1287)
!8670 = !DILocation(line: 4521, column: 18, scope: !1287)
!8671 = !DILocation(line: 4522, column: 15, scope: !8672)
!8672 = distinct !DILexicalBlock(scope: !1287, file: !162, line: 4522, column: 15)
!8673 = !DILocation(line: 4522, column: 22, scope: !8672)
!8674 = !DILocation(line: 4522, column: 15, scope: !1287)
!8675 = !DILocation(line: 4523, column: 20, scope: !8672)
!8676 = !DILocation(line: 4523, column: 13, scope: !8672)
!8677 = !DILocation(line: 4524, column: 25, scope: !1287)
!8678 = !DILocation(line: 4525, column: 11, scope: !1287)
!8679 = !DILocation(line: 4526, column: 9, scope: !1288)
!8680 = !DILocation(line: 4527, column: 14, scope: !8681)
!8681 = distinct !DILexicalBlock(scope: !1283, file: !162, line: 4527, column: 13)
!8682 = !DILocation(line: 4527, column: 22, scope: !8681)
!8683 = !DILocation(line: 4527, column: 13, scope: !8681)
!8684 = !DILocation(line: 4527, column: 13, scope: !1283)
!8685 = !DILocation(line: 4528, column: 11, scope: !8686)
!8686 = distinct !DILexicalBlock(scope: !8681, file: !162, line: 4527, column: 51)
!8687 = !DILocation(line: 4528, column: 16, scope: !8686)
!8688 = !DILocation(line: 4528, column: 32, scope: !8686)
!8689 = !DILocation(line: 4529, column: 11, scope: !8686)
!8690 = !DILocation(line: 4529, column: 19, scope: !8686)
!8691 = !DILocation(line: 4529, column: 24, scope: !8686)
!8692 = !DILocation(line: 4530, column: 17, scope: !8693)
!8693 = distinct !DILexicalBlock(scope: !8686, file: !162, line: 4530, column: 15)
!8694 = !DILocation(line: 4530, column: 25, scope: !8693)
!8695 = !DILocation(line: 4530, column: 54, scope: !8693)
!8696 = !DILocation(line: 4530, column: 62, scope: !8693)
!8697 = !DILocation(line: 4532, column: 41, scope: !8693)
!8698 = !DILocation(line: 4532, column: 49, scope: !8693)
!8699 = !DILocation(line: 4533, column: 41, scope: !8693)
!8700 = !DILocation(line: 4533, column: 49, scope: !8693)
!8701 = !DILocation(line: 4534, column: 41, scope: !8693)
!8702 = !DILocation(line: 4534, column: 49, scope: !8693)
!8703 = !DILocation(line: 4530, column: 16, scope: !8693)
!8704 = !DILocation(line: 4530, column: 15, scope: !8686)
!8705 = !DILocation(line: 4535, column: 13, scope: !8706)
!8706 = distinct !DILexicalBlock(scope: !8693, file: !162, line: 4534, column: 60)
!8707 = !DILocation(line: 4535, column: 21, scope: !8706)
!8708 = !DILocation(line: 4535, column: 26, scope: !8706)
!8709 = !DILocation(line: 4536, column: 13, scope: !8706)
!8710 = !DILocation(line: 4538, column: 11, scope: !8686)
!8711 = !DILocation(line: 4538, column: 19, scope: !8686)
!8712 = !DILocation(line: 4538, column: 24, scope: !8686)
!8713 = !DILocation(line: 4539, column: 25, scope: !8686)
!8714 = !DILocation(line: 4540, column: 16, scope: !8715)
!8715 = distinct !DILexicalBlock(scope: !8686, file: !162, line: 4540, column: 15)
!8716 = !DILocation(line: 4540, column: 21, scope: !8715)
!8717 = !DILocation(line: 4540, column: 15, scope: !8686)
!8718 = !DILocation(line: 4541, column: 35, scope: !8719)
!8719 = distinct !DILexicalBlock(scope: !8715, file: !162, line: 4540, column: 38)
!8720 = !DILocation(line: 4541, column: 40, scope: !8719)
!8721 = !DILocation(line: 4541, column: 13, scope: !8719)
!8722 = !DILocation(line: 4541, column: 18, scope: !8719)
!8723 = !DILocation(line: 4541, column: 33, scope: !8719)
!8724 = !DILocation(line: 4542, column: 13, scope: !8719)
!8725 = !DILocation(line: 4544, column: 9, scope: !8686)
!8726 = !DILocation(line: 4546, column: 33, scope: !8727)
!8727 = distinct !DILexicalBlock(scope: !8681, file: !162, line: 4545, column: 14)
!8728 = !DILocation(line: 4546, column: 38, scope: !8727)
!8729 = !DILocation(line: 4546, column: 11, scope: !8727)
!8730 = !DILocation(line: 4546, column: 16, scope: !8727)
!8731 = !DILocation(line: 4546, column: 31, scope: !8727)
!8732 = !DILocation(line: 4547, column: 11, scope: !8727)
!8733 = !DILocation(line: 4549, column: 7, scope: !1284)
!8734 = !DILocation(line: 4549, column: 7, scope: !8735)
!8735 = !DILexicalBlockFile(scope: !1284, file: !162, discriminator: 1)
!8736 = !DILocation(line: 4551, column: 12, scope: !8737)
!8737 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4551, column: 11)
!8738 = !DILocation(line: 4551, column: 17, scope: !8737)
!8739 = !DILocation(line: 4551, column: 28, scope: !8737)
!8740 = !DILocation(line: 4552, column: 12, scope: !8737)
!8741 = !DILocation(line: 4552, column: 20, scope: !8737)
!8742 = !DILocation(line: 4552, column: 11, scope: !8737)
!8743 = !DILocation(line: 4552, column: 44, scope: !8737)
!8744 = !DILocation(line: 4553, column: 13, scope: !8737)
!8745 = !DILocation(line: 4553, column: 21, scope: !8737)
!8746 = !DILocation(line: 4553, column: 46, scope: !8737)
!8747 = !DILocation(line: 4553, column: 54, scope: !8737)
!8748 = !DILocation(line: 4553, column: 12, scope: !8737)
!8749 = !DILocation(line: 4551, column: 11, scope: !1225)
!8750 = !DILocation(line: 4554, column: 9, scope: !8737)
!8751 = !DILocation(line: 4555, column: 7, scope: !1225)
!8752 = !DILocation(line: 4560, column: 12, scope: !8753)
!8753 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4560, column: 11)
!8754 = !DILocation(line: 4560, column: 20, scope: !8753)
!8755 = !DILocation(line: 4560, column: 11, scope: !8753)
!8756 = !DILocation(line: 4560, column: 11, scope: !1225)
!8757 = !DILocation(line: 4561, column: 54, scope: !8758)
!8758 = distinct !DILexicalBlock(scope: !8753, file: !162, line: 4560, column: 43)
!8759 = !DILocation(line: 4561, column: 62, scope: !8758)
!8760 = !DILocation(line: 4561, column: 67, scope: !8758)
!8761 = !DILocation(line: 4561, column: 70, scope: !8758)
!8762 = !DILocation(line: 4561, column: 39, scope: !8758)
!8763 = !DILocation(line: 4561, column: 10, scope: !8758)
!8764 = !DILocation(line: 4561, column: 18, scope: !8758)
!8765 = !DILocation(line: 4561, column: 37, scope: !8758)
!8766 = !DILocation(line: 4562, column: 15, scope: !8767)
!8767 = distinct !DILexicalBlock(scope: !8758, file: !162, line: 4562, column: 13)
!8768 = !DILocation(line: 4562, column: 23, scope: !8767)
!8769 = !DILocation(line: 4562, column: 14, scope: !8767)
!8770 = !DILocation(line: 4562, column: 13, scope: !8758)
!8771 = !DILocation(line: 4563, column: 11, scope: !8767)
!8772 = !DILocation(line: 4564, column: 9, scope: !8758)
!8773 = !DILocation(line: 4564, column: 14, scope: !8758)
!8774 = !DILocation(line: 4564, column: 25, scope: !8758)
!8775 = !DILocation(line: 4565, column: 9, scope: !8758)
!8776 = !DILocation(line: 4565, column: 14, scope: !8758)
!8777 = !DILocation(line: 4565, column: 25, scope: !8758)
!8778 = !DILocation(line: 4566, column: 9, scope: !8758)
!8779 = !DILocation(line: 4566, column: 14, scope: !8758)
!8780 = !DILocation(line: 4566, column: 24, scope: !8758)
!8781 = !DILocation(line: 4567, column: 23, scope: !8758)
!8782 = !DILocation(line: 4568, column: 7, scope: !8758)
!8783 = !DILocation(line: 4569, column: 7, scope: !1225)
!8784 = !DILocation(line: 4573, column: 11, scope: !1294)
!8785 = !DILocation(line: 4573, column: 16, scope: !1294)
!8786 = !DILocation(line: 4573, column: 11, scope: !1225)
!8787 = !DILocation(line: 4574, column: 14, scope: !1292)
!8788 = !DILocation(line: 4574, column: 22, scope: !1292)
!8789 = !DILocation(line: 4574, column: 13, scope: !1292)
!8790 = !DILocation(line: 4574, column: 13, scope: !1293)
!8791 = !DILocation(line: 4575, column: 11, scope: !1291)
!8792 = !DILocation(line: 4575, column: 25, scope: !1291)
!8793 = !DILocation(line: 4575, column: 52, scope: !1291)
!8794 = !DILocation(line: 4575, column: 60, scope: !1291)
!8795 = !DILocation(line: 4575, column: 66, scope: !1291)
!8796 = !DILocation(line: 4575, column: 35, scope: !1291)
!8797 = !DILocation(line: 4576, column: 16, scope: !8798)
!8798 = distinct !DILexicalBlock(scope: !1291, file: !162, line: 4576, column: 15)
!8799 = !DILocation(line: 4576, column: 15, scope: !1291)
!8800 = !DILocation(line: 4577, column: 13, scope: !8798)
!8801 = !DILocation(line: 4578, column: 11, scope: !1291)
!8802 = !DILocation(line: 4578, column: 20, scope: !1291)
!8803 = !DILocation(line: 4578, column: 26, scope: !1291)
!8804 = !{!8805, !2291, i64 4}
!8805 = !{!"XML_cp", !2291, i64 0, !2291, i64 4, !2290, i64 8, !2400, i64 16, !2290, i64 24}
!8806 = !DILocation(line: 4579, column: 11, scope: !1291)
!8807 = !DILocation(line: 4579, column: 20, scope: !1291)
!8808 = !DILocation(line: 4579, column: 25, scope: !1291)
!8809 = !{!8805, !2290, i64 8}
!8810 = !DILocation(line: 4580, column: 11, scope: !1291)
!8811 = !DILocation(line: 4580, column: 20, scope: !1291)
!8812 = !DILocation(line: 4580, column: 32, scope: !1291)
!8813 = !{!8805, !2400, i64 16}
!8814 = !DILocation(line: 4581, column: 11, scope: !1291)
!8815 = !DILocation(line: 4581, column: 20, scope: !1291)
!8816 = !DILocation(line: 4581, column: 29, scope: !1291)
!8817 = !{!8805, !2290, i64 24}
!8818 = !DILocation(line: 4582, column: 29, scope: !1291)
!8819 = !DILocation(line: 4582, column: 34, scope: !1291)
!8820 = !DILocation(line: 4582, column: 28, scope: !1291)
!8821 = !DILocation(line: 4582, column: 11, scope: !1291)
!8822 = !DILocation(line: 4582, column: 20, scope: !1291)
!8823 = !DILocation(line: 4582, column: 25, scope: !1291)
!8824 = !{!8805, !2291, i64 0}
!8825 = !DILocation(line: 4585, column: 25, scope: !1291)
!8826 = !DILocation(line: 4585, column: 12, scope: !1291)
!8827 = !DILocation(line: 4585, column: 23, scope: !1291)
!8828 = !DILocation(line: 4586, column: 12, scope: !1291)
!8829 = !DILocation(line: 4586, column: 20, scope: !1291)
!8830 = !DILocation(line: 4586, column: 43, scope: !1291)
!8831 = !DILocation(line: 4586, column: 51, scope: !1291)
!8832 = !DILocation(line: 4586, column: 67, scope: !1291)
!8833 = !DILocation(line: 4586, column: 75, scope: !1291)
!8834 = !DILocation(line: 4586, column: 95, scope: !1291)
!8835 = !DILocation(line: 4586, column: 101, scope: !1291)
!8836 = !DILocation(line: 4586, column: 11, scope: !1291)
!8837 = !DILocation(line: 4587, column: 25, scope: !1291)
!8838 = !DILocation(line: 4588, column: 9, scope: !1292)
!8839 = !DILocation(line: 4588, column: 9, scope: !8840)
!8840 = !DILexicalBlockFile(scope: !1292, file: !162, discriminator: 1)
!8841 = !DILocation(line: 4588, column: 9, scope: !1291)
!8842 = !DILocation(line: 4589, column: 9, scope: !1293)
!8843 = !DILocation(line: 4589, column: 14, scope: !1293)
!8844 = !DILocation(line: 4589, column: 24, scope: !1293)
!8845 = !DILocation(line: 4590, column: 7, scope: !1293)
!8846 = !DILocation(line: 4591, column: 7, scope: !1225)
!8847 = !DILocation(line: 4594, column: 11, scope: !8848)
!8848 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4594, column: 11)
!8849 = !DILocation(line: 4594, column: 16, scope: !8848)
!8850 = !DILocation(line: 4594, column: 11, scope: !1225)
!8851 = !DILocation(line: 4595, column: 39, scope: !8852)
!8852 = distinct !DILexicalBlock(scope: !8848, file: !162, line: 4594, column: 27)
!8853 = !DILocation(line: 4595, column: 44, scope: !8852)
!8854 = !DILocation(line: 4595, column: 55, scope: !8852)
!8855 = !DILocation(line: 4595, column: 23, scope: !8852)
!8856 = !DILocation(line: 4595, column: 28, scope: !8852)
!8857 = !DILocation(line: 4595, column: 9, scope: !8852)
!8858 = !DILocation(line: 4595, column: 14, scope: !8852)
!8859 = !DILocation(line: 4595, column: 61, scope: !8852)
!8860 = !DILocation(line: 4596, column: 13, scope: !8852)
!8861 = !DILocation(line: 4597, column: 14, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !8852, file: !162, line: 4597, column: 13)
!8863 = !DILocation(line: 4597, column: 22, scope: !8862)
!8864 = !DILocation(line: 4597, column: 13, scope: !8862)
!8865 = !DILocation(line: 4597, column: 13, scope: !8852)
!8866 = !DILocation(line: 4598, column: 25, scope: !8862)
!8867 = !DILocation(line: 4598, column: 11, scope: !8862)
!8868 = !DILocation(line: 4599, column: 7, scope: !8852)
!8869 = !DILocation(line: 4600, column: 7, scope: !1225)
!8870 = !DILocation(line: 4603, column: 13, scope: !1225)
!8871 = !DILocation(line: 4604, column: 7, scope: !1225)
!8872 = !DILocation(line: 4606, column: 13, scope: !1225)
!8873 = !DILocation(line: 4607, column: 7, scope: !1225)
!8874 = !DILocation(line: 4609, column: 13, scope: !1225)
!8875 = !DILocation(line: 4610, column: 7, scope: !1225)
!8876 = !DILocation(line: 4612, column: 13, scope: !1225)
!8877 = !DILocation(line: 4612, column: 7, scope: !1225)
!8878 = !DILocation(line: 4614, column: 11, scope: !1297)
!8879 = !DILocation(line: 4614, column: 16, scope: !1297)
!8880 = !DILocation(line: 4614, column: 11, scope: !1225)
!8881 = !DILocation(line: 4615, column: 9, scope: !1296)
!8882 = !DILocation(line: 4615, column: 23, scope: !1296)
!8883 = !DILocation(line: 4616, column: 9, scope: !1296)
!8884 = !DILocation(line: 4616, column: 25, scope: !1296)
!8885 = !DILocation(line: 4617, column: 9, scope: !1296)
!8886 = !DILocation(line: 4617, column: 13, scope: !1296)
!8887 = !DILocation(line: 4618, column: 9, scope: !1296)
!8888 = !DILocation(line: 4618, column: 21, scope: !1296)
!8889 = !DILocation(line: 4618, column: 28, scope: !1296)
!8890 = !DILocation(line: 4618, column: 34, scope: !1296)
!8891 = !DILocation(line: 4619, column: 30, scope: !1296)
!8892 = !DILocation(line: 4620, column: 30, scope: !1296)
!8893 = !DILocation(line: 4620, column: 37, scope: !1296)
!8894 = !DILocation(line: 4620, column: 42, scope: !1296)
!8895 = !DILocation(line: 4620, column: 35, scope: !1296)
!8896 = !DILocation(line: 4618, column: 21, scope: !8897)
!8897 = !DILexicalBlockFile(scope: !8898, file: !162, discriminator: 2)
!8898 = !DILexicalBlockFile(scope: !1296, file: !162, discriminator: 1)
!8899 = !DILocation(line: 4621, column: 9, scope: !1296)
!8900 = !DILocation(line: 4621, column: 13, scope: !1296)
!8901 = !DILocation(line: 4621, column: 40, scope: !1296)
!8902 = !DILocation(line: 4621, column: 23, scope: !1296)
!8903 = !DILocation(line: 4622, column: 13, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !1296, file: !162, line: 4622, column: 13)
!8905 = !DILocation(line: 4622, column: 21, scope: !8904)
!8906 = !DILocation(line: 4622, column: 13, scope: !1296)
!8907 = !DILocation(line: 4623, column: 11, scope: !8904)
!8908 = !DILocation(line: 4624, column: 23, scope: !1296)
!8909 = !DILocation(line: 4624, column: 9, scope: !1296)
!8910 = !DILocation(line: 4624, column: 14, scope: !1296)
!8911 = !DILocation(line: 4624, column: 32, scope: !1296)
!8912 = !DILocation(line: 4624, column: 37, scope: !1296)
!8913 = !DILocation(line: 4625, column: 40, scope: !1296)
!8914 = !DILocation(line: 4625, column: 23, scope: !1296)
!8915 = !DILocation(line: 4625, column: 9, scope: !1296)
!8916 = !DILocation(line: 4625, column: 14, scope: !1296)
!8917 = !DILocation(line: 4625, column: 32, scope: !1296)
!8918 = !DILocation(line: 4625, column: 38, scope: !1296)
!8919 = !{!8450, !2291, i64 4}
!8920 = !DILocation(line: 4626, column: 29, scope: !1296)
!8921 = !DILocation(line: 4626, column: 37, scope: !1296)
!8922 = !DILocation(line: 4626, column: 42, scope: !1296)
!8923 = !DILocation(line: 4626, column: 45, scope: !1296)
!8924 = !DILocation(line: 4626, column: 14, scope: !1296)
!8925 = !DILocation(line: 4626, column: 12, scope: !1296)
!8926 = !DILocation(line: 4627, column: 14, scope: !8927)
!8927 = distinct !DILexicalBlock(scope: !1296, file: !162, line: 4627, column: 13)
!8928 = !DILocation(line: 4627, column: 13, scope: !1296)
!8929 = !DILocation(line: 4628, column: 11, scope: !8927)
!8930 = !DILocation(line: 4629, column: 16, scope: !1296)
!8931 = !DILocation(line: 4629, column: 20, scope: !1296)
!8932 = !DILocation(line: 4629, column: 14, scope: !1296)
!8933 = !DILocation(line: 4630, column: 39, scope: !1296)
!8934 = !DILocation(line: 4630, column: 23, scope: !1296)
!8935 = !DILocation(line: 4630, column: 9, scope: !1296)
!8936 = !DILocation(line: 4630, column: 14, scope: !1296)
!8937 = !DILocation(line: 4630, column: 32, scope: !1296)
!8938 = !DILocation(line: 4630, column: 37, scope: !1296)
!8939 = !{!8450, !2290, i64 8}
!8940 = !DILocation(line: 4631, column: 17, scope: !1296)
!8941 = !DILocation(line: 4632, column: 9, scope: !1296)
!8942 = !DILocation(line: 4632, column: 28, scope: !8943)
!8943 = !DILexicalBlockFile(scope: !8944, file: !162, discriminator: 3)
!8944 = !DILexicalBlockFile(scope: !8945, file: !162, discriminator: 1)
!8945 = distinct !DILexicalBlock(scope: !8946, file: !162, line: 4632, column: 9)
!8946 = distinct !DILexicalBlock(scope: !1296, file: !162, line: 4632, column: 9)
!8947 = !DILocation(line: 4632, column: 16, scope: !8945)
!8948 = !DILocation(line: 4632, column: 9, scope: !8946)
!8949 = !DILocation(line: 4632, column: 9, scope: !8950)
!8950 = !DILexicalBlockFile(scope: !8945, file: !162, discriminator: 2)
!8951 = !DILocation(line: 4633, column: 34, scope: !1296)
!8952 = !DILocation(line: 4633, column: 9, scope: !1296)
!8953 = !DILocation(line: 4633, column: 14, scope: !1296)
!8954 = !DILocation(line: 4633, column: 31, scope: !1296)
!8955 = !DILocation(line: 4634, column: 14, scope: !8956)
!8956 = distinct !DILexicalBlock(scope: !1296, file: !162, line: 4634, column: 13)
!8957 = !DILocation(line: 4634, column: 22, scope: !8956)
!8958 = !DILocation(line: 4634, column: 13, scope: !8956)
!8959 = !DILocation(line: 4634, column: 13, scope: !1296)
!8960 = !DILocation(line: 4635, column: 25, scope: !8956)
!8961 = !DILocation(line: 4635, column: 11, scope: !8956)
!8962 = !DILocation(line: 4636, column: 7, scope: !1297)
!8963 = !DILocation(line: 4636, column: 7, scope: !8964)
!8964 = !DILexicalBlockFile(scope: !1297, file: !162, discriminator: 1)
!8965 = !DILocation(line: 4636, column: 7, scope: !1296)
!8966 = !DILocation(line: 4637, column: 7, scope: !1225)
!8967 = !DILocation(line: 4640, column: 13, scope: !1225)
!8968 = !DILocation(line: 4641, column: 7, scope: !1225)
!8969 = !DILocation(line: 4643, column: 13, scope: !1225)
!8970 = !DILocation(line: 4644, column: 7, scope: !1225)
!8971 = !DILocation(line: 4646, column: 13, scope: !1225)
!8972 = !DILocation(line: 4647, column: 7, scope: !1225)
!8973 = !DILocation(line: 4649, column: 13, scope: !1225)
!8974 = !DILocation(line: 4649, column: 7, scope: !1225)
!8975 = !DILocation(line: 4651, column: 11, scope: !1308)
!8976 = !DILocation(line: 4651, column: 16, scope: !1308)
!8977 = !DILocation(line: 4651, column: 11, scope: !1225)
!8978 = !DILocation(line: 4652, column: 14, scope: !8979)
!8979 = distinct !DILexicalBlock(scope: !1307, file: !162, line: 4652, column: 13)
!8980 = !DILocation(line: 4652, column: 22, scope: !8979)
!8981 = !DILocation(line: 4652, column: 13, scope: !8979)
!8982 = !DILocation(line: 4652, column: 13, scope: !1307)
!8983 = !DILocation(line: 4653, column: 25, scope: !8979)
!8984 = !DILocation(line: 4653, column: 11, scope: !8979)
!8985 = !DILocation(line: 4654, column: 9, scope: !1307)
!8986 = !DILocation(line: 4654, column: 14, scope: !1307)
!8987 = !DILocation(line: 4654, column: 24, scope: !1307)
!8988 = !DILocation(line: 4655, column: 65, scope: !1307)
!8989 = !DILocation(line: 4655, column: 39, scope: !1307)
!8990 = !DILocation(line: 4655, column: 44, scope: !1307)
!8991 = !DILocation(line: 4655, column: 23, scope: !1307)
!8992 = !DILocation(line: 4655, column: 28, scope: !1307)
!8993 = !DILocation(line: 4655, column: 9, scope: !1307)
!8994 = !DILocation(line: 4655, column: 14, scope: !1307)
!8995 = !DILocation(line: 4655, column: 57, scope: !1307)
!8996 = !DILocation(line: 4655, column: 63, scope: !1307)
!8997 = !DILocation(line: 4656, column: 13, scope: !1306)
!8998 = !DILocation(line: 4656, column: 18, scope: !1306)
!8999 = !DILocation(line: 4656, column: 29, scope: !1306)
!9000 = !DILocation(line: 4656, column: 13, scope: !1307)
!9001 = !DILocation(line: 4657, column: 16, scope: !1304)
!9002 = !DILocation(line: 4657, column: 15, scope: !1305)
!9003 = !DILocation(line: 4658, column: 13, scope: !1303)
!9004 = !DILocation(line: 4658, column: 26, scope: !1303)
!9005 = !DILocation(line: 4658, column: 46, scope: !1303)
!9006 = !DILocation(line: 4658, column: 34, scope: !1303)
!9007 = !DILocation(line: 4659, column: 18, scope: !9008)
!9008 = distinct !DILexicalBlock(scope: !1303, file: !162, line: 4659, column: 17)
!9009 = !DILocation(line: 4659, column: 17, scope: !1303)
!9010 = !DILocation(line: 4660, column: 15, scope: !9008)
!9011 = !DILocation(line: 4661, column: 27, scope: !1303)
!9012 = !DILocation(line: 4661, column: 14, scope: !1303)
!9013 = !DILocation(line: 4661, column: 25, scope: !1303)
!9014 = !DILocation(line: 4662, column: 14, scope: !1303)
!9015 = !DILocation(line: 4662, column: 22, scope: !1303)
!9016 = !DILocation(line: 4662, column: 45, scope: !1303)
!9017 = !DILocation(line: 4662, column: 53, scope: !1303)
!9018 = !DILocation(line: 4662, column: 69, scope: !1303)
!9019 = !DILocation(line: 4662, column: 77, scope: !1303)
!9020 = !DILocation(line: 4662, column: 97, scope: !1303)
!9021 = !DILocation(line: 4662, column: 103, scope: !1303)
!9022 = !DILocation(line: 4662, column: 13, scope: !1303)
!9023 = !DILocation(line: 4663, column: 11, scope: !1304)
!9024 = !DILocation(line: 4663, column: 11, scope: !9025)
!9025 = !DILexicalBlockFile(scope: !1304, file: !162, discriminator: 1)
!9026 = !DILocation(line: 4663, column: 11, scope: !1303)
!9027 = !DILocation(line: 4664, column: 11, scope: !1305)
!9028 = !DILocation(line: 4664, column: 16, scope: !1305)
!9029 = !DILocation(line: 4664, column: 26, scope: !1305)
!9030 = !DILocation(line: 4665, column: 11, scope: !1305)
!9031 = !DILocation(line: 4665, column: 16, scope: !1305)
!9032 = !DILocation(line: 4665, column: 33, scope: !1305)
!9033 = !DILocation(line: 4666, column: 9, scope: !1305)
!9034 = !DILocation(line: 4667, column: 7, scope: !1307)
!9035 = !DILocation(line: 4668, column: 7, scope: !1225)
!9036 = !DILocation(line: 4672, column: 40, scope: !9037)
!9037 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4672, column: 11)
!9038 = !DILocation(line: 4672, column: 48, scope: !9037)
!9039 = !DILocation(line: 4672, column: 53, scope: !9037)
!9040 = !DILocation(line: 4672, column: 56, scope: !9037)
!9041 = !DILocation(line: 4672, column: 12, scope: !9037)
!9042 = !DILocation(line: 4672, column: 11, scope: !1225)
!9043 = !DILocation(line: 4673, column: 9, scope: !9037)
!9044 = !DILocation(line: 4674, column: 21, scope: !1225)
!9045 = !DILocation(line: 4675, column: 7, scope: !1225)
!9046 = !DILocation(line: 4677, column: 26, scope: !9047)
!9047 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4677, column: 11)
!9048 = !DILocation(line: 4677, column: 34, scope: !9047)
!9049 = !DILocation(line: 4677, column: 39, scope: !9047)
!9050 = !DILocation(line: 4677, column: 42, scope: !9047)
!9051 = !DILocation(line: 4677, column: 12, scope: !9047)
!9052 = !DILocation(line: 4677, column: 11, scope: !1225)
!9053 = !DILocation(line: 4678, column: 9, scope: !9047)
!9054 = !DILocation(line: 4679, column: 21, scope: !1225)
!9055 = !DILocation(line: 4680, column: 7, scope: !1225)
!9056 = !DILocation(line: 4682, column: 15, scope: !1225)
!9057 = !DILocation(line: 4682, column: 7, scope: !1225)
!9058 = !DILocation(line: 4684, column: 23, scope: !9059)
!9059 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4682, column: 20)
!9060 = !DILocation(line: 4685, column: 9, scope: !9059)
!9061 = !DILocation(line: 4687, column: 7, scope: !1225)
!9062 = !DILocation(line: 4689, column: 12, scope: !9063)
!9063 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4689, column: 11)
!9064 = !DILocation(line: 4689, column: 20, scope: !9063)
!9065 = !DILocation(line: 4689, column: 11, scope: !9063)
!9066 = !DILocation(line: 4689, column: 11, scope: !1225)
!9067 = !DILocation(line: 4690, column: 23, scope: !9063)
!9068 = !DILocation(line: 4690, column: 9, scope: !9063)
!9069 = !DILocation(line: 4691, column: 7, scope: !1225)
!9070 = !DILocation(line: 4693, column: 11, scope: !9071)
!9071 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4693, column: 11)
!9072 = !DILocation(line: 4693, column: 16, scope: !9071)
!9073 = !DILocation(line: 4693, column: 31, scope: !9071)
!9074 = !DILocation(line: 4693, column: 35, scope: !9075)
!9075 = !DILexicalBlockFile(scope: !9071, file: !162, discriminator: 1)
!9076 = !DILocation(line: 4693, column: 43, scope: !9071)
!9077 = !DILocation(line: 4693, column: 34, scope: !9071)
!9078 = !DILocation(line: 4693, column: 11, scope: !1225)
!9079 = !DILocation(line: 4694, column: 23, scope: !9071)
!9080 = !DILocation(line: 4694, column: 9, scope: !9071)
!9081 = !DILocation(line: 4695, column: 7, scope: !1225)
!9082 = !DILocation(line: 4697, column: 12, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4697, column: 11)
!9084 = !DILocation(line: 4697, column: 20, scope: !9083)
!9085 = !DILocation(line: 4697, column: 11, scope: !9083)
!9086 = !DILocation(line: 4697, column: 11, scope: !1225)
!9087 = !DILocation(line: 4698, column: 23, scope: !9083)
!9088 = !DILocation(line: 4698, column: 9, scope: !9083)
!9089 = !DILocation(line: 4699, column: 7, scope: !1225)
!9090 = !DILocation(line: 4701, column: 11, scope: !9091)
!9091 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4701, column: 11)
!9092 = !DILocation(line: 4701, column: 16, scope: !9091)
!9093 = !DILocation(line: 4701, column: 31, scope: !9091)
!9094 = !DILocation(line: 4701, column: 35, scope: !9095)
!9095 = !DILexicalBlockFile(scope: !9091, file: !162, discriminator: 1)
!9096 = !DILocation(line: 4701, column: 43, scope: !9091)
!9097 = !DILocation(line: 4701, column: 34, scope: !9091)
!9098 = !DILocation(line: 4701, column: 11, scope: !1225)
!9099 = !DILocation(line: 4702, column: 23, scope: !9091)
!9100 = !DILocation(line: 4702, column: 9, scope: !9091)
!9101 = !DILocation(line: 4703, column: 7, scope: !1225)
!9102 = !DILocation(line: 4705, column: 12, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !1225, file: !162, line: 4705, column: 11)
!9104 = !DILocation(line: 4705, column: 20, scope: !9103)
!9105 = !DILocation(line: 4705, column: 11, scope: !9103)
!9106 = !DILocation(line: 4705, column: 11, scope: !1225)
!9107 = !DILocation(line: 4706, column: 23, scope: !9103)
!9108 = !DILocation(line: 4706, column: 9, scope: !9103)
!9109 = !DILocation(line: 4707, column: 7, scope: !1225)
!9110 = !DILocation(line: 4710, column: 9, scope: !9111)
!9111 = distinct !DILexicalBlock(scope: !1219, file: !162, line: 4710, column: 9)
!9112 = !DILocation(line: 4710, column: 23, scope: !9111)
!9113 = !DILocation(line: 4710, column: 27, scope: !9114)
!9114 = !DILexicalBlockFile(scope: !9111, file: !162, discriminator: 1)
!9115 = !DILocation(line: 4710, column: 35, scope: !9111)
!9116 = !DILocation(line: 4710, column: 26, scope: !9111)
!9117 = !DILocation(line: 4710, column: 9, scope: !1219)
!9118 = !DILocation(line: 4711, column: 21, scope: !9111)
!9119 = !DILocation(line: 4711, column: 29, scope: !9111)
!9120 = !DILocation(line: 4711, column: 34, scope: !9111)
!9121 = !DILocation(line: 4711, column: 37, scope: !9111)
!9122 = !DILocation(line: 4711, column: 7, scope: !9111)
!9123 = !DILocation(line: 4713, column: 14, scope: !1219)
!9124 = !DILocation(line: 4713, column: 22, scope: !1219)
!9125 = !DILocation(line: 4713, column: 38, scope: !1219)
!9126 = !DILocation(line: 4713, column: 5, scope: !1219)
!9127 = !DILocation(line: 4715, column: 18, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !1219, file: !162, line: 4713, column: 48)
!9129 = !DILocation(line: 4715, column: 8, scope: !9128)
!9130 = !DILocation(line: 4715, column: 16, scope: !9128)
!9131 = !DILocation(line: 4716, column: 7, scope: !9128)
!9132 = !DILocation(line: 4718, column: 7, scope: !9128)
!9133 = !DILocation(line: 4720, column: 11, scope: !9128)
!9134 = !DILocation(line: 4720, column: 9, scope: !9128)
!9135 = !DILocation(line: 4721, column: 16, scope: !9128)
!9136 = !DILocation(line: 4721, column: 22, scope: !9128)
!9137 = !DILocation(line: 4721, column: 15, scope: !9128)
!9138 = !DILocation(line: 4721, column: 35, scope: !9128)
!9139 = !DILocation(line: 4721, column: 40, scope: !9128)
!9140 = !DILocation(line: 4721, column: 43, scope: !9128)
!9141 = !DILocation(line: 4721, column: 14, scope: !9128)
!9142 = !DILocation(line: 4721, column: 11, scope: !9128)
!9143 = !DILocation(line: 4722, column: 5, scope: !9128)
!9144 = !DILocation(line: 4723, column: 3, scope: !1220)
!9145 = !DILocation(line: 4723, column: 3, scope: !9146)
!9146 = !DILexicalBlockFile(scope: !1220, file: !162, discriminator: 1)
!9147 = !DILocation(line: 3792, column: 3, scope: !1220)
!9148 = !DILocation(line: 4725, column: 1, scope: !1201)
!9149 = !DILocation(line: 3419, column: 27, scope: !1309)
!9150 = !DILocation(line: 3419, column: 39, scope: !1309)
!9151 = !DILocation(line: 3420, column: 28, scope: !1309)
!9152 = !DILocation(line: 3420, column: 43, scope: !1309)
!9153 = !DILocation(line: 3422, column: 3, scope: !1309)
!9154 = !DILocation(line: 3422, column: 15, scope: !1309)
!9155 = !DILocation(line: 3423, column: 3, scope: !1309)
!9156 = !DILocation(line: 3423, column: 19, scope: !1309)
!9157 = !DILocation(line: 3424, column: 3, scope: !1309)
!9158 = !DILocation(line: 3424, column: 19, scope: !1309)
!9159 = !DILocation(line: 3425, column: 3, scope: !1309)
!9160 = !DILocation(line: 3425, column: 15, scope: !1309)
!9161 = !DILocation(line: 3426, column: 3, scope: !1309)
!9162 = !DILocation(line: 3426, column: 15, scope: !1309)
!9163 = !DILocation(line: 3427, column: 3, scope: !1309)
!9164 = !DILocation(line: 3427, column: 19, scope: !1309)
!9165 = !DILocation(line: 3428, column: 3, scope: !1309)
!9166 = !DILocation(line: 3428, column: 7, scope: !1309)
!9167 = !DILocation(line: 3429, column: 10, scope: !9168)
!9168 = distinct !DILexicalBlock(scope: !1309, file: !162, line: 3429, column: 7)
!9169 = !DILocation(line: 3429, column: 18, scope: !9168)
!9170 = !DILocation(line: 3429, column: 9, scope: !9168)
!9171 = !DILocation(line: 3431, column: 36, scope: !9168)
!9172 = !DILocation(line: 3432, column: 29, scope: !9168)
!9173 = !DILocation(line: 3432, column: 37, scope: !9168)
!9174 = !DILocation(line: 3433, column: 28, scope: !9168)
!9175 = !DILocation(line: 3434, column: 28, scope: !9168)
!9176 = !DILocation(line: 3435, column: 30, scope: !9168)
!9177 = !DILocation(line: 3435, column: 38, scope: !9168)
!9178 = !DILocation(line: 3429, column: 8, scope: !9168)
!9179 = !DILocation(line: 3429, column: 7, scope: !1309)
!9180 = !DILocation(line: 3441, column: 9, scope: !9181)
!9181 = distinct !DILexicalBlock(scope: !9182, file: !162, line: 3441, column: 9)
!9182 = distinct !DILexicalBlock(scope: !9168, file: !162, line: 3440, column: 42)
!9183 = !DILocation(line: 3441, column: 9, scope: !9182)
!9184 = !DILocation(line: 3442, column: 7, scope: !9181)
!9185 = !DILocation(line: 3444, column: 7, scope: !9181)
!9186 = !DILocation(line: 3446, column: 8, scope: !9187)
!9187 = distinct !DILexicalBlock(scope: !1309, file: !162, line: 3446, column: 7)
!9188 = !DILocation(line: 3446, column: 28, scope: !9187)
!9189 = !DILocation(line: 3446, column: 31, scope: !9190)
!9190 = !DILexicalBlockFile(scope: !9187, file: !162, discriminator: 1)
!9191 = !DILocation(line: 3446, column: 42, scope: !9187)
!9192 = !DILocation(line: 3446, column: 7, scope: !1309)
!9193 = !DILocation(line: 3447, column: 6, scope: !9194)
!9194 = distinct !DILexicalBlock(scope: !9187, file: !162, line: 3446, column: 48)
!9195 = !DILocation(line: 3447, column: 14, scope: !9194)
!9196 = !DILocation(line: 3447, column: 22, scope: !9194)
!9197 = !DILocation(line: 3447, column: 33, scope: !9194)
!9198 = !DILocation(line: 3449, column: 10, scope: !9199)
!9199 = distinct !DILexicalBlock(scope: !9194, file: !162, line: 3449, column: 9)
!9200 = !DILocation(line: 3449, column: 18, scope: !9199)
!9201 = !DILocation(line: 3449, column: 40, scope: !9199)
!9202 = !DILocation(line: 3449, column: 9, scope: !9194)
!9203 = !DILocation(line: 3450, column: 8, scope: !9199)
!9204 = !DILocation(line: 3450, column: 16, scope: !9199)
!9205 = !DILocation(line: 3450, column: 38, scope: !9199)
!9206 = !DILocation(line: 3450, column: 7, scope: !9199)
!9207 = !DILocation(line: 3452, column: 3, scope: !9194)
!9208 = !DILocation(line: 3453, column: 8, scope: !9209)
!9209 = distinct !DILexicalBlock(scope: !1309, file: !162, line: 3453, column: 7)
!9210 = !DILocation(line: 3453, column: 16, scope: !9209)
!9211 = !DILocation(line: 3453, column: 7, scope: !9209)
!9212 = !DILocation(line: 3453, column: 7, scope: !1309)
!9213 = !DILocation(line: 3454, column: 9, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9215, file: !162, line: 3454, column: 9)
!9215 = distinct !DILexicalBlock(scope: !9209, file: !162, line: 3453, column: 35)
!9216 = !DILocation(line: 3454, column: 22, scope: !9214)
!9217 = !DILocation(line: 3454, column: 9, scope: !9215)
!9218 = !DILocation(line: 3455, column: 41, scope: !9219)
!9219 = distinct !DILexicalBlock(scope: !9214, file: !162, line: 3454, column: 37)
!9220 = !DILocation(line: 3455, column: 49, scope: !9219)
!9221 = !DILocation(line: 3456, column: 40, scope: !9219)
!9222 = !DILocation(line: 3456, column: 48, scope: !9219)
!9223 = !DILocation(line: 3457, column: 39, scope: !9219)
!9224 = !DILocation(line: 3458, column: 39, scope: !9219)
!9225 = !DILocation(line: 3459, column: 45, scope: !9219)
!9226 = !DILocation(line: 3459, column: 53, scope: !9219)
!9227 = !DILocation(line: 3459, column: 67, scope: !9219)
!9228 = !{!2399, !2290, i64 64}
!9229 = !DILocation(line: 3459, column: 80, scope: !9219)
!9230 = !DILocation(line: 3459, column: 88, scope: !9219)
!9231 = !DILocation(line: 3459, column: 101, scope: !9219)
!9232 = !DILocation(line: 3459, column: 42, scope: !9219)
!9233 = !DILocation(line: 3459, column: 39, scope: !9219)
!9234 = !DILocation(line: 3455, column: 23, scope: !9219)
!9235 = !DILocation(line: 3455, column: 21, scope: !9219)
!9236 = !DILocation(line: 3460, column: 12, scope: !9237)
!9237 = distinct !DILexicalBlock(scope: !9219, file: !162, line: 3460, column: 11)
!9238 = !DILocation(line: 3460, column: 11, scope: !9219)
!9239 = !DILocation(line: 3461, column: 15, scope: !9237)
!9240 = !DILocation(line: 3462, column: 45, scope: !9219)
!9241 = !DILocation(line: 3462, column: 53, scope: !9219)
!9242 = !DILocation(line: 3462, column: 68, scope: !9219)
!9243 = !DILocation(line: 3462, column: 11, scope: !9219)
!9244 = !DILocation(line: 3462, column: 19, scope: !9219)
!9245 = !DILocation(line: 3462, column: 34, scope: !9219)
!9246 = !DILocation(line: 3462, column: 40, scope: !9219)
!9247 = !DILocation(line: 3463, column: 5, scope: !9219)
!9248 = !DILocation(line: 3464, column: 9, scope: !9249)
!9249 = distinct !DILexicalBlock(scope: !9215, file: !162, line: 3464, column: 9)
!9250 = !DILocation(line: 3464, column: 9, scope: !9215)
!9251 = !DILocation(line: 3465, column: 41, scope: !9252)
!9252 = distinct !DILexicalBlock(scope: !9249, file: !162, line: 3464, column: 18)
!9253 = !DILocation(line: 3465, column: 49, scope: !9252)
!9254 = !DILocation(line: 3466, column: 40, scope: !9252)
!9255 = !DILocation(line: 3466, column: 48, scope: !9252)
!9256 = !DILocation(line: 3467, column: 39, scope: !9252)
!9257 = !DILocation(line: 3468, column: 39, scope: !9252)
!9258 = !DILocation(line: 3468, column: 53, scope: !9252)
!9259 = !DILocation(line: 3468, column: 61, scope: !9252)
!9260 = !DILocation(line: 3468, column: 74, scope: !9252)
!9261 = !DILocation(line: 3468, column: 50, scope: !9252)
!9262 = !DILocation(line: 3465, column: 23, scope: !9252)
!9263 = !DILocation(line: 3465, column: 21, scope: !9252)
!9264 = !DILocation(line: 3469, column: 12, scope: !9265)
!9265 = distinct !DILexicalBlock(scope: !9252, file: !162, line: 3469, column: 11)
!9266 = !DILocation(line: 3469, column: 11, scope: !9252)
!9267 = !DILocation(line: 3470, column: 9, scope: !9265)
!9268 = !DILocation(line: 3471, column: 5, scope: !9252)
!9269 = !DILocation(line: 3472, column: 6, scope: !9215)
!9270 = !DILocation(line: 3472, column: 14, scope: !9215)
!9271 = !DILocation(line: 3472, column: 33, scope: !9215)
!9272 = !DILocation(line: 3472, column: 41, scope: !9215)
!9273 = !DILocation(line: 3472, column: 56, scope: !9215)
!9274 = !DILocation(line: 3472, column: 71, scope: !9215)
!9275 = !DILocation(line: 3472, column: 86, scope: !9215)
!9276 = !DILocation(line: 3472, column: 5, scope: !9215)
!9277 = !DILocation(line: 3473, column: 3, scope: !9215)
!9278 = !DILocation(line: 3474, column: 13, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !9209, file: !162, line: 3474, column: 12)
!9280 = !DILocation(line: 3474, column: 21, scope: !9279)
!9281 = !DILocation(line: 3474, column: 12, scope: !9279)
!9282 = !DILocation(line: 3474, column: 12, scope: !9209)
!9283 = !DILocation(line: 3475, column: 19, scope: !9279)
!9284 = !DILocation(line: 3475, column: 28, scope: !9279)
!9285 = !DILocation(line: 3475, column: 36, scope: !9279)
!9286 = !DILocation(line: 3475, column: 49, scope: !9279)
!9287 = !DILocation(line: 3475, column: 52, scope: !9279)
!9288 = !DILocation(line: 3475, column: 5, scope: !9279)
!9289 = !DILocation(line: 3476, column: 8, scope: !1329)
!9290 = !DILocation(line: 3476, column: 16, scope: !1329)
!9291 = !DILocation(line: 3476, column: 40, scope: !1329)
!9292 = !DILocation(line: 3476, column: 7, scope: !1309)
!9293 = !DILocation(line: 3477, column: 9, scope: !1327)
!9294 = !DILocation(line: 3477, column: 9, scope: !1328)
!9295 = !DILocation(line: 3478, column: 11, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !9297, file: !162, line: 3478, column: 11)
!9297 = distinct !DILexicalBlock(scope: !1327, file: !162, line: 3477, column: 22)
!9298 = !DILocation(line: 3478, column: 24, scope: !9296)
!9299 = !DILocation(line: 3478, column: 44, scope: !9296)
!9300 = !DILocation(line: 3478, column: 52, scope: !9296)
!9301 = !DILocation(line: 3478, column: 65, scope: !9296)
!9302 = !DILocation(line: 3478, column: 40, scope: !9296)
!9303 = !DILocation(line: 3478, column: 11, scope: !9297)
!9304 = !DILocation(line: 3479, column: 32, scope: !9305)
!9305 = distinct !DILexicalBlock(scope: !9296, file: !162, line: 3478, column: 82)
!9306 = !DILocation(line: 3479, column: 10, scope: !9305)
!9307 = !DILocation(line: 3479, column: 18, scope: !9305)
!9308 = !DILocation(line: 3479, column: 30, scope: !9305)
!9309 = !DILocation(line: 3480, column: 9, scope: !9305)
!9310 = !DILocation(line: 3482, column: 30, scope: !9297)
!9311 = !DILocation(line: 3482, column: 8, scope: !9297)
!9312 = !DILocation(line: 3482, column: 16, scope: !9297)
!9313 = !DILocation(line: 3482, column: 28, scope: !9297)
!9314 = !DILocation(line: 3483, column: 5, scope: !9297)
!9315 = !DILocation(line: 3484, column: 14, scope: !1326)
!9316 = !DILocation(line: 3484, column: 14, scope: !1327)
!9317 = !DILocation(line: 3485, column: 7, scope: !1325)
!9318 = !DILocation(line: 3485, column: 22, scope: !1325)
!9319 = !DILocation(line: 3486, column: 12, scope: !9320)
!9320 = distinct !DILexicalBlock(scope: !1325, file: !162, line: 3486, column: 11)
!9321 = !DILocation(line: 3486, column: 11, scope: !1325)
!9322 = !DILocation(line: 3488, column: 13, scope: !9323)
!9323 = distinct !DILexicalBlock(scope: !9320, file: !162, line: 3486, column: 27)
!9324 = !DILocation(line: 3488, column: 21, scope: !9323)
!9325 = !DILocation(line: 3488, column: 36, scope: !9323)
!9326 = !DILocation(line: 3488, column: 44, scope: !9323)
!9327 = !DILocation(line: 3488, column: 57, scope: !9323)
!9328 = !DILocation(line: 3489, column: 11, scope: !9323)
!9329 = !DILocation(line: 3489, column: 30, scope: !9323)
!9330 = !DILocation(line: 3489, column: 38, scope: !9323)
!9331 = !DILocation(line: 3489, column: 52, scope: !9323)
!9332 = !DILocation(line: 3489, column: 65, scope: !9323)
!9333 = !DILocation(line: 3489, column: 73, scope: !9323)
!9334 = !DILocation(line: 3489, column: 86, scope: !9323)
!9335 = !DILocation(line: 3489, column: 27, scope: !9323)
!9336 = !DILocation(line: 3489, column: 24, scope: !9323)
!9337 = !DILocation(line: 3487, column: 25, scope: !9323)
!9338 = !DILocation(line: 3487, column: 23, scope: !9323)
!9339 = !DILocation(line: 3490, column: 14, scope: !9340)
!9340 = distinct !DILexicalBlock(scope: !9323, file: !162, line: 3490, column: 13)
!9341 = !DILocation(line: 3490, column: 13, scope: !9323)
!9342 = !DILocation(line: 3491, column: 11, scope: !9340)
!9343 = !DILocation(line: 3492, column: 7, scope: !9323)
!9344 = !DILocation(line: 3493, column: 38, scope: !1325)
!9345 = !DILocation(line: 3493, column: 46, scope: !1325)
!9346 = !DILocation(line: 3493, column: 16, scope: !1325)
!9347 = !DILocation(line: 3493, column: 14, scope: !1325)
!9348 = !DILocation(line: 3494, column: 19, scope: !1325)
!9349 = !DILocation(line: 3494, column: 27, scope: !1325)
!9350 = !DILocation(line: 3494, column: 7, scope: !1325)
!9351 = !DILocation(line: 3495, column: 11, scope: !9352)
!9352 = distinct !DILexicalBlock(scope: !1325, file: !162, line: 3495, column: 11)
!9353 = !DILocation(line: 3495, column: 18, scope: !9352)
!9354 = !DILocation(line: 3495, column: 11, scope: !1325)
!9355 = !DILocation(line: 3496, column: 32, scope: !9352)
!9356 = !DILocation(line: 3496, column: 10, scope: !9352)
!9357 = !DILocation(line: 3496, column: 18, scope: !9352)
!9358 = !DILocation(line: 3496, column: 30, scope: !9352)
!9359 = !DILocation(line: 3496, column: 9, scope: !9352)
!9360 = !DILocation(line: 3497, column: 14, scope: !1325)
!9361 = !DILocation(line: 3497, column: 7, scope: !1325)
!9362 = !DILocation(line: 3498, column: 5, scope: !1326)
!9363 = !DILocation(line: 3499, column: 3, scope: !1328)
!9364 = !DILocation(line: 3501, column: 7, scope: !9365)
!9365 = distinct !DILexicalBlock(scope: !1309, file: !162, line: 3501, column: 7)
!9366 = !DILocation(line: 3501, column: 21, scope: !9365)
!9367 = !DILocation(line: 3501, column: 24, scope: !9368)
!9368 = !DILexicalBlockFile(scope: !9365, file: !162, discriminator: 1)
!9369 = !DILocation(line: 3501, column: 7, scope: !1309)
!9370 = !DILocation(line: 3502, column: 17, scope: !9365)
!9371 = !DILocation(line: 3502, column: 25, scope: !9365)
!9372 = !DILocation(line: 3502, column: 5, scope: !9365)
!9373 = !DILocation(line: 3504, column: 3, scope: !1309)
!9374 = !DILocation(line: 3505, column: 1, scope: !1309)
!9375 = !DILocation(line: 6198, column: 30, scope: !1330)
!9376 = !DILocation(line: 6198, column: 52, scope: !1330)
!9377 = !DILocation(line: 6199, column: 29, scope: !1330)
!9378 = !DILocation(line: 6199, column: 46, scope: !1330)
!9379 = !DILocation(line: 6201, column: 19, scope: !9380)
!9380 = distinct !DILexicalBlock(scope: !1330, file: !162, line: 6201, column: 7)
!9381 = !DILocation(line: 6201, column: 25, scope: !9380)
!9382 = !DILocation(line: 6201, column: 30, scope: !9380)
!9383 = !DILocation(line: 6201, column: 35, scope: !9380)
!9384 = !DILocation(line: 6201, column: 8, scope: !9380)
!9385 = !DILocation(line: 6201, column: 7, scope: !1330)
!9386 = !DILocation(line: 6202, column: 5, scope: !9380)
!9387 = !DILocation(line: 6203, column: 7, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !1330, file: !162, line: 6203, column: 7)
!9389 = !DILocation(line: 6203, column: 13, scope: !9388)
!9390 = !DILocation(line: 6203, column: 20, scope: !9388)
!9391 = !DILocation(line: 6203, column: 26, scope: !9388)
!9392 = !DILocation(line: 6203, column: 17, scope: !9388)
!9393 = !DILocation(line: 6203, column: 30, scope: !9388)
!9394 = !DILocation(line: 6203, column: 43, scope: !9395)
!9395 = !DILexicalBlockFile(scope: !9388, file: !162, discriminator: 1)
!9396 = !DILocation(line: 6203, column: 34, scope: !9388)
!9397 = !DILocation(line: 6203, column: 7, scope: !1330)
!9398 = !DILocation(line: 6204, column: 5, scope: !9388)
!9399 = !DILocation(line: 6205, column: 5, scope: !1330)
!9400 = !DILocation(line: 6205, column: 11, scope: !1330)
!9401 = !DILocation(line: 6205, column: 15, scope: !1330)
!9402 = !DILocation(line: 6205, column: 18, scope: !1330)
!9403 = !DILocation(line: 6206, column: 10, scope: !1330)
!9404 = !DILocation(line: 6206, column: 16, scope: !1330)
!9405 = !DILocation(line: 6206, column: 3, scope: !1330)
!9406 = !DILocation(line: 6207, column: 1, scope: !1330)
!9407 = !DILocation(line: 5970, column: 19, scope: !1338)
!9408 = !DILocation(line: 5970, column: 39, scope: !1338)
!9409 = !DILocation(line: 5970, column: 50, scope: !1338)
!9410 = !DILocation(line: 5970, column: 63, scope: !1338)
!9411 = !DILocation(line: 5972, column: 3, scope: !1338)
!9412 = !DILocation(line: 5972, column: 10, scope: !1338)
!9413 = !DILocation(line: 5973, column: 7, scope: !1349)
!9414 = !DILocation(line: 5973, column: 14, scope: !1349)
!9415 = !DILocation(line: 5973, column: 19, scope: !1349)
!9416 = !DILocation(line: 5973, column: 7, scope: !1338)
!9417 = !DILocation(line: 5974, column: 5, scope: !1348)
!9418 = !DILocation(line: 5974, column: 12, scope: !1348)
!9419 = !DILocation(line: 5975, column: 10, scope: !9420)
!9420 = distinct !DILexicalBlock(scope: !1348, file: !162, line: 5975, column: 9)
!9421 = !DILocation(line: 5975, column: 9, scope: !1348)
!9422 = !DILocation(line: 5976, column: 7, scope: !9420)
!9423 = !DILocation(line: 5977, column: 5, scope: !1348)
!9424 = !DILocation(line: 5977, column: 12, scope: !1348)
!9425 = !DILocation(line: 5977, column: 18, scope: !1348)
!9426 = !DILocation(line: 5979, column: 5, scope: !1348)
!9427 = !DILocation(line: 5979, column: 12, scope: !1348)
!9428 = !DILocation(line: 5979, column: 17, scope: !1348)
!9429 = !DILocation(line: 5980, column: 13, scope: !1348)
!9430 = !DILocation(line: 5980, column: 20, scope: !1348)
!9431 = !DILocation(line: 5980, column: 25, scope: !1348)
!9432 = !DILocation(line: 5980, column: 11, scope: !1348)
!9433 = !DILocation(line: 5981, column: 26, scope: !1348)
!9434 = !DILocation(line: 5981, column: 33, scope: !1348)
!9435 = !DILocation(line: 5981, column: 38, scope: !1348)
!9436 = !DILocation(line: 5981, column: 49, scope: !1348)
!9437 = !DILocation(line: 5981, column: 16, scope: !1348)
!9438 = !DILocation(line: 5981, column: 5, scope: !1348)
!9439 = !DILocation(line: 5981, column: 12, scope: !1348)
!9440 = !DILocation(line: 5981, column: 14, scope: !1348)
!9441 = !DILocation(line: 5982, column: 10, scope: !9442)
!9442 = distinct !DILexicalBlock(scope: !1348, file: !162, line: 5982, column: 9)
!9443 = !DILocation(line: 5982, column: 17, scope: !9442)
!9444 = !DILocation(line: 5982, column: 9, scope: !1348)
!9445 = !DILocation(line: 5983, column: 7, scope: !9446)
!9446 = distinct !DILexicalBlock(scope: !9442, file: !162, line: 5982, column: 20)
!9447 = !DILocation(line: 5983, column: 14, scope: !9446)
!9448 = !DILocation(line: 5983, column: 19, scope: !9446)
!9449 = !DILocation(line: 5984, column: 7, scope: !9446)
!9450 = !DILocation(line: 5986, column: 12, scope: !1348)
!9451 = !DILocation(line: 5986, column: 19, scope: !1348)
!9452 = !DILocation(line: 5986, column: 5, scope: !1348)
!9453 = !DILocation(line: 5986, column: 25, scope: !1348)
!9454 = !DILocation(line: 5987, column: 14, scope: !1348)
!9455 = !DILocation(line: 5987, column: 22, scope: !1348)
!9456 = !DILocation(line: 5987, column: 9, scope: !1348)
!9457 = !DILocation(line: 5987, column: 46, scope: !1348)
!9458 = !DILocation(line: 5987, column: 53, scope: !1348)
!9459 = !DILocation(line: 5987, column: 58, scope: !1348)
!9460 = !DILocation(line: 5987, column: 28, scope: !1348)
!9461 = !DILocation(line: 5987, column: 7, scope: !1348)
!9462 = !DILocation(line: 5988, column: 3, scope: !1349)
!9463 = !DILocation(line: 5988, column: 3, scope: !9464)
!9464 = !DILexicalBlockFile(scope: !1349, file: !162, discriminator: 1)
!9465 = !DILocation(line: 5988, column: 3, scope: !1348)
!9466 = !DILocation(line: 5990, column: 5, scope: !1351)
!9467 = !DILocation(line: 5990, column: 19, scope: !1351)
!9468 = !DILocation(line: 5990, column: 28, scope: !1351)
!9469 = !DILocation(line: 5990, column: 36, scope: !1351)
!9470 = !DILocation(line: 5990, column: 23, scope: !1351)
!9471 = !DILocation(line: 5991, column: 5, scope: !1351)
!9472 = !DILocation(line: 5991, column: 19, scope: !1351)
!9473 = !DILocation(line: 5991, column: 41, scope: !1351)
!9474 = !DILocation(line: 5991, column: 48, scope: !1351)
!9475 = !DILocation(line: 5991, column: 53, scope: !1351)
!9476 = !DILocation(line: 5992, column: 5, scope: !1351)
!9477 = !DILocation(line: 5992, column: 19, scope: !1351)
!9478 = !DILocation(line: 5993, column: 9, scope: !1351)
!9479 = !DILocation(line: 5993, column: 13, scope: !1351)
!9480 = !DILocation(line: 5993, column: 11, scope: !1351)
!9481 = !DILocation(line: 5993, column: 7, scope: !1351)
!9482 = !DILocation(line: 5994, column: 5, scope: !1351)
!9483 = !DILocation(line: 5994, column: 21, scope: !9484)
!9484 = !DILexicalBlockFile(scope: !9485, file: !162, discriminator: 2)
!9485 = !DILexicalBlockFile(scope: !1351, file: !162, discriminator: 1)
!9486 = !DILocation(line: 5994, column: 12, scope: !1351)
!9487 = !DILocation(line: 5994, column: 19, scope: !1351)
!9488 = !DILocation(line: 5995, column: 17, scope: !9489)
!9489 = distinct !DILexicalBlock(scope: !9490, file: !162, line: 5995, column: 11)
!9490 = distinct !DILexicalBlock(scope: !1351, file: !162, line: 5994, column: 25)
!9491 = !DILocation(line: 5995, column: 32, scope: !9489)
!9492 = !DILocation(line: 5995, column: 23, scope: !9489)
!9493 = !DILocation(line: 5995, column: 30, scope: !9489)
!9494 = !DILocation(line: 5995, column: 36, scope: !9489)
!9495 = !{!9496, !2290, i64 0}
!9496 = !{!"", !2290, i64 0}
!9497 = !DILocation(line: 5995, column: 11, scope: !9489)
!9498 = !DILocation(line: 5995, column: 11, scope: !9490)
!9499 = !DILocation(line: 5996, column: 25, scope: !9489)
!9500 = !DILocation(line: 5996, column: 16, scope: !9489)
!9501 = !DILocation(line: 5996, column: 23, scope: !9489)
!9502 = !DILocation(line: 5996, column: 9, scope: !9489)
!9503 = !DILocation(line: 5997, column: 12, scope: !9504)
!9504 = distinct !DILexicalBlock(scope: !9490, file: !162, line: 5997, column: 11)
!9505 = !DILocation(line: 5997, column: 11, scope: !9490)
!9506 = !DILocation(line: 5998, column: 38, scope: !9504)
!9507 = !DILocation(line: 5998, column: 45, scope: !9504)
!9508 = !DILocation(line: 5998, column: 43, scope: !9504)
!9509 = !DILocation(line: 5998, column: 41, scope: !9504)
!9510 = !DILocation(line: 5998, column: 57, scope: !9504)
!9511 = !DILocation(line: 5998, column: 64, scope: !9504)
!9512 = !DILocation(line: 5998, column: 56, scope: !9504)
!9513 = !DILocation(line: 5998, column: 71, scope: !9504)
!9514 = !DILocation(line: 5998, column: 52, scope: !9504)
!9515 = !DILocation(line: 5998, column: 81, scope: !9504)
!9516 = !DILocation(line: 5998, column: 87, scope: !9504)
!9517 = !DILocation(line: 5998, column: 77, scope: !9504)
!9518 = !DILocation(line: 5998, column: 95, scope: !9504)
!9519 = !DILocation(line: 5998, column: 17, scope: !9504)
!9520 = !DILocation(line: 5998, column: 14, scope: !9504)
!9521 = !DILocation(line: 5998, column: 9, scope: !9504)
!9522 = !DILocation(line: 5999, column: 7, scope: !9490)
!9523 = !DILocation(line: 5999, column: 11, scope: !9490)
!9524 = !DILocation(line: 5999, column: 9, scope: !9490)
!9525 = !DILocation(line: 5999, column: 24, scope: !9526)
!9526 = !DILexicalBlockFile(scope: !9490, file: !162, discriminator: 1)
!9527 = !DILocation(line: 5999, column: 31, scope: !9490)
!9528 = !DILocation(line: 5999, column: 38, scope: !9490)
!9529 = !DILocation(line: 5999, column: 36, scope: !9490)
!9530 = !DILocation(line: 5999, column: 21, scope: !9490)
!9531 = !DILocation(line: 5999, column: 52, scope: !9532)
!9532 = !DILexicalBlockFile(scope: !9490, file: !162, discriminator: 2)
!9533 = !DILocation(line: 5999, column: 49, scope: !9490)
!9534 = !DILocation(line: 6001, column: 10, scope: !9535)
!9535 = distinct !DILexicalBlock(scope: !1351, file: !162, line: 6001, column: 9)
!9536 = !DILocation(line: 6001, column: 9, scope: !1351)
!9537 = !DILocation(line: 6002, column: 7, scope: !9535)
!9538 = !DILocation(line: 6005, column: 9, scope: !1356)
!9539 = !DILocation(line: 6005, column: 16, scope: !1356)
!9540 = !DILocation(line: 6005, column: 25, scope: !1356)
!9541 = !DILocation(line: 6005, column: 32, scope: !1356)
!9542 = !DILocation(line: 6005, column: 38, scope: !1356)
!9543 = !DILocation(line: 6005, column: 21, scope: !1356)
!9544 = !DILocation(line: 6005, column: 9, scope: !1351)
!9545 = !DILocation(line: 6006, column: 7, scope: !1355)
!9546 = !DILocation(line: 6006, column: 21, scope: !1355)
!9547 = !DILocation(line: 6006, column: 32, scope: !1355)
!9548 = !DILocation(line: 6006, column: 39, scope: !1355)
!9549 = !DILocation(line: 6006, column: 45, scope: !1355)
!9550 = !DILocation(line: 6007, column: 7, scope: !1355)
!9551 = !DILocation(line: 6007, column: 14, scope: !1355)
!9552 = !DILocation(line: 6007, column: 37, scope: !1355)
!9553 = !DILocation(line: 6007, column: 34, scope: !1355)
!9554 = !DILocation(line: 6008, column: 7, scope: !1355)
!9555 = !DILocation(line: 6008, column: 21, scope: !1355)
!9556 = !DILocation(line: 6008, column: 46, scope: !1355)
!9557 = !DILocation(line: 6008, column: 54, scope: !1355)
!9558 = !DILocation(line: 6009, column: 7, scope: !1355)
!9559 = !DILocation(line: 6009, column: 14, scope: !1355)
!9560 = !DILocation(line: 6009, column: 22, scope: !1355)
!9561 = !DILocation(line: 6009, column: 30, scope: !1355)
!9562 = !DILocation(line: 6010, column: 7, scope: !1355)
!9563 = !DILocation(line: 6010, column: 15, scope: !1355)
!9564 = !DILocation(line: 6010, column: 32, scope: !1355)
!9565 = !DILocation(line: 6010, column: 39, scope: !1355)
!9566 = !DILocation(line: 6010, column: 44, scope: !1355)
!9567 = !DILocation(line: 6010, column: 55, scope: !1355)
!9568 = !DILocation(line: 6010, column: 22, scope: !1355)
!9569 = !DILocation(line: 6011, column: 12, scope: !9570)
!9570 = distinct !DILexicalBlock(scope: !1355, file: !162, line: 6011, column: 11)
!9571 = !DILocation(line: 6011, column: 11, scope: !1355)
!9572 = !DILocation(line: 6012, column: 9, scope: !9570)
!9573 = !DILocation(line: 6013, column: 14, scope: !1355)
!9574 = !DILocation(line: 6013, column: 7, scope: !1355)
!9575 = !DILocation(line: 6013, column: 23, scope: !1355)
!9576 = !DILocation(line: 6014, column: 14, scope: !1365)
!9577 = !DILocation(line: 6014, column: 12, scope: !1365)
!9578 = !DILocation(line: 6014, column: 19, scope: !9579)
!9579 = !DILexicalBlockFile(scope: !9580, file: !162, discriminator: 2)
!9580 = !DILexicalBlockFile(scope: !1364, file: !162, discriminator: 1)
!9581 = !DILocation(line: 6014, column: 23, scope: !1364)
!9582 = !DILocation(line: 6014, column: 30, scope: !1364)
!9583 = !DILocation(line: 6014, column: 21, scope: !1364)
!9584 = !DILocation(line: 6014, column: 7, scope: !1365)
!9585 = !DILocation(line: 6015, column: 22, scope: !1363)
!9586 = !DILocation(line: 6015, column: 13, scope: !1363)
!9587 = !DILocation(line: 6015, column: 20, scope: !1363)
!9588 = !DILocation(line: 6015, column: 13, scope: !1364)
!9589 = !DILocation(line: 6016, column: 11, scope: !1362)
!9590 = !DILocation(line: 6016, column: 25, scope: !1362)
!9591 = !DILocation(line: 6016, column: 40, scope: !1362)
!9592 = !DILocation(line: 6016, column: 57, scope: !1362)
!9593 = !DILocation(line: 6016, column: 48, scope: !1362)
!9594 = !DILocation(line: 6016, column: 55, scope: !1362)
!9595 = !DILocation(line: 6016, column: 61, scope: !1362)
!9596 = !DILocation(line: 6016, column: 35, scope: !1362)
!9597 = !DILocation(line: 6017, column: 11, scope: !1362)
!9598 = !DILocation(line: 6017, column: 18, scope: !1362)
!9599 = !DILocation(line: 6017, column: 22, scope: !1362)
!9600 = !DILocation(line: 6017, column: 32, scope: !1362)
!9601 = !DILocation(line: 6017, column: 30, scope: !1362)
!9602 = !DILocation(line: 6018, column: 16, scope: !1362)
!9603 = !DILocation(line: 6019, column: 11, scope: !1362)
!9604 = !DILocation(line: 6019, column: 23, scope: !9605)
!9605 = !DILexicalBlockFile(scope: !9606, file: !162, discriminator: 2)
!9606 = !DILexicalBlockFile(scope: !1362, file: !162, discriminator: 1)
!9607 = !DILocation(line: 6019, column: 18, scope: !1362)
!9608 = !DILocation(line: 6020, column: 18, scope: !9609)
!9609 = distinct !DILexicalBlock(scope: !9610, file: !162, line: 6020, column: 17)
!9610 = distinct !DILexicalBlock(scope: !1362, file: !162, line: 6019, column: 27)
!9611 = !DILocation(line: 6020, column: 17, scope: !9610)
!9612 = !DILocation(line: 6021, column: 44, scope: !9609)
!9613 = !DILocation(line: 6021, column: 57, scope: !9609)
!9614 = !DILocation(line: 6021, column: 55, scope: !9609)
!9615 = !DILocation(line: 6021, column: 53, scope: !9609)
!9616 = !DILocation(line: 6021, column: 72, scope: !9609)
!9617 = !DILocation(line: 6021, column: 71, scope: !9609)
!9618 = !DILocation(line: 6021, column: 82, scope: !9609)
!9619 = !DILocation(line: 6021, column: 67, scope: !9609)
!9620 = !DILocation(line: 6021, column: 92, scope: !9609)
!9621 = !DILocation(line: 6021, column: 101, scope: !9609)
!9622 = !DILocation(line: 6021, column: 88, scope: !9609)
!9623 = !DILocation(line: 6021, column: 109, scope: !9609)
!9624 = !DILocation(line: 6021, column: 23, scope: !9609)
!9625 = !DILocation(line: 6021, column: 20, scope: !9609)
!9626 = !DILocation(line: 6021, column: 15, scope: !9609)
!9627 = !DILocation(line: 6022, column: 13, scope: !9610)
!9628 = !DILocation(line: 6022, column: 17, scope: !9610)
!9629 = !DILocation(line: 6022, column: 15, scope: !9610)
!9630 = !DILocation(line: 6022, column: 30, scope: !9631)
!9631 = !DILexicalBlockFile(scope: !9610, file: !162, discriminator: 1)
!9632 = !DILocation(line: 6022, column: 40, scope: !9610)
!9633 = !DILocation(line: 6022, column: 38, scope: !9610)
!9634 = !DILocation(line: 6022, column: 27, scope: !9610)
!9635 = !DILocation(line: 6022, column: 54, scope: !9636)
!9636 = !DILexicalBlockFile(scope: !9610, file: !162, discriminator: 2)
!9637 = !DILocation(line: 6022, column: 51, scope: !9610)
!9638 = !DILocation(line: 6024, column: 30, scope: !1362)
!9639 = !DILocation(line: 6024, column: 21, scope: !1362)
!9640 = !DILocation(line: 6024, column: 28, scope: !1362)
!9641 = !DILocation(line: 6024, column: 16, scope: !1362)
!9642 = !DILocation(line: 6024, column: 11, scope: !1362)
!9643 = !DILocation(line: 6024, column: 19, scope: !1362)
!9644 = !DILocation(line: 6025, column: 9, scope: !1363)
!9645 = !DILocation(line: 6025, column: 9, scope: !1362)
!9646 = !DILocation(line: 6015, column: 23, scope: !9647)
!9647 = !DILexicalBlockFile(scope: !1363, file: !162, discriminator: 1)
!9648 = !DILocation(line: 6014, column: 37, scope: !1364)
!9649 = !DILocation(line: 6014, column: 7, scope: !1364)
!9650 = !DILocation(line: 6026, column: 7, scope: !1355)
!9651 = !DILocation(line: 6026, column: 14, scope: !1355)
!9652 = !DILocation(line: 6026, column: 19, scope: !1355)
!9653 = !DILocation(line: 6026, column: 28, scope: !1355)
!9654 = !DILocation(line: 6026, column: 35, scope: !1355)
!9655 = !DILocation(line: 6027, column: 18, scope: !1355)
!9656 = !DILocation(line: 6027, column: 7, scope: !1355)
!9657 = !DILocation(line: 6027, column: 14, scope: !1355)
!9658 = !DILocation(line: 6027, column: 16, scope: !1355)
!9659 = !DILocation(line: 6028, column: 22, scope: !1355)
!9660 = !DILocation(line: 6028, column: 7, scope: !1355)
!9661 = !DILocation(line: 6028, column: 14, scope: !1355)
!9662 = !DILocation(line: 6028, column: 20, scope: !1355)
!9663 = !DILocation(line: 6029, column: 21, scope: !1355)
!9664 = !DILocation(line: 6029, column: 7, scope: !1355)
!9665 = !DILocation(line: 6029, column: 14, scope: !1355)
!9666 = !DILocation(line: 6029, column: 19, scope: !1355)
!9667 = !DILocation(line: 6030, column: 11, scope: !1355)
!9668 = !DILocation(line: 6030, column: 15, scope: !1355)
!9669 = !DILocation(line: 6030, column: 13, scope: !1355)
!9670 = !DILocation(line: 6030, column: 9, scope: !1355)
!9671 = !DILocation(line: 6031, column: 12, scope: !1355)
!9672 = !DILocation(line: 6032, column: 7, scope: !1355)
!9673 = !DILocation(line: 6032, column: 23, scope: !9674)
!9674 = !DILexicalBlockFile(scope: !9675, file: !162, discriminator: 2)
!9675 = !DILexicalBlockFile(scope: !1355, file: !162, discriminator: 1)
!9676 = !DILocation(line: 6032, column: 14, scope: !1355)
!9677 = !DILocation(line: 6032, column: 21, scope: !1355)
!9678 = !DILocation(line: 6033, column: 14, scope: !9679)
!9679 = distinct !DILexicalBlock(scope: !9680, file: !162, line: 6033, column: 13)
!9680 = distinct !DILexicalBlock(scope: !1355, file: !162, line: 6032, column: 27)
!9681 = !DILocation(line: 6033, column: 13, scope: !9680)
!9682 = !DILocation(line: 6034, column: 40, scope: !9679)
!9683 = !DILocation(line: 6034, column: 47, scope: !9679)
!9684 = !DILocation(line: 6034, column: 45, scope: !9679)
!9685 = !DILocation(line: 6034, column: 43, scope: !9679)
!9686 = !DILocation(line: 6034, column: 62, scope: !9679)
!9687 = !DILocation(line: 6034, column: 61, scope: !9679)
!9688 = !DILocation(line: 6034, column: 72, scope: !9679)
!9689 = !DILocation(line: 6034, column: 57, scope: !9679)
!9690 = !DILocation(line: 6034, column: 82, scope: !9679)
!9691 = !DILocation(line: 6034, column: 91, scope: !9679)
!9692 = !DILocation(line: 6034, column: 78, scope: !9679)
!9693 = !DILocation(line: 6034, column: 99, scope: !9679)
!9694 = !DILocation(line: 6034, column: 19, scope: !9679)
!9695 = !DILocation(line: 6034, column: 16, scope: !9679)
!9696 = !DILocation(line: 6034, column: 11, scope: !9679)
!9697 = !DILocation(line: 6035, column: 9, scope: !9680)
!9698 = !DILocation(line: 6035, column: 13, scope: !9680)
!9699 = !DILocation(line: 6035, column: 11, scope: !9680)
!9700 = !DILocation(line: 6035, column: 26, scope: !9701)
!9701 = !DILexicalBlockFile(scope: !9680, file: !162, discriminator: 1)
!9702 = !DILocation(line: 6035, column: 36, scope: !9680)
!9703 = !DILocation(line: 6035, column: 34, scope: !9680)
!9704 = !DILocation(line: 6035, column: 23, scope: !9680)
!9705 = !DILocation(line: 6035, column: 50, scope: !9706)
!9706 = !DILexicalBlockFile(scope: !9680, file: !162, discriminator: 2)
!9707 = !DILocation(line: 6035, column: 47, scope: !9680)
!9708 = !DILocation(line: 6037, column: 5, scope: !1356)
!9709 = !DILocation(line: 6037, column: 5, scope: !9710)
!9710 = !DILexicalBlockFile(scope: !1356, file: !162, discriminator: 1)
!9711 = !DILocation(line: 6037, column: 5, scope: !1355)
!9712 = !DILocation(line: 6038, column: 3, scope: !1349)
!9713 = !DILocation(line: 6038, column: 3, scope: !9464)
!9714 = !DILocation(line: 6039, column: 26, scope: !1338)
!9715 = !DILocation(line: 6039, column: 33, scope: !1338)
!9716 = !DILocation(line: 6039, column: 38, scope: !1338)
!9717 = !DILocation(line: 6039, column: 49, scope: !1338)
!9718 = !DILocation(line: 6039, column: 17, scope: !1338)
!9719 = !DILocation(line: 6039, column: 12, scope: !1338)
!9720 = !DILocation(line: 6039, column: 3, scope: !1338)
!9721 = !DILocation(line: 6039, column: 10, scope: !1338)
!9722 = !DILocation(line: 6039, column: 15, scope: !1338)
!9723 = !DILocation(line: 6040, column: 17, scope: !9724)
!9724 = distinct !DILexicalBlock(scope: !1338, file: !162, line: 6040, column: 7)
!9725 = !DILocation(line: 6040, column: 8, scope: !9724)
!9726 = !DILocation(line: 6040, column: 15, scope: !9724)
!9727 = !DILocation(line: 6040, column: 7, scope: !1338)
!9728 = !DILocation(line: 6041, column: 5, scope: !9724)
!9729 = !DILocation(line: 6042, column: 19, scope: !1338)
!9730 = !DILocation(line: 6042, column: 10, scope: !1338)
!9731 = !DILocation(line: 6042, column: 17, scope: !1338)
!9732 = !DILocation(line: 6042, column: 3, scope: !1338)
!9733 = !DILocation(line: 6042, column: 26, scope: !1338)
!9734 = !DILocation(line: 6043, column: 23, scope: !1338)
!9735 = !DILocation(line: 6043, column: 12, scope: !1338)
!9736 = !DILocation(line: 6043, column: 3, scope: !1338)
!9737 = !DILocation(line: 6043, column: 10, scope: !1338)
!9738 = !DILocation(line: 6043, column: 16, scope: !1338)
!9739 = !DILocation(line: 6043, column: 21, scope: !1338)
!9740 = !DILocation(line: 6044, column: 4, scope: !1338)
!9741 = !DILocation(line: 6044, column: 11, scope: !1338)
!9742 = !DILocation(line: 6044, column: 16, scope: !1338)
!9743 = !DILocation(line: 6045, column: 19, scope: !1338)
!9744 = !DILocation(line: 6045, column: 10, scope: !1338)
!9745 = !DILocation(line: 6045, column: 17, scope: !1338)
!9746 = !DILocation(line: 6045, column: 3, scope: !1338)
!9747 = !DILocation(line: 6046, column: 1, scope: !1338)
!9748 = !DILocation(line: 5623, column: 29, scope: !1380)
!9749 = !DILocation(line: 5625, column: 3, scope: !1380)
!9750 = !DILocation(line: 5625, column: 13, scope: !1380)
!9751 = !DILocation(line: 5625, column: 17, scope: !1380)
!9752 = !DILocation(line: 5626, column: 3, scope: !1380)
!9753 = !DILocation(line: 5626, column: 13, scope: !1380)
!9754 = !DILocation(line: 5627, column: 12, scope: !9755)
!9755 = distinct !DILexicalBlock(scope: !1380, file: !162, line: 5627, column: 3)
!9756 = !DILocation(line: 5627, column: 10, scope: !9755)
!9757 = !DILocation(line: 5627, column: 8, scope: !9755)
!9758 = !DILocation(line: 5627, column: 23, scope: !9759)
!9759 = !DILexicalBlockFile(scope: !9760, file: !162, discriminator: 2)
!9760 = !DILexicalBlockFile(scope: !9761, file: !162, discriminator: 1)
!9761 = distinct !DILexicalBlock(scope: !9755, file: !162, line: 5627, column: 3)
!9762 = !DILocation(line: 5627, column: 22, scope: !9761)
!9763 = !DILocation(line: 5627, column: 3, scope: !9755)
!9764 = !DILocation(line: 5628, column: 14, scope: !9765)
!9765 = distinct !DILexicalBlock(scope: !9761, file: !162, line: 5627, column: 31)
!9766 = !DILocation(line: 5628, column: 13, scope: !9765)
!9767 = !DILocation(line: 5628, column: 5, scope: !9765)
!9768 = !DILocation(line: 5632, column: 11, scope: !9769)
!9769 = distinct !DILexicalBlock(scope: !9770, file: !162, line: 5632, column: 11)
!9770 = distinct !DILexicalBlock(scope: !9765, file: !162, line: 5628, column: 17)
!9771 = !DILocation(line: 5632, column: 16, scope: !9769)
!9772 = !DILocation(line: 5632, column: 13, scope: !9769)
!9773 = !DILocation(line: 5632, column: 25, scope: !9769)
!9774 = !DILocation(line: 5632, column: 28, scope: !9775)
!9775 = !DILexicalBlockFile(scope: !9769, file: !162, discriminator: 1)
!9776 = !DILocation(line: 5632, column: 34, scope: !9769)
!9777 = !DILocation(line: 5632, column: 11, scope: !9770)
!9778 = !DILocation(line: 5633, column: 11, scope: !9769)
!9779 = !DILocation(line: 5633, column: 14, scope: !9769)
!9780 = !DILocation(line: 5633, column: 9, scope: !9769)
!9781 = !DILocation(line: 5634, column: 7, scope: !9770)
!9782 = !DILocation(line: 5636, column: 15, scope: !9770)
!9783 = !DILocation(line: 5636, column: 14, scope: !9770)
!9784 = !DILocation(line: 5636, column: 9, scope: !9770)
!9785 = !DILocation(line: 5636, column: 12, scope: !9770)
!9786 = !DILocation(line: 5637, column: 5, scope: !9770)
!9787 = !DILocation(line: 5638, column: 3, scope: !9765)
!9788 = !DILocation(line: 5627, column: 27, scope: !9761)
!9789 = !DILocation(line: 5627, column: 3, scope: !9761)
!9790 = !DILocation(line: 5639, column: 7, scope: !9791)
!9791 = distinct !DILexicalBlock(scope: !1380, file: !162, line: 5639, column: 7)
!9792 = !DILocation(line: 5639, column: 12, scope: !9791)
!9793 = !DILocation(line: 5639, column: 9, scope: !9791)
!9794 = !DILocation(line: 5639, column: 21, scope: !9791)
!9795 = !DILocation(line: 5639, column: 24, scope: !9796)
!9796 = !DILexicalBlockFile(scope: !9791, file: !162, discriminator: 1)
!9797 = !DILocation(line: 5639, column: 30, scope: !9791)
!9798 = !DILocation(line: 5639, column: 7, scope: !1380)
!9799 = !DILocation(line: 5640, column: 5, scope: !9791)
!9800 = !DILocation(line: 5641, column: 4, scope: !1380)
!9801 = !DILocation(line: 5641, column: 6, scope: !1380)
!9802 = !DILocation(line: 5642, column: 1, scope: !1380)
!9803 = !DILocation(line: 2100, column: 29, scope: !1387)
!9804 = !DILocation(line: 2101, column: 30, scope: !1387)
!9805 = !DILocation(line: 2102, column: 30, scope: !1387)
!9806 = !DILocation(line: 2103, column: 31, scope: !1387)
!9807 = !DILocation(line: 2105, column: 3, scope: !1387)
!9808 = !DILocation(line: 2105, column: 18, scope: !1387)
!9809 = !DILocation(line: 2105, column: 37, scope: !1387)
!9810 = !DILocation(line: 2105, column: 49, scope: !1387)
!9811 = !DILocation(line: 2105, column: 57, scope: !1387)
!9812 = !DILocation(line: 2105, column: 70, scope: !1387)
!9813 = !DILocation(line: 2105, column: 77, scope: !1387)
!9814 = !DILocation(line: 2106, column: 37, scope: !1387)
!9815 = !DILocation(line: 2106, column: 57, scope: !1387)
!9816 = !DILocation(line: 2106, column: 65, scope: !1387)
!9817 = !DILocation(line: 2106, column: 81, scope: !1387)
!9818 = !DILocation(line: 2106, column: 55, scope: !1387)
!9819 = !DILocation(line: 2106, column: 45, scope: !1387)
!9820 = !DILocation(line: 2105, column: 27, scope: !1387)
!9821 = !DILocation(line: 2107, column: 7, scope: !9822)
!9822 = distinct !DILexicalBlock(scope: !1387, file: !162, line: 2107, column: 7)
!9823 = !DILocation(line: 2107, column: 14, scope: !9822)
!9824 = !DILocation(line: 2107, column: 7, scope: !1387)
!9825 = !DILocation(line: 2108, column: 24, scope: !9826)
!9826 = distinct !DILexicalBlock(scope: !9827, file: !162, line: 2108, column: 9)
!9827 = distinct !DILexicalBlock(scope: !9822, file: !162, line: 2107, column: 33)
!9828 = !DILocation(line: 2108, column: 10, scope: !9826)
!9829 = !DILocation(line: 2108, column: 9, scope: !9827)
!9830 = !DILocation(line: 2109, column: 7, scope: !9826)
!9831 = !DILocation(line: 2110, column: 3, scope: !9827)
!9832 = !DILocation(line: 2111, column: 10, scope: !1387)
!9833 = !DILocation(line: 2111, column: 3, scope: !1387)
!9834 = !DILocation(line: 2112, column: 1, scope: !1387)
!9835 = !DILocation(line: 6381, column: 27, scope: !1730)
!9836 = !DILocation(line: 6382, column: 32, scope: !1730)
!9837 = !DILocation(line: 6383, column: 28, scope: !1730)
!9838 = !DILocation(line: 6384, column: 28, scope: !1730)
!9839 = !DILocation(line: 6386, column: 3, scope: !1730)
!9840 = !DILocation(line: 6386, column: 15, scope: !1730)
!9841 = !DILocation(line: 6386, column: 22, scope: !1730)
!9842 = !DILocation(line: 6386, column: 30, scope: !1730)
!9843 = !DILocation(line: 6387, column: 3, scope: !1730)
!9844 = !DILocation(line: 6387, column: 19, scope: !1730)
!9845 = !DILocation(line: 6387, column: 43, scope: !1730)
!9846 = !DILocation(line: 6387, column: 48, scope: !1730)
!9847 = !DILocation(line: 6387, column: 54, scope: !1730)
!9848 = !DILocation(line: 6387, column: 59, scope: !1730)
!9849 = !DILocation(line: 6387, column: 64, scope: !1730)
!9850 = !DILocation(line: 6387, column: 26, scope: !1730)
!9851 = !DILocation(line: 6388, column: 3, scope: !1730)
!9852 = !DILocation(line: 6388, column: 17, scope: !1730)
!9853 = !DILocation(line: 6390, column: 8, scope: !9854)
!9854 = distinct !DILexicalBlock(scope: !1730, file: !162, line: 6390, column: 7)
!9855 = !DILocation(line: 6390, column: 7, scope: !1730)
!9856 = !DILocation(line: 6391, column: 5, scope: !9854)
!9857 = !DILocation(line: 6392, column: 33, scope: !1730)
!9858 = !DILocation(line: 6392, column: 42, scope: !1730)
!9859 = !DILocation(line: 6392, column: 47, scope: !1730)
!9860 = !DILocation(line: 6392, column: 61, scope: !1730)
!9861 = !DILocation(line: 6392, column: 26, scope: !1730)
!9862 = !DILocation(line: 6392, column: 9, scope: !1730)
!9863 = !DILocation(line: 6392, column: 7, scope: !1730)
!9864 = !DILocation(line: 6393, column: 8, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !1730, file: !162, line: 6393, column: 7)
!9866 = !DILocation(line: 6393, column: 7, scope: !1730)
!9867 = !DILocation(line: 6394, column: 5, scope: !9865)
!9868 = !DILocation(line: 6395, column: 7, scope: !9869)
!9869 = distinct !DILexicalBlock(scope: !1730, file: !162, line: 6395, column: 7)
!9870 = !DILocation(line: 6395, column: 12, scope: !9869)
!9871 = !DILocation(line: 6395, column: 20, scope: !9869)
!9872 = !DILocation(line: 6395, column: 17, scope: !9869)
!9873 = !DILocation(line: 6395, column: 7, scope: !1730)
!9874 = !DILocation(line: 6396, column: 28, scope: !9869)
!9875 = !DILocation(line: 6396, column: 33, scope: !9869)
!9876 = !DILocation(line: 6396, column: 40, scope: !9869)
!9877 = !DILocation(line: 6396, column: 8, scope: !9869)
!9878 = !DILocation(line: 6396, column: 13, scope: !9869)
!9879 = !DILocation(line: 6396, column: 20, scope: !9869)
!9880 = !DILocation(line: 6396, column: 24, scope: !9869)
!9881 = !DILocation(line: 6396, column: 5, scope: !9869)
!9882 = !DILocation(line: 6398, column: 30, scope: !9883)
!9883 = distinct !DILexicalBlock(scope: !9869, file: !162, line: 6397, column: 8)
!9884 = !DILocation(line: 6398, column: 35, scope: !9883)
!9885 = !DILocation(line: 6398, column: 42, scope: !9883)
!9886 = !DILocation(line: 6398, column: 8, scope: !9883)
!9887 = !DILocation(line: 6398, column: 13, scope: !9883)
!9888 = !DILocation(line: 6398, column: 20, scope: !9883)
!9889 = !DILocation(line: 6398, column: 26, scope: !9883)
!9890 = !DILocation(line: 6399, column: 31, scope: !9891)
!9891 = distinct !DILexicalBlock(scope: !9883, file: !162, line: 6399, column: 9)
!9892 = !DILocation(line: 6399, column: 39, scope: !9891)
!9893 = !DILocation(line: 6399, column: 10, scope: !9891)
!9894 = !DILocation(line: 6399, column: 9, scope: !9883)
!9895 = !DILocation(line: 6400, column: 7, scope: !9891)
!9896 = !DILocation(line: 6402, column: 10, scope: !1730)
!9897 = !DILocation(line: 6402, column: 3, scope: !1730)
!9898 = !DILocation(line: 6403, column: 1, scope: !1730)
!9899 = !DILocation(line: 5430, column: 27, scope: !1741)
!9900 = !DILocation(line: 5430, column: 51, scope: !1741)
!9901 = !DILocation(line: 5431, column: 28, scope: !1741)
!9902 = !DILocation(line: 5431, column: 47, scope: !1741)
!9903 = !DILocation(line: 5433, column: 3, scope: !1741)
!9904 = !DILocation(line: 5433, column: 15, scope: !1741)
!9905 = !DILocation(line: 5433, column: 22, scope: !1741)
!9906 = !DILocation(line: 5433, column: 30, scope: !1741)
!9907 = !DILocation(line: 5434, column: 3, scope: !1741)
!9908 = !DILocation(line: 5434, column: 17, scope: !1741)
!9909 = !DILocation(line: 5435, column: 3, scope: !1741)
!9910 = !DILocation(line: 5435, column: 19, scope: !1741)
!9911 = !DILocation(line: 5436, column: 12, scope: !9912)
!9912 = distinct !DILexicalBlock(scope: !1741, file: !162, line: 5436, column: 7)
!9913 = !DILocation(line: 5436, column: 17, scope: !9912)
!9914 = !DILocation(line: 5436, column: 24, scope: !9912)
!9915 = !DILocation(line: 5436, column: 33, scope: !9912)
!9916 = !DILocation(line: 5436, column: 38, scope: !9912)
!9917 = !DILocation(line: 5436, column: 45, scope: !9912)
!9918 = !DILocation(line: 5436, column: 28, scope: !9912)
!9919 = !DILocation(line: 5436, column: 49, scope: !9912)
!9920 = !DILocation(line: 5436, column: 63, scope: !9921)
!9921 = !DILexicalBlockFile(scope: !9912, file: !162, discriminator: 1)
!9922 = !DILocation(line: 5436, column: 68, scope: !9912)
!9923 = !DILocation(line: 5436, column: 53, scope: !9912)
!9924 = !DILocation(line: 5436, column: 7, scope: !1741)
!9925 = !DILocation(line: 5436, column: 9, scope: !9926)
!9926 = !DILexicalBlockFile(scope: !9912, file: !162, discriminator: 4)
!9927 = !DILocation(line: 5436, column: 87, scope: !9928)
!9928 = !DILexicalBlockFile(scope: !9929, file: !162, discriminator: 3)
!9929 = !DILexicalBlockFile(scope: !9912, file: !162, discriminator: 2)
!9930 = !DILocation(line: 5436, column: 92, scope: !9912)
!9931 = !DILocation(line: 5436, column: 99, scope: !9912)
!9932 = !DILocation(line: 5436, column: 103, scope: !9912)
!9933 = !DILocation(line: 5436, column: 106, scope: !9912)
!9934 = !DILocation(line: 5437, column: 5, scope: !9912)
!9935 = !DILocation(line: 5438, column: 27, scope: !1741)
!9936 = !DILocation(line: 5438, column: 32, scope: !1741)
!9937 = !DILocation(line: 5438, column: 38, scope: !1741)
!9938 = !DILocation(line: 5438, column: 43, scope: !1741)
!9939 = !DILocation(line: 5438, column: 50, scope: !1741)
!9940 = !DILocation(line: 5438, column: 10, scope: !1741)
!9941 = !DILocation(line: 5438, column: 8, scope: !1741)
!9942 = !DILocation(line: 5439, column: 8, scope: !9943)
!9943 = distinct !DILexicalBlock(scope: !1741, file: !162, line: 5439, column: 7)
!9944 = !DILocation(line: 5439, column: 7, scope: !1741)
!9945 = !DILocation(line: 5440, column: 5, scope: !9943)
!9946 = !DILocation(line: 5442, column: 3, scope: !1741)
!9947 = !DILocation(line: 5443, column: 31, scope: !1741)
!9948 = !DILocation(line: 5443, column: 40, scope: !1741)
!9949 = !DILocation(line: 5443, column: 45, scope: !1741)
!9950 = !DILocation(line: 5443, column: 59, scope: !1741)
!9951 = !DILocation(line: 5443, column: 24, scope: !1741)
!9952 = !DILocation(line: 5443, column: 8, scope: !1741)
!9953 = !DILocation(line: 5443, column: 6, scope: !1741)
!9954 = !DILocation(line: 5444, column: 8, scope: !9955)
!9955 = distinct !DILexicalBlock(scope: !1741, file: !162, line: 5444, column: 7)
!9956 = !DILocation(line: 5444, column: 7, scope: !1741)
!9957 = !DILocation(line: 5445, column: 5, scope: !9955)
!9958 = !DILocation(line: 5446, column: 7, scope: !1757)
!9959 = !DILocation(line: 5446, column: 11, scope: !1757)
!9960 = !DILocation(line: 5446, column: 19, scope: !1757)
!9961 = !DILocation(line: 5446, column: 16, scope: !1757)
!9962 = !DILocation(line: 5446, column: 7, scope: !1741)
!9963 = !DILocation(line: 5447, column: 28, scope: !1757)
!9964 = !DILocation(line: 5447, column: 33, scope: !1757)
!9965 = !DILocation(line: 5447, column: 40, scope: !1757)
!9966 = !DILocation(line: 5447, column: 8, scope: !1757)
!9967 = !DILocation(line: 5447, column: 13, scope: !1757)
!9968 = !DILocation(line: 5447, column: 20, scope: !1757)
!9969 = !DILocation(line: 5447, column: 24, scope: !1757)
!9970 = !DILocation(line: 5447, column: 5, scope: !1757)
!9971 = !DILocation(line: 5449, column: 30, scope: !1756)
!9972 = !DILocation(line: 5449, column: 35, scope: !1756)
!9973 = !DILocation(line: 5449, column: 42, scope: !1756)
!9974 = !DILocation(line: 5449, column: 8, scope: !1756)
!9975 = !DILocation(line: 5449, column: 13, scope: !1756)
!9976 = !DILocation(line: 5449, column: 20, scope: !1756)
!9977 = !DILocation(line: 5449, column: 26, scope: !1756)
!9978 = !DILocation(line: 5450, column: 11, scope: !1755)
!9979 = !DILocation(line: 5450, column: 19, scope: !1755)
!9980 = !DILocation(line: 5450, column: 10, scope: !1755)
!9981 = !DILocation(line: 5450, column: 9, scope: !1756)
!9982 = !DILocation(line: 5450, column: 9, scope: !9983)
!9983 = !DILexicalBlockFile(scope: !1756, file: !162, discriminator: 1)
!9984 = !DILocation(line: 5452, column: 14, scope: !1754)
!9985 = !DILocation(line: 5452, column: 22, scope: !1754)
!9986 = !DILocation(line: 5453, column: 9, scope: !1754)
!9987 = !DILocation(line: 5453, column: 12, scope: !9988)
!9988 = !DILexicalBlockFile(scope: !1754, file: !162, discriminator: 1)
!9989 = !DILocation(line: 5453, column: 20, scope: !1754)
!9990 = !DILocation(line: 5454, column: 9, scope: !1754)
!9991 = !DILocation(line: 5454, column: 12, scope: !9988)
!9992 = !DILocation(line: 5454, column: 20, scope: !1754)
!9993 = !DILocation(line: 5455, column: 9, scope: !1754)
!9994 = !DILocation(line: 5455, column: 12, scope: !9988)
!9995 = !DILocation(line: 5455, column: 20, scope: !1754)
!9996 = !DILocation(line: 5456, column: 9, scope: !1754)
!9997 = !DILocation(line: 5456, column: 12, scope: !9988)
!9998 = !DILocation(line: 5456, column: 20, scope: !1754)
!9999 = !DILocation(line: 5457, column: 9, scope: !1754)
!10000 = !DILocation(line: 5457, column: 13, scope: !9988)
!10001 = !DILocation(line: 5457, column: 21, scope: !1754)
!10002 = !DILocation(line: 5457, column: 29, scope: !1754)
!10003 = !DILocation(line: 5457, column: 32, scope: !10004)
!10004 = !DILexicalBlockFile(scope: !1754, file: !162, discriminator: 2)
!10005 = !DILocation(line: 5457, column: 40, scope: !1754)
!10006 = !DILocation(line: 5452, column: 14, scope: !1755)
!10007 = !DILocation(line: 5458, column: 11, scope: !10008)
!10008 = distinct !DILexicalBlock(scope: !10009, file: !162, line: 5458, column: 11)
!10009 = distinct !DILexicalBlock(scope: !1754, file: !162, line: 5457, column: 50)
!10010 = !DILocation(line: 5458, column: 19, scope: !10008)
!10011 = !DILocation(line: 5458, column: 11, scope: !10009)
!10012 = !DILocation(line: 5459, column: 23, scope: !10008)
!10013 = !DILocation(line: 5459, column: 28, scope: !10008)
!10014 = !DILocation(line: 5459, column: 9, scope: !10008)
!10015 = !DILocation(line: 5459, column: 13, scope: !10008)
!10016 = !DILocation(line: 5459, column: 20, scope: !10008)
!10017 = !DILocation(line: 5461, column: 39, scope: !10008)
!10018 = !DILocation(line: 5461, column: 48, scope: !10008)
!10019 = !DILocation(line: 5461, column: 53, scope: !10008)
!10020 = !DILocation(line: 5461, column: 63, scope: !10008)
!10021 = !DILocation(line: 5461, column: 68, scope: !10008)
!10022 = !DILocation(line: 5461, column: 32, scope: !10008)
!10023 = !DILocation(line: 5461, column: 22, scope: !10008)
!10024 = !DILocation(line: 5461, column: 9, scope: !10008)
!10025 = !DILocation(line: 5461, column: 13, scope: !10008)
!10026 = !DILocation(line: 5461, column: 20, scope: !10008)
!10027 = !DILocation(line: 5462, column: 7, scope: !10009)
!10028 = !DILocation(line: 5462, column: 11, scope: !10009)
!10029 = !DILocation(line: 5462, column: 17, scope: !10009)
!10030 = !DILocation(line: 5463, column: 5, scope: !10009)
!10031 = !DILocation(line: 5465, column: 7, scope: !1753)
!10032 = !DILocation(line: 5465, column: 11, scope: !1753)
!10033 = !DILocation(line: 5466, column: 14, scope: !1763)
!10034 = !DILocation(line: 5466, column: 12, scope: !1763)
!10035 = !DILocation(line: 5466, column: 24, scope: !10036)
!10036 = !DILexicalBlockFile(scope: !10037, file: !162, discriminator: 2)
!10037 = !DILexicalBlockFile(scope: !1762, file: !162, discriminator: 1)
!10038 = !DILocation(line: 5466, column: 19, scope: !1762)
!10039 = !DILocation(line: 5466, column: 7, scope: !1763)
!10040 = !DILocation(line: 5468, column: 18, scope: !1760)
!10041 = !DILocation(line: 5468, column: 13, scope: !1760)
!10042 = !DILocation(line: 5468, column: 21, scope: !1760)
!10043 = !DILocation(line: 5468, column: 13, scope: !1761)
!10044 = !DILocation(line: 5469, column: 11, scope: !1759)
!10045 = !DILocation(line: 5469, column: 15, scope: !1759)
!10046 = !DILocation(line: 5470, column: 18, scope: !10047)
!10047 = distinct !DILexicalBlock(scope: !1759, file: !162, line: 5470, column: 11)
!10048 = !DILocation(line: 5470, column: 16, scope: !10047)
!10049 = !DILocation(line: 5470, column: 23, scope: !10050)
!10050 = !DILexicalBlockFile(scope: !10051, file: !162, discriminator: 2)
!10051 = !DILexicalBlockFile(scope: !10052, file: !162, discriminator: 1)
!10052 = distinct !DILexicalBlock(scope: !10047, file: !162, line: 5470, column: 11)
!10053 = !DILocation(line: 5470, column: 27, scope: !10052)
!10054 = !DILocation(line: 5470, column: 25, scope: !10052)
!10055 = !DILocation(line: 5470, column: 11, scope: !10047)
!10056 = !DILocation(line: 5471, column: 22, scope: !10057)
!10057 = distinct !DILexicalBlock(scope: !10058, file: !162, line: 5471, column: 17)
!10058 = distinct !DILexicalBlock(scope: !10052, file: !162, line: 5470, column: 35)
!10059 = !DILocation(line: 5471, column: 27, scope: !10057)
!10060 = !DILocation(line: 5471, column: 34, scope: !10057)
!10061 = !DILocation(line: 5471, column: 43, scope: !10057)
!10062 = !DILocation(line: 5471, column: 48, scope: !10057)
!10063 = !DILocation(line: 5471, column: 55, scope: !10057)
!10064 = !DILocation(line: 5471, column: 38, scope: !10057)
!10065 = !DILocation(line: 5471, column: 59, scope: !10057)
!10066 = !DILocation(line: 5471, column: 73, scope: !10067)
!10067 = !DILexicalBlockFile(scope: !10057, file: !162, discriminator: 1)
!10068 = !DILocation(line: 5471, column: 78, scope: !10057)
!10069 = !DILocation(line: 5471, column: 63, scope: !10057)
!10070 = !DILocation(line: 5471, column: 17, scope: !10058)
!10071 = !DILocation(line: 5471, column: 19, scope: !10072)
!10072 = !DILexicalBlockFile(scope: !10057, file: !162, discriminator: 4)
!10073 = !DILocation(line: 5471, column: 123, scope: !10074)
!10074 = !DILexicalBlockFile(scope: !10075, file: !162, discriminator: 3)
!10075 = !DILexicalBlockFile(scope: !10057, file: !162, discriminator: 2)
!10076 = !DILocation(line: 5471, column: 118, scope: !10057)
!10077 = !DILocation(line: 5471, column: 97, scope: !10057)
!10078 = !DILocation(line: 5471, column: 102, scope: !10057)
!10079 = !DILocation(line: 5471, column: 109, scope: !10057)
!10080 = !DILocation(line: 5471, column: 113, scope: !10057)
!10081 = !DILocation(line: 5471, column: 116, scope: !10057)
!10082 = !DILocation(line: 5472, column: 15, scope: !10057)
!10083 = !DILocation(line: 5473, column: 11, scope: !10058)
!10084 = !DILocation(line: 5470, column: 31, scope: !10052)
!10085 = !DILocation(line: 5470, column: 11, scope: !10052)
!10086 = !DILocation(line: 5474, column: 20, scope: !10087)
!10087 = distinct !DILexicalBlock(scope: !1759, file: !162, line: 5474, column: 15)
!10088 = !DILocation(line: 5474, column: 25, scope: !10087)
!10089 = !DILocation(line: 5474, column: 32, scope: !10087)
!10090 = !DILocation(line: 5474, column: 41, scope: !10087)
!10091 = !DILocation(line: 5474, column: 46, scope: !10087)
!10092 = !DILocation(line: 5474, column: 53, scope: !10087)
!10093 = !DILocation(line: 5474, column: 36, scope: !10087)
!10094 = !DILocation(line: 5474, column: 57, scope: !10087)
!10095 = !DILocation(line: 5474, column: 71, scope: !10096)
!10096 = !DILexicalBlockFile(scope: !10087, file: !162, discriminator: 1)
!10097 = !DILocation(line: 5474, column: 76, scope: !10087)
!10098 = !DILocation(line: 5474, column: 61, scope: !10087)
!10099 = !DILocation(line: 5474, column: 15, scope: !1759)
!10100 = !DILocation(line: 5474, column: 17, scope: !10101)
!10101 = !DILexicalBlockFile(scope: !10087, file: !162, discriminator: 4)
!10102 = !DILocation(line: 5474, column: 95, scope: !10103)
!10103 = !DILexicalBlockFile(scope: !10104, file: !162, discriminator: 3)
!10104 = !DILexicalBlockFile(scope: !10087, file: !162, discriminator: 2)
!10105 = !DILocation(line: 5474, column: 100, scope: !10087)
!10106 = !DILocation(line: 5474, column: 107, scope: !10087)
!10107 = !DILocation(line: 5474, column: 111, scope: !10087)
!10108 = !DILocation(line: 5474, column: 114, scope: !10087)
!10109 = !DILocation(line: 5475, column: 13, scope: !10087)
!10110 = !DILocation(line: 5476, column: 41, scope: !1759)
!10111 = !DILocation(line: 5476, column: 50, scope: !1759)
!10112 = !DILocation(line: 5476, column: 55, scope: !1759)
!10113 = !DILocation(line: 5476, column: 68, scope: !1759)
!10114 = !DILocation(line: 5476, column: 73, scope: !1759)
!10115 = !DILocation(line: 5476, column: 80, scope: !1759)
!10116 = !DILocation(line: 5476, column: 34, scope: !1759)
!10117 = !DILocation(line: 5476, column: 24, scope: !1759)
!10118 = !DILocation(line: 5476, column: 11, scope: !1759)
!10119 = !DILocation(line: 5476, column: 15, scope: !1759)
!10120 = !DILocation(line: 5476, column: 22, scope: !1759)
!10121 = !DILocation(line: 5478, column: 15, scope: !10122)
!10122 = distinct !DILexicalBlock(scope: !1759, file: !162, line: 5478, column: 15)
!10123 = !DILocation(line: 5478, column: 19, scope: !10122)
!10124 = !DILocation(line: 5478, column: 27, scope: !10122)
!10125 = !DILocation(line: 5478, column: 38, scope: !10122)
!10126 = !DILocation(line: 5478, column: 43, scope: !10122)
!10127 = !DILocation(line: 5478, column: 50, scope: !10122)
!10128 = !DILocation(line: 5478, column: 32, scope: !10122)
!10129 = !DILocation(line: 5478, column: 15, scope: !1759)
!10130 = !DILocation(line: 5479, column: 38, scope: !10122)
!10131 = !DILocation(line: 5479, column: 43, scope: !10122)
!10132 = !DILocation(line: 5479, column: 50, scope: !10122)
!10133 = !DILocation(line: 5479, column: 16, scope: !10122)
!10134 = !DILocation(line: 5479, column: 21, scope: !10122)
!10135 = !DILocation(line: 5479, column: 28, scope: !10122)
!10136 = !DILocation(line: 5479, column: 34, scope: !10122)
!10137 = !DILocation(line: 5479, column: 13, scope: !10122)
!10138 = !DILocation(line: 5481, column: 36, scope: !10122)
!10139 = !DILocation(line: 5481, column: 41, scope: !10122)
!10140 = !DILocation(line: 5481, column: 48, scope: !10122)
!10141 = !DILocation(line: 5481, column: 16, scope: !10122)
!10142 = !DILocation(line: 5481, column: 21, scope: !10122)
!10143 = !DILocation(line: 5481, column: 28, scope: !10122)
!10144 = !DILocation(line: 5481, column: 32, scope: !10122)
!10145 = !DILocation(line: 5482, column: 11, scope: !1759)
!10146 = !DILocation(line: 5483, column: 9, scope: !1760)
!10147 = !DILocation(line: 5484, column: 7, scope: !1761)
!10148 = !DILocation(line: 5466, column: 29, scope: !1762)
!10149 = !DILocation(line: 5466, column: 7, scope: !1762)
!10150 = !DILocation(line: 5485, column: 5, scope: !1754)
!10151 = !DILocation(line: 5485, column: 5, scope: !9988)
!10152 = !DILocation(line: 5487, column: 10, scope: !1741)
!10153 = !DILocation(line: 5487, column: 3, scope: !1741)
!10154 = !DILocation(line: 5488, column: 1, scope: !1741)
!10155 = !DILocation(line: 6187, column: 31, scope: !1764)
!10156 = !DILocation(line: 6187, column: 53, scope: !1764)
!10157 = !DILocation(line: 6189, column: 3, scope: !1764)
!10158 = !DILocation(line: 6189, column: 11, scope: !10159)
!10159 = !DILexicalBlockFile(scope: !10160, file: !162, discriminator: 2)
!10160 = !DILexicalBlockFile(scope: !1764, file: !162, discriminator: 1)
!10161 = !DILocation(line: 6189, column: 10, scope: !1764)
!10162 = !DILocation(line: 6190, column: 13, scope: !10163)
!10163 = distinct !DILexicalBlock(scope: !10164, file: !162, line: 6190, column: 9)
!10164 = distinct !DILexicalBlock(scope: !1764, file: !162, line: 6189, column: 14)
!10165 = !DILocation(line: 6190, column: 20, scope: !10163)
!10166 = !DILocation(line: 6190, column: 28, scope: !10163)
!10167 = !DILocation(line: 6190, column: 35, scope: !10163)
!10168 = !DILocation(line: 6190, column: 24, scope: !10163)
!10169 = !DILocation(line: 6190, column: 39, scope: !10163)
!10170 = !DILocation(line: 6190, column: 52, scope: !10171)
!10171 = !DILexicalBlockFile(scope: !10163, file: !162, discriminator: 1)
!10172 = !DILocation(line: 6190, column: 43, scope: !10163)
!10173 = !DILocation(line: 6190, column: 9, scope: !10164)
!10174 = !DILocation(line: 6190, column: 11, scope: !10175)
!10175 = !DILexicalBlockFile(scope: !10163, file: !162, discriminator: 4)
!10176 = !DILocation(line: 6190, column: 87, scope: !10177)
!10177 = !DILexicalBlockFile(scope: !10178, file: !162, discriminator: 3)
!10178 = !DILexicalBlockFile(scope: !10163, file: !162, discriminator: 2)
!10179 = !DILocation(line: 6190, column: 86, scope: !10163)
!10180 = !DILocation(line: 6190, column: 70, scope: !10163)
!10181 = !DILocation(line: 6190, column: 77, scope: !10163)
!10182 = !DILocation(line: 6190, column: 81, scope: !10163)
!10183 = !DILocation(line: 6190, column: 84, scope: !10163)
!10184 = !DILocation(line: 6191, column: 7, scope: !10163)
!10185 = !DILocation(line: 6192, column: 6, scope: !10164)
!10186 = !DILocation(line: 6194, column: 10, scope: !1764)
!10187 = !DILocation(line: 6194, column: 16, scope: !1764)
!10188 = !DILocation(line: 6194, column: 3, scope: !1764)
!10189 = !DILocation(line: 6195, column: 1, scope: !1764)
!10190 = !DILocation(line: 6145, column: 25, scope: !1770)
!10191 = !DILocation(line: 6145, column: 47, scope: !1770)
!10192 = !DILocation(line: 6146, column: 24, scope: !1770)
!10193 = !DILocation(line: 6146, column: 41, scope: !1770)
!10194 = !DILocation(line: 6148, column: 8, scope: !10195)
!10195 = distinct !DILexicalBlock(scope: !1770, file: !162, line: 6148, column: 7)
!10196 = !DILocation(line: 6148, column: 14, scope: !10195)
!10197 = !DILocation(line: 6148, column: 18, scope: !10195)
!10198 = !DILocation(line: 6148, column: 31, scope: !10199)
!10199 = !DILexicalBlockFile(scope: !10195, file: !162, discriminator: 1)
!10200 = !DILocation(line: 6148, column: 22, scope: !10195)
!10201 = !DILocation(line: 6148, column: 7, scope: !1770)
!10202 = !DILocation(line: 6149, column: 5, scope: !10195)
!10203 = !DILocation(line: 6150, column: 3, scope: !1770)
!10204 = !DILocation(line: 6151, column: 8, scope: !10205)
!10205 = distinct !DILexicalBlock(scope: !10206, file: !162, line: 6150, column: 12)
!10206 = distinct !DILexicalBlock(scope: !10207, file: !162, line: 6150, column: 3)
!10207 = distinct !DILexicalBlock(scope: !1770, file: !162, line: 6150, column: 3)
!10208 = !DILocation(line: 6151, column: 14, scope: !10205)
!10209 = !DILocation(line: 6151, column: 27, scope: !10205)
!10210 = !DILocation(line: 6151, column: 38, scope: !10205)
!10211 = !DILocation(line: 6151, column: 55, scope: !10205)
!10212 = !DILocation(line: 6151, column: 61, scope: !10205)
!10213 = !DILocation(line: 6151, column: 76, scope: !10205)
!10214 = !DILocation(line: 6151, column: 82, scope: !10205)
!10215 = !DILocation(line: 6151, column: 6, scope: !10205)
!10216 = !DILocation(line: 6152, column: 9, scope: !10217)
!10217 = distinct !DILexicalBlock(scope: !10205, file: !162, line: 6152, column: 9)
!10218 = !DILocation(line: 6152, column: 16, scope: !10217)
!10219 = !DILocation(line: 6152, column: 13, scope: !10217)
!10220 = !DILocation(line: 6152, column: 9, scope: !10205)
!10221 = !DILocation(line: 6153, column: 7, scope: !10217)
!10222 = !DILocation(line: 6154, column: 19, scope: !10223)
!10223 = distinct !DILexicalBlock(scope: !10205, file: !162, line: 6154, column: 9)
!10224 = !DILocation(line: 6154, column: 10, scope: !10223)
!10225 = !DILocation(line: 6154, column: 9, scope: !10205)
!10226 = !DILocation(line: 6155, column: 7, scope: !10223)
!10227 = !DILocation(line: 6150, column: 3, scope: !10206)
!10228 = !DILocation(line: 6157, column: 10, scope: !1770)
!10229 = !DILocation(line: 6157, column: 16, scope: !1770)
!10230 = !DILocation(line: 6157, column: 3, scope: !1770)
!10231 = !DILocation(line: 6158, column: 1, scope: !1770)
!10232 = !DILocation(line: 5356, column: 31, scope: !1776)
!10233 = !DILocation(line: 5356, column: 51, scope: !1776)
!10234 = !DILocation(line: 5356, column: 67, scope: !1776)
!10235 = !DILocation(line: 5357, column: 26, scope: !1776)
!10236 = !DILocation(line: 5357, column: 48, scope: !1776)
!10237 = !DILocation(line: 5357, column: 66, scope: !1776)
!10238 = !DILocation(line: 5359, column: 3, scope: !1776)
!10239 = !DILocation(line: 5359, column: 22, scope: !1776)
!10240 = !DILocation(line: 5360, column: 7, scope: !1789)
!10241 = !DILocation(line: 5360, column: 13, scope: !1789)
!10242 = !DILocation(line: 5360, column: 16, scope: !10243)
!10243 = !DILexicalBlockFile(scope: !1789, file: !162, discriminator: 1)
!10244 = !DILocation(line: 5360, column: 7, scope: !1776)
!10245 = !DILocation(line: 5363, column: 5, scope: !1788)
!10246 = !DILocation(line: 5363, column: 9, scope: !1788)
!10247 = !DILocation(line: 5364, column: 12, scope: !10248)
!10248 = distinct !DILexicalBlock(scope: !1788, file: !162, line: 5364, column: 5)
!10249 = !DILocation(line: 5364, column: 10, scope: !10248)
!10250 = !DILocation(line: 5364, column: 17, scope: !10251)
!10251 = !DILexicalBlockFile(scope: !10252, file: !162, discriminator: 2)
!10252 = !DILexicalBlockFile(scope: !10253, file: !162, discriminator: 1)
!10253 = distinct !DILexicalBlock(scope: !10248, file: !162, line: 5364, column: 5)
!10254 = !DILocation(line: 5364, column: 21, scope: !10253)
!10255 = !DILocation(line: 5364, column: 27, scope: !10253)
!10256 = !DILocation(line: 5364, column: 19, scope: !10253)
!10257 = !DILocation(line: 5364, column: 5, scope: !10248)
!10258 = !DILocation(line: 5365, column: 11, scope: !10259)
!10259 = distinct !DILexicalBlock(scope: !10253, file: !162, line: 5365, column: 11)
!10260 = !DILocation(line: 5365, column: 38, scope: !10259)
!10261 = !DILocation(line: 5365, column: 20, scope: !10259)
!10262 = !DILocation(line: 5365, column: 26, scope: !10259)
!10263 = !DILocation(line: 5365, column: 41, scope: !10259)
!10264 = !DILocation(line: 5365, column: 17, scope: !10259)
!10265 = !DILocation(line: 5365, column: 11, scope: !10253)
!10266 = !DILocation(line: 5366, column: 9, scope: !10259)
!10267 = !DILocation(line: 5365, column: 41, scope: !10268)
!10268 = !DILexicalBlockFile(scope: !10259, file: !162, discriminator: 1)
!10269 = !DILocation(line: 5364, column: 42, scope: !10253)
!10270 = !DILocation(line: 5364, column: 5, scope: !10253)
!10271 = !DILocation(line: 5367, column: 9, scope: !10272)
!10272 = distinct !DILexicalBlock(scope: !1788, file: !162, line: 5367, column: 9)
!10273 = !DILocation(line: 5367, column: 14, scope: !10272)
!10274 = !DILocation(line: 5367, column: 18, scope: !10275)
!10275 = !DILexicalBlockFile(scope: !10272, file: !162, discriminator: 1)
!10276 = !DILocation(line: 5367, column: 24, scope: !10272)
!10277 = !DILocation(line: 5367, column: 18, scope: !10272)
!10278 = !DILocation(line: 5367, column: 30, scope: !10272)
!10279 = !DILocation(line: 5367, column: 34, scope: !10280)
!10280 = !DILexicalBlockFile(scope: !10272, file: !162, discriminator: 2)
!10281 = !DILocation(line: 5367, column: 41, scope: !10272)
!10282 = !DILocation(line: 5367, column: 34, scope: !10272)
!10283 = !DILocation(line: 5367, column: 9, scope: !1788)
!10284 = !DILocation(line: 5368, column: 21, scope: !10272)
!10285 = !DILocation(line: 5368, column: 7, scope: !10272)
!10286 = !DILocation(line: 5368, column: 13, scope: !10272)
!10287 = !DILocation(line: 5368, column: 19, scope: !10272)
!10288 = !DILocation(line: 5369, column: 3, scope: !1789)
!10289 = !DILocation(line: 5369, column: 3, scope: !10243)
!10290 = !DILocation(line: 5369, column: 3, scope: !1788)
!10291 = !DILocation(line: 5370, column: 7, scope: !1794)
!10292 = !DILocation(line: 5370, column: 13, scope: !1794)
!10293 = !DILocation(line: 5370, column: 29, scope: !1794)
!10294 = !DILocation(line: 5370, column: 35, scope: !1794)
!10295 = !DILocation(line: 5370, column: 26, scope: !1794)
!10296 = !DILocation(line: 5370, column: 7, scope: !1776)
!10297 = !DILocation(line: 5371, column: 9, scope: !1792)
!10298 = !DILocation(line: 5371, column: 15, scope: !1792)
!10299 = !DILocation(line: 5371, column: 32, scope: !1792)
!10300 = !DILocation(line: 5371, column: 9, scope: !1793)
!10301 = !DILocation(line: 5372, column: 7, scope: !10302)
!10302 = distinct !DILexicalBlock(scope: !1792, file: !162, line: 5371, column: 38)
!10303 = !DILocation(line: 5372, column: 13, scope: !10302)
!10304 = !DILocation(line: 5372, column: 30, scope: !10302)
!10305 = !DILocation(line: 5373, column: 49, scope: !10302)
!10306 = !DILocation(line: 5373, column: 57, scope: !10302)
!10307 = !DILocation(line: 5373, column: 63, scope: !10302)
!10308 = !DILocation(line: 5373, column: 75, scope: !10302)
!10309 = !DILocation(line: 5373, column: 81, scope: !10302)
!10310 = !DILocation(line: 5373, column: 98, scope: !10302)
!10311 = !DILocation(line: 5373, column: 27, scope: !10302)
!10312 = !DILocation(line: 5373, column: 7, scope: !10302)
!10313 = !DILocation(line: 5373, column: 13, scope: !10302)
!10314 = !DILocation(line: 5373, column: 25, scope: !10302)
!10315 = !DILocation(line: 5375, column: 12, scope: !10316)
!10316 = distinct !DILexicalBlock(scope: !10302, file: !162, line: 5375, column: 11)
!10317 = !DILocation(line: 5375, column: 18, scope: !10316)
!10318 = !DILocation(line: 5375, column: 11, scope: !10302)
!10319 = !DILocation(line: 5376, column: 9, scope: !10316)
!10320 = !DILocation(line: 5377, column: 5, scope: !10302)
!10321 = !DILocation(line: 5379, column: 7, scope: !1791)
!10322 = !DILocation(line: 5379, column: 26, scope: !1791)
!10323 = !DILocation(line: 5380, column: 7, scope: !1791)
!10324 = !DILocation(line: 5380, column: 11, scope: !1791)
!10325 = !DILocation(line: 5380, column: 19, scope: !1791)
!10326 = !DILocation(line: 5380, column: 25, scope: !1791)
!10327 = !DILocation(line: 5380, column: 42, scope: !1791)
!10328 = !DILocation(line: 5382, column: 10, scope: !1791)
!10329 = !DILocation(line: 5382, column: 18, scope: !1791)
!10330 = !DILocation(line: 5382, column: 24, scope: !1791)
!10331 = !DILocation(line: 5382, column: 37, scope: !1791)
!10332 = !DILocation(line: 5382, column: 43, scope: !1791)
!10333 = !DILocation(line: 5382, column: 36, scope: !1791)
!10334 = !DILocation(line: 5382, column: 58, scope: !1791)
!10335 = !DILocation(line: 5382, column: 64, scope: !1791)
!10336 = !DILocation(line: 5381, column: 14, scope: !1791)
!10337 = !DILocation(line: 5381, column: 12, scope: !1791)
!10338 = !DILocation(line: 5383, column: 11, scope: !10339)
!10339 = distinct !DILexicalBlock(scope: !1791, file: !162, line: 5383, column: 11)
!10340 = !DILocation(line: 5383, column: 16, scope: !10339)
!10341 = !DILocation(line: 5383, column: 11, scope: !1791)
!10342 = !DILocation(line: 5384, column: 9, scope: !10339)
!10343 = !DILocation(line: 5385, column: 32, scope: !1791)
!10344 = !DILocation(line: 5385, column: 7, scope: !1791)
!10345 = !DILocation(line: 5385, column: 13, scope: !1791)
!10346 = !DILocation(line: 5385, column: 30, scope: !1791)
!10347 = !DILocation(line: 5386, column: 27, scope: !1791)
!10348 = !DILocation(line: 5386, column: 7, scope: !1791)
!10349 = !DILocation(line: 5386, column: 13, scope: !1791)
!10350 = !DILocation(line: 5386, column: 25, scope: !1791)
!10351 = !DILocation(line: 5387, column: 5, scope: !1792)
!10352 = !DILocation(line: 5387, column: 5, scope: !10353)
!10353 = !DILexicalBlockFile(scope: !1792, file: !162, discriminator: 1)
!10354 = !DILocation(line: 5388, column: 3, scope: !1793)
!10355 = !DILocation(line: 5389, column: 9, scope: !1776)
!10356 = !DILocation(line: 5389, column: 15, scope: !1776)
!10357 = !DILocation(line: 5389, column: 29, scope: !1776)
!10358 = !DILocation(line: 5389, column: 35, scope: !1776)
!10359 = !DILocation(line: 5389, column: 27, scope: !1776)
!10360 = !DILocation(line: 5389, column: 7, scope: !1776)
!10361 = !DILocation(line: 5390, column: 13, scope: !1776)
!10362 = !DILocation(line: 5390, column: 3, scope: !1776)
!10363 = !DILocation(line: 5390, column: 8, scope: !1776)
!10364 = !DILocation(line: 5390, column: 11, scope: !1776)
!10365 = !DILocation(line: 5391, column: 16, scope: !1776)
!10366 = !DILocation(line: 5391, column: 3, scope: !1776)
!10367 = !DILocation(line: 5391, column: 8, scope: !1776)
!10368 = !DILocation(line: 5391, column: 14, scope: !1776)
!10369 = !DILocation(line: 5392, column: 18, scope: !1776)
!10370 = !DILocation(line: 5392, column: 3, scope: !1776)
!10371 = !DILocation(line: 5392, column: 8, scope: !1776)
!10372 = !DILocation(line: 5392, column: 16, scope: !1776)
!10373 = !DILocation(line: 5393, column: 8, scope: !10374)
!10374 = distinct !DILexicalBlock(scope: !1776, file: !162, line: 5393, column: 7)
!10375 = !DILocation(line: 5393, column: 7, scope: !1776)
!10376 = !DILocation(line: 5394, column: 5, scope: !10374)
!10377 = !DILocation(line: 5394, column: 12, scope: !10374)
!10378 = !DILocation(line: 5394, column: 27, scope: !10374)
!10379 = !DILocation(line: 5395, column: 3, scope: !1776)
!10380 = !DILocation(line: 5395, column: 9, scope: !1776)
!10381 = !DILocation(line: 5395, column: 22, scope: !1776)
!10382 = !DILocation(line: 5396, column: 3, scope: !1776)
!10383 = !DILocation(line: 5397, column: 1, scope: !1776)
!10384 = !DILocation(line: 6210, column: 23, scope: !1796)
!10385 = !DILocation(line: 6212, column: 7, scope: !1805)
!10386 = !DILocation(line: 6212, column: 13, scope: !1805)
!10387 = !DILocation(line: 6212, column: 7, scope: !1796)
!10388 = !DILocation(line: 6213, column: 9, scope: !10389)
!10389 = distinct !DILexicalBlock(scope: !1804, file: !162, line: 6213, column: 9)
!10390 = !DILocation(line: 6213, column: 15, scope: !10389)
!10391 = !DILocation(line: 6213, column: 21, scope: !10389)
!10392 = !DILocation(line: 6213, column: 9, scope: !1804)
!10393 = !DILocation(line: 6214, column: 22, scope: !10394)
!10394 = distinct !DILexicalBlock(scope: !10389, file: !162, line: 6213, column: 27)
!10395 = !DILocation(line: 6214, column: 28, scope: !10394)
!10396 = !DILocation(line: 6214, column: 7, scope: !10394)
!10397 = !DILocation(line: 6214, column: 13, scope: !10394)
!10398 = !DILocation(line: 6214, column: 20, scope: !10394)
!10399 = !DILocation(line: 6215, column: 26, scope: !10394)
!10400 = !DILocation(line: 6215, column: 32, scope: !10394)
!10401 = !DILocation(line: 6215, column: 44, scope: !10394)
!10402 = !DILocation(line: 6215, column: 7, scope: !10394)
!10403 = !DILocation(line: 6215, column: 13, scope: !10394)
!10404 = !DILocation(line: 6215, column: 24, scope: !10394)
!10405 = !DILocation(line: 6216, column: 7, scope: !10394)
!10406 = !DILocation(line: 6216, column: 13, scope: !10394)
!10407 = !DILocation(line: 6216, column: 21, scope: !10394)
!10408 = !DILocation(line: 6216, column: 26, scope: !10394)
!10409 = !DILocation(line: 6217, column: 21, scope: !10394)
!10410 = !DILocation(line: 6217, column: 27, scope: !10394)
!10411 = !DILocation(line: 6217, column: 35, scope: !10394)
!10412 = !DILocation(line: 6217, column: 7, scope: !10394)
!10413 = !DILocation(line: 6217, column: 13, scope: !10394)
!10414 = !DILocation(line: 6217, column: 19, scope: !10394)
!10415 = !DILocation(line: 6218, column: 19, scope: !10394)
!10416 = !DILocation(line: 6218, column: 25, scope: !10394)
!10417 = !DILocation(line: 6218, column: 33, scope: !10394)
!10418 = !DILocation(line: 6218, column: 39, scope: !10394)
!10419 = !DILocation(line: 6218, column: 47, scope: !10394)
!10420 = !{!2774, !2400, i64 8}
!10421 = !DILocation(line: 6218, column: 31, scope: !10394)
!10422 = !DILocation(line: 6218, column: 7, scope: !10394)
!10423 = !DILocation(line: 6218, column: 13, scope: !10394)
!10424 = !DILocation(line: 6218, column: 17, scope: !10394)
!10425 = !DILocation(line: 6219, column: 19, scope: !10394)
!10426 = !DILocation(line: 6219, column: 25, scope: !10394)
!10427 = !DILocation(line: 6219, column: 7, scope: !10394)
!10428 = !DILocation(line: 6219, column: 13, scope: !10394)
!10429 = !DILocation(line: 6219, column: 17, scope: !10394)
!10430 = !DILocation(line: 6220, column: 7, scope: !10394)
!10431 = !DILocation(line: 6222, column: 9, scope: !1803)
!10432 = !DILocation(line: 6222, column: 15, scope: !1803)
!10433 = !DILocation(line: 6222, column: 21, scope: !1803)
!10434 = !DILocation(line: 6222, column: 27, scope: !1803)
!10435 = !DILocation(line: 6222, column: 19, scope: !1803)
!10436 = !DILocation(line: 6222, column: 35, scope: !1803)
!10437 = !DILocation(line: 6222, column: 41, scope: !1803)
!10438 = !DILocation(line: 6222, column: 53, scope: !1803)
!10439 = !DILocation(line: 6222, column: 33, scope: !1803)
!10440 = !DILocation(line: 6222, column: 9, scope: !1804)
!10441 = !DILocation(line: 6223, column: 7, scope: !1802)
!10442 = !DILocation(line: 6223, column: 14, scope: !1802)
!10443 = !DILocation(line: 6223, column: 20, scope: !1802)
!10444 = !DILocation(line: 6223, column: 26, scope: !1802)
!10445 = !DILocation(line: 6223, column: 38, scope: !1802)
!10446 = !DILocation(line: 6224, column: 32, scope: !1802)
!10447 = !DILocation(line: 6224, column: 38, scope: !1802)
!10448 = !DILocation(line: 6224, column: 7, scope: !1802)
!10449 = !DILocation(line: 6224, column: 13, scope: !1802)
!10450 = !DILocation(line: 6224, column: 25, scope: !1802)
!10451 = !DILocation(line: 6224, column: 30, scope: !1802)
!10452 = !DILocation(line: 6225, column: 22, scope: !1802)
!10453 = !DILocation(line: 6225, column: 28, scope: !1802)
!10454 = !DILocation(line: 6225, column: 7, scope: !1802)
!10455 = !DILocation(line: 6225, column: 13, scope: !1802)
!10456 = !DILocation(line: 6225, column: 20, scope: !1802)
!10457 = !DILocation(line: 6226, column: 26, scope: !1802)
!10458 = !DILocation(line: 6226, column: 7, scope: !1802)
!10459 = !DILocation(line: 6226, column: 13, scope: !1802)
!10460 = !DILocation(line: 6226, column: 24, scope: !1802)
!10461 = !DILocation(line: 6227, column: 14, scope: !1802)
!10462 = !DILocation(line: 6227, column: 20, scope: !1802)
!10463 = !DILocation(line: 6227, column: 28, scope: !1802)
!10464 = !DILocation(line: 6227, column: 7, scope: !1802)
!10465 = !DILocation(line: 6227, column: 31, scope: !1802)
!10466 = !DILocation(line: 6227, column: 37, scope: !1802)
!10467 = !DILocation(line: 6228, column: 15, scope: !1802)
!10468 = !DILocation(line: 6228, column: 21, scope: !1802)
!10469 = !DILocation(line: 6228, column: 27, scope: !1802)
!10470 = !DILocation(line: 6228, column: 33, scope: !1802)
!10471 = !DILocation(line: 6228, column: 25, scope: !1802)
!10472 = !DILocation(line: 6228, column: 40, scope: !1802)
!10473 = !DILocation(line: 6229, column: 19, scope: !1802)
!10474 = !DILocation(line: 6229, column: 25, scope: !1802)
!10475 = !DILocation(line: 6229, column: 33, scope: !1802)
!10476 = !DILocation(line: 6229, column: 38, scope: !1802)
!10477 = !DILocation(line: 6229, column: 44, scope: !1802)
!10478 = !DILocation(line: 6229, column: 50, scope: !1802)
!10479 = !DILocation(line: 6229, column: 56, scope: !1802)
!10480 = !DILocation(line: 6229, column: 48, scope: !1802)
!10481 = !DILocation(line: 6229, column: 35, scope: !1802)
!10482 = !DILocation(line: 6229, column: 7, scope: !1802)
!10483 = !DILocation(line: 6229, column: 13, scope: !1802)
!10484 = !DILocation(line: 6229, column: 17, scope: !1802)
!10485 = !DILocation(line: 6230, column: 21, scope: !1802)
!10486 = !DILocation(line: 6230, column: 27, scope: !1802)
!10487 = !DILocation(line: 6230, column: 35, scope: !1802)
!10488 = !DILocation(line: 6230, column: 7, scope: !1802)
!10489 = !DILocation(line: 6230, column: 13, scope: !1802)
!10490 = !DILocation(line: 6230, column: 19, scope: !1802)
!10491 = !DILocation(line: 6231, column: 19, scope: !1802)
!10492 = !DILocation(line: 6231, column: 25, scope: !1802)
!10493 = !DILocation(line: 6231, column: 33, scope: !1802)
!10494 = !DILocation(line: 6231, column: 39, scope: !1802)
!10495 = !DILocation(line: 6231, column: 47, scope: !1802)
!10496 = !DILocation(line: 6231, column: 31, scope: !1802)
!10497 = !DILocation(line: 6231, column: 7, scope: !1802)
!10498 = !DILocation(line: 6231, column: 13, scope: !1802)
!10499 = !DILocation(line: 6231, column: 17, scope: !1802)
!10500 = !DILocation(line: 6232, column: 7, scope: !1802)
!10501 = !DILocation(line: 6233, column: 5, scope: !1803)
!10502 = !DILocation(line: 6234, column: 3, scope: !1804)
!10503 = !DILocation(line: 6235, column: 7, scope: !1808)
!10504 = !DILocation(line: 6235, column: 13, scope: !1808)
!10505 = !DILocation(line: 6235, column: 20, scope: !1808)
!10506 = !DILocation(line: 6235, column: 23, scope: !10507)
!10507 = !DILexicalBlockFile(scope: !1808, file: !162, discriminator: 1)
!10508 = !DILocation(line: 6235, column: 29, scope: !1808)
!10509 = !DILocation(line: 6235, column: 38, scope: !1808)
!10510 = !DILocation(line: 6235, column: 44, scope: !1808)
!10511 = !DILocation(line: 6235, column: 52, scope: !1808)
!10512 = !DILocation(line: 6235, column: 35, scope: !1808)
!10513 = !DILocation(line: 6235, column: 7, scope: !1796)
!10514 = !DILocation(line: 6236, column: 5, scope: !1807)
!10515 = !DILocation(line: 6236, column: 9, scope: !1807)
!10516 = !DILocation(line: 6236, column: 27, scope: !1807)
!10517 = !DILocation(line: 6236, column: 33, scope: !1807)
!10518 = !DILocation(line: 6236, column: 39, scope: !1807)
!10519 = !DILocation(line: 6236, column: 45, scope: !1807)
!10520 = !DILocation(line: 6236, column: 37, scope: !1807)
!10521 = !DILocation(line: 6236, column: 21, scope: !1807)
!10522 = !DILocation(line: 6236, column: 51, scope: !1807)
!10523 = !DILocation(line: 6237, column: 5, scope: !1807)
!10524 = !DILocation(line: 6237, column: 12, scope: !1807)
!10525 = !DILocation(line: 6238, column: 7, scope: !1807)
!10526 = !DILocation(line: 6238, column: 13, scope: !1807)
!10527 = !DILocation(line: 6238, column: 18, scope: !1807)
!10528 = !DILocation(line: 6238, column: 30, scope: !1807)
!10529 = !DILocation(line: 6238, column: 36, scope: !1807)
!10530 = !DILocation(line: 6240, column: 33, scope: !1807)
!10531 = !DILocation(line: 6240, column: 43, scope: !1807)
!10532 = !DILocation(line: 6240, column: 31, scope: !1807)
!10533 = !DILocation(line: 6237, column: 19, scope: !1807)
!10534 = !DILocation(line: 6241, column: 9, scope: !10535)
!10535 = distinct !DILexicalBlock(scope: !1807, file: !162, line: 6241, column: 9)
!10536 = !DILocation(line: 6241, column: 14, scope: !10535)
!10537 = !DILocation(line: 6241, column: 9, scope: !1807)
!10538 = !DILocation(line: 6242, column: 7, scope: !10535)
!10539 = !DILocation(line: 6243, column: 20, scope: !1807)
!10540 = !DILocation(line: 6243, column: 5, scope: !1807)
!10541 = !DILocation(line: 6243, column: 11, scope: !1807)
!10542 = !DILocation(line: 6243, column: 18, scope: !1807)
!10543 = !DILocation(line: 6244, column: 26, scope: !1807)
!10544 = !DILocation(line: 6244, column: 5, scope: !1807)
!10545 = !DILocation(line: 6244, column: 11, scope: !1807)
!10546 = !DILocation(line: 6244, column: 19, scope: !1807)
!10547 = !DILocation(line: 6244, column: 24, scope: !1807)
!10548 = !DILocation(line: 6245, column: 17, scope: !1807)
!10549 = !DILocation(line: 6245, column: 23, scope: !1807)
!10550 = !DILocation(line: 6245, column: 31, scope: !1807)
!10551 = !DILocation(line: 6245, column: 36, scope: !1807)
!10552 = !DILocation(line: 6245, column: 42, scope: !1807)
!10553 = !DILocation(line: 6245, column: 48, scope: !1807)
!10554 = !DILocation(line: 6245, column: 54, scope: !1807)
!10555 = !DILocation(line: 6245, column: 46, scope: !1807)
!10556 = !DILocation(line: 6245, column: 33, scope: !1807)
!10557 = !DILocation(line: 6245, column: 5, scope: !1807)
!10558 = !DILocation(line: 6245, column: 11, scope: !1807)
!10559 = !DILocation(line: 6245, column: 15, scope: !1807)
!10560 = !DILocation(line: 6246, column: 19, scope: !1807)
!10561 = !DILocation(line: 6246, column: 25, scope: !1807)
!10562 = !DILocation(line: 6246, column: 33, scope: !1807)
!10563 = !DILocation(line: 6246, column: 5, scope: !1807)
!10564 = !DILocation(line: 6246, column: 11, scope: !1807)
!10565 = !DILocation(line: 6246, column: 17, scope: !1807)
!10566 = !DILocation(line: 6247, column: 17, scope: !1807)
!10567 = !DILocation(line: 6247, column: 23, scope: !1807)
!10568 = !DILocation(line: 6247, column: 31, scope: !1807)
!10569 = !DILocation(line: 6247, column: 29, scope: !1807)
!10570 = !DILocation(line: 6247, column: 5, scope: !1807)
!10571 = !DILocation(line: 6247, column: 11, scope: !1807)
!10572 = !DILocation(line: 6247, column: 15, scope: !1807)
!10573 = !DILocation(line: 6248, column: 3, scope: !1808)
!10574 = !DILocation(line: 6248, column: 3, scope: !10507)
!10575 = !DILocation(line: 6248, column: 3, scope: !1807)
!10576 = !DILocation(line: 6250, column: 5, scope: !1811)
!10577 = !DILocation(line: 6250, column: 12, scope: !1811)
!10578 = !DILocation(line: 6251, column: 5, scope: !1811)
!10579 = !DILocation(line: 6251, column: 9, scope: !1811)
!10580 = !DILocation(line: 6251, column: 27, scope: !1811)
!10581 = !DILocation(line: 6251, column: 33, scope: !1811)
!10582 = !DILocation(line: 6251, column: 39, scope: !1811)
!10583 = !DILocation(line: 6251, column: 45, scope: !1811)
!10584 = !DILocation(line: 6251, column: 37, scope: !1811)
!10585 = !DILocation(line: 6251, column: 21, scope: !1811)
!10586 = !DILocation(line: 6252, column: 9, scope: !10587)
!10587 = distinct !DILexicalBlock(scope: !1811, file: !162, line: 6252, column: 9)
!10588 = !DILocation(line: 6252, column: 19, scope: !10587)
!10589 = !DILocation(line: 6252, column: 9, scope: !1811)
!10590 = !DILocation(line: 6253, column: 17, scope: !10587)
!10591 = !DILocation(line: 6253, column: 7, scope: !10587)
!10592 = !DILocation(line: 6255, column: 17, scope: !10587)
!10593 = !DILocation(line: 6256, column: 20, scope: !1811)
!10594 = !DILocation(line: 6256, column: 26, scope: !1811)
!10595 = !DILocation(line: 6256, column: 31, scope: !1811)
!10596 = !DILocation(line: 6257, column: 43, scope: !1811)
!10597 = !DILocation(line: 6257, column: 53, scope: !1811)
!10598 = !DILocation(line: 6257, column: 41, scope: !1811)
!10599 = !DILocation(line: 6256, column: 11, scope: !1811)
!10600 = !DILocation(line: 6256, column: 9, scope: !1811)
!10601 = !DILocation(line: 6258, column: 10, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !1811, file: !162, line: 6258, column: 9)
!10603 = !DILocation(line: 6258, column: 9, scope: !1811)
!10604 = !DILocation(line: 6259, column: 7, scope: !10602)
!10605 = !DILocation(line: 6260, column: 17, scope: !1811)
!10606 = !DILocation(line: 6260, column: 5, scope: !1811)
!10607 = !DILocation(line: 6260, column: 10, scope: !1811)
!10608 = !DILocation(line: 6260, column: 15, scope: !1811)
!10609 = !DILocation(line: 6261, column: 17, scope: !1811)
!10610 = !DILocation(line: 6261, column: 23, scope: !1811)
!10611 = !DILocation(line: 6261, column: 5, scope: !1811)
!10612 = !DILocation(line: 6261, column: 10, scope: !1811)
!10613 = !DILocation(line: 6261, column: 15, scope: !1811)
!10614 = !DILocation(line: 6262, column: 20, scope: !1811)
!10615 = !DILocation(line: 6262, column: 5, scope: !1811)
!10616 = !DILocation(line: 6262, column: 11, scope: !1811)
!10617 = !DILocation(line: 6262, column: 18, scope: !1811)
!10618 = !DILocation(line: 6263, column: 9, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !1811, file: !162, line: 6263, column: 9)
!10620 = !DILocation(line: 6263, column: 15, scope: !10619)
!10621 = !DILocation(line: 6263, column: 22, scope: !10619)
!10622 = !DILocation(line: 6263, column: 28, scope: !10619)
!10623 = !DILocation(line: 6263, column: 19, scope: !10619)
!10624 = !DILocation(line: 6263, column: 9, scope: !1811)
!10625 = !DILocation(line: 6264, column: 14, scope: !10619)
!10626 = !DILocation(line: 6264, column: 19, scope: !10619)
!10627 = !DILocation(line: 6264, column: 7, scope: !10619)
!10628 = !DILocation(line: 6264, column: 22, scope: !10619)
!10629 = !DILocation(line: 6264, column: 28, scope: !10619)
!10630 = !DILocation(line: 6265, column: 15, scope: !10619)
!10631 = !DILocation(line: 6265, column: 21, scope: !10619)
!10632 = !DILocation(line: 6265, column: 27, scope: !10619)
!10633 = !DILocation(line: 6265, column: 33, scope: !10619)
!10634 = !DILocation(line: 6265, column: 25, scope: !10619)
!10635 = !DILocation(line: 6265, column: 40, scope: !10619)
!10636 = !DILocation(line: 6266, column: 17, scope: !1811)
!10637 = !DILocation(line: 6266, column: 22, scope: !1811)
!10638 = !DILocation(line: 6266, column: 27, scope: !1811)
!10639 = !DILocation(line: 6266, column: 33, scope: !1811)
!10640 = !DILocation(line: 6266, column: 39, scope: !1811)
!10641 = !DILocation(line: 6266, column: 45, scope: !1811)
!10642 = !DILocation(line: 6266, column: 37, scope: !1811)
!10643 = !DILocation(line: 6266, column: 24, scope: !1811)
!10644 = !DILocation(line: 6266, column: 5, scope: !1811)
!10645 = !DILocation(line: 6266, column: 11, scope: !1811)
!10646 = !DILocation(line: 6266, column: 15, scope: !1811)
!10647 = !DILocation(line: 6267, column: 19, scope: !1811)
!10648 = !DILocation(line: 6267, column: 24, scope: !1811)
!10649 = !DILocation(line: 6267, column: 5, scope: !1811)
!10650 = !DILocation(line: 6267, column: 11, scope: !1811)
!10651 = !DILocation(line: 6267, column: 17, scope: !1811)
!10652 = !DILocation(line: 6268, column: 17, scope: !1811)
!10653 = !DILocation(line: 6268, column: 22, scope: !1811)
!10654 = !DILocation(line: 6268, column: 26, scope: !1811)
!10655 = !DILocation(line: 6268, column: 24, scope: !1811)
!10656 = !DILocation(line: 6268, column: 5, scope: !1811)
!10657 = !DILocation(line: 6268, column: 11, scope: !1811)
!10658 = !DILocation(line: 6268, column: 15, scope: !1811)
!10659 = !DILocation(line: 6269, column: 3, scope: !1808)
!10660 = !DILocation(line: 6269, column: 3, scope: !10507)
!10661 = !DILocation(line: 6270, column: 3, scope: !1796)
!10662 = !DILocation(line: 6271, column: 1, scope: !1796)
!10663 = !DILocation(line: 4922, column: 32, scope: !1813)
!10664 = !DILocation(line: 4922, column: 56, scope: !1813)
!10665 = !DILocation(line: 4922, column: 70, scope: !1813)
!10666 = !DILocation(line: 4923, column: 33, scope: !1813)
!10667 = !DILocation(line: 4923, column: 50, scope: !1813)
!10668 = !DILocation(line: 4924, column: 34, scope: !1813)
!10669 = !DILocation(line: 4926, column: 3, scope: !1813)
!10670 = !DILocation(line: 4926, column: 18, scope: !1813)
!10671 = !DILocation(line: 4926, column: 48, scope: !1813)
!10672 = !DILocation(line: 4926, column: 56, scope: !1813)
!10673 = !DILocation(line: 4926, column: 61, scope: !1813)
!10674 = !DILocation(line: 4926, column: 70, scope: !1813)
!10675 = !DILocation(line: 4927, column: 48, scope: !1813)
!10676 = !DILocation(line: 4927, column: 53, scope: !1813)
!10677 = !DILocation(line: 4926, column: 27, scope: !1813)
!10678 = !DILocation(line: 4928, column: 7, scope: !10679)
!10679 = distinct !DILexicalBlock(scope: !1813, file: !162, line: 4928, column: 7)
!10680 = !DILocation(line: 4928, column: 7, scope: !1813)
!10681 = !DILocation(line: 4929, column: 12, scope: !10679)
!10682 = !DILocation(line: 4929, column: 5, scope: !10679)
!10683 = !DILocation(line: 4930, column: 8, scope: !10684)
!10684 = distinct !DILexicalBlock(scope: !1813, file: !162, line: 4930, column: 7)
!10685 = !DILocation(line: 4930, column: 16, scope: !10684)
!10686 = !DILocation(line: 4930, column: 21, scope: !10687)
!10687 = !DILexicalBlockFile(scope: !10684, file: !162, discriminator: 1)
!10688 = !DILocation(line: 4930, column: 28, scope: !10684)
!10689 = !DILocation(line: 4930, column: 35, scope: !10684)
!10690 = !DILocation(line: 4930, column: 42, scope: !10684)
!10691 = !DILocation(line: 4930, column: 32, scope: !10684)
!10692 = !DILocation(line: 4930, column: 49, scope: !10684)
!10693 = !DILocation(line: 4930, column: 55, scope: !10694)
!10694 = !DILexicalBlockFile(scope: !10684, file: !162, discriminator: 2)
!10695 = !DILocation(line: 4930, column: 62, scope: !10684)
!10696 = !DILocation(line: 4930, column: 53, scope: !10684)
!10697 = !DILocation(line: 4930, column: 52, scope: !10684)
!10698 = !DILocation(line: 4930, column: 72, scope: !10684)
!10699 = !DILocation(line: 4930, column: 7, scope: !1813)
!10700 = !DILocation(line: 4931, column: 15, scope: !10684)
!10701 = !DILocation(line: 4931, column: 21, scope: !10684)
!10702 = !DILocation(line: 4931, column: 12, scope: !10684)
!10703 = !DILocation(line: 4931, column: 5, scope: !10684)
!10704 = !DILocation(line: 4932, column: 11, scope: !10705)
!10705 = distinct !DILexicalBlock(scope: !1813, file: !162, line: 4932, column: 7)
!10706 = !DILocation(line: 4932, column: 18, scope: !10705)
!10707 = !DILocation(line: 4932, column: 26, scope: !10705)
!10708 = !DILocation(line: 4932, column: 33, scope: !10705)
!10709 = !DILocation(line: 4932, column: 22, scope: !10705)
!10710 = !DILocation(line: 4932, column: 37, scope: !10705)
!10711 = !DILocation(line: 4932, column: 50, scope: !10712)
!10712 = !DILexicalBlockFile(scope: !10705, file: !162, discriminator: 1)
!10713 = !DILocation(line: 4932, column: 41, scope: !10705)
!10714 = !DILocation(line: 4932, column: 7, scope: !1813)
!10715 = !DILocation(line: 4932, column: 9, scope: !10716)
!10716 = !DILexicalBlockFile(scope: !10705, file: !162, discriminator: 4)
!10717 = !DILocation(line: 4932, column: 68, scope: !10718)
!10718 = !DILexicalBlockFile(scope: !10719, file: !162, discriminator: 3)
!10719 = !DILexicalBlockFile(scope: !10705, file: !162, discriminator: 2)
!10720 = !DILocation(line: 4932, column: 75, scope: !10705)
!10721 = !DILocation(line: 4932, column: 79, scope: !10705)
!10722 = !DILocation(line: 4932, column: 82, scope: !10705)
!10723 = !DILocation(line: 4933, column: 5, scope: !10705)
!10724 = !DILocation(line: 4934, column: 3, scope: !1813)
!10725 = !DILocation(line: 4935, column: 1, scope: !1813)
!10726 = !DILocation(line: 5088, column: 29, scope: !1852)
!10727 = !DILocation(line: 5089, column: 34, scope: !1852)
!10728 = !DILocation(line: 5090, column: 30, scope: !1852)
!10729 = !DILocation(line: 5091, column: 30, scope: !1852)
!10730 = !DILocation(line: 5093, column: 3, scope: !1852)
!10731 = !DILocation(line: 5093, column: 15, scope: !1852)
!10732 = !DILocation(line: 5093, column: 22, scope: !1852)
!10733 = !DILocation(line: 5093, column: 30, scope: !1852)
!10734 = !DILocation(line: 5094, column: 3, scope: !1852)
!10735 = !DILocation(line: 5094, column: 16, scope: !1852)
!10736 = !DILocation(line: 5094, column: 25, scope: !1852)
!10737 = !DILocation(line: 5094, column: 30, scope: !1852)
!10738 = !DILocation(line: 5095, column: 3, scope: !1852)
!10739 = !DILocation(line: 5095, column: 18, scope: !1852)
!10740 = !DILocation(line: 5097, column: 3, scope: !1852)
!10741 = !DILocation(line: 5097, column: 7, scope: !1852)
!10742 = !DILocation(line: 5097, column: 27, scope: !1852)
!10743 = !DILocation(line: 5097, column: 35, scope: !1852)
!10744 = !DILocation(line: 5097, column: 50, scope: !1852)
!10745 = !DILocation(line: 5098, column: 4, scope: !1852)
!10746 = !DILocation(line: 5098, column: 12, scope: !1852)
!10747 = !DILocation(line: 5098, column: 27, scope: !1852)
!10748 = !DILocation(line: 5098, column: 41, scope: !1852)
!10749 = !DILocation(line: 5103, column: 8, scope: !10750)
!10750 = distinct !DILexicalBlock(scope: !1852, file: !162, line: 5103, column: 7)
!10751 = !DILocation(line: 5103, column: 14, scope: !10750)
!10752 = !DILocation(line: 5103, column: 7, scope: !1852)
!10753 = !DILocation(line: 5104, column: 19, scope: !10754)
!10754 = distinct !DILexicalBlock(scope: !10755, file: !162, line: 5104, column: 9)
!10755 = distinct !DILexicalBlock(scope: !10750, file: !162, line: 5103, column: 22)
!10756 = !DILocation(line: 5104, column: 10, scope: !10754)
!10757 = !DILocation(line: 5104, column: 9, scope: !10755)
!10758 = !DILocation(line: 5105, column: 7, scope: !10754)
!10759 = !DILocation(line: 5106, column: 3, scope: !10755)
!10760 = !DILocation(line: 5108, column: 3, scope: !1852)
!10761 = !DILocation(line: 5109, column: 5, scope: !1865)
!10762 = !DILocation(line: 5109, column: 17, scope: !1865)
!10763 = !DILocation(line: 5110, column: 5, scope: !1865)
!10764 = !DILocation(line: 5110, column: 9, scope: !1865)
!10765 = !DILocation(line: 5110, column: 18, scope: !1865)
!10766 = !DILocation(line: 5110, column: 24, scope: !1865)
!10767 = !DILocation(line: 5110, column: 17, scope: !1865)
!10768 = !DILocation(line: 5110, column: 44, scope: !1865)
!10769 = !DILocation(line: 5110, column: 49, scope: !1865)
!10770 = !DILocation(line: 5110, column: 64, scope: !1865)
!10771 = !DILocation(line: 5110, column: 16, scope: !1865)
!10772 = !DILocation(line: 5111, column: 13, scope: !1865)
!10773 = !DILocation(line: 5111, column: 5, scope: !1865)
!10774 = !DILocation(line: 5114, column: 12, scope: !1871)
!10775 = !DILocation(line: 5114, column: 20, scope: !1871)
!10776 = !DILocation(line: 5114, column: 11, scope: !1871)
!10777 = !DILocation(line: 5114, column: 37, scope: !1871)
!10778 = !DILocation(line: 5114, column: 40, scope: !10779)
!10779 = !DILexicalBlockFile(scope: !1871, file: !162, discriminator: 1)
!10780 = !DILocation(line: 5114, column: 48, scope: !1871)
!10781 = !DILocation(line: 5114, column: 56, scope: !1871)
!10782 = !DILocation(line: 5114, column: 44, scope: !1871)
!10783 = !DILocation(line: 5114, column: 11, scope: !1872)
!10784 = !DILocation(line: 5115, column: 9, scope: !1870)
!10785 = !DILocation(line: 5115, column: 25, scope: !1870)
!10786 = !DILocation(line: 5116, column: 9, scope: !1870)
!10787 = !DILocation(line: 5116, column: 17, scope: !1870)
!10788 = !DILocation(line: 5117, column: 34, scope: !1870)
!10789 = !DILocation(line: 5117, column: 42, scope: !1870)
!10790 = !DILocation(line: 5117, column: 55, scope: !1870)
!10791 = !DILocation(line: 5118, column: 32, scope: !1870)
!10792 = !DILocation(line: 5118, column: 48, scope: !1870)
!10793 = !DILocation(line: 5118, column: 53, scope: !1870)
!10794 = !DILocation(line: 5118, column: 46, scope: !1870)
!10795 = !DILocation(line: 5119, column: 32, scope: !1870)
!10796 = !DILocation(line: 5119, column: 39, scope: !1870)
!10797 = !DILocation(line: 5119, column: 44, scope: !1870)
!10798 = !DILocation(line: 5119, column: 37, scope: !1870)
!10799 = !DILocation(line: 5117, column: 16, scope: !1870)
!10800 = !DILocation(line: 5117, column: 14, scope: !1870)
!10801 = !DILocation(line: 5120, column: 14, scope: !10802)
!10802 = distinct !DILexicalBlock(scope: !1870, file: !162, line: 5120, column: 13)
!10803 = !DILocation(line: 5120, column: 13, scope: !1870)
!10804 = !DILocation(line: 5121, column: 18, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10802, file: !162, line: 5120, column: 20)
!10806 = !DILocation(line: 5122, column: 11, scope: !10805)
!10807 = !DILocation(line: 5124, column: 35, scope: !1870)
!10808 = !DILocation(line: 5124, column: 44, scope: !1870)
!10809 = !DILocation(line: 5124, column: 49, scope: !1870)
!10810 = !DILocation(line: 5124, column: 64, scope: !1870)
!10811 = !DILocation(line: 5124, column: 28, scope: !1870)
!10812 = !DILocation(line: 5124, column: 18, scope: !1870)
!10813 = !DILocation(line: 5124, column: 16, scope: !1870)
!10814 = !DILocation(line: 5125, column: 44, scope: !1870)
!10815 = !DILocation(line: 5125, column: 52, scope: !1870)
!10816 = !DILocation(line: 5125, column: 66, scope: !1870)
!10817 = !DILocation(line: 5125, column: 13, scope: !1870)
!10818 = !DILocation(line: 5125, column: 21, scope: !1870)
!10819 = !DILocation(line: 5125, column: 35, scope: !1870)
!10820 = !DILocation(line: 5125, column: 39, scope: !1870)
!10821 = !DILocation(line: 5126, column: 14, scope: !10822)
!10822 = distinct !DILexicalBlock(scope: !1870, file: !162, line: 5126, column: 13)
!10823 = !DILocation(line: 5126, column: 13, scope: !1870)
!10824 = !DILocation(line: 5133, column: 33, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10822, file: !162, line: 5126, column: 22)
!10826 = !DILocation(line: 5133, column: 38, scope: !10825)
!10827 = !DILocation(line: 5133, column: 11, scope: !10825)
!10828 = !DILocation(line: 5133, column: 16, scope: !10825)
!10829 = !DILocation(line: 5133, column: 31, scope: !10825)
!10830 = !DILocation(line: 5134, column: 11, scope: !10825)
!10831 = !DILocation(line: 5136, column: 13, scope: !10832)
!10832 = distinct !DILexicalBlock(scope: !1870, file: !162, line: 5136, column: 13)
!10833 = !DILocation(line: 5136, column: 21, scope: !10832)
!10834 = !DILocation(line: 5136, column: 13, scope: !1870)
!10835 = !DILocation(line: 5137, column: 15, scope: !10836)
!10836 = distinct !DILexicalBlock(scope: !10837, file: !162, line: 5137, column: 15)
!10837 = distinct !DILexicalBlock(scope: !10832, file: !162, line: 5136, column: 27)
!10838 = !DILocation(line: 5137, column: 23, scope: !10836)
!10839 = !DILocation(line: 5137, column: 31, scope: !10836)
!10840 = !DILocation(line: 5137, column: 19, scope: !10836)
!10841 = !DILocation(line: 5137, column: 15, scope: !10837)
!10842 = !DILocation(line: 5138, column: 36, scope: !10836)
!10843 = !DILocation(line: 5138, column: 14, scope: !10836)
!10844 = !DILocation(line: 5138, column: 22, scope: !10836)
!10845 = !DILocation(line: 5138, column: 34, scope: !10836)
!10846 = !DILocation(line: 5138, column: 13, scope: !10836)
!10847 = !DILocation(line: 5139, column: 18, scope: !10837)
!10848 = !DILocation(line: 5140, column: 11, scope: !10837)
!10849 = !DILocation(line: 5142, column: 13, scope: !10850)
!10850 = distinct !DILexicalBlock(scope: !1870, file: !162, line: 5142, column: 13)
!10851 = !DILocation(line: 5142, column: 21, scope: !10850)
!10852 = !DILocation(line: 5142, column: 13, scope: !1870)
!10853 = !DILocation(line: 5143, column: 16, scope: !10854)
!10854 = distinct !DILexicalBlock(scope: !10855, file: !162, line: 5143, column: 15)
!10855 = distinct !DILexicalBlock(scope: !10850, file: !162, line: 5142, column: 31)
!10856 = !DILocation(line: 5143, column: 24, scope: !10854)
!10857 = !DILocation(line: 5143, column: 15, scope: !10854)
!10858 = !DILocation(line: 5143, column: 15, scope: !10855)
!10859 = !DILocation(line: 5144, column: 13, scope: !10860)
!10860 = distinct !DILexicalBlock(scope: !10854, file: !162, line: 5143, column: 53)
!10861 = !DILocation(line: 5144, column: 18, scope: !10860)
!10862 = !DILocation(line: 5144, column: 34, scope: !10860)
!10863 = !DILocation(line: 5145, column: 13, scope: !10860)
!10864 = !DILocation(line: 5145, column: 21, scope: !10860)
!10865 = !DILocation(line: 5145, column: 26, scope: !10860)
!10866 = !DILocation(line: 5146, column: 19, scope: !10867)
!10867 = distinct !DILexicalBlock(scope: !10860, file: !162, line: 5146, column: 17)
!10868 = !DILocation(line: 5146, column: 27, scope: !10867)
!10869 = !DILocation(line: 5146, column: 56, scope: !10867)
!10870 = !DILocation(line: 5146, column: 64, scope: !10867)
!10871 = !DILocation(line: 5148, column: 43, scope: !10867)
!10872 = !DILocation(line: 5148, column: 51, scope: !10867)
!10873 = !DILocation(line: 5149, column: 43, scope: !10867)
!10874 = !DILocation(line: 5149, column: 51, scope: !10867)
!10875 = !DILocation(line: 5150, column: 43, scope: !10867)
!10876 = !DILocation(line: 5150, column: 51, scope: !10867)
!10877 = !DILocation(line: 5146, column: 18, scope: !10867)
!10878 = !DILocation(line: 5146, column: 17, scope: !10860)
!10879 = !DILocation(line: 5151, column: 15, scope: !10880)
!10880 = distinct !DILexicalBlock(scope: !10867, file: !162, line: 5150, column: 62)
!10881 = !DILocation(line: 5151, column: 23, scope: !10880)
!10882 = !DILocation(line: 5151, column: 28, scope: !10880)
!10883 = !DILocation(line: 5152, column: 22, scope: !10880)
!10884 = !DILocation(line: 5153, column: 15, scope: !10880)
!10885 = !DILocation(line: 5155, column: 13, scope: !10860)
!10886 = !DILocation(line: 5155, column: 21, scope: !10860)
!10887 = !DILocation(line: 5155, column: 26, scope: !10860)
!10888 = !DILocation(line: 5156, column: 18, scope: !10889)
!10889 = distinct !DILexicalBlock(scope: !10860, file: !162, line: 5156, column: 17)
!10890 = !DILocation(line: 5156, column: 23, scope: !10889)
!10891 = !DILocation(line: 5156, column: 17, scope: !10860)
!10892 = !DILocation(line: 5157, column: 37, scope: !10889)
!10893 = !DILocation(line: 5157, column: 42, scope: !10889)
!10894 = !DILocation(line: 5157, column: 15, scope: !10889)
!10895 = !DILocation(line: 5157, column: 20, scope: !10889)
!10896 = !DILocation(line: 5157, column: 35, scope: !10889)
!10897 = !DILocation(line: 5158, column: 11, scope: !10860)
!10898 = !DILocation(line: 5160, column: 35, scope: !10854)
!10899 = !DILocation(line: 5160, column: 40, scope: !10854)
!10900 = !DILocation(line: 5160, column: 13, scope: !10854)
!10901 = !DILocation(line: 5160, column: 18, scope: !10854)
!10902 = !DILocation(line: 5160, column: 33, scope: !10854)
!10903 = !DILocation(line: 5161, column: 9, scope: !10855)
!10904 = !DILocation(line: 5163, column: 11, scope: !10905)
!10905 = distinct !DILexicalBlock(scope: !10850, file: !162, line: 5162, column: 14)
!10906 = !DILocation(line: 5163, column: 19, scope: !10905)
!10907 = !DILocation(line: 5163, column: 24, scope: !10905)
!10908 = !DILocation(line: 5164, column: 37, scope: !10905)
!10909 = !DILocation(line: 5165, column: 38, scope: !10905)
!10910 = !DILocation(line: 5165, column: 46, scope: !10905)
!10911 = !DILocation(line: 5166, column: 45, scope: !10905)
!10912 = !DILocation(line: 5166, column: 53, scope: !10905)
!10913 = !DILocation(line: 5167, column: 46, scope: !10905)
!10914 = !DILocation(line: 5167, column: 54, scope: !10905)
!10915 = !DILocation(line: 5168, column: 48, scope: !10905)
!10916 = !DILocation(line: 5168, column: 56, scope: !10905)
!10917 = !DILocation(line: 5168, column: 46, scope: !10905)
!10918 = !DILocation(line: 5164, column: 20, scope: !10905)
!10919 = !DILocation(line: 5164, column: 18, scope: !10905)
!10920 = !DILocation(line: 5169, column: 11, scope: !10905)
!10921 = !DILocation(line: 5169, column: 19, scope: !10905)
!10922 = !DILocation(line: 5169, column: 24, scope: !10905)
!10923 = !DILocation(line: 5170, column: 15, scope: !10924)
!10924 = distinct !DILexicalBlock(scope: !10905, file: !162, line: 5170, column: 15)
!10925 = !DILocation(line: 5170, column: 15, scope: !10905)
!10926 = !DILocation(line: 5171, column: 13, scope: !10924)
!10927 = !DILocation(line: 5173, column: 9, scope: !1870)
!10928 = !DILocation(line: 5174, column: 7, scope: !1871)
!10929 = !DILocation(line: 5178, column: 30, scope: !1872)
!10930 = !DILocation(line: 5178, column: 8, scope: !1872)
!10931 = !DILocation(line: 5178, column: 16, scope: !1872)
!10932 = !DILocation(line: 5178, column: 28, scope: !1872)
!10933 = !DILocation(line: 5179, column: 14, scope: !1872)
!10934 = !DILocation(line: 5180, column: 7, scope: !1872)
!10935 = !DILocation(line: 5182, column: 14, scope: !1872)
!10936 = !DILocation(line: 5183, column: 7, scope: !1872)
!10937 = !DILocation(line: 5186, column: 23, scope: !10938)
!10938 = distinct !DILexicalBlock(scope: !1872, file: !162, line: 5186, column: 11)
!10939 = !DILocation(line: 5186, column: 29, scope: !10938)
!10940 = !DILocation(line: 5186, column: 34, scope: !10938)
!10941 = !DILocation(line: 5186, column: 49, scope: !10938)
!10942 = !DILocation(line: 5186, column: 12, scope: !10938)
!10943 = !DILocation(line: 5186, column: 11, scope: !1872)
!10944 = !DILocation(line: 5187, column: 16, scope: !10945)
!10945 = distinct !DILexicalBlock(scope: !10938, file: !162, line: 5186, column: 56)
!10946 = !DILocation(line: 5188, column: 9, scope: !10945)
!10947 = !DILocation(line: 5190, column: 7, scope: !1872)
!10948 = !DILocation(line: 5192, column: 14, scope: !1872)
!10949 = !DILocation(line: 5192, column: 30, scope: !1872)
!10950 = !DILocation(line: 5192, column: 35, scope: !1872)
!10951 = !DILocation(line: 5192, column: 28, scope: !1872)
!10952 = !DILocation(line: 5192, column: 12, scope: !1872)
!10953 = !DILocation(line: 5192, column: 7, scope: !1872)
!10954 = !DILocation(line: 5195, column: 11, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !1872, file: !162, line: 5195, column: 11)
!10956 = !DILocation(line: 5195, column: 17, scope: !10955)
!10957 = !DILocation(line: 5195, column: 24, scope: !10955)
!10958 = !DILocation(line: 5195, column: 30, scope: !10955)
!10959 = !DILocation(line: 5195, column: 21, scope: !10955)
!10960 = !DILocation(line: 5195, column: 34, scope: !10955)
!10961 = !DILocation(line: 5195, column: 47, scope: !10962)
!10962 = !DILexicalBlockFile(scope: !10955, file: !162, discriminator: 1)
!10963 = !DILocation(line: 5195, column: 38, scope: !10955)
!10964 = !DILocation(line: 5195, column: 11, scope: !1872)
!10965 = !DILocation(line: 5196, column: 22, scope: !10966)
!10966 = distinct !DILexicalBlock(scope: !10955, file: !162, line: 5195, column: 54)
!10967 = !DILocation(line: 5197, column: 9, scope: !10966)
!10968 = !DILocation(line: 5199, column: 9, scope: !1872)
!10969 = !DILocation(line: 5199, column: 15, scope: !1872)
!10970 = !DILocation(line: 5199, column: 19, scope: !1872)
!10971 = !DILocation(line: 5199, column: 22, scope: !1872)
!10972 = !DILocation(line: 5200, column: 7, scope: !1872)
!10973 = !DILocation(line: 5203, column: 9, scope: !1875)
!10974 = !DILocation(line: 5203, column: 18, scope: !1875)
!10975 = !DILocation(line: 5204, column: 9, scope: !1875)
!10976 = !DILocation(line: 5204, column: 13, scope: !1875)
!10977 = !DILocation(line: 5205, column: 9, scope: !1875)
!10978 = !DILocation(line: 5205, column: 13, scope: !1875)
!10979 = !DILocation(line: 5205, column: 20, scope: !1875)
!10980 = !DILocation(line: 5205, column: 26, scope: !1875)
!10981 = !{!2399, !2290, i64 88}
!10982 = !DILocation(line: 5205, column: 41, scope: !1875)
!10983 = !DILocation(line: 5205, column: 46, scope: !1875)
!10984 = !DILocation(line: 5205, column: 18, scope: !1875)
!10985 = !DILocation(line: 5206, column: 13, scope: !10986)
!10986 = distinct !DILexicalBlock(scope: !1875, file: !162, line: 5206, column: 13)
!10987 = !DILocation(line: 5206, column: 15, scope: !10986)
!10988 = !DILocation(line: 5206, column: 13, scope: !1875)
!10989 = !DILocation(line: 5207, column: 15, scope: !10990)
!10990 = distinct !DILexicalBlock(scope: !10991, file: !162, line: 5207, column: 15)
!10991 = distinct !DILexicalBlock(scope: !10986, file: !162, line: 5206, column: 20)
!10992 = !DILocation(line: 5207, column: 23, scope: !10990)
!10993 = !DILocation(line: 5207, column: 31, scope: !10990)
!10994 = !DILocation(line: 5207, column: 19, scope: !10990)
!10995 = !DILocation(line: 5207, column: 15, scope: !10991)
!10996 = !DILocation(line: 5208, column: 36, scope: !10990)
!10997 = !DILocation(line: 5208, column: 14, scope: !10990)
!10998 = !DILocation(line: 5208, column: 22, scope: !10990)
!10999 = !DILocation(line: 5208, column: 34, scope: !10990)
!11000 = !DILocation(line: 5208, column: 13, scope: !10990)
!11001 = !DILocation(line: 5209, column: 18, scope: !10991)
!11002 = !DILocation(line: 5210, column: 11, scope: !10991)
!11003 = !DILocation(line: 5212, column: 35, scope: !1875)
!11004 = !DILocation(line: 5212, column: 47, scope: !1875)
!11005 = !DILocation(line: 5212, column: 13, scope: !1875)
!11006 = !DILocation(line: 5212, column: 11, scope: !1875)
!11007 = !DILocation(line: 5213, column: 14, scope: !11008)
!11008 = distinct !DILexicalBlock(scope: !1875, file: !162, line: 5213, column: 13)
!11009 = !DILocation(line: 5213, column: 13, scope: !1875)
!11010 = !DILocation(line: 5214, column: 15, scope: !11011)
!11011 = distinct !DILexicalBlock(scope: !11012, file: !162, line: 5214, column: 15)
!11012 = distinct !DILexicalBlock(scope: !11008, file: !162, line: 5213, column: 17)
!11013 = !DILocation(line: 5214, column: 23, scope: !11011)
!11014 = !DILocation(line: 5214, column: 31, scope: !11011)
!11015 = !DILocation(line: 5214, column: 19, scope: !11011)
!11016 = !DILocation(line: 5214, column: 15, scope: !11012)
!11017 = !DILocation(line: 5215, column: 36, scope: !11011)
!11018 = !DILocation(line: 5215, column: 14, scope: !11011)
!11019 = !DILocation(line: 5215, column: 22, scope: !11011)
!11020 = !DILocation(line: 5215, column: 34, scope: !11011)
!11021 = !DILocation(line: 5215, column: 13, scope: !11011)
!11022 = !DILocation(line: 5216, column: 18, scope: !11012)
!11023 = !DILocation(line: 5217, column: 11, scope: !11012)
!11024 = !DILocation(line: 5219, column: 16, scope: !11025)
!11025 = distinct !DILexicalBlock(scope: !1875, file: !162, line: 5219, column: 9)
!11026 = !DILocation(line: 5219, column: 14, scope: !11025)
!11027 = !DILocation(line: 5219, column: 21, scope: !11028)
!11028 = !DILexicalBlockFile(scope: !11029, file: !162, discriminator: 2)
!11029 = !DILexicalBlockFile(scope: !11030, file: !162, discriminator: 1)
!11030 = distinct !DILexicalBlock(scope: !11025, file: !162, line: 5219, column: 9)
!11031 = !DILocation(line: 5219, column: 25, scope: !11030)
!11032 = !DILocation(line: 5219, column: 23, scope: !11030)
!11033 = !DILocation(line: 5219, column: 9, scope: !11025)
!11034 = !DILocation(line: 5220, column: 15, scope: !11035)
!11035 = distinct !DILexicalBlock(scope: !11036, file: !162, line: 5220, column: 15)
!11036 = distinct !DILexicalBlock(scope: !11030, file: !162, line: 5219, column: 33)
!11037 = !DILocation(line: 5220, column: 21, scope: !11035)
!11038 = !DILocation(line: 5220, column: 28, scope: !11035)
!11039 = !DILocation(line: 5220, column: 34, scope: !11035)
!11040 = !DILocation(line: 5220, column: 25, scope: !11035)
!11041 = !DILocation(line: 5220, column: 38, scope: !11035)
!11042 = !DILocation(line: 5220, column: 51, scope: !11043)
!11043 = !DILexicalBlockFile(scope: !11035, file: !162, discriminator: 1)
!11044 = !DILocation(line: 5220, column: 42, scope: !11035)
!11045 = !DILocation(line: 5220, column: 15, scope: !11036)
!11046 = !DILocation(line: 5221, column: 20, scope: !11047)
!11047 = distinct !DILexicalBlock(scope: !11035, file: !162, line: 5220, column: 58)
!11048 = !DILocation(line: 5222, column: 13, scope: !11047)
!11049 = !DILocation(line: 5224, column: 32, scope: !11036)
!11050 = !DILocation(line: 5224, column: 28, scope: !11036)
!11051 = !DILocation(line: 5224, column: 13, scope: !11036)
!11052 = !DILocation(line: 5224, column: 19, scope: !11036)
!11053 = !DILocation(line: 5224, column: 23, scope: !11036)
!11054 = !DILocation(line: 5224, column: 26, scope: !11036)
!11055 = !DILocation(line: 5225, column: 9, scope: !11036)
!11056 = !DILocation(line: 5219, column: 29, scope: !11030)
!11057 = !DILocation(line: 5219, column: 9, scope: !11030)
!11058 = !DILocation(line: 5226, column: 7, scope: !1872)
!11059 = !DILocation(line: 5226, column: 7, scope: !11060)
!11060 = !DILexicalBlockFile(scope: !1872, file: !162, discriminator: 1)
!11061 = !DILocation(line: 5227, column: 7, scope: !1872)
!11062 = !DILocation(line: 5229, column: 11, scope: !11063)
!11063 = distinct !DILexicalBlock(scope: !1872, file: !162, line: 5229, column: 11)
!11064 = !DILocation(line: 5229, column: 19, scope: !11063)
!11065 = !DILocation(line: 5229, column: 27, scope: !11063)
!11066 = !DILocation(line: 5229, column: 15, scope: !11063)
!11067 = !DILocation(line: 5229, column: 11, scope: !1872)
!11068 = !DILocation(line: 5230, column: 32, scope: !11063)
!11069 = !DILocation(line: 5230, column: 10, scope: !11063)
!11070 = !DILocation(line: 5230, column: 18, scope: !11063)
!11071 = !DILocation(line: 5230, column: 30, scope: !11063)
!11072 = !DILocation(line: 5230, column: 9, scope: !11063)
!11073 = !DILocation(line: 5231, column: 14, scope: !1872)
!11074 = !DILocation(line: 5232, column: 7, scope: !1872)
!11075 = !DILocation(line: 5234, column: 11, scope: !11076)
!11076 = distinct !DILexicalBlock(scope: !1872, file: !162, line: 5234, column: 11)
!11077 = !DILocation(line: 5234, column: 19, scope: !11076)
!11078 = !DILocation(line: 5234, column: 27, scope: !11076)
!11079 = !DILocation(line: 5234, column: 15, scope: !11076)
!11080 = !DILocation(line: 5234, column: 11, scope: !1872)
!11081 = !DILocation(line: 5235, column: 32, scope: !11076)
!11082 = !DILocation(line: 5235, column: 10, scope: !11076)
!11083 = !DILocation(line: 5235, column: 18, scope: !11076)
!11084 = !DILocation(line: 5235, column: 30, scope: !11076)
!11085 = !DILocation(line: 5235, column: 9, scope: !11076)
!11086 = !DILocation(line: 5236, column: 14, scope: !1872)
!11087 = !DILocation(line: 5237, column: 7, scope: !1872)
!11088 = !DILocation(line: 5239, column: 11, scope: !11089)
!11089 = distinct !DILexicalBlock(scope: !1872, file: !162, line: 5239, column: 11)
!11090 = !DILocation(line: 5239, column: 19, scope: !11089)
!11091 = !DILocation(line: 5239, column: 27, scope: !11089)
!11092 = !DILocation(line: 5239, column: 15, scope: !11089)
!11093 = !DILocation(line: 5239, column: 11, scope: !1872)
!11094 = !DILocation(line: 5240, column: 32, scope: !11089)
!11095 = !DILocation(line: 5240, column: 10, scope: !11089)
!11096 = !DILocation(line: 5240, column: 18, scope: !11089)
!11097 = !DILocation(line: 5240, column: 30, scope: !11089)
!11098 = !DILocation(line: 5240, column: 9, scope: !11089)
!11099 = !DILocation(line: 5241, column: 14, scope: !1872)
!11100 = !DILocation(line: 5242, column: 7, scope: !1872)
!11101 = !DILocation(line: 5244, column: 21, scope: !1865)
!11102 = !DILocation(line: 5244, column: 19, scope: !1865)
!11103 = !DILocation(line: 5245, column: 3, scope: !1866)
!11104 = !DILocation(line: 5245, column: 3, scope: !11105)
!11105 = !DILexicalBlockFile(scope: !1866, file: !162, discriminator: 1)
!11106 = !DILocation(line: 5108, column: 3, scope: !1866)
!11107 = !DILocation(line: 5248, column: 43, scope: !1852)
!11108 = !DILocation(line: 5248, column: 4, scope: !1852)
!11109 = !DILocation(line: 5248, column: 12, scope: !1852)
!11110 = !DILocation(line: 5248, column: 27, scope: !1852)
!11111 = !DILocation(line: 5248, column: 41, scope: !1852)
!11112 = !DILocation(line: 5250, column: 10, scope: !1852)
!11113 = !DILocation(line: 5250, column: 3, scope: !1852)
!11114 = !DILocation(line: 5251, column: 1, scope: !1852)
!11115 = !DILocation(line: 3329, column: 28, scope: !1878)
!11116 = !DILocation(line: 3330, column: 33, scope: !1878)
!11117 = !DILocation(line: 3331, column: 30, scope: !1878)
!11118 = !DILocation(line: 3332, column: 29, scope: !1878)
!11119 = !DILocation(line: 3333, column: 30, scope: !1878)
!11120 = !DILocation(line: 3334, column: 26, scope: !1878)
!11121 = !DILocation(line: 3336, column: 3, scope: !1878)
!11122 = !DILocation(line: 3336, column: 15, scope: !1878)
!11123 = !DILocation(line: 3337, column: 3, scope: !1878)
!11124 = !DILocation(line: 3337, column: 7, scope: !1878)
!11125 = !DILocation(line: 3338, column: 3, scope: !1878)
!11126 = !DILocation(line: 3338, column: 15, scope: !1878)
!11127 = !DILocation(line: 3338, column: 20, scope: !1878)
!11128 = !DILocation(line: 3338, column: 19, scope: !1878)
!11129 = !DILocation(line: 3339, column: 3, scope: !1878)
!11130 = !DILocation(line: 3339, column: 16, scope: !1878)
!11131 = !DILocation(line: 3340, column: 3, scope: !1878)
!11132 = !DILocation(line: 3340, column: 16, scope: !1878)
!11133 = !DILocation(line: 3341, column: 7, scope: !11134)
!11134 = distinct !DILexicalBlock(scope: !1878, file: !162, line: 3341, column: 7)
!11135 = !DILocation(line: 3341, column: 15, scope: !11134)
!11136 = !DILocation(line: 3341, column: 23, scope: !11134)
!11137 = !DILocation(line: 3341, column: 11, scope: !11134)
!11138 = !DILocation(line: 3341, column: 7, scope: !1878)
!11139 = !DILocation(line: 3342, column: 17, scope: !11140)
!11140 = distinct !DILexicalBlock(scope: !11134, file: !162, line: 3341, column: 36)
!11141 = !DILocation(line: 3342, column: 25, scope: !11140)
!11142 = !DILocation(line: 3342, column: 13, scope: !11140)
!11143 = !DILocation(line: 3343, column: 16, scope: !11140)
!11144 = !DILocation(line: 3343, column: 6, scope: !11140)
!11145 = !DILocation(line: 3343, column: 14, scope: !11140)
!11146 = !DILocation(line: 3344, column: 20, scope: !11140)
!11147 = !DILocation(line: 3344, column: 28, scope: !11140)
!11148 = !DILocation(line: 3344, column: 16, scope: !11140)
!11149 = !DILocation(line: 3345, column: 3, scope: !11140)
!11150 = !DILocation(line: 3347, column: 18, scope: !11151)
!11151 = distinct !DILexicalBlock(scope: !11134, file: !162, line: 3346, column: 8)
!11152 = !DILocation(line: 3347, column: 26, scope: !11151)
!11153 = !DILocation(line: 3347, column: 51, scope: !11151)
!11154 = !DILocation(line: 3347, column: 13, scope: !11151)
!11155 = !DILocation(line: 3348, column: 21, scope: !11151)
!11156 = !DILocation(line: 3348, column: 29, scope: !11151)
!11157 = !DILocation(line: 3348, column: 54, scope: !11151)
!11158 = !DILocation(line: 3348, column: 16, scope: !11151)
!11159 = !DILocation(line: 3350, column: 14, scope: !1878)
!11160 = !DILocation(line: 3350, column: 4, scope: !1878)
!11161 = !DILocation(line: 3350, column: 12, scope: !1878)
!11162 = !DILocation(line: 3351, column: 4, scope: !1878)
!11163 = !DILocation(line: 3351, column: 13, scope: !1878)
!11164 = !DILocation(line: 3352, column: 12, scope: !1878)
!11165 = !DILocation(line: 3352, column: 18, scope: !1878)
!11166 = !DILocation(line: 3352, column: 11, scope: !1878)
!11167 = !DILocation(line: 3352, column: 31, scope: !1878)
!11168 = !DILocation(line: 3352, column: 36, scope: !1878)
!11169 = !DILocation(line: 3352, column: 39, scope: !1878)
!11170 = !DILocation(line: 3352, column: 10, scope: !1878)
!11171 = !DILocation(line: 3352, column: 7, scope: !1878)
!11172 = !DILocation(line: 3353, column: 17, scope: !1878)
!11173 = !DILocation(line: 3353, column: 4, scope: !1878)
!11174 = !DILocation(line: 3353, column: 15, scope: !1878)
!11175 = !DILocation(line: 3354, column: 11, scope: !1878)
!11176 = !DILocation(line: 3354, column: 3, scope: !1878)
!11177 = !DILocation(line: 3356, column: 10, scope: !11178)
!11178 = distinct !DILexicalBlock(scope: !11179, file: !162, line: 3356, column: 9)
!11179 = distinct !DILexicalBlock(scope: !1878, file: !162, line: 3354, column: 16)
!11180 = !DILocation(line: 3356, column: 18, scope: !11178)
!11181 = !DILocation(line: 3356, column: 9, scope: !11178)
!11182 = !DILocation(line: 3356, column: 9, scope: !11179)
!11183 = !DILocation(line: 3357, column: 21, scope: !11178)
!11184 = !DILocation(line: 3357, column: 29, scope: !11178)
!11185 = !DILocation(line: 3357, column: 34, scope: !11178)
!11186 = !DILocation(line: 3357, column: 37, scope: !11178)
!11187 = !DILocation(line: 3357, column: 7, scope: !11178)
!11188 = !DILocation(line: 3358, column: 17, scope: !11179)
!11189 = !DILocation(line: 3358, column: 6, scope: !11179)
!11190 = !DILocation(line: 3358, column: 15, scope: !11179)
!11191 = !DILocation(line: 3359, column: 16, scope: !11179)
!11192 = !DILocation(line: 3359, column: 6, scope: !11179)
!11193 = !DILocation(line: 3359, column: 14, scope: !11179)
!11194 = !DILocation(line: 3360, column: 10, scope: !11195)
!11195 = distinct !DILexicalBlock(scope: !11179, file: !162, line: 3360, column: 9)
!11196 = !DILocation(line: 3360, column: 18, scope: !11195)
!11197 = !DILocation(line: 3360, column: 34, scope: !11195)
!11198 = !DILocation(line: 3360, column: 43, scope: !11195)
!11199 = !DILocation(line: 3360, column: 9, scope: !11179)
!11200 = !DILocation(line: 3361, column: 7, scope: !11195)
!11201 = !DILocation(line: 3363, column: 7, scope: !11195)
!11202 = !DILocation(line: 3365, column: 16, scope: !11179)
!11203 = !DILocation(line: 3365, column: 6, scope: !11179)
!11204 = !DILocation(line: 3365, column: 14, scope: !11179)
!11205 = !DILocation(line: 3366, column: 5, scope: !11179)
!11206 = !DILocation(line: 3368, column: 9, scope: !11207)
!11207 = distinct !DILexicalBlock(scope: !11179, file: !162, line: 3368, column: 9)
!11208 = !DILocation(line: 3368, column: 9, scope: !11179)
!11209 = !DILocation(line: 3369, column: 18, scope: !11210)
!11210 = distinct !DILexicalBlock(scope: !11207, file: !162, line: 3368, column: 19)
!11211 = !DILocation(line: 3369, column: 8, scope: !11210)
!11212 = !DILocation(line: 3369, column: 16, scope: !11210)
!11213 = !DILocation(line: 3370, column: 7, scope: !11210)
!11214 = !DILocation(line: 3372, column: 5, scope: !11179)
!11215 = !DILocation(line: 3375, column: 9, scope: !11216)
!11216 = distinct !DILexicalBlock(scope: !11179, file: !162, line: 3375, column: 9)
!11217 = !DILocation(line: 3375, column: 9, scope: !11179)
!11218 = !DILocation(line: 3376, column: 18, scope: !11219)
!11219 = distinct !DILexicalBlock(scope: !11216, file: !162, line: 3375, column: 19)
!11220 = !DILocation(line: 3376, column: 8, scope: !11219)
!11221 = !DILocation(line: 3376, column: 16, scope: !11219)
!11222 = !DILocation(line: 3377, column: 7, scope: !11219)
!11223 = !DILocation(line: 3379, column: 5, scope: !11179)
!11224 = !DILocation(line: 3381, column: 16, scope: !11179)
!11225 = !DILocation(line: 3381, column: 6, scope: !11179)
!11226 = !DILocation(line: 3381, column: 14, scope: !11179)
!11227 = !DILocation(line: 3382, column: 5, scope: !11179)
!11228 = !DILocation(line: 3385, column: 1, scope: !1878)
!11229 = !DILocation(line: 3309, column: 35, scope: !1891)
!11230 = !DILocation(line: 3310, column: 36, scope: !1891)
!11231 = !DILocation(line: 3311, column: 36, scope: !1891)
!11232 = !DILocation(line: 3312, column: 37, scope: !1891)
!11233 = !DILocation(line: 3314, column: 3, scope: !1891)
!11234 = !DILocation(line: 3314, column: 18, scope: !1891)
!11235 = !DILocation(line: 3314, column: 43, scope: !1891)
!11236 = !DILocation(line: 3314, column: 52, scope: !1891)
!11237 = !DILocation(line: 3314, column: 60, scope: !1891)
!11238 = !DILocation(line: 3314, column: 81, scope: !1891)
!11239 = !DILocation(line: 3315, column: 43, scope: !1891)
!11240 = !DILocation(line: 3315, column: 63, scope: !1891)
!11241 = !DILocation(line: 3315, column: 71, scope: !1891)
!11242 = !DILocation(line: 3315, column: 87, scope: !1891)
!11243 = !DILocation(line: 3315, column: 61, scope: !1891)
!11244 = !DILocation(line: 3315, column: 51, scope: !1891)
!11245 = !DILocation(line: 3314, column: 27, scope: !1891)
!11246 = !DILocation(line: 3316, column: 7, scope: !11247)
!11247 = distinct !DILexicalBlock(scope: !1891, file: !162, line: 3316, column: 7)
!11248 = !DILocation(line: 3316, column: 14, scope: !11247)
!11249 = !DILocation(line: 3316, column: 7, scope: !1891)
!11250 = !DILocation(line: 3317, column: 12, scope: !11247)
!11251 = !DILocation(line: 3317, column: 5, scope: !11247)
!11252 = !DILocation(line: 3318, column: 7, scope: !11253)
!11253 = distinct !DILexicalBlock(scope: !1891, file: !162, line: 3318, column: 7)
!11254 = !DILocation(line: 3318, column: 7, scope: !1891)
!11255 = !DILocation(line: 3319, column: 6, scope: !11256)
!11256 = distinct !DILexicalBlock(scope: !11253, file: !162, line: 3318, column: 14)
!11257 = !DILocation(line: 3319, column: 14, scope: !11256)
!11258 = !DILocation(line: 3319, column: 27, scope: !11256)
!11259 = !DILocation(line: 3320, column: 28, scope: !11256)
!11260 = !DILocation(line: 3320, column: 36, scope: !11256)
!11261 = !DILocation(line: 3320, column: 43, scope: !11256)
!11262 = !DILocation(line: 3320, column: 48, scope: !11256)
!11263 = !DILocation(line: 3320, column: 12, scope: !11256)
!11264 = !DILocation(line: 3320, column: 5, scope: !11256)
!11265 = !DILocation(line: 3322, column: 10, scope: !1891)
!11266 = !DILocation(line: 3322, column: 3, scope: !1891)
!11267 = !DILocation(line: 3323, column: 1, scope: !1891)
!11268 = !DILocation(line: 6274, column: 29, scope: !1898)
!11269 = !DILocation(line: 6276, column: 3, scope: !1898)
!11270 = !DILocation(line: 6276, column: 15, scope: !1898)
!11271 = !DILocation(line: 6276, column: 22, scope: !1898)
!11272 = !DILocation(line: 6276, column: 30, scope: !1898)
!11273 = !DILocation(line: 6277, column: 3, scope: !1898)
!11274 = !DILocation(line: 6277, column: 22, scope: !1898)
!11275 = !DILocation(line: 6278, column: 3, scope: !1898)
!11276 = !DILocation(line: 6278, column: 7, scope: !1898)
!11277 = !DILocation(line: 6280, column: 8, scope: !11278)
!11278 = distinct !DILexicalBlock(scope: !1898, file: !162, line: 6280, column: 7)
!11279 = !DILocation(line: 6280, column: 13, scope: !11278)
!11280 = !DILocation(line: 6280, column: 7, scope: !1898)
!11281 = !DILocation(line: 6281, column: 31, scope: !11282)
!11282 = distinct !DILexicalBlock(scope: !11278, file: !162, line: 6280, column: 25)
!11283 = !DILocation(line: 6281, column: 39, scope: !11282)
!11284 = !DILocation(line: 6281, column: 45, scope: !11282)
!11285 = !DILocation(line: 6281, column: 58, scope: !11282)
!11286 = !DILocation(line: 6281, column: 66, scope: !11282)
!11287 = !DILocation(line: 6281, column: 57, scope: !11282)
!11288 = !DILocation(line: 6281, column: 79, scope: !11282)
!11289 = !DILocation(line: 6281, column: 23, scope: !11282)
!11290 = !DILocation(line: 6281, column: 5, scope: !11282)
!11291 = !DILocation(line: 6281, column: 10, scope: !11282)
!11292 = !DILocation(line: 6281, column: 21, scope: !11282)
!11293 = !DILocation(line: 6282, column: 10, scope: !11294)
!11294 = distinct !DILexicalBlock(scope: !11282, file: !162, line: 6282, column: 9)
!11295 = !DILocation(line: 6282, column: 15, scope: !11294)
!11296 = !DILocation(line: 6282, column: 9, scope: !11282)
!11297 = !DILocation(line: 6283, column: 7, scope: !11294)
!11298 = !DILocation(line: 6284, column: 5, scope: !11282)
!11299 = !DILocation(line: 6284, column: 10, scope: !11282)
!11300 = !DILocation(line: 6284, column: 24, scope: !11282)
!11301 = !DILocation(line: 6285, column: 3, scope: !11282)
!11302 = !DILocation(line: 6287, column: 7, scope: !1906)
!11303 = !DILocation(line: 6287, column: 12, scope: !1906)
!11304 = !DILocation(line: 6287, column: 26, scope: !1906)
!11305 = !DILocation(line: 6287, column: 31, scope: !1906)
!11306 = !DILocation(line: 6287, column: 23, scope: !1906)
!11307 = !DILocation(line: 6287, column: 7, scope: !1898)
!11308 = !DILocation(line: 6288, column: 5, scope: !1905)
!11309 = !DILocation(line: 6288, column: 23, scope: !1905)
!11310 = !DILocation(line: 6289, column: 9, scope: !11311)
!11311 = distinct !DILexicalBlock(scope: !1905, file: !162, line: 6289, column: 9)
!11312 = !DILocation(line: 6289, column: 14, scope: !11311)
!11313 = !DILocation(line: 6289, column: 9, scope: !1905)
!11314 = !DILocation(line: 6291, column: 10, scope: !11315)
!11315 = distinct !DILexicalBlock(scope: !11311, file: !162, line: 6289, column: 24)
!11316 = !DILocation(line: 6291, column: 18, scope: !11315)
!11317 = !DILocation(line: 6291, column: 24, scope: !11315)
!11318 = !DILocation(line: 6291, column: 37, scope: !11315)
!11319 = !DILocation(line: 6291, column: 42, scope: !11315)
!11320 = !DILocation(line: 6291, column: 36, scope: !11315)
!11321 = !DILocation(line: 6291, column: 53, scope: !11315)
!11322 = !DILocation(line: 6291, column: 58, scope: !11315)
!11323 = !DILocation(line: 6291, column: 68, scope: !11315)
!11324 = !DILocation(line: 6291, column: 72, scope: !11315)
!11325 = !DILocation(line: 6290, column: 14, scope: !11315)
!11326 = !DILocation(line: 6290, column: 12, scope: !11315)
!11327 = !DILocation(line: 6292, column: 11, scope: !11328)
!11328 = distinct !DILexicalBlock(scope: !11315, file: !162, line: 6292, column: 11)
!11329 = !DILocation(line: 6292, column: 16, scope: !11328)
!11330 = !DILocation(line: 6292, column: 11, scope: !11315)
!11331 = !DILocation(line: 6293, column: 9, scope: !11328)
!11332 = !DILocation(line: 6294, column: 7, scope: !11315)
!11333 = !DILocation(line: 6294, column: 12, scope: !11315)
!11334 = !DILocation(line: 6294, column: 22, scope: !11315)
!11335 = !DILocation(line: 6295, column: 5, scope: !11315)
!11336 = !DILocation(line: 6297, column: 35, scope: !11337)
!11337 = distinct !DILexicalBlock(scope: !11311, file: !162, line: 6296, column: 10)
!11338 = !DILocation(line: 6297, column: 43, scope: !11337)
!11339 = !DILocation(line: 6297, column: 49, scope: !11337)
!11340 = !DILocation(line: 6297, column: 14, scope: !11337)
!11341 = !DILocation(line: 6297, column: 12, scope: !11337)
!11342 = !DILocation(line: 6299, column: 11, scope: !11343)
!11343 = distinct !DILexicalBlock(scope: !11337, file: !162, line: 6299, column: 11)
!11344 = !DILocation(line: 6299, column: 16, scope: !11343)
!11345 = !DILocation(line: 6299, column: 11, scope: !11337)
!11346 = !DILocation(line: 6300, column: 9, scope: !11343)
!11347 = !DILocation(line: 6301, column: 7, scope: !11337)
!11348 = !DILocation(line: 6301, column: 12, scope: !11337)
!11349 = !DILocation(line: 6301, column: 22, scope: !11337)
!11350 = !DILocation(line: 6303, column: 21, scope: !1905)
!11351 = !DILocation(line: 6303, column: 5, scope: !1905)
!11352 = !DILocation(line: 6303, column: 10, scope: !1905)
!11353 = !DILocation(line: 6303, column: 19, scope: !1905)
!11354 = !DILocation(line: 6304, column: 3, scope: !1906)
!11355 = !DILocation(line: 6304, column: 3, scope: !11356)
!11356 = !DILexicalBlockFile(scope: !1906, file: !162, discriminator: 1)
!11357 = !DILocation(line: 6304, column: 3, scope: !1905)
!11358 = !DILocation(line: 6305, column: 10, scope: !1898)
!11359 = !DILocation(line: 6305, column: 15, scope: !1898)
!11360 = !DILocation(line: 6305, column: 25, scope: !1898)
!11361 = !DILocation(line: 6305, column: 8, scope: !1898)
!11362 = !DILocation(line: 6306, column: 23, scope: !1898)
!11363 = !DILocation(line: 6306, column: 9, scope: !1898)
!11364 = !DILocation(line: 6306, column: 14, scope: !1898)
!11365 = !DILocation(line: 6306, column: 6, scope: !1898)
!11366 = !DILocation(line: 6307, column: 7, scope: !1909)
!11367 = !DILocation(line: 6307, column: 12, scope: !1909)
!11368 = !DILocation(line: 6307, column: 7, scope: !1898)
!11369 = !DILocation(line: 6308, column: 5, scope: !1908)
!11370 = !DILocation(line: 6308, column: 23, scope: !1908)
!11371 = !DILocation(line: 6308, column: 63, scope: !1908)
!11372 = !DILocation(line: 6308, column: 68, scope: !1908)
!11373 = !DILocation(line: 6308, column: 78, scope: !1908)
!11374 = !DILocation(line: 6308, column: 47, scope: !1908)
!11375 = !DILocation(line: 6308, column: 52, scope: !1908)
!11376 = !DILocation(line: 6308, column: 33, scope: !1908)
!11377 = !DILocation(line: 6308, column: 38, scope: !1908)
!11378 = !DILocation(line: 6309, column: 9, scope: !11379)
!11379 = distinct !DILexicalBlock(scope: !1908, file: !162, line: 6309, column: 9)
!11380 = !DILocation(line: 6309, column: 17, scope: !11379)
!11381 = !{!8450, !2400, i64 20}
!11382 = !DILocation(line: 6309, column: 9, scope: !1908)
!11383 = !DILocation(line: 6310, column: 50, scope: !11384)
!11384 = distinct !DILexicalBlock(scope: !11379, file: !162, line: 6309, column: 28)
!11385 = !DILocation(line: 6310, column: 21, scope: !11384)
!11386 = !DILocation(line: 6310, column: 29, scope: !11384)
!11387 = !DILocation(line: 6310, column: 7, scope: !11384)
!11388 = !DILocation(line: 6310, column: 12, scope: !11384)
!11389 = !DILocation(line: 6310, column: 40, scope: !11384)
!11390 = !DILocation(line: 6310, column: 48, scope: !11384)
!11391 = !{!8450, !2400, i64 28}
!11392 = !DILocation(line: 6311, column: 5, scope: !11384)
!11393 = !DILocation(line: 6312, column: 10, scope: !11394)
!11394 = distinct !DILexicalBlock(scope: !1908, file: !162, line: 6312, column: 9)
!11395 = !DILocation(line: 6312, column: 18, scope: !11394)
!11396 = !{!8450, !2400, i64 24}
!11397 = !DILocation(line: 6312, column: 9, scope: !1908)
!11398 = !DILocation(line: 6313, column: 28, scope: !11394)
!11399 = !DILocation(line: 6313, column: 7, scope: !11394)
!11400 = !DILocation(line: 6313, column: 15, scope: !11394)
!11401 = !DILocation(line: 6313, column: 26, scope: !11394)
!11402 = !{!8450, !2400, i64 16}
!11403 = !DILocation(line: 6314, column: 25, scope: !1908)
!11404 = !DILocation(line: 6314, column: 5, scope: !1908)
!11405 = !DILocation(line: 6314, column: 13, scope: !1908)
!11406 = !DILocation(line: 6314, column: 23, scope: !1908)
!11407 = !DILocation(line: 6315, column: 5, scope: !1908)
!11408 = !DILocation(line: 6315, column: 13, scope: !1908)
!11409 = !DILocation(line: 6315, column: 21, scope: !1908)
!11410 = !DILocation(line: 6316, column: 3, scope: !1909)
!11411 = !DILocation(line: 6316, column: 3, scope: !1908)
!11412 = !DILocation(line: 6317, column: 51, scope: !1898)
!11413 = !DILocation(line: 6317, column: 55, scope: !1898)
!11414 = !DILocation(line: 6317, column: 63, scope: !1898)
!11415 = !DILocation(line: 6317, column: 36, scope: !1898)
!11416 = !DILocation(line: 6317, column: 40, scope: !1898)
!11417 = !DILocation(line: 6317, column: 49, scope: !1898)
!11418 = !DILocation(line: 6317, column: 20, scope: !1898)
!11419 = !DILocation(line: 6317, column: 24, scope: !1898)
!11420 = !DILocation(line: 6317, column: 34, scope: !1898)
!11421 = !DILocation(line: 6317, column: 3, scope: !1898)
!11422 = !DILocation(line: 6317, column: 7, scope: !1898)
!11423 = !DILocation(line: 6317, column: 18, scope: !1898)
!11424 = !DILocation(line: 6318, column: 10, scope: !1898)
!11425 = !DILocation(line: 6318, column: 3, scope: !1898)
!11426 = !DILocation(line: 6319, column: 1, scope: !1898)
!11427 = !DILocation(line: 4795, column: 34, scope: !1910)
!11428 = !DILocation(line: 4795, column: 50, scope: !1910)
!11429 = !DILocation(line: 4796, column: 32, scope: !1910)
!11430 = !DILocation(line: 4798, column: 3, scope: !1910)
!11431 = !DILocation(line: 4798, column: 15, scope: !1910)
!11432 = !DILocation(line: 4798, column: 27, scope: !1910)
!11433 = !DILocation(line: 4799, column: 3, scope: !1910)
!11434 = !DILocation(line: 4799, column: 15, scope: !1910)
!11435 = !DILocation(line: 4800, column: 3, scope: !1910)
!11436 = !DILocation(line: 4800, column: 18, scope: !1910)
!11437 = !DILocation(line: 4801, column: 3, scope: !1910)
!11438 = !DILocation(line: 4801, column: 25, scope: !1910)
!11439 = !DILocation(line: 4803, column: 8, scope: !11440)
!11440 = distinct !DILexicalBlock(scope: !1910, file: !162, line: 4803, column: 7)
!11441 = !DILocation(line: 4803, column: 16, scope: !11440)
!11442 = !DILocation(line: 4803, column: 7, scope: !11440)
!11443 = !DILocation(line: 4803, column: 7, scope: !1910)
!11444 = !DILocation(line: 4804, column: 19, scope: !11445)
!11445 = distinct !DILexicalBlock(scope: !11440, file: !162, line: 4803, column: 41)
!11446 = !DILocation(line: 4804, column: 27, scope: !11445)
!11447 = !DILocation(line: 4804, column: 16, scope: !11445)
!11448 = !DILocation(line: 4805, column: 40, scope: !11445)
!11449 = !DILocation(line: 4805, column: 52, scope: !11445)
!11450 = !DILocation(line: 4805, column: 6, scope: !11445)
!11451 = !DILocation(line: 4805, column: 14, scope: !11445)
!11452 = !DILocation(line: 4805, column: 38, scope: !11445)
!11453 = !DILocation(line: 4806, column: 3, scope: !11445)
!11454 = !DILocation(line: 4808, column: 43, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11440, file: !162, line: 4807, column: 8)
!11456 = !DILocation(line: 4808, column: 51, scope: !11455)
!11457 = !DILocation(line: 4808, column: 57, scope: !11455)
!11458 = !DILocation(line: 4808, column: 18, scope: !11455)
!11459 = !DILocation(line: 4808, column: 16, scope: !11455)
!11460 = !DILocation(line: 4809, column: 10, scope: !11461)
!11461 = distinct !DILexicalBlock(scope: !11455, file: !162, line: 4809, column: 9)
!11462 = !DILocation(line: 4809, column: 9, scope: !11455)
!11463 = !DILocation(line: 4810, column: 7, scope: !11461)
!11464 = !DILocation(line: 4812, column: 3, scope: !1910)
!11465 = !DILocation(line: 4812, column: 11, scope: !1910)
!11466 = !DILocation(line: 4812, column: 16, scope: !1910)
!11467 = !DILocation(line: 4813, column: 3, scope: !1910)
!11468 = !DILocation(line: 4813, column: 11, scope: !1910)
!11469 = !DILocation(line: 4813, column: 21, scope: !1910)
!11470 = !{!4091, !2400, i64 20}
!11471 = !DILocation(line: 4814, column: 23, scope: !1910)
!11472 = !DILocation(line: 4814, column: 31, scope: !1910)
!11473 = !DILocation(line: 4814, column: 3, scope: !1910)
!11474 = !DILocation(line: 4814, column: 15, scope: !1910)
!11475 = !DILocation(line: 4814, column: 20, scope: !1910)
!11476 = !DILocation(line: 4815, column: 38, scope: !1910)
!11477 = !DILocation(line: 4815, column: 4, scope: !1910)
!11478 = !DILocation(line: 4815, column: 12, scope: !1910)
!11479 = !DILocation(line: 4815, column: 36, scope: !1910)
!11480 = !DILocation(line: 4816, column: 24, scope: !1910)
!11481 = !DILocation(line: 4816, column: 3, scope: !1910)
!11482 = !DILocation(line: 4816, column: 15, scope: !1910)
!11483 = !DILocation(line: 4816, column: 22, scope: !1910)
!11484 = !{!2674, !2290, i64 24}
!11485 = !DILocation(line: 4817, column: 32, scope: !1910)
!11486 = !DILocation(line: 4817, column: 40, scope: !1910)
!11487 = !DILocation(line: 4817, column: 3, scope: !1910)
!11488 = !DILocation(line: 4817, column: 15, scope: !1910)
!11489 = !DILocation(line: 4817, column: 29, scope: !1910)
!11490 = !{!2674, !2400, i64 32}
!11491 = !DILocation(line: 4818, column: 29, scope: !1910)
!11492 = !DILocation(line: 4818, column: 3, scope: !1910)
!11493 = !DILocation(line: 4818, column: 15, scope: !1910)
!11494 = !DILocation(line: 4818, column: 27, scope: !1910)
!11495 = !DILocation(line: 4819, column: 3, scope: !1910)
!11496 = !DILocation(line: 4819, column: 15, scope: !1910)
!11497 = !DILocation(line: 4819, column: 32, scope: !1910)
!11498 = !DILocation(line: 4820, column: 3, scope: !1910)
!11499 = !DILocation(line: 4820, column: 15, scope: !1910)
!11500 = !DILocation(line: 4820, column: 35, scope: !1910)
!11501 = !DILocation(line: 4821, column: 23, scope: !1910)
!11502 = !DILocation(line: 4821, column: 31, scope: !1910)
!11503 = !DILocation(line: 4821, column: 13, scope: !1910)
!11504 = !DILocation(line: 4822, column: 22, scope: !1910)
!11505 = !DILocation(line: 4822, column: 30, scope: !1910)
!11506 = !DILocation(line: 4822, column: 40, scope: !1910)
!11507 = !DILocation(line: 4822, column: 48, scope: !1910)
!11508 = !DILocation(line: 4822, column: 38, scope: !1910)
!11509 = !DILocation(line: 4822, column: 11, scope: !1910)
!11510 = !DILocation(line: 4825, column: 7, scope: !1924)
!11511 = !DILocation(line: 4825, column: 15, scope: !1924)
!11512 = !DILocation(line: 4825, column: 7, scope: !1910)
!11513 = !DILocation(line: 4826, column: 5, scope: !1923)
!11514 = !DILocation(line: 4826, column: 9, scope: !1923)
!11515 = !DILocation(line: 4826, column: 19, scope: !1923)
!11516 = !DILocation(line: 4826, column: 27, scope: !1923)
!11517 = !DILocation(line: 4826, column: 49, scope: !1923)
!11518 = !DILocation(line: 4826, column: 17, scope: !1923)
!11519 = !DILocation(line: 4826, column: 63, scope: !1923)
!11520 = !DILocation(line: 4826, column: 71, scope: !1923)
!11521 = !DILocation(line: 4826, column: 92, scope: !1923)
!11522 = !DILocation(line: 4826, column: 103, scope: !1923)
!11523 = !DILocation(line: 4826, column: 16, scope: !1923)
!11524 = !DILocation(line: 4827, column: 23, scope: !1923)
!11525 = !DILocation(line: 4827, column: 32, scope: !1923)
!11526 = !DILocation(line: 4827, column: 40, scope: !1923)
!11527 = !DILocation(line: 4827, column: 61, scope: !1923)
!11528 = !DILocation(line: 4827, column: 72, scope: !1923)
!11529 = !DILocation(line: 4827, column: 81, scope: !1923)
!11530 = !DILocation(line: 4828, column: 23, scope: !1923)
!11531 = !DILocation(line: 4827, column: 14, scope: !1923)
!11532 = !DILocation(line: 4827, column: 12, scope: !1923)
!11533 = !DILocation(line: 4829, column: 3, scope: !1924)
!11534 = !DILocation(line: 4829, column: 3, scope: !1923)
!11535 = !DILocation(line: 4832, column: 24, scope: !1924)
!11536 = !DILocation(line: 4832, column: 33, scope: !1924)
!11537 = !DILocation(line: 4832, column: 41, scope: !1924)
!11538 = !DILocation(line: 4832, column: 55, scope: !1924)
!11539 = !DILocation(line: 4832, column: 63, scope: !1924)
!11540 = !DILocation(line: 4832, column: 84, scope: !1924)
!11541 = !DILocation(line: 4833, column: 24, scope: !1924)
!11542 = !DILocation(line: 4832, column: 14, scope: !1924)
!11543 = !DILocation(line: 4832, column: 12, scope: !1924)
!11544 = !DILocation(line: 4835, column: 7, scope: !11545)
!11545 = distinct !DILexicalBlock(scope: !1910, file: !162, line: 4835, column: 7)
!11546 = !DILocation(line: 4835, column: 14, scope: !11545)
!11547 = !DILocation(line: 4835, column: 7, scope: !1910)
!11548 = !DILocation(line: 4836, column: 9, scope: !11549)
!11549 = distinct !DILexicalBlock(scope: !11550, file: !162, line: 4836, column: 9)
!11550 = distinct !DILexicalBlock(scope: !11545, file: !162, line: 4835, column: 33)
!11551 = !DILocation(line: 4836, column: 20, scope: !11549)
!11552 = !DILocation(line: 4836, column: 17, scope: !11549)
!11553 = !DILocation(line: 4836, column: 25, scope: !11549)
!11554 = !DILocation(line: 4836, column: 29, scope: !11555)
!11555 = !DILexicalBlockFile(scope: !11549, file: !162, discriminator: 1)
!11556 = !DILocation(line: 4836, column: 37, scope: !11549)
!11557 = !DILocation(line: 4836, column: 53, scope: !11549)
!11558 = !DILocation(line: 4836, column: 62, scope: !11549)
!11559 = !DILocation(line: 4836, column: 9, scope: !11550)
!11560 = !DILocation(line: 4837, column: 33, scope: !11561)
!11561 = distinct !DILexicalBlock(scope: !11549, file: !162, line: 4836, column: 80)
!11562 = !DILocation(line: 4837, column: 40, scope: !11561)
!11563 = !DILocation(line: 4837, column: 38, scope: !11561)
!11564 = !DILocation(line: 4837, column: 27, scope: !11561)
!11565 = !DILocation(line: 4837, column: 7, scope: !11561)
!11566 = !DILocation(line: 4837, column: 15, scope: !11561)
!11567 = !DILocation(line: 4837, column: 25, scope: !11561)
!11568 = !DILocation(line: 4838, column: 8, scope: !11561)
!11569 = !DILocation(line: 4838, column: 16, scope: !11561)
!11570 = !DILocation(line: 4838, column: 29, scope: !11561)
!11571 = !DILocation(line: 4839, column: 5, scope: !11561)
!11572 = !DILocation(line: 4841, column: 7, scope: !11573)
!11573 = distinct !DILexicalBlock(scope: !11549, file: !162, line: 4840, column: 10)
!11574 = !DILocation(line: 4841, column: 15, scope: !11573)
!11575 = !DILocation(line: 4841, column: 20, scope: !11573)
!11576 = !DILocation(line: 4842, column: 42, scope: !11573)
!11577 = !DILocation(line: 4842, column: 54, scope: !11573)
!11578 = !DILocation(line: 4842, column: 8, scope: !11573)
!11579 = !DILocation(line: 4842, column: 16, scope: !11573)
!11580 = !DILocation(line: 4842, column: 40, scope: !11573)
!11581 = !DILocation(line: 4844, column: 27, scope: !11573)
!11582 = !DILocation(line: 4844, column: 35, scope: !11573)
!11583 = !DILocation(line: 4844, column: 7, scope: !11573)
!11584 = !DILocation(line: 4844, column: 19, scope: !11573)
!11585 = !DILocation(line: 4844, column: 24, scope: !11573)
!11586 = !DILocation(line: 4845, column: 42, scope: !11573)
!11587 = !DILocation(line: 4845, column: 8, scope: !11573)
!11588 = !DILocation(line: 4845, column: 16, scope: !11573)
!11589 = !DILocation(line: 4845, column: 40, scope: !11573)
!11590 = !DILocation(line: 4847, column: 3, scope: !11550)
!11591 = !DILocation(line: 4848, column: 10, scope: !1910)
!11592 = !DILocation(line: 4848, column: 3, scope: !1910)
!11593 = !DILocation(line: 4849, column: 1, scope: !1910)
!11594 = !DILocation(line: 6360, column: 25, scope: !1943)
!11595 = !DILocation(line: 6362, column: 3, scope: !1943)
!11596 = !DILocation(line: 6362, column: 15, scope: !1943)
!11597 = !DILocation(line: 6362, column: 22, scope: !1943)
!11598 = !DILocation(line: 6362, column: 30, scope: !1943)
!11599 = !DILocation(line: 6363, column: 3, scope: !1943)
!11600 = !DILocation(line: 6363, column: 16, scope: !1943)
!11601 = !DILocation(line: 6364, column: 3, scope: !1943)
!11602 = !DILocation(line: 6364, column: 16, scope: !1943)
!11603 = !DILocation(line: 6365, column: 3, scope: !1943)
!11604 = !DILocation(line: 6365, column: 14, scope: !1943)
!11605 = !DILocation(line: 6366, column: 3, scope: !1943)
!11606 = !DILocation(line: 6366, column: 7, scope: !1943)
!11607 = !DILocation(line: 6366, column: 20, scope: !1943)
!11608 = !DILocation(line: 6366, column: 25, scope: !1943)
!11609 = !DILocation(line: 6366, column: 36, scope: !1943)
!11610 = !DILocation(line: 6367, column: 23, scope: !1943)
!11611 = !DILocation(line: 6367, column: 28, scope: !1943)
!11612 = !DILocation(line: 6367, column: 45, scope: !1943)
!11613 = !DILocation(line: 6367, column: 20, scope: !1943)
!11614 = !DILocation(line: 6366, column: 19, scope: !1943)
!11615 = !DILocation(line: 6369, column: 25, scope: !1943)
!11616 = !DILocation(line: 6369, column: 33, scope: !1943)
!11617 = !DILocation(line: 6369, column: 39, scope: !1943)
!11618 = !DILocation(line: 6369, column: 51, scope: !1943)
!11619 = !DILocation(line: 6369, column: 50, scope: !1943)
!11620 = !DILocation(line: 6369, column: 9, scope: !1943)
!11621 = !DILocation(line: 6369, column: 7, scope: !1943)
!11622 = !DILocation(line: 6370, column: 8, scope: !11623)
!11623 = distinct !DILexicalBlock(scope: !1943, file: !162, line: 6370, column: 7)
!11624 = !DILocation(line: 6370, column: 7, scope: !1943)
!11625 = !DILocation(line: 6371, column: 5, scope: !11623)
!11626 = !DILocation(line: 6373, column: 28, scope: !1943)
!11627 = !DILocation(line: 6373, column: 33, scope: !1943)
!11628 = !DILocation(line: 6373, column: 24, scope: !1943)
!11629 = !DILocation(line: 6373, column: 9, scope: !1943)
!11630 = !DILocation(line: 6373, column: 7, scope: !1943)
!11631 = !DILocation(line: 6374, column: 11, scope: !1943)
!11632 = !DILocation(line: 6374, column: 8, scope: !1943)
!11633 = !DILocation(line: 6376, column: 14, scope: !1943)
!11634 = !DILocation(line: 6376, column: 25, scope: !1943)
!11635 = !DILocation(line: 6376, column: 3, scope: !1943)
!11636 = !DILocation(line: 6377, column: 10, scope: !1943)
!11637 = !DILocation(line: 6377, column: 3, scope: !1943)
!11638 = !DILocation(line: 6378, column: 1, scope: !1943)
!11639 = !DILocation(line: 5277, column: 40, scope: !1971)
!11640 = !DILocation(line: 5277, column: 64, scope: !1971)
!11641 = !DILocation(line: 5278, column: 41, scope: !1971)
!11642 = !DILocation(line: 5278, column: 60, scope: !1971)
!11643 = !DILocation(line: 5280, column: 3, scope: !1971)
!11644 = !DILocation(line: 5280, column: 19, scope: !1971)
!11645 = !DILocation(line: 5281, column: 3, scope: !1971)
!11646 = !DILocation(line: 5281, column: 13, scope: !1971)
!11647 = !DILocation(line: 5282, column: 3, scope: !1971)
!11648 = !DILocation(line: 5282, column: 15, scope: !1971)
!11649 = !DILocation(line: 5283, column: 9, scope: !11650)
!11650 = distinct !DILexicalBlock(scope: !1971, file: !162, line: 5283, column: 7)
!11651 = !DILocation(line: 5283, column: 17, scope: !11650)
!11652 = !DILocation(line: 5283, column: 8, scope: !11650)
!11653 = !DILocation(line: 5283, column: 7, scope: !1971)
!11654 = !DILocation(line: 5284, column: 10, scope: !11655)
!11655 = distinct !DILexicalBlock(scope: !11656, file: !162, line: 5284, column: 9)
!11656 = distinct !DILexicalBlock(scope: !11650, file: !162, line: 5283, column: 50)
!11657 = !DILocation(line: 5284, column: 18, scope: !11655)
!11658 = !DILocation(line: 5284, column: 9, scope: !11655)
!11659 = !DILocation(line: 5284, column: 9, scope: !11656)
!11660 = !DILocation(line: 5285, column: 21, scope: !11655)
!11661 = !DILocation(line: 5285, column: 29, scope: !11655)
!11662 = !DILocation(line: 5285, column: 34, scope: !11655)
!11663 = !DILocation(line: 5285, column: 41, scope: !11655)
!11664 = !DILocation(line: 5285, column: 7, scope: !11655)
!11665 = !DILocation(line: 5286, column: 5, scope: !11656)
!11666 = !DILocation(line: 5288, column: 12, scope: !1971)
!11667 = !DILocation(line: 5288, column: 17, scope: !1971)
!11668 = !DILocation(line: 5288, column: 33, scope: !1971)
!11669 = !DILocation(line: 5288, column: 9, scope: !1971)
!11670 = !DILocation(line: 5289, column: 9, scope: !1971)
!11671 = !DILocation(line: 5289, column: 20, scope: !1971)
!11672 = !DILocation(line: 5289, column: 26, scope: !1971)
!11673 = !DILocation(line: 5289, column: 38, scope: !1971)
!11674 = !DILocation(line: 5289, column: 43, scope: !1971)
!11675 = !DILocation(line: 5289, column: 18, scope: !1971)
!11676 = !DILocation(line: 5289, column: 15, scope: !1971)
!11677 = !DILocation(line: 5289, column: 7, scope: !1971)
!11678 = !DILocation(line: 5290, column: 30, scope: !1971)
!11679 = !DILocation(line: 5290, column: 38, scope: !1971)
!11680 = !DILocation(line: 5290, column: 51, scope: !1971)
!11681 = !DILocation(line: 5290, column: 56, scope: !1971)
!11682 = !DILocation(line: 5290, column: 63, scope: !1971)
!11683 = !DILocation(line: 5290, column: 12, scope: !1971)
!11684 = !DILocation(line: 5290, column: 10, scope: !1971)
!11685 = !DILocation(line: 5291, column: 8, scope: !11686)
!11686 = distinct !DILexicalBlock(scope: !1971, file: !162, line: 5291, column: 7)
!11687 = !DILocation(line: 5291, column: 7, scope: !1971)
!11688 = !DILocation(line: 5292, column: 5, scope: !11686)
!11689 = !DILocation(line: 5293, column: 40, scope: !1971)
!11690 = !DILocation(line: 5293, column: 48, scope: !1971)
!11691 = !DILocation(line: 5293, column: 62, scope: !1971)
!11692 = !DILocation(line: 5293, column: 7, scope: !1971)
!11693 = !DILocation(line: 5293, column: 15, scope: !1971)
!11694 = !DILocation(line: 5293, column: 29, scope: !1971)
!11695 = !DILocation(line: 5293, column: 35, scope: !1971)
!11696 = !DILocation(line: 5294, column: 28, scope: !1971)
!11697 = !DILocation(line: 5294, column: 36, scope: !1971)
!11698 = !DILocation(line: 5294, column: 49, scope: !1971)
!11699 = !DILocation(line: 5295, column: 28, scope: !1971)
!11700 = !DILocation(line: 5295, column: 34, scope: !1971)
!11701 = !{!2399, !2290, i64 72}
!11702 = !DILocation(line: 5295, column: 41, scope: !1971)
!11703 = !DILocation(line: 5295, column: 46, scope: !1971)
!11704 = !DILocation(line: 5295, column: 26, scope: !1971)
!11705 = !DILocation(line: 5296, column: 25, scope: !1971)
!11706 = !DILocation(line: 5296, column: 31, scope: !1971)
!11707 = !DILocation(line: 5296, column: 36, scope: !1971)
!11708 = !DILocation(line: 5296, column: 51, scope: !1971)
!11709 = !DILocation(line: 5296, column: 29, scope: !1971)
!11710 = !DILocation(line: 5294, column: 10, scope: !1971)
!11711 = !DILocation(line: 5294, column: 8, scope: !1971)
!11712 = !DILocation(line: 5297, column: 8, scope: !11713)
!11713 = distinct !DILexicalBlock(scope: !1971, file: !162, line: 5297, column: 7)
!11714 = !DILocation(line: 5297, column: 7, scope: !1971)
!11715 = !DILocation(line: 5298, column: 5, scope: !11713)
!11716 = !DILocation(line: 5299, column: 18, scope: !1971)
!11717 = !DILocation(line: 5299, column: 3, scope: !1971)
!11718 = !DILocation(line: 5300, column: 4, scope: !1971)
!11719 = !DILocation(line: 5300, column: 12, scope: !1971)
!11720 = !DILocation(line: 5300, column: 45, scope: !1971)
!11721 = !DILocation(line: 5300, column: 53, scope: !1971)
!11722 = !DILocation(line: 5300, column: 68, scope: !1971)
!11723 = !DILocation(line: 5300, column: 76, scope: !1971)
!11724 = !DILocation(line: 5300, column: 3, scope: !1971)
!11725 = !DILocation(line: 5301, column: 15, scope: !1971)
!11726 = !DILocation(line: 5301, column: 23, scope: !1971)
!11727 = !DILocation(line: 5301, column: 3, scope: !1971)
!11728 = !DILocation(line: 5302, column: 3, scope: !1971)
!11729 = !DILocation(line: 5303, column: 1, scope: !1971)
!11730 = !DILocation(line: 5306, column: 26, scope: !1986)
!11731 = !DILocation(line: 5306, column: 50, scope: !1986)
!11732 = !DILocation(line: 5307, column: 27, scope: !1986)
!11733 = !DILocation(line: 5307, column: 46, scope: !1986)
!11734 = !DILocation(line: 5309, column: 3, scope: !1986)
!11735 = !DILocation(line: 5309, column: 13, scope: !1986)
!11736 = !DILocation(line: 5310, column: 9, scope: !11737)
!11737 = distinct !DILexicalBlock(scope: !1986, file: !162, line: 5310, column: 7)
!11738 = !DILocation(line: 5310, column: 17, scope: !11737)
!11739 = !DILocation(line: 5310, column: 8, scope: !11737)
!11740 = !DILocation(line: 5310, column: 7, scope: !1986)
!11741 = !DILocation(line: 5311, column: 10, scope: !11742)
!11742 = distinct !DILexicalBlock(scope: !11743, file: !162, line: 5311, column: 9)
!11743 = distinct !DILexicalBlock(scope: !11737, file: !162, line: 5310, column: 36)
!11744 = !DILocation(line: 5311, column: 18, scope: !11742)
!11745 = !DILocation(line: 5311, column: 9, scope: !11742)
!11746 = !DILocation(line: 5311, column: 9, scope: !11743)
!11747 = !DILocation(line: 5312, column: 21, scope: !11742)
!11748 = !DILocation(line: 5312, column: 29, scope: !11742)
!11749 = !DILocation(line: 5312, column: 34, scope: !11742)
!11750 = !DILocation(line: 5312, column: 41, scope: !11742)
!11751 = !DILocation(line: 5312, column: 7, scope: !11742)
!11752 = !DILocation(line: 5313, column: 5, scope: !11743)
!11753 = !DILocation(line: 5315, column: 28, scope: !1986)
!11754 = !DILocation(line: 5315, column: 36, scope: !1986)
!11755 = !DILocation(line: 5316, column: 26, scope: !1986)
!11756 = !DILocation(line: 5317, column: 26, scope: !1986)
!11757 = !DILocation(line: 5317, column: 34, scope: !1986)
!11758 = !DILocation(line: 5317, column: 39, scope: !1986)
!11759 = !DILocation(line: 5317, column: 55, scope: !1986)
!11760 = !DILocation(line: 5317, column: 32, scope: !1986)
!11761 = !DILocation(line: 5318, column: 26, scope: !1986)
!11762 = !DILocation(line: 5318, column: 32, scope: !1986)
!11763 = !DILocation(line: 5318, column: 37, scope: !1986)
!11764 = !DILocation(line: 5318, column: 53, scope: !1986)
!11765 = !DILocation(line: 5318, column: 30, scope: !1986)
!11766 = !DILocation(line: 5315, column: 10, scope: !1986)
!11767 = !DILocation(line: 5315, column: 8, scope: !1986)
!11768 = !DILocation(line: 5319, column: 8, scope: !11769)
!11769 = distinct !DILexicalBlock(scope: !1986, file: !162, line: 5319, column: 7)
!11770 = !DILocation(line: 5319, column: 7, scope: !1986)
!11771 = !DILocation(line: 5320, column: 5, scope: !11769)
!11772 = !DILocation(line: 5321, column: 18, scope: !1986)
!11773 = !DILocation(line: 5321, column: 3, scope: !1986)
!11774 = !DILocation(line: 5322, column: 4, scope: !1986)
!11775 = !DILocation(line: 5322, column: 12, scope: !1986)
!11776 = !DILocation(line: 5322, column: 31, scope: !1986)
!11777 = !DILocation(line: 5322, column: 39, scope: !1986)
!11778 = !DILocation(line: 5322, column: 54, scope: !1986)
!11779 = !DILocation(line: 5322, column: 3, scope: !1986)
!11780 = !DILocation(line: 5323, column: 15, scope: !1986)
!11781 = !DILocation(line: 5323, column: 23, scope: !1986)
!11782 = !DILocation(line: 5323, column: 3, scope: !1986)
!11783 = !DILocation(line: 5324, column: 3, scope: !1986)
!11784 = !DILocation(line: 5325, column: 1, scope: !1986)
!11785 = !DILocation(line: 5961, column: 17, scope: !1367)
!11786 = !DILocation(line: 5961, column: 29, scope: !1367)
!11787 = !DILocation(line: 5963, column: 3, scope: !1367)
!11788 = !DILocation(line: 5963, column: 17, scope: !1367)
!11789 = !DILocation(line: 5963, column: 22, scope: !1367)
!11790 = !DILocation(line: 5963, column: 30, scope: !1367)
!11791 = !DILocation(line: 5964, column: 3, scope: !1367)
!11792 = !DILocation(line: 5964, column: 11, scope: !11793)
!11793 = !DILexicalBlockFile(scope: !11794, file: !162, discriminator: 2)
!11794 = !DILexicalBlockFile(scope: !1367, file: !162, discriminator: 1)
!11795 = !DILocation(line: 5964, column: 10, scope: !1367)
!11796 = !DILocation(line: 5965, column: 12, scope: !1367)
!11797 = !DILocation(line: 5965, column: 15, scope: !1367)
!11798 = !DILocation(line: 5965, column: 46, scope: !1367)
!11799 = !DILocation(line: 5965, column: 44, scope: !1367)
!11800 = !DILocation(line: 5965, column: 28, scope: !1367)
!11801 = !DILocation(line: 5965, column: 26, scope: !1367)
!11802 = !DILocation(line: 5965, column: 7, scope: !1367)
!11803 = !DILocation(line: 5966, column: 10, scope: !1367)
!11804 = !DILocation(line: 5967, column: 1, scope: !1367)
!11805 = !DILocation(line: 5966, column: 3, scope: !1367)
!11806 = !DILocation(line: 5952, column: 11, scope: !1374)
!11807 = !DILocation(line: 5952, column: 19, scope: !1374)
!11808 = !DILocation(line: 5954, column: 3, scope: !1374)
!11809 = !DILocation(line: 5954, column: 11, scope: !11810)
!11810 = !DILexicalBlockFile(scope: !11811, file: !162, discriminator: 2)
!11811 = !DILexicalBlockFile(scope: !11812, file: !162, discriminator: 1)
!11812 = distinct !DILexicalBlock(scope: !11813, file: !162, line: 5954, column: 3)
!11813 = distinct !DILexicalBlock(scope: !1374, file: !162, line: 5954, column: 3)
!11814 = !DILocation(line: 5954, column: 10, scope: !11812)
!11815 = !DILocation(line: 5954, column: 18, scope: !11812)
!11816 = !DILocation(line: 5954, column: 17, scope: !11812)
!11817 = !DILocation(line: 5954, column: 14, scope: !11812)
!11818 = !DILocation(line: 5954, column: 3, scope: !11813)
!11819 = !DILocation(line: 5955, column: 10, scope: !11820)
!11820 = distinct !DILexicalBlock(scope: !11812, file: !162, line: 5955, column: 9)
!11821 = !DILocation(line: 5955, column: 9, scope: !11820)
!11822 = !DILocation(line: 5955, column: 13, scope: !11820)
!11823 = !DILocation(line: 5955, column: 9, scope: !11812)
!11824 = !DILocation(line: 5956, column: 7, scope: !11820)
!11825 = !DILocation(line: 5955, column: 16, scope: !11826)
!11826 = !DILexicalBlockFile(scope: !11820, file: !162, discriminator: 1)
!11827 = !DILocation(line: 5954, column: 24, scope: !11812)
!11828 = !DILocation(line: 5954, column: 30, scope: !11812)
!11829 = !DILocation(line: 5954, column: 3, scope: !11812)
!11830 = !DILocation(line: 5957, column: 3, scope: !1374)
!11831 = !DILocation(line: 5958, column: 1, scope: !1374)
!11832 = !DILocation(line: 2231, column: 22, scope: !1394)
!11833 = !DILocation(line: 2232, column: 15, scope: !1394)
!11834 = !DILocation(line: 2233, column: 27, scope: !1394)
!11835 = !DILocation(line: 2234, column: 23, scope: !1394)
!11836 = !DILocation(line: 2235, column: 23, scope: !1394)
!11837 = !DILocation(line: 2236, column: 24, scope: !1394)
!11838 = !DILocation(line: 2237, column: 20, scope: !1394)
!11839 = !DILocation(line: 2240, column: 3, scope: !1394)
!11840 = !DILocation(line: 2240, column: 15, scope: !1394)
!11841 = !DILocation(line: 2240, column: 22, scope: !1394)
!11842 = !DILocation(line: 2240, column: 30, scope: !1394)
!11843 = !DILocation(line: 2242, column: 3, scope: !1394)
!11844 = !DILocation(line: 2242, column: 16, scope: !1394)
!11845 = !DILocation(line: 2243, column: 3, scope: !1394)
!11846 = !DILocation(line: 2243, column: 16, scope: !1394)
!11847 = !DILocation(line: 2244, column: 7, scope: !11848)
!11848 = distinct !DILexicalBlock(scope: !1394, file: !162, line: 2244, column: 7)
!11849 = !DILocation(line: 2244, column: 15, scope: !11848)
!11850 = !DILocation(line: 2244, column: 23, scope: !11848)
!11851 = !DILocation(line: 2244, column: 11, scope: !11848)
!11852 = !DILocation(line: 2244, column: 7, scope: !1394)
!11853 = !DILocation(line: 2245, column: 17, scope: !11854)
!11854 = distinct !DILexicalBlock(scope: !11848, file: !162, line: 2244, column: 36)
!11855 = !DILocation(line: 2245, column: 25, scope: !11854)
!11856 = !DILocation(line: 2245, column: 13, scope: !11854)
!11857 = !DILocation(line: 2246, column: 20, scope: !11854)
!11858 = !DILocation(line: 2246, column: 28, scope: !11854)
!11859 = !DILocation(line: 2246, column: 16, scope: !11854)
!11860 = !DILocation(line: 2247, column: 3, scope: !11854)
!11861 = !DILocation(line: 2249, column: 18, scope: !11862)
!11862 = distinct !DILexicalBlock(scope: !11848, file: !162, line: 2248, column: 8)
!11863 = !DILocation(line: 2249, column: 26, scope: !11862)
!11864 = !DILocation(line: 2249, column: 51, scope: !11862)
!11865 = !DILocation(line: 2249, column: 13, scope: !11862)
!11866 = !DILocation(line: 2250, column: 21, scope: !11862)
!11867 = !DILocation(line: 2250, column: 29, scope: !11862)
!11868 = !DILocation(line: 2250, column: 54, scope: !11862)
!11869 = !DILocation(line: 2250, column: 16, scope: !11862)
!11870 = !DILocation(line: 2252, column: 14, scope: !1394)
!11871 = !DILocation(line: 2252, column: 4, scope: !1394)
!11872 = !DILocation(line: 2252, column: 12, scope: !1394)
!11873 = !DILocation(line: 2254, column: 3, scope: !1394)
!11874 = !DILocation(line: 2255, column: 5, scope: !1409)
!11875 = !DILocation(line: 2255, column: 17, scope: !1409)
!11876 = !DILocation(line: 2255, column: 24, scope: !1409)
!11877 = !DILocation(line: 2256, column: 5, scope: !1409)
!11878 = !DILocation(line: 2256, column: 9, scope: !1409)
!11879 = !DILocation(line: 2256, column: 18, scope: !1409)
!11880 = !DILocation(line: 2256, column: 24, scope: !1409)
!11881 = !DILocation(line: 2256, column: 17, scope: !1409)
!11882 = !DILocation(line: 2256, column: 37, scope: !1409)
!11883 = !DILocation(line: 2256, column: 42, scope: !1409)
!11884 = !DILocation(line: 2256, column: 45, scope: !1409)
!11885 = !DILocation(line: 2256, column: 16, scope: !1409)
!11886 = !DILocation(line: 2257, column: 19, scope: !1409)
!11887 = !DILocation(line: 2257, column: 6, scope: !1409)
!11888 = !DILocation(line: 2257, column: 17, scope: !1409)
!11889 = !DILocation(line: 2258, column: 13, scope: !1409)
!11890 = !DILocation(line: 2258, column: 5, scope: !1409)
!11891 = !DILocation(line: 2260, column: 11, scope: !11892)
!11892 = distinct !DILexicalBlock(scope: !1416, file: !162, line: 2260, column: 11)
!11893 = !DILocation(line: 2260, column: 11, scope: !1416)
!11894 = !DILocation(line: 2261, column: 20, scope: !11895)
!11895 = distinct !DILexicalBlock(scope: !11892, file: !162, line: 2260, column: 21)
!11896 = !DILocation(line: 2261, column: 10, scope: !11895)
!11897 = !DILocation(line: 2261, column: 18, scope: !11895)
!11898 = !DILocation(line: 2262, column: 9, scope: !11895)
!11899 = !DILocation(line: 2264, column: 21, scope: !1416)
!11900 = !DILocation(line: 2264, column: 8, scope: !1416)
!11901 = !DILocation(line: 2264, column: 19, scope: !1416)
!11902 = !DILocation(line: 2265, column: 12, scope: !1415)
!11903 = !DILocation(line: 2265, column: 20, scope: !1415)
!11904 = !DILocation(line: 2265, column: 11, scope: !1415)
!11905 = !DILocation(line: 2265, column: 11, scope: !1416)
!11906 = !DILocation(line: 2266, column: 9, scope: !1414)
!11907 = !DILocation(line: 2266, column: 18, scope: !1414)
!11908 = !DILocation(line: 2267, column: 10, scope: !1414)
!11909 = !DILocation(line: 2267, column: 18, scope: !1414)
!11910 = !DILocation(line: 2267, column: 43, scope: !1414)
!11911 = !DILocation(line: 2267, column: 51, scope: !1414)
!11912 = !DILocation(line: 2267, column: 9, scope: !1414)
!11913 = !DILocation(line: 2268, column: 7, scope: !1415)
!11914 = !DILocation(line: 2268, column: 7, scope: !1414)
!11915 = !DILocation(line: 2269, column: 17, scope: !11916)
!11916 = distinct !DILexicalBlock(scope: !1415, file: !162, line: 2269, column: 16)
!11917 = !DILocation(line: 2269, column: 25, scope: !11916)
!11918 = !DILocation(line: 2269, column: 16, scope: !11916)
!11919 = !DILocation(line: 2269, column: 16, scope: !1415)
!11920 = !DILocation(line: 2270, column: 23, scope: !11916)
!11921 = !DILocation(line: 2270, column: 31, scope: !11916)
!11922 = !DILocation(line: 2270, column: 36, scope: !11916)
!11923 = !DILocation(line: 2270, column: 39, scope: !11916)
!11924 = !DILocation(line: 2270, column: 9, scope: !11916)
!11925 = !DILocation(line: 2274, column: 11, scope: !11926)
!11926 = distinct !DILexicalBlock(scope: !1416, file: !162, line: 2274, column: 11)
!11927 = !DILocation(line: 2274, column: 25, scope: !11926)
!11928 = !DILocation(line: 2274, column: 11, scope: !1416)
!11929 = !DILocation(line: 2275, column: 9, scope: !11926)
!11930 = !DILocation(line: 2276, column: 12, scope: !11931)
!11931 = distinct !DILexicalBlock(scope: !1416, file: !162, line: 2276, column: 11)
!11932 = !DILocation(line: 2276, column: 20, scope: !11931)
!11933 = !DILocation(line: 2276, column: 35, scope: !11931)
!11934 = !DILocation(line: 2276, column: 32, scope: !11931)
!11935 = !DILocation(line: 2276, column: 11, scope: !1416)
!11936 = !DILocation(line: 2277, column: 9, scope: !11931)
!11937 = !DILocation(line: 2278, column: 18, scope: !1416)
!11938 = !DILocation(line: 2278, column: 8, scope: !1416)
!11939 = !DILocation(line: 2278, column: 16, scope: !1416)
!11940 = !DILocation(line: 2279, column: 7, scope: !1416)
!11941 = !DILocation(line: 2281, column: 11, scope: !11942)
!11942 = distinct !DILexicalBlock(scope: !1416, file: !162, line: 2281, column: 11)
!11943 = !DILocation(line: 2281, column: 11, scope: !1416)
!11944 = !DILocation(line: 2282, column: 20, scope: !11945)
!11945 = distinct !DILexicalBlock(scope: !11942, file: !162, line: 2281, column: 21)
!11946 = !DILocation(line: 2282, column: 10, scope: !11945)
!11947 = !DILocation(line: 2282, column: 18, scope: !11945)
!11948 = !DILocation(line: 2283, column: 9, scope: !11945)
!11949 = !DILocation(line: 2285, column: 11, scope: !11950)
!11950 = distinct !DILexicalBlock(scope: !1416, file: !162, line: 2285, column: 11)
!11951 = !DILocation(line: 2285, column: 25, scope: !11950)
!11952 = !DILocation(line: 2285, column: 11, scope: !1416)
!11953 = !DILocation(line: 2286, column: 14, scope: !11954)
!11954 = distinct !DILexicalBlock(scope: !11955, file: !162, line: 2286, column: 13)
!11955 = distinct !DILexicalBlock(scope: !11950, file: !162, line: 2285, column: 30)
!11956 = !DILocation(line: 2286, column: 22, scope: !11954)
!11957 = !DILocation(line: 2286, column: 37, scope: !11954)
!11958 = !DILocation(line: 2286, column: 34, scope: !11954)
!11959 = !DILocation(line: 2286, column: 13, scope: !11955)
!11960 = !DILocation(line: 2287, column: 11, scope: !11954)
!11961 = !DILocation(line: 2288, column: 20, scope: !11955)
!11962 = !DILocation(line: 2288, column: 10, scope: !11955)
!11963 = !DILocation(line: 2288, column: 18, scope: !11955)
!11964 = !DILocation(line: 2289, column: 9, scope: !11955)
!11965 = !DILocation(line: 2291, column: 7, scope: !1416)
!11966 = !DILocation(line: 2293, column: 18, scope: !1416)
!11967 = !DILocation(line: 2293, column: 8, scope: !1416)
!11968 = !DILocation(line: 2293, column: 16, scope: !1416)
!11969 = !DILocation(line: 2294, column: 7, scope: !1416)
!11970 = !DILocation(line: 2296, column: 11, scope: !11971)
!11971 = distinct !DILexicalBlock(scope: !1416, file: !162, line: 2296, column: 11)
!11972 = !DILocation(line: 2296, column: 11, scope: !1416)
!11973 = !DILocation(line: 2297, column: 20, scope: !11974)
!11974 = distinct !DILexicalBlock(scope: !11971, file: !162, line: 2296, column: 21)
!11975 = !DILocation(line: 2297, column: 10, scope: !11974)
!11976 = !DILocation(line: 2297, column: 18, scope: !11974)
!11977 = !DILocation(line: 2298, column: 9, scope: !11974)
!11978 = !DILocation(line: 2300, column: 7, scope: !1416)
!11979 = !DILocation(line: 2302, column: 11, scope: !11980)
!11980 = distinct !DILexicalBlock(scope: !1416, file: !162, line: 2302, column: 11)
!11981 = !DILocation(line: 2302, column: 11, scope: !1416)
!11982 = !DILocation(line: 2303, column: 20, scope: !11983)
!11983 = distinct !DILexicalBlock(scope: !11980, file: !162, line: 2302, column: 21)
!11984 = !DILocation(line: 2303, column: 10, scope: !11983)
!11985 = !DILocation(line: 2303, column: 18, scope: !11983)
!11986 = !DILocation(line: 2304, column: 9, scope: !11983)
!11987 = !DILocation(line: 2306, column: 7, scope: !1416)
!11988 = !DILocation(line: 2309, column: 9, scope: !1418)
!11989 = !DILocation(line: 2309, column: 25, scope: !1418)
!11990 = !DILocation(line: 2310, column: 9, scope: !1418)
!11991 = !DILocation(line: 2310, column: 17, scope: !1418)
!11992 = !DILocation(line: 2311, column: 9, scope: !1418)
!11993 = !DILocation(line: 2311, column: 18, scope: !1418)
!11994 = !DILocation(line: 2311, column: 37, scope: !1418)
!11995 = !DILocation(line: 2311, column: 43, scope: !1418)
!11996 = !DILocation(line: 2311, column: 65, scope: !1418)
!11997 = !DILocation(line: 2311, column: 70, scope: !1418)
!11998 = !DILocation(line: 2311, column: 74, scope: !1418)
!11999 = !DILocation(line: 2311, column: 79, scope: !1418)
!12000 = !DILocation(line: 2311, column: 72, scope: !1418)
!12001 = !DILocation(line: 2311, column: 96, scope: !1418)
!12002 = !DILocation(line: 2311, column: 103, scope: !1418)
!12003 = !DILocation(line: 2311, column: 108, scope: !1418)
!12004 = !DILocation(line: 2311, column: 101, scope: !1418)
!12005 = !DILocation(line: 2311, column: 35, scope: !1418)
!12006 = !DILocation(line: 2311, column: 23, scope: !1418)
!12007 = !DILocation(line: 2314, column: 13, scope: !12008)
!12008 = distinct !DILexicalBlock(scope: !1418, file: !162, line: 2314, column: 13)
!12009 = !DILocation(line: 2314, column: 13, scope: !1418)
!12010 = !DILocation(line: 2315, column: 16, scope: !12011)
!12011 = distinct !DILexicalBlock(scope: !12012, file: !162, line: 2315, column: 15)
!12012 = distinct !DILexicalBlock(scope: !12008, file: !162, line: 2314, column: 17)
!12013 = !DILocation(line: 2315, column: 24, scope: !12011)
!12014 = !DILocation(line: 2315, column: 15, scope: !12011)
!12015 = !DILocation(line: 2315, column: 15, scope: !12012)
!12016 = !DILocation(line: 2316, column: 14, scope: !12011)
!12017 = !DILocation(line: 2316, column: 22, scope: !12011)
!12018 = !DILocation(line: 2316, column: 47, scope: !12011)
!12019 = !DILocation(line: 2316, column: 55, scope: !12011)
!12020 = !DILocation(line: 2316, column: 13, scope: !12011)
!12021 = !DILocation(line: 2317, column: 21, scope: !12022)
!12022 = distinct !DILexicalBlock(scope: !12011, file: !162, line: 2317, column: 20)
!12023 = !DILocation(line: 2317, column: 29, scope: !12022)
!12024 = !DILocation(line: 2317, column: 20, scope: !12022)
!12025 = !DILocation(line: 2317, column: 20, scope: !12011)
!12026 = !DILocation(line: 2318, column: 27, scope: !12022)
!12027 = !DILocation(line: 2318, column: 35, scope: !12022)
!12028 = !DILocation(line: 2318, column: 40, scope: !12022)
!12029 = !DILocation(line: 2318, column: 43, scope: !12022)
!12030 = !DILocation(line: 2318, column: 13, scope: !12022)
!12031 = !DILocation(line: 2319, column: 11, scope: !12012)
!12032 = !DILocation(line: 2321, column: 33, scope: !1418)
!12033 = !DILocation(line: 2321, column: 38, scope: !1418)
!12034 = !DILocation(line: 2321, column: 44, scope: !1418)
!12035 = !DILocation(line: 2322, column: 33, scope: !1418)
!12036 = !DILocation(line: 2322, column: 37, scope: !1418)
!12037 = !DILocation(line: 2322, column: 42, scope: !1418)
!12038 = !DILocation(line: 2322, column: 35, scope: !1418)
!12039 = !DILocation(line: 2323, column: 33, scope: !1418)
!12040 = !DILocation(line: 2323, column: 40, scope: !1418)
!12041 = !DILocation(line: 2323, column: 45, scope: !1418)
!12042 = !DILocation(line: 2323, column: 38, scope: !1418)
!12043 = !DILocation(line: 2321, column: 16, scope: !1418)
!12044 = !DILocation(line: 2321, column: 14, scope: !1418)
!12045 = !DILocation(line: 2324, column: 14, scope: !12046)
!12046 = distinct !DILexicalBlock(scope: !1418, file: !162, line: 2324, column: 13)
!12047 = !DILocation(line: 2324, column: 13, scope: !1418)
!12048 = !DILocation(line: 2325, column: 11, scope: !12046)
!12049 = !DILocation(line: 2326, column: 35, scope: !1418)
!12050 = !DILocation(line: 2326, column: 44, scope: !1418)
!12051 = !DILocation(line: 2326, column: 49, scope: !1418)
!12052 = !DILocation(line: 2326, column: 66, scope: !1418)
!12053 = !DILocation(line: 2326, column: 28, scope: !1418)
!12054 = !DILocation(line: 2326, column: 18, scope: !1418)
!12055 = !DILocation(line: 2326, column: 16, scope: !1418)
!12056 = !DILocation(line: 2327, column: 32, scope: !1418)
!12057 = !DILocation(line: 2327, column: 37, scope: !1418)
!12058 = !DILocation(line: 2327, column: 44, scope: !1418)
!12059 = !DILocation(line: 2327, column: 12, scope: !1418)
!12060 = !DILocation(line: 2327, column: 17, scope: !1418)
!12061 = !DILocation(line: 2327, column: 24, scope: !1418)
!12062 = !DILocation(line: 2327, column: 28, scope: !1418)
!12063 = !DILocation(line: 2332, column: 14, scope: !12064)
!12064 = distinct !DILexicalBlock(scope: !1418, file: !162, line: 2332, column: 13)
!12065 = !DILocation(line: 2332, column: 19, scope: !12064)
!12066 = !DILocation(line: 2332, column: 38, scope: !12064)
!12067 = !DILocation(line: 2332, column: 41, scope: !12068)
!12068 = !DILexicalBlockFile(scope: !12064, file: !162, discriminator: 1)
!12069 = !DILocation(line: 2332, column: 46, scope: !12064)
!12070 = !DILocation(line: 2332, column: 41, scope: !12064)
!12071 = !DILocation(line: 2332, column: 13, scope: !1418)
!12072 = !DILocation(line: 2333, column: 16, scope: !12073)
!12073 = distinct !DILexicalBlock(scope: !12074, file: !162, line: 2333, column: 15)
!12074 = distinct !DILexicalBlock(scope: !12064, file: !162, line: 2332, column: 58)
!12075 = !DILocation(line: 2333, column: 15, scope: !12074)
!12076 = !DILocation(line: 2334, column: 13, scope: !12073)
!12077 = !DILocation(line: 2335, column: 21, scope: !12078)
!12078 = distinct !DILexicalBlock(scope: !12073, file: !162, line: 2335, column: 20)
!12079 = !DILocation(line: 2335, column: 29, scope: !12078)
!12080 = !DILocation(line: 2335, column: 20, scope: !12073)
!12081 = !DILocation(line: 2336, column: 13, scope: !12078)
!12082 = !DILocation(line: 2337, column: 9, scope: !12074)
!12083 = !DILocation(line: 2338, column: 19, scope: !12084)
!12084 = distinct !DILexicalBlock(scope: !12064, file: !162, line: 2338, column: 18)
!12085 = !DILocation(line: 2338, column: 18, scope: !12064)
!12086 = !DILocation(line: 2339, column: 16, scope: !12087)
!12087 = distinct !DILexicalBlock(scope: !12088, file: !162, line: 2339, column: 15)
!12088 = distinct !DILexicalBlock(scope: !12084, file: !162, line: 2338, column: 27)
!12089 = !DILocation(line: 2339, column: 24, scope: !12087)
!12090 = !DILocation(line: 2339, column: 15, scope: !12087)
!12091 = !DILocation(line: 2339, column: 15, scope: !12088)
!12092 = !DILocation(line: 2340, column: 14, scope: !12087)
!12093 = !DILocation(line: 2340, column: 22, scope: !12087)
!12094 = !DILocation(line: 2340, column: 47, scope: !12087)
!12095 = !DILocation(line: 2340, column: 55, scope: !12087)
!12096 = !DILocation(line: 2340, column: 70, scope: !12087)
!12097 = !DILocation(line: 2340, column: 13, scope: !12087)
!12098 = !DILocation(line: 2341, column: 21, scope: !12099)
!12099 = distinct !DILexicalBlock(scope: !12087, file: !162, line: 2341, column: 20)
!12100 = !DILocation(line: 2341, column: 29, scope: !12099)
!12101 = !DILocation(line: 2341, column: 20, scope: !12099)
!12102 = !DILocation(line: 2341, column: 20, scope: !12087)
!12103 = !DILocation(line: 2342, column: 27, scope: !12099)
!12104 = !DILocation(line: 2342, column: 35, scope: !12099)
!12105 = !DILocation(line: 2342, column: 40, scope: !12099)
!12106 = !DILocation(line: 2342, column: 43, scope: !12099)
!12107 = !DILocation(line: 2342, column: 13, scope: !12099)
!12108 = !DILocation(line: 2343, column: 11, scope: !12088)
!12109 = !DILocation(line: 2345, column: 13, scope: !12110)
!12110 = distinct !DILexicalBlock(scope: !1418, file: !162, line: 2345, column: 13)
!12111 = !DILocation(line: 2345, column: 21, scope: !12110)
!12112 = !DILocation(line: 2345, column: 13, scope: !1418)
!12113 = !DILocation(line: 2346, column: 11, scope: !12110)
!12114 = !DILocation(line: 2347, column: 13, scope: !12115)
!12115 = distinct !DILexicalBlock(scope: !1418, file: !162, line: 2347, column: 13)
!12116 = !DILocation(line: 2347, column: 21, scope: !12115)
!12117 = !DILocation(line: 2347, column: 13, scope: !1418)
!12118 = !DILocation(line: 2348, column: 11, scope: !12115)
!12119 = !DILocation(line: 2349, column: 13, scope: !1423)
!12120 = !DILocation(line: 2349, column: 21, scope: !1423)
!12121 = !DILocation(line: 2349, column: 13, scope: !1418)
!12122 = !DILocation(line: 2350, column: 11, scope: !1422)
!12123 = !DILocation(line: 2350, column: 26, scope: !1422)
!12124 = !DILocation(line: 2351, column: 17, scope: !12125)
!12125 = distinct !DILexicalBlock(scope: !1422, file: !162, line: 2351, column: 15)
!12126 = !DILocation(line: 2351, column: 25, scope: !12125)
!12127 = !DILocation(line: 2351, column: 16, scope: !12125)
!12128 = !DILocation(line: 2351, column: 15, scope: !1422)
!12129 = !DILocation(line: 2352, column: 18, scope: !12130)
!12130 = distinct !DILexicalBlock(scope: !12131, file: !162, line: 2352, column: 17)
!12131 = distinct !DILexicalBlock(scope: !12125, file: !162, line: 2351, column: 59)
!12132 = !DILocation(line: 2352, column: 26, scope: !12130)
!12133 = !DILocation(line: 2352, column: 17, scope: !12130)
!12134 = !DILocation(line: 2352, column: 17, scope: !12131)
!12135 = !DILocation(line: 2353, column: 16, scope: !12130)
!12136 = !DILocation(line: 2353, column: 24, scope: !12130)
!12137 = !DILocation(line: 2353, column: 49, scope: !12130)
!12138 = !DILocation(line: 2353, column: 57, scope: !12130)
!12139 = !DILocation(line: 2353, column: 72, scope: !12130)
!12140 = !DILocation(line: 2353, column: 80, scope: !12130)
!12141 = !DILocation(line: 2353, column: 15, scope: !12130)
!12142 = !DILocation(line: 2354, column: 23, scope: !12143)
!12143 = distinct !DILexicalBlock(scope: !12130, file: !162, line: 2354, column: 22)
!12144 = !DILocation(line: 2354, column: 31, scope: !12143)
!12145 = !DILocation(line: 2354, column: 22, scope: !12143)
!12146 = !DILocation(line: 2354, column: 22, scope: !12130)
!12147 = !DILocation(line: 2355, column: 29, scope: !12143)
!12148 = !DILocation(line: 2355, column: 37, scope: !12143)
!12149 = !DILocation(line: 2355, column: 42, scope: !12143)
!12150 = !DILocation(line: 2355, column: 45, scope: !12143)
!12151 = !DILocation(line: 2355, column: 15, scope: !12143)
!12152 = !DILocation(line: 2356, column: 13, scope: !12131)
!12153 = !DILocation(line: 2358, column: 42, scope: !1422)
!12154 = !DILocation(line: 2358, column: 50, scope: !1422)
!12155 = !DILocation(line: 2358, column: 20, scope: !1422)
!12156 = !DILocation(line: 2358, column: 18, scope: !1422)
!12157 = !DILocation(line: 2359, column: 15, scope: !12158)
!12158 = distinct !DILexicalBlock(scope: !1422, file: !162, line: 2359, column: 15)
!12159 = !DILocation(line: 2359, column: 22, scope: !12158)
!12160 = !DILocation(line: 2359, column: 15, scope: !1422)
!12161 = !DILocation(line: 2360, column: 20, scope: !12158)
!12162 = !DILocation(line: 2360, column: 13, scope: !12158)
!12163 = !DILocation(line: 2361, column: 9, scope: !1423)
!12164 = !DILocation(line: 2361, column: 9, scope: !12165)
!12165 = !DILexicalBlockFile(scope: !1423, file: !162, discriminator: 1)
!12166 = !DILocation(line: 2361, column: 9, scope: !1422)
!12167 = !DILocation(line: 2362, column: 19, scope: !1426)
!12168 = !DILocation(line: 2362, column: 27, scope: !1426)
!12169 = !DILocation(line: 2362, column: 18, scope: !1426)
!12170 = !DILocation(line: 2362, column: 18, scope: !1423)
!12171 = !DILocation(line: 2363, column: 11, scope: !1425)
!12172 = !DILocation(line: 2363, column: 27, scope: !1425)
!12173 = !DILocation(line: 2364, column: 11, scope: !1425)
!12174 = !DILocation(line: 2364, column: 19, scope: !1425)
!12175 = !DILocation(line: 2364, column: 24, scope: !1425)
!12176 = !DILocation(line: 2365, column: 32, scope: !1425)
!12177 = !DILocation(line: 2365, column: 21, scope: !1425)
!12178 = !DILocation(line: 2365, column: 19, scope: !1425)
!12179 = !DILocation(line: 2366, column: 11, scope: !1425)
!12180 = !DILocation(line: 2366, column: 19, scope: !1425)
!12181 = !DILocation(line: 2366, column: 24, scope: !1425)
!12182 = !DILocation(line: 2367, column: 16, scope: !12183)
!12183 = distinct !DILexicalBlock(scope: !1425, file: !162, line: 2367, column: 15)
!12184 = !DILocation(line: 2367, column: 15, scope: !1425)
!12185 = !DILocation(line: 2368, column: 13, scope: !12183)
!12186 = !DILocation(line: 2369, column: 17, scope: !12187)
!12187 = distinct !DILexicalBlock(scope: !1425, file: !162, line: 2369, column: 15)
!12188 = !DILocation(line: 2369, column: 25, scope: !12187)
!12189 = !DILocation(line: 2369, column: 54, scope: !12187)
!12190 = !DILocation(line: 2369, column: 62, scope: !12187)
!12191 = !DILocation(line: 2370, column: 41, scope: !12187)
!12192 = !DILocation(line: 2371, column: 41, scope: !12187)
!12193 = !DILocation(line: 2371, column: 49, scope: !12187)
!12194 = !DILocation(line: 2372, column: 41, scope: !12187)
!12195 = !DILocation(line: 2372, column: 49, scope: !12187)
!12196 = !DILocation(line: 2373, column: 41, scope: !12187)
!12197 = !DILocation(line: 2373, column: 49, scope: !12187)
!12198 = !DILocation(line: 2369, column: 16, scope: !12187)
!12199 = !DILocation(line: 2369, column: 15, scope: !1425)
!12200 = !DILocation(line: 2374, column: 13, scope: !12187)
!12201 = !DILocation(line: 2375, column: 46, scope: !1425)
!12202 = !DILocation(line: 2375, column: 54, scope: !1425)
!12203 = !DILocation(line: 2375, column: 68, scope: !1425)
!12204 = !DILocation(line: 2375, column: 15, scope: !1425)
!12205 = !DILocation(line: 2375, column: 23, scope: !1425)
!12206 = !DILocation(line: 2375, column: 37, scope: !1425)
!12207 = !DILocation(line: 2375, column: 41, scope: !1425)
!12208 = !DILocation(line: 2376, column: 9, scope: !1426)
!12209 = !DILocation(line: 2376, column: 9, scope: !12210)
!12210 = !DILexicalBlockFile(scope: !1426, file: !162, discriminator: 1)
!12211 = !DILocation(line: 2376, column: 9, scope: !1425)
!12212 = !DILocation(line: 2377, column: 19, scope: !12213)
!12213 = distinct !DILexicalBlock(scope: !1426, file: !162, line: 2377, column: 18)
!12214 = !DILocation(line: 2377, column: 27, scope: !12213)
!12215 = !DILocation(line: 2377, column: 18, scope: !12213)
!12216 = !DILocation(line: 2377, column: 18, scope: !1426)
!12217 = !DILocation(line: 2378, column: 25, scope: !12213)
!12218 = !DILocation(line: 2378, column: 33, scope: !12213)
!12219 = !DILocation(line: 2378, column: 38, scope: !12213)
!12220 = !DILocation(line: 2378, column: 41, scope: !12213)
!12221 = !DILocation(line: 2378, column: 11, scope: !12213)
!12222 = !DILocation(line: 2379, column: 9, scope: !1418)
!12223 = !DILocation(line: 2380, column: 7, scope: !1416)
!12224 = !DILocation(line: 2385, column: 9, scope: !1428)
!12225 = !DILocation(line: 2385, column: 14, scope: !1428)
!12226 = !DILocation(line: 2386, column: 9, scope: !1428)
!12227 = !DILocation(line: 2386, column: 24, scope: !1428)
!12228 = !DILocation(line: 2387, column: 9, scope: !1428)
!12229 = !DILocation(line: 2387, column: 19, scope: !1428)
!12230 = !DILocation(line: 2388, column: 14, scope: !12231)
!12231 = distinct !DILexicalBlock(scope: !1428, file: !162, line: 2388, column: 13)
!12232 = !DILocation(line: 2388, column: 22, scope: !12231)
!12233 = !DILocation(line: 2388, column: 13, scope: !12231)
!12234 = !DILocation(line: 2388, column: 13, scope: !1428)
!12235 = !DILocation(line: 2389, column: 18, scope: !12236)
!12236 = distinct !DILexicalBlock(scope: !12231, file: !162, line: 2388, column: 38)
!12237 = !DILocation(line: 2389, column: 26, scope: !12236)
!12238 = !DILocation(line: 2389, column: 15, scope: !12236)
!12239 = !DILocation(line: 2390, column: 38, scope: !12236)
!12240 = !DILocation(line: 2390, column: 46, scope: !12236)
!12241 = !DILocation(line: 2390, column: 62, scope: !12236)
!12242 = !DILocation(line: 2390, column: 12, scope: !12236)
!12243 = !DILocation(line: 2390, column: 20, scope: !12236)
!12244 = !DILocation(line: 2390, column: 35, scope: !12236)
!12245 = !DILocation(line: 2391, column: 9, scope: !12236)
!12246 = !DILocation(line: 2393, column: 25, scope: !12247)
!12247 = distinct !DILexicalBlock(scope: !12231, file: !162, line: 2392, column: 14)
!12248 = !DILocation(line: 2393, column: 33, scope: !12247)
!12249 = !DILocation(line: 2393, column: 39, scope: !12247)
!12250 = !DILocation(line: 2393, column: 17, scope: !12247)
!12251 = !DILocation(line: 2393, column: 15, scope: !12247)
!12252 = !DILocation(line: 2394, column: 16, scope: !12253)
!12253 = distinct !DILexicalBlock(scope: !12247, file: !162, line: 2394, column: 15)
!12254 = !DILocation(line: 2394, column: 15, scope: !12247)
!12255 = !DILocation(line: 2395, column: 13, scope: !12253)
!12256 = !DILocation(line: 2396, column: 31, scope: !12247)
!12257 = !DILocation(line: 2396, column: 39, scope: !12247)
!12258 = !DILocation(line: 2396, column: 45, scope: !12247)
!12259 = !DILocation(line: 2396, column: 11, scope: !12247)
!12260 = !DILocation(line: 2396, column: 16, scope: !12247)
!12261 = !DILocation(line: 2396, column: 20, scope: !12247)
!12262 = !DILocation(line: 2397, column: 16, scope: !12263)
!12263 = distinct !DILexicalBlock(scope: !12247, file: !162, line: 2397, column: 15)
!12264 = !DILocation(line: 2397, column: 21, scope: !12263)
!12265 = !DILocation(line: 2397, column: 15, scope: !12247)
!12266 = !DILocation(line: 2398, column: 14, scope: !12267)
!12267 = distinct !DILexicalBlock(scope: !12263, file: !162, line: 2397, column: 26)
!12268 = !DILocation(line: 2398, column: 22, scope: !12267)
!12269 = !DILocation(line: 2398, column: 28, scope: !12267)
!12270 = !DILocation(line: 2398, column: 38, scope: !12267)
!12271 = !DILocation(line: 2398, column: 37, scope: !12267)
!12272 = !DILocation(line: 2399, column: 13, scope: !12267)
!12273 = !DILocation(line: 2401, column: 25, scope: !12247)
!12274 = !DILocation(line: 2401, column: 30, scope: !12247)
!12275 = !DILocation(line: 2401, column: 34, scope: !12247)
!12276 = !DILocation(line: 2401, column: 11, scope: !12247)
!12277 = !DILocation(line: 2401, column: 16, scope: !12247)
!12278 = !DILocation(line: 2401, column: 23, scope: !12247)
!12279 = !{!2641, !2290, i64 72}
!12280 = !DILocation(line: 2403, column: 9, scope: !1428)
!12281 = !DILocation(line: 2403, column: 14, scope: !1428)
!12282 = !DILocation(line: 2403, column: 23, scope: !1428)
!12283 = !DILocation(line: 2404, column: 24, scope: !1428)
!12284 = !DILocation(line: 2404, column: 32, scope: !1428)
!12285 = !DILocation(line: 2404, column: 9, scope: !1428)
!12286 = !DILocation(line: 2404, column: 14, scope: !1428)
!12287 = !DILocation(line: 2404, column: 21, scope: !1428)
!12288 = !DILocation(line: 2405, column: 32, scope: !1428)
!12289 = !DILocation(line: 2405, column: 10, scope: !1428)
!12290 = !DILocation(line: 2405, column: 18, scope: !1428)
!12291 = !DILocation(line: 2405, column: 30, scope: !1428)
!12292 = !DILocation(line: 2406, column: 9, scope: !1428)
!12293 = !DILocation(line: 2406, column: 14, scope: !1428)
!12294 = !DILocation(line: 2406, column: 19, scope: !1428)
!12295 = !DILocation(line: 2406, column: 29, scope: !1428)
!12296 = !{!2641, !2290, i64 32}
!12297 = !DILocation(line: 2407, column: 9, scope: !1428)
!12298 = !DILocation(line: 2407, column: 14, scope: !1428)
!12299 = !DILocation(line: 2407, column: 19, scope: !1428)
!12300 = !DILocation(line: 2407, column: 26, scope: !1428)
!12301 = !{!2641, !2290, i64 40}
!12302 = !DILocation(line: 2408, column: 24, scope: !1428)
!12303 = !DILocation(line: 2408, column: 28, scope: !1428)
!12304 = !DILocation(line: 2408, column: 33, scope: !1428)
!12305 = !DILocation(line: 2408, column: 26, scope: !1428)
!12306 = !DILocation(line: 2408, column: 9, scope: !1428)
!12307 = !DILocation(line: 2408, column: 14, scope: !1428)
!12308 = !DILocation(line: 2408, column: 22, scope: !1428)
!12309 = !{!2641, !2290, i64 8}
!12310 = !DILocation(line: 2409, column: 33, scope: !1428)
!12311 = !DILocation(line: 2409, column: 39, scope: !1428)
!12312 = !DILocation(line: 2409, column: 51, scope: !1428)
!12313 = !DILocation(line: 2409, column: 56, scope: !1428)
!12314 = !DILocation(line: 2409, column: 61, scope: !1428)
!12315 = !DILocation(line: 2409, column: 31, scope: !1428)
!12316 = !DILocation(line: 2409, column: 9, scope: !1428)
!12317 = !DILocation(line: 2409, column: 14, scope: !1428)
!12318 = !DILocation(line: 2409, column: 28, scope: !1428)
!12319 = !{!2641, !2400, i64 16}
!12320 = !DILocation(line: 2410, column: 12, scope: !1428)
!12321 = !DILocation(line: 2410, column: 20, scope: !1428)
!12322 = !DILocation(line: 2410, column: 9, scope: !1428)
!12323 = !DILocation(line: 2412, column: 11, scope: !1432)
!12324 = !DILocation(line: 2412, column: 23, scope: !1432)
!12325 = !DILocation(line: 2412, column: 36, scope: !1432)
!12326 = !DILocation(line: 2412, column: 41, scope: !1432)
!12327 = !DILocation(line: 2412, column: 51, scope: !1432)
!12328 = !DILocation(line: 2412, column: 56, scope: !1432)
!12329 = !DILocation(line: 2412, column: 49, scope: !1432)
!12330 = !DILocation(line: 2413, column: 11, scope: !1432)
!12331 = !DILocation(line: 2413, column: 23, scope: !1432)
!12332 = !DILocation(line: 2413, column: 33, scope: !1432)
!12333 = !DILocation(line: 2413, column: 38, scope: !1432)
!12334 = !DILocation(line: 2414, column: 31, scope: !1432)
!12335 = !DILocation(line: 2414, column: 36, scope: !1432)
!12336 = !DILocation(line: 2414, column: 17, scope: !1432)
!12337 = !DILocation(line: 2415, column: 11, scope: !1432)
!12338 = !DILocation(line: 2416, column: 13, scope: !1435)
!12339 = !DILocation(line: 2416, column: 17, scope: !1435)
!12340 = !DILocation(line: 2417, column: 13, scope: !1435)
!12341 = !DILocation(line: 2417, column: 17, scope: !1435)
!12342 = !DILocation(line: 2418, column: 16, scope: !1435)
!12343 = !DILocation(line: 2418, column: 22, scope: !1435)
!12344 = !DILocation(line: 2418, column: 35, scope: !1435)
!12345 = !DILocation(line: 2418, column: 50, scope: !1435)
!12346 = !DILocation(line: 2418, column: 89, scope: !1435)
!12347 = !DILocation(line: 2418, column: 94, scope: !1435)
!12348 = !DILocation(line: 2418, column: 101, scope: !1435)
!12349 = !DILocation(line: 2418, column: 14, scope: !1435)
!12350 = !DILocation(line: 2421, column: 29, scope: !1435)
!12351 = !DILocation(line: 2421, column: 49, scope: !1435)
!12352 = !DILocation(line: 2421, column: 54, scope: !1435)
!12353 = !DILocation(line: 2421, column: 35, scope: !1435)
!12354 = !DILocation(line: 2421, column: 23, scope: !1435)
!12355 = !DILocation(line: 2421, column: 21, scope: !1435)
!12356 = !DILocation(line: 2422, column: 17, scope: !12357)
!12357 = distinct !DILexicalBlock(scope: !1435, file: !162, line: 2422, column: 17)
!12358 = !DILocation(line: 2422, column: 28, scope: !12357)
!12359 = !DILocation(line: 2422, column: 25, scope: !12357)
!12360 = !DILocation(line: 2422, column: 17, scope: !1435)
!12361 = !DILocation(line: 2423, column: 34, scope: !12362)
!12362 = distinct !DILexicalBlock(scope: !12357, file: !162, line: 2422, column: 40)
!12363 = !DILocation(line: 2423, column: 15, scope: !12362)
!12364 = !DILocation(line: 2423, column: 20, scope: !12362)
!12365 = !DILocation(line: 2423, column: 25, scope: !12362)
!12366 = !DILocation(line: 2423, column: 32, scope: !12362)
!12367 = !{!2641, !2400, i64 48}
!12368 = !DILocation(line: 2424, column: 15, scope: !12362)
!12369 = !DILocation(line: 2426, column: 29, scope: !1435)
!12370 = !DILocation(line: 2426, column: 34, scope: !1435)
!12371 = !DILocation(line: 2426, column: 43, scope: !1435)
!12372 = !DILocation(line: 2426, column: 48, scope: !1435)
!12373 = !DILocation(line: 2426, column: 41, scope: !1435)
!12374 = !DILocation(line: 2426, column: 23, scope: !1435)
!12375 = !DILocation(line: 2426, column: 53, scope: !1435)
!12376 = !DILocation(line: 2426, column: 21, scope: !1435)
!12377 = !DILocation(line: 2428, column: 15, scope: !1440)
!12378 = !DILocation(line: 2428, column: 21, scope: !1440)
!12379 = !DILocation(line: 2428, column: 37, scope: !1440)
!12380 = !DILocation(line: 2428, column: 45, scope: !1440)
!12381 = !DILocation(line: 2428, column: 51, scope: !1440)
!12382 = !DILocation(line: 2428, column: 64, scope: !1440)
!12383 = !DILocation(line: 2428, column: 69, scope: !1440)
!12384 = !DILocation(line: 2428, column: 75, scope: !1440)
!12385 = !DILocation(line: 2428, column: 74, scope: !1440)
!12386 = !DILocation(line: 2429, column: 19, scope: !12387)
!12387 = distinct !DILexicalBlock(scope: !1440, file: !162, line: 2429, column: 19)
!12388 = !DILocation(line: 2429, column: 24, scope: !12387)
!12389 = !DILocation(line: 2429, column: 19, scope: !1440)
!12390 = !DILocation(line: 2430, column: 17, scope: !12387)
!12391 = !DILocation(line: 2431, column: 26, scope: !1440)
!12392 = !DILocation(line: 2431, column: 15, scope: !1440)
!12393 = !DILocation(line: 2431, column: 20, scope: !1440)
!12394 = !DILocation(line: 2431, column: 24, scope: !1440)
!12395 = !DILocation(line: 2432, column: 29, scope: !1440)
!12396 = !DILocation(line: 2432, column: 36, scope: !1440)
!12397 = !DILocation(line: 2432, column: 34, scope: !1440)
!12398 = !DILocation(line: 2432, column: 15, scope: !1440)
!12399 = !DILocation(line: 2432, column: 20, scope: !1440)
!12400 = !DILocation(line: 2432, column: 27, scope: !1440)
!12401 = !DILocation(line: 2433, column: 35, scope: !1440)
!12402 = !DILocation(line: 2433, column: 42, scope: !1440)
!12403 = !DILocation(line: 2433, column: 40, scope: !1440)
!12404 = !DILocation(line: 2433, column: 21, scope: !1440)
!12405 = !DILocation(line: 2434, column: 13, scope: !1435)
!12406 = !DILocation(line: 2434, column: 13, scope: !12407)
!12407 = !DILexicalBlockFile(scope: !1435, file: !162, discriminator: 1)
!12408 = !DILocation(line: 2435, column: 11, scope: !1436)
!12409 = !DILocation(line: 2435, column: 11, scope: !12410)
!12410 = !DILexicalBlockFile(scope: !1436, file: !162, discriminator: 1)
!12411 = !DILocation(line: 2415, column: 11, scope: !1436)
!12412 = !DILocation(line: 2436, column: 9, scope: !1428)
!12413 = !DILocation(line: 2436, column: 9, scope: !12414)
!12414 = !DILexicalBlockFile(scope: !1428, file: !162, discriminator: 1)
!12415 = !DILocation(line: 2437, column: 37, scope: !1428)
!12416 = !DILocation(line: 2437, column: 42, scope: !1428)
!12417 = !DILocation(line: 2437, column: 9, scope: !1428)
!12418 = !DILocation(line: 2437, column: 14, scope: !1428)
!12419 = !DILocation(line: 2437, column: 19, scope: !1428)
!12420 = !DILocation(line: 2437, column: 23, scope: !1428)
!12421 = !{!2641, !2290, i64 24}
!12422 = !DILocation(line: 2438, column: 10, scope: !1428)
!12423 = !DILocation(line: 2438, column: 16, scope: !1428)
!12424 = !DILocation(line: 2439, column: 28, scope: !1428)
!12425 = !DILocation(line: 2439, column: 36, scope: !1428)
!12426 = !DILocation(line: 2439, column: 41, scope: !1428)
!12427 = !DILocation(line: 2439, column: 46, scope: !1428)
!12428 = !DILocation(line: 2439, column: 51, scope: !1428)
!12429 = !DILocation(line: 2439, column: 60, scope: !1428)
!12430 = !DILocation(line: 2439, column: 65, scope: !1428)
!12431 = !DILocation(line: 2439, column: 18, scope: !1428)
!12432 = !DILocation(line: 2439, column: 16, scope: !1428)
!12433 = !DILocation(line: 2440, column: 13, scope: !12434)
!12434 = distinct !DILexicalBlock(scope: !1428, file: !162, line: 2440, column: 13)
!12435 = !DILocation(line: 2440, column: 13, scope: !1428)
!12436 = !DILocation(line: 2441, column: 18, scope: !12434)
!12437 = !DILocation(line: 2441, column: 11, scope: !12434)
!12438 = !DILocation(line: 2442, column: 14, scope: !12439)
!12439 = distinct !DILexicalBlock(scope: !1428, file: !162, line: 2442, column: 13)
!12440 = !DILocation(line: 2442, column: 22, scope: !12439)
!12441 = !DILocation(line: 2442, column: 13, scope: !12439)
!12442 = !DILocation(line: 2442, column: 13, scope: !1428)
!12443 = !DILocation(line: 2443, column: 12, scope: !12439)
!12444 = !DILocation(line: 2443, column: 20, scope: !12439)
!12445 = !DILocation(line: 2443, column: 44, scope: !12439)
!12446 = !DILocation(line: 2443, column: 52, scope: !12439)
!12447 = !DILocation(line: 2443, column: 67, scope: !12439)
!12448 = !DILocation(line: 2443, column: 72, scope: !12439)
!12449 = !DILocation(line: 2443, column: 77, scope: !12439)
!12450 = !DILocation(line: 2444, column: 51, scope: !12439)
!12451 = !DILocation(line: 2444, column: 59, scope: !12439)
!12452 = !DILocation(line: 2444, column: 31, scope: !12439)
!12453 = !DILocation(line: 2443, column: 11, scope: !12439)
!12454 = !DILocation(line: 2445, column: 19, scope: !12455)
!12455 = distinct !DILexicalBlock(scope: !12439, file: !162, line: 2445, column: 18)
!12456 = !DILocation(line: 2445, column: 27, scope: !12455)
!12457 = !DILocation(line: 2445, column: 18, scope: !12455)
!12458 = !DILocation(line: 2445, column: 18, scope: !12439)
!12459 = !DILocation(line: 2446, column: 25, scope: !12455)
!12460 = !DILocation(line: 2446, column: 33, scope: !12455)
!12461 = !DILocation(line: 2446, column: 38, scope: !12455)
!12462 = !DILocation(line: 2446, column: 41, scope: !12455)
!12463 = !DILocation(line: 2446, column: 11, scope: !12455)
!12464 = !DILocation(line: 2447, column: 21, scope: !1428)
!12465 = !DILocation(line: 2447, column: 29, scope: !1428)
!12466 = !DILocation(line: 2447, column: 9, scope: !1428)
!12467 = !DILocation(line: 2448, column: 9, scope: !1428)
!12468 = !DILocation(line: 2449, column: 7, scope: !1416)
!12469 = !DILocation(line: 2454, column: 9, scope: !1442)
!12470 = !DILocation(line: 2454, column: 21, scope: !1442)
!12471 = !DILocation(line: 2454, column: 31, scope: !1442)
!12472 = !DILocation(line: 2454, column: 35, scope: !1442)
!12473 = !DILocation(line: 2454, column: 40, scope: !1442)
!12474 = !DILocation(line: 2454, column: 33, scope: !1442)
!12475 = !DILocation(line: 2455, column: 9, scope: !1442)
!12476 = !DILocation(line: 2455, column: 24, scope: !1442)
!12477 = !DILocation(line: 2456, column: 9, scope: !1442)
!12478 = !DILocation(line: 2456, column: 18, scope: !1442)
!12479 = !DILocation(line: 2457, column: 9, scope: !1442)
!12480 = !DILocation(line: 2457, column: 18, scope: !1442)
!12481 = !DILocation(line: 2458, column: 9, scope: !1442)
!12482 = !DILocation(line: 2458, column: 18, scope: !1442)
!12483 = !DILocation(line: 2459, column: 38, scope: !1442)
!12484 = !DILocation(line: 2459, column: 46, scope: !1442)
!12485 = !DILocation(line: 2459, column: 59, scope: !1442)
!12486 = !DILocation(line: 2459, column: 64, scope: !1442)
!12487 = !DILocation(line: 2460, column: 36, scope: !1442)
!12488 = !DILocation(line: 2460, column: 49, scope: !1442)
!12489 = !DILocation(line: 2460, column: 55, scope: !1442)
!12490 = !DILocation(line: 2460, column: 67, scope: !1442)
!12491 = !DILocation(line: 2460, column: 72, scope: !1442)
!12492 = !DILocation(line: 2460, column: 47, scope: !1442)
!12493 = !DILocation(line: 2460, column: 44, scope: !1442)
!12494 = !DILocation(line: 2459, column: 20, scope: !1442)
!12495 = !DILocation(line: 2459, column: 14, scope: !1442)
!12496 = !DILocation(line: 2459, column: 18, scope: !1442)
!12497 = !{!2642, !2290, i64 0}
!12498 = !DILocation(line: 2461, column: 19, scope: !12499)
!12499 = distinct !DILexicalBlock(scope: !1442, file: !162, line: 2461, column: 13)
!12500 = !DILocation(line: 2461, column: 14, scope: !12499)
!12501 = !DILocation(line: 2461, column: 13, scope: !1442)
!12502 = !DILocation(line: 2462, column: 11, scope: !12499)
!12503 = !DILocation(line: 2463, column: 46, scope: !1442)
!12504 = !DILocation(line: 2463, column: 54, scope: !1442)
!12505 = !DILocation(line: 2463, column: 68, scope: !1442)
!12506 = !DILocation(line: 2463, column: 13, scope: !1442)
!12507 = !DILocation(line: 2463, column: 21, scope: !1442)
!12508 = !DILocation(line: 2463, column: 35, scope: !1442)
!12509 = !DILocation(line: 2463, column: 41, scope: !1442)
!12510 = !DILocation(line: 2464, column: 28, scope: !1442)
!12511 = !DILocation(line: 2464, column: 36, scope: !1442)
!12512 = !DILocation(line: 2464, column: 41, scope: !1442)
!12513 = !DILocation(line: 2464, column: 18, scope: !1442)
!12514 = !DILocation(line: 2464, column: 16, scope: !1442)
!12515 = !DILocation(line: 2465, column: 13, scope: !12516)
!12516 = distinct !DILexicalBlock(scope: !1442, file: !162, line: 2465, column: 13)
!12517 = !DILocation(line: 2465, column: 13, scope: !1442)
!12518 = !DILocation(line: 2466, column: 18, scope: !12516)
!12519 = !DILocation(line: 2466, column: 11, scope: !12516)
!12520 = !DILocation(line: 2467, column: 46, scope: !1442)
!12521 = !DILocation(line: 2467, column: 54, scope: !1442)
!12522 = !DILocation(line: 2467, column: 68, scope: !1442)
!12523 = !DILocation(line: 2467, column: 13, scope: !1442)
!12524 = !DILocation(line: 2467, column: 21, scope: !1442)
!12525 = !DILocation(line: 2467, column: 35, scope: !1442)
!12526 = !DILocation(line: 2467, column: 41, scope: !1442)
!12527 = !DILocation(line: 2468, column: 14, scope: !12528)
!12528 = distinct !DILexicalBlock(scope: !1442, file: !162, line: 2468, column: 13)
!12529 = !DILocation(line: 2468, column: 22, scope: !12528)
!12530 = !DILocation(line: 2468, column: 13, scope: !12528)
!12531 = !DILocation(line: 2468, column: 13, scope: !1442)
!12532 = !DILocation(line: 2469, column: 12, scope: !12533)
!12533 = distinct !DILexicalBlock(scope: !12528, file: !162, line: 2468, column: 46)
!12534 = !DILocation(line: 2469, column: 20, scope: !12533)
!12535 = !DILocation(line: 2469, column: 44, scope: !12533)
!12536 = !DILocation(line: 2469, column: 52, scope: !12533)
!12537 = !DILocation(line: 2469, column: 72, scope: !12533)
!12538 = !DILocation(line: 2469, column: 97, scope: !12533)
!12539 = !DILocation(line: 2469, column: 105, scope: !12533)
!12540 = !DILocation(line: 2469, column: 77, scope: !12533)
!12541 = !DILocation(line: 2469, column: 11, scope: !12533)
!12542 = !DILocation(line: 2470, column: 25, scope: !12533)
!12543 = !DILocation(line: 2471, column: 9, scope: !12533)
!12544 = !DILocation(line: 2472, column: 14, scope: !12545)
!12545 = distinct !DILexicalBlock(scope: !1442, file: !162, line: 2472, column: 13)
!12546 = !DILocation(line: 2472, column: 22, scope: !12545)
!12547 = !DILocation(line: 2472, column: 13, scope: !12545)
!12548 = !DILocation(line: 2472, column: 13, scope: !1442)
!12549 = !DILocation(line: 2473, column: 16, scope: !12550)
!12550 = distinct !DILexicalBlock(scope: !12551, file: !162, line: 2473, column: 15)
!12551 = distinct !DILexicalBlock(scope: !12545, file: !162, line: 2472, column: 44)
!12552 = !DILocation(line: 2473, column: 24, scope: !12550)
!12553 = !DILocation(line: 2473, column: 15, scope: !12550)
!12554 = !DILocation(line: 2473, column: 15, scope: !12551)
!12555 = !DILocation(line: 2474, column: 25, scope: !12550)
!12556 = !DILocation(line: 2474, column: 24, scope: !12550)
!12557 = !DILocation(line: 2474, column: 14, scope: !12550)
!12558 = !DILocation(line: 2474, column: 22, scope: !12550)
!12559 = !DILocation(line: 2474, column: 13, scope: !12550)
!12560 = !DILocation(line: 2475, column: 12, scope: !12551)
!12561 = !DILocation(line: 2475, column: 20, scope: !12551)
!12562 = !DILocation(line: 2475, column: 42, scope: !12551)
!12563 = !DILocation(line: 2475, column: 50, scope: !12551)
!12564 = !DILocation(line: 2475, column: 70, scope: !12551)
!12565 = !DILocation(line: 2475, column: 11, scope: !12551)
!12566 = !DILocation(line: 2476, column: 25, scope: !12551)
!12567 = !DILocation(line: 2477, column: 9, scope: !12551)
!12568 = !DILocation(line: 2478, column: 13, scope: !12569)
!12569 = distinct !DILexicalBlock(scope: !1442, file: !162, line: 2478, column: 13)
!12570 = !DILocation(line: 2478, column: 27, scope: !12569)
!12571 = !DILocation(line: 2478, column: 31, scope: !12572)
!12572 = !DILexicalBlockFile(scope: !12569, file: !162, discriminator: 1)
!12573 = !DILocation(line: 2478, column: 39, scope: !12569)
!12574 = !DILocation(line: 2478, column: 30, scope: !12569)
!12575 = !DILocation(line: 2478, column: 13, scope: !1442)
!12576 = !DILocation(line: 2479, column: 25, scope: !12569)
!12577 = !DILocation(line: 2479, column: 33, scope: !12569)
!12578 = !DILocation(line: 2479, column: 38, scope: !12569)
!12579 = !DILocation(line: 2479, column: 41, scope: !12569)
!12580 = !DILocation(line: 2479, column: 11, scope: !12569)
!12581 = !DILocation(line: 2480, column: 21, scope: !1442)
!12582 = !DILocation(line: 2480, column: 29, scope: !1442)
!12583 = !DILocation(line: 2480, column: 9, scope: !1442)
!12584 = !DILocation(line: 2481, column: 9, scope: !1442)
!12585 = !DILocation(line: 2481, column: 16, scope: !12586)
!12586 = !DILexicalBlockFile(scope: !12587, file: !162, discriminator: 2)
!12587 = !DILexicalBlockFile(scope: !1442, file: !162, discriminator: 1)
!12588 = !DILocation(line: 2482, column: 11, scope: !1448)
!12589 = !DILocation(line: 2482, column: 20, scope: !1448)
!12590 = !DILocation(line: 2482, column: 24, scope: !1448)
!12591 = !DILocation(line: 2483, column: 16, scope: !12592)
!12592 = distinct !DILexicalBlock(scope: !1448, file: !162, line: 2483, column: 15)
!12593 = !DILocation(line: 2483, column: 24, scope: !12592)
!12594 = !DILocation(line: 2483, column: 15, scope: !12592)
!12595 = !DILocation(line: 2483, column: 15, scope: !1448)
!12596 = !DILocation(line: 2484, column: 14, scope: !12592)
!12597 = !DILocation(line: 2484, column: 22, scope: !12592)
!12598 = !DILocation(line: 2484, column: 50, scope: !12592)
!12599 = !DILocation(line: 2484, column: 58, scope: !12592)
!12600 = !DILocation(line: 2484, column: 73, scope: !12592)
!12601 = !DILocation(line: 2484, column: 76, scope: !12592)
!12602 = !{!2737, !2290, i64 0}
!12603 = !DILocation(line: 2484, column: 84, scope: !12592)
!12604 = !DILocation(line: 2484, column: 13, scope: !12592)
!12605 = !DILocation(line: 2485, column: 22, scope: !1448)
!12606 = !DILocation(line: 2485, column: 32, scope: !1448)
!12607 = !DILocation(line: 2485, column: 20, scope: !1448)
!12608 = !DILocation(line: 2486, column: 32, scope: !1448)
!12609 = !DILocation(line: 2486, column: 40, scope: !1448)
!12610 = !DILocation(line: 2486, column: 11, scope: !1448)
!12611 = !DILocation(line: 2486, column: 14, scope: !1448)
!12612 = !DILocation(line: 2486, column: 29, scope: !1448)
!12613 = !DILocation(line: 2487, column: 41, scope: !1448)
!12614 = !DILocation(line: 2487, column: 12, scope: !1448)
!12615 = !DILocation(line: 2487, column: 20, scope: !1448)
!12616 = !DILocation(line: 2487, column: 39, scope: !1448)
!12617 = !DILocation(line: 2488, column: 32, scope: !1448)
!12618 = !DILocation(line: 2488, column: 35, scope: !1448)
!12619 = !{!2737, !2290, i64 16}
!12620 = !DILocation(line: 2488, column: 11, scope: !1448)
!12621 = !DILocation(line: 2488, column: 14, scope: !1448)
!12622 = !DILocation(line: 2488, column: 22, scope: !1448)
!12623 = !DILocation(line: 2488, column: 30, scope: !1448)
!12624 = !{!3111, !2290, i64 8}
!12625 = !DILocation(line: 2489, column: 9, scope: !1442)
!12626 = !DILocation(line: 2490, column: 7, scope: !1416)
!12627 = !DILocation(line: 2490, column: 7, scope: !12628)
!12628 = !DILexicalBlockFile(scope: !1416, file: !162, discriminator: 1)
!12629 = !DILocation(line: 2491, column: 12, scope: !12630)
!12630 = distinct !DILexicalBlock(scope: !1416, file: !162, line: 2491, column: 11)
!12631 = !DILocation(line: 2491, column: 20, scope: !12630)
!12632 = !DILocation(line: 2491, column: 32, scope: !12630)
!12633 = !DILocation(line: 2491, column: 11, scope: !1416)
!12634 = !DILocation(line: 2492, column: 32, scope: !12630)
!12635 = !DILocation(line: 2492, column: 40, scope: !12630)
!12636 = !DILocation(line: 2492, column: 46, scope: !12630)
!12637 = !DILocation(line: 2492, column: 51, scope: !12630)
!12638 = !DILocation(line: 2492, column: 16, scope: !12630)
!12639 = !DILocation(line: 2492, column: 9, scope: !12630)
!12640 = !DILocation(line: 2493, column: 7, scope: !1416)
!12641 = !DILocation(line: 2495, column: 12, scope: !1451)
!12642 = !DILocation(line: 2495, column: 20, scope: !1451)
!12643 = !DILocation(line: 2495, column: 35, scope: !1451)
!12644 = !DILocation(line: 2495, column: 32, scope: !1451)
!12645 = !DILocation(line: 2495, column: 11, scope: !1416)
!12646 = !DILocation(line: 2496, column: 9, scope: !1451)
!12647 = !DILocation(line: 2498, column: 9, scope: !1450)
!12648 = !DILocation(line: 2498, column: 13, scope: !1450)
!12649 = !DILocation(line: 2499, column: 9, scope: !1450)
!12650 = !DILocation(line: 2499, column: 21, scope: !1450)
!12651 = !DILocation(line: 2500, column: 9, scope: !1450)
!12652 = !DILocation(line: 2500, column: 14, scope: !1450)
!12653 = !DILocation(line: 2500, column: 21, scope: !1450)
!12654 = !DILocation(line: 2500, column: 29, scope: !1450)
!12655 = !DILocation(line: 2501, column: 32, scope: !1450)
!12656 = !DILocation(line: 2501, column: 37, scope: !1450)
!12657 = !DILocation(line: 2501, column: 10, scope: !1450)
!12658 = !DILocation(line: 2501, column: 18, scope: !1450)
!12659 = !DILocation(line: 2501, column: 30, scope: !1450)
!12660 = !DILocation(line: 2502, column: 24, scope: !1450)
!12661 = !DILocation(line: 2502, column: 32, scope: !1450)
!12662 = !DILocation(line: 2502, column: 9, scope: !1450)
!12663 = !DILocation(line: 2502, column: 14, scope: !1450)
!12664 = !DILocation(line: 2502, column: 21, scope: !1450)
!12665 = !DILocation(line: 2503, column: 35, scope: !1450)
!12666 = !DILocation(line: 2503, column: 10, scope: !1450)
!12667 = !DILocation(line: 2503, column: 18, scope: !1450)
!12668 = !DILocation(line: 2503, column: 33, scope: !1450)
!12669 = !DILocation(line: 2504, column: 19, scope: !1450)
!12670 = !DILocation(line: 2504, column: 23, scope: !1450)
!12671 = !DILocation(line: 2504, column: 28, scope: !1450)
!12672 = !DILocation(line: 2504, column: 43, scope: !1450)
!12673 = !DILocation(line: 2504, column: 21, scope: !1450)
!12674 = !DILocation(line: 2504, column: 17, scope: !1450)
!12675 = !DILocation(line: 2505, column: 18, scope: !1450)
!12676 = !DILocation(line: 2505, column: 24, scope: !1450)
!12677 = !DILocation(line: 2505, column: 36, scope: !1450)
!12678 = !DILocation(line: 2505, column: 41, scope: !1450)
!12679 = !DILocation(line: 2505, column: 16, scope: !1450)
!12680 = !DILocation(line: 2505, column: 13, scope: !1450)
!12681 = !DILocation(line: 2506, column: 13, scope: !12682)
!12682 = distinct !DILexicalBlock(scope: !1450, file: !162, line: 2506, column: 13)
!12683 = !DILocation(line: 2506, column: 20, scope: !12682)
!12684 = !DILocation(line: 2506, column: 25, scope: !12682)
!12685 = !DILocation(line: 2506, column: 17, scope: !12682)
!12686 = !DILocation(line: 2507, column: 13, scope: !12682)
!12687 = !DILocation(line: 2507, column: 23, scope: !12688)
!12688 = !DILexicalBlockFile(scope: !12682, file: !162, discriminator: 1)
!12689 = !DILocation(line: 2507, column: 28, scope: !12682)
!12690 = !DILocation(line: 2507, column: 37, scope: !12682)
!12691 = !DILocation(line: 2507, column: 46, scope: !12682)
!12692 = !DILocation(line: 2507, column: 16, scope: !12682)
!12693 = !DILocation(line: 2507, column: 51, scope: !12682)
!12694 = !DILocation(line: 2506, column: 13, scope: !1450)
!12695 = !DILocation(line: 2508, column: 22, scope: !12696)
!12696 = distinct !DILexicalBlock(scope: !12682, file: !162, line: 2507, column: 57)
!12697 = !DILocation(line: 2508, column: 12, scope: !12696)
!12698 = !DILocation(line: 2508, column: 20, scope: !12696)
!12699 = !DILocation(line: 2509, column: 11, scope: !12696)
!12700 = !DILocation(line: 2511, column: 12, scope: !1450)
!12701 = !DILocation(line: 2511, column: 20, scope: !1450)
!12702 = !DILocation(line: 2511, column: 9, scope: !1450)
!12703 = !DILocation(line: 2512, column: 14, scope: !1456)
!12704 = !DILocation(line: 2512, column: 22, scope: !1456)
!12705 = !DILocation(line: 2512, column: 13, scope: !1456)
!12706 = !DILocation(line: 2512, column: 13, scope: !1450)
!12707 = !DILocation(line: 2513, column: 11, scope: !1455)
!12708 = !DILocation(line: 2513, column: 27, scope: !1455)
!12709 = !DILocation(line: 2514, column: 11, scope: !1455)
!12710 = !DILocation(line: 2514, column: 27, scope: !1455)
!12711 = !DILocation(line: 2515, column: 11, scope: !1455)
!12712 = !DILocation(line: 2515, column: 21, scope: !1455)
!12713 = !DILocation(line: 2516, column: 23, scope: !1455)
!12714 = !DILocation(line: 2516, column: 28, scope: !1455)
!12715 = !DILocation(line: 2516, column: 33, scope: !1455)
!12716 = !DILocation(line: 2516, column: 21, scope: !1455)
!12717 = !DILocation(line: 2517, column: 16, scope: !12718)
!12718 = distinct !DILexicalBlock(scope: !1455, file: !162, line: 2517, column: 15)
!12719 = !DILocation(line: 2517, column: 24, scope: !12718)
!12720 = !DILocation(line: 2517, column: 15, scope: !12718)
!12721 = !DILocation(line: 2517, column: 30, scope: !12718)
!12722 = !DILocation(line: 2517, column: 33, scope: !12723)
!12723 = !DILexicalBlockFile(scope: !12718, file: !162, discriminator: 1)
!12724 = !DILocation(line: 2517, column: 15, scope: !1455)
!12725 = !DILocation(line: 2522, column: 31, scope: !12726)
!12726 = distinct !DILexicalBlock(scope: !12718, file: !162, line: 2517, column: 44)
!12727 = !DILocation(line: 2522, column: 36, scope: !12726)
!12728 = !DILocation(line: 2522, column: 41, scope: !12726)
!12729 = !DILocation(line: 2522, column: 47, scope: !12726)
!12730 = !DILocation(line: 2522, column: 52, scope: !12726)
!12731 = !DILocation(line: 2522, column: 57, scope: !12726)
!12732 = !{!2641, !2400, i64 52}
!12733 = !DILocation(line: 2522, column: 45, scope: !12726)
!12734 = !DILocation(line: 2522, column: 17, scope: !12726)
!12735 = !DILocation(line: 2524, column: 13, scope: !12726)
!12736 = !DILocation(line: 2524, column: 21, scope: !12737)
!12737 = !DILexicalBlockFile(scope: !12738, file: !162, discriminator: 3)
!12738 = !DILexicalBlockFile(scope: !12726, file: !162, discriminator: 1)
!12739 = !DILocation(line: 2524, column: 20, scope: !12726)
!12740 = !DILocation(line: 2524, column: 51, scope: !12741)
!12741 = !DILexicalBlockFile(scope: !12726, file: !162, discriminator: 2)
!12742 = !DILocation(line: 2524, column: 41, scope: !12726)
!12743 = !DILocation(line: 2524, column: 36, scope: !12726)
!12744 = !DILocation(line: 2524, column: 39, scope: !12726)
!12745 = !DILocation(line: 2525, column: 34, scope: !12726)
!12746 = !DILocation(line: 2525, column: 39, scope: !12726)
!12747 = !DILocation(line: 2525, column: 44, scope: !12726)
!12748 = !DILocation(line: 2525, column: 20, scope: !12726)
!12749 = !DILocation(line: 2526, column: 18, scope: !12750)
!12750 = distinct !DILexicalBlock(scope: !12726, file: !162, line: 2526, column: 17)
!12751 = !DILocation(line: 2526, column: 26, scope: !12750)
!12752 = !DILocation(line: 2526, column: 17, scope: !12750)
!12753 = !DILocation(line: 2526, column: 41, scope: !12750)
!12754 = !DILocation(line: 2526, column: 44, scope: !12755)
!12755 = !DILexicalBlockFile(scope: !12750, file: !162, discriminator: 1)
!12756 = !DILocation(line: 2526, column: 17, scope: !12726)
!12757 = !DILocation(line: 2527, column: 25, scope: !12758)
!12758 = distinct !DILexicalBlock(scope: !12750, file: !162, line: 2526, column: 52)
!12759 = !DILocation(line: 2527, column: 33, scope: !12758)
!12760 = !DILocation(line: 2527, column: 19, scope: !12758)
!12761 = !DILocation(line: 2527, column: 22, scope: !12758)
!12762 = !DILocation(line: 2528, column: 15, scope: !12758)
!12763 = !DILocation(line: 2528, column: 23, scope: !12764)
!12764 = !DILexicalBlockFile(scope: !12765, file: !162, discriminator: 3)
!12765 = !DILexicalBlockFile(scope: !12758, file: !162, discriminator: 1)
!12766 = !DILocation(line: 2528, column: 22, scope: !12758)
!12767 = !DILocation(line: 2528, column: 47, scope: !12768)
!12768 = !DILexicalBlockFile(scope: !12758, file: !162, discriminator: 2)
!12769 = !DILocation(line: 2528, column: 40, scope: !12758)
!12770 = !DILocation(line: 2528, column: 35, scope: !12758)
!12771 = !DILocation(line: 2528, column: 38, scope: !12758)
!12772 = !DILocation(line: 2529, column: 14, scope: !12758)
!12773 = !DILocation(line: 2530, column: 14, scope: !12726)
!12774 = !DILocation(line: 2530, column: 18, scope: !12726)
!12775 = !DILocation(line: 2531, column: 11, scope: !12726)
!12776 = !DILocation(line: 2532, column: 12, scope: !1455)
!12777 = !DILocation(line: 2532, column: 20, scope: !1455)
!12778 = !DILocation(line: 2532, column: 42, scope: !1455)
!12779 = !DILocation(line: 2532, column: 50, scope: !1455)
!12780 = !DILocation(line: 2532, column: 65, scope: !1455)
!12781 = !DILocation(line: 2532, column: 70, scope: !1455)
!12782 = !DILocation(line: 2532, column: 75, scope: !1455)
!12783 = !DILocation(line: 2532, column: 11, scope: !1455)
!12784 = !DILocation(line: 2533, column: 9, scope: !1456)
!12785 = !DILocation(line: 2533, column: 9, scope: !1455)
!12786 = !DILocation(line: 2534, column: 19, scope: !12787)
!12787 = distinct !DILexicalBlock(scope: !1456, file: !162, line: 2534, column: 18)
!12788 = !DILocation(line: 2534, column: 27, scope: !12787)
!12789 = !DILocation(line: 2534, column: 18, scope: !12787)
!12790 = !DILocation(line: 2534, column: 18, scope: !1456)
!12791 = !DILocation(line: 2535, column: 25, scope: !12787)
!12792 = !DILocation(line: 2535, column: 33, scope: !12787)
!12793 = !DILocation(line: 2535, column: 38, scope: !12787)
!12794 = !DILocation(line: 2535, column: 41, scope: !12787)
!12795 = !DILocation(line: 2535, column: 11, scope: !12787)
!12796 = !DILocation(line: 2536, column: 9, scope: !1450)
!12797 = !DILocation(line: 2536, column: 16, scope: !12798)
!12798 = !DILexicalBlockFile(scope: !12799, file: !162, discriminator: 2)
!12799 = !DILexicalBlockFile(scope: !1450, file: !162, discriminator: 1)
!12800 = !DILocation(line: 2536, column: 21, scope: !1450)
!12801 = !DILocation(line: 2537, column: 11, scope: !1460)
!12802 = !DILocation(line: 2537, column: 20, scope: !1460)
!12803 = !DILocation(line: 2537, column: 24, scope: !1460)
!12804 = !DILocation(line: 2537, column: 29, scope: !1460)
!12805 = !DILocation(line: 2538, column: 16, scope: !12806)
!12806 = distinct !DILexicalBlock(scope: !1460, file: !162, line: 2538, column: 15)
!12807 = !DILocation(line: 2538, column: 24, scope: !12806)
!12808 = !DILocation(line: 2538, column: 15, scope: !12806)
!12809 = !DILocation(line: 2538, column: 15, scope: !1460)
!12810 = !DILocation(line: 2539, column: 14, scope: !12806)
!12811 = !DILocation(line: 2539, column: 22, scope: !12806)
!12812 = !DILocation(line: 2539, column: 50, scope: !12806)
!12813 = !DILocation(line: 2539, column: 58, scope: !12806)
!12814 = !DILocation(line: 2539, column: 73, scope: !12806)
!12815 = !DILocation(line: 2539, column: 76, scope: !12806)
!12816 = !DILocation(line: 2539, column: 84, scope: !12806)
!12817 = !DILocation(line: 2539, column: 13, scope: !12806)
!12818 = !DILocation(line: 2540, column: 27, scope: !1460)
!12819 = !DILocation(line: 2540, column: 32, scope: !1460)
!12820 = !DILocation(line: 2540, column: 42, scope: !1460)
!12821 = !DILocation(line: 2540, column: 11, scope: !1460)
!12822 = !DILocation(line: 2540, column: 16, scope: !1460)
!12823 = !DILocation(line: 2540, column: 25, scope: !1460)
!12824 = !DILocation(line: 2541, column: 32, scope: !1460)
!12825 = !DILocation(line: 2541, column: 40, scope: !1460)
!12826 = !DILocation(line: 2541, column: 11, scope: !1460)
!12827 = !DILocation(line: 2541, column: 14, scope: !1460)
!12828 = !DILocation(line: 2541, column: 29, scope: !1460)
!12829 = !DILocation(line: 2542, column: 41, scope: !1460)
!12830 = !DILocation(line: 2542, column: 12, scope: !1460)
!12831 = !DILocation(line: 2542, column: 20, scope: !1460)
!12832 = !DILocation(line: 2542, column: 39, scope: !1460)
!12833 = !DILocation(line: 2543, column: 32, scope: !1460)
!12834 = !DILocation(line: 2543, column: 35, scope: !1460)
!12835 = !DILocation(line: 2543, column: 11, scope: !1460)
!12836 = !DILocation(line: 2543, column: 14, scope: !1460)
!12837 = !DILocation(line: 2543, column: 22, scope: !1460)
!12838 = !DILocation(line: 2543, column: 30, scope: !1460)
!12839 = !DILocation(line: 2544, column: 9, scope: !1450)
!12840 = !DILocation(line: 2545, column: 14, scope: !12841)
!12841 = distinct !DILexicalBlock(scope: !1450, file: !162, line: 2545, column: 13)
!12842 = !DILocation(line: 2545, column: 22, scope: !12841)
!12843 = !DILocation(line: 2545, column: 34, scope: !12841)
!12844 = !DILocation(line: 2545, column: 13, scope: !1450)
!12845 = !DILocation(line: 2546, column: 34, scope: !12841)
!12846 = !DILocation(line: 2546, column: 42, scope: !12841)
!12847 = !DILocation(line: 2546, column: 48, scope: !12841)
!12848 = !DILocation(line: 2546, column: 53, scope: !12841)
!12849 = !DILocation(line: 2546, column: 18, scope: !12841)
!12850 = !DILocation(line: 2546, column: 11, scope: !12841)
!12851 = !DILocation(line: 2547, column: 7, scope: !1451)
!12852 = !DILocation(line: 2547, column: 7, scope: !12853)
!12853 = !DILexicalBlockFile(scope: !1451, file: !162, discriminator: 1)
!12854 = !DILocation(line: 2548, column: 7, scope: !1416)
!12855 = !DILocation(line: 2551, column: 9, scope: !1462)
!12856 = !DILocation(line: 2551, column: 13, scope: !1462)
!12857 = !DILocation(line: 2551, column: 20, scope: !1462)
!12858 = !DILocation(line: 2551, column: 26, scope: !1462)
!12859 = !DILocation(line: 2551, column: 41, scope: !1462)
!12860 = !DILocation(line: 2551, column: 46, scope: !1462)
!12861 = !DILocation(line: 2551, column: 18, scope: !1462)
!12862 = !DILocation(line: 2552, column: 13, scope: !12863)
!12863 = distinct !DILexicalBlock(scope: !1462, file: !162, line: 2552, column: 13)
!12864 = !DILocation(line: 2552, column: 15, scope: !12863)
!12865 = !DILocation(line: 2552, column: 13, scope: !1462)
!12866 = !DILocation(line: 2553, column: 11, scope: !12863)
!12867 = !DILocation(line: 2554, column: 14, scope: !1465)
!12868 = !DILocation(line: 2554, column: 22, scope: !1465)
!12869 = !DILocation(line: 2554, column: 13, scope: !1465)
!12870 = !DILocation(line: 2554, column: 13, scope: !1462)
!12871 = !DILocation(line: 2555, column: 11, scope: !1464)
!12872 = !DILocation(line: 2555, column: 20, scope: !1464)
!12873 = !DILocation(line: 2556, column: 12, scope: !1464)
!12874 = !DILocation(line: 2556, column: 20, scope: !1464)
!12875 = !DILocation(line: 2556, column: 45, scope: !1464)
!12876 = !DILocation(line: 2556, column: 53, scope: !1464)
!12877 = !DILocation(line: 2556, column: 68, scope: !1464)
!12878 = !DILocation(line: 2556, column: 95, scope: !1464)
!12879 = !DILocation(line: 2556, column: 107, scope: !1464)
!12880 = !DILocation(line: 2556, column: 73, scope: !1464)
!12881 = !DILocation(line: 2556, column: 11, scope: !1464)
!12882 = !DILocation(line: 2557, column: 9, scope: !1465)
!12883 = !DILocation(line: 2557, column: 9, scope: !1464)
!12884 = !DILocation(line: 2558, column: 19, scope: !12885)
!12885 = distinct !DILexicalBlock(scope: !1465, file: !162, line: 2558, column: 18)
!12886 = !DILocation(line: 2558, column: 27, scope: !12885)
!12887 = !DILocation(line: 2558, column: 18, scope: !12885)
!12888 = !DILocation(line: 2558, column: 18, scope: !1465)
!12889 = !DILocation(line: 2559, column: 25, scope: !12885)
!12890 = !DILocation(line: 2559, column: 33, scope: !12885)
!12891 = !DILocation(line: 2559, column: 38, scope: !12885)
!12892 = !DILocation(line: 2559, column: 41, scope: !12885)
!12893 = !DILocation(line: 2559, column: 11, scope: !12885)
!12894 = !DILocation(line: 2560, column: 7, scope: !1416)
!12895 = !DILocation(line: 2560, column: 7, scope: !12628)
!12896 = !DILocation(line: 2561, column: 7, scope: !1416)
!12897 = !DILocation(line: 2563, column: 7, scope: !1416)
!12898 = !DILocation(line: 2565, column: 12, scope: !1469)
!12899 = !DILocation(line: 2565, column: 20, scope: !1469)
!12900 = !DILocation(line: 2565, column: 11, scope: !1469)
!12901 = !DILocation(line: 2565, column: 11, scope: !1416)
!12902 = !DILocation(line: 2566, column: 9, scope: !1468)
!12903 = !DILocation(line: 2566, column: 18, scope: !1468)
!12904 = !DILocation(line: 2567, column: 10, scope: !1468)
!12905 = !DILocation(line: 2567, column: 18, scope: !1468)
!12906 = !DILocation(line: 2567, column: 43, scope: !1468)
!12907 = !DILocation(line: 2567, column: 51, scope: !1468)
!12908 = !DILocation(line: 2567, column: 9, scope: !1468)
!12909 = !DILocation(line: 2568, column: 7, scope: !1469)
!12910 = !DILocation(line: 2568, column: 7, scope: !1468)
!12911 = !DILocation(line: 2569, column: 17, scope: !12912)
!12912 = distinct !DILexicalBlock(scope: !1469, file: !162, line: 2569, column: 16)
!12913 = !DILocation(line: 2569, column: 25, scope: !12912)
!12914 = !DILocation(line: 2569, column: 16, scope: !12912)
!12915 = !DILocation(line: 2569, column: 16, scope: !1469)
!12916 = !DILocation(line: 2570, column: 23, scope: !12912)
!12917 = !DILocation(line: 2570, column: 31, scope: !12912)
!12918 = !DILocation(line: 2570, column: 36, scope: !12912)
!12919 = !DILocation(line: 2570, column: 39, scope: !12912)
!12920 = !DILocation(line: 2570, column: 9, scope: !12912)
!12921 = !DILocation(line: 2571, column: 7, scope: !1416)
!12922 = !DILocation(line: 2574, column: 9, scope: !1471)
!12923 = !DILocation(line: 2574, column: 24, scope: !1471)
!12924 = !DILocation(line: 2575, column: 14, scope: !12925)
!12925 = distinct !DILexicalBlock(scope: !1471, file: !162, line: 2575, column: 13)
!12926 = !DILocation(line: 2575, column: 22, scope: !12925)
!12927 = !DILocation(line: 2575, column: 13, scope: !12925)
!12928 = !DILocation(line: 2575, column: 13, scope: !1471)
!12929 = !DILocation(line: 2576, column: 12, scope: !12925)
!12930 = !DILocation(line: 2576, column: 20, scope: !12925)
!12931 = !DILocation(line: 2576, column: 49, scope: !12925)
!12932 = !DILocation(line: 2576, column: 57, scope: !12925)
!12933 = !DILocation(line: 2576, column: 11, scope: !12925)
!12934 = !DILocation(line: 2593, column: 19, scope: !12935)
!12935 = distinct !DILexicalBlock(scope: !12925, file: !162, line: 2593, column: 18)
!12936 = !DILocation(line: 2593, column: 27, scope: !12935)
!12937 = !DILocation(line: 2593, column: 18, scope: !12935)
!12938 = !DILocation(line: 2593, column: 18, scope: !12925)
!12939 = !DILocation(line: 2594, column: 25, scope: !12935)
!12940 = !DILocation(line: 2594, column: 33, scope: !12935)
!12941 = !DILocation(line: 2594, column: 38, scope: !12935)
!12942 = !DILocation(line: 2594, column: 41, scope: !12935)
!12943 = !DILocation(line: 2594, column: 11, scope: !12935)
!12944 = !DILocation(line: 2595, column: 33, scope: !1471)
!12945 = !DILocation(line: 2595, column: 41, scope: !1471)
!12946 = !DILocation(line: 2595, column: 53, scope: !1471)
!12947 = !DILocation(line: 2595, column: 58, scope: !1471)
!12948 = !DILocation(line: 2595, column: 67, scope: !1471)
!12949 = !DILocation(line: 2595, column: 18, scope: !1471)
!12950 = !DILocation(line: 2595, column: 16, scope: !1471)
!12951 = !DILocation(line: 2596, column: 13, scope: !12952)
!12952 = distinct !DILexicalBlock(scope: !1471, file: !162, line: 2596, column: 13)
!12953 = !DILocation(line: 2596, column: 20, scope: !12952)
!12954 = !DILocation(line: 2596, column: 13, scope: !1471)
!12955 = !DILocation(line: 2597, column: 18, scope: !12952)
!12956 = !DILocation(line: 2597, column: 11, scope: !12952)
!12957 = !DILocation(line: 2598, column: 19, scope: !12958)
!12958 = distinct !DILexicalBlock(scope: !12952, file: !162, line: 2598, column: 18)
!12959 = !DILocation(line: 2598, column: 18, scope: !12952)
!12960 = !DILocation(line: 2599, column: 12, scope: !12961)
!12961 = distinct !DILexicalBlock(scope: !12958, file: !162, line: 2598, column: 25)
!12962 = !DILocation(line: 2599, column: 20, scope: !12961)
!12963 = !DILocation(line: 2599, column: 33, scope: !12961)
!12964 = !DILocation(line: 2600, column: 18, scope: !12961)
!12965 = !DILocation(line: 2600, column: 11, scope: !12961)
!12966 = !DILocation(line: 2602, column: 7, scope: !1416)
!12967 = !DILocation(line: 2602, column: 7, scope: !12628)
!12968 = !DILocation(line: 2603, column: 7, scope: !1416)
!12969 = !DILocation(line: 2605, column: 11, scope: !12970)
!12970 = distinct !DILexicalBlock(scope: !1416, file: !162, line: 2605, column: 11)
!12971 = !DILocation(line: 2605, column: 11, scope: !1416)
!12972 = !DILocation(line: 2606, column: 20, scope: !12973)
!12973 = distinct !DILexicalBlock(scope: !12970, file: !162, line: 2605, column: 21)
!12974 = !DILocation(line: 2606, column: 10, scope: !12973)
!12975 = !DILocation(line: 2606, column: 18, scope: !12973)
!12976 = !DILocation(line: 2607, column: 9, scope: !12973)
!12977 = !DILocation(line: 2609, column: 12, scope: !1476)
!12978 = !DILocation(line: 2609, column: 20, scope: !1476)
!12979 = !DILocation(line: 2609, column: 11, scope: !1476)
!12980 = !DILocation(line: 2609, column: 11, scope: !1416)
!12981 = !DILocation(line: 2610, column: 16, scope: !1474)
!12982 = !DILocation(line: 2610, column: 22, scope: !1474)
!12983 = !DILocation(line: 2610, column: 15, scope: !1474)
!12984 = !DILocation(line: 2610, column: 13, scope: !1475)
!12985 = !DILocation(line: 2611, column: 11, scope: !1473)
!12986 = !DILocation(line: 2611, column: 18, scope: !1473)
!12987 = !DILocation(line: 2611, column: 38, scope: !1473)
!12988 = !DILocation(line: 2611, column: 46, scope: !1473)
!12989 = !DILocation(line: 2612, column: 14, scope: !1473)
!12990 = !DILocation(line: 2612, column: 20, scope: !1473)
!12991 = !DILocation(line: 2612, column: 33, scope: !1473)
!12992 = !DILocation(line: 2612, column: 42, scope: !1473)
!12993 = !DILocation(line: 2612, column: 67, scope: !1473)
!12994 = !DILocation(line: 2612, column: 75, scope: !1473)
!12995 = !DILocation(line: 2612, column: 12, scope: !1473)
!12996 = !DILocation(line: 2613, column: 12, scope: !1473)
!12997 = !DILocation(line: 2613, column: 20, scope: !1473)
!12998 = !DILocation(line: 2613, column: 45, scope: !1473)
!12999 = !DILocation(line: 2613, column: 53, scope: !1473)
!13000 = !DILocation(line: 2613, column: 69, scope: !1473)
!13001 = !DILocation(line: 2613, column: 77, scope: !1473)
!13002 = !DILocation(line: 2614, column: 38, scope: !1473)
!13003 = !DILocation(line: 2614, column: 58, scope: !1473)
!13004 = !DILocation(line: 2614, column: 66, scope: !1473)
!13005 = !DILocation(line: 2614, column: 46, scope: !1473)
!13006 = !DILocation(line: 2614, column: 32, scope: !1473)
!13007 = !DILocation(line: 2613, column: 11, scope: !1473)
!13008 = !DILocation(line: 2615, column: 9, scope: !1474)
!13009 = !DILocation(line: 2615, column: 9, scope: !1473)
!13010 = !DILocation(line: 2617, column: 12, scope: !1474)
!13011 = !DILocation(line: 2617, column: 20, scope: !1474)
!13012 = !DILocation(line: 2617, column: 45, scope: !1474)
!13013 = !DILocation(line: 2617, column: 53, scope: !1474)
!13014 = !DILocation(line: 2618, column: 44, scope: !1474)
!13015 = !DILocation(line: 2619, column: 50, scope: !1474)
!13016 = !DILocation(line: 2619, column: 68, scope: !1474)
!13017 = !DILocation(line: 2619, column: 54, scope: !1474)
!13018 = !DILocation(line: 2619, column: 32, scope: !1474)
!13019 = !DILocation(line: 2617, column: 11, scope: !1474)
!13020 = !DILocation(line: 2620, column: 7, scope: !1475)
!13021 = !DILocation(line: 2621, column: 17, scope: !13022)
!13022 = distinct !DILexicalBlock(scope: !1476, file: !162, line: 2621, column: 16)
!13023 = !DILocation(line: 2621, column: 25, scope: !13022)
!13024 = !DILocation(line: 2621, column: 16, scope: !13022)
!13025 = !DILocation(line: 2621, column: 16, scope: !1476)
!13026 = !DILocation(line: 2622, column: 23, scope: !13022)
!13027 = !DILocation(line: 2622, column: 31, scope: !13022)
!13028 = !DILocation(line: 2622, column: 36, scope: !13022)
!13029 = !DILocation(line: 2622, column: 39, scope: !13022)
!13030 = !DILocation(line: 2622, column: 9, scope: !13022)
!13031 = !DILocation(line: 2626, column: 11, scope: !13032)
!13032 = distinct !DILexicalBlock(scope: !1416, file: !162, line: 2626, column: 11)
!13033 = !DILocation(line: 2626, column: 25, scope: !13032)
!13034 = !DILocation(line: 2626, column: 11, scope: !1416)
!13035 = !DILocation(line: 2627, column: 20, scope: !13036)
!13036 = distinct !DILexicalBlock(scope: !13032, file: !162, line: 2626, column: 31)
!13037 = !DILocation(line: 2627, column: 10, scope: !13036)
!13038 = !DILocation(line: 2627, column: 18, scope: !13036)
!13039 = !DILocation(line: 2628, column: 9, scope: !13036)
!13040 = !DILocation(line: 2630, column: 12, scope: !13041)
!13041 = distinct !DILexicalBlock(scope: !1416, file: !162, line: 2630, column: 11)
!13042 = !DILocation(line: 2630, column: 20, scope: !13041)
!13043 = !DILocation(line: 2630, column: 35, scope: !13041)
!13044 = !DILocation(line: 2630, column: 32, scope: !13041)
!13045 = !DILocation(line: 2630, column: 11, scope: !1416)
!13046 = !DILocation(line: 2631, column: 20, scope: !13047)
!13047 = distinct !DILexicalBlock(scope: !13041, file: !162, line: 2630, column: 50)
!13048 = !DILocation(line: 2631, column: 10, scope: !13047)
!13049 = !DILocation(line: 2631, column: 18, scope: !13047)
!13050 = !DILocation(line: 2632, column: 9, scope: !13047)
!13051 = !DILocation(line: 2634, column: 18, scope: !1416)
!13052 = !DILocation(line: 2634, column: 8, scope: !1416)
!13053 = !DILocation(line: 2634, column: 16, scope: !1416)
!13054 = !DILocation(line: 2635, column: 7, scope: !1416)
!13055 = !DILocation(line: 2638, column: 9, scope: !1478)
!13056 = !DILocation(line: 2638, column: 34, scope: !1478)
!13057 = !DILocation(line: 2638, column: 53, scope: !1478)
!13058 = !DILocation(line: 2638, column: 61, scope: !1478)
!13059 = !DILocation(line: 2639, column: 13, scope: !1486)
!13060 = !DILocation(line: 2639, column: 13, scope: !1478)
!13061 = !DILocation(line: 2640, column: 18, scope: !1484)
!13062 = !DILocation(line: 2640, column: 24, scope: !1484)
!13063 = !DILocation(line: 2640, column: 17, scope: !1484)
!13064 = !DILocation(line: 2640, column: 15, scope: !1485)
!13065 = !DILocation(line: 2641, column: 13, scope: !1483)
!13066 = !DILocation(line: 2642, column: 15, scope: !1480)
!13067 = !DILocation(line: 2642, column: 22, scope: !1480)
!13068 = !DILocation(line: 2642, column: 42, scope: !1480)
!13069 = !DILocation(line: 2642, column: 50, scope: !1480)
!13070 = !DILocation(line: 2643, column: 18, scope: !1480)
!13071 = !DILocation(line: 2643, column: 24, scope: !1480)
!13072 = !DILocation(line: 2643, column: 37, scope: !1480)
!13073 = !DILocation(line: 2643, column: 46, scope: !1480)
!13074 = !DILocation(line: 2643, column: 72, scope: !1480)
!13075 = !DILocation(line: 2643, column: 80, scope: !1480)
!13076 = !DILocation(line: 2643, column: 16, scope: !1480)
!13077 = !DILocation(line: 2644, column: 29, scope: !1480)
!13078 = !DILocation(line: 2644, column: 16, scope: !1480)
!13079 = !DILocation(line: 2644, column: 27, scope: !1480)
!13080 = !DILocation(line: 2645, column: 15, scope: !1480)
!13081 = !DILocation(line: 2645, column: 32, scope: !1480)
!13082 = !DILocation(line: 2645, column: 40, scope: !1480)
!13083 = !DILocation(line: 2645, column: 56, scope: !1480)
!13084 = !DILocation(line: 2645, column: 64, scope: !1480)
!13085 = !DILocation(line: 2646, column: 37, scope: !1480)
!13086 = !DILocation(line: 2646, column: 57, scope: !1480)
!13087 = !DILocation(line: 2646, column: 65, scope: !1480)
!13088 = !DILocation(line: 2646, column: 45, scope: !1480)
!13089 = !DILocation(line: 2646, column: 31, scope: !1480)
!13090 = !DILocation(line: 2647, column: 19, scope: !13091)
!13091 = distinct !DILexicalBlock(scope: !1480, file: !162, line: 2647, column: 19)
!13092 = !DILocation(line: 2647, column: 24, scope: !13091)
!13093 = !DILocation(line: 2647, column: 21, scope: !13091)
!13094 = !DILocation(line: 2647, column: 19, scope: !1480)
!13095 = !DILocation(line: 2648, column: 17, scope: !13091)
!13096 = !DILocation(line: 2649, column: 26, scope: !1480)
!13097 = !DILocation(line: 2649, column: 16, scope: !1480)
!13098 = !DILocation(line: 2649, column: 24, scope: !1480)
!13099 = !DILocation(line: 2650, column: 13, scope: !1481)
!13100 = !DILocation(line: 2650, column: 13, scope: !13101)
!13101 = !DILexicalBlockFile(scope: !1481, file: !162, discriminator: 1)
!13102 = !DILocation(line: 2641, column: 13, scope: !1481)
!13103 = !DILocation(line: 2651, column: 11, scope: !1483)
!13104 = !DILocation(line: 2653, column: 13, scope: !1484)
!13105 = !DILocation(line: 2653, column: 30, scope: !1484)
!13106 = !DILocation(line: 2653, column: 38, scope: !1484)
!13107 = !DILocation(line: 2654, column: 41, scope: !1484)
!13108 = !DILocation(line: 2655, column: 47, scope: !1484)
!13109 = !DILocation(line: 2655, column: 66, scope: !1484)
!13110 = !DILocation(line: 2655, column: 52, scope: !1484)
!13111 = !DILocation(line: 2655, column: 29, scope: !1484)
!13112 = !DILocation(line: 2656, column: 9, scope: !1485)
!13113 = !DILocation(line: 2657, column: 19, scope: !13114)
!13114 = distinct !DILexicalBlock(scope: !1486, file: !162, line: 2657, column: 18)
!13115 = !DILocation(line: 2657, column: 27, scope: !13114)
!13116 = !DILocation(line: 2657, column: 18, scope: !13114)
!13117 = !DILocation(line: 2657, column: 18, scope: !1486)
!13118 = !DILocation(line: 2658, column: 25, scope: !13114)
!13119 = !DILocation(line: 2658, column: 33, scope: !13114)
!13120 = !DILocation(line: 2658, column: 38, scope: !13114)
!13121 = !DILocation(line: 2658, column: 41, scope: !13114)
!13122 = !DILocation(line: 2658, column: 11, scope: !13114)
!13123 = !DILocation(line: 2659, column: 7, scope: !1416)
!13124 = !DILocation(line: 2660, column: 7, scope: !1416)
!13125 = !DILocation(line: 2662, column: 40, scope: !13126)
!13126 = distinct !DILexicalBlock(scope: !1416, file: !162, line: 2662, column: 11)
!13127 = !DILocation(line: 2662, column: 48, scope: !13126)
!13128 = !DILocation(line: 2662, column: 53, scope: !13126)
!13129 = !DILocation(line: 2662, column: 56, scope: !13126)
!13130 = !DILocation(line: 2662, column: 12, scope: !13126)
!13131 = !DILocation(line: 2662, column: 11, scope: !1416)
!13132 = !DILocation(line: 2663, column: 9, scope: !13126)
!13133 = !DILocation(line: 2664, column: 7, scope: !1416)
!13134 = !DILocation(line: 2666, column: 26, scope: !13135)
!13135 = distinct !DILexicalBlock(scope: !1416, file: !162, line: 2666, column: 11)
!13136 = !DILocation(line: 2666, column: 34, scope: !13135)
!13137 = !DILocation(line: 2666, column: 39, scope: !13135)
!13138 = !DILocation(line: 2666, column: 42, scope: !13135)
!13139 = !DILocation(line: 2666, column: 12, scope: !13135)
!13140 = !DILocation(line: 2666, column: 11, scope: !1416)
!13141 = !DILocation(line: 2667, column: 9, scope: !13135)
!13142 = !DILocation(line: 2668, column: 7, scope: !1416)
!13143 = !DILocation(line: 2670, column: 12, scope: !13144)
!13144 = distinct !DILexicalBlock(scope: !1416, file: !162, line: 2670, column: 11)
!13145 = !DILocation(line: 2670, column: 20, scope: !13144)
!13146 = !DILocation(line: 2670, column: 11, scope: !13144)
!13147 = !DILocation(line: 2670, column: 11, scope: !1416)
!13148 = !DILocation(line: 2671, column: 23, scope: !13144)
!13149 = !DILocation(line: 2671, column: 31, scope: !13144)
!13150 = !DILocation(line: 2671, column: 36, scope: !13144)
!13151 = !DILocation(line: 2671, column: 39, scope: !13144)
!13152 = !DILocation(line: 2671, column: 9, scope: !13144)
!13153 = !DILocation(line: 2672, column: 7, scope: !1416)
!13154 = !DILocation(line: 2674, column: 20, scope: !1409)
!13155 = !DILocation(line: 2674, column: 18, scope: !1409)
!13156 = !DILocation(line: 2674, column: 6, scope: !1409)
!13157 = !DILocation(line: 2674, column: 14, scope: !1409)
!13158 = !DILocation(line: 2675, column: 14, scope: !1409)
!13159 = !DILocation(line: 2675, column: 22, scope: !1409)
!13160 = !DILocation(line: 2675, column: 38, scope: !1409)
!13161 = !DILocation(line: 2675, column: 5, scope: !1409)
!13162 = !DILocation(line: 2677, column: 18, scope: !13163)
!13163 = distinct !DILexicalBlock(scope: !1409, file: !162, line: 2675, column: 48)
!13164 = !DILocation(line: 2677, column: 8, scope: !13163)
!13165 = !DILocation(line: 2677, column: 16, scope: !13163)
!13166 = !DILocation(line: 2678, column: 7, scope: !13163)
!13167 = !DILocation(line: 2680, column: 7, scope: !13163)
!13168 = !DILocation(line: 2682, column: 5, scope: !13163)
!13169 = !DILocation(line: 2683, column: 3, scope: !1410)
!13170 = !DILocation(line: 2683, column: 3, scope: !13171)
!13171 = !DILexicalBlockFile(scope: !1410, file: !162, discriminator: 1)
!13172 = !DILocation(line: 2254, column: 3, scope: !1410)
!13173 = !DILocation(line: 2685, column: 1, scope: !1394)
!13174 = !DILocation(line: 2055, column: 26, scope: !1717)
!13175 = !DILocation(line: 2057, column: 3, scope: !1717)
!13176 = !DILocation(line: 2057, column: 8, scope: !1717)
!13177 = !DILocation(line: 2057, column: 15, scope: !1717)
!13178 = !DILocation(line: 2057, column: 23, scope: !1717)
!13179 = !DILocation(line: 2058, column: 3, scope: !1717)
!13180 = !DILocation(line: 2058, column: 10, scope: !13181)
!13181 = !DILexicalBlockFile(scope: !13182, file: !162, discriminator: 2)
!13182 = !DILexicalBlockFile(scope: !1717, file: !162, discriminator: 1)
!13183 = !DILocation(line: 2059, column: 5, scope: !1724)
!13184 = !DILocation(line: 2059, column: 9, scope: !1724)
!13185 = !DILocation(line: 2060, column: 5, scope: !1724)
!13186 = !DILocation(line: 2060, column: 9, scope: !1724)
!13187 = !DILocation(line: 2060, column: 39, scope: !1724)
!13188 = !DILocation(line: 2060, column: 44, scope: !1724)
!13189 = !DILocation(line: 2060, column: 49, scope: !1724)
!13190 = !DILocation(line: 2060, column: 56, scope: !1724)
!13191 = !DILocation(line: 2060, column: 38, scope: !1724)
!13192 = !DILocation(line: 2060, column: 36, scope: !1724)
!13193 = !DILocation(line: 2060, column: 19, scope: !1724)
!13194 = !DILocation(line: 2061, column: 5, scope: !1724)
!13195 = !DILocation(line: 2061, column: 11, scope: !1724)
!13196 = !DILocation(line: 2061, column: 24, scope: !1724)
!13197 = !DILocation(line: 2061, column: 29, scope: !1724)
!13198 = !DILocation(line: 2061, column: 35, scope: !1724)
!13199 = !DILocation(line: 2061, column: 33, scope: !1724)
!13200 = !DILocation(line: 2067, column: 9, scope: !13201)
!13201 = distinct !DILexicalBlock(scope: !1724, file: !162, line: 2067, column: 9)
!13202 = !DILocation(line: 2067, column: 14, scope: !13201)
!13203 = !DILocation(line: 2067, column: 25, scope: !13201)
!13204 = !DILocation(line: 2067, column: 22, scope: !13201)
!13205 = !DILocation(line: 2067, column: 9, scope: !1724)
!13206 = !DILocation(line: 2068, column: 7, scope: !13201)
!13207 = !DILocation(line: 2072, column: 15, scope: !1724)
!13208 = !DILocation(line: 2072, column: 28, scope: !1724)
!13209 = !DILocation(line: 2072, column: 33, scope: !1724)
!13210 = !DILocation(line: 2072, column: 27, scope: !1724)
!13211 = !DILocation(line: 2072, column: 48, scope: !1724)
!13212 = !DILocation(line: 2072, column: 23, scope: !1724)
!13213 = !DILocation(line: 2072, column: 13, scope: !1724)
!13214 = !DILocation(line: 2073, column: 9, scope: !1729)
!13215 = !DILocation(line: 2073, column: 19, scope: !1729)
!13216 = !DILocation(line: 2073, column: 24, scope: !1729)
!13217 = !DILocation(line: 2073, column: 33, scope: !1729)
!13218 = !DILocation(line: 2073, column: 38, scope: !1729)
!13219 = !DILocation(line: 2073, column: 31, scope: !1729)
!13220 = !DILocation(line: 2073, column: 17, scope: !1729)
!13221 = !DILocation(line: 2073, column: 9, scope: !1724)
!13222 = !DILocation(line: 2074, column: 7, scope: !1728)
!13223 = !DILocation(line: 2074, column: 13, scope: !1728)
!13224 = !DILocation(line: 2074, column: 29, scope: !1728)
!13225 = !DILocation(line: 2074, column: 37, scope: !1728)
!13226 = !DILocation(line: 2074, column: 43, scope: !1728)
!13227 = !DILocation(line: 2074, column: 56, scope: !1728)
!13228 = !DILocation(line: 2074, column: 61, scope: !1728)
!13229 = !DILocation(line: 2074, column: 67, scope: !1728)
!13230 = !DILocation(line: 2074, column: 66, scope: !1728)
!13231 = !DILocation(line: 2075, column: 11, scope: !13232)
!13232 = distinct !DILexicalBlock(scope: !1728, file: !162, line: 2075, column: 11)
!13233 = !DILocation(line: 2075, column: 16, scope: !13232)
!13234 = !DILocation(line: 2075, column: 11, scope: !1728)
!13235 = !DILocation(line: 2076, column: 9, scope: !13232)
!13236 = !DILocation(line: 2080, column: 11, scope: !13237)
!13237 = distinct !DILexicalBlock(scope: !1728, file: !162, line: 2080, column: 11)
!13238 = !DILocation(line: 2080, column: 16, scope: !13237)
!13239 = !DILocation(line: 2080, column: 21, scope: !13237)
!13240 = !DILocation(line: 2080, column: 40, scope: !13237)
!13241 = !DILocation(line: 2080, column: 45, scope: !13237)
!13242 = !DILocation(line: 2080, column: 25, scope: !13237)
!13243 = !DILocation(line: 2080, column: 11, scope: !1728)
!13244 = !DILocation(line: 2081, column: 37, scope: !13237)
!13245 = !DILocation(line: 2081, column: 9, scope: !13237)
!13246 = !DILocation(line: 2081, column: 14, scope: !13237)
!13247 = !DILocation(line: 2081, column: 19, scope: !13237)
!13248 = !DILocation(line: 2081, column: 23, scope: !13237)
!13249 = !DILocation(line: 2085, column: 11, scope: !13250)
!13250 = distinct !DILexicalBlock(scope: !1728, file: !162, line: 2085, column: 11)
!13251 = !DILocation(line: 2085, column: 16, scope: !13250)
!13252 = !DILocation(line: 2085, column: 21, scope: !13250)
!13253 = !DILocation(line: 2085, column: 11, scope: !1728)
!13254 = !DILocation(line: 2086, column: 43, scope: !13250)
!13255 = !DILocation(line: 2086, column: 51, scope: !13250)
!13256 = !DILocation(line: 2086, column: 56, scope: !13250)
!13257 = !DILocation(line: 2086, column: 61, scope: !13250)
!13258 = !DILocation(line: 2087, column: 63, scope: !13250)
!13259 = !DILocation(line: 2087, column: 68, scope: !13250)
!13260 = !DILocation(line: 2086, column: 71, scope: !13250)
!13261 = !DILocation(line: 2086, column: 48, scope: !13250)
!13262 = !DILocation(line: 2086, column: 9, scope: !13250)
!13263 = !DILocation(line: 2086, column: 14, scope: !13250)
!13264 = !DILocation(line: 2086, column: 19, scope: !13250)
!13265 = !DILocation(line: 2086, column: 29, scope: !13250)
!13266 = !DILocation(line: 2088, column: 18, scope: !1728)
!13267 = !DILocation(line: 2088, column: 7, scope: !1728)
!13268 = !DILocation(line: 2088, column: 12, scope: !1728)
!13269 = !DILocation(line: 2088, column: 16, scope: !1728)
!13270 = !DILocation(line: 2089, column: 21, scope: !1728)
!13271 = !DILocation(line: 2089, column: 28, scope: !1728)
!13272 = !DILocation(line: 2089, column: 26, scope: !1728)
!13273 = !DILocation(line: 2089, column: 7, scope: !1728)
!13274 = !DILocation(line: 2089, column: 12, scope: !1728)
!13275 = !DILocation(line: 2089, column: 19, scope: !1728)
!13276 = !DILocation(line: 2090, column: 20, scope: !1728)
!13277 = !DILocation(line: 2090, column: 27, scope: !1728)
!13278 = !DILocation(line: 2090, column: 25, scope: !1728)
!13279 = !DILocation(line: 2090, column: 18, scope: !1728)
!13280 = !DILocation(line: 2091, column: 5, scope: !1729)
!13281 = !DILocation(line: 2091, column: 5, scope: !13282)
!13282 = !DILexicalBlockFile(scope: !1729, file: !162, discriminator: 1)
!13283 = !DILocation(line: 2091, column: 5, scope: !1728)
!13284 = !DILocation(line: 2092, column: 12, scope: !1724)
!13285 = !DILocation(line: 2092, column: 24, scope: !1724)
!13286 = !DILocation(line: 2092, column: 29, scope: !1724)
!13287 = !DILocation(line: 2092, column: 38, scope: !1724)
!13288 = !DILocation(line: 2092, column: 43, scope: !1724)
!13289 = !DILocation(line: 2092, column: 5, scope: !1724)
!13290 = !DILocation(line: 2093, column: 20, scope: !1724)
!13291 = !DILocation(line: 2093, column: 5, scope: !1724)
!13292 = !DILocation(line: 2093, column: 10, scope: !1724)
!13293 = !DILocation(line: 2093, column: 18, scope: !1724)
!13294 = !DILocation(line: 2094, column: 11, scope: !1724)
!13295 = !DILocation(line: 2094, column: 16, scope: !1724)
!13296 = !DILocation(line: 2094, column: 9, scope: !1724)
!13297 = !DILocation(line: 2095, column: 3, scope: !1717)
!13298 = !DILocation(line: 2095, column: 3, scope: !13182)
!13299 = !DILocation(line: 2096, column: 3, scope: !1717)
!13300 = !DILocation(line: 2097, column: 1, scope: !1717)
!13301 = !DILocation(line: 5493, column: 23, scope: !1487)
!13302 = !DILocation(line: 5495, column: 3, scope: !1487)
!13303 = !DILocation(line: 5495, column: 15, scope: !1487)
!13304 = !DILocation(line: 5495, column: 22, scope: !1487)
!13305 = !DILocation(line: 5495, column: 30, scope: !1487)
!13306 = !DILocation(line: 5496, column: 3, scope: !1487)
!13307 = !DILocation(line: 5496, column: 19, scope: !1487)
!13308 = !DILocation(line: 5497, column: 3, scope: !1487)
!13309 = !DILocation(line: 5497, column: 12, scope: !1487)
!13310 = !DILocation(line: 5499, column: 7, scope: !1500)
!13311 = !DILocation(line: 5499, column: 12, scope: !1500)
!13312 = !DILocation(line: 5499, column: 26, scope: !1500)
!13313 = !DILocation(line: 5499, column: 7, scope: !1487)
!13314 = !DILocation(line: 5500, column: 5, scope: !1499)
!13315 = !DILocation(line: 5500, column: 9, scope: !1499)
!13316 = !DILocation(line: 5501, column: 5, scope: !1499)
!13317 = !DILocation(line: 5501, column: 9, scope: !1499)
!13318 = !DILocation(line: 5502, column: 15, scope: !13319)
!13319 = distinct !DILexicalBlock(scope: !1499, file: !162, line: 5502, column: 9)
!13320 = !DILocation(line: 5502, column: 23, scope: !13319)
!13321 = !DILocation(line: 5502, column: 37, scope: !13319)
!13322 = !DILocation(line: 5502, column: 47, scope: !13319)
!13323 = !DILocation(line: 5502, column: 55, scope: !13319)
!13324 = !DILocation(line: 5502, column: 69, scope: !13319)
!13325 = !DILocation(line: 5502, column: 41, scope: !13319)
!13326 = !DILocation(line: 5502, column: 73, scope: !13319)
!13327 = !DILocation(line: 5502, column: 88, scope: !13328)
!13328 = !DILexicalBlockFile(scope: !13319, file: !162, discriminator: 1)
!13329 = !DILocation(line: 5502, column: 96, scope: !13319)
!13330 = !DILocation(line: 5502, column: 77, scope: !13319)
!13331 = !DILocation(line: 5502, column: 9, scope: !1499)
!13332 = !DILocation(line: 5502, column: 11, scope: !13333)
!13333 = !DILexicalBlockFile(scope: !13319, file: !162, discriminator: 4)
!13334 = !DILocation(line: 5502, column: 123, scope: !13335)
!13335 = !DILexicalBlockFile(scope: !13336, file: !162, discriminator: 3)
!13336 = !DILexicalBlockFile(scope: !13319, file: !162, discriminator: 2)
!13337 = !DILocation(line: 5502, column: 131, scope: !13319)
!13338 = !DILocation(line: 5502, column: 145, scope: !13319)
!13339 = !DILocation(line: 5502, column: 149, scope: !13319)
!13340 = !DILocation(line: 5502, column: 152, scope: !13319)
!13341 = !DILocation(line: 5503, column: 7, scope: !13319)
!13342 = !DILocation(line: 5504, column: 11, scope: !1499)
!13343 = !DILocation(line: 5504, column: 16, scope: !1499)
!13344 = !DILocation(line: 5504, column: 30, scope: !1499)
!13345 = !DILocation(line: 5504, column: 39, scope: !1499)
!13346 = !{!2737, !2400, i64 40}
!13347 = !DILocation(line: 5504, column: 9, scope: !1499)
!13348 = !DILocation(line: 5505, column: 10, scope: !13349)
!13349 = distinct !DILexicalBlock(scope: !1499, file: !162, line: 5505, column: 9)
!13350 = !DILocation(line: 5505, column: 18, scope: !13349)
!13351 = !DILocation(line: 5505, column: 9, scope: !13349)
!13352 = !DILocation(line: 5505, column: 9, scope: !1499)
!13353 = !DILocation(line: 5506, column: 10, scope: !13349)
!13354 = !DILocation(line: 5506, column: 7, scope: !13349)
!13355 = !DILocation(line: 5507, column: 12, scope: !13356)
!13356 = distinct !DILexicalBlock(scope: !1499, file: !162, line: 5507, column: 5)
!13357 = !DILocation(line: 5507, column: 10, scope: !13356)
!13358 = !DILocation(line: 5507, column: 17, scope: !13359)
!13359 = !DILexicalBlockFile(scope: !13360, file: !162, discriminator: 2)
!13360 = !DILexicalBlockFile(scope: !13361, file: !162, discriminator: 1)
!13361 = distinct !DILexicalBlock(scope: !13356, file: !162, line: 5507, column: 5)
!13362 = !DILocation(line: 5507, column: 21, scope: !13361)
!13363 = !DILocation(line: 5507, column: 19, scope: !13361)
!13364 = !DILocation(line: 5507, column: 5, scope: !13356)
!13365 = !DILocation(line: 5508, column: 17, scope: !13366)
!13366 = distinct !DILexicalBlock(scope: !13361, file: !162, line: 5508, column: 11)
!13367 = !DILocation(line: 5508, column: 25, scope: !13366)
!13368 = !DILocation(line: 5508, column: 39, scope: !13366)
!13369 = !DILocation(line: 5508, column: 49, scope: !13366)
!13370 = !DILocation(line: 5508, column: 57, scope: !13366)
!13371 = !DILocation(line: 5508, column: 71, scope: !13366)
!13372 = !DILocation(line: 5508, column: 43, scope: !13366)
!13373 = !DILocation(line: 5508, column: 75, scope: !13366)
!13374 = !DILocation(line: 5508, column: 90, scope: !13375)
!13375 = !DILexicalBlockFile(scope: !13366, file: !162, discriminator: 1)
!13376 = !DILocation(line: 5508, column: 98, scope: !13366)
!13377 = !DILocation(line: 5508, column: 79, scope: !13366)
!13378 = !DILocation(line: 5508, column: 11, scope: !13361)
!13379 = !DILocation(line: 5508, column: 13, scope: !13380)
!13380 = !DILexicalBlockFile(scope: !13366, file: !162, discriminator: 4)
!13381 = !DILocation(line: 5508, column: 188, scope: !13382)
!13382 = !DILexicalBlockFile(scope: !13383, file: !162, discriminator: 3)
!13383 = !DILexicalBlockFile(scope: !13366, file: !162, discriminator: 2)
!13384 = !DILocation(line: 5508, column: 156, scope: !13366)
!13385 = !DILocation(line: 5508, column: 161, scope: !13366)
!13386 = !DILocation(line: 5508, column: 175, scope: !13366)
!13387 = !DILocation(line: 5508, column: 184, scope: !13366)
!13388 = !DILocation(line: 5508, column: 125, scope: !13366)
!13389 = !DILocation(line: 5508, column: 133, scope: !13366)
!13390 = !DILocation(line: 5508, column: 147, scope: !13366)
!13391 = !DILocation(line: 5508, column: 151, scope: !13366)
!13392 = !DILocation(line: 5508, column: 154, scope: !13366)
!13393 = !DILocation(line: 5509, column: 9, scope: !13366)
!13394 = !DILocation(line: 5508, column: 195, scope: !13395)
!13395 = !DILexicalBlockFile(scope: !13396, file: !162, discriminator: 6)
!13396 = !DILexicalBlockFile(scope: !13366, file: !162, discriminator: 5)
!13397 = !DILocation(line: 5507, column: 27, scope: !13361)
!13398 = !DILocation(line: 5507, column: 5, scope: !13361)
!13399 = !DILocation(line: 5510, column: 13, scope: !1499)
!13400 = !DILocation(line: 5511, column: 3, scope: !1500)
!13401 = !DILocation(line: 5511, column: 3, scope: !13402)
!13402 = !DILexicalBlockFile(scope: !1500, file: !162, discriminator: 1)
!13403 = !DILocation(line: 5511, column: 3, scope: !1499)
!13404 = !DILocation(line: 5513, column: 30, scope: !1487)
!13405 = !DILocation(line: 5513, column: 35, scope: !1487)
!13406 = !DILocation(line: 5513, column: 3, scope: !1487)
!13407 = !DILocation(line: 5514, column: 3, scope: !1487)
!13408 = !DILocation(line: 5515, column: 5, scope: !1503)
!13409 = !DILocation(line: 5515, column: 9, scope: !1503)
!13410 = !DILocation(line: 5516, column: 5, scope: !1503)
!13411 = !DILocation(line: 5516, column: 9, scope: !1503)
!13412 = !DILocation(line: 5517, column: 5, scope: !1503)
!13413 = !DILocation(line: 5517, column: 21, scope: !1503)
!13414 = !DILocation(line: 5518, column: 5, scope: !1503)
!13415 = !DILocation(line: 5518, column: 13, scope: !1503)
!13416 = !DILocation(line: 5518, column: 32, scope: !1503)
!13417 = !DILocation(line: 5518, column: 22, scope: !1503)
!13418 = !DILocation(line: 5519, column: 10, scope: !13419)
!13419 = distinct !DILexicalBlock(scope: !1503, file: !162, line: 5519, column: 9)
!13420 = !DILocation(line: 5519, column: 9, scope: !1503)
!13421 = !DILocation(line: 5520, column: 7, scope: !13419)
!13422 = !DILocation(line: 5521, column: 10, scope: !13423)
!13423 = distinct !DILexicalBlock(scope: !1503, file: !162, line: 5521, column: 9)
!13424 = !DILocation(line: 5521, column: 18, scope: !13423)
!13425 = !DILocation(line: 5521, column: 9, scope: !1503)
!13426 = !DILocation(line: 5522, column: 7, scope: !13423)
!13427 = !DILocation(line: 5523, column: 9, scope: !13428)
!13428 = distinct !DILexicalBlock(scope: !1503, file: !162, line: 5523, column: 9)
!13429 = !DILocation(line: 5523, column: 17, scope: !13428)
!13430 = !DILocation(line: 5523, column: 26, scope: !13431)
!13431 = !DILexicalBlockFile(scope: !13428, file: !162, discriminator: 1)
!13432 = !DILocation(line: 5523, column: 34, scope: !13428)
!13433 = !DILocation(line: 5523, column: 48, scope: !13428)
!13434 = !DILocation(line: 5523, column: 58, scope: !13428)
!13435 = !DILocation(line: 5523, column: 66, scope: !13428)
!13436 = !DILocation(line: 5523, column: 80, scope: !13428)
!13437 = !DILocation(line: 5523, column: 52, scope: !13428)
!13438 = !DILocation(line: 5523, column: 84, scope: !13428)
!13439 = !DILocation(line: 5523, column: 99, scope: !13440)
!13440 = !DILexicalBlockFile(scope: !13428, file: !162, discriminator: 2)
!13441 = !DILocation(line: 5523, column: 107, scope: !13428)
!13442 = !DILocation(line: 5523, column: 88, scope: !13428)
!13443 = !DILocation(line: 5523, column: 9, scope: !1503)
!13444 = !DILocation(line: 5523, column: 22, scope: !13445)
!13445 = !DILexicalBlockFile(scope: !13428, file: !162, discriminator: 5)
!13446 = !DILocation(line: 5523, column: 134, scope: !13447)
!13447 = !DILexicalBlockFile(scope: !13448, file: !162, discriminator: 4)
!13448 = !DILexicalBlockFile(scope: !13428, file: !162, discriminator: 3)
!13449 = !DILocation(line: 5523, column: 142, scope: !13428)
!13450 = !DILocation(line: 5523, column: 156, scope: !13428)
!13451 = !DILocation(line: 5523, column: 160, scope: !13428)
!13452 = !DILocation(line: 5523, column: 163, scope: !13428)
!13453 = !DILocation(line: 5524, column: 7, scope: !13428)
!13454 = !DILocation(line: 5525, column: 14, scope: !13455)
!13455 = distinct !DILexicalBlock(scope: !1503, file: !162, line: 5525, column: 5)
!13456 = !DILocation(line: 5525, column: 22, scope: !13455)
!13457 = !DILocation(line: 5525, column: 12, scope: !13455)
!13458 = !DILocation(line: 5525, column: 10, scope: !13455)
!13459 = !DILocation(line: 5525, column: 29, scope: !13460)
!13460 = !DILexicalBlockFile(scope: !13461, file: !162, discriminator: 2)
!13461 = !DILexicalBlockFile(scope: !13462, file: !162, discriminator: 1)
!13462 = distinct !DILexicalBlock(scope: !13455, file: !162, line: 5525, column: 5)
!13463 = !DILocation(line: 5525, column: 28, scope: !13462)
!13464 = !DILocation(line: 5525, column: 5, scope: !13455)
!13465 = !DILocation(line: 5526, column: 17, scope: !13466)
!13466 = distinct !DILexicalBlock(scope: !13462, file: !162, line: 5526, column: 11)
!13467 = !DILocation(line: 5526, column: 25, scope: !13466)
!13468 = !DILocation(line: 5526, column: 39, scope: !13466)
!13469 = !DILocation(line: 5526, column: 49, scope: !13466)
!13470 = !DILocation(line: 5526, column: 57, scope: !13466)
!13471 = !DILocation(line: 5526, column: 71, scope: !13466)
!13472 = !DILocation(line: 5526, column: 43, scope: !13466)
!13473 = !DILocation(line: 5526, column: 75, scope: !13466)
!13474 = !DILocation(line: 5526, column: 90, scope: !13475)
!13475 = !DILexicalBlockFile(scope: !13466, file: !162, discriminator: 1)
!13476 = !DILocation(line: 5526, column: 98, scope: !13466)
!13477 = !DILocation(line: 5526, column: 79, scope: !13466)
!13478 = !DILocation(line: 5526, column: 11, scope: !13462)
!13479 = !DILocation(line: 5526, column: 13, scope: !13480)
!13480 = !DILexicalBlockFile(scope: !13466, file: !162, discriminator: 4)
!13481 = !DILocation(line: 5526, column: 157, scope: !13482)
!13482 = !DILexicalBlockFile(scope: !13483, file: !162, discriminator: 3)
!13483 = !DILexicalBlockFile(scope: !13466, file: !162, discriminator: 2)
!13484 = !DILocation(line: 5526, column: 156, scope: !13466)
!13485 = !DILocation(line: 5526, column: 125, scope: !13466)
!13486 = !DILocation(line: 5526, column: 133, scope: !13466)
!13487 = !DILocation(line: 5526, column: 147, scope: !13466)
!13488 = !DILocation(line: 5526, column: 151, scope: !13466)
!13489 = !DILocation(line: 5526, column: 154, scope: !13466)
!13490 = !DILocation(line: 5527, column: 9, scope: !13466)
!13491 = !DILocation(line: 5526, column: 163, scope: !13492)
!13492 = !DILexicalBlockFile(scope: !13493, file: !162, discriminator: 6)
!13493 = !DILexicalBlockFile(scope: !13466, file: !162, discriminator: 5)
!13494 = !DILocation(line: 5525, column: 33, scope: !13462)
!13495 = !DILocation(line: 5525, column: 5, scope: !13462)
!13496 = !DILocation(line: 5528, column: 15, scope: !13497)
!13497 = distinct !DILexicalBlock(scope: !1503, file: !162, line: 5528, column: 9)
!13498 = !DILocation(line: 5528, column: 23, scope: !13497)
!13499 = !DILocation(line: 5528, column: 37, scope: !13497)
!13500 = !DILocation(line: 5528, column: 47, scope: !13497)
!13501 = !DILocation(line: 5528, column: 55, scope: !13497)
!13502 = !DILocation(line: 5528, column: 69, scope: !13497)
!13503 = !DILocation(line: 5528, column: 41, scope: !13497)
!13504 = !DILocation(line: 5528, column: 73, scope: !13497)
!13505 = !DILocation(line: 5528, column: 88, scope: !13506)
!13506 = !DILexicalBlockFile(scope: !13497, file: !162, discriminator: 1)
!13507 = !DILocation(line: 5528, column: 96, scope: !13497)
!13508 = !DILocation(line: 5528, column: 77, scope: !13497)
!13509 = !DILocation(line: 5528, column: 9, scope: !1503)
!13510 = !DILocation(line: 5528, column: 11, scope: !13511)
!13511 = !DILexicalBlockFile(scope: !13497, file: !162, discriminator: 4)
!13512 = !DILocation(line: 5528, column: 123, scope: !13513)
!13513 = !DILexicalBlockFile(scope: !13514, file: !162, discriminator: 3)
!13514 = !DILexicalBlockFile(scope: !13497, file: !162, discriminator: 2)
!13515 = !DILocation(line: 5528, column: 131, scope: !13497)
!13516 = !DILocation(line: 5528, column: 145, scope: !13497)
!13517 = !DILocation(line: 5528, column: 149, scope: !13497)
!13518 = !DILocation(line: 5528, column: 152, scope: !13497)
!13519 = !DILocation(line: 5529, column: 7, scope: !13497)
!13520 = !DILocation(line: 5530, column: 11, scope: !1503)
!13521 = !DILocation(line: 5530, column: 19, scope: !1503)
!13522 = !DILocation(line: 5530, column: 28, scope: !1503)
!13523 = !DILocation(line: 5530, column: 9, scope: !1503)
!13524 = !DILocation(line: 5531, column: 10, scope: !13525)
!13525 = distinct !DILexicalBlock(scope: !1503, file: !162, line: 5531, column: 9)
!13526 = !DILocation(line: 5531, column: 18, scope: !13525)
!13527 = !DILocation(line: 5531, column: 9, scope: !13525)
!13528 = !DILocation(line: 5531, column: 9, scope: !1503)
!13529 = !DILocation(line: 5532, column: 10, scope: !13525)
!13530 = !DILocation(line: 5532, column: 7, scope: !13525)
!13531 = !DILocation(line: 5533, column: 12, scope: !13532)
!13532 = distinct !DILexicalBlock(scope: !1503, file: !162, line: 5533, column: 5)
!13533 = !DILocation(line: 5533, column: 10, scope: !13532)
!13534 = !DILocation(line: 5533, column: 17, scope: !13535)
!13535 = !DILexicalBlockFile(scope: !13536, file: !162, discriminator: 2)
!13536 = !DILexicalBlockFile(scope: !13537, file: !162, discriminator: 1)
!13537 = distinct !DILexicalBlock(scope: !13532, file: !162, line: 5533, column: 5)
!13538 = !DILocation(line: 5533, column: 21, scope: !13537)
!13539 = !DILocation(line: 5533, column: 19, scope: !13537)
!13540 = !DILocation(line: 5533, column: 5, scope: !13532)
!13541 = !DILocation(line: 5534, column: 17, scope: !13542)
!13542 = distinct !DILexicalBlock(scope: !13537, file: !162, line: 5534, column: 11)
!13543 = !DILocation(line: 5534, column: 25, scope: !13542)
!13544 = !DILocation(line: 5534, column: 39, scope: !13542)
!13545 = !DILocation(line: 5534, column: 49, scope: !13542)
!13546 = !DILocation(line: 5534, column: 57, scope: !13542)
!13547 = !DILocation(line: 5534, column: 71, scope: !13542)
!13548 = !DILocation(line: 5534, column: 43, scope: !13542)
!13549 = !DILocation(line: 5534, column: 75, scope: !13542)
!13550 = !DILocation(line: 5534, column: 90, scope: !13551)
!13551 = !DILexicalBlockFile(scope: !13542, file: !162, discriminator: 1)
!13552 = !DILocation(line: 5534, column: 98, scope: !13542)
!13553 = !DILocation(line: 5534, column: 79, scope: !13542)
!13554 = !DILocation(line: 5534, column: 11, scope: !13537)
!13555 = !DILocation(line: 5534, column: 13, scope: !13556)
!13556 = !DILexicalBlockFile(scope: !13542, file: !162, discriminator: 4)
!13557 = !DILocation(line: 5534, column: 177, scope: !13558)
!13558 = !DILexicalBlockFile(scope: !13559, file: !162, discriminator: 3)
!13559 = !DILexicalBlockFile(scope: !13542, file: !162, discriminator: 2)
!13560 = !DILocation(line: 5534, column: 156, scope: !13542)
!13561 = !DILocation(line: 5534, column: 164, scope: !13542)
!13562 = !DILocation(line: 5534, column: 173, scope: !13542)
!13563 = !DILocation(line: 5534, column: 125, scope: !13542)
!13564 = !DILocation(line: 5534, column: 133, scope: !13542)
!13565 = !DILocation(line: 5534, column: 147, scope: !13542)
!13566 = !DILocation(line: 5534, column: 151, scope: !13542)
!13567 = !DILocation(line: 5534, column: 154, scope: !13542)
!13568 = !DILocation(line: 5535, column: 9, scope: !13542)
!13569 = !DILocation(line: 5534, column: 184, scope: !13570)
!13570 = !DILexicalBlockFile(scope: !13571, file: !162, discriminator: 6)
!13571 = !DILexicalBlockFile(scope: !13542, file: !162, discriminator: 5)
!13572 = !DILocation(line: 5533, column: 27, scope: !13537)
!13573 = !DILocation(line: 5533, column: 5, scope: !13537)
!13574 = !DILocation(line: 5536, column: 13, scope: !1503)
!13575 = !DILocation(line: 5537, column: 3, scope: !1504)
!13576 = !DILocation(line: 5537, column: 3, scope: !13577)
!13577 = !DILexicalBlockFile(scope: !1504, file: !162, discriminator: 1)
!13578 = !DILocation(line: 5514, column: 3, scope: !1504)
!13579 = !DILocation(line: 5540, column: 30, scope: !1487)
!13580 = !DILocation(line: 5540, column: 35, scope: !1487)
!13581 = !DILocation(line: 5540, column: 3, scope: !1487)
!13582 = !DILocation(line: 5541, column: 3, scope: !1487)
!13583 = !DILocation(line: 5542, column: 5, scope: !1510)
!13584 = !DILocation(line: 5542, column: 21, scope: !1510)
!13585 = !DILocation(line: 5543, column: 5, scope: !1510)
!13586 = !DILocation(line: 5543, column: 13, scope: !1510)
!13587 = !DILocation(line: 5543, column: 27, scope: !1510)
!13588 = !DILocation(line: 5543, column: 17, scope: !1510)
!13589 = !DILocation(line: 5544, column: 10, scope: !13590)
!13590 = distinct !DILexicalBlock(scope: !1510, file: !162, line: 5544, column: 9)
!13591 = !DILocation(line: 5544, column: 9, scope: !1510)
!13592 = !DILocation(line: 5545, column: 7, scope: !13590)
!13593 = !DILocation(line: 5546, column: 10, scope: !13594)
!13594 = distinct !DILexicalBlock(scope: !1510, file: !162, line: 5546, column: 9)
!13595 = !DILocation(line: 5546, column: 13, scope: !13594)
!13596 = !DILocation(line: 5546, column: 9, scope: !1510)
!13597 = !DILocation(line: 5547, column: 7, scope: !13594)
!13598 = !DILocation(line: 5548, column: 9, scope: !13599)
!13599 = distinct !DILexicalBlock(scope: !1510, file: !162, line: 5548, column: 9)
!13600 = !DILocation(line: 5548, column: 17, scope: !13599)
!13601 = !DILocation(line: 5548, column: 26, scope: !13602)
!13602 = !DILexicalBlockFile(scope: !13599, file: !162, discriminator: 1)
!13603 = !DILocation(line: 5548, column: 34, scope: !13599)
!13604 = !DILocation(line: 5548, column: 48, scope: !13599)
!13605 = !DILocation(line: 5548, column: 58, scope: !13599)
!13606 = !DILocation(line: 5548, column: 66, scope: !13599)
!13607 = !DILocation(line: 5548, column: 80, scope: !13599)
!13608 = !DILocation(line: 5548, column: 52, scope: !13599)
!13609 = !DILocation(line: 5548, column: 84, scope: !13599)
!13610 = !DILocation(line: 5548, column: 99, scope: !13611)
!13611 = !DILexicalBlockFile(scope: !13599, file: !162, discriminator: 2)
!13612 = !DILocation(line: 5548, column: 107, scope: !13599)
!13613 = !DILocation(line: 5548, column: 88, scope: !13599)
!13614 = !DILocation(line: 5548, column: 9, scope: !1510)
!13615 = !DILocation(line: 5548, column: 22, scope: !13616)
!13616 = !DILexicalBlockFile(scope: !13599, file: !162, discriminator: 5)
!13617 = !DILocation(line: 5548, column: 134, scope: !13618)
!13618 = !DILexicalBlockFile(scope: !13619, file: !162, discriminator: 4)
!13619 = !DILexicalBlockFile(scope: !13599, file: !162, discriminator: 3)
!13620 = !DILocation(line: 5548, column: 142, scope: !13599)
!13621 = !DILocation(line: 5548, column: 156, scope: !13599)
!13622 = !DILocation(line: 5548, column: 160, scope: !13599)
!13623 = !DILocation(line: 5548, column: 163, scope: !13599)
!13624 = !DILocation(line: 5549, column: 7, scope: !13599)
!13625 = !DILocation(line: 5550, column: 14, scope: !13626)
!13626 = distinct !DILexicalBlock(scope: !1510, file: !162, line: 5550, column: 5)
!13627 = !DILocation(line: 5550, column: 17, scope: !13626)
!13628 = !DILocation(line: 5550, column: 12, scope: !13626)
!13629 = !DILocation(line: 5550, column: 10, scope: !13626)
!13630 = !DILocation(line: 5550, column: 24, scope: !13631)
!13631 = !DILexicalBlockFile(scope: !13632, file: !162, discriminator: 2)
!13632 = !DILexicalBlockFile(scope: !13633, file: !162, discriminator: 1)
!13633 = distinct !DILexicalBlock(scope: !13626, file: !162, line: 5550, column: 5)
!13634 = !DILocation(line: 5550, column: 23, scope: !13633)
!13635 = !DILocation(line: 5550, column: 5, scope: !13626)
!13636 = !DILocation(line: 5551, column: 17, scope: !13637)
!13637 = distinct !DILexicalBlock(scope: !13633, file: !162, line: 5551, column: 11)
!13638 = !DILocation(line: 5551, column: 25, scope: !13637)
!13639 = !DILocation(line: 5551, column: 39, scope: !13637)
!13640 = !DILocation(line: 5551, column: 49, scope: !13637)
!13641 = !DILocation(line: 5551, column: 57, scope: !13637)
!13642 = !DILocation(line: 5551, column: 71, scope: !13637)
!13643 = !DILocation(line: 5551, column: 43, scope: !13637)
!13644 = !DILocation(line: 5551, column: 75, scope: !13637)
!13645 = !DILocation(line: 5551, column: 90, scope: !13646)
!13646 = !DILexicalBlockFile(scope: !13637, file: !162, discriminator: 1)
!13647 = !DILocation(line: 5551, column: 98, scope: !13637)
!13648 = !DILocation(line: 5551, column: 79, scope: !13637)
!13649 = !DILocation(line: 5551, column: 11, scope: !13633)
!13650 = !DILocation(line: 5551, column: 13, scope: !13651)
!13651 = !DILexicalBlockFile(scope: !13637, file: !162, discriminator: 4)
!13652 = !DILocation(line: 5551, column: 157, scope: !13653)
!13653 = !DILexicalBlockFile(scope: !13654, file: !162, discriminator: 3)
!13654 = !DILexicalBlockFile(scope: !13637, file: !162, discriminator: 2)
!13655 = !DILocation(line: 5551, column: 156, scope: !13637)
!13656 = !DILocation(line: 5551, column: 125, scope: !13637)
!13657 = !DILocation(line: 5551, column: 133, scope: !13637)
!13658 = !DILocation(line: 5551, column: 147, scope: !13637)
!13659 = !DILocation(line: 5551, column: 151, scope: !13637)
!13660 = !DILocation(line: 5551, column: 154, scope: !13637)
!13661 = !DILocation(line: 5552, column: 9, scope: !13637)
!13662 = !DILocation(line: 5551, column: 163, scope: !13663)
!13663 = !DILexicalBlockFile(scope: !13664, file: !162, discriminator: 6)
!13664 = !DILexicalBlockFile(scope: !13637, file: !162, discriminator: 5)
!13665 = !DILocation(line: 5550, column: 28, scope: !13633)
!13666 = !DILocation(line: 5550, column: 5, scope: !13633)
!13667 = !DILocation(line: 5553, column: 13, scope: !1510)
!13668 = !DILocation(line: 5554, column: 3, scope: !1511)
!13669 = !DILocation(line: 5554, column: 3, scope: !13670)
!13670 = !DILexicalBlockFile(scope: !1511, file: !162, discriminator: 1)
!13671 = !DILocation(line: 5541, column: 3, scope: !1511)
!13672 = !DILocation(line: 5556, column: 13, scope: !13673)
!13673 = distinct !DILexicalBlock(scope: !1487, file: !162, line: 5556, column: 7)
!13674 = !DILocation(line: 5556, column: 21, scope: !13673)
!13675 = !DILocation(line: 5556, column: 35, scope: !13673)
!13676 = !DILocation(line: 5556, column: 45, scope: !13673)
!13677 = !DILocation(line: 5556, column: 53, scope: !13673)
!13678 = !DILocation(line: 5556, column: 67, scope: !13673)
!13679 = !DILocation(line: 5556, column: 39, scope: !13673)
!13680 = !DILocation(line: 5556, column: 71, scope: !13673)
!13681 = !DILocation(line: 5556, column: 86, scope: !13682)
!13682 = !DILexicalBlockFile(scope: !13673, file: !162, discriminator: 1)
!13683 = !DILocation(line: 5556, column: 94, scope: !13673)
!13684 = !DILocation(line: 5556, column: 75, scope: !13673)
!13685 = !DILocation(line: 5556, column: 7, scope: !1487)
!13686 = !DILocation(line: 5556, column: 9, scope: !13687)
!13687 = !DILexicalBlockFile(scope: !13673, file: !162, discriminator: 4)
!13688 = !DILocation(line: 5556, column: 121, scope: !13689)
!13689 = !DILexicalBlockFile(scope: !13690, file: !162, discriminator: 3)
!13690 = !DILexicalBlockFile(scope: !13673, file: !162, discriminator: 2)
!13691 = !DILocation(line: 5556, column: 129, scope: !13673)
!13692 = !DILocation(line: 5556, column: 143, scope: !13673)
!13693 = !DILocation(line: 5556, column: 147, scope: !13673)
!13694 = !DILocation(line: 5556, column: 150, scope: !13673)
!13695 = !DILocation(line: 5557, column: 5, scope: !13673)
!13696 = !DILocation(line: 5558, column: 11, scope: !1487)
!13697 = !DILocation(line: 5558, column: 19, scope: !1487)
!13698 = !DILocation(line: 5558, column: 31, scope: !1487)
!13699 = !DILocation(line: 5558, column: 3, scope: !1487)
!13700 = !DILocation(line: 5559, column: 1, scope: !1487)
!13701 = !DILocation(line: 2698, column: 22, scope: !1530)
!13702 = !DILocation(line: 2698, column: 46, scope: !1530)
!13703 = !DILocation(line: 2699, column: 23, scope: !1530)
!13704 = !DILocation(line: 2699, column: 41, scope: !1530)
!13705 = !DILocation(line: 2700, column: 21, scope: !1530)
!13706 = !DILocation(line: 2702, column: 3, scope: !1530)
!13707 = !DILocation(line: 2702, column: 15, scope: !1530)
!13708 = !DILocation(line: 2702, column: 22, scope: !1530)
!13709 = !DILocation(line: 2702, column: 30, scope: !1530)
!13710 = !DILocation(line: 2703, column: 3, scope: !1530)
!13711 = !DILocation(line: 2703, column: 17, scope: !1530)
!13712 = !DILocation(line: 2704, column: 3, scope: !1530)
!13713 = !DILocation(line: 2704, column: 7, scope: !1530)
!13714 = !DILocation(line: 2705, column: 3, scope: !1530)
!13715 = !DILocation(line: 2705, column: 20, scope: !1530)
!13716 = !DILocation(line: 2706, column: 3, scope: !1530)
!13717 = !DILocation(line: 2706, column: 7, scope: !1530)
!13718 = !DILocation(line: 2707, column: 3, scope: !1530)
!13719 = !DILocation(line: 2707, column: 7, scope: !1530)
!13720 = !DILocation(line: 2708, column: 3, scope: !1530)
!13721 = !DILocation(line: 2708, column: 7, scope: !1530)
!13722 = !DILocation(line: 2709, column: 3, scope: !1530)
!13723 = !DILocation(line: 2709, column: 7, scope: !1530)
!13724 = !DILocation(line: 2710, column: 3, scope: !1530)
!13725 = !DILocation(line: 2710, column: 13, scope: !1530)
!13726 = !DILocation(line: 2711, column: 3, scope: !1530)
!13727 = !DILocation(line: 2711, column: 7, scope: !1530)
!13728 = !DILocation(line: 2712, column: 3, scope: !1530)
!13729 = !DILocation(line: 2712, column: 12, scope: !1530)
!13730 = !DILocation(line: 2713, column: 3, scope: !1530)
!13731 = !DILocation(line: 2713, column: 19, scope: !1530)
!13732 = !DILocation(line: 2716, column: 40, scope: !1530)
!13733 = !DILocation(line: 2716, column: 49, scope: !1530)
!13734 = !DILocation(line: 2716, column: 54, scope: !1530)
!13735 = !DILocation(line: 2716, column: 68, scope: !1530)
!13736 = !DILocation(line: 2716, column: 80, scope: !1530)
!13737 = !DILocation(line: 2716, column: 33, scope: !1530)
!13738 = !DILocation(line: 2716, column: 17, scope: !1530)
!13739 = !DILocation(line: 2716, column: 15, scope: !1530)
!13740 = !DILocation(line: 2717, column: 8, scope: !1555)
!13741 = !DILocation(line: 2717, column: 7, scope: !1530)
!13742 = !DILocation(line: 2718, column: 5, scope: !1554)
!13743 = !DILocation(line: 2718, column: 21, scope: !1554)
!13744 = !DILocation(line: 2718, column: 44, scope: !1554)
!13745 = !DILocation(line: 2718, column: 49, scope: !1554)
!13746 = !DILocation(line: 2718, column: 55, scope: !1554)
!13747 = !DILocation(line: 2718, column: 67, scope: !1554)
!13748 = !DILocation(line: 2718, column: 28, scope: !1554)
!13749 = !DILocation(line: 2719, column: 10, scope: !13750)
!13750 = distinct !DILexicalBlock(scope: !1554, file: !162, line: 2719, column: 9)
!13751 = !DILocation(line: 2719, column: 9, scope: !1554)
!13752 = !DILocation(line: 2720, column: 7, scope: !13750)
!13753 = !DILocation(line: 2721, column: 42, scope: !1554)
!13754 = !DILocation(line: 2721, column: 51, scope: !1554)
!13755 = !DILocation(line: 2721, column: 56, scope: !1554)
!13756 = !DILocation(line: 2721, column: 70, scope: !1554)
!13757 = !DILocation(line: 2721, column: 35, scope: !1554)
!13758 = !DILocation(line: 2721, column: 19, scope: !1554)
!13759 = !DILocation(line: 2721, column: 17, scope: !1554)
!13760 = !DILocation(line: 2723, column: 10, scope: !13761)
!13761 = distinct !DILexicalBlock(scope: !1554, file: !162, line: 2723, column: 9)
!13762 = !DILocation(line: 2723, column: 9, scope: !1554)
!13763 = !DILocation(line: 2724, column: 7, scope: !13761)
!13764 = !DILocation(line: 2725, column: 10, scope: !13765)
!13765 = distinct !DILexicalBlock(scope: !1554, file: !162, line: 2725, column: 9)
!13766 = !DILocation(line: 2725, column: 18, scope: !13765)
!13767 = !DILocation(line: 2725, column: 9, scope: !13765)
!13768 = !DILocation(line: 2725, column: 24, scope: !13765)
!13769 = !DILocation(line: 2725, column: 49, scope: !13770)
!13770 = !DILexicalBlockFile(scope: !13765, file: !162, discriminator: 1)
!13771 = !DILocation(line: 2725, column: 57, scope: !13765)
!13772 = !DILocation(line: 2725, column: 28, scope: !13765)
!13773 = !DILocation(line: 2725, column: 9, scope: !1554)
!13774 = !DILocation(line: 2726, column: 7, scope: !13765)
!13775 = !DILocation(line: 2727, column: 3, scope: !1555)
!13776 = !DILocation(line: 2727, column: 3, scope: !13777)
!13777 = !DILexicalBlockFile(scope: !1555, file: !162, discriminator: 1)
!13778 = !DILocation(line: 2727, column: 3, scope: !1554)
!13779 = !DILocation(line: 2728, column: 18, scope: !1530)
!13780 = !DILocation(line: 2728, column: 31, scope: !1530)
!13781 = !DILocation(line: 2728, column: 16, scope: !1530)
!13782 = !DILocation(line: 2731, column: 10, scope: !1530)
!13783 = !DILocation(line: 2731, column: 16, scope: !1530)
!13784 = !{!2399, !2290, i64 80}
!13785 = !DILocation(line: 2731, column: 25, scope: !1530)
!13786 = !DILocation(line: 2731, column: 30, scope: !1530)
!13787 = !DILocation(line: 2731, column: 39, scope: !1530)
!13788 = !DILocation(line: 2731, column: 47, scope: !1530)
!13789 = !DILocation(line: 2731, column: 61, scope: !1530)
!13790 = !DILocation(line: 2731, column: 69, scope: !1530)
!13791 = !DILocation(line: 2731, column: 8, scope: !1530)
!13792 = !DILocation(line: 2731, column: 5, scope: !1530)
!13793 = !DILocation(line: 2732, column: 7, scope: !1558)
!13794 = !DILocation(line: 2732, column: 11, scope: !1558)
!13795 = !DILocation(line: 2732, column: 9, scope: !1558)
!13796 = !DILocation(line: 2732, column: 27, scope: !1558)
!13797 = !DILocation(line: 2732, column: 35, scope: !1558)
!13798 = !DILocation(line: 2732, column: 24, scope: !1558)
!13799 = !DILocation(line: 2732, column: 7, scope: !1530)
!13800 = !DILocation(line: 2733, column: 5, scope: !1557)
!13801 = !DILocation(line: 2733, column: 9, scope: !1557)
!13802 = !DILocation(line: 2733, column: 24, scope: !1557)
!13803 = !DILocation(line: 2733, column: 32, scope: !1557)
!13804 = !DILocation(line: 2734, column: 5, scope: !1557)
!13805 = !DILocation(line: 2734, column: 16, scope: !1557)
!13806 = !DILocation(line: 2738, column: 28, scope: !1557)
!13807 = !DILocation(line: 2738, column: 32, scope: !1557)
!13808 = !DILocation(line: 2738, column: 30, scope: !1557)
!13809 = !DILocation(line: 2738, column: 45, scope: !1557)
!13810 = !DILocation(line: 2738, column: 6, scope: !1557)
!13811 = !DILocation(line: 2738, column: 14, scope: !1557)
!13812 = !DILocation(line: 2738, column: 26, scope: !1557)
!13813 = !DILocation(line: 2739, column: 26, scope: !1557)
!13814 = !DILocation(line: 2739, column: 34, scope: !1557)
!13815 = !DILocation(line: 2739, column: 40, scope: !1557)
!13816 = !DILocation(line: 2739, column: 62, scope: !1557)
!13817 = !DILocation(line: 2739, column: 70, scope: !1557)
!13818 = !DILocation(line: 2739, column: 53, scope: !1557)
!13819 = !DILocation(line: 2739, column: 81, scope: !1557)
!13820 = !DILocation(line: 2739, column: 89, scope: !1557)
!13821 = !DILocation(line: 2739, column: 80, scope: !1557)
!13822 = !DILocation(line: 2739, column: 101, scope: !1557)
!13823 = !DILocation(line: 2739, column: 12, scope: !1557)
!13824 = !DILocation(line: 2739, column: 10, scope: !1557)
!13825 = !DILocation(line: 2740, column: 9, scope: !13826)
!13826 = distinct !DILexicalBlock(scope: !1557, file: !162, line: 2740, column: 9)
!13827 = !DILocation(line: 2740, column: 14, scope: !13826)
!13828 = !DILocation(line: 2740, column: 9, scope: !1557)
!13829 = !DILocation(line: 2741, column: 7, scope: !13826)
!13830 = !DILocation(line: 2742, column: 24, scope: !1557)
!13831 = !DILocation(line: 2742, column: 6, scope: !1557)
!13832 = !DILocation(line: 2742, column: 14, scope: !1557)
!13833 = !DILocation(line: 2742, column: 22, scope: !1557)
!13834 = !DILocation(line: 2749, column: 9, scope: !13835)
!13835 = distinct !DILexicalBlock(scope: !1557, file: !162, line: 2749, column: 9)
!13836 = !DILocation(line: 2749, column: 13, scope: !13835)
!13837 = !DILocation(line: 2749, column: 11, scope: !13835)
!13838 = !DILocation(line: 2749, column: 9, scope: !1557)
!13839 = !DILocation(line: 2750, column: 10, scope: !13835)
!13840 = !DILocation(line: 2750, column: 16, scope: !13835)
!13841 = !DILocation(line: 2750, column: 25, scope: !13835)
!13842 = !DILocation(line: 2750, column: 30, scope: !13835)
!13843 = !DILocation(line: 2750, column: 38, scope: !13835)
!13844 = !DILocation(line: 2750, column: 42, scope: !13835)
!13845 = !DILocation(line: 2750, column: 50, scope: !13835)
!13846 = !DILocation(line: 2750, column: 8, scope: !13835)
!13847 = !DILocation(line: 2750, column: 7, scope: !13835)
!13848 = !DILocation(line: 2751, column: 3, scope: !1558)
!13849 = !DILocation(line: 2751, column: 3, scope: !13850)
!13850 = !DILexicalBlockFile(scope: !1558, file: !162, discriminator: 1)
!13851 = !DILocation(line: 2751, column: 3, scope: !1557)
!13852 = !DILocation(line: 2753, column: 33, scope: !1530)
!13853 = !DILocation(line: 2753, column: 41, scope: !1530)
!13854 = !DILocation(line: 2753, column: 13, scope: !1530)
!13855 = !DILocation(line: 2753, column: 11, scope: !1530)
!13856 = !DILocation(line: 2754, column: 10, scope: !1563)
!13857 = !DILocation(line: 2754, column: 8, scope: !1563)
!13858 = !DILocation(line: 2754, column: 15, scope: !13859)
!13859 = !DILexicalBlockFile(scope: !13860, file: !162, discriminator: 2)
!13860 = !DILexicalBlockFile(scope: !1562, file: !162, discriminator: 1)
!13861 = !DILocation(line: 2754, column: 19, scope: !1562)
!13862 = !DILocation(line: 2754, column: 17, scope: !1562)
!13863 = !DILocation(line: 2754, column: 3, scope: !1563)
!13864 = !DILocation(line: 2755, column: 5, scope: !1561)
!13865 = !DILocation(line: 2755, column: 16, scope: !1561)
!13866 = !DILocation(line: 2755, column: 44, scope: !1561)
!13867 = !DILocation(line: 2755, column: 27, scope: !1561)
!13868 = !DILocation(line: 2755, column: 28, scope: !1561)
!13869 = !DILocation(line: 2755, column: 36, scope: !1561)
!13870 = !DILocation(line: 2760, column: 5, scope: !1561)
!13871 = !DILocation(line: 2760, column: 19, scope: !1561)
!13872 = !DILocation(line: 2760, column: 42, scope: !1561)
!13873 = !DILocation(line: 2760, column: 50, scope: !1561)
!13874 = !DILocation(line: 2760, column: 55, scope: !1561)
!13875 = !DILocation(line: 2760, column: 64, scope: !1561)
!13876 = !{!13877, !2290, i64 0}
!13877 = !{!"", !2290, i64 0, !2290, i64 8, !2290, i64 16, !2291, i64 24}
!13878 = !DILocation(line: 2761, column: 42, scope: !1561)
!13879 = !DILocation(line: 2761, column: 51, scope: !1561)
!13880 = !DILocation(line: 2762, column: 47, scope: !1561)
!13881 = !DILocation(line: 2762, column: 53, scope: !1561)
!13882 = !DILocation(line: 2762, column: 65, scope: !1561)
!13883 = !DILocation(line: 2762, column: 70, scope: !1561)
!13884 = !DILocation(line: 2762, column: 79, scope: !1561)
!13885 = !DILocation(line: 2762, column: 45, scope: !1561)
!13886 = !DILocation(line: 2762, column: 42, scope: !1561)
!13887 = !DILocation(line: 2760, column: 27, scope: !1561)
!13888 = !DILocation(line: 2763, column: 10, scope: !13889)
!13889 = distinct !DILexicalBlock(scope: !1561, file: !162, line: 2763, column: 9)
!13890 = !DILocation(line: 2763, column: 9, scope: !1561)
!13891 = !DILocation(line: 2764, column: 7, scope: !13889)
!13892 = !DILocation(line: 2777, column: 10, scope: !13893)
!13893 = distinct !DILexicalBlock(scope: !1561, file: !162, line: 2777, column: 9)
!13894 = !DILocation(line: 2777, column: 17, scope: !13893)
!13895 = !DILocation(line: 2777, column: 9, scope: !13893)
!13896 = !DILocation(line: 2777, column: 9, scope: !1561)
!13897 = !DILocation(line: 2778, column: 11, scope: !13898)
!13898 = distinct !DILexicalBlock(scope: !13899, file: !162, line: 2778, column: 11)
!13899 = distinct !DILexicalBlock(scope: !13893, file: !162, line: 2777, column: 28)
!13900 = !DILocation(line: 2778, column: 19, scope: !13898)
!13901 = !DILocation(line: 2778, column: 27, scope: !13898)
!13902 = !DILocation(line: 2778, column: 15, scope: !13898)
!13903 = !DILocation(line: 2778, column: 11, scope: !13899)
!13904 = !DILocation(line: 2779, column: 49, scope: !13898)
!13905 = !DILocation(line: 2779, column: 32, scope: !13898)
!13906 = !DILocation(line: 2779, column: 33, scope: !13898)
!13907 = !DILocation(line: 2779, column: 41, scope: !13898)
!13908 = !DILocation(line: 2779, column: 52, scope: !13898)
!13909 = !DILocation(line: 2779, column: 10, scope: !13898)
!13910 = !DILocation(line: 2779, column: 18, scope: !13898)
!13911 = !DILocation(line: 2779, column: 30, scope: !13898)
!13912 = !DILocation(line: 2779, column: 9, scope: !13898)
!13913 = !DILocation(line: 2780, column: 7, scope: !13899)
!13914 = !DILocation(line: 2782, column: 6, scope: !1561)
!13915 = !DILocation(line: 2782, column: 13, scope: !1561)
!13916 = !DILocation(line: 2782, column: 5, scope: !1561)
!13917 = !DILocation(line: 2782, column: 23, scope: !1561)
!13918 = !DILocation(line: 2783, column: 27, scope: !1561)
!13919 = !DILocation(line: 2783, column: 34, scope: !1561)
!13920 = !DILocation(line: 2783, column: 21, scope: !1561)
!13921 = !DILocation(line: 2783, column: 5, scope: !1561)
!13922 = !DILocation(line: 2783, column: 25, scope: !1561)
!13923 = !DILocation(line: 2784, column: 27, scope: !1567)
!13924 = !DILocation(line: 2784, column: 10, scope: !1567)
!13925 = !DILocation(line: 2784, column: 11, scope: !1567)
!13926 = !DILocation(line: 2784, column: 19, scope: !1567)
!13927 = !DILocation(line: 2784, column: 30, scope: !1567)
!13928 = !{!13877, !2291, i64 24}
!13929 = !DILocation(line: 2784, column: 9, scope: !1561)
!13930 = !DILocation(line: 2785, column: 7, scope: !1566)
!13931 = !DILocation(line: 2785, column: 22, scope: !1566)
!13932 = !DILocation(line: 2786, column: 7, scope: !1566)
!13933 = !DILocation(line: 2786, column: 16, scope: !1566)
!13934 = !DILocation(line: 2789, column: 11, scope: !1571)
!13935 = !DILocation(line: 2789, column: 18, scope: !1571)
!13936 = !DILocation(line: 2789, column: 11, scope: !1566)
!13937 = !DILocation(line: 2790, column: 9, scope: !1570)
!13938 = !DILocation(line: 2790, column: 13, scope: !1570)
!13939 = !DILocation(line: 2791, column: 16, scope: !13940)
!13940 = distinct !DILexicalBlock(scope: !1570, file: !162, line: 2791, column: 9)
!13941 = !DILocation(line: 2791, column: 14, scope: !13940)
!13942 = !DILocation(line: 2791, column: 21, scope: !13943)
!13943 = !DILexicalBlockFile(scope: !13944, file: !162, discriminator: 2)
!13944 = !DILexicalBlockFile(scope: !13945, file: !162, discriminator: 1)
!13945 = distinct !DILexicalBlock(scope: !13940, file: !162, line: 2791, column: 9)
!13946 = !DILocation(line: 2791, column: 25, scope: !13945)
!13947 = !DILocation(line: 2791, column: 23, scope: !13945)
!13948 = !DILocation(line: 2791, column: 9, scope: !13940)
!13949 = !DILocation(line: 2792, column: 15, scope: !13950)
!13950 = distinct !DILexicalBlock(scope: !13951, file: !162, line: 2792, column: 15)
!13951 = distinct !DILexicalBlock(scope: !13945, file: !162, line: 2791, column: 44)
!13952 = !DILocation(line: 2792, column: 49, scope: !13950)
!13953 = !DILocation(line: 2792, column: 24, scope: !13950)
!13954 = !DILocation(line: 2792, column: 37, scope: !13950)
!13955 = !DILocation(line: 2792, column: 52, scope: !13950)
!13956 = !DILocation(line: 2792, column: 21, scope: !13950)
!13957 = !DILocation(line: 2792, column: 15, scope: !13951)
!13958 = !DILocation(line: 2793, column: 48, scope: !13959)
!13959 = distinct !DILexicalBlock(scope: !13950, file: !162, line: 2792, column: 56)
!13960 = !DILocation(line: 2793, column: 23, scope: !13959)
!13961 = !DILocation(line: 2793, column: 36, scope: !13959)
!13962 = !DILocation(line: 2793, column: 51, scope: !13959)
!13963 = !DILocation(line: 2793, column: 21, scope: !13959)
!13964 = !DILocation(line: 2794, column: 13, scope: !13959)
!13965 = !DILocation(line: 2796, column: 9, scope: !13951)
!13966 = !DILocation(line: 2791, column: 40, scope: !13945)
!13967 = !DILocation(line: 2791, column: 9, scope: !13945)
!13968 = !DILocation(line: 2797, column: 7, scope: !1571)
!13969 = !DILocation(line: 2797, column: 7, scope: !1570)
!13970 = !DILocation(line: 2800, column: 36, scope: !1566)
!13971 = !DILocation(line: 2800, column: 44, scope: !1566)
!13972 = !DILocation(line: 2800, column: 49, scope: !1566)
!13973 = !DILocation(line: 2801, column: 53, scope: !1566)
!13974 = !DILocation(line: 2801, column: 36, scope: !1566)
!13975 = !DILocation(line: 2801, column: 37, scope: !1566)
!13976 = !DILocation(line: 2801, column: 45, scope: !1566)
!13977 = !DILocation(line: 2801, column: 56, scope: !1566)
!13978 = !{!13877, !2290, i64 8}
!13979 = !DILocation(line: 2801, column: 83, scope: !1566)
!13980 = !DILocation(line: 2801, column: 66, scope: !1566)
!13981 = !DILocation(line: 2801, column: 67, scope: !1566)
!13982 = !DILocation(line: 2801, column: 75, scope: !1566)
!13983 = !DILocation(line: 2801, column: 86, scope: !1566)
!13984 = !{!13877, !2290, i64 16}
!13985 = !DILocation(line: 2802, column: 38, scope: !1566)
!13986 = !DILocation(line: 2802, column: 46, scope: !1566)
!13987 = !DILocation(line: 2800, column: 16, scope: !1566)
!13988 = !DILocation(line: 2800, column: 14, scope: !1566)
!13989 = !DILocation(line: 2803, column: 11, scope: !13990)
!13990 = distinct !DILexicalBlock(scope: !1566, file: !162, line: 2803, column: 11)
!13991 = !DILocation(line: 2803, column: 11, scope: !1566)
!13992 = !DILocation(line: 2804, column: 16, scope: !13990)
!13993 = !DILocation(line: 2804, column: 9, scope: !13990)
!13994 = !DILocation(line: 2805, column: 31, scope: !1566)
!13995 = !DILocation(line: 2805, column: 39, scope: !1566)
!13996 = !DILocation(line: 2805, column: 53, scope: !1566)
!13997 = !DILocation(line: 2805, column: 15, scope: !1566)
!13998 = !DILocation(line: 2805, column: 7, scope: !1566)
!13999 = !DILocation(line: 2805, column: 25, scope: !1566)
!14000 = !DILocation(line: 2806, column: 44, scope: !1566)
!14001 = !DILocation(line: 2806, column: 52, scope: !1566)
!14002 = !DILocation(line: 2806, column: 66, scope: !1566)
!14003 = !DILocation(line: 2806, column: 11, scope: !1566)
!14004 = !DILocation(line: 2806, column: 19, scope: !1566)
!14005 = !DILocation(line: 2806, column: 33, scope: !1566)
!14006 = !DILocation(line: 2806, column: 39, scope: !1566)
!14007 = !DILocation(line: 2807, column: 5, scope: !1567)
!14008 = !DILocation(line: 2807, column: 5, scope: !14009)
!14009 = !DILexicalBlockFile(scope: !1567, file: !162, discriminator: 1)
!14010 = !DILocation(line: 2807, column: 5, scope: !1566)
!14011 = !DILocation(line: 2810, column: 45, scope: !14012)
!14012 = distinct !DILexicalBlock(scope: !1567, file: !162, line: 2808, column: 10)
!14013 = !DILocation(line: 2810, column: 53, scope: !14012)
!14014 = !DILocation(line: 2810, column: 66, scope: !14012)
!14015 = !DILocation(line: 2810, column: 88, scope: !14012)
!14016 = !DILocation(line: 2810, column: 71, scope: !14012)
!14017 = !DILocation(line: 2810, column: 72, scope: !14012)
!14018 = !DILocation(line: 2810, column: 80, scope: !14012)
!14019 = !DILocation(line: 2810, column: 91, scope: !14012)
!14020 = !DILocation(line: 2811, column: 60, scope: !14012)
!14021 = !DILocation(line: 2811, column: 43, scope: !14012)
!14022 = !DILocation(line: 2811, column: 44, scope: !14012)
!14023 = !DILocation(line: 2811, column: 52, scope: !14012)
!14024 = !DILocation(line: 2811, column: 63, scope: !14012)
!14025 = !DILocation(line: 2810, column: 27, scope: !14012)
!14026 = !DILocation(line: 2810, column: 15, scope: !14012)
!14027 = !DILocation(line: 2810, column: 7, scope: !14012)
!14028 = !DILocation(line: 2810, column: 25, scope: !14012)
!14029 = !DILocation(line: 2812, column: 19, scope: !14030)
!14030 = distinct !DILexicalBlock(scope: !14012, file: !162, line: 2812, column: 11)
!14031 = !DILocation(line: 2812, column: 11, scope: !14030)
!14032 = !DILocation(line: 2812, column: 29, scope: !14030)
!14033 = !DILocation(line: 2812, column: 11, scope: !14012)
!14034 = !DILocation(line: 2813, column: 9, scope: !14030)
!14035 = !DILocation(line: 2814, column: 44, scope: !14012)
!14036 = !DILocation(line: 2814, column: 52, scope: !14012)
!14037 = !DILocation(line: 2814, column: 66, scope: !14012)
!14038 = !DILocation(line: 2814, column: 11, scope: !14012)
!14039 = !DILocation(line: 2814, column: 19, scope: !14012)
!14040 = !DILocation(line: 2814, column: 33, scope: !14012)
!14041 = !DILocation(line: 2814, column: 39, scope: !14012)
!14042 = !DILocation(line: 2817, column: 9, scope: !1576)
!14043 = !DILocation(line: 2817, column: 16, scope: !1576)
!14044 = !DILocation(line: 2817, column: 9, scope: !1561)
!14045 = !DILocation(line: 2818, column: 11, scope: !1574)
!14046 = !DILocation(line: 2818, column: 18, scope: !1574)
!14047 = !DILocation(line: 2818, column: 11, scope: !1575)
!14048 = !DILocation(line: 2820, column: 9, scope: !1573)
!14049 = !DILocation(line: 2820, column: 24, scope: !1573)
!14050 = !DILocation(line: 2820, column: 44, scope: !1573)
!14051 = !DILocation(line: 2820, column: 52, scope: !1573)
!14052 = !DILocation(line: 2820, column: 59, scope: !1573)
!14053 = !DILocation(line: 2820, column: 67, scope: !1573)
!14054 = !DILocation(line: 2821, column: 52, scope: !1573)
!14055 = !DILocation(line: 2821, column: 44, scope: !1573)
!14056 = !DILocation(line: 2821, column: 63, scope: !1573)
!14057 = !DILocation(line: 2820, column: 33, scope: !1573)
!14058 = !DILocation(line: 2822, column: 13, scope: !14059)
!14059 = distinct !DILexicalBlock(scope: !1573, file: !162, line: 2822, column: 13)
!14060 = !DILocation(line: 2822, column: 13, scope: !1573)
!14061 = !DILocation(line: 2823, column: 18, scope: !14059)
!14062 = !DILocation(line: 2823, column: 11, scope: !14059)
!14063 = !DILocation(line: 2824, column: 9, scope: !1573)
!14064 = !DILocation(line: 2825, column: 7, scope: !1574)
!14065 = !DILocation(line: 2825, column: 7, scope: !14066)
!14066 = !DILexicalBlockFile(scope: !1574, file: !162, discriminator: 1)
!14067 = !DILocation(line: 2825, column: 7, scope: !1573)
!14068 = !DILocation(line: 2828, column: 17, scope: !14069)
!14069 = distinct !DILexicalBlock(scope: !1574, file: !162, line: 2826, column: 12)
!14070 = !DILocation(line: 2829, column: 18, scope: !14069)
!14071 = !DILocation(line: 2830, column: 10, scope: !14069)
!14072 = !DILocation(line: 2830, column: 17, scope: !14069)
!14073 = !DILocation(line: 2830, column: 9, scope: !14069)
!14074 = !DILocation(line: 2830, column: 27, scope: !14069)
!14075 = !DILocation(line: 2832, column: 5, scope: !1575)
!14076 = !DILocation(line: 2834, column: 15, scope: !1576)
!14077 = !DILocation(line: 2835, column: 3, scope: !1562)
!14078 = !DILocation(line: 2835, column: 3, scope: !13860)
!14079 = !DILocation(line: 2835, column: 3, scope: !1561)
!14080 = !DILocation(line: 2754, column: 23, scope: !1562)
!14081 = !DILocation(line: 2754, column: 3, scope: !1562)
!14082 = !DILocation(line: 2838, column: 32, scope: !1530)
!14083 = !DILocation(line: 2838, column: 4, scope: !1530)
!14084 = !DILocation(line: 2838, column: 12, scope: !1530)
!14085 = !DILocation(line: 2838, column: 30, scope: !1530)
!14086 = !DILocation(line: 2839, column: 7, scope: !14087)
!14087 = distinct !DILexicalBlock(scope: !1530, file: !162, line: 2839, column: 7)
!14088 = !DILocation(line: 2839, column: 20, scope: !14087)
!14089 = !DILocation(line: 2839, column: 26, scope: !14087)
!14090 = !DILocation(line: 2839, column: 30, scope: !14091)
!14091 = !DILexicalBlockFile(scope: !14087, file: !162, discriminator: 1)
!14092 = !DILocation(line: 2839, column: 43, scope: !14087)
!14093 = !DILocation(line: 2839, column: 50, scope: !14087)
!14094 = !DILocation(line: 2839, column: 29, scope: !14087)
!14095 = !DILocation(line: 2839, column: 7, scope: !1530)
!14096 = !DILocation(line: 2840, column: 12, scope: !14097)
!14097 = distinct !DILexicalBlock(scope: !14098, file: !162, line: 2840, column: 5)
!14098 = distinct !DILexicalBlock(scope: !14087, file: !162, line: 2839, column: 61)
!14099 = !DILocation(line: 2840, column: 10, scope: !14097)
!14100 = !DILocation(line: 2840, column: 17, scope: !14101)
!14101 = !DILexicalBlockFile(scope: !14102, file: !162, discriminator: 2)
!14102 = !DILexicalBlockFile(scope: !14103, file: !162, discriminator: 1)
!14103 = distinct !DILexicalBlock(scope: !14097, file: !162, line: 2840, column: 5)
!14104 = !DILocation(line: 2840, column: 21, scope: !14103)
!14105 = !DILocation(line: 2840, column: 19, scope: !14103)
!14106 = !DILocation(line: 2840, column: 5, scope: !14097)
!14107 = !DILocation(line: 2841, column: 19, scope: !14108)
!14108 = distinct !DILexicalBlock(scope: !14103, file: !162, line: 2841, column: 11)
!14109 = !DILocation(line: 2841, column: 11, scope: !14108)
!14110 = !DILocation(line: 2841, column: 25, scope: !14108)
!14111 = !DILocation(line: 2841, column: 38, scope: !14108)
!14112 = !DILocation(line: 2841, column: 45, scope: !14108)
!14113 = !DILocation(line: 2841, column: 22, scope: !14108)
!14114 = !DILocation(line: 2841, column: 11, scope: !14103)
!14115 = !DILocation(line: 2842, column: 34, scope: !14116)
!14116 = distinct !DILexicalBlock(scope: !14108, file: !162, line: 2841, column: 51)
!14117 = !DILocation(line: 2842, column: 10, scope: !14116)
!14118 = !DILocation(line: 2842, column: 18, scope: !14116)
!14119 = !DILocation(line: 2842, column: 32, scope: !14116)
!14120 = !DILocation(line: 2843, column: 9, scope: !14116)
!14121 = !DILocation(line: 2841, column: 45, scope: !14122)
!14122 = !DILexicalBlockFile(scope: !14108, file: !162, discriminator: 1)
!14123 = !DILocation(line: 2840, column: 33, scope: !14103)
!14124 = !DILocation(line: 2840, column: 5, scope: !14103)
!14125 = !DILocation(line: 2845, column: 3, scope: !14098)
!14126 = !DILocation(line: 2847, column: 6, scope: !14087)
!14127 = !DILocation(line: 2847, column: 14, scope: !14087)
!14128 = !DILocation(line: 2847, column: 28, scope: !14087)
!14129 = !DILocation(line: 2850, column: 10, scope: !1580)
!14130 = !DILocation(line: 2850, column: 8, scope: !1580)
!14131 = !DILocation(line: 2850, column: 15, scope: !14132)
!14132 = !DILexicalBlockFile(scope: !14133, file: !162, discriminator: 2)
!14133 = !DILexicalBlockFile(scope: !1579, file: !162, discriminator: 1)
!14134 = !DILocation(line: 2850, column: 19, scope: !1579)
!14135 = !DILocation(line: 2850, column: 17, scope: !1579)
!14136 = !DILocation(line: 2850, column: 3, scope: !1580)
!14137 = !DILocation(line: 2851, column: 5, scope: !1578)
!14138 = !DILocation(line: 2851, column: 30, scope: !1578)
!14139 = !DILocation(line: 2851, column: 35, scope: !1578)
!14140 = !DILocation(line: 2851, column: 48, scope: !1578)
!14141 = !DILocation(line: 2851, column: 62, scope: !1578)
!14142 = !DILocation(line: 2851, column: 60, scope: !1578)
!14143 = !DILocation(line: 2852, column: 11, scope: !1589)
!14144 = !DILocation(line: 2852, column: 15, scope: !1589)
!14145 = !DILocation(line: 2852, column: 19, scope: !1589)
!14146 = !DILocation(line: 2852, column: 10, scope: !1589)
!14147 = !DILocation(line: 2852, column: 29, scope: !1589)
!14148 = !DILocation(line: 2852, column: 32, scope: !14149)
!14149 = !DILexicalBlockFile(scope: !1589, file: !162, discriminator: 1)
!14150 = !DILocation(line: 2852, column: 36, scope: !1589)
!14151 = !DILocation(line: 2852, column: 32, scope: !1589)
!14152 = !DILocation(line: 2852, column: 9, scope: !1578)
!14153 = !DILocation(line: 2853, column: 11, scope: !1587)
!14154 = !DILocation(line: 2853, column: 15, scope: !1587)
!14155 = !DILocation(line: 2853, column: 19, scope: !1587)
!14156 = !DILocation(line: 2853, column: 11, scope: !1588)
!14157 = !DILocation(line: 2854, column: 13, scope: !1585)
!14158 = !DILocation(line: 2854, column: 17, scope: !1585)
!14159 = !DILocation(line: 2854, column: 21, scope: !1585)
!14160 = !DILocation(line: 2854, column: 13, scope: !1586)
!14161 = !DILocation(line: 2855, column: 11, scope: !1584)
!14162 = !DILocation(line: 2855, column: 26, scope: !1584)
!14163 = !DILocation(line: 2855, column: 46, scope: !1584)
!14164 = !DILocation(line: 2855, column: 54, scope: !1584)
!14165 = !DILocation(line: 2855, column: 58, scope: !1584)
!14166 = !DILocation(line: 2855, column: 62, scope: !1584)
!14167 = !DILocation(line: 2855, column: 70, scope: !1584)
!14168 = !DILocation(line: 2855, column: 74, scope: !1584)
!14169 = !DILocation(line: 2856, column: 46, scope: !1584)
!14170 = !DILocation(line: 2856, column: 50, scope: !1584)
!14171 = !DILocation(line: 2856, column: 57, scope: !1584)
!14172 = !DILocation(line: 2855, column: 35, scope: !1584)
!14173 = !DILocation(line: 2857, column: 15, scope: !14174)
!14174 = distinct !DILexicalBlock(scope: !1584, file: !162, line: 2857, column: 15)
!14175 = !DILocation(line: 2857, column: 15, scope: !1584)
!14176 = !DILocation(line: 2858, column: 20, scope: !14174)
!14177 = !DILocation(line: 2858, column: 13, scope: !14174)
!14178 = !DILocation(line: 2859, column: 9, scope: !1585)
!14179 = !DILocation(line: 2859, column: 9, scope: !14180)
!14180 = !DILexicalBlockFile(scope: !1585, file: !162, discriminator: 1)
!14181 = !DILocation(line: 2859, column: 9, scope: !1584)
!14182 = !DILocation(line: 2861, column: 12, scope: !14183)
!14183 = distinct !DILexicalBlock(scope: !1585, file: !162, line: 2860, column: 14)
!14184 = !DILocation(line: 2861, column: 16, scope: !14183)
!14185 = !DILocation(line: 2861, column: 20, scope: !14183)
!14186 = !DILocation(line: 2861, column: 11, scope: !14183)
!14187 = !DILocation(line: 2861, column: 30, scope: !14183)
!14188 = !DILocation(line: 2862, column: 20, scope: !14183)
!14189 = !DILocation(line: 2863, column: 33, scope: !14183)
!14190 = !DILocation(line: 2863, column: 37, scope: !14183)
!14191 = !DILocation(line: 2863, column: 41, scope: !14183)
!14192 = !DILocation(line: 2863, column: 27, scope: !14183)
!14193 = !DILocation(line: 2863, column: 11, scope: !14183)
!14194 = !DILocation(line: 2863, column: 31, scope: !14183)
!14195 = !DILocation(line: 2864, column: 33, scope: !14183)
!14196 = !DILocation(line: 2864, column: 37, scope: !14183)
!14197 = !DILocation(line: 2864, column: 27, scope: !14183)
!14198 = !DILocation(line: 2864, column: 11, scope: !14183)
!14199 = !DILocation(line: 2864, column: 31, scope: !14183)
!14200 = !DILocation(line: 2866, column: 7, scope: !1586)
!14201 = !DILocation(line: 2868, column: 10, scope: !14202)
!14202 = distinct !DILexicalBlock(scope: !1587, file: !162, line: 2867, column: 12)
!14203 = !DILocation(line: 2868, column: 14, scope: !14202)
!14204 = !DILocation(line: 2868, column: 18, scope: !14202)
!14205 = !DILocation(line: 2868, column: 9, scope: !14202)
!14206 = !DILocation(line: 2868, column: 28, scope: !14202)
!14207 = !DILocation(line: 2869, column: 31, scope: !14202)
!14208 = !DILocation(line: 2869, column: 35, scope: !14202)
!14209 = !DILocation(line: 2869, column: 39, scope: !14202)
!14210 = !DILocation(line: 2869, column: 25, scope: !14202)
!14211 = !DILocation(line: 2869, column: 9, scope: !14202)
!14212 = !DILocation(line: 2869, column: 29, scope: !14202)
!14213 = !DILocation(line: 2870, column: 31, scope: !14202)
!14214 = !DILocation(line: 2870, column: 35, scope: !14202)
!14215 = !DILocation(line: 2870, column: 25, scope: !14202)
!14216 = !DILocation(line: 2870, column: 9, scope: !14202)
!14217 = !DILocation(line: 2870, column: 29, scope: !14202)
!14218 = !DILocation(line: 2872, column: 5, scope: !1588)
!14219 = !DILocation(line: 2873, column: 3, scope: !1579)
!14220 = !DILocation(line: 2873, column: 3, scope: !14133)
!14221 = !DILocation(line: 2873, column: 3, scope: !1578)
!14222 = !DILocation(line: 2850, column: 34, scope: !1579)
!14223 = !DILocation(line: 2850, column: 3, scope: !1579)
!14224 = !DILocation(line: 2874, column: 11, scope: !1530)
!14225 = !DILocation(line: 2874, column: 3, scope: !1530)
!14226 = !DILocation(line: 2874, column: 21, scope: !1530)
!14227 = !DILocation(line: 2878, column: 5, scope: !1530)
!14228 = !DILocation(line: 2879, column: 7, scope: !1592)
!14229 = !DILocation(line: 2879, column: 7, scope: !1530)
!14230 = !DILocation(line: 2880, column: 5, scope: !1591)
!14231 = !DILocation(line: 2880, column: 9, scope: !1591)
!14232 = !DILocation(line: 2881, column: 5, scope: !1591)
!14233 = !DILocation(line: 2881, column: 19, scope: !1591)
!14234 = !DILocation(line: 2881, column: 30, scope: !1591)
!14235 = !DILocation(line: 2881, column: 38, scope: !1591)
!14236 = !DILocation(line: 2882, column: 5, scope: !1591)
!14237 = !DILocation(line: 2882, column: 9, scope: !1591)
!14238 = !DILocation(line: 2882, column: 33, scope: !1591)
!14239 = !DILocation(line: 2882, column: 41, scope: !1591)
!14240 = !DILocation(line: 2882, column: 32, scope: !1591)
!14241 = !DILocation(line: 2882, column: 29, scope: !1591)
!14242 = !DILocation(line: 2884, column: 10, scope: !1597)
!14243 = !DILocation(line: 2884, column: 20, scope: !1597)
!14244 = !DILocation(line: 2884, column: 30, scope: !1597)
!14245 = !DILocation(line: 2884, column: 38, scope: !1597)
!14246 = !DILocation(line: 2884, column: 29, scope: !1597)
!14247 = !DILocation(line: 2884, column: 26, scope: !1597)
!14248 = !DILocation(line: 2884, column: 9, scope: !1591)
!14249 = !DILocation(line: 2885, column: 7, scope: !1596)
!14250 = !DILocation(line: 2885, column: 15, scope: !1596)
!14251 = !DILocation(line: 2887, column: 7, scope: !1596)
!14252 = !DILocation(line: 2887, column: 14, scope: !14253)
!14253 = !DILexicalBlockFile(scope: !14254, file: !162, discriminator: 3)
!14254 = !DILexicalBlockFile(scope: !1596, file: !162, discriminator: 1)
!14255 = !DILocation(line: 2887, column: 28, scope: !1596)
!14256 = !DILocation(line: 2887, column: 36, scope: !1596)
!14257 = !DILocation(line: 2887, column: 50, scope: !1596)
!14258 = !DILocation(line: 2887, column: 27, scope: !1596)
!14259 = !DILocation(line: 2887, column: 24, scope: !1596)
!14260 = !DILocation(line: 2887, column: 7, scope: !14261)
!14261 = !DILexicalBlockFile(scope: !1596, file: !162, discriminator: 2)
!14262 = !DILocation(line: 2888, column: 12, scope: !14263)
!14263 = distinct !DILexicalBlock(scope: !1596, file: !162, line: 2888, column: 11)
!14264 = !DILocation(line: 2888, column: 20, scope: !14263)
!14265 = !DILocation(line: 2888, column: 11, scope: !14263)
!14266 = !DILocation(line: 2888, column: 35, scope: !14263)
!14267 = !DILocation(line: 2888, column: 11, scope: !1596)
!14268 = !DILocation(line: 2889, column: 10, scope: !14263)
!14269 = !DILocation(line: 2889, column: 18, scope: !14263)
!14270 = !DILocation(line: 2889, column: 33, scope: !14263)
!14271 = !DILocation(line: 2889, column: 9, scope: !14263)
!14272 = !DILocation(line: 2890, column: 31, scope: !1596)
!14273 = !DILocation(line: 2890, column: 39, scope: !1596)
!14274 = !DILocation(line: 2890, column: 30, scope: !1596)
!14275 = !DILocation(line: 2890, column: 27, scope: !1596)
!14276 = !DILocation(line: 2890, column: 18, scope: !1596)
!14277 = !DILocation(line: 2891, column: 25, scope: !1596)
!14278 = !DILocation(line: 2891, column: 33, scope: !1596)
!14279 = !DILocation(line: 2891, column: 39, scope: !1596)
!14280 = !DILocation(line: 2891, column: 53, scope: !1596)
!14281 = !DILocation(line: 2891, column: 61, scope: !1596)
!14282 = !DILocation(line: 2891, column: 51, scope: !1596)
!14283 = !DILocation(line: 2891, column: 73, scope: !1596)
!14284 = !DILocation(line: 2891, column: 84, scope: !1596)
!14285 = !DILocation(line: 2891, column: 14, scope: !1596)
!14286 = !DILocation(line: 2891, column: 12, scope: !1596)
!14287 = !DILocation(line: 2892, column: 12, scope: !14288)
!14288 = distinct !DILexicalBlock(scope: !1596, file: !162, line: 2892, column: 11)
!14289 = !DILocation(line: 2892, column: 11, scope: !1596)
!14290 = !DILocation(line: 2893, column: 9, scope: !14288)
!14291 = !DILocation(line: 2894, column: 28, scope: !1596)
!14292 = !DILocation(line: 2894, column: 8, scope: !1596)
!14293 = !DILocation(line: 2894, column: 16, scope: !1596)
!14294 = !DILocation(line: 2894, column: 26, scope: !1596)
!14295 = !DILocation(line: 2895, column: 15, scope: !1596)
!14296 = !DILocation(line: 2896, column: 5, scope: !1597)
!14297 = !DILocation(line: 2896, column: 5, scope: !14298)
!14298 = !DILexicalBlockFile(scope: !1597, file: !162, discriminator: 1)
!14299 = !DILocation(line: 2896, column: 5, scope: !1596)
!14300 = !DILocation(line: 2898, column: 10, scope: !14301)
!14301 = distinct !DILexicalBlock(scope: !1591, file: !162, line: 2898, column: 9)
!14302 = !DILocation(line: 2898, column: 9, scope: !1591)
!14303 = !DILocation(line: 2899, column: 15, scope: !14304)
!14304 = distinct !DILexicalBlock(scope: !14301, file: !162, line: 2898, column: 19)
!14305 = !DILocation(line: 2900, column: 16, scope: !14306)
!14306 = distinct !DILexicalBlock(scope: !14304, file: !162, line: 2900, column: 7)
!14307 = !DILocation(line: 2900, column: 14, scope: !14306)
!14308 = !DILocation(line: 2900, column: 12, scope: !14306)
!14309 = !DILocation(line: 2900, column: 28, scope: !14310)
!14310 = !DILexicalBlockFile(scope: !14311, file: !162, discriminator: 2)
!14311 = !DILexicalBlockFile(scope: !14312, file: !162, discriminator: 1)
!14312 = distinct !DILexicalBlock(scope: !14306, file: !162, line: 2900, column: 7)
!14313 = !DILocation(line: 2900, column: 30, scope: !14312)
!14314 = !DILocation(line: 2900, column: 7, scope: !14306)
!14315 = !DILocation(line: 2901, column: 43, scope: !14312)
!14316 = !DILocation(line: 2901, column: 28, scope: !14312)
!14317 = !DILocation(line: 2901, column: 9, scope: !14312)
!14318 = !DILocation(line: 2901, column: 10, scope: !14312)
!14319 = !DILocation(line: 2901, column: 18, scope: !14312)
!14320 = !DILocation(line: 2901, column: 33, scope: !14312)
!14321 = !DILocation(line: 2901, column: 41, scope: !14312)
!14322 = !{!14323, !2397, i64 0}
!14323 = !{!"", !2397, i64 0, !2397, i64 8, !2290, i64 16}
!14324 = !DILocation(line: 2900, column: 7, scope: !14312)
!14325 = !DILocation(line: 2902, column: 5, scope: !14304)
!14326 = !DILocation(line: 2903, column: 33, scope: !1591)
!14327 = !DILocation(line: 2903, column: 6, scope: !1591)
!14328 = !DILocation(line: 2903, column: 14, scope: !1591)
!14329 = !DILocation(line: 2903, column: 31, scope: !1591)
!14330 = !DILocation(line: 2906, column: 5, scope: !1591)
!14331 = !DILocation(line: 2906, column: 12, scope: !14332)
!14332 = !DILexicalBlockFile(scope: !14333, file: !162, discriminator: 2)
!14333 = !DILexicalBlockFile(scope: !1600, file: !162, discriminator: 1)
!14334 = !DILocation(line: 2906, column: 16, scope: !1600)
!14335 = !DILocation(line: 2906, column: 14, scope: !1600)
!14336 = !DILocation(line: 2906, column: 5, scope: !1601)
!14337 = !DILocation(line: 2907, column: 7, scope: !1599)
!14338 = !DILocation(line: 2907, column: 23, scope: !1599)
!14339 = !DILocation(line: 2907, column: 35, scope: !1599)
!14340 = !DILocation(line: 2907, column: 27, scope: !1599)
!14341 = !DILocation(line: 2908, column: 11, scope: !1604)
!14342 = !DILocation(line: 2908, column: 17, scope: !1604)
!14343 = !DILocation(line: 2908, column: 11, scope: !1599)
!14344 = !DILocation(line: 2909, column: 9, scope: !1603)
!14345 = !DILocation(line: 2909, column: 23, scope: !1603)
!14346 = !DILocation(line: 2910, column: 9, scope: !1603)
!14347 = !DILocation(line: 2910, column: 24, scope: !1603)
!14348 = !DILocation(line: 2911, column: 9, scope: !1603)
!14349 = !DILocation(line: 2911, column: 23, scope: !1603)
!14350 = !DILocation(line: 2911, column: 34, scope: !1603)
!14351 = !DILocation(line: 2911, column: 42, scope: !1603)
!14352 = !DILocation(line: 2912, column: 22, scope: !1603)
!14353 = !DILocation(line: 2912, column: 9, scope: !1603)
!14354 = !DILocation(line: 2912, column: 29, scope: !1603)
!14355 = !DILocation(line: 2913, column: 37, scope: !1603)
!14356 = !DILocation(line: 2913, column: 46, scope: !1603)
!14357 = !DILocation(line: 2913, column: 51, scope: !1603)
!14358 = !DILocation(line: 2913, column: 65, scope: !1603)
!14359 = !DILocation(line: 2913, column: 30, scope: !1603)
!14360 = !DILocation(line: 2913, column: 14, scope: !1603)
!14361 = !DILocation(line: 2913, column: 12, scope: !1603)
!14362 = !DILocation(line: 2914, column: 13, scope: !1603)
!14363 = !DILocation(line: 2914, column: 17, scope: !1603)
!14364 = !DILocation(line: 2914, column: 25, scope: !1603)
!14365 = !DILocation(line: 2914, column: 11, scope: !1603)
!14366 = !DILocation(line: 2915, column: 14, scope: !14367)
!14367 = distinct !DILexicalBlock(scope: !1603, file: !162, line: 2915, column: 13)
!14368 = !DILocation(line: 2915, column: 13, scope: !1603)
!14369 = !DILocation(line: 2916, column: 11, scope: !14367)
!14370 = !DILocation(line: 2919, column: 16, scope: !1612)
!14371 = !DILocation(line: 2919, column: 14, scope: !1612)
!14372 = !DILocation(line: 2919, column: 21, scope: !14373)
!14373 = !DILexicalBlockFile(scope: !14374, file: !162, discriminator: 2)
!14374 = !DILexicalBlockFile(scope: !1611, file: !162, discriminator: 1)
!14375 = !DILocation(line: 2919, column: 25, scope: !1611)
!14376 = !DILocation(line: 2919, column: 28, scope: !1611)
!14377 = !DILocation(line: 2919, column: 23, scope: !1611)
!14378 = !DILocation(line: 2919, column: 9, scope: !1612)
!14379 = !DILocation(line: 2920, column: 11, scope: !1610)
!14380 = !DILocation(line: 2920, column: 26, scope: !1610)
!14381 = !DILocation(line: 2920, column: 37, scope: !1610)
!14382 = !DILocation(line: 2920, column: 30, scope: !1610)
!14383 = !DILocation(line: 2920, column: 33, scope: !1610)
!14384 = !DILocation(line: 2921, column: 21, scope: !14385)
!14385 = distinct !DILexicalBlock(scope: !1610, file: !162, line: 2921, column: 15)
!14386 = !DILocation(line: 2921, column: 29, scope: !14385)
!14387 = !DILocation(line: 2921, column: 43, scope: !14385)
!14388 = !DILocation(line: 2921, column: 53, scope: !14385)
!14389 = !DILocation(line: 2921, column: 61, scope: !14385)
!14390 = !DILocation(line: 2921, column: 75, scope: !14385)
!14391 = !DILocation(line: 2921, column: 47, scope: !14385)
!14392 = !DILocation(line: 2921, column: 79, scope: !14385)
!14393 = !DILocation(line: 2921, column: 94, scope: !14394)
!14394 = !DILexicalBlockFile(scope: !14385, file: !162, discriminator: 1)
!14395 = !DILocation(line: 2921, column: 102, scope: !14385)
!14396 = !DILocation(line: 2921, column: 83, scope: !14385)
!14397 = !DILocation(line: 2921, column: 15, scope: !1610)
!14398 = !DILocation(line: 2921, column: 17, scope: !14399)
!14399 = !DILexicalBlockFile(scope: !14385, file: !162, discriminator: 4)
!14400 = !DILocation(line: 2921, column: 160, scope: !14401)
!14401 = !DILexicalBlockFile(scope: !14402, file: !162, discriminator: 3)
!14402 = !DILexicalBlockFile(scope: !14385, file: !162, discriminator: 2)
!14403 = !DILocation(line: 2921, column: 129, scope: !14385)
!14404 = !DILocation(line: 2921, column: 137, scope: !14385)
!14405 = !DILocation(line: 2921, column: 151, scope: !14385)
!14406 = !DILocation(line: 2921, column: 155, scope: !14385)
!14407 = !DILocation(line: 2921, column: 158, scope: !14385)
!14408 = !DILocation(line: 2922, column: 13, scope: !14385)
!14409 = !DILocation(line: 2923, column: 24, scope: !1610)
!14410 = !DILocation(line: 2923, column: 33, scope: !1610)
!14411 = !DILocation(line: 2923, column: 62, scope: !1610)
!14412 = !DILocation(line: 2923, column: 46, scope: !1610)
!14413 = !DILocation(line: 2923, column: 44, scope: !1610)
!14414 = !DILocation(line: 2923, column: 19, scope: !1610)
!14415 = !DILocation(line: 2924, column: 9, scope: !1611)
!14416 = !DILocation(line: 2924, column: 9, scope: !1610)
!14417 = !DILocation(line: 2919, column: 37, scope: !1611)
!14418 = !DILocation(line: 2919, column: 9, scope: !1611)
!14419 = !DILocation(line: 2925, column: 9, scope: !1603)
!14420 = !DILocation(line: 2925, column: 18, scope: !14421)
!14421 = !DILexicalBlockFile(scope: !14422, file: !162, discriminator: 3)
!14422 = !DILexicalBlockFile(scope: !1603, file: !162, discriminator: 1)
!14423 = !DILocation(line: 2925, column: 16, scope: !1603)
!14424 = !DILocation(line: 2925, column: 21, scope: !1603)
!14425 = !DILocation(line: 2925, column: 9, scope: !14426)
!14426 = !DILexicalBlockFile(scope: !1603, file: !162, discriminator: 2)
!14427 = !DILocation(line: 2927, column: 9, scope: !1603)
!14428 = !DILocation(line: 2928, column: 11, scope: !1614)
!14429 = !DILocation(line: 2928, column: 26, scope: !1614)
!14430 = !DILocation(line: 2928, column: 31, scope: !1614)
!14431 = !DILocation(line: 2928, column: 30, scope: !1614)
!14432 = !DILocation(line: 2929, column: 21, scope: !14433)
!14433 = distinct !DILexicalBlock(scope: !1614, file: !162, line: 2929, column: 15)
!14434 = !DILocation(line: 2929, column: 29, scope: !14433)
!14435 = !DILocation(line: 2929, column: 43, scope: !14433)
!14436 = !DILocation(line: 2929, column: 53, scope: !14433)
!14437 = !DILocation(line: 2929, column: 61, scope: !14433)
!14438 = !DILocation(line: 2929, column: 75, scope: !14433)
!14439 = !DILocation(line: 2929, column: 47, scope: !14433)
!14440 = !DILocation(line: 2929, column: 79, scope: !14433)
!14441 = !DILocation(line: 2929, column: 94, scope: !14442)
!14442 = !DILexicalBlockFile(scope: !14433, file: !162, discriminator: 1)
!14443 = !DILocation(line: 2929, column: 102, scope: !14433)
!14444 = !DILocation(line: 2929, column: 83, scope: !14433)
!14445 = !DILocation(line: 2929, column: 15, scope: !1614)
!14446 = !DILocation(line: 2929, column: 17, scope: !14447)
!14447 = !DILexicalBlockFile(scope: !14433, file: !162, discriminator: 4)
!14448 = !DILocation(line: 2929, column: 161, scope: !14449)
!14449 = !DILexicalBlockFile(scope: !14450, file: !162, discriminator: 3)
!14450 = !DILexicalBlockFile(scope: !14433, file: !162, discriminator: 2)
!14451 = !DILocation(line: 2929, column: 160, scope: !14433)
!14452 = !DILocation(line: 2929, column: 129, scope: !14433)
!14453 = !DILocation(line: 2929, column: 137, scope: !14433)
!14454 = !DILocation(line: 2929, column: 151, scope: !14433)
!14455 = !DILocation(line: 2929, column: 155, scope: !14433)
!14456 = !DILocation(line: 2929, column: 158, scope: !14433)
!14457 = !DILocation(line: 2930, column: 13, scope: !14433)
!14458 = !DILocation(line: 2931, column: 24, scope: !1614)
!14459 = !DILocation(line: 2931, column: 33, scope: !1614)
!14460 = !DILocation(line: 2931, column: 62, scope: !1614)
!14461 = !DILocation(line: 2931, column: 46, scope: !1614)
!14462 = !DILocation(line: 2931, column: 44, scope: !1614)
!14463 = !DILocation(line: 2931, column: 19, scope: !1614)
!14464 = !DILocation(line: 2932, column: 9, scope: !1603)
!14465 = !DILocation(line: 2932, column: 9, scope: !1614)
!14466 = !DILocation(line: 2932, column: 20, scope: !14422)
!14467 = !DILocation(line: 2932, column: 18, scope: !1603)
!14468 = !DILocation(line: 2937, column: 11, scope: !1616)
!14469 = !DILocation(line: 2937, column: 25, scope: !1616)
!14470 = !DILocation(line: 2938, column: 11, scope: !1616)
!14471 = !DILocation(line: 2938, column: 25, scope: !1616)
!14472 = !DILocation(line: 2938, column: 32, scope: !1616)
!14473 = !DILocation(line: 2938, column: 43, scope: !1616)
!14474 = !DILocation(line: 2939, column: 15, scope: !1616)
!14475 = !DILocation(line: 2939, column: 25, scope: !1616)
!14476 = !DILocation(line: 2939, column: 23, scope: !1616)
!14477 = !DILocation(line: 2939, column: 13, scope: !1616)
!14478 = !DILocation(line: 2940, column: 11, scope: !1616)
!14479 = !DILocation(line: 2940, column: 37, scope: !14480)
!14480 = !DILexicalBlockFile(scope: !14481, file: !162, discriminator: 2)
!14481 = !DILexicalBlockFile(scope: !1616, file: !162, discriminator: 1)
!14482 = !DILocation(line: 2940, column: 18, scope: !1616)
!14483 = !DILocation(line: 2940, column: 19, scope: !1616)
!14484 = !DILocation(line: 2940, column: 27, scope: !1616)
!14485 = !DILocation(line: 2940, column: 40, scope: !1616)
!14486 = !DILocation(line: 2940, column: 51, scope: !1616)
!14487 = !DILocation(line: 2940, column: 48, scope: !1616)
!14488 = !DILocation(line: 2942, column: 17, scope: !1620)
!14489 = !DILocation(line: 2942, column: 47, scope: !1620)
!14490 = !DILocation(line: 2942, column: 28, scope: !1620)
!14491 = !DILocation(line: 2942, column: 29, scope: !1620)
!14492 = !DILocation(line: 2942, column: 37, scope: !1620)
!14493 = !DILocation(line: 2942, column: 50, scope: !1620)
!14494 = !{!14323, !2397, i64 8}
!14495 = !DILocation(line: 2942, column: 25, scope: !1620)
!14496 = !DILocation(line: 2942, column: 17, scope: !1621)
!14497 = !DILocation(line: 2943, column: 15, scope: !1619)
!14498 = !DILocation(line: 2943, column: 31, scope: !1619)
!14499 = !DILocation(line: 2943, column: 40, scope: !1619)
!14500 = !DILocation(line: 2943, column: 48, scope: !1619)
!14501 = !DILocation(line: 2943, column: 62, scope: !1619)
!14502 = !DILocation(line: 2944, column: 15, scope: !1619)
!14503 = !DILocation(line: 2944, column: 31, scope: !1619)
!14504 = !DILocation(line: 2944, column: 55, scope: !1619)
!14505 = !DILocation(line: 2944, column: 36, scope: !1619)
!14506 = !DILocation(line: 2944, column: 37, scope: !1619)
!14507 = !DILocation(line: 2944, column: 45, scope: !1619)
!14508 = !DILocation(line: 2944, column: 58, scope: !1619)
!14509 = !{!14323, !2290, i64 16}
!14510 = !DILocation(line: 2946, column: 15, scope: !1619)
!14511 = !DILocation(line: 2946, column: 23, scope: !14512)
!14512 = !DILexicalBlockFile(scope: !14513, file: !162, discriminator: 6)
!14513 = !DILexicalBlockFile(scope: !14514, file: !162, discriminator: 1)
!14514 = distinct !DILexicalBlock(scope: !14515, file: !162, line: 2946, column: 15)
!14515 = distinct !DILexicalBlock(scope: !1619, file: !162, line: 2946, column: 15)
!14516 = !DILocation(line: 2946, column: 22, scope: !14514)
!14517 = !DILocation(line: 2946, column: 30, scope: !14514)
!14518 = !DILocation(line: 2946, column: 29, scope: !14514)
!14519 = !DILocation(line: 2946, column: 26, scope: !14514)
!14520 = !DILocation(line: 2946, column: 33, scope: !14514)
!14521 = !DILocation(line: 2946, column: 37, scope: !14522)
!14522 = !DILexicalBlockFile(scope: !14514, file: !162, discriminator: 2)
!14523 = !DILocation(line: 2946, column: 36, scope: !14514)
!14524 = !DILocation(line: 2946, column: 40, scope: !14514)
!14525 = !DILocation(line: 2946, column: 15, scope: !14526)
!14526 = !DILexicalBlockFile(scope: !14515, file: !162, discriminator: 3)
!14527 = !DILocation(line: 2946, column: 15, scope: !14528)
!14528 = !DILexicalBlockFile(scope: !14515, file: !162, discriminator: 4)
!14529 = !DILocation(line: 2946, column: 48, scope: !14530)
!14530 = !DILexicalBlockFile(scope: !14514, file: !162, discriminator: 5)
!14531 = !DILocation(line: 2946, column: 54, scope: !14514)
!14532 = !DILocation(line: 2946, column: 15, scope: !14514)
!14533 = !DILocation(line: 2947, column: 20, scope: !14534)
!14534 = distinct !DILexicalBlock(scope: !1619, file: !162, line: 2947, column: 19)
!14535 = !DILocation(line: 2947, column: 19, scope: !14534)
!14536 = !DILocation(line: 2947, column: 23, scope: !14534)
!14537 = !DILocation(line: 2947, column: 19, scope: !1619)
!14538 = !DILocation(line: 2948, column: 17, scope: !14534)
!14539 = !DILocation(line: 2949, column: 13, scope: !1620)
!14540 = !DILocation(line: 2949, column: 13, scope: !14541)
!14541 = !DILexicalBlockFile(scope: !1620, file: !162, discriminator: 1)
!14542 = !DILocation(line: 2949, column: 13, scope: !1619)
!14543 = !DILocation(line: 2950, column: 18, scope: !14544)
!14544 = distinct !DILexicalBlock(scope: !1621, file: !162, line: 2950, column: 17)
!14545 = !DILocation(line: 2950, column: 17, scope: !1621)
!14546 = !DILocation(line: 2951, column: 44, scope: !14544)
!14547 = !DILocation(line: 2951, column: 57, scope: !14544)
!14548 = !DILocation(line: 2951, column: 55, scope: !14544)
!14549 = !DILocation(line: 2951, column: 53, scope: !14544)
!14550 = !DILocation(line: 2951, column: 70, scope: !14544)
!14551 = !DILocation(line: 2951, column: 78, scope: !14544)
!14552 = !DILocation(line: 2951, column: 68, scope: !14544)
!14553 = !DILocation(line: 2951, column: 94, scope: !14544)
!14554 = !DILocation(line: 2951, column: 64, scope: !14544)
!14555 = !DILocation(line: 2951, column: 104, scope: !14544)
!14556 = !DILocation(line: 2951, column: 110, scope: !14544)
!14557 = !DILocation(line: 2951, column: 100, scope: !14544)
!14558 = !DILocation(line: 2951, column: 118, scope: !14544)
!14559 = !DILocation(line: 2951, column: 23, scope: !14544)
!14560 = !DILocation(line: 2951, column: 20, scope: !14544)
!14561 = !DILocation(line: 2951, column: 15, scope: !14544)
!14562 = !DILocation(line: 2952, column: 13, scope: !1621)
!14563 = !DILocation(line: 2952, column: 17, scope: !1621)
!14564 = !DILocation(line: 2952, column: 15, scope: !1621)
!14565 = !DILocation(line: 2952, column: 30, scope: !14566)
!14566 = !DILexicalBlockFile(scope: !1621, file: !162, discriminator: 1)
!14567 = !DILocation(line: 2952, column: 43, scope: !1621)
!14568 = !DILocation(line: 2952, column: 41, scope: !1621)
!14569 = !DILocation(line: 2952, column: 27, scope: !1621)
!14570 = !DILocation(line: 2952, column: 57, scope: !14571)
!14571 = !DILexicalBlockFile(scope: !1621, file: !162, discriminator: 2)
!14572 = !DILocation(line: 2952, column: 54, scope: !1621)
!14573 = !DILocation(line: 2954, column: 9, scope: !1603)
!14574 = !DILocation(line: 2954, column: 9, scope: !14422)
!14575 = !DILocation(line: 2956, column: 14, scope: !14576)
!14576 = distinct !DILexicalBlock(scope: !1603, file: !162, line: 2956, column: 13)
!14577 = !DILocation(line: 2956, column: 22, scope: !14576)
!14578 = !DILocation(line: 2956, column: 13, scope: !14576)
!14579 = !DILocation(line: 2956, column: 13, scope: !1603)
!14580 = !DILocation(line: 2957, column: 43, scope: !14581)
!14581 = distinct !DILexicalBlock(scope: !14576, file: !162, line: 2956, column: 38)
!14582 = !DILocation(line: 2957, column: 51, scope: !14581)
!14583 = !DILocation(line: 2957, column: 12, scope: !14581)
!14584 = !DILocation(line: 2957, column: 20, scope: !14581)
!14585 = !DILocation(line: 2957, column: 32, scope: !14581)
!14586 = !{!2396, !2290, i64 816}
!14587 = !DILocation(line: 2957, column: 11, scope: !14581)
!14588 = !DILocation(line: 2957, column: 40, scope: !14581)
!14589 = !DILocation(line: 2958, column: 15, scope: !14581)
!14590 = !DILocation(line: 2958, column: 18, scope: !14581)
!14591 = !DILocation(line: 2958, column: 26, scope: !14581)
!14592 = !DILocation(line: 2958, column: 13, scope: !14581)
!14593 = !DILocation(line: 2959, column: 11, scope: !14581)
!14594 = !DILocation(line: 2960, column: 23, scope: !14595)
!14595 = distinct !DILexicalBlock(scope: !14596, file: !162, line: 2960, column: 17)
!14596 = distinct !DILexicalBlock(scope: !14581, file: !162, line: 2959, column: 14)
!14597 = !DILocation(line: 2960, column: 31, scope: !14595)
!14598 = !DILocation(line: 2960, column: 45, scope: !14595)
!14599 = !DILocation(line: 2960, column: 55, scope: !14595)
!14600 = !DILocation(line: 2960, column: 63, scope: !14595)
!14601 = !DILocation(line: 2960, column: 77, scope: !14595)
!14602 = !DILocation(line: 2960, column: 49, scope: !14595)
!14603 = !DILocation(line: 2960, column: 81, scope: !14595)
!14604 = !DILocation(line: 2960, column: 96, scope: !14605)
!14605 = !DILexicalBlockFile(scope: !14595, file: !162, discriminator: 1)
!14606 = !DILocation(line: 2960, column: 104, scope: !14595)
!14607 = !DILocation(line: 2960, column: 85, scope: !14595)
!14608 = !DILocation(line: 2960, column: 17, scope: !14596)
!14609 = !DILocation(line: 2960, column: 19, scope: !14610)
!14610 = !DILexicalBlockFile(scope: !14595, file: !162, discriminator: 4)
!14611 = !DILocation(line: 2960, column: 163, scope: !14612)
!14612 = !DILexicalBlockFile(scope: !14613, file: !162, discriminator: 3)
!14613 = !DILexicalBlockFile(scope: !14595, file: !162, discriminator: 2)
!14614 = !DILocation(line: 2960, column: 162, scope: !14595)
!14615 = !DILocation(line: 2960, column: 131, scope: !14595)
!14616 = !DILocation(line: 2960, column: 139, scope: !14595)
!14617 = !DILocation(line: 2960, column: 153, scope: !14595)
!14618 = !DILocation(line: 2960, column: 157, scope: !14595)
!14619 = !DILocation(line: 2960, column: 160, scope: !14595)
!14620 = !DILocation(line: 2961, column: 15, scope: !14595)
!14621 = !DILocation(line: 2962, column: 11, scope: !14596)
!14622 = !DILocation(line: 2962, column: 22, scope: !14623)
!14623 = !DILexicalBlockFile(scope: !14581, file: !162, discriminator: 1)
!14624 = !DILocation(line: 2962, column: 20, scope: !14581)
!14625 = !DILocation(line: 2963, column: 9, scope: !14581)
!14626 = !DILocation(line: 2966, column: 17, scope: !1603)
!14627 = !DILocation(line: 2966, column: 25, scope: !1603)
!14628 = !DILocation(line: 2966, column: 39, scope: !1603)
!14629 = !DILocation(line: 2966, column: 11, scope: !1603)
!14630 = !DILocation(line: 2967, column: 46, scope: !1603)
!14631 = !DILocation(line: 2967, column: 54, scope: !1603)
!14632 = !DILocation(line: 2967, column: 68, scope: !1603)
!14633 = !DILocation(line: 2967, column: 13, scope: !1603)
!14634 = !DILocation(line: 2967, column: 21, scope: !1603)
!14635 = !DILocation(line: 2967, column: 35, scope: !1603)
!14636 = !DILocation(line: 2967, column: 41, scope: !1603)
!14637 = !DILocation(line: 2968, column: 22, scope: !1603)
!14638 = !DILocation(line: 2968, column: 17, scope: !1603)
!14639 = !DILocation(line: 2968, column: 9, scope: !1603)
!14640 = !DILocation(line: 2968, column: 20, scope: !1603)
!14641 = !DILocation(line: 2971, column: 41, scope: !1603)
!14642 = !DILocation(line: 2971, column: 28, scope: !1603)
!14643 = !DILocation(line: 2971, column: 9, scope: !1603)
!14644 = !DILocation(line: 2971, column: 10, scope: !1603)
!14645 = !DILocation(line: 2971, column: 18, scope: !1603)
!14646 = !DILocation(line: 2971, column: 31, scope: !1603)
!14647 = !DILocation(line: 2971, column: 39, scope: !1603)
!14648 = !DILocation(line: 2972, column: 38, scope: !1603)
!14649 = !DILocation(line: 2972, column: 28, scope: !1603)
!14650 = !DILocation(line: 2972, column: 9, scope: !1603)
!14651 = !DILocation(line: 2972, column: 10, scope: !1603)
!14652 = !DILocation(line: 2972, column: 18, scope: !1603)
!14653 = !DILocation(line: 2972, column: 31, scope: !1603)
!14654 = !DILocation(line: 2972, column: 36, scope: !1603)
!14655 = !DILocation(line: 2973, column: 41, scope: !1603)
!14656 = !DILocation(line: 2973, column: 28, scope: !1603)
!14657 = !DILocation(line: 2973, column: 9, scope: !1603)
!14658 = !DILocation(line: 2973, column: 10, scope: !1603)
!14659 = !DILocation(line: 2973, column: 18, scope: !1603)
!14660 = !DILocation(line: 2973, column: 31, scope: !1603)
!14661 = !DILocation(line: 2973, column: 39, scope: !1603)
!14662 = !DILocation(line: 2975, column: 14, scope: !14663)
!14663 = distinct !DILexicalBlock(scope: !1603, file: !162, line: 2975, column: 13)
!14664 = !DILocation(line: 2975, column: 13, scope: !1603)
!14665 = !DILocation(line: 2976, column: 13, scope: !14666)
!14666 = distinct !DILexicalBlock(scope: !14663, file: !162, line: 2975, column: 27)
!14667 = !DILocation(line: 2977, column: 11, scope: !14666)
!14668 = !DILocation(line: 2979, column: 7, scope: !1604)
!14669 = !DILocation(line: 2979, column: 7, scope: !14670)
!14670 = !DILexicalBlockFile(scope: !1604, file: !162, discriminator: 1)
!14671 = !DILocation(line: 2979, column: 7, scope: !1603)
!14672 = !DILocation(line: 2981, column: 22, scope: !1604)
!14673 = !DILocation(line: 2981, column: 9, scope: !1604)
!14674 = !DILocation(line: 2981, column: 29, scope: !1604)
!14675 = !DILocation(line: 2982, column: 5, scope: !1600)
!14676 = !DILocation(line: 2982, column: 5, scope: !14333)
!14677 = !DILocation(line: 2982, column: 5, scope: !1599)
!14678 = !DILocation(line: 2906, column: 28, scope: !1600)
!14679 = !DILocation(line: 2906, column: 5, scope: !1600)
!14680 = !DILocation(line: 2983, column: 3, scope: !1592)
!14681 = !DILocation(line: 2983, column: 3, scope: !14682)
!14682 = !DILexicalBlockFile(scope: !1592, file: !162, discriminator: 1)
!14683 = !DILocation(line: 2983, column: 3, scope: !1591)
!14684 = !DILocation(line: 2985, column: 3, scope: !1530)
!14685 = !DILocation(line: 2985, column: 10, scope: !14686)
!14686 = !DILexicalBlockFile(scope: !14687, file: !162, discriminator: 2)
!14687 = !DILexicalBlockFile(scope: !14688, file: !162, discriminator: 1)
!14688 = distinct !DILexicalBlock(scope: !14689, file: !162, line: 2985, column: 3)
!14689 = distinct !DILexicalBlock(scope: !1530, file: !162, line: 2985, column: 3)
!14690 = !DILocation(line: 2985, column: 14, scope: !14688)
!14691 = !DILocation(line: 2985, column: 12, scope: !14688)
!14692 = !DILocation(line: 2985, column: 3, scope: !14689)
!14693 = !DILocation(line: 2986, column: 27, scope: !14688)
!14694 = !DILocation(line: 2986, column: 19, scope: !14688)
!14695 = !DILocation(line: 2986, column: 5, scope: !14688)
!14696 = !DILocation(line: 2986, column: 36, scope: !14688)
!14697 = !DILocation(line: 2985, column: 26, scope: !14688)
!14698 = !DILocation(line: 2985, column: 3, scope: !14688)
!14699 = !DILocation(line: 2987, column: 19, scope: !14700)
!14700 = distinct !DILexicalBlock(scope: !1530, file: !162, line: 2987, column: 3)
!14701 = !DILocation(line: 2987, column: 18, scope: !14700)
!14702 = !DILocation(line: 2987, column: 16, scope: !14700)
!14703 = !DILocation(line: 2987, column: 8, scope: !14700)
!14704 = !DILocation(line: 2987, column: 32, scope: !14705)
!14705 = !DILexicalBlockFile(scope: !14706, file: !162, discriminator: 2)
!14706 = !DILexicalBlockFile(scope: !14707, file: !162, discriminator: 1)
!14707 = distinct !DILexicalBlock(scope: !14700, file: !162, line: 2987, column: 3)
!14708 = !DILocation(line: 2987, column: 3, scope: !14700)
!14709 = !DILocation(line: 2988, column: 5, scope: !14707)
!14710 = !DILocation(line: 2988, column: 14, scope: !14707)
!14711 = !{!2737, !2290, i64 24}
!14712 = !DILocation(line: 2988, column: 21, scope: !14707)
!14713 = !DILocation(line: 2988, column: 30, scope: !14707)
!14714 = !DILocation(line: 2987, column: 51, scope: !14707)
!14715 = !DILocation(line: 2987, column: 60, scope: !14707)
!14716 = !DILocation(line: 2987, column: 49, scope: !14707)
!14717 = !DILocation(line: 2987, column: 3, scope: !14707)
!14718 = !DILocation(line: 2990, column: 9, scope: !14719)
!14719 = distinct !DILexicalBlock(scope: !1530, file: !162, line: 2990, column: 7)
!14720 = !DILocation(line: 2990, column: 17, scope: !14719)
!14721 = !DILocation(line: 2990, column: 8, scope: !14719)
!14722 = !DILocation(line: 2990, column: 7, scope: !1530)
!14723 = !DILocation(line: 2991, column: 5, scope: !14719)
!14724 = !DILocation(line: 2994, column: 7, scope: !14725)
!14725 = distinct !DILexicalBlock(scope: !1530, file: !162, line: 2994, column: 7)
!14726 = !DILocation(line: 2994, column: 20, scope: !14725)
!14727 = !DILocation(line: 2994, column: 7, scope: !1530)
!14728 = !DILocation(line: 2995, column: 15, scope: !14729)
!14729 = distinct !DILexicalBlock(scope: !14725, file: !162, line: 2994, column: 28)
!14730 = !DILocation(line: 2995, column: 28, scope: !14729)
!14731 = !DILocation(line: 2995, column: 36, scope: !14729)
!14732 = !DILocation(line: 2995, column: 13, scope: !14729)
!14733 = !DILocation(line: 2996, column: 10, scope: !14734)
!14734 = distinct !DILexicalBlock(scope: !14729, file: !162, line: 2996, column: 9)
!14735 = !DILocation(line: 2996, column: 9, scope: !14729)
!14736 = !DILocation(line: 2997, column: 7, scope: !14734)
!14737 = !DILocation(line: 2998, column: 17, scope: !14729)
!14738 = !DILocation(line: 2998, column: 29, scope: !14729)
!14739 = !DILocation(line: 2998, column: 15, scope: !14729)
!14740 = !DILocation(line: 2999, column: 5, scope: !14729)
!14741 = !DILocation(line: 2999, column: 22, scope: !14742)
!14742 = !DILexicalBlockFile(scope: !14743, file: !162, discriminator: 3)
!14743 = !DILexicalBlockFile(scope: !14729, file: !162, discriminator: 1)
!14744 = !DILocation(line: 2999, column: 12, scope: !14729)
!14745 = !DILocation(line: 2999, column: 25, scope: !14729)
!14746 = !DILocation(line: 2999, column: 5, scope: !14747)
!14747 = !DILexicalBlockFile(scope: !14729, file: !162, discriminator: 2)
!14748 = !DILocation(line: 3001, column: 3, scope: !14729)
!14749 = !DILocation(line: 3002, column: 12, scope: !14750)
!14750 = distinct !DILexicalBlock(scope: !14725, file: !162, line: 3002, column: 12)
!14751 = !DILocation(line: 3002, column: 17, scope: !14750)
!14752 = !DILocation(line: 3002, column: 31, scope: !14750)
!14753 = !DILocation(line: 3002, column: 12, scope: !14725)
!14754 = !DILocation(line: 3003, column: 15, scope: !14755)
!14755 = distinct !DILexicalBlock(scope: !14750, file: !162, line: 3002, column: 40)
!14756 = !DILocation(line: 3003, column: 20, scope: !14755)
!14757 = !DILocation(line: 3003, column: 34, scope: !14755)
!14758 = !DILocation(line: 3003, column: 13, scope: !14755)
!14759 = !DILocation(line: 3004, column: 17, scope: !14755)
!14760 = !DILocation(line: 3004, column: 29, scope: !14755)
!14761 = !DILocation(line: 3004, column: 15, scope: !14755)
!14762 = !DILocation(line: 3005, column: 3, scope: !14755)
!14763 = !DILocation(line: 3007, column: 5, scope: !14750)
!14764 = !DILocation(line: 3008, column: 13, scope: !1530)
!14765 = !DILocation(line: 3009, column: 8, scope: !14766)
!14766 = distinct !DILexicalBlock(scope: !1530, file: !162, line: 3009, column: 7)
!14767 = !DILocation(line: 3009, column: 16, scope: !14766)
!14768 = !DILocation(line: 3009, column: 7, scope: !14766)
!14769 = !DILocation(line: 3009, column: 31, scope: !14766)
!14770 = !DILocation(line: 3009, column: 34, scope: !14771)
!14771 = !DILexicalBlockFile(scope: !14766, file: !162, discriminator: 1)
!14772 = !DILocation(line: 3009, column: 43, scope: !14766)
!14773 = !DILocation(line: 3009, column: 51, scope: !14766)
!14774 = !DILocation(line: 3009, column: 34, scope: !14766)
!14775 = !DILocation(line: 3009, column: 7, scope: !1530)
!14776 = !DILocation(line: 3010, column: 5, scope: !14777)
!14777 = distinct !DILexicalBlock(scope: !14766, file: !162, line: 3009, column: 57)
!14778 = !DILocation(line: 3010, column: 43, scope: !14779)
!14779 = !DILexicalBlockFile(scope: !14780, file: !162, discriminator: 3)
!14780 = !DILexicalBlockFile(scope: !14781, file: !162, discriminator: 1)
!14781 = distinct !DILexicalBlock(scope: !14782, file: !162, line: 3010, column: 5)
!14782 = distinct !DILexicalBlock(scope: !14777, file: !162, line: 3010, column: 5)
!14783 = !DILocation(line: 3010, column: 12, scope: !14781)
!14784 = !DILocation(line: 3010, column: 21, scope: !14781)
!14785 = !DILocation(line: 3010, column: 29, scope: !14781)
!14786 = !DILocation(line: 3010, column: 5, scope: !14782)
!14787 = !DILocation(line: 3010, column: 5, scope: !14788)
!14788 = !DILexicalBlockFile(scope: !14781, file: !162, discriminator: 2)
!14789 = !DILocation(line: 3012, column: 3, scope: !14777)
!14790 = !DILocation(line: 3013, column: 27, scope: !1530)
!14791 = !DILocation(line: 3013, column: 3, scope: !1530)
!14792 = !DILocation(line: 3013, column: 15, scope: !1530)
!14793 = !DILocation(line: 3013, column: 25, scope: !1530)
!14794 = !{!2642, !2290, i64 8}
!14795 = !DILocation(line: 3014, column: 24, scope: !1530)
!14796 = !DILocation(line: 3014, column: 33, scope: !1530)
!14797 = !DILocation(line: 3014, column: 3, scope: !1530)
!14798 = !DILocation(line: 3014, column: 15, scope: !1530)
!14799 = !DILocation(line: 3014, column: 22, scope: !1530)
!14800 = !{!2642, !2400, i64 28}
!14801 = !DILocation(line: 3015, column: 24, scope: !1530)
!14802 = !DILocation(line: 3015, column: 33, scope: !1530)
!14803 = !DILocation(line: 3015, column: 41, scope: !1530)
!14804 = !DILocation(line: 3015, column: 3, scope: !1530)
!14805 = !DILocation(line: 3015, column: 15, scope: !1530)
!14806 = !DILocation(line: 3015, column: 22, scope: !1530)
!14807 = !{!2642, !2290, i64 16}
!14808 = !DILocation(line: 3016, column: 27, scope: !1530)
!14809 = !DILocation(line: 3016, column: 3, scope: !1530)
!14810 = !DILocation(line: 3016, column: 15, scope: !1530)
!14811 = !DILocation(line: 3016, column: 25, scope: !1530)
!14812 = !{!2642, !2400, i64 32}
!14813 = !DILocation(line: 3017, column: 10, scope: !14814)
!14814 = distinct !DILexicalBlock(scope: !1530, file: !162, line: 3017, column: 3)
!14815 = !DILocation(line: 3017, column: 8, scope: !14814)
!14816 = !DILocation(line: 3017, column: 26, scope: !14817)
!14817 = !DILexicalBlockFile(scope: !14818, file: !162, discriminator: 3)
!14818 = !DILexicalBlockFile(scope: !14819, file: !162, discriminator: 1)
!14819 = distinct !DILexicalBlock(scope: !14814, file: !162, line: 3017, column: 3)
!14820 = !DILocation(line: 3017, column: 15, scope: !14819)
!14821 = !DILocation(line: 3017, column: 3, scope: !14814)
!14822 = !DILocation(line: 3017, column: 3, scope: !14823)
!14823 = !DILexicalBlockFile(scope: !14819, file: !162, discriminator: 2)
!14824 = !DILocation(line: 3019, column: 7, scope: !1530)
!14825 = !DILocation(line: 3019, column: 11, scope: !1530)
!14826 = !DILocation(line: 3019, column: 20, scope: !1530)
!14827 = !DILocation(line: 3019, column: 9, scope: !1530)
!14828 = !DILocation(line: 3019, column: 29, scope: !1530)
!14829 = !DILocation(line: 3019, column: 27, scope: !1530)
!14830 = !DILocation(line: 3019, column: 5, scope: !1530)
!14831 = !DILocation(line: 3020, column: 7, scope: !1625)
!14832 = !DILocation(line: 3020, column: 11, scope: !1625)
!14833 = !DILocation(line: 3020, column: 20, scope: !1625)
!14834 = !{!2737, !2400, i64 44}
!14835 = !DILocation(line: 3020, column: 9, scope: !1625)
!14836 = !DILocation(line: 3020, column: 7, scope: !1530)
!14837 = !DILocation(line: 3021, column: 5, scope: !1624)
!14838 = !DILocation(line: 3021, column: 10, scope: !1624)
!14839 = !DILocation(line: 3022, column: 24, scope: !1624)
!14840 = !DILocation(line: 3022, column: 32, scope: !1624)
!14841 = !DILocation(line: 3022, column: 38, scope: !1624)
!14842 = !DILocation(line: 3022, column: 51, scope: !1624)
!14843 = !DILocation(line: 3022, column: 53, scope: !1624)
!14844 = !DILocation(line: 3022, column: 50, scope: !1624)
!14845 = !DILocation(line: 3022, column: 59, scope: !1624)
!14846 = !DILocation(line: 3022, column: 9, scope: !1624)
!14847 = !DILocation(line: 3023, column: 10, scope: !14848)
!14848 = distinct !DILexicalBlock(scope: !1624, file: !162, line: 3023, column: 9)
!14849 = !DILocation(line: 3023, column: 9, scope: !1624)
!14850 = !DILocation(line: 3024, column: 7, scope: !14848)
!14851 = !DILocation(line: 3025, column: 25, scope: !1624)
!14852 = !DILocation(line: 3025, column: 27, scope: !1624)
!14853 = !DILocation(line: 3025, column: 5, scope: !1624)
!14854 = !DILocation(line: 3025, column: 14, scope: !1624)
!14855 = !DILocation(line: 3025, column: 23, scope: !1624)
!14856 = !DILocation(line: 3026, column: 12, scope: !1624)
!14857 = !DILocation(line: 3026, column: 17, scope: !1624)
!14858 = !DILocation(line: 3026, column: 26, scope: !1624)
!14859 = !DILocation(line: 3026, column: 31, scope: !1624)
!14860 = !DILocation(line: 3026, column: 40, scope: !1624)
!14861 = !DILocation(line: 3026, column: 47, scope: !1624)
!14862 = !DILocation(line: 3026, column: 5, scope: !1624)
!14863 = !DILocation(line: 3027, column: 15, scope: !14864)
!14864 = distinct !DILexicalBlock(scope: !1624, file: !162, line: 3027, column: 5)
!14865 = !DILocation(line: 3027, column: 23, scope: !14864)
!14866 = !DILocation(line: 3027, column: 12, scope: !14864)
!14867 = !DILocation(line: 3027, column: 10, scope: !14864)
!14868 = !DILocation(line: 3027, column: 36, scope: !14869)
!14869 = !DILexicalBlockFile(scope: !14870, file: !162, discriminator: 2)
!14870 = !DILexicalBlockFile(scope: !14871, file: !162, discriminator: 1)
!14871 = distinct !DILexicalBlock(scope: !14864, file: !162, line: 3027, column: 5)
!14872 = !DILocation(line: 3027, column: 5, scope: !14864)
!14873 = !DILocation(line: 3028, column: 11, scope: !14874)
!14874 = distinct !DILexicalBlock(scope: !14871, file: !162, line: 3028, column: 11)
!14875 = !DILocation(line: 3028, column: 14, scope: !14874)
!14876 = !DILocation(line: 3028, column: 19, scope: !14874)
!14877 = !DILocation(line: 3028, column: 26, scope: !14874)
!14878 = !DILocation(line: 3028, column: 35, scope: !14874)
!14879 = !DILocation(line: 3028, column: 23, scope: !14874)
!14880 = !DILocation(line: 3028, column: 11, scope: !14871)
!14881 = !DILocation(line: 3029, column: 23, scope: !14874)
!14882 = !DILocation(line: 3029, column: 9, scope: !14874)
!14883 = !DILocation(line: 3029, column: 12, scope: !14874)
!14884 = !DILocation(line: 3029, column: 17, scope: !14874)
!14885 = !DILocation(line: 3029, column: 21, scope: !14874)
!14886 = !DILocation(line: 3028, column: 35, scope: !14887)
!14887 = !DILexicalBlockFile(scope: !14874, file: !162, discriminator: 1)
!14888 = !DILocation(line: 3027, column: 43, scope: !14871)
!14889 = !DILocation(line: 3027, column: 46, scope: !14871)
!14890 = !DILocation(line: 3027, column: 41, scope: !14871)
!14891 = !DILocation(line: 3027, column: 5, scope: !14871)
!14892 = !DILocation(line: 3030, column: 6, scope: !1624)
!14893 = !DILocation(line: 3030, column: 14, scope: !1624)
!14894 = !DILocation(line: 3030, column: 20, scope: !1624)
!14895 = !DILocation(line: 3030, column: 30, scope: !1624)
!14896 = !DILocation(line: 3030, column: 39, scope: !1624)
!14897 = !DILocation(line: 3031, column: 20, scope: !1624)
!14898 = !DILocation(line: 3031, column: 5, scope: !1624)
!14899 = !DILocation(line: 3031, column: 14, scope: !1624)
!14900 = !DILocation(line: 3031, column: 18, scope: !1624)
!14901 = !DILocation(line: 3032, column: 3, scope: !1625)
!14902 = !DILocation(line: 3032, column: 3, scope: !14903)
!14903 = !DILexicalBlockFile(scope: !1625, file: !162, discriminator: 1)
!14904 = !DILocation(line: 3032, column: 3, scope: !1624)
!14905 = !DILocation(line: 3034, column: 9, scope: !1530)
!14906 = !DILocation(line: 3034, column: 18, scope: !1530)
!14907 = !DILocation(line: 3034, column: 24, scope: !1530)
!14908 = !DILocation(line: 3034, column: 33, scope: !1530)
!14909 = !DILocation(line: 3034, column: 22, scope: !1530)
!14910 = !DILocation(line: 3034, column: 7, scope: !1530)
!14911 = !DILocation(line: 3035, column: 10, scope: !1530)
!14912 = !DILocation(line: 3035, column: 15, scope: !1530)
!14913 = !DILocation(line: 3035, column: 26, scope: !1530)
!14914 = !DILocation(line: 3035, column: 28, scope: !1530)
!14915 = !DILocation(line: 3035, column: 3, scope: !1530)
!14916 = !DILocation(line: 3037, column: 7, scope: !14917)
!14917 = distinct !DILexicalBlock(scope: !1530, file: !162, line: 3037, column: 7)
!14918 = !DILocation(line: 3037, column: 7, scope: !1530)
!14919 = !DILocation(line: 3038, column: 12, scope: !14920)
!14920 = distinct !DILexicalBlock(scope: !14917, file: !162, line: 3037, column: 18)
!14921 = !DILocation(line: 3038, column: 14, scope: !14920)
!14922 = !DILocation(line: 3038, column: 9, scope: !14920)
!14923 = !DILocation(line: 3039, column: 13, scope: !14920)
!14924 = !DILocation(line: 3039, column: 21, scope: !14920)
!14925 = !DILocation(line: 3039, column: 6, scope: !14920)
!14926 = !DILocation(line: 3039, column: 10, scope: !14920)
!14927 = !DILocation(line: 3040, column: 12, scope: !14920)
!14928 = !DILocation(line: 3040, column: 16, scope: !14920)
!14929 = !DILocation(line: 3040, column: 21, scope: !14920)
!14930 = !DILocation(line: 3040, column: 30, scope: !14920)
!14931 = !DILocation(line: 3040, column: 38, scope: !14920)
!14932 = !DILocation(line: 3040, column: 44, scope: !14920)
!14933 = !DILocation(line: 3040, column: 54, scope: !14920)
!14934 = !DILocation(line: 3040, column: 5, scope: !14920)
!14935 = !DILocation(line: 3041, column: 3, scope: !14920)
!14936 = !DILocation(line: 3042, column: 21, scope: !1530)
!14937 = !DILocation(line: 3042, column: 30, scope: !1530)
!14938 = !DILocation(line: 3042, column: 3, scope: !1530)
!14939 = !DILocation(line: 3042, column: 15, scope: !1530)
!14940 = !DILocation(line: 3042, column: 19, scope: !1530)
!14941 = !DILocation(line: 3043, column: 3, scope: !1530)
!14942 = !DILocation(line: 3044, column: 1, scope: !1530)
!14943 = !DILocation(line: 4728, column: 28, scope: !1660)
!14944 = !DILocation(line: 4729, column: 29, scope: !1660)
!14945 = !DILocation(line: 4730, column: 29, scope: !1660)
!14946 = !DILocation(line: 4731, column: 30, scope: !1660)
!14947 = !DILocation(line: 4733, column: 4, scope: !1660)
!14948 = !DILocation(line: 4733, column: 12, scope: !1660)
!14949 = !DILocation(line: 4733, column: 25, scope: !1660)
!14950 = !DILocation(line: 4734, column: 26, scope: !1660)
!14951 = !DILocation(line: 4734, column: 4, scope: !1660)
!14952 = !DILocation(line: 4734, column: 12, scope: !1660)
!14953 = !DILocation(line: 4734, column: 24, scope: !1660)
!14954 = !DILocation(line: 4735, column: 3, scope: !1660)
!14955 = !DILocation(line: 4736, column: 5, scope: !1667)
!14956 = !DILocation(line: 4736, column: 17, scope: !1667)
!14957 = !DILocation(line: 4737, column: 5, scope: !1667)
!14958 = !DILocation(line: 4737, column: 9, scope: !1667)
!14959 = !DILocation(line: 4737, column: 19, scope: !1667)
!14960 = !DILocation(line: 4737, column: 27, scope: !1667)
!14961 = !DILocation(line: 4737, column: 41, scope: !1667)
!14962 = !DILocation(line: 4737, column: 17, scope: !1667)
!14963 = !DILocation(line: 4737, column: 55, scope: !1667)
!14964 = !DILocation(line: 4737, column: 63, scope: !1667)
!14965 = !DILocation(line: 4737, column: 76, scope: !1667)
!14966 = !DILocation(line: 4737, column: 79, scope: !1667)
!14967 = !DILocation(line: 4737, column: 16, scope: !1667)
!14968 = !DILocation(line: 4738, column: 31, scope: !1667)
!14969 = !DILocation(line: 4738, column: 6, scope: !1667)
!14970 = !DILocation(line: 4738, column: 14, scope: !1667)
!14971 = !DILocation(line: 4738, column: 29, scope: !1667)
!14972 = !DILocation(line: 4739, column: 13, scope: !1667)
!14973 = !DILocation(line: 4739, column: 5, scope: !1667)
!14974 = !DILocation(line: 4742, column: 12, scope: !14975)
!14975 = distinct !DILexicalBlock(scope: !14976, file: !162, line: 4742, column: 11)
!14976 = distinct !DILexicalBlock(scope: !1667, file: !162, line: 4739, column: 18)
!14977 = !DILocation(line: 4742, column: 20, scope: !14975)
!14978 = !DILocation(line: 4742, column: 11, scope: !14975)
!14979 = !DILocation(line: 4742, column: 11, scope: !14976)
!14980 = !DILocation(line: 4743, column: 23, scope: !14981)
!14981 = distinct !DILexicalBlock(scope: !14975, file: !162, line: 4742, column: 39)
!14982 = !DILocation(line: 4743, column: 32, scope: !14981)
!14983 = !DILocation(line: 4743, column: 40, scope: !14981)
!14984 = !DILocation(line: 4743, column: 53, scope: !14981)
!14985 = !DILocation(line: 4743, column: 56, scope: !14981)
!14986 = !DILocation(line: 4743, column: 9, scope: !14981)
!14987 = !DILocation(line: 4744, column: 14, scope: !14988)
!14988 = distinct !DILexicalBlock(scope: !14981, file: !162, line: 4744, column: 13)
!14989 = !DILocation(line: 4744, column: 22, scope: !14988)
!14990 = !DILocation(line: 4744, column: 38, scope: !14988)
!14991 = !DILocation(line: 4744, column: 47, scope: !14988)
!14992 = !DILocation(line: 4744, column: 13, scope: !14981)
!14993 = !DILocation(line: 4745, column: 11, scope: !14988)
!14994 = !DILocation(line: 4746, column: 7, scope: !14981)
!14995 = !DILocation(line: 4747, column: 18, scope: !14976)
!14996 = !DILocation(line: 4747, column: 8, scope: !14976)
!14997 = !DILocation(line: 4747, column: 16, scope: !14976)
!14998 = !DILocation(line: 4748, column: 7, scope: !14976)
!14999 = !DILocation(line: 4750, column: 18, scope: !14976)
!15000 = !DILocation(line: 4750, column: 8, scope: !14976)
!15001 = !DILocation(line: 4750, column: 16, scope: !14976)
!15002 = !DILocation(line: 4751, column: 7, scope: !14976)
!15003 = !DILocation(line: 4753, column: 12, scope: !15004)
!15004 = distinct !DILexicalBlock(scope: !14976, file: !162, line: 4753, column: 11)
!15005 = !DILocation(line: 4753, column: 20, scope: !15004)
!15006 = !DILocation(line: 4753, column: 11, scope: !15004)
!15007 = !DILocation(line: 4753, column: 11, scope: !14976)
!15008 = !DILocation(line: 4754, column: 23, scope: !15004)
!15009 = !DILocation(line: 4754, column: 32, scope: !15004)
!15010 = !DILocation(line: 4754, column: 40, scope: !15004)
!15011 = !DILocation(line: 4754, column: 53, scope: !15004)
!15012 = !DILocation(line: 4754, column: 56, scope: !15004)
!15013 = !DILocation(line: 4754, column: 9, scope: !15004)
!15014 = !DILocation(line: 4755, column: 7, scope: !14976)
!15015 = !DILocation(line: 4757, column: 40, scope: !15016)
!15016 = distinct !DILexicalBlock(scope: !14976, file: !162, line: 4757, column: 11)
!15017 = !DILocation(line: 4757, column: 49, scope: !15016)
!15018 = !DILocation(line: 4757, column: 57, scope: !15016)
!15019 = !DILocation(line: 4757, column: 70, scope: !15016)
!15020 = !DILocation(line: 4757, column: 73, scope: !15016)
!15021 = !DILocation(line: 4757, column: 12, scope: !15016)
!15022 = !DILocation(line: 4757, column: 11, scope: !14976)
!15023 = !DILocation(line: 4758, column: 9, scope: !15016)
!15024 = !DILocation(line: 4759, column: 7, scope: !14976)
!15025 = !DILocation(line: 4761, column: 26, scope: !15026)
!15026 = distinct !DILexicalBlock(scope: !14976, file: !162, line: 4761, column: 11)
!15027 = !DILocation(line: 4761, column: 35, scope: !15026)
!15028 = !DILocation(line: 4761, column: 43, scope: !15026)
!15029 = !DILocation(line: 4761, column: 56, scope: !15026)
!15030 = !DILocation(line: 4761, column: 59, scope: !15026)
!15031 = !DILocation(line: 4761, column: 12, scope: !15026)
!15032 = !DILocation(line: 4761, column: 11, scope: !14976)
!15033 = !DILocation(line: 4762, column: 9, scope: !15026)
!15034 = !DILocation(line: 4763, column: 7, scope: !14976)
!15035 = !DILocation(line: 4765, column: 30, scope: !14976)
!15036 = !DILocation(line: 4765, column: 8, scope: !14976)
!15037 = !DILocation(line: 4765, column: 16, scope: !14976)
!15038 = !DILocation(line: 4765, column: 28, scope: !14976)
!15039 = !DILocation(line: 4766, column: 7, scope: !14976)
!15040 = !DILocation(line: 4768, column: 13, scope: !15041)
!15041 = distinct !DILexicalBlock(scope: !14976, file: !162, line: 4768, column: 11)
!15042 = !DILocation(line: 4768, column: 21, scope: !15041)
!15043 = !DILocation(line: 4768, column: 37, scope: !15041)
!15044 = !DILocation(line: 4768, column: 12, scope: !15041)
!15045 = !DILocation(line: 4768, column: 11, scope: !14976)
!15046 = !DILocation(line: 4769, column: 20, scope: !15047)
!15047 = distinct !DILexicalBlock(scope: !15041, file: !162, line: 4768, column: 51)
!15048 = !DILocation(line: 4769, column: 10, scope: !15047)
!15049 = !DILocation(line: 4769, column: 18, scope: !15047)
!15050 = !DILocation(line: 4770, column: 9, scope: !15047)
!15051 = !DILocation(line: 4772, column: 7, scope: !14976)
!15052 = !DILocation(line: 4774, column: 13, scope: !15053)
!15053 = distinct !DILexicalBlock(scope: !14976, file: !162, line: 4774, column: 11)
!15054 = !DILocation(line: 4774, column: 21, scope: !15053)
!15055 = !DILocation(line: 4774, column: 37, scope: !15053)
!15056 = !DILocation(line: 4774, column: 12, scope: !15053)
!15057 = !DILocation(line: 4774, column: 11, scope: !14976)
!15058 = !DILocation(line: 4775, column: 20, scope: !15059)
!15059 = distinct !DILexicalBlock(scope: !15053, file: !162, line: 4774, column: 51)
!15060 = !DILocation(line: 4775, column: 10, scope: !15059)
!15061 = !DILocation(line: 4775, column: 18, scope: !15059)
!15062 = !DILocation(line: 4776, column: 9, scope: !15059)
!15063 = !DILocation(line: 4778, column: 7, scope: !14976)
!15064 = !DILocation(line: 4780, column: 7, scope: !14976)
!15065 = !DILocation(line: 4782, column: 32, scope: !1667)
!15066 = !DILocation(line: 4782, column: 30, scope: !1667)
!15067 = !DILocation(line: 4782, column: 6, scope: !1667)
!15068 = !DILocation(line: 4782, column: 14, scope: !1667)
!15069 = !DILocation(line: 4782, column: 26, scope: !1667)
!15070 = !DILocation(line: 4783, column: 14, scope: !1667)
!15071 = !DILocation(line: 4783, column: 22, scope: !1667)
!15072 = !DILocation(line: 4783, column: 38, scope: !1667)
!15073 = !DILocation(line: 4783, column: 5, scope: !1667)
!15074 = !DILocation(line: 4785, column: 18, scope: !15075)
!15075 = distinct !DILexicalBlock(scope: !1667, file: !162, line: 4783, column: 48)
!15076 = !DILocation(line: 4785, column: 8, scope: !15075)
!15077 = !DILocation(line: 4785, column: 16, scope: !15075)
!15078 = !DILocation(line: 4786, column: 7, scope: !15075)
!15079 = !DILocation(line: 4788, column: 7, scope: !15075)
!15080 = !DILocation(line: 4790, column: 5, scope: !15075)
!15081 = !DILocation(line: 4791, column: 3, scope: !1668)
!15082 = !DILocation(line: 4791, column: 3, scope: !15083)
!15083 = !DILexicalBlockFile(scope: !1668, file: !162, discriminator: 1)
!15084 = !DILocation(line: 4735, column: 3, scope: !1668)
!15085 = !DILocation(line: 4792, column: 1, scope: !1660)
!15086 = !DILocation(line: 3193, column: 27, scope: !1671)
!15087 = !DILocation(line: 3194, column: 32, scope: !1671)
!15088 = !DILocation(line: 3195, column: 29, scope: !1671)
!15089 = !DILocation(line: 3196, column: 28, scope: !1671)
!15090 = !DILocation(line: 3197, column: 29, scope: !1671)
!15091 = !DILocation(line: 3198, column: 25, scope: !1671)
!15092 = !DILocation(line: 3200, column: 3, scope: !1671)
!15093 = !DILocation(line: 3200, column: 15, scope: !1671)
!15094 = !DILocation(line: 3200, column: 20, scope: !1671)
!15095 = !DILocation(line: 3200, column: 19, scope: !1671)
!15096 = !DILocation(line: 3201, column: 3, scope: !1671)
!15097 = !DILocation(line: 3201, column: 16, scope: !1671)
!15098 = !DILocation(line: 3202, column: 3, scope: !1671)
!15099 = !DILocation(line: 3202, column: 16, scope: !1671)
!15100 = !DILocation(line: 3203, column: 7, scope: !15101)
!15101 = distinct !DILexicalBlock(scope: !1671, file: !162, line: 3203, column: 7)
!15102 = !DILocation(line: 3203, column: 15, scope: !15101)
!15103 = !DILocation(line: 3203, column: 23, scope: !15101)
!15104 = !DILocation(line: 3203, column: 11, scope: !15101)
!15105 = !DILocation(line: 3203, column: 7, scope: !1671)
!15106 = !DILocation(line: 3204, column: 17, scope: !15107)
!15107 = distinct !DILexicalBlock(scope: !15101, file: !162, line: 3203, column: 36)
!15108 = !DILocation(line: 3204, column: 25, scope: !15107)
!15109 = !DILocation(line: 3204, column: 13, scope: !15107)
!15110 = !DILocation(line: 3205, column: 16, scope: !15107)
!15111 = !DILocation(line: 3205, column: 6, scope: !15107)
!15112 = !DILocation(line: 3205, column: 14, scope: !15107)
!15113 = !DILocation(line: 3206, column: 20, scope: !15107)
!15114 = !DILocation(line: 3206, column: 28, scope: !15107)
!15115 = !DILocation(line: 3206, column: 16, scope: !15107)
!15116 = !DILocation(line: 3207, column: 3, scope: !15107)
!15117 = !DILocation(line: 3209, column: 18, scope: !15118)
!15118 = distinct !DILexicalBlock(scope: !15101, file: !162, line: 3208, column: 8)
!15119 = !DILocation(line: 3209, column: 26, scope: !15118)
!15120 = !DILocation(line: 3209, column: 51, scope: !15118)
!15121 = !DILocation(line: 3209, column: 13, scope: !15118)
!15122 = !DILocation(line: 3210, column: 21, scope: !15118)
!15123 = !DILocation(line: 3210, column: 29, scope: !15118)
!15124 = !DILocation(line: 3210, column: 54, scope: !15118)
!15125 = !DILocation(line: 3210, column: 16, scope: !15118)
!15126 = !DILocation(line: 3212, column: 14, scope: !1671)
!15127 = !DILocation(line: 3212, column: 4, scope: !1671)
!15128 = !DILocation(line: 3212, column: 12, scope: !1671)
!15129 = !DILocation(line: 3213, column: 4, scope: !1671)
!15130 = !DILocation(line: 3213, column: 13, scope: !1671)
!15131 = !DILocation(line: 3215, column: 3, scope: !1671)
!15132 = !DILocation(line: 3216, column: 5, scope: !1685)
!15133 = !DILocation(line: 3216, column: 17, scope: !1685)
!15134 = !DILocation(line: 3217, column: 5, scope: !1685)
!15135 = !DILocation(line: 3217, column: 9, scope: !1685)
!15136 = !DILocation(line: 3217, column: 18, scope: !1685)
!15137 = !DILocation(line: 3217, column: 24, scope: !1685)
!15138 = !DILocation(line: 3217, column: 17, scope: !1685)
!15139 = !DILocation(line: 3217, column: 37, scope: !1685)
!15140 = !DILocation(line: 3217, column: 42, scope: !1685)
!15141 = !DILocation(line: 3217, column: 45, scope: !1685)
!15142 = !DILocation(line: 3217, column: 16, scope: !1685)
!15143 = !DILocation(line: 3218, column: 19, scope: !1685)
!15144 = !DILocation(line: 3218, column: 6, scope: !1685)
!15145 = !DILocation(line: 3218, column: 17, scope: !1685)
!15146 = !DILocation(line: 3219, column: 13, scope: !1685)
!15147 = !DILocation(line: 3219, column: 5, scope: !1685)
!15148 = !DILocation(line: 3221, column: 12, scope: !15149)
!15149 = distinct !DILexicalBlock(scope: !1692, file: !162, line: 3221, column: 11)
!15150 = !DILocation(line: 3221, column: 20, scope: !15149)
!15151 = !DILocation(line: 3221, column: 11, scope: !15149)
!15152 = !DILocation(line: 3221, column: 11, scope: !1692)
!15153 = !DILocation(line: 3222, column: 10, scope: !15149)
!15154 = !DILocation(line: 3222, column: 18, scope: !15149)
!15155 = !DILocation(line: 3222, column: 45, scope: !15149)
!15156 = !DILocation(line: 3222, column: 53, scope: !15149)
!15157 = !DILocation(line: 3222, column: 9, scope: !15149)
!15158 = !DILocation(line: 3228, column: 17, scope: !15159)
!15159 = distinct !DILexicalBlock(scope: !15149, file: !162, line: 3228, column: 16)
!15160 = !DILocation(line: 3228, column: 25, scope: !15159)
!15161 = !DILocation(line: 3228, column: 16, scope: !15159)
!15162 = !DILocation(line: 3228, column: 16, scope: !15149)
!15163 = !DILocation(line: 3229, column: 23, scope: !15159)
!15164 = !DILocation(line: 3229, column: 31, scope: !15159)
!15165 = !DILocation(line: 3229, column: 36, scope: !15159)
!15166 = !DILocation(line: 3229, column: 39, scope: !15159)
!15167 = !DILocation(line: 3229, column: 9, scope: !15159)
!15168 = !DILocation(line: 3230, column: 19, scope: !1692)
!15169 = !DILocation(line: 3230, column: 8, scope: !1692)
!15170 = !DILocation(line: 3230, column: 17, scope: !1692)
!15171 = !DILocation(line: 3231, column: 18, scope: !1692)
!15172 = !DILocation(line: 3231, column: 8, scope: !1692)
!15173 = !DILocation(line: 3231, column: 16, scope: !1692)
!15174 = !DILocation(line: 3232, column: 12, scope: !15175)
!15175 = distinct !DILexicalBlock(scope: !1692, file: !162, line: 3232, column: 11)
!15176 = !DILocation(line: 3232, column: 20, scope: !15175)
!15177 = !DILocation(line: 3232, column: 36, scope: !15175)
!15178 = !DILocation(line: 3232, column: 45, scope: !15175)
!15179 = !DILocation(line: 3232, column: 11, scope: !1692)
!15180 = !DILocation(line: 3233, column: 9, scope: !15175)
!15181 = !DILocation(line: 3235, column: 9, scope: !15175)
!15182 = !DILocation(line: 3237, column: 12, scope: !1691)
!15183 = !DILocation(line: 3237, column: 20, scope: !1691)
!15184 = !DILocation(line: 3237, column: 11, scope: !1691)
!15185 = !DILocation(line: 3237, column: 11, scope: !1692)
!15186 = !DILocation(line: 3238, column: 9, scope: !1690)
!15187 = !DILocation(line: 3238, column: 18, scope: !1690)
!15188 = !DILocation(line: 3239, column: 10, scope: !1690)
!15189 = !DILocation(line: 3239, column: 18, scope: !1690)
!15190 = !DILocation(line: 3239, column: 43, scope: !1690)
!15191 = !DILocation(line: 3239, column: 51, scope: !1690)
!15192 = !DILocation(line: 3239, column: 9, scope: !1690)
!15193 = !DILocation(line: 3240, column: 7, scope: !1691)
!15194 = !DILocation(line: 3240, column: 7, scope: !1690)
!15195 = !DILocation(line: 3241, column: 17, scope: !15196)
!15196 = distinct !DILexicalBlock(scope: !1691, file: !162, line: 3241, column: 16)
!15197 = !DILocation(line: 3241, column: 25, scope: !15196)
!15198 = !DILocation(line: 3241, column: 16, scope: !15196)
!15199 = !DILocation(line: 3241, column: 16, scope: !1691)
!15200 = !DILocation(line: 3242, column: 23, scope: !15196)
!15201 = !DILocation(line: 3242, column: 31, scope: !15196)
!15202 = !DILocation(line: 3242, column: 36, scope: !15196)
!15203 = !DILocation(line: 3242, column: 39, scope: !15196)
!15204 = !DILocation(line: 3242, column: 9, scope: !15196)
!15205 = !DILocation(line: 3243, column: 7, scope: !1692)
!15206 = !DILocation(line: 3246, column: 9, scope: !1694)
!15207 = !DILocation(line: 3246, column: 34, scope: !1694)
!15208 = !DILocation(line: 3246, column: 53, scope: !1694)
!15209 = !DILocation(line: 3246, column: 61, scope: !1694)
!15210 = !DILocation(line: 3247, column: 13, scope: !1702)
!15211 = !DILocation(line: 3247, column: 13, scope: !1694)
!15212 = !DILocation(line: 3248, column: 18, scope: !1700)
!15213 = !DILocation(line: 3248, column: 24, scope: !1700)
!15214 = !DILocation(line: 3248, column: 17, scope: !1700)
!15215 = !DILocation(line: 3248, column: 15, scope: !1701)
!15216 = !DILocation(line: 3249, column: 13, scope: !1699)
!15217 = !DILocation(line: 3250, column: 15, scope: !1696)
!15218 = !DILocation(line: 3250, column: 22, scope: !1696)
!15219 = !DILocation(line: 3250, column: 42, scope: !1696)
!15220 = !DILocation(line: 3250, column: 50, scope: !1696)
!15221 = !DILocation(line: 3251, column: 18, scope: !1696)
!15222 = !DILocation(line: 3251, column: 24, scope: !1696)
!15223 = !DILocation(line: 3251, column: 37, scope: !1696)
!15224 = !DILocation(line: 3251, column: 46, scope: !1696)
!15225 = !DILocation(line: 3251, column: 72, scope: !1696)
!15226 = !DILocation(line: 3251, column: 80, scope: !1696)
!15227 = !DILocation(line: 3251, column: 16, scope: !1696)
!15228 = !DILocation(line: 3252, column: 29, scope: !1696)
!15229 = !DILocation(line: 3252, column: 16, scope: !1696)
!15230 = !DILocation(line: 3252, column: 27, scope: !1696)
!15231 = !DILocation(line: 3253, column: 15, scope: !1696)
!15232 = !DILocation(line: 3253, column: 32, scope: !1696)
!15233 = !DILocation(line: 3253, column: 40, scope: !1696)
!15234 = !DILocation(line: 3253, column: 56, scope: !1696)
!15235 = !DILocation(line: 3253, column: 64, scope: !1696)
!15236 = !DILocation(line: 3254, column: 37, scope: !1696)
!15237 = !DILocation(line: 3254, column: 57, scope: !1696)
!15238 = !DILocation(line: 3254, column: 65, scope: !1696)
!15239 = !DILocation(line: 3254, column: 45, scope: !1696)
!15240 = !DILocation(line: 3254, column: 31, scope: !1696)
!15241 = !DILocation(line: 3255, column: 19, scope: !15242)
!15242 = distinct !DILexicalBlock(scope: !1696, file: !162, line: 3255, column: 19)
!15243 = !DILocation(line: 3255, column: 24, scope: !15242)
!15244 = !DILocation(line: 3255, column: 21, scope: !15242)
!15245 = !DILocation(line: 3255, column: 19, scope: !1696)
!15246 = !DILocation(line: 3256, column: 17, scope: !15242)
!15247 = !DILocation(line: 3257, column: 26, scope: !1696)
!15248 = !DILocation(line: 3257, column: 16, scope: !1696)
!15249 = !DILocation(line: 3257, column: 24, scope: !1696)
!15250 = !DILocation(line: 3258, column: 13, scope: !1697)
!15251 = !DILocation(line: 3258, column: 13, scope: !15252)
!15252 = !DILexicalBlockFile(scope: !1697, file: !162, discriminator: 1)
!15253 = !DILocation(line: 3249, column: 13, scope: !1697)
!15254 = !DILocation(line: 3259, column: 11, scope: !1699)
!15255 = !DILocation(line: 3261, column: 13, scope: !1700)
!15256 = !DILocation(line: 3261, column: 30, scope: !1700)
!15257 = !DILocation(line: 3261, column: 38, scope: !1700)
!15258 = !DILocation(line: 3262, column: 41, scope: !1700)
!15259 = !DILocation(line: 3263, column: 47, scope: !1700)
!15260 = !DILocation(line: 3263, column: 66, scope: !1700)
!15261 = !DILocation(line: 3263, column: 52, scope: !1700)
!15262 = !DILocation(line: 3263, column: 29, scope: !1700)
!15263 = !DILocation(line: 3264, column: 9, scope: !1701)
!15264 = !DILocation(line: 3265, column: 19, scope: !15265)
!15265 = distinct !DILexicalBlock(scope: !1702, file: !162, line: 3265, column: 18)
!15266 = !DILocation(line: 3265, column: 27, scope: !15265)
!15267 = !DILocation(line: 3265, column: 18, scope: !15265)
!15268 = !DILocation(line: 3265, column: 18, scope: !1702)
!15269 = !DILocation(line: 3266, column: 25, scope: !15265)
!15270 = !DILocation(line: 3266, column: 33, scope: !15265)
!15271 = !DILocation(line: 3266, column: 38, scope: !15265)
!15272 = !DILocation(line: 3266, column: 41, scope: !15265)
!15273 = !DILocation(line: 3266, column: 11, scope: !15265)
!15274 = !DILocation(line: 3267, column: 7, scope: !1692)
!15275 = !DILocation(line: 3268, column: 7, scope: !1692)
!15276 = !DILocation(line: 3270, column: 18, scope: !1692)
!15277 = !DILocation(line: 3270, column: 8, scope: !1692)
!15278 = !DILocation(line: 3270, column: 16, scope: !1692)
!15279 = !DILocation(line: 3271, column: 7, scope: !1692)
!15280 = !DILocation(line: 3273, column: 11, scope: !15281)
!15281 = distinct !DILexicalBlock(scope: !1692, file: !162, line: 3273, column: 11)
!15282 = !DILocation(line: 3273, column: 11, scope: !1692)
!15283 = !DILocation(line: 3274, column: 20, scope: !15284)
!15284 = distinct !DILexicalBlock(scope: !15281, file: !162, line: 3273, column: 21)
!15285 = !DILocation(line: 3274, column: 10, scope: !15284)
!15286 = !DILocation(line: 3274, column: 18, scope: !15284)
!15287 = !DILocation(line: 3275, column: 9, scope: !15284)
!15288 = !DILocation(line: 3277, column: 7, scope: !1692)
!15289 = !DILocation(line: 3280, column: 11, scope: !15290)
!15290 = distinct !DILexicalBlock(scope: !1692, file: !162, line: 3280, column: 11)
!15291 = !DILocation(line: 3280, column: 11, scope: !1692)
!15292 = !DILocation(line: 3281, column: 20, scope: !15293)
!15293 = distinct !DILexicalBlock(scope: !15290, file: !162, line: 3280, column: 21)
!15294 = !DILocation(line: 3281, column: 10, scope: !15293)
!15295 = !DILocation(line: 3281, column: 18, scope: !15293)
!15296 = !DILocation(line: 3282, column: 9, scope: !15293)
!15297 = !DILocation(line: 3284, column: 7, scope: !1692)
!15298 = !DILocation(line: 3286, column: 18, scope: !1692)
!15299 = !DILocation(line: 3286, column: 8, scope: !1692)
!15300 = !DILocation(line: 3286, column: 16, scope: !1692)
!15301 = !DILocation(line: 3287, column: 7, scope: !1692)
!15302 = !DILocation(line: 3290, column: 20, scope: !1685)
!15303 = !DILocation(line: 3290, column: 18, scope: !1685)
!15304 = !DILocation(line: 3290, column: 6, scope: !1685)
!15305 = !DILocation(line: 3290, column: 14, scope: !1685)
!15306 = !DILocation(line: 3291, column: 14, scope: !1685)
!15307 = !DILocation(line: 3291, column: 22, scope: !1685)
!15308 = !DILocation(line: 3291, column: 38, scope: !1685)
!15309 = !DILocation(line: 3291, column: 5, scope: !1685)
!15310 = !DILocation(line: 3293, column: 18, scope: !15311)
!15311 = distinct !DILexicalBlock(scope: !1685, file: !162, line: 3291, column: 48)
!15312 = !DILocation(line: 3293, column: 8, scope: !15311)
!15313 = !DILocation(line: 3293, column: 16, scope: !15311)
!15314 = !DILocation(line: 3294, column: 7, scope: !15311)
!15315 = !DILocation(line: 3296, column: 7, scope: !15311)
!15316 = !DILocation(line: 3298, column: 5, scope: !15311)
!15317 = !DILocation(line: 3299, column: 3, scope: !1686)
!15318 = !DILocation(line: 3299, column: 3, scope: !15319)
!15319 = !DILexicalBlockFile(scope: !1686, file: !162, discriminator: 1)
!15320 = !DILocation(line: 3215, column: 3, scope: !1686)
!15321 = !DILocation(line: 3301, column: 1, scope: !1671)
!15322 = !DILocation(line: 3167, column: 34, scope: !1703)
!15323 = !DILocation(line: 3168, column: 35, scope: !1703)
!15324 = !DILocation(line: 3169, column: 35, scope: !1703)
!15325 = !DILocation(line: 3170, column: 36, scope: !1703)
!15326 = !DILocation(line: 3172, column: 3, scope: !1703)
!15327 = !DILocation(line: 3172, column: 18, scope: !1703)
!15328 = !DILocation(line: 3172, column: 42, scope: !1703)
!15329 = !DILocation(line: 3172, column: 51, scope: !1703)
!15330 = !DILocation(line: 3172, column: 59, scope: !1703)
!15331 = !DILocation(line: 3172, column: 80, scope: !1703)
!15332 = !DILocation(line: 3173, column: 42, scope: !1703)
!15333 = !DILocation(line: 3173, column: 62, scope: !1703)
!15334 = !DILocation(line: 3173, column: 70, scope: !1703)
!15335 = !DILocation(line: 3173, column: 86, scope: !1703)
!15336 = !DILocation(line: 3173, column: 60, scope: !1703)
!15337 = !DILocation(line: 3173, column: 50, scope: !1703)
!15338 = !DILocation(line: 3172, column: 27, scope: !1703)
!15339 = !DILocation(line: 3174, column: 7, scope: !15340)
!15340 = distinct !DILexicalBlock(scope: !1703, file: !162, line: 3174, column: 7)
!15341 = !DILocation(line: 3174, column: 14, scope: !15340)
!15342 = !DILocation(line: 3174, column: 7, scope: !1703)
!15343 = !DILocation(line: 3175, column: 12, scope: !15340)
!15344 = !DILocation(line: 3175, column: 5, scope: !15340)
!15345 = !DILocation(line: 3176, column: 7, scope: !15346)
!15346 = distinct !DILexicalBlock(scope: !1703, file: !162, line: 3176, column: 7)
!15347 = !DILocation(line: 3176, column: 7, scope: !1703)
!15348 = !DILocation(line: 3177, column: 10, scope: !15349)
!15349 = distinct !DILexicalBlock(scope: !15350, file: !162, line: 3177, column: 9)
!15350 = distinct !DILexicalBlock(scope: !15346, file: !162, line: 3176, column: 14)
!15351 = !DILocation(line: 3177, column: 18, scope: !15349)
!15352 = !DILocation(line: 3177, column: 9, scope: !15349)
!15353 = !DILocation(line: 3177, column: 9, scope: !15350)
!15354 = !DILocation(line: 3178, column: 8, scope: !15355)
!15355 = distinct !DILexicalBlock(scope: !15349, file: !162, line: 3177, column: 35)
!15356 = !DILocation(line: 3178, column: 16, scope: !15355)
!15357 = !DILocation(line: 3178, column: 29, scope: !15355)
!15358 = !DILocation(line: 3179, column: 45, scope: !15355)
!15359 = !DILocation(line: 3179, column: 53, scope: !15355)
!15360 = !DILocation(line: 3179, column: 60, scope: !15355)
!15361 = !DILocation(line: 3179, column: 65, scope: !15355)
!15362 = !DILocation(line: 3179, column: 14, scope: !15355)
!15363 = !DILocation(line: 3179, column: 7, scope: !15355)
!15364 = !DILocation(line: 3182, column: 8, scope: !15365)
!15365 = distinct !DILexicalBlock(scope: !15349, file: !162, line: 3181, column: 10)
!15366 = !DILocation(line: 3182, column: 16, scope: !15365)
!15367 = !DILocation(line: 3182, column: 29, scope: !15365)
!15368 = !DILocation(line: 3183, column: 31, scope: !15365)
!15369 = !DILocation(line: 3183, column: 39, scope: !15365)
!15370 = !DILocation(line: 3183, column: 46, scope: !15365)
!15371 = !DILocation(line: 3183, column: 51, scope: !15365)
!15372 = !DILocation(line: 3183, column: 14, scope: !15365)
!15373 = !DILocation(line: 3183, column: 7, scope: !15365)
!15374 = !DILocation(line: 3186, column: 10, scope: !1703)
!15375 = !DILocation(line: 3186, column: 3, scope: !1703)
!15376 = !DILocation(line: 3187, column: 1, scope: !1703)
!15377 = !DILocation(line: 6079, column: 36, scope: !1514)
!15378 = !DILocation(line: 6079, column: 60, scope: !1514)
!15379 = !DILocation(line: 6081, column: 13, scope: !1514)
!15380 = !DILocation(line: 6081, column: 20, scope: !1514)
!15381 = !DILocation(line: 6081, column: 3, scope: !1514)
!15382 = !DILocation(line: 6081, column: 9, scope: !1514)
!15383 = !DILocation(line: 6081, column: 11, scope: !1514)
!15384 = !{!15385, !2290, i64 0}
!15385 = !{!"", !2290, i64 0, !2290, i64 8}
!15386 = !DILocation(line: 6082, column: 15, scope: !1514)
!15387 = !DILocation(line: 6082, column: 21, scope: !1514)
!15388 = !DILocation(line: 6082, column: 25, scope: !1514)
!15389 = !DILocation(line: 6082, column: 32, scope: !1514)
!15390 = !DILocation(line: 6082, column: 23, scope: !1514)
!15391 = !DILocation(line: 6082, column: 3, scope: !1514)
!15392 = !DILocation(line: 6082, column: 9, scope: !1514)
!15393 = !DILocation(line: 6082, column: 13, scope: !1514)
!15394 = !{!15385, !2290, i64 8}
!15395 = !DILocation(line: 6083, column: 1, scope: !1514)
!15396 = !DILocation(line: 6086, column: 36, scope: !1523)
!15397 = !DILocation(line: 6088, column: 3, scope: !1523)
!15398 = !DILocation(line: 6088, column: 10, scope: !15399)
!15399 = !DILexicalBlockFile(scope: !15400, file: !162, discriminator: 2)
!15400 = !DILexicalBlockFile(scope: !1523, file: !162, discriminator: 1)
!15401 = !DILocation(line: 6088, column: 16, scope: !1523)
!15402 = !DILocation(line: 6088, column: 21, scope: !1523)
!15403 = !DILocation(line: 6088, column: 27, scope: !1523)
!15404 = !DILocation(line: 6088, column: 18, scope: !1523)
!15405 = !DILocation(line: 6089, column: 5, scope: !1529)
!15406 = !DILocation(line: 6089, column: 12, scope: !1529)
!15407 = !DILocation(line: 6089, column: 20, scope: !1529)
!15408 = !DILocation(line: 6089, column: 26, scope: !1529)
!15409 = !DILocation(line: 6089, column: 28, scope: !1529)
!15410 = !DILocation(line: 6089, column: 18, scope: !1529)
!15411 = !DILocation(line: 6090, column: 9, scope: !15412)
!15412 = distinct !DILexicalBlock(scope: !1529, file: !162, line: 6090, column: 9)
!15413 = !DILocation(line: 6090, column: 9, scope: !1529)
!15414 = !DILocation(line: 6091, column: 14, scope: !15412)
!15415 = !DILocation(line: 6091, column: 7, scope: !15412)
!15416 = !DILocation(line: 6092, column: 3, scope: !1523)
!15417 = !DILocation(line: 6092, column: 3, scope: !15400)
!15418 = !DILocation(line: 6093, column: 3, scope: !1523)
!15419 = !DILocation(line: 6094, column: 1, scope: !1523)
!15420 = !DILocation(line: 5400, column: 33, scope: !1626)
!15421 = !DILocation(line: 5400, column: 55, scope: !1626)
!15422 = !DILocation(line: 5402, column: 3, scope: !1626)
!15423 = !DILocation(line: 5402, column: 15, scope: !1626)
!15424 = !DILocation(line: 5402, column: 22, scope: !1626)
!15425 = !DILocation(line: 5402, column: 30, scope: !1626)
!15426 = !DILocation(line: 5403, column: 3, scope: !1626)
!15427 = !DILocation(line: 5403, column: 19, scope: !1626)
!15428 = !DILocation(line: 5404, column: 15, scope: !1639)
!15429 = !DILocation(line: 5404, column: 28, scope: !1639)
!15430 = !DILocation(line: 5404, column: 13, scope: !1639)
!15431 = !DILocation(line: 5404, column: 8, scope: !1639)
!15432 = !DILocation(line: 5404, column: 35, scope: !15433)
!15433 = !DILexicalBlockFile(scope: !15434, file: !162, discriminator: 2)
!15434 = !DILexicalBlockFile(scope: !1638, file: !162, discriminator: 1)
!15435 = !DILocation(line: 5404, column: 34, scope: !1638)
!15436 = !DILocation(line: 5404, column: 3, scope: !1639)
!15437 = !DILocation(line: 5405, column: 10, scope: !1636)
!15438 = !DILocation(line: 5405, column: 9, scope: !1636)
!15439 = !DILocation(line: 5405, column: 15, scope: !1636)
!15440 = !DILocation(line: 5405, column: 9, scope: !1637)
!15441 = !DILocation(line: 5406, column: 7, scope: !1635)
!15442 = !DILocation(line: 5406, column: 15, scope: !1635)
!15443 = !DILocation(line: 5407, column: 7, scope: !1635)
!15444 = !DILocation(line: 5407, column: 23, scope: !1635)
!15445 = !DILocation(line: 5408, column: 16, scope: !15446)
!15446 = distinct !DILexicalBlock(scope: !1635, file: !162, line: 5408, column: 7)
!15447 = !DILocation(line: 5408, column: 29, scope: !15446)
!15448 = !DILocation(line: 5408, column: 14, scope: !15446)
!15449 = !DILocation(line: 5408, column: 12, scope: !15446)
!15450 = !DILocation(line: 5408, column: 35, scope: !15451)
!15451 = !DILexicalBlockFile(scope: !15452, file: !162, discriminator: 2)
!15452 = !DILexicalBlockFile(scope: !15453, file: !162, discriminator: 1)
!15453 = distinct !DILexicalBlock(scope: !15446, file: !162, line: 5408, column: 7)
!15454 = !DILocation(line: 5408, column: 40, scope: !15453)
!15455 = !DILocation(line: 5408, column: 37, scope: !15453)
!15456 = !DILocation(line: 5408, column: 7, scope: !15446)
!15457 = !DILocation(line: 5409, column: 18, scope: !15458)
!15458 = distinct !DILexicalBlock(scope: !15459, file: !162, line: 5409, column: 13)
!15459 = distinct !DILexicalBlock(scope: !15453, file: !162, line: 5408, column: 51)
!15460 = !DILocation(line: 5409, column: 23, scope: !15458)
!15461 = !DILocation(line: 5409, column: 30, scope: !15458)
!15462 = !DILocation(line: 5409, column: 39, scope: !15458)
!15463 = !DILocation(line: 5409, column: 44, scope: !15458)
!15464 = !DILocation(line: 5409, column: 51, scope: !15458)
!15465 = !DILocation(line: 5409, column: 34, scope: !15458)
!15466 = !DILocation(line: 5409, column: 55, scope: !15458)
!15467 = !DILocation(line: 5409, column: 69, scope: !15468)
!15468 = !DILexicalBlockFile(scope: !15458, file: !162, discriminator: 1)
!15469 = !DILocation(line: 5409, column: 74, scope: !15458)
!15470 = !DILocation(line: 5409, column: 59, scope: !15458)
!15471 = !DILocation(line: 5409, column: 13, scope: !15459)
!15472 = !DILocation(line: 5409, column: 15, scope: !15473)
!15473 = !DILexicalBlockFile(scope: !15458, file: !162, discriminator: 4)
!15474 = !DILocation(line: 5409, column: 115, scope: !15475)
!15475 = !DILexicalBlockFile(scope: !15476, file: !162, discriminator: 3)
!15476 = !DILexicalBlockFile(scope: !15458, file: !162, discriminator: 2)
!15477 = !DILocation(line: 5409, column: 114, scope: !15458)
!15478 = !DILocation(line: 5409, column: 93, scope: !15458)
!15479 = !DILocation(line: 5409, column: 98, scope: !15458)
!15480 = !DILocation(line: 5409, column: 105, scope: !15458)
!15481 = !DILocation(line: 5409, column: 109, scope: !15458)
!15482 = !DILocation(line: 5409, column: 112, scope: !15458)
!15483 = !DILocation(line: 5410, column: 11, scope: !15458)
!15484 = !DILocation(line: 5411, column: 7, scope: !15459)
!15485 = !DILocation(line: 5408, column: 47, scope: !15453)
!15486 = !DILocation(line: 5408, column: 7, scope: !15453)
!15487 = !DILocation(line: 5412, column: 16, scope: !15488)
!15488 = distinct !DILexicalBlock(scope: !1635, file: !162, line: 5412, column: 11)
!15489 = !DILocation(line: 5412, column: 21, scope: !15488)
!15490 = !DILocation(line: 5412, column: 28, scope: !15488)
!15491 = !DILocation(line: 5412, column: 37, scope: !15488)
!15492 = !DILocation(line: 5412, column: 42, scope: !15488)
!15493 = !DILocation(line: 5412, column: 49, scope: !15488)
!15494 = !DILocation(line: 5412, column: 32, scope: !15488)
!15495 = !DILocation(line: 5412, column: 53, scope: !15488)
!15496 = !DILocation(line: 5412, column: 67, scope: !15497)
!15497 = !DILexicalBlockFile(scope: !15488, file: !162, discriminator: 1)
!15498 = !DILocation(line: 5412, column: 72, scope: !15488)
!15499 = !DILocation(line: 5412, column: 57, scope: !15488)
!15500 = !DILocation(line: 5412, column: 11, scope: !1635)
!15501 = !DILocation(line: 5412, column: 13, scope: !15502)
!15502 = !DILexicalBlockFile(scope: !15488, file: !162, discriminator: 4)
!15503 = !DILocation(line: 5412, column: 91, scope: !15504)
!15504 = !DILexicalBlockFile(scope: !15505, file: !162, discriminator: 3)
!15505 = !DILexicalBlockFile(scope: !15488, file: !162, discriminator: 2)
!15506 = !DILocation(line: 5412, column: 96, scope: !15488)
!15507 = !DILocation(line: 5412, column: 103, scope: !15488)
!15508 = !DILocation(line: 5412, column: 107, scope: !15488)
!15509 = !DILocation(line: 5412, column: 110, scope: !15488)
!15510 = !DILocation(line: 5413, column: 9, scope: !15488)
!15511 = !DILocation(line: 5414, column: 33, scope: !1635)
!15512 = !DILocation(line: 5414, column: 42, scope: !1635)
!15513 = !DILocation(line: 5414, column: 47, scope: !1635)
!15514 = !DILocation(line: 5414, column: 60, scope: !1635)
!15515 = !DILocation(line: 5414, column: 65, scope: !1635)
!15516 = !DILocation(line: 5414, column: 72, scope: !1635)
!15517 = !DILocation(line: 5414, column: 26, scope: !1635)
!15518 = !DILocation(line: 5414, column: 16, scope: !1635)
!15519 = !DILocation(line: 5414, column: 14, scope: !1635)
!15520 = !DILocation(line: 5416, column: 12, scope: !15521)
!15521 = distinct !DILexicalBlock(scope: !1635, file: !162, line: 5416, column: 11)
!15522 = !DILocation(line: 5416, column: 11, scope: !1635)
!15523 = !DILocation(line: 5417, column: 9, scope: !15521)
!15524 = !DILocation(line: 5418, column: 11, scope: !15525)
!15525 = distinct !DILexicalBlock(scope: !1635, file: !162, line: 5418, column: 11)
!15526 = !DILocation(line: 5418, column: 19, scope: !15525)
!15527 = !DILocation(line: 5418, column: 30, scope: !15525)
!15528 = !DILocation(line: 5418, column: 35, scope: !15525)
!15529 = !DILocation(line: 5418, column: 42, scope: !15525)
!15530 = !DILocation(line: 5418, column: 24, scope: !15525)
!15531 = !DILocation(line: 5418, column: 11, scope: !1635)
!15532 = !DILocation(line: 5419, column: 34, scope: !15525)
!15533 = !DILocation(line: 5419, column: 39, scope: !15525)
!15534 = !DILocation(line: 5419, column: 46, scope: !15525)
!15535 = !DILocation(line: 5419, column: 12, scope: !15525)
!15536 = !DILocation(line: 5419, column: 17, scope: !15525)
!15537 = !DILocation(line: 5419, column: 24, scope: !15525)
!15538 = !DILocation(line: 5419, column: 30, scope: !15525)
!15539 = !DILocation(line: 5419, column: 9, scope: !15525)
!15540 = !DILocation(line: 5421, column: 32, scope: !15525)
!15541 = !DILocation(line: 5421, column: 37, scope: !15525)
!15542 = !DILocation(line: 5421, column: 44, scope: !15525)
!15543 = !DILocation(line: 5421, column: 12, scope: !15525)
!15544 = !DILocation(line: 5421, column: 17, scope: !15525)
!15545 = !DILocation(line: 5421, column: 24, scope: !15525)
!15546 = !DILocation(line: 5421, column: 28, scope: !15525)
!15547 = !DILocation(line: 5422, column: 29, scope: !1635)
!15548 = !DILocation(line: 5422, column: 7, scope: !1635)
!15549 = !DILocation(line: 5422, column: 20, scope: !1635)
!15550 = !DILocation(line: 5422, column: 27, scope: !1635)
!15551 = !DILocation(line: 5424, column: 5, scope: !1636)
!15552 = !DILocation(line: 5424, column: 5, scope: !15553)
!15553 = !DILexicalBlockFile(scope: !1636, file: !162, discriminator: 1)
!15554 = !DILocation(line: 5424, column: 5, scope: !1635)
!15555 = !DILocation(line: 5425, column: 3, scope: !1637)
!15556 = !DILocation(line: 5404, column: 45, scope: !1638)
!15557 = !DILocation(line: 5404, column: 3, scope: !1638)
!15558 = !DILocation(line: 5426, column: 3, scope: !1626)
!15559 = !DILocation(line: 5427, column: 1, scope: !1626)
!15560 = !DILocation(line: 3050, column: 23, scope: !1641)
!15561 = !DILocation(line: 3050, column: 39, scope: !1641)
!15562 = !DILocation(line: 3050, column: 67, scope: !1641)
!15563 = !DILocation(line: 3051, column: 28, scope: !1641)
!15564 = !DILocation(line: 3051, column: 43, scope: !1641)
!15565 = !DILocation(line: 3073, column: 3, scope: !1641)
!15566 = !DILocation(line: 3073, column: 12, scope: !1641)
!15567 = !DILocation(line: 3074, column: 3, scope: !1641)
!15568 = !DILocation(line: 3074, column: 12, scope: !1641)
!15569 = !DILocation(line: 3075, column: 3, scope: !1641)
!15570 = !DILocation(line: 3075, column: 12, scope: !1641)
!15571 = !DILocation(line: 3077, column: 3, scope: !1641)
!15572 = !DILocation(line: 3077, column: 12, scope: !1641)
!15573 = !DILocation(line: 3078, column: 3, scope: !1641)
!15574 = !DILocation(line: 3078, column: 7, scope: !1641)
!15575 = !DILocation(line: 3081, column: 8, scope: !15576)
!15576 = distinct !DILexicalBlock(scope: !1641, file: !162, line: 3081, column: 7)
!15577 = !DILocation(line: 3081, column: 7, scope: !15576)
!15578 = !DILocation(line: 3081, column: 12, scope: !15576)
!15579 = !DILocation(line: 3081, column: 20, scope: !15576)
!15580 = !DILocation(line: 3081, column: 23, scope: !15581)
!15581 = !DILexicalBlockFile(scope: !15576, file: !162, discriminator: 1)
!15582 = !DILocation(line: 3081, column: 31, scope: !15576)
!15583 = !DILocation(line: 3081, column: 23, scope: !15576)
!15584 = !DILocation(line: 3081, column: 7, scope: !1641)
!15585 = !DILocation(line: 3082, column: 5, scope: !15576)
!15586 = !DILocation(line: 3084, column: 7, scope: !15587)
!15587 = distinct !DILexicalBlock(scope: !1641, file: !162, line: 3084, column: 7)
!15588 = !DILocation(line: 3084, column: 15, scope: !15587)
!15589 = !DILocation(line: 3085, column: 7, scope: !15587)
!15590 = !DILocation(line: 3085, column: 10, scope: !15591)
!15591 = !DILexicalBlockFile(scope: !15587, file: !162, discriminator: 1)
!15592 = !DILocation(line: 3085, column: 18, scope: !15587)
!15593 = !DILocation(line: 3085, column: 10, scope: !15587)
!15594 = !DILocation(line: 3085, column: 26, scope: !15587)
!15595 = !DILocation(line: 3086, column: 7, scope: !15587)
!15596 = !DILocation(line: 3086, column: 10, scope: !15591)
!15597 = !DILocation(line: 3086, column: 18, scope: !15587)
!15598 = !DILocation(line: 3086, column: 10, scope: !15587)
!15599 = !DILocation(line: 3086, column: 26, scope: !15587)
!15600 = !DILocation(line: 3087, column: 7, scope: !15587)
!15601 = !DILocation(line: 3087, column: 10, scope: !15591)
!15602 = !DILocation(line: 3087, column: 18, scope: !15587)
!15603 = !DILocation(line: 3087, column: 10, scope: !15587)
!15604 = !DILocation(line: 3087, column: 26, scope: !15587)
!15605 = !DILocation(line: 3084, column: 7, scope: !1641)
!15606 = !DILocation(line: 3090, column: 9, scope: !15607)
!15607 = distinct !DILexicalBlock(scope: !15608, file: !162, line: 3090, column: 9)
!15608 = distinct !DILexicalBlock(scope: !15587, file: !162, line: 3087, column: 35)
!15609 = !DILocation(line: 3090, column: 17, scope: !15607)
!15610 = !DILocation(line: 3090, column: 25, scope: !15607)
!15611 = !DILocation(line: 3091, column: 9, scope: !15607)
!15612 = !DILocation(line: 3091, column: 12, scope: !15613)
!15613 = !DILexicalBlockFile(scope: !15607, file: !162, discriminator: 1)
!15614 = !DILocation(line: 3091, column: 20, scope: !15607)
!15615 = !DILocation(line: 3091, column: 12, scope: !15607)
!15616 = !DILocation(line: 3091, column: 28, scope: !15607)
!15617 = !DILocation(line: 3092, column: 9, scope: !15607)
!15618 = !DILocation(line: 3092, column: 12, scope: !15613)
!15619 = !DILocation(line: 3092, column: 20, scope: !15607)
!15620 = !DILocation(line: 3092, column: 12, scope: !15607)
!15621 = !DILocation(line: 3092, column: 28, scope: !15607)
!15622 = !DILocation(line: 3090, column: 9, scope: !15608)
!15623 = !DILocation(line: 3093, column: 7, scope: !15607)
!15624 = !DILocation(line: 3095, column: 9, scope: !15625)
!15625 = distinct !DILexicalBlock(scope: !15608, file: !162, line: 3095, column: 9)
!15626 = !DILocation(line: 3095, column: 17, scope: !15625)
!15627 = !DILocation(line: 3095, column: 25, scope: !15625)
!15628 = !DILocation(line: 3095, column: 9, scope: !15608)
!15629 = !DILocation(line: 3096, column: 17, scope: !15625)
!15630 = !DILocation(line: 3096, column: 7, scope: !15625)
!15631 = !DILocation(line: 3097, column: 3, scope: !15608)
!15632 = !DILocation(line: 3099, column: 12, scope: !15633)
!15633 = distinct !DILexicalBlock(scope: !1641, file: !162, line: 3099, column: 3)
!15634 = !DILocation(line: 3099, column: 8, scope: !15633)
!15635 = !DILocation(line: 3099, column: 21, scope: !15636)
!15636 = !DILexicalBlockFile(scope: !15637, file: !162, discriminator: 2)
!15637 = !DILexicalBlockFile(scope: !15638, file: !162, discriminator: 1)
!15638 = distinct !DILexicalBlock(scope: !15633, file: !162, line: 3099, column: 3)
!15639 = !DILocation(line: 3099, column: 17, scope: !15638)
!15640 = !DILocation(line: 3099, column: 3, scope: !15633)
!15641 = !DILocation(line: 3100, column: 9, scope: !15642)
!15642 = distinct !DILexicalBlock(scope: !15643, file: !162, line: 3100, column: 9)
!15643 = distinct !DILexicalBlock(scope: !15638, file: !162, line: 3099, column: 34)
!15644 = !DILocation(line: 3100, column: 15, scope: !15642)
!15645 = !DILocation(line: 3100, column: 19, scope: !15646)
!15646 = !DILexicalBlockFile(scope: !15642, file: !162, discriminator: 1)
!15647 = !DILocation(line: 3100, column: 23, scope: !15642)
!15648 = !DILocation(line: 3100, column: 32, scope: !15642)
!15649 = !DILocation(line: 3100, column: 39, scope: !15650)
!15650 = !DILexicalBlockFile(scope: !15642, file: !162, discriminator: 2)
!15651 = !DILocation(line: 3100, column: 35, scope: !15642)
!15652 = !DILocation(line: 3100, column: 60, scope: !15642)
!15653 = !DILocation(line: 3100, column: 47, scope: !15642)
!15654 = !DILocation(line: 3100, column: 44, scope: !15642)
!15655 = !DILocation(line: 3100, column: 9, scope: !15643)
!15656 = !DILocation(line: 3101, column: 13, scope: !15642)
!15657 = !DILocation(line: 3101, column: 7, scope: !15642)
!15658 = !DILocation(line: 3103, column: 10, scope: !15659)
!15659 = distinct !DILexicalBlock(scope: !15643, file: !162, line: 3103, column: 9)
!15660 = !DILocation(line: 3103, column: 20, scope: !15659)
!15661 = !DILocation(line: 3103, column: 23, scope: !15662)
!15662 = !DILexicalBlockFile(scope: !15659, file: !162, discriminator: 1)
!15663 = !DILocation(line: 3104, column: 9, scope: !15659)
!15664 = !DILocation(line: 3104, column: 13, scope: !15662)
!15665 = !DILocation(line: 3104, column: 17, scope: !15659)
!15666 = !DILocation(line: 3104, column: 28, scope: !15659)
!15667 = !DILocation(line: 3104, column: 35, scope: !15668)
!15668 = !DILexicalBlockFile(scope: !15659, file: !162, discriminator: 2)
!15669 = !DILocation(line: 3104, column: 31, scope: !15659)
!15670 = !DILocation(line: 3104, column: 58, scope: !15659)
!15671 = !DILocation(line: 3104, column: 43, scope: !15659)
!15672 = !DILocation(line: 3104, column: 40, scope: !15659)
!15673 = !DILocation(line: 3103, column: 9, scope: !15643)
!15674 = !DILocation(line: 3105, column: 15, scope: !15659)
!15675 = !DILocation(line: 3105, column: 7, scope: !15659)
!15676 = !DILocation(line: 3106, column: 3, scope: !15643)
!15677 = !DILocation(line: 3099, column: 30, scope: !15638)
!15678 = !DILocation(line: 3099, column: 3, scope: !15638)
!15679 = !DILocation(line: 3107, column: 11, scope: !1641)
!15680 = !DILocation(line: 3107, column: 17, scope: !1641)
!15681 = !DILocation(line: 3107, column: 20, scope: !15682)
!15682 = !DILexicalBlockFile(scope: !1641, file: !162, discriminator: 1)
!15683 = !DILocation(line: 3107, column: 24, scope: !1641)
!15684 = !DILocation(line: 3107, column: 17, scope: !15685)
!15685 = !DILexicalBlockFile(scope: !1641, file: !162, discriminator: 2)
!15686 = !DILocation(line: 3107, column: 9, scope: !1641)
!15687 = !DILocation(line: 3108, column: 13, scope: !1641)
!15688 = !DILocation(line: 3108, column: 21, scope: !1641)
!15689 = !DILocation(line: 3108, column: 24, scope: !15682)
!15690 = !DILocation(line: 3108, column: 28, scope: !1641)
!15691 = !DILocation(line: 3108, column: 21, scope: !15685)
!15692 = !DILocation(line: 3108, column: 11, scope: !1641)
!15693 = !DILocation(line: 3110, column: 7, scope: !15694)
!15694 = distinct !DILexicalBlock(scope: !1641, file: !162, line: 3110, column: 7)
!15695 = !DILocation(line: 3110, column: 20, scope: !15694)
!15696 = !DILocation(line: 3110, column: 17, scope: !15694)
!15697 = !DILocation(line: 3110, column: 7, scope: !1641)
!15698 = !DILocation(line: 3111, column: 12, scope: !15694)
!15699 = !DILocation(line: 3111, column: 5, scope: !15694)
!15700 = !DILocation(line: 3114, column: 7, scope: !15701)
!15701 = distinct !DILexicalBlock(scope: !1641, file: !162, line: 3114, column: 7)
!15702 = !DILocation(line: 3114, column: 7, scope: !1641)
!15703 = !DILocation(line: 3115, column: 5, scope: !15701)
!15704 = !DILocation(line: 3117, column: 8, scope: !15705)
!15705 = distinct !DILexicalBlock(scope: !1641, file: !162, line: 3117, column: 7)
!15706 = !DILocation(line: 3117, column: 16, scope: !15705)
!15707 = !DILocation(line: 3117, column: 7, scope: !15705)
!15708 = !DILocation(line: 3117, column: 7, scope: !1641)
!15709 = !DILocation(line: 3118, column: 8, scope: !15705)
!15710 = !DILocation(line: 3118, column: 5, scope: !15705)
!15711 = !DILocation(line: 3119, column: 8, scope: !1659)
!15712 = !DILocation(line: 3119, column: 16, scope: !1659)
!15713 = !DILocation(line: 3119, column: 7, scope: !1659)
!15714 = !DILocation(line: 3119, column: 7, scope: !1641)
!15715 = !DILocation(line: 3120, column: 10, scope: !1658)
!15716 = !DILocation(line: 3120, column: 18, scope: !1658)
!15717 = !DILocation(line: 3120, column: 7, scope: !1658)
!15718 = !DILocation(line: 3121, column: 9, scope: !1657)
!15719 = !DILocation(line: 3121, column: 15, scope: !1657)
!15720 = !DILocation(line: 3121, column: 18, scope: !1657)
!15721 = !DILocation(line: 3121, column: 13, scope: !1657)
!15722 = !DILocation(line: 3121, column: 9, scope: !1658)
!15723 = !DILocation(line: 3122, column: 7, scope: !1656)
!15724 = !DILocation(line: 3122, column: 17, scope: !1656)
!15725 = !DILocation(line: 3122, column: 37, scope: !1656)
!15726 = !DILocation(line: 3122, column: 45, scope: !1656)
!15727 = !DILocation(line: 3122, column: 51, scope: !1656)
!15728 = !DILocation(line: 3122, column: 64, scope: !1656)
!15729 = !DILocation(line: 3122, column: 67, scope: !1656)
!15730 = !DILocation(line: 3122, column: 93, scope: !1656)
!15731 = !DILocation(line: 3122, column: 97, scope: !1656)
!15732 = !DILocation(line: 3122, column: 92, scope: !1656)
!15733 = !DILocation(line: 3122, column: 90, scope: !1656)
!15734 = !DILocation(line: 3124, column: 11, scope: !15735)
!15735 = distinct !DILexicalBlock(scope: !1656, file: !162, line: 3124, column: 11)
!15736 = !DILocation(line: 3124, column: 16, scope: !15735)
!15737 = !DILocation(line: 3124, column: 11, scope: !1656)
!15738 = !DILocation(line: 3125, column: 9, scope: !15735)
!15739 = !DILocation(line: 3126, column: 16, scope: !1656)
!15740 = !DILocation(line: 3126, column: 7, scope: !1656)
!15741 = !DILocation(line: 3126, column: 10, scope: !1656)
!15742 = !DILocation(line: 3126, column: 14, scope: !1656)
!15743 = !DILocation(line: 3127, column: 21, scope: !1656)
!15744 = !DILocation(line: 3127, column: 25, scope: !1656)
!15745 = !DILocation(line: 3127, column: 7, scope: !1656)
!15746 = !DILocation(line: 3127, column: 10, scope: !1656)
!15747 = !DILocation(line: 3127, column: 19, scope: !1656)
!15748 = !DILocation(line: 3128, column: 5, scope: !1657)
!15749 = !DILocation(line: 3128, column: 5, scope: !15750)
!15750 = !DILexicalBlockFile(scope: !1657, file: !162, discriminator: 1)
!15751 = !DILocation(line: 3128, column: 5, scope: !1656)
!15752 = !DILocation(line: 3129, column: 35, scope: !1658)
!15753 = !DILocation(line: 3129, column: 38, scope: !1658)
!15754 = !DILocation(line: 3129, column: 6, scope: !1658)
!15755 = !DILocation(line: 3129, column: 14, scope: !1658)
!15756 = !DILocation(line: 3129, column: 33, scope: !1658)
!15757 = !DILocation(line: 3130, column: 3, scope: !1658)
!15758 = !DILocation(line: 3132, column: 21, scope: !15759)
!15759 = distinct !DILexicalBlock(scope: !1659, file: !162, line: 3131, column: 8)
!15760 = !DILocation(line: 3132, column: 29, scope: !15759)
!15761 = !DILocation(line: 3132, column: 35, scope: !15759)
!15762 = !DILocation(line: 3132, column: 9, scope: !15759)
!15763 = !DILocation(line: 3132, column: 7, scope: !15759)
!15764 = !DILocation(line: 3133, column: 10, scope: !15765)
!15765 = distinct !DILexicalBlock(scope: !15759, file: !162, line: 3133, column: 9)
!15766 = !DILocation(line: 3133, column: 9, scope: !15759)
!15767 = !DILocation(line: 3134, column: 7, scope: !15765)
!15768 = !DILocation(line: 3135, column: 27, scope: !15759)
!15769 = !DILocation(line: 3135, column: 35, scope: !15759)
!15770 = !DILocation(line: 3135, column: 41, scope: !15759)
!15771 = !DILocation(line: 3135, column: 73, scope: !15759)
!15772 = !DILocation(line: 3135, column: 77, scope: !15759)
!15773 = !DILocation(line: 3135, column: 72, scope: !15759)
!15774 = !DILocation(line: 3135, column: 70, scope: !15759)
!15775 = !DILocation(line: 3135, column: 5, scope: !15759)
!15776 = !DILocation(line: 3135, column: 8, scope: !15759)
!15777 = !DILocation(line: 3135, column: 12, scope: !15759)
!15778 = !DILocation(line: 3136, column: 10, scope: !15779)
!15779 = distinct !DILexicalBlock(scope: !15759, file: !162, line: 3136, column: 9)
!15780 = !DILocation(line: 3136, column: 13, scope: !15779)
!15781 = !DILocation(line: 3136, column: 9, scope: !15759)
!15782 = !DILocation(line: 3137, column: 8, scope: !15783)
!15783 = distinct !DILexicalBlock(scope: !15779, file: !162, line: 3136, column: 18)
!15784 = !DILocation(line: 3137, column: 16, scope: !15783)
!15785 = !DILocation(line: 3137, column: 22, scope: !15783)
!15786 = !DILocation(line: 3137, column: 32, scope: !15783)
!15787 = !DILocation(line: 3137, column: 31, scope: !15783)
!15788 = !DILocation(line: 3138, column: 7, scope: !15783)
!15789 = !DILocation(line: 3140, column: 19, scope: !15759)
!15790 = !DILocation(line: 3140, column: 23, scope: !15759)
!15791 = !DILocation(line: 3140, column: 5, scope: !15759)
!15792 = !DILocation(line: 3140, column: 8, scope: !15759)
!15793 = !DILocation(line: 3140, column: 17, scope: !15759)
!15794 = !DILocation(line: 3142, column: 15, scope: !1641)
!15795 = !DILocation(line: 3142, column: 3, scope: !1641)
!15796 = !DILocation(line: 3142, column: 6, scope: !1641)
!15797 = !DILocation(line: 3142, column: 13, scope: !1641)
!15798 = !DILocation(line: 3143, column: 10, scope: !1641)
!15799 = !DILocation(line: 3143, column: 13, scope: !1641)
!15800 = !DILocation(line: 3143, column: 18, scope: !1641)
!15801 = !DILocation(line: 3143, column: 23, scope: !1641)
!15802 = !DILocation(line: 3143, column: 27, scope: !1641)
!15803 = !DILocation(line: 3143, column: 3, scope: !1641)
!15804 = !DILocation(line: 3144, column: 8, scope: !15805)
!15805 = distinct !DILexicalBlock(scope: !1641, file: !162, line: 3144, column: 7)
!15806 = !DILocation(line: 3144, column: 16, scope: !15805)
!15807 = !DILocation(line: 3144, column: 7, scope: !15805)
!15808 = !DILocation(line: 3144, column: 7, scope: !1641)
!15809 = !DILocation(line: 3145, column: 24, scope: !15805)
!15810 = !DILocation(line: 3145, column: 32, scope: !15805)
!15811 = !DILocation(line: 3145, column: 12, scope: !15805)
!15812 = !DILocation(line: 3145, column: 16, scope: !15805)
!15813 = !DILocation(line: 3145, column: 5, scope: !15805)
!15814 = !DILocation(line: 3145, column: 8, scope: !15805)
!15815 = !DILocation(line: 3145, column: 21, scope: !15805)
!15816 = !DILocation(line: 3146, column: 15, scope: !1641)
!15817 = !DILocation(line: 3146, column: 3, scope: !1641)
!15818 = !DILocation(line: 3146, column: 6, scope: !1641)
!15819 = !DILocation(line: 3146, column: 13, scope: !1641)
!15820 = !DILocation(line: 3147, column: 14, scope: !1641)
!15821 = !DILocation(line: 3147, column: 3, scope: !1641)
!15822 = !DILocation(line: 3147, column: 6, scope: !1641)
!15823 = !DILocation(line: 3147, column: 12, scope: !1641)
!15824 = !DILocation(line: 3148, column: 26, scope: !1641)
!15825 = !DILocation(line: 3148, column: 34, scope: !1641)
!15826 = !DILocation(line: 3148, column: 3, scope: !1641)
!15827 = !DILocation(line: 3148, column: 6, scope: !1641)
!15828 = !DILocation(line: 3148, column: 24, scope: !1641)
!15829 = !DILocation(line: 3150, column: 8, scope: !15830)
!15830 = distinct !DILexicalBlock(scope: !1641, file: !162, line: 3150, column: 7)
!15831 = !DILocation(line: 3150, column: 7, scope: !15830)
!15832 = !DILocation(line: 3150, column: 12, scope: !15830)
!15833 = !DILocation(line: 3150, column: 20, scope: !15830)
!15834 = !DILocation(line: 3150, column: 23, scope: !15835)
!15835 = !DILexicalBlockFile(scope: !15830, file: !162, discriminator: 1)
!15836 = !DILocation(line: 3150, column: 35, scope: !15830)
!15837 = !DILocation(line: 3150, column: 43, scope: !15830)
!15838 = !DILocation(line: 3150, column: 51, scope: !15830)
!15839 = !DILocation(line: 3150, column: 30, scope: !15830)
!15840 = !DILocation(line: 3150, column: 7, scope: !1641)
!15841 = !DILocation(line: 3151, column: 5, scope: !15830)
!15842 = !DILocation(line: 3151, column: 13, scope: !15830)
!15843 = !DILocation(line: 3151, column: 21, scope: !15830)
!15844 = !DILocation(line: 3153, column: 23, scope: !15830)
!15845 = !DILocation(line: 3153, column: 5, scope: !15830)
!15846 = !DILocation(line: 3153, column: 13, scope: !15830)
!15847 = !DILocation(line: 3153, column: 21, scope: !15830)
!15848 = !DILocation(line: 3154, column: 24, scope: !1641)
!15849 = !DILocation(line: 3154, column: 23, scope: !1641)
!15850 = !DILocation(line: 3154, column: 3, scope: !1641)
!15851 = !DILocation(line: 3154, column: 6, scope: !1641)
!15852 = !DILocation(line: 3154, column: 21, scope: !1641)
!15853 = !DILocation(line: 3155, column: 18, scope: !1641)
!15854 = !DILocation(line: 3155, column: 4, scope: !1641)
!15855 = !DILocation(line: 3155, column: 16, scope: !1641)
!15856 = !DILocation(line: 3157, column: 7, scope: !15857)
!15857 = distinct !DILexicalBlock(scope: !1641, file: !162, line: 3157, column: 7)
!15858 = !DILocation(line: 3157, column: 13, scope: !15857)
!15859 = !DILocation(line: 3157, column: 17, scope: !15860)
!15860 = !DILexicalBlockFile(scope: !15857, file: !162, discriminator: 1)
!15861 = !DILocation(line: 3157, column: 25, scope: !15857)
!15862 = !DILocation(line: 3157, column: 16, scope: !15857)
!15863 = !DILocation(line: 3157, column: 7, scope: !1641)
!15864 = !DILocation(line: 3158, column: 6, scope: !15857)
!15865 = !DILocation(line: 3158, column: 14, scope: !15857)
!15866 = !DILocation(line: 3158, column: 44, scope: !15857)
!15867 = !DILocation(line: 3158, column: 52, scope: !15857)
!15868 = !DILocation(line: 3158, column: 67, scope: !15857)
!15869 = !DILocation(line: 3158, column: 75, scope: !15857)
!15870 = !DILocation(line: 3159, column: 31, scope: !15857)
!15871 = !DILocation(line: 3159, column: 39, scope: !15857)
!15872 = !DILocation(line: 3159, column: 49, scope: !15860)
!15873 = !DILocation(line: 3159, column: 31, scope: !15874)
!15874 = !DILexicalBlockFile(scope: !15857, file: !162, discriminator: 2)
!15875 = !DILocation(line: 3158, column: 5, scope: !15857)
!15876 = !DILocation(line: 3160, column: 3, scope: !1641)
!15877 = !DILocation(line: 3161, column: 1, scope: !1641)
!15878 = !DILocation(line: 2216, column: 43, scope: !1710)
!15879 = !DILocation(line: 2217, column: 44, scope: !1710)
!15880 = !DILocation(line: 2218, column: 44, scope: !1710)
!15881 = !DILocation(line: 2219, column: 45, scope: !1710)
!15882 = !DILocation(line: 2221, column: 3, scope: !1710)
!15883 = !DILocation(line: 2221, column: 18, scope: !1710)
!15884 = !DILocation(line: 2221, column: 37, scope: !1710)
!15885 = !DILocation(line: 2221, column: 49, scope: !1710)
!15886 = !DILocation(line: 2221, column: 57, scope: !1710)
!15887 = !DILocation(line: 2221, column: 70, scope: !1710)
!15888 = !DILocation(line: 2221, column: 77, scope: !1710)
!15889 = !DILocation(line: 2222, column: 37, scope: !1710)
!15890 = !DILocation(line: 2222, column: 57, scope: !1710)
!15891 = !DILocation(line: 2222, column: 65, scope: !1710)
!15892 = !DILocation(line: 2222, column: 81, scope: !1710)
!15893 = !DILocation(line: 2222, column: 55, scope: !1710)
!15894 = !DILocation(line: 2222, column: 45, scope: !1710)
!15895 = !DILocation(line: 2221, column: 27, scope: !1710)
!15896 = !DILocation(line: 2223, column: 7, scope: !15897)
!15897 = distinct !DILexicalBlock(scope: !1710, file: !162, line: 2223, column: 7)
!15898 = !DILocation(line: 2223, column: 14, scope: !15897)
!15899 = !DILocation(line: 2223, column: 7, scope: !1710)
!15900 = !DILocation(line: 2224, column: 24, scope: !15901)
!15901 = distinct !DILexicalBlock(scope: !15902, file: !162, line: 2224, column: 9)
!15902 = distinct !DILexicalBlock(scope: !15897, file: !162, line: 2223, column: 33)
!15903 = !DILocation(line: 2224, column: 10, scope: !15901)
!15904 = !DILocation(line: 2224, column: 9, scope: !15902)
!15905 = !DILocation(line: 2225, column: 7, scope: !15901)
!15906 = !DILocation(line: 2226, column: 3, scope: !15902)
!15907 = !DILocation(line: 2227, column: 10, scope: !1710)
!15908 = !DILocation(line: 2227, column: 3, scope: !1710)
!15909 = !DILocation(line: 2228, column: 1, scope: !1710)
!15910 = !DILocation(line: 4938, column: 33, scope: !1824)
!15911 = !DILocation(line: 4938, column: 57, scope: !1824)
!15912 = !DILocation(line: 4938, column: 71, scope: !1824)
!15913 = !DILocation(line: 4939, column: 34, scope: !1824)
!15914 = !DILocation(line: 4939, column: 51, scope: !1824)
!15915 = !DILocation(line: 4940, column: 35, scope: !1824)
!15916 = !DILocation(line: 4942, column: 3, scope: !1824)
!15917 = !DILocation(line: 4942, column: 15, scope: !1824)
!15918 = !DILocation(line: 4942, column: 22, scope: !1824)
!15919 = !DILocation(line: 4942, column: 30, scope: !1824)
!15920 = !DILocation(line: 4943, column: 3, scope: !1824)
!15921 = !DILocation(line: 4944, column: 5, scope: !1834)
!15922 = !DILocation(line: 4944, column: 17, scope: !1834)
!15923 = !DILocation(line: 4945, column: 5, scope: !1834)
!15924 = !DILocation(line: 4945, column: 9, scope: !1834)
!15925 = !DILocation(line: 4945, column: 18, scope: !1834)
!15926 = !DILocation(line: 4945, column: 24, scope: !1834)
!15927 = !DILocation(line: 4945, column: 17, scope: !1834)
!15928 = !DILocation(line: 4945, column: 44, scope: !1834)
!15929 = !DILocation(line: 4945, column: 49, scope: !1834)
!15930 = !DILocation(line: 4945, column: 54, scope: !1834)
!15931 = !DILocation(line: 4945, column: 16, scope: !1834)
!15932 = !DILocation(line: 4946, column: 13, scope: !1834)
!15933 = !DILocation(line: 4946, column: 5, scope: !1834)
!15934 = !DILocation(line: 4948, column: 7, scope: !1840)
!15935 = !DILocation(line: 4950, column: 11, scope: !15936)
!15936 = distinct !DILexicalBlock(scope: !1840, file: !162, line: 4950, column: 11)
!15937 = !DILocation(line: 4950, column: 19, scope: !15936)
!15938 = !DILocation(line: 4950, column: 27, scope: !15936)
!15939 = !DILocation(line: 4950, column: 15, scope: !15936)
!15940 = !DILocation(line: 4950, column: 11, scope: !1840)
!15941 = !DILocation(line: 4951, column: 32, scope: !15936)
!15942 = !DILocation(line: 4951, column: 10, scope: !15936)
!15943 = !DILocation(line: 4951, column: 18, scope: !15936)
!15944 = !DILocation(line: 4951, column: 30, scope: !15936)
!15945 = !DILocation(line: 4951, column: 9, scope: !15936)
!15946 = !DILocation(line: 4952, column: 7, scope: !1840)
!15947 = !DILocation(line: 4954, column: 11, scope: !15948)
!15948 = distinct !DILexicalBlock(scope: !1840, file: !162, line: 4954, column: 11)
!15949 = !DILocation(line: 4954, column: 19, scope: !15948)
!15950 = !DILocation(line: 4954, column: 27, scope: !15948)
!15951 = !DILocation(line: 4954, column: 15, scope: !15948)
!15952 = !DILocation(line: 4954, column: 11, scope: !1840)
!15953 = !DILocation(line: 4955, column: 32, scope: !15948)
!15954 = !DILocation(line: 4955, column: 10, scope: !15948)
!15955 = !DILocation(line: 4955, column: 18, scope: !15948)
!15956 = !DILocation(line: 4955, column: 30, scope: !15948)
!15957 = !DILocation(line: 4955, column: 9, scope: !15948)
!15958 = !DILocation(line: 4956, column: 7, scope: !1840)
!15959 = !DILocation(line: 4959, column: 9, scope: !1839)
!15960 = !DILocation(line: 4959, column: 18, scope: !1839)
!15961 = !DILocation(line: 4960, column: 9, scope: !1839)
!15962 = !DILocation(line: 4960, column: 13, scope: !1839)
!15963 = !DILocation(line: 4961, column: 9, scope: !1839)
!15964 = !DILocation(line: 4961, column: 13, scope: !1839)
!15965 = !DILocation(line: 4961, column: 20, scope: !1839)
!15966 = !DILocation(line: 4961, column: 26, scope: !1839)
!15967 = !DILocation(line: 4961, column: 41, scope: !1839)
!15968 = !DILocation(line: 4961, column: 46, scope: !1839)
!15969 = !DILocation(line: 4961, column: 18, scope: !1839)
!15970 = !DILocation(line: 4962, column: 13, scope: !15971)
!15971 = distinct !DILexicalBlock(scope: !1839, file: !162, line: 4962, column: 13)
!15972 = !DILocation(line: 4962, column: 15, scope: !15971)
!15973 = !DILocation(line: 4962, column: 13, scope: !1839)
!15974 = !DILocation(line: 4963, column: 15, scope: !15975)
!15975 = distinct !DILexicalBlock(scope: !15976, file: !162, line: 4963, column: 15)
!15976 = distinct !DILexicalBlock(scope: !15971, file: !162, line: 4962, column: 20)
!15977 = !DILocation(line: 4963, column: 23, scope: !15975)
!15978 = !DILocation(line: 4963, column: 31, scope: !15975)
!15979 = !DILocation(line: 4963, column: 19, scope: !15975)
!15980 = !DILocation(line: 4963, column: 15, scope: !15976)
!15981 = !DILocation(line: 4964, column: 36, scope: !15975)
!15982 = !DILocation(line: 4964, column: 14, scope: !15975)
!15983 = !DILocation(line: 4964, column: 22, scope: !15975)
!15984 = !DILocation(line: 4964, column: 34, scope: !15975)
!15985 = !DILocation(line: 4964, column: 13, scope: !15975)
!15986 = !DILocation(line: 4965, column: 11, scope: !15976)
!15987 = !DILocation(line: 4967, column: 14, scope: !15988)
!15988 = distinct !DILexicalBlock(scope: !1839, file: !162, line: 4967, column: 13)
!15989 = !DILocation(line: 4968, column: 13, scope: !15988)
!15990 = !DILocation(line: 4968, column: 16, scope: !15991)
!15991 = !DILexicalBlockFile(scope: !15988, file: !162, discriminator: 1)
!15992 = !DILocation(line: 4968, column: 18, scope: !15988)
!15993 = !DILocation(line: 4969, column: 13, scope: !15988)
!15994 = !DILocation(line: 4969, column: 19, scope: !15991)
!15995 = !DILocation(line: 4969, column: 26, scope: !15988)
!15996 = !DILocation(line: 4969, column: 33, scope: !15988)
!15997 = !DILocation(line: 4969, column: 40, scope: !15988)
!15998 = !DILocation(line: 4969, column: 30, scope: !15988)
!15999 = !DILocation(line: 4969, column: 47, scope: !15988)
!16000 = !DILocation(line: 4969, column: 52, scope: !15988)
!16001 = !DILocation(line: 4969, column: 58, scope: !16002)
!16002 = !DILexicalBlockFile(scope: !15988, file: !162, discriminator: 2)
!16003 = !DILocation(line: 4969, column: 65, scope: !15988)
!16004 = !DILocation(line: 4969, column: 56, scope: !15988)
!16005 = !DILocation(line: 4969, column: 55, scope: !15988)
!16006 = !DILocation(line: 4969, column: 75, scope: !15988)
!16007 = !DILocation(line: 4967, column: 13, scope: !1839)
!16008 = !DILocation(line: 4970, column: 11, scope: !15988)
!16009 = !DILocation(line: 4971, column: 35, scope: !1839)
!16010 = !DILocation(line: 4971, column: 47, scope: !1839)
!16011 = !DILocation(line: 4971, column: 13, scope: !1839)
!16012 = !DILocation(line: 4971, column: 11, scope: !1839)
!16013 = !DILocation(line: 4972, column: 14, scope: !16014)
!16014 = distinct !DILexicalBlock(scope: !1839, file: !162, line: 4972, column: 13)
!16015 = !DILocation(line: 4972, column: 13, scope: !1839)
!16016 = !DILocation(line: 4973, column: 15, scope: !16017)
!16017 = distinct !DILexicalBlock(scope: !16018, file: !162, line: 4973, column: 15)
!16018 = distinct !DILexicalBlock(scope: !16014, file: !162, line: 4972, column: 17)
!16019 = !DILocation(line: 4973, column: 23, scope: !16017)
!16020 = !DILocation(line: 4973, column: 31, scope: !16017)
!16021 = !DILocation(line: 4973, column: 19, scope: !16017)
!16022 = !DILocation(line: 4973, column: 15, scope: !16018)
!16023 = !DILocation(line: 4974, column: 36, scope: !16017)
!16024 = !DILocation(line: 4974, column: 14, scope: !16017)
!16025 = !DILocation(line: 4974, column: 22, scope: !16017)
!16026 = !DILocation(line: 4974, column: 34, scope: !16017)
!16027 = !DILocation(line: 4974, column: 13, scope: !16017)
!16028 = !DILocation(line: 4975, column: 11, scope: !16018)
!16029 = !DILocation(line: 4977, column: 16, scope: !16030)
!16030 = distinct !DILexicalBlock(scope: !1839, file: !162, line: 4977, column: 9)
!16031 = !DILocation(line: 4977, column: 14, scope: !16030)
!16032 = !DILocation(line: 4977, column: 21, scope: !16033)
!16033 = !DILexicalBlockFile(scope: !16034, file: !162, discriminator: 2)
!16034 = !DILexicalBlockFile(scope: !16035, file: !162, discriminator: 1)
!16035 = distinct !DILexicalBlock(scope: !16030, file: !162, line: 4977, column: 9)
!16036 = !DILocation(line: 4977, column: 25, scope: !16035)
!16037 = !DILocation(line: 4977, column: 23, scope: !16035)
!16038 = !DILocation(line: 4977, column: 9, scope: !16030)
!16039 = !DILocation(line: 4978, column: 19, scope: !16040)
!16040 = distinct !DILexicalBlock(scope: !16041, file: !162, line: 4978, column: 15)
!16041 = distinct !DILexicalBlock(scope: !16035, file: !162, line: 4977, column: 33)
!16042 = !DILocation(line: 4978, column: 26, scope: !16040)
!16043 = !DILocation(line: 4978, column: 34, scope: !16040)
!16044 = !DILocation(line: 4978, column: 41, scope: !16040)
!16045 = !DILocation(line: 4978, column: 30, scope: !16040)
!16046 = !DILocation(line: 4978, column: 45, scope: !16040)
!16047 = !DILocation(line: 4978, column: 58, scope: !16048)
!16048 = !DILexicalBlockFile(scope: !16040, file: !162, discriminator: 1)
!16049 = !DILocation(line: 4978, column: 49, scope: !16040)
!16050 = !DILocation(line: 4978, column: 15, scope: !16041)
!16051 = !DILocation(line: 4978, column: 17, scope: !16052)
!16052 = !DILexicalBlockFile(scope: !16040, file: !162, discriminator: 4)
!16053 = !DILocation(line: 4978, column: 96, scope: !16054)
!16054 = !DILexicalBlockFile(scope: !16055, file: !162, discriminator: 3)
!16055 = !DILexicalBlockFile(scope: !16040, file: !162, discriminator: 2)
!16056 = !DILocation(line: 4978, column: 92, scope: !16040)
!16057 = !DILocation(line: 4978, column: 76, scope: !16040)
!16058 = !DILocation(line: 4978, column: 83, scope: !16040)
!16059 = !DILocation(line: 4978, column: 87, scope: !16040)
!16060 = !DILocation(line: 4978, column: 90, scope: !16040)
!16061 = !DILocation(line: 4979, column: 13, scope: !16040)
!16062 = !DILocation(line: 4980, column: 9, scope: !16041)
!16063 = !DILocation(line: 4977, column: 29, scope: !16035)
!16064 = !DILocation(line: 4977, column: 9, scope: !16035)
!16065 = !DILocation(line: 4981, column: 7, scope: !1840)
!16066 = !DILocation(line: 4981, column: 7, scope: !16067)
!16067 = !DILexicalBlockFile(scope: !1840, file: !162, discriminator: 1)
!16068 = !DILocation(line: 4982, column: 7, scope: !1840)
!16069 = !DILocation(line: 4984, column: 23, scope: !16070)
!16070 = distinct !DILexicalBlock(scope: !1840, file: !162, line: 4984, column: 11)
!16071 = !DILocation(line: 4984, column: 29, scope: !16070)
!16072 = !DILocation(line: 4984, column: 34, scope: !16070)
!16073 = !DILocation(line: 4984, column: 39, scope: !16070)
!16074 = !DILocation(line: 4984, column: 12, scope: !16070)
!16075 = !DILocation(line: 4984, column: 11, scope: !1840)
!16076 = !DILocation(line: 4985, column: 9, scope: !16070)
!16077 = !DILocation(line: 4986, column: 7, scope: !1840)
!16078 = !DILocation(line: 4988, column: 14, scope: !1840)
!16079 = !DILocation(line: 4988, column: 20, scope: !1840)
!16080 = !DILocation(line: 4988, column: 25, scope: !1840)
!16081 = !DILocation(line: 4988, column: 18, scope: !1840)
!16082 = !DILocation(line: 4988, column: 12, scope: !1840)
!16083 = !DILocation(line: 4988, column: 7, scope: !1840)
!16084 = !DILocation(line: 4992, column: 12, scope: !16085)
!16085 = distinct !DILexicalBlock(scope: !1840, file: !162, line: 4992, column: 11)
!16086 = !DILocation(line: 4992, column: 20, scope: !16085)
!16087 = !DILocation(line: 4992, column: 26, scope: !16088)
!16088 = !DILexicalBlockFile(scope: !16085, file: !162, discriminator: 1)
!16089 = !DILocation(line: 4992, column: 33, scope: !16085)
!16090 = !DILocation(line: 4992, column: 40, scope: !16085)
!16091 = !DILocation(line: 4992, column: 47, scope: !16085)
!16092 = !DILocation(line: 4992, column: 37, scope: !16085)
!16093 = !DILocation(line: 4992, column: 54, scope: !16085)
!16094 = !DILocation(line: 4992, column: 59, scope: !16085)
!16095 = !DILocation(line: 4992, column: 65, scope: !16096)
!16096 = !DILexicalBlockFile(scope: !16085, file: !162, discriminator: 2)
!16097 = !DILocation(line: 4992, column: 72, scope: !16085)
!16098 = !DILocation(line: 4992, column: 63, scope: !16085)
!16099 = !DILocation(line: 4992, column: 62, scope: !16085)
!16100 = !DILocation(line: 4992, column: 82, scope: !16085)
!16101 = !DILocation(line: 4992, column: 11, scope: !1840)
!16102 = !DILocation(line: 4993, column: 9, scope: !16085)
!16103 = !DILocation(line: 4994, column: 15, scope: !16104)
!16104 = distinct !DILexicalBlock(scope: !1840, file: !162, line: 4994, column: 11)
!16105 = !DILocation(line: 4994, column: 22, scope: !16104)
!16106 = !DILocation(line: 4994, column: 30, scope: !16104)
!16107 = !DILocation(line: 4994, column: 37, scope: !16104)
!16108 = !DILocation(line: 4994, column: 26, scope: !16104)
!16109 = !DILocation(line: 4994, column: 41, scope: !16104)
!16110 = !DILocation(line: 4994, column: 54, scope: !16111)
!16111 = !DILexicalBlockFile(scope: !16104, file: !162, discriminator: 1)
!16112 = !DILocation(line: 4994, column: 45, scope: !16104)
!16113 = !DILocation(line: 4994, column: 11, scope: !1840)
!16114 = !DILocation(line: 4994, column: 13, scope: !16115)
!16115 = !DILexicalBlockFile(scope: !16104, file: !162, discriminator: 4)
!16116 = !DILocation(line: 4994, column: 72, scope: !16117)
!16117 = !DILexicalBlockFile(scope: !16118, file: !162, discriminator: 3)
!16118 = !DILexicalBlockFile(scope: !16104, file: !162, discriminator: 2)
!16119 = !DILocation(line: 4994, column: 79, scope: !16104)
!16120 = !DILocation(line: 4994, column: 83, scope: !16104)
!16121 = !DILocation(line: 4994, column: 86, scope: !16104)
!16122 = !DILocation(line: 4995, column: 9, scope: !16104)
!16123 = !DILocation(line: 4996, column: 7, scope: !1840)
!16124 = !DILocation(line: 4999, column: 9, scope: !1844)
!16125 = !DILocation(line: 4999, column: 25, scope: !1844)
!16126 = !DILocation(line: 5000, column: 9, scope: !1844)
!16127 = !DILocation(line: 5000, column: 17, scope: !1844)
!16128 = !DILocation(line: 5001, column: 9, scope: !1844)
!16129 = !DILocation(line: 5001, column: 14, scope: !1844)
!16130 = !DILocation(line: 5002, column: 9, scope: !1844)
!16131 = !DILocation(line: 5002, column: 18, scope: !1844)
!16132 = !DILocation(line: 5002, column: 37, scope: !1844)
!16133 = !DILocation(line: 5002, column: 43, scope: !1844)
!16134 = !DILocation(line: 5002, column: 65, scope: !1844)
!16135 = !DILocation(line: 5002, column: 70, scope: !1844)
!16136 = !DILocation(line: 5002, column: 76, scope: !1844)
!16137 = !DILocation(line: 5002, column: 81, scope: !1844)
!16138 = !DILocation(line: 5002, column: 74, scope: !1844)
!16139 = !DILocation(line: 5002, column: 98, scope: !1844)
!16140 = !DILocation(line: 5002, column: 105, scope: !1844)
!16141 = !DILocation(line: 5002, column: 110, scope: !1844)
!16142 = !DILocation(line: 5002, column: 103, scope: !1844)
!16143 = !DILocation(line: 5002, column: 35, scope: !1844)
!16144 = !DILocation(line: 5002, column: 23, scope: !1844)
!16145 = !DILocation(line: 5005, column: 13, scope: !16146)
!16146 = distinct !DILexicalBlock(scope: !1844, file: !162, line: 5005, column: 13)
!16147 = !DILocation(line: 5005, column: 13, scope: !1844)
!16148 = !DILocation(line: 5006, column: 19, scope: !16149)
!16149 = distinct !DILexicalBlock(scope: !16150, file: !162, line: 5006, column: 15)
!16150 = distinct !DILexicalBlock(scope: !16146, file: !162, line: 5005, column: 17)
!16151 = !DILocation(line: 5006, column: 26, scope: !16149)
!16152 = !DILocation(line: 5006, column: 34, scope: !16149)
!16153 = !DILocation(line: 5006, column: 41, scope: !16149)
!16154 = !DILocation(line: 5006, column: 30, scope: !16149)
!16155 = !DILocation(line: 5006, column: 45, scope: !16149)
!16156 = !DILocation(line: 5006, column: 58, scope: !16157)
!16157 = !DILexicalBlockFile(scope: !16149, file: !162, discriminator: 1)
!16158 = !DILocation(line: 5006, column: 49, scope: !16149)
!16159 = !DILocation(line: 5006, column: 15, scope: !16150)
!16160 = !DILocation(line: 5006, column: 17, scope: !16161)
!16161 = !DILexicalBlockFile(scope: !16149, file: !162, discriminator: 4)
!16162 = !DILocation(line: 5006, column: 92, scope: !16163)
!16163 = !DILexicalBlockFile(scope: !16164, file: !162, discriminator: 3)
!16164 = !DILexicalBlockFile(scope: !16149, file: !162, discriminator: 2)
!16165 = !DILocation(line: 5006, column: 76, scope: !16149)
!16166 = !DILocation(line: 5006, column: 83, scope: !16149)
!16167 = !DILocation(line: 5006, column: 87, scope: !16149)
!16168 = !DILocation(line: 5006, column: 90, scope: !16149)
!16169 = !DILocation(line: 5007, column: 17, scope: !16149)
!16170 = !DILocation(line: 5008, column: 11, scope: !16150)
!16171 = !DILocation(line: 5010, column: 34, scope: !1844)
!16172 = !DILocation(line: 5010, column: 42, scope: !1844)
!16173 = !DILocation(line: 5010, column: 56, scope: !1844)
!16174 = !DILocation(line: 5011, column: 32, scope: !1844)
!16175 = !DILocation(line: 5011, column: 38, scope: !1844)
!16176 = !DILocation(line: 5011, column: 43, scope: !1844)
!16177 = !DILocation(line: 5011, column: 36, scope: !1844)
!16178 = !DILocation(line: 5012, column: 32, scope: !1844)
!16179 = !DILocation(line: 5012, column: 39, scope: !1844)
!16180 = !DILocation(line: 5012, column: 44, scope: !1844)
!16181 = !DILocation(line: 5012, column: 37, scope: !1844)
!16182 = !DILocation(line: 5010, column: 16, scope: !1844)
!16183 = !DILocation(line: 5010, column: 14, scope: !1844)
!16184 = !DILocation(line: 5013, column: 14, scope: !16185)
!16185 = distinct !DILexicalBlock(scope: !1844, file: !162, line: 5013, column: 13)
!16186 = !DILocation(line: 5013, column: 13, scope: !1844)
!16187 = !DILocation(line: 5014, column: 11, scope: !16185)
!16188 = !DILocation(line: 5015, column: 35, scope: !1844)
!16189 = !DILocation(line: 5015, column: 44, scope: !1844)
!16190 = !DILocation(line: 5015, column: 49, scope: !1844)
!16191 = !DILocation(line: 5015, column: 66, scope: !1844)
!16192 = !DILocation(line: 5015, column: 28, scope: !1844)
!16193 = !DILocation(line: 5015, column: 18, scope: !1844)
!16194 = !DILocation(line: 5015, column: 16, scope: !1844)
!16195 = !DILocation(line: 5016, column: 45, scope: !1844)
!16196 = !DILocation(line: 5016, column: 53, scope: !1844)
!16197 = !DILocation(line: 5016, column: 68, scope: !1844)
!16198 = !DILocation(line: 5016, column: 13, scope: !1844)
!16199 = !DILocation(line: 5016, column: 21, scope: !1844)
!16200 = !DILocation(line: 5016, column: 36, scope: !1844)
!16201 = !DILocation(line: 5016, column: 40, scope: !1844)
!16202 = !DILocation(line: 5020, column: 13, scope: !16203)
!16203 = distinct !DILexicalBlock(scope: !1844, file: !162, line: 5020, column: 13)
!16204 = !DILocation(line: 5020, column: 22, scope: !16203)
!16205 = !DILocation(line: 5020, column: 27, scope: !16203)
!16206 = !DILocation(line: 5020, column: 18, scope: !16203)
!16207 = !DILocation(line: 5020, column: 13, scope: !1844)
!16208 = !DILocation(line: 5023, column: 16, scope: !16203)
!16209 = !DILocation(line: 5023, column: 24, scope: !16203)
!16210 = !DILocation(line: 5023, column: 39, scope: !16203)
!16211 = !DILocation(line: 5023, column: 15, scope: !16203)
!16212 = !DILocation(line: 5023, column: 54, scope: !16203)
!16213 = !DILocation(line: 5025, column: 16, scope: !16203)
!16214 = !DILocation(line: 5025, column: 21, scope: !16203)
!16215 = !DILocation(line: 5026, column: 20, scope: !16203)
!16216 = !DILocation(line: 5026, column: 28, scope: !16203)
!16217 = !DILocation(line: 5026, column: 18, scope: !16203)
!16218 = !DILocation(line: 5027, column: 19, scope: !16203)
!16219 = !DILocation(line: 5027, column: 24, scope: !16203)
!16220 = !DILocation(line: 5027, column: 18, scope: !16203)
!16221 = !DILocation(line: 5023, column: 54, scope: !16222)
!16222 = !DILexicalBlockFile(scope: !16203, file: !162, discriminator: 1)
!16223 = !DILocation(line: 5021, column: 27, scope: !16203)
!16224 = !DILocation(line: 5021, column: 11, scope: !16203)
!16225 = !DILocation(line: 5029, column: 30, scope: !16203)
!16226 = !DILocation(line: 5029, column: 35, scope: !16203)
!16227 = !DILocation(line: 5029, column: 54, scope: !16203)
!16228 = !DILocation(line: 5029, column: 57, scope: !16222)
!16229 = !DILocation(line: 5029, column: 62, scope: !16203)
!16230 = !DILocation(line: 5029, column: 57, scope: !16203)
!16231 = !DILocation(line: 5029, column: 54, scope: !16232)
!16232 = !DILexicalBlockFile(scope: !16233, file: !162, discriminator: 3)
!16233 = !DILexicalBlockFile(scope: !16203, file: !162, discriminator: 2)
!16234 = !DILocation(line: 5029, column: 29, scope: !16203)
!16235 = !DILocation(line: 5029, column: 27, scope: !16203)
!16236 = !DILocation(line: 5030, column: 13, scope: !16237)
!16237 = distinct !DILexicalBlock(scope: !1844, file: !162, line: 5030, column: 13)
!16238 = !DILocation(line: 5030, column: 13, scope: !1844)
!16239 = !DILocation(line: 5031, column: 16, scope: !16240)
!16240 = distinct !DILexicalBlock(scope: !16241, file: !162, line: 5031, column: 15)
!16241 = distinct !DILexicalBlock(scope: !16237, file: !162, line: 5030, column: 30)
!16242 = !DILocation(line: 5031, column: 15, scope: !16241)
!16243 = !DILocation(line: 5032, column: 13, scope: !16240)
!16244 = !DILocation(line: 5033, column: 21, scope: !16245)
!16245 = distinct !DILexicalBlock(scope: !16240, file: !162, line: 5033, column: 20)
!16246 = !DILocation(line: 5033, column: 29, scope: !16245)
!16247 = !DILocation(line: 5033, column: 20, scope: !16240)
!16248 = !DILocation(line: 5034, column: 13, scope: !16245)
!16249 = !DILocation(line: 5035, column: 9, scope: !16241)
!16250 = !DILocation(line: 5036, column: 19, scope: !16251)
!16251 = distinct !DILexicalBlock(scope: !16237, file: !162, line: 5036, column: 18)
!16252 = !DILocation(line: 5036, column: 18, scope: !16237)
!16253 = !DILocation(line: 5047, column: 11, scope: !16254)
!16254 = distinct !DILexicalBlock(scope: !16251, file: !162, line: 5036, column: 27)
!16255 = !DILocation(line: 5049, column: 13, scope: !16256)
!16256 = distinct !DILexicalBlock(scope: !1844, file: !162, line: 5049, column: 13)
!16257 = !DILocation(line: 5049, column: 21, scope: !16256)
!16258 = !DILocation(line: 5049, column: 13, scope: !1844)
!16259 = !DILocation(line: 5050, column: 15, scope: !16260)
!16260 = distinct !DILexicalBlock(scope: !16261, file: !162, line: 5050, column: 15)
!16261 = distinct !DILexicalBlock(scope: !16256, file: !162, line: 5049, column: 27)
!16262 = !DILocation(line: 5050, column: 23, scope: !16260)
!16263 = !DILocation(line: 5050, column: 31, scope: !16260)
!16264 = !DILocation(line: 5050, column: 19, scope: !16260)
!16265 = !DILocation(line: 5050, column: 15, scope: !16261)
!16266 = !DILocation(line: 5051, column: 36, scope: !16260)
!16267 = !DILocation(line: 5051, column: 14, scope: !16260)
!16268 = !DILocation(line: 5051, column: 22, scope: !16260)
!16269 = !DILocation(line: 5051, column: 34, scope: !16260)
!16270 = !DILocation(line: 5051, column: 13, scope: !16260)
!16271 = !DILocation(line: 5052, column: 11, scope: !16261)
!16272 = !DILocation(line: 5054, column: 13, scope: !16273)
!16273 = distinct !DILexicalBlock(scope: !1844, file: !162, line: 5054, column: 13)
!16274 = !DILocation(line: 5054, column: 21, scope: !16273)
!16275 = !DILocation(line: 5054, column: 13, scope: !1844)
!16276 = !DILocation(line: 5055, column: 15, scope: !16277)
!16277 = distinct !DILexicalBlock(scope: !16278, file: !162, line: 5055, column: 15)
!16278 = distinct !DILexicalBlock(scope: !16273, file: !162, line: 5054, column: 31)
!16279 = !DILocation(line: 5055, column: 23, scope: !16277)
!16280 = !DILocation(line: 5055, column: 31, scope: !16277)
!16281 = !DILocation(line: 5055, column: 19, scope: !16277)
!16282 = !DILocation(line: 5055, column: 15, scope: !16278)
!16283 = !DILocation(line: 5056, column: 36, scope: !16277)
!16284 = !DILocation(line: 5056, column: 14, scope: !16277)
!16285 = !DILocation(line: 5056, column: 22, scope: !16277)
!16286 = !DILocation(line: 5056, column: 34, scope: !16277)
!16287 = !DILocation(line: 5056, column: 13, scope: !16277)
!16288 = !DILocation(line: 5057, column: 11, scope: !16278)
!16289 = !DILocation(line: 5059, column: 14, scope: !1850)
!16290 = !DILocation(line: 5059, column: 22, scope: !1850)
!16291 = !DILocation(line: 5059, column: 13, scope: !1844)
!16292 = !DILocation(line: 5060, column: 15, scope: !16293)
!16293 = distinct !DILexicalBlock(scope: !16294, file: !162, line: 5060, column: 15)
!16294 = distinct !DILexicalBlock(scope: !1850, file: !162, line: 5059, column: 31)
!16295 = !DILocation(line: 5060, column: 23, scope: !16293)
!16296 = !DILocation(line: 5060, column: 31, scope: !16293)
!16297 = !DILocation(line: 5060, column: 19, scope: !16293)
!16298 = !DILocation(line: 5060, column: 15, scope: !16294)
!16299 = !DILocation(line: 5061, column: 36, scope: !16293)
!16300 = !DILocation(line: 5061, column: 14, scope: !16293)
!16301 = !DILocation(line: 5061, column: 22, scope: !16293)
!16302 = !DILocation(line: 5061, column: 34, scope: !16293)
!16303 = !DILocation(line: 5061, column: 13, scope: !16293)
!16304 = !DILocation(line: 5062, column: 11, scope: !16294)
!16305 = !DILocation(line: 5065, column: 11, scope: !1849)
!16306 = !DILocation(line: 5065, column: 26, scope: !1849)
!16307 = !DILocation(line: 5066, column: 11, scope: !1849)
!16308 = !DILocation(line: 5066, column: 27, scope: !1849)
!16309 = !DILocation(line: 5066, column: 37, scope: !1849)
!16310 = !DILocation(line: 5066, column: 45, scope: !1849)
!16311 = !DILocation(line: 5066, column: 55, scope: !1849)
!16312 = !DILocation(line: 5066, column: 63, scope: !1849)
!16313 = !DILocation(line: 5066, column: 53, scope: !1849)
!16314 = !DILocation(line: 5067, column: 11, scope: !1849)
!16315 = !DILocation(line: 5067, column: 19, scope: !1849)
!16316 = !DILocation(line: 5067, column: 24, scope: !1849)
!16317 = !DILocation(line: 5068, column: 41, scope: !1849)
!16318 = !DILocation(line: 5068, column: 50, scope: !1849)
!16319 = !DILocation(line: 5068, column: 58, scope: !1849)
!16320 = !DILocation(line: 5068, column: 79, scope: !1849)
!16321 = !DILocation(line: 5069, column: 49, scope: !1849)
!16322 = !DILocation(line: 5069, column: 57, scope: !1849)
!16323 = !DILocation(line: 5070, column: 49, scope: !1849)
!16324 = !DILocation(line: 5070, column: 58, scope: !1849)
!16325 = !DILocation(line: 5068, column: 20, scope: !1849)
!16326 = !DILocation(line: 5068, column: 18, scope: !1849)
!16327 = !DILocation(line: 5071, column: 11, scope: !1849)
!16328 = !DILocation(line: 5071, column: 19, scope: !1849)
!16329 = !DILocation(line: 5071, column: 24, scope: !1849)
!16330 = !DILocation(line: 5072, column: 15, scope: !16331)
!16331 = distinct !DILexicalBlock(scope: !1849, file: !162, line: 5072, column: 15)
!16332 = !DILocation(line: 5072, column: 15, scope: !1849)
!16333 = !DILocation(line: 5073, column: 20, scope: !16331)
!16334 = !DILocation(line: 5073, column: 13, scope: !16331)
!16335 = !DILocation(line: 5074, column: 9, scope: !1850)
!16336 = !DILocation(line: 5074, column: 9, scope: !16337)
!16337 = !DILexicalBlockFile(scope: !1850, file: !162, discriminator: 1)
!16338 = !DILocation(line: 5075, column: 7, scope: !1840)
!16339 = !DILocation(line: 5075, column: 7, scope: !16067)
!16340 = !DILocation(line: 5076, column: 7, scope: !1840)
!16341 = !DILocation(line: 5078, column: 11, scope: !16342)
!16342 = distinct !DILexicalBlock(scope: !1840, file: !162, line: 5078, column: 11)
!16343 = !DILocation(line: 5078, column: 19, scope: !16342)
!16344 = !DILocation(line: 5078, column: 27, scope: !16342)
!16345 = !DILocation(line: 5078, column: 15, scope: !16342)
!16346 = !DILocation(line: 5078, column: 11, scope: !1840)
!16347 = !DILocation(line: 5079, column: 32, scope: !16342)
!16348 = !DILocation(line: 5079, column: 10, scope: !16342)
!16349 = !DILocation(line: 5079, column: 18, scope: !16342)
!16350 = !DILocation(line: 5079, column: 30, scope: !16342)
!16351 = !DILocation(line: 5079, column: 9, scope: !16342)
!16352 = !DILocation(line: 5080, column: 7, scope: !1840)
!16353 = !DILocation(line: 5082, column: 11, scope: !1834)
!16354 = !DILocation(line: 5082, column: 9, scope: !1834)
!16355 = !DILocation(line: 5083, column: 3, scope: !1835)
!16356 = !DILocation(line: 5083, column: 3, scope: !16357)
!16357 = !DILexicalBlockFile(scope: !1835, file: !162, discriminator: 1)
!16358 = !DILocation(line: 4943, column: 3, scope: !1835)
!16359 = !DILocation(line: 5085, column: 1, scope: !1824)
!16360 = !DILocation(line: 4852, column: 36, scope: !1925)
!16361 = !DILocation(line: 4853, column: 37, scope: !1925)
!16362 = !DILocation(line: 4854, column: 37, scope: !1925)
!16363 = !DILocation(line: 4855, column: 38, scope: !1925)
!16364 = !DILocation(line: 4857, column: 3, scope: !1925)
!16365 = !DILocation(line: 4857, column: 11, scope: !1925)
!16366 = !DILocation(line: 4858, column: 3, scope: !1925)
!16367 = !DILocation(line: 4858, column: 15, scope: !1925)
!16368 = !DILocation(line: 4858, column: 27, scope: !1925)
!16369 = !DILocation(line: 4859, column: 3, scope: !1925)
!16370 = !DILocation(line: 4859, column: 15, scope: !1925)
!16371 = !DILocation(line: 4860, column: 3, scope: !1925)
!16372 = !DILocation(line: 4860, column: 18, scope: !1925)
!16373 = !DILocation(line: 4861, column: 3, scope: !1925)
!16374 = !DILocation(line: 4861, column: 25, scope: !1925)
!16375 = !DILocation(line: 4861, column: 39, scope: !1925)
!16376 = !DILocation(line: 4861, column: 47, scope: !1925)
!16377 = !DILocation(line: 4862, column: 8, scope: !16378)
!16378 = distinct !DILexicalBlock(scope: !1925, file: !162, line: 4862, column: 7)
!16379 = !DILocation(line: 4862, column: 7, scope: !1925)
!16380 = !DILocation(line: 4863, column: 5, scope: !16378)
!16381 = !DILocation(line: 4865, column: 12, scope: !1925)
!16382 = !DILocation(line: 4865, column: 24, scope: !1925)
!16383 = !DILocation(line: 4865, column: 10, scope: !1925)
!16384 = !DILocation(line: 4866, column: 24, scope: !1925)
!16385 = !DILocation(line: 4866, column: 32, scope: !1925)
!16386 = !DILocation(line: 4866, column: 43, scope: !1925)
!16387 = !DILocation(line: 4866, column: 51, scope: !1925)
!16388 = !DILocation(line: 4866, column: 41, scope: !1925)
!16389 = !DILocation(line: 4866, column: 13, scope: !1925)
!16390 = !DILocation(line: 4867, column: 22, scope: !1925)
!16391 = !DILocation(line: 4867, column: 30, scope: !1925)
!16392 = !DILocation(line: 4867, column: 40, scope: !1925)
!16393 = !DILocation(line: 4867, column: 48, scope: !1925)
!16394 = !DILocation(line: 4867, column: 38, scope: !1925)
!16395 = !DILocation(line: 4867, column: 11, scope: !1925)
!16396 = !DILocation(line: 4870, column: 7, scope: !1939)
!16397 = !DILocation(line: 4870, column: 15, scope: !1939)
!16398 = !DILocation(line: 4870, column: 7, scope: !1925)
!16399 = !DILocation(line: 4871, column: 5, scope: !1938)
!16400 = !DILocation(line: 4871, column: 9, scope: !1938)
!16401 = !DILocation(line: 4871, column: 19, scope: !1938)
!16402 = !DILocation(line: 4871, column: 27, scope: !1938)
!16403 = !DILocation(line: 4871, column: 49, scope: !1938)
!16404 = !DILocation(line: 4871, column: 17, scope: !1938)
!16405 = !DILocation(line: 4871, column: 63, scope: !1938)
!16406 = !DILocation(line: 4871, column: 71, scope: !1938)
!16407 = !DILocation(line: 4871, column: 92, scope: !1938)
!16408 = !DILocation(line: 4871, column: 103, scope: !1938)
!16409 = !DILocation(line: 4871, column: 16, scope: !1938)
!16410 = !DILocation(line: 4872, column: 23, scope: !1938)
!16411 = !DILocation(line: 4872, column: 32, scope: !1938)
!16412 = !DILocation(line: 4872, column: 40, scope: !1938)
!16413 = !DILocation(line: 4872, column: 61, scope: !1938)
!16414 = !DILocation(line: 4872, column: 72, scope: !1938)
!16415 = !DILocation(line: 4872, column: 81, scope: !1938)
!16416 = !DILocation(line: 4873, column: 23, scope: !1938)
!16417 = !DILocation(line: 4872, column: 14, scope: !1938)
!16418 = !DILocation(line: 4872, column: 12, scope: !1938)
!16419 = !DILocation(line: 4874, column: 3, scope: !1939)
!16420 = !DILocation(line: 4874, column: 3, scope: !1938)
!16421 = !DILocation(line: 4877, column: 24, scope: !1939)
!16422 = !DILocation(line: 4877, column: 32, scope: !1939)
!16423 = !DILocation(line: 4877, column: 44, scope: !1939)
!16424 = !DILocation(line: 4877, column: 60, scope: !1939)
!16425 = !DILocation(line: 4877, column: 68, scope: !1939)
!16426 = !DILocation(line: 4878, column: 24, scope: !1939)
!16427 = !DILocation(line: 4878, column: 35, scope: !1939)
!16428 = !DILocation(line: 4877, column: 14, scope: !1939)
!16429 = !DILocation(line: 4877, column: 12, scope: !1939)
!16430 = !DILocation(line: 4880, column: 7, scope: !16431)
!16431 = distinct !DILexicalBlock(scope: !1925, file: !162, line: 4880, column: 7)
!16432 = !DILocation(line: 4880, column: 14, scope: !16431)
!16433 = !DILocation(line: 4880, column: 7, scope: !1925)
!16434 = !DILocation(line: 4881, column: 12, scope: !16431)
!16435 = !DILocation(line: 4881, column: 5, scope: !16431)
!16436 = !DILocation(line: 4882, column: 12, scope: !16437)
!16437 = distinct !DILexicalBlock(scope: !16431, file: !162, line: 4882, column: 12)
!16438 = !DILocation(line: 4882, column: 23, scope: !16437)
!16439 = !DILocation(line: 4882, column: 20, scope: !16437)
!16440 = !DILocation(line: 4882, column: 28, scope: !16437)
!16441 = !DILocation(line: 4882, column: 32, scope: !16442)
!16442 = !DILexicalBlockFile(scope: !16437, file: !162, discriminator: 1)
!16443 = !DILocation(line: 4882, column: 40, scope: !16437)
!16444 = !DILocation(line: 4882, column: 56, scope: !16437)
!16445 = !DILocation(line: 4882, column: 65, scope: !16437)
!16446 = !DILocation(line: 4882, column: 12, scope: !16431)
!16447 = !DILocation(line: 4883, column: 31, scope: !16448)
!16448 = distinct !DILexicalBlock(scope: !16437, file: !162, line: 4882, column: 83)
!16449 = !DILocation(line: 4883, column: 46, scope: !16448)
!16450 = !DILocation(line: 4883, column: 54, scope: !16448)
!16451 = !DILocation(line: 4883, column: 36, scope: !16448)
!16452 = !DILocation(line: 4883, column: 25, scope: !16448)
!16453 = !DILocation(line: 4883, column: 5, scope: !16448)
!16454 = !DILocation(line: 4883, column: 13, scope: !16448)
!16455 = !DILocation(line: 4883, column: 23, scope: !16448)
!16456 = !DILocation(line: 4884, column: 12, scope: !16448)
!16457 = !DILocation(line: 4884, column: 5, scope: !16448)
!16458 = !DILocation(line: 4887, column: 5, scope: !16459)
!16459 = distinct !DILexicalBlock(scope: !16437, file: !162, line: 4886, column: 8)
!16460 = !DILocation(line: 4887, column: 13, scope: !16459)
!16461 = !DILocation(line: 4887, column: 18, scope: !16459)
!16462 = !DILocation(line: 4888, column: 40, scope: !16459)
!16463 = !DILocation(line: 4888, column: 52, scope: !16459)
!16464 = !DILocation(line: 4888, column: 6, scope: !16459)
!16465 = !DILocation(line: 4888, column: 14, scope: !16459)
!16466 = !DILocation(line: 4888, column: 38, scope: !16459)
!16467 = !DILocation(line: 4890, column: 25, scope: !16459)
!16468 = !DILocation(line: 4890, column: 33, scope: !16459)
!16469 = !DILocation(line: 4890, column: 5, scope: !16459)
!16470 = !DILocation(line: 4890, column: 17, scope: !16459)
!16471 = !DILocation(line: 4890, column: 22, scope: !16459)
!16472 = !DILocation(line: 4891, column: 40, scope: !16459)
!16473 = !DILocation(line: 4891, column: 6, scope: !16459)
!16474 = !DILocation(line: 4891, column: 14, scope: !16459)
!16475 = !DILocation(line: 4891, column: 38, scope: !16459)
!16476 = !DILocation(line: 4895, column: 7, scope: !1942)
!16477 = !DILocation(line: 4895, column: 15, scope: !1942)
!16478 = !DILocation(line: 4895, column: 7, scope: !1925)
!16479 = !DILocation(line: 4896, column: 5, scope: !1941)
!16480 = !DILocation(line: 4896, column: 9, scope: !1941)
!16481 = !DILocation(line: 4897, column: 6, scope: !1941)
!16482 = !DILocation(line: 4897, column: 14, scope: !1941)
!16483 = !DILocation(line: 4897, column: 27, scope: !1941)
!16484 = !DILocation(line: 4898, column: 15, scope: !1941)
!16485 = !DILocation(line: 4898, column: 23, scope: !1941)
!16486 = !DILocation(line: 4898, column: 37, scope: !1941)
!16487 = !DILocation(line: 4898, column: 13, scope: !1941)
!16488 = !DILocation(line: 4898, column: 51, scope: !1941)
!16489 = !DILocation(line: 4898, column: 59, scope: !1941)
!16490 = !DILocation(line: 4898, column: 72, scope: !1941)
!16491 = !DILocation(line: 4898, column: 75, scope: !1941)
!16492 = !DILocation(line: 4898, column: 12, scope: !1941)
!16493 = !DILocation(line: 4898, column: 9, scope: !1941)
!16494 = !DILocation(line: 4899, column: 21, scope: !1941)
!16495 = !DILocation(line: 4899, column: 30, scope: !1941)
!16496 = !DILocation(line: 4899, column: 38, scope: !1941)
!16497 = !DILocation(line: 4899, column: 51, scope: !1941)
!16498 = !DILocation(line: 4899, column: 54, scope: !1941)
!16499 = !DILocation(line: 4899, column: 59, scope: !1941)
!16500 = !DILocation(line: 4899, column: 64, scope: !1941)
!16501 = !DILocation(line: 4899, column: 70, scope: !1941)
!16502 = !DILocation(line: 4900, column: 33, scope: !1941)
!16503 = !DILocation(line: 4900, column: 41, scope: !1941)
!16504 = !DILocation(line: 4900, column: 57, scope: !1941)
!16505 = !DILocation(line: 4900, column: 31, scope: !1941)
!16506 = !DILocation(line: 4900, column: 21, scope: !1941)
!16507 = !DILocation(line: 4899, column: 12, scope: !1941)
!16508 = !DILocation(line: 4899, column: 5, scope: !1941)
!16509 = !DILocation(line: 4901, column: 3, scope: !1942)
!16510 = !DILocation(line: 4905, column: 6, scope: !16511)
!16511 = distinct !DILexicalBlock(scope: !1942, file: !162, line: 4904, column: 3)
!16512 = !DILocation(line: 4905, column: 14, scope: !16511)
!16513 = !DILocation(line: 4905, column: 27, scope: !16511)
!16514 = !DILocation(line: 4907, column: 22, scope: !16511)
!16515 = !DILocation(line: 4907, column: 31, scope: !16511)
!16516 = !DILocation(line: 4907, column: 39, scope: !16511)
!16517 = !DILocation(line: 4907, column: 30, scope: !16511)
!16518 = !DILocation(line: 4907, column: 65, scope: !16511)
!16519 = !DILocation(line: 4907, column: 73, scope: !16511)
!16520 = !DILocation(line: 4907, column: 86, scope: !16511)
!16521 = !DILocation(line: 4907, column: 89, scope: !16511)
!16522 = !DILocation(line: 4908, column: 22, scope: !16511)
!16523 = !DILocation(line: 4908, column: 43, scope: !16511)
!16524 = !DILocation(line: 4908, column: 51, scope: !16511)
!16525 = !DILocation(line: 4908, column: 67, scope: !16511)
!16526 = !DILocation(line: 4908, column: 41, scope: !16511)
!16527 = !DILocation(line: 4908, column: 31, scope: !16511)
!16528 = !DILocation(line: 4907, column: 12, scope: !16511)
!16529 = !DILocation(line: 4907, column: 5, scope: !16511)
!16530 = !DILocation(line: 4910, column: 1, scope: !1925)
!16531 = !DILocation(line: 6322, column: 23, scope: !1953)
!16532 = !DILocation(line: 6323, column: 16, scope: !1953)
!16533 = !DILocation(line: 6324, column: 25, scope: !1953)
!16534 = !DILocation(line: 6325, column: 26, scope: !1953)
!16535 = !DILocation(line: 6326, column: 23, scope: !1953)
!16536 = !DILocation(line: 6328, column: 3, scope: !1953)
!16537 = !DILocation(line: 6328, column: 15, scope: !1953)
!16538 = !DILocation(line: 6328, column: 22, scope: !1953)
!16539 = !DILocation(line: 6328, column: 30, scope: !1953)
!16540 = !DILocation(line: 6329, column: 30, scope: !1953)
!16541 = !DILocation(line: 6329, column: 16, scope: !1953)
!16542 = !DILocation(line: 6329, column: 21, scope: !1953)
!16543 = !DILocation(line: 6329, column: 40, scope: !1953)
!16544 = !DILocation(line: 6329, column: 3, scope: !1953)
!16545 = !DILocation(line: 6329, column: 9, scope: !1953)
!16546 = !DILocation(line: 6329, column: 14, scope: !1953)
!16547 = !DILocation(line: 6330, column: 31, scope: !1953)
!16548 = !DILocation(line: 6330, column: 17, scope: !1953)
!16549 = !DILocation(line: 6330, column: 22, scope: !1953)
!16550 = !DILocation(line: 6330, column: 41, scope: !1953)
!16551 = !DILocation(line: 6330, column: 3, scope: !1953)
!16552 = !DILocation(line: 6330, column: 9, scope: !1953)
!16553 = !DILocation(line: 6330, column: 15, scope: !1953)
!16554 = !DILocation(line: 6331, column: 7, scope: !1967)
!16555 = !DILocation(line: 6331, column: 13, scope: !1967)
!16556 = !DILocation(line: 6331, column: 18, scope: !1967)
!16557 = !DILocation(line: 6331, column: 7, scope: !1953)
!16558 = !DILocation(line: 6332, column: 5, scope: !1966)
!16559 = !DILocation(line: 6332, column: 21, scope: !1966)
!16560 = !DILocation(line: 6333, column: 19, scope: !1966)
!16561 = !DILocation(line: 6333, column: 18, scope: !1966)
!16562 = !DILocation(line: 6333, column: 5, scope: !1966)
!16563 = !DILocation(line: 6333, column: 11, scope: !1966)
!16564 = !DILocation(line: 6333, column: 16, scope: !1966)
!16565 = !DILocation(line: 6334, column: 25, scope: !1966)
!16566 = !DILocation(line: 6334, column: 11, scope: !1966)
!16567 = !DILocation(line: 6334, column: 16, scope: !1966)
!16568 = !DILocation(line: 6334, column: 35, scope: !1966)
!16569 = !DILocation(line: 6334, column: 9, scope: !1966)
!16570 = !DILocation(line: 6335, column: 5, scope: !1966)
!16571 = !DILocation(line: 6336, column: 23, scope: !16572)
!16572 = distinct !DILexicalBlock(scope: !16573, file: !162, line: 6335, column: 14)
!16573 = distinct !DILexicalBlock(scope: !16574, file: !162, line: 6335, column: 5)
!16574 = distinct !DILexicalBlock(scope: !1966, file: !162, line: 6335, column: 5)
!16575 = !DILocation(line: 6336, column: 22, scope: !16572)
!16576 = !DILocation(line: 6336, column: 10, scope: !16572)
!16577 = !DILocation(line: 6336, column: 17, scope: !16572)
!16578 = !DILocation(line: 6336, column: 20, scope: !16572)
!16579 = !DILocation(line: 6337, column: 13, scope: !16580)
!16580 = distinct !DILexicalBlock(scope: !16572, file: !162, line: 6337, column: 11)
!16581 = !DILocation(line: 6337, column: 12, scope: !16580)
!16582 = !DILocation(line: 6337, column: 11, scope: !16572)
!16583 = !DILocation(line: 6338, column: 9, scope: !16580)
!16584 = !DILocation(line: 6339, column: 10, scope: !16572)
!16585 = !DILocation(line: 6335, column: 5, scope: !16573)
!16586 = !DILocation(line: 6341, column: 5, scope: !1966)
!16587 = !DILocation(line: 6341, column: 11, scope: !1966)
!16588 = !DILocation(line: 6341, column: 23, scope: !1966)
!16589 = !DILocation(line: 6342, column: 5, scope: !1966)
!16590 = !DILocation(line: 6342, column: 11, scope: !1966)
!16591 = !DILocation(line: 6342, column: 20, scope: !1966)
!16592 = !DILocation(line: 6343, column: 3, scope: !1967)
!16593 = !DILocation(line: 6343, column: 3, scope: !1966)
!16594 = !DILocation(line: 6345, column: 5, scope: !1969)
!16595 = !DILocation(line: 6345, column: 18, scope: !1969)
!16596 = !DILocation(line: 6346, column: 5, scope: !1969)
!16597 = !DILocation(line: 6346, column: 9, scope: !1969)
!16598 = !DILocation(line: 6347, column: 39, scope: !1969)
!16599 = !DILocation(line: 6347, column: 25, scope: !1969)
!16600 = !DILocation(line: 6347, column: 30, scope: !1969)
!16601 = !DILocation(line: 6347, column: 49, scope: !1969)
!16602 = !DILocation(line: 6347, column: 5, scope: !1969)
!16603 = !DILocation(line: 6347, column: 11, scope: !1969)
!16604 = !DILocation(line: 6347, column: 23, scope: !1969)
!16605 = !DILocation(line: 6348, column: 23, scope: !1969)
!16606 = !DILocation(line: 6348, column: 22, scope: !1969)
!16607 = !DILocation(line: 6348, column: 5, scope: !1969)
!16608 = !DILocation(line: 6348, column: 11, scope: !1969)
!16609 = !DILocation(line: 6348, column: 20, scope: !1969)
!16610 = !DILocation(line: 6349, column: 17, scope: !1969)
!16611 = !DILocation(line: 6349, column: 23, scope: !1969)
!16612 = !DILocation(line: 6349, column: 6, scope: !1969)
!16613 = !DILocation(line: 6349, column: 14, scope: !1969)
!16614 = !DILocation(line: 6350, column: 12, scope: !16615)
!16615 = distinct !DILexicalBlock(scope: !1969, file: !162, line: 6350, column: 5)
!16616 = !DILocation(line: 6350, column: 36, scope: !16615)
!16617 = !DILocation(line: 6350, column: 22, scope: !16615)
!16618 = !DILocation(line: 6350, column: 27, scope: !16615)
!16619 = !DILocation(line: 6350, column: 46, scope: !16615)
!16620 = !DILocation(line: 6350, column: 20, scope: !16615)
!16621 = !DILocation(line: 6350, column: 10, scope: !16615)
!16622 = !DILocation(line: 6351, column: 10, scope: !16623)
!16623 = distinct !DILexicalBlock(scope: !16615, file: !162, line: 6350, column: 5)
!16624 = !DILocation(line: 6351, column: 14, scope: !16623)
!16625 = !DILocation(line: 6351, column: 20, scope: !16623)
!16626 = !DILocation(line: 6351, column: 12, scope: !16623)
!16627 = !DILocation(line: 6350, column: 5, scope: !16615)
!16628 = !DILocation(line: 6353, column: 18, scope: !16629)
!16629 = distinct !DILexicalBlock(scope: !16623, file: !162, line: 6352, column: 47)
!16630 = !DILocation(line: 6353, column: 26, scope: !16629)
!16631 = !DILocation(line: 6353, column: 47, scope: !16629)
!16632 = !DILocation(line: 6353, column: 32, scope: !16629)
!16633 = !DILocation(line: 6353, column: 38, scope: !16629)
!16634 = !DILocation(line: 6353, column: 52, scope: !16629)
!16635 = !DILocation(line: 6353, column: 61, scope: !16629)
!16636 = !DILocation(line: 6353, column: 7, scope: !16629)
!16637 = !DILocation(line: 6354, column: 5, scope: !16629)
!16638 = !DILocation(line: 6352, column: 11, scope: !16623)
!16639 = !DILocation(line: 6352, column: 34, scope: !16623)
!16640 = !DILocation(line: 6352, column: 20, scope: !16623)
!16641 = !DILocation(line: 6352, column: 25, scope: !16623)
!16642 = !DILocation(line: 6352, column: 38, scope: !16623)
!16643 = !DILocation(line: 6352, column: 18, scope: !16623)
!16644 = !DILocation(line: 6350, column: 5, scope: !16623)
!16645 = !DILocation(line: 6355, column: 5, scope: !1969)
!16646 = !DILocation(line: 6355, column: 11, scope: !1969)
!16647 = !DILocation(line: 6355, column: 16, scope: !1969)
!16648 = !DILocation(line: 6356, column: 3, scope: !1967)
!16649 = !DILocation(line: 6357, column: 1, scope: !1953)
!16650 = !DILocation(line: 5254, column: 26, scope: !1982)
!16651 = !DILocation(line: 5256, column: 3, scope: !1982)
!16652 = !DILocation(line: 5256, column: 13, scope: !1982)
!16653 = !DILocation(line: 5257, column: 3, scope: !1982)
!16654 = !DILocation(line: 5258, column: 10, scope: !16655)
!16655 = distinct !DILexicalBlock(scope: !16656, file: !162, line: 5258, column: 9)
!16656 = distinct !DILexicalBlock(scope: !16657, file: !162, line: 5257, column: 16)
!16657 = distinct !DILexicalBlock(scope: !16658, file: !162, line: 5257, column: 3)
!16658 = distinct !DILexicalBlock(scope: !1982, file: !162, line: 5257, column: 3)
!16659 = !DILocation(line: 5258, column: 9, scope: !16655)
!16660 = !DILocation(line: 5258, column: 12, scope: !16655)
!16661 = !DILocation(line: 5258, column: 9, scope: !16656)
!16662 = !DILocation(line: 5259, column: 7, scope: !16655)
!16663 = !DILocation(line: 5260, column: 10, scope: !16664)
!16664 = distinct !DILexicalBlock(scope: !16656, file: !162, line: 5260, column: 9)
!16665 = !DILocation(line: 5260, column: 9, scope: !16664)
!16666 = !DILocation(line: 5260, column: 12, scope: !16664)
!16667 = !DILocation(line: 5260, column: 9, scope: !16656)
!16668 = !DILocation(line: 5261, column: 7, scope: !16664)
!16669 = !DILocation(line: 5262, column: 3, scope: !16656)
!16670 = !DILocation(line: 5257, column: 12, scope: !16657)
!16671 = !DILocation(line: 5257, column: 3, scope: !16657)
!16672 = !DILocation(line: 5263, column: 7, scope: !1982)
!16673 = !DILocation(line: 5263, column: 5, scope: !1982)
!16674 = !DILocation(line: 5264, column: 3, scope: !1982)
!16675 = !DILocation(line: 5265, column: 10, scope: !16676)
!16676 = distinct !DILexicalBlock(scope: !16677, file: !162, line: 5265, column: 9)
!16677 = distinct !DILexicalBlock(scope: !1982, file: !162, line: 5264, column: 6)
!16678 = !DILocation(line: 5265, column: 9, scope: !16676)
!16679 = !DILocation(line: 5265, column: 12, scope: !16676)
!16680 = !DILocation(line: 5265, column: 9, scope: !16677)
!16681 = !DILocation(line: 5266, column: 9, scope: !16682)
!16682 = distinct !DILexicalBlock(scope: !16676, file: !162, line: 5265, column: 20)
!16683 = !DILocation(line: 5266, column: 12, scope: !16682)
!16684 = !DILocation(line: 5267, column: 12, scope: !16685)
!16685 = distinct !DILexicalBlock(scope: !16682, file: !162, line: 5267, column: 11)
!16686 = !DILocation(line: 5267, column: 11, scope: !16685)
!16687 = !DILocation(line: 5267, column: 16, scope: !16685)
!16688 = !DILocation(line: 5267, column: 11, scope: !16682)
!16689 = !DILocation(line: 5268, column: 10, scope: !16685)
!16690 = !DILocation(line: 5268, column: 9, scope: !16685)
!16691 = !DILocation(line: 5269, column: 5, scope: !16682)
!16692 = !DILocation(line: 5271, column: 16, scope: !16676)
!16693 = !DILocation(line: 5271, column: 14, scope: !16676)
!16694 = !DILocation(line: 5271, column: 9, scope: !16676)
!16695 = !DILocation(line: 5271, column: 12, scope: !16676)
!16696 = !DILocation(line: 5272, column: 3, scope: !16677)
!16697 = !DILocation(line: 5272, column: 13, scope: !16698)
!16698 = !DILexicalBlockFile(scope: !1982, file: !162, discriminator: 1)
!16699 = !DILocation(line: 5272, column: 12, scope: !1982)
!16700 = !DILocation(line: 5273, column: 4, scope: !1982)
!16701 = !DILocation(line: 5273, column: 6, scope: !1982)
!16702 = !DILocation(line: 5274, column: 1, scope: !1982)
!16703 = !DILocation(line: 5274, column: 1, scope: !16698)
!16704 = !DILocation(line: 696, column: 3, scope: !2006)
!16705 = !DILocation(line: 696, column: 16, scope: !2006)
!16706 = !DILocation(line: 696, column: 23, scope: !2006)
!16707 = !DILocation(line: 696, column: 40, scope: !2006)
!16708 = !DILocation(line: 697, column: 9, scope: !2006)
!16709 = !DILocation(line: 697, column: 3, scope: !2006)
!16710 = !DILocation(line: 698, column: 10, scope: !2006)
!16711 = !DILocation(line: 699, column: 1, scope: !2006)
!16712 = !DILocation(line: 698, column: 3, scope: !2006)
!16713 = !DILocation(line: 2128, column: 41, scope: !2018)
!16714 = !DILocation(line: 2129, column: 42, scope: !2018)
!16715 = !DILocation(line: 2130, column: 42, scope: !2018)
!16716 = !DILocation(line: 2131, column: 43, scope: !2018)
!16717 = !DILocation(line: 2133, column: 3, scope: !2018)
!16718 = !DILocation(line: 2133, column: 15, scope: !2018)
!16719 = !DILocation(line: 2133, column: 22, scope: !2018)
!16720 = !DILocation(line: 2134, column: 3, scope: !2018)
!16721 = !DILocation(line: 2134, column: 7, scope: !2018)
!16722 = !DILocation(line: 2134, column: 17, scope: !2018)
!16723 = !DILocation(line: 2134, column: 25, scope: !2018)
!16724 = !DILocation(line: 2134, column: 39, scope: !2018)
!16725 = !DILocation(line: 2134, column: 15, scope: !2018)
!16726 = !DILocation(line: 2134, column: 53, scope: !2018)
!16727 = !DILocation(line: 2134, column: 61, scope: !2018)
!16728 = !DILocation(line: 2134, column: 74, scope: !2018)
!16729 = !DILocation(line: 2134, column: 81, scope: !2018)
!16730 = !DILocation(line: 2134, column: 14, scope: !2018)
!16731 = !DILocation(line: 2135, column: 11, scope: !2018)
!16732 = !DILocation(line: 2135, column: 3, scope: !2018)
!16733 = !DILocation(line: 2142, column: 9, scope: !16734)
!16734 = distinct !DILexicalBlock(scope: !16735, file: !162, line: 2142, column: 9)
!16735 = distinct !DILexicalBlock(scope: !2018, file: !162, line: 2135, column: 16)
!16736 = !DILocation(line: 2142, column: 17, scope: !16734)
!16737 = !DILocation(line: 2142, column: 14, scope: !16734)
!16738 = !DILocation(line: 2142, column: 21, scope: !16734)
!16739 = !DILocation(line: 2142, column: 26, scope: !16740)
!16740 = !DILexicalBlockFile(scope: !16734, file: !162, discriminator: 1)
!16741 = !DILocation(line: 2142, column: 34, scope: !16734)
!16742 = !DILocation(line: 2142, column: 50, scope: !16734)
!16743 = !DILocation(line: 2142, column: 25, scope: !16734)
!16744 = !DILocation(line: 2142, column: 9, scope: !16735)
!16745 = !DILocation(line: 2143, column: 17, scope: !16746)
!16746 = distinct !DILexicalBlock(scope: !16734, file: !162, line: 2142, column: 64)
!16747 = !DILocation(line: 2143, column: 8, scope: !16746)
!16748 = !DILocation(line: 2143, column: 15, scope: !16746)
!16749 = !DILocation(line: 2144, column: 7, scope: !16746)
!16750 = !DILocation(line: 2146, column: 13, scope: !16735)
!16751 = !DILocation(line: 2146, column: 11, scope: !16735)
!16752 = !DILocation(line: 2147, column: 5, scope: !16735)
!16753 = !DILocation(line: 2149, column: 11, scope: !16754)
!16754 = distinct !DILexicalBlock(scope: !16735, file: !162, line: 2149, column: 9)
!16755 = !DILocation(line: 2149, column: 19, scope: !16754)
!16756 = !DILocation(line: 2149, column: 35, scope: !16754)
!16757 = !DILocation(line: 2149, column: 10, scope: !16754)
!16758 = !DILocation(line: 2149, column: 9, scope: !16735)
!16759 = !DILocation(line: 2150, column: 17, scope: !16760)
!16760 = distinct !DILexicalBlock(scope: !16754, file: !162, line: 2149, column: 49)
!16761 = !DILocation(line: 2150, column: 8, scope: !16760)
!16762 = !DILocation(line: 2150, column: 15, scope: !16760)
!16763 = !DILocation(line: 2151, column: 7, scope: !16760)
!16764 = !DILocation(line: 2153, column: 28, scope: !16735)
!16765 = !DILocation(line: 2153, column: 6, scope: !16735)
!16766 = !DILocation(line: 2153, column: 14, scope: !16735)
!16767 = !DILocation(line: 2153, column: 26, scope: !16735)
!16768 = !DILocation(line: 2154, column: 5, scope: !16735)
!16769 = !DILocation(line: 2156, column: 11, scope: !16770)
!16770 = distinct !DILexicalBlock(scope: !16735, file: !162, line: 2156, column: 9)
!16771 = !DILocation(line: 2156, column: 19, scope: !16770)
!16772 = !DILocation(line: 2156, column: 35, scope: !16770)
!16773 = !DILocation(line: 2156, column: 10, scope: !16770)
!16774 = !DILocation(line: 2156, column: 9, scope: !16735)
!16775 = !DILocation(line: 2157, column: 17, scope: !16776)
!16776 = distinct !DILexicalBlock(scope: !16770, file: !162, line: 2156, column: 49)
!16777 = !DILocation(line: 2157, column: 8, scope: !16776)
!16778 = !DILocation(line: 2157, column: 15, scope: !16776)
!16779 = !DILocation(line: 2158, column: 7, scope: !16776)
!16780 = !DILocation(line: 2160, column: 28, scope: !16735)
!16781 = !DILocation(line: 2160, column: 6, scope: !16735)
!16782 = !DILocation(line: 2160, column: 14, scope: !16735)
!16783 = !DILocation(line: 2160, column: 26, scope: !16735)
!16784 = !DILocation(line: 2161, column: 5, scope: !16735)
!16785 = !DILocation(line: 2163, column: 4, scope: !2018)
!16786 = !DILocation(line: 2163, column: 12, scope: !2018)
!16787 = !DILocation(line: 2163, column: 25, scope: !2018)
!16788 = !DILocation(line: 2164, column: 39, scope: !2018)
!16789 = !DILocation(line: 2164, column: 47, scope: !2018)
!16790 = !DILocation(line: 2164, column: 54, scope: !2018)
!16791 = !DILocation(line: 2164, column: 59, scope: !2018)
!16792 = !DILocation(line: 2164, column: 10, scope: !2018)
!16793 = !DILocation(line: 2164, column: 3, scope: !2018)
!16794 = !DILocation(line: 2165, column: 1, scope: !2018)
!16795 = !DILocation(line: 2168, column: 41, scope: !2026)
!16796 = !DILocation(line: 2169, column: 42, scope: !2026)
!16797 = !DILocation(line: 2170, column: 42, scope: !2026)
!16798 = !DILocation(line: 2171, column: 43, scope: !2026)
!16799 = !DILocation(line: 2173, column: 3, scope: !2026)
!16800 = !DILocation(line: 2173, column: 7, scope: !2026)
!16801 = !DILocation(line: 2174, column: 3, scope: !2026)
!16802 = !DILocation(line: 2174, column: 15, scope: !2026)
!16803 = !DILocation(line: 2174, column: 22, scope: !2026)
!16804 = !DILocation(line: 2175, column: 26, scope: !2026)
!16805 = !DILocation(line: 2175, column: 4, scope: !2026)
!16806 = !DILocation(line: 2175, column: 12, scope: !2026)
!16807 = !DILocation(line: 2175, column: 24, scope: !2026)
!16808 = !DILocation(line: 2176, column: 13, scope: !2026)
!16809 = !DILocation(line: 2176, column: 21, scope: !2026)
!16810 = !DILocation(line: 2176, column: 35, scope: !2026)
!16811 = !DILocation(line: 2176, column: 11, scope: !2026)
!16812 = !DILocation(line: 2176, column: 49, scope: !2026)
!16813 = !DILocation(line: 2176, column: 57, scope: !2026)
!16814 = !DILocation(line: 2176, column: 70, scope: !2026)
!16815 = !DILocation(line: 2176, column: 77, scope: !2026)
!16816 = !DILocation(line: 2176, column: 10, scope: !2026)
!16817 = !DILocation(line: 2176, column: 7, scope: !2026)
!16818 = !DILocation(line: 2177, column: 29, scope: !2026)
!16819 = !DILocation(line: 2177, column: 4, scope: !2026)
!16820 = !DILocation(line: 2177, column: 12, scope: !2026)
!16821 = !DILocation(line: 2177, column: 27, scope: !2026)
!16822 = !DILocation(line: 2179, column: 11, scope: !2026)
!16823 = !DILocation(line: 2179, column: 3, scope: !2026)
!16824 = !DILocation(line: 2182, column: 7, scope: !2035)
!16825 = !DILocation(line: 2182, column: 22, scope: !2035)
!16826 = !DILocation(line: 2183, column: 31, scope: !2035)
!16827 = !DILocation(line: 2183, column: 42, scope: !2035)
!16828 = !DILocation(line: 2183, column: 49, scope: !2035)
!16829 = !DILocation(line: 2183, column: 16, scope: !2035)
!16830 = !DILocation(line: 2183, column: 14, scope: !2035)
!16831 = !DILocation(line: 2184, column: 11, scope: !16832)
!16832 = distinct !DILexicalBlock(scope: !2035, file: !162, line: 2184, column: 11)
!16833 = !DILocation(line: 2184, column: 18, scope: !16832)
!16834 = !DILocation(line: 2184, column: 11, scope: !2035)
!16835 = !DILocation(line: 2185, column: 16, scope: !16832)
!16836 = !DILocation(line: 2185, column: 9, scope: !16832)
!16837 = !DILocation(line: 2186, column: 16, scope: !2035)
!16838 = !DILocation(line: 2186, column: 24, scope: !2035)
!16839 = !DILocation(line: 2186, column: 40, scope: !2035)
!16840 = !DILocation(line: 2186, column: 7, scope: !2035)
!16841 = !DILocation(line: 2188, column: 19, scope: !16842)
!16842 = distinct !DILexicalBlock(scope: !2035, file: !162, line: 2186, column: 50)
!16843 = !DILocation(line: 2188, column: 10, scope: !16842)
!16844 = !DILocation(line: 2188, column: 17, scope: !16842)
!16845 = !DILocation(line: 2189, column: 9, scope: !16842)
!16846 = !DILocation(line: 2191, column: 9, scope: !16842)
!16847 = !DILocation(line: 2193, column: 17, scope: !16842)
!16848 = !DILocation(line: 2193, column: 15, scope: !16842)
!16849 = !DILocation(line: 2194, column: 7, scope: !16842)
!16850 = !DILocation(line: 2195, column: 5, scope: !2036)
!16851 = !DILocation(line: 2195, column: 5, scope: !16852)
!16852 = !DILexicalBlockFile(scope: !2036, file: !162, discriminator: 1)
!16853 = !DILocation(line: 2196, column: 5, scope: !2036)
!16854 = !DILocation(line: 2198, column: 11, scope: !16855)
!16855 = distinct !DILexicalBlock(scope: !2036, file: !162, line: 2198, column: 9)
!16856 = !DILocation(line: 2198, column: 19, scope: !16855)
!16857 = !DILocation(line: 2198, column: 35, scope: !16855)
!16858 = !DILocation(line: 2198, column: 10, scope: !16855)
!16859 = !DILocation(line: 2198, column: 9, scope: !2036)
!16860 = !DILocation(line: 2199, column: 17, scope: !16861)
!16861 = distinct !DILexicalBlock(scope: !16855, file: !162, line: 2198, column: 49)
!16862 = !DILocation(line: 2199, column: 8, scope: !16861)
!16863 = !DILocation(line: 2199, column: 15, scope: !16861)
!16864 = !DILocation(line: 2200, column: 7, scope: !16861)
!16865 = !DILocation(line: 2202, column: 5, scope: !2036)
!16866 = !DILocation(line: 2204, column: 11, scope: !16867)
!16867 = distinct !DILexicalBlock(scope: !2036, file: !162, line: 2204, column: 9)
!16868 = !DILocation(line: 2204, column: 19, scope: !16867)
!16869 = !DILocation(line: 2204, column: 35, scope: !16867)
!16870 = !DILocation(line: 2204, column: 10, scope: !16867)
!16871 = !DILocation(line: 2204, column: 9, scope: !2036)
!16872 = !DILocation(line: 2205, column: 17, scope: !16873)
!16873 = distinct !DILexicalBlock(scope: !16867, file: !162, line: 2204, column: 49)
!16874 = !DILocation(line: 2205, column: 8, scope: !16873)
!16875 = !DILocation(line: 2205, column: 15, scope: !16873)
!16876 = !DILocation(line: 2206, column: 7, scope: !16873)
!16877 = !DILocation(line: 2208, column: 5, scope: !2036)
!16878 = !DILocation(line: 2210, column: 4, scope: !2026)
!16879 = !DILocation(line: 2210, column: 12, scope: !2026)
!16880 = !DILocation(line: 2210, column: 25, scope: !2026)
!16881 = !DILocation(line: 2211, column: 4, scope: !2026)
!16882 = !DILocation(line: 2211, column: 12, scope: !2026)
!16883 = !DILocation(line: 2211, column: 24, scope: !2026)
!16884 = !DILocation(line: 2212, column: 41, scope: !2026)
!16885 = !DILocation(line: 2212, column: 49, scope: !2026)
!16886 = !DILocation(line: 2212, column: 56, scope: !2026)
!16887 = !DILocation(line: 2212, column: 61, scope: !2026)
!16888 = !DILocation(line: 2212, column: 10, scope: !2026)
!16889 = !DILocation(line: 2212, column: 3, scope: !2026)
!16890 = !DILocation(line: 2213, column: 1, scope: !2026)
!16891 = !DILocation(line: 3586, column: 37, scope: !2044)
!16892 = !DILocation(line: 3587, column: 38, scope: !2044)
!16893 = !DILocation(line: 3588, column: 38, scope: !2044)
!16894 = !DILocation(line: 3589, column: 39, scope: !2044)
!16895 = !DILocation(line: 3591, column: 3, scope: !2044)
!16896 = !DILocation(line: 3591, column: 7, scope: !2044)
!16897 = !DILocation(line: 3592, column: 3, scope: !2044)
!16898 = !DILocation(line: 3592, column: 15, scope: !2044)
!16899 = !DILocation(line: 3592, column: 23, scope: !2044)
!16900 = !DILocation(line: 3593, column: 3, scope: !2044)
!16901 = !DILocation(line: 3593, column: 15, scope: !2044)
!16902 = !DILocation(line: 3593, column: 22, scope: !2044)
!16903 = !DILocation(line: 3594, column: 26, scope: !2044)
!16904 = !DILocation(line: 3594, column: 4, scope: !2044)
!16905 = !DILocation(line: 3594, column: 12, scope: !2044)
!16906 = !DILocation(line: 3594, column: 24, scope: !2044)
!16907 = !DILocation(line: 3596, column: 3, scope: !2044)
!16908 = !DILocation(line: 3597, column: 15, scope: !2057)
!16909 = !DILocation(line: 3597, column: 23, scope: !2057)
!16910 = !DILocation(line: 3597, column: 37, scope: !2057)
!16911 = !DILocation(line: 3597, column: 13, scope: !2057)
!16912 = !DILocation(line: 3597, column: 51, scope: !2057)
!16913 = !DILocation(line: 3597, column: 59, scope: !2057)
!16914 = !DILocation(line: 3597, column: 72, scope: !2057)
!16915 = !DILocation(line: 3597, column: 79, scope: !2057)
!16916 = !DILocation(line: 3597, column: 12, scope: !2057)
!16917 = !DILocation(line: 3597, column: 9, scope: !2057)
!16918 = !DILocation(line: 3598, column: 31, scope: !2057)
!16919 = !DILocation(line: 3598, column: 6, scope: !2057)
!16920 = !DILocation(line: 3598, column: 14, scope: !2057)
!16921 = !DILocation(line: 3598, column: 29, scope: !2057)
!16922 = !DILocation(line: 3599, column: 9, scope: !2056)
!16923 = !DILocation(line: 3599, column: 13, scope: !2056)
!16924 = !DILocation(line: 3599, column: 9, scope: !2057)
!16925 = !DILocation(line: 3600, column: 13, scope: !16926)
!16926 = distinct !DILexicalBlock(scope: !16927, file: !162, line: 3600, column: 11)
!16927 = distinct !DILexicalBlock(scope: !2056, file: !162, line: 3599, column: 19)
!16928 = !DILocation(line: 3600, column: 21, scope: !16926)
!16929 = !DILocation(line: 3600, column: 37, scope: !16926)
!16930 = !DILocation(line: 3600, column: 12, scope: !16926)
!16931 = !DILocation(line: 3600, column: 50, scope: !16926)
!16932 = !DILocation(line: 3600, column: 53, scope: !16933)
!16933 = !DILexicalBlockFile(scope: !16926, file: !162, discriminator: 1)
!16934 = !DILocation(line: 3600, column: 57, scope: !16926)
!16935 = !DILocation(line: 3600, column: 11, scope: !16927)
!16936 = !DILocation(line: 3601, column: 20, scope: !16937)
!16937 = distinct !DILexicalBlock(scope: !16926, file: !162, line: 3600, column: 63)
!16938 = !DILocation(line: 3601, column: 10, scope: !16937)
!16939 = !DILocation(line: 3601, column: 18, scope: !16937)
!16940 = !DILocation(line: 3602, column: 9, scope: !16937)
!16941 = !DILocation(line: 3604, column: 15, scope: !16927)
!16942 = !DILocation(line: 3604, column: 7, scope: !16927)
!16943 = !DILocation(line: 3606, column: 9, scope: !16944)
!16944 = distinct !DILexicalBlock(scope: !16927, file: !162, line: 3604, column: 20)
!16945 = !DILocation(line: 3608, column: 9, scope: !16944)
!16946 = !DILocation(line: 3610, column: 9, scope: !16944)
!16947 = !DILocation(line: 3613, column: 9, scope: !16944)
!16948 = !DILocation(line: 3616, column: 31, scope: !16927)
!16949 = !DILocation(line: 3616, column: 40, scope: !16927)
!16950 = !DILocation(line: 3616, column: 48, scope: !16927)
!16951 = !DILocation(line: 3616, column: 61, scope: !16927)
!16952 = !DILocation(line: 3616, column: 64, scope: !16927)
!16953 = !DILocation(line: 3616, column: 14, scope: !16927)
!16954 = !DILocation(line: 3616, column: 7, scope: !16927)
!16955 = !DILocation(line: 3618, column: 14, scope: !2055)
!16956 = !DILocation(line: 3618, column: 18, scope: !2055)
!16957 = !DILocation(line: 3618, column: 14, scope: !2056)
!16958 = !DILocation(line: 3619, column: 7, scope: !2054)
!16959 = !DILocation(line: 3619, column: 22, scope: !2054)
!16960 = !DILocation(line: 3620, column: 31, scope: !2054)
!16961 = !DILocation(line: 3620, column: 42, scope: !2054)
!16962 = !DILocation(line: 3620, column: 49, scope: !2054)
!16963 = !DILocation(line: 3620, column: 16, scope: !2054)
!16964 = !DILocation(line: 3620, column: 14, scope: !2054)
!16965 = !DILocation(line: 3621, column: 11, scope: !16966)
!16966 = distinct !DILexicalBlock(scope: !2054, file: !162, line: 3621, column: 11)
!16967 = !DILocation(line: 3621, column: 18, scope: !16966)
!16968 = !DILocation(line: 3621, column: 11, scope: !2054)
!16969 = !DILocation(line: 3622, column: 16, scope: !16966)
!16970 = !DILocation(line: 3622, column: 9, scope: !16966)
!16971 = !DILocation(line: 3623, column: 16, scope: !2054)
!16972 = !DILocation(line: 3623, column: 24, scope: !2054)
!16973 = !DILocation(line: 3623, column: 40, scope: !2054)
!16974 = !DILocation(line: 3623, column: 7, scope: !2054)
!16975 = !DILocation(line: 3625, column: 20, scope: !16976)
!16976 = distinct !DILexicalBlock(scope: !2054, file: !162, line: 3623, column: 50)
!16977 = !DILocation(line: 3625, column: 10, scope: !16976)
!16978 = !DILocation(line: 3625, column: 18, scope: !16976)
!16979 = !DILocation(line: 3626, column: 9, scope: !16976)
!16980 = !DILocation(line: 3628, column: 9, scope: !16976)
!16981 = !DILocation(line: 3630, column: 20, scope: !16976)
!16982 = !DILocation(line: 3630, column: 10, scope: !16976)
!16983 = !DILocation(line: 3630, column: 18, scope: !16976)
!16984 = !DILocation(line: 3631, column: 7, scope: !16976)
!16985 = !DILocation(line: 3633, column: 8, scope: !2054)
!16986 = !DILocation(line: 3633, column: 16, scope: !2054)
!16987 = !DILocation(line: 3633, column: 29, scope: !2054)
!16988 = !DILocation(line: 3634, column: 35, scope: !2054)
!16989 = !DILocation(line: 3634, column: 43, scope: !2054)
!16990 = !DILocation(line: 3634, column: 49, scope: !2054)
!16991 = !DILocation(line: 3634, column: 54, scope: !2054)
!16992 = !DILocation(line: 3634, column: 14, scope: !2054)
!16993 = !DILocation(line: 3634, column: 7, scope: !2054)
!16994 = !DILocation(line: 3635, column: 5, scope: !2055)
!16995 = !DILocation(line: 3643, column: 14, scope: !16996)
!16996 = distinct !DILexicalBlock(scope: !2055, file: !162, line: 3643, column: 14)
!16997 = !DILocation(line: 3643, column: 18, scope: !16996)
!16998 = !DILocation(line: 3643, column: 24, scope: !16996)
!16999 = !DILocation(line: 3643, column: 27, scope: !17000)
!17000 = !DILexicalBlockFile(scope: !16996, file: !162, discriminator: 1)
!17001 = !DILocation(line: 3643, column: 35, scope: !16996)
!17002 = !DILocation(line: 3643, column: 32, scope: !16996)
!17003 = !DILocation(line: 3643, column: 39, scope: !16996)
!17004 = !DILocation(line: 3643, column: 44, scope: !17005)
!17005 = !DILexicalBlockFile(scope: !16996, file: !162, discriminator: 2)
!17006 = !DILocation(line: 3643, column: 52, scope: !16996)
!17007 = !DILocation(line: 3643, column: 68, scope: !16996)
!17008 = !DILocation(line: 3643, column: 43, scope: !16996)
!17009 = !DILocation(line: 3643, column: 14, scope: !2055)
!17010 = !DILocation(line: 3644, column: 18, scope: !17011)
!17011 = distinct !DILexicalBlock(scope: !16996, file: !162, line: 3643, column: 82)
!17012 = !DILocation(line: 3644, column: 8, scope: !17011)
!17013 = !DILocation(line: 3644, column: 16, scope: !17011)
!17014 = !DILocation(line: 3645, column: 7, scope: !17011)
!17015 = !DILocation(line: 3647, column: 13, scope: !2057)
!17016 = !DILocation(line: 3647, column: 11, scope: !2057)
!17017 = !DILocation(line: 3648, column: 28, scope: !2057)
!17018 = !DILocation(line: 3648, column: 6, scope: !2057)
!17019 = !DILocation(line: 3648, column: 14, scope: !2057)
!17020 = !DILocation(line: 3648, column: 26, scope: !2057)
!17021 = !DILocation(line: 3596, column: 3, scope: !2058)
!17022 = !DILocation(line: 3650, column: 1, scope: !2044)
!17023 = !DILocation(line: 3653, column: 36, scope: !2070)
!17024 = !DILocation(line: 3654, column: 37, scope: !2070)
!17025 = !DILocation(line: 3655, column: 37, scope: !2070)
!17026 = !DILocation(line: 3656, column: 38, scope: !2070)
!17027 = !DILocation(line: 3658, column: 3, scope: !2070)
!17028 = !DILocation(line: 3658, column: 15, scope: !2070)
!17029 = !DILocation(line: 3658, column: 22, scope: !2070)
!17030 = !DILocation(line: 3659, column: 3, scope: !2070)
!17031 = !DILocation(line: 3659, column: 7, scope: !2070)
!17032 = !DILocation(line: 3661, column: 13, scope: !2070)
!17033 = !DILocation(line: 3661, column: 21, scope: !2070)
!17034 = !DILocation(line: 3661, column: 35, scope: !2070)
!17035 = !DILocation(line: 3661, column: 11, scope: !2070)
!17036 = !DILocation(line: 3661, column: 49, scope: !2070)
!17037 = !DILocation(line: 3661, column: 57, scope: !2070)
!17038 = !DILocation(line: 3661, column: 70, scope: !2070)
!17039 = !DILocation(line: 3661, column: 73, scope: !2070)
!17040 = !DILocation(line: 3661, column: 10, scope: !2070)
!17041 = !DILocation(line: 3661, column: 7, scope: !2070)
!17042 = !DILocation(line: 3662, column: 7, scope: !17043)
!17043 = distinct !DILexicalBlock(scope: !2070, file: !162, line: 3662, column: 7)
!17044 = !DILocation(line: 3662, column: 11, scope: !17043)
!17045 = !DILocation(line: 3662, column: 7, scope: !2070)
!17046 = !DILocation(line: 3663, column: 11, scope: !17047)
!17047 = distinct !DILexicalBlock(scope: !17048, file: !162, line: 3663, column: 9)
!17048 = distinct !DILexicalBlock(scope: !17043, file: !162, line: 3662, column: 17)
!17049 = !DILocation(line: 3663, column: 19, scope: !17047)
!17050 = !DILocation(line: 3663, column: 35, scope: !17047)
!17051 = !DILocation(line: 3663, column: 10, scope: !17047)
!17052 = !DILocation(line: 3663, column: 48, scope: !17047)
!17053 = !DILocation(line: 3663, column: 51, scope: !17054)
!17054 = !DILexicalBlockFile(scope: !17047, file: !162, discriminator: 1)
!17055 = !DILocation(line: 3663, column: 55, scope: !17047)
!17056 = !DILocation(line: 3663, column: 9, scope: !17048)
!17057 = !DILocation(line: 3664, column: 18, scope: !17058)
!17058 = distinct !DILexicalBlock(scope: !17047, file: !162, line: 3663, column: 61)
!17059 = !DILocation(line: 3664, column: 8, scope: !17058)
!17060 = !DILocation(line: 3664, column: 16, scope: !17058)
!17061 = !DILocation(line: 3665, column: 7, scope: !17058)
!17062 = !DILocation(line: 3667, column: 13, scope: !17048)
!17063 = !DILocation(line: 3667, column: 5, scope: !17048)
!17064 = !DILocation(line: 3669, column: 7, scope: !17065)
!17065 = distinct !DILexicalBlock(scope: !17048, file: !162, line: 3667, column: 18)
!17066 = !DILocation(line: 3671, column: 7, scope: !17065)
!17067 = !DILocation(line: 3673, column: 7, scope: !17065)
!17068 = !DILocation(line: 3676, column: 7, scope: !17065)
!17069 = !DILocation(line: 3678, column: 3, scope: !17048)
!17070 = !DILocation(line: 3683, column: 12, scope: !17071)
!17071 = distinct !DILexicalBlock(scope: !17043, file: !162, line: 3683, column: 12)
!17072 = !DILocation(line: 3683, column: 16, scope: !17071)
!17073 = !DILocation(line: 3683, column: 12, scope: !17043)
!17074 = !DILocation(line: 3684, column: 9, scope: !17075)
!17075 = distinct !DILexicalBlock(scope: !17071, file: !162, line: 3683, column: 23)
!17076 = !DILocation(line: 3684, column: 7, scope: !17075)
!17077 = !DILocation(line: 3685, column: 15, scope: !17075)
!17078 = !DILocation(line: 3685, column: 23, scope: !17075)
!17079 = !DILocation(line: 3685, column: 37, scope: !17075)
!17080 = !DILocation(line: 3685, column: 13, scope: !17075)
!17081 = !DILocation(line: 3685, column: 51, scope: !17075)
!17082 = !DILocation(line: 3685, column: 59, scope: !17075)
!17083 = !DILocation(line: 3685, column: 72, scope: !17075)
!17084 = !DILocation(line: 3685, column: 75, scope: !17075)
!17085 = !DILocation(line: 3685, column: 12, scope: !17075)
!17086 = !DILocation(line: 3685, column: 9, scope: !17075)
!17087 = !DILocation(line: 3686, column: 3, scope: !17075)
!17088 = !DILocation(line: 3688, column: 4, scope: !2070)
!17089 = !DILocation(line: 3688, column: 12, scope: !2070)
!17090 = !DILocation(line: 3688, column: 25, scope: !2070)
!17091 = !DILocation(line: 3689, column: 19, scope: !2070)
!17092 = !DILocation(line: 3689, column: 28, scope: !2070)
!17093 = !DILocation(line: 3689, column: 36, scope: !2070)
!17094 = !DILocation(line: 3689, column: 49, scope: !2070)
!17095 = !DILocation(line: 3689, column: 52, scope: !2070)
!17096 = !DILocation(line: 3689, column: 57, scope: !2070)
!17097 = !DILocation(line: 3689, column: 62, scope: !2070)
!17098 = !DILocation(line: 3690, column: 19, scope: !2070)
!17099 = !DILocation(line: 3690, column: 40, scope: !2070)
!17100 = !DILocation(line: 3690, column: 48, scope: !2070)
!17101 = !DILocation(line: 3690, column: 64, scope: !2070)
!17102 = !DILocation(line: 3690, column: 38, scope: !2070)
!17103 = !DILocation(line: 3690, column: 28, scope: !2070)
!17104 = !DILocation(line: 3689, column: 10, scope: !2070)
!17105 = !DILocation(line: 3689, column: 3, scope: !2070)
!17106 = !DILocation(line: 3691, column: 1, scope: !2070)
!17107 = !DILocation(line: 3694, column: 33, scope: !2060)
!17108 = !DILocation(line: 3695, column: 34, scope: !2060)
!17109 = !DILocation(line: 3696, column: 34, scope: !2060)
!17110 = !DILocation(line: 3697, column: 35, scope: !2060)
!17111 = !DILocation(line: 3699, column: 3, scope: !2060)
!17112 = !DILocation(line: 3699, column: 15, scope: !2060)
!17113 = !DILocation(line: 3699, column: 23, scope: !2060)
!17114 = !DILocation(line: 3700, column: 3, scope: !2060)
!17115 = !DILocation(line: 3700, column: 15, scope: !2060)
!17116 = !DILocation(line: 3700, column: 22, scope: !2060)
!17117 = !DILocation(line: 3701, column: 3, scope: !2060)
!17118 = !DILocation(line: 3701, column: 19, scope: !2060)
!17119 = !DILocation(line: 3701, column: 26, scope: !2060)
!17120 = !DILocation(line: 3701, column: 34, scope: !2060)
!17121 = !DILocation(line: 3702, column: 3, scope: !2060)
!17122 = !DILocation(line: 3702, column: 7, scope: !2060)
!17123 = !DILocation(line: 3704, column: 3, scope: !2060)
!17124 = !DILocation(line: 3705, column: 14, scope: !17125)
!17125 = distinct !DILexicalBlock(scope: !17126, file: !162, line: 3704, column: 12)
!17126 = distinct !DILexicalBlock(scope: !17127, file: !162, line: 3704, column: 3)
!17127 = distinct !DILexicalBlock(scope: !2060, file: !162, line: 3704, column: 3)
!17128 = !DILocation(line: 3705, column: 20, scope: !17125)
!17129 = !DILocation(line: 3705, column: 13, scope: !17125)
!17130 = !DILocation(line: 3705, column: 33, scope: !17125)
!17131 = !DILocation(line: 3705, column: 38, scope: !17125)
!17132 = !DILocation(line: 3705, column: 45, scope: !17125)
!17133 = !DILocation(line: 3705, column: 12, scope: !17125)
!17134 = !DILocation(line: 3705, column: 9, scope: !17125)
!17135 = !DILocation(line: 3706, column: 9, scope: !17136)
!17136 = distinct !DILexicalBlock(scope: !17125, file: !162, line: 3706, column: 9)
!17137 = !DILocation(line: 3706, column: 13, scope: !17136)
!17138 = !DILocation(line: 3706, column: 9, scope: !17125)
!17139 = !DILocation(line: 3707, column: 13, scope: !17140)
!17140 = distinct !DILexicalBlock(scope: !17141, file: !162, line: 3707, column: 11)
!17141 = distinct !DILexicalBlock(scope: !17136, file: !162, line: 3706, column: 19)
!17142 = !DILocation(line: 3707, column: 21, scope: !17140)
!17143 = !DILocation(line: 3707, column: 37, scope: !17140)
!17144 = !DILocation(line: 3707, column: 12, scope: !17140)
!17145 = !DILocation(line: 3707, column: 50, scope: !17140)
!17146 = !DILocation(line: 3707, column: 53, scope: !17147)
!17147 = !DILexicalBlockFile(scope: !17140, file: !162, discriminator: 1)
!17148 = !DILocation(line: 3707, column: 57, scope: !17140)
!17149 = !DILocation(line: 3707, column: 11, scope: !17141)
!17150 = !DILocation(line: 3708, column: 20, scope: !17151)
!17151 = distinct !DILexicalBlock(scope: !17140, file: !162, line: 3707, column: 63)
!17152 = !DILocation(line: 3708, column: 10, scope: !17151)
!17153 = !DILocation(line: 3708, column: 18, scope: !17151)
!17154 = !DILocation(line: 3709, column: 9, scope: !17151)
!17155 = !DILocation(line: 3711, column: 15, scope: !17141)
!17156 = !DILocation(line: 3711, column: 7, scope: !17141)
!17157 = !DILocation(line: 3713, column: 9, scope: !17158)
!17158 = distinct !DILexicalBlock(scope: !17141, file: !162, line: 3711, column: 20)
!17159 = !DILocation(line: 3715, column: 9, scope: !17158)
!17160 = !DILocation(line: 3717, column: 9, scope: !17158)
!17161 = !DILocation(line: 3720, column: 9, scope: !17158)
!17162 = !DILocation(line: 3723, column: 31, scope: !17141)
!17163 = !DILocation(line: 3723, column: 39, scope: !17141)
!17164 = !DILocation(line: 3723, column: 44, scope: !17141)
!17165 = !DILocation(line: 3723, column: 47, scope: !17141)
!17166 = !DILocation(line: 3723, column: 14, scope: !17141)
!17167 = !DILocation(line: 3723, column: 7, scope: !17141)
!17168 = !DILocation(line: 3725, column: 13, scope: !17125)
!17169 = !DILocation(line: 3725, column: 11, scope: !17125)
!17170 = !DILocation(line: 3704, column: 3, scope: !17126)
!17171 = !DILocation(line: 3727, column: 1, scope: !2060)
!17172 = !DILocation(line: 6049, column: 28, scope: !2122)
!17173 = !DILocation(line: 6051, column: 3, scope: !2122)
!17174 = !DILocation(line: 6051, column: 10, scope: !2122)
!17175 = !DILocation(line: 6052, column: 10, scope: !17176)
!17176 = distinct !DILexicalBlock(scope: !2122, file: !162, line: 6052, column: 3)
!17177 = !DILocation(line: 6052, column: 8, scope: !17176)
!17178 = !DILocation(line: 6052, column: 15, scope: !17179)
!17179 = !DILexicalBlockFile(scope: !17180, file: !162, discriminator: 2)
!17180 = !DILexicalBlockFile(scope: !17181, file: !162, discriminator: 1)
!17181 = distinct !DILexicalBlock(scope: !17176, file: !162, line: 6052, column: 3)
!17182 = !DILocation(line: 6052, column: 19, scope: !17181)
!17183 = !DILocation(line: 6052, column: 26, scope: !17181)
!17184 = !DILocation(line: 6052, column: 17, scope: !17181)
!17185 = !DILocation(line: 6052, column: 3, scope: !17176)
!17186 = !DILocation(line: 6053, column: 5, scope: !17187)
!17187 = distinct !DILexicalBlock(scope: !17181, file: !162, line: 6052, column: 37)
!17188 = !DILocation(line: 6053, column: 12, scope: !17187)
!17189 = !DILocation(line: 6053, column: 17, scope: !17187)
!17190 = !DILocation(line: 6053, column: 35, scope: !17187)
!17191 = !DILocation(line: 6053, column: 26, scope: !17187)
!17192 = !DILocation(line: 6053, column: 33, scope: !17187)
!17193 = !DILocation(line: 6054, column: 14, scope: !17187)
!17194 = !DILocation(line: 6054, column: 5, scope: !17187)
!17195 = !DILocation(line: 6054, column: 12, scope: !17187)
!17196 = !DILocation(line: 6054, column: 17, scope: !17187)
!17197 = !DILocation(line: 6055, column: 3, scope: !17187)
!17198 = !DILocation(line: 6052, column: 33, scope: !17181)
!17199 = !DILocation(line: 6052, column: 3, scope: !17181)
!17200 = !DILocation(line: 6056, column: 3, scope: !2122)
!17201 = !DILocation(line: 6056, column: 10, scope: !2122)
!17202 = !DILocation(line: 6056, column: 15, scope: !2122)
!17203 = !DILocation(line: 6057, column: 1, scope: !2122)
!17204 = !DILocation(line: 6060, column: 30, scope: !2140)
!17205 = !DILocation(line: 6062, column: 3, scope: !2140)
!17206 = !DILocation(line: 6062, column: 10, scope: !2140)
!17207 = !DILocation(line: 6063, column: 10, scope: !17208)
!17208 = distinct !DILexicalBlock(scope: !2140, file: !162, line: 6063, column: 3)
!17209 = !DILocation(line: 6063, column: 8, scope: !17208)
!17210 = !DILocation(line: 6063, column: 15, scope: !17211)
!17211 = !DILexicalBlockFile(scope: !17212, file: !162, discriminator: 2)
!17212 = !DILexicalBlockFile(scope: !17213, file: !162, discriminator: 1)
!17213 = distinct !DILexicalBlock(scope: !17208, file: !162, line: 6063, column: 3)
!17214 = !DILocation(line: 6063, column: 19, scope: !17213)
!17215 = !DILocation(line: 6063, column: 26, scope: !17213)
!17216 = !DILocation(line: 6063, column: 17, scope: !17213)
!17217 = !DILocation(line: 6063, column: 3, scope: !17208)
!17218 = !DILocation(line: 6064, column: 5, scope: !17213)
!17219 = !DILocation(line: 6064, column: 12, scope: !17213)
!17220 = !DILocation(line: 6064, column: 17, scope: !17213)
!17221 = !DILocation(line: 6064, column: 35, scope: !17213)
!17222 = !DILocation(line: 6064, column: 26, scope: !17213)
!17223 = !DILocation(line: 6064, column: 33, scope: !17213)
!17224 = !DILocation(line: 6063, column: 33, scope: !17213)
!17225 = !DILocation(line: 6063, column: 3, scope: !17213)
!17226 = !DILocation(line: 6065, column: 3, scope: !2140)
!17227 = !DILocation(line: 6065, column: 10, scope: !2140)
!17228 = !DILocation(line: 6065, column: 15, scope: !2140)
!17229 = !DILocation(line: 6065, column: 24, scope: !2140)
!17230 = !DILocation(line: 6065, column: 31, scope: !2140)
!17231 = !DILocation(line: 6066, column: 1, scope: !2140)
!17232 = !DILocation(line: 5883, column: 28, scope: !2177)
!17233 = !DILocation(line: 5884, column: 29, scope: !2177)
!17234 = !DILocation(line: 5885, column: 30, scope: !2177)
!17235 = !DILocation(line: 5886, column: 35, scope: !2177)
!17236 = !DILocation(line: 5888, column: 3, scope: !2177)
!17237 = !DILocation(line: 5888, column: 19, scope: !2177)
!17238 = !DILocation(line: 5889, column: 3, scope: !2177)
!17239 = !DILocation(line: 5889, column: 19, scope: !2177)
!17240 = !DILocation(line: 5890, column: 3, scope: !2177)
!17241 = !DILocation(line: 5890, column: 19, scope: !2177)
!17242 = !DILocation(line: 5892, column: 28, scope: !2177)
!17243 = !DILocation(line: 5892, column: 3, scope: !2177)
!17244 = !DILocation(line: 5894, column: 3, scope: !2177)
!17245 = !DILocation(line: 5895, column: 5, scope: !2189)
!17246 = !DILocation(line: 5895, column: 13, scope: !2189)
!17247 = !DILocation(line: 5896, column: 5, scope: !2189)
!17248 = !DILocation(line: 5896, column: 21, scope: !2189)
!17249 = !DILocation(line: 5897, column: 5, scope: !2189)
!17250 = !DILocation(line: 5897, column: 19, scope: !2189)
!17251 = !DILocation(line: 5897, column: 36, scope: !2189)
!17252 = !DILocation(line: 5897, column: 26, scope: !2189)
!17253 = !DILocation(line: 5898, column: 10, scope: !17254)
!17254 = distinct !DILexicalBlock(scope: !2189, file: !162, line: 5898, column: 9)
!17255 = !DILocation(line: 5898, column: 9, scope: !2189)
!17256 = !DILocation(line: 5899, column: 7, scope: !17254)
!17257 = !DILocation(line: 5900, column: 27, scope: !2189)
!17258 = !DILocation(line: 5900, column: 36, scope: !2189)
!17259 = !DILocation(line: 5900, column: 42, scope: !2189)
!17260 = !DILocation(line: 5900, column: 12, scope: !2189)
!17261 = !DILocation(line: 5900, column: 10, scope: !2189)
!17262 = !DILocation(line: 5901, column: 10, scope: !17263)
!17263 = distinct !DILexicalBlock(scope: !2189, file: !162, line: 5901, column: 9)
!17264 = !DILocation(line: 5901, column: 9, scope: !2189)
!17265 = !DILocation(line: 5902, column: 7, scope: !17263)
!17266 = !DILocation(line: 5903, column: 29, scope: !2189)
!17267 = !DILocation(line: 5903, column: 40, scope: !2189)
!17268 = !DILocation(line: 5903, column: 50, scope: !2189)
!17269 = !DILocation(line: 5903, column: 22, scope: !2189)
!17270 = !DILocation(line: 5903, column: 12, scope: !2189)
!17271 = !DILocation(line: 5903, column: 10, scope: !2189)
!17272 = !DILocation(line: 5904, column: 10, scope: !17273)
!17273 = distinct !DILexicalBlock(scope: !2189, file: !162, line: 5904, column: 9)
!17274 = !DILocation(line: 5904, column: 9, scope: !2189)
!17275 = !DILocation(line: 5905, column: 7, scope: !17273)
!17276 = !DILocation(line: 5906, column: 9, scope: !2198)
!17277 = !DILocation(line: 5906, column: 15, scope: !2198)
!17278 = !DILocation(line: 5906, column: 9, scope: !2189)
!17279 = !DILocation(line: 5907, column: 7, scope: !2197)
!17280 = !DILocation(line: 5907, column: 23, scope: !2197)
!17281 = !DILocation(line: 5907, column: 44, scope: !2197)
!17282 = !DILocation(line: 5907, column: 53, scope: !2197)
!17283 = !DILocation(line: 5907, column: 59, scope: !2197)
!17284 = !DILocation(line: 5907, column: 29, scope: !2197)
!17285 = !DILocation(line: 5908, column: 12, scope: !17286)
!17286 = distinct !DILexicalBlock(scope: !2197, file: !162, line: 5908, column: 11)
!17287 = !DILocation(line: 5908, column: 11, scope: !2197)
!17288 = !DILocation(line: 5909, column: 9, scope: !17286)
!17289 = !DILocation(line: 5910, column: 24, scope: !2197)
!17290 = !DILocation(line: 5910, column: 7, scope: !2197)
!17291 = !DILocation(line: 5910, column: 13, scope: !2197)
!17292 = !DILocation(line: 5910, column: 22, scope: !2197)
!17293 = !DILocation(line: 5911, column: 11, scope: !17294)
!17294 = distinct !DILexicalBlock(scope: !2197, file: !162, line: 5911, column: 11)
!17295 = !DILocation(line: 5911, column: 17, scope: !17294)
!17296 = !DILocation(line: 5911, column: 11, scope: !2197)
!17297 = !DILocation(line: 5912, column: 13, scope: !17298)
!17298 = distinct !DILexicalBlock(scope: !17299, file: !162, line: 5912, column: 13)
!17299 = distinct !DILexicalBlock(scope: !17294, file: !162, line: 5911, column: 23)
!17300 = !DILocation(line: 5912, column: 19, scope: !17298)
!17301 = !DILocation(line: 5912, column: 27, scope: !17298)
!17302 = !DILocation(line: 5912, column: 24, scope: !17298)
!17303 = !DILocation(line: 5912, column: 13, scope: !17299)
!17304 = !DILocation(line: 5913, column: 24, scope: !17298)
!17305 = !DILocation(line: 5913, column: 11, scope: !17298)
!17306 = !DILocation(line: 5913, column: 17, scope: !17298)
!17307 = !DILocation(line: 5913, column: 22, scope: !17298)
!17308 = !DILocation(line: 5915, column: 27, scope: !17309)
!17309 = distinct !DILexicalBlock(scope: !17298, file: !162, line: 5914, column: 14)
!17310 = !DILocation(line: 5915, column: 33, scope: !17309)
!17311 = !DILocation(line: 5915, column: 25, scope: !17309)
!17312 = !DILocation(line: 5916, column: 32, scope: !17309)
!17313 = !DILocation(line: 5916, column: 41, scope: !17309)
!17314 = !DILocation(line: 5916, column: 17, scope: !17309)
!17315 = !DILocation(line: 5916, column: 15, scope: !17309)
!17316 = !DILocation(line: 5917, column: 16, scope: !17317)
!17317 = distinct !DILexicalBlock(scope: !17309, file: !162, line: 5917, column: 15)
!17318 = !DILocation(line: 5917, column: 15, scope: !17309)
!17319 = !DILocation(line: 5918, column: 13, scope: !17317)
!17320 = !DILocation(line: 5919, column: 40, scope: !17309)
!17321 = !DILocation(line: 5919, column: 27, scope: !17309)
!17322 = !DILocation(line: 5919, column: 33, scope: !17309)
!17323 = !DILocation(line: 5919, column: 38, scope: !17309)
!17324 = !DILocation(line: 5919, column: 25, scope: !17309)
!17325 = !DILocation(line: 5921, column: 7, scope: !17299)
!17326 = !DILocation(line: 5922, column: 11, scope: !17327)
!17327 = distinct !DILexicalBlock(scope: !2197, file: !162, line: 5922, column: 11)
!17328 = !DILocation(line: 5922, column: 17, scope: !17327)
!17329 = !DILocation(line: 5922, column: 11, scope: !2197)
!17330 = !DILocation(line: 5923, column: 30, scope: !17331)
!17331 = distinct !DILexicalBlock(scope: !17327, file: !162, line: 5922, column: 27)
!17332 = !DILocation(line: 5923, column: 39, scope: !17331)
!17333 = !DILocation(line: 5923, column: 45, scope: !17331)
!17334 = !DILocation(line: 5923, column: 15, scope: !17331)
!17335 = !DILocation(line: 5923, column: 13, scope: !17331)
!17336 = !DILocation(line: 5924, column: 14, scope: !17337)
!17337 = distinct !DILexicalBlock(scope: !17331, file: !162, line: 5924, column: 13)
!17338 = !DILocation(line: 5924, column: 13, scope: !17331)
!17339 = !DILocation(line: 5925, column: 11, scope: !17337)
!17340 = !DILocation(line: 5926, column: 26, scope: !17331)
!17341 = !DILocation(line: 5926, column: 9, scope: !17331)
!17342 = !DILocation(line: 5926, column: 15, scope: !17331)
!17343 = !DILocation(line: 5926, column: 24, scope: !17331)
!17344 = !DILocation(line: 5927, column: 7, scope: !17331)
!17345 = !DILocation(line: 5928, column: 5, scope: !2198)
!17346 = !DILocation(line: 5928, column: 5, scope: !17347)
!17347 = !DILexicalBlockFile(scope: !2198, file: !162, discriminator: 1)
!17348 = !DILocation(line: 5928, column: 5, scope: !2197)
!17349 = !DILocation(line: 5930, column: 7, scope: !2200)
!17350 = !DILocation(line: 5930, column: 23, scope: !2200)
!17351 = !DILocation(line: 5930, column: 45, scope: !2200)
!17352 = !DILocation(line: 5930, column: 54, scope: !2200)
!17353 = !DILocation(line: 5930, column: 60, scope: !2200)
!17354 = !DILocation(line: 5931, column: 45, scope: !2200)
!17355 = !DILocation(line: 5931, column: 51, scope: !2200)
!17356 = !DILocation(line: 5930, column: 29, scope: !2200)
!17357 = !DILocation(line: 5932, column: 12, scope: !17358)
!17358 = distinct !DILexicalBlock(scope: !2200, file: !162, line: 5932, column: 11)
!17359 = !DILocation(line: 5932, column: 11, scope: !2200)
!17360 = !DILocation(line: 5933, column: 9, scope: !17358)
!17361 = !DILocation(line: 5934, column: 23, scope: !2200)
!17362 = !DILocation(line: 5934, column: 7, scope: !2200)
!17363 = !DILocation(line: 5934, column: 13, scope: !2200)
!17364 = !DILocation(line: 5934, column: 21, scope: !2200)
!17365 = !DILocation(line: 5935, column: 23, scope: !2200)
!17366 = !DILocation(line: 5935, column: 29, scope: !2200)
!17367 = !DILocation(line: 5935, column: 7, scope: !2200)
!17368 = !DILocation(line: 5935, column: 13, scope: !2200)
!17369 = !DILocation(line: 5935, column: 21, scope: !2200)
!17370 = !DILocation(line: 5936, column: 5, scope: !2198)
!17371 = !DILocation(line: 5936, column: 5, scope: !17347)
!17372 = !DILocation(line: 5937, column: 9, scope: !2203)
!17373 = !DILocation(line: 5937, column: 15, scope: !2203)
!17374 = !DILocation(line: 5937, column: 9, scope: !2189)
!17375 = !DILocation(line: 5938, column: 7, scope: !2202)
!17376 = !DILocation(line: 5938, column: 23, scope: !2202)
!17377 = !DILocation(line: 5938, column: 44, scope: !2202)
!17378 = !DILocation(line: 5938, column: 53, scope: !2202)
!17379 = !DILocation(line: 5938, column: 59, scope: !2202)
!17380 = !DILocation(line: 5938, column: 29, scope: !2202)
!17381 = !DILocation(line: 5939, column: 12, scope: !17382)
!17382 = distinct !DILexicalBlock(scope: !2202, file: !162, line: 5939, column: 11)
!17383 = !DILocation(line: 5939, column: 11, scope: !2202)
!17384 = !DILocation(line: 5940, column: 9, scope: !17382)
!17385 = !DILocation(line: 5941, column: 24, scope: !2202)
!17386 = !DILocation(line: 5941, column: 7, scope: !2202)
!17387 = !DILocation(line: 5941, column: 13, scope: !2202)
!17388 = !DILocation(line: 5941, column: 22, scope: !2202)
!17389 = !DILocation(line: 5942, column: 5, scope: !2203)
!17390 = !DILocation(line: 5942, column: 5, scope: !17391)
!17391 = !DILexicalBlockFile(scope: !2203, file: !162, discriminator: 1)
!17392 = !DILocation(line: 5942, column: 5, scope: !2202)
!17393 = !DILocation(line: 5943, column: 22, scope: !2189)
!17394 = !DILocation(line: 5943, column: 28, scope: !2189)
!17395 = !DILocation(line: 5943, column: 5, scope: !2189)
!17396 = !DILocation(line: 5943, column: 11, scope: !2189)
!17397 = !DILocation(line: 5943, column: 20, scope: !2189)
!17398 = !DILocation(line: 5944, column: 25, scope: !2189)
!17399 = !DILocation(line: 5944, column: 31, scope: !2189)
!17400 = !DILocation(line: 5944, column: 5, scope: !2189)
!17401 = !DILocation(line: 5944, column: 11, scope: !2189)
!17402 = !DILocation(line: 5944, column: 23, scope: !2189)
!17403 = !DILocation(line: 5945, column: 3, scope: !2190)
!17404 = !DILocation(line: 5945, column: 3, scope: !17405)
!17405 = !DILexicalBlockFile(scope: !2190, file: !162, discriminator: 1)
!17406 = !DILocation(line: 5894, column: 3, scope: !2190)
!17407 = !DILocation(line: 5946, column: 3, scope: !2177)
!17408 = !DILocation(line: 5947, column: 1, scope: !2177)
!17409 = !DILocation(line: 6173, column: 30, scope: !2204)
!17410 = !DILocation(line: 6173, column: 52, scope: !2204)
!17411 = !DILocation(line: 6173, column: 59, scope: !2204)
!17412 = !DILocation(line: 6175, column: 8, scope: !17413)
!17413 = distinct !DILexicalBlock(scope: !2204, file: !162, line: 6175, column: 7)
!17414 = !DILocation(line: 6175, column: 14, scope: !17413)
!17415 = !DILocation(line: 6175, column: 18, scope: !17413)
!17416 = !DILocation(line: 6175, column: 31, scope: !17417)
!17417 = !DILexicalBlockFile(scope: !17413, file: !162, discriminator: 1)
!17418 = !DILocation(line: 6175, column: 22, scope: !17413)
!17419 = !DILocation(line: 6175, column: 7, scope: !2204)
!17420 = !DILocation(line: 6176, column: 5, scope: !17413)
!17421 = !DILocation(line: 6177, column: 3, scope: !2204)
!17422 = !DILocation(line: 6177, column: 10, scope: !17423)
!17423 = !DILexicalBlockFile(scope: !17424, file: !162, discriminator: 2)
!17424 = !DILexicalBlockFile(scope: !17425, file: !162, discriminator: 1)
!17425 = distinct !DILexicalBlock(scope: !17426, file: !162, line: 6177, column: 3)
!17426 = distinct !DILexicalBlock(scope: !2204, file: !162, line: 6177, column: 3)
!17427 = !DILocation(line: 6177, column: 12, scope: !17425)
!17428 = !DILocation(line: 6177, column: 3, scope: !17426)
!17429 = !DILocation(line: 6178, column: 13, scope: !17430)
!17430 = distinct !DILexicalBlock(scope: !17431, file: !162, line: 6178, column: 9)
!17431 = distinct !DILexicalBlock(scope: !17425, file: !162, line: 6177, column: 27)
!17432 = !DILocation(line: 6178, column: 20, scope: !17430)
!17433 = !DILocation(line: 6178, column: 28, scope: !17430)
!17434 = !DILocation(line: 6178, column: 35, scope: !17430)
!17435 = !DILocation(line: 6178, column: 24, scope: !17430)
!17436 = !DILocation(line: 6178, column: 39, scope: !17430)
!17437 = !DILocation(line: 6178, column: 52, scope: !17438)
!17438 = !DILexicalBlockFile(scope: !17430, file: !162, discriminator: 1)
!17439 = !DILocation(line: 6178, column: 43, scope: !17430)
!17440 = !DILocation(line: 6178, column: 9, scope: !17431)
!17441 = !DILocation(line: 6178, column: 11, scope: !17442)
!17442 = !DILexicalBlockFile(scope: !17430, file: !162, discriminator: 4)
!17443 = !DILocation(line: 6178, column: 87, scope: !17444)
!17444 = !DILexicalBlockFile(scope: !17445, file: !162, discriminator: 3)
!17445 = !DILexicalBlockFile(scope: !17430, file: !162, discriminator: 2)
!17446 = !DILocation(line: 6178, column: 86, scope: !17430)
!17447 = !DILocation(line: 6178, column: 70, scope: !17430)
!17448 = !DILocation(line: 6178, column: 77, scope: !17430)
!17449 = !DILocation(line: 6178, column: 81, scope: !17430)
!17450 = !DILocation(line: 6178, column: 84, scope: !17430)
!17451 = !DILocation(line: 6179, column: 7, scope: !17430)
!17452 = !DILocation(line: 6180, column: 3, scope: !17431)
!17453 = !DILocation(line: 6177, column: 17, scope: !17425)
!17454 = !DILocation(line: 6177, column: 23, scope: !17425)
!17455 = !DILocation(line: 6177, column: 3, scope: !17425)
!17456 = !DILocation(line: 6181, column: 7, scope: !2204)
!17457 = !DILocation(line: 6181, column: 13, scope: !2204)
!17458 = !DILocation(line: 6181, column: 5, scope: !2204)
!17459 = !DILocation(line: 6182, column: 21, scope: !2204)
!17460 = !DILocation(line: 6182, column: 28, scope: !2204)
!17461 = !DILocation(line: 6182, column: 5, scope: !2204)
!17462 = !DILocation(line: 6182, column: 12, scope: !2204)
!17463 = !DILocation(line: 6182, column: 18, scope: !2204)
!17464 = !DILocation(line: 6183, column: 10, scope: !2204)
!17465 = !DILocation(line: 6183, column: 3, scope: !2204)
!17466 = !DILocation(line: 6184, column: 1, scope: !2204)
