; ModuleID = 'programs_new/Python-new/memoryobject.bc.ll'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._typeobject = type { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }
%struct.PyVarObject = type { %struct._object, i64 }
%struct._object = type { i64, %struct._typeobject* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.PyNumberMethods = type { %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)* }
%struct.PySequenceMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)*, %struct._object* (%struct._object*, i64)*, i8*, i32 (%struct._object*, i64, %struct._object*)*, i8*, i32 (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)* }
%struct.PyMappingMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)* }
%struct.PyBufferProcs = type { i32 (%struct._object*, %struct.bufferinfo*, i32)*, void (%struct._object*, %struct.bufferinfo*)* }
%struct.bufferinfo = type { i8*, %struct._object*, i64, i64, i32, i32, i8*, i64*, i64*, i64*, i8* }
%struct.PyMethodDef = type { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }
%struct.PyMemberDef = type opaque
%struct.PyGetSetDef = type { i8*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, %struct._object*, i8*)*, i8*, i8* }
%union._gc_head = type { %struct.anon }
%struct.anon = type { %union._gc_head*, %union._gc_head*, i64 }
%struct._longobject = type { %struct.PyVarObject, [1 x i32] }
%struct._PyManagedBufferObject = type { %struct._object, i32, i64, %struct.bufferinfo }
%struct.PyMemoryViewObject = type { %struct.PyVarObject, %struct._PyManagedBufferObject*, i64, i32, i64, %struct.bufferinfo, [3 x i8], %struct._object*, [1 x i64] }
%struct.Py_buffer_full = type { %struct.bufferinfo, [1 x i64] }
%struct.unpacker = type { %struct._object*, %struct._object*, i8*, i64 }
%struct.PyTupleObject = type { %struct.PyVarObject, [1 x %struct._object*] }
%struct.PyBytesObject = type { %struct.PyVarObject, i64, [1 x i8] }
%struct.PyListObject = type { %struct.PyVarObject, %struct._object**, i64 }

@PyType_Type = external global %struct._typeobject, align 8
@.str = private unnamed_addr constant [14 x i8] c"managedbuffer\00", align 1
@_PyManagedBuffer_Type = global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* @PyType_Type }, i64 0 }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i32 0, i32 0), i64 112, i64 0, void (%struct._object*)* bitcast (void (%struct._PyManagedBufferObject*)* @mbuf_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 278528, i8* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct._PyManagedBufferObject*, i32 (%struct._object*, i8*)*, i8*)* @mbuf_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct._PyManagedBufferObject*)* @mbuf_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_ValueError = external global %struct._object*, align 8
@.str.1 = private unnamed_addr constant [54 x i8] c"PyMemoryView_FromBuffer(): info->buf must not be NULL\00", align 1
@PyMemoryView_Type = global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* @PyType_Type }, i64 0 }, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i32 0), i64 152, i64 8, void (%struct._object*)* bitcast (void (%struct.PyMemoryViewObject*)* @memory_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.PyMemoryViewObject*)* @memory_repr to %struct._object* (%struct._object*)*), %struct.PyNumberMethods* null, %struct.PySequenceMethods* @memory_as_sequence, %struct.PyMappingMethods* @memory_as_mapping, i64 (%struct._object*)* bitcast (i64 (%struct.PyMemoryViewObject*)* @memory_hash to i64 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* @memory_as_buffer, i64 278528, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @memory_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyMemoryViewObject*, i32 (%struct._object*, i8*)*, i8*)* @memory_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyMemoryViewObject*)* @memory_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* @memory_richcompare, i64 144, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([7 x %struct.PyMethodDef], [7 x %struct.PyMethodDef]* @memory_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* getelementptr inbounds ([13 x %struct.PyGetSetDef], [13 x %struct.PyGetSetDef]* @memory_getsetlist, i32 0, i32 0), %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @memory_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@.str.2 = private unnamed_addr constant [50 x i8] c"operation forbidden on released memoryview object\00", align 1
@PyExc_TypeError = external global %struct._object*, align 8
@.str.3 = private unnamed_addr constant [61 x i8] c"memoryview: %.200s object does not have the buffer interface\00", align 1
@PyExc_BufferError = external global %struct._object*, align 8
@.str.4 = private unnamed_addr constant [34 x i8] c"underlying buffer is not writable\00", align 1
@.str.5 = private unnamed_addr constant [66 x i8] c"writable contiguous buffer requested for a non-contiguous object.\00", align 1
@.str.6 = private unnamed_addr constant [40 x i8] c"PyBuffer_ToContiguous: len != view->len\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"memoryview\00", align 1
@memory_as_sequence = internal global %struct.PySequenceMethods { i64 (%struct._object*)* bitcast (i64 (%struct.PyMemoryViewObject*)* @memory_length to i64 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, i64)* null, %struct._object* (%struct._object*, i64)* bitcast (%struct._object* (%struct.PyMemoryViewObject*, i64)* @memory_item to %struct._object* (%struct._object*, i64)*), i8* null, i32 (%struct._object*, i64, %struct._object*)* null, i8* null, i32 (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, i64)* null }, align 8
@memory_as_mapping = internal global %struct.PyMappingMethods { i64 (%struct._object*)* bitcast (i64 (%struct.PyMemoryViewObject*)* @memory_length to i64 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyMemoryViewObject*, %struct._object*)* @memory_subscript to %struct._object* (%struct._object*, %struct._object*)*), i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyMemoryViewObject*, %struct._object*, %struct._object*)* @memory_ass_sub to i32 (%struct._object*, %struct._object*, %struct._object*)*) }, align 8
@memory_as_buffer = internal global %struct.PyBufferProcs { i32 (%struct._object*, %struct.bufferinfo*, i32)* bitcast (i32 (%struct.PyMemoryViewObject*, %struct.bufferinfo*, i32)* @memory_getbuf to i32 (%struct._object*, %struct.bufferinfo*, i32)*), void (%struct._object*, %struct.bufferinfo*)* bitcast (void (%struct.PyMemoryViewObject*, %struct.bufferinfo*)* @memory_releasebuf to void (%struct._object*, %struct.bufferinfo*)*) }, align 8
@memory_doc = internal global [86 x i8] c"memoryview(object)\0A\0ACreate a new memoryview object which references the given object.\00", align 16
@memory_methods = internal global [7 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyMemoryViewObject*, %struct._object*)* @memory_release to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @memory_release_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyMemoryViewObject*, %struct._object*)* @memory_tobytes to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @memory_tobytes_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyMemoryViewObject*, %struct._object*)* @memory_tolist to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @memory_tolist_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyMemoryViewObject*, %struct._object*, %struct._object*)* @memory_cast to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @memory_cast_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.47, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @memory_enter, i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.48, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @memory_exit, i32 1, i8* null }, %struct.PyMethodDef zeroinitializer], align 16
@memory_getsetlist = internal global [13 x %struct.PyGetSetDef] [%struct.PyGetSetDef { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.65, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PyMemoryViewObject*)* @memory_obj_get to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @memory_obj_doc, i32 0, i32 0), i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.66, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PyMemoryViewObject*)* @memory_nbytes_get to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @memory_nbytes_doc, i32 0, i32 0), i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.67, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PyMemoryViewObject*)* @memory_readonly_get to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @memory_readonly_doc, i32 0, i32 0), i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.68, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PyMemoryViewObject*)* @memory_itemsize_get to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @memory_itemsize_doc, i32 0, i32 0), i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.49, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PyMemoryViewObject*)* @memory_format_get to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @memory_format_doc, i32 0, i32 0), i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.69, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PyMemoryViewObject*)* @memory_ndim_get to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @memory_ndim_doc, i32 0, i32 0), i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.50, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PyMemoryViewObject*)* @memory_shape_get to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @memory_shape_doc, i32 0, i32 0), i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.70, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PyMemoryViewObject*)* @memory_strides_get to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @memory_strides_doc, i32 0, i32 0), i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.71, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PyMemoryViewObject*)* @memory_suboffsets_get to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @memory_suboffsets_doc, i32 0, i32 0), i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.72, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PyMemoryViewObject*, %struct._object*)* @memory_c_contiguous to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @memory_c_contiguous_doc, i32 0, i32 0), i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.73, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PyMemoryViewObject*, %struct._object*)* @memory_f_contiguous to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @memory_f_contiguous_doc, i32 0, i32 0), i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.74, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PyMemoryViewObject*, %struct._object*)* @memory_contiguous to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @memory_contiguous_doc, i32 0, i32 0), i8* null }, %struct.PyGetSetDef zeroinitializer], align 16
@.str.8 = private unnamed_addr constant [26 x i8] c"GC object already tracked\00", align 1
@_PyGC_generation0 = external global %union._gc_head*, align 8
@.str.9 = private unnamed_addr constant [52 x i8] c"memoryview: number of dimensions must not exceed 64\00", align 1
@.str.10 = private unnamed_addr constant [67 x i8] c"memoryview assignment: lvalue and rvalue have different structures\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"B\00", align 1
@.str.12 = private unnamed_addr constant [37 x i8] c"memoryview has %zd exported buffer%s\00", align 1
@.str.13 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.14 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.15 = private unnamed_addr constant [41 x i8] c"_memory_release(): negative export count\00", align 1
@.str.16 = private unnamed_addr constant [24 x i8] c"<released memory at %p>\00", align 1
@.str.17 = private unnamed_addr constant [15 x i8] c"<memory at %p>\00", align 1
@.str.18 = private unnamed_addr constant [33 x i8] c"invalid indexing of 0-dim memory\00", align 1
@PyExc_NotImplementedError = external global %struct._object*, align 8
@.str.19 = private unnamed_addr constant [48 x i8] c"multi-dimensional sub-views are not implemented\00", align 1
@.str.20 = private unnamed_addr constant [34 x i8] c"memoryview: unsupported format %s\00", align 1
@PyExc_IndexError = external global %struct._object*, align 8
@.str.21 = private unnamed_addr constant [20 x i8] c"index out of bounds\00", align 1
@.str.22 = private unnamed_addr constant [36 x i8] c"memoryview: format %s not supported\00", align 1
@_Py_EllipsisObject = external global %struct._object, align 8
@PySlice_Type = external global %struct._typeobject, align 8
@.str.23 = private unnamed_addr constant [45 x i8] c"multi-dimensional slicing is not implemented\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"memoryview: invalid slice key\00", align 1
@.str.25 = private unnamed_addr constant [31 x i8] c"cannot modify read-only memory\00", align 1
@.str.26 = private unnamed_addr constant [21 x i8] c"cannot delete memory\00", align 1
@.str.27 = private unnamed_addr constant [60 x i8] c"memoryview assignments are currently restricted to ndim = 1\00", align 1
@.str.28 = private unnamed_addr constant [66 x i8] c"memoryview slice assignments are currently restricted to ndim = 1\00", align 1
@.str.29 = private unnamed_addr constant [41 x i8] c"memoryview: invalid type for format '%s'\00", align 1
@.str.30 = private unnamed_addr constant [42 x i8] c"memoryview: invalid value for format '%s'\00", align 1
@PyExc_OverflowError = external global %struct._object*, align 8
@.str.31 = private unnamed_addr constant [39 x i8] c"cannot hash writable memoryview object\00", align 1
@.str.32 = private unnamed_addr constant [61 x i8] c"memoryview: hashing is restricted to formats 'B', 'b' or 'c'\00", align 1
@.str.33 = private unnamed_addr constant [46 x i8] c"memoryview: underlying buffer is not writable\00", align 1
@.str.34 = private unnamed_addr constant [50 x i8] c"memoryview: underlying buffer is not C-contiguous\00", align 1
@.str.35 = private unnamed_addr constant [56 x i8] c"memoryview: underlying buffer is not Fortran contiguous\00", align 1
@.str.36 = private unnamed_addr constant [48 x i8] c"memoryview: underlying buffer is not contiguous\00", align 1
@.str.37 = private unnamed_addr constant [50 x i8] c"memoryview: underlying buffer requires suboffsets\00", align 1
@.str.38 = private unnamed_addr constant [72 x i8] c"memoryview: cannot cast to unsigned bytes if the format flag is present\00", align 1
@_Py_NotImplementedStruct = external global %struct._object, align 8
@_Py_TrueStruct = external global %struct._longobject, align 8
@_Py_FalseStruct = external global %struct._longobject, align 8
@.str.39 = private unnamed_addr constant [7 x i8] c"struct\00", align 1
@.str.40 = private unnamed_addr constant [7 x i8] c"Struct\00", align 1
@.str.41 = private unnamed_addr constant [12 x i8] c"unpack_from\00", align 1
@PyExc_ImportError = external global %struct._object*, align 8
@PyExc_MemoryError = external global %struct._object*, align 8
@PyExc_RuntimeError = external global %struct._object*, align 8
@.str.42 = private unnamed_addr constant [42 x i8] c"memoryview: internal error in richcompare\00", align 1
@.str.43 = private unnamed_addr constant [8 x i8] c"release\00", align 1
@memory_release_doc = internal global [85 x i8] c"M.release() -> None\0A\0ARelease the underlying buffer exposed by the memoryview object.\00", align 16
@.str.44 = private unnamed_addr constant [8 x i8] c"tobytes\00", align 1
@memory_tobytes_doc = internal global [70 x i8] c"M.tobytes() -> bytes\0A\0AReturn the data in the buffer as a byte string.\00", align 16
@.str.45 = private unnamed_addr constant [7 x i8] c"tolist\00", align 1
@memory_tolist_doc = internal global [73 x i8] c"M.tolist() -> list\0A\0AReturn the data in the buffer as a list of elements.\00", align 16
@.str.46 = private unnamed_addr constant [5 x i8] c"cast\00", align 1
@memory_cast_doc = internal global [83 x i8] c"M.cast(format[, shape]) -> memoryview\0A\0ACast a memoryview to a new format or shape.\00", align 16
@.str.47 = private unnamed_addr constant [10 x i8] c"__enter__\00", align 1
@.str.48 = private unnamed_addr constant [9 x i8] c"__exit__\00", align 1
@_Py_NoneStruct = external global %struct._object, align 8
@memory_cast.kwlist = internal global [3 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.50, i32 0, i32 0), i8* null], align 16
@.str.49 = private unnamed_addr constant [7 x i8] c"format\00", align 1
@.str.50 = private unnamed_addr constant [6 x i8] c"shape\00", align 1
@.str.51 = private unnamed_addr constant [4 x i8] c"O|O\00", align 1
@.str.52 = private unnamed_addr constant [45 x i8] c"memoryview: format argument must be a string\00", align 1
@.str.53 = private unnamed_addr constant [55 x i8] c"memoryview: casts are restricted to C-contiguous views\00", align 1
@.str.54 = private unnamed_addr constant [60 x i8] c"memoryview: cannot cast view with zeros in shape or strides\00", align 1
@.str.55 = private unnamed_addr constant [32 x i8] c"shape must be a list or a tuple\00", align 1
@.str.56 = private unnamed_addr constant [46 x i8] c"memoryview: cast must be 1D -> ND or ND -> 1D\00", align 1
@.str.57 = private unnamed_addr constant [97 x i8] c"memoryview: source format must be a native single character format prefixed with an optional '@'\00", align 1
@.str.58 = private unnamed_addr constant [102 x i8] c"memoryview: destination format must be a native single character format prefixed with an optional '@'\00", align 1
@.str.59 = private unnamed_addr constant [53 x i8] c"memoryview: cannot cast between two non-byte formats\00", align 1
@.str.60 = private unnamed_addr constant [49 x i8] c"memoryview: length is not a multiple of itemsize\00", align 1
@.str.61 = private unnamed_addr constant [53 x i8] c"memoryview: product(shape) * itemsize != buffer size\00", align 1
@.str.62 = private unnamed_addr constant [54 x i8] c"memoryview.cast(): elements of shape must be integers\00", align 1
@.str.63 = private unnamed_addr constant [58 x i8] c"memoryview.cast(): elements of shape must be integers > 0\00", align 1
@.str.64 = private unnamed_addr constant [46 x i8] c"memoryview.cast(): product(shape) > SSIZE_MAX\00", align 1
@.str.65 = private unnamed_addr constant [4 x i8] c"obj\00", align 1
@memory_obj_doc = internal global [41 x i8] c"The underlying object of the memoryview.\00", align 16
@.str.66 = private unnamed_addr constant [7 x i8] c"nbytes\00", align 1
@memory_nbytes_doc = internal global [87 x i8] c"The amount of space in bytes that the array would use in\0A a contiguous representation.\00", align 16
@.str.67 = private unnamed_addr constant [9 x i8] c"readonly\00", align 1
@memory_readonly_doc = internal global [51 x i8] c"A bool indicating whether the memory is read only.\00", align 16
@.str.68 = private unnamed_addr constant [9 x i8] c"itemsize\00", align 1
@memory_itemsize_doc = internal global [53 x i8] c"The size in bytes of each element of the memoryview.\00", align 16
@memory_format_doc = internal global [87 x i8] c"A string containing the format (in struct module style)\0A for each element in the view.\00", align 16
@.str.69 = private unnamed_addr constant [5 x i8] c"ndim\00", align 1
@memory_ndim_doc = internal global [95 x i8] c"An integer indicating how many dimensions of a multi-dimensional\0A array the memory represents.\00", align 16
@memory_shape_doc = internal global [84 x i8] c"A tuple of ndim integers giving the shape of the memory\0A as an N-dimensional array.\00", align 16
@.str.70 = private unnamed_addr constant [8 x i8] c"strides\00", align 1
@memory_strides_doc = internal global [107 x i8] c"A tuple of ndim integers giving the size in bytes to access\0A each element for each dimension of the array.\00", align 16
@.str.71 = private unnamed_addr constant [11 x i8] c"suboffsets\00", align 1
@memory_suboffsets_doc = internal global [58 x i8] c"A tuple of integers used internally for PIL-style arrays.\00", align 16
@.str.72 = private unnamed_addr constant [13 x i8] c"c_contiguous\00", align 1
@memory_c_contiguous_doc = internal global [54 x i8] c"A bool indicating whether the memory is C contiguous.\00", align 16
@.str.73 = private unnamed_addr constant [13 x i8] c"f_contiguous\00", align 1
@memory_f_contiguous_doc = internal global [60 x i8] c"A bool indicating whether the memory is Fortran contiguous.\00", align 16
@.str.74 = private unnamed_addr constant [11 x i8] c"contiguous\00", align 1
@memory_contiguous_doc = internal global [52 x i8] c"A bool indicating whether the memory is contiguous.\00", align 16
@memory_new.kwlist = internal global [2 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.75, i32 0, i32 0), i8* null], align 16
@.str.75 = private unnamed_addr constant [7 x i8] c"object\00", align 1
@.str.76 = private unnamed_addr constant [13 x i8] c"O:memoryview\00", align 1

; Function Attrs: nounwind uwtable
define internal void @mbuf_dealloc(%struct._PyManagedBufferObject* %self) #0 {
entry:
  %self.addr = alloca %struct._PyManagedBufferObject*, align 8
  store %struct._PyManagedBufferObject* %self, %struct._PyManagedBufferObject** %self.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._PyManagedBufferObject** %self.addr, metadata !493, metadata !1538), !dbg !1539
  %0 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %self.addr, align 8, !dbg !1540, !tbaa !1534
  call void @mbuf_release(%struct._PyManagedBufferObject* %0), !dbg !1541
  %1 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %self.addr, align 8, !dbg !1542, !tbaa !1534
  %flags = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %1, i32 0, i32 1, !dbg !1544
  %2 = load i32, i32* %flags, align 4, !dbg !1544, !tbaa !1545
  %and = and i32 %2, 2, !dbg !1551
  %tobool = icmp ne i32 %and, 0, !dbg !1551
  br i1 %tobool, label %if.then, label %if.end, !dbg !1552

if.then:                                          ; preds = %entry
  %3 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %self.addr, align 8, !dbg !1553, !tbaa !1534
  %master = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %3, i32 0, i32 3, !dbg !1554
  %format = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %master, i32 0, i32 6, !dbg !1555
  %4 = load i8*, i8** %format, align 8, !dbg !1555, !tbaa !1556
  call void @PyMem_Free(i8* %4), !dbg !1557
  br label %if.end, !dbg !1557

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %self.addr, align 8, !dbg !1558, !tbaa !1534
  %6 = bitcast %struct._PyManagedBufferObject* %5 to i8*, !dbg !1558
  call void @PyObject_GC_Del(i8* %6), !dbg !1559
  ret void, !dbg !1560
}

declare %struct._object* @PyObject_GenericGetAttr(%struct._object*, %struct._object*) #1

; Function Attrs: nounwind uwtable
define internal i32 @mbuf_traverse(%struct._PyManagedBufferObject* %self, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._PyManagedBufferObject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._PyManagedBufferObject* %self, %struct._PyManagedBufferObject** %self.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._PyManagedBufferObject** %self.addr, metadata !503, metadata !1538), !dbg !1561
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !504, metadata !1538), !dbg !1562
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !505, metadata !1538), !dbg !1563
  br label %do.body, !dbg !1564

do.body:                                          ; preds = %entry
  %0 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %self.addr, align 8, !dbg !1565, !tbaa !1534
  %master = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %0, i32 0, i32 3, !dbg !1567
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %master, i32 0, i32 1, !dbg !1568
  %1 = load %struct._object*, %struct._object** %obj, align 8, !dbg !1568, !tbaa !1569
  %tobool = icmp ne %struct._object* %1, null, !dbg !1570
  br i1 %tobool, label %if.then, label %if.end.5, !dbg !1571

if.then:                                          ; preds = %do.body
  %2 = bitcast i32* %vret to i8*, !dbg !1572
  call void @llvm.lifetime.start(i64 4, i8* %2) #3, !dbg !1572
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !506, metadata !1538), !dbg !1574
  %3 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !1575, !tbaa !1534
  %4 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %self.addr, align 8, !dbg !1576, !tbaa !1534
  %master1 = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %4, i32 0, i32 3, !dbg !1577
  %obj2 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %master1, i32 0, i32 1, !dbg !1578
  %5 = load %struct._object*, %struct._object** %obj2, align 8, !dbg !1578, !tbaa !1569
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !1579, !tbaa !1534
  %call = call i32 %3(%struct._object* %5, i8* %6), !dbg !1575
  store i32 %call, i32* %vret, align 4, !dbg !1574, !tbaa !1580
  %7 = load i32, i32* %vret, align 4, !dbg !1581, !tbaa !1580
  %tobool3 = icmp ne i32 %7, 0, !dbg !1581
  br i1 %tobool3, label %if.then.4, label %if.end, !dbg !1583

if.then.4:                                        ; preds = %if.then
  %8 = load i32, i32* %vret, align 4, !dbg !1584, !tbaa !1580
  store i32 %8, i32* %retval, !dbg !1586
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1586

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !1587
  br label %cleanup, !dbg !1587

cleanup:                                          ; preds = %if.end, %if.then.4
  %9 = bitcast i32* %vret to i8*, !dbg !1589
  call void @llvm.lifetime.end(i64 4, i8* %9) #3, !dbg !1589
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.5, !dbg !1592

if.end.5:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !1593

do.end:                                           ; preds = %if.end.5
  store i32 0, i32* %retval, !dbg !1596
  br label %return, !dbg !1596

return:                                           ; preds = %LeafBlock, %do.end
  %10 = load i32, i32* %retval, !dbg !1597
  ret i32 %10, !dbg !1597
}

; Function Attrs: nounwind uwtable
define internal i32 @mbuf_clear(%struct._PyManagedBufferObject* %self) #0 {
entry:
  %self.addr = alloca %struct._PyManagedBufferObject*, align 8
  store %struct._PyManagedBufferObject* %self, %struct._PyManagedBufferObject** %self.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._PyManagedBufferObject** %self.addr, metadata !514, metadata !1538), !dbg !1598
  %0 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %self.addr, align 8, !dbg !1599, !tbaa !1534
  call void @mbuf_release(%struct._PyManagedBufferObject* %0), !dbg !1600
  ret i32 0, !dbg !1601
}

; Function Attrs: nounwind uwtable
define %struct._object* @PyMemoryView_FromMemory(i8* %mem, i64 %size, i32 %flags) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %mem.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %mbuf = alloca %struct._PyManagedBufferObject*, align 8
  %mv = alloca %struct._object*, align 8
  %readonly = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store i8* %mem, i8** %mem.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i8** %mem.addr, metadata !424, metadata !1538), !dbg !1602
  store i64 %size, i64* %size.addr, align 8, !tbaa !1603
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !425, metadata !1538), !dbg !1604
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !1580
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !426, metadata !1538), !dbg !1605
  %0 = bitcast %struct._PyManagedBufferObject** %mbuf to i8*, !dbg !1606
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !1606
  call void @llvm.dbg.declare(metadata %struct._PyManagedBufferObject** %mbuf, metadata !427, metadata !1538), !dbg !1607
  %1 = bitcast %struct._object** %mv to i8*, !dbg !1608
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !1608
  call void @llvm.dbg.declare(metadata %struct._object** %mv, metadata !428, metadata !1538), !dbg !1609
  %2 = bitcast i32* %readonly to i8*, !dbg !1610
  call void @llvm.lifetime.start(i64 4, i8* %2) #3, !dbg !1610
  call void @llvm.dbg.declare(metadata i32* %readonly, metadata !429, metadata !1538), !dbg !1611
  %call = call %struct._PyManagedBufferObject* @mbuf_alloc(), !dbg !1612
  store %struct._PyManagedBufferObject* %call, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !1613, !tbaa !1534
  %3 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !1614, !tbaa !1534
  %cmp = icmp eq %struct._PyManagedBufferObject* %3, null, !dbg !1616
  br i1 %cmp, label %if.then, label %if.end, !dbg !1617

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !1618
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1618

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %flags.addr, align 4, !dbg !1619, !tbaa !1580
  %cmp1 = icmp eq i32 %4, 512, !dbg !1620
  %cond = select i1 %cmp1, i32 0, i32 1, !dbg !1621
  store i32 %cond, i32* %readonly, align 4, !dbg !1622, !tbaa !1580
  %5 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !1623, !tbaa !1534
  %master = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %5, i32 0, i32 3, !dbg !1624
  %6 = load i8*, i8** %mem.addr, align 8, !dbg !1625, !tbaa !1534
  %7 = load i64, i64* %size.addr, align 8, !dbg !1626, !tbaa !1603
  %8 = load i32, i32* %readonly, align 4, !dbg !1627, !tbaa !1580
  %call2 = call i32 @PyBuffer_FillInfo(%struct.bufferinfo* %master, %struct._object* null, i8* %6, i64 %7, i32 %8, i32 284), !dbg !1628
  %9 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !1629, !tbaa !1534
  %call3 = call %struct._object* @mbuf_add_view(%struct._PyManagedBufferObject* %9, %struct.bufferinfo* null), !dbg !1630
  store %struct._object* %call3, %struct._object** %mv, align 8, !dbg !1631, !tbaa !1534
  br label %do.body, !dbg !1632

do.body:                                          ; preds = %if.end
  %10 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !1633
  call void @llvm.lifetime.start(i64 8, i8* %10) #3, !dbg !1633
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !430, metadata !1538), !dbg !1635
  %11 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !1636, !tbaa !1534
  %12 = bitcast %struct._PyManagedBufferObject* %11 to %struct._object*, !dbg !1637
  store %struct._object* %12, %struct._object** %_py_decref_tmp, align 8, !dbg !1635, !tbaa !1534
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1638, !tbaa !1534
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 0, !dbg !1640
  %14 = load i64, i64* %ob_refcnt, align 8, !dbg !1641, !tbaa !1642
  %dec = add i64 %14, -1, !dbg !1641
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !1641, !tbaa !1642
  %cmp4 = icmp ne i64 %dec, 0, !dbg !1643
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !1644

if.then.5:                                        ; preds = %do.body
  br label %if.end.6, !dbg !1645

if.else:                                          ; preds = %do.body
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1647, !tbaa !1534
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 1, !dbg !1649
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !1649, !tbaa !1650
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %16, i32 0, i32 4, !dbg !1651
  %17 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !1651, !tbaa !1652
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1655, !tbaa !1534
  call void %17(%struct._object* %18), !dbg !1656
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.5
  %19 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !1657
  call void @llvm.lifetime.end(i64 8, i8* %19) #3, !dbg !1657
  br label %do.cond, !dbg !1659

do.cond:                                          ; preds = %if.end.6
  br label %do.end, !dbg !1660

do.end:                                           ; preds = %do.cond
  %20 = load %struct._object*, %struct._object** %mv, align 8, !dbg !1662, !tbaa !1534
  store %struct._object* %20, %struct._object** %retval, !dbg !1663
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1663

cleanup:                                          ; preds = %do.end, %if.then
  %21 = bitcast i32* %readonly to i8*, !dbg !1664
  call void @llvm.lifetime.end(i64 4, i8* %21) #3, !dbg !1664
  %22 = bitcast %struct._object** %mv to i8*, !dbg !1664
  call void @llvm.lifetime.end(i64 8, i8* %22) #3, !dbg !1664
  %23 = bitcast %struct._PyManagedBufferObject** %mbuf to i8*, !dbg !1664
  call void @llvm.lifetime.end(i64 8, i8* %23) #3, !dbg !1664
  %24 = load %struct._object*, %struct._object** %retval, !dbg !1664
  ret %struct._object* %24, !dbg !1664
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #3

; Function Attrs: inlinehint nounwind uwtable
define internal %struct._PyManagedBufferObject* @mbuf_alloc() #4 {
entry:
  %retval = alloca %struct._PyManagedBufferObject*, align 8
  %mbuf = alloca %struct._PyManagedBufferObject*, align 8
  %cleanup.dest.slot = alloca i32
  %g = alloca %union._gc_head*, align 8
  %0 = bitcast %struct._PyManagedBufferObject** %mbuf to i8*, !dbg !1665
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !1665
  call void @llvm.dbg.declare(metadata %struct._PyManagedBufferObject** %mbuf, metadata !519, metadata !1538), !dbg !1666
  %call = call %struct._object* @_PyObject_GC_New(%struct._typeobject* @_PyManagedBuffer_Type), !dbg !1667
  %1 = bitcast %struct._object* %call to %struct._PyManagedBufferObject*, !dbg !1668
  store %struct._PyManagedBufferObject* %1, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !1669, !tbaa !1534
  %2 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !1670, !tbaa !1534
  %cmp = icmp eq %struct._PyManagedBufferObject* %2, null, !dbg !1672
  br i1 %cmp, label %if.then, label %if.end, !dbg !1673

if.then:                                          ; preds = %entry
  store %struct._PyManagedBufferObject* null, %struct._PyManagedBufferObject** %retval, !dbg !1674
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1674

if.end:                                           ; preds = %entry
  %3 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !1675, !tbaa !1534
  %flags = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %3, i32 0, i32 1, !dbg !1676
  store i32 0, i32* %flags, align 4, !dbg !1677, !tbaa !1545
  %4 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !1678, !tbaa !1534
  %exports = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %4, i32 0, i32 2, !dbg !1679
  store i64 0, i64* %exports, align 8, !dbg !1680, !tbaa !1681
  %5 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !1682, !tbaa !1534
  %master = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %5, i32 0, i32 3, !dbg !1683
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %master, i32 0, i32 1, !dbg !1684
  store %struct._object* null, %struct._object** %obj, align 8, !dbg !1685, !tbaa !1569
  br label %do.body, !dbg !1686

do.body:                                          ; preds = %if.end
  %6 = bitcast %union._gc_head** %g to i8*, !dbg !1687
  call void @llvm.lifetime.start(i64 8, i8* %6) #3, !dbg !1687
  call void @llvm.dbg.declare(metadata %union._gc_head** %g, metadata !520, metadata !1538), !dbg !1689
  %7 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !1690, !tbaa !1534
  %8 = bitcast %struct._PyManagedBufferObject* %7 to %union._gc_head*, !dbg !1691
  %add.ptr = getelementptr %union._gc_head, %union._gc_head* %8, i64 -1, !dbg !1692
  store %union._gc_head* %add.ptr, %union._gc_head** %g, align 8, !dbg !1689, !tbaa !1534
  %9 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !1693, !tbaa !1534
  %gc = bitcast %union._gc_head* %9 to %struct.anon*, !dbg !1695
  %gc_refs = getelementptr inbounds %struct.anon, %struct.anon* %gc, i32 0, i32 2, !dbg !1696
  %10 = load i64, i64* %gc_refs, align 8, !dbg !1696, !tbaa !1697
  %shr = ashr i64 %10, 1, !dbg !1699
  %cmp1 = icmp ne i64 %shr, -2, !dbg !1700
  br i1 %cmp1, label %if.then.2, label %if.end.3, !dbg !1701

if.then.2:                                        ; preds = %do.body
  call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8, i32 0, i32 0)) #8, !dbg !1702
  unreachable, !dbg !1702

if.end.3:                                         ; preds = %do.body
  br label %do.body.4, !dbg !1704

do.body.4:                                        ; preds = %if.end.3
  %11 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !1706, !tbaa !1534
  %gc5 = bitcast %union._gc_head* %11 to %struct.anon*, !dbg !1709
  %gc_refs6 = getelementptr inbounds %struct.anon, %struct.anon* %gc5, i32 0, i32 2, !dbg !1710
  %12 = load i64, i64* %gc_refs6, align 8, !dbg !1710, !tbaa !1697
  %and = and i64 %12, 1, !dbg !1711
  %or = or i64 %and, -6, !dbg !1712
  %13 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !1713, !tbaa !1534
  %gc7 = bitcast %union._gc_head* %13 to %struct.anon*, !dbg !1714
  %gc_refs8 = getelementptr inbounds %struct.anon, %struct.anon* %gc7, i32 0, i32 2, !dbg !1715
  store i64 %or, i64* %gc_refs8, align 8, !dbg !1716, !tbaa !1697
  br label %do.cond, !dbg !1717

do.cond:                                          ; preds = %do.body.4
  br label %do.end, !dbg !1718

do.end:                                           ; preds = %do.cond
  %14 = load %union._gc_head*, %union._gc_head** @_PyGC_generation0, align 8, !dbg !1720, !tbaa !1534
  %15 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !1722, !tbaa !1534
  %gc9 = bitcast %union._gc_head* %15 to %struct.anon*, !dbg !1723
  %gc_next = getelementptr inbounds %struct.anon, %struct.anon* %gc9, i32 0, i32 0, !dbg !1724
  store %union._gc_head* %14, %union._gc_head** %gc_next, align 8, !dbg !1725, !tbaa !1726
  %16 = load %union._gc_head*, %union._gc_head** @_PyGC_generation0, align 8, !dbg !1727, !tbaa !1534
  %gc10 = bitcast %union._gc_head* %16 to %struct.anon*, !dbg !1728
  %gc_prev = getelementptr inbounds %struct.anon, %struct.anon* %gc10, i32 0, i32 1, !dbg !1729
  %17 = load %union._gc_head*, %union._gc_head** %gc_prev, align 8, !dbg !1729, !tbaa !1730
  %18 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !1731, !tbaa !1534
  %gc11 = bitcast %union._gc_head* %18 to %struct.anon*, !dbg !1732
  %gc_prev12 = getelementptr inbounds %struct.anon, %struct.anon* %gc11, i32 0, i32 1, !dbg !1733
  store %union._gc_head* %17, %union._gc_head** %gc_prev12, align 8, !dbg !1734, !tbaa !1730
  %19 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !1735, !tbaa !1534
  %20 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !1736, !tbaa !1534
  %gc13 = bitcast %union._gc_head* %20 to %struct.anon*, !dbg !1737
  %gc_prev14 = getelementptr inbounds %struct.anon, %struct.anon* %gc13, i32 0, i32 1, !dbg !1738
  %21 = load %union._gc_head*, %union._gc_head** %gc_prev14, align 8, !dbg !1738, !tbaa !1730
  %gc15 = bitcast %union._gc_head* %21 to %struct.anon*, !dbg !1739
  %gc_next16 = getelementptr inbounds %struct.anon, %struct.anon* %gc15, i32 0, i32 0, !dbg !1740
  store %union._gc_head* %19, %union._gc_head** %gc_next16, align 8, !dbg !1741, !tbaa !1726
  %22 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !1742, !tbaa !1534
  %23 = load %union._gc_head*, %union._gc_head** @_PyGC_generation0, align 8, !dbg !1743, !tbaa !1534
  %gc17 = bitcast %union._gc_head* %23 to %struct.anon*, !dbg !1744
  %gc_prev18 = getelementptr inbounds %struct.anon, %struct.anon* %gc17, i32 0, i32 1, !dbg !1745
  store %union._gc_head* %22, %union._gc_head** %gc_prev18, align 8, !dbg !1746, !tbaa !1730
  %24 = bitcast %union._gc_head** %g to i8*, !dbg !1747
  call void @llvm.lifetime.end(i64 8, i8* %24) #3, !dbg !1747
  br label %do.cond.19, !dbg !1748

do.cond.19:                                       ; preds = %do.end
  br label %do.end.20, !dbg !1749

do.end.20:                                        ; preds = %do.cond.19
  %25 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !1751, !tbaa !1534
  store %struct._PyManagedBufferObject* %25, %struct._PyManagedBufferObject** %retval, !dbg !1752
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1752

cleanup:                                          ; preds = %do.end.20, %if.then
  %26 = bitcast %struct._PyManagedBufferObject** %mbuf to i8*, !dbg !1753
  call void @llvm.lifetime.end(i64 8, i8* %26) #3, !dbg !1753
  %27 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %retval, !dbg !1753
  ret %struct._PyManagedBufferObject* %27, !dbg !1753
}

declare i32 @PyBuffer_FillInfo(%struct.bufferinfo*, %struct._object*, i8*, i64, i32, i32) #1

; Function Attrs: nounwind uwtable
define internal %struct._object* @mbuf_add_view(%struct._PyManagedBufferObject* %mbuf, %struct.bufferinfo* %src) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %mbuf.addr = alloca %struct._PyManagedBufferObject*, align 8
  %src.addr = alloca %struct.bufferinfo*, align 8
  %mv = alloca %struct.PyMemoryViewObject*, align 8
  %dest = alloca %struct.bufferinfo*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._PyManagedBufferObject* %mbuf, %struct._PyManagedBufferObject** %mbuf.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._PyManagedBufferObject** %mbuf.addr, metadata !528, metadata !1538), !dbg !1754
  store %struct.bufferinfo* %src, %struct.bufferinfo** %src.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %src.addr, metadata !529, metadata !1538), !dbg !1755
  %0 = bitcast %struct.PyMemoryViewObject** %mv to i8*, !dbg !1756
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !1756
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %mv, metadata !530, metadata !1538), !dbg !1757
  %1 = bitcast %struct.bufferinfo** %dest to i8*, !dbg !1758
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !1758
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %dest, metadata !531, metadata !1538), !dbg !1759
  %2 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !1760, !tbaa !1534
  %cmp = icmp eq %struct.bufferinfo* %2, null, !dbg !1762
  br i1 %cmp, label %if.then, label %if.end, !dbg !1763

if.then:                                          ; preds = %entry
  %3 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf.addr, align 8, !dbg !1764, !tbaa !1534
  %master = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %3, i32 0, i32 3, !dbg !1765
  store %struct.bufferinfo* %master, %struct.bufferinfo** %src.addr, align 8, !dbg !1766, !tbaa !1534
  br label %if.end, !dbg !1767

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !1768, !tbaa !1534
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %4, i32 0, i32 5, !dbg !1770
  %5 = load i32, i32* %ndim, align 4, !dbg !1770, !tbaa !1771
  %cmp1 = icmp sgt i32 %5, 64, !dbg !1772
  br i1 %cmp1, label %if.then.2, label %if.end.3, !dbg !1773

if.then.2:                                        ; preds = %if.end
  %6 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !1774, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.9, i32 0, i32 0)), !dbg !1776
  store %struct._object* null, %struct._object** %retval, !dbg !1777
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1777

if.end.3:                                         ; preds = %if.end
  %7 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !1778, !tbaa !1534
  %ndim4 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %7, i32 0, i32 5, !dbg !1779
  %8 = load i32, i32* %ndim4, align 4, !dbg !1779, !tbaa !1771
  %call = call %struct.PyMemoryViewObject* @memory_alloc(i32 %8), !dbg !1780
  store %struct.PyMemoryViewObject* %call, %struct.PyMemoryViewObject** %mv, align 8, !dbg !1781, !tbaa !1534
  %9 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !1782, !tbaa !1534
  %cmp5 = icmp eq %struct.PyMemoryViewObject* %9, null, !dbg !1784
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !1785

if.then.6:                                        ; preds = %if.end.3
  store %struct._object* null, %struct._object** %retval, !dbg !1786
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1786

if.end.7:                                         ; preds = %if.end.3
  %10 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !1787, !tbaa !1534
  %view = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %10, i32 0, i32 5, !dbg !1788
  store %struct.bufferinfo* %view, %struct.bufferinfo** %dest, align 8, !dbg !1789, !tbaa !1534
  %11 = load %struct.bufferinfo*, %struct.bufferinfo** %dest, align 8, !dbg !1790, !tbaa !1534
  %12 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !1791, !tbaa !1534
  call void @init_shared_values(%struct.bufferinfo* %11, %struct.bufferinfo* %12), !dbg !1792
  %13 = load %struct.bufferinfo*, %struct.bufferinfo** %dest, align 8, !dbg !1793, !tbaa !1534
  %14 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !1794, !tbaa !1534
  call void @init_shape_strides(%struct.bufferinfo* %13, %struct.bufferinfo* %14), !dbg !1795
  %15 = load %struct.bufferinfo*, %struct.bufferinfo** %dest, align 8, !dbg !1796, !tbaa !1534
  %16 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !1797, !tbaa !1534
  call void @init_suboffsets(%struct.bufferinfo* %15, %struct.bufferinfo* %16), !dbg !1798
  %17 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !1799, !tbaa !1534
  call void @init_flags(%struct.PyMemoryViewObject* %17), !dbg !1800
  %18 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf.addr, align 8, !dbg !1801, !tbaa !1534
  %19 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !1802, !tbaa !1534
  %mbuf8 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %19, i32 0, i32 1, !dbg !1803
  store %struct._PyManagedBufferObject* %18, %struct._PyManagedBufferObject** %mbuf8, align 8, !dbg !1804, !tbaa !1805
  %20 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf.addr, align 8, !dbg !1807, !tbaa !1534
  %21 = bitcast %struct._PyManagedBufferObject* %20 to %struct._object*, !dbg !1808
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 0, !dbg !1809
  %22 = load i64, i64* %ob_refcnt, align 8, !dbg !1810, !tbaa !1642
  %inc = add i64 %22, 1, !dbg !1810
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !1810, !tbaa !1642
  %23 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf.addr, align 8, !dbg !1811, !tbaa !1534
  %exports = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %23, i32 0, i32 2, !dbg !1812
  %24 = load i64, i64* %exports, align 8, !dbg !1813, !tbaa !1681
  %inc9 = add i64 %24, 1, !dbg !1813
  store i64 %inc9, i64* %exports, align 8, !dbg !1813, !tbaa !1681
  %25 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !1814, !tbaa !1534
  %26 = bitcast %struct.PyMemoryViewObject* %25 to %struct._object*, !dbg !1815
  store %struct._object* %26, %struct._object** %retval, !dbg !1816
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1816

cleanup:                                          ; preds = %if.end.7, %if.then.6, %if.then.2
  %27 = bitcast %struct.bufferinfo** %dest to i8*, !dbg !1817
  call void @llvm.lifetime.end(i64 8, i8* %27) #3, !dbg !1817
  %28 = bitcast %struct.PyMemoryViewObject** %mv to i8*, !dbg !1817
  call void @llvm.lifetime.end(i64 8, i8* %28) #3, !dbg !1817
  %29 = load %struct._object*, %struct._object** %retval, !dbg !1817
  ret %struct._object* %29, !dbg !1817
}

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #3

; Function Attrs: nounwind uwtable
define %struct._object* @PyMemoryView_FromBuffer(%struct.bufferinfo* %info) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %info.addr = alloca %struct.bufferinfo*, align 8
  %mbuf = alloca %struct._PyManagedBufferObject*, align 8
  %mv = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.bufferinfo* %info, %struct.bufferinfo** %info.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %info.addr, metadata !436, metadata !1538), !dbg !1818
  %0 = bitcast %struct._PyManagedBufferObject** %mbuf to i8*, !dbg !1819
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !1819
  call void @llvm.dbg.declare(metadata %struct._PyManagedBufferObject** %mbuf, metadata !437, metadata !1538), !dbg !1820
  %1 = bitcast %struct._object** %mv to i8*, !dbg !1821
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !1821
  call void @llvm.dbg.declare(metadata %struct._object** %mv, metadata !438, metadata !1538), !dbg !1822
  %2 = load %struct.bufferinfo*, %struct.bufferinfo** %info.addr, align 8, !dbg !1823, !tbaa !1534
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %2, i32 0, i32 0, !dbg !1825
  %3 = load i8*, i8** %buf, align 8, !dbg !1825, !tbaa !1826
  %cmp = icmp eq i8* %3, null, !dbg !1827
  br i1 %cmp, label %if.then, label %if.end, !dbg !1828

if.then:                                          ; preds = %entry
  %4 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !1829, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i32 0, i32 0)), !dbg !1831
  store %struct._object* null, %struct._object** %retval, !dbg !1832
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1832

if.end:                                           ; preds = %entry
  %call = call %struct._PyManagedBufferObject* @mbuf_alloc(), !dbg !1833
  store %struct._PyManagedBufferObject* %call, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !1834, !tbaa !1534
  %5 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !1835, !tbaa !1534
  %cmp1 = icmp eq %struct._PyManagedBufferObject* %5, null, !dbg !1837
  br i1 %cmp1, label %if.then.2, label %if.end.3, !dbg !1838

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !1839
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1839

if.end.3:                                         ; preds = %if.end
  %6 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !1840, !tbaa !1534
  %master = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %6, i32 0, i32 3, !dbg !1841
  %7 = load %struct.bufferinfo*, %struct.bufferinfo** %info.addr, align 8, !dbg !1842, !tbaa !1534
  %8 = bitcast %struct.bufferinfo* %master to i8*, !dbg !1843
  %9 = bitcast %struct.bufferinfo* %7 to i8*, !dbg !1843
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 80, i32 8, i1 false), !dbg !1843, !tbaa.struct !1844
  %10 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !1845, !tbaa !1534
  %master4 = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %10, i32 0, i32 3, !dbg !1846
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %master4, i32 0, i32 1, !dbg !1847
  store %struct._object* null, %struct._object** %obj, align 8, !dbg !1848, !tbaa !1569
  %11 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !1849, !tbaa !1534
  %call5 = call %struct._object* @mbuf_add_view(%struct._PyManagedBufferObject* %11, %struct.bufferinfo* null), !dbg !1850
  store %struct._object* %call5, %struct._object** %mv, align 8, !dbg !1851, !tbaa !1534
  br label %do.body, !dbg !1852

do.body:                                          ; preds = %if.end.3
  %12 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !1853
  call void @llvm.lifetime.start(i64 8, i8* %12) #3, !dbg !1853
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !439, metadata !1538), !dbg !1855
  %13 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !1856, !tbaa !1534
  %14 = bitcast %struct._PyManagedBufferObject* %13 to %struct._object*, !dbg !1857
  store %struct._object* %14, %struct._object** %_py_decref_tmp, align 8, !dbg !1855, !tbaa !1534
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1858, !tbaa !1534
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0, !dbg !1860
  %16 = load i64, i64* %ob_refcnt, align 8, !dbg !1861, !tbaa !1642
  %dec = add i64 %16, -1, !dbg !1861
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !1861, !tbaa !1642
  %cmp6 = icmp ne i64 %dec, 0, !dbg !1862
  br i1 %cmp6, label %if.then.7, label %if.else, !dbg !1863

if.then.7:                                        ; preds = %do.body
  br label %if.end.8, !dbg !1864

if.else:                                          ; preds = %do.body
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1866, !tbaa !1534
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 1, !dbg !1868
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !1868, !tbaa !1650
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i32 0, i32 4, !dbg !1869
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !1869, !tbaa !1652
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1870, !tbaa !1534
  call void %19(%struct._object* %20), !dbg !1871
  br label %if.end.8

if.end.8:                                         ; preds = %if.else, %if.then.7
  %21 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !1872
  call void @llvm.lifetime.end(i64 8, i8* %21) #3, !dbg !1872
  br label %do.cond, !dbg !1874

do.cond:                                          ; preds = %if.end.8
  br label %do.end, !dbg !1875

do.end:                                           ; preds = %do.cond
  %22 = load %struct._object*, %struct._object** %mv, align 8, !dbg !1877, !tbaa !1534
  store %struct._object* %22, %struct._object** %retval, !dbg !1878
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1878

cleanup:                                          ; preds = %do.end, %if.then.2, %if.then
  %23 = bitcast %struct._object** %mv to i8*, !dbg !1879
  call void @llvm.lifetime.end(i64 8, i8* %23) #3, !dbg !1879
  %24 = bitcast %struct._PyManagedBufferObject** %mbuf to i8*, !dbg !1879
  call void @llvm.lifetime.end(i64 8, i8* %24) #3, !dbg !1879
  %25 = load %struct._object*, %struct._object** %retval, !dbg !1879
  ret %struct._object* %25, !dbg !1879
}

declare void @PyErr_SetString(%struct._object*, i8*) #1

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #3

; Function Attrs: nounwind uwtable
define %struct._object* @PyMemoryView_FromObject(%struct._object* %v) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %v.addr = alloca %struct._object*, align 8
  %mbuf = alloca %struct._PyManagedBufferObject*, align 8
  %mv = alloca %struct.PyMemoryViewObject*, align 8
  %cleanup.dest.slot = alloca i32
  %ret = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %v, %struct._object** %v.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._object** %v.addr, metadata !443, metadata !1538), !dbg !1880
  %0 = bitcast %struct._PyManagedBufferObject** %mbuf to i8*, !dbg !1881
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !1881
  call void @llvm.dbg.declare(metadata %struct._PyManagedBufferObject** %mbuf, metadata !444, metadata !1538), !dbg !1882
  %1 = load %struct._object*, %struct._object** %v.addr, align 8, !dbg !1883, !tbaa !1534
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !1884
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !1884, !tbaa !1650
  %cmp = icmp eq %struct._typeobject* %2, @PyMemoryView_Type, !dbg !1885
  br i1 %cmp, label %if.then, label %if.else, !dbg !1886

if.then:                                          ; preds = %entry
  %3 = bitcast %struct.PyMemoryViewObject** %mv to i8*, !dbg !1887
  call void @llvm.lifetime.start(i64 8, i8* %3) #3, !dbg !1887
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %mv, metadata !445, metadata !1538), !dbg !1888
  %4 = load %struct._object*, %struct._object** %v.addr, align 8, !dbg !1889, !tbaa !1534
  %5 = bitcast %struct._object* %4 to %struct.PyMemoryViewObject*, !dbg !1890
  store %struct.PyMemoryViewObject* %5, %struct.PyMemoryViewObject** %mv, align 8, !dbg !1888, !tbaa !1534
  %6 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !1891, !tbaa !1534
  %flags = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %6, i32 0, i32 3, !dbg !1893
  %7 = load i32, i32* %flags, align 4, !dbg !1893, !tbaa !1894
  %and = and i32 %7, 1, !dbg !1895
  %tobool = icmp ne i32 %and, 0, !dbg !1895
  br i1 %tobool, label %if.then.5, label %lor.lhs.false, !dbg !1896

lor.lhs.false:                                    ; preds = %if.then
  %8 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !1897, !tbaa !1534
  %mbuf1 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %8, i32 0, i32 1, !dbg !1899
  %9 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf1, align 8, !dbg !1899, !tbaa !1805
  %flags2 = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %9, i32 0, i32 1, !dbg !1900
  %10 = load i32, i32* %flags2, align 4, !dbg !1900, !tbaa !1545
  %and3 = and i32 %10, 1, !dbg !1901
  %tobool4 = icmp ne i32 %and3, 0, !dbg !1901
  br i1 %tobool4, label %if.then.5, label %if.end, !dbg !1902

if.then.5:                                        ; preds = %lor.lhs.false, %if.then
  %11 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !1903, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %11, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2, i32 0, i32 0)), !dbg !1907
  store %struct._object* null, %struct._object** %retval, !dbg !1908
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1908

if.end:                                           ; preds = %lor.lhs.false
  %12 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !1909, !tbaa !1534
  %mbuf6 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %12, i32 0, i32 1, !dbg !1910
  %13 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf6, align 8, !dbg !1910, !tbaa !1805
  %14 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !1911, !tbaa !1534
  %view = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %14, i32 0, i32 5, !dbg !1912
  %call = call %struct._object* @mbuf_add_view(%struct._PyManagedBufferObject* %13, %struct.bufferinfo* %view), !dbg !1913
  store %struct._object* %call, %struct._object** %retval, !dbg !1914
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1914

cleanup:                                          ; preds = %if.end, %if.then.5
  %15 = bitcast %struct.PyMemoryViewObject** %mv to i8*, !dbg !1915
  call void @llvm.lifetime.end(i64 8, i8* %15) #3, !dbg !1915
  br label %cleanup.28

if.else:                                          ; preds = %entry
  %16 = load %struct._object*, %struct._object** %v.addr, align 8, !dbg !1916, !tbaa !1534
  %ob_type7 = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1, !dbg !1917
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type7, align 8, !dbg !1917, !tbaa !1650
  %tp_as_buffer = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 18, !dbg !1918
  %18 = load %struct.PyBufferProcs*, %struct.PyBufferProcs** %tp_as_buffer, align 8, !dbg !1918, !tbaa !1919
  %cmp8 = icmp ne %struct.PyBufferProcs* %18, null, !dbg !1920
  br i1 %cmp8, label %land.lhs.true, label %if.end.24, !dbg !1921

land.lhs.true:                                    ; preds = %if.else
  %19 = load %struct._object*, %struct._object** %v.addr, align 8, !dbg !1922, !tbaa !1534
  %ob_type9 = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 1, !dbg !1924
  %20 = load %struct._typeobject*, %struct._typeobject** %ob_type9, align 8, !dbg !1924, !tbaa !1650
  %tp_as_buffer10 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %20, i32 0, i32 18, !dbg !1925
  %21 = load %struct.PyBufferProcs*, %struct.PyBufferProcs** %tp_as_buffer10, align 8, !dbg !1925, !tbaa !1919
  %bf_getbuffer = getelementptr inbounds %struct.PyBufferProcs, %struct.PyBufferProcs* %21, i32 0, i32 0, !dbg !1926
  %22 = load i32 (%struct._object*, %struct.bufferinfo*, i32)*, i32 (%struct._object*, %struct.bufferinfo*, i32)** %bf_getbuffer, align 8, !dbg !1926, !tbaa !1927
  %cmp11 = icmp ne i32 (%struct._object*, %struct.bufferinfo*, i32)* %22, null, !dbg !1929
  br i1 %cmp11, label %if.then.12, label %if.end.24, !dbg !1930

if.then.12:                                       ; preds = %land.lhs.true
  %23 = bitcast %struct._object** %ret to i8*, !dbg !1931
  call void @llvm.lifetime.start(i64 8, i8* %23) #3, !dbg !1931
  call void @llvm.dbg.declare(metadata %struct._object** %ret, metadata !448, metadata !1538), !dbg !1932
  %24 = load %struct._object*, %struct._object** %v.addr, align 8, !dbg !1933, !tbaa !1534
  %call13 = call %struct._object* @_PyManagedBuffer_FromObject(%struct._object* %24), !dbg !1934
  %25 = bitcast %struct._object* %call13 to %struct._PyManagedBufferObject*, !dbg !1935
  store %struct._PyManagedBufferObject* %25, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !1936, !tbaa !1534
  %26 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !1937, !tbaa !1534
  %cmp14 = icmp eq %struct._PyManagedBufferObject* %26, null, !dbg !1939
  br i1 %cmp14, label %if.then.15, label %if.end.16, !dbg !1940

if.then.15:                                       ; preds = %if.then.12
  store %struct._object* null, %struct._object** %retval, !dbg !1941
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.23, !dbg !1941

if.end.16:                                        ; preds = %if.then.12
  %27 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !1942, !tbaa !1534
  %call17 = call %struct._object* @mbuf_add_view(%struct._PyManagedBufferObject* %27, %struct.bufferinfo* null), !dbg !1943
  store %struct._object* %call17, %struct._object** %ret, align 8, !dbg !1944, !tbaa !1534
  br label %do.body, !dbg !1945

do.body:                                          ; preds = %if.end.16
  %28 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !1946
  call void @llvm.lifetime.start(i64 8, i8* %28) #3, !dbg !1946
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !451, metadata !1538), !dbg !1948
  %29 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !1949, !tbaa !1534
  %30 = bitcast %struct._PyManagedBufferObject* %29 to %struct._object*, !dbg !1950
  store %struct._object* %30, %struct._object** %_py_decref_tmp, align 8, !dbg !1948, !tbaa !1534
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1951, !tbaa !1534
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 0, !dbg !1953
  %32 = load i64, i64* %ob_refcnt, align 8, !dbg !1954, !tbaa !1642
  %dec = add i64 %32, -1, !dbg !1954
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !1954, !tbaa !1642
  %cmp18 = icmp ne i64 %dec, 0, !dbg !1955
  br i1 %cmp18, label %if.then.19, label %if.else.20, !dbg !1956

if.then.19:                                       ; preds = %do.body
  br label %if.end.22, !dbg !1957

if.else.20:                                       ; preds = %do.body
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1959, !tbaa !1534
  %ob_type21 = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 1, !dbg !1961
  %34 = load %struct._typeobject*, %struct._typeobject** %ob_type21, align 8, !dbg !1961, !tbaa !1650
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %34, i32 0, i32 4, !dbg !1962
  %35 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !1962, !tbaa !1652
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1963, !tbaa !1534
  call void %35(%struct._object* %36), !dbg !1964
  br label %if.end.22

if.end.22:                                        ; preds = %if.else.20, %if.then.19
  %37 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !1965
  call void @llvm.lifetime.end(i64 8, i8* %37) #3, !dbg !1965
  br label %do.cond, !dbg !1967

do.cond:                                          ; preds = %if.end.22
  br label %do.end, !dbg !1968

do.end:                                           ; preds = %do.cond
  %38 = load %struct._object*, %struct._object** %ret, align 8, !dbg !1970, !tbaa !1534
  store %struct._object* %38, %struct._object** %retval, !dbg !1971
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.23, !dbg !1971

cleanup.23:                                       ; preds = %do.end, %if.then.15
  %39 = bitcast %struct._object** %ret to i8*, !dbg !1972
  call void @llvm.lifetime.end(i64 8, i8* %39) #3, !dbg !1972
  br label %cleanup.28

if.end.24:                                        ; preds = %land.lhs.true, %if.else
  br label %if.end.25

if.end.25:                                        ; preds = %if.end.24
  %40 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !1973, !tbaa !1534
  %41 = load %struct._object*, %struct._object** %v.addr, align 8, !dbg !1974, !tbaa !1534
  %ob_type26 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 1, !dbg !1975
  %42 = load %struct._typeobject*, %struct._typeobject** %ob_type26, align 8, !dbg !1975, !tbaa !1650
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %42, i32 0, i32 1, !dbg !1976
  %43 = load i8*, i8** %tp_name, align 8, !dbg !1976, !tbaa !1977
  %call27 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %40, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.3, i32 0, i32 0), i8* %43), !dbg !1978
  store %struct._object* null, %struct._object** %retval, !dbg !1979
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.28, !dbg !1979

cleanup.28:                                       ; preds = %if.end.25, %cleanup.23, %cleanup
  %44 = bitcast %struct._PyManagedBufferObject** %mbuf to i8*, !dbg !1980
  call void @llvm.lifetime.end(i64 8, i8* %44) #3, !dbg !1980
  %45 = load %struct._object*, %struct._object** %retval, !dbg !1980
  ret %struct._object* %45, !dbg !1980
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @_PyManagedBuffer_FromObject(%struct._object* %base) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %base.addr = alloca %struct._object*, align 8
  %mbuf = alloca %struct._PyManagedBufferObject*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %base, %struct._object** %base.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._object** %base.addr, metadata !549, metadata !1538), !dbg !1981
  %0 = bitcast %struct._PyManagedBufferObject** %mbuf to i8*, !dbg !1982
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !1982
  call void @llvm.dbg.declare(metadata %struct._PyManagedBufferObject** %mbuf, metadata !550, metadata !1538), !dbg !1983
  %call = call %struct._PyManagedBufferObject* @mbuf_alloc(), !dbg !1984
  store %struct._PyManagedBufferObject* %call, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !1985, !tbaa !1534
  %1 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !1986, !tbaa !1534
  %cmp = icmp eq %struct._PyManagedBufferObject* %1, null, !dbg !1988
  br i1 %cmp, label %if.then, label %if.end, !dbg !1989

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !1990
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1990

if.end:                                           ; preds = %entry
  %2 = load %struct._object*, %struct._object** %base.addr, align 8, !dbg !1991, !tbaa !1534
  %3 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !1992, !tbaa !1534
  %master = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %3, i32 0, i32 3, !dbg !1993
  %call1 = call i32 @PyObject_GetBuffer(%struct._object* %2, %struct.bufferinfo* %master, i32 284), !dbg !1994
  %cmp2 = icmp slt i32 %call1, 0, !dbg !1995
  br i1 %cmp2, label %if.then.3, label %if.end.8, !dbg !1996

if.then.3:                                        ; preds = %if.end
  %4 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !1997, !tbaa !1534
  %master4 = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %4, i32 0, i32 3, !dbg !1998
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %master4, i32 0, i32 1, !dbg !1999
  store %struct._object* null, %struct._object** %obj, align 8, !dbg !2000, !tbaa !1569
  br label %do.body, !dbg !2001

do.body:                                          ; preds = %if.then.3
  %5 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2002
  call void @llvm.lifetime.start(i64 8, i8* %5) #3, !dbg !2002
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !551, metadata !1538), !dbg !2004
  %6 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !2005, !tbaa !1534
  %7 = bitcast %struct._PyManagedBufferObject* %6 to %struct._object*, !dbg !2006
  store %struct._object* %7, %struct._object** %_py_decref_tmp, align 8, !dbg !2004, !tbaa !1534
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2007, !tbaa !1534
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !2009
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !2010, !tbaa !1642
  %dec = add i64 %9, -1, !dbg !2010
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !2010, !tbaa !1642
  %cmp5 = icmp ne i64 %dec, 0, !dbg !2011
  br i1 %cmp5, label %if.then.6, label %if.else, !dbg !2012

if.then.6:                                        ; preds = %do.body
  br label %if.end.7, !dbg !2013

if.else:                                          ; preds = %do.body
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2015, !tbaa !1534
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !2017
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2017, !tbaa !1650
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 4, !dbg !2018
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2018, !tbaa !1652
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2019, !tbaa !1534
  call void %12(%struct._object* %13), !dbg !2020
  br label %if.end.7

if.end.7:                                         ; preds = %if.else, %if.then.6
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2021
  call void @llvm.lifetime.end(i64 8, i8* %14) #3, !dbg !2021
  br label %do.cond, !dbg !2023

do.cond:                                          ; preds = %if.end.7
  br label %do.end, !dbg !2024

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !2026
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2026

if.end.8:                                         ; preds = %if.end
  %15 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !2027, !tbaa !1534
  %16 = bitcast %struct._PyManagedBufferObject* %15 to %struct._object*, !dbg !2028
  store %struct._object* %16, %struct._object** %retval, !dbg !2029
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2029

cleanup:                                          ; preds = %if.end.8, %do.end, %if.then
  %17 = bitcast %struct._PyManagedBufferObject** %mbuf to i8*, !dbg !2030
  call void @llvm.lifetime.end(i64 8, i8* %17) #3, !dbg !2030
  %18 = load %struct._object*, %struct._object** %retval, !dbg !2030
  ret %struct._object* %18, !dbg !2030
}

declare %struct._object* @PyErr_Format(%struct._object*, i8*, ...) #1

; Function Attrs: nounwind uwtable
define %struct._object* @PyMemoryView_GetContiguous(%struct._object* %obj, i32 %buffertype, i8 signext %order) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %obj.addr = alloca %struct._object*, align 8
  %buffertype.addr = alloca i32, align 4
  %order.addr = alloca i8, align 1
  %mv = alloca %struct.PyMemoryViewObject*, align 8
  %ret = alloca %struct._object*, align 8
  %view = alloca %struct.bufferinfo*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp15 = alloca %struct._object*, align 8
  %_py_decref_tmp29 = alloca %struct._object*, align 8
  store %struct._object* %obj, %struct._object** %obj.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._object** %obj.addr, metadata !457, metadata !1538), !dbg !2031
  store i32 %buffertype, i32* %buffertype.addr, align 4, !tbaa !1580
  call void @llvm.dbg.declare(metadata i32* %buffertype.addr, metadata !458, metadata !1538), !dbg !2032
  store i8 %order, i8* %order.addr, align 1, !tbaa !2033
  call void @llvm.dbg.declare(metadata i8* %order.addr, metadata !459, metadata !1538), !dbg !2034
  %0 = bitcast %struct.PyMemoryViewObject** %mv to i8*, !dbg !2035
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !2035
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %mv, metadata !460, metadata !1538), !dbg !2036
  %1 = bitcast %struct._object** %ret to i8*, !dbg !2037
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !2037
  call void @llvm.dbg.declare(metadata %struct._object** %ret, metadata !461, metadata !1538), !dbg !2038
  %2 = bitcast %struct.bufferinfo** %view to i8*, !dbg !2039
  call void @llvm.lifetime.start(i64 8, i8* %2) #3, !dbg !2039
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %view, metadata !462, metadata !1538), !dbg !2040
  %3 = load %struct._object*, %struct._object** %obj.addr, align 8, !dbg !2041, !tbaa !1534
  %call = call %struct._object* @PyMemoryView_FromObject(%struct._object* %3), !dbg !2042
  %4 = bitcast %struct._object* %call to %struct.PyMemoryViewObject*, !dbg !2043
  store %struct.PyMemoryViewObject* %4, %struct.PyMemoryViewObject** %mv, align 8, !dbg !2044, !tbaa !1534
  %5 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !2045, !tbaa !1534
  %cmp = icmp eq %struct.PyMemoryViewObject* %5, null, !dbg !2047
  br i1 %cmp, label %if.then, label %if.end, !dbg !2048

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !2049
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2049

if.end:                                           ; preds = %entry
  %6 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !2050, !tbaa !1534
  %view1 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %6, i32 0, i32 5, !dbg !2051
  store %struct.bufferinfo* %view1, %struct.bufferinfo** %view, align 8, !dbg !2052, !tbaa !1534
  %7 = load i32, i32* %buffertype.addr, align 4, !dbg !2053, !tbaa !1580
  %cmp2 = icmp eq i32 %7, 512, !dbg !2054
  br i1 %cmp2, label %land.lhs.true, label %if.end.7, !dbg !2055

land.lhs.true:                                    ; preds = %if.end
  %8 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !2056, !tbaa !1534
  %readonly = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %8, i32 0, i32 4, !dbg !2058
  %9 = load i32, i32* %readonly, align 4, !dbg !2058, !tbaa !2059
  %tobool = icmp ne i32 %9, 0, !dbg !2060
  br i1 %tobool, label %if.then.3, label %if.end.7, !dbg !2061

if.then.3:                                        ; preds = %land.lhs.true
  %10 = load %struct._object*, %struct._object** @PyExc_BufferError, align 8, !dbg !2062, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %10, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i32 0, i32 0)), !dbg !2063
  br label %do.body, !dbg !2064

do.body:                                          ; preds = %if.then.3
  %11 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2065
  call void @llvm.lifetime.start(i64 8, i8* %11) #3, !dbg !2065
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !463, metadata !1538), !dbg !2067
  %12 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !2068, !tbaa !1534
  %13 = bitcast %struct.PyMemoryViewObject* %12 to %struct._object*, !dbg !2069
  store %struct._object* %13, %struct._object** %_py_decref_tmp, align 8, !dbg !2067, !tbaa !1534
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2070, !tbaa !1534
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0, !dbg !2072
  %15 = load i64, i64* %ob_refcnt, align 8, !dbg !2073, !tbaa !1642
  %dec = add i64 %15, -1, !dbg !2073
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !2073, !tbaa !1642
  %cmp4 = icmp ne i64 %dec, 0, !dbg !2074
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !2075

if.then.5:                                        ; preds = %do.body
  br label %if.end.6, !dbg !2076

if.else:                                          ; preds = %do.body
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2078, !tbaa !1534
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1, !dbg !2080
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2080, !tbaa !1650
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 4, !dbg !2081
  %18 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2081, !tbaa !1652
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2082, !tbaa !1534
  call void %18(%struct._object* %19), !dbg !2083
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.5
  %20 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2084
  call void @llvm.lifetime.end(i64 8, i8* %20) #3, !dbg !2084
  br label %do.cond, !dbg !2086

do.cond:                                          ; preds = %if.end.6
  br label %do.end, !dbg !2087

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !2089
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2089

if.end.7:                                         ; preds = %land.lhs.true, %if.end
  %21 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !2090, !tbaa !1534
  %22 = load i8, i8* %order.addr, align 1, !dbg !2092, !tbaa !2033
  %call8 = call i32 @PyBuffer_IsContiguous(%struct.bufferinfo* %21, i8 signext %22), !dbg !2093
  %tobool9 = icmp ne i32 %call8, 0, !dbg !2093
  br i1 %tobool9, label %if.then.10, label %if.end.11, !dbg !2094

if.then.10:                                       ; preds = %if.end.7
  %23 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !2095, !tbaa !1534
  %24 = bitcast %struct.PyMemoryViewObject* %23 to %struct._object*, !dbg !2096
  store %struct._object* %24, %struct._object** %retval, !dbg !2097
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2097

if.end.11:                                        ; preds = %if.end.7
  %25 = load i32, i32* %buffertype.addr, align 4, !dbg !2098, !tbaa !1580
  %cmp12 = icmp eq i32 %25, 512, !dbg !2099
  br i1 %cmp12, label %if.then.13, label %if.end.26, !dbg !2100

if.then.13:                                       ; preds = %if.end.11
  %26 = load %struct._object*, %struct._object** @PyExc_BufferError, align 8, !dbg !2101, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %26, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.5, i32 0, i32 0)), !dbg !2102
  br label %do.body.14, !dbg !2103

do.body.14:                                       ; preds = %if.then.13
  %27 = bitcast %struct._object** %_py_decref_tmp15 to i8*, !dbg !2104
  call void @llvm.lifetime.start(i64 8, i8* %27) #3, !dbg !2104
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp15, metadata !467, metadata !1538), !dbg !2106
  %28 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !2107, !tbaa !1534
  %29 = bitcast %struct.PyMemoryViewObject* %28 to %struct._object*, !dbg !2108
  store %struct._object* %29, %struct._object** %_py_decref_tmp15, align 8, !dbg !2106, !tbaa !1534
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !2109, !tbaa !1534
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %30, i32 0, i32 0, !dbg !2111
  %31 = load i64, i64* %ob_refcnt16, align 8, !dbg !2112, !tbaa !1642
  %dec17 = add i64 %31, -1, !dbg !2112
  store i64 %dec17, i64* %ob_refcnt16, align 8, !dbg !2112, !tbaa !1642
  %cmp18 = icmp ne i64 %dec17, 0, !dbg !2113
  br i1 %cmp18, label %if.then.19, label %if.else.20, !dbg !2114

if.then.19:                                       ; preds = %do.body.14
  br label %if.end.23, !dbg !2115

if.else.20:                                       ; preds = %do.body.14
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !2117, !tbaa !1534
  %ob_type21 = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 1, !dbg !2119
  %33 = load %struct._typeobject*, %struct._typeobject** %ob_type21, align 8, !dbg !2119, !tbaa !1650
  %tp_dealloc22 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %33, i32 0, i32 4, !dbg !2120
  %34 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc22, align 8, !dbg !2120, !tbaa !1652
  %35 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !2121, !tbaa !1534
  call void %34(%struct._object* %35), !dbg !2122
  br label %if.end.23

if.end.23:                                        ; preds = %if.else.20, %if.then.19
  %36 = bitcast %struct._object** %_py_decref_tmp15 to i8*, !dbg !2123
  call void @llvm.lifetime.end(i64 8, i8* %36) #3, !dbg !2123
  br label %do.cond.24, !dbg !2125

do.cond.24:                                       ; preds = %if.end.23
  br label %do.end.25, !dbg !2126

do.end.25:                                        ; preds = %do.cond.24
  store %struct._object* null, %struct._object** %retval, !dbg !2128
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2128

if.end.26:                                        ; preds = %if.end.11
  %37 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !2129, !tbaa !1534
  %38 = load i8, i8* %order.addr, align 1, !dbg !2130, !tbaa !2033
  %call27 = call %struct._object* @memory_from_contiguous_copy(%struct.bufferinfo* %37, i8 signext %38), !dbg !2131
  store %struct._object* %call27, %struct._object** %ret, align 8, !dbg !2132, !tbaa !1534
  br label %do.body.28, !dbg !2133

do.body.28:                                       ; preds = %if.end.26
  %39 = bitcast %struct._object** %_py_decref_tmp29 to i8*, !dbg !2134
  call void @llvm.lifetime.start(i64 8, i8* %39) #3, !dbg !2134
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp29, metadata !471, metadata !1538), !dbg !2136
  %40 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !2137, !tbaa !1534
  %41 = bitcast %struct.PyMemoryViewObject* %40 to %struct._object*, !dbg !2138
  store %struct._object* %41, %struct._object** %_py_decref_tmp29, align 8, !dbg !2136, !tbaa !1534
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp29, align 8, !dbg !2139, !tbaa !1534
  %ob_refcnt30 = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 0, !dbg !2141
  %43 = load i64, i64* %ob_refcnt30, align 8, !dbg !2142, !tbaa !1642
  %dec31 = add i64 %43, -1, !dbg !2142
  store i64 %dec31, i64* %ob_refcnt30, align 8, !dbg !2142, !tbaa !1642
  %cmp32 = icmp ne i64 %dec31, 0, !dbg !2143
  br i1 %cmp32, label %if.then.33, label %if.else.34, !dbg !2144

if.then.33:                                       ; preds = %do.body.28
  br label %if.end.37, !dbg !2145

if.else.34:                                       ; preds = %do.body.28
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp29, align 8, !dbg !2147, !tbaa !1534
  %ob_type35 = getelementptr inbounds %struct._object, %struct._object* %44, i32 0, i32 1, !dbg !2149
  %45 = load %struct._typeobject*, %struct._typeobject** %ob_type35, align 8, !dbg !2149, !tbaa !1650
  %tp_dealloc36 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %45, i32 0, i32 4, !dbg !2150
  %46 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc36, align 8, !dbg !2150, !tbaa !1652
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp29, align 8, !dbg !2151, !tbaa !1534
  call void %46(%struct._object* %47), !dbg !2152
  br label %if.end.37

if.end.37:                                        ; preds = %if.else.34, %if.then.33
  %48 = bitcast %struct._object** %_py_decref_tmp29 to i8*, !dbg !2153
  call void @llvm.lifetime.end(i64 8, i8* %48) #3, !dbg !2153
  br label %do.cond.38, !dbg !2155

do.cond.38:                                       ; preds = %if.end.37
  br label %do.end.39, !dbg !2156

do.end.39:                                        ; preds = %do.cond.38
  %49 = load %struct._object*, %struct._object** %ret, align 8, !dbg !2158, !tbaa !1534
  store %struct._object* %49, %struct._object** %retval, !dbg !2159
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2159

cleanup:                                          ; preds = %do.end.39, %do.end.25, %if.then.10, %do.end, %if.then
  %50 = bitcast %struct.bufferinfo** %view to i8*, !dbg !2160
  call void @llvm.lifetime.end(i64 8, i8* %50) #3, !dbg !2160
  %51 = bitcast %struct._object** %ret to i8*, !dbg !2160
  call void @llvm.lifetime.end(i64 8, i8* %51) #3, !dbg !2160
  %52 = bitcast %struct.PyMemoryViewObject** %mv to i8*, !dbg !2160
  call void @llvm.lifetime.end(i64 8, i8* %52) #3, !dbg !2160
  %53 = load %struct._object*, %struct._object** %retval, !dbg !2160
  ret %struct._object* %53, !dbg !2160
}

declare i32 @PyBuffer_IsContiguous(%struct.bufferinfo*, i8 signext) #1

; Function Attrs: nounwind uwtable
define internal %struct._object* @memory_from_contiguous_copy(%struct.bufferinfo* %src, i8 signext %order) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %src.addr = alloca %struct.bufferinfo*, align 8
  %order.addr = alloca i8, align 1
  %mbuf = alloca %struct._PyManagedBufferObject*, align 8
  %mv = alloca %struct.PyMemoryViewObject*, align 8
  %bytes = alloca %struct._object*, align 8
  %dest = alloca %struct.bufferinfo*, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp12 = alloca %struct._object*, align 8
  %_py_decref_tmp26 = alloca %struct._object*, align 8
  %_py_decref_tmp59 = alloca %struct._object*, align 8
  store %struct.bufferinfo* %src, %struct.bufferinfo** %src.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %src.addr, metadata !559, metadata !1538), !dbg !2161
  store i8 %order, i8* %order.addr, align 1, !tbaa !2033
  call void @llvm.dbg.declare(metadata i8* %order.addr, metadata !560, metadata !1538), !dbg !2162
  %0 = bitcast %struct._PyManagedBufferObject** %mbuf to i8*, !dbg !2163
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !2163
  call void @llvm.dbg.declare(metadata %struct._PyManagedBufferObject** %mbuf, metadata !561, metadata !1538), !dbg !2164
  %1 = bitcast %struct.PyMemoryViewObject** %mv to i8*, !dbg !2165
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !2165
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %mv, metadata !562, metadata !1538), !dbg !2166
  %2 = bitcast %struct._object** %bytes to i8*, !dbg !2167
  call void @llvm.lifetime.start(i64 8, i8* %2) #3, !dbg !2167
  call void @llvm.dbg.declare(metadata %struct._object** %bytes, metadata !563, metadata !1538), !dbg !2168
  %3 = bitcast %struct.bufferinfo** %dest to i8*, !dbg !2169
  call void @llvm.lifetime.start(i64 8, i8* %3) #3, !dbg !2169
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %dest, metadata !564, metadata !1538), !dbg !2170
  %4 = bitcast i32* %i to i8*, !dbg !2171
  call void @llvm.lifetime.start(i64 4, i8* %4) #3, !dbg !2171
  call void @llvm.dbg.declare(metadata i32* %i, metadata !565, metadata !1538), !dbg !2172
  %5 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2173, !tbaa !1534
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %5, i32 0, i32 2, !dbg !2174
  %6 = load i64, i64* %len, align 8, !dbg !2174, !tbaa !2175
  %call = call %struct._object* @PyBytes_FromStringAndSize(i8* null, i64 %6), !dbg !2176
  store %struct._object* %call, %struct._object** %bytes, align 8, !dbg !2177, !tbaa !1534
  %7 = load %struct._object*, %struct._object** %bytes, align 8, !dbg !2178, !tbaa !1534
  %cmp = icmp eq %struct._object* %7, null, !dbg !2180
  br i1 %cmp, label %if.then, label %if.end, !dbg !2181

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !2182
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2182

if.end:                                           ; preds = %entry
  %8 = load %struct._object*, %struct._object** %bytes, align 8, !dbg !2183, !tbaa !1534
  %call1 = call %struct._object* @_PyManagedBuffer_FromObject(%struct._object* %8), !dbg !2184
  %9 = bitcast %struct._object* %call1 to %struct._PyManagedBufferObject*, !dbg !2185
  store %struct._PyManagedBufferObject* %9, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !2186, !tbaa !1534
  br label %do.body, !dbg !2187

do.body:                                          ; preds = %if.end
  %10 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2188
  call void @llvm.lifetime.start(i64 8, i8* %10) #3, !dbg !2188
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !566, metadata !1538), !dbg !2190
  %11 = load %struct._object*, %struct._object** %bytes, align 8, !dbg !2191, !tbaa !1534
  store %struct._object* %11, %struct._object** %_py_decref_tmp, align 8, !dbg !2190, !tbaa !1534
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2192, !tbaa !1534
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 0, !dbg !2194
  %13 = load i64, i64* %ob_refcnt, align 8, !dbg !2195, !tbaa !1642
  %dec = add i64 %13, -1, !dbg !2195
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !2195, !tbaa !1642
  %cmp2 = icmp ne i64 %dec, 0, !dbg !2196
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !2197

if.then.3:                                        ; preds = %do.body
  br label %if.end.4, !dbg !2198

if.else:                                          ; preds = %do.body
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2200, !tbaa !1534
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 1, !dbg !2202
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2202, !tbaa !1650
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i32 0, i32 4, !dbg !2203
  %16 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2203, !tbaa !1652
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2204, !tbaa !1534
  call void %16(%struct._object* %17), !dbg !2205
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %if.then.3
  %18 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2206
  call void @llvm.lifetime.end(i64 8, i8* %18) #3, !dbg !2206
  br label %do.cond, !dbg !2208

do.cond:                                          ; preds = %if.end.4
  br label %do.end, !dbg !2209

do.end:                                           ; preds = %do.cond
  %19 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !2211, !tbaa !1534
  %cmp5 = icmp eq %struct._PyManagedBufferObject* %19, null, !dbg !2213
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !2214

if.then.6:                                        ; preds = %do.end
  store %struct._object* null, %struct._object** %retval, !dbg !2215
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2215

if.end.7:                                         ; preds = %do.end
  %20 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !2216, !tbaa !1534
  %21 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2217, !tbaa !1534
  %format = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %21, i32 0, i32 6, !dbg !2218
  %22 = load i8*, i8** %format, align 8, !dbg !2218, !tbaa !2219
  %call8 = call i32 @mbuf_copy_format(%struct._PyManagedBufferObject* %20, i8* %22), !dbg !2220
  %cmp9 = icmp slt i32 %call8, 0, !dbg !2221
  br i1 %cmp9, label %if.then.10, label %if.end.23, !dbg !2222

if.then.10:                                       ; preds = %if.end.7
  br label %do.body.11, !dbg !2223

do.body.11:                                       ; preds = %if.then.10
  %23 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !2224
  call void @llvm.lifetime.start(i64 8, i8* %23) #3, !dbg !2224
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp12, metadata !568, metadata !1538), !dbg !2226
  %24 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !2227, !tbaa !1534
  %25 = bitcast %struct._PyManagedBufferObject* %24 to %struct._object*, !dbg !2228
  store %struct._object* %25, %struct._object** %_py_decref_tmp12, align 8, !dbg !2226, !tbaa !1534
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !2229, !tbaa !1534
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 0, !dbg !2231
  %27 = load i64, i64* %ob_refcnt13, align 8, !dbg !2232, !tbaa !1642
  %dec14 = add i64 %27, -1, !dbg !2232
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !2232, !tbaa !1642
  %cmp15 = icmp ne i64 %dec14, 0, !dbg !2233
  br i1 %cmp15, label %if.then.16, label %if.else.17, !dbg !2234

if.then.16:                                       ; preds = %do.body.11
  br label %if.end.20, !dbg !2235

if.else.17:                                       ; preds = %do.body.11
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !2237, !tbaa !1534
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 1, !dbg !2239
  %29 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !2239, !tbaa !1650
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %29, i32 0, i32 4, !dbg !2240
  %30 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !2240, !tbaa !1652
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !2241, !tbaa !1534
  call void %30(%struct._object* %31), !dbg !2242
  br label %if.end.20

if.end.20:                                        ; preds = %if.else.17, %if.then.16
  %32 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !2243
  call void @llvm.lifetime.end(i64 8, i8* %32) #3, !dbg !2243
  br label %do.cond.21, !dbg !2245

do.cond.21:                                       ; preds = %if.end.20
  br label %do.end.22, !dbg !2246

do.end.22:                                        ; preds = %do.cond.21
  store %struct._object* null, %struct._object** %retval, !dbg !2248
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2248

if.end.23:                                        ; preds = %if.end.7
  %33 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !2249, !tbaa !1534
  %34 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2250, !tbaa !1534
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %34, i32 0, i32 5, !dbg !2251
  %35 = load i32, i32* %ndim, align 4, !dbg !2251, !tbaa !1771
  %call24 = call %struct._object* @mbuf_add_incomplete_view(%struct._PyManagedBufferObject* %33, %struct.bufferinfo* null, i32 %35), !dbg !2252
  %36 = bitcast %struct._object* %call24 to %struct.PyMemoryViewObject*, !dbg !2253
  store %struct.PyMemoryViewObject* %36, %struct.PyMemoryViewObject** %mv, align 8, !dbg !2254, !tbaa !1534
  br label %do.body.25, !dbg !2255

do.body.25:                                       ; preds = %if.end.23
  %37 = bitcast %struct._object** %_py_decref_tmp26 to i8*, !dbg !2256
  call void @llvm.lifetime.start(i64 8, i8* %37) #3, !dbg !2256
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp26, metadata !572, metadata !1538), !dbg !2258
  %38 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !2259, !tbaa !1534
  %39 = bitcast %struct._PyManagedBufferObject* %38 to %struct._object*, !dbg !2260
  store %struct._object* %39, %struct._object** %_py_decref_tmp26, align 8, !dbg !2258, !tbaa !1534
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp26, align 8, !dbg !2261, !tbaa !1534
  %ob_refcnt27 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 0, !dbg !2263
  %41 = load i64, i64* %ob_refcnt27, align 8, !dbg !2264, !tbaa !1642
  %dec28 = add i64 %41, -1, !dbg !2264
  store i64 %dec28, i64* %ob_refcnt27, align 8, !dbg !2264, !tbaa !1642
  %cmp29 = icmp ne i64 %dec28, 0, !dbg !2265
  br i1 %cmp29, label %if.then.30, label %if.else.31, !dbg !2266

if.then.30:                                       ; preds = %do.body.25
  br label %if.end.34, !dbg !2267

if.else.31:                                       ; preds = %do.body.25
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp26, align 8, !dbg !2269, !tbaa !1534
  %ob_type32 = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 1, !dbg !2271
  %43 = load %struct._typeobject*, %struct._typeobject** %ob_type32, align 8, !dbg !2271, !tbaa !1650
  %tp_dealloc33 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %43, i32 0, i32 4, !dbg !2272
  %44 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc33, align 8, !dbg !2272, !tbaa !1652
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp26, align 8, !dbg !2273, !tbaa !1534
  call void %44(%struct._object* %45), !dbg !2274
  br label %if.end.34

if.end.34:                                        ; preds = %if.else.31, %if.then.30
  %46 = bitcast %struct._object** %_py_decref_tmp26 to i8*, !dbg !2275
  call void @llvm.lifetime.end(i64 8, i8* %46) #3, !dbg !2275
  br label %do.cond.35, !dbg !2276

do.cond.35:                                       ; preds = %if.end.34
  br label %do.end.36, !dbg !2277

do.end.36:                                        ; preds = %do.cond.35
  %47 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !2279, !tbaa !1534
  %cmp37 = icmp eq %struct.PyMemoryViewObject* %47, null, !dbg !2281
  br i1 %cmp37, label %if.then.38, label %if.end.39, !dbg !2282

if.then.38:                                       ; preds = %do.end.36
  store %struct._object* null, %struct._object** %retval, !dbg !2283
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2283

if.end.39:                                        ; preds = %do.end.36
  %48 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !2284, !tbaa !1534
  %view = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %48, i32 0, i32 5, !dbg !2285
  store %struct.bufferinfo* %view, %struct.bufferinfo** %dest, align 8, !dbg !2286, !tbaa !1534
  %49 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2287, !tbaa !1534
  %itemsize = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %49, i32 0, i32 3, !dbg !2288
  %50 = load i64, i64* %itemsize, align 8, !dbg !2288, !tbaa !2289
  %51 = load %struct.bufferinfo*, %struct.bufferinfo** %dest, align 8, !dbg !2290, !tbaa !1534
  %itemsize40 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %51, i32 0, i32 3, !dbg !2291
  store i64 %50, i64* %itemsize40, align 8, !dbg !2292, !tbaa !2289
  store i32 0, i32* %i, align 4, !dbg !2293, !tbaa !1580
  br label %for.cond, !dbg !2295

for.cond:                                         ; preds = %for.inc, %if.end.39
  %52 = load i32, i32* %i, align 4, !dbg !2296, !tbaa !1580
  %53 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2300, !tbaa !1534
  %ndim41 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %53, i32 0, i32 5, !dbg !2301
  %54 = load i32, i32* %ndim41, align 4, !dbg !2301, !tbaa !1771
  %cmp42 = icmp slt i32 %52, %54, !dbg !2302
  br i1 %cmp42, label %for.body, label %for.end, !dbg !2303

for.body:                                         ; preds = %for.cond
  %55 = load i32, i32* %i, align 4, !dbg !2304, !tbaa !1580
  %idxprom = sext i32 %55 to i64, !dbg !2306
  %56 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2306, !tbaa !1534
  %shape = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %56, i32 0, i32 7, !dbg !2307
  %57 = load i64*, i64** %shape, align 8, !dbg !2307, !tbaa !2308
  %arrayidx = getelementptr i64, i64* %57, i64 %idxprom, !dbg !2306
  %58 = load i64, i64* %arrayidx, align 8, !dbg !2306, !tbaa !1603
  %59 = load i32, i32* %i, align 4, !dbg !2309, !tbaa !1580
  %idxprom43 = sext i32 %59 to i64, !dbg !2310
  %60 = load %struct.bufferinfo*, %struct.bufferinfo** %dest, align 8, !dbg !2310, !tbaa !1534
  %shape44 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %60, i32 0, i32 7, !dbg !2311
  %61 = load i64*, i64** %shape44, align 8, !dbg !2311, !tbaa !2308
  %arrayidx45 = getelementptr i64, i64* %61, i64 %idxprom43, !dbg !2310
  store i64 %58, i64* %arrayidx45, align 8, !dbg !2312, !tbaa !1603
  br label %for.inc, !dbg !2313

for.inc:                                          ; preds = %for.body
  %62 = load i32, i32* %i, align 4, !dbg !2314, !tbaa !1580
  %inc = add i32 %62, 1, !dbg !2314
  store i32 %inc, i32* %i, align 4, !dbg !2314, !tbaa !1580
  br label %for.cond, !dbg !2315

for.end:                                          ; preds = %for.cond
  %63 = load i8, i8* %order.addr, align 1, !dbg !2316, !tbaa !2033
  %conv = sext i8 %63 to i32, !dbg !2316
  %cmp46 = icmp eq i32 %conv, 67, !dbg !2318
  br i1 %cmp46, label %if.then.51, label %lor.lhs.false, !dbg !2319

lor.lhs.false:                                    ; preds = %for.end
  %64 = load i8, i8* %order.addr, align 1, !dbg !2320, !tbaa !2033
  %conv48 = sext i8 %64 to i32, !dbg !2320
  %cmp49 = icmp eq i32 %conv48, 65, !dbg !2322
  br i1 %cmp49, label %if.then.51, label %if.else.52, !dbg !2323

if.then.51:                                       ; preds = %lor.lhs.false, %for.end
  %65 = load %struct.bufferinfo*, %struct.bufferinfo** %dest, align 8, !dbg !2324, !tbaa !1534
  call void @init_strides_from_shape(%struct.bufferinfo* %65), !dbg !2326
  br label %if.end.53, !dbg !2327

if.else.52:                                       ; preds = %lor.lhs.false
  %66 = load %struct.bufferinfo*, %struct.bufferinfo** %dest, align 8, !dbg !2328, !tbaa !1534
  call void @init_fortran_strides_from_shape(%struct.bufferinfo* %66), !dbg !2330
  br label %if.end.53

if.end.53:                                        ; preds = %if.else.52, %if.then.51
  %67 = load %struct.bufferinfo*, %struct.bufferinfo** %dest, align 8, !dbg !2331, !tbaa !1534
  %suboffsets = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %67, i32 0, i32 9, !dbg !2332
  store i64* null, i64** %suboffsets, align 8, !dbg !2333, !tbaa !2334
  %68 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !2335, !tbaa !1534
  call void @init_flags(%struct.PyMemoryViewObject* %68), !dbg !2336
  %69 = load %struct.bufferinfo*, %struct.bufferinfo** %dest, align 8, !dbg !2337, !tbaa !1534
  %70 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2338, !tbaa !1534
  %call54 = call i32 @copy_buffer(%struct.bufferinfo* %69, %struct.bufferinfo* %70), !dbg !2339
  %cmp55 = icmp slt i32 %call54, 0, !dbg !2340
  br i1 %cmp55, label %if.then.57, label %if.end.71, !dbg !2341

if.then.57:                                       ; preds = %if.end.53
  br label %do.body.58, !dbg !2342

do.body.58:                                       ; preds = %if.then.57
  %71 = bitcast %struct._object** %_py_decref_tmp59 to i8*, !dbg !2343
  call void @llvm.lifetime.start(i64 8, i8* %71) #3, !dbg !2343
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp59, metadata !574, metadata !1538), !dbg !2345
  %72 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !2346, !tbaa !1534
  %73 = bitcast %struct.PyMemoryViewObject* %72 to %struct._object*, !dbg !2347
  store %struct._object* %73, %struct._object** %_py_decref_tmp59, align 8, !dbg !2345, !tbaa !1534
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp59, align 8, !dbg !2348, !tbaa !1534
  %ob_refcnt60 = getelementptr inbounds %struct._object, %struct._object* %74, i32 0, i32 0, !dbg !2350
  %75 = load i64, i64* %ob_refcnt60, align 8, !dbg !2351, !tbaa !1642
  %dec61 = add i64 %75, -1, !dbg !2351
  store i64 %dec61, i64* %ob_refcnt60, align 8, !dbg !2351, !tbaa !1642
  %cmp62 = icmp ne i64 %dec61, 0, !dbg !2352
  br i1 %cmp62, label %if.then.64, label %if.else.65, !dbg !2353

if.then.64:                                       ; preds = %do.body.58
  br label %if.end.68, !dbg !2354

if.else.65:                                       ; preds = %do.body.58
  %76 = load %struct._object*, %struct._object** %_py_decref_tmp59, align 8, !dbg !2356, !tbaa !1534
  %ob_type66 = getelementptr inbounds %struct._object, %struct._object* %76, i32 0, i32 1, !dbg !2358
  %77 = load %struct._typeobject*, %struct._typeobject** %ob_type66, align 8, !dbg !2358, !tbaa !1650
  %tp_dealloc67 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %77, i32 0, i32 4, !dbg !2359
  %78 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc67, align 8, !dbg !2359, !tbaa !1652
  %79 = load %struct._object*, %struct._object** %_py_decref_tmp59, align 8, !dbg !2360, !tbaa !1534
  call void %78(%struct._object* %79), !dbg !2361
  br label %if.end.68

if.end.68:                                        ; preds = %if.else.65, %if.then.64
  %80 = bitcast %struct._object** %_py_decref_tmp59 to i8*, !dbg !2362
  call void @llvm.lifetime.end(i64 8, i8* %80) #3, !dbg !2362
  br label %do.cond.69, !dbg !2364

do.cond.69:                                       ; preds = %if.end.68
  br label %do.end.70, !dbg !2365

do.end.70:                                        ; preds = %do.cond.69
  store %struct._object* null, %struct._object** %retval, !dbg !2367
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2367

if.end.71:                                        ; preds = %if.end.53
  %81 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !2368, !tbaa !1534
  %82 = bitcast %struct.PyMemoryViewObject* %81 to %struct._object*, !dbg !2369
  store %struct._object* %82, %struct._object** %retval, !dbg !2370
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2370

cleanup:                                          ; preds = %if.end.71, %do.end.70, %if.then.38, %do.end.22, %if.then.6, %if.then
  %83 = bitcast i32* %i to i8*, !dbg !2371
  call void @llvm.lifetime.end(i64 4, i8* %83) #3, !dbg !2371
  %84 = bitcast %struct.bufferinfo** %dest to i8*, !dbg !2371
  call void @llvm.lifetime.end(i64 8, i8* %84) #3, !dbg !2371
  %85 = bitcast %struct._object** %bytes to i8*, !dbg !2371
  call void @llvm.lifetime.end(i64 8, i8* %85) #3, !dbg !2371
  %86 = bitcast %struct.PyMemoryViewObject** %mv to i8*, !dbg !2371
  call void @llvm.lifetime.end(i64 8, i8* %86) #3, !dbg !2371
  %87 = bitcast %struct._PyManagedBufferObject** %mbuf to i8*, !dbg !2371
  call void @llvm.lifetime.end(i64 8, i8* %87) #3, !dbg !2371
  %88 = load %struct._object*, %struct._object** %retval, !dbg !2371
  ret %struct._object* %88, !dbg !2371
}

; Function Attrs: nounwind uwtable
define i32 @PyBuffer_ToContiguous(i8* %buf, %struct.bufferinfo* %src, i64 %len, i8 signext %order) #0 {
entry:
  %retval = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %src.addr = alloca %struct.bufferinfo*, align 8
  %len.addr = alloca i64, align 8
  %order.addr = alloca i8, align 1
  %fb = alloca %struct.Py_buffer_full*, align 8
  %ret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !477, metadata !1538), !dbg !2372
  store %struct.bufferinfo* %src, %struct.bufferinfo** %src.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %src.addr, metadata !478, metadata !1538), !dbg !2373
  store i64 %len, i64* %len.addr, align 8, !tbaa !1603
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !479, metadata !1538), !dbg !2374
  store i8 %order, i8* %order.addr, align 1, !tbaa !2033
  call void @llvm.dbg.declare(metadata i8* %order.addr, metadata !480, metadata !1538), !dbg !2375
  %0 = bitcast %struct.Py_buffer_full** %fb to i8*, !dbg !2376
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !2376
  call void @llvm.dbg.declare(metadata %struct.Py_buffer_full** %fb, metadata !481, metadata !1538), !dbg !2377
  store %struct.Py_buffer_full* null, %struct.Py_buffer_full** %fb, align 8, !dbg !2377, !tbaa !1534
  %1 = bitcast i32* %ret to i8*, !dbg !2378
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !2378
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !488, metadata !1538), !dbg !2379
  %2 = load i64, i64* %len.addr, align 8, !dbg !2380, !tbaa !1603
  %3 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2382, !tbaa !1534
  %len1 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %3, i32 0, i32 2, !dbg !2383
  %4 = load i64, i64* %len1, align 8, !dbg !2383, !tbaa !2175
  %cmp = icmp ne i64 %2, %4, !dbg !2384
  br i1 %cmp, label %if.then, label %if.end, !dbg !2385

if.then:                                          ; preds = %entry
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !2386, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6, i32 0, i32 0)), !dbg !2388
  store i32 -1, i32* %retval, !dbg !2389
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2389

if.end:                                           ; preds = %entry
  %6 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2390, !tbaa !1534
  %7 = load i8, i8* %order.addr, align 1, !dbg !2392, !tbaa !2033
  %call = call i32 @PyBuffer_IsContiguous(%struct.bufferinfo* %6, i8 signext %7), !dbg !2393
  %tobool = icmp ne i32 %call, 0, !dbg !2393
  br i1 %tobool, label %if.then.2, label %if.end.4, !dbg !2394

if.then.2:                                        ; preds = %if.end
  %8 = load i8*, i8** %buf.addr, align 8, !dbg !2395, !tbaa !1534
  %9 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2397, !tbaa !1534
  %buf3 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %9, i32 0, i32 0, !dbg !2398
  %10 = load i8*, i8** %buf3, align 8, !dbg !2398, !tbaa !1826
  %11 = load i64, i64* %len.addr, align 8, !dbg !2399, !tbaa !1603
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %10, i64 %11, i32 1, i1 false), !dbg !2400
  store i32 0, i32* %retval, !dbg !2401
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2401

if.end.4:                                         ; preds = %if.end
  %12 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2402, !tbaa !1534
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %12, i32 0, i32 5, !dbg !2403
  %13 = load i32, i32* %ndim, align 4, !dbg !2403, !tbaa !1771
  %mul = mul i32 3, %13, !dbg !2404
  %conv = sext i32 %mul to i64, !dbg !2405
  %mul5 = mul i64 %conv, 8, !dbg !2406
  %add = add i64 88, %mul5, !dbg !2407
  %call6 = call i8* @PyMem_Malloc(i64 %add), !dbg !2408
  %14 = bitcast i8* %call6 to %struct.Py_buffer_full*, !dbg !2408
  store %struct.Py_buffer_full* %14, %struct.Py_buffer_full** %fb, align 8, !dbg !2409, !tbaa !1534
  %15 = load %struct.Py_buffer_full*, %struct.Py_buffer_full** %fb, align 8, !dbg !2410, !tbaa !1534
  %cmp7 = icmp eq %struct.Py_buffer_full* %15, null, !dbg !2412
  br i1 %cmp7, label %if.then.9, label %if.end.11, !dbg !2413

if.then.9:                                        ; preds = %if.end.4
  %call10 = call %struct._object* @PyErr_NoMemory(), !dbg !2414
  store i32 -1, i32* %retval, !dbg !2416
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2416

if.end.11:                                        ; preds = %if.end.4
  %16 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2417, !tbaa !1534
  %ndim12 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %16, i32 0, i32 5, !dbg !2418
  %17 = load i32, i32* %ndim12, align 4, !dbg !2418, !tbaa !1771
  %18 = load %struct.Py_buffer_full*, %struct.Py_buffer_full** %fb, align 8, !dbg !2419, !tbaa !1534
  %view = getelementptr inbounds %struct.Py_buffer_full, %struct.Py_buffer_full* %18, i32 0, i32 0, !dbg !2420
  %ndim13 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view, i32 0, i32 5, !dbg !2421
  store i32 %17, i32* %ndim13, align 4, !dbg !2422, !tbaa !2423
  %19 = load %struct.Py_buffer_full*, %struct.Py_buffer_full** %fb, align 8, !dbg !2425, !tbaa !1534
  %array = getelementptr inbounds %struct.Py_buffer_full, %struct.Py_buffer_full* %19, i32 0, i32 1, !dbg !2426
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %array, i32 0, i32 0, !dbg !2425
  %20 = load %struct.Py_buffer_full*, %struct.Py_buffer_full** %fb, align 8, !dbg !2427, !tbaa !1534
  %view14 = getelementptr inbounds %struct.Py_buffer_full, %struct.Py_buffer_full* %20, i32 0, i32 0, !dbg !2428
  %shape = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view14, i32 0, i32 7, !dbg !2429
  store i64* %arraydecay, i64** %shape, align 8, !dbg !2430, !tbaa !2431
  %21 = load %struct.Py_buffer_full*, %struct.Py_buffer_full** %fb, align 8, !dbg !2432, !tbaa !1534
  %array15 = getelementptr inbounds %struct.Py_buffer_full, %struct.Py_buffer_full* %21, i32 0, i32 1, !dbg !2433
  %arraydecay16 = getelementptr inbounds [1 x i64], [1 x i64]* %array15, i32 0, i32 0, !dbg !2432
  %22 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2434, !tbaa !1534
  %ndim17 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %22, i32 0, i32 5, !dbg !2435
  %23 = load i32, i32* %ndim17, align 4, !dbg !2435, !tbaa !1771
  %idx.ext = sext i32 %23 to i64, !dbg !2436
  %add.ptr = getelementptr i64, i64* %arraydecay16, i64 %idx.ext, !dbg !2436
  %24 = load %struct.Py_buffer_full*, %struct.Py_buffer_full** %fb, align 8, !dbg !2437, !tbaa !1534
  %view18 = getelementptr inbounds %struct.Py_buffer_full, %struct.Py_buffer_full* %24, i32 0, i32 0, !dbg !2438
  %strides = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view18, i32 0, i32 8, !dbg !2439
  store i64* %add.ptr, i64** %strides, align 8, !dbg !2440, !tbaa !2441
  %25 = load %struct.Py_buffer_full*, %struct.Py_buffer_full** %fb, align 8, !dbg !2442, !tbaa !1534
  %array19 = getelementptr inbounds %struct.Py_buffer_full, %struct.Py_buffer_full* %25, i32 0, i32 1, !dbg !2443
  %arraydecay20 = getelementptr inbounds [1 x i64], [1 x i64]* %array19, i32 0, i32 0, !dbg !2442
  %26 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2444, !tbaa !1534
  %ndim21 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %26, i32 0, i32 5, !dbg !2445
  %27 = load i32, i32* %ndim21, align 4, !dbg !2445, !tbaa !1771
  %mul22 = mul i32 2, %27, !dbg !2446
  %idx.ext23 = sext i32 %mul22 to i64, !dbg !2447
  %add.ptr24 = getelementptr i64, i64* %arraydecay20, i64 %idx.ext23, !dbg !2447
  %28 = load %struct.Py_buffer_full*, %struct.Py_buffer_full** %fb, align 8, !dbg !2448, !tbaa !1534
  %view25 = getelementptr inbounds %struct.Py_buffer_full, %struct.Py_buffer_full* %28, i32 0, i32 0, !dbg !2449
  %suboffsets = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view25, i32 0, i32 9, !dbg !2450
  store i64* %add.ptr24, i64** %suboffsets, align 8, !dbg !2451, !tbaa !2452
  %29 = load %struct.Py_buffer_full*, %struct.Py_buffer_full** %fb, align 8, !dbg !2453, !tbaa !1534
  %view26 = getelementptr inbounds %struct.Py_buffer_full, %struct.Py_buffer_full* %29, i32 0, i32 0, !dbg !2454
  %30 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2455, !tbaa !1534
  call void @init_shared_values(%struct.bufferinfo* %view26, %struct.bufferinfo* %30), !dbg !2456
  %31 = load %struct.Py_buffer_full*, %struct.Py_buffer_full** %fb, align 8, !dbg !2457, !tbaa !1534
  %view27 = getelementptr inbounds %struct.Py_buffer_full, %struct.Py_buffer_full* %31, i32 0, i32 0, !dbg !2458
  %32 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2459, !tbaa !1534
  call void @init_shape_strides(%struct.bufferinfo* %view27, %struct.bufferinfo* %32), !dbg !2460
  %33 = load %struct.Py_buffer_full*, %struct.Py_buffer_full** %fb, align 8, !dbg !2461, !tbaa !1534
  %view28 = getelementptr inbounds %struct.Py_buffer_full, %struct.Py_buffer_full* %33, i32 0, i32 0, !dbg !2462
  %34 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2463, !tbaa !1534
  call void @init_suboffsets(%struct.bufferinfo* %view28, %struct.bufferinfo* %34), !dbg !2464
  %35 = load %struct.Py_buffer_full*, %struct.Py_buffer_full** %fb, align 8, !dbg !2465, !tbaa !1534
  %view29 = getelementptr inbounds %struct.Py_buffer_full, %struct.Py_buffer_full* %35, i32 0, i32 0, !dbg !2466
  store %struct.bufferinfo* %view29, %struct.bufferinfo** %src.addr, align 8, !dbg !2467, !tbaa !1534
  %36 = load i8*, i8** %buf.addr, align 8, !dbg !2468, !tbaa !1534
  %37 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2469, !tbaa !1534
  %38 = load i8, i8* %order.addr, align 1, !dbg !2470, !tbaa !2033
  %call30 = call i32 @buffer_to_contiguous(i8* %36, %struct.bufferinfo* %37, i8 signext %38), !dbg !2471
  store i32 %call30, i32* %ret, align 4, !dbg !2472, !tbaa !1580
  %39 = load %struct.Py_buffer_full*, %struct.Py_buffer_full** %fb, align 8, !dbg !2473, !tbaa !1534
  %40 = bitcast %struct.Py_buffer_full* %39 to i8*, !dbg !2473
  call void @PyMem_Free(i8* %40), !dbg !2474
  %41 = load i32, i32* %ret, align 4, !dbg !2475, !tbaa !1580
  store i32 %41, i32* %retval, !dbg !2476
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2476

cleanup:                                          ; preds = %if.end.11, %if.then.9, %if.then.2, %if.then
  %42 = bitcast i32* %ret to i8*, !dbg !2477
  call void @llvm.lifetime.end(i64 4, i8* %42) #3, !dbg !2477
  %43 = bitcast %struct.Py_buffer_full** %fb to i8*, !dbg !2477
  call void @llvm.lifetime.end(i64 8, i8* %43) #3, !dbg !2477
  %44 = load i32, i32* %retval, !dbg !2477
  ret i32 %44, !dbg !2477
}

declare i8* @PyMem_Malloc(i64) #1

declare %struct._object* @PyErr_NoMemory() #1

; Function Attrs: inlinehint nounwind uwtable
define internal void @init_shared_values(%struct.bufferinfo* %dest, %struct.bufferinfo* %src) #4 {
entry:
  %dest.addr = alloca %struct.bufferinfo*, align 8
  %src.addr = alloca %struct.bufferinfo*, align 8
  store %struct.bufferinfo* %dest, %struct.bufferinfo** %dest.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %dest.addr, metadata !691, metadata !1538), !dbg !2478
  store %struct.bufferinfo* %src, %struct.bufferinfo** %src.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %src.addr, metadata !692, metadata !1538), !dbg !2479
  %0 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2480, !tbaa !1534
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %0, i32 0, i32 1, !dbg !2481
  %1 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2481, !tbaa !2482
  %2 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !2483, !tbaa !1534
  %obj1 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %2, i32 0, i32 1, !dbg !2484
  store %struct._object* %1, %struct._object** %obj1, align 8, !dbg !2485, !tbaa !2482
  %3 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2486, !tbaa !1534
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %3, i32 0, i32 0, !dbg !2487
  %4 = load i8*, i8** %buf, align 8, !dbg !2487, !tbaa !1826
  %5 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !2488, !tbaa !1534
  %buf2 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %5, i32 0, i32 0, !dbg !2489
  store i8* %4, i8** %buf2, align 8, !dbg !2490, !tbaa !1826
  %6 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2491, !tbaa !1534
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %6, i32 0, i32 2, !dbg !2492
  %7 = load i64, i64* %len, align 8, !dbg !2492, !tbaa !2175
  %8 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !2493, !tbaa !1534
  %len3 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %8, i32 0, i32 2, !dbg !2494
  store i64 %7, i64* %len3, align 8, !dbg !2495, !tbaa !2175
  %9 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2496, !tbaa !1534
  %itemsize = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %9, i32 0, i32 3, !dbg !2497
  %10 = load i64, i64* %itemsize, align 8, !dbg !2497, !tbaa !2289
  %11 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !2498, !tbaa !1534
  %itemsize4 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %11, i32 0, i32 3, !dbg !2499
  store i64 %10, i64* %itemsize4, align 8, !dbg !2500, !tbaa !2289
  %12 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2501, !tbaa !1534
  %readonly = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %12, i32 0, i32 4, !dbg !2502
  %13 = load i32, i32* %readonly, align 4, !dbg !2502, !tbaa !2059
  %14 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !2503, !tbaa !1534
  %readonly5 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %14, i32 0, i32 4, !dbg !2504
  store i32 %13, i32* %readonly5, align 4, !dbg !2505, !tbaa !2059
  %15 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2506, !tbaa !1534
  %format = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %15, i32 0, i32 6, !dbg !2507
  %16 = load i8*, i8** %format, align 8, !dbg !2507, !tbaa !2219
  %tobool = icmp ne i8* %16, null, !dbg !2506
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !2506

cond.true:                                        ; preds = %entry
  %17 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2508, !tbaa !1534
  %format6 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %17, i32 0, i32 6, !dbg !2510
  %18 = load i8*, i8** %format6, align 8, !dbg !2510, !tbaa !2219
  br label %cond.end, !dbg !2506

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !2511

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %18, %cond.true ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i32 0, i32 0), %cond.false ], !dbg !2506
  %19 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !2513, !tbaa !1534
  %format7 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %19, i32 0, i32 6, !dbg !2516
  store i8* %cond, i8** %format7, align 8, !dbg !2517, !tbaa !2219
  %20 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2518, !tbaa !1534
  %internal = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %20, i32 0, i32 10, !dbg !2519
  %21 = load i8*, i8** %internal, align 8, !dbg !2519, !tbaa !2520
  %22 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !2521, !tbaa !1534
  %internal8 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %22, i32 0, i32 10, !dbg !2522
  store i8* %21, i8** %internal8, align 8, !dbg !2523, !tbaa !2520
  ret void, !dbg !2524
}

; Function Attrs: nounwind uwtable
define internal void @init_shape_strides(%struct.bufferinfo* %dest, %struct.bufferinfo* %src) #0 {
entry:
  %dest.addr = alloca %struct.bufferinfo*, align 8
  %src.addr = alloca %struct.bufferinfo*, align 8
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.bufferinfo* %dest, %struct.bufferinfo** %dest.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %dest.addr, metadata !695, metadata !1538), !dbg !2525
  store %struct.bufferinfo* %src, %struct.bufferinfo** %src.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %src.addr, metadata !696, metadata !1538), !dbg !2526
  %0 = bitcast i64* %i to i8*, !dbg !2527
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !2527
  call void @llvm.dbg.declare(metadata i64* %i, metadata !697, metadata !1538), !dbg !2528
  %1 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2529, !tbaa !1534
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %1, i32 0, i32 5, !dbg !2531
  %2 = load i32, i32* %ndim, align 4, !dbg !2531, !tbaa !1771
  %cmp = icmp eq i32 %2, 0, !dbg !2532
  br i1 %cmp, label %if.then, label %if.end, !dbg !2533

if.then:                                          ; preds = %entry
  %3 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !2534, !tbaa !1534
  %shape = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %3, i32 0, i32 7, !dbg !2536
  store i64* null, i64** %shape, align 8, !dbg !2537, !tbaa !2308
  %4 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !2538, !tbaa !1534
  %strides = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %4, i32 0, i32 8, !dbg !2539
  store i64* null, i64** %strides, align 8, !dbg !2540, !tbaa !2541
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2542

if.end:                                           ; preds = %entry
  %5 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2543, !tbaa !1534
  %ndim1 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %5, i32 0, i32 5, !dbg !2545
  %6 = load i32, i32* %ndim1, align 4, !dbg !2545, !tbaa !1771
  %cmp2 = icmp eq i32 %6, 1, !dbg !2546
  br i1 %cmp2, label %if.then.3, label %if.end.19, !dbg !2547

if.then.3:                                        ; preds = %if.end
  %7 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2548, !tbaa !1534
  %shape4 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %7, i32 0, i32 7, !dbg !2550
  %8 = load i64*, i64** %shape4, align 8, !dbg !2550, !tbaa !2308
  %tobool = icmp ne i64* %8, null, !dbg !2548
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !2548

cond.true:                                        ; preds = %if.then.3
  %9 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2551, !tbaa !1534
  %shape5 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %9, i32 0, i32 7, !dbg !2553
  %10 = load i64*, i64** %shape5, align 8, !dbg !2553, !tbaa !2308
  %arrayidx = getelementptr i64, i64* %10, i64 0, !dbg !2554
  %11 = load i64, i64* %arrayidx, align 8, !dbg !2554, !tbaa !1603
  br label %cond.end, !dbg !2548

cond.false:                                       ; preds = %if.then.3
  %12 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2555, !tbaa !1534
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %12, i32 0, i32 2, !dbg !2557
  %13 = load i64, i64* %len, align 8, !dbg !2557, !tbaa !2175
  %14 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2558, !tbaa !1534
  %itemsize = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %14, i32 0, i32 3, !dbg !2559
  %15 = load i64, i64* %itemsize, align 8, !dbg !2559, !tbaa !2289
  %div = sdiv i64 %13, %15, !dbg !2560
  br label %cond.end, !dbg !2548

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %11, %cond.true ], [ %div, %cond.false ], !dbg !2548
  %16 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !2561, !tbaa !1534
  %shape6 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %16, i32 0, i32 7, !dbg !2564
  %17 = load i64*, i64** %shape6, align 8, !dbg !2564, !tbaa !2308
  %arrayidx7 = getelementptr i64, i64* %17, i64 0, !dbg !2565
  store i64 %cond, i64* %arrayidx7, align 8, !dbg !2566, !tbaa !1603
  %18 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2567, !tbaa !1534
  %strides8 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %18, i32 0, i32 8, !dbg !2568
  %19 = load i64*, i64** %strides8, align 8, !dbg !2568, !tbaa !2541
  %tobool9 = icmp ne i64* %19, null, !dbg !2567
  br i1 %tobool9, label %cond.true.10, label %cond.false.13, !dbg !2567

cond.true.10:                                     ; preds = %cond.end
  %20 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2569, !tbaa !1534
  %strides11 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %20, i32 0, i32 8, !dbg !2570
  %21 = load i64*, i64** %strides11, align 8, !dbg !2570, !tbaa !2541
  %arrayidx12 = getelementptr i64, i64* %21, i64 0, !dbg !2571
  %22 = load i64, i64* %arrayidx12, align 8, !dbg !2571, !tbaa !1603
  br label %cond.end.15, !dbg !2567

cond.false.13:                                    ; preds = %cond.end
  %23 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2572, !tbaa !1534
  %itemsize14 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %23, i32 0, i32 3, !dbg !2573
  %24 = load i64, i64* %itemsize14, align 8, !dbg !2573, !tbaa !2289
  br label %cond.end.15, !dbg !2567

cond.end.15:                                      ; preds = %cond.false.13, %cond.true.10
  %cond16 = phi i64 [ %22, %cond.true.10 ], [ %24, %cond.false.13 ], !dbg !2567
  %25 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !2574, !tbaa !1534
  %strides17 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %25, i32 0, i32 8, !dbg !2575
  %26 = load i64*, i64** %strides17, align 8, !dbg !2575, !tbaa !2541
  %arrayidx18 = getelementptr i64, i64* %26, i64 0, !dbg !2576
  store i64 %cond16, i64* %arrayidx18, align 8, !dbg !2577, !tbaa !1603
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2578

if.end.19:                                        ; preds = %if.end
  store i64 0, i64* %i, align 8, !dbg !2579, !tbaa !1603
  br label %for.cond, !dbg !2581

for.cond:                                         ; preds = %for.inc, %if.end.19
  %27 = load i64, i64* %i, align 8, !dbg !2582, !tbaa !1603
  %28 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2586, !tbaa !1534
  %ndim20 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %28, i32 0, i32 5, !dbg !2587
  %29 = load i32, i32* %ndim20, align 4, !dbg !2587, !tbaa !1771
  %conv = sext i32 %29 to i64, !dbg !2586
  %cmp21 = icmp slt i64 %27, %conv, !dbg !2588
  br i1 %cmp21, label %for.body, label %for.end, !dbg !2589

for.body:                                         ; preds = %for.cond
  %30 = load i64, i64* %i, align 8, !dbg !2590, !tbaa !1603
  %31 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2591, !tbaa !1534
  %shape23 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %31, i32 0, i32 7, !dbg !2592
  %32 = load i64*, i64** %shape23, align 8, !dbg !2592, !tbaa !2308
  %arrayidx24 = getelementptr i64, i64* %32, i64 %30, !dbg !2591
  %33 = load i64, i64* %arrayidx24, align 8, !dbg !2591, !tbaa !1603
  %34 = load i64, i64* %i, align 8, !dbg !2593, !tbaa !1603
  %35 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !2594, !tbaa !1534
  %shape25 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %35, i32 0, i32 7, !dbg !2595
  %36 = load i64*, i64** %shape25, align 8, !dbg !2595, !tbaa !2308
  %arrayidx26 = getelementptr i64, i64* %36, i64 %34, !dbg !2594
  store i64 %33, i64* %arrayidx26, align 8, !dbg !2596, !tbaa !1603
  br label %for.inc, !dbg !2594

for.inc:                                          ; preds = %for.body
  %37 = load i64, i64* %i, align 8, !dbg !2597, !tbaa !1603
  %inc = add i64 %37, 1, !dbg !2597
  store i64 %inc, i64* %i, align 8, !dbg !2597, !tbaa !1603
  br label %for.cond, !dbg !2598

for.end:                                          ; preds = %for.cond
  %38 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2599, !tbaa !1534
  %strides27 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %38, i32 0, i32 8, !dbg !2601
  %39 = load i64*, i64** %strides27, align 8, !dbg !2601, !tbaa !2541
  %tobool28 = icmp ne i64* %39, null, !dbg !2599
  br i1 %tobool28, label %if.then.29, label %if.else, !dbg !2602

if.then.29:                                       ; preds = %for.end
  store i64 0, i64* %i, align 8, !dbg !2603, !tbaa !1603
  br label %for.cond.30, !dbg !2606

for.cond.30:                                      ; preds = %for.inc.40, %if.then.29
  %40 = load i64, i64* %i, align 8, !dbg !2607, !tbaa !1603
  %41 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2611, !tbaa !1534
  %ndim31 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %41, i32 0, i32 5, !dbg !2612
  %42 = load i32, i32* %ndim31, align 4, !dbg !2612, !tbaa !1771
  %conv32 = sext i32 %42 to i64, !dbg !2611
  %cmp33 = icmp slt i64 %40, %conv32, !dbg !2613
  br i1 %cmp33, label %for.body.35, label %for.end.42, !dbg !2614

for.body.35:                                      ; preds = %for.cond.30
  %43 = load i64, i64* %i, align 8, !dbg !2615, !tbaa !1603
  %44 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2616, !tbaa !1534
  %strides36 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %44, i32 0, i32 8, !dbg !2617
  %45 = load i64*, i64** %strides36, align 8, !dbg !2617, !tbaa !2541
  %arrayidx37 = getelementptr i64, i64* %45, i64 %43, !dbg !2616
  %46 = load i64, i64* %arrayidx37, align 8, !dbg !2616, !tbaa !1603
  %47 = load i64, i64* %i, align 8, !dbg !2618, !tbaa !1603
  %48 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !2619, !tbaa !1534
  %strides38 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %48, i32 0, i32 8, !dbg !2620
  %49 = load i64*, i64** %strides38, align 8, !dbg !2620, !tbaa !2541
  %arrayidx39 = getelementptr i64, i64* %49, i64 %47, !dbg !2619
  store i64 %46, i64* %arrayidx39, align 8, !dbg !2621, !tbaa !1603
  br label %for.inc.40, !dbg !2619

for.inc.40:                                       ; preds = %for.body.35
  %50 = load i64, i64* %i, align 8, !dbg !2622, !tbaa !1603
  %inc41 = add i64 %50, 1, !dbg !2622
  store i64 %inc41, i64* %i, align 8, !dbg !2622, !tbaa !1603
  br label %for.cond.30, !dbg !2623

for.end.42:                                       ; preds = %for.cond.30
  br label %if.end.43, !dbg !2624

if.else:                                          ; preds = %for.end
  %51 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !2625, !tbaa !1534
  call void @init_strides_from_shape(%struct.bufferinfo* %51), !dbg !2627
  br label %if.end.43

if.end.43:                                        ; preds = %if.else, %for.end.42
  store i32 0, i32* %cleanup.dest.slot, !dbg !2628
  br label %cleanup, !dbg !2628

cleanup:                                          ; preds = %if.end.43, %cond.end.15, %if.then
  %52 = bitcast i64* %i to i8*, !dbg !2629
  call void @llvm.lifetime.end(i64 8, i8* %52) #3, !dbg !2629
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !2628

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @init_suboffsets(%struct.bufferinfo* %dest, %struct.bufferinfo* %src) #4 {
entry:
  %dest.addr = alloca %struct.bufferinfo*, align 8
  %src.addr = alloca %struct.bufferinfo*, align 8
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.bufferinfo* %dest, %struct.bufferinfo** %dest.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %dest.addr, metadata !700, metadata !1538), !dbg !2631
  store %struct.bufferinfo* %src, %struct.bufferinfo** %src.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %src.addr, metadata !701, metadata !1538), !dbg !2632
  %0 = bitcast i64* %i to i8*, !dbg !2633
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !2633
  call void @llvm.dbg.declare(metadata i64* %i, metadata !702, metadata !1538), !dbg !2634
  %1 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2635, !tbaa !1534
  %suboffsets = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %1, i32 0, i32 9, !dbg !2637
  %2 = load i64*, i64** %suboffsets, align 8, !dbg !2637, !tbaa !2334
  %cmp = icmp eq i64* %2, null, !dbg !2638
  br i1 %cmp, label %if.then, label %if.end, !dbg !2639

if.then:                                          ; preds = %entry
  %3 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !2640, !tbaa !1534
  %suboffsets1 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %3, i32 0, i32 9, !dbg !2642
  store i64* null, i64** %suboffsets1, align 8, !dbg !2643, !tbaa !2334
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2644

if.end:                                           ; preds = %entry
  store i64 0, i64* %i, align 8, !dbg !2645, !tbaa !1603
  br label %for.cond, !dbg !2647

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load i64, i64* %i, align 8, !dbg !2648, !tbaa !1603
  %5 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2652, !tbaa !1534
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %5, i32 0, i32 5, !dbg !2653
  %6 = load i32, i32* %ndim, align 4, !dbg !2653, !tbaa !1771
  %conv = sext i32 %6 to i64, !dbg !2652
  %cmp2 = icmp slt i64 %4, %conv, !dbg !2654
  br i1 %cmp2, label %for.body, label %for.end, !dbg !2655

for.body:                                         ; preds = %for.cond
  %7 = load i64, i64* %i, align 8, !dbg !2656, !tbaa !1603
  %8 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2657, !tbaa !1534
  %suboffsets4 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %8, i32 0, i32 9, !dbg !2658
  %9 = load i64*, i64** %suboffsets4, align 8, !dbg !2658, !tbaa !2334
  %arrayidx = getelementptr i64, i64* %9, i64 %7, !dbg !2657
  %10 = load i64, i64* %arrayidx, align 8, !dbg !2657, !tbaa !1603
  %11 = load i64, i64* %i, align 8, !dbg !2659, !tbaa !1603
  %12 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !2660, !tbaa !1534
  %suboffsets5 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %12, i32 0, i32 9, !dbg !2661
  %13 = load i64*, i64** %suboffsets5, align 8, !dbg !2661, !tbaa !2334
  %arrayidx6 = getelementptr i64, i64* %13, i64 %11, !dbg !2660
  store i64 %10, i64* %arrayidx6, align 8, !dbg !2662, !tbaa !1603
  br label %for.inc, !dbg !2660

for.inc:                                          ; preds = %for.body
  %14 = load i64, i64* %i, align 8, !dbg !2663, !tbaa !1603
  %inc = add i64 %14, 1, !dbg !2663
  store i64 %inc, i64* %i, align 8, !dbg !2663, !tbaa !1603
  br label %for.cond, !dbg !2664

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %cleanup.dest.slot, !dbg !2665
  br label %cleanup, !dbg !2665

cleanup:                                          ; preds = %for.end, %if.then
  %15 = bitcast i64* %i to i8*, !dbg !2666
  call void @llvm.lifetime.end(i64 8, i8* %15) #3, !dbg !2666
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !2665

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @buffer_to_contiguous(i8* %mem, %struct.bufferinfo* %src, i8 signext %order) #0 {
entry:
  %retval = alloca i32, align 4
  %mem.addr = alloca i8*, align 8
  %src.addr = alloca %struct.bufferinfo*, align 8
  %order.addr = alloca i8, align 1
  %dest = alloca %struct.bufferinfo, align 8
  %strides = alloca i64*, align 8
  %ret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store i8* %mem, i8** %mem.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i8** %mem.addr, metadata !707, metadata !1538), !dbg !2668
  store %struct.bufferinfo* %src, %struct.bufferinfo** %src.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %src.addr, metadata !708, metadata !1538), !dbg !2669
  store i8 %order, i8* %order.addr, align 1, !tbaa !2033
  call void @llvm.dbg.declare(metadata i8* %order.addr, metadata !709, metadata !1538), !dbg !2670
  %0 = bitcast %struct.bufferinfo* %dest to i8*, !dbg !2671
  call void @llvm.lifetime.start(i64 80, i8* %0) #3, !dbg !2671
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %dest, metadata !710, metadata !1538), !dbg !2672
  %1 = bitcast i64** %strides to i8*, !dbg !2673
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !2673
  call void @llvm.dbg.declare(metadata i64** %strides, metadata !711, metadata !1538), !dbg !2674
  %2 = bitcast i32* %ret to i8*, !dbg !2675
  call void @llvm.lifetime.start(i64 4, i8* %2) #3, !dbg !2675
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !712, metadata !1538), !dbg !2676
  %3 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2677, !tbaa !1534
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %3, i32 0, i32 5, !dbg !2678
  %4 = load i32, i32* %ndim, align 4, !dbg !2678, !tbaa !1771
  %conv = sext i32 %4 to i64, !dbg !2677
  %mul = mul i64 %conv, 8, !dbg !2679
  %call = call i8* @PyMem_Malloc(i64 %mul), !dbg !2680
  %5 = bitcast i8* %call to i64*, !dbg !2680
  store i64* %5, i64** %strides, align 8, !dbg !2681, !tbaa !1534
  %6 = load i64*, i64** %strides, align 8, !dbg !2682, !tbaa !1534
  %cmp = icmp eq i64* %6, null, !dbg !2684
  br i1 %cmp, label %if.then, label %if.end, !dbg !2685

if.then:                                          ; preds = %entry
  %call2 = call %struct._object* @PyErr_NoMemory(), !dbg !2686
  store i32 -1, i32* %retval, !dbg !2688
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2688

if.end:                                           ; preds = %entry
  %7 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2689, !tbaa !1534
  %8 = bitcast %struct.bufferinfo* %dest to i8*, !dbg !2690
  %9 = bitcast %struct.bufferinfo* %7 to i8*, !dbg !2690
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 80, i32 8, i1 false), !dbg !2690, !tbaa.struct !1844
  %10 = load i8*, i8** %mem.addr, align 8, !dbg !2691, !tbaa !1534
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %dest, i32 0, i32 0, !dbg !2692
  store i8* %10, i8** %buf, align 8, !dbg !2693, !tbaa !1826
  %11 = load i64*, i64** %strides, align 8, !dbg !2694, !tbaa !1534
  %strides3 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %dest, i32 0, i32 8, !dbg !2695
  store i64* %11, i64** %strides3, align 8, !dbg !2696, !tbaa !2541
  %12 = load i8, i8* %order.addr, align 1, !dbg !2697, !tbaa !2033
  %conv4 = sext i8 %12 to i32, !dbg !2697
  %cmp5 = icmp eq i32 %conv4, 67, !dbg !2699
  br i1 %cmp5, label %if.then.10, label %lor.lhs.false, !dbg !2700

lor.lhs.false:                                    ; preds = %if.end
  %13 = load i8, i8* %order.addr, align 1, !dbg !2701, !tbaa !2033
  %conv7 = sext i8 %13 to i32, !dbg !2701
  %cmp8 = icmp eq i32 %conv7, 65, !dbg !2703
  br i1 %cmp8, label %if.then.10, label %if.else, !dbg !2704

if.then.10:                                       ; preds = %lor.lhs.false, %if.end
  call void @init_strides_from_shape(%struct.bufferinfo* %dest), !dbg !2705
  br label %if.end.11, !dbg !2707

if.else:                                          ; preds = %lor.lhs.false
  call void @init_fortran_strides_from_shape(%struct.bufferinfo* %dest), !dbg !2708
  br label %if.end.11

if.end.11:                                        ; preds = %if.else, %if.then.10
  %suboffsets = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %dest, i32 0, i32 9, !dbg !2710
  store i64* null, i64** %suboffsets, align 8, !dbg !2711, !tbaa !2334
  %14 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !2712, !tbaa !1534
  %call12 = call i32 @copy_buffer(%struct.bufferinfo* %dest, %struct.bufferinfo* %14), !dbg !2713
  store i32 %call12, i32* %ret, align 4, !dbg !2714, !tbaa !1580
  %15 = load i64*, i64** %strides, align 8, !dbg !2715, !tbaa !1534
  %16 = bitcast i64* %15 to i8*, !dbg !2715
  call void @PyMem_Free(i8* %16), !dbg !2716
  %17 = load i32, i32* %ret, align 4, !dbg !2717, !tbaa !1580
  store i32 %17, i32* %retval, !dbg !2718
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2718

cleanup:                                          ; preds = %if.end.11, %if.then
  %18 = bitcast i32* %ret to i8*, !dbg !2719
  call void @llvm.lifetime.end(i64 4, i8* %18) #3, !dbg !2719
  %19 = bitcast i64** %strides to i8*, !dbg !2719
  call void @llvm.lifetime.end(i64 8, i8* %19) #3, !dbg !2719
  %20 = bitcast %struct.bufferinfo* %dest to i8*, !dbg !2719
  call void @llvm.lifetime.end(i64 80, i8* %20) #3, !dbg !2719
  %21 = load i32, i32* %retval, !dbg !2719
  ret i32 %21, !dbg !2719
}

declare void @PyMem_Free(i8*) #1

; Function Attrs: nounwind uwtable
define internal void @memory_dealloc(%struct.PyMemoryViewObject* %self) #0 {
entry:
  %self.addr = alloca %struct.PyMemoryViewObject*, align 8
  %g = alloca %union._gc_head*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PyMemoryViewObject* %self, %struct.PyMemoryViewObject** %self.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %self.addr, metadata !715, metadata !1538), !dbg !2720
  br label %do.body, !dbg !2721

do.body:                                          ; preds = %entry
  %0 = bitcast %union._gc_head** %g to i8*, !dbg !2722
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !2722
  call void @llvm.dbg.declare(metadata %union._gc_head** %g, metadata !716, metadata !1538), !dbg !2724
  %1 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !2725, !tbaa !1534
  %2 = bitcast %struct.PyMemoryViewObject* %1 to %union._gc_head*, !dbg !2726
  %add.ptr = getelementptr %union._gc_head, %union._gc_head* %2, i64 -1, !dbg !2727
  store %union._gc_head* %add.ptr, %union._gc_head** %g, align 8, !dbg !2724, !tbaa !1534
  br label %do.body.1, !dbg !2728

do.body.1:                                        ; preds = %do.body
  %3 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !2729, !tbaa !1534
  %gc = bitcast %union._gc_head* %3 to %struct.anon*, !dbg !2732
  %gc_refs = getelementptr inbounds %struct.anon, %struct.anon* %gc, i32 0, i32 2, !dbg !2733
  %4 = load i64, i64* %gc_refs, align 8, !dbg !2733, !tbaa !1697
  %and = and i64 %4, 1, !dbg !2734
  %or = or i64 %and, -4, !dbg !2735
  %5 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !2736, !tbaa !1534
  %gc2 = bitcast %union._gc_head* %5 to %struct.anon*, !dbg !2737
  %gc_refs3 = getelementptr inbounds %struct.anon, %struct.anon* %gc2, i32 0, i32 2, !dbg !2738
  store i64 %or, i64* %gc_refs3, align 8, !dbg !2739, !tbaa !1697
  br label %do.cond, !dbg !2740

do.cond:                                          ; preds = %do.body.1
  br label %do.end, !dbg !2741

do.end:                                           ; preds = %do.cond
  %6 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !2743, !tbaa !1534
  %gc4 = bitcast %union._gc_head* %6 to %struct.anon*, !dbg !2745
  %gc_next = getelementptr inbounds %struct.anon, %struct.anon* %gc4, i32 0, i32 0, !dbg !2746
  %7 = load %union._gc_head*, %union._gc_head** %gc_next, align 8, !dbg !2746, !tbaa !1726
  %8 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !2747, !tbaa !1534
  %gc5 = bitcast %union._gc_head* %8 to %struct.anon*, !dbg !2748
  %gc_prev = getelementptr inbounds %struct.anon, %struct.anon* %gc5, i32 0, i32 1, !dbg !2749
  %9 = load %union._gc_head*, %union._gc_head** %gc_prev, align 8, !dbg !2749, !tbaa !1730
  %gc6 = bitcast %union._gc_head* %9 to %struct.anon*, !dbg !2750
  %gc_next7 = getelementptr inbounds %struct.anon, %struct.anon* %gc6, i32 0, i32 0, !dbg !2751
  store %union._gc_head* %7, %union._gc_head** %gc_next7, align 8, !dbg !2752, !tbaa !1726
  %10 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !2753, !tbaa !1534
  %gc8 = bitcast %union._gc_head* %10 to %struct.anon*, !dbg !2754
  %gc_prev9 = getelementptr inbounds %struct.anon, %struct.anon* %gc8, i32 0, i32 1, !dbg !2755
  %11 = load %union._gc_head*, %union._gc_head** %gc_prev9, align 8, !dbg !2755, !tbaa !1730
  %12 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !2756, !tbaa !1534
  %gc10 = bitcast %union._gc_head* %12 to %struct.anon*, !dbg !2757
  %gc_next11 = getelementptr inbounds %struct.anon, %struct.anon* %gc10, i32 0, i32 0, !dbg !2758
  %13 = load %union._gc_head*, %union._gc_head** %gc_next11, align 8, !dbg !2758, !tbaa !1726
  %gc12 = bitcast %union._gc_head* %13 to %struct.anon*, !dbg !2759
  %gc_prev13 = getelementptr inbounds %struct.anon, %struct.anon* %gc12, i32 0, i32 1, !dbg !2760
  store %union._gc_head* %11, %union._gc_head** %gc_prev13, align 8, !dbg !2761, !tbaa !1730
  %14 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !2762, !tbaa !1534
  %gc14 = bitcast %union._gc_head* %14 to %struct.anon*, !dbg !2763
  %gc_next15 = getelementptr inbounds %struct.anon, %struct.anon* %gc14, i32 0, i32 0, !dbg !2764
  store %union._gc_head* null, %union._gc_head** %gc_next15, align 8, !dbg !2765, !tbaa !1726
  %15 = bitcast %union._gc_head** %g to i8*, !dbg !2766
  call void @llvm.lifetime.end(i64 8, i8* %15) #3, !dbg !2766
  br label %do.end.17, !dbg !2767

do.end.17:                                        ; preds = %do.end
  %16 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !2768, !tbaa !1534
  %call = call i32 @_memory_release(%struct.PyMemoryViewObject* %16), !dbg !2769
  br label %do.body.18, !dbg !2770

do.body.18:                                       ; preds = %do.end.17
  %17 = bitcast %struct._object** %_py_tmp to i8*, !dbg !2771
  call void @llvm.lifetime.start(i64 8, i8* %17) #3, !dbg !2771
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !718, metadata !1538), !dbg !2773
  %18 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !2774, !tbaa !1534
  %mbuf = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %18, i32 0, i32 1, !dbg !2775
  %19 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !2775, !tbaa !1805
  %20 = bitcast %struct._PyManagedBufferObject* %19 to %struct._object*, !dbg !2776
  store %struct._object* %20, %struct._object** %_py_tmp, align 8, !dbg !2773, !tbaa !1534
  %21 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !2777, !tbaa !1534
  %cmp = icmp ne %struct._object* %21, null, !dbg !2778
  br i1 %cmp, label %if.then, label %if.end.25, !dbg !2779

if.then:                                          ; preds = %do.body.18
  %22 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !2780, !tbaa !1534
  %mbuf19 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %22, i32 0, i32 1, !dbg !2782
  store %struct._PyManagedBufferObject* null, %struct._PyManagedBufferObject** %mbuf19, align 8, !dbg !2783, !tbaa !1805
  br label %do.body.20, !dbg !2784

do.body.20:                                       ; preds = %if.then
  %23 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2785
  call void @llvm.lifetime.start(i64 8, i8* %23) #3, !dbg !2785
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !720, metadata !1538), !dbg !2787
  %24 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !2788, !tbaa !1534
  store %struct._object* %24, %struct._object** %_py_decref_tmp, align 8, !dbg !2787, !tbaa !1534
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2789, !tbaa !1534
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 0, !dbg !2791
  %26 = load i64, i64* %ob_refcnt, align 8, !dbg !2792, !tbaa !1642
  %dec = add i64 %26, -1, !dbg !2792
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !2792, !tbaa !1642
  %cmp21 = icmp ne i64 %dec, 0, !dbg !2793
  br i1 %cmp21, label %if.then.22, label %if.else, !dbg !2794

if.then.22:                                       ; preds = %do.body.20
  br label %if.end, !dbg !2795

if.else:                                          ; preds = %do.body.20
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2797, !tbaa !1534
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 1, !dbg !2799
  %28 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2799, !tbaa !1650
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %28, i32 0, i32 4, !dbg !2800
  %29 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2800, !tbaa !1652
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2801, !tbaa !1534
  call void %29(%struct._object* %30), !dbg !2802
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.22
  %31 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2803
  call void @llvm.lifetime.end(i64 8, i8* %31) #3, !dbg !2803
  br label %do.cond.23, !dbg !2805

do.cond.23:                                       ; preds = %if.end
  br label %do.end.24, !dbg !2806

do.end.24:                                        ; preds = %do.cond.23
  br label %if.end.25, !dbg !2808

if.end.25:                                        ; preds = %do.end.24, %do.body.18
  %32 = bitcast %struct._object** %_py_tmp to i8*, !dbg !2810
  call void @llvm.lifetime.end(i64 8, i8* %32) #3, !dbg !2810
  br label %do.end.27, !dbg !2813

do.end.27:                                        ; preds = %if.end.25
  %33 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !2814, !tbaa !1534
  %weakreflist = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %33, i32 0, i32 7, !dbg !2816
  %34 = load %struct._object*, %struct._object** %weakreflist, align 8, !dbg !2816, !tbaa !2817
  %cmp28 = icmp ne %struct._object* %34, null, !dbg !2818
  br i1 %cmp28, label %if.then.29, label %if.end.30, !dbg !2819

if.then.29:                                       ; preds = %do.end.27
  %35 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !2820, !tbaa !1534
  %36 = bitcast %struct.PyMemoryViewObject* %35 to %struct._object*, !dbg !2821
  call void @PyObject_ClearWeakRefs(%struct._object* %36), !dbg !2822
  br label %if.end.30, !dbg !2822

if.end.30:                                        ; preds = %if.then.29, %do.end.27
  %37 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !2823, !tbaa !1534
  %38 = bitcast %struct.PyMemoryViewObject* %37 to i8*, !dbg !2823
  call void @PyObject_GC_Del(i8* %38), !dbg !2824
  ret void, !dbg !2825
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @memory_repr(%struct.PyMemoryViewObject* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyMemoryViewObject*, align 8
  store %struct.PyMemoryViewObject* %self, %struct.PyMemoryViewObject** %self.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %self.addr, metadata !733, metadata !1538), !dbg !2826
  %0 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !2827, !tbaa !1534
  %flags = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %0, i32 0, i32 3, !dbg !2829
  %1 = load i32, i32* %flags, align 4, !dbg !2829, !tbaa !1894
  %and = and i32 %1, 1, !dbg !2830
  %tobool = icmp ne i32 %and, 0, !dbg !2830
  br i1 %tobool, label %if.then, label %if.else, !dbg !2831

if.then:                                          ; preds = %entry
  %2 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !2832, !tbaa !1534
  %call = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16, i32 0, i32 0), %struct.PyMemoryViewObject* %2), !dbg !2833
  store %struct._object* %call, %struct._object** %retval, !dbg !2834
  br label %return, !dbg !2834

if.else:                                          ; preds = %entry
  %3 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !2835, !tbaa !1534
  %call1 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i32 0, i32 0), %struct.PyMemoryViewObject* %3), !dbg !2836
  store %struct._object* %call1, %struct._object** %retval, !dbg !2837
  br label %return, !dbg !2837

return:                                           ; preds = %if.else, %if.then
  %4 = load %struct._object*, %struct._object** %retval, !dbg !2838
  ret %struct._object* %4, !dbg !2838
}

; Function Attrs: nounwind uwtable
define internal i64 @memory_hash(%struct.PyMemoryViewObject* %self) #0 {
entry:
  %retval = alloca i64, align 8
  %self.addr = alloca %struct.PyMemoryViewObject*, align 8
  %view = alloca %struct.bufferinfo*, align 8
  %mem = alloca i8*, align 8
  %ret = alloca i64, align 8
  %fmt = alloca i8, align 1
  %cleanup.dest.slot = alloca i32
  store %struct.PyMemoryViewObject* %self, %struct.PyMemoryViewObject** %self.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %self.addr, metadata !999, metadata !1538), !dbg !2839
  %0 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !2840, !tbaa !1534
  %hash = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %0, i32 0, i32 2, !dbg !2841
  %1 = load i64, i64* %hash, align 8, !dbg !2841, !tbaa !2842
  %cmp = icmp eq i64 %1, -1, !dbg !2843
  br i1 %cmp, label %if.then, label %if.end.58, !dbg !2844

if.then:                                          ; preds = %entry
  %2 = bitcast %struct.bufferinfo** %view to i8*, !dbg !2845
  call void @llvm.lifetime.start(i64 8, i8* %2) #3, !dbg !2845
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %view, metadata !1000, metadata !1538), !dbg !2846
  %3 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !2847, !tbaa !1534
  %view1 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %3, i32 0, i32 5, !dbg !2848
  store %struct.bufferinfo* %view1, %struct.bufferinfo** %view, align 8, !dbg !2846, !tbaa !1534
  %4 = bitcast i8** %mem to i8*, !dbg !2849
  call void @llvm.lifetime.start(i64 8, i8* %4) #3, !dbg !2849
  call void @llvm.dbg.declare(metadata i8** %mem, metadata !1003, metadata !1538), !dbg !2850
  %5 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !2851, !tbaa !1534
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %5, i32 0, i32 0, !dbg !2852
  %6 = load i8*, i8** %buf, align 8, !dbg !2852, !tbaa !1826
  store i8* %6, i8** %mem, align 8, !dbg !2850, !tbaa !1534
  %7 = bitcast i64* %ret to i8*, !dbg !2853
  call void @llvm.lifetime.start(i64 8, i8* %7) #3, !dbg !2853
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !1004, metadata !1538), !dbg !2854
  call void @llvm.lifetime.start(i64 1, i8* %fmt) #3, !dbg !2855
  call void @llvm.dbg.declare(metadata i8* %fmt, metadata !1005, metadata !1538), !dbg !2856
  %8 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !2857, !tbaa !1534
  %flags = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %8, i32 0, i32 3, !dbg !2859
  %9 = load i32, i32* %flags, align 4, !dbg !2859, !tbaa !1894
  %and = and i32 %9, 1, !dbg !2860
  %tobool = icmp ne i32 %and, 0, !dbg !2860
  br i1 %tobool, label %if.then.5, label %lor.lhs.false, !dbg !2861

lor.lhs.false:                                    ; preds = %if.then
  %10 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !2862, !tbaa !1534
  %mbuf = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %10, i32 0, i32 1, !dbg !2864
  %11 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !2864, !tbaa !1805
  %flags2 = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %11, i32 0, i32 1, !dbg !2865
  %12 = load i32, i32* %flags2, align 4, !dbg !2865, !tbaa !1545
  %and3 = and i32 %12, 1, !dbg !2866
  %tobool4 = icmp ne i32 %and3, 0, !dbg !2866
  br i1 %tobool4, label %if.then.5, label %if.end, !dbg !2867

if.then.5:                                        ; preds = %lor.lhs.false, %if.then
  %13 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !2868, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %13, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2, i32 0, i32 0)), !dbg !2872
  store i64 -1, i64* %retval, !dbg !2873
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2873

if.end:                                           ; preds = %lor.lhs.false
  %14 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !2874, !tbaa !1534
  %readonly = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %14, i32 0, i32 4, !dbg !2876
  %15 = load i32, i32* %readonly, align 4, !dbg !2876, !tbaa !2059
  %tobool6 = icmp ne i32 %15, 0, !dbg !2874
  br i1 %tobool6, label %if.end.8, label %if.then.7, !dbg !2877

if.then.7:                                        ; preds = %if.end
  %16 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !2878, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.31, i32 0, i32 0)), !dbg !2880
  store i64 -1, i64* %retval, !dbg !2881
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2881

if.end.8:                                         ; preds = %if.end
  %17 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !2882, !tbaa !1534
  %format = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %17, i32 0, i32 6, !dbg !2883
  %18 = load i8*, i8** %format, align 8, !dbg !2883, !tbaa !2219
  %call = call i64 @get_native_fmtchar(i8* %fmt, i8* %18), !dbg !2884
  store i64 %call, i64* %ret, align 8, !dbg !2885, !tbaa !1603
  %19 = load i64, i64* %ret, align 8, !dbg !2886, !tbaa !1603
  %cmp9 = icmp slt i64 %19, 0, !dbg !2888
  br i1 %cmp9, label %if.then.21, label %lor.lhs.false.10, !dbg !2889

lor.lhs.false.10:                                 ; preds = %if.end.8
  %20 = load i8, i8* %fmt, align 1, !dbg !2890, !tbaa !2033
  %conv = sext i8 %20 to i32, !dbg !2890
  %cmp11 = icmp eq i32 %conv, 98, !dbg !2892
  br i1 %cmp11, label %if.end.22, label %lor.lhs.false.13, !dbg !2893

lor.lhs.false.13:                                 ; preds = %lor.lhs.false.10
  %21 = load i8, i8* %fmt, align 1, !dbg !2894, !tbaa !2033
  %conv14 = sext i8 %21 to i32, !dbg !2894
  %cmp15 = icmp eq i32 %conv14, 66, !dbg !2896
  br i1 %cmp15, label %if.end.22, label %lor.lhs.false.17, !dbg !2897

lor.lhs.false.17:                                 ; preds = %lor.lhs.false.13
  %22 = load i8, i8* %fmt, align 1, !dbg !2898, !tbaa !2033
  %conv18 = sext i8 %22 to i32, !dbg !2898
  %cmp19 = icmp eq i32 %conv18, 99, !dbg !2900
  br i1 %cmp19, label %if.end.22, label %if.then.21, !dbg !2901

if.then.21:                                       ; preds = %lor.lhs.false.17, %if.end.8
  %23 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !2902, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %23, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.32, i32 0, i32 0)), !dbg !2904
  store i64 -1, i64* %retval, !dbg !2905
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2905

if.end.22:                                        ; preds = %lor.lhs.false.17, %lor.lhs.false.13, %lor.lhs.false.10
  %24 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !2906, !tbaa !1534
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %24, i32 0, i32 1, !dbg !2908
  %25 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2908, !tbaa !2482
  %cmp23 = icmp ne %struct._object* %25, null, !dbg !2909
  br i1 %cmp23, label %land.lhs.true, label %if.end.30, !dbg !2910

land.lhs.true:                                    ; preds = %if.end.22
  %26 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !2911, !tbaa !1534
  %obj25 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %26, i32 0, i32 1, !dbg !2913
  %27 = load %struct._object*, %struct._object** %obj25, align 8, !dbg !2913, !tbaa !2482
  %call26 = call i64 @PyObject_Hash(%struct._object* %27), !dbg !2914
  %cmp27 = icmp eq i64 %call26, -1, !dbg !2915
  br i1 %cmp27, label %if.then.29, label %if.end.30, !dbg !2916

if.then.29:                                       ; preds = %land.lhs.true
  store i64 -1, i64* %retval, !dbg !2917
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2917

if.end.30:                                        ; preds = %land.lhs.true, %if.end.22
  %28 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !2919, !tbaa !1534
  %flags31 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %28, i32 0, i32 3, !dbg !2921
  %29 = load i32, i32* %flags31, align 4, !dbg !2921, !tbaa !1894
  %and32 = and i32 %29, 10, !dbg !2922
  %tobool33 = icmp ne i32 %and32, 0, !dbg !2922
  br i1 %tobool33, label %if.end.46, label %if.then.34, !dbg !2923

if.then.34:                                       ; preds = %if.end.30
  %30 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !2924, !tbaa !1534
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %30, i32 0, i32 2, !dbg !2926
  %31 = load i64, i64* %len, align 8, !dbg !2926, !tbaa !2175
  %call35 = call i8* @PyMem_Malloc(i64 %31), !dbg !2927
  store i8* %call35, i8** %mem, align 8, !dbg !2928, !tbaa !1534
  %32 = load i8*, i8** %mem, align 8, !dbg !2929, !tbaa !1534
  %cmp36 = icmp eq i8* %32, null, !dbg !2931
  br i1 %cmp36, label %if.then.38, label %if.end.40, !dbg !2932

if.then.38:                                       ; preds = %if.then.34
  %call39 = call %struct._object* @PyErr_NoMemory(), !dbg !2933
  store i64 -1, i64* %retval, !dbg !2935
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2935

if.end.40:                                        ; preds = %if.then.34
  %33 = load i8*, i8** %mem, align 8, !dbg !2936, !tbaa !1534
  %34 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !2938, !tbaa !1534
  %call41 = call i32 @buffer_to_contiguous(i8* %33, %struct.bufferinfo* %34, i8 signext 67), !dbg !2939
  %cmp42 = icmp slt i32 %call41, 0, !dbg !2940
  br i1 %cmp42, label %if.then.44, label %if.end.45, !dbg !2941

if.then.44:                                       ; preds = %if.end.40
  %35 = load i8*, i8** %mem, align 8, !dbg !2942, !tbaa !1534
  call void @PyMem_Free(i8* %35), !dbg !2944
  store i64 -1, i64* %retval, !dbg !2945
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2945

if.end.45:                                        ; preds = %if.end.40
  br label %if.end.46, !dbg !2946

if.end.46:                                        ; preds = %if.end.45, %if.end.30
  %36 = load i8*, i8** %mem, align 8, !dbg !2947, !tbaa !1534
  %37 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !2948, !tbaa !1534
  %len47 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %37, i32 0, i32 2, !dbg !2949
  %38 = load i64, i64* %len47, align 8, !dbg !2949, !tbaa !2175
  %call48 = call i64 @_Py_HashBytes(i8* %36, i64 %38), !dbg !2950
  %39 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !2951, !tbaa !1534
  %hash49 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %39, i32 0, i32 2, !dbg !2952
  store i64 %call48, i64* %hash49, align 8, !dbg !2953, !tbaa !2842
  %40 = load i8*, i8** %mem, align 8, !dbg !2954, !tbaa !1534
  %41 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !2956, !tbaa !1534
  %buf50 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %41, i32 0, i32 0, !dbg !2957
  %42 = load i8*, i8** %buf50, align 8, !dbg !2957, !tbaa !1826
  %cmp51 = icmp ne i8* %40, %42, !dbg !2958
  br i1 %cmp51, label %if.then.53, label %if.end.54, !dbg !2959

if.then.53:                                       ; preds = %if.end.46
  %43 = load i8*, i8** %mem, align 8, !dbg !2960, !tbaa !1534
  call void @PyMem_Free(i8* %43), !dbg !2961
  br label %if.end.54, !dbg !2961

if.end.54:                                        ; preds = %if.then.53, %if.end.46
  store i32 0, i32* %cleanup.dest.slot, !dbg !2962
  br label %cleanup, !dbg !2962

cleanup:                                          ; preds = %if.end.54, %if.then.44, %if.then.38, %if.then.29, %if.then.21, %if.then.7, %if.then.5
  call void @llvm.lifetime.end(i64 1, i8* %fmt) #3, !dbg !2962
  %44 = bitcast i64* %ret to i8*, !dbg !2963
  call void @llvm.lifetime.end(i64 8, i8* %44) #3, !dbg !2963
  %45 = bitcast i8** %mem to i8*, !dbg !2963
  call void @llvm.lifetime.end(i64 8, i8* %45) #3, !dbg !2963
  %46 = bitcast %struct.bufferinfo** %view to i8*, !dbg !2963
  call void @llvm.lifetime.end(i64 8, i8* %46) #3, !dbg !2963
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.58, !dbg !2965

if.end.58:                                        ; preds = %cleanup.cont, %entry
  %47 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !2966, !tbaa !1534
  %hash59 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %47, i32 0, i32 2, !dbg !2967
  %48 = load i64, i64* %hash59, align 8, !dbg !2967, !tbaa !2842
  store i64 %48, i64* %retval, !dbg !2968
  br label %return, !dbg !2968

return:                                           ; preds = %LeafBlock, %if.end.58
  %49 = load i64, i64* %retval, !dbg !2969
  ret i64 %49, !dbg !2969
}

; Function Attrs: nounwind uwtable
define internal i32 @memory_traverse(%struct.PyMemoryViewObject* %self, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.PyMemoryViewObject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.PyMemoryViewObject* %self, %struct.PyMemoryViewObject** %self.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %self.addr, metadata !1032, metadata !1538), !dbg !2970
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !1033, metadata !1538), !dbg !2971
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !1034, metadata !1538), !dbg !2972
  br label %do.body, !dbg !2973

do.body:                                          ; preds = %entry
  %0 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !2974, !tbaa !1534
  %mbuf = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %0, i32 0, i32 1, !dbg !2976
  %1 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !2976, !tbaa !1805
  %tobool = icmp ne %struct._PyManagedBufferObject* %1, null, !dbg !2977
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !2978

if.then:                                          ; preds = %do.body
  %2 = bitcast i32* %vret to i8*, !dbg !2979
  call void @llvm.lifetime.start(i64 4, i8* %2) #3, !dbg !2979
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !1035, metadata !1538), !dbg !2981
  %3 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !2982, !tbaa !1534
  %4 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !2983, !tbaa !1534
  %mbuf1 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %4, i32 0, i32 1, !dbg !2984
  %5 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf1, align 8, !dbg !2984, !tbaa !1805
  %6 = bitcast %struct._PyManagedBufferObject* %5 to %struct._object*, !dbg !2985
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !2986, !tbaa !1534
  %call = call i32 %3(%struct._object* %6, i8* %7), !dbg !2982
  store i32 %call, i32* %vret, align 4, !dbg !2981, !tbaa !1580
  %8 = load i32, i32* %vret, align 4, !dbg !2987, !tbaa !1580
  %tobool2 = icmp ne i32 %8, 0, !dbg !2987
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !2989

if.then.3:                                        ; preds = %if.then
  %9 = load i32, i32* %vret, align 4, !dbg !2990, !tbaa !1580
  store i32 %9, i32* %retval, !dbg !2992
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2992

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !2993
  br label %cleanup, !dbg !2993

cleanup:                                          ; preds = %if.end, %if.then.3
  %10 = bitcast i32* %vret to i8*, !dbg !2995
  call void @llvm.lifetime.end(i64 4, i8* %10) #3, !dbg !2995
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.4, !dbg !2998

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !2999

do.end:                                           ; preds = %if.end.4
  store i32 0, i32* %retval, !dbg !3002
  br label %return, !dbg !3002

return:                                           ; preds = %LeafBlock, %do.end
  %11 = load i32, i32* %retval, !dbg !3003
  ret i32 %11, !dbg !3003
}

; Function Attrs: nounwind uwtable
define internal i32 @memory_clear(%struct.PyMemoryViewObject* %self) #0 {
entry:
  %self.addr = alloca %struct.PyMemoryViewObject*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PyMemoryViewObject* %self, %struct.PyMemoryViewObject** %self.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %self.addr, metadata !1041, metadata !1538), !dbg !3004
  %0 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !3005, !tbaa !1534
  %call = call i32 @_memory_release(%struct.PyMemoryViewObject* %0), !dbg !3006
  br label %do.body, !dbg !3007

do.body:                                          ; preds = %entry
  %1 = bitcast %struct._object** %_py_tmp to i8*, !dbg !3008
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !3008
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1042, metadata !1538), !dbg !3010
  %2 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !3011, !tbaa !1534
  %mbuf = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %2, i32 0, i32 1, !dbg !3012
  %3 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !3012, !tbaa !1805
  %4 = bitcast %struct._PyManagedBufferObject* %3 to %struct._object*, !dbg !3013
  store %struct._object* %4, %struct._object** %_py_tmp, align 8, !dbg !3010, !tbaa !1534
  %5 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !3014, !tbaa !1534
  %cmp = icmp ne %struct._object* %5, null, !dbg !3015
  br i1 %cmp, label %if.then, label %if.end.5, !dbg !3016

if.then:                                          ; preds = %do.body
  %6 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !3017, !tbaa !1534
  %mbuf1 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %6, i32 0, i32 1, !dbg !3019
  store %struct._PyManagedBufferObject* null, %struct._PyManagedBufferObject** %mbuf1, align 8, !dbg !3020, !tbaa !1805
  br label %do.body.2, !dbg !3021

do.body.2:                                        ; preds = %if.then
  %7 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3022
  call void @llvm.lifetime.start(i64 8, i8* %7) #3, !dbg !3022
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1044, metadata !1538), !dbg !3024
  %8 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !3025, !tbaa !1534
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8, !dbg !3024, !tbaa !1534
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3026, !tbaa !1534
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0, !dbg !3028
  %10 = load i64, i64* %ob_refcnt, align 8, !dbg !3029, !tbaa !1642
  %dec = add i64 %10, -1, !dbg !3029
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3029, !tbaa !1642
  %cmp3 = icmp ne i64 %dec, 0, !dbg !3030
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !3031

if.then.4:                                        ; preds = %do.body.2
  br label %if.end, !dbg !3032

if.else:                                          ; preds = %do.body.2
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3034, !tbaa !1534
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !3036
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3036, !tbaa !1650
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4, !dbg !3037
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3037, !tbaa !1652
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3038, !tbaa !1534
  call void %13(%struct._object* %14), !dbg !3039
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3040
  call void @llvm.lifetime.end(i64 8, i8* %15) #3, !dbg !3040
  br label %do.cond, !dbg !3042

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !3043

do.end:                                           ; preds = %do.cond
  br label %if.end.5, !dbg !3045

if.end.5:                                         ; preds = %do.end, %do.body
  %16 = bitcast %struct._object** %_py_tmp to i8*, !dbg !3047
  call void @llvm.lifetime.end(i64 8, i8* %16) #3, !dbg !3047
  br label %do.end.7, !dbg !3050

do.end.7:                                         ; preds = %if.end.5
  ret i32 0, !dbg !3051
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @memory_richcompare(%struct._object* %v, %struct._object* %w, i32 %op) #0 {
entry:
  %v.addr = alloca %struct._object*, align 8
  %w.addr = alloca %struct._object*, align 8
  %op.addr = alloca i32, align 4
  %res = alloca %struct._object*, align 8
  %wbuf = alloca %struct.bufferinfo, align 8
  %vv = alloca %struct.bufferinfo*, align 8
  %ww = alloca %struct.bufferinfo*, align 8
  %unpack_v = alloca %struct.unpacker*, align 8
  %unpack_w = alloca %struct.unpacker*, align 8
  %vfmt = alloca i8, align 1
  %wfmt = alloca i8, align 1
  %equal = alloca i32, align 4
  %_py_xincref_tmp = alloca %struct._object*, align 8
  store %struct._object* %v, %struct._object** %v.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._object** %v.addr, metadata !1050, metadata !1538), !dbg !3052
  store %struct._object* %w, %struct._object** %w.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._object** %w.addr, metadata !1051, metadata !1538), !dbg !3053
  store i32 %op, i32* %op.addr, align 4, !tbaa !1580
  call void @llvm.dbg.declare(metadata i32* %op.addr, metadata !1052, metadata !1538), !dbg !3054
  %0 = bitcast %struct._object** %res to i8*, !dbg !3055
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !3055
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1053, metadata !1538), !dbg !3056
  %1 = bitcast %struct.bufferinfo* %wbuf to i8*, !dbg !3057
  call void @llvm.lifetime.start(i64 80, i8* %1) #3, !dbg !3057
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %wbuf, metadata !1054, metadata !1538), !dbg !3058
  %2 = bitcast %struct.bufferinfo** %vv to i8*, !dbg !3057
  call void @llvm.lifetime.start(i64 8, i8* %2) #3, !dbg !3057
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %vv, metadata !1055, metadata !1538), !dbg !3059
  %3 = bitcast %struct.bufferinfo** %ww to i8*, !dbg !3060
  call void @llvm.lifetime.start(i64 8, i8* %3) #3, !dbg !3060
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %ww, metadata !1056, metadata !1538), !dbg !3061
  store %struct.bufferinfo* null, %struct.bufferinfo** %ww, align 8, !dbg !3061, !tbaa !1534
  %4 = bitcast %struct.unpacker** %unpack_v to i8*, !dbg !3062
  call void @llvm.lifetime.start(i64 8, i8* %4) #3, !dbg !3062
  call void @llvm.dbg.declare(metadata %struct.unpacker** %unpack_v, metadata !1057, metadata !1538), !dbg !3063
  store %struct.unpacker* null, %struct.unpacker** %unpack_v, align 8, !dbg !3063, !tbaa !1534
  %5 = bitcast %struct.unpacker** %unpack_w to i8*, !dbg !3064
  call void @llvm.lifetime.start(i64 8, i8* %5) #3, !dbg !3064
  call void @llvm.dbg.declare(metadata %struct.unpacker** %unpack_w, metadata !1065, metadata !1538), !dbg !3065
  store %struct.unpacker* null, %struct.unpacker** %unpack_w, align 8, !dbg !3065, !tbaa !1534
  call void @llvm.lifetime.start(i64 1, i8* %vfmt) #3, !dbg !3066
  call void @llvm.dbg.declare(metadata i8* %vfmt, metadata !1066, metadata !1538), !dbg !3067
  call void @llvm.lifetime.start(i64 1, i8* %wfmt) #3, !dbg !3066
  call void @llvm.dbg.declare(metadata i8* %wfmt, metadata !1067, metadata !1538), !dbg !3068
  %6 = bitcast i32* %equal to i8*, !dbg !3069
  call void @llvm.lifetime.start(i64 4, i8* %6) #3, !dbg !3069
  call void @llvm.dbg.declare(metadata i32* %equal, metadata !1068, metadata !1538), !dbg !3070
  store i32 -2, i32* %equal, align 4, !dbg !3070, !tbaa !1580
  %7 = load i32, i32* %op.addr, align 4, !dbg !3071, !tbaa !1580
  %cmp = icmp ne i32 %7, 2, !dbg !3073
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3074

land.lhs.true:                                    ; preds = %entry
  %8 = load i32, i32* %op.addr, align 4, !dbg !3075, !tbaa !1580
  %cmp1 = icmp ne i32 %8, 3, !dbg !3077
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3078

if.then:                                          ; preds = %land.lhs.true
  br label %result, !dbg !3079

if.end:                                           ; preds = %land.lhs.true, %entry
  %9 = load %struct._object*, %struct._object** %v.addr, align 8, !dbg !3080, !tbaa !1534
  %10 = bitcast %struct._object* %9 to %struct.PyMemoryViewObject*, !dbg !3082
  %flags = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %10, i32 0, i32 3, !dbg !3083
  %11 = load i32, i32* %flags, align 4, !dbg !3083, !tbaa !1894
  %and = and i32 %11, 1, !dbg !3084
  %tobool = icmp ne i32 %and, 0, !dbg !3084
  br i1 %tobool, label %if.then.5, label %lor.lhs.false, !dbg !3085

lor.lhs.false:                                    ; preds = %if.end
  %12 = load %struct._object*, %struct._object** %v.addr, align 8, !dbg !3086, !tbaa !1534
  %13 = bitcast %struct._object* %12 to %struct.PyMemoryViewObject*, !dbg !3088
  %mbuf = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %13, i32 0, i32 1, !dbg !3089
  %14 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !3089, !tbaa !1805
  %flags2 = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %14, i32 0, i32 1, !dbg !3090
  %15 = load i32, i32* %flags2, align 4, !dbg !3090, !tbaa !1545
  %and3 = and i32 %15, 1, !dbg !3091
  %tobool4 = icmp ne i32 %and3, 0, !dbg !3091
  br i1 %tobool4, label %if.then.5, label %if.end.7, !dbg !3092

if.then.5:                                        ; preds = %lor.lhs.false, %if.end
  %16 = load %struct._object*, %struct._object** %v.addr, align 8, !dbg !3093, !tbaa !1534
  %17 = load %struct._object*, %struct._object** %w.addr, align 8, !dbg !3095, !tbaa !1534
  %cmp6 = icmp eq %struct._object* %16, %17, !dbg !3096
  %conv = zext i1 %cmp6 to i32, !dbg !3096
  store i32 %conv, i32* %equal, align 4, !dbg !3097, !tbaa !1580
  br label %result, !dbg !3098

if.end.7:                                         ; preds = %lor.lhs.false
  %18 = load %struct._object*, %struct._object** %v.addr, align 8, !dbg !3099, !tbaa !1534
  %19 = bitcast %struct._object* %18 to %struct.PyMemoryViewObject*, !dbg !3100
  %view = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %19, i32 0, i32 5, !dbg !3101
  store %struct.bufferinfo* %view, %struct.bufferinfo** %vv, align 8, !dbg !3102, !tbaa !1534
  %20 = load %struct._object*, %struct._object** %w.addr, align 8, !dbg !3103, !tbaa !1534
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 1, !dbg !3105
  %21 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3105, !tbaa !1650
  %cmp8 = icmp eq %struct._typeobject* %21, @PyMemoryView_Type, !dbg !3106
  br i1 %cmp8, label %if.then.10, label %if.else, !dbg !3107

if.then.10:                                       ; preds = %if.end.7
  %22 = load %struct._object*, %struct._object** %w.addr, align 8, !dbg !3108, !tbaa !1534
  %23 = bitcast %struct._object* %22 to %struct.PyMemoryViewObject*, !dbg !3111
  %flags11 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %23, i32 0, i32 3, !dbg !3112
  %24 = load i32, i32* %flags11, align 4, !dbg !3112, !tbaa !1894
  %and12 = and i32 %24, 1, !dbg !3113
  %tobool13 = icmp ne i32 %and12, 0, !dbg !3113
  br i1 %tobool13, label %if.then.19, label %lor.lhs.false.14, !dbg !3114

lor.lhs.false.14:                                 ; preds = %if.then.10
  %25 = load %struct._object*, %struct._object** %w.addr, align 8, !dbg !3115, !tbaa !1534
  %26 = bitcast %struct._object* %25 to %struct.PyMemoryViewObject*, !dbg !3117
  %mbuf15 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %26, i32 0, i32 1, !dbg !3118
  %27 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf15, align 8, !dbg !3118, !tbaa !1805
  %flags16 = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %27, i32 0, i32 1, !dbg !3119
  %28 = load i32, i32* %flags16, align 4, !dbg !3119, !tbaa !1545
  %and17 = and i32 %28, 1, !dbg !3120
  %tobool18 = icmp ne i32 %and17, 0, !dbg !3120
  br i1 %tobool18, label %if.then.19, label %if.end.22, !dbg !3121

if.then.19:                                       ; preds = %lor.lhs.false.14, %if.then.10
  %29 = load %struct._object*, %struct._object** %v.addr, align 8, !dbg !3122, !tbaa !1534
  %30 = load %struct._object*, %struct._object** %w.addr, align 8, !dbg !3124, !tbaa !1534
  %cmp20 = icmp eq %struct._object* %29, %30, !dbg !3125
  %conv21 = zext i1 %cmp20 to i32, !dbg !3125
  store i32 %conv21, i32* %equal, align 4, !dbg !3126, !tbaa !1580
  br label %result, !dbg !3127

if.end.22:                                        ; preds = %lor.lhs.false.14
  %31 = load %struct._object*, %struct._object** %w.addr, align 8, !dbg !3128, !tbaa !1534
  %32 = bitcast %struct._object* %31 to %struct.PyMemoryViewObject*, !dbg !3129
  %view23 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %32, i32 0, i32 5, !dbg !3130
  store %struct.bufferinfo* %view23, %struct.bufferinfo** %ww, align 8, !dbg !3131, !tbaa !1534
  br label %if.end.28, !dbg !3132

if.else:                                          ; preds = %if.end.7
  %33 = load %struct._object*, %struct._object** %w.addr, align 8, !dbg !3133, !tbaa !1534
  %call = call i32 @PyObject_GetBuffer(%struct._object* %33, %struct.bufferinfo* %wbuf, i32 284), !dbg !3136
  %cmp24 = icmp slt i32 %call, 0, !dbg !3137
  br i1 %cmp24, label %if.then.26, label %if.end.27, !dbg !3138

if.then.26:                                       ; preds = %if.else
  call void @PyErr_Clear(), !dbg !3139
  br label %result, !dbg !3141

if.end.27:                                        ; preds = %if.else
  store %struct.bufferinfo* %wbuf, %struct.bufferinfo** %ww, align 8, !dbg !3142, !tbaa !1534
  br label %if.end.28

if.end.28:                                        ; preds = %if.end.27, %if.end.22
  %34 = load %struct.bufferinfo*, %struct.bufferinfo** %vv, align 8, !dbg !3143, !tbaa !1534
  %35 = load %struct.bufferinfo*, %struct.bufferinfo** %ww, align 8, !dbg !3145, !tbaa !1534
  %call29 = call i32 @equiv_shape(%struct.bufferinfo* %34, %struct.bufferinfo* %35), !dbg !3146
  %tobool30 = icmp ne i32 %call29, 0, !dbg !3146
  br i1 %tobool30, label %if.end.32, label %if.then.31, !dbg !3147

if.then.31:                                       ; preds = %if.end.28
  call void @PyErr_Clear(), !dbg !3148
  store i32 0, i32* %equal, align 4, !dbg !3150, !tbaa !1580
  br label %result, !dbg !3151

if.end.32:                                        ; preds = %if.end.28
  %36 = load %struct.bufferinfo*, %struct.bufferinfo** %vv, align 8, !dbg !3152, !tbaa !1534
  %format = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %36, i32 0, i32 6, !dbg !3154
  %37 = load i8*, i8** %format, align 8, !dbg !3154, !tbaa !2219
  %call33 = call i64 @get_native_fmtchar(i8* %vfmt, i8* %37), !dbg !3155
  %cmp34 = icmp slt i64 %call33, 0, !dbg !3156
  br i1 %cmp34, label %if.then.36, label %if.end.37, !dbg !3157

if.then.36:                                       ; preds = %if.end.32
  store i8 95, i8* %vfmt, align 1, !dbg !3158, !tbaa !2033
  br label %if.end.37, !dbg !3159

if.end.37:                                        ; preds = %if.then.36, %if.end.32
  %38 = load %struct.bufferinfo*, %struct.bufferinfo** %ww, align 8, !dbg !3160, !tbaa !1534
  %format38 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %38, i32 0, i32 6, !dbg !3162
  %39 = load i8*, i8** %format38, align 8, !dbg !3162, !tbaa !2219
  %call39 = call i64 @get_native_fmtchar(i8* %wfmt, i8* %39), !dbg !3163
  %cmp40 = icmp slt i64 %call39, 0, !dbg !3164
  br i1 %cmp40, label %if.then.42, label %if.end.43, !dbg !3165

if.then.42:                                       ; preds = %if.end.37
  store i8 95, i8* %wfmt, align 1, !dbg !3166, !tbaa !2033
  br label %if.end.43, !dbg !3167

if.end.43:                                        ; preds = %if.then.42, %if.end.37
  %40 = load i8, i8* %vfmt, align 1, !dbg !3168, !tbaa !2033
  %conv44 = sext i8 %40 to i32, !dbg !3168
  %cmp45 = icmp eq i32 %conv44, 95, !dbg !3170
  br i1 %cmp45, label %if.then.56, label %lor.lhs.false.47, !dbg !3171

lor.lhs.false.47:                                 ; preds = %if.end.43
  %41 = load i8, i8* %wfmt, align 1, !dbg !3172, !tbaa !2033
  %conv48 = sext i8 %41 to i32, !dbg !3172
  %cmp49 = icmp eq i32 %conv48, 95, !dbg !3174
  br i1 %cmp49, label %if.then.56, label %lor.lhs.false.51, !dbg !3175

lor.lhs.false.51:                                 ; preds = %lor.lhs.false.47
  %42 = load i8, i8* %vfmt, align 1, !dbg !3176, !tbaa !2033
  %conv52 = sext i8 %42 to i32, !dbg !3176
  %43 = load i8, i8* %wfmt, align 1, !dbg !3178, !tbaa !2033
  %conv53 = sext i8 %43 to i32, !dbg !3178
  %cmp54 = icmp ne i32 %conv52, %conv53, !dbg !3179
  br i1 %cmp54, label %if.then.56, label %if.end.72, !dbg !3180

if.then.56:                                       ; preds = %lor.lhs.false.51, %lor.lhs.false.47, %if.end.43
  store i8 95, i8* %vfmt, align 1, !dbg !3181, !tbaa !2033
  %44 = load %struct.bufferinfo*, %struct.bufferinfo** %vv, align 8, !dbg !3183, !tbaa !1534
  %format57 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %44, i32 0, i32 6, !dbg !3184
  %45 = load i8*, i8** %format57, align 8, !dbg !3184, !tbaa !2219
  %46 = load %struct.bufferinfo*, %struct.bufferinfo** %vv, align 8, !dbg !3185, !tbaa !1534
  %itemsize = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %46, i32 0, i32 3, !dbg !3186
  %47 = load i64, i64* %itemsize, align 8, !dbg !3186, !tbaa !2289
  %call58 = call %struct.unpacker* @struct_get_unpacker(i8* %45, i64 %47), !dbg !3187
  store %struct.unpacker* %call58, %struct.unpacker** %unpack_v, align 8, !dbg !3188, !tbaa !1534
  %48 = load %struct.unpacker*, %struct.unpacker** %unpack_v, align 8, !dbg !3189, !tbaa !1534
  %cmp59 = icmp eq %struct.unpacker* %48, null, !dbg !3191
  br i1 %cmp59, label %if.then.61, label %if.end.63, !dbg !3192

if.then.61:                                       ; preds = %if.then.56
  %call62 = call i32 @fix_struct_error_int(), !dbg !3193
  store i32 %call62, i32* %equal, align 4, !dbg !3195, !tbaa !1580
  br label %result, !dbg !3196

if.end.63:                                        ; preds = %if.then.56
  %49 = load %struct.bufferinfo*, %struct.bufferinfo** %ww, align 8, !dbg !3197, !tbaa !1534
  %format64 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %49, i32 0, i32 6, !dbg !3198
  %50 = load i8*, i8** %format64, align 8, !dbg !3198, !tbaa !2219
  %51 = load %struct.bufferinfo*, %struct.bufferinfo** %ww, align 8, !dbg !3199, !tbaa !1534
  %itemsize65 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %51, i32 0, i32 3, !dbg !3200
  %52 = load i64, i64* %itemsize65, align 8, !dbg !3200, !tbaa !2289
  %call66 = call %struct.unpacker* @struct_get_unpacker(i8* %50, i64 %52), !dbg !3201
  store %struct.unpacker* %call66, %struct.unpacker** %unpack_w, align 8, !dbg !3202, !tbaa !1534
  %53 = load %struct.unpacker*, %struct.unpacker** %unpack_w, align 8, !dbg !3203, !tbaa !1534
  %cmp67 = icmp eq %struct.unpacker* %53, null, !dbg !3205
  br i1 %cmp67, label %if.then.69, label %if.end.71, !dbg !3206

if.then.69:                                       ; preds = %if.end.63
  %call70 = call i32 @fix_struct_error_int(), !dbg !3207
  store i32 %call70, i32* %equal, align 4, !dbg !3209, !tbaa !1580
  br label %result, !dbg !3210

if.end.71:                                        ; preds = %if.end.63
  br label %if.end.72, !dbg !3211

if.end.72:                                        ; preds = %if.end.71, %lor.lhs.false.51
  %54 = load %struct.bufferinfo*, %struct.bufferinfo** %vv, align 8, !dbg !3212, !tbaa !1534
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %54, i32 0, i32 5, !dbg !3214
  %55 = load i32, i32* %ndim, align 4, !dbg !3214, !tbaa !1771
  %cmp73 = icmp eq i32 %55, 0, !dbg !3215
  br i1 %cmp73, label %if.then.75, label %if.else.78, !dbg !3216

if.then.75:                                       ; preds = %if.end.72
  %56 = load %struct.bufferinfo*, %struct.bufferinfo** %vv, align 8, !dbg !3217, !tbaa !1534
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %56, i32 0, i32 0, !dbg !3219
  %57 = load i8*, i8** %buf, align 8, !dbg !3219, !tbaa !1826
  %58 = load %struct.bufferinfo*, %struct.bufferinfo** %ww, align 8, !dbg !3220, !tbaa !1534
  %buf76 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %58, i32 0, i32 0, !dbg !3221
  %59 = load i8*, i8** %buf76, align 8, !dbg !3221, !tbaa !1826
  %60 = load i8, i8* %vfmt, align 1, !dbg !3222, !tbaa !2033
  %61 = load %struct.unpacker*, %struct.unpacker** %unpack_v, align 8, !dbg !3223, !tbaa !1534
  %62 = load %struct.unpacker*, %struct.unpacker** %unpack_w, align 8, !dbg !3224, !tbaa !1534
  %call77 = call i32 @unpack_cmp(i8* %57, i8* %59, i8 signext %60, %struct.unpacker* %61, %struct.unpacker* %62), !dbg !3225
  store i32 %call77, i32* %equal, align 4, !dbg !3226, !tbaa !1580
  br label %if.end.100, !dbg !3227

if.else.78:                                       ; preds = %if.end.72
  %63 = load %struct.bufferinfo*, %struct.bufferinfo** %vv, align 8, !dbg !3228, !tbaa !1534
  %ndim79 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %63, i32 0, i32 5, !dbg !3230
  %64 = load i32, i32* %ndim79, align 4, !dbg !3230, !tbaa !1771
  %cmp80 = icmp eq i32 %64, 1, !dbg !3231
  br i1 %cmp80, label %if.then.82, label %if.else.88, !dbg !3232

if.then.82:                                       ; preds = %if.else.78
  %65 = load %struct.bufferinfo*, %struct.bufferinfo** %vv, align 8, !dbg !3233, !tbaa !1534
  %buf83 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %65, i32 0, i32 0, !dbg !3235
  %66 = load i8*, i8** %buf83, align 8, !dbg !3235, !tbaa !1826
  %67 = load %struct.bufferinfo*, %struct.bufferinfo** %ww, align 8, !dbg !3236, !tbaa !1534
  %buf84 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %67, i32 0, i32 0, !dbg !3237
  %68 = load i8*, i8** %buf84, align 8, !dbg !3237, !tbaa !1826
  %69 = load %struct.bufferinfo*, %struct.bufferinfo** %vv, align 8, !dbg !3238, !tbaa !1534
  %shape = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %69, i32 0, i32 7, !dbg !3239
  %70 = load i64*, i64** %shape, align 8, !dbg !3239, !tbaa !2308
  %71 = load %struct.bufferinfo*, %struct.bufferinfo** %vv, align 8, !dbg !3240, !tbaa !1534
  %strides = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %71, i32 0, i32 8, !dbg !3241
  %72 = load i64*, i64** %strides, align 8, !dbg !3241, !tbaa !2541
  %73 = load %struct.bufferinfo*, %struct.bufferinfo** %vv, align 8, !dbg !3242, !tbaa !1534
  %suboffsets = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %73, i32 0, i32 9, !dbg !3243
  %74 = load i64*, i64** %suboffsets, align 8, !dbg !3243, !tbaa !2334
  %75 = load %struct.bufferinfo*, %struct.bufferinfo** %ww, align 8, !dbg !3244, !tbaa !1534
  %strides85 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %75, i32 0, i32 8, !dbg !3245
  %76 = load i64*, i64** %strides85, align 8, !dbg !3245, !tbaa !2541
  %77 = load %struct.bufferinfo*, %struct.bufferinfo** %ww, align 8, !dbg !3246, !tbaa !1534
  %suboffsets86 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %77, i32 0, i32 9, !dbg !3247
  %78 = load i64*, i64** %suboffsets86, align 8, !dbg !3247, !tbaa !2334
  %79 = load i8, i8* %vfmt, align 1, !dbg !3248, !tbaa !2033
  %80 = load %struct.unpacker*, %struct.unpacker** %unpack_v, align 8, !dbg !3249, !tbaa !1534
  %81 = load %struct.unpacker*, %struct.unpacker** %unpack_w, align 8, !dbg !3250, !tbaa !1534
  %call87 = call i32 @cmp_base(i8* %66, i8* %68, i64* %70, i64* %72, i64* %74, i64* %76, i64* %78, i8 signext %79, %struct.unpacker* %80, %struct.unpacker* %81), !dbg !3251
  store i32 %call87, i32* %equal, align 4, !dbg !3252, !tbaa !1580
  br label %if.end.99, !dbg !3253

if.else.88:                                       ; preds = %if.else.78
  %82 = load %struct.bufferinfo*, %struct.bufferinfo** %vv, align 8, !dbg !3254, !tbaa !1534
  %buf89 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %82, i32 0, i32 0, !dbg !3256
  %83 = load i8*, i8** %buf89, align 8, !dbg !3256, !tbaa !1826
  %84 = load %struct.bufferinfo*, %struct.bufferinfo** %ww, align 8, !dbg !3257, !tbaa !1534
  %buf90 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %84, i32 0, i32 0, !dbg !3258
  %85 = load i8*, i8** %buf90, align 8, !dbg !3258, !tbaa !1826
  %86 = load %struct.bufferinfo*, %struct.bufferinfo** %vv, align 8, !dbg !3259, !tbaa !1534
  %ndim91 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %86, i32 0, i32 5, !dbg !3260
  %87 = load i32, i32* %ndim91, align 4, !dbg !3260, !tbaa !1771
  %conv92 = sext i32 %87 to i64, !dbg !3259
  %88 = load %struct.bufferinfo*, %struct.bufferinfo** %vv, align 8, !dbg !3261, !tbaa !1534
  %shape93 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %88, i32 0, i32 7, !dbg !3262
  %89 = load i64*, i64** %shape93, align 8, !dbg !3262, !tbaa !2308
  %90 = load %struct.bufferinfo*, %struct.bufferinfo** %vv, align 8, !dbg !3263, !tbaa !1534
  %strides94 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %90, i32 0, i32 8, !dbg !3264
  %91 = load i64*, i64** %strides94, align 8, !dbg !3264, !tbaa !2541
  %92 = load %struct.bufferinfo*, %struct.bufferinfo** %vv, align 8, !dbg !3265, !tbaa !1534
  %suboffsets95 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %92, i32 0, i32 9, !dbg !3266
  %93 = load i64*, i64** %suboffsets95, align 8, !dbg !3266, !tbaa !2334
  %94 = load %struct.bufferinfo*, %struct.bufferinfo** %ww, align 8, !dbg !3267, !tbaa !1534
  %strides96 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %94, i32 0, i32 8, !dbg !3268
  %95 = load i64*, i64** %strides96, align 8, !dbg !3268, !tbaa !2541
  %96 = load %struct.bufferinfo*, %struct.bufferinfo** %ww, align 8, !dbg !3269, !tbaa !1534
  %suboffsets97 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %96, i32 0, i32 9, !dbg !3270
  %97 = load i64*, i64** %suboffsets97, align 8, !dbg !3270, !tbaa !2334
  %98 = load i8, i8* %vfmt, align 1, !dbg !3271, !tbaa !2033
  %99 = load %struct.unpacker*, %struct.unpacker** %unpack_v, align 8, !dbg !3272, !tbaa !1534
  %100 = load %struct.unpacker*, %struct.unpacker** %unpack_w, align 8, !dbg !3273, !tbaa !1534
  %call98 = call i32 @cmp_rec(i8* %83, i8* %85, i64 %conv92, i64* %89, i64* %91, i64* %93, i64* %95, i64* %97, i8 signext %98, %struct.unpacker* %99, %struct.unpacker* %100), !dbg !3274
  store i32 %call98, i32* %equal, align 4, !dbg !3275, !tbaa !1580
  br label %if.end.99

if.end.99:                                        ; preds = %if.else.88, %if.then.82
  br label %if.end.100

if.end.100:                                       ; preds = %if.end.99, %if.then.75
  br label %result, !dbg !3276

result:                                           ; preds = %if.end.100, %if.then.69, %if.then.61, %if.then.31, %if.then.26, %if.then.19, %if.then.5, %if.then
  %101 = load i32, i32* %equal, align 4, !dbg !3277, !tbaa !1580
  %cmp101 = icmp slt i32 %101, 0, !dbg !3279
  br i1 %cmp101, label %if.then.103, label %if.else.109, !dbg !3280

if.then.103:                                      ; preds = %result
  %102 = load i32, i32* %equal, align 4, !dbg !3281, !tbaa !1580
  %cmp104 = icmp eq i32 %102, -2, !dbg !3284
  br i1 %cmp104, label %if.then.106, label %if.else.107, !dbg !3285

if.then.106:                                      ; preds = %if.then.103
  store %struct._object* @_Py_NotImplementedStruct, %struct._object** %res, align 8, !dbg !3286, !tbaa !1534
  br label %if.end.108, !dbg !3287

if.else.107:                                      ; preds = %if.then.103
  store %struct._object* null, %struct._object** %res, align 8, !dbg !3288, !tbaa !1534
  br label %if.end.108

if.end.108:                                       ; preds = %if.else.107, %if.then.106
  br label %if.end.122, !dbg !3289

if.else.109:                                      ; preds = %result
  %103 = load i32, i32* %equal, align 4, !dbg !3290, !tbaa !1580
  %tobool110 = icmp ne i32 %103, 0, !dbg !3290
  br i1 %tobool110, label %land.lhs.true.111, label %lor.lhs.false.114, !dbg !3292

land.lhs.true.111:                                ; preds = %if.else.109
  %104 = load i32, i32* %op.addr, align 4, !dbg !3293, !tbaa !1580
  %cmp112 = icmp eq i32 %104, 2, !dbg !3295
  br i1 %cmp112, label %if.then.119, label %lor.lhs.false.114, !dbg !3296

lor.lhs.false.114:                                ; preds = %land.lhs.true.111, %if.else.109
  %105 = load i32, i32* %equal, align 4, !dbg !3297, !tbaa !1580
  %tobool115 = icmp ne i32 %105, 0, !dbg !3297
  br i1 %tobool115, label %if.else.120, label %land.lhs.true.116, !dbg !3300

land.lhs.true.116:                                ; preds = %lor.lhs.false.114
  %106 = load i32, i32* %op.addr, align 4, !dbg !3301, !tbaa !1580
  %cmp117 = icmp eq i32 %106, 3, !dbg !3303
  br i1 %cmp117, label %if.then.119, label %if.else.120, !dbg !3304

if.then.119:                                      ; preds = %land.lhs.true.116, %land.lhs.true.111
  store %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0), %struct._object** %res, align 8, !dbg !3305, !tbaa !1534
  br label %if.end.121, !dbg !3306

if.else.120:                                      ; preds = %land.lhs.true.116, %lor.lhs.false.114
  store %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_FalseStruct, i32 0, i32 0, i32 0), %struct._object** %res, align 8, !dbg !3307, !tbaa !1534
  br label %if.end.121

if.end.121:                                       ; preds = %if.else.120, %if.then.119
  br label %if.end.122

if.end.122:                                       ; preds = %if.end.121, %if.end.108
  %107 = load %struct.bufferinfo*, %struct.bufferinfo** %ww, align 8, !dbg !3308, !tbaa !1534
  %cmp123 = icmp eq %struct.bufferinfo* %107, %wbuf, !dbg !3310
  br i1 %cmp123, label %if.then.125, label %if.end.126, !dbg !3311

if.then.125:                                      ; preds = %if.end.122
  %108 = load %struct.bufferinfo*, %struct.bufferinfo** %ww, align 8, !dbg !3312, !tbaa !1534
  call void @PyBuffer_Release(%struct.bufferinfo* %108), !dbg !3313
  br label %if.end.126, !dbg !3313

if.end.126:                                       ; preds = %if.then.125, %if.end.122
  %109 = load %struct.unpacker*, %struct.unpacker** %unpack_v, align 8, !dbg !3314, !tbaa !1534
  call void @unpacker_free(%struct.unpacker* %109), !dbg !3315
  %110 = load %struct.unpacker*, %struct.unpacker** %unpack_w, align 8, !dbg !3316, !tbaa !1534
  call void @unpacker_free(%struct.unpacker* %110), !dbg !3317
  br label %do.body, !dbg !3318

do.body:                                          ; preds = %if.end.126
  %111 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !3319
  call void @llvm.lifetime.start(i64 8, i8* %111) #3, !dbg !3319
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xincref_tmp, metadata !1069, metadata !1538), !dbg !3321
  %112 = load %struct._object*, %struct._object** %res, align 8, !dbg !3322, !tbaa !1534
  store %struct._object* %112, %struct._object** %_py_xincref_tmp, align 8, !dbg !3321, !tbaa !1534
  %113 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !3323, !tbaa !1534
  %cmp127 = icmp ne %struct._object* %113, null, !dbg !3325
  br i1 %cmp127, label %if.then.129, label %if.end.130, !dbg !3326

if.then.129:                                      ; preds = %do.body
  %114 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !3327, !tbaa !1534
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %114, i32 0, i32 0, !dbg !3329
  %115 = load i64, i64* %ob_refcnt, align 8, !dbg !3330, !tbaa !1642
  %inc = add i64 %115, 1, !dbg !3330
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !3330, !tbaa !1642
  br label %if.end.130, !dbg !3331

if.end.130:                                       ; preds = %if.then.129, %do.body
  %116 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !3332
  call void @llvm.lifetime.end(i64 8, i8* %116) #3, !dbg !3332
  br label %do.cond, !dbg !3335

do.cond:                                          ; preds = %if.end.130
  br label %do.end, !dbg !3336

do.end:                                           ; preds = %do.cond
  %117 = load %struct._object*, %struct._object** %res, align 8, !dbg !3338, !tbaa !1534
  %118 = bitcast i32* %equal to i8*, !dbg !3339
  call void @llvm.lifetime.end(i64 4, i8* %118) #3, !dbg !3339
  call void @llvm.lifetime.end(i64 1, i8* %wfmt) #3, !dbg !3339
  call void @llvm.lifetime.end(i64 1, i8* %vfmt) #3, !dbg !3339
  %119 = bitcast %struct.unpacker** %unpack_w to i8*, !dbg !3339
  call void @llvm.lifetime.end(i64 8, i8* %119) #3, !dbg !3339
  %120 = bitcast %struct.unpacker** %unpack_v to i8*, !dbg !3339
  call void @llvm.lifetime.end(i64 8, i8* %120) #3, !dbg !3339
  %121 = bitcast %struct.bufferinfo** %ww to i8*, !dbg !3339
  call void @llvm.lifetime.end(i64 8, i8* %121) #3, !dbg !3339
  %122 = bitcast %struct.bufferinfo** %vv to i8*, !dbg !3339
  call void @llvm.lifetime.end(i64 8, i8* %122) #3, !dbg !3339
  %123 = bitcast %struct.bufferinfo* %wbuf to i8*, !dbg !3339
  call void @llvm.lifetime.end(i64 80, i8* %123) #3, !dbg !3339
  %124 = bitcast %struct._object** %res to i8*, !dbg !3339
  call void @llvm.lifetime.end(i64 8, i8* %124) #3, !dbg !3339
  ret %struct._object* %117, !dbg !3340
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @memory_new(%struct._typeobject* %subtype, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %subtype.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %obj = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._typeobject* %subtype, %struct._typeobject** %subtype.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._typeobject** %subtype.addr, metadata !1440, metadata !1538), !dbg !3341
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1441, metadata !1538), !dbg !3342
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1442, metadata !1538), !dbg !3343
  %0 = bitcast %struct._object** %obj to i8*, !dbg !3344
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !3344
  call void @llvm.dbg.declare(metadata %struct._object** %obj, metadata !1443, metadata !1538), !dbg !3345
  %1 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !3346, !tbaa !1534
  %2 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !3348, !tbaa !1534
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %1, %struct._object* %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.76, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @memory_new.kwlist, i32 0, i32 0), %struct._object** %obj), !dbg !3349
  %tobool = icmp ne i32 %call, 0, !dbg !3349
  br i1 %tobool, label %if.end, label %if.then, !dbg !3350

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !3351
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3351

if.end:                                           ; preds = %entry
  %3 = load %struct._object*, %struct._object** %obj, align 8, !dbg !3353, !tbaa !1534
  %call1 = call %struct._object* @PyMemoryView_FromObject(%struct._object* %3), !dbg !3354
  store %struct._object* %call1, %struct._object** %retval, !dbg !3355
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3355

cleanup:                                          ; preds = %if.end, %if.then
  %4 = bitcast %struct._object** %obj to i8*, !dbg !3356
  call void @llvm.lifetime.end(i64 8, i8* %4) #3, !dbg !3356
  %5 = load %struct._object*, %struct._object** %retval, !dbg !3356
  ret %struct._object* %5, !dbg !3356
}

; Function Attrs: nounwind uwtable
define internal void @mbuf_release(%struct._PyManagedBufferObject* %self) #0 {
entry:
  %self.addr = alloca %struct._PyManagedBufferObject*, align 8
  %g = alloca %union._gc_head*, align 8
  store %struct._PyManagedBufferObject* %self, %struct._PyManagedBufferObject** %self.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._PyManagedBufferObject** %self.addr, metadata !496, metadata !1538), !dbg !3357
  %0 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %self.addr, align 8, !dbg !3358, !tbaa !1534
  %flags = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %0, i32 0, i32 1, !dbg !3360
  %1 = load i32, i32* %flags, align 4, !dbg !3360, !tbaa !1545
  %and = and i32 %1, 1, !dbg !3361
  %tobool = icmp ne i32 %and, 0, !dbg !3361
  br i1 %tobool, label %if.then, label %if.end, !dbg !3362

if.then:                                          ; preds = %entry
  br label %return, !dbg !3363

if.end:                                           ; preds = %entry
  %2 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %self.addr, align 8, !dbg !3364, !tbaa !1534
  %flags1 = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %2, i32 0, i32 1, !dbg !3365
  %3 = load i32, i32* %flags1, align 4, !dbg !3366, !tbaa !1545
  %or = or i32 %3, 1, !dbg !3366
  store i32 %or, i32* %flags1, align 4, !dbg !3366, !tbaa !1545
  br label %do.body, !dbg !3367

do.body:                                          ; preds = %if.end
  %4 = bitcast %union._gc_head** %g to i8*, !dbg !3368
  call void @llvm.lifetime.start(i64 8, i8* %4) #3, !dbg !3368
  call void @llvm.dbg.declare(metadata %union._gc_head** %g, metadata !497, metadata !1538), !dbg !3370
  %5 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %self.addr, align 8, !dbg !3371, !tbaa !1534
  %6 = bitcast %struct._PyManagedBufferObject* %5 to %union._gc_head*, !dbg !3372
  %add.ptr = getelementptr %union._gc_head, %union._gc_head* %6, i64 -1, !dbg !3373
  store %union._gc_head* %add.ptr, %union._gc_head** %g, align 8, !dbg !3370, !tbaa !1534
  br label %do.body.2, !dbg !3374

do.body.2:                                        ; preds = %do.body
  %7 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !3375, !tbaa !1534
  %gc = bitcast %union._gc_head* %7 to %struct.anon*, !dbg !3378
  %gc_refs = getelementptr inbounds %struct.anon, %struct.anon* %gc, i32 0, i32 2, !dbg !3379
  %8 = load i64, i64* %gc_refs, align 8, !dbg !3379, !tbaa !1697
  %and3 = and i64 %8, 1, !dbg !3380
  %or4 = or i64 %and3, -4, !dbg !3381
  %9 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !3382, !tbaa !1534
  %gc5 = bitcast %union._gc_head* %9 to %struct.anon*, !dbg !3383
  %gc_refs6 = getelementptr inbounds %struct.anon, %struct.anon* %gc5, i32 0, i32 2, !dbg !3384
  store i64 %or4, i64* %gc_refs6, align 8, !dbg !3385, !tbaa !1697
  br label %do.cond, !dbg !3386

do.cond:                                          ; preds = %do.body.2
  br label %do.end, !dbg !3387

do.end:                                           ; preds = %do.cond
  %10 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !3389, !tbaa !1534
  %gc7 = bitcast %union._gc_head* %10 to %struct.anon*, !dbg !3391
  %gc_next = getelementptr inbounds %struct.anon, %struct.anon* %gc7, i32 0, i32 0, !dbg !3392
  %11 = load %union._gc_head*, %union._gc_head** %gc_next, align 8, !dbg !3392, !tbaa !1726
  %12 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !3393, !tbaa !1534
  %gc8 = bitcast %union._gc_head* %12 to %struct.anon*, !dbg !3394
  %gc_prev = getelementptr inbounds %struct.anon, %struct.anon* %gc8, i32 0, i32 1, !dbg !3395
  %13 = load %union._gc_head*, %union._gc_head** %gc_prev, align 8, !dbg !3395, !tbaa !1730
  %gc9 = bitcast %union._gc_head* %13 to %struct.anon*, !dbg !3396
  %gc_next10 = getelementptr inbounds %struct.anon, %struct.anon* %gc9, i32 0, i32 0, !dbg !3397
  store %union._gc_head* %11, %union._gc_head** %gc_next10, align 8, !dbg !3398, !tbaa !1726
  %14 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !3399, !tbaa !1534
  %gc11 = bitcast %union._gc_head* %14 to %struct.anon*, !dbg !3400
  %gc_prev12 = getelementptr inbounds %struct.anon, %struct.anon* %gc11, i32 0, i32 1, !dbg !3401
  %15 = load %union._gc_head*, %union._gc_head** %gc_prev12, align 8, !dbg !3401, !tbaa !1730
  %16 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !3402, !tbaa !1534
  %gc13 = bitcast %union._gc_head* %16 to %struct.anon*, !dbg !3403
  %gc_next14 = getelementptr inbounds %struct.anon, %struct.anon* %gc13, i32 0, i32 0, !dbg !3404
  %17 = load %union._gc_head*, %union._gc_head** %gc_next14, align 8, !dbg !3404, !tbaa !1726
  %gc15 = bitcast %union._gc_head* %17 to %struct.anon*, !dbg !3405
  %gc_prev16 = getelementptr inbounds %struct.anon, %struct.anon* %gc15, i32 0, i32 1, !dbg !3406
  store %union._gc_head* %15, %union._gc_head** %gc_prev16, align 8, !dbg !3407, !tbaa !1730
  %18 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !3408, !tbaa !1534
  %gc17 = bitcast %union._gc_head* %18 to %struct.anon*, !dbg !3409
  %gc_next18 = getelementptr inbounds %struct.anon, %struct.anon* %gc17, i32 0, i32 0, !dbg !3410
  store %union._gc_head* null, %union._gc_head** %gc_next18, align 8, !dbg !3411, !tbaa !1726
  %19 = bitcast %union._gc_head** %g to i8*, !dbg !3412
  call void @llvm.lifetime.end(i64 8, i8* %19) #3, !dbg !3412
  br label %do.end.20, !dbg !3413

do.end.20:                                        ; preds = %do.end
  %20 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %self.addr, align 8, !dbg !3414, !tbaa !1534
  %master = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %20, i32 0, i32 3, !dbg !3415
  call void @PyBuffer_Release(%struct.bufferinfo* %master), !dbg !3416
  br label %return, !dbg !3417

return:                                           ; preds = %do.end.20, %if.then
  ret void, !dbg !3418
}

declare void @PyObject_GC_Del(i8*) #1

declare void @PyBuffer_Release(%struct.bufferinfo*) #1

declare %struct._object* @_PyObject_GC_New(%struct._typeobject*) #1

; Function Attrs: noreturn
declare void @Py_FatalError(i8*) #5

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.PyMemoryViewObject* @memory_alloc(i32 %ndim) #4 {
entry:
  %retval = alloca %struct.PyMemoryViewObject*, align 8
  %ndim.addr = alloca i32, align 4
  %mv = alloca %struct.PyMemoryViewObject*, align 8
  %cleanup.dest.slot = alloca i32
  %g = alloca %union._gc_head*, align 8
  store i32 %ndim, i32* %ndim.addr, align 4, !tbaa !1580
  call void @llvm.dbg.declare(metadata i32* %ndim.addr, metadata !536, metadata !1538), !dbg !3420
  %0 = bitcast %struct.PyMemoryViewObject** %mv to i8*, !dbg !3421
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !3421
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %mv, metadata !537, metadata !1538), !dbg !3422
  %1 = load i32, i32* %ndim.addr, align 4, !dbg !3423, !tbaa !1580
  %mul = mul i32 3, %1, !dbg !3424
  %conv = sext i32 %mul to i64, !dbg !3425
  %call = call %struct.PyVarObject* @_PyObject_GC_NewVar(%struct._typeobject* @PyMemoryView_Type, i64 %conv), !dbg !3426
  %2 = bitcast %struct.PyVarObject* %call to %struct.PyMemoryViewObject*, !dbg !3427
  store %struct.PyMemoryViewObject* %2, %struct.PyMemoryViewObject** %mv, align 8, !dbg !3428, !tbaa !1534
  %3 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !3429, !tbaa !1534
  %cmp = icmp eq %struct.PyMemoryViewObject* %3, null, !dbg !3431
  br i1 %cmp, label %if.then, label %if.end, !dbg !3432

if.then:                                          ; preds = %entry
  store %struct.PyMemoryViewObject* null, %struct.PyMemoryViewObject** %retval, !dbg !3433
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3433

if.end:                                           ; preds = %entry
  %4 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !3434, !tbaa !1534
  %mbuf = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %4, i32 0, i32 1, !dbg !3435
  store %struct._PyManagedBufferObject* null, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !3436, !tbaa !1805
  %5 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !3437, !tbaa !1534
  %hash = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %5, i32 0, i32 2, !dbg !3438
  store i64 -1, i64* %hash, align 8, !dbg !3439, !tbaa !2842
  %6 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !3440, !tbaa !1534
  %flags = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %6, i32 0, i32 3, !dbg !3441
  store i32 0, i32* %flags, align 4, !dbg !3442, !tbaa !1894
  %7 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !3443, !tbaa !1534
  %exports = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %7, i32 0, i32 4, !dbg !3444
  store i64 0, i64* %exports, align 8, !dbg !3445, !tbaa !3446
  %8 = load i32, i32* %ndim.addr, align 4, !dbg !3447, !tbaa !1580
  %9 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !3448, !tbaa !1534
  %view = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %9, i32 0, i32 5, !dbg !3449
  %ndim2 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view, i32 0, i32 5, !dbg !3450
  store i32 %8, i32* %ndim2, align 4, !dbg !3451, !tbaa !3452
  %10 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !3453, !tbaa !1534
  %ob_array = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %10, i32 0, i32 8, !dbg !3454
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %ob_array, i32 0, i32 0, !dbg !3453
  %11 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !3455, !tbaa !1534
  %view3 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %11, i32 0, i32 5, !dbg !3456
  %shape = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view3, i32 0, i32 7, !dbg !3457
  store i64* %arraydecay, i64** %shape, align 8, !dbg !3458, !tbaa !3459
  %12 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !3460, !tbaa !1534
  %ob_array4 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %12, i32 0, i32 8, !dbg !3461
  %arraydecay5 = getelementptr inbounds [1 x i64], [1 x i64]* %ob_array4, i32 0, i32 0, !dbg !3460
  %13 = load i32, i32* %ndim.addr, align 4, !dbg !3462, !tbaa !1580
  %idx.ext = sext i32 %13 to i64, !dbg !3463
  %add.ptr = getelementptr i64, i64* %arraydecay5, i64 %idx.ext, !dbg !3463
  %14 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !3464, !tbaa !1534
  %view6 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %14, i32 0, i32 5, !dbg !3465
  %strides = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view6, i32 0, i32 8, !dbg !3466
  store i64* %add.ptr, i64** %strides, align 8, !dbg !3467, !tbaa !3468
  %15 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !3469, !tbaa !1534
  %ob_array7 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %15, i32 0, i32 8, !dbg !3470
  %arraydecay8 = getelementptr inbounds [1 x i64], [1 x i64]* %ob_array7, i32 0, i32 0, !dbg !3469
  %16 = load i32, i32* %ndim.addr, align 4, !dbg !3471, !tbaa !1580
  %mul9 = mul i32 2, %16, !dbg !3472
  %idx.ext10 = sext i32 %mul9 to i64, !dbg !3473
  %add.ptr11 = getelementptr i64, i64* %arraydecay8, i64 %idx.ext10, !dbg !3473
  %17 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !3474, !tbaa !1534
  %view12 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %17, i32 0, i32 5, !dbg !3475
  %suboffsets = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view12, i32 0, i32 9, !dbg !3476
  store i64* %add.ptr11, i64** %suboffsets, align 8, !dbg !3477, !tbaa !3478
  %18 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !3479, !tbaa !1534
  %weakreflist = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %18, i32 0, i32 7, !dbg !3480
  store %struct._object* null, %struct._object** %weakreflist, align 8, !dbg !3481, !tbaa !2817
  br label %do.body, !dbg !3482

do.body:                                          ; preds = %if.end
  %19 = bitcast %union._gc_head** %g to i8*, !dbg !3483
  call void @llvm.lifetime.start(i64 8, i8* %19) #3, !dbg !3483
  call void @llvm.dbg.declare(metadata %union._gc_head** %g, metadata !538, metadata !1538), !dbg !3485
  %20 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !3486, !tbaa !1534
  %21 = bitcast %struct.PyMemoryViewObject* %20 to %union._gc_head*, !dbg !3487
  %add.ptr13 = getelementptr %union._gc_head, %union._gc_head* %21, i64 -1, !dbg !3488
  store %union._gc_head* %add.ptr13, %union._gc_head** %g, align 8, !dbg !3485, !tbaa !1534
  %22 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !3489, !tbaa !1534
  %gc = bitcast %union._gc_head* %22 to %struct.anon*, !dbg !3491
  %gc_refs = getelementptr inbounds %struct.anon, %struct.anon* %gc, i32 0, i32 2, !dbg !3492
  %23 = load i64, i64* %gc_refs, align 8, !dbg !3492, !tbaa !1697
  %shr = ashr i64 %23, 1, !dbg !3493
  %cmp14 = icmp ne i64 %shr, -2, !dbg !3494
  br i1 %cmp14, label %if.then.16, label %if.end.17, !dbg !3495

if.then.16:                                       ; preds = %do.body
  call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8, i32 0, i32 0)) #8, !dbg !3496
  unreachable, !dbg !3496

if.end.17:                                        ; preds = %do.body
  br label %do.body.18, !dbg !3498

do.body.18:                                       ; preds = %if.end.17
  %24 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !3500, !tbaa !1534
  %gc19 = bitcast %union._gc_head* %24 to %struct.anon*, !dbg !3503
  %gc_refs20 = getelementptr inbounds %struct.anon, %struct.anon* %gc19, i32 0, i32 2, !dbg !3504
  %25 = load i64, i64* %gc_refs20, align 8, !dbg !3504, !tbaa !1697
  %and = and i64 %25, 1, !dbg !3505
  %or = or i64 %and, -6, !dbg !3506
  %26 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !3507, !tbaa !1534
  %gc21 = bitcast %union._gc_head* %26 to %struct.anon*, !dbg !3508
  %gc_refs22 = getelementptr inbounds %struct.anon, %struct.anon* %gc21, i32 0, i32 2, !dbg !3509
  store i64 %or, i64* %gc_refs22, align 8, !dbg !3510, !tbaa !1697
  br label %do.cond, !dbg !3511

do.cond:                                          ; preds = %do.body.18
  br label %do.end, !dbg !3512

do.end:                                           ; preds = %do.cond
  %27 = load %union._gc_head*, %union._gc_head** @_PyGC_generation0, align 8, !dbg !3514, !tbaa !1534
  %28 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !3516, !tbaa !1534
  %gc23 = bitcast %union._gc_head* %28 to %struct.anon*, !dbg !3517
  %gc_next = getelementptr inbounds %struct.anon, %struct.anon* %gc23, i32 0, i32 0, !dbg !3518
  store %union._gc_head* %27, %union._gc_head** %gc_next, align 8, !dbg !3519, !tbaa !1726
  %29 = load %union._gc_head*, %union._gc_head** @_PyGC_generation0, align 8, !dbg !3520, !tbaa !1534
  %gc24 = bitcast %union._gc_head* %29 to %struct.anon*, !dbg !3521
  %gc_prev = getelementptr inbounds %struct.anon, %struct.anon* %gc24, i32 0, i32 1, !dbg !3522
  %30 = load %union._gc_head*, %union._gc_head** %gc_prev, align 8, !dbg !3522, !tbaa !1730
  %31 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !3523, !tbaa !1534
  %gc25 = bitcast %union._gc_head* %31 to %struct.anon*, !dbg !3524
  %gc_prev26 = getelementptr inbounds %struct.anon, %struct.anon* %gc25, i32 0, i32 1, !dbg !3525
  store %union._gc_head* %30, %union._gc_head** %gc_prev26, align 8, !dbg !3526, !tbaa !1730
  %32 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !3527, !tbaa !1534
  %33 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !3528, !tbaa !1534
  %gc27 = bitcast %union._gc_head* %33 to %struct.anon*, !dbg !3529
  %gc_prev28 = getelementptr inbounds %struct.anon, %struct.anon* %gc27, i32 0, i32 1, !dbg !3530
  %34 = load %union._gc_head*, %union._gc_head** %gc_prev28, align 8, !dbg !3530, !tbaa !1730
  %gc29 = bitcast %union._gc_head* %34 to %struct.anon*, !dbg !3531
  %gc_next30 = getelementptr inbounds %struct.anon, %struct.anon* %gc29, i32 0, i32 0, !dbg !3532
  store %union._gc_head* %32, %union._gc_head** %gc_next30, align 8, !dbg !3533, !tbaa !1726
  %35 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !3534, !tbaa !1534
  %36 = load %union._gc_head*, %union._gc_head** @_PyGC_generation0, align 8, !dbg !3535, !tbaa !1534
  %gc31 = bitcast %union._gc_head* %36 to %struct.anon*, !dbg !3536
  %gc_prev32 = getelementptr inbounds %struct.anon, %struct.anon* %gc31, i32 0, i32 1, !dbg !3537
  store %union._gc_head* %35, %union._gc_head** %gc_prev32, align 8, !dbg !3538, !tbaa !1730
  %37 = bitcast %union._gc_head** %g to i8*, !dbg !3539
  call void @llvm.lifetime.end(i64 8, i8* %37) #3, !dbg !3539
  br label %do.cond.33, !dbg !3540

do.cond.33:                                       ; preds = %do.end
  br label %do.end.34, !dbg !3541

do.end.34:                                        ; preds = %do.cond.33
  %38 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !3543, !tbaa !1534
  store %struct.PyMemoryViewObject* %38, %struct.PyMemoryViewObject** %retval, !dbg !3544
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3544

cleanup:                                          ; preds = %do.end.34, %if.then
  %39 = bitcast %struct.PyMemoryViewObject** %mv to i8*, !dbg !3545
  call void @llvm.lifetime.end(i64 8, i8* %39) #3, !dbg !3545
  %40 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %retval, !dbg !3545
  ret %struct.PyMemoryViewObject* %40, !dbg !3545
}

; Function Attrs: nounwind uwtable
define internal void @init_flags(%struct.PyMemoryViewObject* %mv) #0 {
entry:
  %mv.addr = alloca %struct.PyMemoryViewObject*, align 8
  %view = alloca %struct.bufferinfo*, align 8
  %flags = alloca i32, align 4
  store %struct.PyMemoryViewObject* %mv, %struct.PyMemoryViewObject** %mv.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %mv.addr, metadata !544, metadata !1538), !dbg !3546
  %0 = bitcast %struct.bufferinfo** %view to i8*, !dbg !3547
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !3547
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %view, metadata !545, metadata !1538), !dbg !3548
  %1 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv.addr, align 8, !dbg !3549, !tbaa !1534
  %view1 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %1, i32 0, i32 5, !dbg !3550
  store %struct.bufferinfo* %view1, %struct.bufferinfo** %view, align 8, !dbg !3548, !tbaa !1534
  %2 = bitcast i32* %flags to i8*, !dbg !3551
  call void @llvm.lifetime.start(i64 4, i8* %2) #3, !dbg !3551
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !546, metadata !1538), !dbg !3552
  store i32 0, i32* %flags, align 4, !dbg !3552, !tbaa !1580
  %3 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !3553, !tbaa !1534
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %3, i32 0, i32 5, !dbg !3554
  %4 = load i32, i32* %ndim, align 4, !dbg !3554, !tbaa !1771
  br label %NodeBlock

NodeBlock:                                        ; preds = %entry
  %Pivot = icmp slt i32 %4, 1
  br i1 %Pivot, label %LeafBlock, label %LeafBlock.1

LeafBlock.1:                                      ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %4, 1
  br i1 %SwitchLeaf2, label %sw.bb.2, label %NewDefault

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %4, 0
  br i1 %SwitchLeaf, label %sw.bb, label %NewDefault

sw.bb:                                            ; preds = %LeafBlock
  %5 = load i32, i32* %flags, align 4, !dbg !3555, !tbaa !1580
  %or = or i32 %5, 14, !dbg !3555
  store i32 %or, i32* %flags, align 4, !dbg !3555, !tbaa !1580
  br label %sw.epilog, !dbg !3557

sw.bb.2:                                          ; preds = %LeafBlock.1
  %6 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !3558, !tbaa !1534
  %shape = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %6, i32 0, i32 7, !dbg !3560
  %7 = load i64*, i64** %shape, align 8, !dbg !3560, !tbaa !2308
  %arrayidx = getelementptr i64, i64* %7, i64 0, !dbg !3561
  %8 = load i64, i64* %arrayidx, align 8, !dbg !3561, !tbaa !1603
  %cmp = icmp eq i64 %8, 1, !dbg !3562
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3563

lor.lhs.false:                                    ; preds = %sw.bb.2
  %9 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !3564, !tbaa !1534
  %strides = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %9, i32 0, i32 8, !dbg !3566
  %10 = load i64*, i64** %strides, align 8, !dbg !3566, !tbaa !2541
  %arrayidx3 = getelementptr i64, i64* %10, i64 0, !dbg !3567
  %11 = load i64, i64* %arrayidx3, align 8, !dbg !3567, !tbaa !1603
  %12 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !3568, !tbaa !1534
  %itemsize = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %12, i32 0, i32 3, !dbg !3569
  %13 = load i64, i64* %itemsize, align 8, !dbg !3569, !tbaa !2289
  %cmp4 = icmp eq i64 %11, %13, !dbg !3570
  br i1 %cmp4, label %if.then, label %if.end, !dbg !3571

if.then:                                          ; preds = %lor.lhs.false, %sw.bb.2
  %14 = load i32, i32* %flags, align 4, !dbg !3572, !tbaa !1580
  %or5 = or i32 %14, 6, !dbg !3572
  store i32 %or5, i32* %flags, align 4, !dbg !3572, !tbaa !1580
  br label %if.end, !dbg !3573

if.end:                                           ; preds = %if.then, %lor.lhs.false
  br label %sw.epilog, !dbg !3574

NewDefault:                                       ; preds = %LeafBlock.1, %LeafBlock
  br label %sw.default

sw.default:                                       ; preds = %NewDefault
  %15 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !3575, !tbaa !1534
  %call = call i32 @PyBuffer_IsContiguous(%struct.bufferinfo* %15, i8 signext 67), !dbg !3577
  %tobool = icmp ne i32 %call, 0, !dbg !3577
  br i1 %tobool, label %if.then.6, label %if.end.8, !dbg !3578

if.then.6:                                        ; preds = %sw.default
  %16 = load i32, i32* %flags, align 4, !dbg !3579, !tbaa !1580
  %or7 = or i32 %16, 2, !dbg !3579
  store i32 %or7, i32* %flags, align 4, !dbg !3579, !tbaa !1580
  br label %if.end.8, !dbg !3580

if.end.8:                                         ; preds = %if.then.6, %sw.default
  %17 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !3581, !tbaa !1534
  %call9 = call i32 @PyBuffer_IsContiguous(%struct.bufferinfo* %17, i8 signext 70), !dbg !3583
  %tobool10 = icmp ne i32 %call9, 0, !dbg !3583
  br i1 %tobool10, label %if.then.11, label %if.end.13, !dbg !3584

if.then.11:                                       ; preds = %if.end.8
  %18 = load i32, i32* %flags, align 4, !dbg !3585, !tbaa !1580
  %or12 = or i32 %18, 4, !dbg !3585
  store i32 %or12, i32* %flags, align 4, !dbg !3585, !tbaa !1580
  br label %if.end.13, !dbg !3586

if.end.13:                                        ; preds = %if.then.11, %if.end.8
  br label %sw.epilog, !dbg !3587

sw.epilog:                                        ; preds = %if.end.13, %if.end, %sw.bb
  %19 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !3588, !tbaa !1534
  %suboffsets = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %19, i32 0, i32 9, !dbg !3590
  %20 = load i64*, i64** %suboffsets, align 8, !dbg !3590, !tbaa !2334
  %tobool14 = icmp ne i64* %20, null, !dbg !3588
  br i1 %tobool14, label %if.then.15, label %if.end.17, !dbg !3591

if.then.15:                                       ; preds = %sw.epilog
  %21 = load i32, i32* %flags, align 4, !dbg !3592, !tbaa !1580
  %or16 = or i32 %21, 16, !dbg !3592
  store i32 %or16, i32* %flags, align 4, !dbg !3592, !tbaa !1580
  %22 = load i32, i32* %flags, align 4, !dbg !3594, !tbaa !1580
  %and = and i32 %22, -7, !dbg !3594
  store i32 %and, i32* %flags, align 4, !dbg !3594, !tbaa !1580
  br label %if.end.17, !dbg !3595

if.end.17:                                        ; preds = %if.then.15, %sw.epilog
  %23 = load i32, i32* %flags, align 4, !dbg !3596, !tbaa !1580
  %24 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv.addr, align 8, !dbg !3597, !tbaa !1534
  %flags18 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %24, i32 0, i32 3, !dbg !3598
  store i32 %23, i32* %flags18, align 4, !dbg !3599, !tbaa !1894
  %25 = bitcast i32* %flags to i8*, !dbg !3600
  call void @llvm.lifetime.end(i64 4, i8* %25) #3, !dbg !3600
  %26 = bitcast %struct.bufferinfo** %view to i8*, !dbg !3600
  call void @llvm.lifetime.end(i64 8, i8* %26) #3, !dbg !3600
  ret void, !dbg !3600
}

declare %struct.PyVarObject* @_PyObject_GC_NewVar(%struct._typeobject*, i64) #1

declare i32 @PyObject_GetBuffer(%struct._object*, %struct.bufferinfo*, i32) #1

declare %struct._object* @PyBytes_FromStringAndSize(i8*, i64) #1

; Function Attrs: nounwind uwtable
define internal i32 @mbuf_copy_format(%struct._PyManagedBufferObject* %mbuf, i8* %fmt) #0 {
entry:
  %retval = alloca i32, align 4
  %mbuf.addr = alloca %struct._PyManagedBufferObject*, align 8
  %fmt.addr = alloca i8*, align 8
  %cp = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._PyManagedBufferObject* %mbuf, %struct._PyManagedBufferObject** %mbuf.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._PyManagedBufferObject** %mbuf.addr, metadata !582, metadata !1538), !dbg !3601
  store i8* %fmt, i8** %fmt.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !583, metadata !1538), !dbg !3602
  %0 = load i8*, i8** %fmt.addr, align 8, !dbg !3603, !tbaa !1534
  %cmp = icmp ne i8* %0, null, !dbg !3604
  br i1 %cmp, label %if.then, label %if.end.6, !dbg !3605

if.then:                                          ; preds = %entry
  %1 = bitcast i8** %cp to i8*, !dbg !3606
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !3606
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !584, metadata !1538), !dbg !3607
  %2 = load i8*, i8** %fmt.addr, align 8, !dbg !3608, !tbaa !1534
  %call = call i64 @strlen(i8* %2) #9, !dbg !3609
  %add = add i64 %call, 1, !dbg !3610
  %call1 = call i8* @PyMem_Malloc(i64 %add), !dbg !3611
  store i8* %call1, i8** %cp, align 8, !dbg !3607, !tbaa !1534
  %3 = load i8*, i8** %cp, align 8, !dbg !3612, !tbaa !1534
  %cmp2 = icmp eq i8* %3, null, !dbg !3614
  br i1 %cmp2, label %if.then.3, label %if.end, !dbg !3615

if.then.3:                                        ; preds = %if.then
  %call4 = call %struct._object* @PyErr_NoMemory(), !dbg !3616
  store i32 -1, i32* %retval, !dbg !3618
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3618

if.end:                                           ; preds = %if.then
  %4 = load i8*, i8** %cp, align 8, !dbg !3619, !tbaa !1534
  %5 = load i8*, i8** %fmt.addr, align 8, !dbg !3620, !tbaa !1534
  %call5 = call i8* @strcpy(i8* %4, i8* %5) #3, !dbg !3621
  %6 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf.addr, align 8, !dbg !3622, !tbaa !1534
  %master = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %6, i32 0, i32 3, !dbg !3623
  %format = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %master, i32 0, i32 6, !dbg !3624
  store i8* %call5, i8** %format, align 8, !dbg !3625, !tbaa !1556
  %7 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf.addr, align 8, !dbg !3626, !tbaa !1534
  %flags = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %7, i32 0, i32 1, !dbg !3627
  %8 = load i32, i32* %flags, align 4, !dbg !3628, !tbaa !1545
  %or = or i32 %8, 2, !dbg !3628
  store i32 %or, i32* %flags, align 4, !dbg !3628, !tbaa !1545
  store i32 0, i32* %cleanup.dest.slot, !dbg !3629
  br label %cleanup, !dbg !3629

cleanup:                                          ; preds = %if.end, %if.then.3
  %9 = bitcast i8** %cp to i8*, !dbg !3630
  call void @llvm.lifetime.end(i64 8, i8* %9) #3, !dbg !3630
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.6, !dbg !3632

if.end.6:                                         ; preds = %cleanup.cont, %entry
  store i32 0, i32* %retval, !dbg !3633
  br label %return, !dbg !3633

return:                                           ; preds = %LeafBlock, %if.end.6
  %10 = load i32, i32* %retval, !dbg !3634
  ret i32 %10, !dbg !3634
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @mbuf_add_incomplete_view(%struct._PyManagedBufferObject* %mbuf, %struct.bufferinfo* %src, i32 %ndim) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %mbuf.addr = alloca %struct._PyManagedBufferObject*, align 8
  %src.addr = alloca %struct.bufferinfo*, align 8
  %ndim.addr = alloca i32, align 4
  %mv = alloca %struct.PyMemoryViewObject*, align 8
  %dest = alloca %struct.bufferinfo*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._PyManagedBufferObject* %mbuf, %struct._PyManagedBufferObject** %mbuf.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._PyManagedBufferObject** %mbuf.addr, metadata !591, metadata !1538), !dbg !3635
  store %struct.bufferinfo* %src, %struct.bufferinfo** %src.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %src.addr, metadata !592, metadata !1538), !dbg !3636
  store i32 %ndim, i32* %ndim.addr, align 4, !tbaa !1580
  call void @llvm.dbg.declare(metadata i32* %ndim.addr, metadata !593, metadata !1538), !dbg !3637
  %0 = bitcast %struct.PyMemoryViewObject** %mv to i8*, !dbg !3638
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !3638
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %mv, metadata !594, metadata !1538), !dbg !3639
  %1 = bitcast %struct.bufferinfo** %dest to i8*, !dbg !3640
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !3640
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %dest, metadata !595, metadata !1538), !dbg !3641
  %2 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !3642, !tbaa !1534
  %cmp = icmp eq %struct.bufferinfo* %2, null, !dbg !3644
  br i1 %cmp, label %if.then, label %if.end, !dbg !3645

if.then:                                          ; preds = %entry
  %3 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf.addr, align 8, !dbg !3646, !tbaa !1534
  %master = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %3, i32 0, i32 3, !dbg !3647
  store %struct.bufferinfo* %master, %struct.bufferinfo** %src.addr, align 8, !dbg !3648, !tbaa !1534
  br label %if.end, !dbg !3649

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32, i32* %ndim.addr, align 4, !dbg !3650, !tbaa !1580
  %call = call %struct.PyMemoryViewObject* @memory_alloc(i32 %4), !dbg !3651
  store %struct.PyMemoryViewObject* %call, %struct.PyMemoryViewObject** %mv, align 8, !dbg !3652, !tbaa !1534
  %5 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !3653, !tbaa !1534
  %cmp1 = icmp eq %struct.PyMemoryViewObject* %5, null, !dbg !3655
  br i1 %cmp1, label %if.then.2, label %if.end.3, !dbg !3656

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !3657
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3657

if.end.3:                                         ; preds = %if.end
  %6 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !3658, !tbaa !1534
  %view = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %6, i32 0, i32 5, !dbg !3659
  store %struct.bufferinfo* %view, %struct.bufferinfo** %dest, align 8, !dbg !3660, !tbaa !1534
  %7 = load %struct.bufferinfo*, %struct.bufferinfo** %dest, align 8, !dbg !3661, !tbaa !1534
  %8 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !3662, !tbaa !1534
  call void @init_shared_values(%struct.bufferinfo* %7, %struct.bufferinfo* %8), !dbg !3663
  %9 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf.addr, align 8, !dbg !3664, !tbaa !1534
  %10 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !3665, !tbaa !1534
  %mbuf4 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %10, i32 0, i32 1, !dbg !3666
  store %struct._PyManagedBufferObject* %9, %struct._PyManagedBufferObject** %mbuf4, align 8, !dbg !3667, !tbaa !1805
  %11 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf.addr, align 8, !dbg !3668, !tbaa !1534
  %12 = bitcast %struct._PyManagedBufferObject* %11 to %struct._object*, !dbg !3669
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 0, !dbg !3670
  %13 = load i64, i64* %ob_refcnt, align 8, !dbg !3671, !tbaa !1642
  %inc = add i64 %13, 1, !dbg !3671
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !3671, !tbaa !1642
  %14 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf.addr, align 8, !dbg !3672, !tbaa !1534
  %exports = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %14, i32 0, i32 2, !dbg !3673
  %15 = load i64, i64* %exports, align 8, !dbg !3674, !tbaa !1681
  %inc5 = add i64 %15, 1, !dbg !3674
  store i64 %inc5, i64* %exports, align 8, !dbg !3674, !tbaa !1681
  %16 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !3675, !tbaa !1534
  %17 = bitcast %struct.PyMemoryViewObject* %16 to %struct._object*, !dbg !3676
  store %struct._object* %17, %struct._object** %retval, !dbg !3677
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3677

cleanup:                                          ; preds = %if.end.3, %if.then.2
  %18 = bitcast %struct.bufferinfo** %dest to i8*, !dbg !3678
  call void @llvm.lifetime.end(i64 8, i8* %18) #3, !dbg !3678
  %19 = bitcast %struct.PyMemoryViewObject** %mv to i8*, !dbg !3678
  call void @llvm.lifetime.end(i64 8, i8* %19) #3, !dbg !3678
  %20 = load %struct._object*, %struct._object** %retval, !dbg !3678
  ret %struct._object* %20, !dbg !3678
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @init_strides_from_shape(%struct.bufferinfo* %view) #4 {
entry:
  %view.addr = alloca %struct.bufferinfo*, align 8
  %i = alloca i64, align 8
  store %struct.bufferinfo* %view, %struct.bufferinfo** %view.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %view.addr, metadata !600, metadata !1538), !dbg !3679
  %0 = bitcast i64* %i to i8*, !dbg !3680
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !3680
  call void @llvm.dbg.declare(metadata i64* %i, metadata !601, metadata !1538), !dbg !3681
  %1 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !3682, !tbaa !1534
  %itemsize = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %1, i32 0, i32 3, !dbg !3683
  %2 = load i64, i64* %itemsize, align 8, !dbg !3683, !tbaa !2289
  %3 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !3684, !tbaa !1534
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %3, i32 0, i32 5, !dbg !3685
  %4 = load i32, i32* %ndim, align 4, !dbg !3685, !tbaa !1771
  %sub = sub i32 %4, 1, !dbg !3686
  %idxprom = sext i32 %sub to i64, !dbg !3687
  %5 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !3687, !tbaa !1534
  %strides = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %5, i32 0, i32 8, !dbg !3688
  %6 = load i64*, i64** %strides, align 8, !dbg !3688, !tbaa !2541
  %arrayidx = getelementptr i64, i64* %6, i64 %idxprom, !dbg !3687
  store i64 %2, i64* %arrayidx, align 8, !dbg !3689, !tbaa !1603
  %7 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !3690, !tbaa !1534
  %ndim1 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %7, i32 0, i32 5, !dbg !3692
  %8 = load i32, i32* %ndim1, align 4, !dbg !3692, !tbaa !1771
  %sub2 = sub i32 %8, 2, !dbg !3693
  %conv = sext i32 %sub2 to i64, !dbg !3690
  store i64 %conv, i64* %i, align 8, !dbg !3694, !tbaa !1603
  br label %for.cond, !dbg !3695

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i64, i64* %i, align 8, !dbg !3696, !tbaa !1603
  %cmp = icmp sge i64 %9, 0, !dbg !3700
  br i1 %cmp, label %for.body, label %for.end, !dbg !3701

for.body:                                         ; preds = %for.cond
  %10 = load i64, i64* %i, align 8, !dbg !3702, !tbaa !1603
  %add = add i64 %10, 1, !dbg !3703
  %11 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !3704, !tbaa !1534
  %strides4 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %11, i32 0, i32 8, !dbg !3705
  %12 = load i64*, i64** %strides4, align 8, !dbg !3705, !tbaa !2541
  %arrayidx5 = getelementptr i64, i64* %12, i64 %add, !dbg !3704
  %13 = load i64, i64* %arrayidx5, align 8, !dbg !3704, !tbaa !1603
  %14 = load i64, i64* %i, align 8, !dbg !3706, !tbaa !1603
  %add6 = add i64 %14, 1, !dbg !3707
  %15 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !3708, !tbaa !1534
  %shape = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %15, i32 0, i32 7, !dbg !3709
  %16 = load i64*, i64** %shape, align 8, !dbg !3709, !tbaa !2308
  %arrayidx7 = getelementptr i64, i64* %16, i64 %add6, !dbg !3708
  %17 = load i64, i64* %arrayidx7, align 8, !dbg !3708, !tbaa !1603
  %mul = mul i64 %13, %17, !dbg !3710
  %18 = load i64, i64* %i, align 8, !dbg !3711, !tbaa !1603
  %19 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !3712, !tbaa !1534
  %strides8 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %19, i32 0, i32 8, !dbg !3713
  %20 = load i64*, i64** %strides8, align 8, !dbg !3713, !tbaa !2541
  %arrayidx9 = getelementptr i64, i64* %20, i64 %18, !dbg !3712
  store i64 %mul, i64* %arrayidx9, align 8, !dbg !3714, !tbaa !1603
  br label %for.inc, !dbg !3712

for.inc:                                          ; preds = %for.body
  %21 = load i64, i64* %i, align 8, !dbg !3715, !tbaa !1603
  %dec = add i64 %21, -1, !dbg !3715
  store i64 %dec, i64* %i, align 8, !dbg !3715, !tbaa !1603
  br label %for.cond, !dbg !3716

for.end:                                          ; preds = %for.cond
  %22 = bitcast i64* %i to i8*, !dbg !3717
  call void @llvm.lifetime.end(i64 8, i8* %22) #3, !dbg !3717
  ret void, !dbg !3717
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @init_fortran_strides_from_shape(%struct.bufferinfo* %view) #4 {
entry:
  %view.addr = alloca %struct.bufferinfo*, align 8
  %i = alloca i64, align 8
  store %struct.bufferinfo* %view, %struct.bufferinfo** %view.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %view.addr, metadata !604, metadata !1538), !dbg !3718
  %0 = bitcast i64* %i to i8*, !dbg !3719
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !3719
  call void @llvm.dbg.declare(metadata i64* %i, metadata !605, metadata !1538), !dbg !3720
  %1 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !3721, !tbaa !1534
  %itemsize = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %1, i32 0, i32 3, !dbg !3722
  %2 = load i64, i64* %itemsize, align 8, !dbg !3722, !tbaa !2289
  %3 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !3723, !tbaa !1534
  %strides = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %3, i32 0, i32 8, !dbg !3724
  %4 = load i64*, i64** %strides, align 8, !dbg !3724, !tbaa !2541
  %arrayidx = getelementptr i64, i64* %4, i64 0, !dbg !3723
  store i64 %2, i64* %arrayidx, align 8, !dbg !3725, !tbaa !1603
  store i64 1, i64* %i, align 8, !dbg !3726, !tbaa !1603
  br label %for.cond, !dbg !3728

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i64, i64* %i, align 8, !dbg !3729, !tbaa !1603
  %6 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !3733, !tbaa !1534
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %6, i32 0, i32 5, !dbg !3734
  %7 = load i32, i32* %ndim, align 4, !dbg !3734, !tbaa !1771
  %conv = sext i32 %7 to i64, !dbg !3733
  %cmp = icmp slt i64 %5, %conv, !dbg !3735
  br i1 %cmp, label %for.body, label %for.end, !dbg !3736

for.body:                                         ; preds = %for.cond
  %8 = load i64, i64* %i, align 8, !dbg !3737, !tbaa !1603
  %sub = sub i64 %8, 1, !dbg !3738
  %9 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !3739, !tbaa !1534
  %strides2 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %9, i32 0, i32 8, !dbg !3740
  %10 = load i64*, i64** %strides2, align 8, !dbg !3740, !tbaa !2541
  %arrayidx3 = getelementptr i64, i64* %10, i64 %sub, !dbg !3739
  %11 = load i64, i64* %arrayidx3, align 8, !dbg !3739, !tbaa !1603
  %12 = load i64, i64* %i, align 8, !dbg !3741, !tbaa !1603
  %sub4 = sub i64 %12, 1, !dbg !3742
  %13 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !3743, !tbaa !1534
  %shape = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %13, i32 0, i32 7, !dbg !3744
  %14 = load i64*, i64** %shape, align 8, !dbg !3744, !tbaa !2308
  %arrayidx5 = getelementptr i64, i64* %14, i64 %sub4, !dbg !3743
  %15 = load i64, i64* %arrayidx5, align 8, !dbg !3743, !tbaa !1603
  %mul = mul i64 %11, %15, !dbg !3745
  %16 = load i64, i64* %i, align 8, !dbg !3746, !tbaa !1603
  %17 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !3747, !tbaa !1534
  %strides6 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %17, i32 0, i32 8, !dbg !3748
  %18 = load i64*, i64** %strides6, align 8, !dbg !3748, !tbaa !2541
  %arrayidx7 = getelementptr i64, i64* %18, i64 %16, !dbg !3747
  store i64 %mul, i64* %arrayidx7, align 8, !dbg !3749, !tbaa !1603
  br label %for.inc, !dbg !3747

for.inc:                                          ; preds = %for.body
  %19 = load i64, i64* %i, align 8, !dbg !3750, !tbaa !1603
  %inc = add i64 %19, 1, !dbg !3750
  store i64 %inc, i64* %i, align 8, !dbg !3750, !tbaa !1603
  br label %for.cond, !dbg !3751

for.end:                                          ; preds = %for.cond
  %20 = bitcast i64* %i to i8*, !dbg !3752
  call void @llvm.lifetime.end(i64 8, i8* %20) #3, !dbg !3752
  ret void, !dbg !3752
}

; Function Attrs: nounwind uwtable
define internal i32 @copy_buffer(%struct.bufferinfo* %dest, %struct.bufferinfo* %src) #0 {
entry:
  %retval = alloca i32, align 4
  %dest.addr = alloca %struct.bufferinfo*, align 8
  %src.addr = alloca %struct.bufferinfo*, align 8
  %mem = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.bufferinfo* %dest, %struct.bufferinfo** %dest.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %dest.addr, metadata !610, metadata !1538), !dbg !3753
  store %struct.bufferinfo* %src, %struct.bufferinfo** %src.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %src.addr, metadata !611, metadata !1538), !dbg !3754
  %0 = bitcast i8** %mem to i8*, !dbg !3755
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !3755
  call void @llvm.dbg.declare(metadata i8** %mem, metadata !612, metadata !1538), !dbg !3756
  store i8* null, i8** %mem, align 8, !dbg !3756, !tbaa !1534
  %1 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !3757, !tbaa !1534
  %2 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !3759, !tbaa !1534
  %call = call i32 @equiv_structure(%struct.bufferinfo* %1, %struct.bufferinfo* %2), !dbg !3760
  %tobool = icmp ne i32 %call, 0, !dbg !3760
  br i1 %tobool, label %if.end, label %if.then, !dbg !3761

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !3762
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3762

if.end:                                           ; preds = %entry
  %3 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !3763, !tbaa !1534
  %4 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !3765, !tbaa !1534
  %call1 = call i32 @last_dim_is_contiguous(%struct.bufferinfo* %3, %struct.bufferinfo* %4), !dbg !3766
  %tobool2 = icmp ne i32 %call1, 0, !dbg !3766
  br i1 %tobool2, label %if.end.8, label %if.then.3, !dbg !3767

if.then.3:                                        ; preds = %if.end
  %5 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !3768, !tbaa !1534
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %5, i32 0, i32 5, !dbg !3770
  %6 = load i32, i32* %ndim, align 4, !dbg !3770, !tbaa !1771
  %sub = sub i32 %6, 1, !dbg !3771
  %idxprom = sext i32 %sub to i64, !dbg !3772
  %7 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !3772, !tbaa !1534
  %shape = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %7, i32 0, i32 7, !dbg !3773
  %8 = load i64*, i64** %shape, align 8, !dbg !3773, !tbaa !2308
  %arrayidx = getelementptr i64, i64* %8, i64 %idxprom, !dbg !3772
  %9 = load i64, i64* %arrayidx, align 8, !dbg !3772, !tbaa !1603
  %10 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !3774, !tbaa !1534
  %itemsize = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %10, i32 0, i32 3, !dbg !3775
  %11 = load i64, i64* %itemsize, align 8, !dbg !3775, !tbaa !2289
  %mul = mul i64 %9, %11, !dbg !3776
  %call4 = call i8* @PyMem_Malloc(i64 %mul), !dbg !3777
  store i8* %call4, i8** %mem, align 8, !dbg !3778, !tbaa !1534
  %12 = load i8*, i8** %mem, align 8, !dbg !3779, !tbaa !1534
  %cmp = icmp eq i8* %12, null, !dbg !3781
  br i1 %cmp, label %if.then.5, label %if.end.7, !dbg !3782

if.then.5:                                        ; preds = %if.then.3
  %call6 = call %struct._object* @PyErr_NoMemory(), !dbg !3783
  store i32 -1, i32* %retval, !dbg !3785
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3785

if.end.7:                                         ; preds = %if.then.3
  br label %if.end.8, !dbg !3786

if.end.8:                                         ; preds = %if.end.7, %if.end
  %13 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !3787, !tbaa !1534
  %shape9 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %13, i32 0, i32 7, !dbg !3788
  %14 = load i64*, i64** %shape9, align 8, !dbg !3788, !tbaa !2308
  %15 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !3789, !tbaa !1534
  %ndim10 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %15, i32 0, i32 5, !dbg !3790
  %16 = load i32, i32* %ndim10, align 4, !dbg !3790, !tbaa !1771
  %conv = sext i32 %16 to i64, !dbg !3789
  %17 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !3791, !tbaa !1534
  %itemsize11 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %17, i32 0, i32 3, !dbg !3792
  %18 = load i64, i64* %itemsize11, align 8, !dbg !3792, !tbaa !2289
  %19 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !3793, !tbaa !1534
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %19, i32 0, i32 0, !dbg !3794
  %20 = load i8*, i8** %buf, align 8, !dbg !3794, !tbaa !1826
  %21 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !3795, !tbaa !1534
  %strides = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %21, i32 0, i32 8, !dbg !3796
  %22 = load i64*, i64** %strides, align 8, !dbg !3796, !tbaa !2541
  %23 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !3797, !tbaa !1534
  %suboffsets = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %23, i32 0, i32 9, !dbg !3798
  %24 = load i64*, i64** %suboffsets, align 8, !dbg !3798, !tbaa !2334
  %25 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !3799, !tbaa !1534
  %buf12 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %25, i32 0, i32 0, !dbg !3800
  %26 = load i8*, i8** %buf12, align 8, !dbg !3800, !tbaa !1826
  %27 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !3801, !tbaa !1534
  %strides13 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %27, i32 0, i32 8, !dbg !3802
  %28 = load i64*, i64** %strides13, align 8, !dbg !3802, !tbaa !2541
  %29 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !3803, !tbaa !1534
  %suboffsets14 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %29, i32 0, i32 9, !dbg !3804
  %30 = load i64*, i64** %suboffsets14, align 8, !dbg !3804, !tbaa !2334
  %31 = load i8*, i8** %mem, align 8, !dbg !3805, !tbaa !1534
  call void @copy_rec(i64* %14, i64 %conv, i64 %18, i8* %20, i64* %22, i64* %24, i8* %26, i64* %28, i64* %30, i8* %31), !dbg !3806
  %32 = load i8*, i8** %mem, align 8, !dbg !3807, !tbaa !1534
  %tobool15 = icmp ne i8* %32, null, !dbg !3807
  br i1 %tobool15, label %if.then.16, label %if.end.17, !dbg !3809

if.then.16:                                       ; preds = %if.end.8
  %33 = load i8*, i8** %mem, align 8, !dbg !3810, !tbaa !1534
  call void @PyMem_Free(i8* %33), !dbg !3811
  br label %if.end.17, !dbg !3811

if.end.17:                                        ; preds = %if.then.16, %if.end.8
  store i32 0, i32* %retval, !dbg !3812
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3812

cleanup:                                          ; preds = %if.end.17, %if.then.5, %if.then
  %34 = bitcast i8** %mem to i8*, !dbg !3813
  call void @llvm.lifetime.end(i64 8, i8* %34) #3, !dbg !3813
  %35 = load i32, i32* %retval, !dbg !3813
  ret i32 %35, !dbg !3813
}

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #6

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8*) #7

; Function Attrs: nounwind uwtable
define internal i32 @equiv_structure(%struct.bufferinfo* %dest, %struct.bufferinfo* %src) #0 {
entry:
  %retval = alloca i32, align 4
  %dest.addr = alloca %struct.bufferinfo*, align 8
  %src.addr = alloca %struct.bufferinfo*, align 8
  store %struct.bufferinfo* %dest, %struct.bufferinfo** %dest.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %dest.addr, metadata !617, metadata !1538), !dbg !3814
  store %struct.bufferinfo* %src, %struct.bufferinfo** %src.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %src.addr, metadata !618, metadata !1538), !dbg !3815
  %0 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !3816, !tbaa !1534
  %1 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !3818, !tbaa !1534
  %call = call i32 @equiv_format(%struct.bufferinfo* %0, %struct.bufferinfo* %1), !dbg !3819
  %tobool = icmp ne i32 %call, 0, !dbg !3819
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !3820

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !3821, !tbaa !1534
  %3 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !3822, !tbaa !1534
  %call1 = call i32 @equiv_shape(%struct.bufferinfo* %2, %struct.bufferinfo* %3), !dbg !3823
  %tobool2 = icmp ne i32 %call1, 0, !dbg !3823
  br i1 %tobool2, label %if.end, label %if.then, !dbg !3824

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !3825, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.10, i32 0, i32 0)), !dbg !3827
  store i32 0, i32* %retval, !dbg !3828
  br label %return, !dbg !3828

if.end:                                           ; preds = %lor.lhs.false
  store i32 1, i32* %retval, !dbg !3829
  br label %return, !dbg !3829

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, !dbg !3830
  ret i32 %5, !dbg !3830
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @last_dim_is_contiguous(%struct.bufferinfo* %dest, %struct.bufferinfo* %src) #4 {
entry:
  %dest.addr = alloca %struct.bufferinfo*, align 8
  %src.addr = alloca %struct.bufferinfo*, align 8
  store %struct.bufferinfo* %dest, %struct.bufferinfo** %dest.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %dest.addr, metadata !636, metadata !1538), !dbg !3831
  store %struct.bufferinfo* %src, %struct.bufferinfo** %src.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %src.addr, metadata !637, metadata !1538), !dbg !3832
  %0 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !3833, !tbaa !1534
  %suboffsets = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %0, i32 0, i32 9, !dbg !3834
  %1 = load i64*, i64** %suboffsets, align 8, !dbg !3834, !tbaa !2334
  %tobool = icmp ne i64* %1, null, !dbg !3833
  br i1 %tobool, label %land.lhs.true, label %land.lhs.true.2, !dbg !3835

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !3836, !tbaa !1534
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %2, i32 0, i32 5, !dbg !3838
  %3 = load i32, i32* %ndim, align 4, !dbg !3838, !tbaa !1771
  %sub = sub i32 %3, 1, !dbg !3839
  %idxprom = sext i32 %sub to i64, !dbg !3840
  %4 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !3840, !tbaa !1534
  %suboffsets1 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %4, i32 0, i32 9, !dbg !3841
  %5 = load i64*, i64** %suboffsets1, align 8, !dbg !3841, !tbaa !2334
  %arrayidx = getelementptr i64, i64* %5, i64 %idxprom, !dbg !3840
  %6 = load i64, i64* %arrayidx, align 8, !dbg !3840, !tbaa !1603
  %cmp = icmp sge i64 %6, 0, !dbg !3842
  br i1 %cmp, label %land.end, label %land.lhs.true.2, !dbg !3843

land.lhs.true.2:                                  ; preds = %land.lhs.true, %entry
  %7 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !3844, !tbaa !1534
  %suboffsets3 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %7, i32 0, i32 9, !dbg !3845
  %8 = load i64*, i64** %suboffsets3, align 8, !dbg !3845, !tbaa !2334
  %tobool4 = icmp ne i64* %8, null, !dbg !3844
  br i1 %tobool4, label %land.lhs.true.5, label %land.lhs.true.12, !dbg !3846

land.lhs.true.5:                                  ; preds = %land.lhs.true.2
  %9 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !3847, !tbaa !1534
  %ndim6 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %9, i32 0, i32 5, !dbg !3848
  %10 = load i32, i32* %ndim6, align 4, !dbg !3848, !tbaa !1771
  %sub7 = sub i32 %10, 1, !dbg !3849
  %idxprom8 = sext i32 %sub7 to i64, !dbg !3850
  %11 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !3850, !tbaa !1534
  %suboffsets9 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %11, i32 0, i32 9, !dbg !3851
  %12 = load i64*, i64** %suboffsets9, align 8, !dbg !3851, !tbaa !2334
  %arrayidx10 = getelementptr i64, i64* %12, i64 %idxprom8, !dbg !3850
  %13 = load i64, i64* %arrayidx10, align 8, !dbg !3850, !tbaa !1603
  %cmp11 = icmp sge i64 %13, 0, !dbg !3852
  br i1 %cmp11, label %land.end, label %land.lhs.true.12, !dbg !3853

land.lhs.true.12:                                 ; preds = %land.lhs.true.5, %land.lhs.true.2
  %14 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !3854, !tbaa !1534
  %ndim13 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %14, i32 0, i32 5, !dbg !3855
  %15 = load i32, i32* %ndim13, align 4, !dbg !3855, !tbaa !1771
  %sub14 = sub i32 %15, 1, !dbg !3856
  %idxprom15 = sext i32 %sub14 to i64, !dbg !3857
  %16 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !3857, !tbaa !1534
  %strides = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %16, i32 0, i32 8, !dbg !3858
  %17 = load i64*, i64** %strides, align 8, !dbg !3858, !tbaa !2541
  %arrayidx16 = getelementptr i64, i64* %17, i64 %idxprom15, !dbg !3857
  %18 = load i64, i64* %arrayidx16, align 8, !dbg !3857, !tbaa !1603
  %19 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !3859, !tbaa !1534
  %itemsize = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %19, i32 0, i32 3, !dbg !3860
  %20 = load i64, i64* %itemsize, align 8, !dbg !3860, !tbaa !2289
  %cmp17 = icmp eq i64 %18, %20, !dbg !3861
  br i1 %cmp17, label %land.rhs, label %land.end, !dbg !3862

land.rhs:                                         ; preds = %land.lhs.true.12
  %21 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !3863, !tbaa !1534
  %ndim18 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %21, i32 0, i32 5, !dbg !3864
  %22 = load i32, i32* %ndim18, align 4, !dbg !3864, !tbaa !1771
  %sub19 = sub i32 %22, 1, !dbg !3865
  %idxprom20 = sext i32 %sub19 to i64, !dbg !3866
  %23 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !3866, !tbaa !1534
  %strides21 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %23, i32 0, i32 8, !dbg !3867
  %24 = load i64*, i64** %strides21, align 8, !dbg !3867, !tbaa !2541
  %arrayidx22 = getelementptr i64, i64* %24, i64 %idxprom20, !dbg !3866
  %25 = load i64, i64* %arrayidx22, align 8, !dbg !3866, !tbaa !1603
  %26 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !3868, !tbaa !1534
  %itemsize23 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %26, i32 0, i32 3, !dbg !3869
  %27 = load i64, i64* %itemsize23, align 8, !dbg !3869, !tbaa !2289
  %cmp24 = icmp eq i64 %25, %27, !dbg !3870
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true.12, %land.lhs.true.5, %land.lhs.true
  %28 = phi i1 [ false, %land.lhs.true.12 ], [ false, %land.lhs.true.5 ], [ false, %land.lhs.true ], [ %cmp24, %land.rhs ]
  %land.ext = zext i1 %28 to i32, !dbg !3871
  ret i32 %land.ext, !dbg !3872
}

; Function Attrs: nounwind uwtable
define internal void @copy_rec(i64* %shape, i64 %ndim, i64 %itemsize, i8* %dptr, i64* %dstrides, i64* %dsuboffsets, i8* %sptr, i64* %sstrides, i64* %ssuboffsets, i8* %mem) #0 {
entry:
  %shape.addr = alloca i64*, align 8
  %ndim.addr = alloca i64, align 8
  %itemsize.addr = alloca i64, align 8
  %dptr.addr = alloca i8*, align 8
  %dstrides.addr = alloca i64*, align 8
  %dsuboffsets.addr = alloca i64*, align 8
  %sptr.addr = alloca i8*, align 8
  %sstrides.addr = alloca i64*, align 8
  %ssuboffsets.addr = alloca i64*, align 8
  %mem.addr = alloca i8*, align 8
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %xdptr = alloca i8*, align 8
  %xsptr = alloca i8*, align 8
  store i64* %shape, i64** %shape.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i64** %shape.addr, metadata !644, metadata !1538), !dbg !3873
  store i64 %ndim, i64* %ndim.addr, align 8, !tbaa !1603
  call void @llvm.dbg.declare(metadata i64* %ndim.addr, metadata !645, metadata !1538), !dbg !3874
  store i64 %itemsize, i64* %itemsize.addr, align 8, !tbaa !1603
  call void @llvm.dbg.declare(metadata i64* %itemsize.addr, metadata !646, metadata !1538), !dbg !3875
  store i8* %dptr, i8** %dptr.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i8** %dptr.addr, metadata !647, metadata !1538), !dbg !3876
  store i64* %dstrides, i64** %dstrides.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i64** %dstrides.addr, metadata !648, metadata !1538), !dbg !3877
  store i64* %dsuboffsets, i64** %dsuboffsets.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i64** %dsuboffsets.addr, metadata !649, metadata !1538), !dbg !3878
  store i8* %sptr, i8** %sptr.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i8** %sptr.addr, metadata !650, metadata !1538), !dbg !3879
  store i64* %sstrides, i64** %sstrides.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i64** %sstrides.addr, metadata !651, metadata !1538), !dbg !3880
  store i64* %ssuboffsets, i64** %ssuboffsets.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i64** %ssuboffsets.addr, metadata !652, metadata !1538), !dbg !3881
  store i8* %mem, i8** %mem.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i8** %mem.addr, metadata !653, metadata !1538), !dbg !3882
  %0 = bitcast i64* %i to i8*, !dbg !3883
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !3883
  call void @llvm.dbg.declare(metadata i64* %i, metadata !654, metadata !1538), !dbg !3884
  %1 = load i64, i64* %ndim.addr, align 8, !dbg !3885, !tbaa !1603
  %cmp = icmp eq i64 %1, 1, !dbg !3887
  br i1 %cmp, label %if.then, label %if.end, !dbg !3888

if.then:                                          ; preds = %entry
  %2 = load i64*, i64** %shape.addr, align 8, !dbg !3889, !tbaa !1534
  %3 = load i64, i64* %itemsize.addr, align 8, !dbg !3891, !tbaa !1603
  %4 = load i8*, i8** %dptr.addr, align 8, !dbg !3892, !tbaa !1534
  %5 = load i64*, i64** %dstrides.addr, align 8, !dbg !3893, !tbaa !1534
  %6 = load i64*, i64** %dsuboffsets.addr, align 8, !dbg !3894, !tbaa !1534
  %7 = load i8*, i8** %sptr.addr, align 8, !dbg !3895, !tbaa !1534
  %8 = load i64*, i64** %sstrides.addr, align 8, !dbg !3896, !tbaa !1534
  %9 = load i64*, i64** %ssuboffsets.addr, align 8, !dbg !3897, !tbaa !1534
  %10 = load i8*, i8** %mem.addr, align 8, !dbg !3898, !tbaa !1534
  call void @copy_base(i64* %2, i64 %3, i8* %4, i64* %5, i64* %6, i8* %7, i64* %8, i64* %9, i8* %10), !dbg !3899
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3900

if.end:                                           ; preds = %entry
  store i64 0, i64* %i, align 8, !dbg !3901, !tbaa !1603
  br label %for.cond, !dbg !3902

for.cond:                                         ; preds = %for.inc, %if.end
  %11 = load i64, i64* %i, align 8, !dbg !3903, !tbaa !1603
  %12 = load i64*, i64** %shape.addr, align 8, !dbg !3906, !tbaa !1534
  %arrayidx = getelementptr i64, i64* %12, i64 0, !dbg !3906
  %13 = load i64, i64* %arrayidx, align 8, !dbg !3906, !tbaa !1603
  %cmp1 = icmp slt i64 %11, %13, !dbg !3907
  br i1 %cmp1, label %for.body, label %for.end, !dbg !3908

for.body:                                         ; preds = %for.cond
  %14 = bitcast i8** %xdptr to i8*, !dbg !3909
  call void @llvm.lifetime.start(i64 8, i8* %14) #3, !dbg !3909
  call void @llvm.dbg.declare(metadata i8** %xdptr, metadata !655, metadata !1538), !dbg !3910
  %15 = load i64*, i64** %dsuboffsets.addr, align 8, !dbg !3911, !tbaa !1534
  %tobool = icmp ne i64* %15, null, !dbg !3911
  br i1 %tobool, label %land.lhs.true, label %cond.false, !dbg !3912

land.lhs.true:                                    ; preds = %for.body
  %16 = load i64*, i64** %dsuboffsets.addr, align 8, !dbg !3913, !tbaa !1534
  %arrayidx2 = getelementptr i64, i64* %16, i64 0, !dbg !3913
  %17 = load i64, i64* %arrayidx2, align 8, !dbg !3913, !tbaa !1603
  %cmp3 = icmp sge i64 %17, 0, !dbg !3915
  br i1 %cmp3, label %cond.true, label %cond.false, !dbg !3916

cond.true:                                        ; preds = %land.lhs.true
  %18 = load i8*, i8** %dptr.addr, align 8, !dbg !3917, !tbaa !1534
  %19 = bitcast i8* %18 to i8**, !dbg !3919
  %20 = load i8*, i8** %19, align 8, !dbg !3920, !tbaa !1534
  %21 = load i64*, i64** %dsuboffsets.addr, align 8, !dbg !3921, !tbaa !1534
  %arrayidx4 = getelementptr i64, i64* %21, i64 0, !dbg !3921
  %22 = load i64, i64* %arrayidx4, align 8, !dbg !3921, !tbaa !1603
  %add.ptr = getelementptr i8, i8* %20, i64 %22, !dbg !3922
  br label %cond.end, !dbg !3916

cond.false:                                       ; preds = %land.lhs.true, %for.body
  %23 = load i8*, i8** %dptr.addr, align 8, !dbg !3923, !tbaa !1534
  br label %cond.end, !dbg !3916

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ %23, %cond.false ], !dbg !3916
  store i8* %cond, i8** %xdptr, align 8, !dbg !3926, !tbaa !1534
  %24 = bitcast i8** %xsptr to i8*, !dbg !3929
  call void @llvm.lifetime.start(i64 8, i8* %24) #3, !dbg !3929
  call void @llvm.dbg.declare(metadata i8** %xsptr, metadata !659, metadata !1538), !dbg !3930
  %25 = load i64*, i64** %ssuboffsets.addr, align 8, !dbg !3931, !tbaa !1534
  %tobool5 = icmp ne i64* %25, null, !dbg !3931
  br i1 %tobool5, label %land.lhs.true.6, label %cond.false.12, !dbg !3932

land.lhs.true.6:                                  ; preds = %cond.end
  %26 = load i64*, i64** %ssuboffsets.addr, align 8, !dbg !3933, !tbaa !1534
  %arrayidx7 = getelementptr i64, i64* %26, i64 0, !dbg !3933
  %27 = load i64, i64* %arrayidx7, align 8, !dbg !3933, !tbaa !1603
  %cmp8 = icmp sge i64 %27, 0, !dbg !3934
  br i1 %cmp8, label %cond.true.9, label %cond.false.12, !dbg !3935

cond.true.9:                                      ; preds = %land.lhs.true.6
  %28 = load i8*, i8** %sptr.addr, align 8, !dbg !3936, !tbaa !1534
  %29 = bitcast i8* %28 to i8**, !dbg !3937
  %30 = load i8*, i8** %29, align 8, !dbg !3938, !tbaa !1534
  %31 = load i64*, i64** %ssuboffsets.addr, align 8, !dbg !3939, !tbaa !1534
  %arrayidx10 = getelementptr i64, i64* %31, i64 0, !dbg !3939
  %32 = load i64, i64* %arrayidx10, align 8, !dbg !3939, !tbaa !1603
  %add.ptr11 = getelementptr i8, i8* %30, i64 %32, !dbg !3940
  br label %cond.end.13, !dbg !3935

cond.false.12:                                    ; preds = %land.lhs.true.6, %cond.end
  %33 = load i8*, i8** %sptr.addr, align 8, !dbg !3941, !tbaa !1534
  br label %cond.end.13, !dbg !3935

cond.end.13:                                      ; preds = %cond.false.12, %cond.true.9
  %cond14 = phi i8* [ %add.ptr11, %cond.true.9 ], [ %33, %cond.false.12 ], !dbg !3935
  store i8* %cond14, i8** %xsptr, align 8, !dbg !3942, !tbaa !1534
  %34 = load i64*, i64** %shape.addr, align 8, !dbg !3943, !tbaa !1534
  %add.ptr15 = getelementptr i64, i64* %34, i64 1, !dbg !3944
  %35 = load i64, i64* %ndim.addr, align 8, !dbg !3945, !tbaa !1603
  %sub = sub i64 %35, 1, !dbg !3946
  %36 = load i64, i64* %itemsize.addr, align 8, !dbg !3947, !tbaa !1603
  %37 = load i8*, i8** %xdptr, align 8, !dbg !3948, !tbaa !1534
  %38 = load i64*, i64** %dstrides.addr, align 8, !dbg !3949, !tbaa !1534
  %add.ptr16 = getelementptr i64, i64* %38, i64 1, !dbg !3950
  %39 = load i64*, i64** %dsuboffsets.addr, align 8, !dbg !3951, !tbaa !1534
  %tobool17 = icmp ne i64* %39, null, !dbg !3951
  br i1 %tobool17, label %cond.true.18, label %cond.false.20, !dbg !3951

cond.true.18:                                     ; preds = %cond.end.13
  %40 = load i64*, i64** %dsuboffsets.addr, align 8, !dbg !3952, !tbaa !1534
  %add.ptr19 = getelementptr i64, i64* %40, i64 1, !dbg !3953
  br label %cond.end.21, !dbg !3951

cond.false.20:                                    ; preds = %cond.end.13
  br label %cond.end.21, !dbg !3954

cond.end.21:                                      ; preds = %cond.false.20, %cond.true.18
  %cond22 = phi i64* [ %add.ptr19, %cond.true.18 ], [ null, %cond.false.20 ], !dbg !3951
  %41 = load i8*, i8** %xsptr, align 8, !dbg !3955, !tbaa !1534
  %42 = load i64*, i64** %sstrides.addr, align 8, !dbg !3956, !tbaa !1534
  %add.ptr23 = getelementptr i64, i64* %42, i64 1, !dbg !3957
  %43 = load i64*, i64** %ssuboffsets.addr, align 8, !dbg !3958, !tbaa !1534
  %tobool24 = icmp ne i64* %43, null, !dbg !3958
  br i1 %tobool24, label %cond.true.25, label %cond.false.27, !dbg !3958

cond.true.25:                                     ; preds = %cond.end.21
  %44 = load i64*, i64** %ssuboffsets.addr, align 8, !dbg !3959, !tbaa !1534
  %add.ptr26 = getelementptr i64, i64* %44, i64 1, !dbg !3960
  br label %cond.end.28, !dbg !3958

cond.false.27:                                    ; preds = %cond.end.21
  br label %cond.end.28, !dbg !3961

cond.end.28:                                      ; preds = %cond.false.27, %cond.true.25
  %cond29 = phi i64* [ %add.ptr26, %cond.true.25 ], [ null, %cond.false.27 ], !dbg !3958
  %45 = load i8*, i8** %mem.addr, align 8, !dbg !3962, !tbaa !1534
  call void @copy_rec(i64* %add.ptr15, i64 %sub, i64 %36, i8* %37, i64* %add.ptr16, i64* %cond22, i8* %41, i64* %add.ptr23, i64* %cond29, i8* %45), !dbg !3963
  %46 = bitcast i8** %xsptr to i8*, !dbg !3964
  call void @llvm.lifetime.end(i64 8, i8* %46) #3, !dbg !3964
  %47 = bitcast i8** %xdptr to i8*, !dbg !3964
  call void @llvm.lifetime.end(i64 8, i8* %47) #3, !dbg !3964
  br label %for.inc, !dbg !3965

for.inc:                                          ; preds = %cond.end.28
  %48 = load i64*, i64** %dstrides.addr, align 8, !dbg !3966, !tbaa !1534
  %arrayidx30 = getelementptr i64, i64* %48, i64 0, !dbg !3966
  %49 = load i64, i64* %arrayidx30, align 8, !dbg !3966, !tbaa !1603
  %50 = load i8*, i8** %dptr.addr, align 8, !dbg !3967, !tbaa !1534
  %add.ptr31 = getelementptr i8, i8* %50, i64 %49, !dbg !3967
  store i8* %add.ptr31, i8** %dptr.addr, align 8, !dbg !3967, !tbaa !1534
  %51 = load i64*, i64** %sstrides.addr, align 8, !dbg !3968, !tbaa !1534
  %arrayidx32 = getelementptr i64, i64* %51, i64 0, !dbg !3968
  %52 = load i64, i64* %arrayidx32, align 8, !dbg !3968, !tbaa !1603
  %53 = load i8*, i8** %sptr.addr, align 8, !dbg !3969, !tbaa !1534
  %add.ptr33 = getelementptr i8, i8* %53, i64 %52, !dbg !3969
  store i8* %add.ptr33, i8** %sptr.addr, align 8, !dbg !3969, !tbaa !1534
  %54 = load i64, i64* %i, align 8, !dbg !3970, !tbaa !1603
  %inc = add i64 %54, 1, !dbg !3970
  store i64 %inc, i64* %i, align 8, !dbg !3970, !tbaa !1603
  br label %for.cond, !dbg !3971

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %cleanup.dest.slot, !dbg !3972
  br label %cleanup, !dbg !3972

cleanup:                                          ; preds = %for.end, %if.then
  %55 = bitcast i64* %i to i8*, !dbg !3973
  call void @llvm.lifetime.end(i64 8, i8* %55) #3, !dbg !3973
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !3972

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @equiv_format(%struct.bufferinfo* %dest, %struct.bufferinfo* %src) #4 {
entry:
  %retval = alloca i32, align 4
  %dest.addr = alloca %struct.bufferinfo*, align 8
  %src.addr = alloca %struct.bufferinfo*, align 8
  %dfmt = alloca i8*, align 8
  %sfmt = alloca i8*, align 8
  %__s1_len = alloca i64, align 8
  %__s2_len = alloca i64, align 8
  %tmp = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.bufferinfo* %dest, %struct.bufferinfo** %dest.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %dest.addr, metadata !621, metadata !1538), !dbg !3975
  store %struct.bufferinfo* %src, %struct.bufferinfo** %src.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %src.addr, metadata !622, metadata !1538), !dbg !3976
  %0 = bitcast i8** %dfmt to i8*, !dbg !3977
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !3977
  call void @llvm.dbg.declare(metadata i8** %dfmt, metadata !623, metadata !1538), !dbg !3978
  %1 = bitcast i8** %sfmt to i8*, !dbg !3977
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !3977
  call void @llvm.dbg.declare(metadata i8** %sfmt, metadata !624, metadata !1538), !dbg !3979
  %2 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !3980, !tbaa !1534
  %format = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %2, i32 0, i32 6, !dbg !3981
  %3 = load i8*, i8** %format, align 8, !dbg !3981, !tbaa !2219
  %arrayidx = getelementptr i8, i8* %3, i64 0, !dbg !3980
  %4 = load i8, i8* %arrayidx, align 1, !dbg !3980, !tbaa !2033
  %conv = sext i8 %4 to i32, !dbg !3980
  %cmp = icmp eq i32 %conv, 64, !dbg !3982
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3980

cond.true:                                        ; preds = %entry
  %5 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !3983, !tbaa !1534
  %format2 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %5, i32 0, i32 6, !dbg !3985
  %6 = load i8*, i8** %format2, align 8, !dbg !3985, !tbaa !2219
  %add.ptr = getelementptr i8, i8* %6, i64 1, !dbg !3986
  br label %cond.end, !dbg !3980

cond.false:                                       ; preds = %entry
  %7 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !3987, !tbaa !1534
  %format3 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %7, i32 0, i32 6, !dbg !3989
  %8 = load i8*, i8** %format3, align 8, !dbg !3989, !tbaa !2219
  br label %cond.end, !dbg !3980

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ %8, %cond.false ], !dbg !3980
  store i8* %cond, i8** %dfmt, align 8, !dbg !3990, !tbaa !1534
  %9 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !3993, !tbaa !1534
  %format4 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %9, i32 0, i32 6, !dbg !3994
  %10 = load i8*, i8** %format4, align 8, !dbg !3994, !tbaa !2219
  %arrayidx5 = getelementptr i8, i8* %10, i64 0, !dbg !3993
  %11 = load i8, i8* %arrayidx5, align 1, !dbg !3993, !tbaa !2033
  %conv6 = sext i8 %11 to i32, !dbg !3993
  %cmp7 = icmp eq i32 %conv6, 64, !dbg !3995
  br i1 %cmp7, label %cond.true.9, label %cond.false.12, !dbg !3993

cond.true.9:                                      ; preds = %cond.end
  %12 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !3996, !tbaa !1534
  %format10 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %12, i32 0, i32 6, !dbg !3997
  %13 = load i8*, i8** %format10, align 8, !dbg !3997, !tbaa !2219
  %add.ptr11 = getelementptr i8, i8* %13, i64 1, !dbg !3998
  br label %cond.end.14, !dbg !3993

cond.false.12:                                    ; preds = %cond.end
  %14 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !3999, !tbaa !1534
  %format13 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %14, i32 0, i32 6, !dbg !4000
  %15 = load i8*, i8** %format13, align 8, !dbg !4000, !tbaa !2219
  br label %cond.end.14, !dbg !3993

cond.end.14:                                      ; preds = %cond.false.12, %cond.true.9
  %cond15 = phi i8* [ %add.ptr11, %cond.true.9 ], [ %15, %cond.false.12 ], !dbg !3993
  store i8* %cond15, i8** %sfmt, align 8, !dbg !4001, !tbaa !1534
  %16 = bitcast i64* %__s1_len to i8*, !dbg !4002
  call void @llvm.lifetime.start(i64 8, i8* %16) #3, !dbg !4002
  call void @llvm.dbg.declare(metadata i64* %__s1_len, metadata !625, metadata !1538), !dbg !4003
  %17 = bitcast i64* %__s2_len to i8*, !dbg !4002
  call void @llvm.lifetime.start(i64 8, i8* %17) #3, !dbg !4002
  call void @llvm.dbg.declare(metadata i64* %__s2_len, metadata !628, metadata !1538), !dbg !4004
  %18 = load i8*, i8** %dfmt, align 8, !dbg !4005, !tbaa !1534
  %19 = load i8*, i8** %sfmt, align 8, !dbg !4006, !tbaa !1534
  %call = call i32 @strcmp(i8* %18, i8* %19) #3, !dbg !4007
  store i32 %call, i32* %tmp, !dbg !4002, !tbaa !1580
  %20 = bitcast i64* %__s2_len to i8*, !dbg !4008
  call void @llvm.lifetime.end(i64 8, i8* %20) #3, !dbg !4008
  %21 = bitcast i64* %__s1_len to i8*, !dbg !4008
  call void @llvm.lifetime.end(i64 8, i8* %21) #3, !dbg !4008
  %22 = load i32, i32* %tmp, !dbg !4009, !tbaa !1580
  %cmp16 = icmp ne i32 %22, 0, !dbg !4010
  br i1 %cmp16, label %if.then, label %lor.lhs.false, !dbg !4011

lor.lhs.false:                                    ; preds = %cond.end.14
  %23 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !4012, !tbaa !1534
  %itemsize = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %23, i32 0, i32 3, !dbg !4013
  %24 = load i64, i64* %itemsize, align 8, !dbg !4013, !tbaa !2289
  %25 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !4014, !tbaa !1534
  %itemsize18 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %25, i32 0, i32 3, !dbg !4015
  %26 = load i64, i64* %itemsize18, align 8, !dbg !4015, !tbaa !2289
  %cmp19 = icmp ne i64 %24, %26, !dbg !4016
  br i1 %cmp19, label %if.then, label %if.end, !dbg !4017

if.then:                                          ; preds = %lor.lhs.false, %cond.end.14
  store i32 0, i32* %retval, !dbg !4018
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4018

if.end:                                           ; preds = %lor.lhs.false
  store i32 1, i32* %retval, !dbg !4020
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4020

cleanup:                                          ; preds = %if.end, %if.then
  %27 = bitcast i8** %sfmt to i8*, !dbg !4021
  call void @llvm.lifetime.end(i64 8, i8* %27) #3, !dbg !4021
  %28 = bitcast i8** %dfmt to i8*, !dbg !4021
  call void @llvm.lifetime.end(i64 8, i8* %28) #3, !dbg !4021
  %29 = load i32, i32* %retval, !dbg !4021
  ret i32 %29, !dbg !4021
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @equiv_shape(%struct.bufferinfo* %dest, %struct.bufferinfo* %src) #4 {
entry:
  %retval = alloca i32, align 4
  %dest.addr = alloca %struct.bufferinfo*, align 8
  %src.addr = alloca %struct.bufferinfo*, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.bufferinfo* %dest, %struct.bufferinfo** %dest.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %dest.addr, metadata !631, metadata !1538), !dbg !4022
  store %struct.bufferinfo* %src, %struct.bufferinfo** %src.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %src.addr, metadata !632, metadata !1538), !dbg !4023
  %0 = bitcast i32* %i to i8*, !dbg !4024
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !4024
  call void @llvm.dbg.declare(metadata i32* %i, metadata !633, metadata !1538), !dbg !4025
  %1 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !4026, !tbaa !1534
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %1, i32 0, i32 5, !dbg !4028
  %2 = load i32, i32* %ndim, align 4, !dbg !4028, !tbaa !1771
  %3 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !4029, !tbaa !1534
  %ndim1 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %3, i32 0, i32 5, !dbg !4030
  %4 = load i32, i32* %ndim1, align 4, !dbg !4030, !tbaa !1771
  %cmp = icmp ne i32 %2, %4, !dbg !4031
  br i1 %cmp, label %if.then, label %if.end, !dbg !4032

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, !dbg !4033
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4033

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !4034, !tbaa !1580
  br label %for.cond, !dbg !4036

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i32, i32* %i, align 4, !dbg !4037, !tbaa !1580
  %6 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !4041, !tbaa !1534
  %ndim2 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %6, i32 0, i32 5, !dbg !4042
  %7 = load i32, i32* %ndim2, align 4, !dbg !4042, !tbaa !1771
  %cmp3 = icmp slt i32 %5, %7, !dbg !4043
  br i1 %cmp3, label %for.body, label %for.end, !dbg !4044

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %i, align 4, !dbg !4045, !tbaa !1580
  %idxprom = sext i32 %8 to i64, !dbg !4048
  %9 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !4048, !tbaa !1534
  %shape = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %9, i32 0, i32 7, !dbg !4049
  %10 = load i64*, i64** %shape, align 8, !dbg !4049, !tbaa !2308
  %arrayidx = getelementptr i64, i64* %10, i64 %idxprom, !dbg !4048
  %11 = load i64, i64* %arrayidx, align 8, !dbg !4048, !tbaa !1603
  %12 = load i32, i32* %i, align 4, !dbg !4050, !tbaa !1580
  %idxprom4 = sext i32 %12 to i64, !dbg !4051
  %13 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !4051, !tbaa !1534
  %shape5 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %13, i32 0, i32 7, !dbg !4052
  %14 = load i64*, i64** %shape5, align 8, !dbg !4052, !tbaa !2308
  %arrayidx6 = getelementptr i64, i64* %14, i64 %idxprom4, !dbg !4051
  %15 = load i64, i64* %arrayidx6, align 8, !dbg !4051, !tbaa !1603
  %cmp7 = icmp ne i64 %11, %15, !dbg !4053
  br i1 %cmp7, label %if.then.8, label %if.end.9, !dbg !4054

if.then.8:                                        ; preds = %for.body
  store i32 0, i32* %retval, !dbg !4055
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4055

if.end.9:                                         ; preds = %for.body
  %16 = load i32, i32* %i, align 4, !dbg !4056, !tbaa !1580
  %idxprom10 = sext i32 %16 to i64, !dbg !4058
  %17 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !4058, !tbaa !1534
  %shape11 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %17, i32 0, i32 7, !dbg !4059
  %18 = load i64*, i64** %shape11, align 8, !dbg !4059, !tbaa !2308
  %arrayidx12 = getelementptr i64, i64* %18, i64 %idxprom10, !dbg !4058
  %19 = load i64, i64* %arrayidx12, align 8, !dbg !4058, !tbaa !1603
  %cmp13 = icmp eq i64 %19, 0, !dbg !4060
  br i1 %cmp13, label %if.then.14, label %if.end.15, !dbg !4061

if.then.14:                                       ; preds = %if.end.9
  br label %for.end, !dbg !4062

if.end.15:                                        ; preds = %if.end.9
  br label %for.inc, !dbg !4063

for.inc:                                          ; preds = %if.end.15
  %20 = load i32, i32* %i, align 4, !dbg !4064, !tbaa !1580
  %inc = add i32 %20, 1, !dbg !4064
  store i32 %inc, i32* %i, align 4, !dbg !4064, !tbaa !1580
  br label %for.cond, !dbg !4065

for.end:                                          ; preds = %if.then.14, %for.cond
  store i32 1, i32* %retval, !dbg !4066
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4066

cleanup:                                          ; preds = %for.end, %if.then.8, %if.then
  %21 = bitcast i32* %i to i8*, !dbg !4067
  call void @llvm.lifetime.end(i64 4, i8* %21) #3, !dbg !4067
  %22 = load i32, i32* %retval, !dbg !4067
  ret i32 %22, !dbg !4067
}

; Function Attrs: nounwind
declare i32 @strcmp(i8*, i8*) #7

; Function Attrs: nounwind uwtable
define internal void @copy_base(i64* %shape, i64 %itemsize, i8* %dptr, i64* %dstrides, i64* %dsuboffsets, i8* %sptr, i64* %sstrides, i64* %ssuboffsets, i8* %mem) #0 {
entry:
  %shape.addr = alloca i64*, align 8
  %itemsize.addr = alloca i64, align 8
  %dptr.addr = alloca i8*, align 8
  %dstrides.addr = alloca i64*, align 8
  %dsuboffsets.addr = alloca i64*, align 8
  %sptr.addr = alloca i8*, align 8
  %sstrides.addr = alloca i64*, align 8
  %ssuboffsets.addr = alloca i64*, align 8
  %mem.addr = alloca i8*, align 8
  %size = alloca i64, align 8
  %p = alloca i8*, align 8
  %i = alloca i64, align 8
  %xsptr = alloca i8*, align 8
  %xdptr = alloca i8*, align 8
  store i64* %shape, i64** %shape.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i64** %shape.addr, metadata !664, metadata !1538), !dbg !4068
  store i64 %itemsize, i64* %itemsize.addr, align 8, !tbaa !1603
  call void @llvm.dbg.declare(metadata i64* %itemsize.addr, metadata !665, metadata !1538), !dbg !4069
  store i8* %dptr, i8** %dptr.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i8** %dptr.addr, metadata !666, metadata !1538), !dbg !4070
  store i64* %dstrides, i64** %dstrides.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i64** %dstrides.addr, metadata !667, metadata !1538), !dbg !4071
  store i64* %dsuboffsets, i64** %dsuboffsets.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i64** %dsuboffsets.addr, metadata !668, metadata !1538), !dbg !4072
  store i8* %sptr, i8** %sptr.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i8** %sptr.addr, metadata !669, metadata !1538), !dbg !4073
  store i64* %sstrides, i64** %sstrides.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i64** %sstrides.addr, metadata !670, metadata !1538), !dbg !4074
  store i64* %ssuboffsets, i64** %ssuboffsets.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i64** %ssuboffsets.addr, metadata !671, metadata !1538), !dbg !4075
  store i8* %mem, i8** %mem.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i8** %mem.addr, metadata !672, metadata !1538), !dbg !4076
  %0 = load i8*, i8** %mem.addr, align 8, !dbg !4077, !tbaa !1534
  %cmp = icmp eq i8* %0, null, !dbg !4078
  br i1 %cmp, label %if.then, label %if.else.5, !dbg !4079

if.then:                                          ; preds = %entry
  %1 = bitcast i64* %size to i8*, !dbg !4080
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !4080
  call void @llvm.dbg.declare(metadata i64* %size, metadata !673, metadata !1538), !dbg !4081
  %2 = load i64*, i64** %shape.addr, align 8, !dbg !4082, !tbaa !1534
  %arrayidx = getelementptr i64, i64* %2, i64 0, !dbg !4082
  %3 = load i64, i64* %arrayidx, align 8, !dbg !4082, !tbaa !1603
  %4 = load i64, i64* %itemsize.addr, align 8, !dbg !4083, !tbaa !1603
  %mul = mul i64 %3, %4, !dbg !4084
  store i64 %mul, i64* %size, align 8, !dbg !4081, !tbaa !1603
  %5 = load i8*, i8** %dptr.addr, align 8, !dbg !4085, !tbaa !1534
  %6 = load i64, i64* %size, align 8, !dbg !4087, !tbaa !1603
  %add.ptr = getelementptr i8, i8* %5, i64 %6, !dbg !4088
  %7 = load i8*, i8** %sptr.addr, align 8, !dbg !4089, !tbaa !1534
  %cmp1 = icmp ult i8* %add.ptr, %7, !dbg !4090
  br i1 %cmp1, label %if.then.4, label %lor.lhs.false, !dbg !4091

lor.lhs.false:                                    ; preds = %if.then
  %8 = load i8*, i8** %sptr.addr, align 8, !dbg !4092, !tbaa !1534
  %9 = load i64, i64* %size, align 8, !dbg !4094, !tbaa !1603
  %add.ptr2 = getelementptr i8, i8* %8, i64 %9, !dbg !4095
  %10 = load i8*, i8** %dptr.addr, align 8, !dbg !4096, !tbaa !1534
  %cmp3 = icmp ult i8* %add.ptr2, %10, !dbg !4097
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !4098

if.then.4:                                        ; preds = %lor.lhs.false, %if.then
  %11 = load i8*, i8** %dptr.addr, align 8, !dbg !4099, !tbaa !1534
  %12 = load i8*, i8** %sptr.addr, align 8, !dbg !4100, !tbaa !1534
  %13 = load i64, i64* %size, align 8, !dbg !4101, !tbaa !1603
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 %13, i32 1, i1 false), !dbg !4102
  br label %if.end, !dbg !4102

if.else:                                          ; preds = %lor.lhs.false
  %14 = load i8*, i8** %dptr.addr, align 8, !dbg !4103, !tbaa !1534
  %15 = load i8*, i8** %sptr.addr, align 8, !dbg !4104, !tbaa !1534
  %16 = load i64, i64* %size, align 8, !dbg !4105, !tbaa !1603
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %14, i8* %15, i64 %16, i32 1, i1 false), !dbg !4106
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  %17 = bitcast i64* %size to i8*, !dbg !4107
  call void @llvm.lifetime.end(i64 8, i8* %17) #3, !dbg !4107
  br label %if.end.35, !dbg !4108

if.else.5:                                        ; preds = %entry
  %18 = bitcast i8** %p to i8*, !dbg !4109
  call void @llvm.lifetime.start(i64 8, i8* %18) #3, !dbg !4109
  call void @llvm.dbg.declare(metadata i8** %p, metadata !676, metadata !1538), !dbg !4110
  %19 = bitcast i64* %i to i8*, !dbg !4111
  call void @llvm.lifetime.start(i64 8, i8* %19) #3, !dbg !4111
  call void @llvm.dbg.declare(metadata i64* %i, metadata !678, metadata !1538), !dbg !4112
  store i64 0, i64* %i, align 8, !dbg !4113, !tbaa !1603
  %20 = load i8*, i8** %mem.addr, align 8, !dbg !4114, !tbaa !1534
  store i8* %20, i8** %p, align 8, !dbg !4115, !tbaa !1534
  br label %for.cond, !dbg !4116

for.cond:                                         ; preds = %for.inc, %if.else.5
  %21 = load i64, i64* %i, align 8, !dbg !4117, !tbaa !1603
  %22 = load i64*, i64** %shape.addr, align 8, !dbg !4120, !tbaa !1534
  %arrayidx6 = getelementptr i64, i64* %22, i64 0, !dbg !4120
  %23 = load i64, i64* %arrayidx6, align 8, !dbg !4120, !tbaa !1603
  %cmp7 = icmp slt i64 %21, %23, !dbg !4121
  br i1 %cmp7, label %for.body, label %for.end, !dbg !4122

for.body:                                         ; preds = %for.cond
  %24 = bitcast i8** %xsptr to i8*, !dbg !4123
  call void @llvm.lifetime.start(i64 8, i8* %24) #3, !dbg !4123
  call void @llvm.dbg.declare(metadata i8** %xsptr, metadata !679, metadata !1538), !dbg !4124
  %25 = load i64*, i64** %ssuboffsets.addr, align 8, !dbg !4125, !tbaa !1534
  %tobool = icmp ne i64* %25, null, !dbg !4125
  br i1 %tobool, label %land.lhs.true, label %cond.false, !dbg !4126

land.lhs.true:                                    ; preds = %for.body
  %26 = load i64*, i64** %ssuboffsets.addr, align 8, !dbg !4127, !tbaa !1534
  %arrayidx8 = getelementptr i64, i64* %26, i64 0, !dbg !4127
  %27 = load i64, i64* %arrayidx8, align 8, !dbg !4127, !tbaa !1603
  %cmp9 = icmp sge i64 %27, 0, !dbg !4129
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !4130

cond.true:                                        ; preds = %land.lhs.true
  %28 = load i8*, i8** %sptr.addr, align 8, !dbg !4131, !tbaa !1534
  %29 = bitcast i8* %28 to i8**, !dbg !4133
  %30 = load i8*, i8** %29, align 8, !dbg !4134, !tbaa !1534
  %31 = load i64*, i64** %ssuboffsets.addr, align 8, !dbg !4135, !tbaa !1534
  %arrayidx10 = getelementptr i64, i64* %31, i64 0, !dbg !4135
  %32 = load i64, i64* %arrayidx10, align 8, !dbg !4135, !tbaa !1603
  %add.ptr11 = getelementptr i8, i8* %30, i64 %32, !dbg !4136
  br label %cond.end, !dbg !4130

cond.false:                                       ; preds = %land.lhs.true, %for.body
  %33 = load i8*, i8** %sptr.addr, align 8, !dbg !4137, !tbaa !1534
  br label %cond.end, !dbg !4130

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr11, %cond.true ], [ %33, %cond.false ], !dbg !4130
  store i8* %cond, i8** %xsptr, align 8, !dbg !4140, !tbaa !1534
  %34 = load i8*, i8** %p, align 8, !dbg !4143, !tbaa !1534
  %35 = load i8*, i8** %xsptr, align 8, !dbg !4144, !tbaa !1534
  %36 = load i64, i64* %itemsize.addr, align 8, !dbg !4145, !tbaa !1603
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 %36, i32 1, i1 false), !dbg !4146
  %37 = bitcast i8** %xsptr to i8*, !dbg !4147
  call void @llvm.lifetime.end(i64 8, i8* %37) #3, !dbg !4147
  br label %for.inc, !dbg !4148

for.inc:                                          ; preds = %cond.end
  %38 = load i64, i64* %itemsize.addr, align 8, !dbg !4149, !tbaa !1603
  %39 = load i8*, i8** %p, align 8, !dbg !4150, !tbaa !1534
  %add.ptr12 = getelementptr i8, i8* %39, i64 %38, !dbg !4150
  store i8* %add.ptr12, i8** %p, align 8, !dbg !4150, !tbaa !1534
  %40 = load i64*, i64** %sstrides.addr, align 8, !dbg !4151, !tbaa !1534
  %arrayidx13 = getelementptr i64, i64* %40, i64 0, !dbg !4151
  %41 = load i64, i64* %arrayidx13, align 8, !dbg !4151, !tbaa !1603
  %42 = load i8*, i8** %sptr.addr, align 8, !dbg !4152, !tbaa !1534
  %add.ptr14 = getelementptr i8, i8* %42, i64 %41, !dbg !4152
  store i8* %add.ptr14, i8** %sptr.addr, align 8, !dbg !4152, !tbaa !1534
  %43 = load i64, i64* %i, align 8, !dbg !4153, !tbaa !1603
  %inc = add i64 %43, 1, !dbg !4153
  store i64 %inc, i64* %i, align 8, !dbg !4153, !tbaa !1603
  br label %for.cond, !dbg !4154

for.end:                                          ; preds = %for.cond
  store i64 0, i64* %i, align 8, !dbg !4155, !tbaa !1603
  %44 = load i8*, i8** %mem.addr, align 8, !dbg !4156, !tbaa !1534
  store i8* %44, i8** %p, align 8, !dbg !4157, !tbaa !1534
  br label %for.cond.15, !dbg !4158

for.cond.15:                                      ; preds = %for.inc.29, %for.end
  %45 = load i64, i64* %i, align 8, !dbg !4159, !tbaa !1603
  %46 = load i64*, i64** %shape.addr, align 8, !dbg !4162, !tbaa !1534
  %arrayidx16 = getelementptr i64, i64* %46, i64 0, !dbg !4162
  %47 = load i64, i64* %arrayidx16, align 8, !dbg !4162, !tbaa !1603
  %cmp17 = icmp slt i64 %45, %47, !dbg !4163
  br i1 %cmp17, label %for.body.18, label %for.end.34, !dbg !4164

for.body.18:                                      ; preds = %for.cond.15
  %48 = bitcast i8** %xdptr to i8*, !dbg !4165
  call void @llvm.lifetime.start(i64 8, i8* %48) #3, !dbg !4165
  call void @llvm.dbg.declare(metadata i8** %xdptr, metadata !683, metadata !1538), !dbg !4166
  %49 = load i64*, i64** %dsuboffsets.addr, align 8, !dbg !4167, !tbaa !1534
  %tobool19 = icmp ne i64* %49, null, !dbg !4167
  br i1 %tobool19, label %land.lhs.true.20, label %cond.false.26, !dbg !4168

land.lhs.true.20:                                 ; preds = %for.body.18
  %50 = load i64*, i64** %dsuboffsets.addr, align 8, !dbg !4169, !tbaa !1534
  %arrayidx21 = getelementptr i64, i64* %50, i64 0, !dbg !4169
  %51 = load i64, i64* %arrayidx21, align 8, !dbg !4169, !tbaa !1603
  %cmp22 = icmp sge i64 %51, 0, !dbg !4171
  br i1 %cmp22, label %cond.true.23, label %cond.false.26, !dbg !4172

cond.true.23:                                     ; preds = %land.lhs.true.20
  %52 = load i8*, i8** %dptr.addr, align 8, !dbg !4173, !tbaa !1534
  %53 = bitcast i8* %52 to i8**, !dbg !4175
  %54 = load i8*, i8** %53, align 8, !dbg !4176, !tbaa !1534
  %55 = load i64*, i64** %dsuboffsets.addr, align 8, !dbg !4177, !tbaa !1534
  %arrayidx24 = getelementptr i64, i64* %55, i64 0, !dbg !4177
  %56 = load i64, i64* %arrayidx24, align 8, !dbg !4177, !tbaa !1603
  %add.ptr25 = getelementptr i8, i8* %54, i64 %56, !dbg !4178
  br label %cond.end.27, !dbg !4172

cond.false.26:                                    ; preds = %land.lhs.true.20, %for.body.18
  %57 = load i8*, i8** %dptr.addr, align 8, !dbg !4179, !tbaa !1534
  br label %cond.end.27, !dbg !4172

cond.end.27:                                      ; preds = %cond.false.26, %cond.true.23
  %cond28 = phi i8* [ %add.ptr25, %cond.true.23 ], [ %57, %cond.false.26 ], !dbg !4172
  store i8* %cond28, i8** %xdptr, align 8, !dbg !4182, !tbaa !1534
  %58 = load i8*, i8** %xdptr, align 8, !dbg !4185, !tbaa !1534
  %59 = load i8*, i8** %p, align 8, !dbg !4186, !tbaa !1534
  %60 = load i64, i64* %itemsize.addr, align 8, !dbg !4187, !tbaa !1603
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %58, i8* %59, i64 %60, i32 1, i1 false), !dbg !4188
  %61 = bitcast i8** %xdptr to i8*, !dbg !4189
  call void @llvm.lifetime.end(i64 8, i8* %61) #3, !dbg !4189
  br label %for.inc.29, !dbg !4190

for.inc.29:                                       ; preds = %cond.end.27
  %62 = load i64, i64* %itemsize.addr, align 8, !dbg !4191, !tbaa !1603
  %63 = load i8*, i8** %p, align 8, !dbg !4192, !tbaa !1534
  %add.ptr30 = getelementptr i8, i8* %63, i64 %62, !dbg !4192
  store i8* %add.ptr30, i8** %p, align 8, !dbg !4192, !tbaa !1534
  %64 = load i64*, i64** %dstrides.addr, align 8, !dbg !4193, !tbaa !1534
  %arrayidx31 = getelementptr i64, i64* %64, i64 0, !dbg !4193
  %65 = load i64, i64* %arrayidx31, align 8, !dbg !4193, !tbaa !1603
  %66 = load i8*, i8** %dptr.addr, align 8, !dbg !4194, !tbaa !1534
  %add.ptr32 = getelementptr i8, i8* %66, i64 %65, !dbg !4194
  store i8* %add.ptr32, i8** %dptr.addr, align 8, !dbg !4194, !tbaa !1534
  %67 = load i64, i64* %i, align 8, !dbg !4195, !tbaa !1603
  %inc33 = add i64 %67, 1, !dbg !4195
  store i64 %inc33, i64* %i, align 8, !dbg !4195, !tbaa !1603
  br label %for.cond.15, !dbg !4196

for.end.34:                                       ; preds = %for.cond.15
  %68 = bitcast i64* %i to i8*, !dbg !4197
  call void @llvm.lifetime.end(i64 8, i8* %68) #3, !dbg !4197
  %69 = bitcast i8** %p to i8*, !dbg !4197
  call void @llvm.lifetime.end(i64 8, i8* %69) #3, !dbg !4197
  br label %if.end.35

if.end.35:                                        ; preds = %for.end.34, %if.end
  ret void, !dbg !4198
}

; Function Attrs: nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #3

; Function Attrs: nounwind uwtable
define internal i32 @_memory_release(%struct.PyMemoryViewObject* %self) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.PyMemoryViewObject*, align 8
  store %struct.PyMemoryViewObject* %self, %struct.PyMemoryViewObject** %self.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %self.addr, metadata !728, metadata !1538), !dbg !4199
  %0 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !4200, !tbaa !1534
  %flags = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %0, i32 0, i32 3, !dbg !4202
  %1 = load i32, i32* %flags, align 4, !dbg !4202, !tbaa !1894
  %and = and i32 %1, 1, !dbg !4203
  %tobool = icmp ne i32 %and, 0, !dbg !4203
  br i1 %tobool, label %if.then, label %if.end, !dbg !4204

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, !dbg !4205
  br label %return, !dbg !4205

if.end:                                           ; preds = %entry
  %2 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !4206, !tbaa !1534
  %exports = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %2, i32 0, i32 4, !dbg !4208
  %3 = load i64, i64* %exports, align 8, !dbg !4208, !tbaa !3446
  %cmp = icmp eq i64 %3, 0, !dbg !4209
  br i1 %cmp, label %if.then.1, label %if.end.8, !dbg !4210

if.then.1:                                        ; preds = %if.end
  %4 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !4211, !tbaa !1534
  %flags2 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %4, i32 0, i32 3, !dbg !4213
  %5 = load i32, i32* %flags2, align 4, !dbg !4214, !tbaa !1894
  %or = or i32 %5, 1, !dbg !4214
  store i32 %or, i32* %flags2, align 4, !dbg !4214, !tbaa !1894
  %6 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !4215, !tbaa !1534
  %mbuf = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %6, i32 0, i32 1, !dbg !4217
  %7 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !4217, !tbaa !1805
  %exports3 = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %7, i32 0, i32 2, !dbg !4218
  %8 = load i64, i64* %exports3, align 8, !dbg !4219, !tbaa !1681
  %dec = add i64 %8, -1, !dbg !4219
  store i64 %dec, i64* %exports3, align 8, !dbg !4219, !tbaa !1681
  %cmp4 = icmp eq i64 %dec, 0, !dbg !4220
  br i1 %cmp4, label %if.then.5, label %if.end.7, !dbg !4221

if.then.5:                                        ; preds = %if.then.1
  %9 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !4222, !tbaa !1534
  %mbuf6 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %9, i32 0, i32 1, !dbg !4223
  %10 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf6, align 8, !dbg !4223, !tbaa !1805
  call void @mbuf_release(%struct._PyManagedBufferObject* %10), !dbg !4224
  br label %if.end.7, !dbg !4224

if.end.7:                                         ; preds = %if.then.5, %if.then.1
  store i32 0, i32* %retval, !dbg !4225
  br label %return, !dbg !4225

if.end.8:                                         ; preds = %if.end
  %11 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !4226, !tbaa !1534
  %exports9 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %11, i32 0, i32 4, !dbg !4228
  %12 = load i64, i64* %exports9, align 8, !dbg !4228, !tbaa !3446
  %cmp10 = icmp sgt i64 %12, 0, !dbg !4229
  br i1 %cmp10, label %if.then.11, label %if.end.15, !dbg !4230

if.then.11:                                       ; preds = %if.end.8
  %13 = load %struct._object*, %struct._object** @PyExc_BufferError, align 8, !dbg !4231, !tbaa !1534
  %14 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !4233, !tbaa !1534
  %exports12 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %14, i32 0, i32 4, !dbg !4234
  %15 = load i64, i64* %exports12, align 8, !dbg !4234, !tbaa !3446
  %16 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !4235, !tbaa !1534
  %exports13 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %16, i32 0, i32 4, !dbg !4236
  %17 = load i64, i64* %exports13, align 8, !dbg !4236, !tbaa !3446
  %cmp14 = icmp eq i64 %17, 1, !dbg !4237
  %cond = select i1 %cmp14, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i32 0, i32 0), !dbg !4235
  %call = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %13, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.12, i32 0, i32 0), i64 %15, i8* %cond), !dbg !4238
  store i32 -1, i32* %retval, !dbg !4239
  br label %return, !dbg !4239

if.end.15:                                        ; preds = %if.end.8
  call void @Py_FatalError(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.15, i32 0, i32 0)) #8, !dbg !4240
  unreachable, !dbg !4240

return:                                           ; preds = %if.then.11, %if.end.7, %if.then
  %18 = load i32, i32* %retval, !dbg !4241
  ret i32 %18, !dbg !4241
}

declare void @PyObject_ClearWeakRefs(%struct._object*) #1

declare %struct._object* @PyUnicode_FromFormat(i8*, ...) #1

; Function Attrs: nounwind uwtable
define internal i64 @memory_length(%struct.PyMemoryViewObject* %self) #0 {
entry:
  %retval = alloca i64, align 8
  %self.addr = alloca %struct.PyMemoryViewObject*, align 8
  store %struct.PyMemoryViewObject* %self, %struct.PyMemoryViewObject** %self.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %self.addr, metadata !738, metadata !1538), !dbg !4242
  %0 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !4243, !tbaa !1534
  %flags = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %0, i32 0, i32 3, !dbg !4245
  %1 = load i32, i32* %flags, align 4, !dbg !4245, !tbaa !1894
  %and = and i32 %1, 1, !dbg !4246
  %tobool = icmp ne i32 %and, 0, !dbg !4246
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !4247

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !4248, !tbaa !1534
  %mbuf = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %2, i32 0, i32 1, !dbg !4250
  %3 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !4250, !tbaa !1805
  %flags1 = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %3, i32 0, i32 1, !dbg !4251
  %4 = load i32, i32* %flags1, align 4, !dbg !4251, !tbaa !1545
  %and2 = and i32 %4, 1, !dbg !4252
  %tobool3 = icmp ne i32 %and2, 0, !dbg !4252
  br i1 %tobool3, label %if.then, label %if.end, !dbg !4253

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4254, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2, i32 0, i32 0)), !dbg !4258
  store i64 -1, i64* %retval, !dbg !4259
  br label %return, !dbg !4259

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !4260, !tbaa !1534
  %view = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %6, i32 0, i32 5, !dbg !4261
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view, i32 0, i32 5, !dbg !4262
  %7 = load i32, i32* %ndim, align 4, !dbg !4262, !tbaa !3452
  %cmp = icmp eq i32 %7, 0, !dbg !4263
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4260

cond.true:                                        ; preds = %if.end
  br label %cond.end, !dbg !4264

cond.false:                                       ; preds = %if.end
  %8 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !4266, !tbaa !1534
  %view4 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %8, i32 0, i32 5, !dbg !4268
  %shape = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view4, i32 0, i32 7, !dbg !4269
  %9 = load i64*, i64** %shape, align 8, !dbg !4269, !tbaa !3459
  %arrayidx = getelementptr i64, i64* %9, i64 0, !dbg !4270
  %10 = load i64, i64* %arrayidx, align 8, !dbg !4270, !tbaa !1603
  br label %cond.end, !dbg !4260

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 1, %cond.true ], [ %10, %cond.false ], !dbg !4260
  store i64 %cond, i64* %retval, !dbg !4271
  br label %return, !dbg !4271

return:                                           ; preds = %cond.end, %if.then
  %11 = load i64, i64* %retval, !dbg !4274
  ret i64 %11, !dbg !4274
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @memory_item(%struct.PyMemoryViewObject* %self, i64 %index) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyMemoryViewObject*, align 8
  %index.addr = alloca i64, align 8
  %view = alloca %struct.bufferinfo*, align 8
  %fmt = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %ptr = alloca i8*, align 8
  store %struct.PyMemoryViewObject* %self, %struct.PyMemoryViewObject** %self.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %self.addr, metadata !743, metadata !1538), !dbg !4275
  store i64 %index, i64* %index.addr, align 8, !tbaa !1603
  call void @llvm.dbg.declare(metadata i64* %index.addr, metadata !744, metadata !1538), !dbg !4276
  %0 = bitcast %struct.bufferinfo** %view to i8*, !dbg !4277
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !4277
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %view, metadata !745, metadata !1538), !dbg !4278
  %1 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !4279, !tbaa !1534
  %view1 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %1, i32 0, i32 5, !dbg !4280
  store %struct.bufferinfo* %view1, %struct.bufferinfo** %view, align 8, !dbg !4278, !tbaa !1534
  %2 = bitcast i8** %fmt to i8*, !dbg !4281
  call void @llvm.lifetime.start(i64 8, i8* %2) #3, !dbg !4281
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !746, metadata !1538), !dbg !4282
  %3 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !4283, !tbaa !1534
  %flags = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %3, i32 0, i32 3, !dbg !4285
  %4 = load i32, i32* %flags, align 4, !dbg !4285, !tbaa !1894
  %and = and i32 %4, 1, !dbg !4286
  %tobool = icmp ne i32 %and, 0, !dbg !4286
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !4287

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !4288, !tbaa !1534
  %mbuf = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %5, i32 0, i32 1, !dbg !4290
  %6 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !4290, !tbaa !1805
  %flags2 = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %6, i32 0, i32 1, !dbg !4291
  %7 = load i32, i32* %flags2, align 4, !dbg !4291, !tbaa !1545
  %and3 = and i32 %7, 1, !dbg !4292
  %tobool4 = icmp ne i32 %and3, 0, !dbg !4292
  br i1 %tobool4, label %if.then, label %if.end, !dbg !4293

if.then:                                          ; preds = %lor.lhs.false, %entry
  %8 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4294, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %8, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2, i32 0, i32 0)), !dbg !4298
  store %struct._object* null, %struct._object** %retval, !dbg !4299
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.19, !dbg !4299

if.end:                                           ; preds = %lor.lhs.false
  %9 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !4300, !tbaa !1534
  %call = call i8* @adjust_fmt(%struct.bufferinfo* %9), !dbg !4301
  store i8* %call, i8** %fmt, align 8, !dbg !4302, !tbaa !1534
  %10 = load i8*, i8** %fmt, align 8, !dbg !4303, !tbaa !1534
  %cmp = icmp eq i8* %10, null, !dbg !4305
  br i1 %cmp, label %if.then.5, label %if.end.6, !dbg !4306

if.then.5:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !4307
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.19, !dbg !4307

if.end.6:                                         ; preds = %if.end
  %11 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !4308, !tbaa !1534
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %11, i32 0, i32 5, !dbg !4310
  %12 = load i32, i32* %ndim, align 4, !dbg !4310, !tbaa !1771
  %cmp7 = icmp eq i32 %12, 0, !dbg !4311
  br i1 %cmp7, label %if.then.8, label %if.end.9, !dbg !4312

if.then.8:                                        ; preds = %if.end.6
  %13 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !4313, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %13, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.18, i32 0, i32 0)), !dbg !4315
  store %struct._object* null, %struct._object** %retval, !dbg !4316
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.19, !dbg !4316

if.end.9:                                         ; preds = %if.end.6
  %14 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !4317, !tbaa !1534
  %ndim10 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %14, i32 0, i32 5, !dbg !4318
  %15 = load i32, i32* %ndim10, align 4, !dbg !4318, !tbaa !1771
  %cmp11 = icmp eq i32 %15, 1, !dbg !4319
  br i1 %cmp11, label %if.then.12, label %if.end.18, !dbg !4320

if.then.12:                                       ; preds = %if.end.9
  %16 = bitcast i8** %ptr to i8*, !dbg !4321
  call void @llvm.lifetime.start(i64 8, i8* %16) #3, !dbg !4321
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !747, metadata !1538), !dbg !4322
  %17 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !4323, !tbaa !1534
  %18 = load i64, i64* %index.addr, align 8, !dbg !4324, !tbaa !1603
  %call13 = call i8* @ptr_from_index(%struct.bufferinfo* %17, i64 %18), !dbg !4325
  store i8* %call13, i8** %ptr, align 8, !dbg !4322, !tbaa !1534
  %19 = load i8*, i8** %ptr, align 8, !dbg !4326, !tbaa !1534
  %cmp14 = icmp eq i8* %19, null, !dbg !4328
  br i1 %cmp14, label %if.then.15, label %if.end.16, !dbg !4329

if.then.15:                                       ; preds = %if.then.12
  store %struct._object* null, %struct._object** %retval, !dbg !4330
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4330

if.end.16:                                        ; preds = %if.then.12
  %20 = load i8*, i8** %ptr, align 8, !dbg !4331, !tbaa !1534
  %21 = load i8*, i8** %fmt, align 8, !dbg !4332, !tbaa !1534
  %call17 = call %struct._object* @unpack_single(i8* %20, i8* %21), !dbg !4333
  store %struct._object* %call17, %struct._object** %retval, !dbg !4334
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4334

cleanup:                                          ; preds = %if.end.16, %if.then.15
  %22 = bitcast i8** %ptr to i8*, !dbg !4335
  call void @llvm.lifetime.end(i64 8, i8* %22) #3, !dbg !4335
  br label %cleanup.19

if.end.18:                                        ; preds = %if.end.9
  %23 = load %struct._object*, %struct._object** @PyExc_NotImplementedError, align 8, !dbg !4336, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %23, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.19, i32 0, i32 0)), !dbg !4337
  store %struct._object* null, %struct._object** %retval, !dbg !4338
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.19, !dbg !4338

cleanup.19:                                       ; preds = %if.end.18, %cleanup, %if.then.8, %if.then.5, %if.then
  %24 = bitcast i8** %fmt to i8*, !dbg !4339
  call void @llvm.lifetime.end(i64 8, i8* %24) #3, !dbg !4339
  %25 = bitcast %struct.bufferinfo** %view to i8*, !dbg !4339
  call void @llvm.lifetime.end(i64 8, i8* %25) #3, !dbg !4339
  %26 = load %struct._object*, %struct._object** %retval, !dbg !4339
  ret %struct._object* %26, !dbg !4339
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @adjust_fmt(%struct.bufferinfo* %view) #4 {
entry:
  %retval = alloca i8*, align 8
  %view.addr = alloca %struct.bufferinfo*, align 8
  %fmt = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.bufferinfo* %view, %struct.bufferinfo** %view.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %view.addr, metadata !754, metadata !1538), !dbg !4340
  %0 = bitcast i8** %fmt to i8*, !dbg !4341
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !4341
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !755, metadata !1538), !dbg !4342
  %1 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !4343, !tbaa !1534
  %format = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %1, i32 0, i32 6, !dbg !4344
  %2 = load i8*, i8** %format, align 8, !dbg !4344, !tbaa !2219
  %arrayidx = getelementptr i8, i8* %2, i64 0, !dbg !4343
  %3 = load i8, i8* %arrayidx, align 1, !dbg !4343, !tbaa !2033
  %conv = sext i8 %3 to i32, !dbg !4343
  %cmp = icmp eq i32 %conv, 64, !dbg !4345
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4346

cond.true:                                        ; preds = %entry
  %4 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !4347, !tbaa !1534
  %format2 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %4, i32 0, i32 6, !dbg !4349
  %5 = load i8*, i8** %format2, align 8, !dbg !4349, !tbaa !2219
  %add.ptr = getelementptr i8, i8* %5, i64 1, !dbg !4350
  br label %cond.end, !dbg !4346

cond.false:                                       ; preds = %entry
  %6 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !4351, !tbaa !1534
  %format3 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %6, i32 0, i32 6, !dbg !4353
  %7 = load i8*, i8** %format3, align 8, !dbg !4353, !tbaa !2219
  br label %cond.end, !dbg !4346

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ %7, %cond.false ], !dbg !4346
  store i8* %cond, i8** %fmt, align 8, !dbg !4354, !tbaa !1534
  %8 = load i8*, i8** %fmt, align 8, !dbg !4357, !tbaa !1534
  %arrayidx4 = getelementptr i8, i8* %8, i64 0, !dbg !4357
  %9 = load i8, i8* %arrayidx4, align 1, !dbg !4357, !tbaa !2033
  %conv5 = sext i8 %9 to i32, !dbg !4357
  %tobool = icmp ne i32 %conv5, 0, !dbg !4357
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4359

land.lhs.true:                                    ; preds = %cond.end
  %10 = load i8*, i8** %fmt, align 8, !dbg !4360, !tbaa !1534
  %arrayidx6 = getelementptr i8, i8* %10, i64 1, !dbg !4360
  %11 = load i8, i8* %arrayidx6, align 1, !dbg !4360, !tbaa !2033
  %conv7 = sext i8 %11 to i32, !dbg !4360
  %cmp8 = icmp eq i32 %conv7, 0, !dbg !4362
  br i1 %cmp8, label %if.then, label %if.end, !dbg !4363

if.then:                                          ; preds = %land.lhs.true
  %12 = load i8*, i8** %fmt, align 8, !dbg !4364, !tbaa !1534
  store i8* %12, i8** %retval, !dbg !4365
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4365

if.end:                                           ; preds = %land.lhs.true, %cond.end
  %13 = load %struct._object*, %struct._object** @PyExc_NotImplementedError, align 8, !dbg !4366, !tbaa !1534
  %14 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !4367, !tbaa !1534
  %format10 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %14, i32 0, i32 6, !dbg !4368
  %15 = load i8*, i8** %format10, align 8, !dbg !4368, !tbaa !2219
  %call = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %13, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.20, i32 0, i32 0), i8* %15), !dbg !4369
  store i8* null, i8** %retval, !dbg !4370
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4370

cleanup:                                          ; preds = %if.end, %if.then
  %16 = bitcast i8** %fmt to i8*, !dbg !4371
  call void @llvm.lifetime.end(i64 8, i8* %16) #3, !dbg !4371
  %17 = load i8*, i8** %retval, !dbg !4371
  ret i8* %17, !dbg !4371
}

; Function Attrs: nounwind uwtable
define internal i8* @ptr_from_index(%struct.bufferinfo* %view, i64 %index) #0 {
entry:
  %retval = alloca i8*, align 8
  %view.addr = alloca %struct.bufferinfo*, align 8
  %index.addr = alloca i64, align 8
  %ptr = alloca i8*, align 8
  %nitems = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.bufferinfo* %view, %struct.bufferinfo** %view.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %view.addr, metadata !760, metadata !1538), !dbg !4372
  store i64 %index, i64* %index.addr, align 8, !tbaa !1603
  call void @llvm.dbg.declare(metadata i64* %index.addr, metadata !761, metadata !1538), !dbg !4373
  %0 = bitcast i8** %ptr to i8*, !dbg !4374
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !4374
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !762, metadata !1538), !dbg !4375
  %1 = bitcast i64* %nitems to i8*, !dbg !4376
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !4376
  call void @llvm.dbg.declare(metadata i64* %nitems, metadata !763, metadata !1538), !dbg !4377
  %2 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !4378, !tbaa !1534
  %shape = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %2, i32 0, i32 7, !dbg !4379
  %3 = load i64*, i64** %shape, align 8, !dbg !4379, !tbaa !2308
  %arrayidx = getelementptr i64, i64* %3, i64 0, !dbg !4378
  %4 = load i64, i64* %arrayidx, align 8, !dbg !4378, !tbaa !1603
  store i64 %4, i64* %nitems, align 8, !dbg !4380, !tbaa !1603
  %5 = load i64, i64* %index.addr, align 8, !dbg !4381, !tbaa !1603
  %cmp = icmp slt i64 %5, 0, !dbg !4383
  br i1 %cmp, label %if.then, label %if.end, !dbg !4384

if.then:                                          ; preds = %entry
  %6 = load i64, i64* %nitems, align 8, !dbg !4385, !tbaa !1603
  %7 = load i64, i64* %index.addr, align 8, !dbg !4387, !tbaa !1603
  %add = add i64 %7, %6, !dbg !4387
  store i64 %add, i64* %index.addr, align 8, !dbg !4387, !tbaa !1603
  br label %if.end, !dbg !4388

if.end:                                           ; preds = %if.then, %entry
  %8 = load i64, i64* %index.addr, align 8, !dbg !4389, !tbaa !1603
  %cmp1 = icmp slt i64 %8, 0, !dbg !4391
  br i1 %cmp1, label %if.then.3, label %lor.lhs.false, !dbg !4392

lor.lhs.false:                                    ; preds = %if.end
  %9 = load i64, i64* %index.addr, align 8, !dbg !4393, !tbaa !1603
  %10 = load i64, i64* %nitems, align 8, !dbg !4395, !tbaa !1603
  %cmp2 = icmp sge i64 %9, %10, !dbg !4396
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !4397

if.then.3:                                        ; preds = %lor.lhs.false, %if.end
  %11 = load %struct._object*, %struct._object** @PyExc_IndexError, align 8, !dbg !4398, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %11, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i32 0, i32 0)), !dbg !4400
  store i8* null, i8** %retval, !dbg !4401
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4401

if.end.4:                                         ; preds = %lor.lhs.false
  %12 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !4402, !tbaa !1534
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %12, i32 0, i32 0, !dbg !4403
  %13 = load i8*, i8** %buf, align 8, !dbg !4403, !tbaa !1826
  store i8* %13, i8** %ptr, align 8, !dbg !4404, !tbaa !1534
  %14 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !4405, !tbaa !1534
  %strides = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %14, i32 0, i32 8, !dbg !4406
  %15 = load i64*, i64** %strides, align 8, !dbg !4406, !tbaa !2541
  %arrayidx5 = getelementptr i64, i64* %15, i64 0, !dbg !4405
  %16 = load i64, i64* %arrayidx5, align 8, !dbg !4405, !tbaa !1603
  %17 = load i64, i64* %index.addr, align 8, !dbg !4407, !tbaa !1603
  %mul = mul i64 %16, %17, !dbg !4408
  %18 = load i8*, i8** %ptr, align 8, !dbg !4409, !tbaa !1534
  %add.ptr = getelementptr i8, i8* %18, i64 %mul, !dbg !4409
  store i8* %add.ptr, i8** %ptr, align 8, !dbg !4409, !tbaa !1534
  %19 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !4410, !tbaa !1534
  %suboffsets = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %19, i32 0, i32 9, !dbg !4411
  %20 = load i64*, i64** %suboffsets, align 8, !dbg !4411, !tbaa !2334
  %tobool = icmp ne i64* %20, null, !dbg !4410
  br i1 %tobool, label %land.lhs.true, label %cond.false, !dbg !4412

land.lhs.true:                                    ; preds = %if.end.4
  %21 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !4413, !tbaa !1534
  %suboffsets6 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %21, i32 0, i32 9, !dbg !4415
  %22 = load i64*, i64** %suboffsets6, align 8, !dbg !4415, !tbaa !2334
  %arrayidx7 = getelementptr i64, i64* %22, i64 0, !dbg !4416
  %23 = load i64, i64* %arrayidx7, align 8, !dbg !4416, !tbaa !1603
  %cmp8 = icmp sge i64 %23, 0, !dbg !4417
  br i1 %cmp8, label %cond.true, label %cond.false, !dbg !4418

cond.true:                                        ; preds = %land.lhs.true
  %24 = load i8*, i8** %ptr, align 8, !dbg !4419, !tbaa !1534
  %25 = bitcast i8* %24 to i8**, !dbg !4421
  %26 = load i8*, i8** %25, align 8, !dbg !4422, !tbaa !1534
  %27 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !4423, !tbaa !1534
  %suboffsets9 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %27, i32 0, i32 9, !dbg !4424
  %28 = load i64*, i64** %suboffsets9, align 8, !dbg !4424, !tbaa !2334
  %arrayidx10 = getelementptr i64, i64* %28, i64 0, !dbg !4423
  %29 = load i64, i64* %arrayidx10, align 8, !dbg !4423, !tbaa !1603
  %add.ptr11 = getelementptr i8, i8* %26, i64 %29, !dbg !4425
  br label %cond.end, !dbg !4418

cond.false:                                       ; preds = %land.lhs.true, %if.end.4
  %30 = load i8*, i8** %ptr, align 8, !dbg !4426, !tbaa !1534
  br label %cond.end, !dbg !4418

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr11, %cond.true ], [ %30, %cond.false ], !dbg !4418
  store i8* %cond, i8** %ptr, align 8, !dbg !4429, !tbaa !1534
  %31 = load i8*, i8** %ptr, align 8, !dbg !4432, !tbaa !1534
  store i8* %31, i8** %retval, !dbg !4433
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4433

cleanup:                                          ; preds = %cond.end, %if.then.3
  %32 = bitcast i64* %nitems to i8*, !dbg !4434
  call void @llvm.lifetime.end(i64 8, i8* %32) #3, !dbg !4434
  %33 = bitcast i8** %ptr to i8*, !dbg !4434
  call void @llvm.lifetime.end(i64 8, i8* %33) #3, !dbg !4434
  %34 = load i8*, i8** %retval, !dbg !4434
  ret i8* %34, !dbg !4434
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct._object* @unpack_single(i8* %ptr, i8* %fmt) #4 {
entry:
  %retval = alloca %struct._object*, align 8
  %ptr.addr = alloca i8*, align 8
  %fmt.addr = alloca i8*, align 8
  %llu = alloca i64, align 8
  %lu = alloca i64, align 8
  %zu = alloca i64, align 8
  %lld = alloca i64, align 8
  %ld = alloca i64, align 8
  %zd = alloca i64, align 8
  %d = alloca double, align 8
  %uc = alloca i8, align 1
  %p = alloca i8*, align 8
  %x = alloca i16, align 2
  %x7 = alloca i32, align 4
  %x13 = alloca i64, align 8
  %x18 = alloca i8, align 1
  %x24 = alloca i16, align 2
  %x30 = alloca i32, align 4
  %x36 = alloca i64, align 8
  %x41 = alloca i64, align 8
  %x46 = alloca i64, align 8
  %x51 = alloca i64, align 8
  %x56 = alloca i64, align 8
  %x61 = alloca float, align 4
  %x67 = alloca double, align 8
  %x73 = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store i8* %ptr, i8** %ptr.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !768, metadata !1538), !dbg !4435
  store i8* %fmt, i8** %fmt.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !769, metadata !1538), !dbg !4436
  %0 = bitcast i64* %llu to i8*, !dbg !4437
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !4437
  call void @llvm.dbg.declare(metadata i64* %llu, metadata !770, metadata !1538), !dbg !4438
  %1 = bitcast i64* %lu to i8*, !dbg !4439
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !4439
  call void @llvm.dbg.declare(metadata i64* %lu, metadata !771, metadata !1538), !dbg !4440
  %2 = bitcast i64* %zu to i8*, !dbg !4441
  call void @llvm.lifetime.start(i64 8, i8* %2) #3, !dbg !4441
  call void @llvm.dbg.declare(metadata i64* %zu, metadata !772, metadata !1538), !dbg !4442
  %3 = bitcast i64* %lld to i8*, !dbg !4443
  call void @llvm.lifetime.start(i64 8, i8* %3) #3, !dbg !4443
  call void @llvm.dbg.declare(metadata i64* %lld, metadata !773, metadata !1538), !dbg !4444
  %4 = bitcast i64* %ld to i8*, !dbg !4445
  call void @llvm.lifetime.start(i64 8, i8* %4) #3, !dbg !4445
  call void @llvm.dbg.declare(metadata i64* %ld, metadata !774, metadata !1538), !dbg !4446
  %5 = bitcast i64* %zd to i8*, !dbg !4447
  call void @llvm.lifetime.start(i64 8, i8* %5) #3, !dbg !4447
  call void @llvm.dbg.declare(metadata i64* %zd, metadata !775, metadata !1538), !dbg !4448
  %6 = bitcast double* %d to i8*, !dbg !4449
  call void @llvm.lifetime.start(i64 8, i8* %6) #3, !dbg !4449
  call void @llvm.dbg.declare(metadata double* %d, metadata !776, metadata !1538), !dbg !4450
  call void @llvm.lifetime.start(i64 1, i8* %uc) #3, !dbg !4451
  call void @llvm.dbg.declare(metadata i8* %uc, metadata !777, metadata !1538), !dbg !4452
  %7 = bitcast i8** %p to i8*, !dbg !4453
  call void @llvm.lifetime.start(i64 8, i8* %7) #3, !dbg !4453
  call void @llvm.dbg.declare(metadata i8** %p, metadata !778, metadata !1538), !dbg !4454
  %8 = load i8*, i8** %fmt.addr, align 8, !dbg !4455, !tbaa !1534
  %arrayidx = getelementptr i8, i8* %8, i64 0, !dbg !4455
  %9 = load i8, i8* %arrayidx, align 1, !dbg !4455, !tbaa !2033
  %conv = sext i8 %9 to i32, !dbg !4455
  br label %NodeBlock.51

NodeBlock.51:                                     ; preds = %entry
  %Pivot.52 = icmp slt i32 %conv, 98
  br i1 %Pivot.52, label %NodeBlock.21, label %NodeBlock.49

NodeBlock.49:                                     ; preds = %NodeBlock.51
  %Pivot.50 = icmp slt i32 %conv, 104
  br i1 %Pivot.50, label %NodeBlock.31, label %NodeBlock.47

NodeBlock.47:                                     ; preds = %NodeBlock.49
  %Pivot.48 = icmp slt i32 %conv, 108
  br i1 %Pivot.48, label %NodeBlock.35, label %NodeBlock.45

NodeBlock.45:                                     ; preds = %NodeBlock.47
  %Pivot.46 = icmp slt i32 %conv, 110
  br i1 %Pivot.46, label %LeafBlock.37, label %NodeBlock.43

NodeBlock.43:                                     ; preds = %NodeBlock.45
  %Pivot.44 = icmp slt i32 %conv, 113
  br i1 %Pivot.44, label %LeafBlock.39, label %LeafBlock.41

LeafBlock.41:                                     ; preds = %NodeBlock.43
  %SwitchLeaf42 = icmp eq i32 %conv, 113
  br i1 %SwitchLeaf42, label %sw.bb.39, label %NewDefault

LeafBlock.39:                                     ; preds = %NodeBlock.43
  %SwitchLeaf40 = icmp eq i32 %conv, 110
  br i1 %SwitchLeaf40, label %sw.bb.49, label %NewDefault

LeafBlock.37:                                     ; preds = %NodeBlock.45
  %SwitchLeaf38 = icmp eq i32 %conv, 108
  br i1 %SwitchLeaf38, label %sw.bb.11, label %NewDefault

NodeBlock.35:                                     ; preds = %NodeBlock.47
  %Pivot.36 = icmp slt i32 %conv, 105
  br i1 %Pivot.36, label %sw.bb.3, label %LeafBlock.33

LeafBlock.33:                                     ; preds = %NodeBlock.35
  %SwitchLeaf34 = icmp eq i32 %conv, 105
  br i1 %SwitchLeaf34, label %sw.bb.5, label %NewDefault

NodeBlock.31:                                     ; preds = %NodeBlock.49
  %Pivot.32 = icmp slt i32 %conv, 100
  br i1 %Pivot.32, label %NodeBlock.23, label %NodeBlock.29

NodeBlock.29:                                     ; preds = %NodeBlock.31
  %Pivot.30 = icmp slt i32 %conv, 102
  br i1 %Pivot.30, label %LeafBlock.25, label %LeafBlock.27

LeafBlock.27:                                     ; preds = %NodeBlock.29
  %SwitchLeaf28 = icmp eq i32 %conv, 102
  br i1 %SwitchLeaf28, label %sw.bb.59, label %NewDefault

LeafBlock.25:                                     ; preds = %NodeBlock.29
  %SwitchLeaf26 = icmp eq i32 %conv, 100
  br i1 %SwitchLeaf26, label %sw.bb.65, label %NewDefault

NodeBlock.23:                                     ; preds = %NodeBlock.31
  %Pivot.24 = icmp slt i32 %conv, 99
  br i1 %Pivot.24, label %sw.bb.1, label %sw.bb.70

NodeBlock.21:                                     ; preds = %NodeBlock.51
  %Pivot.22 = icmp slt i32 %conv, 76
  br i1 %Pivot.22, label %NodeBlock.7, label %NodeBlock.19

NodeBlock.19:                                     ; preds = %NodeBlock.21
  %Pivot.20 = icmp slt i32 %conv, 80
  br i1 %Pivot.20, label %NodeBlock.13, label %NodeBlock.17

NodeBlock.17:                                     ; preds = %NodeBlock.19
  %Pivot.18 = icmp slt i32 %conv, 81
  br i1 %Pivot.18, label %sw.bb.71, label %LeafBlock.15

LeafBlock.15:                                     ; preds = %NodeBlock.17
  %SwitchLeaf16 = icmp eq i32 %conv, 81
  br i1 %SwitchLeaf16, label %sw.bb.44, label %NewDefault

NodeBlock.13:                                     ; preds = %NodeBlock.19
  %Pivot.14 = icmp slt i32 %conv, 78
  br i1 %Pivot.14, label %LeafBlock.9, label %LeafBlock.11

LeafBlock.11:                                     ; preds = %NodeBlock.13
  %SwitchLeaf12 = icmp eq i32 %conv, 78
  br i1 %SwitchLeaf12, label %sw.bb.54, label %NewDefault

LeafBlock.9:                                      ; preds = %NodeBlock.13
  %SwitchLeaf10 = icmp eq i32 %conv, 76
  br i1 %SwitchLeaf10, label %sw.bb.34, label %NewDefault

NodeBlock.7:                                      ; preds = %NodeBlock.21
  %Pivot.8 = icmp slt i32 %conv, 72
  br i1 %Pivot.8, label %NodeBlock, label %NodeBlock.5

NodeBlock.5:                                      ; preds = %NodeBlock.7
  %Pivot.6 = icmp slt i32 %conv, 73
  br i1 %Pivot.6, label %sw.bb.22, label %LeafBlock.3

LeafBlock.3:                                      ; preds = %NodeBlock.5
  %SwitchLeaf4 = icmp eq i32 %conv, 73
  br i1 %SwitchLeaf4, label %sw.bb.28, label %NewDefault

NodeBlock:                                        ; preds = %NodeBlock.7
  %Pivot = icmp slt i32 %conv, 66
  br i1 %Pivot, label %LeafBlock, label %LeafBlock.1

LeafBlock.1:                                      ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %conv, 66
  br i1 %SwitchLeaf2, label %sw.bb, label %NewDefault

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %conv, 63
  br i1 %SwitchLeaf, label %sw.bb.16, label %NewDefault

sw.bb:                                            ; preds = %LeafBlock.1
  %10 = load i8*, i8** %ptr.addr, align 8, !dbg !4456, !tbaa !1534
  %11 = load i8, i8* %10, align 1, !dbg !4457, !tbaa !2033
  store i8 %11, i8* %uc, align 1, !dbg !4458, !tbaa !2033
  br label %convert_uc, !dbg !4459

sw.bb.1:                                          ; preds = %NodeBlock.23
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !4460, !tbaa !1534
  %13 = load i8, i8* %12, align 1, !dbg !4461, !tbaa !2033
  %conv2 = sext i8 %13 to i64, !dbg !4461
  store i64 %conv2, i64* %ld, align 8, !dbg !4462, !tbaa !1603
  br label %convert_ld, !dbg !4463

sw.bb.3:                                          ; preds = %NodeBlock.35
  br label %do.body, !dbg !4464

do.body:                                          ; preds = %sw.bb.3
  %14 = bitcast i16* %x to i8*, !dbg !4465
  call void @llvm.lifetime.start(i64 2, i8* %14) #3, !dbg !4465
  call void @llvm.dbg.declare(metadata i16* %x, metadata !779, metadata !1538), !dbg !4467
  %15 = bitcast i16* %x to i8*, !dbg !4468
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !4469, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 2, i32 1, i1 false), !dbg !4470
  %17 = load i16, i16* %x, align 2, !dbg !4471, !tbaa !4472
  %conv4 = sext i16 %17 to i64, !dbg !4471
  store i64 %conv4, i64* %ld, align 8, !dbg !4474, !tbaa !1603
  %18 = bitcast i16* %x to i8*, !dbg !4475
  call void @llvm.lifetime.end(i64 2, i8* %18) #3, !dbg !4475
  br label %do.cond, !dbg !4476

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !4477

do.end:                                           ; preds = %do.cond
  br label %convert_ld, !dbg !4479

sw.bb.5:                                          ; preds = %LeafBlock.33
  br label %do.body.6, !dbg !4481

do.body.6:                                        ; preds = %sw.bb.5
  %19 = bitcast i32* %x7 to i8*, !dbg !4482
  call void @llvm.lifetime.start(i64 4, i8* %19) #3, !dbg !4482
  call void @llvm.dbg.declare(metadata i32* %x7, metadata !782, metadata !1538), !dbg !4484
  %20 = bitcast i32* %x7 to i8*, !dbg !4485
  %21 = load i8*, i8** %ptr.addr, align 8, !dbg !4486, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 4, i32 1, i1 false), !dbg !4487
  %22 = load i32, i32* %x7, align 4, !dbg !4488, !tbaa !1580
  %conv8 = sext i32 %22 to i64, !dbg !4488
  store i64 %conv8, i64* %ld, align 8, !dbg !4489, !tbaa !1603
  %23 = bitcast i32* %x7 to i8*, !dbg !4490
  call void @llvm.lifetime.end(i64 4, i8* %23) #3, !dbg !4490
  br label %do.cond.9, !dbg !4491

do.cond.9:                                        ; preds = %do.body.6
  br label %do.end.10, !dbg !4492

do.end.10:                                        ; preds = %do.cond.9
  br label %convert_ld, !dbg !4494

sw.bb.11:                                         ; preds = %LeafBlock.37
  br label %do.body.12, !dbg !4495

do.body.12:                                       ; preds = %sw.bb.11
  %24 = bitcast i64* %x13 to i8*, !dbg !4496
  call void @llvm.lifetime.start(i64 8, i8* %24) #3, !dbg !4496
  call void @llvm.dbg.declare(metadata i64* %x13, metadata !784, metadata !1538), !dbg !4498
  %25 = bitcast i64* %x13 to i8*, !dbg !4499
  %26 = load i8*, i8** %ptr.addr, align 8, !dbg !4500, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 8, i32 1, i1 false), !dbg !4501
  %27 = load i64, i64* %x13, align 8, !dbg !4502, !tbaa !1603
  store i64 %27, i64* %ld, align 8, !dbg !4503, !tbaa !1603
  %28 = bitcast i64* %x13 to i8*, !dbg !4504
  call void @llvm.lifetime.end(i64 8, i8* %28) #3, !dbg !4504
  br label %do.cond.14, !dbg !4505

do.cond.14:                                       ; preds = %do.body.12
  br label %do.end.15, !dbg !4506

do.end.15:                                        ; preds = %do.cond.14
  br label %convert_ld, !dbg !4508

sw.bb.16:                                         ; preds = %LeafBlock
  br label %do.body.17, !dbg !4509

do.body.17:                                       ; preds = %sw.bb.16
  call void @llvm.lifetime.start(i64 1, i8* %x18) #3, !dbg !4510
  call void @llvm.dbg.declare(metadata i8* %x18, metadata !786, metadata !1538), !dbg !4511
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !4512, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %x18, i8* %29, i64 1, i32 1, i1 false), !dbg !4514
  %30 = load i8, i8* %x18, align 1, !dbg !4515, !tbaa !4516, !range !4518
  %tobool = trunc i8 %30 to i1, !dbg !4515
  %conv19 = zext i1 %tobool to i64, !dbg !4515
  store i64 %conv19, i64* %ld, align 8, !dbg !4519, !tbaa !1603
  call void @llvm.lifetime.end(i64 1, i8* %x18) #3, !dbg !4520
  br label %do.cond.20, !dbg !4521

do.cond.20:                                       ; preds = %do.body.17
  br label %do.end.21, !dbg !4522

do.end.21:                                        ; preds = %do.cond.20
  br label %convert_bool, !dbg !4524

sw.bb.22:                                         ; preds = %NodeBlock.5
  br label %do.body.23, !dbg !4525

do.body.23:                                       ; preds = %sw.bb.22
  %31 = bitcast i16* %x24 to i8*, !dbg !4526
  call void @llvm.lifetime.start(i64 2, i8* %31) #3, !dbg !4526
  call void @llvm.dbg.declare(metadata i16* %x24, metadata !788, metadata !1538), !dbg !4528
  %32 = bitcast i16* %x24 to i8*, !dbg !4529
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !4530, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 2, i32 1, i1 false), !dbg !4531
  %34 = load i16, i16* %x24, align 2, !dbg !4532, !tbaa !4472
  %conv25 = zext i16 %34 to i64, !dbg !4532
  store i64 %conv25, i64* %lu, align 8, !dbg !4533, !tbaa !1603
  %35 = bitcast i16* %x24 to i8*, !dbg !4534
  call void @llvm.lifetime.end(i64 2, i8* %35) #3, !dbg !4534
  br label %do.cond.26, !dbg !4535

do.cond.26:                                       ; preds = %do.body.23
  br label %do.end.27, !dbg !4536

do.end.27:                                        ; preds = %do.cond.26
  br label %convert_lu, !dbg !4538

sw.bb.28:                                         ; preds = %LeafBlock.3
  br label %do.body.29, !dbg !4539

do.body.29:                                       ; preds = %sw.bb.28
  %36 = bitcast i32* %x30 to i8*, !dbg !4540
  call void @llvm.lifetime.start(i64 4, i8* %36) #3, !dbg !4540
  call void @llvm.dbg.declare(metadata i32* %x30, metadata !790, metadata !1538), !dbg !4542
  %37 = bitcast i32* %x30 to i8*, !dbg !4543
  %38 = load i8*, i8** %ptr.addr, align 8, !dbg !4544, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 4, i32 1, i1 false), !dbg !4545
  %39 = load i32, i32* %x30, align 4, !dbg !4546, !tbaa !1580
  %conv31 = zext i32 %39 to i64, !dbg !4546
  store i64 %conv31, i64* %lu, align 8, !dbg !4547, !tbaa !1603
  %40 = bitcast i32* %x30 to i8*, !dbg !4548
  call void @llvm.lifetime.end(i64 4, i8* %40) #3, !dbg !4548
  br label %do.cond.32, !dbg !4549

do.cond.32:                                       ; preds = %do.body.29
  br label %do.end.33, !dbg !4550

do.end.33:                                        ; preds = %do.cond.32
  br label %convert_lu, !dbg !4552

sw.bb.34:                                         ; preds = %LeafBlock.9
  br label %do.body.35, !dbg !4553

do.body.35:                                       ; preds = %sw.bb.34
  %41 = bitcast i64* %x36 to i8*, !dbg !4554
  call void @llvm.lifetime.start(i64 8, i8* %41) #3, !dbg !4554
  call void @llvm.dbg.declare(metadata i64* %x36, metadata !792, metadata !1538), !dbg !4556
  %42 = bitcast i64* %x36 to i8*, !dbg !4557
  %43 = load i8*, i8** %ptr.addr, align 8, !dbg !4558, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 8, i32 1, i1 false), !dbg !4559
  %44 = load i64, i64* %x36, align 8, !dbg !4560, !tbaa !1603
  store i64 %44, i64* %lu, align 8, !dbg !4561, !tbaa !1603
  %45 = bitcast i64* %x36 to i8*, !dbg !4562
  call void @llvm.lifetime.end(i64 8, i8* %45) #3, !dbg !4562
  br label %do.cond.37, !dbg !4563

do.cond.37:                                       ; preds = %do.body.35
  br label %do.end.38, !dbg !4564

do.end.38:                                        ; preds = %do.cond.37
  br label %convert_lu, !dbg !4566

sw.bb.39:                                         ; preds = %LeafBlock.41
  br label %do.body.40, !dbg !4567

do.body.40:                                       ; preds = %sw.bb.39
  %46 = bitcast i64* %x41 to i8*, !dbg !4568
  call void @llvm.lifetime.start(i64 8, i8* %46) #3, !dbg !4568
  call void @llvm.dbg.declare(metadata i64* %x41, metadata !794, metadata !1538), !dbg !4570
  %47 = bitcast i64* %x41 to i8*, !dbg !4571
  %48 = load i8*, i8** %ptr.addr, align 8, !dbg !4572, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 8, i32 1, i1 false), !dbg !4573
  %49 = load i64, i64* %x41, align 8, !dbg !4574, !tbaa !4575
  store i64 %49, i64* %lld, align 8, !dbg !4577, !tbaa !4575
  %50 = bitcast i64* %x41 to i8*, !dbg !4578
  call void @llvm.lifetime.end(i64 8, i8* %50) #3, !dbg !4578
  br label %do.cond.42, !dbg !4579

do.cond.42:                                       ; preds = %do.body.40
  br label %do.end.43, !dbg !4580

do.end.43:                                        ; preds = %do.cond.42
  br label %convert_lld, !dbg !4582

sw.bb.44:                                         ; preds = %LeafBlock.15
  br label %do.body.45, !dbg !4583

do.body.45:                                       ; preds = %sw.bb.44
  %51 = bitcast i64* %x46 to i8*, !dbg !4584
  call void @llvm.lifetime.start(i64 8, i8* %51) #3, !dbg !4584
  call void @llvm.dbg.declare(metadata i64* %x46, metadata !796, metadata !1538), !dbg !4586
  %52 = bitcast i64* %x46 to i8*, !dbg !4587
  %53 = load i8*, i8** %ptr.addr, align 8, !dbg !4588, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 1, i1 false), !dbg !4589
  %54 = load i64, i64* %x46, align 8, !dbg !4590, !tbaa !4575
  store i64 %54, i64* %llu, align 8, !dbg !4591, !tbaa !4575
  %55 = bitcast i64* %x46 to i8*, !dbg !4592
  call void @llvm.lifetime.end(i64 8, i8* %55) #3, !dbg !4592
  br label %do.cond.47, !dbg !4593

do.cond.47:                                       ; preds = %do.body.45
  br label %do.end.48, !dbg !4594

do.end.48:                                        ; preds = %do.cond.47
  br label %convert_llu, !dbg !4596

sw.bb.49:                                         ; preds = %LeafBlock.39
  br label %do.body.50, !dbg !4597

do.body.50:                                       ; preds = %sw.bb.49
  %56 = bitcast i64* %x51 to i8*, !dbg !4598
  call void @llvm.lifetime.start(i64 8, i8* %56) #3, !dbg !4598
  call void @llvm.dbg.declare(metadata i64* %x51, metadata !798, metadata !1538), !dbg !4600
  %57 = bitcast i64* %x51 to i8*, !dbg !4601
  %58 = load i8*, i8** %ptr.addr, align 8, !dbg !4602, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %57, i8* %58, i64 8, i32 1, i1 false), !dbg !4603
  %59 = load i64, i64* %x51, align 8, !dbg !4604, !tbaa !1603
  store i64 %59, i64* %zd, align 8, !dbg !4605, !tbaa !1603
  %60 = bitcast i64* %x51 to i8*, !dbg !4606
  call void @llvm.lifetime.end(i64 8, i8* %60) #3, !dbg !4606
  br label %do.cond.52, !dbg !4607

do.cond.52:                                       ; preds = %do.body.50
  br label %do.end.53, !dbg !4608

do.end.53:                                        ; preds = %do.cond.52
  br label %convert_zd, !dbg !4610

sw.bb.54:                                         ; preds = %LeafBlock.11
  br label %do.body.55, !dbg !4611

do.body.55:                                       ; preds = %sw.bb.54
  %61 = bitcast i64* %x56 to i8*, !dbg !4612
  call void @llvm.lifetime.start(i64 8, i8* %61) #3, !dbg !4612
  call void @llvm.dbg.declare(metadata i64* %x56, metadata !800, metadata !1538), !dbg !4614
  %62 = bitcast i64* %x56 to i8*, !dbg !4615
  %63 = load i8*, i8** %ptr.addr, align 8, !dbg !4616, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %62, i8* %63, i64 8, i32 1, i1 false), !dbg !4617
  %64 = load i64, i64* %x56, align 8, !dbg !4618, !tbaa !1603
  store i64 %64, i64* %zu, align 8, !dbg !4619, !tbaa !1603
  %65 = bitcast i64* %x56 to i8*, !dbg !4620
  call void @llvm.lifetime.end(i64 8, i8* %65) #3, !dbg !4620
  br label %do.cond.57, !dbg !4621

do.cond.57:                                       ; preds = %do.body.55
  br label %do.end.58, !dbg !4622

do.end.58:                                        ; preds = %do.cond.57
  br label %convert_zu, !dbg !4624

sw.bb.59:                                         ; preds = %LeafBlock.27
  br label %do.body.60, !dbg !4625

do.body.60:                                       ; preds = %sw.bb.59
  %66 = bitcast float* %x61 to i8*, !dbg !4626
  call void @llvm.lifetime.start(i64 4, i8* %66) #3, !dbg !4626
  call void @llvm.dbg.declare(metadata float* %x61, metadata !802, metadata !1538), !dbg !4628
  %67 = bitcast float* %x61 to i8*, !dbg !4629
  %68 = load i8*, i8** %ptr.addr, align 8, !dbg !4630, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %67, i8* %68, i64 4, i32 1, i1 false), !dbg !4631
  %69 = load float, float* %x61, align 4, !dbg !4632, !tbaa !4633
  %conv62 = fpext float %69 to double, !dbg !4632
  store double %conv62, double* %d, align 8, !dbg !4635, !tbaa !4636
  %70 = bitcast float* %x61 to i8*, !dbg !4638
  call void @llvm.lifetime.end(i64 4, i8* %70) #3, !dbg !4638
  br label %do.cond.63, !dbg !4639

do.cond.63:                                       ; preds = %do.body.60
  br label %do.end.64, !dbg !4640

do.end.64:                                        ; preds = %do.cond.63
  br label %convert_double, !dbg !4642

sw.bb.65:                                         ; preds = %LeafBlock.25
  br label %do.body.66, !dbg !4643

do.body.66:                                       ; preds = %sw.bb.65
  %71 = bitcast double* %x67 to i8*, !dbg !4644
  call void @llvm.lifetime.start(i64 8, i8* %71) #3, !dbg !4644
  call void @llvm.dbg.declare(metadata double* %x67, metadata !804, metadata !1538), !dbg !4646
  %72 = bitcast double* %x67 to i8*, !dbg !4647
  %73 = load i8*, i8** %ptr.addr, align 8, !dbg !4648, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %72, i8* %73, i64 8, i32 1, i1 false), !dbg !4649
  %74 = load double, double* %x67, align 8, !dbg !4650, !tbaa !4636
  store double %74, double* %d, align 8, !dbg !4651, !tbaa !4636
  %75 = bitcast double* %x67 to i8*, !dbg !4652
  call void @llvm.lifetime.end(i64 8, i8* %75) #3, !dbg !4652
  br label %do.cond.68, !dbg !4653

do.cond.68:                                       ; preds = %do.body.66
  br label %do.end.69, !dbg !4654

do.end.69:                                        ; preds = %do.cond.68
  br label %convert_double, !dbg !4656

sw.bb.70:                                         ; preds = %NodeBlock.23
  br label %convert_bytes, !dbg !4657

sw.bb.71:                                         ; preds = %NodeBlock.17
  br label %do.body.72, !dbg !4658

do.body.72:                                       ; preds = %sw.bb.71
  %76 = bitcast i8** %x73 to i8*, !dbg !4659
  call void @llvm.lifetime.start(i64 8, i8* %76) #3, !dbg !4659
  call void @llvm.dbg.declare(metadata i8** %x73, metadata !806, metadata !1538), !dbg !4661
  %77 = bitcast i8** %x73 to i8*, !dbg !4662
  %78 = load i8*, i8** %ptr.addr, align 8, !dbg !4663, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %77, i8* %78, i64 8, i32 1, i1 false), !dbg !4664
  %79 = load i8*, i8** %x73, align 8, !dbg !4665, !tbaa !1534
  store i8* %79, i8** %p, align 8, !dbg !4666, !tbaa !1534
  %80 = bitcast i8** %x73 to i8*, !dbg !4667
  call void @llvm.lifetime.end(i64 8, i8* %80) #3, !dbg !4667
  br label %do.cond.74, !dbg !4668

do.cond.74:                                       ; preds = %do.body.72
  br label %do.end.75, !dbg !4669

do.end.75:                                        ; preds = %do.cond.74
  br label %convert_pointer, !dbg !4671

NewDefault:                                       ; preds = %LeafBlock.41, %LeafBlock.39, %LeafBlock.37, %LeafBlock.33, %LeafBlock.27, %LeafBlock.25, %LeafBlock.15, %LeafBlock.11, %LeafBlock.9, %LeafBlock.3, %LeafBlock.1, %LeafBlock
  br label %sw.default

sw.default:                                       ; preds = %NewDefault
  br label %err_format, !dbg !4672

convert_uc:                                       ; preds = %sw.bb
  %81 = load i8, i8* %uc, align 1, !dbg !4673, !tbaa !2033
  %conv76 = zext i8 %81 to i64, !dbg !4673
  %call = call %struct._object* @PyLong_FromLong(i64 %conv76), !dbg !4674
  store %struct._object* %call, %struct._object** %retval, !dbg !4675
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4675

convert_ld:                                       ; preds = %do.end.15, %do.end.10, %do.end, %sw.bb.1
  %82 = load i64, i64* %ld, align 8, !dbg !4676, !tbaa !1603
  %call77 = call %struct._object* @PyLong_FromLong(i64 %82), !dbg !4677
  store %struct._object* %call77, %struct._object** %retval, !dbg !4678
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4678

convert_lu:                                       ; preds = %do.end.38, %do.end.33, %do.end.27
  %83 = load i64, i64* %lu, align 8, !dbg !4679, !tbaa !1603
  %call78 = call %struct._object* @PyLong_FromUnsignedLong(i64 %83), !dbg !4680
  store %struct._object* %call78, %struct._object** %retval, !dbg !4681
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4681

convert_lld:                                      ; preds = %do.end.43
  %84 = load i64, i64* %lld, align 8, !dbg !4682, !tbaa !4575
  %call79 = call %struct._object* @PyLong_FromLongLong(i64 %84), !dbg !4683
  store %struct._object* %call79, %struct._object** %retval, !dbg !4684
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4684

convert_llu:                                      ; preds = %do.end.48
  %85 = load i64, i64* %llu, align 8, !dbg !4685, !tbaa !4575
  %call80 = call %struct._object* @PyLong_FromUnsignedLongLong(i64 %85), !dbg !4686
  store %struct._object* %call80, %struct._object** %retval, !dbg !4687
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4687

convert_zd:                                       ; preds = %do.end.53
  %86 = load i64, i64* %zd, align 8, !dbg !4688, !tbaa !1603
  %call81 = call %struct._object* @PyLong_FromSsize_t(i64 %86), !dbg !4689
  store %struct._object* %call81, %struct._object** %retval, !dbg !4690
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4690

convert_zu:                                       ; preds = %do.end.58
  %87 = load i64, i64* %zu, align 8, !dbg !4691, !tbaa !1603
  %call82 = call %struct._object* @PyLong_FromSize_t(i64 %87), !dbg !4692
  store %struct._object* %call82, %struct._object** %retval, !dbg !4693
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4693

convert_double:                                   ; preds = %do.end.69, %do.end.64
  %88 = load double, double* %d, align 8, !dbg !4694, !tbaa !4636
  %call83 = call %struct._object* @PyFloat_FromDouble(double %88), !dbg !4695
  store %struct._object* %call83, %struct._object** %retval, !dbg !4696
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4696

convert_bool:                                     ; preds = %do.end.21
  %89 = load i64, i64* %ld, align 8, !dbg !4697, !tbaa !1603
  %call84 = call %struct._object* @PyBool_FromLong(i64 %89), !dbg !4698
  store %struct._object* %call84, %struct._object** %retval, !dbg !4699
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4699

convert_bytes:                                    ; preds = %sw.bb.70
  %90 = load i8*, i8** %ptr.addr, align 8, !dbg !4700, !tbaa !1534
  %call85 = call %struct._object* @PyBytes_FromStringAndSize(i8* %90, i64 1), !dbg !4701
  store %struct._object* %call85, %struct._object** %retval, !dbg !4702
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4702

convert_pointer:                                  ; preds = %do.end.75
  %91 = load i8*, i8** %p, align 8, !dbg !4703, !tbaa !1534
  %call86 = call %struct._object* @PyLong_FromVoidPtr(i8* %91), !dbg !4704
  store %struct._object* %call86, %struct._object** %retval, !dbg !4705
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4705

err_format:                                       ; preds = %sw.default
  %92 = load %struct._object*, %struct._object** @PyExc_NotImplementedError, align 8, !dbg !4706, !tbaa !1534
  %93 = load i8*, i8** %fmt.addr, align 8, !dbg !4707, !tbaa !1534
  %call87 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %92, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.22, i32 0, i32 0), i8* %93), !dbg !4708
  store %struct._object* null, %struct._object** %retval, !dbg !4709
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4709

cleanup:                                          ; preds = %err_format, %convert_pointer, %convert_bytes, %convert_bool, %convert_double, %convert_zu, %convert_zd, %convert_llu, %convert_lld, %convert_lu, %convert_ld, %convert_uc
  %94 = bitcast i8** %p to i8*, !dbg !4710
  call void @llvm.lifetime.end(i64 8, i8* %94) #3, !dbg !4710
  call void @llvm.lifetime.end(i64 1, i8* %uc) #3, !dbg !4710
  %95 = bitcast double* %d to i8*, !dbg !4710
  call void @llvm.lifetime.end(i64 8, i8* %95) #3, !dbg !4710
  %96 = bitcast i64* %zd to i8*, !dbg !4710
  call void @llvm.lifetime.end(i64 8, i8* %96) #3, !dbg !4710
  %97 = bitcast i64* %ld to i8*, !dbg !4710
  call void @llvm.lifetime.end(i64 8, i8* %97) #3, !dbg !4710
  %98 = bitcast i64* %lld to i8*, !dbg !4710
  call void @llvm.lifetime.end(i64 8, i8* %98) #3, !dbg !4710
  %99 = bitcast i64* %zu to i8*, !dbg !4710
  call void @llvm.lifetime.end(i64 8, i8* %99) #3, !dbg !4710
  %100 = bitcast i64* %lu to i8*, !dbg !4710
  call void @llvm.lifetime.end(i64 8, i8* %100) #3, !dbg !4710
  %101 = bitcast i64* %llu to i8*, !dbg !4710
  call void @llvm.lifetime.end(i64 8, i8* %101) #3, !dbg !4710
  %102 = load %struct._object*, %struct._object** %retval, !dbg !4710
  ret %struct._object* %102, !dbg !4710
}

declare %struct._object* @PyLong_FromLong(i64) #1

declare %struct._object* @PyLong_FromUnsignedLong(i64) #1

declare %struct._object* @PyLong_FromLongLong(i64) #1

declare %struct._object* @PyLong_FromUnsignedLongLong(i64) #1

declare %struct._object* @PyLong_FromSsize_t(i64) #1

declare %struct._object* @PyLong_FromSize_t(i64) #1

declare %struct._object* @PyFloat_FromDouble(double) #1

declare %struct._object* @PyBool_FromLong(i64) #1

declare %struct._object* @PyLong_FromVoidPtr(i8*) #1

; Function Attrs: nounwind uwtable
define internal %struct._object* @memory_subscript(%struct.PyMemoryViewObject* %self, %struct._object* %key) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyMemoryViewObject*, align 8
  %key.addr = alloca %struct._object*, align 8
  %view = alloca %struct.bufferinfo*, align 8
  %cleanup.dest.slot = alloca i32
  %fmt = alloca i8*, align 8
  %index = alloca i64, align 8
  %sliced = alloca %struct.PyMemoryViewObject*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PyMemoryViewObject* %self, %struct.PyMemoryViewObject** %self.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %self.addr, metadata !812, metadata !1538), !dbg !4711
  store %struct._object* %key, %struct._object** %key.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._object** %key.addr, metadata !813, metadata !1538), !dbg !4712
  %0 = bitcast %struct.bufferinfo** %view to i8*, !dbg !4713
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !4713
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %view, metadata !814, metadata !1538), !dbg !4714
  %1 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !4715, !tbaa !1534
  %view1 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %1, i32 0, i32 5, !dbg !4716
  store %struct.bufferinfo* %view1, %struct.bufferinfo** %view, align 8, !dbg !4717, !tbaa !1534
  %2 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !4718, !tbaa !1534
  %flags = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %2, i32 0, i32 3, !dbg !4720
  %3 = load i32, i32* %flags, align 4, !dbg !4720, !tbaa !1894
  %and = and i32 %3, 1, !dbg !4721
  %tobool = icmp ne i32 %and, 0, !dbg !4721
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !4722

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !4723, !tbaa !1534
  %mbuf = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %4, i32 0, i32 1, !dbg !4725
  %5 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !4725, !tbaa !1805
  %flags2 = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %5, i32 0, i32 1, !dbg !4726
  %6 = load i32, i32* %flags2, align 4, !dbg !4726, !tbaa !1545
  %and3 = and i32 %6, 1, !dbg !4727
  %tobool4 = icmp ne i32 %and3, 0, !dbg !4727
  br i1 %tobool4, label %if.then, label %if.end, !dbg !4728

if.then:                                          ; preds = %lor.lhs.false, %entry
  %7 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4729, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2, i32 0, i32 0)), !dbg !4733
  store %struct._object* null, %struct._object** %retval, !dbg !4734
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.63, !dbg !4734

if.end:                                           ; preds = %lor.lhs.false
  %8 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !4735, !tbaa !1534
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %8, i32 0, i32 5, !dbg !4736
  %9 = load i32, i32* %ndim, align 4, !dbg !4736, !tbaa !1771
  %cmp = icmp eq i32 %9, 0, !dbg !4737
  br i1 %cmp, label %if.then.5, label %if.end.17, !dbg !4738

if.then.5:                                        ; preds = %if.end
  %10 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !4739, !tbaa !1534
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !4740
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4740, !tbaa !1650
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 19, !dbg !4741
  %12 = load i64, i64* %tp_flags, align 8, !dbg !4741, !tbaa !4742
  %and6 = and i64 %12, 67108864, !dbg !4743
  %cmp7 = icmp ne i64 %and6, 0, !dbg !4744
  br i1 %cmp7, label %land.lhs.true, label %if.else, !dbg !4745

land.lhs.true:                                    ; preds = %if.then.5
  %13 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !4746, !tbaa !1534
  %14 = bitcast %struct._object* %13 to %struct.PyVarObject*, !dbg !4748
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %14, i32 0, i32 1, !dbg !4749
  %15 = load i64, i64* %ob_size, align 8, !dbg !4749, !tbaa !4750
  %cmp8 = icmp eq i64 %15, 0, !dbg !4751
  br i1 %cmp8, label %if.then.9, label %if.else, !dbg !4752

if.then.9:                                        ; preds = %land.lhs.true
  %16 = bitcast i8** %fmt to i8*, !dbg !4753
  call void @llvm.lifetime.start(i64 8, i8* %16) #3, !dbg !4753
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !815, metadata !1538), !dbg !4754
  %17 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !4755, !tbaa !1534
  %call = call i8* @adjust_fmt(%struct.bufferinfo* %17), !dbg !4756
  store i8* %call, i8** %fmt, align 8, !dbg !4754, !tbaa !1534
  %18 = load i8*, i8** %fmt, align 8, !dbg !4757, !tbaa !1534
  %cmp10 = icmp eq i8* %18, null, !dbg !4759
  br i1 %cmp10, label %if.then.11, label %if.end.12, !dbg !4760

if.then.11:                                       ; preds = %if.then.9
  store %struct._object* null, %struct._object** %retval, !dbg !4761
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4761

if.end.12:                                        ; preds = %if.then.9
  %19 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !4762, !tbaa !1534
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %19, i32 0, i32 0, !dbg !4763
  %20 = load i8*, i8** %buf, align 8, !dbg !4763, !tbaa !1826
  %21 = load i8*, i8** %fmt, align 8, !dbg !4764, !tbaa !1534
  %call13 = call %struct._object* @unpack_single(i8* %20, i8* %21), !dbg !4765
  store %struct._object* %call13, %struct._object** %retval, !dbg !4766
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4766

cleanup:                                          ; preds = %if.end.12, %if.then.11
  %22 = bitcast i8** %fmt to i8*, !dbg !4767
  call void @llvm.lifetime.end(i64 8, i8* %22) #3, !dbg !4767
  br label %cleanup.63

if.else:                                          ; preds = %land.lhs.true, %if.then.5
  %23 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !4768, !tbaa !1534
  %cmp14 = icmp eq %struct._object* %23, @_Py_EllipsisObject, !dbg !4770
  br i1 %cmp14, label %if.then.15, label %if.else.16, !dbg !4771

if.then.15:                                       ; preds = %if.else
  %24 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !4772, !tbaa !1534
  %25 = bitcast %struct.PyMemoryViewObject* %24 to %struct._object*, !dbg !4774
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 0, !dbg !4775
  %26 = load i64, i64* %ob_refcnt, align 8, !dbg !4776, !tbaa !1642
  %inc = add i64 %26, 1, !dbg !4776
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !4776, !tbaa !1642
  %27 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !4777, !tbaa !1534
  %28 = bitcast %struct.PyMemoryViewObject* %27 to %struct._object*, !dbg !4778
  store %struct._object* %28, %struct._object** %retval, !dbg !4779
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.63, !dbg !4779

if.else.16:                                       ; preds = %if.else
  %29 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !4780, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %29, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.18, i32 0, i32 0)), !dbg !4782
  store %struct._object* null, %struct._object** %retval, !dbg !4783
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.63, !dbg !4783

if.end.17:                                        ; preds = %if.end
  %30 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !4784, !tbaa !1534
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %30, i32 0, i32 1, !dbg !4785
  %31 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !4785, !tbaa !1650
  %tp_as_number = getelementptr inbounds %struct._typeobject, %struct._typeobject* %31, i32 0, i32 10, !dbg !4786
  %32 = load %struct.PyNumberMethods*, %struct.PyNumberMethods** %tp_as_number, align 8, !dbg !4786, !tbaa !4787
  %cmp19 = icmp ne %struct.PyNumberMethods* %32, null, !dbg !4788
  br i1 %cmp19, label %land.lhs.true.20, label %if.else.34, !dbg !4789

land.lhs.true.20:                                 ; preds = %if.end.17
  %33 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !4790, !tbaa !1534
  %ob_type21 = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 1, !dbg !4792
  %34 = load %struct._typeobject*, %struct._typeobject** %ob_type21, align 8, !dbg !4792, !tbaa !1650
  %tp_as_number22 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %34, i32 0, i32 10, !dbg !4793
  %35 = load %struct.PyNumberMethods*, %struct.PyNumberMethods** %tp_as_number22, align 8, !dbg !4793, !tbaa !4787
  %nb_index = getelementptr inbounds %struct.PyNumberMethods, %struct.PyNumberMethods* %35, i32 0, i32 33, !dbg !4794
  %36 = load %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)** %nb_index, align 8, !dbg !4794, !tbaa !4795
  %cmp23 = icmp ne %struct._object* (%struct._object*)* %36, null, !dbg !4797
  br i1 %cmp23, label %if.then.24, label %if.else.34, !dbg !4798

if.then.24:                                       ; preds = %land.lhs.true.20
  %37 = bitcast i64* %index to i8*, !dbg !4799
  call void @llvm.lifetime.start(i64 8, i8* %37) #3, !dbg !4799
  call void @llvm.dbg.declare(metadata i64* %index, metadata !820, metadata !1538), !dbg !4800
  %38 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !4801, !tbaa !1534
  %39 = load %struct._object*, %struct._object** @PyExc_IndexError, align 8, !dbg !4802, !tbaa !1534
  %call25 = call i64 @PyNumber_AsSsize_t(%struct._object* %38, %struct._object* %39), !dbg !4803
  store i64 %call25, i64* %index, align 8, !dbg !4804, !tbaa !1603
  %40 = load i64, i64* %index, align 8, !dbg !4805, !tbaa !1603
  %cmp26 = icmp eq i64 %40, -1, !dbg !4807
  br i1 %cmp26, label %land.lhs.true.27, label %if.end.31, !dbg !4808

land.lhs.true.27:                                 ; preds = %if.then.24
  %call28 = call %struct._object* @PyErr_Occurred(), !dbg !4809
  %tobool29 = icmp ne %struct._object* %call28, null, !dbg !4809
  br i1 %tobool29, label %if.then.30, label %if.end.31, !dbg !4811

if.then.30:                                       ; preds = %land.lhs.true.27
  store %struct._object* null, %struct._object** %retval, !dbg !4812
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.33, !dbg !4812

if.end.31:                                        ; preds = %land.lhs.true.27, %if.then.24
  %41 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !4813, !tbaa !1534
  %42 = load i64, i64* %index, align 8, !dbg !4814, !tbaa !1603
  %call32 = call %struct._object* @memory_item(%struct.PyMemoryViewObject* %41, i64 %42), !dbg !4815
  store %struct._object* %call32, %struct._object** %retval, !dbg !4816
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.33, !dbg !4816

cleanup.33:                                       ; preds = %if.end.31, %if.then.30
  %43 = bitcast i64* %index to i8*, !dbg !4817
  call void @llvm.lifetime.end(i64 8, i8* %43) #3, !dbg !4817
  br label %cleanup.63

if.else.34:                                       ; preds = %land.lhs.true.20, %if.end.17
  %44 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !4818, !tbaa !1534
  %ob_type35 = getelementptr inbounds %struct._object, %struct._object* %44, i32 0, i32 1, !dbg !4819
  %45 = load %struct._typeobject*, %struct._typeobject** %ob_type35, align 8, !dbg !4819, !tbaa !1650
  %cmp36 = icmp eq %struct._typeobject* %45, @PySlice_Type, !dbg !4820
  br i1 %cmp36, label %if.then.37, label %if.else.56, !dbg !4821

if.then.37:                                       ; preds = %if.else.34
  %46 = bitcast %struct.PyMemoryViewObject** %sliced to i8*, !dbg !4822
  call void @llvm.lifetime.start(i64 8, i8* %46) #3, !dbg !4822
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %sliced, metadata !823, metadata !1538), !dbg !4823
  %47 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !4824, !tbaa !1534
  %mbuf38 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %47, i32 0, i32 1, !dbg !4825
  %48 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf38, align 8, !dbg !4825, !tbaa !1805
  %49 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !4826, !tbaa !1534
  %call39 = call %struct._object* @mbuf_add_view(%struct._PyManagedBufferObject* %48, %struct.bufferinfo* %49), !dbg !4827
  %50 = bitcast %struct._object* %call39 to %struct.PyMemoryViewObject*, !dbg !4828
  store %struct.PyMemoryViewObject* %50, %struct.PyMemoryViewObject** %sliced, align 8, !dbg !4829, !tbaa !1534
  %51 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %sliced, align 8, !dbg !4830, !tbaa !1534
  %cmp40 = icmp eq %struct.PyMemoryViewObject* %51, null, !dbg !4832
  br i1 %cmp40, label %if.then.41, label %if.end.42, !dbg !4833

if.then.41:                                       ; preds = %if.then.37
  store %struct._object* null, %struct._object** %retval, !dbg !4834
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.55, !dbg !4834

if.end.42:                                        ; preds = %if.then.37
  %52 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %sliced, align 8, !dbg !4835, !tbaa !1534
  %view43 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %52, i32 0, i32 5, !dbg !4836
  %53 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !4837, !tbaa !1534
  %call44 = call i32 @init_slice(%struct.bufferinfo* %view43, %struct._object* %53, i32 0), !dbg !4838
  %cmp45 = icmp slt i32 %call44, 0, !dbg !4839
  br i1 %cmp45, label %if.then.46, label %if.end.53, !dbg !4840

if.then.46:                                       ; preds = %if.end.42
  br label %do.body, !dbg !4841

do.body:                                          ; preds = %if.then.46
  %54 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4842
  call void @llvm.lifetime.start(i64 8, i8* %54) #3, !dbg !4842
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !826, metadata !1538), !dbg !4844
  %55 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %sliced, align 8, !dbg !4845, !tbaa !1534
  %56 = bitcast %struct.PyMemoryViewObject* %55 to %struct._object*, !dbg !4846
  store %struct._object* %56, %struct._object** %_py_decref_tmp, align 8, !dbg !4844, !tbaa !1534
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4847, !tbaa !1534
  %ob_refcnt47 = getelementptr inbounds %struct._object, %struct._object* %57, i32 0, i32 0, !dbg !4849
  %58 = load i64, i64* %ob_refcnt47, align 8, !dbg !4850, !tbaa !1642
  %dec = add i64 %58, -1, !dbg !4850
  store i64 %dec, i64* %ob_refcnt47, align 8, !dbg !4850, !tbaa !1642
  %cmp48 = icmp ne i64 %dec, 0, !dbg !4851
  br i1 %cmp48, label %if.then.49, label %if.else.50, !dbg !4852

if.then.49:                                       ; preds = %do.body
  br label %if.end.52, !dbg !4853

if.else.50:                                       ; preds = %do.body
  %59 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4855, !tbaa !1534
  %ob_type51 = getelementptr inbounds %struct._object, %struct._object* %59, i32 0, i32 1, !dbg !4857
  %60 = load %struct._typeobject*, %struct._typeobject** %ob_type51, align 8, !dbg !4857, !tbaa !1650
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %60, i32 0, i32 4, !dbg !4858
  %61 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4858, !tbaa !1652
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4859, !tbaa !1534
  call void %61(%struct._object* %62), !dbg !4860
  br label %if.end.52

if.end.52:                                        ; preds = %if.else.50, %if.then.49
  %63 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4861
  call void @llvm.lifetime.end(i64 8, i8* %63) #3, !dbg !4861
  br label %do.cond, !dbg !4863

do.cond:                                          ; preds = %if.end.52
  br label %do.end, !dbg !4864

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !4866
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.55, !dbg !4866

if.end.53:                                        ; preds = %if.end.42
  %64 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %sliced, align 8, !dbg !4867, !tbaa !1534
  %view54 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %64, i32 0, i32 5, !dbg !4868
  call void @init_len(%struct.bufferinfo* %view54), !dbg !4869
  %65 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %sliced, align 8, !dbg !4870, !tbaa !1534
  call void @init_flags(%struct.PyMemoryViewObject* %65), !dbg !4871
  %66 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %sliced, align 8, !dbg !4872, !tbaa !1534
  %67 = bitcast %struct.PyMemoryViewObject* %66 to %struct._object*, !dbg !4873
  store %struct._object* %67, %struct._object** %retval, !dbg !4874
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.55, !dbg !4874

cleanup.55:                                       ; preds = %if.end.53, %do.end, %if.then.41
  %68 = bitcast %struct.PyMemoryViewObject** %sliced to i8*, !dbg !4875
  call void @llvm.lifetime.end(i64 8, i8* %68) #3, !dbg !4875
  br label %cleanup.63

if.else.56:                                       ; preds = %if.else.34
  %69 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !4876, !tbaa !1534
  %call57 = call i32 @is_multislice(%struct._object* %69), !dbg !4878
  %tobool58 = icmp ne i32 %call57, 0, !dbg !4878
  br i1 %tobool58, label %if.then.59, label %if.end.60, !dbg !4879

if.then.59:                                       ; preds = %if.else.56
  %70 = load %struct._object*, %struct._object** @PyExc_NotImplementedError, align 8, !dbg !4880, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %70, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.23, i32 0, i32 0)), !dbg !4882
  store %struct._object* null, %struct._object** %retval, !dbg !4883
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.63, !dbg !4883

if.end.60:                                        ; preds = %if.else.56
  br label %if.end.61

if.end.61:                                        ; preds = %if.end.60
  br label %if.end.62

if.end.62:                                        ; preds = %if.end.61
  %71 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !4884, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %71, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0)), !dbg !4885
  store %struct._object* null, %struct._object** %retval, !dbg !4886
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.63, !dbg !4886

cleanup.63:                                       ; preds = %if.end.62, %if.then.59, %cleanup.55, %cleanup.33, %if.else.16, %if.then.15, %cleanup, %if.then
  %72 = bitcast %struct.bufferinfo** %view to i8*, !dbg !4887
  call void @llvm.lifetime.end(i64 8, i8* %72) #3, !dbg !4887
  %73 = load %struct._object*, %struct._object** %retval, !dbg !4887
  ret %struct._object* %73, !dbg !4887
}

; Function Attrs: nounwind uwtable
define internal i32 @memory_ass_sub(%struct.PyMemoryViewObject* %self, %struct._object* %key, %struct._object* %value) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.PyMemoryViewObject*, align 8
  %key.addr = alloca %struct._object*, align 8
  %value.addr = alloca %struct._object*, align 8
  %view = alloca %struct.bufferinfo*, align 8
  %src = alloca %struct.bufferinfo, align 8
  %fmt = alloca i8*, align 8
  %ptr = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %index = alloca i64, align 8
  %dest = alloca %struct.bufferinfo, align 8
  %arrays = alloca [3 x i64], align 16
  %ret = alloca i32, align 4
  store %struct.PyMemoryViewObject* %self, %struct.PyMemoryViewObject** %self.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %self.addr, metadata !862, metadata !1538), !dbg !4888
  store %struct._object* %key, %struct._object** %key.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._object** %key.addr, metadata !863, metadata !1538), !dbg !4889
  store %struct._object* %value, %struct._object** %value.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._object** %value.addr, metadata !864, metadata !1538), !dbg !4890
  %0 = bitcast %struct.bufferinfo** %view to i8*, !dbg !4891
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !4891
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %view, metadata !865, metadata !1538), !dbg !4892
  %1 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !4893, !tbaa !1534
  %view1 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %1, i32 0, i32 5, !dbg !4894
  store %struct.bufferinfo* %view1, %struct.bufferinfo** %view, align 8, !dbg !4892, !tbaa !1534
  %2 = bitcast %struct.bufferinfo* %src to i8*, !dbg !4895
  call void @llvm.lifetime.start(i64 80, i8* %2) #3, !dbg !4895
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %src, metadata !866, metadata !1538), !dbg !4896
  %3 = bitcast i8** %fmt to i8*, !dbg !4897
  call void @llvm.lifetime.start(i64 8, i8* %3) #3, !dbg !4897
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !867, metadata !1538), !dbg !4898
  %4 = bitcast i8** %ptr to i8*, !dbg !4899
  call void @llvm.lifetime.start(i64 8, i8* %4) #3, !dbg !4899
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !868, metadata !1538), !dbg !4900
  %5 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !4901, !tbaa !1534
  %flags = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %5, i32 0, i32 3, !dbg !4903
  %6 = load i32, i32* %flags, align 4, !dbg !4903, !tbaa !1894
  %and = and i32 %6, 1, !dbg !4904
  %tobool = icmp ne i32 %and, 0, !dbg !4904
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !4905

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !4906, !tbaa !1534
  %mbuf = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %7, i32 0, i32 1, !dbg !4908
  %8 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !4908, !tbaa !1805
  %flags2 = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %8, i32 0, i32 1, !dbg !4909
  %9 = load i32, i32* %flags2, align 4, !dbg !4909, !tbaa !1545
  %and3 = and i32 %9, 1, !dbg !4910
  %tobool4 = icmp ne i32 %and3, 0, !dbg !4910
  br i1 %tobool4, label %if.then, label %if.end, !dbg !4911

if.then:                                          ; preds = %lor.lhs.false, %entry
  %10 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4912, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %10, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2, i32 0, i32 0)), !dbg !4916
  store i32 -1, i32* %retval, !dbg !4917
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.94, !dbg !4917

if.end:                                           ; preds = %lor.lhs.false
  %11 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !4918, !tbaa !1534
  %call = call i8* @adjust_fmt(%struct.bufferinfo* %11), !dbg !4919
  store i8* %call, i8** %fmt, align 8, !dbg !4920, !tbaa !1534
  %12 = load i8*, i8** %fmt, align 8, !dbg !4921, !tbaa !1534
  %cmp = icmp eq i8* %12, null, !dbg !4923
  br i1 %cmp, label %if.then.5, label %if.end.6, !dbg !4924

if.then.5:                                        ; preds = %if.end
  store i32 -1, i32* %retval, !dbg !4925
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.94, !dbg !4925

if.end.6:                                         ; preds = %if.end
  %13 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !4926, !tbaa !1534
  %readonly = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %13, i32 0, i32 4, !dbg !4928
  %14 = load i32, i32* %readonly, align 4, !dbg !4928, !tbaa !2059
  %tobool7 = icmp ne i32 %14, 0, !dbg !4926
  br i1 %tobool7, label %if.then.8, label %if.end.9, !dbg !4929

if.then.8:                                        ; preds = %if.end.6
  %15 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !4930, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %15, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.25, i32 0, i32 0)), !dbg !4932
  store i32 -1, i32* %retval, !dbg !4933
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.94, !dbg !4933

if.end.9:                                         ; preds = %if.end.6
  %16 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !4934, !tbaa !1534
  %cmp10 = icmp eq %struct._object* %16, null, !dbg !4936
  br i1 %cmp10, label %if.then.11, label %if.end.12, !dbg !4937

if.then.11:                                       ; preds = %if.end.9
  %17 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !4938, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %17, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.26, i32 0, i32 0)), !dbg !4940
  store i32 -1, i32* %retval, !dbg !4941
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.94, !dbg !4941

if.end.12:                                        ; preds = %if.end.9
  %18 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !4942, !tbaa !1534
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %18, i32 0, i32 5, !dbg !4944
  %19 = load i32, i32* %ndim, align 4, !dbg !4944, !tbaa !1771
  %cmp13 = icmp eq i32 %19, 0, !dbg !4945
  br i1 %cmp13, label %if.then.14, label %if.end.22, !dbg !4946

if.then.14:                                       ; preds = %if.end.12
  %20 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !4947, !tbaa !1534
  %cmp15 = icmp eq %struct._object* %20, @_Py_EllipsisObject, !dbg !4950
  br i1 %cmp15, label %if.then.20, label %lor.lhs.false.16, !dbg !4951

lor.lhs.false.16:                                 ; preds = %if.then.14
  %21 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !4952, !tbaa !1534
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 1, !dbg !4953
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4953, !tbaa !1650
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %22, i32 0, i32 19, !dbg !4954
  %23 = load i64, i64* %tp_flags, align 8, !dbg !4954, !tbaa !4742
  %and17 = and i64 %23, 67108864, !dbg !4955
  %cmp18 = icmp ne i64 %and17, 0, !dbg !4956
  br i1 %cmp18, label %land.lhs.true, label %if.else, !dbg !4957

land.lhs.true:                                    ; preds = %lor.lhs.false.16
  %24 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !4958, !tbaa !1534
  %25 = bitcast %struct._object* %24 to %struct.PyVarObject*, !dbg !4960
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %25, i32 0, i32 1, !dbg !4961
  %26 = load i64, i64* %ob_size, align 8, !dbg !4961, !tbaa !4750
  %cmp19 = icmp eq i64 %26, 0, !dbg !4962
  br i1 %cmp19, label %if.then.20, label %if.else, !dbg !4963

if.then.20:                                       ; preds = %land.lhs.true, %if.then.14
  %27 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !4964, !tbaa !1534
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %27, i32 0, i32 0, !dbg !4966
  %28 = load i8*, i8** %buf, align 8, !dbg !4966, !tbaa !1826
  store i8* %28, i8** %ptr, align 8, !dbg !4967, !tbaa !1534
  %29 = load i8*, i8** %ptr, align 8, !dbg !4968, !tbaa !1534
  %30 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !4969, !tbaa !1534
  %31 = load i8*, i8** %fmt, align 8, !dbg !4970, !tbaa !1534
  %call21 = call i32 @pack_single(i8* %29, %struct._object* %30, i8* %31), !dbg !4971
  store i32 %call21, i32* %retval, !dbg !4972
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.94, !dbg !4972

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false.16
  %32 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !4973, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %32, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.18, i32 0, i32 0)), !dbg !4975
  store i32 -1, i32* %retval, !dbg !4976
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.94, !dbg !4976

if.end.22:                                        ; preds = %if.end.12
  %33 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !4977, !tbaa !1534
  %ndim23 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %33, i32 0, i32 5, !dbg !4979
  %34 = load i32, i32* %ndim23, align 4, !dbg !4979, !tbaa !1771
  %cmp24 = icmp ne i32 %34, 1, !dbg !4980
  br i1 %cmp24, label %if.then.25, label %if.end.26, !dbg !4981

if.then.25:                                       ; preds = %if.end.22
  %35 = load %struct._object*, %struct._object** @PyExc_NotImplementedError, align 8, !dbg !4982, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %35, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.27, i32 0, i32 0)), !dbg !4984
  store i32 -1, i32* %retval, !dbg !4985
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.94, !dbg !4985

if.end.26:                                        ; preds = %if.end.22
  %36 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !4986, !tbaa !1534
  %ob_type27 = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 1, !dbg !4987
  %37 = load %struct._typeobject*, %struct._typeobject** %ob_type27, align 8, !dbg !4987, !tbaa !1650
  %tp_as_number = getelementptr inbounds %struct._typeobject, %struct._typeobject* %37, i32 0, i32 10, !dbg !4988
  %38 = load %struct.PyNumberMethods*, %struct.PyNumberMethods** %tp_as_number, align 8, !dbg !4988, !tbaa !4787
  %cmp28 = icmp ne %struct.PyNumberMethods* %38, null, !dbg !4989
  br i1 %cmp28, label %land.lhs.true.29, label %if.end.46, !dbg !4990

land.lhs.true.29:                                 ; preds = %if.end.26
  %39 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !4991, !tbaa !1534
  %ob_type30 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 1, !dbg !4993
  %40 = load %struct._typeobject*, %struct._typeobject** %ob_type30, align 8, !dbg !4993, !tbaa !1650
  %tp_as_number31 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %40, i32 0, i32 10, !dbg !4994
  %41 = load %struct.PyNumberMethods*, %struct.PyNumberMethods** %tp_as_number31, align 8, !dbg !4994, !tbaa !4787
  %nb_index = getelementptr inbounds %struct.PyNumberMethods, %struct.PyNumberMethods* %41, i32 0, i32 33, !dbg !4995
  %42 = load %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)** %nb_index, align 8, !dbg !4995, !tbaa !4795
  %cmp32 = icmp ne %struct._object* (%struct._object*)* %42, null, !dbg !4996
  br i1 %cmp32, label %if.then.33, label %if.end.46, !dbg !4997

if.then.33:                                       ; preds = %land.lhs.true.29
  %43 = bitcast i64* %index to i8*, !dbg !4998
  call void @llvm.lifetime.start(i64 8, i8* %43) #3, !dbg !4998
  call void @llvm.dbg.declare(metadata i64* %index, metadata !869, metadata !1538), !dbg !4999
  %44 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !5000, !tbaa !1534
  %45 = load %struct._object*, %struct._object** @PyExc_IndexError, align 8, !dbg !5001, !tbaa !1534
  %call34 = call i64 @PyNumber_AsSsize_t(%struct._object* %44, %struct._object* %45), !dbg !5002
  store i64 %call34, i64* %index, align 8, !dbg !4999, !tbaa !1603
  %46 = load i64, i64* %index, align 8, !dbg !5003, !tbaa !1603
  %cmp35 = icmp eq i64 %46, -1, !dbg !5005
  br i1 %cmp35, label %land.lhs.true.36, label %if.end.40, !dbg !5006

land.lhs.true.36:                                 ; preds = %if.then.33
  %call37 = call %struct._object* @PyErr_Occurred(), !dbg !5007
  %tobool38 = icmp ne %struct._object* %call37, null, !dbg !5007
  br i1 %tobool38, label %if.then.39, label %if.end.40, !dbg !5009

if.then.39:                                       ; preds = %land.lhs.true.36
  store i32 -1, i32* %retval, !dbg !5010
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5010

if.end.40:                                        ; preds = %land.lhs.true.36, %if.then.33
  %47 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !5011, !tbaa !1534
  %48 = load i64, i64* %index, align 8, !dbg !5012, !tbaa !1603
  %call41 = call i8* @ptr_from_index(%struct.bufferinfo* %47, i64 %48), !dbg !5013
  store i8* %call41, i8** %ptr, align 8, !dbg !5014, !tbaa !1534
  %49 = load i8*, i8** %ptr, align 8, !dbg !5015, !tbaa !1534
  %cmp42 = icmp eq i8* %49, null, !dbg !5017
  br i1 %cmp42, label %if.then.43, label %if.end.44, !dbg !5018

if.then.43:                                       ; preds = %if.end.40
  store i32 -1, i32* %retval, !dbg !5019
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5019

if.end.44:                                        ; preds = %if.end.40
  %50 = load i8*, i8** %ptr, align 8, !dbg !5020, !tbaa !1534
  %51 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !5021, !tbaa !1534
  %52 = load i8*, i8** %fmt, align 8, !dbg !5022, !tbaa !1534
  %call45 = call i32 @pack_single(i8* %50, %struct._object* %51, i8* %52), !dbg !5023
  store i32 %call45, i32* %retval, !dbg !5024
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5024

cleanup:                                          ; preds = %if.end.44, %if.then.43, %if.then.39
  %53 = bitcast i64* %index to i8*, !dbg !5025
  call void @llvm.lifetime.end(i64 8, i8* %53) #3, !dbg !5025
  br label %cleanup.94

if.end.46:                                        ; preds = %land.lhs.true.29, %if.end.26
  %54 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !5026, !tbaa !1534
  %ob_type47 = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 1, !dbg !5027
  %55 = load %struct._typeobject*, %struct._typeobject** %ob_type47, align 8, !dbg !5027, !tbaa !1650
  %cmp48 = icmp eq %struct._typeobject* %55, @PySlice_Type, !dbg !5028
  br i1 %cmp48, label %land.lhs.true.49, label %if.else.85, !dbg !5029

land.lhs.true.49:                                 ; preds = %if.end.46
  %56 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !5030, !tbaa !1534
  %ndim50 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %56, i32 0, i32 5, !dbg !5032
  %57 = load i32, i32* %ndim50, align 4, !dbg !5032, !tbaa !1771
  %cmp51 = icmp eq i32 %57, 1, !dbg !5033
  br i1 %cmp51, label %if.then.52, label %if.else.85, !dbg !5034

if.then.52:                                       ; preds = %land.lhs.true.49
  %58 = bitcast %struct.bufferinfo* %dest to i8*, !dbg !5035
  call void @llvm.lifetime.start(i64 80, i8* %58) #3, !dbg !5035
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %dest, metadata !872, metadata !1538), !dbg !5036
  %59 = bitcast [3 x i64]* %arrays to i8*, !dbg !5037
  call void @llvm.lifetime.start(i64 24, i8* %59) #3, !dbg !5037
  call void @llvm.dbg.declare(metadata [3 x i64]* %arrays, metadata !875, metadata !1538), !dbg !5038
  %60 = bitcast i32* %ret to i8*, !dbg !5039
  call void @llvm.lifetime.start(i64 4, i8* %60) #3, !dbg !5039
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !877, metadata !1538), !dbg !5040
  store i32 -1, i32* %ret, align 4, !dbg !5040, !tbaa !1580
  %61 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !5041, !tbaa !1534
  %call53 = call i32 @PyObject_GetBuffer(%struct._object* %61, %struct.bufferinfo* %src, i32 284), !dbg !5043
  %cmp54 = icmp slt i32 %call53, 0, !dbg !5044
  br i1 %cmp54, label %if.then.55, label %if.end.56, !dbg !5045

if.then.55:                                       ; preds = %if.then.52
  %62 = load i32, i32* %ret, align 4, !dbg !5046, !tbaa !1580
  store i32 %62, i32* %retval, !dbg !5047
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.82, !dbg !5047

if.end.56:                                        ; preds = %if.then.52
  %63 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !5048, !tbaa !1534
  %64 = bitcast %struct.bufferinfo* %dest to i8*, !dbg !5049
  %65 = bitcast %struct.bufferinfo* %63 to i8*, !dbg !5049
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %64, i8* %65, i64 80, i32 8, i1 false), !dbg !5049, !tbaa.struct !1844
  %arrayidx = getelementptr [3 x i64], [3 x i64]* %arrays, i32 0, i64 0, !dbg !5050
  %shape = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %dest, i32 0, i32 7, !dbg !5051
  store i64* %arrayidx, i64** %shape, align 8, !dbg !5052, !tbaa !2308
  %66 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !5053, !tbaa !1534
  %shape57 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %66, i32 0, i32 7, !dbg !5054
  %67 = load i64*, i64** %shape57, align 8, !dbg !5054, !tbaa !2308
  %arrayidx58 = getelementptr i64, i64* %67, i64 0, !dbg !5053
  %68 = load i64, i64* %arrayidx58, align 8, !dbg !5053, !tbaa !1603
  %shape59 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %dest, i32 0, i32 7, !dbg !5055
  %69 = load i64*, i64** %shape59, align 8, !dbg !5055, !tbaa !2308
  %arrayidx60 = getelementptr i64, i64* %69, i64 0, !dbg !5056
  store i64 %68, i64* %arrayidx60, align 8, !dbg !5057, !tbaa !1603
  %arrayidx61 = getelementptr [3 x i64], [3 x i64]* %arrays, i32 0, i64 1, !dbg !5058
  %strides = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %dest, i32 0, i32 8, !dbg !5059
  store i64* %arrayidx61, i64** %strides, align 8, !dbg !5060, !tbaa !2541
  %70 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !5061, !tbaa !1534
  %strides62 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %70, i32 0, i32 8, !dbg !5062
  %71 = load i64*, i64** %strides62, align 8, !dbg !5062, !tbaa !2541
  %arrayidx63 = getelementptr i64, i64* %71, i64 0, !dbg !5061
  %72 = load i64, i64* %arrayidx63, align 8, !dbg !5061, !tbaa !1603
  %strides64 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %dest, i32 0, i32 8, !dbg !5063
  %73 = load i64*, i64** %strides64, align 8, !dbg !5063, !tbaa !2541
  %arrayidx65 = getelementptr i64, i64* %73, i64 0, !dbg !5064
  store i64 %72, i64* %arrayidx65, align 8, !dbg !5065, !tbaa !1603
  %74 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !5066, !tbaa !1534
  %suboffsets = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %74, i32 0, i32 9, !dbg !5068
  %75 = load i64*, i64** %suboffsets, align 8, !dbg !5068, !tbaa !2334
  %tobool66 = icmp ne i64* %75, null, !dbg !5066
  br i1 %tobool66, label %if.then.67, label %if.end.74, !dbg !5069

if.then.67:                                       ; preds = %if.end.56
  %arrayidx68 = getelementptr [3 x i64], [3 x i64]* %arrays, i32 0, i64 2, !dbg !5070
  %suboffsets69 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %dest, i32 0, i32 9, !dbg !5072
  store i64* %arrayidx68, i64** %suboffsets69, align 8, !dbg !5073, !tbaa !2334
  %76 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !5074, !tbaa !1534
  %suboffsets70 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %76, i32 0, i32 9, !dbg !5075
  %77 = load i64*, i64** %suboffsets70, align 8, !dbg !5075, !tbaa !2334
  %arrayidx71 = getelementptr i64, i64* %77, i64 0, !dbg !5074
  %78 = load i64, i64* %arrayidx71, align 8, !dbg !5074, !tbaa !1603
  %suboffsets72 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %dest, i32 0, i32 9, !dbg !5076
  %79 = load i64*, i64** %suboffsets72, align 8, !dbg !5076, !tbaa !2334
  %arrayidx73 = getelementptr i64, i64* %79, i64 0, !dbg !5077
  store i64 %78, i64* %arrayidx73, align 8, !dbg !5078, !tbaa !1603
  br label %if.end.74, !dbg !5079

if.end.74:                                        ; preds = %if.then.67, %if.end.56
  %80 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !5080, !tbaa !1534
  %call75 = call i32 @init_slice(%struct.bufferinfo* %dest, %struct._object* %80, i32 0), !dbg !5082
  %cmp76 = icmp slt i32 %call75, 0, !dbg !5083
  br i1 %cmp76, label %if.then.77, label %if.end.78, !dbg !5084

if.then.77:                                       ; preds = %if.end.74
  br label %end_block, !dbg !5085

if.end.78:                                        ; preds = %if.end.74
  %shape79 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %dest, i32 0, i32 7, !dbg !5086
  %81 = load i64*, i64** %shape79, align 8, !dbg !5086, !tbaa !2308
  %arrayidx80 = getelementptr i64, i64* %81, i64 0, !dbg !5087
  %82 = load i64, i64* %arrayidx80, align 8, !dbg !5087, !tbaa !1603
  %itemsize = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %dest, i32 0, i32 3, !dbg !5088
  %83 = load i64, i64* %itemsize, align 8, !dbg !5088, !tbaa !2289
  %mul = mul i64 %82, %83, !dbg !5089
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %dest, i32 0, i32 2, !dbg !5090
  store i64 %mul, i64* %len, align 8, !dbg !5091, !tbaa !2175
  %call81 = call i32 @copy_single(%struct.bufferinfo* %dest, %struct.bufferinfo* %src), !dbg !5092
  store i32 %call81, i32* %ret, align 4, !dbg !5093, !tbaa !1580
  br label %end_block, !dbg !5094

end_block:                                        ; preds = %if.end.78, %if.then.77
  call void @PyBuffer_Release(%struct.bufferinfo* %src), !dbg !5095
  %84 = load i32, i32* %ret, align 4, !dbg !5096, !tbaa !1580
  store i32 %84, i32* %retval, !dbg !5097
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.82, !dbg !5097

cleanup.82:                                       ; preds = %end_block, %if.then.55
  %85 = bitcast i32* %ret to i8*, !dbg !5098
  call void @llvm.lifetime.end(i64 4, i8* %85) #3, !dbg !5098
  %86 = bitcast [3 x i64]* %arrays to i8*, !dbg !5098
  call void @llvm.lifetime.end(i64 24, i8* %86) #3, !dbg !5098
  %87 = bitcast %struct.bufferinfo* %dest to i8*, !dbg !5098
  call void @llvm.lifetime.end(i64 80, i8* %87) #3, !dbg !5098
  br label %cleanup.94

if.else.85:                                       ; preds = %land.lhs.true.49, %if.end.46
  %88 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !5099, !tbaa !1534
  %ob_type86 = getelementptr inbounds %struct._object, %struct._object* %88, i32 0, i32 1, !dbg !5101
  %89 = load %struct._typeobject*, %struct._typeobject** %ob_type86, align 8, !dbg !5101, !tbaa !1650
  %cmp87 = icmp eq %struct._typeobject* %89, @PySlice_Type, !dbg !5102
  br i1 %cmp87, label %if.then.91, label %lor.lhs.false.88, !dbg !5103

lor.lhs.false.88:                                 ; preds = %if.else.85
  %90 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !5104, !tbaa !1534
  %call89 = call i32 @is_multislice(%struct._object* %90), !dbg !5106
  %tobool90 = icmp ne i32 %call89, 0, !dbg !5106
  br i1 %tobool90, label %if.then.91, label %if.end.92, !dbg !5107

if.then.91:                                       ; preds = %lor.lhs.false.88, %if.else.85
  %91 = load %struct._object*, %struct._object** @PyExc_NotImplementedError, align 8, !dbg !5108, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %91, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.28, i32 0, i32 0)), !dbg !5110
  store i32 -1, i32* %retval, !dbg !5111
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.94, !dbg !5111

if.end.92:                                        ; preds = %lor.lhs.false.88
  br label %if.end.93

if.end.93:                                        ; preds = %if.end.92
  %92 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !5112, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %92, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0)), !dbg !5113
  store i32 -1, i32* %retval, !dbg !5114
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.94, !dbg !5114

cleanup.94:                                       ; preds = %if.end.93, %if.then.91, %cleanup.82, %cleanup, %if.then.25, %if.else, %if.then.20, %if.then.11, %if.then.8, %if.then.5, %if.then
  %93 = bitcast i8** %ptr to i8*, !dbg !5115
  call void @llvm.lifetime.end(i64 8, i8* %93) #3, !dbg !5115
  %94 = bitcast i8** %fmt to i8*, !dbg !5115
  call void @llvm.lifetime.end(i64 8, i8* %94) #3, !dbg !5115
  %95 = bitcast %struct.bufferinfo* %src to i8*, !dbg !5115
  call void @llvm.lifetime.end(i64 80, i8* %95) #3, !dbg !5115
  %96 = bitcast %struct.bufferinfo** %view to i8*, !dbg !5115
  call void @llvm.lifetime.end(i64 8, i8* %96) #3, !dbg !5115
  %97 = load i32, i32* %retval, !dbg !5115
  ret i32 %97, !dbg !5115
}

declare i64 @PyNumber_AsSsize_t(%struct._object*, %struct._object*) #1

declare %struct._object* @PyErr_Occurred() #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_slice(%struct.bufferinfo* %base, %struct._object* %key, i32 %dim) #4 {
entry:
  %retval = alloca i32, align 4
  %base.addr = alloca %struct.bufferinfo*, align 8
  %key.addr = alloca %struct._object*, align 8
  %dim.addr = alloca i32, align 4
  %start = alloca i64, align 8
  %stop = alloca i64, align 8
  %step = alloca i64, align 8
  %slicelength = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %n = alloca i64, align 8
  store %struct.bufferinfo* %base, %struct.bufferinfo** %base.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %base.addr, metadata !834, metadata !1538), !dbg !5116
  store %struct._object* %key, %struct._object** %key.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._object** %key.addr, metadata !835, metadata !1538), !dbg !5117
  store i32 %dim, i32* %dim.addr, align 4, !tbaa !1580
  call void @llvm.dbg.declare(metadata i32* %dim.addr, metadata !836, metadata !1538), !dbg !5118
  %0 = bitcast i64* %start to i8*, !dbg !5119
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !5119
  call void @llvm.dbg.declare(metadata i64* %start, metadata !837, metadata !1538), !dbg !5120
  %1 = bitcast i64* %stop to i8*, !dbg !5119
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !5119
  call void @llvm.dbg.declare(metadata i64* %stop, metadata !838, metadata !1538), !dbg !5121
  %2 = bitcast i64* %step to i8*, !dbg !5119
  call void @llvm.lifetime.start(i64 8, i8* %2) #3, !dbg !5119
  call void @llvm.dbg.declare(metadata i64* %step, metadata !839, metadata !1538), !dbg !5122
  %3 = bitcast i64* %slicelength to i8*, !dbg !5119
  call void @llvm.lifetime.start(i64 8, i8* %3) #3, !dbg !5119
  call void @llvm.dbg.declare(metadata i64* %slicelength, metadata !840, metadata !1538), !dbg !5123
  %4 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !5124, !tbaa !1534
  %5 = load i32, i32* %dim.addr, align 4, !dbg !5126, !tbaa !1580
  %idxprom = sext i32 %5 to i64, !dbg !5127
  %6 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !5127, !tbaa !1534
  %shape = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %6, i32 0, i32 7, !dbg !5128
  %7 = load i64*, i64** %shape, align 8, !dbg !5128, !tbaa !2308
  %arrayidx = getelementptr i64, i64* %7, i64 %idxprom, !dbg !5127
  %8 = load i64, i64* %arrayidx, align 8, !dbg !5127, !tbaa !1603
  %call = call i32 @PySlice_GetIndicesEx(%struct._object* %4, i64 %8, i64* %start, i64* %stop, i64* %step, i64* %slicelength), !dbg !5129
  %cmp = icmp slt i32 %call, 0, !dbg !5130
  br i1 %cmp, label %if.then, label %if.end, !dbg !5131

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !5132
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.36, !dbg !5132

if.end:                                           ; preds = %entry
  %9 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !5134, !tbaa !1534
  %suboffsets = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %9, i32 0, i32 9, !dbg !5135
  %10 = load i64*, i64** %suboffsets, align 8, !dbg !5135, !tbaa !2334
  %cmp1 = icmp eq i64* %10, null, !dbg !5136
  br i1 %cmp1, label %if.then.3, label %lor.lhs.false, !dbg !5137

lor.lhs.false:                                    ; preds = %if.end
  %11 = load i32, i32* %dim.addr, align 4, !dbg !5138, !tbaa !1580
  %cmp2 = icmp eq i32 %11, 0, !dbg !5140
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !5141

if.then.3:                                        ; preds = %lor.lhs.false, %if.end
  br label %adjust_buf, !dbg !5142

adjust_buf:                                       ; preds = %LeafBlock, %if.then.3
  %12 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !5145, !tbaa !1534
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %12, i32 0, i32 0, !dbg !5147
  %13 = load i8*, i8** %buf, align 8, !dbg !5147, !tbaa !1826
  %14 = load i32, i32* %dim.addr, align 4, !dbg !5148, !tbaa !1580
  %idxprom4 = sext i32 %14 to i64, !dbg !5149
  %15 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !5149, !tbaa !1534
  %strides = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %15, i32 0, i32 8, !dbg !5150
  %16 = load i64*, i64** %strides, align 8, !dbg !5150, !tbaa !2541
  %arrayidx5 = getelementptr i64, i64* %16, i64 %idxprom4, !dbg !5149
  %17 = load i64, i64* %arrayidx5, align 8, !dbg !5149, !tbaa !1603
  %18 = load i64, i64* %start, align 8, !dbg !5151, !tbaa !1603
  %mul = mul i64 %17, %18, !dbg !5152
  %add.ptr = getelementptr i8, i8* %13, i64 %mul, !dbg !5153
  %19 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !5154, !tbaa !1534
  %buf6 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %19, i32 0, i32 0, !dbg !5155
  store i8* %add.ptr, i8** %buf6, align 8, !dbg !5156, !tbaa !1826
  br label %if.end.25, !dbg !5157

if.else:                                          ; preds = %lor.lhs.false
  %20 = bitcast i64* %n to i8*, !dbg !5158
  call void @llvm.lifetime.start(i64 8, i8* %20) #3, !dbg !5158
  call void @llvm.dbg.declare(metadata i64* %n, metadata !841, metadata !1538), !dbg !5159
  %21 = load i32, i32* %dim.addr, align 4, !dbg !5160, !tbaa !1580
  %sub = sub i32 %21, 1, !dbg !5161
  %conv = sext i32 %sub to i64, !dbg !5160
  store i64 %conv, i64* %n, align 8, !dbg !5159, !tbaa !1603
  br label %while.cond, !dbg !5162

while.cond:                                       ; preds = %while.body, %if.else
  %22 = load i64, i64* %n, align 8, !dbg !5163, !tbaa !1603
  %cmp7 = icmp sge i64 %22, 0, !dbg !5166
  br i1 %cmp7, label %land.rhs, label %land.end, !dbg !5167

land.rhs:                                         ; preds = %while.cond
  %23 = load i64, i64* %n, align 8, !dbg !5168, !tbaa !1603
  %24 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !5170, !tbaa !1534
  %suboffsets9 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %24, i32 0, i32 9, !dbg !5171
  %25 = load i64*, i64** %suboffsets9, align 8, !dbg !5171, !tbaa !2334
  %arrayidx10 = getelementptr i64, i64* %25, i64 %23, !dbg !5170
  %26 = load i64, i64* %arrayidx10, align 8, !dbg !5170, !tbaa !1603
  %cmp11 = icmp slt i64 %26, 0, !dbg !5172
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %27 = phi i1 [ false, %while.cond ], [ %cmp11, %land.rhs ]
  br i1 %27, label %while.body, label %while.end, !dbg !5173

while.body:                                       ; preds = %land.end
  %28 = load i64, i64* %n, align 8, !dbg !5175, !tbaa !1603
  %dec = add i64 %28, -1, !dbg !5175
  store i64 %dec, i64* %n, align 8, !dbg !5175, !tbaa !1603
  br label %while.cond, !dbg !5162

while.end:                                        ; preds = %land.end
  %29 = load i64, i64* %n, align 8, !dbg !5176, !tbaa !1603
  %cmp13 = icmp slt i64 %29, 0, !dbg !5178
  br i1 %cmp13, label %if.then.15, label %if.end.16, !dbg !5179

if.then.15:                                       ; preds = %while.end
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5180

if.end.16:                                        ; preds = %while.end
  %30 = load i64, i64* %n, align 8, !dbg !5181, !tbaa !1603
  %31 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !5182, !tbaa !1534
  %suboffsets17 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %31, i32 0, i32 9, !dbg !5183
  %32 = load i64*, i64** %suboffsets17, align 8, !dbg !5183, !tbaa !2334
  %arrayidx18 = getelementptr i64, i64* %32, i64 %30, !dbg !5182
  %33 = load i64, i64* %arrayidx18, align 8, !dbg !5182, !tbaa !1603
  %34 = load i32, i32* %dim.addr, align 4, !dbg !5184, !tbaa !1580
  %idxprom19 = sext i32 %34 to i64, !dbg !5185
  %35 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !5185, !tbaa !1534
  %strides20 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %35, i32 0, i32 8, !dbg !5186
  %36 = load i64*, i64** %strides20, align 8, !dbg !5186, !tbaa !2541
  %arrayidx21 = getelementptr i64, i64* %36, i64 %idxprom19, !dbg !5185
  %37 = load i64, i64* %arrayidx21, align 8, !dbg !5185, !tbaa !1603
  %38 = load i64, i64* %start, align 8, !dbg !5187, !tbaa !1603
  %mul22 = mul i64 %37, %38, !dbg !5188
  %add = add i64 %33, %mul22, !dbg !5189
  %39 = load i64, i64* %n, align 8, !dbg !5190, !tbaa !1603
  %40 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !5191, !tbaa !1534
  %suboffsets23 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %40, i32 0, i32 9, !dbg !5192
  %41 = load i64*, i64** %suboffsets23, align 8, !dbg !5192, !tbaa !2334
  %arrayidx24 = getelementptr i64, i64* %41, i64 %39, !dbg !5191
  store i64 %add, i64* %arrayidx24, align 8, !dbg !5193, !tbaa !1603
  store i32 0, i32* %cleanup.dest.slot, !dbg !5194
  br label %cleanup, !dbg !5194

cleanup:                                          ; preds = %if.end.16, %if.then.15
  %42 = bitcast i64* %n to i8*, !dbg !5195
  call void @llvm.lifetime.end(i64 8, i8* %42) #3, !dbg !5195
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 2
  br i1 %SwitchLeaf, label %adjust_buf, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.25

if.end.25:                                        ; preds = %cleanup.cont, %adjust_buf
  %43 = load i64, i64* %slicelength, align 8, !dbg !5196, !tbaa !1603
  %44 = load i32, i32* %dim.addr, align 4, !dbg !5197, !tbaa !1580
  %idxprom26 = sext i32 %44 to i64, !dbg !5198
  %45 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !5198, !tbaa !1534
  %shape27 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %45, i32 0, i32 7, !dbg !5199
  %46 = load i64*, i64** %shape27, align 8, !dbg !5199, !tbaa !2308
  %arrayidx28 = getelementptr i64, i64* %46, i64 %idxprom26, !dbg !5198
  store i64 %43, i64* %arrayidx28, align 8, !dbg !5200, !tbaa !1603
  %47 = load i32, i32* %dim.addr, align 4, !dbg !5201, !tbaa !1580
  %idxprom29 = sext i32 %47 to i64, !dbg !5202
  %48 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !5202, !tbaa !1534
  %strides30 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %48, i32 0, i32 8, !dbg !5203
  %49 = load i64*, i64** %strides30, align 8, !dbg !5203, !tbaa !2541
  %arrayidx31 = getelementptr i64, i64* %49, i64 %idxprom29, !dbg !5202
  %50 = load i64, i64* %arrayidx31, align 8, !dbg !5202, !tbaa !1603
  %51 = load i64, i64* %step, align 8, !dbg !5204, !tbaa !1603
  %mul32 = mul i64 %50, %51, !dbg !5205
  %52 = load i32, i32* %dim.addr, align 4, !dbg !5206, !tbaa !1580
  %idxprom33 = sext i32 %52 to i64, !dbg !5207
  %53 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !5207, !tbaa !1534
  %strides34 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %53, i32 0, i32 8, !dbg !5208
  %54 = load i64*, i64** %strides34, align 8, !dbg !5208, !tbaa !2541
  %arrayidx35 = getelementptr i64, i64* %54, i64 %idxprom33, !dbg !5207
  store i64 %mul32, i64* %arrayidx35, align 8, !dbg !5209, !tbaa !1603
  store i32 0, i32* %retval, !dbg !5210
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.36, !dbg !5210

cleanup.36:                                       ; preds = %if.end.25, %if.then
  %55 = bitcast i64* %slicelength to i8*, !dbg !5211
  call void @llvm.lifetime.end(i64 8, i8* %55) #3, !dbg !5211
  %56 = bitcast i64* %step to i8*, !dbg !5211
  call void @llvm.lifetime.end(i64 8, i8* %56) #3, !dbg !5211
  %57 = bitcast i64* %stop to i8*, !dbg !5211
  call void @llvm.lifetime.end(i64 8, i8* %57) #3, !dbg !5211
  %58 = bitcast i64* %start to i8*, !dbg !5211
  call void @llvm.lifetime.end(i64 8, i8* %58) #3, !dbg !5211
  %59 = load i32, i32* %retval, !dbg !5211
  ret i32 %59, !dbg !5211
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @init_len(%struct.bufferinfo* %view) #4 {
entry:
  %view.addr = alloca %struct.bufferinfo*, align 8
  %i = alloca i64, align 8
  %len = alloca i64, align 8
  store %struct.bufferinfo* %view, %struct.bufferinfo** %view.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %view.addr, metadata !846, metadata !1538), !dbg !5212
  %0 = bitcast i64* %i to i8*, !dbg !5213
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !5213
  call void @llvm.dbg.declare(metadata i64* %i, metadata !847, metadata !1538), !dbg !5214
  %1 = bitcast i64* %len to i8*, !dbg !5213
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !5213
  call void @llvm.dbg.declare(metadata i64* %len, metadata !848, metadata !1538), !dbg !5215
  store i64 1, i64* %len, align 8, !dbg !5216, !tbaa !1603
  store i64 0, i64* %i, align 8, !dbg !5217, !tbaa !1603
  br label %for.cond, !dbg !5219

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i64, i64* %i, align 8, !dbg !5220, !tbaa !1603
  %3 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !5224, !tbaa !1534
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %3, i32 0, i32 5, !dbg !5225
  %4 = load i32, i32* %ndim, align 4, !dbg !5225, !tbaa !1771
  %conv = sext i32 %4 to i64, !dbg !5224
  %cmp = icmp slt i64 %2, %conv, !dbg !5226
  br i1 %cmp, label %for.body, label %for.end, !dbg !5227

for.body:                                         ; preds = %for.cond
  %5 = load i64, i64* %i, align 8, !dbg !5228, !tbaa !1603
  %6 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !5229, !tbaa !1534
  %shape = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %6, i32 0, i32 7, !dbg !5230
  %7 = load i64*, i64** %shape, align 8, !dbg !5230, !tbaa !2308
  %arrayidx = getelementptr i64, i64* %7, i64 %5, !dbg !5229
  %8 = load i64, i64* %arrayidx, align 8, !dbg !5229, !tbaa !1603
  %9 = load i64, i64* %len, align 8, !dbg !5231, !tbaa !1603
  %mul = mul i64 %9, %8, !dbg !5231
  store i64 %mul, i64* %len, align 8, !dbg !5231, !tbaa !1603
  br label %for.inc, !dbg !5232

for.inc:                                          ; preds = %for.body
  %10 = load i64, i64* %i, align 8, !dbg !5233, !tbaa !1603
  %inc = add i64 %10, 1, !dbg !5233
  store i64 %inc, i64* %i, align 8, !dbg !5233, !tbaa !1603
  br label %for.cond, !dbg !5234

for.end:                                          ; preds = %for.cond
  %11 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !5235, !tbaa !1534
  %itemsize = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %11, i32 0, i32 3, !dbg !5236
  %12 = load i64, i64* %itemsize, align 8, !dbg !5236, !tbaa !2289
  %13 = load i64, i64* %len, align 8, !dbg !5237, !tbaa !1603
  %mul2 = mul i64 %13, %12, !dbg !5237
  store i64 %mul2, i64* %len, align 8, !dbg !5237, !tbaa !1603
  %14 = load i64, i64* %len, align 8, !dbg !5238, !tbaa !1603
  %15 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !5239, !tbaa !1534
  %len3 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %15, i32 0, i32 2, !dbg !5240
  store i64 %14, i64* %len3, align 8, !dbg !5241, !tbaa !2175
  %16 = bitcast i64* %len to i8*, !dbg !5242
  call void @llvm.lifetime.end(i64 8, i8* %16) #3, !dbg !5242
  %17 = bitcast i64* %i to i8*, !dbg !5242
  call void @llvm.lifetime.end(i64 8, i8* %17) #3, !dbg !5242
  ret void, !dbg !5242
}

; Function Attrs: nounwind uwtable
define internal i32 @is_multislice(%struct._object* %key) #0 {
entry:
  %retval = alloca i32, align 4
  %key.addr = alloca %struct._object*, align 8
  %size = alloca i64, align 8
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %x = alloca %struct._object*, align 8
  store %struct._object* %key, %struct._object** %key.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._object** %key.addr, metadata !851, metadata !1538), !dbg !5243
  %0 = bitcast i64* %size to i8*, !dbg !5244
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !5244
  call void @llvm.dbg.declare(metadata i64* %size, metadata !852, metadata !1538), !dbg !5245
  %1 = bitcast i64* %i to i8*, !dbg !5244
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !5244
  call void @llvm.dbg.declare(metadata i64* %i, metadata !853, metadata !1538), !dbg !5246
  %2 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !5247, !tbaa !1534
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %2, i32 0, i32 1, !dbg !5249
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5249, !tbaa !1650
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i32 0, i32 19, !dbg !5250
  %4 = load i64, i64* %tp_flags, align 8, !dbg !5250, !tbaa !4742
  %and = and i64 %4, 67108864, !dbg !5251
  %cmp = icmp ne i64 %and, 0, !dbg !5252
  br i1 %cmp, label %if.end, label %if.then, !dbg !5253

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, !dbg !5254
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.9, !dbg !5254

if.end:                                           ; preds = %entry
  %5 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !5255, !tbaa !1534
  %6 = bitcast %struct._object* %5 to %struct.PyVarObject*, !dbg !5256
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %6, i32 0, i32 1, !dbg !5257
  %7 = load i64, i64* %ob_size, align 8, !dbg !5257, !tbaa !4750
  store i64 %7, i64* %size, align 8, !dbg !5258, !tbaa !1603
  %8 = load i64, i64* %size, align 8, !dbg !5259, !tbaa !1603
  %cmp1 = icmp eq i64 %8, 0, !dbg !5261
  br i1 %cmp1, label %if.then.2, label %if.end.3, !dbg !5262

if.then.2:                                        ; preds = %if.end
  store i32 0, i32* %retval, !dbg !5263
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.9, !dbg !5263

if.end.3:                                         ; preds = %if.end
  store i64 0, i64* %i, align 8, !dbg !5264, !tbaa !1603
  br label %for.cond, !dbg !5265

for.cond:                                         ; preds = %for.inc, %if.end.3
  %9 = load i64, i64* %i, align 8, !dbg !5266, !tbaa !1603
  %10 = load i64, i64* %size, align 8, !dbg !5269, !tbaa !1603
  %cmp4 = icmp slt i64 %9, %10, !dbg !5270
  br i1 %cmp4, label %for.body, label %for.end, !dbg !5271

for.body:                                         ; preds = %for.cond
  %11 = bitcast %struct._object** %x to i8*, !dbg !5272
  call void @llvm.lifetime.start(i64 8, i8* %11) #3, !dbg !5272
  call void @llvm.dbg.declare(metadata %struct._object** %x, metadata !854, metadata !1538), !dbg !5273
  %12 = load i64, i64* %i, align 8, !dbg !5274, !tbaa !1603
  %13 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !5275, !tbaa !1534
  %14 = bitcast %struct._object* %13 to %struct.PyTupleObject*, !dbg !5276
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %14, i32 0, i32 1, !dbg !5277
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 %12, !dbg !5278
  %15 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !5278, !tbaa !1534
  store %struct._object* %15, %struct._object** %x, align 8, !dbg !5273, !tbaa !1534
  %16 = load %struct._object*, %struct._object** %x, align 8, !dbg !5279, !tbaa !1534
  %ob_type5 = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1, !dbg !5281
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type5, align 8, !dbg !5281, !tbaa !1650
  %cmp6 = icmp eq %struct._typeobject* %17, @PySlice_Type, !dbg !5282
  br i1 %cmp6, label %if.end.8, label %if.then.7, !dbg !5283

if.then.7:                                        ; preds = %for.body
  store i32 0, i32* %retval, !dbg !5284
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5284

if.end.8:                                         ; preds = %for.body
  store i32 0, i32* %cleanup.dest.slot, !dbg !5285
  br label %cleanup, !dbg !5285

cleanup:                                          ; preds = %if.end.8, %if.then.7
  %18 = bitcast %struct._object** %x to i8*, !dbg !5286
  call void @llvm.lifetime.end(i64 8, i8* %18) #3, !dbg !5286
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %for.inc, !dbg !5287

for.inc:                                          ; preds = %cleanup.cont
  %19 = load i64, i64* %i, align 8, !dbg !5288, !tbaa !1603
  %inc = add i64 %19, 1, !dbg !5288
  store i64 %inc, i64* %i, align 8, !dbg !5288, !tbaa !1603
  br label %for.cond, !dbg !5289

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, !dbg !5290
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.9, !dbg !5290

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.9

cleanup.9:                                        ; preds = %NewDefault, %for.end, %if.then.2, %if.then
  %20 = bitcast i64* %i to i8*, !dbg !5291
  call void @llvm.lifetime.end(i64 8, i8* %20) #3, !dbg !5291
  %21 = bitcast i64* %size to i8*, !dbg !5291
  call void @llvm.lifetime.end(i64 8, i8* %21) #3, !dbg !5291
  %22 = load i32, i32* %retval, !dbg !5291
  ret i32 %22, !dbg !5291
}

declare i32 @PySlice_GetIndicesEx(%struct._object*, i64, i64*, i64*, i64*, i64*) #1

; Function Attrs: nounwind uwtable
define internal i32 @pack_single(i8* %ptr, %struct._object* %item, i8* %fmt) #0 {
entry:
  %retval = alloca i32, align 4
  %ptr.addr = alloca i8*, align 8
  %item.addr = alloca %struct._object*, align 8
  %fmt.addr = alloca i8*, align 8
  %llu = alloca i64, align 8
  %lu = alloca i64, align 8
  %zu = alloca i64, align 8
  %lld = alloca i64, align 8
  %ld = alloca i64, align 8
  %zd = alloca i64, align 8
  %d = alloca double, align 8
  %p = alloca i8*, align 8
  %x = alloca i16, align 2
  %x31 = alloca i32, align 4
  %x36 = alloca i64, align 8
  %x62 = alloca i16, align 2
  %x72 = alloca i32, align 4
  %x78 = alloca i64, align 8
  %x92 = alloca i64, align 8
  %x105 = alloca i64, align 8
  %x118 = alloca i64, align 8
  %x131 = alloca i64, align 8
  %x149 = alloca float, align 4
  %x154 = alloca double, align 8
  %cleanup.dest.slot = alloca i32
  %x166 = alloca i8, align 1
  %x192 = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !882, metadata !1538), !dbg !5292
  store %struct._object* %item, %struct._object** %item.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._object** %item.addr, metadata !883, metadata !1538), !dbg !5293
  store i8* %fmt, i8** %fmt.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !884, metadata !1538), !dbg !5294
  %0 = bitcast i64* %llu to i8*, !dbg !5295
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !5295
  call void @llvm.dbg.declare(metadata i64* %llu, metadata !885, metadata !1538), !dbg !5296
  %1 = bitcast i64* %lu to i8*, !dbg !5297
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !5297
  call void @llvm.dbg.declare(metadata i64* %lu, metadata !886, metadata !1538), !dbg !5298
  %2 = bitcast i64* %zu to i8*, !dbg !5299
  call void @llvm.lifetime.start(i64 8, i8* %2) #3, !dbg !5299
  call void @llvm.dbg.declare(metadata i64* %zu, metadata !887, metadata !1538), !dbg !5300
  %3 = bitcast i64* %lld to i8*, !dbg !5301
  call void @llvm.lifetime.start(i64 8, i8* %3) #3, !dbg !5301
  call void @llvm.dbg.declare(metadata i64* %lld, metadata !888, metadata !1538), !dbg !5302
  %4 = bitcast i64* %ld to i8*, !dbg !5303
  call void @llvm.lifetime.start(i64 8, i8* %4) #3, !dbg !5303
  call void @llvm.dbg.declare(metadata i64* %ld, metadata !889, metadata !1538), !dbg !5304
  %5 = bitcast i64* %zd to i8*, !dbg !5305
  call void @llvm.lifetime.start(i64 8, i8* %5) #3, !dbg !5305
  call void @llvm.dbg.declare(metadata i64* %zd, metadata !890, metadata !1538), !dbg !5306
  %6 = bitcast double* %d to i8*, !dbg !5307
  call void @llvm.lifetime.start(i64 8, i8* %6) #3, !dbg !5307
  call void @llvm.dbg.declare(metadata double* %d, metadata !891, metadata !1538), !dbg !5308
  %7 = bitcast i8** %p to i8*, !dbg !5309
  call void @llvm.lifetime.start(i64 8, i8* %7) #3, !dbg !5309
  call void @llvm.dbg.declare(metadata i8** %p, metadata !892, metadata !1538), !dbg !5310
  %8 = load i8*, i8** %fmt.addr, align 8, !dbg !5311, !tbaa !1534
  %arrayidx = getelementptr i8, i8* %8, i64 0, !dbg !5311
  %9 = load i8, i8* %arrayidx, align 1, !dbg !5311, !tbaa !2033
  %conv = sext i8 %9 to i32, !dbg !5311
  br label %NodeBlock.48

NodeBlock.48:                                     ; preds = %entry
  %Pivot.49 = icmp slt i32 %conv, 98
  br i1 %Pivot.49, label %NodeBlock.19, label %NodeBlock.46

NodeBlock.46:                                     ; preds = %NodeBlock.48
  %Pivot.47 = icmp slt i32 %conv, 104
  br i1 %Pivot.47, label %NodeBlock.29, label %NodeBlock.44

NodeBlock.44:                                     ; preds = %NodeBlock.46
  %Pivot.45 = icmp slt i32 %conv, 110
  br i1 %Pivot.45, label %NodeBlock.36, label %NodeBlock.42

NodeBlock.42:                                     ; preds = %NodeBlock.44
  %Pivot.43 = icmp slt i32 %conv, 113
  br i1 %Pivot.43, label %LeafBlock.38, label %LeafBlock.40

LeafBlock.40:                                     ; preds = %NodeBlock.42
  %SwitchLeaf41 = icmp eq i32 %conv, 113
  br i1 %SwitchLeaf41, label %sw.bb.82, label %NewDefault

LeafBlock.38:                                     ; preds = %NodeBlock.42
  %SwitchLeaf39 = icmp eq i32 %conv, 110
  br i1 %SwitchLeaf39, label %sw.bb.108, label %NewDefault

NodeBlock.36:                                     ; preds = %NodeBlock.44
  %Pivot.37 = icmp slt i32 %conv, 108
  br i1 %Pivot.37, label %LeafBlock.31, label %LeafBlock.34

LeafBlock.34:                                     ; preds = %NodeBlock.36
  %SwitchLeaf35 = icmp eq i32 %conv, 108
  br i1 %SwitchLeaf35, label %sw.bb, label %NewDefault

LeafBlock.31:                                     ; preds = %NodeBlock.36
  %conv.off.32 = add i32 %conv, -104
  %SwitchLeaf33 = icmp ule i32 %conv.off.32, 1
  br i1 %SwitchLeaf33, label %sw.bb, label %NewDefault

NodeBlock.29:                                     ; preds = %NodeBlock.46
  %Pivot.30 = icmp slt i32 %conv, 100
  br i1 %Pivot.30, label %NodeBlock.21, label %NodeBlock.27

NodeBlock.27:                                     ; preds = %NodeBlock.29
  %Pivot.28 = icmp slt i32 %conv, 102
  br i1 %Pivot.28, label %LeafBlock.23, label %LeafBlock.25

LeafBlock.25:                                     ; preds = %NodeBlock.27
  %SwitchLeaf26 = icmp eq i32 %conv, 102
  br i1 %SwitchLeaf26, label %sw.bb.134, label %NewDefault

LeafBlock.23:                                     ; preds = %NodeBlock.27
  %SwitchLeaf24 = icmp eq i32 %conv, 100
  br i1 %SwitchLeaf24, label %sw.bb.134, label %NewDefault

NodeBlock.21:                                     ; preds = %NodeBlock.29
  %Pivot.22 = icmp slt i32 %conv, 99
  br i1 %Pivot.22, label %sw.bb, label %sw.bb.170

NodeBlock.19:                                     ; preds = %NodeBlock.48
  %Pivot.20 = icmp slt i32 %conv, 76
  br i1 %Pivot.20, label %NodeBlock.5, label %NodeBlock.17

NodeBlock.17:                                     ; preds = %NodeBlock.19
  %Pivot.18 = icmp slt i32 %conv, 80
  br i1 %Pivot.18, label %NodeBlock.11, label %NodeBlock.15

NodeBlock.15:                                     ; preds = %NodeBlock.17
  %Pivot.16 = icmp slt i32 %conv, 81
  br i1 %Pivot.16, label %sw.bb.182, label %LeafBlock.13

LeafBlock.13:                                     ; preds = %NodeBlock.15
  %SwitchLeaf14 = icmp eq i32 %conv, 81
  br i1 %SwitchLeaf14, label %sw.bb.95, label %NewDefault

NodeBlock.11:                                     ; preds = %NodeBlock.17
  %Pivot.12 = icmp slt i32 %conv, 78
  br i1 %Pivot.12, label %LeafBlock.7, label %LeafBlock.9

LeafBlock.9:                                      ; preds = %NodeBlock.11
  %SwitchLeaf10 = icmp eq i32 %conv, 78
  br i1 %SwitchLeaf10, label %sw.bb.121, label %NewDefault

LeafBlock.7:                                      ; preds = %NodeBlock.11
  %SwitchLeaf8 = icmp eq i32 %conv, 76
  br i1 %SwitchLeaf8, label %sw.bb.39, label %NewDefault

NodeBlock.5:                                      ; preds = %NodeBlock.19
  %Pivot.6 = icmp slt i32 %conv, 66
  br i1 %Pivot.6, label %LeafBlock, label %NodeBlock

NodeBlock:                                        ; preds = %NodeBlock.5
  %Pivot = icmp slt i32 %conv, 72
  br i1 %Pivot, label %LeafBlock.1, label %LeafBlock.3

LeafBlock.3:                                      ; preds = %NodeBlock
  %conv.off = add i32 %conv, -72
  %SwitchLeaf4 = icmp ule i32 %conv.off, 1
  br i1 %SwitchLeaf4, label %sw.bb.39, label %NewDefault

LeafBlock.1:                                      ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %conv, 66
  br i1 %SwitchLeaf2, label %sw.bb.39, label %NewDefault

LeafBlock:                                        ; preds = %NodeBlock.5
  %SwitchLeaf = icmp eq i32 %conv, 63
  br i1 %SwitchLeaf, label %sw.bb.158, label %NewDefault

sw.bb:                                            ; preds = %LeafBlock.34, %LeafBlock.31, %NodeBlock.21
  %10 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !5312, !tbaa !1534
  %call = call i64 @pylong_as_ld(%struct._object* %10), !dbg !5313
  store i64 %call, i64* %ld, align 8, !dbg !5314, !tbaa !1603
  %11 = load i64, i64* %ld, align 8, !dbg !5315, !tbaa !1603
  %cmp = icmp eq i64 %11, -1, !dbg !5317
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5318

land.lhs.true:                                    ; preds = %sw.bb
  %call2 = call %struct._object* @PyErr_Occurred(), !dbg !5319
  %tobool = icmp ne %struct._object* %call2, null, !dbg !5319
  br i1 %tobool, label %if.then, label %if.end, !dbg !5321

if.then:                                          ; preds = %land.lhs.true
  br label %err_occurred, !dbg !5322

if.end:                                           ; preds = %land.lhs.true, %sw.bb
  %12 = load i8*, i8** %fmt.addr, align 8, !dbg !5323, !tbaa !1534
  %arrayidx3 = getelementptr i8, i8* %12, i64 0, !dbg !5323
  %13 = load i8, i8* %arrayidx3, align 1, !dbg !5323, !tbaa !2033
  %conv4 = sext i8 %13 to i32, !dbg !5323
  br label %NodeBlock.57

NodeBlock.57:                                     ; preds = %if.end
  %Pivot.58 = icmp slt i32 %conv4, 104
  br i1 %Pivot.58, label %LeafBlock.51, label %NodeBlock.55

NodeBlock.55:                                     ; preds = %NodeBlock.57
  %Pivot.56 = icmp slt i32 %conv4, 105
  br i1 %Pivot.56, label %sw.bb.13, label %LeafBlock.53

LeafBlock.53:                                     ; preds = %NodeBlock.55
  %SwitchLeaf54 = icmp eq i32 %conv4, 105
  br i1 %SwitchLeaf54, label %sw.bb.22, label %NewDefault.50

LeafBlock.51:                                     ; preds = %NodeBlock.57
  %SwitchLeaf52 = icmp eq i32 %conv4, 98
  br i1 %SwitchLeaf52, label %sw.bb.5, label %NewDefault.50

sw.bb.5:                                          ; preds = %LeafBlock.51
  %14 = load i64, i64* %ld, align 8, !dbg !5324, !tbaa !1603
  %cmp6 = icmp slt i64 %14, -128, !dbg !5326
  br i1 %cmp6, label %if.then.10, label %lor.lhs.false, !dbg !5327

lor.lhs.false:                                    ; preds = %sw.bb.5
  %15 = load i64, i64* %ld, align 8, !dbg !5328, !tbaa !1603
  %cmp8 = icmp sgt i64 %15, 127, !dbg !5330
  br i1 %cmp8, label %if.then.10, label %if.end.11, !dbg !5331

if.then.10:                                       ; preds = %lor.lhs.false, %sw.bb.5
  br label %err_range, !dbg !5332

if.end.11:                                        ; preds = %lor.lhs.false
  %16 = load i64, i64* %ld, align 8, !dbg !5335, !tbaa !1603
  %conv12 = trunc i64 %16 to i8, !dbg !5336
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !5337, !tbaa !1534
  store i8 %conv12, i8* %17, align 1, !dbg !5338, !tbaa !2033
  br label %sw.epilog, !dbg !5339

sw.bb.13:                                         ; preds = %NodeBlock.55
  %18 = load i64, i64* %ld, align 8, !dbg !5340, !tbaa !1603
  %cmp14 = icmp slt i64 %18, -32768, !dbg !5342
  br i1 %cmp14, label %if.then.19, label %lor.lhs.false.16, !dbg !5343

lor.lhs.false.16:                                 ; preds = %sw.bb.13
  %19 = load i64, i64* %ld, align 8, !dbg !5344, !tbaa !1603
  %cmp17 = icmp sgt i64 %19, 32767, !dbg !5346
  br i1 %cmp17, label %if.then.19, label %if.end.20, !dbg !5347

if.then.19:                                       ; preds = %lor.lhs.false.16, %sw.bb.13
  br label %err_range, !dbg !5348

if.end.20:                                        ; preds = %lor.lhs.false.16
  br label %do.body, !dbg !5351

do.body:                                          ; preds = %if.end.20
  %20 = bitcast i16* %x to i8*, !dbg !5352
  call void @llvm.lifetime.start(i64 2, i8* %20) #3, !dbg !5352
  call void @llvm.dbg.declare(metadata i16* %x, metadata !893, metadata !1538), !dbg !5354
  %21 = load i64, i64* %ld, align 8, !dbg !5355, !tbaa !1603
  %conv21 = trunc i64 %21 to i16, !dbg !5356
  store i16 %conv21, i16* %x, align 2, !dbg !5357, !tbaa !4472
  %22 = load i8*, i8** %ptr.addr, align 8, !dbg !5358, !tbaa !1534
  %23 = bitcast i16* %x to i8*, !dbg !5359
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 2, i32 1, i1 false), !dbg !5360
  %24 = bitcast i16* %x to i8*, !dbg !5361
  call void @llvm.lifetime.end(i64 2, i8* %24) #3, !dbg !5361
  br label %do.cond, !dbg !5362

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !5363

do.end:                                           ; preds = %do.cond
  br label %sw.epilog, !dbg !5365

sw.bb.22:                                         ; preds = %LeafBlock.53
  %25 = load i64, i64* %ld, align 8, !dbg !5367, !tbaa !1603
  %cmp23 = icmp slt i64 %25, -2147483648, !dbg !5369
  br i1 %cmp23, label %if.then.28, label %lor.lhs.false.25, !dbg !5370

lor.lhs.false.25:                                 ; preds = %sw.bb.22
  %26 = load i64, i64* %ld, align 8, !dbg !5371, !tbaa !1603
  %cmp26 = icmp sgt i64 %26, 2147483647, !dbg !5373
  br i1 %cmp26, label %if.then.28, label %if.end.29, !dbg !5374

if.then.28:                                       ; preds = %lor.lhs.false.25, %sw.bb.22
  br label %err_range, !dbg !5375

if.end.29:                                        ; preds = %lor.lhs.false.25
  br label %do.body.30, !dbg !5378

do.body.30:                                       ; preds = %if.end.29
  %27 = bitcast i32* %x31 to i8*, !dbg !5379
  call void @llvm.lifetime.start(i64 4, i8* %27) #3, !dbg !5379
  call void @llvm.dbg.declare(metadata i32* %x31, metadata !897, metadata !1538), !dbg !5381
  %28 = load i64, i64* %ld, align 8, !dbg !5382, !tbaa !1603
  %conv32 = trunc i64 %28 to i32, !dbg !5383
  store i32 %conv32, i32* %x31, align 4, !dbg !5384, !tbaa !1580
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !5385, !tbaa !1534
  %30 = bitcast i32* %x31 to i8*, !dbg !5386
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %30, i64 4, i32 1, i1 false), !dbg !5387
  %31 = bitcast i32* %x31 to i8*, !dbg !5388
  call void @llvm.lifetime.end(i64 4, i8* %31) #3, !dbg !5388
  br label %do.cond.33, !dbg !5389

do.cond.33:                                       ; preds = %do.body.30
  br label %do.end.34, !dbg !5390

do.end.34:                                        ; preds = %do.cond.33
  br label %sw.epilog, !dbg !5392

NewDefault.50:                                    ; preds = %LeafBlock.53, %LeafBlock.51
  br label %sw.default

sw.default:                                       ; preds = %NewDefault.50
  br label %do.body.35, !dbg !5393

do.body.35:                                       ; preds = %sw.default
  %32 = bitcast i64* %x36 to i8*, !dbg !5394
  call void @llvm.lifetime.start(i64 8, i8* %32) #3, !dbg !5394
  call void @llvm.dbg.declare(metadata i64* %x36, metadata !899, metadata !1538), !dbg !5396
  %33 = load i64, i64* %ld, align 8, !dbg !5397, !tbaa !1603
  store i64 %33, i64* %x36, align 8, !dbg !5398, !tbaa !1603
  %34 = load i8*, i8** %ptr.addr, align 8, !dbg !5399, !tbaa !1534
  %35 = bitcast i64* %x36 to i8*, !dbg !5400
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 8, i32 1, i1 false), !dbg !5401
  %36 = bitcast i64* %x36 to i8*, !dbg !5402
  call void @llvm.lifetime.end(i64 8, i8* %36) #3, !dbg !5402
  br label %do.cond.37, !dbg !5403

do.cond.37:                                       ; preds = %do.body.35
  br label %do.end.38, !dbg !5404

do.end.38:                                        ; preds = %do.cond.37
  br label %sw.epilog, !dbg !5406

sw.epilog:                                        ; preds = %do.end.38, %do.end.34, %do.end, %if.end.11
  br label %sw.epilog.196, !dbg !5407

sw.bb.39:                                         ; preds = %LeafBlock.7, %LeafBlock.3, %LeafBlock.1
  %37 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !5408, !tbaa !1534
  %call40 = call i64 @pylong_as_lu(%struct._object* %37), !dbg !5409
  store i64 %call40, i64* %lu, align 8, !dbg !5410, !tbaa !1603
  %38 = load i64, i64* %lu, align 8, !dbg !5411, !tbaa !1603
  %cmp41 = icmp eq i64 %38, -1, !dbg !5413
  br i1 %cmp41, label %land.lhs.true.43, label %if.end.47, !dbg !5414

land.lhs.true.43:                                 ; preds = %sw.bb.39
  %call44 = call %struct._object* @PyErr_Occurred(), !dbg !5415
  %tobool45 = icmp ne %struct._object* %call44, null, !dbg !5415
  br i1 %tobool45, label %if.then.46, label %if.end.47, !dbg !5417

if.then.46:                                       ; preds = %land.lhs.true.43
  br label %err_occurred, !dbg !5418

if.end.47:                                        ; preds = %land.lhs.true.43, %sw.bb.39
  %39 = load i8*, i8** %fmt.addr, align 8, !dbg !5419, !tbaa !1534
  %arrayidx48 = getelementptr i8, i8* %39, i64 0, !dbg !5419
  %40 = load i8, i8* %arrayidx48, align 1, !dbg !5419, !tbaa !2033
  %conv49 = sext i8 %40 to i32, !dbg !5419
  br label %NodeBlock.66

NodeBlock.66:                                     ; preds = %if.end.47
  %Pivot.67 = icmp slt i32 %conv49, 72
  br i1 %Pivot.67, label %LeafBlock.60, label %NodeBlock.64

NodeBlock.64:                                     ; preds = %NodeBlock.66
  %Pivot.65 = icmp slt i32 %conv49, 73
  br i1 %Pivot.65, label %sw.bb.56, label %LeafBlock.62

LeafBlock.62:                                     ; preds = %NodeBlock.64
  %SwitchLeaf63 = icmp eq i32 %conv49, 73
  br i1 %SwitchLeaf63, label %sw.bb.66, label %NewDefault.59

LeafBlock.60:                                     ; preds = %NodeBlock.66
  %SwitchLeaf61 = icmp eq i32 %conv49, 66
  br i1 %SwitchLeaf61, label %sw.bb.50, label %NewDefault.59

sw.bb.50:                                         ; preds = %LeafBlock.60
  %41 = load i64, i64* %lu, align 8, !dbg !5420, !tbaa !1603
  %cmp51 = icmp ugt i64 %41, 255, !dbg !5422
  br i1 %cmp51, label %if.then.53, label %if.end.54, !dbg !5423

if.then.53:                                       ; preds = %sw.bb.50
  br label %err_range, !dbg !5424

if.end.54:                                        ; preds = %sw.bb.50
  %42 = load i64, i64* %lu, align 8, !dbg !5426, !tbaa !1603
  %conv55 = trunc i64 %42 to i8, !dbg !5427
  %43 = load i8*, i8** %ptr.addr, align 8, !dbg !5428, !tbaa !1534
  store i8 %conv55, i8* %43, align 1, !dbg !5429, !tbaa !2033
  br label %sw.epilog.81, !dbg !5430

sw.bb.56:                                         ; preds = %NodeBlock.64
  %44 = load i64, i64* %lu, align 8, !dbg !5431, !tbaa !1603
  %cmp57 = icmp ugt i64 %44, 65535, !dbg !5433
  br i1 %cmp57, label %if.then.59, label %if.end.60, !dbg !5434

if.then.59:                                       ; preds = %sw.bb.56
  br label %err_range, !dbg !5435

if.end.60:                                        ; preds = %sw.bb.56
  br label %do.body.61, !dbg !5437

do.body.61:                                       ; preds = %if.end.60
  %45 = bitcast i16* %x62 to i8*, !dbg !5438
  call void @llvm.lifetime.start(i64 2, i8* %45) #3, !dbg !5438
  call void @llvm.dbg.declare(metadata i16* %x62, metadata !901, metadata !1538), !dbg !5440
  %46 = load i64, i64* %lu, align 8, !dbg !5441, !tbaa !1603
  %conv63 = trunc i64 %46 to i16, !dbg !5442
  store i16 %conv63, i16* %x62, align 2, !dbg !5443, !tbaa !4472
  %47 = load i8*, i8** %ptr.addr, align 8, !dbg !5444, !tbaa !1534
  %48 = bitcast i16* %x62 to i8*, !dbg !5445
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 2, i32 1, i1 false), !dbg !5446
  %49 = bitcast i16* %x62 to i8*, !dbg !5447
  call void @llvm.lifetime.end(i64 2, i8* %49) #3, !dbg !5447
  br label %do.cond.64, !dbg !5448

do.cond.64:                                       ; preds = %do.body.61
  br label %do.end.65, !dbg !5449

do.end.65:                                        ; preds = %do.cond.64
  br label %sw.epilog.81, !dbg !5451

sw.bb.66:                                         ; preds = %LeafBlock.62
  %50 = load i64, i64* %lu, align 8, !dbg !5453, !tbaa !1603
  %cmp67 = icmp ugt i64 %50, 4294967295, !dbg !5455
  br i1 %cmp67, label %if.then.69, label %if.end.70, !dbg !5456

if.then.69:                                       ; preds = %sw.bb.66
  br label %err_range, !dbg !5457

if.end.70:                                        ; preds = %sw.bb.66
  br label %do.body.71, !dbg !5459

do.body.71:                                       ; preds = %if.end.70
  %51 = bitcast i32* %x72 to i8*, !dbg !5460
  call void @llvm.lifetime.start(i64 4, i8* %51) #3, !dbg !5460
  call void @llvm.dbg.declare(metadata i32* %x72, metadata !904, metadata !1538), !dbg !5462
  %52 = load i64, i64* %lu, align 8, !dbg !5463, !tbaa !1603
  %conv73 = trunc i64 %52 to i32, !dbg !5464
  store i32 %conv73, i32* %x72, align 4, !dbg !5465, !tbaa !1580
  %53 = load i8*, i8** %ptr.addr, align 8, !dbg !5466, !tbaa !1534
  %54 = bitcast i32* %x72 to i8*, !dbg !5467
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 4, i32 1, i1 false), !dbg !5468
  %55 = bitcast i32* %x72 to i8*, !dbg !5469
  call void @llvm.lifetime.end(i64 4, i8* %55) #3, !dbg !5469
  br label %do.cond.74, !dbg !5470

do.cond.74:                                       ; preds = %do.body.71
  br label %do.end.75, !dbg !5471

do.end.75:                                        ; preds = %do.cond.74
  br label %sw.epilog.81, !dbg !5473

NewDefault.59:                                    ; preds = %LeafBlock.62, %LeafBlock.60
  br label %sw.default.76

sw.default.76:                                    ; preds = %NewDefault.59
  br label %do.body.77, !dbg !5474

do.body.77:                                       ; preds = %sw.default.76
  %56 = bitcast i64* %x78 to i8*, !dbg !5475
  call void @llvm.lifetime.start(i64 8, i8* %56) #3, !dbg !5475
  call void @llvm.dbg.declare(metadata i64* %x78, metadata !906, metadata !1538), !dbg !5477
  %57 = load i64, i64* %lu, align 8, !dbg !5478, !tbaa !1603
  store i64 %57, i64* %x78, align 8, !dbg !5479, !tbaa !1603
  %58 = load i8*, i8** %ptr.addr, align 8, !dbg !5480, !tbaa !1534
  %59 = bitcast i64* %x78 to i8*, !dbg !5481
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %58, i8* %59, i64 8, i32 1, i1 false), !dbg !5482
  %60 = bitcast i64* %x78 to i8*, !dbg !5483
  call void @llvm.lifetime.end(i64 8, i8* %60) #3, !dbg !5483
  br label %do.cond.79, !dbg !5484

do.cond.79:                                       ; preds = %do.body.77
  br label %do.end.80, !dbg !5485

do.end.80:                                        ; preds = %do.cond.79
  br label %sw.epilog.81, !dbg !5487

sw.epilog.81:                                     ; preds = %do.end.80, %do.end.75, %do.end.65, %if.end.54
  br label %sw.epilog.196, !dbg !5488

sw.bb.82:                                         ; preds = %LeafBlock.40
  %61 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !5489, !tbaa !1534
  %call83 = call i64 @pylong_as_lld(%struct._object* %61), !dbg !5490
  store i64 %call83, i64* %lld, align 8, !dbg !5491, !tbaa !4575
  %62 = load i64, i64* %lld, align 8, !dbg !5492, !tbaa !4575
  %cmp84 = icmp eq i64 %62, -1, !dbg !5494
  br i1 %cmp84, label %land.lhs.true.86, label %if.end.90, !dbg !5495

land.lhs.true.86:                                 ; preds = %sw.bb.82
  %call87 = call %struct._object* @PyErr_Occurred(), !dbg !5496
  %tobool88 = icmp ne %struct._object* %call87, null, !dbg !5496
  br i1 %tobool88, label %if.then.89, label %if.end.90, !dbg !5498

if.then.89:                                       ; preds = %land.lhs.true.86
  br label %err_occurred, !dbg !5499

if.end.90:                                        ; preds = %land.lhs.true.86, %sw.bb.82
  br label %do.body.91, !dbg !5500

do.body.91:                                       ; preds = %if.end.90
  %63 = bitcast i64* %x92 to i8*, !dbg !5501
  call void @llvm.lifetime.start(i64 8, i8* %63) #3, !dbg !5501
  call void @llvm.dbg.declare(metadata i64* %x92, metadata !908, metadata !1538), !dbg !5503
  %64 = load i64, i64* %lld, align 8, !dbg !5504, !tbaa !4575
  store i64 %64, i64* %x92, align 8, !dbg !5505, !tbaa !4575
  %65 = load i8*, i8** %ptr.addr, align 8, !dbg !5506, !tbaa !1534
  %66 = bitcast i64* %x92 to i8*, !dbg !5507
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %65, i8* %66, i64 8, i32 1, i1 false), !dbg !5508
  %67 = bitcast i64* %x92 to i8*, !dbg !5509
  call void @llvm.lifetime.end(i64 8, i8* %67) #3, !dbg !5509
  br label %do.cond.93, !dbg !5510

do.cond.93:                                       ; preds = %do.body.91
  br label %do.end.94, !dbg !5511

do.end.94:                                        ; preds = %do.cond.93
  br label %sw.epilog.196, !dbg !5513

sw.bb.95:                                         ; preds = %LeafBlock.13
  %68 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !5514, !tbaa !1534
  %call96 = call i64 @pylong_as_llu(%struct._object* %68), !dbg !5515
  store i64 %call96, i64* %llu, align 8, !dbg !5516, !tbaa !4575
  %69 = load i64, i64* %llu, align 8, !dbg !5517, !tbaa !4575
  %cmp97 = icmp eq i64 %69, -1, !dbg !5519
  br i1 %cmp97, label %land.lhs.true.99, label %if.end.103, !dbg !5520

land.lhs.true.99:                                 ; preds = %sw.bb.95
  %call100 = call %struct._object* @PyErr_Occurred(), !dbg !5521
  %tobool101 = icmp ne %struct._object* %call100, null, !dbg !5521
  br i1 %tobool101, label %if.then.102, label %if.end.103, !dbg !5523

if.then.102:                                      ; preds = %land.lhs.true.99
  br label %err_occurred, !dbg !5524

if.end.103:                                       ; preds = %land.lhs.true.99, %sw.bb.95
  br label %do.body.104, !dbg !5525

do.body.104:                                      ; preds = %if.end.103
  %70 = bitcast i64* %x105 to i8*, !dbg !5526
  call void @llvm.lifetime.start(i64 8, i8* %70) #3, !dbg !5526
  call void @llvm.dbg.declare(metadata i64* %x105, metadata !910, metadata !1538), !dbg !5528
  %71 = load i64, i64* %llu, align 8, !dbg !5529, !tbaa !4575
  store i64 %71, i64* %x105, align 8, !dbg !5530, !tbaa !4575
  %72 = load i8*, i8** %ptr.addr, align 8, !dbg !5531, !tbaa !1534
  %73 = bitcast i64* %x105 to i8*, !dbg !5532
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %72, i8* %73, i64 8, i32 1, i1 false), !dbg !5533
  %74 = bitcast i64* %x105 to i8*, !dbg !5534
  call void @llvm.lifetime.end(i64 8, i8* %74) #3, !dbg !5534
  br label %do.cond.106, !dbg !5535

do.cond.106:                                      ; preds = %do.body.104
  br label %do.end.107, !dbg !5536

do.end.107:                                       ; preds = %do.cond.106
  br label %sw.epilog.196, !dbg !5538

sw.bb.108:                                        ; preds = %LeafBlock.38
  %75 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !5539, !tbaa !1534
  %call109 = call i64 @pylong_as_zd(%struct._object* %75), !dbg !5540
  store i64 %call109, i64* %zd, align 8, !dbg !5541, !tbaa !1603
  %76 = load i64, i64* %zd, align 8, !dbg !5542, !tbaa !1603
  %cmp110 = icmp eq i64 %76, -1, !dbg !5544
  br i1 %cmp110, label %land.lhs.true.112, label %if.end.116, !dbg !5545

land.lhs.true.112:                                ; preds = %sw.bb.108
  %call113 = call %struct._object* @PyErr_Occurred(), !dbg !5546
  %tobool114 = icmp ne %struct._object* %call113, null, !dbg !5546
  br i1 %tobool114, label %if.then.115, label %if.end.116, !dbg !5548

if.then.115:                                      ; preds = %land.lhs.true.112
  br label %err_occurred, !dbg !5549

if.end.116:                                       ; preds = %land.lhs.true.112, %sw.bb.108
  br label %do.body.117, !dbg !5550

do.body.117:                                      ; preds = %if.end.116
  %77 = bitcast i64* %x118 to i8*, !dbg !5551
  call void @llvm.lifetime.start(i64 8, i8* %77) #3, !dbg !5551
  call void @llvm.dbg.declare(metadata i64* %x118, metadata !912, metadata !1538), !dbg !5553
  %78 = load i64, i64* %zd, align 8, !dbg !5554, !tbaa !1603
  store i64 %78, i64* %x118, align 8, !dbg !5555, !tbaa !1603
  %79 = load i8*, i8** %ptr.addr, align 8, !dbg !5556, !tbaa !1534
  %80 = bitcast i64* %x118 to i8*, !dbg !5557
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %79, i8* %80, i64 8, i32 1, i1 false), !dbg !5558
  %81 = bitcast i64* %x118 to i8*, !dbg !5559
  call void @llvm.lifetime.end(i64 8, i8* %81) #3, !dbg !5559
  br label %do.cond.119, !dbg !5560

do.cond.119:                                      ; preds = %do.body.117
  br label %do.end.120, !dbg !5561

do.end.120:                                       ; preds = %do.cond.119
  br label %sw.epilog.196, !dbg !5563

sw.bb.121:                                        ; preds = %LeafBlock.9
  %82 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !5564, !tbaa !1534
  %call122 = call i64 @pylong_as_zu(%struct._object* %82), !dbg !5565
  store i64 %call122, i64* %zu, align 8, !dbg !5566, !tbaa !1603
  %83 = load i64, i64* %zu, align 8, !dbg !5567, !tbaa !1603
  %cmp123 = icmp eq i64 %83, -1, !dbg !5569
  br i1 %cmp123, label %land.lhs.true.125, label %if.end.129, !dbg !5570

land.lhs.true.125:                                ; preds = %sw.bb.121
  %call126 = call %struct._object* @PyErr_Occurred(), !dbg !5571
  %tobool127 = icmp ne %struct._object* %call126, null, !dbg !5571
  br i1 %tobool127, label %if.then.128, label %if.end.129, !dbg !5573

if.then.128:                                      ; preds = %land.lhs.true.125
  br label %err_occurred, !dbg !5574

if.end.129:                                       ; preds = %land.lhs.true.125, %sw.bb.121
  br label %do.body.130, !dbg !5575

do.body.130:                                      ; preds = %if.end.129
  %84 = bitcast i64* %x131 to i8*, !dbg !5576
  call void @llvm.lifetime.start(i64 8, i8* %84) #3, !dbg !5576
  call void @llvm.dbg.declare(metadata i64* %x131, metadata !914, metadata !1538), !dbg !5578
  %85 = load i64, i64* %zu, align 8, !dbg !5579, !tbaa !1603
  store i64 %85, i64* %x131, align 8, !dbg !5580, !tbaa !1603
  %86 = load i8*, i8** %ptr.addr, align 8, !dbg !5581, !tbaa !1534
  %87 = bitcast i64* %x131 to i8*, !dbg !5582
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 8, i32 1, i1 false), !dbg !5583
  %88 = bitcast i64* %x131 to i8*, !dbg !5584
  call void @llvm.lifetime.end(i64 8, i8* %88) #3, !dbg !5584
  br label %do.cond.132, !dbg !5585

do.cond.132:                                      ; preds = %do.body.130
  br label %do.end.133, !dbg !5586

do.end.133:                                       ; preds = %do.cond.132
  br label %sw.epilog.196, !dbg !5588

sw.bb.134:                                        ; preds = %LeafBlock.25, %LeafBlock.23
  %89 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !5589, !tbaa !1534
  %call135 = call double @PyFloat_AsDouble(%struct._object* %89), !dbg !5590
  store double %call135, double* %d, align 8, !dbg !5591, !tbaa !4636
  %90 = load double, double* %d, align 8, !dbg !5592, !tbaa !4636
  %cmp136 = fcmp oeq double %90, -1.000000e+00, !dbg !5594
  br i1 %cmp136, label %land.lhs.true.138, label %if.end.142, !dbg !5595

land.lhs.true.138:                                ; preds = %sw.bb.134
  %call139 = call %struct._object* @PyErr_Occurred(), !dbg !5596
  %tobool140 = icmp ne %struct._object* %call139, null, !dbg !5596
  br i1 %tobool140, label %if.then.141, label %if.end.142, !dbg !5598

if.then.141:                                      ; preds = %land.lhs.true.138
  br label %err_occurred, !dbg !5599

if.end.142:                                       ; preds = %land.lhs.true.138, %sw.bb.134
  %91 = load i8*, i8** %fmt.addr, align 8, !dbg !5600, !tbaa !1534
  %arrayidx143 = getelementptr i8, i8* %91, i64 0, !dbg !5600
  %92 = load i8, i8* %arrayidx143, align 1, !dbg !5600, !tbaa !2033
  %conv144 = sext i8 %92 to i32, !dbg !5600
  %cmp145 = icmp eq i32 %conv144, 102, !dbg !5601
  br i1 %cmp145, label %if.then.147, label %if.else, !dbg !5602

if.then.147:                                      ; preds = %if.end.142
  br label %do.body.148, !dbg !5603

do.body.148:                                      ; preds = %if.then.147
  %93 = bitcast float* %x149 to i8*, !dbg !5604
  call void @llvm.lifetime.start(i64 4, i8* %93) #3, !dbg !5604
  call void @llvm.dbg.declare(metadata float* %x149, metadata !916, metadata !1538), !dbg !5606
  %94 = load double, double* %d, align 8, !dbg !5607, !tbaa !4636
  %conv150 = fptrunc double %94 to float, !dbg !5608
  store float %conv150, float* %x149, align 4, !dbg !5609, !tbaa !4633
  %95 = load i8*, i8** %ptr.addr, align 8, !dbg !5610, !tbaa !1534
  %96 = bitcast float* %x149 to i8*, !dbg !5611
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %95, i8* %96, i64 4, i32 1, i1 false), !dbg !5612
  %97 = bitcast float* %x149 to i8*, !dbg !5613
  call void @llvm.lifetime.end(i64 4, i8* %97) #3, !dbg !5613
  br label %do.cond.151, !dbg !5614

do.cond.151:                                      ; preds = %do.body.148
  br label %do.end.152, !dbg !5615

do.end.152:                                       ; preds = %do.cond.151
  br label %if.end.157, !dbg !5617

if.else:                                          ; preds = %if.end.142
  br label %do.body.153, !dbg !5618

do.body.153:                                      ; preds = %if.else
  %98 = bitcast double* %x154 to i8*, !dbg !5619
  call void @llvm.lifetime.start(i64 8, i8* %98) #3, !dbg !5619
  call void @llvm.dbg.declare(metadata double* %x154, metadata !920, metadata !1538), !dbg !5621
  %99 = load double, double* %d, align 8, !dbg !5622, !tbaa !4636
  store double %99, double* %x154, align 8, !dbg !5623, !tbaa !4636
  %100 = load i8*, i8** %ptr.addr, align 8, !dbg !5624, !tbaa !1534
  %101 = bitcast double* %x154 to i8*, !dbg !5625
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %100, i8* %101, i64 8, i32 1, i1 false), !dbg !5626
  %102 = bitcast double* %x154 to i8*, !dbg !5627
  call void @llvm.lifetime.end(i64 8, i8* %102) #3, !dbg !5627
  br label %do.cond.155, !dbg !5628

do.cond.155:                                      ; preds = %do.body.153
  br label %do.end.156, !dbg !5629

do.end.156:                                       ; preds = %do.cond.155
  br label %if.end.157

if.end.157:                                       ; preds = %do.end.156, %do.end.152
  br label %sw.epilog.196, !dbg !5631

sw.bb.158:                                        ; preds = %LeafBlock
  %103 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !5632, !tbaa !1534
  %call159 = call i32 @PyObject_IsTrue(%struct._object* %103), !dbg !5633
  %conv160 = sext i32 %call159 to i64, !dbg !5633
  store i64 %conv160, i64* %ld, align 8, !dbg !5634, !tbaa !1603
  %104 = load i64, i64* %ld, align 8, !dbg !5635, !tbaa !1603
  %cmp161 = icmp slt i64 %104, 0, !dbg !5637
  br i1 %cmp161, label %if.then.163, label %if.end.164, !dbg !5638

if.then.163:                                      ; preds = %sw.bb.158
  store i32 -1, i32* %retval, !dbg !5639
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5639

if.end.164:                                       ; preds = %sw.bb.158
  br label %do.body.165, !dbg !5640

do.body.165:                                      ; preds = %if.end.164
  call void @llvm.lifetime.start(i64 1, i8* %x166) #3, !dbg !5641
  call void @llvm.dbg.declare(metadata i8* %x166, metadata !923, metadata !1538), !dbg !5642
  %105 = load i64, i64* %ld, align 8, !dbg !5643, !tbaa !1603
  %tobool167 = icmp ne i64 %105, 0, !dbg !5645
  %frombool = zext i1 %tobool167 to i8, !dbg !5646
  store i8 %frombool, i8* %x166, align 1, !dbg !5646, !tbaa !4516
  %106 = load i8*, i8** %ptr.addr, align 8, !dbg !5647, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %106, i8* %x166, i64 1, i32 1, i1 false), !dbg !5648
  call void @llvm.lifetime.end(i64 1, i8* %x166) #3, !dbg !5649
  br label %do.cond.168, !dbg !5650

do.cond.168:                                      ; preds = %do.body.165
  br label %do.end.169, !dbg !5651

do.end.169:                                       ; preds = %do.cond.168
  br label %sw.epilog.196, !dbg !5653

sw.bb.170:                                        ; preds = %NodeBlock.21
  %107 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !5654, !tbaa !1534
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %107, i32 0, i32 1, !dbg !5656
  %108 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5656, !tbaa !1650
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %108, i32 0, i32 19, !dbg !5657
  %109 = load i64, i64* %tp_flags, align 8, !dbg !5657, !tbaa !4742
  %and = and i64 %109, 134217728, !dbg !5658
  %cmp171 = icmp ne i64 %and, 0, !dbg !5659
  br i1 %cmp171, label %if.end.175, label %if.then.173, !dbg !5660

if.then.173:                                      ; preds = %sw.bb.170
  %110 = load i8*, i8** %fmt.addr, align 8, !dbg !5661, !tbaa !1534
  %call174 = call i32 @type_error_int(i8* %110), !dbg !5662
  store i32 %call174, i32* %retval, !dbg !5663
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5663

if.end.175:                                       ; preds = %sw.bb.170
  %111 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !5664, !tbaa !1534
  %112 = bitcast %struct._object* %111 to %struct.PyVarObject*, !dbg !5666
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %112, i32 0, i32 1, !dbg !5667
  %113 = load i64, i64* %ob_size, align 8, !dbg !5667, !tbaa !4750
  %cmp176 = icmp ne i64 %113, 1, !dbg !5668
  br i1 %cmp176, label %if.then.178, label %if.end.180, !dbg !5669

if.then.178:                                      ; preds = %if.end.175
  %114 = load i8*, i8** %fmt.addr, align 8, !dbg !5670, !tbaa !1534
  %call179 = call i32 @value_error_int(i8* %114), !dbg !5671
  store i32 %call179, i32* %retval, !dbg !5672
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5672

if.end.180:                                       ; preds = %if.end.175
  %115 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !5673, !tbaa !1534
  %116 = bitcast %struct._object* %115 to %struct.PyBytesObject*, !dbg !5674
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %116, i32 0, i32 2, !dbg !5675
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !5676
  %arrayidx181 = getelementptr i8, i8* %arraydecay, i64 0, !dbg !5677
  %117 = load i8, i8* %arrayidx181, align 1, !dbg !5677, !tbaa !2033
  %118 = load i8*, i8** %ptr.addr, align 8, !dbg !5678, !tbaa !1534
  store i8 %117, i8* %118, align 1, !dbg !5679, !tbaa !2033
  br label %sw.epilog.196, !dbg !5680

sw.bb.182:                                        ; preds = %NodeBlock.15
  %119 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !5681, !tbaa !1534
  %call183 = call i8* @PyLong_AsVoidPtr(%struct._object* %119), !dbg !5682
  store i8* %call183, i8** %p, align 8, !dbg !5683, !tbaa !1534
  %120 = load i8*, i8** %p, align 8, !dbg !5684, !tbaa !1534
  %cmp184 = icmp eq i8* %120, null, !dbg !5686
  br i1 %cmp184, label %land.lhs.true.186, label %if.end.190, !dbg !5687

land.lhs.true.186:                                ; preds = %sw.bb.182
  %call187 = call %struct._object* @PyErr_Occurred(), !dbg !5688
  %tobool188 = icmp ne %struct._object* %call187, null, !dbg !5688
  br i1 %tobool188, label %if.then.189, label %if.end.190, !dbg !5690

if.then.189:                                      ; preds = %land.lhs.true.186
  br label %err_occurred, !dbg !5691

if.end.190:                                       ; preds = %land.lhs.true.186, %sw.bb.182
  br label %do.body.191, !dbg !5692

do.body.191:                                      ; preds = %if.end.190
  %121 = bitcast i8** %x192 to i8*, !dbg !5693
  call void @llvm.lifetime.start(i64 8, i8* %121) #3, !dbg !5693
  call void @llvm.dbg.declare(metadata i8** %x192, metadata !925, metadata !1538), !dbg !5695
  %122 = load i8*, i8** %p, align 8, !dbg !5696, !tbaa !1534
  store i8* %122, i8** %x192, align 8, !dbg !5697, !tbaa !1534
  %123 = load i8*, i8** %ptr.addr, align 8, !dbg !5698, !tbaa !1534
  %124 = bitcast i8** %x192 to i8*, !dbg !5699
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %123, i8* %124, i64 8, i32 1, i1 false), !dbg !5700
  %125 = bitcast i8** %x192 to i8*, !dbg !5701
  call void @llvm.lifetime.end(i64 8, i8* %125) #3, !dbg !5701
  br label %do.cond.193, !dbg !5702

do.cond.193:                                      ; preds = %do.body.191
  br label %do.end.194, !dbg !5703

do.end.194:                                       ; preds = %do.cond.193
  br label %sw.epilog.196, !dbg !5705

NewDefault:                                       ; preds = %LeafBlock.40, %LeafBlock.38, %LeafBlock.34, %LeafBlock.31, %LeafBlock.25, %LeafBlock.23, %LeafBlock.13, %LeafBlock.9, %LeafBlock.7, %LeafBlock.3, %LeafBlock.1, %LeafBlock
  br label %sw.default.195

sw.default.195:                                   ; preds = %NewDefault
  br label %err_format, !dbg !5706

sw.epilog.196:                                    ; preds = %do.end.194, %if.end.180, %do.end.169, %if.end.157, %do.end.133, %do.end.120, %do.end.107, %do.end.94, %sw.epilog.81, %sw.epilog
  store i32 0, i32* %retval, !dbg !5707
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5707

err_occurred:                                     ; preds = %if.then.189, %if.then.141, %if.then.128, %if.then.115, %if.then.102, %if.then.89, %if.then.46, %if.then
  %126 = load i8*, i8** %fmt.addr, align 8, !dbg !5708, !tbaa !1534
  %call197 = call i32 @fix_error_int(i8* %126), !dbg !5709
  store i32 %call197, i32* %retval, !dbg !5710
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5710

err_range:                                        ; preds = %if.then.69, %if.then.59, %if.then.53, %if.then.28, %if.then.19, %if.then.10
  %127 = load i8*, i8** %fmt.addr, align 8, !dbg !5711, !tbaa !1534
  %call198 = call i32 @value_error_int(i8* %127), !dbg !5712
  store i32 %call198, i32* %retval, !dbg !5713
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5713

err_format:                                       ; preds = %sw.default.195
  %128 = load %struct._object*, %struct._object** @PyExc_NotImplementedError, align 8, !dbg !5714, !tbaa !1534
  %129 = load i8*, i8** %fmt.addr, align 8, !dbg !5715, !tbaa !1534
  %call199 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %128, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.22, i32 0, i32 0), i8* %129), !dbg !5716
  store i32 -1, i32* %retval, !dbg !5717
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5717

cleanup:                                          ; preds = %err_format, %err_range, %err_occurred, %sw.epilog.196, %if.then.178, %if.then.173, %if.then.163
  %130 = bitcast i8** %p to i8*, !dbg !5718
  call void @llvm.lifetime.end(i64 8, i8* %130) #3, !dbg !5718
  %131 = bitcast double* %d to i8*, !dbg !5718
  call void @llvm.lifetime.end(i64 8, i8* %131) #3, !dbg !5718
  %132 = bitcast i64* %zd to i8*, !dbg !5718
  call void @llvm.lifetime.end(i64 8, i8* %132) #3, !dbg !5718
  %133 = bitcast i64* %ld to i8*, !dbg !5718
  call void @llvm.lifetime.end(i64 8, i8* %133) #3, !dbg !5718
  %134 = bitcast i64* %lld to i8*, !dbg !5718
  call void @llvm.lifetime.end(i64 8, i8* %134) #3, !dbg !5718
  %135 = bitcast i64* %zu to i8*, !dbg !5718
  call void @llvm.lifetime.end(i64 8, i8* %135) #3, !dbg !5718
  %136 = bitcast i64* %lu to i8*, !dbg !5718
  call void @llvm.lifetime.end(i64 8, i8* %136) #3, !dbg !5718
  %137 = bitcast i64* %llu to i8*, !dbg !5718
  call void @llvm.lifetime.end(i64 8, i8* %137) #3, !dbg !5718
  %138 = load i32, i32* %retval, !dbg !5718
  ret i32 %138, !dbg !5718
}

; Function Attrs: nounwind uwtable
define internal i32 @copy_single(%struct.bufferinfo* %dest, %struct.bufferinfo* %src) #0 {
entry:
  %retval = alloca i32, align 4
  %dest.addr = alloca %struct.bufferinfo*, align 8
  %src.addr = alloca %struct.bufferinfo*, align 8
  %mem = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.bufferinfo* %dest, %struct.bufferinfo** %dest.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %dest.addr, metadata !992, metadata !1538), !dbg !5719
  store %struct.bufferinfo* %src, %struct.bufferinfo** %src.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %src.addr, metadata !993, metadata !1538), !dbg !5720
  %0 = bitcast i8** %mem to i8*, !dbg !5721
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !5721
  call void @llvm.dbg.declare(metadata i8** %mem, metadata !994, metadata !1538), !dbg !5722
  store i8* null, i8** %mem, align 8, !dbg !5722, !tbaa !1534
  %1 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !5723, !tbaa !1534
  %2 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !5725, !tbaa !1534
  %call = call i32 @equiv_structure(%struct.bufferinfo* %1, %struct.bufferinfo* %2), !dbg !5726
  %tobool = icmp ne i32 %call, 0, !dbg !5726
  br i1 %tobool, label %if.end, label %if.then, !dbg !5727

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !5728
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5728

if.end:                                           ; preds = %entry
  %3 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !5729, !tbaa !1534
  %4 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !5731, !tbaa !1534
  %call1 = call i32 @last_dim_is_contiguous(%struct.bufferinfo* %3, %struct.bufferinfo* %4), !dbg !5732
  %tobool2 = icmp ne i32 %call1, 0, !dbg !5732
  br i1 %tobool2, label %if.end.8, label %if.then.3, !dbg !5733

if.then.3:                                        ; preds = %if.end
  %5 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !5734, !tbaa !1534
  %shape = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %5, i32 0, i32 7, !dbg !5736
  %6 = load i64*, i64** %shape, align 8, !dbg !5736, !tbaa !2308
  %arrayidx = getelementptr i64, i64* %6, i64 0, !dbg !5734
  %7 = load i64, i64* %arrayidx, align 8, !dbg !5734, !tbaa !1603
  %8 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !5737, !tbaa !1534
  %itemsize = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %8, i32 0, i32 3, !dbg !5738
  %9 = load i64, i64* %itemsize, align 8, !dbg !5738, !tbaa !2289
  %mul = mul i64 %7, %9, !dbg !5739
  %call4 = call i8* @PyMem_Malloc(i64 %mul), !dbg !5740
  store i8* %call4, i8** %mem, align 8, !dbg !5741, !tbaa !1534
  %10 = load i8*, i8** %mem, align 8, !dbg !5742, !tbaa !1534
  %cmp = icmp eq i8* %10, null, !dbg !5744
  br i1 %cmp, label %if.then.5, label %if.end.7, !dbg !5745

if.then.5:                                        ; preds = %if.then.3
  %call6 = call %struct._object* @PyErr_NoMemory(), !dbg !5746
  store i32 -1, i32* %retval, !dbg !5748
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5748

if.end.7:                                         ; preds = %if.then.3
  br label %if.end.8, !dbg !5749

if.end.8:                                         ; preds = %if.end.7, %if.end
  %11 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !5750, !tbaa !1534
  %shape9 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %11, i32 0, i32 7, !dbg !5751
  %12 = load i64*, i64** %shape9, align 8, !dbg !5751, !tbaa !2308
  %13 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !5752, !tbaa !1534
  %itemsize10 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %13, i32 0, i32 3, !dbg !5753
  %14 = load i64, i64* %itemsize10, align 8, !dbg !5753, !tbaa !2289
  %15 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !5754, !tbaa !1534
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %15, i32 0, i32 0, !dbg !5755
  %16 = load i8*, i8** %buf, align 8, !dbg !5755, !tbaa !1826
  %17 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !5756, !tbaa !1534
  %strides = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %17, i32 0, i32 8, !dbg !5757
  %18 = load i64*, i64** %strides, align 8, !dbg !5757, !tbaa !2541
  %19 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !5758, !tbaa !1534
  %suboffsets = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %19, i32 0, i32 9, !dbg !5759
  %20 = load i64*, i64** %suboffsets, align 8, !dbg !5759, !tbaa !2334
  %21 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !5760, !tbaa !1534
  %buf11 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %21, i32 0, i32 0, !dbg !5761
  %22 = load i8*, i8** %buf11, align 8, !dbg !5761, !tbaa !1826
  %23 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !5762, !tbaa !1534
  %strides12 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %23, i32 0, i32 8, !dbg !5763
  %24 = load i64*, i64** %strides12, align 8, !dbg !5763, !tbaa !2541
  %25 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !5764, !tbaa !1534
  %suboffsets13 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %25, i32 0, i32 9, !dbg !5765
  %26 = load i64*, i64** %suboffsets13, align 8, !dbg !5765, !tbaa !2334
  %27 = load i8*, i8** %mem, align 8, !dbg !5766, !tbaa !1534
  call void @copy_base(i64* %12, i64 %14, i8* %16, i64* %18, i64* %20, i8* %22, i64* %24, i64* %26, i8* %27), !dbg !5767
  %28 = load i8*, i8** %mem, align 8, !dbg !5768, !tbaa !1534
  %tobool14 = icmp ne i8* %28, null, !dbg !5768
  br i1 %tobool14, label %if.then.15, label %if.end.16, !dbg !5770

if.then.15:                                       ; preds = %if.end.8
  %29 = load i8*, i8** %mem, align 8, !dbg !5771, !tbaa !1534
  call void @PyMem_Free(i8* %29), !dbg !5772
  br label %if.end.16, !dbg !5772

if.end.16:                                        ; preds = %if.then.15, %if.end.8
  store i32 0, i32* %retval, !dbg !5773
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5773

cleanup:                                          ; preds = %if.end.16, %if.then.5, %if.then
  %30 = bitcast i8** %mem to i8*, !dbg !5774
  call void @llvm.lifetime.end(i64 8, i8* %30) #3, !dbg !5774
  %31 = load i32, i32* %retval, !dbg !5774
  ret i32 %31, !dbg !5774
}

; Function Attrs: nounwind uwtable
define internal i64 @pylong_as_ld(%struct._object* %item) #0 {
entry:
  %retval = alloca i64, align 8
  %item.addr = alloca %struct._object*, align 8
  %tmp = alloca %struct._object*, align 8
  %ld = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %item, %struct._object** %item.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._object** %item.addr, metadata !931, metadata !1538), !dbg !5775
  %0 = bitcast %struct._object** %tmp to i8*, !dbg !5776
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !5776
  call void @llvm.dbg.declare(metadata %struct._object** %tmp, metadata !932, metadata !1538), !dbg !5777
  %1 = bitcast i64* %ld to i8*, !dbg !5778
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !5778
  call void @llvm.dbg.declare(metadata i64* %ld, metadata !933, metadata !1538), !dbg !5779
  %2 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !5780, !tbaa !1534
  %call = call %struct._object* @PyNumber_Index(%struct._object* %2), !dbg !5781
  store %struct._object* %call, %struct._object** %tmp, align 8, !dbg !5782, !tbaa !1534
  %3 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !5783, !tbaa !1534
  %cmp = icmp eq %struct._object* %3, null, !dbg !5785
  br i1 %cmp, label %if.then, label %if.end, !dbg !5786

if.then:                                          ; preds = %entry
  store i64 -1, i64* %retval, !dbg !5787
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5787

if.end:                                           ; preds = %entry
  %4 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !5788, !tbaa !1534
  %call2 = call i64 @PyLong_AsLong(%struct._object* %4), !dbg !5789
  store i64 %call2, i64* %ld, align 8, !dbg !5790, !tbaa !1603
  br label %do.body, !dbg !5791

do.body:                                          ; preds = %if.end
  %5 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5792
  call void @llvm.lifetime.start(i64 8, i8* %5) #3, !dbg !5792
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !934, metadata !1538), !dbg !5794
  %6 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !5795, !tbaa !1534
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8, !dbg !5794, !tbaa !1534
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5796, !tbaa !1534
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !5798
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !5799, !tbaa !1642
  %dec = add i64 %8, -1, !dbg !5799
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5799, !tbaa !1642
  %cmp4 = icmp ne i64 %dec, 0, !dbg !5800
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !5801

if.then.5:                                        ; preds = %do.body
  br label %if.end.6, !dbg !5802

if.else:                                          ; preds = %do.body
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5804, !tbaa !1534
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !5806
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5806, !tbaa !1650
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4, !dbg !5807
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5807, !tbaa !1652
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5808, !tbaa !1534
  call void %11(%struct._object* %12), !dbg !5809
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.5
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5810
  call void @llvm.lifetime.end(i64 8, i8* %13) #3, !dbg !5810
  br label %do.cond, !dbg !5812

do.cond:                                          ; preds = %if.end.6
  br label %do.end, !dbg !5813

do.end:                                           ; preds = %do.cond
  %14 = load i64, i64* %ld, align 8, !dbg !5815, !tbaa !1603
  store i64 %14, i64* %retval, !dbg !5816
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5816

cleanup:                                          ; preds = %do.end, %if.then
  %15 = bitcast i64* %ld to i8*, !dbg !5817
  call void @llvm.lifetime.end(i64 8, i8* %15) #3, !dbg !5817
  %16 = bitcast %struct._object** %tmp to i8*, !dbg !5817
  call void @llvm.lifetime.end(i64 8, i8* %16) #3, !dbg !5817
  %17 = load i64, i64* %retval, !dbg !5817
  ret i64 %17, !dbg !5817
}

; Function Attrs: nounwind uwtable
define internal i64 @pylong_as_lu(%struct._object* %item) #0 {
entry:
  %retval = alloca i64, align 8
  %item.addr = alloca %struct._object*, align 8
  %tmp = alloca %struct._object*, align 8
  %lu = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %item, %struct._object** %item.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._object** %item.addr, metadata !940, metadata !1538), !dbg !5818
  %0 = bitcast %struct._object** %tmp to i8*, !dbg !5819
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !5819
  call void @llvm.dbg.declare(metadata %struct._object** %tmp, metadata !941, metadata !1538), !dbg !5820
  %1 = bitcast i64* %lu to i8*, !dbg !5821
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !5821
  call void @llvm.dbg.declare(metadata i64* %lu, metadata !942, metadata !1538), !dbg !5822
  %2 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !5823, !tbaa !1534
  %call = call %struct._object* @PyNumber_Index(%struct._object* %2), !dbg !5824
  store %struct._object* %call, %struct._object** %tmp, align 8, !dbg !5825, !tbaa !1534
  %3 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !5826, !tbaa !1534
  %cmp = icmp eq %struct._object* %3, null, !dbg !5828
  br i1 %cmp, label %if.then, label %if.end, !dbg !5829

if.then:                                          ; preds = %entry
  store i64 -1, i64* %retval, !dbg !5830
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5830

if.end:                                           ; preds = %entry
  %4 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !5831, !tbaa !1534
  %call2 = call i64 @PyLong_AsUnsignedLong(%struct._object* %4), !dbg !5832
  store i64 %call2, i64* %lu, align 8, !dbg !5833, !tbaa !1603
  br label %do.body, !dbg !5834

do.body:                                          ; preds = %if.end
  %5 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5835
  call void @llvm.lifetime.start(i64 8, i8* %5) #3, !dbg !5835
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !943, metadata !1538), !dbg !5837
  %6 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !5838, !tbaa !1534
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8, !dbg !5837, !tbaa !1534
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5839, !tbaa !1534
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !5841
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !5842, !tbaa !1642
  %dec = add i64 %8, -1, !dbg !5842
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5842, !tbaa !1642
  %cmp4 = icmp ne i64 %dec, 0, !dbg !5843
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !5844

if.then.5:                                        ; preds = %do.body
  br label %if.end.6, !dbg !5845

if.else:                                          ; preds = %do.body
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5847, !tbaa !1534
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !5849
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5849, !tbaa !1650
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4, !dbg !5850
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5850, !tbaa !1652
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5851, !tbaa !1534
  call void %11(%struct._object* %12), !dbg !5852
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.5
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5853
  call void @llvm.lifetime.end(i64 8, i8* %13) #3, !dbg !5853
  br label %do.cond, !dbg !5855

do.cond:                                          ; preds = %if.end.6
  br label %do.end, !dbg !5856

do.end:                                           ; preds = %do.cond
  %14 = load i64, i64* %lu, align 8, !dbg !5858, !tbaa !1603
  store i64 %14, i64* %retval, !dbg !5859
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5859

cleanup:                                          ; preds = %do.end, %if.then
  %15 = bitcast i64* %lu to i8*, !dbg !5860
  call void @llvm.lifetime.end(i64 8, i8* %15) #3, !dbg !5860
  %16 = bitcast %struct._object** %tmp to i8*, !dbg !5860
  call void @llvm.lifetime.end(i64 8, i8* %16) #3, !dbg !5860
  %17 = load i64, i64* %retval, !dbg !5860
  ret i64 %17, !dbg !5860
}

; Function Attrs: nounwind uwtable
define internal i64 @pylong_as_lld(%struct._object* %item) #0 {
entry:
  %retval = alloca i64, align 8
  %item.addr = alloca %struct._object*, align 8
  %tmp = alloca %struct._object*, align 8
  %lld = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %item, %struct._object** %item.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._object** %item.addr, metadata !949, metadata !1538), !dbg !5861
  %0 = bitcast %struct._object** %tmp to i8*, !dbg !5862
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !5862
  call void @llvm.dbg.declare(metadata %struct._object** %tmp, metadata !950, metadata !1538), !dbg !5863
  %1 = bitcast i64* %lld to i8*, !dbg !5864
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !5864
  call void @llvm.dbg.declare(metadata i64* %lld, metadata !951, metadata !1538), !dbg !5865
  %2 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !5866, !tbaa !1534
  %call = call %struct._object* @PyNumber_Index(%struct._object* %2), !dbg !5867
  store %struct._object* %call, %struct._object** %tmp, align 8, !dbg !5868, !tbaa !1534
  %3 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !5869, !tbaa !1534
  %cmp = icmp eq %struct._object* %3, null, !dbg !5871
  br i1 %cmp, label %if.then, label %if.end, !dbg !5872

if.then:                                          ; preds = %entry
  store i64 -1, i64* %retval, !dbg !5873
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5873

if.end:                                           ; preds = %entry
  %4 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !5874, !tbaa !1534
  %call2 = call i64 @PyLong_AsLongLong(%struct._object* %4), !dbg !5875
  store i64 %call2, i64* %lld, align 8, !dbg !5876, !tbaa !4575
  br label %do.body, !dbg !5877

do.body:                                          ; preds = %if.end
  %5 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5878
  call void @llvm.lifetime.start(i64 8, i8* %5) #3, !dbg !5878
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !952, metadata !1538), !dbg !5880
  %6 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !5881, !tbaa !1534
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8, !dbg !5880, !tbaa !1534
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5882, !tbaa !1534
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !5884
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !5885, !tbaa !1642
  %dec = add i64 %8, -1, !dbg !5885
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5885, !tbaa !1642
  %cmp4 = icmp ne i64 %dec, 0, !dbg !5886
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !5887

if.then.5:                                        ; preds = %do.body
  br label %if.end.6, !dbg !5888

if.else:                                          ; preds = %do.body
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5890, !tbaa !1534
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !5892
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5892, !tbaa !1650
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4, !dbg !5893
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5893, !tbaa !1652
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5894, !tbaa !1534
  call void %11(%struct._object* %12), !dbg !5895
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.5
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5896
  call void @llvm.lifetime.end(i64 8, i8* %13) #3, !dbg !5896
  br label %do.cond, !dbg !5898

do.cond:                                          ; preds = %if.end.6
  br label %do.end, !dbg !5899

do.end:                                           ; preds = %do.cond
  %14 = load i64, i64* %lld, align 8, !dbg !5901, !tbaa !4575
  store i64 %14, i64* %retval, !dbg !5902
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5902

cleanup:                                          ; preds = %do.end, %if.then
  %15 = bitcast i64* %lld to i8*, !dbg !5903
  call void @llvm.lifetime.end(i64 8, i8* %15) #3, !dbg !5903
  %16 = bitcast %struct._object** %tmp to i8*, !dbg !5903
  call void @llvm.lifetime.end(i64 8, i8* %16) #3, !dbg !5903
  %17 = load i64, i64* %retval, !dbg !5903
  ret i64 %17, !dbg !5903
}

; Function Attrs: nounwind uwtable
define internal i64 @pylong_as_llu(%struct._object* %item) #0 {
entry:
  %retval = alloca i64, align 8
  %item.addr = alloca %struct._object*, align 8
  %tmp = alloca %struct._object*, align 8
  %llu = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %item, %struct._object** %item.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._object** %item.addr, metadata !958, metadata !1538), !dbg !5904
  %0 = bitcast %struct._object** %tmp to i8*, !dbg !5905
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !5905
  call void @llvm.dbg.declare(metadata %struct._object** %tmp, metadata !959, metadata !1538), !dbg !5906
  %1 = bitcast i64* %llu to i8*, !dbg !5907
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !5907
  call void @llvm.dbg.declare(metadata i64* %llu, metadata !960, metadata !1538), !dbg !5908
  %2 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !5909, !tbaa !1534
  %call = call %struct._object* @PyNumber_Index(%struct._object* %2), !dbg !5910
  store %struct._object* %call, %struct._object** %tmp, align 8, !dbg !5911, !tbaa !1534
  %3 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !5912, !tbaa !1534
  %cmp = icmp eq %struct._object* %3, null, !dbg !5914
  br i1 %cmp, label %if.then, label %if.end, !dbg !5915

if.then:                                          ; preds = %entry
  store i64 -1, i64* %retval, !dbg !5916
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5916

if.end:                                           ; preds = %entry
  %4 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !5917, !tbaa !1534
  %call2 = call i64 @PyLong_AsUnsignedLongLong(%struct._object* %4), !dbg !5918
  store i64 %call2, i64* %llu, align 8, !dbg !5919, !tbaa !4575
  br label %do.body, !dbg !5920

do.body:                                          ; preds = %if.end
  %5 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5921
  call void @llvm.lifetime.start(i64 8, i8* %5) #3, !dbg !5921
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !961, metadata !1538), !dbg !5923
  %6 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !5924, !tbaa !1534
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8, !dbg !5923, !tbaa !1534
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5925, !tbaa !1534
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !5927
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !5928, !tbaa !1642
  %dec = add i64 %8, -1, !dbg !5928
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5928, !tbaa !1642
  %cmp4 = icmp ne i64 %dec, 0, !dbg !5929
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !5930

if.then.5:                                        ; preds = %do.body
  br label %if.end.6, !dbg !5931

if.else:                                          ; preds = %do.body
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5933, !tbaa !1534
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !5935
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5935, !tbaa !1650
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4, !dbg !5936
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5936, !tbaa !1652
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5937, !tbaa !1534
  call void %11(%struct._object* %12), !dbg !5938
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.5
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5939
  call void @llvm.lifetime.end(i64 8, i8* %13) #3, !dbg !5939
  br label %do.cond, !dbg !5941

do.cond:                                          ; preds = %if.end.6
  br label %do.end, !dbg !5942

do.end:                                           ; preds = %do.cond
  %14 = load i64, i64* %llu, align 8, !dbg !5944, !tbaa !4575
  store i64 %14, i64* %retval, !dbg !5945
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5945

cleanup:                                          ; preds = %do.end, %if.then
  %15 = bitcast i64* %llu to i8*, !dbg !5946
  call void @llvm.lifetime.end(i64 8, i8* %15) #3, !dbg !5946
  %16 = bitcast %struct._object** %tmp to i8*, !dbg !5946
  call void @llvm.lifetime.end(i64 8, i8* %16) #3, !dbg !5946
  %17 = load i64, i64* %retval, !dbg !5946
  ret i64 %17, !dbg !5946
}

; Function Attrs: nounwind uwtable
define internal i64 @pylong_as_zd(%struct._object* %item) #0 {
entry:
  %retval = alloca i64, align 8
  %item.addr = alloca %struct._object*, align 8
  %tmp = alloca %struct._object*, align 8
  %zd = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %item, %struct._object** %item.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._object** %item.addr, metadata !965, metadata !1538), !dbg !5947
  %0 = bitcast %struct._object** %tmp to i8*, !dbg !5948
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !5948
  call void @llvm.dbg.declare(metadata %struct._object** %tmp, metadata !966, metadata !1538), !dbg !5949
  %1 = bitcast i64* %zd to i8*, !dbg !5950
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !5950
  call void @llvm.dbg.declare(metadata i64* %zd, metadata !967, metadata !1538), !dbg !5951
  %2 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !5952, !tbaa !1534
  %call = call %struct._object* @PyNumber_Index(%struct._object* %2), !dbg !5953
  store %struct._object* %call, %struct._object** %tmp, align 8, !dbg !5954, !tbaa !1534
  %3 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !5955, !tbaa !1534
  %cmp = icmp eq %struct._object* %3, null, !dbg !5957
  br i1 %cmp, label %if.then, label %if.end, !dbg !5958

if.then:                                          ; preds = %entry
  store i64 -1, i64* %retval, !dbg !5959
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5959

if.end:                                           ; preds = %entry
  %4 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !5960, !tbaa !1534
  %call2 = call i64 @PyLong_AsSsize_t(%struct._object* %4), !dbg !5961
  store i64 %call2, i64* %zd, align 8, !dbg !5962, !tbaa !1603
  br label %do.body, !dbg !5963

do.body:                                          ; preds = %if.end
  %5 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5964
  call void @llvm.lifetime.start(i64 8, i8* %5) #3, !dbg !5964
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !968, metadata !1538), !dbg !5966
  %6 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !5967, !tbaa !1534
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8, !dbg !5966, !tbaa !1534
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5968, !tbaa !1534
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !5970
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !5971, !tbaa !1642
  %dec = add i64 %8, -1, !dbg !5971
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5971, !tbaa !1642
  %cmp4 = icmp ne i64 %dec, 0, !dbg !5972
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !5973

if.then.5:                                        ; preds = %do.body
  br label %if.end.6, !dbg !5974

if.else:                                          ; preds = %do.body
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5976, !tbaa !1534
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !5978
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5978, !tbaa !1650
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4, !dbg !5979
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5979, !tbaa !1652
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5980, !tbaa !1534
  call void %11(%struct._object* %12), !dbg !5981
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.5
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5982
  call void @llvm.lifetime.end(i64 8, i8* %13) #3, !dbg !5982
  br label %do.cond, !dbg !5984

do.cond:                                          ; preds = %if.end.6
  br label %do.end, !dbg !5985

do.end:                                           ; preds = %do.cond
  %14 = load i64, i64* %zd, align 8, !dbg !5987, !tbaa !1603
  store i64 %14, i64* %retval, !dbg !5988
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5988

cleanup:                                          ; preds = %do.end, %if.then
  %15 = bitcast i64* %zd to i8*, !dbg !5989
  call void @llvm.lifetime.end(i64 8, i8* %15) #3, !dbg !5989
  %16 = bitcast %struct._object** %tmp to i8*, !dbg !5989
  call void @llvm.lifetime.end(i64 8, i8* %16) #3, !dbg !5989
  %17 = load i64, i64* %retval, !dbg !5989
  ret i64 %17, !dbg !5989
}

; Function Attrs: nounwind uwtable
define internal i64 @pylong_as_zu(%struct._object* %item) #0 {
entry:
  %retval = alloca i64, align 8
  %item.addr = alloca %struct._object*, align 8
  %tmp = alloca %struct._object*, align 8
  %zu = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %item, %struct._object** %item.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._object** %item.addr, metadata !974, metadata !1538), !dbg !5990
  %0 = bitcast %struct._object** %tmp to i8*, !dbg !5991
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !5991
  call void @llvm.dbg.declare(metadata %struct._object** %tmp, metadata !975, metadata !1538), !dbg !5992
  %1 = bitcast i64* %zu to i8*, !dbg !5993
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !5993
  call void @llvm.dbg.declare(metadata i64* %zu, metadata !976, metadata !1538), !dbg !5994
  %2 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !5995, !tbaa !1534
  %call = call %struct._object* @PyNumber_Index(%struct._object* %2), !dbg !5996
  store %struct._object* %call, %struct._object** %tmp, align 8, !dbg !5997, !tbaa !1534
  %3 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !5998, !tbaa !1534
  %cmp = icmp eq %struct._object* %3, null, !dbg !6000
  br i1 %cmp, label %if.then, label %if.end, !dbg !6001

if.then:                                          ; preds = %entry
  store i64 -1, i64* %retval, !dbg !6002
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6002

if.end:                                           ; preds = %entry
  %4 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !6003, !tbaa !1534
  %call2 = call i64 @PyLong_AsSize_t(%struct._object* %4), !dbg !6004
  store i64 %call2, i64* %zu, align 8, !dbg !6005, !tbaa !1603
  br label %do.body, !dbg !6006

do.body:                                          ; preds = %if.end
  %5 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6007
  call void @llvm.lifetime.start(i64 8, i8* %5) #3, !dbg !6007
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !977, metadata !1538), !dbg !6009
  %6 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !6010, !tbaa !1534
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8, !dbg !6009, !tbaa !1534
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6011, !tbaa !1534
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !6013
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !6014, !tbaa !1642
  %dec = add i64 %8, -1, !dbg !6014
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6014, !tbaa !1642
  %cmp4 = icmp ne i64 %dec, 0, !dbg !6015
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !6016

if.then.5:                                        ; preds = %do.body
  br label %if.end.6, !dbg !6017

if.else:                                          ; preds = %do.body
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6019, !tbaa !1534
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !6021
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6021, !tbaa !1650
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4, !dbg !6022
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6022, !tbaa !1652
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6023, !tbaa !1534
  call void %11(%struct._object* %12), !dbg !6024
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.5
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6025
  call void @llvm.lifetime.end(i64 8, i8* %13) #3, !dbg !6025
  br label %do.cond, !dbg !6027

do.cond:                                          ; preds = %if.end.6
  br label %do.end, !dbg !6028

do.end:                                           ; preds = %do.cond
  %14 = load i64, i64* %zu, align 8, !dbg !6030, !tbaa !1603
  store i64 %14, i64* %retval, !dbg !6031
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6031

cleanup:                                          ; preds = %do.end, %if.then
  %15 = bitcast i64* %zu to i8*, !dbg !6032
  call void @llvm.lifetime.end(i64 8, i8* %15) #3, !dbg !6032
  %16 = bitcast %struct._object** %tmp to i8*, !dbg !6032
  call void @llvm.lifetime.end(i64 8, i8* %16) #3, !dbg !6032
  %17 = load i64, i64* %retval, !dbg !6032
  ret i64 %17, !dbg !6032
}

declare double @PyFloat_AsDouble(%struct._object*) #1

declare i32 @PyObject_IsTrue(%struct._object*) #1

; Function Attrs: nounwind uwtable
define internal i32 @type_error_int(i8* %fmt) #0 {
entry:
  %fmt.addr = alloca i8*, align 8
  store i8* %fmt, i8** %fmt.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !983, metadata !1538), !dbg !6033
  %0 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !6034, !tbaa !1534
  %1 = load i8*, i8** %fmt.addr, align 8, !dbg !6035, !tbaa !1534
  %call = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.29, i32 0, i32 0), i8* %1), !dbg !6036
  ret i32 -1, !dbg !6037
}

; Function Attrs: nounwind uwtable
define internal i32 @value_error_int(i8* %fmt) #0 {
entry:
  %fmt.addr = alloca i8*, align 8
  store i8* %fmt, i8** %fmt.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !986, metadata !1538), !dbg !6038
  %0 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6039, !tbaa !1534
  %1 = load i8*, i8** %fmt.addr, align 8, !dbg !6040, !tbaa !1534
  %call = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %0, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.30, i32 0, i32 0), i8* %1), !dbg !6041
  ret i32 -1, !dbg !6042
}

declare i8* @PyLong_AsVoidPtr(%struct._object*) #1

; Function Attrs: nounwind uwtable
define internal i32 @fix_error_int(i8* %fmt) #0 {
entry:
  %retval = alloca i32, align 4
  %fmt.addr = alloca i8*, align 8
  store i8* %fmt, i8** %fmt.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !989, metadata !1538), !dbg !6043
  %0 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !6044, !tbaa !1534
  %call = call i32 @PyErr_ExceptionMatches(%struct._object* %0), !dbg !6046
  %tobool = icmp ne i32 %call, 0, !dbg !6046
  br i1 %tobool, label %if.then, label %if.else, !dbg !6047

if.then:                                          ; preds = %entry
  call void @PyErr_Clear(), !dbg !6048
  %1 = load i8*, i8** %fmt.addr, align 8, !dbg !6050, !tbaa !1534
  %call1 = call i32 @type_error_int(i8* %1), !dbg !6051
  store i32 %call1, i32* %retval, !dbg !6052
  br label %return, !dbg !6052

if.else:                                          ; preds = %entry
  %2 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8, !dbg !6053, !tbaa !1534
  %call2 = call i32 @PyErr_ExceptionMatches(%struct._object* %2), !dbg !6055
  %tobool3 = icmp ne i32 %call2, 0, !dbg !6055
  br i1 %tobool3, label %if.then.6, label %lor.lhs.false, !dbg !6056

lor.lhs.false:                                    ; preds = %if.else
  %3 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6057, !tbaa !1534
  %call4 = call i32 @PyErr_ExceptionMatches(%struct._object* %3), !dbg !6058
  %tobool5 = icmp ne i32 %call4, 0, !dbg !6058
  br i1 %tobool5, label %if.then.6, label %if.end, !dbg !6059

if.then.6:                                        ; preds = %lor.lhs.false, %if.else
  call void @PyErr_Clear(), !dbg !6060
  %4 = load i8*, i8** %fmt.addr, align 8, !dbg !6062, !tbaa !1534
  %call7 = call i32 @value_error_int(i8* %4), !dbg !6063
  store i32 %call7, i32* %retval, !dbg !6064
  br label %return, !dbg !6064

if.end:                                           ; preds = %lor.lhs.false
  br label %if.end.8

if.end.8:                                         ; preds = %if.end
  store i32 -1, i32* %retval, !dbg !6065
  br label %return, !dbg !6065

return:                                           ; preds = %if.end.8, %if.then.6, %if.then
  %5 = load i32, i32* %retval, !dbg !6066
  ret i32 %5, !dbg !6066
}

declare %struct._object* @PyNumber_Index(%struct._object*) #1

declare i64 @PyLong_AsLong(%struct._object*) #1

declare i64 @PyLong_AsUnsignedLong(%struct._object*) #1

declare i64 @PyLong_AsLongLong(%struct._object*) #1

declare i64 @PyLong_AsUnsignedLongLong(%struct._object*) #1

declare i64 @PyLong_AsSsize_t(%struct._object*) #1

declare i64 @PyLong_AsSize_t(%struct._object*) #1

declare i32 @PyErr_ExceptionMatches(%struct._object*) #1

declare void @PyErr_Clear() #1

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @get_native_fmtchar(i8* %result, i8* %fmt) #4 {
entry:
  %retval = alloca i64, align 8
  %result.addr = alloca i8*, align 8
  %fmt.addr = alloca i8*, align 8
  %size = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store i8* %result, i8** %result.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i8** %result.addr, metadata !1010, metadata !1538), !dbg !6067
  store i8* %fmt, i8** %fmt.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !1011, metadata !1538), !dbg !6068
  %0 = bitcast i64* %size to i8*, !dbg !6069
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !6069
  call void @llvm.dbg.declare(metadata i64* %size, metadata !1012, metadata !1538), !dbg !6070
  store i64 -1, i64* %size, align 8, !dbg !6070, !tbaa !1603
  %1 = load i8*, i8** %fmt.addr, align 8, !dbg !6071, !tbaa !1534
  %arrayidx = getelementptr i8, i8* %1, i64 0, !dbg !6071
  %2 = load i8, i8* %arrayidx, align 1, !dbg !6071, !tbaa !2033
  %conv = sext i8 %2 to i32, !dbg !6071
  %cmp = icmp eq i32 %conv, 64, !dbg !6073
  br i1 %cmp, label %if.then, label %if.end, !dbg !6074

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %fmt.addr, align 8, !dbg !6075, !tbaa !1534
  %incdec.ptr = getelementptr i8, i8* %3, i32 1, !dbg !6075
  store i8* %incdec.ptr, i8** %fmt.addr, align 8, !dbg !6075, !tbaa !1534
  br label %if.end, !dbg !6077

if.end:                                           ; preds = %if.then, %entry
  %4 = load i8*, i8** %fmt.addr, align 8, !dbg !6078, !tbaa !1534
  %arrayidx2 = getelementptr i8, i8* %4, i64 0, !dbg !6078
  %5 = load i8, i8* %arrayidx2, align 1, !dbg !6078, !tbaa !2033
  %conv3 = sext i8 %5 to i32, !dbg !6078
  br label %NodeBlock.49

NodeBlock.49:                                     ; preds = %if.end
  %Pivot.50 = icmp slt i32 %conv3, 98
  br i1 %Pivot.50, label %NodeBlock.21, label %NodeBlock.47

NodeBlock.47:                                     ; preds = %NodeBlock.49
  %Pivot.48 = icmp slt i32 %conv3, 105
  br i1 %Pivot.48, label %NodeBlock.31, label %NodeBlock.45

NodeBlock.45:                                     ; preds = %NodeBlock.47
  %Pivot.46 = icmp slt i32 %conv3, 110
  br i1 %Pivot.46, label %NodeBlock.37, label %NodeBlock.43

NodeBlock.43:                                     ; preds = %NodeBlock.45
  %Pivot.44 = icmp slt i32 %conv3, 113
  br i1 %Pivot.44, label %LeafBlock.39, label %LeafBlock.41

LeafBlock.41:                                     ; preds = %NodeBlock.43
  %SwitchLeaf42 = icmp eq i32 %conv3, 113
  br i1 %SwitchLeaf42, label %sw.bb.7, label %NewDefault

LeafBlock.39:                                     ; preds = %NodeBlock.43
  %SwitchLeaf40 = icmp eq i32 %conv3, 110
  br i1 %SwitchLeaf40, label %sw.bb.8, label %NewDefault

NodeBlock.37:                                     ; preds = %NodeBlock.45
  %Pivot.38 = icmp slt i32 %conv3, 108
  br i1 %Pivot.38, label %LeafBlock.33, label %LeafBlock.35

LeafBlock.35:                                     ; preds = %NodeBlock.37
  %SwitchLeaf36 = icmp eq i32 %conv3, 108
  br i1 %SwitchLeaf36, label %sw.bb.6, label %NewDefault

LeafBlock.33:                                     ; preds = %NodeBlock.37
  %SwitchLeaf34 = icmp eq i32 %conv3, 105
  br i1 %SwitchLeaf34, label %sw.bb.5, label %NewDefault

NodeBlock.31:                                     ; preds = %NodeBlock.47
  %Pivot.32 = icmp slt i32 %conv3, 102
  br i1 %Pivot.32, label %NodeBlock.25, label %NodeBlock.29

NodeBlock.29:                                     ; preds = %NodeBlock.31
  %Pivot.30 = icmp slt i32 %conv3, 104
  br i1 %Pivot.30, label %LeafBlock.27, label %sw.bb.4

LeafBlock.27:                                     ; preds = %NodeBlock.29
  %SwitchLeaf28 = icmp eq i32 %conv3, 102
  br i1 %SwitchLeaf28, label %sw.bb.9, label %NewDefault

NodeBlock.25:                                     ; preds = %NodeBlock.31
  %Pivot.26 = icmp slt i32 %conv3, 100
  br i1 %Pivot.26, label %sw.bb, label %LeafBlock.23

LeafBlock.23:                                     ; preds = %NodeBlock.25
  %SwitchLeaf24 = icmp eq i32 %conv3, 100
  br i1 %SwitchLeaf24, label %sw.bb.10, label %NewDefault

NodeBlock.21:                                     ; preds = %NodeBlock.49
  %Pivot.22 = icmp slt i32 %conv3, 76
  br i1 %Pivot.22, label %NodeBlock.7, label %NodeBlock.19

NodeBlock.19:                                     ; preds = %NodeBlock.21
  %Pivot.20 = icmp slt i32 %conv3, 80
  br i1 %Pivot.20, label %NodeBlock.13, label %NodeBlock.17

NodeBlock.17:                                     ; preds = %NodeBlock.19
  %Pivot.18 = icmp slt i32 %conv3, 81
  br i1 %Pivot.18, label %sw.bb.12, label %LeafBlock.15

LeafBlock.15:                                     ; preds = %NodeBlock.17
  %SwitchLeaf16 = icmp eq i32 %conv3, 81
  br i1 %SwitchLeaf16, label %sw.bb.7, label %NewDefault

NodeBlock.13:                                     ; preds = %NodeBlock.19
  %Pivot.14 = icmp slt i32 %conv3, 78
  br i1 %Pivot.14, label %LeafBlock.9, label %LeafBlock.11

LeafBlock.11:                                     ; preds = %NodeBlock.13
  %SwitchLeaf12 = icmp eq i32 %conv3, 78
  br i1 %SwitchLeaf12, label %sw.bb.8, label %NewDefault

LeafBlock.9:                                      ; preds = %NodeBlock.13
  %SwitchLeaf10 = icmp eq i32 %conv3, 76
  br i1 %SwitchLeaf10, label %sw.bb.6, label %NewDefault

NodeBlock.7:                                      ; preds = %NodeBlock.21
  %Pivot.8 = icmp slt i32 %conv3, 72
  br i1 %Pivot.8, label %NodeBlock, label %NodeBlock.5

NodeBlock.5:                                      ; preds = %NodeBlock.7
  %Pivot.6 = icmp slt i32 %conv3, 73
  br i1 %Pivot.6, label %sw.bb.4, label %LeafBlock.3

LeafBlock.3:                                      ; preds = %NodeBlock.5
  %SwitchLeaf4 = icmp eq i32 %conv3, 73
  br i1 %SwitchLeaf4, label %sw.bb.5, label %NewDefault

NodeBlock:                                        ; preds = %NodeBlock.7
  %Pivot = icmp slt i32 %conv3, 66
  br i1 %Pivot, label %LeafBlock, label %LeafBlock.1

LeafBlock.1:                                      ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %conv3, 66
  br i1 %SwitchLeaf2, label %sw.bb, label %NewDefault

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %conv3, 63
  br i1 %SwitchLeaf, label %sw.bb.11, label %NewDefault

sw.bb:                                            ; preds = %NodeBlock.25, %LeafBlock.1
  store i64 1, i64* %size, align 8, !dbg !6079, !tbaa !1603
  br label %sw.epilog, !dbg !6081

sw.bb.4:                                          ; preds = %NodeBlock.29, %NodeBlock.5
  store i64 2, i64* %size, align 8, !dbg !6082, !tbaa !1603
  br label %sw.epilog, !dbg !6083

sw.bb.5:                                          ; preds = %LeafBlock.33, %LeafBlock.3
  store i64 4, i64* %size, align 8, !dbg !6084, !tbaa !1603
  br label %sw.epilog, !dbg !6085

sw.bb.6:                                          ; preds = %LeafBlock.35, %LeafBlock.9
  store i64 8, i64* %size, align 8, !dbg !6086, !tbaa !1603
  br label %sw.epilog, !dbg !6087

sw.bb.7:                                          ; preds = %LeafBlock.41, %LeafBlock.15
  store i64 8, i64* %size, align 8, !dbg !6088, !tbaa !1603
  br label %sw.epilog, !dbg !6089

sw.bb.8:                                          ; preds = %LeafBlock.39, %LeafBlock.11
  store i64 8, i64* %size, align 8, !dbg !6090, !tbaa !1603
  br label %sw.epilog, !dbg !6091

sw.bb.9:                                          ; preds = %LeafBlock.27
  store i64 4, i64* %size, align 8, !dbg !6092, !tbaa !1603
  br label %sw.epilog, !dbg !6093

sw.bb.10:                                         ; preds = %LeafBlock.23
  store i64 8, i64* %size, align 8, !dbg !6094, !tbaa !1603
  br label %sw.epilog, !dbg !6095

sw.bb.11:                                         ; preds = %LeafBlock
  store i64 1, i64* %size, align 8, !dbg !6096, !tbaa !1603
  br label %sw.epilog, !dbg !6097

sw.bb.12:                                         ; preds = %NodeBlock.17
  store i64 8, i64* %size, align 8, !dbg !6098, !tbaa !1603
  br label %sw.epilog, !dbg !6099

NewDefault:                                       ; preds = %LeafBlock.41, %LeafBlock.39, %LeafBlock.35, %LeafBlock.33, %LeafBlock.27, %LeafBlock.23, %LeafBlock.15, %LeafBlock.11, %LeafBlock.9, %LeafBlock.3, %LeafBlock.1, %LeafBlock
  br label %sw.epilog

sw.epilog:                                        ; preds = %NewDefault, %sw.bb.12, %sw.bb.11, %sw.bb.10, %sw.bb.9, %sw.bb.8, %sw.bb.7, %sw.bb.6, %sw.bb.5, %sw.bb.4, %sw.bb
  %6 = load i64, i64* %size, align 8, !dbg !6100, !tbaa !1603
  %cmp13 = icmp sgt i64 %6, 0, !dbg !6102
  br i1 %cmp13, label %land.lhs.true, label %if.end.21, !dbg !6103

land.lhs.true:                                    ; preds = %sw.epilog
  %7 = load i8*, i8** %fmt.addr, align 8, !dbg !6104, !tbaa !1534
  %arrayidx15 = getelementptr i8, i8* %7, i64 1, !dbg !6104
  %8 = load i8, i8* %arrayidx15, align 1, !dbg !6104, !tbaa !2033
  %conv16 = sext i8 %8 to i32, !dbg !6104
  %cmp17 = icmp eq i32 %conv16, 0, !dbg !6106
  br i1 %cmp17, label %if.then.19, label %if.end.21, !dbg !6107

if.then.19:                                       ; preds = %land.lhs.true
  %9 = load i8*, i8** %fmt.addr, align 8, !dbg !6108, !tbaa !1534
  %arrayidx20 = getelementptr i8, i8* %9, i64 0, !dbg !6108
  %10 = load i8, i8* %arrayidx20, align 1, !dbg !6108, !tbaa !2033
  %11 = load i8*, i8** %result.addr, align 8, !dbg !6110, !tbaa !1534
  store i8 %10, i8* %11, align 1, !dbg !6111, !tbaa !2033
  %12 = load i64, i64* %size, align 8, !dbg !6112, !tbaa !1603
  store i64 %12, i64* %retval, !dbg !6113
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6113

if.end.21:                                        ; preds = %land.lhs.true, %sw.epilog
  store i64 -1, i64* %retval, !dbg !6114
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6114

cleanup:                                          ; preds = %if.end.21, %if.then.19
  %13 = bitcast i64* %size to i8*, !dbg !6115
  call void @llvm.lifetime.end(i64 8, i8* %13) #3, !dbg !6115
  %14 = load i64, i64* %retval, !dbg !6115
  ret i64 %14, !dbg !6115
}

declare i64 @PyObject_Hash(%struct._object*) #1

declare i64 @_Py_HashBytes(i8*, i64) #1

; Function Attrs: nounwind uwtable
define internal i32 @memory_getbuf(%struct.PyMemoryViewObject* %self, %struct.bufferinfo* %view, i32 %flags) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.PyMemoryViewObject*, align 8
  %view.addr = alloca %struct.bufferinfo*, align 8
  %flags.addr = alloca i32, align 4
  %base = alloca %struct.bufferinfo*, align 8
  %baseflags = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.PyMemoryViewObject* %self, %struct.PyMemoryViewObject** %self.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %self.addr, metadata !1017, metadata !1538), !dbg !6116
  store %struct.bufferinfo* %view, %struct.bufferinfo** %view.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %view.addr, metadata !1018, metadata !1538), !dbg !6117
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !1580
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !1019, metadata !1538), !dbg !6118
  %0 = bitcast %struct.bufferinfo** %base to i8*, !dbg !6119
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !6119
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %base, metadata !1020, metadata !1538), !dbg !6120
  %1 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !6121, !tbaa !1534
  %view1 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %1, i32 0, i32 5, !dbg !6122
  store %struct.bufferinfo* %view1, %struct.bufferinfo** %base, align 8, !dbg !6120, !tbaa !1534
  %2 = bitcast i32* %baseflags to i8*, !dbg !6123
  call void @llvm.lifetime.start(i64 4, i8* %2) #3, !dbg !6123
  call void @llvm.dbg.declare(metadata i32* %baseflags, metadata !1021, metadata !1538), !dbg !6124
  %3 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !6125, !tbaa !1534
  %flags2 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %3, i32 0, i32 3, !dbg !6126
  %4 = load i32, i32* %flags2, align 4, !dbg !6126, !tbaa !1894
  store i32 %4, i32* %baseflags, align 4, !dbg !6124, !tbaa !1580
  %5 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !6127, !tbaa !1534
  %flags3 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %5, i32 0, i32 3, !dbg !6129
  %6 = load i32, i32* %flags3, align 4, !dbg !6129, !tbaa !1894
  %and = and i32 %6, 1, !dbg !6130
  %tobool = icmp ne i32 %and, 0, !dbg !6130
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !6131

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !6132, !tbaa !1534
  %mbuf = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %7, i32 0, i32 1, !dbg !6134
  %8 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !6134, !tbaa !1805
  %flags4 = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %8, i32 0, i32 1, !dbg !6135
  %9 = load i32, i32* %flags4, align 4, !dbg !6135, !tbaa !1545
  %and5 = and i32 %9, 1, !dbg !6136
  %tobool6 = icmp ne i32 %and5, 0, !dbg !6136
  br i1 %tobool6, label %if.then, label %if.end, !dbg !6137

if.then:                                          ; preds = %lor.lhs.false, %entry
  %10 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6138, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %10, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2, i32 0, i32 0)), !dbg !6142
  store i32 -1, i32* %retval, !dbg !6143
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6143

if.end:                                           ; preds = %lor.lhs.false
  %11 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !6144, !tbaa !1534
  %12 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !6145, !tbaa !1534
  %13 = bitcast %struct.bufferinfo* %11 to i8*, !dbg !6146
  %14 = bitcast %struct.bufferinfo* %12 to i8*, !dbg !6146
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 80, i32 8, i1 false), !dbg !6146, !tbaa.struct !1844
  %15 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !6147, !tbaa !1534
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %15, i32 0, i32 1, !dbg !6148
  store %struct._object* null, %struct._object** %obj, align 8, !dbg !6149, !tbaa !2482
  %16 = load i32, i32* %flags.addr, align 4, !dbg !6150, !tbaa !1580
  %and7 = and i32 %16, 1, !dbg !6152
  %tobool8 = icmp ne i32 %and7, 0, !dbg !6152
  br i1 %tobool8, label %land.lhs.true, label %if.end.11, !dbg !6153

land.lhs.true:                                    ; preds = %if.end
  %17 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !6154, !tbaa !1534
  %readonly = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %17, i32 0, i32 4, !dbg !6156
  %18 = load i32, i32* %readonly, align 4, !dbg !6156, !tbaa !2059
  %tobool9 = icmp ne i32 %18, 0, !dbg !6157
  br i1 %tobool9, label %if.then.10, label %if.end.11, !dbg !6158

if.then.10:                                       ; preds = %land.lhs.true
  %19 = load %struct._object*, %struct._object** @PyExc_BufferError, align 8, !dbg !6159, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %19, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.33, i32 0, i32 0)), !dbg !6161
  store i32 -1, i32* %retval, !dbg !6162
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6162

if.end.11:                                        ; preds = %land.lhs.true, %if.end
  %20 = load i32, i32* %flags.addr, align 4, !dbg !6163, !tbaa !1580
  %and12 = and i32 %20, 4, !dbg !6165
  %tobool13 = icmp ne i32 %and12, 0, !dbg !6165
  br i1 %tobool13, label %if.end.15, label %if.then.14, !dbg !6166

if.then.14:                                       ; preds = %if.end.11
  %21 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !6167, !tbaa !1534
  %format = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %21, i32 0, i32 6, !dbg !6169
  store i8* null, i8** %format, align 8, !dbg !6170, !tbaa !2219
  br label %if.end.15, !dbg !6171

if.end.15:                                        ; preds = %if.then.14, %if.end.11
  %22 = load i32, i32* %flags.addr, align 4, !dbg !6172, !tbaa !1580
  %and16 = and i32 %22, 56, !dbg !6174
  %cmp = icmp eq i32 %and16, 56, !dbg !6175
  br i1 %cmp, label %land.lhs.true.17, label %if.end.21, !dbg !6176

land.lhs.true.17:                                 ; preds = %if.end.15
  %23 = load i32, i32* %baseflags, align 4, !dbg !6177, !tbaa !1580
  %and18 = and i32 %23, 10, !dbg !6179
  %tobool19 = icmp ne i32 %and18, 0, !dbg !6179
  br i1 %tobool19, label %if.end.21, label %if.then.20, !dbg !6180

if.then.20:                                       ; preds = %land.lhs.true.17
  %24 = load %struct._object*, %struct._object** @PyExc_BufferError, align 8, !dbg !6181, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %24, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.34, i32 0, i32 0)), !dbg !6183
  store i32 -1, i32* %retval, !dbg !6184
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6184

if.end.21:                                        ; preds = %land.lhs.true.17, %if.end.15
  %25 = load i32, i32* %flags.addr, align 4, !dbg !6185, !tbaa !1580
  %and22 = and i32 %25, 88, !dbg !6187
  %cmp23 = icmp eq i32 %and22, 88, !dbg !6188
  br i1 %cmp23, label %land.lhs.true.24, label %if.end.28, !dbg !6189

land.lhs.true.24:                                 ; preds = %if.end.21
  %26 = load i32, i32* %baseflags, align 4, !dbg !6190, !tbaa !1580
  %and25 = and i32 %26, 12, !dbg !6192
  %tobool26 = icmp ne i32 %and25, 0, !dbg !6192
  br i1 %tobool26, label %if.end.28, label %if.then.27, !dbg !6193

if.then.27:                                       ; preds = %land.lhs.true.24
  %27 = load %struct._object*, %struct._object** @PyExc_BufferError, align 8, !dbg !6194, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %27, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.35, i32 0, i32 0)), !dbg !6196
  store i32 -1, i32* %retval, !dbg !6197
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6197

if.end.28:                                        ; preds = %land.lhs.true.24, %if.end.21
  %28 = load i32, i32* %flags.addr, align 4, !dbg !6198, !tbaa !1580
  %and29 = and i32 %28, 152, !dbg !6200
  %cmp30 = icmp eq i32 %and29, 152, !dbg !6201
  br i1 %cmp30, label %land.lhs.true.31, label %if.end.35, !dbg !6202

land.lhs.true.31:                                 ; preds = %if.end.28
  %29 = load i32, i32* %baseflags, align 4, !dbg !6203, !tbaa !1580
  %and32 = and i32 %29, 14, !dbg !6205
  %tobool33 = icmp ne i32 %and32, 0, !dbg !6205
  br i1 %tobool33, label %if.end.35, label %if.then.34, !dbg !6206

if.then.34:                                       ; preds = %land.lhs.true.31
  %30 = load %struct._object*, %struct._object** @PyExc_BufferError, align 8, !dbg !6207, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %30, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.36, i32 0, i32 0)), !dbg !6209
  store i32 -1, i32* %retval, !dbg !6210
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6210

if.end.35:                                        ; preds = %land.lhs.true.31, %if.end.28
  %31 = load i32, i32* %flags.addr, align 4, !dbg !6211, !tbaa !1580
  %and36 = and i32 %31, 280, !dbg !6213
  %cmp37 = icmp eq i32 %and36, 280, !dbg !6214
  br i1 %cmp37, label %if.end.42, label %land.lhs.true.38, !dbg !6215

land.lhs.true.38:                                 ; preds = %if.end.35
  %32 = load i32, i32* %baseflags, align 4, !dbg !6216, !tbaa !1580
  %and39 = and i32 %32, 16, !dbg !6218
  %tobool40 = icmp ne i32 %and39, 0, !dbg !6218
  br i1 %tobool40, label %if.then.41, label %if.end.42, !dbg !6219

if.then.41:                                       ; preds = %land.lhs.true.38
  %33 = load %struct._object*, %struct._object** @PyExc_BufferError, align 8, !dbg !6220, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %33, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.37, i32 0, i32 0)), !dbg !6222
  store i32 -1, i32* %retval, !dbg !6223
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6223

if.end.42:                                        ; preds = %land.lhs.true.38, %if.end.35
  %34 = load i32, i32* %flags.addr, align 4, !dbg !6224, !tbaa !1580
  %and43 = and i32 %34, 24, !dbg !6226
  %cmp44 = icmp eq i32 %and43, 24, !dbg !6227
  br i1 %cmp44, label %if.end.50, label %if.then.45, !dbg !6228

if.then.45:                                       ; preds = %if.end.42
  %35 = load i32, i32* %baseflags, align 4, !dbg !6229, !tbaa !1580
  %and46 = and i32 %35, 10, !dbg !6232
  %tobool47 = icmp ne i32 %and46, 0, !dbg !6232
  br i1 %tobool47, label %if.end.49, label %if.then.48, !dbg !6233

if.then.48:                                       ; preds = %if.then.45
  %36 = load %struct._object*, %struct._object** @PyExc_BufferError, align 8, !dbg !6234, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %36, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.34, i32 0, i32 0)), !dbg !6236
  store i32 -1, i32* %retval, !dbg !6237
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6237

if.end.49:                                        ; preds = %if.then.45
  %37 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !6238, !tbaa !1534
  %strides = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %37, i32 0, i32 8, !dbg !6239
  store i64* null, i64** %strides, align 8, !dbg !6240, !tbaa !2541
  br label %if.end.50, !dbg !6241

if.end.50:                                        ; preds = %if.end.49, %if.end.42
  %38 = load i32, i32* %flags.addr, align 4, !dbg !6242, !tbaa !1580
  %and51 = and i32 %38, 8, !dbg !6244
  %cmp52 = icmp eq i32 %and51, 8, !dbg !6245
  br i1 %cmp52, label %if.end.58, label %if.then.53, !dbg !6246

if.then.53:                                       ; preds = %if.end.50
  %39 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !6247, !tbaa !1534
  %format54 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %39, i32 0, i32 6, !dbg !6250
  %40 = load i8*, i8** %format54, align 8, !dbg !6250, !tbaa !2219
  %cmp55 = icmp ne i8* %40, null, !dbg !6251
  br i1 %cmp55, label %if.then.56, label %if.end.57, !dbg !6252

if.then.56:                                       ; preds = %if.then.53
  %41 = load %struct._object*, %struct._object** @PyExc_BufferError, align 8, !dbg !6253, !tbaa !1534
  %call = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %41, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.38, i32 0, i32 0)), !dbg !6255
  store i32 -1, i32* %retval, !dbg !6256
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6256

if.end.57:                                        ; preds = %if.then.53
  %42 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !6257, !tbaa !1534
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %42, i32 0, i32 5, !dbg !6258
  store i32 1, i32* %ndim, align 4, !dbg !6259, !tbaa !1771
  %43 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !6260, !tbaa !1534
  %shape = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %43, i32 0, i32 7, !dbg !6261
  store i64* null, i64** %shape, align 8, !dbg !6262, !tbaa !2308
  br label %if.end.58, !dbg !6263

if.end.58:                                        ; preds = %if.end.57, %if.end.50
  %44 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !6264, !tbaa !1534
  %45 = bitcast %struct.PyMemoryViewObject* %44 to %struct._object*, !dbg !6265
  %46 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !6266, !tbaa !1534
  %obj59 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %46, i32 0, i32 1, !dbg !6267
  store %struct._object* %45, %struct._object** %obj59, align 8, !dbg !6268, !tbaa !2482
  %47 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !6269, !tbaa !1534
  %obj60 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %47, i32 0, i32 1, !dbg !6270
  %48 = load %struct._object*, %struct._object** %obj60, align 8, !dbg !6270, !tbaa !2482
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 0, !dbg !6271
  %49 = load i64, i64* %ob_refcnt, align 8, !dbg !6272, !tbaa !1642
  %inc = add i64 %49, 1, !dbg !6272
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !6272, !tbaa !1642
  %50 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !6273, !tbaa !1534
  %exports = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %50, i32 0, i32 4, !dbg !6274
  %51 = load i64, i64* %exports, align 8, !dbg !6275, !tbaa !3446
  %inc61 = add i64 %51, 1, !dbg !6275
  store i64 %inc61, i64* %exports, align 8, !dbg !6275, !tbaa !3446
  store i32 0, i32* %retval, !dbg !6276
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6276

cleanup:                                          ; preds = %if.end.58, %if.then.56, %if.then.48, %if.then.41, %if.then.34, %if.then.27, %if.then.20, %if.then.10, %if.then
  %52 = bitcast i32* %baseflags to i8*, !dbg !6277
  call void @llvm.lifetime.end(i64 4, i8* %52) #3, !dbg !6277
  %53 = bitcast %struct.bufferinfo** %base to i8*, !dbg !6277
  call void @llvm.lifetime.end(i64 8, i8* %53) #3, !dbg !6277
  %54 = load i32, i32* %retval, !dbg !6277
  ret i32 %54, !dbg !6277
}

; Function Attrs: nounwind uwtable
define internal void @memory_releasebuf(%struct.PyMemoryViewObject* %self, %struct.bufferinfo* %view) #0 {
entry:
  %self.addr = alloca %struct.PyMemoryViewObject*, align 8
  %view.addr = alloca %struct.bufferinfo*, align 8
  store %struct.PyMemoryViewObject* %self, %struct.PyMemoryViewObject** %self.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %self.addr, metadata !1026, metadata !1538), !dbg !6278
  store %struct.bufferinfo* %view, %struct.bufferinfo** %view.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %view.addr, metadata !1027, metadata !1538), !dbg !6279
  %0 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !6280, !tbaa !1534
  %exports = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %0, i32 0, i32 4, !dbg !6281
  %1 = load i64, i64* %exports, align 8, !dbg !6282, !tbaa !3446
  %dec = add i64 %1, -1, !dbg !6282
  store i64 %dec, i64* %exports, align 8, !dbg !6282, !tbaa !3446
  ret void, !dbg !6283
}

; Function Attrs: nounwind uwtable
define internal %struct.unpacker* @struct_get_unpacker(i8* %fmt, i64 %itemsize) #0 {
entry:
  %retval = alloca %struct.unpacker*, align 8
  %fmt.addr = alloca i8*, align 8
  %itemsize.addr = alloca i64, align 8
  %structmodule = alloca %struct._object*, align 8
  %Struct = alloca %struct._object*, align 8
  %structobj = alloca %struct._object*, align 8
  %format = alloca %struct._object*, align 8
  %x = alloca %struct.unpacker*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp42 = alloca %struct._object*, align 8
  %_py_xdecref_tmp57 = alloca %struct._object*, align 8
  %_py_decref_tmp61 = alloca %struct._object*, align 8
  %_py_xdecref_tmp76 = alloca %struct._object*, align 8
  %_py_decref_tmp80 = alloca %struct._object*, align 8
  store i8* %fmt, i8** %fmt.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !1075, metadata !1538), !dbg !6284
  store i64 %itemsize, i64* %itemsize.addr, align 8, !tbaa !1603
  call void @llvm.dbg.declare(metadata i64* %itemsize.addr, metadata !1076, metadata !1538), !dbg !6285
  %0 = bitcast %struct._object** %structmodule to i8*, !dbg !6286
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !6286
  call void @llvm.dbg.declare(metadata %struct._object** %structmodule, metadata !1077, metadata !1538), !dbg !6287
  %1 = bitcast %struct._object** %Struct to i8*, !dbg !6288
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !6288
  call void @llvm.dbg.declare(metadata %struct._object** %Struct, metadata !1078, metadata !1538), !dbg !6289
  store %struct._object* null, %struct._object** %Struct, align 8, !dbg !6289, !tbaa !1534
  %2 = bitcast %struct._object** %structobj to i8*, !dbg !6290
  call void @llvm.lifetime.start(i64 8, i8* %2) #3, !dbg !6290
  call void @llvm.dbg.declare(metadata %struct._object** %structobj, metadata !1079, metadata !1538), !dbg !6291
  store %struct._object* null, %struct._object** %structobj, align 8, !dbg !6291, !tbaa !1534
  %3 = bitcast %struct._object** %format to i8*, !dbg !6292
  call void @llvm.lifetime.start(i64 8, i8* %3) #3, !dbg !6292
  call void @llvm.dbg.declare(metadata %struct._object** %format, metadata !1080, metadata !1538), !dbg !6293
  store %struct._object* null, %struct._object** %format, align 8, !dbg !6293, !tbaa !1534
  %4 = bitcast %struct.unpacker** %x to i8*, !dbg !6294
  call void @llvm.lifetime.start(i64 8, i8* %4) #3, !dbg !6294
  call void @llvm.dbg.declare(metadata %struct.unpacker** %x, metadata !1081, metadata !1538), !dbg !6295
  store %struct.unpacker* null, %struct.unpacker** %x, align 8, !dbg !6295, !tbaa !1534
  %call = call %struct._object* @PyImport_ImportModule(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.39, i32 0, i32 0)), !dbg !6296
  store %struct._object* %call, %struct._object** %structmodule, align 8, !dbg !6297, !tbaa !1534
  %5 = load %struct._object*, %struct._object** %structmodule, align 8, !dbg !6298, !tbaa !1534
  %cmp = icmp eq %struct._object* %5, null, !dbg !6300
  br i1 %cmp, label %if.then, label %if.end, !dbg !6301

if.then:                                          ; preds = %entry
  store %struct.unpacker* null, %struct.unpacker** %retval, !dbg !6302
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6302

if.end:                                           ; preds = %entry
  %6 = load %struct._object*, %struct._object** %structmodule, align 8, !dbg !6303, !tbaa !1534
  %call1 = call %struct._object* @PyObject_GetAttrString(%struct._object* %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.40, i32 0, i32 0)), !dbg !6304
  store %struct._object* %call1, %struct._object** %Struct, align 8, !dbg !6305, !tbaa !1534
  br label %do.body, !dbg !6306

do.body:                                          ; preds = %if.end
  %7 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6307
  call void @llvm.lifetime.start(i64 8, i8* %7) #3, !dbg !6307
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1082, metadata !1538), !dbg !6309
  %8 = load %struct._object*, %struct._object** %structmodule, align 8, !dbg !6310, !tbaa !1534
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8, !dbg !6309, !tbaa !1534
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6311, !tbaa !1534
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0, !dbg !6313
  %10 = load i64, i64* %ob_refcnt, align 8, !dbg !6314, !tbaa !1642
  %dec = add i64 %10, -1, !dbg !6314
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6314, !tbaa !1642
  %cmp2 = icmp ne i64 %dec, 0, !dbg !6315
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !6316

if.then.3:                                        ; preds = %do.body
  br label %if.end.4, !dbg !6317

if.else:                                          ; preds = %do.body
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6319, !tbaa !1534
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !6321
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6321, !tbaa !1650
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4, !dbg !6322
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6322, !tbaa !1652
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6323, !tbaa !1534
  call void %13(%struct._object* %14), !dbg !6324
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %if.then.3
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6325
  call void @llvm.lifetime.end(i64 8, i8* %15) #3, !dbg !6325
  br label %do.cond, !dbg !6327

do.cond:                                          ; preds = %if.end.4
  br label %do.end, !dbg !6328

do.end:                                           ; preds = %do.cond
  %16 = load %struct._object*, %struct._object** %Struct, align 8, !dbg !6330, !tbaa !1534
  %cmp5 = icmp eq %struct._object* %16, null, !dbg !6332
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !6333

if.then.6:                                        ; preds = %do.end
  store %struct.unpacker* null, %struct.unpacker** %retval, !dbg !6334
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6334

if.end.7:                                         ; preds = %do.end
  %call8 = call %struct.unpacker* @unpacker_new(), !dbg !6335
  store %struct.unpacker* %call8, %struct.unpacker** %x, align 8, !dbg !6336, !tbaa !1534
  %17 = load %struct.unpacker*, %struct.unpacker** %x, align 8, !dbg !6337, !tbaa !1534
  %cmp9 = icmp eq %struct.unpacker* %17, null, !dbg !6339
  br i1 %cmp9, label %if.then.10, label %if.end.11, !dbg !6340

if.then.10:                                       ; preds = %if.end.7
  br label %error, !dbg !6341

if.end.11:                                        ; preds = %if.end.7
  %18 = load i8*, i8** %fmt.addr, align 8, !dbg !6342, !tbaa !1534
  %call12 = call %struct._object* @PyBytes_FromString(i8* %18), !dbg !6343
  store %struct._object* %call12, %struct._object** %format, align 8, !dbg !6344, !tbaa !1534
  %19 = load %struct._object*, %struct._object** %format, align 8, !dbg !6345, !tbaa !1534
  %cmp13 = icmp eq %struct._object* %19, null, !dbg !6347
  br i1 %cmp13, label %if.then.14, label %if.end.15, !dbg !6348

if.then.14:                                       ; preds = %if.end.11
  br label %error, !dbg !6349

if.end.15:                                        ; preds = %if.end.11
  %20 = load %struct._object*, %struct._object** %Struct, align 8, !dbg !6350, !tbaa !1534
  %21 = load %struct._object*, %struct._object** %format, align 8, !dbg !6351, !tbaa !1534
  %call16 = call %struct._object* (%struct._object*, ...) @PyObject_CallFunctionObjArgs(%struct._object* %20, %struct._object* %21, i8* null), !dbg !6352
  store %struct._object* %call16, %struct._object** %structobj, align 8, !dbg !6353, !tbaa !1534
  %22 = load %struct._object*, %struct._object** %structobj, align 8, !dbg !6354, !tbaa !1534
  %cmp17 = icmp eq %struct._object* %22, null, !dbg !6356
  br i1 %cmp17, label %if.then.18, label %if.end.19, !dbg !6357

if.then.18:                                       ; preds = %if.end.15
  br label %error, !dbg !6358

if.end.19:                                        ; preds = %if.end.15
  %23 = load %struct._object*, %struct._object** %structobj, align 8, !dbg !6359, !tbaa !1534
  %call20 = call %struct._object* @PyObject_GetAttrString(%struct._object* %23, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.41, i32 0, i32 0)), !dbg !6360
  %24 = load %struct.unpacker*, %struct.unpacker** %x, align 8, !dbg !6361, !tbaa !1534
  %unpack_from = getelementptr inbounds %struct.unpacker, %struct.unpacker* %24, i32 0, i32 0, !dbg !6362
  store %struct._object* %call20, %struct._object** %unpack_from, align 8, !dbg !6363, !tbaa !6364
  %25 = load %struct.unpacker*, %struct.unpacker** %x, align 8, !dbg !6366, !tbaa !1534
  %unpack_from21 = getelementptr inbounds %struct.unpacker, %struct.unpacker* %25, i32 0, i32 0, !dbg !6368
  %26 = load %struct._object*, %struct._object** %unpack_from21, align 8, !dbg !6368, !tbaa !6364
  %cmp22 = icmp eq %struct._object* %26, null, !dbg !6369
  br i1 %cmp22, label %if.then.23, label %if.end.24, !dbg !6370

if.then.23:                                       ; preds = %if.end.19
  br label %error, !dbg !6371

if.end.24:                                        ; preds = %if.end.19
  %27 = load i64, i64* %itemsize.addr, align 8, !dbg !6372, !tbaa !1603
  %call25 = call i8* @PyMem_Malloc(i64 %27), !dbg !6373
  %28 = load %struct.unpacker*, %struct.unpacker** %x, align 8, !dbg !6374, !tbaa !1534
  %item = getelementptr inbounds %struct.unpacker, %struct.unpacker* %28, i32 0, i32 2, !dbg !6375
  store i8* %call25, i8** %item, align 8, !dbg !6376, !tbaa !6377
  %29 = load %struct.unpacker*, %struct.unpacker** %x, align 8, !dbg !6378, !tbaa !1534
  %item26 = getelementptr inbounds %struct.unpacker, %struct.unpacker* %29, i32 0, i32 2, !dbg !6380
  %30 = load i8*, i8** %item26, align 8, !dbg !6380, !tbaa !6377
  %cmp27 = icmp eq i8* %30, null, !dbg !6381
  br i1 %cmp27, label %if.then.28, label %if.end.30, !dbg !6382

if.then.28:                                       ; preds = %if.end.24
  %call29 = call %struct._object* @PyErr_NoMemory(), !dbg !6383
  br label %error, !dbg !6385

if.end.30:                                        ; preds = %if.end.24
  %31 = load i64, i64* %itemsize.addr, align 8, !dbg !6386, !tbaa !1603
  %32 = load %struct.unpacker*, %struct.unpacker** %x, align 8, !dbg !6387, !tbaa !1534
  %itemsize31 = getelementptr inbounds %struct.unpacker, %struct.unpacker* %32, i32 0, i32 3, !dbg !6388
  store i64 %31, i64* %itemsize31, align 8, !dbg !6389, !tbaa !6390
  %33 = load %struct.unpacker*, %struct.unpacker** %x, align 8, !dbg !6391, !tbaa !1534
  %item32 = getelementptr inbounds %struct.unpacker, %struct.unpacker* %33, i32 0, i32 2, !dbg !6392
  %34 = load i8*, i8** %item32, align 8, !dbg !6392, !tbaa !6377
  %35 = load i64, i64* %itemsize.addr, align 8, !dbg !6393, !tbaa !1603
  %call33 = call %struct._object* @PyMemoryView_FromMemory(i8* %34, i64 %35, i32 512), !dbg !6394
  %36 = load %struct.unpacker*, %struct.unpacker** %x, align 8, !dbg !6395, !tbaa !1534
  %mview = getelementptr inbounds %struct.unpacker, %struct.unpacker* %36, i32 0, i32 1, !dbg !6396
  store %struct._object* %call33, %struct._object** %mview, align 8, !dbg !6397, !tbaa !6398
  %37 = load %struct.unpacker*, %struct.unpacker** %x, align 8, !dbg !6399, !tbaa !1534
  %mview34 = getelementptr inbounds %struct.unpacker, %struct.unpacker* %37, i32 0, i32 1, !dbg !6401
  %38 = load %struct._object*, %struct._object** %mview34, align 8, !dbg !6401, !tbaa !6398
  %cmp35 = icmp eq %struct._object* %38, null, !dbg !6402
  br i1 %cmp35, label %if.then.36, label %if.end.37, !dbg !6403

if.then.36:                                       ; preds = %if.end.30
  br label %error, !dbg !6404

if.end.37:                                        ; preds = %if.end.30
  br label %out, !dbg !6405

out:                                              ; preds = %error, %if.end.37
  br label %do.body.38, !dbg !6407

do.body.38:                                       ; preds = %out
  %39 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !6408
  call void @llvm.lifetime.start(i64 8, i8* %39) #3, !dbg !6408
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1084, metadata !1538), !dbg !6410
  %40 = load %struct._object*, %struct._object** %Struct, align 8, !dbg !6411, !tbaa !1534
  store %struct._object* %40, %struct._object** %_py_xdecref_tmp, align 8, !dbg !6410, !tbaa !1534
  %41 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !6412, !tbaa !1534
  %cmp39 = icmp ne %struct._object* %41, null, !dbg !6413
  br i1 %cmp39, label %if.then.40, label %if.end.53, !dbg !6414

if.then.40:                                       ; preds = %do.body.38
  br label %do.body.41, !dbg !6415

do.body.41:                                       ; preds = %if.then.40
  %42 = bitcast %struct._object** %_py_decref_tmp42 to i8*, !dbg !6417
  call void @llvm.lifetime.start(i64 8, i8* %42) #3, !dbg !6417
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp42, metadata !1086, metadata !1538), !dbg !6419
  %43 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !6420, !tbaa !1534
  store %struct._object* %43, %struct._object** %_py_decref_tmp42, align 8, !dbg !6419, !tbaa !1534
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8, !dbg !6421, !tbaa !1534
  %ob_refcnt43 = getelementptr inbounds %struct._object, %struct._object* %44, i32 0, i32 0, !dbg !6423
  %45 = load i64, i64* %ob_refcnt43, align 8, !dbg !6424, !tbaa !1642
  %dec44 = add i64 %45, -1, !dbg !6424
  store i64 %dec44, i64* %ob_refcnt43, align 8, !dbg !6424, !tbaa !1642
  %cmp45 = icmp ne i64 %dec44, 0, !dbg !6425
  br i1 %cmp45, label %if.then.46, label %if.else.47, !dbg !6426

if.then.46:                                       ; preds = %do.body.41
  br label %if.end.50, !dbg !6427

if.else.47:                                       ; preds = %do.body.41
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8, !dbg !6429, !tbaa !1534
  %ob_type48 = getelementptr inbounds %struct._object, %struct._object* %46, i32 0, i32 1, !dbg !6431
  %47 = load %struct._typeobject*, %struct._typeobject** %ob_type48, align 8, !dbg !6431, !tbaa !1650
  %tp_dealloc49 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %47, i32 0, i32 4, !dbg !6432
  %48 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc49, align 8, !dbg !6432, !tbaa !1652
  %49 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8, !dbg !6433, !tbaa !1534
  call void %48(%struct._object* %49), !dbg !6434
  br label %if.end.50

if.end.50:                                        ; preds = %if.else.47, %if.then.46
  %50 = bitcast %struct._object** %_py_decref_tmp42 to i8*, !dbg !6435
  call void @llvm.lifetime.end(i64 8, i8* %50) #3, !dbg !6435
  br label %do.cond.51, !dbg !6437

do.cond.51:                                       ; preds = %if.end.50
  br label %do.end.52, !dbg !6438

do.end.52:                                        ; preds = %do.cond.51
  br label %if.end.53, !dbg !6440

if.end.53:                                        ; preds = %do.end.52, %do.body.38
  %51 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !6442
  call void @llvm.lifetime.end(i64 8, i8* %51) #3, !dbg !6442
  br label %do.cond.54, !dbg !6445

do.cond.54:                                       ; preds = %if.end.53
  br label %do.end.55, !dbg !6446

do.end.55:                                        ; preds = %do.cond.54
  br label %do.body.56, !dbg !6448

do.body.56:                                       ; preds = %do.end.55
  %52 = bitcast %struct._object** %_py_xdecref_tmp57 to i8*, !dbg !6449
  call void @llvm.lifetime.start(i64 8, i8* %52) #3, !dbg !6449
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp57, metadata !1089, metadata !1538), !dbg !6451
  %53 = load %struct._object*, %struct._object** %format, align 8, !dbg !6452, !tbaa !1534
  store %struct._object* %53, %struct._object** %_py_xdecref_tmp57, align 8, !dbg !6451, !tbaa !1534
  %54 = load %struct._object*, %struct._object** %_py_xdecref_tmp57, align 8, !dbg !6453, !tbaa !1534
  %cmp58 = icmp ne %struct._object* %54, null, !dbg !6454
  br i1 %cmp58, label %if.then.59, label %if.end.72, !dbg !6455

if.then.59:                                       ; preds = %do.body.56
  br label %do.body.60, !dbg !6456

do.body.60:                                       ; preds = %if.then.59
  %55 = bitcast %struct._object** %_py_decref_tmp61 to i8*, !dbg !6458
  call void @llvm.lifetime.start(i64 8, i8* %55) #3, !dbg !6458
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp61, metadata !1091, metadata !1538), !dbg !6460
  %56 = load %struct._object*, %struct._object** %_py_xdecref_tmp57, align 8, !dbg !6461, !tbaa !1534
  store %struct._object* %56, %struct._object** %_py_decref_tmp61, align 8, !dbg !6460, !tbaa !1534
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp61, align 8, !dbg !6462, !tbaa !1534
  %ob_refcnt62 = getelementptr inbounds %struct._object, %struct._object* %57, i32 0, i32 0, !dbg !6464
  %58 = load i64, i64* %ob_refcnt62, align 8, !dbg !6465, !tbaa !1642
  %dec63 = add i64 %58, -1, !dbg !6465
  store i64 %dec63, i64* %ob_refcnt62, align 8, !dbg !6465, !tbaa !1642
  %cmp64 = icmp ne i64 %dec63, 0, !dbg !6466
  br i1 %cmp64, label %if.then.65, label %if.else.66, !dbg !6467

if.then.65:                                       ; preds = %do.body.60
  br label %if.end.69, !dbg !6468

if.else.66:                                       ; preds = %do.body.60
  %59 = load %struct._object*, %struct._object** %_py_decref_tmp61, align 8, !dbg !6470, !tbaa !1534
  %ob_type67 = getelementptr inbounds %struct._object, %struct._object* %59, i32 0, i32 1, !dbg !6472
  %60 = load %struct._typeobject*, %struct._typeobject** %ob_type67, align 8, !dbg !6472, !tbaa !1650
  %tp_dealloc68 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %60, i32 0, i32 4, !dbg !6473
  %61 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc68, align 8, !dbg !6473, !tbaa !1652
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp61, align 8, !dbg !6474, !tbaa !1534
  call void %61(%struct._object* %62), !dbg !6475
  br label %if.end.69

if.end.69:                                        ; preds = %if.else.66, %if.then.65
  %63 = bitcast %struct._object** %_py_decref_tmp61 to i8*, !dbg !6476
  call void @llvm.lifetime.end(i64 8, i8* %63) #3, !dbg !6476
  br label %do.cond.70, !dbg !6478

do.cond.70:                                       ; preds = %if.end.69
  br label %do.end.71, !dbg !6479

do.end.71:                                        ; preds = %do.cond.70
  br label %if.end.72, !dbg !6481

if.end.72:                                        ; preds = %do.end.71, %do.body.56
  %64 = bitcast %struct._object** %_py_xdecref_tmp57 to i8*, !dbg !6483
  call void @llvm.lifetime.end(i64 8, i8* %64) #3, !dbg !6483
  br label %do.cond.73, !dbg !6484

do.cond.73:                                       ; preds = %if.end.72
  br label %do.end.74, !dbg !6485

do.end.74:                                        ; preds = %do.cond.73
  br label %do.body.75, !dbg !6487

do.body.75:                                       ; preds = %do.end.74
  %65 = bitcast %struct._object** %_py_xdecref_tmp76 to i8*, !dbg !6488
  call void @llvm.lifetime.start(i64 8, i8* %65) #3, !dbg !6488
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp76, metadata !1094, metadata !1538), !dbg !6490
  %66 = load %struct._object*, %struct._object** %structobj, align 8, !dbg !6491, !tbaa !1534
  store %struct._object* %66, %struct._object** %_py_xdecref_tmp76, align 8, !dbg !6490, !tbaa !1534
  %67 = load %struct._object*, %struct._object** %_py_xdecref_tmp76, align 8, !dbg !6492, !tbaa !1534
  %cmp77 = icmp ne %struct._object* %67, null, !dbg !6493
  br i1 %cmp77, label %if.then.78, label %if.end.91, !dbg !6494

if.then.78:                                       ; preds = %do.body.75
  br label %do.body.79, !dbg !6495

do.body.79:                                       ; preds = %if.then.78
  %68 = bitcast %struct._object** %_py_decref_tmp80 to i8*, !dbg !6497
  call void @llvm.lifetime.start(i64 8, i8* %68) #3, !dbg !6497
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp80, metadata !1096, metadata !1538), !dbg !6499
  %69 = load %struct._object*, %struct._object** %_py_xdecref_tmp76, align 8, !dbg !6500, !tbaa !1534
  store %struct._object* %69, %struct._object** %_py_decref_tmp80, align 8, !dbg !6499, !tbaa !1534
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp80, align 8, !dbg !6501, !tbaa !1534
  %ob_refcnt81 = getelementptr inbounds %struct._object, %struct._object* %70, i32 0, i32 0, !dbg !6503
  %71 = load i64, i64* %ob_refcnt81, align 8, !dbg !6504, !tbaa !1642
  %dec82 = add i64 %71, -1, !dbg !6504
  store i64 %dec82, i64* %ob_refcnt81, align 8, !dbg !6504, !tbaa !1642
  %cmp83 = icmp ne i64 %dec82, 0, !dbg !6505
  br i1 %cmp83, label %if.then.84, label %if.else.85, !dbg !6506

if.then.84:                                       ; preds = %do.body.79
  br label %if.end.88, !dbg !6507

if.else.85:                                       ; preds = %do.body.79
  %72 = load %struct._object*, %struct._object** %_py_decref_tmp80, align 8, !dbg !6509, !tbaa !1534
  %ob_type86 = getelementptr inbounds %struct._object, %struct._object* %72, i32 0, i32 1, !dbg !6511
  %73 = load %struct._typeobject*, %struct._typeobject** %ob_type86, align 8, !dbg !6511, !tbaa !1650
  %tp_dealloc87 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %73, i32 0, i32 4, !dbg !6512
  %74 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc87, align 8, !dbg !6512, !tbaa !1652
  %75 = load %struct._object*, %struct._object** %_py_decref_tmp80, align 8, !dbg !6513, !tbaa !1534
  call void %74(%struct._object* %75), !dbg !6514
  br label %if.end.88

if.end.88:                                        ; preds = %if.else.85, %if.then.84
  %76 = bitcast %struct._object** %_py_decref_tmp80 to i8*, !dbg !6515
  call void @llvm.lifetime.end(i64 8, i8* %76) #3, !dbg !6515
  br label %do.cond.89, !dbg !6517

do.cond.89:                                       ; preds = %if.end.88
  br label %do.end.90, !dbg !6518

do.end.90:                                        ; preds = %do.cond.89
  br label %if.end.91, !dbg !6520

if.end.91:                                        ; preds = %do.end.90, %do.body.75
  %77 = bitcast %struct._object** %_py_xdecref_tmp76 to i8*, !dbg !6522
  call void @llvm.lifetime.end(i64 8, i8* %77) #3, !dbg !6522
  br label %do.cond.92, !dbg !6523

do.cond.92:                                       ; preds = %if.end.91
  br label %do.end.93, !dbg !6524

do.end.93:                                        ; preds = %do.cond.92
  %78 = load %struct.unpacker*, %struct.unpacker** %x, align 8, !dbg !6526, !tbaa !1534
  store %struct.unpacker* %78, %struct.unpacker** %retval, !dbg !6527
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6527

error:                                            ; preds = %if.then.36, %if.then.28, %if.then.23, %if.then.18, %if.then.14, %if.then.10
  %79 = load %struct.unpacker*, %struct.unpacker** %x, align 8, !dbg !6528, !tbaa !1534
  call void @unpacker_free(%struct.unpacker* %79), !dbg !6529
  store %struct.unpacker* null, %struct.unpacker** %x, align 8, !dbg !6530, !tbaa !1534
  br label %out, !dbg !6531

cleanup:                                          ; preds = %do.end.93, %if.then.6, %if.then
  %80 = bitcast %struct.unpacker** %x to i8*, !dbg !6532
  call void @llvm.lifetime.end(i64 8, i8* %80) #3, !dbg !6532
  %81 = bitcast %struct._object** %format to i8*, !dbg !6532
  call void @llvm.lifetime.end(i64 8, i8* %81) #3, !dbg !6532
  %82 = bitcast %struct._object** %structobj to i8*, !dbg !6532
  call void @llvm.lifetime.end(i64 8, i8* %82) #3, !dbg !6532
  %83 = bitcast %struct._object** %Struct to i8*, !dbg !6532
  call void @llvm.lifetime.end(i64 8, i8* %83) #3, !dbg !6532
  %84 = bitcast %struct._object** %structmodule to i8*, !dbg !6532
  call void @llvm.lifetime.end(i64 8, i8* %84) #3, !dbg !6532
  %85 = load %struct.unpacker*, %struct.unpacker** %retval, !dbg !6532
  ret %struct.unpacker* %85, !dbg !6532
}

; Function Attrs: nounwind uwtable
define internal i32 @fix_struct_error_int() #0 {
entry:
  %retval = alloca i32, align 4
  %0 = load %struct._object*, %struct._object** @PyExc_ImportError, align 8, !dbg !6533, !tbaa !1534
  %call = call i32 @PyErr_ExceptionMatches(%struct._object* %0), !dbg !6535
  %tobool = icmp ne i32 %call, 0, !dbg !6535
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !6536

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_MemoryError, align 8, !dbg !6537, !tbaa !1534
  %call1 = call i32 @PyErr_ExceptionMatches(%struct._object* %1), !dbg !6538
  %tobool2 = icmp ne i32 %call1, 0, !dbg !6538
  br i1 %tobool2, label %if.then, label %if.end, !dbg !6539

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, i32* %retval, !dbg !6540
  br label %return, !dbg !6540

if.end:                                           ; preds = %lor.lhs.false
  call void @PyErr_Clear(), !dbg !6542
  store i32 0, i32* %retval, !dbg !6543
  br label %return, !dbg !6543

return:                                           ; preds = %if.end, %if.then
  %2 = load i32, i32* %retval, !dbg !6544
  ret i32 %2, !dbg !6544
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @unpack_cmp(i8* %p, i8* %q, i8 signext %fmt, %struct.unpacker* %unpack_p, %struct.unpacker* %unpack_q) #4 {
entry:
  %retval = alloca i32, align 4
  %p.addr = alloca i8*, align 8
  %q.addr = alloca i8*, align 8
  %fmt.addr = alloca i8, align 1
  %unpack_p.addr = alloca %struct.unpacker*, align 8
  %unpack_q.addr = alloca %struct.unpacker*, align 8
  %equal = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %x = alloca i16, align 2
  %y = alloca i16, align 2
  %x16 = alloca i32, align 4
  %y17 = alloca i32, align 4
  %x24 = alloca i64, align 8
  %y25 = alloca i64, align 8
  %x32 = alloca i8, align 1
  %y33 = alloca i8, align 1
  %x43 = alloca i16, align 2
  %y44 = alloca i16, align 2
  %x53 = alloca i32, align 4
  %y54 = alloca i32, align 4
  %x61 = alloca i64, align 8
  %y62 = alloca i64, align 8
  %x69 = alloca i64, align 8
  %y70 = alloca i64, align 8
  %x77 = alloca i64, align 8
  %y78 = alloca i64, align 8
  %x85 = alloca i64, align 8
  %y86 = alloca i64, align 8
  %x93 = alloca i64, align 8
  %y94 = alloca i64, align 8
  %x101 = alloca float, align 4
  %y102 = alloca float, align 4
  %x109 = alloca double, align 8
  %y110 = alloca double, align 8
  %x122 = alloca i8*, align 8
  %y123 = alloca i8*, align 8
  store i8* %p, i8** %p.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !1111, metadata !1538), !dbg !6545
  store i8* %q, i8** %q.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i8** %q.addr, metadata !1112, metadata !1538), !dbg !6546
  store i8 %fmt, i8* %fmt.addr, align 1, !tbaa !2033
  call void @llvm.dbg.declare(metadata i8* %fmt.addr, metadata !1113, metadata !1538), !dbg !6547
  store %struct.unpacker* %unpack_p, %struct.unpacker** %unpack_p.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.unpacker** %unpack_p.addr, metadata !1114, metadata !1538), !dbg !6548
  store %struct.unpacker* %unpack_q, %struct.unpacker** %unpack_q.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.unpacker** %unpack_q.addr, metadata !1115, metadata !1538), !dbg !6549
  %0 = bitcast i32* %equal to i8*, !dbg !6550
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !6550
  call void @llvm.dbg.declare(metadata i32* %equal, metadata !1116, metadata !1538), !dbg !6551
  %1 = load i8, i8* %fmt.addr, align 1, !dbg !6552, !tbaa !2033
  %conv = sext i8 %1 to i32, !dbg !6552
  br label %NodeBlock.55

NodeBlock.55:                                     ; preds = %entry
  %Pivot.56 = icmp slt i32 %conv, 98
  br i1 %Pivot.56, label %NodeBlock.25, label %NodeBlock.53

NodeBlock.53:                                     ; preds = %NodeBlock.55
  %Pivot.54 = icmp slt i32 %conv, 104
  br i1 %Pivot.54, label %NodeBlock.35, label %NodeBlock.51

NodeBlock.51:                                     ; preds = %NodeBlock.53
  %Pivot.52 = icmp slt i32 %conv, 108
  br i1 %Pivot.52, label %NodeBlock.39, label %NodeBlock.49

NodeBlock.49:                                     ; preds = %NodeBlock.51
  %Pivot.50 = icmp slt i32 %conv, 110
  br i1 %Pivot.50, label %LeafBlock.41, label %NodeBlock.47

NodeBlock.47:                                     ; preds = %NodeBlock.49
  %Pivot.48 = icmp slt i32 %conv, 113
  br i1 %Pivot.48, label %LeafBlock.43, label %LeafBlock.45

LeafBlock.45:                                     ; preds = %NodeBlock.47
  %SwitchLeaf46 = icmp eq i32 %conv, 113
  br i1 %SwitchLeaf46, label %sw.bb.67, label %NewDefault

LeafBlock.43:                                     ; preds = %NodeBlock.47
  %SwitchLeaf44 = icmp eq i32 %conv, 110
  br i1 %SwitchLeaf44, label %sw.bb.83, label %NewDefault

LeafBlock.41:                                     ; preds = %NodeBlock.49
  %SwitchLeaf42 = icmp eq i32 %conv, 108
  br i1 %SwitchLeaf42, label %sw.bb.22, label %NewDefault

NodeBlock.39:                                     ; preds = %NodeBlock.51
  %Pivot.40 = icmp slt i32 %conv, 105
  br i1 %Pivot.40, label %sw.bb.9, label %LeafBlock.37

LeafBlock.37:                                     ; preds = %NodeBlock.39
  %SwitchLeaf38 = icmp eq i32 %conv, 105
  br i1 %SwitchLeaf38, label %sw.bb.14, label %NewDefault

NodeBlock.35:                                     ; preds = %NodeBlock.53
  %Pivot.36 = icmp slt i32 %conv, 100
  br i1 %Pivot.36, label %NodeBlock.27, label %NodeBlock.33

NodeBlock.33:                                     ; preds = %NodeBlock.35
  %Pivot.34 = icmp slt i32 %conv, 102
  br i1 %Pivot.34, label %LeafBlock.29, label %LeafBlock.31

LeafBlock.31:                                     ; preds = %NodeBlock.33
  %SwitchLeaf32 = icmp eq i32 %conv, 102
  br i1 %SwitchLeaf32, label %sw.bb.99, label %NewDefault

LeafBlock.29:                                     ; preds = %NodeBlock.33
  %SwitchLeaf30 = icmp eq i32 %conv, 100
  br i1 %SwitchLeaf30, label %sw.bb.107, label %NewDefault

NodeBlock.27:                                     ; preds = %NodeBlock.35
  %Pivot.28 = icmp slt i32 %conv, 99
  br i1 %Pivot.28, label %sw.bb.4, label %sw.bb.115

NodeBlock.25:                                     ; preds = %NodeBlock.55
  %Pivot.26 = icmp slt i32 %conv, 76
  br i1 %Pivot.26, label %NodeBlock.7, label %NodeBlock.23

NodeBlock.23:                                     ; preds = %NodeBlock.25
  %Pivot.24 = icmp slt i32 %conv, 80
  br i1 %Pivot.24, label %NodeBlock.13, label %NodeBlock.21

NodeBlock.21:                                     ; preds = %NodeBlock.23
  %Pivot.22 = icmp slt i32 %conv, 81
  br i1 %Pivot.22, label %sw.bb.120, label %NodeBlock.19

NodeBlock.19:                                     ; preds = %NodeBlock.21
  %Pivot.20 = icmp slt i32 %conv, 95
  br i1 %Pivot.20, label %LeafBlock.15, label %LeafBlock.17

LeafBlock.17:                                     ; preds = %NodeBlock.19
  %SwitchLeaf18 = icmp eq i32 %conv, 95
  br i1 %SwitchLeaf18, label %sw.bb.128, label %NewDefault

LeafBlock.15:                                     ; preds = %NodeBlock.19
  %SwitchLeaf16 = icmp eq i32 %conv, 81
  br i1 %SwitchLeaf16, label %sw.bb.75, label %NewDefault

NodeBlock.13:                                     ; preds = %NodeBlock.23
  %Pivot.14 = icmp slt i32 %conv, 78
  br i1 %Pivot.14, label %LeafBlock.9, label %LeafBlock.11

LeafBlock.11:                                     ; preds = %NodeBlock.13
  %SwitchLeaf12 = icmp eq i32 %conv, 78
  br i1 %SwitchLeaf12, label %sw.bb.91, label %NewDefault

LeafBlock.9:                                      ; preds = %NodeBlock.13
  %SwitchLeaf10 = icmp eq i32 %conv, 76
  br i1 %SwitchLeaf10, label %sw.bb.59, label %NewDefault

NodeBlock.7:                                      ; preds = %NodeBlock.25
  %Pivot.8 = icmp slt i32 %conv, 72
  br i1 %Pivot.8, label %NodeBlock, label %NodeBlock.5

NodeBlock.5:                                      ; preds = %NodeBlock.7
  %Pivot.6 = icmp slt i32 %conv, 73
  br i1 %Pivot.6, label %sw.bb.41, label %LeafBlock.3

LeafBlock.3:                                      ; preds = %NodeBlock.5
  %SwitchLeaf4 = icmp eq i32 %conv, 73
  br i1 %SwitchLeaf4, label %sw.bb.51, label %NewDefault

NodeBlock:                                        ; preds = %NodeBlock.7
  %Pivot = icmp slt i32 %conv, 66
  br i1 %Pivot, label %LeafBlock, label %LeafBlock.1

LeafBlock.1:                                      ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %conv, 66
  br i1 %SwitchLeaf2, label %sw.bb, label %NewDefault

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %conv, 63
  br i1 %SwitchLeaf, label %sw.bb.30, label %NewDefault

sw.bb:                                            ; preds = %LeafBlock.1
  %2 = load i8*, i8** %p.addr, align 8, !dbg !6553, !tbaa !1534
  %3 = load i8, i8* %2, align 1, !dbg !6554, !tbaa !2033
  %conv1 = zext i8 %3 to i32, !dbg !6554
  %4 = load i8*, i8** %q.addr, align 8, !dbg !6555, !tbaa !1534
  %5 = load i8, i8* %4, align 1, !dbg !6556, !tbaa !2033
  %conv2 = zext i8 %5 to i32, !dbg !6556
  %cmp = icmp eq i32 %conv1, %conv2, !dbg !6557
  %conv3 = zext i1 %cmp to i32, !dbg !6557
  store i32 %conv3, i32* %retval, !dbg !6558
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6558

sw.bb.4:                                          ; preds = %NodeBlock.27
  %6 = load i8*, i8** %p.addr, align 8, !dbg !6559, !tbaa !1534
  %7 = load i8, i8* %6, align 1, !dbg !6560, !tbaa !2033
  %conv5 = sext i8 %7 to i32, !dbg !6560
  %8 = load i8*, i8** %q.addr, align 8, !dbg !6561, !tbaa !1534
  %9 = load i8, i8* %8, align 1, !dbg !6562, !tbaa !2033
  %conv6 = sext i8 %9 to i32, !dbg !6562
  %cmp7 = icmp eq i32 %conv5, %conv6, !dbg !6563
  %conv8 = zext i1 %cmp7 to i32, !dbg !6563
  store i32 %conv8, i32* %retval, !dbg !6564
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6564

sw.bb.9:                                          ; preds = %NodeBlock.39
  br label %do.body, !dbg !6565

do.body:                                          ; preds = %sw.bb.9
  %10 = bitcast i16* %x to i8*, !dbg !6566
  call void @llvm.lifetime.start(i64 2, i8* %10) #3, !dbg !6566
  call void @llvm.dbg.declare(metadata i16* %x, metadata !1117, metadata !1538), !dbg !6568
  %11 = bitcast i16* %y to i8*, !dbg !6569
  call void @llvm.lifetime.start(i64 2, i8* %11) #3, !dbg !6569
  call void @llvm.dbg.declare(metadata i16* %y, metadata !1120, metadata !1538), !dbg !6570
  %12 = bitcast i16* %x to i8*, !dbg !6571
  %13 = load i8*, i8** %p.addr, align 8, !dbg !6572, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 2, i32 1, i1 false), !dbg !6573
  %14 = bitcast i16* %y to i8*, !dbg !6574
  %15 = load i8*, i8** %q.addr, align 8, !dbg !6575, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 2, i32 1, i1 false), !dbg !6576
  %16 = load i16, i16* %x, align 2, !dbg !6577, !tbaa !4472
  %conv10 = sext i16 %16 to i32, !dbg !6577
  %17 = load i16, i16* %y, align 2, !dbg !6578, !tbaa !4472
  %conv11 = sext i16 %17 to i32, !dbg !6578
  %cmp12 = icmp eq i32 %conv10, %conv11, !dbg !6579
  %conv13 = zext i1 %cmp12 to i32, !dbg !6579
  store i32 %conv13, i32* %equal, align 4, !dbg !6580, !tbaa !1580
  %18 = bitcast i16* %y to i8*, !dbg !6581
  call void @llvm.lifetime.end(i64 2, i8* %18) #3, !dbg !6581
  %19 = bitcast i16* %x to i8*, !dbg !6581
  call void @llvm.lifetime.end(i64 2, i8* %19) #3, !dbg !6581
  br label %do.cond, !dbg !6582

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !6583

do.end:                                           ; preds = %do.cond
  %20 = load i32, i32* %equal, align 4, !dbg !6585, !tbaa !1580
  store i32 %20, i32* %retval, !dbg !6587
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6587

sw.bb.14:                                         ; preds = %LeafBlock.37
  br label %do.body.15, !dbg !6588

do.body.15:                                       ; preds = %sw.bb.14
  %21 = bitcast i32* %x16 to i8*, !dbg !6589
  call void @llvm.lifetime.start(i64 4, i8* %21) #3, !dbg !6589
  call void @llvm.dbg.declare(metadata i32* %x16, metadata !1121, metadata !1538), !dbg !6591
  %22 = bitcast i32* %y17 to i8*, !dbg !6592
  call void @llvm.lifetime.start(i64 4, i8* %22) #3, !dbg !6592
  call void @llvm.dbg.declare(metadata i32* %y17, metadata !1123, metadata !1538), !dbg !6593
  %23 = bitcast i32* %x16 to i8*, !dbg !6594
  %24 = load i8*, i8** %p.addr, align 8, !dbg !6595, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 4, i32 1, i1 false), !dbg !6596
  %25 = bitcast i32* %y17 to i8*, !dbg !6597
  %26 = load i8*, i8** %q.addr, align 8, !dbg !6598, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 4, i32 1, i1 false), !dbg !6599
  %27 = load i32, i32* %x16, align 4, !dbg !6600, !tbaa !1580
  %28 = load i32, i32* %y17, align 4, !dbg !6601, !tbaa !1580
  %cmp18 = icmp eq i32 %27, %28, !dbg !6602
  %conv19 = zext i1 %cmp18 to i32, !dbg !6602
  store i32 %conv19, i32* %equal, align 4, !dbg !6603, !tbaa !1580
  %29 = bitcast i32* %y17 to i8*, !dbg !6604
  call void @llvm.lifetime.end(i64 4, i8* %29) #3, !dbg !6604
  %30 = bitcast i32* %x16 to i8*, !dbg !6604
  call void @llvm.lifetime.end(i64 4, i8* %30) #3, !dbg !6604
  br label %do.cond.20, !dbg !6605

do.cond.20:                                       ; preds = %do.body.15
  br label %do.end.21, !dbg !6606

do.end.21:                                        ; preds = %do.cond.20
  %31 = load i32, i32* %equal, align 4, !dbg !6608, !tbaa !1580
  store i32 %31, i32* %retval, !dbg !6609
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6609

sw.bb.22:                                         ; preds = %LeafBlock.41
  br label %do.body.23, !dbg !6610

do.body.23:                                       ; preds = %sw.bb.22
  %32 = bitcast i64* %x24 to i8*, !dbg !6611
  call void @llvm.lifetime.start(i64 8, i8* %32) #3, !dbg !6611
  call void @llvm.dbg.declare(metadata i64* %x24, metadata !1124, metadata !1538), !dbg !6613
  %33 = bitcast i64* %y25 to i8*, !dbg !6614
  call void @llvm.lifetime.start(i64 8, i8* %33) #3, !dbg !6614
  call void @llvm.dbg.declare(metadata i64* %y25, metadata !1126, metadata !1538), !dbg !6615
  %34 = bitcast i64* %x24 to i8*, !dbg !6616
  %35 = load i8*, i8** %p.addr, align 8, !dbg !6617, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 8, i32 1, i1 false), !dbg !6618
  %36 = bitcast i64* %y25 to i8*, !dbg !6619
  %37 = load i8*, i8** %q.addr, align 8, !dbg !6620, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 8, i32 1, i1 false), !dbg !6621
  %38 = load i64, i64* %x24, align 8, !dbg !6622, !tbaa !1603
  %39 = load i64, i64* %y25, align 8, !dbg !6623, !tbaa !1603
  %cmp26 = icmp eq i64 %38, %39, !dbg !6624
  %conv27 = zext i1 %cmp26 to i32, !dbg !6624
  store i32 %conv27, i32* %equal, align 4, !dbg !6625, !tbaa !1580
  %40 = bitcast i64* %y25 to i8*, !dbg !6626
  call void @llvm.lifetime.end(i64 8, i8* %40) #3, !dbg !6626
  %41 = bitcast i64* %x24 to i8*, !dbg !6626
  call void @llvm.lifetime.end(i64 8, i8* %41) #3, !dbg !6626
  br label %do.cond.28, !dbg !6627

do.cond.28:                                       ; preds = %do.body.23
  br label %do.end.29, !dbg !6628

do.end.29:                                        ; preds = %do.cond.28
  %42 = load i32, i32* %equal, align 4, !dbg !6630, !tbaa !1580
  store i32 %42, i32* %retval, !dbg !6631
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6631

sw.bb.30:                                         ; preds = %LeafBlock
  br label %do.body.31, !dbg !6632

do.body.31:                                       ; preds = %sw.bb.30
  call void @llvm.lifetime.start(i64 1, i8* %x32) #3, !dbg !6633
  call void @llvm.dbg.declare(metadata i8* %x32, metadata !1127, metadata !1538), !dbg !6634
  call void @llvm.lifetime.start(i64 1, i8* %y33) #3, !dbg !6635
  call void @llvm.dbg.declare(metadata i8* %y33, metadata !1129, metadata !1538), !dbg !6636
  %43 = load i8*, i8** %p.addr, align 8, !dbg !6637, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %x32, i8* %43, i64 1, i32 1, i1 false), !dbg !6639
  %44 = load i8*, i8** %q.addr, align 8, !dbg !6640, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %y33, i8* %44, i64 1, i32 1, i1 false), !dbg !6641
  %45 = load i8, i8* %x32, align 1, !dbg !6642, !tbaa !4516, !range !4518
  %tobool = trunc i8 %45 to i1, !dbg !6642
  %conv34 = zext i1 %tobool to i32, !dbg !6642
  %46 = load i8, i8* %y33, align 1, !dbg !6643, !tbaa !4516, !range !4518
  %tobool35 = trunc i8 %46 to i1, !dbg !6643
  %conv36 = zext i1 %tobool35 to i32, !dbg !6643
  %cmp37 = icmp eq i32 %conv34, %conv36, !dbg !6644
  %conv38 = zext i1 %cmp37 to i32, !dbg !6644
  store i32 %conv38, i32* %equal, align 4, !dbg !6645, !tbaa !1580
  call void @llvm.lifetime.end(i64 1, i8* %y33) #3, !dbg !6646
  call void @llvm.lifetime.end(i64 1, i8* %x32) #3, !dbg !6646
  br label %do.cond.39, !dbg !6647

do.cond.39:                                       ; preds = %do.body.31
  br label %do.end.40, !dbg !6648

do.end.40:                                        ; preds = %do.cond.39
  %47 = load i32, i32* %equal, align 4, !dbg !6650, !tbaa !1580
  store i32 %47, i32* %retval, !dbg !6651
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6651

sw.bb.41:                                         ; preds = %NodeBlock.5
  br label %do.body.42, !dbg !6652

do.body.42:                                       ; preds = %sw.bb.41
  %48 = bitcast i16* %x43 to i8*, !dbg !6653
  call void @llvm.lifetime.start(i64 2, i8* %48) #3, !dbg !6653
  call void @llvm.dbg.declare(metadata i16* %x43, metadata !1130, metadata !1538), !dbg !6655
  %49 = bitcast i16* %y44 to i8*, !dbg !6656
  call void @llvm.lifetime.start(i64 2, i8* %49) #3, !dbg !6656
  call void @llvm.dbg.declare(metadata i16* %y44, metadata !1132, metadata !1538), !dbg !6657
  %50 = bitcast i16* %x43 to i8*, !dbg !6658
  %51 = load i8*, i8** %p.addr, align 8, !dbg !6659, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 2, i32 1, i1 false), !dbg !6660
  %52 = bitcast i16* %y44 to i8*, !dbg !6661
  %53 = load i8*, i8** %q.addr, align 8, !dbg !6662, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 2, i32 1, i1 false), !dbg !6663
  %54 = load i16, i16* %x43, align 2, !dbg !6664, !tbaa !4472
  %conv45 = zext i16 %54 to i32, !dbg !6664
  %55 = load i16, i16* %y44, align 2, !dbg !6665, !tbaa !4472
  %conv46 = zext i16 %55 to i32, !dbg !6665
  %cmp47 = icmp eq i32 %conv45, %conv46, !dbg !6666
  %conv48 = zext i1 %cmp47 to i32, !dbg !6666
  store i32 %conv48, i32* %equal, align 4, !dbg !6667, !tbaa !1580
  %56 = bitcast i16* %y44 to i8*, !dbg !6668
  call void @llvm.lifetime.end(i64 2, i8* %56) #3, !dbg !6668
  %57 = bitcast i16* %x43 to i8*, !dbg !6668
  call void @llvm.lifetime.end(i64 2, i8* %57) #3, !dbg !6668
  br label %do.cond.49, !dbg !6669

do.cond.49:                                       ; preds = %do.body.42
  br label %do.end.50, !dbg !6670

do.end.50:                                        ; preds = %do.cond.49
  %58 = load i32, i32* %equal, align 4, !dbg !6672, !tbaa !1580
  store i32 %58, i32* %retval, !dbg !6673
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6673

sw.bb.51:                                         ; preds = %LeafBlock.3
  br label %do.body.52, !dbg !6674

do.body.52:                                       ; preds = %sw.bb.51
  %59 = bitcast i32* %x53 to i8*, !dbg !6675
  call void @llvm.lifetime.start(i64 4, i8* %59) #3, !dbg !6675
  call void @llvm.dbg.declare(metadata i32* %x53, metadata !1133, metadata !1538), !dbg !6677
  %60 = bitcast i32* %y54 to i8*, !dbg !6678
  call void @llvm.lifetime.start(i64 4, i8* %60) #3, !dbg !6678
  call void @llvm.dbg.declare(metadata i32* %y54, metadata !1135, metadata !1538), !dbg !6679
  %61 = bitcast i32* %x53 to i8*, !dbg !6680
  %62 = load i8*, i8** %p.addr, align 8, !dbg !6681, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %61, i8* %62, i64 4, i32 1, i1 false), !dbg !6682
  %63 = bitcast i32* %y54 to i8*, !dbg !6683
  %64 = load i8*, i8** %q.addr, align 8, !dbg !6684, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %63, i8* %64, i64 4, i32 1, i1 false), !dbg !6685
  %65 = load i32, i32* %x53, align 4, !dbg !6686, !tbaa !1580
  %66 = load i32, i32* %y54, align 4, !dbg !6687, !tbaa !1580
  %cmp55 = icmp eq i32 %65, %66, !dbg !6688
  %conv56 = zext i1 %cmp55 to i32, !dbg !6688
  store i32 %conv56, i32* %equal, align 4, !dbg !6689, !tbaa !1580
  %67 = bitcast i32* %y54 to i8*, !dbg !6690
  call void @llvm.lifetime.end(i64 4, i8* %67) #3, !dbg !6690
  %68 = bitcast i32* %x53 to i8*, !dbg !6690
  call void @llvm.lifetime.end(i64 4, i8* %68) #3, !dbg !6690
  br label %do.cond.57, !dbg !6691

do.cond.57:                                       ; preds = %do.body.52
  br label %do.end.58, !dbg !6692

do.end.58:                                        ; preds = %do.cond.57
  %69 = load i32, i32* %equal, align 4, !dbg !6694, !tbaa !1580
  store i32 %69, i32* %retval, !dbg !6695
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6695

sw.bb.59:                                         ; preds = %LeafBlock.9
  br label %do.body.60, !dbg !6696

do.body.60:                                       ; preds = %sw.bb.59
  %70 = bitcast i64* %x61 to i8*, !dbg !6697
  call void @llvm.lifetime.start(i64 8, i8* %70) #3, !dbg !6697
  call void @llvm.dbg.declare(metadata i64* %x61, metadata !1136, metadata !1538), !dbg !6699
  %71 = bitcast i64* %y62 to i8*, !dbg !6700
  call void @llvm.lifetime.start(i64 8, i8* %71) #3, !dbg !6700
  call void @llvm.dbg.declare(metadata i64* %y62, metadata !1138, metadata !1538), !dbg !6701
  %72 = bitcast i64* %x61 to i8*, !dbg !6702
  %73 = load i8*, i8** %p.addr, align 8, !dbg !6703, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %72, i8* %73, i64 8, i32 1, i1 false), !dbg !6704
  %74 = bitcast i64* %y62 to i8*, !dbg !6705
  %75 = load i8*, i8** %q.addr, align 8, !dbg !6706, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %74, i8* %75, i64 8, i32 1, i1 false), !dbg !6707
  %76 = load i64, i64* %x61, align 8, !dbg !6708, !tbaa !1603
  %77 = load i64, i64* %y62, align 8, !dbg !6709, !tbaa !1603
  %cmp63 = icmp eq i64 %76, %77, !dbg !6710
  %conv64 = zext i1 %cmp63 to i32, !dbg !6710
  store i32 %conv64, i32* %equal, align 4, !dbg !6711, !tbaa !1580
  %78 = bitcast i64* %y62 to i8*, !dbg !6712
  call void @llvm.lifetime.end(i64 8, i8* %78) #3, !dbg !6712
  %79 = bitcast i64* %x61 to i8*, !dbg !6712
  call void @llvm.lifetime.end(i64 8, i8* %79) #3, !dbg !6712
  br label %do.cond.65, !dbg !6713

do.cond.65:                                       ; preds = %do.body.60
  br label %do.end.66, !dbg !6714

do.end.66:                                        ; preds = %do.cond.65
  %80 = load i32, i32* %equal, align 4, !dbg !6716, !tbaa !1580
  store i32 %80, i32* %retval, !dbg !6717
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6717

sw.bb.67:                                         ; preds = %LeafBlock.45
  br label %do.body.68, !dbg !6718

do.body.68:                                       ; preds = %sw.bb.67
  %81 = bitcast i64* %x69 to i8*, !dbg !6719
  call void @llvm.lifetime.start(i64 8, i8* %81) #3, !dbg !6719
  call void @llvm.dbg.declare(metadata i64* %x69, metadata !1139, metadata !1538), !dbg !6721
  %82 = bitcast i64* %y70 to i8*, !dbg !6722
  call void @llvm.lifetime.start(i64 8, i8* %82) #3, !dbg !6722
  call void @llvm.dbg.declare(metadata i64* %y70, metadata !1141, metadata !1538), !dbg !6723
  %83 = bitcast i64* %x69 to i8*, !dbg !6724
  %84 = load i8*, i8** %p.addr, align 8, !dbg !6725, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %83, i8* %84, i64 8, i32 1, i1 false), !dbg !6726
  %85 = bitcast i64* %y70 to i8*, !dbg !6727
  %86 = load i8*, i8** %q.addr, align 8, !dbg !6728, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 8, i32 1, i1 false), !dbg !6729
  %87 = load i64, i64* %x69, align 8, !dbg !6730, !tbaa !4575
  %88 = load i64, i64* %y70, align 8, !dbg !6731, !tbaa !4575
  %cmp71 = icmp eq i64 %87, %88, !dbg !6732
  %conv72 = zext i1 %cmp71 to i32, !dbg !6732
  store i32 %conv72, i32* %equal, align 4, !dbg !6733, !tbaa !1580
  %89 = bitcast i64* %y70 to i8*, !dbg !6734
  call void @llvm.lifetime.end(i64 8, i8* %89) #3, !dbg !6734
  %90 = bitcast i64* %x69 to i8*, !dbg !6734
  call void @llvm.lifetime.end(i64 8, i8* %90) #3, !dbg !6734
  br label %do.cond.73, !dbg !6735

do.cond.73:                                       ; preds = %do.body.68
  br label %do.end.74, !dbg !6736

do.end.74:                                        ; preds = %do.cond.73
  %91 = load i32, i32* %equal, align 4, !dbg !6738, !tbaa !1580
  store i32 %91, i32* %retval, !dbg !6739
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6739

sw.bb.75:                                         ; preds = %LeafBlock.15
  br label %do.body.76, !dbg !6740

do.body.76:                                       ; preds = %sw.bb.75
  %92 = bitcast i64* %x77 to i8*, !dbg !6741
  call void @llvm.lifetime.start(i64 8, i8* %92) #3, !dbg !6741
  call void @llvm.dbg.declare(metadata i64* %x77, metadata !1142, metadata !1538), !dbg !6743
  %93 = bitcast i64* %y78 to i8*, !dbg !6744
  call void @llvm.lifetime.start(i64 8, i8* %93) #3, !dbg !6744
  call void @llvm.dbg.declare(metadata i64* %y78, metadata !1144, metadata !1538), !dbg !6745
  %94 = bitcast i64* %x77 to i8*, !dbg !6746
  %95 = load i8*, i8** %p.addr, align 8, !dbg !6747, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %94, i8* %95, i64 8, i32 1, i1 false), !dbg !6748
  %96 = bitcast i64* %y78 to i8*, !dbg !6749
  %97 = load i8*, i8** %q.addr, align 8, !dbg !6750, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %96, i8* %97, i64 8, i32 1, i1 false), !dbg !6751
  %98 = load i64, i64* %x77, align 8, !dbg !6752, !tbaa !4575
  %99 = load i64, i64* %y78, align 8, !dbg !6753, !tbaa !4575
  %cmp79 = icmp eq i64 %98, %99, !dbg !6754
  %conv80 = zext i1 %cmp79 to i32, !dbg !6754
  store i32 %conv80, i32* %equal, align 4, !dbg !6755, !tbaa !1580
  %100 = bitcast i64* %y78 to i8*, !dbg !6756
  call void @llvm.lifetime.end(i64 8, i8* %100) #3, !dbg !6756
  %101 = bitcast i64* %x77 to i8*, !dbg !6756
  call void @llvm.lifetime.end(i64 8, i8* %101) #3, !dbg !6756
  br label %do.cond.81, !dbg !6757

do.cond.81:                                       ; preds = %do.body.76
  br label %do.end.82, !dbg !6758

do.end.82:                                        ; preds = %do.cond.81
  %102 = load i32, i32* %equal, align 4, !dbg !6760, !tbaa !1580
  store i32 %102, i32* %retval, !dbg !6761
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6761

sw.bb.83:                                         ; preds = %LeafBlock.43
  br label %do.body.84, !dbg !6762

do.body.84:                                       ; preds = %sw.bb.83
  %103 = bitcast i64* %x85 to i8*, !dbg !6763
  call void @llvm.lifetime.start(i64 8, i8* %103) #3, !dbg !6763
  call void @llvm.dbg.declare(metadata i64* %x85, metadata !1145, metadata !1538), !dbg !6765
  %104 = bitcast i64* %y86 to i8*, !dbg !6766
  call void @llvm.lifetime.start(i64 8, i8* %104) #3, !dbg !6766
  call void @llvm.dbg.declare(metadata i64* %y86, metadata !1147, metadata !1538), !dbg !6767
  %105 = bitcast i64* %x85 to i8*, !dbg !6768
  %106 = load i8*, i8** %p.addr, align 8, !dbg !6769, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %105, i8* %106, i64 8, i32 1, i1 false), !dbg !6770
  %107 = bitcast i64* %y86 to i8*, !dbg !6771
  %108 = load i8*, i8** %q.addr, align 8, !dbg !6772, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %107, i8* %108, i64 8, i32 1, i1 false), !dbg !6773
  %109 = load i64, i64* %x85, align 8, !dbg !6774, !tbaa !1603
  %110 = load i64, i64* %y86, align 8, !dbg !6775, !tbaa !1603
  %cmp87 = icmp eq i64 %109, %110, !dbg !6776
  %conv88 = zext i1 %cmp87 to i32, !dbg !6776
  store i32 %conv88, i32* %equal, align 4, !dbg !6777, !tbaa !1580
  %111 = bitcast i64* %y86 to i8*, !dbg !6778
  call void @llvm.lifetime.end(i64 8, i8* %111) #3, !dbg !6778
  %112 = bitcast i64* %x85 to i8*, !dbg !6778
  call void @llvm.lifetime.end(i64 8, i8* %112) #3, !dbg !6778
  br label %do.cond.89, !dbg !6779

do.cond.89:                                       ; preds = %do.body.84
  br label %do.end.90, !dbg !6780

do.end.90:                                        ; preds = %do.cond.89
  %113 = load i32, i32* %equal, align 4, !dbg !6782, !tbaa !1580
  store i32 %113, i32* %retval, !dbg !6783
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6783

sw.bb.91:                                         ; preds = %LeafBlock.11
  br label %do.body.92, !dbg !6784

do.body.92:                                       ; preds = %sw.bb.91
  %114 = bitcast i64* %x93 to i8*, !dbg !6785
  call void @llvm.lifetime.start(i64 8, i8* %114) #3, !dbg !6785
  call void @llvm.dbg.declare(metadata i64* %x93, metadata !1148, metadata !1538), !dbg !6787
  %115 = bitcast i64* %y94 to i8*, !dbg !6788
  call void @llvm.lifetime.start(i64 8, i8* %115) #3, !dbg !6788
  call void @llvm.dbg.declare(metadata i64* %y94, metadata !1150, metadata !1538), !dbg !6789
  %116 = bitcast i64* %x93 to i8*, !dbg !6790
  %117 = load i8*, i8** %p.addr, align 8, !dbg !6791, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %116, i8* %117, i64 8, i32 1, i1 false), !dbg !6792
  %118 = bitcast i64* %y94 to i8*, !dbg !6793
  %119 = load i8*, i8** %q.addr, align 8, !dbg !6794, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %118, i8* %119, i64 8, i32 1, i1 false), !dbg !6795
  %120 = load i64, i64* %x93, align 8, !dbg !6796, !tbaa !1603
  %121 = load i64, i64* %y94, align 8, !dbg !6797, !tbaa !1603
  %cmp95 = icmp eq i64 %120, %121, !dbg !6798
  %conv96 = zext i1 %cmp95 to i32, !dbg !6798
  store i32 %conv96, i32* %equal, align 4, !dbg !6799, !tbaa !1580
  %122 = bitcast i64* %y94 to i8*, !dbg !6800
  call void @llvm.lifetime.end(i64 8, i8* %122) #3, !dbg !6800
  %123 = bitcast i64* %x93 to i8*, !dbg !6800
  call void @llvm.lifetime.end(i64 8, i8* %123) #3, !dbg !6800
  br label %do.cond.97, !dbg !6801

do.cond.97:                                       ; preds = %do.body.92
  br label %do.end.98, !dbg !6802

do.end.98:                                        ; preds = %do.cond.97
  %124 = load i32, i32* %equal, align 4, !dbg !6804, !tbaa !1580
  store i32 %124, i32* %retval, !dbg !6805
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6805

sw.bb.99:                                         ; preds = %LeafBlock.31
  br label %do.body.100, !dbg !6806

do.body.100:                                      ; preds = %sw.bb.99
  %125 = bitcast float* %x101 to i8*, !dbg !6807
  call void @llvm.lifetime.start(i64 4, i8* %125) #3, !dbg !6807
  call void @llvm.dbg.declare(metadata float* %x101, metadata !1151, metadata !1538), !dbg !6809
  %126 = bitcast float* %y102 to i8*, !dbg !6810
  call void @llvm.lifetime.start(i64 4, i8* %126) #3, !dbg !6810
  call void @llvm.dbg.declare(metadata float* %y102, metadata !1153, metadata !1538), !dbg !6811
  %127 = bitcast float* %x101 to i8*, !dbg !6812
  %128 = load i8*, i8** %p.addr, align 8, !dbg !6813, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %127, i8* %128, i64 4, i32 1, i1 false), !dbg !6814
  %129 = bitcast float* %y102 to i8*, !dbg !6815
  %130 = load i8*, i8** %q.addr, align 8, !dbg !6816, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %129, i8* %130, i64 4, i32 1, i1 false), !dbg !6817
  %131 = load float, float* %x101, align 4, !dbg !6818, !tbaa !4633
  %132 = load float, float* %y102, align 4, !dbg !6819, !tbaa !4633
  %cmp103 = fcmp oeq float %131, %132, !dbg !6820
  %conv104 = zext i1 %cmp103 to i32, !dbg !6820
  store i32 %conv104, i32* %equal, align 4, !dbg !6821, !tbaa !1580
  %133 = bitcast float* %y102 to i8*, !dbg !6822
  call void @llvm.lifetime.end(i64 4, i8* %133) #3, !dbg !6822
  %134 = bitcast float* %x101 to i8*, !dbg !6822
  call void @llvm.lifetime.end(i64 4, i8* %134) #3, !dbg !6822
  br label %do.cond.105, !dbg !6823

do.cond.105:                                      ; preds = %do.body.100
  br label %do.end.106, !dbg !6824

do.end.106:                                       ; preds = %do.cond.105
  %135 = load i32, i32* %equal, align 4, !dbg !6826, !tbaa !1580
  store i32 %135, i32* %retval, !dbg !6827
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6827

sw.bb.107:                                        ; preds = %LeafBlock.29
  br label %do.body.108, !dbg !6828

do.body.108:                                      ; preds = %sw.bb.107
  %136 = bitcast double* %x109 to i8*, !dbg !6829
  call void @llvm.lifetime.start(i64 8, i8* %136) #3, !dbg !6829
  call void @llvm.dbg.declare(metadata double* %x109, metadata !1154, metadata !1538), !dbg !6831
  %137 = bitcast double* %y110 to i8*, !dbg !6832
  call void @llvm.lifetime.start(i64 8, i8* %137) #3, !dbg !6832
  call void @llvm.dbg.declare(metadata double* %y110, metadata !1156, metadata !1538), !dbg !6833
  %138 = bitcast double* %x109 to i8*, !dbg !6834
  %139 = load i8*, i8** %p.addr, align 8, !dbg !6835, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %138, i8* %139, i64 8, i32 1, i1 false), !dbg !6836
  %140 = bitcast double* %y110 to i8*, !dbg !6837
  %141 = load i8*, i8** %q.addr, align 8, !dbg !6838, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %140, i8* %141, i64 8, i32 1, i1 false), !dbg !6839
  %142 = load double, double* %x109, align 8, !dbg !6840, !tbaa !4636
  %143 = load double, double* %y110, align 8, !dbg !6841, !tbaa !4636
  %cmp111 = fcmp oeq double %142, %143, !dbg !6842
  %conv112 = zext i1 %cmp111 to i32, !dbg !6842
  store i32 %conv112, i32* %equal, align 4, !dbg !6843, !tbaa !1580
  %144 = bitcast double* %y110 to i8*, !dbg !6844
  call void @llvm.lifetime.end(i64 8, i8* %144) #3, !dbg !6844
  %145 = bitcast double* %x109 to i8*, !dbg !6844
  call void @llvm.lifetime.end(i64 8, i8* %145) #3, !dbg !6844
  br label %do.cond.113, !dbg !6845

do.cond.113:                                      ; preds = %do.body.108
  br label %do.end.114, !dbg !6846

do.end.114:                                       ; preds = %do.cond.113
  %146 = load i32, i32* %equal, align 4, !dbg !6848, !tbaa !1580
  store i32 %146, i32* %retval, !dbg !6849
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6849

sw.bb.115:                                        ; preds = %NodeBlock.27
  %147 = load i8*, i8** %p.addr, align 8, !dbg !6850, !tbaa !1534
  %148 = load i8, i8* %147, align 1, !dbg !6851, !tbaa !2033
  %conv116 = sext i8 %148 to i32, !dbg !6851
  %149 = load i8*, i8** %q.addr, align 8, !dbg !6852, !tbaa !1534
  %150 = load i8, i8* %149, align 1, !dbg !6853, !tbaa !2033
  %conv117 = sext i8 %150 to i32, !dbg !6853
  %cmp118 = icmp eq i32 %conv116, %conv117, !dbg !6854
  %conv119 = zext i1 %cmp118 to i32, !dbg !6854
  store i32 %conv119, i32* %retval, !dbg !6855
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6855

sw.bb.120:                                        ; preds = %NodeBlock.21
  br label %do.body.121, !dbg !6856

do.body.121:                                      ; preds = %sw.bb.120
  %151 = bitcast i8** %x122 to i8*, !dbg !6857
  call void @llvm.lifetime.start(i64 8, i8* %151) #3, !dbg !6857
  call void @llvm.dbg.declare(metadata i8** %x122, metadata !1157, metadata !1538), !dbg !6859
  %152 = bitcast i8** %y123 to i8*, !dbg !6860
  call void @llvm.lifetime.start(i64 8, i8* %152) #3, !dbg !6860
  call void @llvm.dbg.declare(metadata i8** %y123, metadata !1159, metadata !1538), !dbg !6861
  %153 = bitcast i8** %x122 to i8*, !dbg !6862
  %154 = load i8*, i8** %p.addr, align 8, !dbg !6863, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %153, i8* %154, i64 8, i32 1, i1 false), !dbg !6864
  %155 = bitcast i8** %y123 to i8*, !dbg !6865
  %156 = load i8*, i8** %q.addr, align 8, !dbg !6866, !tbaa !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %155, i8* %156, i64 8, i32 1, i1 false), !dbg !6867
  %157 = load i8*, i8** %x122, align 8, !dbg !6868, !tbaa !1534
  %158 = load i8*, i8** %y123, align 8, !dbg !6869, !tbaa !1534
  %cmp124 = icmp eq i8* %157, %158, !dbg !6870
  %conv125 = zext i1 %cmp124 to i32, !dbg !6870
  store i32 %conv125, i32* %equal, align 4, !dbg !6871, !tbaa !1580
  %159 = bitcast i8** %y123 to i8*, !dbg !6872
  call void @llvm.lifetime.end(i64 8, i8* %159) #3, !dbg !6872
  %160 = bitcast i8** %x122 to i8*, !dbg !6872
  call void @llvm.lifetime.end(i64 8, i8* %160) #3, !dbg !6872
  br label %do.cond.126, !dbg !6873

do.cond.126:                                      ; preds = %do.body.121
  br label %do.end.127, !dbg !6874

do.end.127:                                       ; preds = %do.cond.126
  %161 = load i32, i32* %equal, align 4, !dbg !6876, !tbaa !1580
  store i32 %161, i32* %retval, !dbg !6877
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6877

sw.bb.128:                                        ; preds = %LeafBlock.17
  %162 = load i8*, i8** %p.addr, align 8, !dbg !6878, !tbaa !1534
  %163 = load i8*, i8** %q.addr, align 8, !dbg !6879, !tbaa !1534
  %164 = load %struct.unpacker*, %struct.unpacker** %unpack_p.addr, align 8, !dbg !6880, !tbaa !1534
  %165 = load %struct.unpacker*, %struct.unpacker** %unpack_q.addr, align 8, !dbg !6881, !tbaa !1534
  %call = call i32 @struct_unpack_cmp(i8* %162, i8* %163, %struct.unpacker* %164, %struct.unpacker* %165), !dbg !6882
  store i32 %call, i32* %retval, !dbg !6883
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6883

NewDefault:                                       ; preds = %LeafBlock.45, %LeafBlock.43, %LeafBlock.41, %LeafBlock.37, %LeafBlock.31, %LeafBlock.29, %LeafBlock.17, %LeafBlock.15, %LeafBlock.11, %LeafBlock.9, %LeafBlock.3, %LeafBlock.1, %LeafBlock
  br label %sw.epilog

sw.epilog:                                        ; preds = %NewDefault
  %166 = load %struct._object*, %struct._object** @PyExc_RuntimeError, align 8, !dbg !6884, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %166, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.42, i32 0, i32 0)), !dbg !6885
  store i32 -1, i32* %retval, !dbg !6886
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6886

cleanup:                                          ; preds = %sw.epilog, %sw.bb.128, %do.end.127, %sw.bb.115, %do.end.114, %do.end.106, %do.end.98, %do.end.90, %do.end.82, %do.end.74, %do.end.66, %do.end.58, %do.end.50, %do.end.40, %do.end.29, %do.end.21, %do.end, %sw.bb.4, %sw.bb
  %167 = bitcast i32* %equal to i8*, !dbg !6887
  call void @llvm.lifetime.end(i64 4, i8* %167) #3, !dbg !6887
  %168 = load i32, i32* %retval, !dbg !6887
  ret i32 %168, !dbg !6887
}

; Function Attrs: nounwind uwtable
define internal i32 @cmp_base(i8* %p, i8* %q, i64* %shape, i64* %pstrides, i64* %psuboffsets, i64* %qstrides, i64* %qsuboffsets, i8 signext %fmt, %struct.unpacker* %unpack_p, %struct.unpacker* %unpack_q) #0 {
entry:
  %retval = alloca i32, align 4
  %p.addr = alloca i8*, align 8
  %q.addr = alloca i8*, align 8
  %shape.addr = alloca i64*, align 8
  %pstrides.addr = alloca i64*, align 8
  %psuboffsets.addr = alloca i64*, align 8
  %qstrides.addr = alloca i64*, align 8
  %qsuboffsets.addr = alloca i64*, align 8
  %fmt.addr = alloca i8, align 1
  %unpack_p.addr = alloca %struct.unpacker*, align 8
  %unpack_q.addr = alloca %struct.unpacker*, align 8
  %i = alloca i64, align 8
  %equal = alloca i32, align 4
  %xp = alloca i8*, align 8
  %xq = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store i8* %p, i8** %p.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !1195, metadata !1538), !dbg !6888
  store i8* %q, i8** %q.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i8** %q.addr, metadata !1196, metadata !1538), !dbg !6889
  store i64* %shape, i64** %shape.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i64** %shape.addr, metadata !1197, metadata !1538), !dbg !6890
  store i64* %pstrides, i64** %pstrides.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i64** %pstrides.addr, metadata !1198, metadata !1538), !dbg !6891
  store i64* %psuboffsets, i64** %psuboffsets.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i64** %psuboffsets.addr, metadata !1199, metadata !1538), !dbg !6892
  store i64* %qstrides, i64** %qstrides.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i64** %qstrides.addr, metadata !1200, metadata !1538), !dbg !6893
  store i64* %qsuboffsets, i64** %qsuboffsets.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i64** %qsuboffsets.addr, metadata !1201, metadata !1538), !dbg !6894
  store i8 %fmt, i8* %fmt.addr, align 1, !tbaa !2033
  call void @llvm.dbg.declare(metadata i8* %fmt.addr, metadata !1202, metadata !1538), !dbg !6895
  store %struct.unpacker* %unpack_p, %struct.unpacker** %unpack_p.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.unpacker** %unpack_p.addr, metadata !1203, metadata !1538), !dbg !6896
  store %struct.unpacker* %unpack_q, %struct.unpacker** %unpack_q.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.unpacker** %unpack_q.addr, metadata !1204, metadata !1538), !dbg !6897
  %0 = bitcast i64* %i to i8*, !dbg !6898
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !6898
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1205, metadata !1538), !dbg !6899
  %1 = bitcast i32* %equal to i8*, !dbg !6900
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !6900
  call void @llvm.dbg.declare(metadata i32* %equal, metadata !1206, metadata !1538), !dbg !6901
  store i64 0, i64* %i, align 8, !dbg !6902, !tbaa !1603
  br label %for.cond, !dbg !6903

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i64, i64* %i, align 8, !dbg !6904, !tbaa !1603
  %3 = load i64*, i64** %shape.addr, align 8, !dbg !6907, !tbaa !1534
  %arrayidx = getelementptr i64, i64* %3, i64 0, !dbg !6907
  %4 = load i64, i64* %arrayidx, align 8, !dbg !6907, !tbaa !1603
  %cmp = icmp slt i64 %2, %4, !dbg !6908
  br i1 %cmp, label %for.body, label %for.end, !dbg !6909

for.body:                                         ; preds = %for.cond
  %5 = bitcast i8** %xp to i8*, !dbg !6910
  call void @llvm.lifetime.start(i64 8, i8* %5) #3, !dbg !6910
  call void @llvm.dbg.declare(metadata i8** %xp, metadata !1207, metadata !1538), !dbg !6911
  %6 = load i64*, i64** %psuboffsets.addr, align 8, !dbg !6912, !tbaa !1534
  %tobool = icmp ne i64* %6, null, !dbg !6912
  br i1 %tobool, label %land.lhs.true, label %cond.false, !dbg !6913

land.lhs.true:                                    ; preds = %for.body
  %7 = load i64*, i64** %psuboffsets.addr, align 8, !dbg !6914, !tbaa !1534
  %arrayidx1 = getelementptr i64, i64* %7, i64 0, !dbg !6914
  %8 = load i64, i64* %arrayidx1, align 8, !dbg !6914, !tbaa !1603
  %cmp2 = icmp sge i64 %8, 0, !dbg !6916
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !6917

cond.true:                                        ; preds = %land.lhs.true
  %9 = load i8*, i8** %p.addr, align 8, !dbg !6918, !tbaa !1534
  %10 = bitcast i8* %9 to i8**, !dbg !6920
  %11 = load i8*, i8** %10, align 8, !dbg !6921, !tbaa !1534
  %12 = load i64*, i64** %psuboffsets.addr, align 8, !dbg !6922, !tbaa !1534
  %arrayidx3 = getelementptr i64, i64* %12, i64 0, !dbg !6922
  %13 = load i64, i64* %arrayidx3, align 8, !dbg !6922, !tbaa !1603
  %add.ptr = getelementptr i8, i8* %11, i64 %13, !dbg !6923
  br label %cond.end, !dbg !6917

cond.false:                                       ; preds = %land.lhs.true, %for.body
  %14 = load i8*, i8** %p.addr, align 8, !dbg !6924, !tbaa !1534
  br label %cond.end, !dbg !6917

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ %14, %cond.false ], !dbg !6917
  store i8* %cond, i8** %xp, align 8, !dbg !6927, !tbaa !1534
  %15 = bitcast i8** %xq to i8*, !dbg !6930
  call void @llvm.lifetime.start(i64 8, i8* %15) #3, !dbg !6930
  call void @llvm.dbg.declare(metadata i8** %xq, metadata !1211, metadata !1538), !dbg !6931
  %16 = load i64*, i64** %qsuboffsets.addr, align 8, !dbg !6932, !tbaa !1534
  %tobool4 = icmp ne i64* %16, null, !dbg !6932
  br i1 %tobool4, label %land.lhs.true.5, label %cond.false.11, !dbg !6933

land.lhs.true.5:                                  ; preds = %cond.end
  %17 = load i64*, i64** %qsuboffsets.addr, align 8, !dbg !6934, !tbaa !1534
  %arrayidx6 = getelementptr i64, i64* %17, i64 0, !dbg !6934
  %18 = load i64, i64* %arrayidx6, align 8, !dbg !6934, !tbaa !1603
  %cmp7 = icmp sge i64 %18, 0, !dbg !6935
  br i1 %cmp7, label %cond.true.8, label %cond.false.11, !dbg !6936

cond.true.8:                                      ; preds = %land.lhs.true.5
  %19 = load i8*, i8** %q.addr, align 8, !dbg !6937, !tbaa !1534
  %20 = bitcast i8* %19 to i8**, !dbg !6938
  %21 = load i8*, i8** %20, align 8, !dbg !6939, !tbaa !1534
  %22 = load i64*, i64** %qsuboffsets.addr, align 8, !dbg !6940, !tbaa !1534
  %arrayidx9 = getelementptr i64, i64* %22, i64 0, !dbg !6940
  %23 = load i64, i64* %arrayidx9, align 8, !dbg !6940, !tbaa !1603
  %add.ptr10 = getelementptr i8, i8* %21, i64 %23, !dbg !6941
  br label %cond.end.12, !dbg !6936

cond.false.11:                                    ; preds = %land.lhs.true.5, %cond.end
  %24 = load i8*, i8** %q.addr, align 8, !dbg !6942, !tbaa !1534
  br label %cond.end.12, !dbg !6936

cond.end.12:                                      ; preds = %cond.false.11, %cond.true.8
  %cond13 = phi i8* [ %add.ptr10, %cond.true.8 ], [ %24, %cond.false.11 ], !dbg !6936
  store i8* %cond13, i8** %xq, align 8, !dbg !6943, !tbaa !1534
  %25 = load i8*, i8** %xp, align 8, !dbg !6944, !tbaa !1534
  %26 = load i8*, i8** %xq, align 8, !dbg !6945, !tbaa !1534
  %27 = load i8, i8* %fmt.addr, align 1, !dbg !6946, !tbaa !2033
  %28 = load %struct.unpacker*, %struct.unpacker** %unpack_p.addr, align 8, !dbg !6947, !tbaa !1534
  %29 = load %struct.unpacker*, %struct.unpacker** %unpack_q.addr, align 8, !dbg !6948, !tbaa !1534
  %call = call i32 @unpack_cmp(i8* %25, i8* %26, i8 signext %27, %struct.unpacker* %28, %struct.unpacker* %29), !dbg !6949
  store i32 %call, i32* %equal, align 4, !dbg !6950, !tbaa !1580
  %30 = load i32, i32* %equal, align 4, !dbg !6951, !tbaa !1580
  %cmp14 = icmp sle i32 %30, 0, !dbg !6953
  br i1 %cmp14, label %if.then, label %if.end, !dbg !6954

if.then:                                          ; preds = %cond.end.12
  %31 = load i32, i32* %equal, align 4, !dbg !6955, !tbaa !1580
  store i32 %31, i32* %retval, !dbg !6956
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6956

if.end:                                           ; preds = %cond.end.12
  store i32 0, i32* %cleanup.dest.slot, !dbg !6957
  br label %cleanup, !dbg !6957

cleanup:                                          ; preds = %if.end, %if.then
  %32 = bitcast i8** %xq to i8*, !dbg !6958
  call void @llvm.lifetime.end(i64 8, i8* %32) #3, !dbg !6958
  %33 = bitcast i8** %xp to i8*, !dbg !6958
  call void @llvm.lifetime.end(i64 8, i8* %33) #3, !dbg !6958
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %for.inc, !dbg !6959

for.inc:                                          ; preds = %cleanup.cont
  %34 = load i64*, i64** %pstrides.addr, align 8, !dbg !6960, !tbaa !1534
  %arrayidx16 = getelementptr i64, i64* %34, i64 0, !dbg !6960
  %35 = load i64, i64* %arrayidx16, align 8, !dbg !6960, !tbaa !1603
  %36 = load i8*, i8** %p.addr, align 8, !dbg !6961, !tbaa !1534
  %add.ptr17 = getelementptr i8, i8* %36, i64 %35, !dbg !6961
  store i8* %add.ptr17, i8** %p.addr, align 8, !dbg !6961, !tbaa !1534
  %37 = load i64*, i64** %qstrides.addr, align 8, !dbg !6962, !tbaa !1534
  %arrayidx18 = getelementptr i64, i64* %37, i64 0, !dbg !6962
  %38 = load i64, i64* %arrayidx18, align 8, !dbg !6962, !tbaa !1603
  %39 = load i8*, i8** %q.addr, align 8, !dbg !6963, !tbaa !1534
  %add.ptr19 = getelementptr i8, i8* %39, i64 %38, !dbg !6963
  store i8* %add.ptr19, i8** %q.addr, align 8, !dbg !6963, !tbaa !1534
  %40 = load i64, i64* %i, align 8, !dbg !6964, !tbaa !1603
  %inc = add i64 %40, 1, !dbg !6964
  store i64 %inc, i64* %i, align 8, !dbg !6964, !tbaa !1603
  br label %for.cond, !dbg !6965

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, !dbg !6966
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.20, !dbg !6966

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.20

cleanup.20:                                       ; preds = %NewDefault, %for.end
  %41 = bitcast i32* %equal to i8*, !dbg !6967
  call void @llvm.lifetime.end(i64 4, i8* %41) #3, !dbg !6967
  %42 = bitcast i64* %i to i8*, !dbg !6967
  call void @llvm.lifetime.end(i64 8, i8* %42) #3, !dbg !6967
  %43 = load i32, i32* %retval, !dbg !6967
  ret i32 %43, !dbg !6967
}

; Function Attrs: nounwind uwtable
define internal i32 @cmp_rec(i8* %p, i8* %q, i64 %ndim, i64* %shape, i64* %pstrides, i64* %psuboffsets, i64* %qstrides, i64* %qsuboffsets, i8 signext %fmt, %struct.unpacker* %unpack_p, %struct.unpacker* %unpack_q) #0 {
entry:
  %retval = alloca i32, align 4
  %p.addr = alloca i8*, align 8
  %q.addr = alloca i8*, align 8
  %ndim.addr = alloca i64, align 8
  %shape.addr = alloca i64*, align 8
  %pstrides.addr = alloca i64*, align 8
  %psuboffsets.addr = alloca i64*, align 8
  %qstrides.addr = alloca i64*, align 8
  %qsuboffsets.addr = alloca i64*, align 8
  %fmt.addr = alloca i8, align 1
  %unpack_p.addr = alloca %struct.unpacker*, align 8
  %unpack_q.addr = alloca %struct.unpacker*, align 8
  %i = alloca i64, align 8
  %equal = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %xp = alloca i8*, align 8
  %xq = alloca i8*, align 8
  store i8* %p, i8** %p.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !1216, metadata !1538), !dbg !6968
  store i8* %q, i8** %q.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i8** %q.addr, metadata !1217, metadata !1538), !dbg !6969
  store i64 %ndim, i64* %ndim.addr, align 8, !tbaa !1603
  call void @llvm.dbg.declare(metadata i64* %ndim.addr, metadata !1218, metadata !1538), !dbg !6970
  store i64* %shape, i64** %shape.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i64** %shape.addr, metadata !1219, metadata !1538), !dbg !6971
  store i64* %pstrides, i64** %pstrides.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i64** %pstrides.addr, metadata !1220, metadata !1538), !dbg !6972
  store i64* %psuboffsets, i64** %psuboffsets.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i64** %psuboffsets.addr, metadata !1221, metadata !1538), !dbg !6973
  store i64* %qstrides, i64** %qstrides.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i64** %qstrides.addr, metadata !1222, metadata !1538), !dbg !6974
  store i64* %qsuboffsets, i64** %qsuboffsets.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i64** %qsuboffsets.addr, metadata !1223, metadata !1538), !dbg !6975
  store i8 %fmt, i8* %fmt.addr, align 1, !tbaa !2033
  call void @llvm.dbg.declare(metadata i8* %fmt.addr, metadata !1224, metadata !1538), !dbg !6976
  store %struct.unpacker* %unpack_p, %struct.unpacker** %unpack_p.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.unpacker** %unpack_p.addr, metadata !1225, metadata !1538), !dbg !6977
  store %struct.unpacker* %unpack_q, %struct.unpacker** %unpack_q.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.unpacker** %unpack_q.addr, metadata !1226, metadata !1538), !dbg !6978
  %0 = bitcast i64* %i to i8*, !dbg !6979
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !6979
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1227, metadata !1538), !dbg !6980
  %1 = bitcast i32* %equal to i8*, !dbg !6981
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !6981
  call void @llvm.dbg.declare(metadata i32* %equal, metadata !1228, metadata !1538), !dbg !6982
  %2 = load i64, i64* %ndim.addr, align 8, !dbg !6983, !tbaa !1603
  %cmp = icmp eq i64 %2, 1, !dbg !6985
  br i1 %cmp, label %if.then, label %if.end, !dbg !6986

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %p.addr, align 8, !dbg !6987, !tbaa !1534
  %4 = load i8*, i8** %q.addr, align 8, !dbg !6989, !tbaa !1534
  %5 = load i64*, i64** %shape.addr, align 8, !dbg !6990, !tbaa !1534
  %6 = load i64*, i64** %pstrides.addr, align 8, !dbg !6991, !tbaa !1534
  %7 = load i64*, i64** %psuboffsets.addr, align 8, !dbg !6992, !tbaa !1534
  %8 = load i64*, i64** %qstrides.addr, align 8, !dbg !6993, !tbaa !1534
  %9 = load i64*, i64** %qsuboffsets.addr, align 8, !dbg !6994, !tbaa !1534
  %10 = load i8, i8* %fmt.addr, align 1, !dbg !6995, !tbaa !2033
  %11 = load %struct.unpacker*, %struct.unpacker** %unpack_p.addr, align 8, !dbg !6996, !tbaa !1534
  %12 = load %struct.unpacker*, %struct.unpacker** %unpack_q.addr, align 8, !dbg !6997, !tbaa !1534
  %call = call i32 @cmp_base(i8* %3, i8* %4, i64* %5, i64* %6, i64* %7, i64* %8, i64* %9, i8 signext %10, %struct.unpacker* %11, %struct.unpacker* %12), !dbg !6998
  store i32 %call, i32* %retval, !dbg !6999
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.39, !dbg !6999

if.end:                                           ; preds = %entry
  store i64 0, i64* %i, align 8, !dbg !7000, !tbaa !1603
  br label %for.cond, !dbg !7001

for.cond:                                         ; preds = %for.inc, %if.end
  %13 = load i64, i64* %i, align 8, !dbg !7002, !tbaa !1603
  %14 = load i64*, i64** %shape.addr, align 8, !dbg !7005, !tbaa !1534
  %arrayidx = getelementptr i64, i64* %14, i64 0, !dbg !7005
  %15 = load i64, i64* %arrayidx, align 8, !dbg !7005, !tbaa !1603
  %cmp1 = icmp slt i64 %13, %15, !dbg !7006
  br i1 %cmp1, label %for.body, label %for.end, !dbg !7007

for.body:                                         ; preds = %for.cond
  %16 = bitcast i8** %xp to i8*, !dbg !7008
  call void @llvm.lifetime.start(i64 8, i8* %16) #3, !dbg !7008
  call void @llvm.dbg.declare(metadata i8** %xp, metadata !1229, metadata !1538), !dbg !7009
  %17 = load i64*, i64** %psuboffsets.addr, align 8, !dbg !7010, !tbaa !1534
  %tobool = icmp ne i64* %17, null, !dbg !7010
  br i1 %tobool, label %land.lhs.true, label %cond.false, !dbg !7011

land.lhs.true:                                    ; preds = %for.body
  %18 = load i64*, i64** %psuboffsets.addr, align 8, !dbg !7012, !tbaa !1534
  %arrayidx2 = getelementptr i64, i64* %18, i64 0, !dbg !7012
  %19 = load i64, i64* %arrayidx2, align 8, !dbg !7012, !tbaa !1603
  %cmp3 = icmp sge i64 %19, 0, !dbg !7014
  br i1 %cmp3, label %cond.true, label %cond.false, !dbg !7015

cond.true:                                        ; preds = %land.lhs.true
  %20 = load i8*, i8** %p.addr, align 8, !dbg !7016, !tbaa !1534
  %21 = bitcast i8* %20 to i8**, !dbg !7018
  %22 = load i8*, i8** %21, align 8, !dbg !7019, !tbaa !1534
  %23 = load i64*, i64** %psuboffsets.addr, align 8, !dbg !7020, !tbaa !1534
  %arrayidx4 = getelementptr i64, i64* %23, i64 0, !dbg !7020
  %24 = load i64, i64* %arrayidx4, align 8, !dbg !7020, !tbaa !1603
  %add.ptr = getelementptr i8, i8* %22, i64 %24, !dbg !7021
  br label %cond.end, !dbg !7015

cond.false:                                       ; preds = %land.lhs.true, %for.body
  %25 = load i8*, i8** %p.addr, align 8, !dbg !7022, !tbaa !1534
  br label %cond.end, !dbg !7015

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ %25, %cond.false ], !dbg !7015
  store i8* %cond, i8** %xp, align 8, !dbg !7025, !tbaa !1534
  %26 = bitcast i8** %xq to i8*, !dbg !7028
  call void @llvm.lifetime.start(i64 8, i8* %26) #3, !dbg !7028
  call void @llvm.dbg.declare(metadata i8** %xq, metadata !1233, metadata !1538), !dbg !7029
  %27 = load i64*, i64** %qsuboffsets.addr, align 8, !dbg !7030, !tbaa !1534
  %tobool5 = icmp ne i64* %27, null, !dbg !7030
  br i1 %tobool5, label %land.lhs.true.6, label %cond.false.12, !dbg !7031

land.lhs.true.6:                                  ; preds = %cond.end
  %28 = load i64*, i64** %qsuboffsets.addr, align 8, !dbg !7032, !tbaa !1534
  %arrayidx7 = getelementptr i64, i64* %28, i64 0, !dbg !7032
  %29 = load i64, i64* %arrayidx7, align 8, !dbg !7032, !tbaa !1603
  %cmp8 = icmp sge i64 %29, 0, !dbg !7033
  br i1 %cmp8, label %cond.true.9, label %cond.false.12, !dbg !7034

cond.true.9:                                      ; preds = %land.lhs.true.6
  %30 = load i8*, i8** %q.addr, align 8, !dbg !7035, !tbaa !1534
  %31 = bitcast i8* %30 to i8**, !dbg !7036
  %32 = load i8*, i8** %31, align 8, !dbg !7037, !tbaa !1534
  %33 = load i64*, i64** %qsuboffsets.addr, align 8, !dbg !7038, !tbaa !1534
  %arrayidx10 = getelementptr i64, i64* %33, i64 0, !dbg !7038
  %34 = load i64, i64* %arrayidx10, align 8, !dbg !7038, !tbaa !1603
  %add.ptr11 = getelementptr i8, i8* %32, i64 %34, !dbg !7039
  br label %cond.end.13, !dbg !7034

cond.false.12:                                    ; preds = %land.lhs.true.6, %cond.end
  %35 = load i8*, i8** %q.addr, align 8, !dbg !7040, !tbaa !1534
  br label %cond.end.13, !dbg !7034

cond.end.13:                                      ; preds = %cond.false.12, %cond.true.9
  %cond14 = phi i8* [ %add.ptr11, %cond.true.9 ], [ %35, %cond.false.12 ], !dbg !7034
  store i8* %cond14, i8** %xq, align 8, !dbg !7041, !tbaa !1534
  %36 = load i8*, i8** %xp, align 8, !dbg !7042, !tbaa !1534
  %37 = load i8*, i8** %xq, align 8, !dbg !7043, !tbaa !1534
  %38 = load i64, i64* %ndim.addr, align 8, !dbg !7044, !tbaa !1603
  %sub = sub i64 %38, 1, !dbg !7045
  %39 = load i64*, i64** %shape.addr, align 8, !dbg !7046, !tbaa !1534
  %add.ptr15 = getelementptr i64, i64* %39, i64 1, !dbg !7047
  %40 = load i64*, i64** %pstrides.addr, align 8, !dbg !7048, !tbaa !1534
  %add.ptr16 = getelementptr i64, i64* %40, i64 1, !dbg !7049
  %41 = load i64*, i64** %psuboffsets.addr, align 8, !dbg !7050, !tbaa !1534
  %tobool17 = icmp ne i64* %41, null, !dbg !7050
  br i1 %tobool17, label %cond.true.18, label %cond.false.20, !dbg !7050

cond.true.18:                                     ; preds = %cond.end.13
  %42 = load i64*, i64** %psuboffsets.addr, align 8, !dbg !7051, !tbaa !1534
  %add.ptr19 = getelementptr i64, i64* %42, i64 1, !dbg !7052
  br label %cond.end.21, !dbg !7050

cond.false.20:                                    ; preds = %cond.end.13
  br label %cond.end.21, !dbg !7053

cond.end.21:                                      ; preds = %cond.false.20, %cond.true.18
  %cond22 = phi i64* [ %add.ptr19, %cond.true.18 ], [ null, %cond.false.20 ], !dbg !7050
  %43 = load i64*, i64** %qstrides.addr, align 8, !dbg !7054, !tbaa !1534
  %add.ptr23 = getelementptr i64, i64* %43, i64 1, !dbg !7055
  %44 = load i64*, i64** %qsuboffsets.addr, align 8, !dbg !7056, !tbaa !1534
  %tobool24 = icmp ne i64* %44, null, !dbg !7056
  br i1 %tobool24, label %cond.true.25, label %cond.false.27, !dbg !7056

cond.true.25:                                     ; preds = %cond.end.21
  %45 = load i64*, i64** %qsuboffsets.addr, align 8, !dbg !7057, !tbaa !1534
  %add.ptr26 = getelementptr i64, i64* %45, i64 1, !dbg !7058
  br label %cond.end.28, !dbg !7056

cond.false.27:                                    ; preds = %cond.end.21
  br label %cond.end.28, !dbg !7059

cond.end.28:                                      ; preds = %cond.false.27, %cond.true.25
  %cond29 = phi i64* [ %add.ptr26, %cond.true.25 ], [ null, %cond.false.27 ], !dbg !7056
  %46 = load i8, i8* %fmt.addr, align 1, !dbg !7060, !tbaa !2033
  %47 = load %struct.unpacker*, %struct.unpacker** %unpack_p.addr, align 8, !dbg !7061, !tbaa !1534
  %48 = load %struct.unpacker*, %struct.unpacker** %unpack_q.addr, align 8, !dbg !7062, !tbaa !1534
  %call30 = call i32 @cmp_rec(i8* %36, i8* %37, i64 %sub, i64* %add.ptr15, i64* %add.ptr16, i64* %cond22, i64* %add.ptr23, i64* %cond29, i8 signext %46, %struct.unpacker* %47, %struct.unpacker* %48), !dbg !7063
  store i32 %call30, i32* %equal, align 4, !dbg !7064, !tbaa !1580
  %49 = load i32, i32* %equal, align 4, !dbg !7065, !tbaa !1580
  %cmp31 = icmp sle i32 %49, 0, !dbg !7067
  br i1 %cmp31, label %if.then.32, label %if.end.33, !dbg !7068

if.then.32:                                       ; preds = %cond.end.28
  %50 = load i32, i32* %equal, align 4, !dbg !7069, !tbaa !1580
  store i32 %50, i32* %retval, !dbg !7070
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7070

if.end.33:                                        ; preds = %cond.end.28
  store i32 0, i32* %cleanup.dest.slot, !dbg !7071
  br label %cleanup, !dbg !7071

cleanup:                                          ; preds = %if.end.33, %if.then.32
  %51 = bitcast i8** %xq to i8*, !dbg !7072
  call void @llvm.lifetime.end(i64 8, i8* %51) #3, !dbg !7072
  %52 = bitcast i8** %xp to i8*, !dbg !7072
  call void @llvm.lifetime.end(i64 8, i8* %52) #3, !dbg !7072
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %for.inc, !dbg !7073

for.inc:                                          ; preds = %cleanup.cont
  %53 = load i64*, i64** %pstrides.addr, align 8, !dbg !7074, !tbaa !1534
  %arrayidx35 = getelementptr i64, i64* %53, i64 0, !dbg !7074
  %54 = load i64, i64* %arrayidx35, align 8, !dbg !7074, !tbaa !1603
  %55 = load i8*, i8** %p.addr, align 8, !dbg !7075, !tbaa !1534
  %add.ptr36 = getelementptr i8, i8* %55, i64 %54, !dbg !7075
  store i8* %add.ptr36, i8** %p.addr, align 8, !dbg !7075, !tbaa !1534
  %56 = load i64*, i64** %qstrides.addr, align 8, !dbg !7076, !tbaa !1534
  %arrayidx37 = getelementptr i64, i64* %56, i64 0, !dbg !7076
  %57 = load i64, i64* %arrayidx37, align 8, !dbg !7076, !tbaa !1603
  %58 = load i8*, i8** %q.addr, align 8, !dbg !7077, !tbaa !1534
  %add.ptr38 = getelementptr i8, i8* %58, i64 %57, !dbg !7077
  store i8* %add.ptr38, i8** %q.addr, align 8, !dbg !7077, !tbaa !1534
  %59 = load i64, i64* %i, align 8, !dbg !7078, !tbaa !1603
  %inc = add i64 %59, 1, !dbg !7078
  store i64 %inc, i64* %i, align 8, !dbg !7078, !tbaa !1603
  br label %for.cond, !dbg !7079

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, !dbg !7080
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.39, !dbg !7080

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.39

cleanup.39:                                       ; preds = %NewDefault, %for.end, %if.then
  %60 = bitcast i32* %equal to i8*, !dbg !7081
  call void @llvm.lifetime.end(i64 4, i8* %60) #3, !dbg !7081
  %61 = bitcast i64* %i to i8*, !dbg !7081
  call void @llvm.lifetime.end(i64 8, i8* %61) #3, !dbg !7081
  %62 = load i32, i32* %retval, !dbg !7081
  ret i32 %62, !dbg !7081
}

; Function Attrs: nounwind uwtable
define internal void @unpacker_free(%struct.unpacker* %x) #0 {
entry:
  %x.addr = alloca %struct.unpacker*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp9 = alloca %struct._object*, align 8
  %_py_decref_tmp13 = alloca %struct._object*, align 8
  store %struct.unpacker* %x, %struct.unpacker** %x.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.unpacker** %x.addr, metadata !1238, metadata !1538), !dbg !7082
  %0 = load %struct.unpacker*, %struct.unpacker** %x.addr, align 8, !dbg !7083, !tbaa !1534
  %tobool = icmp ne %struct.unpacker* %0, null, !dbg !7083
  br i1 %tobool, label %if.then, label %if.end.27, !dbg !7084

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !7085

do.body:                                          ; preds = %if.then
  %1 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !7086
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !7086
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1239, metadata !1538), !dbg !7088
  %2 = load %struct.unpacker*, %struct.unpacker** %x.addr, align 8, !dbg !7089, !tbaa !1534
  %unpack_from = getelementptr inbounds %struct.unpacker, %struct.unpacker* %2, i32 0, i32 0, !dbg !7090
  %3 = load %struct._object*, %struct._object** %unpack_from, align 8, !dbg !7090, !tbaa !6364
  store %struct._object* %3, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7088, !tbaa !1534
  %4 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7091, !tbaa !1534
  %cmp = icmp ne %struct._object* %4, null, !dbg !7092
  br i1 %cmp, label %if.then.1, label %if.end.5, !dbg !7093

if.then.1:                                        ; preds = %do.body
  br label %do.body.2, !dbg !7094

do.body.2:                                        ; preds = %if.then.1
  %5 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7096
  call void @llvm.lifetime.start(i64 8, i8* %5) #3, !dbg !7096
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1243, metadata !1538), !dbg !7098
  %6 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7099, !tbaa !1534
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8, !dbg !7098, !tbaa !1534
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7100, !tbaa !1534
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !7102
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !7103, !tbaa !1642
  %dec = add i64 %8, -1, !dbg !7103
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7103, !tbaa !1642
  %cmp3 = icmp ne i64 %dec, 0, !dbg !7104
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !7105

if.then.4:                                        ; preds = %do.body.2
  br label %if.end, !dbg !7106

if.else:                                          ; preds = %do.body.2
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7108, !tbaa !1534
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !7110
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7110, !tbaa !1650
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4, !dbg !7111
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7111, !tbaa !1652
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7112, !tbaa !1534
  call void %11(%struct._object* %12), !dbg !7113
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7114
  call void @llvm.lifetime.end(i64 8, i8* %13) #3, !dbg !7114
  br label %do.cond, !dbg !7116

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !7117

do.end:                                           ; preds = %do.cond
  br label %if.end.5, !dbg !7119

if.end.5:                                         ; preds = %do.end, %do.body
  %14 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !7121
  call void @llvm.lifetime.end(i64 8, i8* %14) #3, !dbg !7121
  br label %do.end.7, !dbg !7124

do.end.7:                                         ; preds = %if.end.5
  br label %do.body.8, !dbg !7125

do.body.8:                                        ; preds = %do.end.7
  %15 = bitcast %struct._object** %_py_xdecref_tmp9 to i8*, !dbg !7126
  call void @llvm.lifetime.start(i64 8, i8* %15) #3, !dbg !7126
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp9, metadata !1246, metadata !1538), !dbg !7128
  %16 = load %struct.unpacker*, %struct.unpacker** %x.addr, align 8, !dbg !7129, !tbaa !1534
  %mview = getelementptr inbounds %struct.unpacker, %struct.unpacker* %16, i32 0, i32 1, !dbg !7130
  %17 = load %struct._object*, %struct._object** %mview, align 8, !dbg !7130, !tbaa !6398
  store %struct._object* %17, %struct._object** %_py_xdecref_tmp9, align 8, !dbg !7128, !tbaa !1534
  %18 = load %struct._object*, %struct._object** %_py_xdecref_tmp9, align 8, !dbg !7131, !tbaa !1534
  %cmp10 = icmp ne %struct._object* %18, null, !dbg !7132
  br i1 %cmp10, label %if.then.11, label %if.end.24, !dbg !7133

if.then.11:                                       ; preds = %do.body.8
  br label %do.body.12, !dbg !7134

do.body.12:                                       ; preds = %if.then.11
  %19 = bitcast %struct._object** %_py_decref_tmp13 to i8*, !dbg !7136
  call void @llvm.lifetime.start(i64 8, i8* %19) #3, !dbg !7136
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp13, metadata !1248, metadata !1538), !dbg !7138
  %20 = load %struct._object*, %struct._object** %_py_xdecref_tmp9, align 8, !dbg !7139, !tbaa !1534
  store %struct._object* %20, %struct._object** %_py_decref_tmp13, align 8, !dbg !7138, !tbaa !1534
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp13, align 8, !dbg !7140, !tbaa !1534
  %ob_refcnt14 = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 0, !dbg !7142
  %22 = load i64, i64* %ob_refcnt14, align 8, !dbg !7143, !tbaa !1642
  %dec15 = add i64 %22, -1, !dbg !7143
  store i64 %dec15, i64* %ob_refcnt14, align 8, !dbg !7143, !tbaa !1642
  %cmp16 = icmp ne i64 %dec15, 0, !dbg !7144
  br i1 %cmp16, label %if.then.17, label %if.else.18, !dbg !7145

if.then.17:                                       ; preds = %do.body.12
  br label %if.end.21, !dbg !7146

if.else.18:                                       ; preds = %do.body.12
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp13, align 8, !dbg !7148, !tbaa !1534
  %ob_type19 = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 1, !dbg !7150
  %24 = load %struct._typeobject*, %struct._typeobject** %ob_type19, align 8, !dbg !7150, !tbaa !1650
  %tp_dealloc20 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %24, i32 0, i32 4, !dbg !7151
  %25 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc20, align 8, !dbg !7151, !tbaa !1652
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp13, align 8, !dbg !7152, !tbaa !1534
  call void %25(%struct._object* %26), !dbg !7153
  br label %if.end.21

if.end.21:                                        ; preds = %if.else.18, %if.then.17
  %27 = bitcast %struct._object** %_py_decref_tmp13 to i8*, !dbg !7154
  call void @llvm.lifetime.end(i64 8, i8* %27) #3, !dbg !7154
  br label %do.cond.22, !dbg !7156

do.cond.22:                                       ; preds = %if.end.21
  br label %do.end.23, !dbg !7157

do.end.23:                                        ; preds = %do.cond.22
  br label %if.end.24, !dbg !7159

if.end.24:                                        ; preds = %do.end.23, %do.body.8
  %28 = bitcast %struct._object** %_py_xdecref_tmp9 to i8*, !dbg !7161
  call void @llvm.lifetime.end(i64 8, i8* %28) #3, !dbg !7161
  br label %do.end.26, !dbg !7162

do.end.26:                                        ; preds = %if.end.24
  %29 = load %struct.unpacker*, %struct.unpacker** %x.addr, align 8, !dbg !7163, !tbaa !1534
  %item = getelementptr inbounds %struct.unpacker, %struct.unpacker* %29, i32 0, i32 2, !dbg !7164
  %30 = load i8*, i8** %item, align 8, !dbg !7164, !tbaa !6377
  call void @PyMem_Free(i8* %30), !dbg !7165
  %31 = load %struct.unpacker*, %struct.unpacker** %x.addr, align 8, !dbg !7166, !tbaa !1534
  %32 = bitcast %struct.unpacker* %31 to i8*, !dbg !7166
  call void @PyMem_Free(i8* %32), !dbg !7167
  br label %if.end.27, !dbg !7168

if.end.27:                                        ; preds = %do.end.26, %entry
  ret void, !dbg !7169
}

declare %struct._object* @PyImport_ImportModule(i8*) #1

declare %struct._object* @PyObject_GetAttrString(%struct._object*, i8*) #1

; Function Attrs: nounwind uwtable
define internal %struct.unpacker* @unpacker_new() #0 {
entry:
  %retval = alloca %struct.unpacker*, align 8
  %x = alloca %struct.unpacker*, align 8
  %cleanup.dest.slot = alloca i32
  %0 = bitcast %struct.unpacker** %x to i8*, !dbg !7170
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !7170
  call void @llvm.dbg.declare(metadata %struct.unpacker** %x, metadata !1103, metadata !1538), !dbg !7171
  %call = call i8* @PyMem_Malloc(i64 32), !dbg !7172
  %1 = bitcast i8* %call to %struct.unpacker*, !dbg !7172
  store %struct.unpacker* %1, %struct.unpacker** %x, align 8, !dbg !7171, !tbaa !1534
  %2 = load %struct.unpacker*, %struct.unpacker** %x, align 8, !dbg !7173, !tbaa !1534
  %cmp = icmp eq %struct.unpacker* %2, null, !dbg !7175
  br i1 %cmp, label %if.then, label %if.end, !dbg !7176

if.then:                                          ; preds = %entry
  %call1 = call %struct._object* @PyErr_NoMemory(), !dbg !7177
  store %struct.unpacker* null, %struct.unpacker** %retval, !dbg !7179
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7179

if.end:                                           ; preds = %entry
  %3 = load %struct.unpacker*, %struct.unpacker** %x, align 8, !dbg !7180, !tbaa !1534
  %unpack_from = getelementptr inbounds %struct.unpacker, %struct.unpacker* %3, i32 0, i32 0, !dbg !7181
  store %struct._object* null, %struct._object** %unpack_from, align 8, !dbg !7182, !tbaa !6364
  %4 = load %struct.unpacker*, %struct.unpacker** %x, align 8, !dbg !7183, !tbaa !1534
  %mview = getelementptr inbounds %struct.unpacker, %struct.unpacker* %4, i32 0, i32 1, !dbg !7184
  store %struct._object* null, %struct._object** %mview, align 8, !dbg !7185, !tbaa !6398
  %5 = load %struct.unpacker*, %struct.unpacker** %x, align 8, !dbg !7186, !tbaa !1534
  %item = getelementptr inbounds %struct.unpacker, %struct.unpacker* %5, i32 0, i32 2, !dbg !7187
  store i8* null, i8** %item, align 8, !dbg !7188, !tbaa !6377
  %6 = load %struct.unpacker*, %struct.unpacker** %x, align 8, !dbg !7189, !tbaa !1534
  %itemsize = getelementptr inbounds %struct.unpacker, %struct.unpacker* %6, i32 0, i32 3, !dbg !7190
  store i64 0, i64* %itemsize, align 8, !dbg !7191, !tbaa !6390
  %7 = load %struct.unpacker*, %struct.unpacker** %x, align 8, !dbg !7192, !tbaa !1534
  store %struct.unpacker* %7, %struct.unpacker** %retval, !dbg !7193
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7193

cleanup:                                          ; preds = %if.end, %if.then
  %8 = bitcast %struct.unpacker** %x to i8*, !dbg !7194
  call void @llvm.lifetime.end(i64 8, i8* %8) #3, !dbg !7194
  %9 = load %struct.unpacker*, %struct.unpacker** %retval, !dbg !7194
  ret %struct.unpacker* %9, !dbg !7194
}

declare %struct._object* @PyBytes_FromString(i8*) #1

declare %struct._object* @PyObject_CallFunctionObjArgs(%struct._object*, ...) #1

; Function Attrs: nounwind uwtable
define internal i32 @struct_unpack_cmp(i8* %p, i8* %q, %struct.unpacker* %unpack_p, %struct.unpacker* %unpack_q) #0 {
entry:
  %retval = alloca i32, align 4
  %p.addr = alloca i8*, align 8
  %q.addr = alloca i8*, align 8
  %unpack_p.addr = alloca %struct.unpacker*, align 8
  %unpack_q.addr = alloca %struct.unpacker*, align 8
  %v = alloca %struct._object*, align 8
  %w = alloca %struct._object*, align 8
  %ret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp10 = alloca %struct._object*, align 8
  %_py_decref_tmp22 = alloca %struct._object*, align 8
  store i8* %p, i8** %p.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !1164, metadata !1538), !dbg !7195
  store i8* %q, i8** %q.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i8** %q.addr, metadata !1165, metadata !1538), !dbg !7196
  store %struct.unpacker* %unpack_p, %struct.unpacker** %unpack_p.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.unpacker** %unpack_p.addr, metadata !1166, metadata !1538), !dbg !7197
  store %struct.unpacker* %unpack_q, %struct.unpacker** %unpack_q.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.unpacker** %unpack_q.addr, metadata !1167, metadata !1538), !dbg !7198
  %0 = bitcast %struct._object** %v to i8*, !dbg !7199
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !7199
  call void @llvm.dbg.declare(metadata %struct._object** %v, metadata !1168, metadata !1538), !dbg !7200
  %1 = bitcast %struct._object** %w to i8*, !dbg !7199
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !7199
  call void @llvm.dbg.declare(metadata %struct._object** %w, metadata !1169, metadata !1538), !dbg !7201
  %2 = bitcast i32* %ret to i8*, !dbg !7202
  call void @llvm.lifetime.start(i64 4, i8* %2) #3, !dbg !7202
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !1170, metadata !1538), !dbg !7203
  %3 = load i8*, i8** %p.addr, align 8, !dbg !7204, !tbaa !1534
  %4 = load %struct.unpacker*, %struct.unpacker** %unpack_p.addr, align 8, !dbg !7205, !tbaa !1534
  %call = call %struct._object* @struct_unpack_single(i8* %3, %struct.unpacker* %4), !dbg !7206
  store %struct._object* %call, %struct._object** %v, align 8, !dbg !7207, !tbaa !1534
  %5 = load %struct._object*, %struct._object** %v, align 8, !dbg !7208, !tbaa !1534
  %cmp = icmp eq %struct._object* %5, null, !dbg !7210
  br i1 %cmp, label %if.then, label %if.end, !dbg !7211

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !7212
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7212

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %q.addr, align 8, !dbg !7213, !tbaa !1534
  %7 = load %struct.unpacker*, %struct.unpacker** %unpack_q.addr, align 8, !dbg !7214, !tbaa !1534
  %call1 = call %struct._object* @struct_unpack_single(i8* %6, %struct.unpacker* %7), !dbg !7215
  store %struct._object* %call1, %struct._object** %w, align 8, !dbg !7216, !tbaa !1534
  %8 = load %struct._object*, %struct._object** %w, align 8, !dbg !7217, !tbaa !1534
  %cmp2 = icmp eq %struct._object* %8, null, !dbg !7218
  br i1 %cmp2, label %if.then.3, label %if.end.7, !dbg !7219

if.then.3:                                        ; preds = %if.end
  br label %do.body, !dbg !7220

do.body:                                          ; preds = %if.then.3
  %9 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7221
  call void @llvm.lifetime.start(i64 8, i8* %9) #3, !dbg !7221
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1171, metadata !1538), !dbg !7223
  %10 = load %struct._object*, %struct._object** %v, align 8, !dbg !7224, !tbaa !1534
  store %struct._object* %10, %struct._object** %_py_decref_tmp, align 8, !dbg !7223, !tbaa !1534
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7225, !tbaa !1534
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0, !dbg !7227
  %12 = load i64, i64* %ob_refcnt, align 8, !dbg !7228, !tbaa !1642
  %dec = add i64 %12, -1, !dbg !7228
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7228, !tbaa !1642
  %cmp4 = icmp ne i64 %dec, 0, !dbg !7229
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !7230

if.then.5:                                        ; preds = %do.body
  br label %if.end.6, !dbg !7231

if.else:                                          ; preds = %do.body
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7233, !tbaa !1534
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1, !dbg !7235
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7235, !tbaa !1650
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i32 0, i32 4, !dbg !7236
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7236, !tbaa !1652
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7237, !tbaa !1534
  call void %15(%struct._object* %16), !dbg !7238
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.5
  %17 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7239
  call void @llvm.lifetime.end(i64 8, i8* %17) #3, !dbg !7239
  br label %do.cond, !dbg !7241

do.cond:                                          ; preds = %if.end.6
  br label %do.end, !dbg !7242

do.end:                                           ; preds = %do.cond
  store i32 -1, i32* %retval, !dbg !7244
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7244

if.end.7:                                         ; preds = %if.end
  %18 = load %struct._object*, %struct._object** %v, align 8, !dbg !7245, !tbaa !1534
  %19 = load %struct._object*, %struct._object** %w, align 8, !dbg !7246, !tbaa !1534
  %call8 = call i32 @PyObject_RichCompareBool(%struct._object* %18, %struct._object* %19, i32 2), !dbg !7247
  store i32 %call8, i32* %ret, align 4, !dbg !7248, !tbaa !1580
  br label %do.body.9, !dbg !7249

do.body.9:                                        ; preds = %if.end.7
  %20 = bitcast %struct._object** %_py_decref_tmp10 to i8*, !dbg !7250
  call void @llvm.lifetime.start(i64 8, i8* %20) #3, !dbg !7250
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp10, metadata !1175, metadata !1538), !dbg !7252
  %21 = load %struct._object*, %struct._object** %v, align 8, !dbg !7253, !tbaa !1534
  store %struct._object* %21, %struct._object** %_py_decref_tmp10, align 8, !dbg !7252, !tbaa !1534
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp10, align 8, !dbg !7254, !tbaa !1534
  %ob_refcnt11 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !7256
  %23 = load i64, i64* %ob_refcnt11, align 8, !dbg !7257, !tbaa !1642
  %dec12 = add i64 %23, -1, !dbg !7257
  store i64 %dec12, i64* %ob_refcnt11, align 8, !dbg !7257, !tbaa !1642
  %cmp13 = icmp ne i64 %dec12, 0, !dbg !7258
  br i1 %cmp13, label %if.then.14, label %if.else.15, !dbg !7259

if.then.14:                                       ; preds = %do.body.9
  br label %if.end.18, !dbg !7260

if.else.15:                                       ; preds = %do.body.9
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp10, align 8, !dbg !7262, !tbaa !1534
  %ob_type16 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !7264
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type16, align 8, !dbg !7264, !tbaa !1650
  %tp_dealloc17 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !7265
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc17, align 8, !dbg !7265, !tbaa !1652
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp10, align 8, !dbg !7266, !tbaa !1534
  call void %26(%struct._object* %27), !dbg !7267
  br label %if.end.18

if.end.18:                                        ; preds = %if.else.15, %if.then.14
  %28 = bitcast %struct._object** %_py_decref_tmp10 to i8*, !dbg !7268
  call void @llvm.lifetime.end(i64 8, i8* %28) #3, !dbg !7268
  br label %do.cond.19, !dbg !7270

do.cond.19:                                       ; preds = %if.end.18
  br label %do.end.20, !dbg !7271

do.end.20:                                        ; preds = %do.cond.19
  br label %do.body.21, !dbg !7273

do.body.21:                                       ; preds = %do.end.20
  %29 = bitcast %struct._object** %_py_decref_tmp22 to i8*, !dbg !7274
  call void @llvm.lifetime.start(i64 8, i8* %29) #3, !dbg !7274
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp22, metadata !1177, metadata !1538), !dbg !7276
  %30 = load %struct._object*, %struct._object** %w, align 8, !dbg !7277, !tbaa !1534
  store %struct._object* %30, %struct._object** %_py_decref_tmp22, align 8, !dbg !7276, !tbaa !1534
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp22, align 8, !dbg !7278, !tbaa !1534
  %ob_refcnt23 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 0, !dbg !7280
  %32 = load i64, i64* %ob_refcnt23, align 8, !dbg !7281, !tbaa !1642
  %dec24 = add i64 %32, -1, !dbg !7281
  store i64 %dec24, i64* %ob_refcnt23, align 8, !dbg !7281, !tbaa !1642
  %cmp25 = icmp ne i64 %dec24, 0, !dbg !7282
  br i1 %cmp25, label %if.then.26, label %if.else.27, !dbg !7283

if.then.26:                                       ; preds = %do.body.21
  br label %if.end.30, !dbg !7284

if.else.27:                                       ; preds = %do.body.21
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp22, align 8, !dbg !7286, !tbaa !1534
  %ob_type28 = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 1, !dbg !7288
  %34 = load %struct._typeobject*, %struct._typeobject** %ob_type28, align 8, !dbg !7288, !tbaa !1650
  %tp_dealloc29 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %34, i32 0, i32 4, !dbg !7289
  %35 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc29, align 8, !dbg !7289, !tbaa !1652
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp22, align 8, !dbg !7290, !tbaa !1534
  call void %35(%struct._object* %36), !dbg !7291
  br label %if.end.30

if.end.30:                                        ; preds = %if.else.27, %if.then.26
  %37 = bitcast %struct._object** %_py_decref_tmp22 to i8*, !dbg !7292
  call void @llvm.lifetime.end(i64 8, i8* %37) #3, !dbg !7292
  br label %do.cond.31, !dbg !7293

do.cond.31:                                       ; preds = %if.end.30
  br label %do.end.32, !dbg !7294

do.end.32:                                        ; preds = %do.cond.31
  %38 = load i32, i32* %ret, align 4, !dbg !7296, !tbaa !1580
  store i32 %38, i32* %retval, !dbg !7297
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7297

cleanup:                                          ; preds = %do.end.32, %do.end, %if.then
  %39 = bitcast i32* %ret to i8*, !dbg !7298
  call void @llvm.lifetime.end(i64 4, i8* %39) #3, !dbg !7298
  %40 = bitcast %struct._object** %w to i8*, !dbg !7298
  call void @llvm.lifetime.end(i64 8, i8* %40) #3, !dbg !7298
  %41 = bitcast %struct._object** %v to i8*, !dbg !7298
  call void @llvm.lifetime.end(i64 8, i8* %41) #3, !dbg !7298
  %42 = load i32, i32* %retval, !dbg !7298
  ret i32 %42, !dbg !7298
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @struct_unpack_single(i8* %ptr, %struct.unpacker* %x) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %ptr.addr = alloca i8*, align 8
  %x.addr = alloca %struct.unpacker*, align 8
  %v = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !1183, metadata !1538), !dbg !7299
  store %struct.unpacker* %x, %struct.unpacker** %x.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.unpacker** %x.addr, metadata !1184, metadata !1538), !dbg !7300
  %0 = bitcast %struct._object** %v to i8*, !dbg !7301
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !7301
  call void @llvm.dbg.declare(metadata %struct._object** %v, metadata !1185, metadata !1538), !dbg !7302
  %1 = load %struct.unpacker*, %struct.unpacker** %x.addr, align 8, !dbg !7303, !tbaa !1534
  %item = getelementptr inbounds %struct.unpacker, %struct.unpacker* %1, i32 0, i32 2, !dbg !7304
  %2 = load i8*, i8** %item, align 8, !dbg !7304, !tbaa !6377
  %3 = load i8*, i8** %ptr.addr, align 8, !dbg !7305, !tbaa !1534
  %4 = load %struct.unpacker*, %struct.unpacker** %x.addr, align 8, !dbg !7306, !tbaa !1534
  %itemsize = getelementptr inbounds %struct.unpacker, %struct.unpacker* %4, i32 0, i32 3, !dbg !7307
  %5 = load i64, i64* %itemsize, align 8, !dbg !7307, !tbaa !6390
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* %3, i64 %5, i32 1, i1 false), !dbg !7308
  %6 = load %struct.unpacker*, %struct.unpacker** %x.addr, align 8, !dbg !7309, !tbaa !1534
  %unpack_from = getelementptr inbounds %struct.unpacker, %struct.unpacker* %6, i32 0, i32 0, !dbg !7310
  %7 = load %struct._object*, %struct._object** %unpack_from, align 8, !dbg !7310, !tbaa !6364
  %8 = load %struct.unpacker*, %struct.unpacker** %x.addr, align 8, !dbg !7311, !tbaa !1534
  %mview = getelementptr inbounds %struct.unpacker, %struct.unpacker* %8, i32 0, i32 1, !dbg !7312
  %9 = load %struct._object*, %struct._object** %mview, align 8, !dbg !7312, !tbaa !6398
  %call = call %struct._object* (%struct._object*, ...) @PyObject_CallFunctionObjArgs(%struct._object* %7, %struct._object* %9, i8* null), !dbg !7313
  store %struct._object* %call, %struct._object** %v, align 8, !dbg !7314, !tbaa !1534
  %10 = load %struct._object*, %struct._object** %v, align 8, !dbg !7315, !tbaa !1534
  %cmp = icmp eq %struct._object* %10, null, !dbg !7317
  br i1 %cmp, label %if.then, label %if.end, !dbg !7318

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !7319
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7319

if.end:                                           ; preds = %entry
  %11 = load %struct._object*, %struct._object** %v, align 8, !dbg !7320, !tbaa !1534
  %12 = bitcast %struct._object* %11 to %struct.PyVarObject*, !dbg !7321
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %12, i32 0, i32 1, !dbg !7322
  %13 = load i64, i64* %ob_size, align 8, !dbg !7322, !tbaa !4750
  %cmp1 = icmp eq i64 %13, 1, !dbg !7323
  br i1 %cmp1, label %if.then.2, label %if.end.8, !dbg !7324

if.then.2:                                        ; preds = %if.end
  %14 = bitcast %struct._object** %tmp to i8*, !dbg !7325
  call void @llvm.lifetime.start(i64 8, i8* %14) #3, !dbg !7325
  call void @llvm.dbg.declare(metadata %struct._object** %tmp, metadata !1186, metadata !1538), !dbg !7326
  %15 = load %struct._object*, %struct._object** %v, align 8, !dbg !7327, !tbaa !1534
  %16 = bitcast %struct._object* %15 to %struct.PyTupleObject*, !dbg !7328
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %16, i32 0, i32 1, !dbg !7329
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 0, !dbg !7330
  %17 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !7330, !tbaa !1534
  store %struct._object* %17, %struct._object** %tmp, align 8, !dbg !7326, !tbaa !1534
  %18 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !7331, !tbaa !1534
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 0, !dbg !7332
  %19 = load i64, i64* %ob_refcnt, align 8, !dbg !7333, !tbaa !1642
  %inc = add i64 %19, 1, !dbg !7333
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !7333, !tbaa !1642
  br label %do.body, !dbg !7334

do.body:                                          ; preds = %if.then.2
  %20 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7335
  call void @llvm.lifetime.start(i64 8, i8* %20) #3, !dbg !7335
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1189, metadata !1538), !dbg !7337
  %21 = load %struct._object*, %struct._object** %v, align 8, !dbg !7338, !tbaa !1534
  store %struct._object* %21, %struct._object** %_py_decref_tmp, align 8, !dbg !7337, !tbaa !1534
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7339, !tbaa !1534
  %ob_refcnt4 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !7341
  %23 = load i64, i64* %ob_refcnt4, align 8, !dbg !7342, !tbaa !1642
  %dec = add i64 %23, -1, !dbg !7342
  store i64 %dec, i64* %ob_refcnt4, align 8, !dbg !7342, !tbaa !1642
  %cmp5 = icmp ne i64 %dec, 0, !dbg !7343
  br i1 %cmp5, label %if.then.6, label %if.else, !dbg !7344

if.then.6:                                        ; preds = %do.body
  br label %if.end.7, !dbg !7345

if.else:                                          ; preds = %do.body
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7347, !tbaa !1534
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !7349
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7349, !tbaa !1650
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !7350
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7350, !tbaa !1652
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7351, !tbaa !1534
  call void %26(%struct._object* %27), !dbg !7352
  br label %if.end.7

if.end.7:                                         ; preds = %if.else, %if.then.6
  %28 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7353
  call void @llvm.lifetime.end(i64 8, i8* %28) #3, !dbg !7353
  br label %do.cond, !dbg !7355

do.cond:                                          ; preds = %if.end.7
  br label %do.end, !dbg !7356

do.end:                                           ; preds = %do.cond
  %29 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !7358, !tbaa !1534
  store %struct._object* %29, %struct._object** %retval, !dbg !7359
  store i32 1, i32* %cleanup.dest.slot
  %30 = bitcast %struct._object** %tmp to i8*, !dbg !7360
  call void @llvm.lifetime.end(i64 8, i8* %30) #3, !dbg !7360
  br label %cleanup

if.end.8:                                         ; preds = %if.end
  %31 = load %struct._object*, %struct._object** %v, align 8, !dbg !7361, !tbaa !1534
  store %struct._object* %31, %struct._object** %retval, !dbg !7362
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7362

cleanup:                                          ; preds = %if.end.8, %do.end, %if.then
  %32 = bitcast %struct._object** %v to i8*, !dbg !7363
  call void @llvm.lifetime.end(i64 8, i8* %32) #3, !dbg !7363
  %33 = load %struct._object*, %struct._object** %retval, !dbg !7363
  ret %struct._object* %33, !dbg !7363
}

declare i32 @PyObject_RichCompareBool(%struct._object*, %struct._object*, i32) #1

; Function Attrs: nounwind uwtable
define internal %struct._object* @memory_release(%struct.PyMemoryViewObject* %self, %struct._object* %noargs) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyMemoryViewObject*, align 8
  %noargs.addr = alloca %struct._object*, align 8
  store %struct.PyMemoryViewObject* %self, %struct.PyMemoryViewObject** %self.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %self.addr, metadata !1253, metadata !1538), !dbg !7364
  store %struct._object* %noargs, %struct._object** %noargs.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._object** %noargs.addr, metadata !1254, metadata !1538), !dbg !7365
  %0 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !7366, !tbaa !1534
  %call = call i32 @_memory_release(%struct.PyMemoryViewObject* %0), !dbg !7368
  %cmp = icmp slt i32 %call, 0, !dbg !7369
  br i1 %cmp, label %if.then, label %if.end, !dbg !7370

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !7371
  br label %return, !dbg !7371

if.end:                                           ; preds = %entry
  %1 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !7372, !tbaa !1642
  %inc = add i64 %1, 1, !dbg !7372
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !7372, !tbaa !1642
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !7373
  br label %return, !dbg !7373

return:                                           ; preds = %if.end, %if.then
  %2 = load %struct._object*, %struct._object** %retval, !dbg !7374
  ret %struct._object* %2, !dbg !7374
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @memory_tobytes(%struct.PyMemoryViewObject* %self, %struct._object* %dummy) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyMemoryViewObject*, align 8
  %dummy.addr = alloca %struct._object*, align 8
  %src = alloca %struct.bufferinfo*, align 8
  %bytes = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PyMemoryViewObject* %self, %struct.PyMemoryViewObject** %self.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %self.addr, metadata !1257, metadata !1538), !dbg !7375
  store %struct._object* %dummy, %struct._object** %dummy.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._object** %dummy.addr, metadata !1258, metadata !1538), !dbg !7376
  %0 = bitcast %struct.bufferinfo** %src to i8*, !dbg !7377
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !7377
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %src, metadata !1259, metadata !1538), !dbg !7378
  %1 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !7379, !tbaa !1534
  %view = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %1, i32 0, i32 5, !dbg !7380
  store %struct.bufferinfo* %view, %struct.bufferinfo** %src, align 8, !dbg !7378, !tbaa !1534
  %2 = bitcast %struct._object** %bytes to i8*, !dbg !7381
  call void @llvm.lifetime.start(i64 8, i8* %2) #3, !dbg !7381
  call void @llvm.dbg.declare(metadata %struct._object** %bytes, metadata !1260, metadata !1538), !dbg !7382
  store %struct._object* null, %struct._object** %bytes, align 8, !dbg !7382, !tbaa !1534
  %3 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !7383, !tbaa !1534
  %flags = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %3, i32 0, i32 3, !dbg !7385
  %4 = load i32, i32* %flags, align 4, !dbg !7385, !tbaa !1894
  %and = and i32 %4, 1, !dbg !7386
  %tobool = icmp ne i32 %and, 0, !dbg !7386
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !7387

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !7388, !tbaa !1534
  %mbuf = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %5, i32 0, i32 1, !dbg !7390
  %6 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !7390, !tbaa !1805
  %flags1 = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %6, i32 0, i32 1, !dbg !7391
  %7 = load i32, i32* %flags1, align 4, !dbg !7391, !tbaa !1545
  %and2 = and i32 %7, 1, !dbg !7392
  %tobool3 = icmp ne i32 %and2, 0, !dbg !7392
  br i1 %tobool3, label %if.then, label %if.end, !dbg !7393

if.then:                                          ; preds = %lor.lhs.false, %entry
  %8 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !7394, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %8, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2, i32 0, i32 0)), !dbg !7398
  store %struct._object* null, %struct._object** %retval, !dbg !7399
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7399

if.end:                                           ; preds = %lor.lhs.false
  %9 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !7400, !tbaa !1534
  %flags4 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %9, i32 0, i32 3, !dbg !7402
  %10 = load i32, i32* %flags4, align 4, !dbg !7402, !tbaa !1894
  %and5 = and i32 %10, 10, !dbg !7403
  %tobool6 = icmp ne i32 %and5, 0, !dbg !7403
  br i1 %tobool6, label %if.then.7, label %if.end.8, !dbg !7404

if.then.7:                                        ; preds = %if.end
  %11 = load %struct.bufferinfo*, %struct.bufferinfo** %src, align 8, !dbg !7405, !tbaa !1534
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %11, i32 0, i32 0, !dbg !7407
  %12 = load i8*, i8** %buf, align 8, !dbg !7407, !tbaa !1826
  %13 = load %struct.bufferinfo*, %struct.bufferinfo** %src, align 8, !dbg !7408, !tbaa !1534
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %13, i32 0, i32 2, !dbg !7409
  %14 = load i64, i64* %len, align 8, !dbg !7409, !tbaa !2175
  %call = call %struct._object* @PyBytes_FromStringAndSize(i8* %12, i64 %14), !dbg !7410
  store %struct._object* %call, %struct._object** %retval, !dbg !7411
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7411

if.end.8:                                         ; preds = %if.end
  %15 = load %struct.bufferinfo*, %struct.bufferinfo** %src, align 8, !dbg !7412, !tbaa !1534
  %len9 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %15, i32 0, i32 2, !dbg !7413
  %16 = load i64, i64* %len9, align 8, !dbg !7413, !tbaa !2175
  %call10 = call %struct._object* @PyBytes_FromStringAndSize(i8* null, i64 %16), !dbg !7414
  store %struct._object* %call10, %struct._object** %bytes, align 8, !dbg !7415, !tbaa !1534
  %17 = load %struct._object*, %struct._object** %bytes, align 8, !dbg !7416, !tbaa !1534
  %cmp = icmp eq %struct._object* %17, null, !dbg !7418
  br i1 %cmp, label %if.then.11, label %if.end.12, !dbg !7419

if.then.11:                                       ; preds = %if.end.8
  store %struct._object* null, %struct._object** %retval, !dbg !7420
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7420

if.end.12:                                        ; preds = %if.end.8
  %18 = load %struct._object*, %struct._object** %bytes, align 8, !dbg !7421, !tbaa !1534
  %19 = bitcast %struct._object* %18 to %struct.PyBytesObject*, !dbg !7422
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %19, i32 0, i32 2, !dbg !7423
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !7424
  %20 = load %struct.bufferinfo*, %struct.bufferinfo** %src, align 8, !dbg !7425, !tbaa !1534
  %call13 = call i32 @buffer_to_contiguous(i8* %arraydecay, %struct.bufferinfo* %20, i8 signext 67), !dbg !7426
  %cmp14 = icmp slt i32 %call13, 0, !dbg !7427
  br i1 %cmp14, label %if.then.15, label %if.end.19, !dbg !7428

if.then.15:                                       ; preds = %if.end.12
  br label %do.body, !dbg !7429

do.body:                                          ; preds = %if.then.15
  %21 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7430
  call void @llvm.lifetime.start(i64 8, i8* %21) #3, !dbg !7430
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1261, metadata !1538), !dbg !7432
  %22 = load %struct._object*, %struct._object** %bytes, align 8, !dbg !7433, !tbaa !1534
  store %struct._object* %22, %struct._object** %_py_decref_tmp, align 8, !dbg !7432, !tbaa !1534
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7434, !tbaa !1534
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0, !dbg !7436
  %24 = load i64, i64* %ob_refcnt, align 8, !dbg !7437, !tbaa !1642
  %dec = add i64 %24, -1, !dbg !7437
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7437, !tbaa !1642
  %cmp16 = icmp ne i64 %dec, 0, !dbg !7438
  br i1 %cmp16, label %if.then.17, label %if.else, !dbg !7439

if.then.17:                                       ; preds = %do.body
  br label %if.end.18, !dbg !7440

if.else:                                          ; preds = %do.body
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7442, !tbaa !1534
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 1, !dbg !7444
  %26 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7444, !tbaa !1650
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %26, i32 0, i32 4, !dbg !7445
  %27 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7445, !tbaa !1652
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7446, !tbaa !1534
  call void %27(%struct._object* %28), !dbg !7447
  br label %if.end.18

if.end.18:                                        ; preds = %if.else, %if.then.17
  %29 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7448
  call void @llvm.lifetime.end(i64 8, i8* %29) #3, !dbg !7448
  br label %do.cond, !dbg !7450

do.cond:                                          ; preds = %if.end.18
  br label %do.end, !dbg !7451

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !7453
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7453

if.end.19:                                        ; preds = %if.end.12
  %30 = load %struct._object*, %struct._object** %bytes, align 8, !dbg !7454, !tbaa !1534
  store %struct._object* %30, %struct._object** %retval, !dbg !7455
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7455

cleanup:                                          ; preds = %if.end.19, %do.end, %if.then.11, %if.then.7, %if.then
  %31 = bitcast %struct._object** %bytes to i8*, !dbg !7456
  call void @llvm.lifetime.end(i64 8, i8* %31) #3, !dbg !7456
  %32 = bitcast %struct.bufferinfo** %src to i8*, !dbg !7456
  call void @llvm.lifetime.end(i64 8, i8* %32) #3, !dbg !7456
  %33 = load %struct._object*, %struct._object** %retval, !dbg !7456
  ret %struct._object* %33, !dbg !7456
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @memory_tolist(%struct.PyMemoryViewObject* %mv, %struct._object* %noargs) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %mv.addr = alloca %struct.PyMemoryViewObject*, align 8
  %noargs.addr = alloca %struct._object*, align 8
  %view = alloca %struct.bufferinfo*, align 8
  %fmt = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.PyMemoryViewObject* %mv, %struct.PyMemoryViewObject** %mv.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %mv.addr, metadata !1267, metadata !1538), !dbg !7457
  store %struct._object* %noargs, %struct._object** %noargs.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._object** %noargs.addr, metadata !1268, metadata !1538), !dbg !7458
  %0 = bitcast %struct.bufferinfo** %view to i8*, !dbg !7459
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !7459
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %view, metadata !1269, metadata !1538), !dbg !7460
  %1 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv.addr, align 8, !dbg !7461, !tbaa !1534
  %view1 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %1, i32 0, i32 5, !dbg !7462
  store %struct.bufferinfo* %view1, %struct.bufferinfo** %view, align 8, !dbg !7460, !tbaa !1534
  %2 = bitcast i8** %fmt to i8*, !dbg !7463
  call void @llvm.lifetime.start(i64 8, i8* %2) #3, !dbg !7463
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !1270, metadata !1538), !dbg !7464
  %3 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv.addr, align 8, !dbg !7465, !tbaa !1534
  %flags = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %3, i32 0, i32 3, !dbg !7467
  %4 = load i32, i32* %flags, align 4, !dbg !7467, !tbaa !1894
  %and = and i32 %4, 1, !dbg !7468
  %tobool = icmp ne i32 %and, 0, !dbg !7468
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !7469

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv.addr, align 8, !dbg !7470, !tbaa !1534
  %mbuf = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %5, i32 0, i32 1, !dbg !7472
  %6 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !7472, !tbaa !1805
  %flags2 = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %6, i32 0, i32 1, !dbg !7473
  %7 = load i32, i32* %flags2, align 4, !dbg !7473, !tbaa !1545
  %and3 = and i32 %7, 1, !dbg !7474
  %tobool4 = icmp ne i32 %and3, 0, !dbg !7474
  br i1 %tobool4, label %if.then, label %if.end, !dbg !7475

if.then:                                          ; preds = %lor.lhs.false, %entry
  %8 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !7476, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %8, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2, i32 0, i32 0)), !dbg !7480
  store %struct._object* null, %struct._object** %retval, !dbg !7481
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7481

if.end:                                           ; preds = %lor.lhs.false
  %9 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !7482, !tbaa !1534
  %call = call i8* @adjust_fmt(%struct.bufferinfo* %9), !dbg !7483
  store i8* %call, i8** %fmt, align 8, !dbg !7484, !tbaa !1534
  %10 = load i8*, i8** %fmt, align 8, !dbg !7485, !tbaa !1534
  %cmp = icmp eq i8* %10, null, !dbg !7487
  br i1 %cmp, label %if.then.5, label %if.end.6, !dbg !7488

if.then.5:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !7489
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7489

if.end.6:                                         ; preds = %if.end
  %11 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !7490, !tbaa !1534
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %11, i32 0, i32 5, !dbg !7492
  %12 = load i32, i32* %ndim, align 4, !dbg !7492, !tbaa !1771
  %cmp7 = icmp eq i32 %12, 0, !dbg !7493
  br i1 %cmp7, label %if.then.8, label %if.else, !dbg !7494

if.then.8:                                        ; preds = %if.end.6
  %13 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !7495, !tbaa !1534
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %13, i32 0, i32 0, !dbg !7497
  %14 = load i8*, i8** %buf, align 8, !dbg !7497, !tbaa !1826
  %15 = load i8*, i8** %fmt, align 8, !dbg !7498, !tbaa !1534
  %call9 = call %struct._object* @unpack_single(i8* %14, i8* %15), !dbg !7499
  store %struct._object* %call9, %struct._object** %retval, !dbg !7500
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7500

if.else:                                          ; preds = %if.end.6
  %16 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !7501, !tbaa !1534
  %ndim10 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %16, i32 0, i32 5, !dbg !7503
  %17 = load i32, i32* %ndim10, align 4, !dbg !7503, !tbaa !1771
  %cmp11 = icmp eq i32 %17, 1, !dbg !7504
  br i1 %cmp11, label %if.then.12, label %if.else.15, !dbg !7505

if.then.12:                                       ; preds = %if.else
  %18 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !7506, !tbaa !1534
  %buf13 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %18, i32 0, i32 0, !dbg !7508
  %19 = load i8*, i8** %buf13, align 8, !dbg !7508, !tbaa !1826
  %20 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !7509, !tbaa !1534
  %shape = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %20, i32 0, i32 7, !dbg !7510
  %21 = load i64*, i64** %shape, align 8, !dbg !7510, !tbaa !2308
  %22 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !7511, !tbaa !1534
  %strides = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %22, i32 0, i32 8, !dbg !7512
  %23 = load i64*, i64** %strides, align 8, !dbg !7512, !tbaa !2541
  %24 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !7513, !tbaa !1534
  %suboffsets = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %24, i32 0, i32 9, !dbg !7514
  %25 = load i64*, i64** %suboffsets, align 8, !dbg !7514, !tbaa !2334
  %26 = load i8*, i8** %fmt, align 8, !dbg !7515, !tbaa !1534
  %call14 = call %struct._object* @tolist_base(i8* %19, i64* %21, i64* %23, i64* %25, i8* %26), !dbg !7516
  store %struct._object* %call14, %struct._object** %retval, !dbg !7517
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7517

if.else.15:                                       ; preds = %if.else
  %27 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !7518, !tbaa !1534
  %buf16 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %27, i32 0, i32 0, !dbg !7520
  %28 = load i8*, i8** %buf16, align 8, !dbg !7520, !tbaa !1826
  %29 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !7521, !tbaa !1534
  %ndim17 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %29, i32 0, i32 5, !dbg !7522
  %30 = load i32, i32* %ndim17, align 4, !dbg !7522, !tbaa !1771
  %conv = sext i32 %30 to i64, !dbg !7521
  %31 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !7523, !tbaa !1534
  %shape18 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %31, i32 0, i32 7, !dbg !7524
  %32 = load i64*, i64** %shape18, align 8, !dbg !7524, !tbaa !2308
  %33 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !7525, !tbaa !1534
  %strides19 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %33, i32 0, i32 8, !dbg !7526
  %34 = load i64*, i64** %strides19, align 8, !dbg !7526, !tbaa !2541
  %35 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !7527, !tbaa !1534
  %suboffsets20 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %35, i32 0, i32 9, !dbg !7528
  %36 = load i64*, i64** %suboffsets20, align 8, !dbg !7528, !tbaa !2334
  %37 = load i8*, i8** %fmt, align 8, !dbg !7529, !tbaa !1534
  %call21 = call %struct._object* @tolist_rec(i8* %28, i64 %conv, i64* %32, i64* %34, i64* %36, i8* %37), !dbg !7530
  store %struct._object* %call21, %struct._object** %retval, !dbg !7531
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7531

cleanup:                                          ; preds = %if.else.15, %if.then.12, %if.then.8, %if.then.5, %if.then
  %38 = bitcast i8** %fmt to i8*, !dbg !7532
  call void @llvm.lifetime.end(i64 8, i8* %38) #3, !dbg !7532
  %39 = bitcast %struct.bufferinfo** %view to i8*, !dbg !7532
  call void @llvm.lifetime.end(i64 8, i8* %39) #3, !dbg !7532
  %40 = load %struct._object*, %struct._object** %retval, !dbg !7532
  ret %struct._object* %40, !dbg !7532
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @memory_cast(%struct.PyMemoryViewObject* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyMemoryViewObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %mv = alloca %struct.PyMemoryViewObject*, align 8
  %shape = alloca %struct._object*, align 8
  %format = alloca %struct._object*, align 8
  %ndim = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PyMemoryViewObject* %self, %struct.PyMemoryViewObject** %self.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %self.addr, metadata !1316, metadata !1538), !dbg !7533
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1317, metadata !1538), !dbg !7534
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1318, metadata !1538), !dbg !7535
  %0 = bitcast %struct.PyMemoryViewObject** %mv to i8*, !dbg !7536
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !7536
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %mv, metadata !1319, metadata !1538), !dbg !7537
  store %struct.PyMemoryViewObject* null, %struct.PyMemoryViewObject** %mv, align 8, !dbg !7537, !tbaa !1534
  %1 = bitcast %struct._object** %shape to i8*, !dbg !7538
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !7538
  call void @llvm.dbg.declare(metadata %struct._object** %shape, metadata !1320, metadata !1538), !dbg !7539
  store %struct._object* null, %struct._object** %shape, align 8, !dbg !7539, !tbaa !1534
  %2 = bitcast %struct._object** %format to i8*, !dbg !7540
  call void @llvm.lifetime.start(i64 8, i8* %2) #3, !dbg !7540
  call void @llvm.dbg.declare(metadata %struct._object** %format, metadata !1321, metadata !1538), !dbg !7541
  %3 = bitcast i64* %ndim to i8*, !dbg !7542
  call void @llvm.lifetime.start(i64 8, i8* %3) #3, !dbg !7542
  call void @llvm.dbg.declare(metadata i64* %ndim, metadata !1322, metadata !1538), !dbg !7543
  store i64 1, i64* %ndim, align 8, !dbg !7543, !tbaa !1603
  %4 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !7544, !tbaa !1534
  %flags = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %4, i32 0, i32 3, !dbg !7546
  %5 = load i32, i32* %flags, align 4, !dbg !7546, !tbaa !1894
  %and = and i32 %5, 1, !dbg !7547
  %tobool = icmp ne i32 %and, 0, !dbg !7547
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !7548

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !7549, !tbaa !1534
  %mbuf = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %6, i32 0, i32 1, !dbg !7551
  %7 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !7551, !tbaa !1805
  %flags1 = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %7, i32 0, i32 1, !dbg !7552
  %8 = load i32, i32* %flags1, align 4, !dbg !7552, !tbaa !1545
  %and2 = and i32 %8, 1, !dbg !7553
  %tobool3 = icmp ne i32 %and2, 0, !dbg !7553
  br i1 %tobool3, label %if.then, label %if.end, !dbg !7554

if.then:                                          ; preds = %lor.lhs.false, %entry
  %9 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !7555, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %9, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2, i32 0, i32 0)), !dbg !7559
  store %struct._object* null, %struct._object** %retval, !dbg !7560
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7560

if.end:                                           ; preds = %lor.lhs.false
  %10 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !7561, !tbaa !1534
  %11 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !7563, !tbaa !1534
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %10, %struct._object* %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.51, i32 0, i32 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @memory_cast.kwlist, i32 0, i32 0), %struct._object** %format, %struct._object** %shape), !dbg !7564
  %tobool4 = icmp ne i32 %call, 0, !dbg !7564
  br i1 %tobool4, label %if.end.6, label %if.then.5, !dbg !7565

if.then.5:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !7566
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7566

if.end.6:                                         ; preds = %if.end
  %12 = load %struct._object*, %struct._object** %format, align 8, !dbg !7568, !tbaa !1534
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 1, !dbg !7570
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7570, !tbaa !1650
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i32 0, i32 19, !dbg !7571
  %14 = load i64, i64* %tp_flags, align 8, !dbg !7571, !tbaa !4742
  %and7 = and i64 %14, 268435456, !dbg !7572
  %cmp = icmp ne i64 %and7, 0, !dbg !7573
  br i1 %cmp, label %if.end.9, label %if.then.8, !dbg !7574

if.then.8:                                        ; preds = %if.end.6
  %15 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !7575, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %15, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.52, i32 0, i32 0)), !dbg !7577
  store %struct._object* null, %struct._object** %retval, !dbg !7578
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7578

if.end.9:                                         ; preds = %if.end.6
  %16 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !7579, !tbaa !1534
  %flags10 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %16, i32 0, i32 3, !dbg !7581
  %17 = load i32, i32* %flags10, align 4, !dbg !7581, !tbaa !1894
  %and11 = and i32 %17, 10, !dbg !7582
  %tobool12 = icmp ne i32 %and11, 0, !dbg !7582
  br i1 %tobool12, label %if.end.14, label %if.then.13, !dbg !7583

if.then.13:                                       ; preds = %if.end.9
  %18 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !7584, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %18, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.53, i32 0, i32 0)), !dbg !7586
  store %struct._object* null, %struct._object** %retval, !dbg !7587
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7587

if.end.14:                                        ; preds = %if.end.9
  %19 = load %struct._object*, %struct._object** %shape, align 8, !dbg !7588, !tbaa !1534
  %tobool15 = icmp ne %struct._object* %19, null, !dbg !7588
  br i1 %tobool15, label %land.lhs.true, label %lor.lhs.false.16, !dbg !7590

lor.lhs.false.16:                                 ; preds = %if.end.14
  %20 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !7591, !tbaa !1534
  %view = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %20, i32 0, i32 5, !dbg !7593
  %ndim17 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view, i32 0, i32 5, !dbg !7594
  %21 = load i32, i32* %ndim17, align 4, !dbg !7594, !tbaa !3452
  %cmp18 = icmp ne i32 %21, 1, !dbg !7595
  br i1 %cmp18, label %land.lhs.true, label %if.end.22, !dbg !7596

land.lhs.true:                                    ; preds = %lor.lhs.false.16, %if.end.14
  %22 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !7597, !tbaa !1534
  %call19 = call i32 @zero_in_shape(%struct.PyMemoryViewObject* %22), !dbg !7600
  %tobool20 = icmp ne i32 %call19, 0, !dbg !7600
  br i1 %tobool20, label %if.then.21, label %if.end.22, !dbg !7601

if.then.21:                                       ; preds = %land.lhs.true
  %23 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !7602, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %23, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.54, i32 0, i32 0)), !dbg !7604
  store %struct._object* null, %struct._object** %retval, !dbg !7605
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7605

if.end.22:                                        ; preds = %land.lhs.true, %lor.lhs.false.16
  %24 = load %struct._object*, %struct._object** %shape, align 8, !dbg !7606, !tbaa !1534
  %tobool23 = icmp ne %struct._object* %24, null, !dbg !7606
  br i1 %tobool23, label %if.then.24, label %if.end.51, !dbg !7608

if.then.24:                                       ; preds = %if.end.22
  %25 = load %struct._object*, %struct._object** %shape, align 8, !dbg !7609, !tbaa !1534
  %ob_type25 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 1, !dbg !7612
  %26 = load %struct._typeobject*, %struct._typeobject** %ob_type25, align 8, !dbg !7612, !tbaa !1650
  %tp_flags26 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %26, i32 0, i32 19, !dbg !7613
  %27 = load i64, i64* %tp_flags26, align 8, !dbg !7613, !tbaa !4742
  %and27 = and i64 %27, 33554432, !dbg !7614
  %cmp28 = icmp ne i64 %and27, 0, !dbg !7615
  br i1 %cmp28, label %if.end.35, label %land.lhs.true.29, !dbg !7616

land.lhs.true.29:                                 ; preds = %if.then.24
  %28 = load %struct._object*, %struct._object** %shape, align 8, !dbg !7617, !tbaa !1534
  %ob_type30 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 1, !dbg !7619
  %29 = load %struct._typeobject*, %struct._typeobject** %ob_type30, align 8, !dbg !7619, !tbaa !1650
  %tp_flags31 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %29, i32 0, i32 19, !dbg !7620
  %30 = load i64, i64* %tp_flags31, align 8, !dbg !7620, !tbaa !4742
  %and32 = and i64 %30, 67108864, !dbg !7621
  %cmp33 = icmp ne i64 %and32, 0, !dbg !7622
  br i1 %cmp33, label %if.end.35, label %if.then.34, !dbg !7623

if.then.34:                                       ; preds = %land.lhs.true.29
  %31 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !7624, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %31, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.55, i32 0, i32 0)), !dbg !7627
  store %struct._object* null, %struct._object** %retval, !dbg !7628
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7628

if.end.35:                                        ; preds = %land.lhs.true.29, %if.then.24
  %32 = load %struct._object*, %struct._object** %shape, align 8, !dbg !7629, !tbaa !1534
  %ob_type36 = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 1, !dbg !7630
  %33 = load %struct._typeobject*, %struct._typeobject** %ob_type36, align 8, !dbg !7630, !tbaa !1650
  %tp_flags37 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %33, i32 0, i32 19, !dbg !7631
  %34 = load i64, i64* %tp_flags37, align 8, !dbg !7631, !tbaa !4742
  %and38 = and i64 %34, 33554432, !dbg !7632
  %cmp39 = icmp ne i64 %and38, 0, !dbg !7633
  br i1 %cmp39, label %cond.true, label %cond.false, !dbg !7634

cond.true:                                        ; preds = %if.end.35
  %35 = load %struct._object*, %struct._object** %shape, align 8, !dbg !7635, !tbaa !1534
  %36 = bitcast %struct._object* %35 to %struct.PyVarObject*, !dbg !7637
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %36, i32 0, i32 1, !dbg !7638
  %37 = load i64, i64* %ob_size, align 8, !dbg !7638, !tbaa !4750
  br label %cond.end, !dbg !7634

cond.false:                                       ; preds = %if.end.35
  %38 = load %struct._object*, %struct._object** %shape, align 8, !dbg !7639, !tbaa !1534
  %39 = bitcast %struct._object* %38 to %struct.PyVarObject*, !dbg !7641
  %ob_size40 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %39, i32 0, i32 1, !dbg !7642
  %40 = load i64, i64* %ob_size40, align 8, !dbg !7642, !tbaa !4750
  br label %cond.end, !dbg !7634

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %37, %cond.true ], [ %40, %cond.false ], !dbg !7634
  store i64 %cond, i64* %ndim, align 8, !dbg !7643, !tbaa !1603
  %41 = load i64, i64* %ndim, align 8, !dbg !7646, !tbaa !1603
  %cmp41 = icmp sgt i64 %41, 64, !dbg !7648
  br i1 %cmp41, label %if.then.42, label %if.end.43, !dbg !7649

if.then.42:                                       ; preds = %cond.end
  %42 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !7650, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %42, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.9, i32 0, i32 0)), !dbg !7652
  store %struct._object* null, %struct._object** %retval, !dbg !7653
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7653

if.end.43:                                        ; preds = %cond.end
  %43 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !7654, !tbaa !1534
  %view44 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %43, i32 0, i32 5, !dbg !7656
  %ndim45 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view44, i32 0, i32 5, !dbg !7657
  %44 = load i32, i32* %ndim45, align 4, !dbg !7657, !tbaa !3452
  %cmp46 = icmp ne i32 %44, 1, !dbg !7658
  br i1 %cmp46, label %land.lhs.true.47, label %if.end.50, !dbg !7659

land.lhs.true.47:                                 ; preds = %if.end.43
  %45 = load i64, i64* %ndim, align 8, !dbg !7660, !tbaa !1603
  %cmp48 = icmp ne i64 %45, 1, !dbg !7662
  br i1 %cmp48, label %if.then.49, label %if.end.50, !dbg !7663

if.then.49:                                       ; preds = %land.lhs.true.47
  %46 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !7664, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %46, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.56, i32 0, i32 0)), !dbg !7666
  store %struct._object* null, %struct._object** %retval, !dbg !7667
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7667

if.end.50:                                        ; preds = %land.lhs.true.47, %if.end.43
  br label %if.end.51, !dbg !7668

if.end.51:                                        ; preds = %if.end.50, %if.end.22
  %47 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !7669, !tbaa !1534
  %mbuf52 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %47, i32 0, i32 1, !dbg !7670
  %48 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf52, align 8, !dbg !7670, !tbaa !1805
  %49 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !7671, !tbaa !1534
  %view53 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %49, i32 0, i32 5, !dbg !7672
  %50 = load i64, i64* %ndim, align 8, !dbg !7673, !tbaa !1603
  %cmp54 = icmp eq i64 %50, 0, !dbg !7674
  br i1 %cmp54, label %cond.true.55, label %cond.false.56, !dbg !7673

cond.true.55:                                     ; preds = %if.end.51
  br label %cond.end.57, !dbg !7675

cond.false.56:                                    ; preds = %if.end.51
  %51 = load i64, i64* %ndim, align 8, !dbg !7677, !tbaa !1603
  %conv = trunc i64 %51 to i32, !dbg !7679
  br label %cond.end.57, !dbg !7673

cond.end.57:                                      ; preds = %cond.false.56, %cond.true.55
  %cond58 = phi i32 [ 1, %cond.true.55 ], [ %conv, %cond.false.56 ], !dbg !7673
  %call59 = call %struct._object* @mbuf_add_incomplete_view(%struct._PyManagedBufferObject* %48, %struct.bufferinfo* %view53, i32 %cond58), !dbg !7680
  %52 = bitcast %struct._object* %call59 to %struct.PyMemoryViewObject*, !dbg !7683
  store %struct.PyMemoryViewObject* %52, %struct.PyMemoryViewObject** %mv, align 8, !dbg !7684, !tbaa !1534
  %53 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !7685, !tbaa !1534
  %cmp60 = icmp eq %struct.PyMemoryViewObject* %53, null, !dbg !7687
  br i1 %cmp60, label %if.then.62, label %if.end.63, !dbg !7688

if.then.62:                                       ; preds = %cond.end.57
  store %struct._object* null, %struct._object** %retval, !dbg !7689
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7689

if.end.63:                                        ; preds = %cond.end.57
  %54 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !7690, !tbaa !1534
  %55 = load %struct._object*, %struct._object** %format, align 8, !dbg !7692, !tbaa !1534
  %call64 = call i32 @cast_to_1D(%struct.PyMemoryViewObject* %54, %struct._object* %55), !dbg !7693
  %cmp65 = icmp slt i32 %call64, 0, !dbg !7694
  br i1 %cmp65, label %if.then.67, label %if.end.68, !dbg !7695

if.then.67:                                       ; preds = %if.end.63
  br label %error, !dbg !7696

if.end.68:                                        ; preds = %if.end.63
  %56 = load %struct._object*, %struct._object** %shape, align 8, !dbg !7697, !tbaa !1534
  %tobool69 = icmp ne %struct._object* %56, null, !dbg !7697
  br i1 %tobool69, label %land.lhs.true.70, label %if.end.76, !dbg !7699

land.lhs.true.70:                                 ; preds = %if.end.68
  %57 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !7700, !tbaa !1534
  %58 = load %struct._object*, %struct._object** %shape, align 8, !dbg !7702, !tbaa !1534
  %59 = load i64, i64* %ndim, align 8, !dbg !7703, !tbaa !1603
  %conv71 = trunc i64 %59 to i32, !dbg !7704
  %call72 = call i32 @cast_to_ND(%struct.PyMemoryViewObject* %57, %struct._object* %58, i32 %conv71), !dbg !7705
  %cmp73 = icmp slt i32 %call72, 0, !dbg !7706
  br i1 %cmp73, label %if.then.75, label %if.end.76, !dbg !7707

if.then.75:                                       ; preds = %land.lhs.true.70
  br label %error, !dbg !7708

if.end.76:                                        ; preds = %land.lhs.true.70, %if.end.68
  %60 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !7709, !tbaa !1534
  %61 = bitcast %struct.PyMemoryViewObject* %60 to %struct._object*, !dbg !7710
  store %struct._object* %61, %struct._object** %retval, !dbg !7711
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7711

error:                                            ; preds = %if.then.75, %if.then.67
  br label %do.body, !dbg !7712

do.body:                                          ; preds = %error
  %62 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7713
  call void @llvm.lifetime.start(i64 8, i8* %62) #3, !dbg !7713
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1323, metadata !1538), !dbg !7715
  %63 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv, align 8, !dbg !7716, !tbaa !1534
  %64 = bitcast %struct.PyMemoryViewObject* %63 to %struct._object*, !dbg !7717
  store %struct._object* %64, %struct._object** %_py_decref_tmp, align 8, !dbg !7715, !tbaa !1534
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7718, !tbaa !1534
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %65, i32 0, i32 0, !dbg !7720
  %66 = load i64, i64* %ob_refcnt, align 8, !dbg !7721, !tbaa !1642
  %dec = add i64 %66, -1, !dbg !7721
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7721, !tbaa !1642
  %cmp77 = icmp ne i64 %dec, 0, !dbg !7722
  br i1 %cmp77, label %if.then.79, label %if.else, !dbg !7723

if.then.79:                                       ; preds = %do.body
  br label %if.end.81, !dbg !7724

if.else:                                          ; preds = %do.body
  %67 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7726, !tbaa !1534
  %ob_type80 = getelementptr inbounds %struct._object, %struct._object* %67, i32 0, i32 1, !dbg !7728
  %68 = load %struct._typeobject*, %struct._typeobject** %ob_type80, align 8, !dbg !7728, !tbaa !1650
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %68, i32 0, i32 4, !dbg !7729
  %69 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7729, !tbaa !1652
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7730, !tbaa !1534
  call void %69(%struct._object* %70), !dbg !7731
  br label %if.end.81

if.end.81:                                        ; preds = %if.else, %if.then.79
  %71 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7732
  call void @llvm.lifetime.end(i64 8, i8* %71) #3, !dbg !7732
  br label %do.cond, !dbg !7734

do.cond:                                          ; preds = %if.end.81
  br label %do.end, !dbg !7735

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !7737
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7737

cleanup:                                          ; preds = %do.end, %if.end.76, %if.then.62, %if.then.49, %if.then.42, %if.then.34, %if.then.21, %if.then.13, %if.then.8, %if.then.5, %if.then
  %72 = bitcast i64* %ndim to i8*, !dbg !7738
  call void @llvm.lifetime.end(i64 8, i8* %72) #3, !dbg !7738
  %73 = bitcast %struct._object** %format to i8*, !dbg !7738
  call void @llvm.lifetime.end(i64 8, i8* %73) #3, !dbg !7738
  %74 = bitcast %struct._object** %shape to i8*, !dbg !7738
  call void @llvm.lifetime.end(i64 8, i8* %74) #3, !dbg !7738
  %75 = bitcast %struct.PyMemoryViewObject** %mv to i8*, !dbg !7738
  call void @llvm.lifetime.end(i64 8, i8* %75) #3, !dbg !7738
  %76 = load %struct._object*, %struct._object** %retval, !dbg !7738
  ret %struct._object* %76, !dbg !7738
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @memory_enter(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1372, metadata !1538), !dbg !7739
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1373, metadata !1538), !dbg !7740
  %0 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !7741, !tbaa !1534
  %1 = bitcast %struct._object* %0 to %struct.PyMemoryViewObject*, !dbg !7743
  %flags = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %1, i32 0, i32 3, !dbg !7744
  %2 = load i32, i32* %flags, align 4, !dbg !7744, !tbaa !1894
  %and = and i32 %2, 1, !dbg !7745
  %tobool = icmp ne i32 %and, 0, !dbg !7745
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !7746

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !7747, !tbaa !1534
  %4 = bitcast %struct._object* %3 to %struct.PyMemoryViewObject*, !dbg !7749
  %mbuf = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %4, i32 0, i32 1, !dbg !7750
  %5 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !7750, !tbaa !1805
  %flags1 = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %5, i32 0, i32 1, !dbg !7751
  %6 = load i32, i32* %flags1, align 4, !dbg !7751, !tbaa !1545
  %and2 = and i32 %6, 1, !dbg !7752
  %tobool3 = icmp ne i32 %and2, 0, !dbg !7752
  br i1 %tobool3, label %if.then, label %if.end, !dbg !7753

if.then:                                          ; preds = %lor.lhs.false, %entry
  %7 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !7754, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2, i32 0, i32 0)), !dbg !7758
  store %struct._object* null, %struct._object** %retval, !dbg !7759
  br label %return, !dbg !7759

if.end:                                           ; preds = %lor.lhs.false
  %8 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !7760, !tbaa !1534
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !7761
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !7762, !tbaa !1642
  %inc = add i64 %9, 1, !dbg !7762
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !7762, !tbaa !1642
  %10 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !7763, !tbaa !1534
  store %struct._object* %10, %struct._object** %retval, !dbg !7764
  br label %return, !dbg !7764

return:                                           ; preds = %if.end, %if.then
  %11 = load %struct._object*, %struct._object** %retval, !dbg !7765
  ret %struct._object* %11, !dbg !7765
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @memory_exit(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1376, metadata !1538), !dbg !7766
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1377, metadata !1538), !dbg !7767
  %0 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !7768, !tbaa !1534
  %1 = bitcast %struct._object* %0 to %struct.PyMemoryViewObject*, !dbg !7769
  %call = call %struct._object* @memory_release(%struct.PyMemoryViewObject* %1, %struct._object* null), !dbg !7770
  ret %struct._object* %call, !dbg !7771
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @tolist_base(i8* %ptr, i64* %shape, i64* %strides, i64* %suboffsets, i8* %fmt) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %ptr.addr = alloca i8*, align 8
  %shape.addr = alloca i64*, align 8
  %strides.addr = alloca i64*, align 8
  %suboffsets.addr = alloca i64*, align 8
  %fmt.addr = alloca i8*, align 8
  %lst = alloca %struct._object*, align 8
  %item = alloca %struct._object*, align 8
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %xptr = alloca i8*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !1275, metadata !1538), !dbg !7772
  store i64* %shape, i64** %shape.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i64** %shape.addr, metadata !1276, metadata !1538), !dbg !7773
  store i64* %strides, i64** %strides.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i64** %strides.addr, metadata !1277, metadata !1538), !dbg !7774
  store i64* %suboffsets, i64** %suboffsets.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i64** %suboffsets.addr, metadata !1278, metadata !1538), !dbg !7775
  store i8* %fmt, i8** %fmt.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !1279, metadata !1538), !dbg !7776
  %0 = bitcast %struct._object** %lst to i8*, !dbg !7777
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !7777
  call void @llvm.dbg.declare(metadata %struct._object** %lst, metadata !1280, metadata !1538), !dbg !7778
  %1 = bitcast %struct._object** %item to i8*, !dbg !7777
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !7777
  call void @llvm.dbg.declare(metadata %struct._object** %item, metadata !1281, metadata !1538), !dbg !7779
  %2 = bitcast i64* %i to i8*, !dbg !7780
  call void @llvm.lifetime.start(i64 8, i8* %2) #3, !dbg !7780
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1282, metadata !1538), !dbg !7781
  %3 = load i64*, i64** %shape.addr, align 8, !dbg !7782, !tbaa !1534
  %arrayidx = getelementptr i64, i64* %3, i64 0, !dbg !7782
  %4 = load i64, i64* %arrayidx, align 8, !dbg !7782, !tbaa !1603
  %call = call %struct._object* @PyList_New(i64 %4), !dbg !7783
  store %struct._object* %call, %struct._object** %lst, align 8, !dbg !7784, !tbaa !1534
  %5 = load %struct._object*, %struct._object** %lst, align 8, !dbg !7785, !tbaa !1534
  %cmp = icmp eq %struct._object* %5, null, !dbg !7787
  br i1 %cmp, label %if.then, label %if.end, !dbg !7788

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !7789
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.16, !dbg !7789

if.end:                                           ; preds = %entry
  store i64 0, i64* %i, align 8, !dbg !7790, !tbaa !1603
  br label %for.cond, !dbg !7791

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i64, i64* %i, align 8, !dbg !7792, !tbaa !1603
  %7 = load i64*, i64** %shape.addr, align 8, !dbg !7795, !tbaa !1534
  %arrayidx1 = getelementptr i64, i64* %7, i64 0, !dbg !7795
  %8 = load i64, i64* %arrayidx1, align 8, !dbg !7795, !tbaa !1603
  %cmp2 = icmp slt i64 %6, %8, !dbg !7796
  br i1 %cmp2, label %for.body, label %for.end, !dbg !7797

for.body:                                         ; preds = %for.cond
  %9 = bitcast i8** %xptr to i8*, !dbg !7798
  call void @llvm.lifetime.start(i64 8, i8* %9) #3, !dbg !7798
  call void @llvm.dbg.declare(metadata i8** %xptr, metadata !1283, metadata !1538), !dbg !7799
  %10 = load i64*, i64** %suboffsets.addr, align 8, !dbg !7800, !tbaa !1534
  %tobool = icmp ne i64* %10, null, !dbg !7800
  br i1 %tobool, label %land.lhs.true, label %cond.false, !dbg !7801

land.lhs.true:                                    ; preds = %for.body
  %11 = load i64*, i64** %suboffsets.addr, align 8, !dbg !7802, !tbaa !1534
  %arrayidx3 = getelementptr i64, i64* %11, i64 0, !dbg !7802
  %12 = load i64, i64* %arrayidx3, align 8, !dbg !7802, !tbaa !1603
  %cmp4 = icmp sge i64 %12, 0, !dbg !7804
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !7805

cond.true:                                        ; preds = %land.lhs.true
  %13 = load i8*, i8** %ptr.addr, align 8, !dbg !7806, !tbaa !1534
  %14 = bitcast i8* %13 to i8**, !dbg !7808
  %15 = load i8*, i8** %14, align 8, !dbg !7809, !tbaa !1534
  %16 = load i64*, i64** %suboffsets.addr, align 8, !dbg !7810, !tbaa !1534
  %arrayidx5 = getelementptr i64, i64* %16, i64 0, !dbg !7810
  %17 = load i64, i64* %arrayidx5, align 8, !dbg !7810, !tbaa !1603
  %add.ptr = getelementptr i8, i8* %15, i64 %17, !dbg !7811
  br label %cond.end, !dbg !7805

cond.false:                                       ; preds = %land.lhs.true, %for.body
  %18 = load i8*, i8** %ptr.addr, align 8, !dbg !7812, !tbaa !1534
  br label %cond.end, !dbg !7805

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ %18, %cond.false ], !dbg !7805
  store i8* %cond, i8** %xptr, align 8, !dbg !7815, !tbaa !1534
  %19 = load i8*, i8** %xptr, align 8, !dbg !7818, !tbaa !1534
  %20 = load i8*, i8** %fmt.addr, align 8, !dbg !7819, !tbaa !1534
  %call6 = call %struct._object* @unpack_single(i8* %19, i8* %20), !dbg !7820
  store %struct._object* %call6, %struct._object** %item, align 8, !dbg !7821, !tbaa !1534
  %21 = load %struct._object*, %struct._object** %item, align 8, !dbg !7822, !tbaa !1534
  %cmp7 = icmp eq %struct._object* %21, null, !dbg !7823
  br i1 %cmp7, label %if.then.8, label %if.end.12, !dbg !7824

if.then.8:                                        ; preds = %cond.end
  br label %do.body, !dbg !7825

do.body:                                          ; preds = %if.then.8
  %22 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7826
  call void @llvm.lifetime.start(i64 8, i8* %22) #3, !dbg !7826
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1287, metadata !1538), !dbg !7828
  %23 = load %struct._object*, %struct._object** %lst, align 8, !dbg !7829, !tbaa !1534
  store %struct._object* %23, %struct._object** %_py_decref_tmp, align 8, !dbg !7828, !tbaa !1534
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7830, !tbaa !1534
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0, !dbg !7832
  %25 = load i64, i64* %ob_refcnt, align 8, !dbg !7833, !tbaa !1642
  %dec = add i64 %25, -1, !dbg !7833
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7833, !tbaa !1642
  %cmp9 = icmp ne i64 %dec, 0, !dbg !7834
  br i1 %cmp9, label %if.then.10, label %if.else, !dbg !7835

if.then.10:                                       ; preds = %do.body
  br label %if.end.11, !dbg !7836

if.else:                                          ; preds = %do.body
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7838, !tbaa !1534
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 1, !dbg !7840
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7840, !tbaa !1650
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i32 0, i32 4, !dbg !7841
  %28 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7841, !tbaa !1652
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7842, !tbaa !1534
  call void %28(%struct._object* %29), !dbg !7843
  br label %if.end.11

if.end.11:                                        ; preds = %if.else, %if.then.10
  %30 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7844
  call void @llvm.lifetime.end(i64 8, i8* %30) #3, !dbg !7844
  br label %do.cond, !dbg !7846

do.cond:                                          ; preds = %if.end.11
  br label %do.end, !dbg !7847

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !7849
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7849

if.end.12:                                        ; preds = %cond.end
  %31 = load %struct._object*, %struct._object** %item, align 8, !dbg !7850, !tbaa !1534
  %32 = load i64, i64* %i, align 8, !dbg !7851, !tbaa !1603
  %33 = load %struct._object*, %struct._object** %lst, align 8, !dbg !7852, !tbaa !1534
  %34 = bitcast %struct._object* %33 to %struct.PyListObject*, !dbg !7853
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %34, i32 0, i32 1, !dbg !7854
  %35 = load %struct._object**, %struct._object*** %ob_item, align 8, !dbg !7854, !tbaa !7855
  %arrayidx13 = getelementptr %struct._object*, %struct._object** %35, i64 %32, !dbg !7857
  store %struct._object* %31, %struct._object** %arrayidx13, align 8, !dbg !7858, !tbaa !1534
  store i32 0, i32* %cleanup.dest.slot, !dbg !7859
  br label %cleanup, !dbg !7859

cleanup:                                          ; preds = %if.end.12, %do.end
  %36 = bitcast i8** %xptr to i8*, !dbg !7860
  call void @llvm.lifetime.end(i64 8, i8* %36) #3, !dbg !7860
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %for.inc, !dbg !7861

for.inc:                                          ; preds = %cleanup.cont
  %37 = load i64*, i64** %strides.addr, align 8, !dbg !7862, !tbaa !1534
  %arrayidx14 = getelementptr i64, i64* %37, i64 0, !dbg !7862
  %38 = load i64, i64* %arrayidx14, align 8, !dbg !7862, !tbaa !1603
  %39 = load i8*, i8** %ptr.addr, align 8, !dbg !7863, !tbaa !1534
  %add.ptr15 = getelementptr i8, i8* %39, i64 %38, !dbg !7863
  store i8* %add.ptr15, i8** %ptr.addr, align 8, !dbg !7863, !tbaa !1534
  %40 = load i64, i64* %i, align 8, !dbg !7864, !tbaa !1603
  %inc = add i64 %40, 1, !dbg !7864
  store i64 %inc, i64* %i, align 8, !dbg !7864, !tbaa !1603
  br label %for.cond, !dbg !7865

for.end:                                          ; preds = %for.cond
  %41 = load %struct._object*, %struct._object** %lst, align 8, !dbg !7866, !tbaa !1534
  store %struct._object* %41, %struct._object** %retval, !dbg !7867
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.16, !dbg !7867

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.16

cleanup.16:                                       ; preds = %NewDefault, %for.end, %if.then
  %42 = bitcast i64* %i to i8*, !dbg !7868
  call void @llvm.lifetime.end(i64 8, i8* %42) #3, !dbg !7868
  %43 = bitcast %struct._object** %item to i8*, !dbg !7868
  call void @llvm.lifetime.end(i64 8, i8* %43) #3, !dbg !7868
  %44 = bitcast %struct._object** %lst to i8*, !dbg !7868
  call void @llvm.lifetime.end(i64 8, i8* %44) #3, !dbg !7868
  %45 = load %struct._object*, %struct._object** %retval, !dbg !7868
  ret %struct._object* %45, !dbg !7868
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @tolist_rec(i8* %ptr, i64 %ndim, i64* %shape, i64* %strides, i64* %suboffsets, i8* %fmt) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %ptr.addr = alloca i8*, align 8
  %ndim.addr = alloca i64, align 8
  %shape.addr = alloca i64*, align 8
  %strides.addr = alloca i64*, align 8
  %suboffsets.addr = alloca i64*, align 8
  %fmt.addr = alloca i8*, align 8
  %lst = alloca %struct._object*, align 8
  %item = alloca %struct._object*, align 8
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %xptr = alloca i8*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !1295, metadata !1538), !dbg !7869
  store i64 %ndim, i64* %ndim.addr, align 8, !tbaa !1603
  call void @llvm.dbg.declare(metadata i64* %ndim.addr, metadata !1296, metadata !1538), !dbg !7870
  store i64* %shape, i64** %shape.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i64** %shape.addr, metadata !1297, metadata !1538), !dbg !7871
  store i64* %strides, i64** %strides.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i64** %strides.addr, metadata !1298, metadata !1538), !dbg !7872
  store i64* %suboffsets, i64** %suboffsets.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i64** %suboffsets.addr, metadata !1299, metadata !1538), !dbg !7873
  store i8* %fmt, i8** %fmt.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !1300, metadata !1538), !dbg !7874
  %0 = bitcast %struct._object** %lst to i8*, !dbg !7875
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !7875
  call void @llvm.dbg.declare(metadata %struct._object** %lst, metadata !1301, metadata !1538), !dbg !7876
  %1 = bitcast %struct._object** %item to i8*, !dbg !7875
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !7875
  call void @llvm.dbg.declare(metadata %struct._object** %item, metadata !1302, metadata !1538), !dbg !7877
  %2 = bitcast i64* %i to i8*, !dbg !7878
  call void @llvm.lifetime.start(i64 8, i8* %2) #3, !dbg !7878
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1303, metadata !1538), !dbg !7879
  %3 = load i64, i64* %ndim.addr, align 8, !dbg !7880, !tbaa !1603
  %cmp = icmp eq i64 %3, 1, !dbg !7882
  br i1 %cmp, label %if.then, label %if.end, !dbg !7883

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !7884, !tbaa !1534
  %5 = load i64*, i64** %shape.addr, align 8, !dbg !7885, !tbaa !1534
  %6 = load i64*, i64** %strides.addr, align 8, !dbg !7886, !tbaa !1534
  %7 = load i64*, i64** %suboffsets.addr, align 8, !dbg !7887, !tbaa !1534
  %8 = load i8*, i8** %fmt.addr, align 8, !dbg !7888, !tbaa !1534
  %call = call %struct._object* @tolist_base(i8* %4, i64* %5, i64* %6, i64* %7, i8* %8), !dbg !7889
  store %struct._object* %call, %struct._object** %retval, !dbg !7890
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.28, !dbg !7890

if.end:                                           ; preds = %entry
  %9 = load i64*, i64** %shape.addr, align 8, !dbg !7891, !tbaa !1534
  %arrayidx = getelementptr i64, i64* %9, i64 0, !dbg !7891
  %10 = load i64, i64* %arrayidx, align 8, !dbg !7891, !tbaa !1603
  %call1 = call %struct._object* @PyList_New(i64 %10), !dbg !7892
  store %struct._object* %call1, %struct._object** %lst, align 8, !dbg !7893, !tbaa !1534
  %11 = load %struct._object*, %struct._object** %lst, align 8, !dbg !7894, !tbaa !1534
  %cmp2 = icmp eq %struct._object* %11, null, !dbg !7896
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !7897

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !7898
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.28, !dbg !7898

if.end.4:                                         ; preds = %if.end
  store i64 0, i64* %i, align 8, !dbg !7899, !tbaa !1603
  br label %for.cond, !dbg !7900

for.cond:                                         ; preds = %for.inc, %if.end.4
  %12 = load i64, i64* %i, align 8, !dbg !7901, !tbaa !1603
  %13 = load i64*, i64** %shape.addr, align 8, !dbg !7904, !tbaa !1534
  %arrayidx5 = getelementptr i64, i64* %13, i64 0, !dbg !7904
  %14 = load i64, i64* %arrayidx5, align 8, !dbg !7904, !tbaa !1603
  %cmp6 = icmp slt i64 %12, %14, !dbg !7905
  br i1 %cmp6, label %for.body, label %for.end, !dbg !7906

for.body:                                         ; preds = %for.cond
  %15 = bitcast i8** %xptr to i8*, !dbg !7907
  call void @llvm.lifetime.start(i64 8, i8* %15) #3, !dbg !7907
  call void @llvm.dbg.declare(metadata i8** %xptr, metadata !1304, metadata !1538), !dbg !7908
  %16 = load i64*, i64** %suboffsets.addr, align 8, !dbg !7909, !tbaa !1534
  %tobool = icmp ne i64* %16, null, !dbg !7909
  br i1 %tobool, label %land.lhs.true, label %cond.false, !dbg !7910

land.lhs.true:                                    ; preds = %for.body
  %17 = load i64*, i64** %suboffsets.addr, align 8, !dbg !7911, !tbaa !1534
  %arrayidx7 = getelementptr i64, i64* %17, i64 0, !dbg !7911
  %18 = load i64, i64* %arrayidx7, align 8, !dbg !7911, !tbaa !1603
  %cmp8 = icmp sge i64 %18, 0, !dbg !7913
  br i1 %cmp8, label %cond.true, label %cond.false, !dbg !7914

cond.true:                                        ; preds = %land.lhs.true
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !7915, !tbaa !1534
  %20 = bitcast i8* %19 to i8**, !dbg !7917
  %21 = load i8*, i8** %20, align 8, !dbg !7918, !tbaa !1534
  %22 = load i64*, i64** %suboffsets.addr, align 8, !dbg !7919, !tbaa !1534
  %arrayidx9 = getelementptr i64, i64* %22, i64 0, !dbg !7919
  %23 = load i64, i64* %arrayidx9, align 8, !dbg !7919, !tbaa !1603
  %add.ptr = getelementptr i8, i8* %21, i64 %23, !dbg !7920
  br label %cond.end, !dbg !7914

cond.false:                                       ; preds = %land.lhs.true, %for.body
  %24 = load i8*, i8** %ptr.addr, align 8, !dbg !7921, !tbaa !1534
  br label %cond.end, !dbg !7914

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ %24, %cond.false ], !dbg !7914
  store i8* %cond, i8** %xptr, align 8, !dbg !7924, !tbaa !1534
  %25 = load i8*, i8** %xptr, align 8, !dbg !7927, !tbaa !1534
  %26 = load i64, i64* %ndim.addr, align 8, !dbg !7928, !tbaa !1603
  %sub = sub i64 %26, 1, !dbg !7929
  %27 = load i64*, i64** %shape.addr, align 8, !dbg !7930, !tbaa !1534
  %add.ptr10 = getelementptr i64, i64* %27, i64 1, !dbg !7931
  %28 = load i64*, i64** %strides.addr, align 8, !dbg !7932, !tbaa !1534
  %add.ptr11 = getelementptr i64, i64* %28, i64 1, !dbg !7933
  %29 = load i64*, i64** %suboffsets.addr, align 8, !dbg !7934, !tbaa !1534
  %tobool12 = icmp ne i64* %29, null, !dbg !7934
  br i1 %tobool12, label %cond.true.13, label %cond.false.15, !dbg !7934

cond.true.13:                                     ; preds = %cond.end
  %30 = load i64*, i64** %suboffsets.addr, align 8, !dbg !7935, !tbaa !1534
  %add.ptr14 = getelementptr i64, i64* %30, i64 1, !dbg !7936
  br label %cond.end.16, !dbg !7934

cond.false.15:                                    ; preds = %cond.end
  br label %cond.end.16, !dbg !7937

cond.end.16:                                      ; preds = %cond.false.15, %cond.true.13
  %cond17 = phi i64* [ %add.ptr14, %cond.true.13 ], [ null, %cond.false.15 ], !dbg !7934
  %31 = load i8*, i8** %fmt.addr, align 8, !dbg !7938, !tbaa !1534
  %call18 = call %struct._object* @tolist_rec(i8* %25, i64 %sub, i64* %add.ptr10, i64* %add.ptr11, i64* %cond17, i8* %31), !dbg !7939
  store %struct._object* %call18, %struct._object** %item, align 8, !dbg !7940, !tbaa !1534
  %32 = load %struct._object*, %struct._object** %item, align 8, !dbg !7941, !tbaa !1534
  %cmp19 = icmp eq %struct._object* %32, null, !dbg !7942
  br i1 %cmp19, label %if.then.20, label %if.end.24, !dbg !7943

if.then.20:                                       ; preds = %cond.end.16
  br label %do.body, !dbg !7944

do.body:                                          ; preds = %if.then.20
  %33 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7945
  call void @llvm.lifetime.start(i64 8, i8* %33) #3, !dbg !7945
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1308, metadata !1538), !dbg !7947
  %34 = load %struct._object*, %struct._object** %lst, align 8, !dbg !7948, !tbaa !1534
  store %struct._object* %34, %struct._object** %_py_decref_tmp, align 8, !dbg !7947, !tbaa !1534
  %35 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7949, !tbaa !1534
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %35, i32 0, i32 0, !dbg !7951
  %36 = load i64, i64* %ob_refcnt, align 8, !dbg !7952, !tbaa !1642
  %dec = add i64 %36, -1, !dbg !7952
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7952, !tbaa !1642
  %cmp21 = icmp ne i64 %dec, 0, !dbg !7953
  br i1 %cmp21, label %if.then.22, label %if.else, !dbg !7954

if.then.22:                                       ; preds = %do.body
  br label %if.end.23, !dbg !7955

if.else:                                          ; preds = %do.body
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7957, !tbaa !1534
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 1, !dbg !7959
  %38 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7959, !tbaa !1650
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %38, i32 0, i32 4, !dbg !7960
  %39 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7960, !tbaa !1652
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7961, !tbaa !1534
  call void %39(%struct._object* %40), !dbg !7962
  br label %if.end.23

if.end.23:                                        ; preds = %if.else, %if.then.22
  %41 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7963
  call void @llvm.lifetime.end(i64 8, i8* %41) #3, !dbg !7963
  br label %do.cond, !dbg !7965

do.cond:                                          ; preds = %if.end.23
  br label %do.end, !dbg !7966

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !7968
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7968

if.end.24:                                        ; preds = %cond.end.16
  %42 = load %struct._object*, %struct._object** %item, align 8, !dbg !7969, !tbaa !1534
  %43 = load i64, i64* %i, align 8, !dbg !7970, !tbaa !1603
  %44 = load %struct._object*, %struct._object** %lst, align 8, !dbg !7971, !tbaa !1534
  %45 = bitcast %struct._object* %44 to %struct.PyListObject*, !dbg !7972
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %45, i32 0, i32 1, !dbg !7973
  %46 = load %struct._object**, %struct._object*** %ob_item, align 8, !dbg !7973, !tbaa !7855
  %arrayidx25 = getelementptr %struct._object*, %struct._object** %46, i64 %43, !dbg !7974
  store %struct._object* %42, %struct._object** %arrayidx25, align 8, !dbg !7975, !tbaa !1534
  store i32 0, i32* %cleanup.dest.slot, !dbg !7976
  br label %cleanup, !dbg !7976

cleanup:                                          ; preds = %if.end.24, %do.end
  %47 = bitcast i8** %xptr to i8*, !dbg !7977
  call void @llvm.lifetime.end(i64 8, i8* %47) #3, !dbg !7977
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %for.inc, !dbg !7978

for.inc:                                          ; preds = %cleanup.cont
  %48 = load i64*, i64** %strides.addr, align 8, !dbg !7979, !tbaa !1534
  %arrayidx26 = getelementptr i64, i64* %48, i64 0, !dbg !7979
  %49 = load i64, i64* %arrayidx26, align 8, !dbg !7979, !tbaa !1603
  %50 = load i8*, i8** %ptr.addr, align 8, !dbg !7980, !tbaa !1534
  %add.ptr27 = getelementptr i8, i8* %50, i64 %49, !dbg !7980
  store i8* %add.ptr27, i8** %ptr.addr, align 8, !dbg !7980, !tbaa !1534
  %51 = load i64, i64* %i, align 8, !dbg !7981, !tbaa !1603
  %inc = add i64 %51, 1, !dbg !7981
  store i64 %inc, i64* %i, align 8, !dbg !7981, !tbaa !1603
  br label %for.cond, !dbg !7982

for.end:                                          ; preds = %for.cond
  %52 = load %struct._object*, %struct._object** %lst, align 8, !dbg !7983, !tbaa !1534
  store %struct._object* %52, %struct._object** %retval, !dbg !7984
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.28, !dbg !7984

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.28

cleanup.28:                                       ; preds = %NewDefault, %for.end, %if.then.3, %if.then
  %53 = bitcast i64* %i to i8*, !dbg !7985
  call void @llvm.lifetime.end(i64 8, i8* %53) #3, !dbg !7985
  %54 = bitcast %struct._object** %item to i8*, !dbg !7985
  call void @llvm.lifetime.end(i64 8, i8* %54) #3, !dbg !7985
  %55 = bitcast %struct._object** %lst to i8*, !dbg !7985
  call void @llvm.lifetime.end(i64 8, i8* %55) #3, !dbg !7985
  %56 = load %struct._object*, %struct._object** %retval, !dbg !7985
  ret %struct._object* %56, !dbg !7985
}

declare %struct._object* @PyList_New(i64) #1

declare i32 @PyArg_ParseTupleAndKeywords(%struct._object*, %struct._object*, i8*, i8**, ...) #1

; Function Attrs: nounwind uwtable
define internal i32 @zero_in_shape(%struct.PyMemoryViewObject* %mv) #0 {
entry:
  %retval = alloca i32, align 4
  %mv.addr = alloca %struct.PyMemoryViewObject*, align 8
  %view = alloca %struct.bufferinfo*, align 8
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.PyMemoryViewObject* %mv, %struct.PyMemoryViewObject** %mv.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %mv.addr, metadata !1327, metadata !1538), !dbg !7986
  %0 = bitcast %struct.bufferinfo** %view to i8*, !dbg !7987
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !7987
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %view, metadata !1328, metadata !1538), !dbg !7988
  %1 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv.addr, align 8, !dbg !7989, !tbaa !1534
  %view1 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %1, i32 0, i32 5, !dbg !7990
  store %struct.bufferinfo* %view1, %struct.bufferinfo** %view, align 8, !dbg !7988, !tbaa !1534
  %2 = bitcast i64* %i to i8*, !dbg !7991
  call void @llvm.lifetime.start(i64 8, i8* %2) #3, !dbg !7991
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1329, metadata !1538), !dbg !7992
  store i64 0, i64* %i, align 8, !dbg !7993, !tbaa !1603
  br label %for.cond, !dbg !7995

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i64, i64* %i, align 8, !dbg !7996, !tbaa !1603
  %4 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !8000, !tbaa !1534
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %4, i32 0, i32 5, !dbg !8001
  %5 = load i32, i32* %ndim, align 4, !dbg !8001, !tbaa !1771
  %conv = sext i32 %5 to i64, !dbg !8000
  %cmp = icmp slt i64 %3, %conv, !dbg !8002
  br i1 %cmp, label %for.body, label %for.end, !dbg !8003

for.body:                                         ; preds = %for.cond
  %6 = load i64, i64* %i, align 8, !dbg !8004, !tbaa !1603
  %7 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !8006, !tbaa !1534
  %shape = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %7, i32 0, i32 7, !dbg !8007
  %8 = load i64*, i64** %shape, align 8, !dbg !8007, !tbaa !2308
  %arrayidx = getelementptr i64, i64* %8, i64 %6, !dbg !8006
  %9 = load i64, i64* %arrayidx, align 8, !dbg !8006, !tbaa !1603
  %cmp3 = icmp eq i64 %9, 0, !dbg !8008
  br i1 %cmp3, label %if.then, label %if.end, !dbg !8009

if.then:                                          ; preds = %for.body
  store i32 1, i32* %retval, !dbg !8010
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8010

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !8011

for.inc:                                          ; preds = %if.end
  %10 = load i64, i64* %i, align 8, !dbg !8013, !tbaa !1603
  %inc = add i64 %10, 1, !dbg !8013
  store i64 %inc, i64* %i, align 8, !dbg !8013, !tbaa !1603
  br label %for.cond, !dbg !8014

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, !dbg !8015
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8015

cleanup:                                          ; preds = %for.end, %if.then
  %11 = bitcast i64* %i to i8*, !dbg !8016
  call void @llvm.lifetime.end(i64 8, i8* %11) #3, !dbg !8016
  %12 = bitcast %struct.bufferinfo** %view to i8*, !dbg !8016
  call void @llvm.lifetime.end(i64 8, i8* %12) #3, !dbg !8016
  %13 = load i32, i32* %retval, !dbg !8016
  ret i32 %13, !dbg !8016
}

; Function Attrs: nounwind uwtable
define internal i32 @cast_to_1D(%struct.PyMemoryViewObject* %mv, %struct._object* %format) #0 {
entry:
  %retval = alloca i32, align 4
  %mv.addr = alloca %struct.PyMemoryViewObject*, align 8
  %format.addr = alloca %struct._object*, align 8
  %view = alloca %struct.bufferinfo*, align 8
  %asciifmt = alloca %struct._object*, align 8
  %srcchar = alloca i8, align 1
  %destchar = alloca i8, align 1
  %itemsize = alloca i64, align 8
  %ret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PyMemoryViewObject* %mv, %struct.PyMemoryViewObject** %mv.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %mv.addr, metadata !1334, metadata !1538), !dbg !8017
  store %struct._object* %format, %struct._object** %format.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._object** %format.addr, metadata !1335, metadata !1538), !dbg !8018
  %0 = bitcast %struct.bufferinfo** %view to i8*, !dbg !8019
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !8019
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %view, metadata !1336, metadata !1538), !dbg !8020
  %1 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv.addr, align 8, !dbg !8021, !tbaa !1534
  %view1 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %1, i32 0, i32 5, !dbg !8022
  store %struct.bufferinfo* %view1, %struct.bufferinfo** %view, align 8, !dbg !8020, !tbaa !1534
  %2 = bitcast %struct._object** %asciifmt to i8*, !dbg !8023
  call void @llvm.lifetime.start(i64 8, i8* %2) #3, !dbg !8023
  call void @llvm.dbg.declare(metadata %struct._object** %asciifmt, metadata !1337, metadata !1538), !dbg !8024
  call void @llvm.lifetime.start(i64 1, i8* %srcchar) #3, !dbg !8025
  call void @llvm.dbg.declare(metadata i8* %srcchar, metadata !1338, metadata !1538), !dbg !8026
  call void @llvm.lifetime.start(i64 1, i8* %destchar) #3, !dbg !8025
  call void @llvm.dbg.declare(metadata i8* %destchar, metadata !1339, metadata !1538), !dbg !8027
  %3 = bitcast i64* %itemsize to i8*, !dbg !8028
  call void @llvm.lifetime.start(i64 8, i8* %3) #3, !dbg !8028
  call void @llvm.dbg.declare(metadata i64* %itemsize, metadata !1340, metadata !1538), !dbg !8029
  %4 = bitcast i32* %ret to i8*, !dbg !8030
  call void @llvm.lifetime.start(i64 4, i8* %4) #3, !dbg !8030
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !1341, metadata !1538), !dbg !8031
  store i32 -1, i32* %ret, align 4, !dbg !8031, !tbaa !1580
  %5 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !8032, !tbaa !1534
  %format2 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %5, i32 0, i32 6, !dbg !8034
  %6 = load i8*, i8** %format2, align 8, !dbg !8034, !tbaa !2219
  %call = call i64 @get_native_fmtchar(i8* %srcchar, i8* %6), !dbg !8035
  %cmp = icmp slt i64 %call, 0, !dbg !8036
  br i1 %cmp, label %if.then, label %if.end, !dbg !8037

if.then:                                          ; preds = %entry
  %7 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8038, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %7, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.57, i32 0, i32 0)), !dbg !8040
  %8 = load i32, i32* %ret, align 4, !dbg !8041, !tbaa !1580
  store i32 %8, i32* %retval, !dbg !8042
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8042

if.end:                                           ; preds = %entry
  %9 = load %struct._object*, %struct._object** %format.addr, align 8, !dbg !8043, !tbaa !1534
  %call3 = call %struct._object* @PyUnicode_AsASCIIString(%struct._object* %9), !dbg !8044
  store %struct._object* %call3, %struct._object** %asciifmt, align 8, !dbg !8045, !tbaa !1534
  %10 = load %struct._object*, %struct._object** %asciifmt, align 8, !dbg !8046, !tbaa !1534
  %cmp4 = icmp eq %struct._object* %10, null, !dbg !8048
  br i1 %cmp4, label %if.then.5, label %if.end.6, !dbg !8049

if.then.5:                                        ; preds = %if.end
  %11 = load i32, i32* %ret, align 4, !dbg !8050, !tbaa !1580
  store i32 %11, i32* %retval, !dbg !8051
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8051

if.end.6:                                         ; preds = %if.end
  %12 = load %struct._object*, %struct._object** %asciifmt, align 8, !dbg !8052, !tbaa !1534
  %13 = bitcast %struct._object* %12 to %struct.PyBytesObject*, !dbg !8053
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %13, i32 0, i32 2, !dbg !8054
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !8055
  %call7 = call i64 @get_native_fmtchar(i8* %destchar, i8* %arraydecay), !dbg !8056
  store i64 %call7, i64* %itemsize, align 8, !dbg !8057, !tbaa !1603
  %14 = load i64, i64* %itemsize, align 8, !dbg !8058, !tbaa !1603
  %cmp8 = icmp slt i64 %14, 0, !dbg !8060
  br i1 %cmp8, label %if.then.9, label %if.end.10, !dbg !8061

if.then.9:                                        ; preds = %if.end.6
  %15 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8062, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %15, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.58, i32 0, i32 0)), !dbg !8064
  br label %out, !dbg !8065

if.end.10:                                        ; preds = %if.end.6
  %16 = load i8, i8* %srcchar, align 1, !dbg !8066, !tbaa !2033
  %conv = sext i8 %16 to i32, !dbg !8066
  %cmp11 = icmp eq i32 %conv, 98, !dbg !8068
  br i1 %cmp11, label %if.end.32, label %lor.lhs.false, !dbg !8069

lor.lhs.false:                                    ; preds = %if.end.10
  %17 = load i8, i8* %srcchar, align 1, !dbg !8070, !tbaa !2033
  %conv13 = sext i8 %17 to i32, !dbg !8070
  %cmp14 = icmp eq i32 %conv13, 66, !dbg !8072
  br i1 %cmp14, label %if.end.32, label %lor.lhs.false.16, !dbg !8073

lor.lhs.false.16:                                 ; preds = %lor.lhs.false
  %18 = load i8, i8* %srcchar, align 1, !dbg !8074, !tbaa !2033
  %conv17 = sext i8 %18 to i32, !dbg !8074
  %cmp18 = icmp eq i32 %conv17, 99, !dbg !8076
  br i1 %cmp18, label %if.end.32, label %land.lhs.true, !dbg !8077

land.lhs.true:                                    ; preds = %lor.lhs.false.16
  %19 = load i8, i8* %destchar, align 1, !dbg !8078, !tbaa !2033
  %conv20 = sext i8 %19 to i32, !dbg !8078
  %cmp21 = icmp eq i32 %conv20, 98, !dbg !8080
  br i1 %cmp21, label %if.end.32, label %lor.lhs.false.23, !dbg !8081

lor.lhs.false.23:                                 ; preds = %land.lhs.true
  %20 = load i8, i8* %destchar, align 1, !dbg !8082, !tbaa !2033
  %conv24 = sext i8 %20 to i32, !dbg !8082
  %cmp25 = icmp eq i32 %conv24, 66, !dbg !8084
  br i1 %cmp25, label %if.end.32, label %lor.lhs.false.27, !dbg !8085

lor.lhs.false.27:                                 ; preds = %lor.lhs.false.23
  %21 = load i8, i8* %destchar, align 1, !dbg !8086, !tbaa !2033
  %conv28 = sext i8 %21 to i32, !dbg !8086
  %cmp29 = icmp eq i32 %conv28, 99, !dbg !8088
  br i1 %cmp29, label %if.end.32, label %if.then.31, !dbg !8089

if.then.31:                                       ; preds = %lor.lhs.false.27
  %22 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !8090, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %22, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.59, i32 0, i32 0)), !dbg !8092
  br label %out, !dbg !8093

if.end.32:                                        ; preds = %lor.lhs.false.27, %lor.lhs.false.23, %land.lhs.true, %lor.lhs.false.16, %lor.lhs.false, %if.end.10
  %23 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !8094, !tbaa !1534
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %23, i32 0, i32 2, !dbg !8096
  %24 = load i64, i64* %len, align 8, !dbg !8096, !tbaa !2175
  %25 = load i64, i64* %itemsize, align 8, !dbg !8097, !tbaa !1603
  %rem = srem i64 %24, %25, !dbg !8098
  %tobool = icmp ne i64 %rem, 0, !dbg !8098
  br i1 %tobool, label %if.then.33, label %if.end.34, !dbg !8099

if.then.33:                                       ; preds = %if.end.32
  %26 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !8100, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %26, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.60, i32 0, i32 0)), !dbg !8102
  br label %out, !dbg !8103

if.end.34:                                        ; preds = %if.end.32
  %27 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv.addr, align 8, !dbg !8104, !tbaa !1534
  %format35 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %27, i32 0, i32 6, !dbg !8105
  %arraydecay36 = getelementptr inbounds [3 x i8], [3 x i8]* %format35, i32 0, i32 0, !dbg !8104
  %28 = load %struct._object*, %struct._object** %asciifmt, align 8, !dbg !8106, !tbaa !1534
  %29 = bitcast %struct._object* %28 to %struct.PyBytesObject*, !dbg !8107
  %ob_sval37 = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %29, i32 0, i32 2, !dbg !8108
  %arraydecay38 = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval37, i32 0, i32 0, !dbg !8109
  %call39 = call i8* @strncpy(i8* %arraydecay36, i8* %arraydecay38, i64 3) #3, !dbg !8110
  %30 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv.addr, align 8, !dbg !8111, !tbaa !1534
  %format40 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %30, i32 0, i32 6, !dbg !8112
  %arrayidx = getelementptr [3 x i8], [3 x i8]* %format40, i32 0, i64 2, !dbg !8111
  store i8 0, i8* %arrayidx, align 1, !dbg !8113, !tbaa !2033
  %31 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv.addr, align 8, !dbg !8114, !tbaa !1534
  %format41 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %31, i32 0, i32 6, !dbg !8115
  %arraydecay42 = getelementptr inbounds [3 x i8], [3 x i8]* %format41, i32 0, i32 0, !dbg !8114
  %32 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !8116, !tbaa !1534
  %format43 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %32, i32 0, i32 6, !dbg !8117
  store i8* %arraydecay42, i8** %format43, align 8, !dbg !8118, !tbaa !2219
  %33 = load i64, i64* %itemsize, align 8, !dbg !8119, !tbaa !1603
  %34 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !8120, !tbaa !1534
  %itemsize44 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %34, i32 0, i32 3, !dbg !8121
  store i64 %33, i64* %itemsize44, align 8, !dbg !8122, !tbaa !2289
  %35 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !8123, !tbaa !1534
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %35, i32 0, i32 5, !dbg !8124
  store i32 1, i32* %ndim, align 4, !dbg !8125, !tbaa !1771
  %36 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !8126, !tbaa !1534
  %len45 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %36, i32 0, i32 2, !dbg !8127
  %37 = load i64, i64* %len45, align 8, !dbg !8127, !tbaa !2175
  %38 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !8128, !tbaa !1534
  %itemsize46 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %38, i32 0, i32 3, !dbg !8129
  %39 = load i64, i64* %itemsize46, align 8, !dbg !8129, !tbaa !2289
  %div = sdiv i64 %37, %39, !dbg !8130
  %40 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !8131, !tbaa !1534
  %shape = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %40, i32 0, i32 7, !dbg !8132
  %41 = load i64*, i64** %shape, align 8, !dbg !8132, !tbaa !2308
  %arrayidx47 = getelementptr i64, i64* %41, i64 0, !dbg !8131
  store i64 %div, i64* %arrayidx47, align 8, !dbg !8133, !tbaa !1603
  %42 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !8134, !tbaa !1534
  %itemsize48 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %42, i32 0, i32 3, !dbg !8135
  %43 = load i64, i64* %itemsize48, align 8, !dbg !8135, !tbaa !2289
  %44 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !8136, !tbaa !1534
  %strides = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %44, i32 0, i32 8, !dbg !8137
  %45 = load i64*, i64** %strides, align 8, !dbg !8137, !tbaa !2541
  %arrayidx49 = getelementptr i64, i64* %45, i64 0, !dbg !8136
  store i64 %43, i64* %arrayidx49, align 8, !dbg !8138, !tbaa !1603
  %46 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !8139, !tbaa !1534
  %suboffsets = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %46, i32 0, i32 9, !dbg !8140
  store i64* null, i64** %suboffsets, align 8, !dbg !8141, !tbaa !2334
  %47 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv.addr, align 8, !dbg !8142, !tbaa !1534
  call void @init_flags(%struct.PyMemoryViewObject* %47), !dbg !8143
  store i32 0, i32* %ret, align 4, !dbg !8144, !tbaa !1580
  br label %out, !dbg !8145

out:                                              ; preds = %if.end.34, %if.then.33, %if.then.31, %if.then.9
  br label %do.body, !dbg !8146

do.body:                                          ; preds = %out
  %48 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8147
  call void @llvm.lifetime.start(i64 8, i8* %48) #3, !dbg !8147
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1342, metadata !1538), !dbg !8149
  %49 = load %struct._object*, %struct._object** %asciifmt, align 8, !dbg !8150, !tbaa !1534
  store %struct._object* %49, %struct._object** %_py_decref_tmp, align 8, !dbg !8149, !tbaa !1534
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8151, !tbaa !1534
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 0, !dbg !8153
  %51 = load i64, i64* %ob_refcnt, align 8, !dbg !8154, !tbaa !1642
  %dec = add i64 %51, -1, !dbg !8154
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !8154, !tbaa !1642
  %cmp50 = icmp ne i64 %dec, 0, !dbg !8155
  br i1 %cmp50, label %if.then.52, label %if.else, !dbg !8156

if.then.52:                                       ; preds = %do.body
  br label %if.end.53, !dbg !8157

if.else:                                          ; preds = %do.body
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8159, !tbaa !1534
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 1, !dbg !8161
  %53 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8161, !tbaa !1650
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %53, i32 0, i32 4, !dbg !8162
  %54 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8162, !tbaa !1652
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8163, !tbaa !1534
  call void %54(%struct._object* %55), !dbg !8164
  br label %if.end.53

if.end.53:                                        ; preds = %if.else, %if.then.52
  %56 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8165
  call void @llvm.lifetime.end(i64 8, i8* %56) #3, !dbg !8165
  br label %do.cond, !dbg !8167

do.cond:                                          ; preds = %if.end.53
  br label %do.end, !dbg !8168

do.end:                                           ; preds = %do.cond
  %57 = load i32, i32* %ret, align 4, !dbg !8170, !tbaa !1580
  store i32 %57, i32* %retval, !dbg !8171
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8171

cleanup:                                          ; preds = %do.end, %if.then.5, %if.then
  %58 = bitcast i32* %ret to i8*, !dbg !8172
  call void @llvm.lifetime.end(i64 4, i8* %58) #3, !dbg !8172
  %59 = bitcast i64* %itemsize to i8*, !dbg !8172
  call void @llvm.lifetime.end(i64 8, i8* %59) #3, !dbg !8172
  call void @llvm.lifetime.end(i64 1, i8* %destchar) #3, !dbg !8172
  call void @llvm.lifetime.end(i64 1, i8* %srcchar) #3, !dbg !8172
  %60 = bitcast %struct._object** %asciifmt to i8*, !dbg !8172
  call void @llvm.lifetime.end(i64 8, i8* %60) #3, !dbg !8172
  %61 = bitcast %struct.bufferinfo** %view to i8*, !dbg !8172
  call void @llvm.lifetime.end(i64 8, i8* %61) #3, !dbg !8172
  %62 = load i32, i32* %retval, !dbg !8172
  ret i32 %62, !dbg !8172
}

; Function Attrs: nounwind uwtable
define internal i32 @cast_to_ND(%struct.PyMemoryViewObject* %mv, %struct._object* %shape, i32 %ndim) #0 {
entry:
  %retval = alloca i32, align 4
  %mv.addr = alloca %struct.PyMemoryViewObject*, align 8
  %shape.addr = alloca %struct._object*, align 8
  %ndim.addr = alloca i32, align 4
  %view = alloca %struct.bufferinfo*, align 8
  %len = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.PyMemoryViewObject* %mv, %struct.PyMemoryViewObject** %mv.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %mv.addr, metadata !1350, metadata !1538), !dbg !8173
  store %struct._object* %shape, %struct._object** %shape.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._object** %shape.addr, metadata !1351, metadata !1538), !dbg !8174
  store i32 %ndim, i32* %ndim.addr, align 4, !tbaa !1580
  call void @llvm.dbg.declare(metadata i32* %ndim.addr, metadata !1352, metadata !1538), !dbg !8175
  %0 = bitcast %struct.bufferinfo** %view to i8*, !dbg !8176
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !8176
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %view, metadata !1353, metadata !1538), !dbg !8177
  %1 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv.addr, align 8, !dbg !8178, !tbaa !1534
  %view1 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %1, i32 0, i32 5, !dbg !8179
  store %struct.bufferinfo* %view1, %struct.bufferinfo** %view, align 8, !dbg !8177, !tbaa !1534
  %2 = bitcast i64* %len to i8*, !dbg !8180
  call void @llvm.lifetime.start(i64 8, i8* %2) #3, !dbg !8180
  call void @llvm.dbg.declare(metadata i64* %len, metadata !1354, metadata !1538), !dbg !8181
  %3 = load i32, i32* %ndim.addr, align 4, !dbg !8182, !tbaa !1580
  %4 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !8183, !tbaa !1534
  %ndim2 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %4, i32 0, i32 5, !dbg !8184
  store i32 %3, i32* %ndim2, align 4, !dbg !8185, !tbaa !1771
  %5 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !8186, !tbaa !1534
  %ndim3 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %5, i32 0, i32 5, !dbg !8188
  %6 = load i32, i32* %ndim3, align 4, !dbg !8188, !tbaa !1771
  %cmp = icmp eq i32 %6, 0, !dbg !8189
  br i1 %cmp, label %if.then, label %if.else, !dbg !8190

if.then:                                          ; preds = %entry
  %7 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !8191, !tbaa !1534
  %shape4 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %7, i32 0, i32 7, !dbg !8193
  store i64* null, i64** %shape4, align 8, !dbg !8194, !tbaa !2308
  %8 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !8195, !tbaa !1534
  %strides = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %8, i32 0, i32 8, !dbg !8196
  store i64* null, i64** %strides, align 8, !dbg !8197, !tbaa !2541
  %9 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !8198, !tbaa !1534
  %itemsize = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %9, i32 0, i32 3, !dbg !8199
  %10 = load i64, i64* %itemsize, align 8, !dbg !8199, !tbaa !2289
  store i64 %10, i64* %len, align 8, !dbg !8200, !tbaa !1603
  br label %if.end.10, !dbg !8201

if.else:                                          ; preds = %entry
  %11 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !8202, !tbaa !1534
  %shape5 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %11, i32 0, i32 7, !dbg !8204
  %12 = load i64*, i64** %shape5, align 8, !dbg !8204, !tbaa !2308
  %13 = load %struct._object*, %struct._object** %shape.addr, align 8, !dbg !8205, !tbaa !1534
  %14 = load i32, i32* %ndim.addr, align 4, !dbg !8206, !tbaa !1580
  %conv = sext i32 %14 to i64, !dbg !8206
  %15 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !8207, !tbaa !1534
  %itemsize6 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %15, i32 0, i32 3, !dbg !8208
  %16 = load i64, i64* %itemsize6, align 8, !dbg !8208, !tbaa !2289
  %call = call i64 @copy_shape(i64* %12, %struct._object* %13, i64 %conv, i64 %16), !dbg !8209
  store i64 %call, i64* %len, align 8, !dbg !8210, !tbaa !1603
  %17 = load i64, i64* %len, align 8, !dbg !8211, !tbaa !1603
  %cmp7 = icmp slt i64 %17, 0, !dbg !8213
  br i1 %cmp7, label %if.then.9, label %if.end, !dbg !8214

if.then.9:                                        ; preds = %if.else
  store i32 -1, i32* %retval, !dbg !8215
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8215

if.end:                                           ; preds = %if.else
  %18 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !8216, !tbaa !1534
  call void @init_strides_from_shape(%struct.bufferinfo* %18), !dbg !8217
  br label %if.end.10

if.end.10:                                        ; preds = %if.end, %if.then
  %19 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !8218, !tbaa !1534
  %len11 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %19, i32 0, i32 2, !dbg !8220
  %20 = load i64, i64* %len11, align 8, !dbg !8220, !tbaa !2175
  %21 = load i64, i64* %len, align 8, !dbg !8221, !tbaa !1603
  %cmp12 = icmp ne i64 %20, %21, !dbg !8222
  br i1 %cmp12, label %if.then.14, label %if.end.15, !dbg !8223

if.then.14:                                       ; preds = %if.end.10
  %22 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !8224, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %22, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.61, i32 0, i32 0)), !dbg !8226
  store i32 -1, i32* %retval, !dbg !8227
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8227

if.end.15:                                        ; preds = %if.end.10
  %23 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %mv.addr, align 8, !dbg !8228, !tbaa !1534
  call void @init_flags(%struct.PyMemoryViewObject* %23), !dbg !8229
  store i32 0, i32* %retval, !dbg !8230
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8230

cleanup:                                          ; preds = %if.end.15, %if.then.14, %if.then.9
  %24 = bitcast i64* %len to i8*, !dbg !8231
  call void @llvm.lifetime.end(i64 8, i8* %24) #3, !dbg !8231
  %25 = bitcast %struct.bufferinfo** %view to i8*, !dbg !8231
  call void @llvm.lifetime.end(i64 8, i8* %25) #3, !dbg !8231
  %26 = load i32, i32* %retval, !dbg !8231
  ret i32 %26, !dbg !8231
}

declare %struct._object* @PyUnicode_AsASCIIString(%struct._object*) #1

; Function Attrs: nounwind
declare i8* @strncpy(i8*, i8*, i64) #7

; Function Attrs: nounwind uwtable
define internal i64 @copy_shape(i64* %shape, %struct._object* %seq, i64 %ndim, i64 %itemsize) #0 {
entry:
  %retval = alloca i64, align 8
  %shape.addr = alloca i64*, align 8
  %seq.addr = alloca %struct._object*, align 8
  %ndim.addr = alloca i64, align 8
  %itemsize.addr = alloca i64, align 8
  %x = alloca i64, align 8
  %i = alloca i64, align 8
  %len = alloca i64, align 8
  %tmp = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store i64* %shape, i64** %shape.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i64** %shape.addr, metadata !1359, metadata !1538), !dbg !8232
  store %struct._object* %seq, %struct._object** %seq.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._object** %seq.addr, metadata !1360, metadata !1538), !dbg !8233
  store i64 %ndim, i64* %ndim.addr, align 8, !tbaa !1603
  call void @llvm.dbg.declare(metadata i64* %ndim.addr, metadata !1361, metadata !1538), !dbg !8234
  store i64 %itemsize, i64* %itemsize.addr, align 8, !tbaa !1603
  call void @llvm.dbg.declare(metadata i64* %itemsize.addr, metadata !1362, metadata !1538), !dbg !8235
  %0 = bitcast i64* %x to i8*, !dbg !8236
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !8236
  call void @llvm.dbg.declare(metadata i64* %x, metadata !1363, metadata !1538), !dbg !8237
  %1 = bitcast i64* %i to i8*, !dbg !8236
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !8236
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1364, metadata !1538), !dbg !8238
  %2 = bitcast i64* %len to i8*, !dbg !8239
  call void @llvm.lifetime.start(i64 8, i8* %2) #3, !dbg !8239
  call void @llvm.dbg.declare(metadata i64* %len, metadata !1365, metadata !1538), !dbg !8240
  %3 = load i64, i64* %itemsize.addr, align 8, !dbg !8241, !tbaa !1603
  store i64 %3, i64* %len, align 8, !dbg !8240, !tbaa !1603
  store i64 0, i64* %i, align 8, !dbg !8242, !tbaa !1603
  br label %for.cond, !dbg !8243

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i64, i64* %i, align 8, !dbg !8244, !tbaa !1603
  %5 = load i64, i64* %ndim.addr, align 8, !dbg !8247, !tbaa !1603
  %cmp = icmp slt i64 %4, %5, !dbg !8248
  br i1 %cmp, label %for.body, label %for.end, !dbg !8249

for.body:                                         ; preds = %for.cond
  %6 = bitcast %struct._object** %tmp to i8*, !dbg !8250
  call void @llvm.lifetime.start(i64 8, i8* %6) #3, !dbg !8250
  call void @llvm.dbg.declare(metadata %struct._object** %tmp, metadata !1366, metadata !1538), !dbg !8251
  %7 = load %struct._object*, %struct._object** %seq.addr, align 8, !dbg !8252, !tbaa !1534
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1, !dbg !8253
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8253, !tbaa !1650
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i32 0, i32 19, !dbg !8254
  %9 = load i64, i64* %tp_flags, align 8, !dbg !8254, !tbaa !4742
  %and = and i64 %9, 33554432, !dbg !8255
  %cmp1 = icmp ne i64 %and, 0, !dbg !8256
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !8257

cond.true:                                        ; preds = %for.body
  %10 = load i64, i64* %i, align 8, !dbg !8258, !tbaa !1603
  %11 = load %struct._object*, %struct._object** %seq.addr, align 8, !dbg !8260, !tbaa !1534
  %12 = bitcast %struct._object* %11 to %struct.PyListObject*, !dbg !8261
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %12, i32 0, i32 1, !dbg !8262
  %13 = load %struct._object**, %struct._object*** %ob_item, align 8, !dbg !8262, !tbaa !7855
  %arrayidx = getelementptr %struct._object*, %struct._object** %13, i64 %10, !dbg !8263
  %14 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !8263, !tbaa !1534
  br label %cond.end, !dbg !8257

cond.false:                                       ; preds = %for.body
  %15 = load i64, i64* %i, align 8, !dbg !8264, !tbaa !1603
  %16 = load %struct._object*, %struct._object** %seq.addr, align 8, !dbg !8266, !tbaa !1534
  %17 = bitcast %struct._object* %16 to %struct.PyTupleObject*, !dbg !8267
  %ob_item2 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %17, i32 0, i32 1, !dbg !8268
  %arrayidx3 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item2, i32 0, i64 %15, !dbg !8269
  %18 = load %struct._object*, %struct._object** %arrayidx3, align 8, !dbg !8269, !tbaa !1534
  br label %cond.end, !dbg !8257

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %14, %cond.true ], [ %18, %cond.false ], !dbg !8257
  store %struct._object* %cond, %struct._object** %tmp, align 8, !dbg !8270, !tbaa !1534
  %19 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !8273, !tbaa !1534
  %ob_type4 = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 1, !dbg !8275
  %20 = load %struct._typeobject*, %struct._typeobject** %ob_type4, align 8, !dbg !8275, !tbaa !1650
  %tp_flags5 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %20, i32 0, i32 19, !dbg !8276
  %21 = load i64, i64* %tp_flags5, align 8, !dbg !8276, !tbaa !4742
  %and6 = and i64 %21, 16777216, !dbg !8277
  %cmp7 = icmp ne i64 %and6, 0, !dbg !8278
  br i1 %cmp7, label %if.end, label %if.then, !dbg !8279

if.then:                                          ; preds = %cond.end
  %22 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !8280, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %22, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.62, i32 0, i32 0)), !dbg !8282
  store i64 -1, i64* %retval, !dbg !8283
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8283

if.end:                                           ; preds = %cond.end
  %23 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !8284, !tbaa !1534
  %call = call i64 @PyLong_AsSsize_t(%struct._object* %23), !dbg !8285
  store i64 %call, i64* %x, align 8, !dbg !8286, !tbaa !1603
  %24 = load i64, i64* %x, align 8, !dbg !8287, !tbaa !1603
  %cmp8 = icmp eq i64 %24, -1, !dbg !8289
  br i1 %cmp8, label %land.lhs.true, label %if.end.11, !dbg !8290

land.lhs.true:                                    ; preds = %if.end
  %call9 = call %struct._object* @PyErr_Occurred(), !dbg !8291
  %tobool = icmp ne %struct._object* %call9, null, !dbg !8291
  br i1 %tobool, label %if.then.10, label %if.end.11, !dbg !8293

if.then.10:                                       ; preds = %land.lhs.true
  store i64 -1, i64* %retval, !dbg !8294
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8294

if.end.11:                                        ; preds = %land.lhs.true, %if.end
  %25 = load i64, i64* %x, align 8, !dbg !8296, !tbaa !1603
  %cmp12 = icmp sle i64 %25, 0, !dbg !8298
  br i1 %cmp12, label %if.then.13, label %if.end.15, !dbg !8299

if.then.13:                                       ; preds = %if.end.11
  %26 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8300, !tbaa !1534
  %call14 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %26, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.63, i32 0, i32 0)), !dbg !8302
  store i64 -1, i64* %retval, !dbg !8303
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8303

if.end.15:                                        ; preds = %if.end.11
  %27 = load i64, i64* %x, align 8, !dbg !8304, !tbaa !1603
  %28 = load i64, i64* %len, align 8, !dbg !8306, !tbaa !1603
  %div = sdiv i64 9223372036854775807, %28, !dbg !8307
  %cmp16 = icmp sgt i64 %27, %div, !dbg !8308
  br i1 %cmp16, label %if.then.17, label %if.end.19, !dbg !8309

if.then.17:                                       ; preds = %if.end.15
  %29 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8310, !tbaa !1534
  %call18 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %29, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.64, i32 0, i32 0)), !dbg !8312
  store i64 -1, i64* %retval, !dbg !8313
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8313

if.end.19:                                        ; preds = %if.end.15
  %30 = load i64, i64* %x, align 8, !dbg !8314, !tbaa !1603
  %31 = load i64, i64* %len, align 8, !dbg !8315, !tbaa !1603
  %mul = mul i64 %31, %30, !dbg !8315
  store i64 %mul, i64* %len, align 8, !dbg !8315, !tbaa !1603
  %32 = load i64, i64* %x, align 8, !dbg !8316, !tbaa !1603
  %33 = load i64, i64* %i, align 8, !dbg !8317, !tbaa !1603
  %34 = load i64*, i64** %shape.addr, align 8, !dbg !8318, !tbaa !1534
  %arrayidx20 = getelementptr i64, i64* %34, i64 %33, !dbg !8318
  store i64 %32, i64* %arrayidx20, align 8, !dbg !8319, !tbaa !1603
  store i32 0, i32* %cleanup.dest.slot, !dbg !8320
  br label %cleanup, !dbg !8320

cleanup:                                          ; preds = %if.end.19, %if.then.17, %if.then.13, %if.then.10, %if.then
  %35 = bitcast %struct._object** %tmp to i8*, !dbg !8321
  call void @llvm.lifetime.end(i64 8, i8* %35) #3, !dbg !8321
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %for.inc, !dbg !8322

for.inc:                                          ; preds = %cleanup.cont
  %36 = load i64, i64* %i, align 8, !dbg !8323, !tbaa !1603
  %inc = add i64 %36, 1, !dbg !8323
  store i64 %inc, i64* %i, align 8, !dbg !8323, !tbaa !1603
  br label %for.cond, !dbg !8324

for.end:                                          ; preds = %for.cond
  %37 = load i64, i64* %len, align 8, !dbg !8325, !tbaa !1603
  store i64 %37, i64* %retval, !dbg !8326
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.21, !dbg !8326

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.21

cleanup.21:                                       ; preds = %NewDefault, %for.end
  %38 = bitcast i64* %len to i8*, !dbg !8327
  call void @llvm.lifetime.end(i64 8, i8* %38) #3, !dbg !8327
  %39 = bitcast i64* %i to i8*, !dbg !8327
  call void @llvm.lifetime.end(i64 8, i8* %39) #3, !dbg !8327
  %40 = bitcast i64* %x to i8*, !dbg !8327
  call void @llvm.lifetime.end(i64 8, i8* %40) #3, !dbg !8327
  %41 = load i64, i64* %retval, !dbg !8327
  ret i64 %41, !dbg !8327
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @memory_obj_get(%struct.PyMemoryViewObject* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyMemoryViewObject*, align 8
  %view = alloca %struct.bufferinfo*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.PyMemoryViewObject* %self, %struct.PyMemoryViewObject** %self.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %self.addr, metadata !1380, metadata !1538), !dbg !8328
  %0 = bitcast %struct.bufferinfo** %view to i8*, !dbg !8329
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !8329
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %view, metadata !1381, metadata !1538), !dbg !8330
  %1 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8331, !tbaa !1534
  %view1 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %1, i32 0, i32 5, !dbg !8332
  store %struct.bufferinfo* %view1, %struct.bufferinfo** %view, align 8, !dbg !8330, !tbaa !1534
  %2 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8333, !tbaa !1534
  %flags = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %2, i32 0, i32 3, !dbg !8335
  %3 = load i32, i32* %flags, align 4, !dbg !8335, !tbaa !1894
  %and = and i32 %3, 1, !dbg !8336
  %tobool = icmp ne i32 %and, 0, !dbg !8336
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !8337

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8338, !tbaa !1534
  %mbuf = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %4, i32 0, i32 1, !dbg !8340
  %5 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !8340, !tbaa !1805
  %flags2 = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %5, i32 0, i32 1, !dbg !8341
  %6 = load i32, i32* %flags2, align 4, !dbg !8341, !tbaa !1545
  %and3 = and i32 %6, 1, !dbg !8342
  %tobool4 = icmp ne i32 %and3, 0, !dbg !8342
  br i1 %tobool4, label %if.then, label %if.end, !dbg !8343

if.then:                                          ; preds = %lor.lhs.false, %entry
  %7 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8344, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2, i32 0, i32 0)), !dbg !8348
  store %struct._object* null, %struct._object** %retval, !dbg !8349
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8349

if.end:                                           ; preds = %lor.lhs.false
  %8 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !8350, !tbaa !1534
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %8, i32 0, i32 1, !dbg !8352
  %9 = load %struct._object*, %struct._object** %obj, align 8, !dbg !8352, !tbaa !2482
  %cmp = icmp eq %struct._object* %9, null, !dbg !8353
  br i1 %cmp, label %if.then.5, label %if.end.6, !dbg !8354

if.then.5:                                        ; preds = %if.end
  %10 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !8355, !tbaa !1642
  %inc = add i64 %10, 1, !dbg !8355
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !8355, !tbaa !1642
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !8357
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8357

if.end.6:                                         ; preds = %if.end
  %11 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !8358, !tbaa !1534
  %obj7 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %11, i32 0, i32 1, !dbg !8359
  %12 = load %struct._object*, %struct._object** %obj7, align 8, !dbg !8359, !tbaa !2482
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 0, !dbg !8360
  %13 = load i64, i64* %ob_refcnt, align 8, !dbg !8361, !tbaa !1642
  %inc8 = add i64 %13, 1, !dbg !8361
  store i64 %inc8, i64* %ob_refcnt, align 8, !dbg !8361, !tbaa !1642
  %14 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !8362, !tbaa !1534
  %obj9 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %14, i32 0, i32 1, !dbg !8363
  %15 = load %struct._object*, %struct._object** %obj9, align 8, !dbg !8363, !tbaa !2482
  store %struct._object* %15, %struct._object** %retval, !dbg !8364
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8364

cleanup:                                          ; preds = %if.end.6, %if.then.5, %if.then
  %16 = bitcast %struct.bufferinfo** %view to i8*, !dbg !8365
  call void @llvm.lifetime.end(i64 8, i8* %16) #3, !dbg !8365
  %17 = load %struct._object*, %struct._object** %retval, !dbg !8365
  ret %struct._object* %17, !dbg !8365
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @memory_nbytes_get(%struct.PyMemoryViewObject* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyMemoryViewObject*, align 8
  store %struct.PyMemoryViewObject* %self, %struct.PyMemoryViewObject** %self.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %self.addr, metadata !1384, metadata !1538), !dbg !8366
  %0 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8367, !tbaa !1534
  %flags = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %0, i32 0, i32 3, !dbg !8369
  %1 = load i32, i32* %flags, align 4, !dbg !8369, !tbaa !1894
  %and = and i32 %1, 1, !dbg !8370
  %tobool = icmp ne i32 %and, 0, !dbg !8370
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !8371

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8372, !tbaa !1534
  %mbuf = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %2, i32 0, i32 1, !dbg !8374
  %3 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !8374, !tbaa !1805
  %flags1 = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %3, i32 0, i32 1, !dbg !8375
  %4 = load i32, i32* %flags1, align 4, !dbg !8375, !tbaa !1545
  %and2 = and i32 %4, 1, !dbg !8376
  %tobool3 = icmp ne i32 %and2, 0, !dbg !8376
  br i1 %tobool3, label %if.then, label %if.end, !dbg !8377

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8378, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2, i32 0, i32 0)), !dbg !8382
  store %struct._object* null, %struct._object** %retval, !dbg !8383
  br label %return, !dbg !8383

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8384, !tbaa !1534
  %view = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %6, i32 0, i32 5, !dbg !8385
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view, i32 0, i32 2, !dbg !8386
  %7 = load i64, i64* %len, align 8, !dbg !8386, !tbaa !8387
  %call = call %struct._object* @PyLong_FromSsize_t(i64 %7), !dbg !8388
  store %struct._object* %call, %struct._object** %retval, !dbg !8389
  br label %return, !dbg !8389

return:                                           ; preds = %if.end, %if.then
  %8 = load %struct._object*, %struct._object** %retval, !dbg !8390
  ret %struct._object* %8, !dbg !8390
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @memory_readonly_get(%struct.PyMemoryViewObject* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyMemoryViewObject*, align 8
  store %struct.PyMemoryViewObject* %self, %struct.PyMemoryViewObject** %self.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %self.addr, metadata !1387, metadata !1538), !dbg !8391
  %0 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8392, !tbaa !1534
  %flags = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %0, i32 0, i32 3, !dbg !8394
  %1 = load i32, i32* %flags, align 4, !dbg !8394, !tbaa !1894
  %and = and i32 %1, 1, !dbg !8395
  %tobool = icmp ne i32 %and, 0, !dbg !8395
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !8396

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8397, !tbaa !1534
  %mbuf = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %2, i32 0, i32 1, !dbg !8399
  %3 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !8399, !tbaa !1805
  %flags1 = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %3, i32 0, i32 1, !dbg !8400
  %4 = load i32, i32* %flags1, align 4, !dbg !8400, !tbaa !1545
  %and2 = and i32 %4, 1, !dbg !8401
  %tobool3 = icmp ne i32 %and2, 0, !dbg !8401
  br i1 %tobool3, label %if.then, label %if.end, !dbg !8402

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8403, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2, i32 0, i32 0)), !dbg !8407
  store %struct._object* null, %struct._object** %retval, !dbg !8408
  br label %return, !dbg !8408

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8409, !tbaa !1534
  %view = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %6, i32 0, i32 5, !dbg !8410
  %readonly = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view, i32 0, i32 4, !dbg !8411
  %7 = load i32, i32* %readonly, align 4, !dbg !8411, !tbaa !8412
  %conv = sext i32 %7 to i64, !dbg !8409
  %call = call %struct._object* @PyBool_FromLong(i64 %conv), !dbg !8413
  store %struct._object* %call, %struct._object** %retval, !dbg !8414
  br label %return, !dbg !8414

return:                                           ; preds = %if.end, %if.then
  %8 = load %struct._object*, %struct._object** %retval, !dbg !8415
  ret %struct._object* %8, !dbg !8415
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @memory_itemsize_get(%struct.PyMemoryViewObject* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyMemoryViewObject*, align 8
  store %struct.PyMemoryViewObject* %self, %struct.PyMemoryViewObject** %self.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %self.addr, metadata !1390, metadata !1538), !dbg !8416
  %0 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8417, !tbaa !1534
  %flags = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %0, i32 0, i32 3, !dbg !8419
  %1 = load i32, i32* %flags, align 4, !dbg !8419, !tbaa !1894
  %and = and i32 %1, 1, !dbg !8420
  %tobool = icmp ne i32 %and, 0, !dbg !8420
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !8421

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8422, !tbaa !1534
  %mbuf = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %2, i32 0, i32 1, !dbg !8424
  %3 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !8424, !tbaa !1805
  %flags1 = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %3, i32 0, i32 1, !dbg !8425
  %4 = load i32, i32* %flags1, align 4, !dbg !8425, !tbaa !1545
  %and2 = and i32 %4, 1, !dbg !8426
  %tobool3 = icmp ne i32 %and2, 0, !dbg !8426
  br i1 %tobool3, label %if.then, label %if.end, !dbg !8427

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8428, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2, i32 0, i32 0)), !dbg !8432
  store %struct._object* null, %struct._object** %retval, !dbg !8433
  br label %return, !dbg !8433

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8434, !tbaa !1534
  %view = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %6, i32 0, i32 5, !dbg !8435
  %itemsize = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view, i32 0, i32 3, !dbg !8436
  %7 = load i64, i64* %itemsize, align 8, !dbg !8436, !tbaa !8437
  %call = call %struct._object* @PyLong_FromSsize_t(i64 %7), !dbg !8438
  store %struct._object* %call, %struct._object** %retval, !dbg !8439
  br label %return, !dbg !8439

return:                                           ; preds = %if.end, %if.then
  %8 = load %struct._object*, %struct._object** %retval, !dbg !8440
  ret %struct._object* %8, !dbg !8440
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @memory_format_get(%struct.PyMemoryViewObject* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyMemoryViewObject*, align 8
  store %struct.PyMemoryViewObject* %self, %struct.PyMemoryViewObject** %self.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %self.addr, metadata !1393, metadata !1538), !dbg !8441
  %0 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8442, !tbaa !1534
  %flags = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %0, i32 0, i32 3, !dbg !8444
  %1 = load i32, i32* %flags, align 4, !dbg !8444, !tbaa !1894
  %and = and i32 %1, 1, !dbg !8445
  %tobool = icmp ne i32 %and, 0, !dbg !8445
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !8446

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8447, !tbaa !1534
  %mbuf = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %2, i32 0, i32 1, !dbg !8449
  %3 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !8449, !tbaa !1805
  %flags1 = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %3, i32 0, i32 1, !dbg !8450
  %4 = load i32, i32* %flags1, align 4, !dbg !8450, !tbaa !1545
  %and2 = and i32 %4, 1, !dbg !8451
  %tobool3 = icmp ne i32 %and2, 0, !dbg !8451
  br i1 %tobool3, label %if.then, label %if.end, !dbg !8452

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8453, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2, i32 0, i32 0)), !dbg !8457
  store %struct._object* null, %struct._object** %retval, !dbg !8458
  br label %return, !dbg !8458

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8459, !tbaa !1534
  %view = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %6, i32 0, i32 5, !dbg !8460
  %format = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view, i32 0, i32 6, !dbg !8461
  %7 = load i8*, i8** %format, align 8, !dbg !8461, !tbaa !8462
  %call = call %struct._object* @PyUnicode_FromString(i8* %7), !dbg !8463
  store %struct._object* %call, %struct._object** %retval, !dbg !8464
  br label %return, !dbg !8464

return:                                           ; preds = %if.end, %if.then
  %8 = load %struct._object*, %struct._object** %retval, !dbg !8465
  ret %struct._object* %8, !dbg !8465
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @memory_ndim_get(%struct.PyMemoryViewObject* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyMemoryViewObject*, align 8
  store %struct.PyMemoryViewObject* %self, %struct.PyMemoryViewObject** %self.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %self.addr, metadata !1396, metadata !1538), !dbg !8466
  %0 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8467, !tbaa !1534
  %flags = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %0, i32 0, i32 3, !dbg !8469
  %1 = load i32, i32* %flags, align 4, !dbg !8469, !tbaa !1894
  %and = and i32 %1, 1, !dbg !8470
  %tobool = icmp ne i32 %and, 0, !dbg !8470
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !8471

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8472, !tbaa !1534
  %mbuf = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %2, i32 0, i32 1, !dbg !8474
  %3 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !8474, !tbaa !1805
  %flags1 = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %3, i32 0, i32 1, !dbg !8475
  %4 = load i32, i32* %flags1, align 4, !dbg !8475, !tbaa !1545
  %and2 = and i32 %4, 1, !dbg !8476
  %tobool3 = icmp ne i32 %and2, 0, !dbg !8476
  br i1 %tobool3, label %if.then, label %if.end, !dbg !8477

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8478, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2, i32 0, i32 0)), !dbg !8482
  store %struct._object* null, %struct._object** %retval, !dbg !8483
  br label %return, !dbg !8483

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8484, !tbaa !1534
  %view = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %6, i32 0, i32 5, !dbg !8485
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view, i32 0, i32 5, !dbg !8486
  %7 = load i32, i32* %ndim, align 4, !dbg !8486, !tbaa !3452
  %conv = sext i32 %7 to i64, !dbg !8484
  %call = call %struct._object* @PyLong_FromLong(i64 %conv), !dbg !8487
  store %struct._object* %call, %struct._object** %retval, !dbg !8488
  br label %return, !dbg !8488

return:                                           ; preds = %if.end, %if.then
  %8 = load %struct._object*, %struct._object** %retval, !dbg !8489
  ret %struct._object* %8, !dbg !8489
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @memory_shape_get(%struct.PyMemoryViewObject* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyMemoryViewObject*, align 8
  store %struct.PyMemoryViewObject* %self, %struct.PyMemoryViewObject** %self.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %self.addr, metadata !1399, metadata !1538), !dbg !8490
  %0 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8491, !tbaa !1534
  %flags = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %0, i32 0, i32 3, !dbg !8493
  %1 = load i32, i32* %flags, align 4, !dbg !8493, !tbaa !1894
  %and = and i32 %1, 1, !dbg !8494
  %tobool = icmp ne i32 %and, 0, !dbg !8494
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !8495

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8496, !tbaa !1534
  %mbuf = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %2, i32 0, i32 1, !dbg !8498
  %3 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !8498, !tbaa !1805
  %flags1 = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %3, i32 0, i32 1, !dbg !8499
  %4 = load i32, i32* %flags1, align 4, !dbg !8499, !tbaa !1545
  %and2 = and i32 %4, 1, !dbg !8500
  %tobool3 = icmp ne i32 %and2, 0, !dbg !8500
  br i1 %tobool3, label %if.then, label %if.end, !dbg !8501

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8502, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2, i32 0, i32 0)), !dbg !8506
  store %struct._object* null, %struct._object** %retval, !dbg !8507
  br label %return, !dbg !8507

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8508, !tbaa !1534
  %view = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %6, i32 0, i32 5, !dbg !8509
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view, i32 0, i32 5, !dbg !8510
  %7 = load i32, i32* %ndim, align 4, !dbg !8510, !tbaa !3452
  %8 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8511, !tbaa !1534
  %view4 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %8, i32 0, i32 5, !dbg !8512
  %shape = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view4, i32 0, i32 7, !dbg !8513
  %9 = load i64*, i64** %shape, align 8, !dbg !8513, !tbaa !3459
  %call = call %struct._object* @_IntTupleFromSsizet(i32 %7, i64* %9), !dbg !8514
  store %struct._object* %call, %struct._object** %retval, !dbg !8515
  br label %return, !dbg !8515

return:                                           ; preds = %if.end, %if.then
  %10 = load %struct._object*, %struct._object** %retval, !dbg !8516
  ret %struct._object* %10, !dbg !8516
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @memory_strides_get(%struct.PyMemoryViewObject* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyMemoryViewObject*, align 8
  store %struct.PyMemoryViewObject* %self, %struct.PyMemoryViewObject** %self.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %self.addr, metadata !1418, metadata !1538), !dbg !8517
  %0 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8518, !tbaa !1534
  %flags = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %0, i32 0, i32 3, !dbg !8520
  %1 = load i32, i32* %flags, align 4, !dbg !8520, !tbaa !1894
  %and = and i32 %1, 1, !dbg !8521
  %tobool = icmp ne i32 %and, 0, !dbg !8521
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !8522

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8523, !tbaa !1534
  %mbuf = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %2, i32 0, i32 1, !dbg !8525
  %3 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !8525, !tbaa !1805
  %flags1 = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %3, i32 0, i32 1, !dbg !8526
  %4 = load i32, i32* %flags1, align 4, !dbg !8526, !tbaa !1545
  %and2 = and i32 %4, 1, !dbg !8527
  %tobool3 = icmp ne i32 %and2, 0, !dbg !8527
  br i1 %tobool3, label %if.then, label %if.end, !dbg !8528

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8529, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2, i32 0, i32 0)), !dbg !8533
  store %struct._object* null, %struct._object** %retval, !dbg !8534
  br label %return, !dbg !8534

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8535, !tbaa !1534
  %view = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %6, i32 0, i32 5, !dbg !8536
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view, i32 0, i32 5, !dbg !8537
  %7 = load i32, i32* %ndim, align 4, !dbg !8537, !tbaa !3452
  %8 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8538, !tbaa !1534
  %view4 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %8, i32 0, i32 5, !dbg !8539
  %strides = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view4, i32 0, i32 8, !dbg !8540
  %9 = load i64*, i64** %strides, align 8, !dbg !8540, !tbaa !3468
  %call = call %struct._object* @_IntTupleFromSsizet(i32 %7, i64* %9), !dbg !8541
  store %struct._object* %call, %struct._object** %retval, !dbg !8542
  br label %return, !dbg !8542

return:                                           ; preds = %if.end, %if.then
  %10 = load %struct._object*, %struct._object** %retval, !dbg !8543
  ret %struct._object* %10, !dbg !8543
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @memory_suboffsets_get(%struct.PyMemoryViewObject* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyMemoryViewObject*, align 8
  store %struct.PyMemoryViewObject* %self, %struct.PyMemoryViewObject** %self.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %self.addr, metadata !1421, metadata !1538), !dbg !8544
  %0 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8545, !tbaa !1534
  %flags = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %0, i32 0, i32 3, !dbg !8547
  %1 = load i32, i32* %flags, align 4, !dbg !8547, !tbaa !1894
  %and = and i32 %1, 1, !dbg !8548
  %tobool = icmp ne i32 %and, 0, !dbg !8548
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !8549

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8550, !tbaa !1534
  %mbuf = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %2, i32 0, i32 1, !dbg !8552
  %3 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !8552, !tbaa !1805
  %flags1 = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %3, i32 0, i32 1, !dbg !8553
  %4 = load i32, i32* %flags1, align 4, !dbg !8553, !tbaa !1545
  %and2 = and i32 %4, 1, !dbg !8554
  %tobool3 = icmp ne i32 %and2, 0, !dbg !8554
  br i1 %tobool3, label %if.then, label %if.end, !dbg !8555

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8556, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2, i32 0, i32 0)), !dbg !8560
  store %struct._object* null, %struct._object** %retval, !dbg !8561
  br label %return, !dbg !8561

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8562, !tbaa !1534
  %view = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %6, i32 0, i32 5, !dbg !8563
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view, i32 0, i32 5, !dbg !8564
  %7 = load i32, i32* %ndim, align 4, !dbg !8564, !tbaa !3452
  %8 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8565, !tbaa !1534
  %view4 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %8, i32 0, i32 5, !dbg !8566
  %suboffsets = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view4, i32 0, i32 9, !dbg !8567
  %9 = load i64*, i64** %suboffsets, align 8, !dbg !8567, !tbaa !3478
  %call = call %struct._object* @_IntTupleFromSsizet(i32 %7, i64* %9), !dbg !8568
  store %struct._object* %call, %struct._object** %retval, !dbg !8569
  br label %return, !dbg !8569

return:                                           ; preds = %if.end, %if.then
  %10 = load %struct._object*, %struct._object** %retval, !dbg !8570
  ret %struct._object* %10, !dbg !8570
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @memory_c_contiguous(%struct.PyMemoryViewObject* %self, %struct._object* %dummy) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyMemoryViewObject*, align 8
  %dummy.addr = alloca %struct._object*, align 8
  store %struct.PyMemoryViewObject* %self, %struct.PyMemoryViewObject** %self.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %self.addr, metadata !1424, metadata !1538), !dbg !8571
  store %struct._object* %dummy, %struct._object** %dummy.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._object** %dummy.addr, metadata !1425, metadata !1538), !dbg !8572
  %0 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8573, !tbaa !1534
  %flags = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %0, i32 0, i32 3, !dbg !8575
  %1 = load i32, i32* %flags, align 4, !dbg !8575, !tbaa !1894
  %and = and i32 %1, 1, !dbg !8576
  %tobool = icmp ne i32 %and, 0, !dbg !8576
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !8577

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8578, !tbaa !1534
  %mbuf = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %2, i32 0, i32 1, !dbg !8580
  %3 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !8580, !tbaa !1805
  %flags1 = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %3, i32 0, i32 1, !dbg !8581
  %4 = load i32, i32* %flags1, align 4, !dbg !8581, !tbaa !1545
  %and2 = and i32 %4, 1, !dbg !8582
  %tobool3 = icmp ne i32 %and2, 0, !dbg !8582
  br i1 %tobool3, label %if.then, label %if.end, !dbg !8583

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8584, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2, i32 0, i32 0)), !dbg !8588
  store %struct._object* null, %struct._object** %retval, !dbg !8589
  br label %return, !dbg !8589

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8590, !tbaa !1534
  %flags4 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %6, i32 0, i32 3, !dbg !8591
  %7 = load i32, i32* %flags4, align 4, !dbg !8591, !tbaa !1894
  %and5 = and i32 %7, 10, !dbg !8592
  %conv = sext i32 %and5 to i64, !dbg !8593
  %call = call %struct._object* @PyBool_FromLong(i64 %conv), !dbg !8594
  store %struct._object* %call, %struct._object** %retval, !dbg !8595
  br label %return, !dbg !8595

return:                                           ; preds = %if.end, %if.then
  %8 = load %struct._object*, %struct._object** %retval, !dbg !8596
  ret %struct._object* %8, !dbg !8596
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @memory_f_contiguous(%struct.PyMemoryViewObject* %self, %struct._object* %dummy) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyMemoryViewObject*, align 8
  %dummy.addr = alloca %struct._object*, align 8
  store %struct.PyMemoryViewObject* %self, %struct.PyMemoryViewObject** %self.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %self.addr, metadata !1428, metadata !1538), !dbg !8597
  store %struct._object* %dummy, %struct._object** %dummy.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._object** %dummy.addr, metadata !1429, metadata !1538), !dbg !8598
  %0 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8599, !tbaa !1534
  %flags = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %0, i32 0, i32 3, !dbg !8601
  %1 = load i32, i32* %flags, align 4, !dbg !8601, !tbaa !1894
  %and = and i32 %1, 1, !dbg !8602
  %tobool = icmp ne i32 %and, 0, !dbg !8602
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !8603

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8604, !tbaa !1534
  %mbuf = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %2, i32 0, i32 1, !dbg !8606
  %3 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !8606, !tbaa !1805
  %flags1 = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %3, i32 0, i32 1, !dbg !8607
  %4 = load i32, i32* %flags1, align 4, !dbg !8607, !tbaa !1545
  %and2 = and i32 %4, 1, !dbg !8608
  %tobool3 = icmp ne i32 %and2, 0, !dbg !8608
  br i1 %tobool3, label %if.then, label %if.end, !dbg !8609

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8610, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2, i32 0, i32 0)), !dbg !8614
  store %struct._object* null, %struct._object** %retval, !dbg !8615
  br label %return, !dbg !8615

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8616, !tbaa !1534
  %flags4 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %6, i32 0, i32 3, !dbg !8617
  %7 = load i32, i32* %flags4, align 4, !dbg !8617, !tbaa !1894
  %and5 = and i32 %7, 12, !dbg !8618
  %conv = sext i32 %and5 to i64, !dbg !8619
  %call = call %struct._object* @PyBool_FromLong(i64 %conv), !dbg !8620
  store %struct._object* %call, %struct._object** %retval, !dbg !8621
  br label %return, !dbg !8621

return:                                           ; preds = %if.end, %if.then
  %8 = load %struct._object*, %struct._object** %retval, !dbg !8622
  ret %struct._object* %8, !dbg !8622
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @memory_contiguous(%struct.PyMemoryViewObject* %self, %struct._object* %dummy) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyMemoryViewObject*, align 8
  %dummy.addr = alloca %struct._object*, align 8
  store %struct.PyMemoryViewObject* %self, %struct.PyMemoryViewObject** %self.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct.PyMemoryViewObject** %self.addr, metadata !1432, metadata !1538), !dbg !8623
  store %struct._object* %dummy, %struct._object** %dummy.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata %struct._object** %dummy.addr, metadata !1433, metadata !1538), !dbg !8624
  %0 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8625, !tbaa !1534
  %flags = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %0, i32 0, i32 3, !dbg !8627
  %1 = load i32, i32* %flags, align 4, !dbg !8627, !tbaa !1894
  %and = and i32 %1, 1, !dbg !8628
  %tobool = icmp ne i32 %and, 0, !dbg !8628
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !8629

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8630, !tbaa !1534
  %mbuf = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %2, i32 0, i32 1, !dbg !8632
  %3 = load %struct._PyManagedBufferObject*, %struct._PyManagedBufferObject** %mbuf, align 8, !dbg !8632, !tbaa !1805
  %flags1 = getelementptr inbounds %struct._PyManagedBufferObject, %struct._PyManagedBufferObject* %3, i32 0, i32 1, !dbg !8633
  %4 = load i32, i32* %flags1, align 4, !dbg !8633, !tbaa !1545
  %and2 = and i32 %4, 1, !dbg !8634
  %tobool3 = icmp ne i32 %and2, 0, !dbg !8634
  br i1 %tobool3, label %if.then, label %if.end, !dbg !8635

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8636, !tbaa !1534
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2, i32 0, i32 0)), !dbg !8640
  store %struct._object* null, %struct._object** %retval, !dbg !8641
  br label %return, !dbg !8641

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.PyMemoryViewObject*, %struct.PyMemoryViewObject** %self.addr, align 8, !dbg !8642, !tbaa !1534
  %flags4 = getelementptr inbounds %struct.PyMemoryViewObject, %struct.PyMemoryViewObject* %6, i32 0, i32 3, !dbg !8643
  %7 = load i32, i32* %flags4, align 4, !dbg !8643, !tbaa !1894
  %and5 = and i32 %7, 14, !dbg !8644
  %conv = sext i32 %and5 to i64, !dbg !8645
  %call = call %struct._object* @PyBool_FromLong(i64 %conv), !dbg !8646
  store %struct._object* %call, %struct._object** %retval, !dbg !8647
  br label %return, !dbg !8647

return:                                           ; preds = %if.end, %if.then
  %8 = load %struct._object*, %struct._object** %retval, !dbg !8648
  ret %struct._object* %8, !dbg !8648
}

declare %struct._object* @PyUnicode_FromString(i8*) #1

; Function Attrs: nounwind uwtable
define internal %struct._object* @_IntTupleFromSsizet(i32 %len, i64* %vals) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %len.addr = alloca i32, align 4
  %vals.addr = alloca i64*, align 8
  %i = alloca i32, align 4
  %o = alloca %struct._object*, align 8
  %intTuple = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store i32 %len, i32* %len.addr, align 4, !tbaa !1580
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !1404, metadata !1538), !dbg !8649
  store i64* %vals, i64** %vals.addr, align 8, !tbaa !1534
  call void @llvm.dbg.declare(metadata i64** %vals.addr, metadata !1405, metadata !1538), !dbg !8650
  %0 = bitcast i32* %i to i8*, !dbg !8651
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !8651
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1406, metadata !1538), !dbg !8652
  %1 = bitcast %struct._object** %o to i8*, !dbg !8653
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !8653
  call void @llvm.dbg.declare(metadata %struct._object** %o, metadata !1407, metadata !1538), !dbg !8654
  %2 = bitcast %struct._object** %intTuple to i8*, !dbg !8655
  call void @llvm.lifetime.start(i64 8, i8* %2) #3, !dbg !8655
  call void @llvm.dbg.declare(metadata %struct._object** %intTuple, metadata !1408, metadata !1538), !dbg !8656
  %3 = load i64*, i64** %vals.addr, align 8, !dbg !8657, !tbaa !1534
  %cmp = icmp eq i64* %3, null, !dbg !8659
  br i1 %cmp, label %if.then, label %if.end, !dbg !8660

if.then:                                          ; preds = %entry
  %call = call %struct._object* @PyTuple_New(i64 0), !dbg !8661
  store %struct._object* %call, %struct._object** %retval, !dbg !8662
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8662

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %len.addr, align 4, !dbg !8663, !tbaa !1580
  %conv = sext i32 %4 to i64, !dbg !8663
  %call1 = call %struct._object* @PyTuple_New(i64 %conv), !dbg !8664
  store %struct._object* %call1, %struct._object** %intTuple, align 8, !dbg !8665, !tbaa !1534
  %5 = load %struct._object*, %struct._object** %intTuple, align 8, !dbg !8666, !tbaa !1534
  %tobool = icmp ne %struct._object* %5, null, !dbg !8666
  br i1 %tobool, label %if.end.3, label %if.then.2, !dbg !8668

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !8669
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8669

if.end.3:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !8670, !tbaa !1580
  br label %for.cond, !dbg !8671

for.cond:                                         ; preds = %for.inc, %if.end.3
  %6 = load i32, i32* %i, align 4, !dbg !8672, !tbaa !1580
  %7 = load i32, i32* %len.addr, align 4, !dbg !8675, !tbaa !1580
  %cmp4 = icmp slt i32 %6, %7, !dbg !8676
  br i1 %cmp4, label %for.body, label %for.end, !dbg !8677

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %i, align 4, !dbg !8678, !tbaa !1580
  %idxprom = sext i32 %8 to i64, !dbg !8679
  %9 = load i64*, i64** %vals.addr, align 8, !dbg !8679, !tbaa !1534
  %arrayidx = getelementptr i64, i64* %9, i64 %idxprom, !dbg !8679
  %10 = load i64, i64* %arrayidx, align 8, !dbg !8679, !tbaa !1603
  %call6 = call %struct._object* @PyLong_FromSsize_t(i64 %10), !dbg !8680
  store %struct._object* %call6, %struct._object** %o, align 8, !dbg !8681, !tbaa !1534
  %11 = load %struct._object*, %struct._object** %o, align 8, !dbg !8682, !tbaa !1534
  %tobool7 = icmp ne %struct._object* %11, null, !dbg !8682
  br i1 %tobool7, label %if.end.13, label %if.then.8, !dbg !8683

if.then.8:                                        ; preds = %for.body
  br label %do.body, !dbg !8684

do.body:                                          ; preds = %if.then.8
  %12 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8685
  call void @llvm.lifetime.start(i64 8, i8* %12) #3, !dbg !8685
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1409, metadata !1538), !dbg !8687
  %13 = load %struct._object*, %struct._object** %intTuple, align 8, !dbg !8688, !tbaa !1534
  store %struct._object* %13, %struct._object** %_py_decref_tmp, align 8, !dbg !8687, !tbaa !1534
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8689, !tbaa !1534
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0, !dbg !8691
  %15 = load i64, i64* %ob_refcnt, align 8, !dbg !8692, !tbaa !1642
  %dec = add i64 %15, -1, !dbg !8692
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !8692, !tbaa !1642
  %cmp9 = icmp ne i64 %dec, 0, !dbg !8693
  br i1 %cmp9, label %if.then.11, label %if.else, !dbg !8694

if.then.11:                                       ; preds = %do.body
  br label %if.end.12, !dbg !8695

if.else:                                          ; preds = %do.body
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8697, !tbaa !1534
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1, !dbg !8699
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8699, !tbaa !1650
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 4, !dbg !8700
  %18 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8700, !tbaa !1652
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8701, !tbaa !1534
  call void %18(%struct._object* %19), !dbg !8702
  br label %if.end.12

if.end.12:                                        ; preds = %if.else, %if.then.11
  %20 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8703
  call void @llvm.lifetime.end(i64 8, i8* %20) #3, !dbg !8703
  br label %do.cond, !dbg !8705

do.cond:                                          ; preds = %if.end.12
  br label %do.end, !dbg !8706

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !8708
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8708

if.end.13:                                        ; preds = %for.body
  %21 = load %struct._object*, %struct._object** %o, align 8, !dbg !8709, !tbaa !1534
  %22 = load i32, i32* %i, align 4, !dbg !8710, !tbaa !1580
  %idxprom14 = sext i32 %22 to i64, !dbg !8711
  %23 = load %struct._object*, %struct._object** %intTuple, align 8, !dbg !8712, !tbaa !1534
  %24 = bitcast %struct._object* %23 to %struct.PyTupleObject*, !dbg !8713
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %24, i32 0, i32 1, !dbg !8714
  %arrayidx15 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 %idxprom14, !dbg !8711
  store %struct._object* %21, %struct._object** %arrayidx15, align 8, !dbg !8715, !tbaa !1534
  br label %for.inc, !dbg !8716

for.inc:                                          ; preds = %if.end.13
  %25 = load i32, i32* %i, align 4, !dbg !8717, !tbaa !1580
  %inc = add i32 %25, 1, !dbg !8717
  store i32 %inc, i32* %i, align 4, !dbg !8717, !tbaa !1580
  br label %for.cond, !dbg !8718

for.end:                                          ; preds = %for.cond
  %26 = load %struct._object*, %struct._object** %intTuple, align 8, !dbg !8719, !tbaa !1534
  store %struct._object* %26, %struct._object** %retval, !dbg !8720
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8720

cleanup:                                          ; preds = %for.end, %do.end, %if.then.2, %if.then
  %27 = bitcast %struct._object** %intTuple to i8*, !dbg !8721
  call void @llvm.lifetime.end(i64 8, i8* %27) #3, !dbg !8721
  %28 = bitcast %struct._object** %o to i8*, !dbg !8721
  call void @llvm.lifetime.end(i64 8, i8* %28) #3, !dbg !8721
  %29 = bitcast i32* %i to i8*, !dbg !8721
  call void @llvm.lifetime.end(i64 4, i8* %29) #3, !dbg !8721
  %30 = load %struct._object*, %struct._object** %retval, !dbg !8721
  ret %struct._object* %30, !dbg !8721
}

declare %struct._object* @PyTuple_New(i64) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind }
attributes #4 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn }
attributes #9 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1531, !1532}
!llvm.ident = !{!1533}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.1 (https://github.com/llvm-mirror/clang.git 0dbefa1b83eb90f7a06b5df5df254ce32be3db4b) (git@github.com:kim-yoonseung/llvm.git e8e68907a8135028089af4d924da468e2b7257fa)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !418, globals: !1444)
!1 = !DIFile(filename: "memoryobject.c", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!2 = !{}
!3 = !{!4, !5, !343, !350, !52, !369, !94, !383, !384, !386, !387, !388, !79, !396, !44, !17, !96, !385, !77, !341, !397, !398, !11, !399, !382, !400, !401, !409}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!5 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64, align: 64)
!6 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyObject", file: !7, line: 109, baseType: !8)
!7 = !DIFile(filename: "Include/object.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!8 = !DICompositeType(tag: DW_TAG_structure_type, name: "_object", file: !7, line: 105, size: 128, align: 64, elements: !9)
!9 = !{!10, !18}
!10 = !DIDerivedType(tag: DW_TAG_member, name: "ob_refcnt", scope: !8, file: !7, line: 107, baseType: !11, size: 64, align: 64)
!11 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_ssize_t", file: !12, line: 177, baseType: !13)
!12 = !DIFile(filename: "Include/pyport.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!13 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !14, line: 102, baseType: !15)
!14 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!15 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !16, line: 181, baseType: !17)
!16 = !DIFile(filename: "/usr/include/bits/types.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!17 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "ob_type", scope: !8, file: !7, line: 108, baseType: !19, size: 64, align: 64, offset: 64)
!19 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20, size: 64, align: 64)
!20 = !DICompositeType(tag: DW_TAG_structure_type, name: "_typeobject", file: !7, line: 334, size: 3200, align: 64, elements: !21)
!21 = !{!22, !28, !32, !33, !34, !39, !102, !107, !112, !113, !118, !170, !201, !213, !219, !220, !221, !223, !225, !256, !257, !258, !267, !268, !273, !274, !276, !278, !288, !291, !309, !310, !311, !313, !315, !316, !318, !323, !328, !333, !334, !335, !336, !337, !338, !339, !340, !342}
!22 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !20, file: !7, line: 335, baseType: !23, size: 192, align: 64)
!23 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyVarObject", file: !7, line: 114, baseType: !24)
!24 = !DICompositeType(tag: DW_TAG_structure_type, file: !7, line: 111, size: 192, align: 64, elements: !25)
!25 = !{!26, !27}
!26 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !24, file: !7, line: 112, baseType: !6, size: 128, align: 64)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "ob_size", scope: !24, file: !7, line: 113, baseType: !11, size: 64, align: 64, offset: 128)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "tp_name", scope: !20, file: !7, line: 336, baseType: !29, size: 64, align: 64, offset: 192)
!29 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !30, size: 64, align: 64)
!30 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !31)
!31 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "tp_basicsize", scope: !20, file: !7, line: 337, baseType: !11, size: 64, align: 64, offset: 256)
!33 = !DIDerivedType(tag: DW_TAG_member, name: "tp_itemsize", scope: !20, file: !7, line: 337, baseType: !11, size: 64, align: 64, offset: 320)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dealloc", scope: !20, file: !7, line: 341, baseType: !35, size: 64, align: 64, offset: 384)
!35 = !DIDerivedType(tag: DW_TAG_typedef, name: "destructor", file: !7, line: 308, baseType: !36)
!36 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !37, size: 64, align: 64)
!37 = !DISubroutineType(types: !38)
!38 = !{null, !5}
!39 = !DIDerivedType(tag: DW_TAG_member, name: "tp_print", scope: !20, file: !7, line: 342, baseType: !40, size: 64, align: 64, offset: 448)
!40 = !DIDerivedType(tag: DW_TAG_typedef, name: "printfunc", file: !7, line: 314, baseType: !41)
!41 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !42, size: 64, align: 64)
!42 = !DISubroutineType(types: !43)
!43 = !{!44, !5, !45, !44}
!44 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!45 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !46, size: 64, align: 64)
!46 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !14, line: 48, baseType: !47)
!47 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !48, line: 246, size: 1728, align: 64, elements: !49)
!48 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!49 = !{!50, !51, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !71, !72, !73, !74, !76, !78, !80, !84, !87, !89, !90, !91, !92, !93, !97, !98}
!50 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !47, file: !48, line: 247, baseType: !44, size: 32, align: 32)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !47, file: !48, line: 252, baseType: !52, size: 64, align: 64, offset: 64)
!52 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !31, size: 64, align: 64)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !47, file: !48, line: 253, baseType: !52, size: 64, align: 64, offset: 128)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !47, file: !48, line: 254, baseType: !52, size: 64, align: 64, offset: 192)
!55 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !47, file: !48, line: 255, baseType: !52, size: 64, align: 64, offset: 256)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !47, file: !48, line: 256, baseType: !52, size: 64, align: 64, offset: 320)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !47, file: !48, line: 257, baseType: !52, size: 64, align: 64, offset: 384)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !47, file: !48, line: 258, baseType: !52, size: 64, align: 64, offset: 448)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !47, file: !48, line: 259, baseType: !52, size: 64, align: 64, offset: 512)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !47, file: !48, line: 261, baseType: !52, size: 64, align: 64, offset: 576)
!61 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !47, file: !48, line: 262, baseType: !52, size: 64, align: 64, offset: 640)
!62 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !47, file: !48, line: 263, baseType: !52, size: 64, align: 64, offset: 704)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !47, file: !48, line: 265, baseType: !64, size: 64, align: 64, offset: 768)
!64 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !65, size: 64, align: 64)
!65 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !48, line: 161, size: 192, align: 64, elements: !66)
!66 = !{!67, !68, !70}
!67 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !65, file: !48, line: 162, baseType: !64, size: 64, align: 64)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !65, file: !48, line: 163, baseType: !69, size: 64, align: 64, offset: 64)
!69 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !47, size: 64, align: 64)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !65, file: !48, line: 167, baseType: !44, size: 32, align: 32, offset: 128)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !47, file: !48, line: 267, baseType: !69, size: 64, align: 64, offset: 832)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !47, file: !48, line: 269, baseType: !44, size: 32, align: 32, offset: 896)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !47, file: !48, line: 273, baseType: !44, size: 32, align: 32, offset: 928)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !47, file: !48, line: 275, baseType: !75, size: 64, align: 64, offset: 960)
!75 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !16, line: 140, baseType: !17)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !47, file: !48, line: 279, baseType: !77, size: 16, align: 16, offset: 1024)
!77 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !47, file: !48, line: 280, baseType: !79, size: 8, align: 8, offset: 1040)
!79 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !47, file: !48, line: 281, baseType: !81, size: 8, align: 8, offset: 1048)
!81 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 8, align: 8, elements: !82)
!82 = !{!83}
!83 = !DISubrange(count: 1)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !47, file: !48, line: 285, baseType: !85, size: 64, align: 64, offset: 1088)
!85 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !86, size: 64, align: 64)
!86 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !48, line: 155, baseType: null)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !47, file: !48, line: 294, baseType: !88, size: 64, align: 64, offset: 1152)
!88 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !16, line: 141, baseType: !17)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !47, file: !48, line: 303, baseType: !4, size: 64, align: 64, offset: 1216)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !47, file: !48, line: 304, baseType: !4, size: 64, align: 64, offset: 1280)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !47, file: !48, line: 305, baseType: !4, size: 64, align: 64, offset: 1344)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !47, file: !48, line: 306, baseType: !4, size: 64, align: 64, offset: 1408)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !47, file: !48, line: 307, baseType: !94, size: 64, align: 64, offset: 1472)
!94 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !95, line: 62, baseType: !96)
!95 = !DIFile(filename: "/opt/devel/yoonseung.kim/llvm_work/build/bin/../lib/clang/3.7.1/include/stddef.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!96 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !47, file: !48, line: 309, baseType: !44, size: 32, align: 32, offset: 1536)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !47, file: !48, line: 311, baseType: !99, size: 160, align: 8, offset: 1568)
!99 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 160, align: 8, elements: !100)
!100 = !{!101}
!101 = !DISubrange(count: 20)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattr", scope: !20, file: !7, line: 343, baseType: !103, size: 64, align: 64, offset: 512)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrfunc", file: !7, line: 316, baseType: !104)
!104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 64, align: 64)
!105 = !DISubroutineType(types: !106)
!106 = !{!5, !5, !52}
!107 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattr", scope: !20, file: !7, line: 344, baseType: !108, size: 64, align: 64, offset: 576)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrfunc", file: !7, line: 318, baseType: !109)
!109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 64, align: 64)
!110 = !DISubroutineType(types: !111)
!111 = !{!44, !5, !52, !5}
!112 = !DIDerivedType(tag: DW_TAG_member, name: "tp_reserved", scope: !20, file: !7, line: 345, baseType: !4, size: 64, align: 64, offset: 640)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "tp_repr", scope: !20, file: !7, line: 346, baseType: !114, size: 64, align: 64, offset: 704)
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "reprfunc", file: !7, line: 320, baseType: !115)
!115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !116, size: 64, align: 64)
!116 = !DISubroutineType(types: !117)
!117 = !{!5, !5}
!118 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_number", scope: !20, file: !7, line: 350, baseType: !119, size: 64, align: 64, offset: 768)
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 64, align: 64)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyNumberMethods", file: !7, line: 278, baseType: !121)
!121 = !DICompositeType(tag: DW_TAG_structure_type, file: !7, line: 236, size: 2176, align: 64, elements: !122)
!122 = !{!123, !128, !129, !130, !131, !132, !137, !139, !140, !141, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169}
!123 = !DIDerivedType(tag: DW_TAG_member, name: "nb_add", scope: !121, file: !7, line: 241, baseType: !124, size: 64, align: 64)
!124 = !DIDerivedType(tag: DW_TAG_typedef, name: "binaryfunc", file: !7, line: 166, baseType: !125)
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 64, align: 64)
!126 = !DISubroutineType(types: !127)
!127 = !{!5, !5, !5}
!128 = !DIDerivedType(tag: DW_TAG_member, name: "nb_subtract", scope: !121, file: !7, line: 242, baseType: !124, size: 64, align: 64, offset: 64)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "nb_multiply", scope: !121, file: !7, line: 243, baseType: !124, size: 64, align: 64, offset: 128)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "nb_remainder", scope: !121, file: !7, line: 244, baseType: !124, size: 64, align: 64, offset: 192)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "nb_divmod", scope: !121, file: !7, line: 245, baseType: !124, size: 64, align: 64, offset: 256)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "nb_power", scope: !121, file: !7, line: 246, baseType: !133, size: 64, align: 64, offset: 320)
!133 = !DIDerivedType(tag: DW_TAG_typedef, name: "ternaryfunc", file: !7, line: 167, baseType: !134)
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !135, size: 64, align: 64)
!135 = !DISubroutineType(types: !136)
!136 = !{!5, !5, !5, !5}
!137 = !DIDerivedType(tag: DW_TAG_member, name: "nb_negative", scope: !121, file: !7, line: 247, baseType: !138, size: 64, align: 64, offset: 384)
!138 = !DIDerivedType(tag: DW_TAG_typedef, name: "unaryfunc", file: !7, line: 165, baseType: !115)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "nb_positive", scope: !121, file: !7, line: 248, baseType: !138, size: 64, align: 64, offset: 448)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "nb_absolute", scope: !121, file: !7, line: 249, baseType: !138, size: 64, align: 64, offset: 512)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bool", scope: !121, file: !7, line: 250, baseType: !142, size: 64, align: 64, offset: 576)
!142 = !DIDerivedType(tag: DW_TAG_typedef, name: "inquiry", file: !7, line: 168, baseType: !143)
!143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 64, align: 64)
!144 = !DISubroutineType(types: !145)
!145 = !{!44, !5}
!146 = !DIDerivedType(tag: DW_TAG_member, name: "nb_invert", scope: !121, file: !7, line: 251, baseType: !138, size: 64, align: 64, offset: 640)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "nb_lshift", scope: !121, file: !7, line: 252, baseType: !124, size: 64, align: 64, offset: 704)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "nb_rshift", scope: !121, file: !7, line: 253, baseType: !124, size: 64, align: 64, offset: 768)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "nb_and", scope: !121, file: !7, line: 254, baseType: !124, size: 64, align: 64, offset: 832)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "nb_xor", scope: !121, file: !7, line: 255, baseType: !124, size: 64, align: 64, offset: 896)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "nb_or", scope: !121, file: !7, line: 256, baseType: !124, size: 64, align: 64, offset: 960)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "nb_int", scope: !121, file: !7, line: 257, baseType: !138, size: 64, align: 64, offset: 1024)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "nb_reserved", scope: !121, file: !7, line: 258, baseType: !4, size: 64, align: 64, offset: 1088)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "nb_float", scope: !121, file: !7, line: 259, baseType: !138, size: 64, align: 64, offset: 1152)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_add", scope: !121, file: !7, line: 261, baseType: !124, size: 64, align: 64, offset: 1216)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_subtract", scope: !121, file: !7, line: 262, baseType: !124, size: 64, align: 64, offset: 1280)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_multiply", scope: !121, file: !7, line: 263, baseType: !124, size: 64, align: 64, offset: 1344)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_remainder", scope: !121, file: !7, line: 264, baseType: !124, size: 64, align: 64, offset: 1408)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_power", scope: !121, file: !7, line: 265, baseType: !133, size: 64, align: 64, offset: 1472)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_lshift", scope: !121, file: !7, line: 266, baseType: !124, size: 64, align: 64, offset: 1536)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_rshift", scope: !121, file: !7, line: 267, baseType: !124, size: 64, align: 64, offset: 1600)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_and", scope: !121, file: !7, line: 268, baseType: !124, size: 64, align: 64, offset: 1664)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_xor", scope: !121, file: !7, line: 269, baseType: !124, size: 64, align: 64, offset: 1728)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_or", scope: !121, file: !7, line: 270, baseType: !124, size: 64, align: 64, offset: 1792)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "nb_floor_divide", scope: !121, file: !7, line: 272, baseType: !124, size: 64, align: 64, offset: 1856)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "nb_true_divide", scope: !121, file: !7, line: 273, baseType: !124, size: 64, align: 64, offset: 1920)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_floor_divide", scope: !121, file: !7, line: 274, baseType: !124, size: 64, align: 64, offset: 1984)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_true_divide", scope: !121, file: !7, line: 275, baseType: !124, size: 64, align: 64, offset: 2048)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "nb_index", scope: !121, file: !7, line: 277, baseType: !138, size: 64, align: 64, offset: 2112)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_sequence", scope: !20, file: !7, line: 351, baseType: !171, size: 64, align: 64, offset: 832)
!171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !172, size: 64, align: 64)
!172 = !DIDerivedType(tag: DW_TAG_typedef, name: "PySequenceMethods", file: !7, line: 292, baseType: !173)
!173 = !DICompositeType(tag: DW_TAG_structure_type, file: !7, line: 280, size: 640, align: 64, elements: !174)
!174 = !{!175, !180, !181, !186, !187, !188, !193, !194, !199, !200}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "sq_length", scope: !173, file: !7, line: 281, baseType: !176, size: 64, align: 64)
!176 = !DIDerivedType(tag: DW_TAG_typedef, name: "lenfunc", file: !7, line: 169, baseType: !177)
!177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 64, align: 64)
!178 = !DISubroutineType(types: !179)
!179 = !{!11, !5}
!180 = !DIDerivedType(tag: DW_TAG_member, name: "sq_concat", scope: !173, file: !7, line: 282, baseType: !124, size: 64, align: 64, offset: 64)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "sq_repeat", scope: !173, file: !7, line: 283, baseType: !182, size: 64, align: 64, offset: 128)
!182 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeargfunc", file: !7, line: 170, baseType: !183)
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !184, size: 64, align: 64)
!184 = !DISubroutineType(types: !185)
!185 = !{!5, !5, !11}
!186 = !DIDerivedType(tag: DW_TAG_member, name: "sq_item", scope: !173, file: !7, line: 284, baseType: !182, size: 64, align: 64, offset: 192)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_slice", scope: !173, file: !7, line: 285, baseType: !4, size: 64, align: 64, offset: 256)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "sq_ass_item", scope: !173, file: !7, line: 286, baseType: !189, size: 64, align: 64, offset: 320)
!189 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeobjargproc", file: !7, line: 172, baseType: !190)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64, align: 64)
!191 = !DISubroutineType(types: !192)
!192 = !{!44, !5, !11, !5}
!193 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_ass_slice", scope: !173, file: !7, line: 287, baseType: !4, size: 64, align: 64, offset: 384)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "sq_contains", scope: !173, file: !7, line: 288, baseType: !195, size: 64, align: 64, offset: 448)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjproc", file: !7, line: 231, baseType: !196)
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 64, align: 64)
!197 = !DISubroutineType(types: !198)
!198 = !{!44, !5, !5}
!199 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_concat", scope: !173, file: !7, line: 290, baseType: !124, size: 64, align: 64, offset: 512)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_repeat", scope: !173, file: !7, line: 291, baseType: !182, size: 64, align: 64, offset: 576)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_mapping", scope: !20, file: !7, line: 352, baseType: !202, size: 64, align: 64, offset: 896)
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 64, align: 64)
!203 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMappingMethods", file: !7, line: 298, baseType: !204)
!204 = !DICompositeType(tag: DW_TAG_structure_type, file: !7, line: 294, size: 192, align: 64, elements: !205)
!205 = !{!206, !207, !208}
!206 = !DIDerivedType(tag: DW_TAG_member, name: "mp_length", scope: !204, file: !7, line: 295, baseType: !176, size: 64, align: 64)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "mp_subscript", scope: !204, file: !7, line: 296, baseType: !124, size: 64, align: 64, offset: 64)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "mp_ass_subscript", scope: !204, file: !7, line: 297, baseType: !209, size: 64, align: 64, offset: 128)
!209 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjargproc", file: !7, line: 174, baseType: !210)
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !211, size: 64, align: 64)
!211 = !DISubroutineType(types: !212)
!212 = !{!44, !5, !5, !5}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "tp_hash", scope: !20, file: !7, line: 356, baseType: !214, size: 64, align: 64, offset: 960)
!214 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashfunc", file: !7, line: 321, baseType: !215)
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 64, align: 64)
!216 = !DISubroutineType(types: !217)
!217 = !{!218, !5}
!218 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_hash_t", file: !12, line: 186, baseType: !11)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "tp_call", scope: !20, file: !7, line: 357, baseType: !133, size: 64, align: 64, offset: 1024)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "tp_str", scope: !20, file: !7, line: 358, baseType: !114, size: 64, align: 64, offset: 1088)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattro", scope: !20, file: !7, line: 359, baseType: !222, size: 64, align: 64, offset: 1152)
!222 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrofunc", file: !7, line: 317, baseType: !125)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattro", scope: !20, file: !7, line: 360, baseType: !224, size: 64, align: 64, offset: 1216)
!224 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrofunc", file: !7, line: 319, baseType: !210)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_buffer", scope: !20, file: !7, line: 363, baseType: !226, size: 64, align: 64, offset: 1280)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 64, align: 64)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyBufferProcs", file: !7, line: 304, baseType: !228)
!228 = !DICompositeType(tag: DW_TAG_structure_type, file: !7, line: 301, size: 128, align: 64, elements: !229)
!229 = !{!230, !251}
!230 = !DIDerivedType(tag: DW_TAG_member, name: "bf_getbuffer", scope: !228, file: !7, line: 302, baseType: !231, size: 64, align: 64)
!231 = !DIDerivedType(tag: DW_TAG_typedef, name: "getbufferproc", file: !7, line: 193, baseType: !232)
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 64, align: 64)
!233 = !DISubroutineType(types: !234)
!234 = !{!44, !5, !235, !44}
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 64, align: 64)
!236 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_buffer", file: !7, line: 191, baseType: !237)
!237 = !DICompositeType(tag: DW_TAG_structure_type, name: "bufferinfo", file: !7, line: 178, size: 640, align: 64, elements: !238)
!238 = !{!239, !240, !241, !242, !243, !244, !245, !246, !248, !249, !250}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !237, file: !7, line: 179, baseType: !4, size: 64, align: 64)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "obj", scope: !237, file: !7, line: 180, baseType: !5, size: 64, align: 64, offset: 64)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !237, file: !7, line: 181, baseType: !11, size: 64, align: 64, offset: 128)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "itemsize", scope: !237, file: !7, line: 182, baseType: !11, size: 64, align: 64, offset: 192)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "readonly", scope: !237, file: !7, line: 184, baseType: !44, size: 32, align: 32, offset: 256)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "ndim", scope: !237, file: !7, line: 185, baseType: !44, size: 32, align: 32, offset: 288)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !237, file: !7, line: 186, baseType: !52, size: 64, align: 64, offset: 320)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "shape", scope: !237, file: !7, line: 187, baseType: !247, size: 64, align: 64, offset: 384)
!247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11, size: 64, align: 64)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "strides", scope: !237, file: !7, line: 188, baseType: !247, size: 64, align: 64, offset: 448)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "suboffsets", scope: !237, file: !7, line: 189, baseType: !247, size: 64, align: 64, offset: 512)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !237, file: !7, line: 190, baseType: !4, size: 64, align: 64, offset: 576)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "bf_releasebuffer", scope: !228, file: !7, line: 303, baseType: !252, size: 64, align: 64, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_typedef, name: "releasebufferproc", file: !7, line: 194, baseType: !253)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64, align: 64)
!254 = !DISubroutineType(types: !255)
!255 = !{null, !5, !235}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "tp_flags", scope: !20, file: !7, line: 366, baseType: !96, size: 64, align: 64, offset: 1344)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "tp_doc", scope: !20, file: !7, line: 368, baseType: !29, size: 64, align: 64, offset: 1408)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "tp_traverse", scope: !20, file: !7, line: 372, baseType: !259, size: 64, align: 64, offset: 1472)
!259 = !DIDerivedType(tag: DW_TAG_typedef, name: "traverseproc", file: !7, line: 233, baseType: !260)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 64, align: 64)
!261 = !DISubroutineType(types: !262)
!262 = !{!44, !5, !263, !4}
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "visitproc", file: !7, line: 232, baseType: !264)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 64, align: 64)
!265 = !DISubroutineType(types: !266)
!266 = !{!44, !5, !4}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "tp_clear", scope: !20, file: !7, line: 375, baseType: !142, size: 64, align: 64, offset: 1536)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "tp_richcompare", scope: !20, file: !7, line: 379, baseType: !269, size: 64, align: 64, offset: 1600)
!269 = !DIDerivedType(tag: DW_TAG_typedef, name: "richcmpfunc", file: !7, line: 322, baseType: !270)
!270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 64, align: 64)
!271 = !DISubroutineType(types: !272)
!272 = !{!5, !5, !5, !44}
!273 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklistoffset", scope: !20, file: !7, line: 382, baseType: !11, size: 64, align: 64, offset: 1664)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iter", scope: !20, file: !7, line: 385, baseType: !275, size: 64, align: 64, offset: 1728)
!275 = !DIDerivedType(tag: DW_TAG_typedef, name: "getiterfunc", file: !7, line: 323, baseType: !115)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iternext", scope: !20, file: !7, line: 386, baseType: !277, size: 64, align: 64, offset: 1792)
!277 = !DIDerivedType(tag: DW_TAG_typedef, name: "iternextfunc", file: !7, line: 324, baseType: !115)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "tp_methods", scope: !20, file: !7, line: 389, baseType: !279, size: 64, align: 64, offset: 1856)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 64, align: 64)
!280 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyMethodDef", file: !281, line: 40, size: 256, align: 64, elements: !282)
!281 = !DIFile(filename: "Include/methodobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!282 = !{!283, !284, !286, !287}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "ml_name", scope: !280, file: !281, line: 41, baseType: !29, size: 64, align: 64)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "ml_meth", scope: !280, file: !281, line: 42, baseType: !285, size: 64, align: 64, offset: 64)
!285 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCFunction", file: !281, line: 18, baseType: !125)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flags", scope: !280, file: !281, line: 43, baseType: !44, size: 32, align: 32, offset: 128)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "ml_doc", scope: !280, file: !281, line: 45, baseType: !29, size: 64, align: 64, offset: 192)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "tp_members", scope: !20, file: !7, line: 390, baseType: !289, size: 64, align: 64, offset: 1920)
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !290, size: 64, align: 64)
!290 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyMemberDef", file: !7, line: 390, flags: DIFlagFwdDecl)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getset", scope: !20, file: !7, line: 391, baseType: !292, size: 64, align: 64, offset: 1984)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64, align: 64)
!293 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyGetSetDef", file: !294, line: 11, size: 320, align: 64, elements: !295)
!294 = !DIFile(filename: "Include/descrobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!295 = !{!296, !297, !302, !307, !308}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !293, file: !294, line: 12, baseType: !52, size: 64, align: 64)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !293, file: !294, line: 13, baseType: !298, size: 64, align: 64, offset: 64)
!298 = !DIDerivedType(tag: DW_TAG_typedef, name: "getter", file: !294, line: 8, baseType: !299)
!299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !300, size: 64, align: 64)
!300 = !DISubroutineType(types: !301)
!301 = !{!5, !5, !4}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !293, file: !294, line: 14, baseType: !303, size: 64, align: 64, offset: 128)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "setter", file: !294, line: 9, baseType: !304)
!304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64, align: 64)
!305 = !DISubroutineType(types: !306)
!306 = !{!44, !5, !5, !4}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !293, file: !294, line: 15, baseType: !52, size: 64, align: 64, offset: 192)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "closure", scope: !293, file: !294, line: 16, baseType: !4, size: 64, align: 64, offset: 256)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "tp_base", scope: !20, file: !7, line: 392, baseType: !19, size: 64, align: 64, offset: 2048)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dict", scope: !20, file: !7, line: 393, baseType: !5, size: 64, align: 64, offset: 2112)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_get", scope: !20, file: !7, line: 394, baseType: !312, size: 64, align: 64, offset: 2176)
!312 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrgetfunc", file: !7, line: 325, baseType: !134)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_set", scope: !20, file: !7, line: 395, baseType: !314, size: 64, align: 64, offset: 2240)
!314 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrsetfunc", file: !7, line: 326, baseType: !210)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dictoffset", scope: !20, file: !7, line: 396, baseType: !11, size: 64, align: 64, offset: 2304)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "tp_init", scope: !20, file: !7, line: 397, baseType: !317, size: 64, align: 64, offset: 2368)
!317 = !DIDerivedType(tag: DW_TAG_typedef, name: "initproc", file: !7, line: 327, baseType: !210)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "tp_alloc", scope: !20, file: !7, line: 398, baseType: !319, size: 64, align: 64, offset: 2432)
!319 = !DIDerivedType(tag: DW_TAG_typedef, name: "allocfunc", file: !7, line: 329, baseType: !320)
!320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !321, size: 64, align: 64)
!321 = !DISubroutineType(types: !322)
!322 = !{!5, !19, !11}
!323 = !DIDerivedType(tag: DW_TAG_member, name: "tp_new", scope: !20, file: !7, line: 399, baseType: !324, size: 64, align: 64, offset: 2496)
!324 = !DIDerivedType(tag: DW_TAG_typedef, name: "newfunc", file: !7, line: 328, baseType: !325)
!325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 64, align: 64)
!326 = !DISubroutineType(types: !327)
!327 = !{!5, !19, !5, !5}
!328 = !DIDerivedType(tag: DW_TAG_member, name: "tp_free", scope: !20, file: !7, line: 400, baseType: !329, size: 64, align: 64, offset: 2560)
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "freefunc", file: !7, line: 307, baseType: !330)
!330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64, align: 64)
!331 = !DISubroutineType(types: !332)
!332 = !{null, !4}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "tp_is_gc", scope: !20, file: !7, line: 401, baseType: !142, size: 64, align: 64, offset: 2624)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "tp_bases", scope: !20, file: !7, line: 402, baseType: !5, size: 64, align: 64, offset: 2688)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "tp_mro", scope: !20, file: !7, line: 403, baseType: !5, size: 64, align: 64, offset: 2752)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "tp_cache", scope: !20, file: !7, line: 404, baseType: !5, size: 64, align: 64, offset: 2816)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "tp_subclasses", scope: !20, file: !7, line: 405, baseType: !5, size: 64, align: 64, offset: 2880)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklist", scope: !20, file: !7, line: 406, baseType: !5, size: 64, align: 64, offset: 2944)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "tp_del", scope: !20, file: !7, line: 407, baseType: !35, size: 64, align: 64, offset: 3008)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "tp_version_tag", scope: !20, file: !7, line: 410, baseType: !341, size: 32, align: 32, offset: 3072)
!341 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "tp_finalize", scope: !20, file: !7, line: 412, baseType: !35, size: 64, align: 64, offset: 3136)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 64, align: 64)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMemoryViewObject", file: !345, line: 68, baseType: !346)
!345 = !DIFile(filename: "Include/memoryobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!346 = !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 58, size: 1280, align: 64, elements: !347)
!347 = !{!348, !349, !358, !359, !360, !361, !362, !366, !367}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !346, file: !345, line: 59, baseType: !23, size: 192, align: 64)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "mbuf", scope: !346, file: !345, line: 60, baseType: !350, size: 64, align: 64, offset: 192)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 64, align: 64)
!351 = !DIDerivedType(tag: DW_TAG_typedef, name: "_PyManagedBufferObject", file: !345, line: 45, baseType: !352)
!352 = !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 40, size: 896, align: 64, elements: !353)
!353 = !{!354, !355, !356, !357}
!354 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !352, file: !345, line: 41, baseType: !6, size: 128, align: 64)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !352, file: !345, line: 42, baseType: !44, size: 32, align: 32, offset: 128)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "exports", scope: !352, file: !345, line: 43, baseType: !11, size: 64, align: 64, offset: 192)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !352, file: !345, line: 44, baseType: !236, size: 640, align: 64, offset: 256)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !346, file: !345, line: 61, baseType: !218, size: 64, align: 64, offset: 256)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !346, file: !345, line: 62, baseType: !44, size: 32, align: 32, offset: 320)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "exports", scope: !346, file: !345, line: 63, baseType: !11, size: 64, align: 64, offset: 384)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !346, file: !345, line: 64, baseType: !236, size: 640, align: 64, offset: 448)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !346, file: !345, line: 65, baseType: !363, size: 24, align: 8, offset: 1088)
!363 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 24, align: 8, elements: !364)
!364 = !{!365}
!365 = !DISubrange(count: 3)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "weakreflist", scope: !346, file: !345, line: 66, baseType: !5, size: 64, align: 64, offset: 1152)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "ob_array", scope: !346, file: !345, line: 67, baseType: !368, size: 64, align: 64, offset: 1216)
!368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11, size: 64, align: 64, elements: !82)
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 64, align: 64)
!370 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyGC_Head", file: !371, line: 253, baseType: !372)
!371 = !DIFile(filename: "Include/objimpl.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!372 = !DICompositeType(tag: DW_TAG_union_type, name: "_gc_head", file: !371, line: 246, size: 192, align: 64, elements: !373)
!373 = !{!374, !381}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !372, file: !371, line: 251, baseType: !375, size: 192, align: 64)
!375 = !DICompositeType(tag: DW_TAG_structure_type, scope: !372, file: !371, line: 247, size: 192, align: 64, elements: !376)
!376 = !{!377, !379, !380}
!377 = !DIDerivedType(tag: DW_TAG_member, name: "gc_next", scope: !375, file: !371, line: 248, baseType: !378, size: 64, align: 64)
!378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 64, align: 64)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "gc_prev", scope: !375, file: !371, line: 249, baseType: !378, size: 64, align: 64, offset: 64)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "gc_refs", scope: !375, file: !371, line: 250, baseType: !11, size: 64, align: 64, offset: 128)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !372, file: !371, line: 252, baseType: !382, size: 64, align: 64)
!382 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 64, align: 64)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 64, align: 64)
!385 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !79, size: 64, align: 64)
!387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 64, align: 64)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 64, align: 64)
!389 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTupleObject", file: !390, line: 33, baseType: !391)
!390 = !DIFile(filename: "Include/tupleobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!391 = !DICompositeType(tag: DW_TAG_structure_type, file: !390, line: 25, size: 256, align: 64, elements: !392)
!392 = !{!393, !394}
!393 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !391, file: !390, line: 26, baseType: !23, size: 192, align: 64)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "ob_item", scope: !391, file: !390, line: 27, baseType: !395, size: 64, align: 64, offset: 192)
!395 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 64, align: 64, elements: !82)
!396 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!397 = !DIBasicType(name: "long long int", size: 64, align: 64, encoding: DW_ATE_signed)
!398 = !DIBasicType(name: "long long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!399 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!400 = !DIBasicType(name: "_Bool", size: 8, align: 8, encoding: DW_ATE_boolean)
!401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !402, size: 64, align: 64)
!402 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyBytesObject", file: !403, line: 41, baseType: !404)
!403 = !DIFile(filename: "Include/bytesobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!404 = !DICompositeType(tag: DW_TAG_structure_type, file: !403, line: 31, size: 320, align: 64, elements: !405)
!405 = !{!406, !407, !408}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !404, file: !403, line: 32, baseType: !23, size: 192, align: 64)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "ob_shash", scope: !404, file: !403, line: 33, baseType: !218, size: 64, align: 64, offset: 192)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "ob_sval", scope: !404, file: !403, line: 34, baseType: !81, size: 8, align: 8, offset: 256)
!409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 64, align: 64)
!410 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyListObject", file: !411, line: 40, baseType: !412)
!411 = !DIFile(filename: "Include/listobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!412 = !DICompositeType(tag: DW_TAG_structure_type, file: !411, line: 23, size: 320, align: 64, elements: !413)
!413 = !{!414, !415, !417}
!414 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !412, file: !411, line: 24, baseType: !23, size: 192, align: 64)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "ob_item", scope: !412, file: !411, line: 26, baseType: !416, size: 64, align: 64, offset: 192)
!416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64, align: 64)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !412, file: !411, line: 39, baseType: !11, size: 64, align: 64, offset: 256)
!418 = !{!419, !432, !441, !453, !473, !489, !494, !499, !510, !515, !522, !532, !540, !547, !555, !578, !587, !596, !602, !606, !613, !619, !629, !634, !638, !660, !687, !693, !698, !703, !713, !724, !729, !734, !739, !750, !756, !764, !808, !830, !844, !849, !858, !878, !927, !936, !945, !954, !963, !970, !979, !984, !987, !990, !995, !1006, !1013, !1022, !1028, !1039, !1048, !1071, !1099, !1104, !1107, !1160, !1179, !1191, !1212, !1234, !1251, !1255, !1265, !1271, !1291, !1312, !1325, !1330, !1344, !1355, !1370, !1374, !1378, !1382, !1385, !1388, !1391, !1394, !1397, !1400, !1416, !1419, !1422, !1426, !1430, !1434}
!419 = !DISubprogram(name: "PyMemoryView_FromMemory", scope: !420, file: !420, line: 719, type: !421, isLocal: false, isDefinition: true, scopeLine: 720, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i8*, i64, i32)* @PyMemoryView_FromMemory, variables: !423)
!420 = !DIFile(filename: "Objects/memoryobject.c", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!421 = !DISubroutineType(types: !422)
!422 = !{!5, !52, !11, !44}
!423 = !{!424, !425, !426, !427, !428, !429, !430}
!424 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mem", arg: 1, scope: !419, file: !420, line: 719, type: !52)
!425 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "size", arg: 2, scope: !419, file: !420, line: 719, type: !11)
!426 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "flags", arg: 3, scope: !419, file: !420, line: 719, type: !44)
!427 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mbuf", scope: !419, file: !420, line: 721, type: !350)
!428 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mv", scope: !419, file: !420, line: 722, type: !5)
!429 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "readonly", scope: !419, file: !420, line: 723, type: !44)
!430 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !431, file: !420, line: 737, type: !5)
!431 = distinct !DILexicalBlock(scope: !419, file: !420, line: 737, column: 8)
!432 = !DISubprogram(name: "PyMemoryView_FromBuffer", scope: !420, file: !420, line: 748, type: !433, isLocal: false, isDefinition: true, scopeLine: 749, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.bufferinfo*)* @PyMemoryView_FromBuffer, variables: !435)
!433 = !DISubroutineType(types: !434)
!434 = !{!5, !235}
!435 = !{!436, !437, !438, !439}
!436 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "info", arg: 1, scope: !432, file: !420, line: 748, type: !235)
!437 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mbuf", scope: !432, file: !420, line: 750, type: !350)
!438 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mv", scope: !432, file: !420, line: 751, type: !5)
!439 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !440, file: !420, line: 769, type: !5)
!440 = distinct !DILexicalBlock(scope: !432, file: !420, line: 769, column: 8)
!441 = !DISubprogram(name: "PyMemoryView_FromObject", scope: !420, file: !420, line: 778, type: !116, isLocal: false, isDefinition: true, scopeLine: 779, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @PyMemoryView_FromObject, variables: !442)
!442 = !{!443, !444, !445, !448, !451}
!443 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "v", arg: 1, scope: !441, file: !420, line: 778, type: !5)
!444 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mbuf", scope: !441, file: !420, line: 780, type: !350)
!445 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mv", scope: !446, file: !420, line: 783, type: !343)
!446 = distinct !DILexicalBlock(scope: !447, file: !420, line: 782, column: 62)
!447 = distinct !DILexicalBlock(scope: !441, file: !420, line: 782, column: 9)
!448 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !449, file: !420, line: 788, type: !5)
!449 = distinct !DILexicalBlock(scope: !450, file: !420, line: 787, column: 120)
!450 = distinct !DILexicalBlock(scope: !447, file: !420, line: 787, column: 14)
!451 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !452, file: !420, line: 793, type: !5)
!452 = distinct !DILexicalBlock(scope: !449, file: !420, line: 793, column: 12)
!453 = !DISubprogram(name: "PyMemoryView_GetContiguous", scope: !420, file: !420, line: 910, type: !454, isLocal: false, isDefinition: true, scopeLine: 911, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, i32, i8)* @PyMemoryView_GetContiguous, variables: !456)
!454 = !DISubroutineType(types: !455)
!455 = !{!5, !5, !44, !31}
!456 = !{!457, !458, !459, !460, !461, !462, !463, !467, !471}
!457 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "obj", arg: 1, scope: !453, file: !420, line: 910, type: !5)
!458 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "buffertype", arg: 2, scope: !453, file: !420, line: 910, type: !44)
!459 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "order", arg: 3, scope: !453, file: !420, line: 910, type: !31)
!460 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mv", scope: !453, file: !420, line: 912, type: !343)
!461 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !453, file: !420, line: 913, type: !5)
!462 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "view", scope: !453, file: !420, line: 914, type: !235)
!463 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !464, file: !420, line: 927, type: !5)
!464 = distinct !DILexicalBlock(scope: !465, file: !420, line: 927, column: 12)
!465 = distinct !DILexicalBlock(scope: !466, file: !420, line: 924, column: 48)
!466 = distinct !DILexicalBlock(scope: !453, file: !420, line: 924, column: 9)
!467 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !468, file: !420, line: 938, type: !5)
!468 = distinct !DILexicalBlock(scope: !469, file: !420, line: 938, column: 12)
!469 = distinct !DILexicalBlock(scope: !470, file: !420, line: 934, column: 30)
!470 = distinct !DILexicalBlock(scope: !453, file: !420, line: 934, column: 9)
!471 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !472, file: !420, line: 943, type: !5)
!472 = distinct !DILexicalBlock(scope: !453, file: !420, line: 943, column: 8)
!473 = !DISubprogram(name: "PyBuffer_ToContiguous", scope: !420, file: !420, line: 973, type: !474, isLocal: false, isDefinition: true, scopeLine: 974, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, %struct.bufferinfo*, i64, i8)* @PyBuffer_ToContiguous, variables: !476)
!474 = !DISubroutineType(types: !475)
!475 = !{!44, !4, !235, !11, !31}
!476 = !{!477, !478, !479, !480, !481, !488}
!477 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "buf", arg: 1, scope: !473, file: !420, line: 973, type: !4)
!478 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "src", arg: 2, scope: !473, file: !420, line: 973, type: !235)
!479 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "len", arg: 3, scope: !473, file: !420, line: 973, type: !11)
!480 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "order", arg: 4, scope: !473, file: !420, line: 973, type: !31)
!481 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fb", scope: !473, file: !420, line: 975, type: !482)
!482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !483, size: 64, align: 64)
!483 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_buffer_full", file: !420, line: 970, baseType: !484)
!484 = !DICompositeType(tag: DW_TAG_structure_type, file: !420, line: 967, size: 704, align: 64, elements: !485)
!485 = !{!486, !487}
!486 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !484, file: !420, line: 968, baseType: !236, size: 640, align: 64)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !484, file: !420, line: 969, baseType: !368, size: 64, align: 64, offset: 640)
!488 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !473, file: !420, line: 976, type: !44)
!489 = !DISubprogram(name: "mbuf_dealloc", scope: !420, file: !420, line: 113, type: !490, isLocal: true, isDefinition: true, scopeLine: 114, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct._PyManagedBufferObject*)* @mbuf_dealloc, variables: !492)
!490 = !DISubroutineType(types: !491)
!491 = !{null, !350}
!492 = !{!493}
!493 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !489, file: !420, line: 113, type: !350)
!494 = !DISubprogram(name: "mbuf_release", scope: !420, file: !420, line: 98, type: !490, isLocal: true, isDefinition: true, scopeLine: 99, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct._PyManagedBufferObject*)* @mbuf_release, variables: !495)
!495 = !{!496, !497}
!496 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !494, file: !420, line: 98, type: !350)
!497 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "g", scope: !498, file: !420, line: 108, type: !369)
!498 = distinct !DILexicalBlock(scope: !494, file: !420, line: 108, column: 8)
!499 = !DISubprogram(name: "mbuf_traverse", scope: !420, file: !420, line: 123, type: !500, isLocal: true, isDefinition: true, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._PyManagedBufferObject*, i32 (%struct._object*, i8*)*, i8*)* @mbuf_traverse, variables: !502)
!500 = !DISubroutineType(types: !501)
!501 = !{!44, !350, !263, !4}
!502 = !{!503, !504, !505, !506}
!503 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !499, file: !420, line: 123, type: !350)
!504 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !499, file: !420, line: 123, type: !263)
!505 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !499, file: !420, line: 123, type: !4)
!506 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !507, file: !420, line: 125, type: !44)
!507 = distinct !DILexicalBlock(scope: !508, file: !420, line: 125, column: 32)
!508 = distinct !DILexicalBlock(scope: !509, file: !420, line: 125, column: 14)
!509 = distinct !DILexicalBlock(scope: !499, file: !420, line: 125, column: 8)
!510 = !DISubprogram(name: "mbuf_clear", scope: !420, file: !420, line: 130, type: !511, isLocal: true, isDefinition: true, scopeLine: 131, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._PyManagedBufferObject*)* @mbuf_clear, variables: !513)
!511 = !DISubroutineType(types: !512)
!512 = !{!44, !350}
!513 = !{!514}
!514 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !510, file: !420, line: 130, type: !350)
!515 = !DISubprogram(name: "mbuf_alloc", scope: !420, file: !420, line: 63, type: !516, isLocal: true, isDefinition: true, scopeLine: 64, flags: DIFlagPrototyped, isOptimized: true, function: %struct._PyManagedBufferObject* ()* @mbuf_alloc, variables: !518)
!516 = !DISubroutineType(types: !517)
!517 = !{!350}
!518 = !{!519, !520}
!519 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mbuf", scope: !515, file: !420, line: 65, type: !350)
!520 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "g", scope: !521, file: !420, line: 74, type: !369)
!521 = distinct !DILexicalBlock(scope: !515, file: !420, line: 74, column: 8)
!522 = !DISubprogram(name: "mbuf_add_view", scope: !420, file: !420, line: 652, type: !523, isLocal: true, isDefinition: true, scopeLine: 653, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._PyManagedBufferObject*, %struct.bufferinfo*)* @mbuf_add_view, variables: !527)
!523 = !DISubroutineType(types: !524)
!524 = !{!5, !350, !525}
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64, align: 64)
!526 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !236)
!527 = !{!528, !529, !530, !531}
!528 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mbuf", arg: 1, scope: !522, file: !420, line: 652, type: !350)
!529 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "src", arg: 2, scope: !522, file: !420, line: 652, type: !525)
!530 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mv", scope: !522, file: !420, line: 654, type: !343)
!531 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dest", scope: !522, file: !420, line: 655, type: !235)
!532 = !DISubprogram(name: "memory_alloc", scope: !420, file: !420, line: 620, type: !533, isLocal: true, isDefinition: true, scopeLine: 621, flags: DIFlagPrototyped, isOptimized: true, function: %struct.PyMemoryViewObject* (i32)* @memory_alloc, variables: !535)
!533 = !DISubroutineType(types: !534)
!534 = !{!343, !44}
!535 = !{!536, !537, !538}
!536 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ndim", arg: 1, scope: !532, file: !420, line: 620, type: !44)
!537 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mv", scope: !532, file: !420, line: 622, type: !343)
!538 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "g", scope: !539, file: !420, line: 639, type: !369)
!539 = distinct !DILexicalBlock(scope: !532, file: !420, line: 639, column: 8)
!540 = !DISubprogram(name: "init_flags", scope: !420, file: !420, line: 587, type: !541, isLocal: true, isDefinition: true, scopeLine: 588, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.PyMemoryViewObject*)* @init_flags, variables: !543)
!541 = !DISubroutineType(types: !542)
!542 = !{null, !343}
!543 = !{!544, !545, !546}
!544 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mv", arg: 1, scope: !540, file: !420, line: 587, type: !343)
!545 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "view", scope: !540, file: !420, line: 589, type: !525)
!546 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "flags", scope: !540, file: !420, line: 590, type: !44)
!547 = !DISubprogram(name: "_PyManagedBuffer_FromObject", scope: !420, file: !420, line: 80, type: !116, isLocal: true, isDefinition: true, scopeLine: 81, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @_PyManagedBuffer_FromObject, variables: !548)
!548 = !{!549, !550, !551}
!549 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "base", arg: 1, scope: !547, file: !420, line: 80, type: !5)
!550 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mbuf", scope: !547, file: !420, line: 82, type: !350)
!551 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !552, file: !420, line: 90, type: !5)
!552 = distinct !DILexicalBlock(scope: !553, file: !420, line: 90, column: 12)
!553 = distinct !DILexicalBlock(scope: !554, file: !420, line: 88, column: 95)
!554 = distinct !DILexicalBlock(scope: !547, file: !420, line: 88, column: 9)
!555 = !DISubprogram(name: "memory_from_contiguous_copy", scope: !420, file: !420, line: 833, type: !556, isLocal: true, isDefinition: true, scopeLine: 834, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.bufferinfo*, i8)* @memory_from_contiguous_copy, variables: !558)
!556 = !DISubroutineType(types: !557)
!557 = !{!5, !235, !31}
!558 = !{!559, !560, !561, !562, !563, !564, !565, !566, !568, !572, !574}
!559 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "src", arg: 1, scope: !555, file: !420, line: 833, type: !235)
!560 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "order", arg: 2, scope: !555, file: !420, line: 833, type: !31)
!561 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mbuf", scope: !555, file: !420, line: 835, type: !350)
!562 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mv", scope: !555, file: !420, line: 836, type: !343)
!563 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bytes", scope: !555, file: !420, line: 837, type: !5)
!564 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dest", scope: !555, file: !420, line: 838, type: !235)
!565 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !555, file: !420, line: 839, type: !44)
!566 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !567, file: !420, line: 849, type: !5)
!567 = distinct !DILexicalBlock(scope: !555, file: !420, line: 849, column: 8)
!568 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !569, file: !420, line: 854, type: !5)
!569 = distinct !DILexicalBlock(scope: !570, file: !420, line: 854, column: 12)
!570 = distinct !DILexicalBlock(scope: !571, file: !420, line: 853, column: 50)
!571 = distinct !DILexicalBlock(scope: !555, file: !420, line: 853, column: 9)
!572 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !573, file: !420, line: 859, type: !5)
!573 = distinct !DILexicalBlock(scope: !555, file: !420, line: 859, column: 8)
!574 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !575, file: !420, line: 885, type: !5)
!575 = distinct !DILexicalBlock(scope: !576, file: !420, line: 885, column: 12)
!576 = distinct !DILexicalBlock(scope: !577, file: !420, line: 884, column: 37)
!577 = distinct !DILexicalBlock(scope: !555, file: !420, line: 884, column: 9)
!578 = !DISubprogram(name: "mbuf_copy_format", scope: !420, file: !420, line: 805, type: !579, isLocal: true, isDefinition: true, scopeLine: 806, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._PyManagedBufferObject*, i8*)* @mbuf_copy_format, variables: !581)
!579 = !DISubroutineType(types: !580)
!580 = !{!44, !350, !29}
!581 = !{!582, !583, !584}
!582 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mbuf", arg: 1, scope: !578, file: !420, line: 805, type: !350)
!583 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fmt", arg: 2, scope: !578, file: !420, line: 805, type: !29)
!584 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cp", scope: !585, file: !420, line: 808, type: !52)
!585 = distinct !DILexicalBlock(scope: !586, file: !420, line: 807, column: 28)
!586 = distinct !DILexicalBlock(scope: !578, file: !420, line: 807, column: 9)
!587 = !DISubprogram(name: "mbuf_add_incomplete_view", scope: !420, file: !420, line: 690, type: !588, isLocal: true, isDefinition: true, scopeLine: 692, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._PyManagedBufferObject*, %struct.bufferinfo*, i32)* @mbuf_add_incomplete_view, variables: !590)
!588 = !DISubroutineType(types: !589)
!589 = !{!5, !350, !525, !44}
!590 = !{!591, !592, !593, !594, !595}
!591 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mbuf", arg: 1, scope: !587, file: !420, line: 690, type: !350)
!592 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "src", arg: 2, scope: !587, file: !420, line: 690, type: !525)
!593 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ndim", arg: 3, scope: !587, file: !420, line: 691, type: !44)
!594 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mv", scope: !587, file: !420, line: 693, type: !343)
!595 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dest", scope: !587, file: !420, line: 694, type: !235)
!596 = !DISubprogram(name: "init_strides_from_shape", scope: !420, file: !420, line: 444, type: !597, isLocal: true, isDefinition: true, scopeLine: 445, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.bufferinfo*)* @init_strides_from_shape, variables: !599)
!597 = !DISubroutineType(types: !598)
!598 = !{null, !235}
!599 = !{!600, !601}
!600 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "view", arg: 1, scope: !596, file: !420, line: 444, type: !235)
!601 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !596, file: !420, line: 446, type: !11)
!602 = !DISubprogram(name: "init_fortran_strides_from_shape", scope: !420, file: !420, line: 457, type: !597, isLocal: true, isDefinition: true, scopeLine: 458, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.bufferinfo*)* @init_fortran_strides_from_shape, variables: !603)
!603 = !{!604, !605}
!604 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "view", arg: 1, scope: !602, file: !420, line: 457, type: !235)
!605 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !602, file: !420, line: 459, type: !11)
!606 = !DISubprogram(name: "copy_buffer", scope: !420, file: !420, line: 414, type: !607, isLocal: true, isDefinition: true, scopeLine: 415, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.bufferinfo*, %struct.bufferinfo*)* @copy_buffer, variables: !609)
!607 = !DISubroutineType(types: !608)
!608 = !{!44, !235, !235}
!609 = !{!610, !611, !612}
!610 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dest", arg: 1, scope: !606, file: !420, line: 414, type: !235)
!611 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "src", arg: 2, scope: !606, file: !420, line: 414, type: !235)
!612 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mem", scope: !606, file: !420, line: 416, type: !52)
!613 = !DISubprogram(name: "equiv_structure", scope: !420, file: !420, line: 305, type: !614, isLocal: true, isDefinition: true, scopeLine: 306, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.bufferinfo*, %struct.bufferinfo*)* @equiv_structure, variables: !616)
!614 = !DISubroutineType(types: !615)
!615 = !{!44, !525, !525}
!616 = !{!617, !618}
!617 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dest", arg: 1, scope: !613, file: !420, line: 305, type: !525)
!618 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "src", arg: 2, scope: !613, file: !420, line: 305, type: !525)
!619 = !DISubprogram(name: "equiv_format", scope: !420, file: !420, line: 265, type: !614, isLocal: true, isDefinition: true, scopeLine: 266, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.bufferinfo*, %struct.bufferinfo*)* @equiv_format, variables: !620)
!620 = !{!621, !622, !623, !624, !625, !628}
!621 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dest", arg: 1, scope: !619, file: !420, line: 265, type: !525)
!622 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "src", arg: 2, scope: !619, file: !420, line: 265, type: !525)
!623 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dfmt", scope: !619, file: !420, line: 267, type: !29)
!624 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sfmt", scope: !619, file: !420, line: 267, type: !29)
!625 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1_len", scope: !626, file: !420, line: 273, type: !94)
!626 = distinct !DILexicalBlock(scope: !627, file: !420, line: 273, column: 24)
!627 = distinct !DILexicalBlock(scope: !619, file: !420, line: 273, column: 9)
!628 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s2_len", scope: !626, file: !420, line: 273, type: !94)
!629 = !DISubprogram(name: "equiv_shape", scope: !420, file: !420, line: 285, type: !614, isLocal: true, isDefinition: true, scopeLine: 286, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.bufferinfo*, %struct.bufferinfo*)* @equiv_shape, variables: !630)
!630 = !{!631, !632, !633}
!631 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dest", arg: 1, scope: !629, file: !420, line: 285, type: !525)
!632 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "src", arg: 2, scope: !629, file: !420, line: 285, type: !525)
!633 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !629, file: !420, line: 287, type: !44)
!634 = !DISubprogram(name: "last_dim_is_contiguous", scope: !420, file: !420, line: 249, type: !614, isLocal: true, isDefinition: true, scopeLine: 250, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.bufferinfo*, %struct.bufferinfo*)* @last_dim_is_contiguous, variables: !635)
!635 = !{!636, !637}
!636 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dest", arg: 1, scope: !634, file: !420, line: 249, type: !525)
!637 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "src", arg: 2, scope: !634, file: !420, line: 249, type: !525)
!638 = !DISubprogram(name: "copy_rec", scope: !420, file: !420, line: 352, type: !639, isLocal: true, isDefinition: true, scopeLine: 356, flags: DIFlagPrototyped, isOptimized: true, function: void (i64*, i64, i64, i8*, i64*, i64*, i8*, i64*, i64*, i8*)* @copy_rec, variables: !643)
!639 = !DISubroutineType(types: !640)
!640 = !{null, !641, !11, !11, !52, !641, !641, !52, !641, !641, !52}
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 64, align: 64)
!642 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11)
!643 = !{!644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !659}
!644 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "shape", arg: 1, scope: !638, file: !420, line: 352, type: !641)
!645 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ndim", arg: 2, scope: !638, file: !420, line: 352, type: !11)
!646 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "itemsize", arg: 3, scope: !638, file: !420, line: 352, type: !11)
!647 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dptr", arg: 4, scope: !638, file: !420, line: 353, type: !52)
!648 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dstrides", arg: 5, scope: !638, file: !420, line: 353, type: !641)
!649 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dsuboffsets", arg: 6, scope: !638, file: !420, line: 353, type: !641)
!650 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "sptr", arg: 7, scope: !638, file: !420, line: 354, type: !52)
!651 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "sstrides", arg: 8, scope: !638, file: !420, line: 354, type: !641)
!652 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ssuboffsets", arg: 9, scope: !638, file: !420, line: 354, type: !641)
!653 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mem", arg: 10, scope: !638, file: !420, line: 355, type: !52)
!654 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !638, file: !420, line: 357, type: !11)
!655 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "xdptr", scope: !656, file: !420, line: 370, type: !52)
!656 = distinct !DILexicalBlock(scope: !657, file: !420, line: 369, column: 74)
!657 = distinct !DILexicalBlock(scope: !658, file: !420, line: 369, column: 5)
!658 = distinct !DILexicalBlock(scope: !638, file: !420, line: 369, column: 5)
!659 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "xsptr", scope: !656, file: !420, line: 371, type: !52)
!660 = !DISubprogram(name: "copy_base", scope: !420, file: !420, line: 322, type: !661, isLocal: true, isDefinition: true, scopeLine: 326, flags: DIFlagPrototyped, isOptimized: true, function: void (i64*, i64, i8*, i64*, i64*, i8*, i64*, i64*, i8*)* @copy_base, variables: !663)
!661 = !DISubroutineType(types: !662)
!662 = !{null, !641, !11, !52, !641, !641, !52, !641, !641, !52}
!663 = !{!664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !676, !678, !679, !683}
!664 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "shape", arg: 1, scope: !660, file: !420, line: 322, type: !641)
!665 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "itemsize", arg: 2, scope: !660, file: !420, line: 322, type: !11)
!666 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dptr", arg: 3, scope: !660, file: !420, line: 323, type: !52)
!667 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dstrides", arg: 4, scope: !660, file: !420, line: 323, type: !641)
!668 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dsuboffsets", arg: 5, scope: !660, file: !420, line: 323, type: !641)
!669 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "sptr", arg: 6, scope: !660, file: !420, line: 324, type: !52)
!670 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "sstrides", arg: 7, scope: !660, file: !420, line: 324, type: !641)
!671 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ssuboffsets", arg: 8, scope: !660, file: !420, line: 324, type: !641)
!672 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mem", arg: 9, scope: !660, file: !420, line: 325, type: !52)
!673 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !674, file: !420, line: 328, type: !11)
!674 = distinct !DILexicalBlock(scope: !675, file: !420, line: 327, column: 28)
!675 = distinct !DILexicalBlock(scope: !660, file: !420, line: 327, column: 9)
!676 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p", scope: !677, file: !420, line: 335, type: !52)
!677 = distinct !DILexicalBlock(scope: !675, file: !420, line: 334, column: 10)
!678 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !677, file: !420, line: 336, type: !11)
!679 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "xsptr", scope: !680, file: !420, line: 338, type: !52)
!680 = distinct !DILexicalBlock(scope: !681, file: !420, line: 337, column: 77)
!681 = distinct !DILexicalBlock(scope: !682, file: !420, line: 337, column: 9)
!682 = distinct !DILexicalBlock(scope: !677, file: !420, line: 337, column: 9)
!683 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "xdptr", scope: !684, file: !420, line: 342, type: !52)
!684 = distinct !DILexicalBlock(scope: !685, file: !420, line: 341, column: 77)
!685 = distinct !DILexicalBlock(scope: !686, file: !420, line: 341, column: 9)
!686 = distinct !DILexicalBlock(scope: !677, file: !420, line: 341, column: 9)
!687 = !DISubprogram(name: "init_shared_values", scope: !420, file: !420, line: 519, type: !688, isLocal: true, isDefinition: true, scopeLine: 520, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.bufferinfo*, %struct.bufferinfo*)* @init_shared_values, variables: !690)
!688 = !DISubroutineType(types: !689)
!689 = !{null, !235, !525}
!690 = !{!691, !692}
!691 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dest", arg: 1, scope: !687, file: !420, line: 519, type: !235)
!692 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "src", arg: 2, scope: !687, file: !420, line: 519, type: !525)
!693 = !DISubprogram(name: "init_shape_strides", scope: !420, file: !420, line: 532, type: !688, isLocal: true, isDefinition: true, scopeLine: 533, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.bufferinfo*, %struct.bufferinfo*)* @init_shape_strides, variables: !694)
!694 = !{!695, !696, !697}
!695 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dest", arg: 1, scope: !693, file: !420, line: 532, type: !235)
!696 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "src", arg: 2, scope: !693, file: !420, line: 532, type: !525)
!697 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !693, file: !420, line: 534, type: !11)
!698 = !DISubprogram(name: "init_suboffsets", scope: !420, file: !420, line: 559, type: !688, isLocal: true, isDefinition: true, scopeLine: 560, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.bufferinfo*, %struct.bufferinfo*)* @init_suboffsets, variables: !699)
!699 = !{!700, !701, !702}
!700 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dest", arg: 1, scope: !698, file: !420, line: 559, type: !235)
!701 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "src", arg: 2, scope: !698, file: !420, line: 559, type: !525)
!702 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !698, file: !420, line: 561, type: !11)
!703 = !DISubprogram(name: "buffer_to_contiguous", scope: !420, file: !420, line: 472, type: !704, isLocal: true, isDefinition: true, scopeLine: 473, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, %struct.bufferinfo*, i8)* @buffer_to_contiguous, variables: !706)
!704 = !DISubroutineType(types: !705)
!705 = !{!44, !52, !235, !31}
!706 = !{!707, !708, !709, !710, !711, !712}
!707 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mem", arg: 1, scope: !703, file: !420, line: 472, type: !52)
!708 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "src", arg: 2, scope: !703, file: !420, line: 472, type: !235)
!709 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "order", arg: 3, scope: !703, file: !420, line: 472, type: !31)
!710 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dest", scope: !703, file: !420, line: 474, type: !236)
!711 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "strides", scope: !703, file: !420, line: 475, type: !247)
!712 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !703, file: !420, line: 476, type: !44)
!713 = !DISubprogram(name: "memory_dealloc", scope: !420, file: !420, line: 1057, type: !541, isLocal: true, isDefinition: true, scopeLine: 1058, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.PyMemoryViewObject*)* @memory_dealloc, variables: !714)
!714 = !{!715, !716, !718, !720}
!715 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !713, file: !420, line: 1057, type: !343)
!716 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "g", scope: !717, file: !420, line: 1060, type: !369)
!717 = distinct !DILexicalBlock(scope: !713, file: !420, line: 1060, column: 8)
!718 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !719, file: !420, line: 1062, type: !5)
!719 = distinct !DILexicalBlock(scope: !713, file: !420, line: 1062, column: 8)
!720 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !721, file: !420, line: 1062, type: !5)
!721 = distinct !DILexicalBlock(scope: !722, file: !420, line: 1062, column: 115)
!722 = distinct !DILexicalBlock(scope: !723, file: !420, line: 1062, column: 83)
!723 = distinct !DILexicalBlock(scope: !719, file: !420, line: 1062, column: 60)
!724 = !DISubprogram(name: "_memory_release", scope: !420, file: !420, line: 1025, type: !725, isLocal: true, isDefinition: true, scopeLine: 1026, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyMemoryViewObject*)* @_memory_release, variables: !727)
!725 = !DISubroutineType(types: !726)
!726 = !{!44, !343}
!727 = !{!728}
!728 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !724, file: !420, line: 1025, type: !343)
!729 = !DISubprogram(name: "memory_repr", scope: !420, file: !420, line: 2116, type: !730, isLocal: true, isDefinition: true, scopeLine: 2117, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyMemoryViewObject*)* @memory_repr, variables: !732)
!730 = !DISubroutineType(types: !731)
!731 = !{!5, !343}
!732 = !{!733}
!733 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !729, file: !420, line: 2116, type: !343)
!734 = !DISubprogram(name: "memory_length", scope: !420, file: !420, line: 2390, type: !735, isLocal: true, isDefinition: true, scopeLine: 2391, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct.PyMemoryViewObject*)* @memory_length, variables: !737)
!735 = !DISubroutineType(types: !736)
!736 = !{!11, !343}
!737 = !{!738}
!738 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !734, file: !420, line: 2390, type: !343)
!739 = !DISubprogram(name: "memory_item", scope: !420, file: !420, line: 2160, type: !740, isLocal: true, isDefinition: true, scopeLine: 2161, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyMemoryViewObject*, i64)* @memory_item, variables: !742)
!740 = !DISubroutineType(types: !741)
!741 = !{!5, !343, !11}
!742 = !{!743, !744, !745, !746, !747}
!743 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !739, file: !420, line: 2160, type: !343)
!744 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "index", arg: 2, scope: !739, file: !420, line: 2160, type: !11)
!745 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "view", scope: !739, file: !420, line: 2162, type: !235)
!746 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fmt", scope: !739, file: !420, line: 2163, type: !29)
!747 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ptr", scope: !748, file: !420, line: 2176, type: !52)
!748 = distinct !DILexicalBlock(scope: !749, file: !420, line: 2175, column: 26)
!749 = distinct !DILexicalBlock(scope: !739, file: !420, line: 2175, column: 9)
!750 = !DISubprogram(name: "adjust_fmt", scope: !420, file: !420, line: 1988, type: !751, isLocal: true, isDefinition: true, scopeLine: 1989, flags: DIFlagPrototyped, isOptimized: true, function: i8* (%struct.bufferinfo*)* @adjust_fmt, variables: !753)
!751 = !DISubroutineType(types: !752)
!752 = !{!29, !525}
!753 = !{!754, !755}
!754 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "view", arg: 1, scope: !750, file: !420, line: 1988, type: !525)
!755 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fmt", scope: !750, file: !420, line: 1990, type: !29)
!756 = !DISubprogram(name: "ptr_from_index", scope: !420, file: !420, line: 2131, type: !757, isLocal: true, isDefinition: true, scopeLine: 2132, flags: DIFlagPrototyped, isOptimized: true, function: i8* (%struct.bufferinfo*, i64)* @ptr_from_index, variables: !759)
!757 = !DISubroutineType(types: !758)
!758 = !{!52, !235, !11}
!759 = !{!760, !761, !762, !763}
!760 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "view", arg: 1, scope: !756, file: !420, line: 2131, type: !235)
!761 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "index", arg: 2, scope: !756, file: !420, line: 2131, type: !11)
!762 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ptr", scope: !756, file: !420, line: 2133, type: !52)
!763 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nitems", scope: !756, file: !420, line: 2134, type: !11)
!764 = !DISubprogram(name: "unpack_single", scope: !420, file: !420, line: 1620, type: !765, isLocal: true, isDefinition: true, scopeLine: 1621, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i8*, i8*)* @unpack_single, variables: !767)
!765 = !DISubroutineType(types: !766)
!766 = !{!5, !29, !29}
!767 = !{!768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !782, !784, !786, !788, !790, !792, !794, !796, !798, !800, !802, !804, !806}
!768 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ptr", arg: 1, scope: !764, file: !420, line: 1620, type: !29)
!769 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fmt", arg: 2, scope: !764, file: !420, line: 1620, type: !29)
!770 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "llu", scope: !764, file: !420, line: 1622, type: !398)
!771 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lu", scope: !764, file: !420, line: 1623, type: !96)
!772 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "zu", scope: !764, file: !420, line: 1624, type: !94)
!773 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lld", scope: !764, file: !420, line: 1625, type: !397)
!774 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ld", scope: !764, file: !420, line: 1626, type: !17)
!775 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "zd", scope: !764, file: !420, line: 1627, type: !11)
!776 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "d", scope: !764, file: !420, line: 1628, type: !382)
!777 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "uc", scope: !764, file: !420, line: 1629, type: !385)
!778 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p", scope: !764, file: !420, line: 1630, type: !4)
!779 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !780, file: !420, line: 1637, type: !396)
!780 = distinct !DILexicalBlock(scope: !781, file: !420, line: 1637, column: 18)
!781 = distinct !DILexicalBlock(scope: !764, file: !420, line: 1632, column: 21)
!782 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !783, file: !420, line: 1638, type: !44)
!783 = distinct !DILexicalBlock(scope: !781, file: !420, line: 1638, column: 18)
!784 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !785, file: !420, line: 1639, type: !17)
!785 = distinct !DILexicalBlock(scope: !781, file: !420, line: 1639, column: 18)
!786 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !787, file: !420, line: 1643, type: !400)
!787 = distinct !DILexicalBlock(scope: !781, file: !420, line: 1643, column: 18)
!788 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !789, file: !420, line: 1649, type: !77)
!789 = distinct !DILexicalBlock(scope: !781, file: !420, line: 1649, column: 18)
!790 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !791, file: !420, line: 1650, type: !341)
!791 = distinct !DILexicalBlock(scope: !781, file: !420, line: 1650, column: 18)
!792 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !793, file: !420, line: 1651, type: !96)
!793 = distinct !DILexicalBlock(scope: !781, file: !420, line: 1651, column: 18)
!794 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !795, file: !420, line: 1655, type: !397)
!795 = distinct !DILexicalBlock(scope: !781, file: !420, line: 1655, column: 18)
!796 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !797, file: !420, line: 1656, type: !398)
!797 = distinct !DILexicalBlock(scope: !781, file: !420, line: 1656, column: 18)
!798 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !799, file: !420, line: 1660, type: !11)
!799 = distinct !DILexicalBlock(scope: !781, file: !420, line: 1660, column: 18)
!800 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !801, file: !420, line: 1661, type: !94)
!801 = distinct !DILexicalBlock(scope: !781, file: !420, line: 1661, column: 18)
!802 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !803, file: !420, line: 1664, type: !399)
!803 = distinct !DILexicalBlock(scope: !781, file: !420, line: 1664, column: 18)
!804 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !805, file: !420, line: 1665, type: !382)
!805 = distinct !DILexicalBlock(scope: !781, file: !420, line: 1665, column: 18)
!806 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !807, file: !420, line: 1671, type: !4)
!807 = distinct !DILexicalBlock(scope: !781, file: !420, line: 1671, column: 18)
!808 = !DISubprogram(name: "memory_subscript", scope: !420, file: !420, line: 2242, type: !809, isLocal: true, isDefinition: true, scopeLine: 2243, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyMemoryViewObject*, %struct._object*)* @memory_subscript, variables: !811)
!809 = !DISubroutineType(types: !810)
!810 = !{!5, !343, !5}
!811 = !{!812, !813, !814, !815, !820, !823, !826}
!812 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !808, file: !420, line: 2242, type: !343)
!813 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "key", arg: 2, scope: !808, file: !420, line: 2242, type: !5)
!814 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "view", scope: !808, file: !420, line: 2244, type: !235)
!815 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fmt", scope: !816, file: !420, line: 2251, type: !29)
!816 = distinct !DILexicalBlock(scope: !817, file: !420, line: 2250, column: 122)
!817 = distinct !DILexicalBlock(scope: !818, file: !420, line: 2250, column: 13)
!818 = distinct !DILexicalBlock(scope: !819, file: !420, line: 2249, column: 26)
!819 = distinct !DILexicalBlock(scope: !808, file: !420, line: 2249, column: 9)
!820 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !821, file: !420, line: 2268, type: !11)
!821 = distinct !DILexicalBlock(scope: !822, file: !420, line: 2267, column: 111)
!822 = distinct !DILexicalBlock(scope: !808, file: !420, line: 2267, column: 9)
!823 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sliced", scope: !824, file: !420, line: 2275, type: !343)
!824 = distinct !DILexicalBlock(scope: !825, file: !420, line: 2274, column: 64)
!825 = distinct !DILexicalBlock(scope: !822, file: !420, line: 2274, column: 14)
!826 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !827, file: !420, line: 2282, type: !5)
!827 = distinct !DILexicalBlock(scope: !828, file: !420, line: 2282, column: 16)
!828 = distinct !DILexicalBlock(scope: !829, file: !420, line: 2281, column: 52)
!829 = distinct !DILexicalBlock(scope: !824, file: !420, line: 2281, column: 13)
!830 = !DISubprogram(name: "init_slice", scope: !420, file: !420, line: 2188, type: !831, isLocal: true, isDefinition: true, scopeLine: 2189, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.bufferinfo*, %struct._object*, i32)* @init_slice, variables: !833)
!831 = !DISubroutineType(types: !832)
!832 = !{!44, !235, !5, !44}
!833 = !{!834, !835, !836, !837, !838, !839, !840, !841}
!834 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "base", arg: 1, scope: !830, file: !420, line: 2188, type: !235)
!835 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "key", arg: 2, scope: !830, file: !420, line: 2188, type: !5)
!836 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dim", arg: 3, scope: !830, file: !420, line: 2188, type: !44)
!837 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "start", scope: !830, file: !420, line: 2190, type: !11)
!838 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stop", scope: !830, file: !420, line: 2190, type: !11)
!839 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "step", scope: !830, file: !420, line: 2190, type: !11)
!840 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "slicelength", scope: !830, file: !420, line: 2190, type: !11)
!841 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !842, file: !420, line: 2203, type: !11)
!842 = distinct !DILexicalBlock(scope: !843, file: !420, line: 2202, column: 10)
!843 = distinct !DILexicalBlock(scope: !830, file: !420, line: 2198, column: 9)
!844 = !DISubprogram(name: "init_len", scope: !420, file: !420, line: 573, type: !597, isLocal: true, isDefinition: true, scopeLine: 574, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.bufferinfo*)* @init_len, variables: !845)
!845 = !{!846, !847, !848}
!846 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "view", arg: 1, scope: !844, file: !420, line: 573, type: !235)
!847 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !844, file: !420, line: 575, type: !11)
!848 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !844, file: !420, line: 575, type: !11)
!849 = !DISubprogram(name: "is_multislice", scope: !420, file: !420, line: 2217, type: !144, isLocal: true, isDefinition: true, scopeLine: 2218, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*)* @is_multislice, variables: !850)
!850 = !{!851, !852, !853, !854}
!851 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "key", arg: 1, scope: !849, file: !420, line: 2217, type: !5)
!852 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !849, file: !420, line: 2219, type: !11)
!853 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !849, file: !420, line: 2219, type: !11)
!854 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !855, file: !420, line: 2228, type: !5)
!855 = distinct !DILexicalBlock(scope: !856, file: !420, line: 2227, column: 32)
!856 = distinct !DILexicalBlock(scope: !857, file: !420, line: 2227, column: 5)
!857 = distinct !DILexicalBlock(scope: !849, file: !420, line: 2227, column: 5)
!858 = !DISubprogram(name: "memory_ass_sub", scope: !420, file: !420, line: 2301, type: !859, isLocal: true, isDefinition: true, scopeLine: 2302, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyMemoryViewObject*, %struct._object*, %struct._object*)* @memory_ass_sub, variables: !861)
!859 = !DISubroutineType(types: !860)
!860 = !{!44, !343, !5, !5}
!861 = !{!862, !863, !864, !865, !866, !867, !868, !869, !872, !875, !877}
!862 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !858, file: !420, line: 2301, type: !343)
!863 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "key", arg: 2, scope: !858, file: !420, line: 2301, type: !5)
!864 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "value", arg: 3, scope: !858, file: !420, line: 2301, type: !5)
!865 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "view", scope: !858, file: !420, line: 2303, type: !235)
!866 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "src", scope: !858, file: !420, line: 2304, type: !236)
!867 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fmt", scope: !858, file: !420, line: 2305, type: !29)
!868 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ptr", scope: !858, file: !420, line: 2306, type: !52)
!869 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !870, file: !420, line: 2341, type: !11)
!870 = distinct !DILexicalBlock(scope: !871, file: !420, line: 2340, column: 111)
!871 = distinct !DILexicalBlock(scope: !858, file: !420, line: 2340, column: 9)
!872 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dest", scope: !873, file: !420, line: 2351, type: !236)
!873 = distinct !DILexicalBlock(scope: !874, file: !420, line: 2350, column: 78)
!874 = distinct !DILexicalBlock(scope: !858, file: !420, line: 2350, column: 9)
!875 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "arrays", scope: !873, file: !420, line: 2352, type: !876)
!876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11, size: 192, align: 64, elements: !364)
!877 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !873, file: !420, line: 2353, type: !44)
!878 = !DISubprogram(name: "pack_single", scope: !420, file: !420, line: 1716, type: !879, isLocal: true, isDefinition: true, scopeLine: 1717, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, %struct._object*, i8*)* @pack_single, variables: !881)
!879 = !DISubroutineType(types: !880)
!880 = !{!44, !52, !5, !29}
!881 = !{!882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !897, !899, !901, !904, !906, !908, !910, !912, !914, !916, !920, !923, !925}
!882 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ptr", arg: 1, scope: !878, file: !420, line: 1716, type: !52)
!883 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "item", arg: 2, scope: !878, file: !420, line: 1716, type: !5)
!884 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fmt", arg: 3, scope: !878, file: !420, line: 1716, type: !29)
!885 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "llu", scope: !878, file: !420, line: 1718, type: !398)
!886 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lu", scope: !878, file: !420, line: 1719, type: !96)
!887 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "zu", scope: !878, file: !420, line: 1720, type: !94)
!888 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lld", scope: !878, file: !420, line: 1721, type: !397)
!889 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ld", scope: !878, file: !420, line: 1722, type: !17)
!890 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "zd", scope: !878, file: !420, line: 1723, type: !11)
!891 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "d", scope: !878, file: !420, line: 1724, type: !382)
!892 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p", scope: !878, file: !420, line: 1725, type: !4)
!893 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !894, file: !420, line: 1739, type: !396)
!894 = distinct !DILexicalBlock(scope: !895, file: !420, line: 1739, column: 16)
!895 = distinct !DILexicalBlock(scope: !896, file: !420, line: 1733, column: 25)
!896 = distinct !DILexicalBlock(scope: !878, file: !420, line: 1727, column: 21)
!897 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !898, file: !420, line: 1742, type: !44)
!898 = distinct !DILexicalBlock(scope: !895, file: !420, line: 1742, column: 16)
!899 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !900, file: !420, line: 1744, type: !17)
!900 = distinct !DILexicalBlock(scope: !895, file: !420, line: 1744, column: 16)
!901 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !902, file: !420, line: 1759, type: !77)
!902 = distinct !DILexicalBlock(scope: !903, file: !420, line: 1759, column: 16)
!903 = distinct !DILexicalBlock(scope: !896, file: !420, line: 1753, column: 25)
!904 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !905, file: !420, line: 1762, type: !341)
!905 = distinct !DILexicalBlock(scope: !903, file: !420, line: 1762, column: 16)
!906 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !907, file: !420, line: 1764, type: !96)
!907 = distinct !DILexicalBlock(scope: !903, file: !420, line: 1764, column: 16)
!908 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !909, file: !420, line: 1774, type: !397)
!909 = distinct !DILexicalBlock(scope: !896, file: !420, line: 1774, column: 12)
!910 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !911, file: !420, line: 1780, type: !398)
!911 = distinct !DILexicalBlock(scope: !896, file: !420, line: 1780, column: 12)
!912 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !913, file: !420, line: 1789, type: !11)
!913 = distinct !DILexicalBlock(scope: !896, file: !420, line: 1789, column: 12)
!914 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !915, file: !420, line: 1795, type: !94)
!915 = distinct !DILexicalBlock(scope: !896, file: !420, line: 1795, column: 12)
!916 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !917, file: !420, line: 1804, type: !399)
!917 = distinct !DILexicalBlock(scope: !918, file: !420, line: 1804, column: 16)
!918 = distinct !DILexicalBlock(scope: !919, file: !420, line: 1803, column: 28)
!919 = distinct !DILexicalBlock(scope: !896, file: !420, line: 1803, column: 13)
!920 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !921, file: !420, line: 1807, type: !382)
!921 = distinct !DILexicalBlock(scope: !922, file: !420, line: 1807, column: 16)
!922 = distinct !DILexicalBlock(scope: !919, file: !420, line: 1806, column: 14)
!923 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !924, file: !420, line: 1817, type: !400)
!924 = distinct !DILexicalBlock(scope: !896, file: !420, line: 1817, column: 12)
!925 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !926, file: !420, line: 1837, type: !4)
!926 = distinct !DILexicalBlock(scope: !896, file: !420, line: 1837, column: 12)
!927 = !DISubprogram(name: "pylong_as_ld", scope: !420, file: !420, line: 1515, type: !928, isLocal: true, isDefinition: true, scopeLine: 1516, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct._object*)* @pylong_as_ld, variables: !930)
!928 = !DISubroutineType(types: !929)
!929 = !{!17, !5}
!930 = !{!931, !932, !933, !934}
!931 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "item", arg: 1, scope: !927, file: !420, line: 1515, type: !5)
!932 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !927, file: !420, line: 1517, type: !5)
!933 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ld", scope: !927, file: !420, line: 1518, type: !17)
!934 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !935, file: !420, line: 1525, type: !5)
!935 = distinct !DILexicalBlock(scope: !927, file: !420, line: 1525, column: 8)
!936 = !DISubprogram(name: "pylong_as_lu", scope: !420, file: !420, line: 1530, type: !937, isLocal: true, isDefinition: true, scopeLine: 1531, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct._object*)* @pylong_as_lu, variables: !939)
!937 = !DISubroutineType(types: !938)
!938 = !{!96, !5}
!939 = !{!940, !941, !942, !943}
!940 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "item", arg: 1, scope: !936, file: !420, line: 1530, type: !5)
!941 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !936, file: !420, line: 1532, type: !5)
!942 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lu", scope: !936, file: !420, line: 1533, type: !96)
!943 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !944, file: !420, line: 1540, type: !5)
!944 = distinct !DILexicalBlock(scope: !936, file: !420, line: 1540, column: 8)
!945 = !DISubprogram(name: "pylong_as_lld", scope: !420, file: !420, line: 1546, type: !946, isLocal: true, isDefinition: true, scopeLine: 1547, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct._object*)* @pylong_as_lld, variables: !948)
!946 = !DISubroutineType(types: !947)
!947 = !{!397, !5}
!948 = !{!949, !950, !951, !952}
!949 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "item", arg: 1, scope: !945, file: !420, line: 1546, type: !5)
!950 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !945, file: !420, line: 1548, type: !5)
!951 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lld", scope: !945, file: !420, line: 1549, type: !397)
!952 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !953, file: !420, line: 1556, type: !5)
!953 = distinct !DILexicalBlock(scope: !945, file: !420, line: 1556, column: 8)
!954 = !DISubprogram(name: "pylong_as_llu", scope: !420, file: !420, line: 1561, type: !955, isLocal: true, isDefinition: true, scopeLine: 1562, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct._object*)* @pylong_as_llu, variables: !957)
!955 = !DISubroutineType(types: !956)
!956 = !{!398, !5}
!957 = !{!958, !959, !960, !961}
!958 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "item", arg: 1, scope: !954, file: !420, line: 1561, type: !5)
!959 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !954, file: !420, line: 1563, type: !5)
!960 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "llu", scope: !954, file: !420, line: 1564, type: !398)
!961 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !962, file: !420, line: 1571, type: !5)
!962 = distinct !DILexicalBlock(scope: !954, file: !420, line: 1571, column: 8)
!963 = !DISubprogram(name: "pylong_as_zd", scope: !420, file: !420, line: 1577, type: !178, isLocal: true, isDefinition: true, scopeLine: 1578, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct._object*)* @pylong_as_zd, variables: !964)
!964 = !{!965, !966, !967, !968}
!965 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "item", arg: 1, scope: !963, file: !420, line: 1577, type: !5)
!966 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !963, file: !420, line: 1579, type: !5)
!967 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "zd", scope: !963, file: !420, line: 1580, type: !11)
!968 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !969, file: !420, line: 1587, type: !5)
!969 = distinct !DILexicalBlock(scope: !963, file: !420, line: 1587, column: 8)
!970 = !DISubprogram(name: "pylong_as_zu", scope: !420, file: !420, line: 1592, type: !971, isLocal: true, isDefinition: true, scopeLine: 1593, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct._object*)* @pylong_as_zu, variables: !973)
!971 = !DISubroutineType(types: !972)
!972 = !{!94, !5}
!973 = !{!974, !975, !976, !977}
!974 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "item", arg: 1, scope: !970, file: !420, line: 1592, type: !5)
!975 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !970, file: !420, line: 1594, type: !5)
!976 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "zu", scope: !970, file: !420, line: 1595, type: !94)
!977 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !978, file: !420, line: 1602, type: !5)
!978 = distinct !DILexicalBlock(scope: !970, file: !420, line: 1602, column: 8)
!979 = !DISubprogram(name: "type_error_int", scope: !420, file: !420, line: 1481, type: !980, isLocal: true, isDefinition: true, scopeLine: 1482, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*)* @type_error_int, variables: !982)
!980 = !DISubroutineType(types: !981)
!981 = !{!44, !29}
!982 = !{!983}
!983 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fmt", arg: 1, scope: !979, file: !420, line: 1481, type: !29)
!984 = !DISubprogram(name: "value_error_int", scope: !420, file: !420, line: 1489, type: !980, isLocal: true, isDefinition: true, scopeLine: 1490, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*)* @value_error_int, variables: !985)
!985 = !{!986}
!986 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fmt", arg: 1, scope: !984, file: !420, line: 1489, type: !29)
!987 = !DISubprogram(name: "fix_error_int", scope: !420, file: !420, line: 1497, type: !980, isLocal: true, isDefinition: true, scopeLine: 1498, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*)* @fix_error_int, variables: !988)
!988 = !{!989}
!989 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fmt", arg: 1, scope: !987, file: !420, line: 1497, type: !29)
!990 = !DISubprogram(name: "copy_single", scope: !420, file: !420, line: 382, type: !607, isLocal: true, isDefinition: true, scopeLine: 383, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.bufferinfo*, %struct.bufferinfo*)* @copy_single, variables: !991)
!991 = !{!992, !993, !994}
!992 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dest", arg: 1, scope: !990, file: !420, line: 382, type: !235)
!993 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "src", arg: 2, scope: !990, file: !420, line: 382, type: !235)
!994 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mem", scope: !990, file: !420, line: 384, type: !52)
!995 = !DISubprogram(name: "memory_hash", scope: !420, file: !420, line: 2706, type: !996, isLocal: true, isDefinition: true, scopeLine: 2707, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct.PyMemoryViewObject*)* @memory_hash, variables: !998)
!996 = !DISubroutineType(types: !997)
!997 = !{!218, !343}
!998 = !{!999, !1000, !1003, !1004, !1005}
!999 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !995, file: !420, line: 2706, type: !343)
!1000 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "view", scope: !1001, file: !420, line: 2709, type: !235)
!1001 = distinct !DILexicalBlock(scope: !1002, file: !420, line: 2708, column: 27)
!1002 = distinct !DILexicalBlock(scope: !995, file: !420, line: 2708, column: 9)
!1003 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mem", scope: !1001, file: !420, line: 2710, type: !52)
!1004 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !1001, file: !420, line: 2711, type: !11)
!1005 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fmt", scope: !1001, file: !420, line: 2712, type: !31)
!1006 = !DISubprogram(name: "get_native_fmtchar", scope: !420, file: !420, line: 1105, type: !1007, isLocal: true, isDefinition: true, scopeLine: 1106, flags: DIFlagPrototyped, isOptimized: true, function: i64 (i8*, i8*)* @get_native_fmtchar, variables: !1009)
!1007 = !DISubroutineType(types: !1008)
!1008 = !{!11, !52, !29}
!1009 = !{!1010, !1011, !1012}
!1010 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1006, file: !420, line: 1105, type: !52)
!1011 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fmt", arg: 2, scope: !1006, file: !420, line: 1105, type: !29)
!1012 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !1006, file: !420, line: 1107, type: !11)
!1013 = !DISubprogram(name: "memory_getbuf", scope: !420, file: !420, line: 1377, type: !1014, isLocal: true, isDefinition: true, scopeLine: 1378, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyMemoryViewObject*, %struct.bufferinfo*, i32)* @memory_getbuf, variables: !1016)
!1014 = !DISubroutineType(types: !1015)
!1015 = !{!44, !343, !235, !44}
!1016 = !{!1017, !1018, !1019, !1020, !1021}
!1017 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1013, file: !420, line: 1377, type: !343)
!1018 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "view", arg: 2, scope: !1013, file: !420, line: 1377, type: !235)
!1019 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "flags", arg: 3, scope: !1013, file: !420, line: 1377, type: !44)
!1020 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "base", scope: !1013, file: !420, line: 1379, type: !235)
!1021 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "baseflags", scope: !1013, file: !420, line: 1380, type: !44)
!1022 = !DISubprogram(name: "memory_releasebuf", scope: !420, file: !420, line: 1456, type: !1023, isLocal: true, isDefinition: true, scopeLine: 1457, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.PyMemoryViewObject*, %struct.bufferinfo*)* @memory_releasebuf, variables: !1025)
!1023 = !DISubroutineType(types: !1024)
!1024 = !{null, !343, !235}
!1025 = !{!1026, !1027}
!1026 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1022, file: !420, line: 1456, type: !343)
!1027 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "view", arg: 2, scope: !1022, file: !420, line: 1456, type: !235)
!1028 = !DISubprogram(name: "memory_traverse", scope: !420, file: !420, line: 1069, type: !1029, isLocal: true, isDefinition: true, scopeLine: 1070, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyMemoryViewObject*, i32 (%struct._object*, i8*)*, i8*)* @memory_traverse, variables: !1031)
!1029 = !DISubroutineType(types: !1030)
!1030 = !{!44, !343, !263, !4}
!1031 = !{!1032, !1033, !1034, !1035}
!1032 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1028, file: !420, line: 1069, type: !343)
!1033 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1028, file: !420, line: 1069, type: !263)
!1034 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1028, file: !420, line: 1069, type: !4)
!1035 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1036, file: !420, line: 1071, type: !44)
!1036 = distinct !DILexicalBlock(scope: !1037, file: !420, line: 1071, column: 26)
!1037 = distinct !DILexicalBlock(scope: !1038, file: !420, line: 1071, column: 14)
!1038 = distinct !DILexicalBlock(scope: !1028, file: !420, line: 1071, column: 8)
!1039 = !DISubprogram(name: "memory_clear", scope: !420, file: !420, line: 1076, type: !725, isLocal: true, isDefinition: true, scopeLine: 1077, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyMemoryViewObject*)* @memory_clear, variables: !1040)
!1040 = !{!1041, !1042, !1044}
!1041 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1039, file: !420, line: 1076, type: !343)
!1042 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1043, file: !420, line: 1079, type: !5)
!1043 = distinct !DILexicalBlock(scope: !1039, file: !420, line: 1079, column: 8)
!1044 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1045, file: !420, line: 1079, type: !5)
!1045 = distinct !DILexicalBlock(scope: !1046, file: !420, line: 1079, column: 115)
!1046 = distinct !DILexicalBlock(scope: !1047, file: !420, line: 1079, column: 83)
!1047 = distinct !DILexicalBlock(scope: !1043, file: !420, line: 1079, column: 60)
!1048 = !DISubprogram(name: "memory_richcompare", scope: !420, file: !420, line: 2598, type: !271, isLocal: true, isDefinition: true, scopeLine: 2599, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, i32)* @memory_richcompare, variables: !1049)
!1049 = !{!1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1065, !1066, !1067, !1068, !1069}
!1050 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "v", arg: 1, scope: !1048, file: !420, line: 2598, type: !5)
!1051 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "w", arg: 2, scope: !1048, file: !420, line: 2598, type: !5)
!1052 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "op", arg: 3, scope: !1048, file: !420, line: 2598, type: !44)
!1053 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1048, file: !420, line: 2600, type: !5)
!1054 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "wbuf", scope: !1048, file: !420, line: 2601, type: !236)
!1055 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vv", scope: !1048, file: !420, line: 2601, type: !235)
!1056 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ww", scope: !1048, file: !420, line: 2602, type: !235)
!1057 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "unpack_v", scope: !1048, file: !420, line: 2603, type: !1058)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 64, align: 64)
!1059 = !DICompositeType(tag: DW_TAG_structure_type, name: "unpacker", file: !420, line: 1865, size: 256, align: 64, elements: !1060)
!1060 = !{!1061, !1062, !1063, !1064}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "unpack_from", scope: !1059, file: !420, line: 1866, baseType: !5, size: 64, align: 64)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "mview", scope: !1059, file: !420, line: 1867, baseType: !5, size: 64, align: 64, offset: 64)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "item", scope: !1059, file: !420, line: 1868, baseType: !52, size: 64, align: 64, offset: 128)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "itemsize", scope: !1059, file: !420, line: 1869, baseType: !11, size: 64, align: 64, offset: 192)
!1065 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "unpack_w", scope: !1048, file: !420, line: 2604, type: !1058)
!1066 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vfmt", scope: !1048, file: !420, line: 2605, type: !31)
!1067 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "wfmt", scope: !1048, file: !420, line: 2605, type: !31)
!1068 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "equal", scope: !1048, file: !420, line: 2606, type: !44)
!1069 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xincref_tmp", scope: !1070, file: !420, line: 2697, type: !5)
!1070 = distinct !DILexicalBlock(scope: !1048, file: !420, line: 2697, column: 8)
!1071 = !DISubprogram(name: "struct_get_unpacker", scope: !420, file: !420, line: 1903, type: !1072, isLocal: true, isDefinition: true, scopeLine: 1904, flags: DIFlagPrototyped, isOptimized: true, function: %struct.unpacker* (i8*, i64)* @struct_get_unpacker, variables: !1074)
!1072 = !DISubroutineType(types: !1073)
!1073 = !{!1058, !29, !11}
!1074 = !{!1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1084, !1086, !1089, !1091, !1094, !1096}
!1075 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fmt", arg: 1, scope: !1071, file: !420, line: 1903, type: !29)
!1076 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "itemsize", arg: 2, scope: !1071, file: !420, line: 1903, type: !11)
!1077 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "structmodule", scope: !1071, file: !420, line: 1905, type: !5)
!1078 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "Struct", scope: !1071, file: !420, line: 1906, type: !5)
!1079 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "structobj", scope: !1071, file: !420, line: 1907, type: !5)
!1080 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "format", scope: !1071, file: !420, line: 1908, type: !5)
!1081 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !1071, file: !420, line: 1909, type: !1058)
!1082 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1083, file: !420, line: 1916, type: !5)
!1083 = distinct !DILexicalBlock(scope: !1071, file: !420, line: 1916, column: 8)
!1084 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1085, file: !420, line: 1949, type: !5)
!1085 = distinct !DILexicalBlock(scope: !1071, file: !420, line: 1949, column: 8)
!1086 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1087, file: !420, line: 1949, type: !5)
!1087 = distinct !DILexicalBlock(scope: !1088, file: !420, line: 1949, column: 98)
!1088 = distinct !DILexicalBlock(scope: !1085, file: !420, line: 1949, column: 64)
!1089 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1090, file: !420, line: 1950, type: !5)
!1090 = distinct !DILexicalBlock(scope: !1071, file: !420, line: 1950, column: 8)
!1091 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1092, file: !420, line: 1950, type: !5)
!1092 = distinct !DILexicalBlock(scope: !1093, file: !420, line: 1950, column: 98)
!1093 = distinct !DILexicalBlock(scope: !1090, file: !420, line: 1950, column: 64)
!1094 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1095, file: !420, line: 1951, type: !5)
!1095 = distinct !DILexicalBlock(scope: !1071, file: !420, line: 1951, column: 8)
!1096 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1097, file: !420, line: 1951, type: !5)
!1097 = distinct !DILexicalBlock(scope: !1098, file: !420, line: 1951, column: 101)
!1098 = distinct !DILexicalBlock(scope: !1095, file: !420, line: 1951, column: 67)
!1099 = !DISubprogram(name: "unpacker_new", scope: !420, file: !420, line: 1873, type: !1100, isLocal: true, isDefinition: true, scopeLine: 1874, flags: DIFlagPrototyped, isOptimized: true, function: %struct.unpacker* ()* @unpacker_new, variables: !1102)
!1100 = !DISubroutineType(types: !1101)
!1101 = !{!1058}
!1102 = !{!1103}
!1103 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !1099, file: !420, line: 1875, type: !1058)
!1104 = !DISubprogram(name: "fix_struct_error_int", scope: !420, file: !420, line: 2421, type: !1105, isLocal: true, isDefinition: true, scopeLine: 2422, flags: DIFlagPrototyped, isOptimized: true, function: i32 ()* @fix_struct_error_int, variables: !2)
!1105 = !DISubroutineType(types: !1106)
!1106 = !{!44}
!1107 = !DISubprogram(name: "unpack_cmp", scope: !420, file: !420, line: 2478, type: !1108, isLocal: true, isDefinition: true, scopeLine: 2480, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i8*, i8, %struct.unpacker*, %struct.unpacker*)* @unpack_cmp, variables: !1110)
!1108 = !DISubroutineType(types: !1109)
!1109 = !{!44, !29, !29, !31, !1058, !1058}
!1110 = !{!1111, !1112, !1113, !1114, !1115, !1116, !1117, !1120, !1121, !1123, !1124, !1126, !1127, !1129, !1130, !1132, !1133, !1135, !1136, !1138, !1139, !1141, !1142, !1144, !1145, !1147, !1148, !1150, !1151, !1153, !1154, !1156, !1157, !1159}
!1111 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "p", arg: 1, scope: !1107, file: !420, line: 2478, type: !29)
!1112 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "q", arg: 2, scope: !1107, file: !420, line: 2478, type: !29)
!1113 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fmt", arg: 3, scope: !1107, file: !420, line: 2478, type: !31)
!1114 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unpack_p", arg: 4, scope: !1107, file: !420, line: 2479, type: !1058)
!1115 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unpack_q", arg: 5, scope: !1107, file: !420, line: 2479, type: !1058)
!1116 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "equal", scope: !1107, file: !420, line: 2481, type: !44)
!1117 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !1118, file: !420, line: 2488, type: !396)
!1118 = distinct !DILexicalBlock(scope: !1119, file: !420, line: 2488, column: 18)
!1119 = distinct !DILexicalBlock(scope: !1107, file: !420, line: 2483, column: 18)
!1120 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y", scope: !1118, file: !420, line: 2488, type: !396)
!1121 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !1122, file: !420, line: 2489, type: !44)
!1122 = distinct !DILexicalBlock(scope: !1119, file: !420, line: 2489, column: 18)
!1123 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y", scope: !1122, file: !420, line: 2489, type: !44)
!1124 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !1125, file: !420, line: 2490, type: !17)
!1125 = distinct !DILexicalBlock(scope: !1119, file: !420, line: 2490, column: 18)
!1126 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y", scope: !1125, file: !420, line: 2490, type: !17)
!1127 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !1128, file: !420, line: 2494, type: !400)
!1128 = distinct !DILexicalBlock(scope: !1119, file: !420, line: 2494, column: 18)
!1129 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y", scope: !1128, file: !420, line: 2494, type: !400)
!1130 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !1131, file: !420, line: 2500, type: !77)
!1131 = distinct !DILexicalBlock(scope: !1119, file: !420, line: 2500, column: 18)
!1132 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y", scope: !1131, file: !420, line: 2500, type: !77)
!1133 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !1134, file: !420, line: 2501, type: !341)
!1134 = distinct !DILexicalBlock(scope: !1119, file: !420, line: 2501, column: 18)
!1135 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y", scope: !1134, file: !420, line: 2501, type: !341)
!1136 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !1137, file: !420, line: 2502, type: !96)
!1137 = distinct !DILexicalBlock(scope: !1119, file: !420, line: 2502, column: 18)
!1138 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y", scope: !1137, file: !420, line: 2502, type: !96)
!1139 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !1140, file: !420, line: 2506, type: !397)
!1140 = distinct !DILexicalBlock(scope: !1119, file: !420, line: 2506, column: 18)
!1141 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y", scope: !1140, file: !420, line: 2506, type: !397)
!1142 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !1143, file: !420, line: 2507, type: !398)
!1143 = distinct !DILexicalBlock(scope: !1119, file: !420, line: 2507, column: 18)
!1144 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y", scope: !1143, file: !420, line: 2507, type: !398)
!1145 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !1146, file: !420, line: 2511, type: !11)
!1146 = distinct !DILexicalBlock(scope: !1119, file: !420, line: 2511, column: 18)
!1147 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y", scope: !1146, file: !420, line: 2511, type: !11)
!1148 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !1149, file: !420, line: 2512, type: !94)
!1149 = distinct !DILexicalBlock(scope: !1119, file: !420, line: 2512, column: 18)
!1150 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y", scope: !1149, file: !420, line: 2512, type: !94)
!1151 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !1152, file: !420, line: 2516, type: !399)
!1152 = distinct !DILexicalBlock(scope: !1119, file: !420, line: 2516, column: 18)
!1153 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y", scope: !1152, file: !420, line: 2516, type: !399)
!1154 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !1155, file: !420, line: 2517, type: !382)
!1155 = distinct !DILexicalBlock(scope: !1119, file: !420, line: 2517, column: 18)
!1156 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y", scope: !1155, file: !420, line: 2517, type: !382)
!1157 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !1158, file: !420, line: 2523, type: !4)
!1158 = distinct !DILexicalBlock(scope: !1119, file: !420, line: 2523, column: 18)
!1159 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y", scope: !1158, file: !420, line: 2523, type: !4)
!1160 = !DISubprogram(name: "struct_unpack_cmp", scope: !420, file: !420, line: 2436, type: !1161, isLocal: true, isDefinition: true, scopeLine: 2438, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i8*, %struct.unpacker*, %struct.unpacker*)* @struct_unpack_cmp, variables: !1163)
!1161 = !DISubroutineType(types: !1162)
!1162 = !{!44, !29, !29, !1058, !1058}
!1163 = !{!1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1175, !1177}
!1164 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "p", arg: 1, scope: !1160, file: !420, line: 2436, type: !29)
!1165 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "q", arg: 2, scope: !1160, file: !420, line: 2436, type: !29)
!1166 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unpack_p", arg: 3, scope: !1160, file: !420, line: 2437, type: !1058)
!1167 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unpack_q", arg: 4, scope: !1160, file: !420, line: 2437, type: !1058)
!1168 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "v", scope: !1160, file: !420, line: 2439, type: !5)
!1169 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "w", scope: !1160, file: !420, line: 2439, type: !5)
!1170 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !1160, file: !420, line: 2440, type: !44)
!1171 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1172, file: !420, line: 2450, type: !5)
!1172 = distinct !DILexicalBlock(scope: !1173, file: !420, line: 2450, column: 12)
!1173 = distinct !DILexicalBlock(scope: !1174, file: !420, line: 2449, column: 26)
!1174 = distinct !DILexicalBlock(scope: !1160, file: !420, line: 2449, column: 9)
!1175 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1176, file: !420, line: 2456, type: !5)
!1176 = distinct !DILexicalBlock(scope: !1160, file: !420, line: 2456, column: 8)
!1177 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1178, file: !420, line: 2457, type: !5)
!1178 = distinct !DILexicalBlock(scope: !1160, file: !420, line: 2457, column: 8)
!1179 = !DISubprogram(name: "struct_unpack_single", scope: !420, file: !420, line: 1962, type: !1180, isLocal: true, isDefinition: true, scopeLine: 1963, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i8*, %struct.unpacker*)* @struct_unpack_single, variables: !1182)
!1180 = !DISubroutineType(types: !1181)
!1181 = !{!5, !29, !1058}
!1182 = !{!1183, !1184, !1185, !1186, !1189}
!1183 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ptr", arg: 1, scope: !1179, file: !420, line: 1962, type: !29)
!1184 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "x", arg: 2, scope: !1179, file: !420, line: 1962, type: !1058)
!1185 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "v", scope: !1179, file: !420, line: 1964, type: !5)
!1186 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !1187, file: !420, line: 1972, type: !5)
!1187 = distinct !DILexicalBlock(scope: !1188, file: !420, line: 1971, column: 46)
!1188 = distinct !DILexicalBlock(scope: !1179, file: !420, line: 1971, column: 9)
!1189 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1190, file: !420, line: 1974, type: !5)
!1190 = distinct !DILexicalBlock(scope: !1187, file: !420, line: 1974, column: 12)
!1191 = !DISubprogram(name: "cmp_base", scope: !420, file: !420, line: 2540, type: !1192, isLocal: true, isDefinition: true, scopeLine: 2544, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i8*, i64*, i64*, i64*, i64*, i64*, i8, %struct.unpacker*, %struct.unpacker*)* @cmp_base, variables: !1194)
!1192 = !DISubroutineType(types: !1193)
!1193 = !{!44, !29, !29, !641, !641, !641, !641, !641, !31, !1058, !1058}
!1194 = !{!1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1211}
!1195 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "p", arg: 1, scope: !1191, file: !420, line: 2540, type: !29)
!1196 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "q", arg: 2, scope: !1191, file: !420, line: 2540, type: !29)
!1197 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "shape", arg: 3, scope: !1191, file: !420, line: 2540, type: !641)
!1198 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pstrides", arg: 4, scope: !1191, file: !420, line: 2541, type: !641)
!1199 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "psuboffsets", arg: 5, scope: !1191, file: !420, line: 2541, type: !641)
!1200 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "qstrides", arg: 6, scope: !1191, file: !420, line: 2542, type: !641)
!1201 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "qsuboffsets", arg: 7, scope: !1191, file: !420, line: 2542, type: !641)
!1202 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fmt", arg: 8, scope: !1191, file: !420, line: 2543, type: !31)
!1203 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unpack_p", arg: 9, scope: !1191, file: !420, line: 2543, type: !1058)
!1204 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unpack_q", arg: 10, scope: !1191, file: !420, line: 2543, type: !1058)
!1205 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1191, file: !420, line: 2545, type: !11)
!1206 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "equal", scope: !1191, file: !420, line: 2546, type: !44)
!1207 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "xp", scope: !1208, file: !420, line: 2549, type: !29)
!1208 = distinct !DILexicalBlock(scope: !1209, file: !420, line: 2548, column: 68)
!1209 = distinct !DILexicalBlock(scope: !1210, file: !420, line: 2548, column: 5)
!1210 = distinct !DILexicalBlock(scope: !1191, file: !420, line: 2548, column: 5)
!1211 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "xq", scope: !1208, file: !420, line: 2550, type: !29)
!1212 = !DISubprogram(name: "cmp_rec", scope: !420, file: !420, line: 2562, type: !1213, isLocal: true, isDefinition: true, scopeLine: 2567, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i8*, i64, i64*, i64*, i64*, i64*, i64*, i8, %struct.unpacker*, %struct.unpacker*)* @cmp_rec, variables: !1215)
!1213 = !DISubroutineType(types: !1214)
!1214 = !{!44, !29, !29, !11, !641, !641, !641, !641, !641, !31, !1058, !1058}
!1215 = !{!1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1233}
!1216 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "p", arg: 1, scope: !1212, file: !420, line: 2562, type: !29)
!1217 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "q", arg: 2, scope: !1212, file: !420, line: 2562, type: !29)
!1218 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ndim", arg: 3, scope: !1212, file: !420, line: 2563, type: !11)
!1219 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "shape", arg: 4, scope: !1212, file: !420, line: 2563, type: !641)
!1220 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pstrides", arg: 5, scope: !1212, file: !420, line: 2564, type: !641)
!1221 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "psuboffsets", arg: 6, scope: !1212, file: !420, line: 2564, type: !641)
!1222 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "qstrides", arg: 7, scope: !1212, file: !420, line: 2565, type: !641)
!1223 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "qsuboffsets", arg: 8, scope: !1212, file: !420, line: 2565, type: !641)
!1224 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fmt", arg: 9, scope: !1212, file: !420, line: 2566, type: !31)
!1225 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unpack_p", arg: 10, scope: !1212, file: !420, line: 2566, type: !1058)
!1226 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unpack_q", arg: 11, scope: !1212, file: !420, line: 2566, type: !1058)
!1227 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1212, file: !420, line: 2568, type: !11)
!1228 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "equal", scope: !1212, file: !420, line: 2569, type: !44)
!1229 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "xp", scope: !1230, file: !420, line: 2584, type: !29)
!1230 = distinct !DILexicalBlock(scope: !1231, file: !420, line: 2583, column: 68)
!1231 = distinct !DILexicalBlock(scope: !1232, file: !420, line: 2583, column: 5)
!1232 = distinct !DILexicalBlock(scope: !1212, file: !420, line: 2583, column: 5)
!1233 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "xq", scope: !1230, file: !420, line: 2585, type: !29)
!1234 = !DISubprogram(name: "unpacker_free", scope: !420, file: !420, line: 1891, type: !1235, isLocal: true, isDefinition: true, scopeLine: 1892, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.unpacker*)* @unpacker_free, variables: !1237)
!1235 = !DISubroutineType(types: !1236)
!1236 = !{null, !1058}
!1237 = !{!1238, !1239, !1243, !1246, !1248}
!1238 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "x", arg: 1, scope: !1234, file: !420, line: 1891, type: !1058)
!1239 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1240, file: !420, line: 1894, type: !5)
!1240 = distinct !DILexicalBlock(scope: !1241, file: !420, line: 1894, column: 12)
!1241 = distinct !DILexicalBlock(scope: !1242, file: !420, line: 1893, column: 12)
!1242 = distinct !DILexicalBlock(scope: !1234, file: !420, line: 1893, column: 9)
!1243 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1244, file: !420, line: 1894, type: !5)
!1244 = distinct !DILexicalBlock(scope: !1245, file: !420, line: 1894, column: 110)
!1245 = distinct !DILexicalBlock(scope: !1240, file: !420, line: 1894, column: 76)
!1246 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1247, file: !420, line: 1895, type: !5)
!1247 = distinct !DILexicalBlock(scope: !1241, file: !420, line: 1895, column: 12)
!1248 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1249, file: !420, line: 1895, type: !5)
!1249 = distinct !DILexicalBlock(scope: !1250, file: !420, line: 1895, column: 104)
!1250 = distinct !DILexicalBlock(scope: !1247, file: !420, line: 1895, column: 70)
!1251 = !DISubprogram(name: "memory_release", scope: !420, file: !420, line: 1049, type: !809, isLocal: true, isDefinition: true, scopeLine: 1050, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyMemoryViewObject*, %struct._object*)* @memory_release, variables: !1252)
!1252 = !{!1253, !1254}
!1253 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1251, file: !420, line: 1049, type: !343)
!1254 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "noargs", arg: 2, scope: !1251, file: !420, line: 1049, type: !5)
!1255 = !DISubprogram(name: "memory_tobytes", scope: !420, file: !420, line: 2092, type: !809, isLocal: true, isDefinition: true, scopeLine: 2093, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyMemoryViewObject*, %struct._object*)* @memory_tobytes, variables: !1256)
!1256 = !{!1257, !1258, !1259, !1260, !1261}
!1257 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1255, file: !420, line: 2092, type: !343)
!1258 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dummy", arg: 2, scope: !1255, file: !420, line: 2092, type: !5)
!1259 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "src", scope: !1255, file: !420, line: 2094, type: !235)
!1260 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bytes", scope: !1255, file: !420, line: 2095, type: !5)
!1261 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1262, file: !420, line: 2108, type: !5)
!1262 = distinct !DILexicalBlock(scope: !1263, file: !420, line: 2108, column: 12)
!1263 = distinct !DILexicalBlock(scope: !1264, file: !420, line: 2107, column: 100)
!1264 = distinct !DILexicalBlock(scope: !1255, file: !420, line: 2107, column: 9)
!1265 = !DISubprogram(name: "memory_tolist", scope: !420, file: !420, line: 2066, type: !809, isLocal: true, isDefinition: true, scopeLine: 2067, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyMemoryViewObject*, %struct._object*)* @memory_tolist, variables: !1266)
!1266 = !{!1267, !1268, !1269, !1270}
!1267 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mv", arg: 1, scope: !1265, file: !420, line: 2066, type: !343)
!1268 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "noargs", arg: 2, scope: !1265, file: !420, line: 2066, type: !5)
!1269 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "view", scope: !1265, file: !420, line: 2068, type: !525)
!1270 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fmt", scope: !1265, file: !420, line: 2069, type: !29)
!1271 = !DISubprogram(name: "tolist_base", scope: !420, file: !420, line: 2003, type: !1272, isLocal: true, isDefinition: true, scopeLine: 2006, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i8*, i64*, i64*, i64*, i8*)* @tolist_base, variables: !1274)
!1272 = !DISubroutineType(types: !1273)
!1273 = !{!5, !29, !641, !641, !641, !29}
!1274 = !{!1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1287}
!1275 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ptr", arg: 1, scope: !1271, file: !420, line: 2003, type: !29)
!1276 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "shape", arg: 2, scope: !1271, file: !420, line: 2003, type: !641)
!1277 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "strides", arg: 3, scope: !1271, file: !420, line: 2004, type: !641)
!1278 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "suboffsets", arg: 4, scope: !1271, file: !420, line: 2004, type: !641)
!1279 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fmt", arg: 5, scope: !1271, file: !420, line: 2005, type: !29)
!1280 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lst", scope: !1271, file: !420, line: 2007, type: !5)
!1281 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "item", scope: !1271, file: !420, line: 2007, type: !5)
!1282 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1271, file: !420, line: 2008, type: !11)
!1283 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "xptr", scope: !1284, file: !420, line: 2015, type: !29)
!1284 = distinct !DILexicalBlock(scope: !1285, file: !420, line: 2014, column: 53)
!1285 = distinct !DILexicalBlock(scope: !1286, file: !420, line: 2014, column: 5)
!1286 = distinct !DILexicalBlock(scope: !1271, file: !420, line: 2014, column: 5)
!1287 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1288, file: !420, line: 2018, type: !5)
!1288 = distinct !DILexicalBlock(scope: !1289, file: !420, line: 2018, column: 16)
!1289 = distinct !DILexicalBlock(scope: !1290, file: !420, line: 2017, column: 33)
!1290 = distinct !DILexicalBlock(scope: !1284, file: !420, line: 2017, column: 13)
!1291 = !DISubprogram(name: "tolist_rec", scope: !420, file: !420, line: 2030, type: !1292, isLocal: true, isDefinition: true, scopeLine: 2033, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i8*, i64, i64*, i64*, i64*, i8*)* @tolist_rec, variables: !1294)
!1292 = !DISubroutineType(types: !1293)
!1293 = !{!5, !29, !11, !641, !641, !641, !29}
!1294 = !{!1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1308}
!1295 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ptr", arg: 1, scope: !1291, file: !420, line: 2030, type: !29)
!1296 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ndim", arg: 2, scope: !1291, file: !420, line: 2030, type: !11)
!1297 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "shape", arg: 3, scope: !1291, file: !420, line: 2030, type: !641)
!1298 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "strides", arg: 4, scope: !1291, file: !420, line: 2031, type: !641)
!1299 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "suboffsets", arg: 5, scope: !1291, file: !420, line: 2031, type: !641)
!1300 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fmt", arg: 6, scope: !1291, file: !420, line: 2032, type: !29)
!1301 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lst", scope: !1291, file: !420, line: 2034, type: !5)
!1302 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "item", scope: !1291, file: !420, line: 2034, type: !5)
!1303 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1291, file: !420, line: 2035, type: !11)
!1304 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "xptr", scope: !1305, file: !420, line: 2049, type: !29)
!1305 = distinct !DILexicalBlock(scope: !1306, file: !420, line: 2048, column: 53)
!1306 = distinct !DILexicalBlock(scope: !1307, file: !420, line: 2048, column: 5)
!1307 = distinct !DILexicalBlock(scope: !1291, file: !420, line: 2048, column: 5)
!1308 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1309, file: !420, line: 2054, type: !5)
!1309 = distinct !DILexicalBlock(scope: !1310, file: !420, line: 2054, column: 16)
!1310 = distinct !DILexicalBlock(scope: !1311, file: !420, line: 2053, column: 33)
!1311 = distinct !DILexicalBlock(scope: !1305, file: !420, line: 2053, column: 13)
!1312 = !DISubprogram(name: "memory_cast", scope: !420, file: !420, line: 1309, type: !1313, isLocal: true, isDefinition: true, scopeLine: 1310, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyMemoryViewObject*, %struct._object*, %struct._object*)* @memory_cast, variables: !1315)
!1313 = !DISubroutineType(types: !1314)
!1314 = !{!5, !343, !5, !5}
!1315 = !{!1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323}
!1316 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1312, file: !420, line: 1309, type: !343)
!1317 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1312, file: !420, line: 1309, type: !5)
!1318 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1312, file: !420, line: 1309, type: !5)
!1319 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mv", scope: !1312, file: !420, line: 1312, type: !343)
!1320 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "shape", scope: !1312, file: !420, line: 1313, type: !5)
!1321 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "format", scope: !1312, file: !420, line: 1314, type: !5)
!1322 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ndim", scope: !1312, file: !420, line: 1315, type: !11)
!1323 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1324, file: !420, line: 1367, type: !5)
!1324 = distinct !DILexicalBlock(scope: !1312, file: !420, line: 1367, column: 8)
!1325 = !DISubprogram(name: "zero_in_shape", scope: !420, file: !420, line: 1284, type: !725, isLocal: true, isDefinition: true, scopeLine: 1285, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyMemoryViewObject*)* @zero_in_shape, variables: !1326)
!1326 = !{!1327, !1328, !1329}
!1327 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mv", arg: 1, scope: !1325, file: !420, line: 1284, type: !343)
!1328 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "view", scope: !1325, file: !420, line: 1286, type: !235)
!1329 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1325, file: !420, line: 1287, type: !11)
!1330 = !DISubprogram(name: "cast_to_1D", scope: !420, file: !420, line: 1143, type: !1331, isLocal: true, isDefinition: true, scopeLine: 1144, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyMemoryViewObject*, %struct._object*)* @cast_to_1D, variables: !1333)
!1331 = !DISubroutineType(types: !1332)
!1332 = !{!44, !343, !5}
!1333 = !{!1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342}
!1334 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mv", arg: 1, scope: !1330, file: !420, line: 1143, type: !343)
!1335 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "format", arg: 2, scope: !1330, file: !420, line: 1143, type: !5)
!1336 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "view", scope: !1330, file: !420, line: 1145, type: !235)
!1337 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "asciifmt", scope: !1330, file: !420, line: 1146, type: !5)
!1338 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "srcchar", scope: !1330, file: !420, line: 1147, type: !31)
!1339 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "destchar", scope: !1330, file: !420, line: 1147, type: !31)
!1340 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "itemsize", scope: !1330, file: !420, line: 1148, type: !11)
!1341 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !1330, file: !420, line: 1149, type: !44)
!1342 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1343, file: !420, line: 1203, type: !5)
!1343 = distinct !DILexicalBlock(scope: !1330, file: !420, line: 1203, column: 8)
!1344 = !DISubprogram(name: "cast_to_ND", scope: !420, file: !420, line: 1248, type: !1345, isLocal: true, isDefinition: true, scopeLine: 1249, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyMemoryViewObject*, %struct._object*, i32)* @cast_to_ND, variables: !1349)
!1345 = !DISubroutineType(types: !1346)
!1346 = !{!44, !343, !1347, !44}
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 64, align: 64)
!1348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6)
!1349 = !{!1350, !1351, !1352, !1353, !1354}
!1350 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mv", arg: 1, scope: !1344, file: !420, line: 1248, type: !343)
!1351 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "shape", arg: 2, scope: !1344, file: !420, line: 1248, type: !1347)
!1352 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ndim", arg: 3, scope: !1344, file: !420, line: 1248, type: !44)
!1353 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "view", scope: !1344, file: !420, line: 1250, type: !235)
!1354 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !1344, file: !420, line: 1251, type: !11)
!1355 = !DISubprogram(name: "copy_shape", scope: !420, file: !420, line: 1209, type: !1356, isLocal: true, isDefinition: true, scopeLine: 1211, flags: DIFlagPrototyped, isOptimized: true, function: i64 (i64*, %struct._object*, i64, i64)* @copy_shape, variables: !1358)
!1356 = !DISubroutineType(types: !1357)
!1357 = !{!11, !247, !1347, !11, !11}
!1358 = !{!1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366}
!1359 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "shape", arg: 1, scope: !1355, file: !420, line: 1209, type: !247)
!1360 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "seq", arg: 2, scope: !1355, file: !420, line: 1209, type: !1347)
!1361 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ndim", arg: 3, scope: !1355, file: !420, line: 1209, type: !11)
!1362 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "itemsize", arg: 4, scope: !1355, file: !420, line: 1210, type: !11)
!1363 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !1355, file: !420, line: 1212, type: !11)
!1364 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1355, file: !420, line: 1212, type: !11)
!1365 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !1355, file: !420, line: 1213, type: !11)
!1366 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !1367, file: !420, line: 1216, type: !5)
!1367 = distinct !DILexicalBlock(scope: !1368, file: !420, line: 1215, column: 32)
!1368 = distinct !DILexicalBlock(scope: !1369, file: !420, line: 1215, column: 5)
!1369 = distinct !DILexicalBlock(scope: !1355, file: !420, line: 1215, column: 5)
!1370 = !DISubprogram(name: "memory_enter", scope: !420, file: !420, line: 1084, type: !126, isLocal: true, isDefinition: true, scopeLine: 1085, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @memory_enter, variables: !1371)
!1371 = !{!1372, !1373}
!1372 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1370, file: !420, line: 1084, type: !5)
!1373 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1370, file: !420, line: 1084, type: !5)
!1374 = !DISubprogram(name: "memory_exit", scope: !420, file: !420, line: 1092, type: !126, isLocal: true, isDefinition: true, scopeLine: 1093, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @memory_exit, variables: !1375)
!1375 = !{!1376, !1377}
!1376 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1374, file: !420, line: 1092, type: !5)
!1377 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1374, file: !420, line: 1092, type: !5)
!1378 = !DISubprogram(name: "memory_obj_get", scope: !420, file: !420, line: 2784, type: !730, isLocal: true, isDefinition: true, scopeLine: 2785, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyMemoryViewObject*)* @memory_obj_get, variables: !1379)
!1379 = !{!1380, !1381}
!1380 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1378, file: !420, line: 2784, type: !343)
!1381 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "view", scope: !1378, file: !420, line: 2786, type: !235)
!1382 = !DISubprogram(name: "memory_nbytes_get", scope: !420, file: !420, line: 2797, type: !730, isLocal: true, isDefinition: true, scopeLine: 2798, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyMemoryViewObject*)* @memory_nbytes_get, variables: !1383)
!1383 = !{!1384}
!1384 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1382, file: !420, line: 2797, type: !343)
!1385 = !DISubprogram(name: "memory_readonly_get", scope: !420, file: !420, line: 2839, type: !730, isLocal: true, isDefinition: true, scopeLine: 2840, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyMemoryViewObject*)* @memory_readonly_get, variables: !1386)
!1386 = !{!1387}
!1387 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1385, file: !420, line: 2839, type: !343)
!1388 = !DISubprogram(name: "memory_itemsize_get", scope: !420, file: !420, line: 2811, type: !730, isLocal: true, isDefinition: true, scopeLine: 2812, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyMemoryViewObject*)* @memory_itemsize_get, variables: !1389)
!1389 = !{!1390}
!1390 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1388, file: !420, line: 2811, type: !343)
!1391 = !DISubprogram(name: "memory_format_get", scope: !420, file: !420, line: 2804, type: !730, isLocal: true, isDefinition: true, scopeLine: 2805, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyMemoryViewObject*)* @memory_format_get, variables: !1392)
!1392 = !{!1393}
!1393 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1391, file: !420, line: 2804, type: !343)
!1394 = !DISubprogram(name: "memory_ndim_get", scope: !420, file: !420, line: 2846, type: !730, isLocal: true, isDefinition: true, scopeLine: 2847, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyMemoryViewObject*)* @memory_ndim_get, variables: !1395)
!1395 = !{!1396}
!1396 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1394, file: !420, line: 2846, type: !343)
!1397 = !DISubprogram(name: "memory_shape_get", scope: !420, file: !420, line: 2818, type: !730, isLocal: true, isDefinition: true, scopeLine: 2819, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyMemoryViewObject*)* @memory_shape_get, variables: !1398)
!1398 = !{!1399}
!1399 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1397, file: !420, line: 2818, type: !343)
!1400 = !DISubprogram(name: "_IntTupleFromSsizet", scope: !420, file: !420, line: 2760, type: !1401, isLocal: true, isDefinition: true, scopeLine: 2761, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i32, i64*)* @_IntTupleFromSsizet, variables: !1403)
!1401 = !DISubroutineType(types: !1402)
!1402 = !{!5, !44, !247}
!1403 = !{!1404, !1405, !1406, !1407, !1408, !1409}
!1404 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "len", arg: 1, scope: !1400, file: !420, line: 2760, type: !44)
!1405 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "vals", arg: 2, scope: !1400, file: !420, line: 2760, type: !247)
!1406 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1400, file: !420, line: 2762, type: !44)
!1407 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "o", scope: !1400, file: !420, line: 2763, type: !5)
!1408 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "intTuple", scope: !1400, file: !420, line: 2764, type: !5)
!1409 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1410, file: !420, line: 2775, type: !5)
!1410 = distinct !DILexicalBlock(scope: !1411, file: !420, line: 2775, column: 16)
!1411 = distinct !DILexicalBlock(scope: !1412, file: !420, line: 2774, column: 17)
!1412 = distinct !DILexicalBlock(scope: !1413, file: !420, line: 2774, column: 13)
!1413 = distinct !DILexicalBlock(scope: !1414, file: !420, line: 2772, column: 27)
!1414 = distinct !DILexicalBlock(scope: !1415, file: !420, line: 2772, column: 5)
!1415 = distinct !DILexicalBlock(scope: !1400, file: !420, line: 2772, column: 5)
!1416 = !DISubprogram(name: "memory_strides_get", scope: !420, file: !420, line: 2825, type: !730, isLocal: true, isDefinition: true, scopeLine: 2826, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyMemoryViewObject*)* @memory_strides_get, variables: !1417)
!1417 = !{!1418}
!1418 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1416, file: !420, line: 2825, type: !343)
!1419 = !DISubprogram(name: "memory_suboffsets_get", scope: !420, file: !420, line: 2832, type: !730, isLocal: true, isDefinition: true, scopeLine: 2833, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyMemoryViewObject*)* @memory_suboffsets_get, variables: !1420)
!1420 = !{!1421}
!1421 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1419, file: !420, line: 2832, type: !343)
!1422 = !DISubprogram(name: "memory_c_contiguous", scope: !420, file: !420, line: 2853, type: !809, isLocal: true, isDefinition: true, scopeLine: 2854, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyMemoryViewObject*, %struct._object*)* @memory_c_contiguous, variables: !1423)
!1423 = !{!1424, !1425}
!1424 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1422, file: !420, line: 2853, type: !343)
!1425 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dummy", arg: 2, scope: !1422, file: !420, line: 2853, type: !5)
!1426 = !DISubprogram(name: "memory_f_contiguous", scope: !420, file: !420, line: 2860, type: !809, isLocal: true, isDefinition: true, scopeLine: 2861, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyMemoryViewObject*, %struct._object*)* @memory_f_contiguous, variables: !1427)
!1427 = !{!1428, !1429}
!1428 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1426, file: !420, line: 2860, type: !343)
!1429 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dummy", arg: 2, scope: !1426, file: !420, line: 2860, type: !5)
!1430 = !DISubprogram(name: "memory_contiguous", scope: !420, file: !420, line: 2867, type: !809, isLocal: true, isDefinition: true, scopeLine: 2868, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyMemoryViewObject*, %struct._object*)* @memory_contiguous, variables: !1431)
!1431 = !{!1432, !1433}
!1432 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1430, file: !420, line: 2867, type: !343)
!1433 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dummy", arg: 2, scope: !1430, file: !420, line: 2867, type: !5)
!1434 = !DISubprogram(name: "memory_new", scope: !420, file: !420, line: 949, type: !1435, isLocal: true, isDefinition: true, scopeLine: 950, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @memory_new, variables: !1439)
!1435 = !DISubroutineType(types: !1436)
!1436 = !{!5, !1437, !5, !5}
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 64, align: 64)
!1438 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTypeObject", file: !7, line: 422, baseType: !20)
!1439 = !{!1440, !1441, !1442, !1443}
!1440 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "subtype", arg: 1, scope: !1434, file: !420, line: 949, type: !1437)
!1441 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1434, file: !420, line: 949, type: !5)
!1442 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1434, file: !420, line: 949, type: !5)
!1443 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "obj", scope: !1434, file: !420, line: 951, type: !5)
!1444 = !{!1445, !1446, !1447, !1448, !1449, !1450, !1454, !1459, !1463, !1467, !1471, !1473, !1477, !1482, !1486, !1490, !1494, !1498, !1499, !1503, !1507, !1511, !1515, !1519, !1523, !1527}
!1445 = !DIGlobalVariable(name: "_PyManagedBuffer_Type", scope: !0, file: !420, line: 137, type: !1438, isLocal: false, isDefinition: true, variable: %struct._typeobject* @_PyManagedBuffer_Type)
!1446 = !DIGlobalVariable(name: "PyMemoryView_Type", scope: !0, file: !420, line: 2947, type: !1438, isLocal: false, isDefinition: true, variable: %struct._typeobject* @PyMemoryView_Type)
!1447 = !DIGlobalVariable(name: "memory_as_sequence", scope: !0, file: !420, line: 2404, type: !172, isLocal: true, isDefinition: true, variable: %struct.PySequenceMethods* @memory_as_sequence)
!1448 = !DIGlobalVariable(name: "memory_as_mapping", scope: !0, file: !420, line: 2397, type: !203, isLocal: true, isDefinition: true, variable: %struct.PyMappingMethods* @memory_as_mapping)
!1449 = !DIGlobalVariable(name: "memory_as_buffer", scope: !0, file: !420, line: 1464, type: !227, isLocal: true, isDefinition: true, variable: %struct.PyBufferProcs* @memory_as_buffer)
!1450 = !DIGlobalVariable(name: "memory_doc", scope: !0, file: !420, line: 225, type: !1451, isLocal: true, isDefinition: true, variable: [86 x i8]* @memory_doc)
!1451 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 688, align: 8, elements: !1452)
!1452 = !{!1453}
!1453 = !DISubrange(count: 86)
!1454 = !DIGlobalVariable(name: "memory_methods", scope: !0, file: !420, line: 2936, type: !1455, isLocal: true, isDefinition: true, variable: [7 x %struct.PyMethodDef]* @memory_methods)
!1455 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1456, size: 1792, align: 64, elements: !1457)
!1456 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMethodDef", file: !281, line: 47, baseType: !280)
!1457 = !{!1458}
!1458 = !DISubrange(count: 7)
!1459 = !DIGlobalVariable(name: "memory_release_doc", scope: !0, file: !420, line: 2919, type: !1460, isLocal: true, isDefinition: true, variable: [85 x i8]* @memory_release_doc)
!1460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 680, align: 8, elements: !1461)
!1461 = !{!1462}
!1462 = !DISubrange(count: 85)
!1463 = !DIGlobalVariable(name: "memory_tobytes_doc", scope: !0, file: !420, line: 2923, type: !1464, isLocal: true, isDefinition: true, variable: [70 x i8]* @memory_tobytes_doc)
!1464 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 560, align: 8, elements: !1465)
!1465 = !{!1466}
!1466 = !DISubrange(count: 70)
!1467 = !DIGlobalVariable(name: "memory_tolist_doc", scope: !0, file: !420, line: 2927, type: !1468, isLocal: true, isDefinition: true, variable: [73 x i8]* @memory_tolist_doc)
!1468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 584, align: 8, elements: !1469)
!1469 = !{!1470}
!1470 = !DISubrange(count: 73)
!1471 = !DIGlobalVariable(name: "kwlist", scope: !1312, file: !420, line: 1311, type: !1472, isLocal: true, isDefinition: true, variable: [3 x i8*]* @memory_cast.kwlist)
!1472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !52, size: 192, align: 64, elements: !364)
!1473 = !DIGlobalVariable(name: "memory_cast_doc", scope: !0, file: !420, line: 2931, type: !1474, isLocal: true, isDefinition: true, variable: [83 x i8]* @memory_cast_doc)
!1474 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 664, align: 8, elements: !1475)
!1475 = !{!1476}
!1476 = !DISubrange(count: 83)
!1477 = !DIGlobalVariable(name: "memory_getsetlist", scope: !0, file: !420, line: 2903, type: !1478, isLocal: true, isDefinition: true, variable: [13 x %struct.PyGetSetDef]* @memory_getsetlist)
!1478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1479, size: 4160, align: 64, elements: !1480)
!1479 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyGetSetDef", file: !294, line: 17, baseType: !293)
!1480 = !{!1481}
!1481 = !DISubrange(count: 13)
!1482 = !DIGlobalVariable(name: "memory_obj_doc", scope: !0, file: !420, line: 2873, type: !1483, isLocal: true, isDefinition: true, variable: [41 x i8]* @memory_obj_doc)
!1483 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 328, align: 8, elements: !1484)
!1484 = !{!1485}
!1485 = !DISubrange(count: 41)
!1486 = !DIGlobalVariable(name: "memory_nbytes_doc", scope: !0, file: !420, line: 2875, type: !1487, isLocal: true, isDefinition: true, variable: [87 x i8]* @memory_nbytes_doc)
!1487 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 696, align: 8, elements: !1488)
!1488 = !{!1489}
!1489 = !DISubrange(count: 87)
!1490 = !DIGlobalVariable(name: "memory_readonly_doc", scope: !0, file: !420, line: 2878, type: !1491, isLocal: true, isDefinition: true, variable: [51 x i8]* @memory_readonly_doc)
!1491 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 408, align: 8, elements: !1492)
!1492 = !{!1493}
!1493 = !DISubrange(count: 51)
!1494 = !DIGlobalVariable(name: "memory_itemsize_doc", scope: !0, file: !420, line: 2880, type: !1495, isLocal: true, isDefinition: true, variable: [53 x i8]* @memory_itemsize_doc)
!1495 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 424, align: 8, elements: !1496)
!1496 = !{!1497}
!1497 = !DISubrange(count: 53)
!1498 = !DIGlobalVariable(name: "memory_format_doc", scope: !0, file: !420, line: 2882, type: !1487, isLocal: true, isDefinition: true, variable: [87 x i8]* @memory_format_doc)
!1499 = !DIGlobalVariable(name: "memory_ndim_doc", scope: !0, file: !420, line: 2885, type: !1500, isLocal: true, isDefinition: true, variable: [95 x i8]* @memory_ndim_doc)
!1500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 760, align: 8, elements: !1501)
!1501 = !{!1502}
!1502 = !DISubrange(count: 95)
!1503 = !DIGlobalVariable(name: "memory_shape_doc", scope: !0, file: !420, line: 2888, type: !1504, isLocal: true, isDefinition: true, variable: [84 x i8]* @memory_shape_doc)
!1504 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 672, align: 8, elements: !1505)
!1505 = !{!1506}
!1506 = !DISubrange(count: 84)
!1507 = !DIGlobalVariable(name: "memory_strides_doc", scope: !0, file: !420, line: 2891, type: !1508, isLocal: true, isDefinition: true, variable: [107 x i8]* @memory_strides_doc)
!1508 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 856, align: 8, elements: !1509)
!1509 = !{!1510}
!1510 = !DISubrange(count: 107)
!1511 = !DIGlobalVariable(name: "memory_suboffsets_doc", scope: !0, file: !420, line: 2894, type: !1512, isLocal: true, isDefinition: true, variable: [58 x i8]* @memory_suboffsets_doc)
!1512 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 464, align: 8, elements: !1513)
!1513 = !{!1514}
!1514 = !DISubrange(count: 58)
!1515 = !DIGlobalVariable(name: "memory_c_contiguous_doc", scope: !0, file: !420, line: 2896, type: !1516, isLocal: true, isDefinition: true, variable: [54 x i8]* @memory_c_contiguous_doc)
!1516 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 432, align: 8, elements: !1517)
!1517 = !{!1518}
!1518 = !DISubrange(count: 54)
!1519 = !DIGlobalVariable(name: "memory_f_contiguous_doc", scope: !0, file: !420, line: 2898, type: !1520, isLocal: true, isDefinition: true, variable: [60 x i8]* @memory_f_contiguous_doc)
!1520 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 480, align: 8, elements: !1521)
!1521 = !{!1522}
!1522 = !DISubrange(count: 60)
!1523 = !DIGlobalVariable(name: "memory_contiguous_doc", scope: !0, file: !420, line: 2900, type: !1524, isLocal: true, isDefinition: true, variable: [52 x i8]* @memory_contiguous_doc)
!1524 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 416, align: 8, elements: !1525)
!1525 = !{!1526}
!1526 = !DISubrange(count: 52)
!1527 = !DIGlobalVariable(name: "kwlist", scope: !1434, file: !420, line: 952, type: !1528, isLocal: true, isDefinition: true, variable: [2 x i8*]* @memory_new.kwlist)
!1528 = !DICompositeType(tag: DW_TAG_array_type, baseType: !52, size: 128, align: 64, elements: !1529)
!1529 = !{!1530}
!1530 = !DISubrange(count: 2)
!1531 = !{i32 2, !"Dwarf Version", i32 4}
!1532 = !{i32 2, !"Debug Info Version", i32 3}
!1533 = !{!"clang version 3.7.1 (https://github.com/llvm-mirror/clang.git 0dbefa1b83eb90f7a06b5df5df254ce32be3db4b) (git@github.com:kim-yoonseung/llvm.git e8e68907a8135028089af4d924da468e2b7257fa)"}
!1534 = !{!1535, !1535, i64 0}
!1535 = !{!"any pointer", !1536, i64 0}
!1536 = !{!"omnipotent char", !1537, i64 0}
!1537 = !{!"Simple C/C++ TBAA"}
!1538 = !DIExpression()
!1539 = !DILocation(line: 113, column: 38, scope: !489)
!1540 = !DILocation(line: 116, column: 18, scope: !489)
!1541 = !DILocation(line: 116, column: 5, scope: !489)
!1542 = !DILocation(line: 117, column: 9, scope: !1543)
!1543 = distinct !DILexicalBlock(scope: !489, file: !420, line: 117, column: 9)
!1544 = !DILocation(line: 117, column: 15, scope: !1543)
!1545 = !{!1546, !1549, i64 16}
!1546 = !{!"", !1547, i64 0, !1549, i64 16, !1548, i64 24, !1550, i64 32}
!1547 = !{!"_object", !1548, i64 0, !1535, i64 8}
!1548 = !{!"long", !1536, i64 0}
!1549 = !{!"int", !1536, i64 0}
!1550 = !{!"bufferinfo", !1535, i64 0, !1535, i64 8, !1548, i64 16, !1548, i64 24, !1549, i64 32, !1549, i64 36, !1535, i64 40, !1535, i64 48, !1535, i64 56, !1535, i64 64, !1535, i64 72}
!1551 = !DILocation(line: 117, column: 20, scope: !1543)
!1552 = !DILocation(line: 117, column: 9, scope: !489)
!1553 = !DILocation(line: 118, column: 20, scope: !1543)
!1554 = !DILocation(line: 118, column: 26, scope: !1543)
!1555 = !DILocation(line: 118, column: 33, scope: !1543)
!1556 = !{!1546, !1535, i64 72}
!1557 = !DILocation(line: 118, column: 9, scope: !1543)
!1558 = !DILocation(line: 119, column: 21, scope: !489)
!1559 = !DILocation(line: 119, column: 5, scope: !489)
!1560 = !DILocation(line: 120, column: 1, scope: !489)
!1561 = !DILocation(line: 123, column: 39, scope: !499)
!1562 = !DILocation(line: 123, column: 55, scope: !499)
!1563 = !DILocation(line: 123, column: 68, scope: !499)
!1564 = !DILocation(line: 125, column: 5, scope: !499)
!1565 = !DILocation(line: 125, column: 14, scope: !1566)
!1566 = !DILexicalBlockFile(scope: !508, file: !420, discriminator: 1)
!1567 = !DILocation(line: 125, column: 20, scope: !508)
!1568 = !DILocation(line: 125, column: 27, scope: !508)
!1569 = !{!1546, !1535, i64 40}
!1570 = !DILocation(line: 125, column: 14, scope: !508)
!1571 = !DILocation(line: 125, column: 14, scope: !509)
!1572 = !DILocation(line: 125, column: 34, scope: !1573)
!1573 = !DILexicalBlockFile(scope: !507, file: !420, discriminator: 2)
!1574 = !DILocation(line: 125, column: 38, scope: !507)
!1575 = !DILocation(line: 125, column: 45, scope: !507)
!1576 = !DILocation(line: 125, column: 64, scope: !507)
!1577 = !DILocation(line: 125, column: 70, scope: !507)
!1578 = !DILocation(line: 125, column: 77, scope: !507)
!1579 = !DILocation(line: 125, column: 83, scope: !507)
!1580 = !{!1549, !1549, i64 0}
!1581 = !DILocation(line: 125, column: 93, scope: !1582)
!1582 = distinct !DILexicalBlock(scope: !507, file: !420, line: 125, column: 93)
!1583 = !DILocation(line: 125, column: 93, scope: !507)
!1584 = !DILocation(line: 125, column: 106, scope: !1585)
!1585 = !DILexicalBlockFile(scope: !1582, file: !420, discriminator: 4)
!1586 = !DILocation(line: 125, column: 99, scope: !1582)
!1587 = !DILocation(line: 125, column: 112, scope: !1588)
!1588 = !DILexicalBlockFile(scope: !508, file: !420, discriminator: 5)
!1589 = !DILocation(line: 125, column: 112, scope: !1590)
!1590 = !DILexicalBlockFile(scope: !1591, file: !420, discriminator: 7)
!1591 = !DILexicalBlockFile(scope: !508, file: !420, discriminator: 6)
!1592 = !DILocation(line: 125, column: 112, scope: !507)
!1593 = !DILocation(line: 125, column: 114, scope: !1594)
!1594 = !DILexicalBlockFile(scope: !1595, file: !420, discriminator: 8)
!1595 = !DILexicalBlockFile(scope: !509, file: !420, discriminator: 3)
!1596 = !DILocation(line: 126, column: 5, scope: !499)
!1597 = !DILocation(line: 127, column: 1, scope: !499)
!1598 = !DILocation(line: 130, column: 36, scope: !510)
!1599 = !DILocation(line: 133, column: 18, scope: !510)
!1600 = !DILocation(line: 133, column: 5, scope: !510)
!1601 = !DILocation(line: 134, column: 5, scope: !510)
!1602 = !DILocation(line: 719, column: 31, scope: !419)
!1603 = !{!1548, !1548, i64 0}
!1604 = !DILocation(line: 719, column: 47, scope: !419)
!1605 = !DILocation(line: 719, column: 57, scope: !419)
!1606 = !DILocation(line: 721, column: 5, scope: !419)
!1607 = !DILocation(line: 721, column: 29, scope: !419)
!1608 = !DILocation(line: 722, column: 5, scope: !419)
!1609 = !DILocation(line: 722, column: 15, scope: !419)
!1610 = !DILocation(line: 723, column: 5, scope: !419)
!1611 = !DILocation(line: 723, column: 9, scope: !419)
!1612 = !DILocation(line: 728, column: 12, scope: !419)
!1613 = !DILocation(line: 728, column: 10, scope: !419)
!1614 = !DILocation(line: 729, column: 9, scope: !1615)
!1615 = distinct !DILexicalBlock(scope: !419, file: !420, line: 729, column: 9)
!1616 = !DILocation(line: 729, column: 14, scope: !1615)
!1617 = !DILocation(line: 729, column: 9, scope: !419)
!1618 = !DILocation(line: 730, column: 9, scope: !1615)
!1619 = !DILocation(line: 732, column: 17, scope: !419)
!1620 = !DILocation(line: 732, column: 23, scope: !419)
!1621 = !DILocation(line: 732, column: 16, scope: !419)
!1622 = !DILocation(line: 732, column: 14, scope: !419)
!1623 = !DILocation(line: 733, column: 30, scope: !419)
!1624 = !DILocation(line: 733, column: 36, scope: !419)
!1625 = !DILocation(line: 733, column: 56, scope: !419)
!1626 = !DILocation(line: 733, column: 61, scope: !419)
!1627 = !DILocation(line: 733, column: 67, scope: !419)
!1628 = !DILocation(line: 733, column: 11, scope: !419)
!1629 = !DILocation(line: 736, column: 24, scope: !419)
!1630 = !DILocation(line: 736, column: 10, scope: !419)
!1631 = !DILocation(line: 736, column: 8, scope: !419)
!1632 = !DILocation(line: 737, column: 5, scope: !419)
!1633 = !DILocation(line: 737, column: 10, scope: !1634)
!1634 = !DILexicalBlockFile(scope: !431, file: !420, discriminator: 1)
!1635 = !DILocation(line: 737, column: 20, scope: !431)
!1636 = !DILocation(line: 737, column: 50, scope: !431)
!1637 = !DILocation(line: 737, column: 37, scope: !431)
!1638 = !DILocation(line: 737, column: 65, scope: !1639)
!1639 = distinct !DILexicalBlock(scope: !431, file: !420, line: 737, column: 62)
!1640 = !DILocation(line: 737, column: 82, scope: !1639)
!1641 = !DILocation(line: 737, column: 62, scope: !1639)
!1642 = !{!1547, !1548, i64 0}
!1643 = !DILocation(line: 737, column: 92, scope: !1639)
!1644 = !DILocation(line: 737, column: 62, scope: !431)
!1645 = !DILocation(line: 737, column: 62, scope: !1646)
!1646 = !DILexicalBlockFile(scope: !431, file: !420, discriminator: 2)
!1647 = !DILocation(line: 737, column: 123, scope: !1648)
!1648 = !DILexicalBlockFile(scope: !1639, file: !420, discriminator: 3)
!1649 = !DILocation(line: 737, column: 141, scope: !1639)
!1650 = !{!1547, !1535, i64 8}
!1651 = !DILocation(line: 737, column: 151, scope: !1639)
!1652 = !{!1653, !1535, i64 48}
!1653 = !{!"_typeobject", !1654, i64 0, !1535, i64 24, !1548, i64 32, !1548, i64 40, !1535, i64 48, !1535, i64 56, !1535, i64 64, !1535, i64 72, !1535, i64 80, !1535, i64 88, !1535, i64 96, !1535, i64 104, !1535, i64 112, !1535, i64 120, !1535, i64 128, !1535, i64 136, !1535, i64 144, !1535, i64 152, !1535, i64 160, !1548, i64 168, !1535, i64 176, !1535, i64 184, !1535, i64 192, !1535, i64 200, !1548, i64 208, !1535, i64 216, !1535, i64 224, !1535, i64 232, !1535, i64 240, !1535, i64 248, !1535, i64 256, !1535, i64 264, !1535, i64 272, !1535, i64 280, !1548, i64 288, !1535, i64 296, !1535, i64 304, !1535, i64 312, !1535, i64 320, !1535, i64 328, !1535, i64 336, !1535, i64 344, !1535, i64 352, !1535, i64 360, !1535, i64 368, !1535, i64 376, !1549, i64 384, !1535, i64 392}
!1654 = !{!"", !1547, i64 0, !1548, i64 16}
!1655 = !DILocation(line: 737, column: 176, scope: !1639)
!1656 = !DILocation(line: 737, column: 107, scope: !1639)
!1657 = !DILocation(line: 737, column: 195, scope: !1658)
!1658 = !DILexicalBlockFile(scope: !419, file: !420, discriminator: 4)
!1659 = !DILocation(line: 737, column: 195, scope: !431)
!1660 = !DILocation(line: 737, column: 195, scope: !1661)
!1661 = !DILexicalBlockFile(scope: !431, file: !420, discriminator: 5)
!1662 = !DILocation(line: 739, column: 12, scope: !419)
!1663 = !DILocation(line: 739, column: 5, scope: !419)
!1664 = !DILocation(line: 740, column: 1, scope: !419)
!1665 = !DILocation(line: 65, column: 5, scope: !515)
!1666 = !DILocation(line: 65, column: 29, scope: !515)
!1667 = !DILocation(line: 68, column: 38, scope: !515)
!1668 = !DILocation(line: 68, column: 11, scope: !515)
!1669 = !DILocation(line: 67, column: 10, scope: !515)
!1670 = !DILocation(line: 69, column: 9, scope: !1671)
!1671 = distinct !DILexicalBlock(scope: !515, file: !420, line: 69, column: 9)
!1672 = !DILocation(line: 69, column: 14, scope: !1671)
!1673 = !DILocation(line: 69, column: 9, scope: !515)
!1674 = !DILocation(line: 70, column: 9, scope: !1671)
!1675 = !DILocation(line: 71, column: 5, scope: !515)
!1676 = !DILocation(line: 71, column: 11, scope: !515)
!1677 = !DILocation(line: 71, column: 17, scope: !515)
!1678 = !DILocation(line: 72, column: 5, scope: !515)
!1679 = !DILocation(line: 72, column: 11, scope: !515)
!1680 = !DILocation(line: 72, column: 19, scope: !515)
!1681 = !{!1546, !1548, i64 24}
!1682 = !DILocation(line: 73, column: 5, scope: !515)
!1683 = !DILocation(line: 73, column: 11, scope: !515)
!1684 = !DILocation(line: 73, column: 18, scope: !515)
!1685 = !DILocation(line: 73, column: 22, scope: !515)
!1686 = !DILocation(line: 74, column: 5, scope: !515)
!1687 = !DILocation(line: 74, column: 10, scope: !1688)
!1688 = !DILexicalBlockFile(scope: !521, file: !420, discriminator: 1)
!1689 = !DILocation(line: 74, column: 21, scope: !521)
!1690 = !DILocation(line: 74, column: 40, scope: !521)
!1691 = !DILocation(line: 74, column: 26, scope: !521)
!1692 = !DILocation(line: 74, column: 45, scope: !521)
!1693 = !DILocation(line: 74, column: 56, scope: !1694)
!1694 = distinct !DILexicalBlock(scope: !521, file: !420, line: 74, column: 54)
!1695 = !DILocation(line: 74, column: 60, scope: !1694)
!1696 = !DILocation(line: 74, column: 63, scope: !1694)
!1697 = !{!1698, !1548, i64 16}
!1698 = !{!"", !1535, i64 0, !1535, i64 8, !1548, i64 16}
!1699 = !DILocation(line: 74, column: 71, scope: !1694)
!1700 = !DILocation(line: 74, column: 79, scope: !1694)
!1701 = !DILocation(line: 74, column: 54, scope: !521)
!1702 = !DILocation(line: 74, column: 88, scope: !1703)
!1703 = !DILexicalBlockFile(scope: !1694, file: !420, discriminator: 2)
!1704 = !DILocation(line: 74, column: 132, scope: !1705)
!1705 = !DILexicalBlockFile(scope: !521, file: !420, discriminator: 3)
!1706 = !DILocation(line: 74, column: 157, scope: !1707)
!1707 = !DILexicalBlockFile(scope: !1708, file: !420, discriminator: 4)
!1708 = distinct !DILexicalBlock(scope: !521, file: !420, line: 74, column: 135)
!1709 = !DILocation(line: 74, column: 161, scope: !1708)
!1710 = !DILocation(line: 74, column: 164, scope: !1708)
!1711 = !DILocation(line: 74, column: 172, scope: !1708)
!1712 = !DILocation(line: 74, column: 199, scope: !1708)
!1713 = !DILocation(line: 74, column: 138, scope: !1708)
!1714 = !DILocation(line: 74, column: 142, scope: !1708)
!1715 = !DILocation(line: 74, column: 145, scope: !1708)
!1716 = !DILocation(line: 74, column: 153, scope: !1708)
!1717 = !DILocation(line: 74, column: 228, scope: !1708)
!1718 = !DILocation(line: 74, column: 228, scope: !1719)
!1719 = !DILexicalBlockFile(scope: !1708, file: !420, discriminator: 5)
!1720 = !DILocation(line: 74, column: 257, scope: !1721)
!1721 = !DILexicalBlockFile(scope: !521, file: !420, discriminator: 6)
!1722 = !DILocation(line: 74, column: 241, scope: !521)
!1723 = !DILocation(line: 74, column: 244, scope: !521)
!1724 = !DILocation(line: 74, column: 247, scope: !521)
!1725 = !DILocation(line: 74, column: 255, scope: !521)
!1726 = !{!1698, !1535, i64 0}
!1727 = !DILocation(line: 74, column: 292, scope: !521)
!1728 = !DILocation(line: 74, column: 311, scope: !521)
!1729 = !DILocation(line: 74, column: 314, scope: !521)
!1730 = !{!1698, !1535, i64 8}
!1731 = !DILocation(line: 74, column: 276, scope: !521)
!1732 = !DILocation(line: 74, column: 279, scope: !521)
!1733 = !DILocation(line: 74, column: 282, scope: !521)
!1734 = !DILocation(line: 74, column: 290, scope: !521)
!1735 = !DILocation(line: 74, column: 351, scope: !521)
!1736 = !DILocation(line: 74, column: 323, scope: !521)
!1737 = !DILocation(line: 74, column: 326, scope: !521)
!1738 = !DILocation(line: 74, column: 329, scope: !521)
!1739 = !DILocation(line: 74, column: 338, scope: !521)
!1740 = !DILocation(line: 74, column: 341, scope: !521)
!1741 = !DILocation(line: 74, column: 349, scope: !521)
!1742 = !DILocation(line: 74, column: 386, scope: !521)
!1743 = !DILocation(line: 74, column: 354, scope: !521)
!1744 = !DILocation(line: 74, column: 373, scope: !521)
!1745 = !DILocation(line: 74, column: 376, scope: !521)
!1746 = !DILocation(line: 74, column: 384, scope: !521)
!1747 = !DILocation(line: 74, column: 389, scope: !515)
!1748 = !DILocation(line: 74, column: 389, scope: !521)
!1749 = !DILocation(line: 74, column: 389, scope: !1750)
!1750 = !DILexicalBlockFile(scope: !521, file: !420, discriminator: 7)
!1751 = !DILocation(line: 76, column: 12, scope: !515)
!1752 = !DILocation(line: 76, column: 5, scope: !515)
!1753 = !DILocation(line: 77, column: 1, scope: !515)
!1754 = !DILocation(line: 652, column: 39, scope: !522)
!1755 = !DILocation(line: 652, column: 62, scope: !522)
!1756 = !DILocation(line: 654, column: 5, scope: !522)
!1757 = !DILocation(line: 654, column: 25, scope: !522)
!1758 = !DILocation(line: 655, column: 5, scope: !522)
!1759 = !DILocation(line: 655, column: 16, scope: !522)
!1760 = !DILocation(line: 657, column: 9, scope: !1761)
!1761 = distinct !DILexicalBlock(scope: !522, file: !420, line: 657, column: 9)
!1762 = !DILocation(line: 657, column: 13, scope: !1761)
!1763 = !DILocation(line: 657, column: 9, scope: !522)
!1764 = !DILocation(line: 658, column: 16, scope: !1761)
!1765 = !DILocation(line: 658, column: 22, scope: !1761)
!1766 = !DILocation(line: 658, column: 13, scope: !1761)
!1767 = !DILocation(line: 658, column: 9, scope: !1761)
!1768 = !DILocation(line: 660, column: 9, scope: !1769)
!1769 = distinct !DILexicalBlock(scope: !522, file: !420, line: 660, column: 9)
!1770 = !DILocation(line: 660, column: 14, scope: !1769)
!1771 = !{!1550, !1549, i64 36}
!1772 = !DILocation(line: 660, column: 19, scope: !1769)
!1773 = !DILocation(line: 660, column: 9, scope: !522)
!1774 = !DILocation(line: 661, column: 25, scope: !1775)
!1775 = distinct !DILexicalBlock(scope: !1769, file: !420, line: 660, column: 25)
!1776 = !DILocation(line: 661, column: 9, scope: !1775)
!1777 = !DILocation(line: 664, column: 9, scope: !1775)
!1778 = !DILocation(line: 667, column: 23, scope: !522)
!1779 = !DILocation(line: 667, column: 28, scope: !522)
!1780 = !DILocation(line: 667, column: 10, scope: !522)
!1781 = !DILocation(line: 667, column: 8, scope: !522)
!1782 = !DILocation(line: 668, column: 9, scope: !1783)
!1783 = distinct !DILexicalBlock(scope: !522, file: !420, line: 668, column: 9)
!1784 = !DILocation(line: 668, column: 12, scope: !1783)
!1785 = !DILocation(line: 668, column: 9, scope: !522)
!1786 = !DILocation(line: 669, column: 9, scope: !1783)
!1787 = !DILocation(line: 671, column: 13, scope: !522)
!1788 = !DILocation(line: 671, column: 17, scope: !522)
!1789 = !DILocation(line: 671, column: 10, scope: !522)
!1790 = !DILocation(line: 672, column: 24, scope: !522)
!1791 = !DILocation(line: 672, column: 30, scope: !522)
!1792 = !DILocation(line: 672, column: 5, scope: !522)
!1793 = !DILocation(line: 673, column: 24, scope: !522)
!1794 = !DILocation(line: 673, column: 30, scope: !522)
!1795 = !DILocation(line: 673, column: 5, scope: !522)
!1796 = !DILocation(line: 674, column: 21, scope: !522)
!1797 = !DILocation(line: 674, column: 27, scope: !522)
!1798 = !DILocation(line: 674, column: 5, scope: !522)
!1799 = !DILocation(line: 675, column: 16, scope: !522)
!1800 = !DILocation(line: 675, column: 5, scope: !522)
!1801 = !DILocation(line: 677, column: 16, scope: !522)
!1802 = !DILocation(line: 677, column: 5, scope: !522)
!1803 = !DILocation(line: 677, column: 9, scope: !522)
!1804 = !DILocation(line: 677, column: 14, scope: !522)
!1805 = !{!1806, !1535, i64 24}
!1806 = !{!"", !1654, i64 0, !1535, i64 24, !1548, i64 32, !1549, i64 40, !1548, i64 48, !1550, i64 56, !1536, i64 136, !1535, i64 144, !1536, i64 152}
!1807 = !DILocation(line: 678, column: 21, scope: !522)
!1808 = !DILocation(line: 678, column: 8, scope: !522)
!1809 = !DILocation(line: 678, column: 29, scope: !522)
!1810 = !DILocation(line: 678, column: 38, scope: !522)
!1811 = !DILocation(line: 679, column: 5, scope: !522)
!1812 = !DILocation(line: 679, column: 11, scope: !522)
!1813 = !DILocation(line: 679, column: 18, scope: !522)
!1814 = !DILocation(line: 681, column: 24, scope: !522)
!1815 = !DILocation(line: 681, column: 12, scope: !522)
!1816 = !DILocation(line: 681, column: 5, scope: !522)
!1817 = !DILocation(line: 682, column: 1, scope: !522)
!1818 = !DILocation(line: 748, column: 36, scope: !432)
!1819 = !DILocation(line: 750, column: 5, scope: !432)
!1820 = !DILocation(line: 750, column: 29, scope: !432)
!1821 = !DILocation(line: 751, column: 5, scope: !432)
!1822 = !DILocation(line: 751, column: 15, scope: !432)
!1823 = !DILocation(line: 753, column: 9, scope: !1824)
!1824 = distinct !DILexicalBlock(scope: !432, file: !420, line: 753, column: 9)
!1825 = !DILocation(line: 753, column: 15, scope: !1824)
!1826 = !{!1550, !1535, i64 0}
!1827 = !DILocation(line: 753, column: 19, scope: !1824)
!1828 = !DILocation(line: 753, column: 9, scope: !432)
!1829 = !DILocation(line: 754, column: 25, scope: !1830)
!1830 = distinct !DILexicalBlock(scope: !1824, file: !420, line: 753, column: 34)
!1831 = !DILocation(line: 754, column: 9, scope: !1830)
!1832 = !DILocation(line: 756, column: 9, scope: !1830)
!1833 = !DILocation(line: 759, column: 12, scope: !432)
!1834 = !DILocation(line: 759, column: 10, scope: !432)
!1835 = !DILocation(line: 760, column: 9, scope: !1836)
!1836 = distinct !DILexicalBlock(scope: !432, file: !420, line: 760, column: 9)
!1837 = !DILocation(line: 760, column: 14, scope: !1836)
!1838 = !DILocation(line: 760, column: 9, scope: !432)
!1839 = !DILocation(line: 761, column: 9, scope: !1836)
!1840 = !DILocation(line: 765, column: 5, scope: !432)
!1841 = !DILocation(line: 765, column: 11, scope: !432)
!1842 = !DILocation(line: 765, column: 21, scope: !432)
!1843 = !DILocation(line: 765, column: 20, scope: !432)
!1844 = !{i64 0, i64 8, !1534, i64 8, i64 8, !1534, i64 16, i64 8, !1603, i64 24, i64 8, !1603, i64 32, i64 4, !1580, i64 36, i64 4, !1580, i64 40, i64 8, !1534, i64 48, i64 8, !1534, i64 56, i64 8, !1534, i64 64, i64 8, !1534, i64 72, i64 8, !1534}
!1845 = !DILocation(line: 766, column: 5, scope: !432)
!1846 = !DILocation(line: 766, column: 11, scope: !432)
!1847 = !DILocation(line: 766, column: 18, scope: !432)
!1848 = !DILocation(line: 766, column: 22, scope: !432)
!1849 = !DILocation(line: 768, column: 24, scope: !432)
!1850 = !DILocation(line: 768, column: 10, scope: !432)
!1851 = !DILocation(line: 768, column: 8, scope: !432)
!1852 = !DILocation(line: 769, column: 5, scope: !432)
!1853 = !DILocation(line: 769, column: 10, scope: !1854)
!1854 = !DILexicalBlockFile(scope: !440, file: !420, discriminator: 1)
!1855 = !DILocation(line: 769, column: 20, scope: !440)
!1856 = !DILocation(line: 769, column: 50, scope: !440)
!1857 = !DILocation(line: 769, column: 37, scope: !440)
!1858 = !DILocation(line: 769, column: 65, scope: !1859)
!1859 = distinct !DILexicalBlock(scope: !440, file: !420, line: 769, column: 62)
!1860 = !DILocation(line: 769, column: 82, scope: !1859)
!1861 = !DILocation(line: 769, column: 62, scope: !1859)
!1862 = !DILocation(line: 769, column: 92, scope: !1859)
!1863 = !DILocation(line: 769, column: 62, scope: !440)
!1864 = !DILocation(line: 769, column: 62, scope: !1865)
!1865 = !DILexicalBlockFile(scope: !440, file: !420, discriminator: 2)
!1866 = !DILocation(line: 769, column: 123, scope: !1867)
!1867 = !DILexicalBlockFile(scope: !1859, file: !420, discriminator: 3)
!1868 = !DILocation(line: 769, column: 141, scope: !1859)
!1869 = !DILocation(line: 769, column: 151, scope: !1859)
!1870 = !DILocation(line: 769, column: 176, scope: !1859)
!1871 = !DILocation(line: 769, column: 107, scope: !1859)
!1872 = !DILocation(line: 769, column: 195, scope: !1873)
!1873 = !DILexicalBlockFile(scope: !432, file: !420, discriminator: 4)
!1874 = !DILocation(line: 769, column: 195, scope: !440)
!1875 = !DILocation(line: 769, column: 195, scope: !1876)
!1876 = !DILexicalBlockFile(scope: !440, file: !420, discriminator: 5)
!1877 = !DILocation(line: 771, column: 12, scope: !432)
!1878 = !DILocation(line: 771, column: 5, scope: !432)
!1879 = !DILocation(line: 772, column: 1, scope: !432)
!1880 = !DILocation(line: 778, column: 35, scope: !441)
!1881 = !DILocation(line: 780, column: 5, scope: !441)
!1882 = !DILocation(line: 780, column: 29, scope: !441)
!1883 = !DILocation(line: 782, column: 24, scope: !447)
!1884 = !DILocation(line: 782, column: 29, scope: !447)
!1885 = !DILocation(line: 782, column: 38, scope: !447)
!1886 = !DILocation(line: 782, column: 9, scope: !441)
!1887 = !DILocation(line: 783, column: 9, scope: !446)
!1888 = !DILocation(line: 783, column: 29, scope: !446)
!1889 = !DILocation(line: 783, column: 56, scope: !446)
!1890 = !DILocation(line: 783, column: 34, scope: !446)
!1891 = !DILocation(line: 784, column: 37, scope: !1892)
!1892 = distinct !DILexicalBlock(scope: !446, file: !420, line: 784, column: 13)
!1893 = !DILocation(line: 784, column: 42, scope: !1892)
!1894 = !{!1806, !1549, i64 40}
!1895 = !DILocation(line: 784, column: 47, scope: !1892)
!1896 = !DILocation(line: 784, column: 54, scope: !1892)
!1897 = !DILocation(line: 784, column: 80, scope: !1898)
!1898 = !DILexicalBlockFile(scope: !1892, file: !420, discriminator: 2)
!1899 = !DILocation(line: 784, column: 85, scope: !1892)
!1900 = !DILocation(line: 784, column: 91, scope: !1892)
!1901 = !DILocation(line: 784, column: 96, scope: !1892)
!1902 = !DILocation(line: 784, column: 13, scope: !446)
!1903 = !DILocation(line: 784, column: 123, scope: !1904)
!1904 = !DILexicalBlockFile(scope: !1905, file: !420, discriminator: 3)
!1905 = !DILexicalBlockFile(scope: !1906, file: !420, discriminator: 1)
!1906 = distinct !DILexicalBlock(scope: !1892, file: !420, line: 784, column: 105)
!1907 = !DILocation(line: 784, column: 107, scope: !1906)
!1908 = !DILocation(line: 784, column: 195, scope: !1906)
!1909 = !DILocation(line: 785, column: 30, scope: !446)
!1910 = !DILocation(line: 785, column: 34, scope: !446)
!1911 = !DILocation(line: 785, column: 41, scope: !446)
!1912 = !DILocation(line: 785, column: 45, scope: !446)
!1913 = !DILocation(line: 785, column: 16, scope: !446)
!1914 = !DILocation(line: 785, column: 9, scope: !446)
!1915 = !DILocation(line: 786, column: 5, scope: !447)
!1916 = !DILocation(line: 787, column: 17, scope: !450)
!1917 = !DILocation(line: 787, column: 21, scope: !450)
!1918 = !DILocation(line: 787, column: 30, scope: !450)
!1919 = !{!1653, !1535, i64 160}
!1920 = !DILocation(line: 787, column: 43, scope: !450)
!1921 = !DILocation(line: 787, column: 58, scope: !450)
!1922 = !DILocation(line: 787, column: 63, scope: !1923)
!1923 = !DILexicalBlockFile(scope: !450, file: !420, discriminator: 1)
!1924 = !DILocation(line: 787, column: 67, scope: !450)
!1925 = !DILocation(line: 787, column: 76, scope: !450)
!1926 = !DILocation(line: 787, column: 90, scope: !450)
!1927 = !{!1928, !1535, i64 0}
!1928 = !{!"", !1535, i64 0, !1535, i64 8}
!1929 = !DILocation(line: 787, column: 103, scope: !450)
!1930 = !DILocation(line: 787, column: 14, scope: !447)
!1931 = !DILocation(line: 788, column: 9, scope: !449)
!1932 = !DILocation(line: 788, column: 19, scope: !449)
!1933 = !DILocation(line: 789, column: 70, scope: !449)
!1934 = !DILocation(line: 789, column: 42, scope: !449)
!1935 = !DILocation(line: 789, column: 16, scope: !449)
!1936 = !DILocation(line: 789, column: 14, scope: !449)
!1937 = !DILocation(line: 790, column: 13, scope: !1938)
!1938 = distinct !DILexicalBlock(scope: !449, file: !420, line: 790, column: 13)
!1939 = !DILocation(line: 790, column: 18, scope: !1938)
!1940 = !DILocation(line: 790, column: 13, scope: !449)
!1941 = !DILocation(line: 791, column: 13, scope: !1938)
!1942 = !DILocation(line: 792, column: 29, scope: !449)
!1943 = !DILocation(line: 792, column: 15, scope: !449)
!1944 = !DILocation(line: 792, column: 13, scope: !449)
!1945 = !DILocation(line: 793, column: 9, scope: !449)
!1946 = !DILocation(line: 793, column: 14, scope: !1947)
!1947 = !DILexicalBlockFile(scope: !452, file: !420, discriminator: 1)
!1948 = !DILocation(line: 793, column: 24, scope: !452)
!1949 = !DILocation(line: 793, column: 54, scope: !452)
!1950 = !DILocation(line: 793, column: 41, scope: !452)
!1951 = !DILocation(line: 793, column: 69, scope: !1952)
!1952 = distinct !DILexicalBlock(scope: !452, file: !420, line: 793, column: 66)
!1953 = !DILocation(line: 793, column: 86, scope: !1952)
!1954 = !DILocation(line: 793, column: 66, scope: !1952)
!1955 = !DILocation(line: 793, column: 96, scope: !1952)
!1956 = !DILocation(line: 793, column: 66, scope: !452)
!1957 = !DILocation(line: 793, column: 66, scope: !1958)
!1958 = !DILexicalBlockFile(scope: !452, file: !420, discriminator: 2)
!1959 = !DILocation(line: 793, column: 127, scope: !1960)
!1960 = !DILexicalBlockFile(scope: !1952, file: !420, discriminator: 3)
!1961 = !DILocation(line: 793, column: 145, scope: !1952)
!1962 = !DILocation(line: 793, column: 155, scope: !1952)
!1963 = !DILocation(line: 793, column: 180, scope: !1952)
!1964 = !DILocation(line: 793, column: 111, scope: !1952)
!1965 = !DILocation(line: 793, column: 199, scope: !1966)
!1966 = !DILexicalBlockFile(scope: !449, file: !420, discriminator: 4)
!1967 = !DILocation(line: 793, column: 199, scope: !452)
!1968 = !DILocation(line: 793, column: 199, scope: !1969)
!1969 = !DILexicalBlockFile(scope: !452, file: !420, discriminator: 5)
!1970 = !DILocation(line: 794, column: 16, scope: !449)
!1971 = !DILocation(line: 794, column: 9, scope: !449)
!1972 = !DILocation(line: 795, column: 5, scope: !450)
!1973 = !DILocation(line: 797, column: 18, scope: !441)
!1974 = !DILocation(line: 799, column: 23, scope: !441)
!1975 = !DILocation(line: 799, column: 28, scope: !441)
!1976 = !DILocation(line: 799, column: 38, scope: !441)
!1977 = !{!1653, !1535, i64 24}
!1978 = !DILocation(line: 797, column: 5, scope: !441)
!1979 = !DILocation(line: 800, column: 5, scope: !441)
!1980 = !DILocation(line: 801, column: 1, scope: !441)
!1981 = !DILocation(line: 80, column: 39, scope: !547)
!1982 = !DILocation(line: 82, column: 5, scope: !547)
!1983 = !DILocation(line: 82, column: 29, scope: !547)
!1984 = !DILocation(line: 84, column: 12, scope: !547)
!1985 = !DILocation(line: 84, column: 10, scope: !547)
!1986 = !DILocation(line: 85, column: 9, scope: !1987)
!1987 = distinct !DILexicalBlock(scope: !547, file: !420, line: 85, column: 9)
!1988 = !DILocation(line: 85, column: 14, scope: !1987)
!1989 = !DILocation(line: 85, column: 9, scope: !547)
!1990 = !DILocation(line: 86, column: 9, scope: !1987)
!1991 = !DILocation(line: 88, column: 28, scope: !554)
!1992 = !DILocation(line: 88, column: 35, scope: !554)
!1993 = !DILocation(line: 88, column: 41, scope: !554)
!1994 = !DILocation(line: 88, column: 9, scope: !554)
!1995 = !DILocation(line: 88, column: 90, scope: !554)
!1996 = !DILocation(line: 88, column: 9, scope: !547)
!1997 = !DILocation(line: 89, column: 9, scope: !553)
!1998 = !DILocation(line: 89, column: 15, scope: !553)
!1999 = !DILocation(line: 89, column: 22, scope: !553)
!2000 = !DILocation(line: 89, column: 26, scope: !553)
!2001 = !DILocation(line: 90, column: 9, scope: !553)
!2002 = !DILocation(line: 90, column: 14, scope: !2003)
!2003 = !DILexicalBlockFile(scope: !552, file: !420, discriminator: 1)
!2004 = !DILocation(line: 90, column: 24, scope: !552)
!2005 = !DILocation(line: 90, column: 54, scope: !552)
!2006 = !DILocation(line: 90, column: 41, scope: !552)
!2007 = !DILocation(line: 90, column: 69, scope: !2008)
!2008 = distinct !DILexicalBlock(scope: !552, file: !420, line: 90, column: 66)
!2009 = !DILocation(line: 90, column: 86, scope: !2008)
!2010 = !DILocation(line: 90, column: 66, scope: !2008)
!2011 = !DILocation(line: 90, column: 96, scope: !2008)
!2012 = !DILocation(line: 90, column: 66, scope: !552)
!2013 = !DILocation(line: 90, column: 66, scope: !2014)
!2014 = !DILexicalBlockFile(scope: !552, file: !420, discriminator: 2)
!2015 = !DILocation(line: 90, column: 127, scope: !2016)
!2016 = !DILexicalBlockFile(scope: !2008, file: !420, discriminator: 3)
!2017 = !DILocation(line: 90, column: 145, scope: !2008)
!2018 = !DILocation(line: 90, column: 155, scope: !2008)
!2019 = !DILocation(line: 90, column: 180, scope: !2008)
!2020 = !DILocation(line: 90, column: 111, scope: !2008)
!2021 = !DILocation(line: 90, column: 199, scope: !2022)
!2022 = !DILexicalBlockFile(scope: !553, file: !420, discriminator: 4)
!2023 = !DILocation(line: 90, column: 199, scope: !552)
!2024 = !DILocation(line: 90, column: 199, scope: !2025)
!2025 = !DILexicalBlockFile(scope: !552, file: !420, discriminator: 5)
!2026 = !DILocation(line: 91, column: 9, scope: !553)
!2027 = !DILocation(line: 94, column: 24, scope: !547)
!2028 = !DILocation(line: 94, column: 12, scope: !547)
!2029 = !DILocation(line: 94, column: 5, scope: !547)
!2030 = !DILocation(line: 95, column: 1, scope: !547)
!2031 = !DILocation(line: 910, column: 38, scope: !453)
!2032 = !DILocation(line: 910, column: 47, scope: !453)
!2033 = !{!1536, !1536, i64 0}
!2034 = !DILocation(line: 910, column: 64, scope: !453)
!2035 = !DILocation(line: 912, column: 5, scope: !453)
!2036 = !DILocation(line: 912, column: 25, scope: !453)
!2037 = !DILocation(line: 913, column: 5, scope: !453)
!2038 = !DILocation(line: 913, column: 15, scope: !453)
!2039 = !DILocation(line: 914, column: 5, scope: !453)
!2040 = !DILocation(line: 914, column: 16, scope: !453)
!2041 = !DILocation(line: 919, column: 56, scope: !453)
!2042 = !DILocation(line: 919, column: 32, scope: !453)
!2043 = !DILocation(line: 919, column: 10, scope: !453)
!2044 = !DILocation(line: 919, column: 8, scope: !453)
!2045 = !DILocation(line: 920, column: 9, scope: !2046)
!2046 = distinct !DILexicalBlock(scope: !453, file: !420, line: 920, column: 9)
!2047 = !DILocation(line: 920, column: 12, scope: !2046)
!2048 = !DILocation(line: 920, column: 9, scope: !453)
!2049 = !DILocation(line: 921, column: 9, scope: !2046)
!2050 = !DILocation(line: 923, column: 13, scope: !453)
!2051 = !DILocation(line: 923, column: 17, scope: !453)
!2052 = !DILocation(line: 923, column: 10, scope: !453)
!2053 = !DILocation(line: 924, column: 9, scope: !466)
!2054 = !DILocation(line: 924, column: 20, scope: !466)
!2055 = !DILocation(line: 924, column: 29, scope: !466)
!2056 = !DILocation(line: 924, column: 32, scope: !2057)
!2057 = !DILexicalBlockFile(scope: !466, file: !420, discriminator: 1)
!2058 = !DILocation(line: 924, column: 38, scope: !466)
!2059 = !{!1550, !1549, i64 32}
!2060 = !DILocation(line: 924, column: 32, scope: !466)
!2061 = !DILocation(line: 924, column: 9, scope: !453)
!2062 = !DILocation(line: 925, column: 25, scope: !465)
!2063 = !DILocation(line: 925, column: 9, scope: !465)
!2064 = !DILocation(line: 927, column: 9, scope: !465)
!2065 = !DILocation(line: 927, column: 14, scope: !2066)
!2066 = !DILexicalBlockFile(scope: !464, file: !420, discriminator: 1)
!2067 = !DILocation(line: 927, column: 24, scope: !464)
!2068 = !DILocation(line: 927, column: 54, scope: !464)
!2069 = !DILocation(line: 927, column: 41, scope: !464)
!2070 = !DILocation(line: 927, column: 67, scope: !2071)
!2071 = distinct !DILexicalBlock(scope: !464, file: !420, line: 927, column: 64)
!2072 = !DILocation(line: 927, column: 84, scope: !2071)
!2073 = !DILocation(line: 927, column: 64, scope: !2071)
!2074 = !DILocation(line: 927, column: 94, scope: !2071)
!2075 = !DILocation(line: 927, column: 64, scope: !464)
!2076 = !DILocation(line: 927, column: 64, scope: !2077)
!2077 = !DILexicalBlockFile(scope: !464, file: !420, discriminator: 2)
!2078 = !DILocation(line: 927, column: 125, scope: !2079)
!2079 = !DILexicalBlockFile(scope: !2071, file: !420, discriminator: 3)
!2080 = !DILocation(line: 927, column: 143, scope: !2071)
!2081 = !DILocation(line: 927, column: 153, scope: !2071)
!2082 = !DILocation(line: 927, column: 178, scope: !2071)
!2083 = !DILocation(line: 927, column: 109, scope: !2071)
!2084 = !DILocation(line: 927, column: 197, scope: !2085)
!2085 = !DILexicalBlockFile(scope: !465, file: !420, discriminator: 4)
!2086 = !DILocation(line: 927, column: 197, scope: !464)
!2087 = !DILocation(line: 927, column: 197, scope: !2088)
!2088 = !DILexicalBlockFile(scope: !464, file: !420, discriminator: 5)
!2089 = !DILocation(line: 928, column: 9, scope: !465)
!2090 = !DILocation(line: 931, column: 31, scope: !2091)
!2091 = distinct !DILexicalBlock(scope: !453, file: !420, line: 931, column: 9)
!2092 = !DILocation(line: 931, column: 37, scope: !2091)
!2093 = !DILocation(line: 931, column: 9, scope: !2091)
!2094 = !DILocation(line: 931, column: 9, scope: !453)
!2095 = !DILocation(line: 932, column: 28, scope: !2091)
!2096 = !DILocation(line: 932, column: 16, scope: !2091)
!2097 = !DILocation(line: 932, column: 9, scope: !2091)
!2098 = !DILocation(line: 934, column: 9, scope: !470)
!2099 = !DILocation(line: 934, column: 20, scope: !470)
!2100 = !DILocation(line: 934, column: 9, scope: !453)
!2101 = !DILocation(line: 935, column: 25, scope: !469)
!2102 = !DILocation(line: 935, column: 9, scope: !469)
!2103 = !DILocation(line: 938, column: 9, scope: !469)
!2104 = !DILocation(line: 938, column: 14, scope: !2105)
!2105 = !DILexicalBlockFile(scope: !468, file: !420, discriminator: 1)
!2106 = !DILocation(line: 938, column: 24, scope: !468)
!2107 = !DILocation(line: 938, column: 54, scope: !468)
!2108 = !DILocation(line: 938, column: 41, scope: !468)
!2109 = !DILocation(line: 938, column: 67, scope: !2110)
!2110 = distinct !DILexicalBlock(scope: !468, file: !420, line: 938, column: 64)
!2111 = !DILocation(line: 938, column: 84, scope: !2110)
!2112 = !DILocation(line: 938, column: 64, scope: !2110)
!2113 = !DILocation(line: 938, column: 94, scope: !2110)
!2114 = !DILocation(line: 938, column: 64, scope: !468)
!2115 = !DILocation(line: 938, column: 64, scope: !2116)
!2116 = !DILexicalBlockFile(scope: !468, file: !420, discriminator: 2)
!2117 = !DILocation(line: 938, column: 125, scope: !2118)
!2118 = !DILexicalBlockFile(scope: !2110, file: !420, discriminator: 3)
!2119 = !DILocation(line: 938, column: 143, scope: !2110)
!2120 = !DILocation(line: 938, column: 153, scope: !2110)
!2121 = !DILocation(line: 938, column: 178, scope: !2110)
!2122 = !DILocation(line: 938, column: 109, scope: !2110)
!2123 = !DILocation(line: 938, column: 197, scope: !2124)
!2124 = !DILexicalBlockFile(scope: !469, file: !420, discriminator: 4)
!2125 = !DILocation(line: 938, column: 197, scope: !468)
!2126 = !DILocation(line: 938, column: 197, scope: !2127)
!2127 = !DILexicalBlockFile(scope: !468, file: !420, discriminator: 5)
!2128 = !DILocation(line: 939, column: 9, scope: !469)
!2129 = !DILocation(line: 942, column: 39, scope: !453)
!2130 = !DILocation(line: 942, column: 45, scope: !453)
!2131 = !DILocation(line: 942, column: 11, scope: !453)
!2132 = !DILocation(line: 942, column: 9, scope: !453)
!2133 = !DILocation(line: 943, column: 5, scope: !453)
!2134 = !DILocation(line: 943, column: 10, scope: !2135)
!2135 = !DILexicalBlockFile(scope: !472, file: !420, discriminator: 1)
!2136 = !DILocation(line: 943, column: 20, scope: !472)
!2137 = !DILocation(line: 943, column: 50, scope: !472)
!2138 = !DILocation(line: 943, column: 37, scope: !472)
!2139 = !DILocation(line: 943, column: 63, scope: !2140)
!2140 = distinct !DILexicalBlock(scope: !472, file: !420, line: 943, column: 60)
!2141 = !DILocation(line: 943, column: 80, scope: !2140)
!2142 = !DILocation(line: 943, column: 60, scope: !2140)
!2143 = !DILocation(line: 943, column: 90, scope: !2140)
!2144 = !DILocation(line: 943, column: 60, scope: !472)
!2145 = !DILocation(line: 943, column: 60, scope: !2146)
!2146 = !DILexicalBlockFile(scope: !472, file: !420, discriminator: 2)
!2147 = !DILocation(line: 943, column: 121, scope: !2148)
!2148 = !DILexicalBlockFile(scope: !2140, file: !420, discriminator: 3)
!2149 = !DILocation(line: 943, column: 139, scope: !2140)
!2150 = !DILocation(line: 943, column: 149, scope: !2140)
!2151 = !DILocation(line: 943, column: 174, scope: !2140)
!2152 = !DILocation(line: 943, column: 105, scope: !2140)
!2153 = !DILocation(line: 943, column: 193, scope: !2154)
!2154 = !DILexicalBlockFile(scope: !453, file: !420, discriminator: 4)
!2155 = !DILocation(line: 943, column: 193, scope: !472)
!2156 = !DILocation(line: 943, column: 193, scope: !2157)
!2157 = !DILexicalBlockFile(scope: !472, file: !420, discriminator: 5)
!2158 = !DILocation(line: 944, column: 12, scope: !453)
!2159 = !DILocation(line: 944, column: 5, scope: !453)
!2160 = !DILocation(line: 945, column: 1, scope: !453)
!2161 = !DILocation(line: 833, column: 40, scope: !555)
!2162 = !DILocation(line: 833, column: 50, scope: !555)
!2163 = !DILocation(line: 835, column: 5, scope: !555)
!2164 = !DILocation(line: 835, column: 29, scope: !555)
!2165 = !DILocation(line: 836, column: 5, scope: !555)
!2166 = !DILocation(line: 836, column: 25, scope: !555)
!2167 = !DILocation(line: 837, column: 5, scope: !555)
!2168 = !DILocation(line: 837, column: 15, scope: !555)
!2169 = !DILocation(line: 838, column: 5, scope: !555)
!2170 = !DILocation(line: 838, column: 16, scope: !555)
!2171 = !DILocation(line: 839, column: 5, scope: !555)
!2172 = !DILocation(line: 839, column: 9, scope: !555)
!2173 = !DILocation(line: 844, column: 51, scope: !555)
!2174 = !DILocation(line: 844, column: 56, scope: !555)
!2175 = !{!1550, !1548, i64 16}
!2176 = !DILocation(line: 844, column: 13, scope: !555)
!2177 = !DILocation(line: 844, column: 11, scope: !555)
!2178 = !DILocation(line: 845, column: 9, scope: !2179)
!2179 = distinct !DILexicalBlock(scope: !555, file: !420, line: 845, column: 9)
!2180 = !DILocation(line: 845, column: 15, scope: !2179)
!2181 = !DILocation(line: 845, column: 9, scope: !555)
!2182 = !DILocation(line: 846, column: 9, scope: !2179)
!2183 = !DILocation(line: 848, column: 66, scope: !555)
!2184 = !DILocation(line: 848, column: 38, scope: !555)
!2185 = !DILocation(line: 848, column: 12, scope: !555)
!2186 = !DILocation(line: 848, column: 10, scope: !555)
!2187 = !DILocation(line: 849, column: 5, scope: !555)
!2188 = !DILocation(line: 849, column: 10, scope: !2189)
!2189 = !DILexicalBlockFile(scope: !567, file: !420, discriminator: 1)
!2190 = !DILocation(line: 849, column: 20, scope: !567)
!2191 = !DILocation(line: 849, column: 50, scope: !567)
!2192 = !DILocation(line: 849, column: 66, scope: !2193)
!2193 = distinct !DILexicalBlock(scope: !567, file: !420, line: 849, column: 63)
!2194 = !DILocation(line: 849, column: 83, scope: !2193)
!2195 = !DILocation(line: 849, column: 63, scope: !2193)
!2196 = !DILocation(line: 849, column: 93, scope: !2193)
!2197 = !DILocation(line: 849, column: 63, scope: !567)
!2198 = !DILocation(line: 849, column: 63, scope: !2199)
!2199 = !DILexicalBlockFile(scope: !567, file: !420, discriminator: 2)
!2200 = !DILocation(line: 849, column: 124, scope: !2201)
!2201 = !DILexicalBlockFile(scope: !2193, file: !420, discriminator: 3)
!2202 = !DILocation(line: 849, column: 142, scope: !2193)
!2203 = !DILocation(line: 849, column: 152, scope: !2193)
!2204 = !DILocation(line: 849, column: 177, scope: !2193)
!2205 = !DILocation(line: 849, column: 108, scope: !2193)
!2206 = !DILocation(line: 849, column: 196, scope: !2207)
!2207 = !DILexicalBlockFile(scope: !555, file: !420, discriminator: 4)
!2208 = !DILocation(line: 849, column: 196, scope: !567)
!2209 = !DILocation(line: 849, column: 196, scope: !2210)
!2210 = !DILexicalBlockFile(scope: !567, file: !420, discriminator: 5)
!2211 = !DILocation(line: 850, column: 9, scope: !2212)
!2212 = distinct !DILexicalBlock(scope: !555, file: !420, line: 850, column: 9)
!2213 = !DILocation(line: 850, column: 14, scope: !2212)
!2214 = !DILocation(line: 850, column: 9, scope: !555)
!2215 = !DILocation(line: 851, column: 9, scope: !2212)
!2216 = !DILocation(line: 853, column: 26, scope: !571)
!2217 = !DILocation(line: 853, column: 32, scope: !571)
!2218 = !DILocation(line: 853, column: 37, scope: !571)
!2219 = !{!1550, !1535, i64 40}
!2220 = !DILocation(line: 853, column: 9, scope: !571)
!2221 = !DILocation(line: 853, column: 45, scope: !571)
!2222 = !DILocation(line: 853, column: 9, scope: !555)
!2223 = !DILocation(line: 854, column: 9, scope: !570)
!2224 = !DILocation(line: 854, column: 14, scope: !2225)
!2225 = !DILexicalBlockFile(scope: !569, file: !420, discriminator: 1)
!2226 = !DILocation(line: 854, column: 24, scope: !569)
!2227 = !DILocation(line: 854, column: 54, scope: !569)
!2228 = !DILocation(line: 854, column: 41, scope: !569)
!2229 = !DILocation(line: 854, column: 69, scope: !2230)
!2230 = distinct !DILexicalBlock(scope: !569, file: !420, line: 854, column: 66)
!2231 = !DILocation(line: 854, column: 86, scope: !2230)
!2232 = !DILocation(line: 854, column: 66, scope: !2230)
!2233 = !DILocation(line: 854, column: 96, scope: !2230)
!2234 = !DILocation(line: 854, column: 66, scope: !569)
!2235 = !DILocation(line: 854, column: 66, scope: !2236)
!2236 = !DILexicalBlockFile(scope: !569, file: !420, discriminator: 2)
!2237 = !DILocation(line: 854, column: 127, scope: !2238)
!2238 = !DILexicalBlockFile(scope: !2230, file: !420, discriminator: 3)
!2239 = !DILocation(line: 854, column: 145, scope: !2230)
!2240 = !DILocation(line: 854, column: 155, scope: !2230)
!2241 = !DILocation(line: 854, column: 180, scope: !2230)
!2242 = !DILocation(line: 854, column: 111, scope: !2230)
!2243 = !DILocation(line: 854, column: 199, scope: !2244)
!2244 = !DILexicalBlockFile(scope: !570, file: !420, discriminator: 4)
!2245 = !DILocation(line: 854, column: 199, scope: !569)
!2246 = !DILocation(line: 854, column: 199, scope: !2247)
!2247 = !DILexicalBlockFile(scope: !569, file: !420, discriminator: 5)
!2248 = !DILocation(line: 855, column: 9, scope: !570)
!2249 = !DILocation(line: 858, column: 57, scope: !555)
!2250 = !DILocation(line: 858, column: 75, scope: !555)
!2251 = !DILocation(line: 858, column: 80, scope: !555)
!2252 = !DILocation(line: 858, column: 32, scope: !555)
!2253 = !DILocation(line: 858, column: 10, scope: !555)
!2254 = !DILocation(line: 858, column: 8, scope: !555)
!2255 = !DILocation(line: 859, column: 5, scope: !555)
!2256 = !DILocation(line: 859, column: 10, scope: !2257)
!2257 = !DILexicalBlockFile(scope: !573, file: !420, discriminator: 1)
!2258 = !DILocation(line: 859, column: 20, scope: !573)
!2259 = !DILocation(line: 859, column: 50, scope: !573)
!2260 = !DILocation(line: 859, column: 37, scope: !573)
!2261 = !DILocation(line: 859, column: 65, scope: !2262)
!2262 = distinct !DILexicalBlock(scope: !573, file: !420, line: 859, column: 62)
!2263 = !DILocation(line: 859, column: 82, scope: !2262)
!2264 = !DILocation(line: 859, column: 62, scope: !2262)
!2265 = !DILocation(line: 859, column: 92, scope: !2262)
!2266 = !DILocation(line: 859, column: 62, scope: !573)
!2267 = !DILocation(line: 859, column: 62, scope: !2268)
!2268 = !DILexicalBlockFile(scope: !573, file: !420, discriminator: 2)
!2269 = !DILocation(line: 859, column: 123, scope: !2270)
!2270 = !DILexicalBlockFile(scope: !2262, file: !420, discriminator: 3)
!2271 = !DILocation(line: 859, column: 141, scope: !2262)
!2272 = !DILocation(line: 859, column: 151, scope: !2262)
!2273 = !DILocation(line: 859, column: 176, scope: !2262)
!2274 = !DILocation(line: 859, column: 107, scope: !2262)
!2275 = !DILocation(line: 859, column: 195, scope: !2207)
!2276 = !DILocation(line: 859, column: 195, scope: !573)
!2277 = !DILocation(line: 859, column: 195, scope: !2278)
!2278 = !DILexicalBlockFile(scope: !573, file: !420, discriminator: 5)
!2279 = !DILocation(line: 860, column: 9, scope: !2280)
!2280 = distinct !DILexicalBlock(scope: !555, file: !420, line: 860, column: 9)
!2281 = !DILocation(line: 860, column: 12, scope: !2280)
!2282 = !DILocation(line: 860, column: 9, scope: !555)
!2283 = !DILocation(line: 861, column: 9, scope: !2280)
!2284 = !DILocation(line: 863, column: 13, scope: !555)
!2285 = !DILocation(line: 863, column: 17, scope: !555)
!2286 = !DILocation(line: 863, column: 10, scope: !555)
!2287 = !DILocation(line: 866, column: 22, scope: !555)
!2288 = !DILocation(line: 866, column: 27, scope: !555)
!2289 = !{!1550, !1548, i64 24}
!2290 = !DILocation(line: 866, column: 5, scope: !555)
!2291 = !DILocation(line: 866, column: 11, scope: !555)
!2292 = !DILocation(line: 866, column: 20, scope: !555)
!2293 = !DILocation(line: 869, column: 12, scope: !2294)
!2294 = distinct !DILexicalBlock(scope: !555, file: !420, line: 869, column: 5)
!2295 = !DILocation(line: 869, column: 10, scope: !2294)
!2296 = !DILocation(line: 869, column: 17, scope: !2297)
!2297 = !DILexicalBlockFile(scope: !2298, file: !420, discriminator: 2)
!2298 = !DILexicalBlockFile(scope: !2299, file: !420, discriminator: 1)
!2299 = distinct !DILexicalBlock(scope: !2294, file: !420, line: 869, column: 5)
!2300 = !DILocation(line: 869, column: 21, scope: !2299)
!2301 = !DILocation(line: 869, column: 26, scope: !2299)
!2302 = !DILocation(line: 869, column: 19, scope: !2299)
!2303 = !DILocation(line: 869, column: 5, scope: !2294)
!2304 = !DILocation(line: 870, column: 37, scope: !2305)
!2305 = distinct !DILexicalBlock(scope: !2299, file: !420, line: 869, column: 37)
!2306 = !DILocation(line: 870, column: 26, scope: !2305)
!2307 = !DILocation(line: 870, column: 31, scope: !2305)
!2308 = !{!1550, !1535, i64 48}
!2309 = !DILocation(line: 870, column: 21, scope: !2305)
!2310 = !DILocation(line: 870, column: 9, scope: !2305)
!2311 = !DILocation(line: 870, column: 15, scope: !2305)
!2312 = !DILocation(line: 870, column: 24, scope: !2305)
!2313 = !DILocation(line: 871, column: 5, scope: !2305)
!2314 = !DILocation(line: 869, column: 33, scope: !2299)
!2315 = !DILocation(line: 869, column: 5, scope: !2299)
!2316 = !DILocation(line: 872, column: 9, scope: !2317)
!2317 = distinct !DILexicalBlock(scope: !555, file: !420, line: 872, column: 9)
!2318 = !DILocation(line: 872, column: 15, scope: !2317)
!2319 = !DILocation(line: 872, column: 22, scope: !2317)
!2320 = !DILocation(line: 872, column: 25, scope: !2321)
!2321 = !DILexicalBlockFile(scope: !2317, file: !420, discriminator: 1)
!2322 = !DILocation(line: 872, column: 31, scope: !2317)
!2323 = !DILocation(line: 872, column: 9, scope: !555)
!2324 = !DILocation(line: 873, column: 33, scope: !2325)
!2325 = distinct !DILexicalBlock(scope: !2317, file: !420, line: 872, column: 39)
!2326 = !DILocation(line: 873, column: 9, scope: !2325)
!2327 = !DILocation(line: 874, column: 5, scope: !2325)
!2328 = !DILocation(line: 876, column: 41, scope: !2329)
!2329 = distinct !DILexicalBlock(scope: !2317, file: !420, line: 875, column: 10)
!2330 = !DILocation(line: 876, column: 9, scope: !2329)
!2331 = !DILocation(line: 879, column: 5, scope: !555)
!2332 = !DILocation(line: 879, column: 11, scope: !555)
!2333 = !DILocation(line: 879, column: 22, scope: !555)
!2334 = !{!1550, !1535, i64 64}
!2335 = !DILocation(line: 882, column: 16, scope: !555)
!2336 = !DILocation(line: 882, column: 5, scope: !555)
!2337 = !DILocation(line: 884, column: 21, scope: !577)
!2338 = !DILocation(line: 884, column: 27, scope: !577)
!2339 = !DILocation(line: 884, column: 9, scope: !577)
!2340 = !DILocation(line: 884, column: 32, scope: !577)
!2341 = !DILocation(line: 884, column: 9, scope: !555)
!2342 = !DILocation(line: 885, column: 9, scope: !576)
!2343 = !DILocation(line: 885, column: 14, scope: !2344)
!2344 = !DILexicalBlockFile(scope: !575, file: !420, discriminator: 1)
!2345 = !DILocation(line: 885, column: 24, scope: !575)
!2346 = !DILocation(line: 885, column: 54, scope: !575)
!2347 = !DILocation(line: 885, column: 41, scope: !575)
!2348 = !DILocation(line: 885, column: 67, scope: !2349)
!2349 = distinct !DILexicalBlock(scope: !575, file: !420, line: 885, column: 64)
!2350 = !DILocation(line: 885, column: 84, scope: !2349)
!2351 = !DILocation(line: 885, column: 64, scope: !2349)
!2352 = !DILocation(line: 885, column: 94, scope: !2349)
!2353 = !DILocation(line: 885, column: 64, scope: !575)
!2354 = !DILocation(line: 885, column: 64, scope: !2355)
!2355 = !DILexicalBlockFile(scope: !575, file: !420, discriminator: 2)
!2356 = !DILocation(line: 885, column: 125, scope: !2357)
!2357 = !DILexicalBlockFile(scope: !2349, file: !420, discriminator: 3)
!2358 = !DILocation(line: 885, column: 143, scope: !2349)
!2359 = !DILocation(line: 885, column: 153, scope: !2349)
!2360 = !DILocation(line: 885, column: 178, scope: !2349)
!2361 = !DILocation(line: 885, column: 109, scope: !2349)
!2362 = !DILocation(line: 885, column: 197, scope: !2363)
!2363 = !DILexicalBlockFile(scope: !576, file: !420, discriminator: 4)
!2364 = !DILocation(line: 885, column: 197, scope: !575)
!2365 = !DILocation(line: 885, column: 197, scope: !2366)
!2366 = !DILexicalBlockFile(scope: !575, file: !420, discriminator: 5)
!2367 = !DILocation(line: 886, column: 9, scope: !576)
!2368 = !DILocation(line: 889, column: 24, scope: !555)
!2369 = !DILocation(line: 889, column: 12, scope: !555)
!2370 = !DILocation(line: 889, column: 5, scope: !555)
!2371 = !DILocation(line: 890, column: 1, scope: !555)
!2372 = !DILocation(line: 973, column: 29, scope: !473)
!2373 = !DILocation(line: 973, column: 45, scope: !473)
!2374 = !DILocation(line: 973, column: 61, scope: !473)
!2375 = !DILocation(line: 973, column: 71, scope: !473)
!2376 = !DILocation(line: 975, column: 5, scope: !473)
!2377 = !DILocation(line: 975, column: 21, scope: !473)
!2378 = !DILocation(line: 976, column: 5, scope: !473)
!2379 = !DILocation(line: 976, column: 9, scope: !473)
!2380 = !DILocation(line: 980, column: 9, scope: !2381)
!2381 = distinct !DILexicalBlock(scope: !473, file: !420, line: 980, column: 9)
!2382 = !DILocation(line: 980, column: 16, scope: !2381)
!2383 = !DILocation(line: 980, column: 21, scope: !2381)
!2384 = !DILocation(line: 980, column: 13, scope: !2381)
!2385 = !DILocation(line: 980, column: 9, scope: !473)
!2386 = !DILocation(line: 981, column: 25, scope: !2387)
!2387 = distinct !DILexicalBlock(scope: !2381, file: !420, line: 980, column: 26)
!2388 = !DILocation(line: 981, column: 9, scope: !2387)
!2389 = !DILocation(line: 983, column: 9, scope: !2387)
!2390 = !DILocation(line: 986, column: 31, scope: !2391)
!2391 = distinct !DILexicalBlock(scope: !473, file: !420, line: 986, column: 9)
!2392 = !DILocation(line: 986, column: 36, scope: !2391)
!2393 = !DILocation(line: 986, column: 9, scope: !2391)
!2394 = !DILocation(line: 986, column: 9, scope: !473)
!2395 = !DILocation(line: 987, column: 24, scope: !2396)
!2396 = distinct !DILexicalBlock(scope: !2391, file: !420, line: 986, column: 44)
!2397 = !DILocation(line: 987, column: 29, scope: !2396)
!2398 = !DILocation(line: 987, column: 34, scope: !2396)
!2399 = !DILocation(line: 987, column: 39, scope: !2396)
!2400 = !DILocation(line: 987, column: 9, scope: !2396)
!2401 = !DILocation(line: 988, column: 9, scope: !2396)
!2402 = !DILocation(line: 992, column: 40, scope: !473)
!2403 = !DILocation(line: 992, column: 45, scope: !473)
!2404 = !DILocation(line: 992, column: 38, scope: !473)
!2405 = !DILocation(line: 992, column: 36, scope: !473)
!2406 = !DILocation(line: 992, column: 50, scope: !473)
!2407 = !DILocation(line: 992, column: 34, scope: !473)
!2408 = !DILocation(line: 992, column: 10, scope: !473)
!2409 = !DILocation(line: 992, column: 8, scope: !473)
!2410 = !DILocation(line: 993, column: 9, scope: !2411)
!2411 = distinct !DILexicalBlock(scope: !473, file: !420, line: 993, column: 9)
!2412 = !DILocation(line: 993, column: 12, scope: !2411)
!2413 = !DILocation(line: 993, column: 9, scope: !473)
!2414 = !DILocation(line: 994, column: 9, scope: !2415)
!2415 = distinct !DILexicalBlock(scope: !2411, file: !420, line: 993, column: 27)
!2416 = !DILocation(line: 995, column: 9, scope: !2415)
!2417 = !DILocation(line: 997, column: 21, scope: !473)
!2418 = !DILocation(line: 997, column: 26, scope: !473)
!2419 = !DILocation(line: 997, column: 5, scope: !473)
!2420 = !DILocation(line: 997, column: 9, scope: !473)
!2421 = !DILocation(line: 997, column: 14, scope: !473)
!2422 = !DILocation(line: 997, column: 19, scope: !473)
!2423 = !{!2424, !1549, i64 36}
!2424 = !{!"", !1550, i64 0, !1536, i64 80}
!2425 = !DILocation(line: 998, column: 22, scope: !473)
!2426 = !DILocation(line: 998, column: 26, scope: !473)
!2427 = !DILocation(line: 998, column: 5, scope: !473)
!2428 = !DILocation(line: 998, column: 9, scope: !473)
!2429 = !DILocation(line: 998, column: 14, scope: !473)
!2430 = !DILocation(line: 998, column: 20, scope: !473)
!2431 = !{!2424, !1535, i64 48}
!2432 = !DILocation(line: 999, column: 24, scope: !473)
!2433 = !DILocation(line: 999, column: 28, scope: !473)
!2434 = !DILocation(line: 999, column: 36, scope: !473)
!2435 = !DILocation(line: 999, column: 41, scope: !473)
!2436 = !DILocation(line: 999, column: 34, scope: !473)
!2437 = !DILocation(line: 999, column: 5, scope: !473)
!2438 = !DILocation(line: 999, column: 9, scope: !473)
!2439 = !DILocation(line: 999, column: 14, scope: !473)
!2440 = !DILocation(line: 999, column: 22, scope: !473)
!2441 = !{!2424, !1535, i64 56}
!2442 = !DILocation(line: 1000, column: 27, scope: !473)
!2443 = !DILocation(line: 1000, column: 31, scope: !473)
!2444 = !DILocation(line: 1000, column: 43, scope: !473)
!2445 = !DILocation(line: 1000, column: 48, scope: !473)
!2446 = !DILocation(line: 1000, column: 41, scope: !473)
!2447 = !DILocation(line: 1000, column: 37, scope: !473)
!2448 = !DILocation(line: 1000, column: 5, scope: !473)
!2449 = !DILocation(line: 1000, column: 9, scope: !473)
!2450 = !DILocation(line: 1000, column: 14, scope: !473)
!2451 = !DILocation(line: 1000, column: 25, scope: !473)
!2452 = !{!2424, !1535, i64 64}
!2453 = !DILocation(line: 1002, column: 25, scope: !473)
!2454 = !DILocation(line: 1002, column: 29, scope: !473)
!2455 = !DILocation(line: 1002, column: 35, scope: !473)
!2456 = !DILocation(line: 1002, column: 5, scope: !473)
!2457 = !DILocation(line: 1003, column: 25, scope: !473)
!2458 = !DILocation(line: 1003, column: 29, scope: !473)
!2459 = !DILocation(line: 1003, column: 35, scope: !473)
!2460 = !DILocation(line: 1003, column: 5, scope: !473)
!2461 = !DILocation(line: 1004, column: 22, scope: !473)
!2462 = !DILocation(line: 1004, column: 26, scope: !473)
!2463 = !DILocation(line: 1004, column: 32, scope: !473)
!2464 = !DILocation(line: 1004, column: 5, scope: !473)
!2465 = !DILocation(line: 1006, column: 12, scope: !473)
!2466 = !DILocation(line: 1006, column: 16, scope: !473)
!2467 = !DILocation(line: 1006, column: 9, scope: !473)
!2468 = !DILocation(line: 1008, column: 32, scope: !473)
!2469 = !DILocation(line: 1008, column: 37, scope: !473)
!2470 = !DILocation(line: 1008, column: 42, scope: !473)
!2471 = !DILocation(line: 1008, column: 11, scope: !473)
!2472 = !DILocation(line: 1008, column: 9, scope: !473)
!2473 = !DILocation(line: 1009, column: 16, scope: !473)
!2474 = !DILocation(line: 1009, column: 5, scope: !473)
!2475 = !DILocation(line: 1010, column: 12, scope: !473)
!2476 = !DILocation(line: 1010, column: 5, scope: !473)
!2477 = !DILocation(line: 1011, column: 1, scope: !473)
!2478 = !DILocation(line: 519, column: 31, scope: !687)
!2479 = !DILocation(line: 519, column: 54, scope: !687)
!2480 = !DILocation(line: 521, column: 17, scope: !687)
!2481 = !DILocation(line: 521, column: 22, scope: !687)
!2482 = !{!1550, !1535, i64 8}
!2483 = !DILocation(line: 521, column: 5, scope: !687)
!2484 = !DILocation(line: 521, column: 11, scope: !687)
!2485 = !DILocation(line: 521, column: 15, scope: !687)
!2486 = !DILocation(line: 522, column: 17, scope: !687)
!2487 = !DILocation(line: 522, column: 22, scope: !687)
!2488 = !DILocation(line: 522, column: 5, scope: !687)
!2489 = !DILocation(line: 522, column: 11, scope: !687)
!2490 = !DILocation(line: 522, column: 15, scope: !687)
!2491 = !DILocation(line: 523, column: 17, scope: !687)
!2492 = !DILocation(line: 523, column: 22, scope: !687)
!2493 = !DILocation(line: 523, column: 5, scope: !687)
!2494 = !DILocation(line: 523, column: 11, scope: !687)
!2495 = !DILocation(line: 523, column: 15, scope: !687)
!2496 = !DILocation(line: 524, column: 22, scope: !687)
!2497 = !DILocation(line: 524, column: 27, scope: !687)
!2498 = !DILocation(line: 524, column: 5, scope: !687)
!2499 = !DILocation(line: 524, column: 11, scope: !687)
!2500 = !DILocation(line: 524, column: 20, scope: !687)
!2501 = !DILocation(line: 525, column: 22, scope: !687)
!2502 = !DILocation(line: 525, column: 27, scope: !687)
!2503 = !DILocation(line: 525, column: 5, scope: !687)
!2504 = !DILocation(line: 525, column: 11, scope: !687)
!2505 = !DILocation(line: 525, column: 20, scope: !687)
!2506 = !DILocation(line: 526, column: 20, scope: !687)
!2507 = !DILocation(line: 526, column: 25, scope: !687)
!2508 = !DILocation(line: 526, column: 34, scope: !2509)
!2509 = !DILexicalBlockFile(scope: !687, file: !420, discriminator: 1)
!2510 = !DILocation(line: 526, column: 39, scope: !687)
!2511 = !DILocation(line: 526, column: 20, scope: !2512)
!2512 = !DILexicalBlockFile(scope: !687, file: !420, discriminator: 2)
!2513 = !DILocation(line: 526, column: 5, scope: !2514)
!2514 = !DILexicalBlockFile(scope: !2515, file: !420, discriminator: 4)
!2515 = !DILexicalBlockFile(scope: !687, file: !420, discriminator: 3)
!2516 = !DILocation(line: 526, column: 11, scope: !687)
!2517 = !DILocation(line: 526, column: 18, scope: !687)
!2518 = !DILocation(line: 527, column: 22, scope: !687)
!2519 = !DILocation(line: 527, column: 27, scope: !687)
!2520 = !{!1550, !1535, i64 72}
!2521 = !DILocation(line: 527, column: 5, scope: !687)
!2522 = !DILocation(line: 527, column: 11, scope: !687)
!2523 = !DILocation(line: 527, column: 20, scope: !687)
!2524 = !DILocation(line: 528, column: 1, scope: !687)
!2525 = !DILocation(line: 532, column: 31, scope: !693)
!2526 = !DILocation(line: 532, column: 54, scope: !693)
!2527 = !DILocation(line: 534, column: 5, scope: !693)
!2528 = !DILocation(line: 534, column: 16, scope: !693)
!2529 = !DILocation(line: 536, column: 9, scope: !2530)
!2530 = distinct !DILexicalBlock(scope: !693, file: !420, line: 536, column: 9)
!2531 = !DILocation(line: 536, column: 14, scope: !2530)
!2532 = !DILocation(line: 536, column: 19, scope: !2530)
!2533 = !DILocation(line: 536, column: 9, scope: !693)
!2534 = !DILocation(line: 537, column: 9, scope: !2535)
!2535 = distinct !DILexicalBlock(scope: !2530, file: !420, line: 536, column: 25)
!2536 = !DILocation(line: 537, column: 15, scope: !2535)
!2537 = !DILocation(line: 537, column: 21, scope: !2535)
!2538 = !DILocation(line: 538, column: 9, scope: !2535)
!2539 = !DILocation(line: 538, column: 15, scope: !2535)
!2540 = !DILocation(line: 538, column: 23, scope: !2535)
!2541 = !{!1550, !1535, i64 56}
!2542 = !DILocation(line: 539, column: 9, scope: !2535)
!2543 = !DILocation(line: 541, column: 9, scope: !2544)
!2544 = distinct !DILexicalBlock(scope: !693, file: !420, line: 541, column: 9)
!2545 = !DILocation(line: 541, column: 14, scope: !2544)
!2546 = !DILocation(line: 541, column: 19, scope: !2544)
!2547 = !DILocation(line: 541, column: 9, scope: !693)
!2548 = !DILocation(line: 542, column: 26, scope: !2549)
!2549 = distinct !DILexicalBlock(scope: !2544, file: !420, line: 541, column: 25)
!2550 = !DILocation(line: 542, column: 31, scope: !2549)
!2551 = !DILocation(line: 542, column: 39, scope: !2552)
!2552 = !DILexicalBlockFile(scope: !2549, file: !420, discriminator: 1)
!2553 = !DILocation(line: 542, column: 44, scope: !2549)
!2554 = !DILocation(line: 542, column: 39, scope: !2549)
!2555 = !DILocation(line: 542, column: 55, scope: !2556)
!2556 = !DILexicalBlockFile(scope: !2549, file: !420, discriminator: 2)
!2557 = !DILocation(line: 542, column: 60, scope: !2549)
!2558 = !DILocation(line: 542, column: 66, scope: !2549)
!2559 = !DILocation(line: 542, column: 71, scope: !2549)
!2560 = !DILocation(line: 542, column: 64, scope: !2549)
!2561 = !DILocation(line: 542, column: 9, scope: !2562)
!2562 = !DILexicalBlockFile(scope: !2563, file: !420, discriminator: 4)
!2563 = !DILexicalBlockFile(scope: !2549, file: !420, discriminator: 3)
!2564 = !DILocation(line: 542, column: 15, scope: !2549)
!2565 = !DILocation(line: 542, column: 9, scope: !2549)
!2566 = !DILocation(line: 542, column: 24, scope: !2549)
!2567 = !DILocation(line: 543, column: 28, scope: !2549)
!2568 = !DILocation(line: 543, column: 33, scope: !2549)
!2569 = !DILocation(line: 543, column: 43, scope: !2552)
!2570 = !DILocation(line: 543, column: 48, scope: !2549)
!2571 = !DILocation(line: 543, column: 43, scope: !2549)
!2572 = !DILocation(line: 543, column: 61, scope: !2556)
!2573 = !DILocation(line: 543, column: 66, scope: !2549)
!2574 = !DILocation(line: 543, column: 9, scope: !2562)
!2575 = !DILocation(line: 543, column: 15, scope: !2549)
!2576 = !DILocation(line: 543, column: 9, scope: !2549)
!2577 = !DILocation(line: 543, column: 26, scope: !2549)
!2578 = !DILocation(line: 544, column: 9, scope: !2549)
!2579 = !DILocation(line: 547, column: 12, scope: !2580)
!2580 = distinct !DILexicalBlock(scope: !693, file: !420, line: 547, column: 5)
!2581 = !DILocation(line: 547, column: 10, scope: !2580)
!2582 = !DILocation(line: 547, column: 17, scope: !2583)
!2583 = !DILexicalBlockFile(scope: !2584, file: !420, discriminator: 2)
!2584 = !DILexicalBlockFile(scope: !2585, file: !420, discriminator: 1)
!2585 = distinct !DILexicalBlock(scope: !2580, file: !420, line: 547, column: 5)
!2586 = !DILocation(line: 547, column: 21, scope: !2585)
!2587 = !DILocation(line: 547, column: 26, scope: !2585)
!2588 = !DILocation(line: 547, column: 19, scope: !2585)
!2589 = !DILocation(line: 547, column: 5, scope: !2580)
!2590 = !DILocation(line: 548, column: 37, scope: !2585)
!2591 = !DILocation(line: 548, column: 26, scope: !2585)
!2592 = !DILocation(line: 548, column: 31, scope: !2585)
!2593 = !DILocation(line: 548, column: 21, scope: !2585)
!2594 = !DILocation(line: 548, column: 9, scope: !2585)
!2595 = !DILocation(line: 548, column: 15, scope: !2585)
!2596 = !DILocation(line: 548, column: 24, scope: !2585)
!2597 = !DILocation(line: 547, column: 33, scope: !2585)
!2598 = !DILocation(line: 547, column: 5, scope: !2585)
!2599 = !DILocation(line: 549, column: 9, scope: !2600)
!2600 = distinct !DILexicalBlock(scope: !693, file: !420, line: 549, column: 9)
!2601 = !DILocation(line: 549, column: 14, scope: !2600)
!2602 = !DILocation(line: 549, column: 9, scope: !693)
!2603 = !DILocation(line: 550, column: 16, scope: !2604)
!2604 = distinct !DILexicalBlock(scope: !2605, file: !420, line: 550, column: 9)
!2605 = distinct !DILexicalBlock(scope: !2600, file: !420, line: 549, column: 23)
!2606 = !DILocation(line: 550, column: 14, scope: !2604)
!2607 = !DILocation(line: 550, column: 21, scope: !2608)
!2608 = !DILexicalBlockFile(scope: !2609, file: !420, discriminator: 2)
!2609 = !DILexicalBlockFile(scope: !2610, file: !420, discriminator: 1)
!2610 = distinct !DILexicalBlock(scope: !2604, file: !420, line: 550, column: 9)
!2611 = !DILocation(line: 550, column: 25, scope: !2610)
!2612 = !DILocation(line: 550, column: 30, scope: !2610)
!2613 = !DILocation(line: 550, column: 23, scope: !2610)
!2614 = !DILocation(line: 550, column: 9, scope: !2604)
!2615 = !DILocation(line: 551, column: 45, scope: !2610)
!2616 = !DILocation(line: 551, column: 32, scope: !2610)
!2617 = !DILocation(line: 551, column: 37, scope: !2610)
!2618 = !DILocation(line: 551, column: 27, scope: !2610)
!2619 = !DILocation(line: 551, column: 13, scope: !2610)
!2620 = !DILocation(line: 551, column: 19, scope: !2610)
!2621 = !DILocation(line: 551, column: 30, scope: !2610)
!2622 = !DILocation(line: 550, column: 37, scope: !2610)
!2623 = !DILocation(line: 550, column: 9, scope: !2610)
!2624 = !DILocation(line: 552, column: 5, scope: !2605)
!2625 = !DILocation(line: 554, column: 33, scope: !2626)
!2626 = distinct !DILexicalBlock(scope: !2600, file: !420, line: 553, column: 10)
!2627 = !DILocation(line: 554, column: 9, scope: !2626)
!2628 = !DILocation(line: 556, column: 1, scope: !693)
!2629 = !DILocation(line: 556, column: 1, scope: !2630)
!2630 = !DILexicalBlockFile(scope: !693, file: !420, discriminator: 1)
!2631 = !DILocation(line: 559, column: 28, scope: !698)
!2632 = !DILocation(line: 559, column: 51, scope: !698)
!2633 = !DILocation(line: 561, column: 5, scope: !698)
!2634 = !DILocation(line: 561, column: 16, scope: !698)
!2635 = !DILocation(line: 563, column: 9, scope: !2636)
!2636 = distinct !DILexicalBlock(scope: !698, file: !420, line: 563, column: 9)
!2637 = !DILocation(line: 563, column: 14, scope: !2636)
!2638 = !DILocation(line: 563, column: 25, scope: !2636)
!2639 = !DILocation(line: 563, column: 9, scope: !698)
!2640 = !DILocation(line: 564, column: 9, scope: !2641)
!2641 = distinct !DILexicalBlock(scope: !2636, file: !420, line: 563, column: 40)
!2642 = !DILocation(line: 564, column: 15, scope: !2641)
!2643 = !DILocation(line: 564, column: 26, scope: !2641)
!2644 = !DILocation(line: 565, column: 9, scope: !2641)
!2645 = !DILocation(line: 567, column: 12, scope: !2646)
!2646 = distinct !DILexicalBlock(scope: !698, file: !420, line: 567, column: 5)
!2647 = !DILocation(line: 567, column: 10, scope: !2646)
!2648 = !DILocation(line: 567, column: 17, scope: !2649)
!2649 = !DILexicalBlockFile(scope: !2650, file: !420, discriminator: 2)
!2650 = !DILexicalBlockFile(scope: !2651, file: !420, discriminator: 1)
!2651 = distinct !DILexicalBlock(scope: !2646, file: !420, line: 567, column: 5)
!2652 = !DILocation(line: 567, column: 21, scope: !2651)
!2653 = !DILocation(line: 567, column: 26, scope: !2651)
!2654 = !DILocation(line: 567, column: 19, scope: !2651)
!2655 = !DILocation(line: 567, column: 5, scope: !2646)
!2656 = !DILocation(line: 568, column: 47, scope: !2651)
!2657 = !DILocation(line: 568, column: 31, scope: !2651)
!2658 = !DILocation(line: 568, column: 36, scope: !2651)
!2659 = !DILocation(line: 568, column: 26, scope: !2651)
!2660 = !DILocation(line: 568, column: 9, scope: !2651)
!2661 = !DILocation(line: 568, column: 15, scope: !2651)
!2662 = !DILocation(line: 568, column: 29, scope: !2651)
!2663 = !DILocation(line: 567, column: 33, scope: !2651)
!2664 = !DILocation(line: 567, column: 5, scope: !2651)
!2665 = !DILocation(line: 569, column: 1, scope: !698)
!2666 = !DILocation(line: 569, column: 1, scope: !2667)
!2667 = !DILexicalBlockFile(scope: !698, file: !420, discriminator: 1)
!2668 = !DILocation(line: 472, column: 28, scope: !703)
!2669 = !DILocation(line: 472, column: 44, scope: !703)
!2670 = !DILocation(line: 472, column: 54, scope: !703)
!2671 = !DILocation(line: 474, column: 5, scope: !703)
!2672 = !DILocation(line: 474, column: 15, scope: !703)
!2673 = !DILocation(line: 475, column: 5, scope: !703)
!2674 = !DILocation(line: 475, column: 17, scope: !703)
!2675 = !DILocation(line: 476, column: 5, scope: !703)
!2676 = !DILocation(line: 476, column: 9, scope: !703)
!2677 = !DILocation(line: 482, column: 28, scope: !703)
!2678 = !DILocation(line: 482, column: 33, scope: !703)
!2679 = !DILocation(line: 482, column: 38, scope: !703)
!2680 = !DILocation(line: 482, column: 15, scope: !703)
!2681 = !DILocation(line: 482, column: 13, scope: !703)
!2682 = !DILocation(line: 483, column: 9, scope: !2683)
!2683 = distinct !DILexicalBlock(scope: !703, file: !420, line: 483, column: 9)
!2684 = !DILocation(line: 483, column: 17, scope: !2683)
!2685 = !DILocation(line: 483, column: 9, scope: !703)
!2686 = !DILocation(line: 484, column: 9, scope: !2687)
!2687 = distinct !DILexicalBlock(scope: !2683, file: !420, line: 483, column: 32)
!2688 = !DILocation(line: 485, column: 9, scope: !2687)
!2689 = !DILocation(line: 489, column: 13, scope: !703)
!2690 = !DILocation(line: 489, column: 12, scope: !703)
!2691 = !DILocation(line: 490, column: 16, scope: !703)
!2692 = !DILocation(line: 490, column: 10, scope: !703)
!2693 = !DILocation(line: 490, column: 14, scope: !703)
!2694 = !DILocation(line: 496, column: 20, scope: !703)
!2695 = !DILocation(line: 496, column: 10, scope: !703)
!2696 = !DILocation(line: 496, column: 18, scope: !703)
!2697 = !DILocation(line: 497, column: 9, scope: !2698)
!2698 = distinct !DILexicalBlock(scope: !703, file: !420, line: 497, column: 9)
!2699 = !DILocation(line: 497, column: 15, scope: !2698)
!2700 = !DILocation(line: 497, column: 22, scope: !2698)
!2701 = !DILocation(line: 497, column: 25, scope: !2702)
!2702 = !DILexicalBlockFile(scope: !2698, file: !420, discriminator: 1)
!2703 = !DILocation(line: 497, column: 31, scope: !2698)
!2704 = !DILocation(line: 497, column: 9, scope: !703)
!2705 = !DILocation(line: 498, column: 9, scope: !2706)
!2706 = distinct !DILexicalBlock(scope: !2698, file: !420, line: 497, column: 39)
!2707 = !DILocation(line: 499, column: 5, scope: !2706)
!2708 = !DILocation(line: 501, column: 9, scope: !2709)
!2709 = distinct !DILexicalBlock(scope: !2698, file: !420, line: 500, column: 10)
!2710 = !DILocation(line: 504, column: 10, scope: !703)
!2711 = !DILocation(line: 504, column: 21, scope: !703)
!2712 = !DILocation(line: 506, column: 30, scope: !703)
!2713 = !DILocation(line: 506, column: 11, scope: !703)
!2714 = !DILocation(line: 506, column: 9, scope: !703)
!2715 = !DILocation(line: 508, column: 16, scope: !703)
!2716 = !DILocation(line: 508, column: 5, scope: !703)
!2717 = !DILocation(line: 509, column: 12, scope: !703)
!2718 = !DILocation(line: 509, column: 5, scope: !703)
!2719 = !DILocation(line: 510, column: 1, scope: !703)
!2720 = !DILocation(line: 1057, column: 36, scope: !713)
!2721 = !DILocation(line: 1060, column: 5, scope: !713)
!2722 = !DILocation(line: 1060, column: 10, scope: !2723)
!2723 = !DILexicalBlockFile(scope: !717, file: !420, discriminator: 1)
!2724 = !DILocation(line: 1060, column: 21, scope: !717)
!2725 = !DILocation(line: 1060, column: 40, scope: !717)
!2726 = !DILocation(line: 1060, column: 26, scope: !717)
!2727 = !DILocation(line: 1060, column: 45, scope: !717)
!2728 = !DILocation(line: 1060, column: 64, scope: !717)
!2729 = !DILocation(line: 1060, column: 89, scope: !2730)
!2730 = !DILexicalBlockFile(scope: !2731, file: !420, discriminator: 2)
!2731 = distinct !DILexicalBlock(scope: !717, file: !420, line: 1060, column: 67)
!2732 = !DILocation(line: 1060, column: 93, scope: !2731)
!2733 = !DILocation(line: 1060, column: 96, scope: !2731)
!2734 = !DILocation(line: 1060, column: 104, scope: !2731)
!2735 = !DILocation(line: 1060, column: 131, scope: !2731)
!2736 = !DILocation(line: 1060, column: 70, scope: !2731)
!2737 = !DILocation(line: 1060, column: 74, scope: !2731)
!2738 = !DILocation(line: 1060, column: 77, scope: !2731)
!2739 = !DILocation(line: 1060, column: 85, scope: !2731)
!2740 = !DILocation(line: 1060, column: 160, scope: !2731)
!2741 = !DILocation(line: 1060, column: 160, scope: !2742)
!2742 = !DILexicalBlockFile(scope: !2731, file: !420, discriminator: 3)
!2743 = !DILocation(line: 1060, column: 201, scope: !2744)
!2744 = !DILexicalBlockFile(scope: !717, file: !420, discriminator: 4)
!2745 = !DILocation(line: 1060, column: 204, scope: !717)
!2746 = !DILocation(line: 1060, column: 207, scope: !717)
!2747 = !DILocation(line: 1060, column: 173, scope: !717)
!2748 = !DILocation(line: 1060, column: 176, scope: !717)
!2749 = !DILocation(line: 1060, column: 179, scope: !717)
!2750 = !DILocation(line: 1060, column: 188, scope: !717)
!2751 = !DILocation(line: 1060, column: 191, scope: !717)
!2752 = !DILocation(line: 1060, column: 199, scope: !717)
!2753 = !DILocation(line: 1060, column: 244, scope: !717)
!2754 = !DILocation(line: 1060, column: 247, scope: !717)
!2755 = !DILocation(line: 1060, column: 250, scope: !717)
!2756 = !DILocation(line: 1060, column: 216, scope: !717)
!2757 = !DILocation(line: 1060, column: 219, scope: !717)
!2758 = !DILocation(line: 1060, column: 222, scope: !717)
!2759 = !DILocation(line: 1060, column: 231, scope: !717)
!2760 = !DILocation(line: 1060, column: 234, scope: !717)
!2761 = !DILocation(line: 1060, column: 242, scope: !717)
!2762 = !DILocation(line: 1060, column: 259, scope: !717)
!2763 = !DILocation(line: 1060, column: 262, scope: !717)
!2764 = !DILocation(line: 1060, column: 265, scope: !717)
!2765 = !DILocation(line: 1060, column: 273, scope: !717)
!2766 = !DILocation(line: 1060, column: 287, scope: !713)
!2767 = !DILocation(line: 1060, column: 287, scope: !717)
!2768 = !DILocation(line: 1061, column: 27, scope: !713)
!2769 = !DILocation(line: 1061, column: 11, scope: !713)
!2770 = !DILocation(line: 1062, column: 5, scope: !713)
!2771 = !DILocation(line: 1062, column: 10, scope: !2772)
!2772 = !DILexicalBlockFile(scope: !719, file: !420, discriminator: 1)
!2773 = !DILocation(line: 1062, column: 20, scope: !719)
!2774 = !DILocation(line: 1062, column: 43, scope: !719)
!2775 = !DILocation(line: 1062, column: 49, scope: !719)
!2776 = !DILocation(line: 1062, column: 30, scope: !719)
!2777 = !DILocation(line: 1062, column: 60, scope: !723)
!2778 = !DILocation(line: 1062, column: 68, scope: !723)
!2779 = !DILocation(line: 1062, column: 60, scope: !719)
!2780 = !DILocation(line: 1062, column: 86, scope: !2781)
!2781 = !DILexicalBlockFile(scope: !722, file: !420, discriminator: 2)
!2782 = !DILocation(line: 1062, column: 92, scope: !722)
!2783 = !DILocation(line: 1062, column: 98, scope: !722)
!2784 = !DILocation(line: 1062, column: 112, scope: !722)
!2785 = !DILocation(line: 1062, column: 117, scope: !2786)
!2786 = !DILexicalBlockFile(scope: !721, file: !420, discriminator: 4)
!2787 = !DILocation(line: 1062, column: 127, scope: !721)
!2788 = !DILocation(line: 1062, column: 157, scope: !721)
!2789 = !DILocation(line: 1062, column: 175, scope: !2790)
!2790 = distinct !DILexicalBlock(scope: !721, file: !420, line: 1062, column: 172)
!2791 = !DILocation(line: 1062, column: 192, scope: !2790)
!2792 = !DILocation(line: 1062, column: 172, scope: !2790)
!2793 = !DILocation(line: 1062, column: 202, scope: !2790)
!2794 = !DILocation(line: 1062, column: 172, scope: !721)
!2795 = !DILocation(line: 1062, column: 172, scope: !2796)
!2796 = !DILexicalBlockFile(scope: !721, file: !420, discriminator: 5)
!2797 = !DILocation(line: 1062, column: 233, scope: !2798)
!2798 = !DILexicalBlockFile(scope: !2790, file: !420, discriminator: 6)
!2799 = !DILocation(line: 1062, column: 251, scope: !2790)
!2800 = !DILocation(line: 1062, column: 261, scope: !2790)
!2801 = !DILocation(line: 1062, column: 286, scope: !2790)
!2802 = !DILocation(line: 1062, column: 217, scope: !2790)
!2803 = !DILocation(line: 1062, column: 305, scope: !2804)
!2804 = !DILexicalBlockFile(scope: !722, file: !420, discriminator: 7)
!2805 = !DILocation(line: 1062, column: 305, scope: !721)
!2806 = !DILocation(line: 1062, column: 305, scope: !2807)
!2807 = !DILexicalBlockFile(scope: !721, file: !420, discriminator: 8)
!2808 = !DILocation(line: 1062, column: 318, scope: !2809)
!2809 = !DILexicalBlockFile(scope: !722, file: !420, discriminator: 9)
!2810 = !DILocation(line: 1062, column: 320, scope: !2811)
!2811 = !DILexicalBlockFile(scope: !2812, file: !420, discriminator: 10)
!2812 = !DILexicalBlockFile(scope: !713, file: !420, discriminator: 3)
!2813 = !DILocation(line: 1062, column: 320, scope: !719)
!2814 = !DILocation(line: 1063, column: 9, scope: !2815)
!2815 = distinct !DILexicalBlock(scope: !713, file: !420, line: 1063, column: 9)
!2816 = !DILocation(line: 1063, column: 15, scope: !2815)
!2817 = !{!1806, !1535, i64 144}
!2818 = !DILocation(line: 1063, column: 27, scope: !2815)
!2819 = !DILocation(line: 1063, column: 9, scope: !713)
!2820 = !DILocation(line: 1064, column: 45, scope: !2815)
!2821 = !DILocation(line: 1064, column: 32, scope: !2815)
!2822 = !DILocation(line: 1064, column: 9, scope: !2815)
!2823 = !DILocation(line: 1065, column: 21, scope: !713)
!2824 = !DILocation(line: 1065, column: 5, scope: !713)
!2825 = !DILocation(line: 1066, column: 1, scope: !713)
!2826 = !DILocation(line: 2116, column: 33, scope: !729)
!2827 = !DILocation(line: 2118, column: 9, scope: !2828)
!2828 = distinct !DILexicalBlock(scope: !729, file: !420, line: 2118, column: 9)
!2829 = !DILocation(line: 2118, column: 15, scope: !2828)
!2830 = !DILocation(line: 2118, column: 21, scope: !2828)
!2831 = !DILocation(line: 2118, column: 9, scope: !729)
!2832 = !DILocation(line: 2119, column: 64, scope: !2828)
!2833 = !DILocation(line: 2119, column: 16, scope: !2828)
!2834 = !DILocation(line: 2119, column: 9, scope: !2828)
!2835 = !DILocation(line: 2121, column: 55, scope: !2828)
!2836 = !DILocation(line: 2121, column: 16, scope: !2828)
!2837 = !DILocation(line: 2121, column: 9, scope: !2828)
!2838 = !DILocation(line: 2122, column: 1, scope: !729)
!2839 = !DILocation(line: 2706, column: 33, scope: !995)
!2840 = !DILocation(line: 2708, column: 9, scope: !1002)
!2841 = !DILocation(line: 2708, column: 15, scope: !1002)
!2842 = !{!1806, !1548, i64 32}
!2843 = !DILocation(line: 2708, column: 20, scope: !1002)
!2844 = !DILocation(line: 2708, column: 9, scope: !995)
!2845 = !DILocation(line: 2709, column: 9, scope: !1001)
!2846 = !DILocation(line: 2709, column: 20, scope: !1001)
!2847 = !DILocation(line: 2709, column: 28, scope: !1001)
!2848 = !DILocation(line: 2709, column: 34, scope: !1001)
!2849 = !DILocation(line: 2710, column: 9, scope: !1001)
!2850 = !DILocation(line: 2710, column: 15, scope: !1001)
!2851 = !DILocation(line: 2710, column: 21, scope: !1001)
!2852 = !DILocation(line: 2710, column: 27, scope: !1001)
!2853 = !DILocation(line: 2711, column: 9, scope: !1001)
!2854 = !DILocation(line: 2711, column: 20, scope: !1001)
!2855 = !DILocation(line: 2712, column: 9, scope: !1001)
!2856 = !DILocation(line: 2712, column: 14, scope: !1001)
!2857 = !DILocation(line: 2714, column: 37, scope: !2858)
!2858 = distinct !DILexicalBlock(scope: !1001, file: !420, line: 2714, column: 13)
!2859 = !DILocation(line: 2714, column: 44, scope: !2858)
!2860 = !DILocation(line: 2714, column: 49, scope: !2858)
!2861 = !DILocation(line: 2714, column: 56, scope: !2858)
!2862 = !DILocation(line: 2714, column: 82, scope: !2863)
!2863 = !DILexicalBlockFile(scope: !2858, file: !420, discriminator: 2)
!2864 = !DILocation(line: 2714, column: 89, scope: !2858)
!2865 = !DILocation(line: 2714, column: 95, scope: !2858)
!2866 = !DILocation(line: 2714, column: 100, scope: !2858)
!2867 = !DILocation(line: 2714, column: 13, scope: !1001)
!2868 = !DILocation(line: 2714, column: 127, scope: !2869)
!2869 = !DILexicalBlockFile(scope: !2870, file: !420, discriminator: 3)
!2870 = !DILexicalBlockFile(scope: !2871, file: !420, discriminator: 1)
!2871 = distinct !DILexicalBlock(scope: !2858, file: !420, line: 2714, column: 109)
!2872 = !DILocation(line: 2714, column: 111, scope: !2871)
!2873 = !DILocation(line: 2714, column: 199, scope: !2871)
!2874 = !DILocation(line: 2716, column: 14, scope: !2875)
!2875 = distinct !DILexicalBlock(scope: !1001, file: !420, line: 2716, column: 13)
!2876 = !DILocation(line: 2716, column: 20, scope: !2875)
!2877 = !DILocation(line: 2716, column: 13, scope: !1001)
!2878 = !DILocation(line: 2717, column: 29, scope: !2879)
!2879 = distinct !DILexicalBlock(scope: !2875, file: !420, line: 2716, column: 30)
!2880 = !DILocation(line: 2717, column: 13, scope: !2879)
!2881 = !DILocation(line: 2719, column: 13, scope: !2879)
!2882 = !DILocation(line: 2721, column: 40, scope: !1001)
!2883 = !DILocation(line: 2721, column: 46, scope: !1001)
!2884 = !DILocation(line: 2721, column: 15, scope: !1001)
!2885 = !DILocation(line: 2721, column: 13, scope: !1001)
!2886 = !DILocation(line: 2722, column: 13, scope: !2887)
!2887 = distinct !DILexicalBlock(scope: !1001, file: !420, line: 2722, column: 13)
!2888 = !DILocation(line: 2722, column: 17, scope: !2887)
!2889 = !DILocation(line: 2722, column: 21, scope: !2887)
!2890 = !DILocation(line: 2722, column: 26, scope: !2891)
!2891 = !DILexicalBlockFile(scope: !2887, file: !420, discriminator: 1)
!2892 = !DILocation(line: 2722, column: 30, scope: !2887)
!2893 = !DILocation(line: 2722, column: 37, scope: !2887)
!2894 = !DILocation(line: 2722, column: 40, scope: !2895)
!2895 = !DILexicalBlockFile(scope: !2887, file: !420, discriminator: 2)
!2896 = !DILocation(line: 2722, column: 44, scope: !2887)
!2897 = !DILocation(line: 2722, column: 51, scope: !2887)
!2898 = !DILocation(line: 2722, column: 54, scope: !2899)
!2899 = !DILexicalBlockFile(scope: !2887, file: !420, discriminator: 3)
!2900 = !DILocation(line: 2722, column: 58, scope: !2887)
!2901 = !DILocation(line: 2722, column: 13, scope: !1001)
!2902 = !DILocation(line: 2723, column: 29, scope: !2903)
!2903 = distinct !DILexicalBlock(scope: !2887, file: !420, line: 2722, column: 67)
!2904 = !DILocation(line: 2723, column: 13, scope: !2903)
!2905 = !DILocation(line: 2725, column: 13, scope: !2903)
!2906 = !DILocation(line: 2727, column: 13, scope: !2907)
!2907 = distinct !DILexicalBlock(scope: !1001, file: !420, line: 2727, column: 13)
!2908 = !DILocation(line: 2727, column: 19, scope: !2907)
!2909 = !DILocation(line: 2727, column: 23, scope: !2907)
!2910 = !DILocation(line: 2727, column: 37, scope: !2907)
!2911 = !DILocation(line: 2727, column: 54, scope: !2912)
!2912 = !DILexicalBlockFile(scope: !2907, file: !420, discriminator: 1)
!2913 = !DILocation(line: 2727, column: 60, scope: !2907)
!2914 = !DILocation(line: 2727, column: 40, scope: !2907)
!2915 = !DILocation(line: 2727, column: 65, scope: !2907)
!2916 = !DILocation(line: 2727, column: 13, scope: !1001)
!2917 = !DILocation(line: 2729, column: 13, scope: !2918)
!2918 = distinct !DILexicalBlock(scope: !2907, file: !420, line: 2727, column: 72)
!2919 = !DILocation(line: 2732, column: 15, scope: !2920)
!2920 = distinct !DILexicalBlock(scope: !1001, file: !420, line: 2732, column: 13)
!2921 = !DILocation(line: 2732, column: 21, scope: !2920)
!2922 = !DILocation(line: 2732, column: 26, scope: !2920)
!2923 = !DILocation(line: 2732, column: 13, scope: !1001)
!2924 = !DILocation(line: 2733, column: 32, scope: !2925)
!2925 = distinct !DILexicalBlock(scope: !2920, file: !420, line: 2732, column: 43)
!2926 = !DILocation(line: 2733, column: 38, scope: !2925)
!2927 = !DILocation(line: 2733, column: 19, scope: !2925)
!2928 = !DILocation(line: 2733, column: 17, scope: !2925)
!2929 = !DILocation(line: 2734, column: 17, scope: !2930)
!2930 = distinct !DILexicalBlock(scope: !2925, file: !420, line: 2734, column: 17)
!2931 = !DILocation(line: 2734, column: 21, scope: !2930)
!2932 = !DILocation(line: 2734, column: 17, scope: !2925)
!2933 = !DILocation(line: 2735, column: 17, scope: !2934)
!2934 = distinct !DILexicalBlock(scope: !2930, file: !420, line: 2734, column: 36)
!2935 = !DILocation(line: 2736, column: 17, scope: !2934)
!2936 = !DILocation(line: 2738, column: 38, scope: !2937)
!2937 = distinct !DILexicalBlock(scope: !2925, file: !420, line: 2738, column: 17)
!2938 = !DILocation(line: 2738, column: 43, scope: !2937)
!2939 = !DILocation(line: 2738, column: 17, scope: !2937)
!2940 = !DILocation(line: 2738, column: 54, scope: !2937)
!2941 = !DILocation(line: 2738, column: 17, scope: !2925)
!2942 = !DILocation(line: 2739, column: 28, scope: !2943)
!2943 = distinct !DILexicalBlock(scope: !2937, file: !420, line: 2738, column: 59)
!2944 = !DILocation(line: 2739, column: 17, scope: !2943)
!2945 = !DILocation(line: 2740, column: 17, scope: !2943)
!2946 = !DILocation(line: 2742, column: 9, scope: !2925)
!2947 = !DILocation(line: 2745, column: 36, scope: !1001)
!2948 = !DILocation(line: 2745, column: 41, scope: !1001)
!2949 = !DILocation(line: 2745, column: 47, scope: !1001)
!2950 = !DILocation(line: 2745, column: 22, scope: !1001)
!2951 = !DILocation(line: 2745, column: 9, scope: !1001)
!2952 = !DILocation(line: 2745, column: 15, scope: !1001)
!2953 = !DILocation(line: 2745, column: 20, scope: !1001)
!2954 = !DILocation(line: 2747, column: 13, scope: !2955)
!2955 = distinct !DILexicalBlock(scope: !1001, file: !420, line: 2747, column: 13)
!2956 = !DILocation(line: 2747, column: 20, scope: !2955)
!2957 = !DILocation(line: 2747, column: 26, scope: !2955)
!2958 = !DILocation(line: 2747, column: 17, scope: !2955)
!2959 = !DILocation(line: 2747, column: 13, scope: !1001)
!2960 = !DILocation(line: 2748, column: 24, scope: !2955)
!2961 = !DILocation(line: 2748, column: 13, scope: !2955)
!2962 = !DILocation(line: 2749, column: 5, scope: !1002)
!2963 = !DILocation(line: 2749, column: 5, scope: !2964)
!2964 = !DILexicalBlockFile(scope: !1002, file: !420, discriminator: 1)
!2965 = !DILocation(line: 2749, column: 5, scope: !1001)
!2966 = !DILocation(line: 2751, column: 12, scope: !995)
!2967 = !DILocation(line: 2751, column: 18, scope: !995)
!2968 = !DILocation(line: 2751, column: 5, scope: !995)
!2969 = !DILocation(line: 2752, column: 1, scope: !995)
!2970 = !DILocation(line: 1069, column: 37, scope: !1028)
!2971 = !DILocation(line: 1069, column: 53, scope: !1028)
!2972 = !DILocation(line: 1069, column: 66, scope: !1028)
!2973 = !DILocation(line: 1071, column: 5, scope: !1028)
!2974 = !DILocation(line: 1071, column: 14, scope: !2975)
!2975 = !DILexicalBlockFile(scope: !1037, file: !420, discriminator: 1)
!2976 = !DILocation(line: 1071, column: 20, scope: !1037)
!2977 = !DILocation(line: 1071, column: 14, scope: !1037)
!2978 = !DILocation(line: 1071, column: 14, scope: !1038)
!2979 = !DILocation(line: 1071, column: 28, scope: !2980)
!2980 = !DILexicalBlockFile(scope: !1036, file: !420, discriminator: 2)
!2981 = !DILocation(line: 1071, column: 32, scope: !1036)
!2982 = !DILocation(line: 1071, column: 39, scope: !1036)
!2983 = !DILocation(line: 1071, column: 58, scope: !1036)
!2984 = !DILocation(line: 1071, column: 64, scope: !1036)
!2985 = !DILocation(line: 1071, column: 45, scope: !1036)
!2986 = !DILocation(line: 1071, column: 71, scope: !1036)
!2987 = !DILocation(line: 1071, column: 81, scope: !2988)
!2988 = distinct !DILexicalBlock(scope: !1036, file: !420, line: 1071, column: 81)
!2989 = !DILocation(line: 1071, column: 81, scope: !1036)
!2990 = !DILocation(line: 1071, column: 94, scope: !2991)
!2991 = !DILexicalBlockFile(scope: !2988, file: !420, discriminator: 4)
!2992 = !DILocation(line: 1071, column: 87, scope: !2988)
!2993 = !DILocation(line: 1071, column: 100, scope: !2994)
!2994 = !DILexicalBlockFile(scope: !1037, file: !420, discriminator: 5)
!2995 = !DILocation(line: 1071, column: 100, scope: !2996)
!2996 = !DILexicalBlockFile(scope: !2997, file: !420, discriminator: 7)
!2997 = !DILexicalBlockFile(scope: !1037, file: !420, discriminator: 6)
!2998 = !DILocation(line: 1071, column: 100, scope: !1036)
!2999 = !DILocation(line: 1071, column: 102, scope: !3000)
!3000 = !DILexicalBlockFile(scope: !3001, file: !420, discriminator: 8)
!3001 = !DILexicalBlockFile(scope: !1038, file: !420, discriminator: 3)
!3002 = !DILocation(line: 1072, column: 5, scope: !1028)
!3003 = !DILocation(line: 1073, column: 1, scope: !1028)
!3004 = !DILocation(line: 1076, column: 34, scope: !1039)
!3005 = !DILocation(line: 1078, column: 27, scope: !1039)
!3006 = !DILocation(line: 1078, column: 11, scope: !1039)
!3007 = !DILocation(line: 1079, column: 5, scope: !1039)
!3008 = !DILocation(line: 1079, column: 10, scope: !3009)
!3009 = !DILexicalBlockFile(scope: !1043, file: !420, discriminator: 1)
!3010 = !DILocation(line: 1079, column: 20, scope: !1043)
!3011 = !DILocation(line: 1079, column: 43, scope: !1043)
!3012 = !DILocation(line: 1079, column: 49, scope: !1043)
!3013 = !DILocation(line: 1079, column: 30, scope: !1043)
!3014 = !DILocation(line: 1079, column: 60, scope: !1047)
!3015 = !DILocation(line: 1079, column: 68, scope: !1047)
!3016 = !DILocation(line: 1079, column: 60, scope: !1043)
!3017 = !DILocation(line: 1079, column: 86, scope: !3018)
!3018 = !DILexicalBlockFile(scope: !1046, file: !420, discriminator: 2)
!3019 = !DILocation(line: 1079, column: 92, scope: !1046)
!3020 = !DILocation(line: 1079, column: 98, scope: !1046)
!3021 = !DILocation(line: 1079, column: 112, scope: !1046)
!3022 = !DILocation(line: 1079, column: 117, scope: !3023)
!3023 = !DILexicalBlockFile(scope: !1045, file: !420, discriminator: 4)
!3024 = !DILocation(line: 1079, column: 127, scope: !1045)
!3025 = !DILocation(line: 1079, column: 157, scope: !1045)
!3026 = !DILocation(line: 1079, column: 175, scope: !3027)
!3027 = distinct !DILexicalBlock(scope: !1045, file: !420, line: 1079, column: 172)
!3028 = !DILocation(line: 1079, column: 192, scope: !3027)
!3029 = !DILocation(line: 1079, column: 172, scope: !3027)
!3030 = !DILocation(line: 1079, column: 202, scope: !3027)
!3031 = !DILocation(line: 1079, column: 172, scope: !1045)
!3032 = !DILocation(line: 1079, column: 172, scope: !3033)
!3033 = !DILexicalBlockFile(scope: !1045, file: !420, discriminator: 5)
!3034 = !DILocation(line: 1079, column: 233, scope: !3035)
!3035 = !DILexicalBlockFile(scope: !3027, file: !420, discriminator: 6)
!3036 = !DILocation(line: 1079, column: 251, scope: !3027)
!3037 = !DILocation(line: 1079, column: 261, scope: !3027)
!3038 = !DILocation(line: 1079, column: 286, scope: !3027)
!3039 = !DILocation(line: 1079, column: 217, scope: !3027)
!3040 = !DILocation(line: 1079, column: 305, scope: !3041)
!3041 = !DILexicalBlockFile(scope: !1046, file: !420, discriminator: 7)
!3042 = !DILocation(line: 1079, column: 305, scope: !1045)
!3043 = !DILocation(line: 1079, column: 305, scope: !3044)
!3044 = !DILexicalBlockFile(scope: !1045, file: !420, discriminator: 8)
!3045 = !DILocation(line: 1079, column: 318, scope: !3046)
!3046 = !DILexicalBlockFile(scope: !1046, file: !420, discriminator: 9)
!3047 = !DILocation(line: 1079, column: 320, scope: !3048)
!3048 = !DILexicalBlockFile(scope: !3049, file: !420, discriminator: 10)
!3049 = !DILexicalBlockFile(scope: !1039, file: !420, discriminator: 3)
!3050 = !DILocation(line: 1079, column: 320, scope: !1043)
!3051 = !DILocation(line: 1080, column: 5, scope: !1039)
!3052 = !DILocation(line: 2598, column: 30, scope: !1048)
!3053 = !DILocation(line: 2598, column: 43, scope: !1048)
!3054 = !DILocation(line: 2598, column: 50, scope: !1048)
!3055 = !DILocation(line: 2600, column: 5, scope: !1048)
!3056 = !DILocation(line: 2600, column: 15, scope: !1048)
!3057 = !DILocation(line: 2601, column: 5, scope: !1048)
!3058 = !DILocation(line: 2601, column: 15, scope: !1048)
!3059 = !DILocation(line: 2601, column: 22, scope: !1048)
!3060 = !DILocation(line: 2602, column: 5, scope: !1048)
!3061 = !DILocation(line: 2602, column: 16, scope: !1048)
!3062 = !DILocation(line: 2603, column: 5, scope: !1048)
!3063 = !DILocation(line: 2603, column: 22, scope: !1048)
!3064 = !DILocation(line: 2604, column: 5, scope: !1048)
!3065 = !DILocation(line: 2604, column: 22, scope: !1048)
!3066 = !DILocation(line: 2605, column: 5, scope: !1048)
!3067 = !DILocation(line: 2605, column: 10, scope: !1048)
!3068 = !DILocation(line: 2605, column: 16, scope: !1048)
!3069 = !DILocation(line: 2606, column: 5, scope: !1048)
!3070 = !DILocation(line: 2606, column: 9, scope: !1048)
!3071 = !DILocation(line: 2608, column: 9, scope: !3072)
!3072 = distinct !DILexicalBlock(scope: !1048, file: !420, line: 2608, column: 9)
!3073 = !DILocation(line: 2608, column: 12, scope: !3072)
!3074 = !DILocation(line: 2608, column: 17, scope: !3072)
!3075 = !DILocation(line: 2608, column: 20, scope: !3076)
!3076 = !DILexicalBlockFile(scope: !3072, file: !420, discriminator: 1)
!3077 = !DILocation(line: 2608, column: 23, scope: !3072)
!3078 = !DILocation(line: 2608, column: 9, scope: !1048)
!3079 = !DILocation(line: 2609, column: 9, scope: !3072)
!3080 = !DILocation(line: 2612, column: 33, scope: !3081)
!3081 = distinct !DILexicalBlock(scope: !1048, file: !420, line: 2612, column: 9)
!3082 = !DILocation(line: 2612, column: 11, scope: !3081)
!3083 = !DILocation(line: 2612, column: 37, scope: !3081)
!3084 = !DILocation(line: 2612, column: 42, scope: !3081)
!3085 = !DILocation(line: 2612, column: 49, scope: !3081)
!3086 = !DILocation(line: 2612, column: 75, scope: !3087)
!3087 = !DILexicalBlockFile(scope: !3081, file: !420, discriminator: 1)
!3088 = !DILocation(line: 2612, column: 53, scope: !3081)
!3089 = !DILocation(line: 2612, column: 79, scope: !3081)
!3090 = !DILocation(line: 2612, column: 85, scope: !3081)
!3091 = !DILocation(line: 2612, column: 90, scope: !3081)
!3092 = !DILocation(line: 2612, column: 9, scope: !1048)
!3093 = !DILocation(line: 2613, column: 18, scope: !3094)
!3094 = distinct !DILexicalBlock(scope: !3081, file: !420, line: 2612, column: 99)
!3095 = !DILocation(line: 2613, column: 23, scope: !3094)
!3096 = !DILocation(line: 2613, column: 20, scope: !3094)
!3097 = !DILocation(line: 2613, column: 15, scope: !3094)
!3098 = !DILocation(line: 2614, column: 9, scope: !3094)
!3099 = !DILocation(line: 2616, column: 35, scope: !1048)
!3100 = !DILocation(line: 2616, column: 13, scope: !1048)
!3101 = !DILocation(line: 2616, column: 39, scope: !1048)
!3102 = !DILocation(line: 2616, column: 8, scope: !1048)
!3103 = !DILocation(line: 2618, column: 24, scope: !3104)
!3104 = distinct !DILexicalBlock(scope: !1048, file: !420, line: 2618, column: 9)
!3105 = !DILocation(line: 2618, column: 29, scope: !3104)
!3106 = !DILocation(line: 2618, column: 38, scope: !3104)
!3107 = !DILocation(line: 2618, column: 9, scope: !1048)
!3108 = !DILocation(line: 2619, column: 37, scope: !3109)
!3109 = distinct !DILexicalBlock(scope: !3110, file: !420, line: 2619, column: 13)
!3110 = distinct !DILexicalBlock(scope: !3104, file: !420, line: 2618, column: 62)
!3111 = !DILocation(line: 2619, column: 15, scope: !3109)
!3112 = !DILocation(line: 2619, column: 41, scope: !3109)
!3113 = !DILocation(line: 2619, column: 46, scope: !3109)
!3114 = !DILocation(line: 2619, column: 53, scope: !3109)
!3115 = !DILocation(line: 2619, column: 79, scope: !3116)
!3116 = !DILexicalBlockFile(scope: !3109, file: !420, discriminator: 1)
!3117 = !DILocation(line: 2619, column: 57, scope: !3109)
!3118 = !DILocation(line: 2619, column: 83, scope: !3109)
!3119 = !DILocation(line: 2619, column: 89, scope: !3109)
!3120 = !DILocation(line: 2619, column: 94, scope: !3109)
!3121 = !DILocation(line: 2619, column: 13, scope: !3110)
!3122 = !DILocation(line: 2620, column: 22, scope: !3123)
!3123 = distinct !DILexicalBlock(scope: !3109, file: !420, line: 2619, column: 103)
!3124 = !DILocation(line: 2620, column: 27, scope: !3123)
!3125 = !DILocation(line: 2620, column: 24, scope: !3123)
!3126 = !DILocation(line: 2620, column: 19, scope: !3123)
!3127 = !DILocation(line: 2621, column: 13, scope: !3123)
!3128 = !DILocation(line: 2623, column: 39, scope: !3110)
!3129 = !DILocation(line: 2623, column: 17, scope: !3110)
!3130 = !DILocation(line: 2623, column: 43, scope: !3110)
!3131 = !DILocation(line: 2623, column: 12, scope: !3110)
!3132 = !DILocation(line: 2624, column: 5, scope: !3110)
!3133 = !DILocation(line: 2626, column: 32, scope: !3134)
!3134 = distinct !DILexicalBlock(scope: !3135, file: !420, line: 2626, column: 13)
!3135 = distinct !DILexicalBlock(scope: !3104, file: !420, line: 2625, column: 10)
!3136 = !DILocation(line: 2626, column: 13, scope: !3134)
!3137 = !DILocation(line: 2626, column: 83, scope: !3134)
!3138 = !DILocation(line: 2626, column: 13, scope: !3135)
!3139 = !DILocation(line: 2627, column: 13, scope: !3140)
!3140 = distinct !DILexicalBlock(scope: !3134, file: !420, line: 2626, column: 88)
!3141 = !DILocation(line: 2628, column: 13, scope: !3140)
!3142 = !DILocation(line: 2630, column: 12, scope: !3135)
!3143 = !DILocation(line: 2633, column: 22, scope: !3144)
!3144 = distinct !DILexicalBlock(scope: !1048, file: !420, line: 2633, column: 9)
!3145 = !DILocation(line: 2633, column: 26, scope: !3144)
!3146 = !DILocation(line: 2633, column: 10, scope: !3144)
!3147 = !DILocation(line: 2633, column: 9, scope: !1048)
!3148 = !DILocation(line: 2634, column: 9, scope: !3149)
!3149 = distinct !DILexicalBlock(scope: !3144, file: !420, line: 2633, column: 31)
!3150 = !DILocation(line: 2635, column: 15, scope: !3149)
!3151 = !DILocation(line: 2636, column: 9, scope: !3149)
!3152 = !DILocation(line: 2640, column: 35, scope: !3153)
!3153 = distinct !DILexicalBlock(scope: !1048, file: !420, line: 2640, column: 9)
!3154 = !DILocation(line: 2640, column: 39, scope: !3153)
!3155 = !DILocation(line: 2640, column: 9, scope: !3153)
!3156 = !DILocation(line: 2640, column: 47, scope: !3153)
!3157 = !DILocation(line: 2640, column: 9, scope: !1048)
!3158 = !DILocation(line: 2641, column: 14, scope: !3153)
!3159 = !DILocation(line: 2641, column: 9, scope: !3153)
!3160 = !DILocation(line: 2642, column: 35, scope: !3161)
!3161 = distinct !DILexicalBlock(scope: !1048, file: !420, line: 2642, column: 9)
!3162 = !DILocation(line: 2642, column: 39, scope: !3161)
!3163 = !DILocation(line: 2642, column: 9, scope: !3161)
!3164 = !DILocation(line: 2642, column: 47, scope: !3161)
!3165 = !DILocation(line: 2642, column: 9, scope: !1048)
!3166 = !DILocation(line: 2643, column: 14, scope: !3161)
!3167 = !DILocation(line: 2643, column: 9, scope: !3161)
!3168 = !DILocation(line: 2644, column: 9, scope: !3169)
!3169 = distinct !DILexicalBlock(scope: !1048, file: !420, line: 2644, column: 9)
!3170 = !DILocation(line: 2644, column: 14, scope: !3169)
!3171 = !DILocation(line: 2644, column: 21, scope: !3169)
!3172 = !DILocation(line: 2644, column: 24, scope: !3173)
!3173 = !DILexicalBlockFile(scope: !3169, file: !420, discriminator: 1)
!3174 = !DILocation(line: 2644, column: 29, scope: !3169)
!3175 = !DILocation(line: 2644, column: 36, scope: !3169)
!3176 = !DILocation(line: 2644, column: 39, scope: !3177)
!3177 = !DILexicalBlockFile(scope: !3169, file: !420, discriminator: 2)
!3178 = !DILocation(line: 2644, column: 47, scope: !3169)
!3179 = !DILocation(line: 2644, column: 44, scope: !3169)
!3180 = !DILocation(line: 2644, column: 9, scope: !1048)
!3181 = !DILocation(line: 2649, column: 14, scope: !3182)
!3182 = distinct !DILexicalBlock(scope: !3169, file: !420, line: 2644, column: 53)
!3183 = !DILocation(line: 2650, column: 40, scope: !3182)
!3184 = !DILocation(line: 2650, column: 44, scope: !3182)
!3185 = !DILocation(line: 2650, column: 52, scope: !3182)
!3186 = !DILocation(line: 2650, column: 56, scope: !3182)
!3187 = !DILocation(line: 2650, column: 20, scope: !3182)
!3188 = !DILocation(line: 2650, column: 18, scope: !3182)
!3189 = !DILocation(line: 2651, column: 13, scope: !3190)
!3190 = distinct !DILexicalBlock(scope: !3182, file: !420, line: 2651, column: 13)
!3191 = !DILocation(line: 2651, column: 22, scope: !3190)
!3192 = !DILocation(line: 2651, column: 13, scope: !3182)
!3193 = !DILocation(line: 2652, column: 21, scope: !3194)
!3194 = distinct !DILexicalBlock(scope: !3190, file: !420, line: 2651, column: 37)
!3195 = !DILocation(line: 2652, column: 19, scope: !3194)
!3196 = !DILocation(line: 2653, column: 13, scope: !3194)
!3197 = !DILocation(line: 2655, column: 40, scope: !3182)
!3198 = !DILocation(line: 2655, column: 44, scope: !3182)
!3199 = !DILocation(line: 2655, column: 52, scope: !3182)
!3200 = !DILocation(line: 2655, column: 56, scope: !3182)
!3201 = !DILocation(line: 2655, column: 20, scope: !3182)
!3202 = !DILocation(line: 2655, column: 18, scope: !3182)
!3203 = !DILocation(line: 2656, column: 13, scope: !3204)
!3204 = distinct !DILexicalBlock(scope: !3182, file: !420, line: 2656, column: 13)
!3205 = !DILocation(line: 2656, column: 22, scope: !3204)
!3206 = !DILocation(line: 2656, column: 13, scope: !3182)
!3207 = !DILocation(line: 2657, column: 21, scope: !3208)
!3208 = distinct !DILexicalBlock(scope: !3204, file: !420, line: 2656, column: 37)
!3209 = !DILocation(line: 2657, column: 19, scope: !3208)
!3210 = !DILocation(line: 2658, column: 13, scope: !3208)
!3211 = !DILocation(line: 2660, column: 5, scope: !3182)
!3212 = !DILocation(line: 2662, column: 9, scope: !3213)
!3213 = distinct !DILexicalBlock(scope: !1048, file: !420, line: 2662, column: 9)
!3214 = !DILocation(line: 2662, column: 13, scope: !3213)
!3215 = !DILocation(line: 2662, column: 18, scope: !3213)
!3216 = !DILocation(line: 2662, column: 9, scope: !1048)
!3217 = !DILocation(line: 2663, column: 28, scope: !3218)
!3218 = distinct !DILexicalBlock(scope: !3213, file: !420, line: 2662, column: 24)
!3219 = !DILocation(line: 2663, column: 32, scope: !3218)
!3220 = !DILocation(line: 2663, column: 37, scope: !3218)
!3221 = !DILocation(line: 2663, column: 41, scope: !3218)
!3222 = !DILocation(line: 2664, column: 28, scope: !3218)
!3223 = !DILocation(line: 2664, column: 34, scope: !3218)
!3224 = !DILocation(line: 2664, column: 44, scope: !3218)
!3225 = !DILocation(line: 2663, column: 17, scope: !3218)
!3226 = !DILocation(line: 2663, column: 15, scope: !3218)
!3227 = !DILocation(line: 2665, column: 5, scope: !3218)
!3228 = !DILocation(line: 2666, column: 14, scope: !3229)
!3229 = distinct !DILexicalBlock(scope: !3213, file: !420, line: 2666, column: 14)
!3230 = !DILocation(line: 2666, column: 18, scope: !3229)
!3231 = !DILocation(line: 2666, column: 23, scope: !3229)
!3232 = !DILocation(line: 2666, column: 14, scope: !3213)
!3233 = !DILocation(line: 2667, column: 26, scope: !3234)
!3234 = distinct !DILexicalBlock(scope: !3229, file: !420, line: 2666, column: 29)
!3235 = !DILocation(line: 2667, column: 30, scope: !3234)
!3236 = !DILocation(line: 2667, column: 35, scope: !3234)
!3237 = !DILocation(line: 2667, column: 39, scope: !3234)
!3238 = !DILocation(line: 2667, column: 44, scope: !3234)
!3239 = !DILocation(line: 2667, column: 48, scope: !3234)
!3240 = !DILocation(line: 2668, column: 26, scope: !3234)
!3241 = !DILocation(line: 2668, column: 30, scope: !3234)
!3242 = !DILocation(line: 2668, column: 39, scope: !3234)
!3243 = !DILocation(line: 2668, column: 43, scope: !3234)
!3244 = !DILocation(line: 2669, column: 26, scope: !3234)
!3245 = !DILocation(line: 2669, column: 30, scope: !3234)
!3246 = !DILocation(line: 2669, column: 39, scope: !3234)
!3247 = !DILocation(line: 2669, column: 43, scope: !3234)
!3248 = !DILocation(line: 2670, column: 26, scope: !3234)
!3249 = !DILocation(line: 2670, column: 32, scope: !3234)
!3250 = !DILocation(line: 2670, column: 42, scope: !3234)
!3251 = !DILocation(line: 2667, column: 17, scope: !3234)
!3252 = !DILocation(line: 2667, column: 15, scope: !3234)
!3253 = !DILocation(line: 2671, column: 5, scope: !3234)
!3254 = !DILocation(line: 2673, column: 25, scope: !3255)
!3255 = distinct !DILexicalBlock(scope: !3229, file: !420, line: 2672, column: 10)
!3256 = !DILocation(line: 2673, column: 29, scope: !3255)
!3257 = !DILocation(line: 2673, column: 34, scope: !3255)
!3258 = !DILocation(line: 2673, column: 38, scope: !3255)
!3259 = !DILocation(line: 2673, column: 43, scope: !3255)
!3260 = !DILocation(line: 2673, column: 47, scope: !3255)
!3261 = !DILocation(line: 2673, column: 53, scope: !3255)
!3262 = !DILocation(line: 2673, column: 57, scope: !3255)
!3263 = !DILocation(line: 2674, column: 25, scope: !3255)
!3264 = !DILocation(line: 2674, column: 29, scope: !3255)
!3265 = !DILocation(line: 2674, column: 38, scope: !3255)
!3266 = !DILocation(line: 2674, column: 42, scope: !3255)
!3267 = !DILocation(line: 2675, column: 25, scope: !3255)
!3268 = !DILocation(line: 2675, column: 29, scope: !3255)
!3269 = !DILocation(line: 2675, column: 38, scope: !3255)
!3270 = !DILocation(line: 2675, column: 42, scope: !3255)
!3271 = !DILocation(line: 2676, column: 25, scope: !3255)
!3272 = !DILocation(line: 2676, column: 31, scope: !3255)
!3273 = !DILocation(line: 2676, column: 41, scope: !3255)
!3274 = !DILocation(line: 2673, column: 17, scope: !3255)
!3275 = !DILocation(line: 2673, column: 15, scope: !3255)
!3276 = !DILocation(line: 2662, column: 21, scope: !3213)
!3277 = !DILocation(line: 2680, column: 9, scope: !3278)
!3278 = distinct !DILexicalBlock(scope: !1048, file: !420, line: 2680, column: 9)
!3279 = !DILocation(line: 2680, column: 15, scope: !3278)
!3280 = !DILocation(line: 2680, column: 9, scope: !1048)
!3281 = !DILocation(line: 2681, column: 13, scope: !3282)
!3282 = distinct !DILexicalBlock(scope: !3283, file: !420, line: 2681, column: 13)
!3283 = distinct !DILexicalBlock(scope: !3278, file: !420, line: 2680, column: 20)
!3284 = !DILocation(line: 2681, column: 19, scope: !3282)
!3285 = !DILocation(line: 2681, column: 13, scope: !3283)
!3286 = !DILocation(line: 2682, column: 17, scope: !3282)
!3287 = !DILocation(line: 2682, column: 13, scope: !3282)
!3288 = !DILocation(line: 2684, column: 17, scope: !3282)
!3289 = !DILocation(line: 2685, column: 5, scope: !3283)
!3290 = !DILocation(line: 2686, column: 15, scope: !3291)
!3291 = distinct !DILexicalBlock(scope: !3278, file: !420, line: 2686, column: 14)
!3292 = !DILocation(line: 2686, column: 21, scope: !3291)
!3293 = !DILocation(line: 2686, column: 24, scope: !3294)
!3294 = !DILexicalBlockFile(scope: !3291, file: !420, discriminator: 1)
!3295 = !DILocation(line: 2686, column: 27, scope: !3291)
!3296 = !DILocation(line: 2686, column: 33, scope: !3291)
!3297 = !DILocation(line: 2686, column: 38, scope: !3298)
!3298 = !DILexicalBlockFile(scope: !3299, file: !420, discriminator: 3)
!3299 = !DILexicalBlockFile(scope: !3291, file: !420, discriminator: 2)
!3300 = !DILocation(line: 2686, column: 44, scope: !3291)
!3301 = !DILocation(line: 2686, column: 47, scope: !3302)
!3302 = !DILexicalBlockFile(scope: !3291, file: !420, discriminator: 4)
!3303 = !DILocation(line: 2686, column: 50, scope: !3291)
!3304 = !DILocation(line: 2686, column: 14, scope: !3278)
!3305 = !DILocation(line: 2687, column: 13, scope: !3291)
!3306 = !DILocation(line: 2687, column: 9, scope: !3291)
!3307 = !DILocation(line: 2689, column: 13, scope: !3291)
!3308 = !DILocation(line: 2691, column: 9, scope: !3309)
!3309 = distinct !DILexicalBlock(scope: !1048, file: !420, line: 2691, column: 9)
!3310 = !DILocation(line: 2691, column: 12, scope: !3309)
!3311 = !DILocation(line: 2691, column: 9, scope: !1048)
!3312 = !DILocation(line: 2692, column: 26, scope: !3309)
!3313 = !DILocation(line: 2692, column: 9, scope: !3309)
!3314 = !DILocation(line: 2694, column: 19, scope: !1048)
!3315 = !DILocation(line: 2694, column: 5, scope: !1048)
!3316 = !DILocation(line: 2695, column: 19, scope: !1048)
!3317 = !DILocation(line: 2695, column: 5, scope: !1048)
!3318 = !DILocation(line: 2697, column: 5, scope: !1048)
!3319 = !DILocation(line: 2697, column: 10, scope: !3320)
!3320 = !DILexicalBlockFile(scope: !1070, file: !420, discriminator: 1)
!3321 = !DILocation(line: 2697, column: 20, scope: !1070)
!3322 = !DILocation(line: 2697, column: 51, scope: !1070)
!3323 = !DILocation(line: 2697, column: 61, scope: !3324)
!3324 = distinct !DILexicalBlock(scope: !1070, file: !420, line: 2697, column: 61)
!3325 = !DILocation(line: 2697, column: 77, scope: !3324)
!3326 = !DILocation(line: 2697, column: 61, scope: !1070)
!3327 = !DILocation(line: 2697, column: 108, scope: !3328)
!3328 = !DILexicalBlockFile(scope: !3324, file: !420, discriminator: 2)
!3329 = !DILocation(line: 2697, column: 127, scope: !3324)
!3330 = !DILocation(line: 2697, column: 136, scope: !3324)
!3331 = !DILocation(line: 2697, column: 92, scope: !3324)
!3332 = !DILocation(line: 2697, column: 141, scope: !3333)
!3333 = !DILexicalBlockFile(scope: !3334, file: !420, discriminator: 4)
!3334 = !DILexicalBlockFile(scope: !1048, file: !420, discriminator: 3)
!3335 = !DILocation(line: 2697, column: 141, scope: !1070)
!3336 = !DILocation(line: 2697, column: 141, scope: !3337)
!3337 = !DILexicalBlockFile(scope: !1070, file: !420, discriminator: 5)
!3338 = !DILocation(line: 2698, column: 12, scope: !1048)
!3339 = !DILocation(line: 2699, column: 1, scope: !1048)
!3340 = !DILocation(line: 2698, column: 5, scope: !1048)
!3341 = !DILocation(line: 949, column: 26, scope: !1434)
!3342 = !DILocation(line: 949, column: 45, scope: !1434)
!3343 = !DILocation(line: 949, column: 61, scope: !1434)
!3344 = !DILocation(line: 951, column: 5, scope: !1434)
!3345 = !DILocation(line: 951, column: 15, scope: !1434)
!3346 = !DILocation(line: 954, column: 38, scope: !3347)
!3347 = distinct !DILexicalBlock(scope: !1434, file: !420, line: 954, column: 9)
!3348 = !DILocation(line: 954, column: 44, scope: !3347)
!3349 = !DILocation(line: 954, column: 10, scope: !3347)
!3350 = !DILocation(line: 954, column: 9, scope: !1434)
!3351 = !DILocation(line: 956, column: 9, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !3347, file: !420, line: 955, column: 45)
!3353 = !DILocation(line: 959, column: 36, scope: !1434)
!3354 = !DILocation(line: 959, column: 12, scope: !1434)
!3355 = !DILocation(line: 959, column: 5, scope: !1434)
!3356 = !DILocation(line: 960, column: 1, scope: !1434)
!3357 = !DILocation(line: 98, column: 38, scope: !494)
!3358 = !DILocation(line: 100, column: 9, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !494, file: !420, line: 100, column: 9)
!3360 = !DILocation(line: 100, column: 15, scope: !3359)
!3361 = !DILocation(line: 100, column: 20, scope: !3359)
!3362 = !DILocation(line: 100, column: 9, scope: !494)
!3363 = !DILocation(line: 101, column: 9, scope: !3359)
!3364 = !DILocation(line: 105, column: 5, scope: !494)
!3365 = !DILocation(line: 105, column: 11, scope: !494)
!3366 = !DILocation(line: 105, column: 17, scope: !494)
!3367 = !DILocation(line: 108, column: 5, scope: !494)
!3368 = !DILocation(line: 108, column: 10, scope: !3369)
!3369 = !DILexicalBlockFile(scope: !498, file: !420, discriminator: 1)
!3370 = !DILocation(line: 108, column: 21, scope: !498)
!3371 = !DILocation(line: 108, column: 40, scope: !498)
!3372 = !DILocation(line: 108, column: 26, scope: !498)
!3373 = !DILocation(line: 108, column: 45, scope: !498)
!3374 = !DILocation(line: 108, column: 64, scope: !498)
!3375 = !DILocation(line: 108, column: 89, scope: !3376)
!3376 = !DILexicalBlockFile(scope: !3377, file: !420, discriminator: 2)
!3377 = distinct !DILexicalBlock(scope: !498, file: !420, line: 108, column: 67)
!3378 = !DILocation(line: 108, column: 93, scope: !3377)
!3379 = !DILocation(line: 108, column: 96, scope: !3377)
!3380 = !DILocation(line: 108, column: 104, scope: !3377)
!3381 = !DILocation(line: 108, column: 131, scope: !3377)
!3382 = !DILocation(line: 108, column: 70, scope: !3377)
!3383 = !DILocation(line: 108, column: 74, scope: !3377)
!3384 = !DILocation(line: 108, column: 77, scope: !3377)
!3385 = !DILocation(line: 108, column: 85, scope: !3377)
!3386 = !DILocation(line: 108, column: 160, scope: !3377)
!3387 = !DILocation(line: 108, column: 160, scope: !3388)
!3388 = !DILexicalBlockFile(scope: !3377, file: !420, discriminator: 3)
!3389 = !DILocation(line: 108, column: 201, scope: !3390)
!3390 = !DILexicalBlockFile(scope: !498, file: !420, discriminator: 4)
!3391 = !DILocation(line: 108, column: 204, scope: !498)
!3392 = !DILocation(line: 108, column: 207, scope: !498)
!3393 = !DILocation(line: 108, column: 173, scope: !498)
!3394 = !DILocation(line: 108, column: 176, scope: !498)
!3395 = !DILocation(line: 108, column: 179, scope: !498)
!3396 = !DILocation(line: 108, column: 188, scope: !498)
!3397 = !DILocation(line: 108, column: 191, scope: !498)
!3398 = !DILocation(line: 108, column: 199, scope: !498)
!3399 = !DILocation(line: 108, column: 244, scope: !498)
!3400 = !DILocation(line: 108, column: 247, scope: !498)
!3401 = !DILocation(line: 108, column: 250, scope: !498)
!3402 = !DILocation(line: 108, column: 216, scope: !498)
!3403 = !DILocation(line: 108, column: 219, scope: !498)
!3404 = !DILocation(line: 108, column: 222, scope: !498)
!3405 = !DILocation(line: 108, column: 231, scope: !498)
!3406 = !DILocation(line: 108, column: 234, scope: !498)
!3407 = !DILocation(line: 108, column: 242, scope: !498)
!3408 = !DILocation(line: 108, column: 259, scope: !498)
!3409 = !DILocation(line: 108, column: 262, scope: !498)
!3410 = !DILocation(line: 108, column: 265, scope: !498)
!3411 = !DILocation(line: 108, column: 273, scope: !498)
!3412 = !DILocation(line: 108, column: 287, scope: !494)
!3413 = !DILocation(line: 108, column: 287, scope: !498)
!3414 = !DILocation(line: 109, column: 23, scope: !494)
!3415 = !DILocation(line: 109, column: 29, scope: !494)
!3416 = !DILocation(line: 109, column: 5, scope: !494)
!3417 = !DILocation(line: 110, column: 1, scope: !494)
!3418 = !DILocation(line: 110, column: 1, scope: !3419)
!3419 = !DILexicalBlockFile(scope: !494, file: !420, discriminator: 1)
!3420 = !DILocation(line: 620, column: 18, scope: !532)
!3421 = !DILocation(line: 622, column: 5, scope: !532)
!3422 = !DILocation(line: 622, column: 25, scope: !532)
!3423 = !DILocation(line: 625, column: 79, scope: !532)
!3424 = !DILocation(line: 625, column: 78, scope: !532)
!3425 = !DILocation(line: 625, column: 76, scope: !532)
!3426 = !DILocation(line: 625, column: 34, scope: !532)
!3427 = !DILocation(line: 625, column: 11, scope: !532)
!3428 = !DILocation(line: 624, column: 8, scope: !532)
!3429 = !DILocation(line: 626, column: 9, scope: !3430)
!3430 = distinct !DILexicalBlock(scope: !532, file: !420, line: 626, column: 9)
!3431 = !DILocation(line: 626, column: 12, scope: !3430)
!3432 = !DILocation(line: 626, column: 9, scope: !532)
!3433 = !DILocation(line: 627, column: 9, scope: !3430)
!3434 = !DILocation(line: 629, column: 5, scope: !532)
!3435 = !DILocation(line: 629, column: 9, scope: !532)
!3436 = !DILocation(line: 629, column: 14, scope: !532)
!3437 = !DILocation(line: 630, column: 5, scope: !532)
!3438 = !DILocation(line: 630, column: 9, scope: !532)
!3439 = !DILocation(line: 630, column: 14, scope: !532)
!3440 = !DILocation(line: 631, column: 5, scope: !532)
!3441 = !DILocation(line: 631, column: 9, scope: !532)
!3442 = !DILocation(line: 631, column: 15, scope: !532)
!3443 = !DILocation(line: 632, column: 5, scope: !532)
!3444 = !DILocation(line: 632, column: 9, scope: !532)
!3445 = !DILocation(line: 632, column: 17, scope: !532)
!3446 = !{!1806, !1548, i64 48}
!3447 = !DILocation(line: 633, column: 21, scope: !532)
!3448 = !DILocation(line: 633, column: 5, scope: !532)
!3449 = !DILocation(line: 633, column: 9, scope: !532)
!3450 = !DILocation(line: 633, column: 14, scope: !532)
!3451 = !DILocation(line: 633, column: 19, scope: !532)
!3452 = !{!1806, !1549, i64 92}
!3453 = !DILocation(line: 634, column: 22, scope: !532)
!3454 = !DILocation(line: 634, column: 26, scope: !532)
!3455 = !DILocation(line: 634, column: 5, scope: !532)
!3456 = !DILocation(line: 634, column: 9, scope: !532)
!3457 = !DILocation(line: 634, column: 14, scope: !532)
!3458 = !DILocation(line: 634, column: 20, scope: !532)
!3459 = !{!1806, !1535, i64 104}
!3460 = !DILocation(line: 635, column: 24, scope: !532)
!3461 = !DILocation(line: 635, column: 28, scope: !532)
!3462 = !DILocation(line: 635, column: 39, scope: !532)
!3463 = !DILocation(line: 635, column: 37, scope: !532)
!3464 = !DILocation(line: 635, column: 5, scope: !532)
!3465 = !DILocation(line: 635, column: 9, scope: !532)
!3466 = !DILocation(line: 635, column: 14, scope: !532)
!3467 = !DILocation(line: 635, column: 22, scope: !532)
!3468 = !{!1806, !1535, i64 112}
!3469 = !DILocation(line: 636, column: 27, scope: !532)
!3470 = !DILocation(line: 636, column: 31, scope: !532)
!3471 = !DILocation(line: 636, column: 46, scope: !532)
!3472 = !DILocation(line: 636, column: 44, scope: !532)
!3473 = !DILocation(line: 636, column: 40, scope: !532)
!3474 = !DILocation(line: 636, column: 5, scope: !532)
!3475 = !DILocation(line: 636, column: 9, scope: !532)
!3476 = !DILocation(line: 636, column: 14, scope: !532)
!3477 = !DILocation(line: 636, column: 25, scope: !532)
!3478 = !{!1806, !1535, i64 120}
!3479 = !DILocation(line: 637, column: 5, scope: !532)
!3480 = !DILocation(line: 637, column: 9, scope: !532)
!3481 = !DILocation(line: 637, column: 21, scope: !532)
!3482 = !DILocation(line: 639, column: 5, scope: !532)
!3483 = !DILocation(line: 639, column: 10, scope: !3484)
!3484 = !DILexicalBlockFile(scope: !539, file: !420, discriminator: 1)
!3485 = !DILocation(line: 639, column: 21, scope: !539)
!3486 = !DILocation(line: 639, column: 40, scope: !539)
!3487 = !DILocation(line: 639, column: 26, scope: !539)
!3488 = !DILocation(line: 639, column: 43, scope: !539)
!3489 = !DILocation(line: 639, column: 54, scope: !3490)
!3490 = distinct !DILexicalBlock(scope: !539, file: !420, line: 639, column: 52)
!3491 = !DILocation(line: 639, column: 58, scope: !3490)
!3492 = !DILocation(line: 639, column: 61, scope: !3490)
!3493 = !DILocation(line: 639, column: 69, scope: !3490)
!3494 = !DILocation(line: 639, column: 77, scope: !3490)
!3495 = !DILocation(line: 639, column: 52, scope: !539)
!3496 = !DILocation(line: 639, column: 86, scope: !3497)
!3497 = !DILexicalBlockFile(scope: !3490, file: !420, discriminator: 2)
!3498 = !DILocation(line: 639, column: 130, scope: !3499)
!3499 = !DILexicalBlockFile(scope: !539, file: !420, discriminator: 3)
!3500 = !DILocation(line: 639, column: 155, scope: !3501)
!3501 = !DILexicalBlockFile(scope: !3502, file: !420, discriminator: 4)
!3502 = distinct !DILexicalBlock(scope: !539, file: !420, line: 639, column: 133)
!3503 = !DILocation(line: 639, column: 159, scope: !3502)
!3504 = !DILocation(line: 639, column: 162, scope: !3502)
!3505 = !DILocation(line: 639, column: 170, scope: !3502)
!3506 = !DILocation(line: 639, column: 197, scope: !3502)
!3507 = !DILocation(line: 639, column: 136, scope: !3502)
!3508 = !DILocation(line: 639, column: 140, scope: !3502)
!3509 = !DILocation(line: 639, column: 143, scope: !3502)
!3510 = !DILocation(line: 639, column: 151, scope: !3502)
!3511 = !DILocation(line: 639, column: 226, scope: !3502)
!3512 = !DILocation(line: 639, column: 226, scope: !3513)
!3513 = !DILexicalBlockFile(scope: !3502, file: !420, discriminator: 5)
!3514 = !DILocation(line: 639, column: 255, scope: !3515)
!3515 = !DILexicalBlockFile(scope: !539, file: !420, discriminator: 6)
!3516 = !DILocation(line: 639, column: 239, scope: !539)
!3517 = !DILocation(line: 639, column: 242, scope: !539)
!3518 = !DILocation(line: 639, column: 245, scope: !539)
!3519 = !DILocation(line: 639, column: 253, scope: !539)
!3520 = !DILocation(line: 639, column: 290, scope: !539)
!3521 = !DILocation(line: 639, column: 309, scope: !539)
!3522 = !DILocation(line: 639, column: 312, scope: !539)
!3523 = !DILocation(line: 639, column: 274, scope: !539)
!3524 = !DILocation(line: 639, column: 277, scope: !539)
!3525 = !DILocation(line: 639, column: 280, scope: !539)
!3526 = !DILocation(line: 639, column: 288, scope: !539)
!3527 = !DILocation(line: 639, column: 349, scope: !539)
!3528 = !DILocation(line: 639, column: 321, scope: !539)
!3529 = !DILocation(line: 639, column: 324, scope: !539)
!3530 = !DILocation(line: 639, column: 327, scope: !539)
!3531 = !DILocation(line: 639, column: 336, scope: !539)
!3532 = !DILocation(line: 639, column: 339, scope: !539)
!3533 = !DILocation(line: 639, column: 347, scope: !539)
!3534 = !DILocation(line: 639, column: 384, scope: !539)
!3535 = !DILocation(line: 639, column: 352, scope: !539)
!3536 = !DILocation(line: 639, column: 371, scope: !539)
!3537 = !DILocation(line: 639, column: 374, scope: !539)
!3538 = !DILocation(line: 639, column: 382, scope: !539)
!3539 = !DILocation(line: 639, column: 387, scope: !532)
!3540 = !DILocation(line: 639, column: 387, scope: !539)
!3541 = !DILocation(line: 639, column: 387, scope: !3542)
!3542 = !DILexicalBlockFile(scope: !539, file: !420, discriminator: 7)
!3543 = !DILocation(line: 640, column: 12, scope: !532)
!3544 = !DILocation(line: 640, column: 5, scope: !532)
!3545 = !DILocation(line: 641, column: 1, scope: !532)
!3546 = !DILocation(line: 587, column: 32, scope: !540)
!3547 = !DILocation(line: 589, column: 5, scope: !540)
!3548 = !DILocation(line: 589, column: 22, scope: !540)
!3549 = !DILocation(line: 589, column: 30, scope: !540)
!3550 = !DILocation(line: 589, column: 34, scope: !540)
!3551 = !DILocation(line: 590, column: 5, scope: !540)
!3552 = !DILocation(line: 590, column: 9, scope: !540)
!3553 = !DILocation(line: 592, column: 13, scope: !540)
!3554 = !DILocation(line: 592, column: 19, scope: !540)
!3555 = !DILocation(line: 594, column: 15, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !540, file: !420, line: 592, column: 25)
!3557 = !DILocation(line: 596, column: 9, scope: !3556)
!3558 = !DILocation(line: 598, column: 15, scope: !3559)
!3559 = distinct !DILexicalBlock(scope: !3556, file: !420, line: 598, column: 13)
!3560 = !DILocation(line: 598, column: 22, scope: !3559)
!3561 = !DILocation(line: 598, column: 14, scope: !3559)
!3562 = !DILocation(line: 598, column: 31, scope: !3559)
!3563 = !DILocation(line: 598, column: 36, scope: !3559)
!3564 = !DILocation(line: 598, column: 40, scope: !3565)
!3565 = !DILexicalBlockFile(scope: !3559, file: !420, discriminator: 1)
!3566 = !DILocation(line: 598, column: 47, scope: !3559)
!3567 = !DILocation(line: 598, column: 39, scope: !3559)
!3568 = !DILocation(line: 598, column: 62, scope: !3559)
!3569 = !DILocation(line: 598, column: 69, scope: !3559)
!3570 = !DILocation(line: 598, column: 58, scope: !3559)
!3571 = !DILocation(line: 598, column: 13, scope: !3556)
!3572 = !DILocation(line: 599, column: 19, scope: !3559)
!3573 = !DILocation(line: 599, column: 13, scope: !3559)
!3574 = !DILocation(line: 600, column: 9, scope: !3556)
!3575 = !DILocation(line: 602, column: 35, scope: !3576)
!3576 = distinct !DILexicalBlock(scope: !3556, file: !420, line: 602, column: 13)
!3577 = !DILocation(line: 602, column: 13, scope: !3576)
!3578 = !DILocation(line: 602, column: 13, scope: !3556)
!3579 = !DILocation(line: 603, column: 19, scope: !3576)
!3580 = !DILocation(line: 603, column: 13, scope: !3576)
!3581 = !DILocation(line: 604, column: 35, scope: !3582)
!3582 = distinct !DILexicalBlock(scope: !3556, file: !420, line: 604, column: 13)
!3583 = !DILocation(line: 604, column: 13, scope: !3582)
!3584 = !DILocation(line: 604, column: 13, scope: !3556)
!3585 = !DILocation(line: 605, column: 19, scope: !3582)
!3586 = !DILocation(line: 605, column: 13, scope: !3582)
!3587 = !DILocation(line: 606, column: 9, scope: !3556)
!3588 = !DILocation(line: 609, column: 9, scope: !3589)
!3589 = distinct !DILexicalBlock(scope: !540, file: !420, line: 609, column: 9)
!3590 = !DILocation(line: 609, column: 15, scope: !3589)
!3591 = !DILocation(line: 609, column: 9, scope: !540)
!3592 = !DILocation(line: 610, column: 15, scope: !3593)
!3593 = distinct !DILexicalBlock(scope: !3589, file: !420, line: 609, column: 27)
!3594 = !DILocation(line: 611, column: 15, scope: !3593)
!3595 = !DILocation(line: 612, column: 5, scope: !3593)
!3596 = !DILocation(line: 614, column: 17, scope: !540)
!3597 = !DILocation(line: 614, column: 5, scope: !540)
!3598 = !DILocation(line: 614, column: 9, scope: !540)
!3599 = !DILocation(line: 614, column: 15, scope: !540)
!3600 = !DILocation(line: 615, column: 1, scope: !540)
!3601 = !DILocation(line: 805, column: 42, scope: !578)
!3602 = !DILocation(line: 805, column: 60, scope: !578)
!3603 = !DILocation(line: 807, column: 9, scope: !586)
!3604 = !DILocation(line: 807, column: 13, scope: !586)
!3605 = !DILocation(line: 807, column: 9, scope: !578)
!3606 = !DILocation(line: 808, column: 9, scope: !585)
!3607 = !DILocation(line: 808, column: 15, scope: !585)
!3608 = !DILocation(line: 808, column: 40, scope: !585)
!3609 = !DILocation(line: 808, column: 33, scope: !585)
!3610 = !DILocation(line: 808, column: 44, scope: !585)
!3611 = !DILocation(line: 808, column: 20, scope: !585)
!3612 = !DILocation(line: 809, column: 13, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !585, file: !420, line: 809, column: 13)
!3614 = !DILocation(line: 809, column: 16, scope: !3613)
!3615 = !DILocation(line: 809, column: 13, scope: !585)
!3616 = !DILocation(line: 810, column: 13, scope: !3617)
!3617 = distinct !DILexicalBlock(scope: !3613, file: !420, line: 809, column: 31)
!3618 = !DILocation(line: 811, column: 13, scope: !3617)
!3619 = !DILocation(line: 813, column: 38, scope: !585)
!3620 = !DILocation(line: 813, column: 42, scope: !585)
!3621 = !DILocation(line: 813, column: 31, scope: !585)
!3622 = !DILocation(line: 813, column: 9, scope: !585)
!3623 = !DILocation(line: 813, column: 15, scope: !585)
!3624 = !DILocation(line: 813, column: 22, scope: !585)
!3625 = !DILocation(line: 813, column: 29, scope: !585)
!3626 = !DILocation(line: 814, column: 9, scope: !585)
!3627 = !DILocation(line: 814, column: 15, scope: !585)
!3628 = !DILocation(line: 814, column: 21, scope: !585)
!3629 = !DILocation(line: 815, column: 5, scope: !586)
!3630 = !DILocation(line: 815, column: 5, scope: !3631)
!3631 = !DILexicalBlockFile(scope: !586, file: !420, discriminator: 1)
!3632 = !DILocation(line: 815, column: 5, scope: !585)
!3633 = !DILocation(line: 817, column: 5, scope: !578)
!3634 = !DILocation(line: 818, column: 1, scope: !578)
!3635 = !DILocation(line: 690, column: 50, scope: !587)
!3636 = !DILocation(line: 690, column: 73, scope: !587)
!3637 = !DILocation(line: 691, column: 30, scope: !587)
!3638 = !DILocation(line: 693, column: 5, scope: !587)
!3639 = !DILocation(line: 693, column: 25, scope: !587)
!3640 = !DILocation(line: 694, column: 5, scope: !587)
!3641 = !DILocation(line: 694, column: 16, scope: !587)
!3642 = !DILocation(line: 696, column: 9, scope: !3643)
!3643 = distinct !DILexicalBlock(scope: !587, file: !420, line: 696, column: 9)
!3644 = !DILocation(line: 696, column: 13, scope: !3643)
!3645 = !DILocation(line: 696, column: 9, scope: !587)
!3646 = !DILocation(line: 697, column: 16, scope: !3643)
!3647 = !DILocation(line: 697, column: 22, scope: !3643)
!3648 = !DILocation(line: 697, column: 13, scope: !3643)
!3649 = !DILocation(line: 697, column: 9, scope: !3643)
!3650 = !DILocation(line: 701, column: 23, scope: !587)
!3651 = !DILocation(line: 701, column: 10, scope: !587)
!3652 = !DILocation(line: 701, column: 8, scope: !587)
!3653 = !DILocation(line: 702, column: 9, scope: !3654)
!3654 = distinct !DILexicalBlock(scope: !587, file: !420, line: 702, column: 9)
!3655 = !DILocation(line: 702, column: 12, scope: !3654)
!3656 = !DILocation(line: 702, column: 9, scope: !587)
!3657 = !DILocation(line: 703, column: 9, scope: !3654)
!3658 = !DILocation(line: 705, column: 13, scope: !587)
!3659 = !DILocation(line: 705, column: 17, scope: !587)
!3660 = !DILocation(line: 705, column: 10, scope: !587)
!3661 = !DILocation(line: 706, column: 24, scope: !587)
!3662 = !DILocation(line: 706, column: 30, scope: !587)
!3663 = !DILocation(line: 706, column: 5, scope: !587)
!3664 = !DILocation(line: 708, column: 16, scope: !587)
!3665 = !DILocation(line: 708, column: 5, scope: !587)
!3666 = !DILocation(line: 708, column: 9, scope: !587)
!3667 = !DILocation(line: 708, column: 14, scope: !587)
!3668 = !DILocation(line: 709, column: 21, scope: !587)
!3669 = !DILocation(line: 709, column: 8, scope: !587)
!3670 = !DILocation(line: 709, column: 29, scope: !587)
!3671 = !DILocation(line: 709, column: 38, scope: !587)
!3672 = !DILocation(line: 710, column: 5, scope: !587)
!3673 = !DILocation(line: 710, column: 11, scope: !587)
!3674 = !DILocation(line: 710, column: 18, scope: !587)
!3675 = !DILocation(line: 712, column: 24, scope: !587)
!3676 = !DILocation(line: 712, column: 12, scope: !587)
!3677 = !DILocation(line: 712, column: 5, scope: !587)
!3678 = !DILocation(line: 713, column: 1, scope: !587)
!3679 = !DILocation(line: 444, column: 36, scope: !596)
!3680 = !DILocation(line: 446, column: 5, scope: !596)
!3681 = !DILocation(line: 446, column: 16, scope: !596)
!3682 = !DILocation(line: 450, column: 35, scope: !596)
!3683 = !DILocation(line: 450, column: 41, scope: !596)
!3684 = !DILocation(line: 450, column: 19, scope: !596)
!3685 = !DILocation(line: 450, column: 25, scope: !596)
!3686 = !DILocation(line: 450, column: 29, scope: !596)
!3687 = !DILocation(line: 450, column: 5, scope: !596)
!3688 = !DILocation(line: 450, column: 11, scope: !596)
!3689 = !DILocation(line: 450, column: 33, scope: !596)
!3690 = !DILocation(line: 451, column: 14, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !596, file: !420, line: 451, column: 5)
!3692 = !DILocation(line: 451, column: 20, scope: !3691)
!3693 = !DILocation(line: 451, column: 24, scope: !3691)
!3694 = !DILocation(line: 451, column: 12, scope: !3691)
!3695 = !DILocation(line: 451, column: 10, scope: !3691)
!3696 = !DILocation(line: 451, column: 28, scope: !3697)
!3697 = !DILexicalBlockFile(scope: !3698, file: !420, discriminator: 2)
!3698 = !DILexicalBlockFile(scope: !3699, file: !420, discriminator: 1)
!3699 = distinct !DILexicalBlock(scope: !3691, file: !420, line: 451, column: 5)
!3700 = !DILocation(line: 451, column: 30, scope: !3699)
!3701 = !DILocation(line: 451, column: 5, scope: !3691)
!3702 = !DILocation(line: 452, column: 42, scope: !3699)
!3703 = !DILocation(line: 452, column: 43, scope: !3699)
!3704 = !DILocation(line: 452, column: 28, scope: !3699)
!3705 = !DILocation(line: 452, column: 34, scope: !3699)
!3706 = !DILocation(line: 452, column: 61, scope: !3699)
!3707 = !DILocation(line: 452, column: 62, scope: !3699)
!3708 = !DILocation(line: 452, column: 49, scope: !3699)
!3709 = !DILocation(line: 452, column: 55, scope: !3699)
!3710 = !DILocation(line: 452, column: 47, scope: !3699)
!3711 = !DILocation(line: 452, column: 23, scope: !3699)
!3712 = !DILocation(line: 452, column: 9, scope: !3699)
!3713 = !DILocation(line: 452, column: 15, scope: !3699)
!3714 = !DILocation(line: 452, column: 26, scope: !3699)
!3715 = !DILocation(line: 451, column: 37, scope: !3699)
!3716 = !DILocation(line: 451, column: 5, scope: !3699)
!3717 = !DILocation(line: 453, column: 1, scope: !596)
!3718 = !DILocation(line: 457, column: 44, scope: !602)
!3719 = !DILocation(line: 459, column: 5, scope: !602)
!3720 = !DILocation(line: 459, column: 16, scope: !602)
!3721 = !DILocation(line: 463, column: 24, scope: !602)
!3722 = !DILocation(line: 463, column: 30, scope: !602)
!3723 = !DILocation(line: 463, column: 5, scope: !602)
!3724 = !DILocation(line: 463, column: 11, scope: !602)
!3725 = !DILocation(line: 463, column: 22, scope: !602)
!3726 = !DILocation(line: 464, column: 12, scope: !3727)
!3727 = distinct !DILexicalBlock(scope: !602, file: !420, line: 464, column: 5)
!3728 = !DILocation(line: 464, column: 10, scope: !3727)
!3729 = !DILocation(line: 464, column: 17, scope: !3730)
!3730 = !DILexicalBlockFile(scope: !3731, file: !420, discriminator: 2)
!3731 = !DILexicalBlockFile(scope: !3732, file: !420, discriminator: 1)
!3732 = distinct !DILexicalBlock(scope: !3727, file: !420, line: 464, column: 5)
!3733 = !DILocation(line: 464, column: 21, scope: !3732)
!3734 = !DILocation(line: 464, column: 27, scope: !3732)
!3735 = !DILocation(line: 464, column: 19, scope: !3732)
!3736 = !DILocation(line: 464, column: 5, scope: !3727)
!3737 = !DILocation(line: 465, column: 42, scope: !3732)
!3738 = !DILocation(line: 465, column: 43, scope: !3732)
!3739 = !DILocation(line: 465, column: 28, scope: !3732)
!3740 = !DILocation(line: 465, column: 34, scope: !3732)
!3741 = !DILocation(line: 465, column: 61, scope: !3732)
!3742 = !DILocation(line: 465, column: 62, scope: !3732)
!3743 = !DILocation(line: 465, column: 49, scope: !3732)
!3744 = !DILocation(line: 465, column: 55, scope: !3732)
!3745 = !DILocation(line: 465, column: 47, scope: !3732)
!3746 = !DILocation(line: 465, column: 23, scope: !3732)
!3747 = !DILocation(line: 465, column: 9, scope: !3732)
!3748 = !DILocation(line: 465, column: 15, scope: !3732)
!3749 = !DILocation(line: 465, column: 26, scope: !3732)
!3750 = !DILocation(line: 464, column: 34, scope: !3732)
!3751 = !DILocation(line: 464, column: 5, scope: !3732)
!3752 = !DILocation(line: 466, column: 1, scope: !602)
!3753 = !DILocation(line: 414, column: 24, scope: !606)
!3754 = !DILocation(line: 414, column: 41, scope: !606)
!3755 = !DILocation(line: 416, column: 5, scope: !606)
!3756 = !DILocation(line: 416, column: 11, scope: !606)
!3757 = !DILocation(line: 420, column: 26, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !606, file: !420, line: 420, column: 9)
!3759 = !DILocation(line: 420, column: 32, scope: !3758)
!3760 = !DILocation(line: 420, column: 10, scope: !3758)
!3761 = !DILocation(line: 420, column: 9, scope: !606)
!3762 = !DILocation(line: 421, column: 9, scope: !3758)
!3763 = !DILocation(line: 423, column: 33, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !606, file: !420, line: 423, column: 9)
!3765 = !DILocation(line: 423, column: 39, scope: !3764)
!3766 = !DILocation(line: 423, column: 10, scope: !3764)
!3767 = !DILocation(line: 423, column: 9, scope: !606)
!3768 = !DILocation(line: 424, column: 40, scope: !3769)
!3769 = distinct !DILexicalBlock(scope: !3764, file: !420, line: 423, column: 45)
!3770 = !DILocation(line: 424, column: 46, scope: !3769)
!3771 = !DILocation(line: 424, column: 50, scope: !3769)
!3772 = !DILocation(line: 424, column: 28, scope: !3769)
!3773 = !DILocation(line: 424, column: 34, scope: !3769)
!3774 = !DILocation(line: 424, column: 56, scope: !3769)
!3775 = !DILocation(line: 424, column: 62, scope: !3769)
!3776 = !DILocation(line: 424, column: 54, scope: !3769)
!3777 = !DILocation(line: 424, column: 15, scope: !3769)
!3778 = !DILocation(line: 424, column: 13, scope: !3769)
!3779 = !DILocation(line: 425, column: 13, scope: !3780)
!3780 = distinct !DILexicalBlock(scope: !3769, file: !420, line: 425, column: 13)
!3781 = !DILocation(line: 425, column: 17, scope: !3780)
!3782 = !DILocation(line: 425, column: 13, scope: !3769)
!3783 = !DILocation(line: 426, column: 13, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3780, file: !420, line: 425, column: 32)
!3785 = !DILocation(line: 427, column: 13, scope: !3784)
!3786 = !DILocation(line: 429, column: 5, scope: !3769)
!3787 = !DILocation(line: 431, column: 14, scope: !606)
!3788 = !DILocation(line: 431, column: 20, scope: !606)
!3789 = !DILocation(line: 431, column: 27, scope: !606)
!3790 = !DILocation(line: 431, column: 33, scope: !606)
!3791 = !DILocation(line: 431, column: 39, scope: !606)
!3792 = !DILocation(line: 431, column: 45, scope: !606)
!3793 = !DILocation(line: 432, column: 14, scope: !606)
!3794 = !DILocation(line: 432, column: 20, scope: !606)
!3795 = !DILocation(line: 432, column: 25, scope: !606)
!3796 = !DILocation(line: 432, column: 31, scope: !606)
!3797 = !DILocation(line: 432, column: 40, scope: !606)
!3798 = !DILocation(line: 432, column: 46, scope: !606)
!3799 = !DILocation(line: 433, column: 14, scope: !606)
!3800 = !DILocation(line: 433, column: 19, scope: !606)
!3801 = !DILocation(line: 433, column: 24, scope: !606)
!3802 = !DILocation(line: 433, column: 29, scope: !606)
!3803 = !DILocation(line: 433, column: 38, scope: !606)
!3804 = !DILocation(line: 433, column: 43, scope: !606)
!3805 = !DILocation(line: 434, column: 14, scope: !606)
!3806 = !DILocation(line: 431, column: 5, scope: !606)
!3807 = !DILocation(line: 436, column: 9, scope: !3808)
!3808 = distinct !DILexicalBlock(scope: !606, file: !420, line: 436, column: 9)
!3809 = !DILocation(line: 436, column: 9, scope: !606)
!3810 = !DILocation(line: 437, column: 20, scope: !3808)
!3811 = !DILocation(line: 437, column: 9, scope: !3808)
!3812 = !DILocation(line: 439, column: 5, scope: !606)
!3813 = !DILocation(line: 440, column: 1, scope: !606)
!3814 = !DILocation(line: 305, column: 34, scope: !613)
!3815 = !DILocation(line: 305, column: 57, scope: !613)
!3816 = !DILocation(line: 307, column: 23, scope: !3817)
!3817 = distinct !DILexicalBlock(scope: !613, file: !420, line: 307, column: 9)
!3818 = !DILocation(line: 307, column: 29, scope: !3817)
!3819 = !DILocation(line: 307, column: 10, scope: !3817)
!3820 = !DILocation(line: 307, column: 34, scope: !3817)
!3821 = !DILocation(line: 308, column: 22, scope: !3817)
!3822 = !DILocation(line: 308, column: 28, scope: !3817)
!3823 = !DILocation(line: 308, column: 10, scope: !3817)
!3824 = !DILocation(line: 307, column: 9, scope: !613)
!3825 = !DILocation(line: 309, column: 25, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3817, file: !420, line: 308, column: 34)
!3827 = !DILocation(line: 309, column: 9, scope: !3826)
!3828 = !DILocation(line: 312, column: 9, scope: !3826)
!3829 = !DILocation(line: 315, column: 5, scope: !613)
!3830 = !DILocation(line: 316, column: 1, scope: !613)
!3831 = !DILocation(line: 249, column: 41, scope: !634)
!3832 = !DILocation(line: 249, column: 64, scope: !634)
!3833 = !DILocation(line: 252, column: 15, scope: !634)
!3834 = !DILocation(line: 252, column: 21, scope: !634)
!3835 = !DILocation(line: 252, column: 32, scope: !634)
!3836 = !DILocation(line: 252, column: 52, scope: !3837)
!3837 = !DILexicalBlockFile(scope: !634, file: !420, discriminator: 1)
!3838 = !DILocation(line: 252, column: 58, scope: !634)
!3839 = !DILocation(line: 252, column: 62, scope: !634)
!3840 = !DILocation(line: 252, column: 35, scope: !634)
!3841 = !DILocation(line: 252, column: 41, scope: !634)
!3842 = !DILocation(line: 252, column: 66, scope: !634)
!3843 = !DILocation(line: 252, column: 72, scope: !634)
!3844 = !DILocation(line: 253, column: 15, scope: !634)
!3845 = !DILocation(line: 253, column: 20, scope: !634)
!3846 = !DILocation(line: 253, column: 31, scope: !634)
!3847 = !DILocation(line: 253, column: 50, scope: !3837)
!3848 = !DILocation(line: 253, column: 56, scope: !634)
!3849 = !DILocation(line: 253, column: 60, scope: !634)
!3850 = !DILocation(line: 253, column: 34, scope: !634)
!3851 = !DILocation(line: 253, column: 39, scope: !634)
!3852 = !DILocation(line: 253, column: 64, scope: !634)
!3853 = !DILocation(line: 253, column: 70, scope: !634)
!3854 = !DILocation(line: 254, column: 27, scope: !634)
!3855 = !DILocation(line: 254, column: 33, scope: !634)
!3856 = !DILocation(line: 254, column: 37, scope: !634)
!3857 = !DILocation(line: 254, column: 13, scope: !634)
!3858 = !DILocation(line: 254, column: 19, scope: !634)
!3859 = !DILocation(line: 254, column: 44, scope: !634)
!3860 = !DILocation(line: 254, column: 50, scope: !634)
!3861 = !DILocation(line: 254, column: 41, scope: !634)
!3862 = !DILocation(line: 254, column: 59, scope: !634)
!3863 = !DILocation(line: 255, column: 26, scope: !634)
!3864 = !DILocation(line: 255, column: 31, scope: !634)
!3865 = !DILocation(line: 255, column: 35, scope: !634)
!3866 = !DILocation(line: 255, column: 13, scope: !634)
!3867 = !DILocation(line: 255, column: 18, scope: !634)
!3868 = !DILocation(line: 255, column: 42, scope: !634)
!3869 = !DILocation(line: 255, column: 47, scope: !634)
!3870 = !DILocation(line: 255, column: 39, scope: !634)
!3871 = !DILocation(line: 254, column: 59, scope: !3837)
!3872 = !DILocation(line: 252, column: 5, scope: !634)
!3873 = !DILocation(line: 352, column: 28, scope: !638)
!3874 = !DILocation(line: 352, column: 46, scope: !638)
!3875 = !DILocation(line: 352, column: 63, scope: !638)
!3876 = !DILocation(line: 353, column: 16, scope: !638)
!3877 = !DILocation(line: 353, column: 40, scope: !638)
!3878 = !DILocation(line: 353, column: 68, scope: !638)
!3879 = !DILocation(line: 354, column: 16, scope: !638)
!3880 = !DILocation(line: 354, column: 40, scope: !638)
!3881 = !DILocation(line: 354, column: 68, scope: !638)
!3882 = !DILocation(line: 355, column: 16, scope: !638)
!3883 = !DILocation(line: 357, column: 5, scope: !638)
!3884 = !DILocation(line: 357, column: 16, scope: !638)
!3885 = !DILocation(line: 361, column: 9, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !638, file: !420, line: 361, column: 9)
!3887 = !DILocation(line: 361, column: 14, scope: !3886)
!3888 = !DILocation(line: 361, column: 9, scope: !638)
!3889 = !DILocation(line: 362, column: 19, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !3886, file: !420, line: 361, column: 20)
!3891 = !DILocation(line: 362, column: 26, scope: !3890)
!3892 = !DILocation(line: 363, column: 19, scope: !3890)
!3893 = !DILocation(line: 363, column: 25, scope: !3890)
!3894 = !DILocation(line: 363, column: 35, scope: !3890)
!3895 = !DILocation(line: 364, column: 19, scope: !3890)
!3896 = !DILocation(line: 364, column: 25, scope: !3890)
!3897 = !DILocation(line: 364, column: 35, scope: !3890)
!3898 = !DILocation(line: 365, column: 19, scope: !3890)
!3899 = !DILocation(line: 362, column: 9, scope: !3890)
!3900 = !DILocation(line: 366, column: 9, scope: !3890)
!3901 = !DILocation(line: 369, column: 12, scope: !658)
!3902 = !DILocation(line: 369, column: 10, scope: !658)
!3903 = !DILocation(line: 369, column: 17, scope: !3904)
!3904 = !DILexicalBlockFile(scope: !3905, file: !420, discriminator: 2)
!3905 = !DILexicalBlockFile(scope: !657, file: !420, discriminator: 1)
!3906 = !DILocation(line: 369, column: 21, scope: !657)
!3907 = !DILocation(line: 369, column: 19, scope: !657)
!3908 = !DILocation(line: 369, column: 5, scope: !658)
!3909 = !DILocation(line: 370, column: 9, scope: !656)
!3910 = !DILocation(line: 370, column: 15, scope: !656)
!3911 = !DILocation(line: 370, column: 25, scope: !656)
!3912 = !DILocation(line: 370, column: 37, scope: !656)
!3913 = !DILocation(line: 370, column: 40, scope: !3914)
!3914 = !DILexicalBlockFile(scope: !656, file: !420, discriminator: 1)
!3915 = !DILocation(line: 370, column: 55, scope: !656)
!3916 = !DILocation(line: 370, column: 24, scope: !656)
!3917 = !DILocation(line: 370, column: 73, scope: !3918)
!3918 = !DILexicalBlockFile(scope: !656, file: !420, discriminator: 3)
!3919 = !DILocation(line: 370, column: 65, scope: !656)
!3920 = !DILocation(line: 370, column: 63, scope: !656)
!3921 = !DILocation(line: 370, column: 81, scope: !656)
!3922 = !DILocation(line: 370, column: 79, scope: !656)
!3923 = !DILocation(line: 370, column: 98, scope: !3924)
!3924 = !DILexicalBlockFile(scope: !3925, file: !420, discriminator: 4)
!3925 = !DILexicalBlockFile(scope: !656, file: !420, discriminator: 2)
!3926 = !DILocation(line: 370, column: 15, scope: !3927)
!3927 = !DILexicalBlockFile(scope: !3928, file: !420, discriminator: 6)
!3928 = !DILexicalBlockFile(scope: !656, file: !420, discriminator: 5)
!3929 = !DILocation(line: 371, column: 9, scope: !656)
!3930 = !DILocation(line: 371, column: 15, scope: !656)
!3931 = !DILocation(line: 371, column: 25, scope: !656)
!3932 = !DILocation(line: 371, column: 37, scope: !656)
!3933 = !DILocation(line: 371, column: 40, scope: !3914)
!3934 = !DILocation(line: 371, column: 55, scope: !656)
!3935 = !DILocation(line: 371, column: 24, scope: !656)
!3936 = !DILocation(line: 371, column: 73, scope: !3918)
!3937 = !DILocation(line: 371, column: 65, scope: !656)
!3938 = !DILocation(line: 371, column: 63, scope: !656)
!3939 = !DILocation(line: 371, column: 81, scope: !656)
!3940 = !DILocation(line: 371, column: 79, scope: !656)
!3941 = !DILocation(line: 371, column: 98, scope: !3924)
!3942 = !DILocation(line: 371, column: 15, scope: !3927)
!3943 = !DILocation(line: 373, column: 18, scope: !656)
!3944 = !DILocation(line: 373, column: 23, scope: !656)
!3945 = !DILocation(line: 373, column: 27, scope: !656)
!3946 = !DILocation(line: 373, column: 31, scope: !656)
!3947 = !DILocation(line: 373, column: 35, scope: !656)
!3948 = !DILocation(line: 374, column: 18, scope: !656)
!3949 = !DILocation(line: 374, column: 25, scope: !656)
!3950 = !DILocation(line: 374, column: 33, scope: !656)
!3951 = !DILocation(line: 374, column: 37, scope: !656)
!3952 = !DILocation(line: 374, column: 51, scope: !3914)
!3953 = !DILocation(line: 374, column: 62, scope: !656)
!3954 = !DILocation(line: 374, column: 37, scope: !3925)
!3955 = !DILocation(line: 375, column: 18, scope: !656)
!3956 = !DILocation(line: 375, column: 25, scope: !656)
!3957 = !DILocation(line: 375, column: 33, scope: !656)
!3958 = !DILocation(line: 375, column: 37, scope: !656)
!3959 = !DILocation(line: 375, column: 51, scope: !3914)
!3960 = !DILocation(line: 375, column: 62, scope: !656)
!3961 = !DILocation(line: 375, column: 37, scope: !3925)
!3962 = !DILocation(line: 376, column: 18, scope: !656)
!3963 = !DILocation(line: 373, column: 9, scope: !656)
!3964 = !DILocation(line: 377, column: 5, scope: !657)
!3965 = !DILocation(line: 377, column: 5, scope: !656)
!3966 = !DILocation(line: 369, column: 37, scope: !657)
!3967 = !DILocation(line: 369, column: 35, scope: !657)
!3968 = !DILocation(line: 369, column: 56, scope: !657)
!3969 = !DILocation(line: 369, column: 54, scope: !657)
!3970 = !DILocation(line: 369, column: 70, scope: !657)
!3971 = !DILocation(line: 369, column: 5, scope: !657)
!3972 = !DILocation(line: 378, column: 1, scope: !638)
!3973 = !DILocation(line: 378, column: 1, scope: !3974)
!3974 = !DILexicalBlockFile(scope: !638, file: !420, discriminator: 1)
!3975 = !DILocation(line: 265, column: 31, scope: !619)
!3976 = !DILocation(line: 265, column: 54, scope: !619)
!3977 = !DILocation(line: 267, column: 5, scope: !619)
!3978 = !DILocation(line: 267, column: 17, scope: !619)
!3979 = !DILocation(line: 267, column: 24, scope: !619)
!3980 = !DILocation(line: 270, column: 12, scope: !619)
!3981 = !DILocation(line: 270, column: 18, scope: !619)
!3982 = !DILocation(line: 270, column: 28, scope: !619)
!3983 = !DILocation(line: 270, column: 37, scope: !3984)
!3984 = !DILexicalBlockFile(scope: !619, file: !420, discriminator: 1)
!3985 = !DILocation(line: 270, column: 43, scope: !619)
!3986 = !DILocation(line: 270, column: 49, scope: !619)
!3987 = !DILocation(line: 270, column: 54, scope: !3988)
!3988 = !DILexicalBlockFile(scope: !619, file: !420, discriminator: 2)
!3989 = !DILocation(line: 270, column: 60, scope: !619)
!3990 = !DILocation(line: 270, column: 10, scope: !3991)
!3991 = !DILexicalBlockFile(scope: !3992, file: !420, discriminator: 4)
!3992 = !DILexicalBlockFile(scope: !619, file: !420, discriminator: 3)
!3993 = !DILocation(line: 271, column: 12, scope: !619)
!3994 = !DILocation(line: 271, column: 17, scope: !619)
!3995 = !DILocation(line: 271, column: 27, scope: !619)
!3996 = !DILocation(line: 271, column: 36, scope: !3984)
!3997 = !DILocation(line: 271, column: 41, scope: !619)
!3998 = !DILocation(line: 271, column: 47, scope: !619)
!3999 = !DILocation(line: 271, column: 52, scope: !3988)
!4000 = !DILocation(line: 271, column: 57, scope: !619)
!4001 = !DILocation(line: 271, column: 10, scope: !3991)
!4002 = !DILocation(line: 273, column: 26, scope: !626)
!4003 = !DILocation(line: 273, column: 33, scope: !626)
!4004 = !DILocation(line: 273, column: 43, scope: !626)
!4005 = !DILocation(line: 273, column: 2061, scope: !626)
!4006 = !DILocation(line: 273, column: 2067, scope: !626)
!4007 = !DILocation(line: 273, column: 2043, scope: !626)
!4008 = !DILocation(line: 273, column: 2077, scope: !627)
!4009 = !DILocation(line: 273, column: 2077, scope: !626)
!4010 = !DILocation(line: 273, column: 2080, scope: !627)
!4011 = !DILocation(line: 273, column: 2085, scope: !627)
!4012 = !DILocation(line: 274, column: 9, scope: !627)
!4013 = !DILocation(line: 274, column: 15, scope: !627)
!4014 = !DILocation(line: 274, column: 27, scope: !627)
!4015 = !DILocation(line: 274, column: 32, scope: !627)
!4016 = !DILocation(line: 274, column: 24, scope: !627)
!4017 = !DILocation(line: 273, column: 9, scope: !619)
!4018 = !DILocation(line: 275, column: 9, scope: !4019)
!4019 = distinct !DILexicalBlock(scope: !627, file: !420, line: 274, column: 42)
!4020 = !DILocation(line: 278, column: 5, scope: !619)
!4021 = !DILocation(line: 279, column: 1, scope: !619)
!4022 = !DILocation(line: 285, column: 30, scope: !629)
!4023 = !DILocation(line: 285, column: 53, scope: !629)
!4024 = !DILocation(line: 287, column: 5, scope: !629)
!4025 = !DILocation(line: 287, column: 9, scope: !629)
!4026 = !DILocation(line: 289, column: 9, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !629, file: !420, line: 289, column: 9)
!4028 = !DILocation(line: 289, column: 15, scope: !4027)
!4029 = !DILocation(line: 289, column: 23, scope: !4027)
!4030 = !DILocation(line: 289, column: 28, scope: !4027)
!4031 = !DILocation(line: 289, column: 20, scope: !4027)
!4032 = !DILocation(line: 289, column: 9, scope: !629)
!4033 = !DILocation(line: 290, column: 9, scope: !4027)
!4034 = !DILocation(line: 292, column: 12, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !629, file: !420, line: 292, column: 5)
!4036 = !DILocation(line: 292, column: 10, scope: !4035)
!4037 = !DILocation(line: 292, column: 17, scope: !4038)
!4038 = !DILexicalBlockFile(scope: !4039, file: !420, discriminator: 2)
!4039 = !DILexicalBlockFile(scope: !4040, file: !420, discriminator: 1)
!4040 = distinct !DILexicalBlock(scope: !4035, file: !420, line: 292, column: 5)
!4041 = !DILocation(line: 292, column: 21, scope: !4040)
!4042 = !DILocation(line: 292, column: 27, scope: !4040)
!4043 = !DILocation(line: 292, column: 19, scope: !4040)
!4044 = !DILocation(line: 292, column: 5, scope: !4035)
!4045 = !DILocation(line: 293, column: 25, scope: !4046)
!4046 = distinct !DILexicalBlock(scope: !4047, file: !420, line: 293, column: 13)
!4047 = distinct !DILexicalBlock(scope: !4040, file: !420, line: 292, column: 38)
!4048 = !DILocation(line: 293, column: 13, scope: !4046)
!4049 = !DILocation(line: 293, column: 19, scope: !4046)
!4050 = !DILocation(line: 293, column: 42, scope: !4046)
!4051 = !DILocation(line: 293, column: 31, scope: !4046)
!4052 = !DILocation(line: 293, column: 36, scope: !4046)
!4053 = !DILocation(line: 293, column: 28, scope: !4046)
!4054 = !DILocation(line: 293, column: 13, scope: !4047)
!4055 = !DILocation(line: 294, column: 13, scope: !4046)
!4056 = !DILocation(line: 295, column: 25, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !4047, file: !420, line: 295, column: 13)
!4058 = !DILocation(line: 295, column: 13, scope: !4057)
!4059 = !DILocation(line: 295, column: 19, scope: !4057)
!4060 = !DILocation(line: 295, column: 28, scope: !4057)
!4061 = !DILocation(line: 295, column: 13, scope: !4047)
!4062 = !DILocation(line: 296, column: 13, scope: !4057)
!4063 = !DILocation(line: 297, column: 5, scope: !4047)
!4064 = !DILocation(line: 292, column: 34, scope: !4040)
!4065 = !DILocation(line: 292, column: 5, scope: !4040)
!4066 = !DILocation(line: 299, column: 5, scope: !629)
!4067 = !DILocation(line: 300, column: 1, scope: !629)
!4068 = !DILocation(line: 322, column: 29, scope: !660)
!4069 = !DILocation(line: 322, column: 47, scope: !660)
!4070 = !DILocation(line: 323, column: 17, scope: !660)
!4071 = !DILocation(line: 323, column: 41, scope: !660)
!4072 = !DILocation(line: 323, column: 69, scope: !660)
!4073 = !DILocation(line: 324, column: 17, scope: !660)
!4074 = !DILocation(line: 324, column: 41, scope: !660)
!4075 = !DILocation(line: 324, column: 69, scope: !660)
!4076 = !DILocation(line: 325, column: 17, scope: !660)
!4077 = !DILocation(line: 327, column: 9, scope: !675)
!4078 = !DILocation(line: 327, column: 13, scope: !675)
!4079 = !DILocation(line: 327, column: 9, scope: !660)
!4080 = !DILocation(line: 328, column: 9, scope: !674)
!4081 = !DILocation(line: 328, column: 20, scope: !674)
!4082 = !DILocation(line: 328, column: 27, scope: !674)
!4083 = !DILocation(line: 328, column: 38, scope: !674)
!4084 = !DILocation(line: 328, column: 36, scope: !674)
!4085 = !DILocation(line: 329, column: 13, scope: !4086)
!4086 = distinct !DILexicalBlock(scope: !674, file: !420, line: 329, column: 13)
!4087 = !DILocation(line: 329, column: 20, scope: !4086)
!4088 = !DILocation(line: 329, column: 18, scope: !4086)
!4089 = !DILocation(line: 329, column: 27, scope: !4086)
!4090 = !DILocation(line: 329, column: 25, scope: !4086)
!4091 = !DILocation(line: 329, column: 32, scope: !4086)
!4092 = !DILocation(line: 329, column: 35, scope: !4093)
!4093 = !DILexicalBlockFile(scope: !4086, file: !420, discriminator: 1)
!4094 = !DILocation(line: 329, column: 42, scope: !4086)
!4095 = !DILocation(line: 329, column: 40, scope: !4086)
!4096 = !DILocation(line: 329, column: 49, scope: !4086)
!4097 = !DILocation(line: 329, column: 47, scope: !4086)
!4098 = !DILocation(line: 329, column: 13, scope: !674)
!4099 = !DILocation(line: 330, column: 20, scope: !4086)
!4100 = !DILocation(line: 330, column: 26, scope: !4086)
!4101 = !DILocation(line: 330, column: 32, scope: !4086)
!4102 = !DILocation(line: 330, column: 13, scope: !4086)
!4103 = !DILocation(line: 332, column: 21, scope: !4086)
!4104 = !DILocation(line: 332, column: 27, scope: !4086)
!4105 = !DILocation(line: 332, column: 33, scope: !4086)
!4106 = !DILocation(line: 332, column: 13, scope: !4086)
!4107 = !DILocation(line: 333, column: 5, scope: !675)
!4108 = !DILocation(line: 333, column: 5, scope: !674)
!4109 = !DILocation(line: 335, column: 9, scope: !677)
!4110 = !DILocation(line: 335, column: 15, scope: !677)
!4111 = !DILocation(line: 336, column: 9, scope: !677)
!4112 = !DILocation(line: 336, column: 20, scope: !677)
!4113 = !DILocation(line: 337, column: 15, scope: !682)
!4114 = !DILocation(line: 337, column: 21, scope: !682)
!4115 = !DILocation(line: 337, column: 20, scope: !682)
!4116 = !DILocation(line: 337, column: 14, scope: !682)
!4117 = !DILocation(line: 337, column: 26, scope: !4118)
!4118 = !DILexicalBlockFile(scope: !4119, file: !420, discriminator: 2)
!4119 = !DILexicalBlockFile(scope: !681, file: !420, discriminator: 1)
!4120 = !DILocation(line: 337, column: 30, scope: !681)
!4121 = !DILocation(line: 337, column: 28, scope: !681)
!4122 = !DILocation(line: 337, column: 9, scope: !682)
!4123 = !DILocation(line: 338, column: 13, scope: !680)
!4124 = !DILocation(line: 338, column: 19, scope: !680)
!4125 = !DILocation(line: 338, column: 29, scope: !680)
!4126 = !DILocation(line: 338, column: 41, scope: !680)
!4127 = !DILocation(line: 338, column: 44, scope: !4128)
!4128 = !DILexicalBlockFile(scope: !680, file: !420, discriminator: 1)
!4129 = !DILocation(line: 338, column: 59, scope: !680)
!4130 = !DILocation(line: 338, column: 28, scope: !680)
!4131 = !DILocation(line: 338, column: 77, scope: !4132)
!4132 = !DILexicalBlockFile(scope: !680, file: !420, discriminator: 3)
!4133 = !DILocation(line: 338, column: 69, scope: !680)
!4134 = !DILocation(line: 338, column: 67, scope: !680)
!4135 = !DILocation(line: 338, column: 85, scope: !680)
!4136 = !DILocation(line: 338, column: 83, scope: !680)
!4137 = !DILocation(line: 338, column: 102, scope: !4138)
!4138 = !DILexicalBlockFile(scope: !4139, file: !420, discriminator: 4)
!4139 = !DILexicalBlockFile(scope: !680, file: !420, discriminator: 2)
!4140 = !DILocation(line: 338, column: 19, scope: !4141)
!4141 = !DILexicalBlockFile(scope: !4142, file: !420, discriminator: 6)
!4142 = !DILexicalBlockFile(scope: !680, file: !420, discriminator: 5)
!4143 = !DILocation(line: 339, column: 20, scope: !680)
!4144 = !DILocation(line: 339, column: 23, scope: !680)
!4145 = !DILocation(line: 339, column: 30, scope: !680)
!4146 = !DILocation(line: 339, column: 13, scope: !680)
!4147 = !DILocation(line: 340, column: 9, scope: !681)
!4148 = !DILocation(line: 340, column: 9, scope: !680)
!4149 = !DILocation(line: 337, column: 43, scope: !681)
!4150 = !DILocation(line: 337, column: 41, scope: !681)
!4151 = !DILocation(line: 337, column: 59, scope: !681)
!4152 = !DILocation(line: 337, column: 57, scope: !681)
!4153 = !DILocation(line: 337, column: 73, scope: !681)
!4154 = !DILocation(line: 337, column: 9, scope: !681)
!4155 = !DILocation(line: 341, column: 15, scope: !686)
!4156 = !DILocation(line: 341, column: 21, scope: !686)
!4157 = !DILocation(line: 341, column: 20, scope: !686)
!4158 = !DILocation(line: 341, column: 14, scope: !686)
!4159 = !DILocation(line: 341, column: 26, scope: !4160)
!4160 = !DILexicalBlockFile(scope: !4161, file: !420, discriminator: 2)
!4161 = !DILexicalBlockFile(scope: !685, file: !420, discriminator: 1)
!4162 = !DILocation(line: 341, column: 30, scope: !685)
!4163 = !DILocation(line: 341, column: 28, scope: !685)
!4164 = !DILocation(line: 341, column: 9, scope: !686)
!4165 = !DILocation(line: 342, column: 13, scope: !684)
!4166 = !DILocation(line: 342, column: 19, scope: !684)
!4167 = !DILocation(line: 342, column: 29, scope: !684)
!4168 = !DILocation(line: 342, column: 41, scope: !684)
!4169 = !DILocation(line: 342, column: 44, scope: !4170)
!4170 = !DILexicalBlockFile(scope: !684, file: !420, discriminator: 1)
!4171 = !DILocation(line: 342, column: 59, scope: !684)
!4172 = !DILocation(line: 342, column: 28, scope: !684)
!4173 = !DILocation(line: 342, column: 77, scope: !4174)
!4174 = !DILexicalBlockFile(scope: !684, file: !420, discriminator: 3)
!4175 = !DILocation(line: 342, column: 69, scope: !684)
!4176 = !DILocation(line: 342, column: 67, scope: !684)
!4177 = !DILocation(line: 342, column: 85, scope: !684)
!4178 = !DILocation(line: 342, column: 83, scope: !684)
!4179 = !DILocation(line: 342, column: 102, scope: !4180)
!4180 = !DILexicalBlockFile(scope: !4181, file: !420, discriminator: 4)
!4181 = !DILexicalBlockFile(scope: !684, file: !420, discriminator: 2)
!4182 = !DILocation(line: 342, column: 19, scope: !4183)
!4183 = !DILexicalBlockFile(scope: !4184, file: !420, discriminator: 6)
!4184 = !DILexicalBlockFile(scope: !684, file: !420, discriminator: 5)
!4185 = !DILocation(line: 343, column: 20, scope: !684)
!4186 = !DILocation(line: 343, column: 27, scope: !684)
!4187 = !DILocation(line: 343, column: 30, scope: !684)
!4188 = !DILocation(line: 343, column: 13, scope: !684)
!4189 = !DILocation(line: 344, column: 9, scope: !685)
!4190 = !DILocation(line: 344, column: 9, scope: !684)
!4191 = !DILocation(line: 341, column: 43, scope: !685)
!4192 = !DILocation(line: 341, column: 41, scope: !685)
!4193 = !DILocation(line: 341, column: 59, scope: !685)
!4194 = !DILocation(line: 341, column: 57, scope: !685)
!4195 = !DILocation(line: 341, column: 73, scope: !685)
!4196 = !DILocation(line: 341, column: 9, scope: !685)
!4197 = !DILocation(line: 345, column: 5, scope: !675)
!4198 = !DILocation(line: 347, column: 1, scope: !660)
!4199 = !DILocation(line: 1025, column: 37, scope: !724)
!4200 = !DILocation(line: 1027, column: 9, scope: !4201)
!4201 = distinct !DILexicalBlock(scope: !724, file: !420, line: 1027, column: 9)
!4202 = !DILocation(line: 1027, column: 15, scope: !4201)
!4203 = !DILocation(line: 1027, column: 21, scope: !4201)
!4204 = !DILocation(line: 1027, column: 9, scope: !724)
!4205 = !DILocation(line: 1028, column: 9, scope: !4201)
!4206 = !DILocation(line: 1030, column: 9, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !724, file: !420, line: 1030, column: 9)
!4208 = !DILocation(line: 1030, column: 15, scope: !4207)
!4209 = !DILocation(line: 1030, column: 23, scope: !4207)
!4210 = !DILocation(line: 1030, column: 9, scope: !724)
!4211 = !DILocation(line: 1031, column: 9, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4207, file: !420, line: 1030, column: 29)
!4213 = !DILocation(line: 1031, column: 15, scope: !4212)
!4214 = !DILocation(line: 1031, column: 21, scope: !4212)
!4215 = !DILocation(line: 1033, column: 15, scope: !4216)
!4216 = distinct !DILexicalBlock(scope: !4212, file: !420, line: 1033, column: 13)
!4217 = !DILocation(line: 1033, column: 21, scope: !4216)
!4218 = !DILocation(line: 1033, column: 27, scope: !4216)
!4219 = !DILocation(line: 1033, column: 13, scope: !4216)
!4220 = !DILocation(line: 1033, column: 35, scope: !4216)
!4221 = !DILocation(line: 1033, column: 13, scope: !4212)
!4222 = !DILocation(line: 1034, column: 26, scope: !4216)
!4223 = !DILocation(line: 1034, column: 32, scope: !4216)
!4224 = !DILocation(line: 1034, column: 13, scope: !4216)
!4225 = !DILocation(line: 1035, column: 9, scope: !4212)
!4226 = !DILocation(line: 1037, column: 9, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !724, file: !420, line: 1037, column: 9)
!4228 = !DILocation(line: 1037, column: 15, scope: !4227)
!4229 = !DILocation(line: 1037, column: 23, scope: !4227)
!4230 = !DILocation(line: 1037, column: 9, scope: !724)
!4231 = !DILocation(line: 1038, column: 22, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4227, file: !420, line: 1037, column: 28)
!4233 = !DILocation(line: 1039, column: 53, scope: !4232)
!4234 = !DILocation(line: 1039, column: 59, scope: !4232)
!4235 = !DILocation(line: 1040, column: 13, scope: !4232)
!4236 = !DILocation(line: 1040, column: 19, scope: !4232)
!4237 = !DILocation(line: 1040, column: 26, scope: !4232)
!4238 = !DILocation(line: 1038, column: 9, scope: !4232)
!4239 = !DILocation(line: 1041, column: 9, scope: !4232)
!4240 = !DILocation(line: 1044, column: 5, scope: !724)
!4241 = !DILocation(line: 1046, column: 1, scope: !724)
!4242 = !DILocation(line: 2390, column: 35, scope: !734)
!4243 = !DILocation(line: 2392, column: 33, scope: !4244)
!4244 = distinct !DILexicalBlock(scope: !734, file: !420, line: 2392, column: 9)
!4245 = !DILocation(line: 2392, column: 40, scope: !4244)
!4246 = !DILocation(line: 2392, column: 45, scope: !4244)
!4247 = !DILocation(line: 2392, column: 52, scope: !4244)
!4248 = !DILocation(line: 2392, column: 78, scope: !4249)
!4249 = !DILexicalBlockFile(scope: !4244, file: !420, discriminator: 2)
!4250 = !DILocation(line: 2392, column: 85, scope: !4244)
!4251 = !DILocation(line: 2392, column: 91, scope: !4244)
!4252 = !DILocation(line: 2392, column: 96, scope: !4244)
!4253 = !DILocation(line: 2392, column: 9, scope: !734)
!4254 = !DILocation(line: 2392, column: 123, scope: !4255)
!4255 = !DILexicalBlockFile(scope: !4256, file: !420, discriminator: 3)
!4256 = !DILexicalBlockFile(scope: !4257, file: !420, discriminator: 1)
!4257 = distinct !DILexicalBlock(scope: !4244, file: !420, line: 2392, column: 105)
!4258 = !DILocation(line: 2392, column: 107, scope: !4257)
!4259 = !DILocation(line: 2392, column: 195, scope: !4257)
!4260 = !DILocation(line: 2393, column: 12, scope: !734)
!4261 = !DILocation(line: 2393, column: 18, scope: !734)
!4262 = !DILocation(line: 2393, column: 23, scope: !734)
!4263 = !DILocation(line: 2393, column: 28, scope: !734)
!4264 = !DILocation(line: 2393, column: 12, scope: !4265)
!4265 = !DILexicalBlockFile(scope: !734, file: !420, discriminator: 1)
!4266 = !DILocation(line: 2393, column: 39, scope: !4267)
!4267 = !DILexicalBlockFile(scope: !734, file: !420, discriminator: 2)
!4268 = !DILocation(line: 2393, column: 45, scope: !734)
!4269 = !DILocation(line: 2393, column: 50, scope: !734)
!4270 = !DILocation(line: 2393, column: 39, scope: !734)
!4271 = !DILocation(line: 2393, column: 5, scope: !4272)
!4272 = !DILexicalBlockFile(scope: !4273, file: !420, discriminator: 4)
!4273 = !DILexicalBlockFile(scope: !734, file: !420, discriminator: 3)
!4274 = !DILocation(line: 2394, column: 1, scope: !734)
!4275 = !DILocation(line: 2160, column: 33, scope: !739)
!4276 = !DILocation(line: 2160, column: 50, scope: !739)
!4277 = !DILocation(line: 2162, column: 5, scope: !739)
!4278 = !DILocation(line: 2162, column: 16, scope: !739)
!4279 = !DILocation(line: 2162, column: 25, scope: !739)
!4280 = !DILocation(line: 2162, column: 31, scope: !739)
!4281 = !DILocation(line: 2163, column: 5, scope: !739)
!4282 = !DILocation(line: 2163, column: 17, scope: !739)
!4283 = !DILocation(line: 2165, column: 33, scope: !4284)
!4284 = distinct !DILexicalBlock(scope: !739, file: !420, line: 2165, column: 9)
!4285 = !DILocation(line: 2165, column: 40, scope: !4284)
!4286 = !DILocation(line: 2165, column: 45, scope: !4284)
!4287 = !DILocation(line: 2165, column: 52, scope: !4284)
!4288 = !DILocation(line: 2165, column: 78, scope: !4289)
!4289 = !DILexicalBlockFile(scope: !4284, file: !420, discriminator: 2)
!4290 = !DILocation(line: 2165, column: 85, scope: !4284)
!4291 = !DILocation(line: 2165, column: 91, scope: !4284)
!4292 = !DILocation(line: 2165, column: 96, scope: !4284)
!4293 = !DILocation(line: 2165, column: 9, scope: !739)
!4294 = !DILocation(line: 2165, column: 123, scope: !4295)
!4295 = !DILexicalBlockFile(scope: !4296, file: !420, discriminator: 3)
!4296 = !DILexicalBlockFile(scope: !4297, file: !420, discriminator: 1)
!4297 = distinct !DILexicalBlock(scope: !4284, file: !420, line: 2165, column: 105)
!4298 = !DILocation(line: 2165, column: 107, scope: !4297)
!4299 = !DILocation(line: 2165, column: 195, scope: !4297)
!4300 = !DILocation(line: 2167, column: 22, scope: !739)
!4301 = !DILocation(line: 2167, column: 11, scope: !739)
!4302 = !DILocation(line: 2167, column: 9, scope: !739)
!4303 = !DILocation(line: 2168, column: 9, scope: !4304)
!4304 = distinct !DILexicalBlock(scope: !739, file: !420, line: 2168, column: 9)
!4305 = !DILocation(line: 2168, column: 13, scope: !4304)
!4306 = !DILocation(line: 2168, column: 9, scope: !739)
!4307 = !DILocation(line: 2169, column: 9, scope: !4304)
!4308 = !DILocation(line: 2171, column: 9, scope: !4309)
!4309 = distinct !DILexicalBlock(scope: !739, file: !420, line: 2171, column: 9)
!4310 = !DILocation(line: 2171, column: 15, scope: !4309)
!4311 = !DILocation(line: 2171, column: 20, scope: !4309)
!4312 = !DILocation(line: 2171, column: 9, scope: !739)
!4313 = !DILocation(line: 2172, column: 25, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4309, file: !420, line: 2171, column: 26)
!4315 = !DILocation(line: 2172, column: 9, scope: !4314)
!4316 = !DILocation(line: 2173, column: 9, scope: !4314)
!4317 = !DILocation(line: 2175, column: 9, scope: !749)
!4318 = !DILocation(line: 2175, column: 15, scope: !749)
!4319 = !DILocation(line: 2175, column: 20, scope: !749)
!4320 = !DILocation(line: 2175, column: 9, scope: !739)
!4321 = !DILocation(line: 2176, column: 9, scope: !748)
!4322 = !DILocation(line: 2176, column: 15, scope: !748)
!4323 = !DILocation(line: 2176, column: 36, scope: !748)
!4324 = !DILocation(line: 2176, column: 42, scope: !748)
!4325 = !DILocation(line: 2176, column: 21, scope: !748)
!4326 = !DILocation(line: 2177, column: 13, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !748, file: !420, line: 2177, column: 13)
!4328 = !DILocation(line: 2177, column: 17, scope: !4327)
!4329 = !DILocation(line: 2177, column: 13, scope: !748)
!4330 = !DILocation(line: 2178, column: 13, scope: !4327)
!4331 = !DILocation(line: 2179, column: 30, scope: !748)
!4332 = !DILocation(line: 2179, column: 35, scope: !748)
!4333 = !DILocation(line: 2179, column: 16, scope: !748)
!4334 = !DILocation(line: 2179, column: 9, scope: !748)
!4335 = !DILocation(line: 2180, column: 5, scope: !749)
!4336 = !DILocation(line: 2182, column: 21, scope: !739)
!4337 = !DILocation(line: 2182, column: 5, scope: !739)
!4338 = !DILocation(line: 2184, column: 5, scope: !739)
!4339 = !DILocation(line: 2185, column: 1, scope: !739)
!4340 = !DILocation(line: 1988, column: 29, scope: !750)
!4341 = !DILocation(line: 1990, column: 5, scope: !750)
!4342 = !DILocation(line: 1990, column: 17, scope: !750)
!4343 = !DILocation(line: 1992, column: 12, scope: !750)
!4344 = !DILocation(line: 1992, column: 18, scope: !750)
!4345 = !DILocation(line: 1992, column: 28, scope: !750)
!4346 = !DILocation(line: 1992, column: 11, scope: !750)
!4347 = !DILocation(line: 1992, column: 38, scope: !4348)
!4348 = !DILexicalBlockFile(scope: !750, file: !420, discriminator: 1)
!4349 = !DILocation(line: 1992, column: 44, scope: !750)
!4350 = !DILocation(line: 1992, column: 50, scope: !750)
!4351 = !DILocation(line: 1992, column: 55, scope: !4352)
!4352 = !DILexicalBlockFile(scope: !750, file: !420, discriminator: 2)
!4353 = !DILocation(line: 1992, column: 61, scope: !750)
!4354 = !DILocation(line: 1992, column: 9, scope: !4355)
!4355 = !DILexicalBlockFile(scope: !4356, file: !420, discriminator: 4)
!4356 = !DILexicalBlockFile(scope: !750, file: !420, discriminator: 3)
!4357 = !DILocation(line: 1993, column: 9, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !750, file: !420, line: 1993, column: 9)
!4359 = !DILocation(line: 1993, column: 16, scope: !4358)
!4360 = !DILocation(line: 1993, column: 19, scope: !4361)
!4361 = !DILexicalBlockFile(scope: !4358, file: !420, discriminator: 1)
!4362 = !DILocation(line: 1993, column: 26, scope: !4358)
!4363 = !DILocation(line: 1993, column: 9, scope: !750)
!4364 = !DILocation(line: 1994, column: 16, scope: !4358)
!4365 = !DILocation(line: 1994, column: 9, scope: !4358)
!4366 = !DILocation(line: 1996, column: 18, scope: !750)
!4367 = !DILocation(line: 1997, column: 46, scope: !750)
!4368 = !DILocation(line: 1997, column: 52, scope: !750)
!4369 = !DILocation(line: 1996, column: 5, scope: !750)
!4370 = !DILocation(line: 1998, column: 5, scope: !750)
!4371 = !DILocation(line: 1999, column: 1, scope: !750)
!4372 = !DILocation(line: 2131, column: 27, scope: !756)
!4373 = !DILocation(line: 2131, column: 44, scope: !756)
!4374 = !DILocation(line: 2133, column: 5, scope: !756)
!4375 = !DILocation(line: 2133, column: 11, scope: !756)
!4376 = !DILocation(line: 2134, column: 5, scope: !756)
!4377 = !DILocation(line: 2134, column: 16, scope: !756)
!4378 = !DILocation(line: 2139, column: 14, scope: !756)
!4379 = !DILocation(line: 2139, column: 20, scope: !756)
!4380 = !DILocation(line: 2139, column: 12, scope: !756)
!4381 = !DILocation(line: 2140, column: 9, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !756, file: !420, line: 2140, column: 9)
!4383 = !DILocation(line: 2140, column: 15, scope: !4382)
!4384 = !DILocation(line: 2140, column: 9, scope: !756)
!4385 = !DILocation(line: 2141, column: 18, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !4382, file: !420, line: 2140, column: 20)
!4387 = !DILocation(line: 2141, column: 15, scope: !4386)
!4388 = !DILocation(line: 2142, column: 5, scope: !4386)
!4389 = !DILocation(line: 2143, column: 9, scope: !4390)
!4390 = distinct !DILexicalBlock(scope: !756, file: !420, line: 2143, column: 9)
!4391 = !DILocation(line: 2143, column: 15, scope: !4390)
!4392 = !DILocation(line: 2143, column: 19, scope: !4390)
!4393 = !DILocation(line: 2143, column: 22, scope: !4394)
!4394 = !DILexicalBlockFile(scope: !4390, file: !420, discriminator: 1)
!4395 = !DILocation(line: 2143, column: 31, scope: !4390)
!4396 = !DILocation(line: 2143, column: 28, scope: !4390)
!4397 = !DILocation(line: 2143, column: 9, scope: !756)
!4398 = !DILocation(line: 2144, column: 25, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4390, file: !420, line: 2143, column: 39)
!4400 = !DILocation(line: 2144, column: 9, scope: !4399)
!4401 = !DILocation(line: 2145, column: 9, scope: !4399)
!4402 = !DILocation(line: 2148, column: 19, scope: !756)
!4403 = !DILocation(line: 2148, column: 25, scope: !756)
!4404 = !DILocation(line: 2148, column: 9, scope: !756)
!4405 = !DILocation(line: 2149, column: 12, scope: !756)
!4406 = !DILocation(line: 2149, column: 18, scope: !756)
!4407 = !DILocation(line: 2149, column: 31, scope: !756)
!4408 = !DILocation(line: 2149, column: 29, scope: !756)
!4409 = !DILocation(line: 2149, column: 9, scope: !756)
!4410 = !DILocation(line: 2151, column: 13, scope: !756)
!4411 = !DILocation(line: 2151, column: 19, scope: !756)
!4412 = !DILocation(line: 2151, column: 30, scope: !756)
!4413 = !DILocation(line: 2151, column: 33, scope: !4414)
!4414 = !DILexicalBlockFile(scope: !756, file: !420, discriminator: 1)
!4415 = !DILocation(line: 2151, column: 39, scope: !756)
!4416 = !DILocation(line: 2151, column: 33, scope: !756)
!4417 = !DILocation(line: 2151, column: 53, scope: !756)
!4418 = !DILocation(line: 2151, column: 12, scope: !756)
!4419 = !DILocation(line: 2151, column: 71, scope: !4420)
!4420 = !DILexicalBlockFile(scope: !756, file: !420, discriminator: 3)
!4421 = !DILocation(line: 2151, column: 63, scope: !756)
!4422 = !DILocation(line: 2151, column: 61, scope: !756)
!4423 = !DILocation(line: 2151, column: 78, scope: !756)
!4424 = !DILocation(line: 2151, column: 84, scope: !756)
!4425 = !DILocation(line: 2151, column: 76, scope: !756)
!4426 = !DILocation(line: 2151, column: 100, scope: !4427)
!4427 = !DILexicalBlockFile(scope: !4428, file: !420, discriminator: 4)
!4428 = !DILexicalBlockFile(scope: !756, file: !420, discriminator: 2)
!4429 = !DILocation(line: 2151, column: 9, scope: !4430)
!4430 = !DILexicalBlockFile(scope: !4431, file: !420, discriminator: 6)
!4431 = !DILexicalBlockFile(scope: !756, file: !420, discriminator: 5)
!4432 = !DILocation(line: 2153, column: 12, scope: !756)
!4433 = !DILocation(line: 2153, column: 5, scope: !756)
!4434 = !DILocation(line: 2154, column: 1, scope: !756)
!4435 = !DILocation(line: 1620, column: 27, scope: !764)
!4436 = !DILocation(line: 1620, column: 44, scope: !764)
!4437 = !DILocation(line: 1622, column: 5, scope: !764)
!4438 = !DILocation(line: 1622, column: 24, scope: !764)
!4439 = !DILocation(line: 1623, column: 5, scope: !764)
!4440 = !DILocation(line: 1623, column: 19, scope: !764)
!4441 = !DILocation(line: 1624, column: 5, scope: !764)
!4442 = !DILocation(line: 1624, column: 12, scope: !764)
!4443 = !DILocation(line: 1625, column: 5, scope: !764)
!4444 = !DILocation(line: 1625, column: 15, scope: !764)
!4445 = !DILocation(line: 1626, column: 5, scope: !764)
!4446 = !DILocation(line: 1626, column: 10, scope: !764)
!4447 = !DILocation(line: 1627, column: 5, scope: !764)
!4448 = !DILocation(line: 1627, column: 16, scope: !764)
!4449 = !DILocation(line: 1628, column: 5, scope: !764)
!4450 = !DILocation(line: 1628, column: 12, scope: !764)
!4451 = !DILocation(line: 1629, column: 5, scope: !764)
!4452 = !DILocation(line: 1629, column: 19, scope: !764)
!4453 = !DILocation(line: 1630, column: 5, scope: !764)
!4454 = !DILocation(line: 1630, column: 11, scope: !764)
!4455 = !DILocation(line: 1632, column: 13, scope: !764)
!4456 = !DILocation(line: 1635, column: 39, scope: !781)
!4457 = !DILocation(line: 1635, column: 20, scope: !781)
!4458 = !DILocation(line: 1635, column: 18, scope: !781)
!4459 = !DILocation(line: 1635, column: 45, scope: !781)
!4460 = !DILocation(line: 1636, column: 37, scope: !781)
!4461 = !DILocation(line: 1636, column: 20, scope: !781)
!4462 = !DILocation(line: 1636, column: 18, scope: !781)
!4463 = !DILocation(line: 1636, column: 43, scope: !781)
!4464 = !DILocation(line: 1637, column: 15, scope: !781)
!4465 = !DILocation(line: 1637, column: 20, scope: !4466)
!4466 = !DILexicalBlockFile(scope: !780, file: !420, discriminator: 1)
!4467 = !DILocation(line: 1637, column: 26, scope: !780)
!4468 = !DILocation(line: 1637, column: 36, scope: !780)
!4469 = !DILocation(line: 1637, column: 48, scope: !780)
!4470 = !DILocation(line: 1637, column: 29, scope: !780)
!4471 = !DILocation(line: 1637, column: 69, scope: !780)
!4472 = !{!4473, !4473, i64 0}
!4473 = !{!"short", !1536, i64 0}
!4474 = !DILocation(line: 1637, column: 67, scope: !780)
!4475 = !DILocation(line: 1637, column: 72, scope: !781)
!4476 = !DILocation(line: 1637, column: 72, scope: !780)
!4477 = !DILocation(line: 1637, column: 72, scope: !4478)
!4478 = !DILexicalBlockFile(scope: !780, file: !420, discriminator: 2)
!4479 = !DILocation(line: 1637, column: 85, scope: !4480)
!4480 = !DILexicalBlockFile(scope: !781, file: !420, discriminator: 3)
!4481 = !DILocation(line: 1638, column: 15, scope: !781)
!4482 = !DILocation(line: 1638, column: 20, scope: !4483)
!4483 = !DILexicalBlockFile(scope: !783, file: !420, discriminator: 1)
!4484 = !DILocation(line: 1638, column: 24, scope: !783)
!4485 = !DILocation(line: 1638, column: 34, scope: !783)
!4486 = !DILocation(line: 1638, column: 46, scope: !783)
!4487 = !DILocation(line: 1638, column: 27, scope: !783)
!4488 = !DILocation(line: 1638, column: 67, scope: !783)
!4489 = !DILocation(line: 1638, column: 65, scope: !783)
!4490 = !DILocation(line: 1638, column: 70, scope: !781)
!4491 = !DILocation(line: 1638, column: 70, scope: !783)
!4492 = !DILocation(line: 1638, column: 70, scope: !4493)
!4493 = !DILexicalBlockFile(scope: !783, file: !420, discriminator: 2)
!4494 = !DILocation(line: 1638, column: 83, scope: !4480)
!4495 = !DILocation(line: 1639, column: 15, scope: !781)
!4496 = !DILocation(line: 1639, column: 20, scope: !4497)
!4497 = !DILexicalBlockFile(scope: !785, file: !420, discriminator: 1)
!4498 = !DILocation(line: 1639, column: 25, scope: !785)
!4499 = !DILocation(line: 1639, column: 35, scope: !785)
!4500 = !DILocation(line: 1639, column: 47, scope: !785)
!4501 = !DILocation(line: 1639, column: 28, scope: !785)
!4502 = !DILocation(line: 1639, column: 68, scope: !785)
!4503 = !DILocation(line: 1639, column: 66, scope: !785)
!4504 = !DILocation(line: 1639, column: 71, scope: !781)
!4505 = !DILocation(line: 1639, column: 71, scope: !785)
!4506 = !DILocation(line: 1639, column: 71, scope: !4507)
!4507 = !DILexicalBlockFile(scope: !785, file: !420, discriminator: 2)
!4508 = !DILocation(line: 1639, column: 84, scope: !4480)
!4509 = !DILocation(line: 1643, column: 15, scope: !781)
!4510 = !DILocation(line: 1643, column: 20, scope: !787)
!4511 = !DILocation(line: 1643, column: 26, scope: !787)
!4512 = !DILocation(line: 1643, column: 48, scope: !4513)
!4513 = !DILexicalBlockFile(scope: !787, file: !420, discriminator: 1)
!4514 = !DILocation(line: 1643, column: 29, scope: !787)
!4515 = !DILocation(line: 1643, column: 69, scope: !787)
!4516 = !{!4517, !4517, i64 0}
!4517 = !{!"_Bool", !1536, i64 0}
!4518 = !{i8 0, i8 2}
!4519 = !DILocation(line: 1643, column: 67, scope: !787)
!4520 = !DILocation(line: 1643, column: 72, scope: !781)
!4521 = !DILocation(line: 1643, column: 72, scope: !787)
!4522 = !DILocation(line: 1643, column: 72, scope: !4523)
!4523 = !DILexicalBlockFile(scope: !787, file: !420, discriminator: 2)
!4524 = !DILocation(line: 1643, column: 85, scope: !4480)
!4525 = !DILocation(line: 1649, column: 15, scope: !781)
!4526 = !DILocation(line: 1649, column: 20, scope: !4527)
!4527 = !DILexicalBlockFile(scope: !789, file: !420, discriminator: 1)
!4528 = !DILocation(line: 1649, column: 35, scope: !789)
!4529 = !DILocation(line: 1649, column: 45, scope: !789)
!4530 = !DILocation(line: 1649, column: 57, scope: !789)
!4531 = !DILocation(line: 1649, column: 38, scope: !789)
!4532 = !DILocation(line: 1649, column: 78, scope: !789)
!4533 = !DILocation(line: 1649, column: 76, scope: !789)
!4534 = !DILocation(line: 1649, column: 81, scope: !781)
!4535 = !DILocation(line: 1649, column: 81, scope: !789)
!4536 = !DILocation(line: 1649, column: 81, scope: !4537)
!4537 = !DILexicalBlockFile(scope: !789, file: !420, discriminator: 2)
!4538 = !DILocation(line: 1649, column: 94, scope: !4480)
!4539 = !DILocation(line: 1650, column: 15, scope: !781)
!4540 = !DILocation(line: 1650, column: 20, scope: !4541)
!4541 = !DILexicalBlockFile(scope: !791, file: !420, discriminator: 1)
!4542 = !DILocation(line: 1650, column: 33, scope: !791)
!4543 = !DILocation(line: 1650, column: 43, scope: !791)
!4544 = !DILocation(line: 1650, column: 55, scope: !791)
!4545 = !DILocation(line: 1650, column: 36, scope: !791)
!4546 = !DILocation(line: 1650, column: 76, scope: !791)
!4547 = !DILocation(line: 1650, column: 74, scope: !791)
!4548 = !DILocation(line: 1650, column: 79, scope: !781)
!4549 = !DILocation(line: 1650, column: 79, scope: !791)
!4550 = !DILocation(line: 1650, column: 79, scope: !4551)
!4551 = !DILexicalBlockFile(scope: !791, file: !420, discriminator: 2)
!4552 = !DILocation(line: 1650, column: 92, scope: !4480)
!4553 = !DILocation(line: 1651, column: 15, scope: !781)
!4554 = !DILocation(line: 1651, column: 20, scope: !4555)
!4555 = !DILexicalBlockFile(scope: !793, file: !420, discriminator: 1)
!4556 = !DILocation(line: 1651, column: 34, scope: !793)
!4557 = !DILocation(line: 1651, column: 44, scope: !793)
!4558 = !DILocation(line: 1651, column: 56, scope: !793)
!4559 = !DILocation(line: 1651, column: 37, scope: !793)
!4560 = !DILocation(line: 1651, column: 77, scope: !793)
!4561 = !DILocation(line: 1651, column: 75, scope: !793)
!4562 = !DILocation(line: 1651, column: 80, scope: !781)
!4563 = !DILocation(line: 1651, column: 80, scope: !793)
!4564 = !DILocation(line: 1651, column: 80, scope: !4565)
!4565 = !DILexicalBlockFile(scope: !793, file: !420, discriminator: 2)
!4566 = !DILocation(line: 1651, column: 93, scope: !4480)
!4567 = !DILocation(line: 1655, column: 15, scope: !781)
!4568 = !DILocation(line: 1655, column: 20, scope: !4569)
!4569 = !DILexicalBlockFile(scope: !795, file: !420, discriminator: 1)
!4570 = !DILocation(line: 1655, column: 30, scope: !795)
!4571 = !DILocation(line: 1655, column: 40, scope: !795)
!4572 = !DILocation(line: 1655, column: 52, scope: !795)
!4573 = !DILocation(line: 1655, column: 33, scope: !795)
!4574 = !DILocation(line: 1655, column: 74, scope: !795)
!4575 = !{!4576, !4576, i64 0}
!4576 = !{!"long long", !1536, i64 0}
!4577 = !DILocation(line: 1655, column: 72, scope: !795)
!4578 = !DILocation(line: 1655, column: 77, scope: !781)
!4579 = !DILocation(line: 1655, column: 77, scope: !795)
!4580 = !DILocation(line: 1655, column: 77, scope: !4581)
!4581 = !DILexicalBlockFile(scope: !795, file: !420, discriminator: 2)
!4582 = !DILocation(line: 1655, column: 90, scope: !4480)
!4583 = !DILocation(line: 1656, column: 15, scope: !781)
!4584 = !DILocation(line: 1656, column: 20, scope: !4585)
!4585 = !DILexicalBlockFile(scope: !797, file: !420, discriminator: 1)
!4586 = !DILocation(line: 1656, column: 39, scope: !797)
!4587 = !DILocation(line: 1656, column: 49, scope: !797)
!4588 = !DILocation(line: 1656, column: 61, scope: !797)
!4589 = !DILocation(line: 1656, column: 42, scope: !797)
!4590 = !DILocation(line: 1656, column: 83, scope: !797)
!4591 = !DILocation(line: 1656, column: 81, scope: !797)
!4592 = !DILocation(line: 1656, column: 86, scope: !781)
!4593 = !DILocation(line: 1656, column: 86, scope: !797)
!4594 = !DILocation(line: 1656, column: 86, scope: !4595)
!4595 = !DILexicalBlockFile(scope: !797, file: !420, discriminator: 2)
!4596 = !DILocation(line: 1656, column: 99, scope: !4480)
!4597 = !DILocation(line: 1660, column: 15, scope: !781)
!4598 = !DILocation(line: 1660, column: 20, scope: !4599)
!4599 = !DILexicalBlockFile(scope: !799, file: !420, discriminator: 1)
!4600 = !DILocation(line: 1660, column: 31, scope: !799)
!4601 = !DILocation(line: 1660, column: 41, scope: !799)
!4602 = !DILocation(line: 1660, column: 53, scope: !799)
!4603 = !DILocation(line: 1660, column: 34, scope: !799)
!4604 = !DILocation(line: 1660, column: 74, scope: !799)
!4605 = !DILocation(line: 1660, column: 72, scope: !799)
!4606 = !DILocation(line: 1660, column: 77, scope: !781)
!4607 = !DILocation(line: 1660, column: 77, scope: !799)
!4608 = !DILocation(line: 1660, column: 77, scope: !4609)
!4609 = !DILexicalBlockFile(scope: !799, file: !420, discriminator: 2)
!4610 = !DILocation(line: 1660, column: 90, scope: !4480)
!4611 = !DILocation(line: 1661, column: 15, scope: !781)
!4612 = !DILocation(line: 1661, column: 20, scope: !4613)
!4613 = !DILexicalBlockFile(scope: !801, file: !420, discriminator: 1)
!4614 = !DILocation(line: 1661, column: 27, scope: !801)
!4615 = !DILocation(line: 1661, column: 37, scope: !801)
!4616 = !DILocation(line: 1661, column: 49, scope: !801)
!4617 = !DILocation(line: 1661, column: 30, scope: !801)
!4618 = !DILocation(line: 1661, column: 70, scope: !801)
!4619 = !DILocation(line: 1661, column: 68, scope: !801)
!4620 = !DILocation(line: 1661, column: 73, scope: !781)
!4621 = !DILocation(line: 1661, column: 73, scope: !801)
!4622 = !DILocation(line: 1661, column: 73, scope: !4623)
!4623 = !DILexicalBlockFile(scope: !801, file: !420, discriminator: 2)
!4624 = !DILocation(line: 1661, column: 86, scope: !4480)
!4625 = !DILocation(line: 1664, column: 15, scope: !781)
!4626 = !DILocation(line: 1664, column: 20, scope: !4627)
!4627 = !DILexicalBlockFile(scope: !803, file: !420, discriminator: 1)
!4628 = !DILocation(line: 1664, column: 26, scope: !803)
!4629 = !DILocation(line: 1664, column: 36, scope: !803)
!4630 = !DILocation(line: 1664, column: 48, scope: !803)
!4631 = !DILocation(line: 1664, column: 29, scope: !803)
!4632 = !DILocation(line: 1664, column: 68, scope: !803)
!4633 = !{!4634, !4634, i64 0}
!4634 = !{!"float", !1536, i64 0}
!4635 = !DILocation(line: 1664, column: 66, scope: !803)
!4636 = !{!4637, !4637, i64 0}
!4637 = !{!"double", !1536, i64 0}
!4638 = !DILocation(line: 1664, column: 71, scope: !781)
!4639 = !DILocation(line: 1664, column: 71, scope: !803)
!4640 = !DILocation(line: 1664, column: 71, scope: !4641)
!4641 = !DILexicalBlockFile(scope: !803, file: !420, discriminator: 2)
!4642 = !DILocation(line: 1664, column: 84, scope: !4480)
!4643 = !DILocation(line: 1665, column: 15, scope: !781)
!4644 = !DILocation(line: 1665, column: 20, scope: !4645)
!4645 = !DILexicalBlockFile(scope: !805, file: !420, discriminator: 1)
!4646 = !DILocation(line: 1665, column: 27, scope: !805)
!4647 = !DILocation(line: 1665, column: 37, scope: !805)
!4648 = !DILocation(line: 1665, column: 49, scope: !805)
!4649 = !DILocation(line: 1665, column: 30, scope: !805)
!4650 = !DILocation(line: 1665, column: 69, scope: !805)
!4651 = !DILocation(line: 1665, column: 67, scope: !805)
!4652 = !DILocation(line: 1665, column: 72, scope: !781)
!4653 = !DILocation(line: 1665, column: 72, scope: !805)
!4654 = !DILocation(line: 1665, column: 72, scope: !4655)
!4655 = !DILexicalBlockFile(scope: !805, file: !420, discriminator: 2)
!4656 = !DILocation(line: 1665, column: 85, scope: !4480)
!4657 = !DILocation(line: 1668, column: 15, scope: !781)
!4658 = !DILocation(line: 1671, column: 15, scope: !781)
!4659 = !DILocation(line: 1671, column: 20, scope: !4660)
!4660 = !DILexicalBlockFile(scope: !807, file: !420, discriminator: 1)
!4661 = !DILocation(line: 1671, column: 27, scope: !807)
!4662 = !DILocation(line: 1671, column: 37, scope: !807)
!4663 = !DILocation(line: 1671, column: 49, scope: !807)
!4664 = !DILocation(line: 1671, column: 30, scope: !807)
!4665 = !DILocation(line: 1671, column: 69, scope: !807)
!4666 = !DILocation(line: 1671, column: 67, scope: !807)
!4667 = !DILocation(line: 1671, column: 72, scope: !781)
!4668 = !DILocation(line: 1671, column: 72, scope: !807)
!4669 = !DILocation(line: 1671, column: 72, scope: !4670)
!4670 = !DILexicalBlockFile(scope: !807, file: !420, discriminator: 2)
!4671 = !DILocation(line: 1671, column: 85, scope: !4480)
!4672 = !DILocation(line: 1674, column: 14, scope: !781)
!4673 = !DILocation(line: 1679, column: 28, scope: !764)
!4674 = !DILocation(line: 1679, column: 12, scope: !764)
!4675 = !DILocation(line: 1679, column: 5, scope: !764)
!4676 = !DILocation(line: 1681, column: 28, scope: !764)
!4677 = !DILocation(line: 1681, column: 12, scope: !764)
!4678 = !DILocation(line: 1681, column: 5, scope: !764)
!4679 = !DILocation(line: 1683, column: 36, scope: !764)
!4680 = !DILocation(line: 1683, column: 12, scope: !764)
!4681 = !DILocation(line: 1683, column: 5, scope: !764)
!4682 = !DILocation(line: 1685, column: 32, scope: !764)
!4683 = !DILocation(line: 1685, column: 12, scope: !764)
!4684 = !DILocation(line: 1685, column: 5, scope: !764)
!4685 = !DILocation(line: 1687, column: 40, scope: !764)
!4686 = !DILocation(line: 1687, column: 12, scope: !764)
!4687 = !DILocation(line: 1687, column: 5, scope: !764)
!4688 = !DILocation(line: 1689, column: 31, scope: !764)
!4689 = !DILocation(line: 1689, column: 12, scope: !764)
!4690 = !DILocation(line: 1689, column: 5, scope: !764)
!4691 = !DILocation(line: 1691, column: 30, scope: !764)
!4692 = !DILocation(line: 1691, column: 12, scope: !764)
!4693 = !DILocation(line: 1691, column: 5, scope: !764)
!4694 = !DILocation(line: 1693, column: 31, scope: !764)
!4695 = !DILocation(line: 1693, column: 12, scope: !764)
!4696 = !DILocation(line: 1693, column: 5, scope: !764)
!4697 = !DILocation(line: 1695, column: 28, scope: !764)
!4698 = !DILocation(line: 1695, column: 12, scope: !764)
!4699 = !DILocation(line: 1695, column: 5, scope: !764)
!4700 = !DILocation(line: 1697, column: 38, scope: !764)
!4701 = !DILocation(line: 1697, column: 12, scope: !764)
!4702 = !DILocation(line: 1697, column: 5, scope: !764)
!4703 = !DILocation(line: 1699, column: 31, scope: !764)
!4704 = !DILocation(line: 1699, column: 12, scope: !764)
!4705 = !DILocation(line: 1699, column: 5, scope: !764)
!4706 = !DILocation(line: 1701, column: 18, scope: !764)
!4707 = !DILocation(line: 1702, column: 48, scope: !764)
!4708 = !DILocation(line: 1701, column: 5, scope: !764)
!4709 = !DILocation(line: 1703, column: 5, scope: !764)
!4710 = !DILocation(line: 1704, column: 1, scope: !764)
!4711 = !DILocation(line: 2242, column: 38, scope: !808)
!4712 = !DILocation(line: 2242, column: 54, scope: !808)
!4713 = !DILocation(line: 2244, column: 5, scope: !808)
!4714 = !DILocation(line: 2244, column: 16, scope: !808)
!4715 = !DILocation(line: 2245, column: 14, scope: !808)
!4716 = !DILocation(line: 2245, column: 20, scope: !808)
!4717 = !DILocation(line: 2245, column: 10, scope: !808)
!4718 = !DILocation(line: 2247, column: 33, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !808, file: !420, line: 2247, column: 9)
!4720 = !DILocation(line: 2247, column: 40, scope: !4719)
!4721 = !DILocation(line: 2247, column: 45, scope: !4719)
!4722 = !DILocation(line: 2247, column: 52, scope: !4719)
!4723 = !DILocation(line: 2247, column: 78, scope: !4724)
!4724 = !DILexicalBlockFile(scope: !4719, file: !420, discriminator: 2)
!4725 = !DILocation(line: 2247, column: 85, scope: !4719)
!4726 = !DILocation(line: 2247, column: 91, scope: !4719)
!4727 = !DILocation(line: 2247, column: 96, scope: !4719)
!4728 = !DILocation(line: 2247, column: 9, scope: !808)
!4729 = !DILocation(line: 2247, column: 123, scope: !4730)
!4730 = !DILexicalBlockFile(scope: !4731, file: !420, discriminator: 3)
!4731 = !DILexicalBlockFile(scope: !4732, file: !420, discriminator: 1)
!4732 = distinct !DILexicalBlock(scope: !4719, file: !420, line: 2247, column: 105)
!4733 = !DILocation(line: 2247, column: 107, scope: !4732)
!4734 = !DILocation(line: 2247, column: 195, scope: !4732)
!4735 = !DILocation(line: 2249, column: 9, scope: !819)
!4736 = !DILocation(line: 2249, column: 15, scope: !819)
!4737 = !DILocation(line: 2249, column: 20, scope: !819)
!4738 = !DILocation(line: 2249, column: 9, scope: !808)
!4739 = !DILocation(line: 2250, column: 30, scope: !817)
!4740 = !DILocation(line: 2250, column: 37, scope: !817)
!4741 = !DILocation(line: 2250, column: 48, scope: !817)
!4742 = !{!1653, !1548, i64 168}
!4743 = !DILocation(line: 2250, column: 57, scope: !817)
!4744 = !DILocation(line: 2250, column: 74, scope: !817)
!4745 = !DILocation(line: 2250, column: 80, scope: !817)
!4746 = !DILocation(line: 2250, column: 100, scope: !4747)
!4747 = !DILexicalBlockFile(scope: !817, file: !420, discriminator: 1)
!4748 = !DILocation(line: 2250, column: 85, scope: !817)
!4749 = !DILocation(line: 2250, column: 107, scope: !817)
!4750 = !{!1654, !1548, i64 16}
!4751 = !DILocation(line: 2250, column: 116, scope: !817)
!4752 = !DILocation(line: 2250, column: 13, scope: !818)
!4753 = !DILocation(line: 2251, column: 13, scope: !816)
!4754 = !DILocation(line: 2251, column: 25, scope: !816)
!4755 = !DILocation(line: 2251, column: 42, scope: !816)
!4756 = !DILocation(line: 2251, column: 31, scope: !816)
!4757 = !DILocation(line: 2252, column: 17, scope: !4758)
!4758 = distinct !DILexicalBlock(scope: !816, file: !420, line: 2252, column: 17)
!4759 = !DILocation(line: 2252, column: 21, scope: !4758)
!4760 = !DILocation(line: 2252, column: 17, scope: !816)
!4761 = !DILocation(line: 2253, column: 17, scope: !4758)
!4762 = !DILocation(line: 2254, column: 34, scope: !816)
!4763 = !DILocation(line: 2254, column: 40, scope: !816)
!4764 = !DILocation(line: 2254, column: 45, scope: !816)
!4765 = !DILocation(line: 2254, column: 20, scope: !816)
!4766 = !DILocation(line: 2254, column: 13, scope: !816)
!4767 = !DILocation(line: 2255, column: 9, scope: !817)
!4768 = !DILocation(line: 2256, column: 18, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !817, file: !420, line: 2256, column: 18)
!4770 = !DILocation(line: 2256, column: 22, scope: !4769)
!4771 = !DILocation(line: 2256, column: 18, scope: !817)
!4772 = !DILocation(line: 2257, column: 29, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4769, file: !420, line: 2256, column: 48)
!4774 = !DILocation(line: 2257, column: 16, scope: !4773)
!4775 = !DILocation(line: 2257, column: 37, scope: !4773)
!4776 = !DILocation(line: 2257, column: 46, scope: !4773)
!4777 = !DILocation(line: 2258, column: 32, scope: !4773)
!4778 = !DILocation(line: 2258, column: 20, scope: !4773)
!4779 = !DILocation(line: 2258, column: 13, scope: !4773)
!4780 = !DILocation(line: 2261, column: 29, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !4769, file: !420, line: 2260, column: 14)
!4782 = !DILocation(line: 2261, column: 13, scope: !4781)
!4783 = !DILocation(line: 2263, column: 13, scope: !4781)
!4784 = !DILocation(line: 2267, column: 11, scope: !822)
!4785 = !DILocation(line: 2267, column: 17, scope: !822)
!4786 = !DILocation(line: 2267, column: 26, scope: !822)
!4787 = !{!1653, !1535, i64 96}
!4788 = !DILocation(line: 2267, column: 39, scope: !822)
!4789 = !DILocation(line: 2267, column: 53, scope: !822)
!4790 = !DILocation(line: 2267, column: 57, scope: !4791)
!4791 = !DILexicalBlockFile(scope: !822, file: !420, discriminator: 1)
!4792 = !DILocation(line: 2267, column: 63, scope: !822)
!4793 = !DILocation(line: 2267, column: 72, scope: !822)
!4794 = !DILocation(line: 2267, column: 86, scope: !822)
!4795 = !{!4796, !1535, i64 264}
!4796 = !{!"", !1535, i64 0, !1535, i64 8, !1535, i64 16, !1535, i64 24, !1535, i64 32, !1535, i64 40, !1535, i64 48, !1535, i64 56, !1535, i64 64, !1535, i64 72, !1535, i64 80, !1535, i64 88, !1535, i64 96, !1535, i64 104, !1535, i64 112, !1535, i64 120, !1535, i64 128, !1535, i64 136, !1535, i64 144, !1535, i64 152, !1535, i64 160, !1535, i64 168, !1535, i64 176, !1535, i64 184, !1535, i64 192, !1535, i64 200, !1535, i64 208, !1535, i64 216, !1535, i64 224, !1535, i64 232, !1535, i64 240, !1535, i64 248, !1535, i64 256, !1535, i64 264}
!4797 = !DILocation(line: 2267, column: 95, scope: !822)
!4798 = !DILocation(line: 2267, column: 9, scope: !808)
!4799 = !DILocation(line: 2268, column: 9, scope: !821)
!4800 = !DILocation(line: 2268, column: 20, scope: !821)
!4801 = !DILocation(line: 2269, column: 36, scope: !821)
!4802 = !DILocation(line: 2269, column: 41, scope: !821)
!4803 = !DILocation(line: 2269, column: 17, scope: !821)
!4804 = !DILocation(line: 2269, column: 15, scope: !821)
!4805 = !DILocation(line: 2270, column: 13, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !821, file: !420, line: 2270, column: 13)
!4807 = !DILocation(line: 2270, column: 19, scope: !4806)
!4808 = !DILocation(line: 2270, column: 25, scope: !4806)
!4809 = !DILocation(line: 2270, column: 28, scope: !4810)
!4810 = !DILexicalBlockFile(scope: !4806, file: !420, discriminator: 1)
!4811 = !DILocation(line: 2270, column: 13, scope: !821)
!4812 = !DILocation(line: 2271, column: 13, scope: !4806)
!4813 = !DILocation(line: 2272, column: 28, scope: !821)
!4814 = !DILocation(line: 2272, column: 34, scope: !821)
!4815 = !DILocation(line: 2272, column: 16, scope: !821)
!4816 = !DILocation(line: 2272, column: 9, scope: !821)
!4817 = !DILocation(line: 2273, column: 5, scope: !822)
!4818 = !DILocation(line: 2274, column: 29, scope: !825)
!4819 = !DILocation(line: 2274, column: 36, scope: !825)
!4820 = !DILocation(line: 2274, column: 45, scope: !825)
!4821 = !DILocation(line: 2274, column: 14, scope: !822)
!4822 = !DILocation(line: 2275, column: 9, scope: !824)
!4823 = !DILocation(line: 2275, column: 29, scope: !824)
!4824 = !DILocation(line: 2277, column: 54, scope: !824)
!4825 = !DILocation(line: 2277, column: 60, scope: !824)
!4826 = !DILocation(line: 2277, column: 66, scope: !824)
!4827 = !DILocation(line: 2277, column: 40, scope: !824)
!4828 = !DILocation(line: 2277, column: 18, scope: !824)
!4829 = !DILocation(line: 2277, column: 16, scope: !824)
!4830 = !DILocation(line: 2278, column: 13, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !824, file: !420, line: 2278, column: 13)
!4832 = !DILocation(line: 2278, column: 20, scope: !4831)
!4833 = !DILocation(line: 2278, column: 13, scope: !824)
!4834 = !DILocation(line: 2279, column: 13, scope: !4831)
!4835 = !DILocation(line: 2281, column: 25, scope: !829)
!4836 = !DILocation(line: 2281, column: 33, scope: !829)
!4837 = !DILocation(line: 2281, column: 39, scope: !829)
!4838 = !DILocation(line: 2281, column: 13, scope: !829)
!4839 = !DILocation(line: 2281, column: 47, scope: !829)
!4840 = !DILocation(line: 2281, column: 13, scope: !824)
!4841 = !DILocation(line: 2282, column: 13, scope: !828)
!4842 = !DILocation(line: 2282, column: 18, scope: !4843)
!4843 = !DILexicalBlockFile(scope: !827, file: !420, discriminator: 1)
!4844 = !DILocation(line: 2282, column: 28, scope: !827)
!4845 = !DILocation(line: 2282, column: 58, scope: !827)
!4846 = !DILocation(line: 2282, column: 45, scope: !827)
!4847 = !DILocation(line: 2282, column: 75, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !827, file: !420, line: 2282, column: 72)
!4849 = !DILocation(line: 2282, column: 92, scope: !4848)
!4850 = !DILocation(line: 2282, column: 72, scope: !4848)
!4851 = !DILocation(line: 2282, column: 102, scope: !4848)
!4852 = !DILocation(line: 2282, column: 72, scope: !827)
!4853 = !DILocation(line: 2282, column: 72, scope: !4854)
!4854 = !DILexicalBlockFile(scope: !827, file: !420, discriminator: 2)
!4855 = !DILocation(line: 2282, column: 133, scope: !4856)
!4856 = !DILexicalBlockFile(scope: !4848, file: !420, discriminator: 3)
!4857 = !DILocation(line: 2282, column: 151, scope: !4848)
!4858 = !DILocation(line: 2282, column: 161, scope: !4848)
!4859 = !DILocation(line: 2282, column: 186, scope: !4848)
!4860 = !DILocation(line: 2282, column: 117, scope: !4848)
!4861 = !DILocation(line: 2282, column: 205, scope: !4862)
!4862 = !DILexicalBlockFile(scope: !828, file: !420, discriminator: 4)
!4863 = !DILocation(line: 2282, column: 205, scope: !827)
!4864 = !DILocation(line: 2282, column: 205, scope: !4865)
!4865 = !DILexicalBlockFile(scope: !827, file: !420, discriminator: 5)
!4866 = !DILocation(line: 2283, column: 13, scope: !828)
!4867 = !DILocation(line: 2285, column: 19, scope: !824)
!4868 = !DILocation(line: 2285, column: 27, scope: !824)
!4869 = !DILocation(line: 2285, column: 9, scope: !824)
!4870 = !DILocation(line: 2286, column: 20, scope: !824)
!4871 = !DILocation(line: 2286, column: 9, scope: !824)
!4872 = !DILocation(line: 2288, column: 28, scope: !824)
!4873 = !DILocation(line: 2288, column: 16, scope: !824)
!4874 = !DILocation(line: 2288, column: 9, scope: !824)
!4875 = !DILocation(line: 2289, column: 5, scope: !825)
!4876 = !DILocation(line: 2290, column: 28, scope: !4877)
!4877 = distinct !DILexicalBlock(scope: !825, file: !420, line: 2290, column: 14)
!4878 = !DILocation(line: 2290, column: 14, scope: !4877)
!4879 = !DILocation(line: 2290, column: 14, scope: !825)
!4880 = !DILocation(line: 2291, column: 25, scope: !4881)
!4881 = distinct !DILexicalBlock(scope: !4877, file: !420, line: 2290, column: 34)
!4882 = !DILocation(line: 2291, column: 9, scope: !4881)
!4883 = !DILocation(line: 2293, column: 9, scope: !4881)
!4884 = !DILocation(line: 2296, column: 21, scope: !808)
!4885 = !DILocation(line: 2296, column: 5, scope: !808)
!4886 = !DILocation(line: 2297, column: 5, scope: !808)
!4887 = !DILocation(line: 2298, column: 1, scope: !808)
!4888 = !DILocation(line: 2301, column: 36, scope: !858)
!4889 = !DILocation(line: 2301, column: 52, scope: !858)
!4890 = !DILocation(line: 2301, column: 67, scope: !858)
!4891 = !DILocation(line: 2303, column: 5, scope: !858)
!4892 = !DILocation(line: 2303, column: 16, scope: !858)
!4893 = !DILocation(line: 2303, column: 25, scope: !858)
!4894 = !DILocation(line: 2303, column: 31, scope: !858)
!4895 = !DILocation(line: 2304, column: 5, scope: !858)
!4896 = !DILocation(line: 2304, column: 15, scope: !858)
!4897 = !DILocation(line: 2305, column: 5, scope: !858)
!4898 = !DILocation(line: 2305, column: 17, scope: !858)
!4899 = !DILocation(line: 2306, column: 5, scope: !858)
!4900 = !DILocation(line: 2306, column: 11, scope: !858)
!4901 = !DILocation(line: 2308, column: 33, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !858, file: !420, line: 2308, column: 9)
!4903 = !DILocation(line: 2308, column: 40, scope: !4902)
!4904 = !DILocation(line: 2308, column: 45, scope: !4902)
!4905 = !DILocation(line: 2308, column: 52, scope: !4902)
!4906 = !DILocation(line: 2308, column: 78, scope: !4907)
!4907 = !DILexicalBlockFile(scope: !4902, file: !420, discriminator: 2)
!4908 = !DILocation(line: 2308, column: 85, scope: !4902)
!4909 = !DILocation(line: 2308, column: 91, scope: !4902)
!4910 = !DILocation(line: 2308, column: 96, scope: !4902)
!4911 = !DILocation(line: 2308, column: 9, scope: !858)
!4912 = !DILocation(line: 2308, column: 123, scope: !4913)
!4913 = !DILexicalBlockFile(scope: !4914, file: !420, discriminator: 3)
!4914 = !DILexicalBlockFile(scope: !4915, file: !420, discriminator: 1)
!4915 = distinct !DILexicalBlock(scope: !4902, file: !420, line: 2308, column: 105)
!4916 = !DILocation(line: 2308, column: 107, scope: !4915)
!4917 = !DILocation(line: 2308, column: 195, scope: !4915)
!4918 = !DILocation(line: 2310, column: 22, scope: !858)
!4919 = !DILocation(line: 2310, column: 11, scope: !858)
!4920 = !DILocation(line: 2310, column: 9, scope: !858)
!4921 = !DILocation(line: 2311, column: 9, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !858, file: !420, line: 2311, column: 9)
!4923 = !DILocation(line: 2311, column: 13, scope: !4922)
!4924 = !DILocation(line: 2311, column: 9, scope: !858)
!4925 = !DILocation(line: 2312, column: 9, scope: !4922)
!4926 = !DILocation(line: 2314, column: 9, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !858, file: !420, line: 2314, column: 9)
!4928 = !DILocation(line: 2314, column: 15, scope: !4927)
!4929 = !DILocation(line: 2314, column: 9, scope: !858)
!4930 = !DILocation(line: 2315, column: 25, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4927, file: !420, line: 2314, column: 25)
!4932 = !DILocation(line: 2315, column: 9, scope: !4931)
!4933 = !DILocation(line: 2316, column: 9, scope: !4931)
!4934 = !DILocation(line: 2318, column: 9, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !858, file: !420, line: 2318, column: 9)
!4936 = !DILocation(line: 2318, column: 15, scope: !4935)
!4937 = !DILocation(line: 2318, column: 9, scope: !858)
!4938 = !DILocation(line: 2319, column: 25, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4935, file: !420, line: 2318, column: 30)
!4940 = !DILocation(line: 2319, column: 9, scope: !4939)
!4941 = !DILocation(line: 2320, column: 9, scope: !4939)
!4942 = !DILocation(line: 2322, column: 9, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !858, file: !420, line: 2322, column: 9)
!4944 = !DILocation(line: 2322, column: 15, scope: !4943)
!4945 = !DILocation(line: 2322, column: 20, scope: !4943)
!4946 = !DILocation(line: 2322, column: 9, scope: !858)
!4947 = !DILocation(line: 2323, column: 13, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4949, file: !420, line: 2323, column: 13)
!4949 = distinct !DILexicalBlock(scope: !4943, file: !420, line: 2322, column: 26)
!4950 = !DILocation(line: 2323, column: 17, scope: !4948)
!4951 = !DILocation(line: 2323, column: 42, scope: !4948)
!4952 = !DILocation(line: 2324, column: 31, scope: !4948)
!4953 = !DILocation(line: 2324, column: 38, scope: !4948)
!4954 = !DILocation(line: 2324, column: 49, scope: !4948)
!4955 = !DILocation(line: 2324, column: 58, scope: !4948)
!4956 = !DILocation(line: 2324, column: 75, scope: !4948)
!4957 = !DILocation(line: 2324, column: 81, scope: !4948)
!4958 = !DILocation(line: 2324, column: 101, scope: !4959)
!4959 = !DILexicalBlockFile(scope: !4948, file: !420, discriminator: 1)
!4960 = !DILocation(line: 2324, column: 86, scope: !4948)
!4961 = !DILocation(line: 2324, column: 108, scope: !4948)
!4962 = !DILocation(line: 2324, column: 116, scope: !4948)
!4963 = !DILocation(line: 2323, column: 13, scope: !4949)
!4964 = !DILocation(line: 2325, column: 27, scope: !4965)
!4965 = distinct !DILexicalBlock(scope: !4948, file: !420, line: 2324, column: 122)
!4966 = !DILocation(line: 2325, column: 33, scope: !4965)
!4967 = !DILocation(line: 2325, column: 17, scope: !4965)
!4968 = !DILocation(line: 2326, column: 32, scope: !4965)
!4969 = !DILocation(line: 2326, column: 37, scope: !4965)
!4970 = !DILocation(line: 2326, column: 44, scope: !4965)
!4971 = !DILocation(line: 2326, column: 20, scope: !4965)
!4972 = !DILocation(line: 2326, column: 13, scope: !4965)
!4973 = !DILocation(line: 2329, column: 29, scope: !4974)
!4974 = distinct !DILexicalBlock(scope: !4948, file: !420, line: 2328, column: 14)
!4975 = !DILocation(line: 2329, column: 13, scope: !4974)
!4976 = !DILocation(line: 2331, column: 13, scope: !4974)
!4977 = !DILocation(line: 2334, column: 9, scope: !4978)
!4978 = distinct !DILexicalBlock(scope: !858, file: !420, line: 2334, column: 9)
!4979 = !DILocation(line: 2334, column: 15, scope: !4978)
!4980 = !DILocation(line: 2334, column: 20, scope: !4978)
!4981 = !DILocation(line: 2334, column: 9, scope: !858)
!4982 = !DILocation(line: 2335, column: 25, scope: !4983)
!4983 = distinct !DILexicalBlock(scope: !4978, file: !420, line: 2334, column: 26)
!4984 = !DILocation(line: 2335, column: 9, scope: !4983)
!4985 = !DILocation(line: 2337, column: 9, scope: !4983)
!4986 = !DILocation(line: 2340, column: 11, scope: !871)
!4987 = !DILocation(line: 2340, column: 17, scope: !871)
!4988 = !DILocation(line: 2340, column: 26, scope: !871)
!4989 = !DILocation(line: 2340, column: 39, scope: !871)
!4990 = !DILocation(line: 2340, column: 53, scope: !871)
!4991 = !DILocation(line: 2340, column: 57, scope: !4992)
!4992 = !DILexicalBlockFile(scope: !871, file: !420, discriminator: 1)
!4993 = !DILocation(line: 2340, column: 63, scope: !871)
!4994 = !DILocation(line: 2340, column: 72, scope: !871)
!4995 = !DILocation(line: 2340, column: 86, scope: !871)
!4996 = !DILocation(line: 2340, column: 95, scope: !871)
!4997 = !DILocation(line: 2340, column: 9, scope: !858)
!4998 = !DILocation(line: 2341, column: 9, scope: !870)
!4999 = !DILocation(line: 2341, column: 20, scope: !870)
!5000 = !DILocation(line: 2341, column: 47, scope: !870)
!5001 = !DILocation(line: 2341, column: 52, scope: !870)
!5002 = !DILocation(line: 2341, column: 28, scope: !870)
!5003 = !DILocation(line: 2342, column: 13, scope: !5004)
!5004 = distinct !DILexicalBlock(scope: !870, file: !420, line: 2342, column: 13)
!5005 = !DILocation(line: 2342, column: 19, scope: !5004)
!5006 = !DILocation(line: 2342, column: 25, scope: !5004)
!5007 = !DILocation(line: 2342, column: 28, scope: !5008)
!5008 = !DILexicalBlockFile(scope: !5004, file: !420, discriminator: 1)
!5009 = !DILocation(line: 2342, column: 13, scope: !870)
!5010 = !DILocation(line: 2343, column: 13, scope: !5004)
!5011 = !DILocation(line: 2344, column: 30, scope: !870)
!5012 = !DILocation(line: 2344, column: 36, scope: !870)
!5013 = !DILocation(line: 2344, column: 15, scope: !870)
!5014 = !DILocation(line: 2344, column: 13, scope: !870)
!5015 = !DILocation(line: 2345, column: 13, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !870, file: !420, line: 2345, column: 13)
!5017 = !DILocation(line: 2345, column: 17, scope: !5016)
!5018 = !DILocation(line: 2345, column: 13, scope: !870)
!5019 = !DILocation(line: 2346, column: 13, scope: !5016)
!5020 = !DILocation(line: 2347, column: 28, scope: !870)
!5021 = !DILocation(line: 2347, column: 33, scope: !870)
!5022 = !DILocation(line: 2347, column: 40, scope: !870)
!5023 = !DILocation(line: 2347, column: 16, scope: !870)
!5024 = !DILocation(line: 2347, column: 9, scope: !870)
!5025 = !DILocation(line: 2348, column: 5, scope: !871)
!5026 = !DILocation(line: 2350, column: 24, scope: !874)
!5027 = !DILocation(line: 2350, column: 31, scope: !874)
!5028 = !DILocation(line: 2350, column: 40, scope: !874)
!5029 = !DILocation(line: 2350, column: 58, scope: !874)
!5030 = !DILocation(line: 2350, column: 61, scope: !5031)
!5031 = !DILexicalBlockFile(scope: !874, file: !420, discriminator: 1)
!5032 = !DILocation(line: 2350, column: 67, scope: !874)
!5033 = !DILocation(line: 2350, column: 72, scope: !874)
!5034 = !DILocation(line: 2350, column: 9, scope: !858)
!5035 = !DILocation(line: 2351, column: 9, scope: !873)
!5036 = !DILocation(line: 2351, column: 19, scope: !873)
!5037 = !DILocation(line: 2352, column: 9, scope: !873)
!5038 = !DILocation(line: 2352, column: 20, scope: !873)
!5039 = !DILocation(line: 2353, column: 9, scope: !873)
!5040 = !DILocation(line: 2353, column: 13, scope: !873)
!5041 = !DILocation(line: 2356, column: 32, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !873, file: !420, line: 2356, column: 13)
!5043 = !DILocation(line: 2356, column: 13, scope: !5042)
!5044 = !DILocation(line: 2356, column: 86, scope: !5042)
!5045 = !DILocation(line: 2356, column: 13, scope: !873)
!5046 = !DILocation(line: 2357, column: 20, scope: !5042)
!5047 = !DILocation(line: 2357, column: 13, scope: !5042)
!5048 = !DILocation(line: 2359, column: 17, scope: !873)
!5049 = !DILocation(line: 2359, column: 16, scope: !873)
!5050 = !DILocation(line: 2360, column: 23, scope: !873)
!5051 = !DILocation(line: 2360, column: 14, scope: !873)
!5052 = !DILocation(line: 2360, column: 20, scope: !873)
!5053 = !DILocation(line: 2360, column: 50, scope: !873)
!5054 = !DILocation(line: 2360, column: 56, scope: !873)
!5055 = !DILocation(line: 2360, column: 39, scope: !873)
!5056 = !DILocation(line: 2360, column: 34, scope: !873)
!5057 = !DILocation(line: 2360, column: 48, scope: !873)
!5058 = !DILocation(line: 2361, column: 25, scope: !873)
!5059 = !DILocation(line: 2361, column: 14, scope: !873)
!5060 = !DILocation(line: 2361, column: 22, scope: !873)
!5061 = !DILocation(line: 2361, column: 54, scope: !873)
!5062 = !DILocation(line: 2361, column: 60, scope: !873)
!5063 = !DILocation(line: 2361, column: 41, scope: !873)
!5064 = !DILocation(line: 2361, column: 36, scope: !873)
!5065 = !DILocation(line: 2361, column: 52, scope: !873)
!5066 = !DILocation(line: 2362, column: 13, scope: !5067)
!5067 = distinct !DILexicalBlock(scope: !873, file: !420, line: 2362, column: 13)
!5068 = !DILocation(line: 2362, column: 19, scope: !5067)
!5069 = !DILocation(line: 2362, column: 13, scope: !873)
!5070 = !DILocation(line: 2363, column: 32, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !5067, file: !420, line: 2362, column: 31)
!5072 = !DILocation(line: 2363, column: 18, scope: !5071)
!5073 = !DILocation(line: 2363, column: 29, scope: !5071)
!5074 = !DILocation(line: 2363, column: 64, scope: !5071)
!5075 = !DILocation(line: 2363, column: 70, scope: !5071)
!5076 = !DILocation(line: 2363, column: 48, scope: !5071)
!5077 = !DILocation(line: 2363, column: 43, scope: !5071)
!5078 = !DILocation(line: 2363, column: 62, scope: !5071)
!5079 = !DILocation(line: 2364, column: 9, scope: !5071)
!5080 = !DILocation(line: 2366, column: 31, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !873, file: !420, line: 2366, column: 13)
!5082 = !DILocation(line: 2366, column: 13, scope: !5081)
!5083 = !DILocation(line: 2366, column: 39, scope: !5081)
!5084 = !DILocation(line: 2366, column: 13, scope: !873)
!5085 = !DILocation(line: 2367, column: 13, scope: !5081)
!5086 = !DILocation(line: 2368, column: 25, scope: !873)
!5087 = !DILocation(line: 2368, column: 20, scope: !873)
!5088 = !DILocation(line: 2368, column: 41, scope: !873)
!5089 = !DILocation(line: 2368, column: 34, scope: !873)
!5090 = !DILocation(line: 2368, column: 14, scope: !873)
!5091 = !DILocation(line: 2368, column: 18, scope: !873)
!5092 = !DILocation(line: 2370, column: 15, scope: !873)
!5093 = !DILocation(line: 2370, column: 13, scope: !873)
!5094 = !DILocation(line: 2370, column: 9, scope: !873)
!5095 = !DILocation(line: 2373, column: 9, scope: !873)
!5096 = !DILocation(line: 2374, column: 16, scope: !873)
!5097 = !DILocation(line: 2374, column: 9, scope: !873)
!5098 = !DILocation(line: 2375, column: 5, scope: !874)
!5099 = !DILocation(line: 2376, column: 29, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !874, file: !420, line: 2376, column: 14)
!5101 = !DILocation(line: 2376, column: 36, scope: !5100)
!5102 = !DILocation(line: 2376, column: 45, scope: !5100)
!5103 = !DILocation(line: 2376, column: 63, scope: !5100)
!5104 = !DILocation(line: 2376, column: 80, scope: !5105)
!5105 = !DILexicalBlockFile(scope: !5100, file: !420, discriminator: 1)
!5106 = !DILocation(line: 2376, column: 66, scope: !5100)
!5107 = !DILocation(line: 2376, column: 14, scope: !874)
!5108 = !DILocation(line: 2379, column: 25, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !5100, file: !420, line: 2376, column: 86)
!5110 = !DILocation(line: 2379, column: 9, scope: !5109)
!5111 = !DILocation(line: 2382, column: 9, scope: !5109)
!5112 = !DILocation(line: 2385, column: 21, scope: !858)
!5113 = !DILocation(line: 2385, column: 5, scope: !858)
!5114 = !DILocation(line: 2386, column: 5, scope: !858)
!5115 = !DILocation(line: 2387, column: 1, scope: !858)
!5116 = !DILocation(line: 2188, column: 23, scope: !830)
!5117 = !DILocation(line: 2188, column: 39, scope: !830)
!5118 = !DILocation(line: 2188, column: 48, scope: !830)
!5119 = !DILocation(line: 2190, column: 5, scope: !830)
!5120 = !DILocation(line: 2190, column: 16, scope: !830)
!5121 = !DILocation(line: 2190, column: 23, scope: !830)
!5122 = !DILocation(line: 2190, column: 29, scope: !830)
!5123 = !DILocation(line: 2190, column: 35, scope: !830)
!5124 = !DILocation(line: 2192, column: 30, scope: !5125)
!5125 = distinct !DILexicalBlock(scope: !830, file: !420, line: 2192, column: 9)
!5126 = !DILocation(line: 2192, column: 47, scope: !5125)
!5127 = !DILocation(line: 2192, column: 35, scope: !5125)
!5128 = !DILocation(line: 2192, column: 41, scope: !5125)
!5129 = !DILocation(line: 2192, column: 9, scope: !5125)
!5130 = !DILocation(line: 2193, column: 66, scope: !5125)
!5131 = !DILocation(line: 2192, column: 9, scope: !830)
!5132 = !DILocation(line: 2194, column: 9, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5125, file: !420, line: 2193, column: 71)
!5134 = !DILocation(line: 2198, column: 9, scope: !843)
!5135 = !DILocation(line: 2198, column: 15, scope: !843)
!5136 = !DILocation(line: 2198, column: 26, scope: !843)
!5137 = !DILocation(line: 2198, column: 40, scope: !843)
!5138 = !DILocation(line: 2198, column: 43, scope: !5139)
!5139 = !DILexicalBlockFile(scope: !843, file: !420, discriminator: 2)
!5140 = !DILocation(line: 2198, column: 47, scope: !843)
!5141 = !DILocation(line: 2198, column: 9, scope: !830)
!5142 = !DILocation(line: 2198, column: 53, scope: !5143)
!5143 = !DILexicalBlockFile(scope: !5144, file: !420, discriminator: 3)
!5144 = !DILexicalBlockFile(scope: !843, file: !420, discriminator: 1)
!5145 = !DILocation(line: 2200, column: 29, scope: !5146)
!5146 = distinct !DILexicalBlock(scope: !843, file: !420, line: 2198, column: 53)
!5147 = !DILocation(line: 2200, column: 35, scope: !5146)
!5148 = !DILocation(line: 2200, column: 55, scope: !5146)
!5149 = !DILocation(line: 2200, column: 41, scope: !5146)
!5150 = !DILocation(line: 2200, column: 47, scope: !5146)
!5151 = !DILocation(line: 2200, column: 62, scope: !5146)
!5152 = !DILocation(line: 2200, column: 60, scope: !5146)
!5153 = !DILocation(line: 2200, column: 39, scope: !5146)
!5154 = !DILocation(line: 2200, column: 9, scope: !5146)
!5155 = !DILocation(line: 2200, column: 15, scope: !5146)
!5156 = !DILocation(line: 2200, column: 19, scope: !5146)
!5157 = !DILocation(line: 2201, column: 5, scope: !5146)
!5158 = !DILocation(line: 2203, column: 9, scope: !842)
!5159 = !DILocation(line: 2203, column: 20, scope: !842)
!5160 = !DILocation(line: 2203, column: 24, scope: !842)
!5161 = !DILocation(line: 2203, column: 27, scope: !842)
!5162 = !DILocation(line: 2204, column: 9, scope: !842)
!5163 = !DILocation(line: 2204, column: 16, scope: !5164)
!5164 = !DILexicalBlockFile(scope: !5165, file: !420, discriminator: 4)
!5165 = !DILexicalBlockFile(scope: !842, file: !420, discriminator: 1)
!5166 = !DILocation(line: 2204, column: 18, scope: !842)
!5167 = !DILocation(line: 2204, column: 23, scope: !842)
!5168 = !DILocation(line: 2204, column: 43, scope: !5169)
!5169 = !DILexicalBlockFile(scope: !842, file: !420, discriminator: 2)
!5170 = !DILocation(line: 2204, column: 26, scope: !842)
!5171 = !DILocation(line: 2204, column: 32, scope: !842)
!5172 = !DILocation(line: 2204, column: 46, scope: !842)
!5173 = !DILocation(line: 2204, column: 9, scope: !5174)
!5174 = !DILexicalBlockFile(scope: !842, file: !420, discriminator: 3)
!5175 = !DILocation(line: 2205, column: 14, scope: !842)
!5176 = !DILocation(line: 2206, column: 13, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !842, file: !420, line: 2206, column: 13)
!5178 = !DILocation(line: 2206, column: 15, scope: !5177)
!5179 = !DILocation(line: 2206, column: 13, scope: !842)
!5180 = !DILocation(line: 2207, column: 13, scope: !5177)
!5181 = !DILocation(line: 2208, column: 48, scope: !842)
!5182 = !DILocation(line: 2208, column: 31, scope: !842)
!5183 = !DILocation(line: 2208, column: 37, scope: !842)
!5184 = !DILocation(line: 2208, column: 67, scope: !842)
!5185 = !DILocation(line: 2208, column: 53, scope: !842)
!5186 = !DILocation(line: 2208, column: 59, scope: !842)
!5187 = !DILocation(line: 2208, column: 74, scope: !842)
!5188 = !DILocation(line: 2208, column: 72, scope: !842)
!5189 = !DILocation(line: 2208, column: 51, scope: !842)
!5190 = !DILocation(line: 2208, column: 26, scope: !842)
!5191 = !DILocation(line: 2208, column: 9, scope: !842)
!5192 = !DILocation(line: 2208, column: 15, scope: !842)
!5193 = !DILocation(line: 2208, column: 29, scope: !842)
!5194 = !DILocation(line: 2209, column: 5, scope: !843)
!5195 = !DILocation(line: 2209, column: 5, scope: !5144)
!5196 = !DILocation(line: 2210, column: 24, scope: !830)
!5197 = !DILocation(line: 2210, column: 17, scope: !830)
!5198 = !DILocation(line: 2210, column: 5, scope: !830)
!5199 = !DILocation(line: 2210, column: 11, scope: !830)
!5200 = !DILocation(line: 2210, column: 22, scope: !830)
!5201 = !DILocation(line: 2211, column: 40, scope: !830)
!5202 = !DILocation(line: 2211, column: 26, scope: !830)
!5203 = !DILocation(line: 2211, column: 32, scope: !830)
!5204 = !DILocation(line: 2211, column: 47, scope: !830)
!5205 = !DILocation(line: 2211, column: 45, scope: !830)
!5206 = !DILocation(line: 2211, column: 19, scope: !830)
!5207 = !DILocation(line: 2211, column: 5, scope: !830)
!5208 = !DILocation(line: 2211, column: 11, scope: !830)
!5209 = !DILocation(line: 2211, column: 24, scope: !830)
!5210 = !DILocation(line: 2213, column: 5, scope: !830)
!5211 = !DILocation(line: 2214, column: 1, scope: !830)
!5212 = !DILocation(line: 573, column: 21, scope: !844)
!5213 = !DILocation(line: 575, column: 5, scope: !844)
!5214 = !DILocation(line: 575, column: 16, scope: !844)
!5215 = !DILocation(line: 575, column: 19, scope: !844)
!5216 = !DILocation(line: 577, column: 9, scope: !844)
!5217 = !DILocation(line: 578, column: 12, scope: !5218)
!5218 = distinct !DILexicalBlock(scope: !844, file: !420, line: 578, column: 5)
!5219 = !DILocation(line: 578, column: 10, scope: !5218)
!5220 = !DILocation(line: 578, column: 17, scope: !5221)
!5221 = !DILexicalBlockFile(scope: !5222, file: !420, discriminator: 2)
!5222 = !DILexicalBlockFile(scope: !5223, file: !420, discriminator: 1)
!5223 = distinct !DILexicalBlock(scope: !5218, file: !420, line: 578, column: 5)
!5224 = !DILocation(line: 578, column: 21, scope: !5223)
!5225 = !DILocation(line: 578, column: 27, scope: !5223)
!5226 = !DILocation(line: 578, column: 19, scope: !5223)
!5227 = !DILocation(line: 578, column: 5, scope: !5218)
!5228 = !DILocation(line: 579, column: 28, scope: !5223)
!5229 = !DILocation(line: 579, column: 16, scope: !5223)
!5230 = !DILocation(line: 579, column: 22, scope: !5223)
!5231 = !DILocation(line: 579, column: 13, scope: !5223)
!5232 = !DILocation(line: 579, column: 9, scope: !5223)
!5233 = !DILocation(line: 578, column: 34, scope: !5223)
!5234 = !DILocation(line: 578, column: 5, scope: !5223)
!5235 = !DILocation(line: 580, column: 12, scope: !844)
!5236 = !DILocation(line: 580, column: 18, scope: !844)
!5237 = !DILocation(line: 580, column: 9, scope: !844)
!5238 = !DILocation(line: 582, column: 17, scope: !844)
!5239 = !DILocation(line: 582, column: 5, scope: !844)
!5240 = !DILocation(line: 582, column: 11, scope: !844)
!5241 = !DILocation(line: 582, column: 15, scope: !844)
!5242 = !DILocation(line: 583, column: 1, scope: !844)
!5243 = !DILocation(line: 2217, column: 25, scope: !849)
!5244 = !DILocation(line: 2219, column: 5, scope: !849)
!5245 = !DILocation(line: 2219, column: 16, scope: !849)
!5246 = !DILocation(line: 2219, column: 22, scope: !849)
!5247 = !DILocation(line: 2221, column: 27, scope: !5248)
!5248 = distinct !DILexicalBlock(scope: !849, file: !420, line: 2221, column: 9)
!5249 = !DILocation(line: 2221, column: 34, scope: !5248)
!5250 = !DILocation(line: 2221, column: 45, scope: !5248)
!5251 = !DILocation(line: 2221, column: 54, scope: !5248)
!5252 = !DILocation(line: 2221, column: 71, scope: !5248)
!5253 = !DILocation(line: 2221, column: 9, scope: !849)
!5254 = !DILocation(line: 2222, column: 9, scope: !5248)
!5255 = !DILocation(line: 2223, column: 29, scope: !849)
!5256 = !DILocation(line: 2223, column: 14, scope: !849)
!5257 = !DILocation(line: 2223, column: 36, scope: !849)
!5258 = !DILocation(line: 2223, column: 10, scope: !849)
!5259 = !DILocation(line: 2224, column: 9, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !849, file: !420, line: 2224, column: 9)
!5261 = !DILocation(line: 2224, column: 14, scope: !5260)
!5262 = !DILocation(line: 2224, column: 9, scope: !849)
!5263 = !DILocation(line: 2225, column: 9, scope: !5260)
!5264 = !DILocation(line: 2227, column: 12, scope: !857)
!5265 = !DILocation(line: 2227, column: 10, scope: !857)
!5266 = !DILocation(line: 2227, column: 17, scope: !5267)
!5267 = !DILexicalBlockFile(scope: !5268, file: !420, discriminator: 2)
!5268 = !DILexicalBlockFile(scope: !856, file: !420, discriminator: 1)
!5269 = !DILocation(line: 2227, column: 21, scope: !856)
!5270 = !DILocation(line: 2227, column: 19, scope: !856)
!5271 = !DILocation(line: 2227, column: 5, scope: !857)
!5272 = !DILocation(line: 2228, column: 9, scope: !855)
!5273 = !DILocation(line: 2228, column: 19, scope: !855)
!5274 = !DILocation(line: 2228, column: 58, scope: !855)
!5275 = !DILocation(line: 2228, column: 43, scope: !855)
!5276 = !DILocation(line: 2228, column: 25, scope: !855)
!5277 = !DILocation(line: 2228, column: 50, scope: !855)
!5278 = !DILocation(line: 2228, column: 24, scope: !855)
!5279 = !DILocation(line: 2229, column: 29, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !855, file: !420, line: 2229, column: 13)
!5281 = !DILocation(line: 2229, column: 34, scope: !5280)
!5282 = !DILocation(line: 2229, column: 43, scope: !5280)
!5283 = !DILocation(line: 2229, column: 13, scope: !855)
!5284 = !DILocation(line: 2230, column: 13, scope: !5280)
!5285 = !DILocation(line: 2231, column: 5, scope: !856)
!5286 = !DILocation(line: 2231, column: 5, scope: !5268)
!5287 = !DILocation(line: 2231, column: 5, scope: !855)
!5288 = !DILocation(line: 2227, column: 28, scope: !856)
!5289 = !DILocation(line: 2227, column: 5, scope: !856)
!5290 = !DILocation(line: 2232, column: 5, scope: !849)
!5291 = !DILocation(line: 2233, column: 1, scope: !849)
!5292 = !DILocation(line: 1716, column: 19, scope: !878)
!5293 = !DILocation(line: 1716, column: 34, scope: !878)
!5294 = !DILocation(line: 1716, column: 52, scope: !878)
!5295 = !DILocation(line: 1718, column: 5, scope: !878)
!5296 = !DILocation(line: 1718, column: 24, scope: !878)
!5297 = !DILocation(line: 1719, column: 5, scope: !878)
!5298 = !DILocation(line: 1719, column: 19, scope: !878)
!5299 = !DILocation(line: 1720, column: 5, scope: !878)
!5300 = !DILocation(line: 1720, column: 12, scope: !878)
!5301 = !DILocation(line: 1721, column: 5, scope: !878)
!5302 = !DILocation(line: 1721, column: 15, scope: !878)
!5303 = !DILocation(line: 1722, column: 5, scope: !878)
!5304 = !DILocation(line: 1722, column: 10, scope: !878)
!5305 = !DILocation(line: 1723, column: 5, scope: !878)
!5306 = !DILocation(line: 1723, column: 16, scope: !878)
!5307 = !DILocation(line: 1724, column: 5, scope: !878)
!5308 = !DILocation(line: 1724, column: 12, scope: !878)
!5309 = !DILocation(line: 1725, column: 5, scope: !878)
!5310 = !DILocation(line: 1725, column: 11, scope: !878)
!5311 = !DILocation(line: 1727, column: 13, scope: !878)
!5312 = !DILocation(line: 1730, column: 27, scope: !896)
!5313 = !DILocation(line: 1730, column: 14, scope: !896)
!5314 = !DILocation(line: 1730, column: 12, scope: !896)
!5315 = !DILocation(line: 1731, column: 13, scope: !5316)
!5316 = distinct !DILexicalBlock(scope: !896, file: !420, line: 1731, column: 13)
!5317 = !DILocation(line: 1731, column: 16, scope: !5316)
!5318 = !DILocation(line: 1731, column: 22, scope: !5316)
!5319 = !DILocation(line: 1731, column: 25, scope: !5320)
!5320 = !DILexicalBlockFile(scope: !5316, file: !420, discriminator: 1)
!5321 = !DILocation(line: 1731, column: 13, scope: !896)
!5322 = !DILocation(line: 1732, column: 13, scope: !5316)
!5323 = !DILocation(line: 1733, column: 17, scope: !896)
!5324 = !DILocation(line: 1735, column: 17, scope: !5325)
!5325 = distinct !DILexicalBlock(scope: !895, file: !420, line: 1735, column: 17)
!5326 = !DILocation(line: 1735, column: 20, scope: !5325)
!5327 = !DILocation(line: 1735, column: 32, scope: !5325)
!5328 = !DILocation(line: 1735, column: 35, scope: !5329)
!5329 = !DILexicalBlockFile(scope: !5325, file: !420, discriminator: 2)
!5330 = !DILocation(line: 1735, column: 38, scope: !5325)
!5331 = !DILocation(line: 1735, column: 17, scope: !895)
!5332 = !DILocation(line: 1735, column: 45, scope: !5333)
!5333 = !DILexicalBlockFile(scope: !5334, file: !420, discriminator: 3)
!5334 = !DILexicalBlockFile(scope: !5325, file: !420, discriminator: 1)
!5335 = !DILocation(line: 1736, column: 50, scope: !895)
!5336 = !DILocation(line: 1736, column: 37, scope: !895)
!5337 = !DILocation(line: 1736, column: 30, scope: !895)
!5338 = !DILocation(line: 1736, column: 35, scope: !895)
!5339 = !DILocation(line: 1736, column: 54, scope: !895)
!5340 = !DILocation(line: 1738, column: 17, scope: !5341)
!5341 = distinct !DILexicalBlock(scope: !895, file: !420, line: 1738, column: 17)
!5342 = !DILocation(line: 1738, column: 20, scope: !5341)
!5343 = !DILocation(line: 1738, column: 34, scope: !5341)
!5344 = !DILocation(line: 1738, column: 37, scope: !5345)
!5345 = !DILexicalBlockFile(scope: !5341, file: !420, discriminator: 2)
!5346 = !DILocation(line: 1738, column: 40, scope: !5341)
!5347 = !DILocation(line: 1738, column: 17, scope: !895)
!5348 = !DILocation(line: 1738, column: 49, scope: !5349)
!5349 = !DILexicalBlockFile(scope: !5350, file: !420, discriminator: 3)
!5350 = !DILexicalBlockFile(scope: !5341, file: !420, discriminator: 1)
!5351 = !DILocation(line: 1739, column: 13, scope: !895)
!5352 = !DILocation(line: 1739, column: 18, scope: !5353)
!5353 = !DILexicalBlockFile(scope: !894, file: !420, discriminator: 1)
!5354 = !DILocation(line: 1739, column: 24, scope: !894)
!5355 = !DILocation(line: 1739, column: 38, scope: !894)
!5356 = !DILocation(line: 1739, column: 31, scope: !894)
!5357 = !DILocation(line: 1739, column: 29, scope: !894)
!5358 = !DILocation(line: 1739, column: 49, scope: !894)
!5359 = !DILocation(line: 1739, column: 54, scope: !894)
!5360 = !DILocation(line: 1739, column: 42, scope: !894)
!5361 = !DILocation(line: 1739, column: 77, scope: !895)
!5362 = !DILocation(line: 1739, column: 77, scope: !894)
!5363 = !DILocation(line: 1739, column: 77, scope: !5364)
!5364 = !DILexicalBlockFile(scope: !894, file: !420, discriminator: 2)
!5365 = !DILocation(line: 1739, column: 90, scope: !5366)
!5366 = !DILexicalBlockFile(scope: !895, file: !420, discriminator: 3)
!5367 = !DILocation(line: 1741, column: 17, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !895, file: !420, line: 1741, column: 17)
!5369 = !DILocation(line: 1741, column: 20, scope: !5368)
!5370 = !DILocation(line: 1741, column: 39, scope: !5368)
!5371 = !DILocation(line: 1741, column: 42, scope: !5372)
!5372 = !DILexicalBlockFile(scope: !5368, file: !420, discriminator: 2)
!5373 = !DILocation(line: 1741, column: 45, scope: !5368)
!5374 = !DILocation(line: 1741, column: 17, scope: !895)
!5375 = !DILocation(line: 1741, column: 59, scope: !5376)
!5376 = !DILexicalBlockFile(scope: !5377, file: !420, discriminator: 3)
!5377 = !DILexicalBlockFile(scope: !5368, file: !420, discriminator: 1)
!5378 = !DILocation(line: 1742, column: 13, scope: !895)
!5379 = !DILocation(line: 1742, column: 18, scope: !5380)
!5380 = !DILexicalBlockFile(scope: !898, file: !420, discriminator: 1)
!5381 = !DILocation(line: 1742, column: 22, scope: !898)
!5382 = !DILocation(line: 1742, column: 34, scope: !898)
!5383 = !DILocation(line: 1742, column: 29, scope: !898)
!5384 = !DILocation(line: 1742, column: 27, scope: !898)
!5385 = !DILocation(line: 1742, column: 45, scope: !898)
!5386 = !DILocation(line: 1742, column: 50, scope: !898)
!5387 = !DILocation(line: 1742, column: 38, scope: !898)
!5388 = !DILocation(line: 1742, column: 73, scope: !895)
!5389 = !DILocation(line: 1742, column: 73, scope: !898)
!5390 = !DILocation(line: 1742, column: 73, scope: !5391)
!5391 = !DILexicalBlockFile(scope: !898, file: !420, discriminator: 2)
!5392 = !DILocation(line: 1742, column: 86, scope: !5366)
!5393 = !DILocation(line: 1744, column: 13, scope: !895)
!5394 = !DILocation(line: 1744, column: 18, scope: !5395)
!5395 = !DILexicalBlockFile(scope: !900, file: !420, discriminator: 1)
!5396 = !DILocation(line: 1744, column: 23, scope: !900)
!5397 = !DILocation(line: 1744, column: 36, scope: !900)
!5398 = !DILocation(line: 1744, column: 28, scope: !900)
!5399 = !DILocation(line: 1744, column: 47, scope: !900)
!5400 = !DILocation(line: 1744, column: 52, scope: !900)
!5401 = !DILocation(line: 1744, column: 40, scope: !900)
!5402 = !DILocation(line: 1744, column: 75, scope: !895)
!5403 = !DILocation(line: 1744, column: 75, scope: !900)
!5404 = !DILocation(line: 1744, column: 75, scope: !5405)
!5405 = !DILexicalBlockFile(scope: !900, file: !420, discriminator: 2)
!5406 = !DILocation(line: 1744, column: 88, scope: !5366)
!5407 = !DILocation(line: 1746, column: 9, scope: !896)
!5408 = !DILocation(line: 1750, column: 27, scope: !896)
!5409 = !DILocation(line: 1750, column: 14, scope: !896)
!5410 = !DILocation(line: 1750, column: 12, scope: !896)
!5411 = !DILocation(line: 1751, column: 13, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !896, file: !420, line: 1751, column: 13)
!5413 = !DILocation(line: 1751, column: 16, scope: !5412)
!5414 = !DILocation(line: 1751, column: 37, scope: !5412)
!5415 = !DILocation(line: 1751, column: 40, scope: !5416)
!5416 = !DILexicalBlockFile(scope: !5412, file: !420, discriminator: 1)
!5417 = !DILocation(line: 1751, column: 13, scope: !896)
!5418 = !DILocation(line: 1752, column: 13, scope: !5412)
!5419 = !DILocation(line: 1753, column: 17, scope: !896)
!5420 = !DILocation(line: 1755, column: 17, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !903, file: !420, line: 1755, column: 17)
!5422 = !DILocation(line: 1755, column: 20, scope: !5421)
!5423 = !DILocation(line: 1755, column: 17, scope: !903)
!5424 = !DILocation(line: 1755, column: 34, scope: !5425)
!5425 = !DILexicalBlockFile(scope: !5421, file: !420, discriminator: 1)
!5426 = !DILocation(line: 1756, column: 54, scope: !903)
!5427 = !DILocation(line: 1756, column: 39, scope: !903)
!5428 = !DILocation(line: 1756, column: 32, scope: !903)
!5429 = !DILocation(line: 1756, column: 37, scope: !903)
!5430 = !DILocation(line: 1756, column: 58, scope: !903)
!5431 = !DILocation(line: 1758, column: 17, scope: !5432)
!5432 = distinct !DILexicalBlock(scope: !903, file: !420, line: 1758, column: 17)
!5433 = !DILocation(line: 1758, column: 20, scope: !5432)
!5434 = !DILocation(line: 1758, column: 17, scope: !903)
!5435 = !DILocation(line: 1758, column: 37, scope: !5436)
!5436 = !DILexicalBlockFile(scope: !5432, file: !420, discriminator: 1)
!5437 = !DILocation(line: 1759, column: 13, scope: !903)
!5438 = !DILocation(line: 1759, column: 18, scope: !5439)
!5439 = !DILexicalBlockFile(scope: !902, file: !420, discriminator: 1)
!5440 = !DILocation(line: 1759, column: 33, scope: !902)
!5441 = !DILocation(line: 1759, column: 56, scope: !902)
!5442 = !DILocation(line: 1759, column: 40, scope: !902)
!5443 = !DILocation(line: 1759, column: 38, scope: !902)
!5444 = !DILocation(line: 1759, column: 67, scope: !902)
!5445 = !DILocation(line: 1759, column: 72, scope: !902)
!5446 = !DILocation(line: 1759, column: 60, scope: !902)
!5447 = !DILocation(line: 1759, column: 95, scope: !903)
!5448 = !DILocation(line: 1759, column: 95, scope: !902)
!5449 = !DILocation(line: 1759, column: 95, scope: !5450)
!5450 = !DILexicalBlockFile(scope: !902, file: !420, discriminator: 2)
!5451 = !DILocation(line: 1759, column: 108, scope: !5452)
!5452 = !DILexicalBlockFile(scope: !903, file: !420, discriminator: 3)
!5453 = !DILocation(line: 1761, column: 17, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !903, file: !420, line: 1761, column: 17)
!5455 = !DILocation(line: 1761, column: 20, scope: !5454)
!5456 = !DILocation(line: 1761, column: 17, scope: !903)
!5457 = !DILocation(line: 1761, column: 44, scope: !5458)
!5458 = !DILexicalBlockFile(scope: !5454, file: !420, discriminator: 1)
!5459 = !DILocation(line: 1762, column: 13, scope: !903)
!5460 = !DILocation(line: 1762, column: 18, scope: !5461)
!5461 = !DILexicalBlockFile(scope: !905, file: !420, discriminator: 1)
!5462 = !DILocation(line: 1762, column: 31, scope: !905)
!5463 = !DILocation(line: 1762, column: 52, scope: !905)
!5464 = !DILocation(line: 1762, column: 38, scope: !905)
!5465 = !DILocation(line: 1762, column: 36, scope: !905)
!5466 = !DILocation(line: 1762, column: 63, scope: !905)
!5467 = !DILocation(line: 1762, column: 68, scope: !905)
!5468 = !DILocation(line: 1762, column: 56, scope: !905)
!5469 = !DILocation(line: 1762, column: 91, scope: !903)
!5470 = !DILocation(line: 1762, column: 91, scope: !905)
!5471 = !DILocation(line: 1762, column: 91, scope: !5472)
!5472 = !DILexicalBlockFile(scope: !905, file: !420, discriminator: 2)
!5473 = !DILocation(line: 1762, column: 104, scope: !5452)
!5474 = !DILocation(line: 1764, column: 13, scope: !903)
!5475 = !DILocation(line: 1764, column: 18, scope: !5476)
!5476 = !DILexicalBlockFile(scope: !907, file: !420, discriminator: 1)
!5477 = !DILocation(line: 1764, column: 32, scope: !907)
!5478 = !DILocation(line: 1764, column: 54, scope: !907)
!5479 = !DILocation(line: 1764, column: 37, scope: !907)
!5480 = !DILocation(line: 1764, column: 65, scope: !907)
!5481 = !DILocation(line: 1764, column: 70, scope: !907)
!5482 = !DILocation(line: 1764, column: 58, scope: !907)
!5483 = !DILocation(line: 1764, column: 93, scope: !903)
!5484 = !DILocation(line: 1764, column: 93, scope: !907)
!5485 = !DILocation(line: 1764, column: 93, scope: !5486)
!5486 = !DILexicalBlockFile(scope: !907, file: !420, discriminator: 2)
!5487 = !DILocation(line: 1764, column: 106, scope: !5452)
!5488 = !DILocation(line: 1766, column: 9, scope: !896)
!5489 = !DILocation(line: 1771, column: 29, scope: !896)
!5490 = !DILocation(line: 1771, column: 15, scope: !896)
!5491 = !DILocation(line: 1771, column: 13, scope: !896)
!5492 = !DILocation(line: 1772, column: 13, scope: !5493)
!5493 = distinct !DILexicalBlock(scope: !896, file: !420, line: 1772, column: 13)
!5494 = !DILocation(line: 1772, column: 17, scope: !5493)
!5495 = !DILocation(line: 1772, column: 23, scope: !5493)
!5496 = !DILocation(line: 1772, column: 26, scope: !5497)
!5497 = !DILexicalBlockFile(scope: !5493, file: !420, discriminator: 1)
!5498 = !DILocation(line: 1772, column: 13, scope: !896)
!5499 = !DILocation(line: 1773, column: 13, scope: !5493)
!5500 = !DILocation(line: 1774, column: 9, scope: !896)
!5501 = !DILocation(line: 1774, column: 14, scope: !5502)
!5502 = !DILexicalBlockFile(scope: !909, file: !420, discriminator: 1)
!5503 = !DILocation(line: 1774, column: 24, scope: !909)
!5504 = !DILocation(line: 1774, column: 42, scope: !909)
!5505 = !DILocation(line: 1774, column: 29, scope: !909)
!5506 = !DILocation(line: 1774, column: 54, scope: !909)
!5507 = !DILocation(line: 1774, column: 59, scope: !909)
!5508 = !DILocation(line: 1774, column: 47, scope: !909)
!5509 = !DILocation(line: 1774, column: 82, scope: !896)
!5510 = !DILocation(line: 1774, column: 82, scope: !909)
!5511 = !DILocation(line: 1774, column: 82, scope: !5512)
!5512 = !DILexicalBlockFile(scope: !909, file: !420, discriminator: 2)
!5513 = !DILocation(line: 1775, column: 9, scope: !896)
!5514 = !DILocation(line: 1777, column: 29, scope: !896)
!5515 = !DILocation(line: 1777, column: 15, scope: !896)
!5516 = !DILocation(line: 1777, column: 13, scope: !896)
!5517 = !DILocation(line: 1778, column: 13, scope: !5518)
!5518 = distinct !DILexicalBlock(scope: !896, file: !420, line: 1778, column: 13)
!5519 = !DILocation(line: 1778, column: 17, scope: !5518)
!5520 = !DILocation(line: 1778, column: 43, scope: !5518)
!5521 = !DILocation(line: 1778, column: 46, scope: !5522)
!5522 = !DILexicalBlockFile(scope: !5518, file: !420, discriminator: 1)
!5523 = !DILocation(line: 1778, column: 13, scope: !896)
!5524 = !DILocation(line: 1779, column: 13, scope: !5518)
!5525 = !DILocation(line: 1780, column: 9, scope: !896)
!5526 = !DILocation(line: 1780, column: 14, scope: !5527)
!5527 = !DILexicalBlockFile(scope: !911, file: !420, discriminator: 1)
!5528 = !DILocation(line: 1780, column: 33, scope: !911)
!5529 = !DILocation(line: 1780, column: 60, scope: !911)
!5530 = !DILocation(line: 1780, column: 38, scope: !911)
!5531 = !DILocation(line: 1780, column: 72, scope: !911)
!5532 = !DILocation(line: 1780, column: 77, scope: !911)
!5533 = !DILocation(line: 1780, column: 65, scope: !911)
!5534 = !DILocation(line: 1780, column: 100, scope: !896)
!5535 = !DILocation(line: 1780, column: 100, scope: !911)
!5536 = !DILocation(line: 1780, column: 100, scope: !5537)
!5537 = !DILexicalBlockFile(scope: !911, file: !420, discriminator: 2)
!5538 = !DILocation(line: 1781, column: 9, scope: !896)
!5539 = !DILocation(line: 1786, column: 27, scope: !896)
!5540 = !DILocation(line: 1786, column: 14, scope: !896)
!5541 = !DILocation(line: 1786, column: 12, scope: !896)
!5542 = !DILocation(line: 1787, column: 13, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !896, file: !420, line: 1787, column: 13)
!5544 = !DILocation(line: 1787, column: 16, scope: !5543)
!5545 = !DILocation(line: 1787, column: 22, scope: !5543)
!5546 = !DILocation(line: 1787, column: 25, scope: !5547)
!5547 = !DILexicalBlockFile(scope: !5543, file: !420, discriminator: 1)
!5548 = !DILocation(line: 1787, column: 13, scope: !896)
!5549 = !DILocation(line: 1788, column: 13, scope: !5543)
!5550 = !DILocation(line: 1789, column: 9, scope: !896)
!5551 = !DILocation(line: 1789, column: 14, scope: !5552)
!5552 = !DILexicalBlockFile(scope: !913, file: !420, discriminator: 1)
!5553 = !DILocation(line: 1789, column: 25, scope: !913)
!5554 = !DILocation(line: 1789, column: 44, scope: !913)
!5555 = !DILocation(line: 1789, column: 30, scope: !913)
!5556 = !DILocation(line: 1789, column: 55, scope: !913)
!5557 = !DILocation(line: 1789, column: 60, scope: !913)
!5558 = !DILocation(line: 1789, column: 48, scope: !913)
!5559 = !DILocation(line: 1789, column: 83, scope: !896)
!5560 = !DILocation(line: 1789, column: 83, scope: !913)
!5561 = !DILocation(line: 1789, column: 83, scope: !5562)
!5562 = !DILexicalBlockFile(scope: !913, file: !420, discriminator: 2)
!5563 = !DILocation(line: 1790, column: 9, scope: !896)
!5564 = !DILocation(line: 1792, column: 27, scope: !896)
!5565 = !DILocation(line: 1792, column: 14, scope: !896)
!5566 = !DILocation(line: 1792, column: 12, scope: !896)
!5567 = !DILocation(line: 1793, column: 13, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !896, file: !420, line: 1793, column: 13)
!5569 = !DILocation(line: 1793, column: 16, scope: !5568)
!5570 = !DILocation(line: 1793, column: 30, scope: !5568)
!5571 = !DILocation(line: 1793, column: 33, scope: !5572)
!5572 = !DILexicalBlockFile(scope: !5568, file: !420, discriminator: 1)
!5573 = !DILocation(line: 1793, column: 13, scope: !896)
!5574 = !DILocation(line: 1794, column: 13, scope: !5568)
!5575 = !DILocation(line: 1795, column: 9, scope: !896)
!5576 = !DILocation(line: 1795, column: 14, scope: !5577)
!5577 = !DILexicalBlockFile(scope: !915, file: !420, discriminator: 1)
!5578 = !DILocation(line: 1795, column: 21, scope: !915)
!5579 = !DILocation(line: 1795, column: 36, scope: !915)
!5580 = !DILocation(line: 1795, column: 26, scope: !915)
!5581 = !DILocation(line: 1795, column: 47, scope: !915)
!5582 = !DILocation(line: 1795, column: 52, scope: !915)
!5583 = !DILocation(line: 1795, column: 40, scope: !915)
!5584 = !DILocation(line: 1795, column: 75, scope: !896)
!5585 = !DILocation(line: 1795, column: 75, scope: !915)
!5586 = !DILocation(line: 1795, column: 75, scope: !5587)
!5587 = !DILexicalBlockFile(scope: !915, file: !420, discriminator: 2)
!5588 = !DILocation(line: 1796, column: 9, scope: !896)
!5589 = !DILocation(line: 1800, column: 30, scope: !896)
!5590 = !DILocation(line: 1800, column: 13, scope: !896)
!5591 = !DILocation(line: 1800, column: 11, scope: !896)
!5592 = !DILocation(line: 1801, column: 13, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !896, file: !420, line: 1801, column: 13)
!5594 = !DILocation(line: 1801, column: 15, scope: !5593)
!5595 = !DILocation(line: 1801, column: 23, scope: !5593)
!5596 = !DILocation(line: 1801, column: 26, scope: !5597)
!5597 = !DILexicalBlockFile(scope: !5593, file: !420, discriminator: 1)
!5598 = !DILocation(line: 1801, column: 13, scope: !896)
!5599 = !DILocation(line: 1802, column: 13, scope: !5593)
!5600 = !DILocation(line: 1803, column: 13, scope: !919)
!5601 = !DILocation(line: 1803, column: 20, scope: !919)
!5602 = !DILocation(line: 1803, column: 13, scope: !896)
!5603 = !DILocation(line: 1804, column: 13, scope: !918)
!5604 = !DILocation(line: 1804, column: 18, scope: !5605)
!5605 = !DILexicalBlockFile(scope: !917, file: !420, discriminator: 1)
!5606 = !DILocation(line: 1804, column: 24, scope: !917)
!5607 = !DILocation(line: 1804, column: 38, scope: !917)
!5608 = !DILocation(line: 1804, column: 31, scope: !917)
!5609 = !DILocation(line: 1804, column: 29, scope: !917)
!5610 = !DILocation(line: 1804, column: 48, scope: !917)
!5611 = !DILocation(line: 1804, column: 53, scope: !917)
!5612 = !DILocation(line: 1804, column: 41, scope: !917)
!5613 = !DILocation(line: 1804, column: 76, scope: !918)
!5614 = !DILocation(line: 1804, column: 76, scope: !917)
!5615 = !DILocation(line: 1804, column: 76, scope: !5616)
!5616 = !DILexicalBlockFile(scope: !917, file: !420, discriminator: 2)
!5617 = !DILocation(line: 1805, column: 9, scope: !918)
!5618 = !DILocation(line: 1807, column: 13, scope: !922)
!5619 = !DILocation(line: 1807, column: 18, scope: !5620)
!5620 = !DILexicalBlockFile(scope: !921, file: !420, discriminator: 1)
!5621 = !DILocation(line: 1807, column: 25, scope: !921)
!5622 = !DILocation(line: 1807, column: 40, scope: !921)
!5623 = !DILocation(line: 1807, column: 30, scope: !921)
!5624 = !DILocation(line: 1807, column: 50, scope: !921)
!5625 = !DILocation(line: 1807, column: 55, scope: !921)
!5626 = !DILocation(line: 1807, column: 43, scope: !921)
!5627 = !DILocation(line: 1807, column: 78, scope: !922)
!5628 = !DILocation(line: 1807, column: 78, scope: !921)
!5629 = !DILocation(line: 1807, column: 78, scope: !5630)
!5630 = !DILexicalBlockFile(scope: !921, file: !420, discriminator: 2)
!5631 = !DILocation(line: 1809, column: 9, scope: !896)
!5632 = !DILocation(line: 1813, column: 30, scope: !896)
!5633 = !DILocation(line: 1813, column: 14, scope: !896)
!5634 = !DILocation(line: 1813, column: 12, scope: !896)
!5635 = !DILocation(line: 1814, column: 13, scope: !5636)
!5636 = distinct !DILexicalBlock(scope: !896, file: !420, line: 1814, column: 13)
!5637 = !DILocation(line: 1814, column: 16, scope: !5636)
!5638 = !DILocation(line: 1814, column: 13, scope: !896)
!5639 = !DILocation(line: 1815, column: 13, scope: !5636)
!5640 = !DILocation(line: 1817, column: 9, scope: !896)
!5641 = !DILocation(line: 1817, column: 14, scope: !924)
!5642 = !DILocation(line: 1817, column: 20, scope: !924)
!5643 = !DILocation(line: 1817, column: 34, scope: !5644)
!5644 = !DILexicalBlockFile(scope: !924, file: !420, discriminator: 1)
!5645 = !DILocation(line: 1817, column: 27, scope: !924)
!5646 = !DILocation(line: 1817, column: 25, scope: !924)
!5647 = !DILocation(line: 1817, column: 45, scope: !924)
!5648 = !DILocation(line: 1817, column: 38, scope: !924)
!5649 = !DILocation(line: 1817, column: 73, scope: !896)
!5650 = !DILocation(line: 1817, column: 73, scope: !924)
!5651 = !DILocation(line: 1817, column: 73, scope: !5652)
!5652 = !DILexicalBlockFile(scope: !924, file: !420, discriminator: 2)
!5653 = !DILocation(line: 1821, column: 10, scope: !896)
!5654 = !DILocation(line: 1825, column: 31, scope: !5655)
!5655 = distinct !DILexicalBlock(scope: !896, file: !420, line: 1825, column: 13)
!5656 = !DILocation(line: 1825, column: 39, scope: !5655)
!5657 = !DILocation(line: 1825, column: 50, scope: !5655)
!5658 = !DILocation(line: 1825, column: 59, scope: !5655)
!5659 = !DILocation(line: 1825, column: 76, scope: !5655)
!5660 = !DILocation(line: 1825, column: 13, scope: !896)
!5661 = !DILocation(line: 1826, column: 35, scope: !5655)
!5662 = !DILocation(line: 1826, column: 20, scope: !5655)
!5663 = !DILocation(line: 1826, column: 13, scope: !5655)
!5664 = !DILocation(line: 1827, column: 44, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !896, file: !420, line: 1827, column: 13)
!5666 = !DILocation(line: 1827, column: 29, scope: !5665)
!5667 = !DILocation(line: 1827, column: 52, scope: !5665)
!5668 = !DILocation(line: 1827, column: 62, scope: !5665)
!5669 = !DILocation(line: 1827, column: 13, scope: !896)
!5670 = !DILocation(line: 1828, column: 36, scope: !5665)
!5671 = !DILocation(line: 1828, column: 20, scope: !5665)
!5672 = !DILocation(line: 1828, column: 13, scope: !5665)
!5673 = !DILocation(line: 1829, column: 51, scope: !896)
!5674 = !DILocation(line: 1829, column: 33, scope: !896)
!5675 = !DILocation(line: 1829, column: 59, scope: !896)
!5676 = !DILocation(line: 1829, column: 31, scope: !896)
!5677 = !DILocation(line: 1829, column: 16, scope: !896)
!5678 = !DILocation(line: 1829, column: 10, scope: !896)
!5679 = !DILocation(line: 1829, column: 14, scope: !896)
!5680 = !DILocation(line: 1830, column: 9, scope: !896)
!5681 = !DILocation(line: 1834, column: 30, scope: !896)
!5682 = !DILocation(line: 1834, column: 13, scope: !896)
!5683 = !DILocation(line: 1834, column: 11, scope: !896)
!5684 = !DILocation(line: 1835, column: 13, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !896, file: !420, line: 1835, column: 13)
!5686 = !DILocation(line: 1835, column: 15, scope: !5685)
!5687 = !DILocation(line: 1835, column: 29, scope: !5685)
!5688 = !DILocation(line: 1835, column: 32, scope: !5689)
!5689 = !DILexicalBlockFile(scope: !5685, file: !420, discriminator: 1)
!5690 = !DILocation(line: 1835, column: 13, scope: !896)
!5691 = !DILocation(line: 1836, column: 13, scope: !5685)
!5692 = !DILocation(line: 1837, column: 9, scope: !896)
!5693 = !DILocation(line: 1837, column: 14, scope: !5694)
!5694 = !DILexicalBlockFile(scope: !926, file: !420, discriminator: 1)
!5695 = !DILocation(line: 1837, column: 21, scope: !926)
!5696 = !DILocation(line: 1837, column: 36, scope: !926)
!5697 = !DILocation(line: 1837, column: 26, scope: !926)
!5698 = !DILocation(line: 1837, column: 46, scope: !926)
!5699 = !DILocation(line: 1837, column: 51, scope: !926)
!5700 = !DILocation(line: 1837, column: 39, scope: !926)
!5701 = !DILocation(line: 1837, column: 74, scope: !896)
!5702 = !DILocation(line: 1837, column: 74, scope: !926)
!5703 = !DILocation(line: 1837, column: 74, scope: !5704)
!5704 = !DILexicalBlockFile(scope: !926, file: !420, discriminator: 2)
!5705 = !DILocation(line: 1838, column: 9, scope: !896)
!5706 = !DILocation(line: 1841, column: 14, scope: !896)
!5707 = !DILocation(line: 1844, column: 5, scope: !878)
!5708 = !DILocation(line: 1847, column: 26, scope: !878)
!5709 = !DILocation(line: 1847, column: 12, scope: !878)
!5710 = !DILocation(line: 1847, column: 5, scope: !878)
!5711 = !DILocation(line: 1849, column: 28, scope: !878)
!5712 = !DILocation(line: 1849, column: 12, scope: !878)
!5713 = !DILocation(line: 1849, column: 5, scope: !878)
!5714 = !DILocation(line: 1851, column: 18, scope: !878)
!5715 = !DILocation(line: 1852, column: 48, scope: !878)
!5716 = !DILocation(line: 1851, column: 5, scope: !878)
!5717 = !DILocation(line: 1853, column: 5, scope: !878)
!5718 = !DILocation(line: 1854, column: 1, scope: !878)
!5719 = !DILocation(line: 382, column: 24, scope: !990)
!5720 = !DILocation(line: 382, column: 41, scope: !990)
!5721 = !DILocation(line: 384, column: 5, scope: !990)
!5722 = !DILocation(line: 384, column: 11, scope: !990)
!5723 = !DILocation(line: 388, column: 26, scope: !5724)
!5724 = distinct !DILexicalBlock(scope: !990, file: !420, line: 388, column: 9)
!5725 = !DILocation(line: 388, column: 32, scope: !5724)
!5726 = !DILocation(line: 388, column: 10, scope: !5724)
!5727 = !DILocation(line: 388, column: 9, scope: !990)
!5728 = !DILocation(line: 389, column: 9, scope: !5724)
!5729 = !DILocation(line: 391, column: 33, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !990, file: !420, line: 391, column: 9)
!5731 = !DILocation(line: 391, column: 39, scope: !5730)
!5732 = !DILocation(line: 391, column: 10, scope: !5730)
!5733 = !DILocation(line: 391, column: 9, scope: !990)
!5734 = !DILocation(line: 392, column: 28, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5730, file: !420, line: 391, column: 45)
!5736 = !DILocation(line: 392, column: 34, scope: !5735)
!5737 = !DILocation(line: 392, column: 45, scope: !5735)
!5738 = !DILocation(line: 392, column: 51, scope: !5735)
!5739 = !DILocation(line: 392, column: 43, scope: !5735)
!5740 = !DILocation(line: 392, column: 15, scope: !5735)
!5741 = !DILocation(line: 392, column: 13, scope: !5735)
!5742 = !DILocation(line: 393, column: 13, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !5735, file: !420, line: 393, column: 13)
!5744 = !DILocation(line: 393, column: 17, scope: !5743)
!5745 = !DILocation(line: 393, column: 13, scope: !5735)
!5746 = !DILocation(line: 394, column: 13, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5743, file: !420, line: 393, column: 32)
!5748 = !DILocation(line: 395, column: 13, scope: !5747)
!5749 = !DILocation(line: 397, column: 5, scope: !5735)
!5750 = !DILocation(line: 399, column: 15, scope: !990)
!5751 = !DILocation(line: 399, column: 21, scope: !990)
!5752 = !DILocation(line: 399, column: 28, scope: !990)
!5753 = !DILocation(line: 399, column: 34, scope: !990)
!5754 = !DILocation(line: 400, column: 15, scope: !990)
!5755 = !DILocation(line: 400, column: 21, scope: !990)
!5756 = !DILocation(line: 400, column: 26, scope: !990)
!5757 = !DILocation(line: 400, column: 32, scope: !990)
!5758 = !DILocation(line: 400, column: 41, scope: !990)
!5759 = !DILocation(line: 400, column: 47, scope: !990)
!5760 = !DILocation(line: 401, column: 15, scope: !990)
!5761 = !DILocation(line: 401, column: 20, scope: !990)
!5762 = !DILocation(line: 401, column: 25, scope: !990)
!5763 = !DILocation(line: 401, column: 30, scope: !990)
!5764 = !DILocation(line: 401, column: 39, scope: !990)
!5765 = !DILocation(line: 401, column: 44, scope: !990)
!5766 = !DILocation(line: 402, column: 15, scope: !990)
!5767 = !DILocation(line: 399, column: 5, scope: !990)
!5768 = !DILocation(line: 404, column: 9, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !990, file: !420, line: 404, column: 9)
!5770 = !DILocation(line: 404, column: 9, scope: !990)
!5771 = !DILocation(line: 405, column: 20, scope: !5769)
!5772 = !DILocation(line: 405, column: 9, scope: !5769)
!5773 = !DILocation(line: 407, column: 5, scope: !990)
!5774 = !DILocation(line: 408, column: 1, scope: !990)
!5775 = !DILocation(line: 1515, column: 24, scope: !927)
!5776 = !DILocation(line: 1517, column: 5, scope: !927)
!5777 = !DILocation(line: 1517, column: 15, scope: !927)
!5778 = !DILocation(line: 1518, column: 5, scope: !927)
!5779 = !DILocation(line: 1518, column: 10, scope: !927)
!5780 = !DILocation(line: 1520, column: 26, scope: !927)
!5781 = !DILocation(line: 1520, column: 11, scope: !927)
!5782 = !DILocation(line: 1520, column: 9, scope: !927)
!5783 = !DILocation(line: 1521, column: 9, scope: !5784)
!5784 = distinct !DILexicalBlock(scope: !927, file: !420, line: 1521, column: 9)
!5785 = !DILocation(line: 1521, column: 13, scope: !5784)
!5786 = !DILocation(line: 1521, column: 9, scope: !927)
!5787 = !DILocation(line: 1522, column: 9, scope: !5784)
!5788 = !DILocation(line: 1524, column: 24, scope: !927)
!5789 = !DILocation(line: 1524, column: 10, scope: !927)
!5790 = !DILocation(line: 1524, column: 8, scope: !927)
!5791 = !DILocation(line: 1525, column: 5, scope: !927)
!5792 = !DILocation(line: 1525, column: 10, scope: !5793)
!5793 = !DILexicalBlockFile(scope: !935, file: !420, discriminator: 1)
!5794 = !DILocation(line: 1525, column: 20, scope: !935)
!5795 = !DILocation(line: 1525, column: 50, scope: !935)
!5796 = !DILocation(line: 1525, column: 64, scope: !5797)
!5797 = distinct !DILexicalBlock(scope: !935, file: !420, line: 1525, column: 61)
!5798 = !DILocation(line: 1525, column: 81, scope: !5797)
!5799 = !DILocation(line: 1525, column: 61, scope: !5797)
!5800 = !DILocation(line: 1525, column: 91, scope: !5797)
!5801 = !DILocation(line: 1525, column: 61, scope: !935)
!5802 = !DILocation(line: 1525, column: 61, scope: !5803)
!5803 = !DILexicalBlockFile(scope: !935, file: !420, discriminator: 2)
!5804 = !DILocation(line: 1525, column: 122, scope: !5805)
!5805 = !DILexicalBlockFile(scope: !5797, file: !420, discriminator: 3)
!5806 = !DILocation(line: 1525, column: 140, scope: !5797)
!5807 = !DILocation(line: 1525, column: 150, scope: !5797)
!5808 = !DILocation(line: 1525, column: 175, scope: !5797)
!5809 = !DILocation(line: 1525, column: 106, scope: !5797)
!5810 = !DILocation(line: 1525, column: 194, scope: !5811)
!5811 = !DILexicalBlockFile(scope: !927, file: !420, discriminator: 4)
!5812 = !DILocation(line: 1525, column: 194, scope: !935)
!5813 = !DILocation(line: 1525, column: 194, scope: !5814)
!5814 = !DILexicalBlockFile(scope: !935, file: !420, discriminator: 5)
!5815 = !DILocation(line: 1526, column: 12, scope: !927)
!5816 = !DILocation(line: 1526, column: 5, scope: !927)
!5817 = !DILocation(line: 1527, column: 1, scope: !927)
!5818 = !DILocation(line: 1530, column: 24, scope: !936)
!5819 = !DILocation(line: 1532, column: 5, scope: !936)
!5820 = !DILocation(line: 1532, column: 15, scope: !936)
!5821 = !DILocation(line: 1533, column: 5, scope: !936)
!5822 = !DILocation(line: 1533, column: 19, scope: !936)
!5823 = !DILocation(line: 1535, column: 26, scope: !936)
!5824 = !DILocation(line: 1535, column: 11, scope: !936)
!5825 = !DILocation(line: 1535, column: 9, scope: !936)
!5826 = !DILocation(line: 1536, column: 9, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !936, file: !420, line: 1536, column: 9)
!5828 = !DILocation(line: 1536, column: 13, scope: !5827)
!5829 = !DILocation(line: 1536, column: 9, scope: !936)
!5830 = !DILocation(line: 1537, column: 9, scope: !5827)
!5831 = !DILocation(line: 1539, column: 32, scope: !936)
!5832 = !DILocation(line: 1539, column: 10, scope: !936)
!5833 = !DILocation(line: 1539, column: 8, scope: !936)
!5834 = !DILocation(line: 1540, column: 5, scope: !936)
!5835 = !DILocation(line: 1540, column: 10, scope: !5836)
!5836 = !DILexicalBlockFile(scope: !944, file: !420, discriminator: 1)
!5837 = !DILocation(line: 1540, column: 20, scope: !944)
!5838 = !DILocation(line: 1540, column: 50, scope: !944)
!5839 = !DILocation(line: 1540, column: 64, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !944, file: !420, line: 1540, column: 61)
!5841 = !DILocation(line: 1540, column: 81, scope: !5840)
!5842 = !DILocation(line: 1540, column: 61, scope: !5840)
!5843 = !DILocation(line: 1540, column: 91, scope: !5840)
!5844 = !DILocation(line: 1540, column: 61, scope: !944)
!5845 = !DILocation(line: 1540, column: 61, scope: !5846)
!5846 = !DILexicalBlockFile(scope: !944, file: !420, discriminator: 2)
!5847 = !DILocation(line: 1540, column: 122, scope: !5848)
!5848 = !DILexicalBlockFile(scope: !5840, file: !420, discriminator: 3)
!5849 = !DILocation(line: 1540, column: 140, scope: !5840)
!5850 = !DILocation(line: 1540, column: 150, scope: !5840)
!5851 = !DILocation(line: 1540, column: 175, scope: !5840)
!5852 = !DILocation(line: 1540, column: 106, scope: !5840)
!5853 = !DILocation(line: 1540, column: 194, scope: !5854)
!5854 = !DILexicalBlockFile(scope: !936, file: !420, discriminator: 4)
!5855 = !DILocation(line: 1540, column: 194, scope: !944)
!5856 = !DILocation(line: 1540, column: 194, scope: !5857)
!5857 = !DILexicalBlockFile(scope: !944, file: !420, discriminator: 5)
!5858 = !DILocation(line: 1541, column: 12, scope: !936)
!5859 = !DILocation(line: 1541, column: 5, scope: !936)
!5860 = !DILocation(line: 1542, column: 1, scope: !936)
!5861 = !DILocation(line: 1546, column: 25, scope: !945)
!5862 = !DILocation(line: 1548, column: 5, scope: !945)
!5863 = !DILocation(line: 1548, column: 15, scope: !945)
!5864 = !DILocation(line: 1549, column: 5, scope: !945)
!5865 = !DILocation(line: 1549, column: 15, scope: !945)
!5866 = !DILocation(line: 1551, column: 26, scope: !945)
!5867 = !DILocation(line: 1551, column: 11, scope: !945)
!5868 = !DILocation(line: 1551, column: 9, scope: !945)
!5869 = !DILocation(line: 1552, column: 9, scope: !5870)
!5870 = distinct !DILexicalBlock(scope: !945, file: !420, line: 1552, column: 9)
!5871 = !DILocation(line: 1552, column: 13, scope: !5870)
!5872 = !DILocation(line: 1552, column: 9, scope: !945)
!5873 = !DILocation(line: 1553, column: 9, scope: !5870)
!5874 = !DILocation(line: 1555, column: 29, scope: !945)
!5875 = !DILocation(line: 1555, column: 11, scope: !945)
!5876 = !DILocation(line: 1555, column: 9, scope: !945)
!5877 = !DILocation(line: 1556, column: 5, scope: !945)
!5878 = !DILocation(line: 1556, column: 10, scope: !5879)
!5879 = !DILexicalBlockFile(scope: !953, file: !420, discriminator: 1)
!5880 = !DILocation(line: 1556, column: 20, scope: !953)
!5881 = !DILocation(line: 1556, column: 50, scope: !953)
!5882 = !DILocation(line: 1556, column: 64, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !953, file: !420, line: 1556, column: 61)
!5884 = !DILocation(line: 1556, column: 81, scope: !5883)
!5885 = !DILocation(line: 1556, column: 61, scope: !5883)
!5886 = !DILocation(line: 1556, column: 91, scope: !5883)
!5887 = !DILocation(line: 1556, column: 61, scope: !953)
!5888 = !DILocation(line: 1556, column: 61, scope: !5889)
!5889 = !DILexicalBlockFile(scope: !953, file: !420, discriminator: 2)
!5890 = !DILocation(line: 1556, column: 122, scope: !5891)
!5891 = !DILexicalBlockFile(scope: !5883, file: !420, discriminator: 3)
!5892 = !DILocation(line: 1556, column: 140, scope: !5883)
!5893 = !DILocation(line: 1556, column: 150, scope: !5883)
!5894 = !DILocation(line: 1556, column: 175, scope: !5883)
!5895 = !DILocation(line: 1556, column: 106, scope: !5883)
!5896 = !DILocation(line: 1556, column: 194, scope: !5897)
!5897 = !DILexicalBlockFile(scope: !945, file: !420, discriminator: 4)
!5898 = !DILocation(line: 1556, column: 194, scope: !953)
!5899 = !DILocation(line: 1556, column: 194, scope: !5900)
!5900 = !DILexicalBlockFile(scope: !953, file: !420, discriminator: 5)
!5901 = !DILocation(line: 1557, column: 12, scope: !945)
!5902 = !DILocation(line: 1557, column: 5, scope: !945)
!5903 = !DILocation(line: 1558, column: 1, scope: !945)
!5904 = !DILocation(line: 1561, column: 25, scope: !954)
!5905 = !DILocation(line: 1563, column: 5, scope: !954)
!5906 = !DILocation(line: 1563, column: 15, scope: !954)
!5907 = !DILocation(line: 1564, column: 5, scope: !954)
!5908 = !DILocation(line: 1564, column: 24, scope: !954)
!5909 = !DILocation(line: 1566, column: 26, scope: !954)
!5910 = !DILocation(line: 1566, column: 11, scope: !954)
!5911 = !DILocation(line: 1566, column: 9, scope: !954)
!5912 = !DILocation(line: 1567, column: 9, scope: !5913)
!5913 = distinct !DILexicalBlock(scope: !954, file: !420, line: 1567, column: 9)
!5914 = !DILocation(line: 1567, column: 13, scope: !5913)
!5915 = !DILocation(line: 1567, column: 9, scope: !954)
!5916 = !DILocation(line: 1568, column: 9, scope: !5913)
!5917 = !DILocation(line: 1570, column: 37, scope: !954)
!5918 = !DILocation(line: 1570, column: 11, scope: !954)
!5919 = !DILocation(line: 1570, column: 9, scope: !954)
!5920 = !DILocation(line: 1571, column: 5, scope: !954)
!5921 = !DILocation(line: 1571, column: 10, scope: !5922)
!5922 = !DILexicalBlockFile(scope: !962, file: !420, discriminator: 1)
!5923 = !DILocation(line: 1571, column: 20, scope: !962)
!5924 = !DILocation(line: 1571, column: 50, scope: !962)
!5925 = !DILocation(line: 1571, column: 64, scope: !5926)
!5926 = distinct !DILexicalBlock(scope: !962, file: !420, line: 1571, column: 61)
!5927 = !DILocation(line: 1571, column: 81, scope: !5926)
!5928 = !DILocation(line: 1571, column: 61, scope: !5926)
!5929 = !DILocation(line: 1571, column: 91, scope: !5926)
!5930 = !DILocation(line: 1571, column: 61, scope: !962)
!5931 = !DILocation(line: 1571, column: 61, scope: !5932)
!5932 = !DILexicalBlockFile(scope: !962, file: !420, discriminator: 2)
!5933 = !DILocation(line: 1571, column: 122, scope: !5934)
!5934 = !DILexicalBlockFile(scope: !5926, file: !420, discriminator: 3)
!5935 = !DILocation(line: 1571, column: 140, scope: !5926)
!5936 = !DILocation(line: 1571, column: 150, scope: !5926)
!5937 = !DILocation(line: 1571, column: 175, scope: !5926)
!5938 = !DILocation(line: 1571, column: 106, scope: !5926)
!5939 = !DILocation(line: 1571, column: 194, scope: !5940)
!5940 = !DILexicalBlockFile(scope: !954, file: !420, discriminator: 4)
!5941 = !DILocation(line: 1571, column: 194, scope: !962)
!5942 = !DILocation(line: 1571, column: 194, scope: !5943)
!5943 = !DILexicalBlockFile(scope: !962, file: !420, discriminator: 5)
!5944 = !DILocation(line: 1572, column: 12, scope: !954)
!5945 = !DILocation(line: 1572, column: 5, scope: !954)
!5946 = !DILocation(line: 1573, column: 1, scope: !954)
!5947 = !DILocation(line: 1577, column: 24, scope: !963)
!5948 = !DILocation(line: 1579, column: 5, scope: !963)
!5949 = !DILocation(line: 1579, column: 15, scope: !963)
!5950 = !DILocation(line: 1580, column: 5, scope: !963)
!5951 = !DILocation(line: 1580, column: 16, scope: !963)
!5952 = !DILocation(line: 1582, column: 26, scope: !963)
!5953 = !DILocation(line: 1582, column: 11, scope: !963)
!5954 = !DILocation(line: 1582, column: 9, scope: !963)
!5955 = !DILocation(line: 1583, column: 9, scope: !5956)
!5956 = distinct !DILexicalBlock(scope: !963, file: !420, line: 1583, column: 9)
!5957 = !DILocation(line: 1583, column: 13, scope: !5956)
!5958 = !DILocation(line: 1583, column: 9, scope: !963)
!5959 = !DILocation(line: 1584, column: 9, scope: !5956)
!5960 = !DILocation(line: 1586, column: 27, scope: !963)
!5961 = !DILocation(line: 1586, column: 10, scope: !963)
!5962 = !DILocation(line: 1586, column: 8, scope: !963)
!5963 = !DILocation(line: 1587, column: 5, scope: !963)
!5964 = !DILocation(line: 1587, column: 10, scope: !5965)
!5965 = !DILexicalBlockFile(scope: !969, file: !420, discriminator: 1)
!5966 = !DILocation(line: 1587, column: 20, scope: !969)
!5967 = !DILocation(line: 1587, column: 50, scope: !969)
!5968 = !DILocation(line: 1587, column: 64, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !969, file: !420, line: 1587, column: 61)
!5970 = !DILocation(line: 1587, column: 81, scope: !5969)
!5971 = !DILocation(line: 1587, column: 61, scope: !5969)
!5972 = !DILocation(line: 1587, column: 91, scope: !5969)
!5973 = !DILocation(line: 1587, column: 61, scope: !969)
!5974 = !DILocation(line: 1587, column: 61, scope: !5975)
!5975 = !DILexicalBlockFile(scope: !969, file: !420, discriminator: 2)
!5976 = !DILocation(line: 1587, column: 122, scope: !5977)
!5977 = !DILexicalBlockFile(scope: !5969, file: !420, discriminator: 3)
!5978 = !DILocation(line: 1587, column: 140, scope: !5969)
!5979 = !DILocation(line: 1587, column: 150, scope: !5969)
!5980 = !DILocation(line: 1587, column: 175, scope: !5969)
!5981 = !DILocation(line: 1587, column: 106, scope: !5969)
!5982 = !DILocation(line: 1587, column: 194, scope: !5983)
!5983 = !DILexicalBlockFile(scope: !963, file: !420, discriminator: 4)
!5984 = !DILocation(line: 1587, column: 194, scope: !969)
!5985 = !DILocation(line: 1587, column: 194, scope: !5986)
!5986 = !DILexicalBlockFile(scope: !969, file: !420, discriminator: 5)
!5987 = !DILocation(line: 1588, column: 12, scope: !963)
!5988 = !DILocation(line: 1588, column: 5, scope: !963)
!5989 = !DILocation(line: 1589, column: 1, scope: !963)
!5990 = !DILocation(line: 1592, column: 24, scope: !970)
!5991 = !DILocation(line: 1594, column: 5, scope: !970)
!5992 = !DILocation(line: 1594, column: 15, scope: !970)
!5993 = !DILocation(line: 1595, column: 5, scope: !970)
!5994 = !DILocation(line: 1595, column: 12, scope: !970)
!5995 = !DILocation(line: 1597, column: 26, scope: !970)
!5996 = !DILocation(line: 1597, column: 11, scope: !970)
!5997 = !DILocation(line: 1597, column: 9, scope: !970)
!5998 = !DILocation(line: 1598, column: 9, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !970, file: !420, line: 1598, column: 9)
!6000 = !DILocation(line: 1598, column: 13, scope: !5999)
!6001 = !DILocation(line: 1598, column: 9, scope: !970)
!6002 = !DILocation(line: 1599, column: 9, scope: !5999)
!6003 = !DILocation(line: 1601, column: 26, scope: !970)
!6004 = !DILocation(line: 1601, column: 10, scope: !970)
!6005 = !DILocation(line: 1601, column: 8, scope: !970)
!6006 = !DILocation(line: 1602, column: 5, scope: !970)
!6007 = !DILocation(line: 1602, column: 10, scope: !6008)
!6008 = !DILexicalBlockFile(scope: !978, file: !420, discriminator: 1)
!6009 = !DILocation(line: 1602, column: 20, scope: !978)
!6010 = !DILocation(line: 1602, column: 50, scope: !978)
!6011 = !DILocation(line: 1602, column: 64, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !978, file: !420, line: 1602, column: 61)
!6013 = !DILocation(line: 1602, column: 81, scope: !6012)
!6014 = !DILocation(line: 1602, column: 61, scope: !6012)
!6015 = !DILocation(line: 1602, column: 91, scope: !6012)
!6016 = !DILocation(line: 1602, column: 61, scope: !978)
!6017 = !DILocation(line: 1602, column: 61, scope: !6018)
!6018 = !DILexicalBlockFile(scope: !978, file: !420, discriminator: 2)
!6019 = !DILocation(line: 1602, column: 122, scope: !6020)
!6020 = !DILexicalBlockFile(scope: !6012, file: !420, discriminator: 3)
!6021 = !DILocation(line: 1602, column: 140, scope: !6012)
!6022 = !DILocation(line: 1602, column: 150, scope: !6012)
!6023 = !DILocation(line: 1602, column: 175, scope: !6012)
!6024 = !DILocation(line: 1602, column: 106, scope: !6012)
!6025 = !DILocation(line: 1602, column: 194, scope: !6026)
!6026 = !DILexicalBlockFile(scope: !970, file: !420, discriminator: 4)
!6027 = !DILocation(line: 1602, column: 194, scope: !978)
!6028 = !DILocation(line: 1602, column: 194, scope: !6029)
!6029 = !DILexicalBlockFile(scope: !978, file: !420, discriminator: 5)
!6030 = !DILocation(line: 1603, column: 12, scope: !970)
!6031 = !DILocation(line: 1603, column: 5, scope: !970)
!6032 = !DILocation(line: 1604, column: 1, scope: !970)
!6033 = !DILocation(line: 1481, column: 28, scope: !979)
!6034 = !DILocation(line: 1483, column: 18, scope: !979)
!6035 = !DILocation(line: 1484, column: 53, scope: !979)
!6036 = !DILocation(line: 1483, column: 5, scope: !979)
!6037 = !DILocation(line: 1485, column: 5, scope: !979)
!6038 = !DILocation(line: 1489, column: 29, scope: !984)
!6039 = !DILocation(line: 1491, column: 18, scope: !984)
!6040 = !DILocation(line: 1492, column: 54, scope: !984)
!6041 = !DILocation(line: 1491, column: 5, scope: !984)
!6042 = !DILocation(line: 1493, column: 5, scope: !984)
!6043 = !DILocation(line: 1497, column: 27, scope: !987)
!6044 = !DILocation(line: 1500, column: 32, scope: !6045)
!6045 = distinct !DILexicalBlock(scope: !987, file: !420, line: 1500, column: 9)
!6046 = !DILocation(line: 1500, column: 9, scope: !6045)
!6047 = !DILocation(line: 1500, column: 9, scope: !987)
!6048 = !DILocation(line: 1501, column: 9, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !6045, file: !420, line: 1500, column: 50)
!6050 = !DILocation(line: 1502, column: 31, scope: !6049)
!6051 = !DILocation(line: 1502, column: 16, scope: !6049)
!6052 = !DILocation(line: 1502, column: 9, scope: !6049)
!6053 = !DILocation(line: 1504, column: 37, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !6045, file: !420, line: 1504, column: 14)
!6055 = !DILocation(line: 1504, column: 14, scope: !6054)
!6056 = !DILocation(line: 1504, column: 58, scope: !6054)
!6057 = !DILocation(line: 1505, column: 37, scope: !6054)
!6058 = !DILocation(line: 1505, column: 14, scope: !6054)
!6059 = !DILocation(line: 1504, column: 14, scope: !6045)
!6060 = !DILocation(line: 1506, column: 9, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6054, file: !420, line: 1505, column: 56)
!6062 = !DILocation(line: 1507, column: 32, scope: !6061)
!6063 = !DILocation(line: 1507, column: 16, scope: !6061)
!6064 = !DILocation(line: 1507, column: 9, scope: !6061)
!6065 = !DILocation(line: 1510, column: 5, scope: !987)
!6066 = !DILocation(line: 1511, column: 1, scope: !987)
!6067 = !DILocation(line: 1105, column: 26, scope: !1006)
!6068 = !DILocation(line: 1105, column: 46, scope: !1006)
!6069 = !DILocation(line: 1107, column: 5, scope: !1006)
!6070 = !DILocation(line: 1107, column: 16, scope: !1006)
!6071 = !DILocation(line: 1109, column: 9, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !1006, file: !420, line: 1109, column: 9)
!6073 = !DILocation(line: 1109, column: 16, scope: !6072)
!6074 = !DILocation(line: 1109, column: 9, scope: !1006)
!6075 = !DILocation(line: 1109, column: 27, scope: !6076)
!6076 = !DILexicalBlockFile(scope: !6072, file: !420, discriminator: 1)
!6077 = !DILocation(line: 1109, column: 24, scope: !6072)
!6078 = !DILocation(line: 1111, column: 13, scope: !1006)
!6079 = !DILocation(line: 1112, column: 40, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !1006, file: !420, line: 1111, column: 21)
!6081 = !DILocation(line: 1112, column: 56, scope: !6080)
!6082 = !DILocation(line: 1113, column: 30, scope: !6080)
!6083 = !DILocation(line: 1113, column: 47, scope: !6080)
!6084 = !DILocation(line: 1114, column: 30, scope: !6080)
!6085 = !DILocation(line: 1114, column: 45, scope: !6080)
!6086 = !DILocation(line: 1115, column: 30, scope: !6080)
!6087 = !DILocation(line: 1115, column: 46, scope: !6080)
!6088 = !DILocation(line: 1117, column: 30, scope: !6080)
!6089 = !DILocation(line: 1117, column: 51, scope: !6080)
!6090 = !DILocation(line: 1119, column: 30, scope: !6080)
!6091 = !DILocation(line: 1119, column: 52, scope: !6080)
!6092 = !DILocation(line: 1120, column: 20, scope: !6080)
!6093 = !DILocation(line: 1120, column: 37, scope: !6080)
!6094 = !DILocation(line: 1121, column: 20, scope: !6080)
!6095 = !DILocation(line: 1121, column: 38, scope: !6080)
!6096 = !DILocation(line: 1123, column: 20, scope: !6080)
!6097 = !DILocation(line: 1123, column: 37, scope: !6080)
!6098 = !DILocation(line: 1127, column: 20, scope: !6080)
!6099 = !DILocation(line: 1127, column: 38, scope: !6080)
!6100 = !DILocation(line: 1130, column: 9, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !1006, file: !420, line: 1130, column: 9)
!6102 = !DILocation(line: 1130, column: 14, scope: !6101)
!6103 = !DILocation(line: 1130, column: 18, scope: !6101)
!6104 = !DILocation(line: 1130, column: 21, scope: !6105)
!6105 = !DILexicalBlockFile(scope: !6101, file: !420, discriminator: 1)
!6106 = !DILocation(line: 1130, column: 28, scope: !6101)
!6107 = !DILocation(line: 1130, column: 9, scope: !1006)
!6108 = !DILocation(line: 1131, column: 19, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !6101, file: !420, line: 1130, column: 37)
!6110 = !DILocation(line: 1131, column: 10, scope: !6109)
!6111 = !DILocation(line: 1131, column: 17, scope: !6109)
!6112 = !DILocation(line: 1132, column: 16, scope: !6109)
!6113 = !DILocation(line: 1132, column: 9, scope: !6109)
!6114 = !DILocation(line: 1135, column: 5, scope: !1006)
!6115 = !DILocation(line: 1136, column: 1, scope: !1006)
!6116 = !DILocation(line: 1377, column: 35, scope: !1013)
!6117 = !DILocation(line: 1377, column: 52, scope: !1013)
!6118 = !DILocation(line: 1377, column: 62, scope: !1013)
!6119 = !DILocation(line: 1379, column: 5, scope: !1013)
!6120 = !DILocation(line: 1379, column: 16, scope: !1013)
!6121 = !DILocation(line: 1379, column: 24, scope: !1013)
!6122 = !DILocation(line: 1379, column: 30, scope: !1013)
!6123 = !DILocation(line: 1380, column: 5, scope: !1013)
!6124 = !DILocation(line: 1380, column: 9, scope: !1013)
!6125 = !DILocation(line: 1380, column: 21, scope: !1013)
!6126 = !DILocation(line: 1380, column: 27, scope: !1013)
!6127 = !DILocation(line: 1382, column: 33, scope: !6128)
!6128 = distinct !DILexicalBlock(scope: !1013, file: !420, line: 1382, column: 9)
!6129 = !DILocation(line: 1382, column: 40, scope: !6128)
!6130 = !DILocation(line: 1382, column: 45, scope: !6128)
!6131 = !DILocation(line: 1382, column: 52, scope: !6128)
!6132 = !DILocation(line: 1382, column: 78, scope: !6133)
!6133 = !DILexicalBlockFile(scope: !6128, file: !420, discriminator: 2)
!6134 = !DILocation(line: 1382, column: 85, scope: !6128)
!6135 = !DILocation(line: 1382, column: 91, scope: !6128)
!6136 = !DILocation(line: 1382, column: 96, scope: !6128)
!6137 = !DILocation(line: 1382, column: 9, scope: !1013)
!6138 = !DILocation(line: 1382, column: 123, scope: !6139)
!6139 = !DILexicalBlockFile(scope: !6140, file: !420, discriminator: 3)
!6140 = !DILexicalBlockFile(scope: !6141, file: !420, discriminator: 1)
!6141 = distinct !DILexicalBlock(scope: !6128, file: !420, line: 1382, column: 105)
!6142 = !DILocation(line: 1382, column: 107, scope: !6141)
!6143 = !DILocation(line: 1382, column: 195, scope: !6141)
!6144 = !DILocation(line: 1385, column: 6, scope: !1013)
!6145 = !DILocation(line: 1385, column: 14, scope: !1013)
!6146 = !DILocation(line: 1385, column: 13, scope: !1013)
!6147 = !DILocation(line: 1386, column: 5, scope: !1013)
!6148 = !DILocation(line: 1386, column: 11, scope: !1013)
!6149 = !DILocation(line: 1386, column: 15, scope: !1013)
!6150 = !DILocation(line: 1388, column: 10, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !1013, file: !420, line: 1388, column: 9)
!6152 = !DILocation(line: 1388, column: 15, scope: !6151)
!6153 = !DILocation(line: 1388, column: 24, scope: !6151)
!6154 = !DILocation(line: 1388, column: 27, scope: !6155)
!6155 = !DILexicalBlockFile(scope: !6151, file: !420, discriminator: 1)
!6156 = !DILocation(line: 1388, column: 33, scope: !6151)
!6157 = !DILocation(line: 1388, column: 27, scope: !6151)
!6158 = !DILocation(line: 1388, column: 9, scope: !1013)
!6159 = !DILocation(line: 1389, column: 25, scope: !6160)
!6160 = distinct !DILexicalBlock(scope: !6151, file: !420, line: 1388, column: 43)
!6161 = !DILocation(line: 1389, column: 9, scope: !6160)
!6162 = !DILocation(line: 1391, column: 9, scope: !6160)
!6163 = !DILocation(line: 1393, column: 11, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !1013, file: !420, line: 1393, column: 9)
!6165 = !DILocation(line: 1393, column: 16, scope: !6164)
!6166 = !DILocation(line: 1393, column: 9, scope: !1013)
!6167 = !DILocation(line: 1399, column: 9, scope: !6168)
!6168 = distinct !DILexicalBlock(scope: !6164, file: !420, line: 1393, column: 26)
!6169 = !DILocation(line: 1399, column: 15, scope: !6168)
!6170 = !DILocation(line: 1399, column: 22, scope: !6168)
!6171 = !DILocation(line: 1400, column: 5, scope: !6168)
!6172 = !DILocation(line: 1402, column: 11, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !1013, file: !420, line: 1402, column: 9)
!6174 = !DILocation(line: 1402, column: 16, scope: !6173)
!6175 = !DILocation(line: 1402, column: 47, scope: !6173)
!6176 = !DILocation(line: 1402, column: 80, scope: !6173)
!6177 = !DILocation(line: 1402, column: 85, scope: !6178)
!6178 = !DILexicalBlockFile(scope: !6173, file: !420, discriminator: 1)
!6179 = !DILocation(line: 1402, column: 94, scope: !6173)
!6180 = !DILocation(line: 1402, column: 9, scope: !1013)
!6181 = !DILocation(line: 1403, column: 25, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !6173, file: !420, line: 1402, column: 111)
!6183 = !DILocation(line: 1403, column: 9, scope: !6182)
!6184 = !DILocation(line: 1405, column: 9, scope: !6182)
!6185 = !DILocation(line: 1407, column: 11, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !1013, file: !420, line: 1407, column: 9)
!6187 = !DILocation(line: 1407, column: 16, scope: !6186)
!6188 = !DILocation(line: 1407, column: 47, scope: !6186)
!6189 = !DILocation(line: 1407, column: 80, scope: !6186)
!6190 = !DILocation(line: 1407, column: 85, scope: !6191)
!6191 = !DILexicalBlockFile(scope: !6186, file: !420, discriminator: 1)
!6192 = !DILocation(line: 1407, column: 94, scope: !6186)
!6193 = !DILocation(line: 1407, column: 9, scope: !1013)
!6194 = !DILocation(line: 1408, column: 25, scope: !6195)
!6195 = distinct !DILexicalBlock(scope: !6186, file: !420, line: 1407, column: 111)
!6196 = !DILocation(line: 1408, column: 9, scope: !6195)
!6197 = !DILocation(line: 1410, column: 9, scope: !6195)
!6198 = !DILocation(line: 1412, column: 11, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !1013, file: !420, line: 1412, column: 9)
!6200 = !DILocation(line: 1412, column: 16, scope: !6199)
!6201 = !DILocation(line: 1412, column: 47, scope: !6199)
!6202 = !DILocation(line: 1412, column: 80, scope: !6199)
!6203 = !DILocation(line: 1412, column: 85, scope: !6204)
!6204 = !DILexicalBlockFile(scope: !6199, file: !420, discriminator: 1)
!6205 = !DILocation(line: 1412, column: 94, scope: !6199)
!6206 = !DILocation(line: 1412, column: 9, scope: !1013)
!6207 = !DILocation(line: 1413, column: 25, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6199, file: !420, line: 1412, column: 117)
!6209 = !DILocation(line: 1413, column: 9, scope: !6208)
!6210 = !DILocation(line: 1415, column: 9, scope: !6208)
!6211 = !DILocation(line: 1417, column: 12, scope: !6212)
!6212 = distinct !DILexicalBlock(scope: !1013, file: !420, line: 1417, column: 9)
!6213 = !DILocation(line: 1417, column: 17, scope: !6212)
!6214 = !DILocation(line: 1417, column: 48, scope: !6212)
!6215 = !DILocation(line: 1417, column: 81, scope: !6212)
!6216 = !DILocation(line: 1417, column: 85, scope: !6217)
!6217 = !DILexicalBlockFile(scope: !6212, file: !420, discriminator: 1)
!6218 = !DILocation(line: 1417, column: 95, scope: !6212)
!6219 = !DILocation(line: 1417, column: 9, scope: !1013)
!6220 = !DILocation(line: 1418, column: 25, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6212, file: !420, line: 1417, column: 105)
!6222 = !DILocation(line: 1418, column: 9, scope: !6221)
!6223 = !DILocation(line: 1420, column: 9, scope: !6221)
!6224 = !DILocation(line: 1422, column: 12, scope: !6225)
!6225 = distinct !DILexicalBlock(scope: !1013, file: !420, line: 1422, column: 9)
!6226 = !DILocation(line: 1422, column: 17, scope: !6225)
!6227 = !DILocation(line: 1422, column: 37, scope: !6225)
!6228 = !DILocation(line: 1422, column: 9, scope: !1013)
!6229 = !DILocation(line: 1423, column: 15, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6231, file: !420, line: 1423, column: 13)
!6231 = distinct !DILexicalBlock(scope: !6225, file: !420, line: 1422, column: 60)
!6232 = !DILocation(line: 1423, column: 24, scope: !6230)
!6233 = !DILocation(line: 1423, column: 13, scope: !6231)
!6234 = !DILocation(line: 1424, column: 29, scope: !6235)
!6235 = distinct !DILexicalBlock(scope: !6230, file: !420, line: 1423, column: 41)
!6236 = !DILocation(line: 1424, column: 13, scope: !6235)
!6237 = !DILocation(line: 1426, column: 13, scope: !6235)
!6238 = !DILocation(line: 1428, column: 9, scope: !6231)
!6239 = !DILocation(line: 1428, column: 15, scope: !6231)
!6240 = !DILocation(line: 1428, column: 23, scope: !6231)
!6241 = !DILocation(line: 1429, column: 5, scope: !6231)
!6242 = !DILocation(line: 1430, column: 12, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !1013, file: !420, line: 1430, column: 9)
!6244 = !DILocation(line: 1430, column: 17, scope: !6243)
!6245 = !DILocation(line: 1430, column: 26, scope: !6243)
!6246 = !DILocation(line: 1430, column: 9, scope: !1013)
!6247 = !DILocation(line: 1433, column: 13, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !6249, file: !420, line: 1433, column: 13)
!6249 = distinct !DILexicalBlock(scope: !6243, file: !420, line: 1430, column: 38)
!6250 = !DILocation(line: 1433, column: 19, scope: !6248)
!6251 = !DILocation(line: 1433, column: 26, scope: !6248)
!6252 = !DILocation(line: 1433, column: 13, scope: !6249)
!6253 = !DILocation(line: 1436, column: 26, scope: !6254)
!6254 = distinct !DILexicalBlock(scope: !6248, file: !420, line: 1433, column: 41)
!6255 = !DILocation(line: 1436, column: 13, scope: !6254)
!6256 = !DILocation(line: 1439, column: 13, scope: !6254)
!6257 = !DILocation(line: 1443, column: 9, scope: !6249)
!6258 = !DILocation(line: 1443, column: 15, scope: !6249)
!6259 = !DILocation(line: 1443, column: 20, scope: !6249)
!6260 = !DILocation(line: 1444, column: 9, scope: !6249)
!6261 = !DILocation(line: 1444, column: 15, scope: !6249)
!6262 = !DILocation(line: 1444, column: 21, scope: !6249)
!6263 = !DILocation(line: 1445, column: 5, scope: !6249)
!6264 = !DILocation(line: 1448, column: 29, scope: !1013)
!6265 = !DILocation(line: 1448, column: 17, scope: !1013)
!6266 = !DILocation(line: 1448, column: 5, scope: !1013)
!6267 = !DILocation(line: 1448, column: 11, scope: !1013)
!6268 = !DILocation(line: 1448, column: 15, scope: !1013)
!6269 = !DILocation(line: 1449, column: 21, scope: !1013)
!6270 = !DILocation(line: 1449, column: 27, scope: !1013)
!6271 = !DILocation(line: 1449, column: 34, scope: !1013)
!6272 = !DILocation(line: 1449, column: 43, scope: !1013)
!6273 = !DILocation(line: 1450, column: 5, scope: !1013)
!6274 = !DILocation(line: 1450, column: 11, scope: !1013)
!6275 = !DILocation(line: 1450, column: 18, scope: !1013)
!6276 = !DILocation(line: 1452, column: 5, scope: !1013)
!6277 = !DILocation(line: 1453, column: 1, scope: !1013)
!6278 = !DILocation(line: 1456, column: 39, scope: !1022)
!6279 = !DILocation(line: 1456, column: 56, scope: !1022)
!6280 = !DILocation(line: 1458, column: 5, scope: !1022)
!6281 = !DILocation(line: 1458, column: 11, scope: !1022)
!6282 = !DILocation(line: 1458, column: 18, scope: !1022)
!6283 = !DILocation(line: 1459, column: 5, scope: !1022)
!6284 = !DILocation(line: 1903, column: 33, scope: !1071)
!6285 = !DILocation(line: 1903, column: 49, scope: !1071)
!6286 = !DILocation(line: 1905, column: 5, scope: !1071)
!6287 = !DILocation(line: 1905, column: 15, scope: !1071)
!6288 = !DILocation(line: 1906, column: 5, scope: !1071)
!6289 = !DILocation(line: 1906, column: 15, scope: !1071)
!6290 = !DILocation(line: 1907, column: 5, scope: !1071)
!6291 = !DILocation(line: 1907, column: 15, scope: !1071)
!6292 = !DILocation(line: 1908, column: 5, scope: !1071)
!6293 = !DILocation(line: 1908, column: 15, scope: !1071)
!6294 = !DILocation(line: 1909, column: 5, scope: !1071)
!6295 = !DILocation(line: 1909, column: 22, scope: !1071)
!6296 = !DILocation(line: 1911, column: 20, scope: !1071)
!6297 = !DILocation(line: 1911, column: 18, scope: !1071)
!6298 = !DILocation(line: 1912, column: 9, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !1071, file: !420, line: 1912, column: 9)
!6300 = !DILocation(line: 1912, column: 22, scope: !6299)
!6301 = !DILocation(line: 1912, column: 9, scope: !1071)
!6302 = !DILocation(line: 1913, column: 9, scope: !6299)
!6303 = !DILocation(line: 1915, column: 37, scope: !1071)
!6304 = !DILocation(line: 1915, column: 14, scope: !1071)
!6305 = !DILocation(line: 1915, column: 12, scope: !1071)
!6306 = !DILocation(line: 1916, column: 5, scope: !1071)
!6307 = !DILocation(line: 1916, column: 10, scope: !6308)
!6308 = !DILexicalBlockFile(scope: !1083, file: !420, discriminator: 1)
!6309 = !DILocation(line: 1916, column: 20, scope: !1083)
!6310 = !DILocation(line: 1916, column: 50, scope: !1083)
!6311 = !DILocation(line: 1916, column: 73, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !1083, file: !420, line: 1916, column: 70)
!6313 = !DILocation(line: 1916, column: 90, scope: !6312)
!6314 = !DILocation(line: 1916, column: 70, scope: !6312)
!6315 = !DILocation(line: 1916, column: 100, scope: !6312)
!6316 = !DILocation(line: 1916, column: 70, scope: !1083)
!6317 = !DILocation(line: 1916, column: 70, scope: !6318)
!6318 = !DILexicalBlockFile(scope: !1083, file: !420, discriminator: 2)
!6319 = !DILocation(line: 1916, column: 131, scope: !6320)
!6320 = !DILexicalBlockFile(scope: !6312, file: !420, discriminator: 3)
!6321 = !DILocation(line: 1916, column: 149, scope: !6312)
!6322 = !DILocation(line: 1916, column: 159, scope: !6312)
!6323 = !DILocation(line: 1916, column: 184, scope: !6312)
!6324 = !DILocation(line: 1916, column: 115, scope: !6312)
!6325 = !DILocation(line: 1916, column: 203, scope: !6326)
!6326 = !DILexicalBlockFile(scope: !1071, file: !420, discriminator: 4)
!6327 = !DILocation(line: 1916, column: 203, scope: !1083)
!6328 = !DILocation(line: 1916, column: 203, scope: !6329)
!6329 = !DILexicalBlockFile(scope: !1083, file: !420, discriminator: 5)
!6330 = !DILocation(line: 1917, column: 9, scope: !6331)
!6331 = distinct !DILexicalBlock(scope: !1071, file: !420, line: 1917, column: 9)
!6332 = !DILocation(line: 1917, column: 16, scope: !6331)
!6333 = !DILocation(line: 1917, column: 9, scope: !1071)
!6334 = !DILocation(line: 1918, column: 9, scope: !6331)
!6335 = !DILocation(line: 1920, column: 9, scope: !1071)
!6336 = !DILocation(line: 1920, column: 7, scope: !1071)
!6337 = !DILocation(line: 1921, column: 9, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !1071, file: !420, line: 1921, column: 9)
!6339 = !DILocation(line: 1921, column: 11, scope: !6338)
!6340 = !DILocation(line: 1921, column: 9, scope: !1071)
!6341 = !DILocation(line: 1922, column: 9, scope: !6338)
!6342 = !DILocation(line: 1924, column: 33, scope: !1071)
!6343 = !DILocation(line: 1924, column: 14, scope: !1071)
!6344 = !DILocation(line: 1924, column: 12, scope: !1071)
!6345 = !DILocation(line: 1925, column: 9, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !1071, file: !420, line: 1925, column: 9)
!6347 = !DILocation(line: 1925, column: 16, scope: !6346)
!6348 = !DILocation(line: 1925, column: 9, scope: !1071)
!6349 = !DILocation(line: 1926, column: 9, scope: !6346)
!6350 = !DILocation(line: 1928, column: 46, scope: !1071)
!6351 = !DILocation(line: 1928, column: 54, scope: !1071)
!6352 = !DILocation(line: 1928, column: 17, scope: !1071)
!6353 = !DILocation(line: 1928, column: 15, scope: !1071)
!6354 = !DILocation(line: 1929, column: 9, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !1071, file: !420, line: 1929, column: 9)
!6356 = !DILocation(line: 1929, column: 19, scope: !6355)
!6357 = !DILocation(line: 1929, column: 9, scope: !1071)
!6358 = !DILocation(line: 1930, column: 9, scope: !6355)
!6359 = !DILocation(line: 1932, column: 45, scope: !1071)
!6360 = !DILocation(line: 1932, column: 22, scope: !1071)
!6361 = !DILocation(line: 1932, column: 5, scope: !1071)
!6362 = !DILocation(line: 1932, column: 8, scope: !1071)
!6363 = !DILocation(line: 1932, column: 20, scope: !1071)
!6364 = !{!6365, !1535, i64 0}
!6365 = !{!"unpacker", !1535, i64 0, !1535, i64 8, !1535, i64 16, !1548, i64 24}
!6366 = !DILocation(line: 1933, column: 9, scope: !6367)
!6367 = distinct !DILexicalBlock(scope: !1071, file: !420, line: 1933, column: 9)
!6368 = !DILocation(line: 1933, column: 12, scope: !6367)
!6369 = !DILocation(line: 1933, column: 24, scope: !6367)
!6370 = !DILocation(line: 1933, column: 9, scope: !1071)
!6371 = !DILocation(line: 1934, column: 9, scope: !6367)
!6372 = !DILocation(line: 1936, column: 28, scope: !1071)
!6373 = !DILocation(line: 1936, column: 15, scope: !1071)
!6374 = !DILocation(line: 1936, column: 5, scope: !1071)
!6375 = !DILocation(line: 1936, column: 8, scope: !1071)
!6376 = !DILocation(line: 1936, column: 13, scope: !1071)
!6377 = !{!6365, !1535, i64 16}
!6378 = !DILocation(line: 1937, column: 9, scope: !6379)
!6379 = distinct !DILexicalBlock(scope: !1071, file: !420, line: 1937, column: 9)
!6380 = !DILocation(line: 1937, column: 12, scope: !6379)
!6381 = !DILocation(line: 1937, column: 17, scope: !6379)
!6382 = !DILocation(line: 1937, column: 9, scope: !1071)
!6383 = !DILocation(line: 1938, column: 9, scope: !6384)
!6384 = distinct !DILexicalBlock(scope: !6379, file: !420, line: 1937, column: 32)
!6385 = !DILocation(line: 1939, column: 9, scope: !6384)
!6386 = !DILocation(line: 1941, column: 19, scope: !1071)
!6387 = !DILocation(line: 1941, column: 5, scope: !1071)
!6388 = !DILocation(line: 1941, column: 8, scope: !1071)
!6389 = !DILocation(line: 1941, column: 17, scope: !1071)
!6390 = !{!6365, !1548, i64 24}
!6391 = !DILocation(line: 1943, column: 40, scope: !1071)
!6392 = !DILocation(line: 1943, column: 43, scope: !1071)
!6393 = !DILocation(line: 1943, column: 49, scope: !1071)
!6394 = !DILocation(line: 1943, column: 16, scope: !1071)
!6395 = !DILocation(line: 1943, column: 5, scope: !1071)
!6396 = !DILocation(line: 1943, column: 8, scope: !1071)
!6397 = !DILocation(line: 1943, column: 14, scope: !1071)
!6398 = !{!6365, !1535, i64 8}
!6399 = !DILocation(line: 1944, column: 9, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !1071, file: !420, line: 1944, column: 9)
!6401 = !DILocation(line: 1944, column: 12, scope: !6400)
!6402 = !DILocation(line: 1944, column: 18, scope: !6400)
!6403 = !DILocation(line: 1944, column: 9, scope: !1071)
!6404 = !DILocation(line: 1945, column: 9, scope: !6400)
!6405 = !DILocation(line: 1944, column: 30, scope: !6406)
!6406 = !DILexicalBlockFile(scope: !6400, file: !420, discriminator: 1)
!6407 = !DILocation(line: 1949, column: 5, scope: !1071)
!6408 = !DILocation(line: 1949, column: 10, scope: !6409)
!6409 = !DILexicalBlockFile(scope: !1085, file: !420, discriminator: 1)
!6410 = !DILocation(line: 1949, column: 20, scope: !1085)
!6411 = !DILocation(line: 1949, column: 51, scope: !1085)
!6412 = !DILocation(line: 1949, column: 64, scope: !1088)
!6413 = !DILocation(line: 1949, column: 80, scope: !1088)
!6414 = !DILocation(line: 1949, column: 64, scope: !1085)
!6415 = !DILocation(line: 1949, column: 95, scope: !6416)
!6416 = !DILexicalBlockFile(scope: !1088, file: !420, discriminator: 2)
!6417 = !DILocation(line: 1949, column: 100, scope: !6418)
!6418 = !DILexicalBlockFile(scope: !1087, file: !420, discriminator: 4)
!6419 = !DILocation(line: 1949, column: 110, scope: !1087)
!6420 = !DILocation(line: 1949, column: 140, scope: !1087)
!6421 = !DILocation(line: 1949, column: 166, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !1087, file: !420, line: 1949, column: 163)
!6423 = !DILocation(line: 1949, column: 183, scope: !6422)
!6424 = !DILocation(line: 1949, column: 163, scope: !6422)
!6425 = !DILocation(line: 1949, column: 193, scope: !6422)
!6426 = !DILocation(line: 1949, column: 163, scope: !1087)
!6427 = !DILocation(line: 1949, column: 163, scope: !6428)
!6428 = !DILexicalBlockFile(scope: !1087, file: !420, discriminator: 5)
!6429 = !DILocation(line: 1949, column: 224, scope: !6430)
!6430 = !DILexicalBlockFile(scope: !6422, file: !420, discriminator: 6)
!6431 = !DILocation(line: 1949, column: 242, scope: !6422)
!6432 = !DILocation(line: 1949, column: 252, scope: !6422)
!6433 = !DILocation(line: 1949, column: 277, scope: !6422)
!6434 = !DILocation(line: 1949, column: 208, scope: !6422)
!6435 = !DILocation(line: 1949, column: 296, scope: !6436)
!6436 = !DILexicalBlockFile(scope: !1088, file: !420, discriminator: 7)
!6437 = !DILocation(line: 1949, column: 296, scope: !1087)
!6438 = !DILocation(line: 1949, column: 296, scope: !6439)
!6439 = !DILexicalBlockFile(scope: !1087, file: !420, discriminator: 8)
!6440 = !DILocation(line: 1949, column: 296, scope: !6441)
!6441 = !DILexicalBlockFile(scope: !1087, file: !420, discriminator: 9)
!6442 = !DILocation(line: 1949, column: 309, scope: !6443)
!6443 = !DILexicalBlockFile(scope: !6444, file: !420, discriminator: 10)
!6444 = !DILexicalBlockFile(scope: !1071, file: !420, discriminator: 3)
!6445 = !DILocation(line: 1949, column: 309, scope: !1085)
!6446 = !DILocation(line: 1949, column: 309, scope: !6447)
!6447 = !DILexicalBlockFile(scope: !1085, file: !420, discriminator: 11)
!6448 = !DILocation(line: 1950, column: 5, scope: !1071)
!6449 = !DILocation(line: 1950, column: 10, scope: !6450)
!6450 = !DILexicalBlockFile(scope: !1090, file: !420, discriminator: 1)
!6451 = !DILocation(line: 1950, column: 20, scope: !1090)
!6452 = !DILocation(line: 1950, column: 51, scope: !1090)
!6453 = !DILocation(line: 1950, column: 64, scope: !1093)
!6454 = !DILocation(line: 1950, column: 80, scope: !1093)
!6455 = !DILocation(line: 1950, column: 64, scope: !1090)
!6456 = !DILocation(line: 1950, column: 95, scope: !6457)
!6457 = !DILexicalBlockFile(scope: !1093, file: !420, discriminator: 2)
!6458 = !DILocation(line: 1950, column: 100, scope: !6459)
!6459 = !DILexicalBlockFile(scope: !1092, file: !420, discriminator: 4)
!6460 = !DILocation(line: 1950, column: 110, scope: !1092)
!6461 = !DILocation(line: 1950, column: 140, scope: !1092)
!6462 = !DILocation(line: 1950, column: 166, scope: !6463)
!6463 = distinct !DILexicalBlock(scope: !1092, file: !420, line: 1950, column: 163)
!6464 = !DILocation(line: 1950, column: 183, scope: !6463)
!6465 = !DILocation(line: 1950, column: 163, scope: !6463)
!6466 = !DILocation(line: 1950, column: 193, scope: !6463)
!6467 = !DILocation(line: 1950, column: 163, scope: !1092)
!6468 = !DILocation(line: 1950, column: 163, scope: !6469)
!6469 = !DILexicalBlockFile(scope: !1092, file: !420, discriminator: 5)
!6470 = !DILocation(line: 1950, column: 224, scope: !6471)
!6471 = !DILexicalBlockFile(scope: !6463, file: !420, discriminator: 6)
!6472 = !DILocation(line: 1950, column: 242, scope: !6463)
!6473 = !DILocation(line: 1950, column: 252, scope: !6463)
!6474 = !DILocation(line: 1950, column: 277, scope: !6463)
!6475 = !DILocation(line: 1950, column: 208, scope: !6463)
!6476 = !DILocation(line: 1950, column: 296, scope: !6477)
!6477 = !DILexicalBlockFile(scope: !1093, file: !420, discriminator: 7)
!6478 = !DILocation(line: 1950, column: 296, scope: !1092)
!6479 = !DILocation(line: 1950, column: 296, scope: !6480)
!6480 = !DILexicalBlockFile(scope: !1092, file: !420, discriminator: 8)
!6481 = !DILocation(line: 1950, column: 296, scope: !6482)
!6482 = !DILexicalBlockFile(scope: !1092, file: !420, discriminator: 9)
!6483 = !DILocation(line: 1950, column: 309, scope: !6443)
!6484 = !DILocation(line: 1950, column: 309, scope: !1090)
!6485 = !DILocation(line: 1950, column: 309, scope: !6486)
!6486 = !DILexicalBlockFile(scope: !1090, file: !420, discriminator: 11)
!6487 = !DILocation(line: 1951, column: 5, scope: !1071)
!6488 = !DILocation(line: 1951, column: 10, scope: !6489)
!6489 = !DILexicalBlockFile(scope: !1095, file: !420, discriminator: 1)
!6490 = !DILocation(line: 1951, column: 20, scope: !1095)
!6491 = !DILocation(line: 1951, column: 51, scope: !1095)
!6492 = !DILocation(line: 1951, column: 67, scope: !1098)
!6493 = !DILocation(line: 1951, column: 83, scope: !1098)
!6494 = !DILocation(line: 1951, column: 67, scope: !1095)
!6495 = !DILocation(line: 1951, column: 98, scope: !6496)
!6496 = !DILexicalBlockFile(scope: !1098, file: !420, discriminator: 2)
!6497 = !DILocation(line: 1951, column: 103, scope: !6498)
!6498 = !DILexicalBlockFile(scope: !1097, file: !420, discriminator: 4)
!6499 = !DILocation(line: 1951, column: 113, scope: !1097)
!6500 = !DILocation(line: 1951, column: 143, scope: !1097)
!6501 = !DILocation(line: 1951, column: 169, scope: !6502)
!6502 = distinct !DILexicalBlock(scope: !1097, file: !420, line: 1951, column: 166)
!6503 = !DILocation(line: 1951, column: 186, scope: !6502)
!6504 = !DILocation(line: 1951, column: 166, scope: !6502)
!6505 = !DILocation(line: 1951, column: 196, scope: !6502)
!6506 = !DILocation(line: 1951, column: 166, scope: !1097)
!6507 = !DILocation(line: 1951, column: 166, scope: !6508)
!6508 = !DILexicalBlockFile(scope: !1097, file: !420, discriminator: 5)
!6509 = !DILocation(line: 1951, column: 227, scope: !6510)
!6510 = !DILexicalBlockFile(scope: !6502, file: !420, discriminator: 6)
!6511 = !DILocation(line: 1951, column: 245, scope: !6502)
!6512 = !DILocation(line: 1951, column: 255, scope: !6502)
!6513 = !DILocation(line: 1951, column: 280, scope: !6502)
!6514 = !DILocation(line: 1951, column: 211, scope: !6502)
!6515 = !DILocation(line: 1951, column: 299, scope: !6516)
!6516 = !DILexicalBlockFile(scope: !1098, file: !420, discriminator: 7)
!6517 = !DILocation(line: 1951, column: 299, scope: !1097)
!6518 = !DILocation(line: 1951, column: 299, scope: !6519)
!6519 = !DILexicalBlockFile(scope: !1097, file: !420, discriminator: 8)
!6520 = !DILocation(line: 1951, column: 299, scope: !6521)
!6521 = !DILexicalBlockFile(scope: !1097, file: !420, discriminator: 9)
!6522 = !DILocation(line: 1951, column: 312, scope: !6443)
!6523 = !DILocation(line: 1951, column: 312, scope: !1095)
!6524 = !DILocation(line: 1951, column: 312, scope: !6525)
!6525 = !DILexicalBlockFile(scope: !1095, file: !420, discriminator: 11)
!6526 = !DILocation(line: 1952, column: 12, scope: !1071)
!6527 = !DILocation(line: 1952, column: 5, scope: !1071)
!6528 = !DILocation(line: 1955, column: 19, scope: !1071)
!6529 = !DILocation(line: 1955, column: 5, scope: !1071)
!6530 = !DILocation(line: 1956, column: 7, scope: !1071)
!6531 = !DILocation(line: 1957, column: 5, scope: !1071)
!6532 = !DILocation(line: 1958, column: 1, scope: !1071)
!6533 = !DILocation(line: 2425, column: 32, scope: !6534)
!6534 = distinct !DILexicalBlock(scope: !1104, file: !420, line: 2425, column: 9)
!6535 = !DILocation(line: 2425, column: 9, scope: !6534)
!6536 = !DILocation(line: 2425, column: 51, scope: !6534)
!6537 = !DILocation(line: 2426, column: 32, scope: !6534)
!6538 = !DILocation(line: 2426, column: 9, scope: !6534)
!6539 = !DILocation(line: 2425, column: 9, scope: !1104)
!6540 = !DILocation(line: 2427, column: 9, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !6534, file: !420, line: 2426, column: 52)
!6542 = !DILocation(line: 2430, column: 5, scope: !1104)
!6543 = !DILocation(line: 2431, column: 5, scope: !1104)
!6544 = !DILocation(line: 2432, column: 1, scope: !1104)
!6545 = !DILocation(line: 2478, column: 24, scope: !1107)
!6546 = !DILocation(line: 2478, column: 39, scope: !1107)
!6547 = !DILocation(line: 2478, column: 47, scope: !1107)
!6548 = !DILocation(line: 2479, column: 29, scope: !1107)
!6549 = !DILocation(line: 2479, column: 56, scope: !1107)
!6550 = !DILocation(line: 2481, column: 5, scope: !1107)
!6551 = !DILocation(line: 2481, column: 9, scope: !1107)
!6552 = !DILocation(line: 2483, column: 13, scope: !1107)
!6553 = !DILocation(line: 2486, column: 41, scope: !1119)
!6554 = !DILocation(line: 2486, column: 22, scope: !1119)
!6555 = !DILocation(line: 2486, column: 66, scope: !1119)
!6556 = !DILocation(line: 2486, column: 47, scope: !1119)
!6557 = !DILocation(line: 2486, column: 44, scope: !1119)
!6558 = !DILocation(line: 2486, column: 15, scope: !1119)
!6559 = !DILocation(line: 2487, column: 39, scope: !1119)
!6560 = !DILocation(line: 2487, column: 22, scope: !1119)
!6561 = !DILocation(line: 2487, column: 62, scope: !1119)
!6562 = !DILocation(line: 2487, column: 45, scope: !1119)
!6563 = !DILocation(line: 2487, column: 42, scope: !1119)
!6564 = !DILocation(line: 2487, column: 15, scope: !1119)
!6565 = !DILocation(line: 2488, column: 15, scope: !1119)
!6566 = !DILocation(line: 2488, column: 20, scope: !6567)
!6567 = !DILexicalBlockFile(scope: !1118, file: !420, discriminator: 1)
!6568 = !DILocation(line: 2488, column: 26, scope: !1118)
!6569 = !DILocation(line: 2488, column: 29, scope: !1118)
!6570 = !DILocation(line: 2488, column: 35, scope: !1118)
!6571 = !DILocation(line: 2488, column: 45, scope: !1118)
!6572 = !DILocation(line: 2488, column: 57, scope: !1118)
!6573 = !DILocation(line: 2488, column: 38, scope: !1118)
!6574 = !DILocation(line: 2488, column: 78, scope: !1118)
!6575 = !DILocation(line: 2488, column: 90, scope: !1118)
!6576 = !DILocation(line: 2488, column: 71, scope: !1118)
!6577 = !DILocation(line: 2488, column: 113, scope: !1118)
!6578 = !DILocation(line: 2488, column: 118, scope: !1118)
!6579 = !DILocation(line: 2488, column: 115, scope: !1118)
!6580 = !DILocation(line: 2488, column: 110, scope: !1118)
!6581 = !DILocation(line: 2488, column: 122, scope: !1119)
!6582 = !DILocation(line: 2488, column: 122, scope: !1118)
!6583 = !DILocation(line: 2488, column: 122, scope: !6584)
!6584 = !DILexicalBlockFile(scope: !1118, file: !420, discriminator: 2)
!6585 = !DILocation(line: 2488, column: 142, scope: !6586)
!6586 = !DILexicalBlockFile(scope: !1119, file: !420, discriminator: 3)
!6587 = !DILocation(line: 2488, column: 135, scope: !1119)
!6588 = !DILocation(line: 2489, column: 15, scope: !1119)
!6589 = !DILocation(line: 2489, column: 20, scope: !6590)
!6590 = !DILexicalBlockFile(scope: !1122, file: !420, discriminator: 1)
!6591 = !DILocation(line: 2489, column: 24, scope: !1122)
!6592 = !DILocation(line: 2489, column: 27, scope: !1122)
!6593 = !DILocation(line: 2489, column: 31, scope: !1122)
!6594 = !DILocation(line: 2489, column: 41, scope: !1122)
!6595 = !DILocation(line: 2489, column: 53, scope: !1122)
!6596 = !DILocation(line: 2489, column: 34, scope: !1122)
!6597 = !DILocation(line: 2489, column: 74, scope: !1122)
!6598 = !DILocation(line: 2489, column: 86, scope: !1122)
!6599 = !DILocation(line: 2489, column: 67, scope: !1122)
!6600 = !DILocation(line: 2489, column: 109, scope: !1122)
!6601 = !DILocation(line: 2489, column: 114, scope: !1122)
!6602 = !DILocation(line: 2489, column: 111, scope: !1122)
!6603 = !DILocation(line: 2489, column: 106, scope: !1122)
!6604 = !DILocation(line: 2489, column: 118, scope: !1119)
!6605 = !DILocation(line: 2489, column: 118, scope: !1122)
!6606 = !DILocation(line: 2489, column: 118, scope: !6607)
!6607 = !DILexicalBlockFile(scope: !1122, file: !420, discriminator: 2)
!6608 = !DILocation(line: 2489, column: 138, scope: !6586)
!6609 = !DILocation(line: 2489, column: 131, scope: !1119)
!6610 = !DILocation(line: 2490, column: 15, scope: !1119)
!6611 = !DILocation(line: 2490, column: 20, scope: !6612)
!6612 = !DILexicalBlockFile(scope: !1125, file: !420, discriminator: 1)
!6613 = !DILocation(line: 2490, column: 25, scope: !1125)
!6614 = !DILocation(line: 2490, column: 28, scope: !1125)
!6615 = !DILocation(line: 2490, column: 33, scope: !1125)
!6616 = !DILocation(line: 2490, column: 43, scope: !1125)
!6617 = !DILocation(line: 2490, column: 55, scope: !1125)
!6618 = !DILocation(line: 2490, column: 36, scope: !1125)
!6619 = !DILocation(line: 2490, column: 76, scope: !1125)
!6620 = !DILocation(line: 2490, column: 88, scope: !1125)
!6621 = !DILocation(line: 2490, column: 69, scope: !1125)
!6622 = !DILocation(line: 2490, column: 111, scope: !1125)
!6623 = !DILocation(line: 2490, column: 116, scope: !1125)
!6624 = !DILocation(line: 2490, column: 113, scope: !1125)
!6625 = !DILocation(line: 2490, column: 108, scope: !1125)
!6626 = !DILocation(line: 2490, column: 120, scope: !1119)
!6627 = !DILocation(line: 2490, column: 120, scope: !1125)
!6628 = !DILocation(line: 2490, column: 120, scope: !6629)
!6629 = !DILexicalBlockFile(scope: !1125, file: !420, discriminator: 2)
!6630 = !DILocation(line: 2490, column: 140, scope: !6586)
!6631 = !DILocation(line: 2490, column: 133, scope: !1119)
!6632 = !DILocation(line: 2494, column: 15, scope: !1119)
!6633 = !DILocation(line: 2494, column: 20, scope: !1128)
!6634 = !DILocation(line: 2494, column: 26, scope: !1128)
!6635 = !DILocation(line: 2494, column: 29, scope: !1128)
!6636 = !DILocation(line: 2494, column: 35, scope: !1128)
!6637 = !DILocation(line: 2494, column: 57, scope: !6638)
!6638 = !DILexicalBlockFile(scope: !1128, file: !420, discriminator: 1)
!6639 = !DILocation(line: 2494, column: 38, scope: !1128)
!6640 = !DILocation(line: 2494, column: 90, scope: !1128)
!6641 = !DILocation(line: 2494, column: 71, scope: !1128)
!6642 = !DILocation(line: 2494, column: 113, scope: !1128)
!6643 = !DILocation(line: 2494, column: 118, scope: !1128)
!6644 = !DILocation(line: 2494, column: 115, scope: !1128)
!6645 = !DILocation(line: 2494, column: 110, scope: !1128)
!6646 = !DILocation(line: 2494, column: 122, scope: !1119)
!6647 = !DILocation(line: 2494, column: 122, scope: !1128)
!6648 = !DILocation(line: 2494, column: 122, scope: !6649)
!6649 = !DILexicalBlockFile(scope: !1128, file: !420, discriminator: 2)
!6650 = !DILocation(line: 2494, column: 142, scope: !6586)
!6651 = !DILocation(line: 2494, column: 135, scope: !1119)
!6652 = !DILocation(line: 2500, column: 15, scope: !1119)
!6653 = !DILocation(line: 2500, column: 20, scope: !6654)
!6654 = !DILexicalBlockFile(scope: !1131, file: !420, discriminator: 1)
!6655 = !DILocation(line: 2500, column: 35, scope: !1131)
!6656 = !DILocation(line: 2500, column: 38, scope: !1131)
!6657 = !DILocation(line: 2500, column: 53, scope: !1131)
!6658 = !DILocation(line: 2500, column: 63, scope: !1131)
!6659 = !DILocation(line: 2500, column: 75, scope: !1131)
!6660 = !DILocation(line: 2500, column: 56, scope: !1131)
!6661 = !DILocation(line: 2500, column: 96, scope: !1131)
!6662 = !DILocation(line: 2500, column: 108, scope: !1131)
!6663 = !DILocation(line: 2500, column: 89, scope: !1131)
!6664 = !DILocation(line: 2500, column: 131, scope: !1131)
!6665 = !DILocation(line: 2500, column: 136, scope: !1131)
!6666 = !DILocation(line: 2500, column: 133, scope: !1131)
!6667 = !DILocation(line: 2500, column: 128, scope: !1131)
!6668 = !DILocation(line: 2500, column: 140, scope: !1119)
!6669 = !DILocation(line: 2500, column: 140, scope: !1131)
!6670 = !DILocation(line: 2500, column: 140, scope: !6671)
!6671 = !DILexicalBlockFile(scope: !1131, file: !420, discriminator: 2)
!6672 = !DILocation(line: 2500, column: 160, scope: !6586)
!6673 = !DILocation(line: 2500, column: 153, scope: !1119)
!6674 = !DILocation(line: 2501, column: 15, scope: !1119)
!6675 = !DILocation(line: 2501, column: 20, scope: !6676)
!6676 = !DILexicalBlockFile(scope: !1134, file: !420, discriminator: 1)
!6677 = !DILocation(line: 2501, column: 33, scope: !1134)
!6678 = !DILocation(line: 2501, column: 36, scope: !1134)
!6679 = !DILocation(line: 2501, column: 49, scope: !1134)
!6680 = !DILocation(line: 2501, column: 59, scope: !1134)
!6681 = !DILocation(line: 2501, column: 71, scope: !1134)
!6682 = !DILocation(line: 2501, column: 52, scope: !1134)
!6683 = !DILocation(line: 2501, column: 92, scope: !1134)
!6684 = !DILocation(line: 2501, column: 104, scope: !1134)
!6685 = !DILocation(line: 2501, column: 85, scope: !1134)
!6686 = !DILocation(line: 2501, column: 127, scope: !1134)
!6687 = !DILocation(line: 2501, column: 132, scope: !1134)
!6688 = !DILocation(line: 2501, column: 129, scope: !1134)
!6689 = !DILocation(line: 2501, column: 124, scope: !1134)
!6690 = !DILocation(line: 2501, column: 136, scope: !1119)
!6691 = !DILocation(line: 2501, column: 136, scope: !1134)
!6692 = !DILocation(line: 2501, column: 136, scope: !6693)
!6693 = !DILexicalBlockFile(scope: !1134, file: !420, discriminator: 2)
!6694 = !DILocation(line: 2501, column: 156, scope: !6586)
!6695 = !DILocation(line: 2501, column: 149, scope: !1119)
!6696 = !DILocation(line: 2502, column: 15, scope: !1119)
!6697 = !DILocation(line: 2502, column: 20, scope: !6698)
!6698 = !DILexicalBlockFile(scope: !1137, file: !420, discriminator: 1)
!6699 = !DILocation(line: 2502, column: 34, scope: !1137)
!6700 = !DILocation(line: 2502, column: 37, scope: !1137)
!6701 = !DILocation(line: 2502, column: 51, scope: !1137)
!6702 = !DILocation(line: 2502, column: 61, scope: !1137)
!6703 = !DILocation(line: 2502, column: 73, scope: !1137)
!6704 = !DILocation(line: 2502, column: 54, scope: !1137)
!6705 = !DILocation(line: 2502, column: 94, scope: !1137)
!6706 = !DILocation(line: 2502, column: 106, scope: !1137)
!6707 = !DILocation(line: 2502, column: 87, scope: !1137)
!6708 = !DILocation(line: 2502, column: 129, scope: !1137)
!6709 = !DILocation(line: 2502, column: 134, scope: !1137)
!6710 = !DILocation(line: 2502, column: 131, scope: !1137)
!6711 = !DILocation(line: 2502, column: 126, scope: !1137)
!6712 = !DILocation(line: 2502, column: 138, scope: !1119)
!6713 = !DILocation(line: 2502, column: 138, scope: !1137)
!6714 = !DILocation(line: 2502, column: 138, scope: !6715)
!6715 = !DILexicalBlockFile(scope: !1137, file: !420, discriminator: 2)
!6716 = !DILocation(line: 2502, column: 158, scope: !6586)
!6717 = !DILocation(line: 2502, column: 151, scope: !1119)
!6718 = !DILocation(line: 2506, column: 15, scope: !1119)
!6719 = !DILocation(line: 2506, column: 20, scope: !6720)
!6720 = !DILexicalBlockFile(scope: !1140, file: !420, discriminator: 1)
!6721 = !DILocation(line: 2506, column: 30, scope: !1140)
!6722 = !DILocation(line: 2506, column: 33, scope: !1140)
!6723 = !DILocation(line: 2506, column: 43, scope: !1140)
!6724 = !DILocation(line: 2506, column: 53, scope: !1140)
!6725 = !DILocation(line: 2506, column: 65, scope: !1140)
!6726 = !DILocation(line: 2506, column: 46, scope: !1140)
!6727 = !DILocation(line: 2506, column: 86, scope: !1140)
!6728 = !DILocation(line: 2506, column: 98, scope: !1140)
!6729 = !DILocation(line: 2506, column: 79, scope: !1140)
!6730 = !DILocation(line: 2506, column: 121, scope: !1140)
!6731 = !DILocation(line: 2506, column: 126, scope: !1140)
!6732 = !DILocation(line: 2506, column: 123, scope: !1140)
!6733 = !DILocation(line: 2506, column: 118, scope: !1140)
!6734 = !DILocation(line: 2506, column: 130, scope: !1119)
!6735 = !DILocation(line: 2506, column: 130, scope: !1140)
!6736 = !DILocation(line: 2506, column: 130, scope: !6737)
!6737 = !DILexicalBlockFile(scope: !1140, file: !420, discriminator: 2)
!6738 = !DILocation(line: 2506, column: 150, scope: !6586)
!6739 = !DILocation(line: 2506, column: 143, scope: !1119)
!6740 = !DILocation(line: 2507, column: 15, scope: !1119)
!6741 = !DILocation(line: 2507, column: 20, scope: !6742)
!6742 = !DILexicalBlockFile(scope: !1143, file: !420, discriminator: 1)
!6743 = !DILocation(line: 2507, column: 39, scope: !1143)
!6744 = !DILocation(line: 2507, column: 42, scope: !1143)
!6745 = !DILocation(line: 2507, column: 61, scope: !1143)
!6746 = !DILocation(line: 2507, column: 71, scope: !1143)
!6747 = !DILocation(line: 2507, column: 83, scope: !1143)
!6748 = !DILocation(line: 2507, column: 64, scope: !1143)
!6749 = !DILocation(line: 2507, column: 104, scope: !1143)
!6750 = !DILocation(line: 2507, column: 116, scope: !1143)
!6751 = !DILocation(line: 2507, column: 97, scope: !1143)
!6752 = !DILocation(line: 2507, column: 139, scope: !1143)
!6753 = !DILocation(line: 2507, column: 144, scope: !1143)
!6754 = !DILocation(line: 2507, column: 141, scope: !1143)
!6755 = !DILocation(line: 2507, column: 136, scope: !1143)
!6756 = !DILocation(line: 2507, column: 148, scope: !1119)
!6757 = !DILocation(line: 2507, column: 148, scope: !1143)
!6758 = !DILocation(line: 2507, column: 148, scope: !6759)
!6759 = !DILexicalBlockFile(scope: !1143, file: !420, discriminator: 2)
!6760 = !DILocation(line: 2507, column: 168, scope: !6586)
!6761 = !DILocation(line: 2507, column: 161, scope: !1119)
!6762 = !DILocation(line: 2511, column: 15, scope: !1119)
!6763 = !DILocation(line: 2511, column: 20, scope: !6764)
!6764 = !DILexicalBlockFile(scope: !1146, file: !420, discriminator: 1)
!6765 = !DILocation(line: 2511, column: 31, scope: !1146)
!6766 = !DILocation(line: 2511, column: 34, scope: !1146)
!6767 = !DILocation(line: 2511, column: 45, scope: !1146)
!6768 = !DILocation(line: 2511, column: 55, scope: !1146)
!6769 = !DILocation(line: 2511, column: 67, scope: !1146)
!6770 = !DILocation(line: 2511, column: 48, scope: !1146)
!6771 = !DILocation(line: 2511, column: 88, scope: !1146)
!6772 = !DILocation(line: 2511, column: 100, scope: !1146)
!6773 = !DILocation(line: 2511, column: 81, scope: !1146)
!6774 = !DILocation(line: 2511, column: 123, scope: !1146)
!6775 = !DILocation(line: 2511, column: 128, scope: !1146)
!6776 = !DILocation(line: 2511, column: 125, scope: !1146)
!6777 = !DILocation(line: 2511, column: 120, scope: !1146)
!6778 = !DILocation(line: 2511, column: 132, scope: !1119)
!6779 = !DILocation(line: 2511, column: 132, scope: !1146)
!6780 = !DILocation(line: 2511, column: 132, scope: !6781)
!6781 = !DILexicalBlockFile(scope: !1146, file: !420, discriminator: 2)
!6782 = !DILocation(line: 2511, column: 152, scope: !6586)
!6783 = !DILocation(line: 2511, column: 145, scope: !1119)
!6784 = !DILocation(line: 2512, column: 15, scope: !1119)
!6785 = !DILocation(line: 2512, column: 20, scope: !6786)
!6786 = !DILexicalBlockFile(scope: !1149, file: !420, discriminator: 1)
!6787 = !DILocation(line: 2512, column: 27, scope: !1149)
!6788 = !DILocation(line: 2512, column: 30, scope: !1149)
!6789 = !DILocation(line: 2512, column: 37, scope: !1149)
!6790 = !DILocation(line: 2512, column: 47, scope: !1149)
!6791 = !DILocation(line: 2512, column: 59, scope: !1149)
!6792 = !DILocation(line: 2512, column: 40, scope: !1149)
!6793 = !DILocation(line: 2512, column: 80, scope: !1149)
!6794 = !DILocation(line: 2512, column: 92, scope: !1149)
!6795 = !DILocation(line: 2512, column: 73, scope: !1149)
!6796 = !DILocation(line: 2512, column: 115, scope: !1149)
!6797 = !DILocation(line: 2512, column: 120, scope: !1149)
!6798 = !DILocation(line: 2512, column: 117, scope: !1149)
!6799 = !DILocation(line: 2512, column: 112, scope: !1149)
!6800 = !DILocation(line: 2512, column: 124, scope: !1119)
!6801 = !DILocation(line: 2512, column: 124, scope: !1149)
!6802 = !DILocation(line: 2512, column: 124, scope: !6803)
!6803 = !DILexicalBlockFile(scope: !1149, file: !420, discriminator: 2)
!6804 = !DILocation(line: 2512, column: 144, scope: !6586)
!6805 = !DILocation(line: 2512, column: 137, scope: !1119)
!6806 = !DILocation(line: 2516, column: 15, scope: !1119)
!6807 = !DILocation(line: 2516, column: 20, scope: !6808)
!6808 = !DILexicalBlockFile(scope: !1152, file: !420, discriminator: 1)
!6809 = !DILocation(line: 2516, column: 26, scope: !1152)
!6810 = !DILocation(line: 2516, column: 29, scope: !1152)
!6811 = !DILocation(line: 2516, column: 35, scope: !1152)
!6812 = !DILocation(line: 2516, column: 45, scope: !1152)
!6813 = !DILocation(line: 2516, column: 57, scope: !1152)
!6814 = !DILocation(line: 2516, column: 38, scope: !1152)
!6815 = !DILocation(line: 2516, column: 78, scope: !1152)
!6816 = !DILocation(line: 2516, column: 90, scope: !1152)
!6817 = !DILocation(line: 2516, column: 71, scope: !1152)
!6818 = !DILocation(line: 2516, column: 113, scope: !1152)
!6819 = !DILocation(line: 2516, column: 118, scope: !1152)
!6820 = !DILocation(line: 2516, column: 115, scope: !1152)
!6821 = !DILocation(line: 2516, column: 110, scope: !1152)
!6822 = !DILocation(line: 2516, column: 122, scope: !1119)
!6823 = !DILocation(line: 2516, column: 122, scope: !1152)
!6824 = !DILocation(line: 2516, column: 122, scope: !6825)
!6825 = !DILexicalBlockFile(scope: !1152, file: !420, discriminator: 2)
!6826 = !DILocation(line: 2516, column: 142, scope: !6586)
!6827 = !DILocation(line: 2516, column: 135, scope: !1119)
!6828 = !DILocation(line: 2517, column: 15, scope: !1119)
!6829 = !DILocation(line: 2517, column: 20, scope: !6830)
!6830 = !DILexicalBlockFile(scope: !1155, file: !420, discriminator: 1)
!6831 = !DILocation(line: 2517, column: 27, scope: !1155)
!6832 = !DILocation(line: 2517, column: 30, scope: !1155)
!6833 = !DILocation(line: 2517, column: 37, scope: !1155)
!6834 = !DILocation(line: 2517, column: 47, scope: !1155)
!6835 = !DILocation(line: 2517, column: 59, scope: !1155)
!6836 = !DILocation(line: 2517, column: 40, scope: !1155)
!6837 = !DILocation(line: 2517, column: 80, scope: !1155)
!6838 = !DILocation(line: 2517, column: 92, scope: !1155)
!6839 = !DILocation(line: 2517, column: 73, scope: !1155)
!6840 = !DILocation(line: 2517, column: 115, scope: !1155)
!6841 = !DILocation(line: 2517, column: 120, scope: !1155)
!6842 = !DILocation(line: 2517, column: 117, scope: !1155)
!6843 = !DILocation(line: 2517, column: 112, scope: !1155)
!6844 = !DILocation(line: 2517, column: 124, scope: !1119)
!6845 = !DILocation(line: 2517, column: 124, scope: !1155)
!6846 = !DILocation(line: 2517, column: 124, scope: !6847)
!6847 = !DILexicalBlockFile(scope: !1155, file: !420, discriminator: 2)
!6848 = !DILocation(line: 2517, column: 144, scope: !6586)
!6849 = !DILocation(line: 2517, column: 137, scope: !1119)
!6850 = !DILocation(line: 2520, column: 23, scope: !1119)
!6851 = !DILocation(line: 2520, column: 22, scope: !1119)
!6852 = !DILocation(line: 2520, column: 29, scope: !1119)
!6853 = !DILocation(line: 2520, column: 28, scope: !1119)
!6854 = !DILocation(line: 2520, column: 25, scope: !1119)
!6855 = !DILocation(line: 2520, column: 15, scope: !1119)
!6856 = !DILocation(line: 2523, column: 15, scope: !1119)
!6857 = !DILocation(line: 2523, column: 20, scope: !6858)
!6858 = !DILexicalBlockFile(scope: !1158, file: !420, discriminator: 1)
!6859 = !DILocation(line: 2523, column: 27, scope: !1158)
!6860 = !DILocation(line: 2523, column: 30, scope: !1158)
!6861 = !DILocation(line: 2523, column: 37, scope: !1158)
!6862 = !DILocation(line: 2523, column: 47, scope: !1158)
!6863 = !DILocation(line: 2523, column: 59, scope: !1158)
!6864 = !DILocation(line: 2523, column: 40, scope: !1158)
!6865 = !DILocation(line: 2523, column: 80, scope: !1158)
!6866 = !DILocation(line: 2523, column: 92, scope: !1158)
!6867 = !DILocation(line: 2523, column: 73, scope: !1158)
!6868 = !DILocation(line: 2523, column: 115, scope: !1158)
!6869 = !DILocation(line: 2523, column: 120, scope: !1158)
!6870 = !DILocation(line: 2523, column: 117, scope: !1158)
!6871 = !DILocation(line: 2523, column: 112, scope: !1158)
!6872 = !DILocation(line: 2523, column: 124, scope: !1119)
!6873 = !DILocation(line: 2523, column: 124, scope: !1158)
!6874 = !DILocation(line: 2523, column: 124, scope: !6875)
!6875 = !DILexicalBlockFile(scope: !1158, file: !420, discriminator: 2)
!6876 = !DILocation(line: 2523, column: 144, scope: !6586)
!6877 = !DILocation(line: 2523, column: 137, scope: !1119)
!6878 = !DILocation(line: 2529, column: 34, scope: !1119)
!6879 = !DILocation(line: 2529, column: 37, scope: !1119)
!6880 = !DILocation(line: 2529, column: 40, scope: !1119)
!6881 = !DILocation(line: 2529, column: 50, scope: !1119)
!6882 = !DILocation(line: 2529, column: 16, scope: !1119)
!6883 = !DILocation(line: 2529, column: 9, scope: !1119)
!6884 = !DILocation(line: 2533, column: 21, scope: !1107)
!6885 = !DILocation(line: 2533, column: 5, scope: !1107)
!6886 = !DILocation(line: 2535, column: 5, scope: !1107)
!6887 = !DILocation(line: 2536, column: 1, scope: !1107)
!6888 = !DILocation(line: 2540, column: 22, scope: !1191)
!6889 = !DILocation(line: 2540, column: 37, scope: !1191)
!6890 = !DILocation(line: 2540, column: 58, scope: !1191)
!6891 = !DILocation(line: 2541, column: 28, scope: !1191)
!6892 = !DILocation(line: 2541, column: 56, scope: !1191)
!6893 = !DILocation(line: 2542, column: 28, scope: !1191)
!6894 = !DILocation(line: 2542, column: 56, scope: !1191)
!6895 = !DILocation(line: 2543, column: 15, scope: !1191)
!6896 = !DILocation(line: 2543, column: 37, scope: !1191)
!6897 = !DILocation(line: 2543, column: 64, scope: !1191)
!6898 = !DILocation(line: 2545, column: 5, scope: !1191)
!6899 = !DILocation(line: 2545, column: 16, scope: !1191)
!6900 = !DILocation(line: 2546, column: 5, scope: !1191)
!6901 = !DILocation(line: 2546, column: 9, scope: !1191)
!6902 = !DILocation(line: 2548, column: 12, scope: !1210)
!6903 = !DILocation(line: 2548, column: 10, scope: !1210)
!6904 = !DILocation(line: 2548, column: 17, scope: !6905)
!6905 = !DILexicalBlockFile(scope: !6906, file: !420, discriminator: 2)
!6906 = !DILexicalBlockFile(scope: !1209, file: !420, discriminator: 1)
!6907 = !DILocation(line: 2548, column: 21, scope: !1209)
!6908 = !DILocation(line: 2548, column: 19, scope: !1209)
!6909 = !DILocation(line: 2548, column: 5, scope: !1210)
!6910 = !DILocation(line: 2549, column: 9, scope: !1208)
!6911 = !DILocation(line: 2549, column: 21, scope: !1208)
!6912 = !DILocation(line: 2549, column: 28, scope: !1208)
!6913 = !DILocation(line: 2549, column: 40, scope: !1208)
!6914 = !DILocation(line: 2549, column: 43, scope: !6915)
!6915 = !DILexicalBlockFile(scope: !1208, file: !420, discriminator: 1)
!6916 = !DILocation(line: 2549, column: 58, scope: !1208)
!6917 = !DILocation(line: 2549, column: 27, scope: !1208)
!6918 = !DILocation(line: 2549, column: 76, scope: !6919)
!6919 = !DILexicalBlockFile(scope: !1208, file: !420, discriminator: 3)
!6920 = !DILocation(line: 2549, column: 68, scope: !1208)
!6921 = !DILocation(line: 2549, column: 66, scope: !1208)
!6922 = !DILocation(line: 2549, column: 81, scope: !1208)
!6923 = !DILocation(line: 2549, column: 79, scope: !1208)
!6924 = !DILocation(line: 2549, column: 98, scope: !6925)
!6925 = !DILexicalBlockFile(scope: !6926, file: !420, discriminator: 4)
!6926 = !DILexicalBlockFile(scope: !1208, file: !420, discriminator: 2)
!6927 = !DILocation(line: 2549, column: 21, scope: !6928)
!6928 = !DILexicalBlockFile(scope: !6929, file: !420, discriminator: 6)
!6929 = !DILexicalBlockFile(scope: !1208, file: !420, discriminator: 5)
!6930 = !DILocation(line: 2550, column: 9, scope: !1208)
!6931 = !DILocation(line: 2550, column: 21, scope: !1208)
!6932 = !DILocation(line: 2550, column: 28, scope: !1208)
!6933 = !DILocation(line: 2550, column: 40, scope: !1208)
!6934 = !DILocation(line: 2550, column: 43, scope: !6915)
!6935 = !DILocation(line: 2550, column: 58, scope: !1208)
!6936 = !DILocation(line: 2550, column: 27, scope: !1208)
!6937 = !DILocation(line: 2550, column: 76, scope: !6919)
!6938 = !DILocation(line: 2550, column: 68, scope: !1208)
!6939 = !DILocation(line: 2550, column: 66, scope: !1208)
!6940 = !DILocation(line: 2550, column: 81, scope: !1208)
!6941 = !DILocation(line: 2550, column: 79, scope: !1208)
!6942 = !DILocation(line: 2550, column: 98, scope: !6925)
!6943 = !DILocation(line: 2550, column: 21, scope: !6928)
!6944 = !DILocation(line: 2551, column: 28, scope: !1208)
!6945 = !DILocation(line: 2551, column: 32, scope: !1208)
!6946 = !DILocation(line: 2551, column: 36, scope: !1208)
!6947 = !DILocation(line: 2551, column: 41, scope: !1208)
!6948 = !DILocation(line: 2551, column: 51, scope: !1208)
!6949 = !DILocation(line: 2551, column: 17, scope: !1208)
!6950 = !DILocation(line: 2551, column: 15, scope: !1208)
!6951 = !DILocation(line: 2552, column: 13, scope: !6952)
!6952 = distinct !DILexicalBlock(scope: !1208, file: !420, line: 2552, column: 13)
!6953 = !DILocation(line: 2552, column: 19, scope: !6952)
!6954 = !DILocation(line: 2552, column: 13, scope: !1208)
!6955 = !DILocation(line: 2553, column: 20, scope: !6952)
!6956 = !DILocation(line: 2553, column: 13, scope: !6952)
!6957 = !DILocation(line: 2554, column: 5, scope: !1209)
!6958 = !DILocation(line: 2554, column: 5, scope: !6906)
!6959 = !DILocation(line: 2554, column: 5, scope: !1208)
!6960 = !DILocation(line: 2548, column: 34, scope: !1209)
!6961 = !DILocation(line: 2548, column: 32, scope: !1209)
!6962 = !DILocation(line: 2548, column: 50, scope: !1209)
!6963 = !DILocation(line: 2548, column: 48, scope: !1209)
!6964 = !DILocation(line: 2548, column: 64, scope: !1209)
!6965 = !DILocation(line: 2548, column: 5, scope: !1209)
!6966 = !DILocation(line: 2556, column: 5, scope: !1191)
!6967 = !DILocation(line: 2557, column: 1, scope: !1191)
!6968 = !DILocation(line: 2562, column: 21, scope: !1212)
!6969 = !DILocation(line: 2562, column: 36, scope: !1212)
!6970 = !DILocation(line: 2563, column: 20, scope: !1212)
!6971 = !DILocation(line: 2563, column: 44, scope: !1212)
!6972 = !DILocation(line: 2564, column: 27, scope: !1212)
!6973 = !DILocation(line: 2564, column: 55, scope: !1212)
!6974 = !DILocation(line: 2565, column: 27, scope: !1212)
!6975 = !DILocation(line: 2565, column: 55, scope: !1212)
!6976 = !DILocation(line: 2566, column: 14, scope: !1212)
!6977 = !DILocation(line: 2566, column: 36, scope: !1212)
!6978 = !DILocation(line: 2566, column: 63, scope: !1212)
!6979 = !DILocation(line: 2568, column: 5, scope: !1212)
!6980 = !DILocation(line: 2568, column: 16, scope: !1212)
!6981 = !DILocation(line: 2569, column: 5, scope: !1212)
!6982 = !DILocation(line: 2569, column: 9, scope: !1212)
!6983 = !DILocation(line: 2576, column: 9, scope: !6984)
!6984 = distinct !DILexicalBlock(scope: !1212, file: !420, line: 2576, column: 9)
!6985 = !DILocation(line: 2576, column: 14, scope: !6984)
!6986 = !DILocation(line: 2576, column: 9, scope: !1212)
!6987 = !DILocation(line: 2577, column: 25, scope: !6988)
!6988 = distinct !DILexicalBlock(scope: !6984, file: !420, line: 2576, column: 20)
!6989 = !DILocation(line: 2577, column: 28, scope: !6988)
!6990 = !DILocation(line: 2577, column: 31, scope: !6988)
!6991 = !DILocation(line: 2578, column: 25, scope: !6988)
!6992 = !DILocation(line: 2578, column: 35, scope: !6988)
!6993 = !DILocation(line: 2579, column: 25, scope: !6988)
!6994 = !DILocation(line: 2579, column: 35, scope: !6988)
!6995 = !DILocation(line: 2580, column: 25, scope: !6988)
!6996 = !DILocation(line: 2580, column: 30, scope: !6988)
!6997 = !DILocation(line: 2580, column: 40, scope: !6988)
!6998 = !DILocation(line: 2577, column: 16, scope: !6988)
!6999 = !DILocation(line: 2577, column: 9, scope: !6988)
!7000 = !DILocation(line: 2583, column: 12, scope: !1232)
!7001 = !DILocation(line: 2583, column: 10, scope: !1232)
!7002 = !DILocation(line: 2583, column: 17, scope: !7003)
!7003 = !DILexicalBlockFile(scope: !7004, file: !420, discriminator: 2)
!7004 = !DILexicalBlockFile(scope: !1231, file: !420, discriminator: 1)
!7005 = !DILocation(line: 2583, column: 21, scope: !1231)
!7006 = !DILocation(line: 2583, column: 19, scope: !1231)
!7007 = !DILocation(line: 2583, column: 5, scope: !1232)
!7008 = !DILocation(line: 2584, column: 9, scope: !1230)
!7009 = !DILocation(line: 2584, column: 21, scope: !1230)
!7010 = !DILocation(line: 2584, column: 28, scope: !1230)
!7011 = !DILocation(line: 2584, column: 40, scope: !1230)
!7012 = !DILocation(line: 2584, column: 43, scope: !7013)
!7013 = !DILexicalBlockFile(scope: !1230, file: !420, discriminator: 1)
!7014 = !DILocation(line: 2584, column: 58, scope: !1230)
!7015 = !DILocation(line: 2584, column: 27, scope: !1230)
!7016 = !DILocation(line: 2584, column: 76, scope: !7017)
!7017 = !DILexicalBlockFile(scope: !1230, file: !420, discriminator: 3)
!7018 = !DILocation(line: 2584, column: 68, scope: !1230)
!7019 = !DILocation(line: 2584, column: 66, scope: !1230)
!7020 = !DILocation(line: 2584, column: 81, scope: !1230)
!7021 = !DILocation(line: 2584, column: 79, scope: !1230)
!7022 = !DILocation(line: 2584, column: 98, scope: !7023)
!7023 = !DILexicalBlockFile(scope: !7024, file: !420, discriminator: 4)
!7024 = !DILexicalBlockFile(scope: !1230, file: !420, discriminator: 2)
!7025 = !DILocation(line: 2584, column: 21, scope: !7026)
!7026 = !DILexicalBlockFile(scope: !7027, file: !420, discriminator: 6)
!7027 = !DILexicalBlockFile(scope: !1230, file: !420, discriminator: 5)
!7028 = !DILocation(line: 2585, column: 9, scope: !1230)
!7029 = !DILocation(line: 2585, column: 21, scope: !1230)
!7030 = !DILocation(line: 2585, column: 28, scope: !1230)
!7031 = !DILocation(line: 2585, column: 40, scope: !1230)
!7032 = !DILocation(line: 2585, column: 43, scope: !7013)
!7033 = !DILocation(line: 2585, column: 58, scope: !1230)
!7034 = !DILocation(line: 2585, column: 27, scope: !1230)
!7035 = !DILocation(line: 2585, column: 76, scope: !7017)
!7036 = !DILocation(line: 2585, column: 68, scope: !1230)
!7037 = !DILocation(line: 2585, column: 66, scope: !1230)
!7038 = !DILocation(line: 2585, column: 81, scope: !1230)
!7039 = !DILocation(line: 2585, column: 79, scope: !1230)
!7040 = !DILocation(line: 2585, column: 98, scope: !7023)
!7041 = !DILocation(line: 2585, column: 21, scope: !7026)
!7042 = !DILocation(line: 2586, column: 25, scope: !1230)
!7043 = !DILocation(line: 2586, column: 29, scope: !1230)
!7044 = !DILocation(line: 2586, column: 33, scope: !1230)
!7045 = !DILocation(line: 2586, column: 37, scope: !1230)
!7046 = !DILocation(line: 2586, column: 41, scope: !1230)
!7047 = !DILocation(line: 2586, column: 46, scope: !1230)
!7048 = !DILocation(line: 2587, column: 25, scope: !1230)
!7049 = !DILocation(line: 2587, column: 33, scope: !1230)
!7050 = !DILocation(line: 2587, column: 37, scope: !1230)
!7051 = !DILocation(line: 2587, column: 51, scope: !7013)
!7052 = !DILocation(line: 2587, column: 62, scope: !1230)
!7053 = !DILocation(line: 2587, column: 37, scope: !7024)
!7054 = !DILocation(line: 2588, column: 25, scope: !1230)
!7055 = !DILocation(line: 2588, column: 33, scope: !1230)
!7056 = !DILocation(line: 2588, column: 37, scope: !1230)
!7057 = !DILocation(line: 2588, column: 51, scope: !7013)
!7058 = !DILocation(line: 2588, column: 62, scope: !1230)
!7059 = !DILocation(line: 2588, column: 37, scope: !7024)
!7060 = !DILocation(line: 2589, column: 25, scope: !1230)
!7061 = !DILocation(line: 2589, column: 30, scope: !1230)
!7062 = !DILocation(line: 2589, column: 40, scope: !1230)
!7063 = !DILocation(line: 2586, column: 17, scope: !1230)
!7064 = !DILocation(line: 2586, column: 15, scope: !1230)
!7065 = !DILocation(line: 2590, column: 13, scope: !7066)
!7066 = distinct !DILexicalBlock(scope: !1230, file: !420, line: 2590, column: 13)
!7067 = !DILocation(line: 2590, column: 19, scope: !7066)
!7068 = !DILocation(line: 2590, column: 13, scope: !1230)
!7069 = !DILocation(line: 2591, column: 20, scope: !7066)
!7070 = !DILocation(line: 2591, column: 13, scope: !7066)
!7071 = !DILocation(line: 2592, column: 5, scope: !1231)
!7072 = !DILocation(line: 2592, column: 5, scope: !7004)
!7073 = !DILocation(line: 2592, column: 5, scope: !1230)
!7074 = !DILocation(line: 2583, column: 34, scope: !1231)
!7075 = !DILocation(line: 2583, column: 32, scope: !1231)
!7076 = !DILocation(line: 2583, column: 50, scope: !1231)
!7077 = !DILocation(line: 2583, column: 48, scope: !1231)
!7078 = !DILocation(line: 2583, column: 64, scope: !1231)
!7079 = !DILocation(line: 2583, column: 5, scope: !1231)
!7080 = !DILocation(line: 2594, column: 5, scope: !1212)
!7081 = !DILocation(line: 2595, column: 1, scope: !1212)
!7082 = !DILocation(line: 1891, column: 32, scope: !1234)
!7083 = !DILocation(line: 1893, column: 9, scope: !1242)
!7084 = !DILocation(line: 1893, column: 9, scope: !1234)
!7085 = !DILocation(line: 1894, column: 9, scope: !1241)
!7086 = !DILocation(line: 1894, column: 14, scope: !7087)
!7087 = !DILexicalBlockFile(scope: !1240, file: !420, discriminator: 1)
!7088 = !DILocation(line: 1894, column: 24, scope: !1240)
!7089 = !DILocation(line: 1894, column: 55, scope: !1240)
!7090 = !DILocation(line: 1894, column: 58, scope: !1240)
!7091 = !DILocation(line: 1894, column: 76, scope: !1245)
!7092 = !DILocation(line: 1894, column: 92, scope: !1245)
!7093 = !DILocation(line: 1894, column: 76, scope: !1240)
!7094 = !DILocation(line: 1894, column: 107, scope: !7095)
!7095 = !DILexicalBlockFile(scope: !1245, file: !420, discriminator: 2)
!7096 = !DILocation(line: 1894, column: 112, scope: !7097)
!7097 = !DILexicalBlockFile(scope: !1244, file: !420, discriminator: 4)
!7098 = !DILocation(line: 1894, column: 122, scope: !1244)
!7099 = !DILocation(line: 1894, column: 152, scope: !1244)
!7100 = !DILocation(line: 1894, column: 178, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !1244, file: !420, line: 1894, column: 175)
!7102 = !DILocation(line: 1894, column: 195, scope: !7101)
!7103 = !DILocation(line: 1894, column: 175, scope: !7101)
!7104 = !DILocation(line: 1894, column: 205, scope: !7101)
!7105 = !DILocation(line: 1894, column: 175, scope: !1244)
!7106 = !DILocation(line: 1894, column: 175, scope: !7107)
!7107 = !DILexicalBlockFile(scope: !1244, file: !420, discriminator: 5)
!7108 = !DILocation(line: 1894, column: 236, scope: !7109)
!7109 = !DILexicalBlockFile(scope: !7101, file: !420, discriminator: 6)
!7110 = !DILocation(line: 1894, column: 254, scope: !7101)
!7111 = !DILocation(line: 1894, column: 264, scope: !7101)
!7112 = !DILocation(line: 1894, column: 289, scope: !7101)
!7113 = !DILocation(line: 1894, column: 220, scope: !7101)
!7114 = !DILocation(line: 1894, column: 308, scope: !7115)
!7115 = !DILexicalBlockFile(scope: !1245, file: !420, discriminator: 7)
!7116 = !DILocation(line: 1894, column: 308, scope: !1244)
!7117 = !DILocation(line: 1894, column: 308, scope: !7118)
!7118 = !DILexicalBlockFile(scope: !1244, file: !420, discriminator: 8)
!7119 = !DILocation(line: 1894, column: 308, scope: !7120)
!7120 = !DILexicalBlockFile(scope: !1244, file: !420, discriminator: 9)
!7121 = !DILocation(line: 1894, column: 321, scope: !7122)
!7122 = !DILexicalBlockFile(scope: !7123, file: !420, discriminator: 10)
!7123 = !DILexicalBlockFile(scope: !1241, file: !420, discriminator: 3)
!7124 = !DILocation(line: 1894, column: 321, scope: !1240)
!7125 = !DILocation(line: 1895, column: 9, scope: !1241)
!7126 = !DILocation(line: 1895, column: 14, scope: !7127)
!7127 = !DILexicalBlockFile(scope: !1247, file: !420, discriminator: 1)
!7128 = !DILocation(line: 1895, column: 24, scope: !1247)
!7129 = !DILocation(line: 1895, column: 55, scope: !1247)
!7130 = !DILocation(line: 1895, column: 58, scope: !1247)
!7131 = !DILocation(line: 1895, column: 70, scope: !1250)
!7132 = !DILocation(line: 1895, column: 86, scope: !1250)
!7133 = !DILocation(line: 1895, column: 70, scope: !1247)
!7134 = !DILocation(line: 1895, column: 101, scope: !7135)
!7135 = !DILexicalBlockFile(scope: !1250, file: !420, discriminator: 2)
!7136 = !DILocation(line: 1895, column: 106, scope: !7137)
!7137 = !DILexicalBlockFile(scope: !1249, file: !420, discriminator: 4)
!7138 = !DILocation(line: 1895, column: 116, scope: !1249)
!7139 = !DILocation(line: 1895, column: 146, scope: !1249)
!7140 = !DILocation(line: 1895, column: 172, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !1249, file: !420, line: 1895, column: 169)
!7142 = !DILocation(line: 1895, column: 189, scope: !7141)
!7143 = !DILocation(line: 1895, column: 169, scope: !7141)
!7144 = !DILocation(line: 1895, column: 199, scope: !7141)
!7145 = !DILocation(line: 1895, column: 169, scope: !1249)
!7146 = !DILocation(line: 1895, column: 169, scope: !7147)
!7147 = !DILexicalBlockFile(scope: !1249, file: !420, discriminator: 5)
!7148 = !DILocation(line: 1895, column: 230, scope: !7149)
!7149 = !DILexicalBlockFile(scope: !7141, file: !420, discriminator: 6)
!7150 = !DILocation(line: 1895, column: 248, scope: !7141)
!7151 = !DILocation(line: 1895, column: 258, scope: !7141)
!7152 = !DILocation(line: 1895, column: 283, scope: !7141)
!7153 = !DILocation(line: 1895, column: 214, scope: !7141)
!7154 = !DILocation(line: 1895, column: 302, scope: !7155)
!7155 = !DILexicalBlockFile(scope: !1250, file: !420, discriminator: 7)
!7156 = !DILocation(line: 1895, column: 302, scope: !1249)
!7157 = !DILocation(line: 1895, column: 302, scope: !7158)
!7158 = !DILexicalBlockFile(scope: !1249, file: !420, discriminator: 8)
!7159 = !DILocation(line: 1895, column: 302, scope: !7160)
!7160 = !DILexicalBlockFile(scope: !1249, file: !420, discriminator: 9)
!7161 = !DILocation(line: 1895, column: 315, scope: !7122)
!7162 = !DILocation(line: 1895, column: 315, scope: !1247)
!7163 = !DILocation(line: 1896, column: 20, scope: !1241)
!7164 = !DILocation(line: 1896, column: 23, scope: !1241)
!7165 = !DILocation(line: 1896, column: 9, scope: !1241)
!7166 = !DILocation(line: 1897, column: 20, scope: !1241)
!7167 = !DILocation(line: 1897, column: 9, scope: !1241)
!7168 = !DILocation(line: 1898, column: 5, scope: !1241)
!7169 = !DILocation(line: 1899, column: 1, scope: !1234)
!7170 = !DILocation(line: 1875, column: 5, scope: !1099)
!7171 = !DILocation(line: 1875, column: 22, scope: !1099)
!7172 = !DILocation(line: 1875, column: 26, scope: !1099)
!7173 = !DILocation(line: 1877, column: 9, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !1099, file: !420, line: 1877, column: 9)
!7175 = !DILocation(line: 1877, column: 11, scope: !7174)
!7176 = !DILocation(line: 1877, column: 9, scope: !1099)
!7177 = !DILocation(line: 1878, column: 9, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7174, file: !420, line: 1877, column: 26)
!7179 = !DILocation(line: 1879, column: 9, scope: !7178)
!7180 = !DILocation(line: 1882, column: 5, scope: !1099)
!7181 = !DILocation(line: 1882, column: 8, scope: !1099)
!7182 = !DILocation(line: 1882, column: 20, scope: !1099)
!7183 = !DILocation(line: 1883, column: 5, scope: !1099)
!7184 = !DILocation(line: 1883, column: 8, scope: !1099)
!7185 = !DILocation(line: 1883, column: 14, scope: !1099)
!7186 = !DILocation(line: 1884, column: 5, scope: !1099)
!7187 = !DILocation(line: 1884, column: 8, scope: !1099)
!7188 = !DILocation(line: 1884, column: 13, scope: !1099)
!7189 = !DILocation(line: 1885, column: 5, scope: !1099)
!7190 = !DILocation(line: 1885, column: 8, scope: !1099)
!7191 = !DILocation(line: 1885, column: 17, scope: !1099)
!7192 = !DILocation(line: 1887, column: 12, scope: !1099)
!7193 = !DILocation(line: 1887, column: 5, scope: !1099)
!7194 = !DILocation(line: 1888, column: 1, scope: !1099)
!7195 = !DILocation(line: 2436, column: 31, scope: !1160)
!7196 = !DILocation(line: 2436, column: 46, scope: !1160)
!7197 = !DILocation(line: 2437, column: 36, scope: !1160)
!7198 = !DILocation(line: 2437, column: 63, scope: !1160)
!7199 = !DILocation(line: 2439, column: 5, scope: !1160)
!7200 = !DILocation(line: 2439, column: 15, scope: !1160)
!7201 = !DILocation(line: 2439, column: 19, scope: !1160)
!7202 = !DILocation(line: 2440, column: 5, scope: !1160)
!7203 = !DILocation(line: 2440, column: 9, scope: !1160)
!7204 = !DILocation(line: 2444, column: 30, scope: !1160)
!7205 = !DILocation(line: 2444, column: 33, scope: !1160)
!7206 = !DILocation(line: 2444, column: 9, scope: !1160)
!7207 = !DILocation(line: 2444, column: 7, scope: !1160)
!7208 = !DILocation(line: 2445, column: 9, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !1160, file: !420, line: 2445, column: 9)
!7210 = !DILocation(line: 2445, column: 11, scope: !7209)
!7211 = !DILocation(line: 2445, column: 9, scope: !1160)
!7212 = !DILocation(line: 2446, column: 9, scope: !7209)
!7213 = !DILocation(line: 2448, column: 30, scope: !1160)
!7214 = !DILocation(line: 2448, column: 33, scope: !1160)
!7215 = !DILocation(line: 2448, column: 9, scope: !1160)
!7216 = !DILocation(line: 2448, column: 7, scope: !1160)
!7217 = !DILocation(line: 2449, column: 9, scope: !1174)
!7218 = !DILocation(line: 2449, column: 11, scope: !1174)
!7219 = !DILocation(line: 2449, column: 9, scope: !1160)
!7220 = !DILocation(line: 2450, column: 9, scope: !1173)
!7221 = !DILocation(line: 2450, column: 14, scope: !7222)
!7222 = !DILexicalBlockFile(scope: !1172, file: !420, discriminator: 1)
!7223 = !DILocation(line: 2450, column: 24, scope: !1172)
!7224 = !DILocation(line: 2450, column: 54, scope: !1172)
!7225 = !DILocation(line: 2450, column: 66, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !1172, file: !420, line: 2450, column: 63)
!7227 = !DILocation(line: 2450, column: 83, scope: !7226)
!7228 = !DILocation(line: 2450, column: 63, scope: !7226)
!7229 = !DILocation(line: 2450, column: 93, scope: !7226)
!7230 = !DILocation(line: 2450, column: 63, scope: !1172)
!7231 = !DILocation(line: 2450, column: 63, scope: !7232)
!7232 = !DILexicalBlockFile(scope: !1172, file: !420, discriminator: 2)
!7233 = !DILocation(line: 2450, column: 124, scope: !7234)
!7234 = !DILexicalBlockFile(scope: !7226, file: !420, discriminator: 3)
!7235 = !DILocation(line: 2450, column: 142, scope: !7226)
!7236 = !DILocation(line: 2450, column: 152, scope: !7226)
!7237 = !DILocation(line: 2450, column: 177, scope: !7226)
!7238 = !DILocation(line: 2450, column: 108, scope: !7226)
!7239 = !DILocation(line: 2450, column: 196, scope: !7240)
!7240 = !DILexicalBlockFile(scope: !1173, file: !420, discriminator: 4)
!7241 = !DILocation(line: 2450, column: 196, scope: !1172)
!7242 = !DILocation(line: 2450, column: 196, scope: !7243)
!7243 = !DILexicalBlockFile(scope: !1172, file: !420, discriminator: 5)
!7244 = !DILocation(line: 2451, column: 9, scope: !1173)
!7245 = !DILocation(line: 2455, column: 36, scope: !1160)
!7246 = !DILocation(line: 2455, column: 39, scope: !1160)
!7247 = !DILocation(line: 2455, column: 11, scope: !1160)
!7248 = !DILocation(line: 2455, column: 9, scope: !1160)
!7249 = !DILocation(line: 2456, column: 5, scope: !1160)
!7250 = !DILocation(line: 2456, column: 10, scope: !7251)
!7251 = !DILexicalBlockFile(scope: !1176, file: !420, discriminator: 1)
!7252 = !DILocation(line: 2456, column: 20, scope: !1176)
!7253 = !DILocation(line: 2456, column: 50, scope: !1176)
!7254 = !DILocation(line: 2456, column: 62, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !1176, file: !420, line: 2456, column: 59)
!7256 = !DILocation(line: 2456, column: 79, scope: !7255)
!7257 = !DILocation(line: 2456, column: 59, scope: !7255)
!7258 = !DILocation(line: 2456, column: 89, scope: !7255)
!7259 = !DILocation(line: 2456, column: 59, scope: !1176)
!7260 = !DILocation(line: 2456, column: 59, scope: !7261)
!7261 = !DILexicalBlockFile(scope: !1176, file: !420, discriminator: 2)
!7262 = !DILocation(line: 2456, column: 120, scope: !7263)
!7263 = !DILexicalBlockFile(scope: !7255, file: !420, discriminator: 3)
!7264 = !DILocation(line: 2456, column: 138, scope: !7255)
!7265 = !DILocation(line: 2456, column: 148, scope: !7255)
!7266 = !DILocation(line: 2456, column: 173, scope: !7255)
!7267 = !DILocation(line: 2456, column: 104, scope: !7255)
!7268 = !DILocation(line: 2456, column: 192, scope: !7269)
!7269 = !DILexicalBlockFile(scope: !1160, file: !420, discriminator: 4)
!7270 = !DILocation(line: 2456, column: 192, scope: !1176)
!7271 = !DILocation(line: 2456, column: 192, scope: !7272)
!7272 = !DILexicalBlockFile(scope: !1176, file: !420, discriminator: 5)
!7273 = !DILocation(line: 2457, column: 5, scope: !1160)
!7274 = !DILocation(line: 2457, column: 10, scope: !7275)
!7275 = !DILexicalBlockFile(scope: !1178, file: !420, discriminator: 1)
!7276 = !DILocation(line: 2457, column: 20, scope: !1178)
!7277 = !DILocation(line: 2457, column: 50, scope: !1178)
!7278 = !DILocation(line: 2457, column: 62, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !1178, file: !420, line: 2457, column: 59)
!7280 = !DILocation(line: 2457, column: 79, scope: !7279)
!7281 = !DILocation(line: 2457, column: 59, scope: !7279)
!7282 = !DILocation(line: 2457, column: 89, scope: !7279)
!7283 = !DILocation(line: 2457, column: 59, scope: !1178)
!7284 = !DILocation(line: 2457, column: 59, scope: !7285)
!7285 = !DILexicalBlockFile(scope: !1178, file: !420, discriminator: 2)
!7286 = !DILocation(line: 2457, column: 120, scope: !7287)
!7287 = !DILexicalBlockFile(scope: !7279, file: !420, discriminator: 3)
!7288 = !DILocation(line: 2457, column: 138, scope: !7279)
!7289 = !DILocation(line: 2457, column: 148, scope: !7279)
!7290 = !DILocation(line: 2457, column: 173, scope: !7279)
!7291 = !DILocation(line: 2457, column: 104, scope: !7279)
!7292 = !DILocation(line: 2457, column: 192, scope: !7269)
!7293 = !DILocation(line: 2457, column: 192, scope: !1178)
!7294 = !DILocation(line: 2457, column: 192, scope: !7295)
!7295 = !DILexicalBlockFile(scope: !1178, file: !420, discriminator: 5)
!7296 = !DILocation(line: 2459, column: 12, scope: !1160)
!7297 = !DILocation(line: 2459, column: 5, scope: !1160)
!7298 = !DILocation(line: 2460, column: 1, scope: !1160)
!7299 = !DILocation(line: 1962, column: 34, scope: !1179)
!7300 = !DILocation(line: 1962, column: 56, scope: !1179)
!7301 = !DILocation(line: 1964, column: 5, scope: !1179)
!7302 = !DILocation(line: 1964, column: 15, scope: !1179)
!7303 = !DILocation(line: 1966, column: 12, scope: !1179)
!7304 = !DILocation(line: 1966, column: 15, scope: !1179)
!7305 = !DILocation(line: 1966, column: 21, scope: !1179)
!7306 = !DILocation(line: 1966, column: 26, scope: !1179)
!7307 = !DILocation(line: 1966, column: 29, scope: !1179)
!7308 = !DILocation(line: 1966, column: 5, scope: !1179)
!7309 = !DILocation(line: 1967, column: 38, scope: !1179)
!7310 = !DILocation(line: 1967, column: 41, scope: !1179)
!7311 = !DILocation(line: 1967, column: 54, scope: !1179)
!7312 = !DILocation(line: 1967, column: 57, scope: !1179)
!7313 = !DILocation(line: 1967, column: 9, scope: !1179)
!7314 = !DILocation(line: 1967, column: 7, scope: !1179)
!7315 = !DILocation(line: 1968, column: 9, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !1179, file: !420, line: 1968, column: 9)
!7317 = !DILocation(line: 1968, column: 11, scope: !7316)
!7318 = !DILocation(line: 1968, column: 9, scope: !1179)
!7319 = !DILocation(line: 1969, column: 9, scope: !7316)
!7320 = !DILocation(line: 1971, column: 26, scope: !1188)
!7321 = !DILocation(line: 1971, column: 11, scope: !1188)
!7322 = !DILocation(line: 1971, column: 31, scope: !1188)
!7323 = !DILocation(line: 1971, column: 40, scope: !1188)
!7324 = !DILocation(line: 1971, column: 9, scope: !1179)
!7325 = !DILocation(line: 1972, column: 9, scope: !1187)
!7326 = !DILocation(line: 1972, column: 19, scope: !1187)
!7327 = !DILocation(line: 1972, column: 45, scope: !1187)
!7328 = !DILocation(line: 1972, column: 27, scope: !1187)
!7329 = !DILocation(line: 1972, column: 50, scope: !1187)
!7330 = !DILocation(line: 1972, column: 26, scope: !1187)
!7331 = !DILocation(line: 1973, column: 25, scope: !1187)
!7332 = !DILocation(line: 1973, column: 32, scope: !1187)
!7333 = !DILocation(line: 1973, column: 41, scope: !1187)
!7334 = !DILocation(line: 1974, column: 9, scope: !1187)
!7335 = !DILocation(line: 1974, column: 14, scope: !7336)
!7336 = !DILexicalBlockFile(scope: !1190, file: !420, discriminator: 1)
!7337 = !DILocation(line: 1974, column: 24, scope: !1190)
!7338 = !DILocation(line: 1974, column: 54, scope: !1190)
!7339 = !DILocation(line: 1974, column: 66, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !1190, file: !420, line: 1974, column: 63)
!7341 = !DILocation(line: 1974, column: 83, scope: !7340)
!7342 = !DILocation(line: 1974, column: 63, scope: !7340)
!7343 = !DILocation(line: 1974, column: 93, scope: !7340)
!7344 = !DILocation(line: 1974, column: 63, scope: !1190)
!7345 = !DILocation(line: 1974, column: 63, scope: !7346)
!7346 = !DILexicalBlockFile(scope: !1190, file: !420, discriminator: 2)
!7347 = !DILocation(line: 1974, column: 124, scope: !7348)
!7348 = !DILexicalBlockFile(scope: !7340, file: !420, discriminator: 3)
!7349 = !DILocation(line: 1974, column: 142, scope: !7340)
!7350 = !DILocation(line: 1974, column: 152, scope: !7340)
!7351 = !DILocation(line: 1974, column: 177, scope: !7340)
!7352 = !DILocation(line: 1974, column: 108, scope: !7340)
!7353 = !DILocation(line: 1974, column: 196, scope: !7354)
!7354 = !DILexicalBlockFile(scope: !1187, file: !420, discriminator: 4)
!7355 = !DILocation(line: 1974, column: 196, scope: !1190)
!7356 = !DILocation(line: 1974, column: 196, scope: !7357)
!7357 = !DILexicalBlockFile(scope: !1190, file: !420, discriminator: 5)
!7358 = !DILocation(line: 1975, column: 16, scope: !1187)
!7359 = !DILocation(line: 1975, column: 9, scope: !1187)
!7360 = !DILocation(line: 1976, column: 5, scope: !1188)
!7361 = !DILocation(line: 1978, column: 12, scope: !1179)
!7362 = !DILocation(line: 1978, column: 5, scope: !1179)
!7363 = !DILocation(line: 1979, column: 1, scope: !1179)
!7364 = !DILocation(line: 1049, column: 36, scope: !1251)
!7365 = !DILocation(line: 1049, column: 52, scope: !1251)
!7366 = !DILocation(line: 1051, column: 25, scope: !7367)
!7367 = distinct !DILexicalBlock(scope: !1251, file: !420, line: 1051, column: 9)
!7368 = !DILocation(line: 1051, column: 9, scope: !7367)
!7369 = !DILocation(line: 1051, column: 31, scope: !7367)
!7370 = !DILocation(line: 1051, column: 9, scope: !1251)
!7371 = !DILocation(line: 1052, column: 9, scope: !7367)
!7372 = !DILocation(line: 1053, column: 58, scope: !1251)
!7373 = !DILocation(line: 1053, column: 5, scope: !1251)
!7374 = !DILocation(line: 1054, column: 1, scope: !1251)
!7375 = !DILocation(line: 2092, column: 36, scope: !1255)
!7376 = !DILocation(line: 2092, column: 52, scope: !1255)
!7377 = !DILocation(line: 2094, column: 5, scope: !1255)
!7378 = !DILocation(line: 2094, column: 16, scope: !1255)
!7379 = !DILocation(line: 2094, column: 47, scope: !1255)
!7380 = !DILocation(line: 2094, column: 54, scope: !1255)
!7381 = !DILocation(line: 2095, column: 5, scope: !1255)
!7382 = !DILocation(line: 2095, column: 15, scope: !1255)
!7383 = !DILocation(line: 2097, column: 33, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !1255, file: !420, line: 2097, column: 9)
!7385 = !DILocation(line: 2097, column: 40, scope: !7384)
!7386 = !DILocation(line: 2097, column: 45, scope: !7384)
!7387 = !DILocation(line: 2097, column: 52, scope: !7384)
!7388 = !DILocation(line: 2097, column: 78, scope: !7389)
!7389 = !DILexicalBlockFile(scope: !7384, file: !420, discriminator: 2)
!7390 = !DILocation(line: 2097, column: 85, scope: !7384)
!7391 = !DILocation(line: 2097, column: 91, scope: !7384)
!7392 = !DILocation(line: 2097, column: 96, scope: !7384)
!7393 = !DILocation(line: 2097, column: 9, scope: !1255)
!7394 = !DILocation(line: 2097, column: 123, scope: !7395)
!7395 = !DILexicalBlockFile(scope: !7396, file: !420, discriminator: 3)
!7396 = !DILexicalBlockFile(scope: !7397, file: !420, discriminator: 1)
!7397 = distinct !DILexicalBlock(scope: !7384, file: !420, line: 2097, column: 105)
!7398 = !DILocation(line: 2097, column: 107, scope: !7397)
!7399 = !DILocation(line: 2097, column: 195, scope: !7397)
!7400 = !DILocation(line: 2099, column: 10, scope: !7401)
!7401 = distinct !DILexicalBlock(scope: !1255, file: !420, line: 2099, column: 9)
!7402 = !DILocation(line: 2099, column: 16, scope: !7401)
!7403 = !DILocation(line: 2099, column: 21, scope: !7401)
!7404 = !DILocation(line: 2099, column: 9, scope: !1255)
!7405 = !DILocation(line: 2100, column: 42, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7401, file: !420, line: 2099, column: 38)
!7407 = !DILocation(line: 2100, column: 47, scope: !7406)
!7408 = !DILocation(line: 2100, column: 52, scope: !7406)
!7409 = !DILocation(line: 2100, column: 57, scope: !7406)
!7410 = !DILocation(line: 2100, column: 16, scope: !7406)
!7411 = !DILocation(line: 2100, column: 9, scope: !7406)
!7412 = !DILocation(line: 2103, column: 51, scope: !1255)
!7413 = !DILocation(line: 2103, column: 56, scope: !1255)
!7414 = !DILocation(line: 2103, column: 13, scope: !1255)
!7415 = !DILocation(line: 2103, column: 11, scope: !1255)
!7416 = !DILocation(line: 2104, column: 9, scope: !7417)
!7417 = distinct !DILexicalBlock(scope: !1255, file: !420, line: 2104, column: 9)
!7418 = !DILocation(line: 2104, column: 15, scope: !7417)
!7419 = !DILocation(line: 2104, column: 9, scope: !1255)
!7420 = !DILocation(line: 2105, column: 9, scope: !7417)
!7421 = !DILocation(line: 2107, column: 65, scope: !1264)
!7422 = !DILocation(line: 2107, column: 47, scope: !1264)
!7423 = !DILocation(line: 2107, column: 74, scope: !1264)
!7424 = !DILocation(line: 2107, column: 45, scope: !1264)
!7425 = !DILocation(line: 2107, column: 85, scope: !1264)
!7426 = !DILocation(line: 2107, column: 9, scope: !1264)
!7427 = !DILocation(line: 2107, column: 95, scope: !1264)
!7428 = !DILocation(line: 2107, column: 9, scope: !1255)
!7429 = !DILocation(line: 2108, column: 9, scope: !1263)
!7430 = !DILocation(line: 2108, column: 14, scope: !7431)
!7431 = !DILexicalBlockFile(scope: !1262, file: !420, discriminator: 1)
!7432 = !DILocation(line: 2108, column: 24, scope: !1262)
!7433 = !DILocation(line: 2108, column: 54, scope: !1262)
!7434 = !DILocation(line: 2108, column: 70, scope: !7435)
!7435 = distinct !DILexicalBlock(scope: !1262, file: !420, line: 2108, column: 67)
!7436 = !DILocation(line: 2108, column: 87, scope: !7435)
!7437 = !DILocation(line: 2108, column: 67, scope: !7435)
!7438 = !DILocation(line: 2108, column: 97, scope: !7435)
!7439 = !DILocation(line: 2108, column: 67, scope: !1262)
!7440 = !DILocation(line: 2108, column: 67, scope: !7441)
!7441 = !DILexicalBlockFile(scope: !1262, file: !420, discriminator: 2)
!7442 = !DILocation(line: 2108, column: 128, scope: !7443)
!7443 = !DILexicalBlockFile(scope: !7435, file: !420, discriminator: 3)
!7444 = !DILocation(line: 2108, column: 146, scope: !7435)
!7445 = !DILocation(line: 2108, column: 156, scope: !7435)
!7446 = !DILocation(line: 2108, column: 181, scope: !7435)
!7447 = !DILocation(line: 2108, column: 112, scope: !7435)
!7448 = !DILocation(line: 2108, column: 200, scope: !7449)
!7449 = !DILexicalBlockFile(scope: !1263, file: !420, discriminator: 4)
!7450 = !DILocation(line: 2108, column: 200, scope: !1262)
!7451 = !DILocation(line: 2108, column: 200, scope: !7452)
!7452 = !DILexicalBlockFile(scope: !1262, file: !420, discriminator: 5)
!7453 = !DILocation(line: 2109, column: 9, scope: !1263)
!7454 = !DILocation(line: 2112, column: 12, scope: !1255)
!7455 = !DILocation(line: 2112, column: 5, scope: !1255)
!7456 = !DILocation(line: 2113, column: 1, scope: !1255)
!7457 = !DILocation(line: 2066, column: 35, scope: !1265)
!7458 = !DILocation(line: 2066, column: 49, scope: !1265)
!7459 = !DILocation(line: 2068, column: 5, scope: !1265)
!7460 = !DILocation(line: 2068, column: 22, scope: !1265)
!7461 = !DILocation(line: 2068, column: 31, scope: !1265)
!7462 = !DILocation(line: 2068, column: 35, scope: !1265)
!7463 = !DILocation(line: 2069, column: 5, scope: !1265)
!7464 = !DILocation(line: 2069, column: 17, scope: !1265)
!7465 = !DILocation(line: 2071, column: 33, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !1265, file: !420, line: 2071, column: 9)
!7467 = !DILocation(line: 2071, column: 38, scope: !7466)
!7468 = !DILocation(line: 2071, column: 43, scope: !7466)
!7469 = !DILocation(line: 2071, column: 50, scope: !7466)
!7470 = !DILocation(line: 2071, column: 76, scope: !7471)
!7471 = !DILexicalBlockFile(scope: !7466, file: !420, discriminator: 2)
!7472 = !DILocation(line: 2071, column: 81, scope: !7466)
!7473 = !DILocation(line: 2071, column: 87, scope: !7466)
!7474 = !DILocation(line: 2071, column: 92, scope: !7466)
!7475 = !DILocation(line: 2071, column: 9, scope: !1265)
!7476 = !DILocation(line: 2071, column: 119, scope: !7477)
!7477 = !DILexicalBlockFile(scope: !7478, file: !420, discriminator: 3)
!7478 = !DILexicalBlockFile(scope: !7479, file: !420, discriminator: 1)
!7479 = distinct !DILexicalBlock(scope: !7466, file: !420, line: 2071, column: 101)
!7480 = !DILocation(line: 2071, column: 103, scope: !7479)
!7481 = !DILocation(line: 2071, column: 191, scope: !7479)
!7482 = !DILocation(line: 2073, column: 22, scope: !1265)
!7483 = !DILocation(line: 2073, column: 11, scope: !1265)
!7484 = !DILocation(line: 2073, column: 9, scope: !1265)
!7485 = !DILocation(line: 2074, column: 9, scope: !7486)
!7486 = distinct !DILexicalBlock(scope: !1265, file: !420, line: 2074, column: 9)
!7487 = !DILocation(line: 2074, column: 13, scope: !7486)
!7488 = !DILocation(line: 2074, column: 9, scope: !1265)
!7489 = !DILocation(line: 2075, column: 9, scope: !7486)
!7490 = !DILocation(line: 2076, column: 9, scope: !7491)
!7491 = distinct !DILexicalBlock(scope: !1265, file: !420, line: 2076, column: 9)
!7492 = !DILocation(line: 2076, column: 15, scope: !7491)
!7493 = !DILocation(line: 2076, column: 20, scope: !7491)
!7494 = !DILocation(line: 2076, column: 9, scope: !1265)
!7495 = !DILocation(line: 2077, column: 30, scope: !7496)
!7496 = distinct !DILexicalBlock(scope: !7491, file: !420, line: 2076, column: 26)
!7497 = !DILocation(line: 2077, column: 36, scope: !7496)
!7498 = !DILocation(line: 2077, column: 41, scope: !7496)
!7499 = !DILocation(line: 2077, column: 16, scope: !7496)
!7500 = !DILocation(line: 2077, column: 9, scope: !7496)
!7501 = !DILocation(line: 2079, column: 14, scope: !7502)
!7502 = distinct !DILexicalBlock(scope: !7491, file: !420, line: 2079, column: 14)
!7503 = !DILocation(line: 2079, column: 20, scope: !7502)
!7504 = !DILocation(line: 2079, column: 25, scope: !7502)
!7505 = !DILocation(line: 2079, column: 14, scope: !7491)
!7506 = !DILocation(line: 2080, column: 28, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7502, file: !420, line: 2079, column: 31)
!7508 = !DILocation(line: 2080, column: 34, scope: !7507)
!7509 = !DILocation(line: 2080, column: 39, scope: !7507)
!7510 = !DILocation(line: 2080, column: 45, scope: !7507)
!7511 = !DILocation(line: 2081, column: 28, scope: !7507)
!7512 = !DILocation(line: 2081, column: 34, scope: !7507)
!7513 = !DILocation(line: 2081, column: 43, scope: !7507)
!7514 = !DILocation(line: 2081, column: 49, scope: !7507)
!7515 = !DILocation(line: 2082, column: 28, scope: !7507)
!7516 = !DILocation(line: 2080, column: 16, scope: !7507)
!7517 = !DILocation(line: 2080, column: 9, scope: !7507)
!7518 = !DILocation(line: 2085, column: 27, scope: !7519)
!7519 = distinct !DILexicalBlock(scope: !7502, file: !420, line: 2084, column: 10)
!7520 = !DILocation(line: 2085, column: 33, scope: !7519)
!7521 = !DILocation(line: 2085, column: 38, scope: !7519)
!7522 = !DILocation(line: 2085, column: 44, scope: !7519)
!7523 = !DILocation(line: 2085, column: 50, scope: !7519)
!7524 = !DILocation(line: 2085, column: 56, scope: !7519)
!7525 = !DILocation(line: 2086, column: 27, scope: !7519)
!7526 = !DILocation(line: 2086, column: 33, scope: !7519)
!7527 = !DILocation(line: 2086, column: 42, scope: !7519)
!7528 = !DILocation(line: 2086, column: 48, scope: !7519)
!7529 = !DILocation(line: 2087, column: 27, scope: !7519)
!7530 = !DILocation(line: 2085, column: 16, scope: !7519)
!7531 = !DILocation(line: 2085, column: 9, scope: !7519)
!7532 = !DILocation(line: 2089, column: 1, scope: !1265)
!7533 = !DILocation(line: 1309, column: 33, scope: !1312)
!7534 = !DILocation(line: 1309, column: 49, scope: !1312)
!7535 = !DILocation(line: 1309, column: 65, scope: !1312)
!7536 = !DILocation(line: 1312, column: 5, scope: !1312)
!7537 = !DILocation(line: 1312, column: 25, scope: !1312)
!7538 = !DILocation(line: 1313, column: 5, scope: !1312)
!7539 = !DILocation(line: 1313, column: 15, scope: !1312)
!7540 = !DILocation(line: 1314, column: 5, scope: !1312)
!7541 = !DILocation(line: 1314, column: 15, scope: !1312)
!7542 = !DILocation(line: 1315, column: 5, scope: !1312)
!7543 = !DILocation(line: 1315, column: 16, scope: !1312)
!7544 = !DILocation(line: 1317, column: 33, scope: !7545)
!7545 = distinct !DILexicalBlock(scope: !1312, file: !420, line: 1317, column: 9)
!7546 = !DILocation(line: 1317, column: 40, scope: !7545)
!7547 = !DILocation(line: 1317, column: 45, scope: !7545)
!7548 = !DILocation(line: 1317, column: 52, scope: !7545)
!7549 = !DILocation(line: 1317, column: 78, scope: !7550)
!7550 = !DILexicalBlockFile(scope: !7545, file: !420, discriminator: 2)
!7551 = !DILocation(line: 1317, column: 85, scope: !7545)
!7552 = !DILocation(line: 1317, column: 91, scope: !7545)
!7553 = !DILocation(line: 1317, column: 96, scope: !7545)
!7554 = !DILocation(line: 1317, column: 9, scope: !1312)
!7555 = !DILocation(line: 1317, column: 123, scope: !7556)
!7556 = !DILexicalBlockFile(scope: !7557, file: !420, discriminator: 3)
!7557 = !DILexicalBlockFile(scope: !7558, file: !420, discriminator: 1)
!7558 = distinct !DILexicalBlock(scope: !7545, file: !420, line: 1317, column: 105)
!7559 = !DILocation(line: 1317, column: 107, scope: !7558)
!7560 = !DILocation(line: 1317, column: 195, scope: !7558)
!7561 = !DILocation(line: 1319, column: 38, scope: !7562)
!7562 = distinct !DILexicalBlock(scope: !1312, file: !420, line: 1319, column: 9)
!7563 = !DILocation(line: 1319, column: 44, scope: !7562)
!7564 = !DILocation(line: 1319, column: 10, scope: !7562)
!7565 = !DILocation(line: 1319, column: 9, scope: !1312)
!7566 = !DILocation(line: 1321, column: 9, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7562, file: !420, line: 1320, column: 56)
!7568 = !DILocation(line: 1323, column: 27, scope: !7569)
!7569 = distinct !DILexicalBlock(scope: !1312, file: !420, line: 1323, column: 9)
!7570 = !DILocation(line: 1323, column: 37, scope: !7569)
!7571 = !DILocation(line: 1323, column: 48, scope: !7569)
!7572 = !DILocation(line: 1323, column: 57, scope: !7569)
!7573 = !DILocation(line: 1323, column: 74, scope: !7569)
!7574 = !DILocation(line: 1323, column: 9, scope: !1312)
!7575 = !DILocation(line: 1324, column: 25, scope: !7576)
!7576 = distinct !DILexicalBlock(scope: !7569, file: !420, line: 1323, column: 81)
!7577 = !DILocation(line: 1324, column: 9, scope: !7576)
!7578 = !DILocation(line: 1326, column: 9, scope: !7576)
!7579 = !DILocation(line: 1328, column: 11, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !1312, file: !420, line: 1328, column: 9)
!7581 = !DILocation(line: 1328, column: 17, scope: !7580)
!7582 = !DILocation(line: 1328, column: 22, scope: !7580)
!7583 = !DILocation(line: 1328, column: 9, scope: !1312)
!7584 = !DILocation(line: 1329, column: 25, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !7580, file: !420, line: 1328, column: 39)
!7586 = !DILocation(line: 1329, column: 9, scope: !7585)
!7587 = !DILocation(line: 1331, column: 9, scope: !7585)
!7588 = !DILocation(line: 1333, column: 10, scope: !7589)
!7589 = distinct !DILexicalBlock(scope: !1312, file: !420, line: 1333, column: 9)
!7590 = !DILocation(line: 1333, column: 16, scope: !7589)
!7591 = !DILocation(line: 1333, column: 19, scope: !7592)
!7592 = !DILexicalBlockFile(scope: !7589, file: !420, discriminator: 2)
!7593 = !DILocation(line: 1333, column: 25, scope: !7589)
!7594 = !DILocation(line: 1333, column: 30, scope: !7589)
!7595 = !DILocation(line: 1333, column: 35, scope: !7589)
!7596 = !DILocation(line: 1333, column: 41, scope: !7589)
!7597 = !DILocation(line: 1333, column: 58, scope: !7598)
!7598 = !DILexicalBlockFile(scope: !7599, file: !420, discriminator: 3)
!7599 = !DILexicalBlockFile(scope: !7589, file: !420, discriminator: 1)
!7600 = !DILocation(line: 1333, column: 44, scope: !7589)
!7601 = !DILocation(line: 1333, column: 9, scope: !1312)
!7602 = !DILocation(line: 1334, column: 25, scope: !7603)
!7603 = distinct !DILexicalBlock(scope: !7589, file: !420, line: 1333, column: 65)
!7604 = !DILocation(line: 1334, column: 9, scope: !7603)
!7605 = !DILocation(line: 1336, column: 9, scope: !7603)
!7606 = !DILocation(line: 1338, column: 9, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !1312, file: !420, line: 1338, column: 9)
!7608 = !DILocation(line: 1338, column: 9, scope: !1312)
!7609 = !DILocation(line: 1339, column: 31, scope: !7610)
!7610 = distinct !DILexicalBlock(scope: !7611, file: !420, line: 1339, column: 13)
!7611 = distinct !DILexicalBlock(scope: !7607, file: !420, line: 1338, column: 16)
!7612 = !DILocation(line: 1339, column: 40, scope: !7610)
!7613 = !DILocation(line: 1339, column: 51, scope: !7610)
!7614 = !DILocation(line: 1339, column: 60, scope: !7610)
!7615 = !DILocation(line: 1339, column: 77, scope: !7610)
!7616 = !DILocation(line: 1339, column: 83, scope: !7610)
!7617 = !DILocation(line: 1339, column: 104, scope: !7618)
!7618 = !DILexicalBlockFile(scope: !7610, file: !420, discriminator: 1)
!7619 = !DILocation(line: 1339, column: 113, scope: !7610)
!7620 = !DILocation(line: 1339, column: 124, scope: !7610)
!7621 = !DILocation(line: 1339, column: 133, scope: !7610)
!7622 = !DILocation(line: 1339, column: 150, scope: !7610)
!7623 = !DILocation(line: 1339, column: 13, scope: !7611)
!7624 = !DILocation(line: 1339, column: 175, scope: !7625)
!7625 = !DILexicalBlockFile(scope: !7626, file: !420, discriminator: 2)
!7626 = distinct !DILexicalBlock(scope: !7610, file: !420, line: 1339, column: 157)
!7627 = !DILocation(line: 1339, column: 159, scope: !7626)
!7628 = !DILocation(line: 1339, column: 231, scope: !7626)
!7629 = !DILocation(line: 1340, column: 34, scope: !7611)
!7630 = !DILocation(line: 1340, column: 43, scope: !7611)
!7631 = !DILocation(line: 1340, column: 54, scope: !7611)
!7632 = !DILocation(line: 1340, column: 63, scope: !7611)
!7633 = !DILocation(line: 1340, column: 80, scope: !7611)
!7634 = !DILocation(line: 1340, column: 17, scope: !7611)
!7635 = !DILocation(line: 1340, column: 105, scope: !7636)
!7636 = !DILexicalBlockFile(scope: !7611, file: !420, discriminator: 1)
!7637 = !DILocation(line: 1340, column: 90, scope: !7611)
!7638 = !DILocation(line: 1340, column: 114, scope: !7611)
!7639 = !DILocation(line: 1340, column: 142, scope: !7640)
!7640 = !DILexicalBlockFile(scope: !7611, file: !420, discriminator: 2)
!7641 = !DILocation(line: 1340, column: 127, scope: !7611)
!7642 = !DILocation(line: 1340, column: 151, scope: !7611)
!7643 = !DILocation(line: 1340, column: 14, scope: !7644)
!7644 = !DILexicalBlockFile(scope: !7645, file: !420, discriminator: 4)
!7645 = !DILexicalBlockFile(scope: !7611, file: !420, discriminator: 3)
!7646 = !DILocation(line: 1341, column: 13, scope: !7647)
!7647 = distinct !DILexicalBlock(scope: !7611, file: !420, line: 1341, column: 13)
!7648 = !DILocation(line: 1341, column: 18, scope: !7647)
!7649 = !DILocation(line: 1341, column: 13, scope: !7611)
!7650 = !DILocation(line: 1342, column: 29, scope: !7651)
!7651 = distinct !DILexicalBlock(scope: !7647, file: !420, line: 1341, column: 24)
!7652 = !DILocation(line: 1342, column: 13, scope: !7651)
!7653 = !DILocation(line: 1345, column: 13, scope: !7651)
!7654 = !DILocation(line: 1347, column: 13, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !7611, file: !420, line: 1347, column: 13)
!7656 = !DILocation(line: 1347, column: 19, scope: !7655)
!7657 = !DILocation(line: 1347, column: 24, scope: !7655)
!7658 = !DILocation(line: 1347, column: 29, scope: !7655)
!7659 = !DILocation(line: 1347, column: 34, scope: !7655)
!7660 = !DILocation(line: 1347, column: 37, scope: !7661)
!7661 = !DILexicalBlockFile(scope: !7655, file: !420, discriminator: 1)
!7662 = !DILocation(line: 1347, column: 42, scope: !7655)
!7663 = !DILocation(line: 1347, column: 13, scope: !7611)
!7664 = !DILocation(line: 1348, column: 29, scope: !7665)
!7665 = distinct !DILexicalBlock(scope: !7655, file: !420, line: 1347, column: 48)
!7666 = !DILocation(line: 1348, column: 13, scope: !7665)
!7667 = !DILocation(line: 1350, column: 13, scope: !7665)
!7668 = !DILocation(line: 1352, column: 5, scope: !7611)
!7669 = !DILocation(line: 1355, column: 34, scope: !1312)
!7670 = !DILocation(line: 1355, column: 40, scope: !1312)
!7671 = !DILocation(line: 1355, column: 47, scope: !1312)
!7672 = !DILocation(line: 1355, column: 53, scope: !1312)
!7673 = !DILocation(line: 1355, column: 59, scope: !1312)
!7674 = !DILocation(line: 1355, column: 63, scope: !1312)
!7675 = !DILocation(line: 1355, column: 59, scope: !7676)
!7676 = !DILexicalBlockFile(scope: !1312, file: !420, discriminator: 1)
!7677 = !DILocation(line: 1355, column: 78, scope: !7678)
!7678 = !DILexicalBlockFile(scope: !1312, file: !420, discriminator: 2)
!7679 = !DILocation(line: 1355, column: 73, scope: !1312)
!7680 = !DILocation(line: 1355, column: 9, scope: !7681)
!7681 = !DILexicalBlockFile(scope: !7682, file: !420, discriminator: 4)
!7682 = !DILexicalBlockFile(scope: !1312, file: !420, discriminator: 3)
!7683 = !DILocation(line: 1354, column: 10, scope: !1312)
!7684 = !DILocation(line: 1354, column: 8, scope: !1312)
!7685 = !DILocation(line: 1356, column: 9, scope: !7686)
!7686 = distinct !DILexicalBlock(scope: !1312, file: !420, line: 1356, column: 9)
!7687 = !DILocation(line: 1356, column: 12, scope: !7686)
!7688 = !DILocation(line: 1356, column: 9, scope: !1312)
!7689 = !DILocation(line: 1357, column: 9, scope: !7686)
!7690 = !DILocation(line: 1359, column: 20, scope: !7691)
!7691 = distinct !DILexicalBlock(scope: !1312, file: !420, line: 1359, column: 9)
!7692 = !DILocation(line: 1359, column: 24, scope: !7691)
!7693 = !DILocation(line: 1359, column: 9, scope: !7691)
!7694 = !DILocation(line: 1359, column: 32, scope: !7691)
!7695 = !DILocation(line: 1359, column: 9, scope: !1312)
!7696 = !DILocation(line: 1360, column: 9, scope: !7691)
!7697 = !DILocation(line: 1361, column: 9, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !1312, file: !420, line: 1361, column: 9)
!7699 = !DILocation(line: 1361, column: 15, scope: !7698)
!7700 = !DILocation(line: 1361, column: 29, scope: !7701)
!7701 = !DILexicalBlockFile(scope: !7698, file: !420, discriminator: 1)
!7702 = !DILocation(line: 1361, column: 33, scope: !7698)
!7703 = !DILocation(line: 1361, column: 45, scope: !7698)
!7704 = !DILocation(line: 1361, column: 40, scope: !7698)
!7705 = !DILocation(line: 1361, column: 18, scope: !7698)
!7706 = !DILocation(line: 1361, column: 51, scope: !7698)
!7707 = !DILocation(line: 1361, column: 9, scope: !1312)
!7708 = !DILocation(line: 1362, column: 9, scope: !7698)
!7709 = !DILocation(line: 1364, column: 24, scope: !1312)
!7710 = !DILocation(line: 1364, column: 12, scope: !1312)
!7711 = !DILocation(line: 1364, column: 5, scope: !1312)
!7712 = !DILocation(line: 1367, column: 5, scope: !1312)
!7713 = !DILocation(line: 1367, column: 10, scope: !7714)
!7714 = !DILexicalBlockFile(scope: !1324, file: !420, discriminator: 1)
!7715 = !DILocation(line: 1367, column: 20, scope: !1324)
!7716 = !DILocation(line: 1367, column: 50, scope: !1324)
!7717 = !DILocation(line: 1367, column: 37, scope: !1324)
!7718 = !DILocation(line: 1367, column: 63, scope: !7719)
!7719 = distinct !DILexicalBlock(scope: !1324, file: !420, line: 1367, column: 60)
!7720 = !DILocation(line: 1367, column: 80, scope: !7719)
!7721 = !DILocation(line: 1367, column: 60, scope: !7719)
!7722 = !DILocation(line: 1367, column: 90, scope: !7719)
!7723 = !DILocation(line: 1367, column: 60, scope: !1324)
!7724 = !DILocation(line: 1367, column: 60, scope: !7725)
!7725 = !DILexicalBlockFile(scope: !1324, file: !420, discriminator: 2)
!7726 = !DILocation(line: 1367, column: 121, scope: !7727)
!7727 = !DILexicalBlockFile(scope: !7719, file: !420, discriminator: 3)
!7728 = !DILocation(line: 1367, column: 139, scope: !7719)
!7729 = !DILocation(line: 1367, column: 149, scope: !7719)
!7730 = !DILocation(line: 1367, column: 174, scope: !7719)
!7731 = !DILocation(line: 1367, column: 105, scope: !7719)
!7732 = !DILocation(line: 1367, column: 193, scope: !7733)
!7733 = !DILexicalBlockFile(scope: !1312, file: !420, discriminator: 4)
!7734 = !DILocation(line: 1367, column: 193, scope: !1324)
!7735 = !DILocation(line: 1367, column: 193, scope: !7736)
!7736 = !DILexicalBlockFile(scope: !1324, file: !420, discriminator: 5)
!7737 = !DILocation(line: 1368, column: 5, scope: !1312)
!7738 = !DILocation(line: 1369, column: 1, scope: !1312)
!7739 = !DILocation(line: 1084, column: 24, scope: !1370)
!7740 = !DILocation(line: 1084, column: 40, scope: !1370)
!7741 = !DILocation(line: 1086, column: 33, scope: !7742)
!7742 = distinct !DILexicalBlock(scope: !1370, file: !420, line: 1086, column: 9)
!7743 = !DILocation(line: 1086, column: 11, scope: !7742)
!7744 = !DILocation(line: 1086, column: 40, scope: !7742)
!7745 = !DILocation(line: 1086, column: 45, scope: !7742)
!7746 = !DILocation(line: 1086, column: 52, scope: !7742)
!7747 = !DILocation(line: 1086, column: 78, scope: !7748)
!7748 = !DILexicalBlockFile(scope: !7742, file: !420, discriminator: 2)
!7749 = !DILocation(line: 1086, column: 56, scope: !7742)
!7750 = !DILocation(line: 1086, column: 85, scope: !7742)
!7751 = !DILocation(line: 1086, column: 91, scope: !7742)
!7752 = !DILocation(line: 1086, column: 96, scope: !7742)
!7753 = !DILocation(line: 1086, column: 9, scope: !1370)
!7754 = !DILocation(line: 1086, column: 123, scope: !7755)
!7755 = !DILexicalBlockFile(scope: !7756, file: !420, discriminator: 3)
!7756 = !DILexicalBlockFile(scope: !7757, file: !420, discriminator: 1)
!7757 = distinct !DILexicalBlock(scope: !7742, file: !420, line: 1086, column: 105)
!7758 = !DILocation(line: 1086, column: 107, scope: !7757)
!7759 = !DILocation(line: 1086, column: 195, scope: !7757)
!7760 = !DILocation(line: 1087, column: 21, scope: !1370)
!7761 = !DILocation(line: 1087, column: 29, scope: !1370)
!7762 = !DILocation(line: 1087, column: 38, scope: !1370)
!7763 = !DILocation(line: 1088, column: 12, scope: !1370)
!7764 = !DILocation(line: 1088, column: 5, scope: !1370)
!7765 = !DILocation(line: 1089, column: 1, scope: !1370)
!7766 = !DILocation(line: 1092, column: 23, scope: !1374)
!7767 = !DILocation(line: 1092, column: 39, scope: !1374)
!7768 = !DILocation(line: 1094, column: 49, scope: !1374)
!7769 = !DILocation(line: 1094, column: 27, scope: !1374)
!7770 = !DILocation(line: 1094, column: 12, scope: !1374)
!7771 = !DILocation(line: 1094, column: 5, scope: !1374)
!7772 = !DILocation(line: 2003, column: 25, scope: !1271)
!7773 = !DILocation(line: 2003, column: 48, scope: !1271)
!7774 = !DILocation(line: 2004, column: 31, scope: !1271)
!7775 = !DILocation(line: 2004, column: 58, scope: !1271)
!7776 = !DILocation(line: 2005, column: 25, scope: !1271)
!7777 = !DILocation(line: 2007, column: 5, scope: !1271)
!7778 = !DILocation(line: 2007, column: 15, scope: !1271)
!7779 = !DILocation(line: 2007, column: 21, scope: !1271)
!7780 = !DILocation(line: 2008, column: 5, scope: !1271)
!7781 = !DILocation(line: 2008, column: 16, scope: !1271)
!7782 = !DILocation(line: 2010, column: 22, scope: !1271)
!7783 = !DILocation(line: 2010, column: 11, scope: !1271)
!7784 = !DILocation(line: 2010, column: 9, scope: !1271)
!7785 = !DILocation(line: 2011, column: 9, scope: !7786)
!7786 = distinct !DILexicalBlock(scope: !1271, file: !420, line: 2011, column: 9)
!7787 = !DILocation(line: 2011, column: 13, scope: !7786)
!7788 = !DILocation(line: 2011, column: 9, scope: !1271)
!7789 = !DILocation(line: 2012, column: 9, scope: !7786)
!7790 = !DILocation(line: 2014, column: 12, scope: !1286)
!7791 = !DILocation(line: 2014, column: 10, scope: !1286)
!7792 = !DILocation(line: 2014, column: 17, scope: !7793)
!7793 = !DILexicalBlockFile(scope: !7794, file: !420, discriminator: 2)
!7794 = !DILexicalBlockFile(scope: !1285, file: !420, discriminator: 1)
!7795 = !DILocation(line: 2014, column: 21, scope: !1285)
!7796 = !DILocation(line: 2014, column: 19, scope: !1285)
!7797 = !DILocation(line: 2014, column: 5, scope: !1286)
!7798 = !DILocation(line: 2015, column: 9, scope: !1284)
!7799 = !DILocation(line: 2015, column: 21, scope: !1284)
!7800 = !DILocation(line: 2015, column: 30, scope: !1284)
!7801 = !DILocation(line: 2015, column: 41, scope: !1284)
!7802 = !DILocation(line: 2015, column: 44, scope: !7803)
!7803 = !DILexicalBlockFile(scope: !1284, file: !420, discriminator: 1)
!7804 = !DILocation(line: 2015, column: 58, scope: !1284)
!7805 = !DILocation(line: 2015, column: 29, scope: !1284)
!7806 = !DILocation(line: 2015, column: 76, scope: !7807)
!7807 = !DILexicalBlockFile(scope: !1284, file: !420, discriminator: 3)
!7808 = !DILocation(line: 2015, column: 68, scope: !1284)
!7809 = !DILocation(line: 2015, column: 66, scope: !1284)
!7810 = !DILocation(line: 2015, column: 83, scope: !1284)
!7811 = !DILocation(line: 2015, column: 81, scope: !1284)
!7812 = !DILocation(line: 2015, column: 99, scope: !7813)
!7813 = !DILexicalBlockFile(scope: !7814, file: !420, discriminator: 4)
!7814 = !DILexicalBlockFile(scope: !1284, file: !420, discriminator: 2)
!7815 = !DILocation(line: 2015, column: 21, scope: !7816)
!7816 = !DILexicalBlockFile(scope: !7817, file: !420, discriminator: 6)
!7817 = !DILexicalBlockFile(scope: !1284, file: !420, discriminator: 5)
!7818 = !DILocation(line: 2016, column: 30, scope: !1284)
!7819 = !DILocation(line: 2016, column: 36, scope: !1284)
!7820 = !DILocation(line: 2016, column: 16, scope: !1284)
!7821 = !DILocation(line: 2016, column: 14, scope: !1284)
!7822 = !DILocation(line: 2017, column: 13, scope: !1290)
!7823 = !DILocation(line: 2017, column: 18, scope: !1290)
!7824 = !DILocation(line: 2017, column: 13, scope: !1284)
!7825 = !DILocation(line: 2018, column: 13, scope: !1289)
!7826 = !DILocation(line: 2018, column: 18, scope: !7827)
!7827 = !DILexicalBlockFile(scope: !1288, file: !420, discriminator: 1)
!7828 = !DILocation(line: 2018, column: 28, scope: !1288)
!7829 = !DILocation(line: 2018, column: 58, scope: !1288)
!7830 = !DILocation(line: 2018, column: 72, scope: !7831)
!7831 = distinct !DILexicalBlock(scope: !1288, file: !420, line: 2018, column: 69)
!7832 = !DILocation(line: 2018, column: 89, scope: !7831)
!7833 = !DILocation(line: 2018, column: 69, scope: !7831)
!7834 = !DILocation(line: 2018, column: 99, scope: !7831)
!7835 = !DILocation(line: 2018, column: 69, scope: !1288)
!7836 = !DILocation(line: 2018, column: 69, scope: !7837)
!7837 = !DILexicalBlockFile(scope: !1288, file: !420, discriminator: 2)
!7838 = !DILocation(line: 2018, column: 130, scope: !7839)
!7839 = !DILexicalBlockFile(scope: !7831, file: !420, discriminator: 3)
!7840 = !DILocation(line: 2018, column: 148, scope: !7831)
!7841 = !DILocation(line: 2018, column: 158, scope: !7831)
!7842 = !DILocation(line: 2018, column: 183, scope: !7831)
!7843 = !DILocation(line: 2018, column: 114, scope: !7831)
!7844 = !DILocation(line: 2018, column: 202, scope: !7845)
!7845 = !DILexicalBlockFile(scope: !1289, file: !420, discriminator: 4)
!7846 = !DILocation(line: 2018, column: 202, scope: !1288)
!7847 = !DILocation(line: 2018, column: 202, scope: !7848)
!7848 = !DILexicalBlockFile(scope: !1288, file: !420, discriminator: 5)
!7849 = !DILocation(line: 2019, column: 13, scope: !1289)
!7850 = !DILocation(line: 2021, column: 49, scope: !1284)
!7851 = !DILocation(line: 2021, column: 43, scope: !1284)
!7852 = !DILocation(line: 2021, column: 28, scope: !1284)
!7853 = !DILocation(line: 2021, column: 11, scope: !1284)
!7854 = !DILocation(line: 2021, column: 35, scope: !1284)
!7855 = !{!7856, !1535, i64 24}
!7856 = !{!"", !1654, i64 0, !1535, i64 24, !1548, i64 32}
!7857 = !DILocation(line: 2021, column: 10, scope: !1284)
!7858 = !DILocation(line: 2021, column: 46, scope: !1284)
!7859 = !DILocation(line: 2022, column: 5, scope: !1285)
!7860 = !DILocation(line: 2022, column: 5, scope: !7794)
!7861 = !DILocation(line: 2022, column: 5, scope: !1284)
!7862 = !DILocation(line: 2014, column: 36, scope: !1285)
!7863 = !DILocation(line: 2014, column: 34, scope: !1285)
!7864 = !DILocation(line: 2014, column: 49, scope: !1285)
!7865 = !DILocation(line: 2014, column: 5, scope: !1285)
!7866 = !DILocation(line: 2024, column: 12, scope: !1271)
!7867 = !DILocation(line: 2024, column: 5, scope: !1271)
!7868 = !DILocation(line: 2025, column: 1, scope: !1271)
!7869 = !DILocation(line: 2030, column: 24, scope: !1291)
!7870 = !DILocation(line: 2030, column: 40, scope: !1291)
!7871 = !DILocation(line: 2030, column: 64, scope: !1291)
!7872 = !DILocation(line: 2031, column: 30, scope: !1291)
!7873 = !DILocation(line: 2031, column: 57, scope: !1291)
!7874 = !DILocation(line: 2032, column: 24, scope: !1291)
!7875 = !DILocation(line: 2034, column: 5, scope: !1291)
!7876 = !DILocation(line: 2034, column: 15, scope: !1291)
!7877 = !DILocation(line: 2034, column: 21, scope: !1291)
!7878 = !DILocation(line: 2035, column: 5, scope: !1291)
!7879 = !DILocation(line: 2035, column: 16, scope: !1291)
!7880 = !DILocation(line: 2041, column: 9, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !1291, file: !420, line: 2041, column: 9)
!7882 = !DILocation(line: 2041, column: 14, scope: !7881)
!7883 = !DILocation(line: 2041, column: 9, scope: !1291)
!7884 = !DILocation(line: 2042, column: 28, scope: !7881)
!7885 = !DILocation(line: 2042, column: 33, scope: !7881)
!7886 = !DILocation(line: 2042, column: 40, scope: !7881)
!7887 = !DILocation(line: 2042, column: 49, scope: !7881)
!7888 = !DILocation(line: 2042, column: 61, scope: !7881)
!7889 = !DILocation(line: 2042, column: 16, scope: !7881)
!7890 = !DILocation(line: 2042, column: 9, scope: !7881)
!7891 = !DILocation(line: 2044, column: 22, scope: !1291)
!7892 = !DILocation(line: 2044, column: 11, scope: !1291)
!7893 = !DILocation(line: 2044, column: 9, scope: !1291)
!7894 = !DILocation(line: 2045, column: 9, scope: !7895)
!7895 = distinct !DILexicalBlock(scope: !1291, file: !420, line: 2045, column: 9)
!7896 = !DILocation(line: 2045, column: 13, scope: !7895)
!7897 = !DILocation(line: 2045, column: 9, scope: !1291)
!7898 = !DILocation(line: 2046, column: 9, scope: !7895)
!7899 = !DILocation(line: 2048, column: 12, scope: !1307)
!7900 = !DILocation(line: 2048, column: 10, scope: !1307)
!7901 = !DILocation(line: 2048, column: 17, scope: !7902)
!7902 = !DILexicalBlockFile(scope: !7903, file: !420, discriminator: 2)
!7903 = !DILexicalBlockFile(scope: !1306, file: !420, discriminator: 1)
!7904 = !DILocation(line: 2048, column: 21, scope: !1306)
!7905 = !DILocation(line: 2048, column: 19, scope: !1306)
!7906 = !DILocation(line: 2048, column: 5, scope: !1307)
!7907 = !DILocation(line: 2049, column: 9, scope: !1305)
!7908 = !DILocation(line: 2049, column: 21, scope: !1305)
!7909 = !DILocation(line: 2049, column: 30, scope: !1305)
!7910 = !DILocation(line: 2049, column: 41, scope: !1305)
!7911 = !DILocation(line: 2049, column: 44, scope: !7912)
!7912 = !DILexicalBlockFile(scope: !1305, file: !420, discriminator: 1)
!7913 = !DILocation(line: 2049, column: 58, scope: !1305)
!7914 = !DILocation(line: 2049, column: 29, scope: !1305)
!7915 = !DILocation(line: 2049, column: 76, scope: !7916)
!7916 = !DILexicalBlockFile(scope: !1305, file: !420, discriminator: 3)
!7917 = !DILocation(line: 2049, column: 68, scope: !1305)
!7918 = !DILocation(line: 2049, column: 66, scope: !1305)
!7919 = !DILocation(line: 2049, column: 83, scope: !1305)
!7920 = !DILocation(line: 2049, column: 81, scope: !1305)
!7921 = !DILocation(line: 2049, column: 99, scope: !7922)
!7922 = !DILexicalBlockFile(scope: !7923, file: !420, discriminator: 4)
!7923 = !DILexicalBlockFile(scope: !1305, file: !420, discriminator: 2)
!7924 = !DILocation(line: 2049, column: 21, scope: !7925)
!7925 = !DILexicalBlockFile(scope: !7926, file: !420, discriminator: 6)
!7926 = !DILexicalBlockFile(scope: !1305, file: !420, discriminator: 5)
!7927 = !DILocation(line: 2050, column: 27, scope: !1305)
!7928 = !DILocation(line: 2050, column: 33, scope: !1305)
!7929 = !DILocation(line: 2050, column: 37, scope: !1305)
!7930 = !DILocation(line: 2050, column: 41, scope: !1305)
!7931 = !DILocation(line: 2050, column: 46, scope: !1305)
!7932 = !DILocation(line: 2051, column: 27, scope: !1305)
!7933 = !DILocation(line: 2051, column: 34, scope: !1305)
!7934 = !DILocation(line: 2051, column: 38, scope: !1305)
!7935 = !DILocation(line: 2051, column: 51, scope: !7912)
!7936 = !DILocation(line: 2051, column: 61, scope: !1305)
!7937 = !DILocation(line: 2051, column: 38, scope: !7923)
!7938 = !DILocation(line: 2052, column: 27, scope: !1305)
!7939 = !DILocation(line: 2050, column: 16, scope: !1305)
!7940 = !DILocation(line: 2050, column: 14, scope: !1305)
!7941 = !DILocation(line: 2053, column: 13, scope: !1311)
!7942 = !DILocation(line: 2053, column: 18, scope: !1311)
!7943 = !DILocation(line: 2053, column: 13, scope: !1305)
!7944 = !DILocation(line: 2054, column: 13, scope: !1310)
!7945 = !DILocation(line: 2054, column: 18, scope: !7946)
!7946 = !DILexicalBlockFile(scope: !1309, file: !420, discriminator: 1)
!7947 = !DILocation(line: 2054, column: 28, scope: !1309)
!7948 = !DILocation(line: 2054, column: 58, scope: !1309)
!7949 = !DILocation(line: 2054, column: 72, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !1309, file: !420, line: 2054, column: 69)
!7951 = !DILocation(line: 2054, column: 89, scope: !7950)
!7952 = !DILocation(line: 2054, column: 69, scope: !7950)
!7953 = !DILocation(line: 2054, column: 99, scope: !7950)
!7954 = !DILocation(line: 2054, column: 69, scope: !1309)
!7955 = !DILocation(line: 2054, column: 69, scope: !7956)
!7956 = !DILexicalBlockFile(scope: !1309, file: !420, discriminator: 2)
!7957 = !DILocation(line: 2054, column: 130, scope: !7958)
!7958 = !DILexicalBlockFile(scope: !7950, file: !420, discriminator: 3)
!7959 = !DILocation(line: 2054, column: 148, scope: !7950)
!7960 = !DILocation(line: 2054, column: 158, scope: !7950)
!7961 = !DILocation(line: 2054, column: 183, scope: !7950)
!7962 = !DILocation(line: 2054, column: 114, scope: !7950)
!7963 = !DILocation(line: 2054, column: 202, scope: !7964)
!7964 = !DILexicalBlockFile(scope: !1310, file: !420, discriminator: 4)
!7965 = !DILocation(line: 2054, column: 202, scope: !1309)
!7966 = !DILocation(line: 2054, column: 202, scope: !7967)
!7967 = !DILexicalBlockFile(scope: !1309, file: !420, discriminator: 5)
!7968 = !DILocation(line: 2055, column: 13, scope: !1310)
!7969 = !DILocation(line: 2057, column: 49, scope: !1305)
!7970 = !DILocation(line: 2057, column: 43, scope: !1305)
!7971 = !DILocation(line: 2057, column: 28, scope: !1305)
!7972 = !DILocation(line: 2057, column: 11, scope: !1305)
!7973 = !DILocation(line: 2057, column: 35, scope: !1305)
!7974 = !DILocation(line: 2057, column: 10, scope: !1305)
!7975 = !DILocation(line: 2057, column: 46, scope: !1305)
!7976 = !DILocation(line: 2058, column: 5, scope: !1306)
!7977 = !DILocation(line: 2058, column: 5, scope: !7903)
!7978 = !DILocation(line: 2058, column: 5, scope: !1305)
!7979 = !DILocation(line: 2048, column: 36, scope: !1306)
!7980 = !DILocation(line: 2048, column: 34, scope: !1306)
!7981 = !DILocation(line: 2048, column: 49, scope: !1306)
!7982 = !DILocation(line: 2048, column: 5, scope: !1306)
!7983 = !DILocation(line: 2060, column: 12, scope: !1291)
!7984 = !DILocation(line: 2060, column: 5, scope: !1291)
!7985 = !DILocation(line: 2061, column: 1, scope: !1291)
!7986 = !DILocation(line: 1284, column: 35, scope: !1325)
!7987 = !DILocation(line: 1286, column: 5, scope: !1325)
!7988 = !DILocation(line: 1286, column: 16, scope: !1325)
!7989 = !DILocation(line: 1286, column: 24, scope: !1325)
!7990 = !DILocation(line: 1286, column: 28, scope: !1325)
!7991 = !DILocation(line: 1287, column: 5, scope: !1325)
!7992 = !DILocation(line: 1287, column: 16, scope: !1325)
!7993 = !DILocation(line: 1289, column: 12, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !1325, file: !420, line: 1289, column: 5)
!7995 = !DILocation(line: 1289, column: 10, scope: !7994)
!7996 = !DILocation(line: 1289, column: 17, scope: !7997)
!7997 = !DILexicalBlockFile(scope: !7998, file: !420, discriminator: 2)
!7998 = !DILexicalBlockFile(scope: !7999, file: !420, discriminator: 1)
!7999 = distinct !DILexicalBlock(scope: !7994, file: !420, line: 1289, column: 5)
!8000 = !DILocation(line: 1289, column: 21, scope: !7999)
!8001 = !DILocation(line: 1289, column: 27, scope: !7999)
!8002 = !DILocation(line: 1289, column: 19, scope: !7999)
!8003 = !DILocation(line: 1289, column: 5, scope: !7994)
!8004 = !DILocation(line: 1290, column: 25, scope: !8005)
!8005 = distinct !DILexicalBlock(scope: !7999, file: !420, line: 1290, column: 13)
!8006 = !DILocation(line: 1290, column: 13, scope: !8005)
!8007 = !DILocation(line: 1290, column: 19, scope: !8005)
!8008 = !DILocation(line: 1290, column: 28, scope: !8005)
!8009 = !DILocation(line: 1290, column: 13, scope: !7999)
!8010 = !DILocation(line: 1291, column: 13, scope: !8005)
!8011 = !DILocation(line: 1290, column: 31, scope: !8012)
!8012 = !DILexicalBlockFile(scope: !8005, file: !420, discriminator: 1)
!8013 = !DILocation(line: 1289, column: 34, scope: !7999)
!8014 = !DILocation(line: 1289, column: 5, scope: !7999)
!8015 = !DILocation(line: 1293, column: 5, scope: !1325)
!8016 = !DILocation(line: 1294, column: 1, scope: !1325)
!8017 = !DILocation(line: 1143, column: 32, scope: !1330)
!8018 = !DILocation(line: 1143, column: 46, scope: !1330)
!8019 = !DILocation(line: 1145, column: 5, scope: !1330)
!8020 = !DILocation(line: 1145, column: 16, scope: !1330)
!8021 = !DILocation(line: 1145, column: 24, scope: !1330)
!8022 = !DILocation(line: 1145, column: 28, scope: !1330)
!8023 = !DILocation(line: 1146, column: 5, scope: !1330)
!8024 = !DILocation(line: 1146, column: 15, scope: !1330)
!8025 = !DILocation(line: 1147, column: 5, scope: !1330)
!8026 = !DILocation(line: 1147, column: 10, scope: !1330)
!8027 = !DILocation(line: 1147, column: 19, scope: !1330)
!8028 = !DILocation(line: 1148, column: 5, scope: !1330)
!8029 = !DILocation(line: 1148, column: 16, scope: !1330)
!8030 = !DILocation(line: 1149, column: 5, scope: !1330)
!8031 = !DILocation(line: 1149, column: 9, scope: !1330)
!8032 = !DILocation(line: 1157, column: 38, scope: !8033)
!8033 = distinct !DILexicalBlock(scope: !1330, file: !420, line: 1157, column: 9)
!8034 = !DILocation(line: 1157, column: 44, scope: !8033)
!8035 = !DILocation(line: 1157, column: 9, scope: !8033)
!8036 = !DILocation(line: 1157, column: 52, scope: !8033)
!8037 = !DILocation(line: 1157, column: 9, scope: !1330)
!8038 = !DILocation(line: 1158, column: 25, scope: !8039)
!8039 = distinct !DILexicalBlock(scope: !8033, file: !420, line: 1157, column: 57)
!8040 = !DILocation(line: 1158, column: 9, scope: !8039)
!8041 = !DILocation(line: 1161, column: 16, scope: !8039)
!8042 = !DILocation(line: 1161, column: 9, scope: !8039)
!8043 = !DILocation(line: 1164, column: 40, scope: !1330)
!8044 = !DILocation(line: 1164, column: 16, scope: !1330)
!8045 = !DILocation(line: 1164, column: 14, scope: !1330)
!8046 = !DILocation(line: 1165, column: 9, scope: !8047)
!8047 = distinct !DILexicalBlock(scope: !1330, file: !420, line: 1165, column: 9)
!8048 = !DILocation(line: 1165, column: 18, scope: !8047)
!8049 = !DILocation(line: 1165, column: 9, scope: !1330)
!8050 = !DILocation(line: 1166, column: 16, scope: !8047)
!8051 = !DILocation(line: 1166, column: 9, scope: !8047)
!8052 = !DILocation(line: 1168, column: 81, scope: !1330)
!8053 = !DILocation(line: 1168, column: 63, scope: !1330)
!8054 = !DILocation(line: 1168, column: 93, scope: !1330)
!8055 = !DILocation(line: 1168, column: 61, scope: !1330)
!8056 = !DILocation(line: 1168, column: 16, scope: !1330)
!8057 = !DILocation(line: 1168, column: 14, scope: !1330)
!8058 = !DILocation(line: 1169, column: 9, scope: !8059)
!8059 = distinct !DILexicalBlock(scope: !1330, file: !420, line: 1169, column: 9)
!8060 = !DILocation(line: 1169, column: 18, scope: !8059)
!8061 = !DILocation(line: 1169, column: 9, scope: !1330)
!8062 = !DILocation(line: 1170, column: 25, scope: !8063)
!8063 = distinct !DILexicalBlock(scope: !8059, file: !420, line: 1169, column: 23)
!8064 = !DILocation(line: 1170, column: 9, scope: !8063)
!8065 = !DILocation(line: 1173, column: 9, scope: !8063)
!8066 = !DILocation(line: 1176, column: 11, scope: !8067)
!8067 = distinct !DILexicalBlock(scope: !1330, file: !420, line: 1176, column: 9)
!8068 = !DILocation(line: 1176, column: 19, scope: !8067)
!8069 = !DILocation(line: 1176, column: 26, scope: !8067)
!8070 = !DILocation(line: 1176, column: 29, scope: !8071)
!8071 = !DILexicalBlockFile(scope: !8067, file: !420, discriminator: 1)
!8072 = !DILocation(line: 1176, column: 37, scope: !8067)
!8073 = !DILocation(line: 1176, column: 44, scope: !8067)
!8074 = !DILocation(line: 1176, column: 47, scope: !8075)
!8075 = !DILexicalBlockFile(scope: !8067, file: !420, discriminator: 2)
!8076 = !DILocation(line: 1176, column: 55, scope: !8067)
!8077 = !DILocation(line: 1176, column: 63, scope: !8067)
!8078 = !DILocation(line: 1176, column: 68, scope: !8079)
!8079 = !DILexicalBlockFile(scope: !8067, file: !420, discriminator: 3)
!8080 = !DILocation(line: 1176, column: 77, scope: !8067)
!8081 = !DILocation(line: 1176, column: 84, scope: !8067)
!8082 = !DILocation(line: 1176, column: 87, scope: !8083)
!8083 = !DILexicalBlockFile(scope: !8067, file: !420, discriminator: 4)
!8084 = !DILocation(line: 1176, column: 96, scope: !8067)
!8085 = !DILocation(line: 1176, column: 103, scope: !8067)
!8086 = !DILocation(line: 1176, column: 106, scope: !8087)
!8087 = !DILexicalBlockFile(scope: !8067, file: !420, discriminator: 5)
!8088 = !DILocation(line: 1176, column: 115, scope: !8067)
!8089 = !DILocation(line: 1176, column: 9, scope: !1330)
!8090 = !DILocation(line: 1177, column: 25, scope: !8091)
!8091 = distinct !DILexicalBlock(scope: !8067, file: !420, line: 1176, column: 124)
!8092 = !DILocation(line: 1177, column: 9, scope: !8091)
!8093 = !DILocation(line: 1179, column: 9, scope: !8091)
!8094 = !DILocation(line: 1181, column: 9, scope: !8095)
!8095 = distinct !DILexicalBlock(scope: !1330, file: !420, line: 1181, column: 9)
!8096 = !DILocation(line: 1181, column: 15, scope: !8095)
!8097 = !DILocation(line: 1181, column: 21, scope: !8095)
!8098 = !DILocation(line: 1181, column: 19, scope: !8095)
!8099 = !DILocation(line: 1181, column: 9, scope: !1330)
!8100 = !DILocation(line: 1182, column: 25, scope: !8101)
!8101 = distinct !DILexicalBlock(scope: !8095, file: !420, line: 1181, column: 31)
!8102 = !DILocation(line: 1182, column: 9, scope: !8101)
!8103 = !DILocation(line: 1184, column: 9, scope: !8101)
!8104 = !DILocation(line: 1187, column: 24, scope: !1330)
!8105 = !DILocation(line: 1187, column: 28, scope: !1330)
!8106 = !DILocation(line: 1187, column: 71, scope: !1330)
!8107 = !DILocation(line: 1187, column: 53, scope: !1330)
!8108 = !DILocation(line: 1187, column: 83, scope: !1330)
!8109 = !DILocation(line: 1187, column: 51, scope: !1330)
!8110 = !DILocation(line: 1187, column: 5, scope: !1330)
!8111 = !DILocation(line: 1189, column: 5, scope: !1330)
!8112 = !DILocation(line: 1189, column: 9, scope: !1330)
!8113 = !DILocation(line: 1189, column: 22, scope: !1330)
!8114 = !DILocation(line: 1190, column: 20, scope: !1330)
!8115 = !DILocation(line: 1190, column: 24, scope: !1330)
!8116 = !DILocation(line: 1190, column: 5, scope: !1330)
!8117 = !DILocation(line: 1190, column: 11, scope: !1330)
!8118 = !DILocation(line: 1190, column: 18, scope: !1330)
!8119 = !DILocation(line: 1191, column: 22, scope: !1330)
!8120 = !DILocation(line: 1191, column: 5, scope: !1330)
!8121 = !DILocation(line: 1191, column: 11, scope: !1330)
!8122 = !DILocation(line: 1191, column: 20, scope: !1330)
!8123 = !DILocation(line: 1193, column: 5, scope: !1330)
!8124 = !DILocation(line: 1193, column: 11, scope: !1330)
!8125 = !DILocation(line: 1193, column: 16, scope: !1330)
!8126 = !DILocation(line: 1194, column: 22, scope: !1330)
!8127 = !DILocation(line: 1194, column: 28, scope: !1330)
!8128 = !DILocation(line: 1194, column: 34, scope: !1330)
!8129 = !DILocation(line: 1194, column: 40, scope: !1330)
!8130 = !DILocation(line: 1194, column: 32, scope: !1330)
!8131 = !DILocation(line: 1194, column: 5, scope: !1330)
!8132 = !DILocation(line: 1194, column: 11, scope: !1330)
!8133 = !DILocation(line: 1194, column: 20, scope: !1330)
!8134 = !DILocation(line: 1195, column: 24, scope: !1330)
!8135 = !DILocation(line: 1195, column: 30, scope: !1330)
!8136 = !DILocation(line: 1195, column: 5, scope: !1330)
!8137 = !DILocation(line: 1195, column: 11, scope: !1330)
!8138 = !DILocation(line: 1195, column: 22, scope: !1330)
!8139 = !DILocation(line: 1196, column: 5, scope: !1330)
!8140 = !DILocation(line: 1196, column: 11, scope: !1330)
!8141 = !DILocation(line: 1196, column: 22, scope: !1330)
!8142 = !DILocation(line: 1198, column: 16, scope: !1330)
!8143 = !DILocation(line: 1198, column: 5, scope: !1330)
!8144 = !DILocation(line: 1200, column: 9, scope: !1330)
!8145 = !DILocation(line: 1200, column: 5, scope: !1330)
!8146 = !DILocation(line: 1203, column: 5, scope: !1330)
!8147 = !DILocation(line: 1203, column: 10, scope: !8148)
!8148 = !DILexicalBlockFile(scope: !1343, file: !420, discriminator: 1)
!8149 = !DILocation(line: 1203, column: 20, scope: !1343)
!8150 = !DILocation(line: 1203, column: 50, scope: !1343)
!8151 = !DILocation(line: 1203, column: 69, scope: !8152)
!8152 = distinct !DILexicalBlock(scope: !1343, file: !420, line: 1203, column: 66)
!8153 = !DILocation(line: 1203, column: 86, scope: !8152)
!8154 = !DILocation(line: 1203, column: 66, scope: !8152)
!8155 = !DILocation(line: 1203, column: 96, scope: !8152)
!8156 = !DILocation(line: 1203, column: 66, scope: !1343)
!8157 = !DILocation(line: 1203, column: 66, scope: !8158)
!8158 = !DILexicalBlockFile(scope: !1343, file: !420, discriminator: 2)
!8159 = !DILocation(line: 1203, column: 127, scope: !8160)
!8160 = !DILexicalBlockFile(scope: !8152, file: !420, discriminator: 3)
!8161 = !DILocation(line: 1203, column: 145, scope: !8152)
!8162 = !DILocation(line: 1203, column: 155, scope: !8152)
!8163 = !DILocation(line: 1203, column: 180, scope: !8152)
!8164 = !DILocation(line: 1203, column: 111, scope: !8152)
!8165 = !DILocation(line: 1203, column: 199, scope: !8166)
!8166 = !DILexicalBlockFile(scope: !1330, file: !420, discriminator: 4)
!8167 = !DILocation(line: 1203, column: 199, scope: !1343)
!8168 = !DILocation(line: 1203, column: 199, scope: !8169)
!8169 = !DILexicalBlockFile(scope: !1343, file: !420, discriminator: 5)
!8170 = !DILocation(line: 1204, column: 12, scope: !1330)
!8171 = !DILocation(line: 1204, column: 5, scope: !1330)
!8172 = !DILocation(line: 1205, column: 1, scope: !1330)
!8173 = !DILocation(line: 1248, column: 32, scope: !1344)
!8174 = !DILocation(line: 1248, column: 52, scope: !1344)
!8175 = !DILocation(line: 1248, column: 63, scope: !1344)
!8176 = !DILocation(line: 1250, column: 5, scope: !1344)
!8177 = !DILocation(line: 1250, column: 16, scope: !1344)
!8178 = !DILocation(line: 1250, column: 24, scope: !1344)
!8179 = !DILocation(line: 1250, column: 28, scope: !1344)
!8180 = !DILocation(line: 1251, column: 5, scope: !1344)
!8181 = !DILocation(line: 1251, column: 16, scope: !1344)
!8182 = !DILocation(line: 1259, column: 18, scope: !1344)
!8183 = !DILocation(line: 1259, column: 5, scope: !1344)
!8184 = !DILocation(line: 1259, column: 11, scope: !1344)
!8185 = !DILocation(line: 1259, column: 16, scope: !1344)
!8186 = !DILocation(line: 1260, column: 9, scope: !8187)
!8187 = distinct !DILexicalBlock(scope: !1344, file: !420, line: 1260, column: 9)
!8188 = !DILocation(line: 1260, column: 15, scope: !8187)
!8189 = !DILocation(line: 1260, column: 20, scope: !8187)
!8190 = !DILocation(line: 1260, column: 9, scope: !1344)
!8191 = !DILocation(line: 1261, column: 9, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !8187, file: !420, line: 1260, column: 26)
!8193 = !DILocation(line: 1261, column: 15, scope: !8192)
!8194 = !DILocation(line: 1261, column: 21, scope: !8192)
!8195 = !DILocation(line: 1262, column: 9, scope: !8192)
!8196 = !DILocation(line: 1262, column: 15, scope: !8192)
!8197 = !DILocation(line: 1262, column: 23, scope: !8192)
!8198 = !DILocation(line: 1263, column: 15, scope: !8192)
!8199 = !DILocation(line: 1263, column: 21, scope: !8192)
!8200 = !DILocation(line: 1263, column: 13, scope: !8192)
!8201 = !DILocation(line: 1264, column: 5, scope: !8192)
!8202 = !DILocation(line: 1266, column: 26, scope: !8203)
!8203 = distinct !DILexicalBlock(scope: !8187, file: !420, line: 1265, column: 10)
!8204 = !DILocation(line: 1266, column: 32, scope: !8203)
!8205 = !DILocation(line: 1266, column: 39, scope: !8203)
!8206 = !DILocation(line: 1266, column: 46, scope: !8203)
!8207 = !DILocation(line: 1266, column: 52, scope: !8203)
!8208 = !DILocation(line: 1266, column: 58, scope: !8203)
!8209 = !DILocation(line: 1266, column: 15, scope: !8203)
!8210 = !DILocation(line: 1266, column: 13, scope: !8203)
!8211 = !DILocation(line: 1267, column: 13, scope: !8212)
!8212 = distinct !DILexicalBlock(scope: !8203, file: !420, line: 1267, column: 13)
!8213 = !DILocation(line: 1267, column: 17, scope: !8212)
!8214 = !DILocation(line: 1267, column: 13, scope: !8203)
!8215 = !DILocation(line: 1268, column: 13, scope: !8212)
!8216 = !DILocation(line: 1269, column: 33, scope: !8203)
!8217 = !DILocation(line: 1269, column: 9, scope: !8203)
!8218 = !DILocation(line: 1272, column: 9, scope: !8219)
!8219 = distinct !DILexicalBlock(scope: !1344, file: !420, line: 1272, column: 9)
!8220 = !DILocation(line: 1272, column: 15, scope: !8219)
!8221 = !DILocation(line: 1272, column: 22, scope: !8219)
!8222 = !DILocation(line: 1272, column: 19, scope: !8219)
!8223 = !DILocation(line: 1272, column: 9, scope: !1344)
!8224 = !DILocation(line: 1273, column: 25, scope: !8225)
!8225 = distinct !DILexicalBlock(scope: !8219, file: !420, line: 1272, column: 27)
!8226 = !DILocation(line: 1273, column: 9, scope: !8225)
!8227 = !DILocation(line: 1275, column: 9, scope: !8225)
!8228 = !DILocation(line: 1278, column: 16, scope: !1344)
!8229 = !DILocation(line: 1278, column: 5, scope: !1344)
!8230 = !DILocation(line: 1280, column: 5, scope: !1344)
!8231 = !DILocation(line: 1281, column: 1, scope: !1344)
!8232 = !DILocation(line: 1209, column: 24, scope: !1355)
!8233 = !DILocation(line: 1209, column: 47, scope: !1355)
!8234 = !DILocation(line: 1209, column: 63, scope: !1355)
!8235 = !DILocation(line: 1210, column: 23, scope: !1355)
!8236 = !DILocation(line: 1212, column: 5, scope: !1355)
!8237 = !DILocation(line: 1212, column: 16, scope: !1355)
!8238 = !DILocation(line: 1212, column: 19, scope: !1355)
!8239 = !DILocation(line: 1213, column: 5, scope: !1355)
!8240 = !DILocation(line: 1213, column: 16, scope: !1355)
!8241 = !DILocation(line: 1213, column: 22, scope: !1355)
!8242 = !DILocation(line: 1215, column: 12, scope: !1369)
!8243 = !DILocation(line: 1215, column: 10, scope: !1369)
!8244 = !DILocation(line: 1215, column: 17, scope: !8245)
!8245 = !DILexicalBlockFile(scope: !8246, file: !420, discriminator: 2)
!8246 = !DILexicalBlockFile(scope: !1368, file: !420, discriminator: 1)
!8247 = !DILocation(line: 1215, column: 21, scope: !1368)
!8248 = !DILocation(line: 1215, column: 19, scope: !1368)
!8249 = !DILocation(line: 1215, column: 5, scope: !1369)
!8250 = !DILocation(line: 1216, column: 9, scope: !1367)
!8251 = !DILocation(line: 1216, column: 19, scope: !1367)
!8252 = !DILocation(line: 1216, column: 43, scope: !1367)
!8253 = !DILocation(line: 1216, column: 50, scope: !1367)
!8254 = !DILocation(line: 1216, column: 61, scope: !1367)
!8255 = !DILocation(line: 1216, column: 70, scope: !1367)
!8256 = !DILocation(line: 1216, column: 87, scope: !1367)
!8257 = !DILocation(line: 1216, column: 26, scope: !1367)
!8258 = !DILocation(line: 1216, column: 129, scope: !8259)
!8259 = !DILexicalBlockFile(scope: !1367, file: !420, discriminator: 1)
!8260 = !DILocation(line: 1216, column: 114, scope: !1367)
!8261 = !DILocation(line: 1216, column: 97, scope: !1367)
!8262 = !DILocation(line: 1216, column: 121, scope: !1367)
!8263 = !DILocation(line: 1216, column: 96, scope: !1367)
!8264 = !DILocation(line: 1216, column: 170, scope: !8265)
!8265 = !DILexicalBlockFile(scope: !1367, file: !420, discriminator: 2)
!8266 = !DILocation(line: 1216, column: 155, scope: !1367)
!8267 = !DILocation(line: 1216, column: 137, scope: !1367)
!8268 = !DILocation(line: 1216, column: 162, scope: !1367)
!8269 = !DILocation(line: 1216, column: 136, scope: !1367)
!8270 = !DILocation(line: 1216, column: 19, scope: !8271)
!8271 = !DILexicalBlockFile(scope: !8272, file: !420, discriminator: 4)
!8272 = !DILexicalBlockFile(scope: !1367, file: !420, discriminator: 3)
!8273 = !DILocation(line: 1217, column: 31, scope: !8274)
!8274 = distinct !DILexicalBlock(scope: !1367, file: !420, line: 1217, column: 13)
!8275 = !DILocation(line: 1217, column: 38, scope: !8274)
!8276 = !DILocation(line: 1217, column: 49, scope: !8274)
!8277 = !DILocation(line: 1217, column: 58, scope: !8274)
!8278 = !DILocation(line: 1217, column: 75, scope: !8274)
!8279 = !DILocation(line: 1217, column: 13, scope: !1367)
!8280 = !DILocation(line: 1218, column: 29, scope: !8281)
!8281 = distinct !DILexicalBlock(scope: !8274, file: !420, line: 1217, column: 82)
!8282 = !DILocation(line: 1218, column: 13, scope: !8281)
!8283 = !DILocation(line: 1220, column: 13, scope: !8281)
!8284 = !DILocation(line: 1222, column: 30, scope: !1367)
!8285 = !DILocation(line: 1222, column: 13, scope: !1367)
!8286 = !DILocation(line: 1222, column: 11, scope: !1367)
!8287 = !DILocation(line: 1223, column: 13, scope: !8288)
!8288 = distinct !DILexicalBlock(scope: !1367, file: !420, line: 1223, column: 13)
!8289 = !DILocation(line: 1223, column: 15, scope: !8288)
!8290 = !DILocation(line: 1223, column: 21, scope: !8288)
!8291 = !DILocation(line: 1223, column: 24, scope: !8292)
!8292 = !DILexicalBlockFile(scope: !8288, file: !420, discriminator: 1)
!8293 = !DILocation(line: 1223, column: 13, scope: !1367)
!8294 = !DILocation(line: 1224, column: 13, scope: !8295)
!8295 = distinct !DILexicalBlock(scope: !8288, file: !420, line: 1223, column: 42)
!8296 = !DILocation(line: 1226, column: 13, scope: !8297)
!8297 = distinct !DILexicalBlock(scope: !1367, file: !420, line: 1226, column: 13)
!8298 = !DILocation(line: 1226, column: 15, scope: !8297)
!8299 = !DILocation(line: 1226, column: 13, scope: !1367)
!8300 = !DILocation(line: 1228, column: 26, scope: !8301)
!8301 = distinct !DILexicalBlock(scope: !8297, file: !420, line: 1226, column: 21)
!8302 = !DILocation(line: 1228, column: 13, scope: !8301)
!8303 = !DILocation(line: 1230, column: 13, scope: !8301)
!8304 = !DILocation(line: 1232, column: 13, scope: !8305)
!8305 = distinct !DILexicalBlock(scope: !1367, file: !420, line: 1232, column: 13)
!8306 = !DILocation(line: 1232, column: 51, scope: !8305)
!8307 = !DILocation(line: 1232, column: 49, scope: !8305)
!8308 = !DILocation(line: 1232, column: 15, scope: !8305)
!8309 = !DILocation(line: 1232, column: 13, scope: !1367)
!8310 = !DILocation(line: 1233, column: 26, scope: !8311)
!8311 = distinct !DILexicalBlock(scope: !8305, file: !420, line: 1232, column: 56)
!8312 = !DILocation(line: 1233, column: 13, scope: !8311)
!8313 = !DILocation(line: 1235, column: 13, scope: !8311)
!8314 = !DILocation(line: 1237, column: 16, scope: !1367)
!8315 = !DILocation(line: 1237, column: 13, scope: !1367)
!8316 = !DILocation(line: 1238, column: 20, scope: !1367)
!8317 = !DILocation(line: 1238, column: 15, scope: !1367)
!8318 = !DILocation(line: 1238, column: 9, scope: !1367)
!8319 = !DILocation(line: 1238, column: 18, scope: !1367)
!8320 = !DILocation(line: 1239, column: 5, scope: !1368)
!8321 = !DILocation(line: 1239, column: 5, scope: !8246)
!8322 = !DILocation(line: 1239, column: 5, scope: !1367)
!8323 = !DILocation(line: 1215, column: 28, scope: !1368)
!8324 = !DILocation(line: 1215, column: 5, scope: !1368)
!8325 = !DILocation(line: 1241, column: 12, scope: !1355)
!8326 = !DILocation(line: 1241, column: 5, scope: !1355)
!8327 = !DILocation(line: 1242, column: 1, scope: !1355)
!8328 = !DILocation(line: 2784, column: 36, scope: !1378)
!8329 = !DILocation(line: 2786, column: 5, scope: !1378)
!8330 = !DILocation(line: 2786, column: 16, scope: !1378)
!8331 = !DILocation(line: 2786, column: 24, scope: !1378)
!8332 = !DILocation(line: 2786, column: 30, scope: !1378)
!8333 = !DILocation(line: 2788, column: 33, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !1378, file: !420, line: 2788, column: 9)
!8335 = !DILocation(line: 2788, column: 40, scope: !8334)
!8336 = !DILocation(line: 2788, column: 45, scope: !8334)
!8337 = !DILocation(line: 2788, column: 52, scope: !8334)
!8338 = !DILocation(line: 2788, column: 78, scope: !8339)
!8339 = !DILexicalBlockFile(scope: !8334, file: !420, discriminator: 2)
!8340 = !DILocation(line: 2788, column: 85, scope: !8334)
!8341 = !DILocation(line: 2788, column: 91, scope: !8334)
!8342 = !DILocation(line: 2788, column: 96, scope: !8334)
!8343 = !DILocation(line: 2788, column: 9, scope: !1378)
!8344 = !DILocation(line: 2788, column: 123, scope: !8345)
!8345 = !DILexicalBlockFile(scope: !8346, file: !420, discriminator: 3)
!8346 = !DILexicalBlockFile(scope: !8347, file: !420, discriminator: 1)
!8347 = distinct !DILexicalBlock(scope: !8334, file: !420, line: 2788, column: 105)
!8348 = !DILocation(line: 2788, column: 107, scope: !8347)
!8349 = !DILocation(line: 2788, column: 195, scope: !8347)
!8350 = !DILocation(line: 2789, column: 9, scope: !8351)
!8351 = distinct !DILexicalBlock(scope: !1378, file: !420, line: 2789, column: 9)
!8352 = !DILocation(line: 2789, column: 15, scope: !8351)
!8353 = !DILocation(line: 2789, column: 19, scope: !8351)
!8354 = !DILocation(line: 2789, column: 9, scope: !1378)
!8355 = !DILocation(line: 2790, column: 62, scope: !8356)
!8356 = distinct !DILexicalBlock(scope: !8351, file: !420, line: 2789, column: 34)
!8357 = !DILocation(line: 2790, column: 9, scope: !8356)
!8358 = !DILocation(line: 2792, column: 21, scope: !1378)
!8359 = !DILocation(line: 2792, column: 27, scope: !1378)
!8360 = !DILocation(line: 2792, column: 34, scope: !1378)
!8361 = !DILocation(line: 2792, column: 43, scope: !1378)
!8362 = !DILocation(line: 2793, column: 12, scope: !1378)
!8363 = !DILocation(line: 2793, column: 18, scope: !1378)
!8364 = !DILocation(line: 2793, column: 5, scope: !1378)
!8365 = !DILocation(line: 2794, column: 1, scope: !1378)
!8366 = !DILocation(line: 2797, column: 39, scope: !1382)
!8367 = !DILocation(line: 2799, column: 33, scope: !8368)
!8368 = distinct !DILexicalBlock(scope: !1382, file: !420, line: 2799, column: 9)
!8369 = !DILocation(line: 2799, column: 40, scope: !8368)
!8370 = !DILocation(line: 2799, column: 45, scope: !8368)
!8371 = !DILocation(line: 2799, column: 52, scope: !8368)
!8372 = !DILocation(line: 2799, column: 78, scope: !8373)
!8373 = !DILexicalBlockFile(scope: !8368, file: !420, discriminator: 2)
!8374 = !DILocation(line: 2799, column: 85, scope: !8368)
!8375 = !DILocation(line: 2799, column: 91, scope: !8368)
!8376 = !DILocation(line: 2799, column: 96, scope: !8368)
!8377 = !DILocation(line: 2799, column: 9, scope: !1382)
!8378 = !DILocation(line: 2799, column: 123, scope: !8379)
!8379 = !DILexicalBlockFile(scope: !8380, file: !420, discriminator: 3)
!8380 = !DILexicalBlockFile(scope: !8381, file: !420, discriminator: 1)
!8381 = distinct !DILexicalBlock(scope: !8368, file: !420, line: 2799, column: 105)
!8382 = !DILocation(line: 2799, column: 107, scope: !8381)
!8383 = !DILocation(line: 2799, column: 195, scope: !8381)
!8384 = !DILocation(line: 2800, column: 31, scope: !1382)
!8385 = !DILocation(line: 2800, column: 37, scope: !1382)
!8386 = !DILocation(line: 2800, column: 42, scope: !1382)
!8387 = !{!1806, !1548, i64 72}
!8388 = !DILocation(line: 2800, column: 12, scope: !1382)
!8389 = !DILocation(line: 2800, column: 5, scope: !1382)
!8390 = !DILocation(line: 2801, column: 1, scope: !1382)
!8391 = !DILocation(line: 2839, column: 41, scope: !1385)
!8392 = !DILocation(line: 2841, column: 33, scope: !8393)
!8393 = distinct !DILexicalBlock(scope: !1385, file: !420, line: 2841, column: 9)
!8394 = !DILocation(line: 2841, column: 40, scope: !8393)
!8395 = !DILocation(line: 2841, column: 45, scope: !8393)
!8396 = !DILocation(line: 2841, column: 52, scope: !8393)
!8397 = !DILocation(line: 2841, column: 78, scope: !8398)
!8398 = !DILexicalBlockFile(scope: !8393, file: !420, discriminator: 2)
!8399 = !DILocation(line: 2841, column: 85, scope: !8393)
!8400 = !DILocation(line: 2841, column: 91, scope: !8393)
!8401 = !DILocation(line: 2841, column: 96, scope: !8393)
!8402 = !DILocation(line: 2841, column: 9, scope: !1385)
!8403 = !DILocation(line: 2841, column: 123, scope: !8404)
!8404 = !DILexicalBlockFile(scope: !8405, file: !420, discriminator: 3)
!8405 = !DILexicalBlockFile(scope: !8406, file: !420, discriminator: 1)
!8406 = distinct !DILexicalBlock(scope: !8393, file: !420, line: 2841, column: 105)
!8407 = !DILocation(line: 2841, column: 107, scope: !8406)
!8408 = !DILocation(line: 2841, column: 195, scope: !8406)
!8409 = !DILocation(line: 2842, column: 28, scope: !1385)
!8410 = !DILocation(line: 2842, column: 34, scope: !1385)
!8411 = !DILocation(line: 2842, column: 39, scope: !1385)
!8412 = !{!1806, !1549, i64 88}
!8413 = !DILocation(line: 2842, column: 12, scope: !1385)
!8414 = !DILocation(line: 2842, column: 5, scope: !1385)
!8415 = !DILocation(line: 2843, column: 1, scope: !1385)
!8416 = !DILocation(line: 2811, column: 41, scope: !1388)
!8417 = !DILocation(line: 2813, column: 33, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !1388, file: !420, line: 2813, column: 9)
!8419 = !DILocation(line: 2813, column: 40, scope: !8418)
!8420 = !DILocation(line: 2813, column: 45, scope: !8418)
!8421 = !DILocation(line: 2813, column: 52, scope: !8418)
!8422 = !DILocation(line: 2813, column: 78, scope: !8423)
!8423 = !DILexicalBlockFile(scope: !8418, file: !420, discriminator: 2)
!8424 = !DILocation(line: 2813, column: 85, scope: !8418)
!8425 = !DILocation(line: 2813, column: 91, scope: !8418)
!8426 = !DILocation(line: 2813, column: 96, scope: !8418)
!8427 = !DILocation(line: 2813, column: 9, scope: !1388)
!8428 = !DILocation(line: 2813, column: 123, scope: !8429)
!8429 = !DILexicalBlockFile(scope: !8430, file: !420, discriminator: 3)
!8430 = !DILexicalBlockFile(scope: !8431, file: !420, discriminator: 1)
!8431 = distinct !DILexicalBlock(scope: !8418, file: !420, line: 2813, column: 105)
!8432 = !DILocation(line: 2813, column: 107, scope: !8431)
!8433 = !DILocation(line: 2813, column: 195, scope: !8431)
!8434 = !DILocation(line: 2814, column: 31, scope: !1388)
!8435 = !DILocation(line: 2814, column: 37, scope: !1388)
!8436 = !DILocation(line: 2814, column: 42, scope: !1388)
!8437 = !{!1806, !1548, i64 80}
!8438 = !DILocation(line: 2814, column: 12, scope: !1388)
!8439 = !DILocation(line: 2814, column: 5, scope: !1388)
!8440 = !DILocation(line: 2815, column: 1, scope: !1388)
!8441 = !DILocation(line: 2804, column: 39, scope: !1391)
!8442 = !DILocation(line: 2806, column: 33, scope: !8443)
!8443 = distinct !DILexicalBlock(scope: !1391, file: !420, line: 2806, column: 9)
!8444 = !DILocation(line: 2806, column: 40, scope: !8443)
!8445 = !DILocation(line: 2806, column: 45, scope: !8443)
!8446 = !DILocation(line: 2806, column: 52, scope: !8443)
!8447 = !DILocation(line: 2806, column: 78, scope: !8448)
!8448 = !DILexicalBlockFile(scope: !8443, file: !420, discriminator: 2)
!8449 = !DILocation(line: 2806, column: 85, scope: !8443)
!8450 = !DILocation(line: 2806, column: 91, scope: !8443)
!8451 = !DILocation(line: 2806, column: 96, scope: !8443)
!8452 = !DILocation(line: 2806, column: 9, scope: !1391)
!8453 = !DILocation(line: 2806, column: 123, scope: !8454)
!8454 = !DILexicalBlockFile(scope: !8455, file: !420, discriminator: 3)
!8455 = !DILexicalBlockFile(scope: !8456, file: !420, discriminator: 1)
!8456 = distinct !DILexicalBlock(scope: !8443, file: !420, line: 2806, column: 105)
!8457 = !DILocation(line: 2806, column: 107, scope: !8456)
!8458 = !DILocation(line: 2806, column: 195, scope: !8456)
!8459 = !DILocation(line: 2807, column: 33, scope: !1391)
!8460 = !DILocation(line: 2807, column: 39, scope: !1391)
!8461 = !DILocation(line: 2807, column: 44, scope: !1391)
!8462 = !{!1806, !1535, i64 96}
!8463 = !DILocation(line: 2807, column: 12, scope: !1391)
!8464 = !DILocation(line: 2807, column: 5, scope: !1391)
!8465 = !DILocation(line: 2808, column: 1, scope: !1391)
!8466 = !DILocation(line: 2846, column: 37, scope: !1394)
!8467 = !DILocation(line: 2848, column: 33, scope: !8468)
!8468 = distinct !DILexicalBlock(scope: !1394, file: !420, line: 2848, column: 9)
!8469 = !DILocation(line: 2848, column: 40, scope: !8468)
!8470 = !DILocation(line: 2848, column: 45, scope: !8468)
!8471 = !DILocation(line: 2848, column: 52, scope: !8468)
!8472 = !DILocation(line: 2848, column: 78, scope: !8473)
!8473 = !DILexicalBlockFile(scope: !8468, file: !420, discriminator: 2)
!8474 = !DILocation(line: 2848, column: 85, scope: !8468)
!8475 = !DILocation(line: 2848, column: 91, scope: !8468)
!8476 = !DILocation(line: 2848, column: 96, scope: !8468)
!8477 = !DILocation(line: 2848, column: 9, scope: !1394)
!8478 = !DILocation(line: 2848, column: 123, scope: !8479)
!8479 = !DILexicalBlockFile(scope: !8480, file: !420, discriminator: 3)
!8480 = !DILexicalBlockFile(scope: !8481, file: !420, discriminator: 1)
!8481 = distinct !DILexicalBlock(scope: !8468, file: !420, line: 2848, column: 105)
!8482 = !DILocation(line: 2848, column: 107, scope: !8481)
!8483 = !DILocation(line: 2848, column: 195, scope: !8481)
!8484 = !DILocation(line: 2849, column: 28, scope: !1394)
!8485 = !DILocation(line: 2849, column: 34, scope: !1394)
!8486 = !DILocation(line: 2849, column: 39, scope: !1394)
!8487 = !DILocation(line: 2849, column: 12, scope: !1394)
!8488 = !DILocation(line: 2849, column: 5, scope: !1394)
!8489 = !DILocation(line: 2850, column: 1, scope: !1394)
!8490 = !DILocation(line: 2818, column: 38, scope: !1397)
!8491 = !DILocation(line: 2820, column: 33, scope: !8492)
!8492 = distinct !DILexicalBlock(scope: !1397, file: !420, line: 2820, column: 9)
!8493 = !DILocation(line: 2820, column: 40, scope: !8492)
!8494 = !DILocation(line: 2820, column: 45, scope: !8492)
!8495 = !DILocation(line: 2820, column: 52, scope: !8492)
!8496 = !DILocation(line: 2820, column: 78, scope: !8497)
!8497 = !DILexicalBlockFile(scope: !8492, file: !420, discriminator: 2)
!8498 = !DILocation(line: 2820, column: 85, scope: !8492)
!8499 = !DILocation(line: 2820, column: 91, scope: !8492)
!8500 = !DILocation(line: 2820, column: 96, scope: !8492)
!8501 = !DILocation(line: 2820, column: 9, scope: !1397)
!8502 = !DILocation(line: 2820, column: 123, scope: !8503)
!8503 = !DILexicalBlockFile(scope: !8504, file: !420, discriminator: 3)
!8504 = !DILexicalBlockFile(scope: !8505, file: !420, discriminator: 1)
!8505 = distinct !DILexicalBlock(scope: !8492, file: !420, line: 2820, column: 105)
!8506 = !DILocation(line: 2820, column: 107, scope: !8505)
!8507 = !DILocation(line: 2820, column: 195, scope: !8505)
!8508 = !DILocation(line: 2821, column: 32, scope: !1397)
!8509 = !DILocation(line: 2821, column: 38, scope: !1397)
!8510 = !DILocation(line: 2821, column: 43, scope: !1397)
!8511 = !DILocation(line: 2821, column: 49, scope: !1397)
!8512 = !DILocation(line: 2821, column: 55, scope: !1397)
!8513 = !DILocation(line: 2821, column: 60, scope: !1397)
!8514 = !DILocation(line: 2821, column: 12, scope: !1397)
!8515 = !DILocation(line: 2821, column: 5, scope: !1397)
!8516 = !DILocation(line: 2822, column: 1, scope: !1397)
!8517 = !DILocation(line: 2825, column: 40, scope: !1416)
!8518 = !DILocation(line: 2827, column: 33, scope: !8519)
!8519 = distinct !DILexicalBlock(scope: !1416, file: !420, line: 2827, column: 9)
!8520 = !DILocation(line: 2827, column: 40, scope: !8519)
!8521 = !DILocation(line: 2827, column: 45, scope: !8519)
!8522 = !DILocation(line: 2827, column: 52, scope: !8519)
!8523 = !DILocation(line: 2827, column: 78, scope: !8524)
!8524 = !DILexicalBlockFile(scope: !8519, file: !420, discriminator: 2)
!8525 = !DILocation(line: 2827, column: 85, scope: !8519)
!8526 = !DILocation(line: 2827, column: 91, scope: !8519)
!8527 = !DILocation(line: 2827, column: 96, scope: !8519)
!8528 = !DILocation(line: 2827, column: 9, scope: !1416)
!8529 = !DILocation(line: 2827, column: 123, scope: !8530)
!8530 = !DILexicalBlockFile(scope: !8531, file: !420, discriminator: 3)
!8531 = !DILexicalBlockFile(scope: !8532, file: !420, discriminator: 1)
!8532 = distinct !DILexicalBlock(scope: !8519, file: !420, line: 2827, column: 105)
!8533 = !DILocation(line: 2827, column: 107, scope: !8532)
!8534 = !DILocation(line: 2827, column: 195, scope: !8532)
!8535 = !DILocation(line: 2828, column: 32, scope: !1416)
!8536 = !DILocation(line: 2828, column: 38, scope: !1416)
!8537 = !DILocation(line: 2828, column: 43, scope: !1416)
!8538 = !DILocation(line: 2828, column: 49, scope: !1416)
!8539 = !DILocation(line: 2828, column: 55, scope: !1416)
!8540 = !DILocation(line: 2828, column: 60, scope: !1416)
!8541 = !DILocation(line: 2828, column: 12, scope: !1416)
!8542 = !DILocation(line: 2828, column: 5, scope: !1416)
!8543 = !DILocation(line: 2829, column: 1, scope: !1416)
!8544 = !DILocation(line: 2832, column: 43, scope: !1419)
!8545 = !DILocation(line: 2834, column: 33, scope: !8546)
!8546 = distinct !DILexicalBlock(scope: !1419, file: !420, line: 2834, column: 9)
!8547 = !DILocation(line: 2834, column: 40, scope: !8546)
!8548 = !DILocation(line: 2834, column: 45, scope: !8546)
!8549 = !DILocation(line: 2834, column: 52, scope: !8546)
!8550 = !DILocation(line: 2834, column: 78, scope: !8551)
!8551 = !DILexicalBlockFile(scope: !8546, file: !420, discriminator: 2)
!8552 = !DILocation(line: 2834, column: 85, scope: !8546)
!8553 = !DILocation(line: 2834, column: 91, scope: !8546)
!8554 = !DILocation(line: 2834, column: 96, scope: !8546)
!8555 = !DILocation(line: 2834, column: 9, scope: !1419)
!8556 = !DILocation(line: 2834, column: 123, scope: !8557)
!8557 = !DILexicalBlockFile(scope: !8558, file: !420, discriminator: 3)
!8558 = !DILexicalBlockFile(scope: !8559, file: !420, discriminator: 1)
!8559 = distinct !DILexicalBlock(scope: !8546, file: !420, line: 2834, column: 105)
!8560 = !DILocation(line: 2834, column: 107, scope: !8559)
!8561 = !DILocation(line: 2834, column: 195, scope: !8559)
!8562 = !DILocation(line: 2835, column: 32, scope: !1419)
!8563 = !DILocation(line: 2835, column: 38, scope: !1419)
!8564 = !DILocation(line: 2835, column: 43, scope: !1419)
!8565 = !DILocation(line: 2835, column: 49, scope: !1419)
!8566 = !DILocation(line: 2835, column: 55, scope: !1419)
!8567 = !DILocation(line: 2835, column: 60, scope: !1419)
!8568 = !DILocation(line: 2835, column: 12, scope: !1419)
!8569 = !DILocation(line: 2835, column: 5, scope: !1419)
!8570 = !DILocation(line: 2836, column: 1, scope: !1419)
!8571 = !DILocation(line: 2853, column: 41, scope: !1422)
!8572 = !DILocation(line: 2853, column: 57, scope: !1422)
!8573 = !DILocation(line: 2855, column: 33, scope: !8574)
!8574 = distinct !DILexicalBlock(scope: !1422, file: !420, line: 2855, column: 9)
!8575 = !DILocation(line: 2855, column: 40, scope: !8574)
!8576 = !DILocation(line: 2855, column: 45, scope: !8574)
!8577 = !DILocation(line: 2855, column: 52, scope: !8574)
!8578 = !DILocation(line: 2855, column: 78, scope: !8579)
!8579 = !DILexicalBlockFile(scope: !8574, file: !420, discriminator: 2)
!8580 = !DILocation(line: 2855, column: 85, scope: !8574)
!8581 = !DILocation(line: 2855, column: 91, scope: !8574)
!8582 = !DILocation(line: 2855, column: 96, scope: !8574)
!8583 = !DILocation(line: 2855, column: 9, scope: !1422)
!8584 = !DILocation(line: 2855, column: 123, scope: !8585)
!8585 = !DILexicalBlockFile(scope: !8586, file: !420, discriminator: 3)
!8586 = !DILexicalBlockFile(scope: !8587, file: !420, discriminator: 1)
!8587 = distinct !DILexicalBlock(scope: !8574, file: !420, line: 2855, column: 105)
!8588 = !DILocation(line: 2855, column: 107, scope: !8587)
!8589 = !DILocation(line: 2855, column: 195, scope: !8587)
!8590 = !DILocation(line: 2856, column: 29, scope: !1422)
!8591 = !DILocation(line: 2856, column: 35, scope: !1422)
!8592 = !DILocation(line: 2856, column: 40, scope: !1422)
!8593 = !DILocation(line: 2856, column: 28, scope: !1422)
!8594 = !DILocation(line: 2856, column: 12, scope: !1422)
!8595 = !DILocation(line: 2856, column: 5, scope: !1422)
!8596 = !DILocation(line: 2857, column: 1, scope: !1422)
!8597 = !DILocation(line: 2860, column: 41, scope: !1426)
!8598 = !DILocation(line: 2860, column: 57, scope: !1426)
!8599 = !DILocation(line: 2862, column: 33, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !1426, file: !420, line: 2862, column: 9)
!8601 = !DILocation(line: 2862, column: 40, scope: !8600)
!8602 = !DILocation(line: 2862, column: 45, scope: !8600)
!8603 = !DILocation(line: 2862, column: 52, scope: !8600)
!8604 = !DILocation(line: 2862, column: 78, scope: !8605)
!8605 = !DILexicalBlockFile(scope: !8600, file: !420, discriminator: 2)
!8606 = !DILocation(line: 2862, column: 85, scope: !8600)
!8607 = !DILocation(line: 2862, column: 91, scope: !8600)
!8608 = !DILocation(line: 2862, column: 96, scope: !8600)
!8609 = !DILocation(line: 2862, column: 9, scope: !1426)
!8610 = !DILocation(line: 2862, column: 123, scope: !8611)
!8611 = !DILexicalBlockFile(scope: !8612, file: !420, discriminator: 3)
!8612 = !DILexicalBlockFile(scope: !8613, file: !420, discriminator: 1)
!8613 = distinct !DILexicalBlock(scope: !8600, file: !420, line: 2862, column: 105)
!8614 = !DILocation(line: 2862, column: 107, scope: !8613)
!8615 = !DILocation(line: 2862, column: 195, scope: !8613)
!8616 = !DILocation(line: 2863, column: 29, scope: !1426)
!8617 = !DILocation(line: 2863, column: 35, scope: !1426)
!8618 = !DILocation(line: 2863, column: 40, scope: !1426)
!8619 = !DILocation(line: 2863, column: 28, scope: !1426)
!8620 = !DILocation(line: 2863, column: 12, scope: !1426)
!8621 = !DILocation(line: 2863, column: 5, scope: !1426)
!8622 = !DILocation(line: 2864, column: 1, scope: !1426)
!8623 = !DILocation(line: 2867, column: 39, scope: !1430)
!8624 = !DILocation(line: 2867, column: 55, scope: !1430)
!8625 = !DILocation(line: 2869, column: 33, scope: !8626)
!8626 = distinct !DILexicalBlock(scope: !1430, file: !420, line: 2869, column: 9)
!8627 = !DILocation(line: 2869, column: 40, scope: !8626)
!8628 = !DILocation(line: 2869, column: 45, scope: !8626)
!8629 = !DILocation(line: 2869, column: 52, scope: !8626)
!8630 = !DILocation(line: 2869, column: 78, scope: !8631)
!8631 = !DILexicalBlockFile(scope: !8626, file: !420, discriminator: 2)
!8632 = !DILocation(line: 2869, column: 85, scope: !8626)
!8633 = !DILocation(line: 2869, column: 91, scope: !8626)
!8634 = !DILocation(line: 2869, column: 96, scope: !8626)
!8635 = !DILocation(line: 2869, column: 9, scope: !1430)
!8636 = !DILocation(line: 2869, column: 123, scope: !8637)
!8637 = !DILexicalBlockFile(scope: !8638, file: !420, discriminator: 3)
!8638 = !DILexicalBlockFile(scope: !8639, file: !420, discriminator: 1)
!8639 = distinct !DILexicalBlock(scope: !8626, file: !420, line: 2869, column: 105)
!8640 = !DILocation(line: 2869, column: 107, scope: !8639)
!8641 = !DILocation(line: 2869, column: 195, scope: !8639)
!8642 = !DILocation(line: 2870, column: 29, scope: !1430)
!8643 = !DILocation(line: 2870, column: 35, scope: !1430)
!8644 = !DILocation(line: 2870, column: 40, scope: !1430)
!8645 = !DILocation(line: 2870, column: 28, scope: !1430)
!8646 = !DILocation(line: 2870, column: 12, scope: !1430)
!8647 = !DILocation(line: 2870, column: 5, scope: !1430)
!8648 = !DILocation(line: 2871, column: 1, scope: !1430)
!8649 = !DILocation(line: 2760, column: 25, scope: !1400)
!8650 = !DILocation(line: 2760, column: 42, scope: !1400)
!8651 = !DILocation(line: 2762, column: 5, scope: !1400)
!8652 = !DILocation(line: 2762, column: 9, scope: !1400)
!8653 = !DILocation(line: 2763, column: 5, scope: !1400)
!8654 = !DILocation(line: 2763, column: 15, scope: !1400)
!8655 = !DILocation(line: 2764, column: 5, scope: !1400)
!8656 = !DILocation(line: 2764, column: 15, scope: !1400)
!8657 = !DILocation(line: 2766, column: 9, scope: !8658)
!8658 = distinct !DILexicalBlock(scope: !1400, file: !420, line: 2766, column: 9)
!8659 = !DILocation(line: 2766, column: 14, scope: !8658)
!8660 = !DILocation(line: 2766, column: 9, scope: !1400)
!8661 = !DILocation(line: 2767, column: 16, scope: !8658)
!8662 = !DILocation(line: 2767, column: 9, scope: !8658)
!8663 = !DILocation(line: 2769, column: 28, scope: !1400)
!8664 = !DILocation(line: 2769, column: 16, scope: !1400)
!8665 = !DILocation(line: 2769, column: 14, scope: !1400)
!8666 = !DILocation(line: 2770, column: 10, scope: !8667)
!8667 = distinct !DILexicalBlock(scope: !1400, file: !420, line: 2770, column: 9)
!8668 = !DILocation(line: 2770, column: 9, scope: !1400)
!8669 = !DILocation(line: 2771, column: 9, scope: !8667)
!8670 = !DILocation(line: 2772, column: 11, scope: !1415)
!8671 = !DILocation(line: 2772, column: 10, scope: !1415)
!8672 = !DILocation(line: 2772, column: 15, scope: !8673)
!8673 = !DILexicalBlockFile(scope: !8674, file: !420, discriminator: 2)
!8674 = !DILexicalBlockFile(scope: !1414, file: !420, discriminator: 1)
!8675 = !DILocation(line: 2772, column: 17, scope: !1414)
!8676 = !DILocation(line: 2772, column: 16, scope: !1414)
!8677 = !DILocation(line: 2772, column: 5, scope: !1415)
!8678 = !DILocation(line: 2773, column: 37, scope: !1413)
!8679 = !DILocation(line: 2773, column: 32, scope: !1413)
!8680 = !DILocation(line: 2773, column: 13, scope: !1413)
!8681 = !DILocation(line: 2773, column: 11, scope: !1413)
!8682 = !DILocation(line: 2774, column: 14, scope: !1412)
!8683 = !DILocation(line: 2774, column: 13, scope: !1413)
!8684 = !DILocation(line: 2775, column: 13, scope: !1411)
!8685 = !DILocation(line: 2775, column: 18, scope: !8686)
!8686 = !DILexicalBlockFile(scope: !1410, file: !420, discriminator: 1)
!8687 = !DILocation(line: 2775, column: 28, scope: !1410)
!8688 = !DILocation(line: 2775, column: 58, scope: !1410)
!8689 = !DILocation(line: 2775, column: 77, scope: !8690)
!8690 = distinct !DILexicalBlock(scope: !1410, file: !420, line: 2775, column: 74)
!8691 = !DILocation(line: 2775, column: 94, scope: !8690)
!8692 = !DILocation(line: 2775, column: 74, scope: !8690)
!8693 = !DILocation(line: 2775, column: 104, scope: !8690)
!8694 = !DILocation(line: 2775, column: 74, scope: !1410)
!8695 = !DILocation(line: 2775, column: 74, scope: !8696)
!8696 = !DILexicalBlockFile(scope: !1410, file: !420, discriminator: 2)
!8697 = !DILocation(line: 2775, column: 135, scope: !8698)
!8698 = !DILexicalBlockFile(scope: !8690, file: !420, discriminator: 3)
!8699 = !DILocation(line: 2775, column: 153, scope: !8690)
!8700 = !DILocation(line: 2775, column: 163, scope: !8690)
!8701 = !DILocation(line: 2775, column: 188, scope: !8690)
!8702 = !DILocation(line: 2775, column: 119, scope: !8690)
!8703 = !DILocation(line: 2775, column: 207, scope: !8704)
!8704 = !DILexicalBlockFile(scope: !1411, file: !420, discriminator: 4)
!8705 = !DILocation(line: 2775, column: 207, scope: !1410)
!8706 = !DILocation(line: 2775, column: 207, scope: !8707)
!8707 = !DILexicalBlockFile(scope: !1410, file: !420, discriminator: 5)
!8708 = !DILocation(line: 2776, column: 13, scope: !1411)
!8709 = !DILocation(line: 2778, column: 54, scope: !1413)
!8710 = !DILocation(line: 2778, column: 49, scope: !1413)
!8711 = !DILocation(line: 2778, column: 10, scope: !1413)
!8712 = !DILocation(line: 2778, column: 29, scope: !1413)
!8713 = !DILocation(line: 2778, column: 11, scope: !1413)
!8714 = !DILocation(line: 2778, column: 41, scope: !1413)
!8715 = !DILocation(line: 2778, column: 52, scope: !1413)
!8716 = !DILocation(line: 2779, column: 5, scope: !1413)
!8717 = !DILocation(line: 2772, column: 23, scope: !1414)
!8718 = !DILocation(line: 2772, column: 5, scope: !1414)
!8719 = !DILocation(line: 2780, column: 12, scope: !1400)
!8720 = !DILocation(line: 2780, column: 5, scope: !1400)
!8721 = !DILocation(line: 2781, column: 1, scope: !1400)
