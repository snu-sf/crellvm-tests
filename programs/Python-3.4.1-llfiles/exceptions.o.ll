; ModuleID = 'exceptions.o.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._object = type { i64, %struct._typeobject* }
%struct._typeobject = type { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }
%struct.PyVarObject = type { %struct._object, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.PyNumberMethods = type { %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)* }
%struct.PySequenceMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)*, %struct._object* (%struct._object*, i64)*, i8*, i32 (%struct._object*, i64, %struct._object*)*, i8*, i32 (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)* }
%struct.PyMappingMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)* }
%struct.PyBufferProcs = type { i32 (%struct._object*, %struct.bufferinfo*, i32)*, void (%struct._object*, %struct.bufferinfo*)* }
%struct.bufferinfo = type { i8*, %struct._object*, i64, i64, i32, i32, i8*, i64*, i64*, i64*, i8* }
%struct.PyMethodDef = type { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }
%struct.PyMemberDef = type { i8*, i32, i64, i32, i8* }
%struct.PyGetSetDef = type { i8*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, %struct._object*, i8*)*, i8*, i8* }
%struct.PyBaseExceptionObject = type { %struct._object, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, i8 }
%union._gc_head = type { %struct.anon.0 }
%struct.anon.0 = type { %union._gc_head*, %union._gc_head*, i64 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.PyStopIterationObject = type { %struct._object, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, i8, %struct._object* }
%struct.PySystemExitObject = type { %struct._object, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, i8, %struct._object* }
%struct.PyImportErrorObject = type { %struct._object, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, i8, %struct._object*, %struct._object*, %struct._object* }
%struct.PyOSErrorObject = type { %struct._object, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, i8, %struct._object*, %struct._object*, %struct._object*, %struct._object*, i64 }
%struct.PyTupleObject = type { %struct.PyVarObject, [1 x %struct._object*] }
%struct.PySyntaxErrorObject = type { %struct._object, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, i8, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object* }
%struct.PyUnicodeErrorObject = type { %struct._object, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, i8, %struct._object*, %struct._object*, i64, i64, %struct._object* }

@PyExc_EnvironmentError = global %struct._object* null, align 8
@PyExc_IOError = global %struct._object* null, align 8
@_PyExc_BaseException = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.PyBaseExceptionObject*)* @BaseException_repr to %struct._object* (%struct._object*)*), %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.PyBaseExceptionObject*)* @BaseException_str to %struct._object* (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* @PyObject_GenericSetAttr, %struct.PyBufferProcs* null, i64 1074021376, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.82, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([4 x %struct.PyMethodDef], [4 x %struct.PyMethodDef]* @BaseException_methods, i32 0, i32 0), %struct.PyMemberDef* getelementptr inbounds ([2 x %struct.PyMemberDef], [2 x %struct.PyMemberDef]* @BaseException_members, i32 0, i32 0), %struct.PyGetSetDef* getelementptr inbounds ([6 x %struct.PyGetSetDef], [6 x %struct.PyGetSetDef]* @BaseException_getset, i32 0, i32 0), %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_BaseException = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_BaseException, i64 0, i32 0, i32 0), align 8
@_PyExc_Exception = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.102, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_BaseException, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_Exception = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_Exception, i64 0, i32 0, i32 0), align 8
@_PyExc_TypeError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.103, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Exception, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_TypeError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_TypeError, i64 0, i32 0, i32 0), align 8
@_PyExc_StopIteration = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i32 0, i32 0), i64 72, i64 0, void (%struct._object*)* bitcast (void (%struct.PyStopIterationObject*)* @StopIteration_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.104, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyStopIterationObject*, i32 (%struct._object*, i8*)*, i8*)* @StopIteration_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyStopIterationObject*)* @StopIteration_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* getelementptr inbounds ([2 x %struct.PyMemberDef], [2 x %struct.PyMemberDef]* @StopIteration_members, i32 0, i32 0), %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Exception, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyStopIterationObject*, %struct._object*, %struct._object*)* @StopIteration_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_StopIteration = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_StopIteration, i64 0, i32 0, i32 0), align 8
@_PyExc_GeneratorExit = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.107, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_BaseException, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_GeneratorExit = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_GeneratorExit, i64 0, i32 0, i32 0), align 8
@_PyExc_SystemExit = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i32 0, i32 0), i64 72, i64 0, void (%struct._object*)* bitcast (void (%struct.PySystemExitObject*)* @SystemExit_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.108, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PySystemExitObject*, i32 (%struct._object*, i8*)*, i8*)* @SystemExit_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PySystemExitObject*)* @SystemExit_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* getelementptr inbounds ([2 x %struct.PyMemberDef], [2 x %struct.PyMemberDef]* @SystemExit_members, i32 0, i32 0), %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_BaseException, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PySystemExitObject*, %struct._object*, %struct._object*)* @SystemExit_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_SystemExit = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_SystemExit, i64 0, i32 0, i32 0), align 8
@_PyExc_KeyboardInterrupt = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.111, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_BaseException, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_KeyboardInterrupt = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_KeyboardInterrupt, i64 0, i32 0, i32 0), align 8
@_PyExc_ImportError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i32 0, i32 0), i64 88, i64 0, void (%struct._object*)* bitcast (void (%struct.PyImportErrorObject*)* @ImportError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.PyImportErrorObject*)* @ImportError_str to %struct._object* (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.112, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyImportErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @ImportError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyImportErrorObject*)* @ImportError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([1 x %struct.PyMethodDef], [1 x %struct.PyMethodDef]* @ImportError_methods, i32 0, i32 0), %struct.PyMemberDef* getelementptr inbounds ([4 x %struct.PyMemberDef], [4 x %struct.PyMemberDef]* @ImportError_members, i32 0, i32 0), %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Exception, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyImportErrorObject*, %struct._object*, %struct._object*)* @ImportError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_ImportError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ImportError, i64 0, i32 0, i32 0), align 8
@_PyExc_OSError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyOSErrorObject*)* @OSError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.PyOSErrorObject*)* @OSError_str to %struct._object* (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.119, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyOSErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @OSError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*)* @OSError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([2 x %struct.PyMethodDef], [2 x %struct.PyMethodDef]* @OSError_methods, i32 0, i32 0), %struct.PyMemberDef* getelementptr inbounds ([5 x %struct.PyMemberDef], [5 x %struct.PyMemberDef]* @OSError_members, i32 0, i32 0), %struct.PyGetSetDef* getelementptr inbounds ([2 x %struct.PyGetSetDef], [2 x %struct.PyGetSetDef]* @OSError_getset, i32 0, i32 0), %struct._typeobject* @_PyExc_Exception, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @OSError_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_OSError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_OSError, i64 0, i32 0, i32 0), align 8
@_PyExc_BlockingIOError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.59, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyOSErrorObject*)* @OSError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.132, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyOSErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @OSError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*)* @OSError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_OSError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_BlockingIOError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_BlockingIOError, i64 0, i32 0, i32 0), align 8
@_PyExc_ConnectionError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.58, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyOSErrorObject*)* @OSError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.133, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyOSErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @OSError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*)* @OSError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_OSError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_ConnectionError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ConnectionError, i64 0, i32 0, i32 0), align 8
@_PyExc_ChildProcessError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.62, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyOSErrorObject*)* @OSError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.134, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyOSErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @OSError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*)* @OSError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_OSError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_ChildProcessError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ChildProcessError, i64 0, i32 0, i32 0), align 8
@_PyExc_BrokenPipeError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyOSErrorObject*)* @OSError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.135, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyOSErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @OSError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*)* @OSError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_ConnectionError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_BrokenPipeError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_BrokenPipeError, i64 0, i32 0, i32 0), align 8
@_PyExc_ConnectionAbortedError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.63, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyOSErrorObject*)* @OSError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.136, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyOSErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @OSError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*)* @OSError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_ConnectionError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_ConnectionAbortedError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ConnectionAbortedError, i64 0, i32 0, i32 0), align 8
@_PyExc_ConnectionRefusedError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.64, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyOSErrorObject*)* @OSError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.137, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyOSErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @OSError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*)* @OSError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_ConnectionError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_ConnectionRefusedError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ConnectionRefusedError, i64 0, i32 0, i32 0), align 8
@_PyExc_ConnectionResetError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.65, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyOSErrorObject*)* @OSError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.138, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyOSErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @OSError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*)* @OSError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_ConnectionError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_ConnectionResetError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ConnectionResetError, i64 0, i32 0, i32 0), align 8
@_PyExc_FileExistsError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.66, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyOSErrorObject*)* @OSError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.139, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyOSErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @OSError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*)* @OSError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_OSError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_FileExistsError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_FileExistsError, i64 0, i32 0, i32 0), align 8
@_PyExc_FileNotFoundError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.67, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyOSErrorObject*)* @OSError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.140, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyOSErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @OSError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*)* @OSError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_OSError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_FileNotFoundError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_FileNotFoundError, i64 0, i32 0, i32 0), align 8
@_PyExc_IsADirectoryError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyOSErrorObject*)* @OSError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.141, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyOSErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @OSError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*)* @OSError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_OSError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_IsADirectoryError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_IsADirectoryError, i64 0, i32 0, i32 0), align 8
@_PyExc_NotADirectoryError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyOSErrorObject*)* @OSError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.142, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyOSErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @OSError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*)* @OSError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_OSError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_NotADirectoryError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_NotADirectoryError, i64 0, i32 0, i32 0), align 8
@_PyExc_InterruptedError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.70, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyOSErrorObject*)* @OSError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.143, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyOSErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @OSError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*)* @OSError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_OSError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_InterruptedError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_InterruptedError, i64 0, i32 0, i32 0), align 8
@_PyExc_PermissionError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.71, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyOSErrorObject*)* @OSError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.144, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyOSErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @OSError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*)* @OSError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_OSError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_PermissionError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_PermissionError, i64 0, i32 0, i32 0), align 8
@_PyExc_ProcessLookupError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.72, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyOSErrorObject*)* @OSError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.145, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyOSErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @OSError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*)* @OSError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_OSError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_ProcessLookupError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ProcessLookupError, i64 0, i32 0, i32 0), align 8
@_PyExc_TimeoutError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.73, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyOSErrorObject*)* @OSError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.146, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyOSErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @OSError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*)* @OSError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_OSError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_TimeoutError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_TimeoutError, i64 0, i32 0, i32 0), align 8
@_PyExc_EOFError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.147, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Exception, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_EOFError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_EOFError, i64 0, i32 0, i32 0), align 8
@_PyExc_RuntimeError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.148, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Exception, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_RuntimeError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_RuntimeError, i64 0, i32 0, i32 0), align 8
@_PyExc_NotImplementedError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.22, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.149, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_RuntimeError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_NotImplementedError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_NotImplementedError, i64 0, i32 0, i32 0), align 8
@_PyExc_NameError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.150, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Exception, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_NameError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_NameError, i64 0, i32 0, i32 0), align 8
@_PyExc_UnboundLocalError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.24, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.151, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_NameError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_UnboundLocalError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_UnboundLocalError, i64 0, i32 0, i32 0), align 8
@_PyExc_AttributeError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.152, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Exception, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_AttributeError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_AttributeError, i64 0, i32 0, i32 0), align 8
@_PyExc_SyntaxError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.26, i32 0, i32 0), i64 112, i64 0, void (%struct._object*)* bitcast (void (%struct.PySyntaxErrorObject*)* @SyntaxError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.PySyntaxErrorObject*)* @SyntaxError_str to %struct._object* (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.153, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PySyntaxErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @SyntaxError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PySyntaxErrorObject*)* @SyntaxError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* getelementptr inbounds ([7 x %struct.PyMemberDef], [7 x %struct.PyMemberDef]* @SyntaxError_members, i32 0, i32 0), %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Exception, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PySyntaxErrorObject*, %struct._object*, %struct._object*)* @SyntaxError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_SyntaxError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_SyntaxError, i64 0, i32 0, i32 0), align 8
@_PyExc_IndentationError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.27, i32 0, i32 0), i64 112, i64 0, void (%struct._object*)* bitcast (void (%struct.PySyntaxErrorObject*)* @SyntaxError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.167, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PySyntaxErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @SyntaxError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PySyntaxErrorObject*)* @SyntaxError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_SyntaxError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PySyntaxErrorObject*, %struct._object*, %struct._object*)* @SyntaxError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_IndentationError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_IndentationError, i64 0, i32 0, i32 0), align 8
@_PyExc_TabError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i32 0, i32 0), i64 112, i64 0, void (%struct._object*)* bitcast (void (%struct.PySyntaxErrorObject*)* @SyntaxError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.168, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PySyntaxErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @SyntaxError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PySyntaxErrorObject*)* @SyntaxError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_IndentationError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PySyntaxErrorObject*, %struct._object*, %struct._object*)* @SyntaxError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_TabError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_TabError, i64 0, i32 0, i32 0), align 8
@_PyExc_LookupError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.169, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Exception, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_LookupError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_LookupError, i64 0, i32 0, i32 0), align 8
@_PyExc_IndexError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.170, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_LookupError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_IndexError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_IndexError, i64 0, i32 0, i32 0), align 8
@_PyExc_KeyError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.31, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.PyBaseExceptionObject*)* @KeyError_str to %struct._object* (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.171, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_LookupError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_KeyError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_KeyError, i64 0, i32 0, i32 0), align 8
@_PyExc_ValueError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.32, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.172, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Exception, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_ValueError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ValueError, i64 0, i32 0, i32 0), align 8
@_PyExc_UnicodeError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.173, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_ValueError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_UnicodeError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_UnicodeError, i64 0, i32 0, i32 0), align 8
@.str = private unnamed_addr constant [9 x i8] c"encoding\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"object\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"reason\00", align 1
@_PyExc_UnicodeEncodeError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.34, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyUnicodeErrorObject*)* @UnicodeError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* @UnicodeEncodeError_str, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.177, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyUnicodeErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @UnicodeError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyUnicodeErrorObject*)* @UnicodeError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* getelementptr inbounds ([6 x %struct.PyMemberDef], [6 x %struct.PyMemberDef]* @UnicodeError_members, i32 0, i32 0), %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_UnicodeError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* @UnicodeEncodeError_init, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_UnicodeEncodeError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_UnicodeEncodeError, i64 0, i32 0, i32 0), align 8
@.str.3 = private unnamed_addr constant [7 x i8] c"su#nns\00", align 1
@_PyExc_UnicodeDecodeError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.35, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyUnicodeErrorObject*)* @UnicodeError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* @UnicodeDecodeError_str, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.190, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyUnicodeErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @UnicodeError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyUnicodeErrorObject*)* @UnicodeError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* getelementptr inbounds ([6 x %struct.PyMemberDef], [6 x %struct.PyMemberDef]* @UnicodeError_members, i32 0, i32 0), %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_UnicodeError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* @UnicodeDecodeError_init, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_UnicodeDecodeError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_UnicodeDecodeError, i64 0, i32 0, i32 0), align 8
@.str.4 = private unnamed_addr constant [7 x i8] c"sy#nns\00", align 1
@_PyExc_UnicodeTranslateError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.36, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyUnicodeErrorObject*)* @UnicodeError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* @UnicodeTranslateError_str, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.194, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyUnicodeErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @UnicodeError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyUnicodeErrorObject*)* @UnicodeError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* getelementptr inbounds ([6 x %struct.PyMemberDef], [6 x %struct.PyMemberDef]* @UnicodeError_members, i32 0, i32 0), %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_UnicodeError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyUnicodeErrorObject*, %struct._object*, %struct._object*)* @UnicodeTranslateError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_UnicodeTranslateError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_UnicodeTranslateError, i64 0, i32 0, i32 0), align 8
@.str.5 = private unnamed_addr constant [6 x i8] c"u#nns\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"Onns\00", align 1
@_PyExc_AssertionError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.37, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.200, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Exception, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_AssertionError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_AssertionError, i64 0, i32 0, i32 0), align 8
@_PyExc_ArithmeticError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.201, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Exception, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_ArithmeticError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ArithmeticError, i64 0, i32 0, i32 0), align 8
@_PyExc_FloatingPointError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.39, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.202, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_ArithmeticError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_FloatingPointError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_FloatingPointError, i64 0, i32 0, i32 0), align 8
@_PyExc_OverflowError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.40, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.203, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_ArithmeticError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_OverflowError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_OverflowError, i64 0, i32 0, i32 0), align 8
@_PyExc_ZeroDivisionError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.41, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.204, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_ArithmeticError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_ZeroDivisionError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ZeroDivisionError, i64 0, i32 0, i32 0), align 8
@_PyExc_SystemError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.42, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([176 x i8], [176 x i8]* @.str.205, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Exception, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_SystemError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_SystemError, i64 0, i32 0, i32 0), align 8
@_PyExc_ReferenceError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.43, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.206, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Exception, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_ReferenceError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ReferenceError, i64 0, i32 0, i32 0), align 8
@_PyExc_MemoryError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.45, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @MemoryError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.207, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Exception, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @MemoryError_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_MemoryError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_MemoryError, i64 0, i32 0, i32 0), align 8
@_PyExc_BufferError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.44, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.209, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Exception, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_BufferError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_BufferError, i64 0, i32 0, i32 0), align 8
@_PyExc_Warning = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.46, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.210, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Exception, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_Warning = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_Warning, i64 0, i32 0, i32 0), align 8
@_PyExc_UserWarning = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.47, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.211, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Warning, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_UserWarning = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_UserWarning, i64 0, i32 0, i32 0), align 8
@_PyExc_DeprecationWarning = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.48, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.212, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Warning, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_DeprecationWarning = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_DeprecationWarning, i64 0, i32 0, i32 0), align 8
@_PyExc_PendingDeprecationWarning = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.49, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.213, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Warning, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_PendingDeprecationWarning = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_PendingDeprecationWarning, i64 0, i32 0, i32 0), align 8
@_PyExc_SyntaxWarning = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.50, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.214, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Warning, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_SyntaxWarning = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_SyntaxWarning, i64 0, i32 0, i32 0), align 8
@_PyExc_RuntimeWarning = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.51, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.215, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Warning, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_RuntimeWarning = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_RuntimeWarning, i64 0, i32 0, i32 0), align 8
@_PyExc_FutureWarning = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.52, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.216, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Warning, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_FutureWarning = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_FutureWarning, i64 0, i32 0, i32 0), align 8
@_PyExc_ImportWarning = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.53, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.217, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Warning, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_ImportWarning = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ImportWarning, i64 0, i32 0, i32 0), align 8
@_PyExc_UnicodeWarning = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.54, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.218, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Warning, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_UnicodeWarning = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_UnicodeWarning, i64 0, i32 0, i32 0), align 8
@_PyExc_BytesWarning = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.55, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([124 x i8], [124 x i8]* @.str.219, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Warning, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_BytesWarning = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_BytesWarning, i64 0, i32 0, i32 0), align 8
@_PyExc_ResourceWarning = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.56, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.220, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Warning, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_ResourceWarning = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ResourceWarning, i64 0, i32 0, i32 0), align 8
@PyExc_RecursionErrorInst = global %struct._object* null, align 8
@.str.7 = private unnamed_addr constant [32 x i8] c"exceptions bootstrapping error.\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"BaseException\00", align 1
@.str.9 = private unnamed_addr constant [37 x i8] c"Module dictionary insertion problem.\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"Exception\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"TypeError\00", align 1
@.str.12 = private unnamed_addr constant [14 x i8] c"StopIteration\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"GeneratorExit\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"SystemExit\00", align 1
@.str.15 = private unnamed_addr constant [18 x i8] c"KeyboardInterrupt\00", align 1
@.str.16 = private unnamed_addr constant [12 x i8] c"ImportError\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"OSError\00", align 1
@.str.18 = private unnamed_addr constant [17 x i8] c"EnvironmentError\00", align 1
@.str.19 = private unnamed_addr constant [8 x i8] c"IOError\00", align 1
@.str.20 = private unnamed_addr constant [9 x i8] c"EOFError\00", align 1
@.str.21 = private unnamed_addr constant [13 x i8] c"RuntimeError\00", align 1
@.str.22 = private unnamed_addr constant [20 x i8] c"NotImplementedError\00", align 1
@.str.23 = private unnamed_addr constant [10 x i8] c"NameError\00", align 1
@.str.24 = private unnamed_addr constant [18 x i8] c"UnboundLocalError\00", align 1
@.str.25 = private unnamed_addr constant [15 x i8] c"AttributeError\00", align 1
@.str.26 = private unnamed_addr constant [12 x i8] c"SyntaxError\00", align 1
@.str.27 = private unnamed_addr constant [17 x i8] c"IndentationError\00", align 1
@.str.28 = private unnamed_addr constant [9 x i8] c"TabError\00", align 1
@.str.29 = private unnamed_addr constant [12 x i8] c"LookupError\00", align 1
@.str.30 = private unnamed_addr constant [11 x i8] c"IndexError\00", align 1
@.str.31 = private unnamed_addr constant [9 x i8] c"KeyError\00", align 1
@.str.32 = private unnamed_addr constant [11 x i8] c"ValueError\00", align 1
@.str.33 = private unnamed_addr constant [13 x i8] c"UnicodeError\00", align 1
@.str.34 = private unnamed_addr constant [19 x i8] c"UnicodeEncodeError\00", align 1
@.str.35 = private unnamed_addr constant [19 x i8] c"UnicodeDecodeError\00", align 1
@.str.36 = private unnamed_addr constant [22 x i8] c"UnicodeTranslateError\00", align 1
@.str.37 = private unnamed_addr constant [15 x i8] c"AssertionError\00", align 1
@.str.38 = private unnamed_addr constant [16 x i8] c"ArithmeticError\00", align 1
@.str.39 = private unnamed_addr constant [19 x i8] c"FloatingPointError\00", align 1
@.str.40 = private unnamed_addr constant [14 x i8] c"OverflowError\00", align 1
@.str.41 = private unnamed_addr constant [18 x i8] c"ZeroDivisionError\00", align 1
@.str.42 = private unnamed_addr constant [12 x i8] c"SystemError\00", align 1
@.str.43 = private unnamed_addr constant [15 x i8] c"ReferenceError\00", align 1
@.str.44 = private unnamed_addr constant [12 x i8] c"BufferError\00", align 1
@.str.45 = private unnamed_addr constant [12 x i8] c"MemoryError\00", align 1
@.str.46 = private unnamed_addr constant [8 x i8] c"Warning\00", align 1
@.str.47 = private unnamed_addr constant [12 x i8] c"UserWarning\00", align 1
@.str.48 = private unnamed_addr constant [19 x i8] c"DeprecationWarning\00", align 1
@.str.49 = private unnamed_addr constant [26 x i8] c"PendingDeprecationWarning\00", align 1
@.str.50 = private unnamed_addr constant [14 x i8] c"SyntaxWarning\00", align 1
@.str.51 = private unnamed_addr constant [15 x i8] c"RuntimeWarning\00", align 1
@.str.52 = private unnamed_addr constant [14 x i8] c"FutureWarning\00", align 1
@.str.53 = private unnamed_addr constant [14 x i8] c"ImportWarning\00", align 1
@.str.54 = private unnamed_addr constant [15 x i8] c"UnicodeWarning\00", align 1
@.str.55 = private unnamed_addr constant [13 x i8] c"BytesWarning\00", align 1
@.str.56 = private unnamed_addr constant [16 x i8] c"ResourceWarning\00", align 1
@errnomap = internal unnamed_addr global %struct._object* null, align 8
@.str.57 = private unnamed_addr constant [54 x i8] c"Cannot allocate map from errnos to OSError subclasses\00", align 1
@.str.58 = private unnamed_addr constant [16 x i8] c"ConnectionError\00", align 1
@.str.59 = private unnamed_addr constant [16 x i8] c"BlockingIOError\00", align 1
@.str.60 = private unnamed_addr constant [26 x i8] c"errmap insertion problem.\00", align 1
@.str.61 = private unnamed_addr constant [16 x i8] c"BrokenPipeError\00", align 1
@.str.62 = private unnamed_addr constant [18 x i8] c"ChildProcessError\00", align 1
@.str.63 = private unnamed_addr constant [23 x i8] c"ConnectionAbortedError\00", align 1
@.str.64 = private unnamed_addr constant [23 x i8] c"ConnectionRefusedError\00", align 1
@.str.65 = private unnamed_addr constant [21 x i8] c"ConnectionResetError\00", align 1
@.str.66 = private unnamed_addr constant [16 x i8] c"FileExistsError\00", align 1
@.str.67 = private unnamed_addr constant [18 x i8] c"FileNotFoundError\00", align 1
@.str.68 = private unnamed_addr constant [18 x i8] c"IsADirectoryError\00", align 1
@.str.69 = private unnamed_addr constant [19 x i8] c"NotADirectoryError\00", align 1
@.str.70 = private unnamed_addr constant [17 x i8] c"InterruptedError\00", align 1
@.str.71 = private unnamed_addr constant [16 x i8] c"PermissionError\00", align 1
@.str.72 = private unnamed_addr constant [19 x i8] c"ProcessLookupError\00", align 1
@.str.73 = private unnamed_addr constant [13 x i8] c"TimeoutError\00", align 1
@.str.74 = private unnamed_addr constant [63 x i8] c"Cannot pre-allocate RuntimeError instance for recursion errors\00", align 1
@.str.75 = private unnamed_addr constant [33 x i8] c"maximum recursion depth exceeded\00", align 1
@.str.76 = private unnamed_addr constant [57 x i8] c"cannot allocate argument for RuntimeError pre-allocation\00", align 1
@.str.77 = private unnamed_addr constant [54 x i8] c"cannot allocate tuple for RuntimeError pre-allocation\00", align 1
@.str.78 = private unnamed_addr constant [42 x i8] c"init of pre-allocated RuntimeError failed\00", align 1
@PyUnicode_Type = external global %struct._typeobject, align 8
@.str.79 = private unnamed_addr constant [12 x i8] c"%U (%s: %S)\00", align 1
@.str.80 = private unnamed_addr constant [33 x i8] c"__traceback__ may not be deleted\00", align 1
@_Py_NoneStruct = external global %struct._object, align 8
@PyTraceBack_Type = external global %struct._typeobject, align 8
@.str.81 = private unnamed_addr constant [42 x i8] c"__traceback__ must be a traceback or None\00", align 1
@.str.82 = private unnamed_addr constant [37 x i8] c"Common base class for all exceptions\00", align 1
@BaseException_methods = internal global [4 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.85, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyBaseExceptionObject*)* @BaseException_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.86, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @BaseException_setstate, i32 8, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.87, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @BaseException_with_traceback, i32 8, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @with_traceback_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@BaseException_members = internal global [2 x %struct.PyMemberDef] [%struct.PyMemberDef { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.89, i32 0, i32 0), i32 14, i64 56, i32 0, i8* null }, %struct.PyMemberDef zeroinitializer], align 16
@BaseException_getset = internal global [6 x %struct.PyGetSetDef] [%struct.PyGetSetDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.90, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* @PyObject_GenericGetDict, i32 (%struct._object*, %struct._object*, i8*)* @PyObject_GenericSetDict, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.91, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PyBaseExceptionObject*)* @BaseException_get_args to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*)* @BaseException_set_args to i32 (%struct._object*, %struct._object*, i8*)*), i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.92, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PyBaseExceptionObject*)* @BaseException_get_tb to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*)* @BaseException_set_tb to i32 (%struct._object*, %struct._object*, i8*)*), i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.93, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct._object*)* @BaseException_get_context to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* bitcast (i32 (%struct._object*, %struct._object*)* @BaseException_set_context to i32 (%struct._object*, %struct._object*, i8*)*), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.94, i32 0, i32 0), i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.95, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct._object*)* @BaseException_get_cause to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* bitcast (i32 (%struct._object*, %struct._object*)* @BaseException_set_cause to i32 (%struct._object*, %struct._object*, i8*)*), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.96, i32 0, i32 0), i8* null }, %struct.PyGetSetDef zeroinitializer], align 16
@.str.83 = private unnamed_addr constant [5 x i8] c"%s%R\00", align 1
@.str.84 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.85 = private unnamed_addr constant [11 x i8] c"__reduce__\00", align 1
@.str.86 = private unnamed_addr constant [13 x i8] c"__setstate__\00", align 1
@.str.87 = private unnamed_addr constant [15 x i8] c"with_traceback\00", align 1
@with_traceback_doc = internal global [82 x i8] c"Exception.with_traceback(tb) --\0A    set self.__traceback__ to tb and return self.\00", align 16
@.str.88 = private unnamed_addr constant [26 x i8] c"state is not a dictionary\00", align 1
@.str.89 = private unnamed_addr constant [21 x i8] c"__suppress_context__\00", align 1
@.str.90 = private unnamed_addr constant [9 x i8] c"__dict__\00", align 1
@.str.91 = private unnamed_addr constant [5 x i8] c"args\00", align 1
@.str.92 = private unnamed_addr constant [14 x i8] c"__traceback__\00", align 1
@.str.93 = private unnamed_addr constant [12 x i8] c"__context__\00", align 1
@.str.94 = private unnamed_addr constant [18 x i8] c"exception context\00", align 1
@.str.95 = private unnamed_addr constant [10 x i8] c"__cause__\00", align 1
@.str.96 = private unnamed_addr constant [16 x i8] c"exception cause\00", align 1
@.str.97 = private unnamed_addr constant [24 x i8] c"args may not be deleted\00", align 1
@.str.98 = private unnamed_addr constant [31 x i8] c"__context__ may not be deleted\00", align 1
@.str.99 = private unnamed_addr constant [60 x i8] c"exception context must be None or derive from BaseException\00", align 1
@.str.100 = private unnamed_addr constant [29 x i8] c"__cause__ may not be deleted\00", align 1
@.str.101 = private unnamed_addr constant [58 x i8] c"exception cause must be None or derive from BaseException\00", align 1
@.str.102 = private unnamed_addr constant [47 x i8] c"Common base class for all non-exit exceptions.\00", align 1
@.str.103 = private unnamed_addr constant [29 x i8] c"Inappropriate argument type.\00", align 1
@.str.104 = private unnamed_addr constant [41 x i8] c"Signal the end from iterator.__next__().\00", align 1
@StopIteration_members = internal global [2 x %struct.PyMemberDef] [%struct.PyMemberDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i32 0, i32 0), i32 6, i64 64, i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.106, i32 0, i32 0) }, %struct.PyMemberDef zeroinitializer], align 16
@.str.105 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@.str.106 = private unnamed_addr constant [23 x i8] c"generator return value\00", align 1
@.str.107 = private unnamed_addr constant [31 x i8] c"Request that a generator exit.\00", align 1
@.str.108 = private unnamed_addr constant [38 x i8] c"Request to exit from the interpreter.\00", align 1
@SystemExit_members = internal global [2 x %struct.PyMemberDef] [%struct.PyMemberDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.109, i32 0, i32 0), i32 6, i64 64, i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.110, i32 0, i32 0) }, %struct.PyMemberDef zeroinitializer], align 16
@.str.109 = private unnamed_addr constant [5 x i8] c"code\00", align 1
@.str.110 = private unnamed_addr constant [15 x i8] c"exception code\00", align 1
@.str.111 = private unnamed_addr constant [29 x i8] c"Program interrupted by user.\00", align 1
@.str.112 = private unnamed_addr constant [56 x i8] c"Import can't find module, or can't find name in module.\00", align 1
@ImportError_methods = internal global [1 x %struct.PyMethodDef] zeroinitializer, align 16
@ImportError_members = internal global [4 x %struct.PyMemberDef] [%struct.PyMemberDef { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.113, i32 0, i32 0), i32 6, i64 64, i32 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.114, i32 0, i32 0) }, %struct.PyMemberDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.115, i32 0, i32 0), i32 6, i64 72, i32 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.116, i32 0, i32 0) }, %struct.PyMemberDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.117, i32 0, i32 0), i32 6, i64 80, i32 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.118, i32 0, i32 0) }, %struct.PyMemberDef zeroinitializer], align 16
@.str.113 = private unnamed_addr constant [4 x i8] c"msg\00", align 1
@.str.114 = private unnamed_addr constant [18 x i8] c"exception message\00", align 1
@.str.115 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.116 = private unnamed_addr constant [12 x i8] c"module name\00", align 1
@.str.117 = private unnamed_addr constant [5 x i8] c"path\00", align 1
@.str.118 = private unnamed_addr constant [12 x i8] c"module path\00", align 1
@.str.119 = private unnamed_addr constant [35 x i8] c"Base class for I/O related errors.\00", align 1
@OSError_methods = internal global [2 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.85, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyOSErrorObject*)* @OSError_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef zeroinitializer], align 16
@OSError_members = internal global [5 x %struct.PyMemberDef] [%struct.PyMemberDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.123, i32 0, i32 0), i32 6, i64 64, i32 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.124, i32 0, i32 0) }, %struct.PyMemberDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.125, i32 0, i32 0), i32 6, i64 72, i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.126, i32 0, i32 0) }, %struct.PyMemberDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.127, i32 0, i32 0), i32 6, i64 80, i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.128, i32 0, i32 0) }, %struct.PyMemberDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.129, i32 0, i32 0), i32 6, i64 88, i32 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.130, i32 0, i32 0) }, %struct.PyMemberDef zeroinitializer], align 16
@OSError_getset = internal global [2 x %struct.PyGetSetDef] [%struct.PyGetSetDef { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.131, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PyOSErrorObject*, i8*)* @OSError_written_get to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, i8*)* @OSError_written_set to i32 (%struct._object*, %struct._object*, i8*)*), i8* null, i8* null }, %struct.PyGetSetDef zeroinitializer], align 16
@.str.120 = private unnamed_addr constant [24 x i8] c"[Errno %S] %S: %R -> %R\00", align 1
@.str.121 = private unnamed_addr constant [18 x i8] c"[Errno %S] %S: %R\00", align 1
@.str.122 = private unnamed_addr constant [14 x i8] c"[Errno %S] %S\00", align 1
@.str.123 = private unnamed_addr constant [6 x i8] c"errno\00", align 1
@.str.124 = private unnamed_addr constant [21 x i8] c"POSIX exception code\00", align 1
@.str.125 = private unnamed_addr constant [9 x i8] c"strerror\00", align 1
@.str.126 = private unnamed_addr constant [19 x i8] c"exception strerror\00", align 1
@.str.127 = private unnamed_addr constant [9 x i8] c"filename\00", align 1
@.str.128 = private unnamed_addr constant [19 x i8] c"exception filename\00", align 1
@.str.129 = private unnamed_addr constant [10 x i8] c"filename2\00", align 1
@.str.130 = private unnamed_addr constant [26 x i8] c"second exception filename\00", align 1
@.str.131 = private unnamed_addr constant [19 x i8] c"characters_written\00", align 1
@.str.132 = private unnamed_addr constant [27 x i8] c"I/O operation would block.\00", align 1
@.str.133 = private unnamed_addr constant [18 x i8] c"Connection error.\00", align 1
@.str.134 = private unnamed_addr constant [21 x i8] c"Child process error.\00", align 1
@.str.135 = private unnamed_addr constant [13 x i8] c"Broken pipe.\00", align 1
@.str.136 = private unnamed_addr constant [20 x i8] c"Connection aborted.\00", align 1
@.str.137 = private unnamed_addr constant [20 x i8] c"Connection refused.\00", align 1
@.str.138 = private unnamed_addr constant [18 x i8] c"Connection reset.\00", align 1
@.str.139 = private unnamed_addr constant [21 x i8] c"File already exists.\00", align 1
@.str.140 = private unnamed_addr constant [16 x i8] c"File not found.\00", align 1
@.str.141 = private unnamed_addr constant [39 x i8] c"Operation doesn't work on directories.\00", align 1
@.str.142 = private unnamed_addr constant [37 x i8] c"Operation only works on directories.\00", align 1
@.str.143 = private unnamed_addr constant [23 x i8] c"Interrupted by signal.\00", align 1
@.str.144 = private unnamed_addr constant [24 x i8] c"Not enough permissions.\00", align 1
@.str.145 = private unnamed_addr constant [19 x i8] c"Process not found.\00", align 1
@.str.146 = private unnamed_addr constant [17 x i8] c"Timeout expired.\00", align 1
@.str.147 = private unnamed_addr constant [25 x i8] c"Read beyond end of file.\00", align 1
@.str.148 = private unnamed_addr constant [28 x i8] c"Unspecified run-time error.\00", align 1
@.str.149 = private unnamed_addr constant [48 x i8] c"Method or function hasn't been implemented yet.\00", align 1
@.str.150 = private unnamed_addr constant [25 x i8] c"Name not found globally.\00", align 1
@.str.151 = private unnamed_addr constant [48 x i8] c"Local name referenced but not bound to a value.\00", align 1
@.str.152 = private unnamed_addr constant [21 x i8] c"Attribute not found.\00", align 1
@.str.153 = private unnamed_addr constant [16 x i8] c"Invalid syntax.\00", align 1
@SyntaxError_members = internal global [7 x %struct.PyMemberDef] [%struct.PyMemberDef { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.113, i32 0, i32 0), i32 6, i64 64, i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.157, i32 0, i32 0) }, %struct.PyMemberDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.127, i32 0, i32 0), i32 6, i64 72, i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.128, i32 0, i32 0) }, %struct.PyMemberDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.158, i32 0, i32 0), i32 6, i64 80, i32 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.159, i32 0, i32 0) }, %struct.PyMemberDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.160, i32 0, i32 0), i32 6, i64 88, i32 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.161, i32 0, i32 0) }, %struct.PyMemberDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.162, i32 0, i32 0), i32 6, i64 96, i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.163, i32 0, i32 0) }, %struct.PyMemberDef { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.164, i32 0, i32 0), i32 6, i64 104, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.165, i32 0, i32 0) }, %struct.PyMemberDef zeroinitializer], align 16
@PyLong_Type = external global %struct._typeobject, align 8
@.str.154 = private unnamed_addr constant [18 x i8] c"%S (%U, line %ld)\00", align 1
@.str.155 = private unnamed_addr constant [8 x i8] c"%S (%U)\00", align 1
@.str.156 = private unnamed_addr constant [14 x i8] c"%S (line %ld)\00", align 1
@.str.157 = private unnamed_addr constant [14 x i8] c"exception msg\00", align 1
@.str.158 = private unnamed_addr constant [7 x i8] c"lineno\00", align 1
@.str.159 = private unnamed_addr constant [17 x i8] c"exception lineno\00", align 1
@.str.160 = private unnamed_addr constant [7 x i8] c"offset\00", align 1
@.str.161 = private unnamed_addr constant [17 x i8] c"exception offset\00", align 1
@.str.162 = private unnamed_addr constant [5 x i8] c"text\00", align 1
@.str.163 = private unnamed_addr constant [15 x i8] c"exception text\00", align 1
@.str.164 = private unnamed_addr constant [20 x i8] c"print_file_and_line\00", align 1
@.str.165 = private unnamed_addr constant [30 x i8] c"exception print_file_and_line\00", align 1
@.str.166 = private unnamed_addr constant [25 x i8] c"tuple index out of range\00", align 1
@.str.167 = private unnamed_addr constant [22 x i8] c"Improper indentation.\00", align 1
@.str.168 = private unnamed_addr constant [37 x i8] c"Improper mixture of spaces and tabs.\00", align 1
@.str.169 = private unnamed_addr constant [30 x i8] c"Base class for lookup errors.\00", align 1
@.str.170 = private unnamed_addr constant [29 x i8] c"Sequence index out of range.\00", align 1
@.str.171 = private unnamed_addr constant [23 x i8] c"Mapping key not found.\00", align 1
@.str.172 = private unnamed_addr constant [48 x i8] c"Inappropriate argument value (of correct type).\00", align 1
@.str.173 = private unnamed_addr constant [23 x i8] c"Unicode related error.\00", align 1
@.str.174 = private unnamed_addr constant [25 x i8] c"%.200s attribute not set\00", align 1
@.str.175 = private unnamed_addr constant [33 x i8] c"%.200s attribute must be unicode\00", align 1
@.str.176 = private unnamed_addr constant [31 x i8] c"%.200s attribute must be bytes\00", align 1
@.str.177 = private unnamed_addr constant [24 x i8] c"Unicode encoding error.\00", align 1
@UnicodeError_members = internal global [6 x %struct.PyMemberDef] [%struct.PyMemberDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 6, i64 64, i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.182, i32 0, i32 0) }, %struct.PyMemberDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), i32 6, i64 72, i32 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.183, i32 0, i32 0) }, %struct.PyMemberDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.184, i32 0, i32 0), i32 19, i64 80, i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.185, i32 0, i32 0) }, %struct.PyMemberDef { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.186, i32 0, i32 0), i32 19, i64 88, i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.187, i32 0, i32 0) }, %struct.PyMemberDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i32 0, i32 0), i32 6, i64 96, i32 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.188, i32 0, i32 0) }, %struct.PyMemberDef zeroinitializer], align 16
@.str.178 = private unnamed_addr constant [63 x i8] c"'%U' codec can't encode character '\5Cx%02x' in position %zd: %U\00", align 1
@.str.179 = private unnamed_addr constant [63 x i8] c"'%U' codec can't encode character '\5Cu%04x' in position %zd: %U\00", align 1
@.str.180 = private unnamed_addr constant [63 x i8] c"'%U' codec can't encode character '\5CU%08x' in position %zd: %U\00", align 1
@.str.181 = private unnamed_addr constant [59 x i8] c"'%U' codec can't encode characters in position %zd-%zd: %U\00", align 1
@.str.182 = private unnamed_addr constant [19 x i8] c"exception encoding\00", align 1
@.str.183 = private unnamed_addr constant [17 x i8] c"exception object\00", align 1
@.str.184 = private unnamed_addr constant [6 x i8] c"start\00", align 1
@.str.185 = private unnamed_addr constant [16 x i8] c"exception start\00", align 1
@.str.186 = private unnamed_addr constant [4 x i8] c"end\00", align 1
@.str.187 = private unnamed_addr constant [14 x i8] c"exception end\00", align 1
@.str.188 = private unnamed_addr constant [17 x i8] c"exception reason\00", align 1
@.str.189 = private unnamed_addr constant [9 x i8] c"O!O!nnO!\00", align 1
@.str.190 = private unnamed_addr constant [24 x i8] c"Unicode decoding error.\00", align 1
@.str.191 = private unnamed_addr constant [56 x i8] c"'%U' codec can't decode byte 0x%02x in position %zd: %U\00", align 1
@.str.192 = private unnamed_addr constant [54 x i8] c"'%U' codec can't decode bytes in position %zd-%zd: %U\00", align 1
@.str.193 = private unnamed_addr constant [8 x i8] c"O!OnnO!\00", align 1
@.str.194 = private unnamed_addr constant [27 x i8] c"Unicode translation error.\00", align 1
@.str.195 = private unnamed_addr constant [55 x i8] c"can't translate character '\5Cx%02x' in position %zd: %U\00", align 1
@.str.196 = private unnamed_addr constant [55 x i8] c"can't translate character '\5Cu%04x' in position %zd: %U\00", align 1
@.str.197 = private unnamed_addr constant [55 x i8] c"can't translate character '\5CU%08x' in position %zd: %U\00", align 1
@.str.198 = private unnamed_addr constant [51 x i8] c"can't translate characters in position %zd-%zd: %U\00", align 1
@.str.199 = private unnamed_addr constant [7 x i8] c"O!nnO!\00", align 1
@.str.200 = private unnamed_addr constant [18 x i8] c"Assertion failed.\00", align 1
@.str.201 = private unnamed_addr constant [34 x i8] c"Base class for arithmetic errors.\00", align 1
@.str.202 = private unnamed_addr constant [33 x i8] c"Floating point operation failed.\00", align 1
@.str.203 = private unnamed_addr constant [36 x i8] c"Result too large to be represented.\00", align 1
@.str.204 = private unnamed_addr constant [60 x i8] c"Second argument to a division or modulo operation was zero.\00", align 1
@.str.205 = private unnamed_addr constant [176 x i8] c"Internal error in the Python interpreter.\0A\0APlease report this to the Python maintainer, along with the traceback,\0Athe Python version, and the hardware/OS platform and version.\00", align 1
@.str.206 = private unnamed_addr constant [46 x i8] c"Weak ref proxy used after referent went away.\00", align 1
@.str.207 = private unnamed_addr constant [15 x i8] c"Out of memory.\00", align 1
@memerrors_numfree = internal unnamed_addr global i32 0, align 4
@memerrors_freelist = internal unnamed_addr global %struct.PyBaseExceptionObject* null, align 8
@.str.208 = private unnamed_addr constant [26 x i8] c"GC object already tracked\00", align 1
@_PyGC_generation0 = external global %union._gc_head*, align 8
@.str.209 = private unnamed_addr constant [14 x i8] c"Buffer error.\00", align 1
@.str.210 = private unnamed_addr constant [35 x i8] c"Base class for warning categories.\00", align 1
@.str.211 = private unnamed_addr constant [48 x i8] c"Base class for warnings generated by user code.\00", align 1
@.str.212 = private unnamed_addr constant [51 x i8] c"Base class for warnings about deprecated features.\00", align 1
@.str.213 = private unnamed_addr constant [79 x i8] c"Base class for warnings about features which will be deprecated\0Ain the future.\00", align 1
@.str.214 = private unnamed_addr constant [46 x i8] c"Base class for warnings about dubious syntax.\00", align 1
@.str.215 = private unnamed_addr constant [56 x i8] c"Base class for warnings about dubious runtime behavior.\00", align 1
@.str.216 = private unnamed_addr constant [86 x i8] c"Base class for warnings about constructs that will change semantically\0Ain the future.\00", align 1
@.str.217 = private unnamed_addr constant [66 x i8] c"Base class for warnings about probable mistakes in module imports\00", align 1
@.str.218 = private unnamed_addr constant [95 x i8] c"Base class for warnings about Unicode related problems, mostly\0Arelated to conversion problems.\00", align 1
@.str.219 = private unnamed_addr constant [124 x i8] c"Base class for warnings about bytes and buffer related problems, mostly\0Arelated to conversion from str or comparing to str.\00", align 1
@.str.220 = private unnamed_addr constant [46 x i8] c"Base class for warnings about resource usage.\00", align 1
@.str.221 = private unnamed_addr constant [41 x i8] c"Could not preallocate MemoryError object\00", align 1

; Function Attrs: nounwind uwtable
define %struct._object* @PyException_GetTraceback(%struct._object* nocapture readonly %self) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !491, metadata !1974), !dbg !1975
  %traceback = getelementptr inbounds %struct._object, %struct._object* %self, i64 2, !dbg !1976
  %0 = bitcast %struct._object* %traceback to %struct._object**, !dbg !1976
  %1 = load %struct._object*, %struct._object** %0, align 8, !dbg !1978, !tbaa !1979
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !493, metadata !1974), !dbg !1976
  %cmp = icmp eq %struct._object* %1, null, !dbg !1986
  br i1 %cmp, label %if.end, label %if.then, !dbg !1988

if.then:                                          ; preds = %entry
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !1989
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !1989, !tbaa !1991
  %inc = add i64 %2, 1, !dbg !1989
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !1989, !tbaa !1991
  br label %if.end, !dbg !1989

if.end:                                           ; preds = %entry, %if.then
  ret %struct._object* %1, !dbg !1992
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #2

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #2

; Function Attrs: nounwind uwtable
define i32 @PyException_SetTraceback(%struct._object* nocapture %self, %struct._object* %tb) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !497, metadata !1974), !dbg !1993
  tail call void @llvm.dbg.value(metadata %struct._object* %tb, i64 0, metadata !498, metadata !1974), !dbg !1994
  tail call void @llvm.dbg.value(metadata %struct._object* %tb, i64 0, metadata !848, metadata !1974) #2, !dbg !1995
  %cmp.i = icmp eq %struct._object* %tb, null, !dbg !1997
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !1999

if.then.i:                                        ; preds = %entry
  %0 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2000, !tbaa !2002
  tail call void @PyErr_SetString(%struct._object* %0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.80, i64 0, i64 0)) #2, !dbg !2003
  br label %BaseException_set_tb.exit, !dbg !2004

if.else.i:                                        ; preds = %entry
  %cmp1.i = icmp eq %struct._object* %tb, @_Py_NoneStruct, !dbg !2005
  br i1 %cmp1.i, label %if.end.7.i, label %lor.lhs.false.i, !dbg !2007

lor.lhs.false.i:                                  ; preds = %if.else.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %tb, i64 0, i32 1, !dbg !2008
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !2008, !tbaa !2010
  %cmp2.i = icmp eq %struct._typeobject* %1, @PyTraceBack_Type, !dbg !2008
  br i1 %cmp2.i, label %if.end.7.i, label %if.then.3.i, !dbg !2011

if.then.3.i:                                      ; preds = %lor.lhs.false.i
  %2 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2012, !tbaa !2002
  tail call void @PyErr_SetString(%struct._object* %2, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.81, i64 0, i64 0)) #2, !dbg !2014
  br label %BaseException_set_tb.exit, !dbg !2015

if.end.7.i:                                       ; preds = %lor.lhs.false.i, %if.else.i
  tail call void @llvm.dbg.value(metadata %struct._object* %tb, i64 0, metadata !849, metadata !1974) #2, !dbg !2016
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %tb, i64 0, i32 0, !dbg !2018
  %3 = load i64, i64* %ob_refcnt.i, align 8, !dbg !2018, !tbaa !1991
  %inc.i = add i64 %3, 1, !dbg !2018
  store i64 %inc.i, i64* %ob_refcnt.i, align 8, !dbg !2018, !tbaa !1991
  %traceback.i = getelementptr inbounds %struct._object, %struct._object* %self, i64 2, !dbg !2021
  %4 = bitcast %struct._object* %traceback.i to %struct._object**, !dbg !2021
  %5 = load %struct._object*, %struct._object** %4, align 8, !dbg !2021, !tbaa !1979
  tail call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !851, metadata !1974) #2, !dbg !2021
  %cmp9.i = icmp eq %struct._object* %5, null, !dbg !2023
  br i1 %cmp9.i, label %if.end.19.i, label %do.body.11.i, !dbg !2024

do.body.11.i:                                     ; preds = %if.end.7.i
  tail call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !853, metadata !1974) #2, !dbg !2025
  %ob_refcnt12.i = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 0, !dbg !2027
  %6 = load i64, i64* %ob_refcnt12.i, align 8, !dbg !2027, !tbaa !1991
  %dec.i = add i64 %6, -1, !dbg !2027
  store i64 %dec.i, i64* %ob_refcnt12.i, align 8, !dbg !2027, !tbaa !1991
  %cmp13.i = icmp eq i64 %dec.i, 0, !dbg !2027
  br i1 %cmp13.i, label %if.else.15.i, label %if.end.19.i, !dbg !2029

if.else.15.i:                                     ; preds = %do.body.11.i
  %ob_type16.i = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 1, !dbg !2030
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type16.i, align 8, !dbg !2030, !tbaa !2010
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i64 0, i32 4, !dbg !2030
  %8 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !2030, !tbaa !2032
  tail call void %8(%struct._object* %5) #2, !dbg !2030
  br label %if.end.19.i, !dbg !2036

if.end.19.i:                                      ; preds = %if.else.15.i, %do.body.11.i, %if.end.7.i
  store %struct._object* %tb, %struct._object** %4, align 8, !dbg !2037, !tbaa !1979
  br label %BaseException_set_tb.exit, !dbg !2038

BaseException_set_tb.exit:                        ; preds = %if.then.i, %if.then.3.i, %if.end.19.i
  %retval.0.i = phi i32 [ -1, %if.then.i ], [ 0, %if.end.19.i ], [ -1, %if.then.3.i ], !dbg !2036
  ret i32 %retval.0.i, !dbg !2039
}

; Function Attrs: nounwind uwtable
define internal i32 @BaseException_set_tb(%struct.PyBaseExceptionObject* nocapture %self, %struct._object* %tb) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PyBaseExceptionObject* %self, i64 0, metadata !847, metadata !1974), !dbg !2040
  tail call void @llvm.dbg.value(metadata %struct._object* %tb, i64 0, metadata !848, metadata !1974), !dbg !2041
  %cmp = icmp eq %struct._object* %tb, null, !dbg !2042
  br i1 %cmp, label %if.then, label %if.else, !dbg !2043

if.then:                                          ; preds = %entry
  %0 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2044, !tbaa !2002
  tail call void @PyErr_SetString(%struct._object* %0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.80, i64 0, i64 0)) #2, !dbg !2045
  br label %return, !dbg !2046

if.else:                                          ; preds = %entry
  %cmp1 = icmp eq %struct._object* %tb, @_Py_NoneStruct, !dbg !2047
  br i1 %cmp1, label %if.end.7, label %lor.lhs.false, !dbg !2048

lor.lhs.false:                                    ; preds = %if.else
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %tb, i64 0, i32 1, !dbg !2049
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2049, !tbaa !2010
  %cmp2 = icmp eq %struct._typeobject* %1, @PyTraceBack_Type, !dbg !2049
  br i1 %cmp2, label %if.end.7, label %if.then.3, !dbg !2050

if.then.3:                                        ; preds = %lor.lhs.false
  %2 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2051, !tbaa !2002
  tail call void @PyErr_SetString(%struct._object* %2, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.81, i64 0, i64 0)) #2, !dbg !2052
  br label %return, !dbg !2053

if.end.7:                                         ; preds = %lor.lhs.false, %if.else
  tail call void @llvm.dbg.value(metadata %struct._object* %tb, i64 0, metadata !849, metadata !1974), !dbg !2054
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %tb, i64 0, i32 0, !dbg !2055
  %3 = load i64, i64* %ob_refcnt, align 8, !dbg !2055, !tbaa !1991
  %inc = add i64 %3, 1, !dbg !2055
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !2055, !tbaa !1991
  %traceback = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %self, i64 0, i32 3, !dbg !2056
  %4 = load %struct._object*, %struct._object** %traceback, align 8, !dbg !2056, !tbaa !1979
  tail call void @llvm.dbg.value(metadata %struct._object* %4, i64 0, metadata !851, metadata !1974), !dbg !2056
  %cmp9 = icmp eq %struct._object* %4, null, !dbg !2057
  br i1 %cmp9, label %if.end.19, label %do.body.11, !dbg !2058

do.body.11:                                       ; preds = %if.end.7
  tail call void @llvm.dbg.value(metadata %struct._object* %4, i64 0, metadata !853, metadata !1974), !dbg !2059
  %ob_refcnt12 = getelementptr inbounds %struct._object, %struct._object* %4, i64 0, i32 0, !dbg !2060
  %5 = load i64, i64* %ob_refcnt12, align 8, !dbg !2060, !tbaa !1991
  %dec = add i64 %5, -1, !dbg !2060
  store i64 %dec, i64* %ob_refcnt12, align 8, !dbg !2060, !tbaa !1991
  %cmp13 = icmp eq i64 %dec, 0, !dbg !2060
  br i1 %cmp13, label %if.else.15, label %if.end.19, !dbg !2061

if.else.15:                                       ; preds = %do.body.11
  %ob_type16 = getelementptr inbounds %struct._object, %struct._object* %4, i64 0, i32 1, !dbg !2062
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type16, align 8, !dbg !2062, !tbaa !2010
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i64 0, i32 4, !dbg !2062
  %7 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2062, !tbaa !2032
  tail call void %7(%struct._object* %4) #2, !dbg !2062
  br label %if.end.19

if.end.19:                                        ; preds = %if.else.15, %do.body.11, %if.end.7
  store %struct._object* %tb, %struct._object** %traceback, align 8, !dbg !2063, !tbaa !1979
  br label %return, !dbg !2064

return:                                           ; preds = %if.end.19, %if.then.3, %if.then
  %retval.0 = phi i32 [ -1, %if.then ], [ 0, %if.end.19 ], [ -1, %if.then.3 ]
  ret i32 %retval.0, !dbg !2065
}

; Function Attrs: nounwind uwtable
define %struct._object* @PyException_GetCause(%struct._object* nocapture readonly %self) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !501, metadata !1974), !dbg !2066
  %cause1 = getelementptr inbounds %struct._object, %struct._object* %self, i64 3, !dbg !2067
  %0 = bitcast %struct._object* %cause1 to %struct._object**, !dbg !2067
  %1 = load %struct._object*, %struct._object** %0, align 8, !dbg !2067, !tbaa !2068
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !502, metadata !1974), !dbg !2069
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !503, metadata !1974), !dbg !2070
  %cmp = icmp eq %struct._object* %1, null, !dbg !2072
  br i1 %cmp, label %if.end, label %if.then, !dbg !2074

if.then:                                          ; preds = %entry
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !2075
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !2075, !tbaa !1991
  %inc = add i64 %2, 1, !dbg !2075
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !2075, !tbaa !1991
  br label %if.end, !dbg !2075

if.end:                                           ; preds = %entry, %if.then
  ret %struct._object* %1, !dbg !2077
}

; Function Attrs: nounwind uwtable
define void @PyException_SetCause(%struct._object* nocapture %self, %struct._object* %cause) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !509, metadata !1974), !dbg !2078
  tail call void @llvm.dbg.value(metadata %struct._object* %cause, i64 0, metadata !510, metadata !1974), !dbg !2079
  %cause1 = getelementptr inbounds %struct._object, %struct._object* %self, i64 3, !dbg !2080
  %0 = bitcast %struct._object* %cause1 to %struct._object**, !dbg !2080
  %1 = load %struct._object*, %struct._object** %0, align 8, !dbg !2080, !tbaa !2068
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !511, metadata !1974), !dbg !2081
  store %struct._object* %cause, %struct._object** %0, align 8, !dbg !2082, !tbaa !2068
  %suppress_context = getelementptr inbounds %struct._object, %struct._object* %self, i64 3, i32 1, !dbg !2083
  %2 = bitcast %struct._typeobject** %suppress_context to i8*, !dbg !2083
  store i8 1, i8* %2, align 1, !dbg !2084, !tbaa !2085
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !512, metadata !1974), !dbg !2086
  %cmp = icmp eq %struct._object* %1, null, !dbg !2088
  br i1 %cmp, label %if.end.6, label %do.body.3, !dbg !2089

do.body.3:                                        ; preds = %entry
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !514, metadata !1974), !dbg !2090
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !2092
  %3 = load i64, i64* %ob_refcnt, align 8, !dbg !2092, !tbaa !1991
  %dec = add i64 %3, -1, !dbg !2092
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !2092, !tbaa !1991
  %cmp4 = icmp eq i64 %dec, 0, !dbg !2092
  br i1 %cmp4, label %if.else, label %if.end.6, !dbg !2094

if.else:                                          ; preds = %do.body.3
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !2095
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2095, !tbaa !2010
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i64 0, i32 4, !dbg !2095
  %5 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2095, !tbaa !2032
  tail call void %5(%struct._object* %1) #2, !dbg !2095
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %do.body.3, %entry
  ret void, !dbg !2097
}

; Function Attrs: nounwind uwtable
define %struct._object* @PyException_GetContext(%struct._object* nocapture readonly %self) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !519, metadata !1974), !dbg !2098
  %context1 = getelementptr inbounds %struct._object, %struct._object* %self, i64 2, i32 1, !dbg !2099
  %0 = bitcast %struct._typeobject** %context1 to %struct._object**, !dbg !2099
  %1 = load %struct._object*, %struct._object** %0, align 8, !dbg !2099, !tbaa !2100
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !520, metadata !1974), !dbg !2101
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !521, metadata !1974), !dbg !2102
  %cmp = icmp eq %struct._object* %1, null, !dbg !2104
  br i1 %cmp, label %if.end, label %if.then, !dbg !2106

if.then:                                          ; preds = %entry
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !2107
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !2107, !tbaa !1991
  %inc = add i64 %2, 1, !dbg !2107
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !2107, !tbaa !1991
  br label %if.end, !dbg !2107

if.end:                                           ; preds = %entry, %if.then
  ret %struct._object* %1, !dbg !2109
}

; Function Attrs: nounwind uwtable
define void @PyException_SetContext(%struct._object* nocapture %self, %struct._object* %context) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !525, metadata !1974), !dbg !2110
  tail call void @llvm.dbg.value(metadata %struct._object* %context, i64 0, metadata !526, metadata !1974), !dbg !2111
  %context1 = getelementptr inbounds %struct._object, %struct._object* %self, i64 2, i32 1, !dbg !2112
  %0 = bitcast %struct._typeobject** %context1 to %struct._object**, !dbg !2112
  %1 = load %struct._object*, %struct._object** %0, align 8, !dbg !2112, !tbaa !2100
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !527, metadata !1974), !dbg !2113
  store %struct._object* %context, %struct._object** %0, align 8, !dbg !2114, !tbaa !2100
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !528, metadata !1974), !dbg !2115
  %cmp = icmp eq %struct._object* %1, null, !dbg !2117
  br i1 %cmp, label %if.end.6, label %do.body.3, !dbg !2118

do.body.3:                                        ; preds = %entry
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !530, metadata !1974), !dbg !2119
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !2121
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !2121, !tbaa !1991
  %dec = add i64 %2, -1, !dbg !2121
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !2121, !tbaa !1991
  %cmp4 = icmp eq i64 %dec, 0, !dbg !2121
  br i1 %cmp4, label %if.else, label %if.end.6, !dbg !2123

if.else:                                          ; preds = %do.body.3
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !2124
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2124, !tbaa !2010
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 4, !dbg !2124
  %4 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2124, !tbaa !2032
  tail call void %4(%struct._object* %1) #2, !dbg !2124
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %do.body.3, %entry
  ret void, !dbg !2126
}

; Function Attrs: nounwind uwtable
define %struct._object* @PyUnicodeEncodeError_GetEncoding(%struct._object* nocapture readonly %exc) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %exc, i64 0, metadata !535, metadata !1974), !dbg !2127
  %encoding = getelementptr inbounds %struct._object, %struct._object* %exc, i64 4, !dbg !2128
  %0 = bitcast %struct._object* %encoding to %struct._object**, !dbg !2128
  %1 = load %struct._object*, %struct._object** %0, align 8, !dbg !2128, !tbaa !2129
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1557, metadata !1974) #2, !dbg !2131
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i64 0, metadata !1558, metadata !1974) #2, !dbg !2133
  %tobool.i = icmp eq %struct._object* %1, null, !dbg !2134
  br i1 %tobool.i, label %if.then.i, label %if.end.i, !dbg !2136

if.then.i:                                        ; preds = %entry
  %2 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2137, !tbaa !2002
  %call.i = tail call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.174, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)) #2, !dbg !2139
  br label %get_unicode.exit, !dbg !2140

if.end.i:                                         ; preds = %entry
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !2141
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !2141, !tbaa !2010
  %tp_flags.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 19, !dbg !2141
  %4 = load i64, i64* %tp_flags.i, align 8, !dbg !2141, !tbaa !2143
  %and.i = and i64 %4, 268435456, !dbg !2141
  %cmp.i = icmp eq i64 %and.i, 0, !dbg !2141
  br i1 %cmp.i, label %if.then.1.i, label %if.end.3.i, !dbg !2144

if.then.1.i:                                      ; preds = %if.end.i
  %5 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2145, !tbaa !2002
  %call2.i = tail call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %5, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.175, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)) #2, !dbg !2147
  br label %get_unicode.exit, !dbg !2148

if.end.3.i:                                       ; preds = %if.end.i
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !2149
  %6 = load i64, i64* %ob_refcnt.i, align 8, !dbg !2149, !tbaa !1991
  %inc.i = add i64 %6, 1, !dbg !2149
  store i64 %inc.i, i64* %ob_refcnt.i, align 8, !dbg !2149, !tbaa !1991
  br label %get_unicode.exit, !dbg !2150

get_unicode.exit:                                 ; preds = %if.then.i, %if.then.1.i, %if.end.3.i
  %retval.0.i = phi %struct._object* [ %1, %if.end.3.i ], [ null, %if.then.1.i ], [ null, %if.then.i ], !dbg !2151
  ret %struct._object* %retval.0.i, !dbg !2152
}

; Function Attrs: nounwind uwtable
define %struct._object* @PyUnicodeDecodeError_GetEncoding(%struct._object* nocapture readonly %exc) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %exc, i64 0, metadata !538, metadata !1974), !dbg !2153
  %encoding = getelementptr inbounds %struct._object, %struct._object* %exc, i64 4, !dbg !2154
  %0 = bitcast %struct._object* %encoding to %struct._object**, !dbg !2154
  %1 = load %struct._object*, %struct._object** %0, align 8, !dbg !2154, !tbaa !2129
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1557, metadata !1974) #2, !dbg !2155
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i64 0, metadata !1558, metadata !1974) #2, !dbg !2157
  %tobool.i = icmp eq %struct._object* %1, null, !dbg !2158
  br i1 %tobool.i, label %if.then.i, label %if.end.i, !dbg !2159

if.then.i:                                        ; preds = %entry
  %2 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2160, !tbaa !2002
  %call.i = tail call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.174, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)) #2, !dbg !2161
  br label %get_unicode.exit, !dbg !2162

if.end.i:                                         ; preds = %entry
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !2163
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !2163, !tbaa !2010
  %tp_flags.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 19, !dbg !2163
  %4 = load i64, i64* %tp_flags.i, align 8, !dbg !2163, !tbaa !2143
  %and.i = and i64 %4, 268435456, !dbg !2163
  %cmp.i = icmp eq i64 %and.i, 0, !dbg !2163
  br i1 %cmp.i, label %if.then.1.i, label %if.end.3.i, !dbg !2164

if.then.1.i:                                      ; preds = %if.end.i
  %5 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2165, !tbaa !2002
  %call2.i = tail call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %5, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.175, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)) #2, !dbg !2166
  br label %get_unicode.exit, !dbg !2167

if.end.3.i:                                       ; preds = %if.end.i
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !2168
  %6 = load i64, i64* %ob_refcnt.i, align 8, !dbg !2168, !tbaa !1991
  %inc.i = add i64 %6, 1, !dbg !2168
  store i64 %inc.i, i64* %ob_refcnt.i, align 8, !dbg !2168, !tbaa !1991
  br label %get_unicode.exit, !dbg !2169

get_unicode.exit:                                 ; preds = %if.then.i, %if.then.1.i, %if.end.3.i
  %retval.0.i = phi %struct._object* [ %1, %if.end.3.i ], [ null, %if.then.1.i ], [ null, %if.then.i ], !dbg !2170
  ret %struct._object* %retval.0.i, !dbg !2171
}

; Function Attrs: nounwind uwtable
define %struct._object* @PyUnicodeEncodeError_GetObject(%struct._object* nocapture readonly %exc) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %exc, i64 0, metadata !541, metadata !1974), !dbg !2172
  %object = getelementptr inbounds %struct._object, %struct._object* %exc, i64 4, i32 1, !dbg !2173
  %0 = bitcast %struct._typeobject** %object to %struct._object**, !dbg !2173
  %1 = load %struct._object*, %struct._object** %0, align 8, !dbg !2173, !tbaa !2174
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1557, metadata !1974) #2, !dbg !2175
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i64 0, metadata !1558, metadata !1974) #2, !dbg !2177
  %tobool.i = icmp eq %struct._object* %1, null, !dbg !2178
  br i1 %tobool.i, label %if.then.i, label %if.end.i, !dbg !2179

if.then.i:                                        ; preds = %entry
  %2 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2180, !tbaa !2002
  %call.i = tail call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.174, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #2, !dbg !2181
  br label %get_unicode.exit, !dbg !2182

if.end.i:                                         ; preds = %entry
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !2183
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !2183, !tbaa !2010
  %tp_flags.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 19, !dbg !2183
  %4 = load i64, i64* %tp_flags.i, align 8, !dbg !2183, !tbaa !2143
  %and.i = and i64 %4, 268435456, !dbg !2183
  %cmp.i = icmp eq i64 %and.i, 0, !dbg !2183
  br i1 %cmp.i, label %if.then.1.i, label %if.end.3.i, !dbg !2184

if.then.1.i:                                      ; preds = %if.end.i
  %5 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2185, !tbaa !2002
  %call2.i = tail call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %5, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.175, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #2, !dbg !2186
  br label %get_unicode.exit, !dbg !2187

if.end.3.i:                                       ; preds = %if.end.i
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !2188
  %6 = load i64, i64* %ob_refcnt.i, align 8, !dbg !2188, !tbaa !1991
  %inc.i = add i64 %6, 1, !dbg !2188
  store i64 %inc.i, i64* %ob_refcnt.i, align 8, !dbg !2188, !tbaa !1991
  br label %get_unicode.exit, !dbg !2189

get_unicode.exit:                                 ; preds = %if.then.i, %if.then.1.i, %if.end.3.i
  %retval.0.i = phi %struct._object* [ %1, %if.end.3.i ], [ null, %if.then.1.i ], [ null, %if.then.i ], !dbg !2190
  ret %struct._object* %retval.0.i, !dbg !2191
}

; Function Attrs: nounwind uwtable
define %struct._object* @PyUnicodeDecodeError_GetObject(%struct._object* nocapture readonly %exc) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %exc, i64 0, metadata !544, metadata !1974), !dbg !2192
  %object = getelementptr inbounds %struct._object, %struct._object* %exc, i64 4, i32 1, !dbg !2193
  %0 = bitcast %struct._typeobject** %object to %struct._object**, !dbg !2193
  %1 = load %struct._object*, %struct._object** %0, align 8, !dbg !2193, !tbaa !2174
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), i64 0, metadata !1562, metadata !1974) #2, !dbg !2194
  %tobool.i = icmp eq %struct._object* %1, null, !dbg !2196
  br i1 %tobool.i, label %if.then.i, label %if.end.i, !dbg !2198

if.then.i:                                        ; preds = %entry
  %2 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2199, !tbaa !2002
  %call.i = tail call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.174, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #2, !dbg !2201
  br label %get_string.exit, !dbg !2202

if.end.i:                                         ; preds = %entry
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !2203
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !2203, !tbaa !2010
  %tp_flags.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 19, !dbg !2203
  %4 = load i64, i64* %tp_flags.i, align 8, !dbg !2203, !tbaa !2143
  %and.i = and i64 %4, 134217728, !dbg !2203
  %cmp.i = icmp eq i64 %and.i, 0, !dbg !2203
  br i1 %cmp.i, label %if.then.1.i, label %if.end.3.i, !dbg !2205

if.then.1.i:                                      ; preds = %if.end.i
  %5 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2206, !tbaa !2002
  %call2.i = tail call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %5, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.176, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #2, !dbg !2208
  br label %get_string.exit, !dbg !2209

if.end.3.i:                                       ; preds = %if.end.i
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !2210
  %6 = load i64, i64* %ob_refcnt.i, align 8, !dbg !2210, !tbaa !1991
  %inc.i = add i64 %6, 1, !dbg !2210
  store i64 %inc.i, i64* %ob_refcnt.i, align 8, !dbg !2210, !tbaa !1991
  br label %get_string.exit, !dbg !2211

get_string.exit:                                  ; preds = %if.then.i, %if.then.1.i, %if.end.3.i
  %retval.0.i = phi %struct._object* [ %1, %if.end.3.i ], [ null, %if.then.1.i ], [ null, %if.then.i ], !dbg !2212
  ret %struct._object* %retval.0.i, !dbg !2213
}

; Function Attrs: nounwind uwtable
define %struct._object* @PyUnicodeTranslateError_GetObject(%struct._object* nocapture readonly %exc) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %exc, i64 0, metadata !547, metadata !1974), !dbg !2214
  %object = getelementptr inbounds %struct._object, %struct._object* %exc, i64 4, i32 1, !dbg !2215
  %0 = bitcast %struct._typeobject** %object to %struct._object**, !dbg !2215
  %1 = load %struct._object*, %struct._object** %0, align 8, !dbg !2215, !tbaa !2174
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1557, metadata !1974) #2, !dbg !2216
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i64 0, metadata !1558, metadata !1974) #2, !dbg !2218
  %tobool.i = icmp eq %struct._object* %1, null, !dbg !2219
  br i1 %tobool.i, label %if.then.i, label %if.end.i, !dbg !2220

if.then.i:                                        ; preds = %entry
  %2 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2221, !tbaa !2002
  %call.i = tail call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.174, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #2, !dbg !2222
  br label %get_unicode.exit, !dbg !2223

if.end.i:                                         ; preds = %entry
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !2224
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !2224, !tbaa !2010
  %tp_flags.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 19, !dbg !2224
  %4 = load i64, i64* %tp_flags.i, align 8, !dbg !2224, !tbaa !2143
  %and.i = and i64 %4, 268435456, !dbg !2224
  %cmp.i = icmp eq i64 %and.i, 0, !dbg !2224
  br i1 %cmp.i, label %if.then.1.i, label %if.end.3.i, !dbg !2225

if.then.1.i:                                      ; preds = %if.end.i
  %5 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2226, !tbaa !2002
  %call2.i = tail call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %5, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.175, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #2, !dbg !2227
  br label %get_unicode.exit, !dbg !2228

if.end.3.i:                                       ; preds = %if.end.i
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !2229
  %6 = load i64, i64* %ob_refcnt.i, align 8, !dbg !2229, !tbaa !1991
  %inc.i = add i64 %6, 1, !dbg !2229
  store i64 %inc.i, i64* %ob_refcnt.i, align 8, !dbg !2229, !tbaa !1991
  br label %get_unicode.exit, !dbg !2230

get_unicode.exit:                                 ; preds = %if.then.i, %if.then.1.i, %if.end.3.i
  %retval.0.i = phi %struct._object* [ %1, %if.end.3.i ], [ null, %if.then.1.i ], [ null, %if.then.i ], !dbg !2231
  ret %struct._object* %retval.0.i, !dbg !2232
}

; Function Attrs: nounwind uwtable
define i32 @PyUnicodeEncodeError_GetStart(%struct._object* nocapture readonly %exc, i64* nocapture %start) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %exc, i64 0, metadata !552, metadata !1974), !dbg !2233
  tail call void @llvm.dbg.value(metadata i64* %start, i64 0, metadata !553, metadata !1974), !dbg !2234
  %object = getelementptr inbounds %struct._object, %struct._object* %exc, i64 4, i32 1, !dbg !2235
  %0 = bitcast %struct._typeobject** %object to %struct._object**, !dbg !2235
  %1 = load %struct._object*, %struct._object** %0, align 8, !dbg !2235, !tbaa !2174
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1557, metadata !1974) #2, !dbg !2236
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i64 0, metadata !1558, metadata !1974) #2, !dbg !2238
  %tobool.i = icmp eq %struct._object* %1, null, !dbg !2239
  br i1 %tobool.i, label %if.then.i, label %if.end.i, !dbg !2240

if.then.i:                                        ; preds = %entry
  %2 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2241, !tbaa !2002
  %call.i = tail call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.174, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #2, !dbg !2242
  br label %cleanup, !dbg !2243

if.end.i:                                         ; preds = %entry
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !2244
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !2245, !tbaa !2010
  %tp_flags.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 19, !dbg !2244
  %4 = load i64, i64* %tp_flags.i, align 8, !dbg !2244, !tbaa !2143
  %and.i = and i64 %4, 268435456, !dbg !2244
  %cmp.i = icmp eq i64 %and.i, 0, !dbg !2244
  br i1 %cmp.i, label %if.then.1.i, label %if.end, !dbg !2248

if.then.1.i:                                      ; preds = %if.end.i
  %5 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2249, !tbaa !2002
  %call2.i = tail call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %5, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.175, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #2, !dbg !2250
  br label %cleanup, !dbg !2251

if.end:                                           ; preds = %if.end.i
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !2252
  %6 = load i64, i64* %ob_refcnt.i, align 8, !dbg !2252, !tbaa !1991
  %inc.i = add i64 %6, 1, !dbg !2252
  store i64 %inc.i, i64* %ob_refcnt.i, align 8, !dbg !2252, !tbaa !1991
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !555, metadata !1974), !dbg !2253
  %7 = getelementptr inbounds %struct._object, %struct._object* %exc, i64 5, i32 0, !dbg !2254
  %8 = load i64, i64* %7, align 8, !dbg !2254, !tbaa !2255
  store i64 %8, i64* %start, align 8, !dbg !2256, !tbaa !2257
  %9 = getelementptr inbounds %struct._object, %struct._object* %1, i64 1, i32 0, !dbg !2258
  %10 = load i64, i64* %9, align 8, !dbg !2258, !tbaa !2259
  tail call void @llvm.dbg.value(metadata i64 %10, i64 0, metadata !554, metadata !1974), !dbg !2262
  %cmp = icmp slt i64 %8, 0, !dbg !2263
  %. = select i1 %cmp, i64 0, i64 %8, !dbg !2265
  %cmp4 = icmp slt i64 %., %10, !dbg !2266
  %sub = add i64 %10, -1, !dbg !2268
  %..sub = select i1 %cmp4, i64 %., i64 %sub, !dbg !2269
  store i64 %..sub, i64* %start, align 8, !dbg !2270, !tbaa !2257
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !556, metadata !1974), !dbg !2271
  %11 = load i64, i64* %ob_refcnt.i, align 8, !dbg !2273, !tbaa !1991
  %dec = add i64 %11, -1, !dbg !2273
  store i64 %dec, i64* %ob_refcnt.i, align 8, !dbg !2273, !tbaa !1991
  %cmp7 = icmp eq i64 %dec, 0, !dbg !2273
  br i1 %cmp7, label %if.else, label %cleanup, !dbg !2274

if.else:                                          ; preds = %if.end
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 4, !dbg !2245
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2245, !tbaa !2032
  tail call void %12(%struct._object* %1) #2, !dbg !2245
  br label %cleanup

cleanup:                                          ; preds = %if.then.i, %if.then.1.i, %if.else, %if.end
  %retval.0 = phi i32 [ 0, %if.end ], [ 0, %if.else ], [ -1, %if.then.1.i ], [ -1, %if.then.i ]
  ret i32 %retval.0, !dbg !2275
}

; Function Attrs: nounwind uwtable
define i32 @PyUnicodeDecodeError_GetStart(%struct._object* nocapture readonly %exc, i64* nocapture %start) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %exc, i64 0, metadata !560, metadata !1974), !dbg !2276
  tail call void @llvm.dbg.value(metadata i64* %start, i64 0, metadata !561, metadata !1974), !dbg !2277
  %object = getelementptr inbounds %struct._object, %struct._object* %exc, i64 4, i32 1, !dbg !2278
  %0 = bitcast %struct._typeobject** %object to %struct._object**, !dbg !2278
  %1 = load %struct._object*, %struct._object** %0, align 8, !dbg !2278, !tbaa !2174
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), i64 0, metadata !1562, metadata !1974) #2, !dbg !2279
  %tobool.i = icmp eq %struct._object* %1, null, !dbg !2281
  br i1 %tobool.i, label %if.then.i, label %if.end.i, !dbg !2282

if.then.i:                                        ; preds = %entry
  %2 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2283, !tbaa !2002
  %call.i = tail call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.174, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #2, !dbg !2284
  br label %cleanup, !dbg !2285

if.end.i:                                         ; preds = %entry
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !2286
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !2287, !tbaa !2010
  %tp_flags.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 19, !dbg !2286
  %4 = load i64, i64* %tp_flags.i, align 8, !dbg !2286, !tbaa !2143
  %and.i = and i64 %4, 134217728, !dbg !2286
  %cmp.i = icmp eq i64 %and.i, 0, !dbg !2286
  br i1 %cmp.i, label %if.then.1.i, label %if.end, !dbg !2290

if.then.1.i:                                      ; preds = %if.end.i
  %5 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2291, !tbaa !2002
  %call2.i = tail call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %5, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.176, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #2, !dbg !2292
  br label %cleanup, !dbg !2293

if.end:                                           ; preds = %if.end.i
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !2294
  %6 = load i64, i64* %ob_refcnt.i, align 8, !dbg !2294, !tbaa !1991
  %inc.i = add i64 %6, 1, !dbg !2294
  store i64 %inc.i, i64* %ob_refcnt.i, align 8, !dbg !2294, !tbaa !1991
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !563, metadata !1974), !dbg !2295
  %7 = getelementptr inbounds %struct._object, %struct._object* %1, i64 1, i32 0, !dbg !2296
  %8 = load i64, i64* %7, align 8, !dbg !2296, !tbaa !2297
  tail call void @llvm.dbg.value(metadata i64 %8, i64 0, metadata !562, metadata !1974), !dbg !2298
  %9 = getelementptr inbounds %struct._object, %struct._object* %exc, i64 5, i32 0, !dbg !2299
  %10 = load i64, i64* %9, align 8, !dbg !2299, !tbaa !2255
  %cmp = icmp slt i64 %10, 0, !dbg !2300
  %. = select i1 %cmp, i64 0, i64 %10, !dbg !2302
  %cmp4 = icmp slt i64 %., %8, !dbg !2303
  %sub = add i64 %8, -1, !dbg !2305
  %storemerge.24 = select i1 %cmp4, i64 %., i64 %sub, !dbg !2306
  store i64 %storemerge.24, i64* %start, align 8, !dbg !2307, !tbaa !2257
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !564, metadata !1974), !dbg !2308
  %11 = load i64, i64* %ob_refcnt.i, align 8, !dbg !2310, !tbaa !1991
  %dec = add i64 %11, -1, !dbg !2310
  store i64 %dec, i64* %ob_refcnt.i, align 8, !dbg !2310, !tbaa !1991
  %cmp7 = icmp eq i64 %dec, 0, !dbg !2310
  br i1 %cmp7, label %if.else, label %cleanup, !dbg !2311

if.else:                                          ; preds = %if.end
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 4, !dbg !2287
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2287, !tbaa !2032
  tail call void %12(%struct._object* %1) #2, !dbg !2287
  br label %cleanup

cleanup:                                          ; preds = %if.then.i, %if.then.1.i, %if.else, %if.end
  %retval.0 = phi i32 [ 0, %if.end ], [ 0, %if.else ], [ -1, %if.then.1.i ], [ -1, %if.then.i ]
  ret i32 %retval.0, !dbg !2312
}

; Function Attrs: nounwind uwtable
define i32 @PyUnicodeTranslateError_GetStart(%struct._object* nocapture readonly %exc, i64* nocapture %start) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %exc, i64 0, metadata !568, metadata !1974), !dbg !2313
  tail call void @llvm.dbg.value(metadata i64* %start, i64 0, metadata !569, metadata !1974), !dbg !2314
  tail call void @llvm.dbg.value(metadata %struct._object* %exc, i64 0, metadata !552, metadata !1974) #2, !dbg !2315
  tail call void @llvm.dbg.value(metadata i64* %start, i64 0, metadata !553, metadata !1974) #2, !dbg !2317
  %object.i = getelementptr inbounds %struct._object, %struct._object* %exc, i64 4, i32 1, !dbg !2318
  %0 = bitcast %struct._typeobject** %object.i to %struct._object**, !dbg !2318
  %1 = load %struct._object*, %struct._object** %0, align 8, !dbg !2318, !tbaa !2174
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1557, metadata !1974) #2, !dbg !2319
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i64 0, metadata !1558, metadata !1974) #2, !dbg !2321
  %tobool.i.i = icmp eq %struct._object* %1, null, !dbg !2322
  br i1 %tobool.i.i, label %if.then.i.i, label %if.end.i.i, !dbg !2323

if.then.i.i:                                      ; preds = %entry
  %2 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2324, !tbaa !2002
  %call.i.i = tail call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.174, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #2, !dbg !2325
  br label %PyUnicodeEncodeError_GetStart.exit, !dbg !2326

if.end.i.i:                                       ; preds = %entry
  %ob_type.i.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !2327
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type.i.i, align 8, !dbg !2328, !tbaa !2010
  %tp_flags.i.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 19, !dbg !2327
  %4 = load i64, i64* %tp_flags.i.i, align 8, !dbg !2327, !tbaa !2143
  %and.i.i = and i64 %4, 268435456, !dbg !2327
  %cmp.i.i = icmp eq i64 %and.i.i, 0, !dbg !2327
  br i1 %cmp.i.i, label %if.then.1.i.i, label %if.end.i, !dbg !2329

if.then.1.i.i:                                    ; preds = %if.end.i.i
  %5 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2330, !tbaa !2002
  %call2.i.i = tail call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %5, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.175, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #2, !dbg !2331
  br label %PyUnicodeEncodeError_GetStart.exit, !dbg !2332

if.end.i:                                         ; preds = %if.end.i.i
  %ob_refcnt.i.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !2333
  %6 = load i64, i64* %ob_refcnt.i.i, align 8, !dbg !2333, !tbaa !1991
  %inc.i.i = add i64 %6, 1, !dbg !2333
  store i64 %inc.i.i, i64* %ob_refcnt.i.i, align 8, !dbg !2333, !tbaa !1991
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !555, metadata !1974) #2, !dbg !2334
  %7 = getelementptr inbounds %struct._object, %struct._object* %exc, i64 5, i32 0, !dbg !2335
  %8 = load i64, i64* %7, align 8, !dbg !2335, !tbaa !2255
  store i64 %8, i64* %start, align 8, !dbg !2336, !tbaa !2257
  %9 = getelementptr inbounds %struct._object, %struct._object* %1, i64 1, i32 0, !dbg !2337
  %10 = load i64, i64* %9, align 8, !dbg !2337, !tbaa !2259
  tail call void @llvm.dbg.value(metadata i64 %10, i64 0, metadata !554, metadata !1974) #2, !dbg !2338
  %cmp.i = icmp slt i64 %8, 0, !dbg !2339
  %..i = select i1 %cmp.i, i64 0, i64 %8, !dbg !2340
  %cmp4.i = icmp slt i64 %..i, %10, !dbg !2341
  %sub.i = add i64 %10, -1, !dbg !2342
  %..sub.i = select i1 %cmp4.i, i64 %..i, i64 %sub.i, !dbg !2343
  store i64 %..sub.i, i64* %start, align 8, !dbg !2344, !tbaa !2257
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !556, metadata !1974) #2, !dbg !2345
  %11 = load i64, i64* %ob_refcnt.i.i, align 8, !dbg !2346, !tbaa !1991
  %dec.i = add i64 %11, -1, !dbg !2346
  store i64 %dec.i, i64* %ob_refcnt.i.i, align 8, !dbg !2346, !tbaa !1991
  %cmp7.i = icmp eq i64 %dec.i, 0, !dbg !2346
  br i1 %cmp7.i, label %if.else.i, label %PyUnicodeEncodeError_GetStart.exit, !dbg !2347

if.else.i:                                        ; preds = %if.end.i
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 4, !dbg !2328
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !2328, !tbaa !2032
  tail call void %12(%struct._object* %1) #2, !dbg !2328
  br label %PyUnicodeEncodeError_GetStart.exit, !dbg !2348

PyUnicodeEncodeError_GetStart.exit:               ; preds = %if.then.i.i, %if.then.1.i.i, %if.end.i, %if.else.i
  %retval.0.i = phi i32 [ 0, %if.end.i ], [ 0, %if.else.i ], [ -1, %if.then.1.i.i ], [ -1, %if.then.i.i ], !dbg !2348
  ret i32 %retval.0.i, !dbg !2349
}

; Function Attrs: nounwind uwtable
define i32 @PyUnicodeEncodeError_SetStart(%struct._object* nocapture %exc, i64 %start) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %exc, i64 0, metadata !574, metadata !1974), !dbg !2350
  tail call void @llvm.dbg.value(metadata i64 %start, i64 0, metadata !575, metadata !1974), !dbg !2351
  %0 = getelementptr inbounds %struct._object, %struct._object* %exc, i64 5, i32 0, !dbg !2352
  store i64 %start, i64* %0, align 8, !dbg !2353, !tbaa !2255
  ret i32 0, !dbg !2354
}

; Function Attrs: nounwind uwtable
define i32 @PyUnicodeDecodeError_SetStart(%struct._object* nocapture %exc, i64 %start) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %exc, i64 0, metadata !578, metadata !1974), !dbg !2355
  tail call void @llvm.dbg.value(metadata i64 %start, i64 0, metadata !579, metadata !1974), !dbg !2356
  %0 = getelementptr inbounds %struct._object, %struct._object* %exc, i64 5, i32 0, !dbg !2357
  store i64 %start, i64* %0, align 8, !dbg !2358, !tbaa !2255
  ret i32 0, !dbg !2359
}

; Function Attrs: nounwind uwtable
define i32 @PyUnicodeTranslateError_SetStart(%struct._object* nocapture %exc, i64 %start) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %exc, i64 0, metadata !582, metadata !1974), !dbg !2360
  tail call void @llvm.dbg.value(metadata i64 %start, i64 0, metadata !583, metadata !1974), !dbg !2361
  %0 = getelementptr inbounds %struct._object, %struct._object* %exc, i64 5, i32 0, !dbg !2362
  store i64 %start, i64* %0, align 8, !dbg !2363, !tbaa !2255
  ret i32 0, !dbg !2364
}

; Function Attrs: nounwind uwtable
define i32 @PyUnicodeEncodeError_GetEnd(%struct._object* nocapture readonly %exc, i64* nocapture %end) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %exc, i64 0, metadata !586, metadata !1974), !dbg !2365
  tail call void @llvm.dbg.value(metadata i64* %end, i64 0, metadata !587, metadata !1974), !dbg !2366
  %object = getelementptr inbounds %struct._object, %struct._object* %exc, i64 4, i32 1, !dbg !2367
  %0 = bitcast %struct._typeobject** %object to %struct._object**, !dbg !2367
  %1 = load %struct._object*, %struct._object** %0, align 8, !dbg !2367, !tbaa !2174
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1557, metadata !1974) #2, !dbg !2368
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i64 0, metadata !1558, metadata !1974) #2, !dbg !2370
  %tobool.i = icmp eq %struct._object* %1, null, !dbg !2371
  br i1 %tobool.i, label %if.then.i, label %if.end.i, !dbg !2372

if.then.i:                                        ; preds = %entry
  %2 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2373, !tbaa !2002
  %call.i = tail call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.174, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #2, !dbg !2374
  br label %cleanup, !dbg !2375

if.end.i:                                         ; preds = %entry
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !2376
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !2377, !tbaa !2010
  %tp_flags.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 19, !dbg !2376
  %4 = load i64, i64* %tp_flags.i, align 8, !dbg !2376, !tbaa !2143
  %and.i = and i64 %4, 268435456, !dbg !2376
  %cmp.i = icmp eq i64 %and.i, 0, !dbg !2376
  br i1 %cmp.i, label %if.then.1.i, label %if.end, !dbg !2380

if.then.1.i:                                      ; preds = %if.end.i
  %5 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2381, !tbaa !2002
  %call2.i = tail call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %5, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.175, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #2, !dbg !2382
  br label %cleanup, !dbg !2383

if.end:                                           ; preds = %if.end.i
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !2384
  %6 = load i64, i64* %ob_refcnt.i, align 8, !dbg !2384, !tbaa !1991
  %inc.i = add i64 %6, 1, !dbg !2384
  store i64 %inc.i, i64* %ob_refcnt.i, align 8, !dbg !2384, !tbaa !1991
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !589, metadata !1974), !dbg !2385
  %end1 = getelementptr inbounds %struct._object, %struct._object* %exc, i64 5, i32 1, !dbg !2386
  %7 = bitcast %struct._typeobject** %end1 to i64*, !dbg !2386
  %8 = load i64, i64* %7, align 8, !dbg !2386, !tbaa !2387
  store i64 %8, i64* %end, align 8, !dbg !2388, !tbaa !2257
  %9 = getelementptr inbounds %struct._object, %struct._object* %1, i64 1, i32 0, !dbg !2389
  %10 = load i64, i64* %9, align 8, !dbg !2389, !tbaa !2259
  tail call void @llvm.dbg.value(metadata i64 %10, i64 0, metadata !588, metadata !1974), !dbg !2390
  %cmp = icmp slt i64 %8, 1, !dbg !2391
  %. = select i1 %cmp, i64 1, i64 %8, !dbg !2393
  %cmp4 = icmp sgt i64 %., %10, !dbg !2394
  %.. = select i1 %cmp4, i64 %10, i64 %., !dbg !2396
  store i64 %.., i64* %end, align 8, !dbg !2397, !tbaa !2257
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !590, metadata !1974), !dbg !2398
  %11 = load i64, i64* %ob_refcnt.i, align 8, !dbg !2400, !tbaa !1991
  %dec = add i64 %11, -1, !dbg !2400
  store i64 %dec, i64* %ob_refcnt.i, align 8, !dbg !2400, !tbaa !1991
  %cmp7 = icmp eq i64 %dec, 0, !dbg !2400
  br i1 %cmp7, label %if.else, label %cleanup, !dbg !2401

if.else:                                          ; preds = %if.end
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 4, !dbg !2377
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2377, !tbaa !2032
  tail call void %12(%struct._object* %1) #2, !dbg !2377
  br label %cleanup

cleanup:                                          ; preds = %if.then.i, %if.then.1.i, %if.else, %if.end
  %retval.0 = phi i32 [ 0, %if.end ], [ 0, %if.else ], [ -1, %if.then.1.i ], [ -1, %if.then.i ]
  ret i32 %retval.0, !dbg !2402
}

; Function Attrs: nounwind uwtable
define i32 @PyUnicodeDecodeError_GetEnd(%struct._object* nocapture readonly %exc, i64* nocapture %end) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %exc, i64 0, metadata !594, metadata !1974), !dbg !2403
  tail call void @llvm.dbg.value(metadata i64* %end, i64 0, metadata !595, metadata !1974), !dbg !2404
  %object = getelementptr inbounds %struct._object, %struct._object* %exc, i64 4, i32 1, !dbg !2405
  %0 = bitcast %struct._typeobject** %object to %struct._object**, !dbg !2405
  %1 = load %struct._object*, %struct._object** %0, align 8, !dbg !2405, !tbaa !2174
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), i64 0, metadata !1562, metadata !1974) #2, !dbg !2406
  %tobool.i = icmp eq %struct._object* %1, null, !dbg !2408
  br i1 %tobool.i, label %if.then.i, label %if.end.i, !dbg !2409

if.then.i:                                        ; preds = %entry
  %2 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2410, !tbaa !2002
  %call.i = tail call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.174, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #2, !dbg !2411
  br label %cleanup, !dbg !2412

if.end.i:                                         ; preds = %entry
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !2413
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !2414, !tbaa !2010
  %tp_flags.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 19, !dbg !2413
  %4 = load i64, i64* %tp_flags.i, align 8, !dbg !2413, !tbaa !2143
  %and.i = and i64 %4, 134217728, !dbg !2413
  %cmp.i = icmp eq i64 %and.i, 0, !dbg !2413
  br i1 %cmp.i, label %if.then.1.i, label %if.end, !dbg !2417

if.then.1.i:                                      ; preds = %if.end.i
  %5 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2418, !tbaa !2002
  %call2.i = tail call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %5, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.176, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #2, !dbg !2419
  br label %cleanup, !dbg !2420

if.end:                                           ; preds = %if.end.i
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !2421
  %6 = load i64, i64* %ob_refcnt.i, align 8, !dbg !2421, !tbaa !1991
  %inc.i = add i64 %6, 1, !dbg !2421
  store i64 %inc.i, i64* %ob_refcnt.i, align 8, !dbg !2421, !tbaa !1991
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !597, metadata !1974), !dbg !2422
  %7 = getelementptr inbounds %struct._object, %struct._object* %1, i64 1, i32 0, !dbg !2423
  %8 = load i64, i64* %7, align 8, !dbg !2423, !tbaa !2297
  tail call void @llvm.dbg.value(metadata i64 %8, i64 0, metadata !596, metadata !1974), !dbg !2424
  %end1 = getelementptr inbounds %struct._object, %struct._object* %exc, i64 5, i32 1, !dbg !2425
  %9 = bitcast %struct._typeobject** %end1 to i64*, !dbg !2425
  %10 = load i64, i64* %9, align 8, !dbg !2425, !tbaa !2387
  %cmp = icmp slt i64 %10, 1, !dbg !2426
  %. = select i1 %cmp, i64 1, i64 %10, !dbg !2428
  %cmp4 = icmp sgt i64 %., %8, !dbg !2429
  %storemerge.24 = select i1 %cmp4, i64 %8, i64 %., !dbg !2431
  store i64 %storemerge.24, i64* %end, align 8, !dbg !2432, !tbaa !2257
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !598, metadata !1974), !dbg !2433
  %11 = load i64, i64* %ob_refcnt.i, align 8, !dbg !2435, !tbaa !1991
  %dec = add i64 %11, -1, !dbg !2435
  store i64 %dec, i64* %ob_refcnt.i, align 8, !dbg !2435, !tbaa !1991
  %cmp7 = icmp eq i64 %dec, 0, !dbg !2435
  br i1 %cmp7, label %if.else, label %cleanup, !dbg !2436

if.else:                                          ; preds = %if.end
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 4, !dbg !2414
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2414, !tbaa !2032
  tail call void %12(%struct._object* %1) #2, !dbg !2414
  br label %cleanup

cleanup:                                          ; preds = %if.then.i, %if.then.1.i, %if.else, %if.end
  %retval.0 = phi i32 [ 0, %if.end ], [ 0, %if.else ], [ -1, %if.then.1.i ], [ -1, %if.then.i ]
  ret i32 %retval.0, !dbg !2437
}

; Function Attrs: nounwind uwtable
define i32 @PyUnicodeTranslateError_GetEnd(%struct._object* nocapture readonly %exc, i64* nocapture %start) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %exc, i64 0, metadata !602, metadata !1974), !dbg !2438
  tail call void @llvm.dbg.value(metadata i64* %start, i64 0, metadata !603, metadata !1974), !dbg !2439
  tail call void @llvm.dbg.value(metadata %struct._object* %exc, i64 0, metadata !586, metadata !1974) #2, !dbg !2440
  tail call void @llvm.dbg.value(metadata i64* %start, i64 0, metadata !587, metadata !1974) #2, !dbg !2442
  %object.i = getelementptr inbounds %struct._object, %struct._object* %exc, i64 4, i32 1, !dbg !2443
  %0 = bitcast %struct._typeobject** %object.i to %struct._object**, !dbg !2443
  %1 = load %struct._object*, %struct._object** %0, align 8, !dbg !2443, !tbaa !2174
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1557, metadata !1974) #2, !dbg !2444
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i64 0, metadata !1558, metadata !1974) #2, !dbg !2446
  %tobool.i.i = icmp eq %struct._object* %1, null, !dbg !2447
  br i1 %tobool.i.i, label %if.then.i.i, label %if.end.i.i, !dbg !2448

if.then.i.i:                                      ; preds = %entry
  %2 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2449, !tbaa !2002
  %call.i.i = tail call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.174, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #2, !dbg !2450
  br label %PyUnicodeEncodeError_GetEnd.exit, !dbg !2451

if.end.i.i:                                       ; preds = %entry
  %ob_type.i.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !2452
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type.i.i, align 8, !dbg !2453, !tbaa !2010
  %tp_flags.i.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 19, !dbg !2452
  %4 = load i64, i64* %tp_flags.i.i, align 8, !dbg !2452, !tbaa !2143
  %and.i.i = and i64 %4, 268435456, !dbg !2452
  %cmp.i.i = icmp eq i64 %and.i.i, 0, !dbg !2452
  br i1 %cmp.i.i, label %if.then.1.i.i, label %if.end.i, !dbg !2454

if.then.1.i.i:                                    ; preds = %if.end.i.i
  %5 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2455, !tbaa !2002
  %call2.i.i = tail call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %5, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.175, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #2, !dbg !2456
  br label %PyUnicodeEncodeError_GetEnd.exit, !dbg !2457

if.end.i:                                         ; preds = %if.end.i.i
  %ob_refcnt.i.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !2458
  %6 = load i64, i64* %ob_refcnt.i.i, align 8, !dbg !2458, !tbaa !1991
  %inc.i.i = add i64 %6, 1, !dbg !2458
  store i64 %inc.i.i, i64* %ob_refcnt.i.i, align 8, !dbg !2458, !tbaa !1991
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !589, metadata !1974) #2, !dbg !2459
  %end1.i = getelementptr inbounds %struct._object, %struct._object* %exc, i64 5, i32 1, !dbg !2460
  %7 = bitcast %struct._typeobject** %end1.i to i64*, !dbg !2460
  %8 = load i64, i64* %7, align 8, !dbg !2460, !tbaa !2387
  store i64 %8, i64* %start, align 8, !dbg !2461, !tbaa !2257
  %9 = getelementptr inbounds %struct._object, %struct._object* %1, i64 1, i32 0, !dbg !2462
  %10 = load i64, i64* %9, align 8, !dbg !2462, !tbaa !2259
  tail call void @llvm.dbg.value(metadata i64 %10, i64 0, metadata !588, metadata !1974) #2, !dbg !2463
  %cmp.i = icmp slt i64 %8, 1, !dbg !2464
  %..i = select i1 %cmp.i, i64 1, i64 %8, !dbg !2465
  %cmp4.i = icmp sgt i64 %..i, %10, !dbg !2466
  %...i = select i1 %cmp4.i, i64 %10, i64 %..i, !dbg !2467
  store i64 %...i, i64* %start, align 8, !dbg !2468, !tbaa !2257
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !590, metadata !1974) #2, !dbg !2469
  %11 = load i64, i64* %ob_refcnt.i.i, align 8, !dbg !2470, !tbaa !1991
  %dec.i = add i64 %11, -1, !dbg !2470
  store i64 %dec.i, i64* %ob_refcnt.i.i, align 8, !dbg !2470, !tbaa !1991
  %cmp7.i = icmp eq i64 %dec.i, 0, !dbg !2470
  br i1 %cmp7.i, label %if.else.i, label %PyUnicodeEncodeError_GetEnd.exit, !dbg !2471

if.else.i:                                        ; preds = %if.end.i
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 4, !dbg !2453
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !2453, !tbaa !2032
  tail call void %12(%struct._object* %1) #2, !dbg !2453
  br label %PyUnicodeEncodeError_GetEnd.exit, !dbg !2472

PyUnicodeEncodeError_GetEnd.exit:                 ; preds = %if.then.i.i, %if.then.1.i.i, %if.end.i, %if.else.i
  %retval.0.i = phi i32 [ 0, %if.end.i ], [ 0, %if.else.i ], [ -1, %if.then.1.i.i ], [ -1, %if.then.i.i ], !dbg !2472
  ret i32 %retval.0.i, !dbg !2473
}

; Function Attrs: nounwind uwtable
define i32 @PyUnicodeEncodeError_SetEnd(%struct._object* nocapture %exc, i64 %end) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %exc, i64 0, metadata !606, metadata !1974), !dbg !2474
  tail call void @llvm.dbg.value(metadata i64 %end, i64 0, metadata !607, metadata !1974), !dbg !2475
  %end1 = getelementptr inbounds %struct._object, %struct._object* %exc, i64 5, i32 1, !dbg !2476
  %0 = bitcast %struct._typeobject** %end1 to i64*, !dbg !2476
  store i64 %end, i64* %0, align 8, !dbg !2477, !tbaa !2387
  ret i32 0, !dbg !2478
}

; Function Attrs: nounwind uwtable
define i32 @PyUnicodeDecodeError_SetEnd(%struct._object* nocapture %exc, i64 %end) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %exc, i64 0, metadata !610, metadata !1974), !dbg !2479
  tail call void @llvm.dbg.value(metadata i64 %end, i64 0, metadata !611, metadata !1974), !dbg !2480
  %end1 = getelementptr inbounds %struct._object, %struct._object* %exc, i64 5, i32 1, !dbg !2481
  %0 = bitcast %struct._typeobject** %end1 to i64*, !dbg !2481
  store i64 %end, i64* %0, align 8, !dbg !2482, !tbaa !2387
  ret i32 0, !dbg !2483
}

; Function Attrs: nounwind uwtable
define i32 @PyUnicodeTranslateError_SetEnd(%struct._object* nocapture %exc, i64 %end) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %exc, i64 0, metadata !614, metadata !1974), !dbg !2484
  tail call void @llvm.dbg.value(metadata i64 %end, i64 0, metadata !615, metadata !1974), !dbg !2485
  %end1 = getelementptr inbounds %struct._object, %struct._object* %exc, i64 5, i32 1, !dbg !2486
  %0 = bitcast %struct._typeobject** %end1 to i64*, !dbg !2486
  store i64 %end, i64* %0, align 8, !dbg !2487, !tbaa !2387
  ret i32 0, !dbg !2488
}

; Function Attrs: nounwind uwtable
define %struct._object* @PyUnicodeEncodeError_GetReason(%struct._object* nocapture readonly %exc) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %exc, i64 0, metadata !618, metadata !1974), !dbg !2489
  %reason = getelementptr inbounds %struct._object, %struct._object* %exc, i64 6, !dbg !2490
  %0 = bitcast %struct._object* %reason to %struct._object**, !dbg !2490
  %1 = load %struct._object*, %struct._object** %0, align 8, !dbg !2490, !tbaa !2491
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1557, metadata !1974) #2, !dbg !2492
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i64 0, metadata !1558, metadata !1974) #2, !dbg !2494
  %tobool.i = icmp eq %struct._object* %1, null, !dbg !2495
  br i1 %tobool.i, label %if.then.i, label %if.end.i, !dbg !2496

if.then.i:                                        ; preds = %entry
  %2 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2497, !tbaa !2002
  %call.i = tail call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.174, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0)) #2, !dbg !2498
  br label %get_unicode.exit, !dbg !2499

if.end.i:                                         ; preds = %entry
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !2500
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !2500, !tbaa !2010
  %tp_flags.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 19, !dbg !2500
  %4 = load i64, i64* %tp_flags.i, align 8, !dbg !2500, !tbaa !2143
  %and.i = and i64 %4, 268435456, !dbg !2500
  %cmp.i = icmp eq i64 %and.i, 0, !dbg !2500
  br i1 %cmp.i, label %if.then.1.i, label %if.end.3.i, !dbg !2501

if.then.1.i:                                      ; preds = %if.end.i
  %5 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2502, !tbaa !2002
  %call2.i = tail call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %5, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.175, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0)) #2, !dbg !2503
  br label %get_unicode.exit, !dbg !2504

if.end.3.i:                                       ; preds = %if.end.i
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !2505
  %6 = load i64, i64* %ob_refcnt.i, align 8, !dbg !2505, !tbaa !1991
  %inc.i = add i64 %6, 1, !dbg !2505
  store i64 %inc.i, i64* %ob_refcnt.i, align 8, !dbg !2505, !tbaa !1991
  br label %get_unicode.exit, !dbg !2506

get_unicode.exit:                                 ; preds = %if.then.i, %if.then.1.i, %if.end.3.i
  %retval.0.i = phi %struct._object* [ %1, %if.end.3.i ], [ null, %if.then.1.i ], [ null, %if.then.i ], !dbg !2507
  ret %struct._object* %retval.0.i, !dbg !2508
}

; Function Attrs: nounwind uwtable
define %struct._object* @PyUnicodeDecodeError_GetReason(%struct._object* nocapture readonly %exc) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %exc, i64 0, metadata !621, metadata !1974), !dbg !2509
  %reason = getelementptr inbounds %struct._object, %struct._object* %exc, i64 6, !dbg !2510
  %0 = bitcast %struct._object* %reason to %struct._object**, !dbg !2510
  %1 = load %struct._object*, %struct._object** %0, align 8, !dbg !2510, !tbaa !2491
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1557, metadata !1974) #2, !dbg !2511
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i64 0, metadata !1558, metadata !1974) #2, !dbg !2513
  %tobool.i = icmp eq %struct._object* %1, null, !dbg !2514
  br i1 %tobool.i, label %if.then.i, label %if.end.i, !dbg !2515

if.then.i:                                        ; preds = %entry
  %2 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2516, !tbaa !2002
  %call.i = tail call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.174, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0)) #2, !dbg !2517
  br label %get_unicode.exit, !dbg !2518

if.end.i:                                         ; preds = %entry
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !2519
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !2519, !tbaa !2010
  %tp_flags.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 19, !dbg !2519
  %4 = load i64, i64* %tp_flags.i, align 8, !dbg !2519, !tbaa !2143
  %and.i = and i64 %4, 268435456, !dbg !2519
  %cmp.i = icmp eq i64 %and.i, 0, !dbg !2519
  br i1 %cmp.i, label %if.then.1.i, label %if.end.3.i, !dbg !2520

if.then.1.i:                                      ; preds = %if.end.i
  %5 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2521, !tbaa !2002
  %call2.i = tail call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %5, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.175, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0)) #2, !dbg !2522
  br label %get_unicode.exit, !dbg !2523

if.end.3.i:                                       ; preds = %if.end.i
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !2524
  %6 = load i64, i64* %ob_refcnt.i, align 8, !dbg !2524, !tbaa !1991
  %inc.i = add i64 %6, 1, !dbg !2524
  store i64 %inc.i, i64* %ob_refcnt.i, align 8, !dbg !2524, !tbaa !1991
  br label %get_unicode.exit, !dbg !2525

get_unicode.exit:                                 ; preds = %if.then.i, %if.then.1.i, %if.end.3.i
  %retval.0.i = phi %struct._object* [ %1, %if.end.3.i ], [ null, %if.then.1.i ], [ null, %if.then.i ], !dbg !2526
  ret %struct._object* %retval.0.i, !dbg !2527
}

; Function Attrs: nounwind uwtable
define %struct._object* @PyUnicodeTranslateError_GetReason(%struct._object* nocapture readonly %exc) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %exc, i64 0, metadata !624, metadata !1974), !dbg !2528
  %reason = getelementptr inbounds %struct._object, %struct._object* %exc, i64 6, !dbg !2529
  %0 = bitcast %struct._object* %reason to %struct._object**, !dbg !2529
  %1 = load %struct._object*, %struct._object** %0, align 8, !dbg !2529, !tbaa !2491
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1557, metadata !1974) #2, !dbg !2530
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i64 0, metadata !1558, metadata !1974) #2, !dbg !2532
  %tobool.i = icmp eq %struct._object* %1, null, !dbg !2533
  br i1 %tobool.i, label %if.then.i, label %if.end.i, !dbg !2534

if.then.i:                                        ; preds = %entry
  %2 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2535, !tbaa !2002
  %call.i = tail call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.174, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0)) #2, !dbg !2536
  br label %get_unicode.exit, !dbg !2537

if.end.i:                                         ; preds = %entry
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !2538
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !2538, !tbaa !2010
  %tp_flags.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 19, !dbg !2538
  %4 = load i64, i64* %tp_flags.i, align 8, !dbg !2538, !tbaa !2143
  %and.i = and i64 %4, 268435456, !dbg !2538
  %cmp.i = icmp eq i64 %and.i, 0, !dbg !2538
  br i1 %cmp.i, label %if.then.1.i, label %if.end.3.i, !dbg !2539

if.then.1.i:                                      ; preds = %if.end.i
  %5 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2540, !tbaa !2002
  %call2.i = tail call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %5, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.175, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0)) #2, !dbg !2541
  br label %get_unicode.exit, !dbg !2542

if.end.3.i:                                       ; preds = %if.end.i
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !2543
  %6 = load i64, i64* %ob_refcnt.i, align 8, !dbg !2543, !tbaa !1991
  %inc.i = add i64 %6, 1, !dbg !2543
  store i64 %inc.i, i64* %ob_refcnt.i, align 8, !dbg !2543, !tbaa !1991
  br label %get_unicode.exit, !dbg !2544

get_unicode.exit:                                 ; preds = %if.then.i, %if.then.1.i, %if.end.3.i
  %retval.0.i = phi %struct._object* [ %1, %if.end.3.i ], [ null, %if.then.1.i ], [ null, %if.then.i ], !dbg !2545
  ret %struct._object* %retval.0.i, !dbg !2546
}

; Function Attrs: nounwind uwtable
define i32 @PyUnicodeEncodeError_SetReason(%struct._object* nocapture %exc, i8* %reason) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %exc, i64 0, metadata !629, metadata !1974), !dbg !2547
  tail call void @llvm.dbg.value(metadata i8* %reason, i64 0, metadata !630, metadata !1974), !dbg !2548
  %reason1 = getelementptr inbounds %struct._object, %struct._object* %exc, i64 6, !dbg !2549
  %0 = bitcast %struct._object* %reason1 to %struct._object**, !dbg !2549
  tail call void @llvm.dbg.value(metadata %struct._object** %0, i64 0, metadata !1567, metadata !1974) #2, !dbg !2550
  tail call void @llvm.dbg.value(metadata i8* %reason, i64 0, metadata !1568, metadata !1974) #2, !dbg !2552
  %call.i = tail call %struct._object* @PyUnicode_FromString(i8* %reason) #2, !dbg !2553
  tail call void @llvm.dbg.value(metadata %struct._object* %call.i, i64 0, metadata !1569, metadata !1974) #2, !dbg !2554
  %tobool.i = icmp eq %struct._object* %call.i, null, !dbg !2555
  br i1 %tobool.i, label %set_unicodefromstring.exit, label %do.body.i, !dbg !2557

do.body.i:                                        ; preds = %entry
  %1 = load %struct._object*, %struct._object** %0, align 8, !dbg !2558, !tbaa !2002
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1570, metadata !1974) #2, !dbg !2558
  %cmp.i = icmp eq %struct._object* %1, null, !dbg !2560
  br i1 %cmp.i, label %if.end.6.i, label %if.then.1.i, !dbg !2561

if.then.1.i:                                      ; preds = %do.body.i
  store %struct._object* null, %struct._object** %0, align 8, !dbg !2562, !tbaa !2002
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1572, metadata !1974) #2, !dbg !2564
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !2566
  %2 = load i64, i64* %ob_refcnt.i, align 8, !dbg !2566, !tbaa !1991
  %dec.i = add i64 %2, -1, !dbg !2566
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !2566, !tbaa !1991
  %cmp3.i = icmp eq i64 %dec.i, 0, !dbg !2566
  br i1 %cmp3.i, label %if.else.i, label %if.end.6.i, !dbg !2568

if.else.i:                                        ; preds = %if.then.1.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !2569
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !2569, !tbaa !2010
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 4, !dbg !2569
  %4 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !2569, !tbaa !2032
  tail call void %4(%struct._object* %1) #2, !dbg !2569
  br label %if.end.6.i, !dbg !2571

if.end.6.i:                                       ; preds = %if.else.i, %if.then.1.i, %do.body.i
  store %struct._object* %call.i, %struct._object** %0, align 8, !dbg !2572, !tbaa !2002
  br label %set_unicodefromstring.exit, !dbg !2573

set_unicodefromstring.exit:                       ; preds = %entry, %if.end.6.i
  %retval.0.i = phi i32 [ 0, %if.end.6.i ], [ -1, %entry ], !dbg !2571
  ret i32 %retval.0.i, !dbg !2574
}

; Function Attrs: nounwind uwtable
define i32 @PyUnicodeDecodeError_SetReason(%struct._object* nocapture %exc, i8* %reason) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %exc, i64 0, metadata !633, metadata !1974), !dbg !2575
  tail call void @llvm.dbg.value(metadata i8* %reason, i64 0, metadata !634, metadata !1974), !dbg !2576
  %reason1 = getelementptr inbounds %struct._object, %struct._object* %exc, i64 6, !dbg !2577
  %0 = bitcast %struct._object* %reason1 to %struct._object**, !dbg !2577
  tail call void @llvm.dbg.value(metadata %struct._object** %0, i64 0, metadata !1567, metadata !1974) #2, !dbg !2578
  tail call void @llvm.dbg.value(metadata i8* %reason, i64 0, metadata !1568, metadata !1974) #2, !dbg !2580
  %call.i = tail call %struct._object* @PyUnicode_FromString(i8* %reason) #2, !dbg !2581
  tail call void @llvm.dbg.value(metadata %struct._object* %call.i, i64 0, metadata !1569, metadata !1974) #2, !dbg !2582
  %tobool.i = icmp eq %struct._object* %call.i, null, !dbg !2583
  br i1 %tobool.i, label %set_unicodefromstring.exit, label %do.body.i, !dbg !2584

do.body.i:                                        ; preds = %entry
  %1 = load %struct._object*, %struct._object** %0, align 8, !dbg !2585, !tbaa !2002
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1570, metadata !1974) #2, !dbg !2585
  %cmp.i = icmp eq %struct._object* %1, null, !dbg !2586
  br i1 %cmp.i, label %if.end.6.i, label %if.then.1.i, !dbg !2587

if.then.1.i:                                      ; preds = %do.body.i
  store %struct._object* null, %struct._object** %0, align 8, !dbg !2588, !tbaa !2002
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1572, metadata !1974) #2, !dbg !2589
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !2590
  %2 = load i64, i64* %ob_refcnt.i, align 8, !dbg !2590, !tbaa !1991
  %dec.i = add i64 %2, -1, !dbg !2590
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !2590, !tbaa !1991
  %cmp3.i = icmp eq i64 %dec.i, 0, !dbg !2590
  br i1 %cmp3.i, label %if.else.i, label %if.end.6.i, !dbg !2591

if.else.i:                                        ; preds = %if.then.1.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !2592
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !2592, !tbaa !2010
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 4, !dbg !2592
  %4 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !2592, !tbaa !2032
  tail call void %4(%struct._object* %1) #2, !dbg !2592
  br label %if.end.6.i, !dbg !2593

if.end.6.i:                                       ; preds = %if.else.i, %if.then.1.i, %do.body.i
  store %struct._object* %call.i, %struct._object** %0, align 8, !dbg !2594, !tbaa !2002
  br label %set_unicodefromstring.exit, !dbg !2595

set_unicodefromstring.exit:                       ; preds = %entry, %if.end.6.i
  %retval.0.i = phi i32 [ 0, %if.end.6.i ], [ -1, %entry ], !dbg !2593
  ret i32 %retval.0.i, !dbg !2596
}

; Function Attrs: nounwind uwtable
define i32 @PyUnicodeTranslateError_SetReason(%struct._object* nocapture %exc, i8* %reason) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %exc, i64 0, metadata !637, metadata !1974), !dbg !2597
  tail call void @llvm.dbg.value(metadata i8* %reason, i64 0, metadata !638, metadata !1974), !dbg !2598
  %reason1 = getelementptr inbounds %struct._object, %struct._object* %exc, i64 6, !dbg !2599
  %0 = bitcast %struct._object* %reason1 to %struct._object**, !dbg !2599
  tail call void @llvm.dbg.value(metadata %struct._object** %0, i64 0, metadata !1567, metadata !1974) #2, !dbg !2600
  tail call void @llvm.dbg.value(metadata i8* %reason, i64 0, metadata !1568, metadata !1974) #2, !dbg !2602
  %call.i = tail call %struct._object* @PyUnicode_FromString(i8* %reason) #2, !dbg !2603
  tail call void @llvm.dbg.value(metadata %struct._object* %call.i, i64 0, metadata !1569, metadata !1974) #2, !dbg !2604
  %tobool.i = icmp eq %struct._object* %call.i, null, !dbg !2605
  br i1 %tobool.i, label %set_unicodefromstring.exit, label %do.body.i, !dbg !2606

do.body.i:                                        ; preds = %entry
  %1 = load %struct._object*, %struct._object** %0, align 8, !dbg !2607, !tbaa !2002
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1570, metadata !1974) #2, !dbg !2607
  %cmp.i = icmp eq %struct._object* %1, null, !dbg !2608
  br i1 %cmp.i, label %if.end.6.i, label %if.then.1.i, !dbg !2609

if.then.1.i:                                      ; preds = %do.body.i
  store %struct._object* null, %struct._object** %0, align 8, !dbg !2610, !tbaa !2002
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1572, metadata !1974) #2, !dbg !2611
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !2612
  %2 = load i64, i64* %ob_refcnt.i, align 8, !dbg !2612, !tbaa !1991
  %dec.i = add i64 %2, -1, !dbg !2612
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !2612, !tbaa !1991
  %cmp3.i = icmp eq i64 %dec.i, 0, !dbg !2612
  br i1 %cmp3.i, label %if.else.i, label %if.end.6.i, !dbg !2613

if.else.i:                                        ; preds = %if.then.1.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !2614
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !2614, !tbaa !2010
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 4, !dbg !2614
  %4 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !2614, !tbaa !2032
  tail call void %4(%struct._object* %1) #2, !dbg !2614
  br label %if.end.6.i, !dbg !2615

if.end.6.i:                                       ; preds = %if.else.i, %if.then.1.i, %do.body.i
  store %struct._object* %call.i, %struct._object** %0, align 8, !dbg !2616, !tbaa !2002
  br label %set_unicodefromstring.exit, !dbg !2617

set_unicodefromstring.exit:                       ; preds = %entry, %if.end.6.i
  %retval.0.i = phi i32 [ 0, %if.end.6.i ], [ -1, %entry ], !dbg !2615
  ret i32 %retval.0.i, !dbg !2618
}

; Function Attrs: nounwind uwtable
define %struct._object* @PyUnicodeEncodeError_Create(i8* %encoding, i32* %object, i64 %length, i64 %start, i64 %end, i8* %reason) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %encoding, i64 0, metadata !646, metadata !1974), !dbg !2619
  tail call void @llvm.dbg.value(metadata i32* %object, i64 0, metadata !647, metadata !1974), !dbg !2620
  tail call void @llvm.dbg.value(metadata i64 %length, i64 0, metadata !648, metadata !1974), !dbg !2621
  tail call void @llvm.dbg.value(metadata i64 %start, i64 0, metadata !649, metadata !1974), !dbg !2622
  tail call void @llvm.dbg.value(metadata i64 %end, i64 0, metadata !650, metadata !1974), !dbg !2623
  tail call void @llvm.dbg.value(metadata i8* %reason, i64 0, metadata !651, metadata !1974), !dbg !2624
  %0 = load %struct._object*, %struct._object** @PyExc_UnicodeEncodeError, align 8, !dbg !2625, !tbaa !2002
  %call = tail call %struct._object* (%struct._object*, i8*, ...) @_PyObject_CallFunction_SizeT(%struct._object* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i8* %encoding, i32* %object, i64 %length, i64 %start, i64 %end, i8* %reason) #2, !dbg !2626
  ret %struct._object* %call, !dbg !2627
}

declare %struct._object* @_PyObject_CallFunction_SizeT(%struct._object*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define %struct._object* @PyUnicodeDecodeError_Create(i8* %encoding, i8* %object, i64 %length, i64 %start, i64 %end, i8* %reason) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %encoding, i64 0, metadata !656, metadata !1974), !dbg !2628
  tail call void @llvm.dbg.value(metadata i8* %object, i64 0, metadata !657, metadata !1974), !dbg !2629
  tail call void @llvm.dbg.value(metadata i64 %length, i64 0, metadata !658, metadata !1974), !dbg !2630
  tail call void @llvm.dbg.value(metadata i64 %start, i64 0, metadata !659, metadata !1974), !dbg !2631
  tail call void @llvm.dbg.value(metadata i64 %end, i64 0, metadata !660, metadata !1974), !dbg !2632
  tail call void @llvm.dbg.value(metadata i8* %reason, i64 0, metadata !661, metadata !1974), !dbg !2633
  %0 = load %struct._object*, %struct._object** @PyExc_UnicodeDecodeError, align 8, !dbg !2634, !tbaa !2002
  %call = tail call %struct._object* (%struct._object*, i8*, ...) @_PyObject_CallFunction_SizeT(%struct._object* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i8* %encoding, i8* %object, i64 %length, i64 %start, i64 %end, i8* %reason) #2, !dbg !2635
  ret %struct._object* %call, !dbg !2636
}

; Function Attrs: nounwind uwtable
define %struct._object* @PyUnicodeTranslateError_Create(i32* %object, i64 %length, i64 %start, i64 %end, i8* %reason) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i32* %object, i64 0, metadata !666, metadata !1974), !dbg !2637
  tail call void @llvm.dbg.value(metadata i64 %length, i64 0, metadata !667, metadata !1974), !dbg !2638
  tail call void @llvm.dbg.value(metadata i64 %start, i64 0, metadata !668, metadata !1974), !dbg !2639
  tail call void @llvm.dbg.value(metadata i64 %end, i64 0, metadata !669, metadata !1974), !dbg !2640
  tail call void @llvm.dbg.value(metadata i8* %reason, i64 0, metadata !670, metadata !1974), !dbg !2641
  %0 = load %struct._object*, %struct._object** @PyExc_UnicodeTranslateError, align 8, !dbg !2642, !tbaa !2002
  %call = tail call %struct._object* (%struct._object*, i8*, ...) @_PyObject_CallFunction_SizeT(%struct._object* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i32* %object, i64 %length, i64 %start, i64 %end, i8* %reason) #2, !dbg !2643
  ret %struct._object* %call, !dbg !2644
}

; Function Attrs: nounwind uwtable
define %struct._object* @_PyUnicodeTranslateError_Create(%struct._object* %object, i64 %start, i64 %end, i8* %reason) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %object, i64 0, metadata !675, metadata !1974), !dbg !2645
  tail call void @llvm.dbg.value(metadata i64 %start, i64 0, metadata !676, metadata !1974), !dbg !2646
  tail call void @llvm.dbg.value(metadata i64 %end, i64 0, metadata !677, metadata !1974), !dbg !2647
  tail call void @llvm.dbg.value(metadata i8* %reason, i64 0, metadata !678, metadata !1974), !dbg !2648
  %0 = load %struct._object*, %struct._object** @PyExc_UnicodeTranslateError, align 8, !dbg !2649, !tbaa !2002
  %call = tail call %struct._object* (%struct._object*, i8*, ...) @_PyObject_CallFunction_SizeT(%struct._object* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), %struct._object* %object, i64 %start, i64 %end, i8* %reason) #2, !dbg !2650
  ret %struct._object* %call, !dbg !2651
}

; Function Attrs: nounwind uwtable
define void @_PyExc_Init(%struct._object* %bltinmod) #0 {
entry:
  %errors.i = alloca [16 x %struct._object*], align 16
  tail call void @llvm.dbg.value(metadata %struct._object* %bltinmod, i64 0, metadata !681, metadata !1974), !dbg !2652
  %0 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_BaseException, i64 0, i32 19), align 8, !dbg !2653, !tbaa !2143
  %and = and i64 %0, 4096, !dbg !2653
  %tobool = icmp eq i64 %and, 0, !dbg !2653
  tail call void @llvm.dbg.declare(metadata [16 x %struct._object*]* %errors.i, metadata !1766, metadata !1974), !dbg !2655
  br i1 %tobool, label %if.then, label %if.end.2, !dbg !2657

if.then:                                          ; preds = %entry
  %call = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_BaseException) #2, !dbg !2658
  %cmp = icmp slt i32 %call, 0, !dbg !2658
  br i1 %cmp, label %if.then.1, label %if.end, !dbg !2662

if.then.1:                                        ; preds = %if.then
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2663
  unreachable, !dbg !2663

if.end:                                           ; preds = %if.then
  %1 = load %struct._object*, %struct._object** @PyExc_BaseException, align 8, !dbg !2665, !tbaa !2002
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !2665
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !2665, !tbaa !1991
  %inc = add i64 %2, 1, !dbg !2665
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !2665, !tbaa !1991
  br label %if.end.2, !dbg !2665

if.end.2:                                         ; preds = %entry, %if.end
  %3 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_Exception, i64 0, i32 19), align 8, !dbg !2667, !tbaa !2143
  %and3 = and i64 %3, 4096, !dbg !2667
  %tobool4 = icmp eq i64 %and3, 0, !dbg !2667
  br i1 %tobool4, label %if.then.5, label %if.end.12, !dbg !2669

if.then.5:                                        ; preds = %if.end.2
  %call6 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_Exception) #2, !dbg !2670
  %cmp7 = icmp slt i32 %call6, 0, !dbg !2670
  br i1 %cmp7, label %if.then.8, label %if.end.9, !dbg !2674

if.then.8:                                        ; preds = %if.then.5
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2675
  unreachable, !dbg !2675

if.end.9:                                         ; preds = %if.then.5
  %4 = load %struct._object*, %struct._object** @PyExc_Exception, align 8, !dbg !2677, !tbaa !2002
  %ob_refcnt10 = getelementptr inbounds %struct._object, %struct._object* %4, i64 0, i32 0, !dbg !2677
  %5 = load i64, i64* %ob_refcnt10, align 8, !dbg !2677, !tbaa !1991
  %inc11 = add i64 %5, 1, !dbg !2677
  store i64 %inc11, i64* %ob_refcnt10, align 8, !dbg !2677, !tbaa !1991
  br label %if.end.12, !dbg !2677

if.end.12:                                        ; preds = %if.end.2, %if.end.9
  %6 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_TypeError, i64 0, i32 19), align 8, !dbg !2679, !tbaa !2143
  %and13 = and i64 %6, 4096, !dbg !2679
  %tobool14 = icmp eq i64 %and13, 0, !dbg !2679
  br i1 %tobool14, label %if.then.15, label %if.end.22, !dbg !2681

if.then.15:                                       ; preds = %if.end.12
  %call16 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_TypeError) #2, !dbg !2682
  %cmp17 = icmp slt i32 %call16, 0, !dbg !2682
  br i1 %cmp17, label %if.then.18, label %if.end.19, !dbg !2686

if.then.18:                                       ; preds = %if.then.15
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2687
  unreachable, !dbg !2687

if.end.19:                                        ; preds = %if.then.15
  %7 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2689, !tbaa !2002
  %ob_refcnt20 = getelementptr inbounds %struct._object, %struct._object* %7, i64 0, i32 0, !dbg !2689
  %8 = load i64, i64* %ob_refcnt20, align 8, !dbg !2689, !tbaa !1991
  %inc21 = add i64 %8, 1, !dbg !2689
  store i64 %inc21, i64* %ob_refcnt20, align 8, !dbg !2689, !tbaa !1991
  br label %if.end.22, !dbg !2689

if.end.22:                                        ; preds = %if.end.12, %if.end.19
  %9 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_StopIteration, i64 0, i32 19), align 8, !dbg !2691, !tbaa !2143
  %and23 = and i64 %9, 4096, !dbg !2691
  %tobool24 = icmp eq i64 %and23, 0, !dbg !2691
  br i1 %tobool24, label %if.then.25, label %if.end.32, !dbg !2693

if.then.25:                                       ; preds = %if.end.22
  %call26 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_StopIteration) #2, !dbg !2694
  %cmp27 = icmp slt i32 %call26, 0, !dbg !2694
  br i1 %cmp27, label %if.then.28, label %if.end.29, !dbg !2698

if.then.28:                                       ; preds = %if.then.25
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2699
  unreachable, !dbg !2699

if.end.29:                                        ; preds = %if.then.25
  %10 = load %struct._object*, %struct._object** @PyExc_StopIteration, align 8, !dbg !2701, !tbaa !2002
  %ob_refcnt30 = getelementptr inbounds %struct._object, %struct._object* %10, i64 0, i32 0, !dbg !2701
  %11 = load i64, i64* %ob_refcnt30, align 8, !dbg !2701, !tbaa !1991
  %inc31 = add i64 %11, 1, !dbg !2701
  store i64 %inc31, i64* %ob_refcnt30, align 8, !dbg !2701, !tbaa !1991
  br label %if.end.32, !dbg !2701

if.end.32:                                        ; preds = %if.end.22, %if.end.29
  %12 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_GeneratorExit, i64 0, i32 19), align 8, !dbg !2703, !tbaa !2143
  %and33 = and i64 %12, 4096, !dbg !2703
  %tobool34 = icmp eq i64 %and33, 0, !dbg !2703
  br i1 %tobool34, label %if.then.35, label %if.end.42, !dbg !2705

if.then.35:                                       ; preds = %if.end.32
  %call36 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_GeneratorExit) #2, !dbg !2706
  %cmp37 = icmp slt i32 %call36, 0, !dbg !2706
  br i1 %cmp37, label %if.then.38, label %if.end.39, !dbg !2710

if.then.38:                                       ; preds = %if.then.35
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2711
  unreachable, !dbg !2711

if.end.39:                                        ; preds = %if.then.35
  %13 = load %struct._object*, %struct._object** @PyExc_GeneratorExit, align 8, !dbg !2713, !tbaa !2002
  %ob_refcnt40 = getelementptr inbounds %struct._object, %struct._object* %13, i64 0, i32 0, !dbg !2713
  %14 = load i64, i64* %ob_refcnt40, align 8, !dbg !2713, !tbaa !1991
  %inc41 = add i64 %14, 1, !dbg !2713
  store i64 %inc41, i64* %ob_refcnt40, align 8, !dbg !2713, !tbaa !1991
  br label %if.end.42, !dbg !2713

if.end.42:                                        ; preds = %if.end.32, %if.end.39
  %15 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_SystemExit, i64 0, i32 19), align 8, !dbg !2715, !tbaa !2143
  %and43 = and i64 %15, 4096, !dbg !2715
  %tobool44 = icmp eq i64 %and43, 0, !dbg !2715
  br i1 %tobool44, label %if.then.45, label %if.end.52, !dbg !2717

if.then.45:                                       ; preds = %if.end.42
  %call46 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_SystemExit) #2, !dbg !2718
  %cmp47 = icmp slt i32 %call46, 0, !dbg !2718
  br i1 %cmp47, label %if.then.48, label %if.end.49, !dbg !2722

if.then.48:                                       ; preds = %if.then.45
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2723
  unreachable, !dbg !2723

if.end.49:                                        ; preds = %if.then.45
  %16 = load %struct._object*, %struct._object** @PyExc_SystemExit, align 8, !dbg !2725, !tbaa !2002
  %ob_refcnt50 = getelementptr inbounds %struct._object, %struct._object* %16, i64 0, i32 0, !dbg !2725
  %17 = load i64, i64* %ob_refcnt50, align 8, !dbg !2725, !tbaa !1991
  %inc51 = add i64 %17, 1, !dbg !2725
  store i64 %inc51, i64* %ob_refcnt50, align 8, !dbg !2725, !tbaa !1991
  br label %if.end.52, !dbg !2725

if.end.52:                                        ; preds = %if.end.42, %if.end.49
  %18 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_KeyboardInterrupt, i64 0, i32 19), align 8, !dbg !2727, !tbaa !2143
  %and53 = and i64 %18, 4096, !dbg !2727
  %tobool54 = icmp eq i64 %and53, 0, !dbg !2727
  br i1 %tobool54, label %if.then.55, label %if.end.62, !dbg !2729

if.then.55:                                       ; preds = %if.end.52
  %call56 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_KeyboardInterrupt) #2, !dbg !2730
  %cmp57 = icmp slt i32 %call56, 0, !dbg !2730
  br i1 %cmp57, label %if.then.58, label %if.end.59, !dbg !2734

if.then.58:                                       ; preds = %if.then.55
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2735
  unreachable, !dbg !2735

if.end.59:                                        ; preds = %if.then.55
  %19 = load %struct._object*, %struct._object** @PyExc_KeyboardInterrupt, align 8, !dbg !2737, !tbaa !2002
  %ob_refcnt60 = getelementptr inbounds %struct._object, %struct._object* %19, i64 0, i32 0, !dbg !2737
  %20 = load i64, i64* %ob_refcnt60, align 8, !dbg !2737, !tbaa !1991
  %inc61 = add i64 %20, 1, !dbg !2737
  store i64 %inc61, i64* %ob_refcnt60, align 8, !dbg !2737, !tbaa !1991
  br label %if.end.62, !dbg !2737

if.end.62:                                        ; preds = %if.end.52, %if.end.59
  %21 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ImportError, i64 0, i32 19), align 8, !dbg !2739, !tbaa !2143
  %and63 = and i64 %21, 4096, !dbg !2739
  %tobool64 = icmp eq i64 %and63, 0, !dbg !2739
  br i1 %tobool64, label %if.then.65, label %if.end.72, !dbg !2741

if.then.65:                                       ; preds = %if.end.62
  %call66 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_ImportError) #2, !dbg !2742
  %cmp67 = icmp slt i32 %call66, 0, !dbg !2742
  br i1 %cmp67, label %if.then.68, label %if.end.69, !dbg !2746

if.then.68:                                       ; preds = %if.then.65
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2747
  unreachable, !dbg !2747

if.end.69:                                        ; preds = %if.then.65
  %22 = load %struct._object*, %struct._object** @PyExc_ImportError, align 8, !dbg !2749, !tbaa !2002
  %ob_refcnt70 = getelementptr inbounds %struct._object, %struct._object* %22, i64 0, i32 0, !dbg !2749
  %23 = load i64, i64* %ob_refcnt70, align 8, !dbg !2749, !tbaa !1991
  %inc71 = add i64 %23, 1, !dbg !2749
  store i64 %inc71, i64* %ob_refcnt70, align 8, !dbg !2749, !tbaa !1991
  br label %if.end.72, !dbg !2749

if.end.72:                                        ; preds = %if.end.62, %if.end.69
  %24 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_OSError, i64 0, i32 19), align 8, !dbg !2751, !tbaa !2143
  %and73 = and i64 %24, 4096, !dbg !2751
  %tobool74 = icmp eq i64 %and73, 0, !dbg !2751
  br i1 %tobool74, label %if.then.75, label %if.end.82, !dbg !2753

if.then.75:                                       ; preds = %if.end.72
  %call76 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_OSError) #2, !dbg !2754
  %cmp77 = icmp slt i32 %call76, 0, !dbg !2754
  br i1 %cmp77, label %if.then.78, label %if.end.79, !dbg !2758

if.then.78:                                       ; preds = %if.then.75
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2759
  unreachable, !dbg !2759

if.end.79:                                        ; preds = %if.then.75
  %25 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !2761, !tbaa !2002
  %ob_refcnt80 = getelementptr inbounds %struct._object, %struct._object* %25, i64 0, i32 0, !dbg !2761
  %26 = load i64, i64* %ob_refcnt80, align 8, !dbg !2761, !tbaa !1991
  %inc81 = add i64 %26, 1, !dbg !2761
  store i64 %inc81, i64* %ob_refcnt80, align 8, !dbg !2761, !tbaa !1991
  br label %if.end.82, !dbg !2761

if.end.82:                                        ; preds = %if.end.72, %if.end.79
  %27 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_EOFError, i64 0, i32 19), align 8, !dbg !2763, !tbaa !2143
  %and83 = and i64 %27, 4096, !dbg !2763
  %tobool84 = icmp eq i64 %and83, 0, !dbg !2763
  br i1 %tobool84, label %if.then.85, label %if.end.92, !dbg !2765

if.then.85:                                       ; preds = %if.end.82
  %call86 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_EOFError) #2, !dbg !2766
  %cmp87 = icmp slt i32 %call86, 0, !dbg !2766
  br i1 %cmp87, label %if.then.88, label %if.end.89, !dbg !2770

if.then.88:                                       ; preds = %if.then.85
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2771
  unreachable, !dbg !2771

if.end.89:                                        ; preds = %if.then.85
  %28 = load %struct._object*, %struct._object** @PyExc_EOFError, align 8, !dbg !2773, !tbaa !2002
  %ob_refcnt90 = getelementptr inbounds %struct._object, %struct._object* %28, i64 0, i32 0, !dbg !2773
  %29 = load i64, i64* %ob_refcnt90, align 8, !dbg !2773, !tbaa !1991
  %inc91 = add i64 %29, 1, !dbg !2773
  store i64 %inc91, i64* %ob_refcnt90, align 8, !dbg !2773, !tbaa !1991
  br label %if.end.92, !dbg !2773

if.end.92:                                        ; preds = %if.end.82, %if.end.89
  %30 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_RuntimeError, i64 0, i32 19), align 8, !dbg !2775, !tbaa !2143
  %and93 = and i64 %30, 4096, !dbg !2775
  %tobool94 = icmp eq i64 %and93, 0, !dbg !2775
  br i1 %tobool94, label %if.then.95, label %if.end.102, !dbg !2777

if.then.95:                                       ; preds = %if.end.92
  %call96 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_RuntimeError) #2, !dbg !2778
  %cmp97 = icmp slt i32 %call96, 0, !dbg !2778
  br i1 %cmp97, label %if.then.98, label %if.end.99, !dbg !2782

if.then.98:                                       ; preds = %if.then.95
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2783
  unreachable, !dbg !2783

if.end.99:                                        ; preds = %if.then.95
  %31 = load %struct._object*, %struct._object** @PyExc_RuntimeError, align 8, !dbg !2785, !tbaa !2002
  %ob_refcnt100 = getelementptr inbounds %struct._object, %struct._object* %31, i64 0, i32 0, !dbg !2785
  %32 = load i64, i64* %ob_refcnt100, align 8, !dbg !2785, !tbaa !1991
  %inc101 = add i64 %32, 1, !dbg !2785
  store i64 %inc101, i64* %ob_refcnt100, align 8, !dbg !2785, !tbaa !1991
  br label %if.end.102, !dbg !2785

if.end.102:                                       ; preds = %if.end.92, %if.end.99
  %33 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_NotImplementedError, i64 0, i32 19), align 8, !dbg !2787, !tbaa !2143
  %and103 = and i64 %33, 4096, !dbg !2787
  %tobool104 = icmp eq i64 %and103, 0, !dbg !2787
  br i1 %tobool104, label %if.then.105, label %if.end.112, !dbg !2789

if.then.105:                                      ; preds = %if.end.102
  %call106 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_NotImplementedError) #2, !dbg !2790
  %cmp107 = icmp slt i32 %call106, 0, !dbg !2790
  br i1 %cmp107, label %if.then.108, label %if.end.109, !dbg !2794

if.then.108:                                      ; preds = %if.then.105
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2795
  unreachable, !dbg !2795

if.end.109:                                       ; preds = %if.then.105
  %34 = load %struct._object*, %struct._object** @PyExc_NotImplementedError, align 8, !dbg !2797, !tbaa !2002
  %ob_refcnt110 = getelementptr inbounds %struct._object, %struct._object* %34, i64 0, i32 0, !dbg !2797
  %35 = load i64, i64* %ob_refcnt110, align 8, !dbg !2797, !tbaa !1991
  %inc111 = add i64 %35, 1, !dbg !2797
  store i64 %inc111, i64* %ob_refcnt110, align 8, !dbg !2797, !tbaa !1991
  br label %if.end.112, !dbg !2797

if.end.112:                                       ; preds = %if.end.102, %if.end.109
  %36 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_NameError, i64 0, i32 19), align 8, !dbg !2799, !tbaa !2143
  %and113 = and i64 %36, 4096, !dbg !2799
  %tobool114 = icmp eq i64 %and113, 0, !dbg !2799
  br i1 %tobool114, label %if.then.115, label %if.end.122, !dbg !2801

if.then.115:                                      ; preds = %if.end.112
  %call116 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_NameError) #2, !dbg !2802
  %cmp117 = icmp slt i32 %call116, 0, !dbg !2802
  br i1 %cmp117, label %if.then.118, label %if.end.119, !dbg !2806

if.then.118:                                      ; preds = %if.then.115
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2807
  unreachable, !dbg !2807

if.end.119:                                       ; preds = %if.then.115
  %37 = load %struct._object*, %struct._object** @PyExc_NameError, align 8, !dbg !2809, !tbaa !2002
  %ob_refcnt120 = getelementptr inbounds %struct._object, %struct._object* %37, i64 0, i32 0, !dbg !2809
  %38 = load i64, i64* %ob_refcnt120, align 8, !dbg !2809, !tbaa !1991
  %inc121 = add i64 %38, 1, !dbg !2809
  store i64 %inc121, i64* %ob_refcnt120, align 8, !dbg !2809, !tbaa !1991
  br label %if.end.122, !dbg !2809

if.end.122:                                       ; preds = %if.end.112, %if.end.119
  %39 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_UnboundLocalError, i64 0, i32 19), align 8, !dbg !2811, !tbaa !2143
  %and123 = and i64 %39, 4096, !dbg !2811
  %tobool124 = icmp eq i64 %and123, 0, !dbg !2811
  br i1 %tobool124, label %if.then.125, label %if.end.132, !dbg !2813

if.then.125:                                      ; preds = %if.end.122
  %call126 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_UnboundLocalError) #2, !dbg !2814
  %cmp127 = icmp slt i32 %call126, 0, !dbg !2814
  br i1 %cmp127, label %if.then.128, label %if.end.129, !dbg !2818

if.then.128:                                      ; preds = %if.then.125
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2819
  unreachable, !dbg !2819

if.end.129:                                       ; preds = %if.then.125
  %40 = load %struct._object*, %struct._object** @PyExc_UnboundLocalError, align 8, !dbg !2821, !tbaa !2002
  %ob_refcnt130 = getelementptr inbounds %struct._object, %struct._object* %40, i64 0, i32 0, !dbg !2821
  %41 = load i64, i64* %ob_refcnt130, align 8, !dbg !2821, !tbaa !1991
  %inc131 = add i64 %41, 1, !dbg !2821
  store i64 %inc131, i64* %ob_refcnt130, align 8, !dbg !2821, !tbaa !1991
  br label %if.end.132, !dbg !2821

if.end.132:                                       ; preds = %if.end.122, %if.end.129
  %42 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_AttributeError, i64 0, i32 19), align 8, !dbg !2823, !tbaa !2143
  %and133 = and i64 %42, 4096, !dbg !2823
  %tobool134 = icmp eq i64 %and133, 0, !dbg !2823
  br i1 %tobool134, label %if.then.135, label %if.end.142, !dbg !2825

if.then.135:                                      ; preds = %if.end.132
  %call136 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_AttributeError) #2, !dbg !2826
  %cmp137 = icmp slt i32 %call136, 0, !dbg !2826
  br i1 %cmp137, label %if.then.138, label %if.end.139, !dbg !2830

if.then.138:                                      ; preds = %if.then.135
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2831
  unreachable, !dbg !2831

if.end.139:                                       ; preds = %if.then.135
  %43 = load %struct._object*, %struct._object** @PyExc_AttributeError, align 8, !dbg !2833, !tbaa !2002
  %ob_refcnt140 = getelementptr inbounds %struct._object, %struct._object* %43, i64 0, i32 0, !dbg !2833
  %44 = load i64, i64* %ob_refcnt140, align 8, !dbg !2833, !tbaa !1991
  %inc141 = add i64 %44, 1, !dbg !2833
  store i64 %inc141, i64* %ob_refcnt140, align 8, !dbg !2833, !tbaa !1991
  br label %if.end.142, !dbg !2833

if.end.142:                                       ; preds = %if.end.132, %if.end.139
  %45 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_SyntaxError, i64 0, i32 19), align 8, !dbg !2835, !tbaa !2143
  %and143 = and i64 %45, 4096, !dbg !2835
  %tobool144 = icmp eq i64 %and143, 0, !dbg !2835
  br i1 %tobool144, label %if.then.145, label %if.end.152, !dbg !2837

if.then.145:                                      ; preds = %if.end.142
  %call146 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_SyntaxError) #2, !dbg !2838
  %cmp147 = icmp slt i32 %call146, 0, !dbg !2838
  br i1 %cmp147, label %if.then.148, label %if.end.149, !dbg !2842

if.then.148:                                      ; preds = %if.then.145
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2843
  unreachable, !dbg !2843

if.end.149:                                       ; preds = %if.then.145
  %46 = load %struct._object*, %struct._object** @PyExc_SyntaxError, align 8, !dbg !2845, !tbaa !2002
  %ob_refcnt150 = getelementptr inbounds %struct._object, %struct._object* %46, i64 0, i32 0, !dbg !2845
  %47 = load i64, i64* %ob_refcnt150, align 8, !dbg !2845, !tbaa !1991
  %inc151 = add i64 %47, 1, !dbg !2845
  store i64 %inc151, i64* %ob_refcnt150, align 8, !dbg !2845, !tbaa !1991
  br label %if.end.152, !dbg !2845

if.end.152:                                       ; preds = %if.end.142, %if.end.149
  %48 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_IndentationError, i64 0, i32 19), align 8, !dbg !2847, !tbaa !2143
  %and153 = and i64 %48, 4096, !dbg !2847
  %tobool154 = icmp eq i64 %and153, 0, !dbg !2847
  br i1 %tobool154, label %if.then.155, label %if.end.162, !dbg !2849

if.then.155:                                      ; preds = %if.end.152
  %call156 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_IndentationError) #2, !dbg !2850
  %cmp157 = icmp slt i32 %call156, 0, !dbg !2850
  br i1 %cmp157, label %if.then.158, label %if.end.159, !dbg !2854

if.then.158:                                      ; preds = %if.then.155
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2855
  unreachable, !dbg !2855

if.end.159:                                       ; preds = %if.then.155
  %49 = load %struct._object*, %struct._object** @PyExc_IndentationError, align 8, !dbg !2857, !tbaa !2002
  %ob_refcnt160 = getelementptr inbounds %struct._object, %struct._object* %49, i64 0, i32 0, !dbg !2857
  %50 = load i64, i64* %ob_refcnt160, align 8, !dbg !2857, !tbaa !1991
  %inc161 = add i64 %50, 1, !dbg !2857
  store i64 %inc161, i64* %ob_refcnt160, align 8, !dbg !2857, !tbaa !1991
  br label %if.end.162, !dbg !2857

if.end.162:                                       ; preds = %if.end.152, %if.end.159
  %51 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_TabError, i64 0, i32 19), align 8, !dbg !2859, !tbaa !2143
  %and163 = and i64 %51, 4096, !dbg !2859
  %tobool164 = icmp eq i64 %and163, 0, !dbg !2859
  br i1 %tobool164, label %if.then.165, label %if.end.172, !dbg !2861

if.then.165:                                      ; preds = %if.end.162
  %call166 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_TabError) #2, !dbg !2862
  %cmp167 = icmp slt i32 %call166, 0, !dbg !2862
  br i1 %cmp167, label %if.then.168, label %if.end.169, !dbg !2866

if.then.168:                                      ; preds = %if.then.165
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2867
  unreachable, !dbg !2867

if.end.169:                                       ; preds = %if.then.165
  %52 = load %struct._object*, %struct._object** @PyExc_TabError, align 8, !dbg !2869, !tbaa !2002
  %ob_refcnt170 = getelementptr inbounds %struct._object, %struct._object* %52, i64 0, i32 0, !dbg !2869
  %53 = load i64, i64* %ob_refcnt170, align 8, !dbg !2869, !tbaa !1991
  %inc171 = add i64 %53, 1, !dbg !2869
  store i64 %inc171, i64* %ob_refcnt170, align 8, !dbg !2869, !tbaa !1991
  br label %if.end.172, !dbg !2869

if.end.172:                                       ; preds = %if.end.162, %if.end.169
  %54 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_LookupError, i64 0, i32 19), align 8, !dbg !2871, !tbaa !2143
  %and173 = and i64 %54, 4096, !dbg !2871
  %tobool174 = icmp eq i64 %and173, 0, !dbg !2871
  br i1 %tobool174, label %if.then.175, label %if.end.182, !dbg !2873

if.then.175:                                      ; preds = %if.end.172
  %call176 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_LookupError) #2, !dbg !2874
  %cmp177 = icmp slt i32 %call176, 0, !dbg !2874
  br i1 %cmp177, label %if.then.178, label %if.end.179, !dbg !2878

if.then.178:                                      ; preds = %if.then.175
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2879
  unreachable, !dbg !2879

if.end.179:                                       ; preds = %if.then.175
  %55 = load %struct._object*, %struct._object** @PyExc_LookupError, align 8, !dbg !2881, !tbaa !2002
  %ob_refcnt180 = getelementptr inbounds %struct._object, %struct._object* %55, i64 0, i32 0, !dbg !2881
  %56 = load i64, i64* %ob_refcnt180, align 8, !dbg !2881, !tbaa !1991
  %inc181 = add i64 %56, 1, !dbg !2881
  store i64 %inc181, i64* %ob_refcnt180, align 8, !dbg !2881, !tbaa !1991
  br label %if.end.182, !dbg !2881

if.end.182:                                       ; preds = %if.end.172, %if.end.179
  %57 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_IndexError, i64 0, i32 19), align 8, !dbg !2883, !tbaa !2143
  %and183 = and i64 %57, 4096, !dbg !2883
  %tobool184 = icmp eq i64 %and183, 0, !dbg !2883
  br i1 %tobool184, label %if.then.185, label %if.end.192, !dbg !2885

if.then.185:                                      ; preds = %if.end.182
  %call186 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_IndexError) #2, !dbg !2886
  %cmp187 = icmp slt i32 %call186, 0, !dbg !2886
  br i1 %cmp187, label %if.then.188, label %if.end.189, !dbg !2890

if.then.188:                                      ; preds = %if.then.185
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2891
  unreachable, !dbg !2891

if.end.189:                                       ; preds = %if.then.185
  %58 = load %struct._object*, %struct._object** @PyExc_IndexError, align 8, !dbg !2893, !tbaa !2002
  %ob_refcnt190 = getelementptr inbounds %struct._object, %struct._object* %58, i64 0, i32 0, !dbg !2893
  %59 = load i64, i64* %ob_refcnt190, align 8, !dbg !2893, !tbaa !1991
  %inc191 = add i64 %59, 1, !dbg !2893
  store i64 %inc191, i64* %ob_refcnt190, align 8, !dbg !2893, !tbaa !1991
  br label %if.end.192, !dbg !2893

if.end.192:                                       ; preds = %if.end.182, %if.end.189
  %60 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_KeyError, i64 0, i32 19), align 8, !dbg !2895, !tbaa !2143
  %and193 = and i64 %60, 4096, !dbg !2895
  %tobool194 = icmp eq i64 %and193, 0, !dbg !2895
  br i1 %tobool194, label %if.then.195, label %if.end.202, !dbg !2897

if.then.195:                                      ; preds = %if.end.192
  %call196 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_KeyError) #2, !dbg !2898
  %cmp197 = icmp slt i32 %call196, 0, !dbg !2898
  br i1 %cmp197, label %if.then.198, label %if.end.199, !dbg !2902

if.then.198:                                      ; preds = %if.then.195
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2903
  unreachable, !dbg !2903

if.end.199:                                       ; preds = %if.then.195
  %61 = load %struct._object*, %struct._object** @PyExc_KeyError, align 8, !dbg !2905, !tbaa !2002
  %ob_refcnt200 = getelementptr inbounds %struct._object, %struct._object* %61, i64 0, i32 0, !dbg !2905
  %62 = load i64, i64* %ob_refcnt200, align 8, !dbg !2905, !tbaa !1991
  %inc201 = add i64 %62, 1, !dbg !2905
  store i64 %inc201, i64* %ob_refcnt200, align 8, !dbg !2905, !tbaa !1991
  br label %if.end.202, !dbg !2905

if.end.202:                                       ; preds = %if.end.192, %if.end.199
  %63 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ValueError, i64 0, i32 19), align 8, !dbg !2907, !tbaa !2143
  %and203 = and i64 %63, 4096, !dbg !2907
  %tobool204 = icmp eq i64 %and203, 0, !dbg !2907
  br i1 %tobool204, label %if.then.205, label %if.end.212, !dbg !2909

if.then.205:                                      ; preds = %if.end.202
  %call206 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_ValueError) #2, !dbg !2910
  %cmp207 = icmp slt i32 %call206, 0, !dbg !2910
  br i1 %cmp207, label %if.then.208, label %if.end.209, !dbg !2914

if.then.208:                                      ; preds = %if.then.205
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2915
  unreachable, !dbg !2915

if.end.209:                                       ; preds = %if.then.205
  %64 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !2917, !tbaa !2002
  %ob_refcnt210 = getelementptr inbounds %struct._object, %struct._object* %64, i64 0, i32 0, !dbg !2917
  %65 = load i64, i64* %ob_refcnt210, align 8, !dbg !2917, !tbaa !1991
  %inc211 = add i64 %65, 1, !dbg !2917
  store i64 %inc211, i64* %ob_refcnt210, align 8, !dbg !2917, !tbaa !1991
  br label %if.end.212, !dbg !2917

if.end.212:                                       ; preds = %if.end.202, %if.end.209
  %66 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_UnicodeError, i64 0, i32 19), align 8, !dbg !2919, !tbaa !2143
  %and213 = and i64 %66, 4096, !dbg !2919
  %tobool214 = icmp eq i64 %and213, 0, !dbg !2919
  br i1 %tobool214, label %if.then.215, label %if.end.222, !dbg !2921

if.then.215:                                      ; preds = %if.end.212
  %call216 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_UnicodeError) #2, !dbg !2922
  %cmp217 = icmp slt i32 %call216, 0, !dbg !2922
  br i1 %cmp217, label %if.then.218, label %if.end.219, !dbg !2926

if.then.218:                                      ; preds = %if.then.215
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2927
  unreachable, !dbg !2927

if.end.219:                                       ; preds = %if.then.215
  %67 = load %struct._object*, %struct._object** @PyExc_UnicodeError, align 8, !dbg !2929, !tbaa !2002
  %ob_refcnt220 = getelementptr inbounds %struct._object, %struct._object* %67, i64 0, i32 0, !dbg !2929
  %68 = load i64, i64* %ob_refcnt220, align 8, !dbg !2929, !tbaa !1991
  %inc221 = add i64 %68, 1, !dbg !2929
  store i64 %inc221, i64* %ob_refcnt220, align 8, !dbg !2929, !tbaa !1991
  br label %if.end.222, !dbg !2929

if.end.222:                                       ; preds = %if.end.212, %if.end.219
  %69 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_UnicodeEncodeError, i64 0, i32 19), align 8, !dbg !2931, !tbaa !2143
  %and223 = and i64 %69, 4096, !dbg !2931
  %tobool224 = icmp eq i64 %and223, 0, !dbg !2931
  br i1 %tobool224, label %if.then.225, label %if.end.232, !dbg !2933

if.then.225:                                      ; preds = %if.end.222
  %call226 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_UnicodeEncodeError) #2, !dbg !2934
  %cmp227 = icmp slt i32 %call226, 0, !dbg !2934
  br i1 %cmp227, label %if.then.228, label %if.end.229, !dbg !2938

if.then.228:                                      ; preds = %if.then.225
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2939
  unreachable, !dbg !2939

if.end.229:                                       ; preds = %if.then.225
  %70 = load %struct._object*, %struct._object** @PyExc_UnicodeEncodeError, align 8, !dbg !2941, !tbaa !2002
  %ob_refcnt230 = getelementptr inbounds %struct._object, %struct._object* %70, i64 0, i32 0, !dbg !2941
  %71 = load i64, i64* %ob_refcnt230, align 8, !dbg !2941, !tbaa !1991
  %inc231 = add i64 %71, 1, !dbg !2941
  store i64 %inc231, i64* %ob_refcnt230, align 8, !dbg !2941, !tbaa !1991
  br label %if.end.232, !dbg !2941

if.end.232:                                       ; preds = %if.end.222, %if.end.229
  %72 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_UnicodeDecodeError, i64 0, i32 19), align 8, !dbg !2943, !tbaa !2143
  %and233 = and i64 %72, 4096, !dbg !2943
  %tobool234 = icmp eq i64 %and233, 0, !dbg !2943
  br i1 %tobool234, label %if.then.235, label %if.end.242, !dbg !2945

if.then.235:                                      ; preds = %if.end.232
  %call236 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_UnicodeDecodeError) #2, !dbg !2946
  %cmp237 = icmp slt i32 %call236, 0, !dbg !2946
  br i1 %cmp237, label %if.then.238, label %if.end.239, !dbg !2950

if.then.238:                                      ; preds = %if.then.235
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2951
  unreachable, !dbg !2951

if.end.239:                                       ; preds = %if.then.235
  %73 = load %struct._object*, %struct._object** @PyExc_UnicodeDecodeError, align 8, !dbg !2953, !tbaa !2002
  %ob_refcnt240 = getelementptr inbounds %struct._object, %struct._object* %73, i64 0, i32 0, !dbg !2953
  %74 = load i64, i64* %ob_refcnt240, align 8, !dbg !2953, !tbaa !1991
  %inc241 = add i64 %74, 1, !dbg !2953
  store i64 %inc241, i64* %ob_refcnt240, align 8, !dbg !2953, !tbaa !1991
  br label %if.end.242, !dbg !2953

if.end.242:                                       ; preds = %if.end.232, %if.end.239
  %75 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_UnicodeTranslateError, i64 0, i32 19), align 8, !dbg !2955, !tbaa !2143
  %and243 = and i64 %75, 4096, !dbg !2955
  %tobool244 = icmp eq i64 %and243, 0, !dbg !2955
  br i1 %tobool244, label %if.then.245, label %if.end.252, !dbg !2957

if.then.245:                                      ; preds = %if.end.242
  %call246 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_UnicodeTranslateError) #2, !dbg !2958
  %cmp247 = icmp slt i32 %call246, 0, !dbg !2958
  br i1 %cmp247, label %if.then.248, label %if.end.249, !dbg !2962

if.then.248:                                      ; preds = %if.then.245
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2963
  unreachable, !dbg !2963

if.end.249:                                       ; preds = %if.then.245
  %76 = load %struct._object*, %struct._object** @PyExc_UnicodeTranslateError, align 8, !dbg !2965, !tbaa !2002
  %ob_refcnt250 = getelementptr inbounds %struct._object, %struct._object* %76, i64 0, i32 0, !dbg !2965
  %77 = load i64, i64* %ob_refcnt250, align 8, !dbg !2965, !tbaa !1991
  %inc251 = add i64 %77, 1, !dbg !2965
  store i64 %inc251, i64* %ob_refcnt250, align 8, !dbg !2965, !tbaa !1991
  br label %if.end.252, !dbg !2965

if.end.252:                                       ; preds = %if.end.242, %if.end.249
  %78 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_AssertionError, i64 0, i32 19), align 8, !dbg !2967, !tbaa !2143
  %and253 = and i64 %78, 4096, !dbg !2967
  %tobool254 = icmp eq i64 %and253, 0, !dbg !2967
  br i1 %tobool254, label %if.then.255, label %if.end.262, !dbg !2969

if.then.255:                                      ; preds = %if.end.252
  %call256 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_AssertionError) #2, !dbg !2970
  %cmp257 = icmp slt i32 %call256, 0, !dbg !2970
  br i1 %cmp257, label %if.then.258, label %if.end.259, !dbg !2974

if.then.258:                                      ; preds = %if.then.255
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2975
  unreachable, !dbg !2975

if.end.259:                                       ; preds = %if.then.255
  %79 = load %struct._object*, %struct._object** @PyExc_AssertionError, align 8, !dbg !2977, !tbaa !2002
  %ob_refcnt260 = getelementptr inbounds %struct._object, %struct._object* %79, i64 0, i32 0, !dbg !2977
  %80 = load i64, i64* %ob_refcnt260, align 8, !dbg !2977, !tbaa !1991
  %inc261 = add i64 %80, 1, !dbg !2977
  store i64 %inc261, i64* %ob_refcnt260, align 8, !dbg !2977, !tbaa !1991
  br label %if.end.262, !dbg !2977

if.end.262:                                       ; preds = %if.end.252, %if.end.259
  %81 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ArithmeticError, i64 0, i32 19), align 8, !dbg !2979, !tbaa !2143
  %and263 = and i64 %81, 4096, !dbg !2979
  %tobool264 = icmp eq i64 %and263, 0, !dbg !2979
  br i1 %tobool264, label %if.then.265, label %if.end.272, !dbg !2981

if.then.265:                                      ; preds = %if.end.262
  %call266 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_ArithmeticError) #2, !dbg !2982
  %cmp267 = icmp slt i32 %call266, 0, !dbg !2982
  br i1 %cmp267, label %if.then.268, label %if.end.269, !dbg !2986

if.then.268:                                      ; preds = %if.then.265
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2987
  unreachable, !dbg !2987

if.end.269:                                       ; preds = %if.then.265
  %82 = load %struct._object*, %struct._object** @PyExc_ArithmeticError, align 8, !dbg !2989, !tbaa !2002
  %ob_refcnt270 = getelementptr inbounds %struct._object, %struct._object* %82, i64 0, i32 0, !dbg !2989
  %83 = load i64, i64* %ob_refcnt270, align 8, !dbg !2989, !tbaa !1991
  %inc271 = add i64 %83, 1, !dbg !2989
  store i64 %inc271, i64* %ob_refcnt270, align 8, !dbg !2989, !tbaa !1991
  br label %if.end.272, !dbg !2989

if.end.272:                                       ; preds = %if.end.262, %if.end.269
  %84 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_FloatingPointError, i64 0, i32 19), align 8, !dbg !2991, !tbaa !2143
  %and273 = and i64 %84, 4096, !dbg !2991
  %tobool274 = icmp eq i64 %and273, 0, !dbg !2991
  br i1 %tobool274, label %if.then.275, label %if.end.282, !dbg !2993

if.then.275:                                      ; preds = %if.end.272
  %call276 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_FloatingPointError) #2, !dbg !2994
  %cmp277 = icmp slt i32 %call276, 0, !dbg !2994
  br i1 %cmp277, label %if.then.278, label %if.end.279, !dbg !2998

if.then.278:                                      ; preds = %if.then.275
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2999
  unreachable, !dbg !2999

if.end.279:                                       ; preds = %if.then.275
  %85 = load %struct._object*, %struct._object** @PyExc_FloatingPointError, align 8, !dbg !3001, !tbaa !2002
  %ob_refcnt280 = getelementptr inbounds %struct._object, %struct._object* %85, i64 0, i32 0, !dbg !3001
  %86 = load i64, i64* %ob_refcnt280, align 8, !dbg !3001, !tbaa !1991
  %inc281 = add i64 %86, 1, !dbg !3001
  store i64 %inc281, i64* %ob_refcnt280, align 8, !dbg !3001, !tbaa !1991
  br label %if.end.282, !dbg !3001

if.end.282:                                       ; preds = %if.end.272, %if.end.279
  %87 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_OverflowError, i64 0, i32 19), align 8, !dbg !3003, !tbaa !2143
  %and283 = and i64 %87, 4096, !dbg !3003
  %tobool284 = icmp eq i64 %and283, 0, !dbg !3003
  br i1 %tobool284, label %if.then.285, label %if.end.292, !dbg !3005

if.then.285:                                      ; preds = %if.end.282
  %call286 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_OverflowError) #2, !dbg !3006
  %cmp287 = icmp slt i32 %call286, 0, !dbg !3006
  br i1 %cmp287, label %if.then.288, label %if.end.289, !dbg !3010

if.then.288:                                      ; preds = %if.then.285
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3011
  unreachable, !dbg !3011

if.end.289:                                       ; preds = %if.then.285
  %88 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8, !dbg !3013, !tbaa !2002
  %ob_refcnt290 = getelementptr inbounds %struct._object, %struct._object* %88, i64 0, i32 0, !dbg !3013
  %89 = load i64, i64* %ob_refcnt290, align 8, !dbg !3013, !tbaa !1991
  %inc291 = add i64 %89, 1, !dbg !3013
  store i64 %inc291, i64* %ob_refcnt290, align 8, !dbg !3013, !tbaa !1991
  br label %if.end.292, !dbg !3013

if.end.292:                                       ; preds = %if.end.282, %if.end.289
  %90 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ZeroDivisionError, i64 0, i32 19), align 8, !dbg !3015, !tbaa !2143
  %and293 = and i64 %90, 4096, !dbg !3015
  %tobool294 = icmp eq i64 %and293, 0, !dbg !3015
  br i1 %tobool294, label %if.then.295, label %if.end.302, !dbg !3017

if.then.295:                                      ; preds = %if.end.292
  %call296 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_ZeroDivisionError) #2, !dbg !3018
  %cmp297 = icmp slt i32 %call296, 0, !dbg !3018
  br i1 %cmp297, label %if.then.298, label %if.end.299, !dbg !3022

if.then.298:                                      ; preds = %if.then.295
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3023
  unreachable, !dbg !3023

if.end.299:                                       ; preds = %if.then.295
  %91 = load %struct._object*, %struct._object** @PyExc_ZeroDivisionError, align 8, !dbg !3025, !tbaa !2002
  %ob_refcnt300 = getelementptr inbounds %struct._object, %struct._object* %91, i64 0, i32 0, !dbg !3025
  %92 = load i64, i64* %ob_refcnt300, align 8, !dbg !3025, !tbaa !1991
  %inc301 = add i64 %92, 1, !dbg !3025
  store i64 %inc301, i64* %ob_refcnt300, align 8, !dbg !3025, !tbaa !1991
  br label %if.end.302, !dbg !3025

if.end.302:                                       ; preds = %if.end.292, %if.end.299
  %93 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_SystemError, i64 0, i32 19), align 8, !dbg !3027, !tbaa !2143
  %and303 = and i64 %93, 4096, !dbg !3027
  %tobool304 = icmp eq i64 %and303, 0, !dbg !3027
  br i1 %tobool304, label %if.then.305, label %if.end.312, !dbg !3029

if.then.305:                                      ; preds = %if.end.302
  %call306 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_SystemError) #2, !dbg !3030
  %cmp307 = icmp slt i32 %call306, 0, !dbg !3030
  br i1 %cmp307, label %if.then.308, label %if.end.309, !dbg !3034

if.then.308:                                      ; preds = %if.then.305
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3035
  unreachable, !dbg !3035

if.end.309:                                       ; preds = %if.then.305
  %94 = load %struct._object*, %struct._object** @PyExc_SystemError, align 8, !dbg !3037, !tbaa !2002
  %ob_refcnt310 = getelementptr inbounds %struct._object, %struct._object* %94, i64 0, i32 0, !dbg !3037
  %95 = load i64, i64* %ob_refcnt310, align 8, !dbg !3037, !tbaa !1991
  %inc311 = add i64 %95, 1, !dbg !3037
  store i64 %inc311, i64* %ob_refcnt310, align 8, !dbg !3037, !tbaa !1991
  br label %if.end.312, !dbg !3037

if.end.312:                                       ; preds = %if.end.302, %if.end.309
  %96 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ReferenceError, i64 0, i32 19), align 8, !dbg !3039, !tbaa !2143
  %and313 = and i64 %96, 4096, !dbg !3039
  %tobool314 = icmp eq i64 %and313, 0, !dbg !3039
  br i1 %tobool314, label %if.then.315, label %if.end.322, !dbg !3041

if.then.315:                                      ; preds = %if.end.312
  %call316 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_ReferenceError) #2, !dbg !3042
  %cmp317 = icmp slt i32 %call316, 0, !dbg !3042
  br i1 %cmp317, label %if.then.318, label %if.end.319, !dbg !3046

if.then.318:                                      ; preds = %if.then.315
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3047
  unreachable, !dbg !3047

if.end.319:                                       ; preds = %if.then.315
  %97 = load %struct._object*, %struct._object** @PyExc_ReferenceError, align 8, !dbg !3049, !tbaa !2002
  %ob_refcnt320 = getelementptr inbounds %struct._object, %struct._object* %97, i64 0, i32 0, !dbg !3049
  %98 = load i64, i64* %ob_refcnt320, align 8, !dbg !3049, !tbaa !1991
  %inc321 = add i64 %98, 1, !dbg !3049
  store i64 %inc321, i64* %ob_refcnt320, align 8, !dbg !3049, !tbaa !1991
  br label %if.end.322, !dbg !3049

if.end.322:                                       ; preds = %if.end.312, %if.end.319
  %99 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_BufferError, i64 0, i32 19), align 8, !dbg !3051, !tbaa !2143
  %and323 = and i64 %99, 4096, !dbg !3051
  %tobool324 = icmp eq i64 %and323, 0, !dbg !3051
  br i1 %tobool324, label %if.then.325, label %if.end.332, !dbg !3053

if.then.325:                                      ; preds = %if.end.322
  %call326 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_BufferError) #2, !dbg !3054
  %cmp327 = icmp slt i32 %call326, 0, !dbg !3054
  br i1 %cmp327, label %if.then.328, label %if.end.329, !dbg !3058

if.then.328:                                      ; preds = %if.then.325
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3059
  unreachable, !dbg !3059

if.end.329:                                       ; preds = %if.then.325
  %100 = load %struct._object*, %struct._object** @PyExc_BufferError, align 8, !dbg !3061, !tbaa !2002
  %ob_refcnt330 = getelementptr inbounds %struct._object, %struct._object* %100, i64 0, i32 0, !dbg !3061
  %101 = load i64, i64* %ob_refcnt330, align 8, !dbg !3061, !tbaa !1991
  %inc331 = add i64 %101, 1, !dbg !3061
  store i64 %inc331, i64* %ob_refcnt330, align 8, !dbg !3061, !tbaa !1991
  br label %if.end.332, !dbg !3061

if.end.332:                                       ; preds = %if.end.322, %if.end.329
  %102 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_MemoryError, i64 0, i32 19), align 8, !dbg !3063, !tbaa !2143
  %and333 = and i64 %102, 4096, !dbg !3063
  %tobool334 = icmp eq i64 %and333, 0, !dbg !3063
  br i1 %tobool334, label %if.then.335, label %if.end.342, !dbg !3065

if.then.335:                                      ; preds = %if.end.332
  %call336 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_MemoryError) #2, !dbg !3066
  %cmp337 = icmp slt i32 %call336, 0, !dbg !3066
  br i1 %cmp337, label %if.then.338, label %if.end.339, !dbg !3070

if.then.338:                                      ; preds = %if.then.335
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3071
  unreachable, !dbg !3071

if.end.339:                                       ; preds = %if.then.335
  %103 = load %struct._object*, %struct._object** @PyExc_MemoryError, align 8, !dbg !3073, !tbaa !2002
  %ob_refcnt340 = getelementptr inbounds %struct._object, %struct._object* %103, i64 0, i32 0, !dbg !3073
  %104 = load i64, i64* %ob_refcnt340, align 8, !dbg !3073, !tbaa !1991
  %inc341 = add i64 %104, 1, !dbg !3073
  store i64 %inc341, i64* %ob_refcnt340, align 8, !dbg !3073, !tbaa !1991
  br label %if.end.342, !dbg !3073

if.end.342:                                       ; preds = %if.end.332, %if.end.339
  %105 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_BufferError, i64 0, i32 19), align 8, !dbg !3075, !tbaa !2143
  %and343 = and i64 %105, 4096, !dbg !3075
  %tobool344 = icmp eq i64 %and343, 0, !dbg !3075
  br i1 %tobool344, label %if.then.345, label %if.end.352, !dbg !3077

if.then.345:                                      ; preds = %if.end.342
  %call346 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_BufferError) #2, !dbg !3078
  %cmp347 = icmp slt i32 %call346, 0, !dbg !3078
  br i1 %cmp347, label %if.then.348, label %if.end.349, !dbg !3082

if.then.348:                                      ; preds = %if.then.345
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3083
  unreachable, !dbg !3083

if.end.349:                                       ; preds = %if.then.345
  %106 = load %struct._object*, %struct._object** @PyExc_BufferError, align 8, !dbg !3085, !tbaa !2002
  %ob_refcnt350 = getelementptr inbounds %struct._object, %struct._object* %106, i64 0, i32 0, !dbg !3085
  %107 = load i64, i64* %ob_refcnt350, align 8, !dbg !3085, !tbaa !1991
  %inc351 = add i64 %107, 1, !dbg !3085
  store i64 %inc351, i64* %ob_refcnt350, align 8, !dbg !3085, !tbaa !1991
  br label %if.end.352, !dbg !3085

if.end.352:                                       ; preds = %if.end.342, %if.end.349
  %108 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_Warning, i64 0, i32 19), align 8, !dbg !3087, !tbaa !2143
  %and353 = and i64 %108, 4096, !dbg !3087
  %tobool354 = icmp eq i64 %and353, 0, !dbg !3087
  br i1 %tobool354, label %if.then.355, label %if.end.362, !dbg !3089

if.then.355:                                      ; preds = %if.end.352
  %call356 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_Warning) #2, !dbg !3090
  %cmp357 = icmp slt i32 %call356, 0, !dbg !3090
  br i1 %cmp357, label %if.then.358, label %if.end.359, !dbg !3094

if.then.358:                                      ; preds = %if.then.355
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3095
  unreachable, !dbg !3095

if.end.359:                                       ; preds = %if.then.355
  %109 = load %struct._object*, %struct._object** @PyExc_Warning, align 8, !dbg !3097, !tbaa !2002
  %ob_refcnt360 = getelementptr inbounds %struct._object, %struct._object* %109, i64 0, i32 0, !dbg !3097
  %110 = load i64, i64* %ob_refcnt360, align 8, !dbg !3097, !tbaa !1991
  %inc361 = add i64 %110, 1, !dbg !3097
  store i64 %inc361, i64* %ob_refcnt360, align 8, !dbg !3097, !tbaa !1991
  br label %if.end.362, !dbg !3097

if.end.362:                                       ; preds = %if.end.352, %if.end.359
  %111 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_UserWarning, i64 0, i32 19), align 8, !dbg !3099, !tbaa !2143
  %and363 = and i64 %111, 4096, !dbg !3099
  %tobool364 = icmp eq i64 %and363, 0, !dbg !3099
  br i1 %tobool364, label %if.then.365, label %if.end.372, !dbg !3101

if.then.365:                                      ; preds = %if.end.362
  %call366 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_UserWarning) #2, !dbg !3102
  %cmp367 = icmp slt i32 %call366, 0, !dbg !3102
  br i1 %cmp367, label %if.then.368, label %if.end.369, !dbg !3106

if.then.368:                                      ; preds = %if.then.365
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3107
  unreachable, !dbg !3107

if.end.369:                                       ; preds = %if.then.365
  %112 = load %struct._object*, %struct._object** @PyExc_UserWarning, align 8, !dbg !3109, !tbaa !2002
  %ob_refcnt370 = getelementptr inbounds %struct._object, %struct._object* %112, i64 0, i32 0, !dbg !3109
  %113 = load i64, i64* %ob_refcnt370, align 8, !dbg !3109, !tbaa !1991
  %inc371 = add i64 %113, 1, !dbg !3109
  store i64 %inc371, i64* %ob_refcnt370, align 8, !dbg !3109, !tbaa !1991
  br label %if.end.372, !dbg !3109

if.end.372:                                       ; preds = %if.end.362, %if.end.369
  %114 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_DeprecationWarning, i64 0, i32 19), align 8, !dbg !3111, !tbaa !2143
  %and373 = and i64 %114, 4096, !dbg !3111
  %tobool374 = icmp eq i64 %and373, 0, !dbg !3111
  br i1 %tobool374, label %if.then.375, label %if.end.382, !dbg !3113

if.then.375:                                      ; preds = %if.end.372
  %call376 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_DeprecationWarning) #2, !dbg !3114
  %cmp377 = icmp slt i32 %call376, 0, !dbg !3114
  br i1 %cmp377, label %if.then.378, label %if.end.379, !dbg !3118

if.then.378:                                      ; preds = %if.then.375
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3119
  unreachable, !dbg !3119

if.end.379:                                       ; preds = %if.then.375
  %115 = load %struct._object*, %struct._object** @PyExc_DeprecationWarning, align 8, !dbg !3121, !tbaa !2002
  %ob_refcnt380 = getelementptr inbounds %struct._object, %struct._object* %115, i64 0, i32 0, !dbg !3121
  %116 = load i64, i64* %ob_refcnt380, align 8, !dbg !3121, !tbaa !1991
  %inc381 = add i64 %116, 1, !dbg !3121
  store i64 %inc381, i64* %ob_refcnt380, align 8, !dbg !3121, !tbaa !1991
  br label %if.end.382, !dbg !3121

if.end.382:                                       ; preds = %if.end.372, %if.end.379
  %117 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_PendingDeprecationWarning, i64 0, i32 19), align 8, !dbg !3123, !tbaa !2143
  %and383 = and i64 %117, 4096, !dbg !3123
  %tobool384 = icmp eq i64 %and383, 0, !dbg !3123
  br i1 %tobool384, label %if.then.385, label %if.end.392, !dbg !3125

if.then.385:                                      ; preds = %if.end.382
  %call386 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_PendingDeprecationWarning) #2, !dbg !3126
  %cmp387 = icmp slt i32 %call386, 0, !dbg !3126
  br i1 %cmp387, label %if.then.388, label %if.end.389, !dbg !3130

if.then.388:                                      ; preds = %if.then.385
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3131
  unreachable, !dbg !3131

if.end.389:                                       ; preds = %if.then.385
  %118 = load %struct._object*, %struct._object** @PyExc_PendingDeprecationWarning, align 8, !dbg !3133, !tbaa !2002
  %ob_refcnt390 = getelementptr inbounds %struct._object, %struct._object* %118, i64 0, i32 0, !dbg !3133
  %119 = load i64, i64* %ob_refcnt390, align 8, !dbg !3133, !tbaa !1991
  %inc391 = add i64 %119, 1, !dbg !3133
  store i64 %inc391, i64* %ob_refcnt390, align 8, !dbg !3133, !tbaa !1991
  br label %if.end.392, !dbg !3133

if.end.392:                                       ; preds = %if.end.382, %if.end.389
  %120 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_SyntaxWarning, i64 0, i32 19), align 8, !dbg !3135, !tbaa !2143
  %and393 = and i64 %120, 4096, !dbg !3135
  %tobool394 = icmp eq i64 %and393, 0, !dbg !3135
  br i1 %tobool394, label %if.then.395, label %if.end.402, !dbg !3137

if.then.395:                                      ; preds = %if.end.392
  %call396 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_SyntaxWarning) #2, !dbg !3138
  %cmp397 = icmp slt i32 %call396, 0, !dbg !3138
  br i1 %cmp397, label %if.then.398, label %if.end.399, !dbg !3142

if.then.398:                                      ; preds = %if.then.395
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3143
  unreachable, !dbg !3143

if.end.399:                                       ; preds = %if.then.395
  %121 = load %struct._object*, %struct._object** @PyExc_SyntaxWarning, align 8, !dbg !3145, !tbaa !2002
  %ob_refcnt400 = getelementptr inbounds %struct._object, %struct._object* %121, i64 0, i32 0, !dbg !3145
  %122 = load i64, i64* %ob_refcnt400, align 8, !dbg !3145, !tbaa !1991
  %inc401 = add i64 %122, 1, !dbg !3145
  store i64 %inc401, i64* %ob_refcnt400, align 8, !dbg !3145, !tbaa !1991
  br label %if.end.402, !dbg !3145

if.end.402:                                       ; preds = %if.end.392, %if.end.399
  %123 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_RuntimeWarning, i64 0, i32 19), align 8, !dbg !3147, !tbaa !2143
  %and403 = and i64 %123, 4096, !dbg !3147
  %tobool404 = icmp eq i64 %and403, 0, !dbg !3147
  br i1 %tobool404, label %if.then.405, label %if.end.412, !dbg !3149

if.then.405:                                      ; preds = %if.end.402
  %call406 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_RuntimeWarning) #2, !dbg !3150
  %cmp407 = icmp slt i32 %call406, 0, !dbg !3150
  br i1 %cmp407, label %if.then.408, label %if.end.409, !dbg !3154

if.then.408:                                      ; preds = %if.then.405
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3155
  unreachable, !dbg !3155

if.end.409:                                       ; preds = %if.then.405
  %124 = load %struct._object*, %struct._object** @PyExc_RuntimeWarning, align 8, !dbg !3157, !tbaa !2002
  %ob_refcnt410 = getelementptr inbounds %struct._object, %struct._object* %124, i64 0, i32 0, !dbg !3157
  %125 = load i64, i64* %ob_refcnt410, align 8, !dbg !3157, !tbaa !1991
  %inc411 = add i64 %125, 1, !dbg !3157
  store i64 %inc411, i64* %ob_refcnt410, align 8, !dbg !3157, !tbaa !1991
  br label %if.end.412, !dbg !3157

if.end.412:                                       ; preds = %if.end.402, %if.end.409
  %126 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_FutureWarning, i64 0, i32 19), align 8, !dbg !3159, !tbaa !2143
  %and413 = and i64 %126, 4096, !dbg !3159
  %tobool414 = icmp eq i64 %and413, 0, !dbg !3159
  br i1 %tobool414, label %if.then.415, label %if.end.422, !dbg !3161

if.then.415:                                      ; preds = %if.end.412
  %call416 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_FutureWarning) #2, !dbg !3162
  %cmp417 = icmp slt i32 %call416, 0, !dbg !3162
  br i1 %cmp417, label %if.then.418, label %if.end.419, !dbg !3166

if.then.418:                                      ; preds = %if.then.415
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3167
  unreachable, !dbg !3167

if.end.419:                                       ; preds = %if.then.415
  %127 = load %struct._object*, %struct._object** @PyExc_FutureWarning, align 8, !dbg !3169, !tbaa !2002
  %ob_refcnt420 = getelementptr inbounds %struct._object, %struct._object* %127, i64 0, i32 0, !dbg !3169
  %128 = load i64, i64* %ob_refcnt420, align 8, !dbg !3169, !tbaa !1991
  %inc421 = add i64 %128, 1, !dbg !3169
  store i64 %inc421, i64* %ob_refcnt420, align 8, !dbg !3169, !tbaa !1991
  br label %if.end.422, !dbg !3169

if.end.422:                                       ; preds = %if.end.412, %if.end.419
  %129 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ImportWarning, i64 0, i32 19), align 8, !dbg !3171, !tbaa !2143
  %and423 = and i64 %129, 4096, !dbg !3171
  %tobool424 = icmp eq i64 %and423, 0, !dbg !3171
  br i1 %tobool424, label %if.then.425, label %if.end.432, !dbg !3173

if.then.425:                                      ; preds = %if.end.422
  %call426 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_ImportWarning) #2, !dbg !3174
  %cmp427 = icmp slt i32 %call426, 0, !dbg !3174
  br i1 %cmp427, label %if.then.428, label %if.end.429, !dbg !3178

if.then.428:                                      ; preds = %if.then.425
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3179
  unreachable, !dbg !3179

if.end.429:                                       ; preds = %if.then.425
  %130 = load %struct._object*, %struct._object** @PyExc_ImportWarning, align 8, !dbg !3181, !tbaa !2002
  %ob_refcnt430 = getelementptr inbounds %struct._object, %struct._object* %130, i64 0, i32 0, !dbg !3181
  %131 = load i64, i64* %ob_refcnt430, align 8, !dbg !3181, !tbaa !1991
  %inc431 = add i64 %131, 1, !dbg !3181
  store i64 %inc431, i64* %ob_refcnt430, align 8, !dbg !3181, !tbaa !1991
  br label %if.end.432, !dbg !3181

if.end.432:                                       ; preds = %if.end.422, %if.end.429
  %132 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_UnicodeWarning, i64 0, i32 19), align 8, !dbg !3183, !tbaa !2143
  %and433 = and i64 %132, 4096, !dbg !3183
  %tobool434 = icmp eq i64 %and433, 0, !dbg !3183
  br i1 %tobool434, label %if.then.435, label %if.end.442, !dbg !3185

if.then.435:                                      ; preds = %if.end.432
  %call436 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_UnicodeWarning) #2, !dbg !3186
  %cmp437 = icmp slt i32 %call436, 0, !dbg !3186
  br i1 %cmp437, label %if.then.438, label %if.end.439, !dbg !3190

if.then.438:                                      ; preds = %if.then.435
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3191
  unreachable, !dbg !3191

if.end.439:                                       ; preds = %if.then.435
  %133 = load %struct._object*, %struct._object** @PyExc_UnicodeWarning, align 8, !dbg !3193, !tbaa !2002
  %ob_refcnt440 = getelementptr inbounds %struct._object, %struct._object* %133, i64 0, i32 0, !dbg !3193
  %134 = load i64, i64* %ob_refcnt440, align 8, !dbg !3193, !tbaa !1991
  %inc441 = add i64 %134, 1, !dbg !3193
  store i64 %inc441, i64* %ob_refcnt440, align 8, !dbg !3193, !tbaa !1991
  br label %if.end.442, !dbg !3193

if.end.442:                                       ; preds = %if.end.432, %if.end.439
  %135 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_BytesWarning, i64 0, i32 19), align 8, !dbg !3195, !tbaa !2143
  %and443 = and i64 %135, 4096, !dbg !3195
  %tobool444 = icmp eq i64 %and443, 0, !dbg !3195
  br i1 %tobool444, label %if.then.445, label %if.end.452, !dbg !3197

if.then.445:                                      ; preds = %if.end.442
  %call446 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_BytesWarning) #2, !dbg !3198
  %cmp447 = icmp slt i32 %call446, 0, !dbg !3198
  br i1 %cmp447, label %if.then.448, label %if.end.449, !dbg !3202

if.then.448:                                      ; preds = %if.then.445
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3203
  unreachable, !dbg !3203

if.end.449:                                       ; preds = %if.then.445
  %136 = load %struct._object*, %struct._object** @PyExc_BytesWarning, align 8, !dbg !3205, !tbaa !2002
  %ob_refcnt450 = getelementptr inbounds %struct._object, %struct._object* %136, i64 0, i32 0, !dbg !3205
  %137 = load i64, i64* %ob_refcnt450, align 8, !dbg !3205, !tbaa !1991
  %inc451 = add i64 %137, 1, !dbg !3205
  store i64 %inc451, i64* %ob_refcnt450, align 8, !dbg !3205, !tbaa !1991
  br label %if.end.452, !dbg !3205

if.end.452:                                       ; preds = %if.end.442, %if.end.449
  %138 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ResourceWarning, i64 0, i32 19), align 8, !dbg !3207, !tbaa !2143
  %and453 = and i64 %138, 4096, !dbg !3207
  %tobool454 = icmp eq i64 %and453, 0, !dbg !3207
  br i1 %tobool454, label %if.then.455, label %if.end.462, !dbg !3209

if.then.455:                                      ; preds = %if.end.452
  %call456 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_ResourceWarning) #2, !dbg !3210
  %cmp457 = icmp slt i32 %call456, 0, !dbg !3210
  br i1 %cmp457, label %if.then.458, label %if.end.459, !dbg !3214

if.then.458:                                      ; preds = %if.then.455
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3215
  unreachable, !dbg !3215

if.end.459:                                       ; preds = %if.then.455
  %139 = load %struct._object*, %struct._object** @PyExc_ResourceWarning, align 8, !dbg !3217, !tbaa !2002
  %ob_refcnt460 = getelementptr inbounds %struct._object, %struct._object* %139, i64 0, i32 0, !dbg !3217
  %140 = load i64, i64* %ob_refcnt460, align 8, !dbg !3217, !tbaa !1991
  %inc461 = add i64 %140, 1, !dbg !3217
  store i64 %inc461, i64* %ob_refcnt460, align 8, !dbg !3217, !tbaa !1991
  br label %if.end.462, !dbg !3217

if.end.462:                                       ; preds = %if.end.452, %if.end.459
  %141 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ConnectionError, i64 0, i32 19), align 8, !dbg !3219, !tbaa !2143
  %and463 = and i64 %141, 4096, !dbg !3219
  %tobool464 = icmp eq i64 %and463, 0, !dbg !3219
  br i1 %tobool464, label %if.then.465, label %if.end.472, !dbg !3221

if.then.465:                                      ; preds = %if.end.462
  %call466 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_ConnectionError) #2, !dbg !3222
  %cmp467 = icmp slt i32 %call466, 0, !dbg !3222
  br i1 %cmp467, label %if.then.468, label %if.end.469, !dbg !3226

if.then.468:                                      ; preds = %if.then.465
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3227
  unreachable, !dbg !3227

if.end.469:                                       ; preds = %if.then.465
  %142 = load %struct._object*, %struct._object** @PyExc_ConnectionError, align 8, !dbg !3229, !tbaa !2002
  %ob_refcnt470 = getelementptr inbounds %struct._object, %struct._object* %142, i64 0, i32 0, !dbg !3229
  %143 = load i64, i64* %ob_refcnt470, align 8, !dbg !3229, !tbaa !1991
  %inc471 = add i64 %143, 1, !dbg !3229
  store i64 %inc471, i64* %ob_refcnt470, align 8, !dbg !3229, !tbaa !1991
  br label %if.end.472, !dbg !3229

if.end.472:                                       ; preds = %if.end.462, %if.end.469
  %144 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_BlockingIOError, i64 0, i32 19), align 8, !dbg !3231, !tbaa !2143
  %and473 = and i64 %144, 4096, !dbg !3231
  %tobool474 = icmp eq i64 %and473, 0, !dbg !3231
  br i1 %tobool474, label %if.then.475, label %if.end.482, !dbg !3233

if.then.475:                                      ; preds = %if.end.472
  %call476 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_BlockingIOError) #2, !dbg !3234
  %cmp477 = icmp slt i32 %call476, 0, !dbg !3234
  br i1 %cmp477, label %if.then.478, label %if.end.479, !dbg !3238

if.then.478:                                      ; preds = %if.then.475
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3239
  unreachable, !dbg !3239

if.end.479:                                       ; preds = %if.then.475
  %145 = load %struct._object*, %struct._object** @PyExc_BlockingIOError, align 8, !dbg !3241, !tbaa !2002
  %ob_refcnt480 = getelementptr inbounds %struct._object, %struct._object* %145, i64 0, i32 0, !dbg !3241
  %146 = load i64, i64* %ob_refcnt480, align 8, !dbg !3241, !tbaa !1991
  %inc481 = add i64 %146, 1, !dbg !3241
  store i64 %inc481, i64* %ob_refcnt480, align 8, !dbg !3241, !tbaa !1991
  br label %if.end.482, !dbg !3241

if.end.482:                                       ; preds = %if.end.472, %if.end.479
  %147 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_BrokenPipeError, i64 0, i32 19), align 8, !dbg !3243, !tbaa !2143
  %and483 = and i64 %147, 4096, !dbg !3243
  %tobool484 = icmp eq i64 %and483, 0, !dbg !3243
  br i1 %tobool484, label %if.then.485, label %if.end.492, !dbg !3245

if.then.485:                                      ; preds = %if.end.482
  %call486 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_BrokenPipeError) #2, !dbg !3246
  %cmp487 = icmp slt i32 %call486, 0, !dbg !3246
  br i1 %cmp487, label %if.then.488, label %if.end.489, !dbg !3250

if.then.488:                                      ; preds = %if.then.485
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3251
  unreachable, !dbg !3251

if.end.489:                                       ; preds = %if.then.485
  %148 = load %struct._object*, %struct._object** @PyExc_BrokenPipeError, align 8, !dbg !3253, !tbaa !2002
  %ob_refcnt490 = getelementptr inbounds %struct._object, %struct._object* %148, i64 0, i32 0, !dbg !3253
  %149 = load i64, i64* %ob_refcnt490, align 8, !dbg !3253, !tbaa !1991
  %inc491 = add i64 %149, 1, !dbg !3253
  store i64 %inc491, i64* %ob_refcnt490, align 8, !dbg !3253, !tbaa !1991
  br label %if.end.492, !dbg !3253

if.end.492:                                       ; preds = %if.end.482, %if.end.489
  %150 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ChildProcessError, i64 0, i32 19), align 8, !dbg !3255, !tbaa !2143
  %and493 = and i64 %150, 4096, !dbg !3255
  %tobool494 = icmp eq i64 %and493, 0, !dbg !3255
  br i1 %tobool494, label %if.then.495, label %if.end.502, !dbg !3257

if.then.495:                                      ; preds = %if.end.492
  %call496 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_ChildProcessError) #2, !dbg !3258
  %cmp497 = icmp slt i32 %call496, 0, !dbg !3258
  br i1 %cmp497, label %if.then.498, label %if.end.499, !dbg !3262

if.then.498:                                      ; preds = %if.then.495
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3263
  unreachable, !dbg !3263

if.end.499:                                       ; preds = %if.then.495
  %151 = load %struct._object*, %struct._object** @PyExc_ChildProcessError, align 8, !dbg !3265, !tbaa !2002
  %ob_refcnt500 = getelementptr inbounds %struct._object, %struct._object* %151, i64 0, i32 0, !dbg !3265
  %152 = load i64, i64* %ob_refcnt500, align 8, !dbg !3265, !tbaa !1991
  %inc501 = add i64 %152, 1, !dbg !3265
  store i64 %inc501, i64* %ob_refcnt500, align 8, !dbg !3265, !tbaa !1991
  br label %if.end.502, !dbg !3265

if.end.502:                                       ; preds = %if.end.492, %if.end.499
  %153 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ConnectionAbortedError, i64 0, i32 19), align 8, !dbg !3267, !tbaa !2143
  %and503 = and i64 %153, 4096, !dbg !3267
  %tobool504 = icmp eq i64 %and503, 0, !dbg !3267
  br i1 %tobool504, label %if.then.505, label %if.end.512, !dbg !3269

if.then.505:                                      ; preds = %if.end.502
  %call506 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_ConnectionAbortedError) #2, !dbg !3270
  %cmp507 = icmp slt i32 %call506, 0, !dbg !3270
  br i1 %cmp507, label %if.then.508, label %if.end.509, !dbg !3274

if.then.508:                                      ; preds = %if.then.505
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3275
  unreachable, !dbg !3275

if.end.509:                                       ; preds = %if.then.505
  %154 = load %struct._object*, %struct._object** @PyExc_ConnectionAbortedError, align 8, !dbg !3277, !tbaa !2002
  %ob_refcnt510 = getelementptr inbounds %struct._object, %struct._object* %154, i64 0, i32 0, !dbg !3277
  %155 = load i64, i64* %ob_refcnt510, align 8, !dbg !3277, !tbaa !1991
  %inc511 = add i64 %155, 1, !dbg !3277
  store i64 %inc511, i64* %ob_refcnt510, align 8, !dbg !3277, !tbaa !1991
  br label %if.end.512, !dbg !3277

if.end.512:                                       ; preds = %if.end.502, %if.end.509
  %156 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ConnectionRefusedError, i64 0, i32 19), align 8, !dbg !3279, !tbaa !2143
  %and513 = and i64 %156, 4096, !dbg !3279
  %tobool514 = icmp eq i64 %and513, 0, !dbg !3279
  br i1 %tobool514, label %if.then.515, label %if.end.522, !dbg !3281

if.then.515:                                      ; preds = %if.end.512
  %call516 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_ConnectionRefusedError) #2, !dbg !3282
  %cmp517 = icmp slt i32 %call516, 0, !dbg !3282
  br i1 %cmp517, label %if.then.518, label %if.end.519, !dbg !3286

if.then.518:                                      ; preds = %if.then.515
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3287
  unreachable, !dbg !3287

if.end.519:                                       ; preds = %if.then.515
  %157 = load %struct._object*, %struct._object** @PyExc_ConnectionRefusedError, align 8, !dbg !3289, !tbaa !2002
  %ob_refcnt520 = getelementptr inbounds %struct._object, %struct._object* %157, i64 0, i32 0, !dbg !3289
  %158 = load i64, i64* %ob_refcnt520, align 8, !dbg !3289, !tbaa !1991
  %inc521 = add i64 %158, 1, !dbg !3289
  store i64 %inc521, i64* %ob_refcnt520, align 8, !dbg !3289, !tbaa !1991
  br label %if.end.522, !dbg !3289

if.end.522:                                       ; preds = %if.end.512, %if.end.519
  %159 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ConnectionResetError, i64 0, i32 19), align 8, !dbg !3291, !tbaa !2143
  %and523 = and i64 %159, 4096, !dbg !3291
  %tobool524 = icmp eq i64 %and523, 0, !dbg !3291
  br i1 %tobool524, label %if.then.525, label %if.end.532, !dbg !3293

if.then.525:                                      ; preds = %if.end.522
  %call526 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_ConnectionResetError) #2, !dbg !3294
  %cmp527 = icmp slt i32 %call526, 0, !dbg !3294
  br i1 %cmp527, label %if.then.528, label %if.end.529, !dbg !3298

if.then.528:                                      ; preds = %if.then.525
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3299
  unreachable, !dbg !3299

if.end.529:                                       ; preds = %if.then.525
  %160 = load %struct._object*, %struct._object** @PyExc_ConnectionResetError, align 8, !dbg !3301, !tbaa !2002
  %ob_refcnt530 = getelementptr inbounds %struct._object, %struct._object* %160, i64 0, i32 0, !dbg !3301
  %161 = load i64, i64* %ob_refcnt530, align 8, !dbg !3301, !tbaa !1991
  %inc531 = add i64 %161, 1, !dbg !3301
  store i64 %inc531, i64* %ob_refcnt530, align 8, !dbg !3301, !tbaa !1991
  br label %if.end.532, !dbg !3301

if.end.532:                                       ; preds = %if.end.522, %if.end.529
  %162 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_FileExistsError, i64 0, i32 19), align 8, !dbg !3303, !tbaa !2143
  %and533 = and i64 %162, 4096, !dbg !3303
  %tobool534 = icmp eq i64 %and533, 0, !dbg !3303
  br i1 %tobool534, label %if.then.535, label %if.end.542, !dbg !3305

if.then.535:                                      ; preds = %if.end.532
  %call536 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_FileExistsError) #2, !dbg !3306
  %cmp537 = icmp slt i32 %call536, 0, !dbg !3306
  br i1 %cmp537, label %if.then.538, label %if.end.539, !dbg !3310

if.then.538:                                      ; preds = %if.then.535
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3311
  unreachable, !dbg !3311

if.end.539:                                       ; preds = %if.then.535
  %163 = load %struct._object*, %struct._object** @PyExc_FileExistsError, align 8, !dbg !3313, !tbaa !2002
  %ob_refcnt540 = getelementptr inbounds %struct._object, %struct._object* %163, i64 0, i32 0, !dbg !3313
  %164 = load i64, i64* %ob_refcnt540, align 8, !dbg !3313, !tbaa !1991
  %inc541 = add i64 %164, 1, !dbg !3313
  store i64 %inc541, i64* %ob_refcnt540, align 8, !dbg !3313, !tbaa !1991
  br label %if.end.542, !dbg !3313

if.end.542:                                       ; preds = %if.end.532, %if.end.539
  %165 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_FileNotFoundError, i64 0, i32 19), align 8, !dbg !3315, !tbaa !2143
  %and543 = and i64 %165, 4096, !dbg !3315
  %tobool544 = icmp eq i64 %and543, 0, !dbg !3315
  br i1 %tobool544, label %if.then.545, label %if.end.552, !dbg !3317

if.then.545:                                      ; preds = %if.end.542
  %call546 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_FileNotFoundError) #2, !dbg !3318
  %cmp547 = icmp slt i32 %call546, 0, !dbg !3318
  br i1 %cmp547, label %if.then.548, label %if.end.549, !dbg !3322

if.then.548:                                      ; preds = %if.then.545
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3323
  unreachable, !dbg !3323

if.end.549:                                       ; preds = %if.then.545
  %166 = load %struct._object*, %struct._object** @PyExc_FileNotFoundError, align 8, !dbg !3325, !tbaa !2002
  %ob_refcnt550 = getelementptr inbounds %struct._object, %struct._object* %166, i64 0, i32 0, !dbg !3325
  %167 = load i64, i64* %ob_refcnt550, align 8, !dbg !3325, !tbaa !1991
  %inc551 = add i64 %167, 1, !dbg !3325
  store i64 %inc551, i64* %ob_refcnt550, align 8, !dbg !3325, !tbaa !1991
  br label %if.end.552, !dbg !3325

if.end.552:                                       ; preds = %if.end.542, %if.end.549
  %168 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_IsADirectoryError, i64 0, i32 19), align 8, !dbg !3327, !tbaa !2143
  %and553 = and i64 %168, 4096, !dbg !3327
  %tobool554 = icmp eq i64 %and553, 0, !dbg !3327
  br i1 %tobool554, label %if.then.555, label %if.end.562, !dbg !3329

if.then.555:                                      ; preds = %if.end.552
  %call556 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_IsADirectoryError) #2, !dbg !3330
  %cmp557 = icmp slt i32 %call556, 0, !dbg !3330
  br i1 %cmp557, label %if.then.558, label %if.end.559, !dbg !3334

if.then.558:                                      ; preds = %if.then.555
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3335
  unreachable, !dbg !3335

if.end.559:                                       ; preds = %if.then.555
  %169 = load %struct._object*, %struct._object** @PyExc_IsADirectoryError, align 8, !dbg !3337, !tbaa !2002
  %ob_refcnt560 = getelementptr inbounds %struct._object, %struct._object* %169, i64 0, i32 0, !dbg !3337
  %170 = load i64, i64* %ob_refcnt560, align 8, !dbg !3337, !tbaa !1991
  %inc561 = add i64 %170, 1, !dbg !3337
  store i64 %inc561, i64* %ob_refcnt560, align 8, !dbg !3337, !tbaa !1991
  br label %if.end.562, !dbg !3337

if.end.562:                                       ; preds = %if.end.552, %if.end.559
  %171 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_NotADirectoryError, i64 0, i32 19), align 8, !dbg !3339, !tbaa !2143
  %and563 = and i64 %171, 4096, !dbg !3339
  %tobool564 = icmp eq i64 %and563, 0, !dbg !3339
  br i1 %tobool564, label %if.then.565, label %if.end.572, !dbg !3341

if.then.565:                                      ; preds = %if.end.562
  %call566 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_NotADirectoryError) #2, !dbg !3342
  %cmp567 = icmp slt i32 %call566, 0, !dbg !3342
  br i1 %cmp567, label %if.then.568, label %if.end.569, !dbg !3346

if.then.568:                                      ; preds = %if.then.565
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3347
  unreachable, !dbg !3347

if.end.569:                                       ; preds = %if.then.565
  %172 = load %struct._object*, %struct._object** @PyExc_NotADirectoryError, align 8, !dbg !3349, !tbaa !2002
  %ob_refcnt570 = getelementptr inbounds %struct._object, %struct._object* %172, i64 0, i32 0, !dbg !3349
  %173 = load i64, i64* %ob_refcnt570, align 8, !dbg !3349, !tbaa !1991
  %inc571 = add i64 %173, 1, !dbg !3349
  store i64 %inc571, i64* %ob_refcnt570, align 8, !dbg !3349, !tbaa !1991
  br label %if.end.572, !dbg !3349

if.end.572:                                       ; preds = %if.end.562, %if.end.569
  %174 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_InterruptedError, i64 0, i32 19), align 8, !dbg !3351, !tbaa !2143
  %and573 = and i64 %174, 4096, !dbg !3351
  %tobool574 = icmp eq i64 %and573, 0, !dbg !3351
  br i1 %tobool574, label %if.then.575, label %if.end.582, !dbg !3353

if.then.575:                                      ; preds = %if.end.572
  %call576 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_InterruptedError) #2, !dbg !3354
  %cmp577 = icmp slt i32 %call576, 0, !dbg !3354
  br i1 %cmp577, label %if.then.578, label %if.end.579, !dbg !3358

if.then.578:                                      ; preds = %if.then.575
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3359
  unreachable, !dbg !3359

if.end.579:                                       ; preds = %if.then.575
  %175 = load %struct._object*, %struct._object** @PyExc_InterruptedError, align 8, !dbg !3361, !tbaa !2002
  %ob_refcnt580 = getelementptr inbounds %struct._object, %struct._object* %175, i64 0, i32 0, !dbg !3361
  %176 = load i64, i64* %ob_refcnt580, align 8, !dbg !3361, !tbaa !1991
  %inc581 = add i64 %176, 1, !dbg !3361
  store i64 %inc581, i64* %ob_refcnt580, align 8, !dbg !3361, !tbaa !1991
  br label %if.end.582, !dbg !3361

if.end.582:                                       ; preds = %if.end.572, %if.end.579
  %177 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_PermissionError, i64 0, i32 19), align 8, !dbg !3363, !tbaa !2143
  %and583 = and i64 %177, 4096, !dbg !3363
  %tobool584 = icmp eq i64 %and583, 0, !dbg !3363
  br i1 %tobool584, label %if.then.585, label %if.end.592, !dbg !3365

if.then.585:                                      ; preds = %if.end.582
  %call586 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_PermissionError) #2, !dbg !3366
  %cmp587 = icmp slt i32 %call586, 0, !dbg !3366
  br i1 %cmp587, label %if.then.588, label %if.end.589, !dbg !3370

if.then.588:                                      ; preds = %if.then.585
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3371
  unreachable, !dbg !3371

if.end.589:                                       ; preds = %if.then.585
  %178 = load %struct._object*, %struct._object** @PyExc_PermissionError, align 8, !dbg !3373, !tbaa !2002
  %ob_refcnt590 = getelementptr inbounds %struct._object, %struct._object* %178, i64 0, i32 0, !dbg !3373
  %179 = load i64, i64* %ob_refcnt590, align 8, !dbg !3373, !tbaa !1991
  %inc591 = add i64 %179, 1, !dbg !3373
  store i64 %inc591, i64* %ob_refcnt590, align 8, !dbg !3373, !tbaa !1991
  br label %if.end.592, !dbg !3373

if.end.592:                                       ; preds = %if.end.582, %if.end.589
  %180 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ProcessLookupError, i64 0, i32 19), align 8, !dbg !3375, !tbaa !2143
  %and593 = and i64 %180, 4096, !dbg !3375
  %tobool594 = icmp eq i64 %and593, 0, !dbg !3375
  br i1 %tobool594, label %if.then.595, label %if.end.602, !dbg !3377

if.then.595:                                      ; preds = %if.end.592
  %call596 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_ProcessLookupError) #2, !dbg !3378
  %cmp597 = icmp slt i32 %call596, 0, !dbg !3378
  br i1 %cmp597, label %if.then.598, label %if.end.599, !dbg !3382

if.then.598:                                      ; preds = %if.then.595
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3383
  unreachable, !dbg !3383

if.end.599:                                       ; preds = %if.then.595
  %181 = load %struct._object*, %struct._object** @PyExc_ProcessLookupError, align 8, !dbg !3385, !tbaa !2002
  %ob_refcnt600 = getelementptr inbounds %struct._object, %struct._object* %181, i64 0, i32 0, !dbg !3385
  %182 = load i64, i64* %ob_refcnt600, align 8, !dbg !3385, !tbaa !1991
  %inc601 = add i64 %182, 1, !dbg !3385
  store i64 %inc601, i64* %ob_refcnt600, align 8, !dbg !3385, !tbaa !1991
  br label %if.end.602, !dbg !3385

if.end.602:                                       ; preds = %if.end.592, %if.end.599
  %183 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_TimeoutError, i64 0, i32 19), align 8, !dbg !3387, !tbaa !2143
  %and603 = and i64 %183, 4096, !dbg !3387
  %tobool604 = icmp eq i64 %and603, 0, !dbg !3387
  br i1 %tobool604, label %if.then.605, label %if.end.612, !dbg !3389

if.then.605:                                      ; preds = %if.end.602
  %call606 = tail call i32 @PyType_Ready(%struct._typeobject* nonnull @_PyExc_TimeoutError) #2, !dbg !3390
  %cmp607 = icmp slt i32 %call606, 0, !dbg !3390
  br i1 %cmp607, label %if.then.608, label %if.end.609, !dbg !3394

if.then.608:                                      ; preds = %if.then.605
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3395
  unreachable, !dbg !3395

if.end.609:                                       ; preds = %if.then.605
  %184 = load %struct._object*, %struct._object** @PyExc_TimeoutError, align 8, !dbg !3397, !tbaa !2002
  %ob_refcnt610 = getelementptr inbounds %struct._object, %struct._object* %184, i64 0, i32 0, !dbg !3397
  %185 = load i64, i64* %ob_refcnt610, align 8, !dbg !3397, !tbaa !1991
  %inc611 = add i64 %185, 1, !dbg !3397
  store i64 %inc611, i64* %ob_refcnt610, align 8, !dbg !3397, !tbaa !1991
  br label %if.end.612, !dbg !3397

if.end.612:                                       ; preds = %if.end.602, %if.end.609
  %call613 = tail call %struct._object* @PyModule_GetDict(%struct._object* %bltinmod) #2, !dbg !3399
  tail call void @llvm.dbg.value(metadata %struct._object* %call613, i64 0, metadata !682, metadata !1974), !dbg !3400
  %cmp614 = icmp eq %struct._object* %call613, null, !dbg !3401
  br i1 %cmp614, label %if.then.615, label %if.end.616, !dbg !3403

if.then.615:                                      ; preds = %if.end.612
  tail call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3404
  unreachable, !dbg !3404

if.end.616:                                       ; preds = %if.end.612
  %186 = load %struct._object*, %struct._object** @PyExc_BaseException, align 8, !dbg !3405, !tbaa !2002
  %call617 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0), %struct._object* %186) #2, !dbg !3405
  %tobool618 = icmp eq i32 %call617, 0, !dbg !3405
  br i1 %tobool618, label %if.end.620, label %if.then.619, !dbg !3407

if.then.619:                                      ; preds = %if.end.616
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3408
  unreachable, !dbg !3408

if.end.620:                                       ; preds = %if.end.616
  %187 = load %struct._object*, %struct._object** @PyExc_Exception, align 8, !dbg !3410, !tbaa !2002
  %call621 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0), %struct._object* %187) #2, !dbg !3410
  %tobool622 = icmp eq i32 %call621, 0, !dbg !3410
  br i1 %tobool622, label %if.end.624, label %if.then.623, !dbg !3412

if.then.623:                                      ; preds = %if.end.620
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3413
  unreachable, !dbg !3413

if.end.624:                                       ; preds = %if.end.620
  %188 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !3415, !tbaa !2002
  %call625 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), %struct._object* %188) #2, !dbg !3415
  %tobool626 = icmp eq i32 %call625, 0, !dbg !3415
  br i1 %tobool626, label %if.end.628, label %if.then.627, !dbg !3417

if.then.627:                                      ; preds = %if.end.624
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3418
  unreachable, !dbg !3418

if.end.628:                                       ; preds = %if.end.624
  %189 = load %struct._object*, %struct._object** @PyExc_StopIteration, align 8, !dbg !3420, !tbaa !2002
  %call629 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i64 0, i64 0), %struct._object* %189) #2, !dbg !3420
  %tobool630 = icmp eq i32 %call629, 0, !dbg !3420
  br i1 %tobool630, label %if.end.632, label %if.then.631, !dbg !3422

if.then.631:                                      ; preds = %if.end.628
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3423
  unreachable, !dbg !3423

if.end.632:                                       ; preds = %if.end.628
  %190 = load %struct._object*, %struct._object** @PyExc_GeneratorExit, align 8, !dbg !3425, !tbaa !2002
  %call633 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0), %struct._object* %190) #2, !dbg !3425
  %tobool634 = icmp eq i32 %call633, 0, !dbg !3425
  br i1 %tobool634, label %if.end.636, label %if.then.635, !dbg !3427

if.then.635:                                      ; preds = %if.end.632
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3428
  unreachable, !dbg !3428

if.end.636:                                       ; preds = %if.end.632
  %191 = load %struct._object*, %struct._object** @PyExc_SystemExit, align 8, !dbg !3430, !tbaa !2002
  %call637 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), %struct._object* %191) #2, !dbg !3430
  %tobool638 = icmp eq i32 %call637, 0, !dbg !3430
  br i1 %tobool638, label %if.end.640, label %if.then.639, !dbg !3432

if.then.639:                                      ; preds = %if.end.636
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3433
  unreachable, !dbg !3433

if.end.640:                                       ; preds = %if.end.636
  %192 = load %struct._object*, %struct._object** @PyExc_KeyboardInterrupt, align 8, !dbg !3435, !tbaa !2002
  %call641 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i64 0, i64 0), %struct._object* %192) #2, !dbg !3435
  %tobool642 = icmp eq i32 %call641, 0, !dbg !3435
  br i1 %tobool642, label %if.end.644, label %if.then.643, !dbg !3437

if.then.643:                                      ; preds = %if.end.640
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3438
  unreachable, !dbg !3438

if.end.644:                                       ; preds = %if.end.640
  %193 = load %struct._object*, %struct._object** @PyExc_ImportError, align 8, !dbg !3440, !tbaa !2002
  %call645 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i64 0, i64 0), %struct._object* %193) #2, !dbg !3440
  %tobool646 = icmp eq i32 %call645, 0, !dbg !3440
  br i1 %tobool646, label %if.end.648, label %if.then.647, !dbg !3442

if.then.647:                                      ; preds = %if.end.644
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3443
  unreachable, !dbg !3443

if.end.648:                                       ; preds = %if.end.644
  %194 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !3445, !tbaa !2002
  %call649 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i64 0, i64 0), %struct._object* %194) #2, !dbg !3445
  %tobool650 = icmp eq i32 %call649, 0, !dbg !3445
  br i1 %tobool650, label %if.end.652, label %if.then.651, !dbg !3447

if.then.651:                                      ; preds = %if.end.648
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3448
  unreachable, !dbg !3448

if.end.652:                                       ; preds = %if.end.648
  %195 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !3450, !tbaa !2002
  %ob_refcnt653 = getelementptr inbounds %struct._object, %struct._object* %195, i64 0, i32 0, !dbg !3450
  %196 = load i64, i64* %ob_refcnt653, align 8, !dbg !3450, !tbaa !1991
  %inc654 = add i64 %196, 1, !dbg !3450
  store i64 %inc654, i64* %ob_refcnt653, align 8, !dbg !3450, !tbaa !1991
  %197 = load %struct._object*, %struct._object** @PyExc_EnvironmentError, align 8, !dbg !3451, !tbaa !2002
  tail call void @llvm.dbg.value(metadata %struct._object* %197, i64 0, metadata !683, metadata !1974), !dbg !3451
  %cmp655 = icmp eq %struct._object* %197, null, !dbg !3453
  br i1 %cmp655, label %if.end.662, label %do.body.657, !dbg !3454

do.body.657:                                      ; preds = %if.end.652
  tail call void @llvm.dbg.value(metadata %struct._object* %197, i64 0, metadata !685, metadata !1974), !dbg !3455
  %ob_refcnt658 = getelementptr inbounds %struct._object, %struct._object* %197, i64 0, i32 0, !dbg !3457
  %198 = load i64, i64* %ob_refcnt658, align 8, !dbg !3457, !tbaa !1991
  %dec = add i64 %198, -1, !dbg !3457
  store i64 %dec, i64* %ob_refcnt658, align 8, !dbg !3457, !tbaa !1991
  %cmp659 = icmp eq i64 %dec, 0, !dbg !3457
  br i1 %cmp659, label %if.else, label %if.end.662, !dbg !3459

if.else:                                          ; preds = %do.body.657
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %197, i64 0, i32 1, !dbg !3460
  %199 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3460, !tbaa !2010
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %199, i64 0, i32 4, !dbg !3460
  %200 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3460, !tbaa !2032
  tail call void %200(%struct._object* %197) #2, !dbg !3460
  %.pre = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !3462, !tbaa !2002
  br label %if.end.662

if.end.662:                                       ; preds = %if.else, %do.body.657, %if.end.652
  %201 = phi %struct._object* [ %.pre, %if.else ], [ %195, %do.body.657 ], [ %195, %if.end.652 ], !dbg !3462
  store %struct._object* %201, %struct._object** @PyExc_EnvironmentError, align 8, !dbg !3462, !tbaa !2002
  %call665 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0), %struct._object* %201) #2, !dbg !3464
  %tobool666 = icmp eq i32 %call665, 0, !dbg !3464
  br i1 %tobool666, label %if.end.668, label %if.then.667, !dbg !3450

if.then.667:                                      ; preds = %if.end.662
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3466
  unreachable, !dbg !3466

if.end.668:                                       ; preds = %if.end.662
  %202 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !3468, !tbaa !2002
  %ob_refcnt669 = getelementptr inbounds %struct._object, %struct._object* %202, i64 0, i32 0, !dbg !3468
  %203 = load i64, i64* %ob_refcnt669, align 8, !dbg !3468, !tbaa !1991
  %inc670 = add i64 %203, 1, !dbg !3468
  store i64 %inc670, i64* %ob_refcnt669, align 8, !dbg !3468, !tbaa !1991
  %204 = load %struct._object*, %struct._object** @PyExc_IOError, align 8, !dbg !3469, !tbaa !2002
  tail call void @llvm.dbg.value(metadata %struct._object* %204, i64 0, metadata !688, metadata !1974), !dbg !3469
  %cmp673 = icmp eq %struct._object* %204, null, !dbg !3471
  br i1 %cmp673, label %if.end.687, label %do.body.675, !dbg !3472

do.body.675:                                      ; preds = %if.end.668
  tail call void @llvm.dbg.value(metadata %struct._object* %204, i64 0, metadata !690, metadata !1974), !dbg !3473
  %ob_refcnt677 = getelementptr inbounds %struct._object, %struct._object* %204, i64 0, i32 0, !dbg !3475
  %205 = load i64, i64* %ob_refcnt677, align 8, !dbg !3475, !tbaa !1991
  %dec678 = add i64 %205, -1, !dbg !3475
  store i64 %dec678, i64* %ob_refcnt677, align 8, !dbg !3475, !tbaa !1991
  %cmp679 = icmp eq i64 %dec678, 0, !dbg !3475
  br i1 %cmp679, label %if.else.681, label %if.end.687, !dbg !3477

if.else.681:                                      ; preds = %do.body.675
  %ob_type682 = getelementptr inbounds %struct._object, %struct._object* %204, i64 0, i32 1, !dbg !3478
  %206 = load %struct._typeobject*, %struct._typeobject** %ob_type682, align 8, !dbg !3478, !tbaa !2010
  %tp_dealloc683 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %206, i64 0, i32 4, !dbg !3478
  %207 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc683, align 8, !dbg !3478, !tbaa !2032
  tail call void %207(%struct._object* %204) #2, !dbg !3478
  %.pre1562 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !3480, !tbaa !2002
  br label %if.end.687

if.end.687:                                       ; preds = %if.else.681, %do.body.675, %if.end.668
  %208 = phi %struct._object* [ %.pre1562, %if.else.681 ], [ %202, %do.body.675 ], [ %202, %if.end.668 ], !dbg !3480
  store %struct._object* %208, %struct._object** @PyExc_IOError, align 8, !dbg !3480, !tbaa !2002
  %call690 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i64 0, i64 0), %struct._object* %208) #2, !dbg !3481
  %tobool691 = icmp eq i32 %call690, 0, !dbg !3481
  br i1 %tobool691, label %if.end.693, label %if.then.692, !dbg !3468

if.then.692:                                      ; preds = %if.end.687
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3483
  unreachable, !dbg !3483

if.end.693:                                       ; preds = %if.end.687
  %209 = load %struct._object*, %struct._object** @PyExc_EOFError, align 8, !dbg !3485, !tbaa !2002
  %call694 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i64 0, i64 0), %struct._object* %209) #2, !dbg !3485
  %tobool695 = icmp eq i32 %call694, 0, !dbg !3485
  br i1 %tobool695, label %if.end.697, label %if.then.696, !dbg !3487

if.then.696:                                      ; preds = %if.end.693
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3488
  unreachable, !dbg !3488

if.end.697:                                       ; preds = %if.end.693
  %210 = load %struct._object*, %struct._object** @PyExc_RuntimeError, align 8, !dbg !3490, !tbaa !2002
  %call698 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i64 0, i64 0), %struct._object* %210) #2, !dbg !3490
  %tobool699 = icmp eq i32 %call698, 0, !dbg !3490
  br i1 %tobool699, label %if.end.701, label %if.then.700, !dbg !3492

if.then.700:                                      ; preds = %if.end.697
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3493
  unreachable, !dbg !3493

if.end.701:                                       ; preds = %if.end.697
  %211 = load %struct._object*, %struct._object** @PyExc_NotImplementedError, align 8, !dbg !3495, !tbaa !2002
  %call702 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.22, i64 0, i64 0), %struct._object* %211) #2, !dbg !3495
  %tobool703 = icmp eq i32 %call702, 0, !dbg !3495
  br i1 %tobool703, label %if.end.705, label %if.then.704, !dbg !3497

if.then.704:                                      ; preds = %if.end.701
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3498
  unreachable, !dbg !3498

if.end.705:                                       ; preds = %if.end.701
  %212 = load %struct._object*, %struct._object** @PyExc_NameError, align 8, !dbg !3500, !tbaa !2002
  %call706 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i64 0, i64 0), %struct._object* %212) #2, !dbg !3500
  %tobool707 = icmp eq i32 %call706, 0, !dbg !3500
  br i1 %tobool707, label %if.end.709, label %if.then.708, !dbg !3502

if.then.708:                                      ; preds = %if.end.705
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3503
  unreachable, !dbg !3503

if.end.709:                                       ; preds = %if.end.705
  %213 = load %struct._object*, %struct._object** @PyExc_UnboundLocalError, align 8, !dbg !3505, !tbaa !2002
  %call710 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.24, i64 0, i64 0), %struct._object* %213) #2, !dbg !3505
  %tobool711 = icmp eq i32 %call710, 0, !dbg !3505
  br i1 %tobool711, label %if.end.713, label %if.then.712, !dbg !3507

if.then.712:                                      ; preds = %if.end.709
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3508
  unreachable, !dbg !3508

if.end.713:                                       ; preds = %if.end.709
  %214 = load %struct._object*, %struct._object** @PyExc_AttributeError, align 8, !dbg !3510, !tbaa !2002
  %call714 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25, i64 0, i64 0), %struct._object* %214) #2, !dbg !3510
  %tobool715 = icmp eq i32 %call714, 0, !dbg !3510
  br i1 %tobool715, label %if.end.717, label %if.then.716, !dbg !3512

if.then.716:                                      ; preds = %if.end.713
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3513
  unreachable, !dbg !3513

if.end.717:                                       ; preds = %if.end.713
  %215 = load %struct._object*, %struct._object** @PyExc_SyntaxError, align 8, !dbg !3515, !tbaa !2002
  %call718 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.26, i64 0, i64 0), %struct._object* %215) #2, !dbg !3515
  %tobool719 = icmp eq i32 %call718, 0, !dbg !3515
  br i1 %tobool719, label %if.end.721, label %if.then.720, !dbg !3517

if.then.720:                                      ; preds = %if.end.717
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3518
  unreachable, !dbg !3518

if.end.721:                                       ; preds = %if.end.717
  %216 = load %struct._object*, %struct._object** @PyExc_IndentationError, align 8, !dbg !3520, !tbaa !2002
  %call722 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.27, i64 0, i64 0), %struct._object* %216) #2, !dbg !3520
  %tobool723 = icmp eq i32 %call722, 0, !dbg !3520
  br i1 %tobool723, label %if.end.725, label %if.then.724, !dbg !3522

if.then.724:                                      ; preds = %if.end.721
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3523
  unreachable, !dbg !3523

if.end.725:                                       ; preds = %if.end.721
  %217 = load %struct._object*, %struct._object** @PyExc_TabError, align 8, !dbg !3525, !tbaa !2002
  %call726 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), %struct._object* %217) #2, !dbg !3525
  %tobool727 = icmp eq i32 %call726, 0, !dbg !3525
  br i1 %tobool727, label %if.end.729, label %if.then.728, !dbg !3527

if.then.728:                                      ; preds = %if.end.725
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3528
  unreachable, !dbg !3528

if.end.729:                                       ; preds = %if.end.725
  %218 = load %struct._object*, %struct._object** @PyExc_LookupError, align 8, !dbg !3530, !tbaa !2002
  %call730 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29, i64 0, i64 0), %struct._object* %218) #2, !dbg !3530
  %tobool731 = icmp eq i32 %call730, 0, !dbg !3530
  br i1 %tobool731, label %if.end.733, label %if.then.732, !dbg !3532

if.then.732:                                      ; preds = %if.end.729
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3533
  unreachable, !dbg !3533

if.end.733:                                       ; preds = %if.end.729
  %219 = load %struct._object*, %struct._object** @PyExc_IndexError, align 8, !dbg !3535, !tbaa !2002
  %call734 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0), %struct._object* %219) #2, !dbg !3535
  %tobool735 = icmp eq i32 %call734, 0, !dbg !3535
  br i1 %tobool735, label %if.end.737, label %if.then.736, !dbg !3537

if.then.736:                                      ; preds = %if.end.733
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3538
  unreachable, !dbg !3538

if.end.737:                                       ; preds = %if.end.733
  %220 = load %struct._object*, %struct._object** @PyExc_KeyError, align 8, !dbg !3540, !tbaa !2002
  %call738 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.31, i64 0, i64 0), %struct._object* %220) #2, !dbg !3540
  %tobool739 = icmp eq i32 %call738, 0, !dbg !3540
  br i1 %tobool739, label %if.end.741, label %if.then.740, !dbg !3542

if.then.740:                                      ; preds = %if.end.737
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3543
  unreachable, !dbg !3543

if.end.741:                                       ; preds = %if.end.737
  %221 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !3545, !tbaa !2002
  %call742 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.32, i64 0, i64 0), %struct._object* %221) #2, !dbg !3545
  %tobool743 = icmp eq i32 %call742, 0, !dbg !3545
  br i1 %tobool743, label %if.end.745, label %if.then.744, !dbg !3547

if.then.744:                                      ; preds = %if.end.741
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3548
  unreachable, !dbg !3548

if.end.745:                                       ; preds = %if.end.741
  %222 = load %struct._object*, %struct._object** @PyExc_UnicodeError, align 8, !dbg !3550, !tbaa !2002
  %call746 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i64 0, i64 0), %struct._object* %222) #2, !dbg !3550
  %tobool747 = icmp eq i32 %call746, 0, !dbg !3550
  br i1 %tobool747, label %if.end.749, label %if.then.748, !dbg !3552

if.then.748:                                      ; preds = %if.end.745
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3553
  unreachable, !dbg !3553

if.end.749:                                       ; preds = %if.end.745
  %223 = load %struct._object*, %struct._object** @PyExc_UnicodeEncodeError, align 8, !dbg !3555, !tbaa !2002
  %call750 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.34, i64 0, i64 0), %struct._object* %223) #2, !dbg !3555
  %tobool751 = icmp eq i32 %call750, 0, !dbg !3555
  br i1 %tobool751, label %if.end.753, label %if.then.752, !dbg !3557

if.then.752:                                      ; preds = %if.end.749
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3558
  unreachable, !dbg !3558

if.end.753:                                       ; preds = %if.end.749
  %224 = load %struct._object*, %struct._object** @PyExc_UnicodeDecodeError, align 8, !dbg !3560, !tbaa !2002
  %call754 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.35, i64 0, i64 0), %struct._object* %224) #2, !dbg !3560
  %tobool755 = icmp eq i32 %call754, 0, !dbg !3560
  br i1 %tobool755, label %if.end.757, label %if.then.756, !dbg !3562

if.then.756:                                      ; preds = %if.end.753
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3563
  unreachable, !dbg !3563

if.end.757:                                       ; preds = %if.end.753
  %225 = load %struct._object*, %struct._object** @PyExc_UnicodeTranslateError, align 8, !dbg !3565, !tbaa !2002
  %call758 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.36, i64 0, i64 0), %struct._object* %225) #2, !dbg !3565
  %tobool759 = icmp eq i32 %call758, 0, !dbg !3565
  br i1 %tobool759, label %if.end.761, label %if.then.760, !dbg !3567

if.then.760:                                      ; preds = %if.end.757
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3568
  unreachable, !dbg !3568

if.end.761:                                       ; preds = %if.end.757
  %226 = load %struct._object*, %struct._object** @PyExc_AssertionError, align 8, !dbg !3570, !tbaa !2002
  %call762 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.37, i64 0, i64 0), %struct._object* %226) #2, !dbg !3570
  %tobool763 = icmp eq i32 %call762, 0, !dbg !3570
  br i1 %tobool763, label %if.end.765, label %if.then.764, !dbg !3572

if.then.764:                                      ; preds = %if.end.761
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3573
  unreachable, !dbg !3573

if.end.765:                                       ; preds = %if.end.761
  %227 = load %struct._object*, %struct._object** @PyExc_ArithmeticError, align 8, !dbg !3575, !tbaa !2002
  %call766 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i64 0, i64 0), %struct._object* %227) #2, !dbg !3575
  %tobool767 = icmp eq i32 %call766, 0, !dbg !3575
  br i1 %tobool767, label %if.end.769, label %if.then.768, !dbg !3577

if.then.768:                                      ; preds = %if.end.765
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3578
  unreachable, !dbg !3578

if.end.769:                                       ; preds = %if.end.765
  %228 = load %struct._object*, %struct._object** @PyExc_FloatingPointError, align 8, !dbg !3580, !tbaa !2002
  %call770 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.39, i64 0, i64 0), %struct._object* %228) #2, !dbg !3580
  %tobool771 = icmp eq i32 %call770, 0, !dbg !3580
  br i1 %tobool771, label %if.end.773, label %if.then.772, !dbg !3582

if.then.772:                                      ; preds = %if.end.769
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3583
  unreachable, !dbg !3583

if.end.773:                                       ; preds = %if.end.769
  %229 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8, !dbg !3585, !tbaa !2002
  %call774 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.40, i64 0, i64 0), %struct._object* %229) #2, !dbg !3585
  %tobool775 = icmp eq i32 %call774, 0, !dbg !3585
  br i1 %tobool775, label %if.end.777, label %if.then.776, !dbg !3587

if.then.776:                                      ; preds = %if.end.773
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3588
  unreachable, !dbg !3588

if.end.777:                                       ; preds = %if.end.773
  %230 = load %struct._object*, %struct._object** @PyExc_ZeroDivisionError, align 8, !dbg !3590, !tbaa !2002
  %call778 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.41, i64 0, i64 0), %struct._object* %230) #2, !dbg !3590
  %tobool779 = icmp eq i32 %call778, 0, !dbg !3590
  br i1 %tobool779, label %if.end.781, label %if.then.780, !dbg !3592

if.then.780:                                      ; preds = %if.end.777
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3593
  unreachable, !dbg !3593

if.end.781:                                       ; preds = %if.end.777
  %231 = load %struct._object*, %struct._object** @PyExc_SystemError, align 8, !dbg !3595, !tbaa !2002
  %call782 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.42, i64 0, i64 0), %struct._object* %231) #2, !dbg !3595
  %tobool783 = icmp eq i32 %call782, 0, !dbg !3595
  br i1 %tobool783, label %if.end.785, label %if.then.784, !dbg !3597

if.then.784:                                      ; preds = %if.end.781
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3598
  unreachable, !dbg !3598

if.end.785:                                       ; preds = %if.end.781
  %232 = load %struct._object*, %struct._object** @PyExc_ReferenceError, align 8, !dbg !3600, !tbaa !2002
  %call786 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.43, i64 0, i64 0), %struct._object* %232) #2, !dbg !3600
  %tobool787 = icmp eq i32 %call786, 0, !dbg !3600
  br i1 %tobool787, label %if.end.789, label %if.then.788, !dbg !3602

if.then.788:                                      ; preds = %if.end.785
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3603
  unreachable, !dbg !3603

if.end.789:                                       ; preds = %if.end.785
  %233 = load %struct._object*, %struct._object** @PyExc_BufferError, align 8, !dbg !3605, !tbaa !2002
  %call790 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.44, i64 0, i64 0), %struct._object* %233) #2, !dbg !3605
  %tobool791 = icmp eq i32 %call790, 0, !dbg !3605
  br i1 %tobool791, label %if.end.793, label %if.then.792, !dbg !3607

if.then.792:                                      ; preds = %if.end.789
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3608
  unreachable, !dbg !3608

if.end.793:                                       ; preds = %if.end.789
  %234 = load %struct._object*, %struct._object** @PyExc_MemoryError, align 8, !dbg !3610, !tbaa !2002
  %call794 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.45, i64 0, i64 0), %struct._object* %234) #2, !dbg !3610
  %tobool795 = icmp eq i32 %call794, 0, !dbg !3610
  br i1 %tobool795, label %if.end.797, label %if.then.796, !dbg !3612

if.then.796:                                      ; preds = %if.end.793
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3613
  unreachable, !dbg !3613

if.end.797:                                       ; preds = %if.end.793
  %235 = load %struct._object*, %struct._object** @PyExc_BufferError, align 8, !dbg !3615, !tbaa !2002
  %call798 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.44, i64 0, i64 0), %struct._object* %235) #2, !dbg !3615
  %tobool799 = icmp eq i32 %call798, 0, !dbg !3615
  br i1 %tobool799, label %if.end.801, label %if.then.800, !dbg !3617

if.then.800:                                      ; preds = %if.end.797
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3618
  unreachable, !dbg !3618

if.end.801:                                       ; preds = %if.end.797
  %236 = load %struct._object*, %struct._object** @PyExc_Warning, align 8, !dbg !3620, !tbaa !2002
  %call802 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.46, i64 0, i64 0), %struct._object* %236) #2, !dbg !3620
  %tobool803 = icmp eq i32 %call802, 0, !dbg !3620
  br i1 %tobool803, label %if.end.805, label %if.then.804, !dbg !3622

if.then.804:                                      ; preds = %if.end.801
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3623
  unreachable, !dbg !3623

if.end.805:                                       ; preds = %if.end.801
  %237 = load %struct._object*, %struct._object** @PyExc_UserWarning, align 8, !dbg !3625, !tbaa !2002
  %call806 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.47, i64 0, i64 0), %struct._object* %237) #2, !dbg !3625
  %tobool807 = icmp eq i32 %call806, 0, !dbg !3625
  br i1 %tobool807, label %if.end.809, label %if.then.808, !dbg !3627

if.then.808:                                      ; preds = %if.end.805
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3628
  unreachable, !dbg !3628

if.end.809:                                       ; preds = %if.end.805
  %238 = load %struct._object*, %struct._object** @PyExc_DeprecationWarning, align 8, !dbg !3630, !tbaa !2002
  %call810 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.48, i64 0, i64 0), %struct._object* %238) #2, !dbg !3630
  %tobool811 = icmp eq i32 %call810, 0, !dbg !3630
  br i1 %tobool811, label %if.end.813, label %if.then.812, !dbg !3632

if.then.812:                                      ; preds = %if.end.809
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3633
  unreachable, !dbg !3633

if.end.813:                                       ; preds = %if.end.809
  %239 = load %struct._object*, %struct._object** @PyExc_PendingDeprecationWarning, align 8, !dbg !3635, !tbaa !2002
  %call814 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.49, i64 0, i64 0), %struct._object* %239) #2, !dbg !3635
  %tobool815 = icmp eq i32 %call814, 0, !dbg !3635
  br i1 %tobool815, label %if.end.817, label %if.then.816, !dbg !3637

if.then.816:                                      ; preds = %if.end.813
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3638
  unreachable, !dbg !3638

if.end.817:                                       ; preds = %if.end.813
  %240 = load %struct._object*, %struct._object** @PyExc_SyntaxWarning, align 8, !dbg !3640, !tbaa !2002
  %call818 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.50, i64 0, i64 0), %struct._object* %240) #2, !dbg !3640
  %tobool819 = icmp eq i32 %call818, 0, !dbg !3640
  br i1 %tobool819, label %if.end.821, label %if.then.820, !dbg !3642

if.then.820:                                      ; preds = %if.end.817
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3643
  unreachable, !dbg !3643

if.end.821:                                       ; preds = %if.end.817
  %241 = load %struct._object*, %struct._object** @PyExc_RuntimeWarning, align 8, !dbg !3645, !tbaa !2002
  %call822 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.51, i64 0, i64 0), %struct._object* %241) #2, !dbg !3645
  %tobool823 = icmp eq i32 %call822, 0, !dbg !3645
  br i1 %tobool823, label %if.end.825, label %if.then.824, !dbg !3647

if.then.824:                                      ; preds = %if.end.821
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3648
  unreachable, !dbg !3648

if.end.825:                                       ; preds = %if.end.821
  %242 = load %struct._object*, %struct._object** @PyExc_FutureWarning, align 8, !dbg !3650, !tbaa !2002
  %call826 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.52, i64 0, i64 0), %struct._object* %242) #2, !dbg !3650
  %tobool827 = icmp eq i32 %call826, 0, !dbg !3650
  br i1 %tobool827, label %if.end.829, label %if.then.828, !dbg !3652

if.then.828:                                      ; preds = %if.end.825
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3653
  unreachable, !dbg !3653

if.end.829:                                       ; preds = %if.end.825
  %243 = load %struct._object*, %struct._object** @PyExc_ImportWarning, align 8, !dbg !3655, !tbaa !2002
  %call830 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.53, i64 0, i64 0), %struct._object* %243) #2, !dbg !3655
  %tobool831 = icmp eq i32 %call830, 0, !dbg !3655
  br i1 %tobool831, label %if.end.833, label %if.then.832, !dbg !3657

if.then.832:                                      ; preds = %if.end.829
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3658
  unreachable, !dbg !3658

if.end.833:                                       ; preds = %if.end.829
  %244 = load %struct._object*, %struct._object** @PyExc_UnicodeWarning, align 8, !dbg !3660, !tbaa !2002
  %call834 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.54, i64 0, i64 0), %struct._object* %244) #2, !dbg !3660
  %tobool835 = icmp eq i32 %call834, 0, !dbg !3660
  br i1 %tobool835, label %if.end.837, label %if.then.836, !dbg !3662

if.then.836:                                      ; preds = %if.end.833
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3663
  unreachable, !dbg !3663

if.end.837:                                       ; preds = %if.end.833
  %245 = load %struct._object*, %struct._object** @PyExc_BytesWarning, align 8, !dbg !3665, !tbaa !2002
  %call838 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.55, i64 0, i64 0), %struct._object* %245) #2, !dbg !3665
  %tobool839 = icmp eq i32 %call838, 0, !dbg !3665
  br i1 %tobool839, label %if.end.841, label %if.then.840, !dbg !3667

if.then.840:                                      ; preds = %if.end.837
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3668
  unreachable, !dbg !3668

if.end.841:                                       ; preds = %if.end.837
  %246 = load %struct._object*, %struct._object** @PyExc_ResourceWarning, align 8, !dbg !3670, !tbaa !2002
  %call842 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.56, i64 0, i64 0), %struct._object* %246) #2, !dbg !3670
  %tobool843 = icmp eq i32 %call842, 0, !dbg !3670
  br i1 %tobool843, label %if.end.845, label %if.then.844, !dbg !3672

if.then.844:                                      ; preds = %if.end.841
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3673
  unreachable, !dbg !3673

if.end.845:                                       ; preds = %if.end.841
  %247 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !3675, !tbaa !2002
  %tobool846 = icmp eq %struct._object* %247, null, !dbg !3675
  br i1 %tobool846, label %if.then.847, label %if.end.852, !dbg !3677

if.then.847:                                      ; preds = %if.end.845
  %call848 = tail call %struct._object* @PyDict_New() #2, !dbg !3678
  store %struct._object* %call848, %struct._object** @errnomap, align 8, !dbg !3680, !tbaa !2002
  %tobool849 = icmp eq %struct._object* %call848, null, !dbg !3681
  br i1 %tobool849, label %if.then.850, label %if.end.852, !dbg !3683

if.then.850:                                      ; preds = %if.then.847
  tail call void @Py_FatalError(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.57, i64 0, i64 0)) #6, !dbg !3684
  unreachable, !dbg !3684

if.end.852:                                       ; preds = %if.then.847, %if.end.845
  %248 = load %struct._object*, %struct._object** @PyExc_ConnectionError, align 8, !dbg !3685, !tbaa !2002
  %call853 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.58, i64 0, i64 0), %struct._object* %248) #2, !dbg !3685
  %tobool854 = icmp eq i32 %call853, 0, !dbg !3685
  br i1 %tobool854, label %if.end.856, label %if.then.855, !dbg !3687

if.then.855:                                      ; preds = %if.end.852
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3688
  unreachable, !dbg !3688

if.end.856:                                       ; preds = %if.end.852
  %249 = load %struct._object*, %struct._object** @PyExc_BlockingIOError, align 8, !dbg !3690, !tbaa !2002
  %call857 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.59, i64 0, i64 0), %struct._object* %249) #2, !dbg !3690
  %tobool858 = icmp eq i32 %call857, 0, !dbg !3690
  br i1 %tobool858, label %if.end.860, label %if.then.859, !dbg !3692

if.then.859:                                      ; preds = %if.end.856
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3693
  unreachable, !dbg !3693

if.end.860:                                       ; preds = %if.end.856
  %call861 = tail call %struct._object* @PyLong_FromLong(i64 11) #2, !dbg !3695
  tail call void @llvm.dbg.value(metadata %struct._object* %call861, i64 0, metadata !693, metadata !1974), !dbg !3695
  %tobool862 = icmp eq %struct._object* %call861, null, !dbg !3696
  br i1 %tobool862, label %if.then.865, label %lor.lhs.false, !dbg !3696

lor.lhs.false:                                    ; preds = %if.end.860
  %250 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !3698, !tbaa !2002
  %251 = load %struct._object*, %struct._object** @PyExc_BlockingIOError, align 8, !dbg !3698, !tbaa !2002
  %call863 = tail call i32 @PyDict_SetItem(%struct._object* %250, %struct._object* %call861, %struct._object* %251) #2, !dbg !3698
  %tobool864 = icmp eq i32 %call863, 0, !dbg !3698
  br i1 %tobool864, label %do.body.867, label %if.then.865, !dbg !3695

if.then.865:                                      ; preds = %lor.lhs.false, %if.end.860
  tail call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i64 0, i64 0)) #6, !dbg !3700
  unreachable, !dbg !3700

do.body.867:                                      ; preds = %lor.lhs.false
  tail call void @llvm.dbg.value(metadata %struct._object* %call861, i64 0, metadata !695, metadata !1974), !dbg !3703
  %ob_refcnt869 = getelementptr inbounds %struct._object, %struct._object* %call861, i64 0, i32 0, !dbg !3705
  %252 = load i64, i64* %ob_refcnt869, align 8, !dbg !3705, !tbaa !1991
  %dec870 = add i64 %252, -1, !dbg !3705
  store i64 %dec870, i64* %ob_refcnt869, align 8, !dbg !3705, !tbaa !1991
  %cmp871 = icmp eq i64 %dec870, 0, !dbg !3705
  br i1 %cmp871, label %if.else.873, label %if.end.876, !dbg !3707

if.else.873:                                      ; preds = %do.body.867
  %ob_type874 = getelementptr inbounds %struct._object, %struct._object* %call861, i64 0, i32 1, !dbg !3708
  %253 = load %struct._typeobject*, %struct._typeobject** %ob_type874, align 8, !dbg !3708, !tbaa !2010
  %tp_dealloc875 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %253, i64 0, i32 4, !dbg !3708
  %254 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc875, align 8, !dbg !3708, !tbaa !2032
  tail call void %254(%struct._object* %call861) #2, !dbg !3708
  br label %if.end.876

if.end.876:                                       ; preds = %do.body.867, %if.else.873
  %call880 = tail call %struct._object* @PyLong_FromLong(i64 114) #2, !dbg !3710
  tail call void @llvm.dbg.value(metadata %struct._object* %call880, i64 0, metadata !697, metadata !1974), !dbg !3710
  %tobool881 = icmp eq %struct._object* %call880, null, !dbg !3711
  br i1 %tobool881, label %if.then.885, label %lor.lhs.false.882, !dbg !3711

lor.lhs.false.882:                                ; preds = %if.end.876
  %255 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !3713, !tbaa !2002
  %256 = load %struct._object*, %struct._object** @PyExc_BlockingIOError, align 8, !dbg !3713, !tbaa !2002
  %call883 = tail call i32 @PyDict_SetItem(%struct._object* %255, %struct._object* %call880, %struct._object* %256) #2, !dbg !3713
  %tobool884 = icmp eq i32 %call883, 0, !dbg !3713
  br i1 %tobool884, label %do.body.887, label %if.then.885, !dbg !3710

if.then.885:                                      ; preds = %lor.lhs.false.882, %if.end.876
  tail call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i64 0, i64 0)) #6, !dbg !3715
  unreachable, !dbg !3715

do.body.887:                                      ; preds = %lor.lhs.false.882
  tail call void @llvm.dbg.value(metadata %struct._object* %call880, i64 0, metadata !699, metadata !1974), !dbg !3718
  %ob_refcnt889 = getelementptr inbounds %struct._object, %struct._object* %call880, i64 0, i32 0, !dbg !3720
  %257 = load i64, i64* %ob_refcnt889, align 8, !dbg !3720, !tbaa !1991
  %dec890 = add i64 %257, -1, !dbg !3720
  store i64 %dec890, i64* %ob_refcnt889, align 8, !dbg !3720, !tbaa !1991
  %cmp891 = icmp eq i64 %dec890, 0, !dbg !3720
  br i1 %cmp891, label %if.else.893, label %if.end.896, !dbg !3722

if.else.893:                                      ; preds = %do.body.887
  %ob_type894 = getelementptr inbounds %struct._object, %struct._object* %call880, i64 0, i32 1, !dbg !3723
  %258 = load %struct._typeobject*, %struct._typeobject** %ob_type894, align 8, !dbg !3723, !tbaa !2010
  %tp_dealloc895 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %258, i64 0, i32 4, !dbg !3723
  %259 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc895, align 8, !dbg !3723, !tbaa !2032
  tail call void %259(%struct._object* %call880) #2, !dbg !3723
  br label %if.end.896

if.end.896:                                       ; preds = %do.body.887, %if.else.893
  %call900 = tail call %struct._object* @PyLong_FromLong(i64 115) #2, !dbg !3725
  tail call void @llvm.dbg.value(metadata %struct._object* %call900, i64 0, metadata !701, metadata !1974), !dbg !3725
  %tobool901 = icmp eq %struct._object* %call900, null, !dbg !3726
  br i1 %tobool901, label %if.then.905, label %lor.lhs.false.902, !dbg !3726

lor.lhs.false.902:                                ; preds = %if.end.896
  %260 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !3728, !tbaa !2002
  %261 = load %struct._object*, %struct._object** @PyExc_BlockingIOError, align 8, !dbg !3728, !tbaa !2002
  %call903 = tail call i32 @PyDict_SetItem(%struct._object* %260, %struct._object* %call900, %struct._object* %261) #2, !dbg !3728
  %tobool904 = icmp eq i32 %call903, 0, !dbg !3728
  br i1 %tobool904, label %do.body.907, label %if.then.905, !dbg !3725

if.then.905:                                      ; preds = %lor.lhs.false.902, %if.end.896
  tail call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i64 0, i64 0)) #6, !dbg !3730
  unreachable, !dbg !3730

do.body.907:                                      ; preds = %lor.lhs.false.902
  tail call void @llvm.dbg.value(metadata %struct._object* %call900, i64 0, metadata !703, metadata !1974), !dbg !3733
  %ob_refcnt909 = getelementptr inbounds %struct._object, %struct._object* %call900, i64 0, i32 0, !dbg !3735
  %262 = load i64, i64* %ob_refcnt909, align 8, !dbg !3735, !tbaa !1991
  %dec910 = add i64 %262, -1, !dbg !3735
  store i64 %dec910, i64* %ob_refcnt909, align 8, !dbg !3735, !tbaa !1991
  %cmp911 = icmp eq i64 %dec910, 0, !dbg !3735
  br i1 %cmp911, label %if.else.913, label %if.end.916, !dbg !3737

if.else.913:                                      ; preds = %do.body.907
  %ob_type914 = getelementptr inbounds %struct._object, %struct._object* %call900, i64 0, i32 1, !dbg !3738
  %263 = load %struct._typeobject*, %struct._typeobject** %ob_type914, align 8, !dbg !3738, !tbaa !2010
  %tp_dealloc915 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %263, i64 0, i32 4, !dbg !3738
  %264 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc915, align 8, !dbg !3738, !tbaa !2032
  tail call void %264(%struct._object* %call900) #2, !dbg !3738
  br label %if.end.916

if.end.916:                                       ; preds = %do.body.907, %if.else.913
  %call920 = tail call %struct._object* @PyLong_FromLong(i64 11) #2, !dbg !3740
  tail call void @llvm.dbg.value(metadata %struct._object* %call920, i64 0, metadata !705, metadata !1974), !dbg !3740
  %tobool921 = icmp eq %struct._object* %call920, null, !dbg !3741
  br i1 %tobool921, label %if.then.925, label %lor.lhs.false.922, !dbg !3741

lor.lhs.false.922:                                ; preds = %if.end.916
  %265 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !3743, !tbaa !2002
  %266 = load %struct._object*, %struct._object** @PyExc_BlockingIOError, align 8, !dbg !3743, !tbaa !2002
  %call923 = tail call i32 @PyDict_SetItem(%struct._object* %265, %struct._object* %call920, %struct._object* %266) #2, !dbg !3743
  %tobool924 = icmp eq i32 %call923, 0, !dbg !3743
  br i1 %tobool924, label %do.body.927, label %if.then.925, !dbg !3740

if.then.925:                                      ; preds = %lor.lhs.false.922, %if.end.916
  tail call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i64 0, i64 0)) #6, !dbg !3745
  unreachable, !dbg !3745

do.body.927:                                      ; preds = %lor.lhs.false.922
  tail call void @llvm.dbg.value(metadata %struct._object* %call920, i64 0, metadata !707, metadata !1974), !dbg !3748
  %ob_refcnt929 = getelementptr inbounds %struct._object, %struct._object* %call920, i64 0, i32 0, !dbg !3750
  %267 = load i64, i64* %ob_refcnt929, align 8, !dbg !3750, !tbaa !1991
  %dec930 = add i64 %267, -1, !dbg !3750
  store i64 %dec930, i64* %ob_refcnt929, align 8, !dbg !3750, !tbaa !1991
  %cmp931 = icmp eq i64 %dec930, 0, !dbg !3750
  br i1 %cmp931, label %if.else.933, label %if.end.936, !dbg !3752

if.else.933:                                      ; preds = %do.body.927
  %ob_type934 = getelementptr inbounds %struct._object, %struct._object* %call920, i64 0, i32 1, !dbg !3753
  %268 = load %struct._typeobject*, %struct._typeobject** %ob_type934, align 8, !dbg !3753, !tbaa !2010
  %tp_dealloc935 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %268, i64 0, i32 4, !dbg !3753
  %269 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc935, align 8, !dbg !3753, !tbaa !2032
  tail call void %269(%struct._object* %call920) #2, !dbg !3753
  br label %if.end.936

if.end.936:                                       ; preds = %do.body.927, %if.else.933
  %270 = load %struct._object*, %struct._object** @PyExc_BrokenPipeError, align 8, !dbg !3755, !tbaa !2002
  %call939 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61, i64 0, i64 0), %struct._object* %270) #2, !dbg !3755
  %tobool940 = icmp eq i32 %call939, 0, !dbg !3755
  br i1 %tobool940, label %if.end.942, label %if.then.941, !dbg !3757

if.then.941:                                      ; preds = %if.end.936
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3758
  unreachable, !dbg !3758

if.end.942:                                       ; preds = %if.end.936
  %call944 = tail call %struct._object* @PyLong_FromLong(i64 32) #2, !dbg !3760
  tail call void @llvm.dbg.value(metadata %struct._object* %call944, i64 0, metadata !709, metadata !1974), !dbg !3760
  %tobool945 = icmp eq %struct._object* %call944, null, !dbg !3761
  br i1 %tobool945, label %if.then.949, label %lor.lhs.false.946, !dbg !3761

lor.lhs.false.946:                                ; preds = %if.end.942
  %271 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !3763, !tbaa !2002
  %272 = load %struct._object*, %struct._object** @PyExc_BrokenPipeError, align 8, !dbg !3763, !tbaa !2002
  %call947 = tail call i32 @PyDict_SetItem(%struct._object* %271, %struct._object* %call944, %struct._object* %272) #2, !dbg !3763
  %tobool948 = icmp eq i32 %call947, 0, !dbg !3763
  br i1 %tobool948, label %do.body.951, label %if.then.949, !dbg !3760

if.then.949:                                      ; preds = %lor.lhs.false.946, %if.end.942
  tail call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i64 0, i64 0)) #6, !dbg !3765
  unreachable, !dbg !3765

do.body.951:                                      ; preds = %lor.lhs.false.946
  tail call void @llvm.dbg.value(metadata %struct._object* %call944, i64 0, metadata !711, metadata !1974), !dbg !3768
  %ob_refcnt953 = getelementptr inbounds %struct._object, %struct._object* %call944, i64 0, i32 0, !dbg !3770
  %273 = load i64, i64* %ob_refcnt953, align 8, !dbg !3770, !tbaa !1991
  %dec954 = add i64 %273, -1, !dbg !3770
  store i64 %dec954, i64* %ob_refcnt953, align 8, !dbg !3770, !tbaa !1991
  %cmp955 = icmp eq i64 %dec954, 0, !dbg !3770
  br i1 %cmp955, label %if.else.957, label %if.end.960, !dbg !3772

if.else.957:                                      ; preds = %do.body.951
  %ob_type958 = getelementptr inbounds %struct._object, %struct._object* %call944, i64 0, i32 1, !dbg !3773
  %274 = load %struct._typeobject*, %struct._typeobject** %ob_type958, align 8, !dbg !3773, !tbaa !2010
  %tp_dealloc959 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %274, i64 0, i32 4, !dbg !3773
  %275 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc959, align 8, !dbg !3773, !tbaa !2032
  tail call void %275(%struct._object* %call944) #2, !dbg !3773
  br label %if.end.960

if.end.960:                                       ; preds = %do.body.951, %if.else.957
  %call964 = tail call %struct._object* @PyLong_FromLong(i64 108) #2, !dbg !3775
  tail call void @llvm.dbg.value(metadata %struct._object* %call964, i64 0, metadata !713, metadata !1974), !dbg !3775
  %tobool965 = icmp eq %struct._object* %call964, null, !dbg !3776
  br i1 %tobool965, label %if.then.969, label %lor.lhs.false.966, !dbg !3776

lor.lhs.false.966:                                ; preds = %if.end.960
  %276 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !3778, !tbaa !2002
  %277 = load %struct._object*, %struct._object** @PyExc_BrokenPipeError, align 8, !dbg !3778, !tbaa !2002
  %call967 = tail call i32 @PyDict_SetItem(%struct._object* %276, %struct._object* %call964, %struct._object* %277) #2, !dbg !3778
  %tobool968 = icmp eq i32 %call967, 0, !dbg !3778
  br i1 %tobool968, label %do.body.971, label %if.then.969, !dbg !3775

if.then.969:                                      ; preds = %lor.lhs.false.966, %if.end.960
  tail call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i64 0, i64 0)) #6, !dbg !3780
  unreachable, !dbg !3780

do.body.971:                                      ; preds = %lor.lhs.false.966
  tail call void @llvm.dbg.value(metadata %struct._object* %call964, i64 0, metadata !715, metadata !1974), !dbg !3783
  %ob_refcnt973 = getelementptr inbounds %struct._object, %struct._object* %call964, i64 0, i32 0, !dbg !3785
  %278 = load i64, i64* %ob_refcnt973, align 8, !dbg !3785, !tbaa !1991
  %dec974 = add i64 %278, -1, !dbg !3785
  store i64 %dec974, i64* %ob_refcnt973, align 8, !dbg !3785, !tbaa !1991
  %cmp975 = icmp eq i64 %dec974, 0, !dbg !3785
  br i1 %cmp975, label %if.else.977, label %if.end.980, !dbg !3787

if.else.977:                                      ; preds = %do.body.971
  %ob_type978 = getelementptr inbounds %struct._object, %struct._object* %call964, i64 0, i32 1, !dbg !3788
  %279 = load %struct._typeobject*, %struct._typeobject** %ob_type978, align 8, !dbg !3788, !tbaa !2010
  %tp_dealloc979 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %279, i64 0, i32 4, !dbg !3788
  %280 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc979, align 8, !dbg !3788, !tbaa !2032
  tail call void %280(%struct._object* %call964) #2, !dbg !3788
  br label %if.end.980

if.end.980:                                       ; preds = %do.body.971, %if.else.977
  %281 = load %struct._object*, %struct._object** @PyExc_ChildProcessError, align 8, !dbg !3790, !tbaa !2002
  %call983 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.62, i64 0, i64 0), %struct._object* %281) #2, !dbg !3790
  %tobool984 = icmp eq i32 %call983, 0, !dbg !3790
  br i1 %tobool984, label %if.end.986, label %if.then.985, !dbg !3792

if.then.985:                                      ; preds = %if.end.980
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3793
  unreachable, !dbg !3793

if.end.986:                                       ; preds = %if.end.980
  %call988 = tail call %struct._object* @PyLong_FromLong(i64 10) #2, !dbg !3795
  tail call void @llvm.dbg.value(metadata %struct._object* %call988, i64 0, metadata !717, metadata !1974), !dbg !3795
  %tobool989 = icmp eq %struct._object* %call988, null, !dbg !3796
  br i1 %tobool989, label %if.then.993, label %lor.lhs.false.990, !dbg !3796

lor.lhs.false.990:                                ; preds = %if.end.986
  %282 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !3798, !tbaa !2002
  %283 = load %struct._object*, %struct._object** @PyExc_ChildProcessError, align 8, !dbg !3798, !tbaa !2002
  %call991 = tail call i32 @PyDict_SetItem(%struct._object* %282, %struct._object* %call988, %struct._object* %283) #2, !dbg !3798
  %tobool992 = icmp eq i32 %call991, 0, !dbg !3798
  br i1 %tobool992, label %do.body.995, label %if.then.993, !dbg !3795

if.then.993:                                      ; preds = %lor.lhs.false.990, %if.end.986
  tail call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i64 0, i64 0)) #6, !dbg !3800
  unreachable, !dbg !3800

do.body.995:                                      ; preds = %lor.lhs.false.990
  tail call void @llvm.dbg.value(metadata %struct._object* %call988, i64 0, metadata !719, metadata !1974), !dbg !3803
  %ob_refcnt997 = getelementptr inbounds %struct._object, %struct._object* %call988, i64 0, i32 0, !dbg !3805
  %284 = load i64, i64* %ob_refcnt997, align 8, !dbg !3805, !tbaa !1991
  %dec998 = add i64 %284, -1, !dbg !3805
  store i64 %dec998, i64* %ob_refcnt997, align 8, !dbg !3805, !tbaa !1991
  %cmp999 = icmp eq i64 %dec998, 0, !dbg !3805
  br i1 %cmp999, label %if.else.1001, label %if.end.1004, !dbg !3807

if.else.1001:                                     ; preds = %do.body.995
  %ob_type1002 = getelementptr inbounds %struct._object, %struct._object* %call988, i64 0, i32 1, !dbg !3808
  %285 = load %struct._typeobject*, %struct._typeobject** %ob_type1002, align 8, !dbg !3808, !tbaa !2010
  %tp_dealloc1003 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %285, i64 0, i32 4, !dbg !3808
  %286 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1003, align 8, !dbg !3808, !tbaa !2032
  tail call void %286(%struct._object* %call988) #2, !dbg !3808
  br label %if.end.1004

if.end.1004:                                      ; preds = %do.body.995, %if.else.1001
  %287 = load %struct._object*, %struct._object** @PyExc_ConnectionAbortedError, align 8, !dbg !3810, !tbaa !2002
  %call1007 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.63, i64 0, i64 0), %struct._object* %287) #2, !dbg !3810
  %tobool1008 = icmp eq i32 %call1007, 0, !dbg !3810
  br i1 %tobool1008, label %if.end.1010, label %if.then.1009, !dbg !3812

if.then.1009:                                     ; preds = %if.end.1004
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3813
  unreachable, !dbg !3813

if.end.1010:                                      ; preds = %if.end.1004
  %call1012 = tail call %struct._object* @PyLong_FromLong(i64 103) #2, !dbg !3815
  tail call void @llvm.dbg.value(metadata %struct._object* %call1012, i64 0, metadata !721, metadata !1974), !dbg !3815
  %tobool1013 = icmp eq %struct._object* %call1012, null, !dbg !3816
  br i1 %tobool1013, label %if.then.1017, label %lor.lhs.false.1014, !dbg !3816

lor.lhs.false.1014:                               ; preds = %if.end.1010
  %288 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !3818, !tbaa !2002
  %289 = load %struct._object*, %struct._object** @PyExc_ConnectionAbortedError, align 8, !dbg !3818, !tbaa !2002
  %call1015 = tail call i32 @PyDict_SetItem(%struct._object* %288, %struct._object* %call1012, %struct._object* %289) #2, !dbg !3818
  %tobool1016 = icmp eq i32 %call1015, 0, !dbg !3818
  br i1 %tobool1016, label %do.body.1019, label %if.then.1017, !dbg !3815

if.then.1017:                                     ; preds = %lor.lhs.false.1014, %if.end.1010
  tail call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i64 0, i64 0)) #6, !dbg !3820
  unreachable, !dbg !3820

do.body.1019:                                     ; preds = %lor.lhs.false.1014
  tail call void @llvm.dbg.value(metadata %struct._object* %call1012, i64 0, metadata !723, metadata !1974), !dbg !3823
  %ob_refcnt1021 = getelementptr inbounds %struct._object, %struct._object* %call1012, i64 0, i32 0, !dbg !3825
  %290 = load i64, i64* %ob_refcnt1021, align 8, !dbg !3825, !tbaa !1991
  %dec1022 = add i64 %290, -1, !dbg !3825
  store i64 %dec1022, i64* %ob_refcnt1021, align 8, !dbg !3825, !tbaa !1991
  %cmp1023 = icmp eq i64 %dec1022, 0, !dbg !3825
  br i1 %cmp1023, label %if.else.1025, label %if.end.1028, !dbg !3827

if.else.1025:                                     ; preds = %do.body.1019
  %ob_type1026 = getelementptr inbounds %struct._object, %struct._object* %call1012, i64 0, i32 1, !dbg !3828
  %291 = load %struct._typeobject*, %struct._typeobject** %ob_type1026, align 8, !dbg !3828, !tbaa !2010
  %tp_dealloc1027 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %291, i64 0, i32 4, !dbg !3828
  %292 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1027, align 8, !dbg !3828, !tbaa !2032
  tail call void %292(%struct._object* %call1012) #2, !dbg !3828
  br label %if.end.1028

if.end.1028:                                      ; preds = %do.body.1019, %if.else.1025
  %293 = load %struct._object*, %struct._object** @PyExc_ConnectionRefusedError, align 8, !dbg !3830, !tbaa !2002
  %call1031 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.64, i64 0, i64 0), %struct._object* %293) #2, !dbg !3830
  %tobool1032 = icmp eq i32 %call1031, 0, !dbg !3830
  br i1 %tobool1032, label %if.end.1034, label %if.then.1033, !dbg !3832

if.then.1033:                                     ; preds = %if.end.1028
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3833
  unreachable, !dbg !3833

if.end.1034:                                      ; preds = %if.end.1028
  %call1036 = tail call %struct._object* @PyLong_FromLong(i64 111) #2, !dbg !3835
  tail call void @llvm.dbg.value(metadata %struct._object* %call1036, i64 0, metadata !725, metadata !1974), !dbg !3835
  %tobool1037 = icmp eq %struct._object* %call1036, null, !dbg !3836
  br i1 %tobool1037, label %if.then.1041, label %lor.lhs.false.1038, !dbg !3836

lor.lhs.false.1038:                               ; preds = %if.end.1034
  %294 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !3838, !tbaa !2002
  %295 = load %struct._object*, %struct._object** @PyExc_ConnectionRefusedError, align 8, !dbg !3838, !tbaa !2002
  %call1039 = tail call i32 @PyDict_SetItem(%struct._object* %294, %struct._object* %call1036, %struct._object* %295) #2, !dbg !3838
  %tobool1040 = icmp eq i32 %call1039, 0, !dbg !3838
  br i1 %tobool1040, label %do.body.1043, label %if.then.1041, !dbg !3835

if.then.1041:                                     ; preds = %lor.lhs.false.1038, %if.end.1034
  tail call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i64 0, i64 0)) #6, !dbg !3840
  unreachable, !dbg !3840

do.body.1043:                                     ; preds = %lor.lhs.false.1038
  tail call void @llvm.dbg.value(metadata %struct._object* %call1036, i64 0, metadata !727, metadata !1974), !dbg !3843
  %ob_refcnt1045 = getelementptr inbounds %struct._object, %struct._object* %call1036, i64 0, i32 0, !dbg !3845
  %296 = load i64, i64* %ob_refcnt1045, align 8, !dbg !3845, !tbaa !1991
  %dec1046 = add i64 %296, -1, !dbg !3845
  store i64 %dec1046, i64* %ob_refcnt1045, align 8, !dbg !3845, !tbaa !1991
  %cmp1047 = icmp eq i64 %dec1046, 0, !dbg !3845
  br i1 %cmp1047, label %if.else.1049, label %if.end.1052, !dbg !3847

if.else.1049:                                     ; preds = %do.body.1043
  %ob_type1050 = getelementptr inbounds %struct._object, %struct._object* %call1036, i64 0, i32 1, !dbg !3848
  %297 = load %struct._typeobject*, %struct._typeobject** %ob_type1050, align 8, !dbg !3848, !tbaa !2010
  %tp_dealloc1051 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %297, i64 0, i32 4, !dbg !3848
  %298 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1051, align 8, !dbg !3848, !tbaa !2032
  tail call void %298(%struct._object* %call1036) #2, !dbg !3848
  br label %if.end.1052

if.end.1052:                                      ; preds = %do.body.1043, %if.else.1049
  %299 = load %struct._object*, %struct._object** @PyExc_ConnectionResetError, align 8, !dbg !3850, !tbaa !2002
  %call1055 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.65, i64 0, i64 0), %struct._object* %299) #2, !dbg !3850
  %tobool1056 = icmp eq i32 %call1055, 0, !dbg !3850
  br i1 %tobool1056, label %if.end.1058, label %if.then.1057, !dbg !3852

if.then.1057:                                     ; preds = %if.end.1052
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3853
  unreachable, !dbg !3853

if.end.1058:                                      ; preds = %if.end.1052
  %call1060 = tail call %struct._object* @PyLong_FromLong(i64 104) #2, !dbg !3855
  tail call void @llvm.dbg.value(metadata %struct._object* %call1060, i64 0, metadata !729, metadata !1974), !dbg !3855
  %tobool1061 = icmp eq %struct._object* %call1060, null, !dbg !3856
  br i1 %tobool1061, label %if.then.1065, label %lor.lhs.false.1062, !dbg !3856

lor.lhs.false.1062:                               ; preds = %if.end.1058
  %300 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !3858, !tbaa !2002
  %301 = load %struct._object*, %struct._object** @PyExc_ConnectionResetError, align 8, !dbg !3858, !tbaa !2002
  %call1063 = tail call i32 @PyDict_SetItem(%struct._object* %300, %struct._object* %call1060, %struct._object* %301) #2, !dbg !3858
  %tobool1064 = icmp eq i32 %call1063, 0, !dbg !3858
  br i1 %tobool1064, label %do.body.1067, label %if.then.1065, !dbg !3855

if.then.1065:                                     ; preds = %lor.lhs.false.1062, %if.end.1058
  tail call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i64 0, i64 0)) #6, !dbg !3860
  unreachable, !dbg !3860

do.body.1067:                                     ; preds = %lor.lhs.false.1062
  tail call void @llvm.dbg.value(metadata %struct._object* %call1060, i64 0, metadata !731, metadata !1974), !dbg !3863
  %ob_refcnt1069 = getelementptr inbounds %struct._object, %struct._object* %call1060, i64 0, i32 0, !dbg !3865
  %302 = load i64, i64* %ob_refcnt1069, align 8, !dbg !3865, !tbaa !1991
  %dec1070 = add i64 %302, -1, !dbg !3865
  store i64 %dec1070, i64* %ob_refcnt1069, align 8, !dbg !3865, !tbaa !1991
  %cmp1071 = icmp eq i64 %dec1070, 0, !dbg !3865
  br i1 %cmp1071, label %if.else.1073, label %if.end.1076, !dbg !3867

if.else.1073:                                     ; preds = %do.body.1067
  %ob_type1074 = getelementptr inbounds %struct._object, %struct._object* %call1060, i64 0, i32 1, !dbg !3868
  %303 = load %struct._typeobject*, %struct._typeobject** %ob_type1074, align 8, !dbg !3868, !tbaa !2010
  %tp_dealloc1075 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %303, i64 0, i32 4, !dbg !3868
  %304 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1075, align 8, !dbg !3868, !tbaa !2032
  tail call void %304(%struct._object* %call1060) #2, !dbg !3868
  br label %if.end.1076

if.end.1076:                                      ; preds = %do.body.1067, %if.else.1073
  %305 = load %struct._object*, %struct._object** @PyExc_FileExistsError, align 8, !dbg !3870, !tbaa !2002
  %call1079 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.66, i64 0, i64 0), %struct._object* %305) #2, !dbg !3870
  %tobool1080 = icmp eq i32 %call1079, 0, !dbg !3870
  br i1 %tobool1080, label %if.end.1082, label %if.then.1081, !dbg !3872

if.then.1081:                                     ; preds = %if.end.1076
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3873
  unreachable, !dbg !3873

if.end.1082:                                      ; preds = %if.end.1076
  %call1084 = tail call %struct._object* @PyLong_FromLong(i64 17) #2, !dbg !3875
  tail call void @llvm.dbg.value(metadata %struct._object* %call1084, i64 0, metadata !733, metadata !1974), !dbg !3875
  %tobool1085 = icmp eq %struct._object* %call1084, null, !dbg !3876
  br i1 %tobool1085, label %if.then.1089, label %lor.lhs.false.1086, !dbg !3876

lor.lhs.false.1086:                               ; preds = %if.end.1082
  %306 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !3878, !tbaa !2002
  %307 = load %struct._object*, %struct._object** @PyExc_FileExistsError, align 8, !dbg !3878, !tbaa !2002
  %call1087 = tail call i32 @PyDict_SetItem(%struct._object* %306, %struct._object* %call1084, %struct._object* %307) #2, !dbg !3878
  %tobool1088 = icmp eq i32 %call1087, 0, !dbg !3878
  br i1 %tobool1088, label %do.body.1091, label %if.then.1089, !dbg !3875

if.then.1089:                                     ; preds = %lor.lhs.false.1086, %if.end.1082
  tail call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i64 0, i64 0)) #6, !dbg !3880
  unreachable, !dbg !3880

do.body.1091:                                     ; preds = %lor.lhs.false.1086
  tail call void @llvm.dbg.value(metadata %struct._object* %call1084, i64 0, metadata !735, metadata !1974), !dbg !3883
  %ob_refcnt1093 = getelementptr inbounds %struct._object, %struct._object* %call1084, i64 0, i32 0, !dbg !3885
  %308 = load i64, i64* %ob_refcnt1093, align 8, !dbg !3885, !tbaa !1991
  %dec1094 = add i64 %308, -1, !dbg !3885
  store i64 %dec1094, i64* %ob_refcnt1093, align 8, !dbg !3885, !tbaa !1991
  %cmp1095 = icmp eq i64 %dec1094, 0, !dbg !3885
  br i1 %cmp1095, label %if.else.1097, label %if.end.1100, !dbg !3887

if.else.1097:                                     ; preds = %do.body.1091
  %ob_type1098 = getelementptr inbounds %struct._object, %struct._object* %call1084, i64 0, i32 1, !dbg !3888
  %309 = load %struct._typeobject*, %struct._typeobject** %ob_type1098, align 8, !dbg !3888, !tbaa !2010
  %tp_dealloc1099 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %309, i64 0, i32 4, !dbg !3888
  %310 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1099, align 8, !dbg !3888, !tbaa !2032
  tail call void %310(%struct._object* %call1084) #2, !dbg !3888
  br label %if.end.1100

if.end.1100:                                      ; preds = %do.body.1091, %if.else.1097
  %311 = load %struct._object*, %struct._object** @PyExc_FileNotFoundError, align 8, !dbg !3890, !tbaa !2002
  %call1103 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.67, i64 0, i64 0), %struct._object* %311) #2, !dbg !3890
  %tobool1104 = icmp eq i32 %call1103, 0, !dbg !3890
  br i1 %tobool1104, label %if.end.1106, label %if.then.1105, !dbg !3892

if.then.1105:                                     ; preds = %if.end.1100
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3893
  unreachable, !dbg !3893

if.end.1106:                                      ; preds = %if.end.1100
  %call1108 = tail call %struct._object* @PyLong_FromLong(i64 2) #2, !dbg !3895
  tail call void @llvm.dbg.value(metadata %struct._object* %call1108, i64 0, metadata !737, metadata !1974), !dbg !3895
  %tobool1109 = icmp eq %struct._object* %call1108, null, !dbg !3896
  br i1 %tobool1109, label %if.then.1113, label %lor.lhs.false.1110, !dbg !3896

lor.lhs.false.1110:                               ; preds = %if.end.1106
  %312 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !3898, !tbaa !2002
  %313 = load %struct._object*, %struct._object** @PyExc_FileNotFoundError, align 8, !dbg !3898, !tbaa !2002
  %call1111 = tail call i32 @PyDict_SetItem(%struct._object* %312, %struct._object* %call1108, %struct._object* %313) #2, !dbg !3898
  %tobool1112 = icmp eq i32 %call1111, 0, !dbg !3898
  br i1 %tobool1112, label %do.body.1115, label %if.then.1113, !dbg !3895

if.then.1113:                                     ; preds = %lor.lhs.false.1110, %if.end.1106
  tail call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i64 0, i64 0)) #6, !dbg !3900
  unreachable, !dbg !3900

do.body.1115:                                     ; preds = %lor.lhs.false.1110
  tail call void @llvm.dbg.value(metadata %struct._object* %call1108, i64 0, metadata !739, metadata !1974), !dbg !3903
  %ob_refcnt1117 = getelementptr inbounds %struct._object, %struct._object* %call1108, i64 0, i32 0, !dbg !3905
  %314 = load i64, i64* %ob_refcnt1117, align 8, !dbg !3905, !tbaa !1991
  %dec1118 = add i64 %314, -1, !dbg !3905
  store i64 %dec1118, i64* %ob_refcnt1117, align 8, !dbg !3905, !tbaa !1991
  %cmp1119 = icmp eq i64 %dec1118, 0, !dbg !3905
  br i1 %cmp1119, label %if.else.1121, label %if.end.1124, !dbg !3907

if.else.1121:                                     ; preds = %do.body.1115
  %ob_type1122 = getelementptr inbounds %struct._object, %struct._object* %call1108, i64 0, i32 1, !dbg !3908
  %315 = load %struct._typeobject*, %struct._typeobject** %ob_type1122, align 8, !dbg !3908, !tbaa !2010
  %tp_dealloc1123 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %315, i64 0, i32 4, !dbg !3908
  %316 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1123, align 8, !dbg !3908, !tbaa !2032
  tail call void %316(%struct._object* %call1108) #2, !dbg !3908
  br label %if.end.1124

if.end.1124:                                      ; preds = %do.body.1115, %if.else.1121
  %317 = load %struct._object*, %struct._object** @PyExc_IsADirectoryError, align 8, !dbg !3910, !tbaa !2002
  %call1127 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0), %struct._object* %317) #2, !dbg !3910
  %tobool1128 = icmp eq i32 %call1127, 0, !dbg !3910
  br i1 %tobool1128, label %if.end.1130, label %if.then.1129, !dbg !3912

if.then.1129:                                     ; preds = %if.end.1124
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3913
  unreachable, !dbg !3913

if.end.1130:                                      ; preds = %if.end.1124
  %call1132 = tail call %struct._object* @PyLong_FromLong(i64 21) #2, !dbg !3915
  tail call void @llvm.dbg.value(metadata %struct._object* %call1132, i64 0, metadata !741, metadata !1974), !dbg !3915
  %tobool1133 = icmp eq %struct._object* %call1132, null, !dbg !3916
  br i1 %tobool1133, label %if.then.1137, label %lor.lhs.false.1134, !dbg !3916

lor.lhs.false.1134:                               ; preds = %if.end.1130
  %318 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !3918, !tbaa !2002
  %319 = load %struct._object*, %struct._object** @PyExc_IsADirectoryError, align 8, !dbg !3918, !tbaa !2002
  %call1135 = tail call i32 @PyDict_SetItem(%struct._object* %318, %struct._object* %call1132, %struct._object* %319) #2, !dbg !3918
  %tobool1136 = icmp eq i32 %call1135, 0, !dbg !3918
  br i1 %tobool1136, label %do.body.1139, label %if.then.1137, !dbg !3915

if.then.1137:                                     ; preds = %lor.lhs.false.1134, %if.end.1130
  tail call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i64 0, i64 0)) #6, !dbg !3920
  unreachable, !dbg !3920

do.body.1139:                                     ; preds = %lor.lhs.false.1134
  tail call void @llvm.dbg.value(metadata %struct._object* %call1132, i64 0, metadata !743, metadata !1974), !dbg !3923
  %ob_refcnt1141 = getelementptr inbounds %struct._object, %struct._object* %call1132, i64 0, i32 0, !dbg !3925
  %320 = load i64, i64* %ob_refcnt1141, align 8, !dbg !3925, !tbaa !1991
  %dec1142 = add i64 %320, -1, !dbg !3925
  store i64 %dec1142, i64* %ob_refcnt1141, align 8, !dbg !3925, !tbaa !1991
  %cmp1143 = icmp eq i64 %dec1142, 0, !dbg !3925
  br i1 %cmp1143, label %if.else.1145, label %if.end.1148, !dbg !3927

if.else.1145:                                     ; preds = %do.body.1139
  %ob_type1146 = getelementptr inbounds %struct._object, %struct._object* %call1132, i64 0, i32 1, !dbg !3928
  %321 = load %struct._typeobject*, %struct._typeobject** %ob_type1146, align 8, !dbg !3928, !tbaa !2010
  %tp_dealloc1147 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %321, i64 0, i32 4, !dbg !3928
  %322 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1147, align 8, !dbg !3928, !tbaa !2032
  tail call void %322(%struct._object* %call1132) #2, !dbg !3928
  br label %if.end.1148

if.end.1148:                                      ; preds = %do.body.1139, %if.else.1145
  %323 = load %struct._object*, %struct._object** @PyExc_NotADirectoryError, align 8, !dbg !3930, !tbaa !2002
  %call1151 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i64 0, i64 0), %struct._object* %323) #2, !dbg !3930
  %tobool1152 = icmp eq i32 %call1151, 0, !dbg !3930
  br i1 %tobool1152, label %if.end.1154, label %if.then.1153, !dbg !3932

if.then.1153:                                     ; preds = %if.end.1148
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3933
  unreachable, !dbg !3933

if.end.1154:                                      ; preds = %if.end.1148
  %call1156 = tail call %struct._object* @PyLong_FromLong(i64 20) #2, !dbg !3935
  tail call void @llvm.dbg.value(metadata %struct._object* %call1156, i64 0, metadata !745, metadata !1974), !dbg !3935
  %tobool1157 = icmp eq %struct._object* %call1156, null, !dbg !3936
  br i1 %tobool1157, label %if.then.1161, label %lor.lhs.false.1158, !dbg !3936

lor.lhs.false.1158:                               ; preds = %if.end.1154
  %324 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !3938, !tbaa !2002
  %325 = load %struct._object*, %struct._object** @PyExc_NotADirectoryError, align 8, !dbg !3938, !tbaa !2002
  %call1159 = tail call i32 @PyDict_SetItem(%struct._object* %324, %struct._object* %call1156, %struct._object* %325) #2, !dbg !3938
  %tobool1160 = icmp eq i32 %call1159, 0, !dbg !3938
  br i1 %tobool1160, label %do.body.1163, label %if.then.1161, !dbg !3935

if.then.1161:                                     ; preds = %lor.lhs.false.1158, %if.end.1154
  tail call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i64 0, i64 0)) #6, !dbg !3940
  unreachable, !dbg !3940

do.body.1163:                                     ; preds = %lor.lhs.false.1158
  tail call void @llvm.dbg.value(metadata %struct._object* %call1156, i64 0, metadata !747, metadata !1974), !dbg !3943
  %ob_refcnt1165 = getelementptr inbounds %struct._object, %struct._object* %call1156, i64 0, i32 0, !dbg !3945
  %326 = load i64, i64* %ob_refcnt1165, align 8, !dbg !3945, !tbaa !1991
  %dec1166 = add i64 %326, -1, !dbg !3945
  store i64 %dec1166, i64* %ob_refcnt1165, align 8, !dbg !3945, !tbaa !1991
  %cmp1167 = icmp eq i64 %dec1166, 0, !dbg !3945
  br i1 %cmp1167, label %if.else.1169, label %if.end.1172, !dbg !3947

if.else.1169:                                     ; preds = %do.body.1163
  %ob_type1170 = getelementptr inbounds %struct._object, %struct._object* %call1156, i64 0, i32 1, !dbg !3948
  %327 = load %struct._typeobject*, %struct._typeobject** %ob_type1170, align 8, !dbg !3948, !tbaa !2010
  %tp_dealloc1171 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %327, i64 0, i32 4, !dbg !3948
  %328 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1171, align 8, !dbg !3948, !tbaa !2032
  tail call void %328(%struct._object* %call1156) #2, !dbg !3948
  br label %if.end.1172

if.end.1172:                                      ; preds = %do.body.1163, %if.else.1169
  %329 = load %struct._object*, %struct._object** @PyExc_InterruptedError, align 8, !dbg !3950, !tbaa !2002
  %call1175 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.70, i64 0, i64 0), %struct._object* %329) #2, !dbg !3950
  %tobool1176 = icmp eq i32 %call1175, 0, !dbg !3950
  br i1 %tobool1176, label %if.end.1178, label %if.then.1177, !dbg !3952

if.then.1177:                                     ; preds = %if.end.1172
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3953
  unreachable, !dbg !3953

if.end.1178:                                      ; preds = %if.end.1172
  %call1180 = tail call %struct._object* @PyLong_FromLong(i64 4) #2, !dbg !3955
  tail call void @llvm.dbg.value(metadata %struct._object* %call1180, i64 0, metadata !749, metadata !1974), !dbg !3955
  %tobool1181 = icmp eq %struct._object* %call1180, null, !dbg !3956
  br i1 %tobool1181, label %if.then.1185, label %lor.lhs.false.1182, !dbg !3956

lor.lhs.false.1182:                               ; preds = %if.end.1178
  %330 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !3958, !tbaa !2002
  %331 = load %struct._object*, %struct._object** @PyExc_InterruptedError, align 8, !dbg !3958, !tbaa !2002
  %call1183 = tail call i32 @PyDict_SetItem(%struct._object* %330, %struct._object* %call1180, %struct._object* %331) #2, !dbg !3958
  %tobool1184 = icmp eq i32 %call1183, 0, !dbg !3958
  br i1 %tobool1184, label %do.body.1187, label %if.then.1185, !dbg !3955

if.then.1185:                                     ; preds = %lor.lhs.false.1182, %if.end.1178
  tail call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i64 0, i64 0)) #6, !dbg !3960
  unreachable, !dbg !3960

do.body.1187:                                     ; preds = %lor.lhs.false.1182
  tail call void @llvm.dbg.value(metadata %struct._object* %call1180, i64 0, metadata !751, metadata !1974), !dbg !3963
  %ob_refcnt1189 = getelementptr inbounds %struct._object, %struct._object* %call1180, i64 0, i32 0, !dbg !3965
  %332 = load i64, i64* %ob_refcnt1189, align 8, !dbg !3965, !tbaa !1991
  %dec1190 = add i64 %332, -1, !dbg !3965
  store i64 %dec1190, i64* %ob_refcnt1189, align 8, !dbg !3965, !tbaa !1991
  %cmp1191 = icmp eq i64 %dec1190, 0, !dbg !3965
  br i1 %cmp1191, label %if.else.1193, label %if.end.1196, !dbg !3967

if.else.1193:                                     ; preds = %do.body.1187
  %ob_type1194 = getelementptr inbounds %struct._object, %struct._object* %call1180, i64 0, i32 1, !dbg !3968
  %333 = load %struct._typeobject*, %struct._typeobject** %ob_type1194, align 8, !dbg !3968, !tbaa !2010
  %tp_dealloc1195 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %333, i64 0, i32 4, !dbg !3968
  %334 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1195, align 8, !dbg !3968, !tbaa !2032
  tail call void %334(%struct._object* %call1180) #2, !dbg !3968
  br label %if.end.1196

if.end.1196:                                      ; preds = %do.body.1187, %if.else.1193
  %335 = load %struct._object*, %struct._object** @PyExc_PermissionError, align 8, !dbg !3970, !tbaa !2002
  %call1199 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.71, i64 0, i64 0), %struct._object* %335) #2, !dbg !3970
  %tobool1200 = icmp eq i32 %call1199, 0, !dbg !3970
  br i1 %tobool1200, label %if.end.1202, label %if.then.1201, !dbg !3972

if.then.1201:                                     ; preds = %if.end.1196
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3973
  unreachable, !dbg !3973

if.end.1202:                                      ; preds = %if.end.1196
  %call1204 = tail call %struct._object* @PyLong_FromLong(i64 13) #2, !dbg !3975
  tail call void @llvm.dbg.value(metadata %struct._object* %call1204, i64 0, metadata !753, metadata !1974), !dbg !3975
  %tobool1205 = icmp eq %struct._object* %call1204, null, !dbg !3976
  br i1 %tobool1205, label %if.then.1209, label %lor.lhs.false.1206, !dbg !3976

lor.lhs.false.1206:                               ; preds = %if.end.1202
  %336 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !3978, !tbaa !2002
  %337 = load %struct._object*, %struct._object** @PyExc_PermissionError, align 8, !dbg !3978, !tbaa !2002
  %call1207 = tail call i32 @PyDict_SetItem(%struct._object* %336, %struct._object* %call1204, %struct._object* %337) #2, !dbg !3978
  %tobool1208 = icmp eq i32 %call1207, 0, !dbg !3978
  br i1 %tobool1208, label %do.body.1211, label %if.then.1209, !dbg !3975

if.then.1209:                                     ; preds = %lor.lhs.false.1206, %if.end.1202
  tail call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i64 0, i64 0)) #6, !dbg !3980
  unreachable, !dbg !3980

do.body.1211:                                     ; preds = %lor.lhs.false.1206
  tail call void @llvm.dbg.value(metadata %struct._object* %call1204, i64 0, metadata !755, metadata !1974), !dbg !3983
  %ob_refcnt1213 = getelementptr inbounds %struct._object, %struct._object* %call1204, i64 0, i32 0, !dbg !3985
  %338 = load i64, i64* %ob_refcnt1213, align 8, !dbg !3985, !tbaa !1991
  %dec1214 = add i64 %338, -1, !dbg !3985
  store i64 %dec1214, i64* %ob_refcnt1213, align 8, !dbg !3985, !tbaa !1991
  %cmp1215 = icmp eq i64 %dec1214, 0, !dbg !3985
  br i1 %cmp1215, label %if.else.1217, label %if.end.1220, !dbg !3987

if.else.1217:                                     ; preds = %do.body.1211
  %ob_type1218 = getelementptr inbounds %struct._object, %struct._object* %call1204, i64 0, i32 1, !dbg !3988
  %339 = load %struct._typeobject*, %struct._typeobject** %ob_type1218, align 8, !dbg !3988, !tbaa !2010
  %tp_dealloc1219 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %339, i64 0, i32 4, !dbg !3988
  %340 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1219, align 8, !dbg !3988, !tbaa !2032
  tail call void %340(%struct._object* %call1204) #2, !dbg !3988
  br label %if.end.1220

if.end.1220:                                      ; preds = %do.body.1211, %if.else.1217
  %call1224 = tail call %struct._object* @PyLong_FromLong(i64 1) #2, !dbg !3990
  tail call void @llvm.dbg.value(metadata %struct._object* %call1224, i64 0, metadata !757, metadata !1974), !dbg !3990
  %tobool1225 = icmp eq %struct._object* %call1224, null, !dbg !3991
  br i1 %tobool1225, label %if.then.1229, label %lor.lhs.false.1226, !dbg !3991

lor.lhs.false.1226:                               ; preds = %if.end.1220
  %341 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !3993, !tbaa !2002
  %342 = load %struct._object*, %struct._object** @PyExc_PermissionError, align 8, !dbg !3993, !tbaa !2002
  %call1227 = tail call i32 @PyDict_SetItem(%struct._object* %341, %struct._object* %call1224, %struct._object* %342) #2, !dbg !3993
  %tobool1228 = icmp eq i32 %call1227, 0, !dbg !3993
  br i1 %tobool1228, label %do.body.1231, label %if.then.1229, !dbg !3990

if.then.1229:                                     ; preds = %lor.lhs.false.1226, %if.end.1220
  tail call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i64 0, i64 0)) #6, !dbg !3995
  unreachable, !dbg !3995

do.body.1231:                                     ; preds = %lor.lhs.false.1226
  tail call void @llvm.dbg.value(metadata %struct._object* %call1224, i64 0, metadata !759, metadata !1974), !dbg !3998
  %ob_refcnt1233 = getelementptr inbounds %struct._object, %struct._object* %call1224, i64 0, i32 0, !dbg !4000
  %343 = load i64, i64* %ob_refcnt1233, align 8, !dbg !4000, !tbaa !1991
  %dec1234 = add i64 %343, -1, !dbg !4000
  store i64 %dec1234, i64* %ob_refcnt1233, align 8, !dbg !4000, !tbaa !1991
  %cmp1235 = icmp eq i64 %dec1234, 0, !dbg !4000
  br i1 %cmp1235, label %if.else.1237, label %if.end.1240, !dbg !4002

if.else.1237:                                     ; preds = %do.body.1231
  %ob_type1238 = getelementptr inbounds %struct._object, %struct._object* %call1224, i64 0, i32 1, !dbg !4003
  %344 = load %struct._typeobject*, %struct._typeobject** %ob_type1238, align 8, !dbg !4003, !tbaa !2010
  %tp_dealloc1239 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %344, i64 0, i32 4, !dbg !4003
  %345 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1239, align 8, !dbg !4003, !tbaa !2032
  tail call void %345(%struct._object* %call1224) #2, !dbg !4003
  br label %if.end.1240

if.end.1240:                                      ; preds = %do.body.1231, %if.else.1237
  %346 = load %struct._object*, %struct._object** @PyExc_ProcessLookupError, align 8, !dbg !4005, !tbaa !2002
  %call1243 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.72, i64 0, i64 0), %struct._object* %346) #2, !dbg !4005
  %tobool1244 = icmp eq i32 %call1243, 0, !dbg !4005
  br i1 %tobool1244, label %if.end.1246, label %if.then.1245, !dbg !4007

if.then.1245:                                     ; preds = %if.end.1240
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !4008
  unreachable, !dbg !4008

if.end.1246:                                      ; preds = %if.end.1240
  %call1248 = tail call %struct._object* @PyLong_FromLong(i64 3) #2, !dbg !4010
  tail call void @llvm.dbg.value(metadata %struct._object* %call1248, i64 0, metadata !761, metadata !1974), !dbg !4010
  %tobool1249 = icmp eq %struct._object* %call1248, null, !dbg !4011
  br i1 %tobool1249, label %if.then.1253, label %lor.lhs.false.1250, !dbg !4011

lor.lhs.false.1250:                               ; preds = %if.end.1246
  %347 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !4013, !tbaa !2002
  %348 = load %struct._object*, %struct._object** @PyExc_ProcessLookupError, align 8, !dbg !4013, !tbaa !2002
  %call1251 = tail call i32 @PyDict_SetItem(%struct._object* %347, %struct._object* %call1248, %struct._object* %348) #2, !dbg !4013
  %tobool1252 = icmp eq i32 %call1251, 0, !dbg !4013
  br i1 %tobool1252, label %do.body.1255, label %if.then.1253, !dbg !4010

if.then.1253:                                     ; preds = %lor.lhs.false.1250, %if.end.1246
  tail call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i64 0, i64 0)) #6, !dbg !4015
  unreachable, !dbg !4015

do.body.1255:                                     ; preds = %lor.lhs.false.1250
  tail call void @llvm.dbg.value(metadata %struct._object* %call1248, i64 0, metadata !763, metadata !1974), !dbg !4018
  %ob_refcnt1257 = getelementptr inbounds %struct._object, %struct._object* %call1248, i64 0, i32 0, !dbg !4020
  %349 = load i64, i64* %ob_refcnt1257, align 8, !dbg !4020, !tbaa !1991
  %dec1258 = add i64 %349, -1, !dbg !4020
  store i64 %dec1258, i64* %ob_refcnt1257, align 8, !dbg !4020, !tbaa !1991
  %cmp1259 = icmp eq i64 %dec1258, 0, !dbg !4020
  br i1 %cmp1259, label %if.else.1261, label %if.end.1264, !dbg !4022

if.else.1261:                                     ; preds = %do.body.1255
  %ob_type1262 = getelementptr inbounds %struct._object, %struct._object* %call1248, i64 0, i32 1, !dbg !4023
  %350 = load %struct._typeobject*, %struct._typeobject** %ob_type1262, align 8, !dbg !4023, !tbaa !2010
  %tp_dealloc1263 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %350, i64 0, i32 4, !dbg !4023
  %351 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1263, align 8, !dbg !4023, !tbaa !2032
  tail call void %351(%struct._object* %call1248) #2, !dbg !4023
  br label %if.end.1264

if.end.1264:                                      ; preds = %do.body.1255, %if.else.1261
  %352 = load %struct._object*, %struct._object** @PyExc_TimeoutError, align 8, !dbg !4025, !tbaa !2002
  %call1267 = tail call i32 @PyDict_SetItemString(%struct._object* %call613, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.73, i64 0, i64 0), %struct._object* %352) #2, !dbg !4025
  %tobool1268 = icmp eq i32 %call1267, 0, !dbg !4025
  br i1 %tobool1268, label %if.end.1270, label %if.then.1269, !dbg !4027

if.then.1269:                                     ; preds = %if.end.1264
  tail call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !4028
  unreachable, !dbg !4028

if.end.1270:                                      ; preds = %if.end.1264
  %call1272 = tail call %struct._object* @PyLong_FromLong(i64 110) #2, !dbg !4030
  tail call void @llvm.dbg.value(metadata %struct._object* %call1272, i64 0, metadata !765, metadata !1974), !dbg !4030
  %tobool1273 = icmp eq %struct._object* %call1272, null, !dbg !4031
  br i1 %tobool1273, label %if.then.1277, label %lor.lhs.false.1274, !dbg !4031

lor.lhs.false.1274:                               ; preds = %if.end.1270
  %353 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !4033, !tbaa !2002
  %354 = load %struct._object*, %struct._object** @PyExc_TimeoutError, align 8, !dbg !4033, !tbaa !2002
  %call1275 = tail call i32 @PyDict_SetItem(%struct._object* %353, %struct._object* %call1272, %struct._object* %354) #2, !dbg !4033
  %tobool1276 = icmp eq i32 %call1275, 0, !dbg !4033
  br i1 %tobool1276, label %do.body.1279, label %if.then.1277, !dbg !4030

if.then.1277:                                     ; preds = %lor.lhs.false.1274, %if.end.1270
  tail call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i64 0, i64 0)) #6, !dbg !4035
  unreachable, !dbg !4035

do.body.1279:                                     ; preds = %lor.lhs.false.1274
  tail call void @llvm.dbg.value(metadata %struct._object* %call1272, i64 0, metadata !767, metadata !1974), !dbg !4038
  %ob_refcnt1281 = getelementptr inbounds %struct._object, %struct._object* %call1272, i64 0, i32 0, !dbg !4040
  %355 = load i64, i64* %ob_refcnt1281, align 8, !dbg !4040, !tbaa !1991
  %dec1282 = add i64 %355, -1, !dbg !4040
  store i64 %dec1282, i64* %ob_refcnt1281, align 8, !dbg !4040, !tbaa !1991
  %cmp1283 = icmp eq i64 %dec1282, 0, !dbg !4040
  br i1 %cmp1283, label %if.else.1285, label %if.end.1288, !dbg !4042

if.else.1285:                                     ; preds = %do.body.1279
  %ob_type1286 = getelementptr inbounds %struct._object, %struct._object* %call1272, i64 0, i32 1, !dbg !4043
  %356 = load %struct._typeobject*, %struct._typeobject** %ob_type1286, align 8, !dbg !4043, !tbaa !2010
  %tp_dealloc1287 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %356, i64 0, i32 4, !dbg !4043
  %357 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1287, align 8, !dbg !4043, !tbaa !2032
  tail call void %357(%struct._object* %call1272) #2, !dbg !4043
  br label %if.end.1288

if.end.1288:                                      ; preds = %do.body.1279, %if.else.1285
  %358 = bitcast [16 x %struct._object*]* %errors.i to i8*, !dbg !4045
  call void @llvm.lifetime.start(i64 128, i8* %358) #2, !dbg !4045
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1765, metadata !1974) #2, !dbg !4046
  br label %for.body.i, !dbg !4047

for.cond.i:                                       ; preds = %for.body.i
  %cmp.i = icmp slt i64 %indvars.iv.next27.i, 16, !dbg !4049
  br i1 %cmp.i, label %for.body.i, label %do.body.i.preheader, !dbg !4047

do.body.i.preheader:                              ; preds = %for.cond.i
  br label %do.body.i, !dbg !4051

for.body.i:                                       ; preds = %for.cond.i, %if.end.1288
  %indvars.iv26.i = phi i64 [ 0, %if.end.1288 ], [ %indvars.iv.next27.i, %for.cond.i ], !dbg !4053
  %359 = load %struct._typeobject*, %struct._typeobject** bitcast (%struct._object** @PyExc_MemoryError to %struct._typeobject**), align 8, !dbg !4054, !tbaa !2002
  %call.i = tail call %struct._object* @MemoryError_new(%struct._typeobject* %359, %struct._object* null, %struct._object* null) #2, !dbg !4056
  %arrayidx.i = getelementptr [16 x %struct._object*], [16 x %struct._object*]* %errors.i, i64 0, i64 %indvars.iv26.i, !dbg !4057
  store %struct._object* %call.i, %struct._object** %arrayidx.i, align 8, !dbg !4058, !tbaa !2002
  %tobool.i = icmp eq %struct._object* %call.i, null, !dbg !4059
  %indvars.iv.next27.i = add nuw nsw i64 %indvars.iv26.i, 1, !dbg !4047
  br i1 %tobool.i, label %if.then.i, label %for.cond.i, !dbg !4061

if.then.i:                                        ; preds = %for.body.i
  tail call void @Py_FatalError(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.221, i64 0, i64 0)) #6, !dbg !4062
  unreachable, !dbg !4062

do.body.i:                                        ; preds = %do.body.i.preheader, %if.end.10.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %if.end.10.i ], [ 0, %do.body.i.preheader ], !dbg !4053
  %arrayidx7.i = getelementptr [16 x %struct._object*], [16 x %struct._object*]* %errors.i, i64 0, i64 %indvars.iv.i, !dbg !4051
  %360 = load %struct._object*, %struct._object** %arrayidx7.i, align 8, !dbg !4051, !tbaa !2002
  tail call void @llvm.dbg.value(metadata %struct._object* %360, i64 0, metadata !1770, metadata !1974) #2, !dbg !4051
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %360, i64 0, i32 0, !dbg !4063
  %361 = load i64, i64* %ob_refcnt.i, align 8, !dbg !4063, !tbaa !1991
  %dec.i = add i64 %361, -1, !dbg !4063
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !4063, !tbaa !1991
  %cmp8.i = icmp eq i64 %dec.i, 0, !dbg !4063
  br i1 %cmp8.i, label %if.else.i, label %if.end.10.i, !dbg !4065

if.else.i:                                        ; preds = %do.body.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %360, i64 0, i32 1, !dbg !4066
  %362 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !4066, !tbaa !2010
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %362, i64 0, i32 4, !dbg !4066
  %363 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !4066, !tbaa !2032
  tail call void %363(%struct._object* %360) #2, !dbg !4066
  br label %if.end.10.i, !dbg !4053

if.end.10.i:                                      ; preds = %if.else.i, %do.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !4068
  %exitcond.i = icmp eq i64 %indvars.iv.next.i, 16, !dbg !4068
  br i1 %exitcond.i, label %preallocate_memerrors.exit, label %do.body.i, !dbg !4068

preallocate_memerrors.exit:                       ; preds = %if.end.10.i
  call void @llvm.lifetime.end(i64 128, i8* %358) #2, !dbg !4069
  %364 = load %struct._object*, %struct._object** @PyExc_RecursionErrorInst, align 8, !dbg !4070, !tbaa !2002
  %tobool1291 = icmp eq %struct._object* %364, null, !dbg !4070
  br i1 %tobool1291, label %if.then.1292, label %if.end.1334, !dbg !4071

if.then.1292:                                     ; preds = %preallocate_memerrors.exit
  tail call void @llvm.dbg.value(metadata %struct._typeobject* @_PyExc_RuntimeError, i64 0, metadata !1777, metadata !1974) #2, !dbg !4072
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1778, metadata !1974) #2, !dbg !4074
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1779, metadata !1974) #2, !dbg !4075
  %365 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_RuntimeError, i64 0, i32 36), align 8, !dbg !4076, !tbaa !4077
  %call.i.1537 = tail call %struct._object* %365(%struct._typeobject* nonnull @_PyExc_RuntimeError, i64 0) #2, !dbg !4078
  %tobool.i.1538 = icmp eq %struct._object* %call.i.1537, null, !dbg !4079
  br i1 %tobool.i.1538, label %if.then.1295, label %if.end.i, !dbg !4081

if.end.i:                                         ; preds = %if.then.1292
  %dict.i = getelementptr inbounds %struct._object, %struct._object* %call.i.1537, i64 1, !dbg !4082
  %366 = bitcast %struct._object* %dict.i to %struct._object**, !dbg !4082
  store %struct._object* null, %struct._object** %366, align 8, !dbg !4083, !tbaa !4084
  %traceback.i = getelementptr inbounds %struct._object, %struct._object* %call.i.1537, i64 2, !dbg !4085
  %367 = bitcast %struct._object* %traceback.i to i8*, !dbg !4086
  tail call void @llvm.memset.p0i8.i64(i8* %367, i8 0, i64 25, i32 8, i1 false) #2, !dbg !4087
  %call5.i = tail call %struct._object* @PyTuple_New(i64 0) #2, !dbg !4088
  %args6.i = getelementptr inbounds %struct._object, %struct._object* %call.i.1537, i64 1, i32 1, !dbg !4089
  %368 = bitcast %struct._typeobject** %args6.i to %struct._object**, !dbg !4089
  store %struct._object* %call5.i, %struct._object** %368, align 8, !dbg !4090, !tbaa !4091
  %tobool8.i = icmp eq %struct._object* %call5.i, null, !dbg !4092
  br i1 %tobool8.i, label %do.body.i.1541, label %if.else.1296, !dbg !4093

do.body.i.1541:                                   ; preds = %if.end.i
  tail call void @llvm.dbg.value(metadata %struct._object* %call.i.1537, i64 0, metadata !1781, metadata !1974) #2, !dbg !4094
  %ob_refcnt10.i = getelementptr inbounds %struct._object, %struct._object* %call.i.1537, i64 0, i32 0, !dbg !4096
  %369 = load i64, i64* %ob_refcnt10.i, align 8, !dbg !4096, !tbaa !1991
  %dec.i.1539 = add i64 %369, -1, !dbg !4096
  store i64 %dec.i.1539, i64* %ob_refcnt10.i, align 8, !dbg !4096, !tbaa !1991
  %cmp.i.1540 = icmp eq i64 %dec.i.1539, 0, !dbg !4096
  br i1 %cmp.i.1540, label %if.else.i.1544, label %if.then.1295, !dbg !4098

if.else.i.1544:                                   ; preds = %do.body.i.1541
  %ob_type.i.1542 = getelementptr inbounds %struct._object, %struct._object* %call.i.1537, i64 0, i32 1, !dbg !4099
  %370 = load %struct._typeobject*, %struct._typeobject** %ob_type.i.1542, align 8, !dbg !4099, !tbaa !2010
  %tp_dealloc.i.1543 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %370, i64 0, i32 4, !dbg !4099
  %371 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i.1543, align 8, !dbg !4099, !tbaa !2032
  tail call void %371(%struct._object* %call.i.1537) #2, !dbg !4099
  br label %if.then.1295, !dbg !4101

if.then.1295:                                     ; preds = %if.then.1292, %do.body.i.1541, %if.else.i.1544
  store %struct._object* null, %struct._object** @PyExc_RecursionErrorInst, align 8, !dbg !4102, !tbaa !2002
  tail call void @Py_FatalError(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.74, i64 0, i64 0)) #6, !dbg !4103
  unreachable, !dbg !4103

if.else.1296:                                     ; preds = %if.end.i
  store %struct._object* %call.i.1537, %struct._object** @PyExc_RecursionErrorInst, align 8, !dbg !4102, !tbaa !2002
  %call1297 = tail call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.75, i64 0, i64 0)) #2, !dbg !4104
  tail call void @llvm.dbg.value(metadata %struct._object* %call1297, i64 0, metadata !775, metadata !1974), !dbg !4105
  %tobool1298 = icmp eq %struct._object* %call1297, null, !dbg !4106
  br i1 %tobool1298, label %if.then.1299, label %if.end.1300, !dbg !4108

if.then.1299:                                     ; preds = %if.else.1296
  tail call void @Py_FatalError(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.76, i64 0, i64 0)) #6, !dbg !4109
  unreachable, !dbg !4109

if.end.1300:                                      ; preds = %if.else.1296
  %call1301 = tail call %struct._object* (i64, ...) @PyTuple_Pack(i64 1, %struct._object* %call1297) #2, !dbg !4110
  tail call void @llvm.dbg.value(metadata %struct._object* %call1301, i64 0, metadata !774, metadata !1974), !dbg !4111
  %tobool1302 = icmp eq %struct._object* %call1301, null, !dbg !4112
  br i1 %tobool1302, label %if.then.1303, label %do.body.1305, !dbg !4114

if.then.1303:                                     ; preds = %if.end.1300
  tail call void @Py_FatalError(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.77, i64 0, i64 0)) #6, !dbg !4115
  unreachable, !dbg !4115

do.body.1305:                                     ; preds = %if.end.1300
  tail call void @llvm.dbg.value(metadata %struct._object* %call1297, i64 0, metadata !776, metadata !1974), !dbg !4116
  %ob_refcnt1307 = getelementptr inbounds %struct._object, %struct._object* %call1297, i64 0, i32 0, !dbg !4118
  %372 = load i64, i64* %ob_refcnt1307, align 8, !dbg !4118, !tbaa !1991
  %dec1308 = add i64 %372, -1, !dbg !4118
  store i64 %dec1308, i64* %ob_refcnt1307, align 8, !dbg !4118, !tbaa !1991
  %cmp1309 = icmp eq i64 %dec1308, 0, !dbg !4118
  br i1 %cmp1309, label %if.else.1311, label %if.end.1314, !dbg !4120

if.else.1311:                                     ; preds = %do.body.1305
  %ob_type1312 = getelementptr inbounds %struct._object, %struct._object* %call1297, i64 0, i32 1, !dbg !4121
  %373 = load %struct._typeobject*, %struct._typeobject** %ob_type1312, align 8, !dbg !4121, !tbaa !2010
  %tp_dealloc1313 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %373, i64 0, i32 4, !dbg !4121
  %374 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1313, align 8, !dbg !4121, !tbaa !2032
  tail call void %374(%struct._object* %call1297) #2, !dbg !4121
  br label %if.end.1314

if.end.1314:                                      ; preds = %do.body.1305, %if.else.1311
  tail call void @llvm.dbg.value(metadata %struct._object* %call1301, i64 0, metadata !1790, metadata !1974) #2, !dbg !4123
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1791, metadata !1974) #2, !dbg !4126
  %375 = getelementptr inbounds %struct._object, %struct._object* %call.i.1537, i64 0, i32 1, !dbg !4127
  %376 = load %struct._typeobject*, %struct._typeobject** %375, align 8, !dbg !4127, !tbaa !2010
  %tp_name.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %376, i64 0, i32 1, !dbg !4129
  %377 = load i8*, i8** %tp_name.i, align 8, !dbg !4129, !tbaa !4130
  %call.i.1546 = tail call i32 @_PyArg_NoKeywords(i8* %377, %struct._object* null) #2, !dbg !4131
  %tobool.i.1547 = icmp eq i32 %call.i.1546, 0, !dbg !4131
  br i1 %tobool.i.1547, label %if.then.1319, label %if.end.i.1550, !dbg !4132

if.end.i.1550:                                    ; preds = %if.end.1314
  %378 = load %struct._object*, %struct._object** %368, align 8, !dbg !4133, !tbaa !4091
  tail call void @llvm.dbg.value(metadata %struct._object* %378, i64 0, metadata !1792, metadata !1974) #2, !dbg !4134
  store %struct._object* %call1301, %struct._object** %368, align 8, !dbg !4135, !tbaa !4091
  %ob_refcnt.i.1548 = getelementptr inbounds %struct._object, %struct._object* %call1301, i64 0, i32 0, !dbg !4136
  %379 = load i64, i64* %ob_refcnt.i.1548, align 8, !dbg !4136, !tbaa !1991
  %inc.i = add i64 %379, 1, !dbg !4136
  store i64 %inc.i, i64* %ob_refcnt.i.1548, align 8, !dbg !4136, !tbaa !1991
  tail call void @llvm.dbg.value(metadata %struct._object* %378, i64 0, metadata !1793, metadata !1974) #2, !dbg !4137
  %cmp.i.1549 = icmp eq %struct._object* %378, null, !dbg !4139
  br i1 %cmp.i.1549, label %do.body.1321, label %do.body.6.i, !dbg !4140

do.body.6.i:                                      ; preds = %if.end.i.1550
  tail call void @llvm.dbg.value(metadata %struct._object* %378, i64 0, metadata !1795, metadata !1974) #2, !dbg !4141
  %ob_refcnt8.i = getelementptr inbounds %struct._object, %struct._object* %378, i64 0, i32 0, !dbg !4143
  %380 = load i64, i64* %ob_refcnt8.i, align 8, !dbg !4143, !tbaa !1991
  %dec.i.1551 = add i64 %380, -1, !dbg !4143
  store i64 %dec.i.1551, i64* %ob_refcnt8.i, align 8, !dbg !4143, !tbaa !1991
  %cmp9.i = icmp eq i64 %dec.i.1551, 0, !dbg !4143
  br i1 %cmp9.i, label %if.else.i.1553, label %do.body.1321, !dbg !4145

if.else.i.1553:                                   ; preds = %do.body.6.i
  %ob_type11.i = getelementptr inbounds %struct._object, %struct._object* %378, i64 0, i32 1, !dbg !4146
  %381 = load %struct._typeobject*, %struct._typeobject** %ob_type11.i, align 8, !dbg !4146, !tbaa !2010
  %tp_dealloc.i.1552 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %381, i64 0, i32 4, !dbg !4146
  %382 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i.1552, align 8, !dbg !4146, !tbaa !2032
  tail call void %382(%struct._object* %378) #2, !dbg !4146
  br label %do.body.1321, !dbg !4148

if.then.1319:                                     ; preds = %if.end.1314
  tail call void @Py_FatalError(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.78, i64 0, i64 0)) #6, !dbg !4149
  unreachable, !dbg !4149

do.body.1321:                                     ; preds = %if.else.i.1553, %do.body.6.i, %if.end.i.1550
  tail call void @llvm.dbg.value(metadata %struct._object* %call1301, i64 0, metadata !778, metadata !1974), !dbg !4150
  %383 = load i64, i64* %ob_refcnt.i.1548, align 8, !dbg !4152, !tbaa !1991
  %dec1324 = add i64 %383, -1, !dbg !4152
  store i64 %dec1324, i64* %ob_refcnt.i.1548, align 8, !dbg !4152, !tbaa !1991
  %cmp1325 = icmp eq i64 %dec1324, 0, !dbg !4152
  br i1 %cmp1325, label %if.else.1327, label %if.end.1334, !dbg !4154

if.else.1327:                                     ; preds = %do.body.1321
  %ob_type1328 = getelementptr inbounds %struct._object, %struct._object* %call1301, i64 0, i32 1, !dbg !4155
  %384 = load %struct._typeobject*, %struct._typeobject** %ob_type1328, align 8, !dbg !4155, !tbaa !2010
  %tp_dealloc1329 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %384, i64 0, i32 4, !dbg !4155
  %385 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1329, align 8, !dbg !4155, !tbaa !2032
  tail call void %385(%struct._object* %call1301) #2, !dbg !4155
  br label %if.end.1334

if.end.1334:                                      ; preds = %if.else.1327, %do.body.1321, %preallocate_memerrors.exit
  ret void, !dbg !4157
}

declare i32 @PyType_Ready(%struct._typeobject*) #3

; Function Attrs: noreturn
declare void @Py_FatalError(i8*) #4

declare %struct._object* @PyModule_GetDict(%struct._object*) #3

declare i32 @PyDict_SetItemString(%struct._object*, i8*, %struct._object*) #3

declare %struct._object* @PyDict_New() #3

declare %struct._object* @PyLong_FromLong(i64) #3

declare i32 @PyDict_SetItem(%struct._object*, %struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @BaseException_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* nocapture readnone %kwds) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._typeobject* %type, i64 0, metadata !1777, metadata !1974), !dbg !4158
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1778, metadata !1974), !dbg !4159
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !1779, metadata !1974), !dbg !4160
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %type, i64 0, i32 36, !dbg !4161
  %0 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !4161, !tbaa !4077
  %call = tail call %struct._object* %0(%struct._typeobject* %type, i64 0) #2, !dbg !4162
  %tobool = icmp eq %struct._object* %call, null, !dbg !4163
  br i1 %tobool, label %cleanup, label %if.end, !dbg !4164

if.end:                                           ; preds = %entry
  %dict = getelementptr inbounds %struct._object, %struct._object* %call, i64 1, !dbg !4165
  %1 = bitcast %struct._object* %dict to %struct._object**, !dbg !4165
  store %struct._object* null, %struct._object** %1, align 8, !dbg !4166, !tbaa !4084
  %traceback = getelementptr inbounds %struct._object, %struct._object* %call, i64 2, !dbg !4167
  %tobool1 = icmp eq %struct._object* %args, null, !dbg !4168
  %2 = bitcast %struct._object* %traceback to i8*, !dbg !4170
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 25, i32 8, i1 false), !dbg !4171
  br i1 %tobool1, label %if.end.4, label %if.then.2, !dbg !4170

if.then.2:                                        ; preds = %if.end
  %args3 = getelementptr inbounds %struct._object, %struct._object* %call, i64 1, i32 1, !dbg !4172
  %3 = bitcast %struct._typeobject** %args3 to %struct._object**, !dbg !4172
  store %struct._object* %args, %struct._object** %3, align 8, !dbg !4174, !tbaa !4091
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %args, i64 0, i32 0, !dbg !4175
  %4 = load i64, i64* %ob_refcnt, align 8, !dbg !4175, !tbaa !1991
  %inc = add i64 %4, 1, !dbg !4175
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !4175, !tbaa !1991
  br label %cleanup, !dbg !4176

if.end.4:                                         ; preds = %if.end
  %call5 = tail call %struct._object* @PyTuple_New(i64 0) #2, !dbg !4177
  %args6 = getelementptr inbounds %struct._object, %struct._object* %call, i64 1, i32 1, !dbg !4178
  %5 = bitcast %struct._typeobject** %args6 to %struct._object**, !dbg !4178
  store %struct._object* %call5, %struct._object** %5, align 8, !dbg !4179, !tbaa !4091
  %tobool8 = icmp eq %struct._object* %call5, null, !dbg !4180
  br i1 %tobool8, label %do.body, label %cleanup, !dbg !4181

do.body:                                          ; preds = %if.end.4
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1781, metadata !1974), !dbg !4182
  %ob_refcnt10 = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 0, !dbg !4183
  %6 = load i64, i64* %ob_refcnt10, align 8, !dbg !4183, !tbaa !1991
  %dec = add i64 %6, -1, !dbg !4183
  store i64 %dec, i64* %ob_refcnt10, align 8, !dbg !4183, !tbaa !1991
  %cmp = icmp eq i64 %dec, 0, !dbg !4183
  br i1 %cmp, label %if.else, label %cleanup, !dbg !4184

if.else:                                          ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 1, !dbg !4185
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4185, !tbaa !2010
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i64 0, i32 4, !dbg !4185
  %8 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4185, !tbaa !2032
  tail call void %8(%struct._object* %call) #2, !dbg !4185
  br label %cleanup

cleanup:                                          ; preds = %if.end.4, %if.else, %do.body, %entry, %if.then.2
  %retval.0 = phi %struct._object* [ %call, %if.then.2 ], [ null, %entry ], [ null, %do.body ], [ null, %if.else ], [ %call, %if.end.4 ]
  ret %struct._object* %retval.0, !dbg !4186
}

declare %struct._object* @PyUnicode_FromString(i8*) #3

declare %struct._object* @PyTuple_Pack(i64, ...) #3

; Function Attrs: nounwind uwtable
define internal i32 @BaseException_init(%struct.PyBaseExceptionObject* nocapture %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PyBaseExceptionObject* %self, i64 0, metadata !1789, metadata !1974), !dbg !4187
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1790, metadata !1974), !dbg !4188
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !1791, metadata !1974), !dbg !4189
  %ob_type = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %self, i64 0, i32 0, i32 1, !dbg !4190
  %0 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4190, !tbaa !2010
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %0, i64 0, i32 1, !dbg !4191
  %1 = load i8*, i8** %tp_name, align 8, !dbg !4191, !tbaa !4130
  %call = tail call i32 @_PyArg_NoKeywords(i8* %1, %struct._object* %kwds) #2, !dbg !4192
  %tobool = icmp eq i32 %call, 0, !dbg !4192
  br i1 %tobool, label %cleanup, label %if.end, !dbg !4193

if.end:                                           ; preds = %entry
  %args1 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %self, i64 0, i32 2, !dbg !4194
  %2 = load %struct._object*, %struct._object** %args1, align 8, !dbg !4194, !tbaa !4091
  tail call void @llvm.dbg.value(metadata %struct._object* %2, i64 0, metadata !1792, metadata !1974), !dbg !4195
  store %struct._object* %args, %struct._object** %args1, align 8, !dbg !4196, !tbaa !4091
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %args, i64 0, i32 0, !dbg !4197
  %3 = load i64, i64* %ob_refcnt, align 8, !dbg !4197, !tbaa !1991
  %inc = add i64 %3, 1, !dbg !4197
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !4197, !tbaa !1991
  tail call void @llvm.dbg.value(metadata %struct._object* %2, i64 0, metadata !1793, metadata !1974), !dbg !4198
  %cmp = icmp eq %struct._object* %2, null, !dbg !4199
  br i1 %cmp, label %cleanup, label %do.body.6, !dbg !4200

do.body.6:                                        ; preds = %if.end
  tail call void @llvm.dbg.value(metadata %struct._object* %2, i64 0, metadata !1795, metadata !1974), !dbg !4201
  %ob_refcnt8 = getelementptr inbounds %struct._object, %struct._object* %2, i64 0, i32 0, !dbg !4202
  %4 = load i64, i64* %ob_refcnt8, align 8, !dbg !4202, !tbaa !1991
  %dec = add i64 %4, -1, !dbg !4202
  store i64 %dec, i64* %ob_refcnt8, align 8, !dbg !4202, !tbaa !1991
  %cmp9 = icmp eq i64 %dec, 0, !dbg !4202
  br i1 %cmp9, label %if.else, label %cleanup, !dbg !4203

if.else:                                          ; preds = %do.body.6
  %ob_type11 = getelementptr inbounds %struct._object, %struct._object* %2, i64 0, i32 1, !dbg !4204
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type11, align 8, !dbg !4204, !tbaa !2010
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i64 0, i32 4, !dbg !4204
  %6 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4204, !tbaa !2032
  tail call void %6(%struct._object* %2) #2, !dbg !4204
  br label %cleanup

cleanup:                                          ; preds = %if.end, %do.body.6, %if.else, %entry
  %retval.0 = phi i32 [ -1, %entry ], [ 0, %if.else ], [ 0, %do.body.6 ], [ 0, %if.end ]
  ret i32 %retval.0, !dbg !4205
}

; Function Attrs: nounwind uwtable
define void @_PyExc_Fini() #0 {
entry:
  %0 = load %struct._object*, %struct._object** @PyExc_RecursionErrorInst, align 8, !dbg !4206, !tbaa !2002
  tail call void @llvm.dbg.value(metadata %struct._object* %0, i64 0, metadata !784, metadata !1974), !dbg !4206
  %cmp = icmp eq %struct._object* %0, null, !dbg !4208
  br i1 %cmp, label %if.end.4, label %if.then, !dbg !4209

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** @PyExc_RecursionErrorInst, align 8, !dbg !4210, !tbaa !2002
  tail call void @llvm.dbg.value(metadata %struct._object* %0, i64 0, metadata !786, metadata !1974), !dbg !4212
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %0, i64 0, i32 0, !dbg !4214
  %1 = load i64, i64* %ob_refcnt, align 8, !dbg !4214, !tbaa !1991
  %dec = add i64 %1, -1, !dbg !4214
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4214, !tbaa !1991
  %cmp2 = icmp eq i64 %dec, 0, !dbg !4214
  br i1 %cmp2, label %if.else, label %if.end.4, !dbg !4216

if.else:                                          ; preds = %if.then
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i64 0, i32 1, !dbg !4217
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4217, !tbaa !2010
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i64 0, i32 4, !dbg !4217
  %3 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4217, !tbaa !2032
  tail call void %3(%struct._object* %0) #2, !dbg !4217
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %if.then, %entry
  %4 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** @memerrors_freelist, align 8, !dbg !4219, !tbaa !2002
  %cmp.3.i = icmp eq %struct.PyBaseExceptionObject* %4, null, !dbg !4223
  br i1 %cmp.3.i, label %free_preallocated_memerrors.exit, label %while.body.i.preheader, !dbg !4224

while.body.i.preheader:                           ; preds = %if.end.4
  br label %while.body.i, !dbg !4225

while.body.i:                                     ; preds = %while.body.i.preheader, %while.body.i
  %5 = phi %struct.PyBaseExceptionObject* [ %11, %while.body.i ], [ %4, %while.body.i.preheader ], !dbg !4226
  %dict.i = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %5, i64 0, i32 1, !dbg !4225
  %6 = bitcast %struct._object** %dict.i to i64*, !dbg !4225
  %7 = load i64, i64* %6, align 8, !dbg !4225, !tbaa !4084
  store i64 %7, i64* bitcast (%struct.PyBaseExceptionObject** @memerrors_freelist to i64*), align 8, !dbg !4227, !tbaa !2002
  %ob_type.i = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %5, i64 0, i32 0, i32 1, !dbg !4228
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !4228, !tbaa !2010
  %tp_free.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i64 0, i32 38, !dbg !4229
  %9 = load void (i8*)*, void (i8*)** %tp_free.i, align 8, !dbg !4229, !tbaa !4230
  %10 = bitcast %struct.PyBaseExceptionObject* %5 to i8*, !dbg !4231
  tail call void %9(i8* %10) #2, !dbg !4228
  %11 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** @memerrors_freelist, align 8, !dbg !4219, !tbaa !2002
  %cmp.i = icmp eq %struct.PyBaseExceptionObject* %11, null, !dbg !4223
  br i1 %cmp.i, label %free_preallocated_memerrors.exit.loopexit, label %while.body.i, !dbg !4224

free_preallocated_memerrors.exit.loopexit:        ; preds = %while.body.i
  br label %free_preallocated_memerrors.exit, !dbg !4232

free_preallocated_memerrors.exit:                 ; preds = %free_preallocated_memerrors.exit.loopexit, %if.end.4
  %12 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !4232, !tbaa !2002
  tail call void @llvm.dbg.value(metadata %struct._object* %12, i64 0, metadata !790, metadata !1974), !dbg !4232
  %cmp9 = icmp eq %struct._object* %12, null, !dbg !4234
  br i1 %cmp9, label %if.end.23, label %if.then.10, !dbg !4235

if.then.10:                                       ; preds = %free_preallocated_memerrors.exit
  store %struct._object* null, %struct._object** @errnomap, align 8, !dbg !4236, !tbaa !2002
  tail call void @llvm.dbg.value(metadata %struct._object* %12, i64 0, metadata !792, metadata !1974), !dbg !4238
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %12, i64 0, i32 0, !dbg !4240
  %13 = load i64, i64* %ob_refcnt13, align 8, !dbg !4240, !tbaa !1991
  %dec14 = add i64 %13, -1, !dbg !4240
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !4240, !tbaa !1991
  %cmp15 = icmp eq i64 %dec14, 0, !dbg !4240
  br i1 %cmp15, label %if.else.17, label %if.end.23, !dbg !4242

if.else.17:                                       ; preds = %if.then.10
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %12, i64 0, i32 1, !dbg !4243
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !4243, !tbaa !2010
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i64 0, i32 4, !dbg !4243
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !4243, !tbaa !2032
  tail call void %15(%struct._object* %12) #2, !dbg !4243
  br label %if.end.23

if.end.23:                                        ; preds = %if.else.17, %if.then.10, %free_preallocated_memerrors.exit
  ret void, !dbg !4245
}

; Function Attrs: nounwind uwtable
define %struct._object* @_PyErr_TrySetFromCause(i8* %format, ...) #0 {
entry:
  %exc = alloca %struct._object*, align 8
  %val = alloca %struct._object*, align 8
  %tb = alloca %struct._object*, align 8
  %new_exc = alloca %struct._object*, align 8
  %new_val = alloca %struct._object*, align 8
  %new_tb = alloca %struct._object*, align 8
  %vargs = alloca [1 x %struct.__va_list_tag], align 16
  tail call void @llvm.dbg.value(metadata i8* %format, i64 0, metadata !800, metadata !1974), !dbg !4246
  %0 = bitcast %struct._object** %exc to i8*, !dbg !4247
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !4247
  %1 = bitcast %struct._object** %val to i8*, !dbg !4247
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !4247
  %2 = bitcast %struct._object** %tb to i8*, !dbg !4247
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !4247
  %3 = bitcast %struct._object** %new_exc to i8*, !dbg !4248
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !4248
  %4 = bitcast %struct._object** %new_val to i8*, !dbg !4248
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !4248
  %5 = bitcast %struct._object** %new_tb to i8*, !dbg !4248
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !4248
  %6 = bitcast [1 x %struct.__va_list_tag]* %vargs to i8*, !dbg !4249
  call void @llvm.lifetime.start(i64 24, i8* %6) #2, !dbg !4249
  tail call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %vargs, metadata !815, metadata !1974), !dbg !4250
  tail call void @llvm.dbg.value(metadata %struct._object** %exc, i64 0, metadata !802, metadata !1974), !dbg !4251
  tail call void @llvm.dbg.value(metadata %struct._object** %val, i64 0, metadata !803, metadata !1974), !dbg !4252
  tail call void @llvm.dbg.value(metadata %struct._object** %tb, i64 0, metadata !804, metadata !1974), !dbg !4253
  call void @PyErr_Fetch(%struct._object** nonnull %exc, %struct._object** nonnull %val, %struct._object** nonnull %tb) #2, !dbg !4254
  call void @llvm.dbg.value(metadata %struct._object** %exc, i64 0, metadata !802, metadata !1974), !dbg !4251
  %7 = bitcast %struct._object** %exc to %struct._typeobject**, !dbg !4255
  %8 = load %struct._typeobject*, %struct._typeobject** %7, align 8, !dbg !4255, !tbaa !2002
  call void @llvm.dbg.value(metadata %struct._typeobject* %8, i64 0, metadata !805, metadata !1974), !dbg !4256
  %tp_basicsize = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i64 0, i32 2, !dbg !4257
  %9 = load i64, i64* %tp_basicsize, align 8, !dbg !4257, !tbaa !4258
  call void @llvm.dbg.value(metadata i64 %9, i64 0, metadata !810, metadata !1974), !dbg !4259
  %10 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_BaseException, i64 0, i32 2), align 8, !dbg !4260, !tbaa !4258
  call void @llvm.dbg.value(metadata i64 %10, i64 0, metadata !811, metadata !1974), !dbg !4261
  %cmp = icmp eq i64 %9, %10, !dbg !4262
  %11 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i64 0, i32 0, i32 0, !dbg !4263
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !4266

lor.rhs:                                          ; preds = %entry
  %tp_weaklistoffset = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i64 0, i32 24, !dbg !4267
  %12 = load i64, i64* %tp_weaklistoffset, align 8, !dbg !4267, !tbaa !4268
  %cmp1 = icmp sgt i64 %12, 0, !dbg !4267
  br i1 %cmp1, label %land.rhs, label %lor.end, !dbg !4269

land.rhs:                                         ; preds = %lor.rhs
  %add = add i64 %10, 8, !dbg !4270
  %cmp2 = icmp eq i64 %9, %add, !dbg !4271
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.rhs, %entry
  %13 = phi i1 [ true, %entry ], [ false, %lor.rhs ], [ %cmp2, %land.rhs ]
  %tp_init = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i64 0, i32 35, !dbg !4272
  %14 = load i32 (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)** %tp_init, align 8, !dbg !4272, !tbaa !4273
  %cmp3 = icmp eq i32 (%struct._object*, %struct._object*, %struct._object*)* %14, bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), !dbg !4274
  br i1 %cmp3, label %lor.lhs.false, label %if.then, !dbg !4275

lor.lhs.false:                                    ; preds = %lor.end
  %tp_new = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i64 0, i32 37, !dbg !4276
  %15 = load %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)** %tp_new, align 8, !dbg !4276, !tbaa !4277
  %cmp4 = icmp eq %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* %15, @BaseException_new, !dbg !4278
  %or.cond = and i1 %13, %cmp4, !dbg !4279
  br i1 %or.cond, label %lor.lhs.false.6, label %if.then, !dbg !4279

lor.lhs.false.6:                                  ; preds = %lor.lhs.false
  %tp_itemsize = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i64 0, i32 3, !dbg !4280
  %16 = load i64, i64* %tp_itemsize, align 8, !dbg !4280, !tbaa !4281
  %17 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_BaseException, i64 0, i32 3), align 8, !dbg !4282, !tbaa !4281
  %cmp7 = icmp eq i64 %16, %17, !dbg !4283
  br i1 %cmp7, label %if.end, label %if.then, !dbg !4284

if.then:                                          ; preds = %lor.lhs.false.6, %lor.end, %lor.lhs.false
  call void @llvm.dbg.value(metadata %struct._object** %exc, i64 0, metadata !802, metadata !1974), !dbg !4251
  call void @llvm.dbg.value(metadata %struct._object** %val, i64 0, metadata !803, metadata !1974), !dbg !4252
  %18 = load %struct._object*, %struct._object** %val, align 8, !dbg !4285, !tbaa !2002
  call void @llvm.dbg.value(metadata %struct._object** %tb, i64 0, metadata !804, metadata !1974), !dbg !4253
  %19 = load %struct._object*, %struct._object** %tb, align 8, !dbg !4286, !tbaa !2002
  call void @PyErr_Restore(%struct._object* %11, %struct._object* %18, %struct._object* %19) #2, !dbg !4287
  br label %cleanup, !dbg !4288

if.end:                                           ; preds = %lor.lhs.false.6
  call void @llvm.dbg.value(metadata %struct._object** %exc, i64 0, metadata !802, metadata !1974), !dbg !4251
  call void @llvm.dbg.value(metadata %struct._object** %val, i64 0, metadata !803, metadata !1974), !dbg !4252
  call void @llvm.dbg.value(metadata %struct._object** %tb, i64 0, metadata !804, metadata !1974), !dbg !4253
  call void @PyErr_NormalizeException(%struct._object** nonnull %exc, %struct._object** nonnull %val, %struct._object** nonnull %tb) #2, !dbg !4289
  call void @llvm.dbg.value(metadata %struct._object** %val, i64 0, metadata !803, metadata !1974), !dbg !4252
  %20 = bitcast %struct._object** %val to %struct.PyBaseExceptionObject**, !dbg !4290
  %21 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %20, align 8, !dbg !4290, !tbaa !2002
  %args = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %21, i64 0, i32 2, !dbg !4291
  %22 = load %struct._object*, %struct._object** %args, align 8, !dbg !4291, !tbaa !4091
  call void @llvm.dbg.value(metadata %struct._object* %22, i64 0, metadata !808, metadata !1974), !dbg !4292
  %23 = getelementptr inbounds %struct._object, %struct._object* %22, i64 1, i32 0, !dbg !4293
  %24 = load i64, i64* %23, align 8, !dbg !4293, !tbaa !2297
  call void @llvm.dbg.value(metadata i64 %24, i64 0, metadata !809, metadata !1974), !dbg !4294
  %cmp8 = icmp sgt i64 %24, 1, !dbg !4295
  %25 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %21, i64 0, i32 0, !dbg !4297
  br i1 %cmp8, label %if.then.12, label %lor.lhs.false.9, !dbg !4298

lor.lhs.false.9:                                  ; preds = %if.end
  %cmp10 = icmp eq i64 %24, 1, !dbg !4299
  br i1 %cmp10, label %land.lhs.true, label %if.end.13, !dbg !4300

land.lhs.true:                                    ; preds = %lor.lhs.false.9
  %ob_item = getelementptr inbounds %struct._object, %struct._object* %22, i64 1, i32 1, !dbg !4301
  %arrayidx = bitcast %struct._typeobject** %ob_item to %struct._object**, !dbg !4301
  %26 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !4301, !tbaa !2002
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %26, i64 0, i32 1, !dbg !4301
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4301, !tbaa !2010
  %cmp11 = icmp eq %struct._typeobject* %27, @PyUnicode_Type, !dbg !4301
  br i1 %cmp11, label %if.end.13, label %if.then.12, !dbg !4302

if.then.12:                                       ; preds = %land.lhs.true, %if.end
  call void @llvm.dbg.value(metadata %struct._object** %exc, i64 0, metadata !802, metadata !1974), !dbg !4251
  %28 = load %struct._object*, %struct._object** %exc, align 8, !dbg !4303, !tbaa !2002
  call void @llvm.dbg.value(metadata %struct._object** %val, i64 0, metadata !803, metadata !1974), !dbg !4252
  call void @llvm.dbg.value(metadata %struct._object** %tb, i64 0, metadata !804, metadata !1974), !dbg !4253
  %29 = load %struct._object*, %struct._object** %tb, align 8, !dbg !4305, !tbaa !2002
  call void @PyErr_Restore(%struct._object* %28, %struct._object* %25, %struct._object* %29) #2, !dbg !4306
  br label %cleanup, !dbg !4307

if.end.13:                                        ; preds = %land.lhs.true, %lor.lhs.false.9
  call void @llvm.dbg.value(metadata %struct._object** %val, i64 0, metadata !803, metadata !1974), !dbg !4252
  %call = call %struct._object** @_PyObject_GetDictPtr(%struct._object* %25) #2, !dbg !4308
  call void @llvm.dbg.value(metadata %struct._object** %call, i64 0, metadata !806, metadata !1974), !dbg !4309
  %cmp14 = icmp eq %struct._object** %call, null, !dbg !4310
  br i1 %cmp14, label %if.end.21, label %land.lhs.true.15, !dbg !4312

land.lhs.true.15:                                 ; preds = %if.end.13
  %30 = load %struct._object*, %struct._object** %call, align 8, !dbg !4313, !tbaa !2002
  %cmp16 = icmp eq %struct._object* %30, null, !dbg !4314
  br i1 %cmp16, label %if.end.21, label %land.lhs.true.17, !dbg !4315

land.lhs.true.17:                                 ; preds = %land.lhs.true.15
  %call18 = call i64 @PyObject_Size(%struct._object* %30) #2, !dbg !4316
  %cmp19 = icmp sgt i64 %call18, 0, !dbg !4317
  br i1 %cmp19, label %if.then.20, label %if.end.21, !dbg !4318

if.then.20:                                       ; preds = %land.lhs.true.17
  call void @llvm.dbg.value(metadata %struct._object** %exc, i64 0, metadata !802, metadata !1974), !dbg !4251
  %31 = load %struct._object*, %struct._object** %exc, align 8, !dbg !4319, !tbaa !2002
  call void @llvm.dbg.value(metadata %struct._object** %val, i64 0, metadata !803, metadata !1974), !dbg !4252
  %32 = load %struct._object*, %struct._object** %val, align 8, !dbg !4321, !tbaa !2002
  call void @llvm.dbg.value(metadata %struct._object** %tb, i64 0, metadata !804, metadata !1974), !dbg !4253
  %33 = load %struct._object*, %struct._object** %tb, align 8, !dbg !4322, !tbaa !2002
  call void @PyErr_Restore(%struct._object* %31, %struct._object* %32, %struct._object* %33) #2, !dbg !4323
  br label %cleanup, !dbg !4324

if.end.21:                                        ; preds = %land.lhs.true.15, %if.end.13, %land.lhs.true.17
  call void @llvm.dbg.value(metadata %struct._object** %tb, i64 0, metadata !804, metadata !1974), !dbg !4253
  %34 = load %struct._object*, %struct._object** %tb, align 8, !dbg !4325, !tbaa !2002
  %cmp22 = icmp eq %struct._object* %34, null, !dbg !4326
  br i1 %cmp22, label %if.end.29, label %if.else.i.i, !dbg !4327

if.else.i.i:                                      ; preds = %if.end.21
  call void @llvm.dbg.value(metadata %struct._object** %val, i64 0, metadata !803, metadata !1974), !dbg !4252
  %35 = load %struct._object*, %struct._object** %val, align 8, !dbg !4328, !tbaa !2002
  call void @llvm.dbg.value(metadata %struct._object* %35, i64 0, metadata !497, metadata !1974) #2, !dbg !4329
  call void @llvm.dbg.value(metadata %struct._object* %34, i64 0, metadata !498, metadata !1974) #2, !dbg !4331
  call void @llvm.dbg.value(metadata %struct._object* %34, i64 0, metadata !848, metadata !1974) #2, !dbg !4332
  %cmp1.i.i = icmp eq %struct._object* %34, @_Py_NoneStruct, !dbg !4334
  br i1 %cmp1.i.i, label %if.end.7.i.i, label %lor.lhs.false.i.i, !dbg !4335

lor.lhs.false.i.i:                                ; preds = %if.else.i.i
  %ob_type.i.i = getelementptr inbounds %struct._object, %struct._object* %34, i64 0, i32 1, !dbg !4336
  %36 = load %struct._typeobject*, %struct._typeobject** %ob_type.i.i, align 8, !dbg !4336, !tbaa !2010
  %cmp2.i.i = icmp eq %struct._typeobject* %36, @PyTraceBack_Type, !dbg !4336
  br i1 %cmp2.i.i, label %if.end.7.i.i, label %if.then.3.i.i, !dbg !4337

if.then.3.i.i:                                    ; preds = %lor.lhs.false.i.i
  %37 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !4338, !tbaa !2002
  call void @PyErr_SetString(%struct._object* %37, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.81, i64 0, i64 0)) #2, !dbg !4339
  br label %PyException_SetTraceback.exit, !dbg !4340

if.end.7.i.i:                                     ; preds = %lor.lhs.false.i.i, %if.else.i.i
  call void @llvm.dbg.value(metadata %struct._object* %34, i64 0, metadata !849, metadata !1974) #2, !dbg !4341
  %ob_refcnt.i.i = getelementptr inbounds %struct._object, %struct._object* %34, i64 0, i32 0, !dbg !4342
  %38 = load i64, i64* %ob_refcnt.i.i, align 8, !dbg !4342, !tbaa !1991
  %inc.i.i = add i64 %38, 1, !dbg !4342
  store i64 %inc.i.i, i64* %ob_refcnt.i.i, align 8, !dbg !4342, !tbaa !1991
  %traceback.i.i = getelementptr inbounds %struct._object, %struct._object* %35, i64 2, !dbg !4343
  %39 = bitcast %struct._object* %traceback.i.i to %struct._object**, !dbg !4343
  %40 = load %struct._object*, %struct._object** %39, align 8, !dbg !4343, !tbaa !1979
  call void @llvm.dbg.value(metadata %struct._object* %40, i64 0, metadata !851, metadata !1974) #2, !dbg !4343
  %cmp9.i.i = icmp eq %struct._object* %40, null, !dbg !4344
  br i1 %cmp9.i.i, label %if.end.19.i.i, label %do.body.11.i.i, !dbg !4345

do.body.11.i.i:                                   ; preds = %if.end.7.i.i
  call void @llvm.dbg.value(metadata %struct._object* %40, i64 0, metadata !853, metadata !1974) #2, !dbg !4346
  %ob_refcnt12.i.i = getelementptr inbounds %struct._object, %struct._object* %40, i64 0, i32 0, !dbg !4347
  %41 = load i64, i64* %ob_refcnt12.i.i, align 8, !dbg !4347, !tbaa !1991
  %dec.i.i = add i64 %41, -1, !dbg !4347
  store i64 %dec.i.i, i64* %ob_refcnt12.i.i, align 8, !dbg !4347, !tbaa !1991
  %cmp13.i.i = icmp eq i64 %dec.i.i, 0, !dbg !4347
  br i1 %cmp13.i.i, label %if.else.15.i.i, label %if.end.19.i.i, !dbg !4348

if.else.15.i.i:                                   ; preds = %do.body.11.i.i
  %ob_type16.i.i = getelementptr inbounds %struct._object, %struct._object* %40, i64 0, i32 1, !dbg !4349
  %42 = load %struct._typeobject*, %struct._typeobject** %ob_type16.i.i, align 8, !dbg !4349, !tbaa !2010
  %tp_dealloc.i.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %42, i64 0, i32 4, !dbg !4349
  %43 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i.i, align 8, !dbg !4349, !tbaa !2032
  call void %43(%struct._object* %40) #2, !dbg !4349
  br label %if.end.19.i.i, !dbg !4350

if.end.19.i.i:                                    ; preds = %if.else.15.i.i, %do.body.11.i.i, %if.end.7.i.i
  store %struct._object* %34, %struct._object** %39, align 8, !dbg !4351, !tbaa !1979
  br label %PyException_SetTraceback.exit, !dbg !4352

PyException_SetTraceback.exit:                    ; preds = %if.then.3.i.i, %if.end.19.i.i
  call void @llvm.dbg.value(metadata %struct._object** %tb, i64 0, metadata !804, metadata !1974), !dbg !4253
  %44 = load %struct._object*, %struct._object** %tb, align 8, !dbg !4353, !tbaa !2002
  call void @llvm.dbg.value(metadata %struct._object* %44, i64 0, metadata !829, metadata !1974), !dbg !4353
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %44, i64 0, i32 0, !dbg !4355
  %45 = load i64, i64* %ob_refcnt, align 8, !dbg !4355, !tbaa !1991
  %dec = add i64 %45, -1, !dbg !4355
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4355, !tbaa !1991
  %cmp25 = icmp eq i64 %dec, 0, !dbg !4355
  br i1 %cmp25, label %if.else, label %if.end.29, !dbg !4357

if.else:                                          ; preds = %PyException_SetTraceback.exit
  %ob_type27 = getelementptr inbounds %struct._object, %struct._object* %44, i64 0, i32 1, !dbg !4358
  %46 = load %struct._typeobject*, %struct._typeobject** %ob_type27, align 8, !dbg !4358, !tbaa !2010
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %46, i64 0, i32 4, !dbg !4358
  %47 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4358, !tbaa !2032
  call void %47(%struct._object* %44) #2, !dbg !4358
  br label %if.end.29

if.end.29:                                        ; preds = %if.else, %PyException_SetTraceback.exit, %if.end.21
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %vargs, i64 0, i64 0, !dbg !4360
  call void @llvm.va_start(i8* %6), !dbg !4360
  %call32 = call %struct._object* @PyUnicode_FromFormatV(i8* %format, %struct.__va_list_tag* %arraydecay) #2, !dbg !4361
  call void @llvm.dbg.value(metadata %struct._object* %call32, i64 0, metadata !801, metadata !1974), !dbg !4362
  call void @llvm.va_end(i8* %6), !dbg !4363
  %cmp35 = icmp eq %struct._object* %call32, null, !dbg !4364
  call void @llvm.dbg.value(metadata %struct._object** %exc, i64 0, metadata !802, metadata !1974), !dbg !4251
  %48 = load %struct._object*, %struct._object** %exc, align 8, !dbg !4365, !tbaa !2002
  br i1 %cmp35, label %do.body.37, label %if.end.61, !dbg !4367

do.body.37:                                       ; preds = %if.end.29
  call void @llvm.dbg.value(metadata %struct._object* %48, i64 0, metadata !833, metadata !1974), !dbg !4365
  %ob_refcnt39 = getelementptr inbounds %struct._object, %struct._object* %48, i64 0, i32 0, !dbg !4368
  %49 = load i64, i64* %ob_refcnt39, align 8, !dbg !4368, !tbaa !1991
  %dec40 = add i64 %49, -1, !dbg !4368
  store i64 %dec40, i64* %ob_refcnt39, align 8, !dbg !4368, !tbaa !1991
  %cmp41 = icmp eq i64 %dec40, 0, !dbg !4368
  br i1 %cmp41, label %if.else.43, label %if.end.46, !dbg !4370

if.else.43:                                       ; preds = %do.body.37
  %ob_type44 = getelementptr inbounds %struct._object, %struct._object* %48, i64 0, i32 1, !dbg !4371
  %50 = load %struct._typeobject*, %struct._typeobject** %ob_type44, align 8, !dbg !4371, !tbaa !2010
  %tp_dealloc45 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %50, i64 0, i32 4, !dbg !4371
  %51 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc45, align 8, !dbg !4371, !tbaa !2032
  call void %51(%struct._object* %48) #2, !dbg !4371
  br label %if.end.46

if.end.46:                                        ; preds = %do.body.37, %if.else.43
  call void @llvm.dbg.value(metadata %struct._object** %val, i64 0, metadata !803, metadata !1974), !dbg !4252
  %52 = load %struct._object*, %struct._object** %val, align 8, !dbg !4373, !tbaa !2002
  call void @llvm.dbg.value(metadata %struct._object* %52, i64 0, metadata !837, metadata !1974), !dbg !4373
  %ob_refcnt51 = getelementptr inbounds %struct._object, %struct._object* %52, i64 0, i32 0, !dbg !4375
  %53 = load i64, i64* %ob_refcnt51, align 8, !dbg !4375, !tbaa !1991
  %dec52 = add i64 %53, -1, !dbg !4375
  store i64 %dec52, i64* %ob_refcnt51, align 8, !dbg !4375, !tbaa !1991
  %cmp53 = icmp eq i64 %dec52, 0, !dbg !4375
  br i1 %cmp53, label %if.else.55, label %cleanup, !dbg !4377

if.else.55:                                       ; preds = %if.end.46
  %ob_type56 = getelementptr inbounds %struct._object, %struct._object* %52, i64 0, i32 1, !dbg !4378
  %54 = load %struct._typeobject*, %struct._typeobject** %ob_type56, align 8, !dbg !4378, !tbaa !2010
  %tp_dealloc57 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %54, i64 0, i32 4, !dbg !4378
  %55 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc57, align 8, !dbg !4378, !tbaa !2032
  call void %55(%struct._object* %52) #2, !dbg !4378
  br label %cleanup

if.end.61:                                        ; preds = %if.end.29
  call void @llvm.dbg.value(metadata %struct._object** %val, i64 0, metadata !803, metadata !1974), !dbg !4252
  %56 = load %struct._object*, %struct._object** %val, align 8, !dbg !4380, !tbaa !2002
  %ob_type62 = getelementptr inbounds %struct._object, %struct._object* %56, i64 0, i32 1, !dbg !4380
  %57 = load %struct._typeobject*, %struct._typeobject** %ob_type62, align 8, !dbg !4380, !tbaa !2010
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %57, i64 0, i32 1, !dbg !4381
  %58 = load i8*, i8** %tp_name, align 8, !dbg !4381, !tbaa !4130
  %call63 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %48, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.79, i64 0, i64 0), %struct._object* %call32, i8* %58, %struct._object* %56) #2, !dbg !4382
  call void @llvm.dbg.value(metadata %struct._object** %exc, i64 0, metadata !802, metadata !1974), !dbg !4251
  %59 = load %struct._object*, %struct._object** %exc, align 8, !dbg !4383, !tbaa !2002
  call void @llvm.dbg.value(metadata %struct._object* %59, i64 0, metadata !839, metadata !1974), !dbg !4383
  %ob_refcnt66 = getelementptr inbounds %struct._object, %struct._object* %59, i64 0, i32 0, !dbg !4385
  %60 = load i64, i64* %ob_refcnt66, align 8, !dbg !4385, !tbaa !1991
  %dec67 = add i64 %60, -1, !dbg !4385
  store i64 %dec67, i64* %ob_refcnt66, align 8, !dbg !4385, !tbaa !1991
  %cmp68 = icmp eq i64 %dec67, 0, !dbg !4385
  br i1 %cmp68, label %if.else.70, label %if.end.73, !dbg !4387

if.else.70:                                       ; preds = %if.end.61
  %ob_type71 = getelementptr inbounds %struct._object, %struct._object* %59, i64 0, i32 1, !dbg !4388
  %61 = load %struct._typeobject*, %struct._typeobject** %ob_type71, align 8, !dbg !4388, !tbaa !2010
  %tp_dealloc72 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %61, i64 0, i32 4, !dbg !4388
  %62 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc72, align 8, !dbg !4388, !tbaa !2032
  call void %62(%struct._object* %59) #2, !dbg !4388
  br label %if.end.73

if.end.73:                                        ; preds = %if.end.61, %if.else.70
  call void @llvm.dbg.value(metadata %struct._object* %call32, i64 0, metadata !841, metadata !1974), !dbg !4390
  %ob_refcnt78 = getelementptr inbounds %struct._object, %struct._object* %call32, i64 0, i32 0, !dbg !4392
  %63 = load i64, i64* %ob_refcnt78, align 8, !dbg !4392, !tbaa !1991
  %dec79 = add i64 %63, -1, !dbg !4392
  store i64 %dec79, i64* %ob_refcnt78, align 8, !dbg !4392, !tbaa !1991
  %cmp80 = icmp eq i64 %dec79, 0, !dbg !4392
  br i1 %cmp80, label %if.else.82, label %if.end.85, !dbg !4394

if.else.82:                                       ; preds = %if.end.73
  %ob_type83 = getelementptr inbounds %struct._object, %struct._object* %call32, i64 0, i32 1, !dbg !4395
  %64 = load %struct._typeobject*, %struct._typeobject** %ob_type83, align 8, !dbg !4395, !tbaa !2010
  %tp_dealloc84 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %64, i64 0, i32 4, !dbg !4395
  %65 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc84, align 8, !dbg !4395, !tbaa !2032
  call void %65(%struct._object* %call32) #2, !dbg !4395
  br label %if.end.85

if.end.85:                                        ; preds = %if.end.73, %if.else.82
  call void @llvm.dbg.value(metadata %struct._object** %new_exc, i64 0, metadata !812, metadata !1974), !dbg !4397
  call void @llvm.dbg.value(metadata %struct._object** %new_val, i64 0, metadata !813, metadata !1974), !dbg !4398
  call void @llvm.dbg.value(metadata %struct._object** %new_tb, i64 0, metadata !814, metadata !1974), !dbg !4399
  call void @PyErr_Fetch(%struct._object** nonnull %new_exc, %struct._object** nonnull %new_val, %struct._object** nonnull %new_tb) #2, !dbg !4400
  call void @llvm.dbg.value(metadata %struct._object** %new_exc, i64 0, metadata !812, metadata !1974), !dbg !4397
  call void @llvm.dbg.value(metadata %struct._object** %new_val, i64 0, metadata !813, metadata !1974), !dbg !4398
  call void @llvm.dbg.value(metadata %struct._object** %new_tb, i64 0, metadata !814, metadata !1974), !dbg !4399
  call void @PyErr_NormalizeException(%struct._object** nonnull %new_exc, %struct._object** nonnull %new_val, %struct._object** nonnull %new_tb) #2, !dbg !4401
  call void @llvm.dbg.value(metadata %struct._object** %new_val, i64 0, metadata !813, metadata !1974), !dbg !4398
  %66 = load %struct._object*, %struct._object** %new_val, align 8, !dbg !4402, !tbaa !2002
  call void @llvm.dbg.value(metadata %struct._object** %val, i64 0, metadata !803, metadata !1974), !dbg !4252
  %67 = bitcast %struct._object** %val to i64*, !dbg !4403
  %68 = load i64, i64* %67, align 8, !dbg !4403, !tbaa !2002
  call void @llvm.dbg.value(metadata %struct._object* %66, i64 0, metadata !509, metadata !1974) #2, !dbg !4404
  %cause1.i = getelementptr inbounds %struct._object, %struct._object* %66, i64 3, !dbg !4406
  %69 = bitcast %struct._object* %cause1.i to %struct._object**, !dbg !4406
  %70 = load %struct._object*, %struct._object** %69, align 8, !dbg !4406, !tbaa !2068
  call void @llvm.dbg.value(metadata %struct._object* %70, i64 0, metadata !511, metadata !1974) #2, !dbg !4407
  %71 = getelementptr inbounds %struct._object, %struct._object* %cause1.i, i64 0, i32 0, !dbg !4408
  store i64 %68, i64* %71, align 8, !dbg !4408, !tbaa !2068
  %suppress_context.i = getelementptr inbounds %struct._object, %struct._object* %66, i64 3, i32 1, !dbg !4409
  %72 = bitcast %struct._typeobject** %suppress_context.i to i8*, !dbg !4409
  store i8 1, i8* %72, align 1, !dbg !4410, !tbaa !2085
  call void @llvm.dbg.value(metadata %struct._object* %70, i64 0, metadata !512, metadata !1974) #2, !dbg !4411
  %cmp.i = icmp eq %struct._object* %70, null, !dbg !4412
  br i1 %cmp.i, label %PyException_SetCause.exit, label %do.body.3.i, !dbg !4413

do.body.3.i:                                      ; preds = %if.end.85
  call void @llvm.dbg.value(metadata %struct._object* %70, i64 0, metadata !514, metadata !1974) #2, !dbg !4414
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %70, i64 0, i32 0, !dbg !4415
  %73 = load i64, i64* %ob_refcnt.i, align 8, !dbg !4415, !tbaa !1991
  %dec.i = add i64 %73, -1, !dbg !4415
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !4415, !tbaa !1991
  %cmp4.i = icmp eq i64 %dec.i, 0, !dbg !4415
  br i1 %cmp4.i, label %if.else.i, label %PyException_SetCause.exit, !dbg !4416

if.else.i:                                        ; preds = %do.body.3.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %70, i64 0, i32 1, !dbg !4417
  %74 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !4417, !tbaa !2010
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %74, i64 0, i32 4, !dbg !4417
  %75 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !4417, !tbaa !2032
  call void %75(%struct._object* %70) #2, !dbg !4417
  br label %PyException_SetCause.exit, !dbg !4418

PyException_SetCause.exit:                        ; preds = %if.end.85, %do.body.3.i, %if.else.i
  call void @llvm.dbg.value(metadata %struct._object** %new_exc, i64 0, metadata !812, metadata !1974), !dbg !4397
  %76 = load %struct._object*, %struct._object** %new_exc, align 8, !dbg !4419, !tbaa !2002
  call void @llvm.dbg.value(metadata %struct._object** %new_val, i64 0, metadata !813, metadata !1974), !dbg !4398
  %77 = load %struct._object*, %struct._object** %new_val, align 8, !dbg !4420, !tbaa !2002
  call void @llvm.dbg.value(metadata %struct._object** %new_tb, i64 0, metadata !814, metadata !1974), !dbg !4399
  %78 = load %struct._object*, %struct._object** %new_tb, align 8, !dbg !4421, !tbaa !2002
  call void @PyErr_Restore(%struct._object* %76, %struct._object* %77, %struct._object* %78) #2, !dbg !4422
  call void @llvm.dbg.value(metadata %struct._object** %new_val, i64 0, metadata !813, metadata !1974), !dbg !4398
  %79 = load %struct._object*, %struct._object** %new_val, align 8, !dbg !4423, !tbaa !2002
  br label %cleanup, !dbg !4424

cleanup:                                          ; preds = %if.else.55, %if.end.46, %PyException_SetCause.exit, %if.then.20, %if.then.12, %if.then
  %retval.0 = phi %struct._object* [ null, %if.then ], [ null, %if.then.12 ], [ null, %if.then.20 ], [ %79, %PyException_SetCause.exit ], [ null, %if.end.46 ], [ null, %if.else.55 ]
  call void @llvm.lifetime.end(i64 24, i8* %6) #2, !dbg !4425
  call void @llvm.lifetime.end(i64 8, i8* %5) #2, !dbg !4425
  call void @llvm.lifetime.end(i64 8, i8* %4) #2, !dbg !4425
  call void @llvm.lifetime.end(i64 8, i8* %3) #2, !dbg !4425
  call void @llvm.lifetime.end(i64 8, i8* %2) #2, !dbg !4425
  call void @llvm.lifetime.end(i64 8, i8* %1) #2, !dbg !4425
  call void @llvm.lifetime.end(i64 8, i8* %0) #2, !dbg !4425
  ret %struct._object* %retval.0, !dbg !4425
}

declare void @PyErr_Fetch(%struct._object**, %struct._object**, %struct._object**) #3

declare void @PyErr_Restore(%struct._object*, %struct._object*, %struct._object*) #3

declare void @PyErr_NormalizeException(%struct._object**, %struct._object**, %struct._object**) #3

declare %struct._object** @_PyObject_GetDictPtr(%struct._object*) #3

declare i64 @PyObject_Size(%struct._object*) #3

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #2

declare %struct._object* @PyUnicode_FromFormatV(i8*, %struct.__va_list_tag*) #3

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #2

declare %struct._object* @PyErr_Format(%struct._object*, i8*, ...) #3

declare void @PyErr_SetString(%struct._object*, i8*) #3

; Function Attrs: nounwind uwtable
define internal void @BaseException_dealloc(%struct.PyBaseExceptionObject* %self) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PyBaseExceptionObject* %self, i64 0, metadata !860, metadata !1974), !dbg !4426
  %add.ptr = getelementptr %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %self, i64 -1, i32 4, !dbg !4427
  %gc_refs = getelementptr inbounds %struct._object*, %struct._object** %add.ptr, i64 2, !dbg !4429
  %0 = bitcast %struct._object** %gc_refs to i64*, !dbg !4429
  %1 = load i64, i64* %0, align 8, !dbg !4429, !tbaa !4432
  %and = and i64 %1, 1, !dbg !4429
  %or = or i64 %and, -4, !dbg !4429
  store i64 %or, i64* %0, align 8, !dbg !4429, !tbaa !4432
  %gc_next = bitcast %struct._object** %add.ptr to %union._gc_head**, !dbg !4434
  %2 = bitcast %struct._object** %add.ptr to i64*, !dbg !4434
  %3 = load i64, i64* %2, align 8, !dbg !4434, !tbaa !4436
  %gc_prev = getelementptr inbounds %struct._object*, %struct._object** %add.ptr, i64 1, !dbg !4434
  %4 = bitcast %struct._object** %gc_prev to i64**, !dbg !4434
  %5 = load i64*, i64** %4, align 8, !dbg !4434, !tbaa !4437
  store i64 %3, i64* %5, align 8, !dbg !4434, !tbaa !4436
  %6 = ptrtoint i64* %5 to i64, !dbg !4434
  %7 = bitcast %struct._object** %add.ptr to %struct.anon.0**, !dbg !4434
  %8 = load %struct.anon.0*, %struct.anon.0** %7, align 8, !dbg !4434, !tbaa !4436
  %gc_prev13 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %8, i64 0, i32 1, !dbg !4434
  %9 = bitcast %union._gc_head** %gc_prev13 to i64*, !dbg !4434
  store i64 %6, i64* %9, align 8, !dbg !4434, !tbaa !4437
  store %union._gc_head* null, %union._gc_head** %gc_next, align 8, !dbg !4434, !tbaa !4436
  %call = tail call i32 @BaseException_clear(%struct.PyBaseExceptionObject* %self), !dbg !4438
  %ob_type = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %self, i64 0, i32 0, i32 1, !dbg !4439
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4439, !tbaa !2010
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i64 0, i32 38, !dbg !4440
  %11 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !4440, !tbaa !4230
  %12 = bitcast %struct.PyBaseExceptionObject* %self to i8*, !dbg !4441
  tail call void %11(i8* %12) #2, !dbg !4439
  ret void, !dbg !4442
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @BaseException_repr(%struct.PyBaseExceptionObject* nocapture readonly %self) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PyBaseExceptionObject* %self, i64 0, metadata !867, metadata !1974), !dbg !4443
  %ob_type = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %self, i64 0, i32 0, i32 1, !dbg !4444
  %0 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4444, !tbaa !2010
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %0, i64 0, i32 1, !dbg !4445
  %1 = load i8*, i8** %tp_name, align 8, !dbg !4445, !tbaa !4130
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !868, metadata !1974), !dbg !4446
  %call = tail call i8* @strrchr(i8* %1, i32 46) #7, !dbg !4447
  tail call void @llvm.dbg.value(metadata i8* %call, i64 0, metadata !869, metadata !1974), !dbg !4448
  %cmp = icmp eq i8* %call, null, !dbg !4449
  %add.ptr = getelementptr i8, i8* %call, i64 1, !dbg !4451
  tail call void @llvm.dbg.value(metadata i8* %add.ptr, i64 0, metadata !868, metadata !1974), !dbg !4446
  %.add.ptr = select i1 %cmp, i8* %1, i8* %add.ptr, !dbg !4452
  %args = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %self, i64 0, i32 2, !dbg !4453
  %2 = load %struct._object*, %struct._object** %args, align 8, !dbg !4453, !tbaa !4091
  %call1 = tail call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i64 0, i64 0), i8* %.add.ptr, %struct._object* %2) #2, !dbg !4454
  ret %struct._object* %call1, !dbg !4455
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @BaseException_str(%struct.PyBaseExceptionObject* nocapture readonly %self) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PyBaseExceptionObject* %self, i64 0, metadata !872, metadata !1974), !dbg !4456
  %args = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %self, i64 0, i32 2, !dbg !4457
  %0 = load %struct._object*, %struct._object** %args, align 8, !dbg !4457, !tbaa !4091
  %1 = getelementptr inbounds %struct._object, %struct._object* %0, i64 1, i32 0, !dbg !4457
  %2 = load i64, i64* %1, align 8, !dbg !4457, !tbaa !2297
  switch i64 %2, label %sw.default [
    i64 0, label %sw.bb
    i64 1, label %sw.bb.1
  ], !dbg !4458

sw.bb:                                            ; preds = %entry
  %call = tail call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.84, i64 0, i64 0)) #2, !dbg !4459
  br label %return, !dbg !4461

sw.bb.1:                                          ; preds = %entry
  %ob_item = getelementptr inbounds %struct._object, %struct._object* %0, i64 1, i32 1, !dbg !4462
  %arrayidx = bitcast %struct._typeobject** %ob_item to %struct._object**, !dbg !4462
  %3 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !4462, !tbaa !2002
  %call3 = tail call %struct._object* @PyObject_Str(%struct._object* %3) #2, !dbg !4463
  br label %return, !dbg !4464

sw.default:                                       ; preds = %entry
  %call5 = tail call %struct._object* @PyObject_Str(%struct._object* %0) #2, !dbg !4465
  br label %return, !dbg !4466

return:                                           ; preds = %sw.default, %sw.bb.1, %sw.bb
  %retval.0 = phi %struct._object* [ %call5, %sw.default ], [ %call3, %sw.bb.1 ], [ %call, %sw.bb ]
  ret %struct._object* %retval.0, !dbg !4467
}

declare %struct._object* @PyObject_GenericGetAttr(%struct._object*, %struct._object*) #3

declare i32 @PyObject_GenericSetAttr(%struct._object*, %struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal i32 @BaseException_traverse(%struct.PyBaseExceptionObject* nocapture readonly %self, i32 (%struct._object*, i8*)* nocapture %visit, i8* %arg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PyBaseExceptionObject* %self, i64 0, metadata !877, metadata !1974), !dbg !4468
  tail call void @llvm.dbg.value(metadata i32 (%struct._object*, i8*)* %visit, i64 0, metadata !878, metadata !1974), !dbg !4469
  tail call void @llvm.dbg.value(metadata i8* %arg, i64 0, metadata !879, metadata !1974), !dbg !4470
  %dict = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %self, i64 0, i32 1, !dbg !4471
  %0 = load %struct._object*, %struct._object** %dict, align 8, !dbg !4471, !tbaa !4084
  %tobool = icmp eq %struct._object* %0, null, !dbg !4471
  br i1 %tobool, label %do.body.5, label %if.then, !dbg !4473

if.then:                                          ; preds = %entry
  %call = tail call i32 %visit(%struct._object* %0, i8* %arg) #2, !dbg !4474
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !880, metadata !1974), !dbg !4474
  %tobool2 = icmp eq i32 %call, 0, !dbg !4476
  br i1 %tobool2, label %do.body.5, label %return

do.body.5:                                        ; preds = %entry, %if.then
  %args = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %self, i64 0, i32 2, !dbg !4478
  %1 = load %struct._object*, %struct._object** %args, align 8, !dbg !4478, !tbaa !4091
  %tobool6 = icmp eq %struct._object* %1, null, !dbg !4478
  br i1 %tobool6, label %do.body.19, label %if.then.7, !dbg !4480

if.then.7:                                        ; preds = %do.body.5
  %call10 = tail call i32 %visit(%struct._object* %1, i8* %arg) #2, !dbg !4481
  tail call void @llvm.dbg.value(metadata i32 %call10, i64 0, metadata !884, metadata !1974), !dbg !4481
  %tobool11 = icmp eq i32 %call10, 0, !dbg !4483
  br i1 %tobool11, label %do.body.19, label %return

do.body.19:                                       ; preds = %do.body.5, %if.then.7
  %traceback = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %self, i64 0, i32 3, !dbg !4485
  %2 = load %struct._object*, %struct._object** %traceback, align 8, !dbg !4485, !tbaa !1979
  %tobool20 = icmp eq %struct._object* %2, null, !dbg !4485
  br i1 %tobool20, label %do.body.33, label %if.then.21, !dbg !4487

if.then.21:                                       ; preds = %do.body.19
  %call24 = tail call i32 %visit(%struct._object* %2, i8* %arg) #2, !dbg !4488
  tail call void @llvm.dbg.value(metadata i32 %call24, i64 0, metadata !888, metadata !1974), !dbg !4488
  %tobool25 = icmp eq i32 %call24, 0, !dbg !4490
  br i1 %tobool25, label %do.body.33, label %return

do.body.33:                                       ; preds = %do.body.19, %if.then.21
  %cause = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %self, i64 0, i32 5, !dbg !4492
  %3 = load %struct._object*, %struct._object** %cause, align 8, !dbg !4492, !tbaa !2068
  %tobool34 = icmp eq %struct._object* %3, null, !dbg !4492
  br i1 %tobool34, label %do.body.47, label %if.then.35, !dbg !4494

if.then.35:                                       ; preds = %do.body.33
  %call38 = tail call i32 %visit(%struct._object* %3, i8* %arg) #2, !dbg !4495
  tail call void @llvm.dbg.value(metadata i32 %call38, i64 0, metadata !892, metadata !1974), !dbg !4495
  %tobool39 = icmp eq i32 %call38, 0, !dbg !4497
  br i1 %tobool39, label %do.body.47, label %return

do.body.47:                                       ; preds = %do.body.33, %if.then.35
  %context = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %self, i64 0, i32 4, !dbg !4499
  %4 = load %struct._object*, %struct._object** %context, align 8, !dbg !4499, !tbaa !2100
  %tobool48 = icmp eq %struct._object* %4, null, !dbg !4499
  br i1 %tobool48, label %do.end.60, label %if.then.49, !dbg !4501

if.then.49:                                       ; preds = %do.body.47
  %call52 = tail call i32 %visit(%struct._object* %4, i8* %arg) #2, !dbg !4502
  tail call void @llvm.dbg.value(metadata i32 %call52, i64 0, metadata !896, metadata !1974), !dbg !4502
  %tobool53 = icmp eq i32 %call52, 0, !dbg !4504
  br i1 %tobool53, label %do.end.60, label %return

do.end.60:                                        ; preds = %do.body.47, %if.then.49
  br label %return, !dbg !4506

return:                                           ; preds = %if.then.49, %if.then.35, %if.then.21, %if.then.7, %if.then, %do.end.60
  %retval.9 = phi i32 [ 0, %do.end.60 ], [ %call52, %if.then.49 ], [ %call38, %if.then.35 ], [ %call24, %if.then.21 ], [ %call10, %if.then.7 ], [ %call, %if.then ]
  ret i32 %retval.9, !dbg !4507
}

; Function Attrs: nounwind uwtable
define internal i32 @BaseException_clear(%struct.PyBaseExceptionObject* nocapture %self) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PyBaseExceptionObject* %self, i64 0, metadata !904, metadata !1974), !dbg !4508
  %dict = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %self, i64 0, i32 1, !dbg !4509
  %0 = load %struct._object*, %struct._object** %dict, align 8, !dbg !4509, !tbaa !4084
  tail call void @llvm.dbg.value(metadata %struct._object* %0, i64 0, metadata !905, metadata !1974), !dbg !4509
  %cmp = icmp eq %struct._object* %0, null, !dbg !4511
  br i1 %cmp, label %if.end.5, label %if.then, !dbg !4512

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %dict, align 8, !dbg !4513, !tbaa !4084
  tail call void @llvm.dbg.value(metadata %struct._object* %0, i64 0, metadata !907, metadata !1974), !dbg !4515
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %0, i64 0, i32 0, !dbg !4517
  %1 = load i64, i64* %ob_refcnt, align 8, !dbg !4517, !tbaa !1991
  %dec = add i64 %1, -1, !dbg !4517
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4517, !tbaa !1991
  %cmp3 = icmp eq i64 %dec, 0, !dbg !4517
  br i1 %cmp3, label %if.else, label %if.end.5, !dbg !4519

if.else:                                          ; preds = %if.then
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i64 0, i32 1, !dbg !4520
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4520, !tbaa !2010
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i64 0, i32 4, !dbg !4520
  %3 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4520, !tbaa !2032
  tail call void %3(%struct._object* %0) #2, !dbg !4520
  br label %if.end.5

if.end.5:                                         ; preds = %if.else, %if.then, %entry
  %args = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %self, i64 0, i32 2, !dbg !4522
  %4 = load %struct._object*, %struct._object** %args, align 8, !dbg !4522, !tbaa !4091
  tail call void @llvm.dbg.value(metadata %struct._object* %4, i64 0, metadata !911, metadata !1974), !dbg !4522
  %cmp10 = icmp eq %struct._object* %4, null, !dbg !4524
  br i1 %cmp10, label %if.end.25, label %if.then.11, !dbg !4525

if.then.11:                                       ; preds = %if.end.5
  store %struct._object* null, %struct._object** %args, align 8, !dbg !4526, !tbaa !4091
  tail call void @llvm.dbg.value(metadata %struct._object* %4, i64 0, metadata !913, metadata !1974), !dbg !4528
  %ob_refcnt15 = getelementptr inbounds %struct._object, %struct._object* %4, i64 0, i32 0, !dbg !4530
  %5 = load i64, i64* %ob_refcnt15, align 8, !dbg !4530, !tbaa !1991
  %dec16 = add i64 %5, -1, !dbg !4530
  store i64 %dec16, i64* %ob_refcnt15, align 8, !dbg !4530, !tbaa !1991
  %cmp17 = icmp eq i64 %dec16, 0, !dbg !4530
  br i1 %cmp17, label %if.else.19, label %if.end.25, !dbg !4532

if.else.19:                                       ; preds = %if.then.11
  %ob_type20 = getelementptr inbounds %struct._object, %struct._object* %4, i64 0, i32 1, !dbg !4533
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type20, align 8, !dbg !4533, !tbaa !2010
  %tp_dealloc21 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i64 0, i32 4, !dbg !4533
  %7 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc21, align 8, !dbg !4533, !tbaa !2032
  tail call void %7(%struct._object* %4) #2, !dbg !4533
  br label %if.end.25

if.end.25:                                        ; preds = %if.else.19, %if.then.11, %if.end.5
  %traceback = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %self, i64 0, i32 3, !dbg !4535
  %8 = load %struct._object*, %struct._object** %traceback, align 8, !dbg !4535, !tbaa !1979
  tail call void @llvm.dbg.value(metadata %struct._object* %8, i64 0, metadata !917, metadata !1974), !dbg !4535
  %cmp30 = icmp eq %struct._object* %8, null, !dbg !4537
  br i1 %cmp30, label %if.end.45, label %if.then.31, !dbg !4538

if.then.31:                                       ; preds = %if.end.25
  store %struct._object* null, %struct._object** %traceback, align 8, !dbg !4539, !tbaa !1979
  tail call void @llvm.dbg.value(metadata %struct._object* %8, i64 0, metadata !919, metadata !1974), !dbg !4541
  %ob_refcnt35 = getelementptr inbounds %struct._object, %struct._object* %8, i64 0, i32 0, !dbg !4543
  %9 = load i64, i64* %ob_refcnt35, align 8, !dbg !4543, !tbaa !1991
  %dec36 = add i64 %9, -1, !dbg !4543
  store i64 %dec36, i64* %ob_refcnt35, align 8, !dbg !4543, !tbaa !1991
  %cmp37 = icmp eq i64 %dec36, 0, !dbg !4543
  br i1 %cmp37, label %if.else.39, label %if.end.45, !dbg !4545

if.else.39:                                       ; preds = %if.then.31
  %ob_type40 = getelementptr inbounds %struct._object, %struct._object* %8, i64 0, i32 1, !dbg !4546
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type40, align 8, !dbg !4546, !tbaa !2010
  %tp_dealloc41 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i64 0, i32 4, !dbg !4546
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc41, align 8, !dbg !4546, !tbaa !2032
  tail call void %11(%struct._object* %8) #2, !dbg !4546
  br label %if.end.45

if.end.45:                                        ; preds = %if.else.39, %if.then.31, %if.end.25
  %cause = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %self, i64 0, i32 5, !dbg !4548
  %12 = load %struct._object*, %struct._object** %cause, align 8, !dbg !4548, !tbaa !2068
  tail call void @llvm.dbg.value(metadata %struct._object* %12, i64 0, metadata !923, metadata !1974), !dbg !4548
  %cmp50 = icmp eq %struct._object* %12, null, !dbg !4550
  br i1 %cmp50, label %if.end.65, label %if.then.51, !dbg !4551

if.then.51:                                       ; preds = %if.end.45
  store %struct._object* null, %struct._object** %cause, align 8, !dbg !4552, !tbaa !2068
  tail call void @llvm.dbg.value(metadata %struct._object* %12, i64 0, metadata !925, metadata !1974), !dbg !4554
  %ob_refcnt55 = getelementptr inbounds %struct._object, %struct._object* %12, i64 0, i32 0, !dbg !4556
  %13 = load i64, i64* %ob_refcnt55, align 8, !dbg !4556, !tbaa !1991
  %dec56 = add i64 %13, -1, !dbg !4556
  store i64 %dec56, i64* %ob_refcnt55, align 8, !dbg !4556, !tbaa !1991
  %cmp57 = icmp eq i64 %dec56, 0, !dbg !4556
  br i1 %cmp57, label %if.else.59, label %if.end.65, !dbg !4558

if.else.59:                                       ; preds = %if.then.51
  %ob_type60 = getelementptr inbounds %struct._object, %struct._object* %12, i64 0, i32 1, !dbg !4559
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type60, align 8, !dbg !4559, !tbaa !2010
  %tp_dealloc61 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i64 0, i32 4, !dbg !4559
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc61, align 8, !dbg !4559, !tbaa !2032
  tail call void %15(%struct._object* %12) #2, !dbg !4559
  br label %if.end.65

if.end.65:                                        ; preds = %if.else.59, %if.then.51, %if.end.45
  %context = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %self, i64 0, i32 4, !dbg !4561
  %16 = load %struct._object*, %struct._object** %context, align 8, !dbg !4561, !tbaa !2100
  tail call void @llvm.dbg.value(metadata %struct._object* %16, i64 0, metadata !929, metadata !1974), !dbg !4561
  %cmp70 = icmp eq %struct._object* %16, null, !dbg !4563
  br i1 %cmp70, label %if.end.85, label %if.then.71, !dbg !4564

if.then.71:                                       ; preds = %if.end.65
  store %struct._object* null, %struct._object** %context, align 8, !dbg !4565, !tbaa !2100
  tail call void @llvm.dbg.value(metadata %struct._object* %16, i64 0, metadata !931, metadata !1974), !dbg !4567
  %ob_refcnt75 = getelementptr inbounds %struct._object, %struct._object* %16, i64 0, i32 0, !dbg !4569
  %17 = load i64, i64* %ob_refcnt75, align 8, !dbg !4569, !tbaa !1991
  %dec76 = add i64 %17, -1, !dbg !4569
  store i64 %dec76, i64* %ob_refcnt75, align 8, !dbg !4569, !tbaa !1991
  %cmp77 = icmp eq i64 %dec76, 0, !dbg !4569
  br i1 %cmp77, label %if.else.79, label %if.end.85, !dbg !4571

if.else.79:                                       ; preds = %if.then.71
  %ob_type80 = getelementptr inbounds %struct._object, %struct._object* %16, i64 0, i32 1, !dbg !4572
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type80, align 8, !dbg !4572, !tbaa !2010
  %tp_dealloc81 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i64 0, i32 4, !dbg !4572
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc81, align 8, !dbg !4572, !tbaa !2032
  tail call void %19(%struct._object* %16) #2, !dbg !4572
  br label %if.end.85

if.end.85:                                        ; preds = %if.else.79, %if.then.71, %if.end.65
  ret i32 0, !dbg !4574
}

; Function Attrs: nounwind readonly
declare i8* @strrchr(i8*, i32) #5

declare %struct._object* @PyUnicode_FromFormat(i8*, ...) #3

declare %struct._object* @PyObject_Str(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @BaseException_reduce(%struct.PyBaseExceptionObject* nocapture readonly %self) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PyBaseExceptionObject* %self, i64 0, metadata !937, metadata !1974), !dbg !4575
  %args = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %self, i64 0, i32 2, !dbg !4576
  %0 = load %struct._object*, %struct._object** %args, align 8, !dbg !4578, !tbaa !4091
  %tobool = icmp eq %struct._object* %0, null, !dbg !4579
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !4580

land.lhs.true:                                    ; preds = %entry
  %dict = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %self, i64 0, i32 1, !dbg !4581
  %1 = load %struct._object*, %struct._object** %dict, align 8, !dbg !4581, !tbaa !4084
  %tobool1 = icmp eq %struct._object* %1, null, !dbg !4582
  br i1 %tobool1, label %if.else, label %if.then, !dbg !4583

if.then:                                          ; preds = %land.lhs.true
  %ob_type = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %self, i64 0, i32 0, i32 1, !dbg !4584
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4584, !tbaa !2010
  %call = tail call %struct._object* (i64, ...) @PyTuple_Pack(i64 3, %struct._typeobject* %2, %struct._object* %0, %struct._object* %1) #2, !dbg !4585
  br label %return, !dbg !4586

if.else:                                          ; preds = %land.lhs.true, %entry
  %ob_type4 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %self, i64 0, i32 0, i32 1, !dbg !4587
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type4, align 8, !dbg !4587, !tbaa !2010
  %call6 = tail call %struct._object* (i64, ...) @PyTuple_Pack(i64 2, %struct._typeobject* %3, %struct._object* %0) #2, !dbg !4588
  br label %return, !dbg !4589

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %struct._object* [ %call, %if.then ], [ %call6, %if.else ]
  ret %struct._object* %retval.0, !dbg !4590
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @BaseException_setstate(%struct._object* %self, %struct._object* %state) #0 {
entry:
  %d_key = alloca %struct._object*, align 8
  %d_value = alloca %struct._object*, align 8
  %i = alloca i64, align 8
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !940, metadata !1974), !dbg !4591
  tail call void @llvm.dbg.value(metadata %struct._object* %state, i64 0, metadata !941, metadata !1974), !dbg !4592
  %0 = bitcast %struct._object** %d_key to i8*, !dbg !4593
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !4593
  %1 = bitcast %struct._object** %d_value to i8*, !dbg !4593
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !4593
  %2 = bitcast i64* %i to i8*, !dbg !4594
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !4594
  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !944, metadata !1974), !dbg !4595
  store i64 0, i64* %i, align 8, !dbg !4595, !tbaa !2257
  %cmp = icmp eq %struct._object* %state, @_Py_NoneStruct, !dbg !4596
  br i1 %cmp, label %if.end.7, label %if.then, !dbg !4598

if.then:                                          ; preds = %entry
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %state, i64 0, i32 1, !dbg !4599
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4599, !tbaa !2010
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 19, !dbg !4599
  %4 = load i64, i64* %tp_flags, align 8, !dbg !4599, !tbaa !2143
  %and = and i64 %4, 536870912, !dbg !4599
  %cmp1 = icmp eq i64 %and, 0, !dbg !4599
  br i1 %cmp1, label %if.then.2, label %while.cond.preheader, !dbg !4602

while.cond.preheader:                             ; preds = %if.then
  br label %while.cond, !dbg !4603

if.then.2:                                        ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !4604, !tbaa !2002
  tail call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.88, i64 0, i64 0)) #2, !dbg !4606
  br label %cleanup, !dbg !4607

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  call void @llvm.dbg.value(metadata %struct._object** %d_key, i64 0, metadata !942, metadata !1974), !dbg !4603
  call void @llvm.dbg.value(metadata %struct._object** %d_value, i64 0, metadata !943, metadata !1974), !dbg !4608
  call void @llvm.dbg.value(metadata i64* %i, i64 0, metadata !944, metadata !1974), !dbg !4595
  %call = call i32 @PyDict_Next(%struct._object* %state, i64* nonnull %i, %struct._object** nonnull %d_key, %struct._object** nonnull %d_value) #2, !dbg !4609
  %tobool = icmp eq i32 %call, 0, !dbg !4610
  br i1 %tobool, label %if.end.7.loopexit, label %while.body, !dbg !4610

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata %struct._object** %d_key, i64 0, metadata !942, metadata !1974), !dbg !4603
  %6 = load %struct._object*, %struct._object** %d_key, align 8, !dbg !4611, !tbaa !2002
  call void @llvm.dbg.value(metadata %struct._object** %d_value, i64 0, metadata !943, metadata !1974), !dbg !4608
  %7 = load %struct._object*, %struct._object** %d_value, align 8, !dbg !4614, !tbaa !2002
  %call3 = call i32 @PyObject_SetAttr(%struct._object* %self, %struct._object* %6, %struct._object* %7) #2, !dbg !4615
  %cmp4 = icmp slt i32 %call3, 0, !dbg !4616
  br i1 %cmp4, label %cleanup.loopexit, label %while.cond, !dbg !4617

if.end.7.loopexit:                                ; preds = %while.cond
  br label %if.end.7, !dbg !4618

if.end.7:                                         ; preds = %if.end.7.loopexit, %entry
  %8 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !4618, !tbaa !1991
  %inc = add i64 %8, 1, !dbg !4618
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !4618, !tbaa !1991
  br label %cleanup, !dbg !4618

cleanup.loopexit:                                 ; preds = %while.body
  br label %cleanup, !dbg !4619

cleanup:                                          ; preds = %cleanup.loopexit, %if.end.7, %if.then.2
  %retval.0 = phi %struct._object* [ @_Py_NoneStruct, %if.end.7 ], [ null, %if.then.2 ], [ null, %cleanup.loopexit ]
  call void @llvm.lifetime.end(i64 8, i8* %2) #2, !dbg !4619
  call void @llvm.lifetime.end(i64 8, i8* %1) #2, !dbg !4619
  call void @llvm.lifetime.end(i64 8, i8* %0) #2, !dbg !4619
  ret %struct._object* %retval.0, !dbg !4619
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @BaseException_with_traceback(%struct._object* %self, %struct._object* %tb) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !947, metadata !1974), !dbg !4620
  tail call void @llvm.dbg.value(metadata %struct._object* %tb, i64 0, metadata !948, metadata !1974), !dbg !4621
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !497, metadata !1974) #2, !dbg !4622
  tail call void @llvm.dbg.value(metadata %struct._object* %tb, i64 0, metadata !498, metadata !1974) #2, !dbg !4625
  tail call void @llvm.dbg.value(metadata %struct._object* %tb, i64 0, metadata !848, metadata !1974) #2, !dbg !4626
  %cmp.i.i = icmp eq %struct._object* %tb, null, !dbg !4628
  br i1 %cmp.i.i, label %if.then.i.i, label %if.else.i.i, !dbg !4629

if.then.i.i:                                      ; preds = %entry
  %0 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !4630, !tbaa !2002
  tail call void @PyErr_SetString(%struct._object* %0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.80, i64 0, i64 0)) #2, !dbg !4631
  br label %return, !dbg !4632

if.else.i.i:                                      ; preds = %entry
  %cmp1.i.i = icmp eq %struct._object* %tb, @_Py_NoneStruct, !dbg !4633
  br i1 %cmp1.i.i, label %if.end.7.i.i, label %lor.lhs.false.i.i, !dbg !4634

lor.lhs.false.i.i:                                ; preds = %if.else.i.i
  %ob_type.i.i = getelementptr inbounds %struct._object, %struct._object* %tb, i64 0, i32 1, !dbg !4635
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type.i.i, align 8, !dbg !4635, !tbaa !2010
  %cmp2.i.i = icmp eq %struct._typeobject* %1, @PyTraceBack_Type, !dbg !4635
  br i1 %cmp2.i.i, label %if.end.7.i.i, label %if.then.3.i.i, !dbg !4636

if.then.3.i.i:                                    ; preds = %lor.lhs.false.i.i
  %2 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !4637, !tbaa !2002
  tail call void @PyErr_SetString(%struct._object* %2, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.81, i64 0, i64 0)) #2, !dbg !4638
  br label %return, !dbg !4639

if.end.7.i.i:                                     ; preds = %lor.lhs.false.i.i, %if.else.i.i
  tail call void @llvm.dbg.value(metadata %struct._object* %tb, i64 0, metadata !849, metadata !1974) #2, !dbg !4640
  %ob_refcnt.i.i = getelementptr inbounds %struct._object, %struct._object* %tb, i64 0, i32 0, !dbg !4641
  %3 = load i64, i64* %ob_refcnt.i.i, align 8, !dbg !4641, !tbaa !1991
  %inc.i.i = add i64 %3, 1, !dbg !4641
  store i64 %inc.i.i, i64* %ob_refcnt.i.i, align 8, !dbg !4641, !tbaa !1991
  %traceback.i.i = getelementptr inbounds %struct._object, %struct._object* %self, i64 2, !dbg !4642
  %4 = bitcast %struct._object* %traceback.i.i to %struct._object**, !dbg !4642
  %5 = load %struct._object*, %struct._object** %4, align 8, !dbg !4642, !tbaa !1979
  tail call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !851, metadata !1974) #2, !dbg !4642
  %cmp9.i.i = icmp eq %struct._object* %5, null, !dbg !4643
  br i1 %cmp9.i.i, label %if.end, label %do.body.11.i.i, !dbg !4644

do.body.11.i.i:                                   ; preds = %if.end.7.i.i
  tail call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !853, metadata !1974) #2, !dbg !4645
  %ob_refcnt12.i.i = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 0, !dbg !4646
  %6 = load i64, i64* %ob_refcnt12.i.i, align 8, !dbg !4646, !tbaa !1991
  %dec.i.i = add i64 %6, -1, !dbg !4646
  store i64 %dec.i.i, i64* %ob_refcnt12.i.i, align 8, !dbg !4646, !tbaa !1991
  %cmp13.i.i = icmp eq i64 %dec.i.i, 0, !dbg !4646
  br i1 %cmp13.i.i, label %if.else.15.i.i, label %if.end, !dbg !4647

if.else.15.i.i:                                   ; preds = %do.body.11.i.i
  %ob_type16.i.i = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 1, !dbg !4648
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type16.i.i, align 8, !dbg !4648, !tbaa !2010
  %tp_dealloc.i.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i64 0, i32 4, !dbg !4648
  %8 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i.i, align 8, !dbg !4648, !tbaa !2032
  tail call void %8(%struct._object* %5) #2, !dbg !4648
  br label %if.end, !dbg !4649

if.end:                                           ; preds = %if.else.15.i.i, %do.body.11.i.i, %if.end.7.i.i
  store %struct._object* %tb, %struct._object** %4, align 8, !dbg !4650, !tbaa !1979
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %self, i64 0, i32 0, !dbg !4651
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !4651, !tbaa !1991
  %inc = add i64 %9, 1, !dbg !4651
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !4651, !tbaa !1991
  br label %return, !dbg !4652

return:                                           ; preds = %if.then.3.i.i, %if.then.i.i, %if.end
  %retval.0 = phi %struct._object* [ %self, %if.end ], [ null, %if.then.i.i ], [ null, %if.then.3.i.i ]
  ret %struct._object* %retval.0, !dbg !4653
}

declare i32 @PyDict_Next(%struct._object*, i64*, %struct._object**, %struct._object**) #3

declare i32 @PyObject_SetAttr(%struct._object*, %struct._object*, %struct._object*) #3

declare %struct._object* @PyObject_GenericGetDict(%struct._object*, i8*) #3

declare i32 @PyObject_GenericSetDict(%struct._object*, %struct._object*, i8*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @BaseException_get_args(%struct.PyBaseExceptionObject* nocapture readonly %self) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PyBaseExceptionObject* %self, i64 0, metadata !951, metadata !1974), !dbg !4654
  %args = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %self, i64 0, i32 2, !dbg !4655
  %0 = load %struct._object*, %struct._object** %args, align 8, !dbg !4657, !tbaa !4091
  %cmp = icmp eq %struct._object* %0, null, !dbg !4658
  br i1 %cmp, label %if.then, label %if.end, !dbg !4659

if.then:                                          ; preds = %entry
  %1 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !4660, !tbaa !1991
  %inc = add i64 %1, 1, !dbg !4660
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !4660, !tbaa !1991
  br label %return, !dbg !4662

if.end:                                           ; preds = %entry
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %0, i64 0, i32 0, !dbg !4663
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !4663, !tbaa !1991
  %inc2 = add i64 %2, 1, !dbg !4663
  store i64 %inc2, i64* %ob_refcnt, align 8, !dbg !4663, !tbaa !1991
  br label %return, !dbg !4664

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct._object* [ @_Py_NoneStruct, %if.then ], [ %0, %if.end ]
  ret %struct._object* %retval.0, !dbg !4665
}

; Function Attrs: nounwind uwtable
define internal i32 @BaseException_set_args(%struct.PyBaseExceptionObject* nocapture %self, %struct._object* %val) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PyBaseExceptionObject* %self, i64 0, metadata !954, metadata !1974), !dbg !4666
  tail call void @llvm.dbg.value(metadata %struct._object* %val, i64 0, metadata !955, metadata !1974), !dbg !4667
  %cmp = icmp eq %struct._object* %val, null, !dbg !4668
  br i1 %cmp, label %if.then, label %if.end, !dbg !4670

if.then:                                          ; preds = %entry
  %0 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !4671, !tbaa !2002
  tail call void @PyErr_SetString(%struct._object* %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.97, i64 0, i64 0)) #2, !dbg !4673
  br label %cleanup, !dbg !4674

if.end:                                           ; preds = %entry
  %call = tail call %struct._object* @PySequence_Tuple(%struct._object* %val) #2, !dbg !4675
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !956, metadata !1974), !dbg !4676
  %tobool = icmp eq %struct._object* %call, null, !dbg !4677
  br i1 %tobool, label %cleanup, label %do.body, !dbg !4679

do.body:                                          ; preds = %if.end
  %args = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %self, i64 0, i32 2, !dbg !4680
  %1 = load %struct._object*, %struct._object** %args, align 8, !dbg !4680, !tbaa !4091
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !957, metadata !1974), !dbg !4680
  %cmp3 = icmp eq %struct._object* %1, null, !dbg !4682
  br i1 %cmp3, label %if.end.10, label %if.then.4, !dbg !4683

if.then.4:                                        ; preds = %do.body
  store %struct._object* null, %struct._object** %args, align 8, !dbg !4684, !tbaa !4091
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !959, metadata !1974), !dbg !4686
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !4688
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !4688, !tbaa !1991
  %dec = add i64 %2, -1, !dbg !4688
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4688, !tbaa !1991
  %cmp7 = icmp eq i64 %dec, 0, !dbg !4688
  br i1 %cmp7, label %if.else, label %if.end.10, !dbg !4690

if.else:                                          ; preds = %if.then.4
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !4691
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4691, !tbaa !2010
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 4, !dbg !4691
  %4 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4691, !tbaa !2032
  tail call void %4(%struct._object* %1) #2, !dbg !4691
  br label %if.end.10

if.end.10:                                        ; preds = %if.else, %if.then.4, %do.body
  store %struct._object* %call, %struct._object** %args, align 8, !dbg !4693, !tbaa !4091
  br label %cleanup, !dbg !4694

cleanup:                                          ; preds = %if.end, %if.end.10, %if.then
  %retval.0 = phi i32 [ -1, %if.then ], [ 0, %if.end.10 ], [ -1, %if.end ]
  ret i32 %retval.0, !dbg !4695
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @BaseException_get_tb(%struct.PyBaseExceptionObject* nocapture readonly %self) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PyBaseExceptionObject* %self, i64 0, metadata !965, metadata !1974), !dbg !4696
  %traceback = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %self, i64 0, i32 3, !dbg !4697
  %0 = load %struct._object*, %struct._object** %traceback, align 8, !dbg !4699, !tbaa !1979
  %cmp = icmp eq %struct._object* %0, null, !dbg !4700
  br i1 %cmp, label %if.then, label %if.end, !dbg !4701

if.then:                                          ; preds = %entry
  %1 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !4702, !tbaa !1991
  %inc = add i64 %1, 1, !dbg !4702
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !4702, !tbaa !1991
  br label %return, !dbg !4704

if.end:                                           ; preds = %entry
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %0, i64 0, i32 0, !dbg !4705
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !4705, !tbaa !1991
  %inc2 = add i64 %2, 1, !dbg !4705
  store i64 %inc2, i64* %ob_refcnt, align 8, !dbg !4705, !tbaa !1991
  br label %return, !dbg !4706

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct._object* [ @_Py_NoneStruct, %if.then ], [ %0, %if.end ]
  ret %struct._object* %retval.0, !dbg !4707
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @BaseException_get_context(%struct._object* nocapture readonly %self) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !968, metadata !1974), !dbg !4708
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !519, metadata !1974), !dbg !4709
  %context1.i = getelementptr inbounds %struct._object, %struct._object* %self, i64 2, i32 1, !dbg !4711
  %0 = bitcast %struct._typeobject** %context1.i to %struct._object**, !dbg !4711
  %1 = load %struct._object*, %struct._object** %0, align 8, !dbg !4711, !tbaa !2100
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !520, metadata !1974), !dbg !4712
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !521, metadata !1974), !dbg !4713
  %cmp.i = icmp eq %struct._object* %1, null, !dbg !4714
  br i1 %cmp.i, label %if.end, label %PyException_GetContext.exit, !dbg !4715

PyException_GetContext.exit:                      ; preds = %entry
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !4716
  %2 = load i64, i64* %ob_refcnt.i, align 8, !dbg !4716, !tbaa !1991
  %inc.i = add i64 %2, 1, !dbg !4716
  store i64 %inc.i, i64* %ob_refcnt.i, align 8, !dbg !4716, !tbaa !1991
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !969, metadata !1974), !dbg !4717
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !969, metadata !1974), !dbg !4717
  %3 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !4718, !tbaa !1991
  %inc = add i64 %3, 1, !dbg !4718
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !4718, !tbaa !1991
  br label %cleanup, !dbg !4718

cleanup:                                          ; preds = %PyException_GetContext.exit, %if.end
  %retval.0 = phi %struct._object* [ @_Py_NoneStruct, %if.end ], [ %1, %PyException_GetContext.exit ]
  ret %struct._object* %retval.0, !dbg !4719
}

; Function Attrs: nounwind uwtable
define internal i32 @BaseException_set_context(%struct._object* nocapture %self, %struct._object* %arg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !972, metadata !1974), !dbg !4720
  tail call void @llvm.dbg.value(metadata %struct._object* %arg, i64 0, metadata !973, metadata !1974), !dbg !4721
  %cmp = icmp eq %struct._object* %arg, null, !dbg !4722
  br i1 %cmp, label %if.then, label %if.else, !dbg !4724

if.then:                                          ; preds = %entry
  %0 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !4725, !tbaa !2002
  tail call void @PyErr_SetString(%struct._object* %0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.98, i64 0, i64 0)) #2, !dbg !4727
  br label %return, !dbg !4728

if.else:                                          ; preds = %entry
  %cmp1 = icmp eq %struct._object* %arg, @_Py_NoneStruct, !dbg !4729
  br i1 %cmp1, label %if.end.8, label %if.else.3, !dbg !4731

if.else.3:                                        ; preds = %if.else
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %arg, i64 0, i32 1, !dbg !4732
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4732, !tbaa !2010
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i64 0, i32 19, !dbg !4732
  %2 = load i64, i64* %tp_flags, align 8, !dbg !4732, !tbaa !2143
  %and = and i64 %2, 1073741824, !dbg !4732
  %cmp4 = icmp eq i64 %and, 0, !dbg !4732
  br i1 %cmp4, label %if.then.5, label %if.else.6, !dbg !4734

if.then.5:                                        ; preds = %if.else.3
  %3 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !4735, !tbaa !2002
  tail call void @PyErr_SetString(%struct._object* %3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.99, i64 0, i64 0)) #2, !dbg !4737
  br label %return, !dbg !4738

if.else.6:                                        ; preds = %if.else.3
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %arg, i64 0, i32 0, !dbg !4739
  %4 = load i64, i64* %ob_refcnt, align 8, !dbg !4739, !tbaa !1991
  %inc = add i64 %4, 1, !dbg !4739
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !4739, !tbaa !1991
  br label %if.end.8

if.end.8:                                         ; preds = %if.else, %if.else.6
  %arg.addr.0 = phi %struct._object* [ %arg, %if.else.6 ], [ null, %if.else ]
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !525, metadata !1974) #2, !dbg !4741
  tail call void @llvm.dbg.value(metadata %struct._object* %arg.addr.0, i64 0, metadata !526, metadata !1974) #2, !dbg !4743
  %context1.i = getelementptr inbounds %struct._object, %struct._object* %self, i64 2, i32 1, !dbg !4744
  %5 = bitcast %struct._typeobject** %context1.i to %struct._object**, !dbg !4744
  %6 = load %struct._object*, %struct._object** %5, align 8, !dbg !4744, !tbaa !2100
  tail call void @llvm.dbg.value(metadata %struct._object* %6, i64 0, metadata !527, metadata !1974) #2, !dbg !4745
  store %struct._object* %arg.addr.0, %struct._object** %5, align 8, !dbg !4746, !tbaa !2100
  tail call void @llvm.dbg.value(metadata %struct._object* %6, i64 0, metadata !528, metadata !1974) #2, !dbg !4747
  %cmp.i = icmp eq %struct._object* %6, null, !dbg !4748
  br i1 %cmp.i, label %return, label %do.body.3.i, !dbg !4749

do.body.3.i:                                      ; preds = %if.end.8
  tail call void @llvm.dbg.value(metadata %struct._object* %6, i64 0, metadata !530, metadata !1974) #2, !dbg !4750
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %6, i64 0, i32 0, !dbg !4751
  %7 = load i64, i64* %ob_refcnt.i, align 8, !dbg !4751, !tbaa !1991
  %dec.i = add i64 %7, -1, !dbg !4751
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !4751, !tbaa !1991
  %cmp4.i = icmp eq i64 %dec.i, 0, !dbg !4751
  br i1 %cmp4.i, label %if.else.i, label %return, !dbg !4752

if.else.i:                                        ; preds = %do.body.3.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %6, i64 0, i32 1, !dbg !4753
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !4753, !tbaa !2010
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i64 0, i32 4, !dbg !4753
  %9 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !4753, !tbaa !2032
  tail call void %9(%struct._object* %6) #2, !dbg !4753
  br label %return, !dbg !4754

return:                                           ; preds = %if.else.i, %do.body.3.i, %if.end.8, %if.then.5, %if.then
  %retval.0 = phi i32 [ -1, %if.then ], [ -1, %if.then.5 ], [ 0, %if.end.8 ], [ 0, %do.body.3.i ], [ 0, %if.else.i ]
  ret i32 %retval.0, !dbg !4755
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @BaseException_get_cause(%struct._object* nocapture readonly %self) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !976, metadata !1974), !dbg !4756
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !501, metadata !1974), !dbg !4757
  %cause1.i = getelementptr inbounds %struct._object, %struct._object* %self, i64 3, !dbg !4759
  %0 = bitcast %struct._object* %cause1.i to %struct._object**, !dbg !4759
  %1 = load %struct._object*, %struct._object** %0, align 8, !dbg !4759, !tbaa !2068
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !502, metadata !1974), !dbg !4760
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !503, metadata !1974), !dbg !4761
  %cmp.i = icmp eq %struct._object* %1, null, !dbg !4762
  br i1 %cmp.i, label %if.end, label %PyException_GetCause.exit, !dbg !4763

PyException_GetCause.exit:                        ; preds = %entry
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !4764
  %2 = load i64, i64* %ob_refcnt.i, align 8, !dbg !4764, !tbaa !1991
  %inc.i = add i64 %2, 1, !dbg !4764
  store i64 %inc.i, i64* %ob_refcnt.i, align 8, !dbg !4764, !tbaa !1991
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !977, metadata !1974), !dbg !4765
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !977, metadata !1974), !dbg !4765
  %3 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !4766, !tbaa !1991
  %inc = add i64 %3, 1, !dbg !4766
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !4766, !tbaa !1991
  br label %cleanup, !dbg !4766

cleanup:                                          ; preds = %PyException_GetCause.exit, %if.end
  %retval.0 = phi %struct._object* [ @_Py_NoneStruct, %if.end ], [ %1, %PyException_GetCause.exit ]
  ret %struct._object* %retval.0, !dbg !4767
}

; Function Attrs: nounwind uwtable
define internal i32 @BaseException_set_cause(%struct._object* nocapture %self, %struct._object* %arg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !980, metadata !1974), !dbg !4768
  tail call void @llvm.dbg.value(metadata %struct._object* %arg, i64 0, metadata !981, metadata !1974), !dbg !4769
  %cmp = icmp eq %struct._object* %arg, null, !dbg !4770
  br i1 %cmp, label %if.then, label %if.else, !dbg !4772

if.then:                                          ; preds = %entry
  %0 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !4773, !tbaa !2002
  tail call void @PyErr_SetString(%struct._object* %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.100, i64 0, i64 0)) #2, !dbg !4775
  br label %return, !dbg !4776

if.else:                                          ; preds = %entry
  %cmp1 = icmp eq %struct._object* %arg, @_Py_NoneStruct, !dbg !4777
  br i1 %cmp1, label %if.end.8, label %if.else.3, !dbg !4779

if.else.3:                                        ; preds = %if.else
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %arg, i64 0, i32 1, !dbg !4780
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4780, !tbaa !2010
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i64 0, i32 19, !dbg !4780
  %2 = load i64, i64* %tp_flags, align 8, !dbg !4780, !tbaa !2143
  %and = and i64 %2, 1073741824, !dbg !4780
  %cmp4 = icmp eq i64 %and, 0, !dbg !4780
  br i1 %cmp4, label %if.then.5, label %if.else.6, !dbg !4782

if.then.5:                                        ; preds = %if.else.3
  %3 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !4783, !tbaa !2002
  tail call void @PyErr_SetString(%struct._object* %3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.101, i64 0, i64 0)) #2, !dbg !4785
  br label %return, !dbg !4786

if.else.6:                                        ; preds = %if.else.3
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %arg, i64 0, i32 0, !dbg !4787
  %4 = load i64, i64* %ob_refcnt, align 8, !dbg !4787, !tbaa !1991
  %inc = add i64 %4, 1, !dbg !4787
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !4787, !tbaa !1991
  br label %if.end.8

if.end.8:                                         ; preds = %if.else, %if.else.6
  %arg.addr.0 = phi %struct._object* [ %arg, %if.else.6 ], [ null, %if.else ]
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !509, metadata !1974) #2, !dbg !4789
  tail call void @llvm.dbg.value(metadata %struct._object* %arg.addr.0, i64 0, metadata !510, metadata !1974) #2, !dbg !4791
  %cause1.i = getelementptr inbounds %struct._object, %struct._object* %self, i64 3, !dbg !4792
  %5 = bitcast %struct._object* %cause1.i to %struct._object**, !dbg !4792
  %6 = load %struct._object*, %struct._object** %5, align 8, !dbg !4792, !tbaa !2068
  tail call void @llvm.dbg.value(metadata %struct._object* %6, i64 0, metadata !511, metadata !1974) #2, !dbg !4793
  store %struct._object* %arg.addr.0, %struct._object** %5, align 8, !dbg !4794, !tbaa !2068
  %suppress_context.i = getelementptr inbounds %struct._object, %struct._object* %self, i64 3, i32 1, !dbg !4795
  %7 = bitcast %struct._typeobject** %suppress_context.i to i8*, !dbg !4795
  store i8 1, i8* %7, align 1, !dbg !4796, !tbaa !2085
  tail call void @llvm.dbg.value(metadata %struct._object* %6, i64 0, metadata !512, metadata !1974) #2, !dbg !4797
  %cmp.i = icmp eq %struct._object* %6, null, !dbg !4798
  br i1 %cmp.i, label %return, label %do.body.3.i, !dbg !4799

do.body.3.i:                                      ; preds = %if.end.8
  tail call void @llvm.dbg.value(metadata %struct._object* %6, i64 0, metadata !514, metadata !1974) #2, !dbg !4800
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %6, i64 0, i32 0, !dbg !4801
  %8 = load i64, i64* %ob_refcnt.i, align 8, !dbg !4801, !tbaa !1991
  %dec.i = add i64 %8, -1, !dbg !4801
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !4801, !tbaa !1991
  %cmp4.i = icmp eq i64 %dec.i, 0, !dbg !4801
  br i1 %cmp4.i, label %if.else.i, label %return, !dbg !4802

if.else.i:                                        ; preds = %do.body.3.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %6, i64 0, i32 1, !dbg !4803
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !4803, !tbaa !2010
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i64 0, i32 4, !dbg !4803
  %10 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !4803, !tbaa !2032
  tail call void %10(%struct._object* %6) #2, !dbg !4803
  br label %return, !dbg !4804

return:                                           ; preds = %if.else.i, %do.body.3.i, %if.end.8, %if.then.5, %if.then
  %retval.0 = phi i32 [ -1, %if.then ], [ -1, %if.then.5 ], [ 0, %if.end.8 ], [ 0, %do.body.3.i ], [ 0, %if.else.i ]
  ret i32 %retval.0, !dbg !4805
}

declare %struct._object* @PySequence_Tuple(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal void @StopIteration_dealloc(%struct.PyStopIterationObject* %self) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PyStopIterationObject* %self, i64 0, metadata !998, metadata !1974), !dbg !4806
  %add.ptr = getelementptr %struct.PyStopIterationObject, %struct.PyStopIterationObject* %self, i64 -1, i32 5, !dbg !4807
  %gc_refs = getelementptr inbounds %struct._object*, %struct._object** %add.ptr, i64 2, !dbg !4809
  %0 = bitcast %struct._object** %gc_refs to i64*, !dbg !4809
  %1 = load i64, i64* %0, align 8, !dbg !4809, !tbaa !4432
  %and = and i64 %1, 1, !dbg !4809
  %or = or i64 %and, -4, !dbg !4809
  store i64 %or, i64* %0, align 8, !dbg !4809, !tbaa !4432
  %gc_next = bitcast %struct._object** %add.ptr to %union._gc_head**, !dbg !4812
  %2 = bitcast %struct._object** %add.ptr to i64*, !dbg !4812
  %3 = load i64, i64* %2, align 8, !dbg !4812, !tbaa !4436
  %gc_prev = getelementptr inbounds %struct._object*, %struct._object** %add.ptr, i64 1, !dbg !4812
  %4 = bitcast %struct._object** %gc_prev to i64**, !dbg !4812
  %5 = load i64*, i64** %4, align 8, !dbg !4812, !tbaa !4437
  store i64 %3, i64* %5, align 8, !dbg !4812, !tbaa !4436
  %6 = ptrtoint i64* %5 to i64, !dbg !4812
  %7 = bitcast %struct._object** %add.ptr to %struct.anon.0**, !dbg !4812
  %8 = load %struct.anon.0*, %struct.anon.0** %7, align 8, !dbg !4812, !tbaa !4436
  %gc_prev13 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %8, i64 0, i32 1, !dbg !4812
  %9 = bitcast %union._gc_head** %gc_prev13 to i64*, !dbg !4812
  store i64 %6, i64* %9, align 8, !dbg !4812, !tbaa !4437
  store %union._gc_head* null, %union._gc_head** %gc_next, align 8, !dbg !4812, !tbaa !4436
  tail call void @llvm.dbg.value(metadata %struct.PyStopIterationObject* %self, i64 0, metadata !1016, metadata !1974) #2, !dbg !4814
  %value.i = getelementptr inbounds %struct.PyStopIterationObject, %struct.PyStopIterationObject* %self, i64 0, i32 7, !dbg !4816
  %10 = load %struct._object*, %struct._object** %value.i, align 8, !dbg !4816, !tbaa !4818
  tail call void @llvm.dbg.value(metadata %struct._object* %10, i64 0, metadata !1017, metadata !1974) #2, !dbg !4816
  %cmp.i = icmp eq %struct._object* %10, null, !dbg !4820
  br i1 %cmp.i, label %StopIteration_clear.exit, label %if.then.i, !dbg !4821

if.then.i:                                        ; preds = %entry
  store %struct._object* null, %struct._object** %value.i, align 8, !dbg !4822, !tbaa !4818
  tail call void @llvm.dbg.value(metadata %struct._object* %10, i64 0, metadata !1019, metadata !1974) #2, !dbg !4824
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %10, i64 0, i32 0, !dbg !4826
  %11 = load i64, i64* %ob_refcnt.i, align 8, !dbg !4826, !tbaa !1991
  %dec.i = add i64 %11, -1, !dbg !4826
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !4826, !tbaa !1991
  %cmp3.i = icmp eq i64 %dec.i, 0, !dbg !4826
  br i1 %cmp3.i, label %if.else.i, label %StopIteration_clear.exit, !dbg !4828

if.else.i:                                        ; preds = %if.then.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %10, i64 0, i32 1, !dbg !4829
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !4829, !tbaa !2010
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i64 0, i32 4, !dbg !4829
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !4829, !tbaa !2032
  tail call void %13(%struct._object* %10) #2, !dbg !4829
  br label %StopIteration_clear.exit, !dbg !4831

StopIteration_clear.exit:                         ; preds = %entry, %if.then.i, %if.else.i
  %14 = bitcast %struct.PyStopIterationObject* %self to %struct.PyBaseExceptionObject*, !dbg !4832
  %call.i = tail call i32 @BaseException_clear(%struct.PyBaseExceptionObject* %14) #2, !dbg !4833
  %ob_type = getelementptr inbounds %struct.PyStopIterationObject, %struct.PyStopIterationObject* %self, i64 0, i32 0, i32 1, !dbg !4834
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4834, !tbaa !2010
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i64 0, i32 38, !dbg !4835
  %16 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !4835, !tbaa !4230
  %17 = bitcast %struct.PyStopIterationObject* %self to i8*, !dbg !4836
  tail call void %16(i8* %17) #2, !dbg !4834
  ret void, !dbg !4837
}

; Function Attrs: nounwind uwtable
define internal i32 @StopIteration_traverse(%struct.PyStopIterationObject* nocapture readonly %self, i32 (%struct._object*, i8*)* nocapture %visit, i8* %arg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PyStopIterationObject* %self, i64 0, metadata !1005, metadata !1974), !dbg !4838
  tail call void @llvm.dbg.value(metadata i32 (%struct._object*, i8*)* %visit, i64 0, metadata !1006, metadata !1974), !dbg !4839
  tail call void @llvm.dbg.value(metadata i8* %arg, i64 0, metadata !1007, metadata !1974), !dbg !4840
  %value = getelementptr inbounds %struct.PyStopIterationObject, %struct.PyStopIterationObject* %self, i64 0, i32 7, !dbg !4841
  %0 = load %struct._object*, %struct._object** %value, align 8, !dbg !4841, !tbaa !4818
  %tobool = icmp eq %struct._object* %0, null, !dbg !4841
  br i1 %tobool, label %do.end, label %if.then, !dbg !4843

if.then:                                          ; preds = %entry
  %call = tail call i32 %visit(%struct._object* %0, i8* %arg) #2, !dbg !4844
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !1008, metadata !1974), !dbg !4844
  %tobool2 = icmp eq i32 %call, 0, !dbg !4846
  br i1 %tobool2, label %do.end, label %return

do.end:                                           ; preds = %entry, %if.then
  tail call void @llvm.dbg.value(metadata i32 (%struct._object*, i8*)* %visit, i64 0, metadata !878, metadata !1974) #2, !dbg !4848
  tail call void @llvm.dbg.value(metadata i8* %arg, i64 0, metadata !879, metadata !1974) #2, !dbg !4850
  %1 = getelementptr inbounds %struct.PyStopIterationObject, %struct.PyStopIterationObject* %self, i64 0, i32 1, !dbg !4851
  %2 = load %struct._object*, %struct._object** %1, align 8, !dbg !4851, !tbaa !4084
  %tobool.i = icmp eq %struct._object* %2, null, !dbg !4851
  br i1 %tobool.i, label %do.body.5.i, label %if.then.i, !dbg !4852

if.then.i:                                        ; preds = %do.end
  %call.i = tail call i32 %visit(%struct._object* %2, i8* %arg) #2, !dbg !4853
  tail call void @llvm.dbg.value(metadata i32 %call.i, i64 0, metadata !880, metadata !1974) #2, !dbg !4853
  %tobool2.i = icmp eq i32 %call.i, 0, !dbg !4854
  br i1 %tobool2.i, label %do.body.5.i, label %return, !dbg !4855

do.body.5.i:                                      ; preds = %if.then.i, %do.end
  %3 = getelementptr inbounds %struct.PyStopIterationObject, %struct.PyStopIterationObject* %self, i64 0, i32 2, !dbg !4856
  %4 = load %struct._object*, %struct._object** %3, align 8, !dbg !4856, !tbaa !4091
  %tobool6.i = icmp eq %struct._object* %4, null, !dbg !4856
  br i1 %tobool6.i, label %do.body.19.i, label %if.then.7.i, !dbg !4857

if.then.7.i:                                      ; preds = %do.body.5.i
  %call10.i = tail call i32 %visit(%struct._object* %4, i8* %arg) #2, !dbg !4858
  tail call void @llvm.dbg.value(metadata i32 %call10.i, i64 0, metadata !884, metadata !1974) #2, !dbg !4858
  %tobool11.i = icmp eq i32 %call10.i, 0, !dbg !4859
  br i1 %tobool11.i, label %do.body.19.i, label %return, !dbg !4855

do.body.19.i:                                     ; preds = %if.then.7.i, %do.body.5.i
  %5 = getelementptr inbounds %struct.PyStopIterationObject, %struct.PyStopIterationObject* %self, i64 0, i32 3, !dbg !4860
  %6 = load %struct._object*, %struct._object** %5, align 8, !dbg !4860, !tbaa !1979
  %tobool20.i = icmp eq %struct._object* %6, null, !dbg !4860
  br i1 %tobool20.i, label %do.body.33.i, label %if.then.21.i, !dbg !4861

if.then.21.i:                                     ; preds = %do.body.19.i
  %call24.i = tail call i32 %visit(%struct._object* %6, i8* %arg) #2, !dbg !4862
  tail call void @llvm.dbg.value(metadata i32 %call24.i, i64 0, metadata !888, metadata !1974) #2, !dbg !4862
  %tobool25.i = icmp eq i32 %call24.i, 0, !dbg !4863
  br i1 %tobool25.i, label %do.body.33.i, label %return, !dbg !4855

do.body.33.i:                                     ; preds = %if.then.21.i, %do.body.19.i
  %7 = getelementptr inbounds %struct.PyStopIterationObject, %struct.PyStopIterationObject* %self, i64 0, i32 5, !dbg !4864
  %8 = load %struct._object*, %struct._object** %7, align 8, !dbg !4864, !tbaa !2068
  %tobool34.i = icmp eq %struct._object* %8, null, !dbg !4864
  br i1 %tobool34.i, label %do.body.47.i, label %if.then.35.i, !dbg !4865

if.then.35.i:                                     ; preds = %do.body.33.i
  %call38.i = tail call i32 %visit(%struct._object* %8, i8* %arg) #2, !dbg !4866
  tail call void @llvm.dbg.value(metadata i32 %call38.i, i64 0, metadata !892, metadata !1974) #2, !dbg !4866
  %tobool39.i = icmp eq i32 %call38.i, 0, !dbg !4867
  br i1 %tobool39.i, label %do.body.47.i, label %return, !dbg !4855

do.body.47.i:                                     ; preds = %if.then.35.i, %do.body.33.i
  %9 = getelementptr inbounds %struct.PyStopIterationObject, %struct.PyStopIterationObject* %self, i64 0, i32 4, !dbg !4868
  %10 = load %struct._object*, %struct._object** %9, align 8, !dbg !4868, !tbaa !2100
  %tobool48.i = icmp eq %struct._object* %10, null, !dbg !4868
  br i1 %tobool48.i, label %do.end.60.i, label %if.then.49.i, !dbg !4869

if.then.49.i:                                     ; preds = %do.body.47.i
  %call52.i = tail call i32 %visit(%struct._object* %10, i8* %arg) #2, !dbg !4870
  tail call void @llvm.dbg.value(metadata i32 %call52.i, i64 0, metadata !896, metadata !1974) #2, !dbg !4870
  %tobool53.i = icmp eq i32 %call52.i, 0, !dbg !4871
  br i1 %tobool53.i, label %do.end.60.i, label %return, !dbg !4855

do.end.60.i:                                      ; preds = %if.then.49.i, %do.body.47.i
  br label %return, !dbg !4872

return:                                           ; preds = %do.end.60.i, %if.then.49.i, %if.then.35.i, %if.then.21.i, %if.then.7.i, %if.then.i, %if.then
  %retval.1 = phi i32 [ %call, %if.then ], [ 0, %do.end.60.i ], [ %call52.i, %if.then.49.i ], [ %call38.i, %if.then.35.i ], [ %call24.i, %if.then.21.i ], [ %call10.i, %if.then.7.i ], [ %call.i, %if.then.i ]
  ret i32 %retval.1, !dbg !4873
}

; Function Attrs: nounwind uwtable
define internal i32 @StopIteration_clear(%struct.PyStopIterationObject* nocapture %self) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PyStopIterationObject* %self, i64 0, metadata !1016, metadata !1974), !dbg !4874
  %value = getelementptr inbounds %struct.PyStopIterationObject, %struct.PyStopIterationObject* %self, i64 0, i32 7, !dbg !4875
  %0 = load %struct._object*, %struct._object** %value, align 8, !dbg !4875, !tbaa !4818
  tail call void @llvm.dbg.value(metadata %struct._object* %0, i64 0, metadata !1017, metadata !1974), !dbg !4875
  %cmp = icmp eq %struct._object* %0, null, !dbg !4876
  br i1 %cmp, label %if.end.5, label %if.then, !dbg !4877

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %value, align 8, !dbg !4878, !tbaa !4818
  tail call void @llvm.dbg.value(metadata %struct._object* %0, i64 0, metadata !1019, metadata !1974), !dbg !4879
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %0, i64 0, i32 0, !dbg !4880
  %1 = load i64, i64* %ob_refcnt, align 8, !dbg !4880, !tbaa !1991
  %dec = add i64 %1, -1, !dbg !4880
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4880, !tbaa !1991
  %cmp3 = icmp eq i64 %dec, 0, !dbg !4880
  br i1 %cmp3, label %if.else, label %if.end.5, !dbg !4881

if.else:                                          ; preds = %if.then
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i64 0, i32 1, !dbg !4882
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4882, !tbaa !2010
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i64 0, i32 4, !dbg !4882
  %3 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4882, !tbaa !2032
  tail call void %3(%struct._object* %0) #2, !dbg !4882
  br label %if.end.5

if.end.5:                                         ; preds = %if.else, %if.then, %entry
  %4 = bitcast %struct.PyStopIterationObject* %self to %struct.PyBaseExceptionObject*, !dbg !4883
  %call = tail call i32 @BaseException_clear(%struct.PyBaseExceptionObject* %4), !dbg !4884
  ret i32 0, !dbg !4885
}

; Function Attrs: nounwind uwtable
define internal i32 @StopIteration_init(%struct.PyStopIterationObject* nocapture %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PyStopIterationObject* %self, i64 0, metadata !1027, metadata !1974), !dbg !4886
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1028, metadata !1974), !dbg !4887
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !1029, metadata !1974), !dbg !4888
  %0 = getelementptr inbounds %struct._object, %struct._object* %args, i64 1, i32 0, !dbg !4889
  %1 = load i64, i64* %0, align 8, !dbg !4889, !tbaa !2297
  tail call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !1030, metadata !1974), !dbg !4890
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1790, metadata !1974) #2, !dbg !4891
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !1791, metadata !1974) #2, !dbg !4894
  %2 = getelementptr inbounds %struct.PyStopIterationObject, %struct.PyStopIterationObject* %self, i64 0, i32 0, i32 1, !dbg !4895
  %3 = load %struct._typeobject*, %struct._typeobject** %2, align 8, !dbg !4895, !tbaa !2010
  %tp_name.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 1, !dbg !4896
  %4 = load i8*, i8** %tp_name.i, align 8, !dbg !4896, !tbaa !4130
  %call.i = tail call i32 @_PyArg_NoKeywords(i8* %4, %struct._object* %kwds) #2, !dbg !4897
  %tobool.i = icmp eq i32 %call.i, 0, !dbg !4897
  br i1 %tobool.i, label %cleanup, label %if.end.i, !dbg !4898

if.end.i:                                         ; preds = %entry
  %5 = getelementptr inbounds %struct.PyStopIterationObject, %struct.PyStopIterationObject* %self, i64 0, i32 2, !dbg !4899
  %6 = load %struct._object*, %struct._object** %5, align 8, !dbg !4899, !tbaa !4091
  tail call void @llvm.dbg.value(metadata %struct._object* %6, i64 0, metadata !1792, metadata !1974) #2, !dbg !4900
  store %struct._object* %args, %struct._object** %5, align 8, !dbg !4901, !tbaa !4091
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %args, i64 0, i32 0, !dbg !4902
  %7 = load i64, i64* %ob_refcnt.i, align 8, !dbg !4902, !tbaa !1991
  %inc.i = add i64 %7, 1, !dbg !4902
  store i64 %inc.i, i64* %ob_refcnt.i, align 8, !dbg !4902, !tbaa !1991
  tail call void @llvm.dbg.value(metadata %struct._object* %6, i64 0, metadata !1793, metadata !1974) #2, !dbg !4903
  %cmp.i = icmp eq %struct._object* %6, null, !dbg !4904
  br i1 %cmp.i, label %do.body, label %do.body.6.i, !dbg !4905

do.body.6.i:                                      ; preds = %if.end.i
  tail call void @llvm.dbg.value(metadata %struct._object* %6, i64 0, metadata !1795, metadata !1974) #2, !dbg !4906
  %ob_refcnt8.i = getelementptr inbounds %struct._object, %struct._object* %6, i64 0, i32 0, !dbg !4907
  %8 = load i64, i64* %ob_refcnt8.i, align 8, !dbg !4907, !tbaa !1991
  %dec.i = add i64 %8, -1, !dbg !4907
  store i64 %dec.i, i64* %ob_refcnt8.i, align 8, !dbg !4907, !tbaa !1991
  %cmp9.i = icmp eq i64 %dec.i, 0, !dbg !4907
  br i1 %cmp9.i, label %if.else.i, label %do.body, !dbg !4908

if.else.i:                                        ; preds = %do.body.6.i
  %ob_type11.i = getelementptr inbounds %struct._object, %struct._object* %6, i64 0, i32 1, !dbg !4909
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type11.i, align 8, !dbg !4909, !tbaa !2010
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i64 0, i32 4, !dbg !4909
  %10 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !4909, !tbaa !2032
  tail call void %10(%struct._object* %6) #2, !dbg !4909
  br label %do.body, !dbg !4910

do.body:                                          ; preds = %if.else.i, %do.body.6.i, %if.end.i
  %value1 = getelementptr inbounds %struct.PyStopIterationObject, %struct.PyStopIterationObject* %self, i64 0, i32 7, !dbg !4911
  %11 = load %struct._object*, %struct._object** %value1, align 8, !dbg !4911, !tbaa !4818
  tail call void @llvm.dbg.value(metadata %struct._object* %11, i64 0, metadata !1032, metadata !1974), !dbg !4911
  %cmp2 = icmp eq %struct._object* %11, null, !dbg !4913
  br i1 %cmp2, label %if.end.9, label %if.then.3, !dbg !4914

if.then.3:                                        ; preds = %do.body
  store %struct._object* null, %struct._object** %value1, align 8, !dbg !4915, !tbaa !4818
  tail call void @llvm.dbg.value(metadata %struct._object* %11, i64 0, metadata !1034, metadata !1974), !dbg !4917
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i64 0, i32 0, !dbg !4919
  %12 = load i64, i64* %ob_refcnt, align 8, !dbg !4919, !tbaa !1991
  %dec = add i64 %12, -1, !dbg !4919
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4919, !tbaa !1991
  %cmp6 = icmp eq i64 %dec, 0, !dbg !4919
  br i1 %cmp6, label %if.else, label %if.end.9, !dbg !4921

if.else:                                          ; preds = %if.then.3
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i64 0, i32 1, !dbg !4922
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4922, !tbaa !2010
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i64 0, i32 4, !dbg !4922
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4922, !tbaa !2032
  tail call void %14(%struct._object* %11) #2, !dbg !4922
  br label %if.end.9

if.end.9:                                         ; preds = %if.else, %if.then.3, %do.body
  %cmp12 = icmp sgt i64 %1, 0, !dbg !4924
  br i1 %cmp12, label %if.then.13, label %if.end.15, !dbg !4926

if.then.13:                                       ; preds = %if.end.9
  %ob_item = getelementptr inbounds %struct._object, %struct._object* %args, i64 1, i32 1, !dbg !4927
  %arrayidx = bitcast %struct._typeobject** %ob_item to %struct._object**, !dbg !4927
  %15 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !4927, !tbaa !2002
  tail call void @llvm.dbg.value(metadata %struct._object* %15, i64 0, metadata !1031, metadata !1974), !dbg !4928
  br label %if.end.15, !dbg !4929

if.end.15:                                        ; preds = %if.end.9, %if.then.13
  %value.0 = phi %struct._object* [ %15, %if.then.13 ], [ @_Py_NoneStruct, %if.end.9 ]
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %value.0, i64 0, i32 0, !dbg !4930
  %16 = load i64, i64* %ob_refcnt16, align 8, !dbg !4930, !tbaa !1991
  %inc = add i64 %16, 1, !dbg !4930
  store i64 %inc, i64* %ob_refcnt16, align 8, !dbg !4930, !tbaa !1991
  store %struct._object* %value.0, %struct._object** %value1, align 8, !dbg !4931, !tbaa !4818
  br label %cleanup, !dbg !4932

cleanup:                                          ; preds = %entry, %if.end.15
  %retval.0 = phi i32 [ 0, %if.end.15 ], [ -1, %entry ]
  ret i32 %retval.0, !dbg !4933
}

; Function Attrs: nounwind uwtable
define internal void @SystemExit_dealloc(%struct.PySystemExitObject* %self) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PySystemExitObject* %self, i64 0, metadata !1054, metadata !1974), !dbg !4934
  %add.ptr = getelementptr %struct.PySystemExitObject, %struct.PySystemExitObject* %self, i64 -1, i32 5, !dbg !4935
  %gc_refs = getelementptr inbounds %struct._object*, %struct._object** %add.ptr, i64 2, !dbg !4937
  %0 = bitcast %struct._object** %gc_refs to i64*, !dbg !4937
  %1 = load i64, i64* %0, align 8, !dbg !4937, !tbaa !4432
  %and = and i64 %1, 1, !dbg !4937
  %or = or i64 %and, -4, !dbg !4937
  store i64 %or, i64* %0, align 8, !dbg !4937, !tbaa !4432
  %gc_next = bitcast %struct._object** %add.ptr to %union._gc_head**, !dbg !4940
  %2 = bitcast %struct._object** %add.ptr to i64*, !dbg !4940
  %3 = load i64, i64* %2, align 8, !dbg !4940, !tbaa !4436
  %gc_prev = getelementptr inbounds %struct._object*, %struct._object** %add.ptr, i64 1, !dbg !4940
  %4 = bitcast %struct._object** %gc_prev to i64**, !dbg !4940
  %5 = load i64*, i64** %4, align 8, !dbg !4940, !tbaa !4437
  store i64 %3, i64* %5, align 8, !dbg !4940, !tbaa !4436
  %6 = ptrtoint i64* %5 to i64, !dbg !4940
  %7 = bitcast %struct._object** %add.ptr to %struct.anon.0**, !dbg !4940
  %8 = load %struct.anon.0*, %struct.anon.0** %7, align 8, !dbg !4940, !tbaa !4436
  %gc_prev13 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %8, i64 0, i32 1, !dbg !4940
  %9 = bitcast %union._gc_head** %gc_prev13 to i64*, !dbg !4940
  store i64 %6, i64* %9, align 8, !dbg !4940, !tbaa !4437
  store %union._gc_head* null, %union._gc_head** %gc_next, align 8, !dbg !4940, !tbaa !4436
  tail call void @llvm.dbg.value(metadata %struct.PySystemExitObject* %self, i64 0, metadata !1072, metadata !1974) #2, !dbg !4942
  %code.i = getelementptr inbounds %struct.PySystemExitObject, %struct.PySystemExitObject* %self, i64 0, i32 7, !dbg !4944
  %10 = load %struct._object*, %struct._object** %code.i, align 8, !dbg !4944, !tbaa !4818
  tail call void @llvm.dbg.value(metadata %struct._object* %10, i64 0, metadata !1073, metadata !1974) #2, !dbg !4944
  %cmp.i = icmp eq %struct._object* %10, null, !dbg !4946
  br i1 %cmp.i, label %SystemExit_clear.exit, label %if.then.i, !dbg !4947

if.then.i:                                        ; preds = %entry
  store %struct._object* null, %struct._object** %code.i, align 8, !dbg !4948, !tbaa !4818
  tail call void @llvm.dbg.value(metadata %struct._object* %10, i64 0, metadata !1075, metadata !1974) #2, !dbg !4950
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %10, i64 0, i32 0, !dbg !4952
  %11 = load i64, i64* %ob_refcnt.i, align 8, !dbg !4952, !tbaa !1991
  %dec.i = add i64 %11, -1, !dbg !4952
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !4952, !tbaa !1991
  %cmp3.i = icmp eq i64 %dec.i, 0, !dbg !4952
  br i1 %cmp3.i, label %if.else.i, label %SystemExit_clear.exit, !dbg !4954

if.else.i:                                        ; preds = %if.then.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %10, i64 0, i32 1, !dbg !4955
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !4955, !tbaa !2010
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i64 0, i32 4, !dbg !4955
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !4955, !tbaa !2032
  tail call void %13(%struct._object* %10) #2, !dbg !4955
  br label %SystemExit_clear.exit, !dbg !4957

SystemExit_clear.exit:                            ; preds = %entry, %if.then.i, %if.else.i
  %14 = bitcast %struct.PySystemExitObject* %self to %struct.PyBaseExceptionObject*, !dbg !4958
  %call.i = tail call i32 @BaseException_clear(%struct.PyBaseExceptionObject* %14) #2, !dbg !4959
  %ob_type = getelementptr inbounds %struct.PySystemExitObject, %struct.PySystemExitObject* %self, i64 0, i32 0, i32 1, !dbg !4960
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4960, !tbaa !2010
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i64 0, i32 38, !dbg !4961
  %16 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !4961, !tbaa !4230
  %17 = bitcast %struct.PySystemExitObject* %self to i8*, !dbg !4962
  tail call void %16(i8* %17) #2, !dbg !4960
  ret void, !dbg !4963
}

; Function Attrs: nounwind uwtable
define internal i32 @SystemExit_traverse(%struct.PySystemExitObject* nocapture readonly %self, i32 (%struct._object*, i8*)* nocapture %visit, i8* %arg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PySystemExitObject* %self, i64 0, metadata !1061, metadata !1974), !dbg !4964
  tail call void @llvm.dbg.value(metadata i32 (%struct._object*, i8*)* %visit, i64 0, metadata !1062, metadata !1974), !dbg !4965
  tail call void @llvm.dbg.value(metadata i8* %arg, i64 0, metadata !1063, metadata !1974), !dbg !4966
  %code = getelementptr inbounds %struct.PySystemExitObject, %struct.PySystemExitObject* %self, i64 0, i32 7, !dbg !4967
  %0 = load %struct._object*, %struct._object** %code, align 8, !dbg !4967, !tbaa !4818
  %tobool = icmp eq %struct._object* %0, null, !dbg !4967
  br i1 %tobool, label %do.end, label %if.then, !dbg !4969

if.then:                                          ; preds = %entry
  %call = tail call i32 %visit(%struct._object* %0, i8* %arg) #2, !dbg !4970
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !1064, metadata !1974), !dbg !4970
  %tobool2 = icmp eq i32 %call, 0, !dbg !4972
  br i1 %tobool2, label %do.end, label %return

do.end:                                           ; preds = %entry, %if.then
  tail call void @llvm.dbg.value(metadata i32 (%struct._object*, i8*)* %visit, i64 0, metadata !878, metadata !1974) #2, !dbg !4974
  tail call void @llvm.dbg.value(metadata i8* %arg, i64 0, metadata !879, metadata !1974) #2, !dbg !4976
  %1 = getelementptr inbounds %struct.PySystemExitObject, %struct.PySystemExitObject* %self, i64 0, i32 1, !dbg !4977
  %2 = load %struct._object*, %struct._object** %1, align 8, !dbg !4977, !tbaa !4084
  %tobool.i = icmp eq %struct._object* %2, null, !dbg !4977
  br i1 %tobool.i, label %do.body.5.i, label %if.then.i, !dbg !4978

if.then.i:                                        ; preds = %do.end
  %call.i = tail call i32 %visit(%struct._object* %2, i8* %arg) #2, !dbg !4979
  tail call void @llvm.dbg.value(metadata i32 %call.i, i64 0, metadata !880, metadata !1974) #2, !dbg !4979
  %tobool2.i = icmp eq i32 %call.i, 0, !dbg !4980
  br i1 %tobool2.i, label %do.body.5.i, label %return, !dbg !4981

do.body.5.i:                                      ; preds = %if.then.i, %do.end
  %3 = getelementptr inbounds %struct.PySystemExitObject, %struct.PySystemExitObject* %self, i64 0, i32 2, !dbg !4982
  %4 = load %struct._object*, %struct._object** %3, align 8, !dbg !4982, !tbaa !4091
  %tobool6.i = icmp eq %struct._object* %4, null, !dbg !4982
  br i1 %tobool6.i, label %do.body.19.i, label %if.then.7.i, !dbg !4983

if.then.7.i:                                      ; preds = %do.body.5.i
  %call10.i = tail call i32 %visit(%struct._object* %4, i8* %arg) #2, !dbg !4984
  tail call void @llvm.dbg.value(metadata i32 %call10.i, i64 0, metadata !884, metadata !1974) #2, !dbg !4984
  %tobool11.i = icmp eq i32 %call10.i, 0, !dbg !4985
  br i1 %tobool11.i, label %do.body.19.i, label %return, !dbg !4981

do.body.19.i:                                     ; preds = %if.then.7.i, %do.body.5.i
  %5 = getelementptr inbounds %struct.PySystemExitObject, %struct.PySystemExitObject* %self, i64 0, i32 3, !dbg !4986
  %6 = load %struct._object*, %struct._object** %5, align 8, !dbg !4986, !tbaa !1979
  %tobool20.i = icmp eq %struct._object* %6, null, !dbg !4986
  br i1 %tobool20.i, label %do.body.33.i, label %if.then.21.i, !dbg !4987

if.then.21.i:                                     ; preds = %do.body.19.i
  %call24.i = tail call i32 %visit(%struct._object* %6, i8* %arg) #2, !dbg !4988
  tail call void @llvm.dbg.value(metadata i32 %call24.i, i64 0, metadata !888, metadata !1974) #2, !dbg !4988
  %tobool25.i = icmp eq i32 %call24.i, 0, !dbg !4989
  br i1 %tobool25.i, label %do.body.33.i, label %return, !dbg !4981

do.body.33.i:                                     ; preds = %if.then.21.i, %do.body.19.i
  %7 = getelementptr inbounds %struct.PySystemExitObject, %struct.PySystemExitObject* %self, i64 0, i32 5, !dbg !4990
  %8 = load %struct._object*, %struct._object** %7, align 8, !dbg !4990, !tbaa !2068
  %tobool34.i = icmp eq %struct._object* %8, null, !dbg !4990
  br i1 %tobool34.i, label %do.body.47.i, label %if.then.35.i, !dbg !4991

if.then.35.i:                                     ; preds = %do.body.33.i
  %call38.i = tail call i32 %visit(%struct._object* %8, i8* %arg) #2, !dbg !4992
  tail call void @llvm.dbg.value(metadata i32 %call38.i, i64 0, metadata !892, metadata !1974) #2, !dbg !4992
  %tobool39.i = icmp eq i32 %call38.i, 0, !dbg !4993
  br i1 %tobool39.i, label %do.body.47.i, label %return, !dbg !4981

do.body.47.i:                                     ; preds = %if.then.35.i, %do.body.33.i
  %9 = getelementptr inbounds %struct.PySystemExitObject, %struct.PySystemExitObject* %self, i64 0, i32 4, !dbg !4994
  %10 = load %struct._object*, %struct._object** %9, align 8, !dbg !4994, !tbaa !2100
  %tobool48.i = icmp eq %struct._object* %10, null, !dbg !4994
  br i1 %tobool48.i, label %do.end.60.i, label %if.then.49.i, !dbg !4995

if.then.49.i:                                     ; preds = %do.body.47.i
  %call52.i = tail call i32 %visit(%struct._object* %10, i8* %arg) #2, !dbg !4996
  tail call void @llvm.dbg.value(metadata i32 %call52.i, i64 0, metadata !896, metadata !1974) #2, !dbg !4996
  %tobool53.i = icmp eq i32 %call52.i, 0, !dbg !4997
  br i1 %tobool53.i, label %do.end.60.i, label %return, !dbg !4981

do.end.60.i:                                      ; preds = %if.then.49.i, %do.body.47.i
  br label %return, !dbg !4998

return:                                           ; preds = %do.end.60.i, %if.then.49.i, %if.then.35.i, %if.then.21.i, %if.then.7.i, %if.then.i, %if.then
  %retval.1 = phi i32 [ %call, %if.then ], [ 0, %do.end.60.i ], [ %call52.i, %if.then.49.i ], [ %call38.i, %if.then.35.i ], [ %call24.i, %if.then.21.i ], [ %call10.i, %if.then.7.i ], [ %call.i, %if.then.i ]
  ret i32 %retval.1, !dbg !4999
}

; Function Attrs: nounwind uwtable
define internal i32 @SystemExit_clear(%struct.PySystemExitObject* nocapture %self) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PySystemExitObject* %self, i64 0, metadata !1072, metadata !1974), !dbg !5000
  %code = getelementptr inbounds %struct.PySystemExitObject, %struct.PySystemExitObject* %self, i64 0, i32 7, !dbg !5001
  %0 = load %struct._object*, %struct._object** %code, align 8, !dbg !5001, !tbaa !4818
  tail call void @llvm.dbg.value(metadata %struct._object* %0, i64 0, metadata !1073, metadata !1974), !dbg !5001
  %cmp = icmp eq %struct._object* %0, null, !dbg !5002
  br i1 %cmp, label %if.end.5, label %if.then, !dbg !5003

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %code, align 8, !dbg !5004, !tbaa !4818
  tail call void @llvm.dbg.value(metadata %struct._object* %0, i64 0, metadata !1075, metadata !1974), !dbg !5005
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %0, i64 0, i32 0, !dbg !5006
  %1 = load i64, i64* %ob_refcnt, align 8, !dbg !5006, !tbaa !1991
  %dec = add i64 %1, -1, !dbg !5006
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5006, !tbaa !1991
  %cmp3 = icmp eq i64 %dec, 0, !dbg !5006
  br i1 %cmp3, label %if.else, label %if.end.5, !dbg !5007

if.else:                                          ; preds = %if.then
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i64 0, i32 1, !dbg !5008
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5008, !tbaa !2010
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i64 0, i32 4, !dbg !5008
  %3 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5008, !tbaa !2032
  tail call void %3(%struct._object* %0) #2, !dbg !5008
  br label %if.end.5

if.end.5:                                         ; preds = %if.else, %if.then, %entry
  %4 = bitcast %struct.PySystemExitObject* %self to %struct.PyBaseExceptionObject*, !dbg !5009
  %call = tail call i32 @BaseException_clear(%struct.PyBaseExceptionObject* %4), !dbg !5010
  ret i32 0, !dbg !5011
}

; Function Attrs: nounwind uwtable
define internal i32 @SystemExit_init(%struct.PySystemExitObject* nocapture %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PySystemExitObject* %self, i64 0, metadata !1083, metadata !1974), !dbg !5012
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1084, metadata !1974), !dbg !5013
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !1085, metadata !1974), !dbg !5014
  %0 = getelementptr inbounds %struct._object, %struct._object* %args, i64 1, i32 0, !dbg !5015
  %1 = load i64, i64* %0, align 8, !dbg !5015, !tbaa !2297
  tail call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !1086, metadata !1974), !dbg !5016
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1790, metadata !1974) #2, !dbg !5017
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !1791, metadata !1974) #2, !dbg !5020
  %2 = getelementptr inbounds %struct.PySystemExitObject, %struct.PySystemExitObject* %self, i64 0, i32 0, i32 1, !dbg !5021
  %3 = load %struct._typeobject*, %struct._typeobject** %2, align 8, !dbg !5021, !tbaa !2010
  %tp_name.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 1, !dbg !5022
  %4 = load i8*, i8** %tp_name.i, align 8, !dbg !5022, !tbaa !4130
  %call.i = tail call i32 @_PyArg_NoKeywords(i8* %4, %struct._object* %kwds) #2, !dbg !5023
  %tobool.i = icmp eq i32 %call.i, 0, !dbg !5023
  br i1 %tobool.i, label %cleanup, label %if.end.i, !dbg !5024

if.end.i:                                         ; preds = %entry
  %5 = getelementptr inbounds %struct.PySystemExitObject, %struct.PySystemExitObject* %self, i64 0, i32 2, !dbg !5025
  %6 = load %struct._object*, %struct._object** %5, align 8, !dbg !5025, !tbaa !4091
  tail call void @llvm.dbg.value(metadata %struct._object* %6, i64 0, metadata !1792, metadata !1974) #2, !dbg !5026
  store %struct._object* %args, %struct._object** %5, align 8, !dbg !5027, !tbaa !4091
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %args, i64 0, i32 0, !dbg !5028
  %7 = load i64, i64* %ob_refcnt.i, align 8, !dbg !5028, !tbaa !1991
  %inc.i = add i64 %7, 1, !dbg !5028
  store i64 %inc.i, i64* %ob_refcnt.i, align 8, !dbg !5028, !tbaa !1991
  tail call void @llvm.dbg.value(metadata %struct._object* %6, i64 0, metadata !1793, metadata !1974) #2, !dbg !5029
  %cmp.i = icmp eq %struct._object* %6, null, !dbg !5030
  br i1 %cmp.i, label %if.end, label %do.body.6.i, !dbg !5031

do.body.6.i:                                      ; preds = %if.end.i
  tail call void @llvm.dbg.value(metadata %struct._object* %6, i64 0, metadata !1795, metadata !1974) #2, !dbg !5032
  %ob_refcnt8.i = getelementptr inbounds %struct._object, %struct._object* %6, i64 0, i32 0, !dbg !5033
  %8 = load i64, i64* %ob_refcnt8.i, align 8, !dbg !5033, !tbaa !1991
  %dec.i = add i64 %8, -1, !dbg !5033
  store i64 %dec.i, i64* %ob_refcnt8.i, align 8, !dbg !5033, !tbaa !1991
  %cmp9.i = icmp eq i64 %dec.i, 0, !dbg !5033
  br i1 %cmp9.i, label %if.else.i, label %if.end, !dbg !5034

if.else.i:                                        ; preds = %do.body.6.i
  %ob_type11.i = getelementptr inbounds %struct._object, %struct._object* %6, i64 0, i32 1, !dbg !5035
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type11.i, align 8, !dbg !5035, !tbaa !2010
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i64 0, i32 4, !dbg !5035
  %10 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !5035, !tbaa !2032
  tail call void %10(%struct._object* %6) #2, !dbg !5035
  br label %if.end, !dbg !5036

if.end:                                           ; preds = %if.else.i, %do.body.6.i, %if.end.i
  %cmp1 = icmp eq i64 %1, 0, !dbg !5037
  br i1 %cmp1, label %cleanup, label %do.body, !dbg !5039

do.body:                                          ; preds = %if.end
  %code = getelementptr inbounds %struct.PySystemExitObject, %struct.PySystemExitObject* %self, i64 0, i32 7, !dbg !5040
  %11 = load %struct._object*, %struct._object** %code, align 8, !dbg !5040, !tbaa !4818
  tail call void @llvm.dbg.value(metadata %struct._object* %11, i64 0, metadata !1087, metadata !1974), !dbg !5040
  %cmp4 = icmp eq %struct._object* %11, null, !dbg !5042
  br i1 %cmp4, label %if.end.11, label %if.then.5, !dbg !5043

if.then.5:                                        ; preds = %do.body
  store %struct._object* null, %struct._object** %code, align 8, !dbg !5044, !tbaa !4818
  tail call void @llvm.dbg.value(metadata %struct._object* %11, i64 0, metadata !1089, metadata !1974), !dbg !5046
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i64 0, i32 0, !dbg !5048
  %12 = load i64, i64* %ob_refcnt, align 8, !dbg !5048, !tbaa !1991
  %dec = add i64 %12, -1, !dbg !5048
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5048, !tbaa !1991
  %cmp8 = icmp eq i64 %dec, 0, !dbg !5048
  br i1 %cmp8, label %if.else, label %if.end.11, !dbg !5050

if.else:                                          ; preds = %if.then.5
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i64 0, i32 1, !dbg !5051
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5051, !tbaa !2010
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i64 0, i32 4, !dbg !5051
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5051, !tbaa !2032
  tail call void %14(%struct._object* %11) #2, !dbg !5051
  br label %if.end.11

if.end.11:                                        ; preds = %if.else, %if.then.5, %do.body
  %cmp14 = icmp eq i64 %1, 1, !dbg !5053
  br i1 %cmp14, label %if.then.15, label %if.end.19, !dbg !5055

if.then.15:                                       ; preds = %if.end.11
  %ob_item = getelementptr inbounds %struct._object, %struct._object* %args, i64 1, i32 1, !dbg !5056
  %arrayidx = bitcast %struct._typeobject** %ob_item to %struct._object**, !dbg !5056
  %15 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !5056, !tbaa !2002
  br label %if.end.19, !dbg !5057

if.end.19:                                        ; preds = %if.end.11, %if.then.15
  %storemerge = phi %struct._object* [ %15, %if.then.15 ], [ %args, %if.end.11 ]
  store %struct._object* %storemerge, %struct._object** %code, align 8, !dbg !5058, !tbaa !4818
  %ob_refcnt21 = getelementptr inbounds %struct._object, %struct._object* %storemerge, i64 0, i32 0, !dbg !5059
  %16 = load i64, i64* %ob_refcnt21, align 8, !dbg !5059, !tbaa !1991
  %inc = add i64 %16, 1, !dbg !5059
  store i64 %inc, i64* %ob_refcnt21, align 8, !dbg !5059, !tbaa !1991
  br label %cleanup, !dbg !5060

cleanup:                                          ; preds = %entry, %if.end, %if.end.19
  %retval.0 = phi i32 [ 0, %if.end.19 ], [ 0, %if.end ], [ -1, %entry ]
  ret i32 %retval.0, !dbg !5061
}

; Function Attrs: nounwind uwtable
define internal void @ImportError_dealloc(%struct.PyImportErrorObject* %self) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PyImportErrorObject* %self, i64 0, metadata !1111, metadata !1974), !dbg !5062
  %add.ptr = getelementptr %struct.PyImportErrorObject, %struct.PyImportErrorObject* %self, i64 -1, i32 7, !dbg !5063
  %gc_refs = getelementptr inbounds %struct._object*, %struct._object** %add.ptr, i64 2, !dbg !5065
  %0 = bitcast %struct._object** %gc_refs to i64*, !dbg !5065
  %1 = load i64, i64* %0, align 8, !dbg !5065, !tbaa !4432
  %and = and i64 %1, 1, !dbg !5065
  %or = or i64 %and, -4, !dbg !5065
  store i64 %or, i64* %0, align 8, !dbg !5065, !tbaa !4432
  %gc_next = bitcast %struct._object** %add.ptr to %union._gc_head**, !dbg !5068
  %2 = bitcast %struct._object** %add.ptr to i64*, !dbg !5068
  %3 = load i64, i64* %2, align 8, !dbg !5068, !tbaa !4436
  %gc_prev = getelementptr inbounds %struct._object*, %struct._object** %add.ptr, i64 1, !dbg !5068
  %4 = bitcast %struct._object** %gc_prev to i64**, !dbg !5068
  %5 = load i64*, i64** %4, align 8, !dbg !5068, !tbaa !4437
  store i64 %3, i64* %5, align 8, !dbg !5068, !tbaa !4436
  %6 = ptrtoint i64* %5 to i64, !dbg !5068
  %7 = bitcast %struct._object** %add.ptr to %struct.anon.0**, !dbg !5068
  %8 = load %struct.anon.0*, %struct.anon.0** %7, align 8, !dbg !5068, !tbaa !4436
  %gc_prev13 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %8, i64 0, i32 1, !dbg !5068
  %9 = bitcast %union._gc_head** %gc_prev13 to i64*, !dbg !5068
  store i64 %6, i64* %9, align 8, !dbg !5068, !tbaa !4437
  store %union._gc_head* null, %union._gc_head** %gc_next, align 8, !dbg !5068, !tbaa !4436
  tail call void @llvm.dbg.value(metadata %struct.PyImportErrorObject* %self, i64 0, metadata !1142, metadata !1974) #2, !dbg !5070
  %msg.i = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %self, i64 0, i32 7, !dbg !5072
  %10 = load %struct._object*, %struct._object** %msg.i, align 8, !dbg !5072, !tbaa !5074
  tail call void @llvm.dbg.value(metadata %struct._object* %10, i64 0, metadata !1143, metadata !1974) #2, !dbg !5072
  %cmp.i = icmp eq %struct._object* %10, null, !dbg !5076
  br i1 %cmp.i, label %if.end.5.i, label %if.then.i, !dbg !5077

if.then.i:                                        ; preds = %entry
  store %struct._object* null, %struct._object** %msg.i, align 8, !dbg !5078, !tbaa !5074
  tail call void @llvm.dbg.value(metadata %struct._object* %10, i64 0, metadata !1145, metadata !1974) #2, !dbg !5080
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %10, i64 0, i32 0, !dbg !5082
  %11 = load i64, i64* %ob_refcnt.i, align 8, !dbg !5082, !tbaa !1991
  %dec.i = add i64 %11, -1, !dbg !5082
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !5082, !tbaa !1991
  %cmp3.i = icmp eq i64 %dec.i, 0, !dbg !5082
  br i1 %cmp3.i, label %if.else.i, label %if.end.5.i, !dbg !5084

if.else.i:                                        ; preds = %if.then.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %10, i64 0, i32 1, !dbg !5085
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !5085, !tbaa !2010
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i64 0, i32 4, !dbg !5085
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !5085, !tbaa !2032
  tail call void %13(%struct._object* %10) #2, !dbg !5085
  br label %if.end.5.i, !dbg !5087

if.end.5.i:                                       ; preds = %if.else.i, %if.then.i, %entry
  %name.i = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %self, i64 0, i32 8, !dbg !5088
  %14 = load %struct._object*, %struct._object** %name.i, align 8, !dbg !5088, !tbaa !5090
  tail call void @llvm.dbg.value(metadata %struct._object* %14, i64 0, metadata !1149, metadata !1974) #2, !dbg !5088
  %cmp10.i = icmp eq %struct._object* %14, null, !dbg !5091
  br i1 %cmp10.i, label %if.end.25.i, label %if.then.11.i, !dbg !5092

if.then.11.i:                                     ; preds = %if.end.5.i
  store %struct._object* null, %struct._object** %name.i, align 8, !dbg !5093, !tbaa !5090
  tail call void @llvm.dbg.value(metadata %struct._object* %14, i64 0, metadata !1151, metadata !1974) #2, !dbg !5095
  %ob_refcnt15.i = getelementptr inbounds %struct._object, %struct._object* %14, i64 0, i32 0, !dbg !5097
  %15 = load i64, i64* %ob_refcnt15.i, align 8, !dbg !5097, !tbaa !1991
  %dec16.i = add i64 %15, -1, !dbg !5097
  store i64 %dec16.i, i64* %ob_refcnt15.i, align 8, !dbg !5097, !tbaa !1991
  %cmp17.i = icmp eq i64 %dec16.i, 0, !dbg !5097
  br i1 %cmp17.i, label %if.else.19.i, label %if.end.25.i, !dbg !5099

if.else.19.i:                                     ; preds = %if.then.11.i
  %ob_type20.i = getelementptr inbounds %struct._object, %struct._object* %14, i64 0, i32 1, !dbg !5100
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type20.i, align 8, !dbg !5100, !tbaa !2010
  %tp_dealloc21.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %16, i64 0, i32 4, !dbg !5100
  %17 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc21.i, align 8, !dbg !5100, !tbaa !2032
  tail call void %17(%struct._object* %14) #2, !dbg !5100
  br label %if.end.25.i, !dbg !5087

if.end.25.i:                                      ; preds = %if.else.19.i, %if.then.11.i, %if.end.5.i
  %path.i = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %self, i64 0, i32 9, !dbg !5102
  %18 = load %struct._object*, %struct._object** %path.i, align 8, !dbg !5102, !tbaa !5104
  tail call void @llvm.dbg.value(metadata %struct._object* %18, i64 0, metadata !1155, metadata !1974) #2, !dbg !5102
  %cmp30.i = icmp eq %struct._object* %18, null, !dbg !5105
  br i1 %cmp30.i, label %ImportError_clear.exit, label %if.then.31.i, !dbg !5106

if.then.31.i:                                     ; preds = %if.end.25.i
  store %struct._object* null, %struct._object** %path.i, align 8, !dbg !5107, !tbaa !5104
  tail call void @llvm.dbg.value(metadata %struct._object* %18, i64 0, metadata !1157, metadata !1974) #2, !dbg !5109
  %ob_refcnt35.i = getelementptr inbounds %struct._object, %struct._object* %18, i64 0, i32 0, !dbg !5111
  %19 = load i64, i64* %ob_refcnt35.i, align 8, !dbg !5111, !tbaa !1991
  %dec36.i = add i64 %19, -1, !dbg !5111
  store i64 %dec36.i, i64* %ob_refcnt35.i, align 8, !dbg !5111, !tbaa !1991
  %cmp37.i = icmp eq i64 %dec36.i, 0, !dbg !5111
  br i1 %cmp37.i, label %if.else.39.i, label %ImportError_clear.exit, !dbg !5113

if.else.39.i:                                     ; preds = %if.then.31.i
  %ob_type40.i = getelementptr inbounds %struct._object, %struct._object* %18, i64 0, i32 1, !dbg !5114
  %20 = load %struct._typeobject*, %struct._typeobject** %ob_type40.i, align 8, !dbg !5114, !tbaa !2010
  %tp_dealloc41.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %20, i64 0, i32 4, !dbg !5114
  %21 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc41.i, align 8, !dbg !5114, !tbaa !2032
  tail call void %21(%struct._object* %18) #2, !dbg !5114
  br label %ImportError_clear.exit, !dbg !5087

ImportError_clear.exit:                           ; preds = %if.end.25.i, %if.then.31.i, %if.else.39.i
  %22 = bitcast %struct.PyImportErrorObject* %self to %struct.PyBaseExceptionObject*, !dbg !5116
  %call.i = tail call i32 @BaseException_clear(%struct.PyBaseExceptionObject* %22) #2, !dbg !5117
  %ob_type = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %self, i64 0, i32 0, i32 1, !dbg !5118
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5118, !tbaa !2010
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %23, i64 0, i32 38, !dbg !5119
  %24 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !5119, !tbaa !4230
  %25 = bitcast %struct.PyImportErrorObject* %self to i8*, !dbg !5120
  tail call void %24(i8* %25) #2, !dbg !5118
  ret void, !dbg !5121
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ImportError_str(%struct.PyImportErrorObject* nocapture readonly %self) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PyImportErrorObject* %self, i64 0, metadata !1118, metadata !1974), !dbg !5122
  %msg = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %self, i64 0, i32 7, !dbg !5123
  %0 = load %struct._object*, %struct._object** %msg, align 8, !dbg !5125, !tbaa !5074
  %tobool = icmp eq %struct._object* %0, null, !dbg !5127
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !5128

land.lhs.true:                                    ; preds = %entry
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i64 0, i32 1, !dbg !5129
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5129, !tbaa !2010
  %cmp = icmp eq %struct._typeobject* %1, @PyUnicode_Type, !dbg !5129
  br i1 %cmp, label %if.then, label %if.else, !dbg !5131

if.then:                                          ; preds = %land.lhs.true
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %0, i64 0, i32 0, !dbg !5132
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !5132, !tbaa !1991
  %inc = add i64 %2, 1, !dbg !5132
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !5132, !tbaa !1991
  br label %return, !dbg !5133

if.else:                                          ; preds = %entry, %land.lhs.true
  %3 = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %self, i64 0, i32 2, !dbg !5134
  %4 = load %struct._object*, %struct._object** %3, align 8, !dbg !5134, !tbaa !4091
  %5 = getelementptr inbounds %struct._object, %struct._object* %4, i64 1, i32 0, !dbg !5134
  %6 = load i64, i64* %5, align 8, !dbg !5134, !tbaa !2297
  switch i64 %6, label %sw.default.i [
    i64 0, label %sw.bb.i
    i64 1, label %sw.bb.1.i
  ], !dbg !5137

sw.bb.i:                                          ; preds = %if.else
  %call.i = tail call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.84, i64 0, i64 0)) #2, !dbg !5138
  br label %return, !dbg !5139

sw.bb.1.i:                                        ; preds = %if.else
  %ob_item.i = getelementptr inbounds %struct._object, %struct._object* %4, i64 1, i32 1, !dbg !5140
  %arrayidx.i = bitcast %struct._typeobject** %ob_item.i to %struct._object**, !dbg !5140
  %7 = load %struct._object*, %struct._object** %arrayidx.i, align 8, !dbg !5140, !tbaa !2002
  %call3.i = tail call %struct._object* @PyObject_Str(%struct._object* %7) #2, !dbg !5141
  br label %return, !dbg !5142

sw.default.i:                                     ; preds = %if.else
  %call5.i = tail call %struct._object* @PyObject_Str(%struct._object* %4) #2, !dbg !5143
  br label %return, !dbg !5144

return:                                           ; preds = %sw.default.i, %sw.bb.1.i, %sw.bb.i, %if.then
  %retval.0 = phi %struct._object* [ %0, %if.then ], [ %call5.i, %sw.default.i ], [ %call3.i, %sw.bb.1.i ], [ %call.i, %sw.bb.i ]
  ret %struct._object* %retval.0, !dbg !5145
}

; Function Attrs: nounwind uwtable
define internal i32 @ImportError_traverse(%struct.PyImportErrorObject* nocapture readonly %self, i32 (%struct._object*, i8*)* nocapture %visit, i8* %arg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PyImportErrorObject* %self, i64 0, metadata !1123, metadata !1974), !dbg !5146
  tail call void @llvm.dbg.value(metadata i32 (%struct._object*, i8*)* %visit, i64 0, metadata !1124, metadata !1974), !dbg !5147
  tail call void @llvm.dbg.value(metadata i8* %arg, i64 0, metadata !1125, metadata !1974), !dbg !5148
  %msg = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %self, i64 0, i32 7, !dbg !5149
  %0 = load %struct._object*, %struct._object** %msg, align 8, !dbg !5149, !tbaa !5074
  %tobool = icmp eq %struct._object* %0, null, !dbg !5149
  br i1 %tobool, label %do.body.5, label %if.then, !dbg !5151

if.then:                                          ; preds = %entry
  %call = tail call i32 %visit(%struct._object* %0, i8* %arg) #2, !dbg !5152
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !1126, metadata !1974), !dbg !5152
  %tobool2 = icmp eq i32 %call, 0, !dbg !5154
  br i1 %tobool2, label %do.body.5, label %return

do.body.5:                                        ; preds = %entry, %if.then
  %name = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %self, i64 0, i32 8, !dbg !5156
  %1 = load %struct._object*, %struct._object** %name, align 8, !dbg !5156, !tbaa !5090
  %tobool6 = icmp eq %struct._object* %1, null, !dbg !5156
  br i1 %tobool6, label %do.body.19, label %if.then.7, !dbg !5158

if.then.7:                                        ; preds = %do.body.5
  %call10 = tail call i32 %visit(%struct._object* %1, i8* %arg) #2, !dbg !5159
  tail call void @llvm.dbg.value(metadata i32 %call10, i64 0, metadata !1130, metadata !1974), !dbg !5159
  %tobool11 = icmp eq i32 %call10, 0, !dbg !5161
  br i1 %tobool11, label %do.body.19, label %return

do.body.19:                                       ; preds = %do.body.5, %if.then.7
  %path = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %self, i64 0, i32 9, !dbg !5163
  %2 = load %struct._object*, %struct._object** %path, align 8, !dbg !5163, !tbaa !5104
  %tobool20 = icmp eq %struct._object* %2, null, !dbg !5163
  br i1 %tobool20, label %do.end.32, label %if.then.21, !dbg !5165

if.then.21:                                       ; preds = %do.body.19
  %call24 = tail call i32 %visit(%struct._object* %2, i8* %arg) #2, !dbg !5166
  tail call void @llvm.dbg.value(metadata i32 %call24, i64 0, metadata !1134, metadata !1974), !dbg !5166
  %tobool25 = icmp eq i32 %call24, 0, !dbg !5168
  br i1 %tobool25, label %do.end.32, label %return

do.end.32:                                        ; preds = %do.body.19, %if.then.21
  tail call void @llvm.dbg.value(metadata i32 (%struct._object*, i8*)* %visit, i64 0, metadata !878, metadata !1974) #2, !dbg !5170
  tail call void @llvm.dbg.value(metadata i8* %arg, i64 0, metadata !879, metadata !1974) #2, !dbg !5172
  %3 = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %self, i64 0, i32 1, !dbg !5173
  %4 = load %struct._object*, %struct._object** %3, align 8, !dbg !5173, !tbaa !4084
  %tobool.i = icmp eq %struct._object* %4, null, !dbg !5173
  br i1 %tobool.i, label %do.body.5.i, label %if.then.i, !dbg !5174

if.then.i:                                        ; preds = %do.end.32
  %call.i = tail call i32 %visit(%struct._object* %4, i8* %arg) #2, !dbg !5175
  tail call void @llvm.dbg.value(metadata i32 %call.i, i64 0, metadata !880, metadata !1974) #2, !dbg !5175
  %tobool2.i = icmp eq i32 %call.i, 0, !dbg !5176
  br i1 %tobool2.i, label %do.body.5.i, label %return, !dbg !5177

do.body.5.i:                                      ; preds = %if.then.i, %do.end.32
  %5 = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %self, i64 0, i32 2, !dbg !5178
  %6 = load %struct._object*, %struct._object** %5, align 8, !dbg !5178, !tbaa !4091
  %tobool6.i = icmp eq %struct._object* %6, null, !dbg !5178
  br i1 %tobool6.i, label %do.body.19.i, label %if.then.7.i, !dbg !5179

if.then.7.i:                                      ; preds = %do.body.5.i
  %call10.i = tail call i32 %visit(%struct._object* %6, i8* %arg) #2, !dbg !5180
  tail call void @llvm.dbg.value(metadata i32 %call10.i, i64 0, metadata !884, metadata !1974) #2, !dbg !5180
  %tobool11.i = icmp eq i32 %call10.i, 0, !dbg !5181
  br i1 %tobool11.i, label %do.body.19.i, label %return, !dbg !5177

do.body.19.i:                                     ; preds = %if.then.7.i, %do.body.5.i
  %7 = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %self, i64 0, i32 3, !dbg !5182
  %8 = load %struct._object*, %struct._object** %7, align 8, !dbg !5182, !tbaa !1979
  %tobool20.i = icmp eq %struct._object* %8, null, !dbg !5182
  br i1 %tobool20.i, label %do.body.33.i, label %if.then.21.i, !dbg !5183

if.then.21.i:                                     ; preds = %do.body.19.i
  %call24.i = tail call i32 %visit(%struct._object* %8, i8* %arg) #2, !dbg !5184
  tail call void @llvm.dbg.value(metadata i32 %call24.i, i64 0, metadata !888, metadata !1974) #2, !dbg !5184
  %tobool25.i = icmp eq i32 %call24.i, 0, !dbg !5185
  br i1 %tobool25.i, label %do.body.33.i, label %return, !dbg !5177

do.body.33.i:                                     ; preds = %if.then.21.i, %do.body.19.i
  %9 = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %self, i64 0, i32 5, !dbg !5186
  %10 = load %struct._object*, %struct._object** %9, align 8, !dbg !5186, !tbaa !2068
  %tobool34.i = icmp eq %struct._object* %10, null, !dbg !5186
  br i1 %tobool34.i, label %do.body.47.i, label %if.then.35.i, !dbg !5187

if.then.35.i:                                     ; preds = %do.body.33.i
  %call38.i = tail call i32 %visit(%struct._object* %10, i8* %arg) #2, !dbg !5188
  tail call void @llvm.dbg.value(metadata i32 %call38.i, i64 0, metadata !892, metadata !1974) #2, !dbg !5188
  %tobool39.i = icmp eq i32 %call38.i, 0, !dbg !5189
  br i1 %tobool39.i, label %do.body.47.i, label %return, !dbg !5177

do.body.47.i:                                     ; preds = %if.then.35.i, %do.body.33.i
  %11 = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %self, i64 0, i32 4, !dbg !5190
  %12 = load %struct._object*, %struct._object** %11, align 8, !dbg !5190, !tbaa !2100
  %tobool48.i = icmp eq %struct._object* %12, null, !dbg !5190
  br i1 %tobool48.i, label %do.end.60.i, label %if.then.49.i, !dbg !5191

if.then.49.i:                                     ; preds = %do.body.47.i
  %call52.i = tail call i32 %visit(%struct._object* %12, i8* %arg) #2, !dbg !5192
  tail call void @llvm.dbg.value(metadata i32 %call52.i, i64 0, metadata !896, metadata !1974) #2, !dbg !5192
  %tobool53.i = icmp eq i32 %call52.i, 0, !dbg !5193
  br i1 %tobool53.i, label %do.end.60.i, label %return, !dbg !5177

do.end.60.i:                                      ; preds = %if.then.49.i, %do.body.47.i
  br label %return, !dbg !5194

return:                                           ; preds = %do.end.60.i, %if.then.49.i, %if.then.35.i, %if.then.21.i, %if.then.7.i, %if.then.i, %if.then.21, %if.then.7, %if.then
  %retval.5 = phi i32 [ %call24, %if.then.21 ], [ %call10, %if.then.7 ], [ %call, %if.then ], [ 0, %do.end.60.i ], [ %call52.i, %if.then.49.i ], [ %call38.i, %if.then.35.i ], [ %call24.i, %if.then.21.i ], [ %call10.i, %if.then.7.i ], [ %call.i, %if.then.i ]
  ret i32 %retval.5, !dbg !5195
}

; Function Attrs: nounwind uwtable
define internal i32 @ImportError_clear(%struct.PyImportErrorObject* nocapture %self) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PyImportErrorObject* %self, i64 0, metadata !1142, metadata !1974), !dbg !5196
  %msg = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %self, i64 0, i32 7, !dbg !5197
  %0 = load %struct._object*, %struct._object** %msg, align 8, !dbg !5197, !tbaa !5074
  tail call void @llvm.dbg.value(metadata %struct._object* %0, i64 0, metadata !1143, metadata !1974), !dbg !5197
  %cmp = icmp eq %struct._object* %0, null, !dbg !5198
  br i1 %cmp, label %if.end.5, label %if.then, !dbg !5199

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %msg, align 8, !dbg !5200, !tbaa !5074
  tail call void @llvm.dbg.value(metadata %struct._object* %0, i64 0, metadata !1145, metadata !1974), !dbg !5201
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %0, i64 0, i32 0, !dbg !5202
  %1 = load i64, i64* %ob_refcnt, align 8, !dbg !5202, !tbaa !1991
  %dec = add i64 %1, -1, !dbg !5202
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5202, !tbaa !1991
  %cmp3 = icmp eq i64 %dec, 0, !dbg !5202
  br i1 %cmp3, label %if.else, label %if.end.5, !dbg !5203

if.else:                                          ; preds = %if.then
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i64 0, i32 1, !dbg !5204
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5204, !tbaa !2010
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i64 0, i32 4, !dbg !5204
  %3 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5204, !tbaa !2032
  tail call void %3(%struct._object* %0) #2, !dbg !5204
  br label %if.end.5

if.end.5:                                         ; preds = %if.else, %if.then, %entry
  %name = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %self, i64 0, i32 8, !dbg !5205
  %4 = load %struct._object*, %struct._object** %name, align 8, !dbg !5205, !tbaa !5090
  tail call void @llvm.dbg.value(metadata %struct._object* %4, i64 0, metadata !1149, metadata !1974), !dbg !5205
  %cmp10 = icmp eq %struct._object* %4, null, !dbg !5206
  br i1 %cmp10, label %if.end.25, label %if.then.11, !dbg !5207

if.then.11:                                       ; preds = %if.end.5
  store %struct._object* null, %struct._object** %name, align 8, !dbg !5208, !tbaa !5090
  tail call void @llvm.dbg.value(metadata %struct._object* %4, i64 0, metadata !1151, metadata !1974), !dbg !5209
  %ob_refcnt15 = getelementptr inbounds %struct._object, %struct._object* %4, i64 0, i32 0, !dbg !5210
  %5 = load i64, i64* %ob_refcnt15, align 8, !dbg !5210, !tbaa !1991
  %dec16 = add i64 %5, -1, !dbg !5210
  store i64 %dec16, i64* %ob_refcnt15, align 8, !dbg !5210, !tbaa !1991
  %cmp17 = icmp eq i64 %dec16, 0, !dbg !5210
  br i1 %cmp17, label %if.else.19, label %if.end.25, !dbg !5211

if.else.19:                                       ; preds = %if.then.11
  %ob_type20 = getelementptr inbounds %struct._object, %struct._object* %4, i64 0, i32 1, !dbg !5212
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type20, align 8, !dbg !5212, !tbaa !2010
  %tp_dealloc21 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i64 0, i32 4, !dbg !5212
  %7 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc21, align 8, !dbg !5212, !tbaa !2032
  tail call void %7(%struct._object* %4) #2, !dbg !5212
  br label %if.end.25

if.end.25:                                        ; preds = %if.else.19, %if.then.11, %if.end.5
  %path = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %self, i64 0, i32 9, !dbg !5213
  %8 = load %struct._object*, %struct._object** %path, align 8, !dbg !5213, !tbaa !5104
  tail call void @llvm.dbg.value(metadata %struct._object* %8, i64 0, metadata !1155, metadata !1974), !dbg !5213
  %cmp30 = icmp eq %struct._object* %8, null, !dbg !5214
  br i1 %cmp30, label %if.end.45, label %if.then.31, !dbg !5215

if.then.31:                                       ; preds = %if.end.25
  store %struct._object* null, %struct._object** %path, align 8, !dbg !5216, !tbaa !5104
  tail call void @llvm.dbg.value(metadata %struct._object* %8, i64 0, metadata !1157, metadata !1974), !dbg !5217
  %ob_refcnt35 = getelementptr inbounds %struct._object, %struct._object* %8, i64 0, i32 0, !dbg !5218
  %9 = load i64, i64* %ob_refcnt35, align 8, !dbg !5218, !tbaa !1991
  %dec36 = add i64 %9, -1, !dbg !5218
  store i64 %dec36, i64* %ob_refcnt35, align 8, !dbg !5218, !tbaa !1991
  %cmp37 = icmp eq i64 %dec36, 0, !dbg !5218
  br i1 %cmp37, label %if.else.39, label %if.end.45, !dbg !5219

if.else.39:                                       ; preds = %if.then.31
  %ob_type40 = getelementptr inbounds %struct._object, %struct._object* %8, i64 0, i32 1, !dbg !5220
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type40, align 8, !dbg !5220, !tbaa !2010
  %tp_dealloc41 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i64 0, i32 4, !dbg !5220
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc41, align 8, !dbg !5220, !tbaa !2032
  tail call void %11(%struct._object* %8) #2, !dbg !5220
  br label %if.end.45

if.end.45:                                        ; preds = %if.else.39, %if.then.31, %if.end.25
  %12 = bitcast %struct.PyImportErrorObject* %self to %struct.PyBaseExceptionObject*, !dbg !5221
  %call = tail call i32 @BaseException_clear(%struct.PyBaseExceptionObject* %12), !dbg !5222
  ret i32 0, !dbg !5223
}

; Function Attrs: nounwind uwtable
define internal i32 @ImportError_init(%struct.PyImportErrorObject* nocapture %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %msg = alloca %struct._object*, align 8
  tail call void @llvm.dbg.value(metadata %struct.PyImportErrorObject* %self, i64 0, metadata !1165, metadata !1974), !dbg !5224
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1166, metadata !1974), !dbg !5225
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !1167, metadata !1974), !dbg !5226
  %0 = bitcast %struct._object** %msg to i8*, !dbg !5227
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !5227
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1168, metadata !1974), !dbg !5228
  store %struct._object* null, %struct._object** %msg, align 8, !dbg !5228, !tbaa !2002
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1169, metadata !1974), !dbg !5229
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1170, metadata !1974), !dbg !5230
  %tobool = icmp eq %struct._object* %kwds, null, !dbg !5231
  br i1 %tobool, label %if.end.53, label %if.then, !dbg !5232

if.then:                                          ; preds = %entry
  %call = tail call %struct._object* @PyDict_GetItemString(%struct._object* %kwds, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.115, i64 0, i64 0)) #2, !dbg !5233
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1169, metadata !1974), !dbg !5229
  %tobool1 = icmp eq %struct._object* %call, null, !dbg !5234
  br i1 %tobool1, label %if.end.19, label %do.body, !dbg !5233

do.body:                                          ; preds = %if.then
  %name3 = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %self, i64 0, i32 8, !dbg !5235
  %1 = load %struct._object*, %struct._object** %name3, align 8, !dbg !5235, !tbaa !5090
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1171, metadata !1974), !dbg !5235
  %cmp = icmp eq %struct._object* %1, null, !dbg !5237
  br i1 %cmp, label %if.end.9, label %if.then.4, !dbg !5238

if.then.4:                                        ; preds = %do.body
  store %struct._object* null, %struct._object** %name3, align 8, !dbg !5239, !tbaa !5090
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1178, metadata !1974), !dbg !5241
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !5243
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !5243, !tbaa !1991
  %dec = add i64 %2, -1, !dbg !5243
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5243, !tbaa !1991
  %cmp7 = icmp eq i64 %dec, 0, !dbg !5243
  br i1 %cmp7, label %if.else, label %if.end.9, !dbg !5245

if.else:                                          ; preds = %if.then.4
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !5246
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5246, !tbaa !2010
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 4, !dbg !5246
  %4 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5246, !tbaa !2032
  tail call void %4(%struct._object* %1) #2, !dbg !5246
  br label %if.end.9

if.end.9:                                         ; preds = %if.else, %if.then.4, %do.body
  store %struct._object* %call, %struct._object** %name3, align 8, !dbg !5248, !tbaa !5090
  %ob_refcnt14 = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 0, !dbg !5248
  %5 = load i64, i64* %ob_refcnt14, align 8, !dbg !5248, !tbaa !1991
  %inc = add i64 %5, 1, !dbg !5248
  store i64 %inc, i64* %ob_refcnt14, align 8, !dbg !5248, !tbaa !1991
  %call15 = tail call i32 @PyDict_DelItemString(%struct._object* %kwds, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.115, i64 0, i64 0)) #2, !dbg !5250
  %tobool16 = icmp eq i32 %call15, 0, !dbg !5250
  br i1 %tobool16, label %if.end.19, label %cleanup, !dbg !5252

if.end.19:                                        ; preds = %if.end.9, %if.then
  %call20 = tail call %struct._object* @PyDict_GetItemString(%struct._object* %kwds, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.117, i64 0, i64 0)) #2, !dbg !5253
  tail call void @llvm.dbg.value(metadata %struct._object* %call20, i64 0, metadata !1170, metadata !1974), !dbg !5230
  %tobool21 = icmp eq %struct._object* %call20, null, !dbg !5254
  br i1 %tobool21, label %if.end.53, label %do.body.23, !dbg !5253

do.body.23:                                       ; preds = %if.end.19
  %path25 = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %self, i64 0, i32 9, !dbg !5255
  %6 = load %struct._object*, %struct._object** %path25, align 8, !dbg !5255, !tbaa !5104
  tail call void @llvm.dbg.value(metadata %struct._object* %6, i64 0, metadata !1182, metadata !1974), !dbg !5255
  %cmp26 = icmp eq %struct._object* %6, null, !dbg !5257
  br i1 %cmp26, label %if.end.41, label %if.then.27, !dbg !5258

if.then.27:                                       ; preds = %do.body.23
  store %struct._object* null, %struct._object** %path25, align 8, !dbg !5259, !tbaa !5104
  tail call void @llvm.dbg.value(metadata %struct._object* %6, i64 0, metadata !1187, metadata !1974), !dbg !5261
  %ob_refcnt31 = getelementptr inbounds %struct._object, %struct._object* %6, i64 0, i32 0, !dbg !5263
  %7 = load i64, i64* %ob_refcnt31, align 8, !dbg !5263, !tbaa !1991
  %dec32 = add i64 %7, -1, !dbg !5263
  store i64 %dec32, i64* %ob_refcnt31, align 8, !dbg !5263, !tbaa !1991
  %cmp33 = icmp eq i64 %dec32, 0, !dbg !5263
  br i1 %cmp33, label %if.else.35, label %if.end.41, !dbg !5265

if.else.35:                                       ; preds = %if.then.27
  %ob_type36 = getelementptr inbounds %struct._object, %struct._object* %6, i64 0, i32 1, !dbg !5266
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type36, align 8, !dbg !5266, !tbaa !2010
  %tp_dealloc37 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i64 0, i32 4, !dbg !5266
  %9 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc37, align 8, !dbg !5266, !tbaa !2032
  tail call void %9(%struct._object* %6) #2, !dbg !5266
  br label %if.end.41

if.end.41:                                        ; preds = %if.else.35, %if.then.27, %do.body.23
  store %struct._object* %call20, %struct._object** %path25, align 8, !dbg !5268, !tbaa !5104
  %ob_refcnt46 = getelementptr inbounds %struct._object, %struct._object* %call20, i64 0, i32 0, !dbg !5268
  %10 = load i64, i64* %ob_refcnt46, align 8, !dbg !5268, !tbaa !1991
  %inc47 = add i64 %10, 1, !dbg !5268
  store i64 %inc47, i64* %ob_refcnt46, align 8, !dbg !5268, !tbaa !1991
  %call48 = tail call i32 @PyDict_DelItemString(%struct._object* %kwds, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.117, i64 0, i64 0)) #2, !dbg !5270
  %tobool49 = icmp eq i32 %call48, 0, !dbg !5270
  br i1 %tobool49, label %if.end.53, label %cleanup, !dbg !5272

if.end.53:                                        ; preds = %if.end.41, %if.end.19, %entry
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1790, metadata !1974) #2, !dbg !5273
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !1791, metadata !1974) #2, !dbg !5276
  %11 = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %self, i64 0, i32 0, i32 1, !dbg !5277
  %12 = load %struct._typeobject*, %struct._typeobject** %11, align 8, !dbg !5277, !tbaa !2010
  %tp_name.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i64 0, i32 1, !dbg !5278
  %13 = load i8*, i8** %tp_name.i, align 8, !dbg !5278, !tbaa !4130
  %call.i = tail call i32 @_PyArg_NoKeywords(i8* %13, %struct._object* %kwds) #2, !dbg !5279
  %tobool.i = icmp eq i32 %call.i, 0, !dbg !5279
  br i1 %tobool.i, label %cleanup, label %if.end.i, !dbg !5280

if.end.i:                                         ; preds = %if.end.53
  %14 = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %self, i64 0, i32 2, !dbg !5281
  %15 = load %struct._object*, %struct._object** %14, align 8, !dbg !5281, !tbaa !4091
  tail call void @llvm.dbg.value(metadata %struct._object* %15, i64 0, metadata !1792, metadata !1974) #2, !dbg !5282
  store %struct._object* %args, %struct._object** %14, align 8, !dbg !5283, !tbaa !4091
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %args, i64 0, i32 0, !dbg !5284
  %16 = load i64, i64* %ob_refcnt.i, align 8, !dbg !5284, !tbaa !1991
  %inc.i = add i64 %16, 1, !dbg !5284
  store i64 %inc.i, i64* %ob_refcnt.i, align 8, !dbg !5284, !tbaa !1991
  tail call void @llvm.dbg.value(metadata %struct._object* %15, i64 0, metadata !1793, metadata !1974) #2, !dbg !5285
  %cmp.i = icmp eq %struct._object* %15, null, !dbg !5286
  br i1 %cmp.i, label %if.end.57, label %do.body.6.i, !dbg !5287

do.body.6.i:                                      ; preds = %if.end.i
  tail call void @llvm.dbg.value(metadata %struct._object* %15, i64 0, metadata !1795, metadata !1974) #2, !dbg !5288
  %ob_refcnt8.i = getelementptr inbounds %struct._object, %struct._object* %15, i64 0, i32 0, !dbg !5289
  %17 = load i64, i64* %ob_refcnt8.i, align 8, !dbg !5289, !tbaa !1991
  %dec.i = add i64 %17, -1, !dbg !5289
  store i64 %dec.i, i64* %ob_refcnt8.i, align 8, !dbg !5289, !tbaa !1991
  %cmp9.i = icmp eq i64 %dec.i, 0, !dbg !5289
  br i1 %cmp9.i, label %if.else.i, label %if.end.57, !dbg !5290

if.else.i:                                        ; preds = %do.body.6.i
  %ob_type11.i = getelementptr inbounds %struct._object, %struct._object* %15, i64 0, i32 1, !dbg !5291
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type11.i, align 8, !dbg !5291, !tbaa !2010
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i64 0, i32 4, !dbg !5291
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !5291, !tbaa !2032
  tail call void %19(%struct._object* %15) #2, !dbg !5291
  br label %if.end.57, !dbg !5292

if.end.57:                                        ; preds = %if.else.i, %do.body.6.i, %if.end.i
  %20 = getelementptr inbounds %struct._object, %struct._object* %args, i64 1, i32 0, !dbg !5293
  %21 = load i64, i64* %20, align 8, !dbg !5293, !tbaa !2297
  %cmp58 = icmp eq i64 %21, 1, !dbg !5295
  br i1 %cmp58, label %if.end.60, label %cleanup, !dbg !5296

if.end.60:                                        ; preds = %if.end.57
  tail call void @llvm.dbg.value(metadata %struct._object** %msg, i64 0, metadata !1168, metadata !1974), !dbg !5228
  %call61 = call i32 (%struct._object*, i8*, i64, i64, ...) @PyArg_UnpackTuple(%struct._object* %args, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i64 0, i64 0), i64 1, i64 1, %struct._object** nonnull %msg) #2, !dbg !5297
  %tobool62 = icmp eq i32 %call61, 0, !dbg !5297
  br i1 %tobool62, label %cleanup, label %do.body.65, !dbg !5299

do.body.65:                                       ; preds = %if.end.60
  %msg67 = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %self, i64 0, i32 7, !dbg !5300
  %22 = load %struct._object*, %struct._object** %msg67, align 8, !dbg !5300, !tbaa !5074
  call void @llvm.dbg.value(metadata %struct._object* %22, i64 0, metadata !1191, metadata !1974), !dbg !5300
  %cmp68 = icmp eq %struct._object* %22, null, !dbg !5302
  br i1 %cmp68, label %if.end.83, label %if.then.69, !dbg !5303

if.then.69:                                       ; preds = %do.body.65
  store %struct._object* null, %struct._object** %msg67, align 8, !dbg !5304, !tbaa !5074
  call void @llvm.dbg.value(metadata %struct._object* %22, i64 0, metadata !1193, metadata !1974), !dbg !5306
  %ob_refcnt73 = getelementptr inbounds %struct._object, %struct._object* %22, i64 0, i32 0, !dbg !5308
  %23 = load i64, i64* %ob_refcnt73, align 8, !dbg !5308, !tbaa !1991
  %dec74 = add i64 %23, -1, !dbg !5308
  store i64 %dec74, i64* %ob_refcnt73, align 8, !dbg !5308, !tbaa !1991
  %cmp75 = icmp eq i64 %dec74, 0, !dbg !5308
  br i1 %cmp75, label %if.else.77, label %if.end.83, !dbg !5310

if.else.77:                                       ; preds = %if.then.69
  %ob_type78 = getelementptr inbounds %struct._object, %struct._object* %22, i64 0, i32 1, !dbg !5311
  %24 = load %struct._typeobject*, %struct._typeobject** %ob_type78, align 8, !dbg !5311, !tbaa !2010
  %tp_dealloc79 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %24, i64 0, i32 4, !dbg !5311
  %25 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc79, align 8, !dbg !5311, !tbaa !2032
  call void %25(%struct._object* %22) #2, !dbg !5311
  br label %if.end.83

if.end.83:                                        ; preds = %if.else.77, %if.then.69, %do.body.65
  call void @llvm.dbg.value(metadata %struct._object** %msg, i64 0, metadata !1168, metadata !1974), !dbg !5228
  %26 = load %struct._object*, %struct._object** %msg, align 8, !dbg !5313, !tbaa !2002
  store %struct._object* %26, %struct._object** %msg67, align 8, !dbg !5314, !tbaa !5074
  %ob_refcnt88 = getelementptr inbounds %struct._object, %struct._object* %26, i64 0, i32 0, !dbg !5315
  %27 = load i64, i64* %ob_refcnt88, align 8, !dbg !5315, !tbaa !1991
  %inc89 = add i64 %27, 1, !dbg !5315
  store i64 %inc89, i64* %ob_refcnt88, align 8, !dbg !5315, !tbaa !1991
  br label %cleanup, !dbg !5316

cleanup:                                          ; preds = %if.end.53, %if.end.60, %if.end.57, %if.end.41, %if.end.9, %if.end.83
  %retval.0 = phi i32 [ 0, %if.end.83 ], [ -1, %if.end.9 ], [ -1, %if.end.41 ], [ 0, %if.end.57 ], [ -1, %if.end.60 ], [ -1, %if.end.53 ]
  call void @llvm.lifetime.end(i64 8, i8* %0) #2, !dbg !5317
  ret i32 %retval.0, !dbg !5317
}

declare %struct._object* @PyDict_GetItemString(%struct._object*, i8*) #3

declare i32 @PyDict_DelItemString(%struct._object*, i8*) #3

declare i32 @PyArg_UnpackTuple(%struct._object*, i8*, i64, i64, ...) #3

; Function Attrs: nounwind uwtable
define internal void @OSError_dealloc(%struct.PyOSErrorObject* %self) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PyOSErrorObject* %self, i64 0, metadata !1201, metadata !1974), !dbg !5318
  %add.ptr = getelementptr %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self, i64 -1, i32 9, !dbg !5319
  %gc_refs = getelementptr inbounds %struct._object*, %struct._object** %add.ptr, i64 2, !dbg !5321
  %0 = bitcast %struct._object** %gc_refs to i64*, !dbg !5321
  %1 = load i64, i64* %0, align 8, !dbg !5321, !tbaa !4432
  %and = and i64 %1, 1, !dbg !5321
  %or = or i64 %and, -4, !dbg !5321
  store i64 %or, i64* %0, align 8, !dbg !5321, !tbaa !4432
  %gc_next = bitcast %struct._object** %add.ptr to %union._gc_head**, !dbg !5324
  %2 = bitcast %struct._object** %add.ptr to i64*, !dbg !5324
  %3 = load i64, i64* %2, align 8, !dbg !5324, !tbaa !4436
  %gc_prev = getelementptr inbounds %struct._object*, %struct._object** %add.ptr, i64 1, !dbg !5324
  %4 = bitcast %struct._object** %gc_prev to i64**, !dbg !5324
  %5 = load i64*, i64** %4, align 8, !dbg !5324, !tbaa !4437
  store i64 %3, i64* %5, align 8, !dbg !5324, !tbaa !4436
  %6 = ptrtoint i64* %5 to i64, !dbg !5324
  %7 = bitcast %struct._object** %add.ptr to %struct.anon.0**, !dbg !5324
  %8 = load %struct.anon.0*, %struct.anon.0** %7, align 8, !dbg !5324, !tbaa !4436
  %gc_prev13 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %8, i64 0, i32 1, !dbg !5324
  %9 = bitcast %union._gc_head** %gc_prev13 to i64*, !dbg !5324
  store i64 %6, i64* %9, align 8, !dbg !5324, !tbaa !4437
  store %union._gc_head* null, %union._gc_head** %gc_next, align 8, !dbg !5324, !tbaa !4436
  %call = tail call i32 @OSError_clear(%struct.PyOSErrorObject* %self), !dbg !5326
  %ob_type = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self, i64 0, i32 0, i32 1, !dbg !5327
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5327, !tbaa !2010
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i64 0, i32 38, !dbg !5328
  %11 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !5328, !tbaa !4230
  %12 = bitcast %struct.PyOSErrorObject* %self to i8*, !dbg !5329
  tail call void %11(i8* %12) #2, !dbg !5327
  ret void, !dbg !5330
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @OSError_str(%struct.PyOSErrorObject* nocapture readonly %self) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PyOSErrorObject* %self, i64 0, metadata !1208, metadata !1974), !dbg !5331
  %filename = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self, i64 0, i32 9, !dbg !5332
  %0 = load %struct._object*, %struct._object** %filename, align 8, !dbg !5332, !tbaa !5334
  %tobool = icmp eq %struct._object* %0, null, !dbg !5336
  br i1 %tobool, label %if.end, label %if.then, !dbg !5337

if.then:                                          ; preds = %entry
  %filename2 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self, i64 0, i32 10, !dbg !5338
  %1 = load %struct._object*, %struct._object** %filename2, align 8, !dbg !5338, !tbaa !5341
  %tobool1 = icmp eq %struct._object* %1, null, !dbg !5342
  %myerrno = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self, i64 0, i32 7, !dbg !5343
  %2 = load %struct._object*, %struct._object** %myerrno, align 8, !dbg !5343, !tbaa !5345
  %tobool3 = icmp ne %struct._object* %2, null, !dbg !5343
  %._Py_NoneStruct68 = select i1 %tobool3, %struct._object* %2, %struct._object* @_Py_NoneStruct, !dbg !5346
  %strerror20 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self, i64 0, i32 8, !dbg !5348
  %3 = load %struct._object*, %struct._object** %strerror20, align 8, !dbg !5348, !tbaa !5349
  %tobool21 = icmp eq %struct._object* %3, null, !dbg !5348
  %cond26 = select i1 %tobool21, %struct._object* @_Py_NoneStruct, %struct._object* %3, !dbg !5348
  br i1 %tobool1, label %cond.end.25, label %cond.end.9, !dbg !5350

cond.end.9:                                       ; preds = %if.then
  %call = tail call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.120, i64 0, i64 0), %struct._object* %._Py_NoneStruct68, %struct._object* %cond26, %struct._object* %0, %struct._object* %1) #2, !dbg !5351
  br label %return, !dbg !5352

cond.end.25:                                      ; preds = %if.then
  %call28 = tail call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.121, i64 0, i64 0), %struct._object* %._Py_NoneStruct68, %struct._object* %cond26, %struct._object* %0) #2, !dbg !5353
  br label %return, !dbg !5354

if.end:                                           ; preds = %entry
  %myerrno29 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self, i64 0, i32 7, !dbg !5355
  %4 = load %struct._object*, %struct._object** %myerrno29, align 8, !dbg !5355, !tbaa !5345
  %tobool30 = icmp eq %struct._object* %4, null, !dbg !5357
  br i1 %tobool30, label %if.end.49, label %land.lhs.true, !dbg !5358

land.lhs.true:                                    ; preds = %if.end
  %strerror31 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self, i64 0, i32 8, !dbg !5359
  %5 = load %struct._object*, %struct._object** %strerror31, align 8, !dbg !5359, !tbaa !5349
  %tobool32 = icmp eq %struct._object* %5, null, !dbg !5360
  br i1 %tobool32, label %if.end.49, label %cond.end.39, !dbg !5361

cond.end.39:                                      ; preds = %land.lhs.true
  %call48 = tail call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.122, i64 0, i64 0), %struct._object* %4, %struct._object* %5) #2, !dbg !5362
  br label %return, !dbg !5363

if.end.49:                                        ; preds = %land.lhs.true, %if.end
  %6 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self, i64 0, i32 2, !dbg !5364
  %7 = load %struct._object*, %struct._object** %6, align 8, !dbg !5364, !tbaa !4091
  %8 = getelementptr inbounds %struct._object, %struct._object* %7, i64 1, i32 0, !dbg !5364
  %9 = load i64, i64* %8, align 8, !dbg !5364, !tbaa !2297
  switch i64 %9, label %sw.default.i [
    i64 0, label %sw.bb.i
    i64 1, label %sw.bb.1.i
  ], !dbg !5366

sw.bb.i:                                          ; preds = %if.end.49
  %call.i = tail call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.84, i64 0, i64 0)) #2, !dbg !5367
  br label %return, !dbg !5368

sw.bb.1.i:                                        ; preds = %if.end.49
  %ob_item.i = getelementptr inbounds %struct._object, %struct._object* %7, i64 1, i32 1, !dbg !5369
  %arrayidx.i = bitcast %struct._typeobject** %ob_item.i to %struct._object**, !dbg !5369
  %10 = load %struct._object*, %struct._object** %arrayidx.i, align 8, !dbg !5369, !tbaa !2002
  %call3.i = tail call %struct._object* @PyObject_Str(%struct._object* %10) #2, !dbg !5370
  br label %return, !dbg !5371

sw.default.i:                                     ; preds = %if.end.49
  %call5.i = tail call %struct._object* @PyObject_Str(%struct._object* %7) #2, !dbg !5372
  br label %return, !dbg !5373

return:                                           ; preds = %sw.default.i, %sw.bb.1.i, %sw.bb.i, %cond.end.39, %cond.end.25, %cond.end.9
  %retval.0 = phi %struct._object* [ %call, %cond.end.9 ], [ %call28, %cond.end.25 ], [ %call48, %cond.end.39 ], [ %call5.i, %sw.default.i ], [ %call3.i, %sw.bb.1.i ], [ %call.i, %sw.bb.i ]
  ret %struct._object* %retval.0, !dbg !5374
}

; Function Attrs: nounwind uwtable
define internal i32 @OSError_traverse(%struct.PyOSErrorObject* nocapture readonly %self, i32 (%struct._object*, i8*)* nocapture %visit, i8* %arg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PyOSErrorObject* %self, i64 0, metadata !1213, metadata !1974), !dbg !5375
  tail call void @llvm.dbg.value(metadata i32 (%struct._object*, i8*)* %visit, i64 0, metadata !1214, metadata !1974), !dbg !5376
  tail call void @llvm.dbg.value(metadata i8* %arg, i64 0, metadata !1215, metadata !1974), !dbg !5377
  %myerrno = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self, i64 0, i32 7, !dbg !5378
  %0 = load %struct._object*, %struct._object** %myerrno, align 8, !dbg !5378, !tbaa !5345
  %tobool = icmp eq %struct._object* %0, null, !dbg !5378
  br i1 %tobool, label %do.body.5, label %if.then, !dbg !5380

if.then:                                          ; preds = %entry
  %call = tail call i32 %visit(%struct._object* %0, i8* %arg) #2, !dbg !5381
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !1216, metadata !1974), !dbg !5381
  %tobool2 = icmp eq i32 %call, 0, !dbg !5383
  br i1 %tobool2, label %do.body.5, label %return

do.body.5:                                        ; preds = %entry, %if.then
  %strerror = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self, i64 0, i32 8, !dbg !5385
  %1 = load %struct._object*, %struct._object** %strerror, align 8, !dbg !5385, !tbaa !5349
  %tobool6 = icmp eq %struct._object* %1, null, !dbg !5385
  br i1 %tobool6, label %do.body.19, label %if.then.7, !dbg !5387

if.then.7:                                        ; preds = %do.body.5
  %call10 = tail call i32 %visit(%struct._object* %1, i8* %arg) #2, !dbg !5388
  tail call void @llvm.dbg.value(metadata i32 %call10, i64 0, metadata !1220, metadata !1974), !dbg !5388
  %tobool11 = icmp eq i32 %call10, 0, !dbg !5390
  br i1 %tobool11, label %do.body.19, label %return

do.body.19:                                       ; preds = %do.body.5, %if.then.7
  %filename = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self, i64 0, i32 9, !dbg !5392
  %2 = load %struct._object*, %struct._object** %filename, align 8, !dbg !5392, !tbaa !5334
  %tobool20 = icmp eq %struct._object* %2, null, !dbg !5392
  br i1 %tobool20, label %do.body.33, label %if.then.21, !dbg !5394

if.then.21:                                       ; preds = %do.body.19
  %call24 = tail call i32 %visit(%struct._object* %2, i8* %arg) #2, !dbg !5395
  tail call void @llvm.dbg.value(metadata i32 %call24, i64 0, metadata !1224, metadata !1974), !dbg !5395
  %tobool25 = icmp eq i32 %call24, 0, !dbg !5397
  br i1 %tobool25, label %do.body.33, label %return

do.body.33:                                       ; preds = %do.body.19, %if.then.21
  %filename2 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self, i64 0, i32 10, !dbg !5399
  %3 = load %struct._object*, %struct._object** %filename2, align 8, !dbg !5399, !tbaa !5341
  %tobool34 = icmp eq %struct._object* %3, null, !dbg !5399
  br i1 %tobool34, label %do.end.46, label %if.then.35, !dbg !5401

if.then.35:                                       ; preds = %do.body.33
  %call38 = tail call i32 %visit(%struct._object* %3, i8* %arg) #2, !dbg !5402
  tail call void @llvm.dbg.value(metadata i32 %call38, i64 0, metadata !1228, metadata !1974), !dbg !5402
  %tobool39 = icmp eq i32 %call38, 0, !dbg !5404
  br i1 %tobool39, label %do.end.46, label %return

do.end.46:                                        ; preds = %do.body.33, %if.then.35
  tail call void @llvm.dbg.value(metadata i32 (%struct._object*, i8*)* %visit, i64 0, metadata !878, metadata !1974) #2, !dbg !5406
  tail call void @llvm.dbg.value(metadata i8* %arg, i64 0, metadata !879, metadata !1974) #2, !dbg !5408
  %4 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self, i64 0, i32 1, !dbg !5409
  %5 = load %struct._object*, %struct._object** %4, align 8, !dbg !5409, !tbaa !4084
  %tobool.i = icmp eq %struct._object* %5, null, !dbg !5409
  br i1 %tobool.i, label %do.body.5.i, label %if.then.i, !dbg !5410

if.then.i:                                        ; preds = %do.end.46
  %call.i = tail call i32 %visit(%struct._object* %5, i8* %arg) #2, !dbg !5411
  tail call void @llvm.dbg.value(metadata i32 %call.i, i64 0, metadata !880, metadata !1974) #2, !dbg !5411
  %tobool2.i = icmp eq i32 %call.i, 0, !dbg !5412
  br i1 %tobool2.i, label %do.body.5.i, label %return, !dbg !5413

do.body.5.i:                                      ; preds = %if.then.i, %do.end.46
  %6 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self, i64 0, i32 2, !dbg !5414
  %7 = load %struct._object*, %struct._object** %6, align 8, !dbg !5414, !tbaa !4091
  %tobool6.i = icmp eq %struct._object* %7, null, !dbg !5414
  br i1 %tobool6.i, label %do.body.19.i, label %if.then.7.i, !dbg !5415

if.then.7.i:                                      ; preds = %do.body.5.i
  %call10.i = tail call i32 %visit(%struct._object* %7, i8* %arg) #2, !dbg !5416
  tail call void @llvm.dbg.value(metadata i32 %call10.i, i64 0, metadata !884, metadata !1974) #2, !dbg !5416
  %tobool11.i = icmp eq i32 %call10.i, 0, !dbg !5417
  br i1 %tobool11.i, label %do.body.19.i, label %return, !dbg !5413

do.body.19.i:                                     ; preds = %if.then.7.i, %do.body.5.i
  %8 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self, i64 0, i32 3, !dbg !5418
  %9 = load %struct._object*, %struct._object** %8, align 8, !dbg !5418, !tbaa !1979
  %tobool20.i = icmp eq %struct._object* %9, null, !dbg !5418
  br i1 %tobool20.i, label %do.body.33.i, label %if.then.21.i, !dbg !5419

if.then.21.i:                                     ; preds = %do.body.19.i
  %call24.i = tail call i32 %visit(%struct._object* %9, i8* %arg) #2, !dbg !5420
  tail call void @llvm.dbg.value(metadata i32 %call24.i, i64 0, metadata !888, metadata !1974) #2, !dbg !5420
  %tobool25.i = icmp eq i32 %call24.i, 0, !dbg !5421
  br i1 %tobool25.i, label %do.body.33.i, label %return, !dbg !5413

do.body.33.i:                                     ; preds = %if.then.21.i, %do.body.19.i
  %10 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self, i64 0, i32 5, !dbg !5422
  %11 = load %struct._object*, %struct._object** %10, align 8, !dbg !5422, !tbaa !2068
  %tobool34.i = icmp eq %struct._object* %11, null, !dbg !5422
  br i1 %tobool34.i, label %do.body.47.i, label %if.then.35.i, !dbg !5423

if.then.35.i:                                     ; preds = %do.body.33.i
  %call38.i = tail call i32 %visit(%struct._object* %11, i8* %arg) #2, !dbg !5424
  tail call void @llvm.dbg.value(metadata i32 %call38.i, i64 0, metadata !892, metadata !1974) #2, !dbg !5424
  %tobool39.i = icmp eq i32 %call38.i, 0, !dbg !5425
  br i1 %tobool39.i, label %do.body.47.i, label %return, !dbg !5413

do.body.47.i:                                     ; preds = %if.then.35.i, %do.body.33.i
  %12 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self, i64 0, i32 4, !dbg !5426
  %13 = load %struct._object*, %struct._object** %12, align 8, !dbg !5426, !tbaa !2100
  %tobool48.i = icmp eq %struct._object* %13, null, !dbg !5426
  br i1 %tobool48.i, label %do.end.60.i, label %if.then.49.i, !dbg !5427

if.then.49.i:                                     ; preds = %do.body.47.i
  %call52.i = tail call i32 %visit(%struct._object* %13, i8* %arg) #2, !dbg !5428
  tail call void @llvm.dbg.value(metadata i32 %call52.i, i64 0, metadata !896, metadata !1974) #2, !dbg !5428
  %tobool53.i = icmp eq i32 %call52.i, 0, !dbg !5429
  br i1 %tobool53.i, label %do.end.60.i, label %return, !dbg !5413

do.end.60.i:                                      ; preds = %if.then.49.i, %do.body.47.i
  br label %return, !dbg !5430

return:                                           ; preds = %do.end.60.i, %if.then.49.i, %if.then.35.i, %if.then.21.i, %if.then.7.i, %if.then.i, %if.then.35, %if.then.21, %if.then.7, %if.then
  %retval.7 = phi i32 [ %call38, %if.then.35 ], [ %call24, %if.then.21 ], [ %call10, %if.then.7 ], [ %call, %if.then ], [ 0, %do.end.60.i ], [ %call52.i, %if.then.49.i ], [ %call38.i, %if.then.35.i ], [ %call24.i, %if.then.21.i ], [ %call10.i, %if.then.7.i ], [ %call.i, %if.then.i ]
  ret i32 %retval.7, !dbg !5431
}

; Function Attrs: nounwind uwtable
define internal i32 @OSError_clear(%struct.PyOSErrorObject* nocapture %self) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PyOSErrorObject* %self, i64 0, metadata !1236, metadata !1974), !dbg !5432
  %myerrno = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self, i64 0, i32 7, !dbg !5433
  %0 = load %struct._object*, %struct._object** %myerrno, align 8, !dbg !5433, !tbaa !5345
  tail call void @llvm.dbg.value(metadata %struct._object* %0, i64 0, metadata !1237, metadata !1974), !dbg !5433
  %cmp = icmp eq %struct._object* %0, null, !dbg !5435
  br i1 %cmp, label %if.end.5, label %if.then, !dbg !5436

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %myerrno, align 8, !dbg !5437, !tbaa !5345
  tail call void @llvm.dbg.value(metadata %struct._object* %0, i64 0, metadata !1239, metadata !1974), !dbg !5439
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %0, i64 0, i32 0, !dbg !5441
  %1 = load i64, i64* %ob_refcnt, align 8, !dbg !5441, !tbaa !1991
  %dec = add i64 %1, -1, !dbg !5441
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5441, !tbaa !1991
  %cmp3 = icmp eq i64 %dec, 0, !dbg !5441
  br i1 %cmp3, label %if.else, label %if.end.5, !dbg !5443

if.else:                                          ; preds = %if.then
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i64 0, i32 1, !dbg !5444
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5444, !tbaa !2010
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i64 0, i32 4, !dbg !5444
  %3 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5444, !tbaa !2032
  tail call void %3(%struct._object* %0) #2, !dbg !5444
  br label %if.end.5

if.end.5:                                         ; preds = %if.else, %if.then, %entry
  %strerror = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self, i64 0, i32 8, !dbg !5446
  %4 = load %struct._object*, %struct._object** %strerror, align 8, !dbg !5446, !tbaa !5349
  tail call void @llvm.dbg.value(metadata %struct._object* %4, i64 0, metadata !1243, metadata !1974), !dbg !5446
  %cmp10 = icmp eq %struct._object* %4, null, !dbg !5448
  br i1 %cmp10, label %if.end.25, label %if.then.11, !dbg !5449

if.then.11:                                       ; preds = %if.end.5
  store %struct._object* null, %struct._object** %strerror, align 8, !dbg !5450, !tbaa !5349
  tail call void @llvm.dbg.value(metadata %struct._object* %4, i64 0, metadata !1245, metadata !1974), !dbg !5452
  %ob_refcnt15 = getelementptr inbounds %struct._object, %struct._object* %4, i64 0, i32 0, !dbg !5454
  %5 = load i64, i64* %ob_refcnt15, align 8, !dbg !5454, !tbaa !1991
  %dec16 = add i64 %5, -1, !dbg !5454
  store i64 %dec16, i64* %ob_refcnt15, align 8, !dbg !5454, !tbaa !1991
  %cmp17 = icmp eq i64 %dec16, 0, !dbg !5454
  br i1 %cmp17, label %if.else.19, label %if.end.25, !dbg !5456

if.else.19:                                       ; preds = %if.then.11
  %ob_type20 = getelementptr inbounds %struct._object, %struct._object* %4, i64 0, i32 1, !dbg !5457
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type20, align 8, !dbg !5457, !tbaa !2010
  %tp_dealloc21 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i64 0, i32 4, !dbg !5457
  %7 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc21, align 8, !dbg !5457, !tbaa !2032
  tail call void %7(%struct._object* %4) #2, !dbg !5457
  br label %if.end.25

if.end.25:                                        ; preds = %if.else.19, %if.then.11, %if.end.5
  %filename = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self, i64 0, i32 9, !dbg !5459
  %8 = load %struct._object*, %struct._object** %filename, align 8, !dbg !5459, !tbaa !5334
  tail call void @llvm.dbg.value(metadata %struct._object* %8, i64 0, metadata !1249, metadata !1974), !dbg !5459
  %cmp30 = icmp eq %struct._object* %8, null, !dbg !5461
  br i1 %cmp30, label %if.end.45, label %if.then.31, !dbg !5462

if.then.31:                                       ; preds = %if.end.25
  store %struct._object* null, %struct._object** %filename, align 8, !dbg !5463, !tbaa !5334
  tail call void @llvm.dbg.value(metadata %struct._object* %8, i64 0, metadata !1251, metadata !1974), !dbg !5465
  %ob_refcnt35 = getelementptr inbounds %struct._object, %struct._object* %8, i64 0, i32 0, !dbg !5467
  %9 = load i64, i64* %ob_refcnt35, align 8, !dbg !5467, !tbaa !1991
  %dec36 = add i64 %9, -1, !dbg !5467
  store i64 %dec36, i64* %ob_refcnt35, align 8, !dbg !5467, !tbaa !1991
  %cmp37 = icmp eq i64 %dec36, 0, !dbg !5467
  br i1 %cmp37, label %if.else.39, label %if.end.45, !dbg !5469

if.else.39:                                       ; preds = %if.then.31
  %ob_type40 = getelementptr inbounds %struct._object, %struct._object* %8, i64 0, i32 1, !dbg !5470
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type40, align 8, !dbg !5470, !tbaa !2010
  %tp_dealloc41 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i64 0, i32 4, !dbg !5470
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc41, align 8, !dbg !5470, !tbaa !2032
  tail call void %11(%struct._object* %8) #2, !dbg !5470
  br label %if.end.45

if.end.45:                                        ; preds = %if.else.39, %if.then.31, %if.end.25
  %filename2 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self, i64 0, i32 10, !dbg !5472
  %12 = load %struct._object*, %struct._object** %filename2, align 8, !dbg !5472, !tbaa !5341
  tail call void @llvm.dbg.value(metadata %struct._object* %12, i64 0, metadata !1255, metadata !1974), !dbg !5472
  %cmp50 = icmp eq %struct._object* %12, null, !dbg !5474
  br i1 %cmp50, label %if.end.65, label %if.then.51, !dbg !5475

if.then.51:                                       ; preds = %if.end.45
  store %struct._object* null, %struct._object** %filename2, align 8, !dbg !5476, !tbaa !5341
  tail call void @llvm.dbg.value(metadata %struct._object* %12, i64 0, metadata !1257, metadata !1974), !dbg !5478
  %ob_refcnt55 = getelementptr inbounds %struct._object, %struct._object* %12, i64 0, i32 0, !dbg !5480
  %13 = load i64, i64* %ob_refcnt55, align 8, !dbg !5480, !tbaa !1991
  %dec56 = add i64 %13, -1, !dbg !5480
  store i64 %dec56, i64* %ob_refcnt55, align 8, !dbg !5480, !tbaa !1991
  %cmp57 = icmp eq i64 %dec56, 0, !dbg !5480
  br i1 %cmp57, label %if.else.59, label %if.end.65, !dbg !5482

if.else.59:                                       ; preds = %if.then.51
  %ob_type60 = getelementptr inbounds %struct._object, %struct._object* %12, i64 0, i32 1, !dbg !5483
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type60, align 8, !dbg !5483, !tbaa !2010
  %tp_dealloc61 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i64 0, i32 4, !dbg !5483
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc61, align 8, !dbg !5483, !tbaa !2032
  tail call void %15(%struct._object* %12) #2, !dbg !5483
  br label %if.end.65

if.end.65:                                        ; preds = %if.else.59, %if.then.51, %if.end.45
  %16 = bitcast %struct.PyOSErrorObject* %self to %struct.PyBaseExceptionObject*, !dbg !5485
  %call = tail call i32 @BaseException_clear(%struct.PyBaseExceptionObject* %16), !dbg !5486
  ret i32 0, !dbg !5487
}

; Function Attrs: nounwind uwtable
define internal i32 @OSError_init(%struct.PyOSErrorObject* nocapture %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %_winerror.i = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %myerrno = alloca %struct._object*, align 8
  %strerror = alloca %struct._object*, align 8
  %filename = alloca %struct._object*, align 8
  %filename2 = alloca %struct._object*, align 8
  tail call void @llvm.dbg.value(metadata %struct.PyOSErrorObject* %self, i64 0, metadata !1290, metadata !1974), !dbg !5488
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1291, metadata !1974), !dbg !5489
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2002
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !1292, metadata !1974), !dbg !5490
  %0 = bitcast %struct._object** %myerrno to i8*, !dbg !5491
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !5491
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1293, metadata !1974), !dbg !5492
  store %struct._object* null, %struct._object** %myerrno, align 8, !dbg !5492, !tbaa !2002
  %1 = bitcast %struct._object** %strerror to i8*, !dbg !5491
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !5491
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1294, metadata !1974), !dbg !5493
  store %struct._object* null, %struct._object** %strerror, align 8, !dbg !5493, !tbaa !2002
  %2 = bitcast %struct._object** %filename to i8*, !dbg !5494
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !5494
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1295, metadata !1974), !dbg !5495
  store %struct._object* null, %struct._object** %filename, align 8, !dbg !5495, !tbaa !2002
  %3 = bitcast %struct._object** %filename2 to i8*, !dbg !5494
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !5494
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1296, metadata !1974), !dbg !5496
  store %struct._object* null, %struct._object** %filename2, align 8, !dbg !5496, !tbaa !2002
  %ob_type = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self, i64 0, i32 0, i32 1, !dbg !5497
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5499, !tbaa !2010
  tail call void @llvm.dbg.value(metadata %struct._typeobject* %4, i64 0, metadata !1306, metadata !1974), !dbg !5501
  %tp_init.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i64 0, i32 35, !dbg !5503
  %5 = load i32 (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)** %tp_init.i, align 8, !dbg !5503, !tbaa !4273
  %cmp.i = icmp eq i32 (%struct._object*, %struct._object*, %struct._object*)* %5, bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), !dbg !5505
  br i1 %cmp.i, label %cleanup, label %land.lhs.true.i, !dbg !5506

land.lhs.true.i:                                  ; preds = %entry
  %tp_new.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i64 0, i32 37, !dbg !5507
  %6 = load %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)** %tp_new.i, align 8, !dbg !5507, !tbaa !4277
  %cmp1.i = icmp eq %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* %6, @OSError_new, !dbg !5508
  br i1 %cmp1.i, label %if.end, label %cleanup, !dbg !5509

if.end:                                           ; preds = %land.lhs.true.i
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i64 0, i32 1, !dbg !5510
  %7 = load i8*, i8** %tp_name, align 8, !dbg !5510, !tbaa !4130
  %call2 = tail call i32 @_PyArg_NoKeywords(i8* %7, %struct._object* %kwds) #2, !dbg !5511
  %tobool3 = icmp eq i32 %call2, 0, !dbg !5511
  br i1 %tobool3, label %cleanup, label %if.end.5, !dbg !5512

if.end.5:                                         ; preds = %if.end
  tail call void @llvm.dbg.value(metadata %struct._object** %args.addr, i64 0, metadata !1291, metadata !1974), !dbg !5489
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %args, i64 0, i32 0, !dbg !5513
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !5513, !tbaa !1991
  %inc = add i64 %8, 1, !dbg !5513
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !5513, !tbaa !1991
  tail call void @llvm.dbg.value(metadata %struct._object** %args.addr, i64 0, metadata !1291, metadata !1974), !dbg !5489
  tail call void @llvm.dbg.value(metadata %struct._object** %myerrno, i64 0, metadata !1293, metadata !1974), !dbg !5492
  tail call void @llvm.dbg.value(metadata %struct._object** %strerror, i64 0, metadata !1294, metadata !1974), !dbg !5493
  tail call void @llvm.dbg.value(metadata %struct._object** %filename, i64 0, metadata !1295, metadata !1974), !dbg !5495
  tail call void @llvm.dbg.value(metadata %struct._object** %filename2, i64 0, metadata !1296, metadata !1974), !dbg !5496
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1317, metadata !1974) #2, !dbg !5514
  %9 = bitcast %struct._object** %_winerror.i to i8*, !dbg !5517
  call void @llvm.lifetime.start(i64 8, i8* %9) #2, !dbg !5517
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1318, metadata !1974) #2, !dbg !5518
  store %struct._object* null, %struct._object** %_winerror.i, align 8, !dbg !5518, !tbaa !2002
  tail call void @llvm.dbg.value(metadata %struct._object** %_winerror.i, i64 0, metadata !1319, metadata !1974) #2, !dbg !5519
  %10 = getelementptr inbounds %struct._object, %struct._object* %args, i64 1, i32 0, !dbg !5520
  %11 = load i64, i64* %10, align 8, !dbg !5520, !tbaa !2297
  tail call void @llvm.dbg.value(metadata i64 %11, i64 0, metadata !1316, metadata !1974) #2, !dbg !5521
  %.off.i = add i64 %11, -2, !dbg !5522
  %12 = icmp ult i64 %.off.i, 4, !dbg !5522
  br i1 %12, label %if.then.i, label %if.end.9, !dbg !5522

if.then.i:                                        ; preds = %if.end.5
  tail call void @llvm.dbg.value(metadata %struct._object** %_winerror.i, i64 0, metadata !1318, metadata !1974) #2, !dbg !5518
  %call.i = call i32 (%struct._object*, i8*, i64, i64, ...) @PyArg_UnpackTuple(%struct._object* %args, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i64 0, i64 0), i64 2, i64 5, %struct._object** nonnull %myerrno, %struct._object** nonnull %strerror, %struct._object** nonnull %filename, %struct._object** nonnull %_winerror.i, %struct._object** nonnull %filename2) #2, !dbg !5524
  %tobool.i = icmp eq i32 %call.i, 0, !dbg !5524
  br i1 %tobool.i, label %do.body.thread, label %if.then.i.if.end.9_crit_edge, !dbg !5527

if.then.i.if.end.9_crit_edge:                     ; preds = %if.then.i
  %.pre = load %struct._object*, %struct._object** %myerrno, align 8, !dbg !5528, !tbaa !2002
  %.pre41 = load %struct._object*, %struct._object** %strerror, align 8, !dbg !5530, !tbaa !2002
  %.pre42 = load %struct._object*, %struct._object** %filename, align 8, !dbg !5531, !tbaa !2002
  %.pre43 = load %struct._object*, %struct._object** %filename2, align 8, !dbg !5532, !tbaa !2002
  br label %if.end.9, !dbg !5527

do.body.thread:                                   ; preds = %if.then.i
  call void @llvm.lifetime.end(i64 8, i8* %9) #2, !dbg !5533
  call void @llvm.dbg.value(metadata %struct._object** %args.addr, i64 0, metadata !1291, metadata !1974), !dbg !5489
  call void @llvm.dbg.value(metadata %struct._object* %.pre44, i64 0, metadata !1297, metadata !1974), !dbg !5534
  br label %do.body.15, !dbg !5536

if.end.9:                                         ; preds = %if.then.i.if.end.9_crit_edge, %if.end.5
  %13 = phi %struct._object* [ %.pre43, %if.then.i.if.end.9_crit_edge ], [ null, %if.end.5 ], !dbg !5532
  %14 = phi %struct._object* [ %.pre42, %if.then.i.if.end.9_crit_edge ], [ null, %if.end.5 ], !dbg !5531
  %15 = phi %struct._object* [ %.pre41, %if.then.i.if.end.9_crit_edge ], [ null, %if.end.5 ], !dbg !5530
  %16 = phi %struct._object* [ %.pre, %if.then.i.if.end.9_crit_edge ], [ null, %if.end.5 ], !dbg !5528
  call void @llvm.lifetime.end(i64 8, i8* %9) #2, !dbg !5533
  call void @llvm.dbg.value(metadata %struct._object** %myerrno, i64 0, metadata !1293, metadata !1974), !dbg !5492
  call void @llvm.dbg.value(metadata %struct._object** %strerror, i64 0, metadata !1294, metadata !1974), !dbg !5493
  call void @llvm.dbg.value(metadata %struct._object** %filename, i64 0, metadata !1295, metadata !1974), !dbg !5495
  call void @llvm.dbg.value(metadata %struct._object** %filename2, i64 0, metadata !1296, metadata !1974), !dbg !5496
  call void @llvm.dbg.value(metadata %struct._object** %args.addr, i64 0, metadata !1291, metadata !1974), !dbg !5489
  %call10 = call fastcc i32 @oserror_init(%struct.PyOSErrorObject* %self, %struct._object** nonnull %args.addr, %struct._object* %16, %struct._object* %15, %struct._object* %14, %struct._object* %13), !dbg !5537
  %tobool11 = icmp eq i32 %call10, 0, !dbg !5537
  br i1 %tobool11, label %cleanup, label %do.body, !dbg !5538

do.body:                                          ; preds = %if.end.9
  %.pre44 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !5534, !tbaa !2002
  call void @llvm.dbg.value(metadata %struct._object** %args.addr, i64 0, metadata !1291, metadata !1974), !dbg !5489
  call void @llvm.dbg.value(metadata %struct._object* %.pre44, i64 0, metadata !1297, metadata !1974), !dbg !5534
  %cmp = icmp eq %struct._object* %.pre44, null, !dbg !5539
  br i1 %cmp, label %cleanup, label %do.body.15, !dbg !5536

do.body.15:                                       ; preds = %do.body.thread, %do.body
  %17 = phi %struct._object* [ %args, %do.body.thread ], [ %.pre44, %do.body ]
  call void @llvm.dbg.value(metadata %struct._object* %.pre44, i64 0, metadata !1299, metadata !1974), !dbg !5540
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %17, i64 0, i32 0, !dbg !5542
  %18 = load i64, i64* %ob_refcnt16, align 8, !dbg !5542, !tbaa !1991
  %dec = add i64 %18, -1, !dbg !5542
  store i64 %dec, i64* %ob_refcnt16, align 8, !dbg !5542, !tbaa !1991
  %cmp17 = icmp eq i64 %dec, 0, !dbg !5542
  br i1 %cmp17, label %if.else, label %cleanup, !dbg !5544

if.else:                                          ; preds = %do.body.15
  %ob_type19 = getelementptr inbounds %struct._object, %struct._object* %17, i64 0, i32 1, !dbg !5545
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type19, align 8, !dbg !5545, !tbaa !2010
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i64 0, i32 4, !dbg !5545
  %20 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5545, !tbaa !2032
  call void %20(%struct._object* %17) #2, !dbg !5545
  br label %cleanup

cleanup:                                          ; preds = %land.lhs.true.i, %entry, %do.body, %do.body.15, %if.else, %if.end.9, %if.end
  %retval.0 = phi i32 [ -1, %if.end ], [ 0, %if.end.9 ], [ -1, %if.else ], [ -1, %do.body.15 ], [ -1, %do.body ], [ 0, %entry ], [ 0, %land.lhs.true.i ]
  call void @llvm.lifetime.end(i64 8, i8* %3) #2, !dbg !5547
  call void @llvm.lifetime.end(i64 8, i8* %2) #2, !dbg !5547
  call void @llvm.lifetime.end(i64 8, i8* %1) #2, !dbg !5547
  call void @llvm.lifetime.end(i64 8, i8* %0) #2, !dbg !5547
  ret i32 %retval.0, !dbg !5547
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @OSError_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %_winerror.i = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %myerrno = alloca %struct._object*, align 8
  %strerror = alloca %struct._object*, align 8
  %filename = alloca %struct._object*, align 8
  %filename2 = alloca %struct._object*, align 8
  tail call void @llvm.dbg.value(metadata %struct._typeobject* %type, i64 0, metadata !1355, metadata !1974), !dbg !5548
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1356, metadata !1974), !dbg !5549
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2002
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !1357, metadata !1974), !dbg !5550
  tail call void @llvm.dbg.value(metadata %struct.PyOSErrorObject* null, i64 0, metadata !1358, metadata !1974), !dbg !5551
  %0 = bitcast %struct._object** %myerrno to i8*, !dbg !5552
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !5552
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1359, metadata !1974), !dbg !5553
  store %struct._object* null, %struct._object** %myerrno, align 8, !dbg !5553, !tbaa !2002
  %1 = bitcast %struct._object** %strerror to i8*, !dbg !5552
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !5552
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1360, metadata !1974), !dbg !5554
  store %struct._object* null, %struct._object** %strerror, align 8, !dbg !5554, !tbaa !2002
  %2 = bitcast %struct._object** %filename to i8*, !dbg !5555
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !5555
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1361, metadata !1974), !dbg !5556
  store %struct._object* null, %struct._object** %filename, align 8, !dbg !5556, !tbaa !2002
  %3 = bitcast %struct._object** %filename2 to i8*, !dbg !5555
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !5555
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1362, metadata !1974), !dbg !5557
  store %struct._object* null, %struct._object** %filename2, align 8, !dbg !5557, !tbaa !2002
  tail call void @llvm.dbg.value(metadata %struct._object** %args.addr, i64 0, metadata !1356, metadata !1974), !dbg !5549
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %args, i64 0, i32 0, !dbg !5558
  %4 = load i64, i64* %ob_refcnt, align 8, !dbg !5558, !tbaa !1991
  %inc = add i64 %4, 1, !dbg !5558
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !5558, !tbaa !1991
  tail call void @llvm.dbg.value(metadata %struct._typeobject* %type, i64 0, metadata !1306, metadata !1974), !dbg !5559
  %tp_init.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %type, i64 0, i32 35, !dbg !5561
  %5 = load i32 (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)** %tp_init.i, align 8, !dbg !5561, !tbaa !4273
  %cmp.i = icmp eq i32 (%struct._object*, %struct._object*, %struct._object*)* %5, bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), !dbg !5562
  br i1 %cmp.i, label %if.then, label %land.lhs.true.i, !dbg !5563

land.lhs.true.i:                                  ; preds = %entry
  %tp_new.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %type, i64 0, i32 37, !dbg !5564
  %6 = load %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)** %tp_new.i, align 8, !dbg !5564, !tbaa !4277
  %cmp1.i = icmp eq %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* %6, @OSError_new, !dbg !5565
  br i1 %cmp1.i, label %if.end.23, label %if.then, !dbg !5566

if.then:                                          ; preds = %entry, %land.lhs.true.i
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %type, i64 0, i32 1, !dbg !5567
  %7 = load i8*, i8** %tp_name, align 8, !dbg !5567, !tbaa !4130
  %call1 = tail call i32 @_PyArg_NoKeywords(i8* %7, %struct._object* %kwds) #2, !dbg !5569
  %tobool2 = icmp eq i32 %call1, 0, !dbg !5569
  br i1 %tobool2, label %do.body.55, label %if.end, !dbg !5570

if.end:                                           ; preds = %if.then
  tail call void @llvm.dbg.value(metadata %struct._object** %args.addr, i64 0, metadata !1356, metadata !1974), !dbg !5549
  tail call void @llvm.dbg.value(metadata %struct._object** %myerrno, i64 0, metadata !1359, metadata !1974), !dbg !5553
  tail call void @llvm.dbg.value(metadata %struct._object** %strerror, i64 0, metadata !1360, metadata !1974), !dbg !5554
  tail call void @llvm.dbg.value(metadata %struct._object** %filename, i64 0, metadata !1361, metadata !1974), !dbg !5556
  tail call void @llvm.dbg.value(metadata %struct._object** %filename2, i64 0, metadata !1362, metadata !1974), !dbg !5557
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1317, metadata !1974) #2, !dbg !5571
  %8 = bitcast %struct._object** %_winerror.i to i8*, !dbg !5574
  call void @llvm.lifetime.start(i64 8, i8* %8) #2, !dbg !5574
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1318, metadata !1974) #2, !dbg !5575
  store %struct._object* null, %struct._object** %_winerror.i, align 8, !dbg !5575, !tbaa !2002
  tail call void @llvm.dbg.value(metadata %struct._object** %_winerror.i, i64 0, metadata !1319, metadata !1974) #2, !dbg !5576
  %9 = getelementptr inbounds %struct._object, %struct._object* %args, i64 1, i32 0, !dbg !5577
  %10 = load i64, i64* %9, align 8, !dbg !5577, !tbaa !2297
  tail call void @llvm.dbg.value(metadata i64 %10, i64 0, metadata !1316, metadata !1974) #2, !dbg !5578
  %.off.i = add i64 %10, -2, !dbg !5579
  %11 = icmp ult i64 %.off.i, 4, !dbg !5579
  br i1 %11, label %if.then.i, label %if.end.7.thread, !dbg !5579

if.end.7.thread:                                  ; preds = %if.end
  call void @llvm.lifetime.end(i64 8, i8* %8) #2, !dbg !5580
  call void @llvm.dbg.value(metadata %struct._object** %myerrno, i64 0, metadata !1359, metadata !1974), !dbg !5553
  br label %if.end.23, !dbg !5581

if.then.i:                                        ; preds = %if.end
  tail call void @llvm.dbg.value(metadata %struct._object** %_winerror.i, i64 0, metadata !1318, metadata !1974) #2, !dbg !5575
  %call.i = call i32 (%struct._object*, i8*, i64, i64, ...) @PyArg_UnpackTuple(%struct._object* %args, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i64 0, i64 0), i64 2, i64 5, %struct._object** nonnull %myerrno, %struct._object** nonnull %strerror, %struct._object** nonnull %filename, %struct._object** nonnull %_winerror.i, %struct._object** nonnull %filename2) #2, !dbg !5582
  %tobool.i = icmp eq i32 %call.i, 0, !dbg !5582
  br i1 %tobool.i, label %do.body.55.thread, label %if.end.7, !dbg !5583

do.body.55.thread:                                ; preds = %if.then.i
  call void @llvm.lifetime.end(i64 8, i8* %8) #2, !dbg !5580
  call void @llvm.dbg.value(metadata %struct._object** %args.addr, i64 0, metadata !1356, metadata !1974), !dbg !5549
  call void @llvm.dbg.value(metadata %struct._object* %34, i64 0, metadata !1373, metadata !1974), !dbg !5584
  br label %do.body.59, !dbg !5586

if.end.7:                                         ; preds = %if.then.i
  %.pre = load %struct._object*, %struct._object** %myerrno, align 8, !dbg !5587, !tbaa !2002
  call void @llvm.lifetime.end(i64 8, i8* %8) #2, !dbg !5580
  call void @llvm.dbg.value(metadata %struct._object** %myerrno, i64 0, metadata !1359, metadata !1974), !dbg !5553
  %tobool8 = icmp eq %struct._object* %.pre, null, !dbg !5587
  br i1 %tobool8, label %if.end.23, label %land.lhs.true, !dbg !5581

land.lhs.true:                                    ; preds = %if.end.7
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %.pre, i64 0, i32 1, !dbg !5588
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5588, !tbaa !2010
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i64 0, i32 19, !dbg !5588
  %13 = load i64, i64* %tp_flags, align 8, !dbg !5588, !tbaa !2143
  %and = and i64 %13, 16777216, !dbg !5588
  %cmp = icmp ne i64 %and, 0, !dbg !5588
  %14 = load %struct._object*, %struct._object** @errnomap, align 8
  %tobool10 = icmp ne %struct._object* %14, null, !dbg !5590
  %or.cond = and i1 %cmp, %tobool10, !dbg !5591
  br i1 %or.cond, label %land.lhs.true.11, label %if.end.23, !dbg !5591

land.lhs.true.11:                                 ; preds = %land.lhs.true
  %15 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %type, i64 0, i32 0, i32 0, !dbg !5592
  %16 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !5593, !tbaa !2002
  %cmp12 = icmp eq %struct._object* %15, %16, !dbg !5594
  br i1 %cmp12, label %if.then.13, label %if.end.23, !dbg !5595

if.then.13:                                       ; preds = %land.lhs.true.11
  %call14 = call %struct._object* @PyDict_GetItem(%struct._object* %14, %struct._object* %.pre) #2, !dbg !5596
  call void @llvm.dbg.value(metadata %struct._object* %call14, i64 0, metadata !1363, metadata !1974), !dbg !5597
  %tobool15 = icmp eq %struct._object* %call14, null, !dbg !5598
  br i1 %tobool15, label %if.else, label %if.then.16, !dbg !5600

if.then.16:                                       ; preds = %if.then.13
  %17 = bitcast %struct._object* %call14 to %struct._typeobject*, !dbg !5601
  call void @llvm.dbg.value(metadata %struct._typeobject* %17, i64 0, metadata !1355, metadata !1974), !dbg !5548
  br label %if.end.23, !dbg !5603

if.else:                                          ; preds = %if.then.13
  %call17 = call %struct._object* @PyErr_Occurred() #2, !dbg !5604
  %tobool18 = icmp eq %struct._object* %call17, null, !dbg !5604
  br i1 %tobool18, label %if.end.23, label %do.body.55, !dbg !5606

if.end.23:                                        ; preds = %if.end.7.thread, %if.else, %if.then.16, %land.lhs.true.i, %if.end.7, %land.lhs.true, %land.lhs.true.11
  %type.addr.2 = phi %struct._typeobject* [ %type, %land.lhs.true.11 ], [ %type, %land.lhs.true ], [ %type, %if.end.7 ], [ %type, %land.lhs.true.i ], [ %17, %if.then.16 ], [ %type, %if.else ], [ %type, %if.end.7.thread ]
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %type.addr.2, i64 0, i32 36, !dbg !5607
  %18 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !5607, !tbaa !4077
  %call24 = call %struct._object* %18(%struct._typeobject* %type.addr.2, i64 0) #2, !dbg !5608
  %19 = bitcast %struct._object* %call24 to %struct.PyOSErrorObject*, !dbg !5609
  call void @llvm.dbg.value(metadata %struct.PyOSErrorObject* %19, i64 0, metadata !1358, metadata !1974), !dbg !5551
  %tobool25 = icmp eq %struct._object* %call24, null, !dbg !5610
  br i1 %tobool25, label %do.body.55, label %if.end.27, !dbg !5612

if.end.27:                                        ; preds = %if.end.23
  %dict = getelementptr inbounds %struct._object, %struct._object* %call24, i64 1, !dbg !5613
  %20 = bitcast %struct._object* %dict to %struct._object**, !dbg !5613
  store %struct._object* null, %struct._object** %20, align 8, !dbg !5614, !tbaa !5615
  %traceback = getelementptr inbounds %struct._object, %struct._object* %call24, i64 2, !dbg !5616
  %21 = getelementptr inbounds %struct._object, %struct._object* %call24, i64 6, i32 0, !dbg !5617
  %22 = bitcast %struct._object* %traceback to i8*, !dbg !5618
  call void @llvm.memset.p0i8.i64(i8* %22, i8 0, i64 24, i32 8, i1 false), !dbg !5619
  store i64 -1, i64* %21, align 8, !dbg !5618, !tbaa !5620
  tail call void @llvm.dbg.value(metadata %struct._typeobject* %type.addr.2, i64 0, metadata !1306, metadata !1974), !dbg !5621
  %tp_init.i.132 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %type.addr.2, i64 0, i32 35, !dbg !5624
  %23 = load i32 (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)** %tp_init.i.132, align 8, !dbg !5624, !tbaa !4273
  %cmp.i.133 = icmp eq i32 (%struct._object*, %struct._object*, %struct._object*)* %23, bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), !dbg !5625
  br i1 %cmp.i.133, label %if.then.30, label %land.lhs.true.i.136, !dbg !5626

land.lhs.true.i.136:                              ; preds = %if.end.27
  %tp_new.i.134 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %type.addr.2, i64 0, i32 37, !dbg !5627
  %24 = load %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)** %tp_new.i.134, align 8, !dbg !5627, !tbaa !4277
  %cmp1.i.135 = icmp eq %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* %24, @OSError_new, !dbg !5628
  br i1 %cmp1.i.135, label %if.else.35, label %if.then.30, !dbg !5629

if.then.30:                                       ; preds = %if.end.27, %land.lhs.true.i.136
  call void @llvm.dbg.value(metadata %struct._object** %myerrno, i64 0, metadata !1359, metadata !1974), !dbg !5553
  %25 = load %struct._object*, %struct._object** %myerrno, align 8, !dbg !5630, !tbaa !2002
  call void @llvm.dbg.value(metadata %struct._object** %strerror, i64 0, metadata !1360, metadata !1974), !dbg !5554
  %26 = load %struct._object*, %struct._object** %strerror, align 8, !dbg !5633, !tbaa !2002
  call void @llvm.dbg.value(metadata %struct._object** %filename, i64 0, metadata !1361, metadata !1974), !dbg !5556
  %27 = load %struct._object*, %struct._object** %filename, align 8, !dbg !5634, !tbaa !2002
  call void @llvm.dbg.value(metadata %struct._object** %filename2, i64 0, metadata !1362, metadata !1974), !dbg !5557
  %28 = load %struct._object*, %struct._object** %filename2, align 8, !dbg !5635, !tbaa !2002
  call void @llvm.dbg.value(metadata %struct._object** %args.addr, i64 0, metadata !1356, metadata !1974), !dbg !5549
  %call31 = call fastcc i32 @oserror_init(%struct.PyOSErrorObject* %19, %struct._object** nonnull %args.addr, %struct._object* %25, %struct._object* %26, %struct._object* %27, %struct._object* %28), !dbg !5636
  %tobool32 = icmp eq i32 %call31, 0, !dbg !5636
  %.pre149 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !5637, !tbaa !2002
  br i1 %tobool32, label %do.body, label %do.body.55, !dbg !5639

if.else.35:                                       ; preds = %land.lhs.true.i.136
  %call36 = call %struct._object* @PyTuple_New(i64 0) #2, !dbg !5640
  %args37 = getelementptr inbounds %struct._object, %struct._object* %call24, i64 1, i32 1, !dbg !5642
  %29 = bitcast %struct._typeobject** %args37 to %struct._object**, !dbg !5642
  store %struct._object* %call36, %struct._object** %29, align 8, !dbg !5643, !tbaa !5644
  %cmp39 = icmp eq %struct._object* %call36, null, !dbg !5645
  br i1 %cmp39, label %do.body.55, label %do.body, !dbg !5647

do.body:                                          ; preds = %if.then.30, %if.else.35
  %30 = phi %struct._object* [ %args, %if.else.35 ], [ %.pre149, %if.then.30 ], !dbg !5637
  call void @llvm.dbg.value(metadata %struct._object** %args.addr, i64 0, metadata !1356, metadata !1974), !dbg !5549
  call void @llvm.dbg.value(metadata %struct._object* %30, i64 0, metadata !1368, metadata !1974), !dbg !5637
  %cmp43 = icmp eq %struct._object* %30, null, !dbg !5648
  br i1 %cmp43, label %cleanup.93, label %do.body.45, !dbg !5649

do.body.45:                                       ; preds = %do.body
  call void @llvm.dbg.value(metadata %struct._object* %30, i64 0, metadata !1370, metadata !1974), !dbg !5650
  %ob_refcnt46 = getelementptr inbounds %struct._object, %struct._object* %30, i64 0, i32 0, !dbg !5652
  %31 = load i64, i64* %ob_refcnt46, align 8, !dbg !5652, !tbaa !1991
  %dec = add i64 %31, -1, !dbg !5652
  store i64 %dec, i64* %ob_refcnt46, align 8, !dbg !5652, !tbaa !1991
  %cmp47 = icmp eq i64 %dec, 0, !dbg !5652
  br i1 %cmp47, label %if.else.49, label %cleanup.93, !dbg !5654

if.else.49:                                       ; preds = %do.body.45
  %ob_type50 = getelementptr inbounds %struct._object, %struct._object* %30, i64 0, i32 1, !dbg !5655
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type50, align 8, !dbg !5655, !tbaa !2010
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i64 0, i32 4, !dbg !5655
  %33 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5655, !tbaa !2032
  call void %33(%struct._object* %30) #2, !dbg !5655
  br label %cleanup.93

do.body.55:                                       ; preds = %if.then.30, %if.else, %if.end.23, %if.then, %if.else.35
  %34 = phi %struct._object* [ %args, %if.else.35 ], [ %args, %if.end.23 ], [ %args, %if.then ], [ %args, %if.else ], [ %.pre149, %if.then.30 ], !dbg !5584
  %self.0 = phi %struct.PyOSErrorObject* [ %19, %if.else.35 ], [ %19, %if.end.23 ], [ null, %if.then ], [ null, %if.else ], [ %19, %if.then.30 ]
  call void @llvm.dbg.value(metadata %struct._object** %args.addr, i64 0, metadata !1356, metadata !1974), !dbg !5549
  call void @llvm.dbg.value(metadata %struct._object* %34, i64 0, metadata !1373, metadata !1974), !dbg !5584
  %cmp57 = icmp eq %struct._object* %34, null, !dbg !5657
  br i1 %cmp57, label %if.end.71, label %do.body.59, !dbg !5586

do.body.59:                                       ; preds = %do.body.55.thread, %do.body.55
  %self.0153 = phi %struct.PyOSErrorObject* [ null, %do.body.55.thread ], [ %self.0, %do.body.55 ]
  %35 = phi %struct._object* [ %args, %do.body.55.thread ], [ %34, %do.body.55 ]
  call void @llvm.dbg.value(metadata %struct._object* %34, i64 0, metadata !1375, metadata !1974), !dbg !5658
  %ob_refcnt61 = getelementptr inbounds %struct._object, %struct._object* %35, i64 0, i32 0, !dbg !5660
  %36 = load i64, i64* %ob_refcnt61, align 8, !dbg !5660, !tbaa !1991
  %dec62 = add i64 %36, -1, !dbg !5660
  store i64 %dec62, i64* %ob_refcnt61, align 8, !dbg !5660, !tbaa !1991
  %cmp63 = icmp eq i64 %dec62, 0, !dbg !5660
  br i1 %cmp63, label %if.else.65, label %if.end.71, !dbg !5662

if.else.65:                                       ; preds = %do.body.59
  %ob_type66 = getelementptr inbounds %struct._object, %struct._object* %35, i64 0, i32 1, !dbg !5663
  %37 = load %struct._typeobject*, %struct._typeobject** %ob_type66, align 8, !dbg !5663, !tbaa !2010
  %tp_dealloc67 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %37, i64 0, i32 4, !dbg !5663
  %38 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc67, align 8, !dbg !5663, !tbaa !2032
  call void %38(%struct._object* %35) #2, !dbg !5663
  br label %if.end.71

if.end.71:                                        ; preds = %if.else.65, %do.body.59, %do.body.55
  %self.0154 = phi %struct.PyOSErrorObject* [ %self.0153, %if.else.65 ], [ %self.0153, %do.body.59 ], [ %self.0, %do.body.55 ]
  %39 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self.0154, i64 0, i32 0, !dbg !5665
  call void @llvm.dbg.value(metadata %struct._object* %39, i64 0, metadata !1378, metadata !1974), !dbg !5665
  %cmp76 = icmp eq %struct.PyOSErrorObject* %self.0154, null, !dbg !5667
  br i1 %cmp76, label %cleanup.93, label %do.body.78, !dbg !5668

do.body.78:                                       ; preds = %if.end.71
  call void @llvm.dbg.value(metadata %struct._object* %39, i64 0, metadata !1380, metadata !1974), !dbg !5669
  %ob_refcnt80 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self.0154, i64 0, i32 0, i32 0, !dbg !5671
  %40 = load i64, i64* %ob_refcnt80, align 8, !dbg !5671, !tbaa !1991
  %dec81 = add i64 %40, -1, !dbg !5671
  store i64 %dec81, i64* %ob_refcnt80, align 8, !dbg !5671, !tbaa !1991
  %cmp82 = icmp eq i64 %dec81, 0, !dbg !5671
  br i1 %cmp82, label %if.else.84, label %cleanup.93, !dbg !5673

if.else.84:                                       ; preds = %do.body.78
  %ob_type85 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self.0154, i64 0, i32 0, i32 1, !dbg !5674
  %41 = load %struct._typeobject*, %struct._typeobject** %ob_type85, align 8, !dbg !5674, !tbaa !2010
  %tp_dealloc86 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %41, i64 0, i32 4, !dbg !5674
  %42 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc86, align 8, !dbg !5674, !tbaa !2032
  call void %42(%struct._object* %39) #2, !dbg !5674
  br label %cleanup.93

cleanup.93:                                       ; preds = %if.end.71, %do.body.78, %if.else.84, %do.body, %do.body.45, %if.else.49
  %retval.0 = phi %struct._object* [ %call24, %if.else.49 ], [ %call24, %do.body.45 ], [ %call24, %do.body ], [ null, %if.else.84 ], [ null, %do.body.78 ], [ null, %if.end.71 ]
  call void @llvm.lifetime.end(i64 8, i8* %3) #2, !dbg !5676
  call void @llvm.lifetime.end(i64 8, i8* %2) #2, !dbg !5676
  call void @llvm.lifetime.end(i64 8, i8* %1) #2, !dbg !5676
  call void @llvm.lifetime.end(i64 8, i8* %0) #2, !dbg !5676
  ret %struct._object* %retval.0, !dbg !5676
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @OSError_reduce(%struct.PyOSErrorObject* nocapture readonly %self) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PyOSErrorObject* %self, i64 0, metadata !1263, metadata !1974), !dbg !5677
  %args1 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self, i64 0, i32 2, !dbg !5678
  %0 = load %struct._object*, %struct._object** %args1, align 8, !dbg !5678, !tbaa !5644
  tail call void @llvm.dbg.value(metadata %struct._object* %0, i64 0, metadata !1264, metadata !1974), !dbg !5679
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1265, metadata !1974), !dbg !5680
  %1 = getelementptr inbounds %struct._object, %struct._object* %0, i64 1, i32 0, !dbg !5681
  %2 = load i64, i64* %1, align 8, !dbg !5681, !tbaa !2297
  %cmp = icmp eq i64 %2, 2, !dbg !5682
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !5683

land.lhs.true:                                    ; preds = %entry
  %filename = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self, i64 0, i32 9, !dbg !5684
  %3 = load %struct._object*, %struct._object** %filename, align 8, !dbg !5684, !tbaa !5334
  %tobool = icmp eq %struct._object* %3, null, !dbg !5685
  br i1 %tobool, label %if.else, label %if.then, !dbg !5686

if.then:                                          ; preds = %land.lhs.true
  %filename2 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self, i64 0, i32 10, !dbg !5687
  %4 = load %struct._object*, %struct._object** %filename2, align 8, !dbg !5687, !tbaa !5341
  %tobool3 = icmp ne %struct._object* %4, null, !dbg !5688
  %conv = select i1 %tobool3, i64 5, i64 3, !dbg !5688
  tail call void @llvm.dbg.value(metadata i64 %conv, i64 0, metadata !1267, metadata !1974), !dbg !5689
  %call = tail call %struct._object* @PyTuple_New(i64 %conv) #2, !dbg !5690
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1264, metadata !1974), !dbg !5679
  %tobool4 = icmp eq %struct._object* %call, null, !dbg !5691
  br i1 %tobool4, label %cleanup.54, label %if.end, !dbg !5693

if.end:                                           ; preds = %if.then
  %5 = bitcast %struct._object** %args1 to %struct.PyTupleObject**, !dbg !5694
  %6 = load %struct.PyTupleObject*, %struct.PyTupleObject** %5, align 8, !dbg !5694, !tbaa !5644
  %arrayidx = getelementptr %struct.PyTupleObject, %struct.PyTupleObject* %6, i64 0, i32 1, i64 0, !dbg !5694
  %7 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !5694, !tbaa !2002
  tail call void @llvm.dbg.value(metadata %struct._object* %7, i64 0, metadata !1266, metadata !1974), !dbg !5695
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i64 0, i32 0, !dbg !5696
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !5696, !tbaa !1991
  %inc = add i64 %8, 1, !dbg !5696
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !5696, !tbaa !1991
  %ob_item7 = getelementptr inbounds %struct._object, %struct._object* %call, i64 1, i32 1, !dbg !5697
  %arrayidx8 = bitcast %struct._typeobject** %ob_item7 to %struct._object**, !dbg !5697
  store %struct._object* %7, %struct._object** %arrayidx8, align 8, !dbg !5697, !tbaa !2002
  %9 = load %struct.PyTupleObject*, %struct.PyTupleObject** %5, align 8, !dbg !5698, !tbaa !5644
  %arrayidx11 = getelementptr %struct.PyTupleObject, %struct.PyTupleObject* %9, i64 0, i32 1, i64 1, !dbg !5698
  %10 = load %struct._object*, %struct._object** %arrayidx11, align 8, !dbg !5698, !tbaa !2002
  tail call void @llvm.dbg.value(metadata %struct._object* %10, i64 0, metadata !1266, metadata !1974), !dbg !5695
  %ob_refcnt12 = getelementptr inbounds %struct._object, %struct._object* %10, i64 0, i32 0, !dbg !5699
  %11 = load i64, i64* %ob_refcnt12, align 8, !dbg !5699, !tbaa !1991
  %inc13 = add i64 %11, 1, !dbg !5699
  store i64 %inc13, i64* %ob_refcnt12, align 8, !dbg !5699, !tbaa !1991
  %arrayidx15 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item7, i64 1, !dbg !5700
  %12 = bitcast %struct._typeobject** %arrayidx15 to %struct._object**, !dbg !5700
  store %struct._object* %10, %struct._object** %12, align 8, !dbg !5700, !tbaa !2002
  %13 = load %struct._object*, %struct._object** %filename, align 8, !dbg !5701, !tbaa !5334
  %ob_refcnt17 = getelementptr inbounds %struct._object, %struct._object* %13, i64 0, i32 0, !dbg !5701
  %14 = load i64, i64* %ob_refcnt17, align 8, !dbg !5701, !tbaa !1991
  %inc18 = add i64 %14, 1, !dbg !5701
  store i64 %inc18, i64* %ob_refcnt17, align 8, !dbg !5701, !tbaa !1991
  %15 = ptrtoint %struct._object* %13 to i64, !dbg !5702
  %arrayidx21 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item7, i64 2, !dbg !5702
  %16 = bitcast %struct._typeobject** %arrayidx21 to i64*, !dbg !5702
  store i64 %15, i64* %16, align 8, !dbg !5702, !tbaa !2002
  %17 = load %struct._object*, %struct._object** %filename2, align 8, !dbg !5703, !tbaa !5341
  %tobool23 = icmp eq %struct._object* %17, null, !dbg !5705
  br i1 %tobool23, label %if.end.37, label %if.then.24, !dbg !5706

if.then.24:                                       ; preds = %if.end
  %18 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !5707, !tbaa !1991
  %inc25 = add i64 %18, 1, !dbg !5707
  store i64 %inc25, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !5707, !tbaa !1991
  %arrayidx27 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item7, i64 3, !dbg !5709
  %19 = bitcast %struct._typeobject** %arrayidx27 to %struct._object**, !dbg !5709
  store %struct._object* @_Py_NoneStruct, %struct._object** %19, align 8, !dbg !5709, !tbaa !2002
  %20 = load %struct._object*, %struct._object** %filename2, align 8, !dbg !5710, !tbaa !5341
  %ob_refcnt29 = getelementptr inbounds %struct._object, %struct._object* %20, i64 0, i32 0, !dbg !5710
  %21 = load i64, i64* %ob_refcnt29, align 8, !dbg !5710, !tbaa !1991
  %inc30 = add i64 %21, 1, !dbg !5710
  store i64 %inc30, i64* %ob_refcnt29, align 8, !dbg !5710, !tbaa !1991
  %22 = ptrtoint %struct._object* %20 to i64, !dbg !5711
  %arrayidx33 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item7, i64 4, !dbg !5711
  %23 = bitcast %struct._typeobject** %arrayidx33 to i64*, !dbg !5711
  store i64 %22, i64* %23, align 8, !dbg !5711, !tbaa !2002
  br label %if.end.37, !dbg !5712

if.else:                                          ; preds = %land.lhs.true, %entry
  %ob_refcnt35 = getelementptr inbounds %struct._object, %struct._object* %0, i64 0, i32 0, !dbg !5713
  %24 = load i64, i64* %ob_refcnt35, align 8, !dbg !5713, !tbaa !1991
  %inc36 = add i64 %24, 1, !dbg !5713
  store i64 %inc36, i64* %ob_refcnt35, align 8, !dbg !5713, !tbaa !1991
  br label %if.end.37

if.end.37:                                        ; preds = %if.end, %if.then.24, %if.else
  %args.0 = phi %struct._object* [ %0, %if.else ], [ %call, %if.then.24 ], [ %call, %if.end ]
  %dict = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self, i64 0, i32 1, !dbg !5714
  %25 = load %struct._object*, %struct._object** %dict, align 8, !dbg !5714, !tbaa !5615
  %tobool38 = icmp eq %struct._object* %25, null, !dbg !5716
  %ob_type = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self, i64 0, i32 0, i32 1, !dbg !5717
  %26 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5717, !tbaa !2010
  br i1 %tobool38, label %if.else.42, label %if.then.39, !dbg !5718

if.then.39:                                       ; preds = %if.end.37
  %call41 = tail call %struct._object* (i64, ...) @PyTuple_Pack(i64 3, %struct._typeobject* %26, %struct._object* %args.0, %struct._object* %25) #2, !dbg !5719
  tail call void @llvm.dbg.value(metadata %struct._object* %call41, i64 0, metadata !1265, metadata !1974), !dbg !5680
  br label %do.body, !dbg !5720

if.else.42:                                       ; preds = %if.end.37
  %call44 = tail call %struct._object* (i64, ...) @PyTuple_Pack(i64 2, %struct._typeobject* %26, %struct._object* %args.0) #2, !dbg !5721
  tail call void @llvm.dbg.value(metadata %struct._object* %call44, i64 0, metadata !1265, metadata !1974), !dbg !5680
  br label %do.body

do.body:                                          ; preds = %if.then.39, %if.else.42
  %res.0 = phi %struct._object* [ %call41, %if.then.39 ], [ %call44, %if.else.42 ]
  tail call void @llvm.dbg.value(metadata %struct._object* %args.0, i64 0, metadata !1270, metadata !1974), !dbg !5722
  %ob_refcnt47 = getelementptr inbounds %struct._object, %struct._object* %args.0, i64 0, i32 0, !dbg !5724
  %27 = load i64, i64* %ob_refcnt47, align 8, !dbg !5724, !tbaa !1991
  %dec = add i64 %27, -1, !dbg !5724
  store i64 %dec, i64* %ob_refcnt47, align 8, !dbg !5724, !tbaa !1991
  %cmp48 = icmp eq i64 %dec, 0, !dbg !5724
  br i1 %cmp48, label %if.else.51, label %cleanup.54, !dbg !5726

if.else.51:                                       ; preds = %do.body
  %ob_type52 = getelementptr inbounds %struct._object, %struct._object* %args.0, i64 0, i32 1, !dbg !5727
  %28 = load %struct._typeobject*, %struct._typeobject** %ob_type52, align 8, !dbg !5727, !tbaa !2010
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %28, i64 0, i32 4, !dbg !5727
  %29 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5727, !tbaa !2032
  tail call void %29(%struct._object* %args.0) #2, !dbg !5727
  br label %cleanup.54

cleanup.54:                                       ; preds = %if.then, %if.else.51, %do.body
  %retval.1 = phi %struct._object* [ %res.0, %do.body ], [ %res.0, %if.else.51 ], [ null, %if.then ]
  ret %struct._object* %retval.1, !dbg !5729
}

declare %struct._object* @PyTuple_New(i64) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @OSError_written_get(%struct.PyOSErrorObject* nocapture readonly %self, i8* nocapture readnone %context) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PyOSErrorObject* %self, i64 0, metadata !1276, metadata !1974), !dbg !5730
  tail call void @llvm.dbg.value(metadata i8* %context, i64 0, metadata !1277, metadata !1974), !dbg !5731
  %written = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self, i64 0, i32 11, !dbg !5732
  %0 = load i64, i64* %written, align 8, !dbg !5732, !tbaa !5620
  %cmp = icmp eq i64 %0, -1, !dbg !5734
  br i1 %cmp, label %if.then, label %if.end, !dbg !5735

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_AttributeError, align 8, !dbg !5736, !tbaa !2002
  tail call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.131, i64 0, i64 0)) #2, !dbg !5738
  br label %return, !dbg !5739

if.end:                                           ; preds = %entry
  %call = tail call %struct._object* @PyLong_FromSsize_t(i64 %0) #2, !dbg !5740
  br label %return, !dbg !5741

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct._object* [ null, %if.then ], [ %call, %if.end ]
  ret %struct._object* %retval.0, !dbg !5742
}

; Function Attrs: nounwind uwtable
define internal i32 @OSError_written_set(%struct.PyOSErrorObject* nocapture %self, %struct._object* %arg, i8* nocapture readnone %context) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PyOSErrorObject* %self, i64 0, metadata !1282, metadata !1974), !dbg !5743
  tail call void @llvm.dbg.value(metadata %struct._object* %arg, i64 0, metadata !1283, metadata !1974), !dbg !5744
  tail call void @llvm.dbg.value(metadata i8* %context, i64 0, metadata !1284, metadata !1974), !dbg !5745
  %0 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !5746, !tbaa !2002
  %call = tail call i64 @PyNumber_AsSsize_t(%struct._object* %arg, %struct._object* %0) #2, !dbg !5747
  tail call void @llvm.dbg.value(metadata i64 %call, i64 0, metadata !1285, metadata !1974), !dbg !5748
  %cmp = icmp eq i64 %call, -1, !dbg !5749
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5751

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call %struct._object* @PyErr_Occurred() #2, !dbg !5752
  %tobool = icmp eq %struct._object* %call1, null, !dbg !5752
  br i1 %tobool, label %if.end, label %cleanup, !dbg !5754

if.end:                                           ; preds = %land.lhs.true, %entry
  %written = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self, i64 0, i32 11, !dbg !5755
  store i64 %call, i64* %written, align 8, !dbg !5756, !tbaa !5620
  br label %cleanup, !dbg !5757

cleanup:                                          ; preds = %land.lhs.true, %if.end
  %retval.0 = phi i32 [ 0, %if.end ], [ -1, %land.lhs.true ]
  ret i32 %retval.0, !dbg !5758
}

declare %struct._object* @PyLong_FromSsize_t(i64) #3

declare i64 @PyNumber_AsSsize_t(%struct._object*, %struct._object*) #3

declare %struct._object* @PyErr_Occurred() #3

declare i32 @_PyArg_NoKeywords(i8*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal fastcc i32 @oserror_init(%struct.PyOSErrorObject* nocapture %self, %struct._object** nocapture %p_args, %struct._object* %myerrno, %struct._object* %strerror, %struct._object* %filename, %struct._object* %filename2) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PyOSErrorObject* %self, i64 0, metadata !1324, metadata !1974), !dbg !5759
  tail call void @llvm.dbg.value(metadata %struct._object** %p_args, i64 0, metadata !1325, metadata !1974), !dbg !5760
  tail call void @llvm.dbg.value(metadata %struct._object* %myerrno, i64 0, metadata !1326, metadata !1974), !dbg !5761
  tail call void @llvm.dbg.value(metadata %struct._object* %strerror, i64 0, metadata !1327, metadata !1974), !dbg !5762
  tail call void @llvm.dbg.value(metadata %struct._object* %filename, i64 0, metadata !1328, metadata !1974), !dbg !5763
  tail call void @llvm.dbg.value(metadata %struct._object* %filename2, i64 0, metadata !1329, metadata !1974), !dbg !5764
  %0 = load %struct._object*, %struct._object** %p_args, align 8, !dbg !5765, !tbaa !2002
  tail call void @llvm.dbg.value(metadata %struct._object* %0, i64 0, metadata !1330, metadata !1974), !dbg !5766
  %1 = getelementptr inbounds %struct._object, %struct._object* %0, i64 1, i32 0, !dbg !5767
  %2 = load i64, i64* %1, align 8, !dbg !5767, !tbaa !2297
  tail call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !1331, metadata !1974), !dbg !5768
  %tobool = icmp ne %struct._object* %filename, null, !dbg !5769
  %cmp = icmp ne %struct._object* %filename, @_Py_NoneStruct, !dbg !5770
  %or.cond = and i1 %tobool, %cmp, !dbg !5771
  br i1 %or.cond, label %if.then, label %do.body.38, !dbg !5771

if.then:                                          ; preds = %entry
  %ob_type = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self, i64 0, i32 0, i32 1, !dbg !5772
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5772, !tbaa !2010
  %4 = load %struct._typeobject*, %struct._typeobject** bitcast (%struct._object** @PyExc_BlockingIOError to %struct._typeobject**), align 8, !dbg !5773, !tbaa !2002
  %cmp1 = icmp eq %struct._typeobject* %3, %4, !dbg !5774
  br i1 %cmp1, label %land.lhs.true.2, label %if.else, !dbg !5775

land.lhs.true.2:                                  ; preds = %if.then
  %call = tail call i32 @PyNumber_Check(%struct._object* %filename) #2, !dbg !5776
  %tobool3 = icmp eq i32 %call, 0, !dbg !5776
  br i1 %tobool3, label %if.else, label %if.then.4, !dbg !5777

if.then.4:                                        ; preds = %land.lhs.true.2
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !5778, !tbaa !2002
  %call5 = tail call i64 @PyNumber_AsSsize_t(%struct._object* %filename, %struct._object* %5) #2, !dbg !5780
  %written = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self, i64 0, i32 11, !dbg !5781
  store i64 %call5, i64* %written, align 8, !dbg !5782, !tbaa !5620
  %cmp7 = icmp eq i64 %call5, -1, !dbg !5783
  br i1 %cmp7, label %land.lhs.true.8, label %do.body.38, !dbg !5785

land.lhs.true.8:                                  ; preds = %if.then.4
  %call9 = tail call %struct._object* @PyErr_Occurred() #2, !dbg !5786
  %tobool10 = icmp eq %struct._object* %call9, null, !dbg !5786
  br i1 %tobool10, label %do.body.38, label %cleanup.78, !dbg !5788

if.else:                                          ; preds = %land.lhs.true.2, %if.then
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %filename, i64 0, i32 0, !dbg !5789
  %6 = load i64, i64* %ob_refcnt, align 8, !dbg !5789, !tbaa !1991
  %inc = add i64 %6, 1, !dbg !5789
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !5789, !tbaa !1991
  %filename12 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self, i64 0, i32 9, !dbg !5790
  store %struct._object* %filename, %struct._object** %filename12, align 8, !dbg !5791, !tbaa !5334
  %tobool13 = icmp ne %struct._object* %filename2, null, !dbg !5792
  %cmp15 = icmp ne %struct._object* %filename2, @_Py_NoneStruct, !dbg !5794
  %or.cond80 = and i1 %tobool13, %cmp15, !dbg !5795
  br i1 %or.cond80, label %if.then.16, label %if.end.20, !dbg !5795

if.then.16:                                       ; preds = %if.else
  %ob_refcnt17 = getelementptr inbounds %struct._object, %struct._object* %filename2, i64 0, i32 0, !dbg !5796
  %7 = load i64, i64* %ob_refcnt17, align 8, !dbg !5796, !tbaa !1991
  %inc18 = add i64 %7, 1, !dbg !5796
  store i64 %inc18, i64* %ob_refcnt17, align 8, !dbg !5796, !tbaa !1991
  %filename219 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self, i64 0, i32 10, !dbg !5798
  store %struct._object* %filename2, %struct._object** %filename219, align 8, !dbg !5799, !tbaa !5341
  br label %if.end.20, !dbg !5800

if.end.20:                                        ; preds = %if.then.16, %if.else
  %.off = add i64 %2, -2, !dbg !5801
  %8 = icmp ult i64 %.off, 4, !dbg !5801
  br i1 %8, label %if.then.24, label %do.body.38, !dbg !5801

if.then.24:                                       ; preds = %if.end.20
  %call25 = tail call %struct._object* @PyTuple_GetSlice(%struct._object* %0, i64 0, i64 2) #2, !dbg !5802
  tail call void @llvm.dbg.value(metadata %struct._object* %call25, i64 0, metadata !1332, metadata !1974), !dbg !5803
  %tobool26 = icmp eq %struct._object* %call25, null, !dbg !5804
  br i1 %tobool26, label %cleanup.78, label %do.body, !dbg !5806

do.body:                                          ; preds = %if.then.24
  tail call void @llvm.dbg.value(metadata %struct._object* %0, i64 0, metadata !1339, metadata !1974), !dbg !5807
  %ob_refcnt29 = getelementptr inbounds %struct._object, %struct._object* %0, i64 0, i32 0, !dbg !5809
  %9 = load i64, i64* %ob_refcnt29, align 8, !dbg !5809, !tbaa !1991
  %dec = add i64 %9, -1, !dbg !5809
  store i64 %dec, i64* %ob_refcnt29, align 8, !dbg !5809, !tbaa !1991
  %cmp30 = icmp eq i64 %dec, 0, !dbg !5809
  br i1 %cmp30, label %if.else.32, label %cleanup.thread, !dbg !5811

if.else.32:                                       ; preds = %do.body
  %ob_type33 = getelementptr inbounds %struct._object, %struct._object* %0, i64 0, i32 1, !dbg !5812
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type33, align 8, !dbg !5812, !tbaa !2010
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i64 0, i32 4, !dbg !5812
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5812, !tbaa !2032
  tail call void %11(%struct._object* %0) #2, !dbg !5812
  br label %cleanup.thread

cleanup.thread:                                   ; preds = %if.else.32, %do.body
  tail call void @llvm.dbg.value(metadata %struct._object* %call25, i64 0, metadata !1330, metadata !1974), !dbg !5766
  store %struct._object* %call25, %struct._object** %p_args, align 8, !dbg !5814, !tbaa !2002
  br label %do.body.38

do.body.38:                                       ; preds = %cleanup.thread, %land.lhs.true.8, %entry, %if.end.20, %if.then.4
  %args.1 = phi %struct._object* [ %0, %land.lhs.true.8 ], [ %0, %if.then.4 ], [ %0, %if.end.20 ], [ %0, %entry ], [ %call25, %cleanup.thread ]
  tail call void @llvm.dbg.value(metadata %struct._object* %myerrno, i64 0, metadata !1341, metadata !1974), !dbg !5815
  %cmp39 = icmp eq %struct._object* %myerrno, null, !dbg !5817
  br i1 %cmp39, label %if.end.43, label %if.then.40, !dbg !5819

if.then.40:                                       ; preds = %do.body.38
  %ob_refcnt41 = getelementptr inbounds %struct._object, %struct._object* %myerrno, i64 0, i32 0, !dbg !5820
  %12 = load i64, i64* %ob_refcnt41, align 8, !dbg !5820, !tbaa !1991
  %inc42 = add i64 %12, 1, !dbg !5820
  store i64 %inc42, i64* %ob_refcnt41, align 8, !dbg !5820, !tbaa !1991
  br label %if.end.43, !dbg !5820

if.end.43:                                        ; preds = %do.body.38, %if.then.40
  %myerrno46 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self, i64 0, i32 7, !dbg !5822
  store %struct._object* %myerrno, %struct._object** %myerrno46, align 8, !dbg !5823, !tbaa !5345
  tail call void @llvm.dbg.value(metadata %struct._object* %strerror, i64 0, metadata !1343, metadata !1974), !dbg !5824
  %cmp49 = icmp eq %struct._object* %strerror, null, !dbg !5826
  br i1 %cmp49, label %if.end.53, label %if.then.50, !dbg !5828

if.then.50:                                       ; preds = %if.end.43
  %ob_refcnt51 = getelementptr inbounds %struct._object, %struct._object* %strerror, i64 0, i32 0, !dbg !5829
  %13 = load i64, i64* %ob_refcnt51, align 8, !dbg !5829, !tbaa !1991
  %inc52 = add i64 %13, 1, !dbg !5829
  store i64 %inc52, i64* %ob_refcnt51, align 8, !dbg !5829, !tbaa !1991
  br label %if.end.53, !dbg !5829

if.end.53:                                        ; preds = %if.end.43, %if.then.50
  %strerror56 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self, i64 0, i32 8, !dbg !5831
  store %struct._object* %strerror, %struct._object** %strerror56, align 8, !dbg !5832, !tbaa !5349
  %args58 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %self, i64 0, i32 2, !dbg !5833
  %14 = load %struct._object*, %struct._object** %args58, align 8, !dbg !5833, !tbaa !5644
  tail call void @llvm.dbg.value(metadata %struct._object* %14, i64 0, metadata !1345, metadata !1974), !dbg !5833
  %cmp59 = icmp eq %struct._object* %14, null, !dbg !5835
  br i1 %cmp59, label %if.end.74, label %if.then.60, !dbg !5836

if.then.60:                                       ; preds = %if.end.53
  store %struct._object* null, %struct._object** %args58, align 8, !dbg !5837, !tbaa !5644
  tail call void @llvm.dbg.value(metadata %struct._object* %14, i64 0, metadata !1347, metadata !1974), !dbg !5839
  %ob_refcnt64 = getelementptr inbounds %struct._object, %struct._object* %14, i64 0, i32 0, !dbg !5841
  %15 = load i64, i64* %ob_refcnt64, align 8, !dbg !5841, !tbaa !1991
  %dec65 = add i64 %15, -1, !dbg !5841
  store i64 %dec65, i64* %ob_refcnt64, align 8, !dbg !5841, !tbaa !1991
  %cmp66 = icmp eq i64 %dec65, 0, !dbg !5841
  br i1 %cmp66, label %if.else.68, label %if.end.74, !dbg !5843

if.else.68:                                       ; preds = %if.then.60
  %ob_type69 = getelementptr inbounds %struct._object, %struct._object* %14, i64 0, i32 1, !dbg !5844
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type69, align 8, !dbg !5844, !tbaa !2010
  %tp_dealloc70 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %16, i64 0, i32 4, !dbg !5844
  %17 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc70, align 8, !dbg !5844, !tbaa !2032
  tail call void %17(%struct._object* %14) #2, !dbg !5844
  br label %if.end.74

if.end.74:                                        ; preds = %if.else.68, %if.then.60, %if.end.53
  store %struct._object* %args.1, %struct._object** %args58, align 8, !dbg !5846, !tbaa !5644
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1330, metadata !1974), !dbg !5766
  store %struct._object* null, %struct._object** %p_args, align 8, !dbg !5847, !tbaa !2002
  br label %cleanup.78, !dbg !5848

cleanup.78:                                       ; preds = %if.then.24, %land.lhs.true.8, %if.end.74
  %retval.1 = phi i32 [ 0, %if.end.74 ], [ -1, %land.lhs.true.8 ], [ -1, %if.then.24 ]
  ret i32 %retval.1, !dbg !5849
}

declare i32 @PyNumber_Check(%struct._object*) #3

declare %struct._object* @PyTuple_GetSlice(%struct._object*, i64, i64) #3

declare %struct._object* @PyDict_GetItem(%struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal void @SyntaxError_dealloc(%struct.PySyntaxErrorObject* %self) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PySyntaxErrorObject* %self, i64 0, metadata !1404, metadata !1974), !dbg !5850
  %add.ptr = getelementptr %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %self, i64 -1, i32 10, !dbg !5851
  %gc_refs = getelementptr inbounds %struct._object*, %struct._object** %add.ptr, i64 2, !dbg !5853
  %0 = bitcast %struct._object** %gc_refs to i64*, !dbg !5853
  %1 = load i64, i64* %0, align 8, !dbg !5853, !tbaa !4432
  %and = and i64 %1, 1, !dbg !5853
  %or = or i64 %and, -4, !dbg !5853
  store i64 %or, i64* %0, align 8, !dbg !5853, !tbaa !4432
  %gc_next = bitcast %struct._object** %add.ptr to %union._gc_head**, !dbg !5856
  %2 = bitcast %struct._object** %add.ptr to i64*, !dbg !5856
  %3 = load i64, i64* %2, align 8, !dbg !5856, !tbaa !4436
  %gc_prev = getelementptr inbounds %struct._object*, %struct._object** %add.ptr, i64 1, !dbg !5856
  %4 = bitcast %struct._object** %gc_prev to i64**, !dbg !5856
  %5 = load i64*, i64** %4, align 8, !dbg !5856, !tbaa !4437
  store i64 %3, i64* %5, align 8, !dbg !5856, !tbaa !4436
  %6 = ptrtoint i64* %5 to i64, !dbg !5856
  %7 = bitcast %struct._object** %add.ptr to %struct.anon.0**, !dbg !5856
  %8 = load %struct.anon.0*, %struct.anon.0** %7, align 8, !dbg !5856, !tbaa !4436
  %gc_prev13 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %8, i64 0, i32 1, !dbg !5856
  %9 = bitcast %union._gc_head** %gc_prev13 to i64*, !dbg !5856
  store i64 %6, i64* %9, align 8, !dbg !5856, !tbaa !4437
  store %union._gc_head* null, %union._gc_head** %gc_next, align 8, !dbg !5856, !tbaa !4436
  %call = tail call i32 @SyntaxError_clear(%struct.PySyntaxErrorObject* %self), !dbg !5858
  %ob_type = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %self, i64 0, i32 0, i32 1, !dbg !5859
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5859, !tbaa !2010
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i64 0, i32 38, !dbg !5860
  %11 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !5860, !tbaa !4230
  %12 = bitcast %struct.PySyntaxErrorObject* %self to i8*, !dbg !5861
  tail call void %11(i8* %12) #2, !dbg !5859
  ret void, !dbg !5862
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @SyntaxError_str(%struct.PySyntaxErrorObject* nocapture readonly %self) #0 {
entry:
  %overflow = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct.PySyntaxErrorObject* %self, i64 0, metadata !1411, metadata !1974), !dbg !5863
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1412, metadata !1974), !dbg !5864
  %0 = bitcast i32* %overflow to i8*, !dbg !5865
  call void @llvm.lifetime.start(i64 4, i8* %0) #2, !dbg !5865
  %filename1 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %self, i64 0, i32 8, !dbg !5866
  %1 = load %struct._object*, %struct._object** %filename1, align 8, !dbg !5866, !tbaa !5868
  %tobool = icmp eq %struct._object* %1, null, !dbg !5870
  br i1 %tobool, label %if.end.6, label %land.lhs.true, !dbg !5871

land.lhs.true:                                    ; preds = %entry
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !5872
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5872, !tbaa !2010
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i64 0, i32 19, !dbg !5872
  %3 = load i64, i64* %tp_flags, align 8, !dbg !5872, !tbaa !2143
  %and = and i64 %3, 268435456, !dbg !5872
  %cmp = icmp eq i64 %and, 0, !dbg !5872
  br i1 %cmp, label %if.end.6, label %if.then, !dbg !5874

if.then:                                          ; preds = %land.lhs.true
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1423, metadata !1974) #2, !dbg !5875
  %state.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 2, !dbg !5878
  %4 = bitcast %struct._object* %state.i to i32*, !dbg !5878
  %bf.load.i = load i32, i32* %4, align 4, !dbg !5878
  %bf.clear.i = and i32 %bf.load.i, 128, !dbg !5878
  %tobool.i = icmp eq i32 %bf.clear.i, 0, !dbg !5878
  br i1 %tobool.i, label %cond.false.i, label %if.end.i, !dbg !5878

cond.false.i:                                     ; preds = %if.then
  %call.i = tail call i32 @_PyUnicode_Ready(%struct._object* %1) #2, !dbg !5880
  %phitmp.i = icmp eq i32 %call.i, 0, !dbg !5880
  br i1 %phitmp.i, label %cond.false.if.end_crit_edge.i, label %cleanup, !dbg !5882

cond.false.if.end_crit_edge.i:                    ; preds = %cond.false.i
  %bf.load3.pre.i = load i32, i32* %4, align 4, !dbg !5883
  br label %if.end.i, !dbg !5882

if.end.i:                                         ; preds = %cond.false.if.end_crit_edge.i, %if.then
  %bf.load3.i = phi i32 [ %bf.load3.pre.i, %cond.false.if.end_crit_edge.i ], [ %bf.load.i, %if.then ], !dbg !5883
  %bf.lshr4.i = lshr i32 %bf.load3.i, 2, !dbg !5883
  %bf.clear5.i = and i32 %bf.lshr4.i, 7, !dbg !5883
  tail call void @llvm.dbg.value(metadata i32 %bf.clear5.i, i64 0, metadata !1427, metadata !1974) #2, !dbg !5884
  %bf.clear9.i = and i32 %bf.load3.i, 32, !dbg !5885
  %tobool10.i = icmp eq i32 %bf.clear9.i, 0, !dbg !5885
  br i1 %tobool10.i, label %cond.false.22.i, label %cond.true.11.i, !dbg !5885

cond.true.11.i:                                   ; preds = %if.end.i
  %bf.clear15.i = and i32 %bf.load3.i, 64, !dbg !5886
  %tobool16.i = icmp ne i32 %bf.clear15.i, 0, !dbg !5886
  %add.ptr.i = getelementptr %struct._object, %struct._object* %1, i64 3, !dbg !5888
  %5 = bitcast %struct._object* %add.ptr.i to i8*, !dbg !5888
  %add.ptr19.i = getelementptr %struct._object, %struct._object* %1, i64 4, i32 1, !dbg !5890
  %6 = bitcast %struct._typeobject** %add.ptr19.i to i8*, !dbg !5890
  %cond21.i = select i1 %tobool16.i, i8* %5, i8* %6, !dbg !5886
  br label %cond.end.24.i, !dbg !5886

cond.false.22.i:                                  ; preds = %if.end.i
  %data23.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 4, i32 1, !dbg !5892
  %any.i = bitcast %struct._typeobject** %data23.i to i8**, !dbg !5892
  %7 = load i8*, i8** %any.i, align 8, !dbg !5892, !tbaa !2002
  br label %cond.end.24.i, !dbg !5892

cond.end.24.i:                                    ; preds = %cond.false.22.i, %cond.true.11.i
  %cond25.i = phi i8* [ %7, %cond.false.22.i ], [ %cond21.i, %cond.true.11.i ], !dbg !5885
  tail call void @llvm.dbg.value(metadata i8* %cond25.i, i64 0, metadata !1428, metadata !1974) #2, !dbg !5894
  %8 = getelementptr inbounds %struct._object, %struct._object* %1, i64 1, i32 0, !dbg !5895
  %9 = load i64, i64* %8, align 8, !dbg !5895, !tbaa !2259
  tail call void @llvm.dbg.value(metadata i64 %9, i64 0, metadata !1425, metadata !1974) #2, !dbg !5896
  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !1426, metadata !1974) #2, !dbg !5897
  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !1424, metadata !1974) #2, !dbg !5898
  %cmp.74.i = icmp sgt i64 %9, 0, !dbg !5899
  br i1 %cmp.74.i, label %for.body.lr.ph.i, label %my_basename.exit.thread103, !dbg !5902

for.body.lr.ph.i:                                 ; preds = %cond.end.24.i
  %10 = bitcast i8* %cond25.i to i32*, !dbg !5903
  %11 = bitcast i8* %cond25.i to i16*, !dbg !5907
  switch i32 %bf.clear5.i, label %cond.end.38.i.preheader [
    i32 1, label %cond.end.38.us.i.preheader
    i32 2, label %cond.end.38.us86.i.preheader
  ], !dbg !5909

cond.end.38.us86.i.preheader:                     ; preds = %for.body.lr.ph.i
  %12 = add i64 %9, -1, !dbg !5907
  %xtraiter119 = and i64 %9, 3, !dbg !5907
  %lcmp.mod120 = icmp eq i64 %xtraiter119, 0, !dbg !5907
  br i1 %lcmp.mod120, label %cond.end.38.us86.i.preheader.split, label %cond.end.38.us86.i.prol.preheader, !dbg !5907

cond.end.38.us86.i.prol.preheader:                ; preds = %cond.end.38.us86.i.preheader
  br label %cond.end.38.us86.i.prol, !dbg !5907

cond.end.38.us86.i.prol:                          ; preds = %cond.end.38.us86.i.prol.preheader, %cond.end.38.us86.i.prol
  %i.076.us.78.i.prol = phi i64 [ %add.us.89.i.prol, %cond.end.38.us86.i.prol ], [ 0, %cond.end.38.us86.i.prol.preheader ], !dbg !5909
  %offset.075.us.79.i.prol = phi i64 [ %add.offset.0.us.90.i.prol, %cond.end.38.us86.i.prol ], [ 0, %cond.end.38.us86.i.prol.preheader ], !dbg !5909
  %prol.iter121 = phi i64 [ %prol.iter121.sub, %cond.end.38.us86.i.prol ], [ %xtraiter119, %cond.end.38.us86.i.prol.preheader ]
  %arrayidx32.us.81.i.prol = getelementptr i16, i16* %11, i64 %i.076.us.78.i.prol, !dbg !5907
  %13 = load i16, i16* %arrayidx32.us.81.i.prol, align 2, !dbg !5907, !tbaa !5910
  %cmp40.us.88.i.prol = icmp eq i16 %13, 47, !dbg !5912
  %add.us.89.i.prol = add nuw nsw i64 %i.076.us.78.i.prol, 1, !dbg !5915
  tail call void @llvm.dbg.value(metadata i64 %add.us.89.i.prol, i64 0, metadata !1426, metadata !1974) #2, !dbg !5897
  %add.offset.0.us.90.i.prol = select i1 %cmp40.us.88.i.prol, i64 %add.us.89.i.prol, i64 %offset.075.us.79.i.prol, !dbg !5916
  tail call void @llvm.dbg.value(metadata i64 %add.us.89.i.prol, i64 0, metadata !1424, metadata !1974) #2, !dbg !5898
  %prol.iter121.sub = add i64 %prol.iter121, -1, !dbg !5902
  %prol.iter121.cmp = icmp eq i64 %prol.iter121.sub, 0, !dbg !5902
  br i1 %prol.iter121.cmp, label %cond.end.38.us86.i.preheader.split.loopexit, label %cond.end.38.us86.i.prol, !dbg !5902, !llvm.loop !5917

cond.end.38.us86.i.preheader.split.loopexit:      ; preds = %cond.end.38.us86.i.prol
  %add.offset.0.us.90.i.prol.lcssa = phi i64 [ %add.offset.0.us.90.i.prol, %cond.end.38.us86.i.prol ]
  %add.us.89.i.prol.lcssa = phi i64 [ %add.us.89.i.prol, %cond.end.38.us86.i.prol ]
  br label %cond.end.38.us86.i.preheader.split, !dbg !5907

cond.end.38.us86.i.preheader.split:               ; preds = %cond.end.38.us86.i.preheader.split.loopexit, %cond.end.38.us86.i.preheader
  %add.offset.0.us.90.i.lcssa.unr = phi i64 [ undef, %cond.end.38.us86.i.preheader ], [ %add.offset.0.us.90.i.prol.lcssa, %cond.end.38.us86.i.preheader.split.loopexit ]
  %i.076.us.78.i.unr = phi i64 [ 0, %cond.end.38.us86.i.preheader ], [ %add.us.89.i.prol.lcssa, %cond.end.38.us86.i.preheader.split.loopexit ]
  %offset.075.us.79.i.unr = phi i64 [ 0, %cond.end.38.us86.i.preheader ], [ %add.offset.0.us.90.i.prol.lcssa, %cond.end.38.us86.i.preheader.split.loopexit ]
  %14 = icmp ult i64 %12, 3, !dbg !5907
  br i1 %14, label %for.end.i.loopexit115, label %cond.end.38.us86.i.preheader.split.split, !dbg !5907

cond.end.38.us86.i.preheader.split.split:         ; preds = %cond.end.38.us86.i.preheader.split
  br label %cond.end.38.us86.i, !dbg !5907

cond.end.38.us.i.preheader:                       ; preds = %for.body.lr.ph.i
  %15 = add i64 %9, -1, !dbg !5919
  %xtraiter116 = and i64 %9, 3, !dbg !5919
  %lcmp.mod117 = icmp eq i64 %xtraiter116, 0, !dbg !5919
  br i1 %lcmp.mod117, label %cond.end.38.us.i.preheader.split, label %cond.end.38.us.i.prol.preheader, !dbg !5919

cond.end.38.us.i.prol.preheader:                  ; preds = %cond.end.38.us.i.preheader
  br label %cond.end.38.us.i.prol, !dbg !5919

cond.end.38.us.i.prol:                            ; preds = %cond.end.38.us.i.prol.preheader, %cond.end.38.us.i.prol
  %i.076.us.i.prol = phi i64 [ %add.us.i.prol, %cond.end.38.us.i.prol ], [ 0, %cond.end.38.us.i.prol.preheader ], !dbg !5909
  %offset.075.us.i.prol = phi i64 [ %add.offset.0.us.i.prol, %cond.end.38.us.i.prol ], [ 0, %cond.end.38.us.i.prol.preheader ], !dbg !5909
  %prol.iter118 = phi i64 [ %prol.iter118.sub, %cond.end.38.us.i.prol ], [ %xtraiter116, %cond.end.38.us.i.prol.preheader ]
  %arrayidx.us.i.prol = getelementptr i8, i8* %cond25.i, i64 %i.076.us.i.prol, !dbg !5919
  %16 = load i8, i8* %arrayidx.us.i.prol, align 1, !dbg !5919, !tbaa !5921
  %cmp40.us.i.prol = icmp eq i8 %16, 47, !dbg !5912
  %add.us.i.prol = add nuw nsw i64 %i.076.us.i.prol, 1, !dbg !5915
  tail call void @llvm.dbg.value(metadata i64 %add.us.i.prol, i64 0, metadata !1426, metadata !1974) #2, !dbg !5897
  %add.offset.0.us.i.prol = select i1 %cmp40.us.i.prol, i64 %add.us.i.prol, i64 %offset.075.us.i.prol, !dbg !5916
  tail call void @llvm.dbg.value(metadata i64 %add.us.i.prol, i64 0, metadata !1424, metadata !1974) #2, !dbg !5898
  %prol.iter118.sub = add i64 %prol.iter118, -1, !dbg !5902
  %prol.iter118.cmp = icmp eq i64 %prol.iter118.sub, 0, !dbg !5902
  br i1 %prol.iter118.cmp, label %cond.end.38.us.i.preheader.split.loopexit, label %cond.end.38.us.i.prol, !dbg !5902, !llvm.loop !5922

cond.end.38.us.i.preheader.split.loopexit:        ; preds = %cond.end.38.us.i.prol
  %add.offset.0.us.i.prol.lcssa = phi i64 [ %add.offset.0.us.i.prol, %cond.end.38.us.i.prol ]
  %add.us.i.prol.lcssa = phi i64 [ %add.us.i.prol, %cond.end.38.us.i.prol ]
  br label %cond.end.38.us.i.preheader.split, !dbg !5919

cond.end.38.us.i.preheader.split:                 ; preds = %cond.end.38.us.i.preheader.split.loopexit, %cond.end.38.us.i.preheader
  %add.offset.0.us.i.lcssa.unr = phi i64 [ undef, %cond.end.38.us.i.preheader ], [ %add.offset.0.us.i.prol.lcssa, %cond.end.38.us.i.preheader.split.loopexit ]
  %i.076.us.i.unr = phi i64 [ 0, %cond.end.38.us.i.preheader ], [ %add.us.i.prol.lcssa, %cond.end.38.us.i.preheader.split.loopexit ]
  %offset.075.us.i.unr = phi i64 [ 0, %cond.end.38.us.i.preheader ], [ %add.offset.0.us.i.prol.lcssa, %cond.end.38.us.i.preheader.split.loopexit ]
  %17 = icmp ult i64 %15, 3, !dbg !5919
  br i1 %17, label %for.end.i.loopexit114, label %cond.end.38.us.i.preheader.split.split, !dbg !5919

cond.end.38.us.i.preheader.split.split:           ; preds = %cond.end.38.us.i.preheader.split
  br label %cond.end.38.us.i, !dbg !5919

cond.end.38.i.preheader:                          ; preds = %for.body.lr.ph.i
  %18 = add i64 %9, -1, !dbg !5903
  %xtraiter = and i64 %9, 3, !dbg !5903
  %lcmp.mod = icmp eq i64 %xtraiter, 0, !dbg !5903
  br i1 %lcmp.mod, label %cond.end.38.i.preheader.split, label %cond.end.38.i.prol.preheader, !dbg !5903

cond.end.38.i.prol.preheader:                     ; preds = %cond.end.38.i.preheader
  br label %cond.end.38.i.prol, !dbg !5903

cond.end.38.i.prol:                               ; preds = %cond.end.38.i.prol.preheader, %cond.end.38.i.prol
  %i.076.i.prol = phi i64 [ %add.i.prol, %cond.end.38.i.prol ], [ 0, %cond.end.38.i.prol.preheader ], !dbg !5909
  %offset.075.i.prol = phi i64 [ %add.offset.0.i.prol, %cond.end.38.i.prol ], [ 0, %cond.end.38.i.prol.preheader ], !dbg !5909
  %prol.iter = phi i64 [ %prol.iter.sub, %cond.end.38.i.prol ], [ %xtraiter, %cond.end.38.i.prol.preheader ]
  %arrayidx35.i.prol = getelementptr i32, i32* %10, i64 %i.076.i.prol, !dbg !5903
  %19 = load i32, i32* %arrayidx35.i.prol, align 4, !dbg !5903, !tbaa !5923
  %cmp40.i.prol = icmp eq i32 %19, 47, !dbg !5912
  %add.i.prol = add nuw nsw i64 %i.076.i.prol, 1, !dbg !5915
  tail call void @llvm.dbg.value(metadata i64 %add.i.prol, i64 0, metadata !1426, metadata !1974) #2, !dbg !5897
  %add.offset.0.i.prol = select i1 %cmp40.i.prol, i64 %add.i.prol, i64 %offset.075.i.prol, !dbg !5916
  tail call void @llvm.dbg.value(metadata i64 %add.i.prol, i64 0, metadata !1424, metadata !1974) #2, !dbg !5898
  %prol.iter.sub = add i64 %prol.iter, -1, !dbg !5902
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0, !dbg !5902
  br i1 %prol.iter.cmp, label %cond.end.38.i.preheader.split.loopexit, label %cond.end.38.i.prol, !dbg !5902, !llvm.loop !5924

cond.end.38.i.preheader.split.loopexit:           ; preds = %cond.end.38.i.prol
  %add.offset.0.i.prol.lcssa = phi i64 [ %add.offset.0.i.prol, %cond.end.38.i.prol ]
  %add.i.prol.lcssa = phi i64 [ %add.i.prol, %cond.end.38.i.prol ]
  br label %cond.end.38.i.preheader.split, !dbg !5903

cond.end.38.i.preheader.split:                    ; preds = %cond.end.38.i.preheader.split.loopexit, %cond.end.38.i.preheader
  %add.offset.0.i.lcssa.unr = phi i64 [ undef, %cond.end.38.i.preheader ], [ %add.offset.0.i.prol.lcssa, %cond.end.38.i.preheader.split.loopexit ]
  %i.076.i.unr = phi i64 [ 0, %cond.end.38.i.preheader ], [ %add.i.prol.lcssa, %cond.end.38.i.preheader.split.loopexit ]
  %offset.075.i.unr = phi i64 [ 0, %cond.end.38.i.preheader ], [ %add.offset.0.i.prol.lcssa, %cond.end.38.i.preheader.split.loopexit ]
  %20 = icmp ult i64 %18, 3, !dbg !5903
  br i1 %20, label %for.end.i.loopexit, label %cond.end.38.i.preheader.split.split, !dbg !5903

cond.end.38.i.preheader.split.split:              ; preds = %cond.end.38.i.preheader.split
  br label %cond.end.38.i, !dbg !5903

cond.end.38.us.i:                                 ; preds = %cond.end.38.us.i, %cond.end.38.us.i.preheader.split.split
  %i.076.us.i = phi i64 [ %i.076.us.i.unr, %cond.end.38.us.i.preheader.split.split ], [ %add.us.i.3, %cond.end.38.us.i ], !dbg !5909
  %offset.075.us.i = phi i64 [ %offset.075.us.i.unr, %cond.end.38.us.i.preheader.split.split ], [ %add.offset.0.us.i.3, %cond.end.38.us.i ], !dbg !5909
  %arrayidx.us.i = getelementptr i8, i8* %cond25.i, i64 %i.076.us.i, !dbg !5919
  %21 = load i8, i8* %arrayidx.us.i, align 1, !dbg !5919, !tbaa !5921
  %cmp40.us.i = icmp eq i8 %21, 47, !dbg !5912
  %add.us.i = add nuw nsw i64 %i.076.us.i, 1, !dbg !5915
  tail call void @llvm.dbg.value(metadata i64 %add.us.i, i64 0, metadata !1426, metadata !1974) #2, !dbg !5897
  %add.offset.0.us.i = select i1 %cmp40.us.i, i64 %add.us.i, i64 %offset.075.us.i, !dbg !5916
  tail call void @llvm.dbg.value(metadata i64 %add.us.i, i64 0, metadata !1424, metadata !1974) #2, !dbg !5898
  %arrayidx.us.i.1 = getelementptr i8, i8* %cond25.i, i64 %add.us.i, !dbg !5919
  %22 = load i8, i8* %arrayidx.us.i.1, align 1, !dbg !5919, !tbaa !5921
  %cmp40.us.i.1 = icmp eq i8 %22, 47, !dbg !5912
  %add.us.i.1 = add nsw i64 %i.076.us.i, 2, !dbg !5915
  tail call void @llvm.dbg.value(metadata i64 %add.us.i, i64 0, metadata !1426, metadata !1974) #2, !dbg !5897
  %add.offset.0.us.i.1 = select i1 %cmp40.us.i.1, i64 %add.us.i.1, i64 %add.offset.0.us.i, !dbg !5916
  tail call void @llvm.dbg.value(metadata i64 %add.us.i, i64 0, metadata !1424, metadata !1974) #2, !dbg !5898
  %arrayidx.us.i.2 = getelementptr i8, i8* %cond25.i, i64 %add.us.i.1, !dbg !5919
  %23 = load i8, i8* %arrayidx.us.i.2, align 1, !dbg !5919, !tbaa !5921
  %cmp40.us.i.2 = icmp eq i8 %23, 47, !dbg !5912
  %add.us.i.2 = add nsw i64 %i.076.us.i, 3, !dbg !5915
  tail call void @llvm.dbg.value(metadata i64 %add.us.i, i64 0, metadata !1426, metadata !1974) #2, !dbg !5897
  %add.offset.0.us.i.2 = select i1 %cmp40.us.i.2, i64 %add.us.i.2, i64 %add.offset.0.us.i.1, !dbg !5916
  tail call void @llvm.dbg.value(metadata i64 %add.us.i, i64 0, metadata !1424, metadata !1974) #2, !dbg !5898
  %arrayidx.us.i.3 = getelementptr i8, i8* %cond25.i, i64 %add.us.i.2, !dbg !5919
  %24 = load i8, i8* %arrayidx.us.i.3, align 1, !dbg !5919, !tbaa !5921
  %cmp40.us.i.3 = icmp eq i8 %24, 47, !dbg !5912
  %add.us.i.3 = add nsw i64 %i.076.us.i, 4, !dbg !5915
  tail call void @llvm.dbg.value(metadata i64 %add.us.i, i64 0, metadata !1426, metadata !1974) #2, !dbg !5897
  %add.offset.0.us.i.3 = select i1 %cmp40.us.i.3, i64 %add.us.i.3, i64 %add.offset.0.us.i.2, !dbg !5916
  tail call void @llvm.dbg.value(metadata i64 %add.us.i, i64 0, metadata !1424, metadata !1974) #2, !dbg !5898
  %exitcond.i.3 = icmp eq i64 %add.us.i.3, %9, !dbg !5902
  br i1 %exitcond.i.3, label %for.end.i.loopexit114.unr-lcssa, label %cond.end.38.us.i, !dbg !5902

cond.end.38.us86.i:                               ; preds = %cond.end.38.us86.i, %cond.end.38.us86.i.preheader.split.split
  %i.076.us.78.i = phi i64 [ %i.076.us.78.i.unr, %cond.end.38.us86.i.preheader.split.split ], [ %add.us.89.i.3, %cond.end.38.us86.i ], !dbg !5909
  %offset.075.us.79.i = phi i64 [ %offset.075.us.79.i.unr, %cond.end.38.us86.i.preheader.split.split ], [ %add.offset.0.us.90.i.3, %cond.end.38.us86.i ], !dbg !5909
  %arrayidx32.us.81.i = getelementptr i16, i16* %11, i64 %i.076.us.78.i, !dbg !5907
  %25 = load i16, i16* %arrayidx32.us.81.i, align 2, !dbg !5907, !tbaa !5910
  %cmp40.us.88.i = icmp eq i16 %25, 47, !dbg !5912
  %add.us.89.i = add nuw nsw i64 %i.076.us.78.i, 1, !dbg !5915
  tail call void @llvm.dbg.value(metadata i64 %add.us.89.i, i64 0, metadata !1426, metadata !1974) #2, !dbg !5897
  %add.offset.0.us.90.i = select i1 %cmp40.us.88.i, i64 %add.us.89.i, i64 %offset.075.us.79.i, !dbg !5916
  tail call void @llvm.dbg.value(metadata i64 %add.us.89.i, i64 0, metadata !1424, metadata !1974) #2, !dbg !5898
  %arrayidx32.us.81.i.1 = getelementptr i16, i16* %11, i64 %add.us.89.i, !dbg !5907
  %26 = load i16, i16* %arrayidx32.us.81.i.1, align 2, !dbg !5907, !tbaa !5910
  %cmp40.us.88.i.1 = icmp eq i16 %26, 47, !dbg !5912
  %add.us.89.i.1 = add nsw i64 %i.076.us.78.i, 2, !dbg !5915
  tail call void @llvm.dbg.value(metadata i64 %add.us.89.i, i64 0, metadata !1426, metadata !1974) #2, !dbg !5897
  %add.offset.0.us.90.i.1 = select i1 %cmp40.us.88.i.1, i64 %add.us.89.i.1, i64 %add.offset.0.us.90.i, !dbg !5916
  tail call void @llvm.dbg.value(metadata i64 %add.us.89.i, i64 0, metadata !1424, metadata !1974) #2, !dbg !5898
  %arrayidx32.us.81.i.2 = getelementptr i16, i16* %11, i64 %add.us.89.i.1, !dbg !5907
  %27 = load i16, i16* %arrayidx32.us.81.i.2, align 2, !dbg !5907, !tbaa !5910
  %cmp40.us.88.i.2 = icmp eq i16 %27, 47, !dbg !5912
  %add.us.89.i.2 = add nsw i64 %i.076.us.78.i, 3, !dbg !5915
  tail call void @llvm.dbg.value(metadata i64 %add.us.89.i, i64 0, metadata !1426, metadata !1974) #2, !dbg !5897
  %add.offset.0.us.90.i.2 = select i1 %cmp40.us.88.i.2, i64 %add.us.89.i.2, i64 %add.offset.0.us.90.i.1, !dbg !5916
  tail call void @llvm.dbg.value(metadata i64 %add.us.89.i, i64 0, metadata !1424, metadata !1974) #2, !dbg !5898
  %arrayidx32.us.81.i.3 = getelementptr i16, i16* %11, i64 %add.us.89.i.2, !dbg !5907
  %28 = load i16, i16* %arrayidx32.us.81.i.3, align 2, !dbg !5907, !tbaa !5910
  %cmp40.us.88.i.3 = icmp eq i16 %28, 47, !dbg !5912
  %add.us.89.i.3 = add nsw i64 %i.076.us.78.i, 4, !dbg !5915
  tail call void @llvm.dbg.value(metadata i64 %add.us.89.i, i64 0, metadata !1426, metadata !1974) #2, !dbg !5897
  %add.offset.0.us.90.i.3 = select i1 %cmp40.us.88.i.3, i64 %add.us.89.i.3, i64 %add.offset.0.us.90.i.2, !dbg !5916
  tail call void @llvm.dbg.value(metadata i64 %add.us.89.i, i64 0, metadata !1424, metadata !1974) #2, !dbg !5898
  %exitcond109.3 = icmp eq i64 %add.us.89.i.3, %9, !dbg !5902
  br i1 %exitcond109.3, label %for.end.i.loopexit115.unr-lcssa, label %cond.end.38.us86.i, !dbg !5902

cond.end.38.i:                                    ; preds = %cond.end.38.i, %cond.end.38.i.preheader.split.split
  %i.076.i = phi i64 [ %i.076.i.unr, %cond.end.38.i.preheader.split.split ], [ %add.i.3, %cond.end.38.i ], !dbg !5909
  %offset.075.i = phi i64 [ %offset.075.i.unr, %cond.end.38.i.preheader.split.split ], [ %add.offset.0.i.3, %cond.end.38.i ], !dbg !5909
  %arrayidx35.i = getelementptr i32, i32* %10, i64 %i.076.i, !dbg !5903
  %29 = load i32, i32* %arrayidx35.i, align 4, !dbg !5903, !tbaa !5923
  %cmp40.i = icmp eq i32 %29, 47, !dbg !5912
  %add.i = add nuw nsw i64 %i.076.i, 1, !dbg !5915
  tail call void @llvm.dbg.value(metadata i64 %add.i, i64 0, metadata !1426, metadata !1974) #2, !dbg !5897
  %add.offset.0.i = select i1 %cmp40.i, i64 %add.i, i64 %offset.075.i, !dbg !5916
  tail call void @llvm.dbg.value(metadata i64 %add.i, i64 0, metadata !1424, metadata !1974) #2, !dbg !5898
  %arrayidx35.i.1 = getelementptr i32, i32* %10, i64 %add.i, !dbg !5903
  %30 = load i32, i32* %arrayidx35.i.1, align 4, !dbg !5903, !tbaa !5923
  %cmp40.i.1 = icmp eq i32 %30, 47, !dbg !5912
  %add.i.1 = add nsw i64 %i.076.i, 2, !dbg !5915
  tail call void @llvm.dbg.value(metadata i64 %add.i, i64 0, metadata !1426, metadata !1974) #2, !dbg !5897
  %add.offset.0.i.1 = select i1 %cmp40.i.1, i64 %add.i.1, i64 %add.offset.0.i, !dbg !5916
  tail call void @llvm.dbg.value(metadata i64 %add.i, i64 0, metadata !1424, metadata !1974) #2, !dbg !5898
  %arrayidx35.i.2 = getelementptr i32, i32* %10, i64 %add.i.1, !dbg !5903
  %31 = load i32, i32* %arrayidx35.i.2, align 4, !dbg !5903, !tbaa !5923
  %cmp40.i.2 = icmp eq i32 %31, 47, !dbg !5912
  %add.i.2 = add nsw i64 %i.076.i, 3, !dbg !5915
  tail call void @llvm.dbg.value(metadata i64 %add.i, i64 0, metadata !1426, metadata !1974) #2, !dbg !5897
  %add.offset.0.i.2 = select i1 %cmp40.i.2, i64 %add.i.2, i64 %add.offset.0.i.1, !dbg !5916
  tail call void @llvm.dbg.value(metadata i64 %add.i, i64 0, metadata !1424, metadata !1974) #2, !dbg !5898
  %arrayidx35.i.3 = getelementptr i32, i32* %10, i64 %add.i.2, !dbg !5903
  %32 = load i32, i32* %arrayidx35.i.3, align 4, !dbg !5903, !tbaa !5923
  %cmp40.i.3 = icmp eq i32 %32, 47, !dbg !5912
  %add.i.3 = add nsw i64 %i.076.i, 4, !dbg !5915
  tail call void @llvm.dbg.value(metadata i64 %add.i, i64 0, metadata !1426, metadata !1974) #2, !dbg !5897
  %add.offset.0.i.3 = select i1 %cmp40.i.3, i64 %add.i.3, i64 %add.offset.0.i.2, !dbg !5916
  tail call void @llvm.dbg.value(metadata i64 %add.i, i64 0, metadata !1424, metadata !1974) #2, !dbg !5898
  %exitcond.3 = icmp eq i64 %add.i.3, %9, !dbg !5902
  br i1 %exitcond.3, label %for.end.i.loopexit.unr-lcssa, label %cond.end.38.i, !dbg !5902

for.end.i.loopexit.unr-lcssa:                     ; preds = %cond.end.38.i
  %add.offset.0.i.3.lcssa = phi i64 [ %add.offset.0.i.3, %cond.end.38.i ]
  br label %for.end.i.loopexit, !dbg !5925

for.end.i.loopexit:                               ; preds = %cond.end.38.i.preheader.split, %for.end.i.loopexit.unr-lcssa
  %add.offset.0.i.lcssa = phi i64 [ %add.offset.0.i.lcssa.unr, %cond.end.38.i.preheader.split ], [ %add.offset.0.i.3.lcssa, %for.end.i.loopexit.unr-lcssa ]
  br label %for.end.i, !dbg !5925

for.end.i.loopexit114.unr-lcssa:                  ; preds = %cond.end.38.us.i
  %add.offset.0.us.i.3.lcssa = phi i64 [ %add.offset.0.us.i.3, %cond.end.38.us.i ]
  br label %for.end.i.loopexit114, !dbg !5925

for.end.i.loopexit114:                            ; preds = %cond.end.38.us.i.preheader.split, %for.end.i.loopexit114.unr-lcssa
  %add.offset.0.us.i.lcssa = phi i64 [ %add.offset.0.us.i.lcssa.unr, %cond.end.38.us.i.preheader.split ], [ %add.offset.0.us.i.3.lcssa, %for.end.i.loopexit114.unr-lcssa ]
  br label %for.end.i, !dbg !5925

for.end.i.loopexit115.unr-lcssa:                  ; preds = %cond.end.38.us86.i
  %add.offset.0.us.90.i.3.lcssa = phi i64 [ %add.offset.0.us.90.i.3, %cond.end.38.us86.i ]
  br label %for.end.i.loopexit115, !dbg !5925

for.end.i.loopexit115:                            ; preds = %cond.end.38.us86.i.preheader.split, %for.end.i.loopexit115.unr-lcssa
  %add.offset.0.us.90.i.lcssa = phi i64 [ %add.offset.0.us.90.i.lcssa.unr, %cond.end.38.us86.i.preheader.split ], [ %add.offset.0.us.90.i.3.lcssa, %for.end.i.loopexit115.unr-lcssa ]
  br label %for.end.i, !dbg !5925

for.end.i:                                        ; preds = %for.end.i.loopexit115, %for.end.i.loopexit114, %for.end.i.loopexit
  %offset.0.lcssa.i = phi i64 [ %add.offset.0.i.lcssa, %for.end.i.loopexit ], [ %add.offset.0.us.i.lcssa, %for.end.i.loopexit114 ], [ %add.offset.0.us.90.i.lcssa, %for.end.i.loopexit115 ], !dbg !5909
  %cmp44.i = icmp eq i64 %offset.0.lcssa.i, 0, !dbg !5925
  br i1 %cmp44.i, label %my_basename.exit.thread103, label %my_basename.exit, !dbg !5927

my_basename.exit.thread103:                       ; preds = %cond.end.24.i, %for.end.i
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !5928
  %33 = load i64, i64* %ob_refcnt.i, align 8, !dbg !5928, !tbaa !1991
  %inc48.i = add i64 %33, 1, !dbg !5928
  store i64 %inc48.i, i64* %ob_refcnt.i, align 8, !dbg !5928, !tbaa !1991
  tail call void @llvm.dbg.value(metadata %struct._object* %call47.i, i64 0, metadata !1413, metadata !1974), !dbg !5930
  br label %if.end.6, !dbg !5931

my_basename.exit:                                 ; preds = %for.end.i
  %call47.i = tail call %struct._object* @PyUnicode_Substring(%struct._object* %1, i64 %offset.0.lcssa.i, i64 %9) #2, !dbg !5932
  tail call void @llvm.dbg.value(metadata %struct._object* %call47.i, i64 0, metadata !1413, metadata !1974), !dbg !5930
  %cmp4 = icmp eq %struct._object* %call47.i, null, !dbg !5933
  br i1 %cmp4, label %cleanup, label %if.end.6, !dbg !5931

if.end.6:                                         ; preds = %my_basename.exit.thread103, %entry, %land.lhs.true, %my_basename.exit
  %filename.0 = phi %struct._object* [ %call47.i, %my_basename.exit ], [ null, %land.lhs.true ], [ null, %entry ], [ %1, %my_basename.exit.thread103 ]
  %lineno = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %self, i64 0, i32 9, !dbg !5935
  %34 = load %struct._object*, %struct._object** %lineno, align 8, !dbg !5936, !tbaa !5938
  %cmp7 = icmp eq %struct._object* %34, null, !dbg !5939
  br i1 %cmp7, label %land.end, label %land.rhs, !dbg !5940

land.rhs:                                         ; preds = %if.end.6
  %ob_type9 = getelementptr inbounds %struct._object, %struct._object* %34, i64 0, i32 1, !dbg !5941
  %35 = load %struct._typeobject*, %struct._typeobject** %ob_type9, align 8, !dbg !5941, !tbaa !2010
  %cmp10 = icmp eq %struct._typeobject* %35, @PyLong_Type, !dbg !5941
  br label %land.end

land.end:                                         ; preds = %if.end.6, %land.rhs
  %36 = phi i1 [ false, %if.end.6 ], [ %cmp10, %land.rhs ]
  %tobool11 = icmp ne %struct._object* %filename.0, null, !dbg !5943
  %or.cond = or i1 %tobool11, %36, !dbg !5945
  br i1 %or.cond, label %if.end.18, label %if.then.14, !dbg !5945

if.then.14:                                       ; preds = %land.end
  %msg = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %self, i64 0, i32 7, !dbg !5946
  %37 = load %struct._object*, %struct._object** %msg, align 8, !dbg !5946, !tbaa !5947
  %tobool15 = icmp eq %struct._object* %37, null, !dbg !5948
  %_Py_NoneStruct. = select i1 %tobool15, %struct._object* @_Py_NoneStruct, %struct._object* %37, !dbg !5948
  %call17 = tail call %struct._object* @PyObject_Str(%struct._object* %_Py_NoneStruct.) #2, !dbg !5949
  br label %cleanup, !dbg !5952

if.end.18:                                        ; preds = %land.end
  %or.cond71 = and i1 %tobool11, %36, !dbg !5953
  %msg23 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %self, i64 0, i32 7, !dbg !5954
  %38 = load %struct._object*, %struct._object** %msg23, align 8, !dbg !5954, !tbaa !5947
  br i1 %or.cond71, label %do.body, label %if.else.33, !dbg !5953

if.else.33:                                       ; preds = %if.end.18
  %tobool37 = icmp ne %struct._object* %38, null, !dbg !5955
  %._Py_NoneStruct = select i1 %tobool37, %struct._object* %38, %struct._object* @_Py_NoneStruct, !dbg !5955
  br i1 %tobool11, label %do.body.thread, label %do.body.thread106, !dbg !5957

do.body.thread:                                   ; preds = %if.else.33
  %call43 = tail call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.155, i64 0, i64 0), %struct._object* %._Py_NoneStruct, %struct._object* %filename.0) #2, !dbg !5958
  tail call void @llvm.dbg.value(metadata %struct._object* %call43, i64 0, metadata !1414, metadata !1974), !dbg !5959
  tail call void @llvm.dbg.value(metadata %struct._object* %filename.0, i64 0, metadata !1416, metadata !1974), !dbg !5960
  br label %do.body.59, !dbg !5962

do.body.thread106:                                ; preds = %if.else.33
  tail call void @llvm.dbg.value(metadata i32* %overflow, i64 0, metadata !1415, metadata !1974), !dbg !5963
  %call53 = call i64 @PyLong_AsLongAndOverflow(%struct._object* %34, i32* nonnull %overflow) #2, !dbg !5964
  %call54 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.156, i64 0, i64 0), %struct._object* %._Py_NoneStruct, i64 %call53) #2, !dbg !5965
  call void @llvm.dbg.value(metadata %struct._object* %call54, i64 0, metadata !1414, metadata !1974), !dbg !5959
  call void @llvm.dbg.value(metadata %struct._object* %filename.0, i64 0, metadata !1416, metadata !1974), !dbg !5960
  br label %cleanup, !dbg !5962

do.body:                                          ; preds = %if.end.18
  %tobool24 = icmp eq %struct._object* %38, null, !dbg !5966
  %_Py_NoneStruct.100 = select i1 %tobool24, %struct._object* @_Py_NoneStruct, %struct._object* %38, !dbg !5966
  tail call void @llvm.dbg.value(metadata i32* %overflow, i64 0, metadata !1415, metadata !1974), !dbg !5963
  %call31 = call i64 @PyLong_AsLongAndOverflow(%struct._object* %34, i32* nonnull %overflow) #2, !dbg !5967
  %call32 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.154, i64 0, i64 0), %struct._object* %_Py_NoneStruct.100, %struct._object* %filename.0, i64 %call31) #2, !dbg !5968
  call void @llvm.dbg.value(metadata %struct._object* %call32, i64 0, metadata !1414, metadata !1974), !dbg !5959
  call void @llvm.dbg.value(metadata %struct._object* %filename.0, i64 0, metadata !1416, metadata !1974), !dbg !5960
  br label %do.body.59, !dbg !5962

do.body.59:                                       ; preds = %do.body, %do.body.thread
  %result.0105 = phi %struct._object* [ %call43, %do.body.thread ], [ %call32, %do.body ]
  call void @llvm.dbg.value(metadata %struct._object* %filename.0, i64 0, metadata !1418, metadata !1974), !dbg !5969
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %filename.0, i64 0, i32 0, !dbg !5971
  %39 = load i64, i64* %ob_refcnt, align 8, !dbg !5971, !tbaa !1991
  %dec = add i64 %39, -1, !dbg !5971
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5971, !tbaa !1991
  %cmp60 = icmp eq i64 %dec, 0, !dbg !5971
  br i1 %cmp60, label %if.else.62, label %cleanup, !dbg !5973

if.else.62:                                       ; preds = %do.body.59
  %ob_type63 = getelementptr inbounds %struct._object, %struct._object* %filename.0, i64 0, i32 1, !dbg !5974
  %40 = load %struct._typeobject*, %struct._typeobject** %ob_type63, align 8, !dbg !5974, !tbaa !2010
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %40, i64 0, i32 4, !dbg !5974
  %41 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5974, !tbaa !2032
  call void %41(%struct._object* %filename.0) #2, !dbg !5974
  br label %cleanup

cleanup:                                          ; preds = %cond.false.i, %do.body.thread106, %do.body.59, %if.else.62, %my_basename.exit, %if.then.14
  %retval.0 = phi %struct._object* [ %call17, %if.then.14 ], [ null, %my_basename.exit ], [ %result.0105, %if.else.62 ], [ %result.0105, %do.body.59 ], [ %call54, %do.body.thread106 ], [ null, %cond.false.i ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #2, !dbg !5976
  ret %struct._object* %retval.0, !dbg !5976
}

; Function Attrs: nounwind uwtable
define internal i32 @SyntaxError_traverse(%struct.PySyntaxErrorObject* nocapture readonly %self, i32 (%struct._object*, i8*)* nocapture %visit, i8* %arg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PySyntaxErrorObject* %self, i64 0, metadata !1433, metadata !1974), !dbg !5977
  tail call void @llvm.dbg.value(metadata i32 (%struct._object*, i8*)* %visit, i64 0, metadata !1434, metadata !1974), !dbg !5978
  tail call void @llvm.dbg.value(metadata i8* %arg, i64 0, metadata !1435, metadata !1974), !dbg !5979
  %msg = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %self, i64 0, i32 7, !dbg !5980
  %0 = load %struct._object*, %struct._object** %msg, align 8, !dbg !5980, !tbaa !5947
  %tobool = icmp eq %struct._object* %0, null, !dbg !5980
  br i1 %tobool, label %do.body.5, label %if.then, !dbg !5982

if.then:                                          ; preds = %entry
  %call = tail call i32 %visit(%struct._object* %0, i8* %arg) #2, !dbg !5983
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !1436, metadata !1974), !dbg !5983
  %tobool2 = icmp eq i32 %call, 0, !dbg !5985
  br i1 %tobool2, label %do.body.5, label %return

do.body.5:                                        ; preds = %entry, %if.then
  %filename = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %self, i64 0, i32 8, !dbg !5987
  %1 = load %struct._object*, %struct._object** %filename, align 8, !dbg !5987, !tbaa !5868
  %tobool6 = icmp eq %struct._object* %1, null, !dbg !5987
  br i1 %tobool6, label %do.body.19, label %if.then.7, !dbg !5989

if.then.7:                                        ; preds = %do.body.5
  %call10 = tail call i32 %visit(%struct._object* %1, i8* %arg) #2, !dbg !5990
  tail call void @llvm.dbg.value(metadata i32 %call10, i64 0, metadata !1440, metadata !1974), !dbg !5990
  %tobool11 = icmp eq i32 %call10, 0, !dbg !5992
  br i1 %tobool11, label %do.body.19, label %return

do.body.19:                                       ; preds = %do.body.5, %if.then.7
  %lineno = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %self, i64 0, i32 9, !dbg !5994
  %2 = load %struct._object*, %struct._object** %lineno, align 8, !dbg !5994, !tbaa !5938
  %tobool20 = icmp eq %struct._object* %2, null, !dbg !5994
  br i1 %tobool20, label %do.body.33, label %if.then.21, !dbg !5996

if.then.21:                                       ; preds = %do.body.19
  %call24 = tail call i32 %visit(%struct._object* %2, i8* %arg) #2, !dbg !5997
  tail call void @llvm.dbg.value(metadata i32 %call24, i64 0, metadata !1444, metadata !1974), !dbg !5997
  %tobool25 = icmp eq i32 %call24, 0, !dbg !5999
  br i1 %tobool25, label %do.body.33, label %return

do.body.33:                                       ; preds = %do.body.19, %if.then.21
  %offset = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %self, i64 0, i32 10, !dbg !6001
  %3 = load %struct._object*, %struct._object** %offset, align 8, !dbg !6001, !tbaa !6003
  %tobool34 = icmp eq %struct._object* %3, null, !dbg !6001
  br i1 %tobool34, label %do.body.47, label %if.then.35, !dbg !6004

if.then.35:                                       ; preds = %do.body.33
  %call38 = tail call i32 %visit(%struct._object* %3, i8* %arg) #2, !dbg !6005
  tail call void @llvm.dbg.value(metadata i32 %call38, i64 0, metadata !1448, metadata !1974), !dbg !6005
  %tobool39 = icmp eq i32 %call38, 0, !dbg !6007
  br i1 %tobool39, label %do.body.47, label %return

do.body.47:                                       ; preds = %do.body.33, %if.then.35
  %text = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %self, i64 0, i32 11, !dbg !6009
  %4 = load %struct._object*, %struct._object** %text, align 8, !dbg !6009, !tbaa !6011
  %tobool48 = icmp eq %struct._object* %4, null, !dbg !6009
  br i1 %tobool48, label %do.body.61, label %if.then.49, !dbg !6012

if.then.49:                                       ; preds = %do.body.47
  %call52 = tail call i32 %visit(%struct._object* %4, i8* %arg) #2, !dbg !6013
  tail call void @llvm.dbg.value(metadata i32 %call52, i64 0, metadata !1452, metadata !1974), !dbg !6013
  %tobool53 = icmp eq i32 %call52, 0, !dbg !6015
  br i1 %tobool53, label %do.body.61, label %return

do.body.61:                                       ; preds = %do.body.47, %if.then.49
  %print_file_and_line = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %self, i64 0, i32 12, !dbg !6017
  %5 = load %struct._object*, %struct._object** %print_file_and_line, align 8, !dbg !6017, !tbaa !6019
  %tobool62 = icmp eq %struct._object* %5, null, !dbg !6017
  br i1 %tobool62, label %do.end.74, label %if.then.63, !dbg !6020

if.then.63:                                       ; preds = %do.body.61
  %call66 = tail call i32 %visit(%struct._object* %5, i8* %arg) #2, !dbg !6021
  tail call void @llvm.dbg.value(metadata i32 %call66, i64 0, metadata !1456, metadata !1974), !dbg !6021
  %tobool67 = icmp eq i32 %call66, 0, !dbg !6023
  br i1 %tobool67, label %do.end.74, label %return

do.end.74:                                        ; preds = %do.body.61, %if.then.63
  tail call void @llvm.dbg.value(metadata i32 (%struct._object*, i8*)* %visit, i64 0, metadata !878, metadata !1974) #2, !dbg !6025
  tail call void @llvm.dbg.value(metadata i8* %arg, i64 0, metadata !879, metadata !1974) #2, !dbg !6027
  %6 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %self, i64 0, i32 1, !dbg !6028
  %7 = load %struct._object*, %struct._object** %6, align 8, !dbg !6028, !tbaa !4084
  %tobool.i = icmp eq %struct._object* %7, null, !dbg !6028
  br i1 %tobool.i, label %do.body.5.i, label %if.then.i, !dbg !6029

if.then.i:                                        ; preds = %do.end.74
  %call.i = tail call i32 %visit(%struct._object* %7, i8* %arg) #2, !dbg !6030
  tail call void @llvm.dbg.value(metadata i32 %call.i, i64 0, metadata !880, metadata !1974) #2, !dbg !6030
  %tobool2.i = icmp eq i32 %call.i, 0, !dbg !6031
  br i1 %tobool2.i, label %do.body.5.i, label %return, !dbg !6032

do.body.5.i:                                      ; preds = %if.then.i, %do.end.74
  %8 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %self, i64 0, i32 2, !dbg !6033
  %9 = load %struct._object*, %struct._object** %8, align 8, !dbg !6033, !tbaa !4091
  %tobool6.i = icmp eq %struct._object* %9, null, !dbg !6033
  br i1 %tobool6.i, label %do.body.19.i, label %if.then.7.i, !dbg !6034

if.then.7.i:                                      ; preds = %do.body.5.i
  %call10.i = tail call i32 %visit(%struct._object* %9, i8* %arg) #2, !dbg !6035
  tail call void @llvm.dbg.value(metadata i32 %call10.i, i64 0, metadata !884, metadata !1974) #2, !dbg !6035
  %tobool11.i = icmp eq i32 %call10.i, 0, !dbg !6036
  br i1 %tobool11.i, label %do.body.19.i, label %return, !dbg !6032

do.body.19.i:                                     ; preds = %if.then.7.i, %do.body.5.i
  %10 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %self, i64 0, i32 3, !dbg !6037
  %11 = load %struct._object*, %struct._object** %10, align 8, !dbg !6037, !tbaa !1979
  %tobool20.i = icmp eq %struct._object* %11, null, !dbg !6037
  br i1 %tobool20.i, label %do.body.33.i, label %if.then.21.i, !dbg !6038

if.then.21.i:                                     ; preds = %do.body.19.i
  %call24.i = tail call i32 %visit(%struct._object* %11, i8* %arg) #2, !dbg !6039
  tail call void @llvm.dbg.value(metadata i32 %call24.i, i64 0, metadata !888, metadata !1974) #2, !dbg !6039
  %tobool25.i = icmp eq i32 %call24.i, 0, !dbg !6040
  br i1 %tobool25.i, label %do.body.33.i, label %return, !dbg !6032

do.body.33.i:                                     ; preds = %if.then.21.i, %do.body.19.i
  %12 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %self, i64 0, i32 5, !dbg !6041
  %13 = load %struct._object*, %struct._object** %12, align 8, !dbg !6041, !tbaa !2068
  %tobool34.i = icmp eq %struct._object* %13, null, !dbg !6041
  br i1 %tobool34.i, label %do.body.47.i, label %if.then.35.i, !dbg !6042

if.then.35.i:                                     ; preds = %do.body.33.i
  %call38.i = tail call i32 %visit(%struct._object* %13, i8* %arg) #2, !dbg !6043
  tail call void @llvm.dbg.value(metadata i32 %call38.i, i64 0, metadata !892, metadata !1974) #2, !dbg !6043
  %tobool39.i = icmp eq i32 %call38.i, 0, !dbg !6044
  br i1 %tobool39.i, label %do.body.47.i, label %return, !dbg !6032

do.body.47.i:                                     ; preds = %if.then.35.i, %do.body.33.i
  %14 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %self, i64 0, i32 4, !dbg !6045
  %15 = load %struct._object*, %struct._object** %14, align 8, !dbg !6045, !tbaa !2100
  %tobool48.i = icmp eq %struct._object* %15, null, !dbg !6045
  br i1 %tobool48.i, label %do.end.60.i, label %if.then.49.i, !dbg !6046

if.then.49.i:                                     ; preds = %do.body.47.i
  %call52.i = tail call i32 %visit(%struct._object* %15, i8* %arg) #2, !dbg !6047
  tail call void @llvm.dbg.value(metadata i32 %call52.i, i64 0, metadata !896, metadata !1974) #2, !dbg !6047
  %tobool53.i = icmp eq i32 %call52.i, 0, !dbg !6048
  br i1 %tobool53.i, label %do.end.60.i, label %return, !dbg !6032

do.end.60.i:                                      ; preds = %if.then.49.i, %do.body.47.i
  br label %return, !dbg !6049

return:                                           ; preds = %do.end.60.i, %if.then.49.i, %if.then.35.i, %if.then.21.i, %if.then.7.i, %if.then.i, %if.then.63, %if.then.49, %if.then.35, %if.then.21, %if.then.7, %if.then
  %retval.11 = phi i32 [ %call66, %if.then.63 ], [ %call52, %if.then.49 ], [ %call38, %if.then.35 ], [ %call24, %if.then.21 ], [ %call10, %if.then.7 ], [ %call, %if.then ], [ 0, %do.end.60.i ], [ %call52.i, %if.then.49.i ], [ %call38.i, %if.then.35.i ], [ %call24.i, %if.then.21.i ], [ %call10.i, %if.then.7.i ], [ %call.i, %if.then.i ]
  ret i32 %retval.11, !dbg !6050
}

; Function Attrs: nounwind uwtable
define internal i32 @SyntaxError_clear(%struct.PySyntaxErrorObject* nocapture %self) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PySyntaxErrorObject* %self, i64 0, metadata !1464, metadata !1974), !dbg !6051
  %msg = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %self, i64 0, i32 7, !dbg !6052
  %0 = load %struct._object*, %struct._object** %msg, align 8, !dbg !6052, !tbaa !5947
  tail call void @llvm.dbg.value(metadata %struct._object* %0, i64 0, metadata !1465, metadata !1974), !dbg !6052
  %cmp = icmp eq %struct._object* %0, null, !dbg !6054
  br i1 %cmp, label %if.end.5, label %if.then, !dbg !6055

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %msg, align 8, !dbg !6056, !tbaa !5947
  tail call void @llvm.dbg.value(metadata %struct._object* %0, i64 0, metadata !1467, metadata !1974), !dbg !6058
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %0, i64 0, i32 0, !dbg !6060
  %1 = load i64, i64* %ob_refcnt, align 8, !dbg !6060, !tbaa !1991
  %dec = add i64 %1, -1, !dbg !6060
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6060, !tbaa !1991
  %cmp3 = icmp eq i64 %dec, 0, !dbg !6060
  br i1 %cmp3, label %if.else, label %if.end.5, !dbg !6062

if.else:                                          ; preds = %if.then
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i64 0, i32 1, !dbg !6063
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6063, !tbaa !2010
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i64 0, i32 4, !dbg !6063
  %3 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6063, !tbaa !2032
  tail call void %3(%struct._object* %0) #2, !dbg !6063
  br label %if.end.5

if.end.5:                                         ; preds = %if.else, %if.then, %entry
  %filename = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %self, i64 0, i32 8, !dbg !6065
  %4 = load %struct._object*, %struct._object** %filename, align 8, !dbg !6065, !tbaa !5868
  tail call void @llvm.dbg.value(metadata %struct._object* %4, i64 0, metadata !1471, metadata !1974), !dbg !6065
  %cmp10 = icmp eq %struct._object* %4, null, !dbg !6067
  br i1 %cmp10, label %if.end.25, label %if.then.11, !dbg !6068

if.then.11:                                       ; preds = %if.end.5
  store %struct._object* null, %struct._object** %filename, align 8, !dbg !6069, !tbaa !5868
  tail call void @llvm.dbg.value(metadata %struct._object* %4, i64 0, metadata !1473, metadata !1974), !dbg !6071
  %ob_refcnt15 = getelementptr inbounds %struct._object, %struct._object* %4, i64 0, i32 0, !dbg !6073
  %5 = load i64, i64* %ob_refcnt15, align 8, !dbg !6073, !tbaa !1991
  %dec16 = add i64 %5, -1, !dbg !6073
  store i64 %dec16, i64* %ob_refcnt15, align 8, !dbg !6073, !tbaa !1991
  %cmp17 = icmp eq i64 %dec16, 0, !dbg !6073
  br i1 %cmp17, label %if.else.19, label %if.end.25, !dbg !6075

if.else.19:                                       ; preds = %if.then.11
  %ob_type20 = getelementptr inbounds %struct._object, %struct._object* %4, i64 0, i32 1, !dbg !6076
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type20, align 8, !dbg !6076, !tbaa !2010
  %tp_dealloc21 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i64 0, i32 4, !dbg !6076
  %7 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc21, align 8, !dbg !6076, !tbaa !2032
  tail call void %7(%struct._object* %4) #2, !dbg !6076
  br label %if.end.25

if.end.25:                                        ; preds = %if.else.19, %if.then.11, %if.end.5
  %lineno = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %self, i64 0, i32 9, !dbg !6078
  %8 = load %struct._object*, %struct._object** %lineno, align 8, !dbg !6078, !tbaa !5938
  tail call void @llvm.dbg.value(metadata %struct._object* %8, i64 0, metadata !1477, metadata !1974), !dbg !6078
  %cmp30 = icmp eq %struct._object* %8, null, !dbg !6080
  br i1 %cmp30, label %if.end.45, label %if.then.31, !dbg !6081

if.then.31:                                       ; preds = %if.end.25
  store %struct._object* null, %struct._object** %lineno, align 8, !dbg !6082, !tbaa !5938
  tail call void @llvm.dbg.value(metadata %struct._object* %8, i64 0, metadata !1479, metadata !1974), !dbg !6084
  %ob_refcnt35 = getelementptr inbounds %struct._object, %struct._object* %8, i64 0, i32 0, !dbg !6086
  %9 = load i64, i64* %ob_refcnt35, align 8, !dbg !6086, !tbaa !1991
  %dec36 = add i64 %9, -1, !dbg !6086
  store i64 %dec36, i64* %ob_refcnt35, align 8, !dbg !6086, !tbaa !1991
  %cmp37 = icmp eq i64 %dec36, 0, !dbg !6086
  br i1 %cmp37, label %if.else.39, label %if.end.45, !dbg !6088

if.else.39:                                       ; preds = %if.then.31
  %ob_type40 = getelementptr inbounds %struct._object, %struct._object* %8, i64 0, i32 1, !dbg !6089
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type40, align 8, !dbg !6089, !tbaa !2010
  %tp_dealloc41 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i64 0, i32 4, !dbg !6089
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc41, align 8, !dbg !6089, !tbaa !2032
  tail call void %11(%struct._object* %8) #2, !dbg !6089
  br label %if.end.45

if.end.45:                                        ; preds = %if.else.39, %if.then.31, %if.end.25
  %offset = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %self, i64 0, i32 10, !dbg !6091
  %12 = load %struct._object*, %struct._object** %offset, align 8, !dbg !6091, !tbaa !6003
  tail call void @llvm.dbg.value(metadata %struct._object* %12, i64 0, metadata !1483, metadata !1974), !dbg !6091
  %cmp50 = icmp eq %struct._object* %12, null, !dbg !6093
  br i1 %cmp50, label %if.end.65, label %if.then.51, !dbg !6094

if.then.51:                                       ; preds = %if.end.45
  store %struct._object* null, %struct._object** %offset, align 8, !dbg !6095, !tbaa !6003
  tail call void @llvm.dbg.value(metadata %struct._object* %12, i64 0, metadata !1485, metadata !1974), !dbg !6097
  %ob_refcnt55 = getelementptr inbounds %struct._object, %struct._object* %12, i64 0, i32 0, !dbg !6099
  %13 = load i64, i64* %ob_refcnt55, align 8, !dbg !6099, !tbaa !1991
  %dec56 = add i64 %13, -1, !dbg !6099
  store i64 %dec56, i64* %ob_refcnt55, align 8, !dbg !6099, !tbaa !1991
  %cmp57 = icmp eq i64 %dec56, 0, !dbg !6099
  br i1 %cmp57, label %if.else.59, label %if.end.65, !dbg !6101

if.else.59:                                       ; preds = %if.then.51
  %ob_type60 = getelementptr inbounds %struct._object, %struct._object* %12, i64 0, i32 1, !dbg !6102
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type60, align 8, !dbg !6102, !tbaa !2010
  %tp_dealloc61 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i64 0, i32 4, !dbg !6102
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc61, align 8, !dbg !6102, !tbaa !2032
  tail call void %15(%struct._object* %12) #2, !dbg !6102
  br label %if.end.65

if.end.65:                                        ; preds = %if.else.59, %if.then.51, %if.end.45
  %text = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %self, i64 0, i32 11, !dbg !6104
  %16 = load %struct._object*, %struct._object** %text, align 8, !dbg !6104, !tbaa !6011
  tail call void @llvm.dbg.value(metadata %struct._object* %16, i64 0, metadata !1489, metadata !1974), !dbg !6104
  %cmp70 = icmp eq %struct._object* %16, null, !dbg !6106
  br i1 %cmp70, label %if.end.85, label %if.then.71, !dbg !6107

if.then.71:                                       ; preds = %if.end.65
  store %struct._object* null, %struct._object** %text, align 8, !dbg !6108, !tbaa !6011
  tail call void @llvm.dbg.value(metadata %struct._object* %16, i64 0, metadata !1491, metadata !1974), !dbg !6110
  %ob_refcnt75 = getelementptr inbounds %struct._object, %struct._object* %16, i64 0, i32 0, !dbg !6112
  %17 = load i64, i64* %ob_refcnt75, align 8, !dbg !6112, !tbaa !1991
  %dec76 = add i64 %17, -1, !dbg !6112
  store i64 %dec76, i64* %ob_refcnt75, align 8, !dbg !6112, !tbaa !1991
  %cmp77 = icmp eq i64 %dec76, 0, !dbg !6112
  br i1 %cmp77, label %if.else.79, label %if.end.85, !dbg !6114

if.else.79:                                       ; preds = %if.then.71
  %ob_type80 = getelementptr inbounds %struct._object, %struct._object* %16, i64 0, i32 1, !dbg !6115
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type80, align 8, !dbg !6115, !tbaa !2010
  %tp_dealloc81 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i64 0, i32 4, !dbg !6115
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc81, align 8, !dbg !6115, !tbaa !2032
  tail call void %19(%struct._object* %16) #2, !dbg !6115
  br label %if.end.85

if.end.85:                                        ; preds = %if.else.79, %if.then.71, %if.end.65
  %print_file_and_line = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %self, i64 0, i32 12, !dbg !6117
  %20 = load %struct._object*, %struct._object** %print_file_and_line, align 8, !dbg !6117, !tbaa !6019
  tail call void @llvm.dbg.value(metadata %struct._object* %20, i64 0, metadata !1495, metadata !1974), !dbg !6117
  %cmp90 = icmp eq %struct._object* %20, null, !dbg !6119
  br i1 %cmp90, label %if.end.105, label %if.then.91, !dbg !6120

if.then.91:                                       ; preds = %if.end.85
  store %struct._object* null, %struct._object** %print_file_and_line, align 8, !dbg !6121, !tbaa !6019
  tail call void @llvm.dbg.value(metadata %struct._object* %20, i64 0, metadata !1497, metadata !1974), !dbg !6123
  %ob_refcnt95 = getelementptr inbounds %struct._object, %struct._object* %20, i64 0, i32 0, !dbg !6125
  %21 = load i64, i64* %ob_refcnt95, align 8, !dbg !6125, !tbaa !1991
  %dec96 = add i64 %21, -1, !dbg !6125
  store i64 %dec96, i64* %ob_refcnt95, align 8, !dbg !6125, !tbaa !1991
  %cmp97 = icmp eq i64 %dec96, 0, !dbg !6125
  br i1 %cmp97, label %if.else.99, label %if.end.105, !dbg !6127

if.else.99:                                       ; preds = %if.then.91
  %ob_type100 = getelementptr inbounds %struct._object, %struct._object* %20, i64 0, i32 1, !dbg !6128
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type100, align 8, !dbg !6128, !tbaa !2010
  %tp_dealloc101 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %22, i64 0, i32 4, !dbg !6128
  %23 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc101, align 8, !dbg !6128, !tbaa !2032
  tail call void %23(%struct._object* %20) #2, !dbg !6128
  br label %if.end.105

if.end.105:                                       ; preds = %if.else.99, %if.then.91, %if.end.85
  %24 = bitcast %struct.PySyntaxErrorObject* %self to %struct.PyBaseExceptionObject*, !dbg !6130
  %call = tail call i32 @BaseException_clear(%struct.PyBaseExceptionObject* %24), !dbg !6131
  ret i32 0, !dbg !6132
}

; Function Attrs: nounwind uwtable
define internal i32 @SyntaxError_init(%struct.PySyntaxErrorObject* nocapture %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PySyntaxErrorObject* %self, i64 0, metadata !1505, metadata !1974), !dbg !6133
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1506, metadata !1974), !dbg !6134
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !1507, metadata !1974), !dbg !6135
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1508, metadata !1974), !dbg !6136
  %0 = getelementptr inbounds %struct._object, %struct._object* %args, i64 1, i32 0, !dbg !6137
  %1 = load i64, i64* %0, align 8, !dbg !6137, !tbaa !2297
  tail call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !1509, metadata !1974), !dbg !6138
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1790, metadata !1974) #2, !dbg !6139
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !1791, metadata !1974) #2, !dbg !6142
  %2 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %self, i64 0, i32 0, i32 1, !dbg !6143
  %3 = load %struct._typeobject*, %struct._typeobject** %2, align 8, !dbg !6143, !tbaa !2010
  %tp_name.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 1, !dbg !6144
  %4 = load i8*, i8** %tp_name.i, align 8, !dbg !6144, !tbaa !4130
  %call.i = tail call i32 @_PyArg_NoKeywords(i8* %4, %struct._object* %kwds) #2, !dbg !6145
  %tobool.i = icmp eq i32 %call.i, 0, !dbg !6145
  br i1 %tobool.i, label %cleanup, label %if.end.i, !dbg !6146

if.end.i:                                         ; preds = %entry
  %5 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %self, i64 0, i32 2, !dbg !6147
  %6 = load %struct._object*, %struct._object** %5, align 8, !dbg !6147, !tbaa !4091
  tail call void @llvm.dbg.value(metadata %struct._object* %6, i64 0, metadata !1792, metadata !1974) #2, !dbg !6148
  store %struct._object* %args, %struct._object** %5, align 8, !dbg !6149, !tbaa !4091
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %args, i64 0, i32 0, !dbg !6150
  %7 = load i64, i64* %ob_refcnt.i, align 8, !dbg !6150, !tbaa !1991
  %inc.i = add i64 %7, 1, !dbg !6150
  store i64 %inc.i, i64* %ob_refcnt.i, align 8, !dbg !6150, !tbaa !1991
  tail call void @llvm.dbg.value(metadata %struct._object* %6, i64 0, metadata !1793, metadata !1974) #2, !dbg !6151
  %cmp.i = icmp eq %struct._object* %6, null, !dbg !6152
  br i1 %cmp.i, label %if.end, label %do.body.6.i, !dbg !6153

do.body.6.i:                                      ; preds = %if.end.i
  tail call void @llvm.dbg.value(metadata %struct._object* %6, i64 0, metadata !1795, metadata !1974) #2, !dbg !6154
  %ob_refcnt8.i = getelementptr inbounds %struct._object, %struct._object* %6, i64 0, i32 0, !dbg !6155
  %8 = load i64, i64* %ob_refcnt8.i, align 8, !dbg !6155, !tbaa !1991
  %dec.i = add i64 %8, -1, !dbg !6155
  store i64 %dec.i, i64* %ob_refcnt8.i, align 8, !dbg !6155, !tbaa !1991
  %cmp9.i = icmp eq i64 %dec.i, 0, !dbg !6155
  br i1 %cmp9.i, label %if.else.i, label %if.end, !dbg !6156

if.else.i:                                        ; preds = %do.body.6.i
  %ob_type11.i = getelementptr inbounds %struct._object, %struct._object* %6, i64 0, i32 1, !dbg !6157
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type11.i, align 8, !dbg !6157, !tbaa !2010
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i64 0, i32 4, !dbg !6157
  %10 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !6157, !tbaa !2032
  tail call void %10(%struct._object* %6) #2, !dbg !6157
  br label %if.end, !dbg !6158

if.end:                                           ; preds = %if.else.i, %do.body.6.i, %if.end.i
  %cmp1 = icmp sgt i64 %1, 0, !dbg !6159
  br i1 %cmp1, label %do.body, label %cleanup, !dbg !6160

do.body:                                          ; preds = %if.end
  %msg = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %self, i64 0, i32 7, !dbg !6161
  %11 = load %struct._object*, %struct._object** %msg, align 8, !dbg !6161, !tbaa !5947
  tail call void @llvm.dbg.value(metadata %struct._object* %11, i64 0, metadata !1510, metadata !1974), !dbg !6161
  %cmp3 = icmp eq %struct._object* %11, null, !dbg !6163
  br i1 %cmp3, label %if.end.16, label %if.then.4, !dbg !6164

if.then.4:                                        ; preds = %do.body
  store %struct._object* null, %struct._object** %msg, align 8, !dbg !6165, !tbaa !5947
  tail call void @llvm.dbg.value(metadata %struct._object* %11, i64 0, metadata !1514, metadata !1974), !dbg !6167
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i64 0, i32 0, !dbg !6169
  %12 = load i64, i64* %ob_refcnt, align 8, !dbg !6169, !tbaa !1991
  %dec = add i64 %12, -1, !dbg !6169
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6169, !tbaa !1991
  %cmp7 = icmp eq i64 %dec, 0, !dbg !6169
  br i1 %cmp7, label %if.else, label %if.end.16, !dbg !6171

if.else:                                          ; preds = %if.then.4
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i64 0, i32 1, !dbg !6172
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6172, !tbaa !2010
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i64 0, i32 4, !dbg !6172
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6172, !tbaa !2032
  tail call void %14(%struct._object* %11) #2, !dbg !6172
  br label %if.end.16

if.end.16:                                        ; preds = %do.body, %if.then.4, %if.else
  %ob_item = getelementptr inbounds %struct._object, %struct._object* %args, i64 1, i32 1, !dbg !6174
  %arrayidx = bitcast %struct._typeobject** %ob_item to %struct._object**, !dbg !6174
  %15 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !6174, !tbaa !2002
  store %struct._object* %15, %struct._object** %msg, align 8, !dbg !6175, !tbaa !5947
  %ob_refcnt15 = getelementptr inbounds %struct._object, %struct._object* %15, i64 0, i32 0, !dbg !6176
  %16 = load i64, i64* %ob_refcnt15, align 8, !dbg !6176, !tbaa !1991
  %inc = add i64 %16, 1, !dbg !6176
  store i64 %inc, i64* %ob_refcnt15, align 8, !dbg !6176, !tbaa !1991
  %cmp17 = icmp eq i64 %1, 2, !dbg !6177
  br i1 %cmp17, label %if.then.18, label %cleanup, !dbg !6178

if.then.18:                                       ; preds = %if.end.16
  %arrayidx20 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 1, !dbg !6179
  %17 = bitcast %struct._typeobject** %arrayidx20 to %struct._object**, !dbg !6179
  %18 = load %struct._object*, %struct._object** %17, align 8, !dbg !6179, !tbaa !2002
  tail call void @llvm.dbg.value(metadata %struct._object* %18, i64 0, metadata !1508, metadata !1974), !dbg !6136
  %call21 = tail call %struct._object* @PySequence_Tuple(%struct._object* %18) #2, !dbg !6180
  tail call void @llvm.dbg.value(metadata %struct._object* %call21, i64 0, metadata !1508, metadata !1974), !dbg !6136
  %tobool = icmp eq %struct._object* %call21, null, !dbg !6181
  br i1 %tobool, label %cleanup, label %if.end.23, !dbg !6183

if.end.23:                                        ; preds = %if.then.18
  %19 = getelementptr inbounds %struct._object, %struct._object* %call21, i64 1, i32 0, !dbg !6184
  %20 = load i64, i64* %19, align 8, !dbg !6184, !tbaa !2297
  %cmp25 = icmp eq i64 %20, 4, !dbg !6185
  br i1 %cmp25, label %do.body.40, label %if.then.26, !dbg !6186

if.then.26:                                       ; preds = %if.end.23
  %21 = load %struct._object*, %struct._object** @PyExc_IndexError, align 8, !dbg !6187, !tbaa !2002
  tail call void @PyErr_SetString(%struct._object* %21, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.166, i64 0, i64 0)) #2, !dbg !6188
  tail call void @llvm.dbg.value(metadata %struct._object* %call21, i64 0, metadata !1518, metadata !1974), !dbg !6189
  %ob_refcnt29 = getelementptr inbounds %struct._object, %struct._object* %call21, i64 0, i32 0, !dbg !6191
  %22 = load i64, i64* %ob_refcnt29, align 8, !dbg !6191, !tbaa !1991
  %dec30 = add i64 %22, -1, !dbg !6191
  store i64 %dec30, i64* %ob_refcnt29, align 8, !dbg !6191, !tbaa !1991
  %cmp31 = icmp eq i64 %dec30, 0, !dbg !6191
  br i1 %cmp31, label %if.else.33, label %cleanup, !dbg !6193

if.else.33:                                       ; preds = %if.then.26
  %ob_type34 = getelementptr inbounds %struct._object, %struct._object* %call21, i64 0, i32 1, !dbg !6194
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type34, align 8, !dbg !6194, !tbaa !2010
  %tp_dealloc35 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %23, i64 0, i32 4, !dbg !6194
  %24 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc35, align 8, !dbg !6194, !tbaa !2032
  tail call void %24(%struct._object* %call21) #2, !dbg !6194
  br label %cleanup

do.body.40:                                       ; preds = %if.end.23
  %filename = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %self, i64 0, i32 8, !dbg !6196
  %25 = load %struct._object*, %struct._object** %filename, align 8, !dbg !6196, !tbaa !5868
  tail call void @llvm.dbg.value(metadata %struct._object* %25, i64 0, metadata !1524, metadata !1974), !dbg !6196
  %cmp42 = icmp eq %struct._object* %25, null, !dbg !6198
  br i1 %cmp42, label %if.end.57, label %if.then.43, !dbg !6199

if.then.43:                                       ; preds = %do.body.40
  store %struct._object* null, %struct._object** %filename, align 8, !dbg !6200, !tbaa !5868
  tail call void @llvm.dbg.value(metadata %struct._object* %25, i64 0, metadata !1526, metadata !1974), !dbg !6202
  %ob_refcnt47 = getelementptr inbounds %struct._object, %struct._object* %25, i64 0, i32 0, !dbg !6204
  %26 = load i64, i64* %ob_refcnt47, align 8, !dbg !6204, !tbaa !1991
  %dec48 = add i64 %26, -1, !dbg !6204
  store i64 %dec48, i64* %ob_refcnt47, align 8, !dbg !6204, !tbaa !1991
  %cmp49 = icmp eq i64 %dec48, 0, !dbg !6204
  br i1 %cmp49, label %if.else.51, label %if.end.57, !dbg !6206

if.else.51:                                       ; preds = %if.then.43
  %ob_type52 = getelementptr inbounds %struct._object, %struct._object* %25, i64 0, i32 1, !dbg !6207
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type52, align 8, !dbg !6207, !tbaa !2010
  %tp_dealloc53 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i64 0, i32 4, !dbg !6207
  %28 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc53, align 8, !dbg !6207, !tbaa !2032
  tail call void %28(%struct._object* %25) #2, !dbg !6207
  br label %if.end.57

if.end.57:                                        ; preds = %if.else.51, %if.then.43, %do.body.40
  %ob_item60 = getelementptr inbounds %struct._object, %struct._object* %call21, i64 1, i32 1, !dbg !6209
  %arrayidx61 = bitcast %struct._typeobject** %ob_item60 to %struct._object**, !dbg !6209
  %29 = load %struct._object*, %struct._object** %arrayidx61, align 8, !dbg !6209, !tbaa !2002
  store %struct._object* %29, %struct._object** %filename, align 8, !dbg !6210, !tbaa !5868
  %ob_refcnt64 = getelementptr inbounds %struct._object, %struct._object* %29, i64 0, i32 0, !dbg !6211
  %30 = load i64, i64* %ob_refcnt64, align 8, !dbg !6211, !tbaa !1991
  %inc65 = add i64 %30, 1, !dbg !6211
  store i64 %inc65, i64* %ob_refcnt64, align 8, !dbg !6211, !tbaa !1991
  %lineno = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %self, i64 0, i32 9, !dbg !6212
  %31 = load %struct._object*, %struct._object** %lineno, align 8, !dbg !6212, !tbaa !5938
  tail call void @llvm.dbg.value(metadata %struct._object* %31, i64 0, metadata !1530, metadata !1974), !dbg !6212
  %cmp68 = icmp eq %struct._object* %31, null, !dbg !6214
  br i1 %cmp68, label %if.end.83, label %if.then.69, !dbg !6215

if.then.69:                                       ; preds = %if.end.57
  store %struct._object* null, %struct._object** %lineno, align 8, !dbg !6216, !tbaa !5938
  tail call void @llvm.dbg.value(metadata %struct._object* %31, i64 0, metadata !1532, metadata !1974), !dbg !6218
  %ob_refcnt73 = getelementptr inbounds %struct._object, %struct._object* %31, i64 0, i32 0, !dbg !6220
  %32 = load i64, i64* %ob_refcnt73, align 8, !dbg !6220, !tbaa !1991
  %dec74 = add i64 %32, -1, !dbg !6220
  store i64 %dec74, i64* %ob_refcnt73, align 8, !dbg !6220, !tbaa !1991
  %cmp75 = icmp eq i64 %dec74, 0, !dbg !6220
  br i1 %cmp75, label %if.else.77, label %if.end.83, !dbg !6222

if.else.77:                                       ; preds = %if.then.69
  %ob_type78 = getelementptr inbounds %struct._object, %struct._object* %31, i64 0, i32 1, !dbg !6223
  %33 = load %struct._typeobject*, %struct._typeobject** %ob_type78, align 8, !dbg !6223, !tbaa !2010
  %tp_dealloc79 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %33, i64 0, i32 4, !dbg !6223
  %34 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc79, align 8, !dbg !6223, !tbaa !2032
  tail call void %34(%struct._object* %31) #2, !dbg !6223
  br label %if.end.83

if.end.83:                                        ; preds = %if.else.77, %if.then.69, %if.end.57
  %arrayidx87 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item60, i64 1, !dbg !6225
  %35 = bitcast %struct._typeobject** %arrayidx87 to %struct._object**, !dbg !6225
  %36 = load %struct._object*, %struct._object** %35, align 8, !dbg !6225, !tbaa !2002
  store %struct._object* %36, %struct._object** %lineno, align 8, !dbg !6226, !tbaa !5938
  %ob_refcnt90 = getelementptr inbounds %struct._object, %struct._object* %36, i64 0, i32 0, !dbg !6227
  %37 = load i64, i64* %ob_refcnt90, align 8, !dbg !6227, !tbaa !1991
  %inc91 = add i64 %37, 1, !dbg !6227
  store i64 %inc91, i64* %ob_refcnt90, align 8, !dbg !6227, !tbaa !1991
  %offset = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %self, i64 0, i32 10, !dbg !6228
  %38 = load %struct._object*, %struct._object** %offset, align 8, !dbg !6228, !tbaa !6003
  tail call void @llvm.dbg.value(metadata %struct._object* %38, i64 0, metadata !1536, metadata !1974), !dbg !6228
  %cmp94 = icmp eq %struct._object* %38, null, !dbg !6230
  br i1 %cmp94, label %if.end.109, label %if.then.95, !dbg !6231

if.then.95:                                       ; preds = %if.end.83
  store %struct._object* null, %struct._object** %offset, align 8, !dbg !6232, !tbaa !6003
  tail call void @llvm.dbg.value(metadata %struct._object* %38, i64 0, metadata !1538, metadata !1974), !dbg !6234
  %ob_refcnt99 = getelementptr inbounds %struct._object, %struct._object* %38, i64 0, i32 0, !dbg !6236
  %39 = load i64, i64* %ob_refcnt99, align 8, !dbg !6236, !tbaa !1991
  %dec100 = add i64 %39, -1, !dbg !6236
  store i64 %dec100, i64* %ob_refcnt99, align 8, !dbg !6236, !tbaa !1991
  %cmp101 = icmp eq i64 %dec100, 0, !dbg !6236
  br i1 %cmp101, label %if.else.103, label %if.end.109, !dbg !6238

if.else.103:                                      ; preds = %if.then.95
  %ob_type104 = getelementptr inbounds %struct._object, %struct._object* %38, i64 0, i32 1, !dbg !6239
  %40 = load %struct._typeobject*, %struct._typeobject** %ob_type104, align 8, !dbg !6239, !tbaa !2010
  %tp_dealloc105 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %40, i64 0, i32 4, !dbg !6239
  %41 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc105, align 8, !dbg !6239, !tbaa !2032
  tail call void %41(%struct._object* %38) #2, !dbg !6239
  br label %if.end.109

if.end.109:                                       ; preds = %if.else.103, %if.then.95, %if.end.83
  %arrayidx113 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item60, i64 2, !dbg !6241
  %42 = bitcast %struct._typeobject** %arrayidx113 to %struct._object**, !dbg !6241
  %43 = load %struct._object*, %struct._object** %42, align 8, !dbg !6241, !tbaa !2002
  store %struct._object* %43, %struct._object** %offset, align 8, !dbg !6242, !tbaa !6003
  %ob_refcnt116 = getelementptr inbounds %struct._object, %struct._object* %43, i64 0, i32 0, !dbg !6243
  %44 = load i64, i64* %ob_refcnt116, align 8, !dbg !6243, !tbaa !1991
  %inc117 = add i64 %44, 1, !dbg !6243
  store i64 %inc117, i64* %ob_refcnt116, align 8, !dbg !6243, !tbaa !1991
  %text = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %self, i64 0, i32 11, !dbg !6244
  %45 = load %struct._object*, %struct._object** %text, align 8, !dbg !6244, !tbaa !6011
  tail call void @llvm.dbg.value(metadata %struct._object* %45, i64 0, metadata !1542, metadata !1974), !dbg !6244
  %cmp120 = icmp eq %struct._object* %45, null, !dbg !6246
  br i1 %cmp120, label %if.end.135, label %if.then.121, !dbg !6247

if.then.121:                                      ; preds = %if.end.109
  store %struct._object* null, %struct._object** %text, align 8, !dbg !6248, !tbaa !6011
  tail call void @llvm.dbg.value(metadata %struct._object* %45, i64 0, metadata !1544, metadata !1974), !dbg !6250
  %ob_refcnt125 = getelementptr inbounds %struct._object, %struct._object* %45, i64 0, i32 0, !dbg !6252
  %46 = load i64, i64* %ob_refcnt125, align 8, !dbg !6252, !tbaa !1991
  %dec126 = add i64 %46, -1, !dbg !6252
  store i64 %dec126, i64* %ob_refcnt125, align 8, !dbg !6252, !tbaa !1991
  %cmp127 = icmp eq i64 %dec126, 0, !dbg !6252
  br i1 %cmp127, label %if.else.129, label %if.end.135, !dbg !6254

if.else.129:                                      ; preds = %if.then.121
  %ob_type130 = getelementptr inbounds %struct._object, %struct._object* %45, i64 0, i32 1, !dbg !6255
  %47 = load %struct._typeobject*, %struct._typeobject** %ob_type130, align 8, !dbg !6255, !tbaa !2010
  %tp_dealloc131 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %47, i64 0, i32 4, !dbg !6255
  %48 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc131, align 8, !dbg !6255, !tbaa !2032
  tail call void %48(%struct._object* %45) #2, !dbg !6255
  br label %if.end.135

if.end.135:                                       ; preds = %if.else.129, %if.then.121, %if.end.109
  %arrayidx139 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item60, i64 3, !dbg !6257
  %49 = bitcast %struct._typeobject** %arrayidx139 to %struct._object**, !dbg !6257
  %50 = load %struct._object*, %struct._object** %49, align 8, !dbg !6257, !tbaa !2002
  store %struct._object* %50, %struct._object** %text, align 8, !dbg !6258, !tbaa !6011
  %ob_refcnt142 = getelementptr inbounds %struct._object, %struct._object* %50, i64 0, i32 0, !dbg !6259
  %51 = load i64, i64* %ob_refcnt142, align 8, !dbg !6259, !tbaa !1991
  %inc143 = add i64 %51, 1, !dbg !6259
  store i64 %inc143, i64* %ob_refcnt142, align 8, !dbg !6259, !tbaa !1991
  tail call void @llvm.dbg.value(metadata %struct._object* %call21, i64 0, metadata !1548, metadata !1974), !dbg !6260
  %ob_refcnt146 = getelementptr inbounds %struct._object, %struct._object* %call21, i64 0, i32 0, !dbg !6262
  %52 = load i64, i64* %ob_refcnt146, align 8, !dbg !6262, !tbaa !1991
  %dec147 = add i64 %52, -1, !dbg !6262
  store i64 %dec147, i64* %ob_refcnt146, align 8, !dbg !6262, !tbaa !1991
  %cmp148 = icmp eq i64 %dec147, 0, !dbg !6262
  br i1 %cmp148, label %if.else.150, label %cleanup, !dbg !6264

if.else.150:                                      ; preds = %if.end.135
  %ob_type151 = getelementptr inbounds %struct._object, %struct._object* %call21, i64 0, i32 1, !dbg !6265
  %53 = load %struct._typeobject*, %struct._typeobject** %ob_type151, align 8, !dbg !6265, !tbaa !2010
  %tp_dealloc152 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %53, i64 0, i32 4, !dbg !6265
  %54 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc152, align 8, !dbg !6265, !tbaa !2032
  tail call void %54(%struct._object* %call21) #2, !dbg !6265
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry, %if.end.16, %if.end.135, %if.else.150, %if.else.33, %if.then.26, %if.then.18
  %retval.0 = phi i32 [ -1, %if.then.18 ], [ -1, %if.then.26 ], [ -1, %if.else.33 ], [ 0, %if.else.150 ], [ 0, %if.end.135 ], [ 0, %if.end.16 ], [ -1, %entry ], [ 0, %if.end ]
  ret i32 %retval.0, !dbg !6267
}

declare i64 @PyLong_AsLongAndOverflow(%struct._object*, i32*) #3

declare i32 @_PyUnicode_Ready(%struct._object*) #3

declare %struct._object* @PyUnicode_Substring(%struct._object*, i64, i64) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @KeyError_str(%struct.PyBaseExceptionObject* nocapture readonly %self) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PyBaseExceptionObject* %self, i64 0, metadata !1552, metadata !1974), !dbg !6268
  %args = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %self, i64 0, i32 2, !dbg !6269
  %0 = load %struct._object*, %struct._object** %args, align 8, !dbg !6269, !tbaa !4091
  %1 = getelementptr inbounds %struct._object, %struct._object* %0, i64 1, i32 0, !dbg !6269
  %2 = load i64, i64* %1, align 8, !dbg !6269, !tbaa !2297
  switch i64 %2, label %sw.default.i [
    i64 1, label %if.then
    i64 0, label %sw.bb.i
  ], !dbg !6271

if.then:                                          ; preds = %entry
  %ob_item = getelementptr inbounds %struct._object, %struct._object* %0, i64 1, i32 1, !dbg !6272
  %arrayidx = bitcast %struct._typeobject** %ob_item to %struct._object**, !dbg !6272
  %3 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !6272, !tbaa !2002
  %call = tail call %struct._object* @PyObject_Repr(%struct._object* %3) #2, !dbg !6274
  br label %return, !dbg !6275

sw.bb.i:                                          ; preds = %entry
  %call.i = tail call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.84, i64 0, i64 0)) #2, !dbg !6276
  br label %return, !dbg !6278

sw.default.i:                                     ; preds = %entry
  %call5.i = tail call %struct._object* @PyObject_Str(%struct._object* %0) #2, !dbg !6279
  br label %return, !dbg !6280

return:                                           ; preds = %sw.default.i, %sw.bb.i, %if.then
  %retval.0 = phi %struct._object* [ %call, %if.then ], [ %call5.i, %sw.default.i ], [ %call.i, %sw.bb.i ]
  ret %struct._object* %retval.0, !dbg !6281
}

declare %struct._object* @PyObject_Repr(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal void @UnicodeError_dealloc(%struct.PyUnicodeErrorObject* %self) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PyUnicodeErrorObject* %self, i64 0, metadata !1580, metadata !1974), !dbg !6282
  %add.ptr = getelementptr %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %self, i64 -1, i32 9, !dbg !6283
  %0 = getelementptr inbounds i64, i64* %add.ptr, i64 2, !dbg !6285
  %1 = load i64, i64* %0, align 8, !dbg !6285, !tbaa !4432
  %and = and i64 %1, 1, !dbg !6285
  %or = or i64 %and, -4, !dbg !6285
  store i64 %or, i64* %0, align 8, !dbg !6285, !tbaa !4432
  %gc_next = bitcast i64* %add.ptr to %union._gc_head**, !dbg !6288
  %2 = load i64, i64* %add.ptr, align 8, !dbg !6288, !tbaa !4436
  %gc_prev = getelementptr inbounds i64, i64* %add.ptr, i64 1, !dbg !6288
  %3 = bitcast i64* %gc_prev to i64**, !dbg !6288
  %4 = load i64*, i64** %3, align 8, !dbg !6288, !tbaa !4437
  store i64 %2, i64* %4, align 8, !dbg !6288, !tbaa !4436
  %5 = ptrtoint i64* %4 to i64, !dbg !6288
  %6 = bitcast i64* %add.ptr to %struct.anon.0**, !dbg !6288
  %7 = load %struct.anon.0*, %struct.anon.0** %6, align 8, !dbg !6288, !tbaa !4436
  %gc_prev13 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %7, i64 0, i32 1, !dbg !6288
  %8 = bitcast %union._gc_head** %gc_prev13 to i64*, !dbg !6288
  store i64 %5, i64* %8, align 8, !dbg !6288, !tbaa !4437
  store %union._gc_head* null, %union._gc_head** %gc_next, align 8, !dbg !6288, !tbaa !4436
  tail call void @llvm.dbg.value(metadata %struct.PyUnicodeErrorObject* %self, i64 0, metadata !1627, metadata !1974) #2, !dbg !6290
  %encoding.i = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %self, i64 0, i32 7, !dbg !6292
  %9 = load %struct._object*, %struct._object** %encoding.i, align 8, !dbg !6292, !tbaa !2129
  tail call void @llvm.dbg.value(metadata %struct._object* %9, i64 0, metadata !1628, metadata !1974) #2, !dbg !6292
  %cmp.i = icmp eq %struct._object* %9, null, !dbg !6294
  br i1 %cmp.i, label %if.end.5.i, label %if.then.i, !dbg !6295

if.then.i:                                        ; preds = %entry
  store %struct._object* null, %struct._object** %encoding.i, align 8, !dbg !6296, !tbaa !2129
  tail call void @llvm.dbg.value(metadata %struct._object* %9, i64 0, metadata !1630, metadata !1974) #2, !dbg !6298
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %9, i64 0, i32 0, !dbg !6300
  %10 = load i64, i64* %ob_refcnt.i, align 8, !dbg !6300, !tbaa !1991
  %dec.i = add i64 %10, -1, !dbg !6300
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !6300, !tbaa !1991
  %cmp3.i = icmp eq i64 %dec.i, 0, !dbg !6300
  br i1 %cmp3.i, label %if.else.i, label %if.end.5.i, !dbg !6302

if.else.i:                                        ; preds = %if.then.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %9, i64 0, i32 1, !dbg !6303
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !6303, !tbaa !2010
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i64 0, i32 4, !dbg !6303
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !6303, !tbaa !2032
  tail call void %12(%struct._object* %9) #2, !dbg !6303
  br label %if.end.5.i, !dbg !6305

if.end.5.i:                                       ; preds = %if.else.i, %if.then.i, %entry
  %object.i = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %self, i64 0, i32 8, !dbg !6306
  %13 = load %struct._object*, %struct._object** %object.i, align 8, !dbg !6306, !tbaa !2174
  tail call void @llvm.dbg.value(metadata %struct._object* %13, i64 0, metadata !1634, metadata !1974) #2, !dbg !6306
  %cmp10.i = icmp eq %struct._object* %13, null, !dbg !6308
  br i1 %cmp10.i, label %if.end.25.i, label %if.then.11.i, !dbg !6309

if.then.11.i:                                     ; preds = %if.end.5.i
  store %struct._object* null, %struct._object** %object.i, align 8, !dbg !6310, !tbaa !2174
  tail call void @llvm.dbg.value(metadata %struct._object* %13, i64 0, metadata !1636, metadata !1974) #2, !dbg !6312
  %ob_refcnt15.i = getelementptr inbounds %struct._object, %struct._object* %13, i64 0, i32 0, !dbg !6314
  %14 = load i64, i64* %ob_refcnt15.i, align 8, !dbg !6314, !tbaa !1991
  %dec16.i = add i64 %14, -1, !dbg !6314
  store i64 %dec16.i, i64* %ob_refcnt15.i, align 8, !dbg !6314, !tbaa !1991
  %cmp17.i = icmp eq i64 %dec16.i, 0, !dbg !6314
  br i1 %cmp17.i, label %if.else.19.i, label %if.end.25.i, !dbg !6316

if.else.19.i:                                     ; preds = %if.then.11.i
  %ob_type20.i = getelementptr inbounds %struct._object, %struct._object* %13, i64 0, i32 1, !dbg !6317
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type20.i, align 8, !dbg !6317, !tbaa !2010
  %tp_dealloc21.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i64 0, i32 4, !dbg !6317
  %16 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc21.i, align 8, !dbg !6317, !tbaa !2032
  tail call void %16(%struct._object* %13) #2, !dbg !6317
  br label %if.end.25.i, !dbg !6305

if.end.25.i:                                      ; preds = %if.else.19.i, %if.then.11.i, %if.end.5.i
  %reason.i = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %self, i64 0, i32 11, !dbg !6319
  %17 = load %struct._object*, %struct._object** %reason.i, align 8, !dbg !6319, !tbaa !2491
  tail call void @llvm.dbg.value(metadata %struct._object* %17, i64 0, metadata !1640, metadata !1974) #2, !dbg !6319
  %cmp30.i = icmp eq %struct._object* %17, null, !dbg !6321
  br i1 %cmp30.i, label %UnicodeError_clear.exit, label %if.then.31.i, !dbg !6322

if.then.31.i:                                     ; preds = %if.end.25.i
  store %struct._object* null, %struct._object** %reason.i, align 8, !dbg !6323, !tbaa !2491
  tail call void @llvm.dbg.value(metadata %struct._object* %17, i64 0, metadata !1642, metadata !1974) #2, !dbg !6325
  %ob_refcnt35.i = getelementptr inbounds %struct._object, %struct._object* %17, i64 0, i32 0, !dbg !6327
  %18 = load i64, i64* %ob_refcnt35.i, align 8, !dbg !6327, !tbaa !1991
  %dec36.i = add i64 %18, -1, !dbg !6327
  store i64 %dec36.i, i64* %ob_refcnt35.i, align 8, !dbg !6327, !tbaa !1991
  %cmp37.i = icmp eq i64 %dec36.i, 0, !dbg !6327
  br i1 %cmp37.i, label %if.else.39.i, label %UnicodeError_clear.exit, !dbg !6329

if.else.39.i:                                     ; preds = %if.then.31.i
  %ob_type40.i = getelementptr inbounds %struct._object, %struct._object* %17, i64 0, i32 1, !dbg !6330
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type40.i, align 8, !dbg !6330, !tbaa !2010
  %tp_dealloc41.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i64 0, i32 4, !dbg !6330
  %20 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc41.i, align 8, !dbg !6330, !tbaa !2032
  tail call void %20(%struct._object* %17) #2, !dbg !6330
  br label %UnicodeError_clear.exit, !dbg !6305

UnicodeError_clear.exit:                          ; preds = %if.end.25.i, %if.then.31.i, %if.else.39.i
  %21 = bitcast %struct.PyUnicodeErrorObject* %self to %struct.PyBaseExceptionObject*, !dbg !6332
  %call.i = tail call i32 @BaseException_clear(%struct.PyBaseExceptionObject* %21) #2, !dbg !6333
  %ob_type = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %self, i64 0, i32 0, i32 1, !dbg !6334
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6334, !tbaa !2010
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %22, i64 0, i32 38, !dbg !6335
  %23 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !6335, !tbaa !4230
  %24 = bitcast %struct.PyUnicodeErrorObject* %self to i8*, !dbg !6336
  tail call void %23(i8* %24) #2, !dbg !6334
  ret void, !dbg !6337
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @UnicodeEncodeError_str(%struct._object* nocapture readonly %self) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1585, metadata !1974), !dbg !6338
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1587, metadata !1974), !dbg !6339
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1588, metadata !1974), !dbg !6340
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1589, metadata !1974), !dbg !6341
  %object = getelementptr inbounds %struct._object, %struct._object* %self, i64 4, i32 1, !dbg !6342
  %0 = bitcast %struct._typeobject** %object to %struct._object**, !dbg !6342
  %1 = load %struct._object*, %struct._object** %0, align 8, !dbg !6342, !tbaa !2174
  %tobool = icmp eq %struct._object* %1, null, !dbg !6344
  br i1 %tobool, label %if.then, label %if.end, !dbg !6345

if.then:                                          ; preds = %entry
  %call = tail call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.84, i64 0, i64 0)) #2, !dbg !6346
  br label %cleanup, !dbg !6347

if.end:                                           ; preds = %entry
  %reason = getelementptr inbounds %struct._object, %struct._object* %self, i64 6, !dbg !6348
  %2 = bitcast %struct._object* %reason to %struct._object**, !dbg !6348
  %3 = load %struct._object*, %struct._object** %2, align 8, !dbg !6348, !tbaa !2491
  %call1 = tail call %struct._object* @PyObject_Str(%struct._object* %3) #2, !dbg !6349
  tail call void @llvm.dbg.value(metadata %struct._object* %call1, i64 0, metadata !1588, metadata !1974), !dbg !6340
  %cmp = icmp eq %struct._object* %call1, null, !dbg !6350
  br i1 %cmp, label %cleanup, label %if.end.3, !dbg !6352

if.end.3:                                         ; preds = %if.end
  %encoding = getelementptr inbounds %struct._object, %struct._object* %self, i64 4, !dbg !6353
  %4 = bitcast %struct._object* %encoding to %struct._object**, !dbg !6353
  %5 = load %struct._object*, %struct._object** %4, align 8, !dbg !6353, !tbaa !2129
  %call4 = tail call %struct._object* @PyObject_Str(%struct._object* %5) #2, !dbg !6354
  tail call void @llvm.dbg.value(metadata %struct._object* %call4, i64 0, metadata !1589, metadata !1974), !dbg !6341
  %cmp5 = icmp eq %struct._object* %call4, null, !dbg !6355
  br i1 %cmp5, label %do.body.32, label %if.end.7, !dbg !6357

if.end.7:                                         ; preds = %if.end.3
  %6 = getelementptr inbounds %struct._object, %struct._object* %self, i64 5, i32 0, !dbg !6358
  %7 = load i64, i64* %6, align 8, !dbg !6359, !tbaa !2255
  %8 = load %struct._object*, %struct._object** %0, align 8, !dbg !6361, !tbaa !2174
  %9 = getelementptr inbounds %struct._object, %struct._object* %8, i64 1, i32 0, !dbg !6361
  %10 = load i64, i64* %9, align 8, !dbg !6361, !tbaa !2259
  %cmp9 = icmp slt i64 %7, %10, !dbg !6362
  %end = getelementptr inbounds %struct._object, %struct._object* %self, i64 5, i32 1, !dbg !6363
  %11 = bitcast %struct._typeobject** %end to i64*, !dbg !6363
  %12 = load i64, i64* %11, align 8, !dbg !6363, !tbaa !2387
  %add = add i64 %7, 1
  %cmp11 = icmp eq i64 %12, %add, !dbg !6364
  %or.cond = and i1 %cmp9, %cmp11, !dbg !6365
  br i1 %or.cond, label %if.then.12, label %if.else.25, !dbg !6365

if.then.12:                                       ; preds = %if.end.7
  %call15 = tail call i32 @PyUnicode_ReadChar(%struct._object* %8, i64 %7) #2, !dbg !6366
  tail call void @llvm.dbg.value(metadata i32 %call15, i64 0, metadata !1590, metadata !1974), !dbg !6367
  %cmp16 = icmp ult i32 %call15, 256, !dbg !6368
  %cmp18 = icmp ult i32 %call15, 65536, !dbg !6370
  %. = select i1 %cmp18, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.179, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.180, i64 0, i64 0), !dbg !6372
  %fmt.0 = select i1 %cmp16, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.178, i64 0, i64 0), i8* %., !dbg !6373
  %13 = load i64, i64* %6, align 8, !dbg !6374, !tbaa !2255
  %call24 = tail call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* %fmt.0, %struct._object* %call4, i32 %call15, i64 %13, %struct._object* %call1) #2, !dbg !6375
  tail call void @llvm.dbg.value(metadata %struct._object* %call24, i64 0, metadata !1587, metadata !1974), !dbg !6339
  br label %do.body.32, !dbg !6376

if.else.25:                                       ; preds = %if.end.7
  %sub = add i64 %12, -1, !dbg !6377
  %call28 = tail call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.181, i64 0, i64 0), %struct._object* %call4, i64 %7, i64 %sub, %struct._object* %call1) #2, !dbg !6378
  tail call void @llvm.dbg.value(metadata %struct._object* %call28, i64 0, metadata !1587, metadata !1974), !dbg !6339
  br label %do.body.32

do.body.32:                                       ; preds = %if.end.3, %if.else.25, %if.then.12
  %result.0.ph = phi %struct._object* [ %call28, %if.else.25 ], [ %call24, %if.then.12 ], [ null, %if.end.3 ]
  tail call void @llvm.dbg.value(metadata %struct._object* %call1, i64 0, metadata !1594, metadata !1974), !dbg !6379
  tail call void @llvm.dbg.value(metadata %struct._object* %call1, i64 0, metadata !1596, metadata !1974), !dbg !6381
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call1, i64 0, i32 0, !dbg !6383
  %14 = load i64, i64* %ob_refcnt, align 8, !dbg !6383, !tbaa !1991
  %dec = add i64 %14, -1, !dbg !6383
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6383, !tbaa !1991
  %cmp33 = icmp eq i64 %dec, 0, !dbg !6383
  br i1 %cmp33, label %if.else.35, label %if.end.37, !dbg !6385

if.else.35:                                       ; preds = %do.body.32
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call1, i64 0, i32 1, !dbg !6386
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6386, !tbaa !2010
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i64 0, i32 4, !dbg !6386
  %16 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6386, !tbaa !2032
  tail call void %16(%struct._object* %call1) #2, !dbg !6386
  br label %if.end.37

if.end.37:                                        ; preds = %if.else.35, %do.body.32
  br i1 %cmp5, label %cleanup, label %do.body.44, !dbg !6388

do.body.44:                                       ; preds = %if.end.37
  %ob_refcnt46 = getelementptr inbounds %struct._object, %struct._object* %call4, i64 0, i32 0, !dbg !6389
  %17 = load i64, i64* %ob_refcnt46, align 8, !dbg !6389, !tbaa !1991
  %dec47 = add i64 %17, -1, !dbg !6389
  store i64 %dec47, i64* %ob_refcnt46, align 8, !dbg !6389, !tbaa !1991
  %cmp48 = icmp eq i64 %dec47, 0, !dbg !6389
  br i1 %cmp48, label %if.else.50, label %cleanup, !dbg !6391

if.else.50:                                       ; preds = %do.body.44
  %ob_type51 = getelementptr inbounds %struct._object, %struct._object* %call4, i64 0, i32 1, !dbg !6392
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type51, align 8, !dbg !6392, !tbaa !2010
  %tp_dealloc52 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i64 0, i32 4, !dbg !6392
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc52, align 8, !dbg !6392, !tbaa !2032
  tail call void %19(%struct._object* %call4) #2, !dbg !6392
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.end.37, %do.body.44, %if.else.50, %if.then
  %retval.0 = phi %struct._object* [ %call, %if.then ], [ %result.0.ph, %if.else.50 ], [ %result.0.ph, %do.body.44 ], [ %result.0.ph, %if.end.37 ], [ null, %if.end ]
  ret %struct._object* %retval.0, !dbg !6394
}

; Function Attrs: nounwind uwtable
define internal i32 @UnicodeError_traverse(%struct.PyUnicodeErrorObject* nocapture readonly %self, i32 (%struct._object*, i8*)* nocapture %visit, i8* %arg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PyUnicodeErrorObject* %self, i64 0, metadata !1608, metadata !1974), !dbg !6395
  tail call void @llvm.dbg.value(metadata i32 (%struct._object*, i8*)* %visit, i64 0, metadata !1609, metadata !1974), !dbg !6396
  tail call void @llvm.dbg.value(metadata i8* %arg, i64 0, metadata !1610, metadata !1974), !dbg !6397
  %encoding = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %self, i64 0, i32 7, !dbg !6398
  %0 = load %struct._object*, %struct._object** %encoding, align 8, !dbg !6398, !tbaa !2129
  %tobool = icmp eq %struct._object* %0, null, !dbg !6398
  br i1 %tobool, label %do.body.5, label %if.then, !dbg !6400

if.then:                                          ; preds = %entry
  %call = tail call i32 %visit(%struct._object* %0, i8* %arg) #2, !dbg !6401
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !1611, metadata !1974), !dbg !6401
  %tobool2 = icmp eq i32 %call, 0, !dbg !6403
  br i1 %tobool2, label %do.body.5, label %return

do.body.5:                                        ; preds = %entry, %if.then
  %object = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %self, i64 0, i32 8, !dbg !6405
  %1 = load %struct._object*, %struct._object** %object, align 8, !dbg !6405, !tbaa !2174
  %tobool6 = icmp eq %struct._object* %1, null, !dbg !6405
  br i1 %tobool6, label %do.body.19, label %if.then.7, !dbg !6407

if.then.7:                                        ; preds = %do.body.5
  %call10 = tail call i32 %visit(%struct._object* %1, i8* %arg) #2, !dbg !6408
  tail call void @llvm.dbg.value(metadata i32 %call10, i64 0, metadata !1615, metadata !1974), !dbg !6408
  %tobool11 = icmp eq i32 %call10, 0, !dbg !6410
  br i1 %tobool11, label %do.body.19, label %return

do.body.19:                                       ; preds = %do.body.5, %if.then.7
  %reason = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %self, i64 0, i32 11, !dbg !6412
  %2 = load %struct._object*, %struct._object** %reason, align 8, !dbg !6412, !tbaa !2491
  %tobool20 = icmp eq %struct._object* %2, null, !dbg !6412
  br i1 %tobool20, label %do.end.32, label %if.then.21, !dbg !6414

if.then.21:                                       ; preds = %do.body.19
  %call24 = tail call i32 %visit(%struct._object* %2, i8* %arg) #2, !dbg !6415
  tail call void @llvm.dbg.value(metadata i32 %call24, i64 0, metadata !1619, metadata !1974), !dbg !6415
  %tobool25 = icmp eq i32 %call24, 0, !dbg !6417
  br i1 %tobool25, label %do.end.32, label %return

do.end.32:                                        ; preds = %do.body.19, %if.then.21
  tail call void @llvm.dbg.value(metadata i32 (%struct._object*, i8*)* %visit, i64 0, metadata !878, metadata !1974) #2, !dbg !6419
  tail call void @llvm.dbg.value(metadata i8* %arg, i64 0, metadata !879, metadata !1974) #2, !dbg !6421
  %3 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %self, i64 0, i32 1, !dbg !6422
  %4 = load %struct._object*, %struct._object** %3, align 8, !dbg !6422, !tbaa !4084
  %tobool.i = icmp eq %struct._object* %4, null, !dbg !6422
  br i1 %tobool.i, label %do.body.5.i, label %if.then.i, !dbg !6423

if.then.i:                                        ; preds = %do.end.32
  %call.i = tail call i32 %visit(%struct._object* %4, i8* %arg) #2, !dbg !6424
  tail call void @llvm.dbg.value(metadata i32 %call.i, i64 0, metadata !880, metadata !1974) #2, !dbg !6424
  %tobool2.i = icmp eq i32 %call.i, 0, !dbg !6425
  br i1 %tobool2.i, label %do.body.5.i, label %return, !dbg !6426

do.body.5.i:                                      ; preds = %if.then.i, %do.end.32
  %5 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %self, i64 0, i32 2, !dbg !6427
  %6 = load %struct._object*, %struct._object** %5, align 8, !dbg !6427, !tbaa !4091
  %tobool6.i = icmp eq %struct._object* %6, null, !dbg !6427
  br i1 %tobool6.i, label %do.body.19.i, label %if.then.7.i, !dbg !6428

if.then.7.i:                                      ; preds = %do.body.5.i
  %call10.i = tail call i32 %visit(%struct._object* %6, i8* %arg) #2, !dbg !6429
  tail call void @llvm.dbg.value(metadata i32 %call10.i, i64 0, metadata !884, metadata !1974) #2, !dbg !6429
  %tobool11.i = icmp eq i32 %call10.i, 0, !dbg !6430
  br i1 %tobool11.i, label %do.body.19.i, label %return, !dbg !6426

do.body.19.i:                                     ; preds = %if.then.7.i, %do.body.5.i
  %7 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %self, i64 0, i32 3, !dbg !6431
  %8 = load %struct._object*, %struct._object** %7, align 8, !dbg !6431, !tbaa !1979
  %tobool20.i = icmp eq %struct._object* %8, null, !dbg !6431
  br i1 %tobool20.i, label %do.body.33.i, label %if.then.21.i, !dbg !6432

if.then.21.i:                                     ; preds = %do.body.19.i
  %call24.i = tail call i32 %visit(%struct._object* %8, i8* %arg) #2, !dbg !6433
  tail call void @llvm.dbg.value(metadata i32 %call24.i, i64 0, metadata !888, metadata !1974) #2, !dbg !6433
  %tobool25.i = icmp eq i32 %call24.i, 0, !dbg !6434
  br i1 %tobool25.i, label %do.body.33.i, label %return, !dbg !6426

do.body.33.i:                                     ; preds = %if.then.21.i, %do.body.19.i
  %9 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %self, i64 0, i32 5, !dbg !6435
  %10 = load %struct._object*, %struct._object** %9, align 8, !dbg !6435, !tbaa !2068
  %tobool34.i = icmp eq %struct._object* %10, null, !dbg !6435
  br i1 %tobool34.i, label %do.body.47.i, label %if.then.35.i, !dbg !6436

if.then.35.i:                                     ; preds = %do.body.33.i
  %call38.i = tail call i32 %visit(%struct._object* %10, i8* %arg) #2, !dbg !6437
  tail call void @llvm.dbg.value(metadata i32 %call38.i, i64 0, metadata !892, metadata !1974) #2, !dbg !6437
  %tobool39.i = icmp eq i32 %call38.i, 0, !dbg !6438
  br i1 %tobool39.i, label %do.body.47.i, label %return, !dbg !6426

do.body.47.i:                                     ; preds = %if.then.35.i, %do.body.33.i
  %11 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %self, i64 0, i32 4, !dbg !6439
  %12 = load %struct._object*, %struct._object** %11, align 8, !dbg !6439, !tbaa !2100
  %tobool48.i = icmp eq %struct._object* %12, null, !dbg !6439
  br i1 %tobool48.i, label %do.end.60.i, label %if.then.49.i, !dbg !6440

if.then.49.i:                                     ; preds = %do.body.47.i
  %call52.i = tail call i32 %visit(%struct._object* %12, i8* %arg) #2, !dbg !6441
  tail call void @llvm.dbg.value(metadata i32 %call52.i, i64 0, metadata !896, metadata !1974) #2, !dbg !6441
  %tobool53.i = icmp eq i32 %call52.i, 0, !dbg !6442
  br i1 %tobool53.i, label %do.end.60.i, label %return, !dbg !6426

do.end.60.i:                                      ; preds = %if.then.49.i, %do.body.47.i
  br label %return, !dbg !6443

return:                                           ; preds = %do.end.60.i, %if.then.49.i, %if.then.35.i, %if.then.21.i, %if.then.7.i, %if.then.i, %if.then.21, %if.then.7, %if.then
  %retval.5 = phi i32 [ %call24, %if.then.21 ], [ %call10, %if.then.7 ], [ %call, %if.then ], [ 0, %do.end.60.i ], [ %call52.i, %if.then.49.i ], [ %call38.i, %if.then.35.i ], [ %call24.i, %if.then.21.i ], [ %call10.i, %if.then.7.i ], [ %call.i, %if.then.i ]
  ret i32 %retval.5, !dbg !6444
}

; Function Attrs: nounwind uwtable
define internal i32 @UnicodeError_clear(%struct.PyUnicodeErrorObject* nocapture %self) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PyUnicodeErrorObject* %self, i64 0, metadata !1627, metadata !1974), !dbg !6445
  %encoding = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %self, i64 0, i32 7, !dbg !6446
  %0 = load %struct._object*, %struct._object** %encoding, align 8, !dbg !6446, !tbaa !2129
  tail call void @llvm.dbg.value(metadata %struct._object* %0, i64 0, metadata !1628, metadata !1974), !dbg !6446
  %cmp = icmp eq %struct._object* %0, null, !dbg !6447
  br i1 %cmp, label %if.end.5, label %if.then, !dbg !6448

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %encoding, align 8, !dbg !6449, !tbaa !2129
  tail call void @llvm.dbg.value(metadata %struct._object* %0, i64 0, metadata !1630, metadata !1974), !dbg !6450
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %0, i64 0, i32 0, !dbg !6451
  %1 = load i64, i64* %ob_refcnt, align 8, !dbg !6451, !tbaa !1991
  %dec = add i64 %1, -1, !dbg !6451
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6451, !tbaa !1991
  %cmp3 = icmp eq i64 %dec, 0, !dbg !6451
  br i1 %cmp3, label %if.else, label %if.end.5, !dbg !6452

if.else:                                          ; preds = %if.then
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i64 0, i32 1, !dbg !6453
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6453, !tbaa !2010
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i64 0, i32 4, !dbg !6453
  %3 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6453, !tbaa !2032
  tail call void %3(%struct._object* %0) #2, !dbg !6453
  br label %if.end.5

if.end.5:                                         ; preds = %if.else, %if.then, %entry
  %object = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %self, i64 0, i32 8, !dbg !6454
  %4 = load %struct._object*, %struct._object** %object, align 8, !dbg !6454, !tbaa !2174
  tail call void @llvm.dbg.value(metadata %struct._object* %4, i64 0, metadata !1634, metadata !1974), !dbg !6454
  %cmp10 = icmp eq %struct._object* %4, null, !dbg !6455
  br i1 %cmp10, label %if.end.25, label %if.then.11, !dbg !6456

if.then.11:                                       ; preds = %if.end.5
  store %struct._object* null, %struct._object** %object, align 8, !dbg !6457, !tbaa !2174
  tail call void @llvm.dbg.value(metadata %struct._object* %4, i64 0, metadata !1636, metadata !1974), !dbg !6458
  %ob_refcnt15 = getelementptr inbounds %struct._object, %struct._object* %4, i64 0, i32 0, !dbg !6459
  %5 = load i64, i64* %ob_refcnt15, align 8, !dbg !6459, !tbaa !1991
  %dec16 = add i64 %5, -1, !dbg !6459
  store i64 %dec16, i64* %ob_refcnt15, align 8, !dbg !6459, !tbaa !1991
  %cmp17 = icmp eq i64 %dec16, 0, !dbg !6459
  br i1 %cmp17, label %if.else.19, label %if.end.25, !dbg !6460

if.else.19:                                       ; preds = %if.then.11
  %ob_type20 = getelementptr inbounds %struct._object, %struct._object* %4, i64 0, i32 1, !dbg !6461
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type20, align 8, !dbg !6461, !tbaa !2010
  %tp_dealloc21 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i64 0, i32 4, !dbg !6461
  %7 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc21, align 8, !dbg !6461, !tbaa !2032
  tail call void %7(%struct._object* %4) #2, !dbg !6461
  br label %if.end.25

if.end.25:                                        ; preds = %if.else.19, %if.then.11, %if.end.5
  %reason = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %self, i64 0, i32 11, !dbg !6462
  %8 = load %struct._object*, %struct._object** %reason, align 8, !dbg !6462, !tbaa !2491
  tail call void @llvm.dbg.value(metadata %struct._object* %8, i64 0, metadata !1640, metadata !1974), !dbg !6462
  %cmp30 = icmp eq %struct._object* %8, null, !dbg !6463
  br i1 %cmp30, label %if.end.45, label %if.then.31, !dbg !6464

if.then.31:                                       ; preds = %if.end.25
  store %struct._object* null, %struct._object** %reason, align 8, !dbg !6465, !tbaa !2491
  tail call void @llvm.dbg.value(metadata %struct._object* %8, i64 0, metadata !1642, metadata !1974), !dbg !6466
  %ob_refcnt35 = getelementptr inbounds %struct._object, %struct._object* %8, i64 0, i32 0, !dbg !6467
  %9 = load i64, i64* %ob_refcnt35, align 8, !dbg !6467, !tbaa !1991
  %dec36 = add i64 %9, -1, !dbg !6467
  store i64 %dec36, i64* %ob_refcnt35, align 8, !dbg !6467, !tbaa !1991
  %cmp37 = icmp eq i64 %dec36, 0, !dbg !6467
  br i1 %cmp37, label %if.else.39, label %if.end.45, !dbg !6468

if.else.39:                                       ; preds = %if.then.31
  %ob_type40 = getelementptr inbounds %struct._object, %struct._object* %8, i64 0, i32 1, !dbg !6469
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type40, align 8, !dbg !6469, !tbaa !2010
  %tp_dealloc41 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i64 0, i32 4, !dbg !6469
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc41, align 8, !dbg !6469, !tbaa !2032
  tail call void %11(%struct._object* %8) #2, !dbg !6469
  br label %if.end.45

if.end.45:                                        ; preds = %if.else.39, %if.then.31, %if.end.25
  %12 = bitcast %struct.PyUnicodeErrorObject* %self to %struct.PyBaseExceptionObject*, !dbg !6470
  %call = tail call i32 @BaseException_clear(%struct.PyBaseExceptionObject* %12), !dbg !6471
  ret i32 0, !dbg !6472
}

; Function Attrs: nounwind uwtable
define internal i32 @UnicodeEncodeError_init(%struct._object* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1648, metadata !1974), !dbg !6473
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1649, metadata !1974), !dbg !6474
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !1650, metadata !1974), !dbg !6475
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1790, metadata !1974) #2, !dbg !6476
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !1791, metadata !1974) #2, !dbg !6479
  %0 = getelementptr inbounds %struct._object, %struct._object* %self, i64 0, i32 1, !dbg !6480
  %1 = load %struct._typeobject*, %struct._typeobject** %0, align 8, !dbg !6480, !tbaa !2010
  %tp_name.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i64 0, i32 1, !dbg !6481
  %2 = load i8*, i8** %tp_name.i, align 8, !dbg !6481, !tbaa !4130
  %call.i = tail call i32 @_PyArg_NoKeywords(i8* %2, %struct._object* %kwds) #2, !dbg !6482
  %tobool.i = icmp eq i32 %call.i, 0, !dbg !6482
  br i1 %tobool.i, label %cleanup, label %if.end.i, !dbg !6483

if.end.i:                                         ; preds = %entry
  %args1.i = getelementptr inbounds %struct._object, %struct._object* %self, i64 1, i32 1, !dbg !6484
  %3 = bitcast %struct._typeobject** %args1.i to %struct._object**, !dbg !6484
  %4 = load %struct._object*, %struct._object** %3, align 8, !dbg !6484, !tbaa !4091
  tail call void @llvm.dbg.value(metadata %struct._object* %4, i64 0, metadata !1792, metadata !1974) #2, !dbg !6485
  store %struct._object* %args, %struct._object** %3, align 8, !dbg !6486, !tbaa !4091
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %args, i64 0, i32 0, !dbg !6487
  %5 = load i64, i64* %ob_refcnt.i, align 8, !dbg !6487, !tbaa !1991
  %inc.i = add i64 %5, 1, !dbg !6487
  store i64 %inc.i, i64* %ob_refcnt.i, align 8, !dbg !6487, !tbaa !1991
  tail call void @llvm.dbg.value(metadata %struct._object* %4, i64 0, metadata !1793, metadata !1974) #2, !dbg !6488
  %cmp.i = icmp eq %struct._object* %4, null, !dbg !6489
  br i1 %cmp.i, label %if.end, label %do.body.6.i, !dbg !6490

do.body.6.i:                                      ; preds = %if.end.i
  tail call void @llvm.dbg.value(metadata %struct._object* %4, i64 0, metadata !1795, metadata !1974) #2, !dbg !6491
  %ob_refcnt8.i = getelementptr inbounds %struct._object, %struct._object* %4, i64 0, i32 0, !dbg !6492
  %6 = load i64, i64* %ob_refcnt8.i, align 8, !dbg !6492, !tbaa !1991
  %dec.i = add i64 %6, -1, !dbg !6492
  store i64 %dec.i, i64* %ob_refcnt8.i, align 8, !dbg !6492, !tbaa !1991
  %cmp9.i = icmp eq i64 %dec.i, 0, !dbg !6492
  br i1 %cmp9.i, label %if.else.i, label %if.end, !dbg !6493

if.else.i:                                        ; preds = %do.body.6.i
  %ob_type11.i = getelementptr inbounds %struct._object, %struct._object* %4, i64 0, i32 1, !dbg !6494
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type11.i, align 8, !dbg !6494, !tbaa !2010
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i64 0, i32 4, !dbg !6494
  %8 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !6494, !tbaa !2032
  tail call void %8(%struct._object* %4) #2, !dbg !6494
  br label %if.end, !dbg !6495

if.end:                                           ; preds = %if.else.i, %do.body.6.i, %if.end.i
  %encoding = getelementptr inbounds %struct._object, %struct._object* %self, i64 4, !dbg !6496
  %9 = bitcast %struct._object* %encoding to %struct._object**, !dbg !6496
  %10 = load %struct._object*, %struct._object** %9, align 8, !dbg !6496, !tbaa !2129
  tail call void @llvm.dbg.value(metadata %struct._object* %10, i64 0, metadata !1652, metadata !1974), !dbg !6496
  %cmp1 = icmp eq %struct._object* %10, null, !dbg !6498
  br i1 %cmp1, label %if.end.8, label %if.then.2, !dbg !6499

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %9, align 8, !dbg !6500, !tbaa !2129
  tail call void @llvm.dbg.value(metadata %struct._object* %10, i64 0, metadata !1654, metadata !1974), !dbg !6502
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %10, i64 0, i32 0, !dbg !6504
  %11 = load i64, i64* %ob_refcnt, align 8, !dbg !6504, !tbaa !1991
  %dec = add i64 %11, -1, !dbg !6504
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6504, !tbaa !1991
  %cmp5 = icmp eq i64 %dec, 0, !dbg !6504
  br i1 %cmp5, label %if.else, label %if.end.8, !dbg !6506

if.else:                                          ; preds = %if.then.2
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i64 0, i32 1, !dbg !6507
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6507, !tbaa !2010
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i64 0, i32 4, !dbg !6507
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6507, !tbaa !2032
  tail call void %13(%struct._object* %10) #2, !dbg !6507
  br label %if.end.8

if.end.8:                                         ; preds = %if.else, %if.then.2, %if.end
  %object = getelementptr inbounds %struct._object, %struct._object* %self, i64 4, i32 1, !dbg !6509
  %14 = bitcast %struct._typeobject** %object to %struct._object**, !dbg !6509
  %15 = load %struct._object*, %struct._object** %14, align 8, !dbg !6509, !tbaa !2174
  tail call void @llvm.dbg.value(metadata %struct._object* %15, i64 0, metadata !1658, metadata !1974), !dbg !6509
  %cmp13 = icmp eq %struct._object* %15, null, !dbg !6511
  br i1 %cmp13, label %if.end.28, label %if.then.14, !dbg !6512

if.then.14:                                       ; preds = %if.end.8
  store %struct._object* null, %struct._object** %14, align 8, !dbg !6513, !tbaa !2174
  tail call void @llvm.dbg.value(metadata %struct._object* %15, i64 0, metadata !1660, metadata !1974), !dbg !6515
  %ob_refcnt18 = getelementptr inbounds %struct._object, %struct._object* %15, i64 0, i32 0, !dbg !6517
  %16 = load i64, i64* %ob_refcnt18, align 8, !dbg !6517, !tbaa !1991
  %dec19 = add i64 %16, -1, !dbg !6517
  store i64 %dec19, i64* %ob_refcnt18, align 8, !dbg !6517, !tbaa !1991
  %cmp20 = icmp eq i64 %dec19, 0, !dbg !6517
  br i1 %cmp20, label %if.else.22, label %if.end.28, !dbg !6519

if.else.22:                                       ; preds = %if.then.14
  %ob_type23 = getelementptr inbounds %struct._object, %struct._object* %15, i64 0, i32 1, !dbg !6520
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type23, align 8, !dbg !6520, !tbaa !2010
  %tp_dealloc24 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i64 0, i32 4, !dbg !6520
  %18 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc24, align 8, !dbg !6520, !tbaa !2032
  tail call void %18(%struct._object* %15) #2, !dbg !6520
  br label %if.end.28

if.end.28:                                        ; preds = %if.else.22, %if.then.14, %if.end.8
  %reason = getelementptr inbounds %struct._object, %struct._object* %self, i64 6, !dbg !6522
  %19 = bitcast %struct._object* %reason to %struct._object**, !dbg !6522
  %20 = load %struct._object*, %struct._object** %19, align 8, !dbg !6522, !tbaa !2491
  tail call void @llvm.dbg.value(metadata %struct._object* %20, i64 0, metadata !1664, metadata !1974), !dbg !6522
  %cmp33 = icmp eq %struct._object* %20, null, !dbg !6524
  br i1 %cmp33, label %if.end.48, label %if.then.34, !dbg !6525

if.then.34:                                       ; preds = %if.end.28
  store %struct._object* null, %struct._object** %19, align 8, !dbg !6526, !tbaa !2491
  tail call void @llvm.dbg.value(metadata %struct._object* %20, i64 0, metadata !1666, metadata !1974), !dbg !6528
  %ob_refcnt38 = getelementptr inbounds %struct._object, %struct._object* %20, i64 0, i32 0, !dbg !6530
  %21 = load i64, i64* %ob_refcnt38, align 8, !dbg !6530, !tbaa !1991
  %dec39 = add i64 %21, -1, !dbg !6530
  store i64 %dec39, i64* %ob_refcnt38, align 8, !dbg !6530, !tbaa !1991
  %cmp40 = icmp eq i64 %dec39, 0, !dbg !6530
  br i1 %cmp40, label %if.else.42, label %if.end.48, !dbg !6532

if.else.42:                                       ; preds = %if.then.34
  %ob_type43 = getelementptr inbounds %struct._object, %struct._object* %20, i64 0, i32 1, !dbg !6533
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type43, align 8, !dbg !6533, !tbaa !2010
  %tp_dealloc44 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %22, i64 0, i32 4, !dbg !6533
  %23 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc44, align 8, !dbg !6533, !tbaa !2032
  tail call void %23(%struct._object* %20) #2, !dbg !6533
  br label %if.end.48

if.end.48:                                        ; preds = %if.else.42, %if.then.34, %if.end.28
  %24 = getelementptr inbounds %struct._object, %struct._object* %self, i64 5, i32 0, !dbg !6535
  %end = getelementptr inbounds %struct._object, %struct._object* %self, i64 5, i32 1, !dbg !6537
  %call54 = tail call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.189, i64 0, i64 0), %struct._typeobject* nonnull @PyUnicode_Type, %struct._object* %encoding, %struct._typeobject* nonnull @PyUnicode_Type, %struct._typeobject** %object, i64* %24, %struct._typeobject** %end, %struct._typeobject* nonnull @PyUnicode_Type, %struct._object* %reason) #2, !dbg !6538
  %tobool = icmp eq i32 %call54, 0, !dbg !6538
  br i1 %tobool, label %if.then.55, label %if.end.59, !dbg !6539

if.then.55:                                       ; preds = %if.end.48
  store %struct._object* null, %struct._object** %19, align 8, !dbg !6540, !tbaa !2491
  %25 = bitcast %struct._object* %encoding to i8*, !dbg !6542
  call void @llvm.memset.p0i8.i64(i8* %25, i8 0, i64 16, i32 8, i1 false), !dbg !6543
  br label %cleanup, !dbg !6542

if.end.59:                                        ; preds = %if.end.48
  %26 = load %struct._object*, %struct._object** %14, align 8, !dbg !6544, !tbaa !2174
  %state = getelementptr inbounds %struct._object, %struct._object* %26, i64 2, !dbg !6544
  %27 = bitcast %struct._object* %state to i32*, !dbg !6544
  %bf.load = load i32, i32* %27, align 4, !dbg !6544
  %bf.clear = and i32 %bf.load, 128, !dbg !6544
  %tobool61 = icmp eq i32 %bf.clear, 0, !dbg !6544
  br i1 %tobool61, label %cond.false, label %if.end.67, !dbg !6544

cond.false:                                       ; preds = %if.end.59
  %call63 = tail call i32 @_PyUnicode_Ready(%struct._object* %26) #2, !dbg !6546
  %phitmp = icmp slt i32 %call63, -1, !dbg !6546
  br i1 %phitmp, label %if.then.65, label %cond.false.if.end.67_crit_edge, !dbg !6548

cond.false.if.end.67_crit_edge:                   ; preds = %cond.false
  %.pre = load %struct._object*, %struct._object** %14, align 8, !dbg !6549, !tbaa !2174
  br label %if.end.67, !dbg !6548

if.then.65:                                       ; preds = %cond.false
  store %struct._object* null, %struct._object** %9, align 8, !dbg !6550, !tbaa !2129
  br label %cleanup, !dbg !6552

if.end.67:                                        ; preds = %cond.false.if.end.67_crit_edge, %if.end.59
  %28 = phi %struct._object* [ %.pre, %cond.false.if.end.67_crit_edge ], [ %26, %if.end.59 ], !dbg !6549
  %29 = load %struct._object*, %struct._object** %9, align 8, !dbg !6553, !tbaa !2129
  %ob_refcnt69 = getelementptr inbounds %struct._object, %struct._object* %29, i64 0, i32 0, !dbg !6553
  %30 = load i64, i64* %ob_refcnt69, align 8, !dbg !6553, !tbaa !1991
  %inc = add i64 %30, 1, !dbg !6553
  store i64 %inc, i64* %ob_refcnt69, align 8, !dbg !6553, !tbaa !1991
  %ob_refcnt71 = getelementptr inbounds %struct._object, %struct._object* %28, i64 0, i32 0, !dbg !6549
  %31 = load i64, i64* %ob_refcnt71, align 8, !dbg !6549, !tbaa !1991
  %inc72 = add i64 %31, 1, !dbg !6549
  store i64 %inc72, i64* %ob_refcnt71, align 8, !dbg !6549, !tbaa !1991
  %32 = load %struct._object*, %struct._object** %19, align 8, !dbg !6554, !tbaa !2491
  %ob_refcnt74 = getelementptr inbounds %struct._object, %struct._object* %32, i64 0, i32 0, !dbg !6554
  %33 = load i64, i64* %ob_refcnt74, align 8, !dbg !6554, !tbaa !1991
  %inc75 = add i64 %33, 1, !dbg !6554
  store i64 %inc75, i64* %ob_refcnt74, align 8, !dbg !6554, !tbaa !1991
  br label %cleanup, !dbg !6555

cleanup:                                          ; preds = %entry, %if.end.67, %if.then.65, %if.then.55
  %retval.0 = phi i32 [ -1, %if.then.65 ], [ 0, %if.end.67 ], [ -1, %if.then.55 ], [ -1, %entry ]
  ret i32 %retval.0, !dbg !6556
}

declare i32 @PyUnicode_ReadChar(%struct._object*, i64) #3

declare i32 @_PyArg_ParseTuple_SizeT(%struct._object*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @UnicodeDecodeError_str(%struct._object* nocapture readonly %self) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1672, metadata !1974), !dbg !6557
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1674, metadata !1974), !dbg !6558
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1675, metadata !1974), !dbg !6559
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1676, metadata !1974), !dbg !6560
  %object = getelementptr inbounds %struct._object, %struct._object* %self, i64 4, i32 1, !dbg !6561
  %0 = bitcast %struct._typeobject** %object to %struct._object**, !dbg !6561
  %1 = load %struct._object*, %struct._object** %0, align 8, !dbg !6561, !tbaa !2174
  %tobool = icmp eq %struct._object* %1, null, !dbg !6563
  br i1 %tobool, label %if.then, label %if.end, !dbg !6564

if.then:                                          ; preds = %entry
  %call = tail call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.84, i64 0, i64 0)) #2, !dbg !6565
  br label %cleanup, !dbg !6566

if.end:                                           ; preds = %entry
  %reason = getelementptr inbounds %struct._object, %struct._object* %self, i64 6, !dbg !6567
  %2 = bitcast %struct._object* %reason to %struct._object**, !dbg !6567
  %3 = load %struct._object*, %struct._object** %2, align 8, !dbg !6567, !tbaa !2491
  %call1 = tail call %struct._object* @PyObject_Str(%struct._object* %3) #2, !dbg !6568
  tail call void @llvm.dbg.value(metadata %struct._object* %call1, i64 0, metadata !1675, metadata !1974), !dbg !6559
  %cmp = icmp eq %struct._object* %call1, null, !dbg !6569
  br i1 %cmp, label %cleanup, label %if.end.3, !dbg !6571

if.end.3:                                         ; preds = %if.end
  %encoding = getelementptr inbounds %struct._object, %struct._object* %self, i64 4, !dbg !6572
  %4 = bitcast %struct._object* %encoding to %struct._object**, !dbg !6572
  %5 = load %struct._object*, %struct._object** %4, align 8, !dbg !6572, !tbaa !2129
  %call4 = tail call %struct._object* @PyObject_Str(%struct._object* %5) #2, !dbg !6573
  tail call void @llvm.dbg.value(metadata %struct._object* %call4, i64 0, metadata !1676, metadata !1974), !dbg !6560
  %cmp5 = icmp eq %struct._object* %call4, null, !dbg !6574
  br i1 %cmp5, label %do.body.24, label %if.end.7, !dbg !6576

if.end.7:                                         ; preds = %if.end.3
  %6 = getelementptr inbounds %struct._object, %struct._object* %self, i64 5, i32 0, !dbg !6577
  %7 = load i64, i64* %6, align 8, !dbg !6578, !tbaa !2255
  %8 = load %struct._object*, %struct._object** %0, align 8, !dbg !6580, !tbaa !2174
  %9 = getelementptr inbounds %struct._object, %struct._object* %8, i64 1, i32 0, !dbg !6580
  %10 = load i64, i64* %9, align 8, !dbg !6580, !tbaa !2297
  %cmp9 = icmp slt i64 %7, %10, !dbg !6581
  %end = getelementptr inbounds %struct._object, %struct._object* %self, i64 5, i32 1, !dbg !6582
  %11 = bitcast %struct._typeobject** %end to i64*, !dbg !6582
  %12 = load i64, i64* %11, align 8, !dbg !6582, !tbaa !2387
  %add = add i64 %7, 1
  %cmp11 = icmp eq i64 %12, %add, !dbg !6583
  %or.cond = and i1 %cmp9, %cmp11, !dbg !6584
  br i1 %or.cond, label %if.then.12, label %if.else, !dbg !6584

if.then.12:                                       ; preds = %if.end.7
  %ob_sval = getelementptr inbounds %struct._object, %struct._object* %8, i64 2, !dbg !6585
  %arraydecay = bitcast %struct._object* %ob_sval to i8*, !dbg !6585
  %arrayidx = getelementptr i8, i8* %arraydecay, i64 %7, !dbg !6585
  %13 = load i8, i8* %arrayidx, align 1, !dbg !6585, !tbaa !5921
  %conv.89 = zext i8 %13 to i32, !dbg !6585
  tail call void @llvm.dbg.value(metadata i32 %conv.89, i64 0, metadata !1677, metadata !1974), !dbg !6586
  %call16 = tail call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.191, i64 0, i64 0), %struct._object* %call4, i32 %conv.89, i64 %7, %struct._object* %call1) #2, !dbg !6587
  tail call void @llvm.dbg.value(metadata %struct._object* %call16, i64 0, metadata !1674, metadata !1974), !dbg !6558
  br label %do.body.24, !dbg !6588

if.else:                                          ; preds = %if.end.7
  %sub = add i64 %12, -1, !dbg !6589
  %call19 = tail call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.192, i64 0, i64 0), %struct._object* %call4, i64 %7, i64 %sub, %struct._object* %call1) #2, !dbg !6590
  tail call void @llvm.dbg.value(metadata %struct._object* %call19, i64 0, metadata !1674, metadata !1974), !dbg !6558
  br label %do.body.24

do.body.24:                                       ; preds = %if.end.3, %if.else, %if.then.12
  %result.0.ph = phi %struct._object* [ %call19, %if.else ], [ %call16, %if.then.12 ], [ null, %if.end.3 ]
  tail call void @llvm.dbg.value(metadata %struct._object* %call1, i64 0, metadata !1680, metadata !1974), !dbg !6591
  tail call void @llvm.dbg.value(metadata %struct._object* %call1, i64 0, metadata !1682, metadata !1974), !dbg !6593
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call1, i64 0, i32 0, !dbg !6595
  %14 = load i64, i64* %ob_refcnt, align 8, !dbg !6595, !tbaa !1991
  %dec = add i64 %14, -1, !dbg !6595
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6595, !tbaa !1991
  %cmp25 = icmp eq i64 %dec, 0, !dbg !6595
  br i1 %cmp25, label %if.else.28, label %if.end.30, !dbg !6597

if.else.28:                                       ; preds = %do.body.24
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call1, i64 0, i32 1, !dbg !6598
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6598, !tbaa !2010
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i64 0, i32 4, !dbg !6598
  %16 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6598, !tbaa !2032
  tail call void %16(%struct._object* %call1) #2, !dbg !6598
  br label %if.end.30

if.end.30:                                        ; preds = %if.else.28, %do.body.24
  br i1 %cmp5, label %cleanup, label %do.body.38, !dbg !6600

do.body.38:                                       ; preds = %if.end.30
  %ob_refcnt40 = getelementptr inbounds %struct._object, %struct._object* %call4, i64 0, i32 0, !dbg !6601
  %17 = load i64, i64* %ob_refcnt40, align 8, !dbg !6601, !tbaa !1991
  %dec41 = add i64 %17, -1, !dbg !6601
  store i64 %dec41, i64* %ob_refcnt40, align 8, !dbg !6601, !tbaa !1991
  %cmp42 = icmp eq i64 %dec41, 0, !dbg !6601
  br i1 %cmp42, label %if.else.45, label %cleanup, !dbg !6603

if.else.45:                                       ; preds = %do.body.38
  %ob_type46 = getelementptr inbounds %struct._object, %struct._object* %call4, i64 0, i32 1, !dbg !6604
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type46, align 8, !dbg !6604, !tbaa !2010
  %tp_dealloc47 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i64 0, i32 4, !dbg !6604
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc47, align 8, !dbg !6604, !tbaa !2032
  tail call void %19(%struct._object* %call4) #2, !dbg !6604
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.end.30, %do.body.38, %if.else.45, %if.then
  %retval.0 = phi %struct._object* [ %call, %if.then ], [ %result.0.ph, %if.else.45 ], [ %result.0.ph, %do.body.38 ], [ %result.0.ph, %if.end.30 ], [ null, %if.end ]
  ret %struct._object* %retval.0, !dbg !6606
}

; Function Attrs: nounwind uwtable
define internal i32 @UnicodeDecodeError_init(%struct._object* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %data = alloca i8*, align 8
  %size = alloca i64, align 8
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1692, metadata !1974), !dbg !6607
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1693, metadata !1974), !dbg !6608
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !1694, metadata !1974), !dbg !6609
  %0 = bitcast i8** %data to i8*, !dbg !6610
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6610
  %1 = bitcast i64* %size to i8*, !dbg !6611
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !6611
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1790, metadata !1974) #2, !dbg !6612
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !1791, metadata !1974) #2, !dbg !6615
  %2 = getelementptr inbounds %struct._object, %struct._object* %self, i64 0, i32 1, !dbg !6616
  %3 = load %struct._typeobject*, %struct._typeobject** %2, align 8, !dbg !6616, !tbaa !2010
  %tp_name.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 1, !dbg !6617
  %4 = load i8*, i8** %tp_name.i, align 8, !dbg !6617, !tbaa !4130
  %call.i = tail call i32 @_PyArg_NoKeywords(i8* %4, %struct._object* %kwds) #2, !dbg !6618
  %tobool.i = icmp eq i32 %call.i, 0, !dbg !6618
  br i1 %tobool.i, label %cleanup, label %if.end.i, !dbg !6619

if.end.i:                                         ; preds = %entry
  %args1.i = getelementptr inbounds %struct._object, %struct._object* %self, i64 1, i32 1, !dbg !6620
  %5 = bitcast %struct._typeobject** %args1.i to %struct._object**, !dbg !6620
  %6 = load %struct._object*, %struct._object** %5, align 8, !dbg !6620, !tbaa !4091
  tail call void @llvm.dbg.value(metadata %struct._object* %6, i64 0, metadata !1792, metadata !1974) #2, !dbg !6621
  store %struct._object* %args, %struct._object** %5, align 8, !dbg !6622, !tbaa !4091
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %args, i64 0, i32 0, !dbg !6623
  %7 = load i64, i64* %ob_refcnt.i, align 8, !dbg !6623, !tbaa !1991
  %inc.i = add i64 %7, 1, !dbg !6623
  store i64 %inc.i, i64* %ob_refcnt.i, align 8, !dbg !6623, !tbaa !1991
  tail call void @llvm.dbg.value(metadata %struct._object* %6, i64 0, metadata !1793, metadata !1974) #2, !dbg !6624
  %cmp.i = icmp eq %struct._object* %6, null, !dbg !6625
  br i1 %cmp.i, label %if.end, label %do.body.6.i, !dbg !6626

do.body.6.i:                                      ; preds = %if.end.i
  tail call void @llvm.dbg.value(metadata %struct._object* %6, i64 0, metadata !1795, metadata !1974) #2, !dbg !6627
  %ob_refcnt8.i = getelementptr inbounds %struct._object, %struct._object* %6, i64 0, i32 0, !dbg !6628
  %8 = load i64, i64* %ob_refcnt8.i, align 8, !dbg !6628, !tbaa !1991
  %dec.i = add i64 %8, -1, !dbg !6628
  store i64 %dec.i, i64* %ob_refcnt8.i, align 8, !dbg !6628, !tbaa !1991
  %cmp9.i = icmp eq i64 %dec.i, 0, !dbg !6628
  br i1 %cmp9.i, label %if.else.i, label %if.end, !dbg !6629

if.else.i:                                        ; preds = %do.body.6.i
  %ob_type11.i = getelementptr inbounds %struct._object, %struct._object* %6, i64 0, i32 1, !dbg !6630
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type11.i, align 8, !dbg !6630, !tbaa !2010
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i64 0, i32 4, !dbg !6630
  %10 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !6630, !tbaa !2032
  tail call void %10(%struct._object* %6) #2, !dbg !6630
  br label %if.end, !dbg !6631

if.end:                                           ; preds = %if.else.i, %do.body.6.i, %if.end.i
  %encoding = getelementptr inbounds %struct._object, %struct._object* %self, i64 4, !dbg !6632
  %11 = bitcast %struct._object* %encoding to %struct._object**, !dbg !6632
  %12 = load %struct._object*, %struct._object** %11, align 8, !dbg !6632, !tbaa !2129
  tail call void @llvm.dbg.value(metadata %struct._object* %12, i64 0, metadata !1698, metadata !1974), !dbg !6632
  %cmp1 = icmp eq %struct._object* %12, null, !dbg !6634
  br i1 %cmp1, label %if.end.8, label %if.then.2, !dbg !6635

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %11, align 8, !dbg !6636, !tbaa !2129
  tail call void @llvm.dbg.value(metadata %struct._object* %12, i64 0, metadata !1700, metadata !1974), !dbg !6638
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %12, i64 0, i32 0, !dbg !6640
  %13 = load i64, i64* %ob_refcnt, align 8, !dbg !6640, !tbaa !1991
  %dec = add i64 %13, -1, !dbg !6640
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6640, !tbaa !1991
  %cmp5 = icmp eq i64 %dec, 0, !dbg !6640
  br i1 %cmp5, label %if.else, label %if.end.8, !dbg !6642

if.else:                                          ; preds = %if.then.2
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %12, i64 0, i32 1, !dbg !6643
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6643, !tbaa !2010
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i64 0, i32 4, !dbg !6643
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6643, !tbaa !2032
  tail call void %15(%struct._object* %12) #2, !dbg !6643
  br label %if.end.8

if.end.8:                                         ; preds = %if.else, %if.then.2, %if.end
  %object = getelementptr inbounds %struct._object, %struct._object* %self, i64 4, i32 1, !dbg !6645
  %16 = bitcast %struct._typeobject** %object to %struct._object**, !dbg !6645
  %17 = load %struct._object*, %struct._object** %16, align 8, !dbg !6645, !tbaa !2174
  tail call void @llvm.dbg.value(metadata %struct._object* %17, i64 0, metadata !1704, metadata !1974), !dbg !6645
  %cmp13 = icmp eq %struct._object* %17, null, !dbg !6647
  br i1 %cmp13, label %if.end.28, label %if.then.14, !dbg !6648

if.then.14:                                       ; preds = %if.end.8
  store %struct._object* null, %struct._object** %16, align 8, !dbg !6649, !tbaa !2174
  tail call void @llvm.dbg.value(metadata %struct._object* %17, i64 0, metadata !1706, metadata !1974), !dbg !6651
  %ob_refcnt18 = getelementptr inbounds %struct._object, %struct._object* %17, i64 0, i32 0, !dbg !6653
  %18 = load i64, i64* %ob_refcnt18, align 8, !dbg !6653, !tbaa !1991
  %dec19 = add i64 %18, -1, !dbg !6653
  store i64 %dec19, i64* %ob_refcnt18, align 8, !dbg !6653, !tbaa !1991
  %cmp20 = icmp eq i64 %dec19, 0, !dbg !6653
  br i1 %cmp20, label %if.else.22, label %if.end.28, !dbg !6655

if.else.22:                                       ; preds = %if.then.14
  %ob_type23 = getelementptr inbounds %struct._object, %struct._object* %17, i64 0, i32 1, !dbg !6656
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type23, align 8, !dbg !6656, !tbaa !2010
  %tp_dealloc24 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i64 0, i32 4, !dbg !6656
  %20 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc24, align 8, !dbg !6656, !tbaa !2032
  tail call void %20(%struct._object* %17) #2, !dbg !6656
  br label %if.end.28

if.end.28:                                        ; preds = %if.else.22, %if.then.14, %if.end.8
  %reason = getelementptr inbounds %struct._object, %struct._object* %self, i64 6, !dbg !6658
  %21 = bitcast %struct._object* %reason to %struct._object**, !dbg !6658
  %22 = load %struct._object*, %struct._object** %21, align 8, !dbg !6658, !tbaa !2491
  tail call void @llvm.dbg.value(metadata %struct._object* %22, i64 0, metadata !1710, metadata !1974), !dbg !6658
  %cmp33 = icmp eq %struct._object* %22, null, !dbg !6660
  br i1 %cmp33, label %if.end.48, label %if.then.34, !dbg !6661

if.then.34:                                       ; preds = %if.end.28
  store %struct._object* null, %struct._object** %21, align 8, !dbg !6662, !tbaa !2491
  tail call void @llvm.dbg.value(metadata %struct._object* %22, i64 0, metadata !1712, metadata !1974), !dbg !6664
  %ob_refcnt38 = getelementptr inbounds %struct._object, %struct._object* %22, i64 0, i32 0, !dbg !6666
  %23 = load i64, i64* %ob_refcnt38, align 8, !dbg !6666, !tbaa !1991
  %dec39 = add i64 %23, -1, !dbg !6666
  store i64 %dec39, i64* %ob_refcnt38, align 8, !dbg !6666, !tbaa !1991
  %cmp40 = icmp eq i64 %dec39, 0, !dbg !6666
  br i1 %cmp40, label %if.else.42, label %if.end.48, !dbg !6668

if.else.42:                                       ; preds = %if.then.34
  %ob_type43 = getelementptr inbounds %struct._object, %struct._object* %22, i64 0, i32 1, !dbg !6669
  %24 = load %struct._typeobject*, %struct._typeobject** %ob_type43, align 8, !dbg !6669, !tbaa !2010
  %tp_dealloc44 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %24, i64 0, i32 4, !dbg !6669
  %25 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc44, align 8, !dbg !6669, !tbaa !2032
  tail call void %25(%struct._object* %22) #2, !dbg !6669
  br label %if.end.48

if.end.48:                                        ; preds = %if.else.42, %if.then.34, %if.end.28
  %26 = getelementptr inbounds %struct._object, %struct._object* %self, i64 5, i32 0, !dbg !6671
  %end = getelementptr inbounds %struct._object, %struct._object* %self, i64 5, i32 1, !dbg !6673
  %call54 = tail call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.193, i64 0, i64 0), %struct._typeobject* nonnull @PyUnicode_Type, %struct._object* %encoding, %struct._typeobject** %object, i64* %26, %struct._typeobject** %end, %struct._typeobject* nonnull @PyUnicode_Type, %struct._object* %reason) #2, !dbg !6674
  %tobool = icmp eq i32 %call54, 0, !dbg !6674
  br i1 %tobool, label %if.then.55, label %if.end.59, !dbg !6675

if.then.55:                                       ; preds = %if.end.48
  store %struct._object* null, %struct._object** %21, align 8, !dbg !6676, !tbaa !2491
  %27 = bitcast %struct._object* %encoding to i8*, !dbg !6678
  call void @llvm.memset.p0i8.i64(i8* %27, i8 0, i64 16, i32 8, i1 false), !dbg !6679
  br label %cleanup, !dbg !6678

if.end.59:                                        ; preds = %if.end.48
  %28 = load %struct._object*, %struct._object** %16, align 8, !dbg !6680, !tbaa !2174
  %ob_type61 = getelementptr inbounds %struct._object, %struct._object* %28, i64 0, i32 1, !dbg !6680
  %29 = load %struct._typeobject*, %struct._typeobject** %ob_type61, align 8, !dbg !6680, !tbaa !2010
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %29, i64 0, i32 19, !dbg !6680
  %30 = load i64, i64* %tp_flags, align 8, !dbg !6680, !tbaa !2143
  %and = and i64 %30, 134217728, !dbg !6680
  %cmp62 = icmp eq i64 %and, 0, !dbg !6680
  br i1 %cmp62, label %if.then.63, label %if.else.74, !dbg !6682

if.then.63:                                       ; preds = %if.end.59
  tail call void @llvm.dbg.value(metadata i8** %data, i64 0, metadata !1696, metadata !1974), !dbg !6683
  tail call void @llvm.dbg.value(metadata i64* %size, i64 0, metadata !1697, metadata !1974), !dbg !6684
  %call65 = call i32 @PyObject_AsReadBuffer(%struct._object* %28, i8** nonnull %data, i64* nonnull %size) #2, !dbg !6685
  %tobool66 = icmp eq i32 %call65, 0, !dbg !6685
  br i1 %tobool66, label %if.end.71, label %if.then.67, !dbg !6688

if.then.67:                                       ; preds = %if.then.63
  store %struct._object* null, %struct._object** %21, align 8, !dbg !6689, !tbaa !2491
  %31 = bitcast %struct._object* %encoding to i8*, !dbg !6691
  call void @llvm.memset.p0i8.i64(i8* %31, i8 0, i64 16, i32 8, i1 false), !dbg !6692
  br label %cleanup, !dbg !6691

if.end.71:                                        ; preds = %if.then.63
  call void @llvm.dbg.value(metadata i8** %data, i64 0, metadata !1696, metadata !1974), !dbg !6683
  %32 = load i8*, i8** %data, align 8, !dbg !6693, !tbaa !2002
  call void @llvm.dbg.value(metadata i64* %size, i64 0, metadata !1697, metadata !1974), !dbg !6684
  %33 = load i64, i64* %size, align 8, !dbg !6694, !tbaa !2257
  %call72 = call %struct._object* @PyBytes_FromStringAndSize(i8* %32, i64 %33) #2, !dbg !6695
  store %struct._object* %call72, %struct._object** %16, align 8, !dbg !6696, !tbaa !2174
  br label %if.end.77, !dbg !6697

if.else.74:                                       ; preds = %if.end.59
  %ob_refcnt76 = getelementptr inbounds %struct._object, %struct._object* %28, i64 0, i32 0, !dbg !6698
  %34 = load i64, i64* %ob_refcnt76, align 8, !dbg !6698, !tbaa !1991
  %inc = add i64 %34, 1, !dbg !6698
  store i64 %inc, i64* %ob_refcnt76, align 8, !dbg !6698, !tbaa !1991
  br label %if.end.77

if.end.77:                                        ; preds = %if.else.74, %if.end.71
  %35 = load %struct._object*, %struct._object** %11, align 8, !dbg !6700, !tbaa !2129
  %ob_refcnt79 = getelementptr inbounds %struct._object, %struct._object* %35, i64 0, i32 0, !dbg !6700
  %36 = load i64, i64* %ob_refcnt79, align 8, !dbg !6700, !tbaa !1991
  %inc80 = add i64 %36, 1, !dbg !6700
  store i64 %inc80, i64* %ob_refcnt79, align 8, !dbg !6700, !tbaa !1991
  %37 = load %struct._object*, %struct._object** %21, align 8, !dbg !6701, !tbaa !2491
  %ob_refcnt82 = getelementptr inbounds %struct._object, %struct._object* %37, i64 0, i32 0, !dbg !6701
  %38 = load i64, i64* %ob_refcnt82, align 8, !dbg !6701, !tbaa !1991
  %inc83 = add i64 %38, 1, !dbg !6701
  store i64 %inc83, i64* %ob_refcnt82, align 8, !dbg !6701, !tbaa !1991
  br label %cleanup, !dbg !6702

cleanup:                                          ; preds = %entry, %if.end.77, %if.then.67, %if.then.55
  %retval.0 = phi i32 [ 0, %if.end.77 ], [ -1, %if.then.67 ], [ -1, %if.then.55 ], [ -1, %entry ]
  call void @llvm.lifetime.end(i64 8, i8* %1) #2, !dbg !6703
  call void @llvm.lifetime.end(i64 8, i8* %0) #2, !dbg !6703
  ret i32 %retval.0, !dbg !6703
}

declare i32 @PyObject_AsReadBuffer(%struct._object*, i8**, i64*) #3

declare %struct._object* @PyBytes_FromStringAndSize(i8*, i64) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @UnicodeTranslateError_str(%struct._object* nocapture readonly %self) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1718, metadata !1974), !dbg !6704
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1720, metadata !1974), !dbg !6705
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1721, metadata !1974), !dbg !6706
  %object = getelementptr inbounds %struct._object, %struct._object* %self, i64 4, i32 1, !dbg !6707
  %0 = bitcast %struct._typeobject** %object to %struct._object**, !dbg !6707
  %1 = load %struct._object*, %struct._object** %0, align 8, !dbg !6707, !tbaa !2174
  %tobool = icmp eq %struct._object* %1, null, !dbg !6709
  br i1 %tobool, label %if.then, label %if.end, !dbg !6710

if.then:                                          ; preds = %entry
  %call = tail call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.84, i64 0, i64 0)) #2, !dbg !6711
  br label %cleanup, !dbg !6712

if.end:                                           ; preds = %entry
  %reason = getelementptr inbounds %struct._object, %struct._object* %self, i64 6, !dbg !6713
  %2 = bitcast %struct._object* %reason to %struct._object**, !dbg !6713
  %3 = load %struct._object*, %struct._object** %2, align 8, !dbg !6713, !tbaa !2491
  %call1 = tail call %struct._object* @PyObject_Str(%struct._object* %3) #2, !dbg !6714
  tail call void @llvm.dbg.value(metadata %struct._object* %call1, i64 0, metadata !1721, metadata !1974), !dbg !6706
  %cmp = icmp eq %struct._object* %call1, null, !dbg !6715
  br i1 %cmp, label %cleanup, label %if.end.3, !dbg !6717

if.end.3:                                         ; preds = %if.end
  %4 = getelementptr inbounds %struct._object, %struct._object* %self, i64 5, i32 0, !dbg !6718
  %5 = load i64, i64* %4, align 8, !dbg !6719, !tbaa !2255
  %6 = load %struct._object*, %struct._object** %0, align 8, !dbg !6721, !tbaa !2174
  %7 = getelementptr inbounds %struct._object, %struct._object* %6, i64 1, i32 0, !dbg !6721
  %8 = load i64, i64* %7, align 8, !dbg !6721, !tbaa !2259
  %cmp5 = icmp slt i64 %5, %8, !dbg !6722
  %end = getelementptr inbounds %struct._object, %struct._object* %self, i64 5, i32 1, !dbg !6723
  %9 = bitcast %struct._typeobject** %end to i64*, !dbg !6723
  %10 = load i64, i64* %9, align 8, !dbg !6723, !tbaa !2387
  %add = add i64 %5, 1
  %cmp7 = icmp eq i64 %10, %add, !dbg !6724
  %or.cond = and i1 %cmp5, %cmp7, !dbg !6725
  br i1 %or.cond, label %if.then.8, label %if.else.21, !dbg !6725

if.then.8:                                        ; preds = %if.end.3
  %call11 = tail call i32 @PyUnicode_ReadChar(%struct._object* %6, i64 %5) #2, !dbg !6726
  tail call void @llvm.dbg.value(metadata i32 %call11, i64 0, metadata !1722, metadata !1974), !dbg !6727
  %cmp12 = icmp ult i32 %call11, 256, !dbg !6728
  %cmp14 = icmp ult i32 %call11, 65536, !dbg !6730
  %. = select i1 %cmp14, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.196, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.197, i64 0, i64 0), !dbg !6732
  %fmt.0 = select i1 %cmp12, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.195, i64 0, i64 0), i8* %., !dbg !6733
  %11 = load i64, i64* %4, align 8, !dbg !6734, !tbaa !2255
  %call20 = tail call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* %fmt.0, i32 %call11, i64 %11, %struct._object* %call1) #2, !dbg !6735
  tail call void @llvm.dbg.value(metadata %struct._object* %call20, i64 0, metadata !1720, metadata !1974), !dbg !6705
  br label %do.body.28, !dbg !6736

if.else.21:                                       ; preds = %if.end.3
  %sub = add i64 %10, -1, !dbg !6737
  %call24 = tail call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.198, i64 0, i64 0), i64 %5, i64 %sub, %struct._object* %call1) #2, !dbg !6738
  tail call void @llvm.dbg.value(metadata %struct._object* %call24, i64 0, metadata !1720, metadata !1974), !dbg !6705
  br label %do.body.28

do.body.28:                                       ; preds = %if.else.21, %if.then.8
  %result.0.ph = phi %struct._object* [ %call24, %if.else.21 ], [ %call20, %if.then.8 ]
  tail call void @llvm.dbg.value(metadata %struct._object* %call1, i64 0, metadata !1726, metadata !1974), !dbg !6739
  tail call void @llvm.dbg.value(metadata %struct._object* %call1, i64 0, metadata !1728, metadata !1974), !dbg !6741
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call1, i64 0, i32 0, !dbg !6743
  %12 = load i64, i64* %ob_refcnt, align 8, !dbg !6743, !tbaa !1991
  %dec = add i64 %12, -1, !dbg !6743
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6743, !tbaa !1991
  %cmp29 = icmp eq i64 %dec, 0, !dbg !6743
  br i1 %cmp29, label %if.else.31, label %cleanup, !dbg !6745

if.else.31:                                       ; preds = %do.body.28
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call1, i64 0, i32 1, !dbg !6746
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6746, !tbaa !2010
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i64 0, i32 4, !dbg !6746
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6746, !tbaa !2032
  tail call void %14(%struct._object* %call1) #2, !dbg !6746
  br label %cleanup

cleanup:                                          ; preds = %if.end, %do.body.28, %if.else.31, %if.then
  %retval.0 = phi %struct._object* [ %call, %if.then ], [ %result.0.ph, %if.else.31 ], [ %result.0.ph, %do.body.28 ], [ null, %if.end ]
  ret %struct._object* %retval.0, !dbg !6748
}

; Function Attrs: nounwind uwtable
define internal i32 @UnicodeTranslateError_init(%struct.PyUnicodeErrorObject* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PyUnicodeErrorObject* %self, i64 0, metadata !1735, metadata !1974), !dbg !6749
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1736, metadata !1974), !dbg !6750
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !1737, metadata !1974), !dbg !6751
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1790, metadata !1974) #2, !dbg !6752
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !1791, metadata !1974) #2, !dbg !6755
  %0 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %self, i64 0, i32 0, i32 1, !dbg !6756
  %1 = load %struct._typeobject*, %struct._typeobject** %0, align 8, !dbg !6756, !tbaa !2010
  %tp_name.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i64 0, i32 1, !dbg !6757
  %2 = load i8*, i8** %tp_name.i, align 8, !dbg !6757, !tbaa !4130
  %call.i = tail call i32 @_PyArg_NoKeywords(i8* %2, %struct._object* %kwds) #2, !dbg !6758
  %tobool.i = icmp eq i32 %call.i, 0, !dbg !6758
  br i1 %tobool.i, label %return, label %if.end.i, !dbg !6759

if.end.i:                                         ; preds = %entry
  %3 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %self, i64 0, i32 2, !dbg !6760
  %4 = load %struct._object*, %struct._object** %3, align 8, !dbg !6760, !tbaa !4091
  tail call void @llvm.dbg.value(metadata %struct._object* %4, i64 0, metadata !1792, metadata !1974) #2, !dbg !6761
  store %struct._object* %args, %struct._object** %3, align 8, !dbg !6762, !tbaa !4091
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %args, i64 0, i32 0, !dbg !6763
  %5 = load i64, i64* %ob_refcnt.i, align 8, !dbg !6763, !tbaa !1991
  %inc.i = add i64 %5, 1, !dbg !6763
  store i64 %inc.i, i64* %ob_refcnt.i, align 8, !dbg !6763, !tbaa !1991
  tail call void @llvm.dbg.value(metadata %struct._object* %4, i64 0, metadata !1793, metadata !1974) #2, !dbg !6764
  %cmp.i = icmp eq %struct._object* %4, null, !dbg !6765
  br i1 %cmp.i, label %do.body, label %do.body.6.i, !dbg !6766

do.body.6.i:                                      ; preds = %if.end.i
  tail call void @llvm.dbg.value(metadata %struct._object* %4, i64 0, metadata !1795, metadata !1974) #2, !dbg !6767
  %ob_refcnt8.i = getelementptr inbounds %struct._object, %struct._object* %4, i64 0, i32 0, !dbg !6768
  %6 = load i64, i64* %ob_refcnt8.i, align 8, !dbg !6768, !tbaa !1991
  %dec.i = add i64 %6, -1, !dbg !6768
  store i64 %dec.i, i64* %ob_refcnt8.i, align 8, !dbg !6768, !tbaa !1991
  %cmp9.i = icmp eq i64 %dec.i, 0, !dbg !6768
  br i1 %cmp9.i, label %if.else.i, label %do.body, !dbg !6769

if.else.i:                                        ; preds = %do.body.6.i
  %ob_type11.i = getelementptr inbounds %struct._object, %struct._object* %4, i64 0, i32 1, !dbg !6770
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type11.i, align 8, !dbg !6770, !tbaa !2010
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i64 0, i32 4, !dbg !6770
  %8 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !6770, !tbaa !2032
  tail call void %8(%struct._object* %4) #2, !dbg !6770
  br label %do.body, !dbg !6771

do.body:                                          ; preds = %if.else.i, %do.body.6.i, %if.end.i
  %object = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %self, i64 0, i32 8, !dbg !6772
  %9 = load %struct._object*, %struct._object** %object, align 8, !dbg !6772, !tbaa !2174
  tail call void @llvm.dbg.value(metadata %struct._object* %9, i64 0, metadata !1738, metadata !1974), !dbg !6772
  %cmp1 = icmp eq %struct._object* %9, null, !dbg !6774
  br i1 %cmp1, label %if.end.8, label %if.then.2, !dbg !6775

if.then.2:                                        ; preds = %do.body
  store %struct._object* null, %struct._object** %object, align 8, !dbg !6776, !tbaa !2174
  tail call void @llvm.dbg.value(metadata %struct._object* %9, i64 0, metadata !1740, metadata !1974), !dbg !6778
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i64 0, i32 0, !dbg !6780
  %10 = load i64, i64* %ob_refcnt, align 8, !dbg !6780, !tbaa !1991
  %dec = add i64 %10, -1, !dbg !6780
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6780, !tbaa !1991
  %cmp5 = icmp eq i64 %dec, 0, !dbg !6780
  br i1 %cmp5, label %if.else, label %if.end.8, !dbg !6782

if.else:                                          ; preds = %if.then.2
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i64 0, i32 1, !dbg !6783
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6783, !tbaa !2010
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i64 0, i32 4, !dbg !6783
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6783, !tbaa !2032
  tail call void %12(%struct._object* %9) #2, !dbg !6783
  br label %if.end.8

if.end.8:                                         ; preds = %if.else, %if.then.2, %do.body
  %reason = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %self, i64 0, i32 11, !dbg !6785
  %13 = load %struct._object*, %struct._object** %reason, align 8, !dbg !6785, !tbaa !2491
  tail call void @llvm.dbg.value(metadata %struct._object* %13, i64 0, metadata !1744, metadata !1974), !dbg !6785
  %cmp13 = icmp eq %struct._object* %13, null, !dbg !6787
  br i1 %cmp13, label %if.end.28, label %if.then.14, !dbg !6788

if.then.14:                                       ; preds = %if.end.8
  store %struct._object* null, %struct._object** %reason, align 8, !dbg !6789, !tbaa !2491
  tail call void @llvm.dbg.value(metadata %struct._object* %13, i64 0, metadata !1746, metadata !1974), !dbg !6791
  %ob_refcnt18 = getelementptr inbounds %struct._object, %struct._object* %13, i64 0, i32 0, !dbg !6793
  %14 = load i64, i64* %ob_refcnt18, align 8, !dbg !6793, !tbaa !1991
  %dec19 = add i64 %14, -1, !dbg !6793
  store i64 %dec19, i64* %ob_refcnt18, align 8, !dbg !6793, !tbaa !1991
  %cmp20 = icmp eq i64 %dec19, 0, !dbg !6793
  br i1 %cmp20, label %if.else.22, label %if.end.28, !dbg !6795

if.else.22:                                       ; preds = %if.then.14
  %ob_type23 = getelementptr inbounds %struct._object, %struct._object* %13, i64 0, i32 1, !dbg !6796
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type23, align 8, !dbg !6796, !tbaa !2010
  %tp_dealloc24 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i64 0, i32 4, !dbg !6796
  %16 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc24, align 8, !dbg !6796, !tbaa !2032
  tail call void %16(%struct._object* %13) #2, !dbg !6796
  br label %if.end.28

if.end.28:                                        ; preds = %if.else.22, %if.then.14, %if.end.8
  %start = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %self, i64 0, i32 9, !dbg !6798
  %end = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %self, i64 0, i32 10, !dbg !6800
  %call33 = tail call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.199, i64 0, i64 0), %struct._typeobject* nonnull @PyUnicode_Type, %struct._object** %object, i64* %start, i64* %end, %struct._typeobject* nonnull @PyUnicode_Type, %struct._object** %reason) #2, !dbg !6801
  %tobool = icmp eq i32 %call33, 0, !dbg !6801
  br i1 %tobool, label %if.then.34, label %if.end.37, !dbg !6802

if.then.34:                                       ; preds = %if.end.28
  store %struct._object* null, %struct._object** %reason, align 8, !dbg !6803, !tbaa !2491
  store %struct._object* null, %struct._object** %object, align 8, !dbg !6805, !tbaa !2174
  br label %return, !dbg !6806

if.end.37:                                        ; preds = %if.end.28
  %17 = load %struct._object*, %struct._object** %object, align 8, !dbg !6807, !tbaa !2174
  %ob_refcnt39 = getelementptr inbounds %struct._object, %struct._object* %17, i64 0, i32 0, !dbg !6807
  %18 = load i64, i64* %ob_refcnt39, align 8, !dbg !6807, !tbaa !1991
  %inc = add i64 %18, 1, !dbg !6807
  store i64 %inc, i64* %ob_refcnt39, align 8, !dbg !6807, !tbaa !1991
  %19 = load %struct._object*, %struct._object** %reason, align 8, !dbg !6808, !tbaa !2491
  %ob_refcnt41 = getelementptr inbounds %struct._object, %struct._object* %19, i64 0, i32 0, !dbg !6808
  %20 = load i64, i64* %ob_refcnt41, align 8, !dbg !6808, !tbaa !1991
  %inc42 = add i64 %20, 1, !dbg !6808
  store i64 %inc42, i64* %ob_refcnt41, align 8, !dbg !6808, !tbaa !1991
  br label %return, !dbg !6809

return:                                           ; preds = %entry, %if.end.37, %if.then.34
  %retval.0 = phi i32 [ 0, %if.end.37 ], [ -1, %if.then.34 ], [ -1, %entry ]
  ret i32 %retval.0, !dbg !6810
}

; Function Attrs: nounwind uwtable
define internal void @MemoryError_dealloc(%struct.PyBaseExceptionObject* %self) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.PyBaseExceptionObject* %self, i64 0, metadata !1752, metadata !1974), !dbg !6811
  %add.ptr = getelementptr %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %self, i64 -1, i32 4, !dbg !6812
  %gc_refs = getelementptr inbounds %struct._object*, %struct._object** %add.ptr, i64 2, !dbg !6814
  %0 = bitcast %struct._object** %gc_refs to i64*, !dbg !6814
  %1 = load i64, i64* %0, align 8, !dbg !6814, !tbaa !4432
  %and = and i64 %1, 1, !dbg !6814
  %or = or i64 %and, -4, !dbg !6814
  store i64 %or, i64* %0, align 8, !dbg !6814, !tbaa !4432
  %gc_next = bitcast %struct._object** %add.ptr to %union._gc_head**, !dbg !6817
  %2 = bitcast %struct._object** %add.ptr to i64*, !dbg !6817
  %3 = load i64, i64* %2, align 8, !dbg !6817, !tbaa !4436
  %gc_prev = getelementptr inbounds %struct._object*, %struct._object** %add.ptr, i64 1, !dbg !6817
  %4 = bitcast %struct._object** %gc_prev to i64**, !dbg !6817
  %5 = load i64*, i64** %4, align 8, !dbg !6817, !tbaa !4437
  store i64 %3, i64* %5, align 8, !dbg !6817, !tbaa !4436
  %6 = ptrtoint i64* %5 to i64, !dbg !6817
  %7 = bitcast %struct._object** %add.ptr to %struct.anon.0**, !dbg !6817
  %8 = load %struct.anon.0*, %struct.anon.0** %7, align 8, !dbg !6817, !tbaa !4436
  %gc_prev13 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %8, i64 0, i32 1, !dbg !6817
  %9 = bitcast %union._gc_head** %gc_prev13 to i64*, !dbg !6817
  store i64 %6, i64* %9, align 8, !dbg !6817, !tbaa !4437
  store %union._gc_head* null, %union._gc_head** %gc_next, align 8, !dbg !6817, !tbaa !4436
  %call = tail call i32 @BaseException_clear(%struct.PyBaseExceptionObject* %self), !dbg !6819
  %10 = load i32, i32* @memerrors_numfree, align 4, !dbg !6820, !tbaa !5923
  %cmp = icmp sgt i32 %10, 15, !dbg !6823
  br i1 %cmp, label %if.then, label %if.else, !dbg !6824

if.then:                                          ; preds = %entry
  %ob_type = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %self, i64 0, i32 0, i32 1, !dbg !6825
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6825, !tbaa !2010
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i64 0, i32 38, !dbg !6826
  %12 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !6826, !tbaa !4230
  %13 = bitcast %struct.PyBaseExceptionObject* %self to i8*, !dbg !6827
  tail call void %12(i8* %13) #2, !dbg !6825
  br label %if.end, !dbg !6825

if.else:                                          ; preds = %entry
  %14 = load i64, i64* bitcast (%struct.PyBaseExceptionObject** @memerrors_freelist to i64*), align 8, !dbg !6828, !tbaa !2002
  %dict = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %self, i64 0, i32 1, !dbg !6829
  %15 = bitcast %struct._object** %dict to i64*, !dbg !6830
  store i64 %14, i64* %15, align 8, !dbg !6830, !tbaa !4084
  store %struct.PyBaseExceptionObject* %self, %struct.PyBaseExceptionObject** @memerrors_freelist, align 8, !dbg !6831, !tbaa !2002
  %inc = add i32 %10, 1, !dbg !6820
  store i32 %inc, i32* @memerrors_numfree, align 4, !dbg !6820, !tbaa !5923
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !6832
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @MemoryError_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* nocapture readnone %kwds) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._typeobject* %type, i64 0, metadata !1757, metadata !1974), !dbg !6833
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1758, metadata !1974), !dbg !6834
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !1759, metadata !1974), !dbg !6835
  %0 = load %struct._typeobject*, %struct._typeobject** bitcast (%struct._object** @PyExc_MemoryError to %struct._typeobject**), align 8, !dbg !6836, !tbaa !2002
  %cmp = icmp eq %struct._typeobject* %0, %type, !dbg !6838
  br i1 %cmp, label %if.end, label %if.then, !dbg !6839

if.then:                                          ; preds = %entry
  tail call void @llvm.dbg.value(metadata %struct._typeobject* %type, i64 0, metadata !1777, metadata !1974) #2, !dbg !6840
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1778, metadata !1974) #2, !dbg !6842
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !1779, metadata !1974) #2, !dbg !6843
  %tp_alloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %type, i64 0, i32 36, !dbg !6844
  %1 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc.i, align 8, !dbg !6844, !tbaa !4077
  %call.i = tail call %struct._object* %1(%struct._typeobject* %type, i64 0) #2, !dbg !6845
  %tobool.i = icmp eq %struct._object* %call.i, null, !dbg !6846
  br i1 %tobool.i, label %cleanup, label %if.end.i, !dbg !6847

if.end.i:                                         ; preds = %if.then
  %dict.i = getelementptr inbounds %struct._object, %struct._object* %call.i, i64 1, !dbg !6848
  %2 = bitcast %struct._object* %dict.i to %struct._object**, !dbg !6848
  store %struct._object* null, %struct._object** %2, align 8, !dbg !6849, !tbaa !4084
  %traceback.i = getelementptr inbounds %struct._object, %struct._object* %call.i, i64 2, !dbg !6850
  %tobool1.i = icmp eq %struct._object* %args, null, !dbg !6851
  %3 = bitcast %struct._object* %traceback.i to i8*, !dbg !6852
  tail call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 25, i32 8, i1 false) #2, !dbg !6853
  br i1 %tobool1.i, label %if.end.4.i, label %if.then.2.i, !dbg !6852

if.then.2.i:                                      ; preds = %if.end.i
  %args3.i = getelementptr inbounds %struct._object, %struct._object* %call.i, i64 1, i32 1, !dbg !6854
  %4 = bitcast %struct._typeobject** %args3.i to %struct._object**, !dbg !6854
  store %struct._object* %args, %struct._object** %4, align 8, !dbg !6855, !tbaa !4091
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %args, i64 0, i32 0, !dbg !6856
  %5 = load i64, i64* %ob_refcnt.i, align 8, !dbg !6856, !tbaa !1991
  %inc.i = add i64 %5, 1, !dbg !6856
  store i64 %inc.i, i64* %ob_refcnt.i, align 8, !dbg !6856, !tbaa !1991
  br label %cleanup, !dbg !6857

if.end.4.i:                                       ; preds = %if.end.i
  %call5.i = tail call %struct._object* @PyTuple_New(i64 0) #2, !dbg !6858
  %args6.i = getelementptr inbounds %struct._object, %struct._object* %call.i, i64 1, i32 1, !dbg !6859
  %6 = bitcast %struct._typeobject** %args6.i to %struct._object**, !dbg !6859
  store %struct._object* %call5.i, %struct._object** %6, align 8, !dbg !6860, !tbaa !4091
  %tobool8.i = icmp eq %struct._object* %call5.i, null, !dbg !6861
  br i1 %tobool8.i, label %do.body.i, label %cleanup, !dbg !6862

do.body.i:                                        ; preds = %if.end.4.i
  tail call void @llvm.dbg.value(metadata %struct._object* %call.i, i64 0, metadata !1781, metadata !1974) #2, !dbg !6863
  %ob_refcnt10.i = getelementptr inbounds %struct._object, %struct._object* %call.i, i64 0, i32 0, !dbg !6864
  %7 = load i64, i64* %ob_refcnt10.i, align 8, !dbg !6864, !tbaa !1991
  %dec.i = add i64 %7, -1, !dbg !6864
  store i64 %dec.i, i64* %ob_refcnt10.i, align 8, !dbg !6864, !tbaa !1991
  %cmp.i = icmp eq i64 %dec.i, 0, !dbg !6864
  br i1 %cmp.i, label %if.else.i, label %cleanup, !dbg !6865

if.else.i:                                        ; preds = %do.body.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %call.i, i64 0, i32 1, !dbg !6866
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !6866, !tbaa !2010
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i64 0, i32 4, !dbg !6866
  %9 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !6866, !tbaa !2032
  tail call void %9(%struct._object* %call.i) #2, !dbg !6866
  br label %cleanup, !dbg !6867

if.end:                                           ; preds = %entry
  %10 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** @memerrors_freelist, align 8, !dbg !6868, !tbaa !2002
  %cmp1 = icmp eq %struct.PyBaseExceptionObject* %10, null, !dbg !6870
  br i1 %cmp1, label %if.then.2, label %if.end.4, !dbg !6871

if.then.2:                                        ; preds = %if.end
  tail call void @llvm.dbg.value(metadata %struct._typeobject* %type, i64 0, metadata !1777, metadata !1974) #2, !dbg !6872
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1778, metadata !1974) #2, !dbg !6874
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !1779, metadata !1974) #2, !dbg !6875
  %tp_alloc.i.51 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %type, i64 0, i32 36, !dbg !6876
  %11 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc.i.51, align 8, !dbg !6876, !tbaa !4077
  %call.i.52 = tail call %struct._object* %11(%struct._typeobject* %type, i64 0) #2, !dbg !6877
  %tobool.i.53 = icmp eq %struct._object* %call.i.52, null, !dbg !6878
  br i1 %tobool.i.53, label %cleanup, label %if.end.i.57, !dbg !6879

if.end.i.57:                                      ; preds = %if.then.2
  %dict.i.54 = getelementptr inbounds %struct._object, %struct._object* %call.i.52, i64 1, !dbg !6880
  %12 = bitcast %struct._object* %dict.i.54 to %struct._object**, !dbg !6880
  store %struct._object* null, %struct._object** %12, align 8, !dbg !6881, !tbaa !4084
  %traceback.i.55 = getelementptr inbounds %struct._object, %struct._object* %call.i.52, i64 2, !dbg !6882
  %tobool1.i.56 = icmp eq %struct._object* %args, null, !dbg !6883
  %13 = bitcast %struct._object* %traceback.i.55 to i8*, !dbg !6884
  tail call void @llvm.memset.p0i8.i64(i8* %13, i8 0, i64 25, i32 8, i1 false) #2, !dbg !6885
  br i1 %tobool1.i.56, label %if.end.4.i.65, label %if.then.2.i.61, !dbg !6884

if.then.2.i.61:                                   ; preds = %if.end.i.57
  %args3.i.58 = getelementptr inbounds %struct._object, %struct._object* %call.i.52, i64 1, i32 1, !dbg !6886
  %14 = bitcast %struct._typeobject** %args3.i.58 to %struct._object**, !dbg !6886
  store %struct._object* %args, %struct._object** %14, align 8, !dbg !6887, !tbaa !4091
  %ob_refcnt.i.59 = getelementptr inbounds %struct._object, %struct._object* %args, i64 0, i32 0, !dbg !6888
  %15 = load i64, i64* %ob_refcnt.i.59, align 8, !dbg !6888, !tbaa !1991
  %inc.i.60 = add i64 %15, 1, !dbg !6888
  store i64 %inc.i.60, i64* %ob_refcnt.i.59, align 8, !dbg !6888, !tbaa !1991
  br label %cleanup, !dbg !6889

if.end.4.i.65:                                    ; preds = %if.end.i.57
  %call5.i.62 = tail call %struct._object* @PyTuple_New(i64 0) #2, !dbg !6890
  %args6.i.63 = getelementptr inbounds %struct._object, %struct._object* %call.i.52, i64 1, i32 1, !dbg !6891
  %16 = bitcast %struct._typeobject** %args6.i.63 to %struct._object**, !dbg !6891
  store %struct._object* %call5.i.62, %struct._object** %16, align 8, !dbg !6892, !tbaa !4091
  %tobool8.i.64 = icmp eq %struct._object* %call5.i.62, null, !dbg !6893
  br i1 %tobool8.i.64, label %do.body.i.69, label %cleanup, !dbg !6894

do.body.i.69:                                     ; preds = %if.end.4.i.65
  tail call void @llvm.dbg.value(metadata %struct._object* %call.i.52, i64 0, metadata !1781, metadata !1974) #2, !dbg !6895
  %ob_refcnt10.i.66 = getelementptr inbounds %struct._object, %struct._object* %call.i.52, i64 0, i32 0, !dbg !6896
  %17 = load i64, i64* %ob_refcnt10.i.66, align 8, !dbg !6896, !tbaa !1991
  %dec.i.67 = add i64 %17, -1, !dbg !6896
  store i64 %dec.i.67, i64* %ob_refcnt10.i.66, align 8, !dbg !6896, !tbaa !1991
  %cmp.i.68 = icmp eq i64 %dec.i.67, 0, !dbg !6896
  br i1 %cmp.i.68, label %if.else.i.72, label %cleanup, !dbg !6897

if.else.i.72:                                     ; preds = %do.body.i.69
  %ob_type.i.70 = getelementptr inbounds %struct._object, %struct._object* %call.i.52, i64 0, i32 1, !dbg !6898
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type.i.70, align 8, !dbg !6898, !tbaa !2010
  %tp_dealloc.i.71 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i64 0, i32 4, !dbg !6898
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i.71, align 8, !dbg !6898, !tbaa !2032
  tail call void %19(%struct._object* %call.i.52) #2, !dbg !6898
  br label %cleanup, !dbg !6899

if.end.4:                                         ; preds = %if.end
  tail call void @llvm.dbg.value(metadata %struct.PyBaseExceptionObject* %10, i64 0, metadata !1760, metadata !1974), !dbg !6900
  %call5 = tail call %struct._object* @PyTuple_New(i64 0) #2, !dbg !6901
  %args6 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %10, i64 0, i32 2, !dbg !6902
  store %struct._object* %call5, %struct._object** %args6, align 8, !dbg !6903, !tbaa !4091
  %cmp8 = icmp eq %struct._object* %call5, null, !dbg !6904
  br i1 %cmp8, label %cleanup, label %if.end.10, !dbg !6906

if.end.10:                                        ; preds = %if.end.4
  %dict = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %10, i64 0, i32 1, !dbg !6907
  %20 = bitcast %struct._object** %dict to i64*, !dbg !6907
  %21 = load i64, i64* %20, align 8, !dbg !6907, !tbaa !4084
  store i64 %21, i64* bitcast (%struct.PyBaseExceptionObject** @memerrors_freelist to i64*), align 8, !dbg !6908, !tbaa !2002
  %22 = load i32, i32* @memerrors_numfree, align 4, !dbg !6909, !tbaa !5923
  %dec = add i32 %22, -1, !dbg !6909
  store i32 %dec, i32* @memerrors_numfree, align 4, !dbg !6909, !tbaa !5923
  store %struct._object* null, %struct._object** %dict, align 8, !dbg !6910, !tbaa !4084
  %ob_refcnt = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %10, i64 0, i32 0, i32 0, !dbg !6911
  store i64 1, i64* %ob_refcnt, align 8, !dbg !6911, !tbaa !1991
  %add.ptr = getelementptr %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %10, i64 -1, i32 4, !dbg !6912
  %gc_refs = getelementptr inbounds %struct._object*, %struct._object** %add.ptr, i64 2, !dbg !6914
  %23 = bitcast %struct._object** %gc_refs to i64*, !dbg !6914
  %24 = load i64, i64* %23, align 8, !dbg !6914, !tbaa !4432
  %shr.mask = and i64 %24, -2, !dbg !6914
  %cmp12 = icmp eq i64 %shr.mask, -4, !dbg !6914
  br i1 %cmp12, label %do.body.15, label %if.then.13, !dbg !6916

if.then.13:                                       ; preds = %if.end.10
  tail call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.208, i64 0, i64 0)) #6, !dbg !6917
  unreachable, !dbg !6917

do.body.15:                                       ; preds = %if.end.10
  %25 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %10, i64 0, i32 0, !dbg !6911
  %and = and i64 %24, 1, !dbg !6919
  %or = or i64 %and, -6, !dbg !6919
  store i64 %or, i64* %23, align 8, !dbg !6919, !tbaa !4432
  %26 = load i64, i64* bitcast (%union._gc_head** @_PyGC_generation0 to i64*), align 8, !dbg !6922, !tbaa !2002
  %27 = bitcast %struct._object** %add.ptr to i64*, !dbg !6922
  store i64 %26, i64* %27, align 8, !dbg !6922, !tbaa !4436
  %28 = load %struct.anon.0*, %struct.anon.0** bitcast (%union._gc_head** @_PyGC_generation0 to %struct.anon.0**), align 8, !dbg !6922, !tbaa !2002
  %gc_prev = getelementptr inbounds %struct.anon.0, %struct.anon.0* %28, i64 0, i32 1, !dbg !6922
  %29 = load %union._gc_head*, %union._gc_head** %gc_prev, align 8, !dbg !6922, !tbaa !4437
  %gc_prev23 = getelementptr inbounds %struct._object*, %struct._object** %add.ptr, i64 1, !dbg !6922
  %30 = bitcast %struct._object** %gc_prev23 to %union._gc_head**, !dbg !6922
  store %union._gc_head* %29, %union._gc_head** %30, align 8, !dbg !6922, !tbaa !4437
  %31 = bitcast %union._gc_head* %29 to %struct._object***, !dbg !6922
  store %struct._object** %add.ptr, %struct._object*** %31, align 8, !dbg !6922, !tbaa !4436
  %32 = load %struct.anon.0*, %struct.anon.0** bitcast (%union._gc_head** @_PyGC_generation0 to %struct.anon.0**), align 8, !dbg !6922, !tbaa !2002
  %gc_prev29 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %32, i64 0, i32 1, !dbg !6922
  %33 = bitcast %union._gc_head** %gc_prev29 to %struct._object***, !dbg !6922
  store %struct._object** %add.ptr, %struct._object*** %33, align 8, !dbg !6922, !tbaa !4437
  br label %cleanup, !dbg !6924

cleanup:                                          ; preds = %if.else.i.72, %do.body.i.69, %if.end.4.i.65, %if.then.2.i.61, %if.then.2, %if.else.i, %do.body.i, %if.end.4.i, %if.then.2.i, %if.then, %if.end.4, %do.body.15
  %retval.0 = phi %struct._object* [ %25, %do.body.15 ], [ null, %if.end.4 ], [ %call.i, %if.then.2.i ], [ null, %if.then ], [ null, %do.body.i ], [ null, %if.else.i ], [ %call.i, %if.end.4.i ], [ %call.i.52, %if.then.2.i.61 ], [ null, %if.then.2 ], [ null, %do.body.i.69 ], [ null, %if.else.i.72 ], [ %call.i.52, %if.end.4.i.65 ]
  ret %struct._object* %retval.0, !dbg !6925
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #2

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind }
attributes #7 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1971, !1972}
!llvm.ident = !{!1973}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/final)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !10, subprograms: !488, globals: !1802)
!1 = !DIFile(filename: "Objects/exceptions.c", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!2 = !{!3}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PyUnicode_Kind", file: !4, line: 451, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "Include/unicodeobject.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!5 = !{!6, !7, !8, !9}
!6 = !DIEnumerator(name: "PyUnicode_WCHAR_KIND", value: 0)
!7 = !DIEnumerator(name: "PyUnicode_1BYTE_KIND", value: 1)
!8 = !DIEnumerator(name: "PyUnicode_2BYTE_KIND", value: 2)
!9 = !DIEnumerator(name: "PyUnicode_4BYTE_KIND", value: 4)
!10 = !{!11, !50, !102, !369, !385, !403, !404, !337, !406, !414, !107, !40, !344, !428, !444, !452, !470, !471, !473, !475, !56, !477, !485}
!11 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64, align: 64)
!12 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyBaseExceptionObject", file: !13, line: 18, baseType: !14)
!13 = !DIFile(filename: "Include/pyerrors.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!14 = !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 16, size: 512, align: 64, elements: !15)
!15 = !{!16, !363, !364, !365, !366, !367, !368}
!16 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !14, file: !13, line: 17, baseType: !17, size: 128, align: 64)
!17 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyObject", file: !18, line: 109, baseType: !19)
!18 = !DIFile(filename: "Include/object.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!19 = !DICompositeType(tag: DW_TAG_structure_type, name: "_object", file: !18, line: 105, size: 128, align: 64, elements: !20)
!20 = !{!21, !29}
!21 = !DIDerivedType(tag: DW_TAG_member, name: "ob_refcnt", scope: !19, file: !18, line: 107, baseType: !22, size: 64, align: 64)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_ssize_t", file: !23, line: 177, baseType: !24)
!23 = !DIFile(filename: "Include/pyport.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!24 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !25, line: 102, baseType: !26)
!25 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!26 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !27, line: 181, baseType: !28)
!27 = !DIFile(filename: "/usr/include/bits/types.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!28 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "ob_type", scope: !19, file: !18, line: 108, baseType: !30, size: 64, align: 64, offset: 64)
!30 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !31, size: 64, align: 64)
!31 = !DICompositeType(tag: DW_TAG_structure_type, name: "_typeobject", file: !18, line: 334, size: 3200, align: 64, elements: !32)
!32 = !{!33, !39, !43, !44, !45, !51, !115, !120, !125, !126, !131, !183, !214, !226, !232, !233, !234, !236, !238, !269, !270, !271, !280, !281, !286, !287, !289, !291, !301, !311, !329, !330, !331, !333, !335, !336, !338, !343, !348, !353, !354, !355, !356, !357, !358, !359, !360, !362}
!33 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !31, file: !18, line: 335, baseType: !34, size: 192, align: 64)
!34 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyVarObject", file: !18, line: 114, baseType: !35)
!35 = !DICompositeType(tag: DW_TAG_structure_type, file: !18, line: 111, size: 192, align: 64, elements: !36)
!36 = !{!37, !38}
!37 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !35, file: !18, line: 112, baseType: !17, size: 128, align: 64)
!38 = !DIDerivedType(tag: DW_TAG_member, name: "ob_size", scope: !35, file: !18, line: 113, baseType: !22, size: 64, align: 64, offset: 128)
!39 = !DIDerivedType(tag: DW_TAG_member, name: "tp_name", scope: !31, file: !18, line: 336, baseType: !40, size: 64, align: 64, offset: 192)
!40 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !41, size: 64, align: 64)
!41 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !42)
!42 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "tp_basicsize", scope: !31, file: !18, line: 337, baseType: !22, size: 64, align: 64, offset: 256)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "tp_itemsize", scope: !31, file: !18, line: 337, baseType: !22, size: 64, align: 64, offset: 320)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dealloc", scope: !31, file: !18, line: 341, baseType: !46, size: 64, align: 64, offset: 384)
!46 = !DIDerivedType(tag: DW_TAG_typedef, name: "destructor", file: !18, line: 308, baseType: !47)
!47 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !48, size: 64, align: 64)
!48 = !DISubroutineType(types: !49)
!49 = !{null, !50}
!50 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64, align: 64)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "tp_print", scope: !31, file: !18, line: 342, baseType: !52, size: 64, align: 64, offset: 448)
!52 = !DIDerivedType(tag: DW_TAG_typedef, name: "printfunc", file: !18, line: 314, baseType: !53)
!53 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !54, size: 64, align: 64)
!54 = !DISubroutineType(types: !55)
!55 = !{!56, !50, !57, !56}
!56 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!57 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !58, size: 64, align: 64)
!58 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !25, line: 48, baseType: !59)
!59 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !60, line: 246, size: 1728, align: 64, elements: !61)
!60 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!61 = !{!62, !63, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !83, !84, !85, !86, !88, !90, !92, !96, !99, !101, !103, !104, !105, !106, !110, !111}
!62 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !59, file: !60, line: 247, baseType: !56, size: 32, align: 32)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !59, file: !60, line: 252, baseType: !64, size: 64, align: 64, offset: 64)
!64 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !42, size: 64, align: 64)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !59, file: !60, line: 253, baseType: !64, size: 64, align: 64, offset: 128)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !59, file: !60, line: 254, baseType: !64, size: 64, align: 64, offset: 192)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !59, file: !60, line: 255, baseType: !64, size: 64, align: 64, offset: 256)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !59, file: !60, line: 256, baseType: !64, size: 64, align: 64, offset: 320)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !59, file: !60, line: 257, baseType: !64, size: 64, align: 64, offset: 384)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !59, file: !60, line: 258, baseType: !64, size: 64, align: 64, offset: 448)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !59, file: !60, line: 259, baseType: !64, size: 64, align: 64, offset: 512)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !59, file: !60, line: 261, baseType: !64, size: 64, align: 64, offset: 576)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !59, file: !60, line: 262, baseType: !64, size: 64, align: 64, offset: 640)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !59, file: !60, line: 263, baseType: !64, size: 64, align: 64, offset: 704)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !59, file: !60, line: 265, baseType: !76, size: 64, align: 64, offset: 768)
!76 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !77, size: 64, align: 64)
!77 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !60, line: 161, size: 192, align: 64, elements: !78)
!78 = !{!79, !80, !82}
!79 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !77, file: !60, line: 162, baseType: !76, size: 64, align: 64)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !77, file: !60, line: 163, baseType: !81, size: 64, align: 64, offset: 64)
!81 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !59, size: 64, align: 64)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !77, file: !60, line: 167, baseType: !56, size: 32, align: 32, offset: 128)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !59, file: !60, line: 267, baseType: !81, size: 64, align: 64, offset: 832)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !59, file: !60, line: 269, baseType: !56, size: 32, align: 32, offset: 896)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !59, file: !60, line: 273, baseType: !56, size: 32, align: 32, offset: 928)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !59, file: !60, line: 275, baseType: !87, size: 64, align: 64, offset: 960)
!87 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !27, line: 140, baseType: !28)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !59, file: !60, line: 279, baseType: !89, size: 16, align: 16, offset: 1024)
!89 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !59, file: !60, line: 280, baseType: !91, size: 8, align: 8, offset: 1040)
!91 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !59, file: !60, line: 281, baseType: !93, size: 8, align: 8, offset: 1048)
!93 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 8, align: 8, elements: !94)
!94 = !{!95}
!95 = !DISubrange(count: 1)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !59, file: !60, line: 285, baseType: !97, size: 64, align: 64, offset: 1088)
!97 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !98, size: 64, align: 64)
!98 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !60, line: 155, baseType: null)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !59, file: !60, line: 294, baseType: !100, size: 64, align: 64, offset: 1152)
!100 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !27, line: 141, baseType: !28)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !59, file: !60, line: 303, baseType: !102, size: 64, align: 64, offset: 1216)
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !59, file: !60, line: 304, baseType: !102, size: 64, align: 64, offset: 1280)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !59, file: !60, line: 305, baseType: !102, size: 64, align: 64, offset: 1344)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !59, file: !60, line: 306, baseType: !102, size: 64, align: 64, offset: 1408)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !59, file: !60, line: 307, baseType: !107, size: 64, align: 64, offset: 1472)
!107 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !108, line: 62, baseType: !109)
!108 = !DIFile(filename: "/home/juneyoung.lee/llvm-install-3.7.0/bin/../lib/clang/3.7.0/include/stddef.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!109 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !59, file: !60, line: 309, baseType: !56, size: 32, align: 32, offset: 1536)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !59, file: !60, line: 311, baseType: !112, size: 160, align: 8, offset: 1568)
!112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 160, align: 8, elements: !113)
!113 = !{!114}
!114 = !DISubrange(count: 20)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattr", scope: !31, file: !18, line: 343, baseType: !116, size: 64, align: 64, offset: 512)
!116 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrfunc", file: !18, line: 316, baseType: !117)
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 64, align: 64)
!118 = !DISubroutineType(types: !119)
!119 = !{!50, !50, !64}
!120 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattr", scope: !31, file: !18, line: 344, baseType: !121, size: 64, align: 64, offset: 576)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrfunc", file: !18, line: 318, baseType: !122)
!122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 64, align: 64)
!123 = !DISubroutineType(types: !124)
!124 = !{!56, !50, !64, !50}
!125 = !DIDerivedType(tag: DW_TAG_member, name: "tp_reserved", scope: !31, file: !18, line: 345, baseType: !102, size: 64, align: 64, offset: 640)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "tp_repr", scope: !31, file: !18, line: 346, baseType: !127, size: 64, align: 64, offset: 704)
!127 = !DIDerivedType(tag: DW_TAG_typedef, name: "reprfunc", file: !18, line: 320, baseType: !128)
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 64, align: 64)
!129 = !DISubroutineType(types: !130)
!130 = !{!50, !50}
!131 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_number", scope: !31, file: !18, line: 350, baseType: !132, size: 64, align: 64, offset: 768)
!132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !133, size: 64, align: 64)
!133 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyNumberMethods", file: !18, line: 278, baseType: !134)
!134 = !DICompositeType(tag: DW_TAG_structure_type, file: !18, line: 236, size: 2176, align: 64, elements: !135)
!135 = !{!136, !141, !142, !143, !144, !145, !150, !152, !153, !154, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182}
!136 = !DIDerivedType(tag: DW_TAG_member, name: "nb_add", scope: !134, file: !18, line: 241, baseType: !137, size: 64, align: 64)
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "binaryfunc", file: !18, line: 166, baseType: !138)
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 64, align: 64)
!139 = !DISubroutineType(types: !140)
!140 = !{!50, !50, !50}
!141 = !DIDerivedType(tag: DW_TAG_member, name: "nb_subtract", scope: !134, file: !18, line: 242, baseType: !137, size: 64, align: 64, offset: 64)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "nb_multiply", scope: !134, file: !18, line: 243, baseType: !137, size: 64, align: 64, offset: 128)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "nb_remainder", scope: !134, file: !18, line: 244, baseType: !137, size: 64, align: 64, offset: 192)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "nb_divmod", scope: !134, file: !18, line: 245, baseType: !137, size: 64, align: 64, offset: 256)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "nb_power", scope: !134, file: !18, line: 246, baseType: !146, size: 64, align: 64, offset: 320)
!146 = !DIDerivedType(tag: DW_TAG_typedef, name: "ternaryfunc", file: !18, line: 167, baseType: !147)
!147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !148, size: 64, align: 64)
!148 = !DISubroutineType(types: !149)
!149 = !{!50, !50, !50, !50}
!150 = !DIDerivedType(tag: DW_TAG_member, name: "nb_negative", scope: !134, file: !18, line: 247, baseType: !151, size: 64, align: 64, offset: 384)
!151 = !DIDerivedType(tag: DW_TAG_typedef, name: "unaryfunc", file: !18, line: 165, baseType: !128)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "nb_positive", scope: !134, file: !18, line: 248, baseType: !151, size: 64, align: 64, offset: 448)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "nb_absolute", scope: !134, file: !18, line: 249, baseType: !151, size: 64, align: 64, offset: 512)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bool", scope: !134, file: !18, line: 250, baseType: !155, size: 64, align: 64, offset: 576)
!155 = !DIDerivedType(tag: DW_TAG_typedef, name: "inquiry", file: !18, line: 168, baseType: !156)
!156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 64, align: 64)
!157 = !DISubroutineType(types: !158)
!158 = !{!56, !50}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "nb_invert", scope: !134, file: !18, line: 251, baseType: !151, size: 64, align: 64, offset: 640)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "nb_lshift", scope: !134, file: !18, line: 252, baseType: !137, size: 64, align: 64, offset: 704)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "nb_rshift", scope: !134, file: !18, line: 253, baseType: !137, size: 64, align: 64, offset: 768)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "nb_and", scope: !134, file: !18, line: 254, baseType: !137, size: 64, align: 64, offset: 832)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "nb_xor", scope: !134, file: !18, line: 255, baseType: !137, size: 64, align: 64, offset: 896)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "nb_or", scope: !134, file: !18, line: 256, baseType: !137, size: 64, align: 64, offset: 960)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "nb_int", scope: !134, file: !18, line: 257, baseType: !151, size: 64, align: 64, offset: 1024)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "nb_reserved", scope: !134, file: !18, line: 258, baseType: !102, size: 64, align: 64, offset: 1088)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "nb_float", scope: !134, file: !18, line: 259, baseType: !151, size: 64, align: 64, offset: 1152)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_add", scope: !134, file: !18, line: 261, baseType: !137, size: 64, align: 64, offset: 1216)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_subtract", scope: !134, file: !18, line: 262, baseType: !137, size: 64, align: 64, offset: 1280)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_multiply", scope: !134, file: !18, line: 263, baseType: !137, size: 64, align: 64, offset: 1344)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_remainder", scope: !134, file: !18, line: 264, baseType: !137, size: 64, align: 64, offset: 1408)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_power", scope: !134, file: !18, line: 265, baseType: !146, size: 64, align: 64, offset: 1472)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_lshift", scope: !134, file: !18, line: 266, baseType: !137, size: 64, align: 64, offset: 1536)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_rshift", scope: !134, file: !18, line: 267, baseType: !137, size: 64, align: 64, offset: 1600)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_and", scope: !134, file: !18, line: 268, baseType: !137, size: 64, align: 64, offset: 1664)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_xor", scope: !134, file: !18, line: 269, baseType: !137, size: 64, align: 64, offset: 1728)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_or", scope: !134, file: !18, line: 270, baseType: !137, size: 64, align: 64, offset: 1792)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "nb_floor_divide", scope: !134, file: !18, line: 272, baseType: !137, size: 64, align: 64, offset: 1856)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "nb_true_divide", scope: !134, file: !18, line: 273, baseType: !137, size: 64, align: 64, offset: 1920)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_floor_divide", scope: !134, file: !18, line: 274, baseType: !137, size: 64, align: 64, offset: 1984)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_true_divide", scope: !134, file: !18, line: 275, baseType: !137, size: 64, align: 64, offset: 2048)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "nb_index", scope: !134, file: !18, line: 277, baseType: !151, size: 64, align: 64, offset: 2112)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_sequence", scope: !31, file: !18, line: 351, baseType: !184, size: 64, align: 64, offset: 832)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64, align: 64)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "PySequenceMethods", file: !18, line: 292, baseType: !186)
!186 = !DICompositeType(tag: DW_TAG_structure_type, file: !18, line: 280, size: 640, align: 64, elements: !187)
!187 = !{!188, !193, !194, !199, !200, !201, !206, !207, !212, !213}
!188 = !DIDerivedType(tag: DW_TAG_member, name: "sq_length", scope: !186, file: !18, line: 281, baseType: !189, size: 64, align: 64)
!189 = !DIDerivedType(tag: DW_TAG_typedef, name: "lenfunc", file: !18, line: 169, baseType: !190)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64, align: 64)
!191 = !DISubroutineType(types: !192)
!192 = !{!22, !50}
!193 = !DIDerivedType(tag: DW_TAG_member, name: "sq_concat", scope: !186, file: !18, line: 282, baseType: !137, size: 64, align: 64, offset: 64)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "sq_repeat", scope: !186, file: !18, line: 283, baseType: !195, size: 64, align: 64, offset: 128)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeargfunc", file: !18, line: 170, baseType: !196)
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 64, align: 64)
!197 = !DISubroutineType(types: !198)
!198 = !{!50, !50, !22}
!199 = !DIDerivedType(tag: DW_TAG_member, name: "sq_item", scope: !186, file: !18, line: 284, baseType: !195, size: 64, align: 64, offset: 192)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_slice", scope: !186, file: !18, line: 285, baseType: !102, size: 64, align: 64, offset: 256)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "sq_ass_item", scope: !186, file: !18, line: 286, baseType: !202, size: 64, align: 64, offset: 320)
!202 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeobjargproc", file: !18, line: 172, baseType: !203)
!203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 64, align: 64)
!204 = !DISubroutineType(types: !205)
!205 = !{!56, !50, !22, !50}
!206 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_ass_slice", scope: !186, file: !18, line: 287, baseType: !102, size: 64, align: 64, offset: 384)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "sq_contains", scope: !186, file: !18, line: 288, baseType: !208, size: 64, align: 64, offset: 448)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjproc", file: !18, line: 231, baseType: !209)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 64, align: 64)
!210 = !DISubroutineType(types: !211)
!211 = !{!56, !50, !50}
!212 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_concat", scope: !186, file: !18, line: 290, baseType: !137, size: 64, align: 64, offset: 512)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_repeat", scope: !186, file: !18, line: 291, baseType: !195, size: 64, align: 64, offset: 576)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_mapping", scope: !31, file: !18, line: 352, baseType: !215, size: 64, align: 64, offset: 896)
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 64, align: 64)
!216 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMappingMethods", file: !18, line: 298, baseType: !217)
!217 = !DICompositeType(tag: DW_TAG_structure_type, file: !18, line: 294, size: 192, align: 64, elements: !218)
!218 = !{!219, !220, !221}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "mp_length", scope: !217, file: !18, line: 295, baseType: !189, size: 64, align: 64)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "mp_subscript", scope: !217, file: !18, line: 296, baseType: !137, size: 64, align: 64, offset: 64)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "mp_ass_subscript", scope: !217, file: !18, line: 297, baseType: !222, size: 64, align: 64, offset: 128)
!222 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjargproc", file: !18, line: 174, baseType: !223)
!223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 64, align: 64)
!224 = !DISubroutineType(types: !225)
!225 = !{!56, !50, !50, !50}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "tp_hash", scope: !31, file: !18, line: 356, baseType: !227, size: 64, align: 64, offset: 960)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashfunc", file: !18, line: 321, baseType: !228)
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !229, size: 64, align: 64)
!229 = !DISubroutineType(types: !230)
!230 = !{!231, !50}
!231 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_hash_t", file: !23, line: 186, baseType: !22)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "tp_call", scope: !31, file: !18, line: 357, baseType: !146, size: 64, align: 64, offset: 1024)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "tp_str", scope: !31, file: !18, line: 358, baseType: !127, size: 64, align: 64, offset: 1088)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattro", scope: !31, file: !18, line: 359, baseType: !235, size: 64, align: 64, offset: 1152)
!235 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrofunc", file: !18, line: 317, baseType: !138)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattro", scope: !31, file: !18, line: 360, baseType: !237, size: 64, align: 64, offset: 1216)
!237 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrofunc", file: !18, line: 319, baseType: !223)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_buffer", scope: !31, file: !18, line: 363, baseType: !239, size: 64, align: 64, offset: 1280)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64, align: 64)
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyBufferProcs", file: !18, line: 304, baseType: !241)
!241 = !DICompositeType(tag: DW_TAG_structure_type, file: !18, line: 301, size: 128, align: 64, elements: !242)
!242 = !{!243, !264}
!243 = !DIDerivedType(tag: DW_TAG_member, name: "bf_getbuffer", scope: !241, file: !18, line: 302, baseType: !244, size: 64, align: 64)
!244 = !DIDerivedType(tag: DW_TAG_typedef, name: "getbufferproc", file: !18, line: 193, baseType: !245)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 64, align: 64)
!246 = !DISubroutineType(types: !247)
!247 = !{!56, !50, !248, !56}
!248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 64, align: 64)
!249 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_buffer", file: !18, line: 191, baseType: !250)
!250 = !DICompositeType(tag: DW_TAG_structure_type, name: "bufferinfo", file: !18, line: 178, size: 640, align: 64, elements: !251)
!251 = !{!252, !253, !254, !255, !256, !257, !258, !259, !261, !262, !263}
!252 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !250, file: !18, line: 179, baseType: !102, size: 64, align: 64)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "obj", scope: !250, file: !18, line: 180, baseType: !50, size: 64, align: 64, offset: 64)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !250, file: !18, line: 181, baseType: !22, size: 64, align: 64, offset: 128)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "itemsize", scope: !250, file: !18, line: 182, baseType: !22, size: 64, align: 64, offset: 192)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "readonly", scope: !250, file: !18, line: 184, baseType: !56, size: 32, align: 32, offset: 256)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "ndim", scope: !250, file: !18, line: 185, baseType: !56, size: 32, align: 32, offset: 288)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !250, file: !18, line: 186, baseType: !64, size: 64, align: 64, offset: 320)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "shape", scope: !250, file: !18, line: 187, baseType: !260, size: 64, align: 64, offset: 384)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 64, align: 64)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "strides", scope: !250, file: !18, line: 188, baseType: !260, size: 64, align: 64, offset: 448)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "suboffsets", scope: !250, file: !18, line: 189, baseType: !260, size: 64, align: 64, offset: 512)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !250, file: !18, line: 190, baseType: !102, size: 64, align: 64, offset: 576)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "bf_releasebuffer", scope: !241, file: !18, line: 303, baseType: !265, size: 64, align: 64, offset: 64)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "releasebufferproc", file: !18, line: 194, baseType: !266)
!266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !267, size: 64, align: 64)
!267 = !DISubroutineType(types: !268)
!268 = !{null, !50, !248}
!269 = !DIDerivedType(tag: DW_TAG_member, name: "tp_flags", scope: !31, file: !18, line: 366, baseType: !109, size: 64, align: 64, offset: 1344)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "tp_doc", scope: !31, file: !18, line: 368, baseType: !40, size: 64, align: 64, offset: 1408)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "tp_traverse", scope: !31, file: !18, line: 372, baseType: !272, size: 64, align: 64, offset: 1472)
!272 = !DIDerivedType(tag: DW_TAG_typedef, name: "traverseproc", file: !18, line: 233, baseType: !273)
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 64, align: 64)
!274 = !DISubroutineType(types: !275)
!275 = !{!56, !50, !276, !102}
!276 = !DIDerivedType(tag: DW_TAG_typedef, name: "visitproc", file: !18, line: 232, baseType: !277)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64, align: 64)
!278 = !DISubroutineType(types: !279)
!279 = !{!56, !50, !102}
!280 = !DIDerivedType(tag: DW_TAG_member, name: "tp_clear", scope: !31, file: !18, line: 375, baseType: !155, size: 64, align: 64, offset: 1536)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "tp_richcompare", scope: !31, file: !18, line: 379, baseType: !282, size: 64, align: 64, offset: 1600)
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "richcmpfunc", file: !18, line: 322, baseType: !283)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 64, align: 64)
!284 = !DISubroutineType(types: !285)
!285 = !{!50, !50, !50, !56}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklistoffset", scope: !31, file: !18, line: 382, baseType: !22, size: 64, align: 64, offset: 1664)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iter", scope: !31, file: !18, line: 385, baseType: !288, size: 64, align: 64, offset: 1728)
!288 = !DIDerivedType(tag: DW_TAG_typedef, name: "getiterfunc", file: !18, line: 323, baseType: !128)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iternext", scope: !31, file: !18, line: 386, baseType: !290, size: 64, align: 64, offset: 1792)
!290 = !DIDerivedType(tag: DW_TAG_typedef, name: "iternextfunc", file: !18, line: 324, baseType: !128)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "tp_methods", scope: !31, file: !18, line: 389, baseType: !292, size: 64, align: 64, offset: 1856)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64, align: 64)
!293 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyMethodDef", file: !294, line: 40, size: 256, align: 64, elements: !295)
!294 = !DIFile(filename: "Include/methodobject.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!295 = !{!296, !297, !299, !300}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "ml_name", scope: !293, file: !294, line: 41, baseType: !40, size: 64, align: 64)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "ml_meth", scope: !293, file: !294, line: 42, baseType: !298, size: 64, align: 64, offset: 64)
!298 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCFunction", file: !294, line: 18, baseType: !138)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flags", scope: !293, file: !294, line: 43, baseType: !56, size: 32, align: 32, offset: 128)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "ml_doc", scope: !293, file: !294, line: 45, baseType: !40, size: 64, align: 64, offset: 192)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "tp_members", scope: !31, file: !18, line: 390, baseType: !302, size: 64, align: 64, offset: 1920)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 64, align: 64)
!303 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyMemberDef", file: !304, line: 18, size: 320, align: 64, elements: !305)
!304 = !DIFile(filename: "Include/structmember.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!305 = !{!306, !307, !308, !309, !310}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !303, file: !304, line: 19, baseType: !64, size: 64, align: 64)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !303, file: !304, line: 20, baseType: !56, size: 32, align: 32, offset: 64)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !303, file: !304, line: 21, baseType: !22, size: 64, align: 64, offset: 128)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !303, file: !304, line: 22, baseType: !56, size: 32, align: 32, offset: 192)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !303, file: !304, line: 23, baseType: !64, size: 64, align: 64, offset: 256)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getset", scope: !31, file: !18, line: 391, baseType: !312, size: 64, align: 64, offset: 1984)
!312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 64, align: 64)
!313 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyGetSetDef", file: !314, line: 11, size: 320, align: 64, elements: !315)
!314 = !DIFile(filename: "Include/descrobject.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!315 = !{!316, !317, !322, !327, !328}
!316 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !313, file: !314, line: 12, baseType: !64, size: 64, align: 64)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !313, file: !314, line: 13, baseType: !318, size: 64, align: 64, offset: 64)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "getter", file: !314, line: 8, baseType: !319)
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64, align: 64)
!320 = !DISubroutineType(types: !321)
!321 = !{!50, !50, !102}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !313, file: !314, line: 14, baseType: !323, size: 64, align: 64, offset: 128)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "setter", file: !314, line: 9, baseType: !324)
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 64, align: 64)
!325 = !DISubroutineType(types: !326)
!326 = !{!56, !50, !50, !102}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !313, file: !314, line: 15, baseType: !64, size: 64, align: 64, offset: 192)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "closure", scope: !313, file: !314, line: 16, baseType: !102, size: 64, align: 64, offset: 256)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "tp_base", scope: !31, file: !18, line: 392, baseType: !30, size: 64, align: 64, offset: 2048)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dict", scope: !31, file: !18, line: 393, baseType: !50, size: 64, align: 64, offset: 2112)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_get", scope: !31, file: !18, line: 394, baseType: !332, size: 64, align: 64, offset: 2176)
!332 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrgetfunc", file: !18, line: 325, baseType: !147)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_set", scope: !31, file: !18, line: 395, baseType: !334, size: 64, align: 64, offset: 2240)
!334 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrsetfunc", file: !18, line: 326, baseType: !223)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dictoffset", scope: !31, file: !18, line: 396, baseType: !22, size: 64, align: 64, offset: 2304)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "tp_init", scope: !31, file: !18, line: 397, baseType: !337, size: 64, align: 64, offset: 2368)
!337 = !DIDerivedType(tag: DW_TAG_typedef, name: "initproc", file: !18, line: 327, baseType: !223)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "tp_alloc", scope: !31, file: !18, line: 398, baseType: !339, size: 64, align: 64, offset: 2432)
!339 = !DIDerivedType(tag: DW_TAG_typedef, name: "allocfunc", file: !18, line: 329, baseType: !340)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 64, align: 64)
!341 = !DISubroutineType(types: !342)
!342 = !{!50, !30, !22}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "tp_new", scope: !31, file: !18, line: 399, baseType: !344, size: 64, align: 64, offset: 2496)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "newfunc", file: !18, line: 328, baseType: !345)
!345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 64, align: 64)
!346 = !DISubroutineType(types: !347)
!347 = !{!50, !30, !50, !50}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "tp_free", scope: !31, file: !18, line: 400, baseType: !349, size: 64, align: 64, offset: 2560)
!349 = !DIDerivedType(tag: DW_TAG_typedef, name: "freefunc", file: !18, line: 307, baseType: !350)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 64, align: 64)
!351 = !DISubroutineType(types: !352)
!352 = !{null, !102}
!353 = !DIDerivedType(tag: DW_TAG_member, name: "tp_is_gc", scope: !31, file: !18, line: 401, baseType: !155, size: 64, align: 64, offset: 2624)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "tp_bases", scope: !31, file: !18, line: 402, baseType: !50, size: 64, align: 64, offset: 2688)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "tp_mro", scope: !31, file: !18, line: 403, baseType: !50, size: 64, align: 64, offset: 2752)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "tp_cache", scope: !31, file: !18, line: 404, baseType: !50, size: 64, align: 64, offset: 2816)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "tp_subclasses", scope: !31, file: !18, line: 405, baseType: !50, size: 64, align: 64, offset: 2880)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklist", scope: !31, file: !18, line: 406, baseType: !50, size: 64, align: 64, offset: 2944)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "tp_del", scope: !31, file: !18, line: 407, baseType: !46, size: 64, align: 64, offset: 3008)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "tp_version_tag", scope: !31, file: !18, line: 410, baseType: !361, size: 32, align: 32, offset: 3072)
!361 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "tp_finalize", scope: !31, file: !18, line: 412, baseType: !46, size: 64, align: 64, offset: 3136)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !14, file: !13, line: 17, baseType: !50, size: 64, align: 64, offset: 128)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !14, file: !13, line: 17, baseType: !50, size: 64, align: 64, offset: 192)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "traceback", scope: !14, file: !13, line: 17, baseType: !50, size: 64, align: 64, offset: 256)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !14, file: !13, line: 17, baseType: !50, size: 64, align: 64, offset: 320)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "cause", scope: !14, file: !13, line: 17, baseType: !50, size: 64, align: 64, offset: 384)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_context", scope: !14, file: !13, line: 17, baseType: !42, size: 8, align: 8, offset: 448)
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 64, align: 64)
!370 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyUnicodeErrorObject", file: !13, line: 44, baseType: !371)
!371 = !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 37, size: 832, align: 64, elements: !372)
!372 = !{!373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !371, file: !13, line: 38, baseType: !17, size: 128, align: 64)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !371, file: !13, line: 38, baseType: !50, size: 64, align: 64, offset: 128)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !371, file: !13, line: 38, baseType: !50, size: 64, align: 64, offset: 192)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "traceback", scope: !371, file: !13, line: 38, baseType: !50, size: 64, align: 64, offset: 256)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !371, file: !13, line: 38, baseType: !50, size: 64, align: 64, offset: 320)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "cause", scope: !371, file: !13, line: 38, baseType: !50, size: 64, align: 64, offset: 384)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_context", scope: !371, file: !13, line: 38, baseType: !42, size: 8, align: 8, offset: 448)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !371, file: !13, line: 39, baseType: !50, size: 64, align: 64, offset: 512)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !371, file: !13, line: 40, baseType: !50, size: 64, align: 64, offset: 576)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !371, file: !13, line: 41, baseType: !22, size: 64, align: 64, offset: 640)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !371, file: !13, line: 42, baseType: !22, size: 64, align: 64, offset: 704)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !371, file: !13, line: 43, baseType: !50, size: 64, align: 64, offset: 768)
!385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !386, size: 64, align: 64)
!386 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyASCIIObject", file: !4, line: 351, baseType: !387)
!387 = !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 217, size: 384, align: 64, elements: !388)
!388 = !{!389, !390, !391, !392, !400}
!389 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !387, file: !4, line: 291, baseType: !17, size: 128, align: 64)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !387, file: !4, line: 292, baseType: !22, size: 64, align: 64, offset: 128)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !387, file: !4, line: 293, baseType: !231, size: 64, align: 64, offset: 192)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !387, file: !4, line: 349, baseType: !393, size: 32, align: 32, offset: 256)
!393 = !DICompositeType(tag: DW_TAG_structure_type, scope: !387, file: !4, line: 294, size: 32, align: 32, elements: !394)
!394 = !{!395, !396, !397, !398, !399}
!395 = !DIDerivedType(tag: DW_TAG_member, name: "interned", scope: !393, file: !4, line: 303, baseType: !361, size: 2, align: 32)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !393, file: !4, line: 331, baseType: !361, size: 3, align: 32, offset: 2)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "compact", scope: !393, file: !4, line: 336, baseType: !361, size: 1, align: 32, offset: 5)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !393, file: !4, line: 340, baseType: !361, size: 1, align: 32, offset: 6)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "ready", scope: !393, file: !4, line: 345, baseType: !361, size: 1, align: 32, offset: 7)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "wstr", scope: !387, file: !4, line: 350, baseType: !401, size: 64, align: 64, offset: 320)
!401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !402, size: 64, align: 64)
!402 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !108, line: 90, baseType: !56)
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !34, size: 64, align: 64)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64, align: 64)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTypeObject", file: !18, line: 422, baseType: !31)
!406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !407, size: 64, align: 64)
!407 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTupleObject", file: !408, line: 33, baseType: !409)
!408 = !DIFile(filename: "Include/tupleobject.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!409 = !DICompositeType(tag: DW_TAG_structure_type, file: !408, line: 25, size: 256, align: 64, elements: !410)
!410 = !{!411, !412}
!411 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !409, file: !408, line: 26, baseType: !34, size: 192, align: 64)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "ob_item", scope: !409, file: !408, line: 27, baseType: !413, size: 64, align: 64, offset: 192)
!413 = !DICompositeType(tag: DW_TAG_array_type, baseType: !50, size: 64, align: 64, elements: !94)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64, align: 64)
!415 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyGC_Head", file: !416, line: 253, baseType: !417)
!416 = !DIFile(filename: "Include/objimpl.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!417 = !DICompositeType(tag: DW_TAG_union_type, name: "_gc_head", file: !416, line: 246, size: 192, align: 64, elements: !418)
!418 = !{!419, !426}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !417, file: !416, line: 251, baseType: !420, size: 192, align: 64)
!420 = !DICompositeType(tag: DW_TAG_structure_type, scope: !417, file: !416, line: 247, size: 192, align: 64, elements: !421)
!421 = !{!422, !424, !425}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "gc_next", scope: !420, file: !416, line: 248, baseType: !423, size: 64, align: 64)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64, align: 64)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "gc_prev", scope: !420, file: !416, line: 249, baseType: !423, size: 64, align: 64, offset: 64)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "gc_refs", scope: !420, file: !416, line: 250, baseType: !22, size: 64, align: 64, offset: 128)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !417, file: !416, line: 252, baseType: !427, size: 64, align: 64)
!427 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 64, align: 64)
!429 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyOSErrorObject", file: !13, line: 61, baseType: !430)
!430 = !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 51, size: 832, align: 64, elements: !431)
!431 = !{!432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !430, file: !13, line: 52, baseType: !17, size: 128, align: 64)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !430, file: !13, line: 52, baseType: !50, size: 64, align: 64, offset: 128)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !430, file: !13, line: 52, baseType: !50, size: 64, align: 64, offset: 192)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "traceback", scope: !430, file: !13, line: 52, baseType: !50, size: 64, align: 64, offset: 256)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !430, file: !13, line: 52, baseType: !50, size: 64, align: 64, offset: 320)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "cause", scope: !430, file: !13, line: 52, baseType: !50, size: 64, align: 64, offset: 384)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_context", scope: !430, file: !13, line: 52, baseType: !42, size: 8, align: 8, offset: 448)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "myerrno", scope: !430, file: !13, line: 53, baseType: !50, size: 64, align: 64, offset: 512)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "strerror", scope: !430, file: !13, line: 54, baseType: !50, size: 64, align: 64, offset: 576)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !430, file: !13, line: 55, baseType: !50, size: 64, align: 64, offset: 640)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "filename2", scope: !430, file: !13, line: 56, baseType: !50, size: 64, align: 64, offset: 704)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "written", scope: !430, file: !13, line: 60, baseType: !22, size: 64, align: 64, offset: 768)
!444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64, align: 64)
!445 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCompactUnicodeObject", file: !4, line: 363, baseType: !446)
!446 = !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 356, size: 576, align: 64, elements: !447)
!447 = !{!448, !449, !450, !451}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !446, file: !4, line: 357, baseType: !386, size: 384, align: 64)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_length", scope: !446, file: !4, line: 358, baseType: !22, size: 64, align: 64, offset: 384)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "utf8", scope: !446, file: !4, line: 360, baseType: !64, size: 64, align: 64, offset: 448)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "wstr_length", scope: !446, file: !4, line: 361, baseType: !22, size: 64, align: 64, offset: 512)
!452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !453, size: 64, align: 64)
!453 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyUnicodeObject", file: !4, line: 376, baseType: !454)
!454 = !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 368, size: 640, align: 64, elements: !455)
!455 = !{!456, !457}
!456 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !454, file: !4, line: 369, baseType: !445, size: 576, align: 64)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !454, file: !4, line: 375, baseType: !458, size: 64, align: 64, offset: 576)
!458 = !DICompositeType(tag: DW_TAG_union_type, scope: !454, file: !4, line: 370, size: 64, align: 64, elements: !459)
!459 = !{!460, !461, !465, !468}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "any", scope: !458, file: !4, line: 371, baseType: !102, size: 64, align: 64)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "latin1", scope: !458, file: !4, line: 372, baseType: !462, size: 64, align: 64)
!462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !463, size: 64, align: 64)
!463 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_UCS1", file: !4, line: 134, baseType: !464)
!464 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "ucs2", scope: !458, file: !4, line: 373, baseType: !466, size: 64, align: 64)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64, align: 64)
!467 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_UCS2", file: !4, line: 129, baseType: !89)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "ucs4", scope: !458, file: !4, line: 374, baseType: !469, size: 64, align: 64)
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 64, align: 64)
!470 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_UCS4", file: !4, line: 121, baseType: !361)
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !472, size: 64, align: 64)
!472 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !463)
!473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !474, size: 64, align: 64)
!474 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !467)
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 64, align: 64)
!476 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !470)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 64, align: 64)
!478 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyBytesObject", file: !479, line: 41, baseType: !480)
!479 = !DIFile(filename: "Include/bytesobject.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!480 = !DICompositeType(tag: DW_TAG_structure_type, file: !479, line: 31, size: 320, align: 64, elements: !481)
!481 = !{!482, !483, !484}
!482 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !480, file: !479, line: 32, baseType: !34, size: 192, align: 64)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "ob_shash", scope: !480, file: !479, line: 33, baseType: !231, size: 64, align: 64, offset: 192)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "ob_sval", scope: !480, file: !479, line: 34, baseType: !93, size: 8, align: 8, offset: 256)
!485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 64, align: 64)
!486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !487, size: 64, align: 64)
!487 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!488 = !{!489, !495, !499, !505, !517, !523, !533, !536, !539, !542, !545, !548, !558, !566, !570, !576, !580, !584, !592, !600, !604, !608, !612, !616, !619, !622, !625, !631, !635, !639, !652, !662, !671, !679, !780, !796, !843, !856, !863, !870, !873, !900, !935, !938, !945, !949, !952, !963, !966, !970, !974, !978, !982, !1001, !1012, !1023, !1038, !1057, !1068, !1079, !1093, !1114, !1119, !1138, !1161, !1197, !1204, !1209, !1232, !1261, !1272, !1278, !1286, !1302, !1307, !1320, !1351, !1383, !1407, !1421, !1429, !1460, !1501, !1550, !1553, !1559, !1563, !1576, !1583, !1604, !1623, !1646, !1670, !1690, !1716, !1731, !1750, !1755, !1763, !1775, !1785, !1798}
!489 = !DISubprogram(name: "PyException_GetTraceback", scope: !1, file: !1, line: 312, type: !129, isLocal: false, isDefinition: true, scopeLine: 312, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @PyException_GetTraceback, variables: !490)
!490 = !{!491, !492, !493}
!491 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !489, file: !1, line: 312, type: !50)
!492 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "base_self", scope: !489, file: !1, line: 313, type: !11)
!493 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xincref_tmp", scope: !494, file: !1, line: 314, type: !50)
!494 = distinct !DILexicalBlock(scope: !489, file: !1, line: 314, column: 5)
!495 = !DISubprogram(name: "PyException_SetTraceback", scope: !1, file: !1, line: 320, type: !210, isLocal: false, isDefinition: true, scopeLine: 320, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, %struct._object*)* @PyException_SetTraceback, variables: !496)
!496 = !{!497, !498}
!497 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !495, file: !1, line: 320, type: !50)
!498 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tb", arg: 2, scope: !495, file: !1, line: 320, type: !50)
!499 = !DISubprogram(name: "PyException_GetCause", scope: !1, file: !1, line: 325, type: !129, isLocal: false, isDefinition: true, scopeLine: 325, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @PyException_GetCause, variables: !500)
!500 = !{!501, !502, !503}
!501 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !499, file: !1, line: 325, type: !50)
!502 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cause", scope: !499, file: !1, line: 326, type: !50)
!503 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xincref_tmp", scope: !504, file: !1, line: 327, type: !50)
!504 = distinct !DILexicalBlock(scope: !499, file: !1, line: 327, column: 5)
!505 = !DISubprogram(name: "PyException_SetCause", scope: !1, file: !1, line: 333, type: !506, isLocal: false, isDefinition: true, scopeLine: 333, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct._object*, %struct._object*)* @PyException_SetCause, variables: !508)
!506 = !DISubroutineType(types: !507)
!507 = !{null, !50, !50}
!508 = !{!509, !510, !511, !512, !514}
!509 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !505, file: !1, line: 333, type: !50)
!510 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "cause", arg: 2, scope: !505, file: !1, line: 333, type: !50)
!511 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "old_cause", scope: !505, file: !1, line: 334, type: !50)
!512 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !513, file: !1, line: 337, type: !50)
!513 = distinct !DILexicalBlock(scope: !505, file: !1, line: 337, column: 5)
!514 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !515, file: !1, line: 337, type: !50)
!515 = distinct !DILexicalBlock(scope: !516, file: !1, line: 337, column: 5)
!516 = distinct !DILexicalBlock(scope: !513, file: !1, line: 337, column: 5)
!517 = !DISubprogram(name: "PyException_GetContext", scope: !1, file: !1, line: 341, type: !129, isLocal: false, isDefinition: true, scopeLine: 341, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @PyException_GetContext, variables: !518)
!518 = !{!519, !520, !521}
!519 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !517, file: !1, line: 341, type: !50)
!520 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "context", scope: !517, file: !1, line: 342, type: !50)
!521 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xincref_tmp", scope: !522, file: !1, line: 343, type: !50)
!522 = distinct !DILexicalBlock(scope: !517, file: !1, line: 343, column: 5)
!523 = !DISubprogram(name: "PyException_SetContext", scope: !1, file: !1, line: 349, type: !506, isLocal: false, isDefinition: true, scopeLine: 349, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct._object*, %struct._object*)* @PyException_SetContext, variables: !524)
!524 = !{!525, !526, !527, !528, !530}
!525 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !523, file: !1, line: 349, type: !50)
!526 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "context", arg: 2, scope: !523, file: !1, line: 349, type: !50)
!527 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "old_context", scope: !523, file: !1, line: 350, type: !50)
!528 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !529, file: !1, line: 352, type: !50)
!529 = distinct !DILexicalBlock(scope: !523, file: !1, line: 352, column: 5)
!530 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !531, file: !1, line: 352, type: !50)
!531 = distinct !DILexicalBlock(scope: !532, file: !1, line: 352, column: 5)
!532 = distinct !DILexicalBlock(scope: !529, file: !1, line: 352, column: 5)
!533 = !DISubprogram(name: "PyUnicodeEncodeError_GetEncoding", scope: !1, file: !1, line: 1542, type: !129, isLocal: false, isDefinition: true, scopeLine: 1543, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @PyUnicodeEncodeError_GetEncoding, variables: !534)
!534 = !{!535}
!535 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !533, file: !1, line: 1542, type: !50)
!536 = !DISubprogram(name: "PyUnicodeDecodeError_GetEncoding", scope: !1, file: !1, line: 1548, type: !129, isLocal: false, isDefinition: true, scopeLine: 1549, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @PyUnicodeDecodeError_GetEncoding, variables: !537)
!537 = !{!538}
!538 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !536, file: !1, line: 1548, type: !50)
!539 = !DISubprogram(name: "PyUnicodeEncodeError_GetObject", scope: !1, file: !1, line: 1554, type: !129, isLocal: false, isDefinition: true, scopeLine: 1555, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @PyUnicodeEncodeError_GetObject, variables: !540)
!540 = !{!541}
!541 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !539, file: !1, line: 1554, type: !50)
!542 = !DISubprogram(name: "PyUnicodeDecodeError_GetObject", scope: !1, file: !1, line: 1560, type: !129, isLocal: false, isDefinition: true, scopeLine: 1561, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @PyUnicodeDecodeError_GetObject, variables: !543)
!543 = !{!544}
!544 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !542, file: !1, line: 1560, type: !50)
!545 = !DISubprogram(name: "PyUnicodeTranslateError_GetObject", scope: !1, file: !1, line: 1566, type: !129, isLocal: false, isDefinition: true, scopeLine: 1567, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @PyUnicodeTranslateError_GetObject, variables: !546)
!546 = !{!547}
!547 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !545, file: !1, line: 1566, type: !50)
!548 = !DISubprogram(name: "PyUnicodeEncodeError_GetStart", scope: !1, file: !1, line: 1572, type: !549, isLocal: false, isDefinition: true, scopeLine: 1573, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i64*)* @PyUnicodeEncodeError_GetStart, variables: !551)
!549 = !DISubroutineType(types: !550)
!550 = !{!56, !50, !260}
!551 = !{!552, !553, !554, !555, !556}
!552 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !548, file: !1, line: 1572, type: !50)
!553 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 2, scope: !548, file: !1, line: 1572, type: !260)
!554 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !548, file: !1, line: 1574, type: !22)
!555 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "obj", scope: !548, file: !1, line: 1575, type: !50)
!556 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !557, file: !1, line: 1585, type: !50)
!557 = distinct !DILexicalBlock(scope: !548, file: !1, line: 1585, column: 5)
!558 = !DISubprogram(name: "PyUnicodeDecodeError_GetStart", scope: !1, file: !1, line: 1591, type: !549, isLocal: false, isDefinition: true, scopeLine: 1592, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i64*)* @PyUnicodeDecodeError_GetStart, variables: !559)
!559 = !{!560, !561, !562, !563, !564}
!560 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !558, file: !1, line: 1591, type: !50)
!561 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 2, scope: !558, file: !1, line: 1591, type: !260)
!562 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !558, file: !1, line: 1593, type: !22)
!563 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "obj", scope: !558, file: !1, line: 1594, type: !50)
!564 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !565, file: !1, line: 1603, type: !50)
!565 = distinct !DILexicalBlock(scope: !558, file: !1, line: 1603, column: 5)
!566 = !DISubprogram(name: "PyUnicodeTranslateError_GetStart", scope: !1, file: !1, line: 1609, type: !549, isLocal: false, isDefinition: true, scopeLine: 1610, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i64*)* @PyUnicodeTranslateError_GetStart, variables: !567)
!567 = !{!568, !569}
!568 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !566, file: !1, line: 1609, type: !50)
!569 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 2, scope: !566, file: !1, line: 1609, type: !260)
!570 = !DISubprogram(name: "PyUnicodeEncodeError_SetStart", scope: !1, file: !1, line: 1616, type: !571, isLocal: false, isDefinition: true, scopeLine: 1617, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i64)* @PyUnicodeEncodeError_SetStart, variables: !573)
!571 = !DISubroutineType(types: !572)
!572 = !{!56, !50, !22}
!573 = !{!574, !575}
!574 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !570, file: !1, line: 1616, type: !50)
!575 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 2, scope: !570, file: !1, line: 1616, type: !22)
!576 = !DISubprogram(name: "PyUnicodeDecodeError_SetStart", scope: !1, file: !1, line: 1624, type: !571, isLocal: false, isDefinition: true, scopeLine: 1625, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i64)* @PyUnicodeDecodeError_SetStart, variables: !577)
!577 = !{!578, !579}
!578 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !576, file: !1, line: 1624, type: !50)
!579 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 2, scope: !576, file: !1, line: 1624, type: !22)
!580 = !DISubprogram(name: "PyUnicodeTranslateError_SetStart", scope: !1, file: !1, line: 1632, type: !571, isLocal: false, isDefinition: true, scopeLine: 1633, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i64)* @PyUnicodeTranslateError_SetStart, variables: !581)
!581 = !{!582, !583}
!582 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !580, file: !1, line: 1632, type: !50)
!583 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 2, scope: !580, file: !1, line: 1632, type: !22)
!584 = !DISubprogram(name: "PyUnicodeEncodeError_GetEnd", scope: !1, file: !1, line: 1640, type: !549, isLocal: false, isDefinition: true, scopeLine: 1641, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i64*)* @PyUnicodeEncodeError_GetEnd, variables: !585)
!585 = !{!586, !587, !588, !589, !590}
!586 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !584, file: !1, line: 1640, type: !50)
!587 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 2, scope: !584, file: !1, line: 1640, type: !260)
!588 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !584, file: !1, line: 1642, type: !22)
!589 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "obj", scope: !584, file: !1, line: 1643, type: !50)
!590 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !591, file: !1, line: 1653, type: !50)
!591 = distinct !DILexicalBlock(scope: !584, file: !1, line: 1653, column: 5)
!592 = !DISubprogram(name: "PyUnicodeDecodeError_GetEnd", scope: !1, file: !1, line: 1659, type: !549, isLocal: false, isDefinition: true, scopeLine: 1660, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i64*)* @PyUnicodeDecodeError_GetEnd, variables: !593)
!593 = !{!594, !595, !596, !597, !598}
!594 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !592, file: !1, line: 1659, type: !50)
!595 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 2, scope: !592, file: !1, line: 1659, type: !260)
!596 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !592, file: !1, line: 1661, type: !22)
!597 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "obj", scope: !592, file: !1, line: 1662, type: !50)
!598 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !599, file: !1, line: 1671, type: !50)
!599 = distinct !DILexicalBlock(scope: !592, file: !1, line: 1671, column: 5)
!600 = !DISubprogram(name: "PyUnicodeTranslateError_GetEnd", scope: !1, file: !1, line: 1677, type: !549, isLocal: false, isDefinition: true, scopeLine: 1678, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i64*)* @PyUnicodeTranslateError_GetEnd, variables: !601)
!601 = !{!602, !603}
!602 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !600, file: !1, line: 1677, type: !50)
!603 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 2, scope: !600, file: !1, line: 1677, type: !260)
!604 = !DISubprogram(name: "PyUnicodeEncodeError_SetEnd", scope: !1, file: !1, line: 1684, type: !571, isLocal: false, isDefinition: true, scopeLine: 1685, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i64)* @PyUnicodeEncodeError_SetEnd, variables: !605)
!605 = !{!606, !607}
!606 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !604, file: !1, line: 1684, type: !50)
!607 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 2, scope: !604, file: !1, line: 1684, type: !22)
!608 = !DISubprogram(name: "PyUnicodeDecodeError_SetEnd", scope: !1, file: !1, line: 1692, type: !571, isLocal: false, isDefinition: true, scopeLine: 1693, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i64)* @PyUnicodeDecodeError_SetEnd, variables: !609)
!609 = !{!610, !611}
!610 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !608, file: !1, line: 1692, type: !50)
!611 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 2, scope: !608, file: !1, line: 1692, type: !22)
!612 = !DISubprogram(name: "PyUnicodeTranslateError_SetEnd", scope: !1, file: !1, line: 1700, type: !571, isLocal: false, isDefinition: true, scopeLine: 1701, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i64)* @PyUnicodeTranslateError_SetEnd, variables: !613)
!613 = !{!614, !615}
!614 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !612, file: !1, line: 1700, type: !50)
!615 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 2, scope: !612, file: !1, line: 1700, type: !22)
!616 = !DISubprogram(name: "PyUnicodeEncodeError_GetReason", scope: !1, file: !1, line: 1707, type: !129, isLocal: false, isDefinition: true, scopeLine: 1708, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @PyUnicodeEncodeError_GetReason, variables: !617)
!617 = !{!618}
!618 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !616, file: !1, line: 1707, type: !50)
!619 = !DISubprogram(name: "PyUnicodeDecodeError_GetReason", scope: !1, file: !1, line: 1714, type: !129, isLocal: false, isDefinition: true, scopeLine: 1715, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @PyUnicodeDecodeError_GetReason, variables: !620)
!620 = !{!621}
!621 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !619, file: !1, line: 1714, type: !50)
!622 = !DISubprogram(name: "PyUnicodeTranslateError_GetReason", scope: !1, file: !1, line: 1721, type: !129, isLocal: false, isDefinition: true, scopeLine: 1722, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @PyUnicodeTranslateError_GetReason, variables: !623)
!623 = !{!624}
!624 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !622, file: !1, line: 1721, type: !50)
!625 = !DISubprogram(name: "PyUnicodeEncodeError_SetReason", scope: !1, file: !1, line: 1728, type: !626, isLocal: false, isDefinition: true, scopeLine: 1729, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i8*)* @PyUnicodeEncodeError_SetReason, variables: !628)
!626 = !DISubroutineType(types: !627)
!627 = !{!56, !50, !40}
!628 = !{!629, !630}
!629 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !625, file: !1, line: 1728, type: !50)
!630 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "reason", arg: 2, scope: !625, file: !1, line: 1728, type: !40)
!631 = !DISubprogram(name: "PyUnicodeDecodeError_SetReason", scope: !1, file: !1, line: 1736, type: !626, isLocal: false, isDefinition: true, scopeLine: 1737, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i8*)* @PyUnicodeDecodeError_SetReason, variables: !632)
!632 = !{!633, !634}
!633 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !631, file: !1, line: 1736, type: !50)
!634 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "reason", arg: 2, scope: !631, file: !1, line: 1736, type: !40)
!635 = !DISubprogram(name: "PyUnicodeTranslateError_SetReason", scope: !1, file: !1, line: 1744, type: !626, isLocal: false, isDefinition: true, scopeLine: 1745, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i8*)* @PyUnicodeTranslateError_SetReason, variables: !636)
!636 = !{!637, !638}
!637 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !635, file: !1, line: 1744, type: !50)
!638 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "reason", arg: 2, scope: !635, file: !1, line: 1744, type: !40)
!639 = !DISubprogram(name: "PyUnicodeEncodeError_Create", scope: !1, file: !1, line: 1898, type: !640, isLocal: false, isDefinition: true, scopeLine: 1901, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i8*, i32*, i64, i64, i64, i8*)* @PyUnicodeEncodeError_Create, variables: !645)
!640 = !DISubroutineType(types: !641)
!641 = !{!50, !40, !642, !22, !22, !22, !40}
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64, align: 64)
!643 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !644)
!644 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_UNICODE", file: !4, line: 93, baseType: !402)
!645 = !{!646, !647, !648, !649, !650, !651}
!646 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "encoding", arg: 1, scope: !639, file: !1, line: 1899, type: !40)
!647 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "object", arg: 2, scope: !639, file: !1, line: 1899, type: !642)
!648 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "length", arg: 3, scope: !639, file: !1, line: 1899, type: !22)
!649 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 4, scope: !639, file: !1, line: 1900, type: !22)
!650 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 5, scope: !639, file: !1, line: 1900, type: !22)
!651 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "reason", arg: 6, scope: !639, file: !1, line: 1900, type: !40)
!652 = !DISubprogram(name: "PyUnicodeDecodeError_Create", scope: !1, file: !1, line: 2014, type: !653, isLocal: false, isDefinition: true, scopeLine: 2017, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i8*, i8*, i64, i64, i64, i8*)* @PyUnicodeDecodeError_Create, variables: !655)
!653 = !DISubroutineType(types: !654)
!654 = !{!50, !40, !40, !22, !22, !22, !40}
!655 = !{!656, !657, !658, !659, !660, !661}
!656 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "encoding", arg: 1, scope: !652, file: !1, line: 2015, type: !40)
!657 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "object", arg: 2, scope: !652, file: !1, line: 2015, type: !40)
!658 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "length", arg: 3, scope: !652, file: !1, line: 2015, type: !22)
!659 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 4, scope: !652, file: !1, line: 2016, type: !22)
!660 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 5, scope: !652, file: !1, line: 2016, type: !22)
!661 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "reason", arg: 6, scope: !652, file: !1, line: 2016, type: !40)
!662 = !DISubprogram(name: "PyUnicodeTranslateError_Create", scope: !1, file: !1, line: 2114, type: !663, isLocal: false, isDefinition: true, scopeLine: 2117, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i32*, i64, i64, i64, i8*)* @PyUnicodeTranslateError_Create, variables: !665)
!663 = !DISubroutineType(types: !664)
!664 = !{!50, !642, !22, !22, !22, !40}
!665 = !{!666, !667, !668, !669, !670}
!666 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "object", arg: 1, scope: !662, file: !1, line: 2115, type: !642)
!667 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "length", arg: 2, scope: !662, file: !1, line: 2115, type: !22)
!668 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 3, scope: !662, file: !1, line: 2116, type: !22)
!669 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 4, scope: !662, file: !1, line: 2116, type: !22)
!670 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "reason", arg: 5, scope: !662, file: !1, line: 2116, type: !40)
!671 = !DISubprogram(name: "_PyUnicodeTranslateError_Create", scope: !1, file: !1, line: 2123, type: !672, isLocal: false, isDefinition: true, scopeLine: 2126, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, i64, i64, i8*)* @_PyUnicodeTranslateError_Create, variables: !674)
!672 = !DISubroutineType(types: !673)
!673 = !{!50, !50, !22, !22, !40}
!674 = !{!675, !676, !677, !678}
!675 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "object", arg: 1, scope: !671, file: !1, line: 2124, type: !50)
!676 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 2, scope: !671, file: !1, line: 2125, type: !22)
!677 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 3, scope: !671, file: !1, line: 2125, type: !22)
!678 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "reason", arg: 4, scope: !671, file: !1, line: 2125, type: !40)
!679 = !DISubprogram(name: "_PyExc_Init", scope: !1, file: !1, line: 2450, type: !48, isLocal: false, isDefinition: true, scopeLine: 2451, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct._object*)* @_PyExc_Init, variables: !680)
!680 = !{!681, !682, !683, !685, !688, !690, !693, !695, !697, !699, !701, !703, !705, !707, !709, !711, !713, !715, !717, !719, !721, !723, !725, !727, !729, !731, !733, !735, !737, !739, !741, !743, !745, !747, !749, !751, !753, !755, !757, !759, !761, !763, !765, !767, !769, !774, !775, !776, !778}
!681 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "bltinmod", arg: 1, scope: !679, file: !1, line: 2450, type: !50)
!682 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bdict", scope: !679, file: !1, line: 2452, type: !50)
!683 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !684, file: !1, line: 2533, type: !50)
!684 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2533, column: 5)
!685 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !686, file: !1, line: 2533, type: !50)
!686 = distinct !DILexicalBlock(scope: !687, file: !1, line: 2533, column: 5)
!687 = distinct !DILexicalBlock(scope: !684, file: !1, line: 2533, column: 5)
!688 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !689, file: !1, line: 2534, type: !50)
!689 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2534, column: 5)
!690 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !691, file: !1, line: 2534, type: !50)
!691 = distinct !DILexicalBlock(scope: !692, file: !1, line: 2534, column: 5)
!692 = distinct !DILexicalBlock(scope: !689, file: !1, line: 2534, column: 5)
!693 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !694, file: !1, line: 2587, type: !50)
!694 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2587, column: 5)
!695 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !696, file: !1, line: 2587, type: !50)
!696 = distinct !DILexicalBlock(scope: !694, file: !1, line: 2587, column: 5)
!697 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !698, file: !1, line: 2588, type: !50)
!698 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2588, column: 5)
!699 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !700, file: !1, line: 2588, type: !50)
!700 = distinct !DILexicalBlock(scope: !698, file: !1, line: 2588, column: 5)
!701 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !702, file: !1, line: 2589, type: !50)
!702 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2589, column: 5)
!703 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !704, file: !1, line: 2589, type: !50)
!704 = distinct !DILexicalBlock(scope: !702, file: !1, line: 2589, column: 5)
!705 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !706, file: !1, line: 2590, type: !50)
!706 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2590, column: 5)
!707 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !708, file: !1, line: 2590, type: !50)
!708 = distinct !DILexicalBlock(scope: !706, file: !1, line: 2590, column: 5)
!709 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !710, file: !1, line: 2592, type: !50)
!710 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2592, column: 5)
!711 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !712, file: !1, line: 2592, type: !50)
!712 = distinct !DILexicalBlock(scope: !710, file: !1, line: 2592, column: 5)
!713 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !714, file: !1, line: 2593, type: !50)
!714 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2593, column: 5)
!715 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !716, file: !1, line: 2593, type: !50)
!716 = distinct !DILexicalBlock(scope: !714, file: !1, line: 2593, column: 5)
!717 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !718, file: !1, line: 2595, type: !50)
!718 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2595, column: 5)
!719 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !720, file: !1, line: 2595, type: !50)
!720 = distinct !DILexicalBlock(scope: !718, file: !1, line: 2595, column: 5)
!721 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !722, file: !1, line: 2597, type: !50)
!722 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2597, column: 5)
!723 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !724, file: !1, line: 2597, type: !50)
!724 = distinct !DILexicalBlock(scope: !722, file: !1, line: 2597, column: 5)
!725 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !726, file: !1, line: 2599, type: !50)
!726 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2599, column: 5)
!727 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !728, file: !1, line: 2599, type: !50)
!728 = distinct !DILexicalBlock(scope: !726, file: !1, line: 2599, column: 5)
!729 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !730, file: !1, line: 2601, type: !50)
!730 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2601, column: 5)
!731 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !732, file: !1, line: 2601, type: !50)
!732 = distinct !DILexicalBlock(scope: !730, file: !1, line: 2601, column: 5)
!733 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !734, file: !1, line: 2603, type: !50)
!734 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2603, column: 5)
!735 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !736, file: !1, line: 2603, type: !50)
!736 = distinct !DILexicalBlock(scope: !734, file: !1, line: 2603, column: 5)
!737 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !738, file: !1, line: 2605, type: !50)
!738 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2605, column: 5)
!739 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !740, file: !1, line: 2605, type: !50)
!740 = distinct !DILexicalBlock(scope: !738, file: !1, line: 2605, column: 5)
!741 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !742, file: !1, line: 2607, type: !50)
!742 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2607, column: 5)
!743 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !744, file: !1, line: 2607, type: !50)
!744 = distinct !DILexicalBlock(scope: !742, file: !1, line: 2607, column: 5)
!745 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !746, file: !1, line: 2609, type: !50)
!746 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2609, column: 5)
!747 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !748, file: !1, line: 2609, type: !50)
!748 = distinct !DILexicalBlock(scope: !746, file: !1, line: 2609, column: 5)
!749 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !750, file: !1, line: 2611, type: !50)
!750 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2611, column: 5)
!751 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !752, file: !1, line: 2611, type: !50)
!752 = distinct !DILexicalBlock(scope: !750, file: !1, line: 2611, column: 5)
!753 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !754, file: !1, line: 2613, type: !50)
!754 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2613, column: 5)
!755 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !756, file: !1, line: 2613, type: !50)
!756 = distinct !DILexicalBlock(scope: !754, file: !1, line: 2613, column: 5)
!757 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !758, file: !1, line: 2614, type: !50)
!758 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2614, column: 5)
!759 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !760, file: !1, line: 2614, type: !50)
!760 = distinct !DILexicalBlock(scope: !758, file: !1, line: 2614, column: 5)
!761 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !762, file: !1, line: 2616, type: !50)
!762 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2616, column: 5)
!763 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !764, file: !1, line: 2616, type: !50)
!764 = distinct !DILexicalBlock(scope: !762, file: !1, line: 2616, column: 5)
!765 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !766, file: !1, line: 2618, type: !50)
!766 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2618, column: 5)
!767 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !768, file: !1, line: 2618, type: !50)
!768 = distinct !DILexicalBlock(scope: !766, file: !1, line: 2618, column: 5)
!769 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "err_inst", scope: !770, file: !1, line: 2628, type: !11)
!770 = distinct !DILexicalBlock(scope: !771, file: !1, line: 2627, column: 14)
!771 = distinct !DILexicalBlock(scope: !772, file: !1, line: 2624, column: 13)
!772 = distinct !DILexicalBlock(scope: !773, file: !1, line: 2622, column: 36)
!773 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2622, column: 9)
!774 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "args_tuple", scope: !770, file: !1, line: 2630, type: !50)
!775 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "exc_message", scope: !770, file: !1, line: 2631, type: !50)
!776 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !777, file: !1, line: 2640, type: !50)
!777 = distinct !DILexicalBlock(scope: !770, file: !1, line: 2640, column: 13)
!778 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !779, file: !1, line: 2643, type: !50)
!779 = distinct !DILexicalBlock(scope: !770, file: !1, line: 2643, column: 13)
!780 = !DISubprogram(name: "_PyExc_Fini", scope: !1, file: !1, line: 2649, type: !781, isLocal: false, isDefinition: true, scopeLine: 2650, flags: DIFlagPrototyped, isOptimized: true, function: void ()* @_PyExc_Fini, variables: !783)
!781 = !DISubroutineType(types: !782)
!782 = !{null}
!783 = !{!784, !786, !790, !792}
!784 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !785, file: !1, line: 2651, type: !50)
!785 = distinct !DILexicalBlock(scope: !780, file: !1, line: 2651, column: 5)
!786 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !787, file: !1, line: 2651, type: !50)
!787 = distinct !DILexicalBlock(scope: !788, file: !1, line: 2651, column: 5)
!788 = distinct !DILexicalBlock(scope: !789, file: !1, line: 2651, column: 5)
!789 = distinct !DILexicalBlock(scope: !785, file: !1, line: 2651, column: 5)
!790 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !791, file: !1, line: 2653, type: !50)
!791 = distinct !DILexicalBlock(scope: !780, file: !1, line: 2653, column: 5)
!792 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !793, file: !1, line: 2653, type: !50)
!793 = distinct !DILexicalBlock(scope: !794, file: !1, line: 2653, column: 5)
!794 = distinct !DILexicalBlock(scope: !795, file: !1, line: 2653, column: 5)
!795 = distinct !DILexicalBlock(scope: !791, file: !1, line: 2653, column: 5)
!796 = !DISubprogram(name: "_PyErr_TrySetFromCause", scope: !1, file: !1, line: 2685, type: !797, isLocal: false, isDefinition: true, scopeLine: 2686, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i8*, ...)* @_PyErr_TrySetFromCause, variables: !799)
!797 = !DISubroutineType(types: !798)
!798 = !{!50, !40, null}
!799 = !{!800, !801, !802, !803, !804, !805, !806, !808, !809, !810, !811, !812, !813, !814, !815, !828, !829, !833, !837, !839, !841}
!800 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "format", arg: 1, scope: !796, file: !1, line: 2685, type: !40)
!801 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "msg_prefix", scope: !796, file: !1, line: 2687, type: !50)
!802 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "exc", scope: !796, file: !1, line: 2688, type: !50)
!803 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val", scope: !796, file: !1, line: 2688, type: !50)
!804 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tb", scope: !796, file: !1, line: 2688, type: !50)
!805 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "caught_type", scope: !796, file: !1, line: 2689, type: !404)
!806 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dictptr", scope: !796, file: !1, line: 2690, type: !807)
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !50, size: 64, align: 64)
!808 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "instance_args", scope: !796, file: !1, line: 2691, type: !50)
!809 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "num_args", scope: !796, file: !1, line: 2692, type: !22)
!810 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "caught_type_size", scope: !796, file: !1, line: 2692, type: !22)
!811 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "base_exc_size", scope: !796, file: !1, line: 2692, type: !22)
!812 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "new_exc", scope: !796, file: !1, line: 2693, type: !50)
!813 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "new_val", scope: !796, file: !1, line: 2693, type: !50)
!814 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "new_tb", scope: !796, file: !1, line: 2693, type: !50)
!815 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vargs", scope: !796, file: !1, line: 2694, type: !816)
!816 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !25, line: 79, baseType: !817)
!817 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !818, line: 50, baseType: !819)
!818 = !DIFile(filename: "/home/juneyoung.lee/llvm-install-3.7.0/bin/../lib/clang/3.7.0/include/stdarg.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!819 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1, line: 2694, baseType: !820)
!820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !821, size: 192, align: 64, elements: !94)
!821 = !DIDerivedType(tag: DW_TAG_typedef, name: "__va_list_tag", file: !1, line: 2694, baseType: !822)
!822 = !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1, line: 2694, size: 192, align: 64, elements: !823)
!823 = !{!824, !825, !826, !827}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !822, file: !1, line: 2694, baseType: !361, size: 32, align: 32)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !822, file: !1, line: 2694, baseType: !361, size: 32, align: 32, offset: 32)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !822, file: !1, line: 2694, baseType: !102, size: 64, align: 64, offset: 64)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !822, file: !1, line: 2694, baseType: !102, size: 64, align: 64, offset: 128)
!828 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "same_basic_size", scope: !796, file: !1, line: 2695, type: !56)
!829 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !830, file: !1, line: 2760, type: !50)
!830 = distinct !DILexicalBlock(scope: !831, file: !1, line: 2760, column: 9)
!831 = distinct !DILexicalBlock(scope: !832, file: !1, line: 2758, column: 21)
!832 = distinct !DILexicalBlock(scope: !796, file: !1, line: 2758, column: 9)
!833 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !834, file: !1, line: 2771, type: !50)
!834 = distinct !DILexicalBlock(scope: !835, file: !1, line: 2771, column: 9)
!835 = distinct !DILexicalBlock(scope: !836, file: !1, line: 2770, column: 29)
!836 = distinct !DILexicalBlock(scope: !796, file: !1, line: 2770, column: 9)
!837 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !838, file: !1, line: 2772, type: !50)
!838 = distinct !DILexicalBlock(scope: !835, file: !1, line: 2772, column: 9)
!839 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !840, file: !1, line: 2778, type: !50)
!840 = distinct !DILexicalBlock(scope: !796, file: !1, line: 2778, column: 5)
!841 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !842, file: !1, line: 2779, type: !50)
!842 = distinct !DILexicalBlock(scope: !796, file: !1, line: 2779, column: 5)
!843 = !DISubprogram(name: "BaseException_set_tb", scope: !1, file: !1, line: 226, type: !844, isLocal: true, isDefinition: true, scopeLine: 227, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyBaseExceptionObject*, %struct._object*)* @BaseException_set_tb, variables: !846)
!844 = !DISubroutineType(types: !845)
!845 = !{!56, !11, !50}
!846 = !{!847, !848, !849, !851, !853}
!847 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !843, file: !1, line: 226, type: !11)
!848 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tb", arg: 2, scope: !843, file: !1, line: 226, type: !50)
!849 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xincref_tmp", scope: !850, file: !1, line: 238, type: !50)
!850 = distinct !DILexicalBlock(scope: !843, file: !1, line: 238, column: 5)
!851 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !852, file: !1, line: 239, type: !50)
!852 = distinct !DILexicalBlock(scope: !843, file: !1, line: 239, column: 5)
!853 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !854, file: !1, line: 239, type: !50)
!854 = distinct !DILexicalBlock(scope: !855, file: !1, line: 239, column: 5)
!855 = distinct !DILexicalBlock(scope: !852, file: !1, line: 239, column: 5)
!856 = !DISubprogram(name: "BaseException_dealloc", scope: !1, file: !1, line: 87, type: !857, isLocal: true, isDefinition: true, scopeLine: 88, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc, variables: !859)
!857 = !DISubroutineType(types: !858)
!858 = !{null, !11}
!859 = !{!860, !861}
!860 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !856, file: !1, line: 87, type: !11)
!861 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "g", scope: !862, file: !1, line: 89, type: !414)
!862 = distinct !DILexicalBlock(scope: !856, file: !1, line: 89, column: 5)
!863 = !DISubprogram(name: "BaseException_repr", scope: !1, file: !1, line: 119, type: !864, isLocal: true, isDefinition: true, scopeLine: 120, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyBaseExceptionObject*)* @BaseException_repr, variables: !866)
!864 = !DISubroutineType(types: !865)
!865 = !{!50, !11}
!866 = !{!867, !868, !869}
!867 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !863, file: !1, line: 119, type: !11)
!868 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !863, file: !1, line: 121, type: !40)
!869 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dot", scope: !863, file: !1, line: 122, type: !40)
!870 = !DISubprogram(name: "BaseException_str", scope: !1, file: !1, line: 106, type: !864, isLocal: true, isDefinition: true, scopeLine: 107, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyBaseExceptionObject*)* @BaseException_str, variables: !871)
!871 = !{!872}
!872 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !870, file: !1, line: 106, type: !11)
!873 = !DISubprogram(name: "BaseException_traverse", scope: !1, file: !1, line: 95, type: !874, isLocal: true, isDefinition: true, scopeLine: 96, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse, variables: !876)
!874 = !DISubroutineType(types: !875)
!875 = !{!56, !11, !276, !102}
!876 = !{!877, !878, !879, !880, !884, !888, !892, !896}
!877 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !873, file: !1, line: 95, type: !11)
!878 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !873, file: !1, line: 95, type: !276)
!879 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !873, file: !1, line: 95, type: !102)
!880 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !881, file: !1, line: 97, type: !56)
!881 = distinct !DILexicalBlock(scope: !882, file: !1, line: 97, column: 5)
!882 = distinct !DILexicalBlock(scope: !883, file: !1, line: 97, column: 5)
!883 = distinct !DILexicalBlock(scope: !873, file: !1, line: 97, column: 5)
!884 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !885, file: !1, line: 98, type: !56)
!885 = distinct !DILexicalBlock(scope: !886, file: !1, line: 98, column: 5)
!886 = distinct !DILexicalBlock(scope: !887, file: !1, line: 98, column: 5)
!887 = distinct !DILexicalBlock(scope: !873, file: !1, line: 98, column: 5)
!888 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !889, file: !1, line: 99, type: !56)
!889 = distinct !DILexicalBlock(scope: !890, file: !1, line: 99, column: 5)
!890 = distinct !DILexicalBlock(scope: !891, file: !1, line: 99, column: 5)
!891 = distinct !DILexicalBlock(scope: !873, file: !1, line: 99, column: 5)
!892 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !893, file: !1, line: 100, type: !56)
!893 = distinct !DILexicalBlock(scope: !894, file: !1, line: 100, column: 5)
!894 = distinct !DILexicalBlock(scope: !895, file: !1, line: 100, column: 5)
!895 = distinct !DILexicalBlock(scope: !873, file: !1, line: 100, column: 5)
!896 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !897, file: !1, line: 101, type: !56)
!897 = distinct !DILexicalBlock(scope: !898, file: !1, line: 101, column: 5)
!898 = distinct !DILexicalBlock(scope: !899, file: !1, line: 101, column: 5)
!899 = distinct !DILexicalBlock(scope: !873, file: !1, line: 101, column: 5)
!900 = !DISubprogram(name: "BaseException_clear", scope: !1, file: !1, line: 76, type: !901, isLocal: true, isDefinition: true, scopeLine: 77, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear, variables: !903)
!901 = !DISubroutineType(types: !902)
!902 = !{!56, !11}
!903 = !{!904, !905, !907, !911, !913, !917, !919, !923, !925, !929, !931}
!904 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !900, file: !1, line: 76, type: !11)
!905 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !906, file: !1, line: 78, type: !50)
!906 = distinct !DILexicalBlock(scope: !900, file: !1, line: 78, column: 5)
!907 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !908, file: !1, line: 78, type: !50)
!908 = distinct !DILexicalBlock(scope: !909, file: !1, line: 78, column: 5)
!909 = distinct !DILexicalBlock(scope: !910, file: !1, line: 78, column: 5)
!910 = distinct !DILexicalBlock(scope: !906, file: !1, line: 78, column: 5)
!911 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !912, file: !1, line: 79, type: !50)
!912 = distinct !DILexicalBlock(scope: !900, file: !1, line: 79, column: 5)
!913 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !914, file: !1, line: 79, type: !50)
!914 = distinct !DILexicalBlock(scope: !915, file: !1, line: 79, column: 5)
!915 = distinct !DILexicalBlock(scope: !916, file: !1, line: 79, column: 5)
!916 = distinct !DILexicalBlock(scope: !912, file: !1, line: 79, column: 5)
!917 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !918, file: !1, line: 80, type: !50)
!918 = distinct !DILexicalBlock(scope: !900, file: !1, line: 80, column: 5)
!919 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !920, file: !1, line: 80, type: !50)
!920 = distinct !DILexicalBlock(scope: !921, file: !1, line: 80, column: 5)
!921 = distinct !DILexicalBlock(scope: !922, file: !1, line: 80, column: 5)
!922 = distinct !DILexicalBlock(scope: !918, file: !1, line: 80, column: 5)
!923 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !924, file: !1, line: 81, type: !50)
!924 = distinct !DILexicalBlock(scope: !900, file: !1, line: 81, column: 5)
!925 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !926, file: !1, line: 81, type: !50)
!926 = distinct !DILexicalBlock(scope: !927, file: !1, line: 81, column: 5)
!927 = distinct !DILexicalBlock(scope: !928, file: !1, line: 81, column: 5)
!928 = distinct !DILexicalBlock(scope: !924, file: !1, line: 81, column: 5)
!929 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !930, file: !1, line: 82, type: !50)
!930 = distinct !DILexicalBlock(scope: !900, file: !1, line: 82, column: 5)
!931 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !932, file: !1, line: 82, type: !50)
!932 = distinct !DILexicalBlock(scope: !933, file: !1, line: 82, column: 5)
!933 = distinct !DILexicalBlock(scope: !934, file: !1, line: 82, column: 5)
!934 = distinct !DILexicalBlock(scope: !930, file: !1, line: 82, column: 5)
!935 = !DISubprogram(name: "BaseException_reduce", scope: !1, file: !1, line: 133, type: !864, isLocal: true, isDefinition: true, scopeLine: 134, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyBaseExceptionObject*)* @BaseException_reduce, variables: !936)
!936 = !{!937}
!937 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !935, file: !1, line: 133, type: !11)
!938 = !DISubprogram(name: "BaseException_setstate", scope: !1, file: !1, line: 147, type: !139, isLocal: true, isDefinition: true, scopeLine: 148, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @BaseException_setstate, variables: !939)
!939 = !{!940, !941, !942, !943, !944}
!940 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !938, file: !1, line: 147, type: !50)
!941 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 2, scope: !938, file: !1, line: 147, type: !50)
!942 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "d_key", scope: !938, file: !1, line: 149, type: !50)
!943 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "d_value", scope: !938, file: !1, line: 149, type: !50)
!944 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !938, file: !1, line: 150, type: !22)
!945 = !DISubprogram(name: "BaseException_with_traceback", scope: !1, file: !1, line: 166, type: !139, isLocal: true, isDefinition: true, scopeLine: 166, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @BaseException_with_traceback, variables: !946)
!946 = !{!947, !948}
!947 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !945, file: !1, line: 166, type: !50)
!948 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tb", arg: 2, scope: !945, file: !1, line: 166, type: !50)
!949 = !DISubprogram(name: "BaseException_get_args", scope: !1, file: !1, line: 188, type: !864, isLocal: true, isDefinition: true, scopeLine: 189, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyBaseExceptionObject*)* @BaseException_get_args, variables: !950)
!950 = !{!951}
!951 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !949, file: !1, line: 188, type: !11)
!952 = !DISubprogram(name: "BaseException_set_args", scope: !1, file: !1, line: 199, type: !844, isLocal: true, isDefinition: true, scopeLine: 200, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyBaseExceptionObject*, %struct._object*)* @BaseException_set_args, variables: !953)
!953 = !{!954, !955, !956, !957, !959}
!954 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !952, file: !1, line: 199, type: !11)
!955 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "val", arg: 2, scope: !952, file: !1, line: 199, type: !50)
!956 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seq", scope: !952, file: !1, line: 201, type: !50)
!957 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !958, file: !1, line: 209, type: !50)
!958 = distinct !DILexicalBlock(scope: !952, file: !1, line: 209, column: 5)
!959 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !960, file: !1, line: 209, type: !50)
!960 = distinct !DILexicalBlock(scope: !961, file: !1, line: 209, column: 5)
!961 = distinct !DILexicalBlock(scope: !962, file: !1, line: 209, column: 5)
!962 = distinct !DILexicalBlock(scope: !958, file: !1, line: 209, column: 5)
!963 = !DISubprogram(name: "BaseException_get_tb", scope: !1, file: !1, line: 215, type: !864, isLocal: true, isDefinition: true, scopeLine: 216, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyBaseExceptionObject*)* @BaseException_get_tb, variables: !964)
!964 = !{!965}
!965 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !963, file: !1, line: 215, type: !11)
!966 = !DISubprogram(name: "BaseException_get_context", scope: !1, file: !1, line: 245, type: !129, isLocal: true, isDefinition: true, scopeLine: 245, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @BaseException_get_context, variables: !967)
!967 = !{!968, !969}
!968 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !966, file: !1, line: 245, type: !50)
!969 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !966, file: !1, line: 246, type: !50)
!970 = !DISubprogram(name: "BaseException_set_context", scope: !1, file: !1, line: 253, type: !210, isLocal: true, isDefinition: true, scopeLine: 253, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, %struct._object*)* @BaseException_set_context, variables: !971)
!971 = !{!972, !973}
!972 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !970, file: !1, line: 253, type: !50)
!973 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !970, file: !1, line: 253, type: !50)
!974 = !DISubprogram(name: "BaseException_get_cause", scope: !1, file: !1, line: 272, type: !129, isLocal: true, isDefinition: true, scopeLine: 272, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @BaseException_get_cause, variables: !975)
!975 = !{!976, !977}
!976 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !974, file: !1, line: 272, type: !50)
!977 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !974, file: !1, line: 273, type: !50)
!978 = !DISubprogram(name: "BaseException_set_cause", scope: !1, file: !1, line: 280, type: !210, isLocal: true, isDefinition: true, scopeLine: 280, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, %struct._object*)* @BaseException_set_cause, variables: !979)
!979 = !{!980, !981}
!980 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !978, file: !1, line: 280, type: !50)
!981 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !978, file: !1, line: 280, type: !50)
!982 = !DISubprogram(name: "StopIteration_dealloc", scope: !1, file: !1, line: 511, type: !983, isLocal: true, isDefinition: true, scopeLine: 512, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.PyStopIterationObject*)* @StopIteration_dealloc, variables: !997)
!983 = !DISubroutineType(types: !984)
!984 = !{null, !985}
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64, align: 64)
!986 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyStopIterationObject", file: !13, line: 66, baseType: !987)
!987 = !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 63, size: 576, align: 64, elements: !988)
!988 = !{!989, !990, !991, !992, !993, !994, !995, !996}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !987, file: !13, line: 64, baseType: !17, size: 128, align: 64)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !987, file: !13, line: 64, baseType: !50, size: 64, align: 64, offset: 128)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !987, file: !13, line: 64, baseType: !50, size: 64, align: 64, offset: 192)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "traceback", scope: !987, file: !13, line: 64, baseType: !50, size: 64, align: 64, offset: 256)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !987, file: !13, line: 64, baseType: !50, size: 64, align: 64, offset: 320)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "cause", scope: !987, file: !13, line: 64, baseType: !50, size: 64, align: 64, offset: 384)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_context", scope: !987, file: !13, line: 64, baseType: !42, size: 8, align: 8, offset: 448)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !987, file: !13, line: 65, baseType: !50, size: 64, align: 64, offset: 512)
!997 = !{!998, !999}
!998 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !982, file: !1, line: 511, type: !985)
!999 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "g", scope: !1000, file: !1, line: 513, type: !414)
!1000 = distinct !DILexicalBlock(scope: !982, file: !1, line: 513, column: 5)
!1001 = !DISubprogram(name: "StopIteration_traverse", scope: !1, file: !1, line: 519, type: !1002, isLocal: true, isDefinition: true, scopeLine: 520, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyStopIterationObject*, i32 (%struct._object*, i8*)*, i8*)* @StopIteration_traverse, variables: !1004)
!1002 = !DISubroutineType(types: !1003)
!1003 = !{!56, !985, !276, !102}
!1004 = !{!1005, !1006, !1007, !1008}
!1005 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1001, file: !1, line: 519, type: !985)
!1006 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1001, file: !1, line: 519, type: !276)
!1007 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1001, file: !1, line: 519, type: !102)
!1008 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1009, file: !1, line: 521, type: !56)
!1009 = distinct !DILexicalBlock(scope: !1010, file: !1, line: 521, column: 5)
!1010 = distinct !DILexicalBlock(scope: !1011, file: !1, line: 521, column: 5)
!1011 = distinct !DILexicalBlock(scope: !1001, file: !1, line: 521, column: 5)
!1012 = !DISubprogram(name: "StopIteration_clear", scope: !1, file: !1, line: 504, type: !1013, isLocal: true, isDefinition: true, scopeLine: 505, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyStopIterationObject*)* @StopIteration_clear, variables: !1015)
!1013 = !DISubroutineType(types: !1014)
!1014 = !{!56, !985}
!1015 = !{!1016, !1017, !1019}
!1016 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1012, file: !1, line: 504, type: !985)
!1017 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1018, file: !1, line: 506, type: !50)
!1018 = distinct !DILexicalBlock(scope: !1012, file: !1, line: 506, column: 5)
!1019 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1020, file: !1, line: 506, type: !50)
!1020 = distinct !DILexicalBlock(scope: !1021, file: !1, line: 506, column: 5)
!1021 = distinct !DILexicalBlock(scope: !1022, file: !1, line: 506, column: 5)
!1022 = distinct !DILexicalBlock(scope: !1018, file: !1, line: 506, column: 5)
!1023 = !DISubprogram(name: "StopIteration_init", scope: !1, file: !1, line: 486, type: !1024, isLocal: true, isDefinition: true, scopeLine: 487, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyStopIterationObject*, %struct._object*, %struct._object*)* @StopIteration_init, variables: !1026)
!1024 = !DISubroutineType(types: !1025)
!1025 = !{!56, !985, !50, !50}
!1026 = !{!1027, !1028, !1029, !1030, !1031, !1032, !1034}
!1027 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1023, file: !1, line: 486, type: !985)
!1028 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1023, file: !1, line: 486, type: !50)
!1029 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1023, file: !1, line: 486, type: !50)
!1030 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !1023, file: !1, line: 488, type: !22)
!1031 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !1023, file: !1, line: 489, type: !50)
!1032 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1033, file: !1, line: 493, type: !50)
!1033 = distinct !DILexicalBlock(scope: !1023, file: !1, line: 493, column: 5)
!1034 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1035, file: !1, line: 493, type: !50)
!1035 = distinct !DILexicalBlock(scope: !1036, file: !1, line: 493, column: 5)
!1036 = distinct !DILexicalBlock(scope: !1037, file: !1, line: 493, column: 5)
!1037 = distinct !DILexicalBlock(scope: !1033, file: !1, line: 493, column: 5)
!1038 = !DISubprogram(name: "SystemExit_dealloc", scope: !1, file: !1, line: 576, type: !1039, isLocal: true, isDefinition: true, scopeLine: 577, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.PySystemExitObject*)* @SystemExit_dealloc, variables: !1053)
!1039 = !DISubroutineType(types: !1040)
!1040 = !{null, !1041}
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64, align: 64)
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "PySystemExitObject", file: !13, line: 49, baseType: !1043)
!1043 = !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 46, size: 576, align: 64, elements: !1044)
!1044 = !{!1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052}
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !1043, file: !13, line: 47, baseType: !17, size: 128, align: 64)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !1043, file: !13, line: 47, baseType: !50, size: 64, align: 64, offset: 128)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1043, file: !13, line: 47, baseType: !50, size: 64, align: 64, offset: 192)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "traceback", scope: !1043, file: !13, line: 47, baseType: !50, size: 64, align: 64, offset: 256)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1043, file: !13, line: 47, baseType: !50, size: 64, align: 64, offset: 320)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "cause", scope: !1043, file: !13, line: 47, baseType: !50, size: 64, align: 64, offset: 384)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_context", scope: !1043, file: !13, line: 47, baseType: !42, size: 8, align: 8, offset: 448)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1043, file: !13, line: 48, baseType: !50, size: 64, align: 64, offset: 512)
!1053 = !{!1054, !1055}
!1054 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1038, file: !1, line: 576, type: !1041)
!1055 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "g", scope: !1056, file: !1, line: 578, type: !414)
!1056 = distinct !DILexicalBlock(scope: !1038, file: !1, line: 578, column: 5)
!1057 = !DISubprogram(name: "SystemExit_traverse", scope: !1, file: !1, line: 584, type: !1058, isLocal: true, isDefinition: true, scopeLine: 585, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PySystemExitObject*, i32 (%struct._object*, i8*)*, i8*)* @SystemExit_traverse, variables: !1060)
!1058 = !DISubroutineType(types: !1059)
!1059 = !{!56, !1041, !276, !102}
!1060 = !{!1061, !1062, !1063, !1064}
!1061 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1057, file: !1, line: 584, type: !1041)
!1062 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1057, file: !1, line: 584, type: !276)
!1063 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1057, file: !1, line: 584, type: !102)
!1064 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1065, file: !1, line: 586, type: !56)
!1065 = distinct !DILexicalBlock(scope: !1066, file: !1, line: 586, column: 5)
!1066 = distinct !DILexicalBlock(scope: !1067, file: !1, line: 586, column: 5)
!1067 = distinct !DILexicalBlock(scope: !1057, file: !1, line: 586, column: 5)
!1068 = !DISubprogram(name: "SystemExit_clear", scope: !1, file: !1, line: 569, type: !1069, isLocal: true, isDefinition: true, scopeLine: 570, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PySystemExitObject*)* @SystemExit_clear, variables: !1071)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{!56, !1041}
!1071 = !{!1072, !1073, !1075}
!1072 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1068, file: !1, line: 569, type: !1041)
!1073 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1074, file: !1, line: 571, type: !50)
!1074 = distinct !DILexicalBlock(scope: !1068, file: !1, line: 571, column: 5)
!1075 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1076, file: !1, line: 571, type: !50)
!1076 = distinct !DILexicalBlock(scope: !1077, file: !1, line: 571, column: 5)
!1077 = distinct !DILexicalBlock(scope: !1078, file: !1, line: 571, column: 5)
!1078 = distinct !DILexicalBlock(scope: !1074, file: !1, line: 571, column: 5)
!1079 = !DISubprogram(name: "SystemExit_init", scope: !1, file: !1, line: 550, type: !1080, isLocal: true, isDefinition: true, scopeLine: 551, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PySystemExitObject*, %struct._object*, %struct._object*)* @SystemExit_init, variables: !1082)
!1080 = !DISubroutineType(types: !1081)
!1081 = !{!56, !1041, !50, !50}
!1082 = !{!1083, !1084, !1085, !1086, !1087, !1089}
!1083 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1079, file: !1, line: 550, type: !1041)
!1084 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1079, file: !1, line: 550, type: !50)
!1085 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1079, file: !1, line: 550, type: !50)
!1086 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !1079, file: !1, line: 552, type: !22)
!1087 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1088, file: !1, line: 559, type: !50)
!1088 = distinct !DILexicalBlock(scope: !1079, file: !1, line: 559, column: 5)
!1089 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1090, file: !1, line: 559, type: !50)
!1090 = distinct !DILexicalBlock(scope: !1091, file: !1, line: 559, column: 5)
!1091 = distinct !DILexicalBlock(scope: !1092, file: !1, line: 559, column: 5)
!1092 = distinct !DILexicalBlock(scope: !1088, file: !1, line: 559, column: 5)
!1093 = !DISubprogram(name: "ImportError_dealloc", scope: !1, file: !1, line: 660, type: !1094, isLocal: true, isDefinition: true, scopeLine: 661, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.PyImportErrorObject*)* @ImportError_dealloc, variables: !1110)
!1094 = !DISubroutineType(types: !1095)
!1095 = !{null, !1096}
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64, align: 64)
!1097 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyImportErrorObject", file: !13, line: 35, baseType: !1098)
!1098 = !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 30, size: 704, align: 64, elements: !1099)
!1099 = !{!1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !1098, file: !13, line: 31, baseType: !17, size: 128, align: 64)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !1098, file: !13, line: 31, baseType: !50, size: 64, align: 64, offset: 128)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1098, file: !13, line: 31, baseType: !50, size: 64, align: 64, offset: 192)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "traceback", scope: !1098, file: !13, line: 31, baseType: !50, size: 64, align: 64, offset: 256)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1098, file: !13, line: 31, baseType: !50, size: 64, align: 64, offset: 320)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "cause", scope: !1098, file: !13, line: 31, baseType: !50, size: 64, align: 64, offset: 384)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_context", scope: !1098, file: !13, line: 31, baseType: !42, size: 8, align: 8, offset: 448)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !1098, file: !13, line: 32, baseType: !50, size: 64, align: 64, offset: 512)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1098, file: !13, line: 33, baseType: !50, size: 64, align: 64, offset: 576)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !1098, file: !13, line: 34, baseType: !50, size: 64, align: 64, offset: 640)
!1110 = !{!1111, !1112}
!1111 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1093, file: !1, line: 660, type: !1096)
!1112 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "g", scope: !1113, file: !1, line: 662, type: !414)
!1113 = distinct !DILexicalBlock(scope: !1093, file: !1, line: 662, column: 5)
!1114 = !DISubprogram(name: "ImportError_str", scope: !1, file: !1, line: 677, type: !1115, isLocal: true, isDefinition: true, scopeLine: 678, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyImportErrorObject*)* @ImportError_str, variables: !1117)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{!50, !1096}
!1117 = !{!1118}
!1118 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1114, file: !1, line: 677, type: !1096)
!1119 = !DISubprogram(name: "ImportError_traverse", scope: !1, file: !1, line: 668, type: !1120, isLocal: true, isDefinition: true, scopeLine: 669, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyImportErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @ImportError_traverse, variables: !1122)
!1120 = !DISubroutineType(types: !1121)
!1121 = !{!56, !1096, !276, !102}
!1122 = !{!1123, !1124, !1125, !1126, !1130, !1134}
!1123 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1119, file: !1, line: 668, type: !1096)
!1124 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1119, file: !1, line: 668, type: !276)
!1125 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1119, file: !1, line: 668, type: !102)
!1126 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1127, file: !1, line: 670, type: !56)
!1127 = distinct !DILexicalBlock(scope: !1128, file: !1, line: 670, column: 5)
!1128 = distinct !DILexicalBlock(scope: !1129, file: !1, line: 670, column: 5)
!1129 = distinct !DILexicalBlock(scope: !1119, file: !1, line: 670, column: 5)
!1130 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1131, file: !1, line: 671, type: !56)
!1131 = distinct !DILexicalBlock(scope: !1132, file: !1, line: 671, column: 5)
!1132 = distinct !DILexicalBlock(scope: !1133, file: !1, line: 671, column: 5)
!1133 = distinct !DILexicalBlock(scope: !1119, file: !1, line: 671, column: 5)
!1134 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1135, file: !1, line: 672, type: !56)
!1135 = distinct !DILexicalBlock(scope: !1136, file: !1, line: 672, column: 5)
!1136 = distinct !DILexicalBlock(scope: !1137, file: !1, line: 672, column: 5)
!1137 = distinct !DILexicalBlock(scope: !1119, file: !1, line: 672, column: 5)
!1138 = !DISubprogram(name: "ImportError_clear", scope: !1, file: !1, line: 651, type: !1139, isLocal: true, isDefinition: true, scopeLine: 652, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyImportErrorObject*)* @ImportError_clear, variables: !1141)
!1139 = !DISubroutineType(types: !1140)
!1140 = !{!56, !1096}
!1141 = !{!1142, !1143, !1145, !1149, !1151, !1155, !1157}
!1142 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1138, file: !1, line: 651, type: !1096)
!1143 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1144, file: !1, line: 653, type: !50)
!1144 = distinct !DILexicalBlock(scope: !1138, file: !1, line: 653, column: 5)
!1145 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1146, file: !1, line: 653, type: !50)
!1146 = distinct !DILexicalBlock(scope: !1147, file: !1, line: 653, column: 5)
!1147 = distinct !DILexicalBlock(scope: !1148, file: !1, line: 653, column: 5)
!1148 = distinct !DILexicalBlock(scope: !1144, file: !1, line: 653, column: 5)
!1149 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1150, file: !1, line: 654, type: !50)
!1150 = distinct !DILexicalBlock(scope: !1138, file: !1, line: 654, column: 5)
!1151 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1152, file: !1, line: 654, type: !50)
!1152 = distinct !DILexicalBlock(scope: !1153, file: !1, line: 654, column: 5)
!1153 = distinct !DILexicalBlock(scope: !1154, file: !1, line: 654, column: 5)
!1154 = distinct !DILexicalBlock(scope: !1150, file: !1, line: 654, column: 5)
!1155 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1156, file: !1, line: 655, type: !50)
!1156 = distinct !DILexicalBlock(scope: !1138, file: !1, line: 655, column: 5)
!1157 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1158, file: !1, line: 655, type: !50)
!1158 = distinct !DILexicalBlock(scope: !1159, file: !1, line: 655, column: 5)
!1159 = distinct !DILexicalBlock(scope: !1160, file: !1, line: 655, column: 5)
!1160 = distinct !DILexicalBlock(scope: !1156, file: !1, line: 655, column: 5)
!1161 = !DISubprogram(name: "ImportError_init", scope: !1, file: !1, line: 612, type: !1162, isLocal: true, isDefinition: true, scopeLine: 613, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyImportErrorObject*, %struct._object*, %struct._object*)* @ImportError_init, variables: !1164)
!1162 = !DISubroutineType(types: !1163)
!1163 = !{!56, !1096, !50, !50}
!1164 = !{!1165, !1166, !1167, !1168, !1169, !1170, !1171, !1178, !1182, !1187, !1191, !1193}
!1165 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1161, file: !1, line: 612, type: !1096)
!1166 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1161, file: !1, line: 612, type: !50)
!1167 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1161, file: !1, line: 612, type: !50)
!1168 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "msg", scope: !1161, file: !1, line: 614, type: !50)
!1169 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !1161, file: !1, line: 615, type: !50)
!1170 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "path", scope: !1161, file: !1, line: 616, type: !50)
!1171 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1172, file: !1, line: 632, type: !50)
!1172 = distinct !DILexicalBlock(scope: !1173, file: !1, line: 632, column: 9)
!1173 = distinct !DILexicalBlock(scope: !1174, file: !1, line: 632, column: 9)
!1174 = distinct !DILexicalBlock(scope: !1175, file: !1, line: 632, column: 9)
!1175 = distinct !DILexicalBlock(scope: !1176, file: !1, line: 632, column: 9)
!1176 = distinct !DILexicalBlock(scope: !1177, file: !1, line: 631, column: 15)
!1177 = distinct !DILexicalBlock(scope: !1161, file: !1, line: 631, column: 9)
!1178 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1179, file: !1, line: 632, type: !50)
!1179 = distinct !DILexicalBlock(scope: !1180, file: !1, line: 632, column: 9)
!1180 = distinct !DILexicalBlock(scope: !1181, file: !1, line: 632, column: 9)
!1181 = distinct !DILexicalBlock(scope: !1172, file: !1, line: 632, column: 9)
!1182 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1183, file: !1, line: 633, type: !50)
!1183 = distinct !DILexicalBlock(scope: !1184, file: !1, line: 633, column: 9)
!1184 = distinct !DILexicalBlock(scope: !1185, file: !1, line: 633, column: 9)
!1185 = distinct !DILexicalBlock(scope: !1186, file: !1, line: 633, column: 9)
!1186 = distinct !DILexicalBlock(scope: !1176, file: !1, line: 633, column: 9)
!1187 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1188, file: !1, line: 633, type: !50)
!1188 = distinct !DILexicalBlock(scope: !1189, file: !1, line: 633, column: 9)
!1189 = distinct !DILexicalBlock(scope: !1190, file: !1, line: 633, column: 9)
!1190 = distinct !DILexicalBlock(scope: !1183, file: !1, line: 633, column: 9)
!1191 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1192, file: !1, line: 643, type: !50)
!1192 = distinct !DILexicalBlock(scope: !1161, file: !1, line: 643, column: 5)
!1193 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1194, file: !1, line: 643, type: !50)
!1194 = distinct !DILexicalBlock(scope: !1195, file: !1, line: 643, column: 5)
!1195 = distinct !DILexicalBlock(scope: !1196, file: !1, line: 643, column: 5)
!1196 = distinct !DILexicalBlock(scope: !1192, file: !1, line: 643, column: 5)
!1197 = !DISubprogram(name: "OSError_dealloc", scope: !1, file: !1, line: 1008, type: !1198, isLocal: true, isDefinition: true, scopeLine: 1009, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.PyOSErrorObject*)* @OSError_dealloc, variables: !1200)
!1198 = !DISubroutineType(types: !1199)
!1199 = !{null, !428}
!1200 = !{!1201, !1202}
!1201 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1197, file: !1, line: 1008, type: !428)
!1202 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "g", scope: !1203, file: !1, line: 1010, type: !414)
!1203 = distinct !DILexicalBlock(scope: !1197, file: !1, line: 1010, column: 5)
!1204 = !DISubprogram(name: "OSError_str", scope: !1, file: !1, line: 1030, type: !1205, isLocal: true, isDefinition: true, scopeLine: 1031, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyOSErrorObject*)* @OSError_str, variables: !1207)
!1205 = !DISubroutineType(types: !1206)
!1206 = !{!50, !428}
!1207 = !{!1208}
!1208 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1204, file: !1, line: 1030, type: !428)
!1209 = !DISubprogram(name: "OSError_traverse", scope: !1, file: !1, line: 1016, type: !1210, isLocal: true, isDefinition: true, scopeLine: 1018, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyOSErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @OSError_traverse, variables: !1212)
!1210 = !DISubroutineType(types: !1211)
!1211 = !{!56, !428, !276, !102}
!1212 = !{!1213, !1214, !1215, !1216, !1220, !1224, !1228}
!1213 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1209, file: !1, line: 1016, type: !428)
!1214 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1209, file: !1, line: 1016, type: !276)
!1215 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1209, file: !1, line: 1017, type: !102)
!1216 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1217, file: !1, line: 1019, type: !56)
!1217 = distinct !DILexicalBlock(scope: !1218, file: !1, line: 1019, column: 5)
!1218 = distinct !DILexicalBlock(scope: !1219, file: !1, line: 1019, column: 5)
!1219 = distinct !DILexicalBlock(scope: !1209, file: !1, line: 1019, column: 5)
!1220 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1221, file: !1, line: 1020, type: !56)
!1221 = distinct !DILexicalBlock(scope: !1222, file: !1, line: 1020, column: 5)
!1222 = distinct !DILexicalBlock(scope: !1223, file: !1, line: 1020, column: 5)
!1223 = distinct !DILexicalBlock(scope: !1209, file: !1, line: 1020, column: 5)
!1224 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1225, file: !1, line: 1021, type: !56)
!1225 = distinct !DILexicalBlock(scope: !1226, file: !1, line: 1021, column: 5)
!1226 = distinct !DILexicalBlock(scope: !1227, file: !1, line: 1021, column: 5)
!1227 = distinct !DILexicalBlock(scope: !1209, file: !1, line: 1021, column: 5)
!1228 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1229, file: !1, line: 1022, type: !56)
!1229 = distinct !DILexicalBlock(scope: !1230, file: !1, line: 1022, column: 5)
!1230 = distinct !DILexicalBlock(scope: !1231, file: !1, line: 1022, column: 5)
!1231 = distinct !DILexicalBlock(scope: !1209, file: !1, line: 1022, column: 5)
!1232 = !DISubprogram(name: "OSError_clear", scope: !1, file: !1, line: 995, type: !1233, isLocal: true, isDefinition: true, scopeLine: 996, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyOSErrorObject*)* @OSError_clear, variables: !1235)
!1233 = !DISubroutineType(types: !1234)
!1234 = !{!56, !428}
!1235 = !{!1236, !1237, !1239, !1243, !1245, !1249, !1251, !1255, !1257}
!1236 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1232, file: !1, line: 995, type: !428)
!1237 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1238, file: !1, line: 997, type: !50)
!1238 = distinct !DILexicalBlock(scope: !1232, file: !1, line: 997, column: 5)
!1239 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1240, file: !1, line: 997, type: !50)
!1240 = distinct !DILexicalBlock(scope: !1241, file: !1, line: 997, column: 5)
!1241 = distinct !DILexicalBlock(scope: !1242, file: !1, line: 997, column: 5)
!1242 = distinct !DILexicalBlock(scope: !1238, file: !1, line: 997, column: 5)
!1243 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1244, file: !1, line: 998, type: !50)
!1244 = distinct !DILexicalBlock(scope: !1232, file: !1, line: 998, column: 5)
!1245 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1246, file: !1, line: 998, type: !50)
!1246 = distinct !DILexicalBlock(scope: !1247, file: !1, line: 998, column: 5)
!1247 = distinct !DILexicalBlock(scope: !1248, file: !1, line: 998, column: 5)
!1248 = distinct !DILexicalBlock(scope: !1244, file: !1, line: 998, column: 5)
!1249 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1250, file: !1, line: 999, type: !50)
!1250 = distinct !DILexicalBlock(scope: !1232, file: !1, line: 999, column: 5)
!1251 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1252, file: !1, line: 999, type: !50)
!1252 = distinct !DILexicalBlock(scope: !1253, file: !1, line: 999, column: 5)
!1253 = distinct !DILexicalBlock(scope: !1254, file: !1, line: 999, column: 5)
!1254 = distinct !DILexicalBlock(scope: !1250, file: !1, line: 999, column: 5)
!1255 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1256, file: !1, line: 1000, type: !50)
!1256 = distinct !DILexicalBlock(scope: !1232, file: !1, line: 1000, column: 5)
!1257 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1258, file: !1, line: 1000, type: !50)
!1258 = distinct !DILexicalBlock(scope: !1259, file: !1, line: 1000, column: 5)
!1259 = distinct !DILexicalBlock(scope: !1260, file: !1, line: 1000, column: 5)
!1260 = distinct !DILexicalBlock(scope: !1256, file: !1, line: 1000, column: 5)
!1261 = !DISubprogram(name: "OSError_reduce", scope: !1, file: !1, line: 1076, type: !1205, isLocal: true, isDefinition: true, scopeLine: 1077, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyOSErrorObject*)* @OSError_reduce, variables: !1262)
!1262 = !{!1263, !1264, !1265, !1266, !1267, !1270}
!1263 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1261, file: !1, line: 1076, type: !428)
!1264 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "args", scope: !1261, file: !1, line: 1078, type: !50)
!1265 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1261, file: !1, line: 1079, type: !50)
!1266 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !1261, file: !1, line: 1079, type: !50)
!1267 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !1268, file: !1, line: 1084, type: !22)
!1268 = distinct !DILexicalBlock(scope: !1269, file: !1, line: 1083, column: 56)
!1269 = distinct !DILexicalBlock(scope: !1261, file: !1, line: 1083, column: 9)
!1270 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1271, file: !1, line: 1120, type: !50)
!1271 = distinct !DILexicalBlock(scope: !1261, file: !1, line: 1120, column: 5)
!1272 = !DISubprogram(name: "OSError_written_get", scope: !1, file: !1, line: 1125, type: !1273, isLocal: true, isDefinition: true, scopeLine: 1126, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyOSErrorObject*, i8*)* @OSError_written_get, variables: !1275)
!1273 = !DISubroutineType(types: !1274)
!1274 = !{!50, !428, !102}
!1275 = !{!1276, !1277}
!1276 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1272, file: !1, line: 1125, type: !428)
!1277 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "context", arg: 2, scope: !1272, file: !1, line: 1125, type: !102)
!1278 = !DISubprogram(name: "OSError_written_set", scope: !1, file: !1, line: 1135, type: !1279, isLocal: true, isDefinition: true, scopeLine: 1136, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyOSErrorObject*, %struct._object*, i8*)* @OSError_written_set, variables: !1281)
!1279 = !DISubroutineType(types: !1280)
!1280 = !{!56, !428, !50, !102}
!1281 = !{!1282, !1283, !1284, !1285}
!1282 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1278, file: !1, line: 1135, type: !428)
!1283 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !1278, file: !1, line: 1135, type: !50)
!1284 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "context", arg: 3, scope: !1278, file: !1, line: 1135, type: !102)
!1285 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1278, file: !1, line: 1137, type: !22)
!1286 = !DISubprogram(name: "OSError_init", scope: !1, file: !1, line: 957, type: !1287, isLocal: true, isDefinition: true, scopeLine: 958, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init, variables: !1289)
!1287 = !DISubroutineType(types: !1288)
!1288 = !{!56, !428, !50, !50}
!1289 = !{!1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1299}
!1290 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1286, file: !1, line: 957, type: !428)
!1291 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1286, file: !1, line: 957, type: !50)
!1292 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1286, file: !1, line: 957, type: !50)
!1293 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "myerrno", scope: !1286, file: !1, line: 959, type: !50)
!1294 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "strerror", scope: !1286, file: !1, line: 959, type: !50)
!1295 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "filename", scope: !1286, file: !1, line: 960, type: !50)
!1296 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "filename2", scope: !1286, file: !1, line: 960, type: !50)
!1297 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1298, file: !1, line: 990, type: !50)
!1298 = distinct !DILexicalBlock(scope: !1286, file: !1, line: 990, column: 5)
!1299 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1300, file: !1, line: 990, type: !50)
!1300 = distinct !DILexicalBlock(scope: !1301, file: !1, line: 990, column: 5)
!1301 = distinct !DILexicalBlock(scope: !1298, file: !1, line: 990, column: 5)
!1302 = !DISubprogram(name: "oserror_use_init", scope: !1, file: !1, line: 868, type: !1303, isLocal: true, isDefinition: true, scopeLine: 869, flags: DIFlagPrototyped, isOptimized: true, variables: !1305)
!1303 = !DISubroutineType(types: !1304)
!1304 = !{!56, !404}
!1305 = !{!1306}
!1306 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1302, file: !1, line: 868, type: !404)
!1307 = !DISubprogram(name: "oserror_parse_args", scope: !1, file: !1, line: 735, type: !1308, isLocal: true, isDefinition: true, scopeLine: 742, flags: DIFlagPrototyped, isOptimized: true, variables: !1310)
!1308 = !DISubroutineType(types: !1309)
!1309 = !{!56, !807, !807, !807, !807, !807}
!1310 = !{!1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319}
!1311 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "p_args", arg: 1, scope: !1307, file: !1, line: 735, type: !807)
!1312 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "myerrno", arg: 2, scope: !1307, file: !1, line: 736, type: !807)
!1313 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "strerror", arg: 3, scope: !1307, file: !1, line: 736, type: !807)
!1314 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "filename", arg: 4, scope: !1307, file: !1, line: 737, type: !807)
!1315 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "filename2", arg: 5, scope: !1307, file: !1, line: 737, type: !807)
!1316 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nargs", scope: !1307, file: !1, line: 743, type: !22)
!1317 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "args", scope: !1307, file: !1, line: 744, type: !50)
!1318 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_winerror", scope: !1307, file: !1, line: 750, type: !50)
!1319 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "winerror", scope: !1307, file: !1, line: 751, type: !807)
!1320 = !DISubprogram(name: "oserror_init", scope: !1, file: !1, line: 800, type: !1321, isLocal: true, isDefinition: true, scopeLine: 807, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyOSErrorObject*, %struct._object**, %struct._object*, %struct._object*, %struct._object*, %struct._object*)* @oserror_init, variables: !1323)
!1321 = !DISubroutineType(types: !1322)
!1322 = !{!56, !428, !807, !50, !50, !50, !50}
!1323 = !{!1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1339, !1341, !1343, !1345, !1347}
!1324 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1320, file: !1, line: 800, type: !428)
!1325 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "p_args", arg: 2, scope: !1320, file: !1, line: 800, type: !807)
!1326 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "myerrno", arg: 3, scope: !1320, file: !1, line: 801, type: !50)
!1327 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "strerror", arg: 4, scope: !1320, file: !1, line: 801, type: !50)
!1328 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "filename", arg: 5, scope: !1320, file: !1, line: 802, type: !50)
!1329 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "filename2", arg: 6, scope: !1320, file: !1, line: 802, type: !50)
!1330 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "args", scope: !1320, file: !1, line: 808, type: !50)
!1331 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nargs", scope: !1320, file: !1, line: 809, type: !22)
!1332 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "subslice", scope: !1333, file: !1, line: 834, type: !50)
!1333 = distinct !DILexicalBlock(scope: !1334, file: !1, line: 831, column: 43)
!1334 = distinct !DILexicalBlock(scope: !1335, file: !1, line: 831, column: 17)
!1335 = distinct !DILexicalBlock(scope: !1336, file: !1, line: 822, column: 14)
!1336 = distinct !DILexicalBlock(scope: !1337, file: !1, line: 813, column: 13)
!1337 = distinct !DILexicalBlock(scope: !1338, file: !1, line: 812, column: 42)
!1338 = distinct !DILexicalBlock(scope: !1320, file: !1, line: 812, column: 9)
!1339 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1340, file: !1, line: 838, type: !50)
!1340 = distinct !DILexicalBlock(scope: !1333, file: !1, line: 838, column: 17)
!1341 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xincref_tmp", scope: !1342, file: !1, line: 843, type: !50)
!1342 = distinct !DILexicalBlock(scope: !1320, file: !1, line: 843, column: 5)
!1343 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xincref_tmp", scope: !1344, file: !1, line: 846, type: !50)
!1344 = distinct !DILexicalBlock(scope: !1320, file: !1, line: 846, column: 5)
!1345 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1346, file: !1, line: 855, type: !50)
!1346 = distinct !DILexicalBlock(scope: !1320, file: !1, line: 855, column: 5)
!1347 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1348, file: !1, line: 855, type: !50)
!1348 = distinct !DILexicalBlock(scope: !1349, file: !1, line: 855, column: 5)
!1349 = distinct !DILexicalBlock(scope: !1350, file: !1, line: 855, column: 5)
!1350 = distinct !DILexicalBlock(scope: !1346, file: !1, line: 855, column: 5)
!1351 = !DISubprogram(name: "OSError_new", scope: !1, file: !1, line: 889, type: !1352, isLocal: true, isDefinition: true, scopeLine: 890, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @OSError_new, variables: !1354)
!1352 = !DISubroutineType(types: !1353)
!1353 = !{!50, !404, !50, !50}
!1354 = !{!1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1368, !1370, !1373, !1375, !1378, !1380}
!1355 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1351, file: !1, line: 889, type: !404)
!1356 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1351, file: !1, line: 889, type: !50)
!1357 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1351, file: !1, line: 889, type: !50)
!1358 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !1351, file: !1, line: 891, type: !428)
!1359 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "myerrno", scope: !1351, file: !1, line: 892, type: !50)
!1360 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "strerror", scope: !1351, file: !1, line: 892, type: !50)
!1361 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "filename", scope: !1351, file: !1, line: 893, type: !50)
!1362 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "filename2", scope: !1351, file: !1, line: 893, type: !50)
!1363 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newtype", scope: !1364, file: !1, line: 914, type: !50)
!1364 = distinct !DILexicalBlock(scope: !1365, file: !1, line: 913, column: 61)
!1365 = distinct !DILexicalBlock(scope: !1366, file: !1, line: 912, column: 13)
!1366 = distinct !DILexicalBlock(scope: !1367, file: !1, line: 900, column: 34)
!1367 = distinct !DILexicalBlock(scope: !1351, file: !1, line: 900, column: 9)
!1368 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1369, file: !1, line: 947, type: !50)
!1369 = distinct !DILexicalBlock(scope: !1351, file: !1, line: 947, column: 5)
!1370 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1371, file: !1, line: 947, type: !50)
!1371 = distinct !DILexicalBlock(scope: !1372, file: !1, line: 947, column: 5)
!1372 = distinct !DILexicalBlock(scope: !1369, file: !1, line: 947, column: 5)
!1373 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1374, file: !1, line: 951, type: !50)
!1374 = distinct !DILexicalBlock(scope: !1351, file: !1, line: 951, column: 5)
!1375 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1376, file: !1, line: 951, type: !50)
!1376 = distinct !DILexicalBlock(scope: !1377, file: !1, line: 951, column: 5)
!1377 = distinct !DILexicalBlock(scope: !1374, file: !1, line: 951, column: 5)
!1378 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1379, file: !1, line: 952, type: !50)
!1379 = distinct !DILexicalBlock(scope: !1351, file: !1, line: 952, column: 5)
!1380 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1381, file: !1, line: 952, type: !50)
!1381 = distinct !DILexicalBlock(scope: !1382, file: !1, line: 952, column: 5)
!1382 = distinct !DILexicalBlock(scope: !1379, file: !1, line: 952, column: 5)
!1383 = !DISubprogram(name: "SyntaxError_dealloc", scope: !1, file: !1, line: 1318, type: !1384, isLocal: true, isDefinition: true, scopeLine: 1319, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.PySyntaxErrorObject*)* @SyntaxError_dealloc, variables: !1403)
!1384 = !DISubroutineType(types: !1385)
!1385 = !{null, !1386}
!1386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1387, size: 64, align: 64)
!1387 = !DIDerivedType(tag: DW_TAG_typedef, name: "PySyntaxErrorObject", file: !13, line: 28, baseType: !1388)
!1388 = !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 20, size: 896, align: 64, elements: !1389)
!1389 = !{!1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !1388, file: !13, line: 21, baseType: !17, size: 128, align: 64)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !1388, file: !13, line: 21, baseType: !50, size: 64, align: 64, offset: 128)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1388, file: !13, line: 21, baseType: !50, size: 64, align: 64, offset: 192)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "traceback", scope: !1388, file: !13, line: 21, baseType: !50, size: 64, align: 64, offset: 256)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1388, file: !13, line: 21, baseType: !50, size: 64, align: 64, offset: 320)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "cause", scope: !1388, file: !13, line: 21, baseType: !50, size: 64, align: 64, offset: 384)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_context", scope: !1388, file: !13, line: 21, baseType: !42, size: 8, align: 8, offset: 448)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !1388, file: !13, line: 22, baseType: !50, size: 64, align: 64, offset: 512)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !1388, file: !13, line: 23, baseType: !50, size: 64, align: 64, offset: 576)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "lineno", scope: !1388, file: !13, line: 24, baseType: !50, size: 64, align: 64, offset: 640)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1388, file: !13, line: 25, baseType: !50, size: 64, align: 64, offset: 704)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1388, file: !13, line: 26, baseType: !50, size: 64, align: 64, offset: 768)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "print_file_and_line", scope: !1388, file: !13, line: 27, baseType: !50, size: 64, align: 64, offset: 832)
!1403 = !{!1404, !1405}
!1404 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1383, file: !1, line: 1318, type: !1386)
!1405 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "g", scope: !1406, file: !1, line: 1320, type: !414)
!1406 = distinct !DILexicalBlock(scope: !1383, file: !1, line: 1320, column: 5)
!1407 = !DISubprogram(name: "SyntaxError_str", scope: !1, file: !1, line: 1367, type: !1408, isLocal: true, isDefinition: true, scopeLine: 1368, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PySyntaxErrorObject*)* @SyntaxError_str, variables: !1410)
!1408 = !DISubroutineType(types: !1409)
!1409 = !{!50, !1386}
!1410 = !{!1411, !1412, !1413, !1414, !1415, !1416, !1418}
!1411 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1407, file: !1, line: 1367, type: !1386)
!1412 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "have_lineno", scope: !1407, file: !1, line: 1369, type: !56)
!1413 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "filename", scope: !1407, file: !1, line: 1370, type: !50)
!1414 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1407, file: !1, line: 1371, type: !50)
!1415 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "overflow", scope: !1407, file: !1, line: 1375, type: !56)
!1416 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1417, file: !1, line: 1405, type: !50)
!1417 = distinct !DILexicalBlock(scope: !1407, file: !1, line: 1405, column: 5)
!1418 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1419, file: !1, line: 1405, type: !50)
!1419 = distinct !DILexicalBlock(scope: !1420, file: !1, line: 1405, column: 5)
!1420 = distinct !DILexicalBlock(scope: !1417, file: !1, line: 1405, column: 5)
!1421 = !DISubprogram(name: "my_basename", scope: !1, file: !1, line: 1341, type: !129, isLocal: true, isDefinition: true, scopeLine: 1342, flags: DIFlagPrototyped, isOptimized: true, variables: !1422)
!1422 = !{!1423, !1424, !1425, !1426, !1427, !1428}
!1423 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "name", arg: 1, scope: !1421, file: !1, line: 1341, type: !50)
!1424 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1421, file: !1, line: 1343, type: !22)
!1425 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !1421, file: !1, line: 1343, type: !22)
!1426 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset", scope: !1421, file: !1, line: 1343, type: !22)
!1427 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "kind", scope: !1421, file: !1, line: 1344, type: !56)
!1428 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "data", scope: !1421, file: !1, line: 1345, type: !102)
!1429 = !DISubprogram(name: "SyntaxError_traverse", scope: !1, file: !1, line: 1326, type: !1430, isLocal: true, isDefinition: true, scopeLine: 1327, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PySyntaxErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @SyntaxError_traverse, variables: !1432)
!1430 = !DISubroutineType(types: !1431)
!1431 = !{!56, !1386, !276, !102}
!1432 = !{!1433, !1434, !1435, !1436, !1440, !1444, !1448, !1452, !1456}
!1433 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1429, file: !1, line: 1326, type: !1386)
!1434 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1429, file: !1, line: 1326, type: !276)
!1435 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1429, file: !1, line: 1326, type: !102)
!1436 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1437, file: !1, line: 1328, type: !56)
!1437 = distinct !DILexicalBlock(scope: !1438, file: !1, line: 1328, column: 5)
!1438 = distinct !DILexicalBlock(scope: !1439, file: !1, line: 1328, column: 5)
!1439 = distinct !DILexicalBlock(scope: !1429, file: !1, line: 1328, column: 5)
!1440 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1441, file: !1, line: 1329, type: !56)
!1441 = distinct !DILexicalBlock(scope: !1442, file: !1, line: 1329, column: 5)
!1442 = distinct !DILexicalBlock(scope: !1443, file: !1, line: 1329, column: 5)
!1443 = distinct !DILexicalBlock(scope: !1429, file: !1, line: 1329, column: 5)
!1444 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1445, file: !1, line: 1330, type: !56)
!1445 = distinct !DILexicalBlock(scope: !1446, file: !1, line: 1330, column: 5)
!1446 = distinct !DILexicalBlock(scope: !1447, file: !1, line: 1330, column: 5)
!1447 = distinct !DILexicalBlock(scope: !1429, file: !1, line: 1330, column: 5)
!1448 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1449, file: !1, line: 1331, type: !56)
!1449 = distinct !DILexicalBlock(scope: !1450, file: !1, line: 1331, column: 5)
!1450 = distinct !DILexicalBlock(scope: !1451, file: !1, line: 1331, column: 5)
!1451 = distinct !DILexicalBlock(scope: !1429, file: !1, line: 1331, column: 5)
!1452 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1453, file: !1, line: 1332, type: !56)
!1453 = distinct !DILexicalBlock(scope: !1454, file: !1, line: 1332, column: 5)
!1454 = distinct !DILexicalBlock(scope: !1455, file: !1, line: 1332, column: 5)
!1455 = distinct !DILexicalBlock(scope: !1429, file: !1, line: 1332, column: 5)
!1456 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1457, file: !1, line: 1333, type: !56)
!1457 = distinct !DILexicalBlock(scope: !1458, file: !1, line: 1333, column: 5)
!1458 = distinct !DILexicalBlock(scope: !1459, file: !1, line: 1333, column: 5)
!1459 = distinct !DILexicalBlock(scope: !1429, file: !1, line: 1333, column: 5)
!1460 = !DISubprogram(name: "SyntaxError_clear", scope: !1, file: !1, line: 1306, type: !1461, isLocal: true, isDefinition: true, scopeLine: 1307, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PySyntaxErrorObject*)* @SyntaxError_clear, variables: !1463)
!1461 = !DISubroutineType(types: !1462)
!1462 = !{!56, !1386}
!1463 = !{!1464, !1465, !1467, !1471, !1473, !1477, !1479, !1483, !1485, !1489, !1491, !1495, !1497}
!1464 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1460, file: !1, line: 1306, type: !1386)
!1465 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1466, file: !1, line: 1308, type: !50)
!1466 = distinct !DILexicalBlock(scope: !1460, file: !1, line: 1308, column: 5)
!1467 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1468, file: !1, line: 1308, type: !50)
!1468 = distinct !DILexicalBlock(scope: !1469, file: !1, line: 1308, column: 5)
!1469 = distinct !DILexicalBlock(scope: !1470, file: !1, line: 1308, column: 5)
!1470 = distinct !DILexicalBlock(scope: !1466, file: !1, line: 1308, column: 5)
!1471 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1472, file: !1, line: 1309, type: !50)
!1472 = distinct !DILexicalBlock(scope: !1460, file: !1, line: 1309, column: 5)
!1473 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1474, file: !1, line: 1309, type: !50)
!1474 = distinct !DILexicalBlock(scope: !1475, file: !1, line: 1309, column: 5)
!1475 = distinct !DILexicalBlock(scope: !1476, file: !1, line: 1309, column: 5)
!1476 = distinct !DILexicalBlock(scope: !1472, file: !1, line: 1309, column: 5)
!1477 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1478, file: !1, line: 1310, type: !50)
!1478 = distinct !DILexicalBlock(scope: !1460, file: !1, line: 1310, column: 5)
!1479 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1480, file: !1, line: 1310, type: !50)
!1480 = distinct !DILexicalBlock(scope: !1481, file: !1, line: 1310, column: 5)
!1481 = distinct !DILexicalBlock(scope: !1482, file: !1, line: 1310, column: 5)
!1482 = distinct !DILexicalBlock(scope: !1478, file: !1, line: 1310, column: 5)
!1483 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1484, file: !1, line: 1311, type: !50)
!1484 = distinct !DILexicalBlock(scope: !1460, file: !1, line: 1311, column: 5)
!1485 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1486, file: !1, line: 1311, type: !50)
!1486 = distinct !DILexicalBlock(scope: !1487, file: !1, line: 1311, column: 5)
!1487 = distinct !DILexicalBlock(scope: !1488, file: !1, line: 1311, column: 5)
!1488 = distinct !DILexicalBlock(scope: !1484, file: !1, line: 1311, column: 5)
!1489 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1490, file: !1, line: 1312, type: !50)
!1490 = distinct !DILexicalBlock(scope: !1460, file: !1, line: 1312, column: 5)
!1491 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1492, file: !1, line: 1312, type: !50)
!1492 = distinct !DILexicalBlock(scope: !1493, file: !1, line: 1312, column: 5)
!1493 = distinct !DILexicalBlock(scope: !1494, file: !1, line: 1312, column: 5)
!1494 = distinct !DILexicalBlock(scope: !1490, file: !1, line: 1312, column: 5)
!1495 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1496, file: !1, line: 1313, type: !50)
!1496 = distinct !DILexicalBlock(scope: !1460, file: !1, line: 1313, column: 5)
!1497 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1498, file: !1, line: 1313, type: !50)
!1498 = distinct !DILexicalBlock(scope: !1499, file: !1, line: 1313, column: 5)
!1499 = distinct !DILexicalBlock(scope: !1500, file: !1, line: 1313, column: 5)
!1500 = distinct !DILexicalBlock(scope: !1496, file: !1, line: 1313, column: 5)
!1501 = !DISubprogram(name: "SyntaxError_init", scope: !1, file: !1, line: 1258, type: !1502, isLocal: true, isDefinition: true, scopeLine: 1259, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PySyntaxErrorObject*, %struct._object*, %struct._object*)* @SyntaxError_init, variables: !1504)
!1502 = !DISubroutineType(types: !1503)
!1503 = !{!56, !1386, !50, !50}
!1504 = !{!1505, !1506, !1507, !1508, !1509, !1510, !1514, !1518, !1524, !1526, !1530, !1532, !1536, !1538, !1542, !1544, !1548}
!1505 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1501, file: !1, line: 1258, type: !1386)
!1506 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1501, file: !1, line: 1258, type: !50)
!1507 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1501, file: !1, line: 1258, type: !50)
!1508 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "info", scope: !1501, file: !1, line: 1260, type: !50)
!1509 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lenargs", scope: !1501, file: !1, line: 1261, type: !22)
!1510 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1511, file: !1, line: 1267, type: !50)
!1511 = distinct !DILexicalBlock(scope: !1512, file: !1, line: 1267, column: 9)
!1512 = distinct !DILexicalBlock(scope: !1513, file: !1, line: 1266, column: 23)
!1513 = distinct !DILexicalBlock(scope: !1501, file: !1, line: 1266, column: 9)
!1514 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1515, file: !1, line: 1267, type: !50)
!1515 = distinct !DILexicalBlock(scope: !1516, file: !1, line: 1267, column: 9)
!1516 = distinct !DILexicalBlock(scope: !1517, file: !1, line: 1267, column: 9)
!1517 = distinct !DILexicalBlock(scope: !1511, file: !1, line: 1267, column: 9)
!1518 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1519, file: !1, line: 1280, type: !50)
!1519 = distinct !DILexicalBlock(scope: !1520, file: !1, line: 1280, column: 13)
!1520 = distinct !DILexicalBlock(scope: !1521, file: !1, line: 1277, column: 42)
!1521 = distinct !DILexicalBlock(scope: !1522, file: !1, line: 1277, column: 13)
!1522 = distinct !DILexicalBlock(scope: !1523, file: !1, line: 1271, column: 23)
!1523 = distinct !DILexicalBlock(scope: !1501, file: !1, line: 1271, column: 9)
!1524 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1525, file: !1, line: 1284, type: !50)
!1525 = distinct !DILexicalBlock(scope: !1522, file: !1, line: 1284, column: 9)
!1526 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1527, file: !1, line: 1284, type: !50)
!1527 = distinct !DILexicalBlock(scope: !1528, file: !1, line: 1284, column: 9)
!1528 = distinct !DILexicalBlock(scope: !1529, file: !1, line: 1284, column: 9)
!1529 = distinct !DILexicalBlock(scope: !1525, file: !1, line: 1284, column: 9)
!1530 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1531, file: !1, line: 1288, type: !50)
!1531 = distinct !DILexicalBlock(scope: !1522, file: !1, line: 1288, column: 9)
!1532 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1533, file: !1, line: 1288, type: !50)
!1533 = distinct !DILexicalBlock(scope: !1534, file: !1, line: 1288, column: 9)
!1534 = distinct !DILexicalBlock(scope: !1535, file: !1, line: 1288, column: 9)
!1535 = distinct !DILexicalBlock(scope: !1531, file: !1, line: 1288, column: 9)
!1536 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1537, file: !1, line: 1292, type: !50)
!1537 = distinct !DILexicalBlock(scope: !1522, file: !1, line: 1292, column: 9)
!1538 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1539, file: !1, line: 1292, type: !50)
!1539 = distinct !DILexicalBlock(scope: !1540, file: !1, line: 1292, column: 9)
!1540 = distinct !DILexicalBlock(scope: !1541, file: !1, line: 1292, column: 9)
!1541 = distinct !DILexicalBlock(scope: !1537, file: !1, line: 1292, column: 9)
!1542 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1543, file: !1, line: 1296, type: !50)
!1543 = distinct !DILexicalBlock(scope: !1522, file: !1, line: 1296, column: 9)
!1544 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1545, file: !1, line: 1296, type: !50)
!1545 = distinct !DILexicalBlock(scope: !1546, file: !1, line: 1296, column: 9)
!1546 = distinct !DILexicalBlock(scope: !1547, file: !1, line: 1296, column: 9)
!1547 = distinct !DILexicalBlock(scope: !1543, file: !1, line: 1296, column: 9)
!1548 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1549, file: !1, line: 1300, type: !50)
!1549 = distinct !DILexicalBlock(scope: !1522, file: !1, line: 1300, column: 9)
!1550 = !DISubprogram(name: "KeyError_str", scope: !1, file: !1, line: 1463, type: !864, isLocal: true, isDefinition: true, scopeLine: 1464, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyBaseExceptionObject*)* @KeyError_str, variables: !1551)
!1551 = !{!1552}
!1552 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1550, file: !1, line: 1463, type: !11)
!1553 = !DISubprogram(name: "get_unicode", scope: !1, file: !1, line: 1514, type: !1554, isLocal: true, isDefinition: true, scopeLine: 1515, flags: DIFlagPrototyped, isOptimized: true, variables: !1556)
!1554 = !DISubroutineType(types: !1555)
!1555 = !{!50, !50, !40}
!1556 = !{!1557, !1558}
!1557 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "attr", arg: 1, scope: !1553, file: !1, line: 1514, type: !50)
!1558 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "name", arg: 2, scope: !1553, file: !1, line: 1514, type: !40)
!1559 = !DISubprogram(name: "get_string", scope: !1, file: !1, line: 1498, type: !1554, isLocal: true, isDefinition: true, scopeLine: 1499, flags: DIFlagPrototyped, isOptimized: true, variables: !1560)
!1560 = !{!1561, !1562}
!1561 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "attr", arg: 1, scope: !1559, file: !1, line: 1498, type: !50)
!1562 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "name", arg: 2, scope: !1559, file: !1, line: 1498, type: !40)
!1563 = !DISubprogram(name: "set_unicodefromstring", scope: !1, file: !1, line: 1531, type: !1564, isLocal: true, isDefinition: true, scopeLine: 1532, flags: DIFlagPrototyped, isOptimized: true, variables: !1566)
!1564 = !DISubroutineType(types: !1565)
!1565 = !{!56, !807, !40}
!1566 = !{!1567, !1568, !1569, !1570, !1572}
!1567 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "attr", arg: 1, scope: !1563, file: !1, line: 1531, type: !807)
!1568 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "value", arg: 2, scope: !1563, file: !1, line: 1531, type: !40)
!1569 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "obj", scope: !1563, file: !1, line: 1533, type: !50)
!1570 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1571, file: !1, line: 1536, type: !50)
!1571 = distinct !DILexicalBlock(scope: !1563, file: !1, line: 1536, column: 5)
!1572 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1573, file: !1, line: 1536, type: !50)
!1573 = distinct !DILexicalBlock(scope: !1574, file: !1, line: 1536, column: 5)
!1574 = distinct !DILexicalBlock(scope: !1575, file: !1, line: 1536, column: 5)
!1575 = distinct !DILexicalBlock(scope: !1571, file: !1, line: 1536, column: 5)
!1576 = !DISubprogram(name: "UnicodeError_dealloc", scope: !1, file: !1, line: 1761, type: !1577, isLocal: true, isDefinition: true, scopeLine: 1762, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.PyUnicodeErrorObject*)* @UnicodeError_dealloc, variables: !1579)
!1577 = !DISubroutineType(types: !1578)
!1578 = !{null, !369}
!1579 = !{!1580, !1581}
!1580 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1576, file: !1, line: 1761, type: !369)
!1581 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "g", scope: !1582, file: !1, line: 1763, type: !414)
!1582 = distinct !DILexicalBlock(scope: !1576, file: !1, line: 1763, column: 5)
!1583 = !DISubprogram(name: "UnicodeEncodeError_str", scope: !1, file: !1, line: 1833, type: !129, isLocal: true, isDefinition: true, scopeLine: 1834, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @UnicodeEncodeError_str, variables: !1584)
!1584 = !{!1585, !1586, !1587, !1588, !1589, !1590, !1593, !1594, !1596, !1599, !1601}
!1585 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1583, file: !1, line: 1833, type: !50)
!1586 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "uself", scope: !1583, file: !1, line: 1835, type: !369)
!1587 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1583, file: !1, line: 1836, type: !50)
!1588 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "reason_str", scope: !1583, file: !1, line: 1837, type: !50)
!1589 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "encoding_str", scope: !1583, file: !1, line: 1838, type: !50)
!1590 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "badchar", scope: !1591, file: !1, line: 1854, type: !470)
!1591 = distinct !DILexicalBlock(scope: !1592, file: !1, line: 1853, column: 93)
!1592 = distinct !DILexicalBlock(scope: !1583, file: !1, line: 1853, column: 9)
!1593 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fmt", scope: !1591, file: !1, line: 1855, type: !40)
!1594 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1595, file: !1, line: 1878, type: !50)
!1595 = distinct !DILexicalBlock(scope: !1583, file: !1, line: 1878, column: 5)
!1596 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1597, file: !1, line: 1878, type: !50)
!1597 = distinct !DILexicalBlock(scope: !1598, file: !1, line: 1878, column: 5)
!1598 = distinct !DILexicalBlock(scope: !1595, file: !1, line: 1878, column: 5)
!1599 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1600, file: !1, line: 1879, type: !50)
!1600 = distinct !DILexicalBlock(scope: !1583, file: !1, line: 1879, column: 5)
!1601 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1602, file: !1, line: 1879, type: !50)
!1602 = distinct !DILexicalBlock(scope: !1603, file: !1, line: 1879, column: 5)
!1603 = distinct !DILexicalBlock(scope: !1600, file: !1, line: 1879, column: 5)
!1604 = !DISubprogram(name: "UnicodeError_traverse", scope: !1, file: !1, line: 1769, type: !1605, isLocal: true, isDefinition: true, scopeLine: 1770, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyUnicodeErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @UnicodeError_traverse, variables: !1607)
!1605 = !DISubroutineType(types: !1606)
!1606 = !{!56, !369, !276, !102}
!1607 = !{!1608, !1609, !1610, !1611, !1615, !1619}
!1608 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1604, file: !1, line: 1769, type: !369)
!1609 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1604, file: !1, line: 1769, type: !276)
!1610 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1604, file: !1, line: 1769, type: !102)
!1611 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1612, file: !1, line: 1771, type: !56)
!1612 = distinct !DILexicalBlock(scope: !1613, file: !1, line: 1771, column: 5)
!1613 = distinct !DILexicalBlock(scope: !1614, file: !1, line: 1771, column: 5)
!1614 = distinct !DILexicalBlock(scope: !1604, file: !1, line: 1771, column: 5)
!1615 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1616, file: !1, line: 1772, type: !56)
!1616 = distinct !DILexicalBlock(scope: !1617, file: !1, line: 1772, column: 5)
!1617 = distinct !DILexicalBlock(scope: !1618, file: !1, line: 1772, column: 5)
!1618 = distinct !DILexicalBlock(scope: !1604, file: !1, line: 1772, column: 5)
!1619 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1620, file: !1, line: 1773, type: !56)
!1620 = distinct !DILexicalBlock(scope: !1621, file: !1, line: 1773, column: 5)
!1621 = distinct !DILexicalBlock(scope: !1622, file: !1, line: 1773, column: 5)
!1622 = distinct !DILexicalBlock(scope: !1604, file: !1, line: 1773, column: 5)
!1623 = !DISubprogram(name: "UnicodeError_clear", scope: !1, file: !1, line: 1752, type: !1624, isLocal: true, isDefinition: true, scopeLine: 1753, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyUnicodeErrorObject*)* @UnicodeError_clear, variables: !1626)
!1624 = !DISubroutineType(types: !1625)
!1625 = !{!56, !369}
!1626 = !{!1627, !1628, !1630, !1634, !1636, !1640, !1642}
!1627 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1623, file: !1, line: 1752, type: !369)
!1628 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1629, file: !1, line: 1754, type: !50)
!1629 = distinct !DILexicalBlock(scope: !1623, file: !1, line: 1754, column: 5)
!1630 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1631, file: !1, line: 1754, type: !50)
!1631 = distinct !DILexicalBlock(scope: !1632, file: !1, line: 1754, column: 5)
!1632 = distinct !DILexicalBlock(scope: !1633, file: !1, line: 1754, column: 5)
!1633 = distinct !DILexicalBlock(scope: !1629, file: !1, line: 1754, column: 5)
!1634 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1635, file: !1, line: 1755, type: !50)
!1635 = distinct !DILexicalBlock(scope: !1623, file: !1, line: 1755, column: 5)
!1636 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1637, file: !1, line: 1755, type: !50)
!1637 = distinct !DILexicalBlock(scope: !1638, file: !1, line: 1755, column: 5)
!1638 = distinct !DILexicalBlock(scope: !1639, file: !1, line: 1755, column: 5)
!1639 = distinct !DILexicalBlock(scope: !1635, file: !1, line: 1755, column: 5)
!1640 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1641, file: !1, line: 1756, type: !50)
!1641 = distinct !DILexicalBlock(scope: !1623, file: !1, line: 1756, column: 5)
!1642 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1643, file: !1, line: 1756, type: !50)
!1643 = distinct !DILexicalBlock(scope: !1644, file: !1, line: 1756, column: 5)
!1644 = distinct !DILexicalBlock(scope: !1645, file: !1, line: 1756, column: 5)
!1645 = distinct !DILexicalBlock(scope: !1641, file: !1, line: 1756, column: 5)
!1646 = !DISubprogram(name: "UnicodeEncodeError_init", scope: !1, file: !1, line: 1797, type: !224, isLocal: true, isDefinition: true, scopeLine: 1798, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, %struct._object*, %struct._object*)* @UnicodeEncodeError_init, variables: !1647)
!1647 = !{!1648, !1649, !1650, !1651, !1652, !1654, !1658, !1660, !1664, !1666}
!1648 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1646, file: !1, line: 1797, type: !50)
!1649 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1646, file: !1, line: 1797, type: !50)
!1650 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1646, file: !1, line: 1797, type: !50)
!1651 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "err", scope: !1646, file: !1, line: 1799, type: !369)
!1652 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1653, file: !1, line: 1806, type: !50)
!1653 = distinct !DILexicalBlock(scope: !1646, file: !1, line: 1806, column: 5)
!1654 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1655, file: !1, line: 1806, type: !50)
!1655 = distinct !DILexicalBlock(scope: !1656, file: !1, line: 1806, column: 5)
!1656 = distinct !DILexicalBlock(scope: !1657, file: !1, line: 1806, column: 5)
!1657 = distinct !DILexicalBlock(scope: !1653, file: !1, line: 1806, column: 5)
!1658 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1659, file: !1, line: 1807, type: !50)
!1659 = distinct !DILexicalBlock(scope: !1646, file: !1, line: 1807, column: 5)
!1660 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1661, file: !1, line: 1807, type: !50)
!1661 = distinct !DILexicalBlock(scope: !1662, file: !1, line: 1807, column: 5)
!1662 = distinct !DILexicalBlock(scope: !1663, file: !1, line: 1807, column: 5)
!1663 = distinct !DILexicalBlock(scope: !1659, file: !1, line: 1807, column: 5)
!1664 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1665, file: !1, line: 1808, type: !50)
!1665 = distinct !DILexicalBlock(scope: !1646, file: !1, line: 1808, column: 5)
!1666 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1667, file: !1, line: 1808, type: !50)
!1667 = distinct !DILexicalBlock(scope: !1668, file: !1, line: 1808, column: 5)
!1668 = distinct !DILexicalBlock(scope: !1669, file: !1, line: 1808, column: 5)
!1669 = distinct !DILexicalBlock(scope: !1665, file: !1, line: 1808, column: 5)
!1670 = !DISubprogram(name: "UnicodeDecodeError_str", scope: !1, file: !1, line: 1955, type: !129, isLocal: true, isDefinition: true, scopeLine: 1956, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @UnicodeDecodeError_str, variables: !1671)
!1671 = !{!1672, !1673, !1674, !1675, !1676, !1677, !1680, !1682, !1685, !1687}
!1672 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1670, file: !1, line: 1955, type: !50)
!1673 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "uself", scope: !1670, file: !1, line: 1957, type: !369)
!1674 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1670, file: !1, line: 1958, type: !50)
!1675 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "reason_str", scope: !1670, file: !1, line: 1959, type: !50)
!1676 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "encoding_str", scope: !1670, file: !1, line: 1960, type: !50)
!1677 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "byte", scope: !1678, file: !1, line: 1976, type: !56)
!1678 = distinct !DILexicalBlock(scope: !1679, file: !1, line: 1975, column: 89)
!1679 = distinct !DILexicalBlock(scope: !1670, file: !1, line: 1975, column: 9)
!1680 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1681, file: !1, line: 1994, type: !50)
!1681 = distinct !DILexicalBlock(scope: !1670, file: !1, line: 1994, column: 5)
!1682 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1683, file: !1, line: 1994, type: !50)
!1683 = distinct !DILexicalBlock(scope: !1684, file: !1, line: 1994, column: 5)
!1684 = distinct !DILexicalBlock(scope: !1681, file: !1, line: 1994, column: 5)
!1685 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1686, file: !1, line: 1995, type: !50)
!1686 = distinct !DILexicalBlock(scope: !1670, file: !1, line: 1995, column: 5)
!1687 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1688, file: !1, line: 1995, type: !50)
!1688 = distinct !DILexicalBlock(scope: !1689, file: !1, line: 1995, column: 5)
!1689 = distinct !DILexicalBlock(scope: !1686, file: !1, line: 1995, column: 5)
!1690 = !DISubprogram(name: "UnicodeDecodeError_init", scope: !1, file: !1, line: 1912, type: !224, isLocal: true, isDefinition: true, scopeLine: 1913, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, %struct._object*, %struct._object*)* @UnicodeDecodeError_init, variables: !1691)
!1691 = !{!1692, !1693, !1694, !1695, !1696, !1697, !1698, !1700, !1704, !1706, !1710, !1712}
!1692 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1690, file: !1, line: 1912, type: !50)
!1693 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1690, file: !1, line: 1912, type: !50)
!1694 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1690, file: !1, line: 1912, type: !50)
!1695 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ude", scope: !1690, file: !1, line: 1914, type: !369)
!1696 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "data", scope: !1690, file: !1, line: 1915, type: !40)
!1697 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !1690, file: !1, line: 1916, type: !22)
!1698 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1699, file: !1, line: 1923, type: !50)
!1699 = distinct !DILexicalBlock(scope: !1690, file: !1, line: 1923, column: 5)
!1700 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1701, file: !1, line: 1923, type: !50)
!1701 = distinct !DILexicalBlock(scope: !1702, file: !1, line: 1923, column: 5)
!1702 = distinct !DILexicalBlock(scope: !1703, file: !1, line: 1923, column: 5)
!1703 = distinct !DILexicalBlock(scope: !1699, file: !1, line: 1923, column: 5)
!1704 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1705, file: !1, line: 1924, type: !50)
!1705 = distinct !DILexicalBlock(scope: !1690, file: !1, line: 1924, column: 5)
!1706 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1707, file: !1, line: 1924, type: !50)
!1707 = distinct !DILexicalBlock(scope: !1708, file: !1, line: 1924, column: 5)
!1708 = distinct !DILexicalBlock(scope: !1709, file: !1, line: 1924, column: 5)
!1709 = distinct !DILexicalBlock(scope: !1705, file: !1, line: 1924, column: 5)
!1710 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1711, file: !1, line: 1925, type: !50)
!1711 = distinct !DILexicalBlock(scope: !1690, file: !1, line: 1925, column: 5)
!1712 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1713, file: !1, line: 1925, type: !50)
!1713 = distinct !DILexicalBlock(scope: !1714, file: !1, line: 1925, column: 5)
!1714 = distinct !DILexicalBlock(scope: !1715, file: !1, line: 1925, column: 5)
!1715 = distinct !DILexicalBlock(scope: !1711, file: !1, line: 1925, column: 5)
!1716 = !DISubprogram(name: "UnicodeTranslateError_str", scope: !1, file: !1, line: 2054, type: !129, isLocal: true, isDefinition: true, scopeLine: 2055, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @UnicodeTranslateError_str, variables: !1717)
!1717 = !{!1718, !1719, !1720, !1721, !1722, !1725, !1726, !1728}
!1718 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1716, file: !1, line: 2054, type: !50)
!1719 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "uself", scope: !1716, file: !1, line: 2056, type: !369)
!1720 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1716, file: !1, line: 2057, type: !50)
!1721 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "reason_str", scope: !1716, file: !1, line: 2058, type: !50)
!1722 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "badchar", scope: !1723, file: !1, line: 2071, type: !470)
!1723 = distinct !DILexicalBlock(scope: !1724, file: !1, line: 2070, column: 93)
!1724 = distinct !DILexicalBlock(scope: !1716, file: !1, line: 2070, column: 9)
!1725 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fmt", scope: !1723, file: !1, line: 2072, type: !40)
!1726 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1727, file: !1, line: 2094, type: !50)
!1727 = distinct !DILexicalBlock(scope: !1716, file: !1, line: 2094, column: 5)
!1728 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1729, file: !1, line: 2094, type: !50)
!1729 = distinct !DILexicalBlock(scope: !1730, file: !1, line: 2094, column: 5)
!1730 = distinct !DILexicalBlock(scope: !1727, file: !1, line: 2094, column: 5)
!1731 = !DISubprogram(name: "UnicodeTranslateError_init", scope: !1, file: !1, line: 2028, type: !1732, isLocal: true, isDefinition: true, scopeLine: 2030, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyUnicodeErrorObject*, %struct._object*, %struct._object*)* @UnicodeTranslateError_init, variables: !1734)
!1732 = !DISubroutineType(types: !1733)
!1733 = !{!56, !369, !50, !50}
!1734 = !{!1735, !1736, !1737, !1738, !1740, !1744, !1746}
!1735 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1731, file: !1, line: 2028, type: !369)
!1736 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1731, file: !1, line: 2028, type: !50)
!1737 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1731, file: !1, line: 2029, type: !50)
!1738 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1739, file: !1, line: 2034, type: !50)
!1739 = distinct !DILexicalBlock(scope: !1731, file: !1, line: 2034, column: 5)
!1740 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1741, file: !1, line: 2034, type: !50)
!1741 = distinct !DILexicalBlock(scope: !1742, file: !1, line: 2034, column: 5)
!1742 = distinct !DILexicalBlock(scope: !1743, file: !1, line: 2034, column: 5)
!1743 = distinct !DILexicalBlock(scope: !1739, file: !1, line: 2034, column: 5)
!1744 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1745, file: !1, line: 2035, type: !50)
!1745 = distinct !DILexicalBlock(scope: !1731, file: !1, line: 2035, column: 5)
!1746 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1747, file: !1, line: 2035, type: !50)
!1747 = distinct !DILexicalBlock(scope: !1748, file: !1, line: 2035, column: 5)
!1748 = distinct !DILexicalBlock(scope: !1749, file: !1, line: 2035, column: 5)
!1749 = distinct !DILexicalBlock(scope: !1745, file: !1, line: 2035, column: 5)
!1750 = !DISubprogram(name: "MemoryError_dealloc", scope: !1, file: !1, line: 2215, type: !857, isLocal: true, isDefinition: true, scopeLine: 2216, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.PyBaseExceptionObject*)* @MemoryError_dealloc, variables: !1751)
!1751 = !{!1752, !1753}
!1752 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1750, file: !1, line: 2215, type: !11)
!1753 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "g", scope: !1754, file: !1, line: 2217, type: !414)
!1754 = distinct !DILexicalBlock(scope: !1750, file: !1, line: 2217, column: 5)
!1755 = !DISubprogram(name: "MemoryError_new", scope: !1, file: !1, line: 2192, type: !1352, isLocal: true, isDefinition: true, scopeLine: 2193, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @MemoryError_new, variables: !1756)
!1756 = !{!1757, !1758, !1759, !1760, !1761}
!1757 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1755, file: !1, line: 2192, type: !404)
!1758 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1755, file: !1, line: 2192, type: !50)
!1759 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1755, file: !1, line: 2192, type: !50)
!1760 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !1755, file: !1, line: 2194, type: !11)
!1761 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "g", scope: !1762, file: !1, line: 2210, type: !414)
!1762 = distinct !DILexicalBlock(scope: !1755, file: !1, line: 2210, column: 5)
!1763 = !DISubprogram(name: "preallocate_memerrors", scope: !1, file: !1, line: 2229, type: !781, isLocal: true, isDefinition: true, scopeLine: 2230, flags: DIFlagPrototyped, isOptimized: true, variables: !1764)
!1764 = !{!1765, !1766, !1770}
!1765 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1763, file: !1, line: 2233, type: !56)
!1766 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "errors", scope: !1763, file: !1, line: 2234, type: !1767)
!1767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !50, size: 1024, align: 64, elements: !1768)
!1768 = !{!1769}
!1769 = !DISubrange(count: 16)
!1770 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1771, file: !1, line: 2242, type: !50)
!1771 = distinct !DILexicalBlock(scope: !1772, file: !1, line: 2242, column: 9)
!1772 = distinct !DILexicalBlock(scope: !1773, file: !1, line: 2241, column: 42)
!1773 = distinct !DILexicalBlock(scope: !1774, file: !1, line: 2241, column: 5)
!1774 = distinct !DILexicalBlock(scope: !1763, file: !1, line: 2241, column: 5)
!1775 = !DISubprogram(name: "BaseException_new", scope: !1, file: !1, line: 32, type: !1352, isLocal: true, isDefinition: true, scopeLine: 33, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, variables: !1776)
!1776 = !{!1777, !1778, !1779, !1780, !1781}
!1777 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1775, file: !1, line: 32, type: !404)
!1778 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1775, file: !1, line: 32, type: !50)
!1779 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1775, file: !1, line: 32, type: !50)
!1780 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !1775, file: !1, line: 34, type: !11)
!1781 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1782, file: !1, line: 52, type: !50)
!1782 = distinct !DILexicalBlock(scope: !1783, file: !1, line: 52, column: 9)
!1783 = distinct !DILexicalBlock(scope: !1784, file: !1, line: 51, column: 22)
!1784 = distinct !DILexicalBlock(scope: !1775, file: !1, line: 51, column: 9)
!1785 = !DISubprogram(name: "BaseException_init", scope: !1, file: !1, line: 60, type: !1786, isLocal: true, isDefinition: true, scopeLine: 61, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init, variables: !1788)
!1786 = !DISubroutineType(types: !1787)
!1787 = !{!56, !11, !50, !50}
!1788 = !{!1789, !1790, !1791, !1792, !1793, !1795}
!1789 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1785, file: !1, line: 60, type: !11)
!1790 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1785, file: !1, line: 60, type: !50)
!1791 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1785, file: !1, line: 60, type: !50)
!1792 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !1785, file: !1, line: 62, type: !50)
!1793 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1794, file: !1, line: 70, type: !50)
!1794 = distinct !DILexicalBlock(scope: !1785, file: !1, line: 70, column: 5)
!1795 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1796, file: !1, line: 70, type: !50)
!1796 = distinct !DILexicalBlock(scope: !1797, file: !1, line: 70, column: 5)
!1797 = distinct !DILexicalBlock(scope: !1794, file: !1, line: 70, column: 5)
!1798 = !DISubprogram(name: "free_preallocated_memerrors", scope: !1, file: !1, line: 2247, type: !781, isLocal: true, isDefinition: true, scopeLine: 2248, flags: DIFlagPrototyped, isOptimized: true, variables: !1799)
!1799 = !{!1800}
!1800 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !1801, file: !1, line: 2250, type: !50)
!1801 = distinct !DILexicalBlock(scope: !1798, file: !1, line: 2249, column: 40)
!1802 = !{!1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1873, !1877, !1881, !1886, !1887, !1888, !1889, !1892, !1893, !1894, !1895, !1896, !1897, !1899, !1901, !1902, !1904, !1908, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970}
!1803 = !DIGlobalVariable(name: "PyExc_EnvironmentError", scope: !0, file: !1, line: 14, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_EnvironmentError)
!1804 = !DIGlobalVariable(name: "PyExc_IOError", scope: !0, file: !1, line: 15, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_IOError)
!1805 = !DIGlobalVariable(name: "PyExc_BaseException", scope: !0, file: !1, line: 407, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_BaseException)
!1806 = !DIGlobalVariable(name: "PyExc_Exception", scope: !0, file: !1, line: 464, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_Exception)
!1807 = !DIGlobalVariable(name: "PyExc_TypeError", scope: !0, file: !1, line: 471, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_TypeError)
!1808 = !DIGlobalVariable(name: "PyExc_StopIteration", scope: !0, file: !1, line: 525, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_StopIteration)
!1809 = !DIGlobalVariable(name: "PyExc_GeneratorExit", scope: !0, file: !1, line: 541, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_GeneratorExit)
!1810 = !DIGlobalVariable(name: "PyExc_SystemExit", scope: !0, file: !1, line: 596, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_SystemExit)
!1811 = !DIGlobalVariable(name: "PyExc_KeyboardInterrupt", scope: !0, file: !1, line: 603, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_KeyboardInterrupt)
!1812 = !DIGlobalVariable(name: "PyExc_ImportError", scope: !0, file: !1, line: 702, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_ImportError)
!1813 = !DIGlobalVariable(name: "PyExc_OSError", scope: !0, file: !1, line: 1173, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_OSError)
!1814 = !DIGlobalVariable(name: "PyExc_BlockingIOError", scope: !0, file: !1, line: 1183, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_BlockingIOError)
!1815 = !DIGlobalVariable(name: "PyExc_ConnectionError", scope: !0, file: !1, line: 1185, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_ConnectionError)
!1816 = !DIGlobalVariable(name: "PyExc_ChildProcessError", scope: !0, file: !1, line: 1187, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_ChildProcessError)
!1817 = !DIGlobalVariable(name: "PyExc_BrokenPipeError", scope: !0, file: !1, line: 1189, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_BrokenPipeError)
!1818 = !DIGlobalVariable(name: "PyExc_ConnectionAbortedError", scope: !0, file: !1, line: 1191, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_ConnectionAbortedError)
!1819 = !DIGlobalVariable(name: "PyExc_ConnectionRefusedError", scope: !0, file: !1, line: 1193, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_ConnectionRefusedError)
!1820 = !DIGlobalVariable(name: "PyExc_ConnectionResetError", scope: !0, file: !1, line: 1195, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_ConnectionResetError)
!1821 = !DIGlobalVariable(name: "PyExc_FileExistsError", scope: !0, file: !1, line: 1197, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_FileExistsError)
!1822 = !DIGlobalVariable(name: "PyExc_FileNotFoundError", scope: !0, file: !1, line: 1199, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_FileNotFoundError)
!1823 = !DIGlobalVariable(name: "PyExc_IsADirectoryError", scope: !0, file: !1, line: 1201, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_IsADirectoryError)
!1824 = !DIGlobalVariable(name: "PyExc_NotADirectoryError", scope: !0, file: !1, line: 1203, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_NotADirectoryError)
!1825 = !DIGlobalVariable(name: "PyExc_InterruptedError", scope: !0, file: !1, line: 1205, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_InterruptedError)
!1826 = !DIGlobalVariable(name: "PyExc_PermissionError", scope: !0, file: !1, line: 1207, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_PermissionError)
!1827 = !DIGlobalVariable(name: "PyExc_ProcessLookupError", scope: !0, file: !1, line: 1209, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_ProcessLookupError)
!1828 = !DIGlobalVariable(name: "PyExc_TimeoutError", scope: !0, file: !1, line: 1211, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_TimeoutError)
!1829 = !DIGlobalVariable(name: "PyExc_EOFError", scope: !0, file: !1, line: 1217, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_EOFError)
!1830 = !DIGlobalVariable(name: "PyExc_RuntimeError", scope: !0, file: !1, line: 1224, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_RuntimeError)
!1831 = !DIGlobalVariable(name: "PyExc_NotImplementedError", scope: !0, file: !1, line: 1231, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_NotImplementedError)
!1832 = !DIGlobalVariable(name: "PyExc_NameError", scope: !0, file: !1, line: 1237, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_NameError)
!1833 = !DIGlobalVariable(name: "PyExc_UnboundLocalError", scope: !0, file: !1, line: 1243, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_UnboundLocalError)
!1834 = !DIGlobalVariable(name: "PyExc_AttributeError", scope: !0, file: !1, line: 1249, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_AttributeError)
!1835 = !DIGlobalVariable(name: "PyExc_SyntaxError", scope: !0, file: !1, line: 1426, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_SyntaxError)
!1836 = !DIGlobalVariable(name: "PyExc_IndentationError", scope: !0, file: !1, line: 1434, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_IndentationError)
!1837 = !DIGlobalVariable(name: "PyExc_TabError", scope: !0, file: !1, line: 1441, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_TabError)
!1838 = !DIGlobalVariable(name: "PyExc_LookupError", scope: !0, file: !1, line: 1448, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_LookupError)
!1839 = !DIGlobalVariable(name: "PyExc_IndexError", scope: !0, file: !1, line: 1455, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_IndexError)
!1840 = !DIGlobalVariable(name: "PyExc_KeyError", scope: !0, file: !1, line: 1480, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_KeyError)
!1841 = !DIGlobalVariable(name: "PyExc_ValueError", scope: !0, file: !1, line: 1487, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_ValueError)
!1842 = !DIGlobalVariable(name: "PyExc_UnicodeError", scope: !0, file: !1, line: 1494, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_UnicodeError)
!1843 = !DIGlobalVariable(name: "PyExc_UnicodeEncodeError", scope: !0, file: !1, line: 1895, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_UnicodeEncodeError)
!1844 = !DIGlobalVariable(name: "PyExc_UnicodeDecodeError", scope: !0, file: !1, line: 2011, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_UnicodeDecodeError)
!1845 = !DIGlobalVariable(name: "PyExc_UnicodeTranslateError", scope: !0, file: !1, line: 2110, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_UnicodeTranslateError)
!1846 = !DIGlobalVariable(name: "PyExc_AssertionError", scope: !0, file: !1, line: 2134, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_AssertionError)
!1847 = !DIGlobalVariable(name: "PyExc_ArithmeticError", scope: !0, file: !1, line: 2141, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_ArithmeticError)
!1848 = !DIGlobalVariable(name: "PyExc_FloatingPointError", scope: !0, file: !1, line: 2148, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_FloatingPointError)
!1849 = !DIGlobalVariable(name: "PyExc_OverflowError", scope: !0, file: !1, line: 2155, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_OverflowError)
!1850 = !DIGlobalVariable(name: "PyExc_ZeroDivisionError", scope: !0, file: !1, line: 2162, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_ZeroDivisionError)
!1851 = !DIGlobalVariable(name: "PyExc_SystemError", scope: !0, file: !1, line: 2169, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_SystemError)
!1852 = !DIGlobalVariable(name: "PyExc_ReferenceError", scope: !0, file: !1, line: 2179, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_ReferenceError)
!1853 = !DIGlobalVariable(name: "PyExc_MemoryError", scope: !0, file: !1, line: 2269, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_MemoryError)
!1854 = !DIGlobalVariable(name: "PyExc_BufferError", scope: !0, file: !1, line: 2275, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_BufferError)
!1855 = !DIGlobalVariable(name: "PyExc_Warning", scope: !0, file: !1, line: 2283, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_Warning)
!1856 = !DIGlobalVariable(name: "PyExc_UserWarning", scope: !0, file: !1, line: 2290, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_UserWarning)
!1857 = !DIGlobalVariable(name: "PyExc_DeprecationWarning", scope: !0, file: !1, line: 2297, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_DeprecationWarning)
!1858 = !DIGlobalVariable(name: "PyExc_PendingDeprecationWarning", scope: !0, file: !1, line: 2304, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_PendingDeprecationWarning)
!1859 = !DIGlobalVariable(name: "PyExc_SyntaxWarning", scope: !0, file: !1, line: 2312, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_SyntaxWarning)
!1860 = !DIGlobalVariable(name: "PyExc_RuntimeWarning", scope: !0, file: !1, line: 2319, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_RuntimeWarning)
!1861 = !DIGlobalVariable(name: "PyExc_FutureWarning", scope: !0, file: !1, line: 2326, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_FutureWarning)
!1862 = !DIGlobalVariable(name: "PyExc_ImportWarning", scope: !0, file: !1, line: 2334, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_ImportWarning)
!1863 = !DIGlobalVariable(name: "PyExc_UnicodeWarning", scope: !0, file: !1, line: 2341, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_UnicodeWarning)
!1864 = !DIGlobalVariable(name: "PyExc_BytesWarning", scope: !0, file: !1, line: 2349, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_BytesWarning)
!1865 = !DIGlobalVariable(name: "PyExc_ResourceWarning", scope: !0, file: !1, line: 2357, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_ResourceWarning)
!1866 = !DIGlobalVariable(name: "PyExc_RecursionErrorInst", scope: !0, file: !1, line: 2366, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_RecursionErrorInst)
!1867 = !DIGlobalVariable(name: "_PyExc_BaseException", scope: !0, file: !1, line: 363, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_BaseException)
!1868 = !DIGlobalVariable(name: "BaseException_methods", scope: !0, file: !1, line: 179, type: !1869, isLocal: true, isDefinition: true, variable: [4 x %struct.PyMethodDef]* @BaseException_methods)
!1869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1870, size: 1024, align: 64, elements: !1871)
!1870 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMethodDef", file: !294, line: 47, baseType: !293)
!1871 = !{!1872}
!1872 = !DISubrange(count: 4)
!1873 = !DIGlobalVariable(name: "with_traceback_doc", scope: !0, file: !1, line: 174, type: !1874, isLocal: true, isDefinition: true, variable: [82 x i8]* @with_traceback_doc)
!1874 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 656, align: 8, elements: !1875)
!1875 = !{!1876}
!1876 = !DISubrange(count: 82)
!1877 = !DIGlobalVariable(name: "BaseException_members", scope: !0, file: !1, line: 356, type: !1878, isLocal: true, isDefinition: true, variable: [2 x %struct.PyMemberDef]* @BaseException_members)
!1878 = !DICompositeType(tag: DW_TAG_array_type, baseType: !303, size: 640, align: 64, elements: !1879)
!1879 = !{!1880}
!1880 = !DISubrange(count: 2)
!1881 = !DIGlobalVariable(name: "BaseException_getset", scope: !0, file: !1, line: 299, type: !1882, isLocal: true, isDefinition: true, variable: [6 x %struct.PyGetSetDef]* @BaseException_getset)
!1882 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1883, size: 1920, align: 64, elements: !1884)
!1883 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyGetSetDef", file: !314, line: 17, baseType: !313)
!1884 = !{!1885}
!1885 = !DISubrange(count: 6)
!1886 = !DIGlobalVariable(name: "_PyExc_Exception", scope: !0, file: !1, line: 464, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_Exception)
!1887 = !DIGlobalVariable(name: "_PyExc_TypeError", scope: !0, file: !1, line: 471, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_TypeError)
!1888 = !DIGlobalVariable(name: "_PyExc_StopIteration", scope: !0, file: !1, line: 525, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_StopIteration)
!1889 = !DIGlobalVariable(name: "StopIteration_members", scope: !0, file: !1, line: 479, type: !1890, isLocal: true, isDefinition: true, variable: [2 x %struct.PyMemberDef]* @StopIteration_members)
!1890 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1891, size: 640, align: 64, elements: !1879)
!1891 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMemberDef", file: !304, line: 24, baseType: !303)
!1892 = !DIGlobalVariable(name: "_PyExc_GeneratorExit", scope: !0, file: !1, line: 541, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_GeneratorExit)
!1893 = !DIGlobalVariable(name: "_PyExc_SystemExit", scope: !0, file: !1, line: 596, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_SystemExit)
!1894 = !DIGlobalVariable(name: "SystemExit_members", scope: !0, file: !1, line: 590, type: !1890, isLocal: true, isDefinition: true, variable: [2 x %struct.PyMemberDef]* @SystemExit_members)
!1895 = !DIGlobalVariable(name: "_PyExc_KeyboardInterrupt", scope: !0, file: !1, line: 603, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_KeyboardInterrupt)
!1896 = !DIGlobalVariable(name: "_PyExc_ImportError", scope: !0, file: !1, line: 702, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_ImportError)
!1897 = !DIGlobalVariable(name: "ImportError_methods", scope: !0, file: !1, line: 698, type: !1898, isLocal: true, isDefinition: true, variable: [1 x %struct.PyMethodDef]* @ImportError_methods)
!1898 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1870, size: 256, align: 64, elements: !94)
!1899 = !DIGlobalVariable(name: "ImportError_members", scope: !0, file: !1, line: 688, type: !1900, isLocal: true, isDefinition: true, variable: [4 x %struct.PyMemberDef]* @ImportError_members)
!1900 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1891, size: 1280, align: 64, elements: !1871)
!1901 = !DIGlobalVariable(name: "_PyExc_OSError", scope: !0, file: !1, line: 1173, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_OSError)
!1902 = !DIGlobalVariable(name: "OSError_methods", scope: !0, file: !1, line: 1161, type: !1903, isLocal: true, isDefinition: true, variable: [2 x %struct.PyMethodDef]* @OSError_methods)
!1903 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1870, size: 512, align: 64, elements: !1879)
!1904 = !DIGlobalVariable(name: "OSError_members", scope: !0, file: !1, line: 1145, type: !1905, isLocal: true, isDefinition: true, variable: [5 x %struct.PyMemberDef]* @OSError_members)
!1905 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1891, size: 1600, align: 64, elements: !1906)
!1906 = !{!1907}
!1907 = !DISubrange(count: 5)
!1908 = !DIGlobalVariable(name: "OSError_getset", scope: !0, file: !1, line: 1166, type: !1909, isLocal: true, isDefinition: true, variable: [2 x %struct.PyGetSetDef]* @OSError_getset)
!1909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1883, size: 640, align: 64, elements: !1879)
!1910 = !DIGlobalVariable(name: "_PyExc_BlockingIOError", scope: !0, file: !1, line: 1183, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_BlockingIOError)
!1911 = !DIGlobalVariable(name: "_PyExc_ConnectionError", scope: !0, file: !1, line: 1185, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_ConnectionError)
!1912 = !DIGlobalVariable(name: "_PyExc_ChildProcessError", scope: !0, file: !1, line: 1187, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_ChildProcessError)
!1913 = !DIGlobalVariable(name: "_PyExc_BrokenPipeError", scope: !0, file: !1, line: 1189, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_BrokenPipeError)
!1914 = !DIGlobalVariable(name: "_PyExc_ConnectionAbortedError", scope: !0, file: !1, line: 1191, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_ConnectionAbortedError)
!1915 = !DIGlobalVariable(name: "_PyExc_ConnectionRefusedError", scope: !0, file: !1, line: 1193, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_ConnectionRefusedError)
!1916 = !DIGlobalVariable(name: "_PyExc_ConnectionResetError", scope: !0, file: !1, line: 1195, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_ConnectionResetError)
!1917 = !DIGlobalVariable(name: "_PyExc_FileExistsError", scope: !0, file: !1, line: 1197, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_FileExistsError)
!1918 = !DIGlobalVariable(name: "_PyExc_FileNotFoundError", scope: !0, file: !1, line: 1199, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_FileNotFoundError)
!1919 = !DIGlobalVariable(name: "_PyExc_IsADirectoryError", scope: !0, file: !1, line: 1201, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_IsADirectoryError)
!1920 = !DIGlobalVariable(name: "_PyExc_NotADirectoryError", scope: !0, file: !1, line: 1203, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_NotADirectoryError)
!1921 = !DIGlobalVariable(name: "_PyExc_InterruptedError", scope: !0, file: !1, line: 1205, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_InterruptedError)
!1922 = !DIGlobalVariable(name: "_PyExc_PermissionError", scope: !0, file: !1, line: 1207, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_PermissionError)
!1923 = !DIGlobalVariable(name: "_PyExc_ProcessLookupError", scope: !0, file: !1, line: 1209, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_ProcessLookupError)
!1924 = !DIGlobalVariable(name: "_PyExc_TimeoutError", scope: !0, file: !1, line: 1211, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_TimeoutError)
!1925 = !DIGlobalVariable(name: "_PyExc_EOFError", scope: !0, file: !1, line: 1217, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_EOFError)
!1926 = !DIGlobalVariable(name: "_PyExc_RuntimeError", scope: !0, file: !1, line: 1224, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_RuntimeError)
!1927 = !DIGlobalVariable(name: "_PyExc_NotImplementedError", scope: !0, file: !1, line: 1231, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_NotImplementedError)
!1928 = !DIGlobalVariable(name: "_PyExc_NameError", scope: !0, file: !1, line: 1237, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_NameError)
!1929 = !DIGlobalVariable(name: "_PyExc_UnboundLocalError", scope: !0, file: !1, line: 1243, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_UnboundLocalError)
!1930 = !DIGlobalVariable(name: "_PyExc_AttributeError", scope: !0, file: !1, line: 1249, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_AttributeError)
!1931 = !DIGlobalVariable(name: "_PyExc_SyntaxError", scope: !0, file: !1, line: 1426, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_SyntaxError)
!1932 = !DIGlobalVariable(name: "SyntaxError_members", scope: !0, file: !1, line: 1409, type: !1933, isLocal: true, isDefinition: true, variable: [7 x %struct.PyMemberDef]* @SyntaxError_members)
!1933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1891, size: 2240, align: 64, elements: !1934)
!1934 = !{!1935}
!1935 = !DISubrange(count: 7)
!1936 = !DIGlobalVariable(name: "_PyExc_IndentationError", scope: !0, file: !1, line: 1434, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_IndentationError)
!1937 = !DIGlobalVariable(name: "_PyExc_TabError", scope: !0, file: !1, line: 1441, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_TabError)
!1938 = !DIGlobalVariable(name: "_PyExc_LookupError", scope: !0, file: !1, line: 1448, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_LookupError)
!1939 = !DIGlobalVariable(name: "_PyExc_IndexError", scope: !0, file: !1, line: 1455, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_IndexError)
!1940 = !DIGlobalVariable(name: "_PyExc_KeyError", scope: !0, file: !1, line: 1480, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_KeyError)
!1941 = !DIGlobalVariable(name: "_PyExc_ValueError", scope: !0, file: !1, line: 1487, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_ValueError)
!1942 = !DIGlobalVariable(name: "_PyExc_UnicodeError", scope: !0, file: !1, line: 1494, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_UnicodeError)
!1943 = !DIGlobalVariable(name: "_PyExc_UnicodeEncodeError", scope: !0, file: !1, line: 1883, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_UnicodeEncodeError)
!1944 = !DIGlobalVariable(name: "UnicodeError_members", scope: !0, file: !1, line: 1777, type: !1945, isLocal: true, isDefinition: true, variable: [6 x %struct.PyMemberDef]* @UnicodeError_members)
!1945 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1891, size: 1920, align: 64, elements: !1884)
!1946 = !DIGlobalVariable(name: "_PyExc_UnicodeDecodeError", scope: !0, file: !1, line: 1999, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_UnicodeDecodeError)
!1947 = !DIGlobalVariable(name: "_PyExc_UnicodeTranslateError", scope: !0, file: !1, line: 2098, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_UnicodeTranslateError)
!1948 = !DIGlobalVariable(name: "_PyExc_AssertionError", scope: !0, file: !1, line: 2134, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_AssertionError)
!1949 = !DIGlobalVariable(name: "_PyExc_ArithmeticError", scope: !0, file: !1, line: 2141, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_ArithmeticError)
!1950 = !DIGlobalVariable(name: "_PyExc_FloatingPointError", scope: !0, file: !1, line: 2148, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_FloatingPointError)
!1951 = !DIGlobalVariable(name: "_PyExc_OverflowError", scope: !0, file: !1, line: 2155, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_OverflowError)
!1952 = !DIGlobalVariable(name: "_PyExc_ZeroDivisionError", scope: !0, file: !1, line: 2162, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_ZeroDivisionError)
!1953 = !DIGlobalVariable(name: "_PyExc_SystemError", scope: !0, file: !1, line: 2169, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_SystemError)
!1954 = !DIGlobalVariable(name: "_PyExc_ReferenceError", scope: !0, file: !1, line: 2179, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_ReferenceError)
!1955 = !DIGlobalVariable(name: "_PyExc_MemoryError", scope: !0, file: !1, line: 2257, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_MemoryError)
!1956 = !DIGlobalVariable(name: "memerrors_numfree", scope: !0, file: !1, line: 2189, type: !56, isLocal: true, isDefinition: true, variable: i32* @memerrors_numfree)
!1957 = !DIGlobalVariable(name: "memerrors_freelist", scope: !0, file: !1, line: 2188, type: !11, isLocal: true, isDefinition: true, variable: %struct.PyBaseExceptionObject** @memerrors_freelist)
!1958 = !DIGlobalVariable(name: "_PyExc_BufferError", scope: !0, file: !1, line: 2275, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_BufferError)
!1959 = !DIGlobalVariable(name: "_PyExc_Warning", scope: !0, file: !1, line: 2283, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_Warning)
!1960 = !DIGlobalVariable(name: "_PyExc_UserWarning", scope: !0, file: !1, line: 2290, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_UserWarning)
!1961 = !DIGlobalVariable(name: "_PyExc_DeprecationWarning", scope: !0, file: !1, line: 2297, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_DeprecationWarning)
!1962 = !DIGlobalVariable(name: "_PyExc_PendingDeprecationWarning", scope: !0, file: !1, line: 2304, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_PendingDeprecationWarning)
!1963 = !DIGlobalVariable(name: "_PyExc_SyntaxWarning", scope: !0, file: !1, line: 2312, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_SyntaxWarning)
!1964 = !DIGlobalVariable(name: "_PyExc_RuntimeWarning", scope: !0, file: !1, line: 2319, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_RuntimeWarning)
!1965 = !DIGlobalVariable(name: "_PyExc_FutureWarning", scope: !0, file: !1, line: 2326, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_FutureWarning)
!1966 = !DIGlobalVariable(name: "_PyExc_ImportWarning", scope: !0, file: !1, line: 2334, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_ImportWarning)
!1967 = !DIGlobalVariable(name: "_PyExc_UnicodeWarning", scope: !0, file: !1, line: 2341, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_UnicodeWarning)
!1968 = !DIGlobalVariable(name: "_PyExc_BytesWarning", scope: !0, file: !1, line: 2349, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_BytesWarning)
!1969 = !DIGlobalVariable(name: "_PyExc_ResourceWarning", scope: !0, file: !1, line: 2357, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_ResourceWarning)
!1970 = !DIGlobalVariable(name: "errnomap", scope: !0, file: !1, line: 21, type: !50, isLocal: true, isDefinition: true, variable: %struct._object** @errnomap)
!1971 = !{i32 2, !"Dwarf Version", i32 4}
!1972 = !{i32 2, !"Debug Info Version", i32 3}
!1973 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
!1974 = !DIExpression()
!1975 = !DILocation(line: 312, column: 36, scope: !489)
!1976 = !DILocation(line: 314, column: 5, scope: !1977)
!1977 = !DILexicalBlockFile(scope: !494, file: !1, discriminator: 1)
!1978 = !DILocation(line: 315, column: 23, scope: !489)
!1979 = !{!1980, !1985, i64 32}
!1980 = !{!"", !1981, i64 0, !1985, i64 16, !1985, i64 24, !1985, i64 32, !1985, i64 40, !1985, i64 48, !1983, i64 56}
!1981 = !{!"_object", !1982, i64 0, !1985, i64 8}
!1982 = !{!"long", !1983, i64 0}
!1983 = !{!"omnipotent char", !1984, i64 0}
!1984 = !{!"Simple C/C++ TBAA"}
!1985 = !{!"any pointer", !1983, i64 0}
!1986 = !DILocation(line: 314, column: 5, scope: !1987)
!1987 = distinct !DILexicalBlock(scope: !494, file: !1, line: 314, column: 5)
!1988 = !DILocation(line: 314, column: 5, scope: !494)
!1989 = !DILocation(line: 314, column: 5, scope: !1990)
!1990 = !DILexicalBlockFile(scope: !1987, file: !1, discriminator: 2)
!1991 = !{!1981, !1982, i64 0}
!1992 = !DILocation(line: 315, column: 5, scope: !489)
!1993 = !DILocation(line: 320, column: 36, scope: !495)
!1994 = !DILocation(line: 320, column: 52, scope: !495)
!1995 = !DILocation(line: 226, column: 61, scope: !843, inlinedAt: !1996)
!1996 = distinct !DILocation(line: 321, column: 12, scope: !495)
!1997 = !DILocation(line: 228, column: 12, scope: !1998, inlinedAt: !1996)
!1998 = distinct !DILexicalBlock(scope: !843, file: !1, line: 228, column: 9)
!1999 = !DILocation(line: 228, column: 9, scope: !843, inlinedAt: !1996)
!2000 = !DILocation(line: 229, column: 25, scope: !2001, inlinedAt: !1996)
!2001 = distinct !DILexicalBlock(scope: !1998, file: !1, line: 228, column: 21)
!2002 = !{!1985, !1985, i64 0}
!2003 = !DILocation(line: 229, column: 9, scope: !2001, inlinedAt: !1996)
!2004 = !DILocation(line: 230, column: 9, scope: !2001, inlinedAt: !1996)
!2005 = !DILocation(line: 232, column: 19, scope: !2006, inlinedAt: !1996)
!2006 = distinct !DILexicalBlock(scope: !1998, file: !1, line: 232, column: 14)
!2007 = !DILocation(line: 232, column: 30, scope: !2006, inlinedAt: !1996)
!2008 = !DILocation(line: 232, column: 33, scope: !2009, inlinedAt: !1996)
!2009 = !DILexicalBlockFile(scope: !2006, file: !1, discriminator: 1)
!2010 = !{!1981, !1985, i64 8}
!2011 = !DILocation(line: 232, column: 14, scope: !1998, inlinedAt: !1996)
!2012 = !DILocation(line: 233, column: 25, scope: !2013, inlinedAt: !1996)
!2013 = distinct !DILexicalBlock(scope: !2006, file: !1, line: 232, column: 57)
!2014 = !DILocation(line: 233, column: 9, scope: !2013, inlinedAt: !1996)
!2015 = !DILocation(line: 235, column: 9, scope: !2013, inlinedAt: !1996)
!2016 = !DILocation(line: 238, column: 5, scope: !2017, inlinedAt: !1996)
!2017 = !DILexicalBlockFile(scope: !850, file: !1, discriminator: 1)
!2018 = !DILocation(line: 238, column: 5, scope: !2019, inlinedAt: !1996)
!2019 = !DILexicalBlockFile(scope: !2020, file: !1, discriminator: 2)
!2020 = distinct !DILexicalBlock(scope: !850, file: !1, line: 238, column: 5)
!2021 = !DILocation(line: 239, column: 5, scope: !2022, inlinedAt: !1996)
!2022 = !DILexicalBlockFile(scope: !852, file: !1, discriminator: 1)
!2023 = !DILocation(line: 239, column: 5, scope: !855, inlinedAt: !1996)
!2024 = !DILocation(line: 239, column: 5, scope: !852, inlinedAt: !1996)
!2025 = !DILocation(line: 239, column: 5, scope: !2026, inlinedAt: !1996)
!2026 = !DILexicalBlockFile(scope: !854, file: !1, discriminator: 4)
!2027 = !DILocation(line: 239, column: 5, scope: !2028, inlinedAt: !1996)
!2028 = distinct !DILexicalBlock(scope: !854, file: !1, line: 239, column: 5)
!2029 = !DILocation(line: 239, column: 5, scope: !854, inlinedAt: !1996)
!2030 = !DILocation(line: 239, column: 5, scope: !2031, inlinedAt: !1996)
!2031 = !DILexicalBlockFile(scope: !2028, file: !1, discriminator: 6)
!2032 = !{!2033, !1985, i64 48}
!2033 = !{!"_typeobject", !2034, i64 0, !1985, i64 24, !1982, i64 32, !1982, i64 40, !1985, i64 48, !1985, i64 56, !1985, i64 64, !1985, i64 72, !1985, i64 80, !1985, i64 88, !1985, i64 96, !1985, i64 104, !1985, i64 112, !1985, i64 120, !1985, i64 128, !1985, i64 136, !1985, i64 144, !1985, i64 152, !1985, i64 160, !1982, i64 168, !1985, i64 176, !1985, i64 184, !1985, i64 192, !1985, i64 200, !1982, i64 208, !1985, i64 216, !1985, i64 224, !1985, i64 232, !1985, i64 240, !1985, i64 248, !1985, i64 256, !1985, i64 264, !1985, i64 272, !1985, i64 280, !1982, i64 288, !1985, i64 296, !1985, i64 304, !1985, i64 312, !1985, i64 320, !1985, i64 328, !1985, i64 336, !1985, i64 344, !1985, i64 352, !1985, i64 360, !1985, i64 368, !1985, i64 376, !2035, i64 384, !1985, i64 392}
!2034 = !{!"", !1981, i64 0, !1982, i64 16}
!2035 = !{!"int", !1983, i64 0}
!2036 = !DILocation(line: 321, column: 12, scope: !495)
!2037 = !DILocation(line: 240, column: 21, scope: !843, inlinedAt: !1996)
!2038 = !DILocation(line: 241, column: 5, scope: !843, inlinedAt: !1996)
!2039 = !DILocation(line: 321, column: 5, scope: !495)
!2040 = !DILocation(line: 226, column: 45, scope: !843)
!2041 = !DILocation(line: 226, column: 61, scope: !843)
!2042 = !DILocation(line: 228, column: 12, scope: !1998)
!2043 = !DILocation(line: 228, column: 9, scope: !843)
!2044 = !DILocation(line: 229, column: 25, scope: !2001)
!2045 = !DILocation(line: 229, column: 9, scope: !2001)
!2046 = !DILocation(line: 230, column: 9, scope: !2001)
!2047 = !DILocation(line: 232, column: 19, scope: !2006)
!2048 = !DILocation(line: 232, column: 30, scope: !2006)
!2049 = !DILocation(line: 232, column: 33, scope: !2009)
!2050 = !DILocation(line: 232, column: 14, scope: !1998)
!2051 = !DILocation(line: 233, column: 25, scope: !2013)
!2052 = !DILocation(line: 233, column: 9, scope: !2013)
!2053 = !DILocation(line: 235, column: 9, scope: !2013)
!2054 = !DILocation(line: 238, column: 5, scope: !2017)
!2055 = !DILocation(line: 238, column: 5, scope: !2019)
!2056 = !DILocation(line: 239, column: 5, scope: !2022)
!2057 = !DILocation(line: 239, column: 5, scope: !855)
!2058 = !DILocation(line: 239, column: 5, scope: !852)
!2059 = !DILocation(line: 239, column: 5, scope: !2026)
!2060 = !DILocation(line: 239, column: 5, scope: !2028)
!2061 = !DILocation(line: 239, column: 5, scope: !854)
!2062 = !DILocation(line: 239, column: 5, scope: !2031)
!2063 = !DILocation(line: 240, column: 21, scope: !843)
!2064 = !DILocation(line: 241, column: 5, scope: !843)
!2065 = !DILocation(line: 242, column: 1, scope: !843)
!2066 = !DILocation(line: 325, column: 32, scope: !499)
!2067 = !DILocation(line: 326, column: 56, scope: !499)
!2068 = !{!1980, !1985, i64 48}
!2069 = !DILocation(line: 326, column: 15, scope: !499)
!2070 = !DILocation(line: 327, column: 5, scope: !2071)
!2071 = !DILexicalBlockFile(scope: !504, file: !1, discriminator: 1)
!2072 = !DILocation(line: 327, column: 5, scope: !2073)
!2073 = distinct !DILexicalBlock(scope: !504, file: !1, line: 327, column: 5)
!2074 = !DILocation(line: 327, column: 5, scope: !504)
!2075 = !DILocation(line: 327, column: 5, scope: !2076)
!2076 = !DILexicalBlockFile(scope: !2073, file: !1, discriminator: 2)
!2077 = !DILocation(line: 328, column: 5, scope: !499)
!2078 = !DILocation(line: 333, column: 32, scope: !505)
!2079 = !DILocation(line: 333, column: 48, scope: !505)
!2080 = !DILocation(line: 334, column: 60, scope: !505)
!2081 = !DILocation(line: 334, column: 15, scope: !505)
!2082 = !DILocation(line: 335, column: 44, scope: !505)
!2083 = !DILocation(line: 336, column: 38, scope: !505)
!2084 = !DILocation(line: 336, column: 55, scope: !505)
!2085 = !{!1980, !1983, i64 56}
!2086 = !DILocation(line: 337, column: 5, scope: !2087)
!2087 = !DILexicalBlockFile(scope: !513, file: !1, discriminator: 1)
!2088 = !DILocation(line: 337, column: 5, scope: !516)
!2089 = !DILocation(line: 337, column: 5, scope: !513)
!2090 = !DILocation(line: 337, column: 5, scope: !2091)
!2091 = !DILexicalBlockFile(scope: !515, file: !1, discriminator: 4)
!2092 = !DILocation(line: 337, column: 5, scope: !2093)
!2093 = distinct !DILexicalBlock(scope: !515, file: !1, line: 337, column: 5)
!2094 = !DILocation(line: 337, column: 5, scope: !515)
!2095 = !DILocation(line: 337, column: 5, scope: !2096)
!2096 = !DILexicalBlockFile(scope: !2093, file: !1, discriminator: 6)
!2097 = !DILocation(line: 338, column: 1, scope: !505)
!2098 = !DILocation(line: 341, column: 34, scope: !517)
!2099 = !DILocation(line: 342, column: 58, scope: !517)
!2100 = !{!1980, !1985, i64 40}
!2101 = !DILocation(line: 342, column: 15, scope: !517)
!2102 = !DILocation(line: 343, column: 5, scope: !2103)
!2103 = !DILexicalBlockFile(scope: !522, file: !1, discriminator: 1)
!2104 = !DILocation(line: 343, column: 5, scope: !2105)
!2105 = distinct !DILexicalBlock(scope: !522, file: !1, line: 343, column: 5)
!2106 = !DILocation(line: 343, column: 5, scope: !522)
!2107 = !DILocation(line: 343, column: 5, scope: !2108)
!2108 = !DILexicalBlockFile(scope: !2105, file: !1, discriminator: 2)
!2109 = !DILocation(line: 344, column: 5, scope: !517)
!2110 = !DILocation(line: 349, column: 34, scope: !523)
!2111 = !DILocation(line: 349, column: 50, scope: !523)
!2112 = !DILocation(line: 350, column: 62, scope: !523)
!2113 = !DILocation(line: 350, column: 15, scope: !523)
!2114 = !DILocation(line: 351, column: 46, scope: !523)
!2115 = !DILocation(line: 352, column: 5, scope: !2116)
!2116 = !DILexicalBlockFile(scope: !529, file: !1, discriminator: 1)
!2117 = !DILocation(line: 352, column: 5, scope: !532)
!2118 = !DILocation(line: 352, column: 5, scope: !529)
!2119 = !DILocation(line: 352, column: 5, scope: !2120)
!2120 = !DILexicalBlockFile(scope: !531, file: !1, discriminator: 4)
!2121 = !DILocation(line: 352, column: 5, scope: !2122)
!2122 = distinct !DILexicalBlock(scope: !531, file: !1, line: 352, column: 5)
!2123 = !DILocation(line: 352, column: 5, scope: !531)
!2124 = !DILocation(line: 352, column: 5, scope: !2125)
!2125 = !DILexicalBlockFile(scope: !2122, file: !1, discriminator: 6)
!2126 = !DILocation(line: 353, column: 1, scope: !523)
!2127 = !DILocation(line: 1542, column: 44, scope: !533)
!2128 = !DILocation(line: 1544, column: 55, scope: !533)
!2129 = !{!2130, !1985, i64 64}
!2130 = !{!"", !1981, i64 0, !1985, i64 16, !1985, i64 24, !1985, i64 32, !1985, i64 40, !1985, i64 48, !1983, i64 56, !1985, i64 64, !1985, i64 72, !1982, i64 80, !1982, i64 88, !1985, i64 96}
!2131 = !DILocation(line: 1514, column: 23, scope: !1553, inlinedAt: !2132)
!2132 = distinct !DILocation(line: 1544, column: 12, scope: !533)
!2133 = !DILocation(line: 1514, column: 41, scope: !1553, inlinedAt: !2132)
!2134 = !DILocation(line: 1516, column: 10, scope: !2135, inlinedAt: !2132)
!2135 = distinct !DILexicalBlock(scope: !1553, file: !1, line: 1516, column: 9)
!2136 = !DILocation(line: 1516, column: 9, scope: !1553, inlinedAt: !2132)
!2137 = !DILocation(line: 1517, column: 22, scope: !2138, inlinedAt: !2132)
!2138 = distinct !DILexicalBlock(scope: !2135, file: !1, line: 1516, column: 16)
!2139 = !DILocation(line: 1517, column: 9, scope: !2138, inlinedAt: !2132)
!2140 = !DILocation(line: 1518, column: 9, scope: !2138, inlinedAt: !2132)
!2141 = !DILocation(line: 1521, column: 10, scope: !2142, inlinedAt: !2132)
!2142 = distinct !DILexicalBlock(scope: !1553, file: !1, line: 1521, column: 9)
!2143 = !{!2033, !1982, i64 168}
!2144 = !DILocation(line: 1521, column: 9, scope: !1553, inlinedAt: !2132)
!2145 = !DILocation(line: 1522, column: 22, scope: !2146, inlinedAt: !2132)
!2146 = distinct !DILexicalBlock(scope: !2142, file: !1, line: 1521, column: 33)
!2147 = !DILocation(line: 1522, column: 9, scope: !2146, inlinedAt: !2132)
!2148 = !DILocation(line: 1524, column: 9, scope: !2146, inlinedAt: !2132)
!2149 = !DILocation(line: 1526, column: 5, scope: !1553, inlinedAt: !2132)
!2150 = !DILocation(line: 1527, column: 5, scope: !1553, inlinedAt: !2132)
!2151 = !DILocation(line: 1544, column: 12, scope: !533)
!2152 = !DILocation(line: 1544, column: 5, scope: !533)
!2153 = !DILocation(line: 1548, column: 44, scope: !536)
!2154 = !DILocation(line: 1550, column: 55, scope: !536)
!2155 = !DILocation(line: 1514, column: 23, scope: !1553, inlinedAt: !2156)
!2156 = distinct !DILocation(line: 1550, column: 12, scope: !536)
!2157 = !DILocation(line: 1514, column: 41, scope: !1553, inlinedAt: !2156)
!2158 = !DILocation(line: 1516, column: 10, scope: !2135, inlinedAt: !2156)
!2159 = !DILocation(line: 1516, column: 9, scope: !1553, inlinedAt: !2156)
!2160 = !DILocation(line: 1517, column: 22, scope: !2138, inlinedAt: !2156)
!2161 = !DILocation(line: 1517, column: 9, scope: !2138, inlinedAt: !2156)
!2162 = !DILocation(line: 1518, column: 9, scope: !2138, inlinedAt: !2156)
!2163 = !DILocation(line: 1521, column: 10, scope: !2142, inlinedAt: !2156)
!2164 = !DILocation(line: 1521, column: 9, scope: !1553, inlinedAt: !2156)
!2165 = !DILocation(line: 1522, column: 22, scope: !2146, inlinedAt: !2156)
!2166 = !DILocation(line: 1522, column: 9, scope: !2146, inlinedAt: !2156)
!2167 = !DILocation(line: 1524, column: 9, scope: !2146, inlinedAt: !2156)
!2168 = !DILocation(line: 1526, column: 5, scope: !1553, inlinedAt: !2156)
!2169 = !DILocation(line: 1527, column: 5, scope: !1553, inlinedAt: !2156)
!2170 = !DILocation(line: 1550, column: 12, scope: !536)
!2171 = !DILocation(line: 1550, column: 5, scope: !536)
!2172 = !DILocation(line: 1554, column: 42, scope: !539)
!2173 = !DILocation(line: 1556, column: 55, scope: !539)
!2174 = !{!2130, !1985, i64 72}
!2175 = !DILocation(line: 1514, column: 23, scope: !1553, inlinedAt: !2176)
!2176 = distinct !DILocation(line: 1556, column: 12, scope: !539)
!2177 = !DILocation(line: 1514, column: 41, scope: !1553, inlinedAt: !2176)
!2178 = !DILocation(line: 1516, column: 10, scope: !2135, inlinedAt: !2176)
!2179 = !DILocation(line: 1516, column: 9, scope: !1553, inlinedAt: !2176)
!2180 = !DILocation(line: 1517, column: 22, scope: !2138, inlinedAt: !2176)
!2181 = !DILocation(line: 1517, column: 9, scope: !2138, inlinedAt: !2176)
!2182 = !DILocation(line: 1518, column: 9, scope: !2138, inlinedAt: !2176)
!2183 = !DILocation(line: 1521, column: 10, scope: !2142, inlinedAt: !2176)
!2184 = !DILocation(line: 1521, column: 9, scope: !1553, inlinedAt: !2176)
!2185 = !DILocation(line: 1522, column: 22, scope: !2146, inlinedAt: !2176)
!2186 = !DILocation(line: 1522, column: 9, scope: !2146, inlinedAt: !2176)
!2187 = !DILocation(line: 1524, column: 9, scope: !2146, inlinedAt: !2176)
!2188 = !DILocation(line: 1526, column: 5, scope: !1553, inlinedAt: !2176)
!2189 = !DILocation(line: 1527, column: 5, scope: !1553, inlinedAt: !2176)
!2190 = !DILocation(line: 1556, column: 12, scope: !539)
!2191 = !DILocation(line: 1556, column: 5, scope: !539)
!2192 = !DILocation(line: 1560, column: 42, scope: !542)
!2193 = !DILocation(line: 1562, column: 54, scope: !542)
!2194 = !DILocation(line: 1498, column: 40, scope: !1559, inlinedAt: !2195)
!2195 = distinct !DILocation(line: 1562, column: 12, scope: !542)
!2196 = !DILocation(line: 1500, column: 10, scope: !2197, inlinedAt: !2195)
!2197 = distinct !DILexicalBlock(scope: !1559, file: !1, line: 1500, column: 9)
!2198 = !DILocation(line: 1500, column: 9, scope: !1559, inlinedAt: !2195)
!2199 = !DILocation(line: 1501, column: 22, scope: !2200, inlinedAt: !2195)
!2200 = distinct !DILexicalBlock(scope: !2197, file: !1, line: 1500, column: 16)
!2201 = !DILocation(line: 1501, column: 9, scope: !2200, inlinedAt: !2195)
!2202 = !DILocation(line: 1502, column: 9, scope: !2200, inlinedAt: !2195)
!2203 = !DILocation(line: 1505, column: 10, scope: !2204, inlinedAt: !2195)
!2204 = distinct !DILexicalBlock(scope: !1559, file: !1, line: 1505, column: 9)
!2205 = !DILocation(line: 1505, column: 9, scope: !1559, inlinedAt: !2195)
!2206 = !DILocation(line: 1506, column: 22, scope: !2207, inlinedAt: !2195)
!2207 = distinct !DILexicalBlock(scope: !2204, file: !1, line: 1505, column: 31)
!2208 = !DILocation(line: 1506, column: 9, scope: !2207, inlinedAt: !2195)
!2209 = !DILocation(line: 1507, column: 9, scope: !2207, inlinedAt: !2195)
!2210 = !DILocation(line: 1509, column: 5, scope: !1559, inlinedAt: !2195)
!2211 = !DILocation(line: 1510, column: 5, scope: !1559, inlinedAt: !2195)
!2212 = !DILocation(line: 1562, column: 12, scope: !542)
!2213 = !DILocation(line: 1562, column: 5, scope: !542)
!2214 = !DILocation(line: 1566, column: 45, scope: !545)
!2215 = !DILocation(line: 1568, column: 55, scope: !545)
!2216 = !DILocation(line: 1514, column: 23, scope: !1553, inlinedAt: !2217)
!2217 = distinct !DILocation(line: 1568, column: 12, scope: !545)
!2218 = !DILocation(line: 1514, column: 41, scope: !1553, inlinedAt: !2217)
!2219 = !DILocation(line: 1516, column: 10, scope: !2135, inlinedAt: !2217)
!2220 = !DILocation(line: 1516, column: 9, scope: !1553, inlinedAt: !2217)
!2221 = !DILocation(line: 1517, column: 22, scope: !2138, inlinedAt: !2217)
!2222 = !DILocation(line: 1517, column: 9, scope: !2138, inlinedAt: !2217)
!2223 = !DILocation(line: 1518, column: 9, scope: !2138, inlinedAt: !2217)
!2224 = !DILocation(line: 1521, column: 10, scope: !2142, inlinedAt: !2217)
!2225 = !DILocation(line: 1521, column: 9, scope: !1553, inlinedAt: !2217)
!2226 = !DILocation(line: 1522, column: 22, scope: !2146, inlinedAt: !2217)
!2227 = !DILocation(line: 1522, column: 9, scope: !2146, inlinedAt: !2217)
!2228 = !DILocation(line: 1524, column: 9, scope: !2146, inlinedAt: !2217)
!2229 = !DILocation(line: 1526, column: 5, scope: !1553, inlinedAt: !2217)
!2230 = !DILocation(line: 1527, column: 5, scope: !1553, inlinedAt: !2217)
!2231 = !DILocation(line: 1568, column: 12, scope: !545)
!2232 = !DILocation(line: 1568, column: 5, scope: !545)
!2233 = !DILocation(line: 1572, column: 41, scope: !548)
!2234 = !DILocation(line: 1572, column: 58, scope: !548)
!2235 = !DILocation(line: 1575, column: 64, scope: !548)
!2236 = !DILocation(line: 1514, column: 23, scope: !1553, inlinedAt: !2237)
!2237 = distinct !DILocation(line: 1575, column: 21, scope: !548)
!2238 = !DILocation(line: 1514, column: 41, scope: !1553, inlinedAt: !2237)
!2239 = !DILocation(line: 1516, column: 10, scope: !2135, inlinedAt: !2237)
!2240 = !DILocation(line: 1516, column: 9, scope: !1553, inlinedAt: !2237)
!2241 = !DILocation(line: 1517, column: 22, scope: !2138, inlinedAt: !2237)
!2242 = !DILocation(line: 1517, column: 9, scope: !2138, inlinedAt: !2237)
!2243 = !DILocation(line: 1518, column: 9, scope: !2138, inlinedAt: !2237)
!2244 = !DILocation(line: 1521, column: 10, scope: !2142, inlinedAt: !2237)
!2245 = !DILocation(line: 1585, column: 5, scope: !2246)
!2246 = !DILexicalBlockFile(scope: !2247, file: !1, discriminator: 3)
!2247 = distinct !DILexicalBlock(scope: !557, file: !1, line: 1585, column: 5)
!2248 = !DILocation(line: 1521, column: 9, scope: !1553, inlinedAt: !2237)
!2249 = !DILocation(line: 1522, column: 22, scope: !2146, inlinedAt: !2237)
!2250 = !DILocation(line: 1522, column: 9, scope: !2146, inlinedAt: !2237)
!2251 = !DILocation(line: 1524, column: 9, scope: !2146, inlinedAt: !2237)
!2252 = !DILocation(line: 1526, column: 5, scope: !1553, inlinedAt: !2237)
!2253 = !DILocation(line: 1575, column: 15, scope: !548)
!2254 = !DILocation(line: 1579, column: 45, scope: !548)
!2255 = !{!2130, !1982, i64 80}
!2256 = !DILocation(line: 1579, column: 12, scope: !548)
!2257 = !{!1982, !1982, i64 0}
!2258 = !DILocation(line: 1580, column: 12, scope: !548)
!2259 = !{!2260, !1982, i64 16}
!2260 = !{!"", !1981, i64 0, !1982, i64 16, !1982, i64 24, !2261, i64 32, !1985, i64 40}
!2261 = !{!"", !2035, i64 0, !2035, i64 0, !2035, i64 0, !2035, i64 0, !2035, i64 0, !2035, i64 1}
!2262 = !DILocation(line: 1574, column: 16, scope: !548)
!2263 = !DILocation(line: 1581, column: 15, scope: !2264)
!2264 = distinct !DILexicalBlock(scope: !548, file: !1, line: 1581, column: 9)
!2265 = !DILocation(line: 1581, column: 9, scope: !548)
!2266 = !DILocation(line: 1583, column: 15, scope: !2267)
!2267 = distinct !DILexicalBlock(scope: !548, file: !1, line: 1583, column: 9)
!2268 = !DILocation(line: 1584, column: 22, scope: !2267)
!2269 = !DILocation(line: 1583, column: 9, scope: !548)
!2270 = !DILocation(line: 1582, column: 16, scope: !2264)
!2271 = !DILocation(line: 1585, column: 5, scope: !2272)
!2272 = !DILexicalBlockFile(scope: !557, file: !1, discriminator: 1)
!2273 = !DILocation(line: 1585, column: 5, scope: !2247)
!2274 = !DILocation(line: 1585, column: 5, scope: !557)
!2275 = !DILocation(line: 1587, column: 1, scope: !548)
!2276 = !DILocation(line: 1591, column: 41, scope: !558)
!2277 = !DILocation(line: 1591, column: 58, scope: !558)
!2278 = !DILocation(line: 1594, column: 63, scope: !558)
!2279 = !DILocation(line: 1498, column: 40, scope: !1559, inlinedAt: !2280)
!2280 = distinct !DILocation(line: 1594, column: 21, scope: !558)
!2281 = !DILocation(line: 1500, column: 10, scope: !2197, inlinedAt: !2280)
!2282 = !DILocation(line: 1500, column: 9, scope: !1559, inlinedAt: !2280)
!2283 = !DILocation(line: 1501, column: 22, scope: !2200, inlinedAt: !2280)
!2284 = !DILocation(line: 1501, column: 9, scope: !2200, inlinedAt: !2280)
!2285 = !DILocation(line: 1502, column: 9, scope: !2200, inlinedAt: !2280)
!2286 = !DILocation(line: 1505, column: 10, scope: !2204, inlinedAt: !2280)
!2287 = !DILocation(line: 1603, column: 5, scope: !2288)
!2288 = !DILexicalBlockFile(scope: !2289, file: !1, discriminator: 3)
!2289 = distinct !DILexicalBlock(scope: !565, file: !1, line: 1603, column: 5)
!2290 = !DILocation(line: 1505, column: 9, scope: !1559, inlinedAt: !2280)
!2291 = !DILocation(line: 1506, column: 22, scope: !2207, inlinedAt: !2280)
!2292 = !DILocation(line: 1506, column: 9, scope: !2207, inlinedAt: !2280)
!2293 = !DILocation(line: 1507, column: 9, scope: !2207, inlinedAt: !2280)
!2294 = !DILocation(line: 1509, column: 5, scope: !1559, inlinedAt: !2280)
!2295 = !DILocation(line: 1594, column: 15, scope: !558)
!2296 = !DILocation(line: 1597, column: 12, scope: !558)
!2297 = !{!2034, !1982, i64 16}
!2298 = !DILocation(line: 1593, column: 16, scope: !558)
!2299 = !DILocation(line: 1598, column: 45, scope: !558)
!2300 = !DILocation(line: 1599, column: 15, scope: !2301)
!2301 = distinct !DILexicalBlock(scope: !558, file: !1, line: 1599, column: 9)
!2302 = !DILocation(line: 1599, column: 9, scope: !558)
!2303 = !DILocation(line: 1601, column: 15, scope: !2304)
!2304 = distinct !DILexicalBlock(scope: !558, file: !1, line: 1601, column: 9)
!2305 = !DILocation(line: 1602, column: 22, scope: !2304)
!2306 = !DILocation(line: 1601, column: 9, scope: !558)
!2307 = !DILocation(line: 1598, column: 12, scope: !558)
!2308 = !DILocation(line: 1603, column: 5, scope: !2309)
!2309 = !DILexicalBlockFile(scope: !565, file: !1, discriminator: 1)
!2310 = !DILocation(line: 1603, column: 5, scope: !2289)
!2311 = !DILocation(line: 1603, column: 5, scope: !565)
!2312 = !DILocation(line: 1605, column: 1, scope: !558)
!2313 = !DILocation(line: 1609, column: 44, scope: !566)
!2314 = !DILocation(line: 1609, column: 61, scope: !566)
!2315 = !DILocation(line: 1572, column: 41, scope: !548, inlinedAt: !2316)
!2316 = distinct !DILocation(line: 1611, column: 12, scope: !566)
!2317 = !DILocation(line: 1572, column: 58, scope: !548, inlinedAt: !2316)
!2318 = !DILocation(line: 1575, column: 64, scope: !548, inlinedAt: !2316)
!2319 = !DILocation(line: 1514, column: 23, scope: !1553, inlinedAt: !2320)
!2320 = distinct !DILocation(line: 1575, column: 21, scope: !548, inlinedAt: !2316)
!2321 = !DILocation(line: 1514, column: 41, scope: !1553, inlinedAt: !2320)
!2322 = !DILocation(line: 1516, column: 10, scope: !2135, inlinedAt: !2320)
!2323 = !DILocation(line: 1516, column: 9, scope: !1553, inlinedAt: !2320)
!2324 = !DILocation(line: 1517, column: 22, scope: !2138, inlinedAt: !2320)
!2325 = !DILocation(line: 1517, column: 9, scope: !2138, inlinedAt: !2320)
!2326 = !DILocation(line: 1518, column: 9, scope: !2138, inlinedAt: !2320)
!2327 = !DILocation(line: 1521, column: 10, scope: !2142, inlinedAt: !2320)
!2328 = !DILocation(line: 1585, column: 5, scope: !2246, inlinedAt: !2316)
!2329 = !DILocation(line: 1521, column: 9, scope: !1553, inlinedAt: !2320)
!2330 = !DILocation(line: 1522, column: 22, scope: !2146, inlinedAt: !2320)
!2331 = !DILocation(line: 1522, column: 9, scope: !2146, inlinedAt: !2320)
!2332 = !DILocation(line: 1524, column: 9, scope: !2146, inlinedAt: !2320)
!2333 = !DILocation(line: 1526, column: 5, scope: !1553, inlinedAt: !2320)
!2334 = !DILocation(line: 1575, column: 15, scope: !548, inlinedAt: !2316)
!2335 = !DILocation(line: 1579, column: 45, scope: !548, inlinedAt: !2316)
!2336 = !DILocation(line: 1579, column: 12, scope: !548, inlinedAt: !2316)
!2337 = !DILocation(line: 1580, column: 12, scope: !548, inlinedAt: !2316)
!2338 = !DILocation(line: 1574, column: 16, scope: !548, inlinedAt: !2316)
!2339 = !DILocation(line: 1581, column: 15, scope: !2264, inlinedAt: !2316)
!2340 = !DILocation(line: 1581, column: 9, scope: !548, inlinedAt: !2316)
!2341 = !DILocation(line: 1583, column: 15, scope: !2267, inlinedAt: !2316)
!2342 = !DILocation(line: 1584, column: 22, scope: !2267, inlinedAt: !2316)
!2343 = !DILocation(line: 1583, column: 9, scope: !548, inlinedAt: !2316)
!2344 = !DILocation(line: 1582, column: 16, scope: !2264, inlinedAt: !2316)
!2345 = !DILocation(line: 1585, column: 5, scope: !2272, inlinedAt: !2316)
!2346 = !DILocation(line: 1585, column: 5, scope: !2247, inlinedAt: !2316)
!2347 = !DILocation(line: 1585, column: 5, scope: !557, inlinedAt: !2316)
!2348 = !DILocation(line: 1611, column: 12, scope: !566)
!2349 = !DILocation(line: 1611, column: 5, scope: !566)
!2350 = !DILocation(line: 1616, column: 41, scope: !570)
!2351 = !DILocation(line: 1616, column: 57, scope: !570)
!2352 = !DILocation(line: 1618, column: 36, scope: !570)
!2353 = !DILocation(line: 1618, column: 42, scope: !570)
!2354 = !DILocation(line: 1619, column: 5, scope: !570)
!2355 = !DILocation(line: 1624, column: 41, scope: !576)
!2356 = !DILocation(line: 1624, column: 57, scope: !576)
!2357 = !DILocation(line: 1626, column: 36, scope: !576)
!2358 = !DILocation(line: 1626, column: 42, scope: !576)
!2359 = !DILocation(line: 1627, column: 5, scope: !576)
!2360 = !DILocation(line: 1632, column: 44, scope: !580)
!2361 = !DILocation(line: 1632, column: 60, scope: !580)
!2362 = !DILocation(line: 1634, column: 36, scope: !580)
!2363 = !DILocation(line: 1634, column: 42, scope: !580)
!2364 = !DILocation(line: 1635, column: 5, scope: !580)
!2365 = !DILocation(line: 1640, column: 39, scope: !584)
!2366 = !DILocation(line: 1640, column: 56, scope: !584)
!2367 = !DILocation(line: 1643, column: 64, scope: !584)
!2368 = !DILocation(line: 1514, column: 23, scope: !1553, inlinedAt: !2369)
!2369 = distinct !DILocation(line: 1643, column: 21, scope: !584)
!2370 = !DILocation(line: 1514, column: 41, scope: !1553, inlinedAt: !2369)
!2371 = !DILocation(line: 1516, column: 10, scope: !2135, inlinedAt: !2369)
!2372 = !DILocation(line: 1516, column: 9, scope: !1553, inlinedAt: !2369)
!2373 = !DILocation(line: 1517, column: 22, scope: !2138, inlinedAt: !2369)
!2374 = !DILocation(line: 1517, column: 9, scope: !2138, inlinedAt: !2369)
!2375 = !DILocation(line: 1518, column: 9, scope: !2138, inlinedAt: !2369)
!2376 = !DILocation(line: 1521, column: 10, scope: !2142, inlinedAt: !2369)
!2377 = !DILocation(line: 1653, column: 5, scope: !2378)
!2378 = !DILexicalBlockFile(scope: !2379, file: !1, discriminator: 3)
!2379 = distinct !DILexicalBlock(scope: !591, file: !1, line: 1653, column: 5)
!2380 = !DILocation(line: 1521, column: 9, scope: !1553, inlinedAt: !2369)
!2381 = !DILocation(line: 1522, column: 22, scope: !2146, inlinedAt: !2369)
!2382 = !DILocation(line: 1522, column: 9, scope: !2146, inlinedAt: !2369)
!2383 = !DILocation(line: 1524, column: 9, scope: !2146, inlinedAt: !2369)
!2384 = !DILocation(line: 1526, column: 5, scope: !1553, inlinedAt: !2369)
!2385 = !DILocation(line: 1643, column: 15, scope: !584)
!2386 = !DILocation(line: 1647, column: 43, scope: !584)
!2387 = !{!2130, !1982, i64 88}
!2388 = !DILocation(line: 1647, column: 10, scope: !584)
!2389 = !DILocation(line: 1648, column: 12, scope: !584)
!2390 = !DILocation(line: 1642, column: 16, scope: !584)
!2391 = !DILocation(line: 1649, column: 13, scope: !2392)
!2392 = distinct !DILexicalBlock(scope: !584, file: !1, line: 1649, column: 9)
!2393 = !DILocation(line: 1649, column: 9, scope: !584)
!2394 = !DILocation(line: 1651, column: 13, scope: !2395)
!2395 = distinct !DILexicalBlock(scope: !584, file: !1, line: 1651, column: 9)
!2396 = !DILocation(line: 1651, column: 9, scope: !584)
!2397 = !DILocation(line: 1652, column: 14, scope: !2395)
!2398 = !DILocation(line: 1653, column: 5, scope: !2399)
!2399 = !DILexicalBlockFile(scope: !591, file: !1, discriminator: 1)
!2400 = !DILocation(line: 1653, column: 5, scope: !2379)
!2401 = !DILocation(line: 1653, column: 5, scope: !591)
!2402 = !DILocation(line: 1655, column: 1, scope: !584)
!2403 = !DILocation(line: 1659, column: 39, scope: !592)
!2404 = !DILocation(line: 1659, column: 56, scope: !592)
!2405 = !DILocation(line: 1662, column: 63, scope: !592)
!2406 = !DILocation(line: 1498, column: 40, scope: !1559, inlinedAt: !2407)
!2407 = distinct !DILocation(line: 1662, column: 21, scope: !592)
!2408 = !DILocation(line: 1500, column: 10, scope: !2197, inlinedAt: !2407)
!2409 = !DILocation(line: 1500, column: 9, scope: !1559, inlinedAt: !2407)
!2410 = !DILocation(line: 1501, column: 22, scope: !2200, inlinedAt: !2407)
!2411 = !DILocation(line: 1501, column: 9, scope: !2200, inlinedAt: !2407)
!2412 = !DILocation(line: 1502, column: 9, scope: !2200, inlinedAt: !2407)
!2413 = !DILocation(line: 1505, column: 10, scope: !2204, inlinedAt: !2407)
!2414 = !DILocation(line: 1671, column: 5, scope: !2415)
!2415 = !DILexicalBlockFile(scope: !2416, file: !1, discriminator: 3)
!2416 = distinct !DILexicalBlock(scope: !599, file: !1, line: 1671, column: 5)
!2417 = !DILocation(line: 1505, column: 9, scope: !1559, inlinedAt: !2407)
!2418 = !DILocation(line: 1506, column: 22, scope: !2207, inlinedAt: !2407)
!2419 = !DILocation(line: 1506, column: 9, scope: !2207, inlinedAt: !2407)
!2420 = !DILocation(line: 1507, column: 9, scope: !2207, inlinedAt: !2407)
!2421 = !DILocation(line: 1509, column: 5, scope: !1559, inlinedAt: !2407)
!2422 = !DILocation(line: 1662, column: 15, scope: !592)
!2423 = !DILocation(line: 1665, column: 12, scope: !592)
!2424 = !DILocation(line: 1661, column: 16, scope: !592)
!2425 = !DILocation(line: 1666, column: 43, scope: !592)
!2426 = !DILocation(line: 1667, column: 13, scope: !2427)
!2427 = distinct !DILexicalBlock(scope: !592, file: !1, line: 1667, column: 9)
!2428 = !DILocation(line: 1667, column: 9, scope: !592)
!2429 = !DILocation(line: 1669, column: 13, scope: !2430)
!2430 = distinct !DILexicalBlock(scope: !592, file: !1, line: 1669, column: 9)
!2431 = !DILocation(line: 1669, column: 9, scope: !592)
!2432 = !DILocation(line: 1666, column: 10, scope: !592)
!2433 = !DILocation(line: 1671, column: 5, scope: !2434)
!2434 = !DILexicalBlockFile(scope: !599, file: !1, discriminator: 1)
!2435 = !DILocation(line: 1671, column: 5, scope: !2416)
!2436 = !DILocation(line: 1671, column: 5, scope: !599)
!2437 = !DILocation(line: 1673, column: 1, scope: !592)
!2438 = !DILocation(line: 1677, column: 42, scope: !600)
!2439 = !DILocation(line: 1677, column: 59, scope: !600)
!2440 = !DILocation(line: 1640, column: 39, scope: !584, inlinedAt: !2441)
!2441 = distinct !DILocation(line: 1679, column: 12, scope: !600)
!2442 = !DILocation(line: 1640, column: 56, scope: !584, inlinedAt: !2441)
!2443 = !DILocation(line: 1643, column: 64, scope: !584, inlinedAt: !2441)
!2444 = !DILocation(line: 1514, column: 23, scope: !1553, inlinedAt: !2445)
!2445 = distinct !DILocation(line: 1643, column: 21, scope: !584, inlinedAt: !2441)
!2446 = !DILocation(line: 1514, column: 41, scope: !1553, inlinedAt: !2445)
!2447 = !DILocation(line: 1516, column: 10, scope: !2135, inlinedAt: !2445)
!2448 = !DILocation(line: 1516, column: 9, scope: !1553, inlinedAt: !2445)
!2449 = !DILocation(line: 1517, column: 22, scope: !2138, inlinedAt: !2445)
!2450 = !DILocation(line: 1517, column: 9, scope: !2138, inlinedAt: !2445)
!2451 = !DILocation(line: 1518, column: 9, scope: !2138, inlinedAt: !2445)
!2452 = !DILocation(line: 1521, column: 10, scope: !2142, inlinedAt: !2445)
!2453 = !DILocation(line: 1653, column: 5, scope: !2378, inlinedAt: !2441)
!2454 = !DILocation(line: 1521, column: 9, scope: !1553, inlinedAt: !2445)
!2455 = !DILocation(line: 1522, column: 22, scope: !2146, inlinedAt: !2445)
!2456 = !DILocation(line: 1522, column: 9, scope: !2146, inlinedAt: !2445)
!2457 = !DILocation(line: 1524, column: 9, scope: !2146, inlinedAt: !2445)
!2458 = !DILocation(line: 1526, column: 5, scope: !1553, inlinedAt: !2445)
!2459 = !DILocation(line: 1643, column: 15, scope: !584, inlinedAt: !2441)
!2460 = !DILocation(line: 1647, column: 43, scope: !584, inlinedAt: !2441)
!2461 = !DILocation(line: 1647, column: 10, scope: !584, inlinedAt: !2441)
!2462 = !DILocation(line: 1648, column: 12, scope: !584, inlinedAt: !2441)
!2463 = !DILocation(line: 1642, column: 16, scope: !584, inlinedAt: !2441)
!2464 = !DILocation(line: 1649, column: 13, scope: !2392, inlinedAt: !2441)
!2465 = !DILocation(line: 1649, column: 9, scope: !584, inlinedAt: !2441)
!2466 = !DILocation(line: 1651, column: 13, scope: !2395, inlinedAt: !2441)
!2467 = !DILocation(line: 1651, column: 9, scope: !584, inlinedAt: !2441)
!2468 = !DILocation(line: 1652, column: 14, scope: !2395, inlinedAt: !2441)
!2469 = !DILocation(line: 1653, column: 5, scope: !2399, inlinedAt: !2441)
!2470 = !DILocation(line: 1653, column: 5, scope: !2379, inlinedAt: !2441)
!2471 = !DILocation(line: 1653, column: 5, scope: !591, inlinedAt: !2441)
!2472 = !DILocation(line: 1679, column: 12, scope: !600)
!2473 = !DILocation(line: 1679, column: 5, scope: !600)
!2474 = !DILocation(line: 1684, column: 39, scope: !604)
!2475 = !DILocation(line: 1684, column: 55, scope: !604)
!2476 = !DILocation(line: 1686, column: 36, scope: !604)
!2477 = !DILocation(line: 1686, column: 40, scope: !604)
!2478 = !DILocation(line: 1687, column: 5, scope: !604)
!2479 = !DILocation(line: 1692, column: 39, scope: !608)
!2480 = !DILocation(line: 1692, column: 55, scope: !608)
!2481 = !DILocation(line: 1694, column: 36, scope: !608)
!2482 = !DILocation(line: 1694, column: 40, scope: !608)
!2483 = !DILocation(line: 1695, column: 5, scope: !608)
!2484 = !DILocation(line: 1700, column: 42, scope: !612)
!2485 = !DILocation(line: 1700, column: 58, scope: !612)
!2486 = !DILocation(line: 1702, column: 36, scope: !612)
!2487 = !DILocation(line: 1702, column: 40, scope: !612)
!2488 = !DILocation(line: 1703, column: 5, scope: !612)
!2489 = !DILocation(line: 1707, column: 42, scope: !616)
!2490 = !DILocation(line: 1709, column: 55, scope: !616)
!2491 = !{!2130, !1985, i64 96}
!2492 = !DILocation(line: 1514, column: 23, scope: !1553, inlinedAt: !2493)
!2493 = distinct !DILocation(line: 1709, column: 12, scope: !616)
!2494 = !DILocation(line: 1514, column: 41, scope: !1553, inlinedAt: !2493)
!2495 = !DILocation(line: 1516, column: 10, scope: !2135, inlinedAt: !2493)
!2496 = !DILocation(line: 1516, column: 9, scope: !1553, inlinedAt: !2493)
!2497 = !DILocation(line: 1517, column: 22, scope: !2138, inlinedAt: !2493)
!2498 = !DILocation(line: 1517, column: 9, scope: !2138, inlinedAt: !2493)
!2499 = !DILocation(line: 1518, column: 9, scope: !2138, inlinedAt: !2493)
!2500 = !DILocation(line: 1521, column: 10, scope: !2142, inlinedAt: !2493)
!2501 = !DILocation(line: 1521, column: 9, scope: !1553, inlinedAt: !2493)
!2502 = !DILocation(line: 1522, column: 22, scope: !2146, inlinedAt: !2493)
!2503 = !DILocation(line: 1522, column: 9, scope: !2146, inlinedAt: !2493)
!2504 = !DILocation(line: 1524, column: 9, scope: !2146, inlinedAt: !2493)
!2505 = !DILocation(line: 1526, column: 5, scope: !1553, inlinedAt: !2493)
!2506 = !DILocation(line: 1527, column: 5, scope: !1553, inlinedAt: !2493)
!2507 = !DILocation(line: 1709, column: 12, scope: !616)
!2508 = !DILocation(line: 1709, column: 5, scope: !616)
!2509 = !DILocation(line: 1714, column: 42, scope: !619)
!2510 = !DILocation(line: 1716, column: 55, scope: !619)
!2511 = !DILocation(line: 1514, column: 23, scope: !1553, inlinedAt: !2512)
!2512 = distinct !DILocation(line: 1716, column: 12, scope: !619)
!2513 = !DILocation(line: 1514, column: 41, scope: !1553, inlinedAt: !2512)
!2514 = !DILocation(line: 1516, column: 10, scope: !2135, inlinedAt: !2512)
!2515 = !DILocation(line: 1516, column: 9, scope: !1553, inlinedAt: !2512)
!2516 = !DILocation(line: 1517, column: 22, scope: !2138, inlinedAt: !2512)
!2517 = !DILocation(line: 1517, column: 9, scope: !2138, inlinedAt: !2512)
!2518 = !DILocation(line: 1518, column: 9, scope: !2138, inlinedAt: !2512)
!2519 = !DILocation(line: 1521, column: 10, scope: !2142, inlinedAt: !2512)
!2520 = !DILocation(line: 1521, column: 9, scope: !1553, inlinedAt: !2512)
!2521 = !DILocation(line: 1522, column: 22, scope: !2146, inlinedAt: !2512)
!2522 = !DILocation(line: 1522, column: 9, scope: !2146, inlinedAt: !2512)
!2523 = !DILocation(line: 1524, column: 9, scope: !2146, inlinedAt: !2512)
!2524 = !DILocation(line: 1526, column: 5, scope: !1553, inlinedAt: !2512)
!2525 = !DILocation(line: 1527, column: 5, scope: !1553, inlinedAt: !2512)
!2526 = !DILocation(line: 1716, column: 12, scope: !619)
!2527 = !DILocation(line: 1716, column: 5, scope: !619)
!2528 = !DILocation(line: 1721, column: 45, scope: !622)
!2529 = !DILocation(line: 1723, column: 55, scope: !622)
!2530 = !DILocation(line: 1514, column: 23, scope: !1553, inlinedAt: !2531)
!2531 = distinct !DILocation(line: 1723, column: 12, scope: !622)
!2532 = !DILocation(line: 1514, column: 41, scope: !1553, inlinedAt: !2531)
!2533 = !DILocation(line: 1516, column: 10, scope: !2135, inlinedAt: !2531)
!2534 = !DILocation(line: 1516, column: 9, scope: !1553, inlinedAt: !2531)
!2535 = !DILocation(line: 1517, column: 22, scope: !2138, inlinedAt: !2531)
!2536 = !DILocation(line: 1517, column: 9, scope: !2138, inlinedAt: !2531)
!2537 = !DILocation(line: 1518, column: 9, scope: !2138, inlinedAt: !2531)
!2538 = !DILocation(line: 1521, column: 10, scope: !2142, inlinedAt: !2531)
!2539 = !DILocation(line: 1521, column: 9, scope: !1553, inlinedAt: !2531)
!2540 = !DILocation(line: 1522, column: 22, scope: !2146, inlinedAt: !2531)
!2541 = !DILocation(line: 1522, column: 9, scope: !2146, inlinedAt: !2531)
!2542 = !DILocation(line: 1524, column: 9, scope: !2146, inlinedAt: !2531)
!2543 = !DILocation(line: 1526, column: 5, scope: !1553, inlinedAt: !2531)
!2544 = !DILocation(line: 1527, column: 5, scope: !1553, inlinedAt: !2531)
!2545 = !DILocation(line: 1723, column: 12, scope: !622)
!2546 = !DILocation(line: 1723, column: 5, scope: !622)
!2547 = !DILocation(line: 1728, column: 42, scope: !625)
!2548 = !DILocation(line: 1728, column: 59, scope: !625)
!2549 = !DILocation(line: 1730, column: 66, scope: !625)
!2550 = !DILocation(line: 1531, column: 34, scope: !1563, inlinedAt: !2551)
!2551 = distinct !DILocation(line: 1730, column: 12, scope: !625)
!2552 = !DILocation(line: 1531, column: 52, scope: !1563, inlinedAt: !2551)
!2553 = !DILocation(line: 1533, column: 21, scope: !1563, inlinedAt: !2551)
!2554 = !DILocation(line: 1533, column: 15, scope: !1563, inlinedAt: !2551)
!2555 = !DILocation(line: 1534, column: 10, scope: !2556, inlinedAt: !2551)
!2556 = distinct !DILexicalBlock(scope: !1563, file: !1, line: 1534, column: 9)
!2557 = !DILocation(line: 1534, column: 9, scope: !1563, inlinedAt: !2551)
!2558 = !DILocation(line: 1536, column: 5, scope: !2559, inlinedAt: !2551)
!2559 = !DILexicalBlockFile(scope: !1571, file: !1, discriminator: 1)
!2560 = !DILocation(line: 1536, column: 5, scope: !1575, inlinedAt: !2551)
!2561 = !DILocation(line: 1536, column: 5, scope: !1571, inlinedAt: !2551)
!2562 = !DILocation(line: 1536, column: 5, scope: !2563, inlinedAt: !2551)
!2563 = !DILexicalBlockFile(scope: !1574, file: !1, discriminator: 2)
!2564 = !DILocation(line: 1536, column: 5, scope: !2565, inlinedAt: !2551)
!2565 = !DILexicalBlockFile(scope: !1573, file: !1, discriminator: 4)
!2566 = !DILocation(line: 1536, column: 5, scope: !2567, inlinedAt: !2551)
!2567 = distinct !DILexicalBlock(scope: !1573, file: !1, line: 1536, column: 5)
!2568 = !DILocation(line: 1536, column: 5, scope: !1573, inlinedAt: !2551)
!2569 = !DILocation(line: 1536, column: 5, scope: !2570, inlinedAt: !2551)
!2570 = !DILexicalBlockFile(scope: !2567, file: !1, discriminator: 6)
!2571 = !DILocation(line: 1730, column: 12, scope: !625)
!2572 = !DILocation(line: 1537, column: 11, scope: !1563, inlinedAt: !2551)
!2573 = !DILocation(line: 1538, column: 5, scope: !1563, inlinedAt: !2551)
!2574 = !DILocation(line: 1730, column: 5, scope: !625)
!2575 = !DILocation(line: 1736, column: 42, scope: !631)
!2576 = !DILocation(line: 1736, column: 59, scope: !631)
!2577 = !DILocation(line: 1738, column: 66, scope: !631)
!2578 = !DILocation(line: 1531, column: 34, scope: !1563, inlinedAt: !2579)
!2579 = distinct !DILocation(line: 1738, column: 12, scope: !631)
!2580 = !DILocation(line: 1531, column: 52, scope: !1563, inlinedAt: !2579)
!2581 = !DILocation(line: 1533, column: 21, scope: !1563, inlinedAt: !2579)
!2582 = !DILocation(line: 1533, column: 15, scope: !1563, inlinedAt: !2579)
!2583 = !DILocation(line: 1534, column: 10, scope: !2556, inlinedAt: !2579)
!2584 = !DILocation(line: 1534, column: 9, scope: !1563, inlinedAt: !2579)
!2585 = !DILocation(line: 1536, column: 5, scope: !2559, inlinedAt: !2579)
!2586 = !DILocation(line: 1536, column: 5, scope: !1575, inlinedAt: !2579)
!2587 = !DILocation(line: 1536, column: 5, scope: !1571, inlinedAt: !2579)
!2588 = !DILocation(line: 1536, column: 5, scope: !2563, inlinedAt: !2579)
!2589 = !DILocation(line: 1536, column: 5, scope: !2565, inlinedAt: !2579)
!2590 = !DILocation(line: 1536, column: 5, scope: !2567, inlinedAt: !2579)
!2591 = !DILocation(line: 1536, column: 5, scope: !1573, inlinedAt: !2579)
!2592 = !DILocation(line: 1536, column: 5, scope: !2570, inlinedAt: !2579)
!2593 = !DILocation(line: 1738, column: 12, scope: !631)
!2594 = !DILocation(line: 1537, column: 11, scope: !1563, inlinedAt: !2579)
!2595 = !DILocation(line: 1538, column: 5, scope: !1563, inlinedAt: !2579)
!2596 = !DILocation(line: 1738, column: 5, scope: !631)
!2597 = !DILocation(line: 1744, column: 45, scope: !635)
!2598 = !DILocation(line: 1744, column: 62, scope: !635)
!2599 = !DILocation(line: 1746, column: 66, scope: !635)
!2600 = !DILocation(line: 1531, column: 34, scope: !1563, inlinedAt: !2601)
!2601 = distinct !DILocation(line: 1746, column: 12, scope: !635)
!2602 = !DILocation(line: 1531, column: 52, scope: !1563, inlinedAt: !2601)
!2603 = !DILocation(line: 1533, column: 21, scope: !1563, inlinedAt: !2601)
!2604 = !DILocation(line: 1533, column: 15, scope: !1563, inlinedAt: !2601)
!2605 = !DILocation(line: 1534, column: 10, scope: !2556, inlinedAt: !2601)
!2606 = !DILocation(line: 1534, column: 9, scope: !1563, inlinedAt: !2601)
!2607 = !DILocation(line: 1536, column: 5, scope: !2559, inlinedAt: !2601)
!2608 = !DILocation(line: 1536, column: 5, scope: !1575, inlinedAt: !2601)
!2609 = !DILocation(line: 1536, column: 5, scope: !1571, inlinedAt: !2601)
!2610 = !DILocation(line: 1536, column: 5, scope: !2563, inlinedAt: !2601)
!2611 = !DILocation(line: 1536, column: 5, scope: !2565, inlinedAt: !2601)
!2612 = !DILocation(line: 1536, column: 5, scope: !2567, inlinedAt: !2601)
!2613 = !DILocation(line: 1536, column: 5, scope: !1573, inlinedAt: !2601)
!2614 = !DILocation(line: 1536, column: 5, scope: !2570, inlinedAt: !2601)
!2615 = !DILocation(line: 1746, column: 12, scope: !635)
!2616 = !DILocation(line: 1537, column: 11, scope: !1563, inlinedAt: !2601)
!2617 = !DILocation(line: 1538, column: 5, scope: !1563, inlinedAt: !2601)
!2618 = !DILocation(line: 1746, column: 5, scope: !635)
!2619 = !DILocation(line: 1899, column: 17, scope: !639)
!2620 = !DILocation(line: 1899, column: 45, scope: !639)
!2621 = !DILocation(line: 1899, column: 64, scope: !639)
!2622 = !DILocation(line: 1900, column: 16, scope: !639)
!2623 = !DILocation(line: 1900, column: 34, scope: !639)
!2624 = !DILocation(line: 1900, column: 51, scope: !639)
!2625 = !DILocation(line: 1902, column: 34, scope: !639)
!2626 = !DILocation(line: 1902, column: 12, scope: !639)
!2627 = !DILocation(line: 1902, column: 5, scope: !639)
!2628 = !DILocation(line: 2015, column: 17, scope: !652)
!2629 = !DILocation(line: 2015, column: 39, scope: !652)
!2630 = !DILocation(line: 2015, column: 58, scope: !652)
!2631 = !DILocation(line: 2016, column: 16, scope: !652)
!2632 = !DILocation(line: 2016, column: 34, scope: !652)
!2633 = !DILocation(line: 2016, column: 51, scope: !652)
!2634 = !DILocation(line: 2018, column: 34, scope: !652)
!2635 = !DILocation(line: 2018, column: 12, scope: !652)
!2636 = !DILocation(line: 2018, column: 5, scope: !652)
!2637 = !DILocation(line: 2115, column: 23, scope: !662)
!2638 = !DILocation(line: 2115, column: 42, scope: !662)
!2639 = !DILocation(line: 2116, column: 16, scope: !662)
!2640 = !DILocation(line: 2116, column: 34, scope: !662)
!2641 = !DILocation(line: 2116, column: 51, scope: !662)
!2642 = !DILocation(line: 2118, column: 34, scope: !662)
!2643 = !DILocation(line: 2118, column: 12, scope: !662)
!2644 = !DILocation(line: 2118, column: 5, scope: !662)
!2645 = !DILocation(line: 2124, column: 15, scope: !671)
!2646 = !DILocation(line: 2125, column: 16, scope: !671)
!2647 = !DILocation(line: 2125, column: 34, scope: !671)
!2648 = !DILocation(line: 2125, column: 51, scope: !671)
!2649 = !DILocation(line: 2127, column: 34, scope: !671)
!2650 = !DILocation(line: 2127, column: 12, scope: !671)
!2651 = !DILocation(line: 2127, column: 5, scope: !671)
!2652 = !DILocation(line: 2450, column: 23, scope: !679)
!2653 = !DILocation(line: 2454, column: 5, scope: !2654)
!2654 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2454, column: 5)
!2655 = !DILocation(line: 2234, column: 15, scope: !1763, inlinedAt: !2656)
!2656 = distinct !DILocation(line: 2620, column: 5, scope: !679)
!2657 = !DILocation(line: 2454, column: 5, scope: !679)
!2658 = !DILocation(line: 2454, column: 5, scope: !2659)
!2659 = !DILexicalBlockFile(scope: !2660, file: !1, discriminator: 1)
!2660 = distinct !DILexicalBlock(scope: !2661, file: !1, line: 2454, column: 5)
!2661 = distinct !DILexicalBlock(scope: !2654, file: !1, line: 2454, column: 5)
!2662 = !DILocation(line: 2454, column: 5, scope: !2661)
!2663 = !DILocation(line: 2454, column: 5, scope: !2664)
!2664 = !DILexicalBlockFile(scope: !2660, file: !1, discriminator: 2)
!2665 = !DILocation(line: 2454, column: 5, scope: !2666)
!2666 = !DILexicalBlockFile(scope: !2661, file: !1, discriminator: 3)
!2667 = !DILocation(line: 2455, column: 5, scope: !2668)
!2668 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2455, column: 5)
!2669 = !DILocation(line: 2455, column: 5, scope: !679)
!2670 = !DILocation(line: 2455, column: 5, scope: !2671)
!2671 = !DILexicalBlockFile(scope: !2672, file: !1, discriminator: 1)
!2672 = distinct !DILexicalBlock(scope: !2673, file: !1, line: 2455, column: 5)
!2673 = distinct !DILexicalBlock(scope: !2668, file: !1, line: 2455, column: 5)
!2674 = !DILocation(line: 2455, column: 5, scope: !2673)
!2675 = !DILocation(line: 2455, column: 5, scope: !2676)
!2676 = !DILexicalBlockFile(scope: !2672, file: !1, discriminator: 2)
!2677 = !DILocation(line: 2455, column: 5, scope: !2678)
!2678 = !DILexicalBlockFile(scope: !2673, file: !1, discriminator: 3)
!2679 = !DILocation(line: 2456, column: 5, scope: !2680)
!2680 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2456, column: 5)
!2681 = !DILocation(line: 2456, column: 5, scope: !679)
!2682 = !DILocation(line: 2456, column: 5, scope: !2683)
!2683 = !DILexicalBlockFile(scope: !2684, file: !1, discriminator: 1)
!2684 = distinct !DILexicalBlock(scope: !2685, file: !1, line: 2456, column: 5)
!2685 = distinct !DILexicalBlock(scope: !2680, file: !1, line: 2456, column: 5)
!2686 = !DILocation(line: 2456, column: 5, scope: !2685)
!2687 = !DILocation(line: 2456, column: 5, scope: !2688)
!2688 = !DILexicalBlockFile(scope: !2684, file: !1, discriminator: 2)
!2689 = !DILocation(line: 2456, column: 5, scope: !2690)
!2690 = !DILexicalBlockFile(scope: !2685, file: !1, discriminator: 3)
!2691 = !DILocation(line: 2457, column: 5, scope: !2692)
!2692 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2457, column: 5)
!2693 = !DILocation(line: 2457, column: 5, scope: !679)
!2694 = !DILocation(line: 2457, column: 5, scope: !2695)
!2695 = !DILexicalBlockFile(scope: !2696, file: !1, discriminator: 1)
!2696 = distinct !DILexicalBlock(scope: !2697, file: !1, line: 2457, column: 5)
!2697 = distinct !DILexicalBlock(scope: !2692, file: !1, line: 2457, column: 5)
!2698 = !DILocation(line: 2457, column: 5, scope: !2697)
!2699 = !DILocation(line: 2457, column: 5, scope: !2700)
!2700 = !DILexicalBlockFile(scope: !2696, file: !1, discriminator: 2)
!2701 = !DILocation(line: 2457, column: 5, scope: !2702)
!2702 = !DILexicalBlockFile(scope: !2697, file: !1, discriminator: 3)
!2703 = !DILocation(line: 2458, column: 5, scope: !2704)
!2704 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2458, column: 5)
!2705 = !DILocation(line: 2458, column: 5, scope: !679)
!2706 = !DILocation(line: 2458, column: 5, scope: !2707)
!2707 = !DILexicalBlockFile(scope: !2708, file: !1, discriminator: 1)
!2708 = distinct !DILexicalBlock(scope: !2709, file: !1, line: 2458, column: 5)
!2709 = distinct !DILexicalBlock(scope: !2704, file: !1, line: 2458, column: 5)
!2710 = !DILocation(line: 2458, column: 5, scope: !2709)
!2711 = !DILocation(line: 2458, column: 5, scope: !2712)
!2712 = !DILexicalBlockFile(scope: !2708, file: !1, discriminator: 2)
!2713 = !DILocation(line: 2458, column: 5, scope: !2714)
!2714 = !DILexicalBlockFile(scope: !2709, file: !1, discriminator: 3)
!2715 = !DILocation(line: 2459, column: 5, scope: !2716)
!2716 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2459, column: 5)
!2717 = !DILocation(line: 2459, column: 5, scope: !679)
!2718 = !DILocation(line: 2459, column: 5, scope: !2719)
!2719 = !DILexicalBlockFile(scope: !2720, file: !1, discriminator: 1)
!2720 = distinct !DILexicalBlock(scope: !2721, file: !1, line: 2459, column: 5)
!2721 = distinct !DILexicalBlock(scope: !2716, file: !1, line: 2459, column: 5)
!2722 = !DILocation(line: 2459, column: 5, scope: !2721)
!2723 = !DILocation(line: 2459, column: 5, scope: !2724)
!2724 = !DILexicalBlockFile(scope: !2720, file: !1, discriminator: 2)
!2725 = !DILocation(line: 2459, column: 5, scope: !2726)
!2726 = !DILexicalBlockFile(scope: !2721, file: !1, discriminator: 3)
!2727 = !DILocation(line: 2460, column: 5, scope: !2728)
!2728 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2460, column: 5)
!2729 = !DILocation(line: 2460, column: 5, scope: !679)
!2730 = !DILocation(line: 2460, column: 5, scope: !2731)
!2731 = !DILexicalBlockFile(scope: !2732, file: !1, discriminator: 1)
!2732 = distinct !DILexicalBlock(scope: !2733, file: !1, line: 2460, column: 5)
!2733 = distinct !DILexicalBlock(scope: !2728, file: !1, line: 2460, column: 5)
!2734 = !DILocation(line: 2460, column: 5, scope: !2733)
!2735 = !DILocation(line: 2460, column: 5, scope: !2736)
!2736 = !DILexicalBlockFile(scope: !2732, file: !1, discriminator: 2)
!2737 = !DILocation(line: 2460, column: 5, scope: !2738)
!2738 = !DILexicalBlockFile(scope: !2733, file: !1, discriminator: 3)
!2739 = !DILocation(line: 2461, column: 5, scope: !2740)
!2740 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2461, column: 5)
!2741 = !DILocation(line: 2461, column: 5, scope: !679)
!2742 = !DILocation(line: 2461, column: 5, scope: !2743)
!2743 = !DILexicalBlockFile(scope: !2744, file: !1, discriminator: 1)
!2744 = distinct !DILexicalBlock(scope: !2745, file: !1, line: 2461, column: 5)
!2745 = distinct !DILexicalBlock(scope: !2740, file: !1, line: 2461, column: 5)
!2746 = !DILocation(line: 2461, column: 5, scope: !2745)
!2747 = !DILocation(line: 2461, column: 5, scope: !2748)
!2748 = !DILexicalBlockFile(scope: !2744, file: !1, discriminator: 2)
!2749 = !DILocation(line: 2461, column: 5, scope: !2750)
!2750 = !DILexicalBlockFile(scope: !2745, file: !1, discriminator: 3)
!2751 = !DILocation(line: 2462, column: 5, scope: !2752)
!2752 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2462, column: 5)
!2753 = !DILocation(line: 2462, column: 5, scope: !679)
!2754 = !DILocation(line: 2462, column: 5, scope: !2755)
!2755 = !DILexicalBlockFile(scope: !2756, file: !1, discriminator: 1)
!2756 = distinct !DILexicalBlock(scope: !2757, file: !1, line: 2462, column: 5)
!2757 = distinct !DILexicalBlock(scope: !2752, file: !1, line: 2462, column: 5)
!2758 = !DILocation(line: 2462, column: 5, scope: !2757)
!2759 = !DILocation(line: 2462, column: 5, scope: !2760)
!2760 = !DILexicalBlockFile(scope: !2756, file: !1, discriminator: 2)
!2761 = !DILocation(line: 2462, column: 5, scope: !2762)
!2762 = !DILexicalBlockFile(scope: !2757, file: !1, discriminator: 3)
!2763 = !DILocation(line: 2463, column: 5, scope: !2764)
!2764 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2463, column: 5)
!2765 = !DILocation(line: 2463, column: 5, scope: !679)
!2766 = !DILocation(line: 2463, column: 5, scope: !2767)
!2767 = !DILexicalBlockFile(scope: !2768, file: !1, discriminator: 1)
!2768 = distinct !DILexicalBlock(scope: !2769, file: !1, line: 2463, column: 5)
!2769 = distinct !DILexicalBlock(scope: !2764, file: !1, line: 2463, column: 5)
!2770 = !DILocation(line: 2463, column: 5, scope: !2769)
!2771 = !DILocation(line: 2463, column: 5, scope: !2772)
!2772 = !DILexicalBlockFile(scope: !2768, file: !1, discriminator: 2)
!2773 = !DILocation(line: 2463, column: 5, scope: !2774)
!2774 = !DILexicalBlockFile(scope: !2769, file: !1, discriminator: 3)
!2775 = !DILocation(line: 2464, column: 5, scope: !2776)
!2776 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2464, column: 5)
!2777 = !DILocation(line: 2464, column: 5, scope: !679)
!2778 = !DILocation(line: 2464, column: 5, scope: !2779)
!2779 = !DILexicalBlockFile(scope: !2780, file: !1, discriminator: 1)
!2780 = distinct !DILexicalBlock(scope: !2781, file: !1, line: 2464, column: 5)
!2781 = distinct !DILexicalBlock(scope: !2776, file: !1, line: 2464, column: 5)
!2782 = !DILocation(line: 2464, column: 5, scope: !2781)
!2783 = !DILocation(line: 2464, column: 5, scope: !2784)
!2784 = !DILexicalBlockFile(scope: !2780, file: !1, discriminator: 2)
!2785 = !DILocation(line: 2464, column: 5, scope: !2786)
!2786 = !DILexicalBlockFile(scope: !2781, file: !1, discriminator: 3)
!2787 = !DILocation(line: 2465, column: 5, scope: !2788)
!2788 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2465, column: 5)
!2789 = !DILocation(line: 2465, column: 5, scope: !679)
!2790 = !DILocation(line: 2465, column: 5, scope: !2791)
!2791 = !DILexicalBlockFile(scope: !2792, file: !1, discriminator: 1)
!2792 = distinct !DILexicalBlock(scope: !2793, file: !1, line: 2465, column: 5)
!2793 = distinct !DILexicalBlock(scope: !2788, file: !1, line: 2465, column: 5)
!2794 = !DILocation(line: 2465, column: 5, scope: !2793)
!2795 = !DILocation(line: 2465, column: 5, scope: !2796)
!2796 = !DILexicalBlockFile(scope: !2792, file: !1, discriminator: 2)
!2797 = !DILocation(line: 2465, column: 5, scope: !2798)
!2798 = !DILexicalBlockFile(scope: !2793, file: !1, discriminator: 3)
!2799 = !DILocation(line: 2466, column: 5, scope: !2800)
!2800 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2466, column: 5)
!2801 = !DILocation(line: 2466, column: 5, scope: !679)
!2802 = !DILocation(line: 2466, column: 5, scope: !2803)
!2803 = !DILexicalBlockFile(scope: !2804, file: !1, discriminator: 1)
!2804 = distinct !DILexicalBlock(scope: !2805, file: !1, line: 2466, column: 5)
!2805 = distinct !DILexicalBlock(scope: !2800, file: !1, line: 2466, column: 5)
!2806 = !DILocation(line: 2466, column: 5, scope: !2805)
!2807 = !DILocation(line: 2466, column: 5, scope: !2808)
!2808 = !DILexicalBlockFile(scope: !2804, file: !1, discriminator: 2)
!2809 = !DILocation(line: 2466, column: 5, scope: !2810)
!2810 = !DILexicalBlockFile(scope: !2805, file: !1, discriminator: 3)
!2811 = !DILocation(line: 2467, column: 5, scope: !2812)
!2812 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2467, column: 5)
!2813 = !DILocation(line: 2467, column: 5, scope: !679)
!2814 = !DILocation(line: 2467, column: 5, scope: !2815)
!2815 = !DILexicalBlockFile(scope: !2816, file: !1, discriminator: 1)
!2816 = distinct !DILexicalBlock(scope: !2817, file: !1, line: 2467, column: 5)
!2817 = distinct !DILexicalBlock(scope: !2812, file: !1, line: 2467, column: 5)
!2818 = !DILocation(line: 2467, column: 5, scope: !2817)
!2819 = !DILocation(line: 2467, column: 5, scope: !2820)
!2820 = !DILexicalBlockFile(scope: !2816, file: !1, discriminator: 2)
!2821 = !DILocation(line: 2467, column: 5, scope: !2822)
!2822 = !DILexicalBlockFile(scope: !2817, file: !1, discriminator: 3)
!2823 = !DILocation(line: 2468, column: 5, scope: !2824)
!2824 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2468, column: 5)
!2825 = !DILocation(line: 2468, column: 5, scope: !679)
!2826 = !DILocation(line: 2468, column: 5, scope: !2827)
!2827 = !DILexicalBlockFile(scope: !2828, file: !1, discriminator: 1)
!2828 = distinct !DILexicalBlock(scope: !2829, file: !1, line: 2468, column: 5)
!2829 = distinct !DILexicalBlock(scope: !2824, file: !1, line: 2468, column: 5)
!2830 = !DILocation(line: 2468, column: 5, scope: !2829)
!2831 = !DILocation(line: 2468, column: 5, scope: !2832)
!2832 = !DILexicalBlockFile(scope: !2828, file: !1, discriminator: 2)
!2833 = !DILocation(line: 2468, column: 5, scope: !2834)
!2834 = !DILexicalBlockFile(scope: !2829, file: !1, discriminator: 3)
!2835 = !DILocation(line: 2469, column: 5, scope: !2836)
!2836 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2469, column: 5)
!2837 = !DILocation(line: 2469, column: 5, scope: !679)
!2838 = !DILocation(line: 2469, column: 5, scope: !2839)
!2839 = !DILexicalBlockFile(scope: !2840, file: !1, discriminator: 1)
!2840 = distinct !DILexicalBlock(scope: !2841, file: !1, line: 2469, column: 5)
!2841 = distinct !DILexicalBlock(scope: !2836, file: !1, line: 2469, column: 5)
!2842 = !DILocation(line: 2469, column: 5, scope: !2841)
!2843 = !DILocation(line: 2469, column: 5, scope: !2844)
!2844 = !DILexicalBlockFile(scope: !2840, file: !1, discriminator: 2)
!2845 = !DILocation(line: 2469, column: 5, scope: !2846)
!2846 = !DILexicalBlockFile(scope: !2841, file: !1, discriminator: 3)
!2847 = !DILocation(line: 2470, column: 5, scope: !2848)
!2848 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2470, column: 5)
!2849 = !DILocation(line: 2470, column: 5, scope: !679)
!2850 = !DILocation(line: 2470, column: 5, scope: !2851)
!2851 = !DILexicalBlockFile(scope: !2852, file: !1, discriminator: 1)
!2852 = distinct !DILexicalBlock(scope: !2853, file: !1, line: 2470, column: 5)
!2853 = distinct !DILexicalBlock(scope: !2848, file: !1, line: 2470, column: 5)
!2854 = !DILocation(line: 2470, column: 5, scope: !2853)
!2855 = !DILocation(line: 2470, column: 5, scope: !2856)
!2856 = !DILexicalBlockFile(scope: !2852, file: !1, discriminator: 2)
!2857 = !DILocation(line: 2470, column: 5, scope: !2858)
!2858 = !DILexicalBlockFile(scope: !2853, file: !1, discriminator: 3)
!2859 = !DILocation(line: 2471, column: 5, scope: !2860)
!2860 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2471, column: 5)
!2861 = !DILocation(line: 2471, column: 5, scope: !679)
!2862 = !DILocation(line: 2471, column: 5, scope: !2863)
!2863 = !DILexicalBlockFile(scope: !2864, file: !1, discriminator: 1)
!2864 = distinct !DILexicalBlock(scope: !2865, file: !1, line: 2471, column: 5)
!2865 = distinct !DILexicalBlock(scope: !2860, file: !1, line: 2471, column: 5)
!2866 = !DILocation(line: 2471, column: 5, scope: !2865)
!2867 = !DILocation(line: 2471, column: 5, scope: !2868)
!2868 = !DILexicalBlockFile(scope: !2864, file: !1, discriminator: 2)
!2869 = !DILocation(line: 2471, column: 5, scope: !2870)
!2870 = !DILexicalBlockFile(scope: !2865, file: !1, discriminator: 3)
!2871 = !DILocation(line: 2472, column: 5, scope: !2872)
!2872 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2472, column: 5)
!2873 = !DILocation(line: 2472, column: 5, scope: !679)
!2874 = !DILocation(line: 2472, column: 5, scope: !2875)
!2875 = !DILexicalBlockFile(scope: !2876, file: !1, discriminator: 1)
!2876 = distinct !DILexicalBlock(scope: !2877, file: !1, line: 2472, column: 5)
!2877 = distinct !DILexicalBlock(scope: !2872, file: !1, line: 2472, column: 5)
!2878 = !DILocation(line: 2472, column: 5, scope: !2877)
!2879 = !DILocation(line: 2472, column: 5, scope: !2880)
!2880 = !DILexicalBlockFile(scope: !2876, file: !1, discriminator: 2)
!2881 = !DILocation(line: 2472, column: 5, scope: !2882)
!2882 = !DILexicalBlockFile(scope: !2877, file: !1, discriminator: 3)
!2883 = !DILocation(line: 2473, column: 5, scope: !2884)
!2884 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2473, column: 5)
!2885 = !DILocation(line: 2473, column: 5, scope: !679)
!2886 = !DILocation(line: 2473, column: 5, scope: !2887)
!2887 = !DILexicalBlockFile(scope: !2888, file: !1, discriminator: 1)
!2888 = distinct !DILexicalBlock(scope: !2889, file: !1, line: 2473, column: 5)
!2889 = distinct !DILexicalBlock(scope: !2884, file: !1, line: 2473, column: 5)
!2890 = !DILocation(line: 2473, column: 5, scope: !2889)
!2891 = !DILocation(line: 2473, column: 5, scope: !2892)
!2892 = !DILexicalBlockFile(scope: !2888, file: !1, discriminator: 2)
!2893 = !DILocation(line: 2473, column: 5, scope: !2894)
!2894 = !DILexicalBlockFile(scope: !2889, file: !1, discriminator: 3)
!2895 = !DILocation(line: 2474, column: 5, scope: !2896)
!2896 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2474, column: 5)
!2897 = !DILocation(line: 2474, column: 5, scope: !679)
!2898 = !DILocation(line: 2474, column: 5, scope: !2899)
!2899 = !DILexicalBlockFile(scope: !2900, file: !1, discriminator: 1)
!2900 = distinct !DILexicalBlock(scope: !2901, file: !1, line: 2474, column: 5)
!2901 = distinct !DILexicalBlock(scope: !2896, file: !1, line: 2474, column: 5)
!2902 = !DILocation(line: 2474, column: 5, scope: !2901)
!2903 = !DILocation(line: 2474, column: 5, scope: !2904)
!2904 = !DILexicalBlockFile(scope: !2900, file: !1, discriminator: 2)
!2905 = !DILocation(line: 2474, column: 5, scope: !2906)
!2906 = !DILexicalBlockFile(scope: !2901, file: !1, discriminator: 3)
!2907 = !DILocation(line: 2475, column: 5, scope: !2908)
!2908 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2475, column: 5)
!2909 = !DILocation(line: 2475, column: 5, scope: !679)
!2910 = !DILocation(line: 2475, column: 5, scope: !2911)
!2911 = !DILexicalBlockFile(scope: !2912, file: !1, discriminator: 1)
!2912 = distinct !DILexicalBlock(scope: !2913, file: !1, line: 2475, column: 5)
!2913 = distinct !DILexicalBlock(scope: !2908, file: !1, line: 2475, column: 5)
!2914 = !DILocation(line: 2475, column: 5, scope: !2913)
!2915 = !DILocation(line: 2475, column: 5, scope: !2916)
!2916 = !DILexicalBlockFile(scope: !2912, file: !1, discriminator: 2)
!2917 = !DILocation(line: 2475, column: 5, scope: !2918)
!2918 = !DILexicalBlockFile(scope: !2913, file: !1, discriminator: 3)
!2919 = !DILocation(line: 2476, column: 5, scope: !2920)
!2920 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2476, column: 5)
!2921 = !DILocation(line: 2476, column: 5, scope: !679)
!2922 = !DILocation(line: 2476, column: 5, scope: !2923)
!2923 = !DILexicalBlockFile(scope: !2924, file: !1, discriminator: 1)
!2924 = distinct !DILexicalBlock(scope: !2925, file: !1, line: 2476, column: 5)
!2925 = distinct !DILexicalBlock(scope: !2920, file: !1, line: 2476, column: 5)
!2926 = !DILocation(line: 2476, column: 5, scope: !2925)
!2927 = !DILocation(line: 2476, column: 5, scope: !2928)
!2928 = !DILexicalBlockFile(scope: !2924, file: !1, discriminator: 2)
!2929 = !DILocation(line: 2476, column: 5, scope: !2930)
!2930 = !DILexicalBlockFile(scope: !2925, file: !1, discriminator: 3)
!2931 = !DILocation(line: 2477, column: 5, scope: !2932)
!2932 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2477, column: 5)
!2933 = !DILocation(line: 2477, column: 5, scope: !679)
!2934 = !DILocation(line: 2477, column: 5, scope: !2935)
!2935 = !DILexicalBlockFile(scope: !2936, file: !1, discriminator: 1)
!2936 = distinct !DILexicalBlock(scope: !2937, file: !1, line: 2477, column: 5)
!2937 = distinct !DILexicalBlock(scope: !2932, file: !1, line: 2477, column: 5)
!2938 = !DILocation(line: 2477, column: 5, scope: !2937)
!2939 = !DILocation(line: 2477, column: 5, scope: !2940)
!2940 = !DILexicalBlockFile(scope: !2936, file: !1, discriminator: 2)
!2941 = !DILocation(line: 2477, column: 5, scope: !2942)
!2942 = !DILexicalBlockFile(scope: !2937, file: !1, discriminator: 3)
!2943 = !DILocation(line: 2478, column: 5, scope: !2944)
!2944 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2478, column: 5)
!2945 = !DILocation(line: 2478, column: 5, scope: !679)
!2946 = !DILocation(line: 2478, column: 5, scope: !2947)
!2947 = !DILexicalBlockFile(scope: !2948, file: !1, discriminator: 1)
!2948 = distinct !DILexicalBlock(scope: !2949, file: !1, line: 2478, column: 5)
!2949 = distinct !DILexicalBlock(scope: !2944, file: !1, line: 2478, column: 5)
!2950 = !DILocation(line: 2478, column: 5, scope: !2949)
!2951 = !DILocation(line: 2478, column: 5, scope: !2952)
!2952 = !DILexicalBlockFile(scope: !2948, file: !1, discriminator: 2)
!2953 = !DILocation(line: 2478, column: 5, scope: !2954)
!2954 = !DILexicalBlockFile(scope: !2949, file: !1, discriminator: 3)
!2955 = !DILocation(line: 2479, column: 5, scope: !2956)
!2956 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2479, column: 5)
!2957 = !DILocation(line: 2479, column: 5, scope: !679)
!2958 = !DILocation(line: 2479, column: 5, scope: !2959)
!2959 = !DILexicalBlockFile(scope: !2960, file: !1, discriminator: 1)
!2960 = distinct !DILexicalBlock(scope: !2961, file: !1, line: 2479, column: 5)
!2961 = distinct !DILexicalBlock(scope: !2956, file: !1, line: 2479, column: 5)
!2962 = !DILocation(line: 2479, column: 5, scope: !2961)
!2963 = !DILocation(line: 2479, column: 5, scope: !2964)
!2964 = !DILexicalBlockFile(scope: !2960, file: !1, discriminator: 2)
!2965 = !DILocation(line: 2479, column: 5, scope: !2966)
!2966 = !DILexicalBlockFile(scope: !2961, file: !1, discriminator: 3)
!2967 = !DILocation(line: 2480, column: 5, scope: !2968)
!2968 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2480, column: 5)
!2969 = !DILocation(line: 2480, column: 5, scope: !679)
!2970 = !DILocation(line: 2480, column: 5, scope: !2971)
!2971 = !DILexicalBlockFile(scope: !2972, file: !1, discriminator: 1)
!2972 = distinct !DILexicalBlock(scope: !2973, file: !1, line: 2480, column: 5)
!2973 = distinct !DILexicalBlock(scope: !2968, file: !1, line: 2480, column: 5)
!2974 = !DILocation(line: 2480, column: 5, scope: !2973)
!2975 = !DILocation(line: 2480, column: 5, scope: !2976)
!2976 = !DILexicalBlockFile(scope: !2972, file: !1, discriminator: 2)
!2977 = !DILocation(line: 2480, column: 5, scope: !2978)
!2978 = !DILexicalBlockFile(scope: !2973, file: !1, discriminator: 3)
!2979 = !DILocation(line: 2481, column: 5, scope: !2980)
!2980 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2481, column: 5)
!2981 = !DILocation(line: 2481, column: 5, scope: !679)
!2982 = !DILocation(line: 2481, column: 5, scope: !2983)
!2983 = !DILexicalBlockFile(scope: !2984, file: !1, discriminator: 1)
!2984 = distinct !DILexicalBlock(scope: !2985, file: !1, line: 2481, column: 5)
!2985 = distinct !DILexicalBlock(scope: !2980, file: !1, line: 2481, column: 5)
!2986 = !DILocation(line: 2481, column: 5, scope: !2985)
!2987 = !DILocation(line: 2481, column: 5, scope: !2988)
!2988 = !DILexicalBlockFile(scope: !2984, file: !1, discriminator: 2)
!2989 = !DILocation(line: 2481, column: 5, scope: !2990)
!2990 = !DILexicalBlockFile(scope: !2985, file: !1, discriminator: 3)
!2991 = !DILocation(line: 2482, column: 5, scope: !2992)
!2992 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2482, column: 5)
!2993 = !DILocation(line: 2482, column: 5, scope: !679)
!2994 = !DILocation(line: 2482, column: 5, scope: !2995)
!2995 = !DILexicalBlockFile(scope: !2996, file: !1, discriminator: 1)
!2996 = distinct !DILexicalBlock(scope: !2997, file: !1, line: 2482, column: 5)
!2997 = distinct !DILexicalBlock(scope: !2992, file: !1, line: 2482, column: 5)
!2998 = !DILocation(line: 2482, column: 5, scope: !2997)
!2999 = !DILocation(line: 2482, column: 5, scope: !3000)
!3000 = !DILexicalBlockFile(scope: !2996, file: !1, discriminator: 2)
!3001 = !DILocation(line: 2482, column: 5, scope: !3002)
!3002 = !DILexicalBlockFile(scope: !2997, file: !1, discriminator: 3)
!3003 = !DILocation(line: 2483, column: 5, scope: !3004)
!3004 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2483, column: 5)
!3005 = !DILocation(line: 2483, column: 5, scope: !679)
!3006 = !DILocation(line: 2483, column: 5, scope: !3007)
!3007 = !DILexicalBlockFile(scope: !3008, file: !1, discriminator: 1)
!3008 = distinct !DILexicalBlock(scope: !3009, file: !1, line: 2483, column: 5)
!3009 = distinct !DILexicalBlock(scope: !3004, file: !1, line: 2483, column: 5)
!3010 = !DILocation(line: 2483, column: 5, scope: !3009)
!3011 = !DILocation(line: 2483, column: 5, scope: !3012)
!3012 = !DILexicalBlockFile(scope: !3008, file: !1, discriminator: 2)
!3013 = !DILocation(line: 2483, column: 5, scope: !3014)
!3014 = !DILexicalBlockFile(scope: !3009, file: !1, discriminator: 3)
!3015 = !DILocation(line: 2484, column: 5, scope: !3016)
!3016 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2484, column: 5)
!3017 = !DILocation(line: 2484, column: 5, scope: !679)
!3018 = !DILocation(line: 2484, column: 5, scope: !3019)
!3019 = !DILexicalBlockFile(scope: !3020, file: !1, discriminator: 1)
!3020 = distinct !DILexicalBlock(scope: !3021, file: !1, line: 2484, column: 5)
!3021 = distinct !DILexicalBlock(scope: !3016, file: !1, line: 2484, column: 5)
!3022 = !DILocation(line: 2484, column: 5, scope: !3021)
!3023 = !DILocation(line: 2484, column: 5, scope: !3024)
!3024 = !DILexicalBlockFile(scope: !3020, file: !1, discriminator: 2)
!3025 = !DILocation(line: 2484, column: 5, scope: !3026)
!3026 = !DILexicalBlockFile(scope: !3021, file: !1, discriminator: 3)
!3027 = !DILocation(line: 2485, column: 5, scope: !3028)
!3028 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2485, column: 5)
!3029 = !DILocation(line: 2485, column: 5, scope: !679)
!3030 = !DILocation(line: 2485, column: 5, scope: !3031)
!3031 = !DILexicalBlockFile(scope: !3032, file: !1, discriminator: 1)
!3032 = distinct !DILexicalBlock(scope: !3033, file: !1, line: 2485, column: 5)
!3033 = distinct !DILexicalBlock(scope: !3028, file: !1, line: 2485, column: 5)
!3034 = !DILocation(line: 2485, column: 5, scope: !3033)
!3035 = !DILocation(line: 2485, column: 5, scope: !3036)
!3036 = !DILexicalBlockFile(scope: !3032, file: !1, discriminator: 2)
!3037 = !DILocation(line: 2485, column: 5, scope: !3038)
!3038 = !DILexicalBlockFile(scope: !3033, file: !1, discriminator: 3)
!3039 = !DILocation(line: 2486, column: 5, scope: !3040)
!3040 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2486, column: 5)
!3041 = !DILocation(line: 2486, column: 5, scope: !679)
!3042 = !DILocation(line: 2486, column: 5, scope: !3043)
!3043 = !DILexicalBlockFile(scope: !3044, file: !1, discriminator: 1)
!3044 = distinct !DILexicalBlock(scope: !3045, file: !1, line: 2486, column: 5)
!3045 = distinct !DILexicalBlock(scope: !3040, file: !1, line: 2486, column: 5)
!3046 = !DILocation(line: 2486, column: 5, scope: !3045)
!3047 = !DILocation(line: 2486, column: 5, scope: !3048)
!3048 = !DILexicalBlockFile(scope: !3044, file: !1, discriminator: 2)
!3049 = !DILocation(line: 2486, column: 5, scope: !3050)
!3050 = !DILexicalBlockFile(scope: !3045, file: !1, discriminator: 3)
!3051 = !DILocation(line: 2487, column: 5, scope: !3052)
!3052 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2487, column: 5)
!3053 = !DILocation(line: 2487, column: 5, scope: !679)
!3054 = !DILocation(line: 2487, column: 5, scope: !3055)
!3055 = !DILexicalBlockFile(scope: !3056, file: !1, discriminator: 1)
!3056 = distinct !DILexicalBlock(scope: !3057, file: !1, line: 2487, column: 5)
!3057 = distinct !DILexicalBlock(scope: !3052, file: !1, line: 2487, column: 5)
!3058 = !DILocation(line: 2487, column: 5, scope: !3057)
!3059 = !DILocation(line: 2487, column: 5, scope: !3060)
!3060 = !DILexicalBlockFile(scope: !3056, file: !1, discriminator: 2)
!3061 = !DILocation(line: 2487, column: 5, scope: !3062)
!3062 = !DILexicalBlockFile(scope: !3057, file: !1, discriminator: 3)
!3063 = !DILocation(line: 2488, column: 5, scope: !3064)
!3064 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2488, column: 5)
!3065 = !DILocation(line: 2488, column: 5, scope: !679)
!3066 = !DILocation(line: 2488, column: 5, scope: !3067)
!3067 = !DILexicalBlockFile(scope: !3068, file: !1, discriminator: 1)
!3068 = distinct !DILexicalBlock(scope: !3069, file: !1, line: 2488, column: 5)
!3069 = distinct !DILexicalBlock(scope: !3064, file: !1, line: 2488, column: 5)
!3070 = !DILocation(line: 2488, column: 5, scope: !3069)
!3071 = !DILocation(line: 2488, column: 5, scope: !3072)
!3072 = !DILexicalBlockFile(scope: !3068, file: !1, discriminator: 2)
!3073 = !DILocation(line: 2488, column: 5, scope: !3074)
!3074 = !DILexicalBlockFile(scope: !3069, file: !1, discriminator: 3)
!3075 = !DILocation(line: 2489, column: 5, scope: !3076)
!3076 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2489, column: 5)
!3077 = !DILocation(line: 2489, column: 5, scope: !679)
!3078 = !DILocation(line: 2489, column: 5, scope: !3079)
!3079 = !DILexicalBlockFile(scope: !3080, file: !1, discriminator: 1)
!3080 = distinct !DILexicalBlock(scope: !3081, file: !1, line: 2489, column: 5)
!3081 = distinct !DILexicalBlock(scope: !3076, file: !1, line: 2489, column: 5)
!3082 = !DILocation(line: 2489, column: 5, scope: !3081)
!3083 = !DILocation(line: 2489, column: 5, scope: !3084)
!3084 = !DILexicalBlockFile(scope: !3080, file: !1, discriminator: 2)
!3085 = !DILocation(line: 2489, column: 5, scope: !3086)
!3086 = !DILexicalBlockFile(scope: !3081, file: !1, discriminator: 3)
!3087 = !DILocation(line: 2490, column: 5, scope: !3088)
!3088 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2490, column: 5)
!3089 = !DILocation(line: 2490, column: 5, scope: !679)
!3090 = !DILocation(line: 2490, column: 5, scope: !3091)
!3091 = !DILexicalBlockFile(scope: !3092, file: !1, discriminator: 1)
!3092 = distinct !DILexicalBlock(scope: !3093, file: !1, line: 2490, column: 5)
!3093 = distinct !DILexicalBlock(scope: !3088, file: !1, line: 2490, column: 5)
!3094 = !DILocation(line: 2490, column: 5, scope: !3093)
!3095 = !DILocation(line: 2490, column: 5, scope: !3096)
!3096 = !DILexicalBlockFile(scope: !3092, file: !1, discriminator: 2)
!3097 = !DILocation(line: 2490, column: 5, scope: !3098)
!3098 = !DILexicalBlockFile(scope: !3093, file: !1, discriminator: 3)
!3099 = !DILocation(line: 2491, column: 5, scope: !3100)
!3100 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2491, column: 5)
!3101 = !DILocation(line: 2491, column: 5, scope: !679)
!3102 = !DILocation(line: 2491, column: 5, scope: !3103)
!3103 = !DILexicalBlockFile(scope: !3104, file: !1, discriminator: 1)
!3104 = distinct !DILexicalBlock(scope: !3105, file: !1, line: 2491, column: 5)
!3105 = distinct !DILexicalBlock(scope: !3100, file: !1, line: 2491, column: 5)
!3106 = !DILocation(line: 2491, column: 5, scope: !3105)
!3107 = !DILocation(line: 2491, column: 5, scope: !3108)
!3108 = !DILexicalBlockFile(scope: !3104, file: !1, discriminator: 2)
!3109 = !DILocation(line: 2491, column: 5, scope: !3110)
!3110 = !DILexicalBlockFile(scope: !3105, file: !1, discriminator: 3)
!3111 = !DILocation(line: 2492, column: 5, scope: !3112)
!3112 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2492, column: 5)
!3113 = !DILocation(line: 2492, column: 5, scope: !679)
!3114 = !DILocation(line: 2492, column: 5, scope: !3115)
!3115 = !DILexicalBlockFile(scope: !3116, file: !1, discriminator: 1)
!3116 = distinct !DILexicalBlock(scope: !3117, file: !1, line: 2492, column: 5)
!3117 = distinct !DILexicalBlock(scope: !3112, file: !1, line: 2492, column: 5)
!3118 = !DILocation(line: 2492, column: 5, scope: !3117)
!3119 = !DILocation(line: 2492, column: 5, scope: !3120)
!3120 = !DILexicalBlockFile(scope: !3116, file: !1, discriminator: 2)
!3121 = !DILocation(line: 2492, column: 5, scope: !3122)
!3122 = !DILexicalBlockFile(scope: !3117, file: !1, discriminator: 3)
!3123 = !DILocation(line: 2493, column: 5, scope: !3124)
!3124 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2493, column: 5)
!3125 = !DILocation(line: 2493, column: 5, scope: !679)
!3126 = !DILocation(line: 2493, column: 5, scope: !3127)
!3127 = !DILexicalBlockFile(scope: !3128, file: !1, discriminator: 1)
!3128 = distinct !DILexicalBlock(scope: !3129, file: !1, line: 2493, column: 5)
!3129 = distinct !DILexicalBlock(scope: !3124, file: !1, line: 2493, column: 5)
!3130 = !DILocation(line: 2493, column: 5, scope: !3129)
!3131 = !DILocation(line: 2493, column: 5, scope: !3132)
!3132 = !DILexicalBlockFile(scope: !3128, file: !1, discriminator: 2)
!3133 = !DILocation(line: 2493, column: 5, scope: !3134)
!3134 = !DILexicalBlockFile(scope: !3129, file: !1, discriminator: 3)
!3135 = !DILocation(line: 2494, column: 5, scope: !3136)
!3136 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2494, column: 5)
!3137 = !DILocation(line: 2494, column: 5, scope: !679)
!3138 = !DILocation(line: 2494, column: 5, scope: !3139)
!3139 = !DILexicalBlockFile(scope: !3140, file: !1, discriminator: 1)
!3140 = distinct !DILexicalBlock(scope: !3141, file: !1, line: 2494, column: 5)
!3141 = distinct !DILexicalBlock(scope: !3136, file: !1, line: 2494, column: 5)
!3142 = !DILocation(line: 2494, column: 5, scope: !3141)
!3143 = !DILocation(line: 2494, column: 5, scope: !3144)
!3144 = !DILexicalBlockFile(scope: !3140, file: !1, discriminator: 2)
!3145 = !DILocation(line: 2494, column: 5, scope: !3146)
!3146 = !DILexicalBlockFile(scope: !3141, file: !1, discriminator: 3)
!3147 = !DILocation(line: 2495, column: 5, scope: !3148)
!3148 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2495, column: 5)
!3149 = !DILocation(line: 2495, column: 5, scope: !679)
!3150 = !DILocation(line: 2495, column: 5, scope: !3151)
!3151 = !DILexicalBlockFile(scope: !3152, file: !1, discriminator: 1)
!3152 = distinct !DILexicalBlock(scope: !3153, file: !1, line: 2495, column: 5)
!3153 = distinct !DILexicalBlock(scope: !3148, file: !1, line: 2495, column: 5)
!3154 = !DILocation(line: 2495, column: 5, scope: !3153)
!3155 = !DILocation(line: 2495, column: 5, scope: !3156)
!3156 = !DILexicalBlockFile(scope: !3152, file: !1, discriminator: 2)
!3157 = !DILocation(line: 2495, column: 5, scope: !3158)
!3158 = !DILexicalBlockFile(scope: !3153, file: !1, discriminator: 3)
!3159 = !DILocation(line: 2496, column: 5, scope: !3160)
!3160 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2496, column: 5)
!3161 = !DILocation(line: 2496, column: 5, scope: !679)
!3162 = !DILocation(line: 2496, column: 5, scope: !3163)
!3163 = !DILexicalBlockFile(scope: !3164, file: !1, discriminator: 1)
!3164 = distinct !DILexicalBlock(scope: !3165, file: !1, line: 2496, column: 5)
!3165 = distinct !DILexicalBlock(scope: !3160, file: !1, line: 2496, column: 5)
!3166 = !DILocation(line: 2496, column: 5, scope: !3165)
!3167 = !DILocation(line: 2496, column: 5, scope: !3168)
!3168 = !DILexicalBlockFile(scope: !3164, file: !1, discriminator: 2)
!3169 = !DILocation(line: 2496, column: 5, scope: !3170)
!3170 = !DILexicalBlockFile(scope: !3165, file: !1, discriminator: 3)
!3171 = !DILocation(line: 2497, column: 5, scope: !3172)
!3172 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2497, column: 5)
!3173 = !DILocation(line: 2497, column: 5, scope: !679)
!3174 = !DILocation(line: 2497, column: 5, scope: !3175)
!3175 = !DILexicalBlockFile(scope: !3176, file: !1, discriminator: 1)
!3176 = distinct !DILexicalBlock(scope: !3177, file: !1, line: 2497, column: 5)
!3177 = distinct !DILexicalBlock(scope: !3172, file: !1, line: 2497, column: 5)
!3178 = !DILocation(line: 2497, column: 5, scope: !3177)
!3179 = !DILocation(line: 2497, column: 5, scope: !3180)
!3180 = !DILexicalBlockFile(scope: !3176, file: !1, discriminator: 2)
!3181 = !DILocation(line: 2497, column: 5, scope: !3182)
!3182 = !DILexicalBlockFile(scope: !3177, file: !1, discriminator: 3)
!3183 = !DILocation(line: 2498, column: 5, scope: !3184)
!3184 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2498, column: 5)
!3185 = !DILocation(line: 2498, column: 5, scope: !679)
!3186 = !DILocation(line: 2498, column: 5, scope: !3187)
!3187 = !DILexicalBlockFile(scope: !3188, file: !1, discriminator: 1)
!3188 = distinct !DILexicalBlock(scope: !3189, file: !1, line: 2498, column: 5)
!3189 = distinct !DILexicalBlock(scope: !3184, file: !1, line: 2498, column: 5)
!3190 = !DILocation(line: 2498, column: 5, scope: !3189)
!3191 = !DILocation(line: 2498, column: 5, scope: !3192)
!3192 = !DILexicalBlockFile(scope: !3188, file: !1, discriminator: 2)
!3193 = !DILocation(line: 2498, column: 5, scope: !3194)
!3194 = !DILexicalBlockFile(scope: !3189, file: !1, discriminator: 3)
!3195 = !DILocation(line: 2499, column: 5, scope: !3196)
!3196 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2499, column: 5)
!3197 = !DILocation(line: 2499, column: 5, scope: !679)
!3198 = !DILocation(line: 2499, column: 5, scope: !3199)
!3199 = !DILexicalBlockFile(scope: !3200, file: !1, discriminator: 1)
!3200 = distinct !DILexicalBlock(scope: !3201, file: !1, line: 2499, column: 5)
!3201 = distinct !DILexicalBlock(scope: !3196, file: !1, line: 2499, column: 5)
!3202 = !DILocation(line: 2499, column: 5, scope: !3201)
!3203 = !DILocation(line: 2499, column: 5, scope: !3204)
!3204 = !DILexicalBlockFile(scope: !3200, file: !1, discriminator: 2)
!3205 = !DILocation(line: 2499, column: 5, scope: !3206)
!3206 = !DILexicalBlockFile(scope: !3201, file: !1, discriminator: 3)
!3207 = !DILocation(line: 2500, column: 5, scope: !3208)
!3208 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2500, column: 5)
!3209 = !DILocation(line: 2500, column: 5, scope: !679)
!3210 = !DILocation(line: 2500, column: 5, scope: !3211)
!3211 = !DILexicalBlockFile(scope: !3212, file: !1, discriminator: 1)
!3212 = distinct !DILexicalBlock(scope: !3213, file: !1, line: 2500, column: 5)
!3213 = distinct !DILexicalBlock(scope: !3208, file: !1, line: 2500, column: 5)
!3214 = !DILocation(line: 2500, column: 5, scope: !3213)
!3215 = !DILocation(line: 2500, column: 5, scope: !3216)
!3216 = !DILexicalBlockFile(scope: !3212, file: !1, discriminator: 2)
!3217 = !DILocation(line: 2500, column: 5, scope: !3218)
!3218 = !DILexicalBlockFile(scope: !3213, file: !1, discriminator: 3)
!3219 = !DILocation(line: 2503, column: 5, scope: !3220)
!3220 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2503, column: 5)
!3221 = !DILocation(line: 2503, column: 5, scope: !679)
!3222 = !DILocation(line: 2503, column: 5, scope: !3223)
!3223 = !DILexicalBlockFile(scope: !3224, file: !1, discriminator: 1)
!3224 = distinct !DILexicalBlock(scope: !3225, file: !1, line: 2503, column: 5)
!3225 = distinct !DILexicalBlock(scope: !3220, file: !1, line: 2503, column: 5)
!3226 = !DILocation(line: 2503, column: 5, scope: !3225)
!3227 = !DILocation(line: 2503, column: 5, scope: !3228)
!3228 = !DILexicalBlockFile(scope: !3224, file: !1, discriminator: 2)
!3229 = !DILocation(line: 2503, column: 5, scope: !3230)
!3230 = !DILexicalBlockFile(scope: !3225, file: !1, discriminator: 3)
!3231 = !DILocation(line: 2505, column: 5, scope: !3232)
!3232 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2505, column: 5)
!3233 = !DILocation(line: 2505, column: 5, scope: !679)
!3234 = !DILocation(line: 2505, column: 5, scope: !3235)
!3235 = !DILexicalBlockFile(scope: !3236, file: !1, discriminator: 1)
!3236 = distinct !DILexicalBlock(scope: !3237, file: !1, line: 2505, column: 5)
!3237 = distinct !DILexicalBlock(scope: !3232, file: !1, line: 2505, column: 5)
!3238 = !DILocation(line: 2505, column: 5, scope: !3237)
!3239 = !DILocation(line: 2505, column: 5, scope: !3240)
!3240 = !DILexicalBlockFile(scope: !3236, file: !1, discriminator: 2)
!3241 = !DILocation(line: 2505, column: 5, scope: !3242)
!3242 = !DILexicalBlockFile(scope: !3237, file: !1, discriminator: 3)
!3243 = !DILocation(line: 2506, column: 5, scope: !3244)
!3244 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2506, column: 5)
!3245 = !DILocation(line: 2506, column: 5, scope: !679)
!3246 = !DILocation(line: 2506, column: 5, scope: !3247)
!3247 = !DILexicalBlockFile(scope: !3248, file: !1, discriminator: 1)
!3248 = distinct !DILexicalBlock(scope: !3249, file: !1, line: 2506, column: 5)
!3249 = distinct !DILexicalBlock(scope: !3244, file: !1, line: 2506, column: 5)
!3250 = !DILocation(line: 2506, column: 5, scope: !3249)
!3251 = !DILocation(line: 2506, column: 5, scope: !3252)
!3252 = !DILexicalBlockFile(scope: !3248, file: !1, discriminator: 2)
!3253 = !DILocation(line: 2506, column: 5, scope: !3254)
!3254 = !DILexicalBlockFile(scope: !3249, file: !1, discriminator: 3)
!3255 = !DILocation(line: 2507, column: 5, scope: !3256)
!3256 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2507, column: 5)
!3257 = !DILocation(line: 2507, column: 5, scope: !679)
!3258 = !DILocation(line: 2507, column: 5, scope: !3259)
!3259 = !DILexicalBlockFile(scope: !3260, file: !1, discriminator: 1)
!3260 = distinct !DILexicalBlock(scope: !3261, file: !1, line: 2507, column: 5)
!3261 = distinct !DILexicalBlock(scope: !3256, file: !1, line: 2507, column: 5)
!3262 = !DILocation(line: 2507, column: 5, scope: !3261)
!3263 = !DILocation(line: 2507, column: 5, scope: !3264)
!3264 = !DILexicalBlockFile(scope: !3260, file: !1, discriminator: 2)
!3265 = !DILocation(line: 2507, column: 5, scope: !3266)
!3266 = !DILexicalBlockFile(scope: !3261, file: !1, discriminator: 3)
!3267 = !DILocation(line: 2508, column: 5, scope: !3268)
!3268 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2508, column: 5)
!3269 = !DILocation(line: 2508, column: 5, scope: !679)
!3270 = !DILocation(line: 2508, column: 5, scope: !3271)
!3271 = !DILexicalBlockFile(scope: !3272, file: !1, discriminator: 1)
!3272 = distinct !DILexicalBlock(scope: !3273, file: !1, line: 2508, column: 5)
!3273 = distinct !DILexicalBlock(scope: !3268, file: !1, line: 2508, column: 5)
!3274 = !DILocation(line: 2508, column: 5, scope: !3273)
!3275 = !DILocation(line: 2508, column: 5, scope: !3276)
!3276 = !DILexicalBlockFile(scope: !3272, file: !1, discriminator: 2)
!3277 = !DILocation(line: 2508, column: 5, scope: !3278)
!3278 = !DILexicalBlockFile(scope: !3273, file: !1, discriminator: 3)
!3279 = !DILocation(line: 2509, column: 5, scope: !3280)
!3280 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2509, column: 5)
!3281 = !DILocation(line: 2509, column: 5, scope: !679)
!3282 = !DILocation(line: 2509, column: 5, scope: !3283)
!3283 = !DILexicalBlockFile(scope: !3284, file: !1, discriminator: 1)
!3284 = distinct !DILexicalBlock(scope: !3285, file: !1, line: 2509, column: 5)
!3285 = distinct !DILexicalBlock(scope: !3280, file: !1, line: 2509, column: 5)
!3286 = !DILocation(line: 2509, column: 5, scope: !3285)
!3287 = !DILocation(line: 2509, column: 5, scope: !3288)
!3288 = !DILexicalBlockFile(scope: !3284, file: !1, discriminator: 2)
!3289 = !DILocation(line: 2509, column: 5, scope: !3290)
!3290 = !DILexicalBlockFile(scope: !3285, file: !1, discriminator: 3)
!3291 = !DILocation(line: 2510, column: 5, scope: !3292)
!3292 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2510, column: 5)
!3293 = !DILocation(line: 2510, column: 5, scope: !679)
!3294 = !DILocation(line: 2510, column: 5, scope: !3295)
!3295 = !DILexicalBlockFile(scope: !3296, file: !1, discriminator: 1)
!3296 = distinct !DILexicalBlock(scope: !3297, file: !1, line: 2510, column: 5)
!3297 = distinct !DILexicalBlock(scope: !3292, file: !1, line: 2510, column: 5)
!3298 = !DILocation(line: 2510, column: 5, scope: !3297)
!3299 = !DILocation(line: 2510, column: 5, scope: !3300)
!3300 = !DILexicalBlockFile(scope: !3296, file: !1, discriminator: 2)
!3301 = !DILocation(line: 2510, column: 5, scope: !3302)
!3302 = !DILexicalBlockFile(scope: !3297, file: !1, discriminator: 3)
!3303 = !DILocation(line: 2511, column: 5, scope: !3304)
!3304 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2511, column: 5)
!3305 = !DILocation(line: 2511, column: 5, scope: !679)
!3306 = !DILocation(line: 2511, column: 5, scope: !3307)
!3307 = !DILexicalBlockFile(scope: !3308, file: !1, discriminator: 1)
!3308 = distinct !DILexicalBlock(scope: !3309, file: !1, line: 2511, column: 5)
!3309 = distinct !DILexicalBlock(scope: !3304, file: !1, line: 2511, column: 5)
!3310 = !DILocation(line: 2511, column: 5, scope: !3309)
!3311 = !DILocation(line: 2511, column: 5, scope: !3312)
!3312 = !DILexicalBlockFile(scope: !3308, file: !1, discriminator: 2)
!3313 = !DILocation(line: 2511, column: 5, scope: !3314)
!3314 = !DILexicalBlockFile(scope: !3309, file: !1, discriminator: 3)
!3315 = !DILocation(line: 2512, column: 5, scope: !3316)
!3316 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2512, column: 5)
!3317 = !DILocation(line: 2512, column: 5, scope: !679)
!3318 = !DILocation(line: 2512, column: 5, scope: !3319)
!3319 = !DILexicalBlockFile(scope: !3320, file: !1, discriminator: 1)
!3320 = distinct !DILexicalBlock(scope: !3321, file: !1, line: 2512, column: 5)
!3321 = distinct !DILexicalBlock(scope: !3316, file: !1, line: 2512, column: 5)
!3322 = !DILocation(line: 2512, column: 5, scope: !3321)
!3323 = !DILocation(line: 2512, column: 5, scope: !3324)
!3324 = !DILexicalBlockFile(scope: !3320, file: !1, discriminator: 2)
!3325 = !DILocation(line: 2512, column: 5, scope: !3326)
!3326 = !DILexicalBlockFile(scope: !3321, file: !1, discriminator: 3)
!3327 = !DILocation(line: 2513, column: 5, scope: !3328)
!3328 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2513, column: 5)
!3329 = !DILocation(line: 2513, column: 5, scope: !679)
!3330 = !DILocation(line: 2513, column: 5, scope: !3331)
!3331 = !DILexicalBlockFile(scope: !3332, file: !1, discriminator: 1)
!3332 = distinct !DILexicalBlock(scope: !3333, file: !1, line: 2513, column: 5)
!3333 = distinct !DILexicalBlock(scope: !3328, file: !1, line: 2513, column: 5)
!3334 = !DILocation(line: 2513, column: 5, scope: !3333)
!3335 = !DILocation(line: 2513, column: 5, scope: !3336)
!3336 = !DILexicalBlockFile(scope: !3332, file: !1, discriminator: 2)
!3337 = !DILocation(line: 2513, column: 5, scope: !3338)
!3338 = !DILexicalBlockFile(scope: !3333, file: !1, discriminator: 3)
!3339 = !DILocation(line: 2514, column: 5, scope: !3340)
!3340 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2514, column: 5)
!3341 = !DILocation(line: 2514, column: 5, scope: !679)
!3342 = !DILocation(line: 2514, column: 5, scope: !3343)
!3343 = !DILexicalBlockFile(scope: !3344, file: !1, discriminator: 1)
!3344 = distinct !DILexicalBlock(scope: !3345, file: !1, line: 2514, column: 5)
!3345 = distinct !DILexicalBlock(scope: !3340, file: !1, line: 2514, column: 5)
!3346 = !DILocation(line: 2514, column: 5, scope: !3345)
!3347 = !DILocation(line: 2514, column: 5, scope: !3348)
!3348 = !DILexicalBlockFile(scope: !3344, file: !1, discriminator: 2)
!3349 = !DILocation(line: 2514, column: 5, scope: !3350)
!3350 = !DILexicalBlockFile(scope: !3345, file: !1, discriminator: 3)
!3351 = !DILocation(line: 2515, column: 5, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2515, column: 5)
!3353 = !DILocation(line: 2515, column: 5, scope: !679)
!3354 = !DILocation(line: 2515, column: 5, scope: !3355)
!3355 = !DILexicalBlockFile(scope: !3356, file: !1, discriminator: 1)
!3356 = distinct !DILexicalBlock(scope: !3357, file: !1, line: 2515, column: 5)
!3357 = distinct !DILexicalBlock(scope: !3352, file: !1, line: 2515, column: 5)
!3358 = !DILocation(line: 2515, column: 5, scope: !3357)
!3359 = !DILocation(line: 2515, column: 5, scope: !3360)
!3360 = !DILexicalBlockFile(scope: !3356, file: !1, discriminator: 2)
!3361 = !DILocation(line: 2515, column: 5, scope: !3362)
!3362 = !DILexicalBlockFile(scope: !3357, file: !1, discriminator: 3)
!3363 = !DILocation(line: 2516, column: 5, scope: !3364)
!3364 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2516, column: 5)
!3365 = !DILocation(line: 2516, column: 5, scope: !679)
!3366 = !DILocation(line: 2516, column: 5, scope: !3367)
!3367 = !DILexicalBlockFile(scope: !3368, file: !1, discriminator: 1)
!3368 = distinct !DILexicalBlock(scope: !3369, file: !1, line: 2516, column: 5)
!3369 = distinct !DILexicalBlock(scope: !3364, file: !1, line: 2516, column: 5)
!3370 = !DILocation(line: 2516, column: 5, scope: !3369)
!3371 = !DILocation(line: 2516, column: 5, scope: !3372)
!3372 = !DILexicalBlockFile(scope: !3368, file: !1, discriminator: 2)
!3373 = !DILocation(line: 2516, column: 5, scope: !3374)
!3374 = !DILexicalBlockFile(scope: !3369, file: !1, discriminator: 3)
!3375 = !DILocation(line: 2517, column: 5, scope: !3376)
!3376 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2517, column: 5)
!3377 = !DILocation(line: 2517, column: 5, scope: !679)
!3378 = !DILocation(line: 2517, column: 5, scope: !3379)
!3379 = !DILexicalBlockFile(scope: !3380, file: !1, discriminator: 1)
!3380 = distinct !DILexicalBlock(scope: !3381, file: !1, line: 2517, column: 5)
!3381 = distinct !DILexicalBlock(scope: !3376, file: !1, line: 2517, column: 5)
!3382 = !DILocation(line: 2517, column: 5, scope: !3381)
!3383 = !DILocation(line: 2517, column: 5, scope: !3384)
!3384 = !DILexicalBlockFile(scope: !3380, file: !1, discriminator: 2)
!3385 = !DILocation(line: 2517, column: 5, scope: !3386)
!3386 = !DILexicalBlockFile(scope: !3381, file: !1, discriminator: 3)
!3387 = !DILocation(line: 2518, column: 5, scope: !3388)
!3388 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2518, column: 5)
!3389 = !DILocation(line: 2518, column: 5, scope: !679)
!3390 = !DILocation(line: 2518, column: 5, scope: !3391)
!3391 = !DILexicalBlockFile(scope: !3392, file: !1, discriminator: 1)
!3392 = distinct !DILexicalBlock(scope: !3393, file: !1, line: 2518, column: 5)
!3393 = distinct !DILexicalBlock(scope: !3388, file: !1, line: 2518, column: 5)
!3394 = !DILocation(line: 2518, column: 5, scope: !3393)
!3395 = !DILocation(line: 2518, column: 5, scope: !3396)
!3396 = !DILexicalBlockFile(scope: !3392, file: !1, discriminator: 2)
!3397 = !DILocation(line: 2518, column: 5, scope: !3398)
!3398 = !DILexicalBlockFile(scope: !3393, file: !1, discriminator: 3)
!3399 = !DILocation(line: 2520, column: 13, scope: !679)
!3400 = !DILocation(line: 2452, column: 15, scope: !679)
!3401 = !DILocation(line: 2521, column: 15, scope: !3402)
!3402 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2521, column: 9)
!3403 = !DILocation(line: 2521, column: 9, scope: !679)
!3404 = !DILocation(line: 2522, column: 9, scope: !3402)
!3405 = !DILocation(line: 2524, column: 5, scope: !3406)
!3406 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2524, column: 5)
!3407 = !DILocation(line: 2524, column: 5, scope: !679)
!3408 = !DILocation(line: 2524, column: 5, scope: !3409)
!3409 = !DILexicalBlockFile(scope: !3406, file: !1, discriminator: 1)
!3410 = !DILocation(line: 2525, column: 5, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2525, column: 5)
!3412 = !DILocation(line: 2525, column: 5, scope: !679)
!3413 = !DILocation(line: 2525, column: 5, scope: !3414)
!3414 = !DILexicalBlockFile(scope: !3411, file: !1, discriminator: 1)
!3415 = !DILocation(line: 2526, column: 5, scope: !3416)
!3416 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2526, column: 5)
!3417 = !DILocation(line: 2526, column: 5, scope: !679)
!3418 = !DILocation(line: 2526, column: 5, scope: !3419)
!3419 = !DILexicalBlockFile(scope: !3416, file: !1, discriminator: 1)
!3420 = !DILocation(line: 2527, column: 5, scope: !3421)
!3421 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2527, column: 5)
!3422 = !DILocation(line: 2527, column: 5, scope: !679)
!3423 = !DILocation(line: 2527, column: 5, scope: !3424)
!3424 = !DILexicalBlockFile(scope: !3421, file: !1, discriminator: 1)
!3425 = !DILocation(line: 2528, column: 5, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2528, column: 5)
!3427 = !DILocation(line: 2528, column: 5, scope: !679)
!3428 = !DILocation(line: 2528, column: 5, scope: !3429)
!3429 = !DILexicalBlockFile(scope: !3426, file: !1, discriminator: 1)
!3430 = !DILocation(line: 2529, column: 5, scope: !3431)
!3431 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2529, column: 5)
!3432 = !DILocation(line: 2529, column: 5, scope: !679)
!3433 = !DILocation(line: 2529, column: 5, scope: !3434)
!3434 = !DILexicalBlockFile(scope: !3431, file: !1, discriminator: 1)
!3435 = !DILocation(line: 2530, column: 5, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2530, column: 5)
!3437 = !DILocation(line: 2530, column: 5, scope: !679)
!3438 = !DILocation(line: 2530, column: 5, scope: !3439)
!3439 = !DILexicalBlockFile(scope: !3436, file: !1, discriminator: 1)
!3440 = !DILocation(line: 2531, column: 5, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2531, column: 5)
!3442 = !DILocation(line: 2531, column: 5, scope: !679)
!3443 = !DILocation(line: 2531, column: 5, scope: !3444)
!3444 = !DILexicalBlockFile(scope: !3441, file: !1, discriminator: 1)
!3445 = !DILocation(line: 2532, column: 5, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2532, column: 5)
!3447 = !DILocation(line: 2532, column: 5, scope: !679)
!3448 = !DILocation(line: 2532, column: 5, scope: !3449)
!3449 = !DILexicalBlockFile(scope: !3446, file: !1, discriminator: 1)
!3450 = !DILocation(line: 2533, column: 5, scope: !679)
!3451 = !DILocation(line: 2533, column: 5, scope: !3452)
!3452 = !DILexicalBlockFile(scope: !684, file: !1, discriminator: 1)
!3453 = !DILocation(line: 2533, column: 5, scope: !687)
!3454 = !DILocation(line: 2533, column: 5, scope: !684)
!3455 = !DILocation(line: 2533, column: 5, scope: !3456)
!3456 = !DILexicalBlockFile(scope: !686, file: !1, discriminator: 4)
!3457 = !DILocation(line: 2533, column: 5, scope: !3458)
!3458 = distinct !DILexicalBlock(scope: !686, file: !1, line: 2533, column: 5)
!3459 = !DILocation(line: 2533, column: 5, scope: !686)
!3460 = !DILocation(line: 2533, column: 5, scope: !3461)
!3461 = !DILexicalBlockFile(scope: !3458, file: !1, discriminator: 6)
!3462 = !DILocation(line: 2533, column: 5, scope: !3463)
!3463 = !DILexicalBlockFile(scope: !679, file: !1, discriminator: 12)
!3464 = !DILocation(line: 2533, column: 5, scope: !3465)
!3465 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2533, column: 5)
!3466 = !DILocation(line: 2533, column: 5, scope: !3467)
!3467 = !DILexicalBlockFile(scope: !3465, file: !1, discriminator: 13)
!3468 = !DILocation(line: 2534, column: 5, scope: !679)
!3469 = !DILocation(line: 2534, column: 5, scope: !3470)
!3470 = !DILexicalBlockFile(scope: !689, file: !1, discriminator: 1)
!3471 = !DILocation(line: 2534, column: 5, scope: !692)
!3472 = !DILocation(line: 2534, column: 5, scope: !689)
!3473 = !DILocation(line: 2534, column: 5, scope: !3474)
!3474 = !DILexicalBlockFile(scope: !691, file: !1, discriminator: 4)
!3475 = !DILocation(line: 2534, column: 5, scope: !3476)
!3476 = distinct !DILexicalBlock(scope: !691, file: !1, line: 2534, column: 5)
!3477 = !DILocation(line: 2534, column: 5, scope: !691)
!3478 = !DILocation(line: 2534, column: 5, scope: !3479)
!3479 = !DILexicalBlockFile(scope: !3476, file: !1, discriminator: 6)
!3480 = !DILocation(line: 2534, column: 5, scope: !3463)
!3481 = !DILocation(line: 2534, column: 5, scope: !3482)
!3482 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2534, column: 5)
!3483 = !DILocation(line: 2534, column: 5, scope: !3484)
!3484 = !DILexicalBlockFile(scope: !3482, file: !1, discriminator: 13)
!3485 = !DILocation(line: 2538, column: 5, scope: !3486)
!3486 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2538, column: 5)
!3487 = !DILocation(line: 2538, column: 5, scope: !679)
!3488 = !DILocation(line: 2538, column: 5, scope: !3489)
!3489 = !DILexicalBlockFile(scope: !3486, file: !1, discriminator: 1)
!3490 = !DILocation(line: 2539, column: 5, scope: !3491)
!3491 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2539, column: 5)
!3492 = !DILocation(line: 2539, column: 5, scope: !679)
!3493 = !DILocation(line: 2539, column: 5, scope: !3494)
!3494 = !DILexicalBlockFile(scope: !3491, file: !1, discriminator: 1)
!3495 = !DILocation(line: 2540, column: 5, scope: !3496)
!3496 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2540, column: 5)
!3497 = !DILocation(line: 2540, column: 5, scope: !679)
!3498 = !DILocation(line: 2540, column: 5, scope: !3499)
!3499 = !DILexicalBlockFile(scope: !3496, file: !1, discriminator: 1)
!3500 = !DILocation(line: 2541, column: 5, scope: !3501)
!3501 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2541, column: 5)
!3502 = !DILocation(line: 2541, column: 5, scope: !679)
!3503 = !DILocation(line: 2541, column: 5, scope: !3504)
!3504 = !DILexicalBlockFile(scope: !3501, file: !1, discriminator: 1)
!3505 = !DILocation(line: 2542, column: 5, scope: !3506)
!3506 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2542, column: 5)
!3507 = !DILocation(line: 2542, column: 5, scope: !679)
!3508 = !DILocation(line: 2542, column: 5, scope: !3509)
!3509 = !DILexicalBlockFile(scope: !3506, file: !1, discriminator: 1)
!3510 = !DILocation(line: 2543, column: 5, scope: !3511)
!3511 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2543, column: 5)
!3512 = !DILocation(line: 2543, column: 5, scope: !679)
!3513 = !DILocation(line: 2543, column: 5, scope: !3514)
!3514 = !DILexicalBlockFile(scope: !3511, file: !1, discriminator: 1)
!3515 = !DILocation(line: 2544, column: 5, scope: !3516)
!3516 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2544, column: 5)
!3517 = !DILocation(line: 2544, column: 5, scope: !679)
!3518 = !DILocation(line: 2544, column: 5, scope: !3519)
!3519 = !DILexicalBlockFile(scope: !3516, file: !1, discriminator: 1)
!3520 = !DILocation(line: 2545, column: 5, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2545, column: 5)
!3522 = !DILocation(line: 2545, column: 5, scope: !679)
!3523 = !DILocation(line: 2545, column: 5, scope: !3524)
!3524 = !DILexicalBlockFile(scope: !3521, file: !1, discriminator: 1)
!3525 = !DILocation(line: 2546, column: 5, scope: !3526)
!3526 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2546, column: 5)
!3527 = !DILocation(line: 2546, column: 5, scope: !679)
!3528 = !DILocation(line: 2546, column: 5, scope: !3529)
!3529 = !DILexicalBlockFile(scope: !3526, file: !1, discriminator: 1)
!3530 = !DILocation(line: 2547, column: 5, scope: !3531)
!3531 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2547, column: 5)
!3532 = !DILocation(line: 2547, column: 5, scope: !679)
!3533 = !DILocation(line: 2547, column: 5, scope: !3534)
!3534 = !DILexicalBlockFile(scope: !3531, file: !1, discriminator: 1)
!3535 = !DILocation(line: 2548, column: 5, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2548, column: 5)
!3537 = !DILocation(line: 2548, column: 5, scope: !679)
!3538 = !DILocation(line: 2548, column: 5, scope: !3539)
!3539 = !DILexicalBlockFile(scope: !3536, file: !1, discriminator: 1)
!3540 = !DILocation(line: 2549, column: 5, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2549, column: 5)
!3542 = !DILocation(line: 2549, column: 5, scope: !679)
!3543 = !DILocation(line: 2549, column: 5, scope: !3544)
!3544 = !DILexicalBlockFile(scope: !3541, file: !1, discriminator: 1)
!3545 = !DILocation(line: 2550, column: 5, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2550, column: 5)
!3547 = !DILocation(line: 2550, column: 5, scope: !679)
!3548 = !DILocation(line: 2550, column: 5, scope: !3549)
!3549 = !DILexicalBlockFile(scope: !3546, file: !1, discriminator: 1)
!3550 = !DILocation(line: 2551, column: 5, scope: !3551)
!3551 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2551, column: 5)
!3552 = !DILocation(line: 2551, column: 5, scope: !679)
!3553 = !DILocation(line: 2551, column: 5, scope: !3554)
!3554 = !DILexicalBlockFile(scope: !3551, file: !1, discriminator: 1)
!3555 = !DILocation(line: 2552, column: 5, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2552, column: 5)
!3557 = !DILocation(line: 2552, column: 5, scope: !679)
!3558 = !DILocation(line: 2552, column: 5, scope: !3559)
!3559 = !DILexicalBlockFile(scope: !3556, file: !1, discriminator: 1)
!3560 = !DILocation(line: 2553, column: 5, scope: !3561)
!3561 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2553, column: 5)
!3562 = !DILocation(line: 2553, column: 5, scope: !679)
!3563 = !DILocation(line: 2553, column: 5, scope: !3564)
!3564 = !DILexicalBlockFile(scope: !3561, file: !1, discriminator: 1)
!3565 = !DILocation(line: 2554, column: 5, scope: !3566)
!3566 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2554, column: 5)
!3567 = !DILocation(line: 2554, column: 5, scope: !679)
!3568 = !DILocation(line: 2554, column: 5, scope: !3569)
!3569 = !DILexicalBlockFile(scope: !3566, file: !1, discriminator: 1)
!3570 = !DILocation(line: 2555, column: 5, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2555, column: 5)
!3572 = !DILocation(line: 2555, column: 5, scope: !679)
!3573 = !DILocation(line: 2555, column: 5, scope: !3574)
!3574 = !DILexicalBlockFile(scope: !3571, file: !1, discriminator: 1)
!3575 = !DILocation(line: 2556, column: 5, scope: !3576)
!3576 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2556, column: 5)
!3577 = !DILocation(line: 2556, column: 5, scope: !679)
!3578 = !DILocation(line: 2556, column: 5, scope: !3579)
!3579 = !DILexicalBlockFile(scope: !3576, file: !1, discriminator: 1)
!3580 = !DILocation(line: 2557, column: 5, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2557, column: 5)
!3582 = !DILocation(line: 2557, column: 5, scope: !679)
!3583 = !DILocation(line: 2557, column: 5, scope: !3584)
!3584 = !DILexicalBlockFile(scope: !3581, file: !1, discriminator: 1)
!3585 = !DILocation(line: 2558, column: 5, scope: !3586)
!3586 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2558, column: 5)
!3587 = !DILocation(line: 2558, column: 5, scope: !679)
!3588 = !DILocation(line: 2558, column: 5, scope: !3589)
!3589 = !DILexicalBlockFile(scope: !3586, file: !1, discriminator: 1)
!3590 = !DILocation(line: 2559, column: 5, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2559, column: 5)
!3592 = !DILocation(line: 2559, column: 5, scope: !679)
!3593 = !DILocation(line: 2559, column: 5, scope: !3594)
!3594 = !DILexicalBlockFile(scope: !3591, file: !1, discriminator: 1)
!3595 = !DILocation(line: 2560, column: 5, scope: !3596)
!3596 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2560, column: 5)
!3597 = !DILocation(line: 2560, column: 5, scope: !679)
!3598 = !DILocation(line: 2560, column: 5, scope: !3599)
!3599 = !DILexicalBlockFile(scope: !3596, file: !1, discriminator: 1)
!3600 = !DILocation(line: 2561, column: 5, scope: !3601)
!3601 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2561, column: 5)
!3602 = !DILocation(line: 2561, column: 5, scope: !679)
!3603 = !DILocation(line: 2561, column: 5, scope: !3604)
!3604 = !DILexicalBlockFile(scope: !3601, file: !1, discriminator: 1)
!3605 = !DILocation(line: 2562, column: 5, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2562, column: 5)
!3607 = !DILocation(line: 2562, column: 5, scope: !679)
!3608 = !DILocation(line: 2562, column: 5, scope: !3609)
!3609 = !DILexicalBlockFile(scope: !3606, file: !1, discriminator: 1)
!3610 = !DILocation(line: 2563, column: 5, scope: !3611)
!3611 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2563, column: 5)
!3612 = !DILocation(line: 2563, column: 5, scope: !679)
!3613 = !DILocation(line: 2563, column: 5, scope: !3614)
!3614 = !DILexicalBlockFile(scope: !3611, file: !1, discriminator: 1)
!3615 = !DILocation(line: 2564, column: 5, scope: !3616)
!3616 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2564, column: 5)
!3617 = !DILocation(line: 2564, column: 5, scope: !679)
!3618 = !DILocation(line: 2564, column: 5, scope: !3619)
!3619 = !DILexicalBlockFile(scope: !3616, file: !1, discriminator: 1)
!3620 = !DILocation(line: 2565, column: 5, scope: !3621)
!3621 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2565, column: 5)
!3622 = !DILocation(line: 2565, column: 5, scope: !679)
!3623 = !DILocation(line: 2565, column: 5, scope: !3624)
!3624 = !DILexicalBlockFile(scope: !3621, file: !1, discriminator: 1)
!3625 = !DILocation(line: 2566, column: 5, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2566, column: 5)
!3627 = !DILocation(line: 2566, column: 5, scope: !679)
!3628 = !DILocation(line: 2566, column: 5, scope: !3629)
!3629 = !DILexicalBlockFile(scope: !3626, file: !1, discriminator: 1)
!3630 = !DILocation(line: 2567, column: 5, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2567, column: 5)
!3632 = !DILocation(line: 2567, column: 5, scope: !679)
!3633 = !DILocation(line: 2567, column: 5, scope: !3634)
!3634 = !DILexicalBlockFile(scope: !3631, file: !1, discriminator: 1)
!3635 = !DILocation(line: 2568, column: 5, scope: !3636)
!3636 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2568, column: 5)
!3637 = !DILocation(line: 2568, column: 5, scope: !679)
!3638 = !DILocation(line: 2568, column: 5, scope: !3639)
!3639 = !DILexicalBlockFile(scope: !3636, file: !1, discriminator: 1)
!3640 = !DILocation(line: 2569, column: 5, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2569, column: 5)
!3642 = !DILocation(line: 2569, column: 5, scope: !679)
!3643 = !DILocation(line: 2569, column: 5, scope: !3644)
!3644 = !DILexicalBlockFile(scope: !3641, file: !1, discriminator: 1)
!3645 = !DILocation(line: 2570, column: 5, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2570, column: 5)
!3647 = !DILocation(line: 2570, column: 5, scope: !679)
!3648 = !DILocation(line: 2570, column: 5, scope: !3649)
!3649 = !DILexicalBlockFile(scope: !3646, file: !1, discriminator: 1)
!3650 = !DILocation(line: 2571, column: 5, scope: !3651)
!3651 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2571, column: 5)
!3652 = !DILocation(line: 2571, column: 5, scope: !679)
!3653 = !DILocation(line: 2571, column: 5, scope: !3654)
!3654 = !DILexicalBlockFile(scope: !3651, file: !1, discriminator: 1)
!3655 = !DILocation(line: 2572, column: 5, scope: !3656)
!3656 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2572, column: 5)
!3657 = !DILocation(line: 2572, column: 5, scope: !679)
!3658 = !DILocation(line: 2572, column: 5, scope: !3659)
!3659 = !DILexicalBlockFile(scope: !3656, file: !1, discriminator: 1)
!3660 = !DILocation(line: 2573, column: 5, scope: !3661)
!3661 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2573, column: 5)
!3662 = !DILocation(line: 2573, column: 5, scope: !679)
!3663 = !DILocation(line: 2573, column: 5, scope: !3664)
!3664 = !DILexicalBlockFile(scope: !3661, file: !1, discriminator: 1)
!3665 = !DILocation(line: 2574, column: 5, scope: !3666)
!3666 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2574, column: 5)
!3667 = !DILocation(line: 2574, column: 5, scope: !679)
!3668 = !DILocation(line: 2574, column: 5, scope: !3669)
!3669 = !DILexicalBlockFile(scope: !3666, file: !1, discriminator: 1)
!3670 = !DILocation(line: 2575, column: 5, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2575, column: 5)
!3672 = !DILocation(line: 2575, column: 5, scope: !679)
!3673 = !DILocation(line: 2575, column: 5, scope: !3674)
!3674 = !DILexicalBlockFile(scope: !3671, file: !1, discriminator: 1)
!3675 = !DILocation(line: 2577, column: 10, scope: !3676)
!3676 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2577, column: 9)
!3677 = !DILocation(line: 2577, column: 9, scope: !679)
!3678 = !DILocation(line: 2578, column: 20, scope: !3679)
!3679 = distinct !DILexicalBlock(scope: !3676, file: !1, line: 2577, column: 20)
!3680 = !DILocation(line: 2578, column: 18, scope: !3679)
!3681 = !DILocation(line: 2579, column: 14, scope: !3682)
!3682 = distinct !DILexicalBlock(scope: !3679, file: !1, line: 2579, column: 13)
!3683 = !DILocation(line: 2579, column: 13, scope: !3679)
!3684 = !DILocation(line: 2580, column: 13, scope: !3682)
!3685 = !DILocation(line: 2584, column: 5, scope: !3686)
!3686 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2584, column: 5)
!3687 = !DILocation(line: 2584, column: 5, scope: !679)
!3688 = !DILocation(line: 2584, column: 5, scope: !3689)
!3689 = !DILexicalBlockFile(scope: !3686, file: !1, discriminator: 1)
!3690 = !DILocation(line: 2586, column: 5, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2586, column: 5)
!3692 = !DILocation(line: 2586, column: 5, scope: !679)
!3693 = !DILocation(line: 2586, column: 5, scope: !3694)
!3694 = !DILexicalBlockFile(scope: !3691, file: !1, discriminator: 1)
!3695 = !DILocation(line: 2587, column: 5, scope: !694)
!3696 = !DILocation(line: 2587, column: 5, scope: !3697)
!3697 = distinct !DILexicalBlock(scope: !694, file: !1, line: 2587, column: 5)
!3698 = !DILocation(line: 2587, column: 5, scope: !3699)
!3699 = !DILexicalBlockFile(scope: !3697, file: !1, discriminator: 1)
!3700 = !DILocation(line: 2587, column: 5, scope: !3701)
!3701 = !DILexicalBlockFile(scope: !3702, file: !1, discriminator: 3)
!3702 = !DILexicalBlockFile(scope: !3697, file: !1, discriminator: 2)
!3703 = !DILocation(line: 2587, column: 5, scope: !3704)
!3704 = !DILexicalBlockFile(scope: !696, file: !1, discriminator: 5)
!3705 = !DILocation(line: 2587, column: 5, scope: !3706)
!3706 = distinct !DILexicalBlock(scope: !696, file: !1, line: 2587, column: 5)
!3707 = !DILocation(line: 2587, column: 5, scope: !696)
!3708 = !DILocation(line: 2587, column: 5, scope: !3709)
!3709 = !DILexicalBlockFile(scope: !3706, file: !1, discriminator: 7)
!3710 = !DILocation(line: 2588, column: 5, scope: !698)
!3711 = !DILocation(line: 2588, column: 5, scope: !3712)
!3712 = distinct !DILexicalBlock(scope: !698, file: !1, line: 2588, column: 5)
!3713 = !DILocation(line: 2588, column: 5, scope: !3714)
!3714 = !DILexicalBlockFile(scope: !3712, file: !1, discriminator: 1)
!3715 = !DILocation(line: 2588, column: 5, scope: !3716)
!3716 = !DILexicalBlockFile(scope: !3717, file: !1, discriminator: 3)
!3717 = !DILexicalBlockFile(scope: !3712, file: !1, discriminator: 2)
!3718 = !DILocation(line: 2588, column: 5, scope: !3719)
!3719 = !DILexicalBlockFile(scope: !700, file: !1, discriminator: 5)
!3720 = !DILocation(line: 2588, column: 5, scope: !3721)
!3721 = distinct !DILexicalBlock(scope: !700, file: !1, line: 2588, column: 5)
!3722 = !DILocation(line: 2588, column: 5, scope: !700)
!3723 = !DILocation(line: 2588, column: 5, scope: !3724)
!3724 = !DILexicalBlockFile(scope: !3721, file: !1, discriminator: 7)
!3725 = !DILocation(line: 2589, column: 5, scope: !702)
!3726 = !DILocation(line: 2589, column: 5, scope: !3727)
!3727 = distinct !DILexicalBlock(scope: !702, file: !1, line: 2589, column: 5)
!3728 = !DILocation(line: 2589, column: 5, scope: !3729)
!3729 = !DILexicalBlockFile(scope: !3727, file: !1, discriminator: 1)
!3730 = !DILocation(line: 2589, column: 5, scope: !3731)
!3731 = !DILexicalBlockFile(scope: !3732, file: !1, discriminator: 3)
!3732 = !DILexicalBlockFile(scope: !3727, file: !1, discriminator: 2)
!3733 = !DILocation(line: 2589, column: 5, scope: !3734)
!3734 = !DILexicalBlockFile(scope: !704, file: !1, discriminator: 5)
!3735 = !DILocation(line: 2589, column: 5, scope: !3736)
!3736 = distinct !DILexicalBlock(scope: !704, file: !1, line: 2589, column: 5)
!3737 = !DILocation(line: 2589, column: 5, scope: !704)
!3738 = !DILocation(line: 2589, column: 5, scope: !3739)
!3739 = !DILexicalBlockFile(scope: !3736, file: !1, discriminator: 7)
!3740 = !DILocation(line: 2590, column: 5, scope: !706)
!3741 = !DILocation(line: 2590, column: 5, scope: !3742)
!3742 = distinct !DILexicalBlock(scope: !706, file: !1, line: 2590, column: 5)
!3743 = !DILocation(line: 2590, column: 5, scope: !3744)
!3744 = !DILexicalBlockFile(scope: !3742, file: !1, discriminator: 1)
!3745 = !DILocation(line: 2590, column: 5, scope: !3746)
!3746 = !DILexicalBlockFile(scope: !3747, file: !1, discriminator: 3)
!3747 = !DILexicalBlockFile(scope: !3742, file: !1, discriminator: 2)
!3748 = !DILocation(line: 2590, column: 5, scope: !3749)
!3749 = !DILexicalBlockFile(scope: !708, file: !1, discriminator: 5)
!3750 = !DILocation(line: 2590, column: 5, scope: !3751)
!3751 = distinct !DILexicalBlock(scope: !708, file: !1, line: 2590, column: 5)
!3752 = !DILocation(line: 2590, column: 5, scope: !708)
!3753 = !DILocation(line: 2590, column: 5, scope: !3754)
!3754 = !DILexicalBlockFile(scope: !3751, file: !1, discriminator: 7)
!3755 = !DILocation(line: 2591, column: 5, scope: !3756)
!3756 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2591, column: 5)
!3757 = !DILocation(line: 2591, column: 5, scope: !679)
!3758 = !DILocation(line: 2591, column: 5, scope: !3759)
!3759 = !DILexicalBlockFile(scope: !3756, file: !1, discriminator: 1)
!3760 = !DILocation(line: 2592, column: 5, scope: !710)
!3761 = !DILocation(line: 2592, column: 5, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !710, file: !1, line: 2592, column: 5)
!3763 = !DILocation(line: 2592, column: 5, scope: !3764)
!3764 = !DILexicalBlockFile(scope: !3762, file: !1, discriminator: 1)
!3765 = !DILocation(line: 2592, column: 5, scope: !3766)
!3766 = !DILexicalBlockFile(scope: !3767, file: !1, discriminator: 3)
!3767 = !DILexicalBlockFile(scope: !3762, file: !1, discriminator: 2)
!3768 = !DILocation(line: 2592, column: 5, scope: !3769)
!3769 = !DILexicalBlockFile(scope: !712, file: !1, discriminator: 5)
!3770 = !DILocation(line: 2592, column: 5, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !712, file: !1, line: 2592, column: 5)
!3772 = !DILocation(line: 2592, column: 5, scope: !712)
!3773 = !DILocation(line: 2592, column: 5, scope: !3774)
!3774 = !DILexicalBlockFile(scope: !3771, file: !1, discriminator: 7)
!3775 = !DILocation(line: 2593, column: 5, scope: !714)
!3776 = !DILocation(line: 2593, column: 5, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !714, file: !1, line: 2593, column: 5)
!3778 = !DILocation(line: 2593, column: 5, scope: !3779)
!3779 = !DILexicalBlockFile(scope: !3777, file: !1, discriminator: 1)
!3780 = !DILocation(line: 2593, column: 5, scope: !3781)
!3781 = !DILexicalBlockFile(scope: !3782, file: !1, discriminator: 3)
!3782 = !DILexicalBlockFile(scope: !3777, file: !1, discriminator: 2)
!3783 = !DILocation(line: 2593, column: 5, scope: !3784)
!3784 = !DILexicalBlockFile(scope: !716, file: !1, discriminator: 5)
!3785 = !DILocation(line: 2593, column: 5, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !716, file: !1, line: 2593, column: 5)
!3787 = !DILocation(line: 2593, column: 5, scope: !716)
!3788 = !DILocation(line: 2593, column: 5, scope: !3789)
!3789 = !DILexicalBlockFile(scope: !3786, file: !1, discriminator: 7)
!3790 = !DILocation(line: 2594, column: 5, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2594, column: 5)
!3792 = !DILocation(line: 2594, column: 5, scope: !679)
!3793 = !DILocation(line: 2594, column: 5, scope: !3794)
!3794 = !DILexicalBlockFile(scope: !3791, file: !1, discriminator: 1)
!3795 = !DILocation(line: 2595, column: 5, scope: !718)
!3796 = !DILocation(line: 2595, column: 5, scope: !3797)
!3797 = distinct !DILexicalBlock(scope: !718, file: !1, line: 2595, column: 5)
!3798 = !DILocation(line: 2595, column: 5, scope: !3799)
!3799 = !DILexicalBlockFile(scope: !3797, file: !1, discriminator: 1)
!3800 = !DILocation(line: 2595, column: 5, scope: !3801)
!3801 = !DILexicalBlockFile(scope: !3802, file: !1, discriminator: 3)
!3802 = !DILexicalBlockFile(scope: !3797, file: !1, discriminator: 2)
!3803 = !DILocation(line: 2595, column: 5, scope: !3804)
!3804 = !DILexicalBlockFile(scope: !720, file: !1, discriminator: 5)
!3805 = !DILocation(line: 2595, column: 5, scope: !3806)
!3806 = distinct !DILexicalBlock(scope: !720, file: !1, line: 2595, column: 5)
!3807 = !DILocation(line: 2595, column: 5, scope: !720)
!3808 = !DILocation(line: 2595, column: 5, scope: !3809)
!3809 = !DILexicalBlockFile(scope: !3806, file: !1, discriminator: 7)
!3810 = !DILocation(line: 2596, column: 5, scope: !3811)
!3811 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2596, column: 5)
!3812 = !DILocation(line: 2596, column: 5, scope: !679)
!3813 = !DILocation(line: 2596, column: 5, scope: !3814)
!3814 = !DILexicalBlockFile(scope: !3811, file: !1, discriminator: 1)
!3815 = !DILocation(line: 2597, column: 5, scope: !722)
!3816 = !DILocation(line: 2597, column: 5, scope: !3817)
!3817 = distinct !DILexicalBlock(scope: !722, file: !1, line: 2597, column: 5)
!3818 = !DILocation(line: 2597, column: 5, scope: !3819)
!3819 = !DILexicalBlockFile(scope: !3817, file: !1, discriminator: 1)
!3820 = !DILocation(line: 2597, column: 5, scope: !3821)
!3821 = !DILexicalBlockFile(scope: !3822, file: !1, discriminator: 3)
!3822 = !DILexicalBlockFile(scope: !3817, file: !1, discriminator: 2)
!3823 = !DILocation(line: 2597, column: 5, scope: !3824)
!3824 = !DILexicalBlockFile(scope: !724, file: !1, discriminator: 5)
!3825 = !DILocation(line: 2597, column: 5, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !724, file: !1, line: 2597, column: 5)
!3827 = !DILocation(line: 2597, column: 5, scope: !724)
!3828 = !DILocation(line: 2597, column: 5, scope: !3829)
!3829 = !DILexicalBlockFile(scope: !3826, file: !1, discriminator: 7)
!3830 = !DILocation(line: 2598, column: 5, scope: !3831)
!3831 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2598, column: 5)
!3832 = !DILocation(line: 2598, column: 5, scope: !679)
!3833 = !DILocation(line: 2598, column: 5, scope: !3834)
!3834 = !DILexicalBlockFile(scope: !3831, file: !1, discriminator: 1)
!3835 = !DILocation(line: 2599, column: 5, scope: !726)
!3836 = !DILocation(line: 2599, column: 5, scope: !3837)
!3837 = distinct !DILexicalBlock(scope: !726, file: !1, line: 2599, column: 5)
!3838 = !DILocation(line: 2599, column: 5, scope: !3839)
!3839 = !DILexicalBlockFile(scope: !3837, file: !1, discriminator: 1)
!3840 = !DILocation(line: 2599, column: 5, scope: !3841)
!3841 = !DILexicalBlockFile(scope: !3842, file: !1, discriminator: 3)
!3842 = !DILexicalBlockFile(scope: !3837, file: !1, discriminator: 2)
!3843 = !DILocation(line: 2599, column: 5, scope: !3844)
!3844 = !DILexicalBlockFile(scope: !728, file: !1, discriminator: 5)
!3845 = !DILocation(line: 2599, column: 5, scope: !3846)
!3846 = distinct !DILexicalBlock(scope: !728, file: !1, line: 2599, column: 5)
!3847 = !DILocation(line: 2599, column: 5, scope: !728)
!3848 = !DILocation(line: 2599, column: 5, scope: !3849)
!3849 = !DILexicalBlockFile(scope: !3846, file: !1, discriminator: 7)
!3850 = !DILocation(line: 2600, column: 5, scope: !3851)
!3851 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2600, column: 5)
!3852 = !DILocation(line: 2600, column: 5, scope: !679)
!3853 = !DILocation(line: 2600, column: 5, scope: !3854)
!3854 = !DILexicalBlockFile(scope: !3851, file: !1, discriminator: 1)
!3855 = !DILocation(line: 2601, column: 5, scope: !730)
!3856 = !DILocation(line: 2601, column: 5, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !730, file: !1, line: 2601, column: 5)
!3858 = !DILocation(line: 2601, column: 5, scope: !3859)
!3859 = !DILexicalBlockFile(scope: !3857, file: !1, discriminator: 1)
!3860 = !DILocation(line: 2601, column: 5, scope: !3861)
!3861 = !DILexicalBlockFile(scope: !3862, file: !1, discriminator: 3)
!3862 = !DILexicalBlockFile(scope: !3857, file: !1, discriminator: 2)
!3863 = !DILocation(line: 2601, column: 5, scope: !3864)
!3864 = !DILexicalBlockFile(scope: !732, file: !1, discriminator: 5)
!3865 = !DILocation(line: 2601, column: 5, scope: !3866)
!3866 = distinct !DILexicalBlock(scope: !732, file: !1, line: 2601, column: 5)
!3867 = !DILocation(line: 2601, column: 5, scope: !732)
!3868 = !DILocation(line: 2601, column: 5, scope: !3869)
!3869 = !DILexicalBlockFile(scope: !3866, file: !1, discriminator: 7)
!3870 = !DILocation(line: 2602, column: 5, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2602, column: 5)
!3872 = !DILocation(line: 2602, column: 5, scope: !679)
!3873 = !DILocation(line: 2602, column: 5, scope: !3874)
!3874 = !DILexicalBlockFile(scope: !3871, file: !1, discriminator: 1)
!3875 = !DILocation(line: 2603, column: 5, scope: !734)
!3876 = !DILocation(line: 2603, column: 5, scope: !3877)
!3877 = distinct !DILexicalBlock(scope: !734, file: !1, line: 2603, column: 5)
!3878 = !DILocation(line: 2603, column: 5, scope: !3879)
!3879 = !DILexicalBlockFile(scope: !3877, file: !1, discriminator: 1)
!3880 = !DILocation(line: 2603, column: 5, scope: !3881)
!3881 = !DILexicalBlockFile(scope: !3882, file: !1, discriminator: 3)
!3882 = !DILexicalBlockFile(scope: !3877, file: !1, discriminator: 2)
!3883 = !DILocation(line: 2603, column: 5, scope: !3884)
!3884 = !DILexicalBlockFile(scope: !736, file: !1, discriminator: 5)
!3885 = !DILocation(line: 2603, column: 5, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !736, file: !1, line: 2603, column: 5)
!3887 = !DILocation(line: 2603, column: 5, scope: !736)
!3888 = !DILocation(line: 2603, column: 5, scope: !3889)
!3889 = !DILexicalBlockFile(scope: !3886, file: !1, discriminator: 7)
!3890 = !DILocation(line: 2604, column: 5, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2604, column: 5)
!3892 = !DILocation(line: 2604, column: 5, scope: !679)
!3893 = !DILocation(line: 2604, column: 5, scope: !3894)
!3894 = !DILexicalBlockFile(scope: !3891, file: !1, discriminator: 1)
!3895 = !DILocation(line: 2605, column: 5, scope: !738)
!3896 = !DILocation(line: 2605, column: 5, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !738, file: !1, line: 2605, column: 5)
!3898 = !DILocation(line: 2605, column: 5, scope: !3899)
!3899 = !DILexicalBlockFile(scope: !3897, file: !1, discriminator: 1)
!3900 = !DILocation(line: 2605, column: 5, scope: !3901)
!3901 = !DILexicalBlockFile(scope: !3902, file: !1, discriminator: 3)
!3902 = !DILexicalBlockFile(scope: !3897, file: !1, discriminator: 2)
!3903 = !DILocation(line: 2605, column: 5, scope: !3904)
!3904 = !DILexicalBlockFile(scope: !740, file: !1, discriminator: 5)
!3905 = !DILocation(line: 2605, column: 5, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !740, file: !1, line: 2605, column: 5)
!3907 = !DILocation(line: 2605, column: 5, scope: !740)
!3908 = !DILocation(line: 2605, column: 5, scope: !3909)
!3909 = !DILexicalBlockFile(scope: !3906, file: !1, discriminator: 7)
!3910 = !DILocation(line: 2606, column: 5, scope: !3911)
!3911 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2606, column: 5)
!3912 = !DILocation(line: 2606, column: 5, scope: !679)
!3913 = !DILocation(line: 2606, column: 5, scope: !3914)
!3914 = !DILexicalBlockFile(scope: !3911, file: !1, discriminator: 1)
!3915 = !DILocation(line: 2607, column: 5, scope: !742)
!3916 = !DILocation(line: 2607, column: 5, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !742, file: !1, line: 2607, column: 5)
!3918 = !DILocation(line: 2607, column: 5, scope: !3919)
!3919 = !DILexicalBlockFile(scope: !3917, file: !1, discriminator: 1)
!3920 = !DILocation(line: 2607, column: 5, scope: !3921)
!3921 = !DILexicalBlockFile(scope: !3922, file: !1, discriminator: 3)
!3922 = !DILexicalBlockFile(scope: !3917, file: !1, discriminator: 2)
!3923 = !DILocation(line: 2607, column: 5, scope: !3924)
!3924 = !DILexicalBlockFile(scope: !744, file: !1, discriminator: 5)
!3925 = !DILocation(line: 2607, column: 5, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !744, file: !1, line: 2607, column: 5)
!3927 = !DILocation(line: 2607, column: 5, scope: !744)
!3928 = !DILocation(line: 2607, column: 5, scope: !3929)
!3929 = !DILexicalBlockFile(scope: !3926, file: !1, discriminator: 7)
!3930 = !DILocation(line: 2608, column: 5, scope: !3931)
!3931 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2608, column: 5)
!3932 = !DILocation(line: 2608, column: 5, scope: !679)
!3933 = !DILocation(line: 2608, column: 5, scope: !3934)
!3934 = !DILexicalBlockFile(scope: !3931, file: !1, discriminator: 1)
!3935 = !DILocation(line: 2609, column: 5, scope: !746)
!3936 = !DILocation(line: 2609, column: 5, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !746, file: !1, line: 2609, column: 5)
!3938 = !DILocation(line: 2609, column: 5, scope: !3939)
!3939 = !DILexicalBlockFile(scope: !3937, file: !1, discriminator: 1)
!3940 = !DILocation(line: 2609, column: 5, scope: !3941)
!3941 = !DILexicalBlockFile(scope: !3942, file: !1, discriminator: 3)
!3942 = !DILexicalBlockFile(scope: !3937, file: !1, discriminator: 2)
!3943 = !DILocation(line: 2609, column: 5, scope: !3944)
!3944 = !DILexicalBlockFile(scope: !748, file: !1, discriminator: 5)
!3945 = !DILocation(line: 2609, column: 5, scope: !3946)
!3946 = distinct !DILexicalBlock(scope: !748, file: !1, line: 2609, column: 5)
!3947 = !DILocation(line: 2609, column: 5, scope: !748)
!3948 = !DILocation(line: 2609, column: 5, scope: !3949)
!3949 = !DILexicalBlockFile(scope: !3946, file: !1, discriminator: 7)
!3950 = !DILocation(line: 2610, column: 5, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2610, column: 5)
!3952 = !DILocation(line: 2610, column: 5, scope: !679)
!3953 = !DILocation(line: 2610, column: 5, scope: !3954)
!3954 = !DILexicalBlockFile(scope: !3951, file: !1, discriminator: 1)
!3955 = !DILocation(line: 2611, column: 5, scope: !750)
!3956 = !DILocation(line: 2611, column: 5, scope: !3957)
!3957 = distinct !DILexicalBlock(scope: !750, file: !1, line: 2611, column: 5)
!3958 = !DILocation(line: 2611, column: 5, scope: !3959)
!3959 = !DILexicalBlockFile(scope: !3957, file: !1, discriminator: 1)
!3960 = !DILocation(line: 2611, column: 5, scope: !3961)
!3961 = !DILexicalBlockFile(scope: !3962, file: !1, discriminator: 3)
!3962 = !DILexicalBlockFile(scope: !3957, file: !1, discriminator: 2)
!3963 = !DILocation(line: 2611, column: 5, scope: !3964)
!3964 = !DILexicalBlockFile(scope: !752, file: !1, discriminator: 5)
!3965 = !DILocation(line: 2611, column: 5, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !752, file: !1, line: 2611, column: 5)
!3967 = !DILocation(line: 2611, column: 5, scope: !752)
!3968 = !DILocation(line: 2611, column: 5, scope: !3969)
!3969 = !DILexicalBlockFile(scope: !3966, file: !1, discriminator: 7)
!3970 = !DILocation(line: 2612, column: 5, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2612, column: 5)
!3972 = !DILocation(line: 2612, column: 5, scope: !679)
!3973 = !DILocation(line: 2612, column: 5, scope: !3974)
!3974 = !DILexicalBlockFile(scope: !3971, file: !1, discriminator: 1)
!3975 = !DILocation(line: 2613, column: 5, scope: !754)
!3976 = !DILocation(line: 2613, column: 5, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !754, file: !1, line: 2613, column: 5)
!3978 = !DILocation(line: 2613, column: 5, scope: !3979)
!3979 = !DILexicalBlockFile(scope: !3977, file: !1, discriminator: 1)
!3980 = !DILocation(line: 2613, column: 5, scope: !3981)
!3981 = !DILexicalBlockFile(scope: !3982, file: !1, discriminator: 3)
!3982 = !DILexicalBlockFile(scope: !3977, file: !1, discriminator: 2)
!3983 = !DILocation(line: 2613, column: 5, scope: !3984)
!3984 = !DILexicalBlockFile(scope: !756, file: !1, discriminator: 5)
!3985 = !DILocation(line: 2613, column: 5, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !756, file: !1, line: 2613, column: 5)
!3987 = !DILocation(line: 2613, column: 5, scope: !756)
!3988 = !DILocation(line: 2613, column: 5, scope: !3989)
!3989 = !DILexicalBlockFile(scope: !3986, file: !1, discriminator: 7)
!3990 = !DILocation(line: 2614, column: 5, scope: !758)
!3991 = !DILocation(line: 2614, column: 5, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !758, file: !1, line: 2614, column: 5)
!3993 = !DILocation(line: 2614, column: 5, scope: !3994)
!3994 = !DILexicalBlockFile(scope: !3992, file: !1, discriminator: 1)
!3995 = !DILocation(line: 2614, column: 5, scope: !3996)
!3996 = !DILexicalBlockFile(scope: !3997, file: !1, discriminator: 3)
!3997 = !DILexicalBlockFile(scope: !3992, file: !1, discriminator: 2)
!3998 = !DILocation(line: 2614, column: 5, scope: !3999)
!3999 = !DILexicalBlockFile(scope: !760, file: !1, discriminator: 5)
!4000 = !DILocation(line: 2614, column: 5, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !760, file: !1, line: 2614, column: 5)
!4002 = !DILocation(line: 2614, column: 5, scope: !760)
!4003 = !DILocation(line: 2614, column: 5, scope: !4004)
!4004 = !DILexicalBlockFile(scope: !4001, file: !1, discriminator: 7)
!4005 = !DILocation(line: 2615, column: 5, scope: !4006)
!4006 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2615, column: 5)
!4007 = !DILocation(line: 2615, column: 5, scope: !679)
!4008 = !DILocation(line: 2615, column: 5, scope: !4009)
!4009 = !DILexicalBlockFile(scope: !4006, file: !1, discriminator: 1)
!4010 = !DILocation(line: 2616, column: 5, scope: !762)
!4011 = !DILocation(line: 2616, column: 5, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !762, file: !1, line: 2616, column: 5)
!4013 = !DILocation(line: 2616, column: 5, scope: !4014)
!4014 = !DILexicalBlockFile(scope: !4012, file: !1, discriminator: 1)
!4015 = !DILocation(line: 2616, column: 5, scope: !4016)
!4016 = !DILexicalBlockFile(scope: !4017, file: !1, discriminator: 3)
!4017 = !DILexicalBlockFile(scope: !4012, file: !1, discriminator: 2)
!4018 = !DILocation(line: 2616, column: 5, scope: !4019)
!4019 = !DILexicalBlockFile(scope: !764, file: !1, discriminator: 5)
!4020 = !DILocation(line: 2616, column: 5, scope: !4021)
!4021 = distinct !DILexicalBlock(scope: !764, file: !1, line: 2616, column: 5)
!4022 = !DILocation(line: 2616, column: 5, scope: !764)
!4023 = !DILocation(line: 2616, column: 5, scope: !4024)
!4024 = !DILexicalBlockFile(scope: !4021, file: !1, discriminator: 7)
!4025 = !DILocation(line: 2617, column: 5, scope: !4026)
!4026 = distinct !DILexicalBlock(scope: !679, file: !1, line: 2617, column: 5)
!4027 = !DILocation(line: 2617, column: 5, scope: !679)
!4028 = !DILocation(line: 2617, column: 5, scope: !4029)
!4029 = !DILexicalBlockFile(scope: !4026, file: !1, discriminator: 1)
!4030 = !DILocation(line: 2618, column: 5, scope: !766)
!4031 = !DILocation(line: 2618, column: 5, scope: !4032)
!4032 = distinct !DILexicalBlock(scope: !766, file: !1, line: 2618, column: 5)
!4033 = !DILocation(line: 2618, column: 5, scope: !4034)
!4034 = !DILexicalBlockFile(scope: !4032, file: !1, discriminator: 1)
!4035 = !DILocation(line: 2618, column: 5, scope: !4036)
!4036 = !DILexicalBlockFile(scope: !4037, file: !1, discriminator: 3)
!4037 = !DILexicalBlockFile(scope: !4032, file: !1, discriminator: 2)
!4038 = !DILocation(line: 2618, column: 5, scope: !4039)
!4039 = !DILexicalBlockFile(scope: !768, file: !1, discriminator: 5)
!4040 = !DILocation(line: 2618, column: 5, scope: !4041)
!4041 = distinct !DILexicalBlock(scope: !768, file: !1, line: 2618, column: 5)
!4042 = !DILocation(line: 2618, column: 5, scope: !768)
!4043 = !DILocation(line: 2618, column: 5, scope: !4044)
!4044 = !DILexicalBlockFile(scope: !4041, file: !1, discriminator: 7)
!4045 = !DILocation(line: 2234, column: 5, scope: !1763, inlinedAt: !2656)
!4046 = !DILocation(line: 2233, column: 9, scope: !1763, inlinedAt: !2656)
!4047 = !DILocation(line: 2235, column: 5, scope: !4048, inlinedAt: !2656)
!4048 = distinct !DILexicalBlock(scope: !1763, file: !1, line: 2235, column: 5)
!4049 = !DILocation(line: 2235, column: 19, scope: !4050, inlinedAt: !2656)
!4050 = distinct !DILexicalBlock(scope: !4048, file: !1, line: 2235, column: 5)
!4051 = !DILocation(line: 2242, column: 9, scope: !4052, inlinedAt: !2656)
!4052 = !DILexicalBlockFile(scope: !1771, file: !1, discriminator: 1)
!4053 = !DILocation(line: 2620, column: 5, scope: !679)
!4054 = !DILocation(line: 2236, column: 54, scope: !4055, inlinedAt: !2656)
!4055 = distinct !DILexicalBlock(scope: !4050, file: !1, line: 2235, column: 42)
!4056 = !DILocation(line: 2236, column: 21, scope: !4055, inlinedAt: !2656)
!4057 = !DILocation(line: 2236, column: 9, scope: !4055, inlinedAt: !2656)
!4058 = !DILocation(line: 2236, column: 19, scope: !4055, inlinedAt: !2656)
!4059 = !DILocation(line: 2238, column: 14, scope: !4060, inlinedAt: !2656)
!4060 = distinct !DILexicalBlock(scope: !4055, file: !1, line: 2238, column: 13)
!4061 = !DILocation(line: 2238, column: 13, scope: !4055, inlinedAt: !2656)
!4062 = !DILocation(line: 2239, column: 13, scope: !4060, inlinedAt: !2656)
!4063 = !DILocation(line: 2242, column: 9, scope: !4064, inlinedAt: !2656)
!4064 = distinct !DILexicalBlock(scope: !1771, file: !1, line: 2242, column: 9)
!4065 = !DILocation(line: 2242, column: 9, scope: !1771, inlinedAt: !2656)
!4066 = !DILocation(line: 2242, column: 9, scope: !4067, inlinedAt: !2656)
!4067 = !DILexicalBlockFile(scope: !4064, file: !1, discriminator: 3)
!4068 = !DILocation(line: 2241, column: 5, scope: !1774, inlinedAt: !2656)
!4069 = !DILocation(line: 2244, column: 1, scope: !1763, inlinedAt: !2656)
!4070 = !DILocation(line: 2622, column: 10, scope: !773)
!4071 = !DILocation(line: 2622, column: 9, scope: !679)
!4072 = !DILocation(line: 32, column: 33, scope: !1775, inlinedAt: !4073)
!4073 = distinct !DILocation(line: 2623, column: 36, scope: !772)
!4074 = !DILocation(line: 32, column: 49, scope: !1775, inlinedAt: !4073)
!4075 = !DILocation(line: 32, column: 65, scope: !1775, inlinedAt: !4073)
!4076 = !DILocation(line: 36, column: 43, scope: !1775, inlinedAt: !4073)
!4077 = !{!2033, !1985, i64 304}
!4078 = !DILocation(line: 36, column: 37, scope: !1775, inlinedAt: !4073)
!4079 = !DILocation(line: 37, column: 10, scope: !4080, inlinedAt: !4073)
!4080 = distinct !DILexicalBlock(scope: !1775, file: !1, line: 37, column: 9)
!4081 = !DILocation(line: 37, column: 9, scope: !1775, inlinedAt: !4073)
!4082 = !DILocation(line: 40, column: 11, scope: !1775, inlinedAt: !4073)
!4083 = !DILocation(line: 40, column: 16, scope: !1775, inlinedAt: !4073)
!4084 = !{!1980, !1985, i64 16}
!4085 = !DILocation(line: 41, column: 11, scope: !1775, inlinedAt: !4073)
!4086 = !DILocation(line: 44, column: 9, scope: !1775, inlinedAt: !4073)
!4087 = !DILocation(line: 41, column: 51, scope: !1775, inlinedAt: !4073)
!4088 = !DILocation(line: 50, column: 18, scope: !1775, inlinedAt: !4073)
!4089 = !DILocation(line: 50, column: 11, scope: !1775, inlinedAt: !4073)
!4090 = !DILocation(line: 50, column: 16, scope: !1775, inlinedAt: !4073)
!4091 = !{!1980, !1985, i64 24}
!4092 = !DILocation(line: 51, column: 10, scope: !1784, inlinedAt: !4073)
!4093 = !DILocation(line: 51, column: 9, scope: !1775, inlinedAt: !4073)
!4094 = !DILocation(line: 52, column: 9, scope: !4095, inlinedAt: !4073)
!4095 = !DILexicalBlockFile(scope: !1782, file: !1, discriminator: 1)
!4096 = !DILocation(line: 52, column: 9, scope: !4097, inlinedAt: !4073)
!4097 = distinct !DILexicalBlock(scope: !1782, file: !1, line: 52, column: 9)
!4098 = !DILocation(line: 52, column: 9, scope: !1782, inlinedAt: !4073)
!4099 = !DILocation(line: 52, column: 9, scope: !4100, inlinedAt: !4073)
!4100 = !DILexicalBlockFile(scope: !4097, file: !1, discriminator: 3)
!4101 = !DILocation(line: 2623, column: 36, scope: !772)
!4102 = !DILocation(line: 2623, column: 34, scope: !772)
!4103 = !DILocation(line: 2625, column: 13, scope: !771)
!4104 = !DILocation(line: 2632, column: 27, scope: !770)
!4105 = !DILocation(line: 2631, column: 23, scope: !770)
!4106 = !DILocation(line: 2633, column: 18, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !770, file: !1, line: 2633, column: 17)
!4108 = !DILocation(line: 2633, column: 17, scope: !770)
!4109 = !DILocation(line: 2634, column: 17, scope: !4107)
!4110 = !DILocation(line: 2636, column: 26, scope: !770)
!4111 = !DILocation(line: 2630, column: 23, scope: !770)
!4112 = !DILocation(line: 2637, column: 18, scope: !4113)
!4113 = distinct !DILexicalBlock(scope: !770, file: !1, line: 2637, column: 17)
!4114 = !DILocation(line: 2637, column: 17, scope: !770)
!4115 = !DILocation(line: 2638, column: 17, scope: !4113)
!4116 = !DILocation(line: 2640, column: 13, scope: !4117)
!4117 = !DILexicalBlockFile(scope: !777, file: !1, discriminator: 1)
!4118 = !DILocation(line: 2640, column: 13, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !777, file: !1, line: 2640, column: 13)
!4120 = !DILocation(line: 2640, column: 13, scope: !777)
!4121 = !DILocation(line: 2640, column: 13, scope: !4122)
!4122 = !DILexicalBlockFile(scope: !4119, file: !1, discriminator: 3)
!4123 = !DILocation(line: 60, column: 59, scope: !1785, inlinedAt: !4124)
!4124 = distinct !DILocation(line: 2641, column: 17, scope: !4125)
!4125 = distinct !DILexicalBlock(scope: !770, file: !1, line: 2641, column: 17)
!4126 = !DILocation(line: 60, column: 75, scope: !1785, inlinedAt: !4124)
!4127 = !DILocation(line: 64, column: 28, scope: !4128, inlinedAt: !4124)
!4128 = distinct !DILexicalBlock(scope: !1785, file: !1, line: 64, column: 9)
!4129 = !DILocation(line: 64, column: 43, scope: !4128, inlinedAt: !4124)
!4130 = !{!2033, !1985, i64 24}
!4131 = !DILocation(line: 64, column: 10, scope: !4128, inlinedAt: !4124)
!4132 = !DILocation(line: 64, column: 9, scope: !1785, inlinedAt: !4124)
!4133 = !DILocation(line: 67, column: 17, scope: !1785, inlinedAt: !4124)
!4134 = !DILocation(line: 62, column: 15, scope: !1785, inlinedAt: !4124)
!4135 = !DILocation(line: 68, column: 16, scope: !1785, inlinedAt: !4124)
!4136 = !DILocation(line: 69, column: 5, scope: !1785, inlinedAt: !4124)
!4137 = !DILocation(line: 70, column: 5, scope: !4138, inlinedAt: !4124)
!4138 = !DILexicalBlockFile(scope: !1794, file: !1, discriminator: 1)
!4139 = !DILocation(line: 70, column: 5, scope: !1797, inlinedAt: !4124)
!4140 = !DILocation(line: 70, column: 5, scope: !1794, inlinedAt: !4124)
!4141 = !DILocation(line: 70, column: 5, scope: !4142, inlinedAt: !4124)
!4142 = !DILexicalBlockFile(scope: !1796, file: !1, discriminator: 4)
!4143 = !DILocation(line: 70, column: 5, scope: !4144, inlinedAt: !4124)
!4144 = distinct !DILexicalBlock(scope: !1796, file: !1, line: 70, column: 5)
!4145 = !DILocation(line: 70, column: 5, scope: !1796, inlinedAt: !4124)
!4146 = !DILocation(line: 70, column: 5, scope: !4147, inlinedAt: !4124)
!4147 = !DILexicalBlockFile(scope: !4144, file: !1, discriminator: 6)
!4148 = !DILocation(line: 2641, column: 17, scope: !4125)
!4149 = !DILocation(line: 2642, column: 17, scope: !4125)
!4150 = !DILocation(line: 2643, column: 13, scope: !4151)
!4151 = !DILexicalBlockFile(scope: !779, file: !1, discriminator: 1)
!4152 = !DILocation(line: 2643, column: 13, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !779, file: !1, line: 2643, column: 13)
!4154 = !DILocation(line: 2643, column: 13, scope: !779)
!4155 = !DILocation(line: 2643, column: 13, scope: !4156)
!4156 = !DILexicalBlockFile(scope: !4153, file: !1, discriminator: 3)
!4157 = !DILocation(line: 2646, column: 1, scope: !679)
!4158 = !DILocation(line: 32, column: 33, scope: !1775)
!4159 = !DILocation(line: 32, column: 49, scope: !1775)
!4160 = !DILocation(line: 32, column: 65, scope: !1775)
!4161 = !DILocation(line: 36, column: 43, scope: !1775)
!4162 = !DILocation(line: 36, column: 37, scope: !1775)
!4163 = !DILocation(line: 37, column: 10, scope: !4080)
!4164 = !DILocation(line: 37, column: 9, scope: !1775)
!4165 = !DILocation(line: 40, column: 11, scope: !1775)
!4166 = !DILocation(line: 40, column: 16, scope: !1775)
!4167 = !DILocation(line: 41, column: 11, scope: !1775)
!4168 = !DILocation(line: 44, column: 9, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !1775, file: !1, line: 44, column: 9)
!4170 = !DILocation(line: 44, column: 9, scope: !1775)
!4171 = !DILocation(line: 41, column: 51, scope: !1775)
!4172 = !DILocation(line: 45, column: 15, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4169, file: !1, line: 44, column: 15)
!4174 = !DILocation(line: 45, column: 20, scope: !4173)
!4175 = !DILocation(line: 46, column: 9, scope: !4173)
!4176 = !DILocation(line: 47, column: 9, scope: !4173)
!4177 = !DILocation(line: 50, column: 18, scope: !1775)
!4178 = !DILocation(line: 50, column: 11, scope: !1775)
!4179 = !DILocation(line: 50, column: 16, scope: !1775)
!4180 = !DILocation(line: 51, column: 10, scope: !1784)
!4181 = !DILocation(line: 51, column: 9, scope: !1775)
!4182 = !DILocation(line: 52, column: 9, scope: !4095)
!4183 = !DILocation(line: 52, column: 9, scope: !4097)
!4184 = !DILocation(line: 52, column: 9, scope: !1782)
!4185 = !DILocation(line: 52, column: 9, scope: !4100)
!4186 = !DILocation(line: 57, column: 1, scope: !1775)
!4187 = !DILocation(line: 60, column: 43, scope: !1785)
!4188 = !DILocation(line: 60, column: 59, scope: !1785)
!4189 = !DILocation(line: 60, column: 75, scope: !1785)
!4190 = !DILocation(line: 64, column: 28, scope: !4128)
!4191 = !DILocation(line: 64, column: 43, scope: !4128)
!4192 = !DILocation(line: 64, column: 10, scope: !4128)
!4193 = !DILocation(line: 64, column: 9, scope: !1785)
!4194 = !DILocation(line: 67, column: 17, scope: !1785)
!4195 = !DILocation(line: 62, column: 15, scope: !1785)
!4196 = !DILocation(line: 68, column: 16, scope: !1785)
!4197 = !DILocation(line: 69, column: 5, scope: !1785)
!4198 = !DILocation(line: 70, column: 5, scope: !4138)
!4199 = !DILocation(line: 70, column: 5, scope: !1797)
!4200 = !DILocation(line: 70, column: 5, scope: !1794)
!4201 = !DILocation(line: 70, column: 5, scope: !4142)
!4202 = !DILocation(line: 70, column: 5, scope: !4144)
!4203 = !DILocation(line: 70, column: 5, scope: !1796)
!4204 = !DILocation(line: 70, column: 5, scope: !4147)
!4205 = !DILocation(line: 73, column: 1, scope: !1785)
!4206 = !DILocation(line: 2651, column: 5, scope: !4207)
!4207 = !DILexicalBlockFile(scope: !785, file: !1, discriminator: 1)
!4208 = !DILocation(line: 2651, column: 5, scope: !789)
!4209 = !DILocation(line: 2651, column: 5, scope: !785)
!4210 = !DILocation(line: 2651, column: 5, scope: !4211)
!4211 = !DILexicalBlockFile(scope: !788, file: !1, discriminator: 2)
!4212 = !DILocation(line: 2651, column: 5, scope: !4213)
!4213 = !DILexicalBlockFile(scope: !787, file: !1, discriminator: 4)
!4214 = !DILocation(line: 2651, column: 5, scope: !4215)
!4215 = distinct !DILexicalBlock(scope: !787, file: !1, line: 2651, column: 5)
!4216 = !DILocation(line: 2651, column: 5, scope: !787)
!4217 = !DILocation(line: 2651, column: 5, scope: !4218)
!4218 = !DILexicalBlockFile(scope: !4215, file: !1, discriminator: 6)
!4219 = !DILocation(line: 2249, column: 12, scope: !4220, inlinedAt: !4222)
!4220 = !DILexicalBlockFile(scope: !4221, file: !1, discriminator: 2)
!4221 = !DILexicalBlockFile(scope: !1798, file: !1, discriminator: 1)
!4222 = distinct !DILocation(line: 2652, column: 5, scope: !780)
!4223 = !DILocation(line: 2249, column: 31, scope: !1798, inlinedAt: !4222)
!4224 = !DILocation(line: 2249, column: 5, scope: !1798, inlinedAt: !4222)
!4225 = !DILocation(line: 2251, column: 76, scope: !1801, inlinedAt: !4222)
!4226 = !DILocation(line: 2652, column: 5, scope: !780)
!4227 = !DILocation(line: 2251, column: 28, scope: !1801, inlinedAt: !4222)
!4228 = !DILocation(line: 2252, column: 9, scope: !1801, inlinedAt: !4222)
!4229 = !DILocation(line: 2252, column: 24, scope: !1801, inlinedAt: !4222)
!4230 = !{!2033, !1985, i64 320}
!4231 = !DILocation(line: 2252, column: 32, scope: !1801, inlinedAt: !4222)
!4232 = !DILocation(line: 2653, column: 5, scope: !4233)
!4233 = !DILexicalBlockFile(scope: !791, file: !1, discriminator: 1)
!4234 = !DILocation(line: 2653, column: 5, scope: !795)
!4235 = !DILocation(line: 2653, column: 5, scope: !791)
!4236 = !DILocation(line: 2653, column: 5, scope: !4237)
!4237 = !DILexicalBlockFile(scope: !794, file: !1, discriminator: 2)
!4238 = !DILocation(line: 2653, column: 5, scope: !4239)
!4239 = !DILexicalBlockFile(scope: !793, file: !1, discriminator: 4)
!4240 = !DILocation(line: 2653, column: 5, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !793, file: !1, line: 2653, column: 5)
!4242 = !DILocation(line: 2653, column: 5, scope: !793)
!4243 = !DILocation(line: 2653, column: 5, scope: !4244)
!4244 = !DILexicalBlockFile(scope: !4241, file: !1, discriminator: 6)
!4245 = !DILocation(line: 2654, column: 1, scope: !780)
!4246 = !DILocation(line: 2685, column: 36, scope: !796)
!4247 = !DILocation(line: 2688, column: 5, scope: !796)
!4248 = !DILocation(line: 2693, column: 5, scope: !796)
!4249 = !DILocation(line: 2694, column: 5, scope: !796)
!4250 = !DILocation(line: 2694, column: 13, scope: !796)
!4251 = !DILocation(line: 2688, column: 15, scope: !796)
!4252 = !DILocation(line: 2688, column: 21, scope: !796)
!4253 = !DILocation(line: 2688, column: 27, scope: !796)
!4254 = !DILocation(line: 2697, column: 5, scope: !796)
!4255 = !DILocation(line: 2698, column: 35, scope: !796)
!4256 = !DILocation(line: 2689, column: 19, scope: !796)
!4257 = !DILocation(line: 2702, column: 37, scope: !796)
!4258 = !{!2033, !1982, i64 32}
!4259 = !DILocation(line: 2692, column: 26, scope: !796)
!4260 = !DILocation(line: 2703, column: 42, scope: !796)
!4261 = !DILocation(line: 2692, column: 44, scope: !796)
!4262 = !DILocation(line: 2705, column: 26, scope: !796)
!4263 = !DILocation(line: 2718, column: 23, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4265, file: !1, line: 2713, column: 71)
!4265 = distinct !DILexicalBlock(scope: !796, file: !1, line: 2710, column: 9)
!4266 = !DILocation(line: 2705, column: 43, scope: !796)
!4267 = !DILocation(line: 2706, column: 10, scope: !796)
!4268 = !{!2033, !1982, i64 208}
!4269 = !DILocation(line: 2706, column: 48, scope: !796)
!4270 = !DILocation(line: 2707, column: 48, scope: !796)
!4271 = !DILocation(line: 2707, column: 31, scope: !796)
!4272 = !DILocation(line: 2710, column: 22, scope: !4265)
!4273 = !{!2033, !1985, i64 296}
!4274 = !DILocation(line: 2710, column: 30, scope: !4265)
!4275 = !DILocation(line: 2710, column: 62, scope: !4265)
!4276 = !DILocation(line: 2711, column: 22, scope: !4265)
!4277 = !{!2033, !1985, i64 312}
!4278 = !DILocation(line: 2711, column: 29, scope: !4265)
!4279 = !DILocation(line: 2711, column: 50, scope: !4265)
!4280 = !DILocation(line: 2713, column: 22, scope: !4265)
!4281 = !{!2033, !1982, i64 40}
!4282 = !DILocation(line: 2713, column: 58, scope: !4265)
!4283 = !DILocation(line: 2713, column: 34, scope: !4265)
!4284 = !DILocation(line: 2710, column: 9, scope: !796)
!4285 = !DILocation(line: 2718, column: 28, scope: !4264)
!4286 = !DILocation(line: 2718, column: 33, scope: !4264)
!4287 = !DILocation(line: 2718, column: 9, scope: !4264)
!4288 = !DILocation(line: 2719, column: 9, scope: !4264)
!4289 = !DILocation(line: 2723, column: 5, scope: !796)
!4290 = !DILocation(line: 2724, column: 47, scope: !796)
!4291 = !DILocation(line: 2724, column: 53, scope: !796)
!4292 = !DILocation(line: 2691, column: 15, scope: !796)
!4293 = !DILocation(line: 2725, column: 16, scope: !796)
!4294 = !DILocation(line: 2692, column: 16, scope: !796)
!4295 = !DILocation(line: 2726, column: 18, scope: !4296)
!4296 = distinct !DILexicalBlock(scope: !796, file: !1, line: 2726, column: 9)
!4297 = !DILocation(line: 2736, column: 36, scope: !796)
!4298 = !DILocation(line: 2726, column: 22, scope: !4296)
!4299 = !DILocation(line: 2727, column: 19, scope: !4296)
!4300 = !DILocation(line: 2727, column: 24, scope: !4296)
!4301 = !DILocation(line: 2728, column: 11, scope: !4296)
!4302 = !DILocation(line: 2726, column: 9, scope: !796)
!4303 = !DILocation(line: 2731, column: 23, scope: !4304)
!4304 = distinct !DILexicalBlock(scope: !4296, file: !1, line: 2728, column: 70)
!4305 = !DILocation(line: 2731, column: 33, scope: !4304)
!4306 = !DILocation(line: 2731, column: 9, scope: !4304)
!4307 = !DILocation(line: 2732, column: 9, scope: !4304)
!4308 = !DILocation(line: 2736, column: 15, scope: !796)
!4309 = !DILocation(line: 2690, column: 16, scope: !796)
!4310 = !DILocation(line: 2737, column: 17, scope: !4311)
!4311 = distinct !DILexicalBlock(scope: !796, file: !1, line: 2737, column: 9)
!4312 = !DILocation(line: 2737, column: 25, scope: !4311)
!4313 = !DILocation(line: 2737, column: 28, scope: !4311)
!4314 = !DILocation(line: 2737, column: 37, scope: !4311)
!4315 = !DILocation(line: 2737, column: 45, scope: !4311)
!4316 = !DILocation(line: 2738, column: 9, scope: !4311)
!4317 = !DILocation(line: 2738, column: 35, scope: !4311)
!4318 = !DILocation(line: 2737, column: 9, scope: !796)
!4319 = !DILocation(line: 2744, column: 23, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4311, file: !1, line: 2738, column: 40)
!4321 = !DILocation(line: 2744, column: 28, scope: !4320)
!4322 = !DILocation(line: 2744, column: 33, scope: !4320)
!4323 = !DILocation(line: 2744, column: 9, scope: !4320)
!4324 = !DILocation(line: 2745, column: 9, scope: !4320)
!4325 = !DILocation(line: 2758, column: 9, scope: !832)
!4326 = !DILocation(line: 2758, column: 12, scope: !832)
!4327 = !DILocation(line: 2758, column: 9, scope: !796)
!4328 = !DILocation(line: 2759, column: 34, scope: !831)
!4329 = !DILocation(line: 320, column: 36, scope: !495, inlinedAt: !4330)
!4330 = distinct !DILocation(line: 2759, column: 9, scope: !831)
!4331 = !DILocation(line: 320, column: 52, scope: !495, inlinedAt: !4330)
!4332 = !DILocation(line: 226, column: 61, scope: !843, inlinedAt: !4333)
!4333 = distinct !DILocation(line: 321, column: 12, scope: !495, inlinedAt: !4330)
!4334 = !DILocation(line: 232, column: 19, scope: !2006, inlinedAt: !4333)
!4335 = !DILocation(line: 232, column: 30, scope: !2006, inlinedAt: !4333)
!4336 = !DILocation(line: 232, column: 33, scope: !2009, inlinedAt: !4333)
!4337 = !DILocation(line: 232, column: 14, scope: !1998, inlinedAt: !4333)
!4338 = !DILocation(line: 233, column: 25, scope: !2013, inlinedAt: !4333)
!4339 = !DILocation(line: 233, column: 9, scope: !2013, inlinedAt: !4333)
!4340 = !DILocation(line: 235, column: 9, scope: !2013, inlinedAt: !4333)
!4341 = !DILocation(line: 238, column: 5, scope: !2017, inlinedAt: !4333)
!4342 = !DILocation(line: 238, column: 5, scope: !2019, inlinedAt: !4333)
!4343 = !DILocation(line: 239, column: 5, scope: !2022, inlinedAt: !4333)
!4344 = !DILocation(line: 239, column: 5, scope: !855, inlinedAt: !4333)
!4345 = !DILocation(line: 239, column: 5, scope: !852, inlinedAt: !4333)
!4346 = !DILocation(line: 239, column: 5, scope: !2026, inlinedAt: !4333)
!4347 = !DILocation(line: 239, column: 5, scope: !2028, inlinedAt: !4333)
!4348 = !DILocation(line: 239, column: 5, scope: !854, inlinedAt: !4333)
!4349 = !DILocation(line: 239, column: 5, scope: !2031, inlinedAt: !4333)
!4350 = !DILocation(line: 321, column: 12, scope: !495, inlinedAt: !4330)
!4351 = !DILocation(line: 240, column: 21, scope: !843, inlinedAt: !4333)
!4352 = !DILocation(line: 241, column: 5, scope: !843, inlinedAt: !4333)
!4353 = !DILocation(line: 2760, column: 9, scope: !4354)
!4354 = !DILexicalBlockFile(scope: !830, file: !1, discriminator: 1)
!4355 = !DILocation(line: 2760, column: 9, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !830, file: !1, line: 2760, column: 9)
!4357 = !DILocation(line: 2760, column: 9, scope: !830)
!4358 = !DILocation(line: 2760, column: 9, scope: !4359)
!4359 = !DILexicalBlockFile(scope: !4356, file: !1, discriminator: 3)
!4360 = !DILocation(line: 2764, column: 5, scope: !796)
!4361 = !DILocation(line: 2768, column: 18, scope: !796)
!4362 = !DILocation(line: 2687, column: 15, scope: !796)
!4363 = !DILocation(line: 2769, column: 5, scope: !796)
!4364 = !DILocation(line: 2770, column: 20, scope: !836)
!4365 = !DILocation(line: 2771, column: 9, scope: !4366)
!4366 = !DILexicalBlockFile(scope: !834, file: !1, discriminator: 1)
!4367 = !DILocation(line: 2770, column: 9, scope: !796)
!4368 = !DILocation(line: 2771, column: 9, scope: !4369)
!4369 = distinct !DILexicalBlock(scope: !834, file: !1, line: 2771, column: 9)
!4370 = !DILocation(line: 2771, column: 9, scope: !834)
!4371 = !DILocation(line: 2771, column: 9, scope: !4372)
!4372 = !DILexicalBlockFile(scope: !4369, file: !1, discriminator: 3)
!4373 = !DILocation(line: 2772, column: 9, scope: !4374)
!4374 = !DILexicalBlockFile(scope: !838, file: !1, discriminator: 1)
!4375 = !DILocation(line: 2772, column: 9, scope: !4376)
!4376 = distinct !DILexicalBlock(scope: !838, file: !1, line: 2772, column: 9)
!4377 = !DILocation(line: 2772, column: 9, scope: !838)
!4378 = !DILocation(line: 2772, column: 9, scope: !4379)
!4379 = !DILexicalBlockFile(scope: !4376, file: !1, discriminator: 3)
!4380 = !DILocation(line: 2777, column: 30, scope: !796)
!4381 = !DILocation(line: 2777, column: 44, scope: !796)
!4382 = !DILocation(line: 2776, column: 5, scope: !796)
!4383 = !DILocation(line: 2778, column: 5, scope: !4384)
!4384 = !DILexicalBlockFile(scope: !840, file: !1, discriminator: 1)
!4385 = !DILocation(line: 2778, column: 5, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !840, file: !1, line: 2778, column: 5)
!4387 = !DILocation(line: 2778, column: 5, scope: !840)
!4388 = !DILocation(line: 2778, column: 5, scope: !4389)
!4389 = !DILexicalBlockFile(scope: !4386, file: !1, discriminator: 3)
!4390 = !DILocation(line: 2779, column: 5, scope: !4391)
!4391 = !DILexicalBlockFile(scope: !842, file: !1, discriminator: 1)
!4392 = !DILocation(line: 2779, column: 5, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !842, file: !1, line: 2779, column: 5)
!4394 = !DILocation(line: 2779, column: 5, scope: !842)
!4395 = !DILocation(line: 2779, column: 5, scope: !4396)
!4396 = !DILexicalBlockFile(scope: !4393, file: !1, discriminator: 3)
!4397 = !DILocation(line: 2693, column: 15, scope: !796)
!4398 = !DILocation(line: 2693, column: 25, scope: !796)
!4399 = !DILocation(line: 2693, column: 35, scope: !796)
!4400 = !DILocation(line: 2780, column: 5, scope: !796)
!4401 = !DILocation(line: 2781, column: 5, scope: !796)
!4402 = !DILocation(line: 2782, column: 26, scope: !796)
!4403 = !DILocation(line: 2782, column: 35, scope: !796)
!4404 = !DILocation(line: 333, column: 32, scope: !505, inlinedAt: !4405)
!4405 = distinct !DILocation(line: 2782, column: 5, scope: !796)
!4406 = !DILocation(line: 334, column: 60, scope: !505, inlinedAt: !4405)
!4407 = !DILocation(line: 334, column: 15, scope: !505, inlinedAt: !4405)
!4408 = !DILocation(line: 335, column: 44, scope: !505, inlinedAt: !4405)
!4409 = !DILocation(line: 336, column: 38, scope: !505, inlinedAt: !4405)
!4410 = !DILocation(line: 336, column: 55, scope: !505, inlinedAt: !4405)
!4411 = !DILocation(line: 337, column: 5, scope: !2087, inlinedAt: !4405)
!4412 = !DILocation(line: 337, column: 5, scope: !516, inlinedAt: !4405)
!4413 = !DILocation(line: 337, column: 5, scope: !513, inlinedAt: !4405)
!4414 = !DILocation(line: 337, column: 5, scope: !2091, inlinedAt: !4405)
!4415 = !DILocation(line: 337, column: 5, scope: !2093, inlinedAt: !4405)
!4416 = !DILocation(line: 337, column: 5, scope: !515, inlinedAt: !4405)
!4417 = !DILocation(line: 337, column: 5, scope: !2096, inlinedAt: !4405)
!4418 = !DILocation(line: 2782, column: 5, scope: !796)
!4419 = !DILocation(line: 2783, column: 19, scope: !796)
!4420 = !DILocation(line: 2783, column: 28, scope: !796)
!4421 = !DILocation(line: 2783, column: 37, scope: !796)
!4422 = !DILocation(line: 2783, column: 5, scope: !796)
!4423 = !DILocation(line: 2784, column: 12, scope: !796)
!4424 = !DILocation(line: 2784, column: 5, scope: !796)
!4425 = !DILocation(line: 2785, column: 1, scope: !796)
!4426 = !DILocation(line: 87, column: 46, scope: !856)
!4427 = !DILocation(line: 89, column: 5, scope: !4428)
!4428 = !DILexicalBlockFile(scope: !862, file: !1, discriminator: 1)
!4429 = !DILocation(line: 89, column: 5, scope: !4430)
!4430 = !DILexicalBlockFile(scope: !4431, file: !1, discriminator: 2)
!4431 = distinct !DILexicalBlock(scope: !862, file: !1, line: 89, column: 5)
!4432 = !{!4433, !1982, i64 16}
!4433 = !{!"", !1985, i64 0, !1985, i64 8, !1982, i64 16}
!4434 = !DILocation(line: 89, column: 5, scope: !4435)
!4435 = !DILexicalBlockFile(scope: !862, file: !1, discriminator: 4)
!4436 = !{!4433, !1985, i64 0}
!4437 = !{!4433, !1985, i64 8}
!4438 = !DILocation(line: 90, column: 5, scope: !856)
!4439 = !DILocation(line: 91, column: 5, scope: !856)
!4440 = !DILocation(line: 91, column: 20, scope: !856)
!4441 = !DILocation(line: 91, column: 28, scope: !856)
!4442 = !DILocation(line: 92, column: 1, scope: !856)
!4443 = !DILocation(line: 119, column: 43, scope: !863)
!4444 = !DILocation(line: 124, column: 12, scope: !863)
!4445 = !DILocation(line: 124, column: 27, scope: !863)
!4446 = !DILocation(line: 121, column: 17, scope: !863)
!4447 = !DILocation(line: 125, column: 26, scope: !863)
!4448 = !DILocation(line: 122, column: 17, scope: !863)
!4449 = !DILocation(line: 126, column: 13, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !863, file: !1, line: 126, column: 9)
!4451 = !DILocation(line: 126, column: 32, scope: !4450)
!4452 = !DILocation(line: 126, column: 9, scope: !863)
!4453 = !DILocation(line: 128, column: 53, scope: !863)
!4454 = !DILocation(line: 128, column: 12, scope: !863)
!4455 = !DILocation(line: 128, column: 5, scope: !863)
!4456 = !DILocation(line: 106, column: 42, scope: !870)
!4457 = !DILocation(line: 108, column: 13, scope: !870)
!4458 = !DILocation(line: 108, column: 5, scope: !870)
!4459 = !DILocation(line: 110, column: 16, scope: !4460)
!4460 = distinct !DILexicalBlock(scope: !870, file: !1, line: 108, column: 43)
!4461 = !DILocation(line: 110, column: 9, scope: !4460)
!4462 = !DILocation(line: 112, column: 29, scope: !4460)
!4463 = !DILocation(line: 112, column: 16, scope: !4460)
!4464 = !DILocation(line: 112, column: 9, scope: !4460)
!4465 = !DILocation(line: 114, column: 16, scope: !4460)
!4466 = !DILocation(line: 114, column: 9, scope: !4460)
!4467 = !DILocation(line: 116, column: 1, scope: !870)
!4468 = !DILocation(line: 95, column: 47, scope: !873)
!4469 = !DILocation(line: 95, column: 63, scope: !873)
!4470 = !DILocation(line: 95, column: 76, scope: !873)
!4471 = !DILocation(line: 97, column: 5, scope: !4472)
!4472 = !DILexicalBlockFile(scope: !882, file: !1, discriminator: 1)
!4473 = !DILocation(line: 97, column: 5, scope: !883)
!4474 = !DILocation(line: 97, column: 5, scope: !4475)
!4475 = !DILexicalBlockFile(scope: !881, file: !1, discriminator: 2)
!4476 = !DILocation(line: 97, column: 5, scope: !4477)
!4477 = distinct !DILexicalBlock(scope: !881, file: !1, line: 97, column: 5)
!4478 = !DILocation(line: 98, column: 5, scope: !4479)
!4479 = !DILexicalBlockFile(scope: !886, file: !1, discriminator: 1)
!4480 = !DILocation(line: 98, column: 5, scope: !887)
!4481 = !DILocation(line: 98, column: 5, scope: !4482)
!4482 = !DILexicalBlockFile(scope: !885, file: !1, discriminator: 2)
!4483 = !DILocation(line: 98, column: 5, scope: !4484)
!4484 = distinct !DILexicalBlock(scope: !885, file: !1, line: 98, column: 5)
!4485 = !DILocation(line: 99, column: 5, scope: !4486)
!4486 = !DILexicalBlockFile(scope: !890, file: !1, discriminator: 1)
!4487 = !DILocation(line: 99, column: 5, scope: !891)
!4488 = !DILocation(line: 99, column: 5, scope: !4489)
!4489 = !DILexicalBlockFile(scope: !889, file: !1, discriminator: 2)
!4490 = !DILocation(line: 99, column: 5, scope: !4491)
!4491 = distinct !DILexicalBlock(scope: !889, file: !1, line: 99, column: 5)
!4492 = !DILocation(line: 100, column: 5, scope: !4493)
!4493 = !DILexicalBlockFile(scope: !894, file: !1, discriminator: 1)
!4494 = !DILocation(line: 100, column: 5, scope: !895)
!4495 = !DILocation(line: 100, column: 5, scope: !4496)
!4496 = !DILexicalBlockFile(scope: !893, file: !1, discriminator: 2)
!4497 = !DILocation(line: 100, column: 5, scope: !4498)
!4498 = distinct !DILexicalBlock(scope: !893, file: !1, line: 100, column: 5)
!4499 = !DILocation(line: 101, column: 5, scope: !4500)
!4500 = !DILexicalBlockFile(scope: !898, file: !1, discriminator: 1)
!4501 = !DILocation(line: 101, column: 5, scope: !899)
!4502 = !DILocation(line: 101, column: 5, scope: !4503)
!4503 = !DILexicalBlockFile(scope: !897, file: !1, discriminator: 2)
!4504 = !DILocation(line: 101, column: 5, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !897, file: !1, line: 101, column: 5)
!4506 = !DILocation(line: 102, column: 5, scope: !873)
!4507 = !DILocation(line: 103, column: 1, scope: !873)
!4508 = !DILocation(line: 76, column: 44, scope: !900)
!4509 = !DILocation(line: 78, column: 5, scope: !4510)
!4510 = !DILexicalBlockFile(scope: !906, file: !1, discriminator: 1)
!4511 = !DILocation(line: 78, column: 5, scope: !910)
!4512 = !DILocation(line: 78, column: 5, scope: !906)
!4513 = !DILocation(line: 78, column: 5, scope: !4514)
!4514 = !DILexicalBlockFile(scope: !909, file: !1, discriminator: 2)
!4515 = !DILocation(line: 78, column: 5, scope: !4516)
!4516 = !DILexicalBlockFile(scope: !908, file: !1, discriminator: 4)
!4517 = !DILocation(line: 78, column: 5, scope: !4518)
!4518 = distinct !DILexicalBlock(scope: !908, file: !1, line: 78, column: 5)
!4519 = !DILocation(line: 78, column: 5, scope: !908)
!4520 = !DILocation(line: 78, column: 5, scope: !4521)
!4521 = !DILexicalBlockFile(scope: !4518, file: !1, discriminator: 6)
!4522 = !DILocation(line: 79, column: 5, scope: !4523)
!4523 = !DILexicalBlockFile(scope: !912, file: !1, discriminator: 1)
!4524 = !DILocation(line: 79, column: 5, scope: !916)
!4525 = !DILocation(line: 79, column: 5, scope: !912)
!4526 = !DILocation(line: 79, column: 5, scope: !4527)
!4527 = !DILexicalBlockFile(scope: !915, file: !1, discriminator: 2)
!4528 = !DILocation(line: 79, column: 5, scope: !4529)
!4529 = !DILexicalBlockFile(scope: !914, file: !1, discriminator: 4)
!4530 = !DILocation(line: 79, column: 5, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !914, file: !1, line: 79, column: 5)
!4532 = !DILocation(line: 79, column: 5, scope: !914)
!4533 = !DILocation(line: 79, column: 5, scope: !4534)
!4534 = !DILexicalBlockFile(scope: !4531, file: !1, discriminator: 6)
!4535 = !DILocation(line: 80, column: 5, scope: !4536)
!4536 = !DILexicalBlockFile(scope: !918, file: !1, discriminator: 1)
!4537 = !DILocation(line: 80, column: 5, scope: !922)
!4538 = !DILocation(line: 80, column: 5, scope: !918)
!4539 = !DILocation(line: 80, column: 5, scope: !4540)
!4540 = !DILexicalBlockFile(scope: !921, file: !1, discriminator: 2)
!4541 = !DILocation(line: 80, column: 5, scope: !4542)
!4542 = !DILexicalBlockFile(scope: !920, file: !1, discriminator: 4)
!4543 = !DILocation(line: 80, column: 5, scope: !4544)
!4544 = distinct !DILexicalBlock(scope: !920, file: !1, line: 80, column: 5)
!4545 = !DILocation(line: 80, column: 5, scope: !920)
!4546 = !DILocation(line: 80, column: 5, scope: !4547)
!4547 = !DILexicalBlockFile(scope: !4544, file: !1, discriminator: 6)
!4548 = !DILocation(line: 81, column: 5, scope: !4549)
!4549 = !DILexicalBlockFile(scope: !924, file: !1, discriminator: 1)
!4550 = !DILocation(line: 81, column: 5, scope: !928)
!4551 = !DILocation(line: 81, column: 5, scope: !924)
!4552 = !DILocation(line: 81, column: 5, scope: !4553)
!4553 = !DILexicalBlockFile(scope: !927, file: !1, discriminator: 2)
!4554 = !DILocation(line: 81, column: 5, scope: !4555)
!4555 = !DILexicalBlockFile(scope: !926, file: !1, discriminator: 4)
!4556 = !DILocation(line: 81, column: 5, scope: !4557)
!4557 = distinct !DILexicalBlock(scope: !926, file: !1, line: 81, column: 5)
!4558 = !DILocation(line: 81, column: 5, scope: !926)
!4559 = !DILocation(line: 81, column: 5, scope: !4560)
!4560 = !DILexicalBlockFile(scope: !4557, file: !1, discriminator: 6)
!4561 = !DILocation(line: 82, column: 5, scope: !4562)
!4562 = !DILexicalBlockFile(scope: !930, file: !1, discriminator: 1)
!4563 = !DILocation(line: 82, column: 5, scope: !934)
!4564 = !DILocation(line: 82, column: 5, scope: !930)
!4565 = !DILocation(line: 82, column: 5, scope: !4566)
!4566 = !DILexicalBlockFile(scope: !933, file: !1, discriminator: 2)
!4567 = !DILocation(line: 82, column: 5, scope: !4568)
!4568 = !DILexicalBlockFile(scope: !932, file: !1, discriminator: 4)
!4569 = !DILocation(line: 82, column: 5, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !932, file: !1, line: 82, column: 5)
!4571 = !DILocation(line: 82, column: 5, scope: !932)
!4572 = !DILocation(line: 82, column: 5, scope: !4573)
!4573 = !DILexicalBlockFile(scope: !4570, file: !1, discriminator: 6)
!4574 = !DILocation(line: 83, column: 5, scope: !900)
!4575 = !DILocation(line: 133, column: 45, scope: !935)
!4576 = !DILocation(line: 135, column: 15, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !935, file: !1, line: 135, column: 9)
!4578 = !DILocation(line: 138, column: 53, scope: !4577)
!4579 = !DILocation(line: 135, column: 9, scope: !4577)
!4580 = !DILocation(line: 135, column: 20, scope: !4577)
!4581 = !DILocation(line: 135, column: 29, scope: !4577)
!4582 = !DILocation(line: 135, column: 23, scope: !4577)
!4583 = !DILocation(line: 135, column: 9, scope: !935)
!4584 = !DILocation(line: 136, column: 32, scope: !4577)
!4585 = !DILocation(line: 136, column: 16, scope: !4577)
!4586 = !DILocation(line: 136, column: 9, scope: !4577)
!4587 = !DILocation(line: 138, column: 32, scope: !4577)
!4588 = !DILocation(line: 138, column: 16, scope: !4577)
!4589 = !DILocation(line: 138, column: 9, scope: !4577)
!4590 = !DILocation(line: 139, column: 1, scope: !935)
!4591 = !DILocation(line: 147, column: 34, scope: !938)
!4592 = !DILocation(line: 147, column: 50, scope: !938)
!4593 = !DILocation(line: 149, column: 5, scope: !938)
!4594 = !DILocation(line: 150, column: 5, scope: !938)
!4595 = !DILocation(line: 150, column: 16, scope: !938)
!4596 = !DILocation(line: 152, column: 15, scope: !4597)
!4597 = distinct !DILexicalBlock(scope: !938, file: !1, line: 152, column: 9)
!4598 = !DILocation(line: 152, column: 9, scope: !938)
!4599 = !DILocation(line: 153, column: 14, scope: !4600)
!4600 = distinct !DILexicalBlock(scope: !4601, file: !1, line: 153, column: 13)
!4601 = distinct !DILexicalBlock(scope: !4597, file: !1, line: 152, column: 27)
!4602 = !DILocation(line: 153, column: 13, scope: !4601)
!4603 = !DILocation(line: 149, column: 15, scope: !938)
!4604 = !DILocation(line: 154, column: 29, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4600, file: !1, line: 153, column: 35)
!4606 = !DILocation(line: 154, column: 13, scope: !4605)
!4607 = !DILocation(line: 155, column: 13, scope: !4605)
!4608 = !DILocation(line: 149, column: 23, scope: !938)
!4609 = !DILocation(line: 157, column: 16, scope: !4601)
!4610 = !DILocation(line: 157, column: 9, scope: !4601)
!4611 = !DILocation(line: 158, column: 40, scope: !4612)
!4612 = distinct !DILexicalBlock(scope: !4613, file: !1, line: 158, column: 17)
!4613 = distinct !DILexicalBlock(scope: !4601, file: !1, line: 157, column: 58)
!4614 = !DILocation(line: 158, column: 47, scope: !4612)
!4615 = !DILocation(line: 158, column: 17, scope: !4612)
!4616 = !DILocation(line: 158, column: 56, scope: !4612)
!4617 = !DILocation(line: 158, column: 17, scope: !4613)
!4618 = !DILocation(line: 162, column: 5, scope: !938)
!4619 = !DILocation(line: 163, column: 1, scope: !938)
!4620 = !DILocation(line: 166, column: 40, scope: !945)
!4621 = !DILocation(line: 166, column: 56, scope: !945)
!4622 = !DILocation(line: 320, column: 36, scope: !495, inlinedAt: !4623)
!4623 = distinct !DILocation(line: 167, column: 9, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !945, file: !1, line: 167, column: 9)
!4625 = !DILocation(line: 320, column: 52, scope: !495, inlinedAt: !4623)
!4626 = !DILocation(line: 226, column: 61, scope: !843, inlinedAt: !4627)
!4627 = distinct !DILocation(line: 321, column: 12, scope: !495, inlinedAt: !4623)
!4628 = !DILocation(line: 228, column: 12, scope: !1998, inlinedAt: !4627)
!4629 = !DILocation(line: 228, column: 9, scope: !843, inlinedAt: !4627)
!4630 = !DILocation(line: 229, column: 25, scope: !2001, inlinedAt: !4627)
!4631 = !DILocation(line: 229, column: 9, scope: !2001, inlinedAt: !4627)
!4632 = !DILocation(line: 230, column: 9, scope: !2001, inlinedAt: !4627)
!4633 = !DILocation(line: 232, column: 19, scope: !2006, inlinedAt: !4627)
!4634 = !DILocation(line: 232, column: 30, scope: !2006, inlinedAt: !4627)
!4635 = !DILocation(line: 232, column: 33, scope: !2009, inlinedAt: !4627)
!4636 = !DILocation(line: 232, column: 14, scope: !1998, inlinedAt: !4627)
!4637 = !DILocation(line: 233, column: 25, scope: !2013, inlinedAt: !4627)
!4638 = !DILocation(line: 233, column: 9, scope: !2013, inlinedAt: !4627)
!4639 = !DILocation(line: 235, column: 9, scope: !2013, inlinedAt: !4627)
!4640 = !DILocation(line: 238, column: 5, scope: !2017, inlinedAt: !4627)
!4641 = !DILocation(line: 238, column: 5, scope: !2019, inlinedAt: !4627)
!4642 = !DILocation(line: 239, column: 5, scope: !2022, inlinedAt: !4627)
!4643 = !DILocation(line: 239, column: 5, scope: !855, inlinedAt: !4627)
!4644 = !DILocation(line: 239, column: 5, scope: !852, inlinedAt: !4627)
!4645 = !DILocation(line: 239, column: 5, scope: !2026, inlinedAt: !4627)
!4646 = !DILocation(line: 239, column: 5, scope: !2028, inlinedAt: !4627)
!4647 = !DILocation(line: 239, column: 5, scope: !854, inlinedAt: !4627)
!4648 = !DILocation(line: 239, column: 5, scope: !2031, inlinedAt: !4627)
!4649 = !DILocation(line: 321, column: 12, scope: !495, inlinedAt: !4623)
!4650 = !DILocation(line: 240, column: 21, scope: !843, inlinedAt: !4627)
!4651 = !DILocation(line: 170, column: 5, scope: !945)
!4652 = !DILocation(line: 171, column: 5, scope: !945)
!4653 = !DILocation(line: 172, column: 1, scope: !945)
!4654 = !DILocation(line: 188, column: 47, scope: !949)
!4655 = !DILocation(line: 190, column: 15, scope: !4656)
!4656 = distinct !DILexicalBlock(scope: !949, file: !1, line: 190, column: 9)
!4657 = !DILocation(line: 195, column: 18, scope: !949)
!4658 = !DILocation(line: 190, column: 20, scope: !4656)
!4659 = !DILocation(line: 190, column: 9, scope: !949)
!4660 = !DILocation(line: 191, column: 9, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4656, file: !1, line: 190, column: 29)
!4662 = !DILocation(line: 192, column: 9, scope: !4661)
!4663 = !DILocation(line: 194, column: 5, scope: !949)
!4664 = !DILocation(line: 195, column: 5, scope: !949)
!4665 = !DILocation(line: 196, column: 1, scope: !949)
!4666 = !DILocation(line: 199, column: 47, scope: !952)
!4667 = !DILocation(line: 199, column: 63, scope: !952)
!4668 = !DILocation(line: 202, column: 13, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !952, file: !1, line: 202, column: 9)
!4670 = !DILocation(line: 202, column: 9, scope: !952)
!4671 = !DILocation(line: 203, column: 25, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4669, file: !1, line: 202, column: 22)
!4673 = !DILocation(line: 203, column: 9, scope: !4672)
!4674 = !DILocation(line: 204, column: 9, scope: !4672)
!4675 = !DILocation(line: 206, column: 11, scope: !952)
!4676 = !DILocation(line: 201, column: 15, scope: !952)
!4677 = !DILocation(line: 207, column: 10, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !952, file: !1, line: 207, column: 9)
!4679 = !DILocation(line: 207, column: 9, scope: !952)
!4680 = !DILocation(line: 209, column: 5, scope: !4681)
!4681 = !DILexicalBlockFile(scope: !958, file: !1, discriminator: 1)
!4682 = !DILocation(line: 209, column: 5, scope: !962)
!4683 = !DILocation(line: 209, column: 5, scope: !958)
!4684 = !DILocation(line: 209, column: 5, scope: !4685)
!4685 = !DILexicalBlockFile(scope: !961, file: !1, discriminator: 2)
!4686 = !DILocation(line: 209, column: 5, scope: !4687)
!4687 = !DILexicalBlockFile(scope: !960, file: !1, discriminator: 4)
!4688 = !DILocation(line: 209, column: 5, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !960, file: !1, line: 209, column: 5)
!4690 = !DILocation(line: 209, column: 5, scope: !960)
!4691 = !DILocation(line: 209, column: 5, scope: !4692)
!4692 = !DILexicalBlockFile(scope: !4689, file: !1, discriminator: 6)
!4693 = !DILocation(line: 210, column: 16, scope: !952)
!4694 = !DILocation(line: 211, column: 5, scope: !952)
!4695 = !DILocation(line: 212, column: 1, scope: !952)
!4696 = !DILocation(line: 215, column: 45, scope: !963)
!4697 = !DILocation(line: 217, column: 15, scope: !4698)
!4698 = distinct !DILexicalBlock(scope: !963, file: !1, line: 217, column: 9)
!4699 = !DILocation(line: 222, column: 18, scope: !963)
!4700 = !DILocation(line: 217, column: 25, scope: !4698)
!4701 = !DILocation(line: 217, column: 9, scope: !963)
!4702 = !DILocation(line: 218, column: 9, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4698, file: !1, line: 217, column: 34)
!4704 = !DILocation(line: 219, column: 9, scope: !4703)
!4705 = !DILocation(line: 221, column: 5, scope: !963)
!4706 = !DILocation(line: 222, column: 5, scope: !963)
!4707 = !DILocation(line: 223, column: 1, scope: !963)
!4708 = !DILocation(line: 245, column: 37, scope: !966)
!4709 = !DILocation(line: 341, column: 34, scope: !517, inlinedAt: !4710)
!4710 = distinct !DILocation(line: 246, column: 21, scope: !966)
!4711 = !DILocation(line: 342, column: 58, scope: !517, inlinedAt: !4710)
!4712 = !DILocation(line: 342, column: 15, scope: !517, inlinedAt: !4710)
!4713 = !DILocation(line: 343, column: 5, scope: !2103, inlinedAt: !4710)
!4714 = !DILocation(line: 343, column: 5, scope: !2105, inlinedAt: !4710)
!4715 = !DILocation(line: 343, column: 5, scope: !522, inlinedAt: !4710)
!4716 = !DILocation(line: 343, column: 5, scope: !2108, inlinedAt: !4710)
!4717 = !DILocation(line: 246, column: 15, scope: !966)
!4718 = !DILocation(line: 249, column: 5, scope: !966)
!4719 = !DILocation(line: 250, column: 1, scope: !966)
!4720 = !DILocation(line: 253, column: 37, scope: !970)
!4721 = !DILocation(line: 253, column: 53, scope: !970)
!4722 = !DILocation(line: 254, column: 13, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !970, file: !1, line: 254, column: 9)
!4724 = !DILocation(line: 254, column: 9, scope: !970)
!4725 = !DILocation(line: 255, column: 25, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4723, file: !1, line: 254, column: 22)
!4727 = !DILocation(line: 255, column: 9, scope: !4726)
!4728 = !DILocation(line: 256, column: 9, scope: !4726)
!4729 = !DILocation(line: 257, column: 20, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4723, file: !1, line: 257, column: 16)
!4731 = !DILocation(line: 257, column: 16, scope: !4723)
!4732 = !DILocation(line: 259, column: 17, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4730, file: !1, line: 259, column: 16)
!4734 = !DILocation(line: 259, column: 16, scope: !4730)
!4735 = !DILocation(line: 260, column: 25, scope: !4736)
!4736 = distinct !DILexicalBlock(scope: !4733, file: !1, line: 259, column: 49)
!4737 = !DILocation(line: 260, column: 9, scope: !4736)
!4738 = !DILocation(line: 262, column: 9, scope: !4736)
!4739 = !DILocation(line: 265, column: 9, scope: !4740)
!4740 = distinct !DILexicalBlock(scope: !4733, file: !1, line: 263, column: 12)
!4741 = !DILocation(line: 349, column: 34, scope: !523, inlinedAt: !4742)
!4742 = distinct !DILocation(line: 267, column: 5, scope: !970)
!4743 = !DILocation(line: 349, column: 50, scope: !523, inlinedAt: !4742)
!4744 = !DILocation(line: 350, column: 62, scope: !523, inlinedAt: !4742)
!4745 = !DILocation(line: 350, column: 15, scope: !523, inlinedAt: !4742)
!4746 = !DILocation(line: 351, column: 46, scope: !523, inlinedAt: !4742)
!4747 = !DILocation(line: 352, column: 5, scope: !2116, inlinedAt: !4742)
!4748 = !DILocation(line: 352, column: 5, scope: !532, inlinedAt: !4742)
!4749 = !DILocation(line: 352, column: 5, scope: !529, inlinedAt: !4742)
!4750 = !DILocation(line: 352, column: 5, scope: !2120, inlinedAt: !4742)
!4751 = !DILocation(line: 352, column: 5, scope: !2122, inlinedAt: !4742)
!4752 = !DILocation(line: 352, column: 5, scope: !531, inlinedAt: !4742)
!4753 = !DILocation(line: 352, column: 5, scope: !2125, inlinedAt: !4742)
!4754 = !DILocation(line: 267, column: 5, scope: !970)
!4755 = !DILocation(line: 269, column: 1, scope: !970)
!4756 = !DILocation(line: 272, column: 35, scope: !974)
!4757 = !DILocation(line: 325, column: 32, scope: !499, inlinedAt: !4758)
!4758 = distinct !DILocation(line: 273, column: 21, scope: !974)
!4759 = !DILocation(line: 326, column: 56, scope: !499, inlinedAt: !4758)
!4760 = !DILocation(line: 326, column: 15, scope: !499, inlinedAt: !4758)
!4761 = !DILocation(line: 327, column: 5, scope: !2071, inlinedAt: !4758)
!4762 = !DILocation(line: 327, column: 5, scope: !2073, inlinedAt: !4758)
!4763 = !DILocation(line: 327, column: 5, scope: !504, inlinedAt: !4758)
!4764 = !DILocation(line: 327, column: 5, scope: !2076, inlinedAt: !4758)
!4765 = !DILocation(line: 273, column: 15, scope: !974)
!4766 = !DILocation(line: 276, column: 5, scope: !974)
!4767 = !DILocation(line: 277, column: 1, scope: !974)
!4768 = !DILocation(line: 280, column: 35, scope: !978)
!4769 = !DILocation(line: 280, column: 51, scope: !978)
!4770 = !DILocation(line: 281, column: 13, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !978, file: !1, line: 281, column: 9)
!4772 = !DILocation(line: 281, column: 9, scope: !978)
!4773 = !DILocation(line: 282, column: 25, scope: !4774)
!4774 = distinct !DILexicalBlock(scope: !4771, file: !1, line: 281, column: 22)
!4775 = !DILocation(line: 282, column: 9, scope: !4774)
!4776 = !DILocation(line: 283, column: 9, scope: !4774)
!4777 = !DILocation(line: 284, column: 20, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4771, file: !1, line: 284, column: 16)
!4779 = !DILocation(line: 284, column: 16, scope: !4771)
!4780 = !DILocation(line: 286, column: 17, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !4778, file: !1, line: 286, column: 16)
!4782 = !DILocation(line: 286, column: 16, scope: !4778)
!4783 = !DILocation(line: 287, column: 25, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !4781, file: !1, line: 286, column: 49)
!4785 = !DILocation(line: 287, column: 9, scope: !4784)
!4786 = !DILocation(line: 289, column: 9, scope: !4784)
!4787 = !DILocation(line: 292, column: 9, scope: !4788)
!4788 = distinct !DILexicalBlock(scope: !4781, file: !1, line: 290, column: 12)
!4789 = !DILocation(line: 333, column: 32, scope: !505, inlinedAt: !4790)
!4790 = distinct !DILocation(line: 294, column: 5, scope: !978)
!4791 = !DILocation(line: 333, column: 48, scope: !505, inlinedAt: !4790)
!4792 = !DILocation(line: 334, column: 60, scope: !505, inlinedAt: !4790)
!4793 = !DILocation(line: 334, column: 15, scope: !505, inlinedAt: !4790)
!4794 = !DILocation(line: 335, column: 44, scope: !505, inlinedAt: !4790)
!4795 = !DILocation(line: 336, column: 38, scope: !505, inlinedAt: !4790)
!4796 = !DILocation(line: 336, column: 55, scope: !505, inlinedAt: !4790)
!4797 = !DILocation(line: 337, column: 5, scope: !2087, inlinedAt: !4790)
!4798 = !DILocation(line: 337, column: 5, scope: !516, inlinedAt: !4790)
!4799 = !DILocation(line: 337, column: 5, scope: !513, inlinedAt: !4790)
!4800 = !DILocation(line: 337, column: 5, scope: !2091, inlinedAt: !4790)
!4801 = !DILocation(line: 337, column: 5, scope: !2093, inlinedAt: !4790)
!4802 = !DILocation(line: 337, column: 5, scope: !515, inlinedAt: !4790)
!4803 = !DILocation(line: 337, column: 5, scope: !2096, inlinedAt: !4790)
!4804 = !DILocation(line: 294, column: 5, scope: !978)
!4805 = !DILocation(line: 296, column: 1, scope: !978)
!4806 = !DILocation(line: 511, column: 46, scope: !982)
!4807 = !DILocation(line: 513, column: 5, scope: !4808)
!4808 = !DILexicalBlockFile(scope: !1000, file: !1, discriminator: 1)
!4809 = !DILocation(line: 513, column: 5, scope: !4810)
!4810 = !DILexicalBlockFile(scope: !4811, file: !1, discriminator: 2)
!4811 = distinct !DILexicalBlock(scope: !1000, file: !1, line: 513, column: 5)
!4812 = !DILocation(line: 513, column: 5, scope: !4813)
!4813 = !DILexicalBlockFile(scope: !1000, file: !1, discriminator: 4)
!4814 = !DILocation(line: 504, column: 44, scope: !1012, inlinedAt: !4815)
!4815 = distinct !DILocation(line: 514, column: 5, scope: !982)
!4816 = !DILocation(line: 506, column: 5, scope: !4817, inlinedAt: !4815)
!4817 = !DILexicalBlockFile(scope: !1018, file: !1, discriminator: 1)
!4818 = !{!4819, !1985, i64 64}
!4819 = !{!"", !1981, i64 0, !1985, i64 16, !1985, i64 24, !1985, i64 32, !1985, i64 40, !1985, i64 48, !1983, i64 56, !1985, i64 64}
!4820 = !DILocation(line: 506, column: 5, scope: !1022, inlinedAt: !4815)
!4821 = !DILocation(line: 506, column: 5, scope: !1018, inlinedAt: !4815)
!4822 = !DILocation(line: 506, column: 5, scope: !4823, inlinedAt: !4815)
!4823 = !DILexicalBlockFile(scope: !1021, file: !1, discriminator: 2)
!4824 = !DILocation(line: 506, column: 5, scope: !4825, inlinedAt: !4815)
!4825 = !DILexicalBlockFile(scope: !1020, file: !1, discriminator: 4)
!4826 = !DILocation(line: 506, column: 5, scope: !4827, inlinedAt: !4815)
!4827 = distinct !DILexicalBlock(scope: !1020, file: !1, line: 506, column: 5)
!4828 = !DILocation(line: 506, column: 5, scope: !1020, inlinedAt: !4815)
!4829 = !DILocation(line: 506, column: 5, scope: !4830, inlinedAt: !4815)
!4830 = !DILexicalBlockFile(scope: !4827, file: !1, discriminator: 6)
!4831 = !DILocation(line: 514, column: 5, scope: !982)
!4832 = !DILocation(line: 507, column: 32, scope: !1012, inlinedAt: !4815)
!4833 = !DILocation(line: 507, column: 12, scope: !1012, inlinedAt: !4815)
!4834 = !DILocation(line: 515, column: 5, scope: !982)
!4835 = !DILocation(line: 515, column: 20, scope: !982)
!4836 = !DILocation(line: 515, column: 28, scope: !982)
!4837 = !DILocation(line: 516, column: 1, scope: !982)
!4838 = !DILocation(line: 519, column: 47, scope: !1001)
!4839 = !DILocation(line: 519, column: 63, scope: !1001)
!4840 = !DILocation(line: 519, column: 76, scope: !1001)
!4841 = !DILocation(line: 521, column: 5, scope: !4842)
!4842 = !DILexicalBlockFile(scope: !1010, file: !1, discriminator: 1)
!4843 = !DILocation(line: 521, column: 5, scope: !1011)
!4844 = !DILocation(line: 521, column: 5, scope: !4845)
!4845 = !DILexicalBlockFile(scope: !1009, file: !1, discriminator: 2)
!4846 = !DILocation(line: 521, column: 5, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !1009, file: !1, line: 521, column: 5)
!4848 = !DILocation(line: 95, column: 63, scope: !873, inlinedAt: !4849)
!4849 = distinct !DILocation(line: 522, column: 12, scope: !1001)
!4850 = !DILocation(line: 95, column: 76, scope: !873, inlinedAt: !4849)
!4851 = !DILocation(line: 97, column: 5, scope: !4472, inlinedAt: !4849)
!4852 = !DILocation(line: 97, column: 5, scope: !883, inlinedAt: !4849)
!4853 = !DILocation(line: 97, column: 5, scope: !4475, inlinedAt: !4849)
!4854 = !DILocation(line: 97, column: 5, scope: !4477, inlinedAt: !4849)
!4855 = !DILocation(line: 522, column: 12, scope: !1001)
!4856 = !DILocation(line: 98, column: 5, scope: !4479, inlinedAt: !4849)
!4857 = !DILocation(line: 98, column: 5, scope: !887, inlinedAt: !4849)
!4858 = !DILocation(line: 98, column: 5, scope: !4482, inlinedAt: !4849)
!4859 = !DILocation(line: 98, column: 5, scope: !4484, inlinedAt: !4849)
!4860 = !DILocation(line: 99, column: 5, scope: !4486, inlinedAt: !4849)
!4861 = !DILocation(line: 99, column: 5, scope: !891, inlinedAt: !4849)
!4862 = !DILocation(line: 99, column: 5, scope: !4489, inlinedAt: !4849)
!4863 = !DILocation(line: 99, column: 5, scope: !4491, inlinedAt: !4849)
!4864 = !DILocation(line: 100, column: 5, scope: !4493, inlinedAt: !4849)
!4865 = !DILocation(line: 100, column: 5, scope: !895, inlinedAt: !4849)
!4866 = !DILocation(line: 100, column: 5, scope: !4496, inlinedAt: !4849)
!4867 = !DILocation(line: 100, column: 5, scope: !4498, inlinedAt: !4849)
!4868 = !DILocation(line: 101, column: 5, scope: !4500, inlinedAt: !4849)
!4869 = !DILocation(line: 101, column: 5, scope: !899, inlinedAt: !4849)
!4870 = !DILocation(line: 101, column: 5, scope: !4503, inlinedAt: !4849)
!4871 = !DILocation(line: 101, column: 5, scope: !4505, inlinedAt: !4849)
!4872 = !DILocation(line: 102, column: 5, scope: !873, inlinedAt: !4849)
!4873 = !DILocation(line: 523, column: 1, scope: !1001)
!4874 = !DILocation(line: 504, column: 44, scope: !1012)
!4875 = !DILocation(line: 506, column: 5, scope: !4817)
!4876 = !DILocation(line: 506, column: 5, scope: !1022)
!4877 = !DILocation(line: 506, column: 5, scope: !1018)
!4878 = !DILocation(line: 506, column: 5, scope: !4823)
!4879 = !DILocation(line: 506, column: 5, scope: !4825)
!4880 = !DILocation(line: 506, column: 5, scope: !4827)
!4881 = !DILocation(line: 506, column: 5, scope: !1020)
!4882 = !DILocation(line: 506, column: 5, scope: !4830)
!4883 = !DILocation(line: 507, column: 32, scope: !1012)
!4884 = !DILocation(line: 507, column: 12, scope: !1012)
!4885 = !DILocation(line: 507, column: 5, scope: !1012)
!4886 = !DILocation(line: 486, column: 43, scope: !1023)
!4887 = !DILocation(line: 486, column: 59, scope: !1023)
!4888 = !DILocation(line: 486, column: 75, scope: !1023)
!4889 = !DILocation(line: 488, column: 23, scope: !1023)
!4890 = !DILocation(line: 488, column: 16, scope: !1023)
!4891 = !DILocation(line: 60, column: 59, scope: !1785, inlinedAt: !4892)
!4892 = distinct !DILocation(line: 491, column: 9, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !1023, file: !1, line: 491, column: 9)
!4894 = !DILocation(line: 60, column: 75, scope: !1785, inlinedAt: !4892)
!4895 = !DILocation(line: 64, column: 28, scope: !4128, inlinedAt: !4892)
!4896 = !DILocation(line: 64, column: 43, scope: !4128, inlinedAt: !4892)
!4897 = !DILocation(line: 64, column: 10, scope: !4128, inlinedAt: !4892)
!4898 = !DILocation(line: 64, column: 9, scope: !1785, inlinedAt: !4892)
!4899 = !DILocation(line: 67, column: 17, scope: !1785, inlinedAt: !4892)
!4900 = !DILocation(line: 62, column: 15, scope: !1785, inlinedAt: !4892)
!4901 = !DILocation(line: 68, column: 16, scope: !1785, inlinedAt: !4892)
!4902 = !DILocation(line: 69, column: 5, scope: !1785, inlinedAt: !4892)
!4903 = !DILocation(line: 70, column: 5, scope: !4138, inlinedAt: !4892)
!4904 = !DILocation(line: 70, column: 5, scope: !1797, inlinedAt: !4892)
!4905 = !DILocation(line: 70, column: 5, scope: !1794, inlinedAt: !4892)
!4906 = !DILocation(line: 70, column: 5, scope: !4142, inlinedAt: !4892)
!4907 = !DILocation(line: 70, column: 5, scope: !4144, inlinedAt: !4892)
!4908 = !DILocation(line: 70, column: 5, scope: !1796, inlinedAt: !4892)
!4909 = !DILocation(line: 70, column: 5, scope: !4147, inlinedAt: !4892)
!4910 = !DILocation(line: 491, column: 9, scope: !4893)
!4911 = !DILocation(line: 493, column: 5, scope: !4912)
!4912 = !DILexicalBlockFile(scope: !1033, file: !1, discriminator: 1)
!4913 = !DILocation(line: 493, column: 5, scope: !1037)
!4914 = !DILocation(line: 493, column: 5, scope: !1033)
!4915 = !DILocation(line: 493, column: 5, scope: !4916)
!4916 = !DILexicalBlockFile(scope: !1036, file: !1, discriminator: 2)
!4917 = !DILocation(line: 493, column: 5, scope: !4918)
!4918 = !DILexicalBlockFile(scope: !1035, file: !1, discriminator: 4)
!4919 = !DILocation(line: 493, column: 5, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !1035, file: !1, line: 493, column: 5)
!4921 = !DILocation(line: 493, column: 5, scope: !1035)
!4922 = !DILocation(line: 493, column: 5, scope: !4923)
!4923 = !DILexicalBlockFile(scope: !4920, file: !1, discriminator: 6)
!4924 = !DILocation(line: 494, column: 14, scope: !4925)
!4925 = distinct !DILexicalBlock(scope: !1023, file: !1, line: 494, column: 9)
!4926 = !DILocation(line: 494, column: 9, scope: !1023)
!4927 = !DILocation(line: 495, column: 17, scope: !4925)
!4928 = !DILocation(line: 489, column: 15, scope: !1023)
!4929 = !DILocation(line: 495, column: 9, scope: !4925)
!4930 = !DILocation(line: 498, column: 5, scope: !1023)
!4931 = !DILocation(line: 499, column: 17, scope: !1023)
!4932 = !DILocation(line: 500, column: 5, scope: !1023)
!4933 = !DILocation(line: 501, column: 1, scope: !1023)
!4934 = !DILocation(line: 576, column: 40, scope: !1038)
!4935 = !DILocation(line: 578, column: 5, scope: !4936)
!4936 = !DILexicalBlockFile(scope: !1056, file: !1, discriminator: 1)
!4937 = !DILocation(line: 578, column: 5, scope: !4938)
!4938 = !DILexicalBlockFile(scope: !4939, file: !1, discriminator: 2)
!4939 = distinct !DILexicalBlock(scope: !1056, file: !1, line: 578, column: 5)
!4940 = !DILocation(line: 578, column: 5, scope: !4941)
!4941 = !DILexicalBlockFile(scope: !1056, file: !1, discriminator: 4)
!4942 = !DILocation(line: 569, column: 38, scope: !1068, inlinedAt: !4943)
!4943 = distinct !DILocation(line: 579, column: 5, scope: !1038)
!4944 = !DILocation(line: 571, column: 5, scope: !4945, inlinedAt: !4943)
!4945 = !DILexicalBlockFile(scope: !1074, file: !1, discriminator: 1)
!4946 = !DILocation(line: 571, column: 5, scope: !1078, inlinedAt: !4943)
!4947 = !DILocation(line: 571, column: 5, scope: !1074, inlinedAt: !4943)
!4948 = !DILocation(line: 571, column: 5, scope: !4949, inlinedAt: !4943)
!4949 = !DILexicalBlockFile(scope: !1077, file: !1, discriminator: 2)
!4950 = !DILocation(line: 571, column: 5, scope: !4951, inlinedAt: !4943)
!4951 = !DILexicalBlockFile(scope: !1076, file: !1, discriminator: 4)
!4952 = !DILocation(line: 571, column: 5, scope: !4953, inlinedAt: !4943)
!4953 = distinct !DILexicalBlock(scope: !1076, file: !1, line: 571, column: 5)
!4954 = !DILocation(line: 571, column: 5, scope: !1076, inlinedAt: !4943)
!4955 = !DILocation(line: 571, column: 5, scope: !4956, inlinedAt: !4943)
!4956 = !DILexicalBlockFile(scope: !4953, file: !1, discriminator: 6)
!4957 = !DILocation(line: 579, column: 5, scope: !1038)
!4958 = !DILocation(line: 572, column: 32, scope: !1068, inlinedAt: !4943)
!4959 = !DILocation(line: 572, column: 12, scope: !1068, inlinedAt: !4943)
!4960 = !DILocation(line: 580, column: 5, scope: !1038)
!4961 = !DILocation(line: 580, column: 20, scope: !1038)
!4962 = !DILocation(line: 580, column: 28, scope: !1038)
!4963 = !DILocation(line: 581, column: 1, scope: !1038)
!4964 = !DILocation(line: 584, column: 41, scope: !1057)
!4965 = !DILocation(line: 584, column: 57, scope: !1057)
!4966 = !DILocation(line: 584, column: 70, scope: !1057)
!4967 = !DILocation(line: 586, column: 5, scope: !4968)
!4968 = !DILexicalBlockFile(scope: !1066, file: !1, discriminator: 1)
!4969 = !DILocation(line: 586, column: 5, scope: !1067)
!4970 = !DILocation(line: 586, column: 5, scope: !4971)
!4971 = !DILexicalBlockFile(scope: !1065, file: !1, discriminator: 2)
!4972 = !DILocation(line: 586, column: 5, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !1065, file: !1, line: 586, column: 5)
!4974 = !DILocation(line: 95, column: 63, scope: !873, inlinedAt: !4975)
!4975 = distinct !DILocation(line: 587, column: 12, scope: !1057)
!4976 = !DILocation(line: 95, column: 76, scope: !873, inlinedAt: !4975)
!4977 = !DILocation(line: 97, column: 5, scope: !4472, inlinedAt: !4975)
!4978 = !DILocation(line: 97, column: 5, scope: !883, inlinedAt: !4975)
!4979 = !DILocation(line: 97, column: 5, scope: !4475, inlinedAt: !4975)
!4980 = !DILocation(line: 97, column: 5, scope: !4477, inlinedAt: !4975)
!4981 = !DILocation(line: 587, column: 12, scope: !1057)
!4982 = !DILocation(line: 98, column: 5, scope: !4479, inlinedAt: !4975)
!4983 = !DILocation(line: 98, column: 5, scope: !887, inlinedAt: !4975)
!4984 = !DILocation(line: 98, column: 5, scope: !4482, inlinedAt: !4975)
!4985 = !DILocation(line: 98, column: 5, scope: !4484, inlinedAt: !4975)
!4986 = !DILocation(line: 99, column: 5, scope: !4486, inlinedAt: !4975)
!4987 = !DILocation(line: 99, column: 5, scope: !891, inlinedAt: !4975)
!4988 = !DILocation(line: 99, column: 5, scope: !4489, inlinedAt: !4975)
!4989 = !DILocation(line: 99, column: 5, scope: !4491, inlinedAt: !4975)
!4990 = !DILocation(line: 100, column: 5, scope: !4493, inlinedAt: !4975)
!4991 = !DILocation(line: 100, column: 5, scope: !895, inlinedAt: !4975)
!4992 = !DILocation(line: 100, column: 5, scope: !4496, inlinedAt: !4975)
!4993 = !DILocation(line: 100, column: 5, scope: !4498, inlinedAt: !4975)
!4994 = !DILocation(line: 101, column: 5, scope: !4500, inlinedAt: !4975)
!4995 = !DILocation(line: 101, column: 5, scope: !899, inlinedAt: !4975)
!4996 = !DILocation(line: 101, column: 5, scope: !4503, inlinedAt: !4975)
!4997 = !DILocation(line: 101, column: 5, scope: !4505, inlinedAt: !4975)
!4998 = !DILocation(line: 102, column: 5, scope: !873, inlinedAt: !4975)
!4999 = !DILocation(line: 588, column: 1, scope: !1057)
!5000 = !DILocation(line: 569, column: 38, scope: !1068)
!5001 = !DILocation(line: 571, column: 5, scope: !4945)
!5002 = !DILocation(line: 571, column: 5, scope: !1078)
!5003 = !DILocation(line: 571, column: 5, scope: !1074)
!5004 = !DILocation(line: 571, column: 5, scope: !4949)
!5005 = !DILocation(line: 571, column: 5, scope: !4951)
!5006 = !DILocation(line: 571, column: 5, scope: !4953)
!5007 = !DILocation(line: 571, column: 5, scope: !1076)
!5008 = !DILocation(line: 571, column: 5, scope: !4956)
!5009 = !DILocation(line: 572, column: 32, scope: !1068)
!5010 = !DILocation(line: 572, column: 12, scope: !1068)
!5011 = !DILocation(line: 572, column: 5, scope: !1068)
!5012 = !DILocation(line: 550, column: 37, scope: !1079)
!5013 = !DILocation(line: 550, column: 53, scope: !1079)
!5014 = !DILocation(line: 550, column: 69, scope: !1079)
!5015 = !DILocation(line: 552, column: 23, scope: !1079)
!5016 = !DILocation(line: 552, column: 16, scope: !1079)
!5017 = !DILocation(line: 60, column: 59, scope: !1785, inlinedAt: !5018)
!5018 = distinct !DILocation(line: 554, column: 9, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !1079, file: !1, line: 554, column: 9)
!5020 = !DILocation(line: 60, column: 75, scope: !1785, inlinedAt: !5018)
!5021 = !DILocation(line: 64, column: 28, scope: !4128, inlinedAt: !5018)
!5022 = !DILocation(line: 64, column: 43, scope: !4128, inlinedAt: !5018)
!5023 = !DILocation(line: 64, column: 10, scope: !4128, inlinedAt: !5018)
!5024 = !DILocation(line: 64, column: 9, scope: !1785, inlinedAt: !5018)
!5025 = !DILocation(line: 67, column: 17, scope: !1785, inlinedAt: !5018)
!5026 = !DILocation(line: 62, column: 15, scope: !1785, inlinedAt: !5018)
!5027 = !DILocation(line: 68, column: 16, scope: !1785, inlinedAt: !5018)
!5028 = !DILocation(line: 69, column: 5, scope: !1785, inlinedAt: !5018)
!5029 = !DILocation(line: 70, column: 5, scope: !4138, inlinedAt: !5018)
!5030 = !DILocation(line: 70, column: 5, scope: !1797, inlinedAt: !5018)
!5031 = !DILocation(line: 70, column: 5, scope: !1794, inlinedAt: !5018)
!5032 = !DILocation(line: 70, column: 5, scope: !4142, inlinedAt: !5018)
!5033 = !DILocation(line: 70, column: 5, scope: !4144, inlinedAt: !5018)
!5034 = !DILocation(line: 70, column: 5, scope: !1796, inlinedAt: !5018)
!5035 = !DILocation(line: 70, column: 5, scope: !4147, inlinedAt: !5018)
!5036 = !DILocation(line: 554, column: 9, scope: !5019)
!5037 = !DILocation(line: 557, column: 14, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !1079, file: !1, line: 557, column: 9)
!5039 = !DILocation(line: 557, column: 9, scope: !1079)
!5040 = !DILocation(line: 559, column: 5, scope: !5041)
!5041 = !DILexicalBlockFile(scope: !1088, file: !1, discriminator: 1)
!5042 = !DILocation(line: 559, column: 5, scope: !1092)
!5043 = !DILocation(line: 559, column: 5, scope: !1088)
!5044 = !DILocation(line: 559, column: 5, scope: !5045)
!5045 = !DILexicalBlockFile(scope: !1091, file: !1, discriminator: 2)
!5046 = !DILocation(line: 559, column: 5, scope: !5047)
!5047 = !DILexicalBlockFile(scope: !1090, file: !1, discriminator: 4)
!5048 = !DILocation(line: 559, column: 5, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !1090, file: !1, line: 559, column: 5)
!5050 = !DILocation(line: 559, column: 5, scope: !1090)
!5051 = !DILocation(line: 559, column: 5, scope: !5052)
!5052 = !DILexicalBlockFile(scope: !5049, file: !1, discriminator: 6)
!5053 = !DILocation(line: 560, column: 14, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !1079, file: !1, line: 560, column: 9)
!5055 = !DILocation(line: 560, column: 9, scope: !1079)
!5056 = !DILocation(line: 561, column: 22, scope: !5054)
!5057 = !DILocation(line: 561, column: 9, scope: !5054)
!5058 = !DILocation(line: 561, column: 20, scope: !5054)
!5059 = !DILocation(line: 564, column: 5, scope: !1079)
!5060 = !DILocation(line: 565, column: 5, scope: !1079)
!5061 = !DILocation(line: 566, column: 1, scope: !1079)
!5062 = !DILocation(line: 660, column: 42, scope: !1093)
!5063 = !DILocation(line: 662, column: 5, scope: !5064)
!5064 = !DILexicalBlockFile(scope: !1113, file: !1, discriminator: 1)
!5065 = !DILocation(line: 662, column: 5, scope: !5066)
!5066 = !DILexicalBlockFile(scope: !5067, file: !1, discriminator: 2)
!5067 = distinct !DILexicalBlock(scope: !1113, file: !1, line: 662, column: 5)
!5068 = !DILocation(line: 662, column: 5, scope: !5069)
!5069 = !DILexicalBlockFile(scope: !1113, file: !1, discriminator: 4)
!5070 = !DILocation(line: 651, column: 40, scope: !1138, inlinedAt: !5071)
!5071 = distinct !DILocation(line: 663, column: 5, scope: !1093)
!5072 = !DILocation(line: 653, column: 5, scope: !5073, inlinedAt: !5071)
!5073 = !DILexicalBlockFile(scope: !1144, file: !1, discriminator: 1)
!5074 = !{!5075, !1985, i64 64}
!5075 = !{!"", !1981, i64 0, !1985, i64 16, !1985, i64 24, !1985, i64 32, !1985, i64 40, !1985, i64 48, !1983, i64 56, !1985, i64 64, !1985, i64 72, !1985, i64 80}
!5076 = !DILocation(line: 653, column: 5, scope: !1148, inlinedAt: !5071)
!5077 = !DILocation(line: 653, column: 5, scope: !1144, inlinedAt: !5071)
!5078 = !DILocation(line: 653, column: 5, scope: !5079, inlinedAt: !5071)
!5079 = !DILexicalBlockFile(scope: !1147, file: !1, discriminator: 2)
!5080 = !DILocation(line: 653, column: 5, scope: !5081, inlinedAt: !5071)
!5081 = !DILexicalBlockFile(scope: !1146, file: !1, discriminator: 4)
!5082 = !DILocation(line: 653, column: 5, scope: !5083, inlinedAt: !5071)
!5083 = distinct !DILexicalBlock(scope: !1146, file: !1, line: 653, column: 5)
!5084 = !DILocation(line: 653, column: 5, scope: !1146, inlinedAt: !5071)
!5085 = !DILocation(line: 653, column: 5, scope: !5086, inlinedAt: !5071)
!5086 = !DILexicalBlockFile(scope: !5083, file: !1, discriminator: 6)
!5087 = !DILocation(line: 663, column: 5, scope: !1093)
!5088 = !DILocation(line: 654, column: 5, scope: !5089, inlinedAt: !5071)
!5089 = !DILexicalBlockFile(scope: !1150, file: !1, discriminator: 1)
!5090 = !{!5075, !1985, i64 72}
!5091 = !DILocation(line: 654, column: 5, scope: !1154, inlinedAt: !5071)
!5092 = !DILocation(line: 654, column: 5, scope: !1150, inlinedAt: !5071)
!5093 = !DILocation(line: 654, column: 5, scope: !5094, inlinedAt: !5071)
!5094 = !DILexicalBlockFile(scope: !1153, file: !1, discriminator: 2)
!5095 = !DILocation(line: 654, column: 5, scope: !5096, inlinedAt: !5071)
!5096 = !DILexicalBlockFile(scope: !1152, file: !1, discriminator: 4)
!5097 = !DILocation(line: 654, column: 5, scope: !5098, inlinedAt: !5071)
!5098 = distinct !DILexicalBlock(scope: !1152, file: !1, line: 654, column: 5)
!5099 = !DILocation(line: 654, column: 5, scope: !1152, inlinedAt: !5071)
!5100 = !DILocation(line: 654, column: 5, scope: !5101, inlinedAt: !5071)
!5101 = !DILexicalBlockFile(scope: !5098, file: !1, discriminator: 6)
!5102 = !DILocation(line: 655, column: 5, scope: !5103, inlinedAt: !5071)
!5103 = !DILexicalBlockFile(scope: !1156, file: !1, discriminator: 1)
!5104 = !{!5075, !1985, i64 80}
!5105 = !DILocation(line: 655, column: 5, scope: !1160, inlinedAt: !5071)
!5106 = !DILocation(line: 655, column: 5, scope: !1156, inlinedAt: !5071)
!5107 = !DILocation(line: 655, column: 5, scope: !5108, inlinedAt: !5071)
!5108 = !DILexicalBlockFile(scope: !1159, file: !1, discriminator: 2)
!5109 = !DILocation(line: 655, column: 5, scope: !5110, inlinedAt: !5071)
!5110 = !DILexicalBlockFile(scope: !1158, file: !1, discriminator: 4)
!5111 = !DILocation(line: 655, column: 5, scope: !5112, inlinedAt: !5071)
!5112 = distinct !DILexicalBlock(scope: !1158, file: !1, line: 655, column: 5)
!5113 = !DILocation(line: 655, column: 5, scope: !1158, inlinedAt: !5071)
!5114 = !DILocation(line: 655, column: 5, scope: !5115, inlinedAt: !5071)
!5115 = !DILexicalBlockFile(scope: !5112, file: !1, discriminator: 6)
!5116 = !DILocation(line: 656, column: 32, scope: !1138, inlinedAt: !5071)
!5117 = !DILocation(line: 656, column: 12, scope: !1138, inlinedAt: !5071)
!5118 = !DILocation(line: 664, column: 5, scope: !1093)
!5119 = !DILocation(line: 664, column: 20, scope: !1093)
!5120 = !DILocation(line: 664, column: 28, scope: !1093)
!5121 = !DILocation(line: 665, column: 1, scope: !1093)
!5122 = !DILocation(line: 677, column: 38, scope: !1114)
!5123 = !DILocation(line: 679, column: 15, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !1114, file: !1, line: 679, column: 9)
!5125 = !DILocation(line: 681, column: 22, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5124, file: !1, line: 679, column: 55)
!5127 = !DILocation(line: 679, column: 9, scope: !5124)
!5128 = !DILocation(line: 679, column: 19, scope: !5124)
!5129 = !DILocation(line: 679, column: 22, scope: !5130)
!5130 = !DILexicalBlockFile(scope: !5124, file: !1, discriminator: 1)
!5131 = !DILocation(line: 679, column: 9, scope: !1114)
!5132 = !DILocation(line: 680, column: 9, scope: !5126)
!5133 = !DILocation(line: 681, column: 9, scope: !5126)
!5134 = !DILocation(line: 108, column: 13, scope: !870, inlinedAt: !5135)
!5135 = distinct !DILocation(line: 684, column: 16, scope: !5136)
!5136 = distinct !DILexicalBlock(scope: !5124, file: !1, line: 683, column: 10)
!5137 = !DILocation(line: 108, column: 5, scope: !870, inlinedAt: !5135)
!5138 = !DILocation(line: 110, column: 16, scope: !4460, inlinedAt: !5135)
!5139 = !DILocation(line: 110, column: 9, scope: !4460, inlinedAt: !5135)
!5140 = !DILocation(line: 112, column: 29, scope: !4460, inlinedAt: !5135)
!5141 = !DILocation(line: 112, column: 16, scope: !4460, inlinedAt: !5135)
!5142 = !DILocation(line: 112, column: 9, scope: !4460, inlinedAt: !5135)
!5143 = !DILocation(line: 114, column: 16, scope: !4460, inlinedAt: !5135)
!5144 = !DILocation(line: 114, column: 9, scope: !4460, inlinedAt: !5135)
!5145 = !DILocation(line: 686, column: 1, scope: !1114)
!5146 = !DILocation(line: 668, column: 43, scope: !1119)
!5147 = !DILocation(line: 668, column: 59, scope: !1119)
!5148 = !DILocation(line: 668, column: 72, scope: !1119)
!5149 = !DILocation(line: 670, column: 5, scope: !5150)
!5150 = !DILexicalBlockFile(scope: !1128, file: !1, discriminator: 1)
!5151 = !DILocation(line: 670, column: 5, scope: !1129)
!5152 = !DILocation(line: 670, column: 5, scope: !5153)
!5153 = !DILexicalBlockFile(scope: !1127, file: !1, discriminator: 2)
!5154 = !DILocation(line: 670, column: 5, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !1127, file: !1, line: 670, column: 5)
!5156 = !DILocation(line: 671, column: 5, scope: !5157)
!5157 = !DILexicalBlockFile(scope: !1132, file: !1, discriminator: 1)
!5158 = !DILocation(line: 671, column: 5, scope: !1133)
!5159 = !DILocation(line: 671, column: 5, scope: !5160)
!5160 = !DILexicalBlockFile(scope: !1131, file: !1, discriminator: 2)
!5161 = !DILocation(line: 671, column: 5, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !1131, file: !1, line: 671, column: 5)
!5163 = !DILocation(line: 672, column: 5, scope: !5164)
!5164 = !DILexicalBlockFile(scope: !1136, file: !1, discriminator: 1)
!5165 = !DILocation(line: 672, column: 5, scope: !1137)
!5166 = !DILocation(line: 672, column: 5, scope: !5167)
!5167 = !DILexicalBlockFile(scope: !1135, file: !1, discriminator: 2)
!5168 = !DILocation(line: 672, column: 5, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !1135, file: !1, line: 672, column: 5)
!5170 = !DILocation(line: 95, column: 63, scope: !873, inlinedAt: !5171)
!5171 = distinct !DILocation(line: 673, column: 12, scope: !1119)
!5172 = !DILocation(line: 95, column: 76, scope: !873, inlinedAt: !5171)
!5173 = !DILocation(line: 97, column: 5, scope: !4472, inlinedAt: !5171)
!5174 = !DILocation(line: 97, column: 5, scope: !883, inlinedAt: !5171)
!5175 = !DILocation(line: 97, column: 5, scope: !4475, inlinedAt: !5171)
!5176 = !DILocation(line: 97, column: 5, scope: !4477, inlinedAt: !5171)
!5177 = !DILocation(line: 673, column: 12, scope: !1119)
!5178 = !DILocation(line: 98, column: 5, scope: !4479, inlinedAt: !5171)
!5179 = !DILocation(line: 98, column: 5, scope: !887, inlinedAt: !5171)
!5180 = !DILocation(line: 98, column: 5, scope: !4482, inlinedAt: !5171)
!5181 = !DILocation(line: 98, column: 5, scope: !4484, inlinedAt: !5171)
!5182 = !DILocation(line: 99, column: 5, scope: !4486, inlinedAt: !5171)
!5183 = !DILocation(line: 99, column: 5, scope: !891, inlinedAt: !5171)
!5184 = !DILocation(line: 99, column: 5, scope: !4489, inlinedAt: !5171)
!5185 = !DILocation(line: 99, column: 5, scope: !4491, inlinedAt: !5171)
!5186 = !DILocation(line: 100, column: 5, scope: !4493, inlinedAt: !5171)
!5187 = !DILocation(line: 100, column: 5, scope: !895, inlinedAt: !5171)
!5188 = !DILocation(line: 100, column: 5, scope: !4496, inlinedAt: !5171)
!5189 = !DILocation(line: 100, column: 5, scope: !4498, inlinedAt: !5171)
!5190 = !DILocation(line: 101, column: 5, scope: !4500, inlinedAt: !5171)
!5191 = !DILocation(line: 101, column: 5, scope: !899, inlinedAt: !5171)
!5192 = !DILocation(line: 101, column: 5, scope: !4503, inlinedAt: !5171)
!5193 = !DILocation(line: 101, column: 5, scope: !4505, inlinedAt: !5171)
!5194 = !DILocation(line: 102, column: 5, scope: !873, inlinedAt: !5171)
!5195 = !DILocation(line: 674, column: 1, scope: !1119)
!5196 = !DILocation(line: 651, column: 40, scope: !1138)
!5197 = !DILocation(line: 653, column: 5, scope: !5073)
!5198 = !DILocation(line: 653, column: 5, scope: !1148)
!5199 = !DILocation(line: 653, column: 5, scope: !1144)
!5200 = !DILocation(line: 653, column: 5, scope: !5079)
!5201 = !DILocation(line: 653, column: 5, scope: !5081)
!5202 = !DILocation(line: 653, column: 5, scope: !5083)
!5203 = !DILocation(line: 653, column: 5, scope: !1146)
!5204 = !DILocation(line: 653, column: 5, scope: !5086)
!5205 = !DILocation(line: 654, column: 5, scope: !5089)
!5206 = !DILocation(line: 654, column: 5, scope: !1154)
!5207 = !DILocation(line: 654, column: 5, scope: !1150)
!5208 = !DILocation(line: 654, column: 5, scope: !5094)
!5209 = !DILocation(line: 654, column: 5, scope: !5096)
!5210 = !DILocation(line: 654, column: 5, scope: !5098)
!5211 = !DILocation(line: 654, column: 5, scope: !1152)
!5212 = !DILocation(line: 654, column: 5, scope: !5101)
!5213 = !DILocation(line: 655, column: 5, scope: !5103)
!5214 = !DILocation(line: 655, column: 5, scope: !1160)
!5215 = !DILocation(line: 655, column: 5, scope: !1156)
!5216 = !DILocation(line: 655, column: 5, scope: !5108)
!5217 = !DILocation(line: 655, column: 5, scope: !5110)
!5218 = !DILocation(line: 655, column: 5, scope: !5112)
!5219 = !DILocation(line: 655, column: 5, scope: !1158)
!5220 = !DILocation(line: 655, column: 5, scope: !5115)
!5221 = !DILocation(line: 656, column: 32, scope: !1138)
!5222 = !DILocation(line: 656, column: 12, scope: !1138)
!5223 = !DILocation(line: 656, column: 5, scope: !1138)
!5224 = !DILocation(line: 612, column: 39, scope: !1161)
!5225 = !DILocation(line: 612, column: 55, scope: !1161)
!5226 = !DILocation(line: 612, column: 71, scope: !1161)
!5227 = !DILocation(line: 614, column: 5, scope: !1161)
!5228 = !DILocation(line: 614, column: 15, scope: !1161)
!5229 = !DILocation(line: 615, column: 15, scope: !1161)
!5230 = !DILocation(line: 616, column: 15, scope: !1161)
!5231 = !DILocation(line: 631, column: 9, scope: !1177)
!5232 = !DILocation(line: 631, column: 9, scope: !1161)
!5233 = !DILocation(line: 632, column: 9, scope: !1175)
!5234 = !DILocation(line: 632, column: 9, scope: !1174)
!5235 = !DILocation(line: 632, column: 9, scope: !5236)
!5236 = !DILexicalBlockFile(scope: !1172, file: !1, discriminator: 2)
!5237 = !DILocation(line: 632, column: 9, scope: !1181)
!5238 = !DILocation(line: 632, column: 9, scope: !1172)
!5239 = !DILocation(line: 632, column: 9, scope: !5240)
!5240 = !DILexicalBlockFile(scope: !1180, file: !1, discriminator: 3)
!5241 = !DILocation(line: 632, column: 9, scope: !5242)
!5242 = !DILexicalBlockFile(scope: !1179, file: !1, discriminator: 5)
!5243 = !DILocation(line: 632, column: 9, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !1179, file: !1, line: 632, column: 9)
!5245 = !DILocation(line: 632, column: 9, scope: !1179)
!5246 = !DILocation(line: 632, column: 9, scope: !5247)
!5247 = !DILexicalBlockFile(scope: !5244, file: !1, discriminator: 7)
!5248 = !DILocation(line: 632, column: 9, scope: !5249)
!5249 = !DILexicalBlockFile(scope: !1173, file: !1, discriminator: 13)
!5250 = !DILocation(line: 632, column: 9, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !1173, file: !1, line: 632, column: 9)
!5252 = !DILocation(line: 632, column: 9, scope: !1173)
!5253 = !DILocation(line: 633, column: 9, scope: !1186)
!5254 = !DILocation(line: 633, column: 9, scope: !1185)
!5255 = !DILocation(line: 633, column: 9, scope: !5256)
!5256 = !DILexicalBlockFile(scope: !1183, file: !1, discriminator: 2)
!5257 = !DILocation(line: 633, column: 9, scope: !1190)
!5258 = !DILocation(line: 633, column: 9, scope: !1183)
!5259 = !DILocation(line: 633, column: 9, scope: !5260)
!5260 = !DILexicalBlockFile(scope: !1189, file: !1, discriminator: 3)
!5261 = !DILocation(line: 633, column: 9, scope: !5262)
!5262 = !DILexicalBlockFile(scope: !1188, file: !1, discriminator: 5)
!5263 = !DILocation(line: 633, column: 9, scope: !5264)
!5264 = distinct !DILexicalBlock(scope: !1188, file: !1, line: 633, column: 9)
!5265 = !DILocation(line: 633, column: 9, scope: !1188)
!5266 = !DILocation(line: 633, column: 9, scope: !5267)
!5267 = !DILexicalBlockFile(scope: !5264, file: !1, discriminator: 7)
!5268 = !DILocation(line: 633, column: 9, scope: !5269)
!5269 = !DILexicalBlockFile(scope: !1184, file: !1, discriminator: 13)
!5270 = !DILocation(line: 633, column: 9, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !1184, file: !1, line: 633, column: 9)
!5272 = !DILocation(line: 633, column: 9, scope: !1184)
!5273 = !DILocation(line: 60, column: 59, scope: !1785, inlinedAt: !5274)
!5274 = distinct !DILocation(line: 636, column: 9, scope: !5275)
!5275 = distinct !DILexicalBlock(scope: !1161, file: !1, line: 636, column: 9)
!5276 = !DILocation(line: 60, column: 75, scope: !1785, inlinedAt: !5274)
!5277 = !DILocation(line: 64, column: 28, scope: !4128, inlinedAt: !5274)
!5278 = !DILocation(line: 64, column: 43, scope: !4128, inlinedAt: !5274)
!5279 = !DILocation(line: 64, column: 10, scope: !4128, inlinedAt: !5274)
!5280 = !DILocation(line: 64, column: 9, scope: !1785, inlinedAt: !5274)
!5281 = !DILocation(line: 67, column: 17, scope: !1785, inlinedAt: !5274)
!5282 = !DILocation(line: 62, column: 15, scope: !1785, inlinedAt: !5274)
!5283 = !DILocation(line: 68, column: 16, scope: !1785, inlinedAt: !5274)
!5284 = !DILocation(line: 69, column: 5, scope: !1785, inlinedAt: !5274)
!5285 = !DILocation(line: 70, column: 5, scope: !4138, inlinedAt: !5274)
!5286 = !DILocation(line: 70, column: 5, scope: !1797, inlinedAt: !5274)
!5287 = !DILocation(line: 70, column: 5, scope: !1794, inlinedAt: !5274)
!5288 = !DILocation(line: 70, column: 5, scope: !4142, inlinedAt: !5274)
!5289 = !DILocation(line: 70, column: 5, scope: !4144, inlinedAt: !5274)
!5290 = !DILocation(line: 70, column: 5, scope: !1796, inlinedAt: !5274)
!5291 = !DILocation(line: 70, column: 5, scope: !4147, inlinedAt: !5274)
!5292 = !DILocation(line: 636, column: 9, scope: !5275)
!5293 = !DILocation(line: 638, column: 9, scope: !5294)
!5294 = distinct !DILexicalBlock(scope: !1161, file: !1, line: 638, column: 9)
!5295 = !DILocation(line: 638, column: 32, scope: !5294)
!5296 = !DILocation(line: 638, column: 9, scope: !1161)
!5297 = !DILocation(line: 640, column: 10, scope: !5298)
!5298 = distinct !DILexicalBlock(scope: !1161, file: !1, line: 640, column: 9)
!5299 = !DILocation(line: 640, column: 9, scope: !1161)
!5300 = !DILocation(line: 643, column: 5, scope: !5301)
!5301 = !DILexicalBlockFile(scope: !1192, file: !1, discriminator: 1)
!5302 = !DILocation(line: 643, column: 5, scope: !1196)
!5303 = !DILocation(line: 643, column: 5, scope: !1192)
!5304 = !DILocation(line: 643, column: 5, scope: !5305)
!5305 = !DILexicalBlockFile(scope: !1195, file: !1, discriminator: 2)
!5306 = !DILocation(line: 643, column: 5, scope: !5307)
!5307 = !DILexicalBlockFile(scope: !1194, file: !1, discriminator: 4)
!5308 = !DILocation(line: 643, column: 5, scope: !5309)
!5309 = distinct !DILexicalBlock(scope: !1194, file: !1, line: 643, column: 5)
!5310 = !DILocation(line: 643, column: 5, scope: !1194)
!5311 = !DILocation(line: 643, column: 5, scope: !5312)
!5312 = !DILexicalBlockFile(scope: !5309, file: !1, discriminator: 6)
!5313 = !DILocation(line: 644, column: 17, scope: !1161)
!5314 = !DILocation(line: 644, column: 15, scope: !1161)
!5315 = !DILocation(line: 645, column: 5, scope: !1161)
!5316 = !DILocation(line: 647, column: 5, scope: !1161)
!5317 = !DILocation(line: 648, column: 1, scope: !1161)
!5318 = !DILocation(line: 1008, column: 34, scope: !1197)
!5319 = !DILocation(line: 1010, column: 5, scope: !5320)
!5320 = !DILexicalBlockFile(scope: !1203, file: !1, discriminator: 1)
!5321 = !DILocation(line: 1010, column: 5, scope: !5322)
!5322 = !DILexicalBlockFile(scope: !5323, file: !1, discriminator: 2)
!5323 = distinct !DILexicalBlock(scope: !1203, file: !1, line: 1010, column: 5)
!5324 = !DILocation(line: 1010, column: 5, scope: !5325)
!5325 = !DILexicalBlockFile(scope: !1203, file: !1, discriminator: 4)
!5326 = !DILocation(line: 1011, column: 5, scope: !1197)
!5327 = !DILocation(line: 1012, column: 5, scope: !1197)
!5328 = !DILocation(line: 1012, column: 20, scope: !1197)
!5329 = !DILocation(line: 1012, column: 28, scope: !1197)
!5330 = !DILocation(line: 1013, column: 1, scope: !1197)
!5331 = !DILocation(line: 1030, column: 30, scope: !1204)
!5332 = !DILocation(line: 1054, column: 15, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !1204, file: !1, line: 1054, column: 9)
!5334 = !{!5335, !1985, i64 80}
!5335 = !{!"", !1981, i64 0, !1985, i64 16, !1985, i64 24, !1985, i64 32, !1985, i64 40, !1985, i64 48, !1983, i64 56, !1985, i64 64, !1985, i64 72, !1985, i64 80, !1985, i64 88, !1982, i64 96}
!5336 = !DILocation(line: 1054, column: 9, scope: !5333)
!5337 = !DILocation(line: 1054, column: 9, scope: !1204)
!5338 = !DILocation(line: 1055, column: 19, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5340, file: !1, line: 1055, column: 13)
!5340 = distinct !DILexicalBlock(scope: !5333, file: !1, line: 1054, column: 25)
!5341 = !{!5335, !1985, i64 88}
!5342 = !DILocation(line: 1055, column: 13, scope: !5339)
!5343 = !DILocation(line: 1057, column: 41, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !5339, file: !1, line: 1055, column: 30)
!5345 = !{!5335, !1985, i64 64}
!5346 = !DILocation(line: 1063, column: 41, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5339, file: !1, line: 1061, column: 16)
!5348 = !DILocation(line: 1064, column: 41, scope: !5347)
!5349 = !{!5335, !1985, i64 72}
!5350 = !DILocation(line: 1055, column: 13, scope: !5340)
!5351 = !DILocation(line: 1056, column: 20, scope: !5344)
!5352 = !DILocation(line: 1056, column: 13, scope: !5344)
!5353 = !DILocation(line: 1062, column: 20, scope: !5347)
!5354 = !DILocation(line: 1062, column: 13, scope: !5347)
!5355 = !DILocation(line: 1068, column: 15, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !1204, file: !1, line: 1068, column: 9)
!5357 = !DILocation(line: 1068, column: 9, scope: !5356)
!5358 = !DILocation(line: 1068, column: 23, scope: !5356)
!5359 = !DILocation(line: 1068, column: 32, scope: !5356)
!5360 = !DILocation(line: 1068, column: 26, scope: !5356)
!5361 = !DILocation(line: 1068, column: 9, scope: !1204)
!5362 = !DILocation(line: 1069, column: 16, scope: !5356)
!5363 = !DILocation(line: 1069, column: 9, scope: !5356)
!5364 = !DILocation(line: 108, column: 13, scope: !870, inlinedAt: !5365)
!5365 = distinct !DILocation(line: 1072, column: 12, scope: !1204)
!5366 = !DILocation(line: 108, column: 5, scope: !870, inlinedAt: !5365)
!5367 = !DILocation(line: 110, column: 16, scope: !4460, inlinedAt: !5365)
!5368 = !DILocation(line: 110, column: 9, scope: !4460, inlinedAt: !5365)
!5369 = !DILocation(line: 112, column: 29, scope: !4460, inlinedAt: !5365)
!5370 = !DILocation(line: 112, column: 16, scope: !4460, inlinedAt: !5365)
!5371 = !DILocation(line: 112, column: 9, scope: !4460, inlinedAt: !5365)
!5372 = !DILocation(line: 114, column: 16, scope: !4460, inlinedAt: !5365)
!5373 = !DILocation(line: 114, column: 9, scope: !4460, inlinedAt: !5365)
!5374 = !DILocation(line: 1073, column: 1, scope: !1204)
!5375 = !DILocation(line: 1016, column: 35, scope: !1209)
!5376 = !DILocation(line: 1016, column: 51, scope: !1209)
!5377 = !DILocation(line: 1017, column: 15, scope: !1209)
!5378 = !DILocation(line: 1019, column: 5, scope: !5379)
!5379 = !DILexicalBlockFile(scope: !1218, file: !1, discriminator: 1)
!5380 = !DILocation(line: 1019, column: 5, scope: !1219)
!5381 = !DILocation(line: 1019, column: 5, scope: !5382)
!5382 = !DILexicalBlockFile(scope: !1217, file: !1, discriminator: 2)
!5383 = !DILocation(line: 1019, column: 5, scope: !5384)
!5384 = distinct !DILexicalBlock(scope: !1217, file: !1, line: 1019, column: 5)
!5385 = !DILocation(line: 1020, column: 5, scope: !5386)
!5386 = !DILexicalBlockFile(scope: !1222, file: !1, discriminator: 1)
!5387 = !DILocation(line: 1020, column: 5, scope: !1223)
!5388 = !DILocation(line: 1020, column: 5, scope: !5389)
!5389 = !DILexicalBlockFile(scope: !1221, file: !1, discriminator: 2)
!5390 = !DILocation(line: 1020, column: 5, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !1221, file: !1, line: 1020, column: 5)
!5392 = !DILocation(line: 1021, column: 5, scope: !5393)
!5393 = !DILexicalBlockFile(scope: !1226, file: !1, discriminator: 1)
!5394 = !DILocation(line: 1021, column: 5, scope: !1227)
!5395 = !DILocation(line: 1021, column: 5, scope: !5396)
!5396 = !DILexicalBlockFile(scope: !1225, file: !1, discriminator: 2)
!5397 = !DILocation(line: 1021, column: 5, scope: !5398)
!5398 = distinct !DILexicalBlock(scope: !1225, file: !1, line: 1021, column: 5)
!5399 = !DILocation(line: 1022, column: 5, scope: !5400)
!5400 = !DILexicalBlockFile(scope: !1230, file: !1, discriminator: 1)
!5401 = !DILocation(line: 1022, column: 5, scope: !1231)
!5402 = !DILocation(line: 1022, column: 5, scope: !5403)
!5403 = !DILexicalBlockFile(scope: !1229, file: !1, discriminator: 2)
!5404 = !DILocation(line: 1022, column: 5, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !1229, file: !1, line: 1022, column: 5)
!5406 = !DILocation(line: 95, column: 63, scope: !873, inlinedAt: !5407)
!5407 = distinct !DILocation(line: 1026, column: 12, scope: !1209)
!5408 = !DILocation(line: 95, column: 76, scope: !873, inlinedAt: !5407)
!5409 = !DILocation(line: 97, column: 5, scope: !4472, inlinedAt: !5407)
!5410 = !DILocation(line: 97, column: 5, scope: !883, inlinedAt: !5407)
!5411 = !DILocation(line: 97, column: 5, scope: !4475, inlinedAt: !5407)
!5412 = !DILocation(line: 97, column: 5, scope: !4477, inlinedAt: !5407)
!5413 = !DILocation(line: 1026, column: 12, scope: !1209)
!5414 = !DILocation(line: 98, column: 5, scope: !4479, inlinedAt: !5407)
!5415 = !DILocation(line: 98, column: 5, scope: !887, inlinedAt: !5407)
!5416 = !DILocation(line: 98, column: 5, scope: !4482, inlinedAt: !5407)
!5417 = !DILocation(line: 98, column: 5, scope: !4484, inlinedAt: !5407)
!5418 = !DILocation(line: 99, column: 5, scope: !4486, inlinedAt: !5407)
!5419 = !DILocation(line: 99, column: 5, scope: !891, inlinedAt: !5407)
!5420 = !DILocation(line: 99, column: 5, scope: !4489, inlinedAt: !5407)
!5421 = !DILocation(line: 99, column: 5, scope: !4491, inlinedAt: !5407)
!5422 = !DILocation(line: 100, column: 5, scope: !4493, inlinedAt: !5407)
!5423 = !DILocation(line: 100, column: 5, scope: !895, inlinedAt: !5407)
!5424 = !DILocation(line: 100, column: 5, scope: !4496, inlinedAt: !5407)
!5425 = !DILocation(line: 100, column: 5, scope: !4498, inlinedAt: !5407)
!5426 = !DILocation(line: 101, column: 5, scope: !4500, inlinedAt: !5407)
!5427 = !DILocation(line: 101, column: 5, scope: !899, inlinedAt: !5407)
!5428 = !DILocation(line: 101, column: 5, scope: !4503, inlinedAt: !5407)
!5429 = !DILocation(line: 101, column: 5, scope: !4505, inlinedAt: !5407)
!5430 = !DILocation(line: 102, column: 5, scope: !873, inlinedAt: !5407)
!5431 = !DILocation(line: 1027, column: 1, scope: !1209)
!5432 = !DILocation(line: 995, column: 32, scope: !1232)
!5433 = !DILocation(line: 997, column: 5, scope: !5434)
!5434 = !DILexicalBlockFile(scope: !1238, file: !1, discriminator: 1)
!5435 = !DILocation(line: 997, column: 5, scope: !1242)
!5436 = !DILocation(line: 997, column: 5, scope: !1238)
!5437 = !DILocation(line: 997, column: 5, scope: !5438)
!5438 = !DILexicalBlockFile(scope: !1241, file: !1, discriminator: 2)
!5439 = !DILocation(line: 997, column: 5, scope: !5440)
!5440 = !DILexicalBlockFile(scope: !1240, file: !1, discriminator: 4)
!5441 = !DILocation(line: 997, column: 5, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !1240, file: !1, line: 997, column: 5)
!5443 = !DILocation(line: 997, column: 5, scope: !1240)
!5444 = !DILocation(line: 997, column: 5, scope: !5445)
!5445 = !DILexicalBlockFile(scope: !5442, file: !1, discriminator: 6)
!5446 = !DILocation(line: 998, column: 5, scope: !5447)
!5447 = !DILexicalBlockFile(scope: !1244, file: !1, discriminator: 1)
!5448 = !DILocation(line: 998, column: 5, scope: !1248)
!5449 = !DILocation(line: 998, column: 5, scope: !1244)
!5450 = !DILocation(line: 998, column: 5, scope: !5451)
!5451 = !DILexicalBlockFile(scope: !1247, file: !1, discriminator: 2)
!5452 = !DILocation(line: 998, column: 5, scope: !5453)
!5453 = !DILexicalBlockFile(scope: !1246, file: !1, discriminator: 4)
!5454 = !DILocation(line: 998, column: 5, scope: !5455)
!5455 = distinct !DILexicalBlock(scope: !1246, file: !1, line: 998, column: 5)
!5456 = !DILocation(line: 998, column: 5, scope: !1246)
!5457 = !DILocation(line: 998, column: 5, scope: !5458)
!5458 = !DILexicalBlockFile(scope: !5455, file: !1, discriminator: 6)
!5459 = !DILocation(line: 999, column: 5, scope: !5460)
!5460 = !DILexicalBlockFile(scope: !1250, file: !1, discriminator: 1)
!5461 = !DILocation(line: 999, column: 5, scope: !1254)
!5462 = !DILocation(line: 999, column: 5, scope: !1250)
!5463 = !DILocation(line: 999, column: 5, scope: !5464)
!5464 = !DILexicalBlockFile(scope: !1253, file: !1, discriminator: 2)
!5465 = !DILocation(line: 999, column: 5, scope: !5466)
!5466 = !DILexicalBlockFile(scope: !1252, file: !1, discriminator: 4)
!5467 = !DILocation(line: 999, column: 5, scope: !5468)
!5468 = distinct !DILexicalBlock(scope: !1252, file: !1, line: 999, column: 5)
!5469 = !DILocation(line: 999, column: 5, scope: !1252)
!5470 = !DILocation(line: 999, column: 5, scope: !5471)
!5471 = !DILexicalBlockFile(scope: !5468, file: !1, discriminator: 6)
!5472 = !DILocation(line: 1000, column: 5, scope: !5473)
!5473 = !DILexicalBlockFile(scope: !1256, file: !1, discriminator: 1)
!5474 = !DILocation(line: 1000, column: 5, scope: !1260)
!5475 = !DILocation(line: 1000, column: 5, scope: !1256)
!5476 = !DILocation(line: 1000, column: 5, scope: !5477)
!5477 = !DILexicalBlockFile(scope: !1259, file: !1, discriminator: 2)
!5478 = !DILocation(line: 1000, column: 5, scope: !5479)
!5479 = !DILexicalBlockFile(scope: !1258, file: !1, discriminator: 4)
!5480 = !DILocation(line: 1000, column: 5, scope: !5481)
!5481 = distinct !DILexicalBlock(scope: !1258, file: !1, line: 1000, column: 5)
!5482 = !DILocation(line: 1000, column: 5, scope: !1258)
!5483 = !DILocation(line: 1000, column: 5, scope: !5484)
!5484 = !DILexicalBlockFile(scope: !5481, file: !1, discriminator: 6)
!5485 = !DILocation(line: 1004, column: 32, scope: !1232)
!5486 = !DILocation(line: 1004, column: 12, scope: !1232)
!5487 = !DILocation(line: 1004, column: 5, scope: !1232)
!5488 = !DILocation(line: 957, column: 31, scope: !1286)
!5489 = !DILocation(line: 957, column: 47, scope: !1286)
!5490 = !DILocation(line: 957, column: 63, scope: !1286)
!5491 = !DILocation(line: 959, column: 5, scope: !1286)
!5492 = !DILocation(line: 959, column: 15, scope: !1286)
!5493 = !DILocation(line: 959, column: 32, scope: !1286)
!5494 = !DILocation(line: 960, column: 5, scope: !1286)
!5495 = !DILocation(line: 960, column: 15, scope: !1286)
!5496 = !DILocation(line: 960, column: 33, scope: !1286)
!5497 = !DILocation(line: 965, column: 27, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !1286, file: !1, line: 965, column: 9)
!5499 = !DILocation(line: 969, column: 28, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !1286, file: !1, line: 969, column: 9)
!5501 = !DILocation(line: 868, column: 32, scope: !1302, inlinedAt: !5502)
!5502 = distinct !DILocation(line: 965, column: 10, scope: !5498)
!5503 = !DILocation(line: 880, column: 15, scope: !5504, inlinedAt: !5502)
!5504 = distinct !DILexicalBlock(scope: !1302, file: !1, line: 880, column: 9)
!5505 = !DILocation(line: 880, column: 23, scope: !5504, inlinedAt: !5502)
!5506 = !DILocation(line: 880, column: 50, scope: !5504, inlinedAt: !5502)
!5507 = !DILocation(line: 881, column: 15, scope: !5504, inlinedAt: !5502)
!5508 = !DILocation(line: 881, column: 22, scope: !5504, inlinedAt: !5502)
!5509 = !DILocation(line: 880, column: 9, scope: !1302, inlinedAt: !5502)
!5510 = !DILocation(line: 969, column: 43, scope: !5500)
!5511 = !DILocation(line: 969, column: 10, scope: !5500)
!5512 = !DILocation(line: 969, column: 9, scope: !1286)
!5513 = !DILocation(line: 972, column: 5, scope: !1286)
!5514 = !DILocation(line: 744, column: 15, scope: !1307, inlinedAt: !5515)
!5515 = distinct !DILocation(line: 973, column: 9, scope: !5516)
!5516 = distinct !DILexicalBlock(scope: !1286, file: !1, line: 973, column: 9)
!5517 = !DILocation(line: 750, column: 5, scope: !1307, inlinedAt: !5515)
!5518 = !DILocation(line: 750, column: 15, scope: !1307, inlinedAt: !5515)
!5519 = !DILocation(line: 751, column: 16, scope: !1307, inlinedAt: !5515)
!5520 = !DILocation(line: 754, column: 13, scope: !1307, inlinedAt: !5515)
!5521 = !DILocation(line: 743, column: 16, scope: !1307, inlinedAt: !5515)
!5522 = !DILocation(line: 756, column: 20, scope: !5523, inlinedAt: !5515)
!5523 = distinct !DILexicalBlock(scope: !1307, file: !1, line: 756, column: 9)
!5524 = !DILocation(line: 757, column: 14, scope: !5525, inlinedAt: !5515)
!5525 = distinct !DILexicalBlock(scope: !5526, file: !1, line: 757, column: 13)
!5526 = distinct !DILexicalBlock(scope: !5523, file: !1, line: 756, column: 35)
!5527 = !DILocation(line: 757, column: 13, scope: !5526, inlinedAt: !5515)
!5528 = !DILocation(line: 980, column: 35, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !1286, file: !1, line: 980, column: 9)
!5530 = !DILocation(line: 980, column: 44, scope: !5529)
!5531 = !DILocation(line: 980, column: 54, scope: !5529)
!5532 = !DILocation(line: 980, column: 64, scope: !5529)
!5533 = !DILocation(line: 797, column: 1, scope: !1307, inlinedAt: !5515)
!5534 = !DILocation(line: 990, column: 5, scope: !5535)
!5535 = !DILexicalBlockFile(scope: !1298, file: !1, discriminator: 1)
!5536 = !DILocation(line: 990, column: 5, scope: !1298)
!5537 = !DILocation(line: 980, column: 9, scope: !5529)
!5538 = !DILocation(line: 980, column: 9, scope: !1286)
!5539 = !DILocation(line: 990, column: 5, scope: !1301)
!5540 = !DILocation(line: 990, column: 5, scope: !5541)
!5541 = !DILexicalBlockFile(scope: !1300, file: !1, discriminator: 4)
!5542 = !DILocation(line: 990, column: 5, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !1300, file: !1, line: 990, column: 5)
!5544 = !DILocation(line: 990, column: 5, scope: !1300)
!5545 = !DILocation(line: 990, column: 5, scope: !5546)
!5546 = !DILexicalBlockFile(scope: !5543, file: !1, discriminator: 6)
!5547 = !DILocation(line: 992, column: 1, scope: !1286)
!5548 = !DILocation(line: 889, column: 27, scope: !1351)
!5549 = !DILocation(line: 889, column: 43, scope: !1351)
!5550 = !DILocation(line: 889, column: 59, scope: !1351)
!5551 = !DILocation(line: 891, column: 22, scope: !1351)
!5552 = !DILocation(line: 892, column: 5, scope: !1351)
!5553 = !DILocation(line: 892, column: 15, scope: !1351)
!5554 = !DILocation(line: 892, column: 32, scope: !1351)
!5555 = !DILocation(line: 893, column: 5, scope: !1351)
!5556 = !DILocation(line: 893, column: 15, scope: !1351)
!5557 = !DILocation(line: 893, column: 33, scope: !1351)
!5558 = !DILocation(line: 898, column: 5, scope: !1351)
!5559 = !DILocation(line: 868, column: 32, scope: !1302, inlinedAt: !5560)
!5560 = distinct !DILocation(line: 900, column: 10, scope: !1367)
!5561 = !DILocation(line: 880, column: 15, scope: !5504, inlinedAt: !5560)
!5562 = !DILocation(line: 880, column: 23, scope: !5504, inlinedAt: !5560)
!5563 = !DILocation(line: 880, column: 50, scope: !5504, inlinedAt: !5560)
!5564 = !DILocation(line: 881, column: 15, scope: !5504, inlinedAt: !5560)
!5565 = !DILocation(line: 881, column: 22, scope: !5504, inlinedAt: !5560)
!5566 = !DILocation(line: 880, column: 9, scope: !1302, inlinedAt: !5560)
!5567 = !DILocation(line: 901, column: 38, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !1366, file: !1, line: 901, column: 13)
!5569 = !DILocation(line: 901, column: 14, scope: !5568)
!5570 = !DILocation(line: 901, column: 13, scope: !1366)
!5571 = !DILocation(line: 744, column: 15, scope: !1307, inlinedAt: !5572)
!5572 = distinct !DILocation(line: 904, column: 13, scope: !5573)
!5573 = distinct !DILexicalBlock(scope: !1366, file: !1, line: 904, column: 13)
!5574 = !DILocation(line: 750, column: 5, scope: !1307, inlinedAt: !5572)
!5575 = !DILocation(line: 750, column: 15, scope: !1307, inlinedAt: !5572)
!5576 = !DILocation(line: 751, column: 16, scope: !1307, inlinedAt: !5572)
!5577 = !DILocation(line: 754, column: 13, scope: !1307, inlinedAt: !5572)
!5578 = !DILocation(line: 743, column: 16, scope: !1307, inlinedAt: !5572)
!5579 = !DILocation(line: 756, column: 20, scope: !5523, inlinedAt: !5572)
!5580 = !DILocation(line: 797, column: 1, scope: !1307, inlinedAt: !5572)
!5581 = !DILocation(line: 912, column: 21, scope: !1365)
!5582 = !DILocation(line: 757, column: 14, scope: !5525, inlinedAt: !5572)
!5583 = !DILocation(line: 757, column: 13, scope: !5526, inlinedAt: !5572)
!5584 = !DILocation(line: 951, column: 5, scope: !5585)
!5585 = !DILexicalBlockFile(scope: !1374, file: !1, discriminator: 1)
!5586 = !DILocation(line: 951, column: 5, scope: !1374)
!5587 = !DILocation(line: 912, column: 13, scope: !1365)
!5588 = !DILocation(line: 912, column: 24, scope: !5589)
!5589 = !DILexicalBlockFile(scope: !1365, file: !1, discriminator: 1)
!5590 = !DILocation(line: 913, column: 13, scope: !1365)
!5591 = !DILocation(line: 912, column: 46, scope: !1365)
!5592 = !DILocation(line: 913, column: 25, scope: !1365)
!5593 = !DILocation(line: 913, column: 46, scope: !1365)
!5594 = !DILocation(line: 913, column: 43, scope: !1365)
!5595 = !DILocation(line: 912, column: 13, scope: !1366)
!5596 = !DILocation(line: 915, column: 23, scope: !1364)
!5597 = !DILocation(line: 914, column: 23, scope: !1364)
!5598 = !DILocation(line: 916, column: 17, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !1364, file: !1, line: 916, column: 17)
!5600 = !DILocation(line: 916, column: 17, scope: !1364)
!5601 = !DILocation(line: 918, column: 24, scope: !5602)
!5602 = distinct !DILexicalBlock(scope: !5599, file: !1, line: 916, column: 26)
!5603 = !DILocation(line: 919, column: 13, scope: !5602)
!5604 = !DILocation(line: 920, column: 22, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5599, file: !1, line: 920, column: 22)
!5606 = !DILocation(line: 920, column: 22, scope: !5599)
!5607 = !DILocation(line: 925, column: 38, scope: !1351)
!5608 = !DILocation(line: 925, column: 32, scope: !1351)
!5609 = !DILocation(line: 925, column: 12, scope: !1351)
!5610 = !DILocation(line: 926, column: 10, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !1351, file: !1, line: 926, column: 9)
!5612 = !DILocation(line: 926, column: 9, scope: !1351)
!5613 = !DILocation(line: 929, column: 11, scope: !1351)
!5614 = !DILocation(line: 929, column: 16, scope: !1351)
!5615 = !{!5335, !1985, i64 16}
!5616 = !DILocation(line: 930, column: 11, scope: !1351)
!5617 = !DILocation(line: 931, column: 11, scope: !1351)
!5618 = !DILocation(line: 931, column: 19, scope: !1351)
!5619 = !DILocation(line: 930, column: 51, scope: !1351)
!5620 = !{!5335, !1982, i64 96}
!5621 = !DILocation(line: 868, column: 32, scope: !1302, inlinedAt: !5622)
!5622 = distinct !DILocation(line: 933, column: 10, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !1351, file: !1, line: 933, column: 9)
!5624 = !DILocation(line: 880, column: 15, scope: !5504, inlinedAt: !5622)
!5625 = !DILocation(line: 880, column: 23, scope: !5504, inlinedAt: !5622)
!5626 = !DILocation(line: 880, column: 50, scope: !5504, inlinedAt: !5622)
!5627 = !DILocation(line: 881, column: 15, scope: !5504, inlinedAt: !5622)
!5628 = !DILocation(line: 881, column: 22, scope: !5504, inlinedAt: !5622)
!5629 = !DILocation(line: 880, column: 9, scope: !1302, inlinedAt: !5622)
!5630 = !DILocation(line: 934, column: 39, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5632, file: !1, line: 934, column: 13)
!5632 = distinct !DILexicalBlock(scope: !5623, file: !1, line: 933, column: 34)
!5633 = !DILocation(line: 934, column: 48, scope: !5631)
!5634 = !DILocation(line: 934, column: 58, scope: !5631)
!5635 = !DILocation(line: 934, column: 68, scope: !5631)
!5636 = !DILocation(line: 934, column: 13, scope: !5631)
!5637 = !DILocation(line: 947, column: 5, scope: !5638)
!5638 = !DILexicalBlockFile(scope: !1369, file: !1, discriminator: 1)
!5639 = !DILocation(line: 934, column: 13, scope: !5632)
!5640 = !DILocation(line: 942, column: 22, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5623, file: !1, line: 941, column: 10)
!5642 = !DILocation(line: 942, column: 15, scope: !5641)
!5643 = !DILocation(line: 942, column: 20, scope: !5641)
!5644 = !{!5335, !1985, i64 24}
!5645 = !DILocation(line: 943, column: 24, scope: !5646)
!5646 = distinct !DILexicalBlock(scope: !5641, file: !1, line: 943, column: 13)
!5647 = !DILocation(line: 943, column: 13, scope: !5641)
!5648 = !DILocation(line: 947, column: 5, scope: !1372)
!5649 = !DILocation(line: 947, column: 5, scope: !1369)
!5650 = !DILocation(line: 947, column: 5, scope: !5651)
!5651 = !DILexicalBlockFile(scope: !1371, file: !1, discriminator: 4)
!5652 = !DILocation(line: 947, column: 5, scope: !5653)
!5653 = distinct !DILexicalBlock(scope: !1371, file: !1, line: 947, column: 5)
!5654 = !DILocation(line: 947, column: 5, scope: !1371)
!5655 = !DILocation(line: 947, column: 5, scope: !5656)
!5656 = !DILexicalBlockFile(scope: !5653, file: !1, discriminator: 6)
!5657 = !DILocation(line: 951, column: 5, scope: !1377)
!5658 = !DILocation(line: 951, column: 5, scope: !5659)
!5659 = !DILexicalBlockFile(scope: !1376, file: !1, discriminator: 4)
!5660 = !DILocation(line: 951, column: 5, scope: !5661)
!5661 = distinct !DILexicalBlock(scope: !1376, file: !1, line: 951, column: 5)
!5662 = !DILocation(line: 951, column: 5, scope: !1376)
!5663 = !DILocation(line: 951, column: 5, scope: !5664)
!5664 = !DILexicalBlockFile(scope: !5661, file: !1, discriminator: 6)
!5665 = !DILocation(line: 952, column: 5, scope: !5666)
!5666 = !DILexicalBlockFile(scope: !1379, file: !1, discriminator: 1)
!5667 = !DILocation(line: 952, column: 5, scope: !1382)
!5668 = !DILocation(line: 952, column: 5, scope: !1379)
!5669 = !DILocation(line: 952, column: 5, scope: !5670)
!5670 = !DILexicalBlockFile(scope: !1381, file: !1, discriminator: 4)
!5671 = !DILocation(line: 952, column: 5, scope: !5672)
!5672 = distinct !DILexicalBlock(scope: !1381, file: !1, line: 952, column: 5)
!5673 = !DILocation(line: 952, column: 5, scope: !1381)
!5674 = !DILocation(line: 952, column: 5, scope: !5675)
!5675 = !DILexicalBlockFile(scope: !5672, file: !1, discriminator: 6)
!5676 = !DILocation(line: 954, column: 1, scope: !1351)
!5677 = !DILocation(line: 1076, column: 33, scope: !1261)
!5678 = !DILocation(line: 1078, column: 28, scope: !1261)
!5679 = !DILocation(line: 1078, column: 15, scope: !1261)
!5680 = !DILocation(line: 1079, column: 15, scope: !1261)
!5681 = !DILocation(line: 1083, column: 9, scope: !1269)
!5682 = !DILocation(line: 1083, column: 32, scope: !1269)
!5683 = !DILocation(line: 1083, column: 37, scope: !1269)
!5684 = !DILocation(line: 1083, column: 46, scope: !1269)
!5685 = !DILocation(line: 1083, column: 40, scope: !1269)
!5686 = !DILocation(line: 1083, column: 9, scope: !1261)
!5687 = !DILocation(line: 1084, column: 33, scope: !1268)
!5688 = !DILocation(line: 1084, column: 27, scope: !1268)
!5689 = !DILocation(line: 1084, column: 20, scope: !1268)
!5690 = !DILocation(line: 1085, column: 16, scope: !1268)
!5691 = !DILocation(line: 1086, column: 14, scope: !5692)
!5692 = distinct !DILexicalBlock(scope: !1268, file: !1, line: 1086, column: 13)
!5693 = !DILocation(line: 1086, column: 13, scope: !1268)
!5694 = !DILocation(line: 1089, column: 15, scope: !1268)
!5695 = !DILocation(line: 1079, column: 28, scope: !1261)
!5696 = !DILocation(line: 1090, column: 9, scope: !1268)
!5697 = !DILocation(line: 1091, column: 9, scope: !1268)
!5698 = !DILocation(line: 1093, column: 15, scope: !1268)
!5699 = !DILocation(line: 1094, column: 9, scope: !1268)
!5700 = !DILocation(line: 1095, column: 9, scope: !1268)
!5701 = !DILocation(line: 1097, column: 9, scope: !1268)
!5702 = !DILocation(line: 1098, column: 9, scope: !1268)
!5703 = !DILocation(line: 1100, column: 19, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !1268, file: !1, line: 1100, column: 13)
!5705 = !DILocation(line: 1100, column: 13, scope: !5704)
!5706 = !DILocation(line: 1100, column: 13, scope: !1268)
!5707 = !DILocation(line: 1106, column: 13, scope: !5708)
!5708 = distinct !DILexicalBlock(scope: !5704, file: !1, line: 1100, column: 30)
!5709 = !DILocation(line: 1107, column: 13, scope: !5708)
!5710 = !DILocation(line: 1110, column: 13, scope: !5708)
!5711 = !DILocation(line: 1111, column: 13, scope: !5708)
!5712 = !DILocation(line: 1112, column: 9, scope: !5708)
!5713 = !DILocation(line: 1114, column: 9, scope: !1269)
!5714 = !DILocation(line: 1116, column: 15, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !1261, file: !1, line: 1116, column: 9)
!5716 = !DILocation(line: 1116, column: 9, scope: !5715)
!5717 = !DILocation(line: 1117, column: 31, scope: !5715)
!5718 = !DILocation(line: 1116, column: 9, scope: !1261)
!5719 = !DILocation(line: 1117, column: 15, scope: !5715)
!5720 = !DILocation(line: 1117, column: 9, scope: !5715)
!5721 = !DILocation(line: 1119, column: 15, scope: !5715)
!5722 = !DILocation(line: 1120, column: 5, scope: !5723)
!5723 = !DILexicalBlockFile(scope: !1271, file: !1, discriminator: 1)
!5724 = !DILocation(line: 1120, column: 5, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !1271, file: !1, line: 1120, column: 5)
!5726 = !DILocation(line: 1120, column: 5, scope: !1271)
!5727 = !DILocation(line: 1120, column: 5, scope: !5728)
!5728 = !DILexicalBlockFile(scope: !5725, file: !1, discriminator: 3)
!5729 = !DILocation(line: 1122, column: 1, scope: !1261)
!5730 = !DILocation(line: 1125, column: 38, scope: !1272)
!5731 = !DILocation(line: 1125, column: 50, scope: !1272)
!5732 = !DILocation(line: 1127, column: 15, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !1272, file: !1, line: 1127, column: 9)
!5734 = !DILocation(line: 1127, column: 23, scope: !5733)
!5735 = !DILocation(line: 1127, column: 9, scope: !1272)
!5736 = !DILocation(line: 1128, column: 25, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5733, file: !1, line: 1127, column: 30)
!5738 = !DILocation(line: 1128, column: 9, scope: !5737)
!5739 = !DILocation(line: 1129, column: 9, scope: !5737)
!5740 = !DILocation(line: 1131, column: 12, scope: !1272)
!5741 = !DILocation(line: 1131, column: 5, scope: !1272)
!5742 = !DILocation(line: 1132, column: 1, scope: !1272)
!5743 = !DILocation(line: 1135, column: 38, scope: !1278)
!5744 = !DILocation(line: 1135, column: 54, scope: !1278)
!5745 = !DILocation(line: 1135, column: 65, scope: !1278)
!5746 = !DILocation(line: 1138, column: 33, scope: !1278)
!5747 = !DILocation(line: 1138, column: 9, scope: !1278)
!5748 = !DILocation(line: 1137, column: 16, scope: !1278)
!5749 = !DILocation(line: 1139, column: 11, scope: !5750)
!5750 = distinct !DILexicalBlock(scope: !1278, file: !1, line: 1139, column: 9)
!5751 = !DILocation(line: 1139, column: 17, scope: !5750)
!5752 = !DILocation(line: 1139, column: 20, scope: !5753)
!5753 = !DILexicalBlockFile(scope: !5750, file: !1, discriminator: 1)
!5754 = !DILocation(line: 1139, column: 9, scope: !1278)
!5755 = !DILocation(line: 1141, column: 11, scope: !1278)
!5756 = !DILocation(line: 1141, column: 19, scope: !1278)
!5757 = !DILocation(line: 1142, column: 5, scope: !1278)
!5758 = !DILocation(line: 1143, column: 1, scope: !1278)
!5759 = !DILocation(line: 800, column: 31, scope: !1320)
!5760 = !DILocation(line: 800, column: 48, scope: !1320)
!5761 = !DILocation(line: 801, column: 24, scope: !1320)
!5762 = !DILocation(line: 801, column: 43, scope: !1320)
!5763 = !DILocation(line: 802, column: 24, scope: !1320)
!5764 = !DILocation(line: 802, column: 44, scope: !1320)
!5765 = !DILocation(line: 808, column: 22, scope: !1320)
!5766 = !DILocation(line: 808, column: 15, scope: !1320)
!5767 = !DILocation(line: 809, column: 24, scope: !1320)
!5768 = !DILocation(line: 809, column: 16, scope: !1320)
!5769 = !DILocation(line: 812, column: 9, scope: !1338)
!5770 = !DILocation(line: 812, column: 30, scope: !1338)
!5771 = !DILocation(line: 812, column: 18, scope: !1338)
!5772 = !DILocation(line: 813, column: 13, scope: !1336)
!5773 = !DILocation(line: 813, column: 47, scope: !1336)
!5774 = !DILocation(line: 813, column: 27, scope: !1336)
!5775 = !DILocation(line: 813, column: 69, scope: !1336)
!5776 = !DILocation(line: 814, column: 13, scope: !1336)
!5777 = !DILocation(line: 813, column: 13, scope: !1337)
!5778 = !DILocation(line: 818, column: 58, scope: !5779)
!5779 = distinct !DILexicalBlock(scope: !1336, file: !1, line: 814, column: 39)
!5780 = !DILocation(line: 818, column: 29, scope: !5779)
!5781 = !DILocation(line: 818, column: 19, scope: !5779)
!5782 = !DILocation(line: 818, column: 27, scope: !5779)
!5783 = !DILocation(line: 819, column: 31, scope: !5784)
!5784 = distinct !DILexicalBlock(scope: !5779, file: !1, line: 819, column: 17)
!5785 = !DILocation(line: 819, column: 37, scope: !5784)
!5786 = !DILocation(line: 819, column: 40, scope: !5787)
!5787 = !DILexicalBlockFile(scope: !5784, file: !1, discriminator: 1)
!5788 = !DILocation(line: 819, column: 17, scope: !5779)
!5789 = !DILocation(line: 823, column: 13, scope: !1335)
!5790 = !DILocation(line: 824, column: 19, scope: !1335)
!5791 = !DILocation(line: 824, column: 28, scope: !1335)
!5792 = !DILocation(line: 826, column: 17, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !1335, file: !1, line: 826, column: 17)
!5794 = !DILocation(line: 826, column: 40, scope: !5793)
!5795 = !DILocation(line: 826, column: 27, scope: !5793)
!5796 = !DILocation(line: 827, column: 17, scope: !5797)
!5797 = distinct !DILexicalBlock(scope: !5793, file: !1, line: 826, column: 52)
!5798 = !DILocation(line: 828, column: 23, scope: !5797)
!5799 = !DILocation(line: 828, column: 33, scope: !5797)
!5800 = !DILocation(line: 829, column: 13, scope: !5797)
!5801 = !DILocation(line: 831, column: 28, scope: !1334)
!5802 = !DILocation(line: 834, column: 38, scope: !1333)
!5803 = !DILocation(line: 834, column: 27, scope: !1333)
!5804 = !DILocation(line: 835, column: 22, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !1333, file: !1, line: 835, column: 21)
!5806 = !DILocation(line: 835, column: 21, scope: !1333)
!5807 = !DILocation(line: 838, column: 17, scope: !5808)
!5808 = !DILexicalBlockFile(scope: !1340, file: !1, discriminator: 1)
!5809 = !DILocation(line: 838, column: 17, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !1340, file: !1, line: 838, column: 17)
!5811 = !DILocation(line: 838, column: 17, scope: !1340)
!5812 = !DILocation(line: 838, column: 17, scope: !5813)
!5813 = !DILexicalBlockFile(scope: !5810, file: !1, discriminator: 3)
!5814 = !DILocation(line: 839, column: 25, scope: !1333)
!5815 = !DILocation(line: 843, column: 5, scope: !5816)
!5816 = !DILexicalBlockFile(scope: !1342, file: !1, discriminator: 1)
!5817 = !DILocation(line: 843, column: 5, scope: !5818)
!5818 = distinct !DILexicalBlock(scope: !1342, file: !1, line: 843, column: 5)
!5819 = !DILocation(line: 843, column: 5, scope: !1342)
!5820 = !DILocation(line: 843, column: 5, scope: !5821)
!5821 = !DILexicalBlockFile(scope: !5818, file: !1, discriminator: 2)
!5822 = !DILocation(line: 844, column: 11, scope: !1320)
!5823 = !DILocation(line: 844, column: 19, scope: !1320)
!5824 = !DILocation(line: 846, column: 5, scope: !5825)
!5825 = !DILexicalBlockFile(scope: !1344, file: !1, discriminator: 1)
!5826 = !DILocation(line: 846, column: 5, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !1344, file: !1, line: 846, column: 5)
!5828 = !DILocation(line: 846, column: 5, scope: !1344)
!5829 = !DILocation(line: 846, column: 5, scope: !5830)
!5830 = !DILexicalBlockFile(scope: !5827, file: !1, discriminator: 2)
!5831 = !DILocation(line: 847, column: 11, scope: !1320)
!5832 = !DILocation(line: 847, column: 20, scope: !1320)
!5833 = !DILocation(line: 855, column: 5, scope: !5834)
!5834 = !DILexicalBlockFile(scope: !1346, file: !1, discriminator: 1)
!5835 = !DILocation(line: 855, column: 5, scope: !1350)
!5836 = !DILocation(line: 855, column: 5, scope: !1346)
!5837 = !DILocation(line: 855, column: 5, scope: !5838)
!5838 = !DILexicalBlockFile(scope: !1349, file: !1, discriminator: 2)
!5839 = !DILocation(line: 855, column: 5, scope: !5840)
!5840 = !DILexicalBlockFile(scope: !1348, file: !1, discriminator: 4)
!5841 = !DILocation(line: 855, column: 5, scope: !5842)
!5842 = distinct !DILexicalBlock(scope: !1348, file: !1, line: 855, column: 5)
!5843 = !DILocation(line: 855, column: 5, scope: !1348)
!5844 = !DILocation(line: 855, column: 5, scope: !5845)
!5845 = !DILexicalBlockFile(scope: !5842, file: !1, discriminator: 6)
!5846 = !DILocation(line: 856, column: 16, scope: !1320)
!5847 = !DILocation(line: 857, column: 13, scope: !1320)
!5848 = !DILocation(line: 859, column: 5, scope: !1320)
!5849 = !DILocation(line: 860, column: 1, scope: !1320)
!5850 = !DILocation(line: 1318, column: 42, scope: !1383)
!5851 = !DILocation(line: 1320, column: 5, scope: !5852)
!5852 = !DILexicalBlockFile(scope: !1406, file: !1, discriminator: 1)
!5853 = !DILocation(line: 1320, column: 5, scope: !5854)
!5854 = !DILexicalBlockFile(scope: !5855, file: !1, discriminator: 2)
!5855 = distinct !DILexicalBlock(scope: !1406, file: !1, line: 1320, column: 5)
!5856 = !DILocation(line: 1320, column: 5, scope: !5857)
!5857 = !DILexicalBlockFile(scope: !1406, file: !1, discriminator: 4)
!5858 = !DILocation(line: 1321, column: 5, scope: !1383)
!5859 = !DILocation(line: 1322, column: 5, scope: !1383)
!5860 = !DILocation(line: 1322, column: 20, scope: !1383)
!5861 = !DILocation(line: 1322, column: 28, scope: !1383)
!5862 = !DILocation(line: 1323, column: 1, scope: !1383)
!5863 = !DILocation(line: 1367, column: 38, scope: !1407)
!5864 = !DILocation(line: 1369, column: 9, scope: !1407)
!5865 = !DILocation(line: 1375, column: 5, scope: !1407)
!5866 = !DILocation(line: 1380, column: 15, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !1407, file: !1, line: 1380, column: 9)
!5868 = !{!5869, !1985, i64 72}
!5869 = !{!"", !1981, i64 0, !1985, i64 16, !1985, i64 24, !1985, i64 32, !1985, i64 40, !1985, i64 48, !1983, i64 56, !1985, i64 64, !1985, i64 72, !1985, i64 80, !1985, i64 88, !1985, i64 96, !1985, i64 104}
!5870 = !DILocation(line: 1380, column: 9, scope: !5867)
!5871 = !DILocation(line: 1380, column: 24, scope: !5867)
!5872 = !DILocation(line: 1380, column: 27, scope: !5873)
!5873 = !DILexicalBlockFile(scope: !5867, file: !1, discriminator: 1)
!5874 = !DILocation(line: 1380, column: 9, scope: !1407)
!5875 = !DILocation(line: 1341, column: 23, scope: !1421, inlinedAt: !5876)
!5876 = distinct !DILocation(line: 1381, column: 20, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5867, file: !1, line: 1380, column: 60)
!5878 = !DILocation(line: 1347, column: 9, scope: !5879, inlinedAt: !5876)
!5879 = distinct !DILexicalBlock(scope: !1421, file: !1, line: 1347, column: 9)
!5880 = !DILocation(line: 1347, column: 9, scope: !5881, inlinedAt: !5876)
!5881 = !DILexicalBlockFile(scope: !5879, file: !1, discriminator: 2)
!5882 = !DILocation(line: 1347, column: 9, scope: !1421, inlinedAt: !5876)
!5883 = !DILocation(line: 1349, column: 12, scope: !1421, inlinedAt: !5876)
!5884 = !DILocation(line: 1344, column: 9, scope: !1421, inlinedAt: !5876)
!5885 = !DILocation(line: 1350, column: 12, scope: !1421, inlinedAt: !5876)
!5886 = !DILocation(line: 1350, column: 12, scope: !5887, inlinedAt: !5876)
!5887 = !DILexicalBlockFile(scope: !1421, file: !1, discriminator: 1)
!5888 = !DILocation(line: 1350, column: 12, scope: !5889, inlinedAt: !5876)
!5889 = !DILexicalBlockFile(scope: !1421, file: !1, discriminator: 3)
!5890 = !DILocation(line: 1350, column: 12, scope: !5891, inlinedAt: !5876)
!5891 = !DILexicalBlockFile(scope: !1421, file: !1, discriminator: 4)
!5892 = !DILocation(line: 1350, column: 12, scope: !5893, inlinedAt: !5876)
!5893 = !DILexicalBlockFile(scope: !1421, file: !1, discriminator: 2)
!5894 = !DILocation(line: 1345, column: 11, scope: !1421, inlinedAt: !5876)
!5895 = !DILocation(line: 1351, column: 12, scope: !1421, inlinedAt: !5876)
!5896 = !DILocation(line: 1343, column: 19, scope: !1421, inlinedAt: !5876)
!5897 = !DILocation(line: 1343, column: 25, scope: !1421, inlinedAt: !5876)
!5898 = !DILocation(line: 1343, column: 16, scope: !1421, inlinedAt: !5876)
!5899 = !DILocation(line: 1353, column: 16, scope: !5900, inlinedAt: !5876)
!5900 = distinct !DILexicalBlock(scope: !5901, file: !1, line: 1353, column: 5)
!5901 = distinct !DILexicalBlock(scope: !1421, file: !1, line: 1353, column: 5)
!5902 = !DILocation(line: 1353, column: 5, scope: !5901, inlinedAt: !5876)
!5903 = !DILocation(line: 1354, column: 13, scope: !5904, inlinedAt: !5876)
!5904 = !DILexicalBlockFile(scope: !5905, file: !1, discriminator: 5)
!5905 = distinct !DILexicalBlock(scope: !5906, file: !1, line: 1354, column: 13)
!5906 = distinct !DILexicalBlock(scope: !5900, file: !1, line: 1353, column: 29)
!5907 = !DILocation(line: 1354, column: 13, scope: !5908, inlinedAt: !5876)
!5908 = !DILexicalBlockFile(scope: !5905, file: !1, discriminator: 4)
!5909 = !DILocation(line: 1381, column: 20, scope: !5877)
!5910 = !{!5911, !5911, i64 0}
!5911 = !{!"short", !1983, i64 0}
!5912 = !DILocation(line: 1354, column: 43, scope: !5913, inlinedAt: !5876)
!5913 = !DILexicalBlockFile(scope: !5914, file: !1, discriminator: 8)
!5914 = !DILexicalBlockFile(scope: !5905, file: !1, discriminator: 3)
!5915 = !DILocation(line: 1355, column: 24, scope: !5905, inlinedAt: !5876)
!5916 = !DILocation(line: 1354, column: 13, scope: !5906, inlinedAt: !5876)
!5917 = distinct !{!5917, !5918}
!5918 = !{!"llvm.loop.unroll.disable"}
!5919 = !DILocation(line: 1354, column: 13, scope: !5920, inlinedAt: !5876)
!5920 = !DILexicalBlockFile(scope: !5905, file: !1, discriminator: 1)
!5921 = !{!1983, !1983, i64 0}
!5922 = distinct !{!5922, !5918}
!5923 = !{!2035, !2035, i64 0}
!5924 = distinct !{!5924, !5918}
!5925 = !DILocation(line: 1357, column: 16, scope: !5926, inlinedAt: !5876)
!5926 = distinct !DILexicalBlock(scope: !1421, file: !1, line: 1357, column: 9)
!5927 = !DILocation(line: 1357, column: 9, scope: !1421, inlinedAt: !5876)
!5928 = !DILocation(line: 1360, column: 9, scope: !5929, inlinedAt: !5876)
!5929 = distinct !DILexicalBlock(scope: !5926, file: !1, line: 1359, column: 10)
!5930 = !DILocation(line: 1370, column: 15, scope: !1407)
!5931 = !DILocation(line: 1382, column: 13, scope: !5877)
!5932 = !DILocation(line: 1358, column: 16, scope: !5926, inlinedAt: !5876)
!5933 = !DILocation(line: 1382, column: 22, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5877, file: !1, line: 1382, column: 13)
!5935 = !DILocation(line: 1387, column: 26, scope: !1407)
!5936 = !DILocation(line: 1396, column: 51, scope: !5937)
!5937 = distinct !DILexicalBlock(scope: !1407, file: !1, line: 1392, column: 9)
!5938 = !{!5869, !1985, i64 80}
!5939 = !DILocation(line: 1387, column: 33, scope: !1407)
!5940 = !DILocation(line: 1387, column: 42, scope: !1407)
!5941 = !DILocation(line: 1387, column: 45, scope: !5942)
!5942 = !DILexicalBlockFile(scope: !1407, file: !1, discriminator: 1)
!5943 = !DILocation(line: 1389, column: 10, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !1407, file: !1, line: 1389, column: 9)
!5945 = !DILocation(line: 1389, column: 19, scope: !5944)
!5946 = !DILocation(line: 1390, column: 35, scope: !5944)
!5947 = !{!5869, !1985, i64 64}
!5948 = !DILocation(line: 1390, column: 29, scope: !5944)
!5949 = !DILocation(line: 1390, column: 16, scope: !5950)
!5950 = !DILexicalBlockFile(scope: !5951, file: !1, discriminator: 4)
!5951 = !DILexicalBlockFile(scope: !5944, file: !1, discriminator: 3)
!5952 = !DILocation(line: 1390, column: 9, scope: !5944)
!5953 = !DILocation(line: 1392, column: 18, scope: !5937)
!5954 = !DILocation(line: 1394, column: 26, scope: !5937)
!5955 = !DILocation(line: 1399, column: 20, scope: !5956)
!5956 = distinct !DILexicalBlock(scope: !5937, file: !1, line: 1397, column: 14)
!5957 = !DILocation(line: 1397, column: 14, scope: !5937)
!5958 = !DILocation(line: 1398, column: 18, scope: !5956)
!5959 = !DILocation(line: 1371, column: 15, scope: !1407)
!5960 = !DILocation(line: 1405, column: 5, scope: !5961)
!5961 = !DILexicalBlockFile(scope: !1417, file: !1, discriminator: 1)
!5962 = !DILocation(line: 1405, column: 5, scope: !1417)
!5963 = !DILocation(line: 1375, column: 9, scope: !1407)
!5964 = !DILocation(line: 1404, column: 20, scope: !5956)
!5965 = !DILocation(line: 1402, column: 18, scope: !5956)
!5966 = !DILocation(line: 1394, column: 20, scope: !5937)
!5967 = !DILocation(line: 1396, column: 20, scope: !5937)
!5968 = !DILocation(line: 1393, column: 18, scope: !5937)
!5969 = !DILocation(line: 1405, column: 5, scope: !5970)
!5970 = !DILexicalBlockFile(scope: !1419, file: !1, discriminator: 4)
!5971 = !DILocation(line: 1405, column: 5, scope: !5972)
!5972 = distinct !DILexicalBlock(scope: !1419, file: !1, line: 1405, column: 5)
!5973 = !DILocation(line: 1405, column: 5, scope: !1419)
!5974 = !DILocation(line: 1405, column: 5, scope: !5975)
!5975 = !DILexicalBlockFile(scope: !5972, file: !1, discriminator: 6)
!5976 = !DILocation(line: 1407, column: 1, scope: !1407)
!5977 = !DILocation(line: 1326, column: 43, scope: !1429)
!5978 = !DILocation(line: 1326, column: 59, scope: !1429)
!5979 = !DILocation(line: 1326, column: 72, scope: !1429)
!5980 = !DILocation(line: 1328, column: 5, scope: !5981)
!5981 = !DILexicalBlockFile(scope: !1438, file: !1, discriminator: 1)
!5982 = !DILocation(line: 1328, column: 5, scope: !1439)
!5983 = !DILocation(line: 1328, column: 5, scope: !5984)
!5984 = !DILexicalBlockFile(scope: !1437, file: !1, discriminator: 2)
!5985 = !DILocation(line: 1328, column: 5, scope: !5986)
!5986 = distinct !DILexicalBlock(scope: !1437, file: !1, line: 1328, column: 5)
!5987 = !DILocation(line: 1329, column: 5, scope: !5988)
!5988 = !DILexicalBlockFile(scope: !1442, file: !1, discriminator: 1)
!5989 = !DILocation(line: 1329, column: 5, scope: !1443)
!5990 = !DILocation(line: 1329, column: 5, scope: !5991)
!5991 = !DILexicalBlockFile(scope: !1441, file: !1, discriminator: 2)
!5992 = !DILocation(line: 1329, column: 5, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !1441, file: !1, line: 1329, column: 5)
!5994 = !DILocation(line: 1330, column: 5, scope: !5995)
!5995 = !DILexicalBlockFile(scope: !1446, file: !1, discriminator: 1)
!5996 = !DILocation(line: 1330, column: 5, scope: !1447)
!5997 = !DILocation(line: 1330, column: 5, scope: !5998)
!5998 = !DILexicalBlockFile(scope: !1445, file: !1, discriminator: 2)
!5999 = !DILocation(line: 1330, column: 5, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !1445, file: !1, line: 1330, column: 5)
!6001 = !DILocation(line: 1331, column: 5, scope: !6002)
!6002 = !DILexicalBlockFile(scope: !1450, file: !1, discriminator: 1)
!6003 = !{!5869, !1985, i64 88}
!6004 = !DILocation(line: 1331, column: 5, scope: !1451)
!6005 = !DILocation(line: 1331, column: 5, scope: !6006)
!6006 = !DILexicalBlockFile(scope: !1449, file: !1, discriminator: 2)
!6007 = !DILocation(line: 1331, column: 5, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !1449, file: !1, line: 1331, column: 5)
!6009 = !DILocation(line: 1332, column: 5, scope: !6010)
!6010 = !DILexicalBlockFile(scope: !1454, file: !1, discriminator: 1)
!6011 = !{!5869, !1985, i64 96}
!6012 = !DILocation(line: 1332, column: 5, scope: !1455)
!6013 = !DILocation(line: 1332, column: 5, scope: !6014)
!6014 = !DILexicalBlockFile(scope: !1453, file: !1, discriminator: 2)
!6015 = !DILocation(line: 1332, column: 5, scope: !6016)
!6016 = distinct !DILexicalBlock(scope: !1453, file: !1, line: 1332, column: 5)
!6017 = !DILocation(line: 1333, column: 5, scope: !6018)
!6018 = !DILexicalBlockFile(scope: !1458, file: !1, discriminator: 1)
!6019 = !{!5869, !1985, i64 104}
!6020 = !DILocation(line: 1333, column: 5, scope: !1459)
!6021 = !DILocation(line: 1333, column: 5, scope: !6022)
!6022 = !DILexicalBlockFile(scope: !1457, file: !1, discriminator: 2)
!6023 = !DILocation(line: 1333, column: 5, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !1457, file: !1, line: 1333, column: 5)
!6025 = !DILocation(line: 95, column: 63, scope: !873, inlinedAt: !6026)
!6026 = distinct !DILocation(line: 1334, column: 12, scope: !1429)
!6027 = !DILocation(line: 95, column: 76, scope: !873, inlinedAt: !6026)
!6028 = !DILocation(line: 97, column: 5, scope: !4472, inlinedAt: !6026)
!6029 = !DILocation(line: 97, column: 5, scope: !883, inlinedAt: !6026)
!6030 = !DILocation(line: 97, column: 5, scope: !4475, inlinedAt: !6026)
!6031 = !DILocation(line: 97, column: 5, scope: !4477, inlinedAt: !6026)
!6032 = !DILocation(line: 1334, column: 12, scope: !1429)
!6033 = !DILocation(line: 98, column: 5, scope: !4479, inlinedAt: !6026)
!6034 = !DILocation(line: 98, column: 5, scope: !887, inlinedAt: !6026)
!6035 = !DILocation(line: 98, column: 5, scope: !4482, inlinedAt: !6026)
!6036 = !DILocation(line: 98, column: 5, scope: !4484, inlinedAt: !6026)
!6037 = !DILocation(line: 99, column: 5, scope: !4486, inlinedAt: !6026)
!6038 = !DILocation(line: 99, column: 5, scope: !891, inlinedAt: !6026)
!6039 = !DILocation(line: 99, column: 5, scope: !4489, inlinedAt: !6026)
!6040 = !DILocation(line: 99, column: 5, scope: !4491, inlinedAt: !6026)
!6041 = !DILocation(line: 100, column: 5, scope: !4493, inlinedAt: !6026)
!6042 = !DILocation(line: 100, column: 5, scope: !895, inlinedAt: !6026)
!6043 = !DILocation(line: 100, column: 5, scope: !4496, inlinedAt: !6026)
!6044 = !DILocation(line: 100, column: 5, scope: !4498, inlinedAt: !6026)
!6045 = !DILocation(line: 101, column: 5, scope: !4500, inlinedAt: !6026)
!6046 = !DILocation(line: 101, column: 5, scope: !899, inlinedAt: !6026)
!6047 = !DILocation(line: 101, column: 5, scope: !4503, inlinedAt: !6026)
!6048 = !DILocation(line: 101, column: 5, scope: !4505, inlinedAt: !6026)
!6049 = !DILocation(line: 102, column: 5, scope: !873, inlinedAt: !6026)
!6050 = !DILocation(line: 1335, column: 1, scope: !1429)
!6051 = !DILocation(line: 1306, column: 40, scope: !1460)
!6052 = !DILocation(line: 1308, column: 5, scope: !6053)
!6053 = !DILexicalBlockFile(scope: !1466, file: !1, discriminator: 1)
!6054 = !DILocation(line: 1308, column: 5, scope: !1470)
!6055 = !DILocation(line: 1308, column: 5, scope: !1466)
!6056 = !DILocation(line: 1308, column: 5, scope: !6057)
!6057 = !DILexicalBlockFile(scope: !1469, file: !1, discriminator: 2)
!6058 = !DILocation(line: 1308, column: 5, scope: !6059)
!6059 = !DILexicalBlockFile(scope: !1468, file: !1, discriminator: 4)
!6060 = !DILocation(line: 1308, column: 5, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !1468, file: !1, line: 1308, column: 5)
!6062 = !DILocation(line: 1308, column: 5, scope: !1468)
!6063 = !DILocation(line: 1308, column: 5, scope: !6064)
!6064 = !DILexicalBlockFile(scope: !6061, file: !1, discriminator: 6)
!6065 = !DILocation(line: 1309, column: 5, scope: !6066)
!6066 = !DILexicalBlockFile(scope: !1472, file: !1, discriminator: 1)
!6067 = !DILocation(line: 1309, column: 5, scope: !1476)
!6068 = !DILocation(line: 1309, column: 5, scope: !1472)
!6069 = !DILocation(line: 1309, column: 5, scope: !6070)
!6070 = !DILexicalBlockFile(scope: !1475, file: !1, discriminator: 2)
!6071 = !DILocation(line: 1309, column: 5, scope: !6072)
!6072 = !DILexicalBlockFile(scope: !1474, file: !1, discriminator: 4)
!6073 = !DILocation(line: 1309, column: 5, scope: !6074)
!6074 = distinct !DILexicalBlock(scope: !1474, file: !1, line: 1309, column: 5)
!6075 = !DILocation(line: 1309, column: 5, scope: !1474)
!6076 = !DILocation(line: 1309, column: 5, scope: !6077)
!6077 = !DILexicalBlockFile(scope: !6074, file: !1, discriminator: 6)
!6078 = !DILocation(line: 1310, column: 5, scope: !6079)
!6079 = !DILexicalBlockFile(scope: !1478, file: !1, discriminator: 1)
!6080 = !DILocation(line: 1310, column: 5, scope: !1482)
!6081 = !DILocation(line: 1310, column: 5, scope: !1478)
!6082 = !DILocation(line: 1310, column: 5, scope: !6083)
!6083 = !DILexicalBlockFile(scope: !1481, file: !1, discriminator: 2)
!6084 = !DILocation(line: 1310, column: 5, scope: !6085)
!6085 = !DILexicalBlockFile(scope: !1480, file: !1, discriminator: 4)
!6086 = !DILocation(line: 1310, column: 5, scope: !6087)
!6087 = distinct !DILexicalBlock(scope: !1480, file: !1, line: 1310, column: 5)
!6088 = !DILocation(line: 1310, column: 5, scope: !1480)
!6089 = !DILocation(line: 1310, column: 5, scope: !6090)
!6090 = !DILexicalBlockFile(scope: !6087, file: !1, discriminator: 6)
!6091 = !DILocation(line: 1311, column: 5, scope: !6092)
!6092 = !DILexicalBlockFile(scope: !1484, file: !1, discriminator: 1)
!6093 = !DILocation(line: 1311, column: 5, scope: !1488)
!6094 = !DILocation(line: 1311, column: 5, scope: !1484)
!6095 = !DILocation(line: 1311, column: 5, scope: !6096)
!6096 = !DILexicalBlockFile(scope: !1487, file: !1, discriminator: 2)
!6097 = !DILocation(line: 1311, column: 5, scope: !6098)
!6098 = !DILexicalBlockFile(scope: !1486, file: !1, discriminator: 4)
!6099 = !DILocation(line: 1311, column: 5, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !1486, file: !1, line: 1311, column: 5)
!6101 = !DILocation(line: 1311, column: 5, scope: !1486)
!6102 = !DILocation(line: 1311, column: 5, scope: !6103)
!6103 = !DILexicalBlockFile(scope: !6100, file: !1, discriminator: 6)
!6104 = !DILocation(line: 1312, column: 5, scope: !6105)
!6105 = !DILexicalBlockFile(scope: !1490, file: !1, discriminator: 1)
!6106 = !DILocation(line: 1312, column: 5, scope: !1494)
!6107 = !DILocation(line: 1312, column: 5, scope: !1490)
!6108 = !DILocation(line: 1312, column: 5, scope: !6109)
!6109 = !DILexicalBlockFile(scope: !1493, file: !1, discriminator: 2)
!6110 = !DILocation(line: 1312, column: 5, scope: !6111)
!6111 = !DILexicalBlockFile(scope: !1492, file: !1, discriminator: 4)
!6112 = !DILocation(line: 1312, column: 5, scope: !6113)
!6113 = distinct !DILexicalBlock(scope: !1492, file: !1, line: 1312, column: 5)
!6114 = !DILocation(line: 1312, column: 5, scope: !1492)
!6115 = !DILocation(line: 1312, column: 5, scope: !6116)
!6116 = !DILexicalBlockFile(scope: !6113, file: !1, discriminator: 6)
!6117 = !DILocation(line: 1313, column: 5, scope: !6118)
!6118 = !DILexicalBlockFile(scope: !1496, file: !1, discriminator: 1)
!6119 = !DILocation(line: 1313, column: 5, scope: !1500)
!6120 = !DILocation(line: 1313, column: 5, scope: !1496)
!6121 = !DILocation(line: 1313, column: 5, scope: !6122)
!6122 = !DILexicalBlockFile(scope: !1499, file: !1, discriminator: 2)
!6123 = !DILocation(line: 1313, column: 5, scope: !6124)
!6124 = !DILexicalBlockFile(scope: !1498, file: !1, discriminator: 4)
!6125 = !DILocation(line: 1313, column: 5, scope: !6126)
!6126 = distinct !DILexicalBlock(scope: !1498, file: !1, line: 1313, column: 5)
!6127 = !DILocation(line: 1313, column: 5, scope: !1498)
!6128 = !DILocation(line: 1313, column: 5, scope: !6129)
!6129 = !DILexicalBlockFile(scope: !6126, file: !1, discriminator: 6)
!6130 = !DILocation(line: 1314, column: 32, scope: !1460)
!6131 = !DILocation(line: 1314, column: 12, scope: !1460)
!6132 = !DILocation(line: 1314, column: 5, scope: !1460)
!6133 = !DILocation(line: 1258, column: 39, scope: !1501)
!6134 = !DILocation(line: 1258, column: 55, scope: !1501)
!6135 = !DILocation(line: 1258, column: 71, scope: !1501)
!6136 = !DILocation(line: 1260, column: 15, scope: !1501)
!6137 = !DILocation(line: 1261, column: 26, scope: !1501)
!6138 = !DILocation(line: 1261, column: 16, scope: !1501)
!6139 = !DILocation(line: 60, column: 59, scope: !1785, inlinedAt: !6140)
!6140 = distinct !DILocation(line: 1263, column: 9, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !1501, file: !1, line: 1263, column: 9)
!6142 = !DILocation(line: 60, column: 75, scope: !1785, inlinedAt: !6140)
!6143 = !DILocation(line: 64, column: 28, scope: !4128, inlinedAt: !6140)
!6144 = !DILocation(line: 64, column: 43, scope: !4128, inlinedAt: !6140)
!6145 = !DILocation(line: 64, column: 10, scope: !4128, inlinedAt: !6140)
!6146 = !DILocation(line: 64, column: 9, scope: !1785, inlinedAt: !6140)
!6147 = !DILocation(line: 67, column: 17, scope: !1785, inlinedAt: !6140)
!6148 = !DILocation(line: 62, column: 15, scope: !1785, inlinedAt: !6140)
!6149 = !DILocation(line: 68, column: 16, scope: !1785, inlinedAt: !6140)
!6150 = !DILocation(line: 69, column: 5, scope: !1785, inlinedAt: !6140)
!6151 = !DILocation(line: 70, column: 5, scope: !4138, inlinedAt: !6140)
!6152 = !DILocation(line: 70, column: 5, scope: !1797, inlinedAt: !6140)
!6153 = !DILocation(line: 70, column: 5, scope: !1794, inlinedAt: !6140)
!6154 = !DILocation(line: 70, column: 5, scope: !4142, inlinedAt: !6140)
!6155 = !DILocation(line: 70, column: 5, scope: !4144, inlinedAt: !6140)
!6156 = !DILocation(line: 70, column: 5, scope: !1796, inlinedAt: !6140)
!6157 = !DILocation(line: 70, column: 5, scope: !4147, inlinedAt: !6140)
!6158 = !DILocation(line: 1263, column: 9, scope: !6141)
!6159 = !DILocation(line: 1266, column: 17, scope: !1513)
!6160 = !DILocation(line: 1266, column: 9, scope: !1501)
!6161 = !DILocation(line: 1267, column: 9, scope: !6162)
!6162 = !DILexicalBlockFile(scope: !1511, file: !1, discriminator: 1)
!6163 = !DILocation(line: 1267, column: 9, scope: !1517)
!6164 = !DILocation(line: 1267, column: 9, scope: !1511)
!6165 = !DILocation(line: 1267, column: 9, scope: !6166)
!6166 = !DILexicalBlockFile(scope: !1516, file: !1, discriminator: 2)
!6167 = !DILocation(line: 1267, column: 9, scope: !6168)
!6168 = !DILexicalBlockFile(scope: !1515, file: !1, discriminator: 4)
!6169 = !DILocation(line: 1267, column: 9, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !1515, file: !1, line: 1267, column: 9)
!6171 = !DILocation(line: 1267, column: 9, scope: !1515)
!6172 = !DILocation(line: 1267, column: 9, scope: !6173)
!6173 = !DILexicalBlockFile(scope: !6170, file: !1, discriminator: 6)
!6174 = !DILocation(line: 1268, column: 21, scope: !1512)
!6175 = !DILocation(line: 1268, column: 19, scope: !1512)
!6176 = !DILocation(line: 1269, column: 9, scope: !1512)
!6177 = !DILocation(line: 1271, column: 17, scope: !1523)
!6178 = !DILocation(line: 1271, column: 9, scope: !1501)
!6179 = !DILocation(line: 1272, column: 16, scope: !1522)
!6180 = !DILocation(line: 1273, column: 16, scope: !1522)
!6181 = !DILocation(line: 1274, column: 14, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !1522, file: !1, line: 1274, column: 13)
!6183 = !DILocation(line: 1274, column: 13, scope: !1522)
!6184 = !DILocation(line: 1277, column: 13, scope: !1521)
!6185 = !DILocation(line: 1277, column: 36, scope: !1521)
!6186 = !DILocation(line: 1277, column: 13, scope: !1522)
!6187 = !DILocation(line: 1279, column: 29, scope: !1520)
!6188 = !DILocation(line: 1279, column: 13, scope: !1520)
!6189 = !DILocation(line: 1280, column: 13, scope: !6190)
!6190 = !DILexicalBlockFile(scope: !1519, file: !1, discriminator: 1)
!6191 = !DILocation(line: 1280, column: 13, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !1519, file: !1, line: 1280, column: 13)
!6193 = !DILocation(line: 1280, column: 13, scope: !1519)
!6194 = !DILocation(line: 1280, column: 13, scope: !6195)
!6195 = !DILexicalBlockFile(scope: !6192, file: !1, discriminator: 3)
!6196 = !DILocation(line: 1284, column: 9, scope: !6197)
!6197 = !DILexicalBlockFile(scope: !1525, file: !1, discriminator: 1)
!6198 = !DILocation(line: 1284, column: 9, scope: !1529)
!6199 = !DILocation(line: 1284, column: 9, scope: !1525)
!6200 = !DILocation(line: 1284, column: 9, scope: !6201)
!6201 = !DILexicalBlockFile(scope: !1528, file: !1, discriminator: 2)
!6202 = !DILocation(line: 1284, column: 9, scope: !6203)
!6203 = !DILexicalBlockFile(scope: !1527, file: !1, discriminator: 4)
!6204 = !DILocation(line: 1284, column: 9, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !1527, file: !1, line: 1284, column: 9)
!6206 = !DILocation(line: 1284, column: 9, scope: !1527)
!6207 = !DILocation(line: 1284, column: 9, scope: !6208)
!6208 = !DILexicalBlockFile(scope: !6205, file: !1, discriminator: 6)
!6209 = !DILocation(line: 1285, column: 26, scope: !1522)
!6210 = !DILocation(line: 1285, column: 24, scope: !1522)
!6211 = !DILocation(line: 1286, column: 9, scope: !1522)
!6212 = !DILocation(line: 1288, column: 9, scope: !6213)
!6213 = !DILexicalBlockFile(scope: !1531, file: !1, discriminator: 1)
!6214 = !DILocation(line: 1288, column: 9, scope: !1535)
!6215 = !DILocation(line: 1288, column: 9, scope: !1531)
!6216 = !DILocation(line: 1288, column: 9, scope: !6217)
!6217 = !DILexicalBlockFile(scope: !1534, file: !1, discriminator: 2)
!6218 = !DILocation(line: 1288, column: 9, scope: !6219)
!6219 = !DILexicalBlockFile(scope: !1533, file: !1, discriminator: 4)
!6220 = !DILocation(line: 1288, column: 9, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !1533, file: !1, line: 1288, column: 9)
!6222 = !DILocation(line: 1288, column: 9, scope: !1533)
!6223 = !DILocation(line: 1288, column: 9, scope: !6224)
!6224 = !DILexicalBlockFile(scope: !6221, file: !1, discriminator: 6)
!6225 = !DILocation(line: 1289, column: 24, scope: !1522)
!6226 = !DILocation(line: 1289, column: 22, scope: !1522)
!6227 = !DILocation(line: 1290, column: 9, scope: !1522)
!6228 = !DILocation(line: 1292, column: 9, scope: !6229)
!6229 = !DILexicalBlockFile(scope: !1537, file: !1, discriminator: 1)
!6230 = !DILocation(line: 1292, column: 9, scope: !1541)
!6231 = !DILocation(line: 1292, column: 9, scope: !1537)
!6232 = !DILocation(line: 1292, column: 9, scope: !6233)
!6233 = !DILexicalBlockFile(scope: !1540, file: !1, discriminator: 2)
!6234 = !DILocation(line: 1292, column: 9, scope: !6235)
!6235 = !DILexicalBlockFile(scope: !1539, file: !1, discriminator: 4)
!6236 = !DILocation(line: 1292, column: 9, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !1539, file: !1, line: 1292, column: 9)
!6238 = !DILocation(line: 1292, column: 9, scope: !1539)
!6239 = !DILocation(line: 1292, column: 9, scope: !6240)
!6240 = !DILexicalBlockFile(scope: !6237, file: !1, discriminator: 6)
!6241 = !DILocation(line: 1293, column: 24, scope: !1522)
!6242 = !DILocation(line: 1293, column: 22, scope: !1522)
!6243 = !DILocation(line: 1294, column: 9, scope: !1522)
!6244 = !DILocation(line: 1296, column: 9, scope: !6245)
!6245 = !DILexicalBlockFile(scope: !1543, file: !1, discriminator: 1)
!6246 = !DILocation(line: 1296, column: 9, scope: !1547)
!6247 = !DILocation(line: 1296, column: 9, scope: !1543)
!6248 = !DILocation(line: 1296, column: 9, scope: !6249)
!6249 = !DILexicalBlockFile(scope: !1546, file: !1, discriminator: 2)
!6250 = !DILocation(line: 1296, column: 9, scope: !6251)
!6251 = !DILexicalBlockFile(scope: !1545, file: !1, discriminator: 4)
!6252 = !DILocation(line: 1296, column: 9, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !1545, file: !1, line: 1296, column: 9)
!6254 = !DILocation(line: 1296, column: 9, scope: !1545)
!6255 = !DILocation(line: 1296, column: 9, scope: !6256)
!6256 = !DILexicalBlockFile(scope: !6253, file: !1, discriminator: 6)
!6257 = !DILocation(line: 1297, column: 22, scope: !1522)
!6258 = !DILocation(line: 1297, column: 20, scope: !1522)
!6259 = !DILocation(line: 1298, column: 9, scope: !1522)
!6260 = !DILocation(line: 1300, column: 9, scope: !6261)
!6261 = !DILexicalBlockFile(scope: !1549, file: !1, discriminator: 1)
!6262 = !DILocation(line: 1300, column: 9, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !1549, file: !1, line: 1300, column: 9)
!6264 = !DILocation(line: 1300, column: 9, scope: !1549)
!6265 = !DILocation(line: 1300, column: 9, scope: !6266)
!6266 = !DILexicalBlockFile(scope: !6263, file: !1, discriminator: 3)
!6267 = !DILocation(line: 1303, column: 1, scope: !1501)
!6268 = !DILocation(line: 1463, column: 37, scope: !1550)
!6269 = !DILocation(line: 1474, column: 9, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !1550, file: !1, line: 1474, column: 9)
!6271 = !DILocation(line: 1474, column: 9, scope: !1550)
!6272 = !DILocation(line: 1475, column: 30, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6270, file: !1, line: 1474, column: 44)
!6274 = !DILocation(line: 1475, column: 16, scope: !6273)
!6275 = !DILocation(line: 1475, column: 9, scope: !6273)
!6276 = !DILocation(line: 110, column: 16, scope: !4460, inlinedAt: !6277)
!6277 = distinct !DILocation(line: 1477, column: 12, scope: !1550)
!6278 = !DILocation(line: 110, column: 9, scope: !4460, inlinedAt: !6277)
!6279 = !DILocation(line: 114, column: 16, scope: !4460, inlinedAt: !6277)
!6280 = !DILocation(line: 114, column: 9, scope: !4460, inlinedAt: !6277)
!6281 = !DILocation(line: 1478, column: 1, scope: !1550)
!6282 = !DILocation(line: 1761, column: 44, scope: !1576)
!6283 = !DILocation(line: 1763, column: 5, scope: !6284)
!6284 = !DILexicalBlockFile(scope: !1582, file: !1, discriminator: 1)
!6285 = !DILocation(line: 1763, column: 5, scope: !6286)
!6286 = !DILexicalBlockFile(scope: !6287, file: !1, discriminator: 2)
!6287 = distinct !DILexicalBlock(scope: !1582, file: !1, line: 1763, column: 5)
!6288 = !DILocation(line: 1763, column: 5, scope: !6289)
!6289 = !DILexicalBlockFile(scope: !1582, file: !1, discriminator: 4)
!6290 = !DILocation(line: 1752, column: 42, scope: !1623, inlinedAt: !6291)
!6291 = distinct !DILocation(line: 1764, column: 5, scope: !1576)
!6292 = !DILocation(line: 1754, column: 5, scope: !6293, inlinedAt: !6291)
!6293 = !DILexicalBlockFile(scope: !1629, file: !1, discriminator: 1)
!6294 = !DILocation(line: 1754, column: 5, scope: !1633, inlinedAt: !6291)
!6295 = !DILocation(line: 1754, column: 5, scope: !1629, inlinedAt: !6291)
!6296 = !DILocation(line: 1754, column: 5, scope: !6297, inlinedAt: !6291)
!6297 = !DILexicalBlockFile(scope: !1632, file: !1, discriminator: 2)
!6298 = !DILocation(line: 1754, column: 5, scope: !6299, inlinedAt: !6291)
!6299 = !DILexicalBlockFile(scope: !1631, file: !1, discriminator: 4)
!6300 = !DILocation(line: 1754, column: 5, scope: !6301, inlinedAt: !6291)
!6301 = distinct !DILexicalBlock(scope: !1631, file: !1, line: 1754, column: 5)
!6302 = !DILocation(line: 1754, column: 5, scope: !1631, inlinedAt: !6291)
!6303 = !DILocation(line: 1754, column: 5, scope: !6304, inlinedAt: !6291)
!6304 = !DILexicalBlockFile(scope: !6301, file: !1, discriminator: 6)
!6305 = !DILocation(line: 1764, column: 5, scope: !1576)
!6306 = !DILocation(line: 1755, column: 5, scope: !6307, inlinedAt: !6291)
!6307 = !DILexicalBlockFile(scope: !1635, file: !1, discriminator: 1)
!6308 = !DILocation(line: 1755, column: 5, scope: !1639, inlinedAt: !6291)
!6309 = !DILocation(line: 1755, column: 5, scope: !1635, inlinedAt: !6291)
!6310 = !DILocation(line: 1755, column: 5, scope: !6311, inlinedAt: !6291)
!6311 = !DILexicalBlockFile(scope: !1638, file: !1, discriminator: 2)
!6312 = !DILocation(line: 1755, column: 5, scope: !6313, inlinedAt: !6291)
!6313 = !DILexicalBlockFile(scope: !1637, file: !1, discriminator: 4)
!6314 = !DILocation(line: 1755, column: 5, scope: !6315, inlinedAt: !6291)
!6315 = distinct !DILexicalBlock(scope: !1637, file: !1, line: 1755, column: 5)
!6316 = !DILocation(line: 1755, column: 5, scope: !1637, inlinedAt: !6291)
!6317 = !DILocation(line: 1755, column: 5, scope: !6318, inlinedAt: !6291)
!6318 = !DILexicalBlockFile(scope: !6315, file: !1, discriminator: 6)
!6319 = !DILocation(line: 1756, column: 5, scope: !6320, inlinedAt: !6291)
!6320 = !DILexicalBlockFile(scope: !1641, file: !1, discriminator: 1)
!6321 = !DILocation(line: 1756, column: 5, scope: !1645, inlinedAt: !6291)
!6322 = !DILocation(line: 1756, column: 5, scope: !1641, inlinedAt: !6291)
!6323 = !DILocation(line: 1756, column: 5, scope: !6324, inlinedAt: !6291)
!6324 = !DILexicalBlockFile(scope: !1644, file: !1, discriminator: 2)
!6325 = !DILocation(line: 1756, column: 5, scope: !6326, inlinedAt: !6291)
!6326 = !DILexicalBlockFile(scope: !1643, file: !1, discriminator: 4)
!6327 = !DILocation(line: 1756, column: 5, scope: !6328, inlinedAt: !6291)
!6328 = distinct !DILexicalBlock(scope: !1643, file: !1, line: 1756, column: 5)
!6329 = !DILocation(line: 1756, column: 5, scope: !1643, inlinedAt: !6291)
!6330 = !DILocation(line: 1756, column: 5, scope: !6331, inlinedAt: !6291)
!6331 = !DILexicalBlockFile(scope: !6328, file: !1, discriminator: 6)
!6332 = !DILocation(line: 1757, column: 32, scope: !1623, inlinedAt: !6291)
!6333 = !DILocation(line: 1757, column: 12, scope: !1623, inlinedAt: !6291)
!6334 = !DILocation(line: 1765, column: 5, scope: !1576)
!6335 = !DILocation(line: 1765, column: 20, scope: !1576)
!6336 = !DILocation(line: 1765, column: 28, scope: !1576)
!6337 = !DILocation(line: 1766, column: 1, scope: !1576)
!6338 = !DILocation(line: 1833, column: 34, scope: !1583)
!6339 = !DILocation(line: 1836, column: 15, scope: !1583)
!6340 = !DILocation(line: 1837, column: 15, scope: !1583)
!6341 = !DILocation(line: 1838, column: 15, scope: !1583)
!6342 = !DILocation(line: 1840, column: 17, scope: !6343)
!6343 = distinct !DILexicalBlock(scope: !1583, file: !1, line: 1840, column: 9)
!6344 = !DILocation(line: 1840, column: 10, scope: !6343)
!6345 = !DILocation(line: 1840, column: 9, scope: !1583)
!6346 = !DILocation(line: 1842, column: 16, scope: !6343)
!6347 = !DILocation(line: 1842, column: 9, scope: !6343)
!6348 = !DILocation(line: 1846, column: 38, scope: !1583)
!6349 = !DILocation(line: 1846, column: 18, scope: !1583)
!6350 = !DILocation(line: 1847, column: 20, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !1583, file: !1, line: 1847, column: 9)
!6352 = !DILocation(line: 1847, column: 9, scope: !1583)
!6353 = !DILocation(line: 1849, column: 40, scope: !1583)
!6354 = !DILocation(line: 1849, column: 20, scope: !1583)
!6355 = !DILocation(line: 1850, column: 22, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !1583, file: !1, line: 1850, column: 9)
!6357 = !DILocation(line: 1850, column: 9, scope: !1583)
!6358 = !DILocation(line: 1853, column: 16, scope: !1592)
!6359 = !DILocation(line: 1873, column: 20, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !1592, file: !1, line: 1869, column: 10)
!6361 = !DILocation(line: 1853, column: 24, scope: !1592)
!6362 = !DILocation(line: 1853, column: 22, scope: !1592)
!6363 = !DILocation(line: 1853, column: 70, scope: !1592)
!6364 = !DILocation(line: 1853, column: 74, scope: !1592)
!6365 = !DILocation(line: 1853, column: 60, scope: !1592)
!6366 = !DILocation(line: 1854, column: 27, scope: !1591)
!6367 = !DILocation(line: 1854, column: 17, scope: !1591)
!6368 = !DILocation(line: 1856, column: 21, scope: !6369)
!6369 = distinct !DILexicalBlock(scope: !1591, file: !1, line: 1856, column: 13)
!6370 = !DILocation(line: 1858, column: 26, scope: !6371)
!6371 = distinct !DILexicalBlock(scope: !6369, file: !1, line: 1858, column: 18)
!6372 = !DILocation(line: 1859, column: 13, scope: !6371)
!6373 = !DILocation(line: 1856, column: 13, scope: !1591)
!6374 = !DILocation(line: 1866, column: 20, scope: !1591)
!6375 = !DILocation(line: 1862, column: 18, scope: !1591)
!6376 = !DILocation(line: 1868, column: 5, scope: !1591)
!6377 = !DILocation(line: 1874, column: 23, scope: !6360)
!6378 = !DILocation(line: 1870, column: 18, scope: !6360)
!6379 = !DILocation(line: 1878, column: 5, scope: !6380)
!6380 = !DILexicalBlockFile(scope: !1595, file: !1, discriminator: 1)
!6381 = !DILocation(line: 1878, column: 5, scope: !6382)
!6382 = !DILexicalBlockFile(scope: !1597, file: !1, discriminator: 4)
!6383 = !DILocation(line: 1878, column: 5, scope: !6384)
!6384 = distinct !DILexicalBlock(scope: !1597, file: !1, line: 1878, column: 5)
!6385 = !DILocation(line: 1878, column: 5, scope: !1597)
!6386 = !DILocation(line: 1878, column: 5, scope: !6387)
!6387 = !DILexicalBlockFile(scope: !6384, file: !1, discriminator: 6)
!6388 = !DILocation(line: 1879, column: 5, scope: !1600)
!6389 = !DILocation(line: 1879, column: 5, scope: !6390)
!6390 = distinct !DILexicalBlock(scope: !1602, file: !1, line: 1879, column: 5)
!6391 = !DILocation(line: 1879, column: 5, scope: !1602)
!6392 = !DILocation(line: 1879, column: 5, scope: !6393)
!6393 = !DILexicalBlockFile(scope: !6390, file: !1, discriminator: 6)
!6394 = !DILocation(line: 1881, column: 1, scope: !1583)
!6395 = !DILocation(line: 1769, column: 45, scope: !1604)
!6396 = !DILocation(line: 1769, column: 61, scope: !1604)
!6397 = !DILocation(line: 1769, column: 74, scope: !1604)
!6398 = !DILocation(line: 1771, column: 5, scope: !6399)
!6399 = !DILexicalBlockFile(scope: !1613, file: !1, discriminator: 1)
!6400 = !DILocation(line: 1771, column: 5, scope: !1614)
!6401 = !DILocation(line: 1771, column: 5, scope: !6402)
!6402 = !DILexicalBlockFile(scope: !1612, file: !1, discriminator: 2)
!6403 = !DILocation(line: 1771, column: 5, scope: !6404)
!6404 = distinct !DILexicalBlock(scope: !1612, file: !1, line: 1771, column: 5)
!6405 = !DILocation(line: 1772, column: 5, scope: !6406)
!6406 = !DILexicalBlockFile(scope: !1617, file: !1, discriminator: 1)
!6407 = !DILocation(line: 1772, column: 5, scope: !1618)
!6408 = !DILocation(line: 1772, column: 5, scope: !6409)
!6409 = !DILexicalBlockFile(scope: !1616, file: !1, discriminator: 2)
!6410 = !DILocation(line: 1772, column: 5, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !1616, file: !1, line: 1772, column: 5)
!6412 = !DILocation(line: 1773, column: 5, scope: !6413)
!6413 = !DILexicalBlockFile(scope: !1621, file: !1, discriminator: 1)
!6414 = !DILocation(line: 1773, column: 5, scope: !1622)
!6415 = !DILocation(line: 1773, column: 5, scope: !6416)
!6416 = !DILexicalBlockFile(scope: !1620, file: !1, discriminator: 2)
!6417 = !DILocation(line: 1773, column: 5, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !1620, file: !1, line: 1773, column: 5)
!6419 = !DILocation(line: 95, column: 63, scope: !873, inlinedAt: !6420)
!6420 = distinct !DILocation(line: 1774, column: 12, scope: !1604)
!6421 = !DILocation(line: 95, column: 76, scope: !873, inlinedAt: !6420)
!6422 = !DILocation(line: 97, column: 5, scope: !4472, inlinedAt: !6420)
!6423 = !DILocation(line: 97, column: 5, scope: !883, inlinedAt: !6420)
!6424 = !DILocation(line: 97, column: 5, scope: !4475, inlinedAt: !6420)
!6425 = !DILocation(line: 97, column: 5, scope: !4477, inlinedAt: !6420)
!6426 = !DILocation(line: 1774, column: 12, scope: !1604)
!6427 = !DILocation(line: 98, column: 5, scope: !4479, inlinedAt: !6420)
!6428 = !DILocation(line: 98, column: 5, scope: !887, inlinedAt: !6420)
!6429 = !DILocation(line: 98, column: 5, scope: !4482, inlinedAt: !6420)
!6430 = !DILocation(line: 98, column: 5, scope: !4484, inlinedAt: !6420)
!6431 = !DILocation(line: 99, column: 5, scope: !4486, inlinedAt: !6420)
!6432 = !DILocation(line: 99, column: 5, scope: !891, inlinedAt: !6420)
!6433 = !DILocation(line: 99, column: 5, scope: !4489, inlinedAt: !6420)
!6434 = !DILocation(line: 99, column: 5, scope: !4491, inlinedAt: !6420)
!6435 = !DILocation(line: 100, column: 5, scope: !4493, inlinedAt: !6420)
!6436 = !DILocation(line: 100, column: 5, scope: !895, inlinedAt: !6420)
!6437 = !DILocation(line: 100, column: 5, scope: !4496, inlinedAt: !6420)
!6438 = !DILocation(line: 100, column: 5, scope: !4498, inlinedAt: !6420)
!6439 = !DILocation(line: 101, column: 5, scope: !4500, inlinedAt: !6420)
!6440 = !DILocation(line: 101, column: 5, scope: !899, inlinedAt: !6420)
!6441 = !DILocation(line: 101, column: 5, scope: !4503, inlinedAt: !6420)
!6442 = !DILocation(line: 101, column: 5, scope: !4505, inlinedAt: !6420)
!6443 = !DILocation(line: 102, column: 5, scope: !873, inlinedAt: !6420)
!6444 = !DILocation(line: 1775, column: 1, scope: !1604)
!6445 = !DILocation(line: 1752, column: 42, scope: !1623)
!6446 = !DILocation(line: 1754, column: 5, scope: !6293)
!6447 = !DILocation(line: 1754, column: 5, scope: !1633)
!6448 = !DILocation(line: 1754, column: 5, scope: !1629)
!6449 = !DILocation(line: 1754, column: 5, scope: !6297)
!6450 = !DILocation(line: 1754, column: 5, scope: !6299)
!6451 = !DILocation(line: 1754, column: 5, scope: !6301)
!6452 = !DILocation(line: 1754, column: 5, scope: !1631)
!6453 = !DILocation(line: 1754, column: 5, scope: !6304)
!6454 = !DILocation(line: 1755, column: 5, scope: !6307)
!6455 = !DILocation(line: 1755, column: 5, scope: !1639)
!6456 = !DILocation(line: 1755, column: 5, scope: !1635)
!6457 = !DILocation(line: 1755, column: 5, scope: !6311)
!6458 = !DILocation(line: 1755, column: 5, scope: !6313)
!6459 = !DILocation(line: 1755, column: 5, scope: !6315)
!6460 = !DILocation(line: 1755, column: 5, scope: !1637)
!6461 = !DILocation(line: 1755, column: 5, scope: !6318)
!6462 = !DILocation(line: 1756, column: 5, scope: !6320)
!6463 = !DILocation(line: 1756, column: 5, scope: !1645)
!6464 = !DILocation(line: 1756, column: 5, scope: !1641)
!6465 = !DILocation(line: 1756, column: 5, scope: !6324)
!6466 = !DILocation(line: 1756, column: 5, scope: !6326)
!6467 = !DILocation(line: 1756, column: 5, scope: !6328)
!6468 = !DILocation(line: 1756, column: 5, scope: !1643)
!6469 = !DILocation(line: 1756, column: 5, scope: !6331)
!6470 = !DILocation(line: 1757, column: 32, scope: !1623)
!6471 = !DILocation(line: 1757, column: 12, scope: !1623)
!6472 = !DILocation(line: 1757, column: 5, scope: !1623)
!6473 = !DILocation(line: 1797, column: 35, scope: !1646)
!6474 = !DILocation(line: 1797, column: 51, scope: !1646)
!6475 = !DILocation(line: 1797, column: 67, scope: !1646)
!6476 = !DILocation(line: 60, column: 59, scope: !1785, inlinedAt: !6477)
!6477 = distinct !DILocation(line: 1801, column: 9, scope: !6478)
!6478 = distinct !DILexicalBlock(scope: !1646, file: !1, line: 1801, column: 9)
!6479 = !DILocation(line: 60, column: 75, scope: !1785, inlinedAt: !6477)
!6480 = !DILocation(line: 64, column: 28, scope: !4128, inlinedAt: !6477)
!6481 = !DILocation(line: 64, column: 43, scope: !4128, inlinedAt: !6477)
!6482 = !DILocation(line: 64, column: 10, scope: !4128, inlinedAt: !6477)
!6483 = !DILocation(line: 64, column: 9, scope: !1785, inlinedAt: !6477)
!6484 = !DILocation(line: 67, column: 17, scope: !1785, inlinedAt: !6477)
!6485 = !DILocation(line: 62, column: 15, scope: !1785, inlinedAt: !6477)
!6486 = !DILocation(line: 68, column: 16, scope: !1785, inlinedAt: !6477)
!6487 = !DILocation(line: 69, column: 5, scope: !1785, inlinedAt: !6477)
!6488 = !DILocation(line: 70, column: 5, scope: !4138, inlinedAt: !6477)
!6489 = !DILocation(line: 70, column: 5, scope: !1797, inlinedAt: !6477)
!6490 = !DILocation(line: 70, column: 5, scope: !1794, inlinedAt: !6477)
!6491 = !DILocation(line: 70, column: 5, scope: !4142, inlinedAt: !6477)
!6492 = !DILocation(line: 70, column: 5, scope: !4144, inlinedAt: !6477)
!6493 = !DILocation(line: 70, column: 5, scope: !1796, inlinedAt: !6477)
!6494 = !DILocation(line: 70, column: 5, scope: !4147, inlinedAt: !6477)
!6495 = !DILocation(line: 1801, column: 9, scope: !6478)
!6496 = !DILocation(line: 1806, column: 5, scope: !6497)
!6497 = !DILexicalBlockFile(scope: !1653, file: !1, discriminator: 1)
!6498 = !DILocation(line: 1806, column: 5, scope: !1657)
!6499 = !DILocation(line: 1806, column: 5, scope: !1653)
!6500 = !DILocation(line: 1806, column: 5, scope: !6501)
!6501 = !DILexicalBlockFile(scope: !1656, file: !1, discriminator: 2)
!6502 = !DILocation(line: 1806, column: 5, scope: !6503)
!6503 = !DILexicalBlockFile(scope: !1655, file: !1, discriminator: 4)
!6504 = !DILocation(line: 1806, column: 5, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !1655, file: !1, line: 1806, column: 5)
!6506 = !DILocation(line: 1806, column: 5, scope: !1655)
!6507 = !DILocation(line: 1806, column: 5, scope: !6508)
!6508 = !DILexicalBlockFile(scope: !6505, file: !1, discriminator: 6)
!6509 = !DILocation(line: 1807, column: 5, scope: !6510)
!6510 = !DILexicalBlockFile(scope: !1659, file: !1, discriminator: 1)
!6511 = !DILocation(line: 1807, column: 5, scope: !1663)
!6512 = !DILocation(line: 1807, column: 5, scope: !1659)
!6513 = !DILocation(line: 1807, column: 5, scope: !6514)
!6514 = !DILexicalBlockFile(scope: !1662, file: !1, discriminator: 2)
!6515 = !DILocation(line: 1807, column: 5, scope: !6516)
!6516 = !DILexicalBlockFile(scope: !1661, file: !1, discriminator: 4)
!6517 = !DILocation(line: 1807, column: 5, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !1661, file: !1, line: 1807, column: 5)
!6519 = !DILocation(line: 1807, column: 5, scope: !1661)
!6520 = !DILocation(line: 1807, column: 5, scope: !6521)
!6521 = !DILexicalBlockFile(scope: !6518, file: !1, discriminator: 6)
!6522 = !DILocation(line: 1808, column: 5, scope: !6523)
!6523 = !DILexicalBlockFile(scope: !1665, file: !1, discriminator: 1)
!6524 = !DILocation(line: 1808, column: 5, scope: !1669)
!6525 = !DILocation(line: 1808, column: 5, scope: !1665)
!6526 = !DILocation(line: 1808, column: 5, scope: !6527)
!6527 = !DILexicalBlockFile(scope: !1668, file: !1, discriminator: 2)
!6528 = !DILocation(line: 1808, column: 5, scope: !6529)
!6529 = !DILexicalBlockFile(scope: !1667, file: !1, discriminator: 4)
!6530 = !DILocation(line: 1808, column: 5, scope: !6531)
!6531 = distinct !DILexicalBlock(scope: !1667, file: !1, line: 1808, column: 5)
!6532 = !DILocation(line: 1808, column: 5, scope: !1667)
!6533 = !DILocation(line: 1808, column: 5, scope: !6534)
!6534 = !DILexicalBlockFile(scope: !6531, file: !1, discriminator: 6)
!6535 = !DILocation(line: 1813, column: 15, scope: !6536)
!6536 = distinct !DILexicalBlock(scope: !1646, file: !1, line: 1810, column: 9)
!6537 = !DILocation(line: 1814, column: 15, scope: !6536)
!6538 = !DILocation(line: 1810, column: 10, scope: !6536)
!6539 = !DILocation(line: 1810, column: 9, scope: !1646)
!6540 = !DILocation(line: 1816, column: 53, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !6536, file: !1, line: 1815, column: 41)
!6542 = !DILocation(line: 1817, column: 11, scope: !6541)
!6543 = !DILocation(line: 1816, column: 39, scope: !6541)
!6544 = !DILocation(line: 1820, column: 9, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !1646, file: !1, line: 1820, column: 9)
!6546 = !DILocation(line: 1820, column: 9, scope: !6547)
!6547 = !DILexicalBlockFile(scope: !6545, file: !1, discriminator: 2)
!6548 = !DILocation(line: 1820, column: 9, scope: !1646)
!6549 = !DILocation(line: 1826, column: 5, scope: !1646)
!6550 = !DILocation(line: 1821, column: 23, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6545, file: !1, line: 1820, column: 44)
!6552 = !DILocation(line: 1822, column: 9, scope: !6551)
!6553 = !DILocation(line: 1825, column: 5, scope: !1646)
!6554 = !DILocation(line: 1827, column: 5, scope: !1646)
!6555 = !DILocation(line: 1829, column: 5, scope: !1646)
!6556 = !DILocation(line: 1830, column: 1, scope: !1646)
!6557 = !DILocation(line: 1955, column: 34, scope: !1670)
!6558 = !DILocation(line: 1958, column: 15, scope: !1670)
!6559 = !DILocation(line: 1959, column: 15, scope: !1670)
!6560 = !DILocation(line: 1960, column: 15, scope: !1670)
!6561 = !DILocation(line: 1962, column: 17, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !1670, file: !1, line: 1962, column: 9)
!6563 = !DILocation(line: 1962, column: 10, scope: !6562)
!6564 = !DILocation(line: 1962, column: 9, scope: !1670)
!6565 = !DILocation(line: 1964, column: 16, scope: !6562)
!6566 = !DILocation(line: 1964, column: 9, scope: !6562)
!6567 = !DILocation(line: 1968, column: 38, scope: !1670)
!6568 = !DILocation(line: 1968, column: 18, scope: !1670)
!6569 = !DILocation(line: 1969, column: 20, scope: !6570)
!6570 = distinct !DILexicalBlock(scope: !1670, file: !1, line: 1969, column: 9)
!6571 = !DILocation(line: 1969, column: 9, scope: !1670)
!6572 = !DILocation(line: 1971, column: 40, scope: !1670)
!6573 = !DILocation(line: 1971, column: 20, scope: !1670)
!6574 = !DILocation(line: 1972, column: 22, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !1670, file: !1, line: 1972, column: 9)
!6576 = !DILocation(line: 1972, column: 9, scope: !1670)
!6577 = !DILocation(line: 1975, column: 16, scope: !1679)
!6578 = !DILocation(line: 1988, column: 20, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !1679, file: !1, line: 1984, column: 10)
!6580 = !DILocation(line: 1975, column: 24, scope: !1679)
!6581 = !DILocation(line: 1975, column: 22, scope: !1679)
!6582 = !DILocation(line: 1975, column: 66, scope: !1679)
!6583 = !DILocation(line: 1975, column: 70, scope: !1679)
!6584 = !DILocation(line: 1975, column: 56, scope: !1679)
!6585 = !DILocation(line: 1976, column: 26, scope: !1678)
!6586 = !DILocation(line: 1976, column: 13, scope: !1678)
!6587 = !DILocation(line: 1977, column: 18, scope: !1678)
!6588 = !DILocation(line: 1983, column: 5, scope: !1678)
!6589 = !DILocation(line: 1989, column: 23, scope: !6579)
!6590 = !DILocation(line: 1985, column: 18, scope: !6579)
!6591 = !DILocation(line: 1994, column: 5, scope: !6592)
!6592 = !DILexicalBlockFile(scope: !1681, file: !1, discriminator: 1)
!6593 = !DILocation(line: 1994, column: 5, scope: !6594)
!6594 = !DILexicalBlockFile(scope: !1683, file: !1, discriminator: 4)
!6595 = !DILocation(line: 1994, column: 5, scope: !6596)
!6596 = distinct !DILexicalBlock(scope: !1683, file: !1, line: 1994, column: 5)
!6597 = !DILocation(line: 1994, column: 5, scope: !1683)
!6598 = !DILocation(line: 1994, column: 5, scope: !6599)
!6599 = !DILexicalBlockFile(scope: !6596, file: !1, discriminator: 6)
!6600 = !DILocation(line: 1995, column: 5, scope: !1686)
!6601 = !DILocation(line: 1995, column: 5, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !1688, file: !1, line: 1995, column: 5)
!6603 = !DILocation(line: 1995, column: 5, scope: !1688)
!6604 = !DILocation(line: 1995, column: 5, scope: !6605)
!6605 = !DILexicalBlockFile(scope: !6602, file: !1, discriminator: 6)
!6606 = !DILocation(line: 1997, column: 1, scope: !1670)
!6607 = !DILocation(line: 1912, column: 35, scope: !1690)
!6608 = !DILocation(line: 1912, column: 51, scope: !1690)
!6609 = !DILocation(line: 1912, column: 67, scope: !1690)
!6610 = !DILocation(line: 1915, column: 5, scope: !1690)
!6611 = !DILocation(line: 1916, column: 5, scope: !1690)
!6612 = !DILocation(line: 60, column: 59, scope: !1785, inlinedAt: !6613)
!6613 = distinct !DILocation(line: 1918, column: 9, scope: !6614)
!6614 = distinct !DILexicalBlock(scope: !1690, file: !1, line: 1918, column: 9)
!6615 = !DILocation(line: 60, column: 75, scope: !1785, inlinedAt: !6613)
!6616 = !DILocation(line: 64, column: 28, scope: !4128, inlinedAt: !6613)
!6617 = !DILocation(line: 64, column: 43, scope: !4128, inlinedAt: !6613)
!6618 = !DILocation(line: 64, column: 10, scope: !4128, inlinedAt: !6613)
!6619 = !DILocation(line: 64, column: 9, scope: !1785, inlinedAt: !6613)
!6620 = !DILocation(line: 67, column: 17, scope: !1785, inlinedAt: !6613)
!6621 = !DILocation(line: 62, column: 15, scope: !1785, inlinedAt: !6613)
!6622 = !DILocation(line: 68, column: 16, scope: !1785, inlinedAt: !6613)
!6623 = !DILocation(line: 69, column: 5, scope: !1785, inlinedAt: !6613)
!6624 = !DILocation(line: 70, column: 5, scope: !4138, inlinedAt: !6613)
!6625 = !DILocation(line: 70, column: 5, scope: !1797, inlinedAt: !6613)
!6626 = !DILocation(line: 70, column: 5, scope: !1794, inlinedAt: !6613)
!6627 = !DILocation(line: 70, column: 5, scope: !4142, inlinedAt: !6613)
!6628 = !DILocation(line: 70, column: 5, scope: !4144, inlinedAt: !6613)
!6629 = !DILocation(line: 70, column: 5, scope: !1796, inlinedAt: !6613)
!6630 = !DILocation(line: 70, column: 5, scope: !4147, inlinedAt: !6613)
!6631 = !DILocation(line: 1918, column: 9, scope: !6614)
!6632 = !DILocation(line: 1923, column: 5, scope: !6633)
!6633 = !DILexicalBlockFile(scope: !1699, file: !1, discriminator: 1)
!6634 = !DILocation(line: 1923, column: 5, scope: !1703)
!6635 = !DILocation(line: 1923, column: 5, scope: !1699)
!6636 = !DILocation(line: 1923, column: 5, scope: !6637)
!6637 = !DILexicalBlockFile(scope: !1702, file: !1, discriminator: 2)
!6638 = !DILocation(line: 1923, column: 5, scope: !6639)
!6639 = !DILexicalBlockFile(scope: !1701, file: !1, discriminator: 4)
!6640 = !DILocation(line: 1923, column: 5, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !1701, file: !1, line: 1923, column: 5)
!6642 = !DILocation(line: 1923, column: 5, scope: !1701)
!6643 = !DILocation(line: 1923, column: 5, scope: !6644)
!6644 = !DILexicalBlockFile(scope: !6641, file: !1, discriminator: 6)
!6645 = !DILocation(line: 1924, column: 5, scope: !6646)
!6646 = !DILexicalBlockFile(scope: !1705, file: !1, discriminator: 1)
!6647 = !DILocation(line: 1924, column: 5, scope: !1709)
!6648 = !DILocation(line: 1924, column: 5, scope: !1705)
!6649 = !DILocation(line: 1924, column: 5, scope: !6650)
!6650 = !DILexicalBlockFile(scope: !1708, file: !1, discriminator: 2)
!6651 = !DILocation(line: 1924, column: 5, scope: !6652)
!6652 = !DILexicalBlockFile(scope: !1707, file: !1, discriminator: 4)
!6653 = !DILocation(line: 1924, column: 5, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !1707, file: !1, line: 1924, column: 5)
!6655 = !DILocation(line: 1924, column: 5, scope: !1707)
!6656 = !DILocation(line: 1924, column: 5, scope: !6657)
!6657 = !DILexicalBlockFile(scope: !6654, file: !1, discriminator: 6)
!6658 = !DILocation(line: 1925, column: 5, scope: !6659)
!6659 = !DILexicalBlockFile(scope: !1711, file: !1, discriminator: 1)
!6660 = !DILocation(line: 1925, column: 5, scope: !1715)
!6661 = !DILocation(line: 1925, column: 5, scope: !1711)
!6662 = !DILocation(line: 1925, column: 5, scope: !6663)
!6663 = !DILexicalBlockFile(scope: !1714, file: !1, discriminator: 2)
!6664 = !DILocation(line: 1925, column: 5, scope: !6665)
!6665 = !DILexicalBlockFile(scope: !1713, file: !1, discriminator: 4)
!6666 = !DILocation(line: 1925, column: 5, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !1713, file: !1, line: 1925, column: 5)
!6668 = !DILocation(line: 1925, column: 5, scope: !1713)
!6669 = !DILocation(line: 1925, column: 5, scope: !6670)
!6670 = !DILexicalBlockFile(scope: !6667, file: !1, discriminator: 6)
!6671 = !DILocation(line: 1930, column: 16, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !1690, file: !1, line: 1927, column: 9)
!6673 = !DILocation(line: 1931, column: 16, scope: !6672)
!6674 = !DILocation(line: 1927, column: 10, scope: !6672)
!6675 = !DILocation(line: 1927, column: 9, scope: !1690)
!6676 = !DILocation(line: 1933, column: 56, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6672, file: !1, line: 1932, column: 42)
!6678 = !DILocation(line: 1934, column: 14, scope: !6677)
!6679 = !DILocation(line: 1933, column: 42, scope: !6677)
!6680 = !DILocation(line: 1937, column: 10, scope: !6681)
!6681 = distinct !DILexicalBlock(scope: !1690, file: !1, line: 1937, column: 9)
!6682 = !DILocation(line: 1937, column: 9, scope: !1690)
!6683 = !DILocation(line: 1915, column: 17, scope: !1690)
!6684 = !DILocation(line: 1916, column: 16, scope: !1690)
!6685 = !DILocation(line: 1938, column: 13, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !6687, file: !1, line: 1938, column: 13)
!6687 = distinct !DILexicalBlock(scope: !6681, file: !1, line: 1937, column: 38)
!6688 = !DILocation(line: 1938, column: 13, scope: !6687)
!6689 = !DILocation(line: 1939, column: 55, scope: !6690)
!6690 = distinct !DILexicalBlock(scope: !6686, file: !1, line: 1938, column: 78)
!6691 = !DILocation(line: 1940, column: 13, scope: !6690)
!6692 = !DILocation(line: 1939, column: 41, scope: !6690)
!6693 = !DILocation(line: 1942, column: 49, scope: !6687)
!6694 = !DILocation(line: 1942, column: 55, scope: !6687)
!6695 = !DILocation(line: 1942, column: 23, scope: !6687)
!6696 = !DILocation(line: 1942, column: 21, scope: !6687)
!6697 = !DILocation(line: 1943, column: 5, scope: !6687)
!6698 = !DILocation(line: 1945, column: 9, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !6681, file: !1, line: 1944, column: 10)
!6700 = !DILocation(line: 1948, column: 5, scope: !1690)
!6701 = !DILocation(line: 1949, column: 5, scope: !1690)
!6702 = !DILocation(line: 1951, column: 5, scope: !1690)
!6703 = !DILocation(line: 1952, column: 1, scope: !1690)
!6704 = !DILocation(line: 2054, column: 37, scope: !1716)
!6705 = !DILocation(line: 2057, column: 15, scope: !1716)
!6706 = !DILocation(line: 2058, column: 15, scope: !1716)
!6707 = !DILocation(line: 2060, column: 17, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !1716, file: !1, line: 2060, column: 9)
!6709 = !DILocation(line: 2060, column: 10, scope: !6708)
!6710 = !DILocation(line: 2060, column: 9, scope: !1716)
!6711 = !DILocation(line: 2062, column: 16, scope: !6708)
!6712 = !DILocation(line: 2062, column: 9, scope: !6708)
!6713 = !DILocation(line: 2066, column: 38, scope: !1716)
!6714 = !DILocation(line: 2066, column: 18, scope: !1716)
!6715 = !DILocation(line: 2067, column: 20, scope: !6716)
!6716 = distinct !DILexicalBlock(scope: !1716, file: !1, line: 2067, column: 9)
!6717 = !DILocation(line: 2067, column: 9, scope: !1716)
!6718 = !DILocation(line: 2070, column: 16, scope: !1724)
!6719 = !DILocation(line: 2088, column: 20, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !1724, file: !1, line: 2085, column: 12)
!6721 = !DILocation(line: 2070, column: 24, scope: !1724)
!6722 = !DILocation(line: 2070, column: 22, scope: !1724)
!6723 = !DILocation(line: 2070, column: 70, scope: !1724)
!6724 = !DILocation(line: 2070, column: 74, scope: !1724)
!6725 = !DILocation(line: 2070, column: 60, scope: !1724)
!6726 = !DILocation(line: 2071, column: 27, scope: !1723)
!6727 = !DILocation(line: 2071, column: 17, scope: !1723)
!6728 = !DILocation(line: 2073, column: 21, scope: !6729)
!6729 = distinct !DILexicalBlock(scope: !1723, file: !1, line: 2073, column: 13)
!6730 = !DILocation(line: 2075, column: 26, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6729, file: !1, line: 2075, column: 18)
!6732 = !DILocation(line: 2076, column: 13, scope: !6731)
!6733 = !DILocation(line: 2073, column: 13, scope: !1723)
!6734 = !DILocation(line: 2082, column: 20, scope: !1723)
!6735 = !DILocation(line: 2079, column: 18, scope: !1723)
!6736 = !DILocation(line: 2085, column: 5, scope: !1723)
!6737 = !DILocation(line: 2089, column: 23, scope: !6720)
!6738 = !DILocation(line: 2086, column: 18, scope: !6720)
!6739 = !DILocation(line: 2094, column: 5, scope: !6740)
!6740 = !DILexicalBlockFile(scope: !1727, file: !1, discriminator: 1)
!6741 = !DILocation(line: 2094, column: 5, scope: !6742)
!6742 = !DILexicalBlockFile(scope: !1729, file: !1, discriminator: 4)
!6743 = !DILocation(line: 2094, column: 5, scope: !6744)
!6744 = distinct !DILexicalBlock(scope: !1729, file: !1, line: 2094, column: 5)
!6745 = !DILocation(line: 2094, column: 5, scope: !1729)
!6746 = !DILocation(line: 2094, column: 5, scope: !6747)
!6747 = !DILexicalBlockFile(scope: !6744, file: !1, discriminator: 6)
!6748 = !DILocation(line: 2096, column: 1, scope: !1716)
!6749 = !DILocation(line: 2028, column: 50, scope: !1731)
!6750 = !DILocation(line: 2028, column: 66, scope: !1731)
!6751 = !DILocation(line: 2029, column: 38, scope: !1731)
!6752 = !DILocation(line: 60, column: 59, scope: !1785, inlinedAt: !6753)
!6753 = distinct !DILocation(line: 2031, column: 9, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !1731, file: !1, line: 2031, column: 9)
!6755 = !DILocation(line: 60, column: 75, scope: !1785, inlinedAt: !6753)
!6756 = !DILocation(line: 64, column: 28, scope: !4128, inlinedAt: !6753)
!6757 = !DILocation(line: 64, column: 43, scope: !4128, inlinedAt: !6753)
!6758 = !DILocation(line: 64, column: 10, scope: !4128, inlinedAt: !6753)
!6759 = !DILocation(line: 64, column: 9, scope: !1785, inlinedAt: !6753)
!6760 = !DILocation(line: 67, column: 17, scope: !1785, inlinedAt: !6753)
!6761 = !DILocation(line: 62, column: 15, scope: !1785, inlinedAt: !6753)
!6762 = !DILocation(line: 68, column: 16, scope: !1785, inlinedAt: !6753)
!6763 = !DILocation(line: 69, column: 5, scope: !1785, inlinedAt: !6753)
!6764 = !DILocation(line: 70, column: 5, scope: !4138, inlinedAt: !6753)
!6765 = !DILocation(line: 70, column: 5, scope: !1797, inlinedAt: !6753)
!6766 = !DILocation(line: 70, column: 5, scope: !1794, inlinedAt: !6753)
!6767 = !DILocation(line: 70, column: 5, scope: !4142, inlinedAt: !6753)
!6768 = !DILocation(line: 70, column: 5, scope: !4144, inlinedAt: !6753)
!6769 = !DILocation(line: 70, column: 5, scope: !1796, inlinedAt: !6753)
!6770 = !DILocation(line: 70, column: 5, scope: !4147, inlinedAt: !6753)
!6771 = !DILocation(line: 2031, column: 9, scope: !6754)
!6772 = !DILocation(line: 2034, column: 5, scope: !6773)
!6773 = !DILexicalBlockFile(scope: !1739, file: !1, discriminator: 1)
!6774 = !DILocation(line: 2034, column: 5, scope: !1743)
!6775 = !DILocation(line: 2034, column: 5, scope: !1739)
!6776 = !DILocation(line: 2034, column: 5, scope: !6777)
!6777 = !DILexicalBlockFile(scope: !1742, file: !1, discriminator: 2)
!6778 = !DILocation(line: 2034, column: 5, scope: !6779)
!6779 = !DILexicalBlockFile(scope: !1741, file: !1, discriminator: 4)
!6780 = !DILocation(line: 2034, column: 5, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !1741, file: !1, line: 2034, column: 5)
!6782 = !DILocation(line: 2034, column: 5, scope: !1741)
!6783 = !DILocation(line: 2034, column: 5, scope: !6784)
!6784 = !DILexicalBlockFile(scope: !6781, file: !1, discriminator: 6)
!6785 = !DILocation(line: 2035, column: 5, scope: !6786)
!6786 = !DILexicalBlockFile(scope: !1745, file: !1, discriminator: 1)
!6787 = !DILocation(line: 2035, column: 5, scope: !1749)
!6788 = !DILocation(line: 2035, column: 5, scope: !1745)
!6789 = !DILocation(line: 2035, column: 5, scope: !6790)
!6790 = !DILexicalBlockFile(scope: !1748, file: !1, discriminator: 2)
!6791 = !DILocation(line: 2035, column: 5, scope: !6792)
!6792 = !DILexicalBlockFile(scope: !1747, file: !1, discriminator: 4)
!6793 = !DILocation(line: 2035, column: 5, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !1747, file: !1, line: 2035, column: 5)
!6795 = !DILocation(line: 2035, column: 5, scope: !1747)
!6796 = !DILocation(line: 2035, column: 5, scope: !6797)
!6797 = !DILexicalBlockFile(scope: !6794, file: !1, discriminator: 6)
!6798 = !DILocation(line: 2039, column: 16, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !1731, file: !1, line: 2037, column: 9)
!6800 = !DILocation(line: 2040, column: 16, scope: !6799)
!6801 = !DILocation(line: 2037, column: 10, scope: !6799)
!6802 = !DILocation(line: 2037, column: 9, scope: !1731)
!6803 = !DILocation(line: 2042, column: 37, scope: !6804)
!6804 = distinct !DILexicalBlock(scope: !6799, file: !1, line: 2041, column: 42)
!6805 = !DILocation(line: 2042, column: 22, scope: !6804)
!6806 = !DILocation(line: 2043, column: 9, scope: !6804)
!6807 = !DILocation(line: 2046, column: 5, scope: !1731)
!6808 = !DILocation(line: 2047, column: 5, scope: !1731)
!6809 = !DILocation(line: 2049, column: 5, scope: !1731)
!6810 = !DILocation(line: 2050, column: 1, scope: !1731)
!6811 = !DILocation(line: 2215, column: 44, scope: !1750)
!6812 = !DILocation(line: 2217, column: 5, scope: !6813)
!6813 = !DILexicalBlockFile(scope: !1754, file: !1, discriminator: 1)
!6814 = !DILocation(line: 2217, column: 5, scope: !6815)
!6815 = !DILexicalBlockFile(scope: !6816, file: !1, discriminator: 2)
!6816 = distinct !DILexicalBlock(scope: !1754, file: !1, line: 2217, column: 5)
!6817 = !DILocation(line: 2217, column: 5, scope: !6818)
!6818 = !DILexicalBlockFile(scope: !1754, file: !1, discriminator: 4)
!6819 = !DILocation(line: 2218, column: 5, scope: !1750)
!6820 = !DILocation(line: 2224, column: 26, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6822, file: !1, line: 2221, column: 10)
!6822 = distinct !DILexicalBlock(scope: !1750, file: !1, line: 2219, column: 9)
!6823 = !DILocation(line: 2219, column: 27, scope: !6822)
!6824 = !DILocation(line: 2219, column: 9, scope: !1750)
!6825 = !DILocation(line: 2220, column: 9, scope: !6822)
!6826 = !DILocation(line: 2220, column: 24, scope: !6822)
!6827 = !DILocation(line: 2220, column: 32, scope: !6822)
!6828 = !DILocation(line: 2222, column: 35, scope: !6821)
!6829 = !DILocation(line: 2222, column: 15, scope: !6821)
!6830 = !DILocation(line: 2222, column: 20, scope: !6821)
!6831 = !DILocation(line: 2223, column: 28, scope: !6821)
!6832 = !DILocation(line: 2226, column: 1, scope: !1750)
!6833 = !DILocation(line: 2192, column: 31, scope: !1755)
!6834 = !DILocation(line: 2192, column: 47, scope: !1755)
!6835 = !DILocation(line: 2192, column: 63, scope: !1755)
!6836 = !DILocation(line: 2196, column: 34, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !1755, file: !1, line: 2196, column: 9)
!6838 = !DILocation(line: 2196, column: 14, scope: !6837)
!6839 = !DILocation(line: 2196, column: 9, scope: !1755)
!6840 = !DILocation(line: 32, column: 33, scope: !1775, inlinedAt: !6841)
!6841 = distinct !DILocation(line: 2197, column: 16, scope: !6837)
!6842 = !DILocation(line: 32, column: 49, scope: !1775, inlinedAt: !6841)
!6843 = !DILocation(line: 32, column: 65, scope: !1775, inlinedAt: !6841)
!6844 = !DILocation(line: 36, column: 43, scope: !1775, inlinedAt: !6841)
!6845 = !DILocation(line: 36, column: 37, scope: !1775, inlinedAt: !6841)
!6846 = !DILocation(line: 37, column: 10, scope: !4080, inlinedAt: !6841)
!6847 = !DILocation(line: 37, column: 9, scope: !1775, inlinedAt: !6841)
!6848 = !DILocation(line: 40, column: 11, scope: !1775, inlinedAt: !6841)
!6849 = !DILocation(line: 40, column: 16, scope: !1775, inlinedAt: !6841)
!6850 = !DILocation(line: 41, column: 11, scope: !1775, inlinedAt: !6841)
!6851 = !DILocation(line: 44, column: 9, scope: !4169, inlinedAt: !6841)
!6852 = !DILocation(line: 44, column: 9, scope: !1775, inlinedAt: !6841)
!6853 = !DILocation(line: 41, column: 51, scope: !1775, inlinedAt: !6841)
!6854 = !DILocation(line: 45, column: 15, scope: !4173, inlinedAt: !6841)
!6855 = !DILocation(line: 45, column: 20, scope: !4173, inlinedAt: !6841)
!6856 = !DILocation(line: 46, column: 9, scope: !4173, inlinedAt: !6841)
!6857 = !DILocation(line: 47, column: 9, scope: !4173, inlinedAt: !6841)
!6858 = !DILocation(line: 50, column: 18, scope: !1775, inlinedAt: !6841)
!6859 = !DILocation(line: 50, column: 11, scope: !1775, inlinedAt: !6841)
!6860 = !DILocation(line: 50, column: 16, scope: !1775, inlinedAt: !6841)
!6861 = !DILocation(line: 51, column: 10, scope: !1784, inlinedAt: !6841)
!6862 = !DILocation(line: 51, column: 9, scope: !1775, inlinedAt: !6841)
!6863 = !DILocation(line: 52, column: 9, scope: !4095, inlinedAt: !6841)
!6864 = !DILocation(line: 52, column: 9, scope: !4097, inlinedAt: !6841)
!6865 = !DILocation(line: 52, column: 9, scope: !1782, inlinedAt: !6841)
!6866 = !DILocation(line: 52, column: 9, scope: !4100, inlinedAt: !6841)
!6867 = !DILocation(line: 2197, column: 16, scope: !6837)
!6868 = !DILocation(line: 2198, column: 9, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !1755, file: !1, line: 2198, column: 9)
!6870 = !DILocation(line: 2198, column: 28, scope: !6869)
!6871 = !DILocation(line: 2198, column: 9, scope: !1755)
!6872 = !DILocation(line: 32, column: 33, scope: !1775, inlinedAt: !6873)
!6873 = distinct !DILocation(line: 2199, column: 16, scope: !6869)
!6874 = !DILocation(line: 32, column: 49, scope: !1775, inlinedAt: !6873)
!6875 = !DILocation(line: 32, column: 65, scope: !1775, inlinedAt: !6873)
!6876 = !DILocation(line: 36, column: 43, scope: !1775, inlinedAt: !6873)
!6877 = !DILocation(line: 36, column: 37, scope: !1775, inlinedAt: !6873)
!6878 = !DILocation(line: 37, column: 10, scope: !4080, inlinedAt: !6873)
!6879 = !DILocation(line: 37, column: 9, scope: !1775, inlinedAt: !6873)
!6880 = !DILocation(line: 40, column: 11, scope: !1775, inlinedAt: !6873)
!6881 = !DILocation(line: 40, column: 16, scope: !1775, inlinedAt: !6873)
!6882 = !DILocation(line: 41, column: 11, scope: !1775, inlinedAt: !6873)
!6883 = !DILocation(line: 44, column: 9, scope: !4169, inlinedAt: !6873)
!6884 = !DILocation(line: 44, column: 9, scope: !1775, inlinedAt: !6873)
!6885 = !DILocation(line: 41, column: 51, scope: !1775, inlinedAt: !6873)
!6886 = !DILocation(line: 45, column: 15, scope: !4173, inlinedAt: !6873)
!6887 = !DILocation(line: 45, column: 20, scope: !4173, inlinedAt: !6873)
!6888 = !DILocation(line: 46, column: 9, scope: !4173, inlinedAt: !6873)
!6889 = !DILocation(line: 47, column: 9, scope: !4173, inlinedAt: !6873)
!6890 = !DILocation(line: 50, column: 18, scope: !1775, inlinedAt: !6873)
!6891 = !DILocation(line: 50, column: 11, scope: !1775, inlinedAt: !6873)
!6892 = !DILocation(line: 50, column: 16, scope: !1775, inlinedAt: !6873)
!6893 = !DILocation(line: 51, column: 10, scope: !1784, inlinedAt: !6873)
!6894 = !DILocation(line: 51, column: 9, scope: !1775, inlinedAt: !6873)
!6895 = !DILocation(line: 52, column: 9, scope: !4095, inlinedAt: !6873)
!6896 = !DILocation(line: 52, column: 9, scope: !4097, inlinedAt: !6873)
!6897 = !DILocation(line: 52, column: 9, scope: !1782, inlinedAt: !6873)
!6898 = !DILocation(line: 52, column: 9, scope: !4100, inlinedAt: !6873)
!6899 = !DILocation(line: 2199, column: 16, scope: !6869)
!6900 = !DILocation(line: 2194, column: 28, scope: !1755)
!6901 = !DILocation(line: 2202, column: 18, scope: !1755)
!6902 = !DILocation(line: 2202, column: 11, scope: !1755)
!6903 = !DILocation(line: 2202, column: 16, scope: !1755)
!6904 = !DILocation(line: 2204, column: 20, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !1755, file: !1, line: 2204, column: 9)
!6906 = !DILocation(line: 2204, column: 9, scope: !1755)
!6907 = !DILocation(line: 2206, column: 58, scope: !1755)
!6908 = !DILocation(line: 2206, column: 24, scope: !1755)
!6909 = !DILocation(line: 2207, column: 22, scope: !1755)
!6910 = !DILocation(line: 2208, column: 16, scope: !1755)
!6911 = !DILocation(line: 2209, column: 5, scope: !1755)
!6912 = !DILocation(line: 2210, column: 5, scope: !6913)
!6913 = !DILexicalBlockFile(scope: !1762, file: !1, discriminator: 1)
!6914 = !DILocation(line: 2210, column: 5, scope: !6915)
!6915 = distinct !DILexicalBlock(scope: !1762, file: !1, line: 2210, column: 5)
!6916 = !DILocation(line: 2210, column: 5, scope: !1762)
!6917 = !DILocation(line: 2210, column: 5, scope: !6918)
!6918 = !DILexicalBlockFile(scope: !6915, file: !1, discriminator: 2)
!6919 = !DILocation(line: 2210, column: 5, scope: !6920)
!6920 = !DILexicalBlockFile(scope: !6921, file: !1, discriminator: 4)
!6921 = distinct !DILexicalBlock(scope: !1762, file: !1, line: 2210, column: 5)
!6922 = !DILocation(line: 2210, column: 5, scope: !6923)
!6923 = !DILexicalBlockFile(scope: !1762, file: !1, discriminator: 6)
!6924 = !DILocation(line: 2211, column: 5, scope: !1755)
!6925 = !DILocation(line: 2212, column: 1, scope: !1755)
