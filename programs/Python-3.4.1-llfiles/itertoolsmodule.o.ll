; ModuleID = 'itertoolsmodule.o.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._typeobject = type { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }
%struct.PyVarObject = type { %struct._object, i64 }
%struct._object = type { i64, %struct._typeobject* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.PyNumberMethods = type { %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)* }
%struct.PySequenceMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)*, %struct._object* (%struct._object*, i64)*, i8*, i32 (%struct._object*, i64, %struct._object*)*, i8*, i32 (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)* }
%struct.PyMappingMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)* }
%struct.PyBufferProcs = type { i32 (%struct._object*, %struct.bufferinfo*, i32)*, void (%struct._object*, %struct.bufferinfo*)* }
%struct.bufferinfo = type { i8*, %struct._object*, i64, i64, i32, i32, i8*, i64*, i64*, i64*, i8* }
%struct.PyMethodDef = type { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }
%struct.PyMemberDef = type { i8*, i32, i64, i32, i8* }
%struct.PyGetSetDef = type { i8*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, %struct._object*, i8*)*, i8*, i8* }
%struct.PyModuleDef = type { %struct.PyModuleDef_Base, i8*, i8*, i64, %struct.PyMethodDef*, i32 (%struct._object*)*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, void (i8*)* }
%struct.PyModuleDef_Base = type { %struct._object, %struct._object* ()*, i64, %struct._object* }
%struct._Py_Identifier = type { %struct._Py_Identifier*, i8*, %struct._object* }
%struct.accumulateobject = type { %struct._object, %struct._object*, %struct._object*, %struct._object* }
%struct.combinationsobject = type { %struct._object, %struct._object*, i64*, %struct._object*, i64, i32 }
%struct.PyTupleObject = type { %struct.PyVarObject, [1 x %struct._object*] }
%struct.cwrobject = type { %struct._object, %struct._object*, i64*, %struct._object*, i64, i32 }
%struct.cycleobject = type { %struct._object, %struct._object*, %struct._object*, i32 }
%struct.dropwhileobject = type { %struct._object, %struct._object*, %struct._object*, i64 }
%struct.takewhileobject = type { %struct._object, %struct._object*, %struct._object*, i64 }
%struct.isliceobject = type { %struct._object, %struct._object*, i64, i64, i64, i64 }
%struct.starmapobject = type { %struct._object, %struct._object*, %struct._object* }
%struct.chainobject = type { %struct._object, %struct._object*, %struct._object* }
%struct.compressobject = type { %struct._object, %struct._object*, %struct._object* }
%struct.filterfalseobject = type { %struct._object, %struct._object*, %struct._object* }
%struct.countobject = type { %struct._object, i64, %struct._object*, %struct._object* }
%struct.ziplongestobject = type { %struct._object, i64, i64, %struct._object*, %struct._object*, %struct._object* }
%struct.permutationsobject = type { %struct._object, %struct._object*, i64*, i64*, %struct._object*, i64, i32 }
%struct.productobject = type { %struct._object, %struct._object*, i64*, %struct._object*, i32 }
%struct.repeatobject = type { %struct._object, %struct._object*, i64 }
%struct.groupbyobject = type { %struct._object, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object* }
%struct._grouperobject = type { %struct._object, %struct._object*, %struct._object* }
%struct.teeobject = type { %struct._object, %struct.teedataobject*, i32, %struct._object* }
%struct.teedataobject = type { %struct._object, %struct._object*, i32, %struct._object*, [57 x %struct._object*] }
%struct.PyListObject = type { %struct.PyVarObject, %struct._object**, i64 }

@accumulate_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i32 0, i32 0), i64 40, i64 0, void (%struct._object*)* bitcast (void (%struct.accumulateobject*)* @accumulate_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @accumulate_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.accumulateobject*, i32 (%struct._object*, i8*)*, i8*)* @accumulate_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.accumulateobject*)* @accumulate_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([3 x %struct.PyMethodDef], [3 x %struct.PyMethodDef]* @accumulate_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @accumulate_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@combinations_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0), i64 56, i64 0, void (%struct._object*)* bitcast (void (%struct.combinationsobject*)* @combinations_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([186 x i8], [186 x i8]* @combinations_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.combinationsobject*, i32 (%struct._object*, i8*)*, i8*)* @combinations_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.combinationsobject*)* @combinations_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([4 x %struct.PyMethodDef], [4 x %struct.PyMethodDef]* @combinations_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @combinations_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@cwr_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.16, i32 0, i32 0), i64 56, i64 0, void (%struct._object*)* bitcast (void (%struct.cwrobject*)* @cwr_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([272 x i8], [272 x i8]* @cwr_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.cwrobject*, i32 (%struct._object*, i8*)*, i8*)* @cwr_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.cwrobject*)* @cwr_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([4 x %struct.PyMethodDef], [4 x %struct.PyMethodDef]* @cwr_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @cwr_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@cycle_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i32 0, i32 0), i64 40, i64 0, void (%struct._object*)* bitcast (void (%struct.cycleobject*)* @cycle_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([130 x i8], [130 x i8]* @cycle_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.cycleobject*, i32 (%struct._object*, i8*)*, i8*)* @cycle_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.cycleobject*)* @cycle_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([3 x %struct.PyMethodDef], [3 x %struct.PyMethodDef]* @cycle_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @cycle_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@dropwhile_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.23, i32 0, i32 0), i64 40, i64 0, void (%struct._object*)* bitcast (void (%struct.dropwhileobject*)* @dropwhile_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([179 x i8], [179 x i8]* @dropwhile_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.dropwhileobject*, i32 (%struct._object*, i8*)*, i8*)* @dropwhile_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.dropwhileobject*)* @dropwhile_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([3 x %struct.PyMethodDef], [3 x %struct.PyMethodDef]* @dropwhile_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @dropwhile_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@takewhile_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.27, i32 0, i32 0), i64 40, i64 0, void (%struct._object*)* bitcast (void (%struct.takewhileobject*)* @takewhile_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([156 x i8], [156 x i8]* @takewhile_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.takewhileobject*, i32 (%struct._object*, i8*)*, i8*)* @takewhile_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.takewhileobject*)* @takewhile_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([3 x %struct.PyMethodDef], [3 x %struct.PyMethodDef]* @takewhile_reduce_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @takewhile_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@islice_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.30, i32 0, i32 0), i64 56, i64 0, void (%struct._object*)* bitcast (void (%struct.isliceobject*)* @islice_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([455 x i8], [455 x i8]* @islice_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.isliceobject*, i32 (%struct._object*, i8*)*, i8*)* @islice_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.isliceobject*)* @islice_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([3 x %struct.PyMethodDef], [3 x %struct.PyMethodDef]* @islice_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @islice_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@starmap_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.38, i32 0, i32 0), i64 32, i64 0, void (%struct._object*)* bitcast (void (%struct.starmapobject*)* @starmap_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([174 x i8], [174 x i8]* @starmap_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.starmapobject*, i32 (%struct._object*, i8*)*, i8*)* @starmap_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.starmapobject*)* @starmap_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([2 x %struct.PyMethodDef], [2 x %struct.PyMethodDef]* @starmap_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @starmap_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@chain_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.42, i32 0, i32 0), i64 32, i64 0, void (%struct._object*)* bitcast (void (%struct.chainobject*)* @chain_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([227 x i8], [227 x i8]* @chain_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.chainobject*, i32 (%struct._object*, i8*)*, i8*)* @chain_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.chainobject*)* @chain_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([4 x %struct.PyMethodDef], [4 x %struct.PyMethodDef]* @chain_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @chain_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@compress_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.49, i32 0, i32 0), i64 32, i64 0, void (%struct._object*)* bitcast (void (%struct.compressobject*)* @compress_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([223 x i8], [223 x i8]* @compress_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.compressobject*, i32 (%struct._object*, i8*)*, i8*)* @compress_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.compressobject*)* @compress_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([2 x %struct.PyMethodDef], [2 x %struct.PyMethodDef]* @compress_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @compress_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@filterfalse_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.53, i32 0, i32 0), i64 32, i64 0, void (%struct._object*)* bitcast (void (%struct.filterfalseobject*)* @filterfalse_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([184 x i8], [184 x i8]* @filterfalse_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.filterfalseobject*, i32 (%struct._object*, i8*)*, i8*)* @filterfalse_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.filterfalseobject*)* @filterfalse_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([2 x %struct.PyMethodDef], [2 x %struct.PyMethodDef]* @filterfalse_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @filterfalse_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@count_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.56, i32 0, i32 0), i64 40, i64 0, void (%struct._object*)* bitcast (void (%struct.countobject*)* @count_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.countobject*)* @count_repr to %struct._object* (%struct._object*)*), %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([248 x i8], [248 x i8]* @count_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.countobject*, i32 (%struct._object*, i8*)*, i8*)* @count_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.countobject*)* @count_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([2 x %struct.PyMethodDef], [2 x %struct.PyMethodDef]* @count_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @count_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@ziplongest_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.65, i32 0, i32 0), i64 56, i64 0, void (%struct._object*)* bitcast (void (%struct.ziplongestobject*)* @zip_longest_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([505 x i8], [505 x i8]* @zip_longest_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.ziplongestobject*, i32 (%struct._object*, i8*)*, i8*)* @zip_longest_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.ziplongestobject*)* @zip_longest_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([3 x %struct.PyMethodDef], [3 x %struct.PyMethodDef]* @zip_longest_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @zip_longest_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@permutations_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.70, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.permutationsobject*)* @permutations_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([194 x i8], [194 x i8]* @permutations_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.permutationsobject*, i32 (%struct._object*, i8*)*, i8*)* @permutations_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.permutationsobject*)* @permutations_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([4 x %struct.PyMethodDef], [4 x %struct.PyMethodDef]* @permuations_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @permutations_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@product_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.75, i32 0, i32 0), i64 48, i64 0, void (%struct._object*)* bitcast (void (%struct.productobject*)* @product_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([732 x i8], [732 x i8]* @product_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.productobject*, i32 (%struct._object*, i8*)*, i8*)* @product_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.productobject*)* @product_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([4 x %struct.PyMethodDef], [4 x %struct.PyMethodDef]* @product_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @product_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@repeat_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.82, i32 0, i32 0), i64 32, i64 0, void (%struct._object*)* bitcast (void (%struct.repeatobject*)* @repeat_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.repeatobject*)* @repeat_repr to %struct._object* (%struct._object*)*), %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @repeat_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.repeatobject*, i32 (%struct._object*, i8*)*, i8*)* @repeat_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.repeatobject*)* @repeat_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([3 x %struct.PyMethodDef], [3 x %struct.PyMethodDef]* @repeat_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @repeat_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@groupby_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.91, i32 0, i32 0), i64 56, i64 0, void (%struct._object*)* bitcast (void (%struct.groupbyobject*)* @groupby_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([123 x i8], [123 x i8]* @groupby_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.groupbyobject*, i32 (%struct._object*, i8*)*, i8*)* @groupby_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.groupbyobject*)* @groupby_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([3 x %struct.PyMethodDef], [3 x %struct.PyMethodDef]* @groupby_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @groupby_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@_grouper_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.96, i32 0, i32 0), i64 32, i64 0, void (%struct._object*)* bitcast (void (%struct._grouperobject*)* @_grouper_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 278528, i8* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct._grouperobject*, i32 (%struct._object*, i8*)*, i8*)* @_grouper_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct._grouperobject*)* @_grouper_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([2 x %struct.PyMethodDef], [2 x %struct.PyMethodDef]* @_grouper_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @_grouper_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@tee_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.98, i32 0, i32 0), i64 40, i64 0, void (%struct._object*)* bitcast (void (%struct.teeobject*)* @tee_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 278528, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @teeobject_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.teeobject*, i32 (%struct._object*, i8*)*, i8*)* @tee_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.teeobject*)* @tee_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 32, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.teeobject*)* @tee_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([4 x %struct.PyMethodDef], [4 x %struct.PyMethodDef]* @tee_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @tee_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@teedataobject_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.104, i32 0, i32 0), i64 496, i64 0, void (%struct._object*)* bitcast (void (%struct.teedataobject*)* @teedataobject_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 278528, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @teedataobject_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.teedataobject*, i32 (%struct._object*, i8*)*, i8*)* @teedataobject_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.teedataobject*)* @teedataobject_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([2 x %struct.PyMethodDef], [2 x %struct.PyMethodDef]* @teedataobject_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @teedataobject_new, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyInit_itertools.typelist = private unnamed_addr constant [21 x %struct._typeobject*] [%struct._typeobject* @accumulate_type, %struct._typeobject* @combinations_type, %struct._typeobject* @cwr_type, %struct._typeobject* @cycle_type, %struct._typeobject* @dropwhile_type, %struct._typeobject* @takewhile_type, %struct._typeobject* @islice_type, %struct._typeobject* @starmap_type, %struct._typeobject* @chain_type, %struct._typeobject* @compress_type, %struct._typeobject* @filterfalse_type, %struct._typeobject* @count_type, %struct._typeobject* @ziplongest_type, %struct._typeobject* @permutations_type, %struct._typeobject* @product_type, %struct._typeobject* @repeat_type, %struct._typeobject* @groupby_type, %struct._typeobject* @_grouper_type, %struct._typeobject* @tee_type, %struct._typeobject* @teedataobject_type, %struct._typeobject* null], align 16
@PyType_Type = external global %struct._typeobject, align 8
@itertoolsmodule = internal global %struct.PyModuleDef { %struct.PyModuleDef_Base { %struct._object { i64 1, %struct._typeobject* null }, %struct._object* ()* null, i64 0, %struct._object* null }, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([1229 x i8], [1229 x i8]* @module_doc, i32 0, i32 0), i64 -1, %struct.PyMethodDef* getelementptr inbounds ([2 x %struct.PyMethodDef], [2 x %struct.PyMethodDef]* @module_methods, i32 0, i32 0), i32 (%struct._object*)* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* null, i32 (%struct._object*)* null, void (i8*)* null }, align 8
@.str = private unnamed_addr constant [21 x i8] c"itertools.accumulate\00", align 1
@accumulate_doc = internal global [122 x i8] c"accumulate(iterable[, func]) --> accumulate object\0A\0AReturn series of accumulated sums (or other binary function results).\00", align 16
@accumulate_methods = internal global [3 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.accumulateobject*)* @accumulate_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.accumulateobject*, %struct._object*)* @accumulate_setstate to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @setstate_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@.str.1 = private unnamed_addr constant [11 x i8] c"__reduce__\00", align 1
@reduce_doc = internal global [39 x i8] c"Return state information for pickling.\00", align 16
@.str.2 = private unnamed_addr constant [13 x i8] c"__setstate__\00", align 1
@setstate_doc = internal global [38 x i8] c"Set state information for unpickling.\00", align 16
@.str.3 = private unnamed_addr constant [7 x i8] c"O(OO)O\00", align 1
@_Py_NoneStruct = external global %struct._object, align 8
@accumulate_new.kwargs = internal global [3 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i8* null], align 16
@.str.4 = private unnamed_addr constant [9 x i8] c"iterable\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"func\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"O|O:accumulate\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"itertools.combinations\00", align 1
@combinations_doc = internal global [186 x i8] c"combinations(iterable, r) --> combinations object\0A\0AReturn successive r-length combinations of elements in the iterable.\0A\0Acombinations(range(4), 3) --> (0,1,2), (0,1,3), (0,2,3), (1,2,3)\00", align 16
@combinations_methods = internal global [4 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.combinationsobject*)* @combinations_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.combinationsobject*, %struct._object*)* @combinations_setstate to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @setstate_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.combinationsobject*, i8*)* @combinations_sizeof to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @sizeof_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@.str.8 = private unnamed_addr constant [11 x i8] c"__sizeof__\00", align 1
@sizeof_doc = internal global [34 x i8] c"Returns size in memory, in bytes.\00", align 16
@.str.9 = private unnamed_addr constant [6 x i8] c"O(On)\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"O(()n)\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"O(On)N\00", align 1
@PyExc_ValueError = external global %struct._object*, align 8
@.str.12 = private unnamed_addr constant [18 x i8] c"invalid arguments\00", align 1
@combinations_new.kwargs = internal global [3 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i32 0, i32 0), i8* null], align 16
@.str.13 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.14 = private unnamed_addr constant [16 x i8] c"On:combinations\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"r must be non-negative\00", align 1
@.str.16 = private unnamed_addr constant [40 x i8] c"itertools.combinations_with_replacement\00", align 1
@cwr_doc = internal global [272 x i8] c"combinations_with_replacement(iterable, r) --> combinations_with_replacement object\0A\0AReturn successive r-length combinations of elements in the iterable\0Aallowing individual elements to have successive repeats.\0Acombinations_with_replacement('ABC', 2) --> AA AB AC BB BC CC\00", align 16
@cwr_methods = internal global [4 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.cwrobject*)* @cwr_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.cwrobject*, %struct._object*)* @cwr_setstate to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @setstate_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.cwrobject*, i8*)* @cwr_sizeof to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @sizeof_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@cwr_new.kwargs = internal global [3 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i32 0, i32 0), i8* null], align 16
@.str.17 = private unnamed_addr constant [33 x i8] c"On:combinations_with_replacement\00", align 1
@.str.18 = private unnamed_addr constant [16 x i8] c"itertools.cycle\00", align 1
@cycle_doc = internal global [130 x i8] c"cycle(iterable) --> cycle object\0A\0AReturn elements from the iterable until it is exhausted.\0AThen repeat the sequence indefinitely.\00", align 16
@cycle_methods = internal global [3 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.cycleobject*)* @cycle_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.cycleobject*, %struct._object*)* @cycle_setstate to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @setstate_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@PyExc_StopIteration = external global %struct._object*, align 8
@.str.19 = private unnamed_addr constant [9 x i8] c"O(O)(Oi)\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"Oi\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"cycle()\00", align 1
@.str.22 = private unnamed_addr constant [6 x i8] c"cycle\00", align 1
@.str.23 = private unnamed_addr constant [20 x i8] c"itertools.dropwhile\00", align 1
@dropwhile_doc = internal global [179 x i8] c"dropwhile(predicate, iterable) --> dropwhile object\0A\0ADrop items from the iterable while predicate(item) is true.\0AAfterwards, return every element until the iterable is exhausted.\00", align 16
@dropwhile_methods = internal global [3 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.dropwhileobject*)* @dropwhile_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.dropwhileobject*, %struct._object*)* @dropwhile_setstate to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @setstate_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@.str.24 = private unnamed_addr constant [7 x i8] c"O(OO)l\00", align 1
@.str.25 = private unnamed_addr constant [12 x i8] c"dropwhile()\00", align 1
@.str.26 = private unnamed_addr constant [10 x i8] c"dropwhile\00", align 1
@.str.27 = private unnamed_addr constant [20 x i8] c"itertools.takewhile\00", align 1
@takewhile_doc = internal global [156 x i8] c"takewhile(predicate, iterable) --> takewhile object\0A\0AReturn successive entries from an iterable as long as the \0Apredicate evaluates to true for each entry.\00", align 16
@takewhile_reduce_methods = internal global [3 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.takewhileobject*)* @takewhile_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.takewhileobject*, %struct._object*)* @takewhile_reduce_setstate to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @setstate_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@.str.28 = private unnamed_addr constant [12 x i8] c"takewhile()\00", align 1
@.str.29 = private unnamed_addr constant [10 x i8] c"takewhile\00", align 1
@.str.30 = private unnamed_addr constant [17 x i8] c"itertools.islice\00", align 1
@islice_doc = internal global [455 x i8] c"islice(iterable, stop) --> islice object\0Aislice(iterable, start, stop[, step]) --> islice object\0A\0AReturn an iterator whose next() method returns selected values from an\0Aiterable.  If start is specified, will skip all preceding elements;\0Aotherwise, start defaults to zero.  Step defaults to one.  If\0Aspecified as another value, step determines how many values are \0Askipped between successive calls.  Works like a slice() on a list\0Abut returns an iterator.\00", align 16
@islice_methods = internal global [3 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.isliceobject*)* @islice_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.isliceobject*, %struct._object*)* @islice_setstate to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @setstate_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@.str.31 = private unnamed_addr constant [7 x i8] c"O(Nn)n\00", align 1
@.str.32 = private unnamed_addr constant [9 x i8] c"O(OnNn)n\00", align 1
@.str.33 = private unnamed_addr constant [9 x i8] c"islice()\00", align 1
@.str.34 = private unnamed_addr constant [7 x i8] c"islice\00", align 1
@.str.35 = private unnamed_addr constant [78 x i8] c"Stop argument for islice() must be None or an integer: 0 <= x <= sys.maxsize.\00", align 1
@.str.36 = private unnamed_addr constant [72 x i8] c"Indices for islice() must be None or an integer: 0 <= x <= sys.maxsize.\00", align 1
@.str.37 = private unnamed_addr constant [54 x i8] c"Step for islice() must be a positive integer or None.\00", align 1
@.str.38 = private unnamed_addr constant [18 x i8] c"itertools.starmap\00", align 1
@starmap_doc = internal global [174 x i8] c"starmap(function, sequence) --> starmap object\0A\0AReturn an iterator whose values are returned from the function evaluated\0Awith a argument tuple taken from the given sequence.\00", align 16
@starmap_methods = internal global [2 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.starmapobject*)* @starmap_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@PyTuple_Type = external global %struct._typeobject, align 8
@.str.39 = private unnamed_addr constant [6 x i8] c"O(OO)\00", align 1
@.str.40 = private unnamed_addr constant [10 x i8] c"starmap()\00", align 1
@.str.41 = private unnamed_addr constant [8 x i8] c"starmap\00", align 1
@.str.42 = private unnamed_addr constant [16 x i8] c"itertools.chain\00", align 1
@chain_doc = internal global [227 x i8] c"chain(*iterables) --> chain object\0A\0AReturn a chain object whose .__next__() method returns elements from the\0Afirst iterable until it is exhausted, then elements from the next\0Aiterable, until all of the iterables are exhausted.\00", align 16
@chain_methods = internal global [4 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.43, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._typeobject*, %struct._object*)* @chain_new_from_iterable to %struct._object* (%struct._object*, %struct._object*)*), i32 24, i8* getelementptr inbounds ([134 x i8], [134 x i8]* @chain_from_iterable_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.chainobject*)* @chain_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.chainobject*, %struct._object*)* @chain_setstate to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @setstate_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@.str.43 = private unnamed_addr constant [14 x i8] c"from_iterable\00", align 1
@chain_from_iterable_doc = internal global [134 x i8] c"chain.from_iterable(iterable) --> chain object\0A\0AAlternate chain() contructor taking a single iterable argument\0Athat evaluates lazily.\00", align 16
@.str.44 = private unnamed_addr constant [8 x i8] c"O()(OO)\00", align 1
@.str.45 = private unnamed_addr constant [7 x i8] c"O()(O)\00", align 1
@.str.46 = private unnamed_addr constant [4 x i8] c"O()\00", align 1
@.str.47 = private unnamed_addr constant [4 x i8] c"O|O\00", align 1
@.str.48 = private unnamed_addr constant [8 x i8] c"chain()\00", align 1
@.str.49 = private unnamed_addr constant [19 x i8] c"itertools.compress\00", align 1
@compress_doc = internal global [223 x i8] c"compress(data, selectors) --> iterator over selected data\0A\0AReturn data elements corresponding to true selector elements.\0AForms a shorter iterator from selected data elements using the\0Aselectors to choose the data elements.\00", align 16
@compress_methods = internal global [2 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.compressobject*)* @compress_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@compress_new.kwargs = internal global [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.51, i32 0, i32 0), i8* null], align 16
@.str.50 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@.str.51 = private unnamed_addr constant [10 x i8] c"selectors\00", align 1
@.str.52 = private unnamed_addr constant [12 x i8] c"OO:compress\00", align 1
@.str.53 = private unnamed_addr constant [22 x i8] c"itertools.filterfalse\00", align 1
@filterfalse_doc = internal global [184 x i8] c"filterfalse(function or None, sequence) --> filterfalse object\0A\0AReturn those items of sequence for which function(item) is false.\0AIf function is None, return the items that are false.\00", align 16
@filterfalse_methods = internal global [2 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.filterfalseobject*)* @filterfalse_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@PyBool_Type = external global %struct._typeobject, align 8
@.str.54 = private unnamed_addr constant [14 x i8] c"filterfalse()\00", align 1
@.str.55 = private unnamed_addr constant [12 x i8] c"filterfalse\00", align 1
@.str.56 = private unnamed_addr constant [16 x i8] c"itertools.count\00", align 1
@count_doc = internal global [248 x i8] c"count(start=0, step=1) --> count object\0A\0AReturn a count object whose .__next__() method returns consecutive values.\0AEquivalent to:\0A\0A    def count(firstval=0, step=1):\0A        x = firstval\0A        while 1:\0A            yield x\0A            x += step\0A\00", align 16
@count_methods = internal global [2 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.countobject*)* @count_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@.str.57 = private unnamed_addr constant [11 x i8] c"count(%zd)\00", align 1
@.str.58 = private unnamed_addr constant [10 x i8] c"count(%R)\00", align 1
@.str.59 = private unnamed_addr constant [14 x i8] c"count(%R, %R)\00", align 1
@.str.60 = private unnamed_addr constant [5 x i8] c"O(n)\00", align 1
@count_new.kwlist = internal global [3 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i32 0, i32 0), i8* null], align 16
@.str.61 = private unnamed_addr constant [6 x i8] c"start\00", align 1
@.str.62 = private unnamed_addr constant [5 x i8] c"step\00", align 1
@.str.63 = private unnamed_addr constant [10 x i8] c"|OO:count\00", align 1
@PyExc_TypeError = external global %struct._object*, align 8
@.str.64 = private unnamed_addr constant [21 x i8] c"a number is required\00", align 1
@.str.65 = private unnamed_addr constant [22 x i8] c"itertools.zip_longest\00", align 1
@zip_longest_doc = internal global [505 x i8] c"zip_longest(iter1 [,iter2 [...]], [fillvalue=None]) --> zip_longest object\0A\0AReturn an zip_longest object whose .__next__() method returns a tuple where\0Athe i-th element comes from the i-th iterable argument.  The .__next__()\0Amethod continues until the longest iterable in the argument sequence\0Ais exhausted and then it raises StopIteration.  When the shorter iterables\0Aare exhausted, the fillvalue is substituted in their place.  The fillvalue\0Adefaults to None or can be specified by a keyword argument.\0A\00", align 16
@zip_longest_methods = internal global [3 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ziplongestobject*)* @zip_longest_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ziplongestobject*, %struct._object*)* @zip_longest_setstate to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @setstate_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@.str.66 = private unnamed_addr constant [4 x i8] c"ONO\00", align 1
@PyDict_Type = external global %struct._typeobject, align 8
@.str.67 = private unnamed_addr constant [10 x i8] c"fillvalue\00", align 1
@.str.68 = private unnamed_addr constant [49 x i8] c"zip_longest() got an unexpected keyword argument\00", align 1
@.str.69 = private unnamed_addr constant [49 x i8] c"zip_longest argument #%zd must support iteration\00", align 1
@.str.70 = private unnamed_addr constant [23 x i8] c"itertools.permutations\00", align 1
@permutations_doc = internal global [194 x i8] c"permutations(iterable[, r]) --> permutations object\0A\0AReturn successive r-length permutations of elements in the iterable.\0A\0Apermutations(range(3), 2) --> (0,1), (0,2), (1,0), (1,2), (2,0), (2,1)\00", align 16
@permuations_methods = internal global [4 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.permutationsobject*)* @permutations_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.permutationsobject*, %struct._object*)* @permutations_setstate to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @setstate_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.permutationsobject*, i8*)* @permutations_sizeof to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @sizeof_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@.str.71 = private unnamed_addr constant [10 x i8] c"O(On)(NN)\00", align 1
@.str.72 = private unnamed_addr constant [5 x i8] c"O!O!\00", align 1
@permutations_new.kwargs = internal global [3 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i32 0, i32 0), i8* null], align 16
@.str.73 = private unnamed_addr constant [17 x i8] c"O|O:permutations\00", align 1
@.str.74 = private unnamed_addr constant [18 x i8] c"Expected int as r\00", align 1
@.str.75 = private unnamed_addr constant [18 x i8] c"itertools.product\00", align 1
@product_doc = internal global [732 x i8] c"product(*iterables, repeat=1) --> product object\0A\0ACartesian product of input iterables.  Equivalent to nested for-loops.\0A\0AFor example, product(A, B) returns the same as:  ((x,y) for x in A for y in B).\0AThe leftmost iterators are in the outermost for-loop, so the output tuples\0Acycle in a manner similar to an odometer (with the rightmost element changing\0Aon every iteration).\0A\0ATo compute the product of an iterable with itself, specify the number\0Aof repetitions with the optional repeat keyword argument. For example,\0Aproduct(A, repeat=4) means the same as product(A, A, A, A).\0A\0Aproduct('ab', range(3)) --> ('a',0) ('a',1) ('a',2) ('b',0) ('b',1) ('b',2)\0Aproduct((0,1), (0,1), (0,1)) --> (0,0,0) (0,0,1) (0,1,0) (0,1,1) (1,0,0) ...\00", align 16
@product_methods = internal global [4 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.productobject*)* @product_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.productobject*, %struct._object*)* @product_setstate to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @setstate_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.productobject*, i8*)* @product_sizeof to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @sizeof_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@.str.76 = private unnamed_addr constant [6 x i8] c"O(())\00", align 1
@.str.77 = private unnamed_addr constant [3 x i8] c"OO\00", align 1
@.str.78 = private unnamed_addr constant [4 x i8] c"OON\00", align 1
@.str.79 = private unnamed_addr constant [7 x i8] c"repeat\00", align 1
@product_new.kwlist = private unnamed_addr constant [2 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.79, i32 0, i32 0), i8* null], align 16
@.str.80 = private unnamed_addr constant [11 x i8] c"|n:product\00", align 1
@.str.81 = private unnamed_addr constant [35 x i8] c"repeat argument cannot be negative\00", align 1
@.str.82 = private unnamed_addr constant [17 x i8] c"itertools.repeat\00", align 1
@repeat_doc = internal global [155 x i8] c"repeat(object [,times]) -> create an iterator which returns the object\0Afor the specified number of times.  If not specified, returns the object\0Aendlessly.\00", align 16
@repeat_methods = internal global [3 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.85, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.repeatobject*)* @repeat_len to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @length_hint_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.repeatobject*)* @repeat_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@.str.83 = private unnamed_addr constant [11 x i8] c"repeat(%R)\00", align 1
@.str.84 = private unnamed_addr constant [16 x i8] c"repeat(%R, %zd)\00", align 1
@.str.85 = private unnamed_addr constant [16 x i8] c"__length_hint__\00", align 1
@length_hint_doc = internal global [55 x i8] c"Private method returning an estimate of len(list(it)).\00", align 16
@.str.86 = private unnamed_addr constant [24 x i8] c"len() of unsized object\00", align 1
@.str.87 = private unnamed_addr constant [5 x i8] c"O(O)\00", align 1
@repeat_new.kwargs = internal global [3 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.88, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.89, i32 0, i32 0), i8* null], align 16
@.str.88 = private unnamed_addr constant [7 x i8] c"object\00", align 1
@.str.89 = private unnamed_addr constant [6 x i8] c"times\00", align 1
@.str.90 = private unnamed_addr constant [11 x i8] c"O|n:repeat\00", align 1
@.str.91 = private unnamed_addr constant [18 x i8] c"itertools.groupby\00", align 1
@groupby_doc = internal global [123 x i8] c"groupby(iterable[, keyfunc]) -> create an iterator which returns\0A(key, sub-iterator) grouped by each value of key(value).\0A\00", align 16
@groupby_methods = internal global [3 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.groupbyobject*)* @groupby_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.groupbyobject*, %struct._object*)* @groupby_setstate to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @setstate_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@.str.92 = private unnamed_addr constant [11 x i8] c"O(OO)(OOO)\00", align 1
@.str.93 = private unnamed_addr constant [4 x i8] c"OOO\00", align 1
@groupby_new.kwargs = internal global [3 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i32 0, i32 0), i8* null], align 16
@.str.94 = private unnamed_addr constant [4 x i8] c"key\00", align 1
@.str.95 = private unnamed_addr constant [12 x i8] c"O|O:groupby\00", align 1
@.str.96 = private unnamed_addr constant [19 x i8] c"itertools._grouper\00", align 1
@_grouper_methods = internal global [2 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._grouperobject*)* @_grouper_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@.str.97 = private unnamed_addr constant [4 x i8] c"O!O\00", align 1
@.str.98 = private unnamed_addr constant [15 x i8] c"itertools._tee\00", align 1
@teeobject_doc = internal global [37 x i8] c"Iterator wrapped to make it copyable\00", align 16
@tee_methods = internal global [4 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.99, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.teeobject*)* @tee_copy to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @teecopy_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.teeobject*)* @tee_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.teeobject*, %struct._object*)* @tee_setstate to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @setstate_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@.str.99 = private unnamed_addr constant [9 x i8] c"__copy__\00", align 1
@teecopy_doc = internal global [33 x i8] c"Returns an independent iterator.\00", align 16
@.str.100 = private unnamed_addr constant [10 x i8] c"O(())(Oi)\00", align 1
@.str.101 = private unnamed_addr constant [4 x i8] c"O!i\00", align 1
@.str.102 = private unnamed_addr constant [19 x i8] c"Index out of range\00", align 1
@.str.103 = private unnamed_addr constant [5 x i8] c"_tee\00", align 1
@.str.104 = private unnamed_addr constant [26 x i8] c"itertools._tee_dataobject\00", align 1
@teedataobject_doc = internal global [47 x i8] c"Data container common to multiple tee objects.\00", align 16
@teedataobject_methods = internal global [2 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.teedataobject*)* @teedataobject_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @reduce_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@.str.105 = private unnamed_addr constant [7 x i8] c"O(ONO)\00", align 1
@.str.106 = private unnamed_addr constant [5 x i8] c"OO!O\00", align 1
@PyList_Type = external global %struct._typeobject, align 8
@.str.107 = private unnamed_addr constant [18 x i8] c"Invalid arguments\00", align 1
@.str.108 = private unnamed_addr constant [10 x i8] c"itertools\00", align 1
@module_doc = internal global [1229 x i8] c"Functional tools for creating and using iterators.\0A\0AInfinite iterators:\0Acount(start=0, step=1) --> start, start+step, start+2*step, ...\0Acycle(p) --> p0, p1, ... plast, p0, p1, ...\0Arepeat(elem [,n]) --> elem, elem, elem, ... endlessly or up to n times\0A\0AIterators terminating on the shortest input sequence:\0Aaccumulate(p[, func]) --> p0, p0+p1, p0+p1+p2\0Achain(p, q, ...) --> p0, p1, ... plast, q0, q1, ... \0Achain.from_iterable([p, q, ...]) --> p0, p1, ... plast, q0, q1, ... \0Acompress(data, selectors) --> (d[0] if s[0]), (d[1] if s[1]), ...\0Adropwhile(pred, seq) --> seq[n], seq[n+1], starting when pred fails\0Agroupby(iterable[, keyfunc]) --> sub-iterators grouped by value of keyfunc(v)\0Afilterfalse(pred, seq) --> elements of seq where pred(elem) is False\0Aislice(seq, [start,] stop [, step]) --> elements from\0A       seq[start:stop:step]\0Astarmap(fun, seq) --> fun(*seq[0]), fun(*seq[1]), ...\0Atee(it, n=2) --> (it1, it2 , ... itn) splits one iterator into n\0Atakewhile(pred, seq) --> seq[0], seq[1], until pred fails\0Azip_longest(p, q, ...) --> (p[0], q[0]), (p[1], q[1]), ... \0A\0ACombinatoric generators:\0Aproduct(p, q, ... [repeat=1]) --> cartesian product\0Apermutations(p[, r])\0Acombinations(p, r)\0Acombinations_with_replacement(p, r)\0A\00", align 16
@module_methods = internal global [2 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.109, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @tee, i32 1, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @tee_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@.str.109 = private unnamed_addr constant [4 x i8] c"tee\00", align 1
@tee_doc = internal global [57 x i8] c"tee(iterable, n=2) --> tuple of n independent iterators.\00", align 16
@tee.PyId___copy__ = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.99, i32 0, i32 0), %struct._object* null }, align 8
@.str.110 = private unnamed_addr constant [4 x i8] c"O|n\00", align 1
@.str.111 = private unnamed_addr constant [15 x i8] c"n must be >= 0\00", align 1

; Function Attrs: nounwind uwtable
define %struct._object* @PyInit_itertools() #0 {
entry:
  tail call void @llvm.dbg.declare(metadata [21 x %struct._typeobject*]* @PyInit_itertools.typelist, metadata !548, metadata !2664), !dbg !2665
  store %struct._typeobject* @PyType_Type, %struct._typeobject** getelementptr inbounds (%struct._typeobject, %struct._typeobject* @teedataobject_type, i64 0, i32 0, i32 0, i32 1), align 8, !dbg !2666, !tbaa !2667
  %call = tail call %struct._object* @PyModule_Create2(%struct.PyModuleDef* nonnull @itertoolsmodule, i32 1013) #1, !dbg !2673
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !546, metadata !2664), !dbg !2674
  %cmp = icmp eq %struct._object* %call, null, !dbg !2675
  br i1 %cmp, label %cleanup, label %for.body.preheader, !dbg !2677

for.body.preheader:                               ; preds = %entry
  br label %for.body, !dbg !2678

for.body:                                         ; preds = %for.body.preheader, %if.end.7
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end.7 ], [ 0, %for.body.preheader ]
  %arrayidx31 = phi %struct._typeobject** [ %arrayidx, %if.end.7 ], [ getelementptr inbounds ([21 x %struct._typeobject*], [21 x %struct._typeobject*]* @PyInit_itertools.typelist, i64 0, i64 0), %for.body.preheader ]
  %0 = load %struct._typeobject*, %struct._typeobject** %arrayidx31, align 8, !dbg !2678, !tbaa !2681
  %call4 = tail call i32 @PyType_Ready(%struct._typeobject* %0) #1, !dbg !2682
  %cmp5 = icmp slt i32 %call4, 0, !dbg !2685
  br i1 %cmp5, label %cleanup.loopexit, label %if.end.7, !dbg !2686

if.end.7:                                         ; preds = %for.body
  %1 = load %struct._typeobject*, %struct._typeobject** %arrayidx31, align 8, !dbg !2687, !tbaa !2681
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i64 0, i32 1, !dbg !2687
  %2 = load i8*, i8** %tp_name, align 8, !dbg !2687, !tbaa !2688
  %call10 = tail call i8* @strchr(i8* %2, i32 46) #1, !dbg !2687
  tail call void @llvm.dbg.value(metadata i8* %call10, i64 0, metadata !547, metadata !2664), !dbg !2692
  %ob_refcnt = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i64 0, i32 0, i32 0, i32 0, !dbg !2693
  %3 = load i64, i64* %ob_refcnt, align 8, !dbg !2693, !tbaa !2694
  %inc = add i64 %3, 1, !dbg !2693
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !2693, !tbaa !2694
  %add.ptr = getelementptr i8, i8* %call10, i64 1, !dbg !2695
  %4 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i64 0, i32 0, i32 0, !dbg !2696
  %call15 = tail call i32 @PyModule_AddObject(%struct._object* %call, i8* %add.ptr, %struct._object* %4) #1, !dbg !2697
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2698
  %arrayidx = getelementptr [21 x %struct._typeobject*], [21 x %struct._typeobject*]* @PyInit_itertools.typelist, i64 0, i64 %indvars.iv.next, !dbg !2678
  %5 = trunc i64 %indvars.iv.next to i32, !dbg !2699
  %cmp1 = icmp eq i32 %5, 20, !dbg !2699
  br i1 %cmp1, label %cleanup.loopexit, label %for.body, !dbg !2698

cleanup.loopexit:                                 ; preds = %for.body, %if.end.7
  %retval.0.ph = phi %struct._object* [ null, %for.body ], [ %call, %if.end.7 ]
  br label %cleanup, !dbg !2700

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  %retval.0 = phi %struct._object* [ null, %entry ], [ %retval.0.ph, %cleanup.loopexit ]
  ret %struct._object* %retval.0, !dbg !2700
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #1

declare %struct._object* @PyModule_Create2(%struct.PyModuleDef*, i32) #3

declare i32 @PyType_Ready(%struct._typeobject*) #3

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #4

declare i32 @PyModule_AddObject(%struct._object*, i8*, %struct._object*) #3

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

; Function Attrs: nounwind uwtable
define internal void @accumulate_dealloc(%struct.accumulateobject* %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.accumulateobject* %lz, i64 0, metadata !558, metadata !2664), !dbg !2701
  %0 = bitcast %struct.accumulateobject* %lz to i8*, !dbg !2702
  tail call void @PyObject_GC_UnTrack(i8* %0) #1, !dbg !2703
  %binop = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %lz, i64 0, i32 3, !dbg !2704
  %1 = load %struct._object*, %struct._object** %binop, align 8, !dbg !2704, !tbaa !2706
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !559, metadata !2664), !dbg !2704
  %cmp = icmp eq %struct._object* %1, null, !dbg !2708
  br i1 %cmp, label %if.end.4, label %do.body.1, !dbg !2709

do.body.1:                                        ; preds = %entry
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !561, metadata !2664), !dbg !2710
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !2712
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !2712, !tbaa !2694
  %dec = add i64 %2, -1, !dbg !2712
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !2712, !tbaa !2694
  %cmp2 = icmp eq i64 %dec, 0, !dbg !2712
  br i1 %cmp2, label %if.else, label %if.end.4, !dbg !2714

if.else:                                          ; preds = %do.body.1
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !2715
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2715, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 4, !dbg !2715
  %4 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2715, !tbaa !2717
  tail call void %4(%struct._object* %1) #1, !dbg !2715
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %do.body.1, %entry
  %total = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %lz, i64 0, i32 1, !dbg !2718
  %5 = load %struct._object*, %struct._object** %total, align 8, !dbg !2718, !tbaa !2720
  tail call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !564, metadata !2664), !dbg !2718
  %cmp9 = icmp eq %struct._object* %5, null, !dbg !2721
  br i1 %cmp9, label %if.end.23, label %do.body.11, !dbg !2722

do.body.11:                                       ; preds = %if.end.4
  tail call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !566, metadata !2664), !dbg !2723
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 0, !dbg !2725
  %6 = load i64, i64* %ob_refcnt13, align 8, !dbg !2725, !tbaa !2694
  %dec14 = add i64 %6, -1, !dbg !2725
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !2725, !tbaa !2694
  %cmp15 = icmp eq i64 %dec14, 0, !dbg !2725
  br i1 %cmp15, label %if.else.17, label %if.end.23, !dbg !2727

if.else.17:                                       ; preds = %do.body.11
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 1, !dbg !2728
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !2728, !tbaa !2667
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i64 0, i32 4, !dbg !2728
  %8 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !2728, !tbaa !2717
  tail call void %8(%struct._object* %5) #1, !dbg !2728
  br label %if.end.23

if.end.23:                                        ; preds = %if.else.17, %do.body.11, %if.end.4
  %it = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %lz, i64 0, i32 2, !dbg !2730
  %9 = load %struct._object*, %struct._object** %it, align 8, !dbg !2730, !tbaa !2732
  tail call void @llvm.dbg.value(metadata %struct._object* %9, i64 0, metadata !569, metadata !2664), !dbg !2730
  %cmp28 = icmp eq %struct._object* %9, null, !dbg !2733
  br i1 %cmp28, label %if.end.42, label %do.body.30, !dbg !2734

do.body.30:                                       ; preds = %if.end.23
  tail call void @llvm.dbg.value(metadata %struct._object* %9, i64 0, metadata !571, metadata !2664), !dbg !2735
  %ob_refcnt32 = getelementptr inbounds %struct._object, %struct._object* %9, i64 0, i32 0, !dbg !2737
  %10 = load i64, i64* %ob_refcnt32, align 8, !dbg !2737, !tbaa !2694
  %dec33 = add i64 %10, -1, !dbg !2737
  store i64 %dec33, i64* %ob_refcnt32, align 8, !dbg !2737, !tbaa !2694
  %cmp34 = icmp eq i64 %dec33, 0, !dbg !2737
  br i1 %cmp34, label %if.else.36, label %if.end.42, !dbg !2739

if.else.36:                                       ; preds = %do.body.30
  %ob_type37 = getelementptr inbounds %struct._object, %struct._object* %9, i64 0, i32 1, !dbg !2740
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type37, align 8, !dbg !2740, !tbaa !2667
  %tp_dealloc38 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i64 0, i32 4, !dbg !2740
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc38, align 8, !dbg !2740, !tbaa !2717
  tail call void %12(%struct._object* %9) #1, !dbg !2740
  br label %if.end.42

if.end.42:                                        ; preds = %if.else.36, %do.body.30, %if.end.23
  %ob_type45 = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %lz, i64 0, i32 0, i32 1, !dbg !2742
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type45, align 8, !dbg !2742, !tbaa !2667
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i64 0, i32 38, !dbg !2743
  %14 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !2743, !tbaa !2744
  tail call void %14(i8* %0) #1, !dbg !2742
  ret void, !dbg !2745
}

declare %struct._object* @PyObject_GenericGetAttr(%struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal i32 @accumulate_traverse(%struct.accumulateobject* nocapture readonly %lz, i32 (%struct._object*, i8*)* nocapture %visit, i8* %arg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.accumulateobject* %lz, i64 0, metadata !578, metadata !2664), !dbg !2746
  tail call void @llvm.dbg.value(metadata i32 (%struct._object*, i8*)* %visit, i64 0, metadata !579, metadata !2664), !dbg !2747
  tail call void @llvm.dbg.value(metadata i8* %arg, i64 0, metadata !580, metadata !2664), !dbg !2748
  %binop = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %lz, i64 0, i32 3, !dbg !2749
  %0 = load %struct._object*, %struct._object** %binop, align 8, !dbg !2749, !tbaa !2706
  %tobool = icmp eq %struct._object* %0, null, !dbg !2749
  br i1 %tobool, label %do.body.5, label %if.then, !dbg !2751

if.then:                                          ; preds = %entry
  %call = tail call i32 %visit(%struct._object* %0, i8* %arg) #1, !dbg !2752
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !581, metadata !2664), !dbg !2752
  %tobool2 = icmp eq i32 %call, 0, !dbg !2754
  br i1 %tobool2, label %do.body.5, label %return

do.body.5:                                        ; preds = %entry, %if.then
  %it = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %lz, i64 0, i32 2, !dbg !2756
  %1 = load %struct._object*, %struct._object** %it, align 8, !dbg !2756, !tbaa !2732
  %tobool6 = icmp eq %struct._object* %1, null, !dbg !2756
  br i1 %tobool6, label %do.body.19, label %if.then.7, !dbg !2758

if.then.7:                                        ; preds = %do.body.5
  %call10 = tail call i32 %visit(%struct._object* %1, i8* %arg) #1, !dbg !2759
  tail call void @llvm.dbg.value(metadata i32 %call10, i64 0, metadata !585, metadata !2664), !dbg !2759
  %tobool11 = icmp eq i32 %call10, 0, !dbg !2761
  br i1 %tobool11, label %do.body.19, label %return

do.body.19:                                       ; preds = %do.body.5, %if.then.7
  %total = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %lz, i64 0, i32 1, !dbg !2763
  %2 = load %struct._object*, %struct._object** %total, align 8, !dbg !2763, !tbaa !2720
  %tobool20 = icmp eq %struct._object* %2, null, !dbg !2763
  br i1 %tobool20, label %do.end.32, label %if.then.21, !dbg !2765

if.then.21:                                       ; preds = %do.body.19
  %call24 = tail call i32 %visit(%struct._object* %2, i8* %arg) #1, !dbg !2766
  tail call void @llvm.dbg.value(metadata i32 %call24, i64 0, metadata !589, metadata !2664), !dbg !2766
  %tobool25 = icmp eq i32 %call24, 0, !dbg !2768
  br i1 %tobool25, label %do.end.32, label %return

do.end.32:                                        ; preds = %do.body.19, %if.then.21
  br label %return, !dbg !2770

return:                                           ; preds = %if.then.21, %if.then.7, %if.then, %do.end.32
  %retval.5 = phi i32 [ 0, %do.end.32 ], [ %call24, %if.then.21 ], [ %call10, %if.then.7 ], [ %call, %if.then ]
  ret i32 %retval.5, !dbg !2771
}

declare %struct._object* @PyObject_SelfIter(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @accumulate_next(%struct.accumulateobject* nocapture %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.accumulateobject* %lz, i64 0, metadata !597, metadata !2664), !dbg !2772
  %it = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %lz, i64 0, i32 2, !dbg !2773
  %0 = load %struct._object*, %struct._object** %it, align 8, !dbg !2773, !tbaa !2732
  %call = tail call %struct._object* @PyIter_Next(%struct._object* %0) #1, !dbg !2774
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !598, metadata !2664), !dbg !2775
  %cmp = icmp eq %struct._object* %call, null, !dbg !2776
  br i1 %cmp, label %cleanup, label %if.end, !dbg !2778

if.end:                                           ; preds = %entry
  %total = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %lz, i64 0, i32 1, !dbg !2779
  %1 = load %struct._object*, %struct._object** %total, align 8, !dbg !2779, !tbaa !2720
  %cmp1 = icmp eq %struct._object* %1, null, !dbg !2781
  br i1 %cmp1, label %if.then.2, label %if.end.5, !dbg !2782

if.then.2:                                        ; preds = %if.end
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 0, !dbg !2783
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !2783, !tbaa !2694
  %inc = add i64 %2, 1, !dbg !2783
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !2783, !tbaa !2694
  store %struct._object* %call, %struct._object** %total, align 8, !dbg !2785, !tbaa !2720
  br label %cleanup, !dbg !2786

if.end.5:                                         ; preds = %if.end
  %binop = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %lz, i64 0, i32 3, !dbg !2787
  %3 = load %struct._object*, %struct._object** %binop, align 8, !dbg !2787, !tbaa !2706
  %cmp6 = icmp eq %struct._object* %3, null, !dbg !2789
  br i1 %cmp6, label %if.then.7, label %if.else, !dbg !2790

if.then.7:                                        ; preds = %if.end.5
  %call9 = tail call %struct._object* @PyNumber_Add(%struct._object* %1, %struct._object* %call) #1, !dbg !2791
  tail call void @llvm.dbg.value(metadata %struct._object* %call9, i64 0, metadata !600, metadata !2664), !dbg !2792
  br label %do.body, !dbg !2793

if.else:                                          ; preds = %if.end.5
  %call12 = tail call %struct._object* (%struct._object*, ...) @PyObject_CallFunctionObjArgs(%struct._object* %3, %struct._object* %1, %struct._object* %call, i8* null) #1, !dbg !2794
  tail call void @llvm.dbg.value(metadata %struct._object* %call12, i64 0, metadata !600, metadata !2664), !dbg !2792
  br label %do.body

do.body:                                          ; preds = %if.then.7, %if.else
  %newtotal.0 = phi %struct._object* [ %call9, %if.then.7 ], [ %call12, %if.else ]
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !601, metadata !2664), !dbg !2795
  %ob_refcnt14 = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 0, !dbg !2797
  %4 = load i64, i64* %ob_refcnt14, align 8, !dbg !2797, !tbaa !2694
  %dec = add i64 %4, -1, !dbg !2797
  store i64 %dec, i64* %ob_refcnt14, align 8, !dbg !2797, !tbaa !2694
  %cmp15 = icmp eq i64 %dec, 0, !dbg !2797
  br i1 %cmp15, label %if.else.17, label %if.end.18, !dbg !2799

if.else.17:                                       ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 1, !dbg !2800
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2800, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i64 0, i32 4, !dbg !2800
  %6 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2800, !tbaa !2717
  tail call void %6(%struct._object* %call) #1, !dbg !2800
  br label %if.end.18

if.end.18:                                        ; preds = %do.body, %if.else.17
  %cmp19 = icmp eq %struct._object* %newtotal.0, null, !dbg !2802
  br i1 %cmp19, label %cleanup, label %if.end.21, !dbg !2804

if.end.21:                                        ; preds = %if.end.18
  %7 = load %struct._object*, %struct._object** %total, align 8, !dbg !2805, !tbaa !2720
  tail call void @llvm.dbg.value(metadata %struct._object* %7, i64 0, metadata !599, metadata !2664), !dbg !2806
  store %struct._object* %newtotal.0, %struct._object** %total, align 8, !dbg !2807, !tbaa !2720
  tail call void @llvm.dbg.value(metadata %struct._object* %7, i64 0, metadata !603, metadata !2664), !dbg !2808
  %ob_refcnt26 = getelementptr inbounds %struct._object, %struct._object* %7, i64 0, i32 0, !dbg !2810
  %8 = load i64, i64* %ob_refcnt26, align 8, !dbg !2810, !tbaa !2694
  %dec27 = add i64 %8, -1, !dbg !2810
  store i64 %dec27, i64* %ob_refcnt26, align 8, !dbg !2810, !tbaa !2694
  %cmp28 = icmp eq i64 %dec27, 0, !dbg !2810
  br i1 %cmp28, label %if.else.30, label %if.end.33, !dbg !2812

if.else.30:                                       ; preds = %if.end.21
  %ob_type31 = getelementptr inbounds %struct._object, %struct._object* %7, i64 0, i32 1, !dbg !2813
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type31, align 8, !dbg !2813, !tbaa !2667
  %tp_dealloc32 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i64 0, i32 4, !dbg !2813
  %10 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc32, align 8, !dbg !2813, !tbaa !2717
  tail call void %10(%struct._object* %7) #1, !dbg !2813
  br label %if.end.33

if.end.33:                                        ; preds = %if.end.21, %if.else.30
  %ob_refcnt36 = getelementptr inbounds %struct._object, %struct._object* %newtotal.0, i64 0, i32 0, !dbg !2815
  %11 = load i64, i64* %ob_refcnt36, align 8, !dbg !2815, !tbaa !2694
  %inc37 = add i64 %11, 1, !dbg !2815
  store i64 %inc37, i64* %ob_refcnt36, align 8, !dbg !2815, !tbaa !2694
  br label %cleanup, !dbg !2816

cleanup:                                          ; preds = %if.end.18, %entry, %if.end.33, %if.then.2
  %retval.0 = phi %struct._object* [ %call, %if.then.2 ], [ %newtotal.0, %if.end.33 ], [ null, %entry ], [ null, %if.end.18 ]
  ret %struct._object* %retval.0, !dbg !2817
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @accumulate_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %iterable = alloca %struct._object*, align 8
  %binop = alloca %struct._object*, align 8
  tail call void @llvm.dbg.value(metadata %struct._typeobject* %type, i64 0, metadata !624, metadata !2664), !dbg !2818
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !625, metadata !2664), !dbg !2819
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !626, metadata !2664), !dbg !2820
  %0 = bitcast %struct._object** %iterable to i8*, !dbg !2821
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !2821
  %1 = bitcast %struct._object** %binop to i8*, !dbg !2822
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !2822
  tail call void @llvm.dbg.value(metadata %struct._object* @_Py_NoneStruct, i64 0, metadata !629, metadata !2664), !dbg !2823
  store %struct._object* @_Py_NoneStruct, %struct._object** %binop, align 8, !dbg !2823, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object** %iterable, i64 0, metadata !627, metadata !2664), !dbg !2824
  tail call void @llvm.dbg.value(metadata %struct._object** %binop, i64 0, metadata !629, metadata !2664), !dbg !2823
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %args, %struct._object* %kwds, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @accumulate_new.kwargs, i64 0, i64 0), %struct._object** nonnull %iterable, %struct._object** nonnull %binop) #1, !dbg !2825
  %tobool = icmp eq i32 %call, 0, !dbg !2825
  br i1 %tobool, label %cleanup, label %if.end, !dbg !2827

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct._object** %iterable, i64 0, metadata !627, metadata !2664), !dbg !2824
  %2 = load %struct._object*, %struct._object** %iterable, align 8, !dbg !2828, !tbaa !2681
  %call1 = call %struct._object* @PyObject_GetIter(%struct._object* %2) #1, !dbg !2829
  call void @llvm.dbg.value(metadata %struct._object* %call1, i64 0, metadata !628, metadata !2664), !dbg !2830
  %cmp = icmp eq %struct._object* %call1, null, !dbg !2831
  br i1 %cmp, label %cleanup, label %if.end.3, !dbg !2833

if.end.3:                                         ; preds = %if.end
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %type, i64 0, i32 36, !dbg !2834
  %3 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !2834, !tbaa !2835
  %call4 = call %struct._object* %3(%struct._typeobject* %type, i64 0) #1, !dbg !2836
  %cmp5 = icmp eq %struct._object* %call4, null, !dbg !2837
  br i1 %cmp5, label %do.body, label %if.end.10, !dbg !2838

do.body:                                          ; preds = %if.end.3
  call void @llvm.dbg.value(metadata %struct._object* %call1, i64 0, metadata !631, metadata !2664), !dbg !2839
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call1, i64 0, i32 0, !dbg !2841
  %4 = load i64, i64* %ob_refcnt, align 8, !dbg !2841, !tbaa !2694
  %dec = add i64 %4, -1, !dbg !2841
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !2841, !tbaa !2694
  %cmp7 = icmp eq i64 %dec, 0, !dbg !2841
  br i1 %cmp7, label %if.else, label %cleanup, !dbg !2843

if.else:                                          ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call1, i64 0, i32 1, !dbg !2844
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2844, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i64 0, i32 4, !dbg !2844
  %6 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2844, !tbaa !2717
  call void %6(%struct._object* %call1) #1, !dbg !2844
  br label %cleanup

if.end.10:                                        ; preds = %if.end.3
  call void @llvm.dbg.value(metadata %struct._object** %binop, i64 0, metadata !629, metadata !2664), !dbg !2823
  %7 = load %struct._object*, %struct._object** %binop, align 8, !dbg !2846, !tbaa !2681
  %cmp11 = icmp eq %struct._object* %7, @_Py_NoneStruct, !dbg !2847
  %8 = ptrtoint %struct._object* %7 to i64, !dbg !2848
  br i1 %cmp11, label %if.end.21, label %do.body.13, !dbg !2849

do.body.13:                                       ; preds = %if.end.10
  call void @llvm.dbg.value(metadata %struct._object* %7, i64 0, metadata !635, metadata !2664), !dbg !2850
  %cmp14 = icmp eq %struct._object* %7, null, !dbg !2852
  br i1 %cmp14, label %if.end.17, label %if.then.15, !dbg !2854

if.then.15:                                       ; preds = %do.body.13
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %7, i64 0, i32 0, !dbg !2855
  %9 = load i64, i64* %ob_refcnt16, align 8, !dbg !2855, !tbaa !2694
  %inc = add i64 %9, 1, !dbg !2855
  store i64 %inc, i64* %ob_refcnt16, align 8, !dbg !2855, !tbaa !2694
  br label %if.end.17, !dbg !2855

if.end.17:                                        ; preds = %do.body.13, %if.then.15
  call void @llvm.dbg.value(metadata %struct._object** %binop, i64 0, metadata !629, metadata !2664), !dbg !2823
  %10 = getelementptr inbounds %struct._object, %struct._object* %call4, i64 2, i32 0, !dbg !2857
  store i64 %8, i64* %10, align 8, !dbg !2857, !tbaa !2706
  br label %if.end.21, !dbg !2858

if.end.21:                                        ; preds = %if.end.10, %if.end.17
  %total = getelementptr inbounds %struct._object, %struct._object* %call4, i64 1, !dbg !2859
  %11 = bitcast %struct._object* %total to %struct._object**, !dbg !2859
  store %struct._object* null, %struct._object** %11, align 8, !dbg !2860, !tbaa !2720
  %it22 = getelementptr inbounds %struct._object, %struct._object* %call4, i64 1, i32 1, !dbg !2861
  %12 = bitcast %struct._typeobject** %it22 to %struct._object**, !dbg !2861
  store %struct._object* %call1, %struct._object** %12, align 8, !dbg !2862, !tbaa !2732
  br label %cleanup, !dbg !2863

cleanup:                                          ; preds = %if.else, %do.body, %if.end, %entry, %if.end.21
  %retval.0 = phi %struct._object* [ %call4, %if.end.21 ], [ null, %entry ], [ null, %if.end ], [ null, %do.body ], [ null, %if.else ]
  call void @llvm.lifetime.end(i64 8, i8* %1) #1, !dbg !2864
  call void @llvm.lifetime.end(i64 8, i8* %0) #1, !dbg !2864
  ret %struct._object* %retval.0, !dbg !2864
}

declare void @PyObject_GC_Del(i8*) #3

declare void @PyObject_GC_UnTrack(i8*) #3

declare %struct._object* @PyIter_Next(%struct._object*) #3

declare %struct._object* @PyNumber_Add(%struct._object*, %struct._object*) #3

declare %struct._object* @PyObject_CallFunctionObjArgs(%struct._object*, ...) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @accumulate_reduce(%struct.accumulateobject* nocapture readonly %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.accumulateobject* %lz, i64 0, metadata !607, metadata !2664), !dbg !2865
  %ob_type = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %lz, i64 0, i32 0, i32 1, !dbg !2866
  %0 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2866, !tbaa !2667
  %it = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %lz, i64 0, i32 2, !dbg !2867
  %1 = load %struct._object*, %struct._object** %it, align 8, !dbg !2867, !tbaa !2732
  %binop = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %lz, i64 0, i32 3, !dbg !2868
  %2 = load %struct._object*, %struct._object** %binop, align 8, !dbg !2868, !tbaa !2706
  %tobool = icmp eq %struct._object* %2, null, !dbg !2869
  %_Py_NoneStruct. = select i1 %tobool, %struct._object* @_Py_NoneStruct, %struct._object* %2, !dbg !2869
  %total = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %lz, i64 0, i32 1, !dbg !2870
  %3 = load %struct._object*, %struct._object** %total, align 8, !dbg !2870, !tbaa !2720
  %tobool2 = icmp eq %struct._object* %3, null, !dbg !2871
  %cond7 = select i1 %tobool2, %struct._object* @_Py_NoneStruct, %struct._object* %3, !dbg !2871
  %call = tail call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), %struct._typeobject* %0, %struct._object* %1, %struct._object* %_Py_NoneStruct., %struct._object* %cond7) #1, !dbg !2872
  ret %struct._object* %call, !dbg !2873
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @accumulate_setstate(%struct.accumulateobject* nocapture %lz, %struct._object* %state) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.accumulateobject* %lz, i64 0, metadata !612, metadata !2664), !dbg !2874
  tail call void @llvm.dbg.value(metadata %struct._object* %state, i64 0, metadata !613, metadata !2664), !dbg !2875
  %total = getelementptr inbounds %struct.accumulateobject, %struct.accumulateobject* %lz, i64 0, i32 1, !dbg !2876
  %0 = load %struct._object*, %struct._object** %total, align 8, !dbg !2876, !tbaa !2720
  tail call void @llvm.dbg.value(metadata %struct._object* %0, i64 0, metadata !614, metadata !2664), !dbg !2876
  %cmp = icmp eq %struct._object* %0, null, !dbg !2878
  br i1 %cmp, label %if.end.5, label %if.then, !dbg !2879

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %total, align 8, !dbg !2880, !tbaa !2720
  tail call void @llvm.dbg.value(metadata %struct._object* %0, i64 0, metadata !616, metadata !2664), !dbg !2882
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %0, i64 0, i32 0, !dbg !2884
  %1 = load i64, i64* %ob_refcnt, align 8, !dbg !2884, !tbaa !2694
  %dec = add i64 %1, -1, !dbg !2884
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !2884, !tbaa !2694
  %cmp3 = icmp eq i64 %dec, 0, !dbg !2884
  br i1 %cmp3, label %if.else, label %if.end.5, !dbg !2886

if.else:                                          ; preds = %if.then
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i64 0, i32 1, !dbg !2887
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2887, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i64 0, i32 4, !dbg !2887
  %3 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2887, !tbaa !2717
  tail call void %3(%struct._object* %0) #1, !dbg !2887
  br label %if.end.5

if.end.5:                                         ; preds = %if.else, %if.then, %entry
  store %struct._object* %state, %struct._object** %total, align 8, !dbg !2889, !tbaa !2720
  %ob_refcnt10 = getelementptr inbounds %struct._object, %struct._object* %state, i64 0, i32 0, !dbg !2890
  %4 = load i64, i64* %ob_refcnt10, align 8, !dbg !2890, !tbaa !2694
  %inc = add i64 %4, 1, !dbg !2890
  store i64 %inc, i64* %ob_refcnt10, align 8, !dbg !2890, !tbaa !2694
  %5 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !2891, !tbaa !2694
  %inc11 = add i64 %5, 1, !dbg !2891
  store i64 %inc11, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !2891, !tbaa !2694
  ret %struct._object* @_Py_NoneStruct, !dbg !2891
}

declare %struct._object* @Py_BuildValue(i8*, ...) #3

declare i32 @PyArg_ParseTupleAndKeywords(%struct._object*, %struct._object*, i8*, i8**, ...) #3

declare %struct._object* @PyObject_GetIter(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal void @combinations_dealloc(%struct.combinationsobject* %co) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.combinationsobject* %co, i64 0, metadata !643, metadata !2664), !dbg !2892
  %0 = bitcast %struct.combinationsobject* %co to i8*, !dbg !2893
  tail call void @PyObject_GC_UnTrack(i8* %0) #1, !dbg !2894
  %pool = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %co, i64 0, i32 1, !dbg !2895
  %1 = load %struct._object*, %struct._object** %pool, align 8, !dbg !2895, !tbaa !2897
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !644, metadata !2664), !dbg !2895
  %cmp = icmp eq %struct._object* %1, null, !dbg !2899
  br i1 %cmp, label %if.end.4, label %do.body.1, !dbg !2900

do.body.1:                                        ; preds = %entry
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !646, metadata !2664), !dbg !2901
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !2903
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !2903, !tbaa !2694
  %dec = add i64 %2, -1, !dbg !2903
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !2903, !tbaa !2694
  %cmp2 = icmp eq i64 %dec, 0, !dbg !2903
  br i1 %cmp2, label %if.else, label %if.end.4, !dbg !2905

if.else:                                          ; preds = %do.body.1
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !2906
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2906, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 4, !dbg !2906
  %4 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2906, !tbaa !2717
  tail call void %4(%struct._object* %1) #1, !dbg !2906
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %do.body.1, %entry
  %result = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %co, i64 0, i32 3, !dbg !2908
  %5 = load %struct._object*, %struct._object** %result, align 8, !dbg !2908, !tbaa !2910
  tail call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !649, metadata !2664), !dbg !2908
  %cmp9 = icmp eq %struct._object* %5, null, !dbg !2911
  br i1 %cmp9, label %if.end.23, label %do.body.11, !dbg !2912

do.body.11:                                       ; preds = %if.end.4
  tail call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !651, metadata !2664), !dbg !2913
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 0, !dbg !2915
  %6 = load i64, i64* %ob_refcnt13, align 8, !dbg !2915, !tbaa !2694
  %dec14 = add i64 %6, -1, !dbg !2915
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !2915, !tbaa !2694
  %cmp15 = icmp eq i64 %dec14, 0, !dbg !2915
  br i1 %cmp15, label %if.else.17, label %if.end.23, !dbg !2917

if.else.17:                                       ; preds = %do.body.11
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 1, !dbg !2918
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !2918, !tbaa !2667
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i64 0, i32 4, !dbg !2918
  %8 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !2918, !tbaa !2717
  tail call void %8(%struct._object* %5) #1, !dbg !2918
  br label %if.end.23

if.end.23:                                        ; preds = %if.else.17, %do.body.11, %if.end.4
  %indices = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %co, i64 0, i32 2, !dbg !2920
  %9 = load i64*, i64** %indices, align 8, !dbg !2920, !tbaa !2922
  %cmp26 = icmp eq i64* %9, null, !dbg !2923
  br i1 %cmp26, label %if.end.29, label %if.then.27, !dbg !2924

if.then.27:                                       ; preds = %if.end.23
  %10 = bitcast i64* %9 to i8*, !dbg !2925
  tail call void @PyMem_Free(i8* %10) #1, !dbg !2926
  br label %if.end.29, !dbg !2926

if.end.29:                                        ; preds = %if.end.23, %if.then.27
  %ob_type30 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %co, i64 0, i32 0, i32 1, !dbg !2927
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type30, align 8, !dbg !2927, !tbaa !2667
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i64 0, i32 38, !dbg !2928
  %12 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !2928, !tbaa !2744
  tail call void %12(i8* %0) #1, !dbg !2927
  ret void, !dbg !2929
}

; Function Attrs: nounwind uwtable
define internal i32 @combinations_traverse(%struct.combinationsobject* nocapture readonly %co, i32 (%struct._object*, i8*)* nocapture %visit, i8* %arg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.combinationsobject* %co, i64 0, metadata !658, metadata !2664), !dbg !2930
  tail call void @llvm.dbg.value(metadata i32 (%struct._object*, i8*)* %visit, i64 0, metadata !659, metadata !2664), !dbg !2931
  tail call void @llvm.dbg.value(metadata i8* %arg, i64 0, metadata !660, metadata !2664), !dbg !2932
  %pool = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %co, i64 0, i32 1, !dbg !2933
  %0 = load %struct._object*, %struct._object** %pool, align 8, !dbg !2933, !tbaa !2897
  %tobool = icmp eq %struct._object* %0, null, !dbg !2933
  br i1 %tobool, label %do.body.5, label %if.then, !dbg !2935

if.then:                                          ; preds = %entry
  %call = tail call i32 %visit(%struct._object* %0, i8* %arg) #1, !dbg !2936
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !661, metadata !2664), !dbg !2936
  %tobool2 = icmp eq i32 %call, 0, !dbg !2938
  br i1 %tobool2, label %do.body.5, label %return

do.body.5:                                        ; preds = %entry, %if.then
  %result = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %co, i64 0, i32 3, !dbg !2940
  %1 = load %struct._object*, %struct._object** %result, align 8, !dbg !2940, !tbaa !2910
  %tobool6 = icmp eq %struct._object* %1, null, !dbg !2940
  br i1 %tobool6, label %do.end.18, label %if.then.7, !dbg !2942

if.then.7:                                        ; preds = %do.body.5
  %call10 = tail call i32 %visit(%struct._object* %1, i8* %arg) #1, !dbg !2943
  tail call void @llvm.dbg.value(metadata i32 %call10, i64 0, metadata !665, metadata !2664), !dbg !2943
  %tobool11 = icmp eq i32 %call10, 0, !dbg !2945
  br i1 %tobool11, label %do.end.18, label %return

do.end.18:                                        ; preds = %do.body.5, %if.then.7
  br label %return, !dbg !2947

return:                                           ; preds = %if.then.7, %if.then, %do.end.18
  %retval.3 = phi i32 [ 0, %do.end.18 ], [ %call10, %if.then.7 ], [ %call, %if.then ]
  ret i32 %retval.3, !dbg !2948
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @combinations_next(%struct.combinationsobject* nocapture %co) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.combinationsobject* %co, i64 0, metadata !673, metadata !2664), !dbg !2949
  %pool1 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %co, i64 0, i32 1, !dbg !2950
  %0 = load %struct._object*, %struct._object** %pool1, align 8, !dbg !2950, !tbaa !2897
  tail call void @llvm.dbg.value(metadata %struct._object* %0, i64 0, metadata !676, metadata !2664), !dbg !2951
  %indices2 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %co, i64 0, i32 2, !dbg !2952
  %1 = load i64*, i64** %indices2, align 8, !dbg !2952, !tbaa !2922
  tail call void @llvm.dbg.value(metadata i64* %1, i64 0, metadata !677, metadata !2664), !dbg !2953
  %result3 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %co, i64 0, i32 3, !dbg !2954
  %2 = load %struct._object*, %struct._object** %result3, align 8, !dbg !2954, !tbaa !2910
  tail call void @llvm.dbg.value(metadata %struct._object* %2, i64 0, metadata !678, metadata !2664), !dbg !2955
  %3 = getelementptr inbounds %struct._object, %struct._object* %0, i64 1, i32 0, !dbg !2956
  %4 = load i64, i64* %3, align 8, !dbg !2956, !tbaa !2957
  tail call void @llvm.dbg.value(metadata i64 %4, i64 0, metadata !679, metadata !2664), !dbg !2958
  %r4 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %co, i64 0, i32 4, !dbg !2959
  %5 = load i64, i64* %r4, align 8, !dbg !2959, !tbaa !2960
  tail call void @llvm.dbg.value(metadata i64 %5, i64 0, metadata !680, metadata !2664), !dbg !2961
  %stopped = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %co, i64 0, i32 5, !dbg !2962
  %6 = load i32, i32* %stopped, align 4, !dbg !2962, !tbaa !2964
  %tobool = icmp eq i32 %6, 0, !dbg !2965
  br i1 %tobool, label %if.end, label %cleanup.97, !dbg !2966

if.end:                                           ; preds = %entry
  %cmp = icmp eq %struct._object* %2, null, !dbg !2967
  br i1 %cmp, label %if.then.5, label %if.else, !dbg !2968

if.then.5:                                        ; preds = %if.end
  %call = tail call %struct._object* @PyTuple_New(i64 %5) #1, !dbg !2969
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !678, metadata !2664), !dbg !2955
  %cmp6 = icmp eq %struct._object* %call, null, !dbg !2971
  br i1 %cmp6, label %empty, label %if.end.8, !dbg !2973

if.end.8:                                         ; preds = %if.then.5
  store %struct._object* %call, %struct._object** %result3, align 8, !dbg !2974, !tbaa !2910
  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !681, metadata !2664), !dbg !2975
  %cmp10.190 = icmp sgt i64 %5, 0, !dbg !2976
  br i1 %cmp10.190, label %for.body.lr.ph, label %if.end.93, !dbg !2979

for.body.lr.ph:                                   ; preds = %if.end.8
  %ob_item = getelementptr inbounds %struct._object, %struct._object* %0, i64 1, i32 1, !dbg !2980
  %7 = bitcast %struct._typeobject** %ob_item to [1 x %struct._object*]*, !dbg !2980
  %ob_item12 = getelementptr inbounds %struct._object, %struct._object* %call, i64 1, i32 1, !dbg !2982
  %8 = bitcast %struct._typeobject** %ob_item12 to [1 x %struct._object*]*, !dbg !2982
  %xtraiter = and i64 %5, 1, !dbg !2979
  %lcmp.mod = icmp eq i64 %xtraiter, 0, !dbg !2979
  br i1 %lcmp.mod, label %for.body.lr.ph.split, label %for.body.prol, !dbg !2979

for.body.prol:                                    ; preds = %for.body.lr.ph
  %9 = load i64, i64* %1, align 8, !dbg !2983, !tbaa !2984
  tail call void @llvm.dbg.value(metadata i64 %9, i64 0, metadata !683, metadata !2664), !dbg !2985
  %arrayidx11.prol = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %7, i64 0, i64 %9, !dbg !2980
  %10 = load %struct._object*, %struct._object** %arrayidx11.prol, align 8, !dbg !2980, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %10, i64 0, metadata !674, metadata !2664), !dbg !2986
  %ob_refcnt.prol = getelementptr inbounds %struct._object, %struct._object* %10, i64 0, i32 0, !dbg !2987
  %11 = load i64, i64* %ob_refcnt.prol, align 8, !dbg !2987, !tbaa !2694
  %inc.prol = add i64 %11, 1, !dbg !2987
  store i64 %inc.prol, i64* %ob_refcnt.prol, align 8, !dbg !2987, !tbaa !2694
  %arrayidx13.prol = bitcast %struct._typeobject** %ob_item12 to %struct._object**, !dbg !2982
  store %struct._object* %10, %struct._object** %arrayidx13.prol, align 8, !dbg !2982, !tbaa !2681
  tail call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !681, metadata !2664), !dbg !2975
  br label %for.body.lr.ph.split, !dbg !2979

for.body.lr.ph.split:                             ; preds = %for.body.lr.ph, %for.body.prol
  %i.0191.unr = phi i64 [ 0, %for.body.lr.ph ], [ 1, %for.body.prol ]
  %12 = icmp eq i64 %5, 1, !dbg !2979
  br i1 %12, label %if.end.93.loopexit, label %for.body.lr.ph.split.split, !dbg !2979

for.body.lr.ph.split.split:                       ; preds = %for.body.lr.ph.split
  br label %for.body, !dbg !2979

for.body:                                         ; preds = %for.body, %for.body.lr.ph.split.split
  %i.0191 = phi i64 [ %i.0191.unr, %for.body.lr.ph.split.split ], [ %inc14.1, %for.body ]
  %arrayidx = getelementptr i64, i64* %1, i64 %i.0191, !dbg !2983
  %13 = load i64, i64* %arrayidx, align 8, !dbg !2983, !tbaa !2984
  tail call void @llvm.dbg.value(metadata i64 %13, i64 0, metadata !683, metadata !2664), !dbg !2985
  %arrayidx11 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %7, i64 0, i64 %13, !dbg !2980
  %14 = load %struct._object*, %struct._object** %arrayidx11, align 8, !dbg !2980, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %14, i64 0, metadata !674, metadata !2664), !dbg !2986
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %14, i64 0, i32 0, !dbg !2987
  %15 = load i64, i64* %ob_refcnt, align 8, !dbg !2987, !tbaa !2694
  %inc = add i64 %15, 1, !dbg !2987
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !2987, !tbaa !2694
  %arrayidx13 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %8, i64 0, i64 %i.0191, !dbg !2982
  store %struct._object* %14, %struct._object** %arrayidx13, align 8, !dbg !2982, !tbaa !2681
  %inc14 = add nuw nsw i64 %i.0191, 1, !dbg !2988
  tail call void @llvm.dbg.value(metadata i64 %inc14, i64 0, metadata !681, metadata !2664), !dbg !2975
  %arrayidx.1 = getelementptr i64, i64* %1, i64 %inc14, !dbg !2983
  %16 = load i64, i64* %arrayidx.1, align 8, !dbg !2983, !tbaa !2984
  tail call void @llvm.dbg.value(metadata i64 %13, i64 0, metadata !683, metadata !2664), !dbg !2985
  %arrayidx11.1 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %7, i64 0, i64 %16, !dbg !2980
  %17 = load %struct._object*, %struct._object** %arrayidx11.1, align 8, !dbg !2980, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %14, i64 0, metadata !674, metadata !2664), !dbg !2986
  %ob_refcnt.1 = getelementptr inbounds %struct._object, %struct._object* %17, i64 0, i32 0, !dbg !2987
  %18 = load i64, i64* %ob_refcnt.1, align 8, !dbg !2987, !tbaa !2694
  %inc.1 = add i64 %18, 1, !dbg !2987
  store i64 %inc.1, i64* %ob_refcnt.1, align 8, !dbg !2987, !tbaa !2694
  %arrayidx13.1 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %8, i64 0, i64 %inc14, !dbg !2982
  store %struct._object* %17, %struct._object** %arrayidx13.1, align 8, !dbg !2982, !tbaa !2681
  %inc14.1 = add nsw i64 %i.0191, 2, !dbg !2988
  tail call void @llvm.dbg.value(metadata i64 %inc14, i64 0, metadata !681, metadata !2664), !dbg !2975
  %exitcond.1 = icmp eq i64 %inc14.1, %5, !dbg !2979
  br i1 %exitcond.1, label %if.end.93.loopexit.unr-lcssa, label %for.body, !dbg !2979

if.else:                                          ; preds = %if.end
  %ob_refcnt15 = getelementptr inbounds %struct._object, %struct._object* %2, i64 0, i32 0, !dbg !2989
  %19 = load i64, i64* %ob_refcnt15, align 8, !dbg !2989, !tbaa !2694
  %cmp16 = icmp sgt i64 %19, 1, !dbg !2990
  br i1 %cmp16, label %if.then.17, label %if.end.40, !dbg !2991

if.then.17:                                       ; preds = %if.else
  tail call void @llvm.dbg.value(metadata %struct._object* %2, i64 0, metadata !684, metadata !2664), !dbg !2992
  %call18 = tail call %struct._object* @PyTuple_New(i64 %5) #1, !dbg !2993
  tail call void @llvm.dbg.value(metadata %struct._object* %call18, i64 0, metadata !678, metadata !2664), !dbg !2955
  %cmp19 = icmp eq %struct._object* %call18, null, !dbg !2994
  br i1 %cmp19, label %empty, label %if.end.21, !dbg !2996

if.end.21:                                        ; preds = %if.then.17
  store %struct._object* %call18, %struct._object** %result3, align 8, !dbg !2997, !tbaa !2910
  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !681, metadata !2664), !dbg !2975
  %cmp24.196 = icmp sgt i64 %5, 0, !dbg !2998
  br i1 %cmp24.196, label %for.body.25.lr.ph, label %do.body, !dbg !3001

for.body.25.lr.ph:                                ; preds = %if.end.21
  %ob_item26 = getelementptr inbounds %struct._object, %struct._object* %2, i64 1, i32 1, !dbg !3002
  %20 = bitcast %struct._typeobject** %ob_item26 to [1 x %struct._object*]*, !dbg !3002
  %ob_item30 = getelementptr inbounds %struct._object, %struct._object* %call18, i64 1, i32 1, !dbg !3004
  %21 = bitcast %struct._typeobject** %ob_item30 to [1 x %struct._object*]*, !dbg !3004
  %xtraiter225 = and i64 %5, 1, !dbg !3001
  %lcmp.mod226 = icmp eq i64 %xtraiter225, 0, !dbg !3001
  br i1 %lcmp.mod226, label %for.body.25.lr.ph.split, label %for.body.25.prol, !dbg !3001

for.body.25.prol:                                 ; preds = %for.body.25.lr.ph
  %arrayidx27.prol = bitcast %struct._typeobject** %ob_item26 to %struct._object**, !dbg !3002
  %22 = load %struct._object*, %struct._object** %arrayidx27.prol, align 8, !dbg !3002, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %22, i64 0, metadata !674, metadata !2664), !dbg !2986
  %ob_refcnt28.prol = getelementptr inbounds %struct._object, %struct._object* %22, i64 0, i32 0, !dbg !3005
  %23 = load i64, i64* %ob_refcnt28.prol, align 8, !dbg !3005, !tbaa !2694
  %inc29.prol = add i64 %23, 1, !dbg !3005
  store i64 %inc29.prol, i64* %ob_refcnt28.prol, align 8, !dbg !3005, !tbaa !2694
  %arrayidx31.prol = bitcast %struct._typeobject** %ob_item30 to %struct._object**, !dbg !3004
  store %struct._object* %22, %struct._object** %arrayidx31.prol, align 8, !dbg !3004, !tbaa !2681
  tail call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !681, metadata !2664), !dbg !2975
  br label %for.body.25.lr.ph.split, !dbg !3001

for.body.25.lr.ph.split:                          ; preds = %for.body.25.lr.ph, %for.body.25.prol
  %i.1197.unr = phi i64 [ 0, %for.body.25.lr.ph ], [ 1, %for.body.25.prol ]
  %24 = icmp eq i64 %5, 1, !dbg !3001
  br i1 %24, label %do.body.loopexit, label %for.body.25.lr.ph.split.split, !dbg !3001

for.body.25.lr.ph.split.split:                    ; preds = %for.body.25.lr.ph.split
  br label %for.body.25, !dbg !3001

for.body.25:                                      ; preds = %for.body.25, %for.body.25.lr.ph.split.split
  %i.1197 = phi i64 [ %i.1197.unr, %for.body.25.lr.ph.split.split ], [ %inc33.1, %for.body.25 ]
  %arrayidx27 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %20, i64 0, i64 %i.1197, !dbg !3002
  %25 = load %struct._object*, %struct._object** %arrayidx27, align 8, !dbg !3002, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %25, i64 0, metadata !674, metadata !2664), !dbg !2986
  %ob_refcnt28 = getelementptr inbounds %struct._object, %struct._object* %25, i64 0, i32 0, !dbg !3005
  %26 = load i64, i64* %ob_refcnt28, align 8, !dbg !3005, !tbaa !2694
  %inc29 = add i64 %26, 1, !dbg !3005
  store i64 %inc29, i64* %ob_refcnt28, align 8, !dbg !3005, !tbaa !2694
  %arrayidx31 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %21, i64 0, i64 %i.1197, !dbg !3004
  store %struct._object* %25, %struct._object** %arrayidx31, align 8, !dbg !3004, !tbaa !2681
  %inc33 = add nuw nsw i64 %i.1197, 1, !dbg !3006
  tail call void @llvm.dbg.value(metadata i64 %inc33, i64 0, metadata !681, metadata !2664), !dbg !2975
  %arrayidx27.1 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %20, i64 0, i64 %inc33, !dbg !3002
  %27 = load %struct._object*, %struct._object** %arrayidx27.1, align 8, !dbg !3002, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %25, i64 0, metadata !674, metadata !2664), !dbg !2986
  %ob_refcnt28.1 = getelementptr inbounds %struct._object, %struct._object* %27, i64 0, i32 0, !dbg !3005
  %28 = load i64, i64* %ob_refcnt28.1, align 8, !dbg !3005, !tbaa !2694
  %inc29.1 = add i64 %28, 1, !dbg !3005
  store i64 %inc29.1, i64* %ob_refcnt28.1, align 8, !dbg !3005, !tbaa !2694
  %arrayidx31.1 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %21, i64 0, i64 %inc33, !dbg !3004
  store %struct._object* %27, %struct._object** %arrayidx31.1, align 8, !dbg !3004, !tbaa !2681
  %inc33.1 = add nsw i64 %i.1197, 2, !dbg !3006
  tail call void @llvm.dbg.value(metadata i64 %inc33, i64 0, metadata !681, metadata !2664), !dbg !2975
  %exitcond202.1 = icmp eq i64 %inc33.1, %5, !dbg !3001
  br i1 %exitcond202.1, label %do.body.loopexit.unr-lcssa, label %for.body.25, !dbg !3001

do.body.loopexit.unr-lcssa:                       ; preds = %for.body.25
  br label %do.body.loopexit, !dbg !3007

do.body.loopexit:                                 ; preds = %for.body.25.lr.ph.split, %do.body.loopexit.unr-lcssa
  br label %do.body, !dbg !3007

do.body:                                          ; preds = %do.body.loopexit, %if.end.21
  tail call void @llvm.dbg.value(metadata %struct._object* %2, i64 0, metadata !689, metadata !2664), !dbg !3007
  %29 = load i64, i64* %ob_refcnt15, align 8, !dbg !3009, !tbaa !2694
  %dec = add i64 %29, -1, !dbg !3009
  store i64 %dec, i64* %ob_refcnt15, align 8, !dbg !3009, !tbaa !2694
  %cmp36 = icmp eq i64 %dec, 0, !dbg !3009
  br i1 %cmp36, label %if.else.38, label %if.end.40, !dbg !3011

if.else.38:                                       ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %2, i64 0, i32 1, !dbg !3012
  %30 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3012, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %30, i64 0, i32 4, !dbg !3012
  %31 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3012, !tbaa !2717
  tail call void %31(%struct._object* %2) #1, !dbg !3012
  br label %if.end.40

if.end.40:                                        ; preds = %if.else.38, %do.body, %if.else
  %result.0 = phi %struct._object* [ %2, %if.else ], [ %call18, %do.body ], [ %call18, %if.else.38 ]
  %add = sub i64 %4, %5, !dbg !3014
  br label %for.cond.41, !dbg !3017

for.cond.41:                                      ; preds = %land.rhs, %if.end.40
  %i.2.in = phi i64 [ %5, %if.end.40 ], [ %i.2, %land.rhs ]
  %i.2 = add i64 %i.2.in, -1, !dbg !3018
  %cmp42 = icmp sgt i64 %i.2, -1, !dbg !3019
  br i1 %cmp42, label %land.rhs, label %empty.loopexit, !dbg !3020

land.rhs:                                         ; preds = %for.cond.41
  %arrayidx43 = getelementptr i64, i64* %1, i64 %i.2, !dbg !3021
  %32 = load i64, i64* %arrayidx43, align 8, !dbg !3022, !tbaa !2984
  %sub44 = add i64 %add, %i.2, !dbg !3023
  %cmp45 = icmp eq i64 %32, %sub44, !dbg !3024
  br i1 %cmp45, label %for.cond.41, label %if.end.52, !dbg !3025

if.end.52:                                        ; preds = %land.rhs
  %.lcssa = phi i64 [ %32, %land.rhs ]
  %arrayidx43.lcssa = phi i64* [ %arrayidx43, %land.rhs ]
  %i.2.lcssa228 = phi i64 [ %i.2, %land.rhs ]
  %i.2.in.lcssa227 = phi i64 [ %i.2.in, %land.rhs ]
  %inc54 = add i64 %.lcssa, 1, !dbg !3022
  store i64 %inc54, i64* %arrayidx43.lcssa, align 8, !dbg !3022, !tbaa !2984
  tail call void @llvm.dbg.value(metadata i64 %i.2.in, i64 0, metadata !682, metadata !2664), !dbg !3027
  %cmp57.194 = icmp sgt i64 %5, %i.2.in.lcssa227, !dbg !3028
  br i1 %cmp57.194, label %for.body.58.preheader, label %for.cond.66.preheader, !dbg !3031

for.body.58.preheader:                            ; preds = %if.end.52
  %33 = add i64 %5, -1, !dbg !3032
  %34 = sub i64 %33, %i.2.in.lcssa227, !dbg !3032
  %backedge.overflow = icmp eq i64 %34, -1
  br i1 %backedge.overflow, label %for.body.58.preheader220, label %overflow.checked, !dbg !3032

for.body.58.preheader220:                         ; preds = %middle.block, %for.body.58.preheader
  %.ph = phi i64 [ %inc54, %for.body.58.preheader ], [ %resume.val, %middle.block ]
  %j.0195.ph = phi i64 [ %i.2.in.lcssa227, %for.body.58.preheader ], [ %resume.val210, %middle.block ]
  br label %for.body.58, !dbg !3032

overflow.checked:                                 ; preds = %for.body.58.preheader
  %35 = sub i64 %5, %i.2.in.lcssa227, !dbg !3032
  %n.vec = and i64 %35, -4, !dbg !3033
  %end.idx.rnd.down = add i64 %n.vec, %i.2.in.lcssa227, !dbg !3033
  %cmp.zero = icmp eq i64 %n.vec, 0, !dbg !3033
  %ind.end = add i64 %inc54, %n.vec, !dbg !3032
  br i1 %cmp.zero, label %middle.block, label %vector.body.preheader, !dbg !3032

vector.body.preheader:                            ; preds = %overflow.checked
  %36 = sub i64 %5, %i.2.in.lcssa227, !dbg !3034
  %37 = add i64 %36, -4, !dbg !3034
  %38 = lshr i64 %37, 2, !dbg !3034
  %39 = and i64 %38, 1, !dbg !3034
  %lcmp.mod224 = icmp eq i64 %39, 0, !dbg !3034
  br i1 %lcmp.mod224, label %vector.body.prol, label %vector.body.preheader.split, !dbg !3034

vector.body.prol:                                 ; preds = %vector.body.preheader
  %offset.idx.prol = add i64 %.lcssa, 1, !dbg !3034
  %broadcast.splatinsert.prol = insertelement <2 x i64> undef, i64 %offset.idx.prol, i32 0, !dbg !3034
  %broadcast.splat.prol = shufflevector <2 x i64> %broadcast.splatinsert.prol, <2 x i64> undef, <2 x i32> zeroinitializer, !dbg !3034
  %40 = add <2 x i64> %broadcast.splat.prol, <i64 1, i64 2>, !dbg !3032
  %41 = add <2 x i64> %broadcast.splat.prol, <i64 3, i64 4>, !dbg !3032
  %42 = getelementptr i64, i64* %1, i64 %i.2.in.lcssa227, !dbg !3035
  %43 = bitcast i64* %42 to <2 x i64>*, !dbg !3036
  store <2 x i64> %40, <2 x i64>* %43, align 8, !dbg !3036, !tbaa !2984
  %44 = getelementptr i64, i64* %42, i64 2, !dbg !3036
  %45 = bitcast i64* %44 to <2 x i64>*, !dbg !3036
  store <2 x i64> %41, <2 x i64>* %45, align 8, !dbg !3036, !tbaa !2984
  %index.next.prol = add i64 %i.2.in.lcssa227, 4, !dbg !3033
  br label %vector.body.preheader.split, !dbg !3033

vector.body.preheader.split:                      ; preds = %vector.body.prol, %vector.body.preheader
  %index.unr = phi i64 [ %i.2.in.lcssa227, %vector.body.preheader ], [ %index.next.prol, %vector.body.prol ]
  %46 = icmp eq i64 %38, 0, !dbg !3034
  br i1 %46, label %middle.block.loopexit, label %vector.body.preheader.split.split, !dbg !3034

vector.body.preheader.split.split:                ; preds = %vector.body.preheader.split
  br label %vector.body, !dbg !3034

vector.body:                                      ; preds = %vector.body, %vector.body.preheader.split.split
  %index = phi i64 [ %index.unr, %vector.body.preheader.split.split ], [ %index.next.1, %vector.body ], !dbg !3033
  %normalized.idx = sub i64 %index, %i.2.in.lcssa227, !dbg !3034
  %offset.idx = add i64 %inc54, %normalized.idx, !dbg !3034
  %broadcast.splatinsert = insertelement <2 x i64> undef, i64 %offset.idx, i32 0, !dbg !3034
  %broadcast.splat = shufflevector <2 x i64> %broadcast.splatinsert, <2 x i64> undef, <2 x i32> zeroinitializer, !dbg !3034
  %47 = add <2 x i64> %broadcast.splat, <i64 1, i64 2>, !dbg !3032
  %48 = add <2 x i64> %broadcast.splat, <i64 3, i64 4>, !dbg !3032
  %49 = getelementptr i64, i64* %1, i64 %index, !dbg !3035
  %50 = bitcast i64* %49 to <2 x i64>*, !dbg !3036
  store <2 x i64> %47, <2 x i64>* %50, align 8, !dbg !3036, !tbaa !2984
  %51 = getelementptr i64, i64* %49, i64 2, !dbg !3036
  %52 = bitcast i64* %51 to <2 x i64>*, !dbg !3036
  store <2 x i64> %48, <2 x i64>* %52, align 8, !dbg !3036, !tbaa !2984
  %index.next = add i64 %index, 4, !dbg !3033
  %normalized.idx.1 = sub i64 %index.next, %i.2.in.lcssa227, !dbg !3034
  %offset.idx.1 = add i64 %inc54, %normalized.idx.1, !dbg !3034
  %broadcast.splatinsert.1 = insertelement <2 x i64> undef, i64 %offset.idx.1, i32 0, !dbg !3034
  %broadcast.splat.1 = shufflevector <2 x i64> %broadcast.splatinsert.1, <2 x i64> undef, <2 x i32> zeroinitializer, !dbg !3034
  %53 = add <2 x i64> %broadcast.splat.1, <i64 1, i64 2>, !dbg !3032
  %54 = add <2 x i64> %broadcast.splat.1, <i64 3, i64 4>, !dbg !3032
  %55 = getelementptr i64, i64* %1, i64 %index.next, !dbg !3035
  %56 = bitcast i64* %55 to <2 x i64>*, !dbg !3036
  store <2 x i64> %53, <2 x i64>* %56, align 8, !dbg !3036, !tbaa !2984
  %57 = getelementptr i64, i64* %55, i64 2, !dbg !3036
  %58 = bitcast i64* %57 to <2 x i64>*, !dbg !3036
  store <2 x i64> %54, <2 x i64>* %58, align 8, !dbg !3036, !tbaa !2984
  %index.next.1 = add i64 %index, 8, !dbg !3033
  %59 = icmp eq i64 %index.next.1, %end.idx.rnd.down, !dbg !3033
  br i1 %59, label %middle.block.loopexit.unr-lcssa, label %vector.body, !dbg !3033, !llvm.loop !3037

middle.block.loopexit.unr-lcssa:                  ; preds = %vector.body
  br label %middle.block.loopexit

middle.block.loopexit:                            ; preds = %vector.body.preheader.split, %middle.block.loopexit.unr-lcssa
  br label %middle.block

middle.block:                                     ; preds = %middle.block.loopexit, %overflow.checked
  %resume.val = phi i64 [ %inc54, %overflow.checked ], [ %ind.end, %middle.block.loopexit ]
  %resume.val210 = phi i64 [ %i.2.in.lcssa227, %overflow.checked ], [ %end.idx.rnd.down, %middle.block.loopexit ]
  %cmp.n = icmp eq i64 %5, %resume.val210
  br i1 %cmp.n, label %for.cond.66.preheader, label %for.body.58.preheader220, !dbg !3032

for.cond.66.preheader.loopexit:                   ; preds = %for.body.58
  br label %for.cond.66.preheader, !dbg !3040

for.cond.66.preheader:                            ; preds = %for.cond.66.preheader.loopexit, %middle.block, %if.end.52
  %cmp67.192 = icmp slt i64 %i.2.lcssa228, %5, !dbg !3040
  br i1 %cmp67.192, label %for.body.68.lr.ph, label %if.end.93, !dbg !3041

for.body.68.lr.ph:                                ; preds = %for.cond.66.preheader
  %ob_item70 = getelementptr inbounds %struct._object, %struct._object* %0, i64 1, i32 1, !dbg !3042
  %60 = bitcast %struct._typeobject** %ob_item70 to [1 x %struct._object*]*, !dbg !3042
  %ob_item74 = getelementptr inbounds %struct._object, %struct._object* %result.0, i64 1, i32 1, !dbg !3043
  %61 = bitcast %struct._typeobject** %ob_item74 to [1 x %struct._object*]*, !dbg !3043
  br label %for.body.68, !dbg !3041

for.body.58:                                      ; preds = %for.body.58.preheader220, %for.body.58
  %62 = phi i64 [ %add61, %for.body.58 ], [ %.ph, %for.body.58.preheader220 ], !dbg !3034
  %j.0195 = phi i64 [ %inc64, %for.body.58 ], [ %j.0195.ph, %for.body.58.preheader220 ]
  %add61 = add i64 %62, 1, !dbg !3032
  %arrayidx62 = getelementptr i64, i64* %1, i64 %j.0195, !dbg !3035
  store i64 %add61, i64* %arrayidx62, align 8, !dbg !3036, !tbaa !2984
  %inc64 = add nsw i64 %j.0195, 1, !dbg !3033
  tail call void @llvm.dbg.value(metadata i64 %inc64, i64 0, metadata !682, metadata !2664), !dbg !3027
  %exitcond201 = icmp eq i64 %inc64, %5, !dbg !3031
  br i1 %exitcond201, label %for.cond.66.preheader.loopexit, label %for.body.58, !dbg !3031, !llvm.loop !3044

for.body.68:                                      ; preds = %if.end.87, %for.body.68.lr.ph
  %i.3193 = phi i64 [ %i.2.lcssa228, %for.body.68.lr.ph ], [ %inc91, %if.end.87 ]
  %arrayidx69 = getelementptr i64, i64* %1, i64 %i.3193, !dbg !3046
  %63 = load i64, i64* %arrayidx69, align 8, !dbg !3046, !tbaa !2984
  tail call void @llvm.dbg.value(metadata i64 %63, i64 0, metadata !683, metadata !2664), !dbg !2985
  %arrayidx71 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %60, i64 0, i64 %63, !dbg !3042
  %64 = load %struct._object*, %struct._object** %arrayidx71, align 8, !dbg !3042, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %64, i64 0, metadata !674, metadata !2664), !dbg !2986
  %ob_refcnt72 = getelementptr inbounds %struct._object, %struct._object* %64, i64 0, i32 0, !dbg !3047
  %65 = load i64, i64* %ob_refcnt72, align 8, !dbg !3047, !tbaa !2694
  %inc73 = add i64 %65, 1, !dbg !3047
  store i64 %inc73, i64* %ob_refcnt72, align 8, !dbg !3047, !tbaa !2694
  %arrayidx75 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %61, i64 0, i64 %i.3193, !dbg !3043
  %66 = load %struct._object*, %struct._object** %arrayidx75, align 8, !dbg !3043, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %66, i64 0, metadata !675, metadata !2664), !dbg !3048
  store %struct._object* %64, %struct._object** %arrayidx75, align 8, !dbg !3049, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %66, i64 0, metadata !691, metadata !2664), !dbg !3050
  %ob_refcnt80 = getelementptr inbounds %struct._object, %struct._object* %66, i64 0, i32 0, !dbg !3052
  %67 = load i64, i64* %ob_refcnt80, align 8, !dbg !3052, !tbaa !2694
  %dec81 = add i64 %67, -1, !dbg !3052
  store i64 %dec81, i64* %ob_refcnt80, align 8, !dbg !3052, !tbaa !2694
  %cmp82 = icmp eq i64 %dec81, 0, !dbg !3052
  br i1 %cmp82, label %if.else.84, label %if.end.87, !dbg !3054

if.else.84:                                       ; preds = %for.body.68
  %ob_type85 = getelementptr inbounds %struct._object, %struct._object* %66, i64 0, i32 1, !dbg !3055
  %68 = load %struct._typeobject*, %struct._typeobject** %ob_type85, align 8, !dbg !3055, !tbaa !2667
  %tp_dealloc86 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %68, i64 0, i32 4, !dbg !3055
  %69 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc86, align 8, !dbg !3055, !tbaa !2717
  tail call void %69(%struct._object* %66) #1, !dbg !3055
  br label %if.end.87

if.end.87:                                        ; preds = %for.body.68, %if.else.84
  %inc91 = add nsw i64 %i.3193, 1, !dbg !3057
  tail call void @llvm.dbg.value(metadata i64 %inc91, i64 0, metadata !681, metadata !2664), !dbg !2975
  %exitcond200 = icmp eq i64 %inc91, %5, !dbg !3041
  br i1 %exitcond200, label %if.end.93.loopexit219, label %for.body.68, !dbg !3041

if.end.93.loopexit.unr-lcssa:                     ; preds = %for.body
  br label %if.end.93.loopexit, !dbg !3058

if.end.93.loopexit:                               ; preds = %for.body.lr.ph.split, %if.end.93.loopexit.unr-lcssa
  br label %if.end.93, !dbg !3058

if.end.93.loopexit219:                            ; preds = %if.end.87
  br label %if.end.93, !dbg !3058

if.end.93:                                        ; preds = %if.end.93.loopexit219, %if.end.93.loopexit, %for.cond.66.preheader, %if.end.8
  %result.1 = phi %struct._object* [ %call, %if.end.8 ], [ %result.0, %for.cond.66.preheader ], [ %call, %if.end.93.loopexit ], [ %result.0, %if.end.93.loopexit219 ]
  %ob_refcnt94 = getelementptr inbounds %struct._object, %struct._object* %result.1, i64 0, i32 0, !dbg !3058
  %70 = load i64, i64* %ob_refcnt94, align 8, !dbg !3058, !tbaa !2694
  %inc95 = add i64 %70, 1, !dbg !3058
  store i64 %inc95, i64* %ob_refcnt94, align 8, !dbg !3058, !tbaa !2694
  br label %cleanup.97, !dbg !3059

empty.loopexit:                                   ; preds = %for.cond.41
  br label %empty, !dbg !3060

empty:                                            ; preds = %empty.loopexit, %if.then.17, %if.then.5
  store i32 1, i32* %stopped, align 4, !dbg !3060, !tbaa !2964
  br label %cleanup.97, !dbg !3061

cleanup.97:                                       ; preds = %entry, %empty, %if.end.93
  %retval.0 = phi %struct._object* [ null, %empty ], [ %result.1, %if.end.93 ], [ null, %entry ]
  ret %struct._object* %retval.0, !dbg !3062
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @combinations_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %r = alloca i64, align 8
  %iterable = alloca %struct._object*, align 8
  tail call void @llvm.dbg.value(metadata %struct._typeobject* %type, i64 0, metadata !746, metadata !2664), !dbg !3063
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !747, metadata !2664), !dbg !3064
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !748, metadata !2664), !dbg !3065
  %0 = bitcast i64* %r to i8*, !dbg !3066
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3066
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !752, metadata !2664), !dbg !3067
  %1 = bitcast %struct._object** %iterable to i8*, !dbg !3068
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !3068
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !753, metadata !2664), !dbg !3069
  store %struct._object* null, %struct._object** %iterable, align 8, !dbg !3069, !tbaa !2681
  tail call void @llvm.dbg.value(metadata i64* null, i64 0, metadata !754, metadata !2664), !dbg !3070
  tail call void @llvm.dbg.value(metadata i64* %r, i64 0, metadata !751, metadata !2664), !dbg !3071
  tail call void @llvm.dbg.value(metadata %struct._object** %iterable, i64 0, metadata !753, metadata !2664), !dbg !3069
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %args, %struct._object* %kwds, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i64 0, i64 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @combinations_new.kwargs, i64 0, i64 0), %struct._object** nonnull %iterable, i64* nonnull %r) #1, !dbg !3072
  %tobool = icmp eq i32 %call, 0, !dbg !3072
  br i1 %tobool, label %cleanup, label %if.end, !dbg !3074

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct._object** %iterable, i64 0, metadata !753, metadata !2664), !dbg !3069
  %2 = load %struct._object*, %struct._object** %iterable, align 8, !dbg !3075, !tbaa !2681
  %call1 = call %struct._object* @PySequence_Tuple(%struct._object* %2) #1, !dbg !3076
  call void @llvm.dbg.value(metadata %struct._object* %call1, i64 0, metadata !752, metadata !2664), !dbg !3067
  %cmp = icmp eq %struct._object* %call1, null, !dbg !3077
  br i1 %cmp, label %cleanup, label %if.end.3, !dbg !3079

if.end.3:                                         ; preds = %if.end
  %3 = getelementptr inbounds %struct._object, %struct._object* %call1, i64 1, i32 0, !dbg !3080
  %4 = load i64, i64* %3, align 8, !dbg !3080, !tbaa !2957
  call void @llvm.dbg.value(metadata i64 %4, i64 0, metadata !750, metadata !2664), !dbg !3081
  call void @llvm.dbg.value(metadata i64* %r, i64 0, metadata !751, metadata !2664), !dbg !3071
  %5 = load i64, i64* %r, align 8, !dbg !3082, !tbaa !2984
  %cmp4 = icmp slt i64 %5, 0, !dbg !3084
  br i1 %cmp4, label %do.body.thread67, label %if.end.6, !dbg !3085

do.body.thread67:                                 ; preds = %if.end.3
  %6 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !3086, !tbaa !2681
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0)) #1, !dbg !3088
  call void @llvm.dbg.value(metadata %struct._object* %call1, i64 0, metadata !756, metadata !2664), !dbg !3089
  br label %do.body.26, !dbg !3091

if.end.6:                                         ; preds = %if.end.3
  %mul = shl i64 %5, 3, !dbg !3092
  %call7 = call i8* @PyMem_Malloc(i64 %mul) #1, !dbg !3093
  %7 = bitcast i8* %call7 to i64*, !dbg !3093
  call void @llvm.dbg.value(metadata i64* %7, i64 0, metadata !754, metadata !2664), !dbg !3070
  %cmp8 = icmp eq i8* %call7, null, !dbg !3094
  br i1 %cmp8, label %error.thread, label %for.cond.preheader, !dbg !3096

for.cond.preheader:                               ; preds = %if.end.6
  call void @llvm.dbg.value(metadata i64* %r, i64 0, metadata !751, metadata !2664), !dbg !3071
  %8 = load i64, i64* %r, align 8, !dbg !3097, !tbaa !2984
  %cmp12.68 = icmp sgt i64 %8, 0, !dbg !3100
  br i1 %cmp12.68, label %for.body.preheader, label %for.end, !dbg !3101

for.body.preheader:                               ; preds = %for.cond.preheader
  br label %for.body, !dbg !3102

error.thread:                                     ; preds = %if.end.6
  %call10 = call %struct._object* @PyErr_NoMemory() #1, !dbg !3103
  br label %do.body.26, !dbg !3105

for.body:                                         ; preds = %for.body.preheader, %for.body
  %i.069 = phi i64 [ %inc, %for.body ], [ 0, %for.body.preheader ]
  %arrayidx = getelementptr i64, i64* %7, i64 %i.069, !dbg !3102
  store i64 %i.069, i64* %arrayidx, align 8, !dbg !3106, !tbaa !2984
  %inc = add i64 %i.069, 1, !dbg !3107
  call void @llvm.dbg.value(metadata i64 %inc, i64 0, metadata !755, metadata !2664), !dbg !3108
  call void @llvm.dbg.value(metadata i64* %r, i64 0, metadata !751, metadata !2664), !dbg !3071
  %9 = load i64, i64* %r, align 8, !dbg !3097, !tbaa !2984
  %cmp12 = icmp slt i64 %inc, %9, !dbg !3100
  br i1 %cmp12, label %for.body, label %for.end.loopexit, !dbg !3101

for.end.loopexit:                                 ; preds = %for.body
  br label %for.end, !dbg !3109

for.end:                                          ; preds = %for.end.loopexit, %for.cond.preheader
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %type, i64 0, i32 36, !dbg !3109
  %10 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !3109, !tbaa !2835
  %call13 = call %struct._object* %10(%struct._typeobject* %type, i64 0) #1, !dbg !3110
  %cmp14 = icmp eq %struct._object* %call13, null, !dbg !3111
  br i1 %cmp14, label %if.then.22, label %if.end.16, !dbg !3113

if.end.16:                                        ; preds = %for.end
  %pool17 = getelementptr inbounds %struct._object, %struct._object* %call13, i64 1, !dbg !3114
  %11 = bitcast %struct._object* %pool17 to %struct._object**, !dbg !3114
  store %struct._object* %call1, %struct._object** %11, align 8, !dbg !3115, !tbaa !2897
  %indices18 = getelementptr inbounds %struct._object, %struct._object* %call13, i64 1, i32 1, !dbg !3116
  %12 = bitcast %struct._typeobject** %indices18 to i8**, !dbg !3117
  store i8* %call7, i8** %12, align 8, !dbg !3117, !tbaa !2922
  %result = getelementptr inbounds %struct._object, %struct._object* %call13, i64 2, !dbg !3118
  %13 = bitcast %struct._object* %result to %struct._object**, !dbg !3118
  store %struct._object* null, %struct._object** %13, align 8, !dbg !3119, !tbaa !2910
  call void @llvm.dbg.value(metadata i64* %r, i64 0, metadata !751, metadata !2664), !dbg !3071
  %14 = load i64, i64* %r, align 8, !dbg !3120, !tbaa !2984
  %r19 = getelementptr inbounds %struct._object, %struct._object* %call13, i64 2, i32 1, !dbg !3121
  %15 = bitcast %struct._typeobject** %r19 to i64*, !dbg !3121
  store i64 %14, i64* %15, align 8, !dbg !3122, !tbaa !2960
  call void @llvm.dbg.value(metadata i64* %r, i64 0, metadata !751, metadata !2664), !dbg !3071
  %16 = load i64, i64* %r, align 8, !dbg !3123, !tbaa !2984
  %cmp20 = icmp sgt i64 %16, %4, !dbg !3124
  %cond = zext i1 %cmp20 to i32, !dbg !3123
  %stopped = getelementptr inbounds %struct._object, %struct._object* %call13, i64 3, !dbg !3125
  %17 = bitcast %struct._object* %stopped to i32*, !dbg !3125
  store i32 %cond, i32* %17, align 4, !dbg !3126, !tbaa !2964
  br label %cleanup, !dbg !3127

if.then.22:                                       ; preds = %for.end
  call void @PyMem_Free(i8* %call7) #1, !dbg !3128
  br label %do.body.26, !dbg !3128

do.body.26:                                       ; preds = %if.then.22, %error.thread, %do.body.thread67
  call void @llvm.dbg.value(metadata %struct._object* %call1, i64 0, metadata !758, metadata !2664), !dbg !3130
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call1, i64 0, i32 0, !dbg !3132
  %18 = load i64, i64* %ob_refcnt, align 8, !dbg !3132, !tbaa !2694
  %dec = add i64 %18, -1, !dbg !3132
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3132, !tbaa !2694
  %cmp27 = icmp eq i64 %dec, 0, !dbg !3132
  br i1 %cmp27, label %if.else, label %cleanup, !dbg !3134

if.else:                                          ; preds = %do.body.26
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call1, i64 0, i32 1, !dbg !3135
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3135, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i64 0, i32 4, !dbg !3135
  %20 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3135, !tbaa !2717
  call void %20(%struct._object* %call1) #1, !dbg !3135
  br label %cleanup

cleanup:                                          ; preds = %if.end, %do.body.26, %if.else, %entry, %if.end.16
  %retval.0 = phi %struct._object* [ %call13, %if.end.16 ], [ null, %entry ], [ null, %if.else ], [ null, %do.body.26 ], [ null, %if.end ]
  call void @llvm.lifetime.end(i64 8, i8* %1) #1, !dbg !3137
  call void @llvm.lifetime.end(i64 8, i8* %0) #1, !dbg !3137
  ret %struct._object* %retval.0, !dbg !3137
}

declare void @PyMem_Free(i8*) #3

declare %struct._object* @PyTuple_New(i64) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @combinations_reduce(%struct.combinationsobject* nocapture readonly %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.combinationsobject* %lz, i64 0, metadata !698, metadata !2664), !dbg !3138
  %result = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %lz, i64 0, i32 3, !dbg !3139
  %0 = load %struct._object*, %struct._object** %result, align 8, !dbg !3139, !tbaa !2910
  %cmp = icmp eq %struct._object* %0, null, !dbg !3140
  br i1 %cmp, label %if.then, label %if.else, !dbg !3141

if.then:                                          ; preds = %entry
  %ob_type = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %lz, i64 0, i32 0, i32 1, !dbg !3142
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3142, !tbaa !2667
  %pool = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %lz, i64 0, i32 1, !dbg !3144
  %2 = load %struct._object*, %struct._object** %pool, align 8, !dbg !3144, !tbaa !2897
  %r = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %lz, i64 0, i32 4, !dbg !3145
  %3 = load i64, i64* %r, align 8, !dbg !3145, !tbaa !2960
  %call = tail call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), %struct._typeobject* %1, %struct._object* %2, i64 %3) #1, !dbg !3146
  br label %return, !dbg !3147

if.else:                                          ; preds = %entry
  %stopped = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %lz, i64 0, i32 5, !dbg !3148
  %4 = load i32, i32* %stopped, align 4, !dbg !3148, !tbaa !2964
  %tobool = icmp eq i32 %4, 0, !dbg !3149
  br i1 %tobool, label %if.else.5, label %if.then.1, !dbg !3150

if.then.1:                                        ; preds = %if.else
  %ob_type2 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %lz, i64 0, i32 0, i32 1, !dbg !3151
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type2, align 8, !dbg !3151, !tbaa !2667
  %r3 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %lz, i64 0, i32 4, !dbg !3153
  %6 = load i64, i64* %r3, align 8, !dbg !3153, !tbaa !2960
  %call4 = tail call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), %struct._typeobject* %5, i64 %6) #1, !dbg !3154
  br label %return, !dbg !3155

if.else.5:                                        ; preds = %if.else
  %r6 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %lz, i64 0, i32 4, !dbg !3156
  %7 = load i64, i64* %r6, align 8, !dbg !3156, !tbaa !2960
  %call7 = tail call %struct._object* @PyTuple_New(i64 %7) #1, !dbg !3157
  tail call void @llvm.dbg.value(metadata %struct._object* %call7, i64 0, metadata !699, metadata !2664), !dbg !3158
  %tobool8 = icmp eq %struct._object* %call7, null, !dbg !3159
  br i1 %tobool8, label %return, label %for.cond.preheader, !dbg !3161

for.cond.preheader:                               ; preds = %if.else.5
  %8 = load i64, i64* %r6, align 8, !dbg !3162, !tbaa !2960
  %cmp11.54 = icmp sgt i64 %8, 0, !dbg !3163
  br i1 %cmp11.54, label %for.body.lr.ph, label %for.end, !dbg !3164

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %indices12 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %lz, i64 0, i32 2, !dbg !3165
  %ob_item = getelementptr inbounds %struct._object, %struct._object* %call7, i64 1, i32 1, !dbg !3166
  %9 = bitcast %struct._typeobject** %ob_item to [1 x %struct._object*]*, !dbg !3166
  br label %for.body, !dbg !3164

for.body:                                         ; preds = %for.body.lr.ph, %if.end.21
  %i.055 = phi i64 [ 0, %for.body.lr.ph ], [ %inc, %if.end.21 ]
  %10 = load i64*, i64** %indices12, align 8, !dbg !3165, !tbaa !2922
  %arrayidx = getelementptr i64, i64* %10, i64 %i.055, !dbg !3167
  %11 = load i64, i64* %arrayidx, align 8, !dbg !3167, !tbaa !2984
  %call13 = tail call %struct._object* @PyLong_FromSsize_t(i64 %11) #1, !dbg !3168
  tail call void @llvm.dbg.value(metadata %struct._object* %call13, i64 0, metadata !704, metadata !2664), !dbg !3169
  %tobool14 = icmp eq %struct._object* %call13, null, !dbg !3170
  br i1 %tobool14, label %do.body, label %if.end.21, !dbg !3171

do.body:                                          ; preds = %for.body
  tail call void @llvm.dbg.value(metadata %struct._object* %call7, i64 0, metadata !708, metadata !2664), !dbg !3172
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call7, i64 0, i32 0, !dbg !3174
  %12 = load i64, i64* %ob_refcnt, align 8, !dbg !3174, !tbaa !2694
  %dec = add i64 %12, -1, !dbg !3174
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3174, !tbaa !2694
  %cmp16 = icmp eq i64 %dec, 0, !dbg !3174
  br i1 %cmp16, label %if.else.18, label %return, !dbg !3176

if.else.18:                                       ; preds = %do.body
  %ob_type19 = getelementptr inbounds %struct._object, %struct._object* %call7, i64 0, i32 1, !dbg !3177
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type19, align 8, !dbg !3177, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i64 0, i32 4, !dbg !3177
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3177, !tbaa !2717
  tail call void %14(%struct._object* %call7) #1, !dbg !3177
  br label %return

if.end.21:                                        ; preds = %for.body
  %arrayidx22 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %9, i64 0, i64 %i.055, !dbg !3166
  store %struct._object* %call13, %struct._object** %arrayidx22, align 8, !dbg !3166, !tbaa !2681
  %inc = add i64 %i.055, 1, !dbg !3179
  tail call void @llvm.dbg.value(metadata i64 %inc, i64 0, metadata !703, metadata !2664), !dbg !3180
  %15 = load i64, i64* %r6, align 8, !dbg !3162, !tbaa !2960
  %cmp11 = icmp slt i64 %inc, %15, !dbg !3163
  br i1 %cmp11, label %for.body, label %for.end.loopexit, !dbg !3164

for.end.loopexit:                                 ; preds = %if.end.21
  %.lcssa60 = phi i64 [ %15, %if.end.21 ]
  br label %for.end, !dbg !3181

for.end:                                          ; preds = %for.end.loopexit, %for.cond.preheader
  %.lcssa = phi i64 [ %8, %for.cond.preheader ], [ %.lcssa60, %for.end.loopexit ]
  %ob_type23 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %lz, i64 0, i32 0, i32 1, !dbg !3181
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type23, align 8, !dbg !3181, !tbaa !2667
  %pool24 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %lz, i64 0, i32 1, !dbg !3182
  %17 = load %struct._object*, %struct._object** %pool24, align 8, !dbg !3182, !tbaa !2897
  %call26 = tail call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0), %struct._typeobject* %16, %struct._object* %17, i64 %.lcssa, %struct._object* %call7) #1, !dbg !3183
  br label %return, !dbg !3184

return:                                           ; preds = %for.end, %if.else.5, %if.else.18, %do.body, %if.then.1, %if.then
  %retval.3 = phi %struct._object* [ %call, %if.then ], [ %call4, %if.then.1 ], [ %call26, %for.end ], [ null, %if.else.5 ], [ null, %if.else.18 ], [ null, %do.body ]
  ret %struct._object* %retval.3, !dbg !3185
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @combinations_setstate(%struct.combinationsobject* nocapture %lz, %struct._object* nocapture readonly %state) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.combinationsobject* %lz, i64 0, metadata !716, metadata !2664), !dbg !3186
  tail call void @llvm.dbg.value(metadata %struct._object* %state, i64 0, metadata !717, metadata !2664), !dbg !3187
  %pool = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %lz, i64 0, i32 1, !dbg !3188
  %0 = bitcast %struct._object** %pool to %struct.PyVarObject**, !dbg !3188
  %1 = load %struct.PyVarObject*, %struct.PyVarObject** %0, align 8, !dbg !3188, !tbaa !2897
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1, i64 0, i32 1, !dbg !3188
  %2 = load i64, i64* %ob_size, align 8, !dbg !3188, !tbaa !2957
  tail call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !720, metadata !2664), !dbg !3189
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %state, i64 0, i32 1, !dbg !3190
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3190, !tbaa !2667
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 19, !dbg !3190
  %4 = load i64, i64* %tp_flags, align 8, !dbg !3190, !tbaa !3192
  %and = and i64 %4, 67108864, !dbg !3190
  %cmp = icmp eq i64 %and, 0, !dbg !3190
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3193

lor.lhs.false:                                    ; preds = %entry
  %5 = getelementptr inbounds %struct._object, %struct._object* %state, i64 1, i32 0, !dbg !3194
  %6 = load i64, i64* %5, align 8, !dbg !3194, !tbaa !2957
  %r = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %lz, i64 0, i32 4, !dbg !3196
  %7 = load i64, i64* %r, align 8, !dbg !3197, !tbaa !2960
  %cmp2 = icmp eq i64 %6, %7, !dbg !3198
  br i1 %cmp2, label %for.cond.preheader, label %if.then, !dbg !3199

for.cond.preheader:                               ; preds = %lor.lhs.false
  %cmp4.100 = icmp sgt i64 %6, 0, !dbg !3200
  br i1 %cmp4.100, label %for.body.lr.ph, label %for.end, !dbg !3201

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %ob_item = getelementptr inbounds %struct._object, %struct._object* %state, i64 1, i32 1, !dbg !3202
  %8 = bitcast %struct._typeobject** %ob_item to [1 x %struct._object*]*, !dbg !3202
  %indices = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %lz, i64 0, i32 2, !dbg !3203
  br label %for.body, !dbg !3201

if.then:                                          ; preds = %lor.lhs.false, %entry
  %9 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !3204, !tbaa !2681
  tail call void @PyErr_SetString(%struct._object* %9, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0)) #1, !dbg !3206
  br label %cleanup.54, !dbg !3207

for.body:                                         ; preds = %for.body.lr.ph, %if.end.8
  %i.0101 = phi i64 [ 0, %for.body.lr.ph ], [ %inc, %if.end.8 ]
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %8, i64 0, i64 %i.0101, !dbg !3202
  %10 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !3202, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %10, i64 0, metadata !725, metadata !2664), !dbg !3208
  %call = tail call i64 @PyLong_AsSsize_t(%struct._object* %10) #1, !dbg !3209
  tail call void @llvm.dbg.value(metadata i64 %call, i64 0, metadata !726, metadata !2664), !dbg !3210
  %cmp5 = icmp eq i64 %call, -1, !dbg !3211
  br i1 %cmp5, label %land.lhs.true, label %if.end.8, !dbg !3213

land.lhs.true:                                    ; preds = %for.body
  %call6 = tail call %struct._object* @PyErr_Occurred() #1, !dbg !3214
  %tobool = icmp eq %struct._object* %call6, null, !dbg !3214
  br i1 %tobool, label %if.end.8, label %cleanup.54.loopexit, !dbg !3216

if.end.8:                                         ; preds = %land.lhs.true, %for.body
  %add = add i64 %i.0101, %2, !dbg !3217
  %11 = load i64, i64* %r, align 8, !dbg !3218, !tbaa !2960
  %sub = sub i64 %add, %11, !dbg !3219
  tail call void @llvm.dbg.value(metadata i64 %sub, i64 0, metadata !721, metadata !2664), !dbg !3220
  %cmp10 = icmp sgt i64 %call, %sub, !dbg !3221
  tail call void @llvm.dbg.value(metadata i64 %sub, i64 0, metadata !726, metadata !2664), !dbg !3210
  %sub.call = select i1 %cmp10, i64 %sub, i64 %call, !dbg !3223
  %cmp13 = icmp slt i64 %sub.call, 0, !dbg !3224
  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !726, metadata !2664), !dbg !3210
  %index.1 = select i1 %cmp13, i64 0, i64 %sub.call, !dbg !3226
  %12 = load i64*, i64** %indices, align 8, !dbg !3203, !tbaa !2922
  %arrayidx16 = getelementptr i64, i64* %12, i64 %i.0101, !dbg !3227
  store i64 %index.1, i64* %arrayidx16, align 8, !dbg !3228, !tbaa !2984
  %inc = add i64 %i.0101, 1, !dbg !3229
  tail call void @llvm.dbg.value(metadata i64 %inc, i64 0, metadata !719, metadata !2664), !dbg !3230
  %13 = load i64, i64* %r, align 8, !dbg !3197, !tbaa !2960
  %cmp4 = icmp slt i64 %inc, %13, !dbg !3200
  br i1 %cmp4, label %for.body, label %for.end.loopexit, !dbg !3201

for.end.loopexit:                                 ; preds = %if.end.8
  %.lcssa106 = phi i64 [ %13, %if.end.8 ]
  br label %for.end, !dbg !3231

for.end:                                          ; preds = %for.end.loopexit, %for.cond.preheader
  %.lcssa = phi i64 [ %6, %for.cond.preheader ], [ %.lcssa106, %for.end.loopexit ]
  %call20 = tail call %struct._object* @PyTuple_New(i64 %.lcssa) #1, !dbg !3231
  tail call void @llvm.dbg.value(metadata %struct._object* %call20, i64 0, metadata !718, metadata !2664), !dbg !3232
  %cmp21 = icmp eq %struct._object* %call20, null, !dbg !3233
  br i1 %cmp21, label %cleanup.54, label %for.cond.24.preheader, !dbg !3235

for.cond.24.preheader:                            ; preds = %for.end
  %14 = load i64, i64* %r, align 8, !dbg !3236, !tbaa !2960
  %cmp26.98 = icmp sgt i64 %14, 0, !dbg !3237
  br i1 %cmp26.98, label %for.body.27.lr.ph, label %do.body, !dbg !3238

for.body.27.lr.ph:                                ; preds = %for.cond.24.preheader
  %indices28 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %lz, i64 0, i32 2, !dbg !3239
  %15 = bitcast %struct._object** %pool to %struct.PyTupleObject**, !dbg !3239
  %ob_item34 = getelementptr inbounds %struct._object, %struct._object* %call20, i64 1, i32 1, !dbg !3240
  %16 = bitcast %struct._typeobject** %ob_item34 to [1 x %struct._object*]*, !dbg !3240
  %xtraiter = and i64 %14, 1, !dbg !3238
  %lcmp.mod = icmp eq i64 %xtraiter, 0, !dbg !3238
  br i1 %lcmp.mod, label %for.body.27.lr.ph.split, label %for.body.27.prol, !dbg !3238

for.body.27.prol:                                 ; preds = %for.body.27.lr.ph
  %17 = load i64*, i64** %indices28, align 8, !dbg !3239, !tbaa !2922
  %18 = load i64, i64* %17, align 8, !dbg !3239, !tbaa !2984
  %19 = load %struct.PyTupleObject*, %struct.PyTupleObject** %15, align 8, !dbg !3239, !tbaa !2897
  %arrayidx32.prol = getelementptr %struct.PyTupleObject, %struct.PyTupleObject* %19, i64 0, i32 1, i64 %18, !dbg !3239
  %20 = load %struct._object*, %struct._object** %arrayidx32.prol, align 8, !dbg !3239, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %20, i64 0, metadata !727, metadata !2664), !dbg !3241
  %ob_refcnt.prol = getelementptr inbounds %struct._object, %struct._object* %20, i64 0, i32 0, !dbg !3242
  %21 = load i64, i64* %ob_refcnt.prol, align 8, !dbg !3242, !tbaa !2694
  %inc33.prol = add i64 %21, 1, !dbg !3242
  store i64 %inc33.prol, i64* %ob_refcnt.prol, align 8, !dbg !3242, !tbaa !2694
  %arrayidx35.prol = bitcast %struct._typeobject** %ob_item34 to %struct._object**, !dbg !3240
  store %struct._object* %20, %struct._object** %arrayidx35.prol, align 8, !dbg !3240, !tbaa !2681
  tail call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !719, metadata !2664), !dbg !3230
  br label %for.body.27.lr.ph.split, !dbg !3238

for.body.27.lr.ph.split:                          ; preds = %for.body.27.lr.ph, %for.body.27.prol
  %i.199.unr = phi i64 [ 0, %for.body.27.lr.ph ], [ 1, %for.body.27.prol ]
  %22 = icmp eq i64 %14, 1, !dbg !3238
  br i1 %22, label %do.body.loopexit, label %for.body.27.lr.ph.split.split, !dbg !3238

for.body.27.lr.ph.split.split:                    ; preds = %for.body.27.lr.ph.split
  br label %for.body.27, !dbg !3238

for.body.27:                                      ; preds = %for.body.27, %for.body.27.lr.ph.split.split
  %i.199 = phi i64 [ %i.199.unr, %for.body.27.lr.ph.split.split ], [ %inc37.1, %for.body.27 ]
  %23 = load i64*, i64** %indices28, align 8, !dbg !3239, !tbaa !2922
  %arrayidx29 = getelementptr i64, i64* %23, i64 %i.199, !dbg !3239
  %24 = load i64, i64* %arrayidx29, align 8, !dbg !3239, !tbaa !2984
  %25 = load %struct.PyTupleObject*, %struct.PyTupleObject** %15, align 8, !dbg !3239, !tbaa !2897
  %arrayidx32 = getelementptr %struct.PyTupleObject, %struct.PyTupleObject* %25, i64 0, i32 1, i64 %24, !dbg !3239
  %26 = load %struct._object*, %struct._object** %arrayidx32, align 8, !dbg !3239, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %26, i64 0, metadata !727, metadata !2664), !dbg !3241
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %26, i64 0, i32 0, !dbg !3242
  %27 = load i64, i64* %ob_refcnt, align 8, !dbg !3242, !tbaa !2694
  %inc33 = add i64 %27, 1, !dbg !3242
  store i64 %inc33, i64* %ob_refcnt, align 8, !dbg !3242, !tbaa !2694
  %arrayidx35 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %16, i64 0, i64 %i.199, !dbg !3240
  store %struct._object* %26, %struct._object** %arrayidx35, align 8, !dbg !3240, !tbaa !2681
  %inc37 = add i64 %i.199, 1, !dbg !3243
  tail call void @llvm.dbg.value(metadata i64 %inc37, i64 0, metadata !719, metadata !2664), !dbg !3230
  %28 = load i64*, i64** %indices28, align 8, !dbg !3239, !tbaa !2922
  %arrayidx29.1 = getelementptr i64, i64* %28, i64 %inc37, !dbg !3239
  %29 = load i64, i64* %arrayidx29.1, align 8, !dbg !3239, !tbaa !2984
  %30 = load %struct.PyTupleObject*, %struct.PyTupleObject** %15, align 8, !dbg !3239, !tbaa !2897
  %arrayidx32.1 = getelementptr %struct.PyTupleObject, %struct.PyTupleObject* %30, i64 0, i32 1, i64 %29, !dbg !3239
  %31 = load %struct._object*, %struct._object** %arrayidx32.1, align 8, !dbg !3239, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %26, i64 0, metadata !727, metadata !2664), !dbg !3241
  %ob_refcnt.1 = getelementptr inbounds %struct._object, %struct._object* %31, i64 0, i32 0, !dbg !3242
  %32 = load i64, i64* %ob_refcnt.1, align 8, !dbg !3242, !tbaa !2694
  %inc33.1 = add i64 %32, 1, !dbg !3242
  store i64 %inc33.1, i64* %ob_refcnt.1, align 8, !dbg !3242, !tbaa !2694
  %arrayidx35.1 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %16, i64 0, i64 %inc37, !dbg !3240
  store %struct._object* %31, %struct._object** %arrayidx35.1, align 8, !dbg !3240, !tbaa !2681
  %inc37.1 = add i64 %i.199, 2, !dbg !3243
  tail call void @llvm.dbg.value(metadata i64 %inc37, i64 0, metadata !719, metadata !2664), !dbg !3230
  %cmp26.1 = icmp slt i64 %inc37.1, %14, !dbg !3237
  br i1 %cmp26.1, label %for.body.27, label %do.body.loopexit.unr-lcssa, !dbg !3238

do.body.loopexit.unr-lcssa:                       ; preds = %for.body.27
  br label %do.body.loopexit, !dbg !3244

do.body.loopexit:                                 ; preds = %for.body.27.lr.ph.split, %do.body.loopexit.unr-lcssa
  br label %do.body, !dbg !3244

do.body:                                          ; preds = %do.body.loopexit, %for.cond.24.preheader
  %result39 = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %lz, i64 0, i32 3, !dbg !3244
  %33 = load %struct._object*, %struct._object** %result39, align 8, !dbg !3244, !tbaa !2910
  tail call void @llvm.dbg.value(metadata %struct._object* %33, i64 0, metadata !731, metadata !2664), !dbg !3244
  %cmp40 = icmp eq %struct._object* %33, null, !dbg !3246
  br i1 %cmp40, label %if.end.49, label %if.then.41, !dbg !3247

if.then.41:                                       ; preds = %do.body
  store %struct._object* null, %struct._object** %result39, align 8, !dbg !3248, !tbaa !2910
  tail call void @llvm.dbg.value(metadata %struct._object* %33, i64 0, metadata !733, metadata !2664), !dbg !3250
  %ob_refcnt44 = getelementptr inbounds %struct._object, %struct._object* %33, i64 0, i32 0, !dbg !3252
  %34 = load i64, i64* %ob_refcnt44, align 8, !dbg !3252, !tbaa !2694
  %dec = add i64 %34, -1, !dbg !3252
  store i64 %dec, i64* %ob_refcnt44, align 8, !dbg !3252, !tbaa !2694
  %cmp45 = icmp eq i64 %dec, 0, !dbg !3252
  br i1 %cmp45, label %if.else, label %if.end.49, !dbg !3254

if.else:                                          ; preds = %if.then.41
  %ob_type47 = getelementptr inbounds %struct._object, %struct._object* %33, i64 0, i32 1, !dbg !3255
  %35 = load %struct._typeobject*, %struct._typeobject** %ob_type47, align 8, !dbg !3255, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %35, i64 0, i32 4, !dbg !3255
  %36 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3255, !tbaa !2717
  tail call void %36(%struct._object* %33) #1, !dbg !3255
  br label %if.end.49

if.end.49:                                        ; preds = %if.else, %if.then.41, %do.body
  store %struct._object* %call20, %struct._object** %result39, align 8, !dbg !3257, !tbaa !2910
  %37 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !3258, !tbaa !2694
  %inc53 = add i64 %37, 1, !dbg !3258
  store i64 %inc53, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !3258, !tbaa !2694
  br label %cleanup.54, !dbg !3258

cleanup.54.loopexit:                              ; preds = %land.lhs.true
  br label %cleanup.54, !dbg !3259

cleanup.54:                                       ; preds = %cleanup.54.loopexit, %for.end, %if.end.49, %if.then
  %retval.2 = phi %struct._object* [ null, %if.then ], [ @_Py_NoneStruct, %if.end.49 ], [ null, %for.end ], [ null, %cleanup.54.loopexit ]
  ret %struct._object* %retval.2, !dbg !3259
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @combinations_sizeof(%struct.combinationsobject* nocapture readonly %co, i8* nocapture readnone %unused) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.combinationsobject* %co, i64 0, metadata !741, metadata !2664), !dbg !3260
  tail call void @llvm.dbg.value(metadata i8* %unused, i64 0, metadata !742, metadata !2664), !dbg !3261
  tail call void @llvm.dbg.value(metadata i64 56, i64 0, metadata !743, metadata !2664), !dbg !3262
  %r = getelementptr inbounds %struct.combinationsobject, %struct.combinationsobject* %co, i64 0, i32 4, !dbg !3263
  %0 = load i64, i64* %r, align 8, !dbg !3263, !tbaa !2960
  %mul = shl i64 %0, 3, !dbg !3264
  %add = add i64 %mul, 56, !dbg !3265
  tail call void @llvm.dbg.value(metadata i64 %add, i64 0, metadata !743, metadata !2664), !dbg !3262
  %call = tail call %struct._object* @PyLong_FromSsize_t(i64 %add) #1, !dbg !3266
  ret %struct._object* %call, !dbg !3267
}

declare %struct._object* @PyLong_FromSsize_t(i64) #3

declare void @PyErr_SetString(%struct._object*, i8*) #3

declare i64 @PyLong_AsSsize_t(%struct._object*) #3

declare %struct._object* @PyErr_Occurred() #3

declare %struct._object* @PySequence_Tuple(%struct._object*) #3

declare i8* @PyMem_Malloc(i64) #3

declare %struct._object* @PyErr_NoMemory() #3

; Function Attrs: nounwind uwtable
define internal void @cwr_dealloc(%struct.cwrobject* %co) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.cwrobject* %co, i64 0, metadata !765, metadata !2664), !dbg !3268
  %0 = bitcast %struct.cwrobject* %co to i8*, !dbg !3269
  tail call void @PyObject_GC_UnTrack(i8* %0) #1, !dbg !3270
  %pool = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %co, i64 0, i32 1, !dbg !3271
  %1 = load %struct._object*, %struct._object** %pool, align 8, !dbg !3271, !tbaa !2897
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !766, metadata !2664), !dbg !3271
  %cmp = icmp eq %struct._object* %1, null, !dbg !3273
  br i1 %cmp, label %if.end.4, label %do.body.1, !dbg !3274

do.body.1:                                        ; preds = %entry
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !768, metadata !2664), !dbg !3275
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !3277
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !3277, !tbaa !2694
  %dec = add i64 %2, -1, !dbg !3277
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3277, !tbaa !2694
  %cmp2 = icmp eq i64 %dec, 0, !dbg !3277
  br i1 %cmp2, label %if.else, label %if.end.4, !dbg !3279

if.else:                                          ; preds = %do.body.1
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !3280
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3280, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 4, !dbg !3280
  %4 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3280, !tbaa !2717
  tail call void %4(%struct._object* %1) #1, !dbg !3280
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %do.body.1, %entry
  %result = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %co, i64 0, i32 3, !dbg !3282
  %5 = load %struct._object*, %struct._object** %result, align 8, !dbg !3282, !tbaa !2910
  tail call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !771, metadata !2664), !dbg !3282
  %cmp9 = icmp eq %struct._object* %5, null, !dbg !3284
  br i1 %cmp9, label %if.end.23, label %do.body.11, !dbg !3285

do.body.11:                                       ; preds = %if.end.4
  tail call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !773, metadata !2664), !dbg !3286
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 0, !dbg !3288
  %6 = load i64, i64* %ob_refcnt13, align 8, !dbg !3288, !tbaa !2694
  %dec14 = add i64 %6, -1, !dbg !3288
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !3288, !tbaa !2694
  %cmp15 = icmp eq i64 %dec14, 0, !dbg !3288
  br i1 %cmp15, label %if.else.17, label %if.end.23, !dbg !3290

if.else.17:                                       ; preds = %do.body.11
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 1, !dbg !3291
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !3291, !tbaa !2667
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i64 0, i32 4, !dbg !3291
  %8 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !3291, !tbaa !2717
  tail call void %8(%struct._object* %5) #1, !dbg !3291
  br label %if.end.23

if.end.23:                                        ; preds = %if.else.17, %do.body.11, %if.end.4
  %indices = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %co, i64 0, i32 2, !dbg !3293
  %9 = load i64*, i64** %indices, align 8, !dbg !3293, !tbaa !2922
  %cmp26 = icmp eq i64* %9, null, !dbg !3295
  br i1 %cmp26, label %if.end.29, label %if.then.27, !dbg !3296

if.then.27:                                       ; preds = %if.end.23
  %10 = bitcast i64* %9 to i8*, !dbg !3297
  tail call void @PyMem_Free(i8* %10) #1, !dbg !3298
  br label %if.end.29, !dbg !3298

if.end.29:                                        ; preds = %if.end.23, %if.then.27
  %ob_type30 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %co, i64 0, i32 0, i32 1, !dbg !3299
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type30, align 8, !dbg !3299, !tbaa !2667
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i64 0, i32 38, !dbg !3300
  %12 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !3300, !tbaa !2744
  tail call void %12(i8* %0) #1, !dbg !3299
  ret void, !dbg !3301
}

; Function Attrs: nounwind uwtable
define internal i32 @cwr_traverse(%struct.cwrobject* nocapture readonly %co, i32 (%struct._object*, i8*)* nocapture %visit, i8* %arg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.cwrobject* %co, i64 0, metadata !780, metadata !2664), !dbg !3302
  tail call void @llvm.dbg.value(metadata i32 (%struct._object*, i8*)* %visit, i64 0, metadata !781, metadata !2664), !dbg !3303
  tail call void @llvm.dbg.value(metadata i8* %arg, i64 0, metadata !782, metadata !2664), !dbg !3304
  %pool = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %co, i64 0, i32 1, !dbg !3305
  %0 = load %struct._object*, %struct._object** %pool, align 8, !dbg !3305, !tbaa !2897
  %tobool = icmp eq %struct._object* %0, null, !dbg !3305
  br i1 %tobool, label %do.body.5, label %if.then, !dbg !3307

if.then:                                          ; preds = %entry
  %call = tail call i32 %visit(%struct._object* %0, i8* %arg) #1, !dbg !3308
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !783, metadata !2664), !dbg !3308
  %tobool2 = icmp eq i32 %call, 0, !dbg !3310
  br i1 %tobool2, label %do.body.5, label %return

do.body.5:                                        ; preds = %entry, %if.then
  %result = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %co, i64 0, i32 3, !dbg !3312
  %1 = load %struct._object*, %struct._object** %result, align 8, !dbg !3312, !tbaa !2910
  %tobool6 = icmp eq %struct._object* %1, null, !dbg !3312
  br i1 %tobool6, label %do.end.18, label %if.then.7, !dbg !3314

if.then.7:                                        ; preds = %do.body.5
  %call10 = tail call i32 %visit(%struct._object* %1, i8* %arg) #1, !dbg !3315
  tail call void @llvm.dbg.value(metadata i32 %call10, i64 0, metadata !787, metadata !2664), !dbg !3315
  %tobool11 = icmp eq i32 %call10, 0, !dbg !3317
  br i1 %tobool11, label %do.end.18, label %return

do.end.18:                                        ; preds = %do.body.5, %if.then.7
  br label %return, !dbg !3319

return:                                           ; preds = %if.then.7, %if.then, %do.end.18
  %retval.3 = phi i32 [ 0, %do.end.18 ], [ %call10, %if.then.7 ], [ %call, %if.then ]
  ret i32 %retval.3, !dbg !3320
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @cwr_next(%struct.cwrobject* nocapture %co) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.cwrobject* %co, i64 0, metadata !795, metadata !2664), !dbg !3321
  %pool1 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %co, i64 0, i32 1, !dbg !3322
  %0 = load %struct._object*, %struct._object** %pool1, align 8, !dbg !3322, !tbaa !2897
  tail call void @llvm.dbg.value(metadata %struct._object* %0, i64 0, metadata !798, metadata !2664), !dbg !3323
  %indices2 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %co, i64 0, i32 2, !dbg !3324
  %1 = load i64*, i64** %indices2, align 8, !dbg !3324, !tbaa !2922
  tail call void @llvm.dbg.value(metadata i64* %1, i64 0, metadata !799, metadata !2664), !dbg !3325
  %result3 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %co, i64 0, i32 3, !dbg !3326
  %2 = load %struct._object*, %struct._object** %result3, align 8, !dbg !3326, !tbaa !2910
  tail call void @llvm.dbg.value(metadata %struct._object* %2, i64 0, metadata !800, metadata !2664), !dbg !3327
  %3 = getelementptr inbounds %struct._object, %struct._object* %0, i64 1, i32 0, !dbg !3328
  %4 = load i64, i64* %3, align 8, !dbg !3328, !tbaa !2957
  tail call void @llvm.dbg.value(metadata i64 %4, i64 0, metadata !801, metadata !2664), !dbg !3329
  %r4 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %co, i64 0, i32 4, !dbg !3330
  %5 = load i64, i64* %r4, align 8, !dbg !3330, !tbaa !2960
  tail call void @llvm.dbg.value(metadata i64 %5, i64 0, metadata !802, metadata !2664), !dbg !3331
  %stopped = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %co, i64 0, i32 5, !dbg !3332
  %6 = load i32, i32* %stopped, align 4, !dbg !3332, !tbaa !2964
  %tobool = icmp eq i32 %6, 0, !dbg !3334
  br i1 %tobool, label %if.end, label %cleanup.84, !dbg !3335

if.end:                                           ; preds = %entry
  %cmp = icmp eq %struct._object* %2, null, !dbg !3336
  br i1 %cmp, label %if.then.5, label %if.else, !dbg !3337

if.then.5:                                        ; preds = %if.end
  %call = tail call %struct._object* @PyTuple_New(i64 %5) #1, !dbg !3338
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !800, metadata !2664), !dbg !3327
  %cmp6 = icmp eq %struct._object* %call, null, !dbg !3340
  br i1 %cmp6, label %empty, label %if.end.8, !dbg !3342

if.end.8:                                         ; preds = %if.then.5
  store %struct._object* %call, %struct._object** %result3, align 8, !dbg !3343, !tbaa !2910
  %ob_item = getelementptr inbounds %struct._object, %struct._object* %0, i64 1, i32 1, !dbg !3344
  %arrayidx = bitcast %struct._typeobject** %ob_item to %struct._object**, !dbg !3344
  %7 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !3344, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %7, i64 0, metadata !796, metadata !2664), !dbg !3345
  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !803, metadata !2664), !dbg !3346
  %cmp10.163 = icmp sgt i64 %5, 0, !dbg !3347
  br i1 %cmp10.163, label %for.body.lr.ph, label %if.end.80, !dbg !3350

for.body.lr.ph:                                   ; preds = %if.end.8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i64 0, i32 0, !dbg !3351
  %ob_item11 = getelementptr inbounds %struct._object, %struct._object* %call, i64 1, i32 1, !dbg !3353
  %8 = bitcast %struct._typeobject** %ob_item11 to [1 x %struct._object*]*, !dbg !3353
  %ob_refcnt.promoted = load i64, i64* %ob_refcnt, align 8, !dbg !3351, !tbaa !2694
  %backedge.overflow = icmp eq i64 %5, 0
  br i1 %backedge.overflow, label %for.body.preheader, label %overflow.checked, !dbg !3350

overflow.checked:                                 ; preds = %for.body.lr.ph
  %n.vec = and i64 %5, -4, !dbg !3354
  %cmp.zero = icmp eq i64 %n.vec, 0, !dbg !3354
  br i1 %cmp.zero, label %middle.block, label %vector.ph, !dbg !3350

vector.ph:                                        ; preds = %overflow.checked
  %broadcast.splatinsert177 = insertelement <2 x %struct._object*> undef, %struct._object* %7, i32 0, !dbg !3350
  %broadcast.splat178 = shufflevector <2 x %struct._object*> %broadcast.splatinsert177, <2 x %struct._object*> undef, <2 x i32> zeroinitializer, !dbg !3350
  %9 = add i64 %5, -4, !dbg !3350
  %10 = lshr i64 %9, 2, !dbg !3350
  %11 = add nuw nsw i64 %10, 1, !dbg !3350
  %xtraiter = and i64 %11, 3, !dbg !3350
  %lcmp.mod = icmp eq i64 %xtraiter, 0, !dbg !3350
  br i1 %lcmp.mod, label %vector.ph.split, label %vector.body.prol.preheader, !dbg !3350

vector.body.prol.preheader:                       ; preds = %vector.ph
  br label %vector.body.prol, !dbg !3353

vector.body.prol:                                 ; preds = %vector.body.prol.preheader, %vector.body.prol
  %index.prol = phi i64 [ %index.next.prol, %vector.body.prol ], [ 0, %vector.body.prol.preheader ], !dbg !3354
  %prol.iter = phi i64 [ %prol.iter.sub, %vector.body.prol ], [ %xtraiter, %vector.body.prol.preheader ]
  %12 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %8, i64 0, i64 %index.prol, !dbg !3353
  %13 = bitcast %struct._object** %12 to <2 x %struct._object*>*, !dbg !3353
  store <2 x %struct._object*> %broadcast.splat178, <2 x %struct._object*>* %13, align 8, !dbg !3353, !tbaa !2681
  %14 = getelementptr %struct._object*, %struct._object** %12, i64 2, !dbg !3353
  %15 = bitcast %struct._object** %14 to <2 x %struct._object*>*, !dbg !3353
  store <2 x %struct._object*> %broadcast.splat178, <2 x %struct._object*>* %15, align 8, !dbg !3353, !tbaa !2681
  %index.next.prol = add i64 %index.prol, 4, !dbg !3354
  %prol.iter.sub = add i64 %prol.iter, -1, !dbg !3354
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0, !dbg !3354
  br i1 %prol.iter.cmp, label %vector.ph.split.loopexit, label %vector.body.prol, !dbg !3354, !llvm.loop !3355

vector.ph.split.loopexit:                         ; preds = %vector.body.prol
  %index.next.prol.lcssa = phi i64 [ %index.next.prol, %vector.body.prol ]
  br label %vector.ph.split, !dbg !3350

vector.ph.split:                                  ; preds = %vector.ph.split.loopexit, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.prol.lcssa, %vector.ph.split.loopexit ]
  %16 = icmp ult i64 %9, 12, !dbg !3350
  br i1 %16, label %middle.block.loopexit, label %vector.ph.split.split, !dbg !3350

vector.ph.split.split:                            ; preds = %vector.ph.split
  br label %vector.body, !dbg !3350

vector.body:                                      ; preds = %vector.body, %vector.ph.split.split
  %index = phi i64 [ %index.unr, %vector.ph.split.split ], [ %index.next.3, %vector.body ], !dbg !3354
  %17 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %8, i64 0, i64 %index, !dbg !3353
  %18 = bitcast %struct._object** %17 to <2 x %struct._object*>*, !dbg !3353
  store <2 x %struct._object*> %broadcast.splat178, <2 x %struct._object*>* %18, align 8, !dbg !3353, !tbaa !2681
  %19 = getelementptr %struct._object*, %struct._object** %17, i64 2, !dbg !3353
  %20 = bitcast %struct._object** %19 to <2 x %struct._object*>*, !dbg !3353
  store <2 x %struct._object*> %broadcast.splat178, <2 x %struct._object*>* %20, align 8, !dbg !3353, !tbaa !2681
  %index.next = add i64 %index, 4, !dbg !3354
  %21 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %8, i64 0, i64 %index.next, !dbg !3353
  %22 = bitcast %struct._object** %21 to <2 x %struct._object*>*, !dbg !3353
  store <2 x %struct._object*> %broadcast.splat178, <2 x %struct._object*>* %22, align 8, !dbg !3353, !tbaa !2681
  %23 = getelementptr %struct._object*, %struct._object** %21, i64 2, !dbg !3353
  %24 = bitcast %struct._object** %23 to <2 x %struct._object*>*, !dbg !3353
  store <2 x %struct._object*> %broadcast.splat178, <2 x %struct._object*>* %24, align 8, !dbg !3353, !tbaa !2681
  %index.next.1 = add i64 %index, 8, !dbg !3354
  %25 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %8, i64 0, i64 %index.next.1, !dbg !3353
  %26 = bitcast %struct._object** %25 to <2 x %struct._object*>*, !dbg !3353
  store <2 x %struct._object*> %broadcast.splat178, <2 x %struct._object*>* %26, align 8, !dbg !3353, !tbaa !2681
  %27 = getelementptr %struct._object*, %struct._object** %25, i64 2, !dbg !3353
  %28 = bitcast %struct._object** %27 to <2 x %struct._object*>*, !dbg !3353
  store <2 x %struct._object*> %broadcast.splat178, <2 x %struct._object*>* %28, align 8, !dbg !3353, !tbaa !2681
  %index.next.2 = add i64 %index, 12, !dbg !3354
  %29 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %8, i64 0, i64 %index.next.2, !dbg !3353
  %30 = bitcast %struct._object** %29 to <2 x %struct._object*>*, !dbg !3353
  store <2 x %struct._object*> %broadcast.splat178, <2 x %struct._object*>* %30, align 8, !dbg !3353, !tbaa !2681
  %31 = getelementptr %struct._object*, %struct._object** %29, i64 2, !dbg !3353
  %32 = bitcast %struct._object** %31 to <2 x %struct._object*>*, !dbg !3353
  store <2 x %struct._object*> %broadcast.splat178, <2 x %struct._object*>* %32, align 8, !dbg !3353, !tbaa !2681
  %index.next.3 = add i64 %index, 16, !dbg !3354
  %33 = icmp eq i64 %index.next.3, %n.vec, !dbg !3354
  br i1 %33, label %middle.block.loopexit.unr-lcssa, label %vector.body, !dbg !3354, !llvm.loop !3357

middle.block.loopexit.unr-lcssa:                  ; preds = %vector.body
  br label %middle.block.loopexit

middle.block.loopexit:                            ; preds = %vector.ph.split, %middle.block.loopexit.unr-lcssa
  br label %middle.block

middle.block:                                     ; preds = %middle.block.loopexit, %overflow.checked
  %resume.val = phi i64 [ 0, %overflow.checked ], [ %n.vec, %middle.block.loopexit ]
  %cmp.n = icmp eq i64 %5, %resume.val
  br i1 %cmp.n, label %for.cond.if.end.80.loopexit_crit_edge, label %for.body.preheader, !dbg !3350

for.body.preheader:                               ; preds = %middle.block, %for.body.lr.ph
  %i.0164.ph = phi i64 [ 0, %for.body.lr.ph ], [ %resume.val, %middle.block ]
  br label %for.body, !dbg !3353

for.body:                                         ; preds = %for.body.preheader, %for.body
  %i.0164 = phi i64 [ %inc13, %for.body ], [ %i.0164.ph, %for.body.preheader ]
  %arrayidx12 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %8, i64 0, i64 %i.0164, !dbg !3353
  store %struct._object* %7, %struct._object** %arrayidx12, align 8, !dbg !3353, !tbaa !2681
  %inc13 = add nuw nsw i64 %i.0164, 1, !dbg !3354
  tail call void @llvm.dbg.value(metadata i64 %inc13, i64 0, metadata !803, metadata !2664), !dbg !3346
  %exitcond = icmp eq i64 %inc13, %5, !dbg !3350
  br i1 %exitcond, label %for.cond.if.end.80.loopexit_crit_edge.loopexit, label %for.body, !dbg !3350, !llvm.loop !3358

if.else:                                          ; preds = %if.end
  %ob_refcnt14 = getelementptr inbounds %struct._object, %struct._object* %2, i64 0, i32 0, !dbg !3359
  %34 = load i64, i64* %ob_refcnt14, align 8, !dbg !3359, !tbaa !2694
  %cmp15 = icmp sgt i64 %34, 1, !dbg !3360
  br i1 %cmp15, label %if.then.16, label %if.end.39, !dbg !3361

if.then.16:                                       ; preds = %if.else
  tail call void @llvm.dbg.value(metadata %struct._object* %2, i64 0, metadata !805, metadata !2664), !dbg !3362
  %call17 = tail call %struct._object* @PyTuple_New(i64 %5) #1, !dbg !3363
  tail call void @llvm.dbg.value(metadata %struct._object* %call17, i64 0, metadata !800, metadata !2664), !dbg !3327
  %cmp18 = icmp eq %struct._object* %call17, null, !dbg !3364
  br i1 %cmp18, label %empty, label %if.end.20, !dbg !3366

if.end.20:                                        ; preds = %if.then.16
  store %struct._object* %call17, %struct._object** %result3, align 8, !dbg !3367, !tbaa !2910
  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !803, metadata !2664), !dbg !3346
  %cmp23.168 = icmp sgt i64 %5, 0, !dbg !3368
  br i1 %cmp23.168, label %for.body.24.lr.ph, label %do.body, !dbg !3371

for.body.24.lr.ph:                                ; preds = %if.end.20
  %ob_item25 = getelementptr inbounds %struct._object, %struct._object* %2, i64 1, i32 1, !dbg !3372
  %35 = bitcast %struct._typeobject** %ob_item25 to [1 x %struct._object*]*, !dbg !3372
  %ob_item29 = getelementptr inbounds %struct._object, %struct._object* %call17, i64 1, i32 1, !dbg !3374
  %36 = bitcast %struct._typeobject** %ob_item29 to [1 x %struct._object*]*, !dbg !3374
  %xtraiter182 = and i64 %5, 1, !dbg !3371
  %lcmp.mod183 = icmp eq i64 %xtraiter182, 0, !dbg !3371
  br i1 %lcmp.mod183, label %for.body.24.lr.ph.split, label %for.body.24.prol, !dbg !3371

for.body.24.prol:                                 ; preds = %for.body.24.lr.ph
  %arrayidx26.prol = bitcast %struct._typeobject** %ob_item25 to %struct._object**, !dbg !3372
  %37 = load %struct._object*, %struct._object** %arrayidx26.prol, align 8, !dbg !3372, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %37, i64 0, metadata !796, metadata !2664), !dbg !3345
  %ob_refcnt27.prol = getelementptr inbounds %struct._object, %struct._object* %37, i64 0, i32 0, !dbg !3375
  %38 = load i64, i64* %ob_refcnt27.prol, align 8, !dbg !3375, !tbaa !2694
  %inc28.prol = add i64 %38, 1, !dbg !3375
  store i64 %inc28.prol, i64* %ob_refcnt27.prol, align 8, !dbg !3375, !tbaa !2694
  %arrayidx30.prol = bitcast %struct._typeobject** %ob_item29 to %struct._object**, !dbg !3374
  store %struct._object* %37, %struct._object** %arrayidx30.prol, align 8, !dbg !3374, !tbaa !2681
  tail call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !803, metadata !2664), !dbg !3346
  br label %for.body.24.lr.ph.split, !dbg !3371

for.body.24.lr.ph.split:                          ; preds = %for.body.24.lr.ph, %for.body.24.prol
  %i.1169.unr = phi i64 [ 0, %for.body.24.lr.ph ], [ 1, %for.body.24.prol ]
  %39 = icmp eq i64 %5, 1, !dbg !3371
  br i1 %39, label %do.body.loopexit, label %for.body.24.lr.ph.split.split, !dbg !3371

for.body.24.lr.ph.split.split:                    ; preds = %for.body.24.lr.ph.split
  br label %for.body.24, !dbg !3371

for.body.24:                                      ; preds = %for.body.24, %for.body.24.lr.ph.split.split
  %i.1169 = phi i64 [ %i.1169.unr, %for.body.24.lr.ph.split.split ], [ %inc32.1, %for.body.24 ]
  %arrayidx26 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %35, i64 0, i64 %i.1169, !dbg !3372
  %40 = load %struct._object*, %struct._object** %arrayidx26, align 8, !dbg !3372, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %40, i64 0, metadata !796, metadata !2664), !dbg !3345
  %ob_refcnt27 = getelementptr inbounds %struct._object, %struct._object* %40, i64 0, i32 0, !dbg !3375
  %41 = load i64, i64* %ob_refcnt27, align 8, !dbg !3375, !tbaa !2694
  %inc28 = add i64 %41, 1, !dbg !3375
  store i64 %inc28, i64* %ob_refcnt27, align 8, !dbg !3375, !tbaa !2694
  %arrayidx30 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %36, i64 0, i64 %i.1169, !dbg !3374
  store %struct._object* %40, %struct._object** %arrayidx30, align 8, !dbg !3374, !tbaa !2681
  %inc32 = add nuw nsw i64 %i.1169, 1, !dbg !3376
  tail call void @llvm.dbg.value(metadata i64 %inc32, i64 0, metadata !803, metadata !2664), !dbg !3346
  %arrayidx26.1 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %35, i64 0, i64 %inc32, !dbg !3372
  %42 = load %struct._object*, %struct._object** %arrayidx26.1, align 8, !dbg !3372, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %40, i64 0, metadata !796, metadata !2664), !dbg !3345
  %ob_refcnt27.1 = getelementptr inbounds %struct._object, %struct._object* %42, i64 0, i32 0, !dbg !3375
  %43 = load i64, i64* %ob_refcnt27.1, align 8, !dbg !3375, !tbaa !2694
  %inc28.1 = add i64 %43, 1, !dbg !3375
  store i64 %inc28.1, i64* %ob_refcnt27.1, align 8, !dbg !3375, !tbaa !2694
  %arrayidx30.1 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %36, i64 0, i64 %inc32, !dbg !3374
  store %struct._object* %42, %struct._object** %arrayidx30.1, align 8, !dbg !3374, !tbaa !2681
  %inc32.1 = add nsw i64 %i.1169, 2, !dbg !3376
  tail call void @llvm.dbg.value(metadata i64 %inc32, i64 0, metadata !803, metadata !2664), !dbg !3346
  %exitcond172.1 = icmp eq i64 %inc32.1, %5, !dbg !3371
  br i1 %exitcond172.1, label %do.body.loopexit.unr-lcssa, label %for.body.24, !dbg !3371

do.body.loopexit.unr-lcssa:                       ; preds = %for.body.24
  br label %do.body.loopexit, !dbg !3377

do.body.loopexit:                                 ; preds = %for.body.24.lr.ph.split, %do.body.loopexit.unr-lcssa
  br label %do.body, !dbg !3377

do.body:                                          ; preds = %do.body.loopexit, %if.end.20
  tail call void @llvm.dbg.value(metadata %struct._object* %2, i64 0, metadata !810, metadata !2664), !dbg !3377
  %44 = load i64, i64* %ob_refcnt14, align 8, !dbg !3379, !tbaa !2694
  %dec = add i64 %44, -1, !dbg !3379
  store i64 %dec, i64* %ob_refcnt14, align 8, !dbg !3379, !tbaa !2694
  %cmp35 = icmp eq i64 %dec, 0, !dbg !3379
  br i1 %cmp35, label %if.else.37, label %if.end.39, !dbg !3381

if.else.37:                                       ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %2, i64 0, i32 1, !dbg !3382
  %45 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3382, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %45, i64 0, i32 4, !dbg !3382
  %46 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3382, !tbaa !2717
  tail call void %46(%struct._object* %2) #1, !dbg !3382
  br label %if.end.39

if.end.39:                                        ; preds = %if.else.37, %do.body, %if.else
  %result.0 = phi %struct._object* [ %2, %if.else ], [ %call17, %do.body ], [ %call17, %if.else.37 ]
  %sub43 = add i64 %4, -1, !dbg !3384
  br label %for.cond.40, !dbg !3387

for.cond.40:                                      ; preds = %land.rhs, %if.end.39
  %i.2.in = phi i64 [ %5, %if.end.39 ], [ %i.2, %land.rhs ]
  %i.2 = add i64 %i.2.in, -1, !dbg !3388
  %cmp41 = icmp sgt i64 %i.2, -1, !dbg !3389
  br i1 %cmp41, label %land.rhs, label %empty.loopexit, !dbg !3390

land.rhs:                                         ; preds = %for.cond.40
  %arrayidx42 = getelementptr i64, i64* %1, i64 %i.2, !dbg !3391
  %47 = load i64, i64* %arrayidx42, align 8, !dbg !3392, !tbaa !2984
  %cmp44 = icmp eq i64 %47, %sub43, !dbg !3393
  br i1 %cmp44, label %for.cond.40, label %if.end.51, !dbg !3394

if.end.51:                                        ; preds = %land.rhs
  %.lcssa = phi i64 [ %47, %land.rhs ]
  %i.2.lcssa184 = phi i64 [ %i.2, %land.rhs ]
  %add = add i64 %.lcssa, 1, !dbg !3396
  tail call void @llvm.dbg.value(metadata i64 %add, i64 0, metadata !804, metadata !2664), !dbg !3397
  %ob_item53 = getelementptr inbounds %struct._object, %struct._object* %0, i64 1, i32 1, !dbg !3398
  %48 = bitcast %struct._typeobject** %ob_item53 to [1 x %struct._object*]*, !dbg !3398
  %arrayidx54 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %48, i64 0, i64 %add, !dbg !3398
  %49 = load %struct._object*, %struct._object** %arrayidx54, align 8, !dbg !3398, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %49, i64 0, metadata !796, metadata !2664), !dbg !3345
  %cmp56.166 = icmp slt i64 %i.2.lcssa184, %5, !dbg !3399
  br i1 %cmp56.166, label %for.body.57.lr.ph, label %if.end.80, !dbg !3400

for.body.57.lr.ph:                                ; preds = %if.end.51
  %ob_refcnt59 = getelementptr inbounds %struct._object, %struct._object* %49, i64 0, i32 0, !dbg !3401
  %ob_item61 = getelementptr inbounds %struct._object, %struct._object* %result.0, i64 1, i32 1, !dbg !3402
  %50 = bitcast %struct._typeobject** %ob_item61 to [1 x %struct._object*]*, !dbg !3402
  br label %for.body.57, !dbg !3400

for.body.57:                                      ; preds = %if.end.74, %for.body.57.lr.ph
  %i.3167 = phi i64 [ %i.2.lcssa184, %for.body.57.lr.ph ], [ %inc78, %if.end.74 ]
  %arrayidx58 = getelementptr i64, i64* %1, i64 %i.3167, !dbg !3403
  store i64 %add, i64* %arrayidx58, align 8, !dbg !3404, !tbaa !2984
  %51 = load i64, i64* %ob_refcnt59, align 8, !dbg !3401, !tbaa !2694
  %inc60 = add i64 %51, 1, !dbg !3401
  store i64 %inc60, i64* %ob_refcnt59, align 8, !dbg !3401, !tbaa !2694
  %arrayidx62 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %50, i64 0, i64 %i.3167, !dbg !3402
  %52 = load %struct._object*, %struct._object** %arrayidx62, align 8, !dbg !3402, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %52, i64 0, metadata !797, metadata !2664), !dbg !3405
  store %struct._object* %49, %struct._object** %arrayidx62, align 8, !dbg !3406, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %52, i64 0, metadata !812, metadata !2664), !dbg !3407
  %ob_refcnt67 = getelementptr inbounds %struct._object, %struct._object* %52, i64 0, i32 0, !dbg !3409
  %53 = load i64, i64* %ob_refcnt67, align 8, !dbg !3409, !tbaa !2694
  %dec68 = add i64 %53, -1, !dbg !3409
  store i64 %dec68, i64* %ob_refcnt67, align 8, !dbg !3409, !tbaa !2694
  %cmp69 = icmp eq i64 %dec68, 0, !dbg !3409
  br i1 %cmp69, label %if.else.71, label %if.end.74, !dbg !3411

if.else.71:                                       ; preds = %for.body.57
  %ob_type72 = getelementptr inbounds %struct._object, %struct._object* %52, i64 0, i32 1, !dbg !3412
  %54 = load %struct._typeobject*, %struct._typeobject** %ob_type72, align 8, !dbg !3412, !tbaa !2667
  %tp_dealloc73 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %54, i64 0, i32 4, !dbg !3412
  %55 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc73, align 8, !dbg !3412, !tbaa !2717
  tail call void %55(%struct._object* %52) #1, !dbg !3412
  br label %if.end.74

if.end.74:                                        ; preds = %for.body.57, %if.else.71
  %inc78 = add nsw i64 %i.3167, 1, !dbg !3414
  tail call void @llvm.dbg.value(metadata i64 %inc78, i64 0, metadata !803, metadata !2664), !dbg !3346
  %exitcond171 = icmp eq i64 %inc78, %5, !dbg !3400
  br i1 %exitcond171, label %if.end.80.loopexit, label %for.body.57, !dbg !3400

for.cond.if.end.80.loopexit_crit_edge.loopexit:   ; preds = %for.body
  br label %for.cond.if.end.80.loopexit_crit_edge, !dbg !3350

for.cond.if.end.80.loopexit_crit_edge:            ; preds = %for.cond.if.end.80.loopexit_crit_edge.loopexit, %middle.block
  %56 = add i64 %5, %ob_refcnt.promoted, !dbg !3350
  store i64 %56, i64* %ob_refcnt, align 8, !dbg !3351, !tbaa !2694
  br label %if.end.80, !dbg !3350

if.end.80.loopexit:                               ; preds = %if.end.74
  br label %if.end.80, !dbg !3415

if.end.80:                                        ; preds = %if.end.80.loopexit, %if.end.51, %if.end.8, %for.cond.if.end.80.loopexit_crit_edge
  %result.1 = phi %struct._object* [ %call, %for.cond.if.end.80.loopexit_crit_edge ], [ %call, %if.end.8 ], [ %result.0, %if.end.51 ], [ %result.0, %if.end.80.loopexit ]
  %ob_refcnt81 = getelementptr inbounds %struct._object, %struct._object* %result.1, i64 0, i32 0, !dbg !3415
  %57 = load i64, i64* %ob_refcnt81, align 8, !dbg !3415, !tbaa !2694
  %inc82 = add i64 %57, 1, !dbg !3415
  store i64 %inc82, i64* %ob_refcnt81, align 8, !dbg !3415, !tbaa !2694
  br label %cleanup.84, !dbg !3416

empty.loopexit:                                   ; preds = %for.cond.40
  br label %empty, !dbg !3417

empty:                                            ; preds = %empty.loopexit, %if.then.16, %if.then.5
  store i32 1, i32* %stopped, align 4, !dbg !3417, !tbaa !2964
  br label %cleanup.84, !dbg !3418

cleanup.84:                                       ; preds = %entry, %empty, %if.end.80
  %retval.0 = phi %struct._object* [ null, %empty ], [ %result.1, %if.end.80 ], [ null, %entry ]
  ret %struct._object* %retval.0, !dbg !3419
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @cwr_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %r = alloca i64, align 8
  %iterable = alloca %struct._object*, align 8
  tail call void @llvm.dbg.value(metadata %struct._typeobject* %type, i64 0, metadata !866, metadata !2664), !dbg !3420
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !867, metadata !2664), !dbg !3421
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !868, metadata !2664), !dbg !3422
  %0 = bitcast i64* %r to i8*, !dbg !3423
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3423
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !872, metadata !2664), !dbg !3424
  %1 = bitcast %struct._object** %iterable to i8*, !dbg !3425
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !3425
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !873, metadata !2664), !dbg !3426
  store %struct._object* null, %struct._object** %iterable, align 8, !dbg !3426, !tbaa !2681
  tail call void @llvm.dbg.value(metadata i64* null, i64 0, metadata !874, metadata !2664), !dbg !3427
  tail call void @llvm.dbg.value(metadata i64* %r, i64 0, metadata !871, metadata !2664), !dbg !3428
  tail call void @llvm.dbg.value(metadata %struct._object** %iterable, i64 0, metadata !873, metadata !2664), !dbg !3426
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %args, %struct._object* %kwds, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.17, i64 0, i64 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @cwr_new.kwargs, i64 0, i64 0), %struct._object** nonnull %iterable, i64* nonnull %r) #1, !dbg !3429
  %tobool = icmp eq i32 %call, 0, !dbg !3429
  br i1 %tobool, label %cleanup, label %if.end, !dbg !3431

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct._object** %iterable, i64 0, metadata !873, metadata !2664), !dbg !3426
  %2 = load %struct._object*, %struct._object** %iterable, align 8, !dbg !3432, !tbaa !2681
  %call1 = call %struct._object* @PySequence_Tuple(%struct._object* %2) #1, !dbg !3433
  call void @llvm.dbg.value(metadata %struct._object* %call1, i64 0, metadata !872, metadata !2664), !dbg !3424
  %cmp = icmp eq %struct._object* %call1, null, !dbg !3434
  br i1 %cmp, label %cleanup, label %if.end.3, !dbg !3436

if.end.3:                                         ; preds = %if.end
  %3 = getelementptr inbounds %struct._object, %struct._object* %call1, i64 1, i32 0, !dbg !3437
  %4 = load i64, i64* %3, align 8, !dbg !3437, !tbaa !2957
  call void @llvm.dbg.value(metadata i64 %4, i64 0, metadata !870, metadata !2664), !dbg !3438
  call void @llvm.dbg.value(metadata i64* %r, i64 0, metadata !871, metadata !2664), !dbg !3428
  %5 = load i64, i64* %r, align 8, !dbg !3439, !tbaa !2984
  %cmp4 = icmp slt i64 %5, 0, !dbg !3441
  br i1 %cmp4, label %do.body.thread67, label %if.end.6, !dbg !3442

do.body.thread67:                                 ; preds = %if.end.3
  %6 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !3443, !tbaa !2681
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0)) #1, !dbg !3445
  call void @llvm.dbg.value(metadata %struct._object* %call1, i64 0, metadata !876, metadata !2664), !dbg !3446
  br label %do.body.27, !dbg !3448

if.end.6:                                         ; preds = %if.end.3
  %mul = shl i64 %5, 3, !dbg !3449
  %call7 = call i8* @PyMem_Malloc(i64 %mul) #1, !dbg !3450
  %7 = bitcast i8* %call7 to i64*, !dbg !3450
  call void @llvm.dbg.value(metadata i64* %7, i64 0, metadata !874, metadata !2664), !dbg !3427
  %cmp8 = icmp eq i8* %call7, null, !dbg !3451
  br i1 %cmp8, label %error.thread, label %for.cond.preheader, !dbg !3453

for.cond.preheader:                               ; preds = %if.end.6
  call void @llvm.dbg.value(metadata i64* %r, i64 0, metadata !871, metadata !2664), !dbg !3428
  %8 = load i64, i64* %r, align 8, !dbg !3454, !tbaa !2984
  %cmp12.68 = icmp sgt i64 %8, 0, !dbg !3457
  br i1 %cmp12.68, label %for.body.preheader, label %for.end, !dbg !3458

for.body.preheader:                               ; preds = %for.cond.preheader
  br label %for.body, !dbg !3459

error.thread:                                     ; preds = %if.end.6
  %call10 = call %struct._object* @PyErr_NoMemory() #1, !dbg !3460
  br label %do.body.27, !dbg !3462

for.body:                                         ; preds = %for.body.preheader, %for.body
  %i.069 = phi i64 [ %inc, %for.body ], [ 0, %for.body.preheader ]
  %arrayidx = getelementptr i64, i64* %7, i64 %i.069, !dbg !3459
  store i64 0, i64* %arrayidx, align 8, !dbg !3463, !tbaa !2984
  %inc = add i64 %i.069, 1, !dbg !3464
  call void @llvm.dbg.value(metadata i64 %inc, i64 0, metadata !875, metadata !2664), !dbg !3465
  call void @llvm.dbg.value(metadata i64* %r, i64 0, metadata !871, metadata !2664), !dbg !3428
  %9 = load i64, i64* %r, align 8, !dbg !3454, !tbaa !2984
  %cmp12 = icmp slt i64 %inc, %9, !dbg !3457
  br i1 %cmp12, label %for.body, label %for.end.loopexit, !dbg !3458

for.end.loopexit:                                 ; preds = %for.body
  br label %for.end, !dbg !3466

for.end:                                          ; preds = %for.end.loopexit, %for.cond.preheader
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %type, i64 0, i32 36, !dbg !3466
  %10 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !3466, !tbaa !2835
  %call13 = call %struct._object* %10(%struct._typeobject* %type, i64 0) #1, !dbg !3467
  %cmp14 = icmp eq %struct._object* %call13, null, !dbg !3468
  br i1 %cmp14, label %if.then.23, label %if.end.16, !dbg !3470

if.end.16:                                        ; preds = %for.end
  %pool17 = getelementptr inbounds %struct._object, %struct._object* %call13, i64 1, !dbg !3471
  %11 = bitcast %struct._object* %pool17 to %struct._object**, !dbg !3471
  store %struct._object* %call1, %struct._object** %11, align 8, !dbg !3472, !tbaa !2897
  %indices18 = getelementptr inbounds %struct._object, %struct._object* %call13, i64 1, i32 1, !dbg !3473
  %12 = bitcast %struct._typeobject** %indices18 to i8**, !dbg !3474
  store i8* %call7, i8** %12, align 8, !dbg !3474, !tbaa !2922
  %result = getelementptr inbounds %struct._object, %struct._object* %call13, i64 2, !dbg !3475
  %13 = bitcast %struct._object* %result to %struct._object**, !dbg !3475
  store %struct._object* null, %struct._object** %13, align 8, !dbg !3476, !tbaa !2910
  call void @llvm.dbg.value(metadata i64* %r, i64 0, metadata !871, metadata !2664), !dbg !3428
  %14 = load i64, i64* %r, align 8, !dbg !3477, !tbaa !2984
  %r19 = getelementptr inbounds %struct._object, %struct._object* %call13, i64 2, i32 1, !dbg !3478
  %15 = bitcast %struct._typeobject** %r19 to i64*, !dbg !3478
  store i64 %14, i64* %15, align 8, !dbg !3479, !tbaa !2960
  call void @llvm.dbg.value(metadata i64* %r, i64 0, metadata !871, metadata !2664), !dbg !3428
  %16 = load i64, i64* %r, align 8, !dbg !3480, !tbaa !2984
  %tobool21 = icmp ne i64 %16, 0, !dbg !3482
  %not.tobool20 = icmp eq i64 %4, 0, !dbg !3482
  %17 = and i1 %not.tobool20, %tobool21, !dbg !3482
  %land.ext = zext i1 %17 to i32, !dbg !3483
  %stopped = getelementptr inbounds %struct._object, %struct._object* %call13, i64 3, !dbg !3485
  %18 = bitcast %struct._object* %stopped to i32*, !dbg !3485
  store i32 %land.ext, i32* %18, align 4, !dbg !3486, !tbaa !2964
  br label %cleanup, !dbg !3487

if.then.23:                                       ; preds = %for.end
  call void @PyMem_Free(i8* %call7) #1, !dbg !3488
  br label %do.body.27, !dbg !3488

do.body.27:                                       ; preds = %if.then.23, %error.thread, %do.body.thread67
  call void @llvm.dbg.value(metadata %struct._object* %call1, i64 0, metadata !878, metadata !2664), !dbg !3490
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call1, i64 0, i32 0, !dbg !3492
  %19 = load i64, i64* %ob_refcnt, align 8, !dbg !3492, !tbaa !2694
  %dec = add i64 %19, -1, !dbg !3492
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3492, !tbaa !2694
  %cmp28 = icmp eq i64 %dec, 0, !dbg !3492
  br i1 %cmp28, label %if.else, label %cleanup, !dbg !3494

if.else:                                          ; preds = %do.body.27
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call1, i64 0, i32 1, !dbg !3495
  %20 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3495, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %20, i64 0, i32 4, !dbg !3495
  %21 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3495, !tbaa !2717
  call void %21(%struct._object* %call1) #1, !dbg !3495
  br label %cleanup

cleanup:                                          ; preds = %if.end, %do.body.27, %if.else, %entry, %if.end.16
  %retval.0 = phi %struct._object* [ %call13, %if.end.16 ], [ null, %entry ], [ null, %if.else ], [ null, %do.body.27 ], [ null, %if.end ]
  call void @llvm.lifetime.end(i64 8, i8* %1) #1, !dbg !3497
  call void @llvm.lifetime.end(i64 8, i8* %0) #1, !dbg !3497
  ret %struct._object* %retval.0, !dbg !3497
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @cwr_reduce(%struct.cwrobject* nocapture readonly %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.cwrobject* %lz, i64 0, metadata !819, metadata !2664), !dbg !3498
  %result = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %lz, i64 0, i32 3, !dbg !3499
  %0 = load %struct._object*, %struct._object** %result, align 8, !dbg !3499, !tbaa !2910
  %cmp = icmp eq %struct._object* %0, null, !dbg !3500
  br i1 %cmp, label %if.then, label %if.else, !dbg !3501

if.then:                                          ; preds = %entry
  %ob_type = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %lz, i64 0, i32 0, i32 1, !dbg !3502
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3502, !tbaa !2667
  %pool = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %lz, i64 0, i32 1, !dbg !3504
  %2 = load %struct._object*, %struct._object** %pool, align 8, !dbg !3504, !tbaa !2897
  %r = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %lz, i64 0, i32 4, !dbg !3505
  %3 = load i64, i64* %r, align 8, !dbg !3505, !tbaa !2960
  %call = tail call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), %struct._typeobject* %1, %struct._object* %2, i64 %3) #1, !dbg !3506
  br label %return, !dbg !3507

if.else:                                          ; preds = %entry
  %stopped = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %lz, i64 0, i32 5, !dbg !3508
  %4 = load i32, i32* %stopped, align 4, !dbg !3508, !tbaa !2964
  %tobool = icmp eq i32 %4, 0, !dbg !3509
  br i1 %tobool, label %if.else.5, label %if.then.1, !dbg !3510

if.then.1:                                        ; preds = %if.else
  %ob_type2 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %lz, i64 0, i32 0, i32 1, !dbg !3511
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type2, align 8, !dbg !3511, !tbaa !2667
  %r3 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %lz, i64 0, i32 4, !dbg !3513
  %6 = load i64, i64* %r3, align 8, !dbg !3513, !tbaa !2960
  %call4 = tail call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), %struct._typeobject* %5, i64 %6) #1, !dbg !3514
  br label %return, !dbg !3515

if.else.5:                                        ; preds = %if.else
  %r6 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %lz, i64 0, i32 4, !dbg !3516
  %7 = load i64, i64* %r6, align 8, !dbg !3516, !tbaa !2960
  %call7 = tail call %struct._object* @PyTuple_New(i64 %7) #1, !dbg !3517
  tail call void @llvm.dbg.value(metadata %struct._object* %call7, i64 0, metadata !820, metadata !2664), !dbg !3518
  %tobool8 = icmp eq %struct._object* %call7, null, !dbg !3519
  br i1 %tobool8, label %return, label %for.cond.preheader, !dbg !3521

for.cond.preheader:                               ; preds = %if.else.5
  %8 = load i64, i64* %r6, align 8, !dbg !3522, !tbaa !2960
  %cmp11.54 = icmp sgt i64 %8, 0, !dbg !3523
  br i1 %cmp11.54, label %for.body.lr.ph, label %for.end, !dbg !3524

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %indices12 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %lz, i64 0, i32 2, !dbg !3525
  %ob_item = getelementptr inbounds %struct._object, %struct._object* %call7, i64 1, i32 1, !dbg !3526
  %9 = bitcast %struct._typeobject** %ob_item to [1 x %struct._object*]*, !dbg !3526
  br label %for.body, !dbg !3524

for.body:                                         ; preds = %for.body.lr.ph, %if.end.21
  %i.055 = phi i64 [ 0, %for.body.lr.ph ], [ %inc, %if.end.21 ]
  %10 = load i64*, i64** %indices12, align 8, !dbg !3525, !tbaa !2922
  %arrayidx = getelementptr i64, i64* %10, i64 %i.055, !dbg !3527
  %11 = load i64, i64* %arrayidx, align 8, !dbg !3527, !tbaa !2984
  %call13 = tail call %struct._object* @PyLong_FromSsize_t(i64 %11) #1, !dbg !3528
  tail call void @llvm.dbg.value(metadata %struct._object* %call13, i64 0, metadata !825, metadata !2664), !dbg !3529
  %tobool14 = icmp eq %struct._object* %call13, null, !dbg !3530
  br i1 %tobool14, label %do.body, label %if.end.21, !dbg !3531

do.body:                                          ; preds = %for.body
  tail call void @llvm.dbg.value(metadata %struct._object* %call7, i64 0, metadata !829, metadata !2664), !dbg !3532
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call7, i64 0, i32 0, !dbg !3534
  %12 = load i64, i64* %ob_refcnt, align 8, !dbg !3534, !tbaa !2694
  %dec = add i64 %12, -1, !dbg !3534
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3534, !tbaa !2694
  %cmp16 = icmp eq i64 %dec, 0, !dbg !3534
  br i1 %cmp16, label %if.else.18, label %return, !dbg !3536

if.else.18:                                       ; preds = %do.body
  %ob_type19 = getelementptr inbounds %struct._object, %struct._object* %call7, i64 0, i32 1, !dbg !3537
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type19, align 8, !dbg !3537, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i64 0, i32 4, !dbg !3537
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3537, !tbaa !2717
  tail call void %14(%struct._object* %call7) #1, !dbg !3537
  br label %return

if.end.21:                                        ; preds = %for.body
  %arrayidx22 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %9, i64 0, i64 %i.055, !dbg !3526
  store %struct._object* %call13, %struct._object** %arrayidx22, align 8, !dbg !3526, !tbaa !2681
  %inc = add i64 %i.055, 1, !dbg !3539
  tail call void @llvm.dbg.value(metadata i64 %inc, i64 0, metadata !824, metadata !2664), !dbg !3540
  %15 = load i64, i64* %r6, align 8, !dbg !3522, !tbaa !2960
  %cmp11 = icmp slt i64 %inc, %15, !dbg !3523
  br i1 %cmp11, label %for.body, label %for.end.loopexit, !dbg !3524

for.end.loopexit:                                 ; preds = %if.end.21
  %.lcssa60 = phi i64 [ %15, %if.end.21 ]
  br label %for.end, !dbg !3541

for.end:                                          ; preds = %for.end.loopexit, %for.cond.preheader
  %.lcssa = phi i64 [ %8, %for.cond.preheader ], [ %.lcssa60, %for.end.loopexit ]
  %ob_type23 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %lz, i64 0, i32 0, i32 1, !dbg !3541
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type23, align 8, !dbg !3541, !tbaa !2667
  %pool24 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %lz, i64 0, i32 1, !dbg !3542
  %17 = load %struct._object*, %struct._object** %pool24, align 8, !dbg !3542, !tbaa !2897
  %call26 = tail call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0), %struct._typeobject* %16, %struct._object* %17, i64 %.lcssa, %struct._object* %call7) #1, !dbg !3543
  br label %return, !dbg !3544

return:                                           ; preds = %for.end, %if.else.5, %if.else.18, %do.body, %if.then.1, %if.then
  %retval.3 = phi %struct._object* [ %call, %if.then ], [ %call4, %if.then.1 ], [ %call26, %for.end ], [ null, %if.else.5 ], [ null, %if.else.18 ], [ null, %do.body ]
  ret %struct._object* %retval.3, !dbg !3545
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @cwr_setstate(%struct.cwrobject* nocapture %lz, %struct._object* nocapture readonly %state) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.cwrobject* %lz, i64 0, metadata !837, metadata !2664), !dbg !3546
  tail call void @llvm.dbg.value(metadata %struct._object* %state, i64 0, metadata !838, metadata !2664), !dbg !3547
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %state, i64 0, i32 1, !dbg !3548
  %0 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3548, !tbaa !2667
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %0, i64 0, i32 19, !dbg !3548
  %1 = load i64, i64* %tp_flags, align 8, !dbg !3548, !tbaa !3192
  %and = and i64 %1, 67108864, !dbg !3548
  %cmp = icmp eq i64 %and, 0, !dbg !3548
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3550

lor.lhs.false:                                    ; preds = %entry
  %2 = getelementptr inbounds %struct._object, %struct._object* %state, i64 1, i32 0, !dbg !3551
  %3 = load i64, i64* %2, align 8, !dbg !3551, !tbaa !2957
  %r = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %lz, i64 0, i32 4, !dbg !3553
  %4 = load i64, i64* %r, align 8, !dbg !3554, !tbaa !2960
  %cmp1 = icmp eq i64 %3, %4, !dbg !3555
  br i1 %cmp1, label %if.end, label %if.then, !dbg !3556

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !3557, !tbaa !2681
  tail call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0)) #1, !dbg !3559
  br label %cleanup.54, !dbg !3560

if.end:                                           ; preds = %lor.lhs.false
  %pool = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %lz, i64 0, i32 1, !dbg !3561
  tail call void @llvm.dbg.value(metadata i64 %8, i64 0, metadata !840, metadata !2664), !dbg !3562
  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !841, metadata !2664), !dbg !3563
  %cmp4.97 = icmp sgt i64 %3, 0, !dbg !3564
  br i1 %cmp4.97, label %for.body.lr.ph, label %for.end, !dbg !3565

for.body.lr.ph:                                   ; preds = %if.end
  %6 = bitcast %struct._object** %pool to %struct.PyVarObject**, !dbg !3561
  %7 = load %struct.PyVarObject*, %struct.PyVarObject** %6, align 8, !dbg !3561, !tbaa !2897
  %ob_size2 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %7, i64 0, i32 1, !dbg !3561
  %8 = load i64, i64* %ob_size2, align 8, !dbg !3561, !tbaa !2957
  %ob_item = getelementptr inbounds %struct._object, %struct._object* %state, i64 1, i32 1, !dbg !3566
  %9 = bitcast %struct._typeobject** %ob_item to [1 x %struct._object*]*, !dbg !3566
  %indices = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %lz, i64 0, i32 2, !dbg !3567
  %sub = add i64 %8, -1, !dbg !3568
  br label %for.body, !dbg !3565

for.body:                                         ; preds = %for.body.lr.ph, %if.end.15
  %i.098 = phi i64 [ 0, %for.body.lr.ph ], [ %inc, %if.end.15 ]
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %9, i64 0, i64 %i.098, !dbg !3566
  %10 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !3566, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %10, i64 0, metadata !842, metadata !2664), !dbg !3571
  %call = tail call i64 @PyLong_AsSsize_t(%struct._object* %10) #1, !dbg !3572
  tail call void @llvm.dbg.value(metadata i64 %call, i64 0, metadata !846, metadata !2664), !dbg !3573
  %cmp5 = icmp slt i64 %call, 0, !dbg !3574
  br i1 %cmp5, label %land.lhs.true, label %if.else, !dbg !3576

land.lhs.true:                                    ; preds = %for.body
  %call6 = tail call %struct._object* @PyErr_Occurred() #1, !dbg !3577
  %tobool = icmp eq %struct._object* %call6, null, !dbg !3577
  br i1 %tobool, label %if.end.15, label %cleanup.54.loopexit, !dbg !3579

if.else:                                          ; preds = %for.body
  %cmp11 = icmp sgt i64 %call, %sub, !dbg !3580
  tail call void @llvm.dbg.value(metadata i64 %sub, i64 0, metadata !846, metadata !2664), !dbg !3573
  %sub.call = select i1 %cmp11, i64 %sub, i64 %call, !dbg !3581
  br label %if.end.15, !dbg !3581

if.end.15:                                        ; preds = %land.lhs.true, %if.else
  %index.0 = phi i64 [ %sub.call, %if.else ], [ 0, %land.lhs.true ]
  %11 = load i64*, i64** %indices, align 8, !dbg !3567, !tbaa !2922
  %arrayidx16 = getelementptr i64, i64* %11, i64 %i.098, !dbg !3582
  store i64 %index.0, i64* %arrayidx16, align 8, !dbg !3583, !tbaa !2984
  %inc = add i64 %i.098, 1, !dbg !3584
  tail call void @llvm.dbg.value(metadata i64 %inc, i64 0, metadata !841, metadata !2664), !dbg !3563
  %12 = load i64, i64* %r, align 8, !dbg !3554, !tbaa !2960
  %cmp4 = icmp slt i64 %inc, %12, !dbg !3564
  br i1 %cmp4, label %for.body, label %for.end.loopexit, !dbg !3565

for.end.loopexit:                                 ; preds = %if.end.15
  %.lcssa103 = phi i64 [ %12, %if.end.15 ]
  br label %for.end, !dbg !3585

for.end:                                          ; preds = %for.end.loopexit, %if.end
  %.lcssa = phi i64 [ %3, %if.end ], [ %.lcssa103, %for.end.loopexit ]
  %call19 = tail call %struct._object* @PyTuple_New(i64 %.lcssa) #1, !dbg !3585
  tail call void @llvm.dbg.value(metadata %struct._object* %call19, i64 0, metadata !839, metadata !2664), !dbg !3586
  %cmp20 = icmp eq %struct._object* %call19, null, !dbg !3587
  br i1 %cmp20, label %cleanup.54, label %for.cond.23.preheader, !dbg !3589

for.cond.23.preheader:                            ; preds = %for.end
  %13 = load i64, i64* %r, align 8, !dbg !3590, !tbaa !2960
  %cmp25.95 = icmp sgt i64 %13, 0, !dbg !3591
  br i1 %cmp25.95, label %for.body.26.lr.ph, label %do.body, !dbg !3592

for.body.26.lr.ph:                                ; preds = %for.cond.23.preheader
  %indices27 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %lz, i64 0, i32 2, !dbg !3593
  %14 = bitcast %struct._object** %pool to %struct.PyTupleObject**, !dbg !3593
  %ob_item33 = getelementptr inbounds %struct._object, %struct._object* %call19, i64 1, i32 1, !dbg !3594
  %15 = bitcast %struct._typeobject** %ob_item33 to [1 x %struct._object*]*, !dbg !3594
  %xtraiter = and i64 %13, 1, !dbg !3592
  %lcmp.mod = icmp eq i64 %xtraiter, 0, !dbg !3592
  br i1 %lcmp.mod, label %for.body.26.lr.ph.split, label %for.body.26.prol, !dbg !3592

for.body.26.prol:                                 ; preds = %for.body.26.lr.ph
  %16 = load i64*, i64** %indices27, align 8, !dbg !3593, !tbaa !2922
  %17 = load i64, i64* %16, align 8, !dbg !3593, !tbaa !2984
  %18 = load %struct.PyTupleObject*, %struct.PyTupleObject** %14, align 8, !dbg !3593, !tbaa !2897
  %arrayidx31.prol = getelementptr %struct.PyTupleObject, %struct.PyTupleObject* %18, i64 0, i32 1, i64 %17, !dbg !3593
  %19 = load %struct._object*, %struct._object** %arrayidx31.prol, align 8, !dbg !3593, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %19, i64 0, metadata !847, metadata !2664), !dbg !3595
  %ob_refcnt.prol = getelementptr inbounds %struct._object, %struct._object* %19, i64 0, i32 0, !dbg !3596
  %20 = load i64, i64* %ob_refcnt.prol, align 8, !dbg !3596, !tbaa !2694
  %inc32.prol = add i64 %20, 1, !dbg !3596
  store i64 %inc32.prol, i64* %ob_refcnt.prol, align 8, !dbg !3596, !tbaa !2694
  %arrayidx34.prol = bitcast %struct._typeobject** %ob_item33 to %struct._object**, !dbg !3594
  store %struct._object* %19, %struct._object** %arrayidx34.prol, align 8, !dbg !3594, !tbaa !2681
  tail call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !841, metadata !2664), !dbg !3563
  br label %for.body.26.lr.ph.split, !dbg !3592

for.body.26.lr.ph.split:                          ; preds = %for.body.26.lr.ph, %for.body.26.prol
  %i.196.unr = phi i64 [ 0, %for.body.26.lr.ph ], [ 1, %for.body.26.prol ]
  %21 = icmp eq i64 %13, 1, !dbg !3592
  br i1 %21, label %do.body.loopexit, label %for.body.26.lr.ph.split.split, !dbg !3592

for.body.26.lr.ph.split.split:                    ; preds = %for.body.26.lr.ph.split
  br label %for.body.26, !dbg !3592

for.body.26:                                      ; preds = %for.body.26, %for.body.26.lr.ph.split.split
  %i.196 = phi i64 [ %i.196.unr, %for.body.26.lr.ph.split.split ], [ %inc36.1, %for.body.26 ]
  %22 = load i64*, i64** %indices27, align 8, !dbg !3593, !tbaa !2922
  %arrayidx28 = getelementptr i64, i64* %22, i64 %i.196, !dbg !3593
  %23 = load i64, i64* %arrayidx28, align 8, !dbg !3593, !tbaa !2984
  %24 = load %struct.PyTupleObject*, %struct.PyTupleObject** %14, align 8, !dbg !3593, !tbaa !2897
  %arrayidx31 = getelementptr %struct.PyTupleObject, %struct.PyTupleObject* %24, i64 0, i32 1, i64 %23, !dbg !3593
  %25 = load %struct._object*, %struct._object** %arrayidx31, align 8, !dbg !3593, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %25, i64 0, metadata !847, metadata !2664), !dbg !3595
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %25, i64 0, i32 0, !dbg !3596
  %26 = load i64, i64* %ob_refcnt, align 8, !dbg !3596, !tbaa !2694
  %inc32 = add i64 %26, 1, !dbg !3596
  store i64 %inc32, i64* %ob_refcnt, align 8, !dbg !3596, !tbaa !2694
  %arrayidx34 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %15, i64 0, i64 %i.196, !dbg !3594
  store %struct._object* %25, %struct._object** %arrayidx34, align 8, !dbg !3594, !tbaa !2681
  %inc36 = add i64 %i.196, 1, !dbg !3597
  tail call void @llvm.dbg.value(metadata i64 %inc36, i64 0, metadata !841, metadata !2664), !dbg !3563
  %27 = load i64*, i64** %indices27, align 8, !dbg !3593, !tbaa !2922
  %arrayidx28.1 = getelementptr i64, i64* %27, i64 %inc36, !dbg !3593
  %28 = load i64, i64* %arrayidx28.1, align 8, !dbg !3593, !tbaa !2984
  %29 = load %struct.PyTupleObject*, %struct.PyTupleObject** %14, align 8, !dbg !3593, !tbaa !2897
  %arrayidx31.1 = getelementptr %struct.PyTupleObject, %struct.PyTupleObject* %29, i64 0, i32 1, i64 %28, !dbg !3593
  %30 = load %struct._object*, %struct._object** %arrayidx31.1, align 8, !dbg !3593, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %25, i64 0, metadata !847, metadata !2664), !dbg !3595
  %ob_refcnt.1 = getelementptr inbounds %struct._object, %struct._object* %30, i64 0, i32 0, !dbg !3596
  %31 = load i64, i64* %ob_refcnt.1, align 8, !dbg !3596, !tbaa !2694
  %inc32.1 = add i64 %31, 1, !dbg !3596
  store i64 %inc32.1, i64* %ob_refcnt.1, align 8, !dbg !3596, !tbaa !2694
  %arrayidx34.1 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %15, i64 0, i64 %inc36, !dbg !3594
  store %struct._object* %30, %struct._object** %arrayidx34.1, align 8, !dbg !3594, !tbaa !2681
  %inc36.1 = add i64 %i.196, 2, !dbg !3597
  tail call void @llvm.dbg.value(metadata i64 %inc36, i64 0, metadata !841, metadata !2664), !dbg !3563
  %cmp25.1 = icmp slt i64 %inc36.1, %13, !dbg !3591
  br i1 %cmp25.1, label %for.body.26, label %do.body.loopexit.unr-lcssa, !dbg !3592

do.body.loopexit.unr-lcssa:                       ; preds = %for.body.26
  br label %do.body.loopexit, !dbg !3598

do.body.loopexit:                                 ; preds = %for.body.26.lr.ph.split, %do.body.loopexit.unr-lcssa
  br label %do.body, !dbg !3598

do.body:                                          ; preds = %do.body.loopexit, %for.cond.23.preheader
  %result38 = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %lz, i64 0, i32 3, !dbg !3598
  %32 = load %struct._object*, %struct._object** %result38, align 8, !dbg !3598, !tbaa !2910
  tail call void @llvm.dbg.value(metadata %struct._object* %32, i64 0, metadata !851, metadata !2664), !dbg !3598
  %cmp39 = icmp eq %struct._object* %32, null, !dbg !3600
  br i1 %cmp39, label %if.end.49, label %if.then.40, !dbg !3601

if.then.40:                                       ; preds = %do.body
  store %struct._object* null, %struct._object** %result38, align 8, !dbg !3602, !tbaa !2910
  tail call void @llvm.dbg.value(metadata %struct._object* %32, i64 0, metadata !853, metadata !2664), !dbg !3604
  %ob_refcnt43 = getelementptr inbounds %struct._object, %struct._object* %32, i64 0, i32 0, !dbg !3606
  %33 = load i64, i64* %ob_refcnt43, align 8, !dbg !3606, !tbaa !2694
  %dec = add i64 %33, -1, !dbg !3606
  store i64 %dec, i64* %ob_refcnt43, align 8, !dbg !3606, !tbaa !2694
  %cmp44 = icmp eq i64 %dec, 0, !dbg !3606
  br i1 %cmp44, label %if.else.46, label %if.end.49, !dbg !3608

if.else.46:                                       ; preds = %if.then.40
  %ob_type47 = getelementptr inbounds %struct._object, %struct._object* %32, i64 0, i32 1, !dbg !3609
  %34 = load %struct._typeobject*, %struct._typeobject** %ob_type47, align 8, !dbg !3609, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %34, i64 0, i32 4, !dbg !3609
  %35 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3609, !tbaa !2717
  tail call void %35(%struct._object* %32) #1, !dbg !3609
  br label %if.end.49

if.end.49:                                        ; preds = %if.else.46, %if.then.40, %do.body
  store %struct._object* %call19, %struct._object** %result38, align 8, !dbg !3611, !tbaa !2910
  %36 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !3612, !tbaa !2694
  %inc53 = add i64 %36, 1, !dbg !3612
  store i64 %inc53, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !3612, !tbaa !2694
  br label %cleanup.54, !dbg !3612

cleanup.54.loopexit:                              ; preds = %land.lhs.true
  br label %cleanup.54, !dbg !3613

cleanup.54:                                       ; preds = %cleanup.54.loopexit, %for.end, %if.end.49, %if.then
  %retval.2 = phi %struct._object* [ null, %if.then ], [ @_Py_NoneStruct, %if.end.49 ], [ null, %for.end ], [ null, %cleanup.54.loopexit ]
  ret %struct._object* %retval.2, !dbg !3613
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @cwr_sizeof(%struct.cwrobject* nocapture readonly %co, i8* nocapture readnone %unused) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.cwrobject* %co, i64 0, metadata !861, metadata !2664), !dbg !3614
  tail call void @llvm.dbg.value(metadata i8* %unused, i64 0, metadata !862, metadata !2664), !dbg !3615
  tail call void @llvm.dbg.value(metadata i64 56, i64 0, metadata !863, metadata !2664), !dbg !3616
  %r = getelementptr inbounds %struct.cwrobject, %struct.cwrobject* %co, i64 0, i32 4, !dbg !3617
  %0 = load i64, i64* %r, align 8, !dbg !3617, !tbaa !2960
  %mul = shl i64 %0, 3, !dbg !3618
  %add = add i64 %mul, 56, !dbg !3619
  tail call void @llvm.dbg.value(metadata i64 %add, i64 0, metadata !863, metadata !2664), !dbg !3616
  %call = tail call %struct._object* @PyLong_FromSsize_t(i64 %add) #1, !dbg !3620
  ret %struct._object* %call, !dbg !3621
}

; Function Attrs: nounwind uwtable
define internal void @cycle_dealloc(%struct.cycleobject* %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.cycleobject* %lz, i64 0, metadata !885, metadata !2664), !dbg !3622
  %0 = bitcast %struct.cycleobject* %lz to i8*, !dbg !3623
  tail call void @PyObject_GC_UnTrack(i8* %0) #1, !dbg !3624
  %saved = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %lz, i64 0, i32 2, !dbg !3625
  %1 = load %struct._object*, %struct._object** %saved, align 8, !dbg !3625, !tbaa !3627
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !886, metadata !2664), !dbg !3625
  %cmp = icmp eq %struct._object* %1, null, !dbg !3629
  br i1 %cmp, label %if.end.4, label %do.body.1, !dbg !3630

do.body.1:                                        ; preds = %entry
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !888, metadata !2664), !dbg !3631
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !3633
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !3633, !tbaa !2694
  %dec = add i64 %2, -1, !dbg !3633
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3633, !tbaa !2694
  %cmp2 = icmp eq i64 %dec, 0, !dbg !3633
  br i1 %cmp2, label %if.else, label %if.end.4, !dbg !3635

if.else:                                          ; preds = %do.body.1
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !3636
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3636, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 4, !dbg !3636
  %4 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3636, !tbaa !2717
  tail call void %4(%struct._object* %1) #1, !dbg !3636
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %do.body.1, %entry
  %it = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %lz, i64 0, i32 1, !dbg !3638
  %5 = load %struct._object*, %struct._object** %it, align 8, !dbg !3638, !tbaa !3640
  tail call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !891, metadata !2664), !dbg !3638
  %cmp9 = icmp eq %struct._object* %5, null, !dbg !3641
  br i1 %cmp9, label %if.end.23, label %do.body.11, !dbg !3642

do.body.11:                                       ; preds = %if.end.4
  tail call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !893, metadata !2664), !dbg !3643
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 0, !dbg !3645
  %6 = load i64, i64* %ob_refcnt13, align 8, !dbg !3645, !tbaa !2694
  %dec14 = add i64 %6, -1, !dbg !3645
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !3645, !tbaa !2694
  %cmp15 = icmp eq i64 %dec14, 0, !dbg !3645
  br i1 %cmp15, label %if.else.17, label %if.end.23, !dbg !3647

if.else.17:                                       ; preds = %do.body.11
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 1, !dbg !3648
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !3648, !tbaa !2667
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i64 0, i32 4, !dbg !3648
  %8 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !3648, !tbaa !2717
  tail call void %8(%struct._object* %5) #1, !dbg !3648
  br label %if.end.23

if.end.23:                                        ; preds = %if.else.17, %do.body.11, %if.end.4
  %ob_type26 = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %lz, i64 0, i32 0, i32 1, !dbg !3650
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type26, align 8, !dbg !3650, !tbaa !2667
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i64 0, i32 38, !dbg !3651
  %10 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !3651, !tbaa !2744
  tail call void %10(i8* %0) #1, !dbg !3650
  ret void, !dbg !3652
}

; Function Attrs: nounwind uwtable
define internal i32 @cycle_traverse(%struct.cycleobject* nocapture readonly %lz, i32 (%struct._object*, i8*)* nocapture %visit, i8* %arg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.cycleobject* %lz, i64 0, metadata !900, metadata !2664), !dbg !3653
  tail call void @llvm.dbg.value(metadata i32 (%struct._object*, i8*)* %visit, i64 0, metadata !901, metadata !2664), !dbg !3654
  tail call void @llvm.dbg.value(metadata i8* %arg, i64 0, metadata !902, metadata !2664), !dbg !3655
  %it = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %lz, i64 0, i32 1, !dbg !3656
  %0 = load %struct._object*, %struct._object** %it, align 8, !dbg !3656, !tbaa !3640
  %tobool = icmp eq %struct._object* %0, null, !dbg !3656
  br i1 %tobool, label %do.body.5, label %if.then, !dbg !3658

if.then:                                          ; preds = %entry
  %call = tail call i32 %visit(%struct._object* %0, i8* %arg) #1, !dbg !3659
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !903, metadata !2664), !dbg !3659
  %tobool2 = icmp eq i32 %call, 0, !dbg !3661
  br i1 %tobool2, label %do.body.5, label %return

do.body.5:                                        ; preds = %entry, %if.then
  %saved = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %lz, i64 0, i32 2, !dbg !3663
  %1 = load %struct._object*, %struct._object** %saved, align 8, !dbg !3663, !tbaa !3627
  %tobool6 = icmp eq %struct._object* %1, null, !dbg !3663
  br i1 %tobool6, label %do.end.18, label %if.then.7, !dbg !3665

if.then.7:                                        ; preds = %do.body.5
  %call10 = tail call i32 %visit(%struct._object* %1, i8* %arg) #1, !dbg !3666
  tail call void @llvm.dbg.value(metadata i32 %call10, i64 0, metadata !907, metadata !2664), !dbg !3666
  %tobool11 = icmp eq i32 %call10, 0, !dbg !3668
  br i1 %tobool11, label %do.end.18, label %return

do.end.18:                                        ; preds = %do.body.5, %if.then.7
  br label %return, !dbg !3670

return:                                           ; preds = %if.then.7, %if.then, %do.end.18
  %retval.3 = phi i32 [ 0, %do.end.18 ], [ %call10, %if.then.7 ], [ %call, %if.then ]
  ret i32 %retval.3, !dbg !3671
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @cycle_next(%struct.cycleobject* nocapture %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.cycleobject* %lz, i64 0, metadata !915, metadata !2664), !dbg !3672
  %it1 = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %lz, i64 0, i32 1, !dbg !3673
  %0 = load %struct._object*, %struct._object** %it1, align 8, !dbg !3673, !tbaa !3640
  %call.68 = tail call %struct._object* @PyIter_Next(%struct._object* %0) #1, !dbg !3674
  tail call void @llvm.dbg.value(metadata %struct._object* %call.68, i64 0, metadata !916, metadata !2664), !dbg !3675
  %cmp.69 = icmp eq %struct._object* %call.68, null, !dbg !3676
  br i1 %cmp.69, label %if.end.9.lr.ph, label %entry.if.then_crit_edge, !dbg !3677

entry.if.then_crit_edge:                          ; preds = %entry
  %.pre71 = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %lz, i64 0, i32 3, !dbg !3678
  br label %if.then, !dbg !3677

if.end.9.lr.ph:                                   ; preds = %entry
  %saved19 = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %lz, i64 0, i32 2, !dbg !3679
  %firstpass31 = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %lz, i64 0, i32 3, !dbg !3681
  br label %if.end.9, !dbg !3677

if.then.loopexit:                                 ; preds = %while.body.backedge
  %call.lcssa75 = phi %struct._object* [ %call, %while.body.backedge ]
  br label %if.then, !dbg !3678

if.then:                                          ; preds = %if.then.loopexit, %entry.if.then_crit_edge
  %firstpass.pre-phi = phi i32* [ %.pre71, %entry.if.then_crit_edge ], [ %firstpass31, %if.then.loopexit ], !dbg !3678
  %call.lcssa = phi %struct._object* [ %call.68, %entry.if.then_crit_edge ], [ %call.lcssa75, %if.then.loopexit ]
  %1 = load i32, i32* %firstpass.pre-phi, align 4, !dbg !3678, !tbaa !3682
  %tobool = icmp eq i32 %1, 0, !dbg !3683
  br i1 %tobool, label %land.lhs.true, label %cleanup, !dbg !3684

land.lhs.true:                                    ; preds = %if.then
  %saved = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %lz, i64 0, i32 2, !dbg !3685
  %2 = load %struct._object*, %struct._object** %saved, align 8, !dbg !3685, !tbaa !3627
  %call2 = tail call i32 @PyList_Append(%struct._object* %2, %struct._object* %call.lcssa) #1, !dbg !3686
  %tobool3 = icmp eq i32 %call2, 0, !dbg !3686
  br i1 %tobool3, label %cleanup, label %do.body, !dbg !3687

do.body:                                          ; preds = %land.lhs.true
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !919, metadata !2664), !dbg !3688
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call.lcssa, i64 0, i32 0, !dbg !3690
  %3 = load i64, i64* %ob_refcnt, align 8, !dbg !3690, !tbaa !2694
  %dec = add i64 %3, -1, !dbg !3690
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3690, !tbaa !2694
  %cmp6 = icmp eq i64 %dec, 0, !dbg !3690
  br i1 %cmp6, label %if.else, label %cleanup, !dbg !3692

if.else:                                          ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call.lcssa, i64 0, i32 1, !dbg !3693
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3693, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i64 0, i32 4, !dbg !3693
  %5 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3693, !tbaa !2717
  tail call void %5(%struct._object* %call.lcssa) #1, !dbg !3693
  br label %cleanup

if.end.9:                                         ; preds = %if.end.9.lr.ph, %while.body.backedge
  %call10 = tail call %struct._object* @PyErr_Occurred() #1, !dbg !3695
  %tobool11 = icmp eq %struct._object* %call10, null, !dbg !3695
  br i1 %tobool11, label %if.end.18, label %if.then.12, !dbg !3697

if.then.12:                                       ; preds = %if.end.9
  %6 = load %struct._object*, %struct._object** @PyExc_StopIteration, align 8, !dbg !3698, !tbaa !2681
  %call13 = tail call i32 @PyErr_ExceptionMatches(%struct._object* %6) #1, !dbg !3701
  %tobool14 = icmp eq i32 %call13, 0, !dbg !3701
  br i1 %tobool14, label %cleanup.loopexit, label %if.then.15, !dbg !3702

if.then.15:                                       ; preds = %if.then.12
  tail call void @PyErr_Clear() #1, !dbg !3703
  br label %if.end.18, !dbg !3704

if.end.18:                                        ; preds = %if.end.9, %if.then.15
  %7 = load %struct._object*, %struct._object** %saved19, align 8, !dbg !3679, !tbaa !3627
  %call20 = tail call i64 @PyList_Size(%struct._object* %7) #1, !dbg !3705
  %cmp21 = icmp eq i64 %call20, 0, !dbg !3706
  br i1 %cmp21, label %cleanup.loopexit, label %if.end.23, !dbg !3707

if.end.23:                                        ; preds = %if.end.18
  %8 = load %struct._object*, %struct._object** %saved19, align 8, !dbg !3708, !tbaa !3627
  %call25 = tail call %struct._object* @PyObject_GetIter(%struct._object* %8) #1, !dbg !3709
  tail call void @llvm.dbg.value(metadata %struct._object* %call25, i64 0, metadata !917, metadata !2664), !dbg !3710
  %cmp26 = icmp eq %struct._object* %call25, null, !dbg !3711
  br i1 %cmp26, label %cleanup.loopexit, label %if.end.28, !dbg !3713

if.end.28:                                        ; preds = %if.end.23
  %9 = load %struct._object*, %struct._object** %it1, align 8, !dbg !3714, !tbaa !3640
  tail call void @llvm.dbg.value(metadata %struct._object* %9, i64 0, metadata !918, metadata !2664), !dbg !3715
  store %struct._object* %call25, %struct._object** %it1, align 8, !dbg !3716, !tbaa !3640
  store i32 1, i32* %firstpass31, align 4, !dbg !3717, !tbaa !3682
  tail call void @llvm.dbg.value(metadata %struct._object* %9, i64 0, metadata !926, metadata !2664), !dbg !3718
  %ob_refcnt35 = getelementptr inbounds %struct._object, %struct._object* %9, i64 0, i32 0, !dbg !3720
  %10 = load i64, i64* %ob_refcnt35, align 8, !dbg !3720, !tbaa !2694
  %dec36 = add i64 %10, -1, !dbg !3720
  store i64 %dec36, i64* %ob_refcnt35, align 8, !dbg !3720, !tbaa !2694
  %cmp37 = icmp eq i64 %dec36, 0, !dbg !3720
  br i1 %cmp37, label %if.else.39, label %while.body.backedge, !dbg !3722

while.body.backedge:                              ; preds = %if.end.28, %if.else.39
  %11 = phi %struct._object* [ %call25, %if.end.28 ], [ %.pre, %if.else.39 ], !dbg !3673
  %call = tail call %struct._object* @PyIter_Next(%struct._object* %11) #1, !dbg !3674
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !916, metadata !2664), !dbg !3675
  %cmp = icmp eq %struct._object* %call, null, !dbg !3676
  br i1 %cmp, label %if.end.9, label %if.then.loopexit, !dbg !3677

if.else.39:                                       ; preds = %if.end.28
  %ob_type40 = getelementptr inbounds %struct._object, %struct._object* %9, i64 0, i32 1, !dbg !3723
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type40, align 8, !dbg !3723, !tbaa !2667
  %tp_dealloc41 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i64 0, i32 4, !dbg !3723
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc41, align 8, !dbg !3723, !tbaa !2717
  tail call void %13(%struct._object* %9) #1, !dbg !3723
  %.pre = load %struct._object*, %struct._object** %it1, align 8, !dbg !3673, !tbaa !3640
  br label %while.body.backedge

cleanup.loopexit:                                 ; preds = %if.then.12, %if.end.18, %if.end.23
  br label %cleanup, !dbg !3725

cleanup:                                          ; preds = %cleanup.loopexit, %if.then, %land.lhs.true, %if.else, %do.body
  %retval.0 = phi %struct._object* [ null, %do.body ], [ null, %if.else ], [ %call.lcssa, %land.lhs.true ], [ %call.lcssa, %if.then ], [ null, %cleanup.loopexit ]
  ret %struct._object* %retval.0, !dbg !3725
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @cycle_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %iterable = alloca %struct._object*, align 8
  tail call void @llvm.dbg.value(metadata %struct._typeobject* %type, i64 0, metadata !949, metadata !2664), !dbg !3726
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !950, metadata !2664), !dbg !3727
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !951, metadata !2664), !dbg !3728
  %0 = bitcast %struct._object** %iterable to i8*, !dbg !3729
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3729
  %cmp = icmp eq %struct._typeobject* %type, @cycle_type, !dbg !3730
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3732

land.lhs.true:                                    ; preds = %entry
  %call = tail call i32 @_PyArg_NoKeywords(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i64 0, i64 0), %struct._object* %kwds) #1, !dbg !3733
  %tobool = icmp eq i32 %call, 0, !dbg !3733
  br i1 %tobool, label %cleanup, label %if.end, !dbg !3734

if.end:                                           ; preds = %land.lhs.true, %entry
  tail call void @llvm.dbg.value(metadata %struct._object** %iterable, i64 0, metadata !953, metadata !2664), !dbg !3735
  %call1 = call i32 (%struct._object*, i8*, i64, i64, ...) @PyArg_UnpackTuple(%struct._object* %args, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i64 0, i64 0), i64 1, i64 1, %struct._object** nonnull %iterable) #1, !dbg !3736
  %tobool2 = icmp eq i32 %call1, 0, !dbg !3736
  br i1 %tobool2, label %cleanup, label %if.end.4, !dbg !3738

if.end.4:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct._object** %iterable, i64 0, metadata !953, metadata !2664), !dbg !3735
  %1 = load %struct._object*, %struct._object** %iterable, align 8, !dbg !3739, !tbaa !2681
  %call5 = call %struct._object* @PyObject_GetIter(%struct._object* %1) #1, !dbg !3740
  call void @llvm.dbg.value(metadata %struct._object* %call5, i64 0, metadata !952, metadata !2664), !dbg !3741
  %cmp6 = icmp eq %struct._object* %call5, null, !dbg !3742
  br i1 %cmp6, label %cleanup, label %if.end.8, !dbg !3744

if.end.8:                                         ; preds = %if.end.4
  %call9 = call %struct._object* @PyList_New(i64 0) #1, !dbg !3745
  call void @llvm.dbg.value(metadata %struct._object* %call9, i64 0, metadata !954, metadata !2664), !dbg !3746
  %cmp10 = icmp eq %struct._object* %call9, null, !dbg !3747
  br i1 %cmp10, label %do.body, label %if.end.15, !dbg !3748

do.body:                                          ; preds = %if.end.8
  call void @llvm.dbg.value(metadata %struct._object* %call5, i64 0, metadata !956, metadata !2664), !dbg !3749
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call5, i64 0, i32 0, !dbg !3751
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !3751, !tbaa !2694
  %dec = add i64 %2, -1, !dbg !3751
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3751, !tbaa !2694
  %cmp12 = icmp eq i64 %dec, 0, !dbg !3751
  br i1 %cmp12, label %if.else, label %cleanup, !dbg !3753

if.else:                                          ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call5, i64 0, i32 1, !dbg !3754
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3754, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 4, !dbg !3754
  %4 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3754, !tbaa !2717
  call void %4(%struct._object* %call5) #1, !dbg !3754
  br label %cleanup

if.end.15:                                        ; preds = %if.end.8
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %type, i64 0, i32 36, !dbg !3756
  %5 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !3756, !tbaa !2835
  %call16 = call %struct._object* %5(%struct._typeobject* %type, i64 0) #1, !dbg !3757
  %cmp17 = icmp eq %struct._object* %call16, null, !dbg !3758
  br i1 %cmp17, label %do.body.19, label %if.end.43, !dbg !3759

do.body.19:                                       ; preds = %if.end.15
  call void @llvm.dbg.value(metadata %struct._object* %call5, i64 0, metadata !960, metadata !2664), !dbg !3760
  %ob_refcnt21 = getelementptr inbounds %struct._object, %struct._object* %call5, i64 0, i32 0, !dbg !3762
  %6 = load i64, i64* %ob_refcnt21, align 8, !dbg !3762, !tbaa !2694
  %dec22 = add i64 %6, -1, !dbg !3762
  store i64 %dec22, i64* %ob_refcnt21, align 8, !dbg !3762, !tbaa !2694
  %cmp23 = icmp eq i64 %dec22, 0, !dbg !3762
  br i1 %cmp23, label %if.else.25, label %if.end.28, !dbg !3764

if.else.25:                                       ; preds = %do.body.19
  %ob_type26 = getelementptr inbounds %struct._object, %struct._object* %call5, i64 0, i32 1, !dbg !3765
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type26, align 8, !dbg !3765, !tbaa !2667
  %tp_dealloc27 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i64 0, i32 4, !dbg !3765
  %8 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc27, align 8, !dbg !3765, !tbaa !2717
  call void %8(%struct._object* %call5) #1, !dbg !3765
  br label %if.end.28

if.end.28:                                        ; preds = %do.body.19, %if.else.25
  call void @llvm.dbg.value(metadata %struct._object* %call9, i64 0, metadata !964, metadata !2664), !dbg !3767
  %ob_refcnt33 = getelementptr inbounds %struct._object, %struct._object* %call9, i64 0, i32 0, !dbg !3769
  %9 = load i64, i64* %ob_refcnt33, align 8, !dbg !3769, !tbaa !2694
  %dec34 = add i64 %9, -1, !dbg !3769
  store i64 %dec34, i64* %ob_refcnt33, align 8, !dbg !3769, !tbaa !2694
  %cmp35 = icmp eq i64 %dec34, 0, !dbg !3769
  br i1 %cmp35, label %if.else.37, label %cleanup, !dbg !3771

if.else.37:                                       ; preds = %if.end.28
  %ob_type38 = getelementptr inbounds %struct._object, %struct._object* %call9, i64 0, i32 1, !dbg !3772
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type38, align 8, !dbg !3772, !tbaa !2667
  %tp_dealloc39 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i64 0, i32 4, !dbg !3772
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc39, align 8, !dbg !3772, !tbaa !2717
  call void %11(%struct._object* %call9) #1, !dbg !3772
  br label %cleanup

if.end.43:                                        ; preds = %if.end.15
  %it44 = getelementptr inbounds %struct._object, %struct._object* %call16, i64 1, !dbg !3774
  %12 = bitcast %struct._object* %it44 to %struct._object**, !dbg !3774
  store %struct._object* %call5, %struct._object** %12, align 8, !dbg !3775, !tbaa !3640
  %saved45 = getelementptr inbounds %struct._object, %struct._object* %call16, i64 1, i32 1, !dbg !3776
  %13 = bitcast %struct._typeobject** %saved45 to %struct._object**, !dbg !3776
  store %struct._object* %call9, %struct._object** %13, align 8, !dbg !3777, !tbaa !3627
  %firstpass = getelementptr inbounds %struct._object, %struct._object* %call16, i64 2, !dbg !3778
  %14 = bitcast %struct._object* %firstpass to i32*, !dbg !3778
  store i32 0, i32* %14, align 4, !dbg !3779, !tbaa !3682
  br label %cleanup, !dbg !3780

cleanup:                                          ; preds = %if.else.37, %if.end.28, %if.else, %do.body, %if.end.4, %if.end, %land.lhs.true, %if.end.43
  %retval.0 = phi %struct._object* [ %call16, %if.end.43 ], [ null, %land.lhs.true ], [ null, %if.end ], [ null, %if.end.4 ], [ null, %do.body ], [ null, %if.else ], [ null, %if.end.28 ], [ null, %if.else.37 ]
  call void @llvm.lifetime.end(i64 8, i8* %0) #1, !dbg !3781
  ret %struct._object* %retval.0, !dbg !3781
}

declare i32 @PyList_Append(%struct._object*, %struct._object*) #3

declare i32 @PyErr_ExceptionMatches(%struct._object*) #3

declare void @PyErr_Clear() #3

declare i64 @PyList_Size(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @cycle_reduce(%struct.cycleobject* nocapture readonly %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.cycleobject* %lz, i64 0, metadata !930, metadata !2664), !dbg !3782
  %ob_type = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %lz, i64 0, i32 0, i32 1, !dbg !3783
  %0 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3783, !tbaa !2667
  %it = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %lz, i64 0, i32 1, !dbg !3784
  %1 = load %struct._object*, %struct._object** %it, align 8, !dbg !3784, !tbaa !3640
  %saved = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %lz, i64 0, i32 2, !dbg !3785
  %2 = load %struct._object*, %struct._object** %saved, align 8, !dbg !3785, !tbaa !3627
  %firstpass = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %lz, i64 0, i32 3, !dbg !3786
  %3 = load i32, i32* %firstpass, align 4, !dbg !3786, !tbaa !3682
  %call = tail call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19, i64 0, i64 0), %struct._typeobject* %0, %struct._object* %1, %struct._object* %2, i32 %3) #1, !dbg !3787
  ret %struct._object* %call, !dbg !3788
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @cycle_setstate(%struct.cycleobject* nocapture %lz, %struct._object* %state) #0 {
entry:
  %saved = alloca %struct._object*, align 8
  %firstpass = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct.cycleobject* %lz, i64 0, metadata !935, metadata !2664), !dbg !3789
  tail call void @llvm.dbg.value(metadata %struct._object* %state, i64 0, metadata !936, metadata !2664), !dbg !3790
  %0 = bitcast %struct._object** %saved to i8*, !dbg !3791
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3791
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !937, metadata !2664), !dbg !3792
  store %struct._object* null, %struct._object** %saved, align 8, !dbg !3792, !tbaa !2681
  %1 = bitcast i32* %firstpass to i8*, !dbg !3793
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !3793
  tail call void @llvm.dbg.value(metadata %struct._object** %saved, i64 0, metadata !937, metadata !2664), !dbg !3792
  tail call void @llvm.dbg.value(metadata i32* %firstpass, i64 0, metadata !938, metadata !2664), !dbg !3794
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %state, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), %struct._object** nonnull %saved, i32* nonnull %firstpass) #1, !dbg !3795
  %tobool = icmp eq i32 %call, 0, !dbg !3795
  br i1 %tobool, label %cleanup, label %do.body, !dbg !3797

do.body:                                          ; preds = %entry
  %saved1 = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %lz, i64 0, i32 2, !dbg !3798
  %2 = load %struct._object*, %struct._object** %saved1, align 8, !dbg !3798, !tbaa !3627
  call void @llvm.dbg.value(metadata %struct._object* %2, i64 0, metadata !939, metadata !2664), !dbg !3798
  %cmp = icmp eq %struct._object* %2, null, !dbg !3800
  br i1 %cmp, label %if.end.8, label %if.then.2, !dbg !3801

if.then.2:                                        ; preds = %do.body
  store %struct._object* null, %struct._object** %saved1, align 8, !dbg !3802, !tbaa !3627
  call void @llvm.dbg.value(metadata %struct._object* %2, i64 0, metadata !941, metadata !2664), !dbg !3804
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %2, i64 0, i32 0, !dbg !3806
  %3 = load i64, i64* %ob_refcnt, align 8, !dbg !3806, !tbaa !2694
  %dec = add i64 %3, -1, !dbg !3806
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3806, !tbaa !2694
  %cmp5 = icmp eq i64 %dec, 0, !dbg !3806
  br i1 %cmp5, label %if.else, label %if.end.8, !dbg !3808

if.else:                                          ; preds = %if.then.2
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %2, i64 0, i32 1, !dbg !3809
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3809, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i64 0, i32 4, !dbg !3809
  %5 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3809, !tbaa !2717
  call void %5(%struct._object* %2) #1, !dbg !3809
  br label %if.end.8

if.end.8:                                         ; preds = %if.else, %if.then.2, %do.body
  call void @llvm.dbg.value(metadata %struct._object** %saved, i64 0, metadata !937, metadata !2664), !dbg !3792
  %6 = load %struct._object*, %struct._object** %saved, align 8, !dbg !3811, !tbaa !2681
  store %struct._object* %6, %struct._object** %saved1, align 8, !dbg !3812, !tbaa !3627
  call void @llvm.dbg.value(metadata %struct._object* %6, i64 0, metadata !945, metadata !2664), !dbg !3813
  %cmp14 = icmp eq %struct._object* %6, null, !dbg !3815
  br i1 %cmp14, label %if.end.17, label %if.then.15, !dbg !3817

if.then.15:                                       ; preds = %if.end.8
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %6, i64 0, i32 0, !dbg !3818
  %7 = load i64, i64* %ob_refcnt16, align 8, !dbg !3818, !tbaa !2694
  %inc = add i64 %7, 1, !dbg !3818
  store i64 %inc, i64* %ob_refcnt16, align 8, !dbg !3818, !tbaa !2694
  br label %if.end.17, !dbg !3818

if.end.17:                                        ; preds = %if.end.8, %if.then.15
  call void @llvm.dbg.value(metadata i32* %firstpass, i64 0, metadata !938, metadata !2664), !dbg !3794
  %8 = load i32, i32* %firstpass, align 4, !dbg !3820, !tbaa !3821
  %cmp20 = icmp ne i32 %8, 0, !dbg !3822
  %conv = zext i1 %cmp20 to i32, !dbg !3822
  %firstpass21 = getelementptr inbounds %struct.cycleobject, %struct.cycleobject* %lz, i64 0, i32 3, !dbg !3823
  store i32 %conv, i32* %firstpass21, align 4, !dbg !3824, !tbaa !3682
  %9 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !3825, !tbaa !2694
  %inc22 = add i64 %9, 1, !dbg !3825
  store i64 %inc22, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !3825, !tbaa !2694
  br label %cleanup, !dbg !3825

cleanup:                                          ; preds = %entry, %if.end.17
  %retval.0 = phi %struct._object* [ @_Py_NoneStruct, %if.end.17 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %1) #1, !dbg !3826
  call void @llvm.lifetime.end(i64 8, i8* %0) #1, !dbg !3826
  ret %struct._object* %retval.0, !dbg !3826
}

declare i32 @PyArg_ParseTuple(%struct._object*, i8*, ...) #3

declare i32 @_PyArg_NoKeywords(i8*, %struct._object*) #3

declare i32 @PyArg_UnpackTuple(%struct._object*, i8*, i64, i64, ...) #3

declare %struct._object* @PyList_New(i64) #3

; Function Attrs: nounwind uwtable
define internal void @dropwhile_dealloc(%struct.dropwhileobject* %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.dropwhileobject* %lz, i64 0, metadata !970, metadata !2664), !dbg !3827
  %0 = bitcast %struct.dropwhileobject* %lz to i8*, !dbg !3828
  tail call void @PyObject_GC_UnTrack(i8* %0) #1, !dbg !3829
  %func = getelementptr inbounds %struct.dropwhileobject, %struct.dropwhileobject* %lz, i64 0, i32 1, !dbg !3830
  %1 = load %struct._object*, %struct._object** %func, align 8, !dbg !3830, !tbaa !3832
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !971, metadata !2664), !dbg !3830
  %cmp = icmp eq %struct._object* %1, null, !dbg !3834
  br i1 %cmp, label %if.end.4, label %do.body.1, !dbg !3835

do.body.1:                                        ; preds = %entry
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !973, metadata !2664), !dbg !3836
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !3838
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !3838, !tbaa !2694
  %dec = add i64 %2, -1, !dbg !3838
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3838, !tbaa !2694
  %cmp2 = icmp eq i64 %dec, 0, !dbg !3838
  br i1 %cmp2, label %if.else, label %if.end.4, !dbg !3840

if.else:                                          ; preds = %do.body.1
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !3841
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3841, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 4, !dbg !3841
  %4 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3841, !tbaa !2717
  tail call void %4(%struct._object* %1) #1, !dbg !3841
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %do.body.1, %entry
  %it = getelementptr inbounds %struct.dropwhileobject, %struct.dropwhileobject* %lz, i64 0, i32 2, !dbg !3843
  %5 = load %struct._object*, %struct._object** %it, align 8, !dbg !3843, !tbaa !3845
  tail call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !976, metadata !2664), !dbg !3843
  %cmp9 = icmp eq %struct._object* %5, null, !dbg !3846
  br i1 %cmp9, label %if.end.23, label %do.body.11, !dbg !3847

do.body.11:                                       ; preds = %if.end.4
  tail call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !978, metadata !2664), !dbg !3848
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 0, !dbg !3850
  %6 = load i64, i64* %ob_refcnt13, align 8, !dbg !3850, !tbaa !2694
  %dec14 = add i64 %6, -1, !dbg !3850
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !3850, !tbaa !2694
  %cmp15 = icmp eq i64 %dec14, 0, !dbg !3850
  br i1 %cmp15, label %if.else.17, label %if.end.23, !dbg !3852

if.else.17:                                       ; preds = %do.body.11
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 1, !dbg !3853
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !3853, !tbaa !2667
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i64 0, i32 4, !dbg !3853
  %8 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !3853, !tbaa !2717
  tail call void %8(%struct._object* %5) #1, !dbg !3853
  br label %if.end.23

if.end.23:                                        ; preds = %if.else.17, %do.body.11, %if.end.4
  %ob_type26 = getelementptr inbounds %struct.dropwhileobject, %struct.dropwhileobject* %lz, i64 0, i32 0, i32 1, !dbg !3855
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type26, align 8, !dbg !3855, !tbaa !2667
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i64 0, i32 38, !dbg !3856
  %10 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !3856, !tbaa !2744
  tail call void %10(i8* %0) #1, !dbg !3855
  ret void, !dbg !3857
}

; Function Attrs: nounwind uwtable
define internal i32 @dropwhile_traverse(%struct.dropwhileobject* nocapture readonly %lz, i32 (%struct._object*, i8*)* nocapture %visit, i8* %arg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.dropwhileobject* %lz, i64 0, metadata !985, metadata !2664), !dbg !3858
  tail call void @llvm.dbg.value(metadata i32 (%struct._object*, i8*)* %visit, i64 0, metadata !986, metadata !2664), !dbg !3859
  tail call void @llvm.dbg.value(metadata i8* %arg, i64 0, metadata !987, metadata !2664), !dbg !3860
  %it = getelementptr inbounds %struct.dropwhileobject, %struct.dropwhileobject* %lz, i64 0, i32 2, !dbg !3861
  %0 = load %struct._object*, %struct._object** %it, align 8, !dbg !3861, !tbaa !3845
  %tobool = icmp eq %struct._object* %0, null, !dbg !3861
  br i1 %tobool, label %do.body.5, label %if.then, !dbg !3863

if.then:                                          ; preds = %entry
  %call = tail call i32 %visit(%struct._object* %0, i8* %arg) #1, !dbg !3864
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !988, metadata !2664), !dbg !3864
  %tobool2 = icmp eq i32 %call, 0, !dbg !3866
  br i1 %tobool2, label %do.body.5, label %return

do.body.5:                                        ; preds = %entry, %if.then
  %func = getelementptr inbounds %struct.dropwhileobject, %struct.dropwhileobject* %lz, i64 0, i32 1, !dbg !3868
  %1 = load %struct._object*, %struct._object** %func, align 8, !dbg !3868, !tbaa !3832
  %tobool6 = icmp eq %struct._object* %1, null, !dbg !3868
  br i1 %tobool6, label %do.end.18, label %if.then.7, !dbg !3870

if.then.7:                                        ; preds = %do.body.5
  %call10 = tail call i32 %visit(%struct._object* %1, i8* %arg) #1, !dbg !3871
  tail call void @llvm.dbg.value(metadata i32 %call10, i64 0, metadata !992, metadata !2664), !dbg !3871
  %tobool11 = icmp eq i32 %call10, 0, !dbg !3873
  br i1 %tobool11, label %do.end.18, label %return

do.end.18:                                        ; preds = %do.body.5, %if.then.7
  br label %return, !dbg !3875

return:                                           ; preds = %if.then.7, %if.then, %do.end.18
  %retval.3 = phi i32 [ 0, %do.end.18 ], [ %call10, %if.then.7 ], [ %call, %if.then ]
  ret i32 %retval.3, !dbg !3876
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @dropwhile_next(%struct.dropwhileobject* nocapture %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.dropwhileobject* %lz, i64 0, metadata !1000, metadata !2664), !dbg !3877
  %it1 = getelementptr inbounds %struct.dropwhileobject, %struct.dropwhileobject* %lz, i64 0, i32 2, !dbg !3878
  %0 = load %struct._object*, %struct._object** %it1, align 8, !dbg !3878, !tbaa !3845
  tail call void @llvm.dbg.value(metadata %struct._object* %0, i64 0, metadata !1003, metadata !2664), !dbg !3879
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i64 0, i32 1, !dbg !3880
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3880, !tbaa !2667
  %tp_iternext = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i64 0, i32 26, !dbg !3881
  %2 = load %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)** %tp_iternext, align 8, !dbg !3881, !tbaa !3882
  tail call void @llvm.dbg.value(metadata %struct._object* (%struct._object*)* %2, i64 0, metadata !1005, metadata !2664), !dbg !3883
  %start = getelementptr inbounds %struct.dropwhileobject, %struct.dropwhileobject* %lz, i64 0, i32 3, !dbg !3884
  %func = getelementptr inbounds %struct.dropwhileobject, %struct.dropwhileobject* %lz, i64 0, i32 1, !dbg !3886
  br label %for.cond, !dbg !3887

for.cond:                                         ; preds = %if.end.42, %entry
  %call = tail call %struct._object* %2(%struct._object* %0) #1, !dbg !3888
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1001, metadata !2664), !dbg !3889
  %cmp = icmp eq %struct._object* %call, null, !dbg !3890
  br i1 %cmp, label %cleanup.loopexit, label %if.end, !dbg !3892

if.end:                                           ; preds = %for.cond
  %3 = load i64, i64* %start, align 8, !dbg !3884, !tbaa !3893
  %cmp2 = icmp eq i64 %3, 1, !dbg !3894
  br i1 %cmp2, label %cleanup.loopexit, label %if.end.4, !dbg !3895

if.end.4:                                         ; preds = %if.end
  %4 = load %struct._object*, %struct._object** %func, align 8, !dbg !3886, !tbaa !3832
  %call5 = tail call %struct._object* (%struct._object*, ...) @PyObject_CallFunctionObjArgs(%struct._object* %4, %struct._object* %call, i8* null) #1, !dbg !3896
  tail call void @llvm.dbg.value(metadata %struct._object* %call5, i64 0, metadata !1002, metadata !2664), !dbg !3897
  %cmp6 = icmp eq %struct._object* %call5, null, !dbg !3898
  br i1 %cmp6, label %do.body, label %if.end.12, !dbg !3899

do.body:                                          ; preds = %if.end.4
  %call.lcssa90 = phi %struct._object* [ %call, %if.end.4 ]
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1006, metadata !2664), !dbg !3900
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call.lcssa90, i64 0, i32 0, !dbg !3902
  %5 = load i64, i64* %ob_refcnt, align 8, !dbg !3902, !tbaa !2694
  %dec = add i64 %5, -1, !dbg !3902
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3902, !tbaa !2694
  %cmp8 = icmp eq i64 %dec, 0, !dbg !3902
  br i1 %cmp8, label %if.else, label %cleanup, !dbg !3904

if.else:                                          ; preds = %do.body
  %ob_type10 = getelementptr inbounds %struct._object, %struct._object* %call.lcssa90, i64 0, i32 1, !dbg !3905
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type10, align 8, !dbg !3905, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i64 0, i32 4, !dbg !3905
  %7 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3905, !tbaa !2717
  tail call void %7(%struct._object* %call.lcssa90) #1, !dbg !3905
  br label %cleanup

if.end.12:                                        ; preds = %if.end.4
  %call13 = tail call i32 @PyObject_IsTrue(%struct._object* %call5) #1, !dbg !3907
  tail call void @llvm.dbg.value(metadata %struct._object* %call5, i64 0, metadata !1013, metadata !2664), !dbg !3908
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %call5, i64 0, i32 0, !dbg !3910
  %8 = load i64, i64* %ob_refcnt16, align 8, !dbg !3910, !tbaa !2694
  %dec17 = add i64 %8, -1, !dbg !3910
  store i64 %dec17, i64* %ob_refcnt16, align 8, !dbg !3910, !tbaa !2694
  %cmp18 = icmp eq i64 %dec17, 0, !dbg !3910
  br i1 %cmp18, label %if.else.21, label %if.end.24, !dbg !3912

if.else.21:                                       ; preds = %if.end.12
  %ob_type22 = getelementptr inbounds %struct._object, %struct._object* %call5, i64 0, i32 1, !dbg !3913
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type22, align 8, !dbg !3913, !tbaa !2667
  %tp_dealloc23 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i64 0, i32 4, !dbg !3913
  %10 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc23, align 8, !dbg !3913, !tbaa !2717
  tail call void %10(%struct._object* %call5) #1, !dbg !3913
  br label %if.end.24

if.end.24:                                        ; preds = %if.end.12, %if.else.21
  %cmp27 = icmp eq i32 %call13, 0, !dbg !3915
  br i1 %cmp27, label %if.then.29, label %do.body.32, !dbg !3917

if.then.29:                                       ; preds = %if.end.24
  %call.lcssa91 = phi %struct._object* [ %call, %if.end.24 ]
  store i64 1, i64* %start, align 8, !dbg !3918, !tbaa !3893
  br label %cleanup, !dbg !3920

do.body.32:                                       ; preds = %if.end.24
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1015, metadata !2664), !dbg !3921
  %ob_refcnt34 = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 0, !dbg !3923
  %11 = load i64, i64* %ob_refcnt34, align 8, !dbg !3923, !tbaa !2694
  %dec35 = add i64 %11, -1, !dbg !3923
  store i64 %dec35, i64* %ob_refcnt34, align 8, !dbg !3923, !tbaa !2694
  %cmp36 = icmp eq i64 %dec35, 0, !dbg !3923
  br i1 %cmp36, label %if.else.39, label %if.end.42, !dbg !3925

if.else.39:                                       ; preds = %do.body.32
  %ob_type40 = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 1, !dbg !3926
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type40, align 8, !dbg !3926, !tbaa !2667
  %tp_dealloc41 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i64 0, i32 4, !dbg !3926
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc41, align 8, !dbg !3926, !tbaa !2717
  tail call void %13(%struct._object* %call) #1, !dbg !3926
  br label %if.end.42

if.end.42:                                        ; preds = %do.body.32, %if.else.39
  %cmp45 = icmp slt i32 %call13, 0, !dbg !3928
  br i1 %cmp45, label %cleanup.loopexit, label %for.cond, !dbg !3930

cleanup.loopexit:                                 ; preds = %for.cond, %if.end, %if.end.42
  %retval.0.ph = phi %struct._object* [ null, %for.cond ], [ %call, %if.end ], [ null, %if.end.42 ]
  br label %cleanup, !dbg !3931

cleanup:                                          ; preds = %cleanup.loopexit, %if.else, %do.body, %if.then.29
  %retval.0 = phi %struct._object* [ %call.lcssa91, %if.then.29 ], [ null, %do.body ], [ null, %if.else ], [ %retval.0.ph, %cleanup.loopexit ]
  ret %struct._object* %retval.0, !dbg !3931
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @dropwhile_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %func = alloca %struct._object*, align 8
  %seq = alloca %struct._object*, align 8
  tail call void @llvm.dbg.value(metadata %struct._typeobject* %type, i64 0, metadata !1029, metadata !2664), !dbg !3932
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1030, metadata !2664), !dbg !3933
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !1031, metadata !2664), !dbg !3934
  %0 = bitcast %struct._object** %func to i8*, !dbg !3935
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3935
  %1 = bitcast %struct._object** %seq to i8*, !dbg !3935
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !3935
  %cmp = icmp eq %struct._typeobject* %type, @dropwhile_type, !dbg !3936
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3938

land.lhs.true:                                    ; preds = %entry
  %call = tail call i32 @_PyArg_NoKeywords(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25, i64 0, i64 0), %struct._object* %kwds) #1, !dbg !3939
  %tobool = icmp eq i32 %call, 0, !dbg !3939
  br i1 %tobool, label %cleanup, label %if.end, !dbg !3940

if.end:                                           ; preds = %land.lhs.true, %entry
  tail call void @llvm.dbg.value(metadata %struct._object** %func, i64 0, metadata !1032, metadata !2664), !dbg !3941
  tail call void @llvm.dbg.value(metadata %struct._object** %seq, i64 0, metadata !1033, metadata !2664), !dbg !3942
  %call1 = call i32 (%struct._object*, i8*, i64, i64, ...) @PyArg_UnpackTuple(%struct._object* %args, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0), i64 2, i64 2, %struct._object** nonnull %func, %struct._object** nonnull %seq) #1, !dbg !3943
  %tobool2 = icmp eq i32 %call1, 0, !dbg !3943
  br i1 %tobool2, label %cleanup, label %if.end.4, !dbg !3945

if.end.4:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct._object** %seq, i64 0, metadata !1033, metadata !2664), !dbg !3942
  %2 = load %struct._object*, %struct._object** %seq, align 8, !dbg !3946, !tbaa !2681
  %call5 = call %struct._object* @PyObject_GetIter(%struct._object* %2) #1, !dbg !3947
  call void @llvm.dbg.value(metadata %struct._object* %call5, i64 0, metadata !1034, metadata !2664), !dbg !3948
  %cmp6 = icmp eq %struct._object* %call5, null, !dbg !3949
  br i1 %cmp6, label %cleanup, label %if.end.8, !dbg !3951

if.end.8:                                         ; preds = %if.end.4
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %type, i64 0, i32 36, !dbg !3952
  %3 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !3952, !tbaa !2835
  %call9 = call %struct._object* %3(%struct._typeobject* %type, i64 0) #1, !dbg !3953
  %cmp10 = icmp eq %struct._object* %call9, null, !dbg !3954
  br i1 %cmp10, label %do.body, label %if.end.15, !dbg !3955

do.body:                                          ; preds = %if.end.8
  call void @llvm.dbg.value(metadata %struct._object* %call5, i64 0, metadata !1036, metadata !2664), !dbg !3956
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call5, i64 0, i32 0, !dbg !3958
  %4 = load i64, i64* %ob_refcnt, align 8, !dbg !3958, !tbaa !2694
  %dec = add i64 %4, -1, !dbg !3958
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3958, !tbaa !2694
  %cmp12 = icmp eq i64 %dec, 0, !dbg !3958
  br i1 %cmp12, label %if.else, label %cleanup, !dbg !3960

if.else:                                          ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call5, i64 0, i32 1, !dbg !3961
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3961, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i64 0, i32 4, !dbg !3961
  %6 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3961, !tbaa !2717
  call void %6(%struct._object* %call5) #1, !dbg !3961
  br label %cleanup

if.end.15:                                        ; preds = %if.end.8
  call void @llvm.dbg.value(metadata %struct._object** %func, i64 0, metadata !1032, metadata !2664), !dbg !3941
  %7 = load %struct._object*, %struct._object** %func, align 8, !dbg !3963, !tbaa !2681
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %7, i64 0, i32 0, !dbg !3963
  %8 = load i64, i64* %ob_refcnt16, align 8, !dbg !3963, !tbaa !2694
  %inc = add i64 %8, 1, !dbg !3963
  store i64 %inc, i64* %ob_refcnt16, align 8, !dbg !3963, !tbaa !2694
  call void @llvm.dbg.value(metadata %struct._object** %func, i64 0, metadata !1032, metadata !2664), !dbg !3941
  %9 = ptrtoint %struct._object* %7 to i64, !dbg !3964
  %10 = getelementptr inbounds %struct._object, %struct._object* %call9, i64 1, i32 0, !dbg !3965
  store i64 %9, i64* %10, align 8, !dbg !3965, !tbaa !3832
  %it18 = getelementptr inbounds %struct._object, %struct._object* %call9, i64 1, i32 1, !dbg !3966
  %11 = bitcast %struct._typeobject** %it18 to %struct._object**, !dbg !3966
  store %struct._object* %call5, %struct._object** %11, align 8, !dbg !3967, !tbaa !3845
  %12 = getelementptr inbounds %struct._object, %struct._object* %call9, i64 2, i32 0, !dbg !3968
  store i64 0, i64* %12, align 8, !dbg !3969, !tbaa !3893
  br label %cleanup, !dbg !3970

cleanup:                                          ; preds = %if.else, %do.body, %if.end.4, %if.end, %land.lhs.true, %if.end.15
  %retval.0 = phi %struct._object* [ %call9, %if.end.15 ], [ null, %land.lhs.true ], [ null, %if.end ], [ null, %if.end.4 ], [ null, %do.body ], [ null, %if.else ]
  call void @llvm.lifetime.end(i64 8, i8* %1) #1, !dbg !3971
  call void @llvm.lifetime.end(i64 8, i8* %0) #1, !dbg !3971
  ret %struct._object* %retval.0, !dbg !3971
}

declare i32 @PyObject_IsTrue(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @dropwhile_reduce(%struct.dropwhileobject* nocapture readonly %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.dropwhileobject* %lz, i64 0, metadata !1019, metadata !2664), !dbg !3972
  %ob_type = getelementptr inbounds %struct.dropwhileobject, %struct.dropwhileobject* %lz, i64 0, i32 0, i32 1, !dbg !3973
  %0 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3973, !tbaa !2667
  %func = getelementptr inbounds %struct.dropwhileobject, %struct.dropwhileobject* %lz, i64 0, i32 1, !dbg !3974
  %1 = load %struct._object*, %struct._object** %func, align 8, !dbg !3974, !tbaa !3832
  %it = getelementptr inbounds %struct.dropwhileobject, %struct.dropwhileobject* %lz, i64 0, i32 2, !dbg !3975
  %2 = load %struct._object*, %struct._object** %it, align 8, !dbg !3975, !tbaa !3845
  %start = getelementptr inbounds %struct.dropwhileobject, %struct.dropwhileobject* %lz, i64 0, i32 3, !dbg !3976
  %3 = load i64, i64* %start, align 8, !dbg !3976, !tbaa !3893
  %call = tail call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i64 0, i64 0), %struct._typeobject* %0, %struct._object* %1, %struct._object* %2, i64 %3) #1, !dbg !3977
  ret %struct._object* %call, !dbg !3978
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @dropwhile_setstate(%struct.dropwhileobject* nocapture %lz, %struct._object* %state) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.dropwhileobject* %lz, i64 0, metadata !1024, metadata !2664), !dbg !3979
  tail call void @llvm.dbg.value(metadata %struct._object* %state, i64 0, metadata !1025, metadata !2664), !dbg !3980
  %call = tail call i32 @PyObject_IsTrue(%struct._object* %state) #1, !dbg !3981
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !1026, metadata !2664), !dbg !3982
  %cmp = icmp slt i32 %call, 0, !dbg !3983
  br i1 %cmp, label %cleanup, label %if.end, !dbg !3985

if.end:                                           ; preds = %entry
  %conv = sext i32 %call to i64, !dbg !3986
  %start1 = getelementptr inbounds %struct.dropwhileobject, %struct.dropwhileobject* %lz, i64 0, i32 3, !dbg !3987
  store i64 %conv, i64* %start1, align 8, !dbg !3988, !tbaa !3893
  %0 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !3989, !tbaa !2694
  %inc = add i64 %0, 1, !dbg !3989
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !3989, !tbaa !2694
  br label %cleanup, !dbg !3989

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct._object* [ @_Py_NoneStruct, %if.end ], [ null, %entry ]
  ret %struct._object* %retval.0, !dbg !3990
}

; Function Attrs: nounwind uwtable
define internal void @takewhile_dealloc(%struct.takewhileobject* %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.takewhileobject* %lz, i64 0, metadata !1044, metadata !2664), !dbg !3991
  %0 = bitcast %struct.takewhileobject* %lz to i8*, !dbg !3992
  tail call void @PyObject_GC_UnTrack(i8* %0) #1, !dbg !3993
  %func = getelementptr inbounds %struct.takewhileobject, %struct.takewhileobject* %lz, i64 0, i32 1, !dbg !3994
  %1 = load %struct._object*, %struct._object** %func, align 8, !dbg !3994, !tbaa !3832
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1045, metadata !2664), !dbg !3994
  %cmp = icmp eq %struct._object* %1, null, !dbg !3996
  br i1 %cmp, label %if.end.4, label %do.body.1, !dbg !3997

do.body.1:                                        ; preds = %entry
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1047, metadata !2664), !dbg !3998
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !4000
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !4000, !tbaa !2694
  %dec = add i64 %2, -1, !dbg !4000
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4000, !tbaa !2694
  %cmp2 = icmp eq i64 %dec, 0, !dbg !4000
  br i1 %cmp2, label %if.else, label %if.end.4, !dbg !4002

if.else:                                          ; preds = %do.body.1
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !4003
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4003, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 4, !dbg !4003
  %4 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4003, !tbaa !2717
  tail call void %4(%struct._object* %1) #1, !dbg !4003
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %do.body.1, %entry
  %it = getelementptr inbounds %struct.takewhileobject, %struct.takewhileobject* %lz, i64 0, i32 2, !dbg !4005
  %5 = load %struct._object*, %struct._object** %it, align 8, !dbg !4005, !tbaa !3845
  tail call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !1050, metadata !2664), !dbg !4005
  %cmp9 = icmp eq %struct._object* %5, null, !dbg !4007
  br i1 %cmp9, label %if.end.23, label %do.body.11, !dbg !4008

do.body.11:                                       ; preds = %if.end.4
  tail call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !1052, metadata !2664), !dbg !4009
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 0, !dbg !4011
  %6 = load i64, i64* %ob_refcnt13, align 8, !dbg !4011, !tbaa !2694
  %dec14 = add i64 %6, -1, !dbg !4011
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !4011, !tbaa !2694
  %cmp15 = icmp eq i64 %dec14, 0, !dbg !4011
  br i1 %cmp15, label %if.else.17, label %if.end.23, !dbg !4013

if.else.17:                                       ; preds = %do.body.11
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 1, !dbg !4014
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !4014, !tbaa !2667
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i64 0, i32 4, !dbg !4014
  %8 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !4014, !tbaa !2717
  tail call void %8(%struct._object* %5) #1, !dbg !4014
  br label %if.end.23

if.end.23:                                        ; preds = %if.else.17, %do.body.11, %if.end.4
  %ob_type26 = getelementptr inbounds %struct.takewhileobject, %struct.takewhileobject* %lz, i64 0, i32 0, i32 1, !dbg !4016
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type26, align 8, !dbg !4016, !tbaa !2667
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i64 0, i32 38, !dbg !4017
  %10 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !4017, !tbaa !2744
  tail call void %10(i8* %0) #1, !dbg !4016
  ret void, !dbg !4018
}

; Function Attrs: nounwind uwtable
define internal i32 @takewhile_traverse(%struct.takewhileobject* nocapture readonly %lz, i32 (%struct._object*, i8*)* nocapture %visit, i8* %arg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.takewhileobject* %lz, i64 0, metadata !1059, metadata !2664), !dbg !4019
  tail call void @llvm.dbg.value(metadata i32 (%struct._object*, i8*)* %visit, i64 0, metadata !1060, metadata !2664), !dbg !4020
  tail call void @llvm.dbg.value(metadata i8* %arg, i64 0, metadata !1061, metadata !2664), !dbg !4021
  %it = getelementptr inbounds %struct.takewhileobject, %struct.takewhileobject* %lz, i64 0, i32 2, !dbg !4022
  %0 = load %struct._object*, %struct._object** %it, align 8, !dbg !4022, !tbaa !3845
  %tobool = icmp eq %struct._object* %0, null, !dbg !4022
  br i1 %tobool, label %do.body.5, label %if.then, !dbg !4024

if.then:                                          ; preds = %entry
  %call = tail call i32 %visit(%struct._object* %0, i8* %arg) #1, !dbg !4025
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !1062, metadata !2664), !dbg !4025
  %tobool2 = icmp eq i32 %call, 0, !dbg !4027
  br i1 %tobool2, label %do.body.5, label %return

do.body.5:                                        ; preds = %entry, %if.then
  %func = getelementptr inbounds %struct.takewhileobject, %struct.takewhileobject* %lz, i64 0, i32 1, !dbg !4029
  %1 = load %struct._object*, %struct._object** %func, align 8, !dbg !4029, !tbaa !3832
  %tobool6 = icmp eq %struct._object* %1, null, !dbg !4029
  br i1 %tobool6, label %do.end.18, label %if.then.7, !dbg !4031

if.then.7:                                        ; preds = %do.body.5
  %call10 = tail call i32 %visit(%struct._object* %1, i8* %arg) #1, !dbg !4032
  tail call void @llvm.dbg.value(metadata i32 %call10, i64 0, metadata !1066, metadata !2664), !dbg !4032
  %tobool11 = icmp eq i32 %call10, 0, !dbg !4034
  br i1 %tobool11, label %do.end.18, label %return

do.end.18:                                        ; preds = %do.body.5, %if.then.7
  br label %return, !dbg !4036

return:                                           ; preds = %if.then.7, %if.then, %do.end.18
  %retval.3 = phi i32 [ 0, %do.end.18 ], [ %call10, %if.then.7 ], [ %call, %if.then ]
  ret i32 %retval.3, !dbg !4037
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @takewhile_next(%struct.takewhileobject* nocapture %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.takewhileobject* %lz, i64 0, metadata !1074, metadata !2664), !dbg !4038
  %it1 = getelementptr inbounds %struct.takewhileobject, %struct.takewhileobject* %lz, i64 0, i32 2, !dbg !4039
  %0 = load %struct._object*, %struct._object** %it1, align 8, !dbg !4039, !tbaa !3845
  tail call void @llvm.dbg.value(metadata %struct._object* %0, i64 0, metadata !1077, metadata !2664), !dbg !4040
  %stop = getelementptr inbounds %struct.takewhileobject, %struct.takewhileobject* %lz, i64 0, i32 3, !dbg !4041
  %1 = load i64, i64* %stop, align 8, !dbg !4041, !tbaa !3893
  %cmp = icmp eq i64 %1, 1, !dbg !4043
  br i1 %cmp, label %cleanup, label %if.end, !dbg !4044

if.end:                                           ; preds = %entry
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i64 0, i32 1, !dbg !4045
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4045, !tbaa !2667
  %tp_iternext = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i64 0, i32 26, !dbg !4046
  %3 = load %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)** %tp_iternext, align 8, !dbg !4046, !tbaa !3882
  %call = tail call %struct._object* %3(%struct._object* %0) #1, !dbg !4047
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1075, metadata !2664), !dbg !4048
  %cmp2 = icmp eq %struct._object* %call, null, !dbg !4049
  br i1 %cmp2, label %cleanup, label %if.end.4, !dbg !4051

if.end.4:                                         ; preds = %if.end
  %func = getelementptr inbounds %struct.takewhileobject, %struct.takewhileobject* %lz, i64 0, i32 1, !dbg !4052
  %4 = load %struct._object*, %struct._object** %func, align 8, !dbg !4052, !tbaa !3832
  %call5 = tail call %struct._object* (%struct._object*, ...) @PyObject_CallFunctionObjArgs(%struct._object* %4, %struct._object* %call, i8* null) #1, !dbg !4053
  tail call void @llvm.dbg.value(metadata %struct._object* %call5, i64 0, metadata !1076, metadata !2664), !dbg !4054
  %cmp6 = icmp eq %struct._object* %call5, null, !dbg !4055
  br i1 %cmp6, label %do.body, label %if.end.12, !dbg !4056

do.body:                                          ; preds = %if.end.4
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1079, metadata !2664), !dbg !4057
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 0, !dbg !4059
  %5 = load i64, i64* %ob_refcnt, align 8, !dbg !4059, !tbaa !2694
  %dec = add i64 %5, -1, !dbg !4059
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4059, !tbaa !2694
  %cmp8 = icmp eq i64 %dec, 0, !dbg !4059
  br i1 %cmp8, label %if.else, label %cleanup, !dbg !4061

if.else:                                          ; preds = %do.body
  %ob_type10 = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 1, !dbg !4062
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type10, align 8, !dbg !4062, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i64 0, i32 4, !dbg !4062
  %7 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4062, !tbaa !2717
  tail call void %7(%struct._object* %call) #1, !dbg !4062
  br label %cleanup

if.end.12:                                        ; preds = %if.end.4
  %call13 = tail call i32 @PyObject_IsTrue(%struct._object* %call5) #1, !dbg !4064
  tail call void @llvm.dbg.value(metadata %struct._object* %call5, i64 0, metadata !1083, metadata !2664), !dbg !4065
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %call5, i64 0, i32 0, !dbg !4067
  %8 = load i64, i64* %ob_refcnt16, align 8, !dbg !4067, !tbaa !2694
  %dec17 = add i64 %8, -1, !dbg !4067
  store i64 %dec17, i64* %ob_refcnt16, align 8, !dbg !4067, !tbaa !2694
  %cmp18 = icmp eq i64 %dec17, 0, !dbg !4067
  br i1 %cmp18, label %if.else.21, label %if.end.24, !dbg !4069

if.else.21:                                       ; preds = %if.end.12
  %ob_type22 = getelementptr inbounds %struct._object, %struct._object* %call5, i64 0, i32 1, !dbg !4070
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type22, align 8, !dbg !4070, !tbaa !2667
  %tp_dealloc23 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i64 0, i32 4, !dbg !4070
  %10 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc23, align 8, !dbg !4070, !tbaa !2717
  tail call void %10(%struct._object* %call5) #1, !dbg !4070
  br label %if.end.24

if.end.24:                                        ; preds = %if.end.12, %if.else.21
  %cmp27 = icmp eq i32 %call13, 1, !dbg !4072
  br i1 %cmp27, label %cleanup, label %do.body.31, !dbg !4074

do.body.31:                                       ; preds = %if.end.24
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1085, metadata !2664), !dbg !4075
  %ob_refcnt33 = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 0, !dbg !4077
  %11 = load i64, i64* %ob_refcnt33, align 8, !dbg !4077, !tbaa !2694
  %dec34 = add i64 %11, -1, !dbg !4077
  store i64 %dec34, i64* %ob_refcnt33, align 8, !dbg !4077, !tbaa !2694
  %cmp35 = icmp eq i64 %dec34, 0, !dbg !4077
  br i1 %cmp35, label %if.else.38, label %if.end.41, !dbg !4079

if.else.38:                                       ; preds = %do.body.31
  %ob_type39 = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 1, !dbg !4080
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type39, align 8, !dbg !4080, !tbaa !2667
  %tp_dealloc40 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i64 0, i32 4, !dbg !4080
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc40, align 8, !dbg !4080, !tbaa !2717
  tail call void %13(%struct._object* %call) #1, !dbg !4080
  br label %if.end.41

if.end.41:                                        ; preds = %do.body.31, %if.else.38
  %cmp44 = icmp eq i32 %call13, 0, !dbg !4082
  br i1 %cmp44, label %if.then.46, label %cleanup, !dbg !4084

if.then.46:                                       ; preds = %if.end.41
  store i64 1, i64* %stop, align 8, !dbg !4085, !tbaa !3893
  br label %cleanup, !dbg !4086

cleanup:                                          ; preds = %if.end.41, %if.then.46, %if.end.24, %if.else, %do.body, %if.end, %entry
  %retval.0 = phi %struct._object* [ null, %entry ], [ null, %if.end ], [ null, %do.body ], [ null, %if.else ], [ %call, %if.end.24 ], [ null, %if.then.46 ], [ null, %if.end.41 ]
  ret %struct._object* %retval.0, !dbg !4087
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @takewhile_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %func = alloca %struct._object*, align 8
  %seq = alloca %struct._object*, align 8
  tail call void @llvm.dbg.value(metadata %struct._typeobject* %type, i64 0, metadata !1099, metadata !2664), !dbg !4088
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1100, metadata !2664), !dbg !4089
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !1101, metadata !2664), !dbg !4090
  %0 = bitcast %struct._object** %func to i8*, !dbg !4091
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4091
  %1 = bitcast %struct._object** %seq to i8*, !dbg !4091
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !4091
  %cmp = icmp eq %struct._typeobject* %type, @takewhile_type, !dbg !4092
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4094

land.lhs.true:                                    ; preds = %entry
  %call = tail call i32 @_PyArg_NoKeywords(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.28, i64 0, i64 0), %struct._object* %kwds) #1, !dbg !4095
  %tobool = icmp eq i32 %call, 0, !dbg !4095
  br i1 %tobool, label %cleanup, label %if.end, !dbg !4096

if.end:                                           ; preds = %land.lhs.true, %entry
  tail call void @llvm.dbg.value(metadata %struct._object** %func, i64 0, metadata !1102, metadata !2664), !dbg !4097
  tail call void @llvm.dbg.value(metadata %struct._object** %seq, i64 0, metadata !1103, metadata !2664), !dbg !4098
  %call1 = call i32 (%struct._object*, i8*, i64, i64, ...) @PyArg_UnpackTuple(%struct._object* %args, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.29, i64 0, i64 0), i64 2, i64 2, %struct._object** nonnull %func, %struct._object** nonnull %seq) #1, !dbg !4099
  %tobool2 = icmp eq i32 %call1, 0, !dbg !4099
  br i1 %tobool2, label %cleanup, label %if.end.4, !dbg !4101

if.end.4:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct._object** %seq, i64 0, metadata !1103, metadata !2664), !dbg !4098
  %2 = load %struct._object*, %struct._object** %seq, align 8, !dbg !4102, !tbaa !2681
  %call5 = call %struct._object* @PyObject_GetIter(%struct._object* %2) #1, !dbg !4103
  call void @llvm.dbg.value(metadata %struct._object* %call5, i64 0, metadata !1104, metadata !2664), !dbg !4104
  %cmp6 = icmp eq %struct._object* %call5, null, !dbg !4105
  br i1 %cmp6, label %cleanup, label %if.end.8, !dbg !4107

if.end.8:                                         ; preds = %if.end.4
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %type, i64 0, i32 36, !dbg !4108
  %3 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !4108, !tbaa !2835
  %call9 = call %struct._object* %3(%struct._typeobject* %type, i64 0) #1, !dbg !4109
  %cmp10 = icmp eq %struct._object* %call9, null, !dbg !4110
  br i1 %cmp10, label %do.body, label %if.end.15, !dbg !4111

do.body:                                          ; preds = %if.end.8
  call void @llvm.dbg.value(metadata %struct._object* %call5, i64 0, metadata !1106, metadata !2664), !dbg !4112
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call5, i64 0, i32 0, !dbg !4114
  %4 = load i64, i64* %ob_refcnt, align 8, !dbg !4114, !tbaa !2694
  %dec = add i64 %4, -1, !dbg !4114
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4114, !tbaa !2694
  %cmp12 = icmp eq i64 %dec, 0, !dbg !4114
  br i1 %cmp12, label %if.else, label %cleanup, !dbg !4116

if.else:                                          ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call5, i64 0, i32 1, !dbg !4117
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4117, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i64 0, i32 4, !dbg !4117
  %6 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4117, !tbaa !2717
  call void %6(%struct._object* %call5) #1, !dbg !4117
  br label %cleanup

if.end.15:                                        ; preds = %if.end.8
  call void @llvm.dbg.value(metadata %struct._object** %func, i64 0, metadata !1102, metadata !2664), !dbg !4097
  %7 = load %struct._object*, %struct._object** %func, align 8, !dbg !4119, !tbaa !2681
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %7, i64 0, i32 0, !dbg !4119
  %8 = load i64, i64* %ob_refcnt16, align 8, !dbg !4119, !tbaa !2694
  %inc = add i64 %8, 1, !dbg !4119
  store i64 %inc, i64* %ob_refcnt16, align 8, !dbg !4119, !tbaa !2694
  call void @llvm.dbg.value(metadata %struct._object** %func, i64 0, metadata !1102, metadata !2664), !dbg !4097
  %9 = ptrtoint %struct._object* %7 to i64, !dbg !4120
  %10 = getelementptr inbounds %struct._object, %struct._object* %call9, i64 1, i32 0, !dbg !4121
  store i64 %9, i64* %10, align 8, !dbg !4121, !tbaa !3832
  %it18 = getelementptr inbounds %struct._object, %struct._object* %call9, i64 1, i32 1, !dbg !4122
  %11 = bitcast %struct._typeobject** %it18 to %struct._object**, !dbg !4122
  store %struct._object* %call5, %struct._object** %11, align 8, !dbg !4123, !tbaa !3845
  %12 = getelementptr inbounds %struct._object, %struct._object* %call9, i64 2, i32 0, !dbg !4124
  store i64 0, i64* %12, align 8, !dbg !4125, !tbaa !3893
  br label %cleanup, !dbg !4126

cleanup:                                          ; preds = %if.else, %do.body, %if.end.4, %if.end, %land.lhs.true, %if.end.15
  %retval.0 = phi %struct._object* [ %call9, %if.end.15 ], [ null, %land.lhs.true ], [ null, %if.end ], [ null, %if.end.4 ], [ null, %do.body ], [ null, %if.else ]
  call void @llvm.lifetime.end(i64 8, i8* %1) #1, !dbg !4127
  call void @llvm.lifetime.end(i64 8, i8* %0) #1, !dbg !4127
  ret %struct._object* %retval.0, !dbg !4127
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @takewhile_reduce(%struct.takewhileobject* nocapture readonly %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.takewhileobject* %lz, i64 0, metadata !1089, metadata !2664), !dbg !4128
  %ob_type = getelementptr inbounds %struct.takewhileobject, %struct.takewhileobject* %lz, i64 0, i32 0, i32 1, !dbg !4129
  %0 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4129, !tbaa !2667
  %func = getelementptr inbounds %struct.takewhileobject, %struct.takewhileobject* %lz, i64 0, i32 1, !dbg !4130
  %1 = load %struct._object*, %struct._object** %func, align 8, !dbg !4130, !tbaa !3832
  %it = getelementptr inbounds %struct.takewhileobject, %struct.takewhileobject* %lz, i64 0, i32 2, !dbg !4131
  %2 = load %struct._object*, %struct._object** %it, align 8, !dbg !4131, !tbaa !3845
  %stop = getelementptr inbounds %struct.takewhileobject, %struct.takewhileobject* %lz, i64 0, i32 3, !dbg !4132
  %3 = load i64, i64* %stop, align 8, !dbg !4132, !tbaa !3893
  %call = tail call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i64 0, i64 0), %struct._typeobject* %0, %struct._object* %1, %struct._object* %2, i64 %3) #1, !dbg !4133
  ret %struct._object* %call, !dbg !4134
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @takewhile_reduce_setstate(%struct.takewhileobject* nocapture %lz, %struct._object* %state) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.takewhileobject* %lz, i64 0, metadata !1094, metadata !2664), !dbg !4135
  tail call void @llvm.dbg.value(metadata %struct._object* %state, i64 0, metadata !1095, metadata !2664), !dbg !4136
  %call = tail call i32 @PyObject_IsTrue(%struct._object* %state) #1, !dbg !4137
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !1096, metadata !2664), !dbg !4138
  %cmp = icmp slt i32 %call, 0, !dbg !4139
  br i1 %cmp, label %cleanup, label %if.end, !dbg !4141

if.end:                                           ; preds = %entry
  %conv = sext i32 %call to i64, !dbg !4142
  %stop1 = getelementptr inbounds %struct.takewhileobject, %struct.takewhileobject* %lz, i64 0, i32 3, !dbg !4143
  store i64 %conv, i64* %stop1, align 8, !dbg !4144, !tbaa !3893
  %0 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !4145, !tbaa !2694
  %inc = add i64 %0, 1, !dbg !4145
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !4145, !tbaa !2694
  br label %cleanup, !dbg !4145

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct._object* [ @_Py_NoneStruct, %if.end ], [ null, %entry ]
  ret %struct._object* %retval.0, !dbg !4146
}

; Function Attrs: nounwind uwtable
define internal void @islice_dealloc(%struct.isliceobject* %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.isliceobject* %lz, i64 0, metadata !1114, metadata !2664), !dbg !4147
  %0 = bitcast %struct.isliceobject* %lz to i8*, !dbg !4148
  tail call void @PyObject_GC_UnTrack(i8* %0) #1, !dbg !4149
  %it = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %lz, i64 0, i32 1, !dbg !4150
  %1 = load %struct._object*, %struct._object** %it, align 8, !dbg !4150, !tbaa !4152
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1115, metadata !2664), !dbg !4150
  %cmp = icmp eq %struct._object* %1, null, !dbg !4154
  br i1 %cmp, label %if.end.4, label %do.body.1, !dbg !4155

do.body.1:                                        ; preds = %entry
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1117, metadata !2664), !dbg !4156
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !4158
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !4158, !tbaa !2694
  %dec = add i64 %2, -1, !dbg !4158
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4158, !tbaa !2694
  %cmp2 = icmp eq i64 %dec, 0, !dbg !4158
  br i1 %cmp2, label %if.else, label %if.end.4, !dbg !4160

if.else:                                          ; preds = %do.body.1
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !4161
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4161, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 4, !dbg !4161
  %4 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4161, !tbaa !2717
  tail call void %4(%struct._object* %1) #1, !dbg !4161
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %do.body.1, %entry
  %ob_type7 = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %lz, i64 0, i32 0, i32 1, !dbg !4163
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type7, align 8, !dbg !4163, !tbaa !2667
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i64 0, i32 38, !dbg !4164
  %6 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !4164, !tbaa !2744
  tail call void %6(i8* %0) #1, !dbg !4163
  ret void, !dbg !4165
}

; Function Attrs: nounwind uwtable
define internal i32 @islice_traverse(%struct.isliceobject* nocapture readonly %lz, i32 (%struct._object*, i8*)* nocapture %visit, i8* %arg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.isliceobject* %lz, i64 0, metadata !1124, metadata !2664), !dbg !4166
  tail call void @llvm.dbg.value(metadata i32 (%struct._object*, i8*)* %visit, i64 0, metadata !1125, metadata !2664), !dbg !4167
  tail call void @llvm.dbg.value(metadata i8* %arg, i64 0, metadata !1126, metadata !2664), !dbg !4168
  %it = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %lz, i64 0, i32 1, !dbg !4169
  %0 = load %struct._object*, %struct._object** %it, align 8, !dbg !4169, !tbaa !4152
  %tobool = icmp eq %struct._object* %0, null, !dbg !4169
  br i1 %tobool, label %do.end, label %if.then, !dbg !4171

if.then:                                          ; preds = %entry
  %call = tail call i32 %visit(%struct._object* %0, i8* %arg) #1, !dbg !4172
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !1127, metadata !2664), !dbg !4172
  %tobool2 = icmp eq i32 %call, 0, !dbg !4174
  br i1 %tobool2, label %do.end, label %return

do.end:                                           ; preds = %entry, %if.then
  br label %return, !dbg !4176

return:                                           ; preds = %if.then, %do.end
  %retval.1 = phi i32 [ 0, %do.end ], [ %call, %if.then ]
  ret i32 %retval.1, !dbg !4177
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @islice_next(%struct.isliceobject* nocapture %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.isliceobject* %lz, i64 0, metadata !1135, metadata !2664), !dbg !4178
  %it1 = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %lz, i64 0, i32 1, !dbg !4179
  %0 = load %struct._object*, %struct._object** %it1, align 8, !dbg !4179, !tbaa !4152
  tail call void @llvm.dbg.value(metadata %struct._object* %0, i64 0, metadata !1137, metadata !2664), !dbg !4180
  %stop2 = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %lz, i64 0, i32 3, !dbg !4181
  %1 = load i64, i64* %stop2, align 8, !dbg !4181, !tbaa !4182
  tail call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !1138, metadata !2664), !dbg !4183
  %cmp = icmp eq %struct._object* %0, null, !dbg !4184
  br i1 %cmp, label %cleanup, label %if.end, !dbg !4186

if.end:                                           ; preds = %entry
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i64 0, i32 1, !dbg !4187
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4187, !tbaa !2667
  %tp_iternext = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i64 0, i32 26, !dbg !4188
  %3 = load %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)** %tp_iternext, align 8, !dbg !4188, !tbaa !3882
  tail call void @llvm.dbg.value(metadata %struct._object* (%struct._object*)* %3, i64 0, metadata !1140, metadata !2664), !dbg !4189
  %cnt = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %lz, i64 0, i32 5, !dbg !4190
  %4 = load i64, i64* %cnt, align 8, !dbg !4190, !tbaa !4191
  %next = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %lz, i64 0, i32 2, !dbg !4192
  %5 = load i64, i64* %next, align 8, !dbg !4192, !tbaa !4193
  %cmp3.101 = icmp slt i64 %4, %5, !dbg !4194
  br i1 %cmp3.101, label %while.body.preheader, label %while.end, !dbg !4195

while.body.preheader:                             ; preds = %if.end
  br label %while.body, !dbg !4196

while.body:                                       ; preds = %while.body.preheader, %if.end.10
  %call = tail call %struct._object* %3(%struct._object* %0) #1, !dbg !4196
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1136, metadata !2664), !dbg !4197
  %cmp4 = icmp eq %struct._object* %call, null, !dbg !4198
  br i1 %cmp4, label %do.body.34.loopexit, label %do.body, !dbg !4200

do.body:                                          ; preds = %while.body
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1141, metadata !2664), !dbg !4201
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 0, !dbg !4203
  %6 = load i64, i64* %ob_refcnt, align 8, !dbg !4203, !tbaa !2694
  %dec = add i64 %6, -1, !dbg !4203
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4203, !tbaa !2694
  %cmp7 = icmp eq i64 %dec, 0, !dbg !4203
  br i1 %cmp7, label %if.else, label %if.end.10, !dbg !4205

if.else:                                          ; preds = %do.body
  %ob_type9 = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 1, !dbg !4206
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type9, align 8, !dbg !4206, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i64 0, i32 4, !dbg !4206
  %8 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4206, !tbaa !2717
  tail call void %8(%struct._object* %call) #1, !dbg !4206
  br label %if.end.10

if.end.10:                                        ; preds = %do.body, %if.else
  %9 = load i64, i64* %cnt, align 8, !dbg !4208, !tbaa !4191
  %inc = add i64 %9, 1, !dbg !4208
  store i64 %inc, i64* %cnt, align 8, !dbg !4208, !tbaa !4191
  %10 = load i64, i64* %next, align 8, !dbg !4192, !tbaa !4193
  %cmp3 = icmp slt i64 %inc, %10, !dbg !4194
  br i1 %cmp3, label %while.body, label %while.end.loopexit, !dbg !4195

while.end.loopexit:                               ; preds = %if.end.10
  %inc.lcssa = phi i64 [ %inc, %if.end.10 ]
  br label %while.end, !dbg !4209

while.end:                                        ; preds = %while.end.loopexit, %if.end
  %.lcssa = phi i64 [ %4, %if.end ], [ %inc.lcssa, %while.end.loopexit ]
  %cmp12 = icmp ne i64 %1, -1, !dbg !4209
  %cmp12.not = xor i1 %cmp12, true, !dbg !4211
  %cmp14 = icmp slt i64 %.lcssa, %1, !dbg !4212
  %or.cond = or i1 %cmp14, %cmp12.not, !dbg !4211
  br i1 %or.cond, label %if.end.16, label %do.body.34, !dbg !4211

if.end.16:                                        ; preds = %while.end
  %call17 = tail call %struct._object* %3(%struct._object* %0) #1, !dbg !4213
  tail call void @llvm.dbg.value(metadata %struct._object* %call17, i64 0, metadata !1136, metadata !2664), !dbg !4197
  %cmp18 = icmp eq %struct._object* %call17, null, !dbg !4214
  br i1 %cmp18, label %do.body.34, label %if.end.20, !dbg !4216

if.end.20:                                        ; preds = %if.end.16
  %11 = load i64, i64* %cnt, align 8, !dbg !4217, !tbaa !4191
  %inc22 = add i64 %11, 1, !dbg !4217
  store i64 %inc22, i64* %cnt, align 8, !dbg !4217, !tbaa !4191
  %12 = load i64, i64* %next, align 8, !dbg !4218, !tbaa !4193
  tail call void @llvm.dbg.value(metadata i64 %12, i64 0, metadata !1139, metadata !2664), !dbg !4219
  %step = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %lz, i64 0, i32 4, !dbg !4220
  %13 = load i64, i64* %step, align 8, !dbg !4220, !tbaa !4221
  %add = add i64 %13, %12, !dbg !4222
  %cmp26 = icmp slt i64 %add, %12, !dbg !4223
  %cmp30 = icmp sgt i64 %add, %1
  %or.cond96 = and i1 %cmp12, %cmp30, !dbg !4225
  %or.cond97 = or i1 %cmp26, %or.cond96, !dbg !4226
  %.add = select i1 %or.cond97, i64 %1, i64 %add, !dbg !4226
  store i64 %.add, i64* %next, align 8, !dbg !4227, !tbaa !4193
  ret %struct._object* %call17, !dbg !4226

do.body.34.loopexit:                              ; preds = %while.body
  br label %do.body.34, !dbg !4228

do.body.34:                                       ; preds = %do.body.34.loopexit, %while.end, %if.end.16
  %14 = load %struct._object*, %struct._object** %it1, align 8, !dbg !4228, !tbaa !4152
  tail call void @llvm.dbg.value(metadata %struct._object* %14, i64 0, metadata !1144, metadata !2664), !dbg !4228
  %cmp36 = icmp eq %struct._object* %14, null, !dbg !4230
  br i1 %cmp36, label %cleanup, label %if.then.37, !dbg !4231

if.then.37:                                       ; preds = %do.body.34
  store %struct._object* null, %struct._object** %it1, align 8, !dbg !4232, !tbaa !4152
  tail call void @llvm.dbg.value(metadata %struct._object* %14, i64 0, metadata !1146, metadata !2664), !dbg !4234
  %ob_refcnt41 = getelementptr inbounds %struct._object, %struct._object* %14, i64 0, i32 0, !dbg !4236
  %15 = load i64, i64* %ob_refcnt41, align 8, !dbg !4236, !tbaa !2694
  %dec42 = add i64 %15, -1, !dbg !4236
  store i64 %dec42, i64* %ob_refcnt41, align 8, !dbg !4236, !tbaa !2694
  %cmp43 = icmp eq i64 %dec42, 0, !dbg !4236
  br i1 %cmp43, label %if.else.45, label %cleanup, !dbg !4238

if.else.45:                                       ; preds = %if.then.37
  %ob_type46 = getelementptr inbounds %struct._object, %struct._object* %14, i64 0, i32 1, !dbg !4239
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type46, align 8, !dbg !4239, !tbaa !2667
  %tp_dealloc47 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %16, i64 0, i32 4, !dbg !4239
  %17 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc47, align 8, !dbg !4239, !tbaa !2717
  tail call void %17(%struct._object* %14) #1, !dbg !4239
  br label %cleanup

cleanup:                                          ; preds = %do.body.34, %if.then.37, %if.else.45, %entry
  ret %struct._object* null, !dbg !4241
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @islice_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %seq = alloca %struct._object*, align 8
  %a1 = alloca %struct._object*, align 8
  %a2 = alloca %struct._object*, align 8
  %a3 = alloca %struct._object*, align 8
  tail call void @llvm.dbg.value(metadata %struct._typeobject* %type, i64 0, metadata !1169, metadata !2664), !dbg !4242
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1170, metadata !2664), !dbg !4243
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !1171, metadata !2664), !dbg !4244
  %0 = bitcast %struct._object** %seq to i8*, !dbg !4245
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4245
  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !1173, metadata !2664), !dbg !4246
  tail call void @llvm.dbg.value(metadata i64 -1, i64 0, metadata !1174, metadata !2664), !dbg !4247
  tail call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !1175, metadata !2664), !dbg !4248
  %1 = bitcast %struct._object** %a1 to i8*, !dbg !4249
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !4249
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1177, metadata !2664), !dbg !4250
  store %struct._object* null, %struct._object** %a1, align 8, !dbg !4250, !tbaa !2681
  %2 = bitcast %struct._object** %a2 to i8*, !dbg !4249
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !4249
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1178, metadata !2664), !dbg !4251
  store %struct._object* null, %struct._object** %a2, align 8, !dbg !4251, !tbaa !2681
  %3 = bitcast %struct._object** %a3 to i8*, !dbg !4249
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !4249
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1179, metadata !2664), !dbg !4252
  store %struct._object* null, %struct._object** %a3, align 8, !dbg !4252, !tbaa !2681
  %cmp = icmp eq %struct._typeobject* %type, @islice_type, !dbg !4253
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4255

land.lhs.true:                                    ; preds = %entry
  %call = tail call i32 @_PyArg_NoKeywords(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33, i64 0, i64 0), %struct._object* %kwds) #1, !dbg !4256
  %tobool = icmp eq i32 %call, 0, !dbg !4256
  br i1 %tobool, label %cleanup, label %if.end, !dbg !4257

if.end:                                           ; preds = %land.lhs.true, %entry
  tail call void @llvm.dbg.value(metadata %struct._object** %seq, i64 0, metadata !1172, metadata !2664), !dbg !4258
  tail call void @llvm.dbg.value(metadata %struct._object** %a1, i64 0, metadata !1177, metadata !2664), !dbg !4250
  tail call void @llvm.dbg.value(metadata %struct._object** %a2, i64 0, metadata !1178, metadata !2664), !dbg !4251
  tail call void @llvm.dbg.value(metadata %struct._object** %a3, i64 0, metadata !1179, metadata !2664), !dbg !4252
  %call1 = call i32 (%struct._object*, i8*, i64, i64, ...) @PyArg_UnpackTuple(%struct._object* %args, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.34, i64 0, i64 0), i64 2, i64 4, %struct._object** nonnull %seq, %struct._object** nonnull %a1, %struct._object** nonnull %a2, %struct._object** nonnull %a3) #1, !dbg !4259
  %tobool2 = icmp eq i32 %call1, 0, !dbg !4259
  br i1 %tobool2, label %cleanup, label %if.end.4, !dbg !4261

if.end.4:                                         ; preds = %if.end
  %call5 = call i64 @PyTuple_Size(%struct._object* %args) #1, !dbg !4262
  call void @llvm.dbg.value(metadata i64 %call5, i64 0, metadata !1180, metadata !2664), !dbg !4263
  %cmp6 = icmp eq i64 %call5, 2, !dbg !4264
  call void @llvm.dbg.value(metadata %struct._object** %a1, i64 0, metadata !1177, metadata !2664), !dbg !4250
  %4 = load %struct._object*, %struct._object** %a1, align 8, !dbg !4266, !tbaa !2681
  %cmp8 = icmp ne %struct._object* %4, @_Py_NoneStruct, !dbg !4269
  br i1 %cmp6, label %if.then.7, label %if.else, !dbg !4270

if.then.7:                                        ; preds = %if.end.4
  br i1 %cmp8, label %if.then.9, label %if.end.40, !dbg !4271

if.then.9:                                        ; preds = %if.then.7
  %call10 = call i64 @PyLong_AsSsize_t(%struct._object* %4) #1, !dbg !4272
  call void @llvm.dbg.value(metadata i64 %call10, i64 0, metadata !1174, metadata !2664), !dbg !4247
  %cmp11 = icmp eq i64 %call10, -1, !dbg !4274
  br i1 %cmp11, label %if.then.12, label %if.end.40, !dbg !4276

if.then.12:                                       ; preds = %if.then.9
  %call13 = call %struct._object* @PyErr_Occurred() #1, !dbg !4277
  %tobool14 = icmp eq %struct._object* %call13, null, !dbg !4277
  br i1 %tobool14, label %if.end.16, label %if.then.15, !dbg !4280

if.then.15:                                       ; preds = %if.then.12
  call void @PyErr_Clear() #1, !dbg !4281
  br label %if.end.16, !dbg !4281

if.end.16:                                        ; preds = %if.then.12, %if.then.15
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4282, !tbaa !2681
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.35, i64 0, i64 0)) #1, !dbg !4283
  br label %cleanup, !dbg !4284

if.else:                                          ; preds = %if.end.4
  br i1 %cmp8, label %if.end.22, label %if.end.28, !dbg !4285

if.end.22:                                        ; preds = %if.else
  %call21 = call i64 @PyLong_AsSsize_t(%struct._object* %4) #1, !dbg !4287
  call void @llvm.dbg.value(metadata i64 %call21, i64 0, metadata !1173, metadata !2664), !dbg !4246
  %cmp23 = icmp eq i64 %call21, -1, !dbg !4289
  br i1 %cmp23, label %land.lhs.true.24, label %if.end.28, !dbg !4291

land.lhs.true.24:                                 ; preds = %if.end.22
  %call25 = call %struct._object* @PyErr_Occurred() #1, !dbg !4292
  %tobool26 = icmp eq %struct._object* %call25, null, !dbg !4292
  br i1 %tobool26, label %if.end.28, label %if.then.27, !dbg !4294

if.then.27:                                       ; preds = %land.lhs.true.24
  call void @PyErr_Clear() #1, !dbg !4295
  br label %if.end.28, !dbg !4295

if.end.28:                                        ; preds = %if.else, %land.lhs.true.24, %if.then.27, %if.end.22
  %start.0113 = phi i64 [ -1, %land.lhs.true.24 ], [ -1, %if.then.27 ], [ %call21, %if.end.22 ], [ 0, %if.else ]
  call void @llvm.dbg.value(metadata %struct._object** %a2, i64 0, metadata !1178, metadata !2664), !dbg !4251
  %6 = load %struct._object*, %struct._object** %a2, align 8, !dbg !4296, !tbaa !2681
  %cmp29 = icmp eq %struct._object* %6, @_Py_NoneStruct, !dbg !4298
  br i1 %cmp29, label %if.end.40, label %if.then.30, !dbg !4299

if.then.30:                                       ; preds = %if.end.28
  %call31 = call i64 @PyLong_AsSsize_t(%struct._object* %6) #1, !dbg !4300
  call void @llvm.dbg.value(metadata i64 %call31, i64 0, metadata !1174, metadata !2664), !dbg !4247
  %cmp32 = icmp eq i64 %call31, -1, !dbg !4302
  br i1 %cmp32, label %if.then.33, label %if.end.40, !dbg !4304

if.then.33:                                       ; preds = %if.then.30
  %call34 = call %struct._object* @PyErr_Occurred() #1, !dbg !4305
  %tobool35 = icmp eq %struct._object* %call34, null, !dbg !4305
  br i1 %tobool35, label %if.end.37, label %if.then.36, !dbg !4308

if.then.36:                                       ; preds = %if.then.33
  call void @PyErr_Clear() #1, !dbg !4309
  br label %if.end.37, !dbg !4309

if.end.37:                                        ; preds = %if.then.33, %if.then.36
  %7 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4310, !tbaa !2681
  call void @PyErr_SetString(%struct._object* %7, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.35, i64 0, i64 0)) #1, !dbg !4311
  br label %cleanup, !dbg !4312

if.end.40:                                        ; preds = %if.end.28, %if.then.30, %if.then.7, %if.then.9
  %stop.0 = phi i64 [ %call10, %if.then.9 ], [ -1, %if.then.7 ], [ %call31, %if.then.30 ], [ -1, %if.end.28 ]
  %start.1 = phi i64 [ 0, %if.then.9 ], [ 0, %if.then.7 ], [ %start.0113, %if.then.30 ], [ %start.0113, %if.end.28 ]
  %cmp41 = icmp slt i64 %start.1, 0, !dbg !4313
  %cmp42 = icmp slt i64 %stop.0, -1, !dbg !4315
  %or.cond = or i1 %cmp42, %cmp41, !dbg !4316
  br i1 %or.cond, label %if.then.43, label %if.end.44, !dbg !4316

if.then.43:                                       ; preds = %if.end.40
  %8 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4317, !tbaa !2681
  call void @PyErr_SetString(%struct._object* %8, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.36, i64 0, i64 0)) #1, !dbg !4319
  br label %cleanup, !dbg !4320

if.end.44:                                        ; preds = %if.end.40
  call void @llvm.dbg.value(metadata %struct._object** %a3, i64 0, metadata !1179, metadata !2664), !dbg !4252
  %9 = load %struct._object*, %struct._object** %a3, align 8, !dbg !4321, !tbaa !2681
  %cmp45 = icmp eq %struct._object* %9, null, !dbg !4323
  %cmp47 = icmp eq %struct._object* %9, @_Py_NoneStruct, !dbg !4324
  %or.cond120 = or i1 %cmp45, %cmp47, !dbg !4327
  br i1 %or.cond120, label %if.end.60, label %if.end.50, !dbg !4327

if.end.50:                                        ; preds = %if.end.44
  %call49 = call i64 @PyLong_AsSsize_t(%struct._object* %9) #1, !dbg !4328
  call void @llvm.dbg.value(metadata i64 %call49, i64 0, metadata !1175, metadata !2664), !dbg !4248
  %cmp51 = icmp eq i64 %call49, -1, !dbg !4329
  br i1 %cmp51, label %land.lhs.true.52, label %if.end.57, !dbg !4331

land.lhs.true.52:                                 ; preds = %if.end.50
  %call53 = call %struct._object* @PyErr_Occurred() #1, !dbg !4332
  %tobool54 = icmp eq %struct._object* %call53, null, !dbg !4332
  br i1 %tobool54, label %if.then.59, label %if.then.55, !dbg !4334

if.then.55:                                       ; preds = %land.lhs.true.52
  call void @PyErr_Clear() #1, !dbg !4335
  br label %if.then.59, !dbg !4335

if.end.57:                                        ; preds = %if.end.50
  %cmp58 = icmp slt i64 %call49, 1, !dbg !4336
  br i1 %cmp58, label %if.then.59, label %if.end.60, !dbg !4338

if.then.59:                                       ; preds = %land.lhs.true.52, %if.then.55, %if.end.57
  %10 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4339, !tbaa !2681
  call void @PyErr_SetString(%struct._object* %10, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.37, i64 0, i64 0)) #1, !dbg !4341
  br label %cleanup, !dbg !4342

if.end.60:                                        ; preds = %if.end.44, %if.end.57
  %step.1119 = phi i64 [ %call49, %if.end.57 ], [ 1, %if.end.44 ]
  call void @llvm.dbg.value(metadata %struct._object** %seq, i64 0, metadata !1172, metadata !2664), !dbg !4258
  %11 = load %struct._object*, %struct._object** %seq, align 8, !dbg !4343, !tbaa !2681
  %call61 = call %struct._object* @PyObject_GetIter(%struct._object* %11) #1, !dbg !4344
  call void @llvm.dbg.value(metadata %struct._object* %call61, i64 0, metadata !1176, metadata !2664), !dbg !4345
  %cmp62 = icmp eq %struct._object* %call61, null, !dbg !4346
  br i1 %cmp62, label %cleanup, label %if.end.64, !dbg !4348

if.end.64:                                        ; preds = %if.end.60
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %type, i64 0, i32 36, !dbg !4349
  %12 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !4349, !tbaa !2835
  %call65 = call %struct._object* %12(%struct._typeobject* %type, i64 0) #1, !dbg !4350
  %cmp66 = icmp eq %struct._object* %call65, null, !dbg !4351
  br i1 %cmp66, label %do.body, label %if.end.72, !dbg !4352

do.body:                                          ; preds = %if.end.64
  call void @llvm.dbg.value(metadata %struct._object* %call61, i64 0, metadata !1182, metadata !2664), !dbg !4353
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call61, i64 0, i32 0, !dbg !4355
  %13 = load i64, i64* %ob_refcnt, align 8, !dbg !4355, !tbaa !2694
  %dec = add i64 %13, -1, !dbg !4355
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4355, !tbaa !2694
  %cmp68 = icmp eq i64 %dec, 0, !dbg !4355
  br i1 %cmp68, label %if.else.70, label %cleanup, !dbg !4357

if.else.70:                                       ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call61, i64 0, i32 1, !dbg !4358
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4358, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i64 0, i32 4, !dbg !4358
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4358, !tbaa !2717
  call void %15(%struct._object* %call61) #1, !dbg !4358
  br label %cleanup

if.end.72:                                        ; preds = %if.end.64
  %it73 = getelementptr inbounds %struct._object, %struct._object* %call65, i64 1, !dbg !4360
  %16 = bitcast %struct._object* %it73 to %struct._object**, !dbg !4360
  store %struct._object* %call61, %struct._object** %16, align 8, !dbg !4361, !tbaa !4152
  %next = getelementptr inbounds %struct._object, %struct._object* %call65, i64 1, i32 1, !dbg !4362
  %17 = bitcast %struct._typeobject** %next to i64*, !dbg !4362
  store i64 %start.1, i64* %17, align 8, !dbg !4363, !tbaa !4193
  %18 = getelementptr inbounds %struct._object, %struct._object* %call65, i64 2, i32 0, !dbg !4364
  store i64 %stop.0, i64* %18, align 8, !dbg !4365, !tbaa !4182
  %step75 = getelementptr inbounds %struct._object, %struct._object* %call65, i64 2, i32 1, !dbg !4366
  %19 = bitcast %struct._typeobject** %step75 to i64*, !dbg !4366
  store i64 %step.1119, i64* %19, align 8, !dbg !4367, !tbaa !4221
  %20 = getelementptr inbounds %struct._object, %struct._object* %call65, i64 3, i32 0, !dbg !4368
  store i64 0, i64* %20, align 8, !dbg !4369, !tbaa !4191
  br label %cleanup, !dbg !4370

cleanup:                                          ; preds = %if.else.70, %do.body, %if.end.60, %if.end, %land.lhs.true, %if.end.72, %if.then.59, %if.then.43, %if.end.37, %if.end.16
  %retval.0 = phi %struct._object* [ null, %if.end.16 ], [ null, %if.then.43 ], [ null, %if.then.59 ], [ %call65, %if.end.72 ], [ null, %if.end.37 ], [ null, %land.lhs.true ], [ null, %if.end ], [ null, %if.end.60 ], [ null, %do.body ], [ null, %if.else.70 ]
  call void @llvm.lifetime.end(i64 8, i8* %3) #1, !dbg !4371
  call void @llvm.lifetime.end(i64 8, i8* %2) #1, !dbg !4371
  call void @llvm.lifetime.end(i64 8, i8* %1) #1, !dbg !4371
  call void @llvm.lifetime.end(i64 8, i8* %0) #1, !dbg !4371
  ret %struct._object* %retval.0, !dbg !4371
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @islice_reduce(%struct.isliceobject* nocapture readonly %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.isliceobject* %lz, i64 0, metadata !1152, metadata !2664), !dbg !4372
  %it = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %lz, i64 0, i32 1, !dbg !4373
  %0 = load %struct._object*, %struct._object** %it, align 8, !dbg !4373, !tbaa !4152
  %cmp = icmp eq %struct._object* %0, null, !dbg !4374
  br i1 %cmp, label %if.then, label %if.end.13, !dbg !4375

if.then:                                          ; preds = %entry
  %call = tail call %struct._object* @PyList_New(i64 0) #1, !dbg !4376
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1154, metadata !2664), !dbg !4377
  %cmp1 = icmp eq %struct._object* %call, null, !dbg !4378
  br i1 %cmp1, label %cleanup.28, label %if.end, !dbg !4380

if.end:                                           ; preds = %if.then
  %call3 = tail call %struct._object* @PyObject_GetIter(%struct._object* %call) #1, !dbg !4381
  tail call void @llvm.dbg.value(metadata %struct._object* %call3, i64 0, metadata !1157, metadata !2664), !dbg !4382
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1158, metadata !2664), !dbg !4383
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 0, !dbg !4385
  %1 = load i64, i64* %ob_refcnt, align 8, !dbg !4385, !tbaa !2694
  %dec = add i64 %1, -1, !dbg !4385
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4385, !tbaa !2694
  %cmp4 = icmp eq i64 %dec, 0, !dbg !4385
  br i1 %cmp4, label %if.else, label %if.end.6, !dbg !4387

if.else:                                          ; preds = %if.end
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 1, !dbg !4388
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4388, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i64 0, i32 4, !dbg !4388
  %3 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4388, !tbaa !2717
  tail call void %3(%struct._object* %call) #1, !dbg !4388
  br label %if.end.6

if.end.6:                                         ; preds = %if.end, %if.else
  %cmp7 = icmp eq %struct._object* %call3, null, !dbg !4390
  br i1 %cmp7, label %cleanup.28, label %if.end.9, !dbg !4392

if.end.9:                                         ; preds = %if.end.6
  %ob_type10 = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %lz, i64 0, i32 0, i32 1, !dbg !4393
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type10, align 8, !dbg !4393, !tbaa !2667
  %call11 = tail call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0), %struct._typeobject* %4, %struct._object* %call3, i32 0, i32 0) #1, !dbg !4394
  br label %cleanup.28, !dbg !4395

if.end.13:                                        ; preds = %entry
  %stop14 = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %lz, i64 0, i32 3, !dbg !4396
  %5 = load i64, i64* %stop14, align 8, !dbg !4396, !tbaa !4182
  %cmp15 = icmp eq i64 %5, -1, !dbg !4398
  br i1 %cmp15, label %if.then.16, label %if.else.18, !dbg !4399

if.then.16:                                       ; preds = %if.end.13
  tail call void @llvm.dbg.value(metadata %struct._object* @_Py_NoneStruct, i64 0, metadata !1153, metadata !2664), !dbg !4400
  %6 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !4401, !tbaa !2694
  %inc = add i64 %6, 1, !dbg !4401
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !4401, !tbaa !2694
  br label %if.end.24, !dbg !4403

if.else.18:                                       ; preds = %if.end.13
  %call20 = tail call %struct._object* @PyLong_FromSsize_t(i64 %5) #1, !dbg !4404
  tail call void @llvm.dbg.value(metadata %struct._object* %call20, i64 0, metadata !1153, metadata !2664), !dbg !4400
  %cmp21 = icmp eq %struct._object* %call20, null, !dbg !4406
  br i1 %cmp21, label %cleanup.28, label %if.else.18.if.end.24_crit_edge, !dbg !4408

if.else.18.if.end.24_crit_edge:                   ; preds = %if.else.18
  %.pre = load %struct._object*, %struct._object** %it, align 8, !dbg !4409, !tbaa !4152
  br label %if.end.24, !dbg !4408

if.end.24:                                        ; preds = %if.else.18.if.end.24_crit_edge, %if.then.16
  %7 = phi %struct._object* [ %0, %if.then.16 ], [ %.pre, %if.else.18.if.end.24_crit_edge ], !dbg !4409
  %stop.0 = phi %struct._object* [ @_Py_NoneStruct, %if.then.16 ], [ %call20, %if.else.18.if.end.24_crit_edge ]
  %ob_type25 = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %lz, i64 0, i32 0, i32 1, !dbg !4410
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type25, align 8, !dbg !4410, !tbaa !2667
  %next = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %lz, i64 0, i32 2, !dbg !4411
  %9 = load i64, i64* %next, align 8, !dbg !4411, !tbaa !4193
  %step = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %lz, i64 0, i32 4, !dbg !4412
  %10 = load i64, i64* %step, align 8, !dbg !4412, !tbaa !4221
  %cnt = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %lz, i64 0, i32 5, !dbg !4413
  %11 = load i64, i64* %cnt, align 8, !dbg !4413, !tbaa !4191
  %call27 = tail call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32, i64 0, i64 0), %struct._typeobject* %8, %struct._object* %7, i64 %9, %struct._object* %stop.0, i64 %10, i64 %11) #1, !dbg !4414
  br label %cleanup.28, !dbg !4415

cleanup.28:                                       ; preds = %if.else.18, %if.end.9, %if.then, %if.end.6, %if.end.24
  %retval.1 = phi %struct._object* [ %call27, %if.end.24 ], [ %call11, %if.end.9 ], [ null, %if.then ], [ null, %if.end.6 ], [ null, %if.else.18 ]
  ret %struct._object* %retval.1, !dbg !4416
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @islice_setstate(%struct.isliceobject* nocapture %lz, %struct._object* %state) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.isliceobject* %lz, i64 0, metadata !1164, metadata !2664), !dbg !4417
  tail call void @llvm.dbg.value(metadata %struct._object* %state, i64 0, metadata !1165, metadata !2664), !dbg !4418
  %call = tail call i64 @PyLong_AsSsize_t(%struct._object* %state) #1, !dbg !4419
  tail call void @llvm.dbg.value(metadata i64 %call, i64 0, metadata !1166, metadata !2664), !dbg !4420
  %cmp = icmp eq i64 %call, -1, !dbg !4421
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4423

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call %struct._object* @PyErr_Occurred() #1, !dbg !4424
  %tobool = icmp eq %struct._object* %call1, null, !dbg !4424
  br i1 %tobool, label %if.end, label %cleanup, !dbg !4426

if.end:                                           ; preds = %land.lhs.true, %entry
  %cnt2 = getelementptr inbounds %struct.isliceobject, %struct.isliceobject* %lz, i64 0, i32 5, !dbg !4427
  store i64 %call, i64* %cnt2, align 8, !dbg !4428, !tbaa !4191
  %0 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !4429, !tbaa !2694
  %inc = add i64 %0, 1, !dbg !4429
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !4429, !tbaa !2694
  br label %cleanup, !dbg !4429

cleanup:                                          ; preds = %land.lhs.true, %if.end
  %retval.0 = phi %struct._object* [ @_Py_NoneStruct, %if.end ], [ null, %land.lhs.true ]
  ret %struct._object* %retval.0, !dbg !4430
}

declare i64 @PyTuple_Size(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal void @starmap_dealloc(%struct.starmapobject* %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.starmapobject* %lz, i64 0, metadata !1190, metadata !2664), !dbg !4431
  %0 = bitcast %struct.starmapobject* %lz to i8*, !dbg !4432
  tail call void @PyObject_GC_UnTrack(i8* %0) #1, !dbg !4433
  %func = getelementptr inbounds %struct.starmapobject, %struct.starmapobject* %lz, i64 0, i32 1, !dbg !4434
  %1 = load %struct._object*, %struct._object** %func, align 8, !dbg !4434, !tbaa !4436
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1191, metadata !2664), !dbg !4434
  %cmp = icmp eq %struct._object* %1, null, !dbg !4438
  br i1 %cmp, label %if.end.4, label %do.body.1, !dbg !4439

do.body.1:                                        ; preds = %entry
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1193, metadata !2664), !dbg !4440
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !4442
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !4442, !tbaa !2694
  %dec = add i64 %2, -1, !dbg !4442
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4442, !tbaa !2694
  %cmp2 = icmp eq i64 %dec, 0, !dbg !4442
  br i1 %cmp2, label %if.else, label %if.end.4, !dbg !4444

if.else:                                          ; preds = %do.body.1
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !4445
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4445, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 4, !dbg !4445
  %4 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4445, !tbaa !2717
  tail call void %4(%struct._object* %1) #1, !dbg !4445
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %do.body.1, %entry
  %it = getelementptr inbounds %struct.starmapobject, %struct.starmapobject* %lz, i64 0, i32 2, !dbg !4447
  %5 = load %struct._object*, %struct._object** %it, align 8, !dbg !4447, !tbaa !4449
  tail call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !1196, metadata !2664), !dbg !4447
  %cmp9 = icmp eq %struct._object* %5, null, !dbg !4450
  br i1 %cmp9, label %if.end.23, label %do.body.11, !dbg !4451

do.body.11:                                       ; preds = %if.end.4
  tail call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !1198, metadata !2664), !dbg !4452
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 0, !dbg !4454
  %6 = load i64, i64* %ob_refcnt13, align 8, !dbg !4454, !tbaa !2694
  %dec14 = add i64 %6, -1, !dbg !4454
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !4454, !tbaa !2694
  %cmp15 = icmp eq i64 %dec14, 0, !dbg !4454
  br i1 %cmp15, label %if.else.17, label %if.end.23, !dbg !4456

if.else.17:                                       ; preds = %do.body.11
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 1, !dbg !4457
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !4457, !tbaa !2667
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i64 0, i32 4, !dbg !4457
  %8 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !4457, !tbaa !2717
  tail call void %8(%struct._object* %5) #1, !dbg !4457
  br label %if.end.23

if.end.23:                                        ; preds = %if.else.17, %do.body.11, %if.end.4
  %ob_type26 = getelementptr inbounds %struct.starmapobject, %struct.starmapobject* %lz, i64 0, i32 0, i32 1, !dbg !4459
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type26, align 8, !dbg !4459, !tbaa !2667
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i64 0, i32 38, !dbg !4460
  %10 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !4460, !tbaa !2744
  tail call void %10(i8* %0) #1, !dbg !4459
  ret void, !dbg !4461
}

; Function Attrs: nounwind uwtable
define internal i32 @starmap_traverse(%struct.starmapobject* nocapture readonly %lz, i32 (%struct._object*, i8*)* nocapture %visit, i8* %arg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.starmapobject* %lz, i64 0, metadata !1205, metadata !2664), !dbg !4462
  tail call void @llvm.dbg.value(metadata i32 (%struct._object*, i8*)* %visit, i64 0, metadata !1206, metadata !2664), !dbg !4463
  tail call void @llvm.dbg.value(metadata i8* %arg, i64 0, metadata !1207, metadata !2664), !dbg !4464
  %it = getelementptr inbounds %struct.starmapobject, %struct.starmapobject* %lz, i64 0, i32 2, !dbg !4465
  %0 = load %struct._object*, %struct._object** %it, align 8, !dbg !4465, !tbaa !4449
  %tobool = icmp eq %struct._object* %0, null, !dbg !4465
  br i1 %tobool, label %do.body.5, label %if.then, !dbg !4467

if.then:                                          ; preds = %entry
  %call = tail call i32 %visit(%struct._object* %0, i8* %arg) #1, !dbg !4468
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !1208, metadata !2664), !dbg !4468
  %tobool2 = icmp eq i32 %call, 0, !dbg !4470
  br i1 %tobool2, label %do.body.5, label %return

do.body.5:                                        ; preds = %entry, %if.then
  %func = getelementptr inbounds %struct.starmapobject, %struct.starmapobject* %lz, i64 0, i32 1, !dbg !4472
  %1 = load %struct._object*, %struct._object** %func, align 8, !dbg !4472, !tbaa !4436
  %tobool6 = icmp eq %struct._object* %1, null, !dbg !4472
  br i1 %tobool6, label %do.end.18, label %if.then.7, !dbg !4474

if.then.7:                                        ; preds = %do.body.5
  %call10 = tail call i32 %visit(%struct._object* %1, i8* %arg) #1, !dbg !4475
  tail call void @llvm.dbg.value(metadata i32 %call10, i64 0, metadata !1212, metadata !2664), !dbg !4475
  %tobool11 = icmp eq i32 %call10, 0, !dbg !4477
  br i1 %tobool11, label %do.end.18, label %return

do.end.18:                                        ; preds = %do.body.5, %if.then.7
  br label %return, !dbg !4479

return:                                           ; preds = %if.then.7, %if.then, %do.end.18
  %retval.3 = phi i32 [ 0, %do.end.18 ], [ %call10, %if.then.7 ], [ %call, %if.then ]
  ret i32 %retval.3, !dbg !4480
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @starmap_next(%struct.starmapobject* nocapture readonly %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.starmapobject* %lz, i64 0, metadata !1220, metadata !2664), !dbg !4481
  %it1 = getelementptr inbounds %struct.starmapobject, %struct.starmapobject* %lz, i64 0, i32 2, !dbg !4482
  %0 = load %struct._object*, %struct._object** %it1, align 8, !dbg !4482, !tbaa !4449
  tail call void @llvm.dbg.value(metadata %struct._object* %0, i64 0, metadata !1223, metadata !2664), !dbg !4483
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i64 0, i32 1, !dbg !4484
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4484, !tbaa !2667
  %tp_iternext = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i64 0, i32 26, !dbg !4485
  %2 = load %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)** %tp_iternext, align 8, !dbg !4485, !tbaa !3882
  %call = tail call %struct._object* %2(%struct._object* %0) #1, !dbg !4486
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1221, metadata !2664), !dbg !4487
  %cmp = icmp eq %struct._object* %call, null, !dbg !4488
  br i1 %cmp, label %cleanup.27, label %if.end, !dbg !4490

if.end:                                           ; preds = %entry
  %ob_type2 = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 1, !dbg !4491
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type2, align 8, !dbg !4491, !tbaa !2667
  %cmp3 = icmp eq %struct._typeobject* %3, @PyTuple_Type, !dbg !4491
  br i1 %cmp3, label %if.end.13, label %if.then.4, !dbg !4492

if.then.4:                                        ; preds = %if.end
  %call5 = tail call %struct._object* @PySequence_Tuple(%struct._object* %call) #1, !dbg !4493
  tail call void @llvm.dbg.value(metadata %struct._object* %call5, i64 0, metadata !1224, metadata !2664), !dbg !4494
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1227, metadata !2664), !dbg !4495
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 0, !dbg !4497
  %4 = load i64, i64* %ob_refcnt, align 8, !dbg !4497, !tbaa !2694
  %dec = add i64 %4, -1, !dbg !4497
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4497, !tbaa !2694
  %cmp6 = icmp eq i64 %dec, 0, !dbg !4497
  br i1 %cmp6, label %if.else, label %if.end.9, !dbg !4499

if.else:                                          ; preds = %if.then.4
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type2, align 8, !dbg !4500, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i64 0, i32 4, !dbg !4500
  %6 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4500, !tbaa !2717
  tail call void %6(%struct._object* %call) #1, !dbg !4500
  br label %if.end.9

if.end.9:                                         ; preds = %if.then.4, %if.else
  %cmp10 = icmp eq %struct._object* %call5, null, !dbg !4502
  br i1 %cmp10, label %cleanup.27, label %if.end.13

if.end.13:                                        ; preds = %if.end.9, %if.end
  %args.1 = phi %struct._object* [ %call, %if.end ], [ %call5, %if.end.9 ]
  %func = getelementptr inbounds %struct.starmapobject, %struct.starmapobject* %lz, i64 0, i32 1, !dbg !4504
  %7 = load %struct._object*, %struct._object** %func, align 8, !dbg !4504, !tbaa !4436
  %call14 = tail call %struct._object* @PyObject_Call(%struct._object* %7, %struct._object* %args.1, %struct._object* null) #1, !dbg !4505
  tail call void @llvm.dbg.value(metadata %struct._object* %call14, i64 0, metadata !1222, metadata !2664), !dbg !4506
  tail call void @llvm.dbg.value(metadata %struct._object* %args.1, i64 0, metadata !1229, metadata !2664), !dbg !4507
  %ob_refcnt17 = getelementptr inbounds %struct._object, %struct._object* %args.1, i64 0, i32 0, !dbg !4509
  %8 = load i64, i64* %ob_refcnt17, align 8, !dbg !4509, !tbaa !2694
  %dec18 = add i64 %8, -1, !dbg !4509
  store i64 %dec18, i64* %ob_refcnt17, align 8, !dbg !4509, !tbaa !2694
  %cmp19 = icmp eq i64 %dec18, 0, !dbg !4509
  br i1 %cmp19, label %if.else.21, label %cleanup.27, !dbg !4511

if.else.21:                                       ; preds = %if.end.13
  %ob_type22 = getelementptr inbounds %struct._object, %struct._object* %args.1, i64 0, i32 1, !dbg !4512
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type22, align 8, !dbg !4512, !tbaa !2667
  %tp_dealloc23 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i64 0, i32 4, !dbg !4512
  %10 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc23, align 8, !dbg !4512, !tbaa !2717
  tail call void %10(%struct._object* %args.1) #1, !dbg !4512
  br label %cleanup.27

cleanup.27:                                       ; preds = %if.end.9, %if.else.21, %if.end.13, %entry
  %retval.1 = phi %struct._object* [ null, %if.end.9 ], [ null, %entry ], [ %call14, %if.end.13 ], [ %call14, %if.else.21 ]
  ret %struct._object* %retval.1, !dbg !4514
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @starmap_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %func = alloca %struct._object*, align 8
  %seq = alloca %struct._object*, align 8
  tail call void @llvm.dbg.value(metadata %struct._typeobject* %type, i64 0, metadata !1236, metadata !2664), !dbg !4515
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1237, metadata !2664), !dbg !4516
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !1238, metadata !2664), !dbg !4517
  %0 = bitcast %struct._object** %func to i8*, !dbg !4518
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4518
  %1 = bitcast %struct._object** %seq to i8*, !dbg !4518
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !4518
  %cmp = icmp eq %struct._typeobject* %type, @starmap_type, !dbg !4519
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4521

land.lhs.true:                                    ; preds = %entry
  %call = tail call i32 @_PyArg_NoKeywords(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40, i64 0, i64 0), %struct._object* %kwds) #1, !dbg !4522
  %tobool = icmp eq i32 %call, 0, !dbg !4522
  br i1 %tobool, label %cleanup, label %if.end, !dbg !4523

if.end:                                           ; preds = %land.lhs.true, %entry
  tail call void @llvm.dbg.value(metadata %struct._object** %func, i64 0, metadata !1239, metadata !2664), !dbg !4524
  tail call void @llvm.dbg.value(metadata %struct._object** %seq, i64 0, metadata !1240, metadata !2664), !dbg !4525
  %call1 = call i32 (%struct._object*, i8*, i64, i64, ...) @PyArg_UnpackTuple(%struct._object* %args, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.41, i64 0, i64 0), i64 2, i64 2, %struct._object** nonnull %func, %struct._object** nonnull %seq) #1, !dbg !4526
  %tobool2 = icmp eq i32 %call1, 0, !dbg !4526
  br i1 %tobool2, label %cleanup, label %if.end.4, !dbg !4528

if.end.4:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct._object** %seq, i64 0, metadata !1240, metadata !2664), !dbg !4525
  %2 = load %struct._object*, %struct._object** %seq, align 8, !dbg !4529, !tbaa !2681
  %call5 = call %struct._object* @PyObject_GetIter(%struct._object* %2) #1, !dbg !4530
  call void @llvm.dbg.value(metadata %struct._object* %call5, i64 0, metadata !1241, metadata !2664), !dbg !4531
  %cmp6 = icmp eq %struct._object* %call5, null, !dbg !4532
  br i1 %cmp6, label %cleanup, label %if.end.8, !dbg !4534

if.end.8:                                         ; preds = %if.end.4
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %type, i64 0, i32 36, !dbg !4535
  %3 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !4535, !tbaa !2835
  %call9 = call %struct._object* %3(%struct._typeobject* %type, i64 0) #1, !dbg !4536
  %cmp10 = icmp eq %struct._object* %call9, null, !dbg !4537
  br i1 %cmp10, label %do.body, label %if.end.15, !dbg !4538

do.body:                                          ; preds = %if.end.8
  call void @llvm.dbg.value(metadata %struct._object* %call5, i64 0, metadata !1243, metadata !2664), !dbg !4539
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call5, i64 0, i32 0, !dbg !4541
  %4 = load i64, i64* %ob_refcnt, align 8, !dbg !4541, !tbaa !2694
  %dec = add i64 %4, -1, !dbg !4541
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4541, !tbaa !2694
  %cmp12 = icmp eq i64 %dec, 0, !dbg !4541
  br i1 %cmp12, label %if.else, label %cleanup, !dbg !4543

if.else:                                          ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call5, i64 0, i32 1, !dbg !4544
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4544, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i64 0, i32 4, !dbg !4544
  %6 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4544, !tbaa !2717
  call void %6(%struct._object* %call5) #1, !dbg !4544
  br label %cleanup

if.end.15:                                        ; preds = %if.end.8
  call void @llvm.dbg.value(metadata %struct._object** %func, i64 0, metadata !1239, metadata !2664), !dbg !4524
  %7 = load %struct._object*, %struct._object** %func, align 8, !dbg !4546, !tbaa !2681
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %7, i64 0, i32 0, !dbg !4546
  %8 = load i64, i64* %ob_refcnt16, align 8, !dbg !4546, !tbaa !2694
  %inc = add i64 %8, 1, !dbg !4546
  store i64 %inc, i64* %ob_refcnt16, align 8, !dbg !4546, !tbaa !2694
  call void @llvm.dbg.value(metadata %struct._object** %func, i64 0, metadata !1239, metadata !2664), !dbg !4524
  %9 = ptrtoint %struct._object* %7 to i64, !dbg !4547
  %10 = getelementptr inbounds %struct._object, %struct._object* %call9, i64 1, i32 0, !dbg !4548
  store i64 %9, i64* %10, align 8, !dbg !4548, !tbaa !4436
  %it18 = getelementptr inbounds %struct._object, %struct._object* %call9, i64 1, i32 1, !dbg !4549
  %11 = bitcast %struct._typeobject** %it18 to %struct._object**, !dbg !4549
  store %struct._object* %call5, %struct._object** %11, align 8, !dbg !4550, !tbaa !4449
  br label %cleanup, !dbg !4551

cleanup:                                          ; preds = %if.else, %do.body, %if.end.4, %if.end, %land.lhs.true, %if.end.15
  %retval.0 = phi %struct._object* [ %call9, %if.end.15 ], [ null, %land.lhs.true ], [ null, %if.end ], [ null, %if.end.4 ], [ null, %do.body ], [ null, %if.else ]
  call void @llvm.lifetime.end(i64 8, i8* %1) #1, !dbg !4552
  call void @llvm.lifetime.end(i64 8, i8* %0) #1, !dbg !4552
  ret %struct._object* %retval.0, !dbg !4552
}

declare %struct._object* @PyObject_Call(%struct._object*, %struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @starmap_reduce(%struct.starmapobject* nocapture readonly %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.starmapobject* %lz, i64 0, metadata !1233, metadata !2664), !dbg !4553
  %ob_type = getelementptr inbounds %struct.starmapobject, %struct.starmapobject* %lz, i64 0, i32 0, i32 1, !dbg !4554
  %0 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4554, !tbaa !2667
  %func = getelementptr inbounds %struct.starmapobject, %struct.starmapobject* %lz, i64 0, i32 1, !dbg !4555
  %1 = load %struct._object*, %struct._object** %func, align 8, !dbg !4555, !tbaa !4436
  %it = getelementptr inbounds %struct.starmapobject, %struct.starmapobject* %lz, i64 0, i32 2, !dbg !4556
  %2 = load %struct._object*, %struct._object** %it, align 8, !dbg !4556, !tbaa !4449
  %call = tail call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i64 0, i64 0), %struct._typeobject* %0, %struct._object* %1, %struct._object* %2) #1, !dbg !4557
  ret %struct._object* %call, !dbg !4558
}

; Function Attrs: nounwind uwtable
define internal void @chain_dealloc(%struct.chainobject* %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.chainobject* %lz, i64 0, metadata !1251, metadata !2664), !dbg !4559
  %0 = bitcast %struct.chainobject* %lz to i8*, !dbg !4560
  tail call void @PyObject_GC_UnTrack(i8* %0) #1, !dbg !4561
  %active = getelementptr inbounds %struct.chainobject, %struct.chainobject* %lz, i64 0, i32 2, !dbg !4562
  %1 = load %struct._object*, %struct._object** %active, align 8, !dbg !4562, !tbaa !4449
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1252, metadata !2664), !dbg !4562
  %cmp = icmp eq %struct._object* %1, null, !dbg !4564
  br i1 %cmp, label %if.end.4, label %do.body.1, !dbg !4565

do.body.1:                                        ; preds = %entry
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1254, metadata !2664), !dbg !4566
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !4568
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !4568, !tbaa !2694
  %dec = add i64 %2, -1, !dbg !4568
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4568, !tbaa !2694
  %cmp2 = icmp eq i64 %dec, 0, !dbg !4568
  br i1 %cmp2, label %if.else, label %if.end.4, !dbg !4570

if.else:                                          ; preds = %do.body.1
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !4571
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4571, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 4, !dbg !4571
  %4 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4571, !tbaa !2717
  tail call void %4(%struct._object* %1) #1, !dbg !4571
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %do.body.1, %entry
  %source = getelementptr inbounds %struct.chainobject, %struct.chainobject* %lz, i64 0, i32 1, !dbg !4573
  %5 = load %struct._object*, %struct._object** %source, align 8, !dbg !4573, !tbaa !4436
  tail call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !1257, metadata !2664), !dbg !4573
  %cmp9 = icmp eq %struct._object* %5, null, !dbg !4575
  br i1 %cmp9, label %if.end.23, label %do.body.11, !dbg !4576

do.body.11:                                       ; preds = %if.end.4
  tail call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !1259, metadata !2664), !dbg !4577
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 0, !dbg !4579
  %6 = load i64, i64* %ob_refcnt13, align 8, !dbg !4579, !tbaa !2694
  %dec14 = add i64 %6, -1, !dbg !4579
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !4579, !tbaa !2694
  %cmp15 = icmp eq i64 %dec14, 0, !dbg !4579
  br i1 %cmp15, label %if.else.17, label %if.end.23, !dbg !4581

if.else.17:                                       ; preds = %do.body.11
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 1, !dbg !4582
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !4582, !tbaa !2667
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i64 0, i32 4, !dbg !4582
  %8 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !4582, !tbaa !2717
  tail call void %8(%struct._object* %5) #1, !dbg !4582
  br label %if.end.23

if.end.23:                                        ; preds = %if.else.17, %do.body.11, %if.end.4
  %ob_type26 = getelementptr inbounds %struct.chainobject, %struct.chainobject* %lz, i64 0, i32 0, i32 1, !dbg !4584
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type26, align 8, !dbg !4584, !tbaa !2667
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i64 0, i32 38, !dbg !4585
  %10 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !4585, !tbaa !2744
  tail call void %10(i8* %0) #1, !dbg !4584
  ret void, !dbg !4586
}

; Function Attrs: nounwind uwtable
define internal i32 @chain_traverse(%struct.chainobject* nocapture readonly %lz, i32 (%struct._object*, i8*)* nocapture %visit, i8* %arg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.chainobject* %lz, i64 0, metadata !1266, metadata !2664), !dbg !4587
  tail call void @llvm.dbg.value(metadata i32 (%struct._object*, i8*)* %visit, i64 0, metadata !1267, metadata !2664), !dbg !4588
  tail call void @llvm.dbg.value(metadata i8* %arg, i64 0, metadata !1268, metadata !2664), !dbg !4589
  %source = getelementptr inbounds %struct.chainobject, %struct.chainobject* %lz, i64 0, i32 1, !dbg !4590
  %0 = load %struct._object*, %struct._object** %source, align 8, !dbg !4590, !tbaa !4436
  %tobool = icmp eq %struct._object* %0, null, !dbg !4590
  br i1 %tobool, label %do.body.5, label %if.then, !dbg !4592

if.then:                                          ; preds = %entry
  %call = tail call i32 %visit(%struct._object* %0, i8* %arg) #1, !dbg !4593
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !1269, metadata !2664), !dbg !4593
  %tobool2 = icmp eq i32 %call, 0, !dbg !4595
  br i1 %tobool2, label %do.body.5, label %return

do.body.5:                                        ; preds = %entry, %if.then
  %active = getelementptr inbounds %struct.chainobject, %struct.chainobject* %lz, i64 0, i32 2, !dbg !4597
  %1 = load %struct._object*, %struct._object** %active, align 8, !dbg !4597, !tbaa !4449
  %tobool6 = icmp eq %struct._object* %1, null, !dbg !4597
  br i1 %tobool6, label %do.end.18, label %if.then.7, !dbg !4599

if.then.7:                                        ; preds = %do.body.5
  %call10 = tail call i32 %visit(%struct._object* %1, i8* %arg) #1, !dbg !4600
  tail call void @llvm.dbg.value(metadata i32 %call10, i64 0, metadata !1273, metadata !2664), !dbg !4600
  %tobool11 = icmp eq i32 %call10, 0, !dbg !4602
  br i1 %tobool11, label %do.end.18, label %return

do.end.18:                                        ; preds = %do.body.5, %if.then.7
  br label %return, !dbg !4604

return:                                           ; preds = %if.then.7, %if.then, %do.end.18
  %retval.3 = phi i32 [ 0, %do.end.18 ], [ %call10, %if.then.7 ], [ %call, %if.then ]
  ret i32 %retval.3, !dbg !4605
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @chain_next(%struct.chainobject* nocapture %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.chainobject* %lz, i64 0, metadata !1281, metadata !2664), !dbg !4606
  %source = getelementptr inbounds %struct.chainobject, %struct.chainobject* %lz, i64 0, i32 1, !dbg !4607
  %0 = load %struct._object*, %struct._object** %source, align 8, !dbg !4607, !tbaa !4436
  %cmp.136 = icmp eq %struct._object* %0, null, !dbg !4609
  br i1 %cmp.136, label %cleanup.93, label %if.end.lr.ph, !dbg !4610

if.end.lr.ph:                                     ; preds = %entry
  %active = getelementptr inbounds %struct.chainobject, %struct.chainobject* %lz, i64 0, i32 2, !dbg !4611
  br label %if.end, !dbg !4610

if.end:                                           ; preds = %if.end.lr.ph, %tailrecurse.backedge
  %1 = phi %struct._object* [ %0, %if.end.lr.ph ], [ %21, %tailrecurse.backedge ]
  %2 = load %struct._object*, %struct._object** %active, align 8, !dbg !4611, !tbaa !4449
  %cmp1 = icmp eq %struct._object* %2, null, !dbg !4612
  br i1 %cmp1, label %if.then.2, label %if.end.57, !dbg !4613

if.then.2:                                        ; preds = %if.end
  %call = tail call %struct._object* @PyIter_Next(%struct._object* %1) #1, !dbg !4614
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1283, metadata !2664), !dbg !4615
  %cmp4 = icmp eq %struct._object* %call, null, !dbg !4616
  br i1 %cmp4, label %do.body, label %if.end.17, !dbg !4617

do.body:                                          ; preds = %if.then.2
  %3 = load %struct._object*, %struct._object** %source, align 8, !dbg !4618, !tbaa !4436
  tail call void @llvm.dbg.value(metadata %struct._object* %3, i64 0, metadata !1286, metadata !2664), !dbg !4618
  %cmp7 = icmp eq %struct._object* %3, null, !dbg !4620
  br i1 %cmp7, label %cleanup.93, label %if.then.8, !dbg !4621

if.then.8:                                        ; preds = %do.body
  store %struct._object* null, %struct._object** %source, align 8, !dbg !4622, !tbaa !4436
  tail call void @llvm.dbg.value(metadata %struct._object* %3, i64 0, metadata !1290, metadata !2664), !dbg !4624
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %3, i64 0, i32 0, !dbg !4626
  %4 = load i64, i64* %ob_refcnt, align 8, !dbg !4626, !tbaa !2694
  %dec = add i64 %4, -1, !dbg !4626
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4626, !tbaa !2694
  %cmp11 = icmp eq i64 %dec, 0, !dbg !4626
  br i1 %cmp11, label %if.else, label %cleanup.93, !dbg !4628

if.else:                                          ; preds = %if.then.8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %3, i64 0, i32 1, !dbg !4629
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4629, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i64 0, i32 4, !dbg !4629
  %6 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4629, !tbaa !2717
  tail call void %6(%struct._object* %3) #1, !dbg !4629
  br label %cleanup.93

if.end.17:                                        ; preds = %if.then.2
  %call18 = tail call %struct._object* @PyObject_GetIter(%struct._object* %call) #1, !dbg !4631
  store %struct._object* %call18, %struct._object** %active, align 8, !dbg !4632, !tbaa !4449
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1294, metadata !2664), !dbg !4633
  %ob_refcnt22 = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 0, !dbg !4635
  %7 = load i64, i64* %ob_refcnt22, align 8, !dbg !4635, !tbaa !2694
  %dec23 = add i64 %7, -1, !dbg !4635
  store i64 %dec23, i64* %ob_refcnt22, align 8, !dbg !4635, !tbaa !2694
  %cmp24 = icmp eq i64 %dec23, 0, !dbg !4635
  br i1 %cmp24, label %if.else.26, label %if.end.29, !dbg !4637

if.else.26:                                       ; preds = %if.end.17
  %ob_type27 = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 1, !dbg !4638
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type27, align 8, !dbg !4638, !tbaa !2667
  %tp_dealloc28 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i64 0, i32 4, !dbg !4638
  %9 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc28, align 8, !dbg !4638, !tbaa !2717
  tail call void %9(%struct._object* %call) #1, !dbg !4638
  %.pre = load %struct._object*, %struct._object** %active, align 8, !dbg !4640, !tbaa !4449
  br label %if.end.29

if.end.29:                                        ; preds = %if.end.17, %if.else.26
  %10 = phi %struct._object* [ %call18, %if.end.17 ], [ %.pre, %if.else.26 ], !dbg !4640
  %cmp33 = icmp eq %struct._object* %10, null, !dbg !4641
  br i1 %cmp33, label %do.body.35, label %if.end.57, !dbg !4642

do.body.35:                                       ; preds = %if.end.29
  %11 = load %struct._object*, %struct._object** %source, align 8, !dbg !4643, !tbaa !4436
  tail call void @llvm.dbg.value(metadata %struct._object* %11, i64 0, metadata !1296, metadata !2664), !dbg !4643
  %cmp38 = icmp eq %struct._object* %11, null, !dbg !4645
  br i1 %cmp38, label %cleanup.93, label %if.then.39, !dbg !4646

if.then.39:                                       ; preds = %do.body.35
  store %struct._object* null, %struct._object** %source, align 8, !dbg !4647, !tbaa !4436
  tail call void @llvm.dbg.value(metadata %struct._object* %11, i64 0, metadata !1300, metadata !2664), !dbg !4649
  %ob_refcnt43 = getelementptr inbounds %struct._object, %struct._object* %11, i64 0, i32 0, !dbg !4651
  %12 = load i64, i64* %ob_refcnt43, align 8, !dbg !4651, !tbaa !2694
  %dec44 = add i64 %12, -1, !dbg !4651
  store i64 %dec44, i64* %ob_refcnt43, align 8, !dbg !4651, !tbaa !2694
  %cmp45 = icmp eq i64 %dec44, 0, !dbg !4651
  br i1 %cmp45, label %if.else.47, label %cleanup.93, !dbg !4653

if.else.47:                                       ; preds = %if.then.39
  %ob_type48 = getelementptr inbounds %struct._object, %struct._object* %11, i64 0, i32 1, !dbg !4654
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type48, align 8, !dbg !4654, !tbaa !2667
  %tp_dealloc49 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i64 0, i32 4, !dbg !4654
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc49, align 8, !dbg !4654, !tbaa !2717
  tail call void %14(%struct._object* %11) #1, !dbg !4654
  br label %cleanup.93

if.end.57:                                        ; preds = %if.end.29, %if.end
  %15 = phi %struct._object* [ %10, %if.end.29 ], [ %2, %if.end ], !dbg !4656
  %call59 = tail call %struct._object* @PyIter_Next(%struct._object* %15) #1, !dbg !4657
  tail call void @llvm.dbg.value(metadata %struct._object* %call59, i64 0, metadata !1282, metadata !2664), !dbg !4658
  %cmp60 = icmp eq %struct._object* %call59, null, !dbg !4659
  br i1 %cmp60, label %if.end.62, label %cleanup.93.loopexit, !dbg !4661

if.end.62:                                        ; preds = %if.end.57
  %call63 = tail call %struct._object* @PyErr_Occurred() #1, !dbg !4662
  %tobool = icmp eq %struct._object* %call63, null, !dbg !4662
  br i1 %tobool, label %do.body.71, label %if.then.64, !dbg !4664

if.then.64:                                       ; preds = %if.end.62
  %16 = load %struct._object*, %struct._object** @PyExc_StopIteration, align 8, !dbg !4665, !tbaa !2681
  %call65 = tail call i32 @PyErr_ExceptionMatches(%struct._object* %16) #1, !dbg !4668
  %tobool66 = icmp eq i32 %call65, 0, !dbg !4668
  br i1 %tobool66, label %cleanup.93.loopexit, label %if.then.67, !dbg !4669

if.then.67:                                       ; preds = %if.then.64
  tail call void @PyErr_Clear() #1, !dbg !4670
  br label %do.body.71, !dbg !4671

do.body.71:                                       ; preds = %if.end.62, %if.then.67
  %17 = load %struct._object*, %struct._object** %active, align 8, !dbg !4672, !tbaa !4449
  tail call void @llvm.dbg.value(metadata %struct._object* %17, i64 0, metadata !1304, metadata !2664), !dbg !4672
  %cmp74 = icmp eq %struct._object* %17, null, !dbg !4674
  br i1 %cmp74, label %tailrecurse.backedge, label %if.then.75, !dbg !4675

if.then.75:                                       ; preds = %do.body.71
  store %struct._object* null, %struct._object** %active, align 8, !dbg !4676, !tbaa !4449
  tail call void @llvm.dbg.value(metadata %struct._object* %17, i64 0, metadata !1306, metadata !2664), !dbg !4678
  %ob_refcnt79 = getelementptr inbounds %struct._object, %struct._object* %17, i64 0, i32 0, !dbg !4680
  %18 = load i64, i64* %ob_refcnt79, align 8, !dbg !4680, !tbaa !2694
  %dec80 = add i64 %18, -1, !dbg !4680
  store i64 %dec80, i64* %ob_refcnt79, align 8, !dbg !4680, !tbaa !2694
  %cmp81 = icmp eq i64 %dec80, 0, !dbg !4680
  br i1 %cmp81, label %if.else.83, label %tailrecurse.backedge, !dbg !4682

if.else.83:                                       ; preds = %if.then.75
  %ob_type84 = getelementptr inbounds %struct._object, %struct._object* %17, i64 0, i32 1, !dbg !4683
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type84, align 8, !dbg !4683, !tbaa !2667
  %tp_dealloc85 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i64 0, i32 4, !dbg !4683
  %20 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc85, align 8, !dbg !4683, !tbaa !2717
  tail call void %20(%struct._object* %17) #1, !dbg !4683
  br label %tailrecurse.backedge

tailrecurse.backedge:                             ; preds = %if.else.83, %if.then.75, %do.body.71
  tail call void @llvm.dbg.value(metadata %struct.chainobject* %lz, i64 0, metadata !1281, metadata !2664), !dbg !4606
  %21 = load %struct._object*, %struct._object** %source, align 8, !dbg !4607, !tbaa !4436
  %cmp = icmp eq %struct._object* %21, null, !dbg !4609
  br i1 %cmp, label %cleanup.93.loopexit, label %if.end, !dbg !4610

cleanup.93.loopexit:                              ; preds = %if.then.64, %if.end.57, %tailrecurse.backedge
  %retval.1.ph = phi %struct._object* [ null, %if.then.64 ], [ %call59, %if.end.57 ], [ null, %tailrecurse.backedge ]
  br label %cleanup.93, !dbg !4685

cleanup.93:                                       ; preds = %cleanup.93.loopexit, %entry, %do.body.35, %if.then.39, %do.body, %if.then.8, %if.else.47, %if.else
  %retval.1 = phi %struct._object* [ null, %if.else ], [ null, %if.else.47 ], [ null, %if.then.8 ], [ null, %do.body ], [ null, %if.then.39 ], [ null, %do.body.35 ], [ null, %entry ], [ %retval.1.ph, %cleanup.93.loopexit ]
  ret %struct._object* %retval.1, !dbg !4685
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @chain_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._typeobject* %type, i64 0, metadata !1353, metadata !2664), !dbg !4686
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1354, metadata !2664), !dbg !4687
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !1355, metadata !2664), !dbg !4688
  %cmp = icmp eq %struct._typeobject* %type, @chain_type, !dbg !4689
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4691

land.lhs.true:                                    ; preds = %entry
  %call = tail call i32 @_PyArg_NoKeywords(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.48, i64 0, i64 0), %struct._object* %kwds) #1, !dbg !4692
  %tobool = icmp eq i32 %call, 0, !dbg !4692
  br i1 %tobool, label %cleanup, label %if.end, !dbg !4693

if.end:                                           ; preds = %land.lhs.true, %entry
  %call1 = tail call %struct._object* @PyObject_GetIter(%struct._object* %args) #1, !dbg !4694
  tail call void @llvm.dbg.value(metadata %struct._object* %call1, i64 0, metadata !1356, metadata !2664), !dbg !4695
  %cmp2 = icmp eq %struct._object* %call1, null, !dbg !4696
  br i1 %cmp2, label %cleanup, label %if.end.4, !dbg !4698

if.end.4:                                         ; preds = %if.end
  tail call void @llvm.dbg.value(metadata %struct._typeobject* %type, i64 0, metadata !1319, metadata !2664) #1, !dbg !4699
  tail call void @llvm.dbg.value(metadata %struct._object* %call1, i64 0, metadata !1320, metadata !2664) #1, !dbg !4701
  %tp_alloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %type, i64 0, i32 36, !dbg !4702
  %0 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc.i, align 8, !dbg !4702, !tbaa !2835
  %call.i = tail call %struct._object* %0(%struct._typeobject* %type, i64 0) #1, !dbg !4703
  %cmp.i = icmp eq %struct._object* %call.i, null, !dbg !4704
  br i1 %cmp.i, label %do.body.i, label %if.end.3.i, !dbg !4705

do.body.i:                                        ; preds = %if.end.4
  tail call void @llvm.dbg.value(metadata %struct._object* %call1, i64 0, metadata !1322, metadata !2664) #1, !dbg !4706
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %call1, i64 0, i32 0, !dbg !4708
  %1 = load i64, i64* %ob_refcnt.i, align 8, !dbg !4708, !tbaa !2694
  %dec.i = add i64 %1, -1, !dbg !4708
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !4708, !tbaa !2694
  %cmp1.i = icmp eq i64 %dec.i, 0, !dbg !4708
  br i1 %cmp1.i, label %if.else.i, label %cleanup, !dbg !4710

if.else.i:                                        ; preds = %do.body.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %call1, i64 0, i32 1, !dbg !4711
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !4711, !tbaa !2667
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i64 0, i32 4, !dbg !4711
  %3 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !4711, !tbaa !2717
  tail call void %3(%struct._object* %call1) #1, !dbg !4711
  br label %cleanup, !dbg !4713

if.end.3.i:                                       ; preds = %if.end.4
  %source4.i = getelementptr inbounds %struct._object, %struct._object* %call.i, i64 1, !dbg !4714
  %4 = bitcast %struct._object* %source4.i to %struct._object**, !dbg !4714
  store %struct._object* %call1, %struct._object** %4, align 8, !dbg !4715, !tbaa !4436
  %active.i = getelementptr inbounds %struct._object, %struct._object* %call.i, i64 1, i32 1, !dbg !4716
  %5 = bitcast %struct._typeobject** %active.i to %struct._object**, !dbg !4716
  store %struct._object* null, %struct._object** %5, align 8, !dbg !4717, !tbaa !4449
  br label %cleanup, !dbg !4718

cleanup:                                          ; preds = %if.end.3.i, %if.else.i, %do.body.i, %if.end, %land.lhs.true
  %retval.0 = phi %struct._object* [ null, %land.lhs.true ], [ null, %if.end ], [ %call.i, %if.end.3.i ], [ null, %do.body.i ], [ null, %if.else.i ]
  ret %struct._object* %retval.0, !dbg !4719
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @chain_new_from_iterable(%struct._typeobject* %type, %struct._object* %arg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._typeobject* %type, i64 0, metadata !1314, metadata !2664), !dbg !4720
  tail call void @llvm.dbg.value(metadata %struct._object* %arg, i64 0, metadata !1315, metadata !2664), !dbg !4721
  %call = tail call %struct._object* @PyObject_GetIter(%struct._object* %arg) #1, !dbg !4722
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1316, metadata !2664), !dbg !4723
  %cmp = icmp eq %struct._object* %call, null, !dbg !4724
  br i1 %cmp, label %cleanup, label %if.end, !dbg !4726

if.end:                                           ; preds = %entry
  tail call void @llvm.dbg.value(metadata %struct._typeobject* %type, i64 0, metadata !1319, metadata !2664) #1, !dbg !4727
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1320, metadata !2664) #1, !dbg !4729
  %tp_alloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %type, i64 0, i32 36, !dbg !4730
  %0 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc.i, align 8, !dbg !4730, !tbaa !2835
  %call.i = tail call %struct._object* %0(%struct._typeobject* %type, i64 0) #1, !dbg !4731
  %cmp.i = icmp eq %struct._object* %call.i, null, !dbg !4732
  br i1 %cmp.i, label %do.body.i, label %if.end.3.i, !dbg !4733

do.body.i:                                        ; preds = %if.end
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1322, metadata !2664) #1, !dbg !4734
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 0, !dbg !4735
  %1 = load i64, i64* %ob_refcnt.i, align 8, !dbg !4735, !tbaa !2694
  %dec.i = add i64 %1, -1, !dbg !4735
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !4735, !tbaa !2694
  %cmp1.i = icmp eq i64 %dec.i, 0, !dbg !4735
  br i1 %cmp1.i, label %if.else.i, label %cleanup, !dbg !4736

if.else.i:                                        ; preds = %do.body.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 1, !dbg !4737
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !4737, !tbaa !2667
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i64 0, i32 4, !dbg !4737
  %3 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !4737, !tbaa !2717
  tail call void %3(%struct._object* %call) #1, !dbg !4737
  br label %cleanup, !dbg !4738

if.end.3.i:                                       ; preds = %if.end
  %source4.i = getelementptr inbounds %struct._object, %struct._object* %call.i, i64 1, !dbg !4739
  %4 = bitcast %struct._object* %source4.i to %struct._object**, !dbg !4739
  store %struct._object* %call, %struct._object** %4, align 8, !dbg !4740, !tbaa !4436
  %active.i = getelementptr inbounds %struct._object, %struct._object* %call.i, i64 1, i32 1, !dbg !4741
  %5 = bitcast %struct._typeobject** %active.i to %struct._object**, !dbg !4741
  store %struct._object* null, %struct._object** %5, align 8, !dbg !4742, !tbaa !4449
  br label %cleanup, !dbg !4743

cleanup:                                          ; preds = %if.end.3.i, %if.else.i, %do.body.i, %entry
  %retval.0 = phi %struct._object* [ null, %entry ], [ %call.i, %if.end.3.i ], [ null, %do.body.i ], [ null, %if.else.i ]
  ret %struct._object* %retval.0, !dbg !4744
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @chain_reduce(%struct.chainobject* nocapture readonly %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.chainobject* %lz, i64 0, metadata !1328, metadata !2664), !dbg !4745
  %source = getelementptr inbounds %struct.chainobject, %struct.chainobject* %lz, i64 0, i32 1, !dbg !4746
  %0 = load %struct._object*, %struct._object** %source, align 8, !dbg !4746, !tbaa !4436
  %tobool = icmp eq %struct._object* %0, null, !dbg !4748
  br i1 %tobool, label %if.else.8, label %if.then, !dbg !4749

if.then:                                          ; preds = %entry
  %active = getelementptr inbounds %struct.chainobject, %struct.chainobject* %lz, i64 0, i32 2, !dbg !4750
  %1 = load %struct._object*, %struct._object** %active, align 8, !dbg !4750, !tbaa !4449
  %tobool1 = icmp eq %struct._object* %1, null, !dbg !4753
  %ob_type = getelementptr inbounds %struct.chainobject, %struct.chainobject* %lz, i64 0, i32 0, i32 1, !dbg !4754
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4754, !tbaa !2667
  br i1 %tobool1, label %if.else, label %if.then.2, !dbg !4756

if.then.2:                                        ; preds = %if.then
  %call = tail call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44, i64 0, i64 0), %struct._typeobject* %2, %struct._object* %0, %struct._object* %1) #1, !dbg !4757
  br label %return, !dbg !4758

if.else:                                          ; preds = %if.then
  %call7 = tail call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i64 0, i64 0), %struct._typeobject* %2, %struct._object* %0) #1, !dbg !4759
  br label %return, !dbg !4761

if.else.8:                                        ; preds = %entry
  %ob_type9 = getelementptr inbounds %struct.chainobject, %struct.chainobject* %lz, i64 0, i32 0, i32 1, !dbg !4762
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type9, align 8, !dbg !4762, !tbaa !2667
  %call10 = tail call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i64 0, i64 0), %struct._typeobject* %3) #1, !dbg !4764
  br label %return, !dbg !4765

return:                                           ; preds = %if.else.8, %if.else, %if.then.2
  %retval.0 = phi %struct._object* [ %call, %if.then.2 ], [ %call7, %if.else ], [ %call10, %if.else.8 ]
  ret %struct._object* %retval.0, !dbg !4766
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @chain_setstate(%struct.chainobject* nocapture %lz, %struct._object* %state) #0 {
entry:
  %source = alloca %struct._object*, align 8
  %active = alloca %struct._object*, align 8
  tail call void @llvm.dbg.value(metadata %struct.chainobject* %lz, i64 0, metadata !1333, metadata !2664), !dbg !4767
  tail call void @llvm.dbg.value(metadata %struct._object* %state, i64 0, metadata !1334, metadata !2664), !dbg !4768
  %0 = bitcast %struct._object** %source to i8*, !dbg !4769
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4769
  %1 = bitcast %struct._object** %active to i8*, !dbg !4769
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !4769
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1336, metadata !2664), !dbg !4770
  store %struct._object* null, %struct._object** %active, align 8, !dbg !4770, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object** %source, i64 0, metadata !1335, metadata !2664), !dbg !4771
  tail call void @llvm.dbg.value(metadata %struct._object** %active, i64 0, metadata !1336, metadata !2664), !dbg !4770
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %state, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.47, i64 0, i64 0), %struct._object** nonnull %source, %struct._object** nonnull %active) #1, !dbg !4772
  %tobool = icmp eq i32 %call, 0, !dbg !4772
  br i1 %tobool, label %cleanup, label %do.body, !dbg !4774

do.body:                                          ; preds = %entry
  %source1 = getelementptr inbounds %struct.chainobject, %struct.chainobject* %lz, i64 0, i32 1, !dbg !4775
  %2 = load %struct._object*, %struct._object** %source1, align 8, !dbg !4775, !tbaa !4436
  call void @llvm.dbg.value(metadata %struct._object* %2, i64 0, metadata !1337, metadata !2664), !dbg !4775
  %cmp = icmp eq %struct._object* %2, null, !dbg !4777
  br i1 %cmp, label %if.end.8, label %if.then.2, !dbg !4778

if.then.2:                                        ; preds = %do.body
  store %struct._object* null, %struct._object** %source1, align 8, !dbg !4779, !tbaa !4436
  call void @llvm.dbg.value(metadata %struct._object* %2, i64 0, metadata !1339, metadata !2664), !dbg !4781
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %2, i64 0, i32 0, !dbg !4783
  %3 = load i64, i64* %ob_refcnt, align 8, !dbg !4783, !tbaa !2694
  %dec = add i64 %3, -1, !dbg !4783
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4783, !tbaa !2694
  %cmp5 = icmp eq i64 %dec, 0, !dbg !4783
  br i1 %cmp5, label %if.else, label %if.end.8, !dbg !4785

if.else:                                          ; preds = %if.then.2
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %2, i64 0, i32 1, !dbg !4786
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4786, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i64 0, i32 4, !dbg !4786
  %5 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4786, !tbaa !2717
  call void %5(%struct._object* %2) #1, !dbg !4786
  br label %if.end.8

if.end.8:                                         ; preds = %if.else, %if.then.2, %do.body
  call void @llvm.dbg.value(metadata %struct._object** %source, i64 0, metadata !1335, metadata !2664), !dbg !4771
  %6 = load %struct._object*, %struct._object** %source, align 8, !dbg !4788, !tbaa !2681
  store %struct._object* %6, %struct._object** %source1, align 8, !dbg !4789, !tbaa !4436
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %6, i64 0, i32 0, !dbg !4790
  %7 = load i64, i64* %ob_refcnt13, align 8, !dbg !4790, !tbaa !2694
  %inc = add i64 %7, 1, !dbg !4790
  store i64 %inc, i64* %ob_refcnt13, align 8, !dbg !4790, !tbaa !2694
  %active16 = getelementptr inbounds %struct.chainobject, %struct.chainobject* %lz, i64 0, i32 2, !dbg !4791
  %8 = load %struct._object*, %struct._object** %active16, align 8, !dbg !4791, !tbaa !4449
  call void @llvm.dbg.value(metadata %struct._object* %8, i64 0, metadata !1343, metadata !2664), !dbg !4791
  %cmp17 = icmp eq %struct._object* %8, null, !dbg !4793
  br i1 %cmp17, label %if.end.32, label %if.then.18, !dbg !4794

if.then.18:                                       ; preds = %if.end.8
  store %struct._object* null, %struct._object** %active16, align 8, !dbg !4795, !tbaa !4449
  call void @llvm.dbg.value(metadata %struct._object* %8, i64 0, metadata !1345, metadata !2664), !dbg !4797
  %ob_refcnt22 = getelementptr inbounds %struct._object, %struct._object* %8, i64 0, i32 0, !dbg !4799
  %9 = load i64, i64* %ob_refcnt22, align 8, !dbg !4799, !tbaa !2694
  %dec23 = add i64 %9, -1, !dbg !4799
  store i64 %dec23, i64* %ob_refcnt22, align 8, !dbg !4799, !tbaa !2694
  %cmp24 = icmp eq i64 %dec23, 0, !dbg !4799
  br i1 %cmp24, label %if.else.26, label %if.end.32, !dbg !4801

if.else.26:                                       ; preds = %if.then.18
  %ob_type27 = getelementptr inbounds %struct._object, %struct._object* %8, i64 0, i32 1, !dbg !4802
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type27, align 8, !dbg !4802, !tbaa !2667
  %tp_dealloc28 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i64 0, i32 4, !dbg !4802
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc28, align 8, !dbg !4802, !tbaa !2717
  call void %11(%struct._object* %8) #1, !dbg !4802
  br label %if.end.32

if.end.32:                                        ; preds = %if.else.26, %if.then.18, %if.end.8
  call void @llvm.dbg.value(metadata %struct._object** %active, i64 0, metadata !1336, metadata !2664), !dbg !4770
  %12 = load %struct._object*, %struct._object** %active, align 8, !dbg !4804, !tbaa !2681
  store %struct._object* %12, %struct._object** %active16, align 8, !dbg !4805, !tbaa !4449
  call void @llvm.dbg.value(metadata %struct._object* %12, i64 0, metadata !1349, metadata !2664), !dbg !4806
  %cmp38 = icmp eq %struct._object* %12, null, !dbg !4808
  br i1 %cmp38, label %if.end.42, label %if.then.39, !dbg !4810

if.then.39:                                       ; preds = %if.end.32
  %ob_refcnt40 = getelementptr inbounds %struct._object, %struct._object* %12, i64 0, i32 0, !dbg !4811
  %13 = load i64, i64* %ob_refcnt40, align 8, !dbg !4811, !tbaa !2694
  %inc41 = add i64 %13, 1, !dbg !4811
  store i64 %inc41, i64* %ob_refcnt40, align 8, !dbg !4811, !tbaa !2694
  br label %if.end.42, !dbg !4811

if.end.42:                                        ; preds = %if.end.32, %if.then.39
  %14 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !4813, !tbaa !2694
  %inc45 = add i64 %14, 1, !dbg !4813
  store i64 %inc45, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !4813, !tbaa !2694
  br label %cleanup, !dbg !4813

cleanup:                                          ; preds = %entry, %if.end.42
  %retval.0 = phi %struct._object* [ @_Py_NoneStruct, %if.end.42 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 8, i8* %1) #1, !dbg !4814
  call void @llvm.lifetime.end(i64 8, i8* %0) #1, !dbg !4814
  ret %struct._object* %retval.0, !dbg !4814
}

; Function Attrs: nounwind uwtable
define internal void @compress_dealloc(%struct.compressobject* %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.compressobject* %lz, i64 0, metadata !1361, metadata !2664), !dbg !4815
  %0 = bitcast %struct.compressobject* %lz to i8*, !dbg !4816
  tail call void @PyObject_GC_UnTrack(i8* %0) #1, !dbg !4817
  %data = getelementptr inbounds %struct.compressobject, %struct.compressobject* %lz, i64 0, i32 1, !dbg !4818
  %1 = load %struct._object*, %struct._object** %data, align 8, !dbg !4818, !tbaa !4436
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1362, metadata !2664), !dbg !4818
  %cmp = icmp eq %struct._object* %1, null, !dbg !4820
  br i1 %cmp, label %if.end.4, label %do.body.1, !dbg !4821

do.body.1:                                        ; preds = %entry
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1364, metadata !2664), !dbg !4822
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !4824
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !4824, !tbaa !2694
  %dec = add i64 %2, -1, !dbg !4824
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4824, !tbaa !2694
  %cmp2 = icmp eq i64 %dec, 0, !dbg !4824
  br i1 %cmp2, label %if.else, label %if.end.4, !dbg !4826

if.else:                                          ; preds = %do.body.1
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !4827
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4827, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 4, !dbg !4827
  %4 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4827, !tbaa !2717
  tail call void %4(%struct._object* %1) #1, !dbg !4827
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %do.body.1, %entry
  %selectors = getelementptr inbounds %struct.compressobject, %struct.compressobject* %lz, i64 0, i32 2, !dbg !4829
  %5 = load %struct._object*, %struct._object** %selectors, align 8, !dbg !4829, !tbaa !4449
  tail call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !1367, metadata !2664), !dbg !4829
  %cmp9 = icmp eq %struct._object* %5, null, !dbg !4831
  br i1 %cmp9, label %if.end.23, label %do.body.11, !dbg !4832

do.body.11:                                       ; preds = %if.end.4
  tail call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !1369, metadata !2664), !dbg !4833
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 0, !dbg !4835
  %6 = load i64, i64* %ob_refcnt13, align 8, !dbg !4835, !tbaa !2694
  %dec14 = add i64 %6, -1, !dbg !4835
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !4835, !tbaa !2694
  %cmp15 = icmp eq i64 %dec14, 0, !dbg !4835
  br i1 %cmp15, label %if.else.17, label %if.end.23, !dbg !4837

if.else.17:                                       ; preds = %do.body.11
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 1, !dbg !4838
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !4838, !tbaa !2667
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i64 0, i32 4, !dbg !4838
  %8 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !4838, !tbaa !2717
  tail call void %8(%struct._object* %5) #1, !dbg !4838
  br label %if.end.23

if.end.23:                                        ; preds = %if.else.17, %do.body.11, %if.end.4
  %ob_type26 = getelementptr inbounds %struct.compressobject, %struct.compressobject* %lz, i64 0, i32 0, i32 1, !dbg !4840
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type26, align 8, !dbg !4840, !tbaa !2667
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i64 0, i32 38, !dbg !4841
  %10 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !4841, !tbaa !2744
  tail call void %10(i8* %0) #1, !dbg !4840
  ret void, !dbg !4842
}

; Function Attrs: nounwind uwtable
define internal i32 @compress_traverse(%struct.compressobject* nocapture readonly %lz, i32 (%struct._object*, i8*)* nocapture %visit, i8* %arg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.compressobject* %lz, i64 0, metadata !1376, metadata !2664), !dbg !4843
  tail call void @llvm.dbg.value(metadata i32 (%struct._object*, i8*)* %visit, i64 0, metadata !1377, metadata !2664), !dbg !4844
  tail call void @llvm.dbg.value(metadata i8* %arg, i64 0, metadata !1378, metadata !2664), !dbg !4845
  %data = getelementptr inbounds %struct.compressobject, %struct.compressobject* %lz, i64 0, i32 1, !dbg !4846
  %0 = load %struct._object*, %struct._object** %data, align 8, !dbg !4846, !tbaa !4436
  %tobool = icmp eq %struct._object* %0, null, !dbg !4846
  br i1 %tobool, label %do.body.5, label %if.then, !dbg !4848

if.then:                                          ; preds = %entry
  %call = tail call i32 %visit(%struct._object* %0, i8* %arg) #1, !dbg !4849
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !1379, metadata !2664), !dbg !4849
  %tobool2 = icmp eq i32 %call, 0, !dbg !4851
  br i1 %tobool2, label %do.body.5, label %return

do.body.5:                                        ; preds = %entry, %if.then
  %selectors = getelementptr inbounds %struct.compressobject, %struct.compressobject* %lz, i64 0, i32 2, !dbg !4853
  %1 = load %struct._object*, %struct._object** %selectors, align 8, !dbg !4853, !tbaa !4449
  %tobool6 = icmp eq %struct._object* %1, null, !dbg !4853
  br i1 %tobool6, label %do.end.18, label %if.then.7, !dbg !4855

if.then.7:                                        ; preds = %do.body.5
  %call10 = tail call i32 %visit(%struct._object* %1, i8* %arg) #1, !dbg !4856
  tail call void @llvm.dbg.value(metadata i32 %call10, i64 0, metadata !1383, metadata !2664), !dbg !4856
  %tobool11 = icmp eq i32 %call10, 0, !dbg !4858
  br i1 %tobool11, label %do.end.18, label %return

do.end.18:                                        ; preds = %do.body.5, %if.then.7
  br label %return, !dbg !4860

return:                                           ; preds = %if.then.7, %if.then, %do.end.18
  %retval.3 = phi i32 [ 0, %do.end.18 ], [ %call10, %if.then.7 ], [ %call, %if.then ]
  ret i32 %retval.3, !dbg !4861
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @compress_next(%struct.compressobject* nocapture readonly %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.compressobject* %lz, i64 0, metadata !1391, metadata !2664), !dbg !4862
  %data1 = getelementptr inbounds %struct.compressobject, %struct.compressobject* %lz, i64 0, i32 1, !dbg !4863
  %0 = load %struct._object*, %struct._object** %data1, align 8, !dbg !4863, !tbaa !4436
  tail call void @llvm.dbg.value(metadata %struct._object* %0, i64 0, metadata !1392, metadata !2664), !dbg !4864
  %selectors2 = getelementptr inbounds %struct.compressobject, %struct.compressobject* %lz, i64 0, i32 2, !dbg !4865
  %1 = load %struct._object*, %struct._object** %selectors2, align 8, !dbg !4865, !tbaa !4449
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1393, metadata !2664), !dbg !4866
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i64 0, i32 1, !dbg !4867
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4867, !tbaa !2667
  %tp_iternext = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i64 0, i32 26, !dbg !4868
  %3 = load %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)** %tp_iternext, align 8, !dbg !4868, !tbaa !3882
  tail call void @llvm.dbg.value(metadata %struct._object* (%struct._object*)* %3, i64 0, metadata !1396, metadata !2664), !dbg !4869
  %ob_type3 = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !4870
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type3, align 8, !dbg !4870, !tbaa !2667
  %tp_iternext4 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i64 0, i32 26, !dbg !4871
  %5 = load %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)** %tp_iternext4, align 8, !dbg !4871, !tbaa !3882
  tail call void @llvm.dbg.value(metadata %struct._object* (%struct._object*)* %5, i64 0, metadata !1397, metadata !2664), !dbg !4872
  br label %while.body, !dbg !4873

while.body:                                       ; preds = %if.end.38, %entry
  %call = tail call %struct._object* %3(%struct._object* %0) #1, !dbg !4874
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1394, metadata !2664), !dbg !4875
  %cmp = icmp eq %struct._object* %call, null, !dbg !4876
  br i1 %cmp, label %cleanup.loopexit, label %if.end, !dbg !4878

if.end:                                           ; preds = %while.body
  %call5 = tail call %struct._object* %5(%struct._object* %1) #1, !dbg !4879
  tail call void @llvm.dbg.value(metadata %struct._object* %call5, i64 0, metadata !1395, metadata !2664), !dbg !4880
  %cmp6 = icmp eq %struct._object* %call5, null, !dbg !4881
  br i1 %cmp6, label %do.body, label %if.end.12, !dbg !4882

do.body:                                          ; preds = %if.end
  %call.lcssa80 = phi %struct._object* [ %call, %if.end ]
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1399, metadata !2664), !dbg !4883
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call.lcssa80, i64 0, i32 0, !dbg !4885
  %6 = load i64, i64* %ob_refcnt, align 8, !dbg !4885, !tbaa !2694
  %dec = add i64 %6, -1, !dbg !4885
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4885, !tbaa !2694
  %cmp8 = icmp eq i64 %dec, 0, !dbg !4885
  br i1 %cmp8, label %if.else, label %cleanup, !dbg !4887

if.else:                                          ; preds = %do.body
  %ob_type10 = getelementptr inbounds %struct._object, %struct._object* %call.lcssa80, i64 0, i32 1, !dbg !4888
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type10, align 8, !dbg !4888, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i64 0, i32 4, !dbg !4888
  %8 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4888, !tbaa !2717
  tail call void %8(%struct._object* %call.lcssa80) #1, !dbg !4888
  br label %cleanup

if.end.12:                                        ; preds = %if.end
  %call13 = tail call i32 @PyObject_IsTrue(%struct._object* %call5) #1, !dbg !4890
  tail call void @llvm.dbg.value(metadata i32 %call13, i64 0, metadata !1398, metadata !2664), !dbg !4891
  tail call void @llvm.dbg.value(metadata %struct._object* %call5, i64 0, metadata !1404, metadata !2664), !dbg !4892
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %call5, i64 0, i32 0, !dbg !4894
  %9 = load i64, i64* %ob_refcnt16, align 8, !dbg !4894, !tbaa !2694
  %dec17 = add i64 %9, -1, !dbg !4894
  store i64 %dec17, i64* %ob_refcnt16, align 8, !dbg !4894, !tbaa !2694
  %cmp18 = icmp eq i64 %dec17, 0, !dbg !4894
  br i1 %cmp18, label %if.else.20, label %if.end.23, !dbg !4896

if.else.20:                                       ; preds = %if.end.12
  %ob_type21 = getelementptr inbounds %struct._object, %struct._object* %call5, i64 0, i32 1, !dbg !4897
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type21, align 8, !dbg !4897, !tbaa !2667
  %tp_dealloc22 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i64 0, i32 4, !dbg !4897
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc22, align 8, !dbg !4897, !tbaa !2717
  tail call void %11(%struct._object* %call5) #1, !dbg !4897
  br label %if.end.23

if.end.23:                                        ; preds = %if.end.12, %if.else.20
  %cmp26 = icmp eq i32 %call13, 1, !dbg !4899
  br i1 %cmp26, label %cleanup.loopexit, label %do.body.29, !dbg !4901

do.body.29:                                       ; preds = %if.end.23
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1406, metadata !2664), !dbg !4902
  %ob_refcnt31 = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 0, !dbg !4904
  %12 = load i64, i64* %ob_refcnt31, align 8, !dbg !4904, !tbaa !2694
  %dec32 = add i64 %12, -1, !dbg !4904
  store i64 %dec32, i64* %ob_refcnt31, align 8, !dbg !4904, !tbaa !2694
  %cmp33 = icmp eq i64 %dec32, 0, !dbg !4904
  br i1 %cmp33, label %if.else.35, label %if.end.38, !dbg !4906

if.else.35:                                       ; preds = %do.body.29
  %ob_type36 = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 1, !dbg !4907
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type36, align 8, !dbg !4907, !tbaa !2667
  %tp_dealloc37 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i64 0, i32 4, !dbg !4907
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc37, align 8, !dbg !4907, !tbaa !2717
  tail call void %14(%struct._object* %call) #1, !dbg !4907
  br label %if.end.38

if.end.38:                                        ; preds = %do.body.29, %if.else.35
  %cmp41 = icmp slt i32 %call13, 0, !dbg !4909
  br i1 %cmp41, label %cleanup.loopexit, label %while.body, !dbg !4911

cleanup.loopexit:                                 ; preds = %while.body, %if.end.23, %if.end.38
  %retval.0.ph = phi %struct._object* [ null, %while.body ], [ %call, %if.end.23 ], [ null, %if.end.38 ]
  br label %cleanup, !dbg !4912

cleanup:                                          ; preds = %cleanup.loopexit, %if.else, %do.body
  %retval.0 = phi %struct._object* [ null, %do.body ], [ null, %if.else ], [ %retval.0.ph, %cleanup.loopexit ]
  ret %struct._object* %retval.0, !dbg !4912
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @compress_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %seq1 = alloca %struct._object*, align 8
  %seq2 = alloca %struct._object*, align 8
  tail call void @llvm.dbg.value(metadata %struct._typeobject* %type, i64 0, metadata !1413, metadata !2664), !dbg !4913
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1414, metadata !2664), !dbg !4914
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !1415, metadata !2664), !dbg !4915
  %0 = bitcast %struct._object** %seq1 to i8*, !dbg !4916
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4916
  %1 = bitcast %struct._object** %seq2 to i8*, !dbg !4916
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !4916
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1418, metadata !2664), !dbg !4917
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1419, metadata !2664), !dbg !4918
  tail call void @llvm.dbg.value(metadata %struct._object** %seq1, i64 0, metadata !1416, metadata !2664), !dbg !4919
  tail call void @llvm.dbg.value(metadata %struct._object** %seq2, i64 0, metadata !1417, metadata !2664), !dbg !4920
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %args, %struct._object* %kwds, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.52, i64 0, i64 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @compress_new.kwargs, i64 0, i64 0), %struct._object** nonnull %seq1, %struct._object** nonnull %seq2) #1, !dbg !4921
  %tobool = icmp eq i32 %call, 0, !dbg !4921
  br i1 %tobool, label %cleanup, label %if.end, !dbg !4923

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct._object** %seq1, i64 0, metadata !1416, metadata !2664), !dbg !4919
  %2 = load %struct._object*, %struct._object** %seq1, align 8, !dbg !4924, !tbaa !2681
  %call1 = call %struct._object* @PyObject_GetIter(%struct._object* %2) #1, !dbg !4925
  call void @llvm.dbg.value(metadata %struct._object* %call1, i64 0, metadata !1418, metadata !2664), !dbg !4917
  %cmp = icmp eq %struct._object* %call1, null, !dbg !4926
  br i1 %cmp, label %cleanup, label %if.end.3, !dbg !4928

if.end.3:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct._object** %seq2, i64 0, metadata !1417, metadata !2664), !dbg !4920
  %3 = load %struct._object*, %struct._object** %seq2, align 8, !dbg !4929, !tbaa !2681
  %call4 = call %struct._object* @PyObject_GetIter(%struct._object* %3) #1, !dbg !4930
  call void @llvm.dbg.value(metadata %struct._object* %call4, i64 0, metadata !1419, metadata !2664), !dbg !4918
  %cmp5 = icmp eq %struct._object* %call4, null, !dbg !4931
  br i1 %cmp5, label %do.body.16, label %if.end.7, !dbg !4933

if.end.7:                                         ; preds = %if.end.3
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %type, i64 0, i32 36, !dbg !4934
  %4 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !4934, !tbaa !2835
  %call8 = call %struct._object* %4(%struct._typeobject* %type, i64 0) #1, !dbg !4935
  %cmp9 = icmp eq %struct._object* %call8, null, !dbg !4936
  br i1 %cmp9, label %do.body.16, label %if.end.11, !dbg !4938

if.end.11:                                        ; preds = %if.end.7
  %data12 = getelementptr inbounds %struct._object, %struct._object* %call8, i64 1, !dbg !4939
  %5 = bitcast %struct._object* %data12 to %struct._object**, !dbg !4939
  store %struct._object* %call1, %struct._object** %5, align 8, !dbg !4940, !tbaa !4436
  %selectors13 = getelementptr inbounds %struct._object, %struct._object* %call8, i64 1, i32 1, !dbg !4941
  %6 = bitcast %struct._typeobject** %selectors13 to %struct._object**, !dbg !4941
  store %struct._object* %call4, %struct._object** %6, align 8, !dbg !4942, !tbaa !4449
  br label %cleanup, !dbg !4943

do.body.16:                                       ; preds = %if.end.3, %if.end.7
  call void @llvm.dbg.value(metadata %struct._object* %call1, i64 0, metadata !1421, metadata !2664), !dbg !4944
  call void @llvm.dbg.value(metadata %struct._object* %call1, i64 0, metadata !1423, metadata !2664), !dbg !4946
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call1, i64 0, i32 0, !dbg !4948
  %7 = load i64, i64* %ob_refcnt, align 8, !dbg !4948, !tbaa !2694
  %dec = add i64 %7, -1, !dbg !4948
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4948, !tbaa !2694
  %cmp17 = icmp eq i64 %dec, 0, !dbg !4948
  br i1 %cmp17, label %if.else, label %if.end.20, !dbg !4950

if.else:                                          ; preds = %do.body.16
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call1, i64 0, i32 1, !dbg !4951
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4951, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i64 0, i32 4, !dbg !4951
  %9 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4951, !tbaa !2717
  call void %9(%struct._object* %call1) #1, !dbg !4951
  br label %if.end.20

if.end.20:                                        ; preds = %if.else, %do.body.16
  br i1 %cmp5, label %cleanup, label %do.body.27, !dbg !4953

do.body.27:                                       ; preds = %if.end.20
  %ob_refcnt29 = getelementptr inbounds %struct._object, %struct._object* %call4, i64 0, i32 0, !dbg !4954
  %10 = load i64, i64* %ob_refcnt29, align 8, !dbg !4954, !tbaa !2694
  %dec30 = add i64 %10, -1, !dbg !4954
  store i64 %dec30, i64* %ob_refcnt29, align 8, !dbg !4954, !tbaa !2694
  %cmp31 = icmp eq i64 %dec30, 0, !dbg !4954
  br i1 %cmp31, label %if.else.33, label %cleanup, !dbg !4956

if.else.33:                                       ; preds = %do.body.27
  %ob_type34 = getelementptr inbounds %struct._object, %struct._object* %call4, i64 0, i32 1, !dbg !4957
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type34, align 8, !dbg !4957, !tbaa !2667
  %tp_dealloc35 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i64 0, i32 4, !dbg !4957
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc35, align 8, !dbg !4957, !tbaa !2717
  call void %12(%struct._object* %call4) #1, !dbg !4957
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.end.20, %do.body.27, %if.else.33, %entry, %if.end.11
  %retval.0 = phi %struct._object* [ %call8, %if.end.11 ], [ null, %entry ], [ null, %if.else.33 ], [ null, %do.body.27 ], [ null, %if.end.20 ], [ null, %if.end ]
  call void @llvm.lifetime.end(i64 8, i8* %1) #1, !dbg !4959
  call void @llvm.lifetime.end(i64 8, i8* %0) #1, !dbg !4959
  ret %struct._object* %retval.0, !dbg !4959
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @compress_reduce(%struct.compressobject* nocapture readonly %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.compressobject* %lz, i64 0, metadata !1410, metadata !2664), !dbg !4960
  %ob_type = getelementptr inbounds %struct.compressobject, %struct.compressobject* %lz, i64 0, i32 0, i32 1, !dbg !4961
  %0 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4961, !tbaa !2667
  %data = getelementptr inbounds %struct.compressobject, %struct.compressobject* %lz, i64 0, i32 1, !dbg !4962
  %1 = load %struct._object*, %struct._object** %data, align 8, !dbg !4962, !tbaa !4436
  %selectors = getelementptr inbounds %struct.compressobject, %struct.compressobject* %lz, i64 0, i32 2, !dbg !4963
  %2 = load %struct._object*, %struct._object** %selectors, align 8, !dbg !4963, !tbaa !4449
  %call = tail call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i64 0, i64 0), %struct._typeobject* %0, %struct._object* %1, %struct._object* %2) #1, !dbg !4964
  ret %struct._object* %call, !dbg !4965
}

; Function Attrs: nounwind uwtable
define internal void @filterfalse_dealloc(%struct.filterfalseobject* %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.filterfalseobject* %lz, i64 0, metadata !1435, metadata !2664), !dbg !4966
  %0 = bitcast %struct.filterfalseobject* %lz to i8*, !dbg !4967
  tail call void @PyObject_GC_UnTrack(i8* %0) #1, !dbg !4968
  %func = getelementptr inbounds %struct.filterfalseobject, %struct.filterfalseobject* %lz, i64 0, i32 1, !dbg !4969
  %1 = load %struct._object*, %struct._object** %func, align 8, !dbg !4969, !tbaa !4436
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1436, metadata !2664), !dbg !4969
  %cmp = icmp eq %struct._object* %1, null, !dbg !4971
  br i1 %cmp, label %if.end.4, label %do.body.1, !dbg !4972

do.body.1:                                        ; preds = %entry
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1438, metadata !2664), !dbg !4973
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !4975
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !4975, !tbaa !2694
  %dec = add i64 %2, -1, !dbg !4975
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4975, !tbaa !2694
  %cmp2 = icmp eq i64 %dec, 0, !dbg !4975
  br i1 %cmp2, label %if.else, label %if.end.4, !dbg !4977

if.else:                                          ; preds = %do.body.1
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !4978
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4978, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 4, !dbg !4978
  %4 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4978, !tbaa !2717
  tail call void %4(%struct._object* %1) #1, !dbg !4978
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %do.body.1, %entry
  %it = getelementptr inbounds %struct.filterfalseobject, %struct.filterfalseobject* %lz, i64 0, i32 2, !dbg !4980
  %5 = load %struct._object*, %struct._object** %it, align 8, !dbg !4980, !tbaa !4449
  tail call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !1441, metadata !2664), !dbg !4980
  %cmp9 = icmp eq %struct._object* %5, null, !dbg !4982
  br i1 %cmp9, label %if.end.23, label %do.body.11, !dbg !4983

do.body.11:                                       ; preds = %if.end.4
  tail call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !1443, metadata !2664), !dbg !4984
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 0, !dbg !4986
  %6 = load i64, i64* %ob_refcnt13, align 8, !dbg !4986, !tbaa !2694
  %dec14 = add i64 %6, -1, !dbg !4986
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !4986, !tbaa !2694
  %cmp15 = icmp eq i64 %dec14, 0, !dbg !4986
  br i1 %cmp15, label %if.else.17, label %if.end.23, !dbg !4988

if.else.17:                                       ; preds = %do.body.11
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 1, !dbg !4989
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !4989, !tbaa !2667
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i64 0, i32 4, !dbg !4989
  %8 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !4989, !tbaa !2717
  tail call void %8(%struct._object* %5) #1, !dbg !4989
  br label %if.end.23

if.end.23:                                        ; preds = %if.else.17, %do.body.11, %if.end.4
  %ob_type26 = getelementptr inbounds %struct.filterfalseobject, %struct.filterfalseobject* %lz, i64 0, i32 0, i32 1, !dbg !4991
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type26, align 8, !dbg !4991, !tbaa !2667
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i64 0, i32 38, !dbg !4992
  %10 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !4992, !tbaa !2744
  tail call void %10(i8* %0) #1, !dbg !4991
  ret void, !dbg !4993
}

; Function Attrs: nounwind uwtable
define internal i32 @filterfalse_traverse(%struct.filterfalseobject* nocapture readonly %lz, i32 (%struct._object*, i8*)* nocapture %visit, i8* %arg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.filterfalseobject* %lz, i64 0, metadata !1450, metadata !2664), !dbg !4994
  tail call void @llvm.dbg.value(metadata i32 (%struct._object*, i8*)* %visit, i64 0, metadata !1451, metadata !2664), !dbg !4995
  tail call void @llvm.dbg.value(metadata i8* %arg, i64 0, metadata !1452, metadata !2664), !dbg !4996
  %it = getelementptr inbounds %struct.filterfalseobject, %struct.filterfalseobject* %lz, i64 0, i32 2, !dbg !4997
  %0 = load %struct._object*, %struct._object** %it, align 8, !dbg !4997, !tbaa !4449
  %tobool = icmp eq %struct._object* %0, null, !dbg !4997
  br i1 %tobool, label %do.body.5, label %if.then, !dbg !4999

if.then:                                          ; preds = %entry
  %call = tail call i32 %visit(%struct._object* %0, i8* %arg) #1, !dbg !5000
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !1453, metadata !2664), !dbg !5000
  %tobool2 = icmp eq i32 %call, 0, !dbg !5002
  br i1 %tobool2, label %do.body.5, label %return

do.body.5:                                        ; preds = %entry, %if.then
  %func = getelementptr inbounds %struct.filterfalseobject, %struct.filterfalseobject* %lz, i64 0, i32 1, !dbg !5004
  %1 = load %struct._object*, %struct._object** %func, align 8, !dbg !5004, !tbaa !4436
  %tobool6 = icmp eq %struct._object* %1, null, !dbg !5004
  br i1 %tobool6, label %do.end.18, label %if.then.7, !dbg !5006

if.then.7:                                        ; preds = %do.body.5
  %call10 = tail call i32 %visit(%struct._object* %1, i8* %arg) #1, !dbg !5007
  tail call void @llvm.dbg.value(metadata i32 %call10, i64 0, metadata !1457, metadata !2664), !dbg !5007
  %tobool11 = icmp eq i32 %call10, 0, !dbg !5009
  br i1 %tobool11, label %do.end.18, label %return

do.end.18:                                        ; preds = %do.body.5, %if.then.7
  br label %return, !dbg !5011

return:                                           ; preds = %if.then.7, %if.then, %do.end.18
  %retval.3 = phi i32 [ 0, %do.end.18 ], [ %call10, %if.then.7 ], [ %call, %if.then ]
  ret i32 %retval.3, !dbg !5012
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @filterfalse_next(%struct.filterfalseobject* nocapture readonly %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.filterfalseobject* %lz, i64 0, metadata !1465, metadata !2664), !dbg !5013
  %it1 = getelementptr inbounds %struct.filterfalseobject, %struct.filterfalseobject* %lz, i64 0, i32 2, !dbg !5014
  %0 = load %struct._object*, %struct._object** %it1, align 8, !dbg !5014, !tbaa !4449
  tail call void @llvm.dbg.value(metadata %struct._object* %0, i64 0, metadata !1467, metadata !2664), !dbg !5015
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i64 0, i32 1, !dbg !5016
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5016, !tbaa !2667
  %tp_iternext = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i64 0, i32 26, !dbg !5017
  %2 = load %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)** %tp_iternext, align 8, !dbg !5017, !tbaa !3882
  tail call void @llvm.dbg.value(metadata %struct._object* (%struct._object*)* %2, i64 0, metadata !1469, metadata !2664), !dbg !5018
  %func = getelementptr inbounds %struct.filterfalseobject, %struct.filterfalseobject* %lz, i64 0, i32 1, !dbg !5019
  br label %for.cond, !dbg !5020

for.cond:                                         ; preds = %if.end.49, %entry
  %call = tail call %struct._object* %2(%struct._object* %0) #1, !dbg !5021
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1466, metadata !2664), !dbg !5022
  %cmp = icmp eq %struct._object* %call, null, !dbg !5023
  br i1 %cmp, label %cleanup.56.loopexit, label %if.end, !dbg !5025

if.end:                                           ; preds = %for.cond
  %3 = load %struct._object*, %struct._object** %func, align 8, !dbg !5019, !tbaa !4436
  %cmp2 = icmp eq %struct._object* %3, @_Py_NoneStruct, !dbg !5026
  %cmp4 = icmp eq %struct._object* %3, getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyBool_Type, i64 0, i32 0, i32 0), !dbg !5027
  %or.cond = or i1 %cmp2, %cmp4, !dbg !5028
  br i1 %or.cond, label %if.then.5, label %if.else, !dbg !5028

if.then.5:                                        ; preds = %if.end
  %call6 = tail call i32 @PyObject_IsTrue(%struct._object* %call) #1, !dbg !5029
  %conv = sext i32 %call6 to i64, !dbg !5029
  tail call void @llvm.dbg.value(metadata i64 %conv, i64 0, metadata !1468, metadata !2664), !dbg !5031
  br label %if.end.34, !dbg !5032

if.else:                                          ; preds = %if.end
  %call8 = tail call %struct._object* (%struct._object*, ...) @PyObject_CallFunctionObjArgs(%struct._object* %3, %struct._object* %call, i8* null) #1, !dbg !5033
  tail call void @llvm.dbg.value(metadata %struct._object* %call8, i64 0, metadata !1470, metadata !2664), !dbg !5034
  %cmp9 = icmp eq %struct._object* %call8, null, !dbg !5035
  br i1 %cmp9, label %do.body, label %if.end.18, !dbg !5036

do.body:                                          ; preds = %if.else
  %call.lcssa91 = phi %struct._object* [ %call, %if.else ]
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1476, metadata !2664), !dbg !5037
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call.lcssa91, i64 0, i32 0, !dbg !5039
  %4 = load i64, i64* %ob_refcnt, align 8, !dbg !5039, !tbaa !2694
  %dec = add i64 %4, -1, !dbg !5039
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5039, !tbaa !2694
  %cmp12 = icmp eq i64 %dec, 0, !dbg !5039
  br i1 %cmp12, label %if.else.15, label %cleanup.56, !dbg !5041

if.else.15:                                       ; preds = %do.body
  %ob_type16 = getelementptr inbounds %struct._object, %struct._object* %call.lcssa91, i64 0, i32 1, !dbg !5042
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type16, align 8, !dbg !5042, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i64 0, i32 4, !dbg !5042
  %6 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5042, !tbaa !2717
  tail call void %6(%struct._object* %call.lcssa91) #1, !dbg !5042
  br label %cleanup.56

if.end.18:                                        ; preds = %if.else
  %call19 = tail call i32 @PyObject_IsTrue(%struct._object* %call8) #1, !dbg !5044
  %conv20 = sext i32 %call19 to i64, !dbg !5044
  tail call void @llvm.dbg.value(metadata i64 %conv20, i64 0, metadata !1468, metadata !2664), !dbg !5031
  tail call void @llvm.dbg.value(metadata %struct._object* %call8, i64 0, metadata !1480, metadata !2664), !dbg !5045
  %ob_refcnt23 = getelementptr inbounds %struct._object, %struct._object* %call8, i64 0, i32 0, !dbg !5047
  %7 = load i64, i64* %ob_refcnt23, align 8, !dbg !5047, !tbaa !2694
  %dec24 = add i64 %7, -1, !dbg !5047
  store i64 %dec24, i64* %ob_refcnt23, align 8, !dbg !5047, !tbaa !2694
  %cmp25 = icmp eq i64 %dec24, 0, !dbg !5047
  br i1 %cmp25, label %if.else.28, label %if.end.34, !dbg !5049

if.else.28:                                       ; preds = %if.end.18
  %ob_type29 = getelementptr inbounds %struct._object, %struct._object* %call8, i64 0, i32 1, !dbg !5050
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type29, align 8, !dbg !5050, !tbaa !2667
  %tp_dealloc30 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i64 0, i32 4, !dbg !5050
  %9 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc30, align 8, !dbg !5050, !tbaa !2717
  tail call void %9(%struct._object* %call8) #1, !dbg !5050
  br label %if.end.34

if.end.34:                                        ; preds = %if.else.28, %if.end.18, %if.then.5
  %ok.2 = phi i64 [ %conv, %if.then.5 ], [ %conv20, %if.end.18 ], [ %conv20, %if.else.28 ]
  %cmp35 = icmp eq i64 %ok.2, 0, !dbg !5052
  br i1 %cmp35, label %cleanup.56.loopexit, label %do.body.39, !dbg !5054

do.body.39:                                       ; preds = %if.end.34
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1482, metadata !2664), !dbg !5055
  %ob_refcnt41 = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 0, !dbg !5057
  %10 = load i64, i64* %ob_refcnt41, align 8, !dbg !5057, !tbaa !2694
  %dec42 = add i64 %10, -1, !dbg !5057
  store i64 %dec42, i64* %ob_refcnt41, align 8, !dbg !5057, !tbaa !2694
  %cmp43 = icmp eq i64 %dec42, 0, !dbg !5057
  br i1 %cmp43, label %if.else.46, label %if.end.49, !dbg !5059

if.else.46:                                       ; preds = %do.body.39
  %ob_type47 = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 1, !dbg !5060
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type47, align 8, !dbg !5060, !tbaa !2667
  %tp_dealloc48 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i64 0, i32 4, !dbg !5060
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc48, align 8, !dbg !5060, !tbaa !2717
  tail call void %12(%struct._object* %call) #1, !dbg !5060
  br label %if.end.49

if.end.49:                                        ; preds = %do.body.39, %if.else.46
  %cmp52 = icmp slt i64 %ok.2, 0, !dbg !5062
  br i1 %cmp52, label %cleanup.56.loopexit, label %for.cond, !dbg !5064

cleanup.56.loopexit:                              ; preds = %for.cond, %if.end.34, %if.end.49
  %retval.3.ph = phi %struct._object* [ null, %for.cond ], [ %call, %if.end.34 ], [ null, %if.end.49 ]
  br label %cleanup.56, !dbg !5065

cleanup.56:                                       ; preds = %cleanup.56.loopexit, %do.body, %if.else.15
  %retval.3 = phi %struct._object* [ null, %if.else.15 ], [ null, %do.body ], [ %retval.3.ph, %cleanup.56.loopexit ]
  ret %struct._object* %retval.3, !dbg !5065
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @filterfalse_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %func = alloca %struct._object*, align 8
  %seq = alloca %struct._object*, align 8
  tail call void @llvm.dbg.value(metadata %struct._typeobject* %type, i64 0, metadata !1489, metadata !2664), !dbg !5066
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1490, metadata !2664), !dbg !5067
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !1491, metadata !2664), !dbg !5068
  %0 = bitcast %struct._object** %func to i8*, !dbg !5069
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5069
  %1 = bitcast %struct._object** %seq to i8*, !dbg !5069
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !5069
  %cmp = icmp eq %struct._typeobject* %type, @filterfalse_type, !dbg !5070
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5072

land.lhs.true:                                    ; preds = %entry
  %call = tail call i32 @_PyArg_NoKeywords(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.54, i64 0, i64 0), %struct._object* %kwds) #1, !dbg !5073
  %tobool = icmp eq i32 %call, 0, !dbg !5073
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5074

if.end:                                           ; preds = %land.lhs.true, %entry
  tail call void @llvm.dbg.value(metadata %struct._object** %func, i64 0, metadata !1492, metadata !2664), !dbg !5075
  tail call void @llvm.dbg.value(metadata %struct._object** %seq, i64 0, metadata !1493, metadata !2664), !dbg !5076
  %call1 = call i32 (%struct._object*, i8*, i64, i64, ...) @PyArg_UnpackTuple(%struct._object* %args, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.55, i64 0, i64 0), i64 2, i64 2, %struct._object** nonnull %func, %struct._object** nonnull %seq) #1, !dbg !5077
  %tobool2 = icmp eq i32 %call1, 0, !dbg !5077
  br i1 %tobool2, label %cleanup, label %if.end.4, !dbg !5079

if.end.4:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct._object** %seq, i64 0, metadata !1493, metadata !2664), !dbg !5076
  %2 = load %struct._object*, %struct._object** %seq, align 8, !dbg !5080, !tbaa !2681
  %call5 = call %struct._object* @PyObject_GetIter(%struct._object* %2) #1, !dbg !5081
  call void @llvm.dbg.value(metadata %struct._object* %call5, i64 0, metadata !1494, metadata !2664), !dbg !5082
  %cmp6 = icmp eq %struct._object* %call5, null, !dbg !5083
  br i1 %cmp6, label %cleanup, label %if.end.8, !dbg !5085

if.end.8:                                         ; preds = %if.end.4
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %type, i64 0, i32 36, !dbg !5086
  %3 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !5086, !tbaa !2835
  %call9 = call %struct._object* %3(%struct._typeobject* %type, i64 0) #1, !dbg !5087
  %cmp10 = icmp eq %struct._object* %call9, null, !dbg !5088
  br i1 %cmp10, label %do.body, label %if.end.15, !dbg !5089

do.body:                                          ; preds = %if.end.8
  call void @llvm.dbg.value(metadata %struct._object* %call5, i64 0, metadata !1496, metadata !2664), !dbg !5090
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call5, i64 0, i32 0, !dbg !5092
  %4 = load i64, i64* %ob_refcnt, align 8, !dbg !5092, !tbaa !2694
  %dec = add i64 %4, -1, !dbg !5092
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5092, !tbaa !2694
  %cmp12 = icmp eq i64 %dec, 0, !dbg !5092
  br i1 %cmp12, label %if.else, label %cleanup, !dbg !5094

if.else:                                          ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call5, i64 0, i32 1, !dbg !5095
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5095, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i64 0, i32 4, !dbg !5095
  %6 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5095, !tbaa !2717
  call void %6(%struct._object* %call5) #1, !dbg !5095
  br label %cleanup

if.end.15:                                        ; preds = %if.end.8
  call void @llvm.dbg.value(metadata %struct._object** %func, i64 0, metadata !1492, metadata !2664), !dbg !5075
  %7 = load %struct._object*, %struct._object** %func, align 8, !dbg !5097, !tbaa !2681
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %7, i64 0, i32 0, !dbg !5097
  %8 = load i64, i64* %ob_refcnt16, align 8, !dbg !5097, !tbaa !2694
  %inc = add i64 %8, 1, !dbg !5097
  store i64 %inc, i64* %ob_refcnt16, align 8, !dbg !5097, !tbaa !2694
  call void @llvm.dbg.value(metadata %struct._object** %func, i64 0, metadata !1492, metadata !2664), !dbg !5075
  %9 = ptrtoint %struct._object* %7 to i64, !dbg !5098
  %10 = getelementptr inbounds %struct._object, %struct._object* %call9, i64 1, i32 0, !dbg !5099
  store i64 %9, i64* %10, align 8, !dbg !5099, !tbaa !4436
  %it18 = getelementptr inbounds %struct._object, %struct._object* %call9, i64 1, i32 1, !dbg !5100
  %11 = bitcast %struct._typeobject** %it18 to %struct._object**, !dbg !5100
  store %struct._object* %call5, %struct._object** %11, align 8, !dbg !5101, !tbaa !4449
  br label %cleanup, !dbg !5102

cleanup:                                          ; preds = %if.else, %do.body, %if.end.4, %if.end, %land.lhs.true, %if.end.15
  %retval.0 = phi %struct._object* [ %call9, %if.end.15 ], [ null, %land.lhs.true ], [ null, %if.end ], [ null, %if.end.4 ], [ null, %do.body ], [ null, %if.else ]
  call void @llvm.lifetime.end(i64 8, i8* %1) #1, !dbg !5103
  call void @llvm.lifetime.end(i64 8, i8* %0) #1, !dbg !5103
  ret %struct._object* %retval.0, !dbg !5103
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @filterfalse_reduce(%struct.filterfalseobject* nocapture readonly %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.filterfalseobject* %lz, i64 0, metadata !1486, metadata !2664), !dbg !5104
  %ob_type = getelementptr inbounds %struct.filterfalseobject, %struct.filterfalseobject* %lz, i64 0, i32 0, i32 1, !dbg !5105
  %0 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5105, !tbaa !2667
  %func = getelementptr inbounds %struct.filterfalseobject, %struct.filterfalseobject* %lz, i64 0, i32 1, !dbg !5106
  %1 = load %struct._object*, %struct._object** %func, align 8, !dbg !5106, !tbaa !4436
  %it = getelementptr inbounds %struct.filterfalseobject, %struct.filterfalseobject* %lz, i64 0, i32 2, !dbg !5107
  %2 = load %struct._object*, %struct._object** %it, align 8, !dbg !5107, !tbaa !4449
  %call = tail call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i64 0, i64 0), %struct._typeobject* %0, %struct._object* %1, %struct._object* %2) #1, !dbg !5108
  ret %struct._object* %call, !dbg !5109
}

; Function Attrs: nounwind uwtable
define internal void @count_dealloc(%struct.countobject* %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.countobject* %lz, i64 0, metadata !1504, metadata !2664), !dbg !5110
  %0 = bitcast %struct.countobject* %lz to i8*, !dbg !5111
  tail call void @PyObject_GC_UnTrack(i8* %0) #1, !dbg !5112
  %long_cnt = getelementptr inbounds %struct.countobject, %struct.countobject* %lz, i64 0, i32 2, !dbg !5113
  %1 = load %struct._object*, %struct._object** %long_cnt, align 8, !dbg !5113, !tbaa !5115
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1505, metadata !2664), !dbg !5113
  %cmp = icmp eq %struct._object* %1, null, !dbg !5117
  br i1 %cmp, label %if.end.4, label %do.body.1, !dbg !5118

do.body.1:                                        ; preds = %entry
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1507, metadata !2664), !dbg !5119
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !5121
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !5121, !tbaa !2694
  %dec = add i64 %2, -1, !dbg !5121
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5121, !tbaa !2694
  %cmp2 = icmp eq i64 %dec, 0, !dbg !5121
  br i1 %cmp2, label %if.else, label %if.end.4, !dbg !5123

if.else:                                          ; preds = %do.body.1
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !5124
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5124, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 4, !dbg !5124
  %4 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5124, !tbaa !2717
  tail call void %4(%struct._object* %1) #1, !dbg !5124
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %do.body.1, %entry
  %long_step = getelementptr inbounds %struct.countobject, %struct.countobject* %lz, i64 0, i32 3, !dbg !5126
  %5 = load %struct._object*, %struct._object** %long_step, align 8, !dbg !5126, !tbaa !5128
  tail call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !1510, metadata !2664), !dbg !5126
  %cmp9 = icmp eq %struct._object* %5, null, !dbg !5129
  br i1 %cmp9, label %if.end.23, label %do.body.11, !dbg !5130

do.body.11:                                       ; preds = %if.end.4
  tail call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !1512, metadata !2664), !dbg !5131
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 0, !dbg !5133
  %6 = load i64, i64* %ob_refcnt13, align 8, !dbg !5133, !tbaa !2694
  %dec14 = add i64 %6, -1, !dbg !5133
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !5133, !tbaa !2694
  %cmp15 = icmp eq i64 %dec14, 0, !dbg !5133
  br i1 %cmp15, label %if.else.17, label %if.end.23, !dbg !5135

if.else.17:                                       ; preds = %do.body.11
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 1, !dbg !5136
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !5136, !tbaa !2667
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i64 0, i32 4, !dbg !5136
  %8 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !5136, !tbaa !2717
  tail call void %8(%struct._object* %5) #1, !dbg !5136
  br label %if.end.23

if.end.23:                                        ; preds = %if.else.17, %do.body.11, %if.end.4
  %ob_type26 = getelementptr inbounds %struct.countobject, %struct.countobject* %lz, i64 0, i32 0, i32 1, !dbg !5138
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type26, align 8, !dbg !5138, !tbaa !2667
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i64 0, i32 38, !dbg !5139
  %10 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !5139, !tbaa !2744
  tail call void %10(i8* %0) #1, !dbg !5138
  ret void, !dbg !5140
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @count_repr(%struct.countobject* nocapture readonly %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.countobject* %lz, i64 0, metadata !1519, metadata !2664), !dbg !5141
  %cnt = getelementptr inbounds %struct.countobject, %struct.countobject* %lz, i64 0, i32 1, !dbg !5142
  %0 = load i64, i64* %cnt, align 8, !dbg !5142, !tbaa !5144
  %cmp = icmp eq i64 %0, 9223372036854775807, !dbg !5145
  br i1 %cmp, label %if.end, label %if.then, !dbg !5146

if.then:                                          ; preds = %entry
  %call = tail call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.57, i64 0, i64 0), i64 %0) #1, !dbg !5147
  br label %return, !dbg !5148

if.end:                                           ; preds = %entry
  %long_step = getelementptr inbounds %struct.countobject, %struct.countobject* %lz, i64 0, i32 3, !dbg !5149
  %1 = load %struct._object*, %struct._object** %long_step, align 8, !dbg !5149, !tbaa !5128
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !5149
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5149, !tbaa !2667
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i64 0, i32 19, !dbg !5149
  %3 = load i64, i64* %tp_flags, align 8, !dbg !5149, !tbaa !3192
  %and = and i64 %3, 16777216, !dbg !5149
  %cmp2 = icmp eq i64 %and, 0, !dbg !5149
  br i1 %cmp2, label %if.end.14, label %if.then.3, !dbg !5150

if.then.3:                                        ; preds = %if.end
  %call5 = tail call i64 @PyLong_AsLong(%struct._object* %1) #1, !dbg !5151
  tail call void @llvm.dbg.value(metadata i64 %call5, i64 0, metadata !1520, metadata !2664), !dbg !5152
  switch i64 %call5, label %if.end.14 [
    i64 -1, label %land.lhs.true
    i64 1, label %cleanup
  ], !dbg !5153

land.lhs.true:                                    ; preds = %if.then.3
  %call7 = tail call %struct._object* @PyErr_Occurred() #1, !dbg !5155
  %tobool = icmp eq %struct._object* %call7, null, !dbg !5155
  br i1 %tobool, label %if.end.14, label %if.then.8, !dbg !5157

if.then.8:                                        ; preds = %land.lhs.true
  tail call void @PyErr_Clear() #1, !dbg !5158
  br label %if.end.14, !dbg !5160

cleanup:                                          ; preds = %if.then.3
  %long_cnt = getelementptr inbounds %struct.countobject, %struct.countobject* %lz, i64 0, i32 2, !dbg !5161
  %4 = load %struct._object*, %struct._object** %long_cnt, align 8, !dbg !5161, !tbaa !5115
  %call12 = tail call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.58, i64 0, i64 0), %struct._object* %4) #1, !dbg !5164
  br label %return

if.end.14:                                        ; preds = %if.then.8, %land.lhs.true, %if.then.3, %if.end
  %long_cnt15 = getelementptr inbounds %struct.countobject, %struct.countobject* %lz, i64 0, i32 2, !dbg !5165
  %5 = load %struct._object*, %struct._object** %long_cnt15, align 8, !dbg !5165, !tbaa !5115
  %6 = load %struct._object*, %struct._object** %long_step, align 8, !dbg !5166, !tbaa !5128
  %call17 = tail call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.59, i64 0, i64 0), %struct._object* %5, %struct._object* %6) #1, !dbg !5167
  br label %return, !dbg !5168

return:                                           ; preds = %cleanup, %if.end.14, %if.then
  %retval.1 = phi %struct._object* [ %call, %if.then ], [ %call17, %if.end.14 ], [ %call12, %cleanup ]
  ret %struct._object* %retval.1, !dbg !5169
}

; Function Attrs: nounwind uwtable
define internal i32 @count_traverse(%struct.countobject* nocapture readonly %lz, i32 (%struct._object*, i8*)* nocapture %visit, i8* %arg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.countobject* %lz, i64 0, metadata !1527, metadata !2664), !dbg !5170
  tail call void @llvm.dbg.value(metadata i32 (%struct._object*, i8*)* %visit, i64 0, metadata !1528, metadata !2664), !dbg !5171
  tail call void @llvm.dbg.value(metadata i8* %arg, i64 0, metadata !1529, metadata !2664), !dbg !5172
  %long_cnt = getelementptr inbounds %struct.countobject, %struct.countobject* %lz, i64 0, i32 2, !dbg !5173
  %0 = load %struct._object*, %struct._object** %long_cnt, align 8, !dbg !5173, !tbaa !5115
  %tobool = icmp eq %struct._object* %0, null, !dbg !5173
  br i1 %tobool, label %do.body.5, label %if.then, !dbg !5175

if.then:                                          ; preds = %entry
  %call = tail call i32 %visit(%struct._object* %0, i8* %arg) #1, !dbg !5176
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !1530, metadata !2664), !dbg !5176
  %tobool2 = icmp eq i32 %call, 0, !dbg !5178
  br i1 %tobool2, label %do.body.5, label %return

do.body.5:                                        ; preds = %entry, %if.then
  %long_step = getelementptr inbounds %struct.countobject, %struct.countobject* %lz, i64 0, i32 3, !dbg !5180
  %1 = load %struct._object*, %struct._object** %long_step, align 8, !dbg !5180, !tbaa !5128
  %tobool6 = icmp eq %struct._object* %1, null, !dbg !5180
  br i1 %tobool6, label %do.end.18, label %if.then.7, !dbg !5182

if.then.7:                                        ; preds = %do.body.5
  %call10 = tail call i32 %visit(%struct._object* %1, i8* %arg) #1, !dbg !5183
  tail call void @llvm.dbg.value(metadata i32 %call10, i64 0, metadata !1534, metadata !2664), !dbg !5183
  %tobool11 = icmp eq i32 %call10, 0, !dbg !5185
  br i1 %tobool11, label %do.end.18, label %return

do.end.18:                                        ; preds = %do.body.5, %if.then.7
  br label %return, !dbg !5187

return:                                           ; preds = %if.then.7, %if.then, %do.end.18
  %retval.3 = phi i32 [ 0, %do.end.18 ], [ %call10, %if.then.7 ], [ %call, %if.then ]
  ret i32 %retval.3, !dbg !5188
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @count_next(%struct.countobject* nocapture %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.countobject* %lz, i64 0, metadata !1540, metadata !2664), !dbg !5189
  %cnt = getelementptr inbounds %struct.countobject, %struct.countobject* %lz, i64 0, i32 1, !dbg !5190
  %0 = load i64, i64* %cnt, align 8, !dbg !5190, !tbaa !5144
  %cmp = icmp eq i64 %0, 9223372036854775807, !dbg !5192
  br i1 %cmp, label %if.then, label %if.end, !dbg !5193

if.then:                                          ; preds = %entry
  tail call void @llvm.dbg.value(metadata %struct.countobject* %lz, i64 0, metadata !1543, metadata !2664) #1, !dbg !5194
  %long_cnt1.i = getelementptr inbounds %struct.countobject, %struct.countobject* %lz, i64 0, i32 2, !dbg !5196
  %1 = load %struct._object*, %struct._object** %long_cnt1.i, align 8, !dbg !5196, !tbaa !5115
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1544, metadata !2664) #1, !dbg !5197
  %cmp.i = icmp eq %struct._object* %1, null, !dbg !5198
  br i1 %cmp.i, label %if.then.i, label %if.end.4.i, !dbg !5200

if.then.i:                                        ; preds = %if.then
  %call.i = tail call %struct._object* @PyLong_FromSsize_t(i64 9223372036854775807) #1, !dbg !5201
  tail call void @llvm.dbg.value(metadata %struct._object* %call.i, i64 0, metadata !1544, metadata !2664) #1, !dbg !5197
  %cmp2.i = icmp eq %struct._object* %call.i, null, !dbg !5203
  br i1 %cmp2.i, label %return, label %if.end.4.i, !dbg !5205

if.end.4.i:                                       ; preds = %if.then.i, %if.then
  %long_cnt.0.i = phi %struct._object* [ %call.i, %if.then.i ], [ %1, %if.then ], !dbg !5206
  %long_step.i = getelementptr inbounds %struct.countobject, %struct.countobject* %lz, i64 0, i32 3, !dbg !5207
  %2 = load %struct._object*, %struct._object** %long_step.i, align 8, !dbg !5207, !tbaa !5128
  %call5.i = tail call %struct._object* @PyNumber_Add(%struct._object* %long_cnt.0.i, %struct._object* %2) #1, !dbg !5208
  tail call void @llvm.dbg.value(metadata %struct._object* %call5.i, i64 0, metadata !1545, metadata !2664) #1, !dbg !5209
  %cmp6.i = icmp eq %struct._object* %call5.i, null, !dbg !5210
  br i1 %cmp6.i, label %return, label %if.end.8.i, !dbg !5212

if.end.8.i:                                       ; preds = %if.end.4.i
  store %struct._object* %call5.i, %struct._object** %long_cnt1.i, align 8, !dbg !5213, !tbaa !5115
  br label %return, !dbg !5214

if.end:                                           ; preds = %entry
  %inc = add i64 %0, 1, !dbg !5215
  store i64 %inc, i64* %cnt, align 8, !dbg !5215, !tbaa !5144
  %call2 = tail call %struct._object* @PyLong_FromSsize_t(i64 %0) #1, !dbg !5216
  br label %return, !dbg !5217

return:                                           ; preds = %if.end.8.i, %if.end.4.i, %if.then.i, %if.end
  %retval.0 = phi %struct._object* [ %call2, %if.end ], [ %long_cnt.0.i, %if.end.8.i ], [ null, %if.then.i ], [ null, %if.end.4.i ]
  ret %struct._object* %retval.0, !dbg !5218
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @count_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %long_cnt = alloca %struct._object*, align 8
  %long_step = alloca %struct._object*, align 8
  tail call void @llvm.dbg.value(metadata %struct._typeobject* %type, i64 0, metadata !1551, metadata !2664), !dbg !5219
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1552, metadata !2664), !dbg !5220
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !1553, metadata !2664), !dbg !5221
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1555, metadata !2664), !dbg !5222
  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !1556, metadata !2664), !dbg !5223
  %0 = bitcast %struct._object** %long_cnt to i8*, !dbg !5224
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5224
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1557, metadata !2664), !dbg !5225
  store %struct._object* null, %struct._object** %long_cnt, align 8, !dbg !5225, !tbaa !2681
  %1 = bitcast %struct._object** %long_step to i8*, !dbg !5226
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !5226
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1558, metadata !2664), !dbg !5227
  store %struct._object* null, %struct._object** %long_step, align 8, !dbg !5227, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object** %long_cnt, i64 0, metadata !1557, metadata !2664), !dbg !5225
  tail call void @llvm.dbg.value(metadata %struct._object** %long_step, i64 0, metadata !1558, metadata !2664), !dbg !5227
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %args, %struct._object* %kwds, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.63, i64 0, i64 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @count_new.kwlist, i64 0, i64 0), %struct._object** nonnull %long_cnt, %struct._object** nonnull %long_step) #1, !dbg !5228
  %tobool = icmp eq i32 %call, 0, !dbg !5228
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5230

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct._object** %long_cnt, i64 0, metadata !1557, metadata !2664), !dbg !5225
  %2 = load %struct._object*, %struct._object** %long_cnt, align 8, !dbg !5231, !tbaa !2681
  %cmp = icmp eq %struct._object* %2, null, !dbg !5233
  br i1 %cmp, label %lor.lhs.false, label %land.lhs.true, !dbg !5234

land.lhs.true:                                    ; preds = %if.end
  %call1 = call i32 @PyNumber_Check(%struct._object* %2) #1, !dbg !5235
  %tobool2 = icmp eq i32 %call1, 0, !dbg !5235
  br i1 %tobool2, label %if.then.7, label %lor.lhs.false, !dbg !5236

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end
  call void @llvm.dbg.value(metadata %struct._object** %long_step, i64 0, metadata !1558, metadata !2664), !dbg !5227
  %3 = load %struct._object*, %struct._object** %long_step, align 8, !dbg !5237, !tbaa !2681
  %cmp3 = icmp eq %struct._object* %3, null, !dbg !5238
  br i1 %cmp3, label %if.end.8, label %land.lhs.true.4, !dbg !5239

land.lhs.true.4:                                  ; preds = %lor.lhs.false
  %call5 = call i32 @PyNumber_Check(%struct._object* %3) #1, !dbg !5240
  %tobool6 = icmp eq i32 %call5, 0, !dbg !5240
  br i1 %tobool6, label %if.then.7, label %if.end.8, !dbg !5241

if.then.7:                                        ; preds = %land.lhs.true, %land.lhs.true.4
  %4 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !5242, !tbaa !2681
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.64, i64 0, i64 0)) #1, !dbg !5244
  br label %cleanup, !dbg !5245

if.end.8:                                         ; preds = %land.lhs.true.4, %lor.lhs.false
  call void @llvm.dbg.value(metadata %struct._object** %long_cnt, i64 0, metadata !1557, metadata !2664), !dbg !5225
  %5 = load %struct._object*, %struct._object** %long_cnt, align 8, !dbg !5246, !tbaa !2681
  %cmp9 = icmp eq %struct._object* %5, null, !dbg !5248
  br i1 %cmp9, label %if.else, label %if.then.10, !dbg !5249

if.then.10:                                       ; preds = %if.end.8
  %call11 = call i64 @PyLong_AsSsize_t(%struct._object* %5) #1, !dbg !5250
  call void @llvm.dbg.value(metadata i64 %call11, i64 0, metadata !1556, metadata !2664), !dbg !5223
  %cmp12 = icmp eq i64 %call11, -1, !dbg !5252
  br i1 %cmp12, label %land.lhs.true.13, label %lor.lhs.false.16, !dbg !5254

land.lhs.true.13:                                 ; preds = %if.then.10
  %call14 = call %struct._object* @PyErr_Occurred() #1, !dbg !5255
  %tobool15 = icmp eq %struct._object* %call14, null, !dbg !5255
  br i1 %tobool15, label %lor.lhs.false.16, label %if.then.18, !dbg !5257

lor.lhs.false.16:                                 ; preds = %land.lhs.true.13, %if.then.10
  call void @llvm.dbg.value(metadata %struct._object** %long_cnt, i64 0, metadata !1557, metadata !2664), !dbg !5225
  %6 = load %struct._object*, %struct._object** %long_cnt, align 8, !dbg !5258, !tbaa !2681
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %6, i64 0, i32 1, !dbg !5258
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5258, !tbaa !2667
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i64 0, i32 19, !dbg !5258
  %8 = load i64, i64* %tp_flags, align 8, !dbg !5258, !tbaa !3192
  %and = and i64 %8, 16777216, !dbg !5258
  %cmp17 = icmp eq i64 %and, 0, !dbg !5258
  br i1 %cmp17, label %if.then.18, label %if.end.19, !dbg !5261

if.then.18:                                       ; preds = %land.lhs.true.13, %lor.lhs.false.16
  call void @PyErr_Clear() #1, !dbg !5262
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !1555, metadata !2664), !dbg !5222
  %.pre = load %struct._object*, %struct._object** %long_cnt, align 8, !dbg !5264, !tbaa !2681
  br label %if.end.19, !dbg !5265

if.end.19:                                        ; preds = %lor.lhs.false.16, %if.then.18
  %9 = phi %struct._object* [ %.pre, %if.then.18 ], [ %6, %lor.lhs.false.16 ], !dbg !5264
  %slow_mode.0 = phi i32 [ 1, %if.then.18 ], [ 0, %lor.lhs.false.16 ]
  call void @llvm.dbg.value(metadata %struct._object** %long_cnt, i64 0, metadata !1557, metadata !2664), !dbg !5225
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i64 0, i32 0, !dbg !5264
  %10 = load i64, i64* %ob_refcnt, align 8, !dbg !5264, !tbaa !2694
  %inc = add i64 %10, 1, !dbg !5264
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !5264, !tbaa !2694
  br label %if.end.21, !dbg !5266

if.else:                                          ; preds = %if.end.8
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !1556, metadata !2664), !dbg !5223
  %call20 = call %struct._object* @PyLong_FromLong(i64 0) #1, !dbg !5267
  call void @llvm.dbg.value(metadata %struct._object* %call20, i64 0, metadata !1557, metadata !2664), !dbg !5225
  store %struct._object* %call20, %struct._object** %long_cnt, align 8, !dbg !5269, !tbaa !2681
  br label %if.end.21

if.end.21:                                        ; preds = %if.else, %if.end.19
  %cnt.0 = phi i64 [ %call11, %if.end.19 ], [ 0, %if.else ]
  %slow_mode.1 = phi i32 [ %slow_mode.0, %if.end.19 ], [ 0, %if.else ]
  call void @llvm.dbg.value(metadata %struct._object** %long_step, i64 0, metadata !1558, metadata !2664), !dbg !5227
  %11 = load %struct._object*, %struct._object** %long_step, align 8, !dbg !5270, !tbaa !2681
  %cmp22 = icmp eq %struct._object* %11, null, !dbg !5271
  br i1 %cmp22, label %if.then.23, label %if.else.34, !dbg !5272

if.then.23:                                       ; preds = %if.end.21
  %call24 = call %struct._object* @PyLong_FromLong(i64 1) #1, !dbg !5273
  call void @llvm.dbg.value(metadata %struct._object* %call24, i64 0, metadata !1558, metadata !2664), !dbg !5227
  store %struct._object* %call24, %struct._object** %long_step, align 8, !dbg !5274, !tbaa !2681
  %cmp25 = icmp eq %struct._object* %call24, null, !dbg !5275
  br i1 %cmp25, label %do.body, label %if.end.37, !dbg !5276

do.body:                                          ; preds = %if.then.23
  call void @llvm.dbg.value(metadata %struct._object** %long_cnt, i64 0, metadata !1557, metadata !2664), !dbg !5225
  %12 = load %struct._object*, %struct._object** %long_cnt, align 8, !dbg !5277, !tbaa !2681
  call void @llvm.dbg.value(metadata %struct._object* %12, i64 0, metadata !1560, metadata !2664), !dbg !5277
  %ob_refcnt27 = getelementptr inbounds %struct._object, %struct._object* %12, i64 0, i32 0, !dbg !5279
  %13 = load i64, i64* %ob_refcnt27, align 8, !dbg !5279, !tbaa !2694
  %dec = add i64 %13, -1, !dbg !5279
  store i64 %dec, i64* %ob_refcnt27, align 8, !dbg !5279, !tbaa !2694
  %cmp28 = icmp eq i64 %dec, 0, !dbg !5279
  br i1 %cmp28, label %if.else.30, label %cleanup, !dbg !5281

if.else.30:                                       ; preds = %do.body
  %ob_type31 = getelementptr inbounds %struct._object, %struct._object* %12, i64 0, i32 1, !dbg !5282
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type31, align 8, !dbg !5282, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i64 0, i32 4, !dbg !5282
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5282, !tbaa !2717
  call void %15(%struct._object* %12) #1, !dbg !5282
  br label %cleanup

if.else.34:                                       ; preds = %if.end.21
  %ob_refcnt35 = getelementptr inbounds %struct._object, %struct._object* %11, i64 0, i32 0, !dbg !5284
  %16 = load i64, i64* %ob_refcnt35, align 8, !dbg !5284, !tbaa !2694
  %inc36 = add i64 %16, 1, !dbg !5284
  store i64 %inc36, i64* %ob_refcnt35, align 8, !dbg !5284, !tbaa !2694
  br label %if.end.37

if.end.37:                                        ; preds = %if.then.23, %if.else.34
  %17 = phi %struct._object* [ %call24, %if.then.23 ], [ %11, %if.else.34 ], !dbg !5285
  call void @llvm.dbg.value(metadata %struct._object** %long_step, i64 0, metadata !1558, metadata !2664), !dbg !5227
  %call38 = call i64 @PyLong_AsLong(%struct._object* %17) #1, !dbg !5286
  call void @llvm.dbg.value(metadata i64 %call38, i64 0, metadata !1559, metadata !2664), !dbg !5287
  switch i64 %call38, label %if.end.69 [
    i64 1, label %if.end.47
    i64 -1, label %land.lhs.true.42
  ], !dbg !5288

land.lhs.true.42:                                 ; preds = %if.end.37
  %call43 = call %struct._object* @PyErr_Occurred() #1, !dbg !5289
  %tobool44 = icmp eq %struct._object* %call43, null, !dbg !5289
  br i1 %tobool44, label %if.end.69, label %if.then.45, !dbg !5294

if.then.45:                                       ; preds = %land.lhs.true.42
  call void @PyErr_Clear() #1, !dbg !5295
  br label %if.end.69, !dbg !5295

if.end.47:                                        ; preds = %if.end.37
  %tobool48 = icmp eq i32 %slow_mode.1, 0, !dbg !5296
  br i1 %tobool48, label %do.body.51, label %if.end.69, !dbg !5297

do.body.51:                                       ; preds = %if.end.47
  call void @llvm.dbg.value(metadata %struct._object** %long_cnt, i64 0, metadata !1557, metadata !2664), !dbg !5225
  %18 = load %struct._object*, %struct._object** %long_cnt, align 8, !dbg !5298, !tbaa !2681
  call void @llvm.dbg.value(metadata %struct._object* %18, i64 0, metadata !1566, metadata !2664), !dbg !5298
  %cmp52 = icmp eq %struct._object* %18, null, !dbg !5300
  br i1 %cmp52, label %if.end.69, label %if.then.53, !dbg !5301

if.then.53:                                       ; preds = %do.body.51
  call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1557, metadata !2664), !dbg !5225
  store %struct._object* null, %struct._object** %long_cnt, align 8, !dbg !5302, !tbaa !2681
  call void @llvm.dbg.value(metadata %struct._object* %18, i64 0, metadata !1569, metadata !2664), !dbg !5304
  %ob_refcnt56 = getelementptr inbounds %struct._object, %struct._object* %18, i64 0, i32 0, !dbg !5306
  %19 = load i64, i64* %ob_refcnt56, align 8, !dbg !5306, !tbaa !2694
  %dec57 = add i64 %19, -1, !dbg !5306
  store i64 %dec57, i64* %ob_refcnt56, align 8, !dbg !5306, !tbaa !2694
  %cmp58 = icmp eq i64 %dec57, 0, !dbg !5306
  br i1 %cmp58, label %if.else.60, label %if.end.69, !dbg !5308

if.else.60:                                       ; preds = %if.then.53
  %ob_type61 = getelementptr inbounds %struct._object, %struct._object* %18, i64 0, i32 1, !dbg !5309
  %20 = load %struct._typeobject*, %struct._typeobject** %ob_type61, align 8, !dbg !5309, !tbaa !2667
  %tp_dealloc62 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %20, i64 0, i32 4, !dbg !5309
  %21 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc62, align 8, !dbg !5309, !tbaa !2717
  call void %21(%struct._object* %18) #1, !dbg !5309
  br label %if.end.69

if.end.69:                                        ; preds = %if.end.37, %land.lhs.true.42, %if.then.45, %do.body.51, %if.then.53, %if.else.60, %if.end.47
  %cnt.1 = phi i64 [ 9223372036854775807, %if.end.47 ], [ %cnt.0, %if.else.60 ], [ %cnt.0, %if.then.53 ], [ %cnt.0, %do.body.51 ], [ 9223372036854775807, %if.then.45 ], [ 9223372036854775807, %land.lhs.true.42 ], [ 9223372036854775807, %if.end.37 ]
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %type, i64 0, i32 36, !dbg !5311
  %22 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !5311, !tbaa !2835
  %call70 = call %struct._object* %22(%struct._typeobject* %type, i64 0) #1, !dbg !5312
  %cmp71 = icmp eq %struct._object* %call70, null, !dbg !5313
  br i1 %cmp71, label %do.body.73, label %if.end.91, !dbg !5314

do.body.73:                                       ; preds = %if.end.69
  call void @llvm.dbg.value(metadata %struct._object** %long_cnt, i64 0, metadata !1557, metadata !2664), !dbg !5225
  %23 = load %struct._object*, %struct._object** %long_cnt, align 8, !dbg !5315, !tbaa !2681
  call void @llvm.dbg.value(metadata %struct._object* %23, i64 0, metadata !1573, metadata !2664), !dbg !5315
  %cmp74 = icmp eq %struct._object* %23, null, !dbg !5317
  br i1 %cmp74, label %cleanup, label %do.body.76, !dbg !5318

do.body.76:                                       ; preds = %do.body.73
  call void @llvm.dbg.value(metadata %struct._object* %23, i64 0, metadata !1577, metadata !2664), !dbg !5319
  %ob_refcnt78 = getelementptr inbounds %struct._object, %struct._object* %23, i64 0, i32 0, !dbg !5321
  %24 = load i64, i64* %ob_refcnt78, align 8, !dbg !5321, !tbaa !2694
  %dec79 = add i64 %24, -1, !dbg !5321
  store i64 %dec79, i64* %ob_refcnt78, align 8, !dbg !5321, !tbaa !2694
  %cmp80 = icmp eq i64 %dec79, 0, !dbg !5321
  br i1 %cmp80, label %if.else.82, label %cleanup, !dbg !5323

if.else.82:                                       ; preds = %do.body.76
  %ob_type83 = getelementptr inbounds %struct._object, %struct._object* %23, i64 0, i32 1, !dbg !5324
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type83, align 8, !dbg !5324, !tbaa !2667
  %tp_dealloc84 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i64 0, i32 4, !dbg !5324
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc84, align 8, !dbg !5324, !tbaa !2717
  call void %26(%struct._object* %23) #1, !dbg !5324
  br label %cleanup

if.end.91:                                        ; preds = %if.end.69
  %27 = getelementptr inbounds %struct._object, %struct._object* %call70, i64 1, i32 0, !dbg !5326
  store i64 %cnt.1, i64* %27, align 8, !dbg !5327, !tbaa !5144
  call void @llvm.dbg.value(metadata %struct._object** %long_cnt, i64 0, metadata !1557, metadata !2664), !dbg !5225
  %28 = bitcast %struct._object** %long_cnt to i64*, !dbg !5328
  %29 = load i64, i64* %28, align 8, !dbg !5328, !tbaa !2681
  %long_cnt93 = getelementptr inbounds %struct._object, %struct._object* %call70, i64 1, i32 1, !dbg !5329
  %30 = bitcast %struct._typeobject** %long_cnt93 to i64*, !dbg !5330
  store i64 %29, i64* %30, align 8, !dbg !5330, !tbaa !5115
  call void @llvm.dbg.value(metadata %struct._object** %long_step, i64 0, metadata !1558, metadata !2664), !dbg !5227
  %31 = bitcast %struct._object** %long_step to i64*, !dbg !5331
  %32 = load i64, i64* %31, align 8, !dbg !5331, !tbaa !2681
  %33 = getelementptr inbounds %struct._object, %struct._object* %call70, i64 2, i32 0, !dbg !5332
  store i64 %32, i64* %33, align 8, !dbg !5332, !tbaa !5128
  br label %cleanup, !dbg !5333

cleanup:                                          ; preds = %do.body.73, %do.body.76, %if.else.82, %if.else.30, %do.body, %entry, %if.end.91, %if.then.7
  %retval.0 = phi %struct._object* [ %call70, %if.end.91 ], [ null, %if.then.7 ], [ null, %entry ], [ null, %do.body ], [ null, %if.else.30 ], [ null, %if.else.82 ], [ null, %do.body.76 ], [ null, %do.body.73 ]
  call void @llvm.lifetime.end(i64 8, i8* %1) #1, !dbg !5334
  call void @llvm.lifetime.end(i64 8, i8* %0) #1, !dbg !5334
  ret %struct._object* %retval.0, !dbg !5334
}

declare %struct._object* @PyUnicode_FromFormat(i8*, ...) #3

declare i64 @PyLong_AsLong(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @count_reduce(%struct.countobject* nocapture readonly %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.countobject* %lz, i64 0, metadata !1548, metadata !2664), !dbg !5335
  %cnt = getelementptr inbounds %struct.countobject, %struct.countobject* %lz, i64 0, i32 1, !dbg !5336
  %0 = load i64, i64* %cnt, align 8, !dbg !5336, !tbaa !5144
  %cmp = icmp eq i64 %0, 9223372036854775807, !dbg !5338
  %ob_type = getelementptr inbounds %struct.countobject, %struct.countobject* %lz, i64 0, i32 0, i32 1, !dbg !5339
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5339, !tbaa !2667
  br i1 %cmp, label %if.then, label %if.end, !dbg !5340

if.then:                                          ; preds = %entry
  %long_cnt = getelementptr inbounds %struct.countobject, %struct.countobject* %lz, i64 0, i32 2, !dbg !5341
  %2 = load %struct._object*, %struct._object** %long_cnt, align 8, !dbg !5341, !tbaa !5115
  %long_step = getelementptr inbounds %struct.countobject, %struct.countobject* %lz, i64 0, i32 3, !dbg !5342
  %3 = load %struct._object*, %struct._object** %long_step, align 8, !dbg !5342, !tbaa !5128
  %call = tail call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i64 0, i64 0), %struct._typeobject* %1, %struct._object* %2, %struct._object* %3) #1, !dbg !5343
  br label %return, !dbg !5344

if.end:                                           ; preds = %entry
  %call3 = tail call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i64 0, i64 0), %struct._typeobject* %1, i64 %0) #1, !dbg !5345
  br label %return, !dbg !5346

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct._object* [ %call, %if.then ], [ %call3, %if.end ]
  ret %struct._object* %retval.0, !dbg !5347
}

declare i32 @PyNumber_Check(%struct._object*) #3

declare %struct._object* @PyLong_FromLong(i64) #3

; Function Attrs: nounwind uwtable
define internal void @zip_longest_dealloc(%struct.ziplongestobject* %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.ziplongestobject* %lz, i64 0, metadata !1584, metadata !2664), !dbg !5348
  %0 = bitcast %struct.ziplongestobject* %lz to i8*, !dbg !5349
  tail call void @PyObject_GC_UnTrack(i8* %0) #1, !dbg !5350
  %ittuple = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %lz, i64 0, i32 3, !dbg !5351
  %1 = load %struct._object*, %struct._object** %ittuple, align 8, !dbg !5351, !tbaa !5353
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1585, metadata !2664), !dbg !5351
  %cmp = icmp eq %struct._object* %1, null, !dbg !5355
  br i1 %cmp, label %if.end.4, label %do.body.1, !dbg !5356

do.body.1:                                        ; preds = %entry
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1587, metadata !2664), !dbg !5357
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !5359
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !5359, !tbaa !2694
  %dec = add i64 %2, -1, !dbg !5359
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5359, !tbaa !2694
  %cmp2 = icmp eq i64 %dec, 0, !dbg !5359
  br i1 %cmp2, label %if.else, label %if.end.4, !dbg !5361

if.else:                                          ; preds = %do.body.1
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !5362
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5362, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 4, !dbg !5362
  %4 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5362, !tbaa !2717
  tail call void %4(%struct._object* %1) #1, !dbg !5362
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %do.body.1, %entry
  %result = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %lz, i64 0, i32 4, !dbg !5364
  %5 = load %struct._object*, %struct._object** %result, align 8, !dbg !5364, !tbaa !5366
  tail call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !1590, metadata !2664), !dbg !5364
  %cmp9 = icmp eq %struct._object* %5, null, !dbg !5367
  br i1 %cmp9, label %if.end.23, label %do.body.11, !dbg !5368

do.body.11:                                       ; preds = %if.end.4
  tail call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !1592, metadata !2664), !dbg !5369
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 0, !dbg !5371
  %6 = load i64, i64* %ob_refcnt13, align 8, !dbg !5371, !tbaa !2694
  %dec14 = add i64 %6, -1, !dbg !5371
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !5371, !tbaa !2694
  %cmp15 = icmp eq i64 %dec14, 0, !dbg !5371
  br i1 %cmp15, label %if.else.17, label %if.end.23, !dbg !5373

if.else.17:                                       ; preds = %do.body.11
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 1, !dbg !5374
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !5374, !tbaa !2667
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i64 0, i32 4, !dbg !5374
  %8 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !5374, !tbaa !2717
  tail call void %8(%struct._object* %5) #1, !dbg !5374
  br label %if.end.23

if.end.23:                                        ; preds = %if.else.17, %do.body.11, %if.end.4
  %fillvalue = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %lz, i64 0, i32 5, !dbg !5376
  %9 = load %struct._object*, %struct._object** %fillvalue, align 8, !dbg !5376, !tbaa !5378
  tail call void @llvm.dbg.value(metadata %struct._object* %9, i64 0, metadata !1595, metadata !2664), !dbg !5376
  %cmp28 = icmp eq %struct._object* %9, null, !dbg !5379
  br i1 %cmp28, label %if.end.42, label %do.body.30, !dbg !5380

do.body.30:                                       ; preds = %if.end.23
  tail call void @llvm.dbg.value(metadata %struct._object* %9, i64 0, metadata !1597, metadata !2664), !dbg !5381
  %ob_refcnt32 = getelementptr inbounds %struct._object, %struct._object* %9, i64 0, i32 0, !dbg !5383
  %10 = load i64, i64* %ob_refcnt32, align 8, !dbg !5383, !tbaa !2694
  %dec33 = add i64 %10, -1, !dbg !5383
  store i64 %dec33, i64* %ob_refcnt32, align 8, !dbg !5383, !tbaa !2694
  %cmp34 = icmp eq i64 %dec33, 0, !dbg !5383
  br i1 %cmp34, label %if.else.36, label %if.end.42, !dbg !5385

if.else.36:                                       ; preds = %do.body.30
  %ob_type37 = getelementptr inbounds %struct._object, %struct._object* %9, i64 0, i32 1, !dbg !5386
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type37, align 8, !dbg !5386, !tbaa !2667
  %tp_dealloc38 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i64 0, i32 4, !dbg !5386
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc38, align 8, !dbg !5386, !tbaa !2717
  tail call void %12(%struct._object* %9) #1, !dbg !5386
  br label %if.end.42

if.end.42:                                        ; preds = %if.else.36, %do.body.30, %if.end.23
  %ob_type45 = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %lz, i64 0, i32 0, i32 1, !dbg !5388
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type45, align 8, !dbg !5388, !tbaa !2667
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i64 0, i32 38, !dbg !5389
  %14 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !5389, !tbaa !2744
  tail call void %14(i8* %0) #1, !dbg !5388
  ret void, !dbg !5390
}

; Function Attrs: nounwind uwtable
define internal i32 @zip_longest_traverse(%struct.ziplongestobject* nocapture readonly %lz, i32 (%struct._object*, i8*)* nocapture %visit, i8* %arg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.ziplongestobject* %lz, i64 0, metadata !1604, metadata !2664), !dbg !5391
  tail call void @llvm.dbg.value(metadata i32 (%struct._object*, i8*)* %visit, i64 0, metadata !1605, metadata !2664), !dbg !5392
  tail call void @llvm.dbg.value(metadata i8* %arg, i64 0, metadata !1606, metadata !2664), !dbg !5393
  %ittuple = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %lz, i64 0, i32 3, !dbg !5394
  %0 = load %struct._object*, %struct._object** %ittuple, align 8, !dbg !5394, !tbaa !5353
  %tobool = icmp eq %struct._object* %0, null, !dbg !5394
  br i1 %tobool, label %do.body.5, label %if.then, !dbg !5396

if.then:                                          ; preds = %entry
  %call = tail call i32 %visit(%struct._object* %0, i8* %arg) #1, !dbg !5397
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !1607, metadata !2664), !dbg !5397
  %tobool2 = icmp eq i32 %call, 0, !dbg !5399
  br i1 %tobool2, label %do.body.5, label %return

do.body.5:                                        ; preds = %entry, %if.then
  %result = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %lz, i64 0, i32 4, !dbg !5401
  %1 = load %struct._object*, %struct._object** %result, align 8, !dbg !5401, !tbaa !5366
  %tobool6 = icmp eq %struct._object* %1, null, !dbg !5401
  br i1 %tobool6, label %do.body.19, label %if.then.7, !dbg !5403

if.then.7:                                        ; preds = %do.body.5
  %call10 = tail call i32 %visit(%struct._object* %1, i8* %arg) #1, !dbg !5404
  tail call void @llvm.dbg.value(metadata i32 %call10, i64 0, metadata !1611, metadata !2664), !dbg !5404
  %tobool11 = icmp eq i32 %call10, 0, !dbg !5406
  br i1 %tobool11, label %do.body.19, label %return

do.body.19:                                       ; preds = %do.body.5, %if.then.7
  %fillvalue = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %lz, i64 0, i32 5, !dbg !5408
  %2 = load %struct._object*, %struct._object** %fillvalue, align 8, !dbg !5408, !tbaa !5378
  %tobool20 = icmp eq %struct._object* %2, null, !dbg !5408
  br i1 %tobool20, label %do.end.32, label %if.then.21, !dbg !5410

if.then.21:                                       ; preds = %do.body.19
  %call24 = tail call i32 %visit(%struct._object* %2, i8* %arg) #1, !dbg !5411
  tail call void @llvm.dbg.value(metadata i32 %call24, i64 0, metadata !1615, metadata !2664), !dbg !5411
  %tobool25 = icmp eq i32 %call24, 0, !dbg !5413
  br i1 %tobool25, label %do.end.32, label %return

do.end.32:                                        ; preds = %do.body.19, %if.then.21
  br label %return, !dbg !5415

return:                                           ; preds = %if.then.21, %if.then.7, %if.then, %do.end.32
  %retval.5 = phi i32 [ 0, %do.end.32 ], [ %call24, %if.then.21 ], [ %call10, %if.then.7 ], [ %call, %if.then ]
  ret i32 %retval.5, !dbg !5416
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @zip_longest_next(%struct.ziplongestobject* nocapture %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.ziplongestobject* %lz, i64 0, metadata !1623, metadata !2664), !dbg !5417
  %tuplesize1 = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %lz, i64 0, i32 1, !dbg !5418
  %0 = load i64, i64* %tuplesize1, align 8, !dbg !5418, !tbaa !5419
  tail call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !1625, metadata !2664), !dbg !5420
  %result2 = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %lz, i64 0, i32 4, !dbg !5421
  %1 = load %struct._object*, %struct._object** %result2, align 8, !dbg !5421, !tbaa !5366
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1626, metadata !2664), !dbg !5422
  %cmp = icmp eq i64 %0, 0, !dbg !5423
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5425

if.end:                                           ; preds = %entry
  %numactive = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %lz, i64 0, i32 2, !dbg !5426
  %2 = load i64, i64* %numactive, align 8, !dbg !5426, !tbaa !5428
  %cmp3 = icmp eq i64 %2, 0, !dbg !5429
  br i1 %cmp3, label %cleanup, label %if.end.5, !dbg !5430

if.end.5:                                         ; preds = %if.end
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !5431
  %3 = load i64, i64* %ob_refcnt, align 8, !dbg !5431, !tbaa !2694
  %cmp6 = icmp eq i64 %3, 1, !dbg !5432
  br i1 %cmp6, label %if.then.7, label %if.else.68, !dbg !5433

if.then.7:                                        ; preds = %if.end.5
  store i64 2, i64* %ob_refcnt, align 8, !dbg !5434, !tbaa !2694
  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !1624, metadata !2664), !dbg !5435
  %cmp9.215 = icmp sgt i64 %0, 0, !dbg !5436
  br i1 %cmp9.215, label %for.body.lr.ph, label %cleanup, !dbg !5437

for.body.lr.ph:                                   ; preds = %if.then.7
  %ittuple = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %lz, i64 0, i32 3, !dbg !5438
  %4 = bitcast %struct._object** %ittuple to %struct.PyTupleObject**, !dbg !5438
  %fillvalue = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %lz, i64 0, i32 5, !dbg !5439
  %ob_item51 = getelementptr inbounds %struct._object, %struct._object* %1, i64 1, i32 1, !dbg !5441
  %5 = bitcast %struct._typeobject** %ob_item51 to [1 x %struct._object*]*, !dbg !5441
  br label %for.body, !dbg !5437

for.body:                                         ; preds = %for.body.lr.ph, %if.end.64
  %i.0216 = phi i64 [ 0, %for.body.lr.ph ], [ %inc67, %if.end.64 ]
  %6 = load %struct.PyTupleObject*, %struct.PyTupleObject** %4, align 8, !dbg !5438, !tbaa !5353
  %arrayidx = getelementptr %struct.PyTupleObject, %struct.PyTupleObject* %6, i64 0, i32 1, i64 %i.0216, !dbg !5438
  %7 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !5438, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %7, i64 0, metadata !1627, metadata !2664), !dbg !5442
  %cmp10 = icmp eq %struct._object* %7, null, !dbg !5443
  br i1 %cmp10, label %if.then.11, label %if.else, !dbg !5444

if.then.11:                                       ; preds = %for.body
  %8 = load %struct._object*, %struct._object** %fillvalue, align 8, !dbg !5439, !tbaa !5378
  %ob_refcnt12 = getelementptr inbounds %struct._object, %struct._object* %8, i64 0, i32 0, !dbg !5439
  %9 = load i64, i64* %ob_refcnt12, align 8, !dbg !5439, !tbaa !2694
  %inc13 = add i64 %9, 1, !dbg !5439
  store i64 %inc13, i64* %ob_refcnt12, align 8, !dbg !5439, !tbaa !2694
  tail call void @llvm.dbg.value(metadata %struct._object* %8, i64 0, metadata !1628, metadata !2664), !dbg !5445
  br label %if.end.50, !dbg !5446

if.else:                                          ; preds = %for.body
  %call = tail call %struct._object* @PyIter_Next(%struct._object* %7) #1, !dbg !5447
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1628, metadata !2664), !dbg !5445
  %cmp15 = icmp eq %struct._object* %call, null, !dbg !5448
  br i1 %cmp15, label %if.then.16, label %if.end.50, !dbg !5449

if.then.16:                                       ; preds = %if.else
  %10 = load i64, i64* %numactive, align 8, !dbg !5450, !tbaa !5428
  %sub = add i64 %10, -1, !dbg !5450
  store i64 %sub, i64* %numactive, align 8, !dbg !5450, !tbaa !5428
  %cmp19 = icmp eq i64 %sub, 0, !dbg !5451
  br i1 %cmp19, label %if.then.21, label %lor.lhs.false, !dbg !5452

lor.lhs.false:                                    ; preds = %if.then.16
  %call20 = tail call %struct._object* @PyErr_Occurred() #1, !dbg !5453
  %tobool = icmp eq %struct._object* %call20, null, !dbg !5453
  br i1 %tobool, label %if.else.28, label %if.then.21, !dbg !5455

if.then.21:                                       ; preds = %lor.lhs.false, %if.then.16
  store i64 0, i64* %numactive, align 8, !dbg !5456, !tbaa !5428
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1630, metadata !2664), !dbg !5457
  %11 = load i64, i64* %ob_refcnt, align 8, !dbg !5459, !tbaa !2694
  %dec = add i64 %11, -1, !dbg !5459
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5459, !tbaa !2694
  %cmp24 = icmp eq i64 %dec, 0, !dbg !5459
  br i1 %cmp24, label %if.else.26, label %cleanup, !dbg !5461

if.else.26:                                       ; preds = %if.then.21
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !5462
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5462, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i64 0, i32 4, !dbg !5462
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5462, !tbaa !2717
  tail call void %13(%struct._object* %1) #1, !dbg !5462
  br label %cleanup

if.else.28:                                       ; preds = %lor.lhs.false
  %14 = load %struct._object*, %struct._object** %fillvalue, align 8, !dbg !5464, !tbaa !5378
  %ob_refcnt30 = getelementptr inbounds %struct._object, %struct._object* %14, i64 0, i32 0, !dbg !5464
  %15 = load i64, i64* %ob_refcnt30, align 8, !dbg !5464, !tbaa !2694
  %inc31 = add i64 %15, 1, !dbg !5464
  store i64 %inc31, i64* %ob_refcnt30, align 8, !dbg !5464, !tbaa !2694
  tail call void @llvm.dbg.value(metadata %struct._object* %14, i64 0, metadata !1628, metadata !2664), !dbg !5445
  %16 = load %struct.PyTupleObject*, %struct.PyTupleObject** %4, align 8, !dbg !5465, !tbaa !5353
  %arrayidx35 = getelementptr %struct.PyTupleObject, %struct.PyTupleObject* %16, i64 0, i32 1, i64 %i.0216, !dbg !5465
  store %struct._object* null, %struct._object** %arrayidx35, align 8, !dbg !5465, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %7, i64 0, metadata !1643, metadata !2664), !dbg !5466
  %ob_refcnt38 = getelementptr inbounds %struct._object, %struct._object* %7, i64 0, i32 0, !dbg !5468
  %17 = load i64, i64* %ob_refcnt38, align 8, !dbg !5468, !tbaa !2694
  %dec39 = add i64 %17, -1, !dbg !5468
  store i64 %dec39, i64* %ob_refcnt38, align 8, !dbg !5468, !tbaa !2694
  %cmp40 = icmp eq i64 %dec39, 0, !dbg !5468
  br i1 %cmp40, label %if.else.42, label %if.end.50, !dbg !5470

if.else.42:                                       ; preds = %if.else.28
  %ob_type43 = getelementptr inbounds %struct._object, %struct._object* %7, i64 0, i32 1, !dbg !5471
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type43, align 8, !dbg !5471, !tbaa !2667
  %tp_dealloc44 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i64 0, i32 4, !dbg !5471
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc44, align 8, !dbg !5471, !tbaa !2717
  tail call void %19(%struct._object* %7) #1, !dbg !5471
  br label %if.end.50

if.end.50:                                        ; preds = %if.else.42, %if.else.28, %if.else, %if.then.11
  %item.0 = phi %struct._object* [ %8, %if.then.11 ], [ %call, %if.else ], [ %14, %if.else.28 ], [ %14, %if.else.42 ]
  %arrayidx52 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %5, i64 0, i64 %i.0216, !dbg !5441
  %20 = load %struct._object*, %struct._object** %arrayidx52, align 8, !dbg !5441, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %20, i64 0, metadata !1629, metadata !2664), !dbg !5473
  store %struct._object* %item.0, %struct._object** %arrayidx52, align 8, !dbg !5474, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %20, i64 0, metadata !1646, metadata !2664), !dbg !5475
  %ob_refcnt57 = getelementptr inbounds %struct._object, %struct._object* %20, i64 0, i32 0, !dbg !5477
  %21 = load i64, i64* %ob_refcnt57, align 8, !dbg !5477, !tbaa !2694
  %dec58 = add i64 %21, -1, !dbg !5477
  store i64 %dec58, i64* %ob_refcnt57, align 8, !dbg !5477, !tbaa !2694
  %cmp59 = icmp eq i64 %dec58, 0, !dbg !5477
  br i1 %cmp59, label %if.else.61, label %if.end.64, !dbg !5479

if.else.61:                                       ; preds = %if.end.50
  %ob_type62 = getelementptr inbounds %struct._object, %struct._object* %20, i64 0, i32 1, !dbg !5480
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type62, align 8, !dbg !5480, !tbaa !2667
  %tp_dealloc63 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %22, i64 0, i32 4, !dbg !5480
  %23 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc63, align 8, !dbg !5480, !tbaa !2717
  tail call void %23(%struct._object* %20) #1, !dbg !5480
  br label %if.end.64

if.end.64:                                        ; preds = %if.end.50, %if.else.61
  %inc67 = add nuw nsw i64 %i.0216, 1, !dbg !5482
  tail call void @llvm.dbg.value(metadata i64 %inc67, i64 0, metadata !1624, metadata !2664), !dbg !5435
  %cmp9 = icmp slt i64 %inc67, %0, !dbg !5436
  br i1 %cmp9, label %for.body, label %cleanup.loopexit, !dbg !5437

if.else.68:                                       ; preds = %if.end.5
  %call69 = tail call %struct._object* @PyTuple_New(i64 %0) #1, !dbg !5483
  tail call void @llvm.dbg.value(metadata %struct._object* %call69, i64 0, metadata !1626, metadata !2664), !dbg !5422
  %cmp70 = icmp eq %struct._object* %call69, null, !dbg !5484
  br i1 %cmp70, label %cleanup, label %for.cond.73.preheader, !dbg !5486

for.cond.73.preheader:                            ; preds = %if.else.68
  %cmp74.217 = icmp sgt i64 %0, 0, !dbg !5487
  br i1 %cmp74.217, label %for.body.75.lr.ph, label %cleanup, !dbg !5488

for.body.75.lr.ph:                                ; preds = %for.cond.73.preheader
  %ittuple76 = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %lz, i64 0, i32 3, !dbg !5489
  %24 = bitcast %struct._object** %ittuple76 to %struct.PyTupleObject**, !dbg !5489
  %fillvalue81 = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %lz, i64 0, i32 5, !dbg !5490
  %ob_item133 = getelementptr inbounds %struct._object, %struct._object* %call69, i64 1, i32 1, !dbg !5492
  %25 = bitcast %struct._typeobject** %ob_item133 to [1 x %struct._object*]*, !dbg !5492
  br label %for.body.75, !dbg !5488

for.body.75:                                      ; preds = %for.body.75.lr.ph, %if.end.132
  %i.1218 = phi i64 [ 0, %for.body.75.lr.ph ], [ %inc136, %if.end.132 ]
  %26 = load %struct.PyTupleObject*, %struct.PyTupleObject** %24, align 8, !dbg !5489, !tbaa !5353
  %arrayidx78 = getelementptr %struct.PyTupleObject, %struct.PyTupleObject* %26, i64 0, i32 1, i64 %i.1218, !dbg !5489
  %27 = load %struct._object*, %struct._object** %arrayidx78, align 8, !dbg !5489, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %27, i64 0, metadata !1627, metadata !2664), !dbg !5442
  %cmp79 = icmp eq %struct._object* %27, null, !dbg !5493
  br i1 %cmp79, label %if.then.80, label %if.else.85, !dbg !5494

if.then.80:                                       ; preds = %for.body.75
  %28 = load %struct._object*, %struct._object** %fillvalue81, align 8, !dbg !5490, !tbaa !5378
  %ob_refcnt82 = getelementptr inbounds %struct._object, %struct._object* %28, i64 0, i32 0, !dbg !5490
  %29 = load i64, i64* %ob_refcnt82, align 8, !dbg !5490, !tbaa !2694
  %inc83 = add i64 %29, 1, !dbg !5490
  store i64 %inc83, i64* %ob_refcnt82, align 8, !dbg !5490, !tbaa !2694
  tail call void @llvm.dbg.value(metadata %struct._object* %28, i64 0, metadata !1628, metadata !2664), !dbg !5445
  br label %if.end.132, !dbg !5495

if.else.85:                                       ; preds = %for.body.75
  %call86 = tail call %struct._object* @PyIter_Next(%struct._object* %27) #1, !dbg !5496
  tail call void @llvm.dbg.value(metadata %struct._object* %call86, i64 0, metadata !1628, metadata !2664), !dbg !5445
  %cmp87 = icmp eq %struct._object* %call86, null, !dbg !5497
  br i1 %cmp87, label %if.then.88, label %if.end.132, !dbg !5498

if.then.88:                                       ; preds = %if.else.85
  %30 = load i64, i64* %numactive, align 8, !dbg !5499, !tbaa !5428
  %sub90 = add i64 %30, -1, !dbg !5499
  store i64 %sub90, i64* %numactive, align 8, !dbg !5499, !tbaa !5428
  %cmp92 = icmp eq i64 %sub90, 0, !dbg !5500
  br i1 %cmp92, label %if.then.96, label %lor.lhs.false.93, !dbg !5501

lor.lhs.false.93:                                 ; preds = %if.then.88
  %call94 = tail call %struct._object* @PyErr_Occurred() #1, !dbg !5502
  %tobool95 = icmp eq %struct._object* %call94, null, !dbg !5502
  br i1 %tobool95, label %if.else.110, label %if.then.96, !dbg !5504

if.then.96:                                       ; preds = %lor.lhs.false.93, %if.then.88
  store i64 0, i64* %numactive, align 8, !dbg !5505, !tbaa !5428
  tail call void @llvm.dbg.value(metadata %struct._object* %call69, i64 0, metadata !1648, metadata !2664), !dbg !5506
  %ob_refcnt100 = getelementptr inbounds %struct._object, %struct._object* %call69, i64 0, i32 0, !dbg !5508
  %31 = load i64, i64* %ob_refcnt100, align 8, !dbg !5508, !tbaa !2694
  %dec101 = add i64 %31, -1, !dbg !5508
  store i64 %dec101, i64* %ob_refcnt100, align 8, !dbg !5508, !tbaa !2694
  %cmp102 = icmp eq i64 %dec101, 0, !dbg !5508
  br i1 %cmp102, label %if.else.104, label %cleanup, !dbg !5510

if.else.104:                                      ; preds = %if.then.96
  %ob_type105 = getelementptr inbounds %struct._object, %struct._object* %call69, i64 0, i32 1, !dbg !5511
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type105, align 8, !dbg !5511, !tbaa !2667
  %tp_dealloc106 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i64 0, i32 4, !dbg !5511
  %33 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc106, align 8, !dbg !5511, !tbaa !2717
  tail call void %33(%struct._object* %call69) #1, !dbg !5511
  br label %cleanup

if.else.110:                                      ; preds = %lor.lhs.false.93
  %34 = load %struct._object*, %struct._object** %fillvalue81, align 8, !dbg !5513, !tbaa !5378
  %ob_refcnt112 = getelementptr inbounds %struct._object, %struct._object* %34, i64 0, i32 0, !dbg !5513
  %35 = load i64, i64* %ob_refcnt112, align 8, !dbg !5513, !tbaa !2694
  %inc113 = add i64 %35, 1, !dbg !5513
  store i64 %inc113, i64* %ob_refcnt112, align 8, !dbg !5513, !tbaa !2694
  tail call void @llvm.dbg.value(metadata %struct._object* %34, i64 0, metadata !1628, metadata !2664), !dbg !5445
  %36 = load %struct.PyTupleObject*, %struct.PyTupleObject** %24, align 8, !dbg !5514, !tbaa !5353
  %arrayidx117 = getelementptr %struct.PyTupleObject, %struct.PyTupleObject* %36, i64 0, i32 1, i64 %i.1218, !dbg !5514
  store %struct._object* null, %struct._object** %arrayidx117, align 8, !dbg !5514, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %27, i64 0, metadata !1660, metadata !2664), !dbg !5515
  %ob_refcnt120 = getelementptr inbounds %struct._object, %struct._object* %27, i64 0, i32 0, !dbg !5517
  %37 = load i64, i64* %ob_refcnt120, align 8, !dbg !5517, !tbaa !2694
  %dec121 = add i64 %37, -1, !dbg !5517
  store i64 %dec121, i64* %ob_refcnt120, align 8, !dbg !5517, !tbaa !2694
  %cmp122 = icmp eq i64 %dec121, 0, !dbg !5517
  br i1 %cmp122, label %if.else.124, label %if.end.132, !dbg !5519

if.else.124:                                      ; preds = %if.else.110
  %ob_type125 = getelementptr inbounds %struct._object, %struct._object* %27, i64 0, i32 1, !dbg !5520
  %38 = load %struct._typeobject*, %struct._typeobject** %ob_type125, align 8, !dbg !5520, !tbaa !2667
  %tp_dealloc126 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %38, i64 0, i32 4, !dbg !5520
  %39 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc126, align 8, !dbg !5520, !tbaa !2717
  tail call void %39(%struct._object* %27) #1, !dbg !5520
  br label %if.end.132

if.end.132:                                       ; preds = %if.else.124, %if.else.110, %if.else.85, %if.then.80
  %item.1 = phi %struct._object* [ %28, %if.then.80 ], [ %call86, %if.else.85 ], [ %34, %if.else.110 ], [ %34, %if.else.124 ]
  %arrayidx134 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %25, i64 0, i64 %i.1218, !dbg !5492
  store %struct._object* %item.1, %struct._object** %arrayidx134, align 8, !dbg !5492, !tbaa !2681
  %inc136 = add nuw nsw i64 %i.1218, 1, !dbg !5522
  tail call void @llvm.dbg.value(metadata i64 %inc136, i64 0, metadata !1624, metadata !2664), !dbg !5435
  %cmp74 = icmp slt i64 %inc136, %0, !dbg !5487
  br i1 %cmp74, label %for.body.75, label %cleanup.loopexit221, !dbg !5488

cleanup.loopexit:                                 ; preds = %if.end.64
  br label %cleanup, !dbg !5523

cleanup.loopexit221:                              ; preds = %if.end.132
  br label %cleanup, !dbg !5523

cleanup:                                          ; preds = %cleanup.loopexit221, %cleanup.loopexit, %for.cond.73.preheader, %if.then.7, %if.else.104, %if.then.96, %if.else.68, %if.else.26, %if.then.21, %if.end, %entry
  %retval.0 = phi %struct._object* [ null, %entry ], [ null, %if.end ], [ null, %if.then.21 ], [ null, %if.else.26 ], [ null, %if.else.68 ], [ null, %if.then.96 ], [ null, %if.else.104 ], [ %1, %if.then.7 ], [ %call69, %for.cond.73.preheader ], [ %1, %cleanup.loopexit ], [ %call69, %cleanup.loopexit221 ]
  ret %struct._object* %retval.0, !dbg !5523
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @zip_longest_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._typeobject* %type, i64 0, metadata !1692, metadata !2664), !dbg !5524
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1693, metadata !2664), !dbg !5525
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !1694, metadata !2664), !dbg !5526
  tail call void @llvm.dbg.value(metadata %struct._object* @_Py_NoneStruct, i64 0, metadata !1699, metadata !2664), !dbg !5527
  %call = tail call i64 @PySequence_Size(%struct._object* %args) #1, !dbg !5528
  tail call void @llvm.dbg.value(metadata i64 %call, i64 0, metadata !1700, metadata !2664), !dbg !5529
  %cmp = icmp eq %struct._object* %kwds, null, !dbg !5530
  br i1 %cmp, label %if.end.10, label %land.lhs.true, !dbg !5532

land.lhs.true:                                    ; preds = %entry
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %kwds, i64 0, i32 1, !dbg !5533
  %0 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5533, !tbaa !2667
  %cmp1 = icmp eq %struct._typeobject* %0, @PyDict_Type, !dbg !5533
  br i1 %cmp1, label %land.lhs.true.2, label %if.end.10, !dbg !5535

land.lhs.true.2:                                  ; preds = %land.lhs.true
  %call3 = tail call i64 @PyDict_Size(%struct._object* %kwds) #1, !dbg !5536
  %cmp4 = icmp sgt i64 %call3, 0, !dbg !5537
  br i1 %cmp4, label %if.then, label %if.end.10, !dbg !5538

if.then:                                          ; preds = %land.lhs.true.2
  %call5 = tail call %struct._object* @PyDict_GetItemString(%struct._object* %kwds, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.67, i64 0, i64 0)) #1, !dbg !5539
  tail call void @llvm.dbg.value(metadata %struct._object* %call5, i64 0, metadata !1699, metadata !2664), !dbg !5527
  %cmp6 = icmp eq %struct._object* %call5, null, !dbg !5541
  br i1 %cmp6, label %if.then.9, label %lor.lhs.false, !dbg !5543

lor.lhs.false:                                    ; preds = %if.then
  %call7 = tail call i64 @PyDict_Size(%struct._object* %kwds) #1, !dbg !5544
  %cmp8 = icmp sgt i64 %call7, 1, !dbg !5545
  br i1 %cmp8, label %if.then.9, label %if.end.10, !dbg !5546

if.then.9:                                        ; preds = %lor.lhs.false, %if.then
  %1 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !5547, !tbaa !2681
  tail call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.68, i64 0, i64 0)) #1, !dbg !5549
  br label %cleanup.90, !dbg !5550

if.end.10:                                        ; preds = %entry, %lor.lhs.false, %land.lhs.true.2, %land.lhs.true
  %fillvalue.0 = phi %struct._object* [ %call5, %lor.lhs.false ], [ @_Py_NoneStruct, %land.lhs.true.2 ], [ @_Py_NoneStruct, %land.lhs.true ], [ @_Py_NoneStruct, %entry ]
  %call11 = tail call %struct._object* @PyTuple_New(i64 %call) #1, !dbg !5551
  tail call void @llvm.dbg.value(metadata %struct._object* %call11, i64 0, metadata !1697, metadata !2664), !dbg !5552
  %cmp12 = icmp eq %struct._object* %call11, null, !dbg !5553
  br i1 %cmp12, label %cleanup.90, label %for.cond.preheader, !dbg !5555

for.cond.preheader:                               ; preds = %if.end.10
  %cmp15.155 = icmp sgt i64 %call, 0, !dbg !5556
  br i1 %cmp15.155, label %for.body.lr.ph, label %for.end, !dbg !5557

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %ob_item = getelementptr inbounds %struct._object, %struct._object* %args, i64 1, i32 1, !dbg !5558
  %2 = bitcast %struct._typeobject** %ob_item to [1 x %struct._object*]*, !dbg !5558
  %ob_item28 = getelementptr inbounds %struct._object, %struct._object* %call11, i64 1, i32 1, !dbg !5559
  %3 = bitcast %struct._typeobject** %ob_item28 to [1 x %struct._object*]*, !dbg !5559
  br label %for.body, !dbg !5557

for.body:                                         ; preds = %for.body.lr.ph, %if.end.27
  %i.0156 = phi i64 [ 0, %for.body.lr.ph ], [ %inc, %if.end.27 ]
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %2, i64 0, i64 %i.0156, !dbg !5558
  %4 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !5558, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %4, i64 0, metadata !1701, metadata !2664), !dbg !5560
  %call16 = tail call %struct._object* @PyObject_GetIter(%struct._object* %4) #1, !dbg !5561
  tail call void @llvm.dbg.value(metadata %struct._object* %call16, i64 0, metadata !1705, metadata !2664), !dbg !5562
  %cmp17 = icmp eq %struct._object* %call16, null, !dbg !5563
  br i1 %cmp17, label %if.then.18, label %if.end.27, !dbg !5564

if.then.18:                                       ; preds = %for.body
  %i.0156.lcssa = phi i64 [ %i.0156, %for.body ]
  %5 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !5565, !tbaa !2681
  %call19 = tail call i32 @PyErr_ExceptionMatches(%struct._object* %5) #1, !dbg !5567
  %tobool = icmp eq i32 %call19, 0, !dbg !5567
  br i1 %tobool, label %do.body, label %if.then.20, !dbg !5568

if.then.20:                                       ; preds = %if.then.18
  %6 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !5569, !tbaa !2681
  %add = add i64 %i.0156.lcssa, 1, !dbg !5570
  %call21 = tail call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %6, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.69, i64 0, i64 0), i64 %add) #1, !dbg !5571
  br label %do.body, !dbg !5571

do.body:                                          ; preds = %if.then.18, %if.then.20
  tail call void @llvm.dbg.value(metadata %struct._object* %call11, i64 0, metadata !1706, metadata !2664), !dbg !5572
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call11, i64 0, i32 0, !dbg !5574
  %7 = load i64, i64* %ob_refcnt, align 8, !dbg !5574, !tbaa !2694
  %dec = add i64 %7, -1, !dbg !5574
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5574, !tbaa !2694
  %cmp23 = icmp eq i64 %dec, 0, !dbg !5574
  br i1 %cmp23, label %if.else, label %cleanup.90, !dbg !5576

if.else:                                          ; preds = %do.body
  %ob_type25 = getelementptr inbounds %struct._object, %struct._object* %call11, i64 0, i32 1, !dbg !5577
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type25, align 8, !dbg !5577, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i64 0, i32 4, !dbg !5577
  %9 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5577, !tbaa !2717
  tail call void %9(%struct._object* %call11) #1, !dbg !5577
  br label %cleanup.90

if.end.27:                                        ; preds = %for.body
  %arrayidx29 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %3, i64 0, i64 %i.0156, !dbg !5559
  store %struct._object* %call16, %struct._object** %arrayidx29, align 8, !dbg !5559, !tbaa !2681
  %inc = add nuw nsw i64 %i.0156, 1, !dbg !5579
  tail call void @llvm.dbg.value(metadata i64 %inc, i64 0, metadata !1696, metadata !2664), !dbg !5580
  %cmp15 = icmp slt i64 %inc, %call, !dbg !5556
  br i1 %cmp15, label %for.body, label %for.end.loopexit, !dbg !5557

for.end.loopexit:                                 ; preds = %if.end.27
  br label %for.end, !dbg !5581

for.end:                                          ; preds = %for.end.loopexit, %for.cond.preheader
  %call31 = tail call %struct._object* @PyTuple_New(i64 %call) #1, !dbg !5581
  tail call void @llvm.dbg.value(metadata %struct._object* %call31, i64 0, metadata !1698, metadata !2664), !dbg !5582
  %cmp32 = icmp eq %struct._object* %call31, null, !dbg !5583
  br i1 %cmp32, label %do.body.34, label %for.cond.47.preheader, !dbg !5584

for.cond.47.preheader:                            ; preds = %for.end
  br i1 %cmp15.155, label %for.body.49.lr.ph, label %for.end.55, !dbg !5585

for.body.49.lr.ph:                                ; preds = %for.cond.47.preheader
  %ob_item51 = getelementptr inbounds %struct._object, %struct._object* %call31, i64 1, i32 1, !dbg !5587
  %10 = bitcast %struct._typeobject** %ob_item51 to [1 x %struct._object*]*, !dbg !5587
  %.promoted = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !5590, !tbaa !2694
  %backedge.overflow = icmp eq i64 %call, 0
  br i1 %backedge.overflow, label %for.body.49.preheader, label %overflow.checked, !dbg !5585

for.body.49.preheader:                            ; preds = %middle.block, %for.body.49.lr.ph
  %i.1153.ph = phi i64 [ 0, %for.body.49.lr.ph ], [ %resume.val, %middle.block ]
  br label %for.body.49, !dbg !5587

overflow.checked:                                 ; preds = %for.body.49.lr.ph
  %n.vec = and i64 %call, -4, !dbg !5591
  %cmp.zero = icmp eq i64 %n.vec, 0, !dbg !5591
  br i1 %cmp.zero, label %middle.block, label %vector.body.preheader, !dbg !5585

vector.body.preheader:                            ; preds = %overflow.checked
  %11 = add i64 %call, -4, !dbg !5587
  %12 = lshr i64 %11, 2, !dbg !5587
  %13 = add nuw nsw i64 %12, 1, !dbg !5587
  %xtraiter = and i64 %13, 3, !dbg !5587
  %lcmp.mod = icmp eq i64 %xtraiter, 0, !dbg !5587
  br i1 %lcmp.mod, label %vector.body.preheader.split, label %vector.body.prol.preheader, !dbg !5587

vector.body.prol.preheader:                       ; preds = %vector.body.preheader
  br label %vector.body.prol, !dbg !5587

vector.body.prol:                                 ; preds = %vector.body.prol.preheader, %vector.body.prol
  %index.prol = phi i64 [ %index.next.prol, %vector.body.prol ], [ 0, %vector.body.prol.preheader ], !dbg !5591
  %prol.iter = phi i64 [ %prol.iter.sub, %vector.body.prol ], [ %xtraiter, %vector.body.prol.preheader ]
  %14 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %10, i64 0, i64 %index.prol, !dbg !5587
  %15 = bitcast %struct._object** %14 to <2 x %struct._object*>*, !dbg !5587
  store <2 x %struct._object*> <%struct._object* @_Py_NoneStruct, %struct._object* @_Py_NoneStruct>, <2 x %struct._object*>* %15, align 8, !dbg !5587, !tbaa !2681
  %16 = getelementptr %struct._object*, %struct._object** %14, i64 2, !dbg !5587
  %17 = bitcast %struct._object** %16 to <2 x %struct._object*>*, !dbg !5587
  store <2 x %struct._object*> <%struct._object* @_Py_NoneStruct, %struct._object* @_Py_NoneStruct>, <2 x %struct._object*>* %17, align 8, !dbg !5587, !tbaa !2681
  %index.next.prol = add i64 %index.prol, 4, !dbg !5591
  %prol.iter.sub = add i64 %prol.iter, -1, !dbg !5591
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0, !dbg !5591
  br i1 %prol.iter.cmp, label %vector.body.preheader.split.loopexit, label %vector.body.prol, !dbg !5591, !llvm.loop !5592

vector.body.preheader.split.loopexit:             ; preds = %vector.body.prol
  %index.next.prol.lcssa = phi i64 [ %index.next.prol, %vector.body.prol ]
  br label %vector.body.preheader.split, !dbg !5587

vector.body.preheader.split:                      ; preds = %vector.body.preheader.split.loopexit, %vector.body.preheader
  %index.unr = phi i64 [ 0, %vector.body.preheader ], [ %index.next.prol.lcssa, %vector.body.preheader.split.loopexit ]
  %18 = icmp ult i64 %11, 12, !dbg !5587
  br i1 %18, label %middle.block.loopexit, label %vector.body.preheader.split.split, !dbg !5587

vector.body.preheader.split.split:                ; preds = %vector.body.preheader.split
  br label %vector.body, !dbg !5587

vector.body:                                      ; preds = %vector.body, %vector.body.preheader.split.split
  %index = phi i64 [ %index.unr, %vector.body.preheader.split.split ], [ %index.next.3, %vector.body ], !dbg !5591
  %19 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %10, i64 0, i64 %index, !dbg !5587
  %20 = bitcast %struct._object** %19 to <2 x %struct._object*>*, !dbg !5587
  store <2 x %struct._object*> <%struct._object* @_Py_NoneStruct, %struct._object* @_Py_NoneStruct>, <2 x %struct._object*>* %20, align 8, !dbg !5587, !tbaa !2681
  %21 = getelementptr %struct._object*, %struct._object** %19, i64 2, !dbg !5587
  %22 = bitcast %struct._object** %21 to <2 x %struct._object*>*, !dbg !5587
  store <2 x %struct._object*> <%struct._object* @_Py_NoneStruct, %struct._object* @_Py_NoneStruct>, <2 x %struct._object*>* %22, align 8, !dbg !5587, !tbaa !2681
  %index.next = add i64 %index, 4, !dbg !5591
  %23 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %10, i64 0, i64 %index.next, !dbg !5587
  %24 = bitcast %struct._object** %23 to <2 x %struct._object*>*, !dbg !5587
  store <2 x %struct._object*> <%struct._object* @_Py_NoneStruct, %struct._object* @_Py_NoneStruct>, <2 x %struct._object*>* %24, align 8, !dbg !5587, !tbaa !2681
  %25 = getelementptr %struct._object*, %struct._object** %23, i64 2, !dbg !5587
  %26 = bitcast %struct._object** %25 to <2 x %struct._object*>*, !dbg !5587
  store <2 x %struct._object*> <%struct._object* @_Py_NoneStruct, %struct._object* @_Py_NoneStruct>, <2 x %struct._object*>* %26, align 8, !dbg !5587, !tbaa !2681
  %index.next.1 = add i64 %index, 8, !dbg !5591
  %27 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %10, i64 0, i64 %index.next.1, !dbg !5587
  %28 = bitcast %struct._object** %27 to <2 x %struct._object*>*, !dbg !5587
  store <2 x %struct._object*> <%struct._object* @_Py_NoneStruct, %struct._object* @_Py_NoneStruct>, <2 x %struct._object*>* %28, align 8, !dbg !5587, !tbaa !2681
  %29 = getelementptr %struct._object*, %struct._object** %27, i64 2, !dbg !5587
  %30 = bitcast %struct._object** %29 to <2 x %struct._object*>*, !dbg !5587
  store <2 x %struct._object*> <%struct._object* @_Py_NoneStruct, %struct._object* @_Py_NoneStruct>, <2 x %struct._object*>* %30, align 8, !dbg !5587, !tbaa !2681
  %index.next.2 = add i64 %index, 12, !dbg !5591
  %31 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %10, i64 0, i64 %index.next.2, !dbg !5587
  %32 = bitcast %struct._object** %31 to <2 x %struct._object*>*, !dbg !5587
  store <2 x %struct._object*> <%struct._object* @_Py_NoneStruct, %struct._object* @_Py_NoneStruct>, <2 x %struct._object*>* %32, align 8, !dbg !5587, !tbaa !2681
  %33 = getelementptr %struct._object*, %struct._object** %31, i64 2, !dbg !5587
  %34 = bitcast %struct._object** %33 to <2 x %struct._object*>*, !dbg !5587
  store <2 x %struct._object*> <%struct._object* @_Py_NoneStruct, %struct._object* @_Py_NoneStruct>, <2 x %struct._object*>* %34, align 8, !dbg !5587, !tbaa !2681
  %index.next.3 = add i64 %index, 16, !dbg !5591
  %35 = icmp eq i64 %index.next.3, %n.vec, !dbg !5591
  br i1 %35, label %middle.block.loopexit.unr-lcssa, label %vector.body, !dbg !5591, !llvm.loop !5593

middle.block.loopexit.unr-lcssa:                  ; preds = %vector.body
  br label %middle.block.loopexit

middle.block.loopexit:                            ; preds = %vector.body.preheader.split, %middle.block.loopexit.unr-lcssa
  br label %middle.block

middle.block:                                     ; preds = %middle.block.loopexit, %overflow.checked
  %resume.val = phi i64 [ 0, %overflow.checked ], [ %n.vec, %middle.block.loopexit ]
  %cmp.n = icmp eq i64 %call, %resume.val
  br i1 %cmp.n, label %for.cond.47.for.end.55_crit_edge, label %for.body.49.preheader, !dbg !5585

do.body.34:                                       ; preds = %for.end
  tail call void @llvm.dbg.value(metadata %struct._object* %call11, i64 0, metadata !1710, metadata !2664), !dbg !5594
  %ob_refcnt36 = getelementptr inbounds %struct._object, %struct._object* %call11, i64 0, i32 0, !dbg !5596
  %36 = load i64, i64* %ob_refcnt36, align 8, !dbg !5596, !tbaa !2694
  %dec37 = add i64 %36, -1, !dbg !5596
  store i64 %dec37, i64* %ob_refcnt36, align 8, !dbg !5596, !tbaa !2694
  %cmp38 = icmp eq i64 %dec37, 0, !dbg !5596
  br i1 %cmp38, label %if.else.40, label %cleanup.90, !dbg !5598

if.else.40:                                       ; preds = %do.body.34
  %ob_type41 = getelementptr inbounds %struct._object, %struct._object* %call11, i64 0, i32 1, !dbg !5599
  %37 = load %struct._typeobject*, %struct._typeobject** %ob_type41, align 8, !dbg !5599, !tbaa !2667
  %tp_dealloc42 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %37, i64 0, i32 4, !dbg !5599
  %38 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc42, align 8, !dbg !5599, !tbaa !2717
  tail call void %38(%struct._object* %call11) #1, !dbg !5599
  br label %cleanup.90

for.body.49:                                      ; preds = %for.body.49.preheader, %for.body.49
  %i.1153 = phi i64 [ %inc54, %for.body.49 ], [ %i.1153.ph, %for.body.49.preheader ]
  %arrayidx52 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %10, i64 0, i64 %i.1153, !dbg !5587
  store %struct._object* @_Py_NoneStruct, %struct._object** %arrayidx52, align 8, !dbg !5587, !tbaa !2681
  %inc54 = add nuw nsw i64 %i.1153, 1, !dbg !5591
  tail call void @llvm.dbg.value(metadata i64 %inc54, i64 0, metadata !1696, metadata !2664), !dbg !5580
  %exitcond = icmp eq i64 %inc54, %call, !dbg !5585
  br i1 %exitcond, label %for.cond.47.for.end.55_crit_edge.loopexit, label %for.body.49, !dbg !5585, !llvm.loop !5601

for.cond.47.for.end.55_crit_edge.loopexit:        ; preds = %for.body.49
  br label %for.cond.47.for.end.55_crit_edge, !dbg !5585

for.cond.47.for.end.55_crit_edge:                 ; preds = %for.cond.47.for.end.55_crit_edge.loopexit, %middle.block
  %39 = add i64 %call, %.promoted, !dbg !5585
  store i64 %39, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !5590, !tbaa !2694
  br label %for.end.55, !dbg !5585

for.end.55:                                       ; preds = %for.cond.47.for.end.55_crit_edge, %for.cond.47.preheader
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %type, i64 0, i32 36, !dbg !5602
  %40 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !5602, !tbaa !2835
  %call56 = tail call %struct._object* %40(%struct._typeobject* %type, i64 0) #1, !dbg !5603
  %cmp57 = icmp eq %struct._object* %call56, null, !dbg !5604
  br i1 %cmp57, label %do.body.59, label %if.end.83, !dbg !5605

do.body.59:                                       ; preds = %for.end.55
  tail call void @llvm.dbg.value(metadata %struct._object* %call11, i64 0, metadata !1714, metadata !2664), !dbg !5606
  %ob_refcnt61 = getelementptr inbounds %struct._object, %struct._object* %call11, i64 0, i32 0, !dbg !5608
  %41 = load i64, i64* %ob_refcnt61, align 8, !dbg !5608, !tbaa !2694
  %dec62 = add i64 %41, -1, !dbg !5608
  store i64 %dec62, i64* %ob_refcnt61, align 8, !dbg !5608, !tbaa !2694
  %cmp63 = icmp eq i64 %dec62, 0, !dbg !5608
  br i1 %cmp63, label %if.else.65, label %if.end.68, !dbg !5610

if.else.65:                                       ; preds = %do.body.59
  %ob_type66 = getelementptr inbounds %struct._object, %struct._object* %call11, i64 0, i32 1, !dbg !5611
  %42 = load %struct._typeobject*, %struct._typeobject** %ob_type66, align 8, !dbg !5611, !tbaa !2667
  %tp_dealloc67 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %42, i64 0, i32 4, !dbg !5611
  %43 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc67, align 8, !dbg !5611, !tbaa !2717
  tail call void %43(%struct._object* %call11) #1, !dbg !5611
  br label %if.end.68

if.end.68:                                        ; preds = %do.body.59, %if.else.65
  tail call void @llvm.dbg.value(metadata %struct._object* %call31, i64 0, metadata !1718, metadata !2664), !dbg !5613
  %ob_refcnt73 = getelementptr inbounds %struct._object, %struct._object* %call31, i64 0, i32 0, !dbg !5615
  %44 = load i64, i64* %ob_refcnt73, align 8, !dbg !5615, !tbaa !2694
  %dec74 = add i64 %44, -1, !dbg !5615
  store i64 %dec74, i64* %ob_refcnt73, align 8, !dbg !5615, !tbaa !2694
  %cmp75 = icmp eq i64 %dec74, 0, !dbg !5615
  br i1 %cmp75, label %if.else.77, label %cleanup.90, !dbg !5617

if.else.77:                                       ; preds = %if.end.68
  %ob_type78 = getelementptr inbounds %struct._object, %struct._object* %call31, i64 0, i32 1, !dbg !5618
  %45 = load %struct._typeobject*, %struct._typeobject** %ob_type78, align 8, !dbg !5618, !tbaa !2667
  %tp_dealloc79 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %45, i64 0, i32 4, !dbg !5618
  %46 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc79, align 8, !dbg !5618, !tbaa !2717
  tail call void %46(%struct._object* %call31) #1, !dbg !5618
  br label %cleanup.90

if.end.83:                                        ; preds = %for.end.55
  %ittuple84 = getelementptr inbounds %struct._object, %struct._object* %call56, i64 2, !dbg !5620
  %47 = bitcast %struct._object* %ittuple84 to %struct._object**, !dbg !5620
  store %struct._object* %call11, %struct._object** %47, align 8, !dbg !5621, !tbaa !5353
  %48 = getelementptr inbounds %struct._object, %struct._object* %call56, i64 1, i32 0, !dbg !5622
  store i64 %call, i64* %48, align 8, !dbg !5623, !tbaa !5419
  %numactive = getelementptr inbounds %struct._object, %struct._object* %call56, i64 1, i32 1, !dbg !5624
  %49 = bitcast %struct._typeobject** %numactive to i64*, !dbg !5624
  store i64 %call, i64* %49, align 8, !dbg !5625, !tbaa !5428
  %result86 = getelementptr inbounds %struct._object, %struct._object* %call56, i64 2, i32 1, !dbg !5626
  %50 = bitcast %struct._typeobject** %result86 to %struct._object**, !dbg !5626
  store %struct._object* %call31, %struct._object** %50, align 8, !dbg !5627, !tbaa !5366
  %ob_refcnt87 = getelementptr inbounds %struct._object, %struct._object* %fillvalue.0, i64 0, i32 0, !dbg !5628
  %51 = load i64, i64* %ob_refcnt87, align 8, !dbg !5628, !tbaa !2694
  %inc88 = add i64 %51, 1, !dbg !5628
  store i64 %inc88, i64* %ob_refcnt87, align 8, !dbg !5628, !tbaa !2694
  %fillvalue89 = getelementptr inbounds %struct._object, %struct._object* %call56, i64 3, !dbg !5629
  %52 = bitcast %struct._object* %fillvalue89 to %struct._object**, !dbg !5629
  store %struct._object* %fillvalue.0, %struct._object** %52, align 8, !dbg !5630, !tbaa !5378
  br label %cleanup.90, !dbg !5631

cleanup.90:                                       ; preds = %if.else.77, %if.end.68, %if.else.40, %do.body.34, %do.body, %if.else, %if.end.10, %if.end.83, %if.then.9
  %retval.2 = phi %struct._object* [ null, %if.then.9 ], [ %call56, %if.end.83 ], [ null, %if.end.10 ], [ null, %if.else ], [ null, %do.body ], [ null, %do.body.34 ], [ null, %if.else.40 ], [ null, %if.end.68 ], [ null, %if.else.77 ]
  ret %struct._object* %retval.2, !dbg !5632
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @zip_longest_reduce(%struct.ziplongestobject* nocapture readonly %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.ziplongestobject* %lz, i64 0, metadata !1665, metadata !2664), !dbg !5633
  %ittuple = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %lz, i64 0, i32 3, !dbg !5634
  %0 = bitcast %struct._object** %ittuple to %struct.PyVarObject**, !dbg !5634
  %1 = load %struct.PyVarObject*, %struct.PyVarObject** %0, align 8, !dbg !5634, !tbaa !5353
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1, i64 0, i32 1, !dbg !5634
  %2 = load i64, i64* %ob_size, align 8, !dbg !5634, !tbaa !2957
  %call = tail call %struct._object* @PyTuple_New(i64 %2) #1, !dbg !5635
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1667, metadata !2664), !dbg !5636
  %cmp = icmp eq %struct._object* %call, null, !dbg !5637
  br i1 %cmp, label %cleanup.27, label %for.cond.preheader, !dbg !5639

for.cond.preheader:                               ; preds = %entry
  %3 = load %struct._object*, %struct._object** %ittuple, align 8, !dbg !5640, !tbaa !5353
  %4 = getelementptr inbounds %struct._object, %struct._object* %3, i64 1, i32 0, !dbg !5640
  %5 = load i64, i64* %4, align 8, !dbg !5640, !tbaa !2957
  %cmp3.48 = icmp sgt i64 %5, 0, !dbg !5641
  br i1 %cmp3.48, label %for.body.lr.ph, label %for.end, !dbg !5642

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %ob_item22 = getelementptr inbounds %struct._object, %struct._object* %call, i64 1, i32 1, !dbg !5643
  %6 = bitcast %struct._typeobject** %ob_item22 to [1 x %struct._object*]*, !dbg !5643
  br label %for.body, !dbg !5642

for.body:                                         ; preds = %for.body.lr.ph, %if.end.20
  %7 = phi %struct._object* [ %3, %for.body.lr.ph ], [ %14, %if.end.20 ]
  %conv50 = phi i64 [ 0, %for.body.lr.ph ], [ %conv, %if.end.20 ]
  %i.049 = phi i32 [ 0, %for.body.lr.ph ], [ %inc24, %if.end.20 ]
  %ob_item = getelementptr inbounds %struct._object, %struct._object* %7, i64 1, i32 1, !dbg !5644
  %8 = bitcast %struct._typeobject** %ob_item to [1 x %struct._object*]*, !dbg !5644
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %8, i64 0, i64 %conv50, !dbg !5644
  %9 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !5644, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %9, i64 0, metadata !1668, metadata !2664), !dbg !5645
  %cmp6 = icmp eq %struct._object* %9, null, !dbg !5646
  br i1 %cmp6, label %if.then.8, label %if.else.18, !dbg !5647

if.then.8:                                        ; preds = %for.body
  %call9 = tail call %struct._object* @PyTuple_New(i64 0) #1, !dbg !5648
  tail call void @llvm.dbg.value(metadata %struct._object* %call9, i64 0, metadata !1668, metadata !2664), !dbg !5645
  %cmp10 = icmp eq %struct._object* %call9, null, !dbg !5649
  br i1 %cmp10, label %do.body, label %if.end.20, !dbg !5650

do.body:                                          ; preds = %if.then.8
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1672, metadata !2664), !dbg !5651
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 0, !dbg !5653
  %10 = load i64, i64* %ob_refcnt, align 8, !dbg !5653, !tbaa !2694
  %dec = add i64 %10, -1, !dbg !5653
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5653, !tbaa !2694
  %cmp13 = icmp eq i64 %dec, 0, !dbg !5653
  br i1 %cmp13, label %if.else, label %cleanup.27, !dbg !5655

if.else:                                          ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 1, !dbg !5656
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5656, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i64 0, i32 4, !dbg !5656
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5656, !tbaa !2717
  tail call void %12(%struct._object* %call) #1, !dbg !5656
  br label %cleanup.27

if.else.18:                                       ; preds = %for.body
  %ob_refcnt19 = getelementptr inbounds %struct._object, %struct._object* %9, i64 0, i32 0, !dbg !5658
  %13 = load i64, i64* %ob_refcnt19, align 8, !dbg !5658, !tbaa !2694
  %inc = add i64 %13, 1, !dbg !5658
  store i64 %inc, i64* %ob_refcnt19, align 8, !dbg !5658, !tbaa !2694
  br label %if.end.20

if.end.20:                                        ; preds = %if.then.8, %if.else.18
  %elem.0 = phi %struct._object* [ %call9, %if.then.8 ], [ %9, %if.else.18 ]
  %arrayidx23 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %6, i64 0, i64 %conv50, !dbg !5643
  store %struct._object* %elem.0, %struct._object** %arrayidx23, align 8, !dbg !5643, !tbaa !2681
  %inc24 = add i32 %i.049, 1, !dbg !5659
  tail call void @llvm.dbg.value(metadata i32 %inc24, i64 0, metadata !1666, metadata !2664), !dbg !5660
  %conv = sext i32 %inc24 to i64, !dbg !5661
  %14 = load %struct._object*, %struct._object** %ittuple, align 8, !dbg !5640, !tbaa !5353
  %15 = getelementptr inbounds %struct._object, %struct._object* %14, i64 1, i32 0, !dbg !5640
  %16 = load i64, i64* %15, align 8, !dbg !5640, !tbaa !2957
  %cmp3 = icmp slt i64 %conv, %16, !dbg !5641
  br i1 %cmp3, label %for.body, label %for.end.loopexit, !dbg !5642

for.end.loopexit:                                 ; preds = %if.end.20
  br label %for.end, !dbg !5664

for.end:                                          ; preds = %for.end.loopexit, %for.cond.preheader
  %ob_type25 = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %lz, i64 0, i32 0, i32 1, !dbg !5664
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type25, align 8, !dbg !5664, !tbaa !2667
  %fillvalue = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %lz, i64 0, i32 5, !dbg !5665
  %18 = load %struct._object*, %struct._object** %fillvalue, align 8, !dbg !5665, !tbaa !5378
  %call26 = tail call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.66, i64 0, i64 0), %struct._typeobject* %17, %struct._object* %call, %struct._object* %18) #1, !dbg !5666
  br label %cleanup.27, !dbg !5667

cleanup.27:                                       ; preds = %do.body, %if.else, %entry, %for.end
  %retval.2 = phi %struct._object* [ %call26, %for.end ], [ null, %entry ], [ null, %if.else ], [ null, %do.body ]
  ret %struct._object* %retval.2, !dbg !5668
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @zip_longest_setstate(%struct.ziplongestobject* nocapture %lz, %struct._object* %state) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.ziplongestobject* %lz, i64 0, metadata !1682, metadata !2664), !dbg !5669
  tail call void @llvm.dbg.value(metadata %struct._object* %state, i64 0, metadata !1683, metadata !2664), !dbg !5670
  %fillvalue = getelementptr inbounds %struct.ziplongestobject, %struct.ziplongestobject* %lz, i64 0, i32 5, !dbg !5671
  %0 = load %struct._object*, %struct._object** %fillvalue, align 8, !dbg !5671, !tbaa !5378
  tail call void @llvm.dbg.value(metadata %struct._object* %0, i64 0, metadata !1684, metadata !2664), !dbg !5671
  %cmp = icmp eq %struct._object* %0, null, !dbg !5673
  br i1 %cmp, label %if.end.5, label %if.then, !dbg !5674

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %fillvalue, align 8, !dbg !5675, !tbaa !5378
  tail call void @llvm.dbg.value(metadata %struct._object* %0, i64 0, metadata !1686, metadata !2664), !dbg !5677
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %0, i64 0, i32 0, !dbg !5679
  %1 = load i64, i64* %ob_refcnt, align 8, !dbg !5679, !tbaa !2694
  %dec = add i64 %1, -1, !dbg !5679
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5679, !tbaa !2694
  %cmp3 = icmp eq i64 %dec, 0, !dbg !5679
  br i1 %cmp3, label %if.else, label %if.end.5, !dbg !5681

if.else:                                          ; preds = %if.then
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i64 0, i32 1, !dbg !5682
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5682, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i64 0, i32 4, !dbg !5682
  %3 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5682, !tbaa !2717
  tail call void %3(%struct._object* %0) #1, !dbg !5682
  br label %if.end.5

if.end.5:                                         ; preds = %if.else, %if.then, %entry
  store %struct._object* %state, %struct._object** %fillvalue, align 8, !dbg !5684, !tbaa !5378
  %ob_refcnt10 = getelementptr inbounds %struct._object, %struct._object* %state, i64 0, i32 0, !dbg !5685
  %4 = load i64, i64* %ob_refcnt10, align 8, !dbg !5685, !tbaa !2694
  %inc = add i64 %4, 1, !dbg !5685
  store i64 %inc, i64* %ob_refcnt10, align 8, !dbg !5685, !tbaa !2694
  %5 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !5686, !tbaa !2694
  %inc11 = add i64 %5, 1, !dbg !5686
  store i64 %inc11, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !5686, !tbaa !2694
  ret %struct._object* @_Py_NoneStruct, !dbg !5686
}

declare i64 @PySequence_Size(%struct._object*) #3

declare i64 @PyDict_Size(%struct._object*) #3

declare %struct._object* @PyDict_GetItemString(%struct._object*, i8*) #3

declare %struct._object* @PyErr_Format(%struct._object*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal void @permutations_dealloc(%struct.permutationsobject* %po) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.permutationsobject* %po, i64 0, metadata !1724, metadata !2664), !dbg !5687
  %0 = bitcast %struct.permutationsobject* %po to i8*, !dbg !5688
  tail call void @PyObject_GC_UnTrack(i8* %0) #1, !dbg !5689
  %pool = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %po, i64 0, i32 1, !dbg !5690
  %1 = load %struct._object*, %struct._object** %pool, align 8, !dbg !5690, !tbaa !5692
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1725, metadata !2664), !dbg !5690
  %cmp = icmp eq %struct._object* %1, null, !dbg !5694
  br i1 %cmp, label %if.end.4, label %do.body.1, !dbg !5695

do.body.1:                                        ; preds = %entry
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1727, metadata !2664), !dbg !5696
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !5698
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !5698, !tbaa !2694
  %dec = add i64 %2, -1, !dbg !5698
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5698, !tbaa !2694
  %cmp2 = icmp eq i64 %dec, 0, !dbg !5698
  br i1 %cmp2, label %if.else, label %if.end.4, !dbg !5700

if.else:                                          ; preds = %do.body.1
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !5701
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5701, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 4, !dbg !5701
  %4 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5701, !tbaa !2717
  tail call void %4(%struct._object* %1) #1, !dbg !5701
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %do.body.1, %entry
  %result = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %po, i64 0, i32 4, !dbg !5703
  %5 = load %struct._object*, %struct._object** %result, align 8, !dbg !5703, !tbaa !5705
  tail call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !1730, metadata !2664), !dbg !5703
  %cmp9 = icmp eq %struct._object* %5, null, !dbg !5706
  br i1 %cmp9, label %if.end.23, label %do.body.11, !dbg !5707

do.body.11:                                       ; preds = %if.end.4
  tail call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !1732, metadata !2664), !dbg !5708
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 0, !dbg !5710
  %6 = load i64, i64* %ob_refcnt13, align 8, !dbg !5710, !tbaa !2694
  %dec14 = add i64 %6, -1, !dbg !5710
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !5710, !tbaa !2694
  %cmp15 = icmp eq i64 %dec14, 0, !dbg !5710
  br i1 %cmp15, label %if.else.17, label %if.end.23, !dbg !5712

if.else.17:                                       ; preds = %do.body.11
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 1, !dbg !5713
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !5713, !tbaa !2667
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i64 0, i32 4, !dbg !5713
  %8 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !5713, !tbaa !2717
  tail call void %8(%struct._object* %5) #1, !dbg !5713
  br label %if.end.23

if.end.23:                                        ; preds = %if.else.17, %do.body.11, %if.end.4
  %indices = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %po, i64 0, i32 2, !dbg !5715
  %9 = bitcast i64** %indices to i8**, !dbg !5715
  %10 = load i8*, i8** %9, align 8, !dbg !5715, !tbaa !5716
  tail call void @PyMem_Free(i8* %10) #1, !dbg !5717
  %cycles = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %po, i64 0, i32 3, !dbg !5718
  %11 = bitcast i64** %cycles to i8**, !dbg !5718
  %12 = load i8*, i8** %11, align 8, !dbg !5718, !tbaa !5719
  tail call void @PyMem_Free(i8* %12) #1, !dbg !5720
  %ob_type26 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %po, i64 0, i32 0, i32 1, !dbg !5721
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type26, align 8, !dbg !5721, !tbaa !2667
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i64 0, i32 38, !dbg !5722
  %14 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !5722, !tbaa !2744
  tail call void %14(i8* %0) #1, !dbg !5721
  ret void, !dbg !5723
}

; Function Attrs: nounwind uwtable
define internal i32 @permutations_traverse(%struct.permutationsobject* nocapture readonly %po, i32 (%struct._object*, i8*)* nocapture %visit, i8* %arg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.permutationsobject* %po, i64 0, metadata !1739, metadata !2664), !dbg !5724
  tail call void @llvm.dbg.value(metadata i32 (%struct._object*, i8*)* %visit, i64 0, metadata !1740, metadata !2664), !dbg !5725
  tail call void @llvm.dbg.value(metadata i8* %arg, i64 0, metadata !1741, metadata !2664), !dbg !5726
  %pool = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %po, i64 0, i32 1, !dbg !5727
  %0 = load %struct._object*, %struct._object** %pool, align 8, !dbg !5727, !tbaa !5692
  %tobool = icmp eq %struct._object* %0, null, !dbg !5727
  br i1 %tobool, label %do.body.5, label %if.then, !dbg !5729

if.then:                                          ; preds = %entry
  %call = tail call i32 %visit(%struct._object* %0, i8* %arg) #1, !dbg !5730
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !1742, metadata !2664), !dbg !5730
  %tobool2 = icmp eq i32 %call, 0, !dbg !5732
  br i1 %tobool2, label %do.body.5, label %return

do.body.5:                                        ; preds = %entry, %if.then
  %result = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %po, i64 0, i32 4, !dbg !5734
  %1 = load %struct._object*, %struct._object** %result, align 8, !dbg !5734, !tbaa !5705
  %tobool6 = icmp eq %struct._object* %1, null, !dbg !5734
  br i1 %tobool6, label %do.end.18, label %if.then.7, !dbg !5736

if.then.7:                                        ; preds = %do.body.5
  %call10 = tail call i32 %visit(%struct._object* %1, i8* %arg) #1, !dbg !5737
  tail call void @llvm.dbg.value(metadata i32 %call10, i64 0, metadata !1746, metadata !2664), !dbg !5737
  %tobool11 = icmp eq i32 %call10, 0, !dbg !5739
  br i1 %tobool11, label %do.end.18, label %return

do.end.18:                                        ; preds = %do.body.5, %if.then.7
  br label %return, !dbg !5741

return:                                           ; preds = %if.then.7, %if.then, %do.end.18
  %retval.3 = phi i32 [ 0, %do.end.18 ], [ %call10, %if.then.7 ], [ %call, %if.then ]
  ret i32 %retval.3, !dbg !5742
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @permutations_next(%struct.permutationsobject* nocapture %po) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.permutationsobject* %po, i64 0, metadata !1754, metadata !2664), !dbg !5743
  %pool1 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %po, i64 0, i32 1, !dbg !5744
  %0 = load %struct._object*, %struct._object** %pool1, align 8, !dbg !5744, !tbaa !5692
  tail call void @llvm.dbg.value(metadata %struct._object* %0, i64 0, metadata !1757, metadata !2664), !dbg !5745
  %indices2 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %po, i64 0, i32 2, !dbg !5746
  %1 = load i64*, i64** %indices2, align 8, !dbg !5746, !tbaa !5716
  tail call void @llvm.dbg.value(metadata i64* %1, i64 0, metadata !1758, metadata !2664), !dbg !5747
  %cycles3 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %po, i64 0, i32 3, !dbg !5748
  %2 = load i64*, i64** %cycles3, align 8, !dbg !5748, !tbaa !5719
  tail call void @llvm.dbg.value(metadata i64* %2, i64 0, metadata !1759, metadata !2664), !dbg !5749
  %result4 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %po, i64 0, i32 4, !dbg !5750
  %3 = load %struct._object*, %struct._object** %result4, align 8, !dbg !5750, !tbaa !5705
  tail call void @llvm.dbg.value(metadata %struct._object* %3, i64 0, metadata !1760, metadata !2664), !dbg !5751
  %4 = getelementptr inbounds %struct._object, %struct._object* %0, i64 1, i32 0, !dbg !5752
  %5 = load i64, i64* %4, align 8, !dbg !5752, !tbaa !2957
  tail call void @llvm.dbg.value(metadata i64 %5, i64 0, metadata !1761, metadata !2664), !dbg !5753
  %r5 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %po, i64 0, i32 5, !dbg !5754
  %6 = load i64, i64* %r5, align 8, !dbg !5754, !tbaa !5755
  tail call void @llvm.dbg.value(metadata i64 %6, i64 0, metadata !1762, metadata !2664), !dbg !5756
  %stopped = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %po, i64 0, i32 6, !dbg !5757
  %7 = load i32, i32* %stopped, align 4, !dbg !5757, !tbaa !5759
  %tobool = icmp eq i32 %7, 0, !dbg !5760
  br i1 %tobool, label %if.end, label %cleanup.113, !dbg !5761

if.end:                                           ; preds = %entry
  %cmp = icmp eq %struct._object* %3, null, !dbg !5762
  br i1 %cmp, label %if.then.6, label %if.else, !dbg !5763

if.then.6:                                        ; preds = %if.end
  %call = tail call %struct._object* @PyTuple_New(i64 %6) #1, !dbg !5764
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1760, metadata !2664), !dbg !5751
  %cmp7 = icmp eq %struct._object* %call, null, !dbg !5766
  br i1 %cmp7, label %empty, label %if.end.9, !dbg !5768

if.end.9:                                         ; preds = %if.then.6
  store %struct._object* %call, %struct._object** %result4, align 8, !dbg !5769, !tbaa !5705
  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !1763, metadata !2664), !dbg !5770
  %cmp11.227 = icmp sgt i64 %6, 0, !dbg !5771
  br i1 %cmp11.227, label %for.body.lr.ph, label %if.end.109, !dbg !5774

for.body.lr.ph:                                   ; preds = %if.end.9
  %ob_item = getelementptr inbounds %struct._object, %struct._object* %0, i64 1, i32 1, !dbg !5775
  %8 = bitcast %struct._typeobject** %ob_item to [1 x %struct._object*]*, !dbg !5775
  %ob_item13 = getelementptr inbounds %struct._object, %struct._object* %call, i64 1, i32 1, !dbg !5777
  %9 = bitcast %struct._typeobject** %ob_item13 to [1 x %struct._object*]*, !dbg !5777
  %xtraiter = and i64 %6, 1, !dbg !5774
  %lcmp.mod = icmp eq i64 %xtraiter, 0, !dbg !5774
  br i1 %lcmp.mod, label %for.body.lr.ph.split, label %for.body.prol, !dbg !5774

for.body.prol:                                    ; preds = %for.body.lr.ph
  %10 = load i64, i64* %1, align 8, !dbg !5778, !tbaa !2984
  tail call void @llvm.dbg.value(metadata i64 %10, i64 0, metadata !1766, metadata !2664), !dbg !5779
  %arrayidx12.prol = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %8, i64 0, i64 %10, !dbg !5775
  %11 = load %struct._object*, %struct._object** %arrayidx12.prol, align 8, !dbg !5775, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %11, i64 0, metadata !1755, metadata !2664), !dbg !5780
  %ob_refcnt.prol = getelementptr inbounds %struct._object, %struct._object* %11, i64 0, i32 0, !dbg !5781
  %12 = load i64, i64* %ob_refcnt.prol, align 8, !dbg !5781, !tbaa !2694
  %inc.prol = add i64 %12, 1, !dbg !5781
  store i64 %inc.prol, i64* %ob_refcnt.prol, align 8, !dbg !5781, !tbaa !2694
  %arrayidx14.prol = bitcast %struct._typeobject** %ob_item13 to %struct._object**, !dbg !5777
  store %struct._object* %11, %struct._object** %arrayidx14.prol, align 8, !dbg !5777, !tbaa !2681
  tail call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !1763, metadata !2664), !dbg !5770
  br label %for.body.lr.ph.split, !dbg !5774

for.body.lr.ph.split:                             ; preds = %for.body.lr.ph, %for.body.prol
  %i.0228.unr = phi i64 [ 0, %for.body.lr.ph ], [ 1, %for.body.prol ]
  %13 = icmp eq i64 %6, 1, !dbg !5774
  br i1 %13, label %if.end.109.loopexit, label %for.body.lr.ph.split.split, !dbg !5774

for.body.lr.ph.split.split:                       ; preds = %for.body.lr.ph.split
  br label %for.body, !dbg !5774

for.body:                                         ; preds = %for.body, %for.body.lr.ph.split.split
  %i.0228 = phi i64 [ %i.0228.unr, %for.body.lr.ph.split.split ], [ %inc15.1, %for.body ]
  %arrayidx = getelementptr i64, i64* %1, i64 %i.0228, !dbg !5778
  %14 = load i64, i64* %arrayidx, align 8, !dbg !5778, !tbaa !2984
  tail call void @llvm.dbg.value(metadata i64 %14, i64 0, metadata !1766, metadata !2664), !dbg !5779
  %arrayidx12 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %8, i64 0, i64 %14, !dbg !5775
  %15 = load %struct._object*, %struct._object** %arrayidx12, align 8, !dbg !5775, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %15, i64 0, metadata !1755, metadata !2664), !dbg !5780
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %15, i64 0, i32 0, !dbg !5781
  %16 = load i64, i64* %ob_refcnt, align 8, !dbg !5781, !tbaa !2694
  %inc = add i64 %16, 1, !dbg !5781
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !5781, !tbaa !2694
  %arrayidx14 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %9, i64 0, i64 %i.0228, !dbg !5777
  store %struct._object* %15, %struct._object** %arrayidx14, align 8, !dbg !5777, !tbaa !2681
  %inc15 = add nuw nsw i64 %i.0228, 1, !dbg !5782
  tail call void @llvm.dbg.value(metadata i64 %inc15, i64 0, metadata !1763, metadata !2664), !dbg !5770
  %arrayidx.1 = getelementptr i64, i64* %1, i64 %inc15, !dbg !5778
  %17 = load i64, i64* %arrayidx.1, align 8, !dbg !5778, !tbaa !2984
  tail call void @llvm.dbg.value(metadata i64 %14, i64 0, metadata !1766, metadata !2664), !dbg !5779
  %arrayidx12.1 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %8, i64 0, i64 %17, !dbg !5775
  %18 = load %struct._object*, %struct._object** %arrayidx12.1, align 8, !dbg !5775, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %15, i64 0, metadata !1755, metadata !2664), !dbg !5780
  %ob_refcnt.1 = getelementptr inbounds %struct._object, %struct._object* %18, i64 0, i32 0, !dbg !5781
  %19 = load i64, i64* %ob_refcnt.1, align 8, !dbg !5781, !tbaa !2694
  %inc.1 = add i64 %19, 1, !dbg !5781
  store i64 %inc.1, i64* %ob_refcnt.1, align 8, !dbg !5781, !tbaa !2694
  %arrayidx14.1 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %9, i64 0, i64 %inc15, !dbg !5777
  store %struct._object* %18, %struct._object** %arrayidx14.1, align 8, !dbg !5777, !tbaa !2681
  %inc15.1 = add nsw i64 %i.0228, 2, !dbg !5782
  tail call void @llvm.dbg.value(metadata i64 %inc15, i64 0, metadata !1763, metadata !2664), !dbg !5770
  %exitcond.1 = icmp eq i64 %inc15.1, %6, !dbg !5774
  br i1 %exitcond.1, label %if.end.109.loopexit.unr-lcssa, label %for.body, !dbg !5774

if.else:                                          ; preds = %if.end
  %cmp16 = icmp eq i64 %5, 0, !dbg !5783
  br i1 %cmp16, label %empty, label %if.end.18, !dbg !5785

if.end.18:                                        ; preds = %if.else
  %ob_refcnt19 = getelementptr inbounds %struct._object, %struct._object* %3, i64 0, i32 0, !dbg !5786
  %20 = load i64, i64* %ob_refcnt19, align 8, !dbg !5786, !tbaa !2694
  %cmp20 = icmp sgt i64 %20, 1, !dbg !5787
  br i1 %cmp20, label %if.then.21, label %if.end.44, !dbg !5788

if.then.21:                                       ; preds = %if.end.18
  tail call void @llvm.dbg.value(metadata %struct._object* %3, i64 0, metadata !1767, metadata !2664), !dbg !5789
  %call22 = tail call %struct._object* @PyTuple_New(i64 %6) #1, !dbg !5790
  tail call void @llvm.dbg.value(metadata %struct._object* %call22, i64 0, metadata !1760, metadata !2664), !dbg !5751
  %cmp23 = icmp eq %struct._object* %call22, null, !dbg !5791
  br i1 %cmp23, label %empty, label %if.end.25, !dbg !5793

if.end.25:                                        ; preds = %if.then.21
  store %struct._object* %call22, %struct._object** %result4, align 8, !dbg !5794, !tbaa !5705
  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !1763, metadata !2664), !dbg !5770
  %cmp28.236 = icmp sgt i64 %6, 0, !dbg !5795
  br i1 %cmp28.236, label %for.body.29.lr.ph, label %do.body, !dbg !5798

for.body.29.lr.ph:                                ; preds = %if.end.25
  %ob_item30 = getelementptr inbounds %struct._object, %struct._object* %3, i64 1, i32 1, !dbg !5799
  %21 = bitcast %struct._typeobject** %ob_item30 to [1 x %struct._object*]*, !dbg !5799
  %ob_item34 = getelementptr inbounds %struct._object, %struct._object* %call22, i64 1, i32 1, !dbg !5801
  %22 = bitcast %struct._typeobject** %ob_item34 to [1 x %struct._object*]*, !dbg !5801
  %xtraiter267 = and i64 %6, 1, !dbg !5798
  %lcmp.mod268 = icmp eq i64 %xtraiter267, 0, !dbg !5798
  br i1 %lcmp.mod268, label %for.body.29.lr.ph.split, label %for.body.29.prol, !dbg !5798

for.body.29.prol:                                 ; preds = %for.body.29.lr.ph
  %arrayidx31.prol = bitcast %struct._typeobject** %ob_item30 to %struct._object**, !dbg !5799
  %23 = load %struct._object*, %struct._object** %arrayidx31.prol, align 8, !dbg !5799, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %23, i64 0, metadata !1755, metadata !2664), !dbg !5780
  %ob_refcnt32.prol = getelementptr inbounds %struct._object, %struct._object* %23, i64 0, i32 0, !dbg !5802
  %24 = load i64, i64* %ob_refcnt32.prol, align 8, !dbg !5802, !tbaa !2694
  %inc33.prol = add i64 %24, 1, !dbg !5802
  store i64 %inc33.prol, i64* %ob_refcnt32.prol, align 8, !dbg !5802, !tbaa !2694
  %arrayidx35.prol = bitcast %struct._typeobject** %ob_item34 to %struct._object**, !dbg !5801
  store %struct._object* %23, %struct._object** %arrayidx35.prol, align 8, !dbg !5801, !tbaa !2681
  tail call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !1763, metadata !2664), !dbg !5770
  br label %for.body.29.lr.ph.split, !dbg !5798

for.body.29.lr.ph.split:                          ; preds = %for.body.29.lr.ph, %for.body.29.prol
  %i.1237.unr = phi i64 [ 0, %for.body.29.lr.ph ], [ 1, %for.body.29.prol ]
  %25 = icmp eq i64 %6, 1, !dbg !5798
  br i1 %25, label %do.body.loopexit, label %for.body.29.lr.ph.split.split, !dbg !5798

for.body.29.lr.ph.split.split:                    ; preds = %for.body.29.lr.ph.split
  br label %for.body.29, !dbg !5798

for.body.29:                                      ; preds = %for.body.29, %for.body.29.lr.ph.split.split
  %i.1237 = phi i64 [ %i.1237.unr, %for.body.29.lr.ph.split.split ], [ %inc37.1, %for.body.29 ]
  %arrayidx31 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %21, i64 0, i64 %i.1237, !dbg !5799
  %26 = load %struct._object*, %struct._object** %arrayidx31, align 8, !dbg !5799, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %26, i64 0, metadata !1755, metadata !2664), !dbg !5780
  %ob_refcnt32 = getelementptr inbounds %struct._object, %struct._object* %26, i64 0, i32 0, !dbg !5802
  %27 = load i64, i64* %ob_refcnt32, align 8, !dbg !5802, !tbaa !2694
  %inc33 = add i64 %27, 1, !dbg !5802
  store i64 %inc33, i64* %ob_refcnt32, align 8, !dbg !5802, !tbaa !2694
  %arrayidx35 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %22, i64 0, i64 %i.1237, !dbg !5801
  store %struct._object* %26, %struct._object** %arrayidx35, align 8, !dbg !5801, !tbaa !2681
  %inc37 = add nuw nsw i64 %i.1237, 1, !dbg !5803
  tail call void @llvm.dbg.value(metadata i64 %inc37, i64 0, metadata !1763, metadata !2664), !dbg !5770
  %arrayidx31.1 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %21, i64 0, i64 %inc37, !dbg !5799
  %28 = load %struct._object*, %struct._object** %arrayidx31.1, align 8, !dbg !5799, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %26, i64 0, metadata !1755, metadata !2664), !dbg !5780
  %ob_refcnt32.1 = getelementptr inbounds %struct._object, %struct._object* %28, i64 0, i32 0, !dbg !5802
  %29 = load i64, i64* %ob_refcnt32.1, align 8, !dbg !5802, !tbaa !2694
  %inc33.1 = add i64 %29, 1, !dbg !5802
  store i64 %inc33.1, i64* %ob_refcnt32.1, align 8, !dbg !5802, !tbaa !2694
  %arrayidx35.1 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %22, i64 0, i64 %inc37, !dbg !5801
  store %struct._object* %28, %struct._object** %arrayidx35.1, align 8, !dbg !5801, !tbaa !2681
  %inc37.1 = add nsw i64 %i.1237, 2, !dbg !5803
  tail call void @llvm.dbg.value(metadata i64 %inc37, i64 0, metadata !1763, metadata !2664), !dbg !5770
  %exitcond245.1 = icmp eq i64 %inc37.1, %6, !dbg !5798
  br i1 %exitcond245.1, label %do.body.loopexit.unr-lcssa, label %for.body.29, !dbg !5798

do.body.loopexit.unr-lcssa:                       ; preds = %for.body.29
  br label %do.body.loopexit, !dbg !5804

do.body.loopexit:                                 ; preds = %for.body.29.lr.ph.split, %do.body.loopexit.unr-lcssa
  br label %do.body, !dbg !5804

do.body:                                          ; preds = %do.body.loopexit, %if.end.25
  tail call void @llvm.dbg.value(metadata %struct._object* %3, i64 0, metadata !1772, metadata !2664), !dbg !5804
  %30 = load i64, i64* %ob_refcnt19, align 8, !dbg !5806, !tbaa !2694
  %dec = add i64 %30, -1, !dbg !5806
  store i64 %dec, i64* %ob_refcnt19, align 8, !dbg !5806, !tbaa !2694
  %cmp40 = icmp eq i64 %dec, 0, !dbg !5806
  br i1 %cmp40, label %if.else.42, label %if.end.44, !dbg !5808

if.else.42:                                       ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %3, i64 0, i32 1, !dbg !5809
  %31 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5809, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %31, i64 0, i32 4, !dbg !5809
  %32 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5809, !tbaa !2717
  tail call void %32(%struct._object* %3) #1, !dbg !5809
  br label %if.end.44

if.end.44:                                        ; preds = %if.else.42, %do.body, %if.end.18
  %result.0 = phi %struct._object* [ %3, %if.end.18 ], [ %call22, %do.body ], [ %call22, %if.else.42 ]
  %i.2.233 = add i64 %6, -1, !dbg !5811
  %cmp46.234 = icmp sgt i64 %i.2.233, -1, !dbg !5812
  br i1 %cmp46.234, label %for.body.47.lr.ph, label %empty, !dbg !5813

for.body.47.lr.ph:                                ; preds = %if.end.44
  %sub55 = add i64 %5, -1, !dbg !5814
  %arrayidx64 = getelementptr i64, i64* %1, i64 %sub55, !dbg !5818
  %33 = sub i64 %sub55, %6, !dbg !5813
  %34 = sub i64 %5, %6, !dbg !5813
  br label %for.body.47, !dbg !5813

for.body.47:                                      ; preds = %for.body.47.lr.ph, %for.end.62
  %indvar = phi i64 [ 0, %for.body.47.lr.ph ], [ %indvar.next, %for.end.62 ]
  %i.2235 = phi i64 [ %i.2.233, %for.body.47.lr.ph ], [ %i.2, %for.end.62 ]
  %35 = add i64 %34, %indvar, !dbg !5819
  %36 = add i64 %35, -4, !dbg !5819
  %37 = lshr i64 %36, 2, !dbg !5819
  %38 = add i64 %33, %indvar, !dbg !5819
  %39 = add i64 %34, %indvar, !dbg !5819
  %arrayidx48 = getelementptr i64, i64* %2, i64 %i.2235, !dbg !5819
  %40 = load i64, i64* %arrayidx48, align 8, !dbg !5820, !tbaa !2984
  %sub49 = add i64 %40, -1, !dbg !5820
  store i64 %sub49, i64* %arrayidx48, align 8, !dbg !5820, !tbaa !2984
  %cmp51 = icmp eq i64 %sub49, 0, !dbg !5821
  %arrayidx53 = getelementptr i64, i64* %1, i64 %i.2235, !dbg !5822
  %41 = load i64, i64* %arrayidx53, align 8, !dbg !5822, !tbaa !2984
  tail call void @llvm.dbg.value(metadata i64 %41, i64 0, metadata !1766, metadata !2664), !dbg !5779
  br i1 %cmp51, label %for.cond.54.preheader, label %if.else.67, !dbg !5823

for.cond.54.preheader:                            ; preds = %for.body.47
  %cmp56.231 = icmp slt i64 %i.2235, %sub55, !dbg !5824
  br i1 %cmp56.231, label %for.body.57.preheader, label %for.end.62, !dbg !5825

for.body.57.preheader:                            ; preds = %for.cond.54.preheader
  %backedge.overflow = icmp eq i64 %38, -1
  br i1 %backedge.overflow, label %for.body.57.preheader260, label %overflow.checked, !dbg !5826

overflow.checked:                                 ; preds = %for.body.57.preheader
  %end.idx = add i64 %39, %i.2235, !dbg !5826
  %n.vec = and i64 %39, -4, !dbg !5826
  %end.idx.rnd.down = add i64 %n.vec, %i.2235, !dbg !5826
  %cmp.zero = icmp eq i64 %n.vec, 0, !dbg !5826
  br i1 %cmp.zero, label %middle.block, label %vector.body.preheader, !dbg !5826

vector.body.preheader:                            ; preds = %overflow.checked
  %42 = and i64 %37, 1, !dbg !5827
  %lcmp.mod266 = icmp eq i64 %42, 0, !dbg !5827
  br i1 %lcmp.mod266, label %vector.body.prol, label %vector.body.preheader.split, !dbg !5827

vector.body.prol:                                 ; preds = %vector.body.preheader
  %43 = add i64 %i.2235, 1, !dbg !5827
  %44 = getelementptr i64, i64* %1, i64 %43, !dbg !5827
  %45 = bitcast i64* %44 to <2 x i64>*, !dbg !5827
  %wide.load.prol = load <2 x i64>, <2 x i64>* %45, align 8, !dbg !5827, !tbaa !2984
  %46 = getelementptr i64, i64* %44, i64 2, !dbg !5827
  %47 = bitcast i64* %46 to <2 x i64>*, !dbg !5827
  %wide.load257.prol = load <2 x i64>, <2 x i64>* %47, align 8, !dbg !5827, !tbaa !2984
  %48 = getelementptr i64, i64* %1, i64 %i.2235, !dbg !5828
  %49 = bitcast i64* %48 to <2 x i64>*, !dbg !5829
  store <2 x i64> %wide.load.prol, <2 x i64>* %49, align 8, !dbg !5829, !tbaa !2984
  %50 = getelementptr i64, i64* %48, i64 2, !dbg !5829
  %51 = bitcast i64* %50 to <2 x i64>*, !dbg !5829
  store <2 x i64> %wide.load257.prol, <2 x i64>* %51, align 8, !dbg !5829, !tbaa !2984
  %index.next.prol = add i64 %i.2235, 4, !dbg !5826
  br label %vector.body.preheader.split, !dbg !5826

vector.body.preheader.split:                      ; preds = %vector.body.prol, %vector.body.preheader
  %index.unr = phi i64 [ %i.2235, %vector.body.preheader ], [ %index.next.prol, %vector.body.prol ]
  %52 = icmp eq i64 %37, 0, !dbg !5827
  br i1 %52, label %middle.block.loopexit, label %vector.body.preheader.split.split, !dbg !5827

vector.body.preheader.split.split:                ; preds = %vector.body.preheader.split
  br label %vector.body, !dbg !5827

vector.body:                                      ; preds = %vector.body, %vector.body.preheader.split.split
  %index = phi i64 [ %index.unr, %vector.body.preheader.split.split ], [ %index.next.1, %vector.body ], !dbg !5826
  %53 = add i64 %index, 1, !dbg !5827
  %54 = getelementptr i64, i64* %1, i64 %53, !dbg !5827
  %55 = bitcast i64* %54 to <2 x i64>*, !dbg !5827
  %wide.load = load <2 x i64>, <2 x i64>* %55, align 8, !dbg !5827, !tbaa !2984
  %56 = getelementptr i64, i64* %54, i64 2, !dbg !5827
  %57 = bitcast i64* %56 to <2 x i64>*, !dbg !5827
  %wide.load257 = load <2 x i64>, <2 x i64>* %57, align 8, !dbg !5827, !tbaa !2984
  %58 = getelementptr i64, i64* %1, i64 %index, !dbg !5828
  %59 = bitcast i64* %58 to <2 x i64>*, !dbg !5829
  store <2 x i64> %wide.load, <2 x i64>* %59, align 8, !dbg !5829, !tbaa !2984
  %60 = getelementptr i64, i64* %58, i64 2, !dbg !5829
  %61 = bitcast i64* %60 to <2 x i64>*, !dbg !5829
  store <2 x i64> %wide.load257, <2 x i64>* %61, align 8, !dbg !5829, !tbaa !2984
  %index.next = add i64 %index, 4, !dbg !5826
  %62 = add i64 %index, 5, !dbg !5827
  %63 = getelementptr i64, i64* %1, i64 %62, !dbg !5827
  %64 = bitcast i64* %63 to <2 x i64>*, !dbg !5827
  %wide.load.1 = load <2 x i64>, <2 x i64>* %64, align 8, !dbg !5827, !tbaa !2984
  %65 = getelementptr i64, i64* %63, i64 2, !dbg !5827
  %66 = bitcast i64* %65 to <2 x i64>*, !dbg !5827
  %wide.load257.1 = load <2 x i64>, <2 x i64>* %66, align 8, !dbg !5827, !tbaa !2984
  %67 = getelementptr i64, i64* %1, i64 %index.next, !dbg !5828
  %68 = bitcast i64* %67 to <2 x i64>*, !dbg !5829
  store <2 x i64> %wide.load.1, <2 x i64>* %68, align 8, !dbg !5829, !tbaa !2984
  %69 = getelementptr i64, i64* %67, i64 2, !dbg !5829
  %70 = bitcast i64* %69 to <2 x i64>*, !dbg !5829
  store <2 x i64> %wide.load257.1, <2 x i64>* %70, align 8, !dbg !5829, !tbaa !2984
  %index.next.1 = add i64 %index, 8, !dbg !5826
  %71 = icmp eq i64 %index.next.1, %end.idx.rnd.down, !dbg !5826
  br i1 %71, label %middle.block.loopexit.unr-lcssa, label %vector.body, !dbg !5826, !llvm.loop !5830

middle.block.loopexit.unr-lcssa:                  ; preds = %vector.body
  br label %middle.block.loopexit

middle.block.loopexit:                            ; preds = %vector.body.preheader.split, %middle.block.loopexit.unr-lcssa
  br label %middle.block

middle.block:                                     ; preds = %middle.block.loopexit, %overflow.checked
  %resume.val = phi i64 [ %i.2235, %overflow.checked ], [ %end.idx.rnd.down, %middle.block.loopexit ]
  %cmp.n = icmp eq i64 %end.idx, %resume.val
  br i1 %cmp.n, label %for.end.62, label %for.body.57.preheader260, !dbg !5826

for.body.57.preheader260:                         ; preds = %middle.block, %for.body.57.preheader
  %j.0232.ph = phi i64 [ %i.2235, %for.body.57.preheader ], [ %resume.val, %middle.block ]
  br label %for.body.57, !dbg !5826

for.body.57:                                      ; preds = %for.body.57.preheader260, %for.body.57
  %j.0232 = phi i64 [ %add, %for.body.57 ], [ %j.0232.ph, %for.body.57.preheader260 ]
  %add = add i64 %j.0232, 1, !dbg !5826
  %arrayidx58 = getelementptr i64, i64* %1, i64 %add, !dbg !5827
  %72 = load i64, i64* %arrayidx58, align 8, !dbg !5827, !tbaa !2984
  %arrayidx59 = getelementptr i64, i64* %1, i64 %j.0232, !dbg !5828
  store i64 %72, i64* %arrayidx59, align 8, !dbg !5829, !tbaa !2984
  tail call void @llvm.dbg.value(metadata i64 %add, i64 0, metadata !1764, metadata !2664), !dbg !5831
  %exitcond243 = icmp eq i64 %add, %sub55, !dbg !5825
  br i1 %exitcond243, label %for.end.62.loopexit, label %for.body.57, !dbg !5825, !llvm.loop !5832

for.end.62.loopexit:                              ; preds = %for.body.57
  br label %for.end.62, !dbg !5833

for.end.62:                                       ; preds = %for.end.62.loopexit, %middle.block, %for.cond.54.preheader
  store i64 %41, i64* %arrayidx64, align 8, !dbg !5833, !tbaa !2984
  %sub65 = sub i64 %5, %i.2235, !dbg !5834
  store i64 %sub65, i64* %arrayidx48, align 8, !dbg !5835, !tbaa !2984
  %i.2 = add i64 %i.2235, -1, !dbg !5811
  %cmp46 = icmp sgt i64 %i.2, -1, !dbg !5812
  %indvar.next = add i64 %indvar, 1, !dbg !5813
  br i1 %cmp46, label %for.body.47, label %empty.loopexit, !dbg !5813

if.else.67:                                       ; preds = %for.body.47
  %.lcssa = phi i64 [ %41, %for.body.47 ]
  %arrayidx53.lcssa = phi i64* [ %arrayidx53, %for.body.47 ]
  %sub49.lcssa = phi i64 [ %sub49, %for.body.47 ]
  %i.2235.lcssa = phi i64 [ %i.2235, %for.body.47 ]
  tail call void @llvm.dbg.value(metadata i64 %sub49, i64 0, metadata !1764, metadata !2664), !dbg !5831
  %sub70 = sub i64 %5, %sub49.lcssa, !dbg !5836
  %arrayidx71 = getelementptr i64, i64* %1, i64 %sub70, !dbg !5837
  %73 = load i64, i64* %arrayidx71, align 8, !dbg !5837, !tbaa !2984
  store i64 %73, i64* %arrayidx53.lcssa, align 8, !dbg !5838, !tbaa !2984
  store i64 %.lcssa, i64* %arrayidx71, align 8, !dbg !5839, !tbaa !2984
  tail call void @llvm.dbg.value(metadata i64 %i.2, i64 0, metadata !1765, metadata !2664), !dbg !5840
  %cmp76.229 = icmp slt i64 %i.2235.lcssa, %6, !dbg !5841
  br i1 %cmp76.229, label %for.body.77.lr.ph, label %if.end.109, !dbg !5842

for.body.77.lr.ph:                                ; preds = %if.else.67
  %ob_item79 = getelementptr inbounds %struct._object, %struct._object* %0, i64 1, i32 1, !dbg !5843
  %74 = bitcast %struct._typeobject** %ob_item79 to [1 x %struct._object*]*, !dbg !5843
  %ob_item83 = getelementptr inbounds %struct._object, %struct._object* %result.0, i64 1, i32 1, !dbg !5844
  %75 = bitcast %struct._typeobject** %ob_item83 to [1 x %struct._object*]*, !dbg !5844
  br label %for.body.77, !dbg !5842

for.body.77:                                      ; preds = %if.end.96, %for.body.77.lr.ph
  %k.0230 = phi i64 [ %i.2235.lcssa, %for.body.77.lr.ph ], [ %inc100, %if.end.96 ]
  %arrayidx78 = getelementptr i64, i64* %1, i64 %k.0230, !dbg !5845
  %76 = load i64, i64* %arrayidx78, align 8, !dbg !5845, !tbaa !2984
  tail call void @llvm.dbg.value(metadata i64 %76, i64 0, metadata !1766, metadata !2664), !dbg !5779
  %arrayidx80 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %74, i64 0, i64 %76, !dbg !5843
  %77 = load %struct._object*, %struct._object** %arrayidx80, align 8, !dbg !5843, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %77, i64 0, metadata !1755, metadata !2664), !dbg !5780
  %ob_refcnt81 = getelementptr inbounds %struct._object, %struct._object* %77, i64 0, i32 0, !dbg !5846
  %78 = load i64, i64* %ob_refcnt81, align 8, !dbg !5846, !tbaa !2694
  %inc82 = add i64 %78, 1, !dbg !5846
  store i64 %inc82, i64* %ob_refcnt81, align 8, !dbg !5846, !tbaa !2694
  %arrayidx84 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %75, i64 0, i64 %k.0230, !dbg !5844
  %79 = load %struct._object*, %struct._object** %arrayidx84, align 8, !dbg !5844, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %79, i64 0, metadata !1756, metadata !2664), !dbg !5847
  store %struct._object* %77, %struct._object** %arrayidx84, align 8, !dbg !5848, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %79, i64 0, metadata !1774, metadata !2664), !dbg !5849
  %ob_refcnt89 = getelementptr inbounds %struct._object, %struct._object* %79, i64 0, i32 0, !dbg !5851
  %80 = load i64, i64* %ob_refcnt89, align 8, !dbg !5851, !tbaa !2694
  %dec90 = add i64 %80, -1, !dbg !5851
  store i64 %dec90, i64* %ob_refcnt89, align 8, !dbg !5851, !tbaa !2694
  %cmp91 = icmp eq i64 %dec90, 0, !dbg !5851
  br i1 %cmp91, label %if.else.93, label %if.end.96, !dbg !5853

if.else.93:                                       ; preds = %for.body.77
  %ob_type94 = getelementptr inbounds %struct._object, %struct._object* %79, i64 0, i32 1, !dbg !5854
  %81 = load %struct._typeobject*, %struct._typeobject** %ob_type94, align 8, !dbg !5854, !tbaa !2667
  %tp_dealloc95 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %81, i64 0, i32 4, !dbg !5854
  %82 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc95, align 8, !dbg !5854, !tbaa !2717
  tail call void %82(%struct._object* %79) #1, !dbg !5854
  br label %if.end.96

if.end.96:                                        ; preds = %for.body.77, %if.else.93
  %inc100 = add nsw i64 %k.0230, 1, !dbg !5856
  tail call void @llvm.dbg.value(metadata i64 %inc100, i64 0, metadata !1765, metadata !2664), !dbg !5840
  %exitcond242 = icmp eq i64 %inc100, %6, !dbg !5842
  br i1 %exitcond242, label %for.end.105, label %for.body.77, !dbg !5842

for.end.105:                                      ; preds = %if.end.96
  %cmp106 = icmp slt i64 %i.2235.lcssa, 0, !dbg !5857
  br i1 %cmp106, label %empty, label %if.end.109, !dbg !5859

if.end.109.loopexit.unr-lcssa:                    ; preds = %for.body
  br label %if.end.109.loopexit, !dbg !5860

if.end.109.loopexit:                              ; preds = %for.body.lr.ph.split, %if.end.109.loopexit.unr-lcssa
  br label %if.end.109, !dbg !5860

if.end.109:                                       ; preds = %if.end.109.loopexit, %if.else.67, %if.end.9, %for.end.105
  %result.1 = phi %struct._object* [ %result.0, %for.end.105 ], [ %call, %if.end.9 ], [ %result.0, %if.else.67 ], [ %call, %if.end.109.loopexit ]
  %ob_refcnt110 = getelementptr inbounds %struct._object, %struct._object* %result.1, i64 0, i32 0, !dbg !5860
  %83 = load i64, i64* %ob_refcnt110, align 8, !dbg !5860, !tbaa !2694
  %inc111 = add i64 %83, 1, !dbg !5860
  store i64 %inc111, i64* %ob_refcnt110, align 8, !dbg !5860, !tbaa !2694
  br label %cleanup.113, !dbg !5861

empty.loopexit:                                   ; preds = %for.end.62
  br label %empty, !dbg !5862

empty:                                            ; preds = %empty.loopexit, %if.end.44, %if.then.21, %for.end.105, %if.else, %if.then.6
  store i32 1, i32* %stopped, align 4, !dbg !5862, !tbaa !5759
  br label %cleanup.113, !dbg !5863

cleanup.113:                                      ; preds = %entry, %empty, %if.end.109
  %retval.0 = phi %struct._object* [ null, %empty ], [ %result.1, %if.end.109 ], [ null, %entry ]
  ret %struct._object* %retval.0, !dbg !5864
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @permutations_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %robj = alloca %struct._object*, align 8
  %iterable = alloca %struct._object*, align 8
  tail call void @llvm.dbg.value(metadata %struct._typeobject* %type, i64 0, metadata !1852, metadata !2664), !dbg !5865
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1853, metadata !2664), !dbg !5866
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !1854, metadata !2664), !dbg !5867
  %0 = bitcast %struct._object** %robj to i8*, !dbg !5868
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5868
  tail call void @llvm.dbg.value(metadata %struct._object* @_Py_NoneStruct, i64 0, metadata !1858, metadata !2664), !dbg !5869
  store %struct._object* @_Py_NoneStruct, %struct._object** %robj, align 8, !dbg !5869, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1859, metadata !2664), !dbg !5870
  %1 = bitcast %struct._object** %iterable to i8*, !dbg !5871
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !5871
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1860, metadata !2664), !dbg !5872
  store %struct._object* null, %struct._object** %iterable, align 8, !dbg !5872, !tbaa !2681
  tail call void @llvm.dbg.value(metadata i64* null, i64 0, metadata !1861, metadata !2664), !dbg !5873
  tail call void @llvm.dbg.value(metadata i64* null, i64 0, metadata !1862, metadata !2664), !dbg !5874
  tail call void @llvm.dbg.value(metadata %struct._object** %robj, i64 0, metadata !1858, metadata !2664), !dbg !5869
  tail call void @llvm.dbg.value(metadata %struct._object** %iterable, i64 0, metadata !1860, metadata !2664), !dbg !5872
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %args, %struct._object* %kwds, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.73, i64 0, i64 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @permutations_new.kwargs, i64 0, i64 0), %struct._object** nonnull %iterable, %struct._object** nonnull %robj) #1, !dbg !5875
  %tobool = icmp eq i32 %call, 0, !dbg !5875
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5877

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct._object** %iterable, i64 0, metadata !1860, metadata !2664), !dbg !5872
  %2 = load %struct._object*, %struct._object** %iterable, align 8, !dbg !5878, !tbaa !2681
  %call1 = call %struct._object* @PySequence_Tuple(%struct._object* %2) #1, !dbg !5879
  call void @llvm.dbg.value(metadata %struct._object* %call1, i64 0, metadata !1859, metadata !2664), !dbg !5870
  %cmp = icmp eq %struct._object* %call1, null, !dbg !5880
  br i1 %cmp, label %cleanup, label %if.end.3, !dbg !5882

if.end.3:                                         ; preds = %if.end
  %3 = getelementptr inbounds %struct._object, %struct._object* %call1, i64 1, i32 0, !dbg !5883
  %4 = load i64, i64* %3, align 8, !dbg !5883, !tbaa !2957
  call void @llvm.dbg.value(metadata i64 %4, i64 0, metadata !1856, metadata !2664), !dbg !5884
  call void @llvm.dbg.value(metadata i64 %4, i64 0, metadata !1857, metadata !2664), !dbg !5885
  call void @llvm.dbg.value(metadata %struct._object** %robj, i64 0, metadata !1858, metadata !2664), !dbg !5869
  %5 = load %struct._object*, %struct._object** %robj, align 8, !dbg !5886, !tbaa !2681
  %cmp4 = icmp eq %struct._object* %5, @_Py_NoneStruct, !dbg !5888
  br i1 %cmp4, label %if.end.15, label %if.then.5, !dbg !5889

if.then.5:                                        ; preds = %if.end.3
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 1, !dbg !5890
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5890, !tbaa !2667
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i64 0, i32 19, !dbg !5890
  %7 = load i64, i64* %tp_flags, align 8, !dbg !5890, !tbaa !3192
  %and = and i64 %7, 16777216, !dbg !5890
  %cmp6 = icmp eq i64 %and, 0, !dbg !5890
  br i1 %cmp6, label %if.then.7, label %if.end.8, !dbg !5893

if.then.7:                                        ; preds = %if.then.5
  %8 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !5894, !tbaa !2681
  call void @PyErr_SetString(%struct._object* %8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.74, i64 0, i64 0)) #1, !dbg !5896
  br label %do.body.52, !dbg !5897

if.end.8:                                         ; preds = %if.then.5
  %call9 = call i64 @PyLong_AsSsize_t(%struct._object* %5) #1, !dbg !5898
  call void @llvm.dbg.value(metadata i64 %call9, i64 0, metadata !1857, metadata !2664), !dbg !5885
  %cmp10 = icmp eq i64 %call9, -1, !dbg !5899
  br i1 %cmp10, label %land.lhs.true, label %if.end.15, !dbg !5901

land.lhs.true:                                    ; preds = %if.end.8
  %call11 = call %struct._object* @PyErr_Occurred() #1, !dbg !5902
  %tobool12 = icmp eq %struct._object* %call11, null, !dbg !5902
  br i1 %tobool12, label %if.then.17, label %do.body.52, !dbg !5904

if.end.15:                                        ; preds = %if.end.3, %if.end.8
  %r.0 = phi i64 [ %call9, %if.end.8 ], [ %4, %if.end.3 ]
  %cmp16 = icmp slt i64 %r.0, 0, !dbg !5905
  br i1 %cmp16, label %if.then.17, label %if.end.18, !dbg !5907

if.then.17:                                       ; preds = %land.lhs.true, %if.end.15
  %9 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !5908, !tbaa !2681
  call void @PyErr_SetString(%struct._object* %9, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0)) #1, !dbg !5910
  br label %do.body.52, !dbg !5911

if.end.18:                                        ; preds = %if.end.15
  %mul = shl i64 %4, 3, !dbg !5912
  %call19 = call i8* @PyMem_Malloc(i64 %mul) #1, !dbg !5913
  %10 = bitcast i8* %call19 to i64*, !dbg !5913
  call void @llvm.dbg.value(metadata i64* %10, i64 0, metadata !1861, metadata !2664), !dbg !5873
  %mul20 = shl i64 %r.0, 3, !dbg !5914
  %call21 = call i8* @PyMem_Malloc(i64 %mul20) #1, !dbg !5915
  %11 = bitcast i8* %call21 to i64*, !dbg !5915
  call void @llvm.dbg.value(metadata i64* %11, i64 0, metadata !1862, metadata !2664), !dbg !5874
  %cmp22 = icmp eq i8* %call19, null, !dbg !5916
  %cmp23 = icmp eq i8* %call21, null, !dbg !5918
  %or.cond = or i1 %cmp22, %cmp23, !dbg !5919
  br i1 %or.cond, label %if.then.24, label %for.cond.preheader, !dbg !5919

for.cond.preheader:                               ; preds = %if.end.18
  %cmp27.122 = icmp sgt i64 %4, 0, !dbg !5920
  br i1 %cmp27.122, label %for.body.preheader, label %for.cond.28.preheader, !dbg !5923

for.body.preheader:                               ; preds = %for.cond.preheader
  %backedge.overflow = icmp eq i64 %4, 0
  br i1 %backedge.overflow, label %for.body.preheader155, label %overflow.checked, !dbg !5924

for.body.preheader155:                            ; preds = %middle.block, %for.body.preheader
  %i.0123.ph = phi i64 [ 0, %for.body.preheader ], [ %resume.val, %middle.block ]
  br label %for.body, !dbg !5924

overflow.checked:                                 ; preds = %for.body.preheader
  %n.vec = and i64 %4, -4, !dbg !5925
  %cmp.zero = icmp eq i64 %n.vec, 0, !dbg !5925
  br i1 %cmp.zero, label %middle.block, label %vector.body.preheader, !dbg !5924

vector.body.preheader:                            ; preds = %overflow.checked
  %12 = add i64 %4, -4
  %13 = lshr i64 %12, 2
  %14 = and i64 %13, 1
  %lcmp.mod157 = icmp eq i64 %14, 0
  br i1 %lcmp.mod157, label %vector.body.prol, label %vector.body.preheader.split

vector.body.prol:                                 ; preds = %vector.body.preheader
  %15 = bitcast i8* %call19 to <2 x i64>*, !dbg !5926
  store <2 x i64> <i64 0, i64 1>, <2 x i64>* %15, align 8, !dbg !5926, !tbaa !2984
  %16 = getelementptr i8, i8* %call19, i64 16, !dbg !5926
  %17 = bitcast i8* %16 to <2 x i64>*, !dbg !5926
  store <2 x i64> <i64 2, i64 3>, <2 x i64>* %17, align 8, !dbg !5926, !tbaa !2984
  br label %vector.body.preheader.split, !dbg !5925

vector.body.preheader.split:                      ; preds = %vector.body.prol, %vector.body.preheader
  %index.unr = phi i64 [ 0, %vector.body.preheader ], [ 4, %vector.body.prol ]
  %18 = icmp eq i64 %13, 0
  br i1 %18, label %middle.block.loopexit, label %vector.body.preheader.split.split

vector.body.preheader.split.split:                ; preds = %vector.body.preheader.split
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.body.preheader.split.split
  %index = phi i64 [ %index.unr, %vector.body.preheader.split.split ], [ %index.next.1, %vector.body ], !dbg !5925
  %broadcast.splatinsert = insertelement <2 x i64> undef, i64 %index, i32 0
  %broadcast.splat = shufflevector <2 x i64> %broadcast.splatinsert, <2 x i64> undef, <2 x i32> zeroinitializer
  %induction = add <2 x i64> %broadcast.splat, <i64 0, i64 1>
  %induction125 = add <2 x i64> %broadcast.splat, <i64 2, i64 3>
  %19 = getelementptr i64, i64* %10, i64 %index, !dbg !5924
  %20 = bitcast i64* %19 to <2 x i64>*, !dbg !5926
  store <2 x i64> %induction, <2 x i64>* %20, align 8, !dbg !5926, !tbaa !2984
  %21 = getelementptr i64, i64* %19, i64 2, !dbg !5926
  %22 = bitcast i64* %21 to <2 x i64>*, !dbg !5926
  store <2 x i64> %induction125, <2 x i64>* %22, align 8, !dbg !5926, !tbaa !2984
  %index.next = add i64 %index, 4, !dbg !5925
  %broadcast.splatinsert.1 = insertelement <2 x i64> undef, i64 %index.next, i32 0
  %broadcast.splat.1 = shufflevector <2 x i64> %broadcast.splatinsert.1, <2 x i64> undef, <2 x i32> zeroinitializer
  %induction.1 = add <2 x i64> %broadcast.splat.1, <i64 0, i64 1>
  %induction125.1 = add <2 x i64> %broadcast.splat.1, <i64 2, i64 3>
  %23 = getelementptr i64, i64* %10, i64 %index.next, !dbg !5924
  %24 = bitcast i64* %23 to <2 x i64>*, !dbg !5926
  store <2 x i64> %induction.1, <2 x i64>* %24, align 8, !dbg !5926, !tbaa !2984
  %25 = getelementptr i64, i64* %23, i64 2, !dbg !5926
  %26 = bitcast i64* %25 to <2 x i64>*, !dbg !5926
  store <2 x i64> %induction125.1, <2 x i64>* %26, align 8, !dbg !5926, !tbaa !2984
  %index.next.1 = add i64 %index, 8, !dbg !5925
  %27 = icmp eq i64 %index.next.1, %n.vec, !dbg !5925
  br i1 %27, label %middle.block.loopexit.unr-lcssa, label %vector.body, !dbg !5925, !llvm.loop !5927

middle.block.loopexit.unr-lcssa:                  ; preds = %vector.body
  br label %middle.block.loopexit

middle.block.loopexit:                            ; preds = %vector.body.preheader.split, %middle.block.loopexit.unr-lcssa
  br label %middle.block

middle.block:                                     ; preds = %middle.block.loopexit, %overflow.checked
  %resume.val = phi i64 [ 0, %overflow.checked ], [ %n.vec, %middle.block.loopexit ]
  %cmp.n = icmp eq i64 %4, %resume.val
  br i1 %cmp.n, label %for.cond.28.preheader, label %for.body.preheader155, !dbg !5924

if.then.24:                                       ; preds = %if.end.18
  %call25 = call %struct._object* @PyErr_NoMemory() #1, !dbg !5928
  br label %error, !dbg !5930

for.cond.28.preheader.loopexit:                   ; preds = %for.body
  br label %for.cond.28.preheader, !dbg !5931

for.cond.28.preheader:                            ; preds = %for.cond.28.preheader.loopexit, %middle.block, %for.cond.preheader
  %cmp29.120 = icmp sgt i64 %r.0, 0, !dbg !5931
  br i1 %cmp29.120, label %for.body.30.preheader, label %for.end.34, !dbg !5934

for.body.30.preheader:                            ; preds = %for.cond.28.preheader
  %backedge.overflow128 = icmp eq i64 %r.0, 0
  br i1 %backedge.overflow128, label %for.body.30.preheader154, label %overflow.checked133, !dbg !5935

for.body.30.preheader154:                         ; preds = %middle.block130, %for.body.30.preheader
  %i.1121.ph = phi i64 [ 0, %for.body.30.preheader ], [ %resume.val140, %middle.block130 ]
  br label %for.body.30, !dbg !5935

overflow.checked133:                              ; preds = %for.body.30.preheader
  %n.vec136 = and i64 %r.0, -4, !dbg !5936
  %cmp.zero138 = icmp eq i64 %n.vec136, 0, !dbg !5936
  br i1 %cmp.zero138, label %middle.block130, label %vector.ph139, !dbg !5935

vector.ph139:                                     ; preds = %overflow.checked133
  %broadcast.splatinsert150 = insertelement <2 x i64> undef, i64 %4, i32 0, !dbg !5935
  %broadcast.splat151 = shufflevector <2 x i64> %broadcast.splatinsert150, <2 x i64> undef, <2 x i32> zeroinitializer, !dbg !5935
  %28 = add i64 %r.0, -4, !dbg !5935
  %29 = lshr i64 %28, 2, !dbg !5935
  %30 = and i64 %29, 1, !dbg !5935
  %lcmp.mod = icmp eq i64 %30, 0, !dbg !5935
  br i1 %lcmp.mod, label %vector.body129.prol, label %vector.ph139.split, !dbg !5935

vector.body129.prol:                              ; preds = %vector.ph139
  %31 = add <2 x i64> %broadcast.splat151, <i64 0, i64 -1>, !dbg !5935
  %32 = add <2 x i64> %broadcast.splat151, <i64 -2, i64 -3>, !dbg !5935
  %33 = bitcast i8* %call21 to <2 x i64>*, !dbg !5937
  store <2 x i64> %31, <2 x i64>* %33, align 8, !dbg !5937, !tbaa !2984
  %34 = getelementptr i8, i8* %call21, i64 16, !dbg !5937
  %35 = bitcast i8* %34 to <2 x i64>*, !dbg !5937
  store <2 x i64> %32, <2 x i64>* %35, align 8, !dbg !5937, !tbaa !2984
  br label %vector.ph139.split, !dbg !5936

vector.ph139.split:                               ; preds = %vector.body129.prol, %vector.ph139
  %index132.unr = phi i64 [ 0, %vector.ph139 ], [ 4, %vector.body129.prol ]
  %36 = icmp eq i64 %29, 0, !dbg !5935
  br i1 %36, label %middle.block130.loopexit, label %vector.ph139.split.split, !dbg !5935

vector.ph139.split.split:                         ; preds = %vector.ph139.split
  br label %vector.body129, !dbg !5935

vector.body129:                                   ; preds = %vector.body129, %vector.ph139.split.split
  %index132 = phi i64 [ %index132.unr, %vector.ph139.split.split ], [ %index.next145.1, %vector.body129 ], !dbg !5936
  %broadcast.splatinsert146 = insertelement <2 x i64> undef, i64 %index132, i32 0
  %broadcast.splat147 = shufflevector <2 x i64> %broadcast.splatinsert146, <2 x i64> undef, <2 x i32> zeroinitializer
  %induction148 = add <2 x i64> %broadcast.splat147, <i64 0, i64 1>
  %induction149 = add <2 x i64> %broadcast.splat147, <i64 2, i64 3>
  %37 = sub <2 x i64> %broadcast.splat151, %induction148, !dbg !5935
  %38 = sub <2 x i64> %broadcast.splat151, %induction149, !dbg !5935
  %39 = getelementptr i64, i64* %11, i64 %index132, !dbg !5938
  %40 = bitcast i64* %39 to <2 x i64>*, !dbg !5937
  store <2 x i64> %37, <2 x i64>* %40, align 8, !dbg !5937, !tbaa !2984
  %41 = getelementptr i64, i64* %39, i64 2, !dbg !5937
  %42 = bitcast i64* %41 to <2 x i64>*, !dbg !5937
  store <2 x i64> %38, <2 x i64>* %42, align 8, !dbg !5937, !tbaa !2984
  %index.next145 = add i64 %index132, 4, !dbg !5936
  %broadcast.splatinsert146.1 = insertelement <2 x i64> undef, i64 %index.next145, i32 0
  %broadcast.splat147.1 = shufflevector <2 x i64> %broadcast.splatinsert146.1, <2 x i64> undef, <2 x i32> zeroinitializer
  %induction148.1 = add <2 x i64> %broadcast.splat147.1, <i64 0, i64 1>
  %induction149.1 = add <2 x i64> %broadcast.splat147.1, <i64 2, i64 3>
  %43 = sub <2 x i64> %broadcast.splat151, %induction148.1, !dbg !5935
  %44 = sub <2 x i64> %broadcast.splat151, %induction149.1, !dbg !5935
  %45 = getelementptr i64, i64* %11, i64 %index.next145, !dbg !5938
  %46 = bitcast i64* %45 to <2 x i64>*, !dbg !5937
  store <2 x i64> %43, <2 x i64>* %46, align 8, !dbg !5937, !tbaa !2984
  %47 = getelementptr i64, i64* %45, i64 2, !dbg !5937
  %48 = bitcast i64* %47 to <2 x i64>*, !dbg !5937
  store <2 x i64> %44, <2 x i64>* %48, align 8, !dbg !5937, !tbaa !2984
  %index.next145.1 = add i64 %index132, 8, !dbg !5936
  %49 = icmp eq i64 %index.next145.1, %n.vec136, !dbg !5936
  br i1 %49, label %middle.block130.loopexit.unr-lcssa, label %vector.body129, !dbg !5936, !llvm.loop !5939

middle.block130.loopexit.unr-lcssa:               ; preds = %vector.body129
  br label %middle.block130.loopexit

middle.block130.loopexit:                         ; preds = %vector.ph139.split, %middle.block130.loopexit.unr-lcssa
  br label %middle.block130

middle.block130:                                  ; preds = %middle.block130.loopexit, %overflow.checked133
  %resume.val140 = phi i64 [ 0, %overflow.checked133 ], [ %n.vec136, %middle.block130.loopexit ]
  %cmp.n144 = icmp eq i64 %r.0, %resume.val140
  br i1 %cmp.n144, label %for.end.34, label %for.body.30.preheader154, !dbg !5935

for.body:                                         ; preds = %for.body.preheader155, %for.body
  %i.0123 = phi i64 [ %inc, %for.body ], [ %i.0123.ph, %for.body.preheader155 ]
  %arrayidx = getelementptr i64, i64* %10, i64 %i.0123, !dbg !5924
  store i64 %i.0123, i64* %arrayidx, align 8, !dbg !5926, !tbaa !2984
  %inc = add nuw nsw i64 %i.0123, 1, !dbg !5925
  call void @llvm.dbg.value(metadata i64 %inc, i64 0, metadata !1863, metadata !2664), !dbg !5940
  %exitcond124 = icmp eq i64 %inc, %4, !dbg !5923
  br i1 %exitcond124, label %for.cond.28.preheader.loopexit, label %for.body, !dbg !5923, !llvm.loop !5941

for.body.30:                                      ; preds = %for.body.30.preheader154, %for.body.30
  %i.1121 = phi i64 [ %inc33, %for.body.30 ], [ %i.1121.ph, %for.body.30.preheader154 ]
  %sub = sub i64 %4, %i.1121, !dbg !5935
  %arrayidx31 = getelementptr i64, i64* %11, i64 %i.1121, !dbg !5938
  store i64 %sub, i64* %arrayidx31, align 8, !dbg !5937, !tbaa !2984
  %inc33 = add nuw nsw i64 %i.1121, 1, !dbg !5936
  call void @llvm.dbg.value(metadata i64 %inc33, i64 0, metadata !1863, metadata !2664), !dbg !5940
  %exitcond = icmp eq i64 %inc33, %r.0, !dbg !5934
  br i1 %exitcond, label %for.end.34.loopexit, label %for.body.30, !dbg !5934, !llvm.loop !5942

for.end.34.loopexit:                              ; preds = %for.body.30
  br label %for.end.34, !dbg !5943

for.end.34:                                       ; preds = %for.end.34.loopexit, %middle.block130, %for.cond.28.preheader
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %type, i64 0, i32 36, !dbg !5943
  %50 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !5943, !tbaa !2835
  %call35 = call %struct._object* %50(%struct._typeobject* %type, i64 0) #1, !dbg !5944
  %cmp36 = icmp eq %struct._object* %call35, null, !dbg !5945
  br i1 %cmp36, label %error, label %if.end.38, !dbg !5947

if.end.38:                                        ; preds = %for.end.34
  %pool39 = getelementptr inbounds %struct._object, %struct._object* %call35, i64 1, !dbg !5948
  %51 = bitcast %struct._object* %pool39 to %struct._object**, !dbg !5948
  store %struct._object* %call1, %struct._object** %51, align 8, !dbg !5949, !tbaa !5692
  %indices40 = getelementptr inbounds %struct._object, %struct._object* %call35, i64 1, i32 1, !dbg !5950
  %52 = bitcast %struct._typeobject** %indices40 to i8**, !dbg !5951
  store i8* %call19, i8** %52, align 8, !dbg !5951, !tbaa !5716
  %cycles41 = getelementptr inbounds %struct._object, %struct._object* %call35, i64 2, !dbg !5952
  %53 = bitcast %struct._object* %cycles41 to i8**, !dbg !5953
  store i8* %call21, i8** %53, align 8, !dbg !5953, !tbaa !5719
  %result = getelementptr inbounds %struct._object, %struct._object* %call35, i64 2, i32 1, !dbg !5954
  %54 = bitcast %struct._typeobject** %result to %struct._object**, !dbg !5954
  store %struct._object* null, %struct._object** %54, align 8, !dbg !5955, !tbaa !5705
  %55 = getelementptr inbounds %struct._object, %struct._object* %call35, i64 3, i32 0, !dbg !5956
  store i64 %r.0, i64* %55, align 8, !dbg !5957, !tbaa !5755
  %cmp43 = icmp sgt i64 %r.0, %4, !dbg !5958
  %cond = zext i1 %cmp43 to i32, !dbg !5959
  %stopped = getelementptr inbounds %struct._object, %struct._object* %call35, i64 3, i32 1, !dbg !5960
  %56 = bitcast %struct._typeobject** %stopped to i32*, !dbg !5960
  store i32 %cond, i32* %56, align 4, !dbg !5961, !tbaa !5759
  br label %cleanup, !dbg !5962

error:                                            ; preds = %for.end.34, %if.then.24
  br i1 %cmp22, label %if.end.46, label %if.then.45, !dbg !5963

if.then.45:                                       ; preds = %error
  call void @PyMem_Free(i8* %call19) #1, !dbg !5964
  br label %if.end.46, !dbg !5964

if.end.46:                                        ; preds = %error, %if.then.45
  br i1 %cmp23, label %do.body.52, label %if.then.48, !dbg !5966

if.then.48:                                       ; preds = %if.end.46
  call void @PyMem_Free(i8* %call21) #1, !dbg !5967
  br label %do.body.52, !dbg !5967

do.body.52:                                       ; preds = %if.then.48, %if.end.46, %if.then.7, %if.then.17, %land.lhs.true
  call void @llvm.dbg.value(metadata %struct._object* %call1, i64 0, metadata !1866, metadata !2664), !dbg !5969
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call1, i64 0, i32 0, !dbg !5971
  %57 = load i64, i64* %ob_refcnt, align 8, !dbg !5971, !tbaa !2694
  %dec = add i64 %57, -1, !dbg !5971
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5971, !tbaa !2694
  %cmp53 = icmp eq i64 %dec, 0, !dbg !5971
  br i1 %cmp53, label %if.else, label %cleanup, !dbg !5973

if.else:                                          ; preds = %do.body.52
  %ob_type55 = getelementptr inbounds %struct._object, %struct._object* %call1, i64 0, i32 1, !dbg !5974
  %58 = load %struct._typeobject*, %struct._typeobject** %ob_type55, align 8, !dbg !5974, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %58, i64 0, i32 4, !dbg !5974
  %59 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5974, !tbaa !2717
  call void %59(%struct._object* %call1) #1, !dbg !5974
  br label %cleanup

cleanup:                                          ; preds = %if.end, %do.body.52, %if.else, %entry, %if.end.38
  %retval.0 = phi %struct._object* [ %call35, %if.end.38 ], [ null, %entry ], [ null, %if.else ], [ null, %do.body.52 ], [ null, %if.end ]
  call void @llvm.lifetime.end(i64 8, i8* %1) #1, !dbg !5976
  call void @llvm.lifetime.end(i64 8, i8* %0) #1, !dbg !5976
  ret %struct._object* %retval.0, !dbg !5976
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @permutations_reduce(%struct.permutationsobject* nocapture readonly %po) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.permutationsobject* %po, i64 0, metadata !1786, metadata !2664), !dbg !5977
  %result = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %po, i64 0, i32 4, !dbg !5978
  %0 = load %struct._object*, %struct._object** %result, align 8, !dbg !5978, !tbaa !5705
  %cmp = icmp eq %struct._object* %0, null, !dbg !5979
  br i1 %cmp, label %if.then, label %if.else, !dbg !5980

if.then:                                          ; preds = %entry
  %ob_type = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %po, i64 0, i32 0, i32 1, !dbg !5981
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5981, !tbaa !2667
  %pool = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %po, i64 0, i32 1, !dbg !5983
  %2 = load %struct._object*, %struct._object** %pool, align 8, !dbg !5983, !tbaa !5692
  %r = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %po, i64 0, i32 5, !dbg !5984
  %3 = load i64, i64* %r, align 8, !dbg !5984, !tbaa !5755
  %call = tail call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), %struct._typeobject* %1, %struct._object* %2, i64 %3) #1, !dbg !5985
  br label %return, !dbg !5986

if.else:                                          ; preds = %entry
  %stopped = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %po, i64 0, i32 6, !dbg !5987
  %4 = load i32, i32* %stopped, align 4, !dbg !5987, !tbaa !5759
  %tobool = icmp eq i32 %4, 0, !dbg !5988
  br i1 %tobool, label %if.else.5, label %if.then.1, !dbg !5989

if.then.1:                                        ; preds = %if.else
  %ob_type2 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %po, i64 0, i32 0, i32 1, !dbg !5990
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type2, align 8, !dbg !5990, !tbaa !2667
  %r3 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %po, i64 0, i32 5, !dbg !5992
  %6 = load i64, i64* %r3, align 8, !dbg !5992, !tbaa !5755
  %call4 = tail call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), %struct._typeobject* %5, i64 %6) #1, !dbg !5993
  br label %return, !dbg !5994

if.else.5:                                        ; preds = %if.else
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1787, metadata !2664), !dbg !5995
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1791, metadata !2664), !dbg !5996
  %pool6 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %po, i64 0, i32 1, !dbg !5997
  %7 = bitcast %struct._object** %pool6 to %struct.PyVarObject**, !dbg !5997
  %8 = load %struct.PyVarObject*, %struct.PyVarObject** %7, align 8, !dbg !5997, !tbaa !5692
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %8, i64 0, i32 1, !dbg !5997
  %9 = load i64, i64* %ob_size, align 8, !dbg !5997, !tbaa !2957
  tail call void @llvm.dbg.value(metadata i64 %9, i64 0, metadata !1792, metadata !2664), !dbg !5998
  %call7 = tail call %struct._object* @PyTuple_New(i64 %9) #1, !dbg !5999
  tail call void @llvm.dbg.value(metadata %struct._object* %call7, i64 0, metadata !1787, metadata !2664), !dbg !5995
  %cmp8 = icmp eq %struct._object* %call7, null, !dbg !6000
  br i1 %cmp8, label %return, label %for.cond.preheader, !dbg !6002

for.cond.preheader:                               ; preds = %if.else.5
  %cmp10.131 = icmp sgt i64 %9, 0, !dbg !6003
  br i1 %cmp10.131, label %for.body.lr.ph, label %for.end, !dbg !6004

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %indices11 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %po, i64 0, i32 2, !dbg !6005
  %ob_item = getelementptr inbounds %struct._object, %struct._object* %call7, i64 1, i32 1, !dbg !6006
  %10 = bitcast %struct._typeobject** %ob_item to [1 x %struct._object*]*, !dbg !6006
  br label %for.body, !dbg !6004

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %i.0132 = phi i64 [ 0, %for.body.lr.ph ], [ %inc, %for.inc ]
  %11 = load i64*, i64** %indices11, align 8, !dbg !6005, !tbaa !5716
  %arrayidx = getelementptr i64, i64* %11, i64 %i.0132, !dbg !6007
  %12 = load i64, i64* %arrayidx, align 8, !dbg !6007, !tbaa !2984
  %call12 = tail call %struct._object* @PyLong_FromSsize_t(i64 %12) #1, !dbg !6008
  tail call void @llvm.dbg.value(metadata %struct._object* %call12, i64 0, metadata !1794, metadata !2664), !dbg !6009
  %tobool13 = icmp eq %struct._object* %call12, null, !dbg !6010
  br i1 %tobool13, label %do.body.47.loopexit138, label %for.inc, !dbg !6012

for.inc:                                          ; preds = %for.body
  %arrayidx16 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %10, i64 0, i64 %i.0132, !dbg !6006
  store %struct._object* %call12, %struct._object** %arrayidx16, align 8, !dbg !6006, !tbaa !2681
  %inc = add nuw nsw i64 %i.0132, 1, !dbg !6013
  tail call void @llvm.dbg.value(metadata i64 %inc, i64 0, metadata !1793, metadata !2664), !dbg !6014
  %cmp10 = icmp slt i64 %inc, %9, !dbg !6003
  br i1 %cmp10, label %for.body, label %for.end.loopexit, !dbg !6004

for.end.loopexit:                                 ; preds = %for.inc
  br label %for.end, !dbg !6015

for.end:                                          ; preds = %for.end.loopexit, %for.cond.preheader
  %r17 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %po, i64 0, i32 5, !dbg !6015
  %13 = load i64, i64* %r17, align 8, !dbg !6015, !tbaa !5755
  %call18 = tail call %struct._object* @PyTuple_New(i64 %13) #1, !dbg !6016
  tail call void @llvm.dbg.value(metadata %struct._object* %call18, i64 0, metadata !1791, metadata !2664), !dbg !5996
  %cmp19 = icmp eq %struct._object* %call18, null, !dbg !6017
  br i1 %cmp19, label %do.body.47, label %for.cond.22.preheader, !dbg !6019

for.cond.22.preheader:                            ; preds = %for.end
  %14 = load i64, i64* %r17, align 8, !dbg !6020, !tbaa !5755
  %cmp24.129 = icmp sgt i64 %14, 0, !dbg !6021
  br i1 %cmp24.129, label %for.body.25.lr.ph, label %for.end.40, !dbg !6022

for.body.25.lr.ph:                                ; preds = %for.cond.22.preheader
  %cycles27 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %po, i64 0, i32 3, !dbg !6023
  %ob_item33 = getelementptr inbounds %struct._object, %struct._object* %call18, i64 1, i32 1, !dbg !6024
  %15 = bitcast %struct._typeobject** %ob_item33 to [1 x %struct._object*]*, !dbg !6024
  br label %for.body.25, !dbg !6022

for.body.25:                                      ; preds = %for.body.25.lr.ph, %for.inc.38
  %i.1130 = phi i64 [ 0, %for.body.25.lr.ph ], [ %inc39, %for.inc.38 ]
  %16 = load i64*, i64** %cycles27, align 8, !dbg !6023, !tbaa !5719
  %arrayidx28 = getelementptr i64, i64* %16, i64 %i.1130, !dbg !6025
  %17 = load i64, i64* %arrayidx28, align 8, !dbg !6025, !tbaa !2984
  %call29 = tail call %struct._object* @PyLong_FromSsize_t(i64 %17) #1, !dbg !6026
  tail call void @llvm.dbg.value(metadata %struct._object* %call29, i64 0, metadata !1798, metadata !2664), !dbg !6027
  %tobool30 = icmp eq %struct._object* %call29, null, !dbg !6028
  br i1 %tobool30, label %do.body.47.loopexit, label %for.inc.38, !dbg !6030

for.inc.38:                                       ; preds = %for.body.25
  %arrayidx34 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %15, i64 0, i64 %i.1130, !dbg !6024
  store %struct._object* %call29, %struct._object** %arrayidx34, align 8, !dbg !6024, !tbaa !2681
  %inc39 = add i64 %i.1130, 1, !dbg !6031
  tail call void @llvm.dbg.value(metadata i64 %inc39, i64 0, metadata !1793, metadata !2664), !dbg !6014
  %18 = load i64, i64* %r17, align 8, !dbg !6020, !tbaa !5755
  %cmp24 = icmp slt i64 %inc39, %18, !dbg !6021
  br i1 %cmp24, label %for.body.25, label %for.end.40.loopexit, !dbg !6022

for.end.40.loopexit:                              ; preds = %for.inc.38
  %.lcssa140 = phi i64 [ %18, %for.inc.38 ]
  br label %for.end.40, !dbg !6032

for.end.40:                                       ; preds = %for.end.40.loopexit, %for.cond.22.preheader
  %.lcssa = phi i64 [ %14, %for.cond.22.preheader ], [ %.lcssa140, %for.end.40.loopexit ]
  %ob_type41 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %po, i64 0, i32 0, i32 1, !dbg !6032
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type41, align 8, !dbg !6032, !tbaa !2667
  %20 = load %struct._object*, %struct._object** %pool6, align 8, !dbg !6033, !tbaa !5692
  %call44 = tail call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.71, i64 0, i64 0), %struct._typeobject* %19, %struct._object* %20, i64 %.lcssa, %struct._object* %call7, %struct._object* %call18) #1, !dbg !6034
  br label %return, !dbg !6035

do.body.47.loopexit:                              ; preds = %for.body.25
  br label %do.body.47, !dbg !6036

do.body.47.loopexit138:                           ; preds = %for.body
  br label %do.body.47, !dbg !6036

do.body.47:                                       ; preds = %do.body.47.loopexit138, %do.body.47.loopexit, %for.end
  %cycles.0 = phi %struct._object* [ null, %for.end ], [ %call18, %do.body.47.loopexit ], [ null, %do.body.47.loopexit138 ]
  tail call void @llvm.dbg.value(metadata %struct._object* %call7, i64 0, metadata !1802, metadata !2664), !dbg !6036
  tail call void @llvm.dbg.value(metadata %struct._object* %call7, i64 0, metadata !1804, metadata !2664), !dbg !6038
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call7, i64 0, i32 0, !dbg !6040
  %21 = load i64, i64* %ob_refcnt, align 8, !dbg !6040, !tbaa !2694
  %dec = add i64 %21, -1, !dbg !6040
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6040, !tbaa !2694
  %cmp48 = icmp eq i64 %dec, 0, !dbg !6040
  br i1 %cmp48, label %if.else.50, label %if.end.53, !dbg !6042

if.else.50:                                       ; preds = %do.body.47
  %ob_type51 = getelementptr inbounds %struct._object, %struct._object* %call7, i64 0, i32 1, !dbg !6043
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type51, align 8, !dbg !6043, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %22, i64 0, i32 4, !dbg !6043
  %23 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6043, !tbaa !2717
  tail call void %23(%struct._object* %call7) #1, !dbg !6043
  br label %if.end.53

if.end.53:                                        ; preds = %if.else.50, %do.body.47
  tail call void @llvm.dbg.value(metadata %struct._object* %cycles.0, i64 0, metadata !1807, metadata !2664), !dbg !6045
  %cmp58 = icmp eq %struct._object* %cycles.0, null, !dbg !6047
  br i1 %cmp58, label %return, label %do.body.60, !dbg !6048

do.body.60:                                       ; preds = %if.end.53
  tail call void @llvm.dbg.value(metadata %struct._object* %cycles.0, i64 0, metadata !1809, metadata !2664), !dbg !6049
  %ob_refcnt62 = getelementptr inbounds %struct._object, %struct._object* %cycles.0, i64 0, i32 0, !dbg !6051
  %24 = load i64, i64* %ob_refcnt62, align 8, !dbg !6051, !tbaa !2694
  %dec63 = add i64 %24, -1, !dbg !6051
  store i64 %dec63, i64* %ob_refcnt62, align 8, !dbg !6051, !tbaa !2694
  %cmp64 = icmp eq i64 %dec63, 0, !dbg !6051
  br i1 %cmp64, label %if.else.66, label %return, !dbg !6053

if.else.66:                                       ; preds = %do.body.60
  %ob_type67 = getelementptr inbounds %struct._object, %struct._object* %cycles.0, i64 0, i32 1, !dbg !6054
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type67, align 8, !dbg !6054, !tbaa !2667
  %tp_dealloc68 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i64 0, i32 4, !dbg !6054
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc68, align 8, !dbg !6054, !tbaa !2717
  tail call void %26(%struct._object* %cycles.0) #1, !dbg !6054
  br label %return

return:                                           ; preds = %if.else.5, %for.end.40, %if.else.66, %do.body.60, %if.end.53, %if.then.1, %if.then
  %retval.1 = phi %struct._object* [ %call, %if.then ], [ %call4, %if.then.1 ], [ %call44, %for.end.40 ], [ null, %if.else.66 ], [ null, %do.body.60 ], [ null, %if.end.53 ], [ null, %if.else.5 ]
  ret %struct._object* %retval.1, !dbg !6056
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @permutations_setstate(%struct.permutationsobject* nocapture %po, %struct._object* %state) #0 {
entry:
  %indices = alloca %struct._object*, align 8
  %cycles = alloca %struct._object*, align 8
  tail call void @llvm.dbg.value(metadata %struct.permutationsobject* %po, i64 0, metadata !1816, metadata !2664), !dbg !6057
  tail call void @llvm.dbg.value(metadata %struct._object* %state, i64 0, metadata !1817, metadata !2664), !dbg !6058
  %0 = bitcast %struct._object** %indices to i8*, !dbg !6059
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6059
  %1 = bitcast %struct._object** %cycles to i8*, !dbg !6059
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !6059
  tail call void @llvm.dbg.value(metadata %struct._object** %indices, i64 0, metadata !1818, metadata !2664), !dbg !6060
  tail call void @llvm.dbg.value(metadata %struct._object** %cycles, i64 0, metadata !1819, metadata !2664), !dbg !6061
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %state, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.72, i64 0, i64 0), %struct._typeobject* nonnull @PyTuple_Type, %struct._object** nonnull %indices, %struct._typeobject* nonnull @PyTuple_Type, %struct._object** nonnull %cycles) #1, !dbg !6062
  %tobool = icmp eq i32 %call, 0, !dbg !6062
  br i1 %tobool, label %cleanup.91, label %if.end, !dbg !6064

if.end:                                           ; preds = %entry
  %pool = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %po, i64 0, i32 1, !dbg !6065
  %2 = bitcast %struct._object** %pool to %struct.PyVarObject**, !dbg !6065
  %3 = load %struct.PyVarObject*, %struct.PyVarObject** %2, align 8, !dbg !6065, !tbaa !5692
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %3, i64 0, i32 1, !dbg !6065
  %4 = load i64, i64* %ob_size, align 8, !dbg !6065, !tbaa !2957
  call void @llvm.dbg.value(metadata i64 %4, i64 0, metadata !1821, metadata !2664), !dbg !6066
  call void @llvm.dbg.value(metadata %struct._object** %indices, i64 0, metadata !1818, metadata !2664), !dbg !6060
  %5 = bitcast %struct._object** %indices to %struct.PyVarObject**, !dbg !6067
  %6 = load %struct.PyVarObject*, %struct.PyVarObject** %5, align 8, !dbg !6067, !tbaa !2681
  %ob_size1 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %6, i64 0, i32 1, !dbg !6067
  %7 = load i64, i64* %ob_size1, align 8, !dbg !6067, !tbaa !2957
  %cmp = icmp eq i64 %7, %4, !dbg !6069
  %8 = bitcast %struct.PyVarObject* %6 to %struct.PyTupleObject*, !dbg !6070
  br i1 %cmp, label %lor.lhs.false, label %if.then.4, !dbg !6070

lor.lhs.false:                                    ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct._object** %cycles, i64 0, metadata !1819, metadata !2664), !dbg !6061
  %9 = bitcast %struct._object** %cycles to %struct.PyVarObject**, !dbg !6071
  %10 = load %struct.PyVarObject*, %struct.PyVarObject** %9, align 8, !dbg !6071, !tbaa !2681
  %ob_size2 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %10, i64 0, i32 1, !dbg !6071
  %11 = load i64, i64* %ob_size2, align 8, !dbg !6071, !tbaa !2957
  %r = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %po, i64 0, i32 5, !dbg !6072
  %12 = load i64, i64* %r, align 8, !dbg !6072, !tbaa !5755
  %cmp3 = icmp eq i64 %11, %12, !dbg !6073
  br i1 %cmp3, label %for.cond.preheader, label %if.then.4, !dbg !6074

for.cond.preheader:                               ; preds = %lor.lhs.false
  %cmp6.156 = icmp sgt i64 %4, 0, !dbg !6075
  br i1 %cmp6.156, label %for.body.lr.ph, label %for.cond.23.preheader, !dbg !6076

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %13 = bitcast %struct._object** %indices to %struct.PyTupleObject**, !dbg !6077
  %indices20 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %po, i64 0, i32 2, !dbg !6078
  %sub = add i64 %4, -1, !dbg !6079
  br label %for.body, !dbg !6076

if.then.4:                                        ; preds = %lor.lhs.false, %if.end
  %14 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6082, !tbaa !2681
  call void @PyErr_SetString(%struct._object* %14, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0)) #1, !dbg !6084
  br label %cleanup.91, !dbg !6085

for.cond.for.cond.23.preheader_crit_edge:         ; preds = %if.end.19
  %.pre159 = load i64, i64* %r, align 8, !dbg !6086, !tbaa !5755
  br label %for.cond.23.preheader, !dbg !6076

for.cond.23.preheader:                            ; preds = %for.cond.for.cond.23.preheader_crit_edge, %for.cond.preheader
  %15 = phi i64 [ %.pre159, %for.cond.for.cond.23.preheader_crit_edge ], [ %11, %for.cond.preheader ], !dbg !6086
  %cmp25.154 = icmp sgt i64 %15, 0, !dbg !6087
  br i1 %cmp25.154, label %for.body.26.lr.ph, label %for.end.55, !dbg !6088

for.body.26.lr.ph:                                ; preds = %for.cond.23.preheader
  %16 = bitcast %struct._object** %cycles to %struct.PyTupleObject**, !dbg !6089
  %cycles47 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %po, i64 0, i32 3, !dbg !6090
  br label %for.body.26, !dbg !6088

for.body:                                         ; preds = %if.end.19.for.body_crit_edge, %for.body.lr.ph
  %17 = phi %struct.PyTupleObject* [ %8, %for.body.lr.ph ], [ %.pre, %if.end.19.for.body_crit_edge ], !dbg !6077
  %i.0157 = phi i64 [ 0, %for.body.lr.ph ], [ %inc, %if.end.19.for.body_crit_edge ]
  call void @llvm.dbg.value(metadata %struct._object** %indices, i64 0, metadata !1818, metadata !2664), !dbg !6060
  %arrayidx = getelementptr %struct.PyTupleObject, %struct.PyTupleObject* %17, i64 0, i32 1, i64 %i.0157, !dbg !6077
  %18 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !6077, !tbaa !2681
  call void @llvm.dbg.value(metadata %struct._object* %18, i64 0, metadata !1823, metadata !2664), !dbg !6091
  %call7 = call i64 @PyLong_AsSsize_t(%struct._object* %18) #1, !dbg !6092
  call void @llvm.dbg.value(metadata i64 %call7, i64 0, metadata !1827, metadata !2664), !dbg !6093
  %cmp8 = icmp slt i64 %call7, 0, !dbg !6094
  br i1 %cmp8, label %land.lhs.true, label %if.else, !dbg !6096

land.lhs.true:                                    ; preds = %for.body
  %call9 = call %struct._object* @PyErr_Occurred() #1, !dbg !6097
  %tobool10 = icmp eq %struct._object* %call9, null, !dbg !6097
  br i1 %tobool10, label %if.end.19, label %cleanup.91.loopexit164, !dbg !6099

if.else:                                          ; preds = %for.body
  %cmp15 = icmp sgt i64 %call7, %sub, !dbg !6100
  call void @llvm.dbg.value(metadata i64 %sub, i64 0, metadata !1827, metadata !2664), !dbg !6093
  %sub.call7 = select i1 %cmp15, i64 %sub, i64 %call7, !dbg !6101
  br label %if.end.19, !dbg !6101

if.end.19:                                        ; preds = %land.lhs.true, %if.else
  %index.0 = phi i64 [ %sub.call7, %if.else ], [ 0, %land.lhs.true ]
  %19 = load i64*, i64** %indices20, align 8, !dbg !6078, !tbaa !5716
  %arrayidx21 = getelementptr i64, i64* %19, i64 %i.0157, !dbg !6102
  store i64 %index.0, i64* %arrayidx21, align 8, !dbg !6103, !tbaa !2984
  %inc = add nuw nsw i64 %i.0157, 1, !dbg !6104
  call void @llvm.dbg.value(metadata i64 %inc, i64 0, metadata !1822, metadata !2664), !dbg !6105
  %cmp6 = icmp slt i64 %inc, %4, !dbg !6075
  br i1 %cmp6, label %if.end.19.for.body_crit_edge, label %for.cond.for.cond.23.preheader_crit_edge, !dbg !6076

if.end.19.for.body_crit_edge:                     ; preds = %if.end.19
  %.pre = load %struct.PyTupleObject*, %struct.PyTupleObject** %13, align 8, !dbg !6077, !tbaa !2681
  br label %for.body, !dbg !6076

for.body.26:                                      ; preds = %for.body.26.lr.ph, %if.end.46
  %i.1155 = phi i64 [ 0, %for.body.26.lr.ph ], [ %inc54, %if.end.46 ]
  call void @llvm.dbg.value(metadata %struct._object** %cycles, i64 0, metadata !1819, metadata !2664), !dbg !6061
  %20 = load %struct.PyTupleObject*, %struct.PyTupleObject** %16, align 8, !dbg !6089, !tbaa !2681
  %arrayidx29 = getelementptr %struct.PyTupleObject, %struct.PyTupleObject* %20, i64 0, i32 1, i64 %i.1155, !dbg !6089
  %21 = load %struct._object*, %struct._object** %arrayidx29, align 8, !dbg !6089, !tbaa !2681
  call void @llvm.dbg.value(metadata %struct._object* %21, i64 0, metadata !1828, metadata !2664), !dbg !6106
  %call31 = call i64 @PyLong_AsSsize_t(%struct._object* %21) #1, !dbg !6107
  call void @llvm.dbg.value(metadata i64 %call31, i64 0, metadata !1832, metadata !2664), !dbg !6108
  %cmp32 = icmp slt i64 %call31, 0, !dbg !6109
  br i1 %cmp32, label %land.lhs.true.33, label %if.end.37, !dbg !6111

land.lhs.true.33:                                 ; preds = %for.body.26
  %call34 = call %struct._object* @PyErr_Occurred() #1, !dbg !6112
  %tobool35 = icmp eq %struct._object* %call34, null, !dbg !6112
  br i1 %tobool35, label %if.end.46, label %cleanup.91.loopexit, !dbg !6114

if.end.37:                                        ; preds = %for.body.26
  %cmp38 = icmp slt i64 %call31, 1, !dbg !6115
  br i1 %cmp38, label %if.end.46, label %if.else.40, !dbg !6117

if.else.40:                                       ; preds = %if.end.37
  %sub41 = sub i64 %4, %i.1155, !dbg !6118
  %cmp42 = icmp sgt i64 %call31, %sub41, !dbg !6120
  call void @llvm.dbg.value(metadata i64 %sub41, i64 0, metadata !1832, metadata !2664), !dbg !6108
  %sub41.call31 = select i1 %cmp42, i64 %sub41, i64 %call31, !dbg !6121
  br label %if.end.46, !dbg !6121

if.end.46:                                        ; preds = %land.lhs.true.33, %if.else.40, %if.end.37
  %index30.0 = phi i64 [ 1, %if.end.37 ], [ %sub41.call31, %if.else.40 ], [ 1, %land.lhs.true.33 ]
  %22 = load i64*, i64** %cycles47, align 8, !dbg !6090, !tbaa !5719
  %arrayidx48 = getelementptr i64, i64* %22, i64 %i.1155, !dbg !6122
  store i64 %index30.0, i64* %arrayidx48, align 8, !dbg !6123, !tbaa !2984
  %inc54 = add i64 %i.1155, 1, !dbg !6124
  call void @llvm.dbg.value(metadata i64 %inc54, i64 0, metadata !1822, metadata !2664), !dbg !6105
  %23 = load i64, i64* %r, align 8, !dbg !6086, !tbaa !5755
  %cmp25 = icmp slt i64 %inc54, %23, !dbg !6087
  br i1 %cmp25, label %for.body.26, label %for.end.55.loopexit, !dbg !6088

for.end.55.loopexit:                              ; preds = %if.end.46
  %.lcssa166 = phi i64 [ %23, %if.end.46 ]
  br label %for.end.55, !dbg !6125

for.end.55:                                       ; preds = %for.end.55.loopexit, %for.cond.23.preheader
  %.lcssa = phi i64 [ %15, %for.cond.23.preheader ], [ %.lcssa166, %for.end.55.loopexit ]
  %call57 = call %struct._object* @PyTuple_New(i64 %.lcssa) #1, !dbg !6125
  call void @llvm.dbg.value(metadata %struct._object* %call57, i64 0, metadata !1820, metadata !2664), !dbg !6126
  %cmp58 = icmp eq %struct._object* %call57, null, !dbg !6127
  br i1 %cmp58, label %cleanup.91, label %for.cond.61.preheader, !dbg !6129

for.cond.61.preheader:                            ; preds = %for.end.55
  %24 = load i64, i64* %r, align 8, !dbg !6130, !tbaa !5755
  %cmp63.152 = icmp sgt i64 %24, 0, !dbg !6131
  br i1 %cmp63.152, label %for.body.64.lr.ph, label %do.body, !dbg !6132

for.body.64.lr.ph:                                ; preds = %for.cond.61.preheader
  %indices65 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %po, i64 0, i32 2, !dbg !6133
  %25 = bitcast %struct._object** %pool to %struct.PyTupleObject**, !dbg !6133
  %ob_item71 = getelementptr inbounds %struct._object, %struct._object* %call57, i64 1, i32 1, !dbg !6134
  %26 = bitcast %struct._typeobject** %ob_item71 to [1 x %struct._object*]*, !dbg !6134
  %xtraiter = and i64 %24, 1, !dbg !6132
  %lcmp.mod = icmp eq i64 %xtraiter, 0, !dbg !6132
  br i1 %lcmp.mod, label %for.body.64.lr.ph.split, label %for.body.64.prol, !dbg !6132

for.body.64.prol:                                 ; preds = %for.body.64.lr.ph
  %27 = load i64*, i64** %indices65, align 8, !dbg !6133, !tbaa !5716
  %28 = load i64, i64* %27, align 8, !dbg !6133, !tbaa !2984
  %29 = load %struct.PyTupleObject*, %struct.PyTupleObject** %25, align 8, !dbg !6133, !tbaa !5692
  %arrayidx69.prol = getelementptr %struct.PyTupleObject, %struct.PyTupleObject* %29, i64 0, i32 1, i64 %28, !dbg !6133
  %30 = load %struct._object*, %struct._object** %arrayidx69.prol, align 8, !dbg !6133, !tbaa !2681
  call void @llvm.dbg.value(metadata %struct._object* %30, i64 0, metadata !1833, metadata !2664), !dbg !6135
  %ob_refcnt.prol = getelementptr inbounds %struct._object, %struct._object* %30, i64 0, i32 0, !dbg !6136
  %31 = load i64, i64* %ob_refcnt.prol, align 8, !dbg !6136, !tbaa !2694
  %inc70.prol = add i64 %31, 1, !dbg !6136
  store i64 %inc70.prol, i64* %ob_refcnt.prol, align 8, !dbg !6136, !tbaa !2694
  %arrayidx72.prol = bitcast %struct._typeobject** %ob_item71 to %struct._object**, !dbg !6134
  store %struct._object* %30, %struct._object** %arrayidx72.prol, align 8, !dbg !6134, !tbaa !2681
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !1822, metadata !2664), !dbg !6105
  br label %for.body.64.lr.ph.split, !dbg !6132

for.body.64.lr.ph.split:                          ; preds = %for.body.64.lr.ph, %for.body.64.prol
  %i.2153.unr = phi i64 [ 0, %for.body.64.lr.ph ], [ 1, %for.body.64.prol ]
  %32 = icmp eq i64 %24, 1, !dbg !6132
  br i1 %32, label %do.body.loopexit, label %for.body.64.lr.ph.split.split, !dbg !6132

for.body.64.lr.ph.split.split:                    ; preds = %for.body.64.lr.ph.split
  br label %for.body.64, !dbg !6132

for.body.64:                                      ; preds = %for.body.64, %for.body.64.lr.ph.split.split
  %i.2153 = phi i64 [ %i.2153.unr, %for.body.64.lr.ph.split.split ], [ %inc74.1, %for.body.64 ]
  %33 = load i64*, i64** %indices65, align 8, !dbg !6133, !tbaa !5716
  %arrayidx66 = getelementptr i64, i64* %33, i64 %i.2153, !dbg !6133
  %34 = load i64, i64* %arrayidx66, align 8, !dbg !6133, !tbaa !2984
  %35 = load %struct.PyTupleObject*, %struct.PyTupleObject** %25, align 8, !dbg !6133, !tbaa !5692
  %arrayidx69 = getelementptr %struct.PyTupleObject, %struct.PyTupleObject* %35, i64 0, i32 1, i64 %34, !dbg !6133
  %36 = load %struct._object*, %struct._object** %arrayidx69, align 8, !dbg !6133, !tbaa !2681
  call void @llvm.dbg.value(metadata %struct._object* %36, i64 0, metadata !1833, metadata !2664), !dbg !6135
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %36, i64 0, i32 0, !dbg !6136
  %37 = load i64, i64* %ob_refcnt, align 8, !dbg !6136, !tbaa !2694
  %inc70 = add i64 %37, 1, !dbg !6136
  store i64 %inc70, i64* %ob_refcnt, align 8, !dbg !6136, !tbaa !2694
  %arrayidx72 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %26, i64 0, i64 %i.2153, !dbg !6134
  store %struct._object* %36, %struct._object** %arrayidx72, align 8, !dbg !6134, !tbaa !2681
  %inc74 = add i64 %i.2153, 1, !dbg !6137
  call void @llvm.dbg.value(metadata i64 %inc74, i64 0, metadata !1822, metadata !2664), !dbg !6105
  %38 = load i64*, i64** %indices65, align 8, !dbg !6133, !tbaa !5716
  %arrayidx66.1 = getelementptr i64, i64* %38, i64 %inc74, !dbg !6133
  %39 = load i64, i64* %arrayidx66.1, align 8, !dbg !6133, !tbaa !2984
  %40 = load %struct.PyTupleObject*, %struct.PyTupleObject** %25, align 8, !dbg !6133, !tbaa !5692
  %arrayidx69.1 = getelementptr %struct.PyTupleObject, %struct.PyTupleObject* %40, i64 0, i32 1, i64 %39, !dbg !6133
  %41 = load %struct._object*, %struct._object** %arrayidx69.1, align 8, !dbg !6133, !tbaa !2681
  call void @llvm.dbg.value(metadata %struct._object* %36, i64 0, metadata !1833, metadata !2664), !dbg !6135
  %ob_refcnt.1 = getelementptr inbounds %struct._object, %struct._object* %41, i64 0, i32 0, !dbg !6136
  %42 = load i64, i64* %ob_refcnt.1, align 8, !dbg !6136, !tbaa !2694
  %inc70.1 = add i64 %42, 1, !dbg !6136
  store i64 %inc70.1, i64* %ob_refcnt.1, align 8, !dbg !6136, !tbaa !2694
  %arrayidx72.1 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %26, i64 0, i64 %inc74, !dbg !6134
  store %struct._object* %41, %struct._object** %arrayidx72.1, align 8, !dbg !6134, !tbaa !2681
  %inc74.1 = add i64 %i.2153, 2, !dbg !6137
  call void @llvm.dbg.value(metadata i64 %inc74, i64 0, metadata !1822, metadata !2664), !dbg !6105
  %cmp63.1 = icmp slt i64 %inc74.1, %24, !dbg !6131
  br i1 %cmp63.1, label %for.body.64, label %do.body.loopexit.unr-lcssa, !dbg !6132

do.body.loopexit.unr-lcssa:                       ; preds = %for.body.64
  br label %do.body.loopexit, !dbg !6138

do.body.loopexit:                                 ; preds = %for.body.64.lr.ph.split, %do.body.loopexit.unr-lcssa
  br label %do.body, !dbg !6138

do.body:                                          ; preds = %do.body.loopexit, %for.cond.61.preheader
  %result76 = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %po, i64 0, i32 4, !dbg !6138
  %43 = load %struct._object*, %struct._object** %result76, align 8, !dbg !6138, !tbaa !5705
  call void @llvm.dbg.value(metadata %struct._object* %43, i64 0, metadata !1837, metadata !2664), !dbg !6138
  %cmp77 = icmp eq %struct._object* %43, null, !dbg !6140
  br i1 %cmp77, label %if.end.86, label %if.then.78, !dbg !6141

if.then.78:                                       ; preds = %do.body
  store %struct._object* null, %struct._object** %result76, align 8, !dbg !6142, !tbaa !5705
  call void @llvm.dbg.value(metadata %struct._object* %43, i64 0, metadata !1839, metadata !2664), !dbg !6144
  %ob_refcnt81 = getelementptr inbounds %struct._object, %struct._object* %43, i64 0, i32 0, !dbg !6146
  %44 = load i64, i64* %ob_refcnt81, align 8, !dbg !6146, !tbaa !2694
  %dec = add i64 %44, -1, !dbg !6146
  store i64 %dec, i64* %ob_refcnt81, align 8, !dbg !6146, !tbaa !2694
  %cmp82 = icmp eq i64 %dec, 0, !dbg !6146
  br i1 %cmp82, label %if.else.84, label %if.end.86, !dbg !6148

if.else.84:                                       ; preds = %if.then.78
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %43, i64 0, i32 1, !dbg !6149
  %45 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6149, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %45, i64 0, i32 4, !dbg !6149
  %46 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6149, !tbaa !2717
  call void %46(%struct._object* %43) #1, !dbg !6149
  br label %if.end.86

if.end.86:                                        ; preds = %if.else.84, %if.then.78, %do.body
  store %struct._object* %call57, %struct._object** %result76, align 8, !dbg !6151, !tbaa !5705
  %47 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !6152, !tbaa !2694
  %inc90 = add i64 %47, 1, !dbg !6152
  store i64 %inc90, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !6152, !tbaa !2694
  br label %cleanup.91, !dbg !6152

cleanup.91.loopexit:                              ; preds = %land.lhs.true.33
  br label %cleanup.91, !dbg !6153

cleanup.91.loopexit164:                           ; preds = %land.lhs.true
  br label %cleanup.91, !dbg !6153

cleanup.91:                                       ; preds = %cleanup.91.loopexit164, %cleanup.91.loopexit, %for.end.55, %entry, %if.end.86, %if.then.4
  %retval.4 = phi %struct._object* [ null, %if.then.4 ], [ @_Py_NoneStruct, %if.end.86 ], [ null, %entry ], [ null, %for.end.55 ], [ null, %cleanup.91.loopexit ], [ null, %cleanup.91.loopexit164 ]
  call void @llvm.lifetime.end(i64 8, i8* %1) #1, !dbg !6153
  call void @llvm.lifetime.end(i64 8, i8* %0) #1, !dbg !6153
  ret %struct._object* %retval.4, !dbg !6153
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @permutations_sizeof(%struct.permutationsobject* nocapture readonly %po, i8* nocapture readnone %unused) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.permutationsobject* %po, i64 0, metadata !1847, metadata !2664), !dbg !6154
  tail call void @llvm.dbg.value(metadata i8* %unused, i64 0, metadata !1848, metadata !2664), !dbg !6155
  tail call void @llvm.dbg.value(metadata i64 64, i64 0, metadata !1849, metadata !2664), !dbg !6156
  %pool = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %po, i64 0, i32 1, !dbg !6157
  %0 = bitcast %struct._object** %pool to %struct.PyVarObject**, !dbg !6157
  %1 = load %struct.PyVarObject*, %struct.PyVarObject** %0, align 8, !dbg !6157, !tbaa !5692
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1, i64 0, i32 1, !dbg !6157
  %2 = load i64, i64* %ob_size, align 8, !dbg !6157, !tbaa !2957
  %r = getelementptr inbounds %struct.permutationsobject, %struct.permutationsobject* %po, i64 0, i32 5, !dbg !6158
  %3 = load i64, i64* %r, align 8, !dbg !6158, !tbaa !5755
  %tmp = add i64 %3, %2
  %tmp7 = shl i64 %tmp, 3
  %add2 = add i64 %tmp7, 64, !dbg !6159
  tail call void @llvm.dbg.value(metadata i64 %add2, i64 0, metadata !1849, metadata !2664), !dbg !6156
  %call = tail call %struct._object* @PyLong_FromSsize_t(i64 %add2) #1, !dbg !6160
  ret %struct._object* %call, !dbg !6161
}

; Function Attrs: nounwind uwtable
define internal void @product_dealloc(%struct.productobject* %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.productobject* %lz, i64 0, metadata !1873, metadata !2664), !dbg !6162
  %0 = bitcast %struct.productobject* %lz to i8*, !dbg !6163
  tail call void @PyObject_GC_UnTrack(i8* %0) #1, !dbg !6164
  %pools = getelementptr inbounds %struct.productobject, %struct.productobject* %lz, i64 0, i32 1, !dbg !6165
  %1 = load %struct._object*, %struct._object** %pools, align 8, !dbg !6165, !tbaa !6167
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1874, metadata !2664), !dbg !6165
  %cmp = icmp eq %struct._object* %1, null, !dbg !6169
  br i1 %cmp, label %if.end.4, label %do.body.1, !dbg !6170

do.body.1:                                        ; preds = %entry
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1876, metadata !2664), !dbg !6171
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !6173
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !6173, !tbaa !2694
  %dec = add i64 %2, -1, !dbg !6173
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6173, !tbaa !2694
  %cmp2 = icmp eq i64 %dec, 0, !dbg !6173
  br i1 %cmp2, label %if.else, label %if.end.4, !dbg !6175

if.else:                                          ; preds = %do.body.1
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !6176
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6176, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 4, !dbg !6176
  %4 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6176, !tbaa !2717
  tail call void %4(%struct._object* %1) #1, !dbg !6176
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %do.body.1, %entry
  %result = getelementptr inbounds %struct.productobject, %struct.productobject* %lz, i64 0, i32 3, !dbg !6178
  %5 = load %struct._object*, %struct._object** %result, align 8, !dbg !6178, !tbaa !6180
  tail call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !1879, metadata !2664), !dbg !6178
  %cmp9 = icmp eq %struct._object* %5, null, !dbg !6181
  br i1 %cmp9, label %if.end.23, label %do.body.11, !dbg !6182

do.body.11:                                       ; preds = %if.end.4
  tail call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !1881, metadata !2664), !dbg !6183
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 0, !dbg !6185
  %6 = load i64, i64* %ob_refcnt13, align 8, !dbg !6185, !tbaa !2694
  %dec14 = add i64 %6, -1, !dbg !6185
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !6185, !tbaa !2694
  %cmp15 = icmp eq i64 %dec14, 0, !dbg !6185
  br i1 %cmp15, label %if.else.17, label %if.end.23, !dbg !6187

if.else.17:                                       ; preds = %do.body.11
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 1, !dbg !6188
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !6188, !tbaa !2667
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i64 0, i32 4, !dbg !6188
  %8 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !6188, !tbaa !2717
  tail call void %8(%struct._object* %5) #1, !dbg !6188
  br label %if.end.23

if.end.23:                                        ; preds = %if.else.17, %do.body.11, %if.end.4
  %indices = getelementptr inbounds %struct.productobject, %struct.productobject* %lz, i64 0, i32 2, !dbg !6190
  %9 = load i64*, i64** %indices, align 8, !dbg !6190, !tbaa !6192
  %cmp26 = icmp eq i64* %9, null, !dbg !6193
  br i1 %cmp26, label %if.end.29, label %if.then.27, !dbg !6194

if.then.27:                                       ; preds = %if.end.23
  %10 = bitcast i64* %9 to i8*, !dbg !6195
  tail call void @PyMem_Free(i8* %10) #1, !dbg !6196
  br label %if.end.29, !dbg !6196

if.end.29:                                        ; preds = %if.end.23, %if.then.27
  %ob_type30 = getelementptr inbounds %struct.productobject, %struct.productobject* %lz, i64 0, i32 0, i32 1, !dbg !6197
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type30, align 8, !dbg !6197, !tbaa !2667
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i64 0, i32 38, !dbg !6198
  %12 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !6198, !tbaa !2744
  tail call void %12(i8* %0) #1, !dbg !6197
  ret void, !dbg !6199
}

; Function Attrs: nounwind uwtable
define internal i32 @product_traverse(%struct.productobject* nocapture readonly %lz, i32 (%struct._object*, i8*)* nocapture %visit, i8* %arg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.productobject* %lz, i64 0, metadata !1888, metadata !2664), !dbg !6200
  tail call void @llvm.dbg.value(metadata i32 (%struct._object*, i8*)* %visit, i64 0, metadata !1889, metadata !2664), !dbg !6201
  tail call void @llvm.dbg.value(metadata i8* %arg, i64 0, metadata !1890, metadata !2664), !dbg !6202
  %pools = getelementptr inbounds %struct.productobject, %struct.productobject* %lz, i64 0, i32 1, !dbg !6203
  %0 = load %struct._object*, %struct._object** %pools, align 8, !dbg !6203, !tbaa !6167
  %tobool = icmp eq %struct._object* %0, null, !dbg !6203
  br i1 %tobool, label %do.body.5, label %if.then, !dbg !6205

if.then:                                          ; preds = %entry
  %call = tail call i32 %visit(%struct._object* %0, i8* %arg) #1, !dbg !6206
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !1891, metadata !2664), !dbg !6206
  %tobool2 = icmp eq i32 %call, 0, !dbg !6208
  br i1 %tobool2, label %do.body.5, label %return

do.body.5:                                        ; preds = %entry, %if.then
  %result = getelementptr inbounds %struct.productobject, %struct.productobject* %lz, i64 0, i32 3, !dbg !6210
  %1 = load %struct._object*, %struct._object** %result, align 8, !dbg !6210, !tbaa !6180
  %tobool6 = icmp eq %struct._object* %1, null, !dbg !6210
  br i1 %tobool6, label %do.end.18, label %if.then.7, !dbg !6212

if.then.7:                                        ; preds = %do.body.5
  %call10 = tail call i32 %visit(%struct._object* %1, i8* %arg) #1, !dbg !6213
  tail call void @llvm.dbg.value(metadata i32 %call10, i64 0, metadata !1895, metadata !2664), !dbg !6213
  %tobool11 = icmp eq i32 %call10, 0, !dbg !6215
  br i1 %tobool11, label %do.end.18, label %return

do.end.18:                                        ; preds = %do.body.5, %if.then.7
  br label %return, !dbg !6217

return:                                           ; preds = %if.then.7, %if.then, %do.end.18
  %retval.3 = phi i32 [ 0, %do.end.18 ], [ %call10, %if.then.7 ], [ %call, %if.then ]
  ret i32 %retval.3, !dbg !6218
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @product_next(%struct.productobject* nocapture %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.productobject* %lz, i64 0, metadata !1903, metadata !2664), !dbg !6219
  %pools1 = getelementptr inbounds %struct.productobject, %struct.productobject* %lz, i64 0, i32 1, !dbg !6220
  %0 = load %struct._object*, %struct._object** %pools1, align 8, !dbg !6220, !tbaa !6167
  tail call void @llvm.dbg.value(metadata %struct._object* %0, i64 0, metadata !1907, metadata !2664), !dbg !6221
  %result2 = getelementptr inbounds %struct.productobject, %struct.productobject* %lz, i64 0, i32 3, !dbg !6222
  %1 = load %struct._object*, %struct._object** %result2, align 8, !dbg !6222, !tbaa !6180
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1908, metadata !2664), !dbg !6223
  %2 = getelementptr inbounds %struct._object, %struct._object* %0, i64 1, i32 0, !dbg !6224
  %3 = load i64, i64* %2, align 8, !dbg !6224, !tbaa !2957
  tail call void @llvm.dbg.value(metadata i64 %3, i64 0, metadata !1909, metadata !2664), !dbg !6225
  %stopped = getelementptr inbounds %struct.productobject, %struct.productobject* %lz, i64 0, i32 4, !dbg !6226
  %4 = load i32, i32* %stopped, align 4, !dbg !6226, !tbaa !6228
  %tobool = icmp eq i32 %4, 0, !dbg !6229
  br i1 %tobool, label %if.end, label %cleanup.113, !dbg !6230

if.end:                                           ; preds = %entry
  %cmp = icmp eq %struct._object* %1, null, !dbg !6231
  br i1 %cmp, label %if.then.3, label %if.else, !dbg !6232

if.then.3:                                        ; preds = %if.end
  %call = tail call %struct._object* @PyTuple_New(i64 %3) #1, !dbg !6233
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1908, metadata !2664), !dbg !6223
  %cmp4 = icmp eq %struct._object* %call, null, !dbg !6235
  br i1 %cmp4, label %empty, label %if.end.6, !dbg !6237

if.end.6:                                         ; preds = %if.then.3
  store %struct._object* %call, %struct._object** %result2, align 8, !dbg !6238, !tbaa !6180
  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !1910, metadata !2664), !dbg !6239
  %cmp8.206 = icmp sgt i64 %3, 0, !dbg !6240
  br i1 %cmp8.206, label %for.body.lr.ph, label %if.end.109, !dbg !6243

for.body.lr.ph:                                   ; preds = %if.end.6
  %ob_item = getelementptr inbounds %struct._object, %struct._object* %0, i64 1, i32 1, !dbg !6244
  %5 = bitcast %struct._typeobject** %ob_item to [1 x %struct._object*]*, !dbg !6244
  %ob_item15 = getelementptr inbounds %struct._object, %struct._object* %call, i64 1, i32 1, !dbg !6246
  %6 = bitcast %struct._typeobject** %ob_item15 to [1 x %struct._object*]*, !dbg !6246
  br label %for.body, !dbg !6243

for.body:                                         ; preds = %for.body.lr.ph, %if.end.12
  %i.0207 = phi i64 [ 0, %for.body.lr.ph ], [ %inc17, %if.end.12 ]
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %5, i64 0, i64 %i.0207, !dbg !6244
  %7 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !6244, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %7, i64 0, metadata !1904, metadata !2664), !dbg !6247
  %8 = getelementptr inbounds %struct._object, %struct._object* %7, i64 1, i32 0, !dbg !6248
  %9 = load i64, i64* %8, align 8, !dbg !6248, !tbaa !2957
  %cmp10 = icmp eq i64 %9, 0, !dbg !6250
  br i1 %cmp10, label %empty.loopexit, label %if.end.12, !dbg !6251

if.end.12:                                        ; preds = %for.body
  %ob_item13 = getelementptr inbounds %struct._object, %struct._object* %7, i64 1, i32 1, !dbg !6252
  %arrayidx14 = bitcast %struct._typeobject** %ob_item13 to %struct._object**, !dbg !6252
  %10 = load %struct._object*, %struct._object** %arrayidx14, align 8, !dbg !6252, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %10, i64 0, metadata !1905, metadata !2664), !dbg !6253
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %10, i64 0, i32 0, !dbg !6254
  %11 = load i64, i64* %ob_refcnt, align 8, !dbg !6254, !tbaa !2694
  %inc = add i64 %11, 1, !dbg !6254
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !6254, !tbaa !2694
  %arrayidx16 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %6, i64 0, i64 %i.0207, !dbg !6246
  store %struct._object* %10, %struct._object** %arrayidx16, align 8, !dbg !6246, !tbaa !2681
  %inc17 = add nuw nsw i64 %i.0207, 1, !dbg !6255
  tail call void @llvm.dbg.value(metadata i64 %inc17, i64 0, metadata !1910, metadata !2664), !dbg !6239
  %cmp8 = icmp slt i64 %inc17, %3, !dbg !6240
  br i1 %cmp8, label %for.body, label %if.end.109.loopexit, !dbg !6243

if.else:                                          ; preds = %if.end
  %indices18 = getelementptr inbounds %struct.productobject, %struct.productobject* %lz, i64 0, i32 2, !dbg !6256
  %12 = load i64*, i64** %indices18, align 8, !dbg !6256, !tbaa !6192
  tail call void @llvm.dbg.value(metadata i64* %12, i64 0, metadata !1911, metadata !2664), !dbg !6257
  %ob_refcnt19 = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !6258
  %13 = load i64, i64* %ob_refcnt19, align 8, !dbg !6258, !tbaa !2694
  %cmp20 = icmp sgt i64 %13, 1, !dbg !6259
  br i1 %cmp20, label %if.then.21, label %if.end.44, !dbg !6260

if.then.21:                                       ; preds = %if.else
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1914, metadata !2664), !dbg !6261
  %call22 = tail call %struct._object* @PyTuple_New(i64 %3) #1, !dbg !6262
  tail call void @llvm.dbg.value(metadata %struct._object* %call22, i64 0, metadata !1908, metadata !2664), !dbg !6223
  %cmp23 = icmp eq %struct._object* %call22, null, !dbg !6263
  br i1 %cmp23, label %empty, label %if.end.25, !dbg !6265

if.end.25:                                        ; preds = %if.then.21
  store %struct._object* %call22, %struct._object** %result2, align 8, !dbg !6266, !tbaa !6180
  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !1910, metadata !2664), !dbg !6239
  %cmp28.211 = icmp sgt i64 %3, 0, !dbg !6267
  br i1 %cmp28.211, label %for.body.29.lr.ph, label %do.body, !dbg !6270

for.body.29.lr.ph:                                ; preds = %if.end.25
  %ob_item30 = getelementptr inbounds %struct._object, %struct._object* %1, i64 1, i32 1, !dbg !6271
  %14 = bitcast %struct._typeobject** %ob_item30 to [1 x %struct._object*]*, !dbg !6271
  %ob_item34 = getelementptr inbounds %struct._object, %struct._object* %call22, i64 1, i32 1, !dbg !6273
  %15 = bitcast %struct._typeobject** %ob_item34 to [1 x %struct._object*]*, !dbg !6273
  %xtraiter = and i64 %3, 1, !dbg !6270
  %lcmp.mod = icmp eq i64 %xtraiter, 0, !dbg !6270
  br i1 %lcmp.mod, label %for.body.29.lr.ph.split, label %for.body.29.prol, !dbg !6270

for.body.29.prol:                                 ; preds = %for.body.29.lr.ph
  %arrayidx31.prol = bitcast %struct._typeobject** %ob_item30 to %struct._object**, !dbg !6271
  %16 = load %struct._object*, %struct._object** %arrayidx31.prol, align 8, !dbg !6271, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %16, i64 0, metadata !1905, metadata !2664), !dbg !6253
  %ob_refcnt32.prol = getelementptr inbounds %struct._object, %struct._object* %16, i64 0, i32 0, !dbg !6274
  %17 = load i64, i64* %ob_refcnt32.prol, align 8, !dbg !6274, !tbaa !2694
  %inc33.prol = add i64 %17, 1, !dbg !6274
  store i64 %inc33.prol, i64* %ob_refcnt32.prol, align 8, !dbg !6274, !tbaa !2694
  %arrayidx35.prol = bitcast %struct._typeobject** %ob_item34 to %struct._object**, !dbg !6273
  store %struct._object* %16, %struct._object** %arrayidx35.prol, align 8, !dbg !6273, !tbaa !2681
  tail call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !1910, metadata !2664), !dbg !6239
  br label %for.body.29.lr.ph.split, !dbg !6270

for.body.29.lr.ph.split:                          ; preds = %for.body.29.lr.ph, %for.body.29.prol
  %i.1212.unr = phi i64 [ 0, %for.body.29.lr.ph ], [ 1, %for.body.29.prol ]
  %18 = icmp eq i64 %3, 1, !dbg !6270
  br i1 %18, label %do.body.loopexit, label %for.body.29.lr.ph.split.split, !dbg !6270

for.body.29.lr.ph.split.split:                    ; preds = %for.body.29.lr.ph.split
  br label %for.body.29, !dbg !6270

for.body.29:                                      ; preds = %for.body.29, %for.body.29.lr.ph.split.split
  %i.1212 = phi i64 [ %i.1212.unr, %for.body.29.lr.ph.split.split ], [ %inc37.1, %for.body.29 ]
  %arrayidx31 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %14, i64 0, i64 %i.1212, !dbg !6271
  %19 = load %struct._object*, %struct._object** %arrayidx31, align 8, !dbg !6271, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %19, i64 0, metadata !1905, metadata !2664), !dbg !6253
  %ob_refcnt32 = getelementptr inbounds %struct._object, %struct._object* %19, i64 0, i32 0, !dbg !6274
  %20 = load i64, i64* %ob_refcnt32, align 8, !dbg !6274, !tbaa !2694
  %inc33 = add i64 %20, 1, !dbg !6274
  store i64 %inc33, i64* %ob_refcnt32, align 8, !dbg !6274, !tbaa !2694
  %arrayidx35 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %15, i64 0, i64 %i.1212, !dbg !6273
  store %struct._object* %19, %struct._object** %arrayidx35, align 8, !dbg !6273, !tbaa !2681
  %inc37 = add nuw nsw i64 %i.1212, 1, !dbg !6275
  tail call void @llvm.dbg.value(metadata i64 %inc37, i64 0, metadata !1910, metadata !2664), !dbg !6239
  %arrayidx31.1 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %14, i64 0, i64 %inc37, !dbg !6271
  %21 = load %struct._object*, %struct._object** %arrayidx31.1, align 8, !dbg !6271, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %19, i64 0, metadata !1905, metadata !2664), !dbg !6253
  %ob_refcnt32.1 = getelementptr inbounds %struct._object, %struct._object* %21, i64 0, i32 0, !dbg !6274
  %22 = load i64, i64* %ob_refcnt32.1, align 8, !dbg !6274, !tbaa !2694
  %inc33.1 = add i64 %22, 1, !dbg !6274
  store i64 %inc33.1, i64* %ob_refcnt32.1, align 8, !dbg !6274, !tbaa !2694
  %arrayidx35.1 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %15, i64 0, i64 %inc37, !dbg !6273
  store %struct._object* %21, %struct._object** %arrayidx35.1, align 8, !dbg !6273, !tbaa !2681
  %inc37.1 = add nsw i64 %i.1212, 2, !dbg !6275
  tail call void @llvm.dbg.value(metadata i64 %inc37, i64 0, metadata !1910, metadata !2664), !dbg !6239
  %exitcond.1 = icmp eq i64 %inc37.1, %3, !dbg !6270
  br i1 %exitcond.1, label %do.body.loopexit.unr-lcssa, label %for.body.29, !dbg !6270

do.body.loopexit.unr-lcssa:                       ; preds = %for.body.29
  br label %do.body.loopexit, !dbg !6276

do.body.loopexit:                                 ; preds = %for.body.29.lr.ph.split, %do.body.loopexit.unr-lcssa
  br label %do.body, !dbg !6276

do.body:                                          ; preds = %do.body.loopexit, %if.end.25
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !1917, metadata !2664), !dbg !6276
  %23 = load i64, i64* %ob_refcnt19, align 8, !dbg !6278, !tbaa !2694
  %dec = add i64 %23, -1, !dbg !6278
  store i64 %dec, i64* %ob_refcnt19, align 8, !dbg !6278, !tbaa !2694
  %cmp40 = icmp eq i64 %dec, 0, !dbg !6278
  br i1 %cmp40, label %if.else.42, label %if.end.44, !dbg !6280

if.else.42:                                       ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !6281
  %24 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6281, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %24, i64 0, i32 4, !dbg !6281
  %25 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6281, !tbaa !2717
  tail call void %25(%struct._object* %1) #1, !dbg !6281
  br label %if.end.44

if.end.44:                                        ; preds = %if.else.42, %do.body, %if.else
  %result.0 = phi %struct._object* [ %1, %if.else ], [ %call22, %do.body ], [ %call22, %if.else.42 ]
  %i.2.208 = add i64 %3, -1, !dbg !6283
  %cmp46.209 = icmp sgt i64 %i.2.208, -1, !dbg !6284
  br i1 %cmp46.209, label %for.body.47.lr.ph, label %empty, !dbg !6285

for.body.47.lr.ph:                                ; preds = %if.end.44
  %ob_item48 = getelementptr inbounds %struct._object, %struct._object* %0, i64 1, i32 1, !dbg !6286
  %26 = bitcast %struct._typeobject** %ob_item48 to [1 x %struct._object*]*, !dbg !6286
  %ob_item61 = getelementptr inbounds %struct._object, %struct._object* %result.0, i64 1, i32 1, !dbg !6287
  %27 = bitcast %struct._typeobject** %ob_item61 to [1 x %struct._object*]*, !dbg !6287
  br label %for.body.47, !dbg !6285

for.body.47:                                      ; preds = %for.body.47.lr.ph, %for.cond.45.backedge
  %i.2210 = phi i64 [ %i.2.208, %for.body.47.lr.ph ], [ %i.2, %for.cond.45.backedge ]
  %arrayidx49 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %26, i64 0, i64 %i.2210, !dbg !6286
  %28 = load %struct._object*, %struct._object** %arrayidx49, align 8, !dbg !6286, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %28, i64 0, metadata !1904, metadata !2664), !dbg !6247
  %arrayidx50 = getelementptr i64, i64* %12, i64 %i.2210, !dbg !6288
  %29 = load i64, i64* %arrayidx50, align 8, !dbg !6289, !tbaa !2984
  %inc51 = add i64 %29, 1, !dbg !6289
  store i64 %inc51, i64* %arrayidx50, align 8, !dbg !6289, !tbaa !2984
  %30 = getelementptr inbounds %struct._object, %struct._object* %28, i64 1, i32 0, !dbg !6290
  %31 = load i64, i64* %30, align 8, !dbg !6290, !tbaa !2957
  %cmp54 = icmp eq i64 %inc51, %31, !dbg !6291
  br i1 %cmp54, label %if.then.55, label %if.else.77, !dbg !6292

if.then.55:                                       ; preds = %for.body.47
  store i64 0, i64* %arrayidx50, align 8, !dbg !6293, !tbaa !2984
  %ob_item57 = getelementptr inbounds %struct._object, %struct._object* %28, i64 1, i32 1, !dbg !6294
  %arrayidx58 = bitcast %struct._typeobject** %ob_item57 to %struct._object**, !dbg !6294
  %32 = load %struct._object*, %struct._object** %arrayidx58, align 8, !dbg !6294, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %32, i64 0, metadata !1905, metadata !2664), !dbg !6253
  %ob_refcnt59 = getelementptr inbounds %struct._object, %struct._object* %32, i64 0, i32 0, !dbg !6295
  %33 = load i64, i64* %ob_refcnt59, align 8, !dbg !6295, !tbaa !2694
  %inc60 = add i64 %33, 1, !dbg !6295
  store i64 %inc60, i64* %ob_refcnt59, align 8, !dbg !6295, !tbaa !2694
  %arrayidx62 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %27, i64 0, i64 %i.2210, !dbg !6287
  %34 = load %struct._object*, %struct._object** %arrayidx62, align 8, !dbg !6287, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %34, i64 0, metadata !1906, metadata !2664), !dbg !6296
  store %struct._object* %32, %struct._object** %arrayidx62, align 8, !dbg !6297, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %34, i64 0, metadata !1919, metadata !2664), !dbg !6298
  %ob_refcnt67 = getelementptr inbounds %struct._object, %struct._object* %34, i64 0, i32 0, !dbg !6300
  %35 = load i64, i64* %ob_refcnt67, align 8, !dbg !6300, !tbaa !2694
  %dec68 = add i64 %35, -1, !dbg !6300
  store i64 %dec68, i64* %ob_refcnt67, align 8, !dbg !6300, !tbaa !2694
  %cmp69 = icmp eq i64 %dec68, 0, !dbg !6300
  br i1 %cmp69, label %if.else.71, label %for.cond.45.backedge, !dbg !6302

for.cond.45.backedge:                             ; preds = %if.then.55, %if.else.71
  %i.2 = add i64 %i.2210, -1, !dbg !6283
  %cmp46 = icmp sgt i64 %i.2, -1, !dbg !6284
  br i1 %cmp46, label %for.body.47, label %empty.loopexit225, !dbg !6285

if.else.71:                                       ; preds = %if.then.55
  %ob_type72 = getelementptr inbounds %struct._object, %struct._object* %34, i64 0, i32 1, !dbg !6303
  %36 = load %struct._typeobject*, %struct._typeobject** %ob_type72, align 8, !dbg !6303, !tbaa !2667
  %tp_dealloc73 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %36, i64 0, i32 4, !dbg !6303
  %37 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc73, align 8, !dbg !6303, !tbaa !2717
  tail call void %37(%struct._object* %34) #1, !dbg !6303
  br label %for.cond.45.backedge

if.else.77:                                       ; preds = %for.body.47
  %inc51.lcssa = phi i64 [ %inc51, %for.body.47 ]
  %.lcssa = phi %struct._object* [ %28, %for.body.47 ]
  %i.2210.lcssa = phi i64 [ %i.2210, %for.body.47 ]
  %ob_item79 = getelementptr inbounds %struct._object, %struct._object* %.lcssa, i64 1, i32 1, !dbg !6305
  %38 = bitcast %struct._typeobject** %ob_item79 to [1 x %struct._object*]*, !dbg !6305
  %arrayidx80 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %38, i64 0, i64 %inc51.lcssa, !dbg !6305
  %39 = load %struct._object*, %struct._object** %arrayidx80, align 8, !dbg !6305, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %39, i64 0, metadata !1905, metadata !2664), !dbg !6253
  %ob_refcnt81 = getelementptr inbounds %struct._object, %struct._object* %39, i64 0, i32 0, !dbg !6306
  %40 = load i64, i64* %ob_refcnt81, align 8, !dbg !6306, !tbaa !2694
  %inc82 = add i64 %40, 1, !dbg !6306
  store i64 %inc82, i64* %ob_refcnt81, align 8, !dbg !6306, !tbaa !2694
  %arrayidx84 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %27, i64 0, i64 %i.2210.lcssa, !dbg !6307
  %41 = load %struct._object*, %struct._object** %arrayidx84, align 8, !dbg !6307, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %41, i64 0, metadata !1906, metadata !2664), !dbg !6296
  store %struct._object* %39, %struct._object** %arrayidx84, align 8, !dbg !6308, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %41, i64 0, metadata !1926, metadata !2664), !dbg !6309
  %ob_refcnt89 = getelementptr inbounds %struct._object, %struct._object* %41, i64 0, i32 0, !dbg !6311
  %42 = load i64, i64* %ob_refcnt89, align 8, !dbg !6311, !tbaa !2694
  %dec90 = add i64 %42, -1, !dbg !6311
  store i64 %dec90, i64* %ob_refcnt89, align 8, !dbg !6311, !tbaa !2694
  %cmp91 = icmp eq i64 %dec90, 0, !dbg !6311
  br i1 %cmp91, label %if.else.93, label %if.end.109, !dbg !6313

if.else.93:                                       ; preds = %if.else.77
  %ob_type94 = getelementptr inbounds %struct._object, %struct._object* %41, i64 0, i32 1, !dbg !6314
  %43 = load %struct._typeobject*, %struct._typeobject** %ob_type94, align 8, !dbg !6314, !tbaa !2667
  %tp_dealloc95 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %43, i64 0, i32 4, !dbg !6314
  %44 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc95, align 8, !dbg !6314, !tbaa !2717
  tail call void %44(%struct._object* %41) #1, !dbg !6314
  br label %if.end.109

if.end.109.loopexit:                              ; preds = %if.end.12
  br label %if.end.109, !dbg !6316

if.end.109:                                       ; preds = %if.end.109.loopexit, %if.end.6, %if.else.93, %if.else.77
  %result.2 = phi %struct._object* [ %result.0, %if.else.77 ], [ %result.0, %if.else.93 ], [ %call, %if.end.6 ], [ %call, %if.end.109.loopexit ]
  %ob_refcnt110 = getelementptr inbounds %struct._object, %struct._object* %result.2, i64 0, i32 0, !dbg !6316
  %45 = load i64, i64* %ob_refcnt110, align 8, !dbg !6316, !tbaa !2694
  %inc111 = add i64 %45, 1, !dbg !6316
  store i64 %inc111, i64* %ob_refcnt110, align 8, !dbg !6316, !tbaa !2694
  br label %cleanup.113, !dbg !6317

empty.loopexit:                                   ; preds = %for.body
  br label %empty, !dbg !6318

empty.loopexit225:                                ; preds = %for.cond.45.backedge
  br label %empty, !dbg !6318

empty:                                            ; preds = %empty.loopexit225, %empty.loopexit, %if.end.44, %if.then.21, %if.then.3
  store i32 1, i32* %stopped, align 4, !dbg !6318, !tbaa !6228
  br label %cleanup.113, !dbg !6319

cleanup.113:                                      ; preds = %entry, %empty, %if.end.109
  %retval.0 = phi %struct._object* [ null, %empty ], [ %result.2, %if.end.109 ], [ null, %entry ]
  ret %struct._object* %retval.0, !dbg !6320
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @product_new(%struct._typeobject* %type, %struct._object* nocapture readonly %args, %struct._object* %kwds) #0 {
entry:
  %repeat = alloca i64, align 8
  %kwlist = alloca [2 x i8*], align 16
  tail call void @llvm.dbg.value(metadata %struct._typeobject* %type, i64 0, metadata !1980, metadata !2664), !dbg !6321
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1981, metadata !2664), !dbg !6322
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !1982, metadata !2664), !dbg !6323
  %0 = bitcast i64* %repeat to i8*, !dbg !6324
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6324
  tail call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !1986, metadata !2664), !dbg !6325
  store i64 1, i64* %repeat, align 8, !dbg !6325, !tbaa !2984
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1987, metadata !2664), !dbg !6326
  tail call void @llvm.dbg.value(metadata i64* null, i64 0, metadata !1988, metadata !2664), !dbg !6327
  %cmp = icmp eq %struct._object* %kwds, null, !dbg !6328
  br i1 %cmp, label %cond.false, label %if.then, !dbg !6329

if.then:                                          ; preds = %entry
  %1 = bitcast [2 x i8*]* %kwlist to i8*, !dbg !6330
  call void @llvm.lifetime.start(i64 16, i8* %1) #1, !dbg !6330
  tail call void @llvm.dbg.declare(metadata [2 x i8*]* %kwlist, metadata !1990, metadata !2664), !dbg !6331
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* bitcast ([2 x i8*]* @product_new.kwlist to i8*), i64 16, i32 16, i1 false), !dbg !6331
  %call = tail call %struct._object* @PyTuple_New(i64 0) #1, !dbg !6332
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1996, metadata !2664), !dbg !6333
  %cmp1 = icmp eq %struct._object* %call, null, !dbg !6334
  br i1 %cmp1, label %cleanup.90.critedge156, label %if.end, !dbg !6336

if.end:                                           ; preds = %if.then
  %arraydecay = getelementptr inbounds [2 x i8*], [2 x i8*]* %kwlist, i64 0, i64 0, !dbg !6337
  tail call void @llvm.dbg.value(metadata i64* %repeat, i64 0, metadata !1986, metadata !2664), !dbg !6325
  %call3 = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %call, %struct._object* %kwds, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.80, i64 0, i64 0), i8** %arraydecay, i64* nonnull %repeat) #1, !dbg !6338
  %tobool = icmp eq i32 %call3, 0, !dbg !6338
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 0, !dbg !6339
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !6339, !tbaa !2694
  %dec = add i64 %2, -1, !dbg !6339
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6339, !tbaa !2694
  %cmp5 = icmp eq i64 %dec, 0, !dbg !6339
  br i1 %tobool, label %do.body, label %do.body.9, !dbg !6341

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1997, metadata !2664), !dbg !6342
  br i1 %cmp5, label %if.else, label %cleanup.90.critedge157, !dbg !6344

if.else:                                          ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 1, !dbg !6345
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6345, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 4, !dbg !6345
  %4 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6345, !tbaa !2717
  call void %4(%struct._object* %call) #1, !dbg !6345
  call void @llvm.lifetime.end(i64 16, i8* %1) #1, !dbg !6347
  br label %cleanup.90

do.body.9:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !2001, metadata !2664), !dbg !6349
  br i1 %cmp5, label %if.else.15, label %if.end.18, !dbg !6351

if.else.15:                                       ; preds = %do.body.9
  %ob_type16 = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 1, !dbg !6352
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type16, align 8, !dbg !6352, !tbaa !2667
  %tp_dealloc17 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i64 0, i32 4, !dbg !6352
  %6 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc17, align 8, !dbg !6352, !tbaa !2717
  call void %6(%struct._object* %call) #1, !dbg !6352
  br label %if.end.18

if.end.18:                                        ; preds = %do.body.9, %if.else.15
  call void @llvm.dbg.value(metadata i64* %repeat, i64 0, metadata !1986, metadata !2664), !dbg !6325
  %7 = load i64, i64* %repeat, align 8, !dbg !6355, !tbaa !2984
  %cmp21 = icmp slt i64 %7, 0, !dbg !6356
  br i1 %cmp21, label %if.then.22, label %if.end.25, !dbg !6358

if.then.22:                                       ; preds = %if.end.18
  %8 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6359, !tbaa !2681
  call void @PyErr_SetString(%struct._object* %8, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.81, i64 0, i64 0)) #1, !dbg !6361
  call void @llvm.lifetime.end(i64 16, i8* %1) #1, !dbg !6347
  br label %cleanup.90

if.end.25:                                        ; preds = %if.end.18
  call void @llvm.lifetime.end(i64 16, i8* %1) #1, !dbg !6347
  call void @llvm.dbg.value(metadata i64* %repeat, i64 0, metadata !1986, metadata !2664), !dbg !6325
  %cmp26 = icmp eq i64 %7, 0, !dbg !6362
  br i1 %cmp26, label %cond.end, label %cond.false, !dbg !6363

cond.false:                                       ; preds = %entry, %if.end.25
  %9 = phi i64 [ 1, %entry ], [ %7, %if.end.25 ]
  %10 = getelementptr inbounds %struct._object, %struct._object* %args, i64 1, i32 0, !dbg !6364
  %11 = load i64, i64* %10, align 8, !dbg !6364, !tbaa !2957
  br label %cond.end, !dbg !6363

cond.end:                                         ; preds = %if.end.25, %cond.false
  %12 = phi i64 [ %9, %cond.false ], [ 0, %if.end.25 ], !dbg !6366
  %cond = phi i64 [ %11, %cond.false ], [ 0, %if.end.25 ], !dbg !6363
  call void @llvm.dbg.value(metadata i64 %cond, i64 0, metadata !1984, metadata !2664), !dbg !6367
  call void @llvm.dbg.value(metadata i64* %repeat, i64 0, metadata !1986, metadata !2664), !dbg !6325
  %mul = mul i64 %12, %cond, !dbg !6368
  call void @llvm.dbg.value(metadata i64 %mul, i64 0, metadata !1985, metadata !2664), !dbg !6369
  %mul27 = shl i64 %mul, 3, !dbg !6370
  %call28 = call i8* @PyMem_Malloc(i64 %mul27) #1, !dbg !6371
  %13 = bitcast i8* %call28 to i64*, !dbg !6371
  call void @llvm.dbg.value(metadata i64* %13, i64 0, metadata !1988, metadata !2664), !dbg !6327
  %cmp29 = icmp eq i8* %call28, null, !dbg !6372
  br i1 %cmp29, label %do.body.72.thread, label %if.end.32, !dbg !6374

do.body.72.thread:                                ; preds = %cond.end
  %call31 = call %struct._object* @PyErr_NoMemory() #1, !dbg !6375
  br label %cleanup.90, !dbg !6377

if.end.32:                                        ; preds = %cond.end
  %call33 = call %struct._object* @PyTuple_New(i64 %mul) #1, !dbg !6378
  call void @llvm.dbg.value(metadata %struct._object* %call33, i64 0, metadata !1987, metadata !2664), !dbg !6326
  %cmp34 = icmp eq %struct._object* %call33, null, !dbg !6379
  br i1 %cmp34, label %do.body.72.thread165, label %for.cond.preheader, !dbg !6381

for.cond.preheader:                               ; preds = %if.end.32
  %cmp37.170 = icmp sgt i64 %cond, 0, !dbg !6382
  br i1 %cmp37.170, label %for.body.lr.ph, label %for.cond.49.preheader, !dbg !6383

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %ob_item = getelementptr inbounds %struct._object, %struct._object* %args, i64 1, i32 1, !dbg !6384
  %14 = bitcast %struct._typeobject** %ob_item to [1 x %struct._object*]*, !dbg !6384
  %ob_item42 = getelementptr inbounds %struct._object, %struct._object* %call33, i64 1, i32 1, !dbg !6385
  %15 = bitcast %struct._typeobject** %ob_item42 to [1 x %struct._object*]*, !dbg !6385
  br label %for.body, !dbg !6383

do.body.72.thread165:                             ; preds = %if.end.32
  call void @PyMem_Free(i8* %call28) #1, !dbg !6386
  br label %cleanup.90, !dbg !6377

for.cond.49.preheader.loopexit:                   ; preds = %for.inc
  %inc.lcssa = phi i64 [ %inc, %for.inc ]
  br label %for.cond.49.preheader, !dbg !6388

for.cond.49.preheader:                            ; preds = %for.cond.49.preheader.loopexit, %for.cond.preheader
  %i.0.lcssa = phi i64 [ 0, %for.cond.preheader ], [ %inc.lcssa, %for.cond.49.preheader.loopexit ]
  %cmp50.168 = icmp slt i64 %i.0.lcssa, %mul, !dbg !6388
  br i1 %cmp50.168, label %for.body.51.lr.ph, label %for.end.62, !dbg !6389

for.body.51.lr.ph:                                ; preds = %for.cond.49.preheader
  %ob_item53 = getelementptr inbounds %struct._object, %struct._object* %call33, i64 1, i32 1, !dbg !6390
  %16 = bitcast %struct._typeobject** %ob_item53 to [1 x %struct._object*]*, !dbg !6390
  %17 = mul i64 %12, %cond, !dbg !6389
  %18 = sub i64 %17, %i.0.lcssa, !dbg !6389
  %19 = add i64 %17, -1, !dbg !6389
  %xtraiter = and i64 %18, 1, !dbg !6389
  %lcmp.mod = icmp eq i64 %xtraiter, 0, !dbg !6389
  br i1 %lcmp.mod, label %for.body.51.lr.ph.split, label %for.body.51.prol, !dbg !6389

for.body.51.prol:                                 ; preds = %for.body.51.lr.ph
  %sub.prol = sub i64 %i.0.lcssa, %cond, !dbg !6390
  %arrayidx54.prol = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %16, i64 0, i64 %sub.prol, !dbg !6390
  %20 = load %struct._object*, %struct._object** %arrayidx54.prol, align 8, !dbg !6390, !tbaa !2681
  call void @llvm.dbg.value(metadata %struct._object* %20, i64 0, metadata !2008, metadata !2664), !dbg !6391
  %ob_refcnt55.prol = getelementptr inbounds %struct._object, %struct._object* %20, i64 0, i32 0, !dbg !6392
  %21 = load i64, i64* %ob_refcnt55.prol, align 8, !dbg !6392, !tbaa !2694
  %inc56.prol = add i64 %21, 1, !dbg !6392
  store i64 %inc56.prol, i64* %ob_refcnt55.prol, align 8, !dbg !6392, !tbaa !2694
  %arrayidx58.prol = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %16, i64 0, i64 %i.0.lcssa, !dbg !6393
  store %struct._object* %20, %struct._object** %arrayidx58.prol, align 8, !dbg !6393, !tbaa !2681
  %arrayidx59.prol = getelementptr i64, i64* %13, i64 %i.0.lcssa, !dbg !6394
  store i64 0, i64* %arrayidx59.prol, align 8, !dbg !6395, !tbaa !2984
  %inc61.prol = add nsw i64 %i.0.lcssa, 1, !dbg !6396
  call void @llvm.dbg.value(metadata i64 %inc61.prol, i64 0, metadata !1989, metadata !2664), !dbg !6397
  br label %for.body.51.lr.ph.split, !dbg !6389

for.body.51.lr.ph.split:                          ; preds = %for.body.51.lr.ph, %for.body.51.prol
  %i.1169.unr = phi i64 [ %i.0.lcssa, %for.body.51.lr.ph ], [ %inc61.prol, %for.body.51.prol ]
  %22 = icmp eq i64 %19, %i.0.lcssa, !dbg !6389
  br i1 %22, label %for.end.62.loopexit, label %for.body.51.lr.ph.split.split, !dbg !6389

for.body.51.lr.ph.split.split:                    ; preds = %for.body.51.lr.ph.split
  br label %for.body.51, !dbg !6389

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %i.0171 = phi i64 [ 0, %for.body.lr.ph ], [ %inc, %for.inc ]
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %14, i64 0, i64 %i.0171, !dbg !6384
  %23 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !6384, !tbaa !2681
  call void @llvm.dbg.value(metadata %struct._object* %23, i64 0, metadata !2003, metadata !2664), !dbg !6398
  %call38 = call %struct._object* @PySequence_Tuple(%struct._object* %23) #1, !dbg !6399
  call void @llvm.dbg.value(metadata %struct._object* %call38, i64 0, metadata !2007, metadata !2664), !dbg !6400
  %cmp39 = icmp eq %struct._object* %call38, null, !dbg !6401
  br i1 %cmp39, label %do.body.75.loopexit, label %for.inc, !dbg !6403

for.inc:                                          ; preds = %for.body
  %arrayidx43 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %15, i64 0, i64 %i.0171, !dbg !6385
  store %struct._object* %call38, %struct._object** %arrayidx43, align 8, !dbg !6385, !tbaa !2681
  %arrayidx44 = getelementptr i64, i64* %13, i64 %i.0171, !dbg !6404
  store i64 0, i64* %arrayidx44, align 8, !dbg !6405, !tbaa !2984
  %inc = add nuw nsw i64 %i.0171, 1, !dbg !6406
  call void @llvm.dbg.value(metadata i64 %inc, i64 0, metadata !1989, metadata !2664), !dbg !6397
  %cmp37 = icmp slt i64 %inc, %cond, !dbg !6382
  br i1 %cmp37, label %for.body, label %for.cond.49.preheader.loopexit, !dbg !6383

for.body.51:                                      ; preds = %for.body.51, %for.body.51.lr.ph.split.split
  %i.1169 = phi i64 [ %i.1169.unr, %for.body.51.lr.ph.split.split ], [ %inc61.1, %for.body.51 ]
  %sub = sub i64 %i.1169, %cond, !dbg !6390
  %arrayidx54 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %16, i64 0, i64 %sub, !dbg !6390
  %24 = load %struct._object*, %struct._object** %arrayidx54, align 8, !dbg !6390, !tbaa !2681
  call void @llvm.dbg.value(metadata %struct._object* %24, i64 0, metadata !2008, metadata !2664), !dbg !6391
  %ob_refcnt55 = getelementptr inbounds %struct._object, %struct._object* %24, i64 0, i32 0, !dbg !6392
  %25 = load i64, i64* %ob_refcnt55, align 8, !dbg !6392, !tbaa !2694
  %inc56 = add i64 %25, 1, !dbg !6392
  store i64 %inc56, i64* %ob_refcnt55, align 8, !dbg !6392, !tbaa !2694
  %arrayidx58 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %16, i64 0, i64 %i.1169, !dbg !6393
  store %struct._object* %24, %struct._object** %arrayidx58, align 8, !dbg !6393, !tbaa !2681
  %arrayidx59 = getelementptr i64, i64* %13, i64 %i.1169, !dbg !6394
  store i64 0, i64* %arrayidx59, align 8, !dbg !6395, !tbaa !2984
  %inc61 = add nsw i64 %i.1169, 1, !dbg !6396
  call void @llvm.dbg.value(metadata i64 %inc61, i64 0, metadata !1989, metadata !2664), !dbg !6397
  %sub.1 = sub i64 %inc61, %cond, !dbg !6390
  %arrayidx54.1 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %16, i64 0, i64 %sub.1, !dbg !6390
  %26 = load %struct._object*, %struct._object** %arrayidx54.1, align 8, !dbg !6390, !tbaa !2681
  call void @llvm.dbg.value(metadata %struct._object* %24, i64 0, metadata !2008, metadata !2664), !dbg !6391
  %ob_refcnt55.1 = getelementptr inbounds %struct._object, %struct._object* %26, i64 0, i32 0, !dbg !6392
  %27 = load i64, i64* %ob_refcnt55.1, align 8, !dbg !6392, !tbaa !2694
  %inc56.1 = add i64 %27, 1, !dbg !6392
  store i64 %inc56.1, i64* %ob_refcnt55.1, align 8, !dbg !6392, !tbaa !2694
  %arrayidx58.1 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %16, i64 0, i64 %inc61, !dbg !6393
  store %struct._object* %26, %struct._object** %arrayidx58.1, align 8, !dbg !6393, !tbaa !2681
  %arrayidx59.1 = getelementptr i64, i64* %13, i64 %inc61, !dbg !6394
  store i64 0, i64* %arrayidx59.1, align 8, !dbg !6395, !tbaa !2984
  %inc61.1 = add nsw i64 %i.1169, 2, !dbg !6396
  call void @llvm.dbg.value(metadata i64 %inc61, i64 0, metadata !1989, metadata !2664), !dbg !6397
  %exitcond.1 = icmp eq i64 %inc61.1, %mul, !dbg !6389
  br i1 %exitcond.1, label %for.end.62.loopexit.unr-lcssa, label %for.body.51, !dbg !6389

for.end.62.loopexit.unr-lcssa:                    ; preds = %for.body.51
  br label %for.end.62.loopexit, !dbg !6407

for.end.62.loopexit:                              ; preds = %for.body.51.lr.ph.split, %for.end.62.loopexit.unr-lcssa
  br label %for.end.62, !dbg !6407

for.end.62:                                       ; preds = %for.end.62.loopexit, %for.cond.49.preheader
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %type, i64 0, i32 36, !dbg !6407
  %28 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !6407, !tbaa !2835
  %call63 = call %struct._object* %28(%struct._typeobject* %type, i64 0) #1, !dbg !6408
  %cmp64 = icmp eq %struct._object* %call63, null, !dbg !6409
  br i1 %cmp64, label %do.body.75, label %if.end.66, !dbg !6411

if.end.66:                                        ; preds = %for.end.62
  %pools67 = getelementptr inbounds %struct._object, %struct._object* %call63, i64 1, !dbg !6412
  %29 = bitcast %struct._object* %pools67 to %struct._object**, !dbg !6412
  store %struct._object* %call33, %struct._object** %29, align 8, !dbg !6413, !tbaa !6167
  %indices68 = getelementptr inbounds %struct._object, %struct._object* %call63, i64 1, i32 1, !dbg !6414
  %30 = bitcast %struct._typeobject** %indices68 to i8**, !dbg !6415
  store i8* %call28, i8** %30, align 8, !dbg !6415, !tbaa !6192
  %result = getelementptr inbounds %struct._object, %struct._object* %call63, i64 2, !dbg !6416
  %31 = bitcast %struct._object* %result to %struct._object**, !dbg !6416
  store %struct._object* null, %struct._object** %31, align 8, !dbg !6417, !tbaa !6180
  %stopped = getelementptr inbounds %struct._object, %struct._object* %call63, i64 2, i32 1, !dbg !6418
  %32 = bitcast %struct._typeobject** %stopped to i32*, !dbg !6418
  store i32 0, i32* %32, align 4, !dbg !6419, !tbaa !6228
  br label %cleanup.90, !dbg !6420

do.body.75.loopexit:                              ; preds = %for.body
  br label %do.body.75, !dbg !6386

do.body.75:                                       ; preds = %do.body.75.loopexit, %for.end.62
  call void @PyMem_Free(i8* %call28) #1, !dbg !6386
  %ob_refcnt77 = getelementptr inbounds %struct._object, %struct._object* %call33, i64 0, i32 0, !dbg !6421
  %33 = load i64, i64* %ob_refcnt77, align 8, !dbg !6421, !tbaa !2694
  %dec78 = add i64 %33, -1, !dbg !6421
  store i64 %dec78, i64* %ob_refcnt77, align 8, !dbg !6421, !tbaa !2694
  %cmp79 = icmp eq i64 %dec78, 0, !dbg !6421
  br i1 %cmp79, label %if.else.81, label %cleanup.90, !dbg !6423

if.else.81:                                       ; preds = %do.body.75
  %ob_type82 = getelementptr inbounds %struct._object, %struct._object* %call33, i64 0, i32 1, !dbg !6424
  %34 = load %struct._typeobject*, %struct._typeobject** %ob_type82, align 8, !dbg !6424, !tbaa !2667
  %tp_dealloc83 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %34, i64 0, i32 4, !dbg !6424
  %35 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc83, align 8, !dbg !6424, !tbaa !2717
  call void %35(%struct._object* %call33) #1, !dbg !6424
  br label %cleanup.90

cleanup.90.critedge156:                           ; preds = %if.then
  call void @llvm.lifetime.end(i64 16, i8* %1) #1, !dbg !6347
  br label %cleanup.90

cleanup.90.critedge157:                           ; preds = %do.body
  call void @llvm.lifetime.end(i64 16, i8* %1) #1, !dbg !6347
  br label %cleanup.90

cleanup.90:                                       ; preds = %do.body.72.thread165, %do.body.72.thread, %do.body.75, %if.else.81, %if.else, %cleanup.90.critedge157, %cleanup.90.critedge156, %if.then.22, %if.end.66
  %retval.2 = phi %struct._object* [ %call63, %if.end.66 ], [ null, %if.then.22 ], [ null, %cleanup.90.critedge156 ], [ null, %cleanup.90.critedge157 ], [ null, %if.else ], [ null, %if.else.81 ], [ null, %do.body.75 ], [ null, %do.body.72.thread ], [ null, %do.body.72.thread165 ]
  call void @llvm.lifetime.end(i64 8, i8* %0) #1, !dbg !6426
  ret %struct._object* %retval.2, !dbg !6426
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @product_reduce(%struct.productobject* nocapture readonly %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.productobject* %lz, i64 0, metadata !1931, metadata !2664), !dbg !6427
  %stopped = getelementptr inbounds %struct.productobject, %struct.productobject* %lz, i64 0, i32 4, !dbg !6428
  %0 = load i32, i32* %stopped, align 4, !dbg !6428, !tbaa !6228
  %tobool = icmp eq i32 %0, 0, !dbg !6429
  br i1 %tobool, label %if.else, label %if.then, !dbg !6430

if.then:                                          ; preds = %entry
  %ob_type = getelementptr inbounds %struct.productobject, %struct.productobject* %lz, i64 0, i32 0, i32 1, !dbg !6431
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6431, !tbaa !2667
  %call = tail call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.76, i64 0, i64 0), %struct._typeobject* %1) #1, !dbg !6433
  br label %return, !dbg !6434

if.else:                                          ; preds = %entry
  %result = getelementptr inbounds %struct.productobject, %struct.productobject* %lz, i64 0, i32 3, !dbg !6435
  %2 = load %struct._object*, %struct._object** %result, align 8, !dbg !6435, !tbaa !6180
  %cmp = icmp eq %struct._object* %2, null, !dbg !6436
  br i1 %cmp, label %if.then.1, label %if.else.4, !dbg !6437

if.then.1:                                        ; preds = %if.else
  %ob_type2 = getelementptr inbounds %struct.productobject, %struct.productobject* %lz, i64 0, i32 0, i32 1, !dbg !6438
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type2, align 8, !dbg !6438, !tbaa !2667
  %pools = getelementptr inbounds %struct.productobject, %struct.productobject* %lz, i64 0, i32 1, !dbg !6440
  %4 = load %struct._object*, %struct._object** %pools, align 8, !dbg !6440, !tbaa !6167
  %call3 = tail call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.77, i64 0, i64 0), %struct._typeobject* %3, %struct._object* %4) #1, !dbg !6441
  br label %return, !dbg !6442

if.else.4:                                        ; preds = %if.else
  %pools5 = getelementptr inbounds %struct.productobject, %struct.productobject* %lz, i64 0, i32 1, !dbg !6443
  %5 = bitcast %struct._object** %pools5 to %struct.PyVarObject**, !dbg !6443
  %6 = load %struct.PyVarObject*, %struct.PyVarObject** %5, align 8, !dbg !6443, !tbaa !6167
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %6, i64 0, i32 1, !dbg !6443
  %7 = load i64, i64* %ob_size, align 8, !dbg !6443, !tbaa !2957
  tail call void @llvm.dbg.value(metadata i64 %7, i64 0, metadata !1936, metadata !2664), !dbg !6444
  %call6 = tail call %struct._object* @PyTuple_New(i64 %7) #1, !dbg !6445
  tail call void @llvm.dbg.value(metadata %struct._object* %call6, i64 0, metadata !1932, metadata !2664), !dbg !6446
  %cmp7 = icmp eq %struct._object* %call6, null, !dbg !6447
  br i1 %cmp7, label %return, label %for.cond.preheader, !dbg !6449

for.cond.preheader:                               ; preds = %if.else.4
  %cmp9.49 = icmp sgt i64 %7, 0, !dbg !6450
  br i1 %cmp9.49, label %for.body.lr.ph, label %for.end, !dbg !6451

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %indices10 = getelementptr inbounds %struct.productobject, %struct.productobject* %lz, i64 0, i32 2, !dbg !6452
  %ob_item = getelementptr inbounds %struct._object, %struct._object* %call6, i64 1, i32 1, !dbg !6453
  %8 = bitcast %struct._typeobject** %ob_item to [1 x %struct._object*]*, !dbg !6453
  br label %for.body, !dbg !6451

for.body:                                         ; preds = %for.body.lr.ph, %if.end.19
  %i.050 = phi i64 [ 0, %for.body.lr.ph ], [ %inc, %if.end.19 ]
  %9 = load i64*, i64** %indices10, align 8, !dbg !6452, !tbaa !6192
  %arrayidx = getelementptr i64, i64* %9, i64 %i.050, !dbg !6454
  %10 = load i64, i64* %arrayidx, align 8, !dbg !6454, !tbaa !2984
  %call11 = tail call %struct._object* @PyLong_FromSsize_t(i64 %10) #1, !dbg !6455
  tail call void @llvm.dbg.value(metadata %struct._object* %call11, i64 0, metadata !1938, metadata !2664), !dbg !6456
  %tobool12 = icmp eq %struct._object* %call11, null, !dbg !6457
  br i1 %tobool12, label %do.body, label %if.end.19, !dbg !6458

do.body:                                          ; preds = %for.body
  tail call void @llvm.dbg.value(metadata %struct._object* %call6, i64 0, metadata !1942, metadata !2664), !dbg !6459
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call6, i64 0, i32 0, !dbg !6461
  %11 = load i64, i64* %ob_refcnt, align 8, !dbg !6461, !tbaa !2694
  %dec = add i64 %11, -1, !dbg !6461
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6461, !tbaa !2694
  %cmp14 = icmp eq i64 %dec, 0, !dbg !6461
  br i1 %cmp14, label %if.else.16, label %return, !dbg !6463

if.else.16:                                       ; preds = %do.body
  %ob_type17 = getelementptr inbounds %struct._object, %struct._object* %call6, i64 0, i32 1, !dbg !6464
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type17, align 8, !dbg !6464, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i64 0, i32 4, !dbg !6464
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6464, !tbaa !2717
  tail call void %13(%struct._object* %call6) #1, !dbg !6464
  br label %return

if.end.19:                                        ; preds = %for.body
  %arrayidx20 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %8, i64 0, i64 %i.050, !dbg !6453
  store %struct._object* %call11, %struct._object** %arrayidx20, align 8, !dbg !6453, !tbaa !2681
  %inc = add nuw nsw i64 %i.050, 1, !dbg !6466
  tail call void @llvm.dbg.value(metadata i64 %inc, i64 0, metadata !1937, metadata !2664), !dbg !6467
  %cmp9 = icmp slt i64 %inc, %7, !dbg !6450
  br i1 %cmp9, label %for.body, label %for.end.loopexit, !dbg !6451

for.end.loopexit:                                 ; preds = %if.end.19
  br label %for.end, !dbg !6468

for.end:                                          ; preds = %for.end.loopexit, %for.cond.preheader
  %ob_type21 = getelementptr inbounds %struct.productobject, %struct.productobject* %lz, i64 0, i32 0, i32 1, !dbg !6468
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type21, align 8, !dbg !6468, !tbaa !2667
  %15 = load %struct._object*, %struct._object** %pools5, align 8, !dbg !6469, !tbaa !6167
  %call23 = tail call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.78, i64 0, i64 0), %struct._typeobject* %14, %struct._object* %15, %struct._object* %call6) #1, !dbg !6470
  br label %return, !dbg !6471

return:                                           ; preds = %for.end, %if.else.4, %if.else.16, %do.body, %if.then.1, %if.then
  %retval.3 = phi %struct._object* [ %call, %if.then ], [ %call3, %if.then.1 ], [ %call23, %for.end ], [ null, %if.else.4 ], [ null, %if.else.16 ], [ null, %do.body ]
  ret %struct._object* %retval.3, !dbg !6472
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @product_setstate(%struct.productobject* nocapture %lz, %struct._object* nocapture readonly %state) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.productobject* %lz, i64 0, metadata !1950, metadata !2664), !dbg !6473
  tail call void @llvm.dbg.value(metadata %struct._object* %state, i64 0, metadata !1951, metadata !2664), !dbg !6474
  %pools = getelementptr inbounds %struct.productobject, %struct.productobject* %lz, i64 0, i32 1, !dbg !6475
  %0 = bitcast %struct._object** %pools to %struct.PyVarObject**, !dbg !6475
  %1 = load %struct.PyVarObject*, %struct.PyVarObject** %0, align 8, !dbg !6475, !tbaa !6167
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1, i64 0, i32 1, !dbg !6475
  %2 = load i64, i64* %ob_size, align 8, !dbg !6475, !tbaa !2957
  tail call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !1953, metadata !2664), !dbg !6476
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %state, i64 0, i32 1, !dbg !6477
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6477, !tbaa !2667
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 19, !dbg !6477
  %4 = load i64, i64* %tp_flags, align 8, !dbg !6477, !tbaa !3192
  %and = and i64 %4, 67108864, !dbg !6477
  %cmp = icmp eq i64 %and, 0, !dbg !6477
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6479

lor.lhs.false:                                    ; preds = %entry
  %5 = getelementptr inbounds %struct._object, %struct._object* %state, i64 1, i32 0, !dbg !6480
  %6 = load i64, i64* %5, align 8, !dbg !6480, !tbaa !2957
  %cmp2 = icmp eq i64 %6, %2, !dbg !6482
  br i1 %cmp2, label %for.cond.preheader, label %if.then, !dbg !6483

for.cond.preheader:                               ; preds = %lor.lhs.false
  %cmp3.97 = icmp sgt i64 %2, 0, !dbg !6484
  br i1 %cmp3.97, label %for.body.lr.ph, label %for.end, !dbg !6485

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %ob_item = getelementptr inbounds %struct._object, %struct._object* %state, i64 1, i32 1, !dbg !6486
  %7 = bitcast %struct._typeobject** %ob_item to [1 x %struct._object*]*, !dbg !6486
  %indices = getelementptr inbounds %struct.productobject, %struct.productobject* %lz, i64 0, i32 2, !dbg !6487
  %sub = add i64 %2, -1, !dbg !6488
  br label %for.body, !dbg !6485

if.then:                                          ; preds = %lor.lhs.false, %entry
  %8 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6491, !tbaa !2681
  tail call void @PyErr_SetString(%struct._object* %8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0)) #1, !dbg !6493
  br label %cleanup.53, !dbg !6494

for.body:                                         ; preds = %for.body.lr.ph, %if.end.14
  %i.098 = phi i64 [ 0, %for.body.lr.ph ], [ %inc, %if.end.14 ]
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %7, i64 0, i64 %i.098, !dbg !6486
  %9 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !6486, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %9, i64 0, metadata !1955, metadata !2664), !dbg !6495
  %call = tail call i64 @PyLong_AsSsize_t(%struct._object* %9) #1, !dbg !6496
  tail call void @llvm.dbg.value(metadata i64 %call, i64 0, metadata !1959, metadata !2664), !dbg !6497
  %cmp4 = icmp slt i64 %call, 0, !dbg !6498
  br i1 %cmp4, label %land.lhs.true, label %if.else, !dbg !6500

land.lhs.true:                                    ; preds = %for.body
  %call5 = tail call %struct._object* @PyErr_Occurred() #1, !dbg !6501
  %tobool = icmp eq %struct._object* %call5, null, !dbg !6501
  br i1 %tobool, label %if.end.14, label %cleanup.53.loopexit, !dbg !6503

if.else:                                          ; preds = %for.body
  %cmp10 = icmp sgt i64 %call, %sub, !dbg !6504
  tail call void @llvm.dbg.value(metadata i64 %sub, i64 0, metadata !1959, metadata !2664), !dbg !6497
  %sub.call = select i1 %cmp10, i64 %sub, i64 %call, !dbg !6505
  br label %if.end.14, !dbg !6505

if.end.14:                                        ; preds = %land.lhs.true, %if.else
  %index.0 = phi i64 [ %sub.call, %if.else ], [ 0, %land.lhs.true ]
  %10 = load i64*, i64** %indices, align 8, !dbg !6487, !tbaa !6192
  %arrayidx15 = getelementptr i64, i64* %10, i64 %i.098, !dbg !6506
  store i64 %index.0, i64* %arrayidx15, align 8, !dbg !6507, !tbaa !2984
  %inc = add nuw nsw i64 %i.098, 1, !dbg !6508
  tail call void @llvm.dbg.value(metadata i64 %inc, i64 0, metadata !1954, metadata !2664), !dbg !6509
  %cmp3 = icmp slt i64 %inc, %2, !dbg !6484
  br i1 %cmp3, label %for.body, label %for.end.loopexit, !dbg !6485

for.end.loopexit:                                 ; preds = %if.end.14
  br label %for.end, !dbg !6510

for.end:                                          ; preds = %for.end.loopexit, %for.cond.preheader
  %call17 = tail call %struct._object* @PyTuple_New(i64 %2) #1, !dbg !6510
  tail call void @llvm.dbg.value(metadata %struct._object* %call17, i64 0, metadata !1952, metadata !2664), !dbg !6511
  %tobool18 = icmp eq %struct._object* %call17, null, !dbg !6512
  br i1 %tobool18, label %cleanup.53, label %for.cond.21.preheader, !dbg !6514

for.cond.21.preheader:                            ; preds = %for.end
  br i1 %cmp3.97, label %for.body.23.lr.ph, label %do.body, !dbg !6515

for.body.23.lr.ph:                                ; preds = %for.cond.21.preheader
  %11 = bitcast %struct._object** %pools to %struct.PyTupleObject**, !dbg !6516
  %indices27 = getelementptr inbounds %struct.productobject, %struct.productobject* %lz, i64 0, i32 2, !dbg !6517
  %ob_item32 = getelementptr inbounds %struct._object, %struct._object* %call17, i64 1, i32 1, !dbg !6518
  %12 = bitcast %struct._typeobject** %ob_item32 to [1 x %struct._object*]*, !dbg !6518
  br label %for.body.23, !dbg !6515

for.body.23:                                      ; preds = %for.body.23, %for.body.23.lr.ph
  %i.196 = phi i64 [ 0, %for.body.23.lr.ph ], [ %inc35, %for.body.23 ]
  %13 = load %struct.PyTupleObject*, %struct.PyTupleObject** %11, align 8, !dbg !6516, !tbaa !6167
  %arrayidx26 = getelementptr %struct.PyTupleObject, %struct.PyTupleObject* %13, i64 0, i32 1, i64 %i.196, !dbg !6516
  %14 = bitcast %struct._object** %arrayidx26 to %struct.PyTupleObject**, !dbg !6516
  %15 = load %struct.PyTupleObject*, %struct.PyTupleObject** %14, align 8, !dbg !6516, !tbaa !2681
  %16 = load i64*, i64** %indices27, align 8, !dbg !6517, !tbaa !6192
  %arrayidx28 = getelementptr i64, i64* %16, i64 %i.196, !dbg !6517
  %17 = load i64, i64* %arrayidx28, align 8, !dbg !6517, !tbaa !2984
  %arrayidx30 = getelementptr %struct.PyTupleObject, %struct.PyTupleObject* %15, i64 0, i32 1, i64 %17, !dbg !6517
  %18 = load %struct._object*, %struct._object** %arrayidx30, align 8, !dbg !6517, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %18, i64 0, metadata !1964, metadata !2664), !dbg !6519
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %18, i64 0, i32 0, !dbg !6520
  %19 = load i64, i64* %ob_refcnt, align 8, !dbg !6520, !tbaa !2694
  %inc31 = add i64 %19, 1, !dbg !6520
  store i64 %inc31, i64* %ob_refcnt, align 8, !dbg !6520, !tbaa !2694
  %arrayidx33 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %12, i64 0, i64 %i.196, !dbg !6518
  store %struct._object* %18, %struct._object** %arrayidx33, align 8, !dbg !6518, !tbaa !2681
  %inc35 = add nuw nsw i64 %i.196, 1, !dbg !6521
  tail call void @llvm.dbg.value(metadata i64 %inc35, i64 0, metadata !1954, metadata !2664), !dbg !6509
  %exitcond = icmp eq i64 %inc35, %2, !dbg !6515
  br i1 %exitcond, label %do.body.loopexit, label %for.body.23, !dbg !6515

do.body.loopexit:                                 ; preds = %for.body.23
  br label %do.body, !dbg !6522

do.body:                                          ; preds = %do.body.loopexit, %for.cond.21.preheader
  %result37 = getelementptr inbounds %struct.productobject, %struct.productobject* %lz, i64 0, i32 3, !dbg !6522
  %20 = load %struct._object*, %struct._object** %result37, align 8, !dbg !6522, !tbaa !6180
  tail call void @llvm.dbg.value(metadata %struct._object* %20, i64 0, metadata !1965, metadata !2664), !dbg !6522
  %cmp38 = icmp eq %struct._object* %20, null, !dbg !6524
  br i1 %cmp38, label %if.end.48, label %if.then.39, !dbg !6525

if.then.39:                                       ; preds = %do.body
  store %struct._object* null, %struct._object** %result37, align 8, !dbg !6526, !tbaa !6180
  tail call void @llvm.dbg.value(metadata %struct._object* %20, i64 0, metadata !1967, metadata !2664), !dbg !6528
  %ob_refcnt42 = getelementptr inbounds %struct._object, %struct._object* %20, i64 0, i32 0, !dbg !6530
  %21 = load i64, i64* %ob_refcnt42, align 8, !dbg !6530, !tbaa !2694
  %dec = add i64 %21, -1, !dbg !6530
  store i64 %dec, i64* %ob_refcnt42, align 8, !dbg !6530, !tbaa !2694
  %cmp43 = icmp eq i64 %dec, 0, !dbg !6530
  br i1 %cmp43, label %if.else.45, label %if.end.48, !dbg !6532

if.else.45:                                       ; preds = %if.then.39
  %ob_type46 = getelementptr inbounds %struct._object, %struct._object* %20, i64 0, i32 1, !dbg !6533
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type46, align 8, !dbg !6533, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %22, i64 0, i32 4, !dbg !6533
  %23 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6533, !tbaa !2717
  tail call void %23(%struct._object* %20) #1, !dbg !6533
  br label %if.end.48

if.end.48:                                        ; preds = %if.else.45, %if.then.39, %do.body
  store %struct._object* %call17, %struct._object** %result37, align 8, !dbg !6535, !tbaa !6180
  %24 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !6536, !tbaa !2694
  %inc52 = add i64 %24, 1, !dbg !6536
  store i64 %inc52, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !6536, !tbaa !2694
  br label %cleanup.53, !dbg !6536

cleanup.53.loopexit:                              ; preds = %land.lhs.true
  br label %cleanup.53, !dbg !6537

cleanup.53:                                       ; preds = %cleanup.53.loopexit, %for.end, %if.end.48, %if.then
  %retval.2 = phi %struct._object* [ null, %if.then ], [ @_Py_NoneStruct, %if.end.48 ], [ null, %for.end ], [ null, %cleanup.53.loopexit ]
  ret %struct._object* %retval.2, !dbg !6537
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @product_sizeof(%struct.productobject* nocapture readonly %lz, i8* nocapture readnone %unused) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.productobject* %lz, i64 0, metadata !1975, metadata !2664), !dbg !6538
  tail call void @llvm.dbg.value(metadata i8* %unused, i64 0, metadata !1976, metadata !2664), !dbg !6539
  tail call void @llvm.dbg.value(metadata i64 48, i64 0, metadata !1977, metadata !2664), !dbg !6540
  %pools = getelementptr inbounds %struct.productobject, %struct.productobject* %lz, i64 0, i32 1, !dbg !6541
  %0 = bitcast %struct._object** %pools to %struct.PyVarObject**, !dbg !6541
  %1 = load %struct.PyVarObject*, %struct.PyVarObject** %0, align 8, !dbg !6541, !tbaa !6167
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1, i64 0, i32 1, !dbg !6541
  %2 = load i64, i64* %ob_size, align 8, !dbg !6541, !tbaa !2957
  %mul = shl i64 %2, 3, !dbg !6542
  %add = add i64 %mul, 48, !dbg !6543
  tail call void @llvm.dbg.value(metadata i64 %add, i64 0, metadata !1977, metadata !2664), !dbg !6540
  %call = tail call %struct._object* @PyLong_FromSsize_t(i64 %add) #1, !dbg !6544
  ret %struct._object* %call, !dbg !6545
}

; Function Attrs: nounwind uwtable
define internal void @repeat_dealloc(%struct.repeatobject* %ro) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.repeatobject* %ro, i64 0, metadata !2021, metadata !2664), !dbg !6546
  %0 = bitcast %struct.repeatobject* %ro to i8*, !dbg !6547
  tail call void @PyObject_GC_UnTrack(i8* %0) #1, !dbg !6548
  %element = getelementptr inbounds %struct.repeatobject, %struct.repeatobject* %ro, i64 0, i32 1, !dbg !6549
  %1 = load %struct._object*, %struct._object** %element, align 8, !dbg !6549, !tbaa !6551
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !2022, metadata !2664), !dbg !6549
  %cmp = icmp eq %struct._object* %1, null, !dbg !6553
  br i1 %cmp, label %if.end.4, label %do.body.1, !dbg !6554

do.body.1:                                        ; preds = %entry
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !2024, metadata !2664), !dbg !6555
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !6557
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !6557, !tbaa !2694
  %dec = add i64 %2, -1, !dbg !6557
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6557, !tbaa !2694
  %cmp2 = icmp eq i64 %dec, 0, !dbg !6557
  br i1 %cmp2, label %if.else, label %if.end.4, !dbg !6559

if.else:                                          ; preds = %do.body.1
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !6560
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6560, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 4, !dbg !6560
  %4 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6560, !tbaa !2717
  tail call void %4(%struct._object* %1) #1, !dbg !6560
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %do.body.1, %entry
  %ob_type7 = getelementptr inbounds %struct.repeatobject, %struct.repeatobject* %ro, i64 0, i32 0, i32 1, !dbg !6562
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type7, align 8, !dbg !6562, !tbaa !2667
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i64 0, i32 38, !dbg !6563
  %6 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !6563, !tbaa !2744
  tail call void %6(i8* %0) #1, !dbg !6562
  ret void, !dbg !6564
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @repeat_repr(%struct.repeatobject* nocapture readonly %ro) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.repeatobject* %ro, i64 0, metadata !2031, metadata !2664), !dbg !6565
  %cnt = getelementptr inbounds %struct.repeatobject, %struct.repeatobject* %ro, i64 0, i32 2, !dbg !6566
  %0 = load i64, i64* %cnt, align 8, !dbg !6566, !tbaa !6568
  %cmp = icmp eq i64 %0, -1, !dbg !6569
  %element = getelementptr inbounds %struct.repeatobject, %struct.repeatobject* %ro, i64 0, i32 1, !dbg !6570
  %1 = load %struct._object*, %struct._object** %element, align 8, !dbg !6570, !tbaa !6551
  br i1 %cmp, label %if.then, label %if.else, !dbg !6571

if.then:                                          ; preds = %entry
  %call = tail call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.83, i64 0, i64 0), %struct._object* %1) #1, !dbg !6572
  br label %return, !dbg !6573

if.else:                                          ; preds = %entry
  %call3 = tail call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.84, i64 0, i64 0), %struct._object* %1, i64 %0) #1, !dbg !6574
  br label %return, !dbg !6575

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %struct._object* [ %call, %if.then ], [ %call3, %if.else ]
  ret %struct._object* %retval.0, !dbg !6576
}

; Function Attrs: nounwind uwtable
define internal i32 @repeat_traverse(%struct.repeatobject* nocapture readonly %ro, i32 (%struct._object*, i8*)* nocapture %visit, i8* %arg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.repeatobject* %ro, i64 0, metadata !2036, metadata !2664), !dbg !6577
  tail call void @llvm.dbg.value(metadata i32 (%struct._object*, i8*)* %visit, i64 0, metadata !2037, metadata !2664), !dbg !6578
  tail call void @llvm.dbg.value(metadata i8* %arg, i64 0, metadata !2038, metadata !2664), !dbg !6579
  %element = getelementptr inbounds %struct.repeatobject, %struct.repeatobject* %ro, i64 0, i32 1, !dbg !6580
  %0 = load %struct._object*, %struct._object** %element, align 8, !dbg !6580, !tbaa !6551
  %tobool = icmp eq %struct._object* %0, null, !dbg !6580
  br i1 %tobool, label %do.end, label %if.then, !dbg !6582

if.then:                                          ; preds = %entry
  %call = tail call i32 %visit(%struct._object* %0, i8* %arg) #1, !dbg !6583
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !2039, metadata !2664), !dbg !6583
  %tobool2 = icmp eq i32 %call, 0, !dbg !6585
  br i1 %tobool2, label %do.end, label %return

do.end:                                           ; preds = %entry, %if.then
  br label %return, !dbg !6587

return:                                           ; preds = %if.then, %do.end
  %retval.1 = phi i32 [ 0, %do.end ], [ %call, %if.then ]
  ret i32 %retval.1, !dbg !6588
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @repeat_next(%struct.repeatobject* nocapture %ro) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.repeatobject* %ro, i64 0, metadata !2045, metadata !2664), !dbg !6589
  %cnt = getelementptr inbounds %struct.repeatobject, %struct.repeatobject* %ro, i64 0, i32 2, !dbg !6590
  %0 = load i64, i64* %cnt, align 8, !dbg !6590, !tbaa !6568
  %cmp = icmp eq i64 %0, 0, !dbg !6592
  br i1 %cmp, label %return, label %if.end, !dbg !6593

if.end:                                           ; preds = %entry
  %cmp2 = icmp sgt i64 %0, 0, !dbg !6594
  br i1 %cmp2, label %if.then.3, label %if.end.5, !dbg !6596

if.then.3:                                        ; preds = %if.end
  %dec = add i64 %0, -1, !dbg !6597
  store i64 %dec, i64* %cnt, align 8, !dbg !6597, !tbaa !6568
  br label %if.end.5, !dbg !6598

if.end.5:                                         ; preds = %if.then.3, %if.end
  %element = getelementptr inbounds %struct.repeatobject, %struct.repeatobject* %ro, i64 0, i32 1, !dbg !6599
  %1 = load %struct._object*, %struct._object** %element, align 8, !dbg !6599, !tbaa !6551
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !6599
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !6599, !tbaa !2694
  %inc = add i64 %2, 1, !dbg !6599
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !6599, !tbaa !2694
  br label %return, !dbg !6600

return:                                           ; preds = %entry, %if.end.5
  %retval.0 = phi %struct._object* [ %1, %if.end.5 ], [ null, %entry ]
  ret %struct._object* %retval.0, !dbg !6601
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @repeat_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %element = alloca %struct._object*, align 8
  %cnt = alloca i64, align 8
  tail call void @llvm.dbg.value(metadata %struct._typeobject* %type, i64 0, metadata !2054, metadata !2664), !dbg !6602
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2055, metadata !2664), !dbg !6603
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !2056, metadata !2664), !dbg !6604
  %0 = bitcast %struct._object** %element to i8*, !dbg !6605
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6605
  %1 = bitcast i64* %cnt to i8*, !dbg !6606
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !6606
  tail call void @llvm.dbg.value(metadata i64 -1, i64 0, metadata !2059, metadata !2664), !dbg !6607
  store i64 -1, i64* %cnt, align 8, !dbg !6607, !tbaa !2984
  tail call void @llvm.dbg.value(metadata %struct._object** %element, i64 0, metadata !2058, metadata !2664), !dbg !6608
  tail call void @llvm.dbg.value(metadata i64* %cnt, i64 0, metadata !2059, metadata !2664), !dbg !6607
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %args, %struct._object* %kwds, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.90, i64 0, i64 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @repeat_new.kwargs, i64 0, i64 0), %struct._object** nonnull %element, i64* nonnull %cnt) #1, !dbg !6609
  %tobool = icmp eq i32 %call, 0, !dbg !6609
  br i1 %tobool, label %cleanup, label %if.end, !dbg !6611

if.end:                                           ; preds = %entry
  %call1 = call i64 @PyTuple_Size(%struct._object* %args) #1, !dbg !6612
  %cmp = icmp eq i64 %call1, 2, !dbg !6614
  call void @llvm.dbg.value(metadata i64* %cnt, i64 0, metadata !2059, metadata !2664), !dbg !6607
  %2 = load i64, i64* %cnt, align 8
  %cmp2 = icmp slt i64 %2, 0, !dbg !6615
  %or.cond = and i1 %cmp, %cmp2, !dbg !6616
  br i1 %or.cond, label %if.then.3, label %if.end.4, !dbg !6616

if.then.3:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !2059, metadata !2664), !dbg !6607
  store i64 0, i64* %cnt, align 8, !dbg !6617, !tbaa !2984
  br label %if.end.4, !dbg !6618

if.end.4:                                         ; preds = %if.then.3, %if.end
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %type, i64 0, i32 36, !dbg !6619
  %3 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !6619, !tbaa !2835
  %call5 = call %struct._object* %3(%struct._typeobject* %type, i64 0) #1, !dbg !6620
  %cmp6 = icmp eq %struct._object* %call5, null, !dbg !6621
  br i1 %cmp6, label %cleanup, label %if.end.8, !dbg !6623

if.end.8:                                         ; preds = %if.end.4
  call void @llvm.dbg.value(metadata %struct._object** %element, i64 0, metadata !2058, metadata !2664), !dbg !6608
  %4 = load %struct._object*, %struct._object** %element, align 8, !dbg !6624, !tbaa !2681
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %4, i64 0, i32 0, !dbg !6624
  %5 = load i64, i64* %ob_refcnt, align 8, !dbg !6624, !tbaa !2694
  %inc = add i64 %5, 1, !dbg !6624
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !6624, !tbaa !2694
  call void @llvm.dbg.value(metadata %struct._object** %element, i64 0, metadata !2058, metadata !2664), !dbg !6608
  %6 = ptrtoint %struct._object* %4 to i64, !dbg !6625
  %7 = getelementptr inbounds %struct._object, %struct._object* %call5, i64 1, i32 0, !dbg !6626
  store i64 %6, i64* %7, align 8, !dbg !6626, !tbaa !6551
  call void @llvm.dbg.value(metadata i64* %cnt, i64 0, metadata !2059, metadata !2664), !dbg !6607
  %8 = load i64, i64* %cnt, align 8, !dbg !6627, !tbaa !2984
  %cnt10 = getelementptr inbounds %struct._object, %struct._object* %call5, i64 1, i32 1, !dbg !6628
  %9 = bitcast %struct._typeobject** %cnt10 to i64*, !dbg !6628
  store i64 %8, i64* %9, align 8, !dbg !6629, !tbaa !6568
  br label %cleanup, !dbg !6630

cleanup:                                          ; preds = %if.end.4, %entry, %if.end.8
  %retval.0 = phi %struct._object* [ %call5, %if.end.8 ], [ null, %entry ], [ null, %if.end.4 ]
  call void @llvm.lifetime.end(i64 8, i8* %1) #1, !dbg !6631
  call void @llvm.lifetime.end(i64 8, i8* %0) #1, !dbg !6631
  ret %struct._object* %retval.0, !dbg !6631
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @repeat_len(%struct.repeatobject* nocapture readonly %ro) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.repeatobject* %ro, i64 0, metadata !2048, metadata !2664), !dbg !6632
  %cnt = getelementptr inbounds %struct.repeatobject, %struct.repeatobject* %ro, i64 0, i32 2, !dbg !6633
  %0 = load i64, i64* %cnt, align 8, !dbg !6633, !tbaa !6568
  %cmp = icmp eq i64 %0, -1, !dbg !6635
  br i1 %cmp, label %if.then, label %if.end, !dbg !6636

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !6637, !tbaa !2681
  tail call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.86, i64 0, i64 0)) #1, !dbg !6639
  br label %return, !dbg !6640

if.end:                                           ; preds = %entry
  %call = tail call %struct._object* @PyLong_FromSize_t(i64 %0) #1, !dbg !6641
  br label %return, !dbg !6642

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct._object* [ null, %if.then ], [ %call, %if.end ]
  ret %struct._object* %retval.0, !dbg !6643
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @repeat_reduce(%struct.repeatobject* nocapture readonly %ro) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.repeatobject* %ro, i64 0, metadata !2051, metadata !2664), !dbg !6644
  %cnt = getelementptr inbounds %struct.repeatobject, %struct.repeatobject* %ro, i64 0, i32 2, !dbg !6645
  %0 = load i64, i64* %cnt, align 8, !dbg !6645, !tbaa !6568
  %cmp = icmp sgt i64 %0, -1, !dbg !6647
  %ob_type = getelementptr inbounds %struct.repeatobject, %struct.repeatobject* %ro, i64 0, i32 0, i32 1, !dbg !6648
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6648, !tbaa !2667
  %element = getelementptr inbounds %struct.repeatobject, %struct.repeatobject* %ro, i64 0, i32 1, !dbg !6649
  %2 = load %struct._object*, %struct._object** %element, align 8, !dbg !6649, !tbaa !6551
  br i1 %cmp, label %if.then, label %if.else, !dbg !6650

if.then:                                          ; preds = %entry
  %call = tail call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), %struct._typeobject* %1, %struct._object* %2, i64 %0) #1, !dbg !6651
  br label %return, !dbg !6652

if.else:                                          ; preds = %entry
  %call4 = tail call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i64 0, i64 0), %struct._typeobject* %1, %struct._object* %2) #1, !dbg !6653
  br label %return, !dbg !6654

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %struct._object* [ %call, %if.then ], [ %call4, %if.else ]
  ret %struct._object* %retval.0, !dbg !6655
}

declare %struct._object* @PyLong_FromSize_t(i64) #3

; Function Attrs: nounwind uwtable
define internal void @groupby_dealloc(%struct.groupbyobject* %gbo) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.groupbyobject* %gbo, i64 0, metadata !2064, metadata !2664), !dbg !6656
  %0 = bitcast %struct.groupbyobject* %gbo to i8*, !dbg !6657
  tail call void @PyObject_GC_UnTrack(i8* %0) #1, !dbg !6658
  %it = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %gbo, i64 0, i32 1, !dbg !6659
  %1 = load %struct._object*, %struct._object** %it, align 8, !dbg !6659, !tbaa !6661
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !2065, metadata !2664), !dbg !6659
  %cmp = icmp eq %struct._object* %1, null, !dbg !6663
  br i1 %cmp, label %if.end.4, label %do.body.1, !dbg !6664

do.body.1:                                        ; preds = %entry
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !2067, metadata !2664), !dbg !6665
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !6667
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !6667, !tbaa !2694
  %dec = add i64 %2, -1, !dbg !6667
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6667, !tbaa !2694
  %cmp2 = icmp eq i64 %dec, 0, !dbg !6667
  br i1 %cmp2, label %if.else, label %if.end.4, !dbg !6669

if.else:                                          ; preds = %do.body.1
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !6670
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6670, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 4, !dbg !6670
  %4 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6670, !tbaa !2717
  tail call void %4(%struct._object* %1) #1, !dbg !6670
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %do.body.1, %entry
  %keyfunc = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %gbo, i64 0, i32 2, !dbg !6672
  %5 = load %struct._object*, %struct._object** %keyfunc, align 8, !dbg !6672, !tbaa !6674
  tail call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !2070, metadata !2664), !dbg !6672
  %cmp9 = icmp eq %struct._object* %5, null, !dbg !6675
  br i1 %cmp9, label %if.end.23, label %do.body.11, !dbg !6676

do.body.11:                                       ; preds = %if.end.4
  tail call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !2072, metadata !2664), !dbg !6677
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 0, !dbg !6679
  %6 = load i64, i64* %ob_refcnt13, align 8, !dbg !6679, !tbaa !2694
  %dec14 = add i64 %6, -1, !dbg !6679
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !6679, !tbaa !2694
  %cmp15 = icmp eq i64 %dec14, 0, !dbg !6679
  br i1 %cmp15, label %if.else.17, label %if.end.23, !dbg !6681

if.else.17:                                       ; preds = %do.body.11
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 1, !dbg !6682
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !6682, !tbaa !2667
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i64 0, i32 4, !dbg !6682
  %8 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !6682, !tbaa !2717
  tail call void %8(%struct._object* %5) #1, !dbg !6682
  br label %if.end.23

if.end.23:                                        ; preds = %if.else.17, %do.body.11, %if.end.4
  %tgtkey = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %gbo, i64 0, i32 3, !dbg !6684
  %9 = load %struct._object*, %struct._object** %tgtkey, align 8, !dbg !6684, !tbaa !6686
  tail call void @llvm.dbg.value(metadata %struct._object* %9, i64 0, metadata !2075, metadata !2664), !dbg !6684
  %cmp28 = icmp eq %struct._object* %9, null, !dbg !6687
  br i1 %cmp28, label %if.end.42, label %do.body.30, !dbg !6688

do.body.30:                                       ; preds = %if.end.23
  tail call void @llvm.dbg.value(metadata %struct._object* %9, i64 0, metadata !2077, metadata !2664), !dbg !6689
  %ob_refcnt32 = getelementptr inbounds %struct._object, %struct._object* %9, i64 0, i32 0, !dbg !6691
  %10 = load i64, i64* %ob_refcnt32, align 8, !dbg !6691, !tbaa !2694
  %dec33 = add i64 %10, -1, !dbg !6691
  store i64 %dec33, i64* %ob_refcnt32, align 8, !dbg !6691, !tbaa !2694
  %cmp34 = icmp eq i64 %dec33, 0, !dbg !6691
  br i1 %cmp34, label %if.else.36, label %if.end.42, !dbg !6693

if.else.36:                                       ; preds = %do.body.30
  %ob_type37 = getelementptr inbounds %struct._object, %struct._object* %9, i64 0, i32 1, !dbg !6694
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type37, align 8, !dbg !6694, !tbaa !2667
  %tp_dealloc38 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i64 0, i32 4, !dbg !6694
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc38, align 8, !dbg !6694, !tbaa !2717
  tail call void %12(%struct._object* %9) #1, !dbg !6694
  br label %if.end.42

if.end.42:                                        ; preds = %if.else.36, %do.body.30, %if.end.23
  %currkey = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %gbo, i64 0, i32 4, !dbg !6696
  %13 = load %struct._object*, %struct._object** %currkey, align 8, !dbg !6696, !tbaa !6698
  tail call void @llvm.dbg.value(metadata %struct._object* %13, i64 0, metadata !2080, metadata !2664), !dbg !6696
  %cmp47 = icmp eq %struct._object* %13, null, !dbg !6699
  br i1 %cmp47, label %if.end.61, label %do.body.49, !dbg !6700

do.body.49:                                       ; preds = %if.end.42
  tail call void @llvm.dbg.value(metadata %struct._object* %13, i64 0, metadata !2082, metadata !2664), !dbg !6701
  %ob_refcnt51 = getelementptr inbounds %struct._object, %struct._object* %13, i64 0, i32 0, !dbg !6703
  %14 = load i64, i64* %ob_refcnt51, align 8, !dbg !6703, !tbaa !2694
  %dec52 = add i64 %14, -1, !dbg !6703
  store i64 %dec52, i64* %ob_refcnt51, align 8, !dbg !6703, !tbaa !2694
  %cmp53 = icmp eq i64 %dec52, 0, !dbg !6703
  br i1 %cmp53, label %if.else.55, label %if.end.61, !dbg !6705

if.else.55:                                       ; preds = %do.body.49
  %ob_type56 = getelementptr inbounds %struct._object, %struct._object* %13, i64 0, i32 1, !dbg !6706
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type56, align 8, !dbg !6706, !tbaa !2667
  %tp_dealloc57 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i64 0, i32 4, !dbg !6706
  %16 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc57, align 8, !dbg !6706, !tbaa !2717
  tail call void %16(%struct._object* %13) #1, !dbg !6706
  br label %if.end.61

if.end.61:                                        ; preds = %if.else.55, %do.body.49, %if.end.42
  %currvalue = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %gbo, i64 0, i32 5, !dbg !6708
  %17 = load %struct._object*, %struct._object** %currvalue, align 8, !dbg !6708, !tbaa !6710
  tail call void @llvm.dbg.value(metadata %struct._object* %17, i64 0, metadata !2085, metadata !2664), !dbg !6708
  %cmp66 = icmp eq %struct._object* %17, null, !dbg !6711
  br i1 %cmp66, label %if.end.80, label %do.body.68, !dbg !6712

do.body.68:                                       ; preds = %if.end.61
  tail call void @llvm.dbg.value(metadata %struct._object* %17, i64 0, metadata !2087, metadata !2664), !dbg !6713
  %ob_refcnt70 = getelementptr inbounds %struct._object, %struct._object* %17, i64 0, i32 0, !dbg !6715
  %18 = load i64, i64* %ob_refcnt70, align 8, !dbg !6715, !tbaa !2694
  %dec71 = add i64 %18, -1, !dbg !6715
  store i64 %dec71, i64* %ob_refcnt70, align 8, !dbg !6715, !tbaa !2694
  %cmp72 = icmp eq i64 %dec71, 0, !dbg !6715
  br i1 %cmp72, label %if.else.74, label %if.end.80, !dbg !6717

if.else.74:                                       ; preds = %do.body.68
  %ob_type75 = getelementptr inbounds %struct._object, %struct._object* %17, i64 0, i32 1, !dbg !6718
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type75, align 8, !dbg !6718, !tbaa !2667
  %tp_dealloc76 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i64 0, i32 4, !dbg !6718
  %20 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc76, align 8, !dbg !6718, !tbaa !2717
  tail call void %20(%struct._object* %17) #1, !dbg !6718
  br label %if.end.80

if.end.80:                                        ; preds = %if.else.74, %do.body.68, %if.end.61
  %ob_type83 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %gbo, i64 0, i32 0, i32 1, !dbg !6720
  %21 = load %struct._typeobject*, %struct._typeobject** %ob_type83, align 8, !dbg !6720, !tbaa !2667
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %21, i64 0, i32 38, !dbg !6721
  %22 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !6721, !tbaa !2744
  tail call void %22(i8* %0) #1, !dbg !6720
  ret void, !dbg !6722
}

; Function Attrs: nounwind uwtable
define internal i32 @groupby_traverse(%struct.groupbyobject* nocapture readonly %gbo, i32 (%struct._object*, i8*)* nocapture %visit, i8* %arg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.groupbyobject* %gbo, i64 0, metadata !2094, metadata !2664), !dbg !6723
  tail call void @llvm.dbg.value(metadata i32 (%struct._object*, i8*)* %visit, i64 0, metadata !2095, metadata !2664), !dbg !6724
  tail call void @llvm.dbg.value(metadata i8* %arg, i64 0, metadata !2096, metadata !2664), !dbg !6725
  %it = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %gbo, i64 0, i32 1, !dbg !6726
  %0 = load %struct._object*, %struct._object** %it, align 8, !dbg !6726, !tbaa !6661
  %tobool = icmp eq %struct._object* %0, null, !dbg !6726
  br i1 %tobool, label %do.body.5, label %if.then, !dbg !6728

if.then:                                          ; preds = %entry
  %call = tail call i32 %visit(%struct._object* %0, i8* %arg) #1, !dbg !6729
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !2097, metadata !2664), !dbg !6729
  %tobool2 = icmp eq i32 %call, 0, !dbg !6731
  br i1 %tobool2, label %do.body.5, label %return

do.body.5:                                        ; preds = %entry, %if.then
  %keyfunc = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %gbo, i64 0, i32 2, !dbg !6733
  %1 = load %struct._object*, %struct._object** %keyfunc, align 8, !dbg !6733, !tbaa !6674
  %tobool6 = icmp eq %struct._object* %1, null, !dbg !6733
  br i1 %tobool6, label %do.body.19, label %if.then.7, !dbg !6735

if.then.7:                                        ; preds = %do.body.5
  %call10 = tail call i32 %visit(%struct._object* %1, i8* %arg) #1, !dbg !6736
  tail call void @llvm.dbg.value(metadata i32 %call10, i64 0, metadata !2101, metadata !2664), !dbg !6736
  %tobool11 = icmp eq i32 %call10, 0, !dbg !6738
  br i1 %tobool11, label %do.body.19, label %return

do.body.19:                                       ; preds = %do.body.5, %if.then.7
  %tgtkey = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %gbo, i64 0, i32 3, !dbg !6740
  %2 = load %struct._object*, %struct._object** %tgtkey, align 8, !dbg !6740, !tbaa !6686
  %tobool20 = icmp eq %struct._object* %2, null, !dbg !6740
  br i1 %tobool20, label %do.body.33, label %if.then.21, !dbg !6742

if.then.21:                                       ; preds = %do.body.19
  %call24 = tail call i32 %visit(%struct._object* %2, i8* %arg) #1, !dbg !6743
  tail call void @llvm.dbg.value(metadata i32 %call24, i64 0, metadata !2105, metadata !2664), !dbg !6743
  %tobool25 = icmp eq i32 %call24, 0, !dbg !6745
  br i1 %tobool25, label %do.body.33, label %return

do.body.33:                                       ; preds = %do.body.19, %if.then.21
  %currkey = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %gbo, i64 0, i32 4, !dbg !6747
  %3 = load %struct._object*, %struct._object** %currkey, align 8, !dbg !6747, !tbaa !6698
  %tobool34 = icmp eq %struct._object* %3, null, !dbg !6747
  br i1 %tobool34, label %do.body.47, label %if.then.35, !dbg !6749

if.then.35:                                       ; preds = %do.body.33
  %call38 = tail call i32 %visit(%struct._object* %3, i8* %arg) #1, !dbg !6750
  tail call void @llvm.dbg.value(metadata i32 %call38, i64 0, metadata !2109, metadata !2664), !dbg !6750
  %tobool39 = icmp eq i32 %call38, 0, !dbg !6752
  br i1 %tobool39, label %do.body.47, label %return

do.body.47:                                       ; preds = %do.body.33, %if.then.35
  %currvalue = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %gbo, i64 0, i32 5, !dbg !6754
  %4 = load %struct._object*, %struct._object** %currvalue, align 8, !dbg !6754, !tbaa !6710
  %tobool48 = icmp eq %struct._object* %4, null, !dbg !6754
  br i1 %tobool48, label %do.end.60, label %if.then.49, !dbg !6756

if.then.49:                                       ; preds = %do.body.47
  %call52 = tail call i32 %visit(%struct._object* %4, i8* %arg) #1, !dbg !6757
  tail call void @llvm.dbg.value(metadata i32 %call52, i64 0, metadata !2113, metadata !2664), !dbg !6757
  %tobool53 = icmp eq i32 %call52, 0, !dbg !6759
  br i1 %tobool53, label %do.end.60, label %return

do.end.60:                                        ; preds = %do.body.47, %if.then.49
  br label %return, !dbg !6761

return:                                           ; preds = %if.then.49, %if.then.35, %if.then.21, %if.then.7, %if.then, %do.end.60
  %retval.9 = phi i32 [ 0, %do.end.60 ], [ %call52, %if.then.49 ], [ %call38, %if.then.35 ], [ %call24, %if.then.21 ], [ %call10, %if.then.7 ], [ %call, %if.then ]
  ret i32 %retval.9, !dbg !6762
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @groupby_next(%struct.groupbyobject* %gbo) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.groupbyobject* %gbo, i64 0, metadata !2121, metadata !2664), !dbg !6763
  %currkey = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %gbo, i64 0, i32 4, !dbg !6764
  %it = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %gbo, i64 0, i32 1, !dbg !6765
  %keyfunc = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %gbo, i64 0, i32 2, !dbg !6766
  %currvalue = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %gbo, i64 0, i32 5, !dbg !6767
  %tgtkey = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %gbo, i64 0, i32 3, !dbg !6768
  br label %for.cond, !dbg !6769

for.cond:                                         ; preds = %for.cond.backedge, %entry
  %0 = load %struct._object*, %struct._object** %currkey, align 8, !dbg !6764, !tbaa !6698
  %cmp = icmp eq %struct._object* %0, null, !dbg !6770
  br i1 %cmp, label %if.end.14, label %if.else, !dbg !6771

if.else:                                          ; preds = %for.cond
  %1 = load %struct._object*, %struct._object** %tgtkey, align 8, !dbg !6768, !tbaa !6686
  %cmp1 = icmp eq %struct._object* %1, null, !dbg !6772
  br i1 %cmp1, label %for.end.loopexit, label %if.else.3, !dbg !6773

if.else.3:                                        ; preds = %if.else
  %call = tail call i32 @PyObject_RichCompareBool(%struct._object* %1, %struct._object* %0, i32 2) #1, !dbg !6774
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !2127, metadata !2664), !dbg !6775
  %switch.selectcmp = icmp eq i32 %call, 0, !dbg !6776
  %switch.select = select i1 %switch.selectcmp, i32 2, i32 0, !dbg !6776
  %switch.selectcmp185 = icmp eq i32 %call, -1, !dbg !6776
  %switch.select186 = select i1 %switch.selectcmp185, i32 1, i32 %switch.select, !dbg !6776
  switch i32 %switch.select186, label %cleanup.125.loopexit [
    i32 0, label %if.end.14
    i32 2, label %if.else.3.for.end_crit_edge
  ]

if.else.3.for.end_crit_edge:                      ; preds = %if.else.3
  %.pre = load %struct._object*, %struct._object** %currkey, align 8, !dbg !6777, !tbaa !6698
  %.pre190 = load %struct._object*, %struct._object** %tgtkey, align 8, !dbg !6778, !tbaa !6686
  br label %for.end

if.end.14:                                        ; preds = %if.else.3, %for.cond
  %2 = load %struct._object*, %struct._object** %it, align 8, !dbg !6765, !tbaa !6661
  %call15 = tail call %struct._object* @PyIter_Next(%struct._object* %2) #1, !dbg !6779
  tail call void @llvm.dbg.value(metadata %struct._object* %call15, i64 0, metadata !2122, metadata !2664), !dbg !6780
  %cmp16 = icmp eq %struct._object* %call15, null, !dbg !6781
  br i1 %cmp16, label %cleanup.125.loopexit, label %if.end.18, !dbg !6783

if.end.18:                                        ; preds = %if.end.14
  %3 = load %struct._object*, %struct._object** %keyfunc, align 8, !dbg !6766, !tbaa !6674
  %cmp19 = icmp eq %struct._object* %3, @_Py_NoneStruct, !dbg !6784
  br i1 %cmp19, label %if.then.20, label %if.else.21, !dbg !6785

if.then.20:                                       ; preds = %if.end.18
  tail call void @llvm.dbg.value(metadata %struct._object* %call15, i64 0, metadata !2123, metadata !2664), !dbg !6786
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call15, i64 0, i32 0, !dbg !6787
  %4 = load i64, i64* %ob_refcnt, align 8, !dbg !6787, !tbaa !2694
  %inc = add i64 %4, 1, !dbg !6787
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !6787, !tbaa !2694
  br label %if.end.33, !dbg !6789

if.else.21:                                       ; preds = %if.end.18
  %call23 = tail call %struct._object* (%struct._object*, ...) @PyObject_CallFunctionObjArgs(%struct._object* %3, %struct._object* %call15, i8* null) #1, !dbg !6790
  tail call void @llvm.dbg.value(metadata %struct._object* %call23, i64 0, metadata !2123, metadata !2664), !dbg !6786
  %cmp24 = icmp eq %struct._object* %call23, null, !dbg !6791
  br i1 %cmp24, label %do.body, label %if.end.33, !dbg !6792

do.body:                                          ; preds = %if.else.21
  %call15.lcssa = phi %struct._object* [ %call15, %if.else.21 ]
  tail call void @llvm.dbg.value(metadata %struct._object* %call15, i64 0, metadata !2134, metadata !2664), !dbg !6793
  %ob_refcnt27 = getelementptr inbounds %struct._object, %struct._object* %call15.lcssa, i64 0, i32 0, !dbg !6795
  %5 = load i64, i64* %ob_refcnt27, align 8, !dbg !6795, !tbaa !2694
  %dec = add i64 %5, -1, !dbg !6795
  store i64 %dec, i64* %ob_refcnt27, align 8, !dbg !6795, !tbaa !2694
  %cmp28 = icmp eq i64 %dec, 0, !dbg !6795
  br i1 %cmp28, label %if.else.30, label %cleanup.125, !dbg !6797

if.else.30:                                       ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call15.lcssa, i64 0, i32 1, !dbg !6798
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6798, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i64 0, i32 4, !dbg !6798
  %7 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6798, !tbaa !2717
  tail call void %7(%struct._object* %call15.lcssa) #1, !dbg !6798
  br label %cleanup.125

if.end.33:                                        ; preds = %if.else.21, %if.then.20
  %newkey.0 = phi %struct._object* [ %call15, %if.then.20 ], [ %call23, %if.else.21 ]
  %8 = load %struct._object*, %struct._object** %currkey, align 8, !dbg !6800, !tbaa !6698
  tail call void @llvm.dbg.value(metadata %struct._object* %8, i64 0, metadata !2126, metadata !2664), !dbg !6801
  store %struct._object* %newkey.0, %struct._object** %currkey, align 8, !dbg !6802, !tbaa !6698
  tail call void @llvm.dbg.value(metadata %struct._object* %8, i64 0, metadata !2140, metadata !2664), !dbg !6803
  %cmp38 = icmp eq %struct._object* %8, null, !dbg !6805
  br i1 %cmp38, label %if.end.53, label %do.body.40, !dbg !6806

do.body.40:                                       ; preds = %if.end.33
  tail call void @llvm.dbg.value(metadata %struct._object* %8, i64 0, metadata !2142, metadata !2664), !dbg !6807
  %ob_refcnt43 = getelementptr inbounds %struct._object, %struct._object* %8, i64 0, i32 0, !dbg !6809
  %9 = load i64, i64* %ob_refcnt43, align 8, !dbg !6809, !tbaa !2694
  %dec44 = add i64 %9, -1, !dbg !6809
  store i64 %dec44, i64* %ob_refcnt43, align 8, !dbg !6809, !tbaa !2694
  %cmp45 = icmp eq i64 %dec44, 0, !dbg !6809
  br i1 %cmp45, label %if.else.47, label %if.end.53, !dbg !6811

if.else.47:                                       ; preds = %do.body.40
  %ob_type48 = getelementptr inbounds %struct._object, %struct._object* %8, i64 0, i32 1, !dbg !6812
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type48, align 8, !dbg !6812, !tbaa !2667
  %tp_dealloc49 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i64 0, i32 4, !dbg !6812
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc49, align 8, !dbg !6812, !tbaa !2717
  tail call void %11(%struct._object* %8) #1, !dbg !6812
  br label %if.end.53

if.end.53:                                        ; preds = %if.else.47, %do.body.40, %if.end.33
  %12 = load %struct._object*, %struct._object** %currvalue, align 8, !dbg !6767, !tbaa !6710
  tail call void @llvm.dbg.value(metadata %struct._object* %12, i64 0, metadata !2126, metadata !2664), !dbg !6801
  store %struct._object* %call15, %struct._object** %currvalue, align 8, !dbg !6814, !tbaa !6710
  tail call void @llvm.dbg.value(metadata %struct._object* %12, i64 0, metadata !2145, metadata !2664), !dbg !6815
  %cmp60 = icmp eq %struct._object* %12, null, !dbg !6817
  br i1 %cmp60, label %for.cond.backedge, label %do.body.62, !dbg !6818

do.body.62:                                       ; preds = %if.end.53
  tail call void @llvm.dbg.value(metadata %struct._object* %12, i64 0, metadata !2147, metadata !2664), !dbg !6819
  %ob_refcnt65 = getelementptr inbounds %struct._object, %struct._object* %12, i64 0, i32 0, !dbg !6821
  %13 = load i64, i64* %ob_refcnt65, align 8, !dbg !6821, !tbaa !2694
  %dec66 = add i64 %13, -1, !dbg !6821
  store i64 %dec66, i64* %ob_refcnt65, align 8, !dbg !6821, !tbaa !2694
  %cmp67 = icmp eq i64 %dec66, 0, !dbg !6821
  br i1 %cmp67, label %if.else.69, label %for.cond.backedge, !dbg !6823

if.else.69:                                       ; preds = %do.body.62
  %ob_type70 = getelementptr inbounds %struct._object, %struct._object* %12, i64 0, i32 1, !dbg !6824
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type70, align 8, !dbg !6824, !tbaa !2667
  %tp_dealloc71 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i64 0, i32 4, !dbg !6824
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc71, align 8, !dbg !6824, !tbaa !2717
  tail call void %15(%struct._object* %12) #1, !dbg !6824
  br label %for.cond.backedge

for.cond.backedge:                                ; preds = %if.else.69, %do.body.62, %if.end.53
  br label %for.cond, !dbg !6764

for.end.loopexit:                                 ; preds = %if.else
  %.lcssa = phi %struct._object* [ %0, %if.else ]
  br label %for.end, !dbg !6826

for.end:                                          ; preds = %for.end.loopexit, %if.else.3.for.end_crit_edge
  %.in = phi %struct._object* [ %.pre, %if.else.3.for.end_crit_edge ], [ %.lcssa, %for.end.loopexit ]
  %16 = phi %struct._object* [ %.pre190, %if.else.3.for.end_crit_edge ], [ null, %for.end.loopexit ], !dbg !6778
  %17 = ptrtoint %struct._object* %.in to i64, !dbg !6826
  %ob_refcnt79 = getelementptr inbounds %struct._object, %struct._object* %.in, i64 0, i32 0, !dbg !6777
  %18 = load i64, i64* %ob_refcnt79, align 8, !dbg !6777, !tbaa !2694
  %inc80 = add i64 %18, 1, !dbg !6777
  store i64 %inc80, i64* %ob_refcnt79, align 8, !dbg !6777, !tbaa !2694
  tail call void @llvm.dbg.value(metadata %struct._object* %16, i64 0, metadata !2126, metadata !2664), !dbg !6801
  %19 = bitcast %struct._object** %tgtkey to i64*, !dbg !6827
  store i64 %17, i64* %19, align 8, !dbg !6827, !tbaa !6686
  tail call void @llvm.dbg.value(metadata %struct._object* %16, i64 0, metadata !2150, metadata !2664), !dbg !6828
  %cmp87 = icmp eq %struct._object* %16, null, !dbg !6830
  br i1 %cmp87, label %if.end.102, label %do.body.89, !dbg !6831

do.body.89:                                       ; preds = %for.end
  tail call void @llvm.dbg.value(metadata %struct._object* %16, i64 0, metadata !2152, metadata !2664), !dbg !6832
  %ob_refcnt92 = getelementptr inbounds %struct._object, %struct._object* %16, i64 0, i32 0, !dbg !6834
  %20 = load i64, i64* %ob_refcnt92, align 8, !dbg !6834, !tbaa !2694
  %dec93 = add i64 %20, -1, !dbg !6834
  store i64 %dec93, i64* %ob_refcnt92, align 8, !dbg !6834, !tbaa !2694
  %cmp94 = icmp eq i64 %dec93, 0, !dbg !6834
  br i1 %cmp94, label %if.else.96, label %if.end.102, !dbg !6836

if.else.96:                                       ; preds = %do.body.89
  %ob_type97 = getelementptr inbounds %struct._object, %struct._object* %16, i64 0, i32 1, !dbg !6837
  %21 = load %struct._typeobject*, %struct._typeobject** %ob_type97, align 8, !dbg !6837, !tbaa !2667
  %tp_dealloc98 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %21, i64 0, i32 4, !dbg !6837
  %22 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc98, align 8, !dbg !6837, !tbaa !2717
  tail call void %22(%struct._object* %16) #1, !dbg !6837
  %.pre191 = load %struct._object*, %struct._object** %tgtkey, align 8, !dbg !6839, !tbaa !6686
  br label %if.end.102

if.end.102:                                       ; preds = %if.else.96, %do.body.89, %for.end
  %23 = phi %struct._object* [ %.pre191, %if.else.96 ], [ %.in, %do.body.89 ], [ %.in, %for.end ], !dbg !6839
  tail call void @llvm.dbg.value(metadata %struct.groupbyobject* %gbo, i64 0, metadata !2161, metadata !2664) #1, !dbg !6840
  tail call void @llvm.dbg.value(metadata %struct._object* %23, i64 0, metadata !2162, metadata !2664) #1, !dbg !6842
  %call.i = tail call %struct._object* @_PyObject_GC_New(%struct._typeobject* nonnull @_grouper_type) #1, !dbg !6843
  %cmp.i = icmp eq %struct._object* %call.i, null, !dbg !6844
  br i1 %cmp.i, label %cleanup.125, label %if.end.109, !dbg !6846

if.end.109:                                       ; preds = %if.end.102
  %24 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %gbo, i64 0, i32 0, !dbg !6847
  %parent1.i = getelementptr inbounds %struct._object, %struct._object* %call.i, i64 1, !dbg !6848
  %25 = bitcast %struct._object* %parent1.i to %struct._object**, !dbg !6848
  store %struct._object* %24, %struct._object** %25, align 8, !dbg !6849, !tbaa !4436
  %ob_refcnt.i = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %gbo, i64 0, i32 0, i32 0, !dbg !6850
  %26 = load i64, i64* %ob_refcnt.i, align 8, !dbg !6850, !tbaa !2694
  %inc.i = add i64 %26, 1, !dbg !6850
  store i64 %inc.i, i64* %ob_refcnt.i, align 8, !dbg !6850, !tbaa !2694
  %tgtkey2.i = getelementptr inbounds %struct._object, %struct._object* %call.i, i64 1, i32 1, !dbg !6851
  %27 = bitcast %struct._typeobject** %tgtkey2.i to %struct._object**, !dbg !6851
  store %struct._object* %23, %struct._object** %27, align 8, !dbg !6852, !tbaa !4449
  %ob_refcnt3.i = getelementptr inbounds %struct._object, %struct._object* %23, i64 0, i32 0, !dbg !6853
  %28 = load i64, i64* %ob_refcnt3.i, align 8, !dbg !6853, !tbaa !2694
  %inc4.i = add i64 %28, 1, !dbg !6853
  store i64 %inc4.i, i64* %ob_refcnt3.i, align 8, !dbg !6853, !tbaa !2694
  %29 = bitcast %struct._object* %call.i to i8*, !dbg !6854
  tail call void @PyObject_GC_Track(i8* %29) #1, !dbg !6855
  tail call void @llvm.dbg.value(metadata %struct._object* %call.i, i64 0, metadata !2125, metadata !2664), !dbg !6856
  %30 = load %struct._object*, %struct._object** %currkey, align 8, !dbg !6857, !tbaa !6698
  %call111 = tail call %struct._object* (i64, ...) @PyTuple_Pack(i64 2, %struct._object* %30, %struct._object* %call.i) #1, !dbg !6858
  tail call void @llvm.dbg.value(metadata %struct._object* %call111, i64 0, metadata !2124, metadata !2664), !dbg !6859
  tail call void @llvm.dbg.value(metadata %struct._object* %call.i, i64 0, metadata !2155, metadata !2664), !dbg !6860
  %ob_refcnt115 = getelementptr inbounds %struct._object, %struct._object* %call.i, i64 0, i32 0, !dbg !6862
  %31 = load i64, i64* %ob_refcnt115, align 8, !dbg !6862, !tbaa !2694
  %dec116 = add i64 %31, -1, !dbg !6862
  store i64 %dec116, i64* %ob_refcnt115, align 8, !dbg !6862, !tbaa !2694
  %cmp117 = icmp eq i64 %dec116, 0, !dbg !6862
  br i1 %cmp117, label %if.else.119, label %cleanup.125, !dbg !6864

if.else.119:                                      ; preds = %if.end.109
  %ob_type120 = getelementptr inbounds %struct._object, %struct._object* %call.i, i64 0, i32 1, !dbg !6865
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type120, align 8, !dbg !6865, !tbaa !2667
  %tp_dealloc121 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i64 0, i32 4, !dbg !6865
  %33 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc121, align 8, !dbg !6865, !tbaa !2717
  tail call void %33(%struct._object* %call.i) #1, !dbg !6865
  br label %cleanup.125

cleanup.125.loopexit:                             ; preds = %if.else.3, %if.end.14
  br label %cleanup.125, !dbg !6867

cleanup.125:                                      ; preds = %cleanup.125.loopexit, %if.end.102, %if.else.119, %if.end.109, %if.else.30, %do.body
  %retval.3 = phi %struct._object* [ null, %do.body ], [ null, %if.else.30 ], [ %call111, %if.end.109 ], [ %call111, %if.else.119 ], [ null, %if.end.102 ], [ null, %cleanup.125.loopexit ]
  ret %struct._object* %retval.3, !dbg !6867
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @groupby_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %it = alloca %struct._object*, align 8
  %keyfunc = alloca %struct._object*, align 8
  tail call void @llvm.dbg.value(metadata %struct._typeobject* %type, i64 0, metadata !2195, metadata !2664), !dbg !6868
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2196, metadata !2664), !dbg !6869
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !2197, metadata !2664), !dbg !6870
  %0 = bitcast %struct._object** %it to i8*, !dbg !6871
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6871
  %1 = bitcast %struct._object** %keyfunc to i8*, !dbg !6871
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !6871
  tail call void @llvm.dbg.value(metadata %struct._object* @_Py_NoneStruct, i64 0, metadata !2200, metadata !2664), !dbg !6872
  store %struct._object* @_Py_NoneStruct, %struct._object** %keyfunc, align 8, !dbg !6872, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object** %it, i64 0, metadata !2199, metadata !2664), !dbg !6873
  tail call void @llvm.dbg.value(metadata %struct._object** %keyfunc, i64 0, metadata !2200, metadata !2664), !dbg !6872
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %args, %struct._object* %kwds, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.95, i64 0, i64 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @groupby_new.kwargs, i64 0, i64 0), %struct._object** nonnull %it, %struct._object** nonnull %keyfunc) #1, !dbg !6874
  %tobool = icmp eq i32 %call, 0, !dbg !6874
  br i1 %tobool, label %cleanup, label %if.end, !dbg !6876

if.end:                                           ; preds = %entry
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %type, i64 0, i32 36, !dbg !6877
  %2 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !6877, !tbaa !2835
  %call1 = call %struct._object* %2(%struct._typeobject* %type, i64 0) #1, !dbg !6878
  %cmp = icmp eq %struct._object* %call1, null, !dbg !6879
  br i1 %cmp, label %cleanup, label %if.end.3, !dbg !6881

if.end.3:                                         ; preds = %if.end
  %tgtkey = getelementptr inbounds %struct._object, %struct._object* %call1, i64 2, !dbg !6882
  call void @llvm.dbg.value(metadata %struct._object** %keyfunc, i64 0, metadata !2200, metadata !2664), !dbg !6872
  %3 = bitcast %struct._object** %keyfunc to i64*, !dbg !6883
  %4 = bitcast %struct._object* %tgtkey to i8*, !dbg !6883
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 24, i32 8, i1 false), !dbg !6884
  %5 = load i64, i64* %3, align 8, !dbg !6883, !tbaa !2681
  %keyfunc4 = getelementptr inbounds %struct._object, %struct._object* %call1, i64 1, i32 1, !dbg !6885
  %6 = bitcast %struct._typeobject** %keyfunc4 to i64*, !dbg !6886
  store i64 %5, i64* %6, align 8, !dbg !6886, !tbaa !6674
  call void @llvm.dbg.value(metadata %struct._object** %keyfunc, i64 0, metadata !2200, metadata !2664), !dbg !6872
  %7 = load %struct._object*, %struct._object** %keyfunc, align 8, !dbg !6887, !tbaa !2681
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i64 0, i32 0, !dbg !6887
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !6887, !tbaa !2694
  %inc = add i64 %8, 1, !dbg !6887
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !6887, !tbaa !2694
  call void @llvm.dbg.value(metadata %struct._object** %it, i64 0, metadata !2199, metadata !2664), !dbg !6873
  %9 = load %struct._object*, %struct._object** %it, align 8, !dbg !6888, !tbaa !2681
  %call5 = call %struct._object* @PyObject_GetIter(%struct._object* %9) #1, !dbg !6889
  %it6 = getelementptr inbounds %struct._object, %struct._object* %call1, i64 1, !dbg !6890
  %10 = bitcast %struct._object* %it6 to %struct._object**, !dbg !6890
  store %struct._object* %call5, %struct._object** %10, align 8, !dbg !6891, !tbaa !6661
  %cmp8 = icmp eq %struct._object* %call5, null, !dbg !6892
  br i1 %cmp8, label %do.body, label %cleanup, !dbg !6893

do.body:                                          ; preds = %if.end.3
  call void @llvm.dbg.value(metadata %struct._object* %call1, i64 0, metadata !2201, metadata !2664), !dbg !6894
  %ob_refcnt10 = getelementptr inbounds %struct._object, %struct._object* %call1, i64 0, i32 0, !dbg !6896
  %11 = load i64, i64* %ob_refcnt10, align 8, !dbg !6896, !tbaa !2694
  %dec = add i64 %11, -1, !dbg !6896
  store i64 %dec, i64* %ob_refcnt10, align 8, !dbg !6896, !tbaa !2694
  %cmp11 = icmp eq i64 %dec, 0, !dbg !6896
  br i1 %cmp11, label %if.else, label %cleanup, !dbg !6898

if.else:                                          ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call1, i64 0, i32 1, !dbg !6899
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6899, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i64 0, i32 4, !dbg !6899
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6899, !tbaa !2717
  call void %13(%struct._object* %call1) #1, !dbg !6899
  br label %cleanup

cleanup:                                          ; preds = %if.end.3, %if.else, %do.body, %if.end, %entry
  %retval.0 = phi %struct._object* [ null, %entry ], [ null, %if.end ], [ null, %do.body ], [ null, %if.else ], [ %call1, %if.end.3 ]
  call void @llvm.lifetime.end(i64 8, i8* %1) #1, !dbg !6901
  call void @llvm.lifetime.end(i64 8, i8* %0) #1, !dbg !6901
  ret %struct._object* %retval.0, !dbg !6901
}

declare i32 @PyObject_RichCompareBool(%struct._object*, %struct._object*, i32) #3

declare %struct._object* @PyTuple_Pack(i64, ...) #3

declare %struct._object* @_PyObject_GC_New(%struct._typeobject*) #3

declare void @PyObject_GC_Track(i8*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @groupby_reduce(%struct.groupbyobject* nocapture readonly %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.groupbyobject* %lz, i64 0, metadata !2166, metadata !2664), !dbg !6902
  %tgtkey = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %lz, i64 0, i32 3, !dbg !6903
  %0 = load %struct._object*, %struct._object** %tgtkey, align 8, !dbg !6903, !tbaa !6686
  %tobool = icmp eq %struct._object* %0, null, !dbg !6905
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !6906

land.lhs.true:                                    ; preds = %entry
  %currkey = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %lz, i64 0, i32 4, !dbg !6907
  %1 = load %struct._object*, %struct._object** %currkey, align 8, !dbg !6907, !tbaa !6698
  %tobool1 = icmp eq %struct._object* %1, null, !dbg !6908
  br i1 %tobool1, label %if.else, label %land.lhs.true.2, !dbg !6909

land.lhs.true.2:                                  ; preds = %land.lhs.true
  %currvalue = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %lz, i64 0, i32 5, !dbg !6910
  %2 = load %struct._object*, %struct._object** %currvalue, align 8, !dbg !6910, !tbaa !6710
  %tobool3 = icmp eq %struct._object* %2, null, !dbg !6911
  br i1 %tobool3, label %if.else, label %if.then, !dbg !6912

if.then:                                          ; preds = %land.lhs.true.2
  %ob_type = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %lz, i64 0, i32 0, i32 1, !dbg !6913
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6913, !tbaa !2667
  %it = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %lz, i64 0, i32 1, !dbg !6914
  %4 = load %struct._object*, %struct._object** %it, align 8, !dbg !6914, !tbaa !6661
  %keyfunc = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %lz, i64 0, i32 2, !dbg !6915
  %5 = load %struct._object*, %struct._object** %keyfunc, align 8, !dbg !6915, !tbaa !6674
  %call = tail call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.92, i64 0, i64 0), %struct._typeobject* %3, %struct._object* %4, %struct._object* %5, %struct._object* %1, %struct._object* %2, %struct._object* %0) #1, !dbg !6916
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !2167, metadata !2664), !dbg !6917
  br label %if.end, !dbg !6918

if.else:                                          ; preds = %land.lhs.true.2, %land.lhs.true, %entry
  %ob_type7 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %lz, i64 0, i32 0, i32 1, !dbg !6919
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type7, align 8, !dbg !6919, !tbaa !2667
  %it8 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %lz, i64 0, i32 1, !dbg !6920
  %7 = load %struct._object*, %struct._object** %it8, align 8, !dbg !6920, !tbaa !6661
  %keyfunc9 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %lz, i64 0, i32 2, !dbg !6921
  %8 = load %struct._object*, %struct._object** %keyfunc9, align 8, !dbg !6921, !tbaa !6674
  %call10 = tail call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i64 0, i64 0), %struct._typeobject* %6, %struct._object* %7, %struct._object* %8) #1, !dbg !6922
  tail call void @llvm.dbg.value(metadata %struct._object* %call10, i64 0, metadata !2167, metadata !2664), !dbg !6917
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %value.0 = phi %struct._object* [ %call, %if.then ], [ %call10, %if.else ]
  ret %struct._object* %value.0, !dbg !6923
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @groupby_setstate(%struct.groupbyobject* nocapture %lz, %struct._object* %state) #0 {
entry:
  %currkey = alloca %struct._object*, align 8
  %currvalue = alloca %struct._object*, align 8
  %tgtkey = alloca %struct._object*, align 8
  tail call void @llvm.dbg.value(metadata %struct.groupbyobject* %lz, i64 0, metadata !2170, metadata !2664), !dbg !6924
  tail call void @llvm.dbg.value(metadata %struct._object* %state, i64 0, metadata !2171, metadata !2664), !dbg !6925
  %0 = bitcast %struct._object** %currkey to i8*, !dbg !6926
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6926
  %1 = bitcast %struct._object** %currvalue to i8*, !dbg !6926
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !6926
  %2 = bitcast %struct._object** %tgtkey to i8*, !dbg !6926
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !6926
  tail call void @llvm.dbg.value(metadata %struct._object** %currkey, i64 0, metadata !2172, metadata !2664), !dbg !6927
  tail call void @llvm.dbg.value(metadata %struct._object** %currvalue, i64 0, metadata !2173, metadata !2664), !dbg !6928
  tail call void @llvm.dbg.value(metadata %struct._object** %tgtkey, i64 0, metadata !2174, metadata !2664), !dbg !6929
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %state, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.93, i64 0, i64 0), %struct._object** nonnull %currkey, %struct._object** nonnull %currvalue, %struct._object** nonnull %tgtkey) #1, !dbg !6930
  %tobool = icmp eq i32 %call, 0, !dbg !6930
  br i1 %tobool, label %cleanup, label %do.body, !dbg !6932

do.body:                                          ; preds = %entry
  %currkey1 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %lz, i64 0, i32 4, !dbg !6933
  %3 = load %struct._object*, %struct._object** %currkey1, align 8, !dbg !6933, !tbaa !6698
  call void @llvm.dbg.value(metadata %struct._object* %3, i64 0, metadata !2175, metadata !2664), !dbg !6933
  %cmp = icmp eq %struct._object* %3, null, !dbg !6935
  br i1 %cmp, label %if.end.8, label %if.then.2, !dbg !6936

if.then.2:                                        ; preds = %do.body
  store %struct._object* null, %struct._object** %currkey1, align 8, !dbg !6937, !tbaa !6698
  call void @llvm.dbg.value(metadata %struct._object* %3, i64 0, metadata !2177, metadata !2664), !dbg !6939
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %3, i64 0, i32 0, !dbg !6941
  %4 = load i64, i64* %ob_refcnt, align 8, !dbg !6941, !tbaa !2694
  %dec = add i64 %4, -1, !dbg !6941
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6941, !tbaa !2694
  %cmp5 = icmp eq i64 %dec, 0, !dbg !6941
  br i1 %cmp5, label %if.else, label %if.end.8, !dbg !6943

if.else:                                          ; preds = %if.then.2
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %3, i64 0, i32 1, !dbg !6944
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6944, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i64 0, i32 4, !dbg !6944
  %6 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6944, !tbaa !2717
  call void %6(%struct._object* %3) #1, !dbg !6944
  br label %if.end.8

if.end.8:                                         ; preds = %if.else, %if.then.2, %do.body
  call void @llvm.dbg.value(metadata %struct._object** %currkey, i64 0, metadata !2172, metadata !2664), !dbg !6927
  %7 = load %struct._object*, %struct._object** %currkey, align 8, !dbg !6946, !tbaa !2681
  store %struct._object* %7, %struct._object** %currkey1, align 8, !dbg !6947, !tbaa !6698
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %7, i64 0, i32 0, !dbg !6948
  %8 = load i64, i64* %ob_refcnt13, align 8, !dbg !6948, !tbaa !2694
  %inc = add i64 %8, 1, !dbg !6948
  store i64 %inc, i64* %ob_refcnt13, align 8, !dbg !6948, !tbaa !2694
  %currvalue16 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %lz, i64 0, i32 5, !dbg !6949
  %9 = load %struct._object*, %struct._object** %currvalue16, align 8, !dbg !6949, !tbaa !6710
  call void @llvm.dbg.value(metadata %struct._object* %9, i64 0, metadata !2181, metadata !2664), !dbg !6949
  %cmp17 = icmp eq %struct._object* %9, null, !dbg !6951
  br i1 %cmp17, label %if.end.32, label %if.then.18, !dbg !6952

if.then.18:                                       ; preds = %if.end.8
  store %struct._object* null, %struct._object** %currvalue16, align 8, !dbg !6953, !tbaa !6710
  call void @llvm.dbg.value(metadata %struct._object* %9, i64 0, metadata !2183, metadata !2664), !dbg !6955
  %ob_refcnt22 = getelementptr inbounds %struct._object, %struct._object* %9, i64 0, i32 0, !dbg !6957
  %10 = load i64, i64* %ob_refcnt22, align 8, !dbg !6957, !tbaa !2694
  %dec23 = add i64 %10, -1, !dbg !6957
  store i64 %dec23, i64* %ob_refcnt22, align 8, !dbg !6957, !tbaa !2694
  %cmp24 = icmp eq i64 %dec23, 0, !dbg !6957
  br i1 %cmp24, label %if.else.26, label %if.end.32, !dbg !6959

if.else.26:                                       ; preds = %if.then.18
  %ob_type27 = getelementptr inbounds %struct._object, %struct._object* %9, i64 0, i32 1, !dbg !6960
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type27, align 8, !dbg !6960, !tbaa !2667
  %tp_dealloc28 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i64 0, i32 4, !dbg !6960
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc28, align 8, !dbg !6960, !tbaa !2717
  call void %12(%struct._object* %9) #1, !dbg !6960
  br label %if.end.32

if.end.32:                                        ; preds = %if.else.26, %if.then.18, %if.end.8
  call void @llvm.dbg.value(metadata %struct._object** %currvalue, i64 0, metadata !2173, metadata !2664), !dbg !6928
  %13 = load %struct._object*, %struct._object** %currvalue, align 8, !dbg !6962, !tbaa !2681
  store %struct._object* %13, %struct._object** %currvalue16, align 8, !dbg !6963, !tbaa !6710
  %ob_refcnt37 = getelementptr inbounds %struct._object, %struct._object* %13, i64 0, i32 0, !dbg !6964
  %14 = load i64, i64* %ob_refcnt37, align 8, !dbg !6964, !tbaa !2694
  %inc38 = add i64 %14, 1, !dbg !6964
  store i64 %inc38, i64* %ob_refcnt37, align 8, !dbg !6964, !tbaa !2694
  %tgtkey41 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %lz, i64 0, i32 3, !dbg !6965
  %15 = load %struct._object*, %struct._object** %tgtkey41, align 8, !dbg !6965, !tbaa !6686
  call void @llvm.dbg.value(metadata %struct._object* %15, i64 0, metadata !2187, metadata !2664), !dbg !6965
  %cmp42 = icmp eq %struct._object* %15, null, !dbg !6967
  br i1 %cmp42, label %if.end.57, label %if.then.43, !dbg !6968

if.then.43:                                       ; preds = %if.end.32
  store %struct._object* null, %struct._object** %tgtkey41, align 8, !dbg !6969, !tbaa !6686
  call void @llvm.dbg.value(metadata %struct._object* %15, i64 0, metadata !2189, metadata !2664), !dbg !6971
  %ob_refcnt47 = getelementptr inbounds %struct._object, %struct._object* %15, i64 0, i32 0, !dbg !6973
  %16 = load i64, i64* %ob_refcnt47, align 8, !dbg !6973, !tbaa !2694
  %dec48 = add i64 %16, -1, !dbg !6973
  store i64 %dec48, i64* %ob_refcnt47, align 8, !dbg !6973, !tbaa !2694
  %cmp49 = icmp eq i64 %dec48, 0, !dbg !6973
  br i1 %cmp49, label %if.else.51, label %if.end.57, !dbg !6975

if.else.51:                                       ; preds = %if.then.43
  %ob_type52 = getelementptr inbounds %struct._object, %struct._object* %15, i64 0, i32 1, !dbg !6976
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type52, align 8, !dbg !6976, !tbaa !2667
  %tp_dealloc53 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i64 0, i32 4, !dbg !6976
  %18 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc53, align 8, !dbg !6976, !tbaa !2717
  call void %18(%struct._object* %15) #1, !dbg !6976
  br label %if.end.57

if.end.57:                                        ; preds = %if.else.51, %if.then.43, %if.end.32
  call void @llvm.dbg.value(metadata %struct._object** %tgtkey, i64 0, metadata !2174, metadata !2664), !dbg !6929
  %19 = load %struct._object*, %struct._object** %tgtkey, align 8, !dbg !6978, !tbaa !2681
  store %struct._object* %19, %struct._object** %tgtkey41, align 8, !dbg !6979, !tbaa !6686
  %ob_refcnt62 = getelementptr inbounds %struct._object, %struct._object* %19, i64 0, i32 0, !dbg !6980
  %20 = load i64, i64* %ob_refcnt62, align 8, !dbg !6980, !tbaa !2694
  %inc63 = add i64 %20, 1, !dbg !6980
  store i64 %inc63, i64* %ob_refcnt62, align 8, !dbg !6980, !tbaa !2694
  %21 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !6981, !tbaa !2694
  %inc64 = add i64 %21, 1, !dbg !6981
  store i64 %inc64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !6981, !tbaa !2694
  br label %cleanup, !dbg !6981

cleanup:                                          ; preds = %entry, %if.end.57
  %retval.0 = phi %struct._object* [ @_Py_NoneStruct, %if.end.57 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 8, i8* %2) #1, !dbg !6982
  call void @llvm.lifetime.end(i64 8, i8* %1) #1, !dbg !6982
  call void @llvm.lifetime.end(i64 8, i8* %0) #1, !dbg !6982
  ret %struct._object* %retval.0, !dbg !6982
}

; Function Attrs: nounwind uwtable
define internal void @_grouper_dealloc(%struct._grouperobject* %igo) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._grouperobject* %igo, i64 0, metadata !2209, metadata !2664), !dbg !6983
  %0 = bitcast %struct._grouperobject* %igo to i8*, !dbg !6984
  tail call void @PyObject_GC_UnTrack(i8* %0) #1, !dbg !6985
  %parent = getelementptr inbounds %struct._grouperobject, %struct._grouperobject* %igo, i64 0, i32 1, !dbg !6986
  %1 = load %struct._object*, %struct._object** %parent, align 8, !dbg !6986, !tbaa !4436
  tail call void @llvm.dbg.value(metadata %struct._object* %1, i64 0, metadata !2210, metadata !2664), !dbg !6986
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !6988
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !6988, !tbaa !2694
  %dec = add i64 %2, -1, !dbg !6988
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6988, !tbaa !2694
  %cmp = icmp eq i64 %dec, 0, !dbg !6988
  br i1 %cmp, label %if.else, label %if.end, !dbg !6990

if.else:                                          ; preds = %entry
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 1, !dbg !6991
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6991, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 4, !dbg !6991
  %4 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6991, !tbaa !2717
  tail call void %4(%struct._object* %1) #1, !dbg !6991
  br label %if.end

if.end:                                           ; preds = %entry, %if.else
  %tgtkey = getelementptr inbounds %struct._grouperobject, %struct._grouperobject* %igo, i64 0, i32 2, !dbg !6993
  %5 = load %struct._object*, %struct._object** %tgtkey, align 8, !dbg !6993, !tbaa !4449
  tail call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !2212, metadata !2664), !dbg !6993
  %ob_refcnt3 = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 0, !dbg !6995
  %6 = load i64, i64* %ob_refcnt3, align 8, !dbg !6995, !tbaa !2694
  %dec4 = add i64 %6, -1, !dbg !6995
  store i64 %dec4, i64* %ob_refcnt3, align 8, !dbg !6995, !tbaa !2694
  %cmp5 = icmp eq i64 %dec4, 0, !dbg !6995
  br i1 %cmp5, label %if.else.7, label %if.end.10, !dbg !6997

if.else.7:                                        ; preds = %if.end
  %ob_type8 = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 1, !dbg !6998
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type8, align 8, !dbg !6998, !tbaa !2667
  %tp_dealloc9 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i64 0, i32 4, !dbg !6998
  %8 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc9, align 8, !dbg !6998, !tbaa !2717
  tail call void %8(%struct._object* %5) #1, !dbg !6998
  br label %if.end.10

if.end.10:                                        ; preds = %if.end, %if.else.7
  tail call void @PyObject_GC_Del(i8* %0) #1, !dbg !7000
  ret void, !dbg !7001
}

; Function Attrs: nounwind uwtable
define internal i32 @_grouper_traverse(%struct._grouperobject* nocapture readonly %igo, i32 (%struct._object*, i8*)* nocapture %visit, i8* %arg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._grouperobject* %igo, i64 0, metadata !2218, metadata !2664), !dbg !7002
  tail call void @llvm.dbg.value(metadata i32 (%struct._object*, i8*)* %visit, i64 0, metadata !2219, metadata !2664), !dbg !7003
  tail call void @llvm.dbg.value(metadata i8* %arg, i64 0, metadata !2220, metadata !2664), !dbg !7004
  %parent = getelementptr inbounds %struct._grouperobject, %struct._grouperobject* %igo, i64 0, i32 1, !dbg !7005
  %0 = load %struct._object*, %struct._object** %parent, align 8, !dbg !7005, !tbaa !4436
  %tobool = icmp eq %struct._object* %0, null, !dbg !7005
  br i1 %tobool, label %do.body.5, label %if.then, !dbg !7007

if.then:                                          ; preds = %entry
  %call = tail call i32 %visit(%struct._object* %0, i8* %arg) #1, !dbg !7008
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !2221, metadata !2664), !dbg !7008
  %tobool2 = icmp eq i32 %call, 0, !dbg !7010
  br i1 %tobool2, label %do.body.5, label %return

do.body.5:                                        ; preds = %entry, %if.then
  %tgtkey = getelementptr inbounds %struct._grouperobject, %struct._grouperobject* %igo, i64 0, i32 2, !dbg !7012
  %1 = load %struct._object*, %struct._object** %tgtkey, align 8, !dbg !7012, !tbaa !4449
  %tobool6 = icmp eq %struct._object* %1, null, !dbg !7012
  br i1 %tobool6, label %do.end.18, label %if.then.7, !dbg !7014

if.then.7:                                        ; preds = %do.body.5
  %call10 = tail call i32 %visit(%struct._object* %1, i8* %arg) #1, !dbg !7015
  tail call void @llvm.dbg.value(metadata i32 %call10, i64 0, metadata !2225, metadata !2664), !dbg !7015
  %tobool11 = icmp eq i32 %call10, 0, !dbg !7017
  br i1 %tobool11, label %do.end.18, label %return

do.end.18:                                        ; preds = %do.body.5, %if.then.7
  br label %return, !dbg !7019

return:                                           ; preds = %if.then.7, %if.then, %do.end.18
  %retval.3 = phi i32 [ 0, %do.end.18 ], [ %call10, %if.then.7 ], [ %call, %if.then ]
  ret i32 %retval.3, !dbg !7020
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @_grouper_next(%struct._grouperobject* nocapture readonly %igo) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._grouperobject* %igo, i64 0, metadata !2233, metadata !2664), !dbg !7021
  %parent = getelementptr inbounds %struct._grouperobject, %struct._grouperobject* %igo, i64 0, i32 1, !dbg !7022
  %0 = bitcast %struct._object** %parent to %struct.groupbyobject**, !dbg !7022
  %1 = load %struct.groupbyobject*, %struct.groupbyobject** %0, align 8, !dbg !7022, !tbaa !4436
  tail call void @llvm.dbg.value(metadata %struct.groupbyobject* %1, i64 0, metadata !2234, metadata !2664), !dbg !7023
  %currvalue = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %1, i64 0, i32 5, !dbg !7024
  %2 = load %struct._object*, %struct._object** %currvalue, align 8, !dbg !7024, !tbaa !6710
  %cmp = icmp eq %struct._object* %2, null, !dbg !7025
  br i1 %cmp, label %if.then, label %entry.if.end.17_crit_edge, !dbg !7026

entry.if.end.17_crit_edge:                        ; preds = %entry
  %currkey18.phi.trans.insert = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %1, i64 0, i32 4, !dbg !7027
  %.pre = load %struct._object*, %struct._object** %currkey18.phi.trans.insert, align 8, !dbg !7027, !tbaa !6698
  br label %if.end.17, !dbg !7026

if.then:                                          ; preds = %entry
  %it = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %1, i64 0, i32 1, !dbg !7028
  %3 = load %struct._object*, %struct._object** %it, align 8, !dbg !7028, !tbaa !6661
  %call = tail call %struct._object* @PyIter_Next(%struct._object* %3) #1, !dbg !7029
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !2235, metadata !2664), !dbg !7030
  %cmp1 = icmp eq %struct._object* %call, null, !dbg !7031
  br i1 %cmp1, label %cleanup, label %if.end, !dbg !7033

if.end:                                           ; preds = %if.then
  %keyfunc = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %1, i64 0, i32 2, !dbg !7034
  %4 = load %struct._object*, %struct._object** %keyfunc, align 8, !dbg !7034, !tbaa !6674
  %cmp3 = icmp eq %struct._object* %4, @_Py_NoneStruct, !dbg !7035
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !7036

if.then.4:                                        ; preds = %if.end
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !2236, metadata !2664), !dbg !7037
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 0, !dbg !7038
  %5 = load i64, i64* %ob_refcnt, align 8, !dbg !7038, !tbaa !2694
  %inc = add i64 %5, 1, !dbg !7038
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !7038, !tbaa !2694
  br label %if.end.15, !dbg !7040

if.else:                                          ; preds = %if.end
  %call6 = tail call %struct._object* (%struct._object*, ...) @PyObject_CallFunctionObjArgs(%struct._object* %4, %struct._object* %call, i8* null) #1, !dbg !7041
  tail call void @llvm.dbg.value(metadata %struct._object* %call6, i64 0, metadata !2236, metadata !2664), !dbg !7037
  %cmp7 = icmp eq %struct._object* %call6, null, !dbg !7042
  br i1 %cmp7, label %do.body, label %if.end.15, !dbg !7043

do.body:                                          ; preds = %if.else
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !2239, metadata !2664), !dbg !7044
  %ob_refcnt9 = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 0, !dbg !7046
  %6 = load i64, i64* %ob_refcnt9, align 8, !dbg !7046, !tbaa !2694
  %dec = add i64 %6, -1, !dbg !7046
  store i64 %dec, i64* %ob_refcnt9, align 8, !dbg !7046, !tbaa !2694
  %cmp10 = icmp eq i64 %dec, 0, !dbg !7046
  br i1 %cmp10, label %if.else.12, label %cleanup, !dbg !7048

if.else.12:                                       ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 1, !dbg !7049
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7049, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i64 0, i32 4, !dbg !7049
  %8 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7049, !tbaa !2717
  tail call void %8(%struct._object* %call) #1, !dbg !7049
  br label %cleanup

if.end.15:                                        ; preds = %if.else, %if.then.4
  %newkey.0 = phi %struct._object* [ %call, %if.then.4 ], [ %call6, %if.else ]
  %currkey = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %1, i64 0, i32 4, !dbg !7051
  store %struct._object* %newkey.0, %struct._object** %currkey, align 8, !dbg !7052, !tbaa !6698
  store %struct._object* %call, %struct._object** %currvalue, align 8, !dbg !7053, !tbaa !6710
  br label %if.end.17, !dbg !7054

if.end.17:                                        ; preds = %entry.if.end.17_crit_edge, %if.end.15
  %currkey18.pre-phi = phi %struct._object** [ %currkey18.phi.trans.insert, %entry.if.end.17_crit_edge ], [ %currkey, %if.end.15 ], !dbg !7027
  %9 = phi %struct._object* [ %.pre, %entry.if.end.17_crit_edge ], [ %newkey.0, %if.end.15 ], !dbg !7027
  %tgtkey = getelementptr inbounds %struct._grouperobject, %struct._grouperobject* %igo, i64 0, i32 2, !dbg !7055
  %10 = load %struct._object*, %struct._object** %tgtkey, align 8, !dbg !7055, !tbaa !4449
  %call19 = tail call i32 @PyObject_RichCompareBool(%struct._object* %10, %struct._object* %9, i32 2) #1, !dbg !7056
  tail call void @llvm.dbg.value(metadata i32 %call19, i64 0, metadata !2238, metadata !2664), !dbg !7057
  %cmp20 = icmp slt i32 %call19, 1, !dbg !7058
  br i1 %cmp20, label %cleanup, label %if.end.22, !dbg !7060

if.end.22:                                        ; preds = %if.end.17
  %11 = load %struct._object*, %struct._object** %currvalue, align 8, !dbg !7061, !tbaa !6710
  tail call void @llvm.dbg.value(metadata %struct._object* %11, i64 0, metadata !2237, metadata !2664), !dbg !7062
  store %struct._object* null, %struct._object** %currvalue, align 8, !dbg !7063, !tbaa !6710
  %12 = load %struct._object*, %struct._object** %currkey18.pre-phi, align 8, !dbg !7064, !tbaa !6698
  tail call void @llvm.dbg.value(metadata %struct._object* %12, i64 0, metadata !2247, metadata !2664), !dbg !7064
  %cmp27 = icmp eq %struct._object* %12, null, !dbg !7066
  br i1 %cmp27, label %cleanup, label %if.then.28, !dbg !7067

if.then.28:                                       ; preds = %if.end.22
  store %struct._object* null, %struct._object** %currkey18.pre-phi, align 8, !dbg !7068, !tbaa !6698
  tail call void @llvm.dbg.value(metadata %struct._object* %12, i64 0, metadata !2249, metadata !2664), !dbg !7070
  %ob_refcnt32 = getelementptr inbounds %struct._object, %struct._object* %12, i64 0, i32 0, !dbg !7072
  %13 = load i64, i64* %ob_refcnt32, align 8, !dbg !7072, !tbaa !2694
  %dec33 = add i64 %13, -1, !dbg !7072
  store i64 %dec33, i64* %ob_refcnt32, align 8, !dbg !7072, !tbaa !2694
  %cmp34 = icmp eq i64 %dec33, 0, !dbg !7072
  br i1 %cmp34, label %if.else.36, label %cleanup, !dbg !7074

if.else.36:                                       ; preds = %if.then.28
  %ob_type37 = getelementptr inbounds %struct._object, %struct._object* %12, i64 0, i32 1, !dbg !7075
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type37, align 8, !dbg !7075, !tbaa !2667
  %tp_dealloc38 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i64 0, i32 4, !dbg !7075
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc38, align 8, !dbg !7075, !tbaa !2717
  tail call void %15(%struct._object* %12) #1, !dbg !7075
  br label %cleanup

cleanup:                                          ; preds = %if.end.22, %if.then.28, %if.else.36, %if.end.17, %if.else.12, %do.body, %if.then
  %retval.0 = phi %struct._object* [ null, %if.then ], [ null, %do.body ], [ null, %if.else.12 ], [ null, %if.end.17 ], [ %11, %if.else.36 ], [ %11, %if.then.28 ], [ %11, %if.end.22 ]
  ret %struct._object* %retval.0, !dbg !7077
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @_grouper_new(%struct._typeobject* nocapture readnone %type, %struct._object* %args, %struct._object* nocapture readnone %kwds) #0 {
entry:
  %parent = alloca %struct._object*, align 8
  %tgtkey = alloca %struct._object*, align 8
  tail call void @llvm.dbg.value(metadata %struct._typeobject* %type, i64 0, metadata !2258, metadata !2664), !dbg !7078
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2259, metadata !2664), !dbg !7079
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !2260, metadata !2664), !dbg !7080
  %0 = bitcast %struct._object** %parent to i8*, !dbg !7081
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7081
  %1 = bitcast %struct._object** %tgtkey to i8*, !dbg !7081
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !7081
  tail call void @llvm.dbg.value(metadata %struct._object** %parent, i64 0, metadata !2261, metadata !2664), !dbg !7082
  tail call void @llvm.dbg.value(metadata %struct._object** %tgtkey, i64 0, metadata !2262, metadata !2664), !dbg !7083
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %args, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.97, i64 0, i64 0), %struct._typeobject* nonnull @groupby_type, %struct._object** nonnull %parent, %struct._object** nonnull %tgtkey) #1, !dbg !7084
  %tobool = icmp eq i32 %call, 0, !dbg !7084
  br i1 %tobool, label %cleanup, label %if.end, !dbg !7086

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct._object** %parent, i64 0, metadata !2261, metadata !2664), !dbg !7082
  %2 = bitcast %struct._object** %parent to %struct.groupbyobject**, !dbg !7087
  %3 = load %struct.groupbyobject*, %struct.groupbyobject** %2, align 8, !dbg !7087, !tbaa !2681
  call void @llvm.dbg.value(metadata %struct._object** %tgtkey, i64 0, metadata !2262, metadata !2664), !dbg !7083
  %4 = load %struct._object*, %struct._object** %tgtkey, align 8, !dbg !7088, !tbaa !2681
  call void @llvm.dbg.value(metadata %struct.groupbyobject* %3, i64 0, metadata !2161, metadata !2664) #1, !dbg !7089
  call void @llvm.dbg.value(metadata %struct._object* %4, i64 0, metadata !2162, metadata !2664) #1, !dbg !7091
  %call.i = call %struct._object* @_PyObject_GC_New(%struct._typeobject* nonnull @_grouper_type) #1, !dbg !7092
  %cmp.i = icmp eq %struct._object* %call.i, null, !dbg !7093
  br i1 %cmp.i, label %cleanup, label %if.end.i, !dbg !7094

if.end.i:                                         ; preds = %if.end
  %5 = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %3, i64 0, i32 0, !dbg !7095
  %parent1.i = getelementptr inbounds %struct._object, %struct._object* %call.i, i64 1, !dbg !7096
  %6 = bitcast %struct._object* %parent1.i to %struct._object**, !dbg !7096
  store %struct._object* %5, %struct._object** %6, align 8, !dbg !7097, !tbaa !4436
  %ob_refcnt.i = getelementptr inbounds %struct.groupbyobject, %struct.groupbyobject* %3, i64 0, i32 0, i32 0, !dbg !7098
  %7 = load i64, i64* %ob_refcnt.i, align 8, !dbg !7098, !tbaa !2694
  %inc.i = add i64 %7, 1, !dbg !7098
  store i64 %inc.i, i64* %ob_refcnt.i, align 8, !dbg !7098, !tbaa !2694
  %tgtkey2.i = getelementptr inbounds %struct._object, %struct._object* %call.i, i64 1, i32 1, !dbg !7099
  %8 = bitcast %struct._typeobject** %tgtkey2.i to %struct._object**, !dbg !7099
  store %struct._object* %4, %struct._object** %8, align 8, !dbg !7100, !tbaa !4449
  %ob_refcnt3.i = getelementptr inbounds %struct._object, %struct._object* %4, i64 0, i32 0, !dbg !7101
  %9 = load i64, i64* %ob_refcnt3.i, align 8, !dbg !7101, !tbaa !2694
  %inc4.i = add i64 %9, 1, !dbg !7101
  store i64 %inc4.i, i64* %ob_refcnt3.i, align 8, !dbg !7101, !tbaa !2694
  %10 = bitcast %struct._object* %call.i to i8*, !dbg !7102
  call void @PyObject_GC_Track(i8* %10) #1, !dbg !7103
  br label %cleanup, !dbg !7104

cleanup:                                          ; preds = %if.end.i, %if.end, %entry
  %retval.0 = phi %struct._object* [ null, %entry ], [ %call.i, %if.end.i ], [ null, %if.end ]
  call void @llvm.lifetime.end(i64 8, i8* %1) #1, !dbg !7105
  call void @llvm.lifetime.end(i64 8, i8* %0) #1, !dbg !7105
  ret %struct._object* %retval.0, !dbg !7105
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @_grouper_reduce(%struct._grouperobject* nocapture readonly %lz) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._grouperobject* %lz, i64 0, metadata !2255, metadata !2664), !dbg !7106
  %ob_type = getelementptr inbounds %struct._grouperobject, %struct._grouperobject* %lz, i64 0, i32 0, i32 1, !dbg !7107
  %0 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7107, !tbaa !2667
  %parent = getelementptr inbounds %struct._grouperobject, %struct._grouperobject* %lz, i64 0, i32 1, !dbg !7108
  %1 = load %struct._object*, %struct._object** %parent, align 8, !dbg !7108, !tbaa !4436
  %tgtkey = getelementptr inbounds %struct._grouperobject, %struct._grouperobject* %lz, i64 0, i32 2, !dbg !7109
  %2 = load %struct._object*, %struct._object** %tgtkey, align 8, !dbg !7109, !tbaa !4449
  %call = tail call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i64 0, i64 0), %struct._typeobject* %0, %struct._object* %1, %struct._object* %2) #1, !dbg !7110
  ret %struct._object* %call, !dbg !7111
}

; Function Attrs: nounwind uwtable
define internal void @tee_dealloc(%struct.teeobject* %to) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.teeobject* %to, i64 0, metadata !2267, metadata !2664), !dbg !7112
  %0 = bitcast %struct.teeobject* %to to i8*, !dbg !7113
  tail call void @PyObject_GC_UnTrack(i8* %0) #1, !dbg !7114
  tail call void @llvm.dbg.value(metadata %struct.teeobject* %to, i64 0, metadata !2283, metadata !2664) #1, !dbg !7115
  %weakreflist.i = getelementptr inbounds %struct.teeobject, %struct.teeobject* %to, i64 0, i32 3, !dbg !7117
  %1 = load %struct._object*, %struct._object** %weakreflist.i, align 8, !dbg !7117, !tbaa !7119
  %cmp.i = icmp eq %struct._object* %1, null, !dbg !7121
  br i1 %cmp.i, label %do.body.i, label %if.then.i, !dbg !7122

if.then.i:                                        ; preds = %entry
  %2 = getelementptr inbounds %struct.teeobject, %struct.teeobject* %to, i64 0, i32 0, !dbg !7123
  tail call void @PyObject_ClearWeakRefs(%struct._object* %2) #1, !dbg !7124
  br label %do.body.i, !dbg !7124

do.body.i:                                        ; preds = %if.then.i, %entry
  %dataobj.i = getelementptr inbounds %struct.teeobject, %struct.teeobject* %to, i64 0, i32 1, !dbg !7125
  %3 = bitcast %struct.teedataobject** %dataobj.i to %struct._object**, !dbg !7125
  %4 = load %struct._object*, %struct._object** %3, align 8, !dbg !7125, !tbaa !7127
  tail call void @llvm.dbg.value(metadata %struct._object* %4, i64 0, metadata !2284, metadata !2664) #1, !dbg !7125
  %cmp1.i = icmp eq %struct._object* %4, null, !dbg !7128
  br i1 %cmp1.i, label %tee_clear.exit, label %if.then.2.i, !dbg !7129

if.then.2.i:                                      ; preds = %do.body.i
  store %struct.teedataobject* null, %struct.teedataobject** %dataobj.i, align 8, !dbg !7130, !tbaa !7127
  tail call void @llvm.dbg.value(metadata %struct._object* %4, i64 0, metadata !2286, metadata !2664) #1, !dbg !7132
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %4, i64 0, i32 0, !dbg !7134
  %5 = load i64, i64* %ob_refcnt.i, align 8, !dbg !7134, !tbaa !2694
  %dec.i = add i64 %5, -1, !dbg !7134
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !7134, !tbaa !2694
  %cmp5.i = icmp eq i64 %dec.i, 0, !dbg !7134
  br i1 %cmp5.i, label %if.else.i, label %tee_clear.exit, !dbg !7136

if.else.i:                                        ; preds = %if.then.2.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %4, i64 0, i32 1, !dbg !7137
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !7137, !tbaa !2667
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i64 0, i32 4, !dbg !7137
  %7 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !7137, !tbaa !2717
  tail call void %7(%struct._object* %4) #1, !dbg !7137
  br label %tee_clear.exit, !dbg !7139

tee_clear.exit:                                   ; preds = %do.body.i, %if.then.2.i, %if.else.i
  tail call void @PyObject_GC_Del(i8* %0) #1, !dbg !7140
  ret void, !dbg !7141
}

; Function Attrs: nounwind uwtable
define internal i32 @tee_traverse(%struct.teeobject* nocapture readonly %to, i32 (%struct._object*, i8*)* nocapture %visit, i8* %arg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.teeobject* %to, i64 0, metadata !2272, metadata !2664), !dbg !7142
  tail call void @llvm.dbg.value(metadata i32 (%struct._object*, i8*)* %visit, i64 0, metadata !2273, metadata !2664), !dbg !7143
  tail call void @llvm.dbg.value(metadata i8* %arg, i64 0, metadata !2274, metadata !2664), !dbg !7144
  %dataobj = getelementptr inbounds %struct.teeobject, %struct.teeobject* %to, i64 0, i32 1, !dbg !7145
  %0 = bitcast %struct.teedataobject** %dataobj to %struct._object**, !dbg !7145
  %1 = load %struct._object*, %struct._object** %0, align 8, !dbg !7145, !tbaa !7127
  %tobool = icmp eq %struct._object* %1, null, !dbg !7145
  br i1 %tobool, label %do.end, label %if.then, !dbg !7147

if.then:                                          ; preds = %entry
  %call = tail call i32 %visit(%struct._object* %1, i8* %arg) #1, !dbg !7148
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !2275, metadata !2664), !dbg !7148
  %tobool2 = icmp eq i32 %call, 0, !dbg !7150
  br i1 %tobool2, label %do.end, label %return

do.end:                                           ; preds = %entry, %if.then
  br label %return, !dbg !7152

return:                                           ; preds = %if.then, %do.end
  %retval.1 = phi i32 [ 0, %do.end ], [ %call, %if.then ]
  ret i32 %retval.1, !dbg !7153
}

; Function Attrs: nounwind uwtable
define internal i32 @tee_clear(%struct.teeobject* %to) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.teeobject* %to, i64 0, metadata !2283, metadata !2664), !dbg !7154
  %weakreflist = getelementptr inbounds %struct.teeobject, %struct.teeobject* %to, i64 0, i32 3, !dbg !7155
  %0 = load %struct._object*, %struct._object** %weakreflist, align 8, !dbg !7155, !tbaa !7119
  %cmp = icmp eq %struct._object* %0, null, !dbg !7156
  br i1 %cmp, label %do.body, label %if.then, !dbg !7157

if.then:                                          ; preds = %entry
  %1 = getelementptr inbounds %struct.teeobject, %struct.teeobject* %to, i64 0, i32 0, !dbg !7158
  tail call void @PyObject_ClearWeakRefs(%struct._object* %1) #1, !dbg !7159
  br label %do.body, !dbg !7159

do.body:                                          ; preds = %entry, %if.then
  %dataobj = getelementptr inbounds %struct.teeobject, %struct.teeobject* %to, i64 0, i32 1, !dbg !7160
  %2 = bitcast %struct.teedataobject** %dataobj to %struct._object**, !dbg !7160
  %3 = load %struct._object*, %struct._object** %2, align 8, !dbg !7160, !tbaa !7127
  tail call void @llvm.dbg.value(metadata %struct._object* %3, i64 0, metadata !2284, metadata !2664), !dbg !7160
  %cmp1 = icmp eq %struct._object* %3, null, !dbg !7161
  br i1 %cmp1, label %if.end.8, label %if.then.2, !dbg !7162

if.then.2:                                        ; preds = %do.body
  store %struct.teedataobject* null, %struct.teedataobject** %dataobj, align 8, !dbg !7163, !tbaa !7127
  tail call void @llvm.dbg.value(metadata %struct._object* %3, i64 0, metadata !2286, metadata !2664), !dbg !7164
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %3, i64 0, i32 0, !dbg !7165
  %4 = load i64, i64* %ob_refcnt, align 8, !dbg !7165, !tbaa !2694
  %dec = add i64 %4, -1, !dbg !7165
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7165, !tbaa !2694
  %cmp5 = icmp eq i64 %dec, 0, !dbg !7165
  br i1 %cmp5, label %if.else, label %if.end.8, !dbg !7166

if.else:                                          ; preds = %if.then.2
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %3, i64 0, i32 1, !dbg !7167
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7167, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i64 0, i32 4, !dbg !7167
  %6 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7167, !tbaa !2717
  tail call void %6(%struct._object* %3) #1, !dbg !7167
  br label %if.end.8

if.end.8:                                         ; preds = %if.else, %if.then.2, %do.body
  ret i32 0, !dbg !7168
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @tee_next(%struct.teeobject* nocapture %to) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.teeobject* %to, i64 0, metadata !2294, metadata !2664), !dbg !7169
  %index = getelementptr inbounds %struct.teeobject, %struct.teeobject* %to, i64 0, i32 2, !dbg !7170
  %0 = load i32, i32* %index, align 4, !dbg !7170, !tbaa !7171
  %cmp = icmp sgt i32 %0, 56, !dbg !7172
  %dataobj = getelementptr inbounds %struct.teeobject, %struct.teeobject* %to, i64 0, i32 1, !dbg !7173
  %1 = load %struct.teedataobject*, %struct.teedataobject** %dataobj, align 8, !dbg !7173, !tbaa !7127
  br i1 %cmp, label %if.then, label %if.end.9, !dbg !7174

if.then:                                          ; preds = %entry
  tail call void @llvm.dbg.value(metadata %struct.teedataobject* %1, i64 0, metadata !2305, metadata !2664) #1, !dbg !7175
  %nextlink.i = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %1, i64 0, i32 3, !dbg !7177
  %2 = load %struct._object*, %struct._object** %nextlink.i, align 8, !dbg !7177, !tbaa !7179
  %cmp.i = icmp eq %struct._object* %2, null, !dbg !7181
  br i1 %cmp.i, label %if.then.i, label %if.then.do.body_crit_edge, !dbg !7182

if.then.do.body_crit_edge:                        ; preds = %if.then
  %3 = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %1, i64 0, i32 0, !dbg !7182
  %.pre50 = bitcast %struct.teedataobject** %dataobj to %struct._object**, !dbg !7183
  br label %do.body, !dbg !7182

if.then.i:                                        ; preds = %if.then
  %it.i = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %1, i64 0, i32 1, !dbg !7185
  %4 = load %struct._object*, %struct._object** %it.i, align 8, !dbg !7185, !tbaa !7186
  tail call void @llvm.dbg.value(metadata %struct._object* %4, i64 0, metadata !2310, metadata !2664) #1, !dbg !7187
  %call.i.i = tail call %struct._object* @_PyObject_GC_New(%struct._typeobject* nonnull @teedataobject_type) #1, !dbg !7189
  %cmp.i.i = icmp eq %struct._object* %call.i.i, null, !dbg !7190
  br i1 %cmp.i.i, label %teedataobject_jumplink.exit.thread, label %do.body.i, !dbg !7192

teedataobject_jumplink.exit.thread:               ; preds = %if.then.i
  store %struct._object* null, %struct._object** %nextlink.i, align 8, !dbg !7193, !tbaa !7179
  tail call void @llvm.dbg.value(metadata %struct._object* %call.i.i, i64 0, metadata !2306, metadata !2664) #1, !dbg !7194
  br label %cleanup, !dbg !7196

do.body.i:                                        ; preds = %if.then.i
  %numread.i.i = getelementptr inbounds %struct._object, %struct._object* %call.i.i, i64 1, i32 1, !dbg !7197
  %5 = bitcast %struct._typeobject** %numread.i.i to i32*, !dbg !7197
  store i32 0, i32* %5, align 4, !dbg !7198, !tbaa !7199
  %nextlink.i.i = getelementptr inbounds %struct._object, %struct._object* %call.i.i, i64 2, !dbg !7200
  %6 = bitcast %struct._object* %nextlink.i.i to %struct._object**, !dbg !7200
  store %struct._object* null, %struct._object** %6, align 8, !dbg !7201, !tbaa !7179
  %ob_refcnt.i.i = getelementptr inbounds %struct._object, %struct._object* %4, i64 0, i32 0, !dbg !7202
  %7 = load i64, i64* %ob_refcnt.i.i, align 8, !dbg !7202, !tbaa !2694
  %inc.i.i = add i64 %7, 1, !dbg !7202
  store i64 %inc.i.i, i64* %ob_refcnt.i.i, align 8, !dbg !7202, !tbaa !2694
  %it1.i.i = getelementptr inbounds %struct._object, %struct._object* %call.i.i, i64 1, !dbg !7203
  %8 = bitcast %struct._object* %it1.i.i to %struct._object**, !dbg !7203
  store %struct._object* %4, %struct._object** %8, align 8, !dbg !7204, !tbaa !7186
  %9 = bitcast %struct._object* %call.i.i to i8*, !dbg !7205
  tail call void @PyObject_GC_Track(i8* %9) #1, !dbg !7206
  store %struct._object* %call.i.i, %struct._object** %nextlink.i, align 8, !dbg !7193, !tbaa !7179
  tail call void @llvm.dbg.value(metadata %struct._object* %call.i.i, i64 0, metadata !2306, metadata !2664) #1, !dbg !7194
  %.phi.trans.insert = bitcast %struct.teedataobject** %dataobj to %struct._object**, !dbg !7183
  %.pre = load %struct._object*, %struct._object** %.phi.trans.insert, align 8, !dbg !7183, !tbaa !7127
  br label %do.body, !dbg !7207

do.body:                                          ; preds = %if.then.do.body_crit_edge, %do.body.i
  %.pre-phi = phi %struct._object** [ %.pre50, %if.then.do.body_crit_edge ], [ %.phi.trans.insert, %do.body.i ], !dbg !7183
  %10 = phi %struct._object* [ %3, %if.then.do.body_crit_edge ], [ %.pre, %do.body.i ], !dbg !7183
  %.ph = phi %struct._object* [ %2, %if.then.do.body_crit_edge ], [ %call.i.i, %do.body.i ]
  %ob_refcnt.i.39 = getelementptr inbounds %struct._object, %struct._object* %.ph, i64 0, i32 0, !dbg !7208
  %11 = load i64, i64* %ob_refcnt.i.39, align 8, !dbg !7208, !tbaa !2694
  %inc.i.40 = add i64 %11, 1, !dbg !7208
  store i64 %inc.i.40, i64* %ob_refcnt.i.39, align 8, !dbg !7208, !tbaa !2694
  tail call void @llvm.dbg.value(metadata %struct._object* %10, i64 0, metadata !2297, metadata !2664), !dbg !7183
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %10, i64 0, i32 0, !dbg !7211
  %12 = load i64, i64* %ob_refcnt, align 8, !dbg !7211, !tbaa !2694
  %dec = add i64 %12, -1, !dbg !7211
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7211, !tbaa !2694
  %cmp4 = icmp eq i64 %dec, 0, !dbg !7211
  br i1 %cmp4, label %if.else, label %if.end.6, !dbg !7213

if.else:                                          ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i64 0, i32 1, !dbg !7214
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7214, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i64 0, i32 4, !dbg !7214
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7214, !tbaa !2717
  tail call void %14(%struct._object* %10) #1, !dbg !7214
  br label %if.end.6

if.end.6:                                         ; preds = %do.body, %if.else
  store %struct._object* %.ph, %struct._object** %.pre-phi, align 8, !dbg !7216, !tbaa !7127
  store i32 0, i32* %index, align 4, !dbg !7217, !tbaa !7171
  %15 = bitcast %struct._object* %.ph to %struct.teedataobject*, !dbg !7218
  br label %if.end.9, !dbg !7218

if.end.9:                                         ; preds = %entry, %if.end.6
  %16 = phi i32 [ 0, %if.end.6 ], [ %0, %entry ], !dbg !7219
  %17 = phi %struct.teedataobject* [ %15, %if.end.6 ], [ %1, %entry ], !dbg !7220
  tail call void @llvm.dbg.value(metadata %struct.teedataobject* %17, i64 0, metadata !2316, metadata !2664) #1, !dbg !7221
  tail call void @llvm.dbg.value(metadata i32 %16, i64 0, metadata !2317, metadata !2664) #1, !dbg !7223
  %numread.i = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %17, i64 0, i32 2, !dbg !7224
  %18 = load i32, i32* %numread.i, align 4, !dbg !7224, !tbaa !7199
  %cmp.i.32 = icmp sgt i32 %18, %16, !dbg !7226
  br i1 %cmp.i.32, label %teedataobject_getitem.exit, label %if.else.i, !dbg !7227

if.else.i:                                        ; preds = %if.end.9
  %it.i.34 = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %17, i64 0, i32 1, !dbg !7228
  %19 = load %struct._object*, %struct._object** %it.i.34, align 8, !dbg !7228, !tbaa !7186
  %call.i = tail call %struct._object* @PyIter_Next(%struct._object* %19) #1, !dbg !7230
  tail call void @llvm.dbg.value(metadata %struct._object* %call.i, i64 0, metadata !2318, metadata !2664) #1, !dbg !7231
  %cmp1.i = icmp eq %struct._object* %call.i, null, !dbg !7232
  br i1 %cmp1.i, label %cleanup, label %teedataobject_getitem.exit.thread43, !dbg !7234

teedataobject_getitem.exit.thread43:              ; preds = %if.else.i
  %20 = load i32, i32* %numread.i, align 4, !dbg !7235, !tbaa !7199
  %inc.i.35 = add i32 %20, 1, !dbg !7235
  store i32 %inc.i.35, i32* %numread.i, align 4, !dbg !7235, !tbaa !7199
  %idxprom4.i = sext i32 %16 to i64, !dbg !7236
  %arrayidx6.i = getelementptr %struct.teedataobject, %struct.teedataobject* %17, i64 0, i32 4, i64 %idxprom4.i, !dbg !7236
  store %struct._object* %call.i, %struct._object** %arrayidx6.i, align 8, !dbg !7237, !tbaa !2681
  %ob_refcnt.i.36.44 = getelementptr inbounds %struct._object, %struct._object* %call.i, i64 0, i32 0, !dbg !7238
  %21 = load i64, i64* %ob_refcnt.i.36.44, align 8, !dbg !7238, !tbaa !2694
  %inc8.i.45 = add i64 %21, 1, !dbg !7238
  store i64 %inc8.i.45, i64* %ob_refcnt.i.36.44, align 8, !dbg !7238, !tbaa !2694
  tail call void @llvm.dbg.value(metadata %struct._object* %22, i64 0, metadata !2295, metadata !2664), !dbg !7239
  %.pre49 = load i32, i32* %index, align 4, !dbg !7240, !tbaa !7171
  br label %if.end.15, !dbg !7241

teedataobject_getitem.exit:                       ; preds = %if.end.9
  %idxprom.i = sext i32 %16 to i64, !dbg !7242
  %arrayidx.i = getelementptr %struct.teedataobject, %struct.teedataobject* %17, i64 0, i32 4, i64 %idxprom.i, !dbg !7242
  %22 = load %struct._object*, %struct._object** %arrayidx.i, align 8, !dbg !7242, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %22, i64 0, metadata !2318, metadata !2664) #1, !dbg !7231
  %ob_refcnt.i.36 = getelementptr inbounds %struct._object, %struct._object* %22, i64 0, i32 0, !dbg !7238
  %23 = load i64, i64* %ob_refcnt.i.36, align 8, !dbg !7238, !tbaa !2694
  %inc8.i = add i64 %23, 1, !dbg !7238
  store i64 %inc8.i, i64* %ob_refcnt.i.36, align 8, !dbg !7238, !tbaa !2694
  tail call void @llvm.dbg.value(metadata %struct._object* %22, i64 0, metadata !2295, metadata !2664), !dbg !7239
  %cmp13 = icmp eq %struct._object* %22, null, !dbg !7243
  br i1 %cmp13, label %cleanup, label %if.end.15, !dbg !7241

if.end.15:                                        ; preds = %teedataobject_getitem.exit.thread43, %teedataobject_getitem.exit
  %24 = phi i32 [ %.pre49, %teedataobject_getitem.exit.thread43 ], [ %16, %teedataobject_getitem.exit ], !dbg !7240
  %value.0.i47 = phi %struct._object* [ %call.i, %teedataobject_getitem.exit.thread43 ], [ %22, %teedataobject_getitem.exit ]
  %inc = add i32 %24, 1, !dbg !7240
  store i32 %inc, i32* %index, align 4, !dbg !7240, !tbaa !7171
  br label %cleanup, !dbg !7245

cleanup:                                          ; preds = %if.else.i, %teedataobject_jumplink.exit.thread, %teedataobject_getitem.exit, %if.end.15
  %retval.0 = phi %struct._object* [ %value.0.i47, %if.end.15 ], [ null, %teedataobject_getitem.exit ], [ null, %teedataobject_jumplink.exit.thread ], [ null, %if.else.i ]
  ret %struct._object* %retval.0, !dbg !7246
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @tee_new(%struct._typeobject* nocapture readnone %type, %struct._object* %args, %struct._object* nocapture readnone %kw) #0 {
entry:
  %iterable = alloca %struct._object*, align 8
  tail call void @llvm.dbg.value(metadata %struct._typeobject* %type, i64 0, metadata !2342, metadata !2664), !dbg !7247
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2343, metadata !2664), !dbg !7248
  tail call void @llvm.dbg.value(metadata %struct._object* %kw, i64 0, metadata !2344, metadata !2664), !dbg !7249
  %0 = bitcast %struct._object** %iterable to i8*, !dbg !7250
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7250
  tail call void @llvm.dbg.value(metadata %struct._object** %iterable, i64 0, metadata !2345, metadata !2664), !dbg !7251
  %call = call i32 (%struct._object*, i8*, i64, i64, ...) @PyArg_UnpackTuple(%struct._object* %args, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.103, i64 0, i64 0), i64 1, i64 1, %struct._object** nonnull %iterable) #1, !dbg !7252
  %tobool = icmp eq i32 %call, 0, !dbg !7252
  br i1 %tobool, label %cleanup, label %if.end, !dbg !7254

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct._object** %iterable, i64 0, metadata !2345, metadata !2664), !dbg !7251
  %1 = load %struct._object*, %struct._object** %iterable, align 8, !dbg !7255, !tbaa !2681
  %call1 = call fastcc %struct._object* @tee_fromiterable(%struct._object* %1), !dbg !7256
  br label %cleanup, !dbg !7257

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct._object* [ %call1, %if.end ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 8, i8* %0) #1, !dbg !7258
  ret %struct._object* %retval.0, !dbg !7258
}

declare void @PyObject_ClearWeakRefs(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @tee_copy(%struct.teeobject* nocapture readonly %to) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.teeobject* %to, i64 0, metadata !2321, metadata !2664), !dbg !7259
  %call = tail call %struct._object* @_PyObject_GC_New(%struct._typeobject* nonnull @tee_type) #1, !dbg !7260
  %cmp = icmp eq %struct._object* %call, null, !dbg !7261
  br i1 %cmp, label %cleanup, label %if.end, !dbg !7263

if.end:                                           ; preds = %entry
  %dataobj = getelementptr inbounds %struct.teeobject, %struct.teeobject* %to, i64 0, i32 1, !dbg !7264
  %0 = bitcast %struct.teedataobject** %dataobj to %struct._object**, !dbg !7264
  %1 = load %struct._object*, %struct._object** %0, align 8, !dbg !7264, !tbaa !7127
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !7264
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !7264, !tbaa !2694
  %inc = add i64 %2, 1, !dbg !7264
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !7264, !tbaa !2694
  %3 = ptrtoint %struct._object* %1 to i64, !dbg !7265
  %4 = getelementptr inbounds %struct._object, %struct._object* %call, i64 1, i32 0, !dbg !7266
  store i64 %3, i64* %4, align 8, !dbg !7266, !tbaa !7127
  %index = getelementptr inbounds %struct.teeobject, %struct.teeobject* %to, i64 0, i32 2, !dbg !7267
  %5 = load i32, i32* %index, align 4, !dbg !7267, !tbaa !7171
  %index3 = getelementptr inbounds %struct._object, %struct._object* %call, i64 1, i32 1, !dbg !7268
  %6 = bitcast %struct._typeobject** %index3 to i32*, !dbg !7268
  store i32 %5, i32* %6, align 4, !dbg !7269, !tbaa !7171
  %weakreflist = getelementptr inbounds %struct._object, %struct._object* %call, i64 2, !dbg !7270
  %7 = bitcast %struct._object* %weakreflist to %struct._object**, !dbg !7270
  store %struct._object* null, %struct._object** %7, align 8, !dbg !7271, !tbaa !7119
  %8 = bitcast %struct._object* %call to i8*, !dbg !7272
  tail call void @PyObject_GC_Track(i8* %8) #1, !dbg !7273
  br label %cleanup, !dbg !7274

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct._object* [ %call, %if.end ], [ null, %entry ]
  ret %struct._object* %retval.0, !dbg !7275
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @tee_reduce(%struct.teeobject* nocapture readonly %to) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.teeobject* %to, i64 0, metadata !2325, metadata !2664), !dbg !7276
  %ob_type = getelementptr inbounds %struct.teeobject, %struct.teeobject* %to, i64 0, i32 0, i32 1, !dbg !7277
  %0 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7277, !tbaa !2667
  %dataobj = getelementptr inbounds %struct.teeobject, %struct.teeobject* %to, i64 0, i32 1, !dbg !7278
  %1 = load %struct.teedataobject*, %struct.teedataobject** %dataobj, align 8, !dbg !7278, !tbaa !7127
  %index = getelementptr inbounds %struct.teeobject, %struct.teeobject* %to, i64 0, i32 2, !dbg !7279
  %2 = load i32, i32* %index, align 4, !dbg !7279, !tbaa !7171
  %call = tail call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.100, i64 0, i64 0), %struct._typeobject* %0, %struct.teedataobject* %1, i32 %2) #1, !dbg !7280
  ret %struct._object* %call, !dbg !7281
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @tee_setstate(%struct.teeobject* nocapture %to, %struct._object* %state) #0 {
entry:
  %tdo = alloca %struct.teedataobject*, align 8
  %index = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct.teeobject* %to, i64 0, metadata !2330, metadata !2664), !dbg !7282
  tail call void @llvm.dbg.value(metadata %struct._object* %state, i64 0, metadata !2331, metadata !2664), !dbg !7283
  %0 = bitcast %struct.teedataobject** %tdo to i8*, !dbg !7284
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7284
  %1 = bitcast i32* %index to i8*, !dbg !7285
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !7285
  tail call void @llvm.dbg.value(metadata %struct.teedataobject** %tdo, i64 0, metadata !2332, metadata !2664), !dbg !7286
  tail call void @llvm.dbg.value(metadata i32* %index, i64 0, metadata !2333, metadata !2664), !dbg !7287
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %state, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.101, i64 0, i64 0), %struct._typeobject* nonnull @teedataobject_type, %struct.teedataobject** nonnull %tdo, i32* nonnull %index) #1, !dbg !7288
  %tobool = icmp eq i32 %call, 0, !dbg !7288
  br i1 %tobool, label %cleanup, label %if.end, !dbg !7290

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %index, i64 0, metadata !2333, metadata !2664), !dbg !7287
  %2 = load i32, i32* %index, align 4, !dbg !7291, !tbaa !3821
  %3 = icmp ugt i32 %2, 57, !dbg !7293
  br i1 %3, label %if.then.2, label %do.body, !dbg !7293

if.then.2:                                        ; preds = %if.end
  %4 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !7294, !tbaa !2681
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.102, i64 0, i64 0)) #1, !dbg !7296
  br label %cleanup, !dbg !7297

do.body:                                          ; preds = %if.end
  %dataobj = getelementptr inbounds %struct.teeobject, %struct.teeobject* %to, i64 0, i32 1, !dbg !7298
  %5 = bitcast %struct.teedataobject** %dataobj to %struct._object**, !dbg !7298
  %6 = load %struct._object*, %struct._object** %5, align 8, !dbg !7298, !tbaa !7127
  call void @llvm.dbg.value(metadata %struct._object* %6, i64 0, metadata !2334, metadata !2664), !dbg !7298
  %cmp4 = icmp eq %struct._object* %6, null, !dbg !7300
  br i1 %cmp4, label %if.end.11, label %if.then.5, !dbg !7301

if.then.5:                                        ; preds = %do.body
  store %struct.teedataobject* null, %struct.teedataobject** %dataobj, align 8, !dbg !7302, !tbaa !7127
  call void @llvm.dbg.value(metadata %struct._object* %6, i64 0, metadata !2336, metadata !2664), !dbg !7304
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %6, i64 0, i32 0, !dbg !7306
  %7 = load i64, i64* %ob_refcnt, align 8, !dbg !7306, !tbaa !2694
  %dec = add i64 %7, -1, !dbg !7306
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7306, !tbaa !2694
  %cmp8 = icmp eq i64 %dec, 0, !dbg !7306
  br i1 %cmp8, label %if.else, label %if.end.11, !dbg !7308

if.else:                                          ; preds = %if.then.5
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %6, i64 0, i32 1, !dbg !7309
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7309, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i64 0, i32 4, !dbg !7309
  %9 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7309, !tbaa !2717
  call void %9(%struct._object* %6) #1, !dbg !7309
  %.pre = load i32, i32* %index, align 4, !dbg !7311, !tbaa !3821
  br label %if.end.11

if.end.11:                                        ; preds = %if.else, %if.then.5, %do.body
  %10 = phi i32 [ %.pre, %if.else ], [ %2, %if.then.5 ], [ %2, %do.body ], !dbg !7311
  call void @llvm.dbg.value(metadata %struct.teedataobject** %tdo, i64 0, metadata !2332, metadata !2664), !dbg !7286
  %11 = load %struct.teedataobject*, %struct.teedataobject** %tdo, align 8, !dbg !7312, !tbaa !2681
  store %struct.teedataobject* %11, %struct.teedataobject** %dataobj, align 8, !dbg !7313, !tbaa !7127
  %ob_refcnt16 = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %11, i64 0, i32 0, i32 0, !dbg !7314
  %12 = load i64, i64* %ob_refcnt16, align 8, !dbg !7314, !tbaa !2694
  %inc = add i64 %12, 1, !dbg !7314
  store i64 %inc, i64* %ob_refcnt16, align 8, !dbg !7314, !tbaa !2694
  call void @llvm.dbg.value(metadata i32* %index, i64 0, metadata !2333, metadata !2664), !dbg !7287
  %index17 = getelementptr inbounds %struct.teeobject, %struct.teeobject* %to, i64 0, i32 2, !dbg !7315
  store i32 %10, i32* %index17, align 4, !dbg !7316, !tbaa !7171
  %13 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !7317, !tbaa !2694
  %inc18 = add i64 %13, 1, !dbg !7317
  store i64 %inc18, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !7317, !tbaa !2694
  br label %cleanup, !dbg !7317

cleanup:                                          ; preds = %entry, %if.end.11, %if.then.2
  %retval.0 = phi %struct._object* [ null, %if.then.2 ], [ @_Py_NoneStruct, %if.end.11 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %1) #1, !dbg !7318
  call void @llvm.lifetime.end(i64 8, i8* %0) #1, !dbg !7318
  ret %struct._object* %retval.0, !dbg !7318
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct._object* @tee_fromiterable(%struct._object* %iterable) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %iterable, i64 0, metadata !2348, metadata !2664), !dbg !7319
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !2350, metadata !2664), !dbg !7320
  %call = tail call %struct._object* @PyObject_GetIter(%struct._object* %iterable) #1, !dbg !7321
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !2350, metadata !2664), !dbg !7320
  %cmp = icmp eq %struct._object* %call, null, !dbg !7322
  br i1 %cmp, label %cleanup, label %if.end, !dbg !7324

if.end:                                           ; preds = %entry
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 1, !dbg !7325
  %0 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7325, !tbaa !2667
  %cmp1 = icmp eq %struct._typeobject* %0, @tee_type, !dbg !7325
  br i1 %cmp1, label %if.then.4, label %lor.lhs.false, !dbg !7325

lor.lhs.false:                                    ; preds = %if.end
  %call3 = tail call i32 @PyType_IsSubtype(%struct._typeobject* %0, %struct._typeobject* nonnull @tee_type) #1, !dbg !7327
  %tobool = icmp eq i32 %call3, 0, !dbg !7327
  br i1 %tobool, label %if.end.6, label %if.then.4, !dbg !7329

if.then.4:                                        ; preds = %lor.lhs.false, %if.end
  %call.i = tail call %struct._object* @_PyObject_GC_New(%struct._typeobject* nonnull @tee_type) #1, !dbg !7330
  %cmp.i = icmp eq %struct._object* %call.i, null, !dbg !7333
  br i1 %cmp.i, label %do.body.18, label %if.end.i, !dbg !7334

if.end.i:                                         ; preds = %if.then.4
  %dataobj.i = getelementptr inbounds %struct._object, %struct._object* %call, i64 1, !dbg !7335
  %1 = bitcast %struct._object* %dataobj.i to %struct._object**, !dbg !7335
  %2 = load %struct._object*, %struct._object** %1, align 8, !dbg !7335, !tbaa !7127
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %2, i64 0, i32 0, !dbg !7335
  %3 = load i64, i64* %ob_refcnt.i, align 8, !dbg !7335, !tbaa !2694
  %inc.i = add i64 %3, 1, !dbg !7335
  store i64 %inc.i, i64* %ob_refcnt.i, align 8, !dbg !7335, !tbaa !2694
  %4 = ptrtoint %struct._object* %2 to i64, !dbg !7336
  %5 = getelementptr inbounds %struct._object, %struct._object* %call.i, i64 1, i32 0, !dbg !7337
  store i64 %4, i64* %5, align 8, !dbg !7337, !tbaa !7127
  %index.i = getelementptr inbounds %struct._object, %struct._object* %call, i64 1, i32 1, !dbg !7338
  %6 = bitcast %struct._typeobject** %index.i to i32*, !dbg !7338
  %7 = load i32, i32* %6, align 4, !dbg !7338, !tbaa !7171
  %index3.i = getelementptr inbounds %struct._object, %struct._object* %call.i, i64 1, i32 1, !dbg !7339
  %8 = bitcast %struct._typeobject** %index3.i to i32*, !dbg !7339
  store i32 %7, i32* %8, align 4, !dbg !7340, !tbaa !7171
  %weakreflist.i = getelementptr inbounds %struct._object, %struct._object* %call.i, i64 2, !dbg !7341
  %9 = bitcast %struct._object* %weakreflist.i to %struct._object**, !dbg !7341
  store %struct._object* null, %struct._object** %9, align 8, !dbg !7342, !tbaa !7119
  %10 = bitcast %struct._object* %call.i to i8*, !dbg !7343
  tail call void @PyObject_GC_Track(i8* %10) #1, !dbg !7344
  %phitmp = bitcast %struct._object* %call.i to %struct.teeobject*, !dbg !7345
  br label %do.body.18, !dbg !7345

if.end.6:                                         ; preds = %lor.lhs.false
  %call7 = tail call %struct._object* @_PyObject_GC_New(%struct._typeobject* nonnull @tee_type) #1, !dbg !7346
  %11 = bitcast %struct._object* %call7 to %struct.teeobject*, !dbg !7346
  tail call void @llvm.dbg.value(metadata %struct.teeobject* %11, i64 0, metadata !2349, metadata !2664), !dbg !7347
  %cmp8 = icmp eq %struct._object* %call7, null, !dbg !7348
  br i1 %cmp8, label %do.body.18, label %if.end.10, !dbg !7350

if.end.10:                                        ; preds = %if.end.6
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !2310, metadata !2664) #1, !dbg !7351
  %call.i.45 = tail call %struct._object* @_PyObject_GC_New(%struct._typeobject* nonnull @teedataobject_type) #1, !dbg !7353
  %cmp.i.46 = icmp eq %struct._object* %call.i.45, null, !dbg !7354
  br i1 %cmp.i.46, label %if.then.14, label %if.end.15, !dbg !7355

if.then.14:                                       ; preds = %if.end.10
  %dataobj.51 = getelementptr inbounds %struct._object, %struct._object* %call7, i64 1, !dbg !7356
  %12 = bitcast %struct._object* %dataobj.51 to %struct._object**, !dbg !7357
  store %struct._object* null, %struct._object** %12, align 8, !dbg !7357, !tbaa !7127
  %13 = bitcast %struct._object* %call7 to i8*, !dbg !7358
  tail call void @PyObject_GC_Del(i8* %13) #1, !dbg !7361
  tail call void @llvm.dbg.value(metadata %struct.teeobject* null, i64 0, metadata !2349, metadata !2664), !dbg !7347
  br label %do.body.18, !dbg !7362

if.end.15:                                        ; preds = %if.end.10
  %numread.i = getelementptr inbounds %struct._object, %struct._object* %call.i.45, i64 1, i32 1, !dbg !7363
  %14 = bitcast %struct._typeobject** %numread.i to i32*, !dbg !7363
  store i32 0, i32* %14, align 4, !dbg !7364, !tbaa !7199
  %nextlink.i = getelementptr inbounds %struct._object, %struct._object* %call.i.45, i64 2, !dbg !7365
  %15 = bitcast %struct._object* %nextlink.i to %struct._object**, !dbg !7365
  store %struct._object* null, %struct._object** %15, align 8, !dbg !7366, !tbaa !7179
  %ob_refcnt.i.47 = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 0, !dbg !7367
  %16 = load i64, i64* %ob_refcnt.i.47, align 8, !dbg !7367, !tbaa !2694
  %inc.i.48 = add i64 %16, 1, !dbg !7367
  store i64 %inc.i.48, i64* %ob_refcnt.i.47, align 8, !dbg !7367, !tbaa !2694
  %it1.i = getelementptr inbounds %struct._object, %struct._object* %call.i.45, i64 1, !dbg !7368
  %17 = bitcast %struct._object* %it1.i to %struct._object**, !dbg !7368
  store %struct._object* %call, %struct._object** %17, align 8, !dbg !7369, !tbaa !7186
  %18 = bitcast %struct._object* %call.i.45 to i8*, !dbg !7370
  tail call void @PyObject_GC_Track(i8* %18) #1, !dbg !7371
  %dataobj = getelementptr inbounds %struct._object, %struct._object* %call7, i64 1, !dbg !7356
  %19 = bitcast %struct._object* %dataobj to %struct._object**, !dbg !7357
  store %struct._object* %call.i.45, %struct._object** %19, align 8, !dbg !7357, !tbaa !7127
  %index = getelementptr inbounds %struct._object, %struct._object* %call7, i64 1, i32 1, !dbg !7372
  %20 = bitcast %struct._typeobject** %index to i32*, !dbg !7372
  store i32 0, i32* %20, align 4, !dbg !7373, !tbaa !7171
  %weakreflist = getelementptr inbounds %struct._object, %struct._object* %call7, i64 2, !dbg !7374
  %21 = bitcast %struct._object* %weakreflist to %struct._object**, !dbg !7374
  store %struct._object* null, %struct._object** %21, align 8, !dbg !7375, !tbaa !7119
  %22 = bitcast %struct._object* %call7 to i8*, !dbg !7376
  tail call void @PyObject_GC_Track(i8* %22) #1, !dbg !7377
  br label %do.body.18, !dbg !7377

do.body.18:                                       ; preds = %if.end.i, %if.then.4, %if.end.6, %if.end.15, %if.then.14
  %to.0 = phi %struct.teeobject* [ %11, %if.end.6 ], [ %11, %if.end.15 ], [ null, %if.then.14 ], [ %phitmp, %if.end.i ], [ null, %if.then.4 ]
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !2351, metadata !2664), !dbg !7378
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !2353, metadata !2664), !dbg !7380
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 0, !dbg !7382
  %23 = load i64, i64* %ob_refcnt, align 8, !dbg !7382, !tbaa !2694
  %dec = add i64 %23, -1, !dbg !7382
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7382, !tbaa !2694
  %cmp19 = icmp eq i64 %dec, 0, !dbg !7382
  br i1 %cmp19, label %if.else, label %if.end.23, !dbg !7384

if.else:                                          ; preds = %do.body.18
  %24 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7385, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %24, i64 0, i32 4, !dbg !7385
  %25 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7385, !tbaa !2717
  tail call void %25(%struct._object* %call) #1, !dbg !7385
  br label %if.end.23

if.end.23:                                        ; preds = %if.else, %do.body.18
  %26 = getelementptr inbounds %struct.teeobject, %struct.teeobject* %to.0, i64 0, i32 0, !dbg !7387
  br label %cleanup, !dbg !7388

cleanup:                                          ; preds = %entry, %if.end.23
  %retval.0 = phi %struct._object* [ %26, %if.end.23 ], [ null, %entry ]
  ret %struct._object* %retval.0, !dbg !7389
}

declare i32 @PyType_IsSubtype(%struct._typeobject*, %struct._typeobject*) #3

; Function Attrs: nounwind uwtable
define internal void @teedataobject_dealloc(%struct.teedataobject* %tdo) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.teedataobject* %tdo, i64 0, metadata !2360, metadata !2664), !dbg !7390
  %0 = bitcast %struct.teedataobject* %tdo to i8*, !dbg !7391
  tail call void @PyObject_GC_UnTrack(i8* %0) #1, !dbg !7392
  %call = tail call i32 @teedataobject_clear(%struct.teedataobject* %tdo), !dbg !7393
  tail call void @PyObject_GC_Del(i8* %0) #1, !dbg !7394
  ret void, !dbg !7395
}

; Function Attrs: nounwind uwtable
define internal i32 @teedataobject_traverse(%struct.teedataobject* nocapture readonly %tdo, i32 (%struct._object*, i8*)* nocapture %visit, i8* %arg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.teedataobject* %tdo, i64 0, metadata !2365, metadata !2664), !dbg !7396
  tail call void @llvm.dbg.value(metadata i32 (%struct._object*, i8*)* %visit, i64 0, metadata !2366, metadata !2664), !dbg !7397
  tail call void @llvm.dbg.value(metadata i8* %arg, i64 0, metadata !2367, metadata !2664), !dbg !7398
  %it = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %tdo, i64 0, i32 1, !dbg !7399
  %0 = load %struct._object*, %struct._object** %it, align 8, !dbg !7399, !tbaa !7186
  %tobool = icmp eq %struct._object* %0, null, !dbg !7399
  br i1 %tobool, label %for.cond.preheader, label %if.then, !dbg !7401

if.then:                                          ; preds = %entry
  %call = tail call i32 %visit(%struct._object* %0, i8* %arg) #1, !dbg !7402
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !2369, metadata !2664), !dbg !7402
  %tobool2 = icmp eq i32 %call, 0, !dbg !7404
  br i1 %tobool2, label %for.cond.preheader, label %cleanup.37

for.cond.preheader:                               ; preds = %entry, %if.then
  %numread = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %tdo, i64 0, i32 2, !dbg !7406
  %1 = load i32, i32* %numread, align 4, !dbg !7406, !tbaa !7199
  %cmp.65 = icmp sgt i32 %1, 0, !dbg !7407
  br i1 %cmp.65, label %do.body.5.preheader, label %do.body.22, !dbg !7408

do.body.5.preheader:                              ; preds = %for.cond.preheader
  br label %do.body.5, !dbg !7409

do.body.5:                                        ; preds = %do.body.5.preheader, %for.inc
  %2 = phi i32 [ %4, %for.inc ], [ %1, %do.body.5.preheader ]
  %i.066 = phi i32 [ %inc, %for.inc ], [ 0, %do.body.5.preheader ]
  %idxprom = sext i32 %i.066 to i64, !dbg !7409
  %arrayidx = getelementptr %struct.teedataobject, %struct.teedataobject* %tdo, i64 0, i32 4, i64 %idxprom, !dbg !7409
  %3 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !7409, !tbaa !2681
  %tobool6 = icmp eq %struct._object* %3, null, !dbg !7409
  br i1 %tobool6, label %for.inc, label %if.then.7, !dbg !7411

if.then.7:                                        ; preds = %do.body.5
  %call12 = tail call i32 %visit(%struct._object* %3, i8* %arg) #1, !dbg !7412
  tail call void @llvm.dbg.value(metadata i32 %call12, i64 0, metadata !2373, metadata !2664), !dbg !7412
  %tobool13 = icmp eq i32 %call12, 0, !dbg !7414
  br i1 %tobool13, label %if.then.7.for.inc_crit_edge, label %cleanup.37.loopexit

if.then.7.for.inc_crit_edge:                      ; preds = %if.then.7
  %.pre = load i32, i32* %numread, align 4, !dbg !7406, !tbaa !7199
  br label %for.inc

for.inc:                                          ; preds = %if.then.7.for.inc_crit_edge, %do.body.5
  %4 = phi i32 [ %.pre, %if.then.7.for.inc_crit_edge ], [ %2, %do.body.5 ], !dbg !7406
  %inc = add i32 %i.066, 1, !dbg !7416
  tail call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !2368, metadata !2664), !dbg !7417
  %cmp = icmp slt i32 %inc, %4, !dbg !7407
  br i1 %cmp, label %do.body.5, label %do.body.22.loopexit, !dbg !7408

do.body.22.loopexit:                              ; preds = %for.inc
  br label %do.body.22, !dbg !7418

do.body.22:                                       ; preds = %do.body.22.loopexit, %for.cond.preheader
  %nextlink = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %tdo, i64 0, i32 3, !dbg !7418
  %5 = load %struct._object*, %struct._object** %nextlink, align 8, !dbg !7418, !tbaa !7179
  %tobool23 = icmp eq %struct._object* %5, null, !dbg !7418
  br i1 %tobool23, label %do.end.36, label %if.then.24, !dbg !7420

if.then.24:                                       ; preds = %do.body.22
  %call27 = tail call i32 %visit(%struct._object* %5, i8* %arg) #1, !dbg !7421
  tail call void @llvm.dbg.value(metadata i32 %call27, i64 0, metadata !2379, metadata !2664), !dbg !7421
  %tobool28 = icmp eq i32 %call27, 0, !dbg !7423
  br i1 %tobool28, label %do.end.36, label %cleanup.37

do.end.36:                                        ; preds = %do.body.22, %if.then.24
  br label %cleanup.37, !dbg !7425

cleanup.37.loopexit:                              ; preds = %if.then.7
  %call12.lcssa = phi i32 [ %call12, %if.then.7 ]
  br label %cleanup.37, !dbg !7426

cleanup.37:                                       ; preds = %cleanup.37.loopexit, %if.then, %if.then.24, %do.end.36
  %retval.6 = phi i32 [ 0, %do.end.36 ], [ %call27, %if.then.24 ], [ %call, %if.then ], [ %call12.lcssa, %cleanup.37.loopexit ]
  ret i32 %retval.6, !dbg !7426
}

; Function Attrs: nounwind uwtable
define internal i32 @teedataobject_clear(%struct.teedataobject* nocapture %tdo) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.teedataobject* %tdo, i64 0, metadata !2387, metadata !2664), !dbg !7427
  %it = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %tdo, i64 0, i32 1, !dbg !7428
  %0 = load %struct._object*, %struct._object** %it, align 8, !dbg !7428, !tbaa !7186
  tail call void @llvm.dbg.value(metadata %struct._object* %0, i64 0, metadata !2390, metadata !2664), !dbg !7428
  %cmp = icmp eq %struct._object* %0, null, !dbg !7430
  br i1 %cmp, label %for.cond.preheader, label %if.then, !dbg !7431

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %it, align 8, !dbg !7432, !tbaa !7186
  tail call void @llvm.dbg.value(metadata %struct._object* %0, i64 0, metadata !2392, metadata !2664), !dbg !7434
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %0, i64 0, i32 0, !dbg !7436
  %1 = load i64, i64* %ob_refcnt, align 8, !dbg !7436, !tbaa !2694
  %dec = add i64 %1, -1, !dbg !7436
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7436, !tbaa !2694
  %cmp5 = icmp eq i64 %dec, 0, !dbg !7436
  br i1 %cmp5, label %if.else, label %for.cond.preheader, !dbg !7438

if.else:                                          ; preds = %if.then
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i64 0, i32 1, !dbg !7439
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7439, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i64 0, i32 4, !dbg !7439
  %3 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7439, !tbaa !2717
  tail call void %3(%struct._object* %0) #1, !dbg !7439
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.else, %if.then, %entry
  %numread = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %tdo, i64 0, i32 2, !dbg !7441
  %4 = load i32, i32* %numread, align 4, !dbg !7441, !tbaa !7199
  %cmp10.62 = icmp sgt i32 %4, 0, !dbg !7442
  br i1 %cmp10.62, label %do.body.11.preheader, label %for.end, !dbg !7443

do.body.11.preheader:                             ; preds = %for.cond.preheader
  br label %do.body.11, !dbg !7444

do.body.11:                                       ; preds = %do.body.11.preheader, %if.end.32
  %i.063 = phi i32 [ %inc, %if.end.32 ], [ 0, %do.body.11.preheader ]
  %idxprom = sext i32 %i.063 to i64, !dbg !7444
  %arrayidx = getelementptr %struct.teedataobject, %struct.teedataobject* %tdo, i64 0, i32 4, i64 %idxprom, !dbg !7444
  %5 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !7444, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !2396, metadata !2664), !dbg !7444
  %cmp14 = icmp eq %struct._object* %5, null, !dbg !7446
  br i1 %cmp14, label %if.end.32, label %if.then.15, !dbg !7447

if.then.15:                                       ; preds = %do.body.11
  store %struct._object* null, %struct._object** %arrayidx, align 8, !dbg !7448, !tbaa !2681
  tail call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !2400, metadata !2664), !dbg !7450
  %ob_refcnt22 = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 0, !dbg !7452
  %6 = load i64, i64* %ob_refcnt22, align 8, !dbg !7452, !tbaa !2694
  %dec23 = add i64 %6, -1, !dbg !7452
  store i64 %dec23, i64* %ob_refcnt22, align 8, !dbg !7452, !tbaa !2694
  %cmp24 = icmp eq i64 %dec23, 0, !dbg !7452
  br i1 %cmp24, label %if.else.26, label %if.end.32, !dbg !7454

if.else.26:                                       ; preds = %if.then.15
  %ob_type27 = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 1, !dbg !7455
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type27, align 8, !dbg !7455, !tbaa !2667
  %tp_dealloc28 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i64 0, i32 4, !dbg !7455
  %8 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc28, align 8, !dbg !7455, !tbaa !2717
  tail call void %8(%struct._object* %5) #1, !dbg !7455
  br label %if.end.32

if.end.32:                                        ; preds = %if.else.26, %if.then.15, %do.body.11
  %inc = add i32 %i.063, 1, !dbg !7457
  tail call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !2388, metadata !2664), !dbg !7458
  %9 = load i32, i32* %numread, align 4, !dbg !7441, !tbaa !7199
  %cmp10 = icmp slt i32 %inc, %9, !dbg !7442
  br i1 %cmp10, label %do.body.11, label %for.end.loopexit, !dbg !7443

for.end.loopexit:                                 ; preds = %if.end.32
  br label %for.end, !dbg !7459

for.end:                                          ; preds = %for.end.loopexit, %for.cond.preheader
  %nextlink = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %tdo, i64 0, i32 3, !dbg !7459
  %10 = load %struct._object*, %struct._object** %nextlink, align 8, !dbg !7459, !tbaa !7179
  tail call void @llvm.dbg.value(metadata %struct._object* %10, i64 0, metadata !2389, metadata !2664), !dbg !7460
  store %struct._object* null, %struct._object** %nextlink, align 8, !dbg !7461, !tbaa !7179
  tail call void @llvm.dbg.value(metadata %struct._object* %10, i64 0, metadata !2406, metadata !2664) #1, !dbg !7462
  %tobool.42.i = icmp eq %struct._object* %10, null, !dbg !7464
  br i1 %tobool.42.i, label %teedataobject_safe_decref.exit, label %land.lhs.true.i.preheader, !dbg !7467

land.lhs.true.i.preheader:                        ; preds = %for.end
  br label %land.lhs.true.i, !dbg !7468

land.lhs.true.i:                                  ; preds = %land.lhs.true.i.preheader, %while.cond.backedge.i
  %obj.addr.043.i = phi %struct._object* [ %14, %while.cond.backedge.i ], [ %10, %land.lhs.true.i.preheader ], !dbg !7470
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %obj.addr.043.i, i64 0, i32 1, !dbg !7468
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !7471, !tbaa !2667
  %cmp.i = icmp eq %struct._typeobject* %11, @teedataobject_type, !dbg !7474
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %obj.addr.043.i, i64 0, i32 0, !dbg !7475
  %12 = load i64, i64* %ob_refcnt.i, align 8, !dbg !7476, !tbaa !2694
  %cmp1.i = icmp eq i64 %12, 1, !dbg !7477
  %or.cond = and i1 %cmp.i, %cmp1.i, !dbg !7478
  br i1 %or.cond, label %while.cond.backedge.i, label %do.body.10.i, !dbg !7478

while.cond.backedge.i:                            ; preds = %land.lhs.true.i
  %nextlink2.i = getelementptr inbounds %struct._object, %struct._object* %obj.addr.043.i, i64 2, !dbg !7479
  %13 = bitcast %struct._object* %nextlink2.i to %struct._object**, !dbg !7479
  %14 = load %struct._object*, %struct._object** %13, align 8, !dbg !7479, !tbaa !7179
  store %struct._object* null, %struct._object** %13, align 8, !dbg !7480, !tbaa !7179
  store i64 0, i64* %ob_refcnt.i, align 8, !dbg !7476, !tbaa !2694
  %15 = load void (%struct._object*)*, void (%struct._object*)** getelementptr inbounds (%struct._typeobject, %struct._typeobject* @teedataobject_type, i64 0, i32 4), align 8, !dbg !7471, !tbaa !2717
  tail call void %15(%struct._object* %obj.addr.043.i) #1, !dbg !7471
  %tobool.i = icmp eq %struct._object* %14, null, !dbg !7464
  br i1 %tobool.i, label %teedataobject_safe_decref.exit.loopexit, label %land.lhs.true.i, !dbg !7467

do.body.10.i:                                     ; preds = %land.lhs.true.i
  %.lcssa87 = phi i64 [ %12, %land.lhs.true.i ]
  %ob_refcnt.i.lcssa = phi i64* [ %ob_refcnt.i, %land.lhs.true.i ]
  %.lcssa = phi %struct._typeobject* [ %11, %land.lhs.true.i ]
  %obj.addr.043.i.lcssa = phi %struct._object* [ %obj.addr.043.i, %land.lhs.true.i ]
  %dec13.i = add i64 %.lcssa87, -1, !dbg !7481
  store i64 %dec13.i, i64* %ob_refcnt.i.lcssa, align 8, !dbg !7481, !tbaa !2694
  %cmp14.i = icmp eq i64 %dec13.i, 0, !dbg !7481
  br i1 %cmp14.i, label %if.else.16.i, label %teedataobject_safe_decref.exit, !dbg !7483

if.else.16.i:                                     ; preds = %do.body.10.i
  %tp_dealloc18.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %.lcssa, i64 0, i32 4, !dbg !7484
  %16 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc18.i, align 8, !dbg !7484, !tbaa !2717
  tail call void %16(%struct._object* %obj.addr.043.i.lcssa) #1, !dbg !7484
  br label %teedataobject_safe_decref.exit, !dbg !7470

teedataobject_safe_decref.exit.loopexit:          ; preds = %while.cond.backedge.i
  br label %teedataobject_safe_decref.exit, !dbg !7486

teedataobject_safe_decref.exit:                   ; preds = %teedataobject_safe_decref.exit.loopexit, %for.end, %do.body.10.i, %if.else.16.i
  ret i32 0, !dbg !7486
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @teedataobject_new(%struct._typeobject* nocapture readnone %type, %struct._object* %args, %struct._object* nocapture readnone %kw) #0 {
entry:
  %it = alloca %struct._object*, align 8
  %values = alloca %struct._object*, align 8
  %next = alloca %struct._object*, align 8
  tail call void @llvm.dbg.value(metadata %struct._typeobject* %type, i64 0, metadata !2423, metadata !2664), !dbg !7487
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2424, metadata !2664), !dbg !7488
  tail call void @llvm.dbg.value(metadata %struct._object* %kw, i64 0, metadata !2425, metadata !2664), !dbg !7489
  %0 = bitcast %struct._object** %it to i8*, !dbg !7490
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7490
  %1 = bitcast %struct._object** %values to i8*, !dbg !7490
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !7490
  %2 = bitcast %struct._object** %next to i8*, !dbg !7490
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !7490
  tail call void @llvm.dbg.value(metadata %struct._object** %it, i64 0, metadata !2427, metadata !2664), !dbg !7491
  tail call void @llvm.dbg.value(metadata %struct._object** %values, i64 0, metadata !2428, metadata !2664), !dbg !7492
  tail call void @llvm.dbg.value(metadata %struct._object** %next, i64 0, metadata !2429, metadata !2664), !dbg !7493
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %args, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.106, i64 0, i64 0), %struct._object** nonnull %it, %struct._typeobject* nonnull @PyList_Type, %struct._object** nonnull %values, %struct._object** nonnull %next) #1, !dbg !7494
  %tobool = icmp eq i32 %call, 0, !dbg !7494
  br i1 %tobool, label %cleanup, label %if.end, !dbg !7496

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct._object** %it, i64 0, metadata !2427, metadata !2664), !dbg !7491
  %3 = load %struct._object*, %struct._object** %it, align 8, !dbg !7497, !tbaa !2681
  call void @llvm.dbg.value(metadata %struct._object* %3, i64 0, metadata !2310, metadata !2664) #1, !dbg !7498
  %call.i = call %struct._object* @_PyObject_GC_New(%struct._typeobject* nonnull @teedataobject_type) #1, !dbg !7500
  %cmp.i = icmp eq %struct._object* %call.i, null, !dbg !7501
  br i1 %cmp.i, label %cleanup, label %if.end.4, !dbg !7502

if.end.4:                                         ; preds = %if.end
  %numread.i = getelementptr inbounds %struct._object, %struct._object* %call.i, i64 1, i32 1, !dbg !7503
  %4 = bitcast %struct._typeobject** %numread.i to i32*, !dbg !7503
  store i32 0, i32* %4, align 4, !dbg !7504, !tbaa !7199
  %nextlink.i = getelementptr inbounds %struct._object, %struct._object* %call.i, i64 2, !dbg !7505
  %5 = bitcast %struct._object* %nextlink.i to %struct._object**, !dbg !7505
  store %struct._object* null, %struct._object** %5, align 8, !dbg !7506, !tbaa !7179
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %3, i64 0, i32 0, !dbg !7507
  %6 = load i64, i64* %ob_refcnt.i, align 8, !dbg !7507, !tbaa !2694
  %inc.i = add i64 %6, 1, !dbg !7507
  store i64 %inc.i, i64* %ob_refcnt.i, align 8, !dbg !7507, !tbaa !2694
  %it1.i = getelementptr inbounds %struct._object, %struct._object* %call.i, i64 1, !dbg !7508
  %7 = bitcast %struct._object* %it1.i to %struct._object**, !dbg !7508
  store %struct._object* %3, %struct._object** %7, align 8, !dbg !7509, !tbaa !7186
  %8 = bitcast %struct._object* %call.i to i8*, !dbg !7510
  call void @PyObject_GC_Track(i8* %8) #1, !dbg !7511
  call void @llvm.dbg.value(metadata %struct._object** %values, i64 0, metadata !2428, metadata !2664), !dbg !7492
  %9 = bitcast %struct._object** %values to %struct.PyVarObject**, !dbg !7512
  %10 = load %struct.PyVarObject*, %struct.PyVarObject** %9, align 8, !dbg !7512, !tbaa !2681
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %10, i64 0, i32 1, !dbg !7512
  %11 = load i64, i64* %ob_size, align 8, !dbg !7512, !tbaa !2957
  call void @llvm.dbg.value(metadata i64 %11, i64 0, metadata !2431, metadata !2664), !dbg !7513
  %cmp = icmp sgt i64 %11, 57, !dbg !7514
  br i1 %cmp, label %do.body.34, label %for.cond.preheader, !dbg !7516

for.cond.preheader:                               ; preds = %if.end.4
  %cmp7.73 = icmp sgt i64 %11, 0, !dbg !7517
  br i1 %cmp7.73, label %for.body.lr.ph, label %for.end.thread, !dbg !7520

for.end.thread:                                   ; preds = %for.cond.preheader
  %conv.75 = trunc i64 %11 to i32, !dbg !7521
  store i32 %conv.75, i32* %4, align 4, !dbg !7522, !tbaa !7199
  call void @llvm.dbg.value(metadata %struct._object** %next, i64 0, metadata !2429, metadata !2664), !dbg !7493
  %12 = load %struct._object*, %struct._object** %next, align 8, !dbg !7523, !tbaa !2681
  %cmp16.77 = icmp eq %struct._object* %12, @_Py_NoneStruct, !dbg !7527
  br i1 %cmp16.77, label %cleanup, label %do.body.34, !dbg !7528

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %13 = bitcast %struct._object** %values to %struct.PyListObject**, !dbg !7530
  %values8 = getelementptr inbounds %struct._object, %struct._object* %call.i, i64 2, i32 1, !dbg !7532
  %14 = bitcast %struct._typeobject** %values8 to [57 x %struct._object*]*, !dbg !7532
  call void @llvm.dbg.value(metadata %struct._object** %values, i64 0, metadata !2428, metadata !2664), !dbg !7492
  %ob_item.79 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %10, i64 1, !dbg !7530
  %15 = bitcast %struct.PyVarObject* %ob_item.79 to %struct._object***, !dbg !7530
  %16 = load %struct._object**, %struct._object*** %15, align 8, !dbg !7530, !tbaa !7533
  %17 = load %struct._object*, %struct._object** %16, align 8, !dbg !7530, !tbaa !2681
  %arrayidx9.80 = bitcast %struct._typeobject** %values8 to %struct._object**, !dbg !7535
  store %struct._object* %17, %struct._object** %arrayidx9.80, align 8, !dbg !7536, !tbaa !2681
  %ob_refcnt.81 = getelementptr inbounds %struct._object, %struct._object* %17, i64 0, i32 0, !dbg !7537
  %18 = load i64, i64* %ob_refcnt.81, align 8, !dbg !7537, !tbaa !2694
  %inc.82 = add i64 %18, 1, !dbg !7537
  store i64 %inc.82, i64* %ob_refcnt.81, align 8, !dbg !7537, !tbaa !2694
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !2430, metadata !2664), !dbg !7538
  %exitcond.83 = icmp eq i64 %11, 1, !dbg !7520
  br i1 %exitcond.83, label %for.end, label %for.body.for.body_crit_edge.preheader, !dbg !7520

for.body.for.body_crit_edge.preheader:            ; preds = %for.body.lr.ph
  %19 = and i64 %11, 1, !dbg !7530
  %lcmp.mod = icmp eq i64 %19, 0, !dbg !7530
  br i1 %lcmp.mod, label %for.body.for.body_crit_edge.prol, label %for.body.for.body_crit_edge.preheader.split, !dbg !7530

for.body.for.body_crit_edge.prol:                 ; preds = %for.body.for.body_crit_edge.preheader
  %.pre.prol = load %struct.PyListObject*, %struct.PyListObject** %13, align 8, !dbg !7530, !tbaa !2681
  call void @llvm.dbg.value(metadata %struct._object** %values, i64 0, metadata !2428, metadata !2664), !dbg !7492
  %ob_item.prol = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %.pre.prol, i64 0, i32 1, !dbg !7530
  %20 = load %struct._object**, %struct._object*** %ob_item.prol, align 8, !dbg !7530, !tbaa !7533
  %arrayidx.prol = getelementptr %struct._object*, %struct._object** %20, i64 1, !dbg !7530
  %21 = load %struct._object*, %struct._object** %arrayidx.prol, align 8, !dbg !7530, !tbaa !2681
  %arrayidx9.prol = getelementptr %struct._typeobject*, %struct._typeobject** %values8, i64 1, !dbg !7535
  %22 = bitcast %struct._typeobject** %arrayidx9.prol to %struct._object**, !dbg !7535
  store %struct._object* %21, %struct._object** %22, align 8, !dbg !7536, !tbaa !2681
  %ob_refcnt.prol = getelementptr inbounds %struct._object, %struct._object* %21, i64 0, i32 0, !dbg !7537
  %23 = load i64, i64* %ob_refcnt.prol, align 8, !dbg !7537, !tbaa !2694
  %inc.prol = add i64 %23, 1, !dbg !7537
  store i64 %inc.prol, i64* %ob_refcnt.prol, align 8, !dbg !7537, !tbaa !2694
  call void @llvm.dbg.value(metadata i64 2, i64 0, metadata !2430, metadata !2664), !dbg !7538
  br label %for.body.for.body_crit_edge.preheader.split, !dbg !7520

for.body.for.body_crit_edge.preheader.split:      ; preds = %for.body.for.body_crit_edge.prol, %for.body.for.body_crit_edge.preheader
  %inc1284.unr = phi i64 [ 1, %for.body.for.body_crit_edge.preheader ], [ 2, %for.body.for.body_crit_edge.prol ]
  %24 = icmp eq i64 %11, 2, !dbg !7530
  br i1 %24, label %for.end.loopexit, label %for.body.for.body_crit_edge.preheader.split.split, !dbg !7530

for.body.for.body_crit_edge.preheader.split.split: ; preds = %for.body.for.body_crit_edge.preheader.split
  br label %for.body.for.body_crit_edge, !dbg !7530

for.body.for.body_crit_edge:                      ; preds = %for.body.for.body_crit_edge, %for.body.for.body_crit_edge.preheader.split.split
  %inc1284 = phi i64 [ %inc1284.unr, %for.body.for.body_crit_edge.preheader.split.split ], [ %inc12.1, %for.body.for.body_crit_edge ]
  %.pre = load %struct.PyListObject*, %struct.PyListObject** %13, align 8, !dbg !7530, !tbaa !2681
  call void @llvm.dbg.value(metadata %struct._object** %values, i64 0, metadata !2428, metadata !2664), !dbg !7492
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %.pre, i64 0, i32 1, !dbg !7530
  %25 = load %struct._object**, %struct._object*** %ob_item, align 8, !dbg !7530, !tbaa !7533
  %arrayidx = getelementptr %struct._object*, %struct._object** %25, i64 %inc1284, !dbg !7530
  %26 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !7530, !tbaa !2681
  %arrayidx9 = getelementptr [57 x %struct._object*], [57 x %struct._object*]* %14, i64 0, i64 %inc1284, !dbg !7535
  store %struct._object* %26, %struct._object** %arrayidx9, align 8, !dbg !7536, !tbaa !2681
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %26, i64 0, i32 0, !dbg !7537
  %27 = load i64, i64* %ob_refcnt, align 8, !dbg !7537, !tbaa !2694
  %inc = add i64 %27, 1, !dbg !7537
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !7537, !tbaa !2694
  %inc12 = add nuw nsw i64 %inc1284, 1, !dbg !7539
  call void @llvm.dbg.value(metadata i64 %inc12, i64 0, metadata !2430, metadata !2664), !dbg !7538
  %.pre.1 = load %struct.PyListObject*, %struct.PyListObject** %13, align 8, !dbg !7530, !tbaa !2681
  call void @llvm.dbg.value(metadata %struct._object** %values, i64 0, metadata !2428, metadata !2664), !dbg !7492
  %ob_item.1 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %.pre.1, i64 0, i32 1, !dbg !7530
  %28 = load %struct._object**, %struct._object*** %ob_item.1, align 8, !dbg !7530, !tbaa !7533
  %arrayidx.1 = getelementptr %struct._object*, %struct._object** %28, i64 %inc12, !dbg !7530
  %29 = load %struct._object*, %struct._object** %arrayidx.1, align 8, !dbg !7530, !tbaa !2681
  %arrayidx9.1 = getelementptr [57 x %struct._object*], [57 x %struct._object*]* %14, i64 0, i64 %inc12, !dbg !7535
  store %struct._object* %29, %struct._object** %arrayidx9.1, align 8, !dbg !7536, !tbaa !2681
  %ob_refcnt.1 = getelementptr inbounds %struct._object, %struct._object* %29, i64 0, i32 0, !dbg !7537
  %30 = load i64, i64* %ob_refcnt.1, align 8, !dbg !7537, !tbaa !2694
  %inc.1 = add i64 %30, 1, !dbg !7537
  store i64 %inc.1, i64* %ob_refcnt.1, align 8, !dbg !7537, !tbaa !2694
  %inc12.1 = add nsw i64 %inc1284, 2, !dbg !7539
  call void @llvm.dbg.value(metadata i64 %inc12, i64 0, metadata !2430, metadata !2664), !dbg !7538
  %exitcond.1 = icmp eq i64 %inc12.1, %11, !dbg !7520
  br i1 %exitcond.1, label %for.end.loopexit.unr-lcssa, label %for.body.for.body_crit_edge, !dbg !7520

for.end.loopexit.unr-lcssa:                       ; preds = %for.body.for.body_crit_edge
  br label %for.end.loopexit, !dbg !7521

for.end.loopexit:                                 ; preds = %for.body.for.body_crit_edge.preheader.split, %for.end.loopexit.unr-lcssa
  br label %for.end, !dbg !7521

for.end:                                          ; preds = %for.end.loopexit, %for.body.lr.ph
  %conv = trunc i64 %11 to i32, !dbg !7521
  store i32 %conv, i32* %4, align 4, !dbg !7522, !tbaa !7199
  %cmp13 = icmp eq i64 %11, 57, !dbg !7540
  call void @llvm.dbg.value(metadata %struct._object** %next, i64 0, metadata !2429, metadata !2664), !dbg !7493
  %31 = load %struct._object*, %struct._object** %next, align 8, !dbg !7523, !tbaa !2681
  %cmp16 = icmp ne %struct._object* %31, @_Py_NoneStruct, !dbg !7527
  %32 = ptrtoint %struct._object* %31 to i64, !dbg !7541
  br i1 %cmp13, label %if.then.15, label %if.else, !dbg !7543

if.then.15:                                       ; preds = %for.end
  br i1 %cmp16, label %if.then.18, label %cleanup, !dbg !7544

if.then.18:                                       ; preds = %if.then.15
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %31, i64 0, i32 1, !dbg !7545
  %33 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7545, !tbaa !2667
  %cmp19 = icmp eq %struct._typeobject* %33, @teedataobject_type, !dbg !7547
  br i1 %cmp19, label %if.end.22, label %do.body.34, !dbg !7548

if.end.22:                                        ; preds = %if.then.18
  %ob_refcnt23 = getelementptr inbounds %struct._object, %struct._object* %31, i64 0, i32 0, !dbg !7549
  %34 = load i64, i64* %ob_refcnt23, align 8, !dbg !7549, !tbaa !2694
  %inc24 = add i64 %34, 1, !dbg !7549
  store i64 %inc24, i64* %ob_refcnt23, align 8, !dbg !7549, !tbaa !2694
  call void @llvm.dbg.value(metadata %struct._object** %next, i64 0, metadata !2429, metadata !2664), !dbg !7493
  %35 = getelementptr inbounds %struct._object, %struct._object* %call.i, i64 2, i32 0, !dbg !7550
  store i64 %32, i64* %35, align 8, !dbg !7550, !tbaa !7179
  br label %cleanup, !dbg !7551

if.else:                                          ; preds = %for.end
  br i1 %cmp16, label %do.body.34, label %cleanup, !dbg !7528

do.body.34:                                       ; preds = %for.end.thread, %if.else, %if.end.4, %if.then.18
  call void @llvm.dbg.value(metadata %struct._object* %call.i, i64 0, metadata !2432, metadata !2664), !dbg !7552
  call void @llvm.dbg.value(metadata %struct._object* %call.i, i64 0, metadata !2434, metadata !2664), !dbg !7554
  %ob_refcnt35 = getelementptr inbounds %struct._object, %struct._object* %call.i, i64 0, i32 0, !dbg !7556
  %36 = load i64, i64* %ob_refcnt35, align 8, !dbg !7556, !tbaa !2694
  %dec = add i64 %36, -1, !dbg !7556
  store i64 %dec, i64* %ob_refcnt35, align 8, !dbg !7556, !tbaa !2694
  %cmp36 = icmp eq i64 %dec, 0, !dbg !7556
  br i1 %cmp36, label %if.else.39, label %if.end.42, !dbg !7558

if.else.39:                                       ; preds = %do.body.34
  %ob_type40 = getelementptr inbounds %struct._object, %struct._object* %call.i, i64 0, i32 1, !dbg !7559
  %37 = load %struct._typeobject*, %struct._typeobject** %ob_type40, align 8, !dbg !7559, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %37, i64 0, i32 4, !dbg !7559
  %38 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7559, !tbaa !2717
  call void %38(%struct._object* %call.i) #1, !dbg !7559
  br label %if.end.42

if.end.42:                                        ; preds = %if.else.39, %do.body.34
  %39 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !7561, !tbaa !2681
  call void @PyErr_SetString(%struct._object* %39, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.107, i64 0, i64 0)) #1, !dbg !7562
  br label %cleanup, !dbg !7563

cleanup:                                          ; preds = %for.end.thread, %if.end, %if.end.22, %if.then.15, %if.else, %entry, %if.end.42
  %retval.0 = phi %struct._object* [ null, %if.end.42 ], [ null, %entry ], [ %call.i, %if.else ], [ %call.i, %if.then.15 ], [ %call.i, %if.end.22 ], [ null, %if.end ], [ %call.i, %for.end.thread ]
  call void @llvm.lifetime.end(i64 8, i8* %2) #1, !dbg !7564
  call void @llvm.lifetime.end(i64 8, i8* %1) #1, !dbg !7564
  call void @llvm.lifetime.end(i64 8, i8* %0) #1, !dbg !7564
  ret %struct._object* %retval.0, !dbg !7564
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @teedataobject_reduce(%struct.teedataobject* nocapture readonly %tdo) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.teedataobject* %tdo, i64 0, metadata !2418, metadata !2664), !dbg !7565
  %numread = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %tdo, i64 0, i32 2, !dbg !7566
  %0 = load i32, i32* %numread, align 4, !dbg !7566, !tbaa !7199
  %conv = sext i32 %0 to i64, !dbg !7567
  %call = tail call %struct._object* @PyList_New(i64 %conv) #1, !dbg !7568
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !2420, metadata !2664), !dbg !7569
  %tobool = icmp eq %struct._object* %call, null, !dbg !7570
  br i1 %tobool, label %cleanup, label %for.cond.preheader, !dbg !7572

for.cond.preheader:                               ; preds = %entry
  %1 = load i32, i32* %numread, align 4, !dbg !7573, !tbaa !7199
  %cmp.29 = icmp sgt i32 %1, 0, !dbg !7576
  br i1 %cmp.29, label %for.body.lr.ph, label %for.end, !dbg !7577

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %ob_item = getelementptr inbounds %struct._object, %struct._object* %call, i64 1, i32 1, !dbg !7578
  %2 = bitcast %struct._typeobject** %ob_item to %struct._object***, !dbg !7578
  %xtraiter = and i32 %1, 1, !dbg !7577
  %lcmp.mod = icmp eq i32 %xtraiter, 0, !dbg !7577
  br i1 %lcmp.mod, label %for.body.lr.ph.split, label %for.body.prol, !dbg !7577

for.body.prol:                                    ; preds = %for.body.lr.ph
  %arrayidx.prol = getelementptr %struct.teedataobject, %struct.teedataobject* %tdo, i64 0, i32 4, i64 0, !dbg !7580
  %3 = load %struct._object*, %struct._object** %arrayidx.prol, align 8, !dbg !7580, !tbaa !2681
  %ob_refcnt.prol = getelementptr inbounds %struct._object, %struct._object* %3, i64 0, i32 0, !dbg !7580
  %4 = load i64, i64* %ob_refcnt.prol, align 8, !dbg !7580, !tbaa !2694
  %inc.prol = add i64 %4, 1, !dbg !7580
  store i64 %inc.prol, i64* %ob_refcnt.prol, align 8, !dbg !7580, !tbaa !2694
  %5 = ptrtoint %struct._object* %3 to i64, !dbg !7578
  %6 = bitcast %struct._typeobject** %ob_item to i64**, !dbg !7578
  %7 = load i64*, i64** %6, align 8, !dbg !7578, !tbaa !7533
  store i64 %5, i64* %7, align 8, !dbg !7578, !tbaa !2681
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !2419, metadata !2664), !dbg !7581
  br label %for.body.lr.ph.split, !dbg !7577

for.body.lr.ph.split:                             ; preds = %for.body.lr.ph, %for.body.prol
  %i.030.unr = phi i32 [ 0, %for.body.lr.ph ], [ 1, %for.body.prol ]
  %8 = icmp eq i32 %1, 1, !dbg !7577
  br i1 %8, label %for.end.loopexit, label %for.body.lr.ph.split.split, !dbg !7577

for.body.lr.ph.split.split:                       ; preds = %for.body.lr.ph.split
  br label %for.body, !dbg !7577

for.body:                                         ; preds = %for.body, %for.body.lr.ph.split.split
  %i.030 = phi i32 [ %i.030.unr, %for.body.lr.ph.split.split ], [ %inc9.1, %for.body ]
  %idxprom = sext i32 %i.030 to i64, !dbg !7580
  %arrayidx = getelementptr %struct.teedataobject, %struct.teedataobject* %tdo, i64 0, i32 4, i64 %idxprom, !dbg !7580
  %9 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !7580, !tbaa !2681
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i64 0, i32 0, !dbg !7580
  %10 = load i64, i64* %ob_refcnt, align 8, !dbg !7580, !tbaa !2694
  %inc = add i64 %10, 1, !dbg !7580
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !7580, !tbaa !2694
  %11 = ptrtoint %struct._object* %9 to i64, !dbg !7578
  %12 = load %struct._object**, %struct._object*** %2, align 8, !dbg !7578, !tbaa !7533
  %arrayidx8 = getelementptr %struct._object*, %struct._object** %12, i64 %idxprom, !dbg !7578
  %13 = bitcast %struct._object** %arrayidx8 to i64*, !dbg !7578
  store i64 %11, i64* %13, align 8, !dbg !7578, !tbaa !2681
  %inc9 = add i32 %i.030, 1, !dbg !7582
  tail call void @llvm.dbg.value(metadata i32 %inc9, i64 0, metadata !2419, metadata !2664), !dbg !7581
  %idxprom.1 = sext i32 %inc9 to i64, !dbg !7580
  %arrayidx.1 = getelementptr %struct.teedataobject, %struct.teedataobject* %tdo, i64 0, i32 4, i64 %idxprom.1, !dbg !7580
  %14 = load %struct._object*, %struct._object** %arrayidx.1, align 8, !dbg !7580, !tbaa !2681
  %ob_refcnt.1 = getelementptr inbounds %struct._object, %struct._object* %14, i64 0, i32 0, !dbg !7580
  %15 = load i64, i64* %ob_refcnt.1, align 8, !dbg !7580, !tbaa !2694
  %inc.1 = add i64 %15, 1, !dbg !7580
  store i64 %inc.1, i64* %ob_refcnt.1, align 8, !dbg !7580, !tbaa !2694
  %16 = ptrtoint %struct._object* %14 to i64, !dbg !7578
  %17 = load %struct._object**, %struct._object*** %2, align 8, !dbg !7578, !tbaa !7533
  %arrayidx8.1 = getelementptr %struct._object*, %struct._object** %17, i64 %idxprom.1, !dbg !7578
  %18 = bitcast %struct._object** %arrayidx8.1 to i64*, !dbg !7578
  store i64 %16, i64* %18, align 8, !dbg !7578, !tbaa !2681
  %inc9.1 = add i32 %i.030, 2, !dbg !7582
  tail call void @llvm.dbg.value(metadata i32 %inc9, i64 0, metadata !2419, metadata !2664), !dbg !7581
  %cmp.1 = icmp slt i32 %inc9.1, %1, !dbg !7576
  br i1 %cmp.1, label %for.body, label %for.end.loopexit.unr-lcssa, !dbg !7577

for.end.loopexit.unr-lcssa:                       ; preds = %for.body
  br label %for.end.loopexit, !dbg !7583

for.end.loopexit:                                 ; preds = %for.body.lr.ph.split, %for.end.loopexit.unr-lcssa
  br label %for.end, !dbg !7583

for.end:                                          ; preds = %for.end.loopexit, %for.cond.preheader
  %ob_type = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %tdo, i64 0, i32 0, i32 1, !dbg !7583
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7583, !tbaa !2667
  %it = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %tdo, i64 0, i32 1, !dbg !7584
  %20 = load %struct._object*, %struct._object** %it, align 8, !dbg !7584, !tbaa !7186
  %nextlink = getelementptr inbounds %struct.teedataobject, %struct.teedataobject* %tdo, i64 0, i32 3, !dbg !7585
  %21 = load %struct._object*, %struct._object** %nextlink, align 8, !dbg !7585, !tbaa !7179
  %tobool10 = icmp eq %struct._object* %21, null, !dbg !7586
  %_Py_NoneStruct. = select i1 %tobool10, %struct._object* @_Py_NoneStruct, %struct._object* %21, !dbg !7586
  %call12 = tail call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.105, i64 0, i64 0), %struct._typeobject* %19, %struct._object* %20, %struct._object* %call, %struct._object* %_Py_NoneStruct.) #1, !dbg !7587
  br label %cleanup, !dbg !7588

cleanup:                                          ; preds = %entry, %for.end
  %retval.0 = phi %struct._object* [ %call12, %for.end ], [ null, %entry ]
  ret %struct._object* %retval.0, !dbg !7589
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @tee(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %n = alloca i64, align 8
  %iterable = alloca %struct._object*, align 8
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2439, metadata !2664), !dbg !7590
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2440, metadata !2664), !dbg !7591
  %0 = bitcast i64* %n to i8*, !dbg !7592
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7592
  tail call void @llvm.dbg.value(metadata i64 2, i64 0, metadata !2442, metadata !2664), !dbg !7593
  store i64 2, i64* %n, align 8, !dbg !7593, !tbaa !2984
  %1 = bitcast %struct._object** %iterable to i8*, !dbg !7594
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !7594
  tail call void @llvm.dbg.value(metadata i64* %n, i64 0, metadata !2442, metadata !2664), !dbg !7593
  tail call void @llvm.dbg.value(metadata %struct._object** %iterable, i64 0, metadata !2444, metadata !2664), !dbg !7595
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %args, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.110, i64 0, i64 0), %struct._object** nonnull %iterable, i64* nonnull %n) #1, !dbg !7596
  %tobool = icmp eq i32 %call, 0, !dbg !7596
  br i1 %tobool, label %cleanup, label %if.end, !dbg !7598

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i64* %n, i64 0, metadata !2442, metadata !2664), !dbg !7593
  %2 = load i64, i64* %n, align 8, !dbg !7599, !tbaa !2984
  %cmp = icmp slt i64 %2, 0, !dbg !7601
  br i1 %cmp, label %if.then.1, label %if.end.2, !dbg !7602

if.then.1:                                        ; preds = %if.end
  %3 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !7603, !tbaa !2681
  call void @PyErr_SetString(%struct._object* %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.111, i64 0, i64 0)) #1, !dbg !7605
  br label %cleanup, !dbg !7606

if.end.2:                                         ; preds = %if.end
  %call3 = call %struct._object* @PyTuple_New(i64 %2) #1, !dbg !7607
  call void @llvm.dbg.value(metadata %struct._object* %call3, i64 0, metadata !2446, metadata !2664), !dbg !7608
  %cmp4 = icmp eq %struct._object* %call3, null, !dbg !7609
  br i1 %cmp4, label %cleanup, label %if.end.6, !dbg !7611

if.end.6:                                         ; preds = %if.end.2
  call void @llvm.dbg.value(metadata i64* %n, i64 0, metadata !2442, metadata !2664), !dbg !7593
  %4 = load i64, i64* %n, align 8, !dbg !7612, !tbaa !2984
  %cmp7 = icmp eq i64 %4, 0, !dbg !7614
  br i1 %cmp7, label %cleanup, label %if.end.9, !dbg !7615

if.end.9:                                         ; preds = %if.end.6
  call void @llvm.dbg.value(metadata %struct._object** %iterable, i64 0, metadata !2444, metadata !2664), !dbg !7595
  %5 = load %struct._object*, %struct._object** %iterable, align 8, !dbg !7616, !tbaa !2681
  %call10 = call %struct._object* @PyObject_GetIter(%struct._object* %5) #1, !dbg !7617
  call void @llvm.dbg.value(metadata %struct._object* %call10, i64 0, metadata !2443, metadata !2664), !dbg !7618
  %cmp11 = icmp eq %struct._object* %call10, null, !dbg !7619
  br i1 %cmp11, label %do.body, label %if.end.16, !dbg !7620

do.body:                                          ; preds = %if.end.9
  call void @llvm.dbg.value(metadata %struct._object* %call3, i64 0, metadata !2447, metadata !2664), !dbg !7621
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call3, i64 0, i32 0, !dbg !7623
  %6 = load i64, i64* %ob_refcnt, align 8, !dbg !7623, !tbaa !2694
  %dec = add i64 %6, -1, !dbg !7623
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7623, !tbaa !2694
  %cmp13 = icmp eq i64 %dec, 0, !dbg !7623
  br i1 %cmp13, label %if.else, label %cleanup, !dbg !7625

if.else:                                          ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call3, i64 0, i32 1, !dbg !7626
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7626, !tbaa !2667
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i64 0, i32 4, !dbg !7626
  %8 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7626, !tbaa !2717
  call void %8(%struct._object* %call3) #1, !dbg !7626
  br label %cleanup

if.end.16:                                        ; preds = %if.end.9
  %call17 = call i32 @_PyObject_HasAttrId(%struct._object* %call10, %struct._Py_Identifier* nonnull @tee.PyId___copy__) #1, !dbg !7628
  %tobool18 = icmp eq i32 %call17, 0, !dbg !7628
  br i1 %tobool18, label %if.then.19, label %if.end.49, !dbg !7629

if.then.19:                                       ; preds = %if.end.16
  %call20 = call fastcc %struct._object* @tee_fromiterable(%struct._object* %call10), !dbg !7630
  call void @llvm.dbg.value(metadata %struct._object* %call20, i64 0, metadata !2445, metadata !2664), !dbg !7631
  call void @llvm.dbg.value(metadata %struct._object* %call10, i64 0, metadata !2451, metadata !2664), !dbg !7632
  %ob_refcnt23 = getelementptr inbounds %struct._object, %struct._object* %call10, i64 0, i32 0, !dbg !7634
  %9 = load i64, i64* %ob_refcnt23, align 8, !dbg !7634, !tbaa !2694
  %dec24 = add i64 %9, -1, !dbg !7634
  store i64 %dec24, i64* %ob_refcnt23, align 8, !dbg !7634, !tbaa !2694
  %cmp25 = icmp eq i64 %dec24, 0, !dbg !7634
  br i1 %cmp25, label %if.else.27, label %if.end.30, !dbg !7636

if.else.27:                                       ; preds = %if.then.19
  %ob_type28 = getelementptr inbounds %struct._object, %struct._object* %call10, i64 0, i32 1, !dbg !7637
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type28, align 8, !dbg !7637, !tbaa !2667
  %tp_dealloc29 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i64 0, i32 4, !dbg !7637
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc29, align 8, !dbg !7637, !tbaa !2717
  call void %11(%struct._object* %call10) #1, !dbg !7637
  br label %if.end.30

if.end.30:                                        ; preds = %if.then.19, %if.else.27
  %cmp33 = icmp eq %struct._object* %call20, null, !dbg !7639
  br i1 %cmp33, label %do.body.35, label %if.end.49, !dbg !7640

do.body.35:                                       ; preds = %if.end.30
  call void @llvm.dbg.value(metadata %struct._object* %call3, i64 0, metadata !2455, metadata !2664), !dbg !7641
  %ob_refcnt37 = getelementptr inbounds %struct._object, %struct._object* %call3, i64 0, i32 0, !dbg !7643
  %12 = load i64, i64* %ob_refcnt37, align 8, !dbg !7643, !tbaa !2694
  %dec38 = add i64 %12, -1, !dbg !7643
  store i64 %dec38, i64* %ob_refcnt37, align 8, !dbg !7643, !tbaa !2694
  %cmp39 = icmp eq i64 %dec38, 0, !dbg !7643
  br i1 %cmp39, label %if.else.41, label %cleanup, !dbg !7645

if.else.41:                                       ; preds = %do.body.35
  %ob_type42 = getelementptr inbounds %struct._object, %struct._object* %call3, i64 0, i32 1, !dbg !7646
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type42, align 8, !dbg !7646, !tbaa !2667
  %tp_dealloc43 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i64 0, i32 4, !dbg !7646
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc43, align 8, !dbg !7646, !tbaa !2717
  call void %14(%struct._object* %call3) #1, !dbg !7646
  br label %cleanup

if.end.49:                                        ; preds = %if.end.16, %if.end.30
  %copyable.0 = phi %struct._object* [ %call20, %if.end.30 ], [ %call10, %if.end.16 ]
  %ob_item = getelementptr inbounds %struct._object, %struct._object* %call3, i64 1, i32 1, !dbg !7648
  %15 = bitcast %struct._typeobject** %ob_item to [1 x %struct._object*]*, !dbg !7648
  %arrayidx = bitcast %struct._typeobject** %ob_item to %struct._object**, !dbg !7648
  store %struct._object* %copyable.0, %struct._object** %arrayidx, align 8, !dbg !7648, !tbaa !2681
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !2441, metadata !2664), !dbg !7649
  call void @llvm.dbg.value(metadata i64* %n, i64 0, metadata !2442, metadata !2664), !dbg !7593
  %16 = load i64, i64* %n, align 8, !dbg !7650, !tbaa !2984
  %cmp50.106 = icmp sgt i64 %16, 1, !dbg !7651
  br i1 %cmp50.106, label %for.body.preheader, label %cleanup, !dbg !7652

for.body.preheader:                               ; preds = %if.end.49
  br label %for.body, !dbg !7653

for.body:                                         ; preds = %for.body.preheader, %if.end.66
  %i.0108 = phi i64 [ %inc, %if.end.66 ], [ 1, %for.body.preheader ]
  %copyable.1107 = phi %struct._object* [ %call51, %if.end.66 ], [ %copyable.0, %for.body.preheader ]
  %call51 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId(%struct._object* %copyable.1107, %struct._Py_Identifier* nonnull @tee.PyId___copy__, i8* null) #1, !dbg !7653
  call void @llvm.dbg.value(metadata %struct._object* %call51, i64 0, metadata !2445, metadata !2664), !dbg !7631
  %cmp52 = icmp eq %struct._object* %call51, null, !dbg !7654
  br i1 %cmp52, label %do.body.54, label %if.end.66, !dbg !7655

do.body.54:                                       ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct._object* %call3, i64 0, metadata !2459, metadata !2664), !dbg !7656
  %ob_refcnt56 = getelementptr inbounds %struct._object, %struct._object* %call3, i64 0, i32 0, !dbg !7658
  %17 = load i64, i64* %ob_refcnt56, align 8, !dbg !7658, !tbaa !2694
  %dec57 = add i64 %17, -1, !dbg !7658
  store i64 %dec57, i64* %ob_refcnt56, align 8, !dbg !7658, !tbaa !2694
  %cmp58 = icmp eq i64 %dec57, 0, !dbg !7658
  br i1 %cmp58, label %if.else.60, label %cleanup, !dbg !7660

if.else.60:                                       ; preds = %do.body.54
  %ob_type61 = getelementptr inbounds %struct._object, %struct._object* %call3, i64 0, i32 1, !dbg !7661
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type61, align 8, !dbg !7661, !tbaa !2667
  %tp_dealloc62 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i64 0, i32 4, !dbg !7661
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc62, align 8, !dbg !7661, !tbaa !2717
  call void %19(%struct._object* %call3) #1, !dbg !7661
  br label %cleanup

if.end.66:                                        ; preds = %for.body
  %arrayidx68 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %15, i64 0, i64 %i.0108, !dbg !7663
  store %struct._object* %call51, %struct._object** %arrayidx68, align 8, !dbg !7663, !tbaa !2681
  %inc = add i64 %i.0108, 1, !dbg !7664
  call void @llvm.dbg.value(metadata i64 %inc, i64 0, metadata !2441, metadata !2664), !dbg !7649
  call void @llvm.dbg.value(metadata i64* %n, i64 0, metadata !2442, metadata !2664), !dbg !7593
  %20 = load i64, i64* %n, align 8, !dbg !7650, !tbaa !2984
  %cmp50 = icmp slt i64 %inc, %20, !dbg !7651
  br i1 %cmp50, label %for.body, label %cleanup.loopexit, !dbg !7652

cleanup.loopexit:                                 ; preds = %if.end.66
  br label %cleanup, !dbg !7665

cleanup:                                          ; preds = %cleanup.loopexit, %if.end.49, %if.else.60, %do.body.54, %if.else.41, %do.body.35, %if.else, %do.body, %if.end.6, %if.end.2, %entry, %if.then.1
  %retval.0 = phi %struct._object* [ null, %if.then.1 ], [ null, %entry ], [ null, %if.end.2 ], [ %call3, %if.end.6 ], [ null, %do.body ], [ null, %if.else ], [ null, %do.body.35 ], [ null, %if.else.41 ], [ null, %do.body.54 ], [ null, %if.else.60 ], [ %call3, %if.end.49 ], [ %call3, %cleanup.loopexit ]
  call void @llvm.lifetime.end(i64 8, i8* %1) #1, !dbg !7665
  call void @llvm.lifetime.end(i64 8, i8* %0) #1, !dbg !7665
  ret %struct._object* %retval.0, !dbg !7665
}

declare i32 @_PyObject_HasAttrId(%struct._object*, %struct._Py_Identifier*) #3

declare %struct._object* @_PyObject_CallMethodId(%struct._object*, %struct._Py_Identifier*, i8*, ...) #3

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #2

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { nounwind readnone }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2661, !2662}
!llvm.ident = !{!2663}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/final)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !540, globals: !2466)
!1 = !DIFile(filename: "./Modules/itertoolsmodule.c", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!2 = !{}
!3 = !{!4, !89, !350, !358, !359, !367, !377, !387, !395, !403, !94, !411, !421, !428, !435, !442, !10, !449, !457, !467, !478, !487, !494, !501, !511, !523, !531, !43}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64, align: 64)
!5 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyObject", file: !6, line: 109, baseType: !7)
!6 = !DIFile(filename: "Include/object.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!7 = !DICompositeType(tag: DW_TAG_structure_type, name: "_object", file: !6, line: 105, size: 128, align: 64, elements: !8)
!8 = !{!9, !17}
!9 = !DIDerivedType(tag: DW_TAG_member, name: "ob_refcnt", scope: !7, file: !6, line: 107, baseType: !10, size: 64, align: 64)
!10 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_ssize_t", file: !11, line: 177, baseType: !12)
!11 = !DIFile(filename: "Include/pyport.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!12 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !13, line: 102, baseType: !14)
!13 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!14 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !15, line: 181, baseType: !16)
!15 = !DIFile(filename: "/usr/include/bits/types.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!16 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "ob_type", scope: !7, file: !6, line: 108, baseType: !18, size: 64, align: 64, offset: 64)
!18 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19, size: 64, align: 64)
!19 = !DICompositeType(tag: DW_TAG_structure_type, name: "_typeobject", file: !6, line: 334, size: 3200, align: 64, elements: !20)
!20 = !{!21, !27, !31, !32, !33, !38, !102, !107, !112, !113, !118, !170, !201, !213, !219, !220, !221, !223, !225, !256, !257, !258, !267, !268, !273, !274, !276, !278, !288, !298, !316, !317, !318, !320, !322, !323, !325, !330, !335, !340, !341, !342, !343, !344, !345, !346, !347, !349}
!21 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !19, file: !6, line: 335, baseType: !22, size: 192, align: 64)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyVarObject", file: !6, line: 114, baseType: !23)
!23 = !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 111, size: 192, align: 64, elements: !24)
!24 = !{!25, !26}
!25 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !23, file: !6, line: 112, baseType: !5, size: 128, align: 64)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "ob_size", scope: !23, file: !6, line: 113, baseType: !10, size: 64, align: 64, offset: 128)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "tp_name", scope: !19, file: !6, line: 336, baseType: !28, size: 64, align: 64, offset: 192)
!28 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !29, size: 64, align: 64)
!29 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !30)
!30 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "tp_basicsize", scope: !19, file: !6, line: 337, baseType: !10, size: 64, align: 64, offset: 256)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "tp_itemsize", scope: !19, file: !6, line: 337, baseType: !10, size: 64, align: 64, offset: 320)
!33 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dealloc", scope: !19, file: !6, line: 341, baseType: !34, size: 64, align: 64, offset: 384)
!34 = !DIDerivedType(tag: DW_TAG_typedef, name: "destructor", file: !6, line: 308, baseType: !35)
!35 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !36, size: 64, align: 64)
!36 = !DISubroutineType(types: !37)
!37 = !{null, !4}
!38 = !DIDerivedType(tag: DW_TAG_member, name: "tp_print", scope: !19, file: !6, line: 342, baseType: !39, size: 64, align: 64, offset: 448)
!39 = !DIDerivedType(tag: DW_TAG_typedef, name: "printfunc", file: !6, line: 314, baseType: !40)
!40 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !41, size: 64, align: 64)
!41 = !DISubroutineType(types: !42)
!42 = !{!43, !4, !44, !43}
!43 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!44 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !45, size: 64, align: 64)
!45 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !13, line: 48, baseType: !46)
!46 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !47, line: 246, size: 1728, align: 64, elements: !48)
!47 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!48 = !{!49, !50, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !70, !71, !72, !73, !75, !77, !79, !83, !86, !88, !90, !91, !92, !93, !97, !98}
!49 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !46, file: !47, line: 247, baseType: !43, size: 32, align: 32)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !46, file: !47, line: 252, baseType: !51, size: 64, align: 64, offset: 64)
!51 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !30, size: 64, align: 64)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !46, file: !47, line: 253, baseType: !51, size: 64, align: 64, offset: 128)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !46, file: !47, line: 254, baseType: !51, size: 64, align: 64, offset: 192)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !46, file: !47, line: 255, baseType: !51, size: 64, align: 64, offset: 256)
!55 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !46, file: !47, line: 256, baseType: !51, size: 64, align: 64, offset: 320)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !46, file: !47, line: 257, baseType: !51, size: 64, align: 64, offset: 384)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !46, file: !47, line: 258, baseType: !51, size: 64, align: 64, offset: 448)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !46, file: !47, line: 259, baseType: !51, size: 64, align: 64, offset: 512)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !46, file: !47, line: 261, baseType: !51, size: 64, align: 64, offset: 576)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !46, file: !47, line: 262, baseType: !51, size: 64, align: 64, offset: 640)
!61 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !46, file: !47, line: 263, baseType: !51, size: 64, align: 64, offset: 704)
!62 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !46, file: !47, line: 265, baseType: !63, size: 64, align: 64, offset: 768)
!63 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !64, size: 64, align: 64)
!64 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !47, line: 161, size: 192, align: 64, elements: !65)
!65 = !{!66, !67, !69}
!66 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !64, file: !47, line: 162, baseType: !63, size: 64, align: 64)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !64, file: !47, line: 163, baseType: !68, size: 64, align: 64, offset: 64)
!68 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !46, size: 64, align: 64)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !64, file: !47, line: 167, baseType: !43, size: 32, align: 32, offset: 128)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !46, file: !47, line: 267, baseType: !68, size: 64, align: 64, offset: 832)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !46, file: !47, line: 269, baseType: !43, size: 32, align: 32, offset: 896)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !46, file: !47, line: 273, baseType: !43, size: 32, align: 32, offset: 928)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !46, file: !47, line: 275, baseType: !74, size: 64, align: 64, offset: 960)
!74 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !15, line: 140, baseType: !16)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !46, file: !47, line: 279, baseType: !76, size: 16, align: 16, offset: 1024)
!76 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !46, file: !47, line: 280, baseType: !78, size: 8, align: 8, offset: 1040)
!78 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !46, file: !47, line: 281, baseType: !80, size: 8, align: 8, offset: 1048)
!80 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 8, align: 8, elements: !81)
!81 = !{!82}
!82 = !DISubrange(count: 1)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !46, file: !47, line: 285, baseType: !84, size: 64, align: 64, offset: 1088)
!84 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !85, size: 64, align: 64)
!85 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !47, line: 155, baseType: null)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !46, file: !47, line: 294, baseType: !87, size: 64, align: 64, offset: 1152)
!87 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !15, line: 141, baseType: !16)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !46, file: !47, line: 303, baseType: !89, size: 64, align: 64, offset: 1216)
!89 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !46, file: !47, line: 304, baseType: !89, size: 64, align: 64, offset: 1280)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !46, file: !47, line: 305, baseType: !89, size: 64, align: 64, offset: 1344)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !46, file: !47, line: 306, baseType: !89, size: 64, align: 64, offset: 1408)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !46, file: !47, line: 307, baseType: !94, size: 64, align: 64, offset: 1472)
!94 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !95, line: 62, baseType: !96)
!95 = !DIFile(filename: "/home/juneyoung.lee/llvm-install-3.7.0/bin/../lib/clang/3.7.0/include/stddef.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!96 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !46, file: !47, line: 309, baseType: !43, size: 32, align: 32, offset: 1536)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !46, file: !47, line: 311, baseType: !99, size: 160, align: 8, offset: 1568)
!99 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 160, align: 8, elements: !100)
!100 = !{!101}
!101 = !DISubrange(count: 20)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattr", scope: !19, file: !6, line: 343, baseType: !103, size: 64, align: 64, offset: 512)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrfunc", file: !6, line: 316, baseType: !104)
!104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 64, align: 64)
!105 = !DISubroutineType(types: !106)
!106 = !{!4, !4, !51}
!107 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattr", scope: !19, file: !6, line: 344, baseType: !108, size: 64, align: 64, offset: 576)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrfunc", file: !6, line: 318, baseType: !109)
!109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 64, align: 64)
!110 = !DISubroutineType(types: !111)
!111 = !{!43, !4, !51, !4}
!112 = !DIDerivedType(tag: DW_TAG_member, name: "tp_reserved", scope: !19, file: !6, line: 345, baseType: !89, size: 64, align: 64, offset: 640)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "tp_repr", scope: !19, file: !6, line: 346, baseType: !114, size: 64, align: 64, offset: 704)
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "reprfunc", file: !6, line: 320, baseType: !115)
!115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !116, size: 64, align: 64)
!116 = !DISubroutineType(types: !117)
!117 = !{!4, !4}
!118 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_number", scope: !19, file: !6, line: 350, baseType: !119, size: 64, align: 64, offset: 768)
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 64, align: 64)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyNumberMethods", file: !6, line: 278, baseType: !121)
!121 = !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 236, size: 2176, align: 64, elements: !122)
!122 = !{!123, !128, !129, !130, !131, !132, !137, !139, !140, !141, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169}
!123 = !DIDerivedType(tag: DW_TAG_member, name: "nb_add", scope: !121, file: !6, line: 241, baseType: !124, size: 64, align: 64)
!124 = !DIDerivedType(tag: DW_TAG_typedef, name: "binaryfunc", file: !6, line: 166, baseType: !125)
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 64, align: 64)
!126 = !DISubroutineType(types: !127)
!127 = !{!4, !4, !4}
!128 = !DIDerivedType(tag: DW_TAG_member, name: "nb_subtract", scope: !121, file: !6, line: 242, baseType: !124, size: 64, align: 64, offset: 64)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "nb_multiply", scope: !121, file: !6, line: 243, baseType: !124, size: 64, align: 64, offset: 128)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "nb_remainder", scope: !121, file: !6, line: 244, baseType: !124, size: 64, align: 64, offset: 192)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "nb_divmod", scope: !121, file: !6, line: 245, baseType: !124, size: 64, align: 64, offset: 256)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "nb_power", scope: !121, file: !6, line: 246, baseType: !133, size: 64, align: 64, offset: 320)
!133 = !DIDerivedType(tag: DW_TAG_typedef, name: "ternaryfunc", file: !6, line: 167, baseType: !134)
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !135, size: 64, align: 64)
!135 = !DISubroutineType(types: !136)
!136 = !{!4, !4, !4, !4}
!137 = !DIDerivedType(tag: DW_TAG_member, name: "nb_negative", scope: !121, file: !6, line: 247, baseType: !138, size: 64, align: 64, offset: 384)
!138 = !DIDerivedType(tag: DW_TAG_typedef, name: "unaryfunc", file: !6, line: 165, baseType: !115)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "nb_positive", scope: !121, file: !6, line: 248, baseType: !138, size: 64, align: 64, offset: 448)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "nb_absolute", scope: !121, file: !6, line: 249, baseType: !138, size: 64, align: 64, offset: 512)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bool", scope: !121, file: !6, line: 250, baseType: !142, size: 64, align: 64, offset: 576)
!142 = !DIDerivedType(tag: DW_TAG_typedef, name: "inquiry", file: !6, line: 168, baseType: !143)
!143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 64, align: 64)
!144 = !DISubroutineType(types: !145)
!145 = !{!43, !4}
!146 = !DIDerivedType(tag: DW_TAG_member, name: "nb_invert", scope: !121, file: !6, line: 251, baseType: !138, size: 64, align: 64, offset: 640)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "nb_lshift", scope: !121, file: !6, line: 252, baseType: !124, size: 64, align: 64, offset: 704)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "nb_rshift", scope: !121, file: !6, line: 253, baseType: !124, size: 64, align: 64, offset: 768)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "nb_and", scope: !121, file: !6, line: 254, baseType: !124, size: 64, align: 64, offset: 832)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "nb_xor", scope: !121, file: !6, line: 255, baseType: !124, size: 64, align: 64, offset: 896)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "nb_or", scope: !121, file: !6, line: 256, baseType: !124, size: 64, align: 64, offset: 960)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "nb_int", scope: !121, file: !6, line: 257, baseType: !138, size: 64, align: 64, offset: 1024)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "nb_reserved", scope: !121, file: !6, line: 258, baseType: !89, size: 64, align: 64, offset: 1088)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "nb_float", scope: !121, file: !6, line: 259, baseType: !138, size: 64, align: 64, offset: 1152)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_add", scope: !121, file: !6, line: 261, baseType: !124, size: 64, align: 64, offset: 1216)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_subtract", scope: !121, file: !6, line: 262, baseType: !124, size: 64, align: 64, offset: 1280)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_multiply", scope: !121, file: !6, line: 263, baseType: !124, size: 64, align: 64, offset: 1344)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_remainder", scope: !121, file: !6, line: 264, baseType: !124, size: 64, align: 64, offset: 1408)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_power", scope: !121, file: !6, line: 265, baseType: !133, size: 64, align: 64, offset: 1472)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_lshift", scope: !121, file: !6, line: 266, baseType: !124, size: 64, align: 64, offset: 1536)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_rshift", scope: !121, file: !6, line: 267, baseType: !124, size: 64, align: 64, offset: 1600)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_and", scope: !121, file: !6, line: 268, baseType: !124, size: 64, align: 64, offset: 1664)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_xor", scope: !121, file: !6, line: 269, baseType: !124, size: 64, align: 64, offset: 1728)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_or", scope: !121, file: !6, line: 270, baseType: !124, size: 64, align: 64, offset: 1792)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "nb_floor_divide", scope: !121, file: !6, line: 272, baseType: !124, size: 64, align: 64, offset: 1856)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "nb_true_divide", scope: !121, file: !6, line: 273, baseType: !124, size: 64, align: 64, offset: 1920)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_floor_divide", scope: !121, file: !6, line: 274, baseType: !124, size: 64, align: 64, offset: 1984)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_true_divide", scope: !121, file: !6, line: 275, baseType: !124, size: 64, align: 64, offset: 2048)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "nb_index", scope: !121, file: !6, line: 277, baseType: !138, size: 64, align: 64, offset: 2112)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_sequence", scope: !19, file: !6, line: 351, baseType: !171, size: 64, align: 64, offset: 832)
!171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !172, size: 64, align: 64)
!172 = !DIDerivedType(tag: DW_TAG_typedef, name: "PySequenceMethods", file: !6, line: 292, baseType: !173)
!173 = !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 280, size: 640, align: 64, elements: !174)
!174 = !{!175, !180, !181, !186, !187, !188, !193, !194, !199, !200}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "sq_length", scope: !173, file: !6, line: 281, baseType: !176, size: 64, align: 64)
!176 = !DIDerivedType(tag: DW_TAG_typedef, name: "lenfunc", file: !6, line: 169, baseType: !177)
!177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 64, align: 64)
!178 = !DISubroutineType(types: !179)
!179 = !{!10, !4}
!180 = !DIDerivedType(tag: DW_TAG_member, name: "sq_concat", scope: !173, file: !6, line: 282, baseType: !124, size: 64, align: 64, offset: 64)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "sq_repeat", scope: !173, file: !6, line: 283, baseType: !182, size: 64, align: 64, offset: 128)
!182 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeargfunc", file: !6, line: 170, baseType: !183)
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !184, size: 64, align: 64)
!184 = !DISubroutineType(types: !185)
!185 = !{!4, !4, !10}
!186 = !DIDerivedType(tag: DW_TAG_member, name: "sq_item", scope: !173, file: !6, line: 284, baseType: !182, size: 64, align: 64, offset: 192)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_slice", scope: !173, file: !6, line: 285, baseType: !89, size: 64, align: 64, offset: 256)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "sq_ass_item", scope: !173, file: !6, line: 286, baseType: !189, size: 64, align: 64, offset: 320)
!189 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeobjargproc", file: !6, line: 172, baseType: !190)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64, align: 64)
!191 = !DISubroutineType(types: !192)
!192 = !{!43, !4, !10, !4}
!193 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_ass_slice", scope: !173, file: !6, line: 287, baseType: !89, size: 64, align: 64, offset: 384)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "sq_contains", scope: !173, file: !6, line: 288, baseType: !195, size: 64, align: 64, offset: 448)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjproc", file: !6, line: 231, baseType: !196)
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 64, align: 64)
!197 = !DISubroutineType(types: !198)
!198 = !{!43, !4, !4}
!199 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_concat", scope: !173, file: !6, line: 290, baseType: !124, size: 64, align: 64, offset: 512)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_repeat", scope: !173, file: !6, line: 291, baseType: !182, size: 64, align: 64, offset: 576)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_mapping", scope: !19, file: !6, line: 352, baseType: !202, size: 64, align: 64, offset: 896)
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 64, align: 64)
!203 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMappingMethods", file: !6, line: 298, baseType: !204)
!204 = !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 294, size: 192, align: 64, elements: !205)
!205 = !{!206, !207, !208}
!206 = !DIDerivedType(tag: DW_TAG_member, name: "mp_length", scope: !204, file: !6, line: 295, baseType: !176, size: 64, align: 64)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "mp_subscript", scope: !204, file: !6, line: 296, baseType: !124, size: 64, align: 64, offset: 64)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "mp_ass_subscript", scope: !204, file: !6, line: 297, baseType: !209, size: 64, align: 64, offset: 128)
!209 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjargproc", file: !6, line: 174, baseType: !210)
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !211, size: 64, align: 64)
!211 = !DISubroutineType(types: !212)
!212 = !{!43, !4, !4, !4}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "tp_hash", scope: !19, file: !6, line: 356, baseType: !214, size: 64, align: 64, offset: 960)
!214 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashfunc", file: !6, line: 321, baseType: !215)
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 64, align: 64)
!216 = !DISubroutineType(types: !217)
!217 = !{!218, !4}
!218 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_hash_t", file: !11, line: 186, baseType: !10)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "tp_call", scope: !19, file: !6, line: 357, baseType: !133, size: 64, align: 64, offset: 1024)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "tp_str", scope: !19, file: !6, line: 358, baseType: !114, size: 64, align: 64, offset: 1088)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattro", scope: !19, file: !6, line: 359, baseType: !222, size: 64, align: 64, offset: 1152)
!222 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrofunc", file: !6, line: 317, baseType: !125)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattro", scope: !19, file: !6, line: 360, baseType: !224, size: 64, align: 64, offset: 1216)
!224 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrofunc", file: !6, line: 319, baseType: !210)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_buffer", scope: !19, file: !6, line: 363, baseType: !226, size: 64, align: 64, offset: 1280)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 64, align: 64)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyBufferProcs", file: !6, line: 304, baseType: !228)
!228 = !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 301, size: 128, align: 64, elements: !229)
!229 = !{!230, !251}
!230 = !DIDerivedType(tag: DW_TAG_member, name: "bf_getbuffer", scope: !228, file: !6, line: 302, baseType: !231, size: 64, align: 64)
!231 = !DIDerivedType(tag: DW_TAG_typedef, name: "getbufferproc", file: !6, line: 193, baseType: !232)
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 64, align: 64)
!233 = !DISubroutineType(types: !234)
!234 = !{!43, !4, !235, !43}
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 64, align: 64)
!236 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_buffer", file: !6, line: 191, baseType: !237)
!237 = !DICompositeType(tag: DW_TAG_structure_type, name: "bufferinfo", file: !6, line: 178, size: 640, align: 64, elements: !238)
!238 = !{!239, !240, !241, !242, !243, !244, !245, !246, !248, !249, !250}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !237, file: !6, line: 179, baseType: !89, size: 64, align: 64)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "obj", scope: !237, file: !6, line: 180, baseType: !4, size: 64, align: 64, offset: 64)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !237, file: !6, line: 181, baseType: !10, size: 64, align: 64, offset: 128)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "itemsize", scope: !237, file: !6, line: 182, baseType: !10, size: 64, align: 64, offset: 192)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "readonly", scope: !237, file: !6, line: 184, baseType: !43, size: 32, align: 32, offset: 256)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "ndim", scope: !237, file: !6, line: 185, baseType: !43, size: 32, align: 32, offset: 288)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !237, file: !6, line: 186, baseType: !51, size: 64, align: 64, offset: 320)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "shape", scope: !237, file: !6, line: 187, baseType: !247, size: 64, align: 64, offset: 384)
!247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64, align: 64)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "strides", scope: !237, file: !6, line: 188, baseType: !247, size: 64, align: 64, offset: 448)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "suboffsets", scope: !237, file: !6, line: 189, baseType: !247, size: 64, align: 64, offset: 512)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !237, file: !6, line: 190, baseType: !89, size: 64, align: 64, offset: 576)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "bf_releasebuffer", scope: !228, file: !6, line: 303, baseType: !252, size: 64, align: 64, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_typedef, name: "releasebufferproc", file: !6, line: 194, baseType: !253)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64, align: 64)
!254 = !DISubroutineType(types: !255)
!255 = !{null, !4, !235}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "tp_flags", scope: !19, file: !6, line: 366, baseType: !96, size: 64, align: 64, offset: 1344)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "tp_doc", scope: !19, file: !6, line: 368, baseType: !28, size: 64, align: 64, offset: 1408)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "tp_traverse", scope: !19, file: !6, line: 372, baseType: !259, size: 64, align: 64, offset: 1472)
!259 = !DIDerivedType(tag: DW_TAG_typedef, name: "traverseproc", file: !6, line: 233, baseType: !260)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 64, align: 64)
!261 = !DISubroutineType(types: !262)
!262 = !{!43, !4, !263, !89}
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "visitproc", file: !6, line: 232, baseType: !264)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 64, align: 64)
!265 = !DISubroutineType(types: !266)
!266 = !{!43, !4, !89}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "tp_clear", scope: !19, file: !6, line: 375, baseType: !142, size: 64, align: 64, offset: 1536)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "tp_richcompare", scope: !19, file: !6, line: 379, baseType: !269, size: 64, align: 64, offset: 1600)
!269 = !DIDerivedType(tag: DW_TAG_typedef, name: "richcmpfunc", file: !6, line: 322, baseType: !270)
!270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 64, align: 64)
!271 = !DISubroutineType(types: !272)
!272 = !{!4, !4, !4, !43}
!273 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklistoffset", scope: !19, file: !6, line: 382, baseType: !10, size: 64, align: 64, offset: 1664)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iter", scope: !19, file: !6, line: 385, baseType: !275, size: 64, align: 64, offset: 1728)
!275 = !DIDerivedType(tag: DW_TAG_typedef, name: "getiterfunc", file: !6, line: 323, baseType: !115)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iternext", scope: !19, file: !6, line: 386, baseType: !277, size: 64, align: 64, offset: 1792)
!277 = !DIDerivedType(tag: DW_TAG_typedef, name: "iternextfunc", file: !6, line: 324, baseType: !115)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "tp_methods", scope: !19, file: !6, line: 389, baseType: !279, size: 64, align: 64, offset: 1856)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 64, align: 64)
!280 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyMethodDef", file: !281, line: 40, size: 256, align: 64, elements: !282)
!281 = !DIFile(filename: "Include/methodobject.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!282 = !{!283, !284, !286, !287}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "ml_name", scope: !280, file: !281, line: 41, baseType: !28, size: 64, align: 64)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "ml_meth", scope: !280, file: !281, line: 42, baseType: !285, size: 64, align: 64, offset: 64)
!285 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCFunction", file: !281, line: 18, baseType: !125)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flags", scope: !280, file: !281, line: 43, baseType: !43, size: 32, align: 32, offset: 128)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "ml_doc", scope: !280, file: !281, line: 45, baseType: !28, size: 64, align: 64, offset: 192)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "tp_members", scope: !19, file: !6, line: 390, baseType: !289, size: 64, align: 64, offset: 1920)
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !290, size: 64, align: 64)
!290 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyMemberDef", file: !291, line: 18, size: 320, align: 64, elements: !292)
!291 = !DIFile(filename: "Include/structmember.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!292 = !{!293, !294, !295, !296, !297}
!293 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !290, file: !291, line: 19, baseType: !51, size: 64, align: 64)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !290, file: !291, line: 20, baseType: !43, size: 32, align: 32, offset: 64)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !290, file: !291, line: 21, baseType: !10, size: 64, align: 64, offset: 128)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !290, file: !291, line: 22, baseType: !43, size: 32, align: 32, offset: 192)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !290, file: !291, line: 23, baseType: !51, size: 64, align: 64, offset: 256)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getset", scope: !19, file: !6, line: 391, baseType: !299, size: 64, align: 64, offset: 1984)
!299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !300, size: 64, align: 64)
!300 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyGetSetDef", file: !301, line: 11, size: 320, align: 64, elements: !302)
!301 = !DIFile(filename: "Include/descrobject.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!302 = !{!303, !304, !309, !314, !315}
!303 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !300, file: !301, line: 12, baseType: !51, size: 64, align: 64)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !300, file: !301, line: 13, baseType: !305, size: 64, align: 64, offset: 64)
!305 = !DIDerivedType(tag: DW_TAG_typedef, name: "getter", file: !301, line: 8, baseType: !306)
!306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !307, size: 64, align: 64)
!307 = !DISubroutineType(types: !308)
!308 = !{!4, !4, !89}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !300, file: !301, line: 14, baseType: !310, size: 64, align: 64, offset: 128)
!310 = !DIDerivedType(tag: DW_TAG_typedef, name: "setter", file: !301, line: 9, baseType: !311)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64, align: 64)
!312 = !DISubroutineType(types: !313)
!313 = !{!43, !4, !4, !89}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !300, file: !301, line: 15, baseType: !51, size: 64, align: 64, offset: 192)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "closure", scope: !300, file: !301, line: 16, baseType: !89, size: 64, align: 64, offset: 256)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "tp_base", scope: !19, file: !6, line: 392, baseType: !18, size: 64, align: 64, offset: 2048)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dict", scope: !19, file: !6, line: 393, baseType: !4, size: 64, align: 64, offset: 2112)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_get", scope: !19, file: !6, line: 394, baseType: !319, size: 64, align: 64, offset: 2176)
!319 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrgetfunc", file: !6, line: 325, baseType: !134)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_set", scope: !19, file: !6, line: 395, baseType: !321, size: 64, align: 64, offset: 2240)
!321 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrsetfunc", file: !6, line: 326, baseType: !210)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dictoffset", scope: !19, file: !6, line: 396, baseType: !10, size: 64, align: 64, offset: 2304)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "tp_init", scope: !19, file: !6, line: 397, baseType: !324, size: 64, align: 64, offset: 2368)
!324 = !DIDerivedType(tag: DW_TAG_typedef, name: "initproc", file: !6, line: 327, baseType: !210)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "tp_alloc", scope: !19, file: !6, line: 398, baseType: !326, size: 64, align: 64, offset: 2432)
!326 = !DIDerivedType(tag: DW_TAG_typedef, name: "allocfunc", file: !6, line: 329, baseType: !327)
!327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 64, align: 64)
!328 = !DISubroutineType(types: !329)
!329 = !{!4, !18, !10}
!330 = !DIDerivedType(tag: DW_TAG_member, name: "tp_new", scope: !19, file: !6, line: 399, baseType: !331, size: 64, align: 64, offset: 2496)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "newfunc", file: !6, line: 328, baseType: !332)
!332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !333, size: 64, align: 64)
!333 = !DISubroutineType(types: !334)
!334 = !{!4, !18, !4, !4}
!335 = !DIDerivedType(tag: DW_TAG_member, name: "tp_free", scope: !19, file: !6, line: 400, baseType: !336, size: 64, align: 64, offset: 2560)
!336 = !DIDerivedType(tag: DW_TAG_typedef, name: "freefunc", file: !6, line: 307, baseType: !337)
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 64, align: 64)
!338 = !DISubroutineType(types: !339)
!339 = !{null, !89}
!340 = !DIDerivedType(tag: DW_TAG_member, name: "tp_is_gc", scope: !19, file: !6, line: 401, baseType: !142, size: 64, align: 64, offset: 2624)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "tp_bases", scope: !19, file: !6, line: 402, baseType: !4, size: 64, align: 64, offset: 2688)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "tp_mro", scope: !19, file: !6, line: 403, baseType: !4, size: 64, align: 64, offset: 2752)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "tp_cache", scope: !19, file: !6, line: 404, baseType: !4, size: 64, align: 64, offset: 2816)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "tp_subclasses", scope: !19, file: !6, line: 405, baseType: !4, size: 64, align: 64, offset: 2880)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklist", scope: !19, file: !6, line: 406, baseType: !4, size: 64, align: 64, offset: 2944)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "tp_del", scope: !19, file: !6, line: 407, baseType: !34, size: 64, align: 64, offset: 3008)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "tp_version_tag", scope: !19, file: !6, line: 410, baseType: !348, size: 32, align: 32, offset: 3072)
!348 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "tp_finalize", scope: !19, file: !6, line: 412, baseType: !34, size: 64, align: 64, offset: 3136)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 64, align: 64)
!351 = !DIDerivedType(tag: DW_TAG_typedef, name: "accumulateobject", file: !1, line: 3368, baseType: !352)
!352 = !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 3363, size: 320, align: 64, elements: !353)
!353 = !{!354, !355, !356, !357}
!354 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !352, file: !1, line: 3364, baseType: !5, size: 128, align: 64)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !352, file: !1, line: 3365, baseType: !4, size: 64, align: 64, offset: 128)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !352, file: !1, line: 3366, baseType: !4, size: 64, align: 64, offset: 192)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "binop", scope: !352, file: !1, line: 3367, baseType: !4, size: 64, align: 64, offset: 256)
!358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 64, align: 64)
!359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !360, size: 64, align: 64)
!360 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTupleObject", file: !361, line: 33, baseType: !362)
!361 = !DIFile(filename: "Include/tupleobject.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!362 = !DICompositeType(tag: DW_TAG_structure_type, file: !361, line: 25, size: 256, align: 64, elements: !363)
!363 = !{!364, !365}
!364 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !362, file: !361, line: 26, baseType: !22, size: 192, align: 64)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "ob_item", scope: !362, file: !361, line: 27, baseType: !366, size: 64, align: 64, offset: 192)
!366 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 64, align: 64, elements: !81)
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 64, align: 64)
!368 = !DIDerivedType(tag: DW_TAG_typedef, name: "combinationsobject", file: !1, line: 2333, baseType: !369)
!369 = !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 2326, size: 448, align: 64, elements: !370)
!370 = !{!371, !372, !373, !374, !375, !376}
!371 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !369, file: !1, line: 2327, baseType: !5, size: 128, align: 64)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !369, file: !1, line: 2328, baseType: !4, size: 64, align: 64, offset: 128)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "indices", scope: !369, file: !1, line: 2329, baseType: !247, size: 64, align: 64, offset: 192)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !369, file: !1, line: 2330, baseType: !4, size: 64, align: 64, offset: 256)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !369, file: !1, line: 2331, baseType: !10, size: 64, align: 64, offset: 320)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "stopped", scope: !369, file: !1, line: 2332, baseType: !43, size: 32, align: 32, offset: 384)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 64, align: 64)
!378 = !DIDerivedType(tag: DW_TAG_typedef, name: "cwrobject", file: !1, line: 2674, baseType: !379)
!379 = !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 2667, size: 448, align: 64, elements: !380)
!380 = !{!381, !382, !383, !384, !385, !386}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !379, file: !1, line: 2668, baseType: !5, size: 128, align: 64)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !379, file: !1, line: 2669, baseType: !4, size: 64, align: 64, offset: 128)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "indices", scope: !379, file: !1, line: 2670, baseType: !247, size: 64, align: 64, offset: 192)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !379, file: !1, line: 2671, baseType: !4, size: 64, align: 64, offset: 256)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !379, file: !1, line: 2672, baseType: !10, size: 64, align: 64, offset: 320)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "stopped", scope: !379, file: !1, line: 2673, baseType: !43, size: 32, align: 32, offset: 384)
!387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 64, align: 64)
!388 = !DIDerivedType(tag: DW_TAG_typedef, name: "cycleobject", file: !1, line: 867, baseType: !389)
!389 = !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 862, size: 320, align: 64, elements: !390)
!390 = !{!391, !392, !393, !394}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !389, file: !1, line: 863, baseType: !5, size: 128, align: 64)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !389, file: !1, line: 864, baseType: !4, size: 64, align: 64, offset: 128)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !389, file: !1, line: 865, baseType: !4, size: 64, align: 64, offset: 192)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "firstpass", scope: !389, file: !1, line: 866, baseType: !43, size: 32, align: 32, offset: 256)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 64, align: 64)
!396 = !DIDerivedType(tag: DW_TAG_typedef, name: "dropwhileobject", file: !1, line: 1051, baseType: !397)
!397 = !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 1046, size: 320, align: 64, elements: !398)
!398 = !{!399, !400, !401, !402}
!399 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !397, file: !1, line: 1047, baseType: !5, size: 128, align: 64)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !397, file: !1, line: 1048, baseType: !4, size: 64, align: 64, offset: 128)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !397, file: !1, line: 1049, baseType: !4, size: 64, align: 64, offset: 192)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !397, file: !1, line: 1050, baseType: !16, size: 64, align: 64, offset: 256)
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 64, align: 64)
!404 = !DIDerivedType(tag: DW_TAG_typedef, name: "takewhileobject", file: !1, line: 1220, baseType: !405)
!405 = !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 1215, size: 320, align: 64, elements: !406)
!406 = !{!407, !408, !409, !410}
!407 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !405, file: !1, line: 1216, baseType: !5, size: 128, align: 64)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !405, file: !1, line: 1217, baseType: !4, size: 64, align: 64, offset: 128)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !405, file: !1, line: 1218, baseType: !4, size: 64, align: 64, offset: 192)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !405, file: !1, line: 1219, baseType: !16, size: 64, align: 64, offset: 256)
!411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !412, size: 64, align: 64)
!412 = !DIDerivedType(tag: DW_TAG_typedef, name: "isliceobject", file: !1, line: 1386, baseType: !413)
!413 = !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 1379, size: 448, align: 64, elements: !414)
!414 = !{!415, !416, !417, !418, !419, !420}
!415 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !413, file: !1, line: 1380, baseType: !5, size: 128, align: 64)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !413, file: !1, line: 1381, baseType: !4, size: 64, align: 64, offset: 128)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !413, file: !1, line: 1382, baseType: !10, size: 64, align: 64, offset: 192)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !413, file: !1, line: 1383, baseType: !10, size: 64, align: 64, offset: 256)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !413, file: !1, line: 1384, baseType: !10, size: 64, align: 64, offset: 320)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !413, file: !1, line: 1385, baseType: !10, size: 64, align: 64, offset: 384)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 64, align: 64)
!422 = !DIDerivedType(tag: DW_TAG_typedef, name: "starmapobject", file: !1, line: 1637, baseType: !423)
!423 = !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 1633, size: 256, align: 64, elements: !424)
!424 = !{!425, !426, !427}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !423, file: !1, line: 1634, baseType: !5, size: 128, align: 64)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !423, file: !1, line: 1635, baseType: !4, size: 64, align: 64, offset: 128)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !423, file: !1, line: 1636, baseType: !4, size: 64, align: 64, offset: 192)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 64, align: 64)
!429 = !DIDerivedType(tag: DW_TAG_typedef, name: "chainobject", file: !1, line: 1781, baseType: !430)
!430 = !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 1777, size: 256, align: 64, elements: !431)
!431 = !{!432, !433, !434}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !430, file: !1, line: 1778, baseType: !5, size: 128, align: 64)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !430, file: !1, line: 1779, baseType: !4, size: 64, align: 64, offset: 128)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !430, file: !1, line: 1780, baseType: !4, size: 64, align: 64, offset: 192)
!435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 64, align: 64)
!436 = !DIDerivedType(tag: DW_TAG_typedef, name: "compressobject", file: !1, line: 3544, baseType: !437)
!437 = !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 3540, size: 256, align: 64, elements: !438)
!438 = !{!439, !440, !441}
!439 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !437, file: !1, line: 3541, baseType: !5, size: 128, align: 64)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !437, file: !1, line: 3542, baseType: !4, size: 64, align: 64, offset: 128)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "selectors", scope: !437, file: !1, line: 3543, baseType: !4, size: 64, align: 64, offset: 192)
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 64, align: 64)
!443 = !DIDerivedType(tag: DW_TAG_typedef, name: "filterfalseobject", file: !1, line: 3704, baseType: !444)
!444 = !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 3700, size: 256, align: 64, elements: !445)
!445 = !{!446, !447, !448}
!446 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !444, file: !1, line: 3701, baseType: !5, size: 128, align: 64)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !444, file: !1, line: 3702, baseType: !4, size: 64, align: 64, offset: 128)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !444, file: !1, line: 3703, baseType: !4, size: 64, align: 64, offset: 192)
!449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !450, size: 64, align: 64)
!450 = !DIDerivedType(tag: DW_TAG_typedef, name: "countobject", file: !1, line: 3863, baseType: !451)
!451 = !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 3858, size: 320, align: 64, elements: !452)
!452 = !{!453, !454, !455, !456}
!453 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !451, file: !1, line: 3859, baseType: !5, size: 128, align: 64)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !451, file: !1, line: 3860, baseType: !10, size: 64, align: 64, offset: 128)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "long_cnt", scope: !451, file: !1, line: 3861, baseType: !4, size: 64, align: 64, offset: 192)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "long_step", scope: !451, file: !1, line: 3862, baseType: !4, size: 64, align: 64, offset: 256)
!457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 64, align: 64)
!458 = !DIDerivedType(tag: DW_TAG_typedef, name: "ziplongestobject", file: !1, line: 4256, baseType: !459)
!459 = !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 4249, size: 448, align: 64, elements: !460)
!460 = !{!461, !462, !463, !464, !465, !466}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !459, file: !1, line: 4250, baseType: !5, size: 128, align: 64)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "tuplesize", scope: !459, file: !1, line: 4251, baseType: !10, size: 64, align: 64, offset: 128)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "numactive", scope: !459, file: !1, line: 4252, baseType: !10, size: 64, align: 64, offset: 192)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "ittuple", scope: !459, file: !1, line: 4253, baseType: !4, size: 64, align: 64, offset: 256)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !459, file: !1, line: 4254, baseType: !4, size: 64, align: 64, offset: 320)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "fillvalue", scope: !459, file: !1, line: 4255, baseType: !4, size: 64, align: 64, offset: 384)
!467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 64, align: 64)
!468 = !DIDerivedType(tag: DW_TAG_typedef, name: "permutationsobject", file: !1, line: 3002, baseType: !469)
!469 = !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 2994, size: 512, align: 64, elements: !470)
!470 = !{!471, !472, !473, !474, !475, !476, !477}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !469, file: !1, line: 2995, baseType: !5, size: 128, align: 64)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !469, file: !1, line: 2996, baseType: !4, size: 64, align: 64, offset: 128)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "indices", scope: !469, file: !1, line: 2997, baseType: !247, size: 64, align: 64, offset: 192)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "cycles", scope: !469, file: !1, line: 2998, baseType: !247, size: 64, align: 64, offset: 256)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !469, file: !1, line: 2999, baseType: !4, size: 64, align: 64, offset: 320)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !469, file: !1, line: 3000, baseType: !10, size: 64, align: 64, offset: 384)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "stopped", scope: !469, file: !1, line: 3001, baseType: !43, size: 32, align: 32, offset: 448)
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 64, align: 64)
!479 = !DIDerivedType(tag: DW_TAG_typedef, name: "productobject", file: !1, line: 1990, baseType: !480)
!480 = !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 1984, size: 384, align: 64, elements: !481)
!481 = !{!482, !483, !484, !485, !486}
!482 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !480, file: !1, line: 1985, baseType: !5, size: 128, align: 64)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !480, file: !1, line: 1986, baseType: !4, size: 64, align: 64, offset: 128)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "indices", scope: !480, file: !1, line: 1987, baseType: !247, size: 64, align: 64, offset: 192)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !480, file: !1, line: 1988, baseType: !4, size: 64, align: 64, offset: 256)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "stopped", scope: !480, file: !1, line: 1989, baseType: !43, size: 32, align: 32, offset: 320)
!487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 64, align: 64)
!488 = !DIDerivedType(tag: DW_TAG_typedef, name: "repeatobject", file: !1, line: 4103, baseType: !489)
!489 = !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 4099, size: 256, align: 64, elements: !490)
!490 = !{!491, !492, !493}
!491 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !489, file: !1, line: 4100, baseType: !5, size: 128, align: 64)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "element", scope: !489, file: !1, line: 4101, baseType: !4, size: 64, align: 64, offset: 128)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !489, file: !1, line: 4102, baseType: !10, size: 64, align: 64, offset: 192)
!494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !495, size: 64, align: 64)
!495 = !DIDerivedType(tag: DW_TAG_typedef, name: "_grouperobject", file: !1, line: 239, baseType: !496)
!496 = !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 235, size: 256, align: 64, elements: !497)
!497 = !{!498, !499, !500}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !496, file: !1, line: 236, baseType: !5, size: 128, align: 64)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !496, file: !1, line: 237, baseType: !4, size: 64, align: 64, offset: 128)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "tgtkey", scope: !496, file: !1, line: 238, baseType: !4, size: 64, align: 64, offset: 192)
!501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !502, size: 64, align: 64)
!502 = !DIDerivedType(tag: DW_TAG_typedef, name: "groupbyobject", file: !1, line: 21, baseType: !503)
!503 = !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 14, size: 448, align: 64, elements: !504)
!504 = !{!505, !506, !507, !508, !509, !510}
!505 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !503, file: !1, line: 15, baseType: !5, size: 128, align: 64)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !503, file: !1, line: 16, baseType: !4, size: 64, align: 64, offset: 128)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "keyfunc", scope: !503, file: !1, line: 17, baseType: !4, size: 64, align: 64, offset: 192)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "tgtkey", scope: !503, file: !1, line: 18, baseType: !4, size: 64, align: 64, offset: 256)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "currkey", scope: !503, file: !1, line: 19, baseType: !4, size: 64, align: 64, offset: 320)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "currvalue", scope: !503, file: !1, line: 20, baseType: !4, size: 64, align: 64, offset: 384)
!511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 64, align: 64)
!512 = !DIDerivedType(tag: DW_TAG_typedef, name: "teedataobject", file: !1, line: 407, baseType: !513)
!513 = !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 401, size: 3968, align: 64, elements: !514)
!514 = !{!515, !516, !517, !518, !519}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !513, file: !1, line: 402, baseType: !5, size: 128, align: 64)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !513, file: !1, line: 403, baseType: !4, size: 64, align: 64, offset: 128)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "numread", scope: !513, file: !1, line: 404, baseType: !43, size: 32, align: 32, offset: 192)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "nextlink", scope: !513, file: !1, line: 405, baseType: !4, size: 64, align: 64, offset: 256)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !513, file: !1, line: 406, baseType: !520, size: 3648, align: 64, offset: 320)
!520 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 3648, align: 64, elements: !521)
!521 = !{!522}
!522 = !DISubrange(count: 57)
!523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !524, size: 64, align: 64)
!524 = !DIDerivedType(tag: DW_TAG_typedef, name: "teeobject", file: !1, line: 414, baseType: !525)
!525 = !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 409, size: 320, align: 64, elements: !526)
!526 = !{!527, !528, !529, !530}
!527 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !525, file: !1, line: 410, baseType: !5, size: 128, align: 64)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "dataobj", scope: !525, file: !1, line: 411, baseType: !511, size: 64, align: 64, offset: 128)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !525, file: !1, line: 412, baseType: !43, size: 32, align: 32, offset: 192)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "weakreflist", scope: !525, file: !1, line: 413, baseType: !4, size: 64, align: 64, offset: 256)
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 64, align: 64)
!532 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyListObject", file: !533, line: 40, baseType: !534)
!533 = !DIFile(filename: "Include/listobject.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!534 = !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 23, size: 320, align: 64, elements: !535)
!535 = !{!536, !537, !539}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !534, file: !533, line: 24, baseType: !22, size: 192, align: 64)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "ob_item", scope: !534, file: !533, line: 26, baseType: !538, size: 64, align: 64, offset: 192)
!538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64, align: 64)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !534, file: !533, line: 39, baseType: !10, size: 64, align: 64, offset: 256)
!540 = !{!541, !554, !574, !593, !605, !608, !620, !639, !654, !669, !696, !712, !737, !744, !761, !776, !791, !817, !833, !857, !864, !881, !896, !911, !928, !931, !947, !966, !981, !996, !1017, !1020, !1027, !1040, !1055, !1070, !1087, !1090, !1097, !1110, !1120, !1131, !1150, !1160, !1167, !1186, !1201, !1216, !1231, !1234, !1247, !1262, !1277, !1310, !1317, !1326, !1329, !1351, !1357, !1372, !1387, !1408, !1411, !1431, !1446, !1461, !1484, !1487, !1500, !1515, !1523, !1538, !1541, !1546, !1549, !1580, !1600, !1619, !1663, !1678, !1690, !1720, !1735, !1750, !1784, !1812, !1843, !1850, !1869, !1884, !1899, !1929, !1946, !1971, !1978, !2017, !2027, !2032, !2043, !2046, !2049, !2052, !2060, !2090, !2117, !2157, !2164, !2168, !2193, !2205, !2214, !2229, !2253, !2256, !2263, !2268, !2279, !2290, !2301, !2308, !2312, !2319, !2323, !2326, !2340, !2346, !2356, !2361, !2383, !2404, !2416, !2421, !2437}
!541 = !DISubprogram(name: "PyInit_itertools", scope: !1, file: !1, line: 4568, type: !542, isLocal: false, isDefinition: true, scopeLine: 4569, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* ()* @PyInit_itertools, variables: !544)
!542 = !DISubroutineType(types: !543)
!543 = !{!4}
!544 = !{!545, !546, !547, !548}
!545 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !541, file: !1, line: 4570, type: !43)
!546 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "m", scope: !541, file: !1, line: 4571, type: !4)
!547 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !541, file: !1, line: 4572, type: !51)
!548 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "typelist", scope: !541, file: !1, line: 4573, type: !549)
!549 = !DICompositeType(tag: DW_TAG_array_type, baseType: !550, size: 1344, align: 64, elements: !552)
!550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 64, align: 64)
!551 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTypeObject", file: !6, line: 422, baseType: !19)
!552 = !{!553}
!553 = !DISubrange(count: 21)
!554 = !DISubprogram(name: "accumulate_dealloc", scope: !1, file: !1, line: 3407, type: !555, isLocal: true, isDefinition: true, scopeLine: 3408, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.accumulateobject*)* @accumulate_dealloc, variables: !557)
!555 = !DISubroutineType(types: !556)
!556 = !{null, !350}
!557 = !{!558, !559, !561, !564, !566, !569, !571}
!558 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !554, file: !1, line: 3407, type: !350)
!559 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !560, file: !1, line: 3410, type: !4)
!560 = distinct !DILexicalBlock(scope: !554, file: !1, line: 3410, column: 5)
!561 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !562, file: !1, line: 3410, type: !4)
!562 = distinct !DILexicalBlock(scope: !563, file: !1, line: 3410, column: 5)
!563 = distinct !DILexicalBlock(scope: !560, file: !1, line: 3410, column: 5)
!564 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !565, file: !1, line: 3411, type: !4)
!565 = distinct !DILexicalBlock(scope: !554, file: !1, line: 3411, column: 5)
!566 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !567, file: !1, line: 3411, type: !4)
!567 = distinct !DILexicalBlock(scope: !568, file: !1, line: 3411, column: 5)
!568 = distinct !DILexicalBlock(scope: !565, file: !1, line: 3411, column: 5)
!569 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !570, file: !1, line: 3412, type: !4)
!570 = distinct !DILexicalBlock(scope: !554, file: !1, line: 3412, column: 5)
!571 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !572, file: !1, line: 3412, type: !4)
!572 = distinct !DILexicalBlock(scope: !573, file: !1, line: 3412, column: 5)
!573 = distinct !DILexicalBlock(scope: !570, file: !1, line: 3412, column: 5)
!574 = !DISubprogram(name: "accumulate_traverse", scope: !1, file: !1, line: 3417, type: !575, isLocal: true, isDefinition: true, scopeLine: 3418, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.accumulateobject*, i32 (%struct._object*, i8*)*, i8*)* @accumulate_traverse, variables: !577)
!575 = !DISubroutineType(types: !576)
!576 = !{!43, !350, !263, !89}
!577 = !{!578, !579, !580, !581, !585, !589}
!578 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !574, file: !1, line: 3417, type: !350)
!579 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !574, file: !1, line: 3417, type: !263)
!580 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !574, file: !1, line: 3417, type: !89)
!581 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !582, file: !1, line: 3419, type: !43)
!582 = distinct !DILexicalBlock(scope: !583, file: !1, line: 3419, column: 5)
!583 = distinct !DILexicalBlock(scope: !584, file: !1, line: 3419, column: 5)
!584 = distinct !DILexicalBlock(scope: !574, file: !1, line: 3419, column: 5)
!585 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !586, file: !1, line: 3420, type: !43)
!586 = distinct !DILexicalBlock(scope: !587, file: !1, line: 3420, column: 5)
!587 = distinct !DILexicalBlock(scope: !588, file: !1, line: 3420, column: 5)
!588 = distinct !DILexicalBlock(scope: !574, file: !1, line: 3420, column: 5)
!589 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !590, file: !1, line: 3421, type: !43)
!590 = distinct !DILexicalBlock(scope: !591, file: !1, line: 3421, column: 5)
!591 = distinct !DILexicalBlock(scope: !592, file: !1, line: 3421, column: 5)
!592 = distinct !DILexicalBlock(scope: !574, file: !1, line: 3421, column: 5)
!593 = !DISubprogram(name: "accumulate_next", scope: !1, file: !1, line: 3426, type: !594, isLocal: true, isDefinition: true, scopeLine: 3427, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.accumulateobject*)* @accumulate_next, variables: !596)
!594 = !DISubroutineType(types: !595)
!595 = !{!4, !350}
!596 = !{!597, !598, !599, !600, !601, !603}
!597 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !593, file: !1, line: 3426, type: !350)
!598 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val", scope: !593, file: !1, line: 3428, type: !4)
!599 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldtotal", scope: !593, file: !1, line: 3428, type: !4)
!600 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newtotal", scope: !593, file: !1, line: 3428, type: !4)
!601 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !602, file: !1, line: 3444, type: !4)
!602 = distinct !DILexicalBlock(scope: !593, file: !1, line: 3444, column: 5)
!603 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !604, file: !1, line: 3450, type: !4)
!604 = distinct !DILexicalBlock(scope: !593, file: !1, line: 3450, column: 5)
!605 = !DISubprogram(name: "accumulate_reduce", scope: !1, file: !1, line: 3457, type: !594, isLocal: true, isDefinition: true, scopeLine: 3458, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.accumulateobject*)* @accumulate_reduce, variables: !606)
!606 = !{!607}
!607 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !605, file: !1, line: 3457, type: !350)
!608 = !DISubprogram(name: "accumulate_setstate", scope: !1, file: !1, line: 3465, type: !609, isLocal: true, isDefinition: true, scopeLine: 3466, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.accumulateobject*, %struct._object*)* @accumulate_setstate, variables: !611)
!609 = !DISubroutineType(types: !610)
!610 = !{!4, !350, !4}
!611 = !{!612, !613, !614, !616}
!612 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !608, file: !1, line: 3465, type: !350)
!613 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 2, scope: !608, file: !1, line: 3465, type: !4)
!614 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !615, file: !1, line: 3467, type: !4)
!615 = distinct !DILexicalBlock(scope: !608, file: !1, line: 3467, column: 5)
!616 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !617, file: !1, line: 3467, type: !4)
!617 = distinct !DILexicalBlock(scope: !618, file: !1, line: 3467, column: 5)
!618 = distinct !DILexicalBlock(scope: !619, file: !1, line: 3467, column: 5)
!619 = distinct !DILexicalBlock(scope: !615, file: !1, line: 3467, column: 5)
!620 = !DISubprogram(name: "accumulate_new", scope: !1, file: !1, line: 3373, type: !621, isLocal: true, isDefinition: true, scopeLine: 3374, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @accumulate_new, variables: !623)
!621 = !DISubroutineType(types: !622)
!622 = !{!4, !550, !4, !4}
!623 = !{!624, !625, !626, !627, !628, !629, !630, !631, !635}
!624 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !620, file: !1, line: 3373, type: !550)
!625 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !620, file: !1, line: 3373, type: !4)
!626 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !620, file: !1, line: 3373, type: !4)
!627 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iterable", scope: !620, file: !1, line: 3376, type: !4)
!628 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !620, file: !1, line: 3377, type: !4)
!629 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "binop", scope: !620, file: !1, line: 3378, type: !4)
!630 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lz", scope: !620, file: !1, line: 3379, type: !350)
!631 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !632, file: !1, line: 3393, type: !4)
!632 = distinct !DILexicalBlock(scope: !633, file: !1, line: 3393, column: 9)
!633 = distinct !DILexicalBlock(scope: !634, file: !1, line: 3392, column: 21)
!634 = distinct !DILexicalBlock(scope: !620, file: !1, line: 3392, column: 9)
!635 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xincref_tmp", scope: !636, file: !1, line: 3398, type: !4)
!636 = distinct !DILexicalBlock(scope: !637, file: !1, line: 3398, column: 9)
!637 = distinct !DILexicalBlock(scope: !638, file: !1, line: 3397, column: 27)
!638 = distinct !DILexicalBlock(scope: !620, file: !1, line: 3397, column: 9)
!639 = !DISubprogram(name: "combinations_dealloc", scope: !1, file: !1, line: 2392, type: !640, isLocal: true, isDefinition: true, scopeLine: 2393, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.combinationsobject*)* @combinations_dealloc, variables: !642)
!640 = !DISubroutineType(types: !641)
!641 = !{null, !367}
!642 = !{!643, !644, !646, !649, !651}
!643 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "co", arg: 1, scope: !639, file: !1, line: 2392, type: !367)
!644 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !645, file: !1, line: 2395, type: !4)
!645 = distinct !DILexicalBlock(scope: !639, file: !1, line: 2395, column: 5)
!646 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !647, file: !1, line: 2395, type: !4)
!647 = distinct !DILexicalBlock(scope: !648, file: !1, line: 2395, column: 5)
!648 = distinct !DILexicalBlock(scope: !645, file: !1, line: 2395, column: 5)
!649 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !650, file: !1, line: 2396, type: !4)
!650 = distinct !DILexicalBlock(scope: !639, file: !1, line: 2396, column: 5)
!651 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !652, file: !1, line: 2396, type: !4)
!652 = distinct !DILexicalBlock(scope: !653, file: !1, line: 2396, column: 5)
!653 = distinct !DILexicalBlock(scope: !650, file: !1, line: 2396, column: 5)
!654 = !DISubprogram(name: "combinations_traverse", scope: !1, file: !1, line: 2413, type: !655, isLocal: true, isDefinition: true, scopeLine: 2414, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.combinationsobject*, i32 (%struct._object*, i8*)*, i8*)* @combinations_traverse, variables: !657)
!655 = !DISubroutineType(types: !656)
!656 = !{!43, !367, !263, !89}
!657 = !{!658, !659, !660, !661, !665}
!658 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "co", arg: 1, scope: !654, file: !1, line: 2413, type: !367)
!659 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !654, file: !1, line: 2413, type: !263)
!660 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !654, file: !1, line: 2413, type: !89)
!661 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !662, file: !1, line: 2415, type: !43)
!662 = distinct !DILexicalBlock(scope: !663, file: !1, line: 2415, column: 5)
!663 = distinct !DILexicalBlock(scope: !664, file: !1, line: 2415, column: 5)
!664 = distinct !DILexicalBlock(scope: !654, file: !1, line: 2415, column: 5)
!665 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !666, file: !1, line: 2416, type: !43)
!666 = distinct !DILexicalBlock(scope: !667, file: !1, line: 2416, column: 5)
!667 = distinct !DILexicalBlock(scope: !668, file: !1, line: 2416, column: 5)
!668 = distinct !DILexicalBlock(scope: !654, file: !1, line: 2416, column: 5)
!669 = !DISubprogram(name: "combinations_next", scope: !1, file: !1, line: 2421, type: !670, isLocal: true, isDefinition: true, scopeLine: 2422, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.combinationsobject*)* @combinations_next, variables: !672)
!670 = !DISubroutineType(types: !671)
!671 = !{!4, !367}
!672 = !{!673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !689, !691}
!673 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "co", arg: 1, scope: !669, file: !1, line: 2421, type: !367)
!674 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "elem", scope: !669, file: !1, line: 2423, type: !4)
!675 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldelem", scope: !669, file: !1, line: 2424, type: !4)
!676 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pool", scope: !669, file: !1, line: 2425, type: !4)
!677 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "indices", scope: !669, file: !1, line: 2426, type: !247)
!678 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !669, file: !1, line: 2427, type: !4)
!679 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !669, file: !1, line: 2428, type: !10)
!680 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !669, file: !1, line: 2429, type: !10)
!681 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !669, file: !1, line: 2430, type: !10)
!682 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !669, file: !1, line: 2430, type: !10)
!683 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !669, file: !1, line: 2430, type: !10)
!684 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "old_result", scope: !685, file: !1, line: 2450, type: !4)
!685 = distinct !DILexicalBlock(scope: !686, file: !1, line: 2449, column: 36)
!686 = distinct !DILexicalBlock(scope: !687, file: !1, line: 2449, column: 13)
!687 = distinct !DILexicalBlock(scope: !688, file: !1, line: 2447, column: 12)
!688 = distinct !DILexicalBlock(scope: !669, file: !1, line: 2435, column: 9)
!689 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !690, file: !1, line: 2460, type: !4)
!690 = distinct !DILexicalBlock(scope: !685, file: !1, line: 2460, column: 13)
!691 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !692, file: !1, line: 2494, type: !4)
!692 = distinct !DILexicalBlock(scope: !693, file: !1, line: 2494, column: 13)
!693 = distinct !DILexicalBlock(scope: !694, file: !1, line: 2488, column: 28)
!694 = distinct !DILexicalBlock(scope: !695, file: !1, line: 2488, column: 9)
!695 = distinct !DILexicalBlock(scope: !687, file: !1, line: 2488, column: 9)
!696 = !DISubprogram(name: "combinations_reduce", scope: !1, file: !1, line: 2507, type: !670, isLocal: true, isDefinition: true, scopeLine: 2508, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.combinationsobject*)* @combinations_reduce, variables: !697)
!697 = !{!698, !699, !703, !704, !708}
!698 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !696, file: !1, line: 2507, type: !367)
!699 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "indices", scope: !700, file: !1, line: 2514, type: !4)
!700 = distinct !DILexicalBlock(scope: !701, file: !1, line: 2513, column: 12)
!701 = distinct !DILexicalBlock(scope: !702, file: !1, line: 2511, column: 16)
!702 = distinct !DILexicalBlock(scope: !696, file: !1, line: 2509, column: 9)
!703 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !700, file: !1, line: 2515, type: !10)
!704 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !705, file: !1, line: 2523, type: !4)
!705 = distinct !DILexicalBlock(scope: !706, file: !1, line: 2522, column: 9)
!706 = distinct !DILexicalBlock(scope: !707, file: !1, line: 2521, column: 9)
!707 = distinct !DILexicalBlock(scope: !700, file: !1, line: 2521, column: 9)
!708 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !709, file: !1, line: 2525, type: !4)
!709 = distinct !DILexicalBlock(scope: !710, file: !1, line: 2525, column: 17)
!710 = distinct !DILexicalBlock(scope: !711, file: !1, line: 2524, column: 25)
!711 = distinct !DILexicalBlock(scope: !705, file: !1, line: 2524, column: 17)
!712 = !DISubprogram(name: "combinations_setstate", scope: !1, file: !1, line: 2536, type: !713, isLocal: true, isDefinition: true, scopeLine: 2537, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.combinationsobject*, %struct._object*)* @combinations_setstate, variables: !715)
!713 = !DISubroutineType(types: !714)
!714 = !{!4, !367, !4}
!715 = !{!716, !717, !718, !719, !720, !721, !725, !726, !727, !731, !733}
!716 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !712, file: !1, line: 2536, type: !367)
!717 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 2, scope: !712, file: !1, line: 2536, type: !4)
!718 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !712, file: !1, line: 2538, type: !4)
!719 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !712, file: !1, line: 2539, type: !10)
!720 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !712, file: !1, line: 2540, type: !10)
!721 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "max", scope: !722, file: !1, line: 2550, type: !10)
!722 = distinct !DILexicalBlock(scope: !723, file: !1, line: 2549, column: 5)
!723 = distinct !DILexicalBlock(scope: !724, file: !1, line: 2548, column: 5)
!724 = distinct !DILexicalBlock(scope: !712, file: !1, line: 2548, column: 5)
!725 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "indexObject", scope: !722, file: !1, line: 2551, type: !4)
!726 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !722, file: !1, line: 2552, type: !10)
!727 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "element", scope: !728, file: !1, line: 2568, type: !4)
!728 = distinct !DILexicalBlock(scope: !729, file: !1, line: 2567, column: 29)
!729 = distinct !DILexicalBlock(scope: !730, file: !1, line: 2567, column: 5)
!730 = distinct !DILexicalBlock(scope: !712, file: !1, line: 2567, column: 5)
!731 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !732, file: !1, line: 2573, type: !4)
!732 = distinct !DILexicalBlock(scope: !712, file: !1, line: 2573, column: 5)
!733 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !734, file: !1, line: 2573, type: !4)
!734 = distinct !DILexicalBlock(scope: !735, file: !1, line: 2573, column: 5)
!735 = distinct !DILexicalBlock(scope: !736, file: !1, line: 2573, column: 5)
!736 = distinct !DILexicalBlock(scope: !732, file: !1, line: 2573, column: 5)
!737 = !DISubprogram(name: "combinations_sizeof", scope: !1, file: !1, line: 2403, type: !738, isLocal: true, isDefinition: true, scopeLine: 2404, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.combinationsobject*, i8*)* @combinations_sizeof, variables: !740)
!738 = !DISubroutineType(types: !739)
!739 = !{!4, !367, !89}
!740 = !{!741, !742, !743}
!741 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "co", arg: 1, scope: !737, file: !1, line: 2403, type: !367)
!742 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unused", arg: 2, scope: !737, file: !1, line: 2403, type: !89)
!743 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !737, file: !1, line: 2405, type: !10)
!744 = !DISubprogram(name: "combinations_new", scope: !1, file: !1, line: 2338, type: !621, isLocal: true, isDefinition: true, scopeLine: 2339, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @combinations_new, variables: !745)
!745 = !{!746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !758}
!746 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !744, file: !1, line: 2338, type: !550)
!747 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !744, file: !1, line: 2338, type: !4)
!748 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !744, file: !1, line: 2338, type: !4)
!749 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "co", scope: !744, file: !1, line: 2340, type: !367)
!750 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !744, file: !1, line: 2341, type: !10)
!751 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !744, file: !1, line: 2342, type: !10)
!752 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pool", scope: !744, file: !1, line: 2343, type: !4)
!753 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iterable", scope: !744, file: !1, line: 2344, type: !4)
!754 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "indices", scope: !744, file: !1, line: 2345, type: !247)
!755 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !744, file: !1, line: 2346, type: !10)
!756 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !757, file: !1, line: 2387, type: !4)
!757 = distinct !DILexicalBlock(scope: !744, file: !1, line: 2387, column: 5)
!758 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !759, file: !1, line: 2387, type: !4)
!759 = distinct !DILexicalBlock(scope: !760, file: !1, line: 2387, column: 5)
!760 = distinct !DILexicalBlock(scope: !757, file: !1, line: 2387, column: 5)
!761 = !DISubprogram(name: "cwr_dealloc", scope: !1, file: !1, line: 2733, type: !762, isLocal: true, isDefinition: true, scopeLine: 2734, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.cwrobject*)* @cwr_dealloc, variables: !764)
!762 = !DISubroutineType(types: !763)
!763 = !{null, !377}
!764 = !{!765, !766, !768, !771, !773}
!765 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "co", arg: 1, scope: !761, file: !1, line: 2733, type: !377)
!766 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !767, file: !1, line: 2736, type: !4)
!767 = distinct !DILexicalBlock(scope: !761, file: !1, line: 2736, column: 5)
!768 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !769, file: !1, line: 2736, type: !4)
!769 = distinct !DILexicalBlock(scope: !770, file: !1, line: 2736, column: 5)
!770 = distinct !DILexicalBlock(scope: !767, file: !1, line: 2736, column: 5)
!771 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !772, file: !1, line: 2737, type: !4)
!772 = distinct !DILexicalBlock(scope: !761, file: !1, line: 2737, column: 5)
!773 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !774, file: !1, line: 2737, type: !4)
!774 = distinct !DILexicalBlock(scope: !775, file: !1, line: 2737, column: 5)
!775 = distinct !DILexicalBlock(scope: !772, file: !1, line: 2737, column: 5)
!776 = !DISubprogram(name: "cwr_traverse", scope: !1, file: !1, line: 2754, type: !777, isLocal: true, isDefinition: true, scopeLine: 2755, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.cwrobject*, i32 (%struct._object*, i8*)*, i8*)* @cwr_traverse, variables: !779)
!777 = !DISubroutineType(types: !778)
!778 = !{!43, !377, !263, !89}
!779 = !{!780, !781, !782, !783, !787}
!780 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "co", arg: 1, scope: !776, file: !1, line: 2754, type: !377)
!781 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !776, file: !1, line: 2754, type: !263)
!782 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !776, file: !1, line: 2754, type: !89)
!783 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !784, file: !1, line: 2756, type: !43)
!784 = distinct !DILexicalBlock(scope: !785, file: !1, line: 2756, column: 5)
!785 = distinct !DILexicalBlock(scope: !786, file: !1, line: 2756, column: 5)
!786 = distinct !DILexicalBlock(scope: !776, file: !1, line: 2756, column: 5)
!787 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !788, file: !1, line: 2757, type: !43)
!788 = distinct !DILexicalBlock(scope: !789, file: !1, line: 2757, column: 5)
!789 = distinct !DILexicalBlock(scope: !790, file: !1, line: 2757, column: 5)
!790 = distinct !DILexicalBlock(scope: !776, file: !1, line: 2757, column: 5)
!791 = !DISubprogram(name: "cwr_next", scope: !1, file: !1, line: 2762, type: !792, isLocal: true, isDefinition: true, scopeLine: 2763, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.cwrobject*)* @cwr_next, variables: !794)
!792 = !DISubroutineType(types: !793)
!793 = !{!4, !377}
!794 = !{!795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !810, !812}
!795 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "co", arg: 1, scope: !791, file: !1, line: 2762, type: !377)
!796 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "elem", scope: !791, file: !1, line: 2764, type: !4)
!797 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldelem", scope: !791, file: !1, line: 2765, type: !4)
!798 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pool", scope: !791, file: !1, line: 2766, type: !4)
!799 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "indices", scope: !791, file: !1, line: 2767, type: !247)
!800 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !791, file: !1, line: 2768, type: !4)
!801 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !791, file: !1, line: 2769, type: !10)
!802 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !791, file: !1, line: 2770, type: !10)
!803 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !791, file: !1, line: 2771, type: !10)
!804 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !791, file: !1, line: 2771, type: !10)
!805 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "old_result", scope: !806, file: !1, line: 2791, type: !4)
!806 = distinct !DILexicalBlock(scope: !807, file: !1, line: 2790, column: 36)
!807 = distinct !DILexicalBlock(scope: !808, file: !1, line: 2790, column: 13)
!808 = distinct !DILexicalBlock(scope: !809, file: !1, line: 2788, column: 12)
!809 = distinct !DILexicalBlock(scope: !791, file: !1, line: 2776, column: 9)
!810 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !811, file: !1, line: 2801, type: !4)
!811 = distinct !DILexicalBlock(scope: !806, file: !1, line: 2801, column: 13)
!812 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !813, file: !1, line: 2827, type: !4)
!813 = distinct !DILexicalBlock(scope: !814, file: !1, line: 2827, column: 13)
!814 = distinct !DILexicalBlock(scope: !815, file: !1, line: 2822, column: 28)
!815 = distinct !DILexicalBlock(scope: !816, file: !1, line: 2822, column: 9)
!816 = distinct !DILexicalBlock(scope: !808, file: !1, line: 2822, column: 9)
!817 = !DISubprogram(name: "cwr_reduce", scope: !1, file: !1, line: 2840, type: !792, isLocal: true, isDefinition: true, scopeLine: 2841, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.cwrobject*)* @cwr_reduce, variables: !818)
!818 = !{!819, !820, !824, !825, !829}
!819 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !817, file: !1, line: 2840, type: !377)
!820 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "indices", scope: !821, file: !1, line: 2847, type: !4)
!821 = distinct !DILexicalBlock(scope: !822, file: !1, line: 2846, column: 12)
!822 = distinct !DILexicalBlock(scope: !823, file: !1, line: 2844, column: 16)
!823 = distinct !DILexicalBlock(scope: !817, file: !1, line: 2842, column: 9)
!824 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !821, file: !1, line: 2848, type: !10)
!825 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !826, file: !1, line: 2856, type: !4)
!826 = distinct !DILexicalBlock(scope: !827, file: !1, line: 2855, column: 9)
!827 = distinct !DILexicalBlock(scope: !828, file: !1, line: 2854, column: 9)
!828 = distinct !DILexicalBlock(scope: !821, file: !1, line: 2854, column: 9)
!829 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !830, file: !1, line: 2858, type: !4)
!830 = distinct !DILexicalBlock(scope: !831, file: !1, line: 2858, column: 17)
!831 = distinct !DILexicalBlock(scope: !832, file: !1, line: 2857, column: 25)
!832 = distinct !DILexicalBlock(scope: !826, file: !1, line: 2857, column: 17)
!833 = !DISubprogram(name: "cwr_setstate", scope: !1, file: !1, line: 2869, type: !834, isLocal: true, isDefinition: true, scopeLine: 2870, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.cwrobject*, %struct._object*)* @cwr_setstate, variables: !836)
!834 = !DISubroutineType(types: !835)
!835 = !{!4, !377, !4}
!836 = !{!837, !838, !839, !840, !841, !842, !846, !847, !851, !853}
!837 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !833, file: !1, line: 2869, type: !377)
!838 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 2, scope: !833, file: !1, line: 2869, type: !4)
!839 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !833, file: !1, line: 2871, type: !4)
!840 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !833, file: !1, line: 2872, type: !10)
!841 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !833, file: !1, line: 2872, type: !10)
!842 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "indexObject", scope: !843, file: !1, line: 2883, type: !4)
!843 = distinct !DILexicalBlock(scope: !844, file: !1, line: 2882, column: 5)
!844 = distinct !DILexicalBlock(scope: !845, file: !1, line: 2881, column: 5)
!845 = distinct !DILexicalBlock(scope: !833, file: !1, line: 2881, column: 5)
!846 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !843, file: !1, line: 2884, type: !10)
!847 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "element", scope: !848, file: !1, line: 2898, type: !4)
!848 = distinct !DILexicalBlock(scope: !849, file: !1, line: 2897, column: 29)
!849 = distinct !DILexicalBlock(scope: !850, file: !1, line: 2897, column: 5)
!850 = distinct !DILexicalBlock(scope: !833, file: !1, line: 2897, column: 5)
!851 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !852, file: !1, line: 2902, type: !4)
!852 = distinct !DILexicalBlock(scope: !833, file: !1, line: 2902, column: 5)
!853 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !854, file: !1, line: 2902, type: !4)
!854 = distinct !DILexicalBlock(scope: !855, file: !1, line: 2902, column: 5)
!855 = distinct !DILexicalBlock(scope: !856, file: !1, line: 2902, column: 5)
!856 = distinct !DILexicalBlock(scope: !852, file: !1, line: 2902, column: 5)
!857 = !DISubprogram(name: "cwr_sizeof", scope: !1, file: !1, line: 2744, type: !858, isLocal: true, isDefinition: true, scopeLine: 2745, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.cwrobject*, i8*)* @cwr_sizeof, variables: !860)
!858 = !DISubroutineType(types: !859)
!859 = !{!4, !377, !89}
!860 = !{!861, !862, !863}
!861 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "co", arg: 1, scope: !857, file: !1, line: 2744, type: !377)
!862 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unused", arg: 2, scope: !857, file: !1, line: 2744, type: !89)
!863 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !857, file: !1, line: 2746, type: !10)
!864 = !DISubprogram(name: "cwr_new", scope: !1, file: !1, line: 2679, type: !621, isLocal: true, isDefinition: true, scopeLine: 2680, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @cwr_new, variables: !865)
!865 = !{!866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !878}
!866 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !864, file: !1, line: 2679, type: !550)
!867 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !864, file: !1, line: 2679, type: !4)
!868 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !864, file: !1, line: 2679, type: !4)
!869 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "co", scope: !864, file: !1, line: 2681, type: !377)
!870 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !864, file: !1, line: 2682, type: !10)
!871 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !864, file: !1, line: 2683, type: !10)
!872 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pool", scope: !864, file: !1, line: 2684, type: !4)
!873 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iterable", scope: !864, file: !1, line: 2685, type: !4)
!874 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "indices", scope: !864, file: !1, line: 2686, type: !247)
!875 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !864, file: !1, line: 2687, type: !10)
!876 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !877, file: !1, line: 2728, type: !4)
!877 = distinct !DILexicalBlock(scope: !864, file: !1, line: 2728, column: 5)
!878 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !879, file: !1, line: 2728, type: !4)
!879 = distinct !DILexicalBlock(scope: !880, file: !1, line: 2728, column: 5)
!880 = distinct !DILexicalBlock(scope: !877, file: !1, line: 2728, column: 5)
!881 = !DISubprogram(name: "cycle_dealloc", scope: !1, file: !1, line: 911, type: !882, isLocal: true, isDefinition: true, scopeLine: 912, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.cycleobject*)* @cycle_dealloc, variables: !884)
!882 = !DISubroutineType(types: !883)
!883 = !{null, !387}
!884 = !{!885, !886, !888, !891, !893}
!885 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !881, file: !1, line: 911, type: !387)
!886 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !887, file: !1, line: 914, type: !4)
!887 = distinct !DILexicalBlock(scope: !881, file: !1, line: 914, column: 5)
!888 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !889, file: !1, line: 914, type: !4)
!889 = distinct !DILexicalBlock(scope: !890, file: !1, line: 914, column: 5)
!890 = distinct !DILexicalBlock(scope: !887, file: !1, line: 914, column: 5)
!891 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !892, file: !1, line: 915, type: !4)
!892 = distinct !DILexicalBlock(scope: !881, file: !1, line: 915, column: 5)
!893 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !894, file: !1, line: 915, type: !4)
!894 = distinct !DILexicalBlock(scope: !895, file: !1, line: 915, column: 5)
!895 = distinct !DILexicalBlock(scope: !892, file: !1, line: 915, column: 5)
!896 = !DISubprogram(name: "cycle_traverse", scope: !1, file: !1, line: 920, type: !897, isLocal: true, isDefinition: true, scopeLine: 921, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.cycleobject*, i32 (%struct._object*, i8*)*, i8*)* @cycle_traverse, variables: !899)
!897 = !DISubroutineType(types: !898)
!898 = !{!43, !387, !263, !89}
!899 = !{!900, !901, !902, !903, !907}
!900 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !896, file: !1, line: 920, type: !387)
!901 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !896, file: !1, line: 920, type: !263)
!902 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !896, file: !1, line: 920, type: !89)
!903 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !904, file: !1, line: 922, type: !43)
!904 = distinct !DILexicalBlock(scope: !905, file: !1, line: 922, column: 5)
!905 = distinct !DILexicalBlock(scope: !906, file: !1, line: 922, column: 5)
!906 = distinct !DILexicalBlock(scope: !896, file: !1, line: 922, column: 5)
!907 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !908, file: !1, line: 923, type: !43)
!908 = distinct !DILexicalBlock(scope: !909, file: !1, line: 923, column: 5)
!909 = distinct !DILexicalBlock(scope: !910, file: !1, line: 923, column: 5)
!910 = distinct !DILexicalBlock(scope: !896, file: !1, line: 923, column: 5)
!911 = !DISubprogram(name: "cycle_next", scope: !1, file: !1, line: 928, type: !912, isLocal: true, isDefinition: true, scopeLine: 929, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.cycleobject*)* @cycle_next, variables: !914)
!912 = !DISubroutineType(types: !913)
!913 = !{!4, !387}
!914 = !{!915, !916, !917, !918, !919, !926}
!915 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !911, file: !1, line: 928, type: !387)
!916 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "item", scope: !911, file: !1, line: 930, type: !4)
!917 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !911, file: !1, line: 931, type: !4)
!918 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !911, file: !1, line: 932, type: !4)
!919 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !920, file: !1, line: 938, type: !4)
!920 = distinct !DILexicalBlock(scope: !921, file: !1, line: 938, column: 17)
!921 = distinct !DILexicalBlock(scope: !922, file: !1, line: 937, column: 67)
!922 = distinct !DILexicalBlock(scope: !923, file: !1, line: 937, column: 17)
!923 = distinct !DILexicalBlock(scope: !924, file: !1, line: 936, column: 27)
!924 = distinct !DILexicalBlock(scope: !925, file: !1, line: 936, column: 13)
!925 = distinct !DILexicalBlock(scope: !911, file: !1, line: 934, column: 15)
!926 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !927, file: !1, line: 957, type: !4)
!927 = distinct !DILexicalBlock(scope: !925, file: !1, line: 957, column: 9)
!928 = !DISubprogram(name: "cycle_reduce", scope: !1, file: !1, line: 962, type: !912, isLocal: true, isDefinition: true, scopeLine: 963, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.cycleobject*)* @cycle_reduce, variables: !929)
!929 = !{!930}
!930 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !928, file: !1, line: 962, type: !387)
!931 = !DISubprogram(name: "cycle_setstate", scope: !1, file: !1, line: 972, type: !932, isLocal: true, isDefinition: true, scopeLine: 973, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.cycleobject*, %struct._object*)* @cycle_setstate, variables: !934)
!932 = !DISubroutineType(types: !933)
!933 = !{!4, !387, !4}
!934 = !{!935, !936, !937, !938, !939, !941, !945}
!935 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !931, file: !1, line: 972, type: !387)
!936 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 2, scope: !931, file: !1, line: 972, type: !4)
!937 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "saved", scope: !931, file: !1, line: 974, type: !4)
!938 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "firstpass", scope: !931, file: !1, line: 975, type: !43)
!939 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !940, file: !1, line: 978, type: !4)
!940 = distinct !DILexicalBlock(scope: !931, file: !1, line: 978, column: 5)
!941 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !942, file: !1, line: 978, type: !4)
!942 = distinct !DILexicalBlock(scope: !943, file: !1, line: 978, column: 5)
!943 = distinct !DILexicalBlock(scope: !944, file: !1, line: 978, column: 5)
!944 = distinct !DILexicalBlock(scope: !940, file: !1, line: 978, column: 5)
!945 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xincref_tmp", scope: !946, file: !1, line: 980, type: !4)
!946 = distinct !DILexicalBlock(scope: !931, file: !1, line: 980, column: 5)
!947 = !DISubprogram(name: "cycle_new", scope: !1, file: !1, line: 872, type: !621, isLocal: true, isDefinition: true, scopeLine: 873, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @cycle_new, variables: !948)
!948 = !{!949, !950, !951, !952, !953, !954, !955, !956, !960, !964}
!949 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !947, file: !1, line: 872, type: !550)
!950 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !947, file: !1, line: 872, type: !4)
!951 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !947, file: !1, line: 872, type: !4)
!952 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !947, file: !1, line: 874, type: !4)
!953 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iterable", scope: !947, file: !1, line: 875, type: !4)
!954 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "saved", scope: !947, file: !1, line: 876, type: !4)
!955 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lz", scope: !947, file: !1, line: 877, type: !387)
!956 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !957, file: !1, line: 892, type: !4)
!957 = distinct !DILexicalBlock(scope: !958, file: !1, line: 892, column: 9)
!958 = distinct !DILexicalBlock(scope: !959, file: !1, line: 891, column: 24)
!959 = distinct !DILexicalBlock(scope: !947, file: !1, line: 891, column: 9)
!960 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !961, file: !1, line: 899, type: !4)
!961 = distinct !DILexicalBlock(scope: !962, file: !1, line: 899, column: 9)
!962 = distinct !DILexicalBlock(scope: !963, file: !1, line: 898, column: 21)
!963 = distinct !DILexicalBlock(scope: !947, file: !1, line: 898, column: 9)
!964 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !965, file: !1, line: 900, type: !4)
!965 = distinct !DILexicalBlock(scope: !962, file: !1, line: 900, column: 9)
!966 = !DISubprogram(name: "dropwhile_dealloc", scope: !1, file: !1, line: 1088, type: !967, isLocal: true, isDefinition: true, scopeLine: 1089, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.dropwhileobject*)* @dropwhile_dealloc, variables: !969)
!967 = !DISubroutineType(types: !968)
!968 = !{null, !395}
!969 = !{!970, !971, !973, !976, !978}
!970 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !966, file: !1, line: 1088, type: !395)
!971 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !972, file: !1, line: 1091, type: !4)
!972 = distinct !DILexicalBlock(scope: !966, file: !1, line: 1091, column: 5)
!973 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !974, file: !1, line: 1091, type: !4)
!974 = distinct !DILexicalBlock(scope: !975, file: !1, line: 1091, column: 5)
!975 = distinct !DILexicalBlock(scope: !972, file: !1, line: 1091, column: 5)
!976 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !977, file: !1, line: 1092, type: !4)
!977 = distinct !DILexicalBlock(scope: !966, file: !1, line: 1092, column: 5)
!978 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !979, file: !1, line: 1092, type: !4)
!979 = distinct !DILexicalBlock(scope: !980, file: !1, line: 1092, column: 5)
!980 = distinct !DILexicalBlock(scope: !977, file: !1, line: 1092, column: 5)
!981 = !DISubprogram(name: "dropwhile_traverse", scope: !1, file: !1, line: 1097, type: !982, isLocal: true, isDefinition: true, scopeLine: 1098, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.dropwhileobject*, i32 (%struct._object*, i8*)*, i8*)* @dropwhile_traverse, variables: !984)
!982 = !DISubroutineType(types: !983)
!983 = !{!43, !395, !263, !89}
!984 = !{!985, !986, !987, !988, !992}
!985 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !981, file: !1, line: 1097, type: !395)
!986 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !981, file: !1, line: 1097, type: !263)
!987 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !981, file: !1, line: 1097, type: !89)
!988 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !989, file: !1, line: 1099, type: !43)
!989 = distinct !DILexicalBlock(scope: !990, file: !1, line: 1099, column: 5)
!990 = distinct !DILexicalBlock(scope: !991, file: !1, line: 1099, column: 5)
!991 = distinct !DILexicalBlock(scope: !981, file: !1, line: 1099, column: 5)
!992 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !993, file: !1, line: 1100, type: !43)
!993 = distinct !DILexicalBlock(scope: !994, file: !1, line: 1100, column: 5)
!994 = distinct !DILexicalBlock(scope: !995, file: !1, line: 1100, column: 5)
!995 = distinct !DILexicalBlock(scope: !981, file: !1, line: 1100, column: 5)
!996 = !DISubprogram(name: "dropwhile_next", scope: !1, file: !1, line: 1105, type: !997, isLocal: true, isDefinition: true, scopeLine: 1106, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.dropwhileobject*)* @dropwhile_next, variables: !999)
!997 = !DISubroutineType(types: !998)
!998 = !{!4, !395}
!999 = !{!1000, !1001, !1002, !1003, !1004, !1005, !1006, !1013, !1015}
!1000 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !996, file: !1, line: 1105, type: !395)
!1001 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "item", scope: !996, file: !1, line: 1107, type: !4)
!1002 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "good", scope: !996, file: !1, line: 1107, type: !4)
!1003 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !996, file: !1, line: 1108, type: !4)
!1004 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ok", scope: !996, file: !1, line: 1109, type: !16)
!1005 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iternext", scope: !996, file: !1, line: 1110, type: !115)
!1006 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1007, file: !1, line: 1122, type: !4)
!1007 = distinct !DILexicalBlock(scope: !1008, file: !1, line: 1122, column: 13)
!1008 = distinct !DILexicalBlock(scope: !1009, file: !1, line: 1121, column: 27)
!1009 = distinct !DILexicalBlock(scope: !1010, file: !1, line: 1121, column: 13)
!1010 = distinct !DILexicalBlock(scope: !1011, file: !1, line: 1113, column: 14)
!1011 = distinct !DILexicalBlock(scope: !1012, file: !1, line: 1113, column: 5)
!1012 = distinct !DILexicalBlock(scope: !996, file: !1, line: 1113, column: 5)
!1013 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1014, file: !1, line: 1126, type: !4)
!1014 = distinct !DILexicalBlock(scope: !1010, file: !1, line: 1126, column: 9)
!1015 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1016, file: !1, line: 1131, type: !4)
!1016 = distinct !DILexicalBlock(scope: !1010, file: !1, line: 1131, column: 9)
!1017 = !DISubprogram(name: "dropwhile_reduce", scope: !1, file: !1, line: 1138, type: !997, isLocal: true, isDefinition: true, scopeLine: 1139, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.dropwhileobject*)* @dropwhile_reduce, variables: !1018)
!1018 = !{!1019}
!1019 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1017, file: !1, line: 1138, type: !395)
!1020 = !DISubprogram(name: "dropwhile_setstate", scope: !1, file: !1, line: 1145, type: !1021, isLocal: true, isDefinition: true, scopeLine: 1146, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.dropwhileobject*, %struct._object*)* @dropwhile_setstate, variables: !1023)
!1021 = !DISubroutineType(types: !1022)
!1022 = !{!4, !395, !4}
!1023 = !{!1024, !1025, !1026}
!1024 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1020, file: !1, line: 1145, type: !395)
!1025 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 2, scope: !1020, file: !1, line: 1145, type: !4)
!1026 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "start", scope: !1020, file: !1, line: 1147, type: !43)
!1027 = !DISubprogram(name: "dropwhile_new", scope: !1, file: !1, line: 1056, type: !621, isLocal: true, isDefinition: true, scopeLine: 1057, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @dropwhile_new, variables: !1028)
!1028 = !{!1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036}
!1029 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1027, file: !1, line: 1056, type: !550)
!1030 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1027, file: !1, line: 1056, type: !4)
!1031 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1027, file: !1, line: 1056, type: !4)
!1032 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "func", scope: !1027, file: !1, line: 1058, type: !4)
!1033 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seq", scope: !1027, file: !1, line: 1058, type: !4)
!1034 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !1027, file: !1, line: 1059, type: !4)
!1035 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lz", scope: !1027, file: !1, line: 1060, type: !395)
!1036 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1037, file: !1, line: 1076, type: !4)
!1037 = distinct !DILexicalBlock(scope: !1038, file: !1, line: 1076, column: 9)
!1038 = distinct !DILexicalBlock(scope: !1039, file: !1, line: 1075, column: 21)
!1039 = distinct !DILexicalBlock(scope: !1027, file: !1, line: 1075, column: 9)
!1040 = !DISubprogram(name: "takewhile_dealloc", scope: !1, file: !1, line: 1257, type: !1041, isLocal: true, isDefinition: true, scopeLine: 1258, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.takewhileobject*)* @takewhile_dealloc, variables: !1043)
!1041 = !DISubroutineType(types: !1042)
!1042 = !{null, !403}
!1043 = !{!1044, !1045, !1047, !1050, !1052}
!1044 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1040, file: !1, line: 1257, type: !403)
!1045 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1046, file: !1, line: 1260, type: !4)
!1046 = distinct !DILexicalBlock(scope: !1040, file: !1, line: 1260, column: 5)
!1047 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1048, file: !1, line: 1260, type: !4)
!1048 = distinct !DILexicalBlock(scope: !1049, file: !1, line: 1260, column: 5)
!1049 = distinct !DILexicalBlock(scope: !1046, file: !1, line: 1260, column: 5)
!1050 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1051, file: !1, line: 1261, type: !4)
!1051 = distinct !DILexicalBlock(scope: !1040, file: !1, line: 1261, column: 5)
!1052 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1053, file: !1, line: 1261, type: !4)
!1053 = distinct !DILexicalBlock(scope: !1054, file: !1, line: 1261, column: 5)
!1054 = distinct !DILexicalBlock(scope: !1051, file: !1, line: 1261, column: 5)
!1055 = !DISubprogram(name: "takewhile_traverse", scope: !1, file: !1, line: 1266, type: !1056, isLocal: true, isDefinition: true, scopeLine: 1267, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.takewhileobject*, i32 (%struct._object*, i8*)*, i8*)* @takewhile_traverse, variables: !1058)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{!43, !403, !263, !89}
!1058 = !{!1059, !1060, !1061, !1062, !1066}
!1059 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1055, file: !1, line: 1266, type: !403)
!1060 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1055, file: !1, line: 1266, type: !263)
!1061 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1055, file: !1, line: 1266, type: !89)
!1062 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1063, file: !1, line: 1268, type: !43)
!1063 = distinct !DILexicalBlock(scope: !1064, file: !1, line: 1268, column: 5)
!1064 = distinct !DILexicalBlock(scope: !1065, file: !1, line: 1268, column: 5)
!1065 = distinct !DILexicalBlock(scope: !1055, file: !1, line: 1268, column: 5)
!1066 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1067, file: !1, line: 1269, type: !43)
!1067 = distinct !DILexicalBlock(scope: !1068, file: !1, line: 1269, column: 5)
!1068 = distinct !DILexicalBlock(scope: !1069, file: !1, line: 1269, column: 5)
!1069 = distinct !DILexicalBlock(scope: !1055, file: !1, line: 1269, column: 5)
!1070 = !DISubprogram(name: "takewhile_next", scope: !1, file: !1, line: 1274, type: !1071, isLocal: true, isDefinition: true, scopeLine: 1275, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.takewhileobject*)* @takewhile_next, variables: !1073)
!1071 = !DISubroutineType(types: !1072)
!1072 = !{!4, !403}
!1073 = !{!1074, !1075, !1076, !1077, !1078, !1079, !1083, !1085}
!1074 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1070, file: !1, line: 1274, type: !403)
!1075 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "item", scope: !1070, file: !1, line: 1276, type: !4)
!1076 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "good", scope: !1070, file: !1, line: 1276, type: !4)
!1077 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !1070, file: !1, line: 1277, type: !4)
!1078 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ok", scope: !1070, file: !1, line: 1278, type: !16)
!1079 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1080, file: !1, line: 1289, type: !4)
!1080 = distinct !DILexicalBlock(scope: !1081, file: !1, line: 1289, column: 9)
!1081 = distinct !DILexicalBlock(scope: !1082, file: !1, line: 1288, column: 23)
!1082 = distinct !DILexicalBlock(scope: !1070, file: !1, line: 1288, column: 9)
!1083 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1084, file: !1, line: 1293, type: !4)
!1084 = distinct !DILexicalBlock(scope: !1070, file: !1, line: 1293, column: 5)
!1085 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1086, file: !1, line: 1296, type: !4)
!1086 = distinct !DILexicalBlock(scope: !1070, file: !1, line: 1296, column: 5)
!1087 = !DISubprogram(name: "takewhile_reduce", scope: !1, file: !1, line: 1303, type: !1071, isLocal: true, isDefinition: true, scopeLine: 1304, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.takewhileobject*)* @takewhile_reduce, variables: !1088)
!1088 = !{!1089}
!1089 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1087, file: !1, line: 1303, type: !403)
!1090 = !DISubprogram(name: "takewhile_reduce_setstate", scope: !1, file: !1, line: 1310, type: !1091, isLocal: true, isDefinition: true, scopeLine: 1311, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.takewhileobject*, %struct._object*)* @takewhile_reduce_setstate, variables: !1093)
!1091 = !DISubroutineType(types: !1092)
!1092 = !{!4, !403, !4}
!1093 = !{!1094, !1095, !1096}
!1094 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1090, file: !1, line: 1310, type: !403)
!1095 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 2, scope: !1090, file: !1, line: 1310, type: !4)
!1096 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stop", scope: !1090, file: !1, line: 1312, type: !43)
!1097 = !DISubprogram(name: "takewhile_new", scope: !1, file: !1, line: 1225, type: !621, isLocal: true, isDefinition: true, scopeLine: 1226, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @takewhile_new, variables: !1098)
!1098 = !{!1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106}
!1099 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1097, file: !1, line: 1225, type: !550)
!1100 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1097, file: !1, line: 1225, type: !4)
!1101 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1097, file: !1, line: 1225, type: !4)
!1102 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "func", scope: !1097, file: !1, line: 1227, type: !4)
!1103 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seq", scope: !1097, file: !1, line: 1227, type: !4)
!1104 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !1097, file: !1, line: 1228, type: !4)
!1105 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lz", scope: !1097, file: !1, line: 1229, type: !403)
!1106 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1107, file: !1, line: 1245, type: !4)
!1107 = distinct !DILexicalBlock(scope: !1108, file: !1, line: 1245, column: 9)
!1108 = distinct !DILexicalBlock(scope: !1109, file: !1, line: 1244, column: 21)
!1109 = distinct !DILexicalBlock(scope: !1097, file: !1, line: 1244, column: 9)
!1110 = !DISubprogram(name: "islice_dealloc", scope: !1, file: !1, line: 1472, type: !1111, isLocal: true, isDefinition: true, scopeLine: 1473, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.isliceobject*)* @islice_dealloc, variables: !1113)
!1111 = !DISubroutineType(types: !1112)
!1112 = !{null, !411}
!1113 = !{!1114, !1115, !1117}
!1114 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1110, file: !1, line: 1472, type: !411)
!1115 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1116, file: !1, line: 1475, type: !4)
!1116 = distinct !DILexicalBlock(scope: !1110, file: !1, line: 1475, column: 5)
!1117 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1118, file: !1, line: 1475, type: !4)
!1118 = distinct !DILexicalBlock(scope: !1119, file: !1, line: 1475, column: 5)
!1119 = distinct !DILexicalBlock(scope: !1116, file: !1, line: 1475, column: 5)
!1120 = !DISubprogram(name: "islice_traverse", scope: !1, file: !1, line: 1480, type: !1121, isLocal: true, isDefinition: true, scopeLine: 1481, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.isliceobject*, i32 (%struct._object*, i8*)*, i8*)* @islice_traverse, variables: !1123)
!1121 = !DISubroutineType(types: !1122)
!1122 = !{!43, !411, !263, !89}
!1123 = !{!1124, !1125, !1126, !1127}
!1124 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1120, file: !1, line: 1480, type: !411)
!1125 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1120, file: !1, line: 1480, type: !263)
!1126 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1120, file: !1, line: 1480, type: !89)
!1127 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1128, file: !1, line: 1482, type: !43)
!1128 = distinct !DILexicalBlock(scope: !1129, file: !1, line: 1482, column: 5)
!1129 = distinct !DILexicalBlock(scope: !1130, file: !1, line: 1482, column: 5)
!1130 = distinct !DILexicalBlock(scope: !1120, file: !1, line: 1482, column: 5)
!1131 = !DISubprogram(name: "islice_next", scope: !1, file: !1, line: 1487, type: !1132, isLocal: true, isDefinition: true, scopeLine: 1488, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.isliceobject*)* @islice_next, variables: !1134)
!1132 = !DISubroutineType(types: !1133)
!1133 = !{!4, !411}
!1134 = !{!1135, !1136, !1137, !1138, !1139, !1140, !1141, !1144, !1146}
!1135 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1131, file: !1, line: 1487, type: !411)
!1136 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "item", scope: !1131, file: !1, line: 1489, type: !4)
!1137 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !1131, file: !1, line: 1490, type: !4)
!1138 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stop", scope: !1131, file: !1, line: 1491, type: !10)
!1139 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldnext", scope: !1131, file: !1, line: 1492, type: !10)
!1140 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iternext", scope: !1131, file: !1, line: 1493, type: !115)
!1141 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1142, file: !1, line: 1503, type: !4)
!1142 = distinct !DILexicalBlock(scope: !1143, file: !1, line: 1503, column: 9)
!1143 = distinct !DILexicalBlock(scope: !1131, file: !1, line: 1499, column: 32)
!1144 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1145, file: !1, line: 1521, type: !4)
!1145 = distinct !DILexicalBlock(scope: !1131, file: !1, line: 1521, column: 5)
!1146 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1147, file: !1, line: 1521, type: !4)
!1147 = distinct !DILexicalBlock(scope: !1148, file: !1, line: 1521, column: 5)
!1148 = distinct !DILexicalBlock(scope: !1149, file: !1, line: 1521, column: 5)
!1149 = distinct !DILexicalBlock(scope: !1145, file: !1, line: 1521, column: 5)
!1150 = !DISubprogram(name: "islice_reduce", scope: !1, file: !1, line: 1526, type: !1132, isLocal: true, isDefinition: true, scopeLine: 1527, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.isliceobject*)* @islice_reduce, variables: !1151)
!1151 = !{!1152, !1153, !1154, !1157, !1158}
!1152 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1150, file: !1, line: 1526, type: !411)
!1153 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stop", scope: !1150, file: !1, line: 1531, type: !4)
!1154 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "empty_list", scope: !1155, file: !1, line: 1533, type: !4)
!1155 = distinct !DILexicalBlock(scope: !1156, file: !1, line: 1532, column: 25)
!1156 = distinct !DILexicalBlock(scope: !1150, file: !1, line: 1532, column: 9)
!1157 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "empty_it", scope: !1155, file: !1, line: 1534, type: !4)
!1158 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1159, file: !1, line: 1539, type: !4)
!1159 = distinct !DILexicalBlock(scope: !1155, file: !1, line: 1539, column: 9)
!1160 = !DISubprogram(name: "islice_setstate", scope: !1, file: !1, line: 1558, type: !1161, isLocal: true, isDefinition: true, scopeLine: 1559, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.isliceobject*, %struct._object*)* @islice_setstate, variables: !1163)
!1161 = !DISubroutineType(types: !1162)
!1162 = !{!4, !411, !4}
!1163 = !{!1164, !1165, !1166}
!1164 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1160, file: !1, line: 1558, type: !411)
!1165 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 2, scope: !1160, file: !1, line: 1558, type: !4)
!1166 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cnt", scope: !1160, file: !1, line: 1560, type: !10)
!1167 = !DISubprogram(name: "islice_new", scope: !1, file: !1, line: 1391, type: !621, isLocal: true, isDefinition: true, scopeLine: 1392, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @islice_new, variables: !1168)
!1168 = !{!1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182}
!1169 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1167, file: !1, line: 1391, type: !550)
!1170 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1167, file: !1, line: 1391, type: !4)
!1171 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1167, file: !1, line: 1391, type: !4)
!1172 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seq", scope: !1167, file: !1, line: 1393, type: !4)
!1173 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "start", scope: !1167, file: !1, line: 1394, type: !10)
!1174 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stop", scope: !1167, file: !1, line: 1394, type: !10)
!1175 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "step", scope: !1167, file: !1, line: 1394, type: !10)
!1176 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !1167, file: !1, line: 1395, type: !4)
!1177 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "a1", scope: !1167, file: !1, line: 1395, type: !4)
!1178 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "a2", scope: !1167, file: !1, line: 1395, type: !4)
!1179 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "a3", scope: !1167, file: !1, line: 1395, type: !4)
!1180 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "numargs", scope: !1167, file: !1, line: 1396, type: !10)
!1181 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lz", scope: !1167, file: !1, line: 1397, type: !411)
!1182 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1183, file: !1, line: 1459, type: !4)
!1183 = distinct !DILexicalBlock(scope: !1184, file: !1, line: 1459, column: 9)
!1184 = distinct !DILexicalBlock(scope: !1185, file: !1, line: 1458, column: 21)
!1185 = distinct !DILexicalBlock(scope: !1167, file: !1, line: 1458, column: 9)
!1186 = !DISubprogram(name: "starmap_dealloc", scope: !1, file: !1, line: 1673, type: !1187, isLocal: true, isDefinition: true, scopeLine: 1674, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.starmapobject*)* @starmap_dealloc, variables: !1189)
!1187 = !DISubroutineType(types: !1188)
!1188 = !{null, !421}
!1189 = !{!1190, !1191, !1193, !1196, !1198}
!1190 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1186, file: !1, line: 1673, type: !421)
!1191 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1192, file: !1, line: 1676, type: !4)
!1192 = distinct !DILexicalBlock(scope: !1186, file: !1, line: 1676, column: 5)
!1193 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1194, file: !1, line: 1676, type: !4)
!1194 = distinct !DILexicalBlock(scope: !1195, file: !1, line: 1676, column: 5)
!1195 = distinct !DILexicalBlock(scope: !1192, file: !1, line: 1676, column: 5)
!1196 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1197, file: !1, line: 1677, type: !4)
!1197 = distinct !DILexicalBlock(scope: !1186, file: !1, line: 1677, column: 5)
!1198 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1199, file: !1, line: 1677, type: !4)
!1199 = distinct !DILexicalBlock(scope: !1200, file: !1, line: 1677, column: 5)
!1200 = distinct !DILexicalBlock(scope: !1197, file: !1, line: 1677, column: 5)
!1201 = !DISubprogram(name: "starmap_traverse", scope: !1, file: !1, line: 1682, type: !1202, isLocal: true, isDefinition: true, scopeLine: 1683, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.starmapobject*, i32 (%struct._object*, i8*)*, i8*)* @starmap_traverse, variables: !1204)
!1202 = !DISubroutineType(types: !1203)
!1203 = !{!43, !421, !263, !89}
!1204 = !{!1205, !1206, !1207, !1208, !1212}
!1205 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1201, file: !1, line: 1682, type: !421)
!1206 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1201, file: !1, line: 1682, type: !263)
!1207 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1201, file: !1, line: 1682, type: !89)
!1208 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1209, file: !1, line: 1684, type: !43)
!1209 = distinct !DILexicalBlock(scope: !1210, file: !1, line: 1684, column: 5)
!1210 = distinct !DILexicalBlock(scope: !1211, file: !1, line: 1684, column: 5)
!1211 = distinct !DILexicalBlock(scope: !1201, file: !1, line: 1684, column: 5)
!1212 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1213, file: !1, line: 1685, type: !43)
!1213 = distinct !DILexicalBlock(scope: !1214, file: !1, line: 1685, column: 5)
!1214 = distinct !DILexicalBlock(scope: !1215, file: !1, line: 1685, column: 5)
!1215 = distinct !DILexicalBlock(scope: !1201, file: !1, line: 1685, column: 5)
!1216 = !DISubprogram(name: "starmap_next", scope: !1, file: !1, line: 1690, type: !1217, isLocal: true, isDefinition: true, scopeLine: 1691, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.starmapobject*)* @starmap_next, variables: !1219)
!1217 = !DISubroutineType(types: !1218)
!1218 = !{!4, !421}
!1219 = !{!1220, !1221, !1222, !1223, !1224, !1227, !1229}
!1220 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1216, file: !1, line: 1690, type: !421)
!1221 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "args", scope: !1216, file: !1, line: 1692, type: !4)
!1222 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1216, file: !1, line: 1693, type: !4)
!1223 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !1216, file: !1, line: 1694, type: !4)
!1224 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newargs", scope: !1225, file: !1, line: 1700, type: !4)
!1225 = distinct !DILexicalBlock(scope: !1226, file: !1, line: 1699, column: 36)
!1226 = distinct !DILexicalBlock(scope: !1216, file: !1, line: 1699, column: 9)
!1227 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1228, file: !1, line: 1701, type: !4)
!1228 = distinct !DILexicalBlock(scope: !1225, file: !1, line: 1701, column: 9)
!1229 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1230, file: !1, line: 1707, type: !4)
!1230 = distinct !DILexicalBlock(scope: !1216, file: !1, line: 1707, column: 5)
!1231 = !DISubprogram(name: "starmap_reduce", scope: !1, file: !1, line: 1712, type: !1217, isLocal: true, isDefinition: true, scopeLine: 1713, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.starmapobject*)* @starmap_reduce, variables: !1232)
!1232 = !{!1233}
!1233 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1231, file: !1, line: 1712, type: !421)
!1234 = !DISubprogram(name: "starmap_new", scope: !1, file: !1, line: 1642, type: !621, isLocal: true, isDefinition: true, scopeLine: 1643, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @starmap_new, variables: !1235)
!1235 = !{!1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243}
!1236 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1234, file: !1, line: 1642, type: !550)
!1237 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1234, file: !1, line: 1642, type: !4)
!1238 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1234, file: !1, line: 1642, type: !4)
!1239 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "func", scope: !1234, file: !1, line: 1644, type: !4)
!1240 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seq", scope: !1234, file: !1, line: 1644, type: !4)
!1241 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !1234, file: !1, line: 1645, type: !4)
!1242 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lz", scope: !1234, file: !1, line: 1646, type: !421)
!1243 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1244, file: !1, line: 1662, type: !4)
!1244 = distinct !DILexicalBlock(scope: !1245, file: !1, line: 1662, column: 9)
!1245 = distinct !DILexicalBlock(scope: !1246, file: !1, line: 1661, column: 21)
!1246 = distinct !DILexicalBlock(scope: !1234, file: !1, line: 1661, column: 9)
!1247 = !DISubprogram(name: "chain_dealloc", scope: !1, file: !1, line: 1829, type: !1248, isLocal: true, isDefinition: true, scopeLine: 1830, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.chainobject*)* @chain_dealloc, variables: !1250)
!1248 = !DISubroutineType(types: !1249)
!1249 = !{null, !428}
!1250 = !{!1251, !1252, !1254, !1257, !1259}
!1251 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1247, file: !1, line: 1829, type: !428)
!1252 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1253, file: !1, line: 1832, type: !4)
!1253 = distinct !DILexicalBlock(scope: !1247, file: !1, line: 1832, column: 5)
!1254 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1255, file: !1, line: 1832, type: !4)
!1255 = distinct !DILexicalBlock(scope: !1256, file: !1, line: 1832, column: 5)
!1256 = distinct !DILexicalBlock(scope: !1253, file: !1, line: 1832, column: 5)
!1257 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1258, file: !1, line: 1833, type: !4)
!1258 = distinct !DILexicalBlock(scope: !1247, file: !1, line: 1833, column: 5)
!1259 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1260, file: !1, line: 1833, type: !4)
!1260 = distinct !DILexicalBlock(scope: !1261, file: !1, line: 1833, column: 5)
!1261 = distinct !DILexicalBlock(scope: !1258, file: !1, line: 1833, column: 5)
!1262 = !DISubprogram(name: "chain_traverse", scope: !1, file: !1, line: 1838, type: !1263, isLocal: true, isDefinition: true, scopeLine: 1839, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.chainobject*, i32 (%struct._object*, i8*)*, i8*)* @chain_traverse, variables: !1265)
!1263 = !DISubroutineType(types: !1264)
!1264 = !{!43, !428, !263, !89}
!1265 = !{!1266, !1267, !1268, !1269, !1273}
!1266 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1262, file: !1, line: 1838, type: !428)
!1267 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1262, file: !1, line: 1838, type: !263)
!1268 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1262, file: !1, line: 1838, type: !89)
!1269 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1270, file: !1, line: 1840, type: !43)
!1270 = distinct !DILexicalBlock(scope: !1271, file: !1, line: 1840, column: 5)
!1271 = distinct !DILexicalBlock(scope: !1272, file: !1, line: 1840, column: 5)
!1272 = distinct !DILexicalBlock(scope: !1262, file: !1, line: 1840, column: 5)
!1273 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1274, file: !1, line: 1841, type: !43)
!1274 = distinct !DILexicalBlock(scope: !1275, file: !1, line: 1841, column: 5)
!1275 = distinct !DILexicalBlock(scope: !1276, file: !1, line: 1841, column: 5)
!1276 = distinct !DILexicalBlock(scope: !1262, file: !1, line: 1841, column: 5)
!1277 = !DISubprogram(name: "chain_next", scope: !1, file: !1, line: 1846, type: !1278, isLocal: true, isDefinition: true, scopeLine: 1847, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.chainobject*)* @chain_next, variables: !1280)
!1278 = !DISubroutineType(types: !1279)
!1279 = !{!4, !428}
!1280 = !{!1281, !1282, !1283, !1286, !1290, !1294, !1296, !1300, !1304, !1306}
!1281 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1277, file: !1, line: 1846, type: !428)
!1282 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "item", scope: !1277, file: !1, line: 1848, type: !4)
!1283 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iterable", scope: !1284, file: !1, line: 1854, type: !4)
!1284 = distinct !DILexicalBlock(scope: !1285, file: !1, line: 1853, column: 29)
!1285 = distinct !DILexicalBlock(scope: !1277, file: !1, line: 1853, column: 9)
!1286 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1287, file: !1, line: 1856, type: !4)
!1287 = distinct !DILexicalBlock(scope: !1288, file: !1, line: 1856, column: 13)
!1288 = distinct !DILexicalBlock(scope: !1289, file: !1, line: 1855, column: 31)
!1289 = distinct !DILexicalBlock(scope: !1284, file: !1, line: 1855, column: 13)
!1290 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1291, file: !1, line: 1856, type: !4)
!1291 = distinct !DILexicalBlock(scope: !1292, file: !1, line: 1856, column: 13)
!1292 = distinct !DILexicalBlock(scope: !1293, file: !1, line: 1856, column: 13)
!1293 = distinct !DILexicalBlock(scope: !1287, file: !1, line: 1856, column: 13)
!1294 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1295, file: !1, line: 1860, type: !4)
!1295 = distinct !DILexicalBlock(scope: !1284, file: !1, line: 1860, column: 9)
!1296 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1297, file: !1, line: 1862, type: !4)
!1297 = distinct !DILexicalBlock(scope: !1298, file: !1, line: 1862, column: 13)
!1298 = distinct !DILexicalBlock(scope: !1299, file: !1, line: 1861, column: 33)
!1299 = distinct !DILexicalBlock(scope: !1284, file: !1, line: 1861, column: 13)
!1300 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1301, file: !1, line: 1862, type: !4)
!1301 = distinct !DILexicalBlock(scope: !1302, file: !1, line: 1862, column: 13)
!1302 = distinct !DILexicalBlock(scope: !1303, file: !1, line: 1862, column: 13)
!1303 = distinct !DILexicalBlock(scope: !1297, file: !1, line: 1862, column: 13)
!1304 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1305, file: !1, line: 1875, type: !4)
!1305 = distinct !DILexicalBlock(scope: !1277, file: !1, line: 1875, column: 5)
!1306 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1307, file: !1, line: 1875, type: !4)
!1307 = distinct !DILexicalBlock(scope: !1308, file: !1, line: 1875, column: 5)
!1308 = distinct !DILexicalBlock(scope: !1309, file: !1, line: 1875, column: 5)
!1309 = distinct !DILexicalBlock(scope: !1305, file: !1, line: 1875, column: 5)
!1310 = !DISubprogram(name: "chain_new_from_iterable", scope: !1, file: !1, line: 1817, type: !1311, isLocal: true, isDefinition: true, scopeLine: 1818, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*)* @chain_new_from_iterable, variables: !1313)
!1311 = !DISubroutineType(types: !1312)
!1312 = !{!4, !550, !4}
!1313 = !{!1314, !1315, !1316}
!1314 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1310, file: !1, line: 1817, type: !550)
!1315 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !1310, file: !1, line: 1817, type: !4)
!1316 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "source", scope: !1310, file: !1, line: 1819, type: !4)
!1317 = !DISubprogram(name: "chain_new_internal", scope: !1, file: !1, line: 1786, type: !1311, isLocal: true, isDefinition: true, scopeLine: 1787, flags: DIFlagPrototyped, isOptimized: true, variables: !1318)
!1318 = !{!1319, !1320, !1321, !1322}
!1319 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1317, file: !1, line: 1786, type: !550)
!1320 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "source", arg: 2, scope: !1317, file: !1, line: 1786, type: !4)
!1321 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lz", scope: !1317, file: !1, line: 1788, type: !428)
!1322 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1323, file: !1, line: 1792, type: !4)
!1323 = distinct !DILexicalBlock(scope: !1324, file: !1, line: 1792, column: 9)
!1324 = distinct !DILexicalBlock(scope: !1325, file: !1, line: 1791, column: 21)
!1325 = distinct !DILexicalBlock(scope: !1317, file: !1, line: 1791, column: 9)
!1326 = !DISubprogram(name: "chain_reduce", scope: !1, file: !1, line: 1880, type: !1278, isLocal: true, isDefinition: true, scopeLine: 1881, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.chainobject*)* @chain_reduce, variables: !1327)
!1327 = !{!1328}
!1328 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1326, file: !1, line: 1880, type: !428)
!1329 = !DISubprogram(name: "chain_setstate", scope: !1, file: !1, line: 1899, type: !1330, isLocal: true, isDefinition: true, scopeLine: 1900, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.chainobject*, %struct._object*)* @chain_setstate, variables: !1332)
!1330 = !DISubroutineType(types: !1331)
!1331 = !{!4, !428, !4}
!1332 = !{!1333, !1334, !1335, !1336, !1337, !1339, !1343, !1345, !1349}
!1333 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1329, file: !1, line: 1899, type: !428)
!1334 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 2, scope: !1329, file: !1, line: 1899, type: !4)
!1335 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "source", scope: !1329, file: !1, line: 1901, type: !4)
!1336 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "active", scope: !1329, file: !1, line: 1901, type: !4)
!1337 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1338, file: !1, line: 1905, type: !4)
!1338 = distinct !DILexicalBlock(scope: !1329, file: !1, line: 1905, column: 5)
!1339 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1340, file: !1, line: 1905, type: !4)
!1340 = distinct !DILexicalBlock(scope: !1341, file: !1, line: 1905, column: 5)
!1341 = distinct !DILexicalBlock(scope: !1342, file: !1, line: 1905, column: 5)
!1342 = distinct !DILexicalBlock(scope: !1338, file: !1, line: 1905, column: 5)
!1343 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1344, file: !1, line: 1908, type: !4)
!1344 = distinct !DILexicalBlock(scope: !1329, file: !1, line: 1908, column: 5)
!1345 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1346, file: !1, line: 1908, type: !4)
!1346 = distinct !DILexicalBlock(scope: !1347, file: !1, line: 1908, column: 5)
!1347 = distinct !DILexicalBlock(scope: !1348, file: !1, line: 1908, column: 5)
!1348 = distinct !DILexicalBlock(scope: !1344, file: !1, line: 1908, column: 5)
!1349 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xincref_tmp", scope: !1350, file: !1, line: 1910, type: !4)
!1350 = distinct !DILexicalBlock(scope: !1329, file: !1, line: 1910, column: 5)
!1351 = !DISubprogram(name: "chain_new", scope: !1, file: !1, line: 1802, type: !621, isLocal: true, isDefinition: true, scopeLine: 1803, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @chain_new, variables: !1352)
!1352 = !{!1353, !1354, !1355, !1356}
!1353 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1351, file: !1, line: 1802, type: !550)
!1354 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1351, file: !1, line: 1802, type: !4)
!1355 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1351, file: !1, line: 1802, type: !4)
!1356 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "source", scope: !1351, file: !1, line: 1804, type: !4)
!1357 = !DISubprogram(name: "compress_dealloc", scope: !1, file: !1, line: 3581, type: !1358, isLocal: true, isDefinition: true, scopeLine: 3582, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.compressobject*)* @compress_dealloc, variables: !1360)
!1358 = !DISubroutineType(types: !1359)
!1359 = !{null, !435}
!1360 = !{!1361, !1362, !1364, !1367, !1369}
!1361 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1357, file: !1, line: 3581, type: !435)
!1362 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1363, file: !1, line: 3584, type: !4)
!1363 = distinct !DILexicalBlock(scope: !1357, file: !1, line: 3584, column: 5)
!1364 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1365, file: !1, line: 3584, type: !4)
!1365 = distinct !DILexicalBlock(scope: !1366, file: !1, line: 3584, column: 5)
!1366 = distinct !DILexicalBlock(scope: !1363, file: !1, line: 3584, column: 5)
!1367 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1368, file: !1, line: 3585, type: !4)
!1368 = distinct !DILexicalBlock(scope: !1357, file: !1, line: 3585, column: 5)
!1369 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1370, file: !1, line: 3585, type: !4)
!1370 = distinct !DILexicalBlock(scope: !1371, file: !1, line: 3585, column: 5)
!1371 = distinct !DILexicalBlock(scope: !1368, file: !1, line: 3585, column: 5)
!1372 = !DISubprogram(name: "compress_traverse", scope: !1, file: !1, line: 3590, type: !1373, isLocal: true, isDefinition: true, scopeLine: 3591, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.compressobject*, i32 (%struct._object*, i8*)*, i8*)* @compress_traverse, variables: !1375)
!1373 = !DISubroutineType(types: !1374)
!1374 = !{!43, !435, !263, !89}
!1375 = !{!1376, !1377, !1378, !1379, !1383}
!1376 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1372, file: !1, line: 3590, type: !435)
!1377 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1372, file: !1, line: 3590, type: !263)
!1378 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1372, file: !1, line: 3590, type: !89)
!1379 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1380, file: !1, line: 3592, type: !43)
!1380 = distinct !DILexicalBlock(scope: !1381, file: !1, line: 3592, column: 5)
!1381 = distinct !DILexicalBlock(scope: !1382, file: !1, line: 3592, column: 5)
!1382 = distinct !DILexicalBlock(scope: !1372, file: !1, line: 3592, column: 5)
!1383 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1384, file: !1, line: 3593, type: !43)
!1384 = distinct !DILexicalBlock(scope: !1385, file: !1, line: 3593, column: 5)
!1385 = distinct !DILexicalBlock(scope: !1386, file: !1, line: 3593, column: 5)
!1386 = distinct !DILexicalBlock(scope: !1372, file: !1, line: 3593, column: 5)
!1387 = !DISubprogram(name: "compress_next", scope: !1, file: !1, line: 3598, type: !1388, isLocal: true, isDefinition: true, scopeLine: 3599, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.compressobject*)* @compress_next, variables: !1390)
!1388 = !DISubroutineType(types: !1389)
!1389 = !{!4, !435}
!1390 = !{!1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1404, !1406}
!1391 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1387, file: !1, line: 3598, type: !435)
!1392 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "data", scope: !1387, file: !1, line: 3600, type: !4)
!1393 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "selectors", scope: !1387, file: !1, line: 3600, type: !4)
!1394 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "datum", scope: !1387, file: !1, line: 3601, type: !4)
!1395 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "selector", scope: !1387, file: !1, line: 3601, type: !4)
!1396 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "datanext", scope: !1387, file: !1, line: 3602, type: !115)
!1397 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "selectornext", scope: !1387, file: !1, line: 3603, type: !115)
!1398 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ok", scope: !1387, file: !1, line: 3604, type: !43)
!1399 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1400, file: !1, line: 3619, type: !4)
!1400 = distinct !DILexicalBlock(scope: !1401, file: !1, line: 3619, column: 13)
!1401 = distinct !DILexicalBlock(scope: !1402, file: !1, line: 3618, column: 31)
!1402 = distinct !DILexicalBlock(scope: !1403, file: !1, line: 3618, column: 13)
!1403 = distinct !DILexicalBlock(scope: !1387, file: !1, line: 3606, column: 15)
!1404 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1405, file: !1, line: 3624, type: !4)
!1405 = distinct !DILexicalBlock(scope: !1403, file: !1, line: 3624, column: 9)
!1406 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1407, file: !1, line: 3627, type: !4)
!1407 = distinct !DILexicalBlock(scope: !1403, file: !1, line: 3627, column: 9)
!1408 = !DISubprogram(name: "compress_reduce", scope: !1, file: !1, line: 3634, type: !1388, isLocal: true, isDefinition: true, scopeLine: 3635, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.compressobject*)* @compress_reduce, variables: !1409)
!1409 = !{!1410}
!1410 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1408, file: !1, line: 3634, type: !435)
!1411 = !DISubprogram(name: "compress_new", scope: !1, file: !1, line: 3549, type: !621, isLocal: true, isDefinition: true, scopeLine: 3550, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @compress_new, variables: !1412)
!1412 = !{!1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1423, !1426, !1428}
!1413 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1411, file: !1, line: 3549, type: !550)
!1414 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1411, file: !1, line: 3549, type: !4)
!1415 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1411, file: !1, line: 3549, type: !4)
!1416 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seq1", scope: !1411, file: !1, line: 3551, type: !4)
!1417 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seq2", scope: !1411, file: !1, line: 3551, type: !4)
!1418 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "data", scope: !1411, file: !1, line: 3552, type: !4)
!1419 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "selectors", scope: !1411, file: !1, line: 3552, type: !4)
!1420 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lz", scope: !1411, file: !1, line: 3553, type: !435)
!1421 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1422, file: !1, line: 3575, type: !4)
!1422 = distinct !DILexicalBlock(scope: !1411, file: !1, line: 3575, column: 5)
!1423 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1424, file: !1, line: 3575, type: !4)
!1424 = distinct !DILexicalBlock(scope: !1425, file: !1, line: 3575, column: 5)
!1425 = distinct !DILexicalBlock(scope: !1422, file: !1, line: 3575, column: 5)
!1426 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1427, file: !1, line: 3576, type: !4)
!1427 = distinct !DILexicalBlock(scope: !1411, file: !1, line: 3576, column: 5)
!1428 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1429, file: !1, line: 3576, type: !4)
!1429 = distinct !DILexicalBlock(scope: !1430, file: !1, line: 3576, column: 5)
!1430 = distinct !DILexicalBlock(scope: !1427, file: !1, line: 3576, column: 5)
!1431 = !DISubprogram(name: "filterfalse_dealloc", scope: !1, file: !1, line: 3741, type: !1432, isLocal: true, isDefinition: true, scopeLine: 3742, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.filterfalseobject*)* @filterfalse_dealloc, variables: !1434)
!1432 = !DISubroutineType(types: !1433)
!1433 = !{null, !442}
!1434 = !{!1435, !1436, !1438, !1441, !1443}
!1435 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1431, file: !1, line: 3741, type: !442)
!1436 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1437, file: !1, line: 3744, type: !4)
!1437 = distinct !DILexicalBlock(scope: !1431, file: !1, line: 3744, column: 5)
!1438 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1439, file: !1, line: 3744, type: !4)
!1439 = distinct !DILexicalBlock(scope: !1440, file: !1, line: 3744, column: 5)
!1440 = distinct !DILexicalBlock(scope: !1437, file: !1, line: 3744, column: 5)
!1441 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1442, file: !1, line: 3745, type: !4)
!1442 = distinct !DILexicalBlock(scope: !1431, file: !1, line: 3745, column: 5)
!1443 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1444, file: !1, line: 3745, type: !4)
!1444 = distinct !DILexicalBlock(scope: !1445, file: !1, line: 3745, column: 5)
!1445 = distinct !DILexicalBlock(scope: !1442, file: !1, line: 3745, column: 5)
!1446 = !DISubprogram(name: "filterfalse_traverse", scope: !1, file: !1, line: 3750, type: !1447, isLocal: true, isDefinition: true, scopeLine: 3751, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.filterfalseobject*, i32 (%struct._object*, i8*)*, i8*)* @filterfalse_traverse, variables: !1449)
!1447 = !DISubroutineType(types: !1448)
!1448 = !{!43, !442, !263, !89}
!1449 = !{!1450, !1451, !1452, !1453, !1457}
!1450 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1446, file: !1, line: 3750, type: !442)
!1451 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1446, file: !1, line: 3750, type: !263)
!1452 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1446, file: !1, line: 3750, type: !89)
!1453 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1454, file: !1, line: 3752, type: !43)
!1454 = distinct !DILexicalBlock(scope: !1455, file: !1, line: 3752, column: 5)
!1455 = distinct !DILexicalBlock(scope: !1456, file: !1, line: 3752, column: 5)
!1456 = distinct !DILexicalBlock(scope: !1446, file: !1, line: 3752, column: 5)
!1457 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1458, file: !1, line: 3753, type: !43)
!1458 = distinct !DILexicalBlock(scope: !1459, file: !1, line: 3753, column: 5)
!1459 = distinct !DILexicalBlock(scope: !1460, file: !1, line: 3753, column: 5)
!1460 = distinct !DILexicalBlock(scope: !1446, file: !1, line: 3753, column: 5)
!1461 = !DISubprogram(name: "filterfalse_next", scope: !1, file: !1, line: 3758, type: !1462, isLocal: true, isDefinition: true, scopeLine: 3759, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.filterfalseobject*)* @filterfalse_next, variables: !1464)
!1462 = !DISubroutineType(types: !1463)
!1463 = !{!4, !442}
!1464 = !{!1465, !1466, !1467, !1468, !1469, !1470, !1476, !1480, !1482}
!1465 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1461, file: !1, line: 3758, type: !442)
!1466 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "item", scope: !1461, file: !1, line: 3760, type: !4)
!1467 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !1461, file: !1, line: 3761, type: !4)
!1468 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ok", scope: !1461, file: !1, line: 3762, type: !16)
!1469 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iternext", scope: !1461, file: !1, line: 3763, type: !115)
!1470 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "good", scope: !1471, file: !1, line: 3774, type: !4)
!1471 = distinct !DILexicalBlock(scope: !1472, file: !1, line: 3773, column: 16)
!1472 = distinct !DILexicalBlock(scope: !1473, file: !1, line: 3771, column: 13)
!1473 = distinct !DILexicalBlock(scope: !1474, file: !1, line: 3766, column: 14)
!1474 = distinct !DILexicalBlock(scope: !1475, file: !1, line: 3766, column: 5)
!1475 = distinct !DILexicalBlock(scope: !1461, file: !1, line: 3766, column: 5)
!1476 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1477, file: !1, line: 3778, type: !4)
!1477 = distinct !DILexicalBlock(scope: !1478, file: !1, line: 3778, column: 17)
!1478 = distinct !DILexicalBlock(scope: !1479, file: !1, line: 3777, column: 31)
!1479 = distinct !DILexicalBlock(scope: !1471, file: !1, line: 3777, column: 17)
!1480 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1481, file: !1, line: 3782, type: !4)
!1481 = distinct !DILexicalBlock(scope: !1471, file: !1, line: 3782, column: 13)
!1482 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1483, file: !1, line: 3786, type: !4)
!1483 = distinct !DILexicalBlock(scope: !1473, file: !1, line: 3786, column: 9)
!1484 = !DISubprogram(name: "filterfalse_reduce", scope: !1, file: !1, line: 3793, type: !1462, isLocal: true, isDefinition: true, scopeLine: 3794, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.filterfalseobject*)* @filterfalse_reduce, variables: !1485)
!1485 = !{!1486}
!1486 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1484, file: !1, line: 3793, type: !442)
!1487 = !DISubprogram(name: "filterfalse_new", scope: !1, file: !1, line: 3709, type: !621, isLocal: true, isDefinition: true, scopeLine: 3710, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @filterfalse_new, variables: !1488)
!1488 = !{!1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496}
!1489 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1487, file: !1, line: 3709, type: !550)
!1490 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1487, file: !1, line: 3709, type: !4)
!1491 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1487, file: !1, line: 3709, type: !4)
!1492 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "func", scope: !1487, file: !1, line: 3711, type: !4)
!1493 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seq", scope: !1487, file: !1, line: 3711, type: !4)
!1494 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !1487, file: !1, line: 3712, type: !4)
!1495 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lz", scope: !1487, file: !1, line: 3713, type: !442)
!1496 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1497, file: !1, line: 3730, type: !4)
!1497 = distinct !DILexicalBlock(scope: !1498, file: !1, line: 3730, column: 9)
!1498 = distinct !DILexicalBlock(scope: !1499, file: !1, line: 3729, column: 21)
!1499 = distinct !DILexicalBlock(scope: !1487, file: !1, line: 3729, column: 9)
!1500 = !DISubprogram(name: "count_dealloc", scope: !1, file: !1, line: 3961, type: !1501, isLocal: true, isDefinition: true, scopeLine: 3962, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.countobject*)* @count_dealloc, variables: !1503)
!1501 = !DISubroutineType(types: !1502)
!1502 = !{null, !449}
!1503 = !{!1504, !1505, !1507, !1510, !1512}
!1504 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1500, file: !1, line: 3961, type: !449)
!1505 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1506, file: !1, line: 3964, type: !4)
!1506 = distinct !DILexicalBlock(scope: !1500, file: !1, line: 3964, column: 5)
!1507 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1508, file: !1, line: 3964, type: !4)
!1508 = distinct !DILexicalBlock(scope: !1509, file: !1, line: 3964, column: 5)
!1509 = distinct !DILexicalBlock(scope: !1506, file: !1, line: 3964, column: 5)
!1510 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1511, file: !1, line: 3965, type: !4)
!1511 = distinct !DILexicalBlock(scope: !1500, file: !1, line: 3965, column: 5)
!1512 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1513, file: !1, line: 3965, type: !4)
!1513 = distinct !DILexicalBlock(scope: !1514, file: !1, line: 3965, column: 5)
!1514 = distinct !DILexicalBlock(scope: !1511, file: !1, line: 3965, column: 5)
!1515 = !DISubprogram(name: "count_repr", scope: !1, file: !1, line: 4008, type: !1516, isLocal: true, isDefinition: true, scopeLine: 4009, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.countobject*)* @count_repr, variables: !1518)
!1516 = !DISubroutineType(types: !1517)
!1517 = !{!4, !449}
!1518 = !{!1519, !1520}
!1519 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1515, file: !1, line: 4008, type: !449)
!1520 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "step", scope: !1521, file: !1, line: 4014, type: !16)
!1521 = distinct !DILexicalBlock(scope: !1522, file: !1, line: 4013, column: 38)
!1522 = distinct !DILexicalBlock(scope: !1515, file: !1, line: 4013, column: 9)
!1523 = !DISubprogram(name: "count_traverse", scope: !1, file: !1, line: 3970, type: !1524, isLocal: true, isDefinition: true, scopeLine: 3971, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.countobject*, i32 (%struct._object*, i8*)*, i8*)* @count_traverse, variables: !1526)
!1524 = !DISubroutineType(types: !1525)
!1525 = !{!43, !449, !263, !89}
!1526 = !{!1527, !1528, !1529, !1530, !1534}
!1527 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1523, file: !1, line: 3970, type: !449)
!1528 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1523, file: !1, line: 3970, type: !263)
!1529 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1523, file: !1, line: 3970, type: !89)
!1530 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1531, file: !1, line: 3972, type: !43)
!1531 = distinct !DILexicalBlock(scope: !1532, file: !1, line: 3972, column: 5)
!1532 = distinct !DILexicalBlock(scope: !1533, file: !1, line: 3972, column: 5)
!1533 = distinct !DILexicalBlock(scope: !1523, file: !1, line: 3972, column: 5)
!1534 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1535, file: !1, line: 3973, type: !43)
!1535 = distinct !DILexicalBlock(scope: !1536, file: !1, line: 3973, column: 5)
!1536 = distinct !DILexicalBlock(scope: !1537, file: !1, line: 3973, column: 5)
!1537 = distinct !DILexicalBlock(scope: !1523, file: !1, line: 3973, column: 5)
!1538 = !DISubprogram(name: "count_next", scope: !1, file: !1, line: 4000, type: !1516, isLocal: true, isDefinition: true, scopeLine: 4001, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.countobject*)* @count_next, variables: !1539)
!1539 = !{!1540}
!1540 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1538, file: !1, line: 4000, type: !449)
!1541 = !DISubprogram(name: "count_nextlong", scope: !1, file: !1, line: 3978, type: !1516, isLocal: true, isDefinition: true, scopeLine: 3979, flags: DIFlagPrototyped, isOptimized: true, variables: !1542)
!1542 = !{!1543, !1544, !1545}
!1543 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1541, file: !1, line: 3978, type: !449)
!1544 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "long_cnt", scope: !1541, file: !1, line: 3980, type: !4)
!1545 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stepped_up", scope: !1541, file: !1, line: 3981, type: !4)
!1546 = !DISubprogram(name: "count_reduce", scope: !1, file: !1, line: 4028, type: !1516, isLocal: true, isDefinition: true, scopeLine: 4029, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.countobject*)* @count_reduce, variables: !1547)
!1547 = !{!1548}
!1548 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1546, file: !1, line: 4028, type: !449)
!1549 = !DISubprogram(name: "count_new", scope: !1, file: !1, line: 3885, type: !621, isLocal: true, isDefinition: true, scopeLine: 3886, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @count_new, variables: !1550)
!1550 = !{!1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1566, !1569, !1573, !1577}
!1551 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1549, file: !1, line: 3885, type: !550)
!1552 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1549, file: !1, line: 3885, type: !4)
!1553 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1549, file: !1, line: 3885, type: !4)
!1554 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lz", scope: !1549, file: !1, line: 3887, type: !449)
!1555 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "slow_mode", scope: !1549, file: !1, line: 3888, type: !43)
!1556 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cnt", scope: !1549, file: !1, line: 3889, type: !10)
!1557 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "long_cnt", scope: !1549, file: !1, line: 3890, type: !4)
!1558 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "long_step", scope: !1549, file: !1, line: 3891, type: !4)
!1559 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "step", scope: !1549, file: !1, line: 3892, type: !16)
!1560 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1561, file: !1, line: 3921, type: !4)
!1561 = distinct !DILexicalBlock(scope: !1562, file: !1, line: 3921, column: 13)
!1562 = distinct !DILexicalBlock(scope: !1563, file: !1, line: 3920, column: 32)
!1563 = distinct !DILexicalBlock(scope: !1564, file: !1, line: 3920, column: 13)
!1564 = distinct !DILexicalBlock(scope: !1565, file: !1, line: 3918, column: 28)
!1565 = distinct !DILexicalBlock(scope: !1549, file: !1, line: 3918, column: 9)
!1566 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1567, file: !1, line: 3940, type: !4)
!1567 = distinct !DILexicalBlock(scope: !1568, file: !1, line: 3940, column: 9)
!1568 = distinct !DILexicalBlock(scope: !1549, file: !1, line: 3937, column: 9)
!1569 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1570, file: !1, line: 3940, type: !4)
!1570 = distinct !DILexicalBlock(scope: !1571, file: !1, line: 3940, column: 9)
!1571 = distinct !DILexicalBlock(scope: !1572, file: !1, line: 3940, column: 9)
!1572 = distinct !DILexicalBlock(scope: !1567, file: !1, line: 3940, column: 9)
!1573 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1574, file: !1, line: 3950, type: !4)
!1574 = distinct !DILexicalBlock(scope: !1575, file: !1, line: 3950, column: 9)
!1575 = distinct !DILexicalBlock(scope: !1576, file: !1, line: 3949, column: 21)
!1576 = distinct !DILexicalBlock(scope: !1549, file: !1, line: 3949, column: 9)
!1577 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1578, file: !1, line: 3950, type: !4)
!1578 = distinct !DILexicalBlock(scope: !1579, file: !1, line: 3950, column: 9)
!1579 = distinct !DILexicalBlock(scope: !1574, file: !1, line: 3950, column: 9)
!1580 = !DISubprogram(name: "zip_longest_dealloc", scope: !1, file: !1, line: 4328, type: !1581, isLocal: true, isDefinition: true, scopeLine: 4329, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.ziplongestobject*)* @zip_longest_dealloc, variables: !1583)
!1581 = !DISubroutineType(types: !1582)
!1582 = !{null, !457}
!1583 = !{!1584, !1585, !1587, !1590, !1592, !1595, !1597}
!1584 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1580, file: !1, line: 4328, type: !457)
!1585 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1586, file: !1, line: 4331, type: !4)
!1586 = distinct !DILexicalBlock(scope: !1580, file: !1, line: 4331, column: 5)
!1587 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1588, file: !1, line: 4331, type: !4)
!1588 = distinct !DILexicalBlock(scope: !1589, file: !1, line: 4331, column: 5)
!1589 = distinct !DILexicalBlock(scope: !1586, file: !1, line: 4331, column: 5)
!1590 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1591, file: !1, line: 4332, type: !4)
!1591 = distinct !DILexicalBlock(scope: !1580, file: !1, line: 4332, column: 5)
!1592 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1593, file: !1, line: 4332, type: !4)
!1593 = distinct !DILexicalBlock(scope: !1594, file: !1, line: 4332, column: 5)
!1594 = distinct !DILexicalBlock(scope: !1591, file: !1, line: 4332, column: 5)
!1595 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1596, file: !1, line: 4333, type: !4)
!1596 = distinct !DILexicalBlock(scope: !1580, file: !1, line: 4333, column: 5)
!1597 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1598, file: !1, line: 4333, type: !4)
!1598 = distinct !DILexicalBlock(scope: !1599, file: !1, line: 4333, column: 5)
!1599 = distinct !DILexicalBlock(scope: !1596, file: !1, line: 4333, column: 5)
!1600 = !DISubprogram(name: "zip_longest_traverse", scope: !1, file: !1, line: 4338, type: !1601, isLocal: true, isDefinition: true, scopeLine: 4339, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.ziplongestobject*, i32 (%struct._object*, i8*)*, i8*)* @zip_longest_traverse, variables: !1603)
!1601 = !DISubroutineType(types: !1602)
!1602 = !{!43, !457, !263, !89}
!1603 = !{!1604, !1605, !1606, !1607, !1611, !1615}
!1604 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1600, file: !1, line: 4338, type: !457)
!1605 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1600, file: !1, line: 4338, type: !263)
!1606 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1600, file: !1, line: 4338, type: !89)
!1607 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1608, file: !1, line: 4340, type: !43)
!1608 = distinct !DILexicalBlock(scope: !1609, file: !1, line: 4340, column: 5)
!1609 = distinct !DILexicalBlock(scope: !1610, file: !1, line: 4340, column: 5)
!1610 = distinct !DILexicalBlock(scope: !1600, file: !1, line: 4340, column: 5)
!1611 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1612, file: !1, line: 4341, type: !43)
!1612 = distinct !DILexicalBlock(scope: !1613, file: !1, line: 4341, column: 5)
!1613 = distinct !DILexicalBlock(scope: !1614, file: !1, line: 4341, column: 5)
!1614 = distinct !DILexicalBlock(scope: !1600, file: !1, line: 4341, column: 5)
!1615 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1616, file: !1, line: 4342, type: !43)
!1616 = distinct !DILexicalBlock(scope: !1617, file: !1, line: 4342, column: 5)
!1617 = distinct !DILexicalBlock(scope: !1618, file: !1, line: 4342, column: 5)
!1618 = distinct !DILexicalBlock(scope: !1600, file: !1, line: 4342, column: 5)
!1619 = !DISubprogram(name: "zip_longest_next", scope: !1, file: !1, line: 4347, type: !1620, isLocal: true, isDefinition: true, scopeLine: 4348, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.ziplongestobject*)* @zip_longest_next, variables: !1622)
!1620 = !DISubroutineType(types: !1621)
!1621 = !{!4, !457}
!1622 = !{!1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1643, !1646, !1648, !1660}
!1623 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1619, file: !1, line: 4347, type: !457)
!1624 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1619, file: !1, line: 4349, type: !10)
!1625 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tuplesize", scope: !1619, file: !1, line: 4350, type: !10)
!1626 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1619, file: !1, line: 4351, type: !4)
!1627 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !1619, file: !1, line: 4352, type: !4)
!1628 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "item", scope: !1619, file: !1, line: 4353, type: !4)
!1629 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "olditem", scope: !1619, file: !1, line: 4354, type: !4)
!1630 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1631, file: !1, line: 4373, type: !4)
!1631 = distinct !DILexicalBlock(scope: !1632, file: !1, line: 4373, column: 25)
!1632 = distinct !DILexicalBlock(scope: !1633, file: !1, line: 4371, column: 65)
!1633 = distinct !DILexicalBlock(scope: !1634, file: !1, line: 4371, column: 25)
!1634 = distinct !DILexicalBlock(scope: !1635, file: !1, line: 4369, column: 35)
!1635 = distinct !DILexicalBlock(scope: !1636, file: !1, line: 4369, column: 21)
!1636 = distinct !DILexicalBlock(scope: !1637, file: !1, line: 4367, column: 20)
!1637 = distinct !DILexicalBlock(scope: !1638, file: !1, line: 4364, column: 17)
!1638 = distinct !DILexicalBlock(scope: !1639, file: !1, line: 4362, column: 41)
!1639 = distinct !DILexicalBlock(scope: !1640, file: !1, line: 4362, column: 9)
!1640 = distinct !DILexicalBlock(scope: !1641, file: !1, line: 4362, column: 9)
!1641 = distinct !DILexicalBlock(scope: !1642, file: !1, line: 4360, column: 33)
!1642 = distinct !DILexicalBlock(scope: !1619, file: !1, line: 4360, column: 9)
!1643 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1644, file: !1, line: 4379, type: !4)
!1644 = distinct !DILexicalBlock(scope: !1645, file: !1, line: 4379, column: 25)
!1645 = distinct !DILexicalBlock(scope: !1633, file: !1, line: 4375, column: 28)
!1646 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1647, file: !1, line: 4385, type: !4)
!1647 = distinct !DILexicalBlock(scope: !1638, file: !1, line: 4385, column: 13)
!1648 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1649, file: !1, line: 4402, type: !4)
!1649 = distinct !DILexicalBlock(scope: !1650, file: !1, line: 4402, column: 25)
!1650 = distinct !DILexicalBlock(scope: !1651, file: !1, line: 4400, column: 65)
!1651 = distinct !DILexicalBlock(scope: !1652, file: !1, line: 4400, column: 25)
!1652 = distinct !DILexicalBlock(scope: !1653, file: !1, line: 4398, column: 35)
!1653 = distinct !DILexicalBlock(scope: !1654, file: !1, line: 4398, column: 21)
!1654 = distinct !DILexicalBlock(scope: !1655, file: !1, line: 4396, column: 20)
!1655 = distinct !DILexicalBlock(scope: !1656, file: !1, line: 4393, column: 17)
!1656 = distinct !DILexicalBlock(scope: !1657, file: !1, line: 4391, column: 41)
!1657 = distinct !DILexicalBlock(scope: !1658, file: !1, line: 4391, column: 9)
!1658 = distinct !DILexicalBlock(scope: !1659, file: !1, line: 4391, column: 9)
!1659 = distinct !DILexicalBlock(scope: !1642, file: !1, line: 4387, column: 12)
!1660 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1661, file: !1, line: 4408, type: !4)
!1661 = distinct !DILexicalBlock(scope: !1662, file: !1, line: 4408, column: 25)
!1662 = distinct !DILexicalBlock(scope: !1651, file: !1, line: 4404, column: 28)
!1663 = !DISubprogram(name: "zip_longest_reduce", scope: !1, file: !1, line: 4419, type: !1620, isLocal: true, isDefinition: true, scopeLine: 4420, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.ziplongestobject*)* @zip_longest_reduce, variables: !1664)
!1664 = !{!1665, !1666, !1667, !1668, !1672}
!1665 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1663, file: !1, line: 4419, type: !457)
!1666 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1663, file: !1, line: 4425, type: !43)
!1667 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "args", scope: !1663, file: !1, line: 4426, type: !4)
!1668 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "elem", scope: !1669, file: !1, line: 4430, type: !4)
!1669 = distinct !DILexicalBlock(scope: !1670, file: !1, line: 4429, column: 53)
!1670 = distinct !DILexicalBlock(scope: !1671, file: !1, line: 4429, column: 5)
!1671 = distinct !DILexicalBlock(scope: !1663, file: !1, line: 4429, column: 5)
!1672 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1673, file: !1, line: 4434, type: !4)
!1673 = distinct !DILexicalBlock(scope: !1674, file: !1, line: 4434, column: 17)
!1674 = distinct !DILexicalBlock(scope: !1675, file: !1, line: 4433, column: 31)
!1675 = distinct !DILexicalBlock(scope: !1676, file: !1, line: 4433, column: 17)
!1676 = distinct !DILexicalBlock(scope: !1677, file: !1, line: 4431, column: 27)
!1677 = distinct !DILexicalBlock(scope: !1669, file: !1, line: 4431, column: 13)
!1678 = !DISubprogram(name: "zip_longest_setstate", scope: !1, file: !1, line: 4445, type: !1679, isLocal: true, isDefinition: true, scopeLine: 4446, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.ziplongestobject*, %struct._object*)* @zip_longest_setstate, variables: !1681)
!1679 = !DISubroutineType(types: !1680)
!1680 = !{!4, !457, !4}
!1681 = !{!1682, !1683, !1684, !1686}
!1682 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1678, file: !1, line: 4445, type: !457)
!1683 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 2, scope: !1678, file: !1, line: 4445, type: !4)
!1684 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1685, file: !1, line: 4447, type: !4)
!1685 = distinct !DILexicalBlock(scope: !1678, file: !1, line: 4447, column: 5)
!1686 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1687, file: !1, line: 4447, type: !4)
!1687 = distinct !DILexicalBlock(scope: !1688, file: !1, line: 4447, column: 5)
!1688 = distinct !DILexicalBlock(scope: !1689, file: !1, line: 4447, column: 5)
!1689 = distinct !DILexicalBlock(scope: !1685, file: !1, line: 4447, column: 5)
!1690 = !DISubprogram(name: "zip_longest_new", scope: !1, file: !1, line: 4261, type: !621, isLocal: true, isDefinition: true, scopeLine: 4262, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @zip_longest_new, variables: !1691)
!1691 = !{!1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1705, !1706, !1710, !1714, !1718}
!1692 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1690, file: !1, line: 4261, type: !550)
!1693 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1690, file: !1, line: 4261, type: !4)
!1694 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1690, file: !1, line: 4261, type: !4)
!1695 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lz", scope: !1690, file: !1, line: 4263, type: !457)
!1696 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1690, file: !1, line: 4264, type: !10)
!1697 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ittuple", scope: !1690, file: !1, line: 4265, type: !4)
!1698 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1690, file: !1, line: 4266, type: !4)
!1699 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fillvalue", scope: !1690, file: !1, line: 4267, type: !4)
!1700 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tuplesize", scope: !1690, file: !1, line: 4268, type: !10)
!1701 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "item", scope: !1702, file: !1, line: 4287, type: !4)
!1702 = distinct !DILexicalBlock(scope: !1703, file: !1, line: 4286, column: 35)
!1703 = distinct !DILexicalBlock(scope: !1704, file: !1, line: 4286, column: 5)
!1704 = distinct !DILexicalBlock(scope: !1690, file: !1, line: 4286, column: 5)
!1705 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !1702, file: !1, line: 4288, type: !4)
!1706 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1707, file: !1, line: 4294, type: !4)
!1707 = distinct !DILexicalBlock(scope: !1708, file: !1, line: 4294, column: 13)
!1708 = distinct !DILexicalBlock(scope: !1709, file: !1, line: 4289, column: 25)
!1709 = distinct !DILexicalBlock(scope: !1702, file: !1, line: 4289, column: 13)
!1710 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1711, file: !1, line: 4303, type: !4)
!1711 = distinct !DILexicalBlock(scope: !1712, file: !1, line: 4303, column: 9)
!1712 = distinct !DILexicalBlock(scope: !1713, file: !1, line: 4302, column: 25)
!1713 = distinct !DILexicalBlock(scope: !1690, file: !1, line: 4302, column: 9)
!1714 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1715, file: !1, line: 4314, type: !4)
!1715 = distinct !DILexicalBlock(scope: !1716, file: !1, line: 4314, column: 9)
!1716 = distinct !DILexicalBlock(scope: !1717, file: !1, line: 4313, column: 21)
!1717 = distinct !DILexicalBlock(scope: !1690, file: !1, line: 4313, column: 9)
!1718 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1719, file: !1, line: 4315, type: !4)
!1719 = distinct !DILexicalBlock(scope: !1716, file: !1, line: 4315, column: 9)
!1720 = !DISubprogram(name: "permutations_dealloc", scope: !1, file: !1, line: 3080, type: !1721, isLocal: true, isDefinition: true, scopeLine: 3081, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.permutationsobject*)* @permutations_dealloc, variables: !1723)
!1721 = !DISubroutineType(types: !1722)
!1722 = !{null, !467}
!1723 = !{!1724, !1725, !1727, !1730, !1732}
!1724 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "po", arg: 1, scope: !1720, file: !1, line: 3080, type: !467)
!1725 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1726, file: !1, line: 3083, type: !4)
!1726 = distinct !DILexicalBlock(scope: !1720, file: !1, line: 3083, column: 5)
!1727 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1728, file: !1, line: 3083, type: !4)
!1728 = distinct !DILexicalBlock(scope: !1729, file: !1, line: 3083, column: 5)
!1729 = distinct !DILexicalBlock(scope: !1726, file: !1, line: 3083, column: 5)
!1730 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1731, file: !1, line: 3084, type: !4)
!1731 = distinct !DILexicalBlock(scope: !1720, file: !1, line: 3084, column: 5)
!1732 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1733, file: !1, line: 3084, type: !4)
!1733 = distinct !DILexicalBlock(scope: !1734, file: !1, line: 3084, column: 5)
!1734 = distinct !DILexicalBlock(scope: !1731, file: !1, line: 3084, column: 5)
!1735 = !DISubprogram(name: "permutations_traverse", scope: !1, file: !1, line: 3102, type: !1736, isLocal: true, isDefinition: true, scopeLine: 3103, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.permutationsobject*, i32 (%struct._object*, i8*)*, i8*)* @permutations_traverse, variables: !1738)
!1736 = !DISubroutineType(types: !1737)
!1737 = !{!43, !467, !263, !89}
!1738 = !{!1739, !1740, !1741, !1742, !1746}
!1739 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "po", arg: 1, scope: !1735, file: !1, line: 3102, type: !467)
!1740 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1735, file: !1, line: 3102, type: !263)
!1741 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1735, file: !1, line: 3102, type: !89)
!1742 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1743, file: !1, line: 3104, type: !43)
!1743 = distinct !DILexicalBlock(scope: !1744, file: !1, line: 3104, column: 5)
!1744 = distinct !DILexicalBlock(scope: !1745, file: !1, line: 3104, column: 5)
!1745 = distinct !DILexicalBlock(scope: !1735, file: !1, line: 3104, column: 5)
!1746 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1747, file: !1, line: 3105, type: !43)
!1747 = distinct !DILexicalBlock(scope: !1748, file: !1, line: 3105, column: 5)
!1748 = distinct !DILexicalBlock(scope: !1749, file: !1, line: 3105, column: 5)
!1749 = distinct !DILexicalBlock(scope: !1735, file: !1, line: 3105, column: 5)
!1750 = !DISubprogram(name: "permutations_next", scope: !1, file: !1, line: 3110, type: !1751, isLocal: true, isDefinition: true, scopeLine: 3111, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.permutationsobject*)* @permutations_next, variables: !1753)
!1751 = !DISubroutineType(types: !1752)
!1752 = !{!4, !467}
!1753 = !{!1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1772, !1774}
!1754 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "po", arg: 1, scope: !1750, file: !1, line: 3110, type: !467)
!1755 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "elem", scope: !1750, file: !1, line: 3112, type: !4)
!1756 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldelem", scope: !1750, file: !1, line: 3113, type: !4)
!1757 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pool", scope: !1750, file: !1, line: 3114, type: !4)
!1758 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "indices", scope: !1750, file: !1, line: 3115, type: !247)
!1759 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cycles", scope: !1750, file: !1, line: 3116, type: !247)
!1760 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1750, file: !1, line: 3117, type: !4)
!1761 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1750, file: !1, line: 3118, type: !10)
!1762 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !1750, file: !1, line: 3119, type: !10)
!1763 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1750, file: !1, line: 3120, type: !10)
!1764 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !1750, file: !1, line: 3120, type: !10)
!1765 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !1750, file: !1, line: 3120, type: !10)
!1766 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !1750, file: !1, line: 3120, type: !10)
!1767 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "old_result", scope: !1768, file: !1, line: 3143, type: !4)
!1768 = distinct !DILexicalBlock(scope: !1769, file: !1, line: 3142, column: 36)
!1769 = distinct !DILexicalBlock(scope: !1770, file: !1, line: 3142, column: 13)
!1770 = distinct !DILexicalBlock(scope: !1771, file: !1, line: 3137, column: 12)
!1771 = distinct !DILexicalBlock(scope: !1750, file: !1, line: 3125, column: 9)
!1772 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1773, file: !1, line: 3153, type: !4)
!1773 = distinct !DILexicalBlock(scope: !1768, file: !1, line: 3153, column: 13)
!1774 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1775, file: !1, line: 3182, type: !4)
!1775 = distinct !DILexicalBlock(scope: !1776, file: !1, line: 3182, column: 21)
!1776 = distinct !DILexicalBlock(scope: !1777, file: !1, line: 3174, column: 38)
!1777 = distinct !DILexicalBlock(scope: !1778, file: !1, line: 3174, column: 17)
!1778 = distinct !DILexicalBlock(scope: !1779, file: !1, line: 3174, column: 17)
!1779 = distinct !DILexicalBlock(scope: !1780, file: !1, line: 3168, column: 20)
!1780 = distinct !DILexicalBlock(scope: !1781, file: !1, line: 3161, column: 17)
!1781 = distinct !DILexicalBlock(scope: !1782, file: !1, line: 3159, column: 34)
!1782 = distinct !DILexicalBlock(scope: !1783, file: !1, line: 3159, column: 9)
!1783 = distinct !DILexicalBlock(scope: !1770, file: !1, line: 3159, column: 9)
!1784 = !DISubprogram(name: "permutations_reduce", scope: !1, file: !1, line: 3201, type: !1751, isLocal: true, isDefinition: true, scopeLine: 3202, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.permutationsobject*)* @permutations_reduce, variables: !1785)
!1785 = !{!1786, !1787, !1791, !1792, !1793, !1794, !1798, !1802, !1804, !1807, !1809}
!1786 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "po", arg: 1, scope: !1784, file: !1, line: 3201, type: !467)
!1787 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "indices", scope: !1788, file: !1, line: 3208, type: !4)
!1788 = distinct !DILexicalBlock(scope: !1789, file: !1, line: 3207, column: 12)
!1789 = distinct !DILexicalBlock(scope: !1790, file: !1, line: 3205, column: 16)
!1790 = distinct !DILexicalBlock(scope: !1784, file: !1, line: 3203, column: 9)
!1791 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cycles", scope: !1788, file: !1, line: 3208, type: !4)
!1792 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1788, file: !1, line: 3209, type: !10)
!1793 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1788, file: !1, line: 3209, type: !10)
!1794 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !1795, file: !1, line: 3217, type: !4)
!1795 = distinct !DILexicalBlock(scope: !1796, file: !1, line: 3216, column: 28)
!1796 = distinct !DILexicalBlock(scope: !1797, file: !1, line: 3216, column: 9)
!1797 = distinct !DILexicalBlock(scope: !1788, file: !1, line: 3216, column: 9)
!1798 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !1799, file: !1, line: 3228, type: !4)
!1799 = distinct !DILexicalBlock(scope: !1800, file: !1, line: 3227, column: 9)
!1800 = distinct !DILexicalBlock(scope: !1801, file: !1, line: 3226, column: 9)
!1801 = distinct !DILexicalBlock(scope: !1788, file: !1, line: 3226, column: 9)
!1802 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1803, file: !1, line: 3237, type: !4)
!1803 = distinct !DILexicalBlock(scope: !1788, file: !1, line: 3237, column: 9)
!1804 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1805, file: !1, line: 3237, type: !4)
!1805 = distinct !DILexicalBlock(scope: !1806, file: !1, line: 3237, column: 9)
!1806 = distinct !DILexicalBlock(scope: !1803, file: !1, line: 3237, column: 9)
!1807 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1808, file: !1, line: 3238, type: !4)
!1808 = distinct !DILexicalBlock(scope: !1788, file: !1, line: 3238, column: 9)
!1809 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1810, file: !1, line: 3238, type: !4)
!1810 = distinct !DILexicalBlock(scope: !1811, file: !1, line: 3238, column: 9)
!1811 = distinct !DILexicalBlock(scope: !1808, file: !1, line: 3238, column: 9)
!1812 = !DISubprogram(name: "permutations_setstate", scope: !1, file: !1, line: 3244, type: !1813, isLocal: true, isDefinition: true, scopeLine: 3245, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.permutationsobject*, %struct._object*)* @permutations_setstate, variables: !1815)
!1813 = !DISubroutineType(types: !1814)
!1814 = !{!4, !467, !4}
!1815 = !{!1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1827, !1828, !1832, !1833, !1837, !1839}
!1816 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "po", arg: 1, scope: !1812, file: !1, line: 3244, type: !467)
!1817 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 2, scope: !1812, file: !1, line: 3244, type: !4)
!1818 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "indices", scope: !1812, file: !1, line: 3246, type: !4)
!1819 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cycles", scope: !1812, file: !1, line: 3246, type: !4)
!1820 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1812, file: !1, line: 3246, type: !4)
!1821 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1812, file: !1, line: 3247, type: !10)
!1822 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1812, file: !1, line: 3247, type: !10)
!1823 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "indexObject", scope: !1824, file: !1, line: 3264, type: !4)
!1824 = distinct !DILexicalBlock(scope: !1825, file: !1, line: 3263, column: 5)
!1825 = distinct !DILexicalBlock(scope: !1826, file: !1, line: 3262, column: 5)
!1826 = distinct !DILexicalBlock(scope: !1812, file: !1, line: 3262, column: 5)
!1827 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !1824, file: !1, line: 3265, type: !10)
!1828 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "indexObject", scope: !1829, file: !1, line: 3278, type: !4)
!1829 = distinct !DILexicalBlock(scope: !1830, file: !1, line: 3277, column: 5)
!1830 = distinct !DILexicalBlock(scope: !1831, file: !1, line: 3276, column: 5)
!1831 = distinct !DILexicalBlock(scope: !1812, file: !1, line: 3276, column: 5)
!1832 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !1829, file: !1, line: 3279, type: !10)
!1833 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "element", scope: !1834, file: !1, line: 3292, type: !4)
!1834 = distinct !DILexicalBlock(scope: !1835, file: !1, line: 3291, column: 29)
!1835 = distinct !DILexicalBlock(scope: !1836, file: !1, line: 3291, column: 5)
!1836 = distinct !DILexicalBlock(scope: !1812, file: !1, line: 3291, column: 5)
!1837 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1838, file: !1, line: 3296, type: !4)
!1838 = distinct !DILexicalBlock(scope: !1812, file: !1, line: 3296, column: 5)
!1839 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1840, file: !1, line: 3296, type: !4)
!1840 = distinct !DILexicalBlock(scope: !1841, file: !1, line: 3296, column: 5)
!1841 = distinct !DILexicalBlock(scope: !1842, file: !1, line: 3296, column: 5)
!1842 = distinct !DILexicalBlock(scope: !1838, file: !1, line: 3296, column: 5)
!1843 = !DISubprogram(name: "permutations_sizeof", scope: !1, file: !1, line: 3091, type: !1844, isLocal: true, isDefinition: true, scopeLine: 3092, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.permutationsobject*, i8*)* @permutations_sizeof, variables: !1846)
!1844 = !DISubroutineType(types: !1845)
!1845 = !{!4, !467, !89}
!1846 = !{!1847, !1848, !1849}
!1847 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "po", arg: 1, scope: !1843, file: !1, line: 3091, type: !467)
!1848 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unused", arg: 2, scope: !1843, file: !1, line: 3091, type: !89)
!1849 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1843, file: !1, line: 3093, type: !10)
!1850 = !DISubprogram(name: "permutations_new", scope: !1, file: !1, line: 3007, type: !621, isLocal: true, isDefinition: true, scopeLine: 3008, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @permutations_new, variables: !1851)
!1851 = !{!1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1866}
!1852 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1850, file: !1, line: 3007, type: !550)
!1853 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1850, file: !1, line: 3007, type: !4)
!1854 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1850, file: !1, line: 3007, type: !4)
!1855 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "po", scope: !1850, file: !1, line: 3009, type: !467)
!1856 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1850, file: !1, line: 3010, type: !10)
!1857 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !1850, file: !1, line: 3011, type: !10)
!1858 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "robj", scope: !1850, file: !1, line: 3012, type: !4)
!1859 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pool", scope: !1850, file: !1, line: 3013, type: !4)
!1860 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iterable", scope: !1850, file: !1, line: 3014, type: !4)
!1861 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "indices", scope: !1850, file: !1, line: 3015, type: !247)
!1862 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cycles", scope: !1850, file: !1, line: 3016, type: !247)
!1863 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1850, file: !1, line: 3017, type: !10)
!1864 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1865, file: !1, line: 3075, type: !4)
!1865 = distinct !DILexicalBlock(scope: !1850, file: !1, line: 3075, column: 5)
!1866 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1867, file: !1, line: 3075, type: !4)
!1867 = distinct !DILexicalBlock(scope: !1868, file: !1, line: 3075, column: 5)
!1868 = distinct !DILexicalBlock(scope: !1865, file: !1, line: 3075, column: 5)
!1869 = !DISubprogram(name: "product_dealloc", scope: !1, file: !1, line: 2069, type: !1870, isLocal: true, isDefinition: true, scopeLine: 2070, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.productobject*)* @product_dealloc, variables: !1872)
!1870 = !DISubroutineType(types: !1871)
!1871 = !{null, !478}
!1872 = !{!1873, !1874, !1876, !1879, !1881}
!1873 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1869, file: !1, line: 2069, type: !478)
!1874 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1875, file: !1, line: 2072, type: !4)
!1875 = distinct !DILexicalBlock(scope: !1869, file: !1, line: 2072, column: 5)
!1876 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1877, file: !1, line: 2072, type: !4)
!1877 = distinct !DILexicalBlock(scope: !1878, file: !1, line: 2072, column: 5)
!1878 = distinct !DILexicalBlock(scope: !1875, file: !1, line: 2072, column: 5)
!1879 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1880, file: !1, line: 2073, type: !4)
!1880 = distinct !DILexicalBlock(scope: !1869, file: !1, line: 2073, column: 5)
!1881 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1882, file: !1, line: 2073, type: !4)
!1882 = distinct !DILexicalBlock(scope: !1883, file: !1, line: 2073, column: 5)
!1883 = distinct !DILexicalBlock(scope: !1880, file: !1, line: 2073, column: 5)
!1884 = !DISubprogram(name: "product_traverse", scope: !1, file: !1, line: 2092, type: !1885, isLocal: true, isDefinition: true, scopeLine: 2093, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.productobject*, i32 (%struct._object*, i8*)*, i8*)* @product_traverse, variables: !1887)
!1885 = !DISubroutineType(types: !1886)
!1886 = !{!43, !478, !263, !89}
!1887 = !{!1888, !1889, !1890, !1891, !1895}
!1888 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1884, file: !1, line: 2092, type: !478)
!1889 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1884, file: !1, line: 2092, type: !263)
!1890 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1884, file: !1, line: 2092, type: !89)
!1891 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1892, file: !1, line: 2094, type: !43)
!1892 = distinct !DILexicalBlock(scope: !1893, file: !1, line: 2094, column: 5)
!1893 = distinct !DILexicalBlock(scope: !1894, file: !1, line: 2094, column: 5)
!1894 = distinct !DILexicalBlock(scope: !1884, file: !1, line: 2094, column: 5)
!1895 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1896, file: !1, line: 2095, type: !43)
!1896 = distinct !DILexicalBlock(scope: !1897, file: !1, line: 2095, column: 5)
!1897 = distinct !DILexicalBlock(scope: !1898, file: !1, line: 2095, column: 5)
!1898 = distinct !DILexicalBlock(scope: !1884, file: !1, line: 2095, column: 5)
!1899 = !DISubprogram(name: "product_next", scope: !1, file: !1, line: 2100, type: !1900, isLocal: true, isDefinition: true, scopeLine: 2101, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.productobject*)* @product_next, variables: !1902)
!1900 = !DISubroutineType(types: !1901)
!1901 = !{!4, !478}
!1902 = !{!1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1914, !1917, !1919, !1926}
!1903 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1899, file: !1, line: 2100, type: !478)
!1904 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pool", scope: !1899, file: !1, line: 2102, type: !4)
!1905 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "elem", scope: !1899, file: !1, line: 2103, type: !4)
!1906 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldelem", scope: !1899, file: !1, line: 2104, type: !4)
!1907 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pools", scope: !1899, file: !1, line: 2105, type: !4)
!1908 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1899, file: !1, line: 2106, type: !4)
!1909 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "npools", scope: !1899, file: !1, line: 2107, type: !10)
!1910 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1899, file: !1, line: 2108, type: !10)
!1911 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "indices", scope: !1912, file: !1, line: 2129, type: !247)
!1912 = distinct !DILexicalBlock(scope: !1913, file: !1, line: 2128, column: 12)
!1913 = distinct !DILexicalBlock(scope: !1899, file: !1, line: 2113, column: 9)
!1914 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "old_result", scope: !1915, file: !1, line: 2133, type: !4)
!1915 = distinct !DILexicalBlock(scope: !1916, file: !1, line: 2132, column: 36)
!1916 = distinct !DILexicalBlock(scope: !1912, file: !1, line: 2132, column: 13)
!1917 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1918, file: !1, line: 2143, type: !4)
!1918 = distinct !DILexicalBlock(scope: !1915, file: !1, line: 2143, column: 13)
!1919 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1920, file: !1, line: 2160, type: !4)
!1920 = distinct !DILexicalBlock(scope: !1921, file: !1, line: 2160, column: 17)
!1921 = distinct !DILexicalBlock(scope: !1922, file: !1, line: 2153, column: 55)
!1922 = distinct !DILexicalBlock(scope: !1923, file: !1, line: 2153, column: 17)
!1923 = distinct !DILexicalBlock(scope: !1924, file: !1, line: 2150, column: 41)
!1924 = distinct !DILexicalBlock(scope: !1925, file: !1, line: 2150, column: 9)
!1925 = distinct !DILexicalBlock(scope: !1912, file: !1, line: 2150, column: 9)
!1926 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1927, file: !1, line: 2167, type: !4)
!1927 = distinct !DILexicalBlock(scope: !1928, file: !1, line: 2167, column: 17)
!1928 = distinct !DILexicalBlock(scope: !1922, file: !1, line: 2161, column: 20)
!1929 = !DISubprogram(name: "product_reduce", scope: !1, file: !1, line: 2187, type: !1900, isLocal: true, isDefinition: true, scopeLine: 2188, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.productobject*)* @product_reduce, variables: !1930)
!1930 = !{!1931, !1932, !1936, !1937, !1938, !1942}
!1931 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1929, file: !1, line: 2187, type: !478)
!1932 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "indices", scope: !1933, file: !1, line: 2194, type: !4)
!1933 = distinct !DILexicalBlock(scope: !1934, file: !1, line: 2193, column: 12)
!1934 = distinct !DILexicalBlock(scope: !1935, file: !1, line: 2191, column: 16)
!1935 = distinct !DILexicalBlock(scope: !1929, file: !1, line: 2189, column: 9)
!1936 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1933, file: !1, line: 2195, type: !10)
!1937 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1933, file: !1, line: 2195, type: !10)
!1938 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !1939, file: !1, line: 2205, type: !4)
!1939 = distinct !DILexicalBlock(scope: !1940, file: !1, line: 2204, column: 28)
!1940 = distinct !DILexicalBlock(scope: !1941, file: !1, line: 2204, column: 9)
!1941 = distinct !DILexicalBlock(scope: !1933, file: !1, line: 2204, column: 9)
!1942 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1943, file: !1, line: 2207, type: !4)
!1943 = distinct !DILexicalBlock(scope: !1944, file: !1, line: 2207, column: 17)
!1944 = distinct !DILexicalBlock(scope: !1945, file: !1, line: 2206, column: 25)
!1945 = distinct !DILexicalBlock(scope: !1939, file: !1, line: 2206, column: 17)
!1946 = !DISubprogram(name: "product_setstate", scope: !1, file: !1, line: 2217, type: !1947, isLocal: true, isDefinition: true, scopeLine: 2218, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.productobject*, %struct._object*)* @product_setstate, variables: !1949)
!1947 = !DISubroutineType(types: !1948)
!1948 = !{!4, !478, !4}
!1949 = !{!1950, !1951, !1952, !1953, !1954, !1955, !1959, !1960, !1964, !1965, !1967}
!1950 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1946, file: !1, line: 2217, type: !478)
!1951 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 2, scope: !1946, file: !1, line: 2217, type: !4)
!1952 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1946, file: !1, line: 2219, type: !4)
!1953 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1946, file: !1, line: 2220, type: !10)
!1954 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1946, file: !1, line: 2220, type: !10)
!1955 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "indexObject", scope: !1956, file: !1, line: 2229, type: !4)
!1956 = distinct !DILexicalBlock(scope: !1957, file: !1, line: 2228, column: 5)
!1957 = distinct !DILexicalBlock(scope: !1958, file: !1, line: 2227, column: 5)
!1958 = distinct !DILexicalBlock(scope: !1946, file: !1, line: 2227, column: 5)
!1959 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !1956, file: !1, line: 2230, type: !10)
!1960 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pool", scope: !1961, file: !1, line: 2245, type: !4)
!1961 = distinct !DILexicalBlock(scope: !1962, file: !1, line: 2244, column: 25)
!1962 = distinct !DILexicalBlock(scope: !1963, file: !1, line: 2244, column: 5)
!1963 = distinct !DILexicalBlock(scope: !1946, file: !1, line: 2244, column: 5)
!1964 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "element", scope: !1961, file: !1, line: 2246, type: !4)
!1965 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1966, file: !1, line: 2250, type: !4)
!1966 = distinct !DILexicalBlock(scope: !1946, file: !1, line: 2250, column: 5)
!1967 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1968, file: !1, line: 2250, type: !4)
!1968 = distinct !DILexicalBlock(scope: !1969, file: !1, line: 2250, column: 5)
!1969 = distinct !DILexicalBlock(scope: !1970, file: !1, line: 2250, column: 5)
!1970 = distinct !DILexicalBlock(scope: !1966, file: !1, line: 2250, column: 5)
!1971 = !DISubprogram(name: "product_sizeof", scope: !1, file: !1, line: 2080, type: !1972, isLocal: true, isDefinition: true, scopeLine: 2081, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.productobject*, i8*)* @product_sizeof, variables: !1974)
!1972 = !DISubroutineType(types: !1973)
!1973 = !{!4, !478, !89}
!1974 = !{!1975, !1976, !1977}
!1975 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !1971, file: !1, line: 2080, type: !478)
!1976 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unused", arg: 2, scope: !1971, file: !1, line: 2080, type: !89)
!1977 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1971, file: !1, line: 2082, type: !10)
!1978 = !DISubprogram(name: "product_new", scope: !1, file: !1, line: 1995, type: !621, isLocal: true, isDefinition: true, scopeLine: 1996, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @product_new, variables: !1979)
!1979 = !{!1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1996, !1997, !2001, !2003, !2007, !2008, !2012, !2014}
!1980 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1978, file: !1, line: 1995, type: !550)
!1981 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1978, file: !1, line: 1995, type: !4)
!1982 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1978, file: !1, line: 1995, type: !4)
!1983 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lz", scope: !1978, file: !1, line: 1997, type: !478)
!1984 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nargs", scope: !1978, file: !1, line: 1998, type: !10)
!1985 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "npools", scope: !1978, file: !1, line: 1998, type: !10)
!1986 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "repeat", scope: !1978, file: !1, line: 1998, type: !10)
!1987 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pools", scope: !1978, file: !1, line: 1999, type: !4)
!1988 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "indices", scope: !1978, file: !1, line: 2000, type: !247)
!1989 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1978, file: !1, line: 2001, type: !10)
!1990 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "kwlist", scope: !1991, file: !1, line: 2004, type: !1993)
!1991 = distinct !DILexicalBlock(scope: !1992, file: !1, line: 2003, column: 23)
!1992 = distinct !DILexicalBlock(scope: !1978, file: !1, line: 2003, column: 9)
!1993 = !DICompositeType(tag: DW_TAG_array_type, baseType: !51, size: 128, align: 64, elements: !1994)
!1994 = !{!1995}
!1995 = !DISubrange(count: 2)
!1996 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmpargs", scope: !1991, file: !1, line: 2005, type: !4)
!1997 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1998, file: !1, line: 2009, type: !4)
!1998 = distinct !DILexicalBlock(scope: !1999, file: !1, line: 2009, column: 13)
!1999 = distinct !DILexicalBlock(scope: !2000, file: !1, line: 2008, column: 89)
!2000 = distinct !DILexicalBlock(scope: !1991, file: !1, line: 2008, column: 13)
!2001 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2002, file: !1, line: 2012, type: !4)
!2002 = distinct !DILexicalBlock(scope: !1991, file: !1, line: 2012, column: 9)
!2003 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "item", scope: !2004, file: !1, line: 2035, type: !4)
!2004 = distinct !DILexicalBlock(scope: !2005, file: !1, line: 2034, column: 32)
!2005 = distinct !DILexicalBlock(scope: !2006, file: !1, line: 2034, column: 5)
!2006 = distinct !DILexicalBlock(scope: !1978, file: !1, line: 2034, column: 5)
!2007 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pool", scope: !2004, file: !1, line: 2036, type: !4)
!2008 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pool", scope: !2009, file: !1, line: 2043, type: !4)
!2009 = distinct !DILexicalBlock(scope: !2010, file: !1, line: 2042, column: 30)
!2010 = distinct !DILexicalBlock(scope: !2011, file: !1, line: 2042, column: 5)
!2011 = distinct !DILexicalBlock(scope: !1978, file: !1, line: 2042, column: 5)
!2012 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2013, file: !1, line: 2064, type: !4)
!2013 = distinct !DILexicalBlock(scope: !1978, file: !1, line: 2064, column: 5)
!2014 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2015, file: !1, line: 2064, type: !4)
!2015 = distinct !DILexicalBlock(scope: !2016, file: !1, line: 2064, column: 5)
!2016 = distinct !DILexicalBlock(scope: !2013, file: !1, line: 2064, column: 5)
!2017 = !DISubprogram(name: "repeat_dealloc", scope: !1, file: !1, line: 4132, type: !2018, isLocal: true, isDefinition: true, scopeLine: 4133, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.repeatobject*)* @repeat_dealloc, variables: !2020)
!2018 = !DISubroutineType(types: !2019)
!2019 = !{null, !487}
!2020 = !{!2021, !2022, !2024}
!2021 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ro", arg: 1, scope: !2017, file: !1, line: 4132, type: !487)
!2022 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2023, file: !1, line: 4135, type: !4)
!2023 = distinct !DILexicalBlock(scope: !2017, file: !1, line: 4135, column: 5)
!2024 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2025, file: !1, line: 4135, type: !4)
!2025 = distinct !DILexicalBlock(scope: !2026, file: !1, line: 4135, column: 5)
!2026 = distinct !DILexicalBlock(scope: !2023, file: !1, line: 4135, column: 5)
!2027 = !DISubprogram(name: "repeat_repr", scope: !1, file: !1, line: 4158, type: !2028, isLocal: true, isDefinition: true, scopeLine: 4159, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.repeatobject*)* @repeat_repr, variables: !2030)
!2028 = !DISubroutineType(types: !2029)
!2029 = !{!4, !487}
!2030 = !{!2031}
!2031 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ro", arg: 1, scope: !2027, file: !1, line: 4158, type: !487)
!2032 = !DISubprogram(name: "repeat_traverse", scope: !1, file: !1, line: 4140, type: !2033, isLocal: true, isDefinition: true, scopeLine: 4141, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.repeatobject*, i32 (%struct._object*, i8*)*, i8*)* @repeat_traverse, variables: !2035)
!2033 = !DISubroutineType(types: !2034)
!2034 = !{!43, !487, !263, !89}
!2035 = !{!2036, !2037, !2038, !2039}
!2036 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ro", arg: 1, scope: !2032, file: !1, line: 4140, type: !487)
!2037 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !2032, file: !1, line: 4140, type: !263)
!2038 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !2032, file: !1, line: 4140, type: !89)
!2039 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !2040, file: !1, line: 4142, type: !43)
!2040 = distinct !DILexicalBlock(scope: !2041, file: !1, line: 4142, column: 5)
!2041 = distinct !DILexicalBlock(scope: !2042, file: !1, line: 4142, column: 5)
!2042 = distinct !DILexicalBlock(scope: !2032, file: !1, line: 4142, column: 5)
!2043 = !DISubprogram(name: "repeat_next", scope: !1, file: !1, line: 4147, type: !2028, isLocal: true, isDefinition: true, scopeLine: 4148, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.repeatobject*)* @repeat_next, variables: !2044)
!2044 = !{!2045}
!2045 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ro", arg: 1, scope: !2043, file: !1, line: 4147, type: !487)
!2046 = !DISubprogram(name: "repeat_len", scope: !1, file: !1, line: 4167, type: !2028, isLocal: true, isDefinition: true, scopeLine: 4168, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.repeatobject*)* @repeat_len, variables: !2047)
!2047 = !{!2048}
!2048 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ro", arg: 1, scope: !2046, file: !1, line: 4167, type: !487)
!2049 = !DISubprogram(name: "repeat_reduce", scope: !1, file: !1, line: 4179, type: !2028, isLocal: true, isDefinition: true, scopeLine: 4180, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.repeatobject*)* @repeat_reduce, variables: !2050)
!2050 = !{!2051}
!2051 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ro", arg: 1, scope: !2049, file: !1, line: 4179, type: !487)
!2052 = !DISubprogram(name: "repeat_new", scope: !1, file: !1, line: 4108, type: !621, isLocal: true, isDefinition: true, scopeLine: 4109, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @repeat_new, variables: !2053)
!2053 = !{!2054, !2055, !2056, !2057, !2058, !2059}
!2054 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !2052, file: !1, line: 4108, type: !550)
!2055 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2052, file: !1, line: 4108, type: !4)
!2056 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !2052, file: !1, line: 4108, type: !4)
!2057 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ro", scope: !2052, file: !1, line: 4110, type: !487)
!2058 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "element", scope: !2052, file: !1, line: 4111, type: !4)
!2059 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cnt", scope: !2052, file: !1, line: 4112, type: !10)
!2060 = !DISubprogram(name: "groupby_dealloc", scope: !1, file: !1, line: 54, type: !2061, isLocal: true, isDefinition: true, scopeLine: 55, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.groupbyobject*)* @groupby_dealloc, variables: !2063)
!2061 = !DISubroutineType(types: !2062)
!2062 = !{null, !501}
!2063 = !{!2064, !2065, !2067, !2070, !2072, !2075, !2077, !2080, !2082, !2085, !2087}
!2064 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "gbo", arg: 1, scope: !2060, file: !1, line: 54, type: !501)
!2065 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2066, file: !1, line: 57, type: !4)
!2066 = distinct !DILexicalBlock(scope: !2060, file: !1, line: 57, column: 5)
!2067 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2068, file: !1, line: 57, type: !4)
!2068 = distinct !DILexicalBlock(scope: !2069, file: !1, line: 57, column: 5)
!2069 = distinct !DILexicalBlock(scope: !2066, file: !1, line: 57, column: 5)
!2070 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2071, file: !1, line: 58, type: !4)
!2071 = distinct !DILexicalBlock(scope: !2060, file: !1, line: 58, column: 5)
!2072 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2073, file: !1, line: 58, type: !4)
!2073 = distinct !DILexicalBlock(scope: !2074, file: !1, line: 58, column: 5)
!2074 = distinct !DILexicalBlock(scope: !2071, file: !1, line: 58, column: 5)
!2075 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2076, file: !1, line: 59, type: !4)
!2076 = distinct !DILexicalBlock(scope: !2060, file: !1, line: 59, column: 5)
!2077 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2078, file: !1, line: 59, type: !4)
!2078 = distinct !DILexicalBlock(scope: !2079, file: !1, line: 59, column: 5)
!2079 = distinct !DILexicalBlock(scope: !2076, file: !1, line: 59, column: 5)
!2080 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2081, file: !1, line: 60, type: !4)
!2081 = distinct !DILexicalBlock(scope: !2060, file: !1, line: 60, column: 5)
!2082 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2083, file: !1, line: 60, type: !4)
!2083 = distinct !DILexicalBlock(scope: !2084, file: !1, line: 60, column: 5)
!2084 = distinct !DILexicalBlock(scope: !2081, file: !1, line: 60, column: 5)
!2085 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2086, file: !1, line: 61, type: !4)
!2086 = distinct !DILexicalBlock(scope: !2060, file: !1, line: 61, column: 5)
!2087 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2088, file: !1, line: 61, type: !4)
!2088 = distinct !DILexicalBlock(scope: !2089, file: !1, line: 61, column: 5)
!2089 = distinct !DILexicalBlock(scope: !2086, file: !1, line: 61, column: 5)
!2090 = !DISubprogram(name: "groupby_traverse", scope: !1, file: !1, line: 66, type: !2091, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.groupbyobject*, i32 (%struct._object*, i8*)*, i8*)* @groupby_traverse, variables: !2093)
!2091 = !DISubroutineType(types: !2092)
!2092 = !{!43, !501, !263, !89}
!2093 = !{!2094, !2095, !2096, !2097, !2101, !2105, !2109, !2113}
!2094 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "gbo", arg: 1, scope: !2090, file: !1, line: 66, type: !501)
!2095 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !2090, file: !1, line: 66, type: !263)
!2096 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !2090, file: !1, line: 66, type: !89)
!2097 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !2098, file: !1, line: 68, type: !43)
!2098 = distinct !DILexicalBlock(scope: !2099, file: !1, line: 68, column: 5)
!2099 = distinct !DILexicalBlock(scope: !2100, file: !1, line: 68, column: 5)
!2100 = distinct !DILexicalBlock(scope: !2090, file: !1, line: 68, column: 5)
!2101 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !2102, file: !1, line: 69, type: !43)
!2102 = distinct !DILexicalBlock(scope: !2103, file: !1, line: 69, column: 5)
!2103 = distinct !DILexicalBlock(scope: !2104, file: !1, line: 69, column: 5)
!2104 = distinct !DILexicalBlock(scope: !2090, file: !1, line: 69, column: 5)
!2105 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !2106, file: !1, line: 70, type: !43)
!2106 = distinct !DILexicalBlock(scope: !2107, file: !1, line: 70, column: 5)
!2107 = distinct !DILexicalBlock(scope: !2108, file: !1, line: 70, column: 5)
!2108 = distinct !DILexicalBlock(scope: !2090, file: !1, line: 70, column: 5)
!2109 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !2110, file: !1, line: 71, type: !43)
!2110 = distinct !DILexicalBlock(scope: !2111, file: !1, line: 71, column: 5)
!2111 = distinct !DILexicalBlock(scope: !2112, file: !1, line: 71, column: 5)
!2112 = distinct !DILexicalBlock(scope: !2090, file: !1, line: 71, column: 5)
!2113 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !2114, file: !1, line: 72, type: !43)
!2114 = distinct !DILexicalBlock(scope: !2115, file: !1, line: 72, column: 5)
!2115 = distinct !DILexicalBlock(scope: !2116, file: !1, line: 72, column: 5)
!2116 = distinct !DILexicalBlock(scope: !2090, file: !1, line: 72, column: 5)
!2117 = !DISubprogram(name: "groupby_next", scope: !1, file: !1, line: 77, type: !2118, isLocal: true, isDefinition: true, scopeLine: 78, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.groupbyobject*)* @groupby_next, variables: !2120)
!2118 = !DISubroutineType(types: !2119)
!2119 = !{!4, !501}
!2120 = !{!2121, !2122, !2123, !2124, !2125, !2126, !2127, !2134, !2140, !2142, !2145, !2147, !2150, !2152, !2155}
!2121 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "gbo", arg: 1, scope: !2117, file: !1, line: 77, type: !501)
!2122 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newvalue", scope: !2117, file: !1, line: 79, type: !4)
!2123 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newkey", scope: !2117, file: !1, line: 79, type: !4)
!2124 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !2117, file: !1, line: 79, type: !4)
!2125 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "grouper", scope: !2117, file: !1, line: 79, type: !4)
!2126 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !2117, file: !1, line: 79, type: !4)
!2127 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rcmp", scope: !2128, file: !1, line: 88, type: !43)
!2128 = distinct !DILexicalBlock(scope: !2129, file: !1, line: 87, column: 14)
!2129 = distinct !DILexicalBlock(scope: !2130, file: !1, line: 85, column: 18)
!2130 = distinct !DILexicalBlock(scope: !2131, file: !1, line: 83, column: 13)
!2131 = distinct !DILexicalBlock(scope: !2132, file: !1, line: 82, column: 14)
!2132 = distinct !DILexicalBlock(scope: !2133, file: !1, line: 82, column: 5)
!2133 = distinct !DILexicalBlock(scope: !2117, file: !1, line: 82, column: 5)
!2134 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2135, file: !1, line: 109, type: !4)
!2135 = distinct !DILexicalBlock(scope: !2136, file: !1, line: 109, column: 17)
!2136 = distinct !DILexicalBlock(scope: !2137, file: !1, line: 108, column: 33)
!2137 = distinct !DILexicalBlock(scope: !2138, file: !1, line: 108, column: 17)
!2138 = distinct !DILexicalBlock(scope: !2139, file: !1, line: 105, column: 16)
!2139 = distinct !DILexicalBlock(scope: !2131, file: !1, line: 102, column: 13)
!2140 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2141, file: !1, line: 116, type: !4)
!2141 = distinct !DILexicalBlock(scope: !2131, file: !1, line: 116, column: 9)
!2142 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2143, file: !1, line: 116, type: !4)
!2143 = distinct !DILexicalBlock(scope: !2144, file: !1, line: 116, column: 9)
!2144 = distinct !DILexicalBlock(scope: !2141, file: !1, line: 116, column: 9)
!2145 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2146, file: !1, line: 120, type: !4)
!2146 = distinct !DILexicalBlock(scope: !2131, file: !1, line: 120, column: 9)
!2147 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2148, file: !1, line: 120, type: !4)
!2148 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 120, column: 9)
!2149 = distinct !DILexicalBlock(scope: !2146, file: !1, line: 120, column: 9)
!2150 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2151, file: !1, line: 126, type: !4)
!2151 = distinct !DILexicalBlock(scope: !2117, file: !1, line: 126, column: 5)
!2152 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2153, file: !1, line: 126, type: !4)
!2153 = distinct !DILexicalBlock(scope: !2154, file: !1, line: 126, column: 5)
!2154 = distinct !DILexicalBlock(scope: !2151, file: !1, line: 126, column: 5)
!2155 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2156, file: !1, line: 133, type: !4)
!2156 = distinct !DILexicalBlock(scope: !2117, file: !1, line: 133, column: 5)
!2157 = !DISubprogram(name: "_grouper_create", scope: !1, file: !1, line: 255, type: !2158, isLocal: true, isDefinition: true, scopeLine: 256, flags: DIFlagPrototyped, isOptimized: true, variables: !2160)
!2158 = !DISubroutineType(types: !2159)
!2159 = !{!4, !501, !4}
!2160 = !{!2161, !2162, !2163}
!2161 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parent", arg: 1, scope: !2157, file: !1, line: 255, type: !501)
!2162 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tgtkey", arg: 2, scope: !2157, file: !1, line: 255, type: !4)
!2163 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "igo", scope: !2157, file: !1, line: 257, type: !494)
!2164 = !DISubprogram(name: "groupby_reduce", scope: !1, file: !1, line: 138, type: !2118, isLocal: true, isDefinition: true, scopeLine: 139, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.groupbyobject*)* @groupby_reduce, variables: !2165)
!2165 = !{!2166, !2167}
!2166 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !2164, file: !1, line: 138, type: !501)
!2167 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !2164, file: !1, line: 143, type: !4)
!2168 = !DISubprogram(name: "groupby_setstate", scope: !1, file: !1, line: 157, type: !2158, isLocal: true, isDefinition: true, scopeLine: 158, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.groupbyobject*, %struct._object*)* @groupby_setstate, variables: !2169)
!2169 = !{!2170, !2171, !2172, !2173, !2174, !2175, !2177, !2181, !2183, !2187, !2189}
!2170 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !2168, file: !1, line: 157, type: !501)
!2171 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 2, scope: !2168, file: !1, line: 157, type: !4)
!2172 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "currkey", scope: !2168, file: !1, line: 159, type: !4)
!2173 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "currvalue", scope: !2168, file: !1, line: 159, type: !4)
!2174 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tgtkey", scope: !2168, file: !1, line: 159, type: !4)
!2175 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !2176, file: !1, line: 162, type: !4)
!2176 = distinct !DILexicalBlock(scope: !2168, file: !1, line: 162, column: 5)
!2177 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2178, file: !1, line: 162, type: !4)
!2178 = distinct !DILexicalBlock(scope: !2179, file: !1, line: 162, column: 5)
!2179 = distinct !DILexicalBlock(scope: !2180, file: !1, line: 162, column: 5)
!2180 = distinct !DILexicalBlock(scope: !2176, file: !1, line: 162, column: 5)
!2181 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !2182, file: !1, line: 165, type: !4)
!2182 = distinct !DILexicalBlock(scope: !2168, file: !1, line: 165, column: 5)
!2183 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2184, file: !1, line: 165, type: !4)
!2184 = distinct !DILexicalBlock(scope: !2185, file: !1, line: 165, column: 5)
!2185 = distinct !DILexicalBlock(scope: !2186, file: !1, line: 165, column: 5)
!2186 = distinct !DILexicalBlock(scope: !2182, file: !1, line: 165, column: 5)
!2187 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !2188, file: !1, line: 168, type: !4)
!2188 = distinct !DILexicalBlock(scope: !2168, file: !1, line: 168, column: 5)
!2189 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2190, file: !1, line: 168, type: !4)
!2190 = distinct !DILexicalBlock(scope: !2191, file: !1, line: 168, column: 5)
!2191 = distinct !DILexicalBlock(scope: !2192, file: !1, line: 168, column: 5)
!2192 = distinct !DILexicalBlock(scope: !2188, file: !1, line: 168, column: 5)
!2193 = !DISubprogram(name: "groupby_new", scope: !1, file: !1, line: 27, type: !621, isLocal: true, isDefinition: true, scopeLine: 28, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @groupby_new, variables: !2194)
!2194 = !{!2195, !2196, !2197, !2198, !2199, !2200, !2201}
!2195 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !2193, file: !1, line: 27, type: !550)
!2196 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2193, file: !1, line: 27, type: !4)
!2197 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !2193, file: !1, line: 27, type: !4)
!2198 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "gbo", scope: !2193, file: !1, line: 30, type: !501)
!2199 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !2193, file: !1, line: 31, type: !4)
!2200 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "keyfunc", scope: !2193, file: !1, line: 31, type: !4)
!2201 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2202, file: !1, line: 47, type: !4)
!2202 = distinct !DILexicalBlock(scope: !2203, file: !1, line: 47, column: 9)
!2203 = distinct !DILexicalBlock(scope: !2204, file: !1, line: 46, column: 26)
!2204 = distinct !DILexicalBlock(scope: !2193, file: !1, line: 46, column: 9)
!2205 = !DISubprogram(name: "_grouper_dealloc", scope: !1, file: !1, line: 272, type: !2206, isLocal: true, isDefinition: true, scopeLine: 273, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct._grouperobject*)* @_grouper_dealloc, variables: !2208)
!2206 = !DISubroutineType(types: !2207)
!2207 = !{null, !494}
!2208 = !{!2209, !2210, !2212}
!2209 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "igo", arg: 1, scope: !2205, file: !1, line: 272, type: !494)
!2210 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2211, file: !1, line: 275, type: !4)
!2211 = distinct !DILexicalBlock(scope: !2205, file: !1, line: 275, column: 5)
!2212 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2213, file: !1, line: 276, type: !4)
!2213 = distinct !DILexicalBlock(scope: !2205, file: !1, line: 276, column: 5)
!2214 = !DISubprogram(name: "_grouper_traverse", scope: !1, file: !1, line: 281, type: !2215, isLocal: true, isDefinition: true, scopeLine: 282, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._grouperobject*, i32 (%struct._object*, i8*)*, i8*)* @_grouper_traverse, variables: !2217)
!2215 = !DISubroutineType(types: !2216)
!2216 = !{!43, !494, !263, !89}
!2217 = !{!2218, !2219, !2220, !2221, !2225}
!2218 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "igo", arg: 1, scope: !2214, file: !1, line: 281, type: !494)
!2219 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !2214, file: !1, line: 281, type: !263)
!2220 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !2214, file: !1, line: 281, type: !89)
!2221 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !2222, file: !1, line: 283, type: !43)
!2222 = distinct !DILexicalBlock(scope: !2223, file: !1, line: 283, column: 5)
!2223 = distinct !DILexicalBlock(scope: !2224, file: !1, line: 283, column: 5)
!2224 = distinct !DILexicalBlock(scope: !2214, file: !1, line: 283, column: 5)
!2225 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !2226, file: !1, line: 284, type: !43)
!2226 = distinct !DILexicalBlock(scope: !2227, file: !1, line: 284, column: 5)
!2227 = distinct !DILexicalBlock(scope: !2228, file: !1, line: 284, column: 5)
!2228 = distinct !DILexicalBlock(scope: !2214, file: !1, line: 284, column: 5)
!2229 = !DISubprogram(name: "_grouper_next", scope: !1, file: !1, line: 289, type: !2230, isLocal: true, isDefinition: true, scopeLine: 290, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._grouperobject*)* @_grouper_next, variables: !2232)
!2230 = !DISubroutineType(types: !2231)
!2231 = !{!4, !494}
!2232 = !{!2233, !2234, !2235, !2236, !2237, !2238, !2239, !2247, !2249}
!2233 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "igo", arg: 1, scope: !2229, file: !1, line: 289, type: !494)
!2234 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "gbo", scope: !2229, file: !1, line: 291, type: !501)
!2235 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newvalue", scope: !2229, file: !1, line: 292, type: !4)
!2236 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newkey", scope: !2229, file: !1, line: 292, type: !4)
!2237 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !2229, file: !1, line: 292, type: !4)
!2238 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rcmp", scope: !2229, file: !1, line: 293, type: !43)
!2239 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2240, file: !1, line: 307, type: !4)
!2240 = distinct !DILexicalBlock(scope: !2241, file: !1, line: 307, column: 17)
!2241 = distinct !DILexicalBlock(scope: !2242, file: !1, line: 306, column: 33)
!2242 = distinct !DILexicalBlock(scope: !2243, file: !1, line: 306, column: 17)
!2243 = distinct !DILexicalBlock(scope: !2244, file: !1, line: 303, column: 16)
!2244 = distinct !DILexicalBlock(scope: !2245, file: !1, line: 300, column: 13)
!2245 = distinct !DILexicalBlock(scope: !2246, file: !1, line: 295, column: 33)
!2246 = distinct !DILexicalBlock(scope: !2229, file: !1, line: 295, column: 9)
!2247 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !2248, file: !1, line: 325, type: !4)
!2248 = distinct !DILexicalBlock(scope: !2229, file: !1, line: 325, column: 5)
!2249 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2250, file: !1, line: 325, type: !4)
!2250 = distinct !DILexicalBlock(scope: !2251, file: !1, line: 325, column: 5)
!2251 = distinct !DILexicalBlock(scope: !2252, file: !1, line: 325, column: 5)
!2252 = distinct !DILexicalBlock(scope: !2248, file: !1, line: 325, column: 5)
!2253 = !DISubprogram(name: "_grouper_reduce", scope: !1, file: !1, line: 331, type: !2230, isLocal: true, isDefinition: true, scopeLine: 332, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._grouperobject*)* @_grouper_reduce, variables: !2254)
!2254 = !{!2255}
!2255 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lz", arg: 1, scope: !2253, file: !1, line: 331, type: !494)
!2256 = !DISubprogram(name: "_grouper_new", scope: !1, file: !1, line: 244, type: !621, isLocal: true, isDefinition: true, scopeLine: 245, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @_grouper_new, variables: !2257)
!2257 = !{!2258, !2259, !2260, !2261, !2262}
!2258 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !2256, file: !1, line: 244, type: !550)
!2259 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2256, file: !1, line: 244, type: !4)
!2260 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !2256, file: !1, line: 244, type: !4)
!2261 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "parent", scope: !2256, file: !1, line: 246, type: !4)
!2262 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tgtkey", scope: !2256, file: !1, line: 246, type: !4)
!2263 = !DISubprogram(name: "tee_dealloc", scope: !1, file: !1, line: 727, type: !2264, isLocal: true, isDefinition: true, scopeLine: 728, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.teeobject*)* @tee_dealloc, variables: !2266)
!2264 = !DISubroutineType(types: !2265)
!2265 = !{null, !523}
!2266 = !{!2267}
!2267 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "to", arg: 1, scope: !2263, file: !1, line: 727, type: !523)
!2268 = !DISubprogram(name: "tee_traverse", scope: !1, file: !1, line: 651, type: !2269, isLocal: true, isDefinition: true, scopeLine: 652, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.teeobject*, i32 (%struct._object*, i8*)*, i8*)* @tee_traverse, variables: !2271)
!2269 = !DISubroutineType(types: !2270)
!2270 = !{!43, !523, !263, !89}
!2271 = !{!2272, !2273, !2274, !2275}
!2272 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "to", arg: 1, scope: !2268, file: !1, line: 651, type: !523)
!2273 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !2268, file: !1, line: 651, type: !263)
!2274 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !2268, file: !1, line: 651, type: !89)
!2275 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !2276, file: !1, line: 653, type: !43)
!2276 = distinct !DILexicalBlock(scope: !2277, file: !1, line: 653, column: 5)
!2277 = distinct !DILexicalBlock(scope: !2278, file: !1, line: 653, column: 5)
!2278 = distinct !DILexicalBlock(scope: !2268, file: !1, line: 653, column: 5)
!2279 = !DISubprogram(name: "tee_clear", scope: !1, file: !1, line: 718, type: !2280, isLocal: true, isDefinition: true, scopeLine: 719, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.teeobject*)* @tee_clear, variables: !2282)
!2280 = !DISubroutineType(types: !2281)
!2281 = !{!43, !523}
!2282 = !{!2283, !2284, !2286}
!2283 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "to", arg: 1, scope: !2279, file: !1, line: 718, type: !523)
!2284 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !2285, file: !1, line: 722, type: !4)
!2285 = distinct !DILexicalBlock(scope: !2279, file: !1, line: 722, column: 5)
!2286 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2287, file: !1, line: 722, type: !4)
!2287 = distinct !DILexicalBlock(scope: !2288, file: !1, line: 722, column: 5)
!2288 = distinct !DILexicalBlock(scope: !2289, file: !1, line: 722, column: 5)
!2289 = distinct !DILexicalBlock(scope: !2285, file: !1, line: 722, column: 5)
!2290 = !DISubprogram(name: "tee_next", scope: !1, file: !1, line: 631, type: !2291, isLocal: true, isDefinition: true, scopeLine: 632, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.teeobject*)* @tee_next, variables: !2293)
!2291 = !DISubroutineType(types: !2292)
!2292 = !{!4, !523}
!2293 = !{!2294, !2295, !2296, !2297}
!2294 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "to", arg: 1, scope: !2290, file: !1, line: 631, type: !523)
!2295 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !2290, file: !1, line: 633, type: !4)
!2296 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "link", scope: !2290, file: !1, line: 633, type: !4)
!2297 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2298, file: !1, line: 639, type: !4)
!2298 = distinct !DILexicalBlock(scope: !2299, file: !1, line: 639, column: 9)
!2299 = distinct !DILexicalBlock(scope: !2300, file: !1, line: 635, column: 33)
!2300 = distinct !DILexicalBlock(scope: !2290, file: !1, line: 635, column: 9)
!2301 = !DISubprogram(name: "teedataobject_jumplink", scope: !1, file: !1, line: 436, type: !2302, isLocal: true, isDefinition: true, scopeLine: 437, flags: DIFlagPrototyped, isOptimized: true, variables: !2304)
!2302 = !DISubroutineType(types: !2303)
!2303 = !{!4, !511}
!2304 = !{!2305, !2306}
!2305 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tdo", arg: 1, scope: !2301, file: !1, line: 436, type: !511)
!2306 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xincref_tmp", scope: !2307, file: !1, line: 440, type: !4)
!2307 = distinct !DILexicalBlock(scope: !2301, file: !1, line: 440, column: 5)
!2308 = !DISubprogram(name: "teedataobject_newinternal", scope: !1, file: !1, line: 419, type: !116, isLocal: true, isDefinition: true, scopeLine: 420, flags: DIFlagPrototyped, isOptimized: true, variables: !2309)
!2309 = !{!2310, !2311}
!2310 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "it", arg: 1, scope: !2308, file: !1, line: 419, type: !4)
!2311 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tdo", scope: !2308, file: !1, line: 421, type: !511)
!2312 = !DISubprogram(name: "teedataobject_getitem", scope: !1, file: !1, line: 445, type: !2313, isLocal: true, isDefinition: true, scopeLine: 446, flags: DIFlagPrototyped, isOptimized: true, variables: !2315)
!2313 = !DISubroutineType(types: !2314)
!2314 = !{!4, !511, !43}
!2315 = !{!2316, !2317, !2318}
!2316 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tdo", arg: 1, scope: !2312, file: !1, line: 445, type: !511)
!2317 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "i", arg: 2, scope: !2312, file: !1, line: 445, type: !43)
!2318 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !2312, file: !1, line: 447, type: !4)
!2319 = !DISubprogram(name: "tee_copy", scope: !1, file: !1, line: 658, type: !2291, isLocal: true, isDefinition: true, scopeLine: 659, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.teeobject*)* @tee_copy, variables: !2320)
!2320 = !{!2321, !2322}
!2321 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "to", arg: 1, scope: !2319, file: !1, line: 658, type: !523)
!2322 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newto", scope: !2319, file: !1, line: 660, type: !523)
!2323 = !DISubprogram(name: "tee_reduce", scope: !1, file: !1, line: 735, type: !2291, isLocal: true, isDefinition: true, scopeLine: 736, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.teeobject*)* @tee_reduce, variables: !2324)
!2324 = !{!2325}
!2325 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "to", arg: 1, scope: !2323, file: !1, line: 735, type: !523)
!2326 = !DISubprogram(name: "tee_setstate", scope: !1, file: !1, line: 741, type: !2327, isLocal: true, isDefinition: true, scopeLine: 742, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.teeobject*, %struct._object*)* @tee_setstate, variables: !2329)
!2327 = !DISubroutineType(types: !2328)
!2328 = !{!4, !523, !4}
!2329 = !{!2330, !2331, !2332, !2333, !2334, !2336}
!2330 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "to", arg: 1, scope: !2326, file: !1, line: 741, type: !523)
!2331 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 2, scope: !2326, file: !1, line: 741, type: !4)
!2332 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tdo", scope: !2326, file: !1, line: 743, type: !511)
!2333 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !2326, file: !1, line: 744, type: !43)
!2334 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !2335, file: !1, line: 751, type: !4)
!2335 = distinct !DILexicalBlock(scope: !2326, file: !1, line: 751, column: 5)
!2336 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2337, file: !1, line: 751, type: !4)
!2337 = distinct !DILexicalBlock(scope: !2338, file: !1, line: 751, column: 5)
!2338 = distinct !DILexicalBlock(scope: !2339, file: !1, line: 751, column: 5)
!2339 = distinct !DILexicalBlock(scope: !2335, file: !1, line: 751, column: 5)
!2340 = !DISubprogram(name: "tee_new", scope: !1, file: !1, line: 708, type: !621, isLocal: true, isDefinition: true, scopeLine: 709, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @tee_new, variables: !2341)
!2341 = !{!2342, !2343, !2344, !2345}
!2342 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !2340, file: !1, line: 708, type: !550)
!2343 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2340, file: !1, line: 708, type: !4)
!2344 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kw", arg: 3, scope: !2340, file: !1, line: 708, type: !4)
!2345 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iterable", scope: !2340, file: !1, line: 710, type: !4)
!2346 = !DISubprogram(name: "tee_fromiterable", scope: !1, file: !1, line: 676, type: !116, isLocal: true, isDefinition: true, scopeLine: 677, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @tee_fromiterable, variables: !2347)
!2347 = !{!2348, !2349, !2350, !2351, !2353}
!2348 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "iterable", arg: 1, scope: !2346, file: !1, line: 676, type: !4)
!2349 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "to", scope: !2346, file: !1, line: 678, type: !523)
!2350 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !2346, file: !1, line: 679, type: !4)
!2351 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2352, file: !1, line: 703, type: !4)
!2352 = distinct !DILexicalBlock(scope: !2346, file: !1, line: 703, column: 5)
!2353 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2354, file: !1, line: 703, type: !4)
!2354 = distinct !DILexicalBlock(scope: !2355, file: !1, line: 703, column: 5)
!2355 = distinct !DILexicalBlock(scope: !2352, file: !1, line: 703, column: 5)
!2356 = !DISubprogram(name: "teedataobject_dealloc", scope: !1, file: !1, line: 505, type: !2357, isLocal: true, isDefinition: true, scopeLine: 506, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.teedataobject*)* @teedataobject_dealloc, variables: !2359)
!2357 = !DISubroutineType(types: !2358)
!2358 = !{null, !511}
!2359 = !{!2360}
!2360 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tdo", arg: 1, scope: !2356, file: !1, line: 505, type: !511)
!2361 = !DISubprogram(name: "teedataobject_traverse", scope: !1, file: !1, line: 466, type: !2362, isLocal: true, isDefinition: true, scopeLine: 467, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.teedataobject*, i32 (%struct._object*, i8*)*, i8*)* @teedataobject_traverse, variables: !2364)
!2362 = !DISubroutineType(types: !2363)
!2363 = !{!43, !511, !263, !89}
!2364 = !{!2365, !2366, !2367, !2368, !2369, !2373, !2379}
!2365 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tdo", arg: 1, scope: !2361, file: !1, line: 466, type: !511)
!2366 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !2361, file: !1, line: 466, type: !263)
!2367 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !2361, file: !1, line: 466, type: !89)
!2368 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !2361, file: !1, line: 468, type: !43)
!2369 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !2370, file: !1, line: 469, type: !43)
!2370 = distinct !DILexicalBlock(scope: !2371, file: !1, line: 469, column: 5)
!2371 = distinct !DILexicalBlock(scope: !2372, file: !1, line: 469, column: 5)
!2372 = distinct !DILexicalBlock(scope: !2361, file: !1, line: 469, column: 5)
!2373 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !2374, file: !1, line: 471, type: !43)
!2374 = distinct !DILexicalBlock(scope: !2375, file: !1, line: 471, column: 9)
!2375 = distinct !DILexicalBlock(scope: !2376, file: !1, line: 471, column: 9)
!2376 = distinct !DILexicalBlock(scope: !2377, file: !1, line: 471, column: 9)
!2377 = distinct !DILexicalBlock(scope: !2378, file: !1, line: 470, column: 5)
!2378 = distinct !DILexicalBlock(scope: !2361, file: !1, line: 470, column: 5)
!2379 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !2380, file: !1, line: 472, type: !43)
!2380 = distinct !DILexicalBlock(scope: !2381, file: !1, line: 472, column: 5)
!2381 = distinct !DILexicalBlock(scope: !2382, file: !1, line: 472, column: 5)
!2382 = distinct !DILexicalBlock(scope: !2361, file: !1, line: 472, column: 5)
!2383 = !DISubprogram(name: "teedataobject_clear", scope: !1, file: !1, line: 490, type: !2384, isLocal: true, isDefinition: true, scopeLine: 491, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.teedataobject*)* @teedataobject_clear, variables: !2386)
!2384 = !DISubroutineType(types: !2385)
!2385 = !{!43, !511}
!2386 = !{!2387, !2388, !2389, !2390, !2392, !2396, !2400}
!2387 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tdo", arg: 1, scope: !2383, file: !1, line: 490, type: !511)
!2388 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !2383, file: !1, line: 492, type: !43)
!2389 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !2383, file: !1, line: 493, type: !4)
!2390 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !2391, file: !1, line: 495, type: !4)
!2391 = distinct !DILexicalBlock(scope: !2383, file: !1, line: 495, column: 5)
!2392 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2393, file: !1, line: 495, type: !4)
!2393 = distinct !DILexicalBlock(scope: !2394, file: !1, line: 495, column: 5)
!2394 = distinct !DILexicalBlock(scope: !2395, file: !1, line: 495, column: 5)
!2395 = distinct !DILexicalBlock(scope: !2391, file: !1, line: 495, column: 5)
!2396 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !2397, file: !1, line: 497, type: !4)
!2397 = distinct !DILexicalBlock(scope: !2398, file: !1, line: 497, column: 9)
!2398 = distinct !DILexicalBlock(scope: !2399, file: !1, line: 496, column: 5)
!2399 = distinct !DILexicalBlock(scope: !2383, file: !1, line: 496, column: 5)
!2400 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2401, file: !1, line: 497, type: !4)
!2401 = distinct !DILexicalBlock(scope: !2402, file: !1, line: 497, column: 9)
!2402 = distinct !DILexicalBlock(scope: !2403, file: !1, line: 497, column: 9)
!2403 = distinct !DILexicalBlock(scope: !2397, file: !1, line: 497, column: 9)
!2404 = !DISubprogram(name: "teedataobject_safe_decref", scope: !1, file: !1, line: 477, type: !36, isLocal: true, isDefinition: true, scopeLine: 478, flags: DIFlagPrototyped, isOptimized: true, variables: !2405)
!2405 = !{!2406, !2407, !2409, !2411, !2413}
!2406 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "obj", arg: 1, scope: !2404, file: !1, line: 477, type: !4)
!2407 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nextlink", scope: !2408, file: !1, line: 481, type: !4)
!2408 = distinct !DILexicalBlock(scope: !2404, file: !1, line: 480, column: 33)
!2409 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2410, file: !1, line: 483, type: !4)
!2410 = distinct !DILexicalBlock(scope: !2408, file: !1, line: 483, column: 9)
!2411 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2412, file: !1, line: 486, type: !4)
!2412 = distinct !DILexicalBlock(scope: !2404, file: !1, line: 486, column: 5)
!2413 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2414, file: !1, line: 486, type: !4)
!2414 = distinct !DILexicalBlock(scope: !2415, file: !1, line: 486, column: 5)
!2415 = distinct !DILexicalBlock(scope: !2412, file: !1, line: 486, column: 5)
!2416 = !DISubprogram(name: "teedataobject_reduce", scope: !1, file: !1, line: 513, type: !2302, isLocal: true, isDefinition: true, scopeLine: 514, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.teedataobject*)* @teedataobject_reduce, variables: !2417)
!2417 = !{!2418, !2419, !2420}
!2418 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tdo", arg: 1, scope: !2416, file: !1, line: 513, type: !511)
!2419 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !2416, file: !1, line: 515, type: !43)
!2420 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "values", scope: !2416, file: !1, line: 517, type: !4)
!2421 = !DISubprogram(name: "teedataobject_new", scope: !1, file: !1, line: 532, type: !621, isLocal: true, isDefinition: true, scopeLine: 533, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @teedataobject_new, variables: !2422)
!2422 = !{!2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2434}
!2423 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !2421, file: !1, line: 532, type: !550)
!2424 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2421, file: !1, line: 532, type: !4)
!2425 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kw", arg: 3, scope: !2421, file: !1, line: 532, type: !4)
!2426 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tdo", scope: !2421, file: !1, line: 534, type: !511)
!2427 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !2421, file: !1, line: 535, type: !4)
!2428 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "values", scope: !2421, file: !1, line: 535, type: !4)
!2429 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "next", scope: !2421, file: !1, line: 535, type: !4)
!2430 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !2421, file: !1, line: 536, type: !10)
!2431 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !2421, file: !1, line: 536, type: !10)
!2432 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2433, file: !1, line: 571, type: !4)
!2433 = distinct !DILexicalBlock(scope: !2421, file: !1, line: 571, column: 5)
!2434 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2435, file: !1, line: 571, type: !4)
!2435 = distinct !DILexicalBlock(scope: !2436, file: !1, line: 571, column: 5)
!2436 = distinct !DILexicalBlock(scope: !2433, file: !1, line: 571, column: 5)
!2437 = !DISubprogram(name: "tee", scope: !1, file: !1, line: 812, type: !126, isLocal: true, isDefinition: true, scopeLine: 813, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @tee, variables: !2438)
!2438 = !{!2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2451, !2455, !2459}
!2439 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2437, file: !1, line: 812, type: !4)
!2440 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2437, file: !1, line: 812, type: !4)
!2441 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !2437, file: !1, line: 814, type: !10)
!2442 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !2437, file: !1, line: 814, type: !10)
!2443 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !2437, file: !1, line: 815, type: !4)
!2444 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iterable", scope: !2437, file: !1, line: 815, type: !4)
!2445 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "copyable", scope: !2437, file: !1, line: 815, type: !4)
!2446 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !2437, file: !1, line: 815, type: !4)
!2447 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2448, file: !1, line: 831, type: !4)
!2448 = distinct !DILexicalBlock(scope: !2449, file: !1, line: 831, column: 9)
!2449 = distinct !DILexicalBlock(scope: !2450, file: !1, line: 830, column: 21)
!2450 = distinct !DILexicalBlock(scope: !2437, file: !1, line: 830, column: 9)
!2451 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2452, file: !1, line: 836, type: !4)
!2452 = distinct !DILexicalBlock(scope: !2453, file: !1, line: 836, column: 9)
!2453 = distinct !DILexicalBlock(scope: !2454, file: !1, line: 834, column: 51)
!2454 = distinct !DILexicalBlock(scope: !2437, file: !1, line: 834, column: 9)
!2455 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2456, file: !1, line: 838, type: !4)
!2456 = distinct !DILexicalBlock(scope: !2457, file: !1, line: 838, column: 13)
!2457 = distinct !DILexicalBlock(scope: !2458, file: !1, line: 837, column: 31)
!2458 = distinct !DILexicalBlock(scope: !2453, file: !1, line: 837, column: 13)
!2459 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2460, file: !1, line: 848, type: !4)
!2460 = distinct !DILexicalBlock(scope: !2461, file: !1, line: 848, column: 13)
!2461 = distinct !DILexicalBlock(scope: !2462, file: !1, line: 847, column: 31)
!2462 = distinct !DILexicalBlock(scope: !2463, file: !1, line: 847, column: 13)
!2463 = distinct !DILexicalBlock(scope: !2464, file: !1, line: 844, column: 27)
!2464 = distinct !DILexicalBlock(scope: !2465, file: !1, line: 844, column: 5)
!2465 = distinct !DILexicalBlock(scope: !2437, file: !1, line: 844, column: 5)
!2466 = !{!2467, !2468, !2472, !2477, !2481, !2485, !2487, !2488, !2492, !2496, !2500, !2501, !2502, !2506, !2507, !2508, !2509, !2513, !2514, !2515, !2519, !2520, !2521, !2525, !2526, !2527, !2531, !2532, !2533, !2537, !2539, !2540, !2544, !2545, !2549, !2550, !2554, !2555, !2556, !2557, !2561, !2562, !2563, !2567, !2568, !2569, !2570, !2574, !2575, !2576, !2580, !2581, !2582, !2583, !2587, !2588, !2589, !2593, !2594, !2598, !2599, !2600, !2604, !2605, !2606, !2607, !2608, !2609, !2613, !2614, !2618, !2619, !2623, !2624, !2646, !2650, !2651, !2659}
!2467 = !DIGlobalVariable(name: "accumulate_type", scope: !0, file: !1, line: 3486, type: !551, isLocal: true, isDefinition: true, variable: %struct._typeobject* @accumulate_type)
!2468 = !DIGlobalVariable(name: "accumulate_doc", scope: !0, file: !1, line: 3481, type: !2469, isLocal: true, isDefinition: true, variable: [122 x i8]* @accumulate_doc)
!2469 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 976, align: 8, elements: !2470)
!2470 = !{!2471}
!2471 = !DISubrange(count: 122)
!2472 = !DIGlobalVariable(name: "accumulate_methods", scope: !0, file: !1, line: 3473, type: !2473, isLocal: true, isDefinition: true, variable: [3 x %struct.PyMethodDef]* @accumulate_methods)
!2473 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2474, size: 768, align: 64, elements: !2475)
!2474 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMethodDef", file: !281, line: 47, baseType: !280)
!2475 = !{!2476}
!2476 = !DISubrange(count: 3)
!2477 = !DIGlobalVariable(name: "reduce_doc", scope: !0, file: !1, line: 154, type: !2478, isLocal: true, isDefinition: true, variable: [39 x i8]* @reduce_doc)
!2478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 312, align: 8, elements: !2479)
!2479 = !{!2480}
!2480 = !DISubrange(count: 39)
!2481 = !DIGlobalVariable(name: "setstate_doc", scope: !0, file: !1, line: 174, type: !2482, isLocal: true, isDefinition: true, variable: [38 x i8]* @setstate_doc)
!2482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 304, align: 8, elements: !2483)
!2483 = !{!2484}
!2484 = !DISubrange(count: 38)
!2485 = !DIGlobalVariable(name: "kwargs", scope: !620, file: !1, line: 3375, type: !2486, isLocal: true, isDefinition: true, variable: [3 x i8*]* @accumulate_new.kwargs)
!2486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !51, size: 192, align: 64, elements: !2475)
!2487 = !DIGlobalVariable(name: "combinations_type", scope: !0, file: !1, line: 2594, type: !551, isLocal: true, isDefinition: true, variable: %struct._typeobject* @combinations_type)
!2488 = !DIGlobalVariable(name: "combinations_doc", scope: !0, file: !1, line: 2588, type: !2489, isLocal: true, isDefinition: true, variable: [186 x i8]* @combinations_doc)
!2489 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 1488, align: 8, elements: !2490)
!2490 = !{!2491}
!2491 = !DISubrange(count: 186)
!2492 = !DIGlobalVariable(name: "combinations_methods", scope: !0, file: !1, line: 2578, type: !2493, isLocal: true, isDefinition: true, variable: [4 x %struct.PyMethodDef]* @combinations_methods)
!2493 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2474, size: 1024, align: 64, elements: !2494)
!2494 = !{!2495}
!2495 = !DISubrange(count: 4)
!2496 = !DIGlobalVariable(name: "sizeof_doc", scope: !0, file: !1, line: 2089, type: !2497, isLocal: true, isDefinition: true, variable: [34 x i8]* @sizeof_doc)
!2497 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 272, align: 8, elements: !2498)
!2498 = !{!2499}
!2499 = !DISubrange(count: 34)
!2500 = !DIGlobalVariable(name: "kwargs", scope: !744, file: !1, line: 2347, type: !2486, isLocal: true, isDefinition: true, variable: [3 x i8*]* @combinations_new.kwargs)
!2501 = !DIGlobalVariable(name: "cwr_type", scope: !0, file: !1, line: 2924, type: !551, isLocal: true, isDefinition: true, variable: %struct._typeobject* @cwr_type)
!2502 = !DIGlobalVariable(name: "cwr_doc", scope: !0, file: !1, line: 2917, type: !2503, isLocal: true, isDefinition: true, variable: [272 x i8]* @cwr_doc)
!2503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 2176, align: 8, elements: !2504)
!2504 = !{!2505}
!2505 = !DISubrange(count: 272)
!2506 = !DIGlobalVariable(name: "cwr_methods", scope: !0, file: !1, line: 2907, type: !2493, isLocal: true, isDefinition: true, variable: [4 x %struct.PyMethodDef]* @cwr_methods)
!2507 = !DIGlobalVariable(name: "kwargs", scope: !864, file: !1, line: 2688, type: !2486, isLocal: true, isDefinition: true, variable: [3 x i8*]* @cwr_new.kwargs)
!2508 = !DIGlobalVariable(name: "cycle_type", scope: !0, file: !1, line: 999, type: !551, isLocal: true, isDefinition: true, variable: %struct._typeobject* @cycle_type)
!2509 = !DIGlobalVariable(name: "cycle_doc", scope: !0, file: !1, line: 993, type: !2510, isLocal: true, isDefinition: true, variable: [130 x i8]* @cycle_doc)
!2510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 1040, align: 8, elements: !2511)
!2511 = !{!2512}
!2512 = !DISubrange(count: 130)
!2513 = !DIGlobalVariable(name: "cycle_methods", scope: !0, file: !1, line: 985, type: !2473, isLocal: true, isDefinition: true, variable: [3 x %struct.PyMethodDef]* @cycle_methods)
!2514 = !DIGlobalVariable(name: "dropwhile_type", scope: !0, file: !1, line: 1168, type: !551, isLocal: true, isDefinition: true, variable: %struct._typeobject* @dropwhile_type)
!2515 = !DIGlobalVariable(name: "dropwhile_doc", scope: !0, file: !1, line: 1162, type: !2516, isLocal: true, isDefinition: true, variable: [179 x i8]* @dropwhile_doc)
!2516 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 1432, align: 8, elements: !2517)
!2517 = !{!2518}
!2518 = !DISubrange(count: 179)
!2519 = !DIGlobalVariable(name: "dropwhile_methods", scope: !0, file: !1, line: 1154, type: !2473, isLocal: true, isDefinition: true, variable: [3 x %struct.PyMethodDef]* @dropwhile_methods)
!2520 = !DIGlobalVariable(name: "takewhile_type", scope: !0, file: !1, line: 1332, type: !551, isLocal: true, isDefinition: true, variable: %struct._typeobject* @takewhile_type)
!2521 = !DIGlobalVariable(name: "takewhile_doc", scope: !0, file: !1, line: 1326, type: !2522, isLocal: true, isDefinition: true, variable: [156 x i8]* @takewhile_doc)
!2522 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 1248, align: 8, elements: !2523)
!2523 = !{!2524}
!2524 = !DISubrange(count: 156)
!2525 = !DIGlobalVariable(name: "takewhile_reduce_methods", scope: !0, file: !1, line: 1319, type: !2473, isLocal: true, isDefinition: true, variable: [3 x %struct.PyMethodDef]* @takewhile_reduce_methods)
!2526 = !DIGlobalVariable(name: "islice_type", scope: !0, file: !1, line: 1586, type: !551, isLocal: true, isDefinition: true, variable: %struct._typeobject* @islice_type)
!2527 = !DIGlobalVariable(name: "islice_doc", scope: !0, file: !1, line: 1575, type: !2528, isLocal: true, isDefinition: true, variable: [455 x i8]* @islice_doc)
!2528 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 3640, align: 8, elements: !2529)
!2529 = !{!2530}
!2530 = !DISubrange(count: 455)
!2531 = !DIGlobalVariable(name: "islice_methods", scope: !0, file: !1, line: 1567, type: !2473, isLocal: true, isDefinition: true, variable: [3 x %struct.PyMethodDef]* @islice_methods)
!2532 = !DIGlobalVariable(name: "starmap_type", scope: !0, file: !1, line: 1730, type: !551, isLocal: true, isDefinition: true, variable: %struct._typeobject* @starmap_type)
!2533 = !DIGlobalVariable(name: "starmap_doc", scope: !0, file: !1, line: 1724, type: !2534, isLocal: true, isDefinition: true, variable: [174 x i8]* @starmap_doc)
!2534 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 1392, align: 8, elements: !2535)
!2535 = !{!2536}
!2536 = !DISubrange(count: 174)
!2537 = !DIGlobalVariable(name: "starmap_methods", scope: !0, file: !1, line: 1718, type: !2538, isLocal: true, isDefinition: true, variable: [2 x %struct.PyMethodDef]* @starmap_methods)
!2538 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2474, size: 512, align: 64, elements: !1994)
!2539 = !DIGlobalVariable(name: "chain_type", scope: !0, file: !1, line: 1937, type: !551, isLocal: true, isDefinition: true, variable: %struct._typeobject* @chain_type)
!2540 = !DIGlobalVariable(name: "chain_doc", scope: !0, file: !1, line: 1914, type: !2541, isLocal: true, isDefinition: true, variable: [227 x i8]* @chain_doc)
!2541 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 1816, align: 8, elements: !2542)
!2542 = !{!2543}
!2543 = !DISubrange(count: 227)
!2544 = !DIGlobalVariable(name: "chain_methods", scope: !0, file: !1, line: 1927, type: !2493, isLocal: true, isDefinition: true, variable: [4 x %struct.PyMethodDef]* @chain_methods)
!2545 = !DIGlobalVariable(name: "chain_from_iterable_doc", scope: !0, file: !1, line: 1921, type: !2546, isLocal: true, isDefinition: true, variable: [134 x i8]* @chain_from_iterable_doc)
!2546 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 1072, align: 8, elements: !2547)
!2547 = !{!2548}
!2548 = !DISubrange(count: 134)
!2549 = !DIGlobalVariable(name: "compress_type", scope: !0, file: !1, line: 3653, type: !551, isLocal: true, isDefinition: true, variable: %struct._typeobject* @compress_type)
!2550 = !DIGlobalVariable(name: "compress_doc", scope: !0, file: !1, line: 3646, type: !2551, isLocal: true, isDefinition: true, variable: [223 x i8]* @compress_doc)
!2551 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 1784, align: 8, elements: !2552)
!2552 = !{!2553}
!2553 = !DISubrange(count: 223)
!2554 = !DIGlobalVariable(name: "compress_methods", scope: !0, file: !1, line: 3640, type: !2538, isLocal: true, isDefinition: true, variable: [2 x %struct.PyMethodDef]* @compress_methods)
!2555 = !DIGlobalVariable(name: "kwargs", scope: !1411, file: !1, line: 3554, type: !2486, isLocal: true, isDefinition: true, variable: [3 x i8*]* @compress_new.kwargs)
!2556 = !DIGlobalVariable(name: "filterfalse_type", scope: !0, file: !1, line: 3811, type: !551, isLocal: true, isDefinition: true, variable: %struct._typeobject* @filterfalse_type)
!2557 = !DIGlobalVariable(name: "filterfalse_doc", scope: !0, file: !1, line: 3805, type: !2558, isLocal: true, isDefinition: true, variable: [184 x i8]* @filterfalse_doc)
!2558 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 1472, align: 8, elements: !2559)
!2559 = !{!2560}
!2560 = !DISubrange(count: 184)
!2561 = !DIGlobalVariable(name: "filterfalse_methods", scope: !0, file: !1, line: 3799, type: !2538, isLocal: true, isDefinition: true, variable: [2 x %struct.PyMethodDef]* @filterfalse_methods)
!2562 = !DIGlobalVariable(name: "count_type", scope: !0, file: !1, line: 4052, type: !551, isLocal: true, isDefinition: true, variable: %struct._typeobject* @count_type)
!2563 = !DIGlobalVariable(name: "count_doc", scope: !0, file: !1, line: 4041, type: !2564, isLocal: true, isDefinition: true, variable: [248 x i8]* @count_doc)
!2564 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 1984, align: 8, elements: !2565)
!2565 = !{!2566}
!2566 = !DISubrange(count: 248)
!2567 = !DIGlobalVariable(name: "count_methods", scope: !0, file: !1, line: 4035, type: !2538, isLocal: true, isDefinition: true, variable: [2 x %struct.PyMethodDef]* @count_methods)
!2568 = !DIGlobalVariable(name: "kwlist", scope: !1549, file: !1, line: 3893, type: !2486, isLocal: true, isDefinition: true, variable: [3 x i8*]* @count_new.kwlist)
!2569 = !DIGlobalVariable(name: "ziplongest_type", scope: !0, file: !1, line: 4472, type: !551, isLocal: true, isDefinition: true, variable: %struct._typeobject* @ziplongest_type)
!2570 = !DIGlobalVariable(name: "zip_longest_doc", scope: !0, file: !1, line: 4461, type: !2571, isLocal: true, isDefinition: true, variable: [505 x i8]* @zip_longest_doc)
!2571 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 4040, align: 8, elements: !2572)
!2572 = !{!2573}
!2573 = !DISubrange(count: 505)
!2574 = !DIGlobalVariable(name: "zip_longest_methods", scope: !0, file: !1, line: 4453, type: !2473, isLocal: true, isDefinition: true, variable: [3 x %struct.PyMethodDef]* @zip_longest_methods)
!2575 = !DIGlobalVariable(name: "permutations_type", scope: !0, file: !1, line: 3317, type: !551, isLocal: true, isDefinition: true, variable: %struct._typeobject* @permutations_type)
!2576 = !DIGlobalVariable(name: "permutations_doc", scope: !0, file: !1, line: 3311, type: !2577, isLocal: true, isDefinition: true, variable: [194 x i8]* @permutations_doc)
!2577 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 1552, align: 8, elements: !2578)
!2578 = !{!2579}
!2579 = !DISubrange(count: 194)
!2580 = !DIGlobalVariable(name: "permuations_methods", scope: !0, file: !1, line: 3301, type: !2493, isLocal: true, isDefinition: true, variable: [4 x %struct.PyMethodDef]* @permuations_methods)
!2581 = !DIGlobalVariable(name: "kwargs", scope: !1850, file: !1, line: 3018, type: !2486, isLocal: true, isDefinition: true, variable: [3 x i8*]* @permutations_new.kwargs)
!2582 = !DIGlobalVariable(name: "product_type", scope: !0, file: !1, line: 2279, type: !551, isLocal: true, isDefinition: true, variable: %struct._typeobject* @product_type)
!2583 = !DIGlobalVariable(name: "product_doc", scope: !0, file: !1, line: 2265, type: !2584, isLocal: true, isDefinition: true, variable: [732 x i8]* @product_doc)
!2584 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 5856, align: 8, elements: !2585)
!2585 = !{!2586}
!2586 = !DISubrange(count: 732)
!2587 = !DIGlobalVariable(name: "product_methods", scope: !0, file: !1, line: 2255, type: !2493, isLocal: true, isDefinition: true, variable: [4 x %struct.PyMethodDef]* @product_methods)
!2588 = !DIGlobalVariable(name: "repeat_type", scope: !0, file: !1, line: 4201, type: !551, isLocal: true, isDefinition: true, variable: %struct._typeobject* @repeat_type)
!2589 = !DIGlobalVariable(name: "repeat_doc", scope: !0, file: !1, line: 4196, type: !2590, isLocal: true, isDefinition: true, variable: [155 x i8]* @repeat_doc)
!2590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 1240, align: 8, elements: !2591)
!2591 = !{!2592}
!2592 = !DISubrange(count: 155)
!2593 = !DIGlobalVariable(name: "repeat_methods", scope: !0, file: !1, line: 4190, type: !2473, isLocal: true, isDefinition: true, variable: [3 x %struct.PyMethodDef]* @repeat_methods)
!2594 = !DIGlobalVariable(name: "length_hint_doc", scope: !0, file: !1, line: 4176, type: !2595, isLocal: true, isDefinition: true, variable: [55 x i8]* @length_hint_doc)
!2595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 440, align: 8, elements: !2596)
!2596 = !{!2597}
!2597 = !DISubrange(count: 55)
!2598 = !DIGlobalVariable(name: "kwargs", scope: !2052, file: !1, line: 4113, type: !2486, isLocal: true, isDefinition: true, variable: [3 x i8*]* @repeat_new.kwargs)
!2599 = !DIGlobalVariable(name: "groupby_type", scope: !0, file: !1, line: 188, type: !551, isLocal: true, isDefinition: true, variable: %struct._typeobject* @groupby_type)
!2600 = !DIGlobalVariable(name: "groupby_doc", scope: !0, file: !1, line: 184, type: !2601, isLocal: true, isDefinition: true, variable: [123 x i8]* @groupby_doc)
!2601 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 984, align: 8, elements: !2602)
!2602 = !{!2603}
!2603 = !DISubrange(count: 123)
!2604 = !DIGlobalVariable(name: "groupby_methods", scope: !0, file: !1, line: 176, type: !2473, isLocal: true, isDefinition: true, variable: [3 x %struct.PyMethodDef]* @groupby_methods)
!2605 = !DIGlobalVariable(name: "kwargs", scope: !2193, file: !1, line: 29, type: !2486, isLocal: true, isDefinition: true, variable: [3 x i8*]* @groupby_new.kwargs)
!2606 = !DIGlobalVariable(name: "_grouper_type", scope: !0, file: !1, line: 344, type: !551, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_grouper_type)
!2607 = !DIGlobalVariable(name: "_grouper_methods", scope: !0, file: !1, line: 337, type: !2538, isLocal: true, isDefinition: true, variable: [2 x %struct.PyMethodDef]* @_grouper_methods)
!2608 = !DIGlobalVariable(name: "tee_type", scope: !0, file: !1, line: 768, type: !551, isLocal: true, isDefinition: true, variable: %struct._typeobject* @tee_type)
!2609 = !DIGlobalVariable(name: "teeobject_doc", scope: !0, file: !1, line: 758, type: !2610, isLocal: true, isDefinition: true, variable: [37 x i8]* @teeobject_doc)
!2610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 296, align: 8, elements: !2611)
!2611 = !{!2612}
!2612 = !DISubrange(count: 37)
!2613 = !DIGlobalVariable(name: "tee_methods", scope: !0, file: !1, line: 761, type: !2493, isLocal: true, isDefinition: true, variable: [4 x %struct.PyMethodDef]* @tee_methods)
!2614 = !DIGlobalVariable(name: "teecopy_doc", scope: !0, file: !1, line: 673, type: !2615, isLocal: true, isDefinition: true, variable: [33 x i8]* @teecopy_doc)
!2615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 264, align: 8, elements: !2616)
!2616 = !{!2617}
!2617 = !DISubrange(count: 33)
!2618 = !DIGlobalVariable(name: "teedataobject_type", scope: !0, file: !1, line: 584, type: !551, isLocal: true, isDefinition: true, variable: %struct._typeobject* @teedataobject_type)
!2619 = !DIGlobalVariable(name: "teedataobject_doc", scope: !0, file: !1, line: 582, type: !2620, isLocal: true, isDefinition: true, variable: [47 x i8]* @teedataobject_doc)
!2620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 376, align: 8, elements: !2621)
!2621 = !{!2622}
!2622 = !DISubrange(count: 47)
!2623 = !DIGlobalVariable(name: "teedataobject_methods", scope: !0, file: !1, line: 576, type: !2538, isLocal: true, isDefinition: true, variable: [2 x %struct.PyMethodDef]* @teedataobject_methods)
!2624 = !DIGlobalVariable(name: "itertoolsmodule", scope: !0, file: !1, line: 4555, type: !2625, isLocal: true, isDefinition: true, variable: %struct.PyModuleDef* @itertoolsmodule)
!2625 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyModuleDef", file: !2626, line: 47, size: 832, align: 64, elements: !2627)
!2626 = !DIFile(filename: "Include/moduleobject.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!2627 = !{!2628, !2637, !2638, !2639, !2640, !2642, !2643, !2644, !2645}
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "m_base", scope: !2625, file: !2626, line: 48, baseType: !2629, size: 320, align: 64)
!2629 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyModuleDef_Base", file: !2626, line: 38, baseType: !2630)
!2630 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyModuleDef_Base", file: !2626, line: 33, size: 320, align: 64, elements: !2631)
!2631 = !{!2632, !2633, !2635, !2636}
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !2630, file: !2626, line: 34, baseType: !5, size: 128, align: 64)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "m_init", scope: !2630, file: !2626, line: 35, baseType: !2634, size: 64, align: 64, offset: 128)
!2634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64, align: 64)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "m_index", scope: !2630, file: !2626, line: 36, baseType: !10, size: 64, align: 64, offset: 192)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "m_copy", scope: !2630, file: !2626, line: 37, baseType: !4, size: 64, align: 64, offset: 256)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "m_name", scope: !2625, file: !2626, line: 49, baseType: !28, size: 64, align: 64, offset: 320)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "m_doc", scope: !2625, file: !2626, line: 50, baseType: !28, size: 64, align: 64, offset: 384)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !2625, file: !2626, line: 51, baseType: !10, size: 64, align: 64, offset: 448)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "m_methods", scope: !2625, file: !2626, line: 52, baseType: !2641, size: 64, align: 64, offset: 512)
!2641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2474, size: 64, align: 64)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "m_reload", scope: !2625, file: !2626, line: 53, baseType: !142, size: 64, align: 64, offset: 576)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "m_traverse", scope: !2625, file: !2626, line: 54, baseType: !259, size: 64, align: 64, offset: 640)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "m_clear", scope: !2625, file: !2626, line: 55, baseType: !142, size: 64, align: 64, offset: 704)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "m_free", scope: !2625, file: !2626, line: 56, baseType: !336, size: 64, align: 64, offset: 768)
!2646 = !DIGlobalVariable(name: "module_doc", scope: !0, file: !1, line: 4518, type: !2647, isLocal: true, isDefinition: true, variable: [1229 x i8]* @module_doc)
!2647 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 9832, align: 8, elements: !2648)
!2648 = !{!2649}
!2649 = !DISubrange(count: 1229)
!2650 = !DIGlobalVariable(name: "module_methods", scope: !0, file: !1, line: 4549, type: !2538, isLocal: true, isDefinition: true, variable: [2 x %struct.PyMethodDef]* @module_methods)
!2651 = !DIGlobalVariable(name: "PyId___copy__", scope: !2437, file: !1, line: 816, type: !2652, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @tee.PyId___copy__)
!2652 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Py_Identifier", file: !6, line: 144, baseType: !2653)
!2653 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Py_Identifier", file: !6, line: 140, size: 192, align: 64, elements: !2654)
!2654 = !{!2655, !2657, !2658}
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2653, file: !6, line: 141, baseType: !2656, size: 64, align: 64)
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2653, size: 64, align: 64)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !2653, file: !6, line: 142, baseType: !28, size: 64, align: 64, offset: 64)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2653, file: !6, line: 143, baseType: !4, size: 64, align: 64, offset: 128)
!2659 = !DIGlobalVariable(name: "tee_doc", scope: !0, file: !1, line: 856, type: !2660, isLocal: true, isDefinition: true, variable: [57 x i8]* @tee_doc)
!2660 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 456, align: 8, elements: !521)
!2661 = !{i32 2, !"Dwarf Version", i32 4}
!2662 = !{i32 2, !"Debug Info Version", i32 3}
!2663 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
!2664 = !DIExpression()
!2665 = !DILocation(line: 4573, column: 19, scope: !541)
!2666 = !DILocation(line: 4597, column: 34, scope: !541)
!2667 = !{!2668, !2672, i64 8}
!2668 = !{!"_object", !2669, i64 0, !2672, i64 8}
!2669 = !{!"long", !2670, i64 0}
!2670 = !{!"omnipotent char", !2671, i64 0}
!2671 = !{!"Simple C/C++ TBAA"}
!2672 = !{!"any pointer", !2670, i64 0}
!2673 = !DILocation(line: 4598, column: 9, scope: !541)
!2674 = !DILocation(line: 4571, column: 15, scope: !541)
!2675 = !DILocation(line: 4599, column: 11, scope: !2676)
!2676 = distinct !DILexicalBlock(scope: !541, file: !1, line: 4599, column: 9)
!2677 = !DILocation(line: 4599, column: 9, scope: !541)
!2678 = !DILocation(line: 4602, column: 16, scope: !2679)
!2679 = distinct !DILexicalBlock(scope: !2680, file: !1, line: 4602, column: 5)
!2680 = distinct !DILexicalBlock(scope: !541, file: !1, line: 4602, column: 5)
!2681 = !{!2672, !2672, i64 0}
!2682 = !DILocation(line: 4603, column: 13, scope: !2683)
!2683 = distinct !DILexicalBlock(scope: !2684, file: !1, line: 4603, column: 13)
!2684 = distinct !DILexicalBlock(scope: !2679, file: !1, line: 4602, column: 43)
!2685 = !DILocation(line: 4603, column: 39, scope: !2683)
!2686 = !DILocation(line: 4603, column: 13, scope: !2684)
!2687 = !DILocation(line: 4605, column: 16, scope: !2684)
!2688 = !{!2689, !2672, i64 24}
!2689 = !{!"_typeobject", !2690, i64 0, !2672, i64 24, !2669, i64 32, !2669, i64 40, !2672, i64 48, !2672, i64 56, !2672, i64 64, !2672, i64 72, !2672, i64 80, !2672, i64 88, !2672, i64 96, !2672, i64 104, !2672, i64 112, !2672, i64 120, !2672, i64 128, !2672, i64 136, !2672, i64 144, !2672, i64 152, !2672, i64 160, !2669, i64 168, !2672, i64 176, !2672, i64 184, !2672, i64 192, !2672, i64 200, !2669, i64 208, !2672, i64 216, !2672, i64 224, !2672, i64 232, !2672, i64 240, !2672, i64 248, !2672, i64 256, !2672, i64 264, !2672, i64 272, !2672, i64 280, !2669, i64 288, !2672, i64 296, !2672, i64 304, !2672, i64 312, !2672, i64 320, !2672, i64 328, !2672, i64 336, !2672, i64 344, !2672, i64 352, !2672, i64 360, !2672, i64 368, !2672, i64 376, !2691, i64 384, !2672, i64 392}
!2690 = !{!"", !2668, i64 0, !2669, i64 16}
!2691 = !{!"int", !2670, i64 0}
!2692 = !DILocation(line: 4572, column: 11, scope: !541)
!2693 = !DILocation(line: 4607, column: 9, scope: !2684)
!2694 = !{!2668, !2669, i64 0}
!2695 = !DILocation(line: 4608, column: 35, scope: !2684)
!2696 = !DILocation(line: 4608, column: 51, scope: !2684)
!2697 = !DILocation(line: 4608, column: 9, scope: !2684)
!2698 = !DILocation(line: 4602, column: 5, scope: !2680)
!2699 = !DILocation(line: 4602, column: 28, scope: !2679)
!2700 = !DILocation(line: 4612, column: 1, scope: !541)
!2701 = !DILocation(line: 3407, column: 38, scope: !554)
!2702 = !DILocation(line: 3409, column: 25, scope: !554)
!2703 = !DILocation(line: 3409, column: 5, scope: !554)
!2704 = !DILocation(line: 3410, column: 5, scope: !2705)
!2705 = !DILexicalBlockFile(scope: !560, file: !1, discriminator: 1)
!2706 = !{!2707, !2672, i64 32}
!2707 = !{!"", !2668, i64 0, !2672, i64 16, !2672, i64 24, !2672, i64 32}
!2708 = !DILocation(line: 3410, column: 5, scope: !563)
!2709 = !DILocation(line: 3410, column: 5, scope: !560)
!2710 = !DILocation(line: 3410, column: 5, scope: !2711)
!2711 = !DILexicalBlockFile(scope: !562, file: !1, discriminator: 4)
!2712 = !DILocation(line: 3410, column: 5, scope: !2713)
!2713 = distinct !DILexicalBlock(scope: !562, file: !1, line: 3410, column: 5)
!2714 = !DILocation(line: 3410, column: 5, scope: !562)
!2715 = !DILocation(line: 3410, column: 5, scope: !2716)
!2716 = !DILexicalBlockFile(scope: !2713, file: !1, discriminator: 6)
!2717 = !{!2689, !2672, i64 48}
!2718 = !DILocation(line: 3411, column: 5, scope: !2719)
!2719 = !DILexicalBlockFile(scope: !565, file: !1, discriminator: 1)
!2720 = !{!2707, !2672, i64 16}
!2721 = !DILocation(line: 3411, column: 5, scope: !568)
!2722 = !DILocation(line: 3411, column: 5, scope: !565)
!2723 = !DILocation(line: 3411, column: 5, scope: !2724)
!2724 = !DILexicalBlockFile(scope: !567, file: !1, discriminator: 4)
!2725 = !DILocation(line: 3411, column: 5, scope: !2726)
!2726 = distinct !DILexicalBlock(scope: !567, file: !1, line: 3411, column: 5)
!2727 = !DILocation(line: 3411, column: 5, scope: !567)
!2728 = !DILocation(line: 3411, column: 5, scope: !2729)
!2729 = !DILexicalBlockFile(scope: !2726, file: !1, discriminator: 6)
!2730 = !DILocation(line: 3412, column: 5, scope: !2731)
!2731 = !DILexicalBlockFile(scope: !570, file: !1, discriminator: 1)
!2732 = !{!2707, !2672, i64 24}
!2733 = !DILocation(line: 3412, column: 5, scope: !573)
!2734 = !DILocation(line: 3412, column: 5, scope: !570)
!2735 = !DILocation(line: 3412, column: 5, scope: !2736)
!2736 = !DILexicalBlockFile(scope: !572, file: !1, discriminator: 4)
!2737 = !DILocation(line: 3412, column: 5, scope: !2738)
!2738 = distinct !DILexicalBlock(scope: !572, file: !1, line: 3412, column: 5)
!2739 = !DILocation(line: 3412, column: 5, scope: !572)
!2740 = !DILocation(line: 3412, column: 5, scope: !2741)
!2741 = !DILexicalBlockFile(scope: !2738, file: !1, discriminator: 6)
!2742 = !DILocation(line: 3413, column: 5, scope: !554)
!2743 = !DILocation(line: 3413, column: 18, scope: !554)
!2744 = !{!2689, !2672, i64 320}
!2745 = !DILocation(line: 3414, column: 1, scope: !554)
!2746 = !DILocation(line: 3417, column: 39, scope: !574)
!2747 = !DILocation(line: 3417, column: 53, scope: !574)
!2748 = !DILocation(line: 3417, column: 66, scope: !574)
!2749 = !DILocation(line: 3419, column: 5, scope: !2750)
!2750 = !DILexicalBlockFile(scope: !583, file: !1, discriminator: 1)
!2751 = !DILocation(line: 3419, column: 5, scope: !584)
!2752 = !DILocation(line: 3419, column: 5, scope: !2753)
!2753 = !DILexicalBlockFile(scope: !582, file: !1, discriminator: 2)
!2754 = !DILocation(line: 3419, column: 5, scope: !2755)
!2755 = distinct !DILexicalBlock(scope: !582, file: !1, line: 3419, column: 5)
!2756 = !DILocation(line: 3420, column: 5, scope: !2757)
!2757 = !DILexicalBlockFile(scope: !587, file: !1, discriminator: 1)
!2758 = !DILocation(line: 3420, column: 5, scope: !588)
!2759 = !DILocation(line: 3420, column: 5, scope: !2760)
!2760 = !DILexicalBlockFile(scope: !586, file: !1, discriminator: 2)
!2761 = !DILocation(line: 3420, column: 5, scope: !2762)
!2762 = distinct !DILexicalBlock(scope: !586, file: !1, line: 3420, column: 5)
!2763 = !DILocation(line: 3421, column: 5, scope: !2764)
!2764 = !DILexicalBlockFile(scope: !591, file: !1, discriminator: 1)
!2765 = !DILocation(line: 3421, column: 5, scope: !592)
!2766 = !DILocation(line: 3421, column: 5, scope: !2767)
!2767 = !DILexicalBlockFile(scope: !590, file: !1, discriminator: 2)
!2768 = !DILocation(line: 3421, column: 5, scope: !2769)
!2769 = distinct !DILexicalBlock(scope: !590, file: !1, line: 3421, column: 5)
!2770 = !DILocation(line: 3422, column: 5, scope: !574)
!2771 = !DILocation(line: 3423, column: 1, scope: !574)
!2772 = !DILocation(line: 3426, column: 35, scope: !593)
!2773 = !DILocation(line: 3430, column: 27, scope: !593)
!2774 = !DILocation(line: 3430, column: 11, scope: !593)
!2775 = !DILocation(line: 3428, column: 15, scope: !593)
!2776 = !DILocation(line: 3431, column: 13, scope: !2777)
!2777 = distinct !DILexicalBlock(scope: !593, file: !1, line: 3431, column: 9)
!2778 = !DILocation(line: 3431, column: 9, scope: !593)
!2779 = !DILocation(line: 3434, column: 13, scope: !2780)
!2780 = distinct !DILexicalBlock(scope: !593, file: !1, line: 3434, column: 9)
!2781 = !DILocation(line: 3434, column: 19, scope: !2780)
!2782 = !DILocation(line: 3434, column: 9, scope: !593)
!2783 = !DILocation(line: 3435, column: 9, scope: !2784)
!2784 = distinct !DILexicalBlock(scope: !2780, file: !1, line: 3434, column: 28)
!2785 = !DILocation(line: 3436, column: 19, scope: !2784)
!2786 = !DILocation(line: 3437, column: 9, scope: !2784)
!2787 = !DILocation(line: 3440, column: 13, scope: !2788)
!2788 = distinct !DILexicalBlock(scope: !593, file: !1, line: 3440, column: 9)
!2789 = !DILocation(line: 3440, column: 19, scope: !2788)
!2790 = !DILocation(line: 3440, column: 9, scope: !593)
!2791 = !DILocation(line: 3441, column: 20, scope: !2788)
!2792 = !DILocation(line: 3428, column: 32, scope: !593)
!2793 = !DILocation(line: 3441, column: 9, scope: !2788)
!2794 = !DILocation(line: 3443, column: 20, scope: !2788)
!2795 = !DILocation(line: 3444, column: 5, scope: !2796)
!2796 = !DILexicalBlockFile(scope: !602, file: !1, discriminator: 1)
!2797 = !DILocation(line: 3444, column: 5, scope: !2798)
!2798 = distinct !DILexicalBlock(scope: !602, file: !1, line: 3444, column: 5)
!2799 = !DILocation(line: 3444, column: 5, scope: !602)
!2800 = !DILocation(line: 3444, column: 5, scope: !2801)
!2801 = !DILexicalBlockFile(scope: !2798, file: !1, discriminator: 3)
!2802 = !DILocation(line: 3445, column: 18, scope: !2803)
!2803 = distinct !DILexicalBlock(scope: !593, file: !1, line: 3445, column: 9)
!2804 = !DILocation(line: 3445, column: 9, scope: !593)
!2805 = !DILocation(line: 3448, column: 20, scope: !593)
!2806 = !DILocation(line: 3428, column: 21, scope: !593)
!2807 = !DILocation(line: 3449, column: 15, scope: !593)
!2808 = !DILocation(line: 3450, column: 5, scope: !2809)
!2809 = !DILexicalBlockFile(scope: !604, file: !1, discriminator: 1)
!2810 = !DILocation(line: 3450, column: 5, scope: !2811)
!2811 = distinct !DILexicalBlock(scope: !604, file: !1, line: 3450, column: 5)
!2812 = !DILocation(line: 3450, column: 5, scope: !604)
!2813 = !DILocation(line: 3450, column: 5, scope: !2814)
!2814 = !DILexicalBlockFile(scope: !2811, file: !1, discriminator: 3)
!2815 = !DILocation(line: 3452, column: 5, scope: !593)
!2816 = !DILocation(line: 3453, column: 5, scope: !593)
!2817 = !DILocation(line: 3454, column: 1, scope: !593)
!2818 = !DILocation(line: 3373, column: 30, scope: !620)
!2819 = !DILocation(line: 3373, column: 46, scope: !620)
!2820 = !DILocation(line: 3373, column: 62, scope: !620)
!2821 = !DILocation(line: 3376, column: 5, scope: !620)
!2822 = !DILocation(line: 3378, column: 5, scope: !620)
!2823 = !DILocation(line: 3378, column: 15, scope: !620)
!2824 = !DILocation(line: 3376, column: 15, scope: !620)
!2825 = !DILocation(line: 3381, column: 10, scope: !2826)
!2826 = distinct !DILexicalBlock(scope: !620, file: !1, line: 3381, column: 9)
!2827 = !DILocation(line: 3381, column: 9, scope: !620)
!2828 = !DILocation(line: 3386, column: 27, scope: !620)
!2829 = !DILocation(line: 3386, column: 10, scope: !620)
!2830 = !DILocation(line: 3377, column: 15, scope: !620)
!2831 = !DILocation(line: 3387, column: 12, scope: !2832)
!2832 = distinct !DILexicalBlock(scope: !620, file: !1, line: 3387, column: 9)
!2833 = !DILocation(line: 3387, column: 9, scope: !620)
!2834 = !DILocation(line: 3391, column: 36, scope: !620)
!2835 = !{!2689, !2672, i64 304}
!2836 = !DILocation(line: 3391, column: 30, scope: !620)
!2837 = !DILocation(line: 3392, column: 12, scope: !634)
!2838 = !DILocation(line: 3392, column: 9, scope: !620)
!2839 = !DILocation(line: 3393, column: 9, scope: !2840)
!2840 = !DILexicalBlockFile(scope: !632, file: !1, discriminator: 1)
!2841 = !DILocation(line: 3393, column: 9, scope: !2842)
!2842 = distinct !DILexicalBlock(scope: !632, file: !1, line: 3393, column: 9)
!2843 = !DILocation(line: 3393, column: 9, scope: !632)
!2844 = !DILocation(line: 3393, column: 9, scope: !2845)
!2845 = !DILexicalBlockFile(scope: !2842, file: !1, discriminator: 3)
!2846 = !DILocation(line: 3397, column: 9, scope: !638)
!2847 = !DILocation(line: 3397, column: 15, scope: !638)
!2848 = !DILocation(line: 3399, column: 21, scope: !637)
!2849 = !DILocation(line: 3397, column: 9, scope: !620)
!2850 = !DILocation(line: 3398, column: 9, scope: !2851)
!2851 = !DILexicalBlockFile(scope: !636, file: !1, discriminator: 1)
!2852 = !DILocation(line: 3398, column: 9, scope: !2853)
!2853 = distinct !DILexicalBlock(scope: !636, file: !1, line: 3398, column: 9)
!2854 = !DILocation(line: 3398, column: 9, scope: !636)
!2855 = !DILocation(line: 3398, column: 9, scope: !2856)
!2856 = !DILexicalBlockFile(scope: !2853, file: !1, discriminator: 2)
!2857 = !DILocation(line: 3399, column: 19, scope: !637)
!2858 = !DILocation(line: 3400, column: 5, scope: !637)
!2859 = !DILocation(line: 3401, column: 9, scope: !620)
!2860 = !DILocation(line: 3401, column: 15, scope: !620)
!2861 = !DILocation(line: 3402, column: 9, scope: !620)
!2862 = !DILocation(line: 3402, column: 12, scope: !620)
!2863 = !DILocation(line: 3403, column: 5, scope: !620)
!2864 = !DILocation(line: 3404, column: 1, scope: !620)
!2865 = !DILocation(line: 3457, column: 37, scope: !605)
!2866 = !DILocation(line: 3459, column: 36, scope: !605)
!2867 = !DILocation(line: 3460, column: 33, scope: !605)
!2868 = !DILocation(line: 3460, column: 41, scope: !605)
!2869 = !DILocation(line: 3460, column: 37, scope: !605)
!2870 = !DILocation(line: 3461, column: 33, scope: !605)
!2871 = !DILocation(line: 3461, column: 29, scope: !605)
!2872 = !DILocation(line: 3459, column: 12, scope: !605)
!2873 = !DILocation(line: 3459, column: 5, scope: !605)
!2874 = !DILocation(line: 3465, column: 39, scope: !608)
!2875 = !DILocation(line: 3465, column: 53, scope: !608)
!2876 = !DILocation(line: 3467, column: 5, scope: !2877)
!2877 = !DILexicalBlockFile(scope: !615, file: !1, discriminator: 1)
!2878 = !DILocation(line: 3467, column: 5, scope: !619)
!2879 = !DILocation(line: 3467, column: 5, scope: !615)
!2880 = !DILocation(line: 3467, column: 5, scope: !2881)
!2881 = !DILexicalBlockFile(scope: !618, file: !1, discriminator: 2)
!2882 = !DILocation(line: 3467, column: 5, scope: !2883)
!2883 = !DILexicalBlockFile(scope: !617, file: !1, discriminator: 4)
!2884 = !DILocation(line: 3467, column: 5, scope: !2885)
!2885 = distinct !DILexicalBlock(scope: !617, file: !1, line: 3467, column: 5)
!2886 = !DILocation(line: 3467, column: 5, scope: !617)
!2887 = !DILocation(line: 3467, column: 5, scope: !2888)
!2888 = !DILexicalBlockFile(scope: !2885, file: !1, discriminator: 6)
!2889 = !DILocation(line: 3468, column: 15, scope: !608)
!2890 = !DILocation(line: 3469, column: 5, scope: !608)
!2891 = !DILocation(line: 3470, column: 5, scope: !608)
!2892 = !DILocation(line: 2392, column: 42, scope: !639)
!2893 = !DILocation(line: 2394, column: 25, scope: !639)
!2894 = !DILocation(line: 2394, column: 5, scope: !639)
!2895 = !DILocation(line: 2395, column: 5, scope: !2896)
!2896 = !DILexicalBlockFile(scope: !645, file: !1, discriminator: 1)
!2897 = !{!2898, !2672, i64 16}
!2898 = !{!"", !2668, i64 0, !2672, i64 16, !2672, i64 24, !2672, i64 32, !2669, i64 40, !2691, i64 48}
!2899 = !DILocation(line: 2395, column: 5, scope: !648)
!2900 = !DILocation(line: 2395, column: 5, scope: !645)
!2901 = !DILocation(line: 2395, column: 5, scope: !2902)
!2902 = !DILexicalBlockFile(scope: !647, file: !1, discriminator: 4)
!2903 = !DILocation(line: 2395, column: 5, scope: !2904)
!2904 = distinct !DILexicalBlock(scope: !647, file: !1, line: 2395, column: 5)
!2905 = !DILocation(line: 2395, column: 5, scope: !647)
!2906 = !DILocation(line: 2395, column: 5, scope: !2907)
!2907 = !DILexicalBlockFile(scope: !2904, file: !1, discriminator: 6)
!2908 = !DILocation(line: 2396, column: 5, scope: !2909)
!2909 = !DILexicalBlockFile(scope: !650, file: !1, discriminator: 1)
!2910 = !{!2898, !2672, i64 32}
!2911 = !DILocation(line: 2396, column: 5, scope: !653)
!2912 = !DILocation(line: 2396, column: 5, scope: !650)
!2913 = !DILocation(line: 2396, column: 5, scope: !2914)
!2914 = !DILexicalBlockFile(scope: !652, file: !1, discriminator: 4)
!2915 = !DILocation(line: 2396, column: 5, scope: !2916)
!2916 = distinct !DILexicalBlock(scope: !652, file: !1, line: 2396, column: 5)
!2917 = !DILocation(line: 2396, column: 5, scope: !652)
!2918 = !DILocation(line: 2396, column: 5, scope: !2919)
!2919 = !DILexicalBlockFile(scope: !2916, file: !1, discriminator: 6)
!2920 = !DILocation(line: 2397, column: 13, scope: !2921)
!2921 = distinct !DILexicalBlock(scope: !639, file: !1, line: 2397, column: 9)
!2922 = !{!2898, !2672, i64 24}
!2923 = !DILocation(line: 2397, column: 21, scope: !2921)
!2924 = !DILocation(line: 2397, column: 9, scope: !639)
!2925 = !DILocation(line: 2398, column: 20, scope: !2921)
!2926 = !DILocation(line: 2398, column: 9, scope: !2921)
!2927 = !DILocation(line: 2399, column: 5, scope: !639)
!2928 = !DILocation(line: 2399, column: 18, scope: !639)
!2929 = !DILocation(line: 2400, column: 1, scope: !639)
!2930 = !DILocation(line: 2413, column: 43, scope: !654)
!2931 = !DILocation(line: 2413, column: 57, scope: !654)
!2932 = !DILocation(line: 2413, column: 70, scope: !654)
!2933 = !DILocation(line: 2415, column: 5, scope: !2934)
!2934 = !DILexicalBlockFile(scope: !663, file: !1, discriminator: 1)
!2935 = !DILocation(line: 2415, column: 5, scope: !664)
!2936 = !DILocation(line: 2415, column: 5, scope: !2937)
!2937 = !DILexicalBlockFile(scope: !662, file: !1, discriminator: 2)
!2938 = !DILocation(line: 2415, column: 5, scope: !2939)
!2939 = distinct !DILexicalBlock(scope: !662, file: !1, line: 2415, column: 5)
!2940 = !DILocation(line: 2416, column: 5, scope: !2941)
!2941 = !DILexicalBlockFile(scope: !667, file: !1, discriminator: 1)
!2942 = !DILocation(line: 2416, column: 5, scope: !668)
!2943 = !DILocation(line: 2416, column: 5, scope: !2944)
!2944 = !DILexicalBlockFile(scope: !666, file: !1, discriminator: 2)
!2945 = !DILocation(line: 2416, column: 5, scope: !2946)
!2946 = distinct !DILexicalBlock(scope: !666, file: !1, line: 2416, column: 5)
!2947 = !DILocation(line: 2417, column: 5, scope: !654)
!2948 = !DILocation(line: 2418, column: 1, scope: !654)
!2949 = !DILocation(line: 2421, column: 39, scope: !669)
!2950 = !DILocation(line: 2425, column: 26, scope: !669)
!2951 = !DILocation(line: 2425, column: 15, scope: !669)
!2952 = !DILocation(line: 2426, column: 31, scope: !669)
!2953 = !DILocation(line: 2426, column: 17, scope: !669)
!2954 = !DILocation(line: 2427, column: 28, scope: !669)
!2955 = !DILocation(line: 2427, column: 15, scope: !669)
!2956 = !DILocation(line: 2428, column: 20, scope: !669)
!2957 = !{!2690, !2669, i64 16}
!2958 = !DILocation(line: 2428, column: 16, scope: !669)
!2959 = !DILocation(line: 2429, column: 24, scope: !669)
!2960 = !{!2898, !2669, i64 40}
!2961 = !DILocation(line: 2429, column: 16, scope: !669)
!2962 = !DILocation(line: 2432, column: 13, scope: !2963)
!2963 = distinct !DILexicalBlock(scope: !669, file: !1, line: 2432, column: 9)
!2964 = !{!2898, !2691, i64 48}
!2965 = !DILocation(line: 2432, column: 9, scope: !2963)
!2966 = !DILocation(line: 2432, column: 9, scope: !669)
!2967 = !DILocation(line: 2435, column: 16, scope: !688)
!2968 = !DILocation(line: 2435, column: 9, scope: !669)
!2969 = !DILocation(line: 2437, column: 18, scope: !2970)
!2970 = distinct !DILexicalBlock(scope: !688, file: !1, line: 2435, column: 25)
!2971 = !DILocation(line: 2438, column: 20, scope: !2972)
!2972 = distinct !DILexicalBlock(scope: !2970, file: !1, line: 2438, column: 13)
!2973 = !DILocation(line: 2438, column: 13, scope: !2970)
!2974 = !DILocation(line: 2440, column: 20, scope: !2970)
!2975 = !DILocation(line: 2430, column: 16, scope: !669)
!2976 = !DILocation(line: 2441, column: 20, scope: !2977)
!2977 = distinct !DILexicalBlock(scope: !2978, file: !1, line: 2441, column: 9)
!2978 = distinct !DILexicalBlock(scope: !2970, file: !1, line: 2441, column: 9)
!2979 = !DILocation(line: 2441, column: 9, scope: !2978)
!2980 = !DILocation(line: 2443, column: 20, scope: !2981)
!2981 = distinct !DILexicalBlock(scope: !2977, file: !1, line: 2441, column: 30)
!2982 = !DILocation(line: 2445, column: 13, scope: !2981)
!2983 = !DILocation(line: 2442, column: 21, scope: !2981)
!2984 = !{!2669, !2669, i64 0}
!2985 = !DILocation(line: 2430, column: 22, scope: !669)
!2986 = !DILocation(line: 2423, column: 15, scope: !669)
!2987 = !DILocation(line: 2444, column: 13, scope: !2981)
!2988 = !DILocation(line: 2441, column: 26, scope: !2977)
!2989 = !DILocation(line: 2449, column: 13, scope: !686)
!2990 = !DILocation(line: 2449, column: 31, scope: !686)
!2991 = !DILocation(line: 2449, column: 13, scope: !687)
!2992 = !DILocation(line: 2450, column: 23, scope: !685)
!2993 = !DILocation(line: 2451, column: 22, scope: !685)
!2994 = !DILocation(line: 2452, column: 24, scope: !2995)
!2995 = distinct !DILexicalBlock(scope: !685, file: !1, line: 2452, column: 17)
!2996 = !DILocation(line: 2452, column: 17, scope: !685)
!2997 = !DILocation(line: 2454, column: 24, scope: !685)
!2998 = !DILocation(line: 2455, column: 24, scope: !2999)
!2999 = distinct !DILexicalBlock(scope: !3000, file: !1, line: 2455, column: 13)
!3000 = distinct !DILexicalBlock(scope: !685, file: !1, line: 2455, column: 13)
!3001 = !DILocation(line: 2455, column: 13, scope: !3000)
!3002 = !DILocation(line: 2456, column: 24, scope: !3003)
!3003 = distinct !DILexicalBlock(scope: !2999, file: !1, line: 2455, column: 34)
!3004 = !DILocation(line: 2458, column: 17, scope: !3003)
!3005 = !DILocation(line: 2457, column: 17, scope: !3003)
!3006 = !DILocation(line: 2455, column: 30, scope: !2999)
!3007 = !DILocation(line: 2460, column: 13, scope: !3008)
!3008 = !DILexicalBlockFile(scope: !690, file: !1, discriminator: 1)
!3009 = !DILocation(line: 2460, column: 13, scope: !3010)
!3010 = distinct !DILexicalBlock(scope: !690, file: !1, line: 2460, column: 13)
!3011 = !DILocation(line: 2460, column: 13, scope: !690)
!3012 = !DILocation(line: 2460, column: 13, scope: !3013)
!3013 = !DILexicalBlockFile(scope: !3010, file: !1, discriminator: 3)
!3014 = !DILocation(line: 2470, column: 47, scope: !3015)
!3015 = distinct !DILexicalBlock(scope: !3016, file: !1, line: 2470, column: 9)
!3016 = distinct !DILexicalBlock(scope: !687, file: !1, line: 2470, column: 9)
!3017 = !DILocation(line: 2470, column: 14, scope: !3016)
!3018 = !DILocation(line: 2470, column: 17, scope: !3016)
!3019 = !DILocation(line: 2470, column: 24, scope: !3015)
!3020 = !DILocation(line: 2470, column: 29, scope: !3015)
!3021 = !DILocation(line: 2470, column: 32, scope: !3015)
!3022 = !DILocation(line: 2482, column: 19, scope: !687)
!3023 = !DILocation(line: 2470, column: 49, scope: !3015)
!3024 = !DILocation(line: 2470, column: 43, scope: !3015)
!3025 = !DILocation(line: 2470, column: 9, scope: !3026)
!3026 = !DILexicalBlockFile(scope: !3016, file: !1, discriminator: 3)
!3027 = !DILocation(line: 2430, column: 19, scope: !669)
!3028 = !DILocation(line: 2483, column: 23, scope: !3029)
!3029 = distinct !DILexicalBlock(scope: !3030, file: !1, line: 2483, column: 9)
!3030 = distinct !DILexicalBlock(scope: !687, file: !1, line: 2483, column: 9)
!3031 = !DILocation(line: 2483, column: 9, scope: !3030)
!3032 = !DILocation(line: 2484, column: 39, scope: !3029)
!3033 = !DILocation(line: 2483, column: 29, scope: !3029)
!3034 = !DILocation(line: 2484, column: 26, scope: !3029)
!3035 = !DILocation(line: 2484, column: 13, scope: !3029)
!3036 = !DILocation(line: 2484, column: 24, scope: !3029)
!3037 = distinct !{!3037, !3038, !3039}
!3038 = !{!"llvm.loop.vectorize.width", i32 1}
!3039 = !{!"llvm.loop.interleave.count", i32 1}
!3040 = !DILocation(line: 2488, column: 18, scope: !694)
!3041 = !DILocation(line: 2488, column: 9, scope: !695)
!3042 = !DILocation(line: 2490, column: 20, scope: !693)
!3043 = !DILocation(line: 2492, column: 23, scope: !693)
!3044 = distinct !{!3044, !3045, !3038, !3039}
!3045 = !{!"llvm.loop.unroll.runtime.disable"}
!3046 = !DILocation(line: 2489, column: 21, scope: !693)
!3047 = !DILocation(line: 2491, column: 13, scope: !693)
!3048 = !DILocation(line: 2424, column: 15, scope: !669)
!3049 = !DILocation(line: 2493, column: 13, scope: !693)
!3050 = !DILocation(line: 2494, column: 13, scope: !3051)
!3051 = !DILexicalBlockFile(scope: !692, file: !1, discriminator: 1)
!3052 = !DILocation(line: 2494, column: 13, scope: !3053)
!3053 = distinct !DILexicalBlock(scope: !692, file: !1, line: 2494, column: 13)
!3054 = !DILocation(line: 2494, column: 13, scope: !692)
!3055 = !DILocation(line: 2494, column: 13, scope: !3056)
!3056 = !DILexicalBlockFile(scope: !3053, file: !1, discriminator: 3)
!3057 = !DILocation(line: 2488, column: 24, scope: !694)
!3058 = !DILocation(line: 2498, column: 5, scope: !669)
!3059 = !DILocation(line: 2499, column: 5, scope: !669)
!3060 = !DILocation(line: 2502, column: 17, scope: !669)
!3061 = !DILocation(line: 2503, column: 5, scope: !669)
!3062 = !DILocation(line: 2504, column: 1, scope: !669)
!3063 = !DILocation(line: 2338, column: 32, scope: !744)
!3064 = !DILocation(line: 2338, column: 48, scope: !744)
!3065 = !DILocation(line: 2338, column: 64, scope: !744)
!3066 = !DILocation(line: 2342, column: 5, scope: !744)
!3067 = !DILocation(line: 2343, column: 15, scope: !744)
!3068 = !DILocation(line: 2344, column: 5, scope: !744)
!3069 = !DILocation(line: 2344, column: 15, scope: !744)
!3070 = !DILocation(line: 2345, column: 17, scope: !744)
!3071 = !DILocation(line: 2342, column: 16, scope: !744)
!3072 = !DILocation(line: 2349, column: 10, scope: !3073)
!3073 = distinct !DILexicalBlock(scope: !744, file: !1, line: 2349, column: 9)
!3074 = !DILocation(line: 2349, column: 9, scope: !744)
!3075 = !DILocation(line: 2353, column: 29, scope: !744)
!3076 = !DILocation(line: 2353, column: 12, scope: !744)
!3077 = !DILocation(line: 2354, column: 14, scope: !3078)
!3078 = distinct !DILexicalBlock(scope: !744, file: !1, line: 2354, column: 9)
!3079 = !DILocation(line: 2354, column: 9, scope: !744)
!3080 = !DILocation(line: 2356, column: 9, scope: !744)
!3081 = !DILocation(line: 2341, column: 16, scope: !744)
!3082 = !DILocation(line: 2357, column: 9, scope: !3083)
!3083 = distinct !DILexicalBlock(scope: !744, file: !1, line: 2357, column: 9)
!3084 = !DILocation(line: 2357, column: 11, scope: !3083)
!3085 = !DILocation(line: 2357, column: 9, scope: !744)
!3086 = !DILocation(line: 2358, column: 25, scope: !3087)
!3087 = distinct !DILexicalBlock(scope: !3083, file: !1, line: 2357, column: 16)
!3088 = !DILocation(line: 2358, column: 9, scope: !3087)
!3089 = !DILocation(line: 2387, column: 5, scope: !3090)
!3090 = !DILexicalBlockFile(scope: !757, file: !1, discriminator: 1)
!3091 = !DILocation(line: 2387, column: 5, scope: !757)
!3092 = !DILocation(line: 2362, column: 30, scope: !744)
!3093 = !DILocation(line: 2362, column: 15, scope: !744)
!3094 = !DILocation(line: 2363, column: 17, scope: !3095)
!3095 = distinct !DILexicalBlock(scope: !744, file: !1, line: 2363, column: 9)
!3096 = !DILocation(line: 2363, column: 9, scope: !744)
!3097 = !DILocation(line: 2368, column: 18, scope: !3098)
!3098 = distinct !DILexicalBlock(scope: !3099, file: !1, line: 2368, column: 5)
!3099 = distinct !DILexicalBlock(scope: !744, file: !1, line: 2368, column: 5)
!3100 = !DILocation(line: 2368, column: 17, scope: !3098)
!3101 = !DILocation(line: 2368, column: 5, scope: !3099)
!3102 = !DILocation(line: 2369, column: 9, scope: !3098)
!3103 = !DILocation(line: 2364, column: 9, scope: !3104)
!3104 = distinct !DILexicalBlock(scope: !3095, file: !1, line: 2363, column: 26)
!3105 = !DILocation(line: 2385, column: 9, scope: !744)
!3106 = !DILocation(line: 2369, column: 20, scope: !3098)
!3107 = !DILocation(line: 2368, column: 23, scope: !3098)
!3108 = !DILocation(line: 2346, column: 16, scope: !744)
!3109 = !DILocation(line: 2372, column: 38, scope: !744)
!3110 = !DILocation(line: 2372, column: 32, scope: !744)
!3111 = !DILocation(line: 2373, column: 12, scope: !3112)
!3112 = distinct !DILexicalBlock(scope: !744, file: !1, line: 2373, column: 9)
!3113 = !DILocation(line: 2373, column: 9, scope: !744)
!3114 = !DILocation(line: 2376, column: 9, scope: !744)
!3115 = !DILocation(line: 2376, column: 14, scope: !744)
!3116 = !DILocation(line: 2377, column: 9, scope: !744)
!3117 = !DILocation(line: 2377, column: 17, scope: !744)
!3118 = !DILocation(line: 2378, column: 9, scope: !744)
!3119 = !DILocation(line: 2378, column: 16, scope: !744)
!3120 = !DILocation(line: 2379, column: 13, scope: !744)
!3121 = !DILocation(line: 2379, column: 9, scope: !744)
!3122 = !DILocation(line: 2379, column: 11, scope: !744)
!3123 = !DILocation(line: 2380, column: 19, scope: !744)
!3124 = !DILocation(line: 2380, column: 21, scope: !744)
!3125 = !DILocation(line: 2380, column: 9, scope: !744)
!3126 = !DILocation(line: 2380, column: 17, scope: !744)
!3127 = !DILocation(line: 2382, column: 5, scope: !744)
!3128 = !DILocation(line: 2386, column: 9, scope: !3129)
!3129 = distinct !DILexicalBlock(scope: !744, file: !1, line: 2385, column: 9)
!3130 = !DILocation(line: 2387, column: 5, scope: !3131)
!3131 = !DILexicalBlockFile(scope: !759, file: !1, discriminator: 4)
!3132 = !DILocation(line: 2387, column: 5, scope: !3133)
!3133 = distinct !DILexicalBlock(scope: !759, file: !1, line: 2387, column: 5)
!3134 = !DILocation(line: 2387, column: 5, scope: !759)
!3135 = !DILocation(line: 2387, column: 5, scope: !3136)
!3136 = !DILexicalBlockFile(scope: !3133, file: !1, discriminator: 6)
!3137 = !DILocation(line: 2389, column: 1, scope: !744)
!3138 = !DILocation(line: 2507, column: 41, scope: !696)
!3139 = !DILocation(line: 2509, column: 13, scope: !702)
!3140 = !DILocation(line: 2509, column: 20, scope: !702)
!3141 = !DILocation(line: 2509, column: 9, scope: !696)
!3142 = !DILocation(line: 2510, column: 39, scope: !3143)
!3143 = distinct !DILexicalBlock(scope: !702, file: !1, line: 2509, column: 29)
!3144 = !DILocation(line: 2510, column: 56, scope: !3143)
!3145 = !DILocation(line: 2510, column: 66, scope: !3143)
!3146 = !DILocation(line: 2510, column: 16, scope: !3143)
!3147 = !DILocation(line: 2510, column: 9, scope: !3143)
!3148 = !DILocation(line: 2511, column: 20, scope: !701)
!3149 = !DILocation(line: 2511, column: 16, scope: !701)
!3150 = !DILocation(line: 2511, column: 16, scope: !702)
!3151 = !DILocation(line: 2512, column: 40, scope: !3152)
!3152 = distinct !DILexicalBlock(scope: !701, file: !1, line: 2511, column: 29)
!3153 = !DILocation(line: 2512, column: 57, scope: !3152)
!3154 = !DILocation(line: 2512, column: 16, scope: !3152)
!3155 = !DILocation(line: 2512, column: 9, scope: !3152)
!3156 = !DILocation(line: 2518, column: 35, scope: !700)
!3157 = !DILocation(line: 2518, column: 19, scope: !700)
!3158 = !DILocation(line: 2514, column: 19, scope: !700)
!3159 = !DILocation(line: 2519, column: 14, scope: !3160)
!3160 = distinct !DILexicalBlock(scope: !700, file: !1, line: 2519, column: 13)
!3161 = !DILocation(line: 2519, column: 13, scope: !700)
!3162 = !DILocation(line: 2521, column: 25, scope: !706)
!3163 = !DILocation(line: 2521, column: 20, scope: !706)
!3164 = !DILocation(line: 2521, column: 9, scope: !707)
!3165 = !DILocation(line: 2523, column: 54, scope: !705)
!3166 = !DILocation(line: 2528, column: 13, scope: !705)
!3167 = !DILocation(line: 2523, column: 50, scope: !705)
!3168 = !DILocation(line: 2523, column: 31, scope: !705)
!3169 = !DILocation(line: 2523, column: 23, scope: !705)
!3170 = !DILocation(line: 2524, column: 18, scope: !711)
!3171 = !DILocation(line: 2524, column: 17, scope: !705)
!3172 = !DILocation(line: 2525, column: 17, scope: !3173)
!3173 = !DILexicalBlockFile(scope: !709, file: !1, discriminator: 1)
!3174 = !DILocation(line: 2525, column: 17, scope: !3175)
!3175 = distinct !DILexicalBlock(scope: !709, file: !1, line: 2525, column: 17)
!3176 = !DILocation(line: 2525, column: 17, scope: !709)
!3177 = !DILocation(line: 2525, column: 17, scope: !3178)
!3178 = !DILexicalBlockFile(scope: !3175, file: !1, discriminator: 3)
!3179 = !DILocation(line: 2521, column: 29, scope: !706)
!3180 = !DILocation(line: 2515, column: 20, scope: !700)
!3181 = !DILocation(line: 2531, column: 40, scope: !700)
!3182 = !DILocation(line: 2531, column: 57, scope: !700)
!3183 = !DILocation(line: 2531, column: 16, scope: !700)
!3184 = !DILocation(line: 2531, column: 9, scope: !700)
!3185 = !DILocation(line: 2533, column: 1, scope: !696)
!3186 = !DILocation(line: 2536, column: 43, scope: !712)
!3187 = !DILocation(line: 2536, column: 57, scope: !712)
!3188 = !DILocation(line: 2540, column: 20, scope: !712)
!3189 = !DILocation(line: 2540, column: 16, scope: !712)
!3190 = !DILocation(line: 2542, column: 10, scope: !3191)
!3191 = distinct !DILexicalBlock(scope: !712, file: !1, line: 2542, column: 9)
!3192 = !{!2689, !2669, i64 168}
!3193 = !DILocation(line: 2542, column: 31, scope: !3191)
!3194 = !DILocation(line: 2542, column: 34, scope: !3195)
!3195 = !DILexicalBlockFile(scope: !3191, file: !1, discriminator: 1)
!3196 = !DILocation(line: 2542, column: 65, scope: !3191)
!3197 = !DILocation(line: 2548, column: 21, scope: !723)
!3198 = !DILocation(line: 2542, column: 58, scope: !3191)
!3199 = !DILocation(line: 2542, column: 9, scope: !712)
!3200 = !DILocation(line: 2548, column: 16, scope: !723)
!3201 = !DILocation(line: 2548, column: 5, scope: !724)
!3202 = !DILocation(line: 2551, column: 33, scope: !722)
!3203 = !DILocation(line: 2561, column: 13, scope: !722)
!3204 = !DILocation(line: 2544, column: 25, scope: !3205)
!3205 = distinct !DILexicalBlock(scope: !3191, file: !1, line: 2543, column: 5)
!3206 = !DILocation(line: 2544, column: 9, scope: !3205)
!3207 = !DILocation(line: 2545, column: 9, scope: !3205)
!3208 = !DILocation(line: 2551, column: 19, scope: !722)
!3209 = !DILocation(line: 2552, column: 28, scope: !722)
!3210 = !DILocation(line: 2552, column: 20, scope: !722)
!3211 = !DILocation(line: 2553, column: 19, scope: !3212)
!3212 = distinct !DILexicalBlock(scope: !722, file: !1, line: 2553, column: 13)
!3213 = !DILocation(line: 2553, column: 25, scope: !3212)
!3214 = !DILocation(line: 2553, column: 28, scope: !3215)
!3215 = !DILexicalBlockFile(scope: !3212, file: !1, discriminator: 1)
!3216 = !DILocation(line: 2553, column: 13, scope: !722)
!3217 = !DILocation(line: 2555, column: 17, scope: !722)
!3218 = !DILocation(line: 2555, column: 27, scope: !722)
!3219 = !DILocation(line: 2555, column: 21, scope: !722)
!3220 = !DILocation(line: 2550, column: 20, scope: !722)
!3221 = !DILocation(line: 2557, column: 19, scope: !3222)
!3222 = distinct !DILexicalBlock(scope: !722, file: !1, line: 2557, column: 13)
!3223 = !DILocation(line: 2557, column: 13, scope: !722)
!3224 = !DILocation(line: 2559, column: 19, scope: !3225)
!3225 = distinct !DILexicalBlock(scope: !722, file: !1, line: 2559, column: 13)
!3226 = !DILocation(line: 2559, column: 13, scope: !722)
!3227 = !DILocation(line: 2561, column: 9, scope: !722)
!3228 = !DILocation(line: 2561, column: 24, scope: !722)
!3229 = !DILocation(line: 2548, column: 25, scope: !723)
!3230 = !DILocation(line: 2539, column: 16, scope: !712)
!3231 = !DILocation(line: 2564, column: 14, scope: !712)
!3232 = !DILocation(line: 2538, column: 15, scope: !712)
!3233 = !DILocation(line: 2565, column: 16, scope: !3234)
!3234 = distinct !DILexicalBlock(scope: !712, file: !1, line: 2565, column: 9)
!3235 = !DILocation(line: 2565, column: 9, scope: !712)
!3236 = !DILocation(line: 2567, column: 21, scope: !729)
!3237 = !DILocation(line: 2567, column: 16, scope: !729)
!3238 = !DILocation(line: 2567, column: 5, scope: !730)
!3239 = !DILocation(line: 2568, column: 29, scope: !728)
!3240 = !DILocation(line: 2570, column: 9, scope: !728)
!3241 = !DILocation(line: 2568, column: 19, scope: !728)
!3242 = !DILocation(line: 2569, column: 9, scope: !728)
!3243 = !DILocation(line: 2567, column: 25, scope: !729)
!3244 = !DILocation(line: 2573, column: 5, scope: !3245)
!3245 = !DILexicalBlockFile(scope: !732, file: !1, discriminator: 1)
!3246 = !DILocation(line: 2573, column: 5, scope: !736)
!3247 = !DILocation(line: 2573, column: 5, scope: !732)
!3248 = !DILocation(line: 2573, column: 5, scope: !3249)
!3249 = !DILexicalBlockFile(scope: !735, file: !1, discriminator: 2)
!3250 = !DILocation(line: 2573, column: 5, scope: !3251)
!3251 = !DILexicalBlockFile(scope: !734, file: !1, discriminator: 4)
!3252 = !DILocation(line: 2573, column: 5, scope: !3253)
!3253 = distinct !DILexicalBlock(scope: !734, file: !1, line: 2573, column: 5)
!3254 = !DILocation(line: 2573, column: 5, scope: !734)
!3255 = !DILocation(line: 2573, column: 5, scope: !3256)
!3256 = !DILexicalBlockFile(scope: !3253, file: !1, discriminator: 6)
!3257 = !DILocation(line: 2574, column: 16, scope: !712)
!3258 = !DILocation(line: 2575, column: 5, scope: !712)
!3259 = !DILocation(line: 2576, column: 1, scope: !712)
!3260 = !DILocation(line: 2403, column: 41, scope: !737)
!3261 = !DILocation(line: 2403, column: 51, scope: !737)
!3262 = !DILocation(line: 2405, column: 16, scope: !737)
!3263 = !DILocation(line: 2408, column: 16, scope: !737)
!3264 = !DILocation(line: 2408, column: 18, scope: !737)
!3265 = !DILocation(line: 2408, column: 9, scope: !737)
!3266 = !DILocation(line: 2409, column: 12, scope: !737)
!3267 = !DILocation(line: 2409, column: 5, scope: !737)
!3268 = !DILocation(line: 2733, column: 24, scope: !761)
!3269 = !DILocation(line: 2735, column: 25, scope: !761)
!3270 = !DILocation(line: 2735, column: 5, scope: !761)
!3271 = !DILocation(line: 2736, column: 5, scope: !3272)
!3272 = !DILexicalBlockFile(scope: !767, file: !1, discriminator: 1)
!3273 = !DILocation(line: 2736, column: 5, scope: !770)
!3274 = !DILocation(line: 2736, column: 5, scope: !767)
!3275 = !DILocation(line: 2736, column: 5, scope: !3276)
!3276 = !DILexicalBlockFile(scope: !769, file: !1, discriminator: 4)
!3277 = !DILocation(line: 2736, column: 5, scope: !3278)
!3278 = distinct !DILexicalBlock(scope: !769, file: !1, line: 2736, column: 5)
!3279 = !DILocation(line: 2736, column: 5, scope: !769)
!3280 = !DILocation(line: 2736, column: 5, scope: !3281)
!3281 = !DILexicalBlockFile(scope: !3278, file: !1, discriminator: 6)
!3282 = !DILocation(line: 2737, column: 5, scope: !3283)
!3283 = !DILexicalBlockFile(scope: !772, file: !1, discriminator: 1)
!3284 = !DILocation(line: 2737, column: 5, scope: !775)
!3285 = !DILocation(line: 2737, column: 5, scope: !772)
!3286 = !DILocation(line: 2737, column: 5, scope: !3287)
!3287 = !DILexicalBlockFile(scope: !774, file: !1, discriminator: 4)
!3288 = !DILocation(line: 2737, column: 5, scope: !3289)
!3289 = distinct !DILexicalBlock(scope: !774, file: !1, line: 2737, column: 5)
!3290 = !DILocation(line: 2737, column: 5, scope: !774)
!3291 = !DILocation(line: 2737, column: 5, scope: !3292)
!3292 = !DILexicalBlockFile(scope: !3289, file: !1, discriminator: 6)
!3293 = !DILocation(line: 2738, column: 13, scope: !3294)
!3294 = distinct !DILexicalBlock(scope: !761, file: !1, line: 2738, column: 9)
!3295 = !DILocation(line: 2738, column: 21, scope: !3294)
!3296 = !DILocation(line: 2738, column: 9, scope: !761)
!3297 = !DILocation(line: 2739, column: 20, scope: !3294)
!3298 = !DILocation(line: 2739, column: 9, scope: !3294)
!3299 = !DILocation(line: 2740, column: 5, scope: !761)
!3300 = !DILocation(line: 2740, column: 18, scope: !761)
!3301 = !DILocation(line: 2741, column: 1, scope: !761)
!3302 = !DILocation(line: 2754, column: 25, scope: !776)
!3303 = !DILocation(line: 2754, column: 39, scope: !776)
!3304 = !DILocation(line: 2754, column: 52, scope: !776)
!3305 = !DILocation(line: 2756, column: 5, scope: !3306)
!3306 = !DILexicalBlockFile(scope: !785, file: !1, discriminator: 1)
!3307 = !DILocation(line: 2756, column: 5, scope: !786)
!3308 = !DILocation(line: 2756, column: 5, scope: !3309)
!3309 = !DILexicalBlockFile(scope: !784, file: !1, discriminator: 2)
!3310 = !DILocation(line: 2756, column: 5, scope: !3311)
!3311 = distinct !DILexicalBlock(scope: !784, file: !1, line: 2756, column: 5)
!3312 = !DILocation(line: 2757, column: 5, scope: !3313)
!3313 = !DILexicalBlockFile(scope: !789, file: !1, discriminator: 1)
!3314 = !DILocation(line: 2757, column: 5, scope: !790)
!3315 = !DILocation(line: 2757, column: 5, scope: !3316)
!3316 = !DILexicalBlockFile(scope: !788, file: !1, discriminator: 2)
!3317 = !DILocation(line: 2757, column: 5, scope: !3318)
!3318 = distinct !DILexicalBlock(scope: !788, file: !1, line: 2757, column: 5)
!3319 = !DILocation(line: 2758, column: 5, scope: !776)
!3320 = !DILocation(line: 2759, column: 1, scope: !776)
!3321 = !DILocation(line: 2762, column: 21, scope: !791)
!3322 = !DILocation(line: 2766, column: 26, scope: !791)
!3323 = !DILocation(line: 2766, column: 15, scope: !791)
!3324 = !DILocation(line: 2767, column: 31, scope: !791)
!3325 = !DILocation(line: 2767, column: 17, scope: !791)
!3326 = !DILocation(line: 2768, column: 28, scope: !791)
!3327 = !DILocation(line: 2768, column: 15, scope: !791)
!3328 = !DILocation(line: 2769, column: 20, scope: !791)
!3329 = !DILocation(line: 2769, column: 16, scope: !791)
!3330 = !DILocation(line: 2770, column: 24, scope: !791)
!3331 = !DILocation(line: 2770, column: 16, scope: !791)
!3332 = !DILocation(line: 2773, column: 13, scope: !3333)
!3333 = distinct !DILexicalBlock(scope: !791, file: !1, line: 2773, column: 9)
!3334 = !DILocation(line: 2773, column: 9, scope: !3333)
!3335 = !DILocation(line: 2773, column: 9, scope: !791)
!3336 = !DILocation(line: 2776, column: 16, scope: !809)
!3337 = !DILocation(line: 2776, column: 9, scope: !791)
!3338 = !DILocation(line: 2778, column: 18, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !809, file: !1, line: 2776, column: 25)
!3340 = !DILocation(line: 2779, column: 20, scope: !3341)
!3341 = distinct !DILexicalBlock(scope: !3339, file: !1, line: 2779, column: 13)
!3342 = !DILocation(line: 2779, column: 13, scope: !3339)
!3343 = !DILocation(line: 2781, column: 20, scope: !3339)
!3344 = !DILocation(line: 2782, column: 16, scope: !3339)
!3345 = !DILocation(line: 2764, column: 15, scope: !791)
!3346 = !DILocation(line: 2771, column: 16, scope: !791)
!3347 = !DILocation(line: 2783, column: 20, scope: !3348)
!3348 = distinct !DILexicalBlock(scope: !3349, file: !1, line: 2783, column: 9)
!3349 = distinct !DILexicalBlock(scope: !3339, file: !1, line: 2783, column: 9)
!3350 = !DILocation(line: 2783, column: 9, scope: !3349)
!3351 = !DILocation(line: 2785, column: 13, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !3348, file: !1, line: 2783, column: 30)
!3353 = !DILocation(line: 2786, column: 13, scope: !3352)
!3354 = !DILocation(line: 2783, column: 26, scope: !3348)
!3355 = distinct !{!3355, !3356}
!3356 = !{!"llvm.loop.unroll.disable"}
!3357 = distinct !{!3357, !3038, !3039}
!3358 = distinct !{!3358, !3045, !3038, !3039}
!3359 = !DILocation(line: 2790, column: 13, scope: !807)
!3360 = !DILocation(line: 2790, column: 31, scope: !807)
!3361 = !DILocation(line: 2790, column: 13, scope: !808)
!3362 = !DILocation(line: 2791, column: 23, scope: !806)
!3363 = !DILocation(line: 2792, column: 22, scope: !806)
!3364 = !DILocation(line: 2793, column: 24, scope: !3365)
!3365 = distinct !DILexicalBlock(scope: !806, file: !1, line: 2793, column: 17)
!3366 = !DILocation(line: 2793, column: 17, scope: !806)
!3367 = !DILocation(line: 2795, column: 24, scope: !806)
!3368 = !DILocation(line: 2796, column: 24, scope: !3369)
!3369 = distinct !DILexicalBlock(scope: !3370, file: !1, line: 2796, column: 13)
!3370 = distinct !DILexicalBlock(scope: !806, file: !1, line: 2796, column: 13)
!3371 = !DILocation(line: 2796, column: 13, scope: !3370)
!3372 = !DILocation(line: 2797, column: 24, scope: !3373)
!3373 = distinct !DILexicalBlock(scope: !3369, file: !1, line: 2796, column: 34)
!3374 = !DILocation(line: 2799, column: 17, scope: !3373)
!3375 = !DILocation(line: 2798, column: 17, scope: !3373)
!3376 = !DILocation(line: 2796, column: 30, scope: !3369)
!3377 = !DILocation(line: 2801, column: 13, scope: !3378)
!3378 = !DILexicalBlockFile(scope: !811, file: !1, discriminator: 1)
!3379 = !DILocation(line: 2801, column: 13, scope: !3380)
!3380 = distinct !DILexicalBlock(scope: !811, file: !1, line: 2801, column: 13)
!3381 = !DILocation(line: 2801, column: 13, scope: !811)
!3382 = !DILocation(line: 2801, column: 13, scope: !3383)
!3383 = !DILexicalBlockFile(scope: !3380, file: !1, discriminator: 3)
!3384 = !DILocation(line: 2809, column: 47, scope: !3385)
!3385 = distinct !DILexicalBlock(scope: !3386, file: !1, line: 2809, column: 9)
!3386 = distinct !DILexicalBlock(scope: !808, file: !1, line: 2809, column: 9)
!3387 = !DILocation(line: 2809, column: 14, scope: !3386)
!3388 = !DILocation(line: 2809, column: 17, scope: !3386)
!3389 = !DILocation(line: 2809, column: 24, scope: !3385)
!3390 = !DILocation(line: 2809, column: 29, scope: !3385)
!3391 = !DILocation(line: 2809, column: 32, scope: !3385)
!3392 = !DILocation(line: 2819, column: 17, scope: !808)
!3393 = !DILocation(line: 2809, column: 43, scope: !3385)
!3394 = !DILocation(line: 2809, column: 9, scope: !3395)
!3395 = !DILexicalBlockFile(scope: !3386, file: !1, discriminator: 3)
!3396 = !DILocation(line: 2819, column: 28, scope: !808)
!3397 = !DILocation(line: 2771, column: 19, scope: !791)
!3398 = !DILocation(line: 2821, column: 16, scope: !808)
!3399 = !DILocation(line: 2822, column: 18, scope: !815)
!3400 = !DILocation(line: 2822, column: 9, scope: !816)
!3401 = !DILocation(line: 2824, column: 13, scope: !814)
!3402 = !DILocation(line: 2825, column: 23, scope: !814)
!3403 = !DILocation(line: 2823, column: 13, scope: !814)
!3404 = !DILocation(line: 2823, column: 24, scope: !814)
!3405 = !DILocation(line: 2765, column: 15, scope: !791)
!3406 = !DILocation(line: 2826, column: 13, scope: !814)
!3407 = !DILocation(line: 2827, column: 13, scope: !3408)
!3408 = !DILexicalBlockFile(scope: !813, file: !1, discriminator: 1)
!3409 = !DILocation(line: 2827, column: 13, scope: !3410)
!3410 = distinct !DILexicalBlock(scope: !813, file: !1, line: 2827, column: 13)
!3411 = !DILocation(line: 2827, column: 13, scope: !813)
!3412 = !DILocation(line: 2827, column: 13, scope: !3413)
!3413 = !DILexicalBlockFile(scope: !3410, file: !1, discriminator: 3)
!3414 = !DILocation(line: 2822, column: 24, scope: !815)
!3415 = !DILocation(line: 2831, column: 5, scope: !791)
!3416 = !DILocation(line: 2832, column: 5, scope: !791)
!3417 = !DILocation(line: 2835, column: 17, scope: !791)
!3418 = !DILocation(line: 2836, column: 5, scope: !791)
!3419 = !DILocation(line: 2837, column: 1, scope: !791)
!3420 = !DILocation(line: 2679, column: 23, scope: !864)
!3421 = !DILocation(line: 2679, column: 39, scope: !864)
!3422 = !DILocation(line: 2679, column: 55, scope: !864)
!3423 = !DILocation(line: 2683, column: 5, scope: !864)
!3424 = !DILocation(line: 2684, column: 15, scope: !864)
!3425 = !DILocation(line: 2685, column: 5, scope: !864)
!3426 = !DILocation(line: 2685, column: 15, scope: !864)
!3427 = !DILocation(line: 2686, column: 17, scope: !864)
!3428 = !DILocation(line: 2683, column: 16, scope: !864)
!3429 = !DILocation(line: 2690, column: 10, scope: !3430)
!3430 = distinct !DILexicalBlock(scope: !864, file: !1, line: 2690, column: 9)
!3431 = !DILocation(line: 2690, column: 9, scope: !864)
!3432 = !DILocation(line: 2694, column: 29, scope: !864)
!3433 = !DILocation(line: 2694, column: 12, scope: !864)
!3434 = !DILocation(line: 2695, column: 14, scope: !3435)
!3435 = distinct !DILexicalBlock(scope: !864, file: !1, line: 2695, column: 9)
!3436 = !DILocation(line: 2695, column: 9, scope: !864)
!3437 = !DILocation(line: 2697, column: 9, scope: !864)
!3438 = !DILocation(line: 2682, column: 16, scope: !864)
!3439 = !DILocation(line: 2698, column: 9, scope: !3440)
!3440 = distinct !DILexicalBlock(scope: !864, file: !1, line: 2698, column: 9)
!3441 = !DILocation(line: 2698, column: 11, scope: !3440)
!3442 = !DILocation(line: 2698, column: 9, scope: !864)
!3443 = !DILocation(line: 2699, column: 25, scope: !3444)
!3444 = distinct !DILexicalBlock(scope: !3440, file: !1, line: 2698, column: 16)
!3445 = !DILocation(line: 2699, column: 9, scope: !3444)
!3446 = !DILocation(line: 2728, column: 5, scope: !3447)
!3447 = !DILexicalBlockFile(scope: !877, file: !1, discriminator: 1)
!3448 = !DILocation(line: 2728, column: 5, scope: !877)
!3449 = !DILocation(line: 2703, column: 30, scope: !864)
!3450 = !DILocation(line: 2703, column: 15, scope: !864)
!3451 = !DILocation(line: 2704, column: 17, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !864, file: !1, line: 2704, column: 9)
!3453 = !DILocation(line: 2704, column: 9, scope: !864)
!3454 = !DILocation(line: 2709, column: 18, scope: !3455)
!3455 = distinct !DILexicalBlock(scope: !3456, file: !1, line: 2709, column: 5)
!3456 = distinct !DILexicalBlock(scope: !864, file: !1, line: 2709, column: 5)
!3457 = !DILocation(line: 2709, column: 17, scope: !3455)
!3458 = !DILocation(line: 2709, column: 5, scope: !3456)
!3459 = !DILocation(line: 2710, column: 9, scope: !3455)
!3460 = !DILocation(line: 2705, column: 9, scope: !3461)
!3461 = distinct !DILexicalBlock(scope: !3452, file: !1, line: 2704, column: 26)
!3462 = !DILocation(line: 2726, column: 9, scope: !864)
!3463 = !DILocation(line: 2710, column: 20, scope: !3455)
!3464 = !DILocation(line: 2709, column: 23, scope: !3455)
!3465 = !DILocation(line: 2687, column: 16, scope: !864)
!3466 = !DILocation(line: 2713, column: 29, scope: !864)
!3467 = !DILocation(line: 2713, column: 23, scope: !864)
!3468 = !DILocation(line: 2714, column: 12, scope: !3469)
!3469 = distinct !DILexicalBlock(scope: !864, file: !1, line: 2714, column: 9)
!3470 = !DILocation(line: 2714, column: 9, scope: !864)
!3471 = !DILocation(line: 2717, column: 9, scope: !864)
!3472 = !DILocation(line: 2717, column: 14, scope: !864)
!3473 = !DILocation(line: 2718, column: 9, scope: !864)
!3474 = !DILocation(line: 2718, column: 17, scope: !864)
!3475 = !DILocation(line: 2719, column: 9, scope: !864)
!3476 = !DILocation(line: 2719, column: 16, scope: !864)
!3477 = !DILocation(line: 2720, column: 13, scope: !864)
!3478 = !DILocation(line: 2720, column: 9, scope: !864)
!3479 = !DILocation(line: 2720, column: 11, scope: !864)
!3480 = !DILocation(line: 2721, column: 25, scope: !3481)
!3481 = !DILexicalBlockFile(scope: !864, file: !1, discriminator: 2)
!3482 = !DILocation(line: 2721, column: 22, scope: !864)
!3483 = !DILocation(line: 2721, column: 22, scope: !3484)
!3484 = !DILexicalBlockFile(scope: !864, file: !1, discriminator: 1)
!3485 = !DILocation(line: 2721, column: 9, scope: !864)
!3486 = !DILocation(line: 2721, column: 17, scope: !864)
!3487 = !DILocation(line: 2723, column: 5, scope: !864)
!3488 = !DILocation(line: 2727, column: 9, scope: !3489)
!3489 = distinct !DILexicalBlock(scope: !864, file: !1, line: 2726, column: 9)
!3490 = !DILocation(line: 2728, column: 5, scope: !3491)
!3491 = !DILexicalBlockFile(scope: !879, file: !1, discriminator: 4)
!3492 = !DILocation(line: 2728, column: 5, scope: !3493)
!3493 = distinct !DILexicalBlock(scope: !879, file: !1, line: 2728, column: 5)
!3494 = !DILocation(line: 2728, column: 5, scope: !879)
!3495 = !DILocation(line: 2728, column: 5, scope: !3496)
!3496 = !DILexicalBlockFile(scope: !3493, file: !1, discriminator: 6)
!3497 = !DILocation(line: 2730, column: 1, scope: !864)
!3498 = !DILocation(line: 2840, column: 23, scope: !817)
!3499 = !DILocation(line: 2842, column: 13, scope: !823)
!3500 = !DILocation(line: 2842, column: 20, scope: !823)
!3501 = !DILocation(line: 2842, column: 9, scope: !817)
!3502 = !DILocation(line: 2843, column: 39, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !823, file: !1, line: 2842, column: 29)
!3504 = !DILocation(line: 2843, column: 56, scope: !3503)
!3505 = !DILocation(line: 2843, column: 66, scope: !3503)
!3506 = !DILocation(line: 2843, column: 16, scope: !3503)
!3507 = !DILocation(line: 2843, column: 9, scope: !3503)
!3508 = !DILocation(line: 2844, column: 20, scope: !822)
!3509 = !DILocation(line: 2844, column: 16, scope: !822)
!3510 = !DILocation(line: 2844, column: 16, scope: !823)
!3511 = !DILocation(line: 2845, column: 40, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !822, file: !1, line: 2844, column: 29)
!3513 = !DILocation(line: 2845, column: 57, scope: !3512)
!3514 = !DILocation(line: 2845, column: 16, scope: !3512)
!3515 = !DILocation(line: 2845, column: 9, scope: !3512)
!3516 = !DILocation(line: 2851, column: 35, scope: !821)
!3517 = !DILocation(line: 2851, column: 19, scope: !821)
!3518 = !DILocation(line: 2847, column: 19, scope: !821)
!3519 = !DILocation(line: 2852, column: 14, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !821, file: !1, line: 2852, column: 13)
!3521 = !DILocation(line: 2852, column: 13, scope: !821)
!3522 = !DILocation(line: 2854, column: 25, scope: !827)
!3523 = !DILocation(line: 2854, column: 20, scope: !827)
!3524 = !DILocation(line: 2854, column: 9, scope: !828)
!3525 = !DILocation(line: 2856, column: 54, scope: !826)
!3526 = !DILocation(line: 2861, column: 13, scope: !826)
!3527 = !DILocation(line: 2856, column: 50, scope: !826)
!3528 = !DILocation(line: 2856, column: 31, scope: !826)
!3529 = !DILocation(line: 2856, column: 23, scope: !826)
!3530 = !DILocation(line: 2857, column: 18, scope: !832)
!3531 = !DILocation(line: 2857, column: 17, scope: !826)
!3532 = !DILocation(line: 2858, column: 17, scope: !3533)
!3533 = !DILexicalBlockFile(scope: !830, file: !1, discriminator: 1)
!3534 = !DILocation(line: 2858, column: 17, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !830, file: !1, line: 2858, column: 17)
!3536 = !DILocation(line: 2858, column: 17, scope: !830)
!3537 = !DILocation(line: 2858, column: 17, scope: !3538)
!3538 = !DILexicalBlockFile(scope: !3535, file: !1, discriminator: 3)
!3539 = !DILocation(line: 2854, column: 29, scope: !827)
!3540 = !DILocation(line: 2848, column: 20, scope: !821)
!3541 = !DILocation(line: 2864, column: 40, scope: !821)
!3542 = !DILocation(line: 2864, column: 57, scope: !821)
!3543 = !DILocation(line: 2864, column: 16, scope: !821)
!3544 = !DILocation(line: 2864, column: 9, scope: !821)
!3545 = !DILocation(line: 2866, column: 1, scope: !817)
!3546 = !DILocation(line: 2869, column: 25, scope: !833)
!3547 = !DILocation(line: 2869, column: 39, scope: !833)
!3548 = !DILocation(line: 2874, column: 10, scope: !3549)
!3549 = distinct !DILexicalBlock(scope: !833, file: !1, line: 2874, column: 9)
!3550 = !DILocation(line: 2874, column: 31, scope: !3549)
!3551 = !DILocation(line: 2874, column: 34, scope: !3552)
!3552 = !DILexicalBlockFile(scope: !3549, file: !1, discriminator: 1)
!3553 = !DILocation(line: 2874, column: 65, scope: !3549)
!3554 = !DILocation(line: 2881, column: 21, scope: !844)
!3555 = !DILocation(line: 2874, column: 58, scope: !3549)
!3556 = !DILocation(line: 2874, column: 9, scope: !833)
!3557 = !DILocation(line: 2876, column: 25, scope: !3558)
!3558 = distinct !DILexicalBlock(scope: !3549, file: !1, line: 2875, column: 5)
!3559 = !DILocation(line: 2876, column: 9, scope: !3558)
!3560 = !DILocation(line: 2877, column: 9, scope: !3558)
!3561 = !DILocation(line: 2880, column: 9, scope: !833)
!3562 = !DILocation(line: 2872, column: 16, scope: !833)
!3563 = !DILocation(line: 2872, column: 19, scope: !833)
!3564 = !DILocation(line: 2881, column: 16, scope: !844)
!3565 = !DILocation(line: 2881, column: 5, scope: !845)
!3566 = !DILocation(line: 2883, column: 33, scope: !843)
!3567 = !DILocation(line: 2892, column: 13, scope: !843)
!3568 = !DILocation(line: 2890, column: 27, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !3570, file: !1, line: 2890, column: 18)
!3570 = distinct !DILexicalBlock(scope: !843, file: !1, line: 2888, column: 13)
!3571 = !DILocation(line: 2883, column: 19, scope: !843)
!3572 = !DILocation(line: 2884, column: 28, scope: !843)
!3573 = !DILocation(line: 2884, column: 20, scope: !843)
!3574 = !DILocation(line: 2885, column: 19, scope: !3575)
!3575 = distinct !DILexicalBlock(scope: !843, file: !1, line: 2885, column: 13)
!3576 = !DILocation(line: 2885, column: 23, scope: !3575)
!3577 = !DILocation(line: 2885, column: 26, scope: !3578)
!3578 = !DILexicalBlockFile(scope: !3575, file: !1, discriminator: 1)
!3579 = !DILocation(line: 2885, column: 13, scope: !843)
!3580 = !DILocation(line: 2890, column: 24, scope: !3569)
!3581 = !DILocation(line: 2890, column: 18, scope: !3570)
!3582 = !DILocation(line: 2892, column: 9, scope: !843)
!3583 = !DILocation(line: 2892, column: 24, scope: !843)
!3584 = !DILocation(line: 2881, column: 25, scope: !844)
!3585 = !DILocation(line: 2894, column: 14, scope: !833)
!3586 = !DILocation(line: 2871, column: 15, scope: !833)
!3587 = !DILocation(line: 2895, column: 16, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !833, file: !1, line: 2895, column: 9)
!3589 = !DILocation(line: 2895, column: 9, scope: !833)
!3590 = !DILocation(line: 2897, column: 21, scope: !849)
!3591 = !DILocation(line: 2897, column: 16, scope: !849)
!3592 = !DILocation(line: 2897, column: 5, scope: !850)
!3593 = !DILocation(line: 2898, column: 29, scope: !848)
!3594 = !DILocation(line: 2900, column: 9, scope: !848)
!3595 = !DILocation(line: 2898, column: 19, scope: !848)
!3596 = !DILocation(line: 2899, column: 9, scope: !848)
!3597 = !DILocation(line: 2897, column: 25, scope: !849)
!3598 = !DILocation(line: 2902, column: 5, scope: !3599)
!3599 = !DILexicalBlockFile(scope: !852, file: !1, discriminator: 1)
!3600 = !DILocation(line: 2902, column: 5, scope: !856)
!3601 = !DILocation(line: 2902, column: 5, scope: !852)
!3602 = !DILocation(line: 2902, column: 5, scope: !3603)
!3603 = !DILexicalBlockFile(scope: !855, file: !1, discriminator: 2)
!3604 = !DILocation(line: 2902, column: 5, scope: !3605)
!3605 = !DILexicalBlockFile(scope: !854, file: !1, discriminator: 4)
!3606 = !DILocation(line: 2902, column: 5, scope: !3607)
!3607 = distinct !DILexicalBlock(scope: !854, file: !1, line: 2902, column: 5)
!3608 = !DILocation(line: 2902, column: 5, scope: !854)
!3609 = !DILocation(line: 2902, column: 5, scope: !3610)
!3610 = !DILexicalBlockFile(scope: !3607, file: !1, discriminator: 6)
!3611 = !DILocation(line: 2903, column: 16, scope: !833)
!3612 = !DILocation(line: 2904, column: 5, scope: !833)
!3613 = !DILocation(line: 2905, column: 1, scope: !833)
!3614 = !DILocation(line: 2744, column: 23, scope: !857)
!3615 = !DILocation(line: 2744, column: 33, scope: !857)
!3616 = !DILocation(line: 2746, column: 16, scope: !857)
!3617 = !DILocation(line: 2749, column: 16, scope: !857)
!3618 = !DILocation(line: 2749, column: 18, scope: !857)
!3619 = !DILocation(line: 2749, column: 9, scope: !857)
!3620 = !DILocation(line: 2750, column: 12, scope: !857)
!3621 = !DILocation(line: 2750, column: 5, scope: !857)
!3622 = !DILocation(line: 911, column: 28, scope: !881)
!3623 = !DILocation(line: 913, column: 25, scope: !881)
!3624 = !DILocation(line: 913, column: 5, scope: !881)
!3625 = !DILocation(line: 914, column: 5, scope: !3626)
!3626 = !DILexicalBlockFile(scope: !887, file: !1, discriminator: 1)
!3627 = !{!3628, !2672, i64 24}
!3628 = !{!"", !2668, i64 0, !2672, i64 16, !2672, i64 24, !2691, i64 32}
!3629 = !DILocation(line: 914, column: 5, scope: !890)
!3630 = !DILocation(line: 914, column: 5, scope: !887)
!3631 = !DILocation(line: 914, column: 5, scope: !3632)
!3632 = !DILexicalBlockFile(scope: !889, file: !1, discriminator: 4)
!3633 = !DILocation(line: 914, column: 5, scope: !3634)
!3634 = distinct !DILexicalBlock(scope: !889, file: !1, line: 914, column: 5)
!3635 = !DILocation(line: 914, column: 5, scope: !889)
!3636 = !DILocation(line: 914, column: 5, scope: !3637)
!3637 = !DILexicalBlockFile(scope: !3634, file: !1, discriminator: 6)
!3638 = !DILocation(line: 915, column: 5, scope: !3639)
!3639 = !DILexicalBlockFile(scope: !892, file: !1, discriminator: 1)
!3640 = !{!3628, !2672, i64 16}
!3641 = !DILocation(line: 915, column: 5, scope: !895)
!3642 = !DILocation(line: 915, column: 5, scope: !892)
!3643 = !DILocation(line: 915, column: 5, scope: !3644)
!3644 = !DILexicalBlockFile(scope: !894, file: !1, discriminator: 4)
!3645 = !DILocation(line: 915, column: 5, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !894, file: !1, line: 915, column: 5)
!3647 = !DILocation(line: 915, column: 5, scope: !894)
!3648 = !DILocation(line: 915, column: 5, scope: !3649)
!3649 = !DILexicalBlockFile(scope: !3646, file: !1, discriminator: 6)
!3650 = !DILocation(line: 916, column: 5, scope: !881)
!3651 = !DILocation(line: 916, column: 18, scope: !881)
!3652 = !DILocation(line: 917, column: 1, scope: !881)
!3653 = !DILocation(line: 920, column: 29, scope: !896)
!3654 = !DILocation(line: 920, column: 43, scope: !896)
!3655 = !DILocation(line: 920, column: 56, scope: !896)
!3656 = !DILocation(line: 922, column: 5, scope: !3657)
!3657 = !DILexicalBlockFile(scope: !905, file: !1, discriminator: 1)
!3658 = !DILocation(line: 922, column: 5, scope: !906)
!3659 = !DILocation(line: 922, column: 5, scope: !3660)
!3660 = !DILexicalBlockFile(scope: !904, file: !1, discriminator: 2)
!3661 = !DILocation(line: 922, column: 5, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !904, file: !1, line: 922, column: 5)
!3663 = !DILocation(line: 923, column: 5, scope: !3664)
!3664 = !DILexicalBlockFile(scope: !909, file: !1, discriminator: 1)
!3665 = !DILocation(line: 923, column: 5, scope: !910)
!3666 = !DILocation(line: 923, column: 5, scope: !3667)
!3667 = !DILexicalBlockFile(scope: !908, file: !1, discriminator: 2)
!3668 = !DILocation(line: 923, column: 5, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !908, file: !1, line: 923, column: 5)
!3670 = !DILocation(line: 924, column: 5, scope: !896)
!3671 = !DILocation(line: 925, column: 1, scope: !896)
!3672 = !DILocation(line: 928, column: 25, scope: !911)
!3673 = !DILocation(line: 935, column: 32, scope: !925)
!3674 = !DILocation(line: 935, column: 16, scope: !925)
!3675 = !DILocation(line: 930, column: 15, scope: !911)
!3676 = !DILocation(line: 936, column: 18, scope: !924)
!3677 = !DILocation(line: 936, column: 13, scope: !925)
!3678 = !DILocation(line: 937, column: 22, scope: !922)
!3679 = !DILocation(line: 949, column: 29, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !925, file: !1, line: 949, column: 13)
!3681 = !DILocation(line: 956, column: 13, scope: !925)
!3682 = !{!3628, !2691, i64 32}
!3683 = !DILocation(line: 937, column: 18, scope: !922)
!3684 = !DILocation(line: 937, column: 32, scope: !922)
!3685 = !DILocation(line: 937, column: 53, scope: !922)
!3686 = !DILocation(line: 937, column: 35, scope: !922)
!3687 = !DILocation(line: 937, column: 17, scope: !923)
!3688 = !DILocation(line: 938, column: 17, scope: !3689)
!3689 = !DILexicalBlockFile(scope: !920, file: !1, discriminator: 1)
!3690 = !DILocation(line: 938, column: 17, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !920, file: !1, line: 938, column: 17)
!3692 = !DILocation(line: 938, column: 17, scope: !920)
!3693 = !DILocation(line: 938, column: 17, scope: !3694)
!3694 = !DILexicalBlockFile(scope: !3691, file: !1, discriminator: 3)
!3695 = !DILocation(line: 943, column: 13, scope: !3696)
!3696 = distinct !DILexicalBlock(scope: !925, file: !1, line: 943, column: 13)
!3697 = !DILocation(line: 943, column: 13, scope: !925)
!3698 = !DILocation(line: 944, column: 40, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !3700, file: !1, line: 944, column: 17)
!3700 = distinct !DILexicalBlock(scope: !3696, file: !1, line: 943, column: 31)
!3701 = !DILocation(line: 944, column: 17, scope: !3699)
!3702 = !DILocation(line: 944, column: 17, scope: !3700)
!3703 = !DILocation(line: 945, column: 17, scope: !3699)
!3704 = !DILocation(line: 948, column: 9, scope: !3700)
!3705 = !DILocation(line: 949, column: 13, scope: !3680)
!3706 = !DILocation(line: 949, column: 36, scope: !3680)
!3707 = !DILocation(line: 949, column: 13, scope: !925)
!3708 = !DILocation(line: 951, column: 35, scope: !925)
!3709 = !DILocation(line: 951, column: 14, scope: !925)
!3710 = !DILocation(line: 931, column: 15, scope: !911)
!3711 = !DILocation(line: 952, column: 16, scope: !3712)
!3712 = distinct !DILexicalBlock(scope: !925, file: !1, line: 952, column: 13)
!3713 = !DILocation(line: 952, column: 13, scope: !925)
!3714 = !DILocation(line: 954, column: 19, scope: !925)
!3715 = !DILocation(line: 932, column: 15, scope: !911)
!3716 = !DILocation(line: 955, column: 16, scope: !925)
!3717 = !DILocation(line: 956, column: 23, scope: !925)
!3718 = !DILocation(line: 957, column: 9, scope: !3719)
!3719 = !DILexicalBlockFile(scope: !927, file: !1, discriminator: 1)
!3720 = !DILocation(line: 957, column: 9, scope: !3721)
!3721 = distinct !DILexicalBlock(scope: !927, file: !1, line: 957, column: 9)
!3722 = !DILocation(line: 957, column: 9, scope: !927)
!3723 = !DILocation(line: 957, column: 9, scope: !3724)
!3724 = !DILexicalBlockFile(scope: !3721, file: !1, discriminator: 3)
!3725 = !DILocation(line: 959, column: 1, scope: !911)
!3726 = !DILocation(line: 872, column: 25, scope: !947)
!3727 = !DILocation(line: 872, column: 41, scope: !947)
!3728 = !DILocation(line: 872, column: 57, scope: !947)
!3729 = !DILocation(line: 875, column: 5, scope: !947)
!3730 = !DILocation(line: 879, column: 14, scope: !3731)
!3731 = distinct !DILexicalBlock(scope: !947, file: !1, line: 879, column: 9)
!3732 = !DILocation(line: 879, column: 29, scope: !3731)
!3733 = !DILocation(line: 879, column: 33, scope: !3731)
!3734 = !DILocation(line: 879, column: 9, scope: !947)
!3735 = !DILocation(line: 875, column: 15, scope: !947)
!3736 = !DILocation(line: 882, column: 10, scope: !3737)
!3737 = distinct !DILexicalBlock(scope: !947, file: !1, line: 882, column: 9)
!3738 = !DILocation(line: 882, column: 9, scope: !947)
!3739 = !DILocation(line: 886, column: 27, scope: !947)
!3740 = !DILocation(line: 886, column: 10, scope: !947)
!3741 = !DILocation(line: 874, column: 15, scope: !947)
!3742 = !DILocation(line: 887, column: 12, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !947, file: !1, line: 887, column: 9)
!3744 = !DILocation(line: 887, column: 9, scope: !947)
!3745 = !DILocation(line: 890, column: 13, scope: !947)
!3746 = !DILocation(line: 876, column: 15, scope: !947)
!3747 = !DILocation(line: 891, column: 15, scope: !959)
!3748 = !DILocation(line: 891, column: 9, scope: !947)
!3749 = !DILocation(line: 892, column: 9, scope: !3750)
!3750 = !DILexicalBlockFile(scope: !957, file: !1, discriminator: 1)
!3751 = !DILocation(line: 892, column: 9, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !957, file: !1, line: 892, column: 9)
!3753 = !DILocation(line: 892, column: 9, scope: !957)
!3754 = !DILocation(line: 892, column: 9, scope: !3755)
!3755 = !DILexicalBlockFile(scope: !3752, file: !1, discriminator: 3)
!3756 = !DILocation(line: 897, column: 31, scope: !947)
!3757 = !DILocation(line: 897, column: 25, scope: !947)
!3758 = !DILocation(line: 898, column: 12, scope: !963)
!3759 = !DILocation(line: 898, column: 9, scope: !947)
!3760 = !DILocation(line: 899, column: 9, scope: !3761)
!3761 = !DILexicalBlockFile(scope: !961, file: !1, discriminator: 1)
!3762 = !DILocation(line: 899, column: 9, scope: !3763)
!3763 = distinct !DILexicalBlock(scope: !961, file: !1, line: 899, column: 9)
!3764 = !DILocation(line: 899, column: 9, scope: !961)
!3765 = !DILocation(line: 899, column: 9, scope: !3766)
!3766 = !DILexicalBlockFile(scope: !3763, file: !1, discriminator: 3)
!3767 = !DILocation(line: 900, column: 9, scope: !3768)
!3768 = !DILexicalBlockFile(scope: !965, file: !1, discriminator: 1)
!3769 = !DILocation(line: 900, column: 9, scope: !3770)
!3770 = distinct !DILexicalBlock(scope: !965, file: !1, line: 900, column: 9)
!3771 = !DILocation(line: 900, column: 9, scope: !965)
!3772 = !DILocation(line: 900, column: 9, scope: !3773)
!3773 = !DILexicalBlockFile(scope: !3770, file: !1, discriminator: 3)
!3774 = !DILocation(line: 903, column: 9, scope: !947)
!3775 = !DILocation(line: 903, column: 12, scope: !947)
!3776 = !DILocation(line: 904, column: 9, scope: !947)
!3777 = !DILocation(line: 904, column: 15, scope: !947)
!3778 = !DILocation(line: 905, column: 9, scope: !947)
!3779 = !DILocation(line: 905, column: 19, scope: !947)
!3780 = !DILocation(line: 907, column: 5, scope: !947)
!3781 = !DILocation(line: 908, column: 1, scope: !947)
!3782 = !DILocation(line: 962, column: 27, scope: !928)
!3783 = !DILocation(line: 967, column: 38, scope: !928)
!3784 = !DILocation(line: 968, column: 13, scope: !928)
!3785 = !DILocation(line: 968, column: 21, scope: !928)
!3786 = !DILocation(line: 968, column: 32, scope: !928)
!3787 = !DILocation(line: 967, column: 12, scope: !928)
!3788 = !DILocation(line: 967, column: 5, scope: !928)
!3789 = !DILocation(line: 972, column: 29, scope: !931)
!3790 = !DILocation(line: 972, column: 43, scope: !931)
!3791 = !DILocation(line: 974, column: 5, scope: !931)
!3792 = !DILocation(line: 974, column: 15, scope: !931)
!3793 = !DILocation(line: 975, column: 5, scope: !931)
!3794 = !DILocation(line: 975, column: 9, scope: !931)
!3795 = !DILocation(line: 976, column: 10, scope: !3796)
!3796 = distinct !DILexicalBlock(scope: !931, file: !1, line: 976, column: 9)
!3797 = !DILocation(line: 976, column: 9, scope: !931)
!3798 = !DILocation(line: 978, column: 5, scope: !3799)
!3799 = !DILexicalBlockFile(scope: !940, file: !1, discriminator: 1)
!3800 = !DILocation(line: 978, column: 5, scope: !944)
!3801 = !DILocation(line: 978, column: 5, scope: !940)
!3802 = !DILocation(line: 978, column: 5, scope: !3803)
!3803 = !DILexicalBlockFile(scope: !943, file: !1, discriminator: 2)
!3804 = !DILocation(line: 978, column: 5, scope: !3805)
!3805 = !DILexicalBlockFile(scope: !942, file: !1, discriminator: 4)
!3806 = !DILocation(line: 978, column: 5, scope: !3807)
!3807 = distinct !DILexicalBlock(scope: !942, file: !1, line: 978, column: 5)
!3808 = !DILocation(line: 978, column: 5, scope: !942)
!3809 = !DILocation(line: 978, column: 5, scope: !3810)
!3810 = !DILexicalBlockFile(scope: !3807, file: !1, discriminator: 6)
!3811 = !DILocation(line: 979, column: 17, scope: !931)
!3812 = !DILocation(line: 979, column: 15, scope: !931)
!3813 = !DILocation(line: 980, column: 5, scope: !3814)
!3814 = !DILexicalBlockFile(scope: !946, file: !1, discriminator: 1)
!3815 = !DILocation(line: 980, column: 5, scope: !3816)
!3816 = distinct !DILexicalBlock(scope: !946, file: !1, line: 980, column: 5)
!3817 = !DILocation(line: 980, column: 5, scope: !946)
!3818 = !DILocation(line: 980, column: 5, scope: !3819)
!3819 = !DILexicalBlockFile(scope: !3816, file: !1, discriminator: 2)
!3820 = !DILocation(line: 981, column: 21, scope: !931)
!3821 = !{!2691, !2691, i64 0}
!3822 = !DILocation(line: 981, column: 31, scope: !931)
!3823 = !DILocation(line: 981, column: 9, scope: !931)
!3824 = !DILocation(line: 981, column: 19, scope: !931)
!3825 = !DILocation(line: 982, column: 5, scope: !931)
!3826 = !DILocation(line: 983, column: 1, scope: !931)
!3827 = !DILocation(line: 1088, column: 36, scope: !966)
!3828 = !DILocation(line: 1090, column: 25, scope: !966)
!3829 = !DILocation(line: 1090, column: 5, scope: !966)
!3830 = !DILocation(line: 1091, column: 5, scope: !3831)
!3831 = !DILexicalBlockFile(scope: !972, file: !1, discriminator: 1)
!3832 = !{!3833, !2672, i64 16}
!3833 = !{!"", !2668, i64 0, !2672, i64 16, !2672, i64 24, !2669, i64 32}
!3834 = !DILocation(line: 1091, column: 5, scope: !975)
!3835 = !DILocation(line: 1091, column: 5, scope: !972)
!3836 = !DILocation(line: 1091, column: 5, scope: !3837)
!3837 = !DILexicalBlockFile(scope: !974, file: !1, discriminator: 4)
!3838 = !DILocation(line: 1091, column: 5, scope: !3839)
!3839 = distinct !DILexicalBlock(scope: !974, file: !1, line: 1091, column: 5)
!3840 = !DILocation(line: 1091, column: 5, scope: !974)
!3841 = !DILocation(line: 1091, column: 5, scope: !3842)
!3842 = !DILexicalBlockFile(scope: !3839, file: !1, discriminator: 6)
!3843 = !DILocation(line: 1092, column: 5, scope: !3844)
!3844 = !DILexicalBlockFile(scope: !977, file: !1, discriminator: 1)
!3845 = !{!3833, !2672, i64 24}
!3846 = !DILocation(line: 1092, column: 5, scope: !980)
!3847 = !DILocation(line: 1092, column: 5, scope: !977)
!3848 = !DILocation(line: 1092, column: 5, scope: !3849)
!3849 = !DILexicalBlockFile(scope: !979, file: !1, discriminator: 4)
!3850 = !DILocation(line: 1092, column: 5, scope: !3851)
!3851 = distinct !DILexicalBlock(scope: !979, file: !1, line: 1092, column: 5)
!3852 = !DILocation(line: 1092, column: 5, scope: !979)
!3853 = !DILocation(line: 1092, column: 5, scope: !3854)
!3854 = !DILexicalBlockFile(scope: !3851, file: !1, discriminator: 6)
!3855 = !DILocation(line: 1093, column: 5, scope: !966)
!3856 = !DILocation(line: 1093, column: 18, scope: !966)
!3857 = !DILocation(line: 1094, column: 1, scope: !966)
!3858 = !DILocation(line: 1097, column: 37, scope: !981)
!3859 = !DILocation(line: 1097, column: 51, scope: !981)
!3860 = !DILocation(line: 1097, column: 64, scope: !981)
!3861 = !DILocation(line: 1099, column: 5, scope: !3862)
!3862 = !DILexicalBlockFile(scope: !990, file: !1, discriminator: 1)
!3863 = !DILocation(line: 1099, column: 5, scope: !991)
!3864 = !DILocation(line: 1099, column: 5, scope: !3865)
!3865 = !DILexicalBlockFile(scope: !989, file: !1, discriminator: 2)
!3866 = !DILocation(line: 1099, column: 5, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !989, file: !1, line: 1099, column: 5)
!3868 = !DILocation(line: 1100, column: 5, scope: !3869)
!3869 = !DILexicalBlockFile(scope: !994, file: !1, discriminator: 1)
!3870 = !DILocation(line: 1100, column: 5, scope: !995)
!3871 = !DILocation(line: 1100, column: 5, scope: !3872)
!3872 = !DILexicalBlockFile(scope: !993, file: !1, discriminator: 2)
!3873 = !DILocation(line: 1100, column: 5, scope: !3874)
!3874 = distinct !DILexicalBlock(scope: !993, file: !1, line: 1100, column: 5)
!3875 = !DILocation(line: 1101, column: 5, scope: !981)
!3876 = !DILocation(line: 1102, column: 1, scope: !981)
!3877 = !DILocation(line: 1105, column: 33, scope: !996)
!3878 = !DILocation(line: 1108, column: 24, scope: !996)
!3879 = !DILocation(line: 1108, column: 15, scope: !996)
!3880 = !DILocation(line: 1112, column: 17, scope: !996)
!3881 = !DILocation(line: 1112, column: 30, scope: !996)
!3882 = !{!2689, !2672, i64 224}
!3883 = !DILocation(line: 1110, column: 17, scope: !996)
!3884 = !DILocation(line: 1117, column: 17, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !1010, file: !1, line: 1117, column: 13)
!3886 = !DILocation(line: 1120, column: 49, scope: !1010)
!3887 = !DILocation(line: 1113, column: 5, scope: !996)
!3888 = !DILocation(line: 1114, column: 16, scope: !1010)
!3889 = !DILocation(line: 1107, column: 15, scope: !996)
!3890 = !DILocation(line: 1115, column: 18, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !1010, file: !1, line: 1115, column: 13)
!3892 = !DILocation(line: 1115, column: 13, scope: !1010)
!3893 = !{!3833, !2669, i64 32}
!3894 = !DILocation(line: 1117, column: 23, scope: !3885)
!3895 = !DILocation(line: 1117, column: 13, scope: !1010)
!3896 = !DILocation(line: 1120, column: 16, scope: !1010)
!3897 = !DILocation(line: 1107, column: 22, scope: !996)
!3898 = !DILocation(line: 1121, column: 18, scope: !1009)
!3899 = !DILocation(line: 1121, column: 13, scope: !1010)
!3900 = !DILocation(line: 1122, column: 13, scope: !3901)
!3901 = !DILexicalBlockFile(scope: !1007, file: !1, discriminator: 1)
!3902 = !DILocation(line: 1122, column: 13, scope: !3903)
!3903 = distinct !DILexicalBlock(scope: !1007, file: !1, line: 1122, column: 13)
!3904 = !DILocation(line: 1122, column: 13, scope: !1007)
!3905 = !DILocation(line: 1122, column: 13, scope: !3906)
!3906 = !DILexicalBlockFile(scope: !3903, file: !1, discriminator: 3)
!3907 = !DILocation(line: 1125, column: 14, scope: !1010)
!3908 = !DILocation(line: 1126, column: 9, scope: !3909)
!3909 = !DILexicalBlockFile(scope: !1014, file: !1, discriminator: 1)
!3910 = !DILocation(line: 1126, column: 9, scope: !3911)
!3911 = distinct !DILexicalBlock(scope: !1014, file: !1, line: 1126, column: 9)
!3912 = !DILocation(line: 1126, column: 9, scope: !1014)
!3913 = !DILocation(line: 1126, column: 9, scope: !3914)
!3914 = !DILexicalBlockFile(scope: !3911, file: !1, discriminator: 3)
!3915 = !DILocation(line: 1127, column: 16, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !1010, file: !1, line: 1127, column: 13)
!3917 = !DILocation(line: 1127, column: 13, scope: !1010)
!3918 = !DILocation(line: 1128, column: 23, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3916, file: !1, line: 1127, column: 22)
!3920 = !DILocation(line: 1129, column: 13, scope: !3919)
!3921 = !DILocation(line: 1131, column: 9, scope: !3922)
!3922 = !DILexicalBlockFile(scope: !1016, file: !1, discriminator: 1)
!3923 = !DILocation(line: 1131, column: 9, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !1016, file: !1, line: 1131, column: 9)
!3925 = !DILocation(line: 1131, column: 9, scope: !1016)
!3926 = !DILocation(line: 1131, column: 9, scope: !3927)
!3927 = !DILexicalBlockFile(scope: !3924, file: !1, discriminator: 3)
!3928 = !DILocation(line: 1132, column: 16, scope: !3929)
!3929 = distinct !DILexicalBlock(scope: !1010, file: !1, line: 1132, column: 13)
!3930 = !DILocation(line: 1132, column: 13, scope: !1010)
!3931 = !DILocation(line: 1135, column: 1, scope: !996)
!3932 = !DILocation(line: 1056, column: 29, scope: !1027)
!3933 = !DILocation(line: 1056, column: 45, scope: !1027)
!3934 = !DILocation(line: 1056, column: 61, scope: !1027)
!3935 = !DILocation(line: 1058, column: 5, scope: !1027)
!3936 = !DILocation(line: 1062, column: 14, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !1027, file: !1, line: 1062, column: 9)
!3938 = !DILocation(line: 1062, column: 33, scope: !3937)
!3939 = !DILocation(line: 1062, column: 37, scope: !3937)
!3940 = !DILocation(line: 1062, column: 9, scope: !1027)
!3941 = !DILocation(line: 1058, column: 15, scope: !1027)
!3942 = !DILocation(line: 1058, column: 22, scope: !1027)
!3943 = !DILocation(line: 1065, column: 10, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !1027, file: !1, line: 1065, column: 9)
!3945 = !DILocation(line: 1065, column: 9, scope: !1027)
!3946 = !DILocation(line: 1069, column: 27, scope: !1027)
!3947 = !DILocation(line: 1069, column: 10, scope: !1027)
!3948 = !DILocation(line: 1059, column: 15, scope: !1027)
!3949 = !DILocation(line: 1070, column: 12, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !1027, file: !1, line: 1070, column: 9)
!3951 = !DILocation(line: 1070, column: 9, scope: !1027)
!3952 = !DILocation(line: 1074, column: 35, scope: !1027)
!3953 = !DILocation(line: 1074, column: 29, scope: !1027)
!3954 = !DILocation(line: 1075, column: 12, scope: !1039)
!3955 = !DILocation(line: 1075, column: 9, scope: !1027)
!3956 = !DILocation(line: 1076, column: 9, scope: !3957)
!3957 = !DILexicalBlockFile(scope: !1037, file: !1, discriminator: 1)
!3958 = !DILocation(line: 1076, column: 9, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !1037, file: !1, line: 1076, column: 9)
!3960 = !DILocation(line: 1076, column: 9, scope: !1037)
!3961 = !DILocation(line: 1076, column: 9, scope: !3962)
!3962 = !DILexicalBlockFile(scope: !3959, file: !1, discriminator: 3)
!3963 = !DILocation(line: 1079, column: 5, scope: !1027)
!3964 = !DILocation(line: 1080, column: 16, scope: !1027)
!3965 = !DILocation(line: 1080, column: 14, scope: !1027)
!3966 = !DILocation(line: 1081, column: 9, scope: !1027)
!3967 = !DILocation(line: 1081, column: 12, scope: !1027)
!3968 = !DILocation(line: 1082, column: 9, scope: !1027)
!3969 = !DILocation(line: 1082, column: 15, scope: !1027)
!3970 = !DILocation(line: 1084, column: 5, scope: !1027)
!3971 = !DILocation(line: 1085, column: 1, scope: !1027)
!3972 = !DILocation(line: 1138, column: 35, scope: !1017)
!3973 = !DILocation(line: 1140, column: 36, scope: !1017)
!3974 = !DILocation(line: 1141, column: 30, scope: !1017)
!3975 = !DILocation(line: 1141, column: 40, scope: !1017)
!3976 = !DILocation(line: 1141, column: 48, scope: !1017)
!3977 = !DILocation(line: 1140, column: 12, scope: !1017)
!3978 = !DILocation(line: 1140, column: 5, scope: !1017)
!3979 = !DILocation(line: 1145, column: 37, scope: !1020)
!3980 = !DILocation(line: 1145, column: 51, scope: !1020)
!3981 = !DILocation(line: 1147, column: 17, scope: !1020)
!3982 = !DILocation(line: 1147, column: 9, scope: !1020)
!3983 = !DILocation(line: 1148, column: 15, scope: !3984)
!3984 = distinct !DILexicalBlock(scope: !1020, file: !1, line: 1148, column: 9)
!3985 = !DILocation(line: 1148, column: 9, scope: !1020)
!3986 = !DILocation(line: 1150, column: 17, scope: !1020)
!3987 = !DILocation(line: 1150, column: 9, scope: !1020)
!3988 = !DILocation(line: 1150, column: 15, scope: !1020)
!3989 = !DILocation(line: 1151, column: 5, scope: !1020)
!3990 = !DILocation(line: 1152, column: 1, scope: !1020)
!3991 = !DILocation(line: 1257, column: 36, scope: !1040)
!3992 = !DILocation(line: 1259, column: 25, scope: !1040)
!3993 = !DILocation(line: 1259, column: 5, scope: !1040)
!3994 = !DILocation(line: 1260, column: 5, scope: !3995)
!3995 = !DILexicalBlockFile(scope: !1046, file: !1, discriminator: 1)
!3996 = !DILocation(line: 1260, column: 5, scope: !1049)
!3997 = !DILocation(line: 1260, column: 5, scope: !1046)
!3998 = !DILocation(line: 1260, column: 5, scope: !3999)
!3999 = !DILexicalBlockFile(scope: !1048, file: !1, discriminator: 4)
!4000 = !DILocation(line: 1260, column: 5, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !1048, file: !1, line: 1260, column: 5)
!4002 = !DILocation(line: 1260, column: 5, scope: !1048)
!4003 = !DILocation(line: 1260, column: 5, scope: !4004)
!4004 = !DILexicalBlockFile(scope: !4001, file: !1, discriminator: 6)
!4005 = !DILocation(line: 1261, column: 5, scope: !4006)
!4006 = !DILexicalBlockFile(scope: !1051, file: !1, discriminator: 1)
!4007 = !DILocation(line: 1261, column: 5, scope: !1054)
!4008 = !DILocation(line: 1261, column: 5, scope: !1051)
!4009 = !DILocation(line: 1261, column: 5, scope: !4010)
!4010 = !DILexicalBlockFile(scope: !1053, file: !1, discriminator: 4)
!4011 = !DILocation(line: 1261, column: 5, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !1053, file: !1, line: 1261, column: 5)
!4013 = !DILocation(line: 1261, column: 5, scope: !1053)
!4014 = !DILocation(line: 1261, column: 5, scope: !4015)
!4015 = !DILexicalBlockFile(scope: !4012, file: !1, discriminator: 6)
!4016 = !DILocation(line: 1262, column: 5, scope: !1040)
!4017 = !DILocation(line: 1262, column: 18, scope: !1040)
!4018 = !DILocation(line: 1263, column: 1, scope: !1040)
!4019 = !DILocation(line: 1266, column: 37, scope: !1055)
!4020 = !DILocation(line: 1266, column: 51, scope: !1055)
!4021 = !DILocation(line: 1266, column: 64, scope: !1055)
!4022 = !DILocation(line: 1268, column: 5, scope: !4023)
!4023 = !DILexicalBlockFile(scope: !1064, file: !1, discriminator: 1)
!4024 = !DILocation(line: 1268, column: 5, scope: !1065)
!4025 = !DILocation(line: 1268, column: 5, scope: !4026)
!4026 = !DILexicalBlockFile(scope: !1063, file: !1, discriminator: 2)
!4027 = !DILocation(line: 1268, column: 5, scope: !4028)
!4028 = distinct !DILexicalBlock(scope: !1063, file: !1, line: 1268, column: 5)
!4029 = !DILocation(line: 1269, column: 5, scope: !4030)
!4030 = !DILexicalBlockFile(scope: !1068, file: !1, discriminator: 1)
!4031 = !DILocation(line: 1269, column: 5, scope: !1069)
!4032 = !DILocation(line: 1269, column: 5, scope: !4033)
!4033 = !DILexicalBlockFile(scope: !1067, file: !1, discriminator: 2)
!4034 = !DILocation(line: 1269, column: 5, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !1067, file: !1, line: 1269, column: 5)
!4036 = !DILocation(line: 1270, column: 5, scope: !1055)
!4037 = !DILocation(line: 1271, column: 1, scope: !1055)
!4038 = !DILocation(line: 1274, column: 33, scope: !1070)
!4039 = !DILocation(line: 1277, column: 24, scope: !1070)
!4040 = !DILocation(line: 1277, column: 15, scope: !1070)
!4041 = !DILocation(line: 1280, column: 13, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !1070, file: !1, line: 1280, column: 9)
!4043 = !DILocation(line: 1280, column: 18, scope: !4042)
!4044 = !DILocation(line: 1280, column: 9, scope: !1070)
!4045 = !DILocation(line: 1283, column: 14, scope: !1070)
!4046 = !DILocation(line: 1283, column: 27, scope: !1070)
!4047 = !DILocation(line: 1283, column: 12, scope: !1070)
!4048 = !DILocation(line: 1276, column: 15, scope: !1070)
!4049 = !DILocation(line: 1284, column: 14, scope: !4050)
!4050 = distinct !DILexicalBlock(scope: !1070, file: !1, line: 1284, column: 9)
!4051 = !DILocation(line: 1284, column: 9, scope: !1070)
!4052 = !DILocation(line: 1287, column: 45, scope: !1070)
!4053 = !DILocation(line: 1287, column: 12, scope: !1070)
!4054 = !DILocation(line: 1276, column: 22, scope: !1070)
!4055 = !DILocation(line: 1288, column: 14, scope: !1082)
!4056 = !DILocation(line: 1288, column: 9, scope: !1070)
!4057 = !DILocation(line: 1289, column: 9, scope: !4058)
!4058 = !DILexicalBlockFile(scope: !1080, file: !1, discriminator: 1)
!4059 = !DILocation(line: 1289, column: 9, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !1080, file: !1, line: 1289, column: 9)
!4061 = !DILocation(line: 1289, column: 9, scope: !1080)
!4062 = !DILocation(line: 1289, column: 9, scope: !4063)
!4063 = !DILexicalBlockFile(scope: !4060, file: !1, discriminator: 3)
!4064 = !DILocation(line: 1292, column: 10, scope: !1070)
!4065 = !DILocation(line: 1293, column: 5, scope: !4066)
!4066 = !DILexicalBlockFile(scope: !1084, file: !1, discriminator: 1)
!4067 = !DILocation(line: 1293, column: 5, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !1084, file: !1, line: 1293, column: 5)
!4069 = !DILocation(line: 1293, column: 5, scope: !1084)
!4070 = !DILocation(line: 1293, column: 5, scope: !4071)
!4071 = !DILexicalBlockFile(scope: !4068, file: !1, discriminator: 3)
!4072 = !DILocation(line: 1294, column: 12, scope: !4073)
!4073 = distinct !DILexicalBlock(scope: !1070, file: !1, line: 1294, column: 9)
!4074 = !DILocation(line: 1294, column: 9, scope: !1070)
!4075 = !DILocation(line: 1296, column: 5, scope: !4076)
!4076 = !DILexicalBlockFile(scope: !1086, file: !1, discriminator: 1)
!4077 = !DILocation(line: 1296, column: 5, scope: !4078)
!4078 = distinct !DILexicalBlock(scope: !1086, file: !1, line: 1296, column: 5)
!4079 = !DILocation(line: 1296, column: 5, scope: !1086)
!4080 = !DILocation(line: 1296, column: 5, scope: !4081)
!4081 = !DILexicalBlockFile(scope: !4078, file: !1, discriminator: 3)
!4082 = !DILocation(line: 1297, column: 12, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !1070, file: !1, line: 1297, column: 9)
!4084 = !DILocation(line: 1297, column: 9, scope: !1070)
!4085 = !DILocation(line: 1298, column: 18, scope: !4083)
!4086 = !DILocation(line: 1298, column: 9, scope: !4083)
!4087 = !DILocation(line: 1300, column: 1, scope: !1070)
!4088 = !DILocation(line: 1225, column: 29, scope: !1097)
!4089 = !DILocation(line: 1225, column: 45, scope: !1097)
!4090 = !DILocation(line: 1225, column: 61, scope: !1097)
!4091 = !DILocation(line: 1227, column: 5, scope: !1097)
!4092 = !DILocation(line: 1231, column: 14, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !1097, file: !1, line: 1231, column: 9)
!4094 = !DILocation(line: 1231, column: 33, scope: !4093)
!4095 = !DILocation(line: 1231, column: 37, scope: !4093)
!4096 = !DILocation(line: 1231, column: 9, scope: !1097)
!4097 = !DILocation(line: 1227, column: 15, scope: !1097)
!4098 = !DILocation(line: 1227, column: 22, scope: !1097)
!4099 = !DILocation(line: 1234, column: 10, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !1097, file: !1, line: 1234, column: 9)
!4101 = !DILocation(line: 1234, column: 9, scope: !1097)
!4102 = !DILocation(line: 1238, column: 27, scope: !1097)
!4103 = !DILocation(line: 1238, column: 10, scope: !1097)
!4104 = !DILocation(line: 1228, column: 15, scope: !1097)
!4105 = !DILocation(line: 1239, column: 12, scope: !4106)
!4106 = distinct !DILexicalBlock(scope: !1097, file: !1, line: 1239, column: 9)
!4107 = !DILocation(line: 1239, column: 9, scope: !1097)
!4108 = !DILocation(line: 1243, column: 35, scope: !1097)
!4109 = !DILocation(line: 1243, column: 29, scope: !1097)
!4110 = !DILocation(line: 1244, column: 12, scope: !1109)
!4111 = !DILocation(line: 1244, column: 9, scope: !1097)
!4112 = !DILocation(line: 1245, column: 9, scope: !4113)
!4113 = !DILexicalBlockFile(scope: !1107, file: !1, discriminator: 1)
!4114 = !DILocation(line: 1245, column: 9, scope: !4115)
!4115 = distinct !DILexicalBlock(scope: !1107, file: !1, line: 1245, column: 9)
!4116 = !DILocation(line: 1245, column: 9, scope: !1107)
!4117 = !DILocation(line: 1245, column: 9, scope: !4118)
!4118 = !DILexicalBlockFile(scope: !4115, file: !1, discriminator: 3)
!4119 = !DILocation(line: 1248, column: 5, scope: !1097)
!4120 = !DILocation(line: 1249, column: 16, scope: !1097)
!4121 = !DILocation(line: 1249, column: 14, scope: !1097)
!4122 = !DILocation(line: 1250, column: 9, scope: !1097)
!4123 = !DILocation(line: 1250, column: 12, scope: !1097)
!4124 = !DILocation(line: 1251, column: 9, scope: !1097)
!4125 = !DILocation(line: 1251, column: 14, scope: !1097)
!4126 = !DILocation(line: 1253, column: 5, scope: !1097)
!4127 = !DILocation(line: 1254, column: 1, scope: !1097)
!4128 = !DILocation(line: 1303, column: 35, scope: !1087)
!4129 = !DILocation(line: 1305, column: 36, scope: !1087)
!4130 = !DILocation(line: 1306, column: 30, scope: !1087)
!4131 = !DILocation(line: 1306, column: 40, scope: !1087)
!4132 = !DILocation(line: 1306, column: 48, scope: !1087)
!4133 = !DILocation(line: 1305, column: 12, scope: !1087)
!4134 = !DILocation(line: 1305, column: 5, scope: !1087)
!4135 = !DILocation(line: 1310, column: 44, scope: !1090)
!4136 = !DILocation(line: 1310, column: 58, scope: !1090)
!4137 = !DILocation(line: 1312, column: 16, scope: !1090)
!4138 = !DILocation(line: 1312, column: 9, scope: !1090)
!4139 = !DILocation(line: 1313, column: 14, scope: !4140)
!4140 = distinct !DILexicalBlock(scope: !1090, file: !1, line: 1313, column: 9)
!4141 = !DILocation(line: 1313, column: 9, scope: !1090)
!4142 = !DILocation(line: 1315, column: 16, scope: !1090)
!4143 = !DILocation(line: 1315, column: 9, scope: !1090)
!4144 = !DILocation(line: 1315, column: 14, scope: !1090)
!4145 = !DILocation(line: 1316, column: 5, scope: !1090)
!4146 = !DILocation(line: 1317, column: 1, scope: !1090)
!4147 = !DILocation(line: 1472, column: 30, scope: !1110)
!4148 = !DILocation(line: 1474, column: 25, scope: !1110)
!4149 = !DILocation(line: 1474, column: 5, scope: !1110)
!4150 = !DILocation(line: 1475, column: 5, scope: !4151)
!4151 = !DILexicalBlockFile(scope: !1116, file: !1, discriminator: 1)
!4152 = !{!4153, !2672, i64 16}
!4153 = !{!"", !2668, i64 0, !2672, i64 16, !2669, i64 24, !2669, i64 32, !2669, i64 40, !2669, i64 48}
!4154 = !DILocation(line: 1475, column: 5, scope: !1119)
!4155 = !DILocation(line: 1475, column: 5, scope: !1116)
!4156 = !DILocation(line: 1475, column: 5, scope: !4157)
!4157 = !DILexicalBlockFile(scope: !1118, file: !1, discriminator: 4)
!4158 = !DILocation(line: 1475, column: 5, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !1118, file: !1, line: 1475, column: 5)
!4160 = !DILocation(line: 1475, column: 5, scope: !1118)
!4161 = !DILocation(line: 1475, column: 5, scope: !4162)
!4162 = !DILexicalBlockFile(scope: !4159, file: !1, discriminator: 6)
!4163 = !DILocation(line: 1476, column: 5, scope: !1110)
!4164 = !DILocation(line: 1476, column: 18, scope: !1110)
!4165 = !DILocation(line: 1477, column: 1, scope: !1110)
!4166 = !DILocation(line: 1480, column: 31, scope: !1120)
!4167 = !DILocation(line: 1480, column: 45, scope: !1120)
!4168 = !DILocation(line: 1480, column: 58, scope: !1120)
!4169 = !DILocation(line: 1482, column: 5, scope: !4170)
!4170 = !DILexicalBlockFile(scope: !1129, file: !1, discriminator: 1)
!4171 = !DILocation(line: 1482, column: 5, scope: !1130)
!4172 = !DILocation(line: 1482, column: 5, scope: !4173)
!4173 = !DILexicalBlockFile(scope: !1128, file: !1, discriminator: 2)
!4174 = !DILocation(line: 1482, column: 5, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !1128, file: !1, line: 1482, column: 5)
!4176 = !DILocation(line: 1483, column: 5, scope: !1120)
!4177 = !DILocation(line: 1484, column: 1, scope: !1120)
!4178 = !DILocation(line: 1487, column: 27, scope: !1131)
!4179 = !DILocation(line: 1490, column: 24, scope: !1131)
!4180 = !DILocation(line: 1490, column: 15, scope: !1131)
!4181 = !DILocation(line: 1491, column: 27, scope: !1131)
!4182 = !{!4153, !2669, i64 32}
!4183 = !DILocation(line: 1491, column: 16, scope: !1131)
!4184 = !DILocation(line: 1495, column: 12, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !1131, file: !1, line: 1495, column: 9)
!4186 = !DILocation(line: 1495, column: 9, scope: !1131)
!4187 = !DILocation(line: 1498, column: 17, scope: !1131)
!4188 = !DILocation(line: 1498, column: 30, scope: !1131)
!4189 = !DILocation(line: 1493, column: 17, scope: !1131)
!4190 = !DILocation(line: 1499, column: 16, scope: !1131)
!4191 = !{!4153, !2669, i64 48}
!4192 = !DILocation(line: 1499, column: 26, scope: !1131)
!4193 = !{!4153, !2669, i64 24}
!4194 = !DILocation(line: 1499, column: 20, scope: !1131)
!4195 = !DILocation(line: 1499, column: 5, scope: !1131)
!4196 = !DILocation(line: 1500, column: 16, scope: !1143)
!4197 = !DILocation(line: 1489, column: 15, scope: !1131)
!4198 = !DILocation(line: 1501, column: 18, scope: !4199)
!4199 = distinct !DILexicalBlock(scope: !1143, file: !1, line: 1501, column: 13)
!4200 = !DILocation(line: 1501, column: 13, scope: !1143)
!4201 = !DILocation(line: 1503, column: 9, scope: !4202)
!4202 = !DILexicalBlockFile(scope: !1142, file: !1, discriminator: 1)
!4203 = !DILocation(line: 1503, column: 9, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !1142, file: !1, line: 1503, column: 9)
!4205 = !DILocation(line: 1503, column: 9, scope: !1142)
!4206 = !DILocation(line: 1503, column: 9, scope: !4207)
!4207 = !DILexicalBlockFile(scope: !4204, file: !1, discriminator: 3)
!4208 = !DILocation(line: 1504, column: 16, scope: !1143)
!4209 = !DILocation(line: 1506, column: 14, scope: !4210)
!4210 = distinct !DILexicalBlock(scope: !1131, file: !1, line: 1506, column: 9)
!4211 = !DILocation(line: 1506, column: 20, scope: !4210)
!4212 = !DILocation(line: 1506, column: 31, scope: !4210)
!4213 = !DILocation(line: 1508, column: 12, scope: !1131)
!4214 = !DILocation(line: 1509, column: 14, scope: !4215)
!4215 = distinct !DILexicalBlock(scope: !1131, file: !1, line: 1509, column: 9)
!4216 = !DILocation(line: 1509, column: 9, scope: !1131)
!4217 = !DILocation(line: 1511, column: 12, scope: !1131)
!4218 = !DILocation(line: 1512, column: 19, scope: !1131)
!4219 = !DILocation(line: 1492, column: 16, scope: !1131)
!4220 = !DILocation(line: 1515, column: 29, scope: !1131)
!4221 = !{!4153, !2669, i64 40}
!4222 = !DILocation(line: 1515, column: 14, scope: !1131)
!4223 = !DILocation(line: 1516, column: 18, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !1131, file: !1, line: 1516, column: 9)
!4225 = !DILocation(line: 1516, column: 43, scope: !4224)
!4226 = !DILocation(line: 1516, column: 28, scope: !4224)
!4227 = !DILocation(line: 1517, column: 18, scope: !4224)
!4228 = !DILocation(line: 1521, column: 5, scope: !4229)
!4229 = !DILexicalBlockFile(scope: !1145, file: !1, discriminator: 1)
!4230 = !DILocation(line: 1521, column: 5, scope: !1149)
!4231 = !DILocation(line: 1521, column: 5, scope: !1145)
!4232 = !DILocation(line: 1521, column: 5, scope: !4233)
!4233 = !DILexicalBlockFile(scope: !1148, file: !1, discriminator: 2)
!4234 = !DILocation(line: 1521, column: 5, scope: !4235)
!4235 = !DILexicalBlockFile(scope: !1147, file: !1, discriminator: 4)
!4236 = !DILocation(line: 1521, column: 5, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !1147, file: !1, line: 1521, column: 5)
!4238 = !DILocation(line: 1521, column: 5, scope: !1147)
!4239 = !DILocation(line: 1521, column: 5, scope: !4240)
!4240 = !DILexicalBlockFile(scope: !4237, file: !1, discriminator: 6)
!4241 = !DILocation(line: 1523, column: 1, scope: !1131)
!4242 = !DILocation(line: 1391, column: 26, scope: !1167)
!4243 = !DILocation(line: 1391, column: 42, scope: !1167)
!4244 = !DILocation(line: 1391, column: 58, scope: !1167)
!4245 = !DILocation(line: 1393, column: 5, scope: !1167)
!4246 = !DILocation(line: 1394, column: 16, scope: !1167)
!4247 = !DILocation(line: 1394, column: 25, scope: !1167)
!4248 = !DILocation(line: 1394, column: 34, scope: !1167)
!4249 = !DILocation(line: 1395, column: 5, scope: !1167)
!4250 = !DILocation(line: 1395, column: 20, scope: !1167)
!4251 = !DILocation(line: 1395, column: 30, scope: !1167)
!4252 = !DILocation(line: 1395, column: 40, scope: !1167)
!4253 = !DILocation(line: 1399, column: 14, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !1167, file: !1, line: 1399, column: 9)
!4255 = !DILocation(line: 1399, column: 30, scope: !4254)
!4256 = !DILocation(line: 1399, column: 34, scope: !4254)
!4257 = !DILocation(line: 1399, column: 9, scope: !1167)
!4258 = !DILocation(line: 1393, column: 15, scope: !1167)
!4259 = !DILocation(line: 1402, column: 10, scope: !4260)
!4260 = distinct !DILexicalBlock(scope: !1167, file: !1, line: 1402, column: 9)
!4261 = !DILocation(line: 1402, column: 9, scope: !1167)
!4262 = !DILocation(line: 1405, column: 15, scope: !1167)
!4263 = !DILocation(line: 1396, column: 16, scope: !1167)
!4264 = !DILocation(line: 1406, column: 17, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !1167, file: !1, line: 1406, column: 9)
!4266 = !DILocation(line: 1407, column: 13, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4268, file: !1, line: 1407, column: 13)
!4268 = distinct !DILexicalBlock(scope: !4265, file: !1, line: 1406, column: 23)
!4269 = !DILocation(line: 1407, column: 16, scope: !4267)
!4270 = !DILocation(line: 1406, column: 9, scope: !1167)
!4271 = !DILocation(line: 1407, column: 13, scope: !4268)
!4272 = !DILocation(line: 1408, column: 20, scope: !4273)
!4273 = distinct !DILexicalBlock(scope: !4267, file: !1, line: 1407, column: 28)
!4274 = !DILocation(line: 1409, column: 22, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4273, file: !1, line: 1409, column: 17)
!4276 = !DILocation(line: 1409, column: 17, scope: !4273)
!4277 = !DILocation(line: 1410, column: 21, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4279, file: !1, line: 1410, column: 21)
!4279 = distinct !DILexicalBlock(scope: !4275, file: !1, line: 1409, column: 29)
!4280 = !DILocation(line: 1410, column: 21, scope: !4279)
!4281 = !DILocation(line: 1411, column: 21, scope: !4278)
!4282 = !DILocation(line: 1412, column: 33, scope: !4279)
!4283 = !DILocation(line: 1412, column: 17, scope: !4279)
!4284 = !DILocation(line: 1414, column: 17, scope: !4279)
!4285 = !DILocation(line: 1418, column: 13, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4265, file: !1, line: 1417, column: 12)
!4287 = !DILocation(line: 1419, column: 21, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !4286, file: !1, line: 1418, column: 13)
!4289 = !DILocation(line: 1420, column: 19, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4286, file: !1, line: 1420, column: 13)
!4291 = !DILocation(line: 1420, column: 25, scope: !4290)
!4292 = !DILocation(line: 1420, column: 28, scope: !4293)
!4293 = !DILexicalBlockFile(scope: !4290, file: !1, discriminator: 1)
!4294 = !DILocation(line: 1420, column: 13, scope: !4286)
!4295 = !DILocation(line: 1421, column: 13, scope: !4290)
!4296 = !DILocation(line: 1422, column: 13, scope: !4297)
!4297 = distinct !DILexicalBlock(scope: !4286, file: !1, line: 1422, column: 13)
!4298 = !DILocation(line: 1422, column: 16, scope: !4297)
!4299 = !DILocation(line: 1422, column: 13, scope: !4286)
!4300 = !DILocation(line: 1423, column: 20, scope: !4301)
!4301 = distinct !DILexicalBlock(scope: !4297, file: !1, line: 1422, column: 28)
!4302 = !DILocation(line: 1424, column: 22, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4301, file: !1, line: 1424, column: 17)
!4304 = !DILocation(line: 1424, column: 17, scope: !4301)
!4305 = !DILocation(line: 1425, column: 21, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4307, file: !1, line: 1425, column: 21)
!4307 = distinct !DILexicalBlock(scope: !4303, file: !1, line: 1424, column: 29)
!4308 = !DILocation(line: 1425, column: 21, scope: !4307)
!4309 = !DILocation(line: 1426, column: 21, scope: !4306)
!4310 = !DILocation(line: 1427, column: 33, scope: !4307)
!4311 = !DILocation(line: 1427, column: 17, scope: !4307)
!4312 = !DILocation(line: 1429, column: 17, scope: !4307)
!4313 = !DILocation(line: 1433, column: 14, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !1167, file: !1, line: 1433, column: 9)
!4315 = !DILocation(line: 1433, column: 24, scope: !4314)
!4316 = !DILocation(line: 1433, column: 17, scope: !4314)
!4317 = !DILocation(line: 1434, column: 25, scope: !4318)
!4318 = distinct !DILexicalBlock(scope: !4314, file: !1, line: 1433, column: 29)
!4319 = !DILocation(line: 1434, column: 9, scope: !4318)
!4320 = !DILocation(line: 1436, column: 9, scope: !4318)
!4321 = !DILocation(line: 1439, column: 9, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !1167, file: !1, line: 1439, column: 9)
!4323 = !DILocation(line: 1439, column: 12, scope: !4322)
!4324 = !DILocation(line: 1440, column: 16, scope: !4325)
!4325 = distinct !DILexicalBlock(scope: !4326, file: !1, line: 1440, column: 13)
!4326 = distinct !DILexicalBlock(scope: !4322, file: !1, line: 1439, column: 21)
!4327 = !DILocation(line: 1439, column: 9, scope: !1167)
!4328 = !DILocation(line: 1441, column: 20, scope: !4325)
!4329 = !DILocation(line: 1442, column: 18, scope: !4330)
!4330 = distinct !DILexicalBlock(scope: !4326, file: !1, line: 1442, column: 13)
!4331 = !DILocation(line: 1442, column: 24, scope: !4330)
!4332 = !DILocation(line: 1442, column: 27, scope: !4333)
!4333 = !DILexicalBlockFile(scope: !4330, file: !1, discriminator: 1)
!4334 = !DILocation(line: 1442, column: 13, scope: !4326)
!4335 = !DILocation(line: 1443, column: 13, scope: !4330)
!4336 = !DILocation(line: 1445, column: 13, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !1167, file: !1, line: 1445, column: 9)
!4338 = !DILocation(line: 1445, column: 9, scope: !1167)
!4339 = !DILocation(line: 1446, column: 25, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !4337, file: !1, line: 1445, column: 17)
!4341 = !DILocation(line: 1446, column: 9, scope: !4340)
!4342 = !DILocation(line: 1448, column: 9, scope: !4340)
!4343 = !DILocation(line: 1452, column: 27, scope: !1167)
!4344 = !DILocation(line: 1452, column: 10, scope: !1167)
!4345 = !DILocation(line: 1395, column: 15, scope: !1167)
!4346 = !DILocation(line: 1453, column: 12, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !1167, file: !1, line: 1453, column: 9)
!4348 = !DILocation(line: 1453, column: 9, scope: !1167)
!4349 = !DILocation(line: 1457, column: 32, scope: !1167)
!4350 = !DILocation(line: 1457, column: 26, scope: !1167)
!4351 = !DILocation(line: 1458, column: 12, scope: !1185)
!4352 = !DILocation(line: 1458, column: 9, scope: !1167)
!4353 = !DILocation(line: 1459, column: 9, scope: !4354)
!4354 = !DILexicalBlockFile(scope: !1183, file: !1, discriminator: 1)
!4355 = !DILocation(line: 1459, column: 9, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !1183, file: !1, line: 1459, column: 9)
!4357 = !DILocation(line: 1459, column: 9, scope: !1183)
!4358 = !DILocation(line: 1459, column: 9, scope: !4359)
!4359 = !DILexicalBlockFile(scope: !4356, file: !1, discriminator: 3)
!4360 = !DILocation(line: 1462, column: 9, scope: !1167)
!4361 = !DILocation(line: 1462, column: 12, scope: !1167)
!4362 = !DILocation(line: 1463, column: 9, scope: !1167)
!4363 = !DILocation(line: 1463, column: 14, scope: !1167)
!4364 = !DILocation(line: 1464, column: 9, scope: !1167)
!4365 = !DILocation(line: 1464, column: 14, scope: !1167)
!4366 = !DILocation(line: 1465, column: 9, scope: !1167)
!4367 = !DILocation(line: 1465, column: 14, scope: !1167)
!4368 = !DILocation(line: 1466, column: 9, scope: !1167)
!4369 = !DILocation(line: 1466, column: 13, scope: !1167)
!4370 = !DILocation(line: 1468, column: 5, scope: !1167)
!4371 = !DILocation(line: 1469, column: 1, scope: !1167)
!4372 = !DILocation(line: 1526, column: 29, scope: !1150)
!4373 = !DILocation(line: 1532, column: 13, scope: !1156)
!4374 = !DILocation(line: 1532, column: 16, scope: !1156)
!4375 = !DILocation(line: 1532, column: 9, scope: !1150)
!4376 = !DILocation(line: 1535, column: 22, scope: !1155)
!4377 = !DILocation(line: 1533, column: 19, scope: !1155)
!4378 = !DILocation(line: 1536, column: 24, scope: !4379)
!4379 = distinct !DILexicalBlock(scope: !1155, file: !1, line: 1536, column: 13)
!4380 = !DILocation(line: 1536, column: 13, scope: !1155)
!4381 = !DILocation(line: 1538, column: 20, scope: !1155)
!4382 = !DILocation(line: 1534, column: 19, scope: !1155)
!4383 = !DILocation(line: 1539, column: 9, scope: !4384)
!4384 = !DILexicalBlockFile(scope: !1159, file: !1, discriminator: 1)
!4385 = !DILocation(line: 1539, column: 9, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !1159, file: !1, line: 1539, column: 9)
!4387 = !DILocation(line: 1539, column: 9, scope: !1159)
!4388 = !DILocation(line: 1539, column: 9, scope: !4389)
!4389 = !DILexicalBlockFile(scope: !4386, file: !1, discriminator: 3)
!4390 = !DILocation(line: 1540, column: 22, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !1155, file: !1, line: 1540, column: 13)
!4392 = !DILocation(line: 1540, column: 13, scope: !1155)
!4393 = !DILocation(line: 1542, column: 40, scope: !1155)
!4394 = !DILocation(line: 1542, column: 16, scope: !1155)
!4395 = !DILocation(line: 1542, column: 9, scope: !1155)
!4396 = !DILocation(line: 1544, column: 13, scope: !4397)
!4397 = distinct !DILexicalBlock(scope: !1150, file: !1, line: 1544, column: 9)
!4398 = !DILocation(line: 1544, column: 18, scope: !4397)
!4399 = !DILocation(line: 1544, column: 9, scope: !1150)
!4400 = !DILocation(line: 1531, column: 15, scope: !1150)
!4401 = !DILocation(line: 1546, column: 9, scope: !4402)
!4402 = distinct !DILexicalBlock(scope: !4397, file: !1, line: 1544, column: 25)
!4403 = !DILocation(line: 1547, column: 5, scope: !4402)
!4404 = !DILocation(line: 1548, column: 16, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4397, file: !1, line: 1547, column: 12)
!4406 = !DILocation(line: 1549, column: 18, scope: !4407)
!4407 = distinct !DILexicalBlock(scope: !4405, file: !1, line: 1549, column: 13)
!4408 = !DILocation(line: 1549, column: 13, scope: !4405)
!4409 = !DILocation(line: 1553, column: 13, scope: !1150)
!4410 = !DILocation(line: 1552, column: 38, scope: !1150)
!4411 = !DILocation(line: 1553, column: 21, scope: !1150)
!4412 = !DILocation(line: 1553, column: 37, scope: !1150)
!4413 = !DILocation(line: 1554, column: 13, scope: !1150)
!4414 = !DILocation(line: 1552, column: 12, scope: !1150)
!4415 = !DILocation(line: 1552, column: 5, scope: !1150)
!4416 = !DILocation(line: 1555, column: 1, scope: !1150)
!4417 = !DILocation(line: 1558, column: 31, scope: !1160)
!4418 = !DILocation(line: 1558, column: 45, scope: !1160)
!4419 = !DILocation(line: 1560, column: 22, scope: !1160)
!4420 = !DILocation(line: 1560, column: 16, scope: !1160)
!4421 = !DILocation(line: 1561, column: 13, scope: !4422)
!4422 = distinct !DILexicalBlock(scope: !1160, file: !1, line: 1561, column: 9)
!4423 = !DILocation(line: 1561, column: 19, scope: !4422)
!4424 = !DILocation(line: 1561, column: 22, scope: !4425)
!4425 = !DILexicalBlockFile(scope: !4422, file: !1, discriminator: 1)
!4426 = !DILocation(line: 1561, column: 9, scope: !1160)
!4427 = !DILocation(line: 1563, column: 9, scope: !1160)
!4428 = !DILocation(line: 1563, column: 13, scope: !1160)
!4429 = !DILocation(line: 1564, column: 5, scope: !1160)
!4430 = !DILocation(line: 1565, column: 1, scope: !1160)
!4431 = !DILocation(line: 1673, column: 32, scope: !1186)
!4432 = !DILocation(line: 1675, column: 25, scope: !1186)
!4433 = !DILocation(line: 1675, column: 5, scope: !1186)
!4434 = !DILocation(line: 1676, column: 5, scope: !4435)
!4435 = !DILexicalBlockFile(scope: !1192, file: !1, discriminator: 1)
!4436 = !{!4437, !2672, i64 16}
!4437 = !{!"", !2668, i64 0, !2672, i64 16, !2672, i64 24}
!4438 = !DILocation(line: 1676, column: 5, scope: !1195)
!4439 = !DILocation(line: 1676, column: 5, scope: !1192)
!4440 = !DILocation(line: 1676, column: 5, scope: !4441)
!4441 = !DILexicalBlockFile(scope: !1194, file: !1, discriminator: 4)
!4442 = !DILocation(line: 1676, column: 5, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !1194, file: !1, line: 1676, column: 5)
!4444 = !DILocation(line: 1676, column: 5, scope: !1194)
!4445 = !DILocation(line: 1676, column: 5, scope: !4446)
!4446 = !DILexicalBlockFile(scope: !4443, file: !1, discriminator: 6)
!4447 = !DILocation(line: 1677, column: 5, scope: !4448)
!4448 = !DILexicalBlockFile(scope: !1197, file: !1, discriminator: 1)
!4449 = !{!4437, !2672, i64 24}
!4450 = !DILocation(line: 1677, column: 5, scope: !1200)
!4451 = !DILocation(line: 1677, column: 5, scope: !1197)
!4452 = !DILocation(line: 1677, column: 5, scope: !4453)
!4453 = !DILexicalBlockFile(scope: !1199, file: !1, discriminator: 4)
!4454 = !DILocation(line: 1677, column: 5, scope: !4455)
!4455 = distinct !DILexicalBlock(scope: !1199, file: !1, line: 1677, column: 5)
!4456 = !DILocation(line: 1677, column: 5, scope: !1199)
!4457 = !DILocation(line: 1677, column: 5, scope: !4458)
!4458 = !DILexicalBlockFile(scope: !4455, file: !1, discriminator: 6)
!4459 = !DILocation(line: 1678, column: 5, scope: !1186)
!4460 = !DILocation(line: 1678, column: 18, scope: !1186)
!4461 = !DILocation(line: 1679, column: 1, scope: !1186)
!4462 = !DILocation(line: 1682, column: 33, scope: !1201)
!4463 = !DILocation(line: 1682, column: 47, scope: !1201)
!4464 = !DILocation(line: 1682, column: 60, scope: !1201)
!4465 = !DILocation(line: 1684, column: 5, scope: !4466)
!4466 = !DILexicalBlockFile(scope: !1210, file: !1, discriminator: 1)
!4467 = !DILocation(line: 1684, column: 5, scope: !1211)
!4468 = !DILocation(line: 1684, column: 5, scope: !4469)
!4469 = !DILexicalBlockFile(scope: !1209, file: !1, discriminator: 2)
!4470 = !DILocation(line: 1684, column: 5, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !1209, file: !1, line: 1684, column: 5)
!4472 = !DILocation(line: 1685, column: 5, scope: !4473)
!4473 = !DILexicalBlockFile(scope: !1214, file: !1, discriminator: 1)
!4474 = !DILocation(line: 1685, column: 5, scope: !1215)
!4475 = !DILocation(line: 1685, column: 5, scope: !4476)
!4476 = !DILexicalBlockFile(scope: !1213, file: !1, discriminator: 2)
!4477 = !DILocation(line: 1685, column: 5, scope: !4478)
!4478 = distinct !DILexicalBlock(scope: !1213, file: !1, line: 1685, column: 5)
!4479 = !DILocation(line: 1686, column: 5, scope: !1201)
!4480 = !DILocation(line: 1687, column: 1, scope: !1201)
!4481 = !DILocation(line: 1690, column: 29, scope: !1216)
!4482 = !DILocation(line: 1694, column: 24, scope: !1216)
!4483 = !DILocation(line: 1694, column: 15, scope: !1216)
!4484 = !DILocation(line: 1696, column: 14, scope: !1216)
!4485 = !DILocation(line: 1696, column: 27, scope: !1216)
!4486 = !DILocation(line: 1696, column: 12, scope: !1216)
!4487 = !DILocation(line: 1692, column: 15, scope: !1216)
!4488 = !DILocation(line: 1697, column: 14, scope: !4489)
!4489 = distinct !DILexicalBlock(scope: !1216, file: !1, line: 1697, column: 9)
!4490 = !DILocation(line: 1697, column: 9, scope: !1216)
!4491 = !DILocation(line: 1699, column: 10, scope: !1226)
!4492 = !DILocation(line: 1699, column: 9, scope: !1216)
!4493 = !DILocation(line: 1700, column: 29, scope: !1225)
!4494 = !DILocation(line: 1700, column: 19, scope: !1225)
!4495 = !DILocation(line: 1701, column: 9, scope: !4496)
!4496 = !DILexicalBlockFile(scope: !1228, file: !1, discriminator: 1)
!4497 = !DILocation(line: 1701, column: 9, scope: !4498)
!4498 = distinct !DILexicalBlock(scope: !1228, file: !1, line: 1701, column: 9)
!4499 = !DILocation(line: 1701, column: 9, scope: !1228)
!4500 = !DILocation(line: 1701, column: 9, scope: !4501)
!4501 = !DILexicalBlockFile(scope: !4498, file: !1, discriminator: 3)
!4502 = !DILocation(line: 1702, column: 21, scope: !4503)
!4503 = distinct !DILexicalBlock(scope: !1225, file: !1, line: 1702, column: 13)
!4504 = !DILocation(line: 1706, column: 32, scope: !1216)
!4505 = !DILocation(line: 1706, column: 14, scope: !1216)
!4506 = !DILocation(line: 1693, column: 15, scope: !1216)
!4507 = !DILocation(line: 1707, column: 5, scope: !4508)
!4508 = !DILexicalBlockFile(scope: !1230, file: !1, discriminator: 1)
!4509 = !DILocation(line: 1707, column: 5, scope: !4510)
!4510 = distinct !DILexicalBlock(scope: !1230, file: !1, line: 1707, column: 5)
!4511 = !DILocation(line: 1707, column: 5, scope: !1230)
!4512 = !DILocation(line: 1707, column: 5, scope: !4513)
!4513 = !DILexicalBlockFile(scope: !4510, file: !1, discriminator: 3)
!4514 = !DILocation(line: 1709, column: 1, scope: !1216)
!4515 = !DILocation(line: 1642, column: 27, scope: !1234)
!4516 = !DILocation(line: 1642, column: 43, scope: !1234)
!4517 = !DILocation(line: 1642, column: 59, scope: !1234)
!4518 = !DILocation(line: 1644, column: 5, scope: !1234)
!4519 = !DILocation(line: 1648, column: 14, scope: !4520)
!4520 = distinct !DILexicalBlock(scope: !1234, file: !1, line: 1648, column: 9)
!4521 = !DILocation(line: 1648, column: 31, scope: !4520)
!4522 = !DILocation(line: 1648, column: 35, scope: !4520)
!4523 = !DILocation(line: 1648, column: 9, scope: !1234)
!4524 = !DILocation(line: 1644, column: 15, scope: !1234)
!4525 = !DILocation(line: 1644, column: 22, scope: !1234)
!4526 = !DILocation(line: 1651, column: 10, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !1234, file: !1, line: 1651, column: 9)
!4528 = !DILocation(line: 1651, column: 9, scope: !1234)
!4529 = !DILocation(line: 1655, column: 27, scope: !1234)
!4530 = !DILocation(line: 1655, column: 10, scope: !1234)
!4531 = !DILocation(line: 1645, column: 15, scope: !1234)
!4532 = !DILocation(line: 1656, column: 12, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !1234, file: !1, line: 1656, column: 9)
!4534 = !DILocation(line: 1656, column: 9, scope: !1234)
!4535 = !DILocation(line: 1660, column: 33, scope: !1234)
!4536 = !DILocation(line: 1660, column: 27, scope: !1234)
!4537 = !DILocation(line: 1661, column: 12, scope: !1246)
!4538 = !DILocation(line: 1661, column: 9, scope: !1234)
!4539 = !DILocation(line: 1662, column: 9, scope: !4540)
!4540 = !DILexicalBlockFile(scope: !1244, file: !1, discriminator: 1)
!4541 = !DILocation(line: 1662, column: 9, scope: !4542)
!4542 = distinct !DILexicalBlock(scope: !1244, file: !1, line: 1662, column: 9)
!4543 = !DILocation(line: 1662, column: 9, scope: !1244)
!4544 = !DILocation(line: 1662, column: 9, scope: !4545)
!4545 = !DILexicalBlockFile(scope: !4542, file: !1, discriminator: 3)
!4546 = !DILocation(line: 1665, column: 5, scope: !1234)
!4547 = !DILocation(line: 1666, column: 16, scope: !1234)
!4548 = !DILocation(line: 1666, column: 14, scope: !1234)
!4549 = !DILocation(line: 1667, column: 9, scope: !1234)
!4550 = !DILocation(line: 1667, column: 12, scope: !1234)
!4551 = !DILocation(line: 1669, column: 5, scope: !1234)
!4552 = !DILocation(line: 1670, column: 1, scope: !1234)
!4553 = !DILocation(line: 1712, column: 31, scope: !1231)
!4554 = !DILocation(line: 1715, column: 35, scope: !1231)
!4555 = !DILocation(line: 1715, column: 52, scope: !1231)
!4556 = !DILocation(line: 1715, column: 62, scope: !1231)
!4557 = !DILocation(line: 1715, column: 12, scope: !1231)
!4558 = !DILocation(line: 1715, column: 5, scope: !1231)
!4559 = !DILocation(line: 1829, column: 28, scope: !1247)
!4560 = !DILocation(line: 1831, column: 25, scope: !1247)
!4561 = !DILocation(line: 1831, column: 5, scope: !1247)
!4562 = !DILocation(line: 1832, column: 5, scope: !4563)
!4563 = !DILexicalBlockFile(scope: !1253, file: !1, discriminator: 1)
!4564 = !DILocation(line: 1832, column: 5, scope: !1256)
!4565 = !DILocation(line: 1832, column: 5, scope: !1253)
!4566 = !DILocation(line: 1832, column: 5, scope: !4567)
!4567 = !DILexicalBlockFile(scope: !1255, file: !1, discriminator: 4)
!4568 = !DILocation(line: 1832, column: 5, scope: !4569)
!4569 = distinct !DILexicalBlock(scope: !1255, file: !1, line: 1832, column: 5)
!4570 = !DILocation(line: 1832, column: 5, scope: !1255)
!4571 = !DILocation(line: 1832, column: 5, scope: !4572)
!4572 = !DILexicalBlockFile(scope: !4569, file: !1, discriminator: 6)
!4573 = !DILocation(line: 1833, column: 5, scope: !4574)
!4574 = !DILexicalBlockFile(scope: !1258, file: !1, discriminator: 1)
!4575 = !DILocation(line: 1833, column: 5, scope: !1261)
!4576 = !DILocation(line: 1833, column: 5, scope: !1258)
!4577 = !DILocation(line: 1833, column: 5, scope: !4578)
!4578 = !DILexicalBlockFile(scope: !1260, file: !1, discriminator: 4)
!4579 = !DILocation(line: 1833, column: 5, scope: !4580)
!4580 = distinct !DILexicalBlock(scope: !1260, file: !1, line: 1833, column: 5)
!4581 = !DILocation(line: 1833, column: 5, scope: !1260)
!4582 = !DILocation(line: 1833, column: 5, scope: !4583)
!4583 = !DILexicalBlockFile(scope: !4580, file: !1, discriminator: 6)
!4584 = !DILocation(line: 1834, column: 5, scope: !1247)
!4585 = !DILocation(line: 1834, column: 18, scope: !1247)
!4586 = !DILocation(line: 1835, column: 1, scope: !1247)
!4587 = !DILocation(line: 1838, column: 29, scope: !1262)
!4588 = !DILocation(line: 1838, column: 43, scope: !1262)
!4589 = !DILocation(line: 1838, column: 56, scope: !1262)
!4590 = !DILocation(line: 1840, column: 5, scope: !4591)
!4591 = !DILexicalBlockFile(scope: !1271, file: !1, discriminator: 1)
!4592 = !DILocation(line: 1840, column: 5, scope: !1272)
!4593 = !DILocation(line: 1840, column: 5, scope: !4594)
!4594 = !DILexicalBlockFile(scope: !1270, file: !1, discriminator: 2)
!4595 = !DILocation(line: 1840, column: 5, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !1270, file: !1, line: 1840, column: 5)
!4597 = !DILocation(line: 1841, column: 5, scope: !4598)
!4598 = !DILexicalBlockFile(scope: !1275, file: !1, discriminator: 1)
!4599 = !DILocation(line: 1841, column: 5, scope: !1276)
!4600 = !DILocation(line: 1841, column: 5, scope: !4601)
!4601 = !DILexicalBlockFile(scope: !1274, file: !1, discriminator: 2)
!4602 = !DILocation(line: 1841, column: 5, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !1274, file: !1, line: 1841, column: 5)
!4604 = !DILocation(line: 1842, column: 5, scope: !1262)
!4605 = !DILocation(line: 1843, column: 1, scope: !1262)
!4606 = !DILocation(line: 1846, column: 25, scope: !1277)
!4607 = !DILocation(line: 1850, column: 13, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !1277, file: !1, line: 1850, column: 9)
!4609 = !DILocation(line: 1850, column: 20, scope: !4608)
!4610 = !DILocation(line: 1850, column: 9, scope: !1277)
!4611 = !DILocation(line: 1853, column: 13, scope: !1285)
!4612 = !DILocation(line: 1853, column: 20, scope: !1285)
!4613 = !DILocation(line: 1853, column: 9, scope: !1277)
!4614 = !DILocation(line: 1854, column: 30, scope: !1284)
!4615 = !DILocation(line: 1854, column: 19, scope: !1284)
!4616 = !DILocation(line: 1855, column: 22, scope: !1289)
!4617 = !DILocation(line: 1855, column: 13, scope: !1284)
!4618 = !DILocation(line: 1856, column: 13, scope: !4619)
!4619 = !DILexicalBlockFile(scope: !1287, file: !1, discriminator: 1)
!4620 = !DILocation(line: 1856, column: 13, scope: !1293)
!4621 = !DILocation(line: 1856, column: 13, scope: !1287)
!4622 = !DILocation(line: 1856, column: 13, scope: !4623)
!4623 = !DILexicalBlockFile(scope: !1292, file: !1, discriminator: 2)
!4624 = !DILocation(line: 1856, column: 13, scope: !4625)
!4625 = !DILexicalBlockFile(scope: !1291, file: !1, discriminator: 4)
!4626 = !DILocation(line: 1856, column: 13, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !1291, file: !1, line: 1856, column: 13)
!4628 = !DILocation(line: 1856, column: 13, scope: !1291)
!4629 = !DILocation(line: 1856, column: 13, scope: !4630)
!4630 = !DILexicalBlockFile(scope: !4627, file: !1, discriminator: 6)
!4631 = !DILocation(line: 1859, column: 22, scope: !1284)
!4632 = !DILocation(line: 1859, column: 20, scope: !1284)
!4633 = !DILocation(line: 1860, column: 9, scope: !4634)
!4634 = !DILexicalBlockFile(scope: !1295, file: !1, discriminator: 1)
!4635 = !DILocation(line: 1860, column: 9, scope: !4636)
!4636 = distinct !DILexicalBlock(scope: !1295, file: !1, line: 1860, column: 9)
!4637 = !DILocation(line: 1860, column: 9, scope: !1295)
!4638 = !DILocation(line: 1860, column: 9, scope: !4639)
!4639 = !DILexicalBlockFile(scope: !4636, file: !1, discriminator: 3)
!4640 = !DILocation(line: 1861, column: 17, scope: !1299)
!4641 = !DILocation(line: 1861, column: 24, scope: !1299)
!4642 = !DILocation(line: 1861, column: 13, scope: !1284)
!4643 = !DILocation(line: 1862, column: 13, scope: !4644)
!4644 = !DILexicalBlockFile(scope: !1297, file: !1, discriminator: 1)
!4645 = !DILocation(line: 1862, column: 13, scope: !1303)
!4646 = !DILocation(line: 1862, column: 13, scope: !1297)
!4647 = !DILocation(line: 1862, column: 13, scope: !4648)
!4648 = !DILexicalBlockFile(scope: !1302, file: !1, discriminator: 2)
!4649 = !DILocation(line: 1862, column: 13, scope: !4650)
!4650 = !DILexicalBlockFile(scope: !1301, file: !1, discriminator: 4)
!4651 = !DILocation(line: 1862, column: 13, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !1301, file: !1, line: 1862, column: 13)
!4653 = !DILocation(line: 1862, column: 13, scope: !1301)
!4654 = !DILocation(line: 1862, column: 13, scope: !4655)
!4655 = !DILexicalBlockFile(scope: !4652, file: !1, discriminator: 6)
!4656 = !DILocation(line: 1866, column: 28, scope: !1277)
!4657 = !DILocation(line: 1866, column: 12, scope: !1277)
!4658 = !DILocation(line: 1848, column: 15, scope: !1277)
!4659 = !DILocation(line: 1867, column: 14, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !1277, file: !1, line: 1867, column: 9)
!4661 = !DILocation(line: 1867, column: 9, scope: !1277)
!4662 = !DILocation(line: 1869, column: 9, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !1277, file: !1, line: 1869, column: 9)
!4664 = !DILocation(line: 1869, column: 9, scope: !1277)
!4665 = !DILocation(line: 1870, column: 36, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4667, file: !1, line: 1870, column: 13)
!4667 = distinct !DILexicalBlock(scope: !4663, file: !1, line: 1869, column: 27)
!4668 = !DILocation(line: 1870, column: 13, scope: !4666)
!4669 = !DILocation(line: 1870, column: 13, scope: !4667)
!4670 = !DILocation(line: 1871, column: 13, scope: !4666)
!4671 = !DILocation(line: 1874, column: 5, scope: !4667)
!4672 = !DILocation(line: 1875, column: 5, scope: !4673)
!4673 = !DILexicalBlockFile(scope: !1305, file: !1, discriminator: 1)
!4674 = !DILocation(line: 1875, column: 5, scope: !1309)
!4675 = !DILocation(line: 1875, column: 5, scope: !1305)
!4676 = !DILocation(line: 1875, column: 5, scope: !4677)
!4677 = !DILexicalBlockFile(scope: !1308, file: !1, discriminator: 2)
!4678 = !DILocation(line: 1875, column: 5, scope: !4679)
!4679 = !DILexicalBlockFile(scope: !1307, file: !1, discriminator: 4)
!4680 = !DILocation(line: 1875, column: 5, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !1307, file: !1, line: 1875, column: 5)
!4682 = !DILocation(line: 1875, column: 5, scope: !1307)
!4683 = !DILocation(line: 1875, column: 5, scope: !4684)
!4684 = !DILexicalBlockFile(scope: !4681, file: !1, discriminator: 6)
!4685 = !DILocation(line: 1877, column: 1, scope: !1277)
!4686 = !DILocation(line: 1802, column: 25, scope: !1351)
!4687 = !DILocation(line: 1802, column: 41, scope: !1351)
!4688 = !DILocation(line: 1802, column: 57, scope: !1351)
!4689 = !DILocation(line: 1806, column: 14, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !1351, file: !1, line: 1806, column: 9)
!4691 = !DILocation(line: 1806, column: 29, scope: !4690)
!4692 = !DILocation(line: 1806, column: 33, scope: !4690)
!4693 = !DILocation(line: 1806, column: 9, scope: !1351)
!4694 = !DILocation(line: 1809, column: 14, scope: !1351)
!4695 = !DILocation(line: 1804, column: 15, scope: !1351)
!4696 = !DILocation(line: 1810, column: 16, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !1351, file: !1, line: 1810, column: 9)
!4698 = !DILocation(line: 1810, column: 9, scope: !1351)
!4699 = !DILocation(line: 1786, column: 34, scope: !1317, inlinedAt: !4700)
!4700 = distinct !DILocation(line: 1813, column: 12, scope: !1351)
!4701 = !DILocation(line: 1786, column: 50, scope: !1317, inlinedAt: !4700)
!4702 = !DILocation(line: 1790, column: 31, scope: !1317, inlinedAt: !4700)
!4703 = !DILocation(line: 1790, column: 25, scope: !1317, inlinedAt: !4700)
!4704 = !DILocation(line: 1791, column: 12, scope: !1325, inlinedAt: !4700)
!4705 = !DILocation(line: 1791, column: 9, scope: !1317, inlinedAt: !4700)
!4706 = !DILocation(line: 1792, column: 9, scope: !4707, inlinedAt: !4700)
!4707 = !DILexicalBlockFile(scope: !1323, file: !1, discriminator: 1)
!4708 = !DILocation(line: 1792, column: 9, scope: !4709, inlinedAt: !4700)
!4709 = distinct !DILexicalBlock(scope: !1323, file: !1, line: 1792, column: 9)
!4710 = !DILocation(line: 1792, column: 9, scope: !1323, inlinedAt: !4700)
!4711 = !DILocation(line: 1792, column: 9, scope: !4712, inlinedAt: !4700)
!4712 = !DILexicalBlockFile(scope: !4709, file: !1, discriminator: 3)
!4713 = !DILocation(line: 1813, column: 12, scope: !1351)
!4714 = !DILocation(line: 1796, column: 9, scope: !1317, inlinedAt: !4700)
!4715 = !DILocation(line: 1796, column: 16, scope: !1317, inlinedAt: !4700)
!4716 = !DILocation(line: 1797, column: 9, scope: !1317, inlinedAt: !4700)
!4717 = !DILocation(line: 1797, column: 16, scope: !1317, inlinedAt: !4700)
!4718 = !DILocation(line: 1798, column: 5, scope: !1317, inlinedAt: !4700)
!4719 = !DILocation(line: 1814, column: 1, scope: !1351)
!4720 = !DILocation(line: 1817, column: 39, scope: !1310)
!4721 = !DILocation(line: 1817, column: 55, scope: !1310)
!4722 = !DILocation(line: 1821, column: 14, scope: !1310)
!4723 = !DILocation(line: 1819, column: 15, scope: !1310)
!4724 = !DILocation(line: 1822, column: 16, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !1310, file: !1, line: 1822, column: 9)
!4726 = !DILocation(line: 1822, column: 9, scope: !1310)
!4727 = !DILocation(line: 1786, column: 34, scope: !1317, inlinedAt: !4728)
!4728 = distinct !DILocation(line: 1825, column: 12, scope: !1310)
!4729 = !DILocation(line: 1786, column: 50, scope: !1317, inlinedAt: !4728)
!4730 = !DILocation(line: 1790, column: 31, scope: !1317, inlinedAt: !4728)
!4731 = !DILocation(line: 1790, column: 25, scope: !1317, inlinedAt: !4728)
!4732 = !DILocation(line: 1791, column: 12, scope: !1325, inlinedAt: !4728)
!4733 = !DILocation(line: 1791, column: 9, scope: !1317, inlinedAt: !4728)
!4734 = !DILocation(line: 1792, column: 9, scope: !4707, inlinedAt: !4728)
!4735 = !DILocation(line: 1792, column: 9, scope: !4709, inlinedAt: !4728)
!4736 = !DILocation(line: 1792, column: 9, scope: !1323, inlinedAt: !4728)
!4737 = !DILocation(line: 1792, column: 9, scope: !4712, inlinedAt: !4728)
!4738 = !DILocation(line: 1825, column: 12, scope: !1310)
!4739 = !DILocation(line: 1796, column: 9, scope: !1317, inlinedAt: !4728)
!4740 = !DILocation(line: 1796, column: 16, scope: !1317, inlinedAt: !4728)
!4741 = !DILocation(line: 1797, column: 9, scope: !1317, inlinedAt: !4728)
!4742 = !DILocation(line: 1797, column: 16, scope: !1317, inlinedAt: !4728)
!4743 = !DILocation(line: 1798, column: 5, scope: !1317, inlinedAt: !4728)
!4744 = !DILocation(line: 1826, column: 1, scope: !1310)
!4745 = !DILocation(line: 1880, column: 27, scope: !1326)
!4746 = !DILocation(line: 1882, column: 13, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !1326, file: !1, line: 1882, column: 9)
!4748 = !DILocation(line: 1882, column: 9, scope: !4747)
!4749 = !DILocation(line: 1882, column: 9, scope: !1326)
!4750 = !DILocation(line: 1887, column: 17, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4752, file: !1, line: 1887, column: 13)
!4752 = distinct !DILexicalBlock(scope: !4747, file: !1, line: 1882, column: 21)
!4753 = !DILocation(line: 1887, column: 13, scope: !4751)
!4754 = !DILocation(line: 1888, column: 45, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4751, file: !1, line: 1887, column: 25)
!4756 = !DILocation(line: 1887, column: 13, scope: !4752)
!4757 = !DILocation(line: 1888, column: 20, scope: !4755)
!4758 = !DILocation(line: 1888, column: 13, scope: !4755)
!4759 = !DILocation(line: 1890, column: 20, scope: !4760)
!4760 = distinct !DILexicalBlock(scope: !4751, file: !1, line: 1889, column: 16)
!4761 = !DILocation(line: 1890, column: 13, scope: !4760)
!4762 = !DILocation(line: 1893, column: 37, scope: !4763)
!4763 = distinct !DILexicalBlock(scope: !4747, file: !1, line: 1892, column: 12)
!4764 = !DILocation(line: 1893, column: 16, scope: !4763)
!4765 = !DILocation(line: 1893, column: 9, scope: !4763)
!4766 = !DILocation(line: 1896, column: 1, scope: !1326)
!4767 = !DILocation(line: 1899, column: 29, scope: !1329)
!4768 = !DILocation(line: 1899, column: 43, scope: !1329)
!4769 = !DILocation(line: 1901, column: 5, scope: !1329)
!4770 = !DILocation(line: 1901, column: 24, scope: !1329)
!4771 = !DILocation(line: 1901, column: 15, scope: !1329)
!4772 = !DILocation(line: 1902, column: 11, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !1329, file: !1, line: 1902, column: 9)
!4774 = !DILocation(line: 1902, column: 9, scope: !1329)
!4775 = !DILocation(line: 1905, column: 5, scope: !4776)
!4776 = !DILexicalBlockFile(scope: !1338, file: !1, discriminator: 1)
!4777 = !DILocation(line: 1905, column: 5, scope: !1342)
!4778 = !DILocation(line: 1905, column: 5, scope: !1338)
!4779 = !DILocation(line: 1905, column: 5, scope: !4780)
!4780 = !DILexicalBlockFile(scope: !1341, file: !1, discriminator: 2)
!4781 = !DILocation(line: 1905, column: 5, scope: !4782)
!4782 = !DILexicalBlockFile(scope: !1340, file: !1, discriminator: 4)
!4783 = !DILocation(line: 1905, column: 5, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !1340, file: !1, line: 1905, column: 5)
!4785 = !DILocation(line: 1905, column: 5, scope: !1340)
!4786 = !DILocation(line: 1905, column: 5, scope: !4787)
!4787 = !DILexicalBlockFile(scope: !4784, file: !1, discriminator: 6)
!4788 = !DILocation(line: 1906, column: 18, scope: !1329)
!4789 = !DILocation(line: 1906, column: 16, scope: !1329)
!4790 = !DILocation(line: 1907, column: 5, scope: !1329)
!4791 = !DILocation(line: 1908, column: 5, scope: !4792)
!4792 = !DILexicalBlockFile(scope: !1344, file: !1, discriminator: 1)
!4793 = !DILocation(line: 1908, column: 5, scope: !1348)
!4794 = !DILocation(line: 1908, column: 5, scope: !1344)
!4795 = !DILocation(line: 1908, column: 5, scope: !4796)
!4796 = !DILexicalBlockFile(scope: !1347, file: !1, discriminator: 2)
!4797 = !DILocation(line: 1908, column: 5, scope: !4798)
!4798 = !DILexicalBlockFile(scope: !1346, file: !1, discriminator: 4)
!4799 = !DILocation(line: 1908, column: 5, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !1346, file: !1, line: 1908, column: 5)
!4801 = !DILocation(line: 1908, column: 5, scope: !1346)
!4802 = !DILocation(line: 1908, column: 5, scope: !4803)
!4803 = !DILexicalBlockFile(scope: !4800, file: !1, discriminator: 6)
!4804 = !DILocation(line: 1909, column: 18, scope: !1329)
!4805 = !DILocation(line: 1909, column: 16, scope: !1329)
!4806 = !DILocation(line: 1910, column: 5, scope: !4807)
!4807 = !DILexicalBlockFile(scope: !1350, file: !1, discriminator: 1)
!4808 = !DILocation(line: 1910, column: 5, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !1350, file: !1, line: 1910, column: 5)
!4810 = !DILocation(line: 1910, column: 5, scope: !1350)
!4811 = !DILocation(line: 1910, column: 5, scope: !4812)
!4812 = !DILexicalBlockFile(scope: !4809, file: !1, discriminator: 2)
!4813 = !DILocation(line: 1911, column: 5, scope: !1329)
!4814 = !DILocation(line: 1912, column: 1, scope: !1329)
!4815 = !DILocation(line: 3581, column: 34, scope: !1357)
!4816 = !DILocation(line: 3583, column: 25, scope: !1357)
!4817 = !DILocation(line: 3583, column: 5, scope: !1357)
!4818 = !DILocation(line: 3584, column: 5, scope: !4819)
!4819 = !DILexicalBlockFile(scope: !1363, file: !1, discriminator: 1)
!4820 = !DILocation(line: 3584, column: 5, scope: !1366)
!4821 = !DILocation(line: 3584, column: 5, scope: !1363)
!4822 = !DILocation(line: 3584, column: 5, scope: !4823)
!4823 = !DILexicalBlockFile(scope: !1365, file: !1, discriminator: 4)
!4824 = !DILocation(line: 3584, column: 5, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !1365, file: !1, line: 3584, column: 5)
!4826 = !DILocation(line: 3584, column: 5, scope: !1365)
!4827 = !DILocation(line: 3584, column: 5, scope: !4828)
!4828 = !DILexicalBlockFile(scope: !4825, file: !1, discriminator: 6)
!4829 = !DILocation(line: 3585, column: 5, scope: !4830)
!4830 = !DILexicalBlockFile(scope: !1368, file: !1, discriminator: 1)
!4831 = !DILocation(line: 3585, column: 5, scope: !1371)
!4832 = !DILocation(line: 3585, column: 5, scope: !1368)
!4833 = !DILocation(line: 3585, column: 5, scope: !4834)
!4834 = !DILexicalBlockFile(scope: !1370, file: !1, discriminator: 4)
!4835 = !DILocation(line: 3585, column: 5, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !1370, file: !1, line: 3585, column: 5)
!4837 = !DILocation(line: 3585, column: 5, scope: !1370)
!4838 = !DILocation(line: 3585, column: 5, scope: !4839)
!4839 = !DILexicalBlockFile(scope: !4836, file: !1, discriminator: 6)
!4840 = !DILocation(line: 3586, column: 5, scope: !1357)
!4841 = !DILocation(line: 3586, column: 18, scope: !1357)
!4842 = !DILocation(line: 3587, column: 1, scope: !1357)
!4843 = !DILocation(line: 3590, column: 35, scope: !1372)
!4844 = !DILocation(line: 3590, column: 49, scope: !1372)
!4845 = !DILocation(line: 3590, column: 62, scope: !1372)
!4846 = !DILocation(line: 3592, column: 5, scope: !4847)
!4847 = !DILexicalBlockFile(scope: !1381, file: !1, discriminator: 1)
!4848 = !DILocation(line: 3592, column: 5, scope: !1382)
!4849 = !DILocation(line: 3592, column: 5, scope: !4850)
!4850 = !DILexicalBlockFile(scope: !1380, file: !1, discriminator: 2)
!4851 = !DILocation(line: 3592, column: 5, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !1380, file: !1, line: 3592, column: 5)
!4853 = !DILocation(line: 3593, column: 5, scope: !4854)
!4854 = !DILexicalBlockFile(scope: !1385, file: !1, discriminator: 1)
!4855 = !DILocation(line: 3593, column: 5, scope: !1386)
!4856 = !DILocation(line: 3593, column: 5, scope: !4857)
!4857 = !DILexicalBlockFile(scope: !1384, file: !1, discriminator: 2)
!4858 = !DILocation(line: 3593, column: 5, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !1384, file: !1, line: 3593, column: 5)
!4860 = !DILocation(line: 3594, column: 5, scope: !1372)
!4861 = !DILocation(line: 3595, column: 1, scope: !1372)
!4862 = !DILocation(line: 3598, column: 31, scope: !1387)
!4863 = !DILocation(line: 3600, column: 26, scope: !1387)
!4864 = !DILocation(line: 3600, column: 15, scope: !1387)
!4865 = !DILocation(line: 3600, column: 49, scope: !1387)
!4866 = !DILocation(line: 3600, column: 33, scope: !1387)
!4867 = !DILocation(line: 3602, column: 42, scope: !1387)
!4868 = !DILocation(line: 3602, column: 57, scope: !1387)
!4869 = !DILocation(line: 3602, column: 17, scope: !1387)
!4870 = !DILocation(line: 3603, column: 46, scope: !1387)
!4871 = !DILocation(line: 3603, column: 66, scope: !1387)
!4872 = !DILocation(line: 3603, column: 17, scope: !1387)
!4873 = !DILocation(line: 3606, column: 5, scope: !1387)
!4874 = !DILocation(line: 3613, column: 17, scope: !1403)
!4875 = !DILocation(line: 3601, column: 15, scope: !1387)
!4876 = !DILocation(line: 3614, column: 19, scope: !4877)
!4877 = distinct !DILexicalBlock(scope: !1403, file: !1, line: 3614, column: 13)
!4878 = !DILocation(line: 3614, column: 13, scope: !1403)
!4879 = !DILocation(line: 3617, column: 20, scope: !1403)
!4880 = !DILocation(line: 3601, column: 23, scope: !1387)
!4881 = !DILocation(line: 3618, column: 22, scope: !1402)
!4882 = !DILocation(line: 3618, column: 13, scope: !1403)
!4883 = !DILocation(line: 3619, column: 13, scope: !4884)
!4884 = !DILexicalBlockFile(scope: !1400, file: !1, discriminator: 1)
!4885 = !DILocation(line: 3619, column: 13, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !1400, file: !1, line: 3619, column: 13)
!4887 = !DILocation(line: 3619, column: 13, scope: !1400)
!4888 = !DILocation(line: 3619, column: 13, scope: !4889)
!4889 = !DILexicalBlockFile(scope: !4886, file: !1, discriminator: 3)
!4890 = !DILocation(line: 3623, column: 14, scope: !1403)
!4891 = !DILocation(line: 3604, column: 9, scope: !1387)
!4892 = !DILocation(line: 3624, column: 9, scope: !4893)
!4893 = !DILexicalBlockFile(scope: !1405, file: !1, discriminator: 1)
!4894 = !DILocation(line: 3624, column: 9, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !1405, file: !1, line: 3624, column: 9)
!4896 = !DILocation(line: 3624, column: 9, scope: !1405)
!4897 = !DILocation(line: 3624, column: 9, scope: !4898)
!4898 = !DILexicalBlockFile(scope: !4895, file: !1, discriminator: 3)
!4899 = !DILocation(line: 3625, column: 16, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !1403, file: !1, line: 3625, column: 13)
!4901 = !DILocation(line: 3625, column: 13, scope: !1403)
!4902 = !DILocation(line: 3627, column: 9, scope: !4903)
!4903 = !DILexicalBlockFile(scope: !1407, file: !1, discriminator: 1)
!4904 = !DILocation(line: 3627, column: 9, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !1407, file: !1, line: 3627, column: 9)
!4906 = !DILocation(line: 3627, column: 9, scope: !1407)
!4907 = !DILocation(line: 3627, column: 9, scope: !4908)
!4908 = !DILexicalBlockFile(scope: !4905, file: !1, discriminator: 3)
!4909 = !DILocation(line: 3628, column: 16, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !1403, file: !1, line: 3628, column: 13)
!4911 = !DILocation(line: 3628, column: 13, scope: !1403)
!4912 = !DILocation(line: 3631, column: 1, scope: !1387)
!4913 = !DILocation(line: 3549, column: 28, scope: !1411)
!4914 = !DILocation(line: 3549, column: 44, scope: !1411)
!4915 = !DILocation(line: 3549, column: 60, scope: !1411)
!4916 = !DILocation(line: 3551, column: 5, scope: !1411)
!4917 = !DILocation(line: 3552, column: 15, scope: !1411)
!4918 = !DILocation(line: 3552, column: 27, scope: !1411)
!4919 = !DILocation(line: 3551, column: 15, scope: !1411)
!4920 = !DILocation(line: 3551, column: 22, scope: !1411)
!4921 = !DILocation(line: 3556, column: 10, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !1411, file: !1, line: 3556, column: 9)
!4923 = !DILocation(line: 3556, column: 9, scope: !1411)
!4924 = !DILocation(line: 3559, column: 29, scope: !1411)
!4925 = !DILocation(line: 3559, column: 12, scope: !1411)
!4926 = !DILocation(line: 3560, column: 14, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !1411, file: !1, line: 3560, column: 9)
!4928 = !DILocation(line: 3560, column: 9, scope: !1411)
!4929 = !DILocation(line: 3562, column: 34, scope: !1411)
!4930 = !DILocation(line: 3562, column: 17, scope: !1411)
!4931 = !DILocation(line: 3563, column: 19, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !1411, file: !1, line: 3563, column: 9)
!4933 = !DILocation(line: 3563, column: 9, scope: !1411)
!4934 = !DILocation(line: 3567, column: 34, scope: !1411)
!4935 = !DILocation(line: 3567, column: 28, scope: !1411)
!4936 = !DILocation(line: 3568, column: 12, scope: !4937)
!4937 = distinct !DILexicalBlock(scope: !1411, file: !1, line: 3568, column: 9)
!4938 = !DILocation(line: 3568, column: 9, scope: !1411)
!4939 = !DILocation(line: 3570, column: 9, scope: !1411)
!4940 = !DILocation(line: 3570, column: 14, scope: !1411)
!4941 = !DILocation(line: 3571, column: 9, scope: !1411)
!4942 = !DILocation(line: 3571, column: 19, scope: !1411)
!4943 = !DILocation(line: 3572, column: 5, scope: !1411)
!4944 = !DILocation(line: 3575, column: 5, scope: !4945)
!4945 = !DILexicalBlockFile(scope: !1422, file: !1, discriminator: 1)
!4946 = !DILocation(line: 3575, column: 5, scope: !4947)
!4947 = !DILexicalBlockFile(scope: !1424, file: !1, discriminator: 4)
!4948 = !DILocation(line: 3575, column: 5, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !1424, file: !1, line: 3575, column: 5)
!4950 = !DILocation(line: 3575, column: 5, scope: !1424)
!4951 = !DILocation(line: 3575, column: 5, scope: !4952)
!4952 = !DILexicalBlockFile(scope: !4949, file: !1, discriminator: 6)
!4953 = !DILocation(line: 3576, column: 5, scope: !1427)
!4954 = !DILocation(line: 3576, column: 5, scope: !4955)
!4955 = distinct !DILexicalBlock(scope: !1429, file: !1, line: 3576, column: 5)
!4956 = !DILocation(line: 3576, column: 5, scope: !1429)
!4957 = !DILocation(line: 3576, column: 5, scope: !4958)
!4958 = !DILexicalBlockFile(scope: !4955, file: !1, discriminator: 6)
!4959 = !DILocation(line: 3578, column: 1, scope: !1411)
!4960 = !DILocation(line: 3634, column: 33, scope: !1408)
!4961 = !DILocation(line: 3636, column: 35, scope: !1408)
!4962 = !DILocation(line: 3637, column: 13, scope: !1408)
!4963 = !DILocation(line: 3637, column: 23, scope: !1408)
!4964 = !DILocation(line: 3636, column: 12, scope: !1408)
!4965 = !DILocation(line: 3636, column: 5, scope: !1408)
!4966 = !DILocation(line: 3741, column: 40, scope: !1431)
!4967 = !DILocation(line: 3743, column: 25, scope: !1431)
!4968 = !DILocation(line: 3743, column: 5, scope: !1431)
!4969 = !DILocation(line: 3744, column: 5, scope: !4970)
!4970 = !DILexicalBlockFile(scope: !1437, file: !1, discriminator: 1)
!4971 = !DILocation(line: 3744, column: 5, scope: !1440)
!4972 = !DILocation(line: 3744, column: 5, scope: !1437)
!4973 = !DILocation(line: 3744, column: 5, scope: !4974)
!4974 = !DILexicalBlockFile(scope: !1439, file: !1, discriminator: 4)
!4975 = !DILocation(line: 3744, column: 5, scope: !4976)
!4976 = distinct !DILexicalBlock(scope: !1439, file: !1, line: 3744, column: 5)
!4977 = !DILocation(line: 3744, column: 5, scope: !1439)
!4978 = !DILocation(line: 3744, column: 5, scope: !4979)
!4979 = !DILexicalBlockFile(scope: !4976, file: !1, discriminator: 6)
!4980 = !DILocation(line: 3745, column: 5, scope: !4981)
!4981 = !DILexicalBlockFile(scope: !1442, file: !1, discriminator: 1)
!4982 = !DILocation(line: 3745, column: 5, scope: !1445)
!4983 = !DILocation(line: 3745, column: 5, scope: !1442)
!4984 = !DILocation(line: 3745, column: 5, scope: !4985)
!4985 = !DILexicalBlockFile(scope: !1444, file: !1, discriminator: 4)
!4986 = !DILocation(line: 3745, column: 5, scope: !4987)
!4987 = distinct !DILexicalBlock(scope: !1444, file: !1, line: 3745, column: 5)
!4988 = !DILocation(line: 3745, column: 5, scope: !1444)
!4989 = !DILocation(line: 3745, column: 5, scope: !4990)
!4990 = !DILexicalBlockFile(scope: !4987, file: !1, discriminator: 6)
!4991 = !DILocation(line: 3746, column: 5, scope: !1431)
!4992 = !DILocation(line: 3746, column: 18, scope: !1431)
!4993 = !DILocation(line: 3747, column: 1, scope: !1431)
!4994 = !DILocation(line: 3750, column: 41, scope: !1446)
!4995 = !DILocation(line: 3750, column: 55, scope: !1446)
!4996 = !DILocation(line: 3750, column: 68, scope: !1446)
!4997 = !DILocation(line: 3752, column: 5, scope: !4998)
!4998 = !DILexicalBlockFile(scope: !1455, file: !1, discriminator: 1)
!4999 = !DILocation(line: 3752, column: 5, scope: !1456)
!5000 = !DILocation(line: 3752, column: 5, scope: !5001)
!5001 = !DILexicalBlockFile(scope: !1454, file: !1, discriminator: 2)
!5002 = !DILocation(line: 3752, column: 5, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !1454, file: !1, line: 3752, column: 5)
!5004 = !DILocation(line: 3753, column: 5, scope: !5005)
!5005 = !DILexicalBlockFile(scope: !1459, file: !1, discriminator: 1)
!5006 = !DILocation(line: 3753, column: 5, scope: !1460)
!5007 = !DILocation(line: 3753, column: 5, scope: !5008)
!5008 = !DILexicalBlockFile(scope: !1458, file: !1, discriminator: 2)
!5009 = !DILocation(line: 3753, column: 5, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !1458, file: !1, line: 3753, column: 5)
!5011 = !DILocation(line: 3754, column: 5, scope: !1446)
!5012 = !DILocation(line: 3755, column: 1, scope: !1446)
!5013 = !DILocation(line: 3758, column: 37, scope: !1461)
!5014 = !DILocation(line: 3761, column: 24, scope: !1461)
!5015 = !DILocation(line: 3761, column: 15, scope: !1461)
!5016 = !DILocation(line: 3765, column: 17, scope: !1461)
!5017 = !DILocation(line: 3765, column: 30, scope: !1461)
!5018 = !DILocation(line: 3763, column: 17, scope: !1461)
!5019 = !DILocation(line: 3771, column: 17, scope: !1472)
!5020 = !DILocation(line: 3766, column: 5, scope: !1461)
!5021 = !DILocation(line: 3767, column: 16, scope: !1473)
!5022 = !DILocation(line: 3760, column: 15, scope: !1461)
!5023 = !DILocation(line: 3768, column: 18, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !1473, file: !1, line: 3768, column: 13)
!5025 = !DILocation(line: 3768, column: 13, scope: !1473)
!5026 = !DILocation(line: 3771, column: 22, scope: !1472)
!5027 = !DILocation(line: 3771, column: 45, scope: !1472)
!5028 = !DILocation(line: 3771, column: 33, scope: !1472)
!5029 = !DILocation(line: 3772, column: 18, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !1472, file: !1, line: 3771, column: 74)
!5031 = !DILocation(line: 3762, column: 10, scope: !1461)
!5032 = !DILocation(line: 3773, column: 9, scope: !5030)
!5033 = !DILocation(line: 3775, column: 20, scope: !1471)
!5034 = !DILocation(line: 3774, column: 23, scope: !1471)
!5035 = !DILocation(line: 3777, column: 22, scope: !1479)
!5036 = !DILocation(line: 3777, column: 17, scope: !1471)
!5037 = !DILocation(line: 3778, column: 17, scope: !5038)
!5038 = !DILexicalBlockFile(scope: !1477, file: !1, discriminator: 1)
!5039 = !DILocation(line: 3778, column: 17, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !1477, file: !1, line: 3778, column: 17)
!5041 = !DILocation(line: 3778, column: 17, scope: !1477)
!5042 = !DILocation(line: 3778, column: 17, scope: !5043)
!5043 = !DILexicalBlockFile(scope: !5040, file: !1, discriminator: 3)
!5044 = !DILocation(line: 3781, column: 18, scope: !1471)
!5045 = !DILocation(line: 3782, column: 13, scope: !5046)
!5046 = !DILexicalBlockFile(scope: !1481, file: !1, discriminator: 1)
!5047 = !DILocation(line: 3782, column: 13, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !1481, file: !1, line: 3782, column: 13)
!5049 = !DILocation(line: 3782, column: 13, scope: !1481)
!5050 = !DILocation(line: 3782, column: 13, scope: !5051)
!5051 = !DILexicalBlockFile(scope: !5048, file: !1, discriminator: 3)
!5052 = !DILocation(line: 3784, column: 16, scope: !5053)
!5053 = distinct !DILexicalBlock(scope: !1473, file: !1, line: 3784, column: 13)
!5054 = !DILocation(line: 3784, column: 13, scope: !1473)
!5055 = !DILocation(line: 3786, column: 9, scope: !5056)
!5056 = !DILexicalBlockFile(scope: !1483, file: !1, discriminator: 1)
!5057 = !DILocation(line: 3786, column: 9, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !1483, file: !1, line: 3786, column: 9)
!5059 = !DILocation(line: 3786, column: 9, scope: !1483)
!5060 = !DILocation(line: 3786, column: 9, scope: !5061)
!5061 = !DILexicalBlockFile(scope: !5058, file: !1, discriminator: 3)
!5062 = !DILocation(line: 3787, column: 16, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !1473, file: !1, line: 3787, column: 13)
!5064 = !DILocation(line: 3787, column: 13, scope: !1473)
!5065 = !DILocation(line: 3790, column: 1, scope: !1461)
!5066 = !DILocation(line: 3709, column: 31, scope: !1487)
!5067 = !DILocation(line: 3709, column: 47, scope: !1487)
!5068 = !DILocation(line: 3709, column: 63, scope: !1487)
!5069 = !DILocation(line: 3711, column: 5, scope: !1487)
!5070 = !DILocation(line: 3715, column: 14, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !1487, file: !1, line: 3715, column: 9)
!5072 = !DILocation(line: 3715, column: 35, scope: !5071)
!5073 = !DILocation(line: 3716, column: 10, scope: !5071)
!5074 = !DILocation(line: 3715, column: 9, scope: !1487)
!5075 = !DILocation(line: 3711, column: 15, scope: !1487)
!5076 = !DILocation(line: 3711, column: 22, scope: !1487)
!5077 = !DILocation(line: 3719, column: 10, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !1487, file: !1, line: 3719, column: 9)
!5079 = !DILocation(line: 3719, column: 9, scope: !1487)
!5080 = !DILocation(line: 3723, column: 27, scope: !1487)
!5081 = !DILocation(line: 3723, column: 10, scope: !1487)
!5082 = !DILocation(line: 3712, column: 15, scope: !1487)
!5083 = !DILocation(line: 3724, column: 12, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !1487, file: !1, line: 3724, column: 9)
!5085 = !DILocation(line: 3724, column: 9, scope: !1487)
!5086 = !DILocation(line: 3728, column: 37, scope: !1487)
!5087 = !DILocation(line: 3728, column: 31, scope: !1487)
!5088 = !DILocation(line: 3729, column: 12, scope: !1499)
!5089 = !DILocation(line: 3729, column: 9, scope: !1487)
!5090 = !DILocation(line: 3730, column: 9, scope: !5091)
!5091 = !DILexicalBlockFile(scope: !1497, file: !1, discriminator: 1)
!5092 = !DILocation(line: 3730, column: 9, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !1497, file: !1, line: 3730, column: 9)
!5094 = !DILocation(line: 3730, column: 9, scope: !1497)
!5095 = !DILocation(line: 3730, column: 9, scope: !5096)
!5096 = !DILexicalBlockFile(scope: !5093, file: !1, discriminator: 3)
!5097 = !DILocation(line: 3733, column: 5, scope: !1487)
!5098 = !DILocation(line: 3734, column: 16, scope: !1487)
!5099 = !DILocation(line: 3734, column: 14, scope: !1487)
!5100 = !DILocation(line: 3735, column: 9, scope: !1487)
!5101 = !DILocation(line: 3735, column: 12, scope: !1487)
!5102 = !DILocation(line: 3737, column: 5, scope: !1487)
!5103 = !DILocation(line: 3738, column: 1, scope: !1487)
!5104 = !DILocation(line: 3793, column: 39, scope: !1484)
!5105 = !DILocation(line: 3795, column: 35, scope: !1484)
!5106 = !DILocation(line: 3796, column: 13, scope: !1484)
!5107 = !DILocation(line: 3796, column: 23, scope: !1484)
!5108 = !DILocation(line: 3795, column: 12, scope: !1484)
!5109 = !DILocation(line: 3795, column: 5, scope: !1484)
!5110 = !DILocation(line: 3961, column: 28, scope: !1500)
!5111 = !DILocation(line: 3963, column: 25, scope: !1500)
!5112 = !DILocation(line: 3963, column: 5, scope: !1500)
!5113 = !DILocation(line: 3964, column: 5, scope: !5114)
!5114 = !DILexicalBlockFile(scope: !1506, file: !1, discriminator: 1)
!5115 = !{!5116, !2672, i64 24}
!5116 = !{!"", !2668, i64 0, !2669, i64 16, !2672, i64 24, !2672, i64 32}
!5117 = !DILocation(line: 3964, column: 5, scope: !1509)
!5118 = !DILocation(line: 3964, column: 5, scope: !1506)
!5119 = !DILocation(line: 3964, column: 5, scope: !5120)
!5120 = !DILexicalBlockFile(scope: !1508, file: !1, discriminator: 4)
!5121 = !DILocation(line: 3964, column: 5, scope: !5122)
!5122 = distinct !DILexicalBlock(scope: !1508, file: !1, line: 3964, column: 5)
!5123 = !DILocation(line: 3964, column: 5, scope: !1508)
!5124 = !DILocation(line: 3964, column: 5, scope: !5125)
!5125 = !DILexicalBlockFile(scope: !5122, file: !1, discriminator: 6)
!5126 = !DILocation(line: 3965, column: 5, scope: !5127)
!5127 = !DILexicalBlockFile(scope: !1511, file: !1, discriminator: 1)
!5128 = !{!5116, !2672, i64 32}
!5129 = !DILocation(line: 3965, column: 5, scope: !1514)
!5130 = !DILocation(line: 3965, column: 5, scope: !1511)
!5131 = !DILocation(line: 3965, column: 5, scope: !5132)
!5132 = !DILexicalBlockFile(scope: !1513, file: !1, discriminator: 4)
!5133 = !DILocation(line: 3965, column: 5, scope: !5134)
!5134 = distinct !DILexicalBlock(scope: !1513, file: !1, line: 3965, column: 5)
!5135 = !DILocation(line: 3965, column: 5, scope: !1513)
!5136 = !DILocation(line: 3965, column: 5, scope: !5137)
!5137 = !DILexicalBlockFile(scope: !5134, file: !1, discriminator: 6)
!5138 = !DILocation(line: 3966, column: 5, scope: !1500)
!5139 = !DILocation(line: 3966, column: 18, scope: !1500)
!5140 = !DILocation(line: 3967, column: 1, scope: !1500)
!5141 = !DILocation(line: 4008, column: 25, scope: !1515)
!5142 = !DILocation(line: 4010, column: 13, scope: !5143)
!5143 = distinct !DILexicalBlock(scope: !1515, file: !1, line: 4010, column: 9)
!5144 = !{!5116, !2669, i64 16}
!5145 = !DILocation(line: 4010, column: 17, scope: !5143)
!5146 = !DILocation(line: 4010, column: 9, scope: !1515)
!5147 = !DILocation(line: 4011, column: 16, scope: !5143)
!5148 = !DILocation(line: 4011, column: 9, scope: !5143)
!5149 = !DILocation(line: 4013, column: 9, scope: !1522)
!5150 = !DILocation(line: 4013, column: 9, scope: !1515)
!5151 = !DILocation(line: 4014, column: 21, scope: !1521)
!5152 = !DILocation(line: 4014, column: 14, scope: !1521)
!5153 = !DILocation(line: 4015, column: 24, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !1521, file: !1, line: 4015, column: 13)
!5155 = !DILocation(line: 4015, column: 27, scope: !5156)
!5156 = !DILexicalBlockFile(scope: !5154, file: !1, discriminator: 1)
!5157 = !DILocation(line: 4015, column: 13, scope: !1521)
!5158 = !DILocation(line: 4016, column: 13, scope: !5159)
!5159 = distinct !DILexicalBlock(scope: !5154, file: !1, line: 4015, column: 45)
!5160 = !DILocation(line: 4017, column: 9, scope: !5159)
!5161 = !DILocation(line: 4020, column: 58, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5163, file: !1, line: 4018, column: 24)
!5163 = distinct !DILexicalBlock(scope: !1521, file: !1, line: 4018, column: 13)
!5164 = !DILocation(line: 4020, column: 20, scope: !5162)
!5165 = !DILocation(line: 4024, column: 65, scope: !1515)
!5166 = !DILocation(line: 4024, column: 79, scope: !1515)
!5167 = !DILocation(line: 4023, column: 12, scope: !1515)
!5168 = !DILocation(line: 4023, column: 5, scope: !1515)
!5169 = !DILocation(line: 4025, column: 1, scope: !1515)
!5170 = !DILocation(line: 3970, column: 29, scope: !1523)
!5171 = !DILocation(line: 3970, column: 43, scope: !1523)
!5172 = !DILocation(line: 3970, column: 56, scope: !1523)
!5173 = !DILocation(line: 3972, column: 5, scope: !5174)
!5174 = !DILexicalBlockFile(scope: !1532, file: !1, discriminator: 1)
!5175 = !DILocation(line: 3972, column: 5, scope: !1533)
!5176 = !DILocation(line: 3972, column: 5, scope: !5177)
!5177 = !DILexicalBlockFile(scope: !1531, file: !1, discriminator: 2)
!5178 = !DILocation(line: 3972, column: 5, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !1531, file: !1, line: 3972, column: 5)
!5180 = !DILocation(line: 3973, column: 5, scope: !5181)
!5181 = !DILexicalBlockFile(scope: !1536, file: !1, discriminator: 1)
!5182 = !DILocation(line: 3973, column: 5, scope: !1537)
!5183 = !DILocation(line: 3973, column: 5, scope: !5184)
!5184 = !DILexicalBlockFile(scope: !1535, file: !1, discriminator: 2)
!5185 = !DILocation(line: 3973, column: 5, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !1535, file: !1, line: 3973, column: 5)
!5187 = !DILocation(line: 3974, column: 5, scope: !1523)
!5188 = !DILocation(line: 3975, column: 1, scope: !1523)
!5189 = !DILocation(line: 4000, column: 25, scope: !1538)
!5190 = !DILocation(line: 4002, column: 13, scope: !5191)
!5191 = distinct !DILexicalBlock(scope: !1538, file: !1, line: 4002, column: 9)
!5192 = !DILocation(line: 4002, column: 17, scope: !5191)
!5193 = !DILocation(line: 4002, column: 9, scope: !1538)
!5194 = !DILocation(line: 3978, column: 29, scope: !1541, inlinedAt: !5195)
!5195 = distinct !DILocation(line: 4003, column: 16, scope: !5191)
!5196 = !DILocation(line: 3983, column: 20, scope: !1541, inlinedAt: !5195)
!5197 = !DILocation(line: 3980, column: 15, scope: !1541, inlinedAt: !5195)
!5198 = !DILocation(line: 3984, column: 18, scope: !5199, inlinedAt: !5195)
!5199 = distinct !DILexicalBlock(scope: !1541, file: !1, line: 3984, column: 9)
!5200 = !DILocation(line: 3984, column: 9, scope: !1541, inlinedAt: !5195)
!5201 = !DILocation(line: 3986, column: 20, scope: !5202, inlinedAt: !5195)
!5202 = distinct !DILexicalBlock(scope: !5199, file: !1, line: 3984, column: 27)
!5203 = !DILocation(line: 3987, column: 22, scope: !5204, inlinedAt: !5195)
!5204 = distinct !DILexicalBlock(scope: !5202, file: !1, line: 3987, column: 13)
!5205 = !DILocation(line: 3987, column: 13, scope: !5202, inlinedAt: !5195)
!5206 = !DILocation(line: 4003, column: 16, scope: !5191)
!5207 = !DILocation(line: 3992, column: 45, scope: !1541, inlinedAt: !5195)
!5208 = !DILocation(line: 3992, column: 18, scope: !1541, inlinedAt: !5195)
!5209 = !DILocation(line: 3981, column: 15, scope: !1541, inlinedAt: !5195)
!5210 = !DILocation(line: 3993, column: 20, scope: !5211, inlinedAt: !5195)
!5211 = distinct !DILexicalBlock(scope: !1541, file: !1, line: 3993, column: 9)
!5212 = !DILocation(line: 3993, column: 9, scope: !1541, inlinedAt: !5195)
!5213 = !DILocation(line: 3995, column: 18, scope: !1541, inlinedAt: !5195)
!5214 = !DILocation(line: 3996, column: 5, scope: !1541, inlinedAt: !5195)
!5215 = !DILocation(line: 4004, column: 38, scope: !1538)
!5216 = !DILocation(line: 4004, column: 12, scope: !1538)
!5217 = !DILocation(line: 4004, column: 5, scope: !1538)
!5218 = !DILocation(line: 4005, column: 1, scope: !1538)
!5219 = !DILocation(line: 3885, column: 25, scope: !1549)
!5220 = !DILocation(line: 3885, column: 41, scope: !1549)
!5221 = !DILocation(line: 3885, column: 57, scope: !1549)
!5222 = !DILocation(line: 3888, column: 9, scope: !1549)
!5223 = !DILocation(line: 3889, column: 16, scope: !1549)
!5224 = !DILocation(line: 3890, column: 5, scope: !1549)
!5225 = !DILocation(line: 3890, column: 15, scope: !1549)
!5226 = !DILocation(line: 3891, column: 5, scope: !1549)
!5227 = !DILocation(line: 3891, column: 15, scope: !1549)
!5228 = !DILocation(line: 3895, column: 10, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !1549, file: !1, line: 3895, column: 9)
!5230 = !DILocation(line: 3895, column: 9, scope: !1549)
!5231 = !DILocation(line: 3899, column: 10, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !1549, file: !1, line: 3899, column: 9)
!5233 = !DILocation(line: 3899, column: 19, scope: !5232)
!5234 = !DILocation(line: 3899, column: 27, scope: !5232)
!5235 = !DILocation(line: 3899, column: 31, scope: !5232)
!5236 = !DILocation(line: 3899, column: 57, scope: !5232)
!5237 = !DILocation(line: 3900, column: 10, scope: !5232)
!5238 = !DILocation(line: 3900, column: 20, scope: !5232)
!5239 = !DILocation(line: 3900, column: 28, scope: !5232)
!5240 = !DILocation(line: 3900, column: 32, scope: !5232)
!5241 = !DILocation(line: 3899, column: 9, scope: !1549)
!5242 = !DILocation(line: 3901, column: 37, scope: !5243)
!5243 = distinct !DILexicalBlock(scope: !5232, file: !1, line: 3900, column: 60)
!5244 = !DILocation(line: 3901, column: 21, scope: !5243)
!5245 = !DILocation(line: 3902, column: 21, scope: !5243)
!5246 = !DILocation(line: 3905, column: 9, scope: !5247)
!5247 = distinct !DILexicalBlock(scope: !1549, file: !1, line: 3905, column: 9)
!5248 = !DILocation(line: 3905, column: 18, scope: !5247)
!5249 = !DILocation(line: 3905, column: 9, scope: !1549)
!5250 = !DILocation(line: 3906, column: 15, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5247, file: !1, line: 3905, column: 27)
!5252 = !DILocation(line: 3907, column: 18, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5251, file: !1, line: 3907, column: 13)
!5254 = !DILocation(line: 3907, column: 24, scope: !5253)
!5255 = !DILocation(line: 3907, column: 27, scope: !5256)
!5256 = !DILexicalBlockFile(scope: !5253, file: !1, discriminator: 1)
!5257 = !DILocation(line: 3907, column: 45, scope: !5253)
!5258 = !DILocation(line: 3907, column: 49, scope: !5259)
!5259 = !DILexicalBlockFile(scope: !5260, file: !1, discriminator: 3)
!5260 = !DILexicalBlockFile(scope: !5253, file: !1, discriminator: 2)
!5261 = !DILocation(line: 3907, column: 13, scope: !5251)
!5262 = !DILocation(line: 3908, column: 13, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5253, file: !1, line: 3907, column: 73)
!5264 = !DILocation(line: 3911, column: 9, scope: !5251)
!5265 = !DILocation(line: 3910, column: 9, scope: !5263)
!5266 = !DILocation(line: 3912, column: 5, scope: !5251)
!5267 = !DILocation(line: 3914, column: 20, scope: !5268)
!5268 = distinct !DILexicalBlock(scope: !5247, file: !1, line: 3912, column: 12)
!5269 = !DILocation(line: 3914, column: 18, scope: !5268)
!5270 = !DILocation(line: 3918, column: 9, scope: !1565)
!5271 = !DILocation(line: 3918, column: 19, scope: !1565)
!5272 = !DILocation(line: 3918, column: 9, scope: !1549)
!5273 = !DILocation(line: 3919, column: 21, scope: !1564)
!5274 = !DILocation(line: 3919, column: 19, scope: !1564)
!5275 = !DILocation(line: 3920, column: 23, scope: !1563)
!5276 = !DILocation(line: 3920, column: 13, scope: !1564)
!5277 = !DILocation(line: 3921, column: 13, scope: !5278)
!5278 = !DILexicalBlockFile(scope: !1561, file: !1, discriminator: 1)
!5279 = !DILocation(line: 3921, column: 13, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !1561, file: !1, line: 3921, column: 13)
!5281 = !DILocation(line: 3921, column: 13, scope: !1561)
!5282 = !DILocation(line: 3921, column: 13, scope: !5283)
!5283 = !DILexicalBlockFile(scope: !5280, file: !1, discriminator: 3)
!5284 = !DILocation(line: 3925, column: 9, scope: !1565)
!5285 = !DILocation(line: 3930, column: 26, scope: !1549)
!5286 = !DILocation(line: 3930, column: 12, scope: !1549)
!5287 = !DILocation(line: 3892, column: 10, scope: !1549)
!5288 = !DILocation(line: 3931, column: 9, scope: !1549)
!5289 = !DILocation(line: 3933, column: 27, scope: !5290)
!5290 = !DILexicalBlockFile(scope: !5291, file: !1, discriminator: 1)
!5291 = distinct !DILexicalBlock(scope: !5292, file: !1, line: 3933, column: 13)
!5292 = distinct !DILexicalBlock(scope: !5293, file: !1, line: 3931, column: 20)
!5293 = distinct !DILexicalBlock(scope: !1549, file: !1, line: 3931, column: 9)
!5294 = !DILocation(line: 3933, column: 13, scope: !5292)
!5295 = !DILocation(line: 3934, column: 13, scope: !5291)
!5296 = !DILocation(line: 3937, column: 9, scope: !1568)
!5297 = !DILocation(line: 3937, column: 9, scope: !1549)
!5298 = !DILocation(line: 3940, column: 9, scope: !5299)
!5299 = !DILexicalBlockFile(scope: !1567, file: !1, discriminator: 1)
!5300 = !DILocation(line: 3940, column: 9, scope: !1572)
!5301 = !DILocation(line: 3940, column: 9, scope: !1567)
!5302 = !DILocation(line: 3940, column: 9, scope: !5303)
!5303 = !DILexicalBlockFile(scope: !1571, file: !1, discriminator: 2)
!5304 = !DILocation(line: 3940, column: 9, scope: !5305)
!5305 = !DILexicalBlockFile(scope: !1570, file: !1, discriminator: 4)
!5306 = !DILocation(line: 3940, column: 9, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !1570, file: !1, line: 3940, column: 9)
!5308 = !DILocation(line: 3940, column: 9, scope: !1570)
!5309 = !DILocation(line: 3940, column: 9, scope: !5310)
!5310 = !DILexicalBlockFile(scope: !5307, file: !1, discriminator: 6)
!5311 = !DILocation(line: 3948, column: 31, scope: !1549)
!5312 = !DILocation(line: 3948, column: 25, scope: !1549)
!5313 = !DILocation(line: 3949, column: 12, scope: !1576)
!5314 = !DILocation(line: 3949, column: 9, scope: !1549)
!5315 = !DILocation(line: 3950, column: 9, scope: !5316)
!5316 = !DILexicalBlockFile(scope: !1574, file: !1, discriminator: 1)
!5317 = !DILocation(line: 3950, column: 9, scope: !1579)
!5318 = !DILocation(line: 3950, column: 9, scope: !1574)
!5319 = !DILocation(line: 3950, column: 9, scope: !5320)
!5320 = !DILexicalBlockFile(scope: !1578, file: !1, discriminator: 4)
!5321 = !DILocation(line: 3950, column: 9, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !1578, file: !1, line: 3950, column: 9)
!5323 = !DILocation(line: 3950, column: 9, scope: !1578)
!5324 = !DILocation(line: 3950, column: 9, scope: !5325)
!5325 = !DILexicalBlockFile(scope: !5322, file: !1, discriminator: 6)
!5326 = !DILocation(line: 3953, column: 9, scope: !1549)
!5327 = !DILocation(line: 3953, column: 13, scope: !1549)
!5328 = !DILocation(line: 3954, column: 20, scope: !1549)
!5329 = !DILocation(line: 3954, column: 9, scope: !1549)
!5330 = !DILocation(line: 3954, column: 18, scope: !1549)
!5331 = !DILocation(line: 3955, column: 21, scope: !1549)
!5332 = !DILocation(line: 3955, column: 19, scope: !1549)
!5333 = !DILocation(line: 3957, column: 5, scope: !1549)
!5334 = !DILocation(line: 3958, column: 1, scope: !1549)
!5335 = !DILocation(line: 4028, column: 27, scope: !1546)
!5336 = !DILocation(line: 4030, column: 13, scope: !5337)
!5337 = distinct !DILexicalBlock(scope: !1546, file: !1, line: 4030, column: 9)
!5338 = !DILocation(line: 4030, column: 17, scope: !5337)
!5339 = !DILocation(line: 4031, column: 39, scope: !5337)
!5340 = !DILocation(line: 4030, column: 9, scope: !1546)
!5341 = !DILocation(line: 4031, column: 56, scope: !5337)
!5342 = !DILocation(line: 4031, column: 70, scope: !5337)
!5343 = !DILocation(line: 4031, column: 16, scope: !5337)
!5344 = !DILocation(line: 4031, column: 9, scope: !5337)
!5345 = !DILocation(line: 4032, column: 12, scope: !1546)
!5346 = !DILocation(line: 4032, column: 5, scope: !1546)
!5347 = !DILocation(line: 4033, column: 1, scope: !1546)
!5348 = !DILocation(line: 4328, column: 39, scope: !1580)
!5349 = !DILocation(line: 4330, column: 25, scope: !1580)
!5350 = !DILocation(line: 4330, column: 5, scope: !1580)
!5351 = !DILocation(line: 4331, column: 5, scope: !5352)
!5352 = !DILexicalBlockFile(scope: !1586, file: !1, discriminator: 1)
!5353 = !{!5354, !2672, i64 32}
!5354 = !{!"", !2668, i64 0, !2669, i64 16, !2669, i64 24, !2672, i64 32, !2672, i64 40, !2672, i64 48}
!5355 = !DILocation(line: 4331, column: 5, scope: !1589)
!5356 = !DILocation(line: 4331, column: 5, scope: !1586)
!5357 = !DILocation(line: 4331, column: 5, scope: !5358)
!5358 = !DILexicalBlockFile(scope: !1588, file: !1, discriminator: 4)
!5359 = !DILocation(line: 4331, column: 5, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !1588, file: !1, line: 4331, column: 5)
!5361 = !DILocation(line: 4331, column: 5, scope: !1588)
!5362 = !DILocation(line: 4331, column: 5, scope: !5363)
!5363 = !DILexicalBlockFile(scope: !5360, file: !1, discriminator: 6)
!5364 = !DILocation(line: 4332, column: 5, scope: !5365)
!5365 = !DILexicalBlockFile(scope: !1591, file: !1, discriminator: 1)
!5366 = !{!5354, !2672, i64 40}
!5367 = !DILocation(line: 4332, column: 5, scope: !1594)
!5368 = !DILocation(line: 4332, column: 5, scope: !1591)
!5369 = !DILocation(line: 4332, column: 5, scope: !5370)
!5370 = !DILexicalBlockFile(scope: !1593, file: !1, discriminator: 4)
!5371 = !DILocation(line: 4332, column: 5, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !1593, file: !1, line: 4332, column: 5)
!5373 = !DILocation(line: 4332, column: 5, scope: !1593)
!5374 = !DILocation(line: 4332, column: 5, scope: !5375)
!5375 = !DILexicalBlockFile(scope: !5372, file: !1, discriminator: 6)
!5376 = !DILocation(line: 4333, column: 5, scope: !5377)
!5377 = !DILexicalBlockFile(scope: !1596, file: !1, discriminator: 1)
!5378 = !{!5354, !2672, i64 48}
!5379 = !DILocation(line: 4333, column: 5, scope: !1599)
!5380 = !DILocation(line: 4333, column: 5, scope: !1596)
!5381 = !DILocation(line: 4333, column: 5, scope: !5382)
!5382 = !DILexicalBlockFile(scope: !1598, file: !1, discriminator: 4)
!5383 = !DILocation(line: 4333, column: 5, scope: !5384)
!5384 = distinct !DILexicalBlock(scope: !1598, file: !1, line: 4333, column: 5)
!5385 = !DILocation(line: 4333, column: 5, scope: !1598)
!5386 = !DILocation(line: 4333, column: 5, scope: !5387)
!5387 = !DILexicalBlockFile(scope: !5384, file: !1, discriminator: 6)
!5388 = !DILocation(line: 4334, column: 5, scope: !1580)
!5389 = !DILocation(line: 4334, column: 18, scope: !1580)
!5390 = !DILocation(line: 4335, column: 1, scope: !1580)
!5391 = !DILocation(line: 4338, column: 40, scope: !1600)
!5392 = !DILocation(line: 4338, column: 54, scope: !1600)
!5393 = !DILocation(line: 4338, column: 67, scope: !1600)
!5394 = !DILocation(line: 4340, column: 5, scope: !5395)
!5395 = !DILexicalBlockFile(scope: !1609, file: !1, discriminator: 1)
!5396 = !DILocation(line: 4340, column: 5, scope: !1610)
!5397 = !DILocation(line: 4340, column: 5, scope: !5398)
!5398 = !DILexicalBlockFile(scope: !1608, file: !1, discriminator: 2)
!5399 = !DILocation(line: 4340, column: 5, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !1608, file: !1, line: 4340, column: 5)
!5401 = !DILocation(line: 4341, column: 5, scope: !5402)
!5402 = !DILexicalBlockFile(scope: !1613, file: !1, discriminator: 1)
!5403 = !DILocation(line: 4341, column: 5, scope: !1614)
!5404 = !DILocation(line: 4341, column: 5, scope: !5405)
!5405 = !DILexicalBlockFile(scope: !1612, file: !1, discriminator: 2)
!5406 = !DILocation(line: 4341, column: 5, scope: !5407)
!5407 = distinct !DILexicalBlock(scope: !1612, file: !1, line: 4341, column: 5)
!5408 = !DILocation(line: 4342, column: 5, scope: !5409)
!5409 = !DILexicalBlockFile(scope: !1617, file: !1, discriminator: 1)
!5410 = !DILocation(line: 4342, column: 5, scope: !1618)
!5411 = !DILocation(line: 4342, column: 5, scope: !5412)
!5412 = !DILexicalBlockFile(scope: !1616, file: !1, discriminator: 2)
!5413 = !DILocation(line: 4342, column: 5, scope: !5414)
!5414 = distinct !DILexicalBlock(scope: !1616, file: !1, line: 4342, column: 5)
!5415 = !DILocation(line: 4343, column: 5, scope: !1600)
!5416 = !DILocation(line: 4344, column: 1, scope: !1600)
!5417 = !DILocation(line: 4347, column: 36, scope: !1619)
!5418 = !DILocation(line: 4350, column: 32, scope: !1619)
!5419 = !{!5354, !2669, i64 16}
!5420 = !DILocation(line: 4350, column: 16, scope: !1619)
!5421 = !DILocation(line: 4351, column: 28, scope: !1619)
!5422 = !DILocation(line: 4351, column: 15, scope: !1619)
!5423 = !DILocation(line: 4356, column: 19, scope: !5424)
!5424 = distinct !DILexicalBlock(scope: !1619, file: !1, line: 4356, column: 9)
!5425 = !DILocation(line: 4356, column: 9, scope: !1619)
!5426 = !DILocation(line: 4358, column: 13, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !1619, file: !1, line: 4358, column: 9)
!5428 = !{!5354, !2669, i64 24}
!5429 = !DILocation(line: 4358, column: 23, scope: !5427)
!5430 = !DILocation(line: 4358, column: 9, scope: !1619)
!5431 = !DILocation(line: 4360, column: 9, scope: !1642)
!5432 = !DILocation(line: 4360, column: 27, scope: !1642)
!5433 = !DILocation(line: 4360, column: 9, scope: !1619)
!5434 = !DILocation(line: 4361, column: 9, scope: !1641)
!5435 = !DILocation(line: 4349, column: 16, scope: !1619)
!5436 = !DILocation(line: 4362, column: 22, scope: !1639)
!5437 = !DILocation(line: 4362, column: 9, scope: !1640)
!5438 = !DILocation(line: 4363, column: 18, scope: !1638)
!5439 = !DILocation(line: 4365, column: 17, scope: !5440)
!5440 = distinct !DILexicalBlock(scope: !1637, file: !1, line: 4364, column: 29)
!5441 = !DILocation(line: 4383, column: 23, scope: !1638)
!5442 = !DILocation(line: 4352, column: 15, scope: !1619)
!5443 = !DILocation(line: 4364, column: 20, scope: !1637)
!5444 = !DILocation(line: 4364, column: 17, scope: !1638)
!5445 = !DILocation(line: 4353, column: 15, scope: !1619)
!5446 = !DILocation(line: 4367, column: 13, scope: !5440)
!5447 = !DILocation(line: 4368, column: 24, scope: !1636)
!5448 = !DILocation(line: 4369, column: 26, scope: !1635)
!5449 = !DILocation(line: 4369, column: 21, scope: !1636)
!5450 = !DILocation(line: 4370, column: 35, scope: !1634)
!5451 = !DILocation(line: 4371, column: 39, scope: !1633)
!5452 = !DILocation(line: 4371, column: 44, scope: !1633)
!5453 = !DILocation(line: 4371, column: 47, scope: !5454)
!5454 = !DILexicalBlockFile(scope: !1633, file: !1, discriminator: 1)
!5455 = !DILocation(line: 4371, column: 25, scope: !1634)
!5456 = !DILocation(line: 4372, column: 39, scope: !1632)
!5457 = !DILocation(line: 4373, column: 25, scope: !5458)
!5458 = !DILexicalBlockFile(scope: !1631, file: !1, discriminator: 1)
!5459 = !DILocation(line: 4373, column: 25, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !1631, file: !1, line: 4373, column: 25)
!5461 = !DILocation(line: 4373, column: 25, scope: !1631)
!5462 = !DILocation(line: 4373, column: 25, scope: !5463)
!5463 = !DILexicalBlockFile(scope: !5460, file: !1, discriminator: 3)
!5464 = !DILocation(line: 4376, column: 25, scope: !1645)
!5465 = !DILocation(line: 4378, column: 25, scope: !1645)
!5466 = !DILocation(line: 4379, column: 25, scope: !5467)
!5467 = !DILexicalBlockFile(scope: !1644, file: !1, discriminator: 1)
!5468 = !DILocation(line: 4379, column: 25, scope: !5469)
!5469 = distinct !DILexicalBlock(scope: !1644, file: !1, line: 4379, column: 25)
!5470 = !DILocation(line: 4379, column: 25, scope: !1644)
!5471 = !DILocation(line: 4379, column: 25, scope: !5472)
!5472 = !DILexicalBlockFile(scope: !5469, file: !1, discriminator: 3)
!5473 = !DILocation(line: 4354, column: 15, scope: !1619)
!5474 = !DILocation(line: 4384, column: 13, scope: !1638)
!5475 = !DILocation(line: 4385, column: 13, scope: !5476)
!5476 = !DILexicalBlockFile(scope: !1647, file: !1, discriminator: 1)
!5477 = !DILocation(line: 4385, column: 13, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !1647, file: !1, line: 4385, column: 13)
!5479 = !DILocation(line: 4385, column: 13, scope: !1647)
!5480 = !DILocation(line: 4385, column: 13, scope: !5481)
!5481 = !DILexicalBlockFile(scope: !5478, file: !1, discriminator: 3)
!5482 = !DILocation(line: 4362, column: 37, scope: !1639)
!5483 = !DILocation(line: 4388, column: 18, scope: !1659)
!5484 = !DILocation(line: 4389, column: 20, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !1659, file: !1, line: 4389, column: 13)
!5486 = !DILocation(line: 4389, column: 13, scope: !1659)
!5487 = !DILocation(line: 4391, column: 22, scope: !1657)
!5488 = !DILocation(line: 4391, column: 9, scope: !1658)
!5489 = !DILocation(line: 4392, column: 18, scope: !1656)
!5490 = !DILocation(line: 4394, column: 17, scope: !5491)
!5491 = distinct !DILexicalBlock(scope: !1655, file: !1, line: 4393, column: 29)
!5492 = !DILocation(line: 4412, column: 13, scope: !1656)
!5493 = !DILocation(line: 4393, column: 20, scope: !1655)
!5494 = !DILocation(line: 4393, column: 17, scope: !1656)
!5495 = !DILocation(line: 4396, column: 13, scope: !5491)
!5496 = !DILocation(line: 4397, column: 24, scope: !1654)
!5497 = !DILocation(line: 4398, column: 26, scope: !1653)
!5498 = !DILocation(line: 4398, column: 21, scope: !1654)
!5499 = !DILocation(line: 4399, column: 35, scope: !1652)
!5500 = !DILocation(line: 4400, column: 39, scope: !1651)
!5501 = !DILocation(line: 4400, column: 44, scope: !1651)
!5502 = !DILocation(line: 4400, column: 47, scope: !5503)
!5503 = !DILexicalBlockFile(scope: !1651, file: !1, discriminator: 1)
!5504 = !DILocation(line: 4400, column: 25, scope: !1652)
!5505 = !DILocation(line: 4401, column: 39, scope: !1650)
!5506 = !DILocation(line: 4402, column: 25, scope: !5507)
!5507 = !DILexicalBlockFile(scope: !1649, file: !1, discriminator: 1)
!5508 = !DILocation(line: 4402, column: 25, scope: !5509)
!5509 = distinct !DILexicalBlock(scope: !1649, file: !1, line: 4402, column: 25)
!5510 = !DILocation(line: 4402, column: 25, scope: !1649)
!5511 = !DILocation(line: 4402, column: 25, scope: !5512)
!5512 = !DILexicalBlockFile(scope: !5509, file: !1, discriminator: 3)
!5513 = !DILocation(line: 4405, column: 25, scope: !1662)
!5514 = !DILocation(line: 4407, column: 25, scope: !1662)
!5515 = !DILocation(line: 4408, column: 25, scope: !5516)
!5516 = !DILexicalBlockFile(scope: !1661, file: !1, discriminator: 1)
!5517 = !DILocation(line: 4408, column: 25, scope: !5518)
!5518 = distinct !DILexicalBlock(scope: !1661, file: !1, line: 4408, column: 25)
!5519 = !DILocation(line: 4408, column: 25, scope: !1661)
!5520 = !DILocation(line: 4408, column: 25, scope: !5521)
!5521 = !DILexicalBlockFile(scope: !5518, file: !1, discriminator: 3)
!5522 = !DILocation(line: 4391, column: 37, scope: !1657)
!5523 = !DILocation(line: 4416, column: 1, scope: !1619)
!5524 = !DILocation(line: 4261, column: 31, scope: !1690)
!5525 = !DILocation(line: 4261, column: 47, scope: !1690)
!5526 = !DILocation(line: 4261, column: 63, scope: !1690)
!5527 = !DILocation(line: 4267, column: 15, scope: !1690)
!5528 = !DILocation(line: 4268, column: 28, scope: !1690)
!5529 = !DILocation(line: 4268, column: 16, scope: !1690)
!5530 = !DILocation(line: 4270, column: 14, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !1690, file: !1, line: 4270, column: 9)
!5532 = !DILocation(line: 4270, column: 22, scope: !5531)
!5533 = !DILocation(line: 4270, column: 25, scope: !5534)
!5534 = !DILexicalBlockFile(scope: !5531, file: !1, discriminator: 1)
!5535 = !DILocation(line: 4270, column: 49, scope: !5531)
!5536 = !DILocation(line: 4270, column: 52, scope: !5531)
!5537 = !DILocation(line: 4270, column: 70, scope: !5531)
!5538 = !DILocation(line: 4270, column: 9, scope: !1690)
!5539 = !DILocation(line: 4271, column: 21, scope: !5540)
!5540 = distinct !DILexicalBlock(scope: !5531, file: !1, line: 4270, column: 75)
!5541 = !DILocation(line: 4272, column: 23, scope: !5542)
!5542 = distinct !DILexicalBlock(scope: !5540, file: !1, line: 4272, column: 13)
!5543 = !DILocation(line: 4272, column: 32, scope: !5542)
!5544 = !DILocation(line: 4272, column: 36, scope: !5542)
!5545 = !DILocation(line: 4272, column: 54, scope: !5542)
!5546 = !DILocation(line: 4272, column: 13, scope: !5540)
!5547 = !DILocation(line: 4273, column: 29, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5542, file: !1, line: 4272, column: 59)
!5549 = !DILocation(line: 4273, column: 13, scope: !5548)
!5550 = !DILocation(line: 4275, column: 13, scope: !5548)
!5551 = !DILocation(line: 4283, column: 15, scope: !1690)
!5552 = !DILocation(line: 4265, column: 15, scope: !1690)
!5553 = !DILocation(line: 4284, column: 17, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !1690, file: !1, line: 4284, column: 9)
!5555 = !DILocation(line: 4284, column: 9, scope: !1690)
!5556 = !DILocation(line: 4286, column: 17, scope: !1703)
!5557 = !DILocation(line: 4286, column: 5, scope: !1704)
!5558 = !DILocation(line: 4287, column: 26, scope: !1702)
!5559 = !DILocation(line: 4297, column: 9, scope: !1702)
!5560 = !DILocation(line: 4287, column: 19, scope: !1702)
!5561 = !DILocation(line: 4288, column: 24, scope: !1702)
!5562 = !DILocation(line: 4288, column: 19, scope: !1702)
!5563 = !DILocation(line: 4289, column: 16, scope: !1709)
!5564 = !DILocation(line: 4289, column: 13, scope: !1702)
!5565 = !DILocation(line: 4290, column: 40, scope: !5566)
!5566 = distinct !DILexicalBlock(scope: !1708, file: !1, line: 4290, column: 17)
!5567 = !DILocation(line: 4290, column: 17, scope: !5566)
!5568 = !DILocation(line: 4290, column: 17, scope: !1708)
!5569 = !DILocation(line: 4291, column: 30, scope: !5566)
!5570 = !DILocation(line: 4293, column: 22, scope: !5566)
!5571 = !DILocation(line: 4291, column: 17, scope: !5566)
!5572 = !DILocation(line: 4294, column: 13, scope: !5573)
!5573 = !DILexicalBlockFile(scope: !1707, file: !1, discriminator: 1)
!5574 = !DILocation(line: 4294, column: 13, scope: !5575)
!5575 = distinct !DILexicalBlock(scope: !1707, file: !1, line: 4294, column: 13)
!5576 = !DILocation(line: 4294, column: 13, scope: !1707)
!5577 = !DILocation(line: 4294, column: 13, scope: !5578)
!5578 = !DILexicalBlockFile(scope: !5575, file: !1, discriminator: 3)
!5579 = !DILocation(line: 4286, column: 30, scope: !1703)
!5580 = !DILocation(line: 4264, column: 16, scope: !1690)
!5581 = !DILocation(line: 4301, column: 14, scope: !1690)
!5582 = !DILocation(line: 4266, column: 15, scope: !1690)
!5583 = !DILocation(line: 4302, column: 16, scope: !1713)
!5584 = !DILocation(line: 4302, column: 9, scope: !1690)
!5585 = !DILocation(line: 4306, column: 5, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !1690, file: !1, line: 4306, column: 5)
!5587 = !DILocation(line: 4308, column: 9, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5589, file: !1, line: 4306, column: 37)
!5589 = distinct !DILexicalBlock(scope: !5586, file: !1, line: 4306, column: 5)
!5590 = !DILocation(line: 4307, column: 9, scope: !5588)
!5591 = !DILocation(line: 4306, column: 33, scope: !5589)
!5592 = distinct !{!5592, !3356}
!5593 = distinct !{!5593, !3038, !3039}
!5594 = !DILocation(line: 4303, column: 9, scope: !5595)
!5595 = !DILexicalBlockFile(scope: !1711, file: !1, discriminator: 1)
!5596 = !DILocation(line: 4303, column: 9, scope: !5597)
!5597 = distinct !DILexicalBlock(scope: !1711, file: !1, line: 4303, column: 9)
!5598 = !DILocation(line: 4303, column: 9, scope: !1711)
!5599 = !DILocation(line: 4303, column: 9, scope: !5600)
!5600 = !DILexicalBlockFile(scope: !5597, file: !1, discriminator: 3)
!5601 = distinct !{!5601, !3045, !3038, !3039}
!5602 = !DILocation(line: 4312, column: 36, scope: !1690)
!5603 = !DILocation(line: 4312, column: 30, scope: !1690)
!5604 = !DILocation(line: 4313, column: 12, scope: !1717)
!5605 = !DILocation(line: 4313, column: 9, scope: !1690)
!5606 = !DILocation(line: 4314, column: 9, scope: !5607)
!5607 = !DILexicalBlockFile(scope: !1715, file: !1, discriminator: 1)
!5608 = !DILocation(line: 4314, column: 9, scope: !5609)
!5609 = distinct !DILexicalBlock(scope: !1715, file: !1, line: 4314, column: 9)
!5610 = !DILocation(line: 4314, column: 9, scope: !1715)
!5611 = !DILocation(line: 4314, column: 9, scope: !5612)
!5612 = !DILexicalBlockFile(scope: !5609, file: !1, discriminator: 3)
!5613 = !DILocation(line: 4315, column: 9, scope: !5614)
!5614 = !DILexicalBlockFile(scope: !1719, file: !1, discriminator: 1)
!5615 = !DILocation(line: 4315, column: 9, scope: !5616)
!5616 = distinct !DILexicalBlock(scope: !1719, file: !1, line: 4315, column: 9)
!5617 = !DILocation(line: 4315, column: 9, scope: !1719)
!5618 = !DILocation(line: 4315, column: 9, scope: !5619)
!5619 = !DILexicalBlockFile(scope: !5616, file: !1, discriminator: 3)
!5620 = !DILocation(line: 4318, column: 9, scope: !1690)
!5621 = !DILocation(line: 4318, column: 17, scope: !1690)
!5622 = !DILocation(line: 4319, column: 9, scope: !1690)
!5623 = !DILocation(line: 4319, column: 19, scope: !1690)
!5624 = !DILocation(line: 4320, column: 9, scope: !1690)
!5625 = !DILocation(line: 4320, column: 19, scope: !1690)
!5626 = !DILocation(line: 4321, column: 9, scope: !1690)
!5627 = !DILocation(line: 4321, column: 16, scope: !1690)
!5628 = !DILocation(line: 4322, column: 5, scope: !1690)
!5629 = !DILocation(line: 4323, column: 9, scope: !1690)
!5630 = !DILocation(line: 4323, column: 19, scope: !1690)
!5631 = !DILocation(line: 4324, column: 5, scope: !1690)
!5632 = !DILocation(line: 4325, column: 1, scope: !1690)
!5633 = !DILocation(line: 4419, column: 38, scope: !1663)
!5634 = !DILocation(line: 4426, column: 34, scope: !1663)
!5635 = !DILocation(line: 4426, column: 22, scope: !1663)
!5636 = !DILocation(line: 4426, column: 15, scope: !1663)
!5637 = !DILocation(line: 4427, column: 14, scope: !5638)
!5638 = distinct !DILexicalBlock(scope: !1663, file: !1, line: 4427, column: 9)
!5639 = !DILocation(line: 4427, column: 9, scope: !1663)
!5640 = !DILocation(line: 4429, column: 17, scope: !1670)
!5641 = !DILocation(line: 4429, column: 16, scope: !1670)
!5642 = !DILocation(line: 4429, column: 5, scope: !1671)
!5643 = !DILocation(line: 4439, column: 9, scope: !1669)
!5644 = !DILocation(line: 4430, column: 26, scope: !1669)
!5645 = !DILocation(line: 4430, column: 19, scope: !1669)
!5646 = !DILocation(line: 4431, column: 18, scope: !1677)
!5647 = !DILocation(line: 4431, column: 13, scope: !1669)
!5648 = !DILocation(line: 4432, column: 20, scope: !1676)
!5649 = !DILocation(line: 4433, column: 22, scope: !1675)
!5650 = !DILocation(line: 4433, column: 17, scope: !1676)
!5651 = !DILocation(line: 4434, column: 17, scope: !5652)
!5652 = !DILexicalBlockFile(scope: !1673, file: !1, discriminator: 1)
!5653 = !DILocation(line: 4434, column: 17, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !1673, file: !1, line: 4434, column: 17)
!5655 = !DILocation(line: 4434, column: 17, scope: !1673)
!5656 = !DILocation(line: 4434, column: 17, scope: !5657)
!5657 = !DILexicalBlockFile(scope: !5654, file: !1, discriminator: 3)
!5658 = !DILocation(line: 4438, column: 13, scope: !1677)
!5659 = !DILocation(line: 4429, column: 49, scope: !1670)
!5660 = !DILocation(line: 4425, column: 9, scope: !1663)
!5661 = !DILocation(line: 4429, column: 15, scope: !5662)
!5662 = !DILexicalBlockFile(scope: !5663, file: !1, discriminator: 2)
!5663 = !DILexicalBlockFile(scope: !1670, file: !1, discriminator: 1)
!5664 = !DILocation(line: 4441, column: 33, scope: !1663)
!5665 = !DILocation(line: 4441, column: 56, scope: !1663)
!5666 = !DILocation(line: 4441, column: 12, scope: !1663)
!5667 = !DILocation(line: 4441, column: 5, scope: !1663)
!5668 = !DILocation(line: 4442, column: 1, scope: !1663)
!5669 = !DILocation(line: 4445, column: 40, scope: !1678)
!5670 = !DILocation(line: 4445, column: 54, scope: !1678)
!5671 = !DILocation(line: 4447, column: 5, scope: !5672)
!5672 = !DILexicalBlockFile(scope: !1685, file: !1, discriminator: 1)
!5673 = !DILocation(line: 4447, column: 5, scope: !1689)
!5674 = !DILocation(line: 4447, column: 5, scope: !1685)
!5675 = !DILocation(line: 4447, column: 5, scope: !5676)
!5676 = !DILexicalBlockFile(scope: !1688, file: !1, discriminator: 2)
!5677 = !DILocation(line: 4447, column: 5, scope: !5678)
!5678 = !DILexicalBlockFile(scope: !1687, file: !1, discriminator: 4)
!5679 = !DILocation(line: 4447, column: 5, scope: !5680)
!5680 = distinct !DILexicalBlock(scope: !1687, file: !1, line: 4447, column: 5)
!5681 = !DILocation(line: 4447, column: 5, scope: !1687)
!5682 = !DILocation(line: 4447, column: 5, scope: !5683)
!5683 = !DILexicalBlockFile(scope: !5680, file: !1, discriminator: 6)
!5684 = !DILocation(line: 4448, column: 19, scope: !1678)
!5685 = !DILocation(line: 4449, column: 5, scope: !1678)
!5686 = !DILocation(line: 4450, column: 5, scope: !1678)
!5687 = !DILocation(line: 3080, column: 42, scope: !1720)
!5688 = !DILocation(line: 3082, column: 25, scope: !1720)
!5689 = !DILocation(line: 3082, column: 5, scope: !1720)
!5690 = !DILocation(line: 3083, column: 5, scope: !5691)
!5691 = !DILexicalBlockFile(scope: !1726, file: !1, discriminator: 1)
!5692 = !{!5693, !2672, i64 16}
!5693 = !{!"", !2668, i64 0, !2672, i64 16, !2672, i64 24, !2672, i64 32, !2672, i64 40, !2669, i64 48, !2691, i64 56}
!5694 = !DILocation(line: 3083, column: 5, scope: !1729)
!5695 = !DILocation(line: 3083, column: 5, scope: !1726)
!5696 = !DILocation(line: 3083, column: 5, scope: !5697)
!5697 = !DILexicalBlockFile(scope: !1728, file: !1, discriminator: 4)
!5698 = !DILocation(line: 3083, column: 5, scope: !5699)
!5699 = distinct !DILexicalBlock(scope: !1728, file: !1, line: 3083, column: 5)
!5700 = !DILocation(line: 3083, column: 5, scope: !1728)
!5701 = !DILocation(line: 3083, column: 5, scope: !5702)
!5702 = !DILexicalBlockFile(scope: !5699, file: !1, discriminator: 6)
!5703 = !DILocation(line: 3084, column: 5, scope: !5704)
!5704 = !DILexicalBlockFile(scope: !1731, file: !1, discriminator: 1)
!5705 = !{!5693, !2672, i64 40}
!5706 = !DILocation(line: 3084, column: 5, scope: !1734)
!5707 = !DILocation(line: 3084, column: 5, scope: !1731)
!5708 = !DILocation(line: 3084, column: 5, scope: !5709)
!5709 = !DILexicalBlockFile(scope: !1733, file: !1, discriminator: 4)
!5710 = !DILocation(line: 3084, column: 5, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !1733, file: !1, line: 3084, column: 5)
!5712 = !DILocation(line: 3084, column: 5, scope: !1733)
!5713 = !DILocation(line: 3084, column: 5, scope: !5714)
!5714 = !DILexicalBlockFile(scope: !5711, file: !1, discriminator: 6)
!5715 = !DILocation(line: 3085, column: 20, scope: !1720)
!5716 = !{!5693, !2672, i64 24}
!5717 = !DILocation(line: 3085, column: 5, scope: !1720)
!5718 = !DILocation(line: 3086, column: 20, scope: !1720)
!5719 = !{!5693, !2672, i64 32}
!5720 = !DILocation(line: 3086, column: 5, scope: !1720)
!5721 = !DILocation(line: 3087, column: 5, scope: !1720)
!5722 = !DILocation(line: 3087, column: 18, scope: !1720)
!5723 = !DILocation(line: 3088, column: 1, scope: !1720)
!5724 = !DILocation(line: 3102, column: 43, scope: !1735)
!5725 = !DILocation(line: 3102, column: 57, scope: !1735)
!5726 = !DILocation(line: 3102, column: 70, scope: !1735)
!5727 = !DILocation(line: 3104, column: 5, scope: !5728)
!5728 = !DILexicalBlockFile(scope: !1744, file: !1, discriminator: 1)
!5729 = !DILocation(line: 3104, column: 5, scope: !1745)
!5730 = !DILocation(line: 3104, column: 5, scope: !5731)
!5731 = !DILexicalBlockFile(scope: !1743, file: !1, discriminator: 2)
!5732 = !DILocation(line: 3104, column: 5, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !1743, file: !1, line: 3104, column: 5)
!5734 = !DILocation(line: 3105, column: 5, scope: !5735)
!5735 = !DILexicalBlockFile(scope: !1748, file: !1, discriminator: 1)
!5736 = !DILocation(line: 3105, column: 5, scope: !1749)
!5737 = !DILocation(line: 3105, column: 5, scope: !5738)
!5738 = !DILexicalBlockFile(scope: !1747, file: !1, discriminator: 2)
!5739 = !DILocation(line: 3105, column: 5, scope: !5740)
!5740 = distinct !DILexicalBlock(scope: !1747, file: !1, line: 3105, column: 5)
!5741 = !DILocation(line: 3106, column: 5, scope: !1735)
!5742 = !DILocation(line: 3107, column: 1, scope: !1735)
!5743 = !DILocation(line: 3110, column: 39, scope: !1750)
!5744 = !DILocation(line: 3114, column: 26, scope: !1750)
!5745 = !DILocation(line: 3114, column: 15, scope: !1750)
!5746 = !DILocation(line: 3115, column: 31, scope: !1750)
!5747 = !DILocation(line: 3115, column: 17, scope: !1750)
!5748 = !DILocation(line: 3116, column: 30, scope: !1750)
!5749 = !DILocation(line: 3116, column: 17, scope: !1750)
!5750 = !DILocation(line: 3117, column: 28, scope: !1750)
!5751 = !DILocation(line: 3117, column: 15, scope: !1750)
!5752 = !DILocation(line: 3118, column: 20, scope: !1750)
!5753 = !DILocation(line: 3118, column: 16, scope: !1750)
!5754 = !DILocation(line: 3119, column: 24, scope: !1750)
!5755 = !{!5693, !2669, i64 48}
!5756 = !DILocation(line: 3119, column: 16, scope: !1750)
!5757 = !DILocation(line: 3122, column: 13, scope: !5758)
!5758 = distinct !DILexicalBlock(scope: !1750, file: !1, line: 3122, column: 9)
!5759 = !{!5693, !2691, i64 56}
!5760 = !DILocation(line: 3122, column: 9, scope: !5758)
!5761 = !DILocation(line: 3122, column: 9, scope: !1750)
!5762 = !DILocation(line: 3125, column: 16, scope: !1771)
!5763 = !DILocation(line: 3125, column: 9, scope: !1750)
!5764 = !DILocation(line: 3127, column: 18, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !1771, file: !1, line: 3125, column: 25)
!5766 = !DILocation(line: 3128, column: 20, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5765, file: !1, line: 3128, column: 13)
!5768 = !DILocation(line: 3128, column: 13, scope: !5765)
!5769 = !DILocation(line: 3130, column: 20, scope: !5765)
!5770 = !DILocation(line: 3120, column: 16, scope: !1750)
!5771 = !DILocation(line: 3131, column: 20, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5773, file: !1, line: 3131, column: 9)
!5773 = distinct !DILexicalBlock(scope: !5765, file: !1, line: 3131, column: 9)
!5774 = !DILocation(line: 3131, column: 9, scope: !5773)
!5775 = !DILocation(line: 3133, column: 20, scope: !5776)
!5776 = distinct !DILexicalBlock(scope: !5772, file: !1, line: 3131, column: 30)
!5777 = !DILocation(line: 3135, column: 13, scope: !5776)
!5778 = !DILocation(line: 3132, column: 21, scope: !5776)
!5779 = !DILocation(line: 3120, column: 25, scope: !1750)
!5780 = !DILocation(line: 3112, column: 15, scope: !1750)
!5781 = !DILocation(line: 3134, column: 13, scope: !5776)
!5782 = !DILocation(line: 3131, column: 26, scope: !5772)
!5783 = !DILocation(line: 3138, column: 15, scope: !5784)
!5784 = distinct !DILexicalBlock(scope: !1770, file: !1, line: 3138, column: 13)
!5785 = !DILocation(line: 3138, column: 13, scope: !1770)
!5786 = !DILocation(line: 3142, column: 13, scope: !1769)
!5787 = !DILocation(line: 3142, column: 31, scope: !1769)
!5788 = !DILocation(line: 3142, column: 13, scope: !1770)
!5789 = !DILocation(line: 3143, column: 23, scope: !1768)
!5790 = !DILocation(line: 3144, column: 22, scope: !1768)
!5791 = !DILocation(line: 3145, column: 24, scope: !5792)
!5792 = distinct !DILexicalBlock(scope: !1768, file: !1, line: 3145, column: 17)
!5793 = !DILocation(line: 3145, column: 17, scope: !1768)
!5794 = !DILocation(line: 3147, column: 24, scope: !1768)
!5795 = !DILocation(line: 3148, column: 24, scope: !5796)
!5796 = distinct !DILexicalBlock(scope: !5797, file: !1, line: 3148, column: 13)
!5797 = distinct !DILexicalBlock(scope: !1768, file: !1, line: 3148, column: 13)
!5798 = !DILocation(line: 3148, column: 13, scope: !5797)
!5799 = !DILocation(line: 3149, column: 24, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5796, file: !1, line: 3148, column: 34)
!5801 = !DILocation(line: 3151, column: 17, scope: !5800)
!5802 = !DILocation(line: 3150, column: 17, scope: !5800)
!5803 = !DILocation(line: 3148, column: 30, scope: !5796)
!5804 = !DILocation(line: 3153, column: 13, scope: !5805)
!5805 = !DILexicalBlockFile(scope: !1773, file: !1, discriminator: 1)
!5806 = !DILocation(line: 3153, column: 13, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !1773, file: !1, line: 3153, column: 13)
!5808 = !DILocation(line: 3153, column: 13, scope: !1773)
!5809 = !DILocation(line: 3153, column: 13, scope: !5810)
!5810 = !DILexicalBlockFile(scope: !5807, file: !1, discriminator: 3)
!5811 = !DILocation(line: 3159, column: 17, scope: !1783)
!5812 = !DILocation(line: 3159, column: 23, scope: !1782)
!5813 = !DILocation(line: 3159, column: 9, scope: !1783)
!5814 = !DILocation(line: 3164, column: 31, scope: !5815)
!5815 = distinct !DILexicalBlock(scope: !5816, file: !1, line: 3164, column: 17)
!5816 = distinct !DILexicalBlock(scope: !5817, file: !1, line: 3164, column: 17)
!5817 = distinct !DILexicalBlock(scope: !1780, file: !1, line: 3161, column: 33)
!5818 = !DILocation(line: 3166, column: 17, scope: !5817)
!5819 = !DILocation(line: 3160, column: 13, scope: !1781)
!5820 = !DILocation(line: 3160, column: 23, scope: !1781)
!5821 = !DILocation(line: 3161, column: 27, scope: !1780)
!5822 = !DILocation(line: 3163, column: 25, scope: !5817)
!5823 = !DILocation(line: 3161, column: 17, scope: !1781)
!5824 = !DILocation(line: 3164, column: 29, scope: !5815)
!5825 = !DILocation(line: 3164, column: 17, scope: !5816)
!5826 = !DILocation(line: 3165, column: 43, scope: !5815)
!5827 = !DILocation(line: 3165, column: 34, scope: !5815)
!5828 = !DILocation(line: 3165, column: 21, scope: !5815)
!5829 = !DILocation(line: 3165, column: 32, scope: !5815)
!5830 = distinct !{!5830, !3038, !3039}
!5831 = !DILocation(line: 3120, column: 19, scope: !1750)
!5832 = distinct !{!5832, !3045, !3038, !3039}
!5833 = !DILocation(line: 3166, column: 30, scope: !5817)
!5834 = !DILocation(line: 3167, column: 31, scope: !5817)
!5835 = !DILocation(line: 3167, column: 27, scope: !5817)
!5836 = !DILocation(line: 3171, column: 39, scope: !1779)
!5837 = !DILocation(line: 3171, column: 30, scope: !1779)
!5838 = !DILocation(line: 3171, column: 28, scope: !1779)
!5839 = !DILocation(line: 3172, column: 30, scope: !1779)
!5840 = !DILocation(line: 3120, column: 22, scope: !1750)
!5841 = !DILocation(line: 3174, column: 28, scope: !1777)
!5842 = !DILocation(line: 3174, column: 17, scope: !1778)
!5843 = !DILocation(line: 3178, column: 28, scope: !1776)
!5844 = !DILocation(line: 3180, column: 31, scope: !1776)
!5845 = !DILocation(line: 3177, column: 29, scope: !1776)
!5846 = !DILocation(line: 3179, column: 21, scope: !1776)
!5847 = !DILocation(line: 3113, column: 15, scope: !1750)
!5848 = !DILocation(line: 3181, column: 21, scope: !1776)
!5849 = !DILocation(line: 3182, column: 21, scope: !5850)
!5850 = !DILexicalBlockFile(scope: !1775, file: !1, discriminator: 1)
!5851 = !DILocation(line: 3182, column: 21, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !1775, file: !1, line: 3182, column: 21)
!5853 = !DILocation(line: 3182, column: 21, scope: !1775)
!5854 = !DILocation(line: 3182, column: 21, scope: !5855)
!5855 = !DILexicalBlockFile(scope: !5852, file: !1, discriminator: 3)
!5856 = !DILocation(line: 3174, column: 34, scope: !1777)
!5857 = !DILocation(line: 3189, column: 15, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !1770, file: !1, line: 3189, column: 13)
!5859 = !DILocation(line: 3189, column: 13, scope: !1770)
!5860 = !DILocation(line: 3192, column: 5, scope: !1750)
!5861 = !DILocation(line: 3193, column: 5, scope: !1750)
!5862 = !DILocation(line: 3196, column: 17, scope: !1750)
!5863 = !DILocation(line: 3197, column: 5, scope: !1750)
!5864 = !DILocation(line: 3198, column: 1, scope: !1750)
!5865 = !DILocation(line: 3007, column: 32, scope: !1850)
!5866 = !DILocation(line: 3007, column: 48, scope: !1850)
!5867 = !DILocation(line: 3007, column: 64, scope: !1850)
!5868 = !DILocation(line: 3012, column: 5, scope: !1850)
!5869 = !DILocation(line: 3012, column: 15, scope: !1850)
!5870 = !DILocation(line: 3013, column: 15, scope: !1850)
!5871 = !DILocation(line: 3014, column: 5, scope: !1850)
!5872 = !DILocation(line: 3014, column: 15, scope: !1850)
!5873 = !DILocation(line: 3015, column: 17, scope: !1850)
!5874 = !DILocation(line: 3016, column: 17, scope: !1850)
!5875 = !DILocation(line: 3020, column: 10, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !1850, file: !1, line: 3020, column: 9)
!5877 = !DILocation(line: 3020, column: 9, scope: !1850)
!5878 = !DILocation(line: 3024, column: 29, scope: !1850)
!5879 = !DILocation(line: 3024, column: 12, scope: !1850)
!5880 = !DILocation(line: 3025, column: 14, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !1850, file: !1, line: 3025, column: 9)
!5882 = !DILocation(line: 3025, column: 9, scope: !1850)
!5883 = !DILocation(line: 3027, column: 9, scope: !1850)
!5884 = !DILocation(line: 3010, column: 16, scope: !1850)
!5885 = !DILocation(line: 3011, column: 16, scope: !1850)
!5886 = !DILocation(line: 3030, column: 9, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !1850, file: !1, line: 3030, column: 9)
!5888 = !DILocation(line: 3030, column: 14, scope: !5887)
!5889 = !DILocation(line: 3030, column: 9, scope: !1850)
!5890 = !DILocation(line: 3031, column: 14, scope: !5891)
!5891 = distinct !DILexicalBlock(scope: !5892, file: !1, line: 3031, column: 13)
!5892 = distinct !DILexicalBlock(scope: !5887, file: !1, line: 3030, column: 26)
!5893 = !DILocation(line: 3031, column: 13, scope: !5892)
!5894 = !DILocation(line: 3032, column: 29, scope: !5895)
!5895 = distinct !DILexicalBlock(scope: !5891, file: !1, line: 3031, column: 34)
!5896 = !DILocation(line: 3032, column: 13, scope: !5895)
!5897 = !DILocation(line: 3033, column: 13, scope: !5895)
!5898 = !DILocation(line: 3035, column: 13, scope: !5892)
!5899 = !DILocation(line: 3036, column: 15, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5892, file: !1, line: 3036, column: 13)
!5901 = !DILocation(line: 3036, column: 21, scope: !5900)
!5902 = !DILocation(line: 3036, column: 24, scope: !5903)
!5903 = !DILexicalBlockFile(scope: !5900, file: !1, discriminator: 1)
!5904 = !DILocation(line: 3036, column: 13, scope: !5892)
!5905 = !DILocation(line: 3039, column: 11, scope: !5906)
!5906 = distinct !DILexicalBlock(scope: !1850, file: !1, line: 3039, column: 9)
!5907 = !DILocation(line: 3039, column: 9, scope: !1850)
!5908 = !DILocation(line: 3040, column: 25, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5906, file: !1, line: 3039, column: 16)
!5910 = !DILocation(line: 3040, column: 9, scope: !5909)
!5911 = !DILocation(line: 3041, column: 9, scope: !5909)
!5912 = !DILocation(line: 3044, column: 30, scope: !1850)
!5913 = !DILocation(line: 3044, column: 15, scope: !1850)
!5914 = !DILocation(line: 3045, column: 29, scope: !1850)
!5915 = !DILocation(line: 3045, column: 14, scope: !1850)
!5916 = !DILocation(line: 3046, column: 17, scope: !5917)
!5917 = distinct !DILexicalBlock(scope: !1850, file: !1, line: 3046, column: 9)
!5918 = !DILocation(line: 3046, column: 35, scope: !5917)
!5919 = !DILocation(line: 3046, column: 25, scope: !5917)
!5920 = !DILocation(line: 3051, column: 17, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5922, file: !1, line: 3051, column: 5)
!5922 = distinct !DILexicalBlock(scope: !1850, file: !1, line: 3051, column: 5)
!5923 = !DILocation(line: 3051, column: 5, scope: !5922)
!5924 = !DILocation(line: 3052, column: 9, scope: !5921)
!5925 = !DILocation(line: 3051, column: 23, scope: !5921)
!5926 = !DILocation(line: 3052, column: 20, scope: !5921)
!5927 = distinct !{!5927, !3038, !3039}
!5928 = !DILocation(line: 3047, column: 9, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5917, file: !1, line: 3046, column: 44)
!5930 = !DILocation(line: 3048, column: 9, scope: !5929)
!5931 = !DILocation(line: 3053, column: 17, scope: !5932)
!5932 = distinct !DILexicalBlock(scope: !5933, file: !1, line: 3053, column: 5)
!5933 = distinct !DILexicalBlock(scope: !1850, file: !1, line: 3053, column: 5)
!5934 = !DILocation(line: 3053, column: 5, scope: !5933)
!5935 = !DILocation(line: 3054, column: 23, scope: !5932)
!5936 = !DILocation(line: 3053, column: 23, scope: !5932)
!5937 = !DILocation(line: 3054, column: 19, scope: !5932)
!5938 = !DILocation(line: 3054, column: 9, scope: !5932)
!5939 = distinct !{!5939, !3038, !3039}
!5940 = !DILocation(line: 3017, column: 16, scope: !1850)
!5941 = distinct !{!5941, !3045, !3038, !3039}
!5942 = distinct !{!5942, !3045, !3038, !3039}
!5943 = !DILocation(line: 3057, column: 38, scope: !1850)
!5944 = !DILocation(line: 3057, column: 32, scope: !1850)
!5945 = !DILocation(line: 3058, column: 12, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !1850, file: !1, line: 3058, column: 9)
!5947 = !DILocation(line: 3058, column: 9, scope: !1850)
!5948 = !DILocation(line: 3061, column: 9, scope: !1850)
!5949 = !DILocation(line: 3061, column: 14, scope: !1850)
!5950 = !DILocation(line: 3062, column: 9, scope: !1850)
!5951 = !DILocation(line: 3062, column: 17, scope: !1850)
!5952 = !DILocation(line: 3063, column: 9, scope: !1850)
!5953 = !DILocation(line: 3063, column: 16, scope: !1850)
!5954 = !DILocation(line: 3064, column: 9, scope: !1850)
!5955 = !DILocation(line: 3064, column: 16, scope: !1850)
!5956 = !DILocation(line: 3065, column: 9, scope: !1850)
!5957 = !DILocation(line: 3065, column: 11, scope: !1850)
!5958 = !DILocation(line: 3066, column: 21, scope: !1850)
!5959 = !DILocation(line: 3066, column: 19, scope: !1850)
!5960 = !DILocation(line: 3066, column: 9, scope: !1850)
!5961 = !DILocation(line: 3066, column: 17, scope: !1850)
!5962 = !DILocation(line: 3068, column: 5, scope: !1850)
!5963 = !DILocation(line: 3071, column: 9, scope: !1850)
!5964 = !DILocation(line: 3072, column: 9, scope: !5965)
!5965 = distinct !DILexicalBlock(scope: !1850, file: !1, line: 3071, column: 9)
!5966 = !DILocation(line: 3073, column: 9, scope: !1850)
!5967 = !DILocation(line: 3074, column: 9, scope: !5968)
!5968 = distinct !DILexicalBlock(scope: !1850, file: !1, line: 3073, column: 9)
!5969 = !DILocation(line: 3075, column: 5, scope: !5970)
!5970 = !DILexicalBlockFile(scope: !1867, file: !1, discriminator: 4)
!5971 = !DILocation(line: 3075, column: 5, scope: !5972)
!5972 = distinct !DILexicalBlock(scope: !1867, file: !1, line: 3075, column: 5)
!5973 = !DILocation(line: 3075, column: 5, scope: !1867)
!5974 = !DILocation(line: 3075, column: 5, scope: !5975)
!5975 = !DILexicalBlockFile(scope: !5972, file: !1, discriminator: 6)
!5976 = !DILocation(line: 3077, column: 1, scope: !1850)
!5977 = !DILocation(line: 3201, column: 41, scope: !1784)
!5978 = !DILocation(line: 3203, column: 13, scope: !1790)
!5979 = !DILocation(line: 3203, column: 20, scope: !1790)
!5980 = !DILocation(line: 3203, column: 9, scope: !1784)
!5981 = !DILocation(line: 3204, column: 39, scope: !5982)
!5982 = distinct !DILexicalBlock(scope: !1790, file: !1, line: 3203, column: 29)
!5983 = !DILocation(line: 3204, column: 56, scope: !5982)
!5984 = !DILocation(line: 3204, column: 66, scope: !5982)
!5985 = !DILocation(line: 3204, column: 16, scope: !5982)
!5986 = !DILocation(line: 3204, column: 9, scope: !5982)
!5987 = !DILocation(line: 3205, column: 20, scope: !1789)
!5988 = !DILocation(line: 3205, column: 16, scope: !1789)
!5989 = !DILocation(line: 3205, column: 16, scope: !1790)
!5990 = !DILocation(line: 3206, column: 40, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !1789, file: !1, line: 3205, column: 29)
!5992 = !DILocation(line: 3206, column: 57, scope: !5991)
!5993 = !DILocation(line: 3206, column: 16, scope: !5991)
!5994 = !DILocation(line: 3206, column: 9, scope: !5991)
!5995 = !DILocation(line: 3208, column: 19, scope: !1788)
!5996 = !DILocation(line: 3208, column: 34, scope: !1788)
!5997 = !DILocation(line: 3212, column: 13, scope: !1788)
!5998 = !DILocation(line: 3209, column: 20, scope: !1788)
!5999 = !DILocation(line: 3213, column: 19, scope: !1788)
!6000 = !DILocation(line: 3214, column: 21, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !1788, file: !1, line: 3214, column: 13)
!6002 = !DILocation(line: 3214, column: 13, scope: !1788)
!6003 = !DILocation(line: 3216, column: 20, scope: !1796)
!6004 = !DILocation(line: 3216, column: 9, scope: !1797)
!6005 = !DILocation(line: 3217, column: 54, scope: !1795)
!6006 = !DILocation(line: 3220, column: 13, scope: !1795)
!6007 = !DILocation(line: 3217, column: 50, scope: !1795)
!6008 = !DILocation(line: 3217, column: 31, scope: !1795)
!6009 = !DILocation(line: 3217, column: 23, scope: !1795)
!6010 = !DILocation(line: 3218, column: 18, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !1795, file: !1, line: 3218, column: 17)
!6012 = !DILocation(line: 3218, column: 17, scope: !1795)
!6013 = !DILocation(line: 3216, column: 25, scope: !1796)
!6014 = !DILocation(line: 3209, column: 23, scope: !1788)
!6015 = !DILocation(line: 3223, column: 34, scope: !1788)
!6016 = !DILocation(line: 3223, column: 18, scope: !1788)
!6017 = !DILocation(line: 3224, column: 20, scope: !6018)
!6018 = distinct !DILexicalBlock(scope: !1788, file: !1, line: 3224, column: 13)
!6019 = !DILocation(line: 3224, column: 13, scope: !1788)
!6020 = !DILocation(line: 3226, column: 25, scope: !1800)
!6021 = !DILocation(line: 3226, column: 20, scope: !1800)
!6022 = !DILocation(line: 3226, column: 9, scope: !1801)
!6023 = !DILocation(line: 3228, column: 54, scope: !1799)
!6024 = !DILocation(line: 3231, column: 13, scope: !1799)
!6025 = !DILocation(line: 3228, column: 50, scope: !1799)
!6026 = !DILocation(line: 3228, column: 31, scope: !1799)
!6027 = !DILocation(line: 3228, column: 23, scope: !1799)
!6028 = !DILocation(line: 3229, column: 18, scope: !6029)
!6029 = distinct !DILexicalBlock(scope: !1799, file: !1, line: 3229, column: 17)
!6030 = !DILocation(line: 3229, column: 17, scope: !1799)
!6031 = !DILocation(line: 3226, column: 29, scope: !1800)
!6032 = !DILocation(line: 3233, column: 43, scope: !1788)
!6033 = !DILocation(line: 3234, column: 34, scope: !1788)
!6034 = !DILocation(line: 3233, column: 16, scope: !1788)
!6035 = !DILocation(line: 3233, column: 9, scope: !1788)
!6036 = !DILocation(line: 3237, column: 9, scope: !6037)
!6037 = !DILexicalBlockFile(scope: !1803, file: !1, discriminator: 1)
!6038 = !DILocation(line: 3237, column: 9, scope: !6039)
!6039 = !DILexicalBlockFile(scope: !1805, file: !1, discriminator: 4)
!6040 = !DILocation(line: 3237, column: 9, scope: !6041)
!6041 = distinct !DILexicalBlock(scope: !1805, file: !1, line: 3237, column: 9)
!6042 = !DILocation(line: 3237, column: 9, scope: !1805)
!6043 = !DILocation(line: 3237, column: 9, scope: !6044)
!6044 = !DILexicalBlockFile(scope: !6041, file: !1, discriminator: 6)
!6045 = !DILocation(line: 3238, column: 9, scope: !6046)
!6046 = !DILexicalBlockFile(scope: !1808, file: !1, discriminator: 1)
!6047 = !DILocation(line: 3238, column: 9, scope: !1811)
!6048 = !DILocation(line: 3238, column: 9, scope: !1808)
!6049 = !DILocation(line: 3238, column: 9, scope: !6050)
!6050 = !DILexicalBlockFile(scope: !1810, file: !1, discriminator: 4)
!6051 = !DILocation(line: 3238, column: 9, scope: !6052)
!6052 = distinct !DILexicalBlock(scope: !1810, file: !1, line: 3238, column: 9)
!6053 = !DILocation(line: 3238, column: 9, scope: !1810)
!6054 = !DILocation(line: 3238, column: 9, scope: !6055)
!6055 = !DILexicalBlockFile(scope: !6052, file: !1, discriminator: 6)
!6056 = !DILocation(line: 3241, column: 1, scope: !1784)
!6057 = !DILocation(line: 3244, column: 43, scope: !1812)
!6058 = !DILocation(line: 3244, column: 57, scope: !1812)
!6059 = !DILocation(line: 3246, column: 5, scope: !1812)
!6060 = !DILocation(line: 3246, column: 15, scope: !1812)
!6061 = !DILocation(line: 3246, column: 25, scope: !1812)
!6062 = !DILocation(line: 3249, column: 10, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !1812, file: !1, line: 3249, column: 9)
!6064 = !DILocation(line: 3249, column: 9, scope: !1812)
!6065 = !DILocation(line: 3254, column: 9, scope: !1812)
!6066 = !DILocation(line: 3247, column: 16, scope: !1812)
!6067 = !DILocation(line: 3255, column: 9, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !1812, file: !1, line: 3255, column: 9)
!6069 = !DILocation(line: 3255, column: 35, scope: !6068)
!6070 = !DILocation(line: 3255, column: 40, scope: !6068)
!6071 = !DILocation(line: 3256, column: 9, scope: !6068)
!6072 = !DILocation(line: 3256, column: 41, scope: !6068)
!6073 = !DILocation(line: 3256, column: 34, scope: !6068)
!6074 = !DILocation(line: 3255, column: 9, scope: !1812)
!6075 = !DILocation(line: 3262, column: 16, scope: !1825)
!6076 = !DILocation(line: 3262, column: 5, scope: !1826)
!6077 = !DILocation(line: 3264, column: 33, scope: !1824)
!6078 = !DILocation(line: 3273, column: 13, scope: !1824)
!6079 = !DILocation(line: 3271, column: 27, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !6081, file: !1, line: 3271, column: 18)
!6081 = distinct !DILexicalBlock(scope: !1824, file: !1, line: 3269, column: 13)
!6082 = !DILocation(line: 3258, column: 25, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !6068, file: !1, line: 3257, column: 5)
!6084 = !DILocation(line: 3258, column: 9, scope: !6083)
!6085 = !DILocation(line: 3259, column: 9, scope: !6083)
!6086 = !DILocation(line: 3276, column: 21, scope: !1830)
!6087 = !DILocation(line: 3276, column: 16, scope: !1830)
!6088 = !DILocation(line: 3276, column: 5, scope: !1831)
!6089 = !DILocation(line: 3278, column: 33, scope: !1829)
!6090 = !DILocation(line: 3286, column: 13, scope: !1829)
!6091 = !DILocation(line: 3264, column: 19, scope: !1824)
!6092 = !DILocation(line: 3265, column: 28, scope: !1824)
!6093 = !DILocation(line: 3265, column: 20, scope: !1824)
!6094 = !DILocation(line: 3266, column: 19, scope: !6095)
!6095 = distinct !DILexicalBlock(scope: !1824, file: !1, line: 3266, column: 13)
!6096 = !DILocation(line: 3266, column: 23, scope: !6095)
!6097 = !DILocation(line: 3266, column: 26, scope: !6098)
!6098 = !DILexicalBlockFile(scope: !6095, file: !1, discriminator: 1)
!6099 = !DILocation(line: 3266, column: 13, scope: !1824)
!6100 = !DILocation(line: 3271, column: 24, scope: !6080)
!6101 = !DILocation(line: 3271, column: 18, scope: !6081)
!6102 = !DILocation(line: 3273, column: 9, scope: !1824)
!6103 = !DILocation(line: 3273, column: 24, scope: !1824)
!6104 = !DILocation(line: 3262, column: 21, scope: !1825)
!6105 = !DILocation(line: 3247, column: 19, scope: !1812)
!6106 = !DILocation(line: 3278, column: 19, scope: !1829)
!6107 = !DILocation(line: 3279, column: 28, scope: !1829)
!6108 = !DILocation(line: 3279, column: 20, scope: !1829)
!6109 = !DILocation(line: 3280, column: 19, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !1829, file: !1, line: 3280, column: 13)
!6111 = !DILocation(line: 3280, column: 23, scope: !6110)
!6112 = !DILocation(line: 3280, column: 26, scope: !6113)
!6113 = !DILexicalBlockFile(scope: !6110, file: !1, discriminator: 1)
!6114 = !DILocation(line: 3280, column: 13, scope: !1829)
!6115 = !DILocation(line: 3282, column: 19, scope: !6116)
!6116 = distinct !DILexicalBlock(scope: !1829, file: !1, line: 3282, column: 13)
!6117 = !DILocation(line: 3282, column: 13, scope: !1829)
!6118 = !DILocation(line: 3284, column: 27, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !6116, file: !1, line: 3284, column: 18)
!6120 = !DILocation(line: 3284, column: 24, scope: !6119)
!6121 = !DILocation(line: 3284, column: 18, scope: !6116)
!6122 = !DILocation(line: 3286, column: 9, scope: !1829)
!6123 = !DILocation(line: 3286, column: 23, scope: !1829)
!6124 = !DILocation(line: 3276, column: 25, scope: !1830)
!6125 = !DILocation(line: 3288, column: 14, scope: !1812)
!6126 = !DILocation(line: 3246, column: 34, scope: !1812)
!6127 = !DILocation(line: 3289, column: 16, scope: !6128)
!6128 = distinct !DILexicalBlock(scope: !1812, file: !1, line: 3289, column: 9)
!6129 = !DILocation(line: 3289, column: 9, scope: !1812)
!6130 = !DILocation(line: 3291, column: 21, scope: !1835)
!6131 = !DILocation(line: 3291, column: 16, scope: !1835)
!6132 = !DILocation(line: 3291, column: 5, scope: !1836)
!6133 = !DILocation(line: 3292, column: 29, scope: !1834)
!6134 = !DILocation(line: 3294, column: 9, scope: !1834)
!6135 = !DILocation(line: 3292, column: 19, scope: !1834)
!6136 = !DILocation(line: 3293, column: 9, scope: !1834)
!6137 = !DILocation(line: 3291, column: 25, scope: !1835)
!6138 = !DILocation(line: 3296, column: 5, scope: !6139)
!6139 = !DILexicalBlockFile(scope: !1838, file: !1, discriminator: 1)
!6140 = !DILocation(line: 3296, column: 5, scope: !1842)
!6141 = !DILocation(line: 3296, column: 5, scope: !1838)
!6142 = !DILocation(line: 3296, column: 5, scope: !6143)
!6143 = !DILexicalBlockFile(scope: !1841, file: !1, discriminator: 2)
!6144 = !DILocation(line: 3296, column: 5, scope: !6145)
!6145 = !DILexicalBlockFile(scope: !1840, file: !1, discriminator: 4)
!6146 = !DILocation(line: 3296, column: 5, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !1840, file: !1, line: 3296, column: 5)
!6148 = !DILocation(line: 3296, column: 5, scope: !1840)
!6149 = !DILocation(line: 3296, column: 5, scope: !6150)
!6150 = !DILexicalBlockFile(scope: !6147, file: !1, discriminator: 6)
!6151 = !DILocation(line: 3297, column: 16, scope: !1812)
!6152 = !DILocation(line: 3298, column: 5, scope: !1812)
!6153 = !DILocation(line: 3299, column: 1, scope: !1812)
!6154 = !DILocation(line: 3091, column: 41, scope: !1843)
!6155 = !DILocation(line: 3091, column: 51, scope: !1843)
!6156 = !DILocation(line: 3093, column: 16, scope: !1843)
!6157 = !DILocation(line: 3096, column: 12, scope: !1843)
!6158 = !DILocation(line: 3097, column: 16, scope: !1843)
!6159 = !DILocation(line: 3097, column: 9, scope: !1843)
!6160 = !DILocation(line: 3098, column: 12, scope: !1843)
!6161 = !DILocation(line: 3098, column: 5, scope: !1843)
!6162 = !DILocation(line: 2069, column: 32, scope: !1869)
!6163 = !DILocation(line: 2071, column: 25, scope: !1869)
!6164 = !DILocation(line: 2071, column: 5, scope: !1869)
!6165 = !DILocation(line: 2072, column: 5, scope: !6166)
!6166 = !DILexicalBlockFile(scope: !1875, file: !1, discriminator: 1)
!6167 = !{!6168, !2672, i64 16}
!6168 = !{!"", !2668, i64 0, !2672, i64 16, !2672, i64 24, !2672, i64 32, !2691, i64 40}
!6169 = !DILocation(line: 2072, column: 5, scope: !1878)
!6170 = !DILocation(line: 2072, column: 5, scope: !1875)
!6171 = !DILocation(line: 2072, column: 5, scope: !6172)
!6172 = !DILexicalBlockFile(scope: !1877, file: !1, discriminator: 4)
!6173 = !DILocation(line: 2072, column: 5, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !1877, file: !1, line: 2072, column: 5)
!6175 = !DILocation(line: 2072, column: 5, scope: !1877)
!6176 = !DILocation(line: 2072, column: 5, scope: !6177)
!6177 = !DILexicalBlockFile(scope: !6174, file: !1, discriminator: 6)
!6178 = !DILocation(line: 2073, column: 5, scope: !6179)
!6179 = !DILexicalBlockFile(scope: !1880, file: !1, discriminator: 1)
!6180 = !{!6168, !2672, i64 32}
!6181 = !DILocation(line: 2073, column: 5, scope: !1883)
!6182 = !DILocation(line: 2073, column: 5, scope: !1880)
!6183 = !DILocation(line: 2073, column: 5, scope: !6184)
!6184 = !DILexicalBlockFile(scope: !1882, file: !1, discriminator: 4)
!6185 = !DILocation(line: 2073, column: 5, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !1882, file: !1, line: 2073, column: 5)
!6187 = !DILocation(line: 2073, column: 5, scope: !1882)
!6188 = !DILocation(line: 2073, column: 5, scope: !6189)
!6189 = !DILexicalBlockFile(scope: !6186, file: !1, discriminator: 6)
!6190 = !DILocation(line: 2074, column: 13, scope: !6191)
!6191 = distinct !DILexicalBlock(scope: !1869, file: !1, line: 2074, column: 9)
!6192 = !{!6168, !2672, i64 24}
!6193 = !DILocation(line: 2074, column: 21, scope: !6191)
!6194 = !DILocation(line: 2074, column: 9, scope: !1869)
!6195 = !DILocation(line: 2075, column: 20, scope: !6191)
!6196 = !DILocation(line: 2075, column: 9, scope: !6191)
!6197 = !DILocation(line: 2076, column: 5, scope: !1869)
!6198 = !DILocation(line: 2076, column: 18, scope: !1869)
!6199 = !DILocation(line: 2077, column: 1, scope: !1869)
!6200 = !DILocation(line: 2092, column: 33, scope: !1884)
!6201 = !DILocation(line: 2092, column: 47, scope: !1884)
!6202 = !DILocation(line: 2092, column: 60, scope: !1884)
!6203 = !DILocation(line: 2094, column: 5, scope: !6204)
!6204 = !DILexicalBlockFile(scope: !1893, file: !1, discriminator: 1)
!6205 = !DILocation(line: 2094, column: 5, scope: !1894)
!6206 = !DILocation(line: 2094, column: 5, scope: !6207)
!6207 = !DILexicalBlockFile(scope: !1892, file: !1, discriminator: 2)
!6208 = !DILocation(line: 2094, column: 5, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !1892, file: !1, line: 2094, column: 5)
!6210 = !DILocation(line: 2095, column: 5, scope: !6211)
!6211 = !DILexicalBlockFile(scope: !1897, file: !1, discriminator: 1)
!6212 = !DILocation(line: 2095, column: 5, scope: !1898)
!6213 = !DILocation(line: 2095, column: 5, scope: !6214)
!6214 = !DILexicalBlockFile(scope: !1896, file: !1, discriminator: 2)
!6215 = !DILocation(line: 2095, column: 5, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !1896, file: !1, line: 2095, column: 5)
!6217 = !DILocation(line: 2096, column: 5, scope: !1884)
!6218 = !DILocation(line: 2097, column: 1, scope: !1884)
!6219 = !DILocation(line: 2100, column: 29, scope: !1899)
!6220 = !DILocation(line: 2105, column: 27, scope: !1899)
!6221 = !DILocation(line: 2105, column: 15, scope: !1899)
!6222 = !DILocation(line: 2106, column: 28, scope: !1899)
!6223 = !DILocation(line: 2106, column: 15, scope: !1899)
!6224 = !DILocation(line: 2107, column: 25, scope: !1899)
!6225 = !DILocation(line: 2107, column: 16, scope: !1899)
!6226 = !DILocation(line: 2110, column: 13, scope: !6227)
!6227 = distinct !DILexicalBlock(scope: !1899, file: !1, line: 2110, column: 9)
!6228 = !{!6168, !2691, i64 40}
!6229 = !DILocation(line: 2110, column: 9, scope: !6227)
!6230 = !DILocation(line: 2110, column: 9, scope: !1899)
!6231 = !DILocation(line: 2113, column: 16, scope: !1913)
!6232 = !DILocation(line: 2113, column: 9, scope: !1899)
!6233 = !DILocation(line: 2116, column: 18, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !1913, file: !1, line: 2113, column: 25)
!6235 = !DILocation(line: 2117, column: 20, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !6234, file: !1, line: 2117, column: 13)
!6237 = !DILocation(line: 2117, column: 13, scope: !6234)
!6238 = !DILocation(line: 2119, column: 20, scope: !6234)
!6239 = !DILocation(line: 2108, column: 16, scope: !1899)
!6240 = !DILocation(line: 2120, column: 21, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6242, file: !1, line: 2120, column: 9)
!6242 = distinct !DILexicalBlock(scope: !6234, file: !1, line: 2120, column: 9)
!6243 = !DILocation(line: 2120, column: 9, scope: !6242)
!6244 = !DILocation(line: 2121, column: 20, scope: !6245)
!6245 = distinct !DILexicalBlock(scope: !6241, file: !1, line: 2120, column: 36)
!6246 = !DILocation(line: 2126, column: 13, scope: !6245)
!6247 = !DILocation(line: 2102, column: 15, scope: !1899)
!6248 = !DILocation(line: 2122, column: 17, scope: !6249)
!6249 = distinct !DILexicalBlock(scope: !6245, file: !1, line: 2122, column: 17)
!6250 = !DILocation(line: 2122, column: 40, scope: !6249)
!6251 = !DILocation(line: 2122, column: 17, scope: !6245)
!6252 = !DILocation(line: 2124, column: 20, scope: !6245)
!6253 = !DILocation(line: 2103, column: 15, scope: !1899)
!6254 = !DILocation(line: 2125, column: 13, scope: !6245)
!6255 = !DILocation(line: 2120, column: 32, scope: !6241)
!6256 = !DILocation(line: 2129, column: 35, scope: !1912)
!6257 = !DILocation(line: 2129, column: 21, scope: !1912)
!6258 = !DILocation(line: 2132, column: 13, scope: !1916)
!6259 = !DILocation(line: 2132, column: 31, scope: !1916)
!6260 = !DILocation(line: 2132, column: 13, scope: !1912)
!6261 = !DILocation(line: 2133, column: 23, scope: !1915)
!6262 = !DILocation(line: 2134, column: 22, scope: !1915)
!6263 = !DILocation(line: 2135, column: 24, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !1915, file: !1, line: 2135, column: 17)
!6265 = !DILocation(line: 2135, column: 17, scope: !1915)
!6266 = !DILocation(line: 2137, column: 24, scope: !1915)
!6267 = !DILocation(line: 2138, column: 25, scope: !6268)
!6268 = distinct !DILexicalBlock(scope: !6269, file: !1, line: 2138, column: 13)
!6269 = distinct !DILexicalBlock(scope: !1915, file: !1, line: 2138, column: 13)
!6270 = !DILocation(line: 2138, column: 13, scope: !6269)
!6271 = !DILocation(line: 2139, column: 24, scope: !6272)
!6272 = distinct !DILexicalBlock(scope: !6268, file: !1, line: 2138, column: 40)
!6273 = !DILocation(line: 2141, column: 17, scope: !6272)
!6274 = !DILocation(line: 2140, column: 17, scope: !6272)
!6275 = !DILocation(line: 2138, column: 36, scope: !6268)
!6276 = !DILocation(line: 2143, column: 13, scope: !6277)
!6277 = !DILexicalBlockFile(scope: !1918, file: !1, discriminator: 1)
!6278 = !DILocation(line: 2143, column: 13, scope: !6279)
!6279 = distinct !DILexicalBlock(scope: !1918, file: !1, line: 2143, column: 13)
!6280 = !DILocation(line: 2143, column: 13, scope: !1918)
!6281 = !DILocation(line: 2143, column: 13, scope: !6282)
!6282 = !DILexicalBlockFile(scope: !6279, file: !1, discriminator: 3)
!6283 = !DILocation(line: 2150, column: 22, scope: !1925)
!6284 = !DILocation(line: 2150, column: 29, scope: !1924)
!6285 = !DILocation(line: 2150, column: 9, scope: !1925)
!6286 = !DILocation(line: 2151, column: 20, scope: !1923)
!6287 = !DILocation(line: 2158, column: 27, scope: !1921)
!6288 = !DILocation(line: 2152, column: 13, scope: !1923)
!6289 = !DILocation(line: 2152, column: 23, scope: !1923)
!6290 = !DILocation(line: 2153, column: 31, scope: !1922)
!6291 = !DILocation(line: 2153, column: 28, scope: !1922)
!6292 = !DILocation(line: 2153, column: 17, scope: !1923)
!6293 = !DILocation(line: 2155, column: 28, scope: !1921)
!6294 = !DILocation(line: 2156, column: 24, scope: !1921)
!6295 = !DILocation(line: 2157, column: 17, scope: !1921)
!6296 = !DILocation(line: 2104, column: 15, scope: !1899)
!6297 = !DILocation(line: 2159, column: 17, scope: !1921)
!6298 = !DILocation(line: 2160, column: 17, scope: !6299)
!6299 = !DILexicalBlockFile(scope: !1920, file: !1, discriminator: 1)
!6300 = !DILocation(line: 2160, column: 17, scope: !6301)
!6301 = distinct !DILexicalBlock(scope: !1920, file: !1, line: 2160, column: 17)
!6302 = !DILocation(line: 2160, column: 17, scope: !1920)
!6303 = !DILocation(line: 2160, column: 17, scope: !6304)
!6304 = !DILexicalBlockFile(scope: !6301, file: !1, discriminator: 3)
!6305 = !DILocation(line: 2163, column: 24, scope: !1928)
!6306 = !DILocation(line: 2164, column: 17, scope: !1928)
!6307 = !DILocation(line: 2165, column: 27, scope: !1928)
!6308 = !DILocation(line: 2166, column: 17, scope: !1928)
!6309 = !DILocation(line: 2167, column: 17, scope: !6310)
!6310 = !DILexicalBlockFile(scope: !1927, file: !1, discriminator: 1)
!6311 = !DILocation(line: 2167, column: 17, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !1927, file: !1, line: 2167, column: 17)
!6313 = !DILocation(line: 2167, column: 17, scope: !1927)
!6314 = !DILocation(line: 2167, column: 17, scope: !6315)
!6315 = !DILexicalBlockFile(scope: !6312, file: !1, discriminator: 3)
!6316 = !DILocation(line: 2178, column: 5, scope: !1899)
!6317 = !DILocation(line: 2179, column: 5, scope: !1899)
!6318 = !DILocation(line: 2182, column: 17, scope: !1899)
!6319 = !DILocation(line: 2183, column: 5, scope: !1899)
!6320 = !DILocation(line: 2184, column: 1, scope: !1899)
!6321 = !DILocation(line: 1995, column: 27, scope: !1978)
!6322 = !DILocation(line: 1995, column: 43, scope: !1978)
!6323 = !DILocation(line: 1995, column: 59, scope: !1978)
!6324 = !DILocation(line: 1998, column: 5, scope: !1978)
!6325 = !DILocation(line: 1998, column: 31, scope: !1978)
!6326 = !DILocation(line: 1999, column: 15, scope: !1978)
!6327 = !DILocation(line: 2000, column: 17, scope: !1978)
!6328 = !DILocation(line: 2003, column: 14, scope: !1992)
!6329 = !DILocation(line: 2003, column: 9, scope: !1978)
!6330 = !DILocation(line: 2004, column: 9, scope: !1991)
!6331 = !DILocation(line: 2004, column: 15, scope: !1991)
!6332 = !DILocation(line: 2005, column: 29, scope: !1991)
!6333 = !DILocation(line: 2005, column: 19, scope: !1991)
!6334 = !DILocation(line: 2006, column: 21, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !1991, file: !1, line: 2006, column: 13)
!6336 = !DILocation(line: 2006, column: 13, scope: !1991)
!6337 = !DILocation(line: 2008, column: 71, scope: !2000)
!6338 = !DILocation(line: 2008, column: 14, scope: !2000)
!6339 = !DILocation(line: 2009, column: 13, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !1998, file: !1, line: 2009, column: 13)
!6341 = !DILocation(line: 2008, column: 13, scope: !1991)
!6342 = !DILocation(line: 2009, column: 13, scope: !6343)
!6343 = !DILexicalBlockFile(scope: !1998, file: !1, discriminator: 1)
!6344 = !DILocation(line: 2009, column: 13, scope: !1998)
!6345 = !DILocation(line: 2009, column: 13, scope: !6346)
!6346 = !DILexicalBlockFile(scope: !6340, file: !1, discriminator: 3)
!6347 = !DILocation(line: 2018, column: 5, scope: !6348)
!6348 = !DILexicalBlockFile(scope: !1992, file: !1, discriminator: 1)
!6349 = !DILocation(line: 2012, column: 9, scope: !6350)
!6350 = !DILexicalBlockFile(scope: !2002, file: !1, discriminator: 1)
!6351 = !DILocation(line: 2012, column: 9, scope: !2002)
!6352 = !DILocation(line: 2012, column: 9, scope: !6353)
!6353 = !DILexicalBlockFile(scope: !6354, file: !1, discriminator: 3)
!6354 = distinct !DILexicalBlock(scope: !2002, file: !1, line: 2012, column: 9)
!6355 = !DILocation(line: 2021, column: 14, scope: !1978)
!6356 = !DILocation(line: 2013, column: 20, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !1991, file: !1, line: 2013, column: 13)
!6358 = !DILocation(line: 2013, column: 13, scope: !1991)
!6359 = !DILocation(line: 2014, column: 29, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6357, file: !1, line: 2013, column: 25)
!6361 = !DILocation(line: 2014, column: 13, scope: !6360)
!6362 = !DILocation(line: 2021, column: 21, scope: !1978)
!6363 = !DILocation(line: 2021, column: 13, scope: !1978)
!6364 = !DILocation(line: 2021, column: 33, scope: !6365)
!6365 = !DILexicalBlockFile(scope: !1978, file: !1, discriminator: 2)
!6366 = !DILocation(line: 2022, column: 22, scope: !1978)
!6367 = !DILocation(line: 1998, column: 16, scope: !1978)
!6368 = !DILocation(line: 2022, column: 20, scope: !1978)
!6369 = !DILocation(line: 1998, column: 23, scope: !1978)
!6370 = !DILocation(line: 2024, column: 35, scope: !1978)
!6371 = !DILocation(line: 2024, column: 15, scope: !1978)
!6372 = !DILocation(line: 2025, column: 17, scope: !6373)
!6373 = distinct !DILexicalBlock(scope: !1978, file: !1, line: 2025, column: 9)
!6374 = !DILocation(line: 2025, column: 9, scope: !1978)
!6375 = !DILocation(line: 2026, column: 9, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6373, file: !1, line: 2025, column: 26)
!6377 = !DILocation(line: 2064, column: 5, scope: !2013)
!6378 = !DILocation(line: 2030, column: 13, scope: !1978)
!6379 = !DILocation(line: 2031, column: 15, scope: !6380)
!6380 = distinct !DILexicalBlock(scope: !1978, file: !1, line: 2031, column: 9)
!6381 = !DILocation(line: 2031, column: 9, scope: !1978)
!6382 = !DILocation(line: 2034, column: 17, scope: !2005)
!6383 = !DILocation(line: 2034, column: 5, scope: !2006)
!6384 = !DILocation(line: 2035, column: 26, scope: !2004)
!6385 = !DILocation(line: 2039, column: 9, scope: !2004)
!6386 = !DILocation(line: 2063, column: 9, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !1978, file: !1, line: 2062, column: 9)
!6388 = !DILocation(line: 2042, column: 15, scope: !2010)
!6389 = !DILocation(line: 2042, column: 5, scope: !2011)
!6390 = !DILocation(line: 2043, column: 26, scope: !2009)
!6391 = !DILocation(line: 2043, column: 19, scope: !2009)
!6392 = !DILocation(line: 2044, column: 9, scope: !2009)
!6393 = !DILocation(line: 2045, column: 9, scope: !2009)
!6394 = !DILocation(line: 2046, column: 9, scope: !2009)
!6395 = !DILocation(line: 2046, column: 20, scope: !2009)
!6396 = !DILocation(line: 2042, column: 25, scope: !2010)
!6397 = !DILocation(line: 2001, column: 16, scope: !1978)
!6398 = !DILocation(line: 2035, column: 19, scope: !2004)
!6399 = !DILocation(line: 2036, column: 26, scope: !2004)
!6400 = !DILocation(line: 2036, column: 19, scope: !2004)
!6401 = !DILocation(line: 2037, column: 18, scope: !6402)
!6402 = distinct !DILexicalBlock(scope: !2004, file: !1, line: 2037, column: 13)
!6403 = !DILocation(line: 2037, column: 13, scope: !2004)
!6404 = !DILocation(line: 2040, column: 9, scope: !2004)
!6405 = !DILocation(line: 2040, column: 20, scope: !2004)
!6406 = !DILocation(line: 2034, column: 27, scope: !2005)
!6407 = !DILocation(line: 2050, column: 33, scope: !1978)
!6408 = !DILocation(line: 2050, column: 27, scope: !1978)
!6409 = !DILocation(line: 2051, column: 12, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !1978, file: !1, line: 2051, column: 9)
!6411 = !DILocation(line: 2051, column: 9, scope: !1978)
!6412 = !DILocation(line: 2054, column: 9, scope: !1978)
!6413 = !DILocation(line: 2054, column: 15, scope: !1978)
!6414 = !DILocation(line: 2055, column: 9, scope: !1978)
!6415 = !DILocation(line: 2055, column: 17, scope: !1978)
!6416 = !DILocation(line: 2056, column: 9, scope: !1978)
!6417 = !DILocation(line: 2056, column: 16, scope: !1978)
!6418 = !DILocation(line: 2057, column: 9, scope: !1978)
!6419 = !DILocation(line: 2057, column: 17, scope: !1978)
!6420 = !DILocation(line: 2059, column: 5, scope: !1978)
!6421 = !DILocation(line: 2064, column: 5, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !2015, file: !1, line: 2064, column: 5)
!6423 = !DILocation(line: 2064, column: 5, scope: !2015)
!6424 = !DILocation(line: 2064, column: 5, scope: !6425)
!6425 = !DILexicalBlockFile(scope: !6422, file: !1, discriminator: 6)
!6426 = !DILocation(line: 2066, column: 1, scope: !1978)
!6427 = !DILocation(line: 2187, column: 31, scope: !1929)
!6428 = !DILocation(line: 2189, column: 13, scope: !1935)
!6429 = !DILocation(line: 2189, column: 9, scope: !1935)
!6430 = !DILocation(line: 2189, column: 9, scope: !1929)
!6431 = !DILocation(line: 2190, column: 39, scope: !6432)
!6432 = distinct !DILexicalBlock(scope: !1935, file: !1, line: 2189, column: 22)
!6433 = !DILocation(line: 2190, column: 16, scope: !6432)
!6434 = !DILocation(line: 2190, column: 9, scope: !6432)
!6435 = !DILocation(line: 2191, column: 20, scope: !1934)
!6436 = !DILocation(line: 2191, column: 27, scope: !1934)
!6437 = !DILocation(line: 2191, column: 16, scope: !1935)
!6438 = !DILocation(line: 2192, column: 36, scope: !6439)
!6439 = distinct !DILexicalBlock(scope: !1934, file: !1, line: 2191, column: 36)
!6440 = !DILocation(line: 2192, column: 53, scope: !6439)
!6441 = !DILocation(line: 2192, column: 16, scope: !6439)
!6442 = !DILocation(line: 2192, column: 9, scope: !6439)
!6443 = !DILocation(line: 2200, column: 13, scope: !1933)
!6444 = !DILocation(line: 2195, column: 20, scope: !1933)
!6445 = !DILocation(line: 2201, column: 19, scope: !1933)
!6446 = !DILocation(line: 2194, column: 19, scope: !1933)
!6447 = !DILocation(line: 2202, column: 21, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !1933, file: !1, line: 2202, column: 13)
!6449 = !DILocation(line: 2202, column: 13, scope: !1933)
!6450 = !DILocation(line: 2204, column: 20, scope: !1940)
!6451 = !DILocation(line: 2204, column: 9, scope: !1941)
!6452 = !DILocation(line: 2205, column: 54, scope: !1939)
!6453 = !DILocation(line: 2210, column: 13, scope: !1939)
!6454 = !DILocation(line: 2205, column: 50, scope: !1939)
!6455 = !DILocation(line: 2205, column: 31, scope: !1939)
!6456 = !DILocation(line: 2205, column: 23, scope: !1939)
!6457 = !DILocation(line: 2206, column: 18, scope: !1945)
!6458 = !DILocation(line: 2206, column: 17, scope: !1939)
!6459 = !DILocation(line: 2207, column: 17, scope: !6460)
!6460 = !DILexicalBlockFile(scope: !1943, file: !1, discriminator: 1)
!6461 = !DILocation(line: 2207, column: 17, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !1943, file: !1, line: 2207, column: 17)
!6463 = !DILocation(line: 2207, column: 17, scope: !1943)
!6464 = !DILocation(line: 2207, column: 17, scope: !6465)
!6465 = !DILexicalBlockFile(scope: !6462, file: !1, discriminator: 3)
!6466 = !DILocation(line: 2204, column: 25, scope: !1940)
!6467 = !DILocation(line: 2195, column: 23, scope: !1933)
!6468 = !DILocation(line: 2212, column: 37, scope: !1933)
!6469 = !DILocation(line: 2212, column: 54, scope: !1933)
!6470 = !DILocation(line: 2212, column: 16, scope: !1933)
!6471 = !DILocation(line: 2212, column: 9, scope: !1933)
!6472 = !DILocation(line: 2214, column: 1, scope: !1929)
!6473 = !DILocation(line: 2217, column: 33, scope: !1946)
!6474 = !DILocation(line: 2217, column: 47, scope: !1946)
!6475 = !DILocation(line: 2222, column: 9, scope: !1946)
!6476 = !DILocation(line: 2220, column: 16, scope: !1946)
!6477 = !DILocation(line: 2223, column: 10, scope: !6478)
!6478 = distinct !DILexicalBlock(scope: !1946, file: !1, line: 2223, column: 9)
!6479 = !DILocation(line: 2223, column: 31, scope: !6478)
!6480 = !DILocation(line: 2223, column: 34, scope: !6481)
!6481 = !DILexicalBlockFile(scope: !6478, file: !1, discriminator: 1)
!6482 = !DILocation(line: 2223, column: 58, scope: !6478)
!6483 = !DILocation(line: 2223, column: 9, scope: !1946)
!6484 = !DILocation(line: 2227, column: 16, scope: !1957)
!6485 = !DILocation(line: 2227, column: 5, scope: !1958)
!6486 = !DILocation(line: 2229, column: 33, scope: !1956)
!6487 = !DILocation(line: 2238, column: 13, scope: !1956)
!6488 = !DILocation(line: 2236, column: 27, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !6490, file: !1, line: 2236, column: 18)
!6490 = distinct !DILexicalBlock(scope: !1956, file: !1, line: 2234, column: 13)
!6491 = !DILocation(line: 2224, column: 25, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6478, file: !1, line: 2223, column: 64)
!6493 = !DILocation(line: 2224, column: 9, scope: !6492)
!6494 = !DILocation(line: 2225, column: 9, scope: !6492)
!6495 = !DILocation(line: 2229, column: 19, scope: !1956)
!6496 = !DILocation(line: 2230, column: 28, scope: !1956)
!6497 = !DILocation(line: 2230, column: 20, scope: !1956)
!6498 = !DILocation(line: 2231, column: 19, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !1956, file: !1, line: 2231, column: 13)
!6500 = !DILocation(line: 2231, column: 23, scope: !6499)
!6501 = !DILocation(line: 2231, column: 26, scope: !6502)
!6502 = !DILexicalBlockFile(scope: !6499, file: !1, discriminator: 1)
!6503 = !DILocation(line: 2231, column: 13, scope: !1956)
!6504 = !DILocation(line: 2236, column: 24, scope: !6489)
!6505 = !DILocation(line: 2236, column: 18, scope: !6490)
!6506 = !DILocation(line: 2238, column: 9, scope: !1956)
!6507 = !DILocation(line: 2238, column: 24, scope: !1956)
!6508 = !DILocation(line: 2227, column: 21, scope: !1957)
!6509 = !DILocation(line: 2220, column: 19, scope: !1946)
!6510 = !DILocation(line: 2241, column: 14, scope: !1946)
!6511 = !DILocation(line: 2219, column: 15, scope: !1946)
!6512 = !DILocation(line: 2242, column: 10, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !1946, file: !1, line: 2242, column: 9)
!6514 = !DILocation(line: 2242, column: 9, scope: !1946)
!6515 = !DILocation(line: 2244, column: 5, scope: !1963)
!6516 = !DILocation(line: 2245, column: 26, scope: !1961)
!6517 = !DILocation(line: 2246, column: 29, scope: !1961)
!6518 = !DILocation(line: 2248, column: 9, scope: !1961)
!6519 = !DILocation(line: 2246, column: 19, scope: !1961)
!6520 = !DILocation(line: 2247, column: 9, scope: !1961)
!6521 = !DILocation(line: 2244, column: 21, scope: !1962)
!6522 = !DILocation(line: 2250, column: 5, scope: !6523)
!6523 = !DILexicalBlockFile(scope: !1966, file: !1, discriminator: 1)
!6524 = !DILocation(line: 2250, column: 5, scope: !1970)
!6525 = !DILocation(line: 2250, column: 5, scope: !1966)
!6526 = !DILocation(line: 2250, column: 5, scope: !6527)
!6527 = !DILexicalBlockFile(scope: !1969, file: !1, discriminator: 2)
!6528 = !DILocation(line: 2250, column: 5, scope: !6529)
!6529 = !DILexicalBlockFile(scope: !1968, file: !1, discriminator: 4)
!6530 = !DILocation(line: 2250, column: 5, scope: !6531)
!6531 = distinct !DILexicalBlock(scope: !1968, file: !1, line: 2250, column: 5)
!6532 = !DILocation(line: 2250, column: 5, scope: !1968)
!6533 = !DILocation(line: 2250, column: 5, scope: !6534)
!6534 = !DILexicalBlockFile(scope: !6531, file: !1, discriminator: 6)
!6535 = !DILocation(line: 2251, column: 16, scope: !1946)
!6536 = !DILocation(line: 2252, column: 5, scope: !1946)
!6537 = !DILocation(line: 2253, column: 1, scope: !1946)
!6538 = !DILocation(line: 2080, column: 31, scope: !1971)
!6539 = !DILocation(line: 2080, column: 41, scope: !1971)
!6540 = !DILocation(line: 2082, column: 16, scope: !1971)
!6541 = !DILocation(line: 2085, column: 12, scope: !1971)
!6542 = !DILocation(line: 2085, column: 40, scope: !1971)
!6543 = !DILocation(line: 2085, column: 9, scope: !1971)
!6544 = !DILocation(line: 2086, column: 12, scope: !1971)
!6545 = !DILocation(line: 2086, column: 5, scope: !1971)
!6546 = !DILocation(line: 4132, column: 30, scope: !2017)
!6547 = !DILocation(line: 4134, column: 25, scope: !2017)
!6548 = !DILocation(line: 4134, column: 5, scope: !2017)
!6549 = !DILocation(line: 4135, column: 5, scope: !6550)
!6550 = !DILexicalBlockFile(scope: !2023, file: !1, discriminator: 1)
!6551 = !{!6552, !2672, i64 16}
!6552 = !{!"", !2668, i64 0, !2672, i64 16, !2669, i64 24}
!6553 = !DILocation(line: 4135, column: 5, scope: !2026)
!6554 = !DILocation(line: 4135, column: 5, scope: !2023)
!6555 = !DILocation(line: 4135, column: 5, scope: !6556)
!6556 = !DILexicalBlockFile(scope: !2025, file: !1, discriminator: 4)
!6557 = !DILocation(line: 4135, column: 5, scope: !6558)
!6558 = distinct !DILexicalBlock(scope: !2025, file: !1, line: 4135, column: 5)
!6559 = !DILocation(line: 4135, column: 5, scope: !2025)
!6560 = !DILocation(line: 4135, column: 5, scope: !6561)
!6561 = !DILexicalBlockFile(scope: !6558, file: !1, discriminator: 6)
!6562 = !DILocation(line: 4136, column: 5, scope: !2017)
!6563 = !DILocation(line: 4136, column: 18, scope: !2017)
!6564 = !DILocation(line: 4137, column: 1, scope: !2017)
!6565 = !DILocation(line: 4158, column: 27, scope: !2027)
!6566 = !DILocation(line: 4160, column: 13, scope: !6567)
!6567 = distinct !DILexicalBlock(scope: !2027, file: !1, line: 4160, column: 9)
!6568 = !{!6552, !2669, i64 24}
!6569 = !DILocation(line: 4160, column: 17, scope: !6567)
!6570 = !DILocation(line: 4161, column: 55, scope: !6567)
!6571 = !DILocation(line: 4160, column: 9, scope: !2027)
!6572 = !DILocation(line: 4161, column: 16, scope: !6567)
!6573 = !DILocation(line: 4161, column: 9, scope: !6567)
!6574 = !DILocation(line: 4163, column: 16, scope: !6567)
!6575 = !DILocation(line: 4163, column: 9, scope: !6567)
!6576 = !DILocation(line: 4164, column: 1, scope: !2027)
!6577 = !DILocation(line: 4140, column: 31, scope: !2032)
!6578 = !DILocation(line: 4140, column: 45, scope: !2032)
!6579 = !DILocation(line: 4140, column: 58, scope: !2032)
!6580 = !DILocation(line: 4142, column: 5, scope: !6581)
!6581 = !DILexicalBlockFile(scope: !2041, file: !1, discriminator: 1)
!6582 = !DILocation(line: 4142, column: 5, scope: !2042)
!6583 = !DILocation(line: 4142, column: 5, scope: !6584)
!6584 = !DILexicalBlockFile(scope: !2040, file: !1, discriminator: 2)
!6585 = !DILocation(line: 4142, column: 5, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !2040, file: !1, line: 4142, column: 5)
!6587 = !DILocation(line: 4143, column: 5, scope: !2032)
!6588 = !DILocation(line: 4144, column: 1, scope: !2032)
!6589 = !DILocation(line: 4147, column: 27, scope: !2043)
!6590 = !DILocation(line: 4149, column: 13, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !2043, file: !1, line: 4149, column: 9)
!6592 = !DILocation(line: 4149, column: 17, scope: !6591)
!6593 = !DILocation(line: 4149, column: 9, scope: !2043)
!6594 = !DILocation(line: 4151, column: 17, scope: !6595)
!6595 = distinct !DILexicalBlock(scope: !2043, file: !1, line: 4151, column: 9)
!6596 = !DILocation(line: 4151, column: 9, scope: !2043)
!6597 = !DILocation(line: 4152, column: 16, scope: !6595)
!6598 = !DILocation(line: 4152, column: 9, scope: !6595)
!6599 = !DILocation(line: 4153, column: 5, scope: !2043)
!6600 = !DILocation(line: 4154, column: 5, scope: !2043)
!6601 = !DILocation(line: 4155, column: 1, scope: !2043)
!6602 = !DILocation(line: 4108, column: 26, scope: !2052)
!6603 = !DILocation(line: 4108, column: 42, scope: !2052)
!6604 = !DILocation(line: 4108, column: 58, scope: !2052)
!6605 = !DILocation(line: 4111, column: 5, scope: !2052)
!6606 = !DILocation(line: 4112, column: 5, scope: !2052)
!6607 = !DILocation(line: 4112, column: 16, scope: !2052)
!6608 = !DILocation(line: 4111, column: 15, scope: !2052)
!6609 = !DILocation(line: 4115, column: 10, scope: !6610)
!6610 = distinct !DILexicalBlock(scope: !2052, file: !1, line: 4115, column: 9)
!6611 = !DILocation(line: 4115, column: 9, scope: !2052)
!6612 = !DILocation(line: 4119, column: 9, scope: !6613)
!6613 = distinct !DILexicalBlock(scope: !2052, file: !1, line: 4119, column: 9)
!6614 = !DILocation(line: 4119, column: 28, scope: !6613)
!6615 = !DILocation(line: 4119, column: 40, scope: !6613)
!6616 = !DILocation(line: 4119, column: 33, scope: !6613)
!6617 = !DILocation(line: 4120, column: 13, scope: !6613)
!6618 = !DILocation(line: 4120, column: 9, scope: !6613)
!6619 = !DILocation(line: 4122, column: 32, scope: !2052)
!6620 = !DILocation(line: 4122, column: 26, scope: !2052)
!6621 = !DILocation(line: 4123, column: 12, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !2052, file: !1, line: 4123, column: 9)
!6623 = !DILocation(line: 4123, column: 9, scope: !2052)
!6624 = !DILocation(line: 4125, column: 5, scope: !2052)
!6625 = !DILocation(line: 4126, column: 19, scope: !2052)
!6626 = !DILocation(line: 4126, column: 17, scope: !2052)
!6627 = !DILocation(line: 4127, column: 15, scope: !2052)
!6628 = !DILocation(line: 4127, column: 9, scope: !2052)
!6629 = !DILocation(line: 4127, column: 13, scope: !2052)
!6630 = !DILocation(line: 4128, column: 5, scope: !2052)
!6631 = !DILocation(line: 4129, column: 1, scope: !2052)
!6632 = !DILocation(line: 4167, column: 26, scope: !2046)
!6633 = !DILocation(line: 4169, column: 13, scope: !6634)
!6634 = distinct !DILexicalBlock(scope: !2046, file: !1, line: 4169, column: 9)
!6635 = !DILocation(line: 4169, column: 17, scope: !6634)
!6636 = !DILocation(line: 4169, column: 9, scope: !2046)
!6637 = !DILocation(line: 4170, column: 25, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6634, file: !1, line: 4169, column: 24)
!6639 = !DILocation(line: 4170, column: 9, scope: !6638)
!6640 = !DILocation(line: 4171, column: 9, scope: !6638)
!6641 = !DILocation(line: 4173, column: 12, scope: !2046)
!6642 = !DILocation(line: 4173, column: 5, scope: !2046)
!6643 = !DILocation(line: 4174, column: 1, scope: !2046)
!6644 = !DILocation(line: 4179, column: 29, scope: !2049)
!6645 = !DILocation(line: 4184, column: 13, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !2049, file: !1, line: 4184, column: 9)
!6647 = !DILocation(line: 4184, column: 17, scope: !6646)
!6648 = !DILocation(line: 4185, column: 39, scope: !6646)
!6649 = !DILocation(line: 4185, column: 56, scope: !6646)
!6650 = !DILocation(line: 4184, column: 9, scope: !2049)
!6651 = !DILocation(line: 4185, column: 16, scope: !6646)
!6652 = !DILocation(line: 4185, column: 9, scope: !6646)
!6653 = !DILocation(line: 4187, column: 16, scope: !6646)
!6654 = !DILocation(line: 4187, column: 9, scope: !6646)
!6655 = !DILocation(line: 4188, column: 1, scope: !2049)
!6656 = !DILocation(line: 54, column: 32, scope: !2060)
!6657 = !DILocation(line: 56, column: 25, scope: !2060)
!6658 = !DILocation(line: 56, column: 5, scope: !2060)
!6659 = !DILocation(line: 57, column: 5, scope: !6660)
!6660 = !DILexicalBlockFile(scope: !2066, file: !1, discriminator: 1)
!6661 = !{!6662, !2672, i64 16}
!6662 = !{!"", !2668, i64 0, !2672, i64 16, !2672, i64 24, !2672, i64 32, !2672, i64 40, !2672, i64 48}
!6663 = !DILocation(line: 57, column: 5, scope: !2069)
!6664 = !DILocation(line: 57, column: 5, scope: !2066)
!6665 = !DILocation(line: 57, column: 5, scope: !6666)
!6666 = !DILexicalBlockFile(scope: !2068, file: !1, discriminator: 4)
!6667 = !DILocation(line: 57, column: 5, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !2068, file: !1, line: 57, column: 5)
!6669 = !DILocation(line: 57, column: 5, scope: !2068)
!6670 = !DILocation(line: 57, column: 5, scope: !6671)
!6671 = !DILexicalBlockFile(scope: !6668, file: !1, discriminator: 6)
!6672 = !DILocation(line: 58, column: 5, scope: !6673)
!6673 = !DILexicalBlockFile(scope: !2071, file: !1, discriminator: 1)
!6674 = !{!6662, !2672, i64 24}
!6675 = !DILocation(line: 58, column: 5, scope: !2074)
!6676 = !DILocation(line: 58, column: 5, scope: !2071)
!6677 = !DILocation(line: 58, column: 5, scope: !6678)
!6678 = !DILexicalBlockFile(scope: !2073, file: !1, discriminator: 4)
!6679 = !DILocation(line: 58, column: 5, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !2073, file: !1, line: 58, column: 5)
!6681 = !DILocation(line: 58, column: 5, scope: !2073)
!6682 = !DILocation(line: 58, column: 5, scope: !6683)
!6683 = !DILexicalBlockFile(scope: !6680, file: !1, discriminator: 6)
!6684 = !DILocation(line: 59, column: 5, scope: !6685)
!6685 = !DILexicalBlockFile(scope: !2076, file: !1, discriminator: 1)
!6686 = !{!6662, !2672, i64 32}
!6687 = !DILocation(line: 59, column: 5, scope: !2079)
!6688 = !DILocation(line: 59, column: 5, scope: !2076)
!6689 = !DILocation(line: 59, column: 5, scope: !6690)
!6690 = !DILexicalBlockFile(scope: !2078, file: !1, discriminator: 4)
!6691 = !DILocation(line: 59, column: 5, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !2078, file: !1, line: 59, column: 5)
!6693 = !DILocation(line: 59, column: 5, scope: !2078)
!6694 = !DILocation(line: 59, column: 5, scope: !6695)
!6695 = !DILexicalBlockFile(scope: !6692, file: !1, discriminator: 6)
!6696 = !DILocation(line: 60, column: 5, scope: !6697)
!6697 = !DILexicalBlockFile(scope: !2081, file: !1, discriminator: 1)
!6698 = !{!6662, !2672, i64 40}
!6699 = !DILocation(line: 60, column: 5, scope: !2084)
!6700 = !DILocation(line: 60, column: 5, scope: !2081)
!6701 = !DILocation(line: 60, column: 5, scope: !6702)
!6702 = !DILexicalBlockFile(scope: !2083, file: !1, discriminator: 4)
!6703 = !DILocation(line: 60, column: 5, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !2083, file: !1, line: 60, column: 5)
!6705 = !DILocation(line: 60, column: 5, scope: !2083)
!6706 = !DILocation(line: 60, column: 5, scope: !6707)
!6707 = !DILexicalBlockFile(scope: !6704, file: !1, discriminator: 6)
!6708 = !DILocation(line: 61, column: 5, scope: !6709)
!6709 = !DILexicalBlockFile(scope: !2086, file: !1, discriminator: 1)
!6710 = !{!6662, !2672, i64 48}
!6711 = !DILocation(line: 61, column: 5, scope: !2089)
!6712 = !DILocation(line: 61, column: 5, scope: !2086)
!6713 = !DILocation(line: 61, column: 5, scope: !6714)
!6714 = !DILexicalBlockFile(scope: !2088, file: !1, discriminator: 4)
!6715 = !DILocation(line: 61, column: 5, scope: !6716)
!6716 = distinct !DILexicalBlock(scope: !2088, file: !1, line: 61, column: 5)
!6717 = !DILocation(line: 61, column: 5, scope: !2088)
!6718 = !DILocation(line: 61, column: 5, scope: !6719)
!6719 = !DILexicalBlockFile(scope: !6716, file: !1, discriminator: 6)
!6720 = !DILocation(line: 62, column: 5, scope: !2060)
!6721 = !DILocation(line: 62, column: 19, scope: !2060)
!6722 = !DILocation(line: 63, column: 1, scope: !2060)
!6723 = !DILocation(line: 66, column: 33, scope: !2090)
!6724 = !DILocation(line: 66, column: 48, scope: !2090)
!6725 = !DILocation(line: 66, column: 61, scope: !2090)
!6726 = !DILocation(line: 68, column: 5, scope: !6727)
!6727 = !DILexicalBlockFile(scope: !2099, file: !1, discriminator: 1)
!6728 = !DILocation(line: 68, column: 5, scope: !2100)
!6729 = !DILocation(line: 68, column: 5, scope: !6730)
!6730 = !DILexicalBlockFile(scope: !2098, file: !1, discriminator: 2)
!6731 = !DILocation(line: 68, column: 5, scope: !6732)
!6732 = distinct !DILexicalBlock(scope: !2098, file: !1, line: 68, column: 5)
!6733 = !DILocation(line: 69, column: 5, scope: !6734)
!6734 = !DILexicalBlockFile(scope: !2103, file: !1, discriminator: 1)
!6735 = !DILocation(line: 69, column: 5, scope: !2104)
!6736 = !DILocation(line: 69, column: 5, scope: !6737)
!6737 = !DILexicalBlockFile(scope: !2102, file: !1, discriminator: 2)
!6738 = !DILocation(line: 69, column: 5, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !2102, file: !1, line: 69, column: 5)
!6740 = !DILocation(line: 70, column: 5, scope: !6741)
!6741 = !DILexicalBlockFile(scope: !2107, file: !1, discriminator: 1)
!6742 = !DILocation(line: 70, column: 5, scope: !2108)
!6743 = !DILocation(line: 70, column: 5, scope: !6744)
!6744 = !DILexicalBlockFile(scope: !2106, file: !1, discriminator: 2)
!6745 = !DILocation(line: 70, column: 5, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !2106, file: !1, line: 70, column: 5)
!6747 = !DILocation(line: 71, column: 5, scope: !6748)
!6748 = !DILexicalBlockFile(scope: !2111, file: !1, discriminator: 1)
!6749 = !DILocation(line: 71, column: 5, scope: !2112)
!6750 = !DILocation(line: 71, column: 5, scope: !6751)
!6751 = !DILexicalBlockFile(scope: !2110, file: !1, discriminator: 2)
!6752 = !DILocation(line: 71, column: 5, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !2110, file: !1, line: 71, column: 5)
!6754 = !DILocation(line: 72, column: 5, scope: !6755)
!6755 = !DILexicalBlockFile(scope: !2115, file: !1, discriminator: 1)
!6756 = !DILocation(line: 72, column: 5, scope: !2116)
!6757 = !DILocation(line: 72, column: 5, scope: !6758)
!6758 = !DILexicalBlockFile(scope: !2114, file: !1, discriminator: 2)
!6759 = !DILocation(line: 72, column: 5, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !2114, file: !1, line: 72, column: 5)
!6761 = !DILocation(line: 73, column: 5, scope: !2090)
!6762 = !DILocation(line: 74, column: 1, scope: !2090)
!6763 = !DILocation(line: 77, column: 29, scope: !2117)
!6764 = !DILocation(line: 83, column: 18, scope: !2130)
!6765 = !DILocation(line: 98, column: 37, scope: !2131)
!6766 = !DILocation(line: 102, column: 18, scope: !2139)
!6767 = !DILocation(line: 118, column: 20, scope: !2131)
!6768 = !DILocation(line: 85, column: 23, scope: !2129)
!6769 = !DILocation(line: 82, column: 5, scope: !2117)
!6770 = !DILocation(line: 83, column: 26, scope: !2130)
!6771 = !DILocation(line: 83, column: 13, scope: !2131)
!6772 = !DILocation(line: 85, column: 30, scope: !2129)
!6773 = !DILocation(line: 85, column: 18, scope: !2130)
!6774 = !DILocation(line: 90, column: 20, scope: !2128)
!6775 = !DILocation(line: 88, column: 17, scope: !2128)
!6776 = !DILocation(line: 92, column: 17, scope: !2128)
!6777 = !DILocation(line: 123, column: 5, scope: !2117)
!6778 = !DILocation(line: 124, column: 16, scope: !2117)
!6779 = !DILocation(line: 98, column: 20, scope: !2131)
!6780 = !DILocation(line: 79, column: 15, scope: !2117)
!6781 = !DILocation(line: 99, column: 22, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !2131, file: !1, line: 99, column: 13)
!6783 = !DILocation(line: 99, column: 13, scope: !2131)
!6784 = !DILocation(line: 102, column: 26, scope: !2139)
!6785 = !DILocation(line: 102, column: 13, scope: !2131)
!6786 = !DILocation(line: 79, column: 26, scope: !2117)
!6787 = !DILocation(line: 104, column: 13, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !2139, file: !1, line: 102, column: 38)
!6789 = !DILocation(line: 105, column: 9, scope: !6788)
!6790 = !DILocation(line: 106, column: 22, scope: !2138)
!6791 = !DILocation(line: 108, column: 24, scope: !2137)
!6792 = !DILocation(line: 108, column: 17, scope: !2138)
!6793 = !DILocation(line: 109, column: 17, scope: !6794)
!6794 = !DILexicalBlockFile(scope: !2135, file: !1, discriminator: 1)
!6795 = !DILocation(line: 109, column: 17, scope: !6796)
!6796 = distinct !DILexicalBlock(scope: !2135, file: !1, line: 109, column: 17)
!6797 = !DILocation(line: 109, column: 17, scope: !2135)
!6798 = !DILocation(line: 109, column: 17, scope: !6799)
!6799 = !DILexicalBlockFile(scope: !6796, file: !1, discriminator: 3)
!6800 = !DILocation(line: 114, column: 20, scope: !2131)
!6801 = !DILocation(line: 79, column: 49, scope: !2117)
!6802 = !DILocation(line: 115, column: 22, scope: !2131)
!6803 = !DILocation(line: 116, column: 9, scope: !6804)
!6804 = !DILexicalBlockFile(scope: !2141, file: !1, discriminator: 1)
!6805 = !DILocation(line: 116, column: 9, scope: !2144)
!6806 = !DILocation(line: 116, column: 9, scope: !2141)
!6807 = !DILocation(line: 116, column: 9, scope: !6808)
!6808 = !DILexicalBlockFile(scope: !2143, file: !1, discriminator: 4)
!6809 = !DILocation(line: 116, column: 9, scope: !6810)
!6810 = distinct !DILexicalBlock(scope: !2143, file: !1, line: 116, column: 9)
!6811 = !DILocation(line: 116, column: 9, scope: !2143)
!6812 = !DILocation(line: 116, column: 9, scope: !6813)
!6813 = !DILexicalBlockFile(scope: !6810, file: !1, discriminator: 6)
!6814 = !DILocation(line: 119, column: 24, scope: !2131)
!6815 = !DILocation(line: 120, column: 9, scope: !6816)
!6816 = !DILexicalBlockFile(scope: !2146, file: !1, discriminator: 1)
!6817 = !DILocation(line: 120, column: 9, scope: !2149)
!6818 = !DILocation(line: 120, column: 9, scope: !2146)
!6819 = !DILocation(line: 120, column: 9, scope: !6820)
!6820 = !DILexicalBlockFile(scope: !2148, file: !1, discriminator: 4)
!6821 = !DILocation(line: 120, column: 9, scope: !6822)
!6822 = distinct !DILexicalBlock(scope: !2148, file: !1, line: 120, column: 9)
!6823 = !DILocation(line: 120, column: 9, scope: !2148)
!6824 = !DILocation(line: 120, column: 9, scope: !6825)
!6825 = !DILexicalBlockFile(scope: !6822, file: !1, discriminator: 6)
!6826 = !DILocation(line: 125, column: 24, scope: !2117)
!6827 = !DILocation(line: 125, column: 17, scope: !2117)
!6828 = !DILocation(line: 126, column: 5, scope: !6829)
!6829 = !DILexicalBlockFile(scope: !2151, file: !1, discriminator: 1)
!6830 = !DILocation(line: 126, column: 5, scope: !2154)
!6831 = !DILocation(line: 126, column: 5, scope: !2151)
!6832 = !DILocation(line: 126, column: 5, scope: !6833)
!6833 = !DILexicalBlockFile(scope: !2153, file: !1, discriminator: 4)
!6834 = !DILocation(line: 126, column: 5, scope: !6835)
!6835 = distinct !DILexicalBlock(scope: !2153, file: !1, line: 126, column: 5)
!6836 = !DILocation(line: 126, column: 5, scope: !2153)
!6837 = !DILocation(line: 126, column: 5, scope: !6838)
!6838 = !DILexicalBlockFile(scope: !6835, file: !1, discriminator: 6)
!6839 = !DILocation(line: 128, column: 41, scope: !2117)
!6840 = !DILocation(line: 255, column: 32, scope: !2157, inlinedAt: !6841)
!6841 = distinct !DILocation(line: 128, column: 15, scope: !2117)
!6842 = !DILocation(line: 255, column: 50, scope: !2157, inlinedAt: !6841)
!6843 = !DILocation(line: 259, column: 11, scope: !2157, inlinedAt: !6841)
!6844 = !DILocation(line: 260, column: 13, scope: !6845, inlinedAt: !6841)
!6845 = distinct !DILexicalBlock(scope: !2157, file: !1, line: 260, column: 9)
!6846 = !DILocation(line: 260, column: 9, scope: !2157, inlinedAt: !6841)
!6847 = !DILocation(line: 262, column: 19, scope: !2157, inlinedAt: !6841)
!6848 = !DILocation(line: 262, column: 10, scope: !2157, inlinedAt: !6841)
!6849 = !DILocation(line: 262, column: 17, scope: !2157, inlinedAt: !6841)
!6850 = !DILocation(line: 263, column: 5, scope: !2157, inlinedAt: !6841)
!6851 = !DILocation(line: 264, column: 10, scope: !2157, inlinedAt: !6841)
!6852 = !DILocation(line: 264, column: 17, scope: !2157, inlinedAt: !6841)
!6853 = !DILocation(line: 265, column: 5, scope: !2157, inlinedAt: !6841)
!6854 = !DILocation(line: 267, column: 23, scope: !2157, inlinedAt: !6841)
!6855 = !DILocation(line: 267, column: 5, scope: !2157, inlinedAt: !6841)
!6856 = !DILocation(line: 79, column: 39, scope: !2117)
!6857 = !DILocation(line: 132, column: 30, scope: !2117)
!6858 = !DILocation(line: 132, column: 9, scope: !2117)
!6859 = !DILocation(line: 79, column: 35, scope: !2117)
!6860 = !DILocation(line: 133, column: 5, scope: !6861)
!6861 = !DILexicalBlockFile(scope: !2156, file: !1, discriminator: 1)
!6862 = !DILocation(line: 133, column: 5, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !2156, file: !1, line: 133, column: 5)
!6864 = !DILocation(line: 133, column: 5, scope: !2156)
!6865 = !DILocation(line: 133, column: 5, scope: !6866)
!6866 = !DILexicalBlockFile(scope: !6863, file: !1, discriminator: 3)
!6867 = !DILocation(line: 135, column: 1, scope: !2117)
!6868 = !DILocation(line: 27, column: 27, scope: !2193)
!6869 = !DILocation(line: 27, column: 43, scope: !2193)
!6870 = !DILocation(line: 27, column: 59, scope: !2193)
!6871 = !DILocation(line: 31, column: 5, scope: !2193)
!6872 = !DILocation(line: 31, column: 20, scope: !2193)
!6873 = !DILocation(line: 31, column: 15, scope: !2193)
!6874 = !DILocation(line: 33, column: 10, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !2193, file: !1, line: 33, column: 9)
!6876 = !DILocation(line: 33, column: 9, scope: !2193)
!6877 = !DILocation(line: 37, column: 34, scope: !2193)
!6878 = !DILocation(line: 37, column: 28, scope: !2193)
!6879 = !DILocation(line: 38, column: 13, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !2193, file: !1, line: 38, column: 9)
!6881 = !DILocation(line: 38, column: 9, scope: !2193)
!6882 = !DILocation(line: 40, column: 10, scope: !2193)
!6883 = !DILocation(line: 43, column: 20, scope: !2193)
!6884 = !DILocation(line: 41, column: 18, scope: !2193)
!6885 = !DILocation(line: 43, column: 10, scope: !2193)
!6886 = !DILocation(line: 43, column: 18, scope: !2193)
!6887 = !DILocation(line: 44, column: 5, scope: !2193)
!6888 = !DILocation(line: 45, column: 32, scope: !2193)
!6889 = !DILocation(line: 45, column: 15, scope: !2193)
!6890 = !DILocation(line: 45, column: 10, scope: !2193)
!6891 = !DILocation(line: 45, column: 13, scope: !2193)
!6892 = !DILocation(line: 46, column: 17, scope: !2204)
!6893 = !DILocation(line: 46, column: 9, scope: !2193)
!6894 = !DILocation(line: 47, column: 9, scope: !6895)
!6895 = !DILexicalBlockFile(scope: !2202, file: !1, discriminator: 1)
!6896 = !DILocation(line: 47, column: 9, scope: !6897)
!6897 = distinct !DILexicalBlock(scope: !2202, file: !1, line: 47, column: 9)
!6898 = !DILocation(line: 47, column: 9, scope: !2202)
!6899 = !DILocation(line: 47, column: 9, scope: !6900)
!6900 = !DILexicalBlockFile(scope: !6897, file: !1, discriminator: 3)
!6901 = !DILocation(line: 51, column: 1, scope: !2193)
!6902 = !DILocation(line: 138, column: 31, scope: !2164)
!6903 = !DILocation(line: 144, column: 13, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !2164, file: !1, line: 144, column: 9)
!6905 = !DILocation(line: 144, column: 9, scope: !6904)
!6906 = !DILocation(line: 144, column: 20, scope: !6904)
!6907 = !DILocation(line: 144, column: 27, scope: !6904)
!6908 = !DILocation(line: 144, column: 23, scope: !6904)
!6909 = !DILocation(line: 144, column: 35, scope: !6904)
!6910 = !DILocation(line: 144, column: 42, scope: !6904)
!6911 = !DILocation(line: 144, column: 38, scope: !6904)
!6912 = !DILocation(line: 144, column: 9, scope: !2164)
!6913 = !DILocation(line: 145, column: 45, scope: !6904)
!6914 = !DILocation(line: 146, column: 17, scope: !6904)
!6915 = !DILocation(line: 146, column: 25, scope: !6904)
!6916 = !DILocation(line: 145, column: 17, scope: !6904)
!6917 = !DILocation(line: 143, column: 15, scope: !2164)
!6918 = !DILocation(line: 145, column: 9, scope: !6904)
!6919 = !DILocation(line: 148, column: 40, scope: !6904)
!6920 = !DILocation(line: 149, column: 17, scope: !6904)
!6921 = !DILocation(line: 149, column: 25, scope: !6904)
!6922 = !DILocation(line: 148, column: 17, scope: !6904)
!6923 = !DILocation(line: 151, column: 5, scope: !2164)
!6924 = !DILocation(line: 157, column: 33, scope: !2168)
!6925 = !DILocation(line: 157, column: 47, scope: !2168)
!6926 = !DILocation(line: 159, column: 5, scope: !2168)
!6927 = !DILocation(line: 159, column: 15, scope: !2168)
!6928 = !DILocation(line: 159, column: 25, scope: !2168)
!6929 = !DILocation(line: 159, column: 37, scope: !2168)
!6930 = !DILocation(line: 160, column: 10, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !2168, file: !1, line: 160, column: 9)
!6932 = !DILocation(line: 160, column: 9, scope: !2168)
!6933 = !DILocation(line: 162, column: 5, scope: !6934)
!6934 = !DILexicalBlockFile(scope: !2176, file: !1, discriminator: 1)
!6935 = !DILocation(line: 162, column: 5, scope: !2180)
!6936 = !DILocation(line: 162, column: 5, scope: !2176)
!6937 = !DILocation(line: 162, column: 5, scope: !6938)
!6938 = !DILexicalBlockFile(scope: !2179, file: !1, discriminator: 2)
!6939 = !DILocation(line: 162, column: 5, scope: !6940)
!6940 = !DILexicalBlockFile(scope: !2178, file: !1, discriminator: 4)
!6941 = !DILocation(line: 162, column: 5, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !2178, file: !1, line: 162, column: 5)
!6943 = !DILocation(line: 162, column: 5, scope: !2178)
!6944 = !DILocation(line: 162, column: 5, scope: !6945)
!6945 = !DILexicalBlockFile(scope: !6942, file: !1, discriminator: 6)
!6946 = !DILocation(line: 163, column: 19, scope: !2168)
!6947 = !DILocation(line: 163, column: 17, scope: !2168)
!6948 = !DILocation(line: 164, column: 5, scope: !2168)
!6949 = !DILocation(line: 165, column: 5, scope: !6950)
!6950 = !DILexicalBlockFile(scope: !2182, file: !1, discriminator: 1)
!6951 = !DILocation(line: 165, column: 5, scope: !2186)
!6952 = !DILocation(line: 165, column: 5, scope: !2182)
!6953 = !DILocation(line: 165, column: 5, scope: !6954)
!6954 = !DILexicalBlockFile(scope: !2185, file: !1, discriminator: 2)
!6955 = !DILocation(line: 165, column: 5, scope: !6956)
!6956 = !DILexicalBlockFile(scope: !2184, file: !1, discriminator: 4)
!6957 = !DILocation(line: 165, column: 5, scope: !6958)
!6958 = distinct !DILexicalBlock(scope: !2184, file: !1, line: 165, column: 5)
!6959 = !DILocation(line: 165, column: 5, scope: !2184)
!6960 = !DILocation(line: 165, column: 5, scope: !6961)
!6961 = !DILexicalBlockFile(scope: !6958, file: !1, discriminator: 6)
!6962 = !DILocation(line: 166, column: 21, scope: !2168)
!6963 = !DILocation(line: 166, column: 19, scope: !2168)
!6964 = !DILocation(line: 167, column: 5, scope: !2168)
!6965 = !DILocation(line: 168, column: 5, scope: !6966)
!6966 = !DILexicalBlockFile(scope: !2188, file: !1, discriminator: 1)
!6967 = !DILocation(line: 168, column: 5, scope: !2192)
!6968 = !DILocation(line: 168, column: 5, scope: !2188)
!6969 = !DILocation(line: 168, column: 5, scope: !6970)
!6970 = !DILexicalBlockFile(scope: !2191, file: !1, discriminator: 2)
!6971 = !DILocation(line: 168, column: 5, scope: !6972)
!6972 = !DILexicalBlockFile(scope: !2190, file: !1, discriminator: 4)
!6973 = !DILocation(line: 168, column: 5, scope: !6974)
!6974 = distinct !DILexicalBlock(scope: !2190, file: !1, line: 168, column: 5)
!6975 = !DILocation(line: 168, column: 5, scope: !2190)
!6976 = !DILocation(line: 168, column: 5, scope: !6977)
!6977 = !DILexicalBlockFile(scope: !6974, file: !1, discriminator: 6)
!6978 = !DILocation(line: 169, column: 18, scope: !2168)
!6979 = !DILocation(line: 169, column: 16, scope: !2168)
!6980 = !DILocation(line: 170, column: 5, scope: !2168)
!6981 = !DILocation(line: 171, column: 5, scope: !2168)
!6982 = !DILocation(line: 172, column: 1, scope: !2168)
!6983 = !DILocation(line: 272, column: 34, scope: !2205)
!6984 = !DILocation(line: 274, column: 25, scope: !2205)
!6985 = !DILocation(line: 274, column: 5, scope: !2205)
!6986 = !DILocation(line: 275, column: 5, scope: !6987)
!6987 = !DILexicalBlockFile(scope: !2211, file: !1, discriminator: 1)
!6988 = !DILocation(line: 275, column: 5, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !2211, file: !1, line: 275, column: 5)
!6990 = !DILocation(line: 275, column: 5, scope: !2211)
!6991 = !DILocation(line: 275, column: 5, scope: !6992)
!6992 = !DILexicalBlockFile(scope: !6989, file: !1, discriminator: 3)
!6993 = !DILocation(line: 276, column: 5, scope: !6994)
!6994 = !DILexicalBlockFile(scope: !2213, file: !1, discriminator: 1)
!6995 = !DILocation(line: 276, column: 5, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !2213, file: !1, line: 276, column: 5)
!6997 = !DILocation(line: 276, column: 5, scope: !2213)
!6998 = !DILocation(line: 276, column: 5, scope: !6999)
!6999 = !DILexicalBlockFile(scope: !6996, file: !1, discriminator: 3)
!7000 = !DILocation(line: 277, column: 5, scope: !2205)
!7001 = !DILocation(line: 278, column: 1, scope: !2205)
!7002 = !DILocation(line: 281, column: 35, scope: !2214)
!7003 = !DILocation(line: 281, column: 50, scope: !2214)
!7004 = !DILocation(line: 281, column: 63, scope: !2214)
!7005 = !DILocation(line: 283, column: 5, scope: !7006)
!7006 = !DILexicalBlockFile(scope: !2223, file: !1, discriminator: 1)
!7007 = !DILocation(line: 283, column: 5, scope: !2224)
!7008 = !DILocation(line: 283, column: 5, scope: !7009)
!7009 = !DILexicalBlockFile(scope: !2222, file: !1, discriminator: 2)
!7010 = !DILocation(line: 283, column: 5, scope: !7011)
!7011 = distinct !DILexicalBlock(scope: !2222, file: !1, line: 283, column: 5)
!7012 = !DILocation(line: 284, column: 5, scope: !7013)
!7013 = !DILexicalBlockFile(scope: !2227, file: !1, discriminator: 1)
!7014 = !DILocation(line: 284, column: 5, scope: !2228)
!7015 = !DILocation(line: 284, column: 5, scope: !7016)
!7016 = !DILexicalBlockFile(scope: !2226, file: !1, discriminator: 2)
!7017 = !DILocation(line: 284, column: 5, scope: !7018)
!7018 = distinct !DILexicalBlock(scope: !2226, file: !1, line: 284, column: 5)
!7019 = !DILocation(line: 285, column: 5, scope: !2214)
!7020 = !DILocation(line: 286, column: 1, scope: !2214)
!7021 = !DILocation(line: 289, column: 31, scope: !2229)
!7022 = !DILocation(line: 291, column: 48, scope: !2229)
!7023 = !DILocation(line: 291, column: 20, scope: !2229)
!7024 = !DILocation(line: 295, column: 14, scope: !2246)
!7025 = !DILocation(line: 295, column: 24, scope: !2246)
!7026 = !DILocation(line: 295, column: 9, scope: !2229)
!7027 = !DILocation(line: 318, column: 55, scope: !2229)
!7028 = !DILocation(line: 296, column: 37, scope: !2245)
!7029 = !DILocation(line: 296, column: 20, scope: !2245)
!7030 = !DILocation(line: 292, column: 15, scope: !2229)
!7031 = !DILocation(line: 297, column: 22, scope: !7032)
!7032 = distinct !DILexicalBlock(scope: !2245, file: !1, line: 297, column: 13)
!7033 = !DILocation(line: 297, column: 13, scope: !2245)
!7034 = !DILocation(line: 300, column: 18, scope: !2244)
!7035 = !DILocation(line: 300, column: 26, scope: !2244)
!7036 = !DILocation(line: 300, column: 13, scope: !2245)
!7037 = !DILocation(line: 292, column: 26, scope: !2229)
!7038 = !DILocation(line: 302, column: 13, scope: !7039)
!7039 = distinct !DILexicalBlock(scope: !2244, file: !1, line: 300, column: 38)
!7040 = !DILocation(line: 303, column: 9, scope: !7039)
!7041 = !DILocation(line: 304, column: 22, scope: !2243)
!7042 = !DILocation(line: 306, column: 24, scope: !2242)
!7043 = !DILocation(line: 306, column: 17, scope: !2243)
!7044 = !DILocation(line: 307, column: 17, scope: !7045)
!7045 = !DILexicalBlockFile(scope: !2240, file: !1, discriminator: 1)
!7046 = !DILocation(line: 307, column: 17, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !2240, file: !1, line: 307, column: 17)
!7048 = !DILocation(line: 307, column: 17, scope: !2240)
!7049 = !DILocation(line: 307, column: 17, scope: !7050)
!7050 = !DILexicalBlockFile(scope: !7047, file: !1, discriminator: 3)
!7051 = !DILocation(line: 313, column: 14, scope: !2245)
!7052 = !DILocation(line: 313, column: 22, scope: !2245)
!7053 = !DILocation(line: 314, column: 24, scope: !2245)
!7054 = !DILocation(line: 315, column: 5, scope: !2245)
!7055 = !DILocation(line: 318, column: 42, scope: !2229)
!7056 = !DILocation(line: 318, column: 12, scope: !2229)
!7057 = !DILocation(line: 293, column: 9, scope: !2229)
!7058 = !DILocation(line: 319, column: 14, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !2229, file: !1, line: 319, column: 9)
!7060 = !DILocation(line: 319, column: 9, scope: !2229)
!7061 = !DILocation(line: 323, column: 14, scope: !2229)
!7062 = !DILocation(line: 292, column: 35, scope: !2229)
!7063 = !DILocation(line: 324, column: 20, scope: !2229)
!7064 = !DILocation(line: 325, column: 5, scope: !7065)
!7065 = !DILexicalBlockFile(scope: !2248, file: !1, discriminator: 1)
!7066 = !DILocation(line: 325, column: 5, scope: !2252)
!7067 = !DILocation(line: 325, column: 5, scope: !2248)
!7068 = !DILocation(line: 325, column: 5, scope: !7069)
!7069 = !DILexicalBlockFile(scope: !2251, file: !1, discriminator: 2)
!7070 = !DILocation(line: 325, column: 5, scope: !7071)
!7071 = !DILexicalBlockFile(scope: !2250, file: !1, discriminator: 4)
!7072 = !DILocation(line: 325, column: 5, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !2250, file: !1, line: 325, column: 5)
!7074 = !DILocation(line: 325, column: 5, scope: !2250)
!7075 = !DILocation(line: 325, column: 5, scope: !7076)
!7076 = !DILexicalBlockFile(scope: !7073, file: !1, discriminator: 6)
!7077 = !DILocation(line: 328, column: 1, scope: !2229)
!7078 = !DILocation(line: 244, column: 28, scope: !2256)
!7079 = !DILocation(line: 244, column: 44, scope: !2256)
!7080 = !DILocation(line: 244, column: 60, scope: !2256)
!7081 = !DILocation(line: 246, column: 5, scope: !2256)
!7082 = !DILocation(line: 246, column: 15, scope: !2256)
!7083 = !DILocation(line: 246, column: 24, scope: !2256)
!7084 = !DILocation(line: 248, column: 10, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !2256, file: !1, line: 248, column: 9)
!7086 = !DILocation(line: 248, column: 9, scope: !2256)
!7087 = !DILocation(line: 251, column: 45, scope: !2256)
!7088 = !DILocation(line: 251, column: 53, scope: !2256)
!7089 = !DILocation(line: 255, column: 32, scope: !2157, inlinedAt: !7090)
!7090 = distinct !DILocation(line: 251, column: 12, scope: !2256)
!7091 = !DILocation(line: 255, column: 50, scope: !2157, inlinedAt: !7090)
!7092 = !DILocation(line: 259, column: 11, scope: !2157, inlinedAt: !7090)
!7093 = !DILocation(line: 260, column: 13, scope: !6845, inlinedAt: !7090)
!7094 = !DILocation(line: 260, column: 9, scope: !2157, inlinedAt: !7090)
!7095 = !DILocation(line: 262, column: 19, scope: !2157, inlinedAt: !7090)
!7096 = !DILocation(line: 262, column: 10, scope: !2157, inlinedAt: !7090)
!7097 = !DILocation(line: 262, column: 17, scope: !2157, inlinedAt: !7090)
!7098 = !DILocation(line: 263, column: 5, scope: !2157, inlinedAt: !7090)
!7099 = !DILocation(line: 264, column: 10, scope: !2157, inlinedAt: !7090)
!7100 = !DILocation(line: 264, column: 17, scope: !2157, inlinedAt: !7090)
!7101 = !DILocation(line: 265, column: 5, scope: !2157, inlinedAt: !7090)
!7102 = !DILocation(line: 267, column: 23, scope: !2157, inlinedAt: !7090)
!7103 = !DILocation(line: 267, column: 5, scope: !2157, inlinedAt: !7090)
!7104 = !DILocation(line: 268, column: 5, scope: !2157, inlinedAt: !7090)
!7105 = !DILocation(line: 252, column: 1, scope: !2256)
!7106 = !DILocation(line: 331, column: 33, scope: !2253)
!7107 = !DILocation(line: 333, column: 35, scope: !2253)
!7108 = !DILocation(line: 334, column: 17, scope: !2253)
!7109 = !DILocation(line: 334, column: 29, scope: !2253)
!7110 = !DILocation(line: 333, column: 12, scope: !2253)
!7111 = !DILocation(line: 333, column: 5, scope: !2253)
!7112 = !DILocation(line: 727, column: 24, scope: !2263)
!7113 = !DILocation(line: 729, column: 25, scope: !2263)
!7114 = !DILocation(line: 729, column: 5, scope: !2263)
!7115 = !DILocation(line: 718, column: 22, scope: !2279, inlinedAt: !7116)
!7116 = distinct !DILocation(line: 730, column: 5, scope: !2263)
!7117 = !DILocation(line: 720, column: 13, scope: !7118, inlinedAt: !7116)
!7118 = distinct !DILexicalBlock(scope: !2279, file: !1, line: 720, column: 9)
!7119 = !{!7120, !2672, i64 32}
!7120 = !{!"", !2668, i64 0, !2672, i64 16, !2691, i64 24, !2672, i64 32}
!7121 = !DILocation(line: 720, column: 25, scope: !7118, inlinedAt: !7116)
!7122 = !DILocation(line: 720, column: 9, scope: !2279, inlinedAt: !7116)
!7123 = !DILocation(line: 721, column: 32, scope: !7118, inlinedAt: !7116)
!7124 = !DILocation(line: 721, column: 9, scope: !7118, inlinedAt: !7116)
!7125 = !DILocation(line: 722, column: 5, scope: !7126, inlinedAt: !7116)
!7126 = !DILexicalBlockFile(scope: !2285, file: !1, discriminator: 1)
!7127 = !{!7120, !2672, i64 16}
!7128 = !DILocation(line: 722, column: 5, scope: !2289, inlinedAt: !7116)
!7129 = !DILocation(line: 722, column: 5, scope: !2285, inlinedAt: !7116)
!7130 = !DILocation(line: 722, column: 5, scope: !7131, inlinedAt: !7116)
!7131 = !DILexicalBlockFile(scope: !2288, file: !1, discriminator: 2)
!7132 = !DILocation(line: 722, column: 5, scope: !7133, inlinedAt: !7116)
!7133 = !DILexicalBlockFile(scope: !2287, file: !1, discriminator: 4)
!7134 = !DILocation(line: 722, column: 5, scope: !7135, inlinedAt: !7116)
!7135 = distinct !DILexicalBlock(scope: !2287, file: !1, line: 722, column: 5)
!7136 = !DILocation(line: 722, column: 5, scope: !2287, inlinedAt: !7116)
!7137 = !DILocation(line: 722, column: 5, scope: !7138, inlinedAt: !7116)
!7138 = !DILexicalBlockFile(scope: !7135, file: !1, discriminator: 6)
!7139 = !DILocation(line: 730, column: 5, scope: !2263)
!7140 = !DILocation(line: 731, column: 5, scope: !2263)
!7141 = !DILocation(line: 732, column: 1, scope: !2263)
!7142 = !DILocation(line: 651, column: 25, scope: !2268)
!7143 = !DILocation(line: 651, column: 39, scope: !2268)
!7144 = !DILocation(line: 651, column: 52, scope: !2268)
!7145 = !DILocation(line: 653, column: 5, scope: !7146)
!7146 = !DILexicalBlockFile(scope: !2277, file: !1, discriminator: 1)
!7147 = !DILocation(line: 653, column: 5, scope: !2278)
!7148 = !DILocation(line: 653, column: 5, scope: !7149)
!7149 = !DILexicalBlockFile(scope: !2276, file: !1, discriminator: 2)
!7150 = !DILocation(line: 653, column: 5, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !2276, file: !1, line: 653, column: 5)
!7152 = !DILocation(line: 654, column: 5, scope: !2268)
!7153 = !DILocation(line: 655, column: 1, scope: !2268)
!7154 = !DILocation(line: 718, column: 22, scope: !2279)
!7155 = !DILocation(line: 720, column: 13, scope: !7118)
!7156 = !DILocation(line: 720, column: 25, scope: !7118)
!7157 = !DILocation(line: 720, column: 9, scope: !2279)
!7158 = !DILocation(line: 721, column: 32, scope: !7118)
!7159 = !DILocation(line: 721, column: 9, scope: !7118)
!7160 = !DILocation(line: 722, column: 5, scope: !7126)
!7161 = !DILocation(line: 722, column: 5, scope: !2289)
!7162 = !DILocation(line: 722, column: 5, scope: !2285)
!7163 = !DILocation(line: 722, column: 5, scope: !7131)
!7164 = !DILocation(line: 722, column: 5, scope: !7133)
!7165 = !DILocation(line: 722, column: 5, scope: !7135)
!7166 = !DILocation(line: 722, column: 5, scope: !2287)
!7167 = !DILocation(line: 722, column: 5, scope: !7138)
!7168 = !DILocation(line: 723, column: 5, scope: !2279)
!7169 = !DILocation(line: 631, column: 21, scope: !2290)
!7170 = !DILocation(line: 635, column: 13, scope: !2300)
!7171 = !{!7120, !2691, i64 24}
!7172 = !DILocation(line: 635, column: 19, scope: !2300)
!7173 = !DILocation(line: 636, column: 43, scope: !2299)
!7174 = !DILocation(line: 635, column: 9, scope: !2290)
!7175 = !DILocation(line: 436, column: 39, scope: !2301, inlinedAt: !7176)
!7176 = distinct !DILocation(line: 636, column: 16, scope: !2299)
!7177 = !DILocation(line: 438, column: 14, scope: !7178, inlinedAt: !7176)
!7178 = distinct !DILexicalBlock(scope: !2301, file: !1, line: 438, column: 9)
!7179 = !{!7180, !2672, i64 32}
!7180 = !{!"", !2668, i64 0, !2672, i64 16, !2691, i64 24, !2672, i64 32, !2670, i64 40}
!7181 = !DILocation(line: 438, column: 23, scope: !7178, inlinedAt: !7176)
!7182 = !DILocation(line: 438, column: 9, scope: !2301, inlinedAt: !7176)
!7183 = !DILocation(line: 639, column: 9, scope: !7184)
!7184 = !DILexicalBlockFile(scope: !2298, file: !1, discriminator: 1)
!7185 = !DILocation(line: 439, column: 56, scope: !7178, inlinedAt: !7176)
!7186 = !{!7180, !2672, i64 16}
!7187 = !DILocation(line: 419, column: 37, scope: !2308, inlinedAt: !7188)
!7188 = distinct !DILocation(line: 439, column: 25, scope: !7178, inlinedAt: !7176)
!7189 = !DILocation(line: 423, column: 11, scope: !2308, inlinedAt: !7188)
!7190 = !DILocation(line: 424, column: 13, scope: !7191, inlinedAt: !7188)
!7191 = distinct !DILexicalBlock(scope: !2308, file: !1, line: 424, column: 9)
!7192 = !DILocation(line: 424, column: 9, scope: !2308, inlinedAt: !7188)
!7193 = !DILocation(line: 439, column: 23, scope: !7178, inlinedAt: !7176)
!7194 = !DILocation(line: 440, column: 5, scope: !7195, inlinedAt: !7176)
!7195 = !DILexicalBlockFile(scope: !2307, file: !1, discriminator: 1)
!7196 = !DILocation(line: 637, column: 13, scope: !2299)
!7197 = !DILocation(line: 427, column: 10, scope: !2308, inlinedAt: !7188)
!7198 = !DILocation(line: 427, column: 18, scope: !2308, inlinedAt: !7188)
!7199 = !{!7180, !2691, i64 24}
!7200 = !DILocation(line: 428, column: 10, scope: !2308, inlinedAt: !7188)
!7201 = !DILocation(line: 428, column: 19, scope: !2308, inlinedAt: !7188)
!7202 = !DILocation(line: 429, column: 5, scope: !2308, inlinedAt: !7188)
!7203 = !DILocation(line: 430, column: 10, scope: !2308, inlinedAt: !7188)
!7204 = !DILocation(line: 430, column: 13, scope: !2308, inlinedAt: !7188)
!7205 = !DILocation(line: 431, column: 23, scope: !2308, inlinedAt: !7188)
!7206 = !DILocation(line: 431, column: 5, scope: !2308, inlinedAt: !7188)
!7207 = !DILocation(line: 636, column: 16, scope: !2299)
!7208 = !DILocation(line: 440, column: 5, scope: !7209, inlinedAt: !7176)
!7209 = !DILexicalBlockFile(scope: !7210, file: !1, discriminator: 2)
!7210 = distinct !DILexicalBlock(scope: !2307, file: !1, line: 440, column: 5)
!7211 = !DILocation(line: 639, column: 9, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !2298, file: !1, line: 639, column: 9)
!7213 = !DILocation(line: 639, column: 9, scope: !2298)
!7214 = !DILocation(line: 639, column: 9, scope: !7215)
!7215 = !DILexicalBlockFile(scope: !7212, file: !1, discriminator: 3)
!7216 = !DILocation(line: 640, column: 21, scope: !2299)
!7217 = !DILocation(line: 641, column: 19, scope: !2299)
!7218 = !DILocation(line: 642, column: 5, scope: !2299)
!7219 = !DILocation(line: 643, column: 52, scope: !2290)
!7220 = !DILocation(line: 643, column: 39, scope: !2290)
!7221 = !DILocation(line: 445, column: 38, scope: !2312, inlinedAt: !7222)
!7222 = distinct !DILocation(line: 643, column: 13, scope: !2290)
!7223 = !DILocation(line: 445, column: 47, scope: !2312, inlinedAt: !7222)
!7224 = !DILocation(line: 450, column: 18, scope: !7225, inlinedAt: !7222)
!7225 = distinct !DILexicalBlock(scope: !2312, file: !1, line: 450, column: 9)
!7226 = !DILocation(line: 450, column: 11, scope: !7225, inlinedAt: !7222)
!7227 = !DILocation(line: 450, column: 9, scope: !2312, inlinedAt: !7222)
!7228 = !DILocation(line: 455, column: 34, scope: !7229, inlinedAt: !7222)
!7229 = distinct !DILexicalBlock(scope: !7225, file: !1, line: 452, column: 10)
!7230 = !DILocation(line: 455, column: 17, scope: !7229, inlinedAt: !7222)
!7231 = !DILocation(line: 447, column: 15, scope: !2312, inlinedAt: !7222)
!7232 = !DILocation(line: 456, column: 19, scope: !7233, inlinedAt: !7222)
!7233 = distinct !DILexicalBlock(scope: !7229, file: !1, line: 456, column: 13)
!7234 = !DILocation(line: 456, column: 13, scope: !7229, inlinedAt: !7222)
!7235 = !DILocation(line: 458, column: 21, scope: !7229, inlinedAt: !7222)
!7236 = !DILocation(line: 459, column: 9, scope: !7229, inlinedAt: !7222)
!7237 = !DILocation(line: 459, column: 24, scope: !7229, inlinedAt: !7222)
!7238 = !DILocation(line: 461, column: 5, scope: !2312, inlinedAt: !7222)
!7239 = !DILocation(line: 633, column: 15, scope: !2290)
!7240 = !DILocation(line: 646, column: 14, scope: !2290)
!7241 = !DILocation(line: 644, column: 9, scope: !2290)
!7242 = !DILocation(line: 451, column: 17, scope: !7225, inlinedAt: !7222)
!7243 = !DILocation(line: 644, column: 15, scope: !7244)
!7244 = distinct !DILexicalBlock(scope: !2290, file: !1, line: 644, column: 9)
!7245 = !DILocation(line: 647, column: 5, scope: !2290)
!7246 = !DILocation(line: 648, column: 1, scope: !2290)
!7247 = !DILocation(line: 708, column: 23, scope: !2340)
!7248 = !DILocation(line: 708, column: 39, scope: !2340)
!7249 = !DILocation(line: 708, column: 55, scope: !2340)
!7250 = !DILocation(line: 710, column: 5, scope: !2340)
!7251 = !DILocation(line: 710, column: 15, scope: !2340)
!7252 = !DILocation(line: 712, column: 10, scope: !7253)
!7253 = distinct !DILexicalBlock(scope: !2340, file: !1, line: 712, column: 9)
!7254 = !DILocation(line: 712, column: 9, scope: !2340)
!7255 = !DILocation(line: 714, column: 29, scope: !2340)
!7256 = !DILocation(line: 714, column: 12, scope: !2340)
!7257 = !DILocation(line: 714, column: 5, scope: !2340)
!7258 = !DILocation(line: 715, column: 1, scope: !2340)
!7259 = !DILocation(line: 658, column: 21, scope: !2319)
!7260 = !DILocation(line: 662, column: 13, scope: !2319)
!7261 = !DILocation(line: 663, column: 15, scope: !7262)
!7262 = distinct !DILexicalBlock(scope: !2319, file: !1, line: 663, column: 9)
!7263 = !DILocation(line: 663, column: 9, scope: !2319)
!7264 = !DILocation(line: 665, column: 5, scope: !2319)
!7265 = !DILocation(line: 666, column: 26, scope: !2319)
!7266 = !DILocation(line: 666, column: 20, scope: !2319)
!7267 = !DILocation(line: 667, column: 24, scope: !2319)
!7268 = !DILocation(line: 667, column: 12, scope: !2319)
!7269 = !DILocation(line: 667, column: 18, scope: !2319)
!7270 = !DILocation(line: 668, column: 12, scope: !2319)
!7271 = !DILocation(line: 668, column: 24, scope: !2319)
!7272 = !DILocation(line: 669, column: 23, scope: !2319)
!7273 = !DILocation(line: 669, column: 5, scope: !2319)
!7274 = !DILocation(line: 670, column: 5, scope: !2319)
!7275 = !DILocation(line: 671, column: 1, scope: !2319)
!7276 = !DILocation(line: 735, column: 23, scope: !2323)
!7277 = !DILocation(line: 737, column: 39, scope: !2323)
!7278 = !DILocation(line: 737, column: 56, scope: !2323)
!7279 = !DILocation(line: 737, column: 69, scope: !2323)
!7280 = !DILocation(line: 737, column: 12, scope: !2323)
!7281 = !DILocation(line: 737, column: 5, scope: !2323)
!7282 = !DILocation(line: 741, column: 25, scope: !2326)
!7283 = !DILocation(line: 741, column: 39, scope: !2326)
!7284 = !DILocation(line: 743, column: 5, scope: !2326)
!7285 = !DILocation(line: 744, column: 5, scope: !2326)
!7286 = !DILocation(line: 743, column: 20, scope: !2326)
!7287 = !DILocation(line: 744, column: 9, scope: !2326)
!7288 = !DILocation(line: 745, column: 10, scope: !7289)
!7289 = distinct !DILexicalBlock(scope: !2326, file: !1, line: 745, column: 9)
!7290 = !DILocation(line: 745, column: 9, scope: !2326)
!7291 = !DILocation(line: 747, column: 9, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !2326, file: !1, line: 747, column: 9)
!7293 = !DILocation(line: 747, column: 19, scope: !7292)
!7294 = !DILocation(line: 748, column: 25, scope: !7295)
!7295 = distinct !DILexicalBlock(scope: !7292, file: !1, line: 747, column: 41)
!7296 = !DILocation(line: 748, column: 9, scope: !7295)
!7297 = !DILocation(line: 749, column: 9, scope: !7295)
!7298 = !DILocation(line: 751, column: 5, scope: !7299)
!7299 = !DILexicalBlockFile(scope: !2335, file: !1, discriminator: 1)
!7300 = !DILocation(line: 751, column: 5, scope: !2339)
!7301 = !DILocation(line: 751, column: 5, scope: !2335)
!7302 = !DILocation(line: 751, column: 5, scope: !7303)
!7303 = !DILexicalBlockFile(scope: !2338, file: !1, discriminator: 2)
!7304 = !DILocation(line: 751, column: 5, scope: !7305)
!7305 = !DILexicalBlockFile(scope: !2337, file: !1, discriminator: 4)
!7306 = !DILocation(line: 751, column: 5, scope: !7307)
!7307 = distinct !DILexicalBlock(scope: !2337, file: !1, line: 751, column: 5)
!7308 = !DILocation(line: 751, column: 5, scope: !2337)
!7309 = !DILocation(line: 751, column: 5, scope: !7310)
!7310 = !DILexicalBlockFile(scope: !7307, file: !1, discriminator: 6)
!7311 = !DILocation(line: 754, column: 17, scope: !2326)
!7312 = !DILocation(line: 752, column: 19, scope: !2326)
!7313 = !DILocation(line: 752, column: 17, scope: !2326)
!7314 = !DILocation(line: 753, column: 5, scope: !2326)
!7315 = !DILocation(line: 754, column: 9, scope: !2326)
!7316 = !DILocation(line: 754, column: 15, scope: !2326)
!7317 = !DILocation(line: 755, column: 5, scope: !2326)
!7318 = !DILocation(line: 756, column: 1, scope: !2326)
!7319 = !DILocation(line: 676, column: 28, scope: !2346)
!7320 = !DILocation(line: 679, column: 15, scope: !2346)
!7321 = !DILocation(line: 681, column: 10, scope: !2346)
!7322 = !DILocation(line: 682, column: 12, scope: !7323)
!7323 = distinct !DILexicalBlock(scope: !2346, file: !1, line: 682, column: 9)
!7324 = !DILocation(line: 682, column: 9, scope: !2346)
!7325 = !DILocation(line: 684, column: 9, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !2346, file: !1, line: 684, column: 9)
!7327 = !DILocation(line: 684, column: 9, scope: !7328)
!7328 = !DILexicalBlockFile(scope: !7326, file: !1, discriminator: 1)
!7329 = !DILocation(line: 684, column: 9, scope: !2346)
!7330 = !DILocation(line: 662, column: 13, scope: !2319, inlinedAt: !7331)
!7331 = distinct !DILocation(line: 685, column: 27, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7326, file: !1, line: 684, column: 44)
!7333 = !DILocation(line: 663, column: 15, scope: !7262, inlinedAt: !7331)
!7334 = !DILocation(line: 663, column: 9, scope: !2319, inlinedAt: !7331)
!7335 = !DILocation(line: 665, column: 5, scope: !2319, inlinedAt: !7331)
!7336 = !DILocation(line: 666, column: 26, scope: !2319, inlinedAt: !7331)
!7337 = !DILocation(line: 666, column: 20, scope: !2319, inlinedAt: !7331)
!7338 = !DILocation(line: 667, column: 24, scope: !2319, inlinedAt: !7331)
!7339 = !DILocation(line: 667, column: 12, scope: !2319, inlinedAt: !7331)
!7340 = !DILocation(line: 667, column: 18, scope: !2319, inlinedAt: !7331)
!7341 = !DILocation(line: 668, column: 12, scope: !2319, inlinedAt: !7331)
!7342 = !DILocation(line: 668, column: 24, scope: !2319, inlinedAt: !7331)
!7343 = !DILocation(line: 669, column: 23, scope: !2319, inlinedAt: !7331)
!7344 = !DILocation(line: 669, column: 5, scope: !2319, inlinedAt: !7331)
!7345 = !DILocation(line: 670, column: 5, scope: !2319, inlinedAt: !7331)
!7346 = !DILocation(line: 689, column: 10, scope: !2346)
!7347 = !DILocation(line: 678, column: 16, scope: !2346)
!7348 = !DILocation(line: 690, column: 12, scope: !7349)
!7349 = distinct !DILexicalBlock(scope: !2346, file: !1, line: 690, column: 9)
!7350 = !DILocation(line: 690, column: 9, scope: !2346)
!7351 = !DILocation(line: 419, column: 37, scope: !2308, inlinedAt: !7352)
!7352 = distinct !DILocation(line: 692, column: 36, scope: !2346)
!7353 = !DILocation(line: 423, column: 11, scope: !2308, inlinedAt: !7352)
!7354 = !DILocation(line: 424, column: 13, scope: !7191, inlinedAt: !7352)
!7355 = !DILocation(line: 424, column: 9, scope: !2308, inlinedAt: !7352)
!7356 = !DILocation(line: 692, column: 9, scope: !2346)
!7357 = !DILocation(line: 692, column: 17, scope: !2346)
!7358 = !DILocation(line: 694, column: 25, scope: !7359)
!7359 = distinct !DILexicalBlock(scope: !7360, file: !1, line: 693, column: 23)
!7360 = distinct !DILexicalBlock(scope: !2346, file: !1, line: 693, column: 9)
!7361 = !DILocation(line: 694, column: 9, scope: !7359)
!7362 = !DILocation(line: 696, column: 9, scope: !7359)
!7363 = !DILocation(line: 427, column: 10, scope: !2308, inlinedAt: !7352)
!7364 = !DILocation(line: 427, column: 18, scope: !2308, inlinedAt: !7352)
!7365 = !DILocation(line: 428, column: 10, scope: !2308, inlinedAt: !7352)
!7366 = !DILocation(line: 428, column: 19, scope: !2308, inlinedAt: !7352)
!7367 = !DILocation(line: 429, column: 5, scope: !2308, inlinedAt: !7352)
!7368 = !DILocation(line: 430, column: 10, scope: !2308, inlinedAt: !7352)
!7369 = !DILocation(line: 430, column: 13, scope: !2308, inlinedAt: !7352)
!7370 = !DILocation(line: 431, column: 23, scope: !2308, inlinedAt: !7352)
!7371 = !DILocation(line: 431, column: 5, scope: !2308, inlinedAt: !7352)
!7372 = !DILocation(line: 699, column: 9, scope: !2346)
!7373 = !DILocation(line: 699, column: 15, scope: !2346)
!7374 = !DILocation(line: 700, column: 9, scope: !2346)
!7375 = !DILocation(line: 700, column: 21, scope: !2346)
!7376 = !DILocation(line: 701, column: 23, scope: !2346)
!7377 = !DILocation(line: 701, column: 5, scope: !2346)
!7378 = !DILocation(line: 703, column: 5, scope: !7379)
!7379 = !DILexicalBlockFile(scope: !2352, file: !1, discriminator: 1)
!7380 = !DILocation(line: 703, column: 5, scope: !7381)
!7381 = !DILexicalBlockFile(scope: !2354, file: !1, discriminator: 4)
!7382 = !DILocation(line: 703, column: 5, scope: !7383)
!7383 = distinct !DILexicalBlock(scope: !2354, file: !1, line: 703, column: 5)
!7384 = !DILocation(line: 703, column: 5, scope: !2354)
!7385 = !DILocation(line: 703, column: 5, scope: !7386)
!7386 = !DILexicalBlockFile(scope: !7383, file: !1, discriminator: 6)
!7387 = !DILocation(line: 704, column: 12, scope: !2346)
!7388 = !DILocation(line: 704, column: 5, scope: !2346)
!7389 = !DILocation(line: 705, column: 1, scope: !2346)
!7390 = !DILocation(line: 505, column: 38, scope: !2356)
!7391 = !DILocation(line: 507, column: 25, scope: !2356)
!7392 = !DILocation(line: 507, column: 5, scope: !2356)
!7393 = !DILocation(line: 508, column: 5, scope: !2356)
!7394 = !DILocation(line: 509, column: 5, scope: !2356)
!7395 = !DILocation(line: 510, column: 1, scope: !2356)
!7396 = !DILocation(line: 466, column: 39, scope: !2361)
!7397 = !DILocation(line: 466, column: 54, scope: !2361)
!7398 = !DILocation(line: 466, column: 68, scope: !2361)
!7399 = !DILocation(line: 469, column: 5, scope: !7400)
!7400 = !DILexicalBlockFile(scope: !2371, file: !1, discriminator: 1)
!7401 = !DILocation(line: 469, column: 5, scope: !2372)
!7402 = !DILocation(line: 469, column: 5, scope: !7403)
!7403 = !DILexicalBlockFile(scope: !2370, file: !1, discriminator: 2)
!7404 = !DILocation(line: 469, column: 5, scope: !7405)
!7405 = distinct !DILexicalBlock(scope: !2370, file: !1, line: 469, column: 5)
!7406 = !DILocation(line: 470, column: 26, scope: !2377)
!7407 = !DILocation(line: 470, column: 19, scope: !2377)
!7408 = !DILocation(line: 470, column: 5, scope: !2378)
!7409 = !DILocation(line: 471, column: 9, scope: !7410)
!7410 = !DILexicalBlockFile(scope: !2375, file: !1, discriminator: 1)
!7411 = !DILocation(line: 471, column: 9, scope: !2376)
!7412 = !DILocation(line: 471, column: 9, scope: !7413)
!7413 = !DILexicalBlockFile(scope: !2374, file: !1, discriminator: 2)
!7414 = !DILocation(line: 471, column: 9, scope: !7415)
!7415 = distinct !DILexicalBlock(scope: !2374, file: !1, line: 471, column: 9)
!7416 = !DILocation(line: 470, column: 36, scope: !2377)
!7417 = !DILocation(line: 468, column: 9, scope: !2361)
!7418 = !DILocation(line: 472, column: 5, scope: !7419)
!7419 = !DILexicalBlockFile(scope: !2381, file: !1, discriminator: 1)
!7420 = !DILocation(line: 472, column: 5, scope: !2382)
!7421 = !DILocation(line: 472, column: 5, scope: !7422)
!7422 = !DILexicalBlockFile(scope: !2380, file: !1, discriminator: 2)
!7423 = !DILocation(line: 472, column: 5, scope: !7424)
!7424 = distinct !DILexicalBlock(scope: !2380, file: !1, line: 472, column: 5)
!7425 = !DILocation(line: 473, column: 5, scope: !2361)
!7426 = !DILocation(line: 474, column: 1, scope: !2361)
!7427 = !DILocation(line: 490, column: 36, scope: !2383)
!7428 = !DILocation(line: 495, column: 5, scope: !7429)
!7429 = !DILexicalBlockFile(scope: !2391, file: !1, discriminator: 1)
!7430 = !DILocation(line: 495, column: 5, scope: !2395)
!7431 = !DILocation(line: 495, column: 5, scope: !2391)
!7432 = !DILocation(line: 495, column: 5, scope: !7433)
!7433 = !DILexicalBlockFile(scope: !2394, file: !1, discriminator: 2)
!7434 = !DILocation(line: 495, column: 5, scope: !7435)
!7435 = !DILexicalBlockFile(scope: !2393, file: !1, discriminator: 4)
!7436 = !DILocation(line: 495, column: 5, scope: !7437)
!7437 = distinct !DILexicalBlock(scope: !2393, file: !1, line: 495, column: 5)
!7438 = !DILocation(line: 495, column: 5, scope: !2393)
!7439 = !DILocation(line: 495, column: 5, scope: !7440)
!7440 = !DILexicalBlockFile(scope: !7437, file: !1, discriminator: 6)
!7441 = !DILocation(line: 496, column: 23, scope: !2398)
!7442 = !DILocation(line: 496, column: 17, scope: !2398)
!7443 = !DILocation(line: 496, column: 5, scope: !2399)
!7444 = !DILocation(line: 497, column: 9, scope: !7445)
!7445 = !DILexicalBlockFile(scope: !2397, file: !1, discriminator: 1)
!7446 = !DILocation(line: 497, column: 9, scope: !2403)
!7447 = !DILocation(line: 497, column: 9, scope: !2397)
!7448 = !DILocation(line: 497, column: 9, scope: !7449)
!7449 = !DILexicalBlockFile(scope: !2402, file: !1, discriminator: 2)
!7450 = !DILocation(line: 497, column: 9, scope: !7451)
!7451 = !DILexicalBlockFile(scope: !2401, file: !1, discriminator: 4)
!7452 = !DILocation(line: 497, column: 9, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !2401, file: !1, line: 497, column: 9)
!7454 = !DILocation(line: 497, column: 9, scope: !2401)
!7455 = !DILocation(line: 497, column: 9, scope: !7456)
!7456 = !DILexicalBlockFile(scope: !7453, file: !1, discriminator: 6)
!7457 = !DILocation(line: 496, column: 34, scope: !2398)
!7458 = !DILocation(line: 492, column: 9, scope: !2383)
!7459 = !DILocation(line: 498, column: 16, scope: !2383)
!7460 = !DILocation(line: 493, column: 15, scope: !2383)
!7461 = !DILocation(line: 499, column: 19, scope: !2383)
!7462 = !DILocation(line: 477, column: 37, scope: !2404, inlinedAt: !7463)
!7463 = distinct !DILocation(line: 500, column: 5, scope: !2383)
!7464 = !DILocation(line: 479, column: 12, scope: !7465, inlinedAt: !7463)
!7465 = !DILexicalBlockFile(scope: !7466, file: !1, discriminator: 5)
!7466 = !DILexicalBlockFile(scope: !2404, file: !1, discriminator: 1)
!7467 = !DILocation(line: 479, column: 16, scope: !2404, inlinedAt: !7463)
!7468 = !DILocation(line: 479, column: 19, scope: !7469, inlinedAt: !7463)
!7469 = !DILexicalBlockFile(scope: !2404, file: !1, discriminator: 2)
!7470 = !DILocation(line: 500, column: 5, scope: !2383)
!7471 = !DILocation(line: 483, column: 9, scope: !7472, inlinedAt: !7463)
!7472 = !DILexicalBlockFile(scope: !7473, file: !1, discriminator: 3)
!7473 = distinct !DILexicalBlock(scope: !2410, file: !1, line: 483, column: 9)
!7474 = !DILocation(line: 479, column: 32, scope: !2404, inlinedAt: !7463)
!7475 = !DILocation(line: 480, column: 12, scope: !2404, inlinedAt: !7463)
!7476 = !DILocation(line: 483, column: 9, scope: !7473, inlinedAt: !7463)
!7477 = !DILocation(line: 480, column: 27, scope: !2404, inlinedAt: !7463)
!7478 = !DILocation(line: 479, column: 55, scope: !2404, inlinedAt: !7463)
!7479 = !DILocation(line: 481, column: 54, scope: !2408, inlinedAt: !7463)
!7480 = !DILocation(line: 482, column: 42, scope: !2408, inlinedAt: !7463)
!7481 = !DILocation(line: 486, column: 5, scope: !7482, inlinedAt: !7463)
!7482 = distinct !DILexicalBlock(scope: !2414, file: !1, line: 486, column: 5)
!7483 = !DILocation(line: 486, column: 5, scope: !2414, inlinedAt: !7463)
!7484 = !DILocation(line: 486, column: 5, scope: !7485, inlinedAt: !7463)
!7485 = !DILexicalBlockFile(scope: !7482, file: !1, discriminator: 6)
!7486 = !DILocation(line: 501, column: 5, scope: !2383)
!7487 = !DILocation(line: 532, column: 33, scope: !2421)
!7488 = !DILocation(line: 532, column: 49, scope: !2421)
!7489 = !DILocation(line: 532, column: 65, scope: !2421)
!7490 = !DILocation(line: 535, column: 5, scope: !2421)
!7491 = !DILocation(line: 535, column: 15, scope: !2421)
!7492 = !DILocation(line: 535, column: 20, scope: !2421)
!7493 = !DILocation(line: 535, column: 29, scope: !2421)
!7494 = !DILocation(line: 539, column: 10, scope: !7495)
!7495 = distinct !DILexicalBlock(scope: !2421, file: !1, line: 539, column: 9)
!7496 = !DILocation(line: 539, column: 9, scope: !2421)
!7497 = !DILocation(line: 542, column: 54, scope: !2421)
!7498 = !DILocation(line: 419, column: 37, scope: !2308, inlinedAt: !7499)
!7499 = distinct !DILocation(line: 542, column: 28, scope: !2421)
!7500 = !DILocation(line: 423, column: 11, scope: !2308, inlinedAt: !7499)
!7501 = !DILocation(line: 424, column: 13, scope: !7191, inlinedAt: !7499)
!7502 = !DILocation(line: 424, column: 9, scope: !2308, inlinedAt: !7499)
!7503 = !DILocation(line: 427, column: 10, scope: !2308, inlinedAt: !7499)
!7504 = !DILocation(line: 427, column: 18, scope: !2308, inlinedAt: !7499)
!7505 = !DILocation(line: 428, column: 10, scope: !2308, inlinedAt: !7499)
!7506 = !DILocation(line: 428, column: 19, scope: !2308, inlinedAt: !7499)
!7507 = !DILocation(line: 429, column: 5, scope: !2308, inlinedAt: !7499)
!7508 = !DILocation(line: 430, column: 10, scope: !2308, inlinedAt: !7499)
!7509 = !DILocation(line: 430, column: 13, scope: !2308, inlinedAt: !7499)
!7510 = !DILocation(line: 431, column: 23, scope: !2308, inlinedAt: !7499)
!7511 = !DILocation(line: 431, column: 5, scope: !2308, inlinedAt: !7499)
!7512 = !DILocation(line: 546, column: 11, scope: !2421)
!7513 = !DILocation(line: 536, column: 19, scope: !2421)
!7514 = !DILocation(line: 547, column: 13, scope: !7515)
!7515 = distinct !DILexicalBlock(scope: !2421, file: !1, line: 547, column: 9)
!7516 = !DILocation(line: 547, column: 9, scope: !2421)
!7517 = !DILocation(line: 549, column: 16, scope: !7518)
!7518 = distinct !DILexicalBlock(scope: !7519, file: !1, line: 549, column: 5)
!7519 = distinct !DILexicalBlock(scope: !2421, file: !1, line: 549, column: 5)
!7520 = !DILocation(line: 549, column: 5, scope: !7519)
!7521 = !DILocation(line: 554, column: 20, scope: !2421)
!7522 = !DILocation(line: 554, column: 18, scope: !2421)
!7523 = !DILocation(line: 557, column: 13, scope: !7524)
!7524 = distinct !DILexicalBlock(scope: !7525, file: !1, line: 557, column: 13)
!7525 = distinct !DILexicalBlock(scope: !7526, file: !1, line: 556, column: 27)
!7526 = distinct !DILexicalBlock(scope: !2421, file: !1, line: 556, column: 9)
!7527 = !DILocation(line: 557, column: 18, scope: !7524)
!7528 = !DILocation(line: 565, column: 13, scope: !7529)
!7529 = distinct !DILexicalBlock(scope: !7526, file: !1, line: 564, column: 12)
!7530 = !DILocation(line: 550, column: 26, scope: !7531)
!7531 = distinct !DILexicalBlock(scope: !7518, file: !1, line: 549, column: 27)
!7532 = !DILocation(line: 550, column: 14, scope: !7531)
!7533 = !{!7534, !2672, i64 24}
!7534 = !{!"", !2690, i64 0, !2672, i64 24, !2669, i64 32}
!7535 = !DILocation(line: 550, column: 9, scope: !7531)
!7536 = !DILocation(line: 550, column: 24, scope: !7531)
!7537 = !DILocation(line: 551, column: 9, scope: !7531)
!7538 = !DILocation(line: 536, column: 16, scope: !2421)
!7539 = !DILocation(line: 549, column: 23, scope: !7518)
!7540 = !DILocation(line: 556, column: 13, scope: !7526)
!7541 = !DILocation(line: 562, column: 29, scope: !7542)
!7542 = distinct !DILexicalBlock(scope: !7524, file: !1, line: 557, column: 30)
!7543 = !DILocation(line: 556, column: 9, scope: !2421)
!7544 = !DILocation(line: 557, column: 13, scope: !7525)
!7545 = !DILocation(line: 558, column: 17, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7542, file: !1, line: 558, column: 17)
!7547 = !DILocation(line: 558, column: 31, scope: !7546)
!7548 = !DILocation(line: 558, column: 17, scope: !7542)
!7549 = !DILocation(line: 561, column: 13, scope: !7542)
!7550 = !DILocation(line: 562, column: 27, scope: !7542)
!7551 = !DILocation(line: 563, column: 9, scope: !7542)
!7552 = !DILocation(line: 571, column: 5, scope: !7553)
!7553 = !DILexicalBlockFile(scope: !2433, file: !1, discriminator: 1)
!7554 = !DILocation(line: 571, column: 5, scope: !7555)
!7555 = !DILexicalBlockFile(scope: !2435, file: !1, discriminator: 4)
!7556 = !DILocation(line: 571, column: 5, scope: !7557)
!7557 = distinct !DILexicalBlock(scope: !2435, file: !1, line: 571, column: 5)
!7558 = !DILocation(line: 571, column: 5, scope: !2435)
!7559 = !DILocation(line: 571, column: 5, scope: !7560)
!7560 = !DILexicalBlockFile(scope: !7557, file: !1, discriminator: 6)
!7561 = !DILocation(line: 572, column: 21, scope: !2421)
!7562 = !DILocation(line: 572, column: 5, scope: !2421)
!7563 = !DILocation(line: 573, column: 5, scope: !2421)
!7564 = !DILocation(line: 574, column: 1, scope: !2421)
!7565 = !DILocation(line: 513, column: 37, scope: !2416)
!7566 = !DILocation(line: 517, column: 40, scope: !2416)
!7567 = !DILocation(line: 517, column: 35, scope: !2416)
!7568 = !DILocation(line: 517, column: 24, scope: !2416)
!7569 = !DILocation(line: 517, column: 15, scope: !2416)
!7570 = !DILocation(line: 518, column: 10, scope: !7571)
!7571 = distinct !DILexicalBlock(scope: !2416, file: !1, line: 518, column: 9)
!7572 = !DILocation(line: 518, column: 9, scope: !2416)
!7573 = !DILocation(line: 520, column: 23, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7575, file: !1, line: 520, column: 5)
!7575 = distinct !DILexicalBlock(scope: !2416, file: !1, line: 520, column: 5)
!7576 = !DILocation(line: 520, column: 17, scope: !7574)
!7577 = !DILocation(line: 520, column: 5, scope: !7575)
!7578 = !DILocation(line: 522, column: 9, scope: !7579)
!7579 = distinct !DILexicalBlock(scope: !7574, file: !1, line: 520, column: 38)
!7580 = !DILocation(line: 521, column: 9, scope: !7579)
!7581 = !DILocation(line: 515, column: 9, scope: !2416)
!7582 = !DILocation(line: 520, column: 34, scope: !7574)
!7583 = !DILocation(line: 524, column: 36, scope: !2416)
!7584 = !DILocation(line: 524, column: 55, scope: !2416)
!7585 = !DILocation(line: 526, column: 31, scope: !2416)
!7586 = !DILocation(line: 526, column: 26, scope: !2416)
!7587 = !DILocation(line: 524, column: 12, scope: !2416)
!7588 = !DILocation(line: 524, column: 5, scope: !2416)
!7589 = !DILocation(line: 527, column: 1, scope: !2416)
!7590 = !DILocation(line: 812, column: 15, scope: !2437)
!7591 = !DILocation(line: 812, column: 31, scope: !2437)
!7592 = !DILocation(line: 814, column: 5, scope: !2437)
!7593 = !DILocation(line: 814, column: 19, scope: !2437)
!7594 = !DILocation(line: 815, column: 5, scope: !2437)
!7595 = !DILocation(line: 815, column: 20, scope: !2437)
!7596 = !DILocation(line: 818, column: 10, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !2437, file: !1, line: 818, column: 9)
!7598 = !DILocation(line: 818, column: 9, scope: !2437)
!7599 = !DILocation(line: 820, column: 9, scope: !7600)
!7600 = distinct !DILexicalBlock(scope: !2437, file: !1, line: 820, column: 9)
!7601 = !DILocation(line: 820, column: 11, scope: !7600)
!7602 = !DILocation(line: 820, column: 9, scope: !2437)
!7603 = !DILocation(line: 821, column: 25, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !7600, file: !1, line: 820, column: 16)
!7605 = !DILocation(line: 821, column: 9, scope: !7604)
!7606 = !DILocation(line: 822, column: 9, scope: !7604)
!7607 = !DILocation(line: 824, column: 14, scope: !2437)
!7608 = !DILocation(line: 815, column: 42, scope: !2437)
!7609 = !DILocation(line: 825, column: 16, scope: !7610)
!7610 = distinct !DILexicalBlock(scope: !2437, file: !1, line: 825, column: 9)
!7611 = !DILocation(line: 825, column: 9, scope: !2437)
!7612 = !DILocation(line: 827, column: 9, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !2437, file: !1, line: 827, column: 9)
!7614 = !DILocation(line: 827, column: 11, scope: !7613)
!7615 = !DILocation(line: 827, column: 9, scope: !2437)
!7616 = !DILocation(line: 829, column: 27, scope: !2437)
!7617 = !DILocation(line: 829, column: 10, scope: !2437)
!7618 = !DILocation(line: 815, column: 15, scope: !2437)
!7619 = !DILocation(line: 830, column: 12, scope: !2450)
!7620 = !DILocation(line: 830, column: 9, scope: !2437)
!7621 = !DILocation(line: 831, column: 9, scope: !7622)
!7622 = !DILexicalBlockFile(scope: !2448, file: !1, discriminator: 1)
!7623 = !DILocation(line: 831, column: 9, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !2448, file: !1, line: 831, column: 9)
!7625 = !DILocation(line: 831, column: 9, scope: !2448)
!7626 = !DILocation(line: 831, column: 9, scope: !7627)
!7627 = !DILexicalBlockFile(scope: !7624, file: !1, discriminator: 3)
!7628 = !DILocation(line: 834, column: 10, scope: !2454)
!7629 = !DILocation(line: 834, column: 9, scope: !2437)
!7630 = !DILocation(line: 835, column: 20, scope: !2453)
!7631 = !DILocation(line: 815, column: 31, scope: !2437)
!7632 = !DILocation(line: 836, column: 9, scope: !7633)
!7633 = !DILexicalBlockFile(scope: !2452, file: !1, discriminator: 1)
!7634 = !DILocation(line: 836, column: 9, scope: !7635)
!7635 = distinct !DILexicalBlock(scope: !2452, file: !1, line: 836, column: 9)
!7636 = !DILocation(line: 836, column: 9, scope: !2452)
!7637 = !DILocation(line: 836, column: 9, scope: !7638)
!7638 = !DILexicalBlockFile(scope: !7635, file: !1, discriminator: 3)
!7639 = !DILocation(line: 837, column: 22, scope: !2458)
!7640 = !DILocation(line: 837, column: 13, scope: !2453)
!7641 = !DILocation(line: 838, column: 13, scope: !7642)
!7642 = !DILexicalBlockFile(scope: !2456, file: !1, discriminator: 1)
!7643 = !DILocation(line: 838, column: 13, scope: !7644)
!7644 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 838, column: 13)
!7645 = !DILocation(line: 838, column: 13, scope: !2456)
!7646 = !DILocation(line: 838, column: 13, scope: !7647)
!7647 = !DILexicalBlockFile(scope: !7644, file: !1, discriminator: 3)
!7648 = !DILocation(line: 843, column: 5, scope: !2437)
!7649 = !DILocation(line: 814, column: 16, scope: !2437)
!7650 = !DILocation(line: 844, column: 18, scope: !2464)
!7651 = !DILocation(line: 844, column: 17, scope: !2464)
!7652 = !DILocation(line: 844, column: 5, scope: !2465)
!7653 = !DILocation(line: 846, column: 20, scope: !2463)
!7654 = !DILocation(line: 847, column: 22, scope: !2462)
!7655 = !DILocation(line: 847, column: 13, scope: !2463)
!7656 = !DILocation(line: 848, column: 13, scope: !7657)
!7657 = !DILexicalBlockFile(scope: !2460, file: !1, discriminator: 1)
!7658 = !DILocation(line: 848, column: 13, scope: !7659)
!7659 = distinct !DILexicalBlock(scope: !2460, file: !1, line: 848, column: 13)
!7660 = !DILocation(line: 848, column: 13, scope: !2460)
!7661 = !DILocation(line: 848, column: 13, scope: !7662)
!7662 = !DILexicalBlockFile(scope: !7659, file: !1, discriminator: 3)
!7663 = !DILocation(line: 851, column: 9, scope: !2463)
!7664 = !DILocation(line: 844, column: 23, scope: !2464)
!7665 = !DILocation(line: 854, column: 1, scope: !2437)
