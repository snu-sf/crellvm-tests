; ModuleID = 'posixmodule.o.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._object = type { i64, %struct._typeobject* }
%struct._typeobject = type { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }
%struct.PyVarObject = type { %struct._object, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.PyNumberMethods = type { %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)* }
%struct.PySequenceMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)*, %struct._object* (%struct._object*, i64)*, i8*, i32 (%struct._object*, i64, %struct._object*)*, i8*, i32 (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)* }
%struct.PyMappingMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)* }
%struct.PyBufferProcs = type { i32 (%struct._object*, %struct.bufferinfo*, i32)*, void (%struct._object*, %struct.bufferinfo*)* }
%struct.bufferinfo = type { i8*, %struct._object*, i64, i64, i32, i32, i8*, i64*, i64*, i64*, i8* }
%struct.PyMethodDef = type { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }
%struct.PyMemberDef = type opaque
%struct.PyGetSetDef = type { i8*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, %struct._object*, i8*)*, i8*, i8* }
%struct.PyModuleDef = type { %struct.PyModuleDef_Base, i8*, i8*, i64, %struct.PyMethodDef*, i32 (%struct._object*)*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, void (i8*)* }
%struct.PyModuleDef_Base = type { %struct._object, %struct._object* ()*, i64, %struct._object* }
%struct.PyStructSequence_Desc = type { i8*, i8*, %struct.PyStructSequence_Field*, i32 }
%struct.PyStructSequence_Field = type { i8*, i8* }
%struct._Py_Identifier = type { %struct._Py_Identifier*, i8*, %struct._object* }
%struct.constdef = type { i8*, i64 }
%struct.path_t = type { i8*, i8*, i32, i32, i32*, i8*, i32, i64, %struct._object*, %struct._object* }
%struct._ts = type { %struct._ts*, %struct._ts*, %struct._is*, %struct._frame*, i32, i8, i8, i32, i32, i32 (%struct._object*, %struct._frame*, i32, %struct._object*)*, i32 (%struct._object*, %struct._frame*, i32, %struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, i32, %struct._object*, i64, i32, %struct._object*, void (i8*)*, i8* }
%struct._is = type { %struct._is*, %struct._ts*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, i32, i32, i32, %struct._object* }
%struct._frame = type opaque
%struct.__dirstream = type opaque
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.utsname = type { [65 x i8], [65 x i8], [65 x i8], [65 x i8], [65 x i8], [65 x i8] }
%struct.timespec = type { i64, i64 }
%struct.PyTupleObject = type { %struct.PyVarObject, [1 x %struct._object*] }
%struct.utime_t = type { i32, i64, i64, i64, i64 }
%struct.tms = type { i64, i64, i64, i64 }
%struct.sched_param = type { i32 }
%struct.cpu_set_t = type { [16 x i64] }
%struct.termios = type { i32, i32, i32, i32, i8, [32 x i8], i32, i32 }
%struct.winsize = type { i16, i16, i16, i16 }
%struct.PyBytesObject = type { %struct.PyVarObject, i64, [1 x i8] }
%union.wait = type { i32 }
%struct.rusage = type { %struct.timeval, %struct.timeval, %union.anon, %union.anon.1, %union.anon.2, %union.anon.3, %union.anon.4, %union.anon.5, %union.anon.6, %union.anon.7, %union.anon.8, %union.anon.9, %union.anon.10, %union.anon.11, %union.anon.12, %union.anon.13 }
%struct.timeval = type { i64, i64 }
%union.anon = type { i64 }
%union.anon.1 = type { i64 }
%union.anon.2 = type { i64 }
%union.anon.3 = type { i64 }
%union.anon.4 = type { i64 }
%union.anon.5 = type { i64 }
%union.anon.6 = type { i64 }
%union.anon.7 = type { i64 }
%union.anon.8 = type { i64 }
%union.anon.9 = type { i64 }
%union.anon.10 = type { i64 }
%union.anon.11 = type { i64 }
%union.anon.12 = type { i64 }
%union.anon.13 = type { i64 }
%struct.siginfo_t = type { i32, i32, i32, %union.anon.14 }
%union.anon.14 = type { %struct.anon.18, [80 x i8] }
%struct.anon.18 = type { i32, i32, i32, i64, i64 }
%struct.iovec = type { i8*, i64 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.statvfs = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [6 x i32] }

@PyExc_TypeError = external global %struct._object*, align 8
@.str = private unnamed_addr constant [34 x i8] c"uid should be integer, not %.200s\00", align 1
@PyExc_OverflowError = external global %struct._object*, align 8
@.str.1 = private unnamed_addr constant [25 x i8] c"uid is less than minimum\00", align 1
@.str.2 = private unnamed_addr constant [28 x i8] c"uid is greater than maximum\00", align 1
@.str.3 = private unnamed_addr constant [34 x i8] c"gid should be integer, not %.200s\00", align 1
@.str.4 = private unnamed_addr constant [25 x i8] c"gid is less than minimum\00", align 1
@.str.5 = private unnamed_addr constant [28 x i8] c"gid is greater than maximum\00", align 1
@posixmodule = internal global %struct.PyModuleDef { %struct.PyModuleDef_Base { %struct._object { i64 1, %struct._typeobject* null }, %struct._object* ()* null, i64 0, %struct._object* null }, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([259 x i8], [259 x i8]* @posix__doc__, i32 0, i32 0), i64 -1, %struct.PyMethodDef* getelementptr inbounds ([146 x %struct.PyMethodDef], [146 x %struct.PyMethodDef]* @posix_methods, i32 0, i32 0), i32 (%struct._object*)* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* null, i32 (%struct._object*)* null, void (i8*)* null }, align 8
@.str.6 = private unnamed_addr constant [8 x i8] c"environ\00", align 1
@PyExc_OSError = external global %struct._object*, align 8
@.str.7 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@posix_putenv_garbage = internal unnamed_addr global %struct._object* null, align 8
@initialized = internal unnamed_addr global i1 false
@.str.8 = private unnamed_addr constant [20 x i8] c"posix.waitid_result\00", align 1
@waitid_result_desc = internal global %struct.PyStructSequence_Desc { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([221 x i8], [221 x i8]* @waitid_result__doc__, i32 0, i32 0), %struct.PyStructSequence_Field* getelementptr inbounds ([6 x %struct.PyStructSequence_Field], [6 x %struct.PyStructSequence_Field]* @waitid_result_fields, i32 0, i32 0), i32 5 }, align 8
@WaitidResultType = internal global %struct._typeobject zeroinitializer, align 8
@.str.9 = private unnamed_addr constant [15 x i8] c"os.stat_result\00", align 1
@stat_result_desc = internal global %struct.PyStructSequence_Desc { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([398 x i8], [398 x i8]* @stat_result__doc__, i32 0, i32 0), %struct.PyStructSequence_Field* getelementptr inbounds ([20 x %struct.PyStructSequence_Field], [20 x %struct.PyStructSequence_Field]* @stat_result_fields, i32 0, i32 0), i32 10 }, align 8
@PyStructSequence_UnnamedField = external global i8*, align 8
@StatResultType = internal global %struct._typeobject zeroinitializer, align 8
@structseq_new = internal unnamed_addr global %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, align 8
@.str.10 = private unnamed_addr constant [18 x i8] c"os.statvfs_result\00", align 1
@statvfs_result_desc = internal global %struct.PyStructSequence_Desc { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([287 x i8], [287 x i8]* @statvfs_result__doc__, i32 0, i32 0), %struct.PyStructSequence_Field* getelementptr inbounds ([11 x %struct.PyStructSequence_Field], [11 x %struct.PyStructSequence_Field]* @statvfs_result_fields, i32 0, i32 0), i32 10 }, align 8
@StatVFSResultType = internal global %struct._typeobject zeroinitializer, align 8
@ticks_per_second = internal unnamed_addr global i64 -1, align 8
@.str.11 = private unnamed_addr constant [18 x i8] c"posix.sched_param\00", align 1
@sched_param_desc = internal global %struct.PyStructSequence_Desc { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @sched_param__doc__, i32 0, i32 0), %struct.PyStructSequence_Field* getelementptr inbounds ([2 x %struct.PyStructSequence_Field], [2 x %struct.PyStructSequence_Field]* @sched_param_fields, i32 0, i32 0), i32 1 }, align 8
@SchedParamType = internal global %struct._typeobject zeroinitializer, align 8
@TerminalSizeType = internal global %struct._typeobject zeroinitializer, align 8
@TerminalSize_desc = internal global %struct.PyStructSequence_Desc { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.696, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @TerminalSize_docstring, i32 0, i32 0), %struct.PyStructSequence_Field* getelementptr inbounds ([3 x %struct.PyStructSequence_Field], [3 x %struct.PyStructSequence_Field]* @TerminalSize_fields, i32 0, i32 0), i32 2 }, align 8
@.str.12 = private unnamed_addr constant [14 x i8] c"waitid_result\00", align 1
@.str.13 = private unnamed_addr constant [12 x i8] c"stat_result\00", align 1
@.str.14 = private unnamed_addr constant [15 x i8] c"statvfs_result\00", align 1
@.str.15 = private unnamed_addr constant [12 x i8] c"sched_param\00", align 1
@.str.16 = private unnamed_addr constant [19 x i8] c"posix.times_result\00", align 1
@times_result_desc = internal global %struct.PyStructSequence_Desc { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([264 x i8], [264 x i8]* @times_result__doc__, i32 0, i32 0), %struct.PyStructSequence_Field* getelementptr inbounds ([6 x %struct.PyStructSequence_Field], [6 x %struct.PyStructSequence_Field]* @times_result_fields, i32 0, i32 0), i32 5 }, align 8
@TimesResultType = internal global %struct._typeobject zeroinitializer, align 8
@.str.17 = private unnamed_addr constant [13 x i8] c"times_result\00", align 1
@.str.18 = private unnamed_addr constant [19 x i8] c"posix.uname_result\00", align 1
@uname_result_desc = internal global %struct.PyStructSequence_Desc { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([246 x i8], [246 x i8]* @uname_result__doc__, i32 0, i32 0), %struct.PyStructSequence_Field* getelementptr inbounds ([6 x %struct.PyStructSequence_Field], [6 x %struct.PyStructSequence_Field]* @uname_result_fields, i32 0, i32 0), i32 5 }, align 8
@UnameResultType = internal global %struct._typeobject zeroinitializer, align 8
@.str.19 = private unnamed_addr constant [13 x i8] c"uname_result\00", align 1
@.str.20 = private unnamed_addr constant [14 x i8] c"terminal_size\00", align 1
@billion = internal unnamed_addr global %struct._object* null, align 8
@.str.21 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.22 = private unnamed_addr constant [6 x i8] c"chmod\00", align 1
@_Py_NoneStruct = external global %struct._object, align 8
@have_functions = internal unnamed_addr constant [29 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.723, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.724, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.725, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.726, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.727, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.728, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.729, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.730, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.731, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.732, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.733, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.734, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.735, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.736, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.737, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.738, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.739, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.740, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.741, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.742, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.743, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.744, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.745, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.746, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.747, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.748, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.749, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.750, i32 0, i32 0), i8* null], align 16
@.str.23 = private unnamed_addr constant [16 x i8] c"_have_functions\00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c"posix\00", align 1
@posix__doc__ = internal global [259 x i8] c"This module provides access to operating system functionality that is\0Astandardized by the C Standard and the POSIX standard (a thinly\0Adisguised Unix interface).  Refer to the library manual and\0Acorresponding Unix manual entries for more information on calls.\00", align 16
@posix_methods = internal global [146 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyModuleDef*, %struct._object*, %struct._object*)* @os_stat to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([784 x i8], [784 x i8]* @os_stat__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyModuleDef*, %struct._object*, %struct._object*)* @os_access to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([1149 x i8], [1149 x i8]* @os_access__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyModuleDef*, %struct._object*)* @os_ttyname to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @os_ttyname__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_chdir to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([260 x i8], [260 x i8]* @posix_chdir__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_chmod to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([845 x i8], [845 x i8]* @posix_chmod__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_fchmod, i32 1, i8* getelementptr inbounds ([124 x i8], [124 x i8]* @posix_fchmod__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_chown to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([874 x i8], [874 x i8]* @posix_chown__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_fchown, i32 1, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @posix_fchown__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.32, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_lchown, i32 1, i8* getelementptr inbounds ([199 x i8], [199 x i8]* @posix_lchown__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_chroot, i32 1, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @posix_chroot__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.34, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_ctermid, i32 4, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @posix_ctermid__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @posix_getcwd_unicode to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @posix_getcwd__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.36, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @posix_getcwd_bytes to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @posix_getcwdb__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.37, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_link to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([657 x i8], [657 x i8]* @posix_link__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.38, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_listdir to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([611 x i8], [611 x i8]* @posix_listdir__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_lstat to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([140 x i8], [140 x i8]* @posix_lstat__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_mkdir to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([371 x i8], [371 x i8]* @posix_mkdir__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_nice, i32 1, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @posix_nice__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.42, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_getpriority, i32 1, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @posix_getpriority__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.43, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_setpriority, i32 1, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @posix_setpriority__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.44, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_readlink to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([381 x i8], [381 x i8]* @readlink__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_rename to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([442 x i8], [442 x i8]* @posix_rename__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.46, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_replace to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([472 x i8], [472 x i8]* @posix_replace__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.47, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_rmdir to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([317 x i8], [317 x i8]* @posix_rmdir__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.48, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @stat_float_times, i32 1, i8* getelementptr inbounds ([260 x i8], [260 x i8]* @stat_float_times__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_symlink to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([638 x i8], [638 x i8]* @posix_symlink__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.50, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_system, i32 1, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @posix_system__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.51, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_umask, i32 1, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @posix_umask__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_uname, i32 4, i8* getelementptr inbounds ([198 x i8], [198 x i8]* @posix_uname__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.53, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_unlink to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([332 x i8], [332 x i8]* @posix_unlink__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.54, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_unlink to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([332 x i8], [332 x i8]* @posix_remove__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_utime to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([1254 x i8], [1254 x i8]* @posix_utime__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.56, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_times, i32 4, i8* getelementptr inbounds ([207 x i8], [207 x i8]* @posix_times__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix__exit, i32 1, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @posix__exit__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.58, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_execv, i32 1, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @posix_execv__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.59, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_execve to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([434 x i8], [434 x i8]* @posix_execve__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_fork, i32 4, i8* getelementptr inbounds ([99 x i8], [99 x i8]* @posix_fork__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.61, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_sched_get_priority_max, i32 1, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @posix_sched_get_priority_max__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.62, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_sched_get_priority_min, i32 1, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @posix_sched_get_priority_min__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.63, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_sched_getparam, i32 1, i8* getelementptr inbounds ([172 x i8], [172 x i8]* @posix_sched_getparam__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.64, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_sched_getscheduler, i32 1, i8* getelementptr inbounds ([162 x i8], [162 x i8]* @posix_sched_getscheduler__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.65, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_sched_rr_get_interval, i32 1, i8* getelementptr inbounds ([111 x i8], [111 x i8]* @posix_sched_rr_get_interval__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.66, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_sched_setparam, i32 1, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @posix_sched_setparam__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.67, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_sched_setscheduler, i32 1, i8* getelementptr inbounds ([174 x i8], [174 x i8]* @posix_sched_setscheduler__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.68, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_sched_yield, i32 4, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @posix_sched_yield__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.69, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_sched_setaffinity, i32 1, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @posix_sched_setaffinity__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.70, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_sched_getaffinity, i32 1, i8* getelementptr inbounds ([139 x i8], [139 x i8]* @posix_sched_getaffinity__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.71, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_openpty, i32 4, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @posix_openpty__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.72, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_forkpty, i32 4, i8* getelementptr inbounds ([226 x i8], [226 x i8]* @posix_forkpty__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.73, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_getegid, i32 4, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @posix_getegid__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.74, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_geteuid, i32 4, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @posix_geteuid__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.75, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_getgid, i32 4, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @posix_getgid__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.76, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_getgrouplist, i32 1, i8* getelementptr inbounds ([186 x i8], [186 x i8]* @posix_getgrouplist__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.77, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_getgroups, i32 4, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @posix_getgroups__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.78, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_getpid, i32 4, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @posix_getpid__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.79, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_getpgrp, i32 4, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @posix_getpgrp__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.80, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_getppid, i32 4, i8* getelementptr inbounds ([198 x i8], [198 x i8]* @posix_getppid__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.81, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_getuid, i32 4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @posix_getuid__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.82, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_getlogin, i32 4, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @posix_getlogin__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_kill, i32 1, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @posix_kill__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.84, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_killpg, i32 1, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @posix_killpg__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.85, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_setuid, i32 1, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @posix_setuid__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.86, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_seteuid, i32 1, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @posix_seteuid__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.87, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_setegid, i32 1, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @posix_setegid__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.88, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_setreuid, i32 1, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @posix_setreuid__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.89, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_setregid, i32 1, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @posix_setregid__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.90, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_setgid, i32 1, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @posix_setgid__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.91, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_setgroups, i32 8, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @posix_setgroups__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.92, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_initgroups, i32 1, i8* getelementptr inbounds ([197 x i8], [197 x i8]* @posix_initgroups__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.93, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_getpgid, i32 1, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @posix_getpgid__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.94, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_setpgrp, i32 4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @posix_setpgrp__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.95, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_wait, i32 4, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @posix_wait__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.96, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_wait3, i32 1, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @posix_wait3__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.97, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_wait4, i32 1, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @posix_wait4__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.98, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_waitid, i32 1, i8* getelementptr inbounds ([424 x i8], [424 x i8]* @posix_waitid__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.99, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_waitpid, i32 1, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @posix_waitpid__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.100, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_getsid, i32 1, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @posix_getsid__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.101, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_setsid, i32 4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @posix_setsid__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.102, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_setpgid, i32 1, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @posix_setpgid__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.103, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_tcgetpgrp, i32 1, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @posix_tcgetpgrp__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.104, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_tcsetpgrp, i32 1, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @posix_tcsetpgrp__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.105, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_open to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([379 x i8], [379 x i8]* @posix_open__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.106, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_close_, i32 1, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @posix_close__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.107, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_closerange, i32 1, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @posix_closerange__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.108, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @device_encoding, i32 1, i8* getelementptr inbounds ([129 x i8], [129 x i8]* @device_encoding__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.109, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_dup, i32 1, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @posix_dup__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.110, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_dup2 to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @posix_dup2__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.111, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_lockf, i32 1, i8* getelementptr inbounds ([241 x i8], [241 x i8]* @posix_lockf__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.112, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_lseek, i32 1, i8* getelementptr inbounds ([148 x i8], [148 x i8]* @posix_lseek__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.113, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_read, i32 1, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @posix_read__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.114, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_readv, i32 1, i8* getelementptr inbounds ([373 x i8], [373 x i8]* @posix_readv__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.115, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_pread, i32 1, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @posix_pread__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.116, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_write, i32 1, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @posix_write__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.117, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_writev, i32 1, i8* getelementptr inbounds ([259 x i8], [259 x i8]* @posix_writev__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.118, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_pwrite, i32 1, i8* getelementptr inbounds ([131 x i8], [131 x i8]* @posix_pwrite__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.119, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_sendfile to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([216 x i8], [216 x i8]* @posix_sendfile__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.120, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_fstat, i32 1, i8* getelementptr inbounds ([99 x i8], [99 x i8]* @posix_fstat__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.121, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_isatty, i32 1, i8* getelementptr inbounds ([129 x i8], [129 x i8]* @posix_isatty__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.122, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_pipe, i32 4, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @posix_pipe__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.123, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_pipe2, i32 8, i8* getelementptr inbounds ([176 x i8], [176 x i8]* @posix_pipe2__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.124, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_mkfifo to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([346 x i8], [346 x i8]* @posix_mkfifo__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.125, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_mknod to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([699 x i8], [699 x i8]* @posix_mknod__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.126, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_major, i32 1, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @posix_major__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.127, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_minor, i32 1, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @posix_minor__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.128, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_makedev, i32 1, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @posix_makedev__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.129, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_ftruncate, i32 1, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @posix_ftruncate__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.130, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_truncate to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([217 x i8], [217 x i8]* @posix_truncate__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.131, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_posix_fallocate, i32 1, i8* getelementptr inbounds ([158 x i8], [158 x i8]* @posix_posix_fallocate__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.132, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_posix_fadvise, i32 1, i8* getelementptr inbounds ([400 x i8], [400 x i8]* @posix_posix_fadvise__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.133, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_putenv, i32 1, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @posix_putenv__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.134, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_unsetenv, i32 1, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @posix_unsetenv__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.135, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_strerror, i32 1, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @posix_strerror__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.136, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_fchdir, i32 8, i8* getelementptr inbounds ([142 x i8], [142 x i8]* @posix_fchdir__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.137, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_fsync, i32 8, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @posix_fsync__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.138, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_sync, i32 4, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @posix_sync__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.139, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_fdatasync, i32 8, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @posix_fdatasync__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.140, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_WCOREDUMP, i32 1, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @posix_WCOREDUMP__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.141, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_WIFCONTINUED, i32 1, i8* getelementptr inbounds ([115 x i8], [115 x i8]* @posix_WIFCONTINUED__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.142, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_WIFSTOPPED, i32 1, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @posix_WIFSTOPPED__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.143, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_WIFSIGNALED, i32 1, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @posix_WIFSIGNALED__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.144, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_WIFEXITED, i32 1, i8* getelementptr inbounds ([110 x i8], [110 x i8]* @posix_WIFEXITED__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.145, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_WEXITSTATUS, i32 1, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @posix_WEXITSTATUS__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.146, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_WTERMSIG, i32 1, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @posix_WTERMSIG__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.147, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_WSTOPSIG, i32 1, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @posix_WSTOPSIG__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.148, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_fstatvfs, i32 1, i8* getelementptr inbounds ([108 x i8], [108 x i8]* @posix_fstatvfs__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.149, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_statvfs to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([251 x i8], [251 x i8]* @posix_statvfs__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.150, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_confstr, i32 1, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @posix_confstr__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.151, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_sysconf, i32 1, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @posix_sysconf__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.152, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_fpathconf, i32 1, i8* getelementptr inbounds ([129 x i8], [129 x i8]* @posix_fpathconf__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.153, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_pathconf to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([278 x i8], [278 x i8]* @posix_pathconf__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.154, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_abort, i32 4, i8* getelementptr inbounds ([163 x i8], [163 x i8]* @posix_abort__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.155, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_getloadavg, i32 4, i8* getelementptr inbounds ([193 x i8], [193 x i8]* @posix_getloadavg__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.156, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_urandom, i32 1, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @posix_urandom__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.157, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_setresuid, i32 1, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @posix_setresuid__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.158, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_setresgid, i32 1, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @posix_setresgid__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.159, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_getresuid, i32 4, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @posix_getresuid__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.160, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_getresgid, i32 4, i8* getelementptr inbounds ([108 x i8], [108 x i8]* @posix_getresgid__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.161, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_setxattr to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([347 x i8], [347 x i8]* @posix_setxattr__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.162, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_getxattr to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([349 x i8], [349 x i8]* @posix_getxattr__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.163, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_removexattr to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([331 x i8], [331 x i8]* @posix_removexattr__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.164, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_listxattr to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([393 x i8], [393 x i8]* @posix_listxattr__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.165, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @get_terminal_size, i32 1, i8* getelementptr inbounds ([467 x i8], [467 x i8]* @termsize__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.166, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @posix_cpu_count to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([110 x i8], [110 x i8]* @posix_cpu_count__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.167, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_get_inheritable, i32 1, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @get_inheritable__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.168, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @posix_set_inheritable, i32 1, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @set_inheritable__doc__, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@.str.25 = private unnamed_addr constant [5 x i8] c"stat\00", align 1
@os_stat__doc__ = internal global [784 x i8] c"stat($module, /, path, *, dir_fd=None, follow_symlinks=True)\0A--\0A\0APerform a stat system call on the given path.\0A\0A  path\0A    Path to be examined; can be string, bytes, or open-file-descriptor int.\0A  dir_fd\0A    If not None, it should be a file descriptor open to a directory,\0A    and path should be a relative string; path will then be relative to\0A    that directory.\0A  follow_symlinks\0A    If False, and the last element of the path is a symbolic link,\0A    stat will examine the symbolic link itself instead of the file\0A    the link points to.\0A\0Adir_fd and follow_symlinks may not be implemented\0A  on your platform.  If they are unavailable, using them will raise a\0A  NotImplementedError.\0A\0AIt's an error to use dir_fd or follow_symlinks when specifying path as\0A  an open file descriptor.\00", align 16
@.str.26 = private unnamed_addr constant [7 x i8] c"access\00", align 1
@os_access__doc__ = internal global [1149 x i8] c"access($module, /, path, mode, *, dir_fd=None, effective_ids=False,\0A       follow_symlinks=True)\0A--\0A\0AUse the real uid/gid to test for access to a path.\0A\0A  path\0A    Path to be tested; can be string, bytes, or open-file-descriptor int.\0A  mode\0A    Operating-system mode bitfield.  Can be F_OK to test existence,\0A    or the inclusive-OR of R_OK, W_OK, and X_OK.\0A  dir_fd\0A    If not None, it should be a file descriptor open to a directory,\0A    and path should be relative; path will then be relative to that\0A    directory.\0A  effective_ids\0A    If True, access will use the effective uid/gid instead of\0A    the real uid/gid.\0A  follow_symlinks\0A    If False, and the last element of the path is a symbolic link,\0A    access will examine the symbolic link itself instead of the file\0A    the link points to.\0A\0Adir_fd, effective_ids, and follow_symlinks may not be implemented\0A  on your platform.  If they are unavailable, using them will raise a\0A  NotImplementedError.\0A\0ANote that most operations will use the effective uid/gid, therefore this\0A  routine can be used in a suid/sgid environment to test if the invoking user\0A  has the specified access to the path.\00", align 16
@.str.27 = private unnamed_addr constant [8 x i8] c"ttyname\00", align 1
@os_ttyname__doc__ = internal global [128 x i8] c"ttyname($module, fd, /)\0A--\0A\0AReturn the name of the terminal device connected to 'fd'.\0A\0A  fd\0A    Integer file descriptor handle.\00", align 16
@.str.28 = private unnamed_addr constant [6 x i8] c"chdir\00", align 1
@posix_chdir__doc__ = internal global [260 x i8] c"chdir(path)\0A\0AChange the current working directory to the specified path.\0A\0Apath may always be specified as a string.\0AOn some platforms, path may also be specified as an open file descriptor.\0A  If this functionality is unavailable, using it raises an exception.\00", align 16
@posix_chmod__doc__ = internal global [845 x i8] c"chmod(path, mode, *, dir_fd=None, follow_symlinks=True)\0A\0AChange the access permissions of a file.\0A\0Apath may always be specified as a string.\0AOn some platforms, path may also be specified as an open file descriptor.\0A  If this functionality is unavailable, using it raises an exception.\0AIf dir_fd is not None, it should be a file descriptor open to a directory,\0A  and path should be relative; path will then be relative to that directory.\0AIf follow_symlinks is False, and the last element of the path is a symbolic\0A  link, chmod will modify the symbolic link itself instead of the file the\0A  link points to.\0AIt is an error to use dir_fd or follow_symlinks when specifying path as\0A  an open file descriptor.\0Adir_fd and follow_symlinks may not be implemented on your platform.\0A  If they are unavailable, using them will raise a NotImplementedError.\00", align 16
@.str.29 = private unnamed_addr constant [7 x i8] c"fchmod\00", align 1
@posix_fchmod__doc__ = internal global [124 x i8] c"fchmod(fd, mode)\0A\0AChange the access permissions of the file given by file\0Adescriptor fd.  Equivalent to os.chmod(fd, mode).\00", align 16
@.str.30 = private unnamed_addr constant [6 x i8] c"chown\00", align 1
@posix_chown__doc__ = internal global [874 x i8] c"chown(path, uid, gid, *, dir_fd=None, follow_symlinks=True)\0A\0AChange the owner and group id of path to the numeric uid and gid.\0A\0Apath may always be specified as a string.\0AOn some platforms, path may also be specified as an open file descriptor.\0A  If this functionality is unavailable, using it raises an exception.\0AIf dir_fd is not None, it should be a file descriptor open to a directory,\0A  and path should be relative; path will then be relative to that directory.\0AIf follow_symlinks is False, and the last element of the path is a symbolic\0A  link, chown will modify the symbolic link itself instead of the file the\0A  link points to.\0AIt is an error to use dir_fd or follow_symlinks when specifying path as\0A  an open file descriptor.\0Adir_fd and follow_symlinks may not be implemented on your platform.\0A  If they are unavailable, using them will raise a NotImplementedError.\00", align 16
@.str.31 = private unnamed_addr constant [7 x i8] c"fchown\00", align 1
@posix_fchown__doc__ = internal global [159 x i8] c"fchown(fd, uid, gid)\0A\0AChange the owner and group id of the file given by file descriptor\0Afd to the numeric uid and gid.  Equivalent to os.chown(fd, uid, gid).\00", align 16
@.str.32 = private unnamed_addr constant [7 x i8] c"lchown\00", align 1
@posix_lchown__doc__ = internal global [199 x i8] c"lchown(path, uid, gid)\0A\0AChange the owner and group id of path to the numeric uid and gid.\0AThis function will not follow symbolic links.\0AEquivalent to os.chown(path, uid, gid, follow_symlinks=False).\00", align 16
@.str.33 = private unnamed_addr constant [7 x i8] c"chroot\00", align 1
@posix_chroot__doc__ = internal global [45 x i8] c"chroot(path)\0A\0AChange root directory to path.\00", align 16
@.str.34 = private unnamed_addr constant [8 x i8] c"ctermid\00", align 1
@posix_ctermid__doc__ = internal global [83 x i8] c"ctermid() -> string\0A\0AReturn the name of the controlling terminal for this process.\00", align 16
@.str.35 = private unnamed_addr constant [7 x i8] c"getcwd\00", align 1
@posix_getcwd__doc__ = internal global [86 x i8] c"getcwd() -> path\0A\0AReturn a unicode string representing the current working directory.\00", align 16
@.str.36 = private unnamed_addr constant [8 x i8] c"getcwdb\00", align 1
@posix_getcwdb__doc__ = internal global [85 x i8] c"getcwdb() -> path\0A\0AReturn a bytes string representing the current working directory.\00", align 16
@.str.37 = private unnamed_addr constant [5 x i8] c"link\00", align 1
@posix_link__doc__ = internal global [657 x i8] c"link(src, dst, *, src_dir_fd=None, dst_dir_fd=None, follow_symlinks=True)\0A\0ACreate a hard link to a file.\0A\0AIf either src_dir_fd or dst_dir_fd is not None, it should be a file\0A  descriptor open to a directory, and the respective path string (src or dst)\0A  should be relative; the path will then be relative to that directory.\0AIf follow_symlinks is False, and the last element of src is a symbolic\0A  link, link will create a link to the symbolic link itself instead of the\0A  file the link points to.\0Asrc_dir_fd, dst_dir_fd, and follow_symlinks may not be implemented on your\0A  platform.  If they are unavailable, using them will raise a\0A  NotImplementedError.\00", align 16
@.str.38 = private unnamed_addr constant [8 x i8] c"listdir\00", align 1
@posix_listdir__doc__ = internal global [611 x i8] c"listdir(path='.') -> list_of_filenames\0A\0AReturn a list containing the names of the files in the directory.\0AThe list is in arbitrary order.  It does not include the special\0Aentries '.' and '..' even if they are present in the directory.\0A\0Apath can be specified as either str or bytes.  If path is bytes,\0A  the filenames returned will also be bytes; in all other circumstances\0A  the filenames returned will be str.\0AOn some platforms, path may also be specified as an open file descriptor;\0A  the file descriptor must refer to a directory.\0A  If this functionality is unavailable, using it raises NotImplementedError.\00", align 16
@.str.39 = private unnamed_addr constant [6 x i8] c"lstat\00", align 1
@posix_lstat__doc__ = internal global [140 x i8] c"lstat(path, *, dir_fd=None) -> stat result\0A\0ALike stat(), but do not follow symbolic links.\0AEquivalent to stat(path, follow_symlinks=False).\00", align 16
@.str.40 = private unnamed_addr constant [6 x i8] c"mkdir\00", align 1
@posix_mkdir__doc__ = internal global [371 x i8] c"mkdir(path, mode=0o777, *, dir_fd=None)\0A\0ACreate a directory.\0A\0AIf dir_fd is not None, it should be a file descriptor open to a directory,\0A  and path should be relative; path will then be relative to that directory.\0Adir_fd may not be implemented on your platform.\0A  If it is unavailable, using it will raise a NotImplementedError.\0A\0AThe mode argument is ignored on Windows.\00", align 16
@.str.41 = private unnamed_addr constant [5 x i8] c"nice\00", align 1
@posix_nice__doc__ = internal global [96 x i8] c"nice(inc) -> new_priority\0A\0ADecrease the priority of process by inc and return the new priority.\00", align 16
@.str.42 = private unnamed_addr constant [12 x i8] c"getpriority\00", align 1
@posix_getpriority__doc__ = internal global [78 x i8] c"getpriority(which, who) -> current_priority\0A\0AGet program scheduling priority.\00", align 16
@.str.43 = private unnamed_addr constant [12 x i8] c"setpriority\00", align 1
@posix_setpriority__doc__ = internal global [72 x i8] c"setpriority(which, who, prio) -> None\0A\0ASet program scheduling priority.\00", align 16
@.str.44 = private unnamed_addr constant [9 x i8] c"readlink\00", align 1
@readlink__doc__ = internal global [381 x i8] c"readlink(path, *, dir_fd=None) -> path\0A\0AReturn a string representing the path to which the symbolic link points.\0A\0AIf dir_fd is not None, it should be a file descriptor open to a directory,\0A  and path should be relative; path will then be relative to that directory.\0Adir_fd may not be implemented on your platform.\0A  If it is unavailable, using it will raise a NotImplementedError.\00", align 16
@.str.45 = private unnamed_addr constant [7 x i8] c"rename\00", align 1
@posix_rename__doc__ = internal global [442 x i8] c"rename(src, dst, *, src_dir_fd=None, dst_dir_fd=None)\0A\0ARename a file or directory.\0A\0AIf either src_dir_fd or dst_dir_fd is not None, it should be a file\0A  descriptor open to a directory, and the respective path string (src or dst)\0A  should be relative; the path will then be relative to that directory.\0Asrc_dir_fd and dst_dir_fd, may not be implemented on your platform.\0A  If they are unavailable, using them will raise a NotImplementedError.\00", align 16
@.str.46 = private unnamed_addr constant [8 x i8] c"replace\00", align 1
@posix_replace__doc__ = internal global [472 x i8] c"replace(src, dst, *, src_dir_fd=None, dst_dir_fd=None)\0A\0ARename a file or directory, overwriting the destination.\0A\0AIf either src_dir_fd or dst_dir_fd is not None, it should be a file\0A  descriptor open to a directory, and the respective path string (src or dst)\0A  should be relative; the path will then be relative to that directory.\0Asrc_dir_fd and dst_dir_fd, may not be implemented on your platform.\0A  If they are unavailable, using them will raise a NotImplementedError.\00", align 16
@.str.47 = private unnamed_addr constant [6 x i8] c"rmdir\00", align 1
@posix_rmdir__doc__ = internal global [317 x i8] c"rmdir(path, *, dir_fd=None)\0A\0ARemove a directory.\0A\0AIf dir_fd is not None, it should be a file descriptor open to a directory,\0A  and path should be relative; path will then be relative to that directory.\0Adir_fd may not be implemented on your platform.\0A  If it is unavailable, using it will raise a NotImplementedError.\00", align 16
@.str.48 = private unnamed_addr constant [17 x i8] c"stat_float_times\00", align 1
@stat_float_times__doc__ = internal global [260 x i8] c"stat_float_times([newval]) -> oldval\0A\0ADetermine whether os.[lf]stat represents time stamps as float objects.\0AIf newval is True, future calls to stat() return floats, if it is False,\0Afuture calls return ints. \0AIf newval is omitted, return the current setting.\0A\00", align 16
@.str.49 = private unnamed_addr constant [8 x i8] c"symlink\00", align 1
@posix_symlink__doc__ = internal global [638 x i8] c"symlink(src, dst, target_is_directory=False, *, dir_fd=None)\0A\0ACreate a symbolic link pointing to src named dst.\0A\0Atarget_is_directory is required on Windows if the target is to be\0A  interpreted as a directory.  (On Windows, symlink requires\0A  Windows 6.0 or greater, and raises a NotImplementedError otherwise.)\0A  target_is_directory is ignored on non-Windows platforms.\0A\0AIf dir_fd is not None, it should be a file descriptor open to a directory,\0A  and path should be relative; path will then be relative to that directory.\0Adir_fd may not be implemented on your platform.\0A  If it is unavailable, using it will raise a NotImplementedError.\00", align 16
@.str.50 = private unnamed_addr constant [7 x i8] c"system\00", align 1
@posix_system__doc__ = internal global [78 x i8] c"system(command) -> exit_status\0A\0AExecute the command (a string) in a subshell.\00", align 16
@.str.51 = private unnamed_addr constant [6 x i8] c"umask\00", align 1
@posix_umask__doc__ = internal global [90 x i8] c"umask(new_mask) -> old_mask\0A\0ASet the current numeric umask and return the previous umask.\00", align 16
@.str.52 = private unnamed_addr constant [6 x i8] c"uname\00", align 1
@posix_uname__doc__ = internal global [198 x i8] c"uname() -> uname_result\0A\0AReturn an object identifying the current operating system.\0AThe object behaves like a named tuple with the following fields:\0A  (sysname, nodename, release, version, machine)\00", align 16
@.str.53 = private unnamed_addr constant [7 x i8] c"unlink\00", align 1
@posix_unlink__doc__ = internal global [332 x i8] c"unlink(path, *, dir_fd=None)\0A\0ARemove a file (same as remove()).\0A\0AIf dir_fd is not None, it should be a file descriptor open to a directory,\0A  and path should be relative; path will then be relative to that directory.\0Adir_fd may not be implemented on your platform.\0A  If it is unavailable, using it will raise a NotImplementedError.\00", align 16
@.str.54 = private unnamed_addr constant [7 x i8] c"remove\00", align 1
@posix_remove__doc__ = internal global [332 x i8] c"remove(path, *, dir_fd=None)\0A\0ARemove a file (same as unlink()).\0A\0AIf dir_fd is not None, it should be a file descriptor open to a directory,\0A  and path should be relative; path will then be relative to that directory.\0Adir_fd may not be implemented on your platform.\0A  If it is unavailable, using it will raise a NotImplementedError.\00", align 16
@.str.55 = private unnamed_addr constant [6 x i8] c"utime\00", align 1
@posix_utime__doc__ = internal global [1254 x i8] c"utime(path, times=None, *, ns=None, dir_fd=None, follow_symlinks=True)\0ASet the access and modified time of path.\0A\0Apath may always be specified as a string.\0AOn some platforms, path may also be specified as an open file descriptor.\0A  If this functionality is unavailable, using it raises an exception.\0A\0AIf times is not None, it must be a tuple (atime, mtime);\0A    atime and mtime should be expressed as float seconds since the epoch.\0AIf ns is not None, it must be a tuple (atime_ns, mtime_ns);\0A    atime_ns and mtime_ns should be expressed as integer nanoseconds\0A    since the epoch.\0AIf both times and ns are None, utime uses the current time.\0ASpecifying tuples for both times and ns is an error.\0A\0AIf dir_fd is not None, it should be a file descriptor open to a directory,\0A  and path should be relative; path will then be relative to that directory.\0AIf follow_symlinks is False, and the last element of the path is a symbolic\0A  link, utime will modify the symbolic link itself instead of the file the\0A  link points to.\0AIt is an error to use dir_fd or follow_symlinks when specifying path\0A  as an open file descriptor.\0Adir_fd and follow_symlinks may not be available on your platform.\0A  If they are unavailable, using them will raise a NotImplementedError.\00", align 16
@.str.56 = private unnamed_addr constant [6 x i8] c"times\00", align 1
@posix_times__doc__ = internal global [207 x i8] c"times() -> times_result\0A\0AReturn an object containing floating point numbers indicating process\0Atimes.  The object behaves like a named tuple with these fields:\0A  (utime, stime, cutime, cstime, elapsed_time)\00", align 16
@.str.57 = private unnamed_addr constant [6 x i8] c"_exit\00", align 1
@posix__exit__doc__ = internal global [89 x i8] c"_exit(status)\0A\0AExit to the system with specified status, without normal exit processing.\00", align 16
@.str.58 = private unnamed_addr constant [6 x i8] c"execv\00", align 1
@posix_execv__doc__ = internal global [159 x i8] c"execv(path, args)\0A\0AExecute an executable path with arguments, replacing current process.\0A\0A    path: path of executable file\0A    args: tuple or list of strings\00", align 16
@.str.59 = private unnamed_addr constant [7 x i8] c"execve\00", align 1
@posix_execve__doc__ = internal global [434 x i8] c"execve(path, args, env)\0A\0AExecute a path with arguments and environment, replacing current process.\0A\0A    path: path of executable file\0A    args: tuple or list of arguments\0A    env: dictionary of strings mapping to strings\0A\0AOn some platforms, you may specify an open file descriptor for path;\0A  execve will execute the program the file descriptor is open to.\0A  If this functionality is unavailable, using it raises NotImplementedError.\00", align 16
@.str.60 = private unnamed_addr constant [5 x i8] c"fork\00", align 1
@posix_fork__doc__ = internal global [99 x i8] c"fork() -> pid\0A\0AFork a child process.\0AReturn 0 to child process and PID of child to parent process.\00", align 16
@.str.61 = private unnamed_addr constant [23 x i8] c"sched_get_priority_max\00", align 1
@posix_sched_get_priority_max__doc__ = internal global [82 x i8] c"sched_get_priority_max(policy)\0A\0AGet the maximum scheduling priority for *policy*.\00", align 16
@.str.62 = private unnamed_addr constant [23 x i8] c"sched_get_priority_min\00", align 1
@posix_sched_get_priority_min__doc__ = internal global [82 x i8] c"sched_get_priority_min(policy)\0A\0AGet the minimum scheduling priority for *policy*.\00", align 16
@.str.63 = private unnamed_addr constant [15 x i8] c"sched_getparam\00", align 1
@posix_sched_getparam__doc__ = internal global [172 x i8] c"sched_getparam(pid) -> sched_param\0A\0AReturns scheduling parameters for the process with *pid* as an instance of the\0Asched_param class. A PID of 0 means the calling process.\00", align 16
@.str.64 = private unnamed_addr constant [19 x i8] c"sched_getscheduler\00", align 1
@posix_sched_getscheduler__doc__ = internal global [162 x i8] c"sched_getscheduler(pid)\0A\0AGet the scheduling policy for the process with a PID of *pid*.\0APassing a PID of 0 returns the scheduling policy for the calling process.\00", align 16
@.str.65 = private unnamed_addr constant [22 x i8] c"sched_rr_get_interval\00", align 1
@posix_sched_rr_get_interval__doc__ = internal global [111 x i8] c"sched_rr_get_interval(pid) -> float\0A\0AReturn the round-robin quantum for the process with PID *pid* in seconds.\00", align 16
@.str.66 = private unnamed_addr constant [15 x i8] c"sched_setparam\00", align 1
@posix_sched_setparam__doc__ = internal global [122 x i8] c"sched_setparam(pid, param)\0A\0ASet scheduling parameters for a process with PID *pid*.\0AA PID of 0 means the calling process.\00", align 16
@.str.67 = private unnamed_addr constant [19 x i8] c"sched_setscheduler\00", align 1
@posix_sched_setscheduler__doc__ = internal global [174 x i8] c"sched_setscheduler(pid, policy, param)\0A\0ASet the scheduling policy, *policy*, for *pid*.\0AIf *pid* is 0, the calling process is changed.\0A*param* is an instance of sched_param.\00", align 16
@.str.68 = private unnamed_addr constant [12 x i8] c"sched_yield\00", align 1
@posix_sched_yield__doc__ = internal global [47 x i8] c"sched_yield()\0A\0AVoluntarily relinquish the CPU.\00", align 16
@.str.69 = private unnamed_addr constant [18 x i8] c"sched_setaffinity\00", align 1
@posix_sched_setaffinity__doc__ = internal global [94 x i8] c"sched_setaffinity(pid, cpu_set)\0A\0ASet the affinity of the process with PID *pid* to *cpu_set*.\00", align 16
@.str.70 = private unnamed_addr constant [18 x i8] c"sched_getaffinity\00", align 1
@posix_sched_getaffinity__doc__ = internal global [139 x i8] c"sched_getaffinity(pid, ncpus) -> cpu_set\0A\0AReturn the affinity of the process with PID *pid*.\0AThe returned cpu_set will be of size *ncpus*.\00", align 16
@.str.71 = private unnamed_addr constant [8 x i8] c"openpty\00", align 1
@posix_openpty__doc__ = internal global [112 x i8] c"openpty() -> (master_fd, slave_fd)\0A\0AOpen a pseudo-terminal, returning open fd's for both master and slave end.\0A\00", align 16
@.str.72 = private unnamed_addr constant [8 x i8] c"forkpty\00", align 1
@posix_forkpty__doc__ = internal global [226 x i8] c"forkpty() -> (pid, master_fd)\0A\0AFork a new process with a new pseudo-terminal as controlling tty.\0A\0ALike fork(), return 0 as pid to child process, and PID of child to parent.\0ATo both, return fd of newly opened pseudo-terminal.\0A\00", align 16
@.str.73 = private unnamed_addr constant [8 x i8] c"getegid\00", align 1
@posix_getegid__doc__ = internal global [68 x i8] c"getegid() -> egid\0A\0AReturn the current process's effective group id.\00", align 16
@.str.74 = private unnamed_addr constant [8 x i8] c"geteuid\00", align 1
@posix_geteuid__doc__ = internal global [67 x i8] c"geteuid() -> euid\0A\0AReturn the current process's effective user id.\00", align 16
@.str.75 = private unnamed_addr constant [7 x i8] c"getgid\00", align 1
@posix_getgid__doc__ = internal global [56 x i8] c"getgid() -> gid\0A\0AReturn the current process's group id.\00", align 16
@.str.76 = private unnamed_addr constant [13 x i8] c"getgrouplist\00", align 1
@posix_getgrouplist__doc__ = internal global [186 x i8] c"getgrouplist(user, group) -> list of groups to which a user belongs\0A\0AReturns a list of groups to which a user belongs.\0A\0A    user: username to lookup\0A    group: base group id of the user\00", align 16
@.str.77 = private unnamed_addr constant [10 x i8] c"getgroups\00", align 1
@posix_getgroups__doc__ = internal global [89 x i8] c"getgroups() -> list of group IDs\0A\0AReturn list of supplemental group IDs for the process.\00", align 16
@.str.78 = private unnamed_addr constant [7 x i8] c"getpid\00", align 1
@posix_getpid__doc__ = internal global [47 x i8] c"getpid() -> pid\0A\0AReturn the current process id\00", align 16
@.str.79 = private unnamed_addr constant [8 x i8] c"getpgrp\00", align 1
@posix_getpgrp__doc__ = internal global [56 x i8] c"getpgrp() -> pgrp\0A\0AReturn the current process group id.\00", align 16
@.str.80 = private unnamed_addr constant [8 x i8] c"getppid\00", align 1
@posix_getppid__doc__ = internal global [198 x i8] c"getppid() -> ppid\0A\0AReturn the parent's process id.  If the parent process has already exited,\0AWindows machines will still return its id; others systems will return the id\0Aof the 'init' process (1).\00", align 16
@.str.81 = private unnamed_addr constant [7 x i8] c"getuid\00", align 1
@posix_getuid__doc__ = internal global [55 x i8] c"getuid() -> uid\0A\0AReturn the current process's user id.\00", align 16
@.str.82 = private unnamed_addr constant [9 x i8] c"getlogin\00", align 1
@posix_getlogin__doc__ = internal global [52 x i8] c"getlogin() -> string\0A\0AReturn the actual login name.\00", align 16
@.str.83 = private unnamed_addr constant [5 x i8] c"kill\00", align 1
@posix_kill__doc__ = internal global [46 x i8] c"kill(pid, sig)\0A\0AKill a process with a signal.\00", align 16
@.str.84 = private unnamed_addr constant [7 x i8] c"killpg\00", align 1
@posix_killpg__doc__ = internal global [55 x i8] c"killpg(pgid, sig)\0A\0AKill a process group with a signal.\00", align 16
@.str.85 = private unnamed_addr constant [7 x i8] c"setuid\00", align 1
@posix_setuid__doc__ = internal global [48 x i8] c"setuid(uid)\0A\0ASet the current process's user id.\00", align 16
@.str.86 = private unnamed_addr constant [8 x i8] c"seteuid\00", align 1
@posix_seteuid__doc__ = internal global [59 x i8] c"seteuid(uid)\0A\0ASet the current process's effective user id.\00", align 16
@.str.87 = private unnamed_addr constant [8 x i8] c"setegid\00", align 1
@posix_setegid__doc__ = internal global [60 x i8] c"setegid(gid)\0A\0ASet the current process's effective group id.\00", align 16
@.str.88 = private unnamed_addr constant [9 x i8] c"setreuid\00", align 1
@posix_setreuid__doc__ = internal global [77 x i8] c"setreuid(ruid, euid)\0A\0ASet the current process's real and effective user ids.\00", align 16
@.str.89 = private unnamed_addr constant [9 x i8] c"setregid\00", align 1
@posix_setregid__doc__ = internal global [78 x i8] c"setregid(rgid, egid)\0A\0ASet the current process's real and effective group ids.\00", align 16
@.str.90 = private unnamed_addr constant [7 x i8] c"setgid\00", align 1
@posix_setgid__doc__ = internal global [49 x i8] c"setgid(gid)\0A\0ASet the current process's group id.\00", align 16
@.str.91 = private unnamed_addr constant [10 x i8] c"setgroups\00", align 1
@posix_setgroups__doc__ = internal global [64 x i8] c"setgroups(list)\0A\0ASet the groups of the current process to list.\00", align 16
@.str.92 = private unnamed_addr constant [11 x i8] c"initgroups\00", align 1
@posix_initgroups__doc__ = internal global [197 x i8] c"initgroups(username, gid) -> None\0A\0ACall the system initgroups() to initialize the group access list with all of\0Athe groups of which the specified username is a member, plus the specified\0Agroup id.\00", align 16
@.str.93 = private unnamed_addr constant [8 x i8] c"getpgid\00", align 1
@posix_getpgid__doc__ = internal global [54 x i8] c"getpgid(pid) -> pgid\0A\0ACall the system call getpgid().\00", align 16
@.str.94 = private unnamed_addr constant [8 x i8] c"setpgrp\00", align 1
@posix_setpgrp__doc__ = internal global [55 x i8] c"setpgrp()\0A\0AMake this process the process group leader.\00", align 16
@.str.95 = private unnamed_addr constant [5 x i8] c"wait\00", align 1
@posix_wait__doc__ = internal global [65 x i8] c"wait() -> (pid, status)\0A\0AWait for completion of a child process.\00", align 16
@.str.96 = private unnamed_addr constant [6 x i8] c"wait3\00", align 1
@posix_wait3__doc__ = internal global [81 x i8] c"wait3(options) -> (pid, status, rusage)\0A\0AWait for completion of a child process.\00", align 16
@.str.97 = private unnamed_addr constant [6 x i8] c"wait4\00", align 1
@posix_wait4__doc__ = internal global [92 x i8] c"wait4(pid, options) -> (pid, status, rusage)\0A\0AWait for completion of a given child process.\00", align 16
@.str.98 = private unnamed_addr constant [7 x i8] c"waitid\00", align 1
@posix_waitid__doc__ = internal global [424 x i8] c"waitid(idtype, id, options) -> waitid_result\0A\0AWait for the completion of one or more child processes.\0A\0Aidtype can be P_PID, P_PGID or P_ALL.\0Aid specifies the pid to wait on.\0Aoptions is constructed from the ORing of one or more of WEXITED, WSTOPPED\0Aor WCONTINUED and additionally may be ORed with WNOHANG or WNOWAIT.\0AReturns either waitid_result or None if WNOHANG is specified and there are\0Ano children in a waitable state.\00", align 16
@.str.99 = private unnamed_addr constant [8 x i8] c"waitpid\00", align 1
@posix_waitpid__doc__ = internal global [86 x i8] c"waitpid(pid, options) -> (pid, status)\0A\0AWait for completion of a given child process.\00", align 16
@.str.100 = private unnamed_addr constant [7 x i8] c"getsid\00", align 1
@posix_getsid__doc__ = internal global [51 x i8] c"getsid(pid) -> sid\0A\0ACall the system call getsid().\00", align 16
@.str.101 = private unnamed_addr constant [7 x i8] c"setsid\00", align 1
@posix_setsid__doc__ = internal global [41 x i8] c"setsid()\0A\0ACall the system call setsid().\00", align 16
@.str.102 = private unnamed_addr constant [8 x i8] c"setpgid\00", align 1
@posix_setpgid__doc__ = internal global [52 x i8] c"setpgid(pid, pgrp)\0A\0ACall the system call setpgid().\00", align 16
@.str.103 = private unnamed_addr constant [10 x i8] c"tcgetpgrp\00", align 1
@posix_tcgetpgrp__doc__ = internal global [92 x i8] c"tcgetpgrp(fd) -> pgid\0A\0AReturn the process group associated with the terminal given by a fd.\00", align 16
@.str.104 = private unnamed_addr constant [10 x i8] c"tcsetpgrp\00", align 1
@posix_tcsetpgrp__doc__ = internal global [87 x i8] c"tcsetpgrp(fd, pgid)\0A\0ASet the process group associated with the terminal given by a fd.\00", align 16
@.str.105 = private unnamed_addr constant [5 x i8] c"open\00", align 1
@posix_open__doc__ = internal global [379 x i8] c"open(path, flags, mode=0o777, *, dir_fd=None)\0A\0AOpen a file for low level IO.  Returns a file handle (integer).\0A\0AIf dir_fd is not None, it should be a file descriptor open to a directory,\0A  and path should be relative; path will then be relative to that directory.\0Adir_fd may not be implemented on your platform.\0A  If it is unavailable, using it will raise a NotImplementedError.\00", align 16
@.str.106 = private unnamed_addr constant [6 x i8] c"close\00", align 1
@posix_close__doc__ = internal global [55 x i8] c"close(fd)\0A\0AClose a file descriptor (for low level IO).\00", align 16
@.str.107 = private unnamed_addr constant [11 x i8] c"closerange\00", align 1
@posix_closerange__doc__ = internal global [96 x i8] c"closerange(fd_low, fd_high)\0A\0ACloses all file descriptors in [fd_low, fd_high), ignoring errors.\00", align 16
@.str.108 = private unnamed_addr constant [16 x i8] c"device_encoding\00", align 1
@device_encoding__doc__ = internal global [129 x i8] c"device_encoding(fd) -> str\0A\0AReturn a string describing the encoding of the device\0Aif the output is a terminal; else return None.\00", align 16
@.str.109 = private unnamed_addr constant [4 x i8] c"dup\00", align 1
@posix_dup__doc__ = internal global [57 x i8] c"dup(fd) -> fd2\0A\0AReturn a duplicate of a file descriptor.\00", align 16
@.str.110 = private unnamed_addr constant [5 x i8] c"dup2\00", align 1
@posix_dup2__doc__ = internal global [49 x i8] c"dup2(old_fd, new_fd)\0A\0ADuplicate file descriptor.\00", align 16
@.str.111 = private unnamed_addr constant [6 x i8] c"lockf\00", align 1
@posix_lockf__doc__ = internal global [241 x i8] c"lockf(fd, cmd, len)\0A\0AApply, test or remove a POSIX lock on an open file descriptor.\0A\0Afd is an open file descriptor.\0Acmd specifies the command to use - one of F_LOCK, F_TLOCK, F_ULOCK or\0AF_TEST.\0Alen specifies the section of the file to lock.\00", align 16
@.str.112 = private unnamed_addr constant [6 x i8] c"lseek\00", align 1
@posix_lseek__doc__ = internal global [148 x i8] c"lseek(fd, pos, how) -> newpos\0A\0ASet the current position of a file descriptor.\0AReturn the new cursor position in bytes, starting from the beginning.\00", align 16
@.str.113 = private unnamed_addr constant [5 x i8] c"read\00", align 1
@posix_read__doc__ = internal global [55 x i8] c"read(fd, buffersize) -> bytes\0A\0ARead a file descriptor.\00", align 16
@.str.114 = private unnamed_addr constant [6 x i8] c"readv\00", align 1
@posix_readv__doc__ = internal global [373 x i8] c"readv(fd, buffers) -> bytesread\0A\0ARead from a file descriptor fd into a number of mutable, bytes-like\0Aobjects (\22buffers\22).  readv will transfer data into each buffer\0Auntil it is full and then move on to the next buffer in the sequence\0Ato hold the rest of the data.\0A\0Areadv returns the total number of bytes read (which may be less than\0Athe total capacity of all the buffers.\00", align 16
@.str.115 = private unnamed_addr constant [6 x i8] c"pread\00", align 1
@posix_pread__doc__ = internal global [181 x i8] c"pread(fd, buffersize, offset) -> string\0A\0ARead from a file descriptor, fd, at a position of offset. It will read up\0Ato buffersize number of bytes. The file offset remains unchanged.\00", align 16
@.str.116 = private unnamed_addr constant [6 x i8] c"write\00", align 1
@posix_write__doc__ = internal global [67 x i8] c"write(fd, data) -> byteswritten\0A\0AWrite bytes to a file descriptor.\00", align 16
@.str.117 = private unnamed_addr constant [7 x i8] c"writev\00", align 1
@posix_writev__doc__ = internal global [259 x i8] c"writev(fd, buffers) -> byteswritten\0A\0AWrite the contents of *buffers* to file descriptor *fd*. *buffers*\0Amust be a sequence of bytes-like objects.\0A\0Awritev writes the contents of each object to the file descriptor\0Aand returns the total number of bytes written.\00", align 16
@.str.118 = private unnamed_addr constant [7 x i8] c"pwrite\00", align 1
@posix_pwrite__doc__ = internal global [131 x i8] c"pwrite(fd, string, offset) -> byteswritten\0A\0AWrite string to a file descriptor, fd, from offset, leaving the file\0Aoffset unchanged.\00", align 16
@.str.119 = private unnamed_addr constant [9 x i8] c"sendfile\00", align 1
@posix_sendfile__doc__ = internal global [216 x i8] c"sendfile(out, in, offset, nbytes) -> byteswritten\0Asendfile(out, in, offset, nbytes, headers=None, trailers=None, flags=0)\0A            -> byteswritten\0ACopy nbytes bytes from file descriptor in to file descriptor out.\00", align 16
@.str.120 = private unnamed_addr constant [6 x i8] c"fstat\00", align 1
@posix_fstat__doc__ = internal global [99 x i8] c"fstat(fd) -> stat result\0A\0ALike stat(), but for an open file descriptor.\0AEquivalent to stat(fd=fd).\00", align 16
@.str.121 = private unnamed_addr constant [7 x i8] c"isatty\00", align 1
@posix_isatty__doc__ = internal global [129 x i8] c"isatty(fd) -> bool\0A\0AReturn True if the file descriptor 'fd' is an open file descriptor\0Aconnected to the slave end of a terminal.\00", align 16
@.str.122 = private unnamed_addr constant [5 x i8] c"pipe\00", align 1
@posix_pipe__doc__ = internal global [48 x i8] c"pipe() -> (read_end, write_end)\0A\0ACreate a pipe.\00", align 16
@.str.123 = private unnamed_addr constant [6 x i8] c"pipe2\00", align 1
@posix_pipe2__doc__ = internal global [176 x i8] c"pipe2(flags) -> (read_end, write_end)\0A\0ACreate a pipe with flags set atomically.\0Aflags can be constructed by ORing together one or more of these values:\0AO_NONBLOCK, O_CLOEXEC.\0A\00", align 16
@.str.124 = private unnamed_addr constant [7 x i8] c"mkfifo\00", align 1
@posix_mkfifo__doc__ = internal global [346 x i8] c"mkfifo(path, mode=0o666, *, dir_fd=None)\0A\0ACreate a FIFO (a POSIX named pipe).\0A\0AIf dir_fd is not None, it should be a file descriptor open to a directory,\0A  and path should be relative; path will then be relative to that directory.\0Adir_fd may not be implemented on your platform.\0A  If it is unavailable, using it will raise a NotImplementedError.\00", align 16
@.str.125 = private unnamed_addr constant [6 x i8] c"mknod\00", align 1
@posix_mknod__doc__ = internal global [699 x i8] c"mknod(filename, mode=0o600, device=0, *, dir_fd=None)\0A\0ACreate a filesystem node (file, device special file or named pipe)\0Anamed filename. mode specifies both the permissions to use and the\0Atype of node to be created, being combined (bitwise OR) with one of\0AS_IFREG, S_IFCHR, S_IFBLK, and S_IFIFO. For S_IFCHR and S_IFBLK,\0Adevice defines the newly created device special file (probably using\0Aos.makedev()), otherwise it is ignored.\0A\0AIf dir_fd is not None, it should be a file descriptor open to a directory,\0A  and path should be relative; path will then be relative to that directory.\0Adir_fd may not be implemented on your platform.\0A  If it is unavailable, using it will raise a NotImplementedError.\00", align 16
@.str.126 = private unnamed_addr constant [6 x i8] c"major\00", align 1
@posix_major__doc__ = internal global [87 x i8] c"major(device) -> major number\0AExtracts a device major number from a raw device number.\00", align 16
@.str.127 = private unnamed_addr constant [6 x i8] c"minor\00", align 1
@posix_minor__doc__ = internal global [87 x i8] c"minor(device) -> minor number\0AExtracts a device minor number from a raw device number.\00", align 16
@.str.128 = private unnamed_addr constant [8 x i8] c"makedev\00", align 1
@posix_makedev__doc__ = internal global [109 x i8] c"makedev(major, minor) -> device number\0AComposes a raw device number from the major and minor device numbers.\00", align 16
@.str.129 = private unnamed_addr constant [10 x i8] c"ftruncate\00", align 1
@posix_ftruncate__doc__ = internal global [62 x i8] c"ftruncate(fd, length)\0A\0ATruncate a file to a specified length.\00", align 16
@.str.130 = private unnamed_addr constant [9 x i8] c"truncate\00", align 1
@posix_truncate__doc__ = internal global [217 x i8] c"truncate(path, length)\0A\0ATruncate the file given by path to length bytes.\0AOn some platforms, path may also be specified as an open file descriptor.\0A  If this functionality is unavailable, using it raises an exception.\00", align 16
@.str.131 = private unnamed_addr constant [16 x i8] c"posix_fallocate\00", align 1
@posix_posix_fallocate__doc__ = internal global [158 x i8] c"posix_fallocate(fd, offset, len)\0A\0AEnsures that enough disk space is allocated for the file specified by fd\0Astarting from offset and continuing for len bytes.\00", align 16
@.str.132 = private unnamed_addr constant [14 x i8] c"posix_fadvise\00", align 1
@posix_posix_fadvise__doc__ = internal global [400 x i8] c"posix_fadvise(fd, offset, len, advice)\0A\0AAnnounces an intention to access data in a specific pattern thus allowing\0Athe kernel to make optimizations.\0AThe advice applies to the region of the file specified by fd starting at\0Aoffset and continuing for len bytes.\0Aadvice is one of POSIX_FADV_NORMAL, POSIX_FADV_SEQUENTIAL,\0APOSIX_FADV_RANDOM, POSIX_FADV_NOREUSE, POSIX_FADV_WILLNEED or\0APOSIX_FADV_DONTNEED.\00", align 16
@.str.133 = private unnamed_addr constant [7 x i8] c"putenv\00", align 1
@posix_putenv__doc__ = internal global [59 x i8] c"putenv(key, value)\0A\0AChange or add an environment variable.\00", align 16
@.str.134 = private unnamed_addr constant [9 x i8] c"unsetenv\00", align 1
@posix_unsetenv__doc__ = internal global [47 x i8] c"unsetenv(key)\0A\0ADelete an environment variable.\00", align 16
@.str.135 = private unnamed_addr constant [9 x i8] c"strerror\00", align 1
@posix_strerror__doc__ = internal global [71 x i8] c"strerror(code) -> string\0A\0ATranslate an error code to a message string.\00", align 16
@.str.136 = private unnamed_addr constant [7 x i8] c"fchdir\00", align 1
@posix_fchdir__doc__ = internal global [142 x i8] c"fchdir(fd)\0A\0AChange to the directory of the given file descriptor.  fd must be\0Aopened on a directory, not a file.  Equivalent to os.chdir(fd).\00", align 16
@.str.137 = private unnamed_addr constant [6 x i8] c"fsync\00", align 1
@posix_fsync__doc__ = internal global [64 x i8] c"fsync(fildes)\0A\0Aforce write of file with filedescriptor to disk.\00", align 16
@.str.138 = private unnamed_addr constant [5 x i8] c"sync\00", align 1
@posix_sync__doc__ = internal global [43 x i8] c"sync()\0A\0AForce write of everything to disk.\00", align 16
@.str.139 = private unnamed_addr constant [10 x i8] c"fdatasync\00", align 1
@posix_fdatasync__doc__ = internal global [104 x i8] c"fdatasync(fildes)\0A\0Aforce write of file with filedescriptor to disk.\0A does not force update of metadata.\00", align 16
@.str.140 = private unnamed_addr constant [10 x i8] c"WCOREDUMP\00", align 1
@posix_WCOREDUMP__doc__ = internal global [100 x i8] c"WCOREDUMP(status) -> bool\0A\0AReturn True if the process returning 'status' was dumped to a core file.\00", align 16
@.str.141 = private unnamed_addr constant [13 x i8] c"WIFCONTINUED\00", align 1
@posix_WIFCONTINUED__doc__ = internal global [115 x i8] c"WIFCONTINUED(status) -> bool\0A\0AReturn True if the process returning 'status' was continued from a\0Ajob control stop.\00", align 16
@.str.142 = private unnamed_addr constant [11 x i8] c"WIFSTOPPED\00", align 1
@posix_WIFSTOPPED__doc__ = internal global [87 x i8] c"WIFSTOPPED(status) -> bool\0A\0AReturn True if the process returning 'status' was stopped.\00", align 16
@.str.143 = private unnamed_addr constant [12 x i8] c"WIFSIGNALED\00", align 1
@posix_WIFSIGNALED__doc__ = internal global [103 x i8] c"WIFSIGNALED(status) -> bool\0A\0AReturn True if the process returning 'status' was terminated by a signal.\00", align 16
@.str.144 = private unnamed_addr constant [10 x i8] c"WIFEXITED\00", align 1
@posix_WIFEXITED__doc__ = internal global [110 x i8] c"WIFEXITED(status) -> bool\0A\0AReturn true if the process returning 'status' exited using the exit()\0Asystem call.\00", align 16
@.str.145 = private unnamed_addr constant [12 x i8] c"WEXITSTATUS\00", align 1
@posix_WEXITSTATUS__doc__ = internal global [78 x i8] c"WEXITSTATUS(status) -> integer\0A\0AReturn the process return code from 'status'.\00", align 16
@.str.146 = private unnamed_addr constant [9 x i8] c"WTERMSIG\00", align 1
@posix_WTERMSIG__doc__ = internal global [109 x i8] c"WTERMSIG(status) -> integer\0A\0AReturn the signal that terminated the process that provided the 'status'\0Avalue.\00", align 16
@.str.147 = private unnamed_addr constant [9 x i8] c"WSTOPSIG\00", align 1
@posix_WSTOPSIG__doc__ = internal global [106 x i8] c"WSTOPSIG(status) -> integer\0A\0AReturn the signal that stopped the process that provided\0Athe 'status' value.\00", align 16
@.str.148 = private unnamed_addr constant [9 x i8] c"fstatvfs\00", align 1
@posix_fstatvfs__doc__ = internal global [108 x i8] c"fstatvfs(fd) -> statvfs result\0A\0APerform an fstatvfs system call on the given fd.\0AEquivalent to statvfs(fd).\00", align 16
@.str.149 = private unnamed_addr constant [8 x i8] c"statvfs\00", align 1
@posix_statvfs__doc__ = internal global [251 x i8] c"statvfs(path)\0A\0APerform a statvfs system call on the given path.\0A\0Apath may always be specified as a string.\0AOn some platforms, path may also be specified as an open file descriptor.\0A  If this functionality is unavailable, using it raises an exception.\00", align 16
@.str.150 = private unnamed_addr constant [8 x i8] c"confstr\00", align 1
@posix_confstr__doc__ = internal global [79 x i8] c"confstr(name) -> string\0A\0AReturn a string-valued system configuration variable.\00", align 16
@.str.151 = private unnamed_addr constant [8 x i8] c"sysconf\00", align 1
@posix_sysconf__doc__ = internal global [82 x i8] c"sysconf(name) -> integer\0A\0AReturn an integer-valued system configuration variable.\00", align 16
@.str.152 = private unnamed_addr constant [10 x i8] c"fpathconf\00", align 1
@posix_fpathconf__doc__ = internal global [129 x i8] c"fpathconf(fd, name) -> integer\0A\0AReturn the configuration limit name for the file descriptor fd.\0AIf there is no limit, return -1.\00", align 16
@.str.153 = private unnamed_addr constant [9 x i8] c"pathconf\00", align 1
@posix_pathconf__doc__ = internal global [278 x i8] c"pathconf(path, name) -> integer\0A\0AReturn the configuration limit name for the file or directory path.\0AIf there is no limit, return -1.\0AOn some platforms, path may also be specified as an open file descriptor.\0A  If this functionality is unavailable, using it raises an exception.\00", align 16
@.str.154 = private unnamed_addr constant [6 x i8] c"abort\00", align 1
@posix_abort__doc__ = internal global [163 x i8] c"abort() -> does not return!\0A\0AAbort the interpreter immediately.  This 'dumps core' or otherwise fails\0Ain the hardest way possible on the hosting operating system.\00", align 16
@.str.155 = private unnamed_addr constant [11 x i8] c"getloadavg\00", align 1
@posix_getloadavg__doc__ = internal global [193 x i8] c"getloadavg() -> (float, float, float)\0A\0AReturn the number of processes in the system run queue averaged over\0Athe last 1, 5, and 15 minutes or raises OSError if the load average\0Awas unobtainable\00", align 16
@.str.156 = private unnamed_addr constant [8 x i8] c"urandom\00", align 1
@posix_urandom__doc__ = internal global [73 x i8] c"urandom(n) -> str\0A\0AReturn n random bytes suitable for cryptographic use.\00", align 16
@.str.157 = private unnamed_addr constant [10 x i8] c"setresuid\00", align 1
@posix_setresuid__doc__ = internal global [92 x i8] c"setresuid(ruid, euid, suid)\0A\0ASet the current process's real, effective, and saved user ids.\00", align 16
@.str.158 = private unnamed_addr constant [10 x i8] c"setresgid\00", align 1
@posix_setresgid__doc__ = internal global [93 x i8] c"setresgid(rgid, egid, sgid)\0A\0ASet the current process's real, effective, and saved group ids.\00", align 16
@.str.159 = private unnamed_addr constant [10 x i8] c"getresuid\00", align 1
@posix_getresuid__doc__ = internal global [107 x i8] c"getresuid() -> (ruid, euid, suid)\0A\0AGet tuple of the current process's real, effective, and saved user ids.\00", align 16
@.str.160 = private unnamed_addr constant [10 x i8] c"getresgid\00", align 1
@posix_getresgid__doc__ = internal global [108 x i8] c"getresgid() -> (rgid, egid, sgid)\0A\0AGet tuple of the current process's real, effective, and saved group ids.\00", align 16
@.str.161 = private unnamed_addr constant [9 x i8] c"setxattr\00", align 1
@posix_setxattr__doc__ = internal global [347 x i8] c"setxattr(path, attribute, value, flags=0, *, follow_symlinks=True)\0A\0ASet extended attribute attribute on path to value.\0Apath may be either a string or an open file descriptor.\0AIf follow_symlinks is False, and the last element of the path is a symbolic\0A  link, setxattr will modify the symbolic link itself instead of the file\0A  the link points to.\00", align 16
@.str.162 = private unnamed_addr constant [9 x i8] c"getxattr\00", align 1
@posix_getxattr__doc__ = internal global [349 x i8] c"getxattr(path, attribute, *, follow_symlinks=True) -> value\0A\0AReturn the value of extended attribute attribute on path.\0A\0Apath may be either a string or an open file descriptor.\0AIf follow_symlinks is False, and the last element of the path is a symbolic\0A  link, getxattr will examine the symbolic link itself instead of the file\0A  the link points to.\00", align 16
@.str.163 = private unnamed_addr constant [12 x i8] c"removexattr\00", align 1
@posix_removexattr__doc__ = internal global [331 x i8] c"removexattr(path, attribute, *, follow_symlinks=True)\0A\0ARemove extended attribute attribute on path.\0Apath may be either a string or an open file descriptor.\0AIf follow_symlinks is False, and the last element of the path is a symbolic\0A  link, removexattr will modify the symbolic link itself instead of the file\0A  the link points to.\00", align 16
@.str.164 = private unnamed_addr constant [10 x i8] c"listxattr\00", align 1
@posix_listxattr__doc__ = internal global [393 x i8] c"listxattr(path='.', *, follow_symlinks=True)\0A\0AReturn a list of extended attributes on path.\0A\0Apath may be either None, a string, or an open file descriptor.\0Aif path is None, listxattr will examine the current directory.\0AIf follow_symlinks is False, and the last element of the path is a symbolic\0A  link, listxattr will examine the symbolic link itself instead of the file\0A  the link points to.\00", align 16
@.str.165 = private unnamed_addr constant [18 x i8] c"get_terminal_size\00", align 1
@termsize__doc__ = internal global [467 x i8] c"Return the size of the terminal window as (columns, lines).\0A\0AThe optional argument fd (default standard output) specifies\0Awhich file descriptor should be queried.\0A\0AIf the file descriptor is not connected to a terminal, an OSError\0Ais thrown.\0A\0AThis function will only be defined if an implementation is\0Aavailable for this system.\0A\0Ashutil.get_terminal_size is the high-level function which should \0Anormally be used, os.get_terminal_size is the low-level implementation.\00", align 16
@.str.166 = private unnamed_addr constant [10 x i8] c"cpu_count\00", align 1
@posix_cpu_count__doc__ = internal global [110 x i8] c"cpu_count() -> integer\0A\0AReturn the number of CPUs in the system, or None if this value cannot be\0Aestablished.\00", align 16
@.str.167 = private unnamed_addr constant [16 x i8] c"get_inheritable\00", align 1
@get_inheritable__doc__ = internal global [89 x i8] c"get_inheritable(fd) -> bool\0A\0AGet the close-on-exe flag of the specified file descriptor.\00", align 16
@.str.168 = private unnamed_addr constant [16 x i8] c"set_inheritable\00", align 1
@set_inheritable__doc__ = internal global [93 x i8] c"set_inheritable(fd, inheritable)\0A\0ASet the inheritable flag of the specified file descriptor.\00", align 16
@os_stat._keywords = internal global [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.170, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.171, i32 0, i32 0), i8* null], align 16
@.str.169 = private unnamed_addr constant [5 x i8] c"path\00", align 1
@.str.170 = private unnamed_addr constant [7 x i8] c"dir_fd\00", align 1
@.str.171 = private unnamed_addr constant [16 x i8] c"follow_symlinks\00", align 1
@.str.172 = private unnamed_addr constant [13 x i8] c"O&|$O&p:stat\00", align 1
@.str.173 = private unnamed_addr constant [39 x i8] c"%s%scan't specify None for %s argument\00", align 1
@.str.174 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.175 = private unnamed_addr constant [25 x i8] c"string, bytes or integer\00", align 1
@.str.176 = private unnamed_addr constant [34 x i8] c"%s%sillegal type for %s parameter\00", align 1
@PyExc_ValueError = external global %struct._object*, align 8
@.str.177 = private unnamed_addr constant [33 x i8] c"%s%sembedded NUL character in %s\00", align 1
@.str.178 = private unnamed_addr constant [34 x i8] c"argument should be %s, not %.200s\00", align 1
@.str.179 = private unnamed_addr constant [27 x i8] c"fd is greater than maximum\00", align 1
@.str.180 = private unnamed_addr constant [24 x i8] c"fd is less than minimum\00", align 1
@.str.181 = private unnamed_addr constant [47 x i8] c"%s: can't specify dir_fd without matching path\00", align 1
@.str.182 = private unnamed_addr constant [37 x i8] c"%s: can't specify both dir_fd and fd\00", align 1
@.str.183 = private unnamed_addr constant [47 x i8] c"%s: cannot use fd and follow_symlinks together\00", align 1
@_stat_float_times = internal unnamed_addr global i32 1, align 4
@os_access._keywords = internal global [6 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.184, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.170, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.185, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.171, i32 0, i32 0), i8* null], align 16
@.str.184 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@.str.185 = private unnamed_addr constant [14 x i8] c"effective_ids\00", align 1
@.str.186 = private unnamed_addr constant [17 x i8] c"O&i|$O&pp:access\00", align 1
@.str.187 = private unnamed_addr constant [10 x i8] c"i:ttyname\00", align 1
@posix_chdir.keywords = internal global [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.169, i32 0, i32 0), i8* null], align 16
@.str.188 = private unnamed_addr constant [9 x i8] c"O&:chdir\00", align 1
@posix_chmod.keywords = internal global [5 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.184, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.170, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.171, i32 0, i32 0), i8* null], align 16
@.str.189 = private unnamed_addr constant [15 x i8] c"O&i|$O&p:chmod\00", align 1
@.str.190 = private unnamed_addr constant [10 x i8] c"ii:fchmod\00", align 1
@posix_chown.keywords = internal global [6 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.191, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.170, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.171, i32 0, i32 0), i8* null], align 16
@.str.191 = private unnamed_addr constant [4 x i8] c"uid\00", align 1
@.str.192 = private unnamed_addr constant [4 x i8] c"gid\00", align 1
@.str.193 = private unnamed_addr constant [18 x i8] c"O&O&O&|$O&p:chown\00", align 1
@.str.194 = private unnamed_addr constant [13 x i8] c"iO&O&:fchown\00", align 1
@.str.195 = private unnamed_addr constant [14 x i8] c"O&O&O&:lchown\00", align 1
@.str.196 = private unnamed_addr constant [10 x i8] c"O&:chroot\00", align 1
@posix_link.keywords = internal global [6 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.197, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.171, i32 0, i32 0), i8* null], align 16
@.str.197 = private unnamed_addr constant [4 x i8] c"src\00", align 1
@.str.198 = private unnamed_addr constant [4 x i8] c"dst\00", align 1
@.str.199 = private unnamed_addr constant [11 x i8] c"src_dir_fd\00", align 1
@.str.200 = private unnamed_addr constant [11 x i8] c"dst_dir_fd\00", align 1
@.str.201 = private unnamed_addr constant [16 x i8] c"O&O&|O&O&p:link\00", align 1
@PyExc_NotImplementedError = external global %struct._object*, align 8
@.str.202 = private unnamed_addr constant [40 x i8] c"link: src and dst must be the same type\00", align 1
@posix_listdir.keywords = internal global [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.169, i32 0, i32 0), i8* null], align 16
@.str.203 = private unnamed_addr constant [12 x i8] c"|O&:listdir\00", align 1
@.str.204 = private unnamed_addr constant [2 x i8] c".\00", align 1
@posix_lstat.keywords = internal global [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.170, i32 0, i32 0), i8* null], align 16
@.str.205 = private unnamed_addr constant [13 x i8] c"O&|$O&:lstat\00", align 1
@posix_mkdir.keywords = internal global [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.184, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.170, i32 0, i32 0), i8* null], align 16
@.str.206 = private unnamed_addr constant [14 x i8] c"O&|i$O&:mkdir\00", align 1
@.str.207 = private unnamed_addr constant [7 x i8] c"i:nice\00", align 1
@.str.208 = private unnamed_addr constant [3 x i8] c"ii\00", align 1
@.str.209 = private unnamed_addr constant [4 x i8] c"iii\00", align 1
@posix_readlink.keywords = internal global [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.170, i32 0, i32 0), i8* null], align 16
@.str.210 = private unnamed_addr constant [16 x i8] c"O&|$O&:readlink\00", align 1
@internal_rename.keywords = internal global [5 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.197, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.200, i32 0, i32 0), i8* null], align 16
@.str.211 = private unnamed_addr constant [12 x i8] c"O&O&|$O&O&:\00", align 1
@.str.212 = private unnamed_addr constant [38 x i8] c"%s: src and dst must be the same type\00", align 1
@posix_rmdir.keywords = internal global [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.170, i32 0, i32 0), i8* null], align 16
@.str.213 = private unnamed_addr constant [13 x i8] c"O&|$O&:rmdir\00", align 1
@.str.214 = private unnamed_addr constant [20 x i8] c"|i:stat_float_times\00", align 1
@PyExc_DeprecationWarning = external global %struct._object*, align 8
@.str.215 = private unnamed_addr constant [33 x i8] c"stat_float_times() is deprecated\00", align 1
@posix_symlink.keywords = internal global [5 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.197, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.216, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.170, i32 0, i32 0), i8* null], align 16
@.str.216 = private unnamed_addr constant [20 x i8] c"target_is_directory\00", align 1
@.str.217 = private unnamed_addr constant [18 x i8] c"O&O&|i$O&:symlink\00", align 1
@.str.218 = private unnamed_addr constant [43 x i8] c"symlink: src and dst must be the same type\00", align 1
@.str.219 = private unnamed_addr constant [10 x i8] c"O&:system\00", align 1
@.str.220 = private unnamed_addr constant [8 x i8] c"i:umask\00", align 1
@posix_unlink.keywords = internal global [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.170, i32 0, i32 0), i8* null], align 16
@.str.221 = private unnamed_addr constant [14 x i8] c"O&|$O&:unlink\00", align 1
@.str.222 = private unnamed_addr constant [3 x i8] c"ns\00", align 1
@.str.223 = private unnamed_addr constant [16 x i8] c"O&|O$OO&p:utime\00", align 1
@.str.224 = private unnamed_addr constant [59 x i8] c"utime: you may specify either 'times' or 'ns' but not both\00", align 1
@PyTuple_Type = external global %struct._typeobject, align 8
@.str.225 = private unnamed_addr constant [58 x i8] c"utime: 'times' must be either a tuple of two ints or None\00", align 1
@.str.226 = private unnamed_addr constant [40 x i8] c"utime: 'ns' must be a tuple of two ints\00", align 1
@.str.227 = private unnamed_addr constant [8 x i8] c"i:_exit\00", align 1
@.str.228 = private unnamed_addr constant [10 x i8] c"O&O:execv\00", align 1
@.str.229 = private unnamed_addr constant [38 x i8] c"execv() arg 2 must be a tuple or list\00", align 1
@.str.230 = private unnamed_addr constant [32 x i8] c"execv() arg 2 must not be empty\00", align 1
@posix_execve.keywords = internal global [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.231, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.232, i32 0, i32 0), i8* null], align 16
@.str.231 = private unnamed_addr constant [5 x i8] c"argv\00", align 1
@.str.232 = private unnamed_addr constant [12 x i8] c"environment\00", align 1
@.str.233 = private unnamed_addr constant [12 x i8] c"O&OO:execve\00", align 1
@.str.234 = private unnamed_addr constant [37 x i8] c"execve: argv must be a tuple or list\00", align 1
@.str.235 = private unnamed_addr constant [45 x i8] c"execve: environment must be a mapping object\00", align 1
@.str.236 = private unnamed_addr constant [41 x i8] c"env.keys() or env.values() is not a list\00", align 1
@.str.237 = private unnamed_addr constant [6 x i8] c"%s=%s\00", align 1
@PyExc_RuntimeError = external global %struct._object*, align 8
@.str.238 = private unnamed_addr constant [28 x i8] c"not holding the import lock\00", align 1
@.str.239 = private unnamed_addr constant [25 x i8] c"i:sched_get_priority_max\00", align 1
@.str.240 = private unnamed_addr constant [25 x i8] c"i:sched_get_priority_min\00", align 1
@.str.241 = private unnamed_addr constant [17 x i8] c"i:sched_getparam\00", align 1
@.str.242 = private unnamed_addr constant [21 x i8] c"i:sched_getscheduler\00", align 1
@.str.243 = private unnamed_addr constant [24 x i8] c"i:sched_rr_get_interval\00", align 1
@.str.244 = private unnamed_addr constant [19 x i8] c"iO&:sched_setparam\00", align 1
@.str.245 = private unnamed_addr constant [31 x i8] c"must have a sched_param object\00", align 1
@.str.246 = private unnamed_addr constant [28 x i8] c"sched_priority out of range\00", align 1
@.str.247 = private unnamed_addr constant [24 x i8] c"iiO&:sched_setscheduler\00", align 1
@.str.248 = private unnamed_addr constant [21 x i8] c"iO:sched_setaffinity\00", align 1
@.str.249 = private unnamed_addr constant [54 x i8] c"expected an iterator of ints, but iterator yielded %R\00", align 1
@.str.250 = private unnamed_addr constant [20 x i8] c"negative CPU number\00", align 1
@.str.251 = private unnamed_addr constant [21 x i8] c"CPU number too large\00", align 1
@.str.252 = private unnamed_addr constant [20 x i8] c"i:sched_getaffinity\00", align 1
@.str.253 = private unnamed_addr constant [42 x i8] c"could not allocate a large enough CPU set\00", align 1
@.str.254 = private unnamed_addr constant [5 x i8] c"(ii)\00", align 1
@.str.255 = private unnamed_addr constant [5 x i8] c"(Ni)\00", align 1
@.str.256 = private unnamed_addr constant [17 x i8] c"sO&:getgrouplist\00", align 1
@.str.257 = private unnamed_addr constant [31 x i8] c"unable to determine login name\00", align 1
@.str.258 = private unnamed_addr constant [8 x i8] c"ii:kill\00", align 1
@.str.259 = private unnamed_addr constant [10 x i8] c"ii:killpg\00", align 1
@.str.260 = private unnamed_addr constant [10 x i8] c"O&:setuid\00", align 1
@.str.261 = private unnamed_addr constant [11 x i8] c"O&:seteuid\00", align 1
@.str.262 = private unnamed_addr constant [11 x i8] c"O&:setegid\00", align 1
@.str.263 = private unnamed_addr constant [14 x i8] c"O&O&:setreuid\00", align 1
@.str.264 = private unnamed_addr constant [14 x i8] c"O&O&:setregid\00", align 1
@.str.265 = private unnamed_addr constant [10 x i8] c"O&:setgid\00", align 1
@.str.266 = private unnamed_addr constant [38 x i8] c"setgroups argument must be a sequence\00", align 1
@.str.267 = private unnamed_addr constant [16 x i8] c"too many groups\00", align 1
@.str.268 = private unnamed_addr constant [24 x i8] c"groups must be integers\00", align 1
@.str.269 = private unnamed_addr constant [16 x i8] c"O&O&:initgroups\00", align 1
@.str.270 = private unnamed_addr constant [10 x i8] c"i:getpgid\00", align 1
@.str.271 = private unnamed_addr constant [3 x i8] c"Ni\00", align 1
@.str.272 = private unnamed_addr constant [8 x i8] c"i:wait3\00", align 1
@wait_helper.struct_rusage = internal unnamed_addr global %struct._object* null, align 8
@wait_helper.PyId_struct_rusage = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.273, i32 0, i32 0), %struct._object* null }, align 8
@.str.273 = private unnamed_addr constant [14 x i8] c"struct_rusage\00", align 1
@.str.274 = private unnamed_addr constant [9 x i8] c"resource\00", align 1
@.str.275 = private unnamed_addr constant [4 x i8] c"NiN\00", align 1
@.str.276 = private unnamed_addr constant [9 x i8] c"ii:wait4\00", align 1
@.str.277 = private unnamed_addr constant [11 x i8] c"iii:waitid\00", align 1
@.str.278 = private unnamed_addr constant [11 x i8] c"ii:waitpid\00", align 1
@.str.279 = private unnamed_addr constant [9 x i8] c"i:getsid\00", align 1
@.str.280 = private unnamed_addr constant [11 x i8] c"ii:setpgid\00", align 1
@.str.281 = private unnamed_addr constant [12 x i8] c"i:tcgetpgrp\00", align 1
@.str.282 = private unnamed_addr constant [13 x i8] c"ii:tcsetpgrp\00", align 1
@posix_open.keywords = internal global [5 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.283, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.184, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.170, i32 0, i32 0), i8* null], align 16
@.str.283 = private unnamed_addr constant [6 x i8] c"flags\00", align 1
@_Py_open_cloexec_works = external global i32, align 4
@.str.284 = private unnamed_addr constant [14 x i8] c"O&i|i$O&:open\00", align 1
@.str.285 = private unnamed_addr constant [8 x i8] c"i:close\00", align 1
@.str.286 = private unnamed_addr constant [14 x i8] c"ii:closerange\00", align 1
@.str.287 = private unnamed_addr constant [18 x i8] c"i:device_encoding\00", align 1
@.str.288 = private unnamed_addr constant [6 x i8] c"i:dup\00", align 1
@posix_dup2.keywords = internal global [4 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.289, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.290, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.291, i32 0, i32 0), i8* null], align 16
@.str.289 = private unnamed_addr constant [3 x i8] c"fd\00", align 1
@.str.290 = private unnamed_addr constant [4 x i8] c"fd2\00", align 1
@.str.291 = private unnamed_addr constant [12 x i8] c"inheritable\00", align 1
@.str.292 = private unnamed_addr constant [10 x i8] c"ii|i:dup2\00", align 1
@.str.293 = private unnamed_addr constant [11 x i8] c"iiO&:lockf\00", align 1
@.str.294 = private unnamed_addr constant [10 x i8] c"iOi:lseek\00", align 1
@.str.295 = private unnamed_addr constant [8 x i8] c"ii:read\00", align 1
@.str.296 = private unnamed_addr constant [9 x i8] c"iO:readv\00", align 1
@.str.297 = private unnamed_addr constant [33 x i8] c"readv() arg 2 must be a sequence\00", align 1
@.str.298 = private unnamed_addr constant [11 x i8] c"iiO&:pread\00", align 1
@.str.299 = private unnamed_addr constant [10 x i8] c"iy*:write\00", align 1
@.str.300 = private unnamed_addr constant [10 x i8] c"iO:writev\00", align 1
@.str.301 = private unnamed_addr constant [34 x i8] c"writev() arg 2 must be a sequence\00", align 1
@.str.302 = private unnamed_addr constant [13 x i8] c"iy*O&:pwrite\00", align 1
@posix_sendfile.keywords = internal global [5 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.303, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.304, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.305, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.306, i32 0, i32 0), i8* null], align 16
@.str.303 = private unnamed_addr constant [4 x i8] c"out\00", align 1
@.str.304 = private unnamed_addr constant [3 x i8] c"in\00", align 1
@.str.305 = private unnamed_addr constant [7 x i8] c"offset\00", align 1
@.str.306 = private unnamed_addr constant [6 x i8] c"count\00", align 1
@.str.307 = private unnamed_addr constant [14 x i8] c"iiOn:sendfile\00", align 1
@.str.308 = private unnamed_addr constant [2 x i8] c"n\00", align 1
@.str.309 = private unnamed_addr constant [8 x i8] c"i:fstat\00", align 1
@.str.310 = private unnamed_addr constant [9 x i8] c"i:isatty\00", align 1
@posix_mkfifo.keywords = internal global [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.184, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.170, i32 0, i32 0), i8* null], align 16
@.str.311 = private unnamed_addr constant [15 x i8] c"O&|i$O&:mkfifo\00", align 1
@posix_mknod.keywords = internal global [5 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.184, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.312, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.170, i32 0, i32 0), i8* null], align 16
@.str.312 = private unnamed_addr constant [7 x i8] c"device\00", align 1
@.str.313 = private unnamed_addr constant [15 x i8] c"O&|ii$O&:mknod\00", align 1
@.str.314 = private unnamed_addr constant [8 x i8] c"i:major\00", align 1
@.str.315 = private unnamed_addr constant [8 x i8] c"i:minor\00", align 1
@.str.316 = private unnamed_addr constant [11 x i8] c"ii:makedev\00", align 1
@.str.317 = private unnamed_addr constant [14 x i8] c"iO&:ftruncate\00", align 1
@posix_truncate.keywords = internal global [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.318, i32 0, i32 0), i8* null], align 16
@.str.318 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@.str.319 = private unnamed_addr constant [14 x i8] c"O&O&:truncate\00", align 1
@.str.320 = private unnamed_addr constant [22 x i8] c"iO&O&:posix_fallocate\00", align 1
@.str.321 = private unnamed_addr constant [21 x i8] c"iO&O&i:posix_fadvise\00", align 1
@.str.322 = private unnamed_addr constant [12 x i8] c"O&O&:putenv\00", align 1
@.str.323 = private unnamed_addr constant [12 x i8] c"O&:unsetenv\00", align 1
@.str.324 = private unnamed_addr constant [11 x i8] c"i:strerror\00", align 1
@.str.325 = private unnamed_addr constant [33 x i8] c"strerror() argument out of range\00", align 1
@.str.326 = private unnamed_addr constant [16 x i8] c"surrogateescape\00", align 1
@.str.327 = private unnamed_addr constant [12 x i8] c"i:WCOREDUMP\00", align 1
@.str.328 = private unnamed_addr constant [13 x i8] c"i:WCONTINUED\00", align 1
@.str.329 = private unnamed_addr constant [13 x i8] c"i:WIFSTOPPED\00", align 1
@.str.330 = private unnamed_addr constant [14 x i8] c"i:WIFSIGNALED\00", align 1
@.str.331 = private unnamed_addr constant [12 x i8] c"i:WIFEXITED\00", align 1
@.str.332 = private unnamed_addr constant [14 x i8] c"i:WEXITSTATUS\00", align 1
@.str.333 = private unnamed_addr constant [2 x i8] c"i\00", align 1
@.str.334 = private unnamed_addr constant [11 x i8] c"i:WTERMSIG\00", align 1
@.str.335 = private unnamed_addr constant [11 x i8] c"i:WSTOPSIG\00", align 1
@.str.336 = private unnamed_addr constant [11 x i8] c"i:fstatvfs\00", align 1
@posix_statvfs.keywords = internal global [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.169, i32 0, i32 0), i8* null], align 16
@.str.337 = private unnamed_addr constant [11 x i8] c"O&:statvfs\00", align 1
@.str.338 = private unnamed_addr constant [11 x i8] c"O&:confstr\00", align 1
@posix_constants_confstr = internal global [27 x %struct.constdef] [%struct.constdef { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.341, i32 0, i32 0), i64 2 }, %struct.constdef { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.342, i32 0, i32 0), i64 3 }, %struct.constdef { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.343, i32 0, i32 0), i64 1004 }, %struct.constdef { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.344, i32 0, i32 0), i64 1005 }, %struct.constdef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.345, i32 0, i32 0), i64 1006 }, %struct.constdef { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.346, i32 0, i32 0), i64 1007 }, %struct.constdef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.347, i32 0, i32 0), i64 1000 }, %struct.constdef { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.348, i32 0, i32 0), i64 1001 }, %struct.constdef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.349, i32 0, i32 0), i64 1002 }, %struct.constdef { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.350, i32 0, i32 0), i64 1003 }, %struct.constdef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.351, i32 0, i32 0), i64 0 }, %struct.constdef { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.352, i32 0, i32 0), i64 1100 }, %struct.constdef { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.353, i32 0, i32 0), i64 1101 }, %struct.constdef { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.354, i32 0, i32 0), i64 1102 }, %struct.constdef { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.355, i32 0, i32 0), i64 1103 }, %struct.constdef { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.356, i32 0, i32 0), i64 1104 }, %struct.constdef { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.357, i32 0, i32 0), i64 1105 }, %struct.constdef { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.358, i32 0, i32 0), i64 1106 }, %struct.constdef { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.359, i32 0, i32 0), i64 1107 }, %struct.constdef { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.360, i32 0, i32 0), i64 1108 }, %struct.constdef { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.361, i32 0, i32 0), i64 1109 }, %struct.constdef { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.362, i32 0, i32 0), i64 1110 }, %struct.constdef { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.363, i32 0, i32 0), i64 1111 }, %struct.constdef { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.364, i32 0, i32 0), i64 1112 }, %struct.constdef { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.365, i32 0, i32 0), i64 1113 }, %struct.constdef { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.366, i32 0, i32 0), i64 1114 }, %struct.constdef { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.367, i32 0, i32 0), i64 1115 }], align 16
@.str.339 = private unnamed_addr constant [48 x i8] c"configuration names must be strings or integers\00", align 1
@.str.340 = private unnamed_addr constant [32 x i8] c"unrecognized configuration name\00", align 1
@.str.341 = private unnamed_addr constant [20 x i8] c"CS_GNU_LIBC_VERSION\00", align 1
@.str.342 = private unnamed_addr constant [26 x i8] c"CS_GNU_LIBPTHREAD_VERSION\00", align 1
@.str.343 = private unnamed_addr constant [16 x i8] c"CS_LFS64_CFLAGS\00", align 1
@.str.344 = private unnamed_addr constant [17 x i8] c"CS_LFS64_LDFLAGS\00", align 1
@.str.345 = private unnamed_addr constant [14 x i8] c"CS_LFS64_LIBS\00", align 1
@.str.346 = private unnamed_addr constant [19 x i8] c"CS_LFS64_LINTFLAGS\00", align 1
@.str.347 = private unnamed_addr constant [14 x i8] c"CS_LFS_CFLAGS\00", align 1
@.str.348 = private unnamed_addr constant [15 x i8] c"CS_LFS_LDFLAGS\00", align 1
@.str.349 = private unnamed_addr constant [12 x i8] c"CS_LFS_LIBS\00", align 1
@.str.350 = private unnamed_addr constant [17 x i8] c"CS_LFS_LINTFLAGS\00", align 1
@.str.351 = private unnamed_addr constant [8 x i8] c"CS_PATH\00", align 1
@.str.352 = private unnamed_addr constant [27 x i8] c"CS_XBS5_ILP32_OFF32_CFLAGS\00", align 1
@.str.353 = private unnamed_addr constant [28 x i8] c"CS_XBS5_ILP32_OFF32_LDFLAGS\00", align 1
@.str.354 = private unnamed_addr constant [25 x i8] c"CS_XBS5_ILP32_OFF32_LIBS\00", align 1
@.str.355 = private unnamed_addr constant [30 x i8] c"CS_XBS5_ILP32_OFF32_LINTFLAGS\00", align 1
@.str.356 = private unnamed_addr constant [28 x i8] c"CS_XBS5_ILP32_OFFBIG_CFLAGS\00", align 1
@.str.357 = private unnamed_addr constant [29 x i8] c"CS_XBS5_ILP32_OFFBIG_LDFLAGS\00", align 1
@.str.358 = private unnamed_addr constant [26 x i8] c"CS_XBS5_ILP32_OFFBIG_LIBS\00", align 1
@.str.359 = private unnamed_addr constant [31 x i8] c"CS_XBS5_ILP32_OFFBIG_LINTFLAGS\00", align 1
@.str.360 = private unnamed_addr constant [26 x i8] c"CS_XBS5_LP64_OFF64_CFLAGS\00", align 1
@.str.361 = private unnamed_addr constant [27 x i8] c"CS_XBS5_LP64_OFF64_LDFLAGS\00", align 1
@.str.362 = private unnamed_addr constant [24 x i8] c"CS_XBS5_LP64_OFF64_LIBS\00", align 1
@.str.363 = private unnamed_addr constant [29 x i8] c"CS_XBS5_LP64_OFF64_LINTFLAGS\00", align 1
@.str.364 = private unnamed_addr constant [28 x i8] c"CS_XBS5_LPBIG_OFFBIG_CFLAGS\00", align 1
@.str.365 = private unnamed_addr constant [29 x i8] c"CS_XBS5_LPBIG_OFFBIG_LDFLAGS\00", align 1
@.str.366 = private unnamed_addr constant [26 x i8] c"CS_XBS5_LPBIG_OFFBIG_LIBS\00", align 1
@.str.367 = private unnamed_addr constant [31 x i8] c"CS_XBS5_LPBIG_OFFBIG_LINTFLAGS\00", align 1
@.str.368 = private unnamed_addr constant [11 x i8] c"O&:sysconf\00", align 1
@posix_constants_sysconf = internal global [134 x %struct.constdef] [%struct.constdef { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.369, i32 0, i32 0), i64 95 }, %struct.constdef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.370, i32 0, i32 0), i64 47 }, %struct.constdef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.371, i32 0, i32 0), i64 48 }, %struct.constdef { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.372, i32 0, i32 0), i64 96 }, %struct.constdef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.373, i32 0, i32 0), i64 49 }, %struct.constdef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.374, i32 0, i32 0), i64 50 }, %struct.constdef { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.375, i32 0, i32 0), i64 52 }, %struct.constdef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.376, i32 0, i32 0), i64 51 }, %struct.constdef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.377, i32 0, i32 0), i64 97 }, %struct.constdef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.378, i32 0, i32 0), i64 46 }, %struct.constdef { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.379, i32 0, i32 0), i64 23 }, %struct.constdef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.380, i32 0, i32 0), i64 24 }, %struct.constdef { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.381, i32 0, i32 0), i64 25 }, %struct.constdef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.382, i32 0, i32 0), i64 0 }, %struct.constdef { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.383, i32 0, i32 0), i64 12 }, %struct.constdef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.384, i32 0, i32 0), i64 87 }, %struct.constdef { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.385, i32 0, i32 0), i64 86 }, %struct.constdef { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.386, i32 0, i32 0), i64 36 }, %struct.constdef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.387, i32 0, i32 0), i64 37 }, %struct.constdef { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.388, i32 0, i32 0), i64 38 }, %struct.constdef { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.389, i32 0, i32 0), i64 39 }, %struct.constdef { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.390, i32 0, i32 0), i64 45 }, %struct.constdef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.391, i32 0, i32 0), i64 101 }, %struct.constdef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.392, i32 0, i32 0), i64 102 }, %struct.constdef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.393, i32 0, i32 0), i64 103 }, %struct.constdef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.394, i32 0, i32 0), i64 1 }, %struct.constdef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.395, i32 0, i32 0), i64 2 }, %struct.constdef { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.396, i32 0, i32 0), i64 40 }, %struct.constdef { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.397, i32 0, i32 0), i64 26 }, %struct.constdef { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.398, i32 0, i32 0), i64 41 }, %struct.constdef { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.399, i32 0, i32 0), i64 42 }, %struct.constdef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.400, i32 0, i32 0), i64 15 }, %struct.constdef { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.401, i32 0, i32 0), i64 69 }, %struct.constdef { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.402, i32 0, i32 0), i64 70 }, %struct.constdef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.403, i32 0, i32 0), i64 104 }, %struct.constdef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.404, i32 0, i32 0), i64 105 }, %struct.constdef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.405, i32 0, i32 0), i64 60 }, %struct.constdef { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.406, i32 0, i32 0), i64 7 }, %struct.constdef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.407, i32 0, i32 0), i64 43 }, %struct.constdef { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.408, i32 0, i32 0), i64 71 }, %struct.constdef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.409, i32 0, i32 0), i64 106 }, %struct.constdef { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.410, i32 0, i32 0), i64 16 }, %struct.constdef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.411, i32 0, i32 0), i64 108 }, %struct.constdef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.412, i32 0, i32 0), i64 17 }, %struct.constdef { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.413, i32 0, i32 0), i64 18 }, %struct.constdef { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.414, i32 0, i32 0), i64 19 }, %struct.constdef { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.415, i32 0, i32 0), i64 20 }, %struct.constdef { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.416, i32 0, i32 0), i64 27 }, %struct.constdef { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.417, i32 0, i32 0), i64 28 }, %struct.constdef { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.418, i32 0, i32 0), i64 3 }, %struct.constdef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.419, i32 0, i32 0), i64 119 }, %struct.constdef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.420, i32 0, i32 0), i64 120 }, %struct.constdef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.421, i32 0, i32 0), i64 121 }, %struct.constdef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.422, i32 0, i32 0), i64 122 }, %struct.constdef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.423, i32 0, i32 0), i64 123 }, %struct.constdef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.424, i32 0, i32 0), i64 124 }, %struct.constdef { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.425, i32 0, i32 0), i64 83 }, %struct.constdef { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.426, i32 0, i32 0), i64 84 }, %struct.constdef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.427, i32 0, i32 0), i64 109 }, %struct.constdef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.428, i32 0, i32 0), i64 4 }, %struct.constdef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.429, i32 0, i32 0), i64 30 }, %struct.constdef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.430, i32 0, i32 0), i64 30 }, %struct.constdef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.431, i32 0, i32 0), i64 88 }, %struct.constdef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.432, i32 0, i32 0), i64 85 }, %struct.constdef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.433, i32 0, i32 0), i64 53 }, %struct.constdef { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.434, i32 0, i32 0), i64 56 }, %struct.constdef { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.435, i32 0, i32 0), i64 62 }, %struct.constdef { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.436, i32 0, i32 0), i64 61 }, %struct.constdef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.437, i32 0, i32 0), i64 57 }, %struct.constdef { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.438, i32 0, i32 0), i64 64 }, %struct.constdef { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.439, i32 0, i32 0), i64 63 }, %struct.constdef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.440, i32 0, i32 0), i64 65 }, %struct.constdef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.441, i32 0, i32 0), i64 55 }, %struct.constdef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.442, i32 0, i32 0), i64 54 }, %struct.constdef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.443, i32 0, i32 0), i64 58 }, %struct.constdef { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.444, i32 0, i32 0), i64 13 }, %struct.constdef { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.445, i32 0, i32 0), i64 10 }, %struct.constdef { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.446, i32 0, i32 0), i64 9 }, %struct.constdef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.447, i32 0, i32 0), i64 44 }, %struct.constdef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.448, i32 0, i32 0), i64 31 }, %struct.constdef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.449, i32 0, i32 0), i64 8 }, %struct.constdef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.450, i32 0, i32 0), i64 111 }, %struct.constdef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.451, i32 0, i32 0), i64 112 }, %struct.constdef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.452, i32 0, i32 0), i64 59 }, %struct.constdef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.453, i32 0, i32 0), i64 21 }, %struct.constdef { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.454, i32 0, i32 0), i64 32 }, %struct.constdef { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.455, i32 0, i32 0), i64 33 }, %struct.constdef { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.456, i32 0, i32 0), i64 22 }, %struct.constdef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.457, i32 0, i32 0), i64 113 }, %struct.constdef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.458, i32 0, i32 0), i64 114 }, %struct.constdef { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.459, i32 0, i32 0), i64 34 }, %struct.constdef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.460, i32 0, i32 0), i64 110 }, %struct.constdef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.461, i32 0, i32 0), i64 5 }, %struct.constdef { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.462, i32 0, i32 0), i64 14 }, %struct.constdef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.463, i32 0, i32 0), i64 67 }, %struct.constdef { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.464, i32 0, i32 0), i64 77 }, %struct.constdef { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.465, i32 0, i32 0), i64 78 }, %struct.constdef { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.466, i32 0, i32 0), i64 73 }, %struct.constdef { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.467, i32 0, i32 0), i64 74 }, %struct.constdef { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.468, i32 0, i32 0), i64 79 }, %struct.constdef { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.469, i32 0, i32 0), i64 80 }, %struct.constdef { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.470, i32 0, i32 0), i64 81 }, %struct.constdef { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.471, i32 0, i32 0), i64 82 }, %struct.constdef { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.472, i32 0, i32 0), i64 68 }, %struct.constdef { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.473, i32 0, i32 0), i64 75 }, %struct.constdef { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.474, i32 0, i32 0), i64 76 }, %struct.constdef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.475, i32 0, i32 0), i64 11 }, %struct.constdef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.476, i32 0, i32 0), i64 35 }, %struct.constdef { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.477, i32 0, i32 0), i64 72 }, %struct.constdef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.478, i32 0, i32 0), i64 6 }, %struct.constdef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.479, i32 0, i32 0), i64 66 }, %struct.constdef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.480, i32 0, i32 0), i64 115 }, %struct.constdef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.481, i32 0, i32 0), i64 116 }, %struct.constdef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.482, i32 0, i32 0), i64 60 }, %struct.constdef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.483, i32 0, i32 0), i64 117 }, %struct.constdef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.484, i32 0, i32 0), i64 118 }, %struct.constdef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.485, i32 0, i32 0), i64 29 }, %struct.constdef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.486, i32 0, i32 0), i64 107 }, %struct.constdef { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.487, i32 0, i32 0), i64 125 }, %struct.constdef { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.488, i32 0, i32 0), i64 126 }, %struct.constdef { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.489, i32 0, i32 0), i64 127 }, %struct.constdef { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.490, i32 0, i32 0), i64 128 }, %struct.constdef { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.491, i32 0, i32 0), i64 92 }, %struct.constdef { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.492, i32 0, i32 0), i64 93 }, %struct.constdef { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.493, i32 0, i32 0), i64 129 }, %struct.constdef { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.494, i32 0, i32 0), i64 130 }, %struct.constdef { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.495, i32 0, i32 0), i64 131 }, %struct.constdef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.496, i32 0, i32 0), i64 94 }, %struct.constdef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.497, i32 0, i32 0), i64 91 }, %struct.constdef { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.498, i32 0, i32 0), i64 89 }, %struct.constdef { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.499, i32 0, i32 0), i64 90 }, %struct.constdef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.500, i32 0, i32 0), i64 98 }, %struct.constdef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.501, i32 0, i32 0), i64 99 }, %struct.constdef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.502, i32 0, i32 0), i64 100 }], align 16
@.str.369 = private unnamed_addr constant [15 x i8] c"SC_2_CHAR_TERM\00", align 1
@.str.370 = private unnamed_addr constant [12 x i8] c"SC_2_C_BIND\00", align 1
@.str.371 = private unnamed_addr constant [11 x i8] c"SC_2_C_DEV\00", align 1
@.str.372 = private unnamed_addr constant [15 x i8] c"SC_2_C_VERSION\00", align 1
@.str.373 = private unnamed_addr constant [14 x i8] c"SC_2_FORT_DEV\00", align 1
@.str.374 = private unnamed_addr constant [14 x i8] c"SC_2_FORT_RUN\00", align 1
@.str.375 = private unnamed_addr constant [15 x i8] c"SC_2_LOCALEDEF\00", align 1
@.str.376 = private unnamed_addr constant [12 x i8] c"SC_2_SW_DEV\00", align 1
@.str.377 = private unnamed_addr constant [9 x i8] c"SC_2_UPE\00", align 1
@.str.378 = private unnamed_addr constant [13 x i8] c"SC_2_VERSION\00", align 1
@.str.379 = private unnamed_addr constant [18 x i8] c"SC_AIO_LISTIO_MAX\00", align 1
@.str.380 = private unnamed_addr constant [11 x i8] c"SC_AIO_MAX\00", align 1
@.str.381 = private unnamed_addr constant [22 x i8] c"SC_AIO_PRIO_DELTA_MAX\00", align 1
@.str.382 = private unnamed_addr constant [11 x i8] c"SC_ARG_MAX\00", align 1
@.str.383 = private unnamed_addr constant [19 x i8] c"SC_ASYNCHRONOUS_IO\00", align 1
@.str.384 = private unnamed_addr constant [14 x i8] c"SC_ATEXIT_MAX\00", align 1
@.str.385 = private unnamed_addr constant [16 x i8] c"SC_AVPHYS_PAGES\00", align 1
@.str.386 = private unnamed_addr constant [15 x i8] c"SC_BC_BASE_MAX\00", align 1
@.str.387 = private unnamed_addr constant [14 x i8] c"SC_BC_DIM_MAX\00", align 1
@.str.388 = private unnamed_addr constant [16 x i8] c"SC_BC_SCALE_MAX\00", align 1
@.str.389 = private unnamed_addr constant [17 x i8] c"SC_BC_STRING_MAX\00", align 1
@.str.390 = private unnamed_addr constant [22 x i8] c"SC_CHARCLASS_NAME_MAX\00", align 1
@.str.391 = private unnamed_addr constant [12 x i8] c"SC_CHAR_BIT\00", align 1
@.str.392 = private unnamed_addr constant [12 x i8] c"SC_CHAR_MAX\00", align 1
@.str.393 = private unnamed_addr constant [12 x i8] c"SC_CHAR_MIN\00", align 1
@.str.394 = private unnamed_addr constant [13 x i8] c"SC_CHILD_MAX\00", align 1
@.str.395 = private unnamed_addr constant [11 x i8] c"SC_CLK_TCK\00", align 1
@.str.396 = private unnamed_addr constant [20 x i8] c"SC_COLL_WEIGHTS_MAX\00", align 1
@.str.397 = private unnamed_addr constant [18 x i8] c"SC_DELAYTIMER_MAX\00", align 1
@.str.398 = private unnamed_addr constant [19 x i8] c"SC_EQUIV_CLASS_MAX\00", align 1
@.str.399 = private unnamed_addr constant [17 x i8] c"SC_EXPR_NEST_MAX\00", align 1
@.str.400 = private unnamed_addr constant [9 x i8] c"SC_FSYNC\00", align 1
@.str.401 = private unnamed_addr constant [20 x i8] c"SC_GETGR_R_SIZE_MAX\00", align 1
@.str.402 = private unnamed_addr constant [20 x i8] c"SC_GETPW_R_SIZE_MAX\00", align 1
@.str.403 = private unnamed_addr constant [11 x i8] c"SC_INT_MAX\00", align 1
@.str.404 = private unnamed_addr constant [11 x i8] c"SC_INT_MIN\00", align 1
@.str.405 = private unnamed_addr constant [11 x i8] c"SC_IOV_MAX\00", align 1
@.str.406 = private unnamed_addr constant [15 x i8] c"SC_JOB_CONTROL\00", align 1
@.str.407 = private unnamed_addr constant [12 x i8] c"SC_LINE_MAX\00", align 1
@.str.408 = private unnamed_addr constant [18 x i8] c"SC_LOGIN_NAME_MAX\00", align 1
@.str.409 = private unnamed_addr constant [12 x i8] c"SC_LONG_BIT\00", align 1
@.str.410 = private unnamed_addr constant [16 x i8] c"SC_MAPPED_FILES\00", align 1
@.str.411 = private unnamed_addr constant [14 x i8] c"SC_MB_LEN_MAX\00", align 1
@.str.412 = private unnamed_addr constant [11 x i8] c"SC_MEMLOCK\00", align 1
@.str.413 = private unnamed_addr constant [17 x i8] c"SC_MEMLOCK_RANGE\00", align 1
@.str.414 = private unnamed_addr constant [21 x i8] c"SC_MEMORY_PROTECTION\00", align 1
@.str.415 = private unnamed_addr constant [19 x i8] c"SC_MESSAGE_PASSING\00", align 1
@.str.416 = private unnamed_addr constant [15 x i8] c"SC_MQ_OPEN_MAX\00", align 1
@.str.417 = private unnamed_addr constant [15 x i8] c"SC_MQ_PRIO_MAX\00", align 1
@.str.418 = private unnamed_addr constant [15 x i8] c"SC_NGROUPS_MAX\00", align 1
@.str.419 = private unnamed_addr constant [13 x i8] c"SC_NL_ARGMAX\00", align 1
@.str.420 = private unnamed_addr constant [14 x i8] c"SC_NL_LANGMAX\00", align 1
@.str.421 = private unnamed_addr constant [13 x i8] c"SC_NL_MSGMAX\00", align 1
@.str.422 = private unnamed_addr constant [11 x i8] c"SC_NL_NMAX\00", align 1
@.str.423 = private unnamed_addr constant [13 x i8] c"SC_NL_SETMAX\00", align 1
@.str.424 = private unnamed_addr constant [14 x i8] c"SC_NL_TEXTMAX\00", align 1
@.str.425 = private unnamed_addr constant [20 x i8] c"SC_NPROCESSORS_CONF\00", align 1
@.str.426 = private unnamed_addr constant [20 x i8] c"SC_NPROCESSORS_ONLN\00", align 1
@.str.427 = private unnamed_addr constant [9 x i8] c"SC_NZERO\00", align 1
@.str.428 = private unnamed_addr constant [12 x i8] c"SC_OPEN_MAX\00", align 1
@.str.429 = private unnamed_addr constant [12 x i8] c"SC_PAGESIZE\00", align 1
@.str.430 = private unnamed_addr constant [13 x i8] c"SC_PAGE_SIZE\00", align 1
@.str.431 = private unnamed_addr constant [12 x i8] c"SC_PASS_MAX\00", align 1
@.str.432 = private unnamed_addr constant [14 x i8] c"SC_PHYS_PAGES\00", align 1
@.str.433 = private unnamed_addr constant [7 x i8] c"SC_PII\00", align 1
@.str.434 = private unnamed_addr constant [16 x i8] c"SC_PII_INTERNET\00", align 1
@.str.435 = private unnamed_addr constant [22 x i8] c"SC_PII_INTERNET_DGRAM\00", align 1
@.str.436 = private unnamed_addr constant [23 x i8] c"SC_PII_INTERNET_STREAM\00", align 1
@.str.437 = private unnamed_addr constant [11 x i8] c"SC_PII_OSI\00", align 1
@.str.438 = private unnamed_addr constant [16 x i8] c"SC_PII_OSI_CLTS\00", align 1
@.str.439 = private unnamed_addr constant [16 x i8] c"SC_PII_OSI_COTS\00", align 1
@.str.440 = private unnamed_addr constant [13 x i8] c"SC_PII_OSI_M\00", align 1
@.str.441 = private unnamed_addr constant [14 x i8] c"SC_PII_SOCKET\00", align 1
@.str.442 = private unnamed_addr constant [11 x i8] c"SC_PII_XTI\00", align 1
@.str.443 = private unnamed_addr constant [8 x i8] c"SC_POLL\00", align 1
@.str.444 = private unnamed_addr constant [18 x i8] c"SC_PRIORITIZED_IO\00", align 1
@.str.445 = private unnamed_addr constant [23 x i8] c"SC_PRIORITY_SCHEDULING\00", align 1
@.str.446 = private unnamed_addr constant [20 x i8] c"SC_REALTIME_SIGNALS\00", align 1
@.str.447 = private unnamed_addr constant [14 x i8] c"SC_RE_DUP_MAX\00", align 1
@.str.448 = private unnamed_addr constant [13 x i8] c"SC_RTSIG_MAX\00", align 1
@.str.449 = private unnamed_addr constant [13 x i8] c"SC_SAVED_IDS\00", align 1
@.str.450 = private unnamed_addr constant [13 x i8] c"SC_SCHAR_MAX\00", align 1
@.str.451 = private unnamed_addr constant [13 x i8] c"SC_SCHAR_MIN\00", align 1
@.str.452 = private unnamed_addr constant [10 x i8] c"SC_SELECT\00", align 1
@.str.453 = private unnamed_addr constant [14 x i8] c"SC_SEMAPHORES\00", align 1
@.str.454 = private unnamed_addr constant [17 x i8] c"SC_SEM_NSEMS_MAX\00", align 1
@.str.455 = private unnamed_addr constant [17 x i8] c"SC_SEM_VALUE_MAX\00", align 1
@.str.456 = private unnamed_addr constant [25 x i8] c"SC_SHARED_MEMORY_OBJECTS\00", align 1
@.str.457 = private unnamed_addr constant [12 x i8] c"SC_SHRT_MAX\00", align 1
@.str.458 = private unnamed_addr constant [12 x i8] c"SC_SHRT_MIN\00", align 1
@.str.459 = private unnamed_addr constant [16 x i8] c"SC_SIGQUEUE_MAX\00", align 1
@.str.460 = private unnamed_addr constant [13 x i8] c"SC_SSIZE_MAX\00", align 1
@.str.461 = private unnamed_addr constant [14 x i8] c"SC_STREAM_MAX\00", align 1
@.str.462 = private unnamed_addr constant [19 x i8] c"SC_SYNCHRONIZED_IO\00", align 1
@.str.463 = private unnamed_addr constant [11 x i8] c"SC_THREADS\00", align 1
@.str.464 = private unnamed_addr constant [25 x i8] c"SC_THREAD_ATTR_STACKADDR\00", align 1
@.str.465 = private unnamed_addr constant [25 x i8] c"SC_THREAD_ATTR_STACKSIZE\00", align 1
@.str.466 = private unnamed_addr constant [32 x i8] c"SC_THREAD_DESTRUCTOR_ITERATIONS\00", align 1
@.str.467 = private unnamed_addr constant [19 x i8] c"SC_THREAD_KEYS_MAX\00", align 1
@.str.468 = private unnamed_addr constant [30 x i8] c"SC_THREAD_PRIORITY_SCHEDULING\00", align 1
@.str.469 = private unnamed_addr constant [23 x i8] c"SC_THREAD_PRIO_INHERIT\00", align 1
@.str.470 = private unnamed_addr constant [23 x i8] c"SC_THREAD_PRIO_PROTECT\00", align 1
@.str.471 = private unnamed_addr constant [25 x i8] c"SC_THREAD_PROCESS_SHARED\00", align 1
@.str.472 = private unnamed_addr constant [25 x i8] c"SC_THREAD_SAFE_FUNCTIONS\00", align 1
@.str.473 = private unnamed_addr constant [20 x i8] c"SC_THREAD_STACK_MIN\00", align 1
@.str.474 = private unnamed_addr constant [22 x i8] c"SC_THREAD_THREADS_MAX\00", align 1
@.str.475 = private unnamed_addr constant [10 x i8] c"SC_TIMERS\00", align 1
@.str.476 = private unnamed_addr constant [13 x i8] c"SC_TIMER_MAX\00", align 1
@.str.477 = private unnamed_addr constant [16 x i8] c"SC_TTY_NAME_MAX\00", align 1
@.str.478 = private unnamed_addr constant [14 x i8] c"SC_TZNAME_MAX\00", align 1
@.str.479 = private unnamed_addr constant [13 x i8] c"SC_T_IOV_MAX\00", align 1
@.str.480 = private unnamed_addr constant [13 x i8] c"SC_UCHAR_MAX\00", align 1
@.str.481 = private unnamed_addr constant [12 x i8] c"SC_UINT_MAX\00", align 1
@.str.482 = private unnamed_addr constant [14 x i8] c"SC_UIO_MAXIOV\00", align 1
@.str.483 = private unnamed_addr constant [13 x i8] c"SC_ULONG_MAX\00", align 1
@.str.484 = private unnamed_addr constant [13 x i8] c"SC_USHRT_MAX\00", align 1
@.str.485 = private unnamed_addr constant [11 x i8] c"SC_VERSION\00", align 1
@.str.486 = private unnamed_addr constant [12 x i8] c"SC_WORD_BIT\00", align 1
@.str.487 = private unnamed_addr constant [20 x i8] c"SC_XBS5_ILP32_OFF32\00", align 1
@.str.488 = private unnamed_addr constant [21 x i8] c"SC_XBS5_ILP32_OFFBIG\00", align 1
@.str.489 = private unnamed_addr constant [19 x i8] c"SC_XBS5_LP64_OFF64\00", align 1
@.str.490 = private unnamed_addr constant [21 x i8] c"SC_XBS5_LPBIG_OFFBIG\00", align 1
@.str.491 = private unnamed_addr constant [15 x i8] c"SC_XOPEN_CRYPT\00", align 1
@.str.492 = private unnamed_addr constant [18 x i8] c"SC_XOPEN_ENH_I18N\00", align 1
@.str.493 = private unnamed_addr constant [16 x i8] c"SC_XOPEN_LEGACY\00", align 1
@.str.494 = private unnamed_addr constant [18 x i8] c"SC_XOPEN_REALTIME\00", align 1
@.str.495 = private unnamed_addr constant [26 x i8] c"SC_XOPEN_REALTIME_THREADS\00", align 1
@.str.496 = private unnamed_addr constant [13 x i8] c"SC_XOPEN_SHM\00", align 1
@.str.497 = private unnamed_addr constant [14 x i8] c"SC_XOPEN_UNIX\00", align 1
@.str.498 = private unnamed_addr constant [17 x i8] c"SC_XOPEN_VERSION\00", align 1
@.str.499 = private unnamed_addr constant [21 x i8] c"SC_XOPEN_XCU_VERSION\00", align 1
@.str.500 = private unnamed_addr constant [14 x i8] c"SC_XOPEN_XPG2\00", align 1
@.str.501 = private unnamed_addr constant [14 x i8] c"SC_XOPEN_XPG3\00", align 1
@.str.502 = private unnamed_addr constant [14 x i8] c"SC_XOPEN_XPG4\00", align 1
@.str.503 = private unnamed_addr constant [14 x i8] c"iO&:fpathconf\00", align 1
@posix_constants_pathconf = internal global [20 x %struct.constdef] [%struct.constdef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.504, i32 0, i32 0), i64 10 }, %struct.constdef { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.505, i32 0, i32 0), i64 6 }, %struct.constdef { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.506, i32 0, i32 0), i64 13 }, %struct.constdef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.507, i32 0, i32 0), i64 0 }, %struct.constdef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.508, i32 0, i32 0), i64 1 }, %struct.constdef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.509, i32 0, i32 0), i64 2 }, %struct.constdef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.510, i32 0, i32 0), i64 3 }, %struct.constdef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.511, i32 0, i32 0), i64 7 }, %struct.constdef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.512, i32 0, i32 0), i64 4 }, %struct.constdef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.513, i32 0, i32 0), i64 5 }, %struct.constdef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.514, i32 0, i32 0), i64 11 }, %struct.constdef { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.515, i32 0, i32 0), i64 12 }, %struct.constdef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.516, i32 0, i32 0), i64 9 }, %struct.constdef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.517, i32 0, i32 0), i64 8 }, %struct.constdef { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.518, i32 0, i32 0), i64 18 }, %struct.constdef { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.519, i32 0, i32 0), i64 14 }, %struct.constdef { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.520, i32 0, i32 0), i64 15 }, %struct.constdef { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.521, i32 0, i32 0), i64 16 }, %struct.constdef { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.522, i32 0, i32 0), i64 17 }, %struct.constdef { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.523, i32 0, i32 0), i64 19 }], align 16
@.str.504 = private unnamed_addr constant [12 x i8] c"PC_ASYNC_IO\00", align 1
@.str.505 = private unnamed_addr constant [20 x i8] c"PC_CHOWN_RESTRICTED\00", align 1
@.str.506 = private unnamed_addr constant [16 x i8] c"PC_FILESIZEBITS\00", align 1
@.str.507 = private unnamed_addr constant [12 x i8] c"PC_LINK_MAX\00", align 1
@.str.508 = private unnamed_addr constant [13 x i8] c"PC_MAX_CANON\00", align 1
@.str.509 = private unnamed_addr constant [13 x i8] c"PC_MAX_INPUT\00", align 1
@.str.510 = private unnamed_addr constant [12 x i8] c"PC_NAME_MAX\00", align 1
@.str.511 = private unnamed_addr constant [12 x i8] c"PC_NO_TRUNC\00", align 1
@.str.512 = private unnamed_addr constant [12 x i8] c"PC_PATH_MAX\00", align 1
@.str.513 = private unnamed_addr constant [12 x i8] c"PC_PIPE_BUF\00", align 1
@.str.514 = private unnamed_addr constant [11 x i8] c"PC_PRIO_IO\00", align 1
@.str.515 = private unnamed_addr constant [15 x i8] c"PC_SOCK_MAXBUF\00", align 1
@.str.516 = private unnamed_addr constant [11 x i8] c"PC_SYNC_IO\00", align 1
@.str.517 = private unnamed_addr constant [12 x i8] c"PC_VDISABLE\00", align 1
@.str.518 = private unnamed_addr constant [18 x i8] c"PC_ALLOC_SIZE_MIN\00", align 1
@.str.519 = private unnamed_addr constant [22 x i8] c"PC_REC_INCR_XFER_SIZE\00", align 1
@.str.520 = private unnamed_addr constant [21 x i8] c"PC_REC_MAX_XFER_SIZE\00", align 1
@.str.521 = private unnamed_addr constant [21 x i8] c"PC_REC_MIN_XFER_SIZE\00", align 1
@.str.522 = private unnamed_addr constant [18 x i8] c"PC_REC_XFER_ALIGN\00", align 1
@.str.523 = private unnamed_addr constant [15 x i8] c"PC_SYMLINK_MAX\00", align 1
@posix_pathconf.keywords = internal global [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.524, i32 0, i32 0), i8* null], align 16
@.str.524 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.525 = private unnamed_addr constant [14 x i8] c"O&O&:pathconf\00", align 1
@.str.526 = private unnamed_addr constant [31 x i8] c"Load averages are unobtainable\00", align 1
@.str.527 = private unnamed_addr constant [4 x i8] c"ddd\00", align 1
@.str.528 = private unnamed_addr constant [10 x i8] c"n:urandom\00", align 1
@.str.529 = private unnamed_addr constant [30 x i8] c"negative argument not allowed\00", align 1
@.str.530 = private unnamed_addr constant [17 x i8] c"O&O&O&:setresuid\00", align 1
@.str.531 = private unnamed_addr constant [17 x i8] c"O&O&O&:setresgid\00", align 1
@.str.532 = private unnamed_addr constant [6 x i8] c"(NNN)\00", align 1
@posix_setxattr.keywords = internal global [6 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.533, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.534, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.283, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.171, i32 0, i32 0), i8* null], align 16
@.str.533 = private unnamed_addr constant [10 x i8] c"attribute\00", align 1
@.str.534 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@.str.535 = private unnamed_addr constant [20 x i8] c"O&O&y*|i$p:setxattr\00", align 1
@posix_getxattr.keywords = internal global [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.533, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.171, i32 0, i32 0), i8* null], align 16
@.str.536 = private unnamed_addr constant [17 x i8] c"O&O&|$p:getxattr\00", align 1
@posix_removexattr.keywords = internal global [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.533, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.171, i32 0, i32 0), i8* null], align 16
@.str.537 = private unnamed_addr constant [20 x i8] c"O&O&|$p:removexattr\00", align 1
@posix_listxattr.keywords = internal global [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.171, i32 0, i32 0), i8* null], align 16
@.str.538 = private unnamed_addr constant [16 x i8] c"|O&$p:listxattr\00", align 1
@stdout = external global %struct._IO_FILE*, align 8
@.str.539 = private unnamed_addr constant [3 x i8] c"|i\00", align 1
@.str.540 = private unnamed_addr constant [18 x i8] c"i:get_inheritable\00", align 1
@.str.541 = private unnamed_addr constant [19 x i8] c"ii:set_inheritable\00", align 1
@environ = external global i8**, align 8
@.str.542 = private unnamed_addr constant [5 x i8] c"F_OK\00", align 1
@.str.543 = private unnamed_addr constant [5 x i8] c"R_OK\00", align 1
@.str.544 = private unnamed_addr constant [5 x i8] c"W_OK\00", align 1
@.str.545 = private unnamed_addr constant [5 x i8] c"X_OK\00", align 1
@.str.546 = private unnamed_addr constant [12 x i8] c"NGROUPS_MAX\00", align 1
@.str.547 = private unnamed_addr constant [8 x i8] c"TMP_MAX\00", align 1
@.str.548 = private unnamed_addr constant [11 x i8] c"WCONTINUED\00", align 1
@.str.549 = private unnamed_addr constant [8 x i8] c"WNOHANG\00", align 1
@.str.550 = private unnamed_addr constant [10 x i8] c"WUNTRACED\00", align 1
@.str.551 = private unnamed_addr constant [9 x i8] c"O_RDONLY\00", align 1
@.str.552 = private unnamed_addr constant [9 x i8] c"O_WRONLY\00", align 1
@.str.553 = private unnamed_addr constant [7 x i8] c"O_RDWR\00", align 1
@.str.554 = private unnamed_addr constant [9 x i8] c"O_NDELAY\00", align 1
@.str.555 = private unnamed_addr constant [11 x i8] c"O_NONBLOCK\00", align 1
@.str.556 = private unnamed_addr constant [9 x i8] c"O_APPEND\00", align 1
@.str.557 = private unnamed_addr constant [8 x i8] c"O_DSYNC\00", align 1
@.str.558 = private unnamed_addr constant [8 x i8] c"O_RSYNC\00", align 1
@.str.559 = private unnamed_addr constant [7 x i8] c"O_SYNC\00", align 1
@.str.560 = private unnamed_addr constant [9 x i8] c"O_NOCTTY\00", align 1
@.str.561 = private unnamed_addr constant [8 x i8] c"O_CREAT\00", align 1
@.str.562 = private unnamed_addr constant [7 x i8] c"O_EXCL\00", align 1
@.str.563 = private unnamed_addr constant [8 x i8] c"O_TRUNC\00", align 1
@.str.564 = private unnamed_addr constant [12 x i8] c"O_LARGEFILE\00", align 1
@.str.565 = private unnamed_addr constant [7 x i8] c"O_PATH\00", align 1
@.str.566 = private unnamed_addr constant [13 x i8] c"PRIO_PROCESS\00", align 1
@.str.567 = private unnamed_addr constant [10 x i8] c"PRIO_PGRP\00", align 1
@.str.568 = private unnamed_addr constant [10 x i8] c"PRIO_USER\00", align 1
@.str.569 = private unnamed_addr constant [10 x i8] c"O_CLOEXEC\00", align 1
@.str.570 = private unnamed_addr constant [10 x i8] c"O_ACCMODE\00", align 1
@.str.571 = private unnamed_addr constant [10 x i8] c"SEEK_HOLE\00", align 1
@.str.572 = private unnamed_addr constant [10 x i8] c"SEEK_DATA\00", align 1
@.str.573 = private unnamed_addr constant [8 x i8] c"O_ASYNC\00", align 1
@.str.574 = private unnamed_addr constant [9 x i8] c"O_DIRECT\00", align 1
@.str.575 = private unnamed_addr constant [12 x i8] c"O_DIRECTORY\00", align 1
@.str.576 = private unnamed_addr constant [11 x i8] c"O_NOFOLLOW\00", align 1
@.str.577 = private unnamed_addr constant [10 x i8] c"O_NOATIME\00", align 1
@.str.578 = private unnamed_addr constant [6 x i8] c"EX_OK\00", align 1
@.str.579 = private unnamed_addr constant [9 x i8] c"EX_USAGE\00", align 1
@.str.580 = private unnamed_addr constant [11 x i8] c"EX_DATAERR\00", align 1
@.str.581 = private unnamed_addr constant [11 x i8] c"EX_NOINPUT\00", align 1
@.str.582 = private unnamed_addr constant [10 x i8] c"EX_NOUSER\00", align 1
@.str.583 = private unnamed_addr constant [10 x i8] c"EX_NOHOST\00", align 1
@.str.584 = private unnamed_addr constant [15 x i8] c"EX_UNAVAILABLE\00", align 1
@.str.585 = private unnamed_addr constant [12 x i8] c"EX_SOFTWARE\00", align 1
@.str.586 = private unnamed_addr constant [9 x i8] c"EX_OSERR\00", align 1
@.str.587 = private unnamed_addr constant [10 x i8] c"EX_OSFILE\00", align 1
@.str.588 = private unnamed_addr constant [13 x i8] c"EX_CANTCREAT\00", align 1
@.str.589 = private unnamed_addr constant [9 x i8] c"EX_IOERR\00", align 1
@.str.590 = private unnamed_addr constant [12 x i8] c"EX_TEMPFAIL\00", align 1
@.str.591 = private unnamed_addr constant [12 x i8] c"EX_PROTOCOL\00", align 1
@.str.592 = private unnamed_addr constant [10 x i8] c"EX_NOPERM\00", align 1
@.str.593 = private unnamed_addr constant [10 x i8] c"EX_CONFIG\00", align 1
@.str.594 = private unnamed_addr constant [10 x i8] c"ST_RDONLY\00", align 1
@.str.595 = private unnamed_addr constant [10 x i8] c"ST_NOSUID\00", align 1
@.str.596 = private unnamed_addr constant [9 x i8] c"ST_NODEV\00", align 1
@.str.597 = private unnamed_addr constant [10 x i8] c"ST_NOEXEC\00", align 1
@.str.598 = private unnamed_addr constant [15 x i8] c"ST_SYNCHRONOUS\00", align 1
@.str.599 = private unnamed_addr constant [12 x i8] c"ST_MANDLOCK\00", align 1
@.str.600 = private unnamed_addr constant [9 x i8] c"ST_WRITE\00", align 1
@.str.601 = private unnamed_addr constant [10 x i8] c"ST_APPEND\00", align 1
@.str.602 = private unnamed_addr constant [11 x i8] c"ST_NOATIME\00", align 1
@.str.603 = private unnamed_addr constant [14 x i8] c"ST_NODIRATIME\00", align 1
@.str.604 = private unnamed_addr constant [12 x i8] c"ST_RELATIME\00", align 1
@.str.605 = private unnamed_addr constant [18 x i8] c"POSIX_FADV_NORMAL\00", align 1
@.str.606 = private unnamed_addr constant [22 x i8] c"POSIX_FADV_SEQUENTIAL\00", align 1
@.str.607 = private unnamed_addr constant [18 x i8] c"POSIX_FADV_RANDOM\00", align 1
@.str.608 = private unnamed_addr constant [19 x i8] c"POSIX_FADV_NOREUSE\00", align 1
@.str.609 = private unnamed_addr constant [20 x i8] c"POSIX_FADV_WILLNEED\00", align 1
@.str.610 = private unnamed_addr constant [20 x i8] c"POSIX_FADV_DONTNEED\00", align 1
@.str.611 = private unnamed_addr constant [6 x i8] c"P_PID\00", align 1
@.str.612 = private unnamed_addr constant [7 x i8] c"P_PGID\00", align 1
@.str.613 = private unnamed_addr constant [6 x i8] c"P_ALL\00", align 1
@.str.614 = private unnamed_addr constant [8 x i8] c"WEXITED\00", align 1
@.str.615 = private unnamed_addr constant [8 x i8] c"WNOWAIT\00", align 1
@.str.616 = private unnamed_addr constant [9 x i8] c"WSTOPPED\00", align 1
@.str.617 = private unnamed_addr constant [11 x i8] c"CLD_EXITED\00", align 1
@.str.618 = private unnamed_addr constant [11 x i8] c"CLD_DUMPED\00", align 1
@.str.619 = private unnamed_addr constant [12 x i8] c"CLD_TRAPPED\00", align 1
@.str.620 = private unnamed_addr constant [14 x i8] c"CLD_CONTINUED\00", align 1
@.str.621 = private unnamed_addr constant [7 x i8] c"F_LOCK\00", align 1
@.str.622 = private unnamed_addr constant [8 x i8] c"F_TLOCK\00", align 1
@.str.623 = private unnamed_addr constant [8 x i8] c"F_ULOCK\00", align 1
@.str.624 = private unnamed_addr constant [7 x i8] c"F_TEST\00", align 1
@.str.625 = private unnamed_addr constant [12 x i8] c"SCHED_OTHER\00", align 1
@.str.626 = private unnamed_addr constant [11 x i8] c"SCHED_FIFO\00", align 1
@.str.627 = private unnamed_addr constant [9 x i8] c"SCHED_RR\00", align 1
@.str.628 = private unnamed_addr constant [12 x i8] c"SCHED_BATCH\00", align 1
@.str.629 = private unnamed_addr constant [11 x i8] c"SCHED_IDLE\00", align 1
@.str.630 = private unnamed_addr constant [20 x i8] c"SCHED_RESET_ON_FORK\00", align 1
@.str.631 = private unnamed_addr constant [13 x i8] c"XATTR_CREATE\00", align 1
@.str.632 = private unnamed_addr constant [14 x i8] c"XATTR_REPLACE\00", align 1
@.str.633 = private unnamed_addr constant [15 x i8] c"XATTR_SIZE_MAX\00", align 1
@.str.634 = private unnamed_addr constant [10 x i8] c"RTLD_LAZY\00", align 1
@.str.635 = private unnamed_addr constant [9 x i8] c"RTLD_NOW\00", align 1
@.str.636 = private unnamed_addr constant [12 x i8] c"RTLD_GLOBAL\00", align 1
@.str.637 = private unnamed_addr constant [11 x i8] c"RTLD_LOCAL\00", align 1
@.str.638 = private unnamed_addr constant [14 x i8] c"RTLD_NODELETE\00", align 1
@.str.639 = private unnamed_addr constant [12 x i8] c"RTLD_NOLOAD\00", align 1
@.str.640 = private unnamed_addr constant [14 x i8] c"RTLD_DEEPBIND\00", align 1
@.str.641 = private unnamed_addr constant [15 x i8] c"pathconf_names\00", align 1
@.str.642 = private unnamed_addr constant [14 x i8] c"confstr_names\00", align 1
@.str.643 = private unnamed_addr constant [14 x i8] c"sysconf_names\00", align 1
@waitid_result__doc__ = internal global [221 x i8] c"waitid_result: Result from waitid.\0A\0AThis object may be accessed either as a tuple of\0A  (si_pid, si_uid, si_signo, si_status, si_code),\0Aor via the attributes si_pid, si_uid, and so on.\0A\0ASee os.waitid for more information.\00", align 16
@waitid_result_fields = internal global [6 x %struct.PyStructSequence_Field] [%struct.PyStructSequence_Field { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.644, i32 0, i32 0), i8* null }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.645, i32 0, i32 0), i8* null }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.646, i32 0, i32 0), i8* null }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.647, i32 0, i32 0), i8* null }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.648, i32 0, i32 0), i8* null }, %struct.PyStructSequence_Field zeroinitializer], align 16
@.str.644 = private unnamed_addr constant [7 x i8] c"si_pid\00", align 1
@.str.645 = private unnamed_addr constant [7 x i8] c"si_uid\00", align 1
@.str.646 = private unnamed_addr constant [9 x i8] c"si_signo\00", align 1
@.str.647 = private unnamed_addr constant [10 x i8] c"si_status\00", align 1
@.str.648 = private unnamed_addr constant [8 x i8] c"si_code\00", align 1
@stat_result__doc__ = internal global [398 x i8] c"stat_result: Result from stat, fstat, or lstat.\0A\0AThis object may be accessed either as a tuple of\0A  (mode, ino, dev, nlink, uid, gid, size, atime, mtime, ctime)\0Aor via the attributes st_mode, st_ino, st_dev, st_nlink, st_uid, and so on.\0A\0APosix/windows: If your platform supports st_blksize, st_blocks, st_rdev,\0Aor st_flags, they are available as attributes only.\0A\0ASee os.stat for more information.\00", align 16
@stat_result_fields = internal global [20 x %struct.PyStructSequence_Field] [%struct.PyStructSequence_Field { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.649, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.650, i32 0, i32 0) }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.651, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.652, i32 0, i32 0) }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.653, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.312, i32 0, i32 0) }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.654, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.655, i32 0, i32 0) }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.656, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.657, i32 0, i32 0) }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.658, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.659, i32 0, i32 0) }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.660, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.661, i32 0, i32 0) }, %struct.PyStructSequence_Field { i8* null, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.662, i32 0, i32 0) }, %struct.PyStructSequence_Field { i8* null, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.663, i32 0, i32 0) }, %struct.PyStructSequence_Field { i8* null, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.664, i32 0, i32 0) }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.665, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.666, i32 0, i32 0) }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.667, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.668, i32 0, i32 0) }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.669, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.670, i32 0, i32 0) }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.671, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.672, i32 0, i32 0) }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.673, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.674, i32 0, i32 0) }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.675, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.676, i32 0, i32 0) }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.677, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.678, i32 0, i32 0) }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.679, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.680, i32 0, i32 0) }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.681, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.682, i32 0, i32 0) }, %struct.PyStructSequence_Field zeroinitializer], align 16
@.str.649 = private unnamed_addr constant [8 x i8] c"st_mode\00", align 1
@.str.650 = private unnamed_addr constant [16 x i8] c"protection bits\00", align 1
@.str.651 = private unnamed_addr constant [7 x i8] c"st_ino\00", align 1
@.str.652 = private unnamed_addr constant [6 x i8] c"inode\00", align 1
@.str.653 = private unnamed_addr constant [7 x i8] c"st_dev\00", align 1
@.str.654 = private unnamed_addr constant [9 x i8] c"st_nlink\00", align 1
@.str.655 = private unnamed_addr constant [21 x i8] c"number of hard links\00", align 1
@.str.656 = private unnamed_addr constant [7 x i8] c"st_uid\00", align 1
@.str.657 = private unnamed_addr constant [17 x i8] c"user ID of owner\00", align 1
@.str.658 = private unnamed_addr constant [7 x i8] c"st_gid\00", align 1
@.str.659 = private unnamed_addr constant [18 x i8] c"group ID of owner\00", align 1
@.str.660 = private unnamed_addr constant [8 x i8] c"st_size\00", align 1
@.str.661 = private unnamed_addr constant [21 x i8] c"total size, in bytes\00", align 1
@.str.662 = private unnamed_addr constant [28 x i8] c"integer time of last access\00", align 1
@.str.663 = private unnamed_addr constant [34 x i8] c"integer time of last modification\00", align 1
@.str.664 = private unnamed_addr constant [28 x i8] c"integer time of last change\00", align 1
@.str.665 = private unnamed_addr constant [9 x i8] c"st_atime\00", align 1
@.str.666 = private unnamed_addr constant [20 x i8] c"time of last access\00", align 1
@.str.667 = private unnamed_addr constant [9 x i8] c"st_mtime\00", align 1
@.str.668 = private unnamed_addr constant [26 x i8] c"time of last modification\00", align 1
@.str.669 = private unnamed_addr constant [9 x i8] c"st_ctime\00", align 1
@.str.670 = private unnamed_addr constant [20 x i8] c"time of last change\00", align 1
@.str.671 = private unnamed_addr constant [12 x i8] c"st_atime_ns\00", align 1
@.str.672 = private unnamed_addr constant [35 x i8] c"time of last access in nanoseconds\00", align 1
@.str.673 = private unnamed_addr constant [12 x i8] c"st_mtime_ns\00", align 1
@.str.674 = private unnamed_addr constant [41 x i8] c"time of last modification in nanoseconds\00", align 1
@.str.675 = private unnamed_addr constant [12 x i8] c"st_ctime_ns\00", align 1
@.str.676 = private unnamed_addr constant [35 x i8] c"time of last change in nanoseconds\00", align 1
@.str.677 = private unnamed_addr constant [11 x i8] c"st_blksize\00", align 1
@.str.678 = private unnamed_addr constant [29 x i8] c"blocksize for filesystem I/O\00", align 1
@.str.679 = private unnamed_addr constant [10 x i8] c"st_blocks\00", align 1
@.str.680 = private unnamed_addr constant [27 x i8] c"number of blocks allocated\00", align 1
@.str.681 = private unnamed_addr constant [8 x i8] c"st_rdev\00", align 1
@.str.682 = private unnamed_addr constant [30 x i8] c"device type (if inode device)\00", align 1
@statvfs_result__doc__ = internal global [287 x i8] c"statvfs_result: Result from statvfs or fstatvfs.\0A\0AThis object may be accessed either as a tuple of\0A  (bsize, frsize, blocks, bfree, bavail, files, ffree, favail, flag, namemax),\0Aor via the attributes f_bsize, f_frsize, f_blocks, f_bfree, and so on.\0A\0ASee os.statvfs for more information.\00", align 16
@statvfs_result_fields = internal global [11 x %struct.PyStructSequence_Field] [%struct.PyStructSequence_Field { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.683, i32 0, i32 0), i8* null }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.684, i32 0, i32 0), i8* null }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.685, i32 0, i32 0), i8* null }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.686, i32 0, i32 0), i8* null }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.687, i32 0, i32 0), i8* null }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.688, i32 0, i32 0), i8* null }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.689, i32 0, i32 0), i8* null }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.690, i32 0, i32 0), i8* null }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.691, i32 0, i32 0), i8* null }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.692, i32 0, i32 0), i8* null }, %struct.PyStructSequence_Field zeroinitializer], align 16
@.str.683 = private unnamed_addr constant [8 x i8] c"f_bsize\00", align 1
@.str.684 = private unnamed_addr constant [9 x i8] c"f_frsize\00", align 1
@.str.685 = private unnamed_addr constant [9 x i8] c"f_blocks\00", align 1
@.str.686 = private unnamed_addr constant [8 x i8] c"f_bfree\00", align 1
@.str.687 = private unnamed_addr constant [9 x i8] c"f_bavail\00", align 1
@.str.688 = private unnamed_addr constant [8 x i8] c"f_files\00", align 1
@.str.689 = private unnamed_addr constant [8 x i8] c"f_ffree\00", align 1
@.str.690 = private unnamed_addr constant [9 x i8] c"f_favail\00", align 1
@.str.691 = private unnamed_addr constant [7 x i8] c"f_flag\00", align 1
@.str.692 = private unnamed_addr constant [10 x i8] c"f_namemax\00", align 1
@sched_param__doc__ = internal global [97 x i8] c"sched_param(sched_priority): A scheduling parameter.\0A\0ACurrent has only one field: sched_priority\00", align 16
@sched_param_fields = internal global [2 x %struct.PyStructSequence_Field] [%struct.PyStructSequence_Field { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.693, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.694, i32 0, i32 0) }, %struct.PyStructSequence_Field zeroinitializer], align 16
@.str.693 = private unnamed_addr constant [15 x i8] c"sched_priority\00", align 1
@.str.694 = private unnamed_addr constant [24 x i8] c"the scheduling priority\00", align 1
@sched_param_new.kwlist = internal global [2 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.693, i32 0, i32 0), i8* null], align 16
@.str.695 = private unnamed_addr constant [14 x i8] c"O:sched_param\00", align 1
@.str.696 = private unnamed_addr constant [17 x i8] c"os.terminal_size\00", align 1
@TerminalSize_docstring = internal global [61 x i8] c"A tuple of (columns, lines) for holding terminal window size\00", align 16
@TerminalSize_fields = internal global [3 x %struct.PyStructSequence_Field] [%struct.PyStructSequence_Field { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.697, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.698, i32 0, i32 0) }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.699, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.700, i32 0, i32 0) }, %struct.PyStructSequence_Field zeroinitializer], align 16
@.str.697 = private unnamed_addr constant [8 x i8] c"columns\00", align 1
@.str.698 = private unnamed_addr constant [43 x i8] c"width of the terminal window in characters\00", align 1
@.str.699 = private unnamed_addr constant [6 x i8] c"lines\00", align 1
@.str.700 = private unnamed_addr constant [44 x i8] c"height of the terminal window in characters\00", align 1
@times_result__doc__ = internal global [264 x i8] c"times_result: Result from os.times().\0A\0AThis object may be accessed either as a tuple of\0A  (user, system, children_user, children_system, elapsed),\0Aor via the attributes user, system, children_user, children_system,\0Aand elapsed.\0A\0ASee os.times for more information.\00", align 16
@times_result_fields = internal global [6 x %struct.PyStructSequence_Field] [%struct.PyStructSequence_Field { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.701, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.702, i32 0, i32 0) }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.703, i32 0, i32 0) }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.704, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.705, i32 0, i32 0) }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.706, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.707, i32 0, i32 0) }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.708, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.709, i32 0, i32 0) }, %struct.PyStructSequence_Field zeroinitializer], align 16
@.str.701 = private unnamed_addr constant [5 x i8] c"user\00", align 1
@.str.702 = private unnamed_addr constant [10 x i8] c"user time\00", align 1
@.str.703 = private unnamed_addr constant [12 x i8] c"system time\00", align 1
@.str.704 = private unnamed_addr constant [14 x i8] c"children_user\00", align 1
@.str.705 = private unnamed_addr constant [22 x i8] c"user time of children\00", align 1
@.str.706 = private unnamed_addr constant [16 x i8] c"children_system\00", align 1
@.str.707 = private unnamed_addr constant [24 x i8] c"system time of children\00", align 1
@.str.708 = private unnamed_addr constant [8 x i8] c"elapsed\00", align 1
@.str.709 = private unnamed_addr constant [50 x i8] c"elapsed time since an arbitrary point in the past\00", align 1
@uname_result__doc__ = internal global [246 x i8] c"uname_result: Result from os.uname().\0A\0AThis object may be accessed either as a tuple of\0A  (sysname, nodename, release, version, machine),\0Aor via the attributes sysname, nodename, release, version, and machine.\0A\0ASee os.uname for more information.\00", align 16
@uname_result_fields = internal global [6 x %struct.PyStructSequence_Field] [%struct.PyStructSequence_Field { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.710, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.711, i32 0, i32 0) }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.712, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.713, i32 0, i32 0) }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.714, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.715, i32 0, i32 0) }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.716, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.717, i32 0, i32 0) }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.718, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.719, i32 0, i32 0) }, %struct.PyStructSequence_Field zeroinitializer], align 16
@.str.710 = private unnamed_addr constant [8 x i8] c"sysname\00", align 1
@.str.711 = private unnamed_addr constant [22 x i8] c"operating system name\00", align 1
@.str.712 = private unnamed_addr constant [9 x i8] c"nodename\00", align 1
@.str.713 = private unnamed_addr constant [52 x i8] c"name of machine on network (implementation-defined)\00", align 1
@.str.714 = private unnamed_addr constant [8 x i8] c"release\00", align 1
@.str.715 = private unnamed_addr constant [25 x i8] c"operating system release\00", align 1
@.str.716 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.717 = private unnamed_addr constant [25 x i8] c"operating system version\00", align 1
@.str.718 = private unnamed_addr constant [8 x i8] c"machine\00", align 1
@.str.719 = private unnamed_addr constant [20 x i8] c"hardware identifier\00", align 1
@.str.720 = private unnamed_addr constant [36 x i8] c"%s%s%s unavailable on this platform\00", align 1
@.str.721 = private unnamed_addr constant [51 x i8] c"%s: cannot use dir_fd and follow_symlinks together\00", align 1
@.str.722 = private unnamed_addr constant [8 x i8] c"integer\00", align 1
@.str.723 = private unnamed_addr constant [15 x i8] c"HAVE_FACCESSAT\00", align 1
@.str.724 = private unnamed_addr constant [12 x i8] c"HAVE_FCHDIR\00", align 1
@.str.725 = private unnamed_addr constant [12 x i8] c"HAVE_FCHMOD\00", align 1
@.str.726 = private unnamed_addr constant [14 x i8] c"HAVE_FCHMODAT\00", align 1
@.str.727 = private unnamed_addr constant [12 x i8] c"HAVE_FCHOWN\00", align 1
@.str.728 = private unnamed_addr constant [14 x i8] c"HAVE_FCHOWNAT\00", align 1
@.str.729 = private unnamed_addr constant [13 x i8] c"HAVE_FEXECVE\00", align 1
@.str.730 = private unnamed_addr constant [15 x i8] c"HAVE_FDOPENDIR\00", align 1
@.str.731 = private unnamed_addr constant [15 x i8] c"HAVE_FPATHCONF\00", align 1
@.str.732 = private unnamed_addr constant [13 x i8] c"HAVE_FSTATAT\00", align 1
@.str.733 = private unnamed_addr constant [14 x i8] c"HAVE_FSTATVFS\00", align 1
@.str.734 = private unnamed_addr constant [15 x i8] c"HAVE_FTRUNCATE\00", align 1
@.str.735 = private unnamed_addr constant [14 x i8] c"HAVE_FUTIMENS\00", align 1
@.str.736 = private unnamed_addr constant [13 x i8] c"HAVE_FUTIMES\00", align 1
@.str.737 = private unnamed_addr constant [15 x i8] c"HAVE_FUTIMESAT\00", align 1
@.str.738 = private unnamed_addr constant [12 x i8] c"HAVE_LINKAT\00", align 1
@.str.739 = private unnamed_addr constant [12 x i8] c"HAVE_LCHOWN\00", align 1
@.str.740 = private unnamed_addr constant [11 x i8] c"HAVE_LSTAT\00", align 1
@.str.741 = private unnamed_addr constant [13 x i8] c"HAVE_LUTIMES\00", align 1
@.str.742 = private unnamed_addr constant [13 x i8] c"HAVE_MKDIRAT\00", align 1
@.str.743 = private unnamed_addr constant [14 x i8] c"HAVE_MKFIFOAT\00", align 1
@.str.744 = private unnamed_addr constant [13 x i8] c"HAVE_MKNODAT\00", align 1
@.str.745 = private unnamed_addr constant [12 x i8] c"HAVE_OPENAT\00", align 1
@.str.746 = private unnamed_addr constant [16 x i8] c"HAVE_READLINKAT\00", align 1
@.str.747 = private unnamed_addr constant [14 x i8] c"HAVE_RENAMEAT\00", align 1
@.str.748 = private unnamed_addr constant [15 x i8] c"HAVE_SYMLINKAT\00", align 1
@.str.749 = private unnamed_addr constant [14 x i8] c"HAVE_UNLINKAT\00", align 1
@.str.750 = private unnamed_addr constant [15 x i8] c"HAVE_UTIMENSAT\00", align 1

; Function Attrs: nounwind uwtable
define %struct._object* @_PyLong_FromUid(i32 %uid) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i32 %uid, i64 0, metadata !693, metadata !3839), !dbg !3840
  %cmp = icmp eq i32 %uid, -1, !dbg !3841
  br i1 %cmp, label %if.then, label %if.end, !dbg !3843

if.then:                                          ; preds = %entry
  %call = tail call %struct._object* @PyLong_FromLong(i64 -1) #3, !dbg !3844
  br label %return, !dbg !3845

if.end:                                           ; preds = %entry
  %conv = zext i32 %uid to i64, !dbg !3846
  %call1 = tail call %struct._object* @PyLong_FromUnsignedLong(i64 %conv) #3, !dbg !3847
  br label %return, !dbg !3848

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct._object* [ %call, %if.then ], [ %call1, %if.end ]
  ret %struct._object* %retval.0, !dbg !3849
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare %struct._object* @PyLong_FromLong(i64) #2

declare %struct._object* @PyLong_FromUnsignedLong(i64) #2

; Function Attrs: nounwind uwtable
define %struct._object* @_PyLong_FromGid(i32 %gid) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i32 %gid, i64 0, metadata !698, metadata !3839), !dbg !3850
  %cmp = icmp eq i32 %gid, -1, !dbg !3851
  br i1 %cmp, label %if.then, label %if.end, !dbg !3853

if.then:                                          ; preds = %entry
  %call = tail call %struct._object* @PyLong_FromLong(i64 -1) #3, !dbg !3854
  br label %return, !dbg !3855

if.end:                                           ; preds = %entry
  %conv = zext i32 %gid to i64, !dbg !3856
  %call1 = tail call %struct._object* @PyLong_FromUnsignedLong(i64 %conv) #3, !dbg !3857
  br label %return, !dbg !3858

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct._object* [ %call, %if.then ], [ %call1, %if.end ]
  ret %struct._object* %retval.0, !dbg !3859
}

; Function Attrs: nounwind uwtable
define i32 @_Py_Uid_Converter(%struct._object* %obj, i8* nocapture %p) #0 {
entry:
  %overflow = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %obj, i64 0, metadata !701, metadata !3839), !dbg !3860
  tail call void @llvm.dbg.value(metadata i8* %p, i64 0, metadata !702, metadata !3839), !dbg !3861
  %0 = bitcast i32* %overflow to i8*, !dbg !3862
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !3862
  %call = tail call %struct._object* @PyNumber_Index(%struct._object* %obj) #3, !dbg !3863
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !704, metadata !3839), !dbg !3864
  %cmp = icmp eq %struct._object* %call, null, !dbg !3865
  br i1 %cmp, label %if.then, label %if.end, !dbg !3867

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !3868, !tbaa !3870
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %obj, i64 0, i32 1, !dbg !3874
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3874, !tbaa !3875
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i64 0, i32 1, !dbg !3878
  %3 = load i8*, i8** %tp_name, align 8, !dbg !3878, !tbaa !3879
  %call1 = tail call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i8* %3) #3, !dbg !3883
  br label %cleanup, !dbg !3884

if.end:                                           ; preds = %entry
  tail call void @llvm.dbg.value(metadata i32* %overflow, i64 0, metadata !705, metadata !3839), !dbg !3885
  %call2 = call i64 @PyLong_AsLongAndOverflow(%struct._object* %call, i32* nonnull %overflow) #3, !dbg !3886
  call void @llvm.dbg.value(metadata i64 %call2, i64 0, metadata !706, metadata !3839), !dbg !3887
  call void @llvm.dbg.value(metadata i32* %overflow, i64 0, metadata !705, metadata !3839), !dbg !3885
  %4 = load i32, i32* %overflow, align 4, !dbg !3888, !tbaa !3890
  %tobool = icmp eq i32 %4, 0, !dbg !3888
  br i1 %tobool, label %if.then.3, label %if.end.21, !dbg !3891

if.then.3:                                        ; preds = %if.end
  %conv = trunc i64 %call2 to i32, !dbg !3892
  call void @llvm.dbg.value(metadata i32 %conv, i64 0, metadata !703, metadata !3839), !dbg !3894
  %cmp4 = icmp eq i64 %call2, -1, !dbg !3895
  br i1 %cmp4, label %if.then.6, label %if.end.11, !dbg !3897

if.then.6:                                        ; preds = %if.then.3
  %call7 = call %struct._object* @PyErr_Occurred() #3, !dbg !3898
  %tobool8 = icmp eq %struct._object* %call7, null, !dbg !3898
  br i1 %tobool8, label %do.body, label %do.body.51, !dbg !3901

if.end.11:                                        ; preds = %if.then.3
  %cmp12 = icmp sgt i64 %call2, -1, !dbg !3902
  %conv16 = and i64 %call2, 4294967295
  %cmp17 = icmp eq i64 %conv16, %call2, !dbg !3904
  %or.cond = and i1 %cmp12, %cmp17, !dbg !3906
  br i1 %or.cond, label %do.body, label %underflow, !dbg !3906

if.end.21:                                        ; preds = %if.end
  %cmp22 = icmp slt i32 %4, 0, !dbg !3907
  br i1 %cmp22, label %underflow, label %if.end.25, !dbg !3909

if.end.25:                                        ; preds = %if.end.21
  %call26 = call i64 @PyLong_AsUnsignedLong(%struct._object* %call) #3, !dbg !3910
  call void @llvm.dbg.value(metadata i64 %call26, i64 0, metadata !707, metadata !3839), !dbg !3911
  %call27 = call %struct._object* @PyErr_Occurred() #3, !dbg !3912
  %tobool28 = icmp eq %struct._object* %call27, null, !dbg !3912
  br i1 %tobool28, label %if.end.34, label %if.then.29, !dbg !3914

if.then.29:                                       ; preds = %if.end.25
  %5 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8, !dbg !3915, !tbaa !3870
  %call30 = call i32 @PyErr_ExceptionMatches(%struct._object* %5) #3, !dbg !3918
  %tobool31 = icmp eq i32 %call30, 0, !dbg !3918
  br i1 %tobool31, label %do.body.51, label %overflow.50, !dbg !3919

if.end.34:                                        ; preds = %if.end.25
  %conv35 = trunc i64 %call26 to i32, !dbg !3920
  call void @llvm.dbg.value(metadata i32 %conv35, i64 0, metadata !703, metadata !3839), !dbg !3894
  %cmp36 = icmp ne i32 %conv35, -1, !dbg !3921
  %conv40 = and i64 %call26, 4294967295
  %cmp41 = icmp eq i64 %conv40, %call26, !dbg !3923
  %or.cond90 = and i1 %cmp36, %cmp41, !dbg !3925
  br i1 %or.cond90, label %do.body, label %overflow.50, !dbg !3925

do.body:                                          ; preds = %if.end.34, %if.end.11, %if.then.6
  %uid.0 = phi i32 [ %conv, %if.then.6 ], [ %conv, %if.end.11 ], [ %conv35, %if.end.34 ]
  call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !708, metadata !3839), !dbg !3926
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 0, !dbg !3928
  %6 = load i64, i64* %ob_refcnt, align 8, !dbg !3928, !tbaa !3930
  %dec = add i64 %6, -1, !dbg !3928
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3928, !tbaa !3930
  %cmp45 = icmp eq i64 %dec, 0, !dbg !3928
  br i1 %cmp45, label %if.else, label %if.end.49, !dbg !3931

if.else:                                          ; preds = %do.body
  %ob_type48 = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 1, !dbg !3932
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type48, align 8, !dbg !3932, !tbaa !3875
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i64 0, i32 4, !dbg !3932
  %8 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3932, !tbaa !3934
  call void %8(%struct._object* %call) #3, !dbg !3932
  br label %if.end.49

if.end.49:                                        ; preds = %do.body, %if.else
  %9 = bitcast i8* %p to i32*, !dbg !3935
  store i32 %uid.0, i32* %9, align 4, !dbg !3936, !tbaa !3890
  br label %cleanup, !dbg !3937

underflow:                                        ; preds = %if.end.11, %if.end.21
  %10 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8, !dbg !3938, !tbaa !3870
  call void @PyErr_SetString(%struct._object* %10, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0)) #3, !dbg !3939
  br label %do.body.51, !dbg !3940

overflow.50:                                      ; preds = %if.end.34, %if.then.29
  %11 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8, !dbg !3941, !tbaa !3870
  call void @PyErr_SetString(%struct._object* %11, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i64 0, i64 0)) #3, !dbg !3942
  br label %do.body.51, !dbg !3942

do.body.51:                                       ; preds = %if.then.29, %if.then.6, %underflow, %overflow.50
  call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !710, metadata !3839), !dbg !3943
  %ob_refcnt53 = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 0, !dbg !3945
  %12 = load i64, i64* %ob_refcnt53, align 8, !dbg !3945, !tbaa !3930
  %dec54 = add i64 %12, -1, !dbg !3945
  store i64 %dec54, i64* %ob_refcnt53, align 8, !dbg !3945, !tbaa !3930
  %cmp55 = icmp eq i64 %dec54, 0, !dbg !3945
  br i1 %cmp55, label %if.else.58, label %cleanup, !dbg !3947

if.else.58:                                       ; preds = %do.body.51
  %ob_type59 = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 1, !dbg !3948
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type59, align 8, !dbg !3948, !tbaa !3875
  %tp_dealloc60 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i64 0, i32 4, !dbg !3948
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc60, align 8, !dbg !3948, !tbaa !3934
  call void %14(%struct._object* %call) #3, !dbg !3948
  br label %cleanup

cleanup:                                          ; preds = %if.else.58, %do.body.51, %if.end.49, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 1, %if.end.49 ], [ 0, %do.body.51 ], [ 0, %if.else.58 ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !3950
  ret i32 %retval.0, !dbg !3950
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #3

declare %struct._object* @PyNumber_Index(%struct._object*) #2

declare %struct._object* @PyErr_Format(%struct._object*, i8*, ...) #2

declare i64 @PyLong_AsLongAndOverflow(%struct._object*, i32*) #2

declare %struct._object* @PyErr_Occurred() #2

declare i64 @PyLong_AsUnsignedLong(%struct._object*) #2

declare i32 @PyErr_ExceptionMatches(%struct._object*) #2

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #3

declare void @PyErr_SetString(%struct._object*, i8*) #2

; Function Attrs: nounwind uwtable
define i32 @_Py_Gid_Converter(%struct._object* %obj, i8* nocapture %p) #0 {
entry:
  %overflow = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %obj, i64 0, metadata !714, metadata !3839), !dbg !3951
  tail call void @llvm.dbg.value(metadata i8* %p, i64 0, metadata !715, metadata !3839), !dbg !3952
  %0 = bitcast i32* %overflow to i8*, !dbg !3953
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !3953
  %call = tail call %struct._object* @PyNumber_Index(%struct._object* %obj) #3, !dbg !3954
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !717, metadata !3839), !dbg !3955
  %cmp = icmp eq %struct._object* %call, null, !dbg !3956
  br i1 %cmp, label %if.then, label %if.end, !dbg !3958

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !3959, !tbaa !3870
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %obj, i64 0, i32 1, !dbg !3961
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3961, !tbaa !3875
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i64 0, i32 1, !dbg !3962
  %3 = load i8*, i8** %tp_name, align 8, !dbg !3962, !tbaa !3879
  %call1 = tail call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i64 0, i64 0), i8* %3) #3, !dbg !3963
  br label %cleanup, !dbg !3964

if.end:                                           ; preds = %entry
  tail call void @llvm.dbg.value(metadata i32* %overflow, i64 0, metadata !718, metadata !3839), !dbg !3965
  %call2 = call i64 @PyLong_AsLongAndOverflow(%struct._object* %call, i32* nonnull %overflow) #3, !dbg !3966
  call void @llvm.dbg.value(metadata i64 %call2, i64 0, metadata !719, metadata !3839), !dbg !3967
  call void @llvm.dbg.value(metadata i32* %overflow, i64 0, metadata !718, metadata !3839), !dbg !3965
  %4 = load i32, i32* %overflow, align 4, !dbg !3968, !tbaa !3890
  %tobool = icmp eq i32 %4, 0, !dbg !3968
  br i1 %tobool, label %if.then.3, label %if.end.21, !dbg !3970

if.then.3:                                        ; preds = %if.end
  %conv = trunc i64 %call2 to i32, !dbg !3971
  call void @llvm.dbg.value(metadata i32 %conv, i64 0, metadata !716, metadata !3839), !dbg !3973
  %cmp4 = icmp eq i64 %call2, -1, !dbg !3974
  br i1 %cmp4, label %if.then.6, label %if.end.11, !dbg !3976

if.then.6:                                        ; preds = %if.then.3
  %call7 = call %struct._object* @PyErr_Occurred() #3, !dbg !3977
  %tobool8 = icmp eq %struct._object* %call7, null, !dbg !3977
  br i1 %tobool8, label %do.body, label %do.body.51, !dbg !3980

if.end.11:                                        ; preds = %if.then.3
  %cmp12 = icmp sgt i64 %call2, -1, !dbg !3981
  %conv16 = and i64 %call2, 4294967295
  %cmp17 = icmp eq i64 %conv16, %call2, !dbg !3983
  %or.cond = and i1 %cmp12, %cmp17, !dbg !3985
  br i1 %or.cond, label %do.body, label %underflow, !dbg !3985

if.end.21:                                        ; preds = %if.end
  %cmp22 = icmp slt i32 %4, 0, !dbg !3986
  br i1 %cmp22, label %underflow, label %if.end.25, !dbg !3988

if.end.25:                                        ; preds = %if.end.21
  %call26 = call i64 @PyLong_AsUnsignedLong(%struct._object* %call) #3, !dbg !3989
  call void @llvm.dbg.value(metadata i64 %call26, i64 0, metadata !720, metadata !3839), !dbg !3990
  %call27 = call %struct._object* @PyErr_Occurred() #3, !dbg !3991
  %tobool28 = icmp eq %struct._object* %call27, null, !dbg !3991
  br i1 %tobool28, label %if.end.34, label %if.then.29, !dbg !3993

if.then.29:                                       ; preds = %if.end.25
  %5 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8, !dbg !3994, !tbaa !3870
  %call30 = call i32 @PyErr_ExceptionMatches(%struct._object* %5) #3, !dbg !3997
  %tobool31 = icmp eq i32 %call30, 0, !dbg !3997
  br i1 %tobool31, label %do.body.51, label %overflow.50, !dbg !3998

if.end.34:                                        ; preds = %if.end.25
  %conv35 = trunc i64 %call26 to i32, !dbg !3999
  call void @llvm.dbg.value(metadata i32 %conv35, i64 0, metadata !716, metadata !3839), !dbg !3973
  %cmp36 = icmp ne i32 %conv35, -1, !dbg !4000
  %conv40 = and i64 %call26, 4294967295
  %cmp41 = icmp eq i64 %conv40, %call26, !dbg !4002
  %or.cond90 = and i1 %cmp36, %cmp41, !dbg !4004
  br i1 %or.cond90, label %do.body, label %overflow.50, !dbg !4004

do.body:                                          ; preds = %if.end.34, %if.end.11, %if.then.6
  %gid.0 = phi i32 [ %conv, %if.then.6 ], [ %conv, %if.end.11 ], [ %conv35, %if.end.34 ]
  call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !721, metadata !3839), !dbg !4005
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 0, !dbg !4007
  %6 = load i64, i64* %ob_refcnt, align 8, !dbg !4007, !tbaa !3930
  %dec = add i64 %6, -1, !dbg !4007
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4007, !tbaa !3930
  %cmp45 = icmp eq i64 %dec, 0, !dbg !4007
  br i1 %cmp45, label %if.else, label %if.end.49, !dbg !4009

if.else:                                          ; preds = %do.body
  %ob_type48 = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 1, !dbg !4010
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type48, align 8, !dbg !4010, !tbaa !3875
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i64 0, i32 4, !dbg !4010
  %8 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4010, !tbaa !3934
  call void %8(%struct._object* %call) #3, !dbg !4010
  br label %if.end.49

if.end.49:                                        ; preds = %do.body, %if.else
  %9 = bitcast i8* %p to i32*, !dbg !4012
  store i32 %gid.0, i32* %9, align 4, !dbg !4013, !tbaa !3890
  br label %cleanup, !dbg !4014

underflow:                                        ; preds = %if.end.11, %if.end.21
  %10 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8, !dbg !4015, !tbaa !3870
  call void @PyErr_SetString(%struct._object* %10, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i64 0, i64 0)) #3, !dbg !4016
  br label %do.body.51, !dbg !4017

overflow.50:                                      ; preds = %if.end.34, %if.then.29
  %11 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8, !dbg !4018, !tbaa !3870
  call void @PyErr_SetString(%struct._object* %11, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0)) #3, !dbg !4019
  br label %do.body.51, !dbg !4019

do.body.51:                                       ; preds = %if.then.29, %if.then.6, %underflow, %overflow.50
  call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !723, metadata !3839), !dbg !4020
  %ob_refcnt53 = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 0, !dbg !4022
  %12 = load i64, i64* %ob_refcnt53, align 8, !dbg !4022, !tbaa !3930
  %dec54 = add i64 %12, -1, !dbg !4022
  store i64 %dec54, i64* %ob_refcnt53, align 8, !dbg !4022, !tbaa !3930
  %cmp55 = icmp eq i64 %dec54, 0, !dbg !4022
  br i1 %cmp55, label %if.else.58, label %cleanup, !dbg !4024

if.else.58:                                       ; preds = %do.body.51
  %ob_type59 = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 1, !dbg !4025
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type59, align 8, !dbg !4025, !tbaa !3875
  %tp_dealloc60 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i64 0, i32 4, !dbg !4025
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc60, align 8, !dbg !4025, !tbaa !3934
  call void %14(%struct._object* %call) #3, !dbg !4025
  br label %cleanup

cleanup:                                          ; preds = %if.else.58, %do.body.51, %if.end.49, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 1, %if.end.49 ], [ 0, %do.body.51 ], [ 0, %if.else.58 ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !4027
  ret i32 %retval.0, !dbg !4027
}

; Function Attrs: nounwind uwtable
define %struct._object* @PyInit_posix() #0 {
entry:
  %call = tail call %struct._object* @PyModule_Create2(%struct.PyModuleDef* nonnull @posixmodule, i32 1013) #3, !dbg !4028
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !729, metadata !3839), !dbg !4029
  %cmp = icmp eq %struct._object* %call, null, !dbg !4030
  br i1 %cmp, label %cleanup.115, label %if.end, !dbg !4032

if.end:                                           ; preds = %entry
  %call.i = tail call %struct._object* @PyDict_New() #3, !dbg !4033
  tail call void @llvm.dbg.value(metadata %struct._object* %call.i, i64 0, metadata !3114, metadata !3839) #3, !dbg !4035
  %cmp.i = icmp eq %struct._object* %call.i, null, !dbg !4036
  br i1 %cmp.i, label %cleanup.115, label %if.end.i, !dbg !4038

if.end.i:                                         ; preds = %if.end
  %0 = load i8**, i8*** @environ, align 8, !dbg !4039, !tbaa !3870
  %cmp1.i = icmp eq i8** %0, null, !dbg !4041
  br i1 %cmp1.i, label %if.then.3, label %for.cond.preheader.i, !dbg !4042

for.cond.preheader.i:                             ; preds = %if.end.i
  %1 = load i8*, i8** %0, align 8, !dbg !4043, !tbaa !3870
  %cmp4.97.i = icmp eq i8* %1, null, !dbg !4044
  br i1 %cmp4.97.i, label %if.then.3, label %for.body.i.preheader, !dbg !4045

for.body.i.preheader:                             ; preds = %for.cond.preheader.i
  br label %for.body.i, !dbg !4046

for.body.i:                                       ; preds = %for.body.i.preheader, %cleanup.i
  %2 = phi i8* [ %12, %cleanup.i ], [ %1, %for.body.i.preheader ], !dbg !4047
  %e.098.i = phi i8** [ %incdec.ptr.i, %cleanup.i ], [ %0, %for.body.i.preheader ], !dbg !4047
  %call5.i = tail call i8* @strchr(i8* %2, i32 61) #3, !dbg !4046
  tail call void @llvm.dbg.value(metadata i8* %call5.i, i64 0, metadata !3121, metadata !3839) #3, !dbg !4048
  %cmp6.i = icmp eq i8* %call5.i, null, !dbg !4049
  br i1 %cmp6.i, label %cleanup.i, label %if.end.8.i, !dbg !4051

if.end.8.i:                                       ; preds = %for.body.i
  %sub.ptr.lhs.cast.i = ptrtoint i8* %call5.i to i64, !dbg !4052
  %sub.ptr.rhs.cast.i = ptrtoint i8* %2 to i64, !dbg !4052
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i, !dbg !4052
  %sext.i = shl i64 %sub.ptr.sub.i, 32, !dbg !4053
  %conv9.i = ashr exact i64 %sext.i, 32, !dbg !4053
  %call10.i = tail call %struct._object* @PyBytes_FromStringAndSize(i8* %2, i64 %conv9.i) #3, !dbg !4054
  tail call void @llvm.dbg.value(metadata %struct._object* %call10.i, i64 0, metadata !3116, metadata !3839) #3, !dbg !4055
  %cmp11.i = icmp eq %struct._object* %call10.i, null, !dbg !4056
  br i1 %cmp11.i, label %if.then.13.i, label %if.end.14.i, !dbg !4058

if.then.13.i:                                     ; preds = %if.end.8.i
  tail call void @PyErr_Clear() #3, !dbg !4059
  br label %cleanup.i, !dbg !4061

if.end.14.i:                                      ; preds = %if.end.8.i
  %add.ptr.i = getelementptr i8, i8* %call5.i, i64 1, !dbg !4062
  %call16.i = tail call i64 @strlen(i8* %add.ptr.i) #11, !dbg !4063
  %call17.i = tail call %struct._object* @PyBytes_FromStringAndSize(i8* %add.ptr.i, i64 %call16.i) #3, !dbg !4064
  tail call void @llvm.dbg.value(metadata %struct._object* %call17.i, i64 0, metadata !3120, metadata !3839) #3, !dbg !4065
  %cmp18.i = icmp eq %struct._object* %call17.i, null, !dbg !4066
  br i1 %cmp18.i, label %if.then.20.i, label %if.end.25.i, !dbg !4067

if.then.20.i:                                     ; preds = %if.end.14.i
  tail call void @PyErr_Clear() #3, !dbg !4068
  tail call void @llvm.dbg.value(metadata %struct._object* %call10.i, i64 0, metadata !3122, metadata !3839) #3, !dbg !4069
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %call10.i, i64 0, i32 0, !dbg !4071
  %3 = load i64, i64* %ob_refcnt.i, align 8, !dbg !4071, !tbaa !3930
  %dec.i = add i64 %3, -1, !dbg !4071
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !4071, !tbaa !3930
  %cmp21.i = icmp eq i64 %dec.i, 0, !dbg !4071
  br i1 %cmp21.i, label %if.else.i, label %cleanup.i, !dbg !4073

if.else.i:                                        ; preds = %if.then.20.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %call10.i, i64 0, i32 1, !dbg !4074
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !4074, !tbaa !3875
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i64 0, i32 4, !dbg !4074
  %5 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !4074, !tbaa !3934
  tail call void %5(%struct._object* %call10.i) #3, !dbg !4074
  br label %cleanup.i, !dbg !4047

if.end.25.i:                                      ; preds = %if.end.14.i
  %call26.i = tail call %struct._object* @PyDict_GetItem(%struct._object* %call.i, %struct._object* %call10.i) #3, !dbg !4076
  %cmp27.i = icmp eq %struct._object* %call26.i, null, !dbg !4078
  br i1 %cmp27.i, label %if.then.29.i, label %do.body.36.i, !dbg !4079

if.then.29.i:                                     ; preds = %if.end.25.i
  %call30.i = tail call i32 @PyDict_SetItem(%struct._object* %call.i, %struct._object* %call10.i, %struct._object* %call17.i) #3, !dbg !4080
  %cmp31.i = icmp eq i32 %call30.i, 0, !dbg !4083
  br i1 %cmp31.i, label %do.body.36.i, label %if.then.33.i, !dbg !4084

if.then.33.i:                                     ; preds = %if.then.29.i
  tail call void @PyErr_Clear() #3, !dbg !4085
  br label %do.body.36.i, !dbg !4085

do.body.36.i:                                     ; preds = %if.then.33.i, %if.then.29.i, %if.end.25.i
  tail call void @llvm.dbg.value(metadata %struct._object* %call10.i, i64 0, metadata !3126, metadata !3839) #3, !dbg !4086
  %ob_refcnt38.i = getelementptr inbounds %struct._object, %struct._object* %call10.i, i64 0, i32 0, !dbg !4088
  %6 = load i64, i64* %ob_refcnt38.i, align 8, !dbg !4088, !tbaa !3930
  %dec39.i = add i64 %6, -1, !dbg !4088
  store i64 %dec39.i, i64* %ob_refcnt38.i, align 8, !dbg !4088, !tbaa !3930
  %cmp40.i = icmp eq i64 %dec39.i, 0, !dbg !4088
  br i1 %cmp40.i, label %if.else.43.i, label %if.end.46.i, !dbg !4090

if.else.43.i:                                     ; preds = %do.body.36.i
  %ob_type44.i = getelementptr inbounds %struct._object, %struct._object* %call10.i, i64 0, i32 1, !dbg !4091
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type44.i, align 8, !dbg !4091, !tbaa !3875
  %tp_dealloc45.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i64 0, i32 4, !dbg !4091
  %8 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc45.i, align 8, !dbg !4091, !tbaa !3934
  tail call void %8(%struct._object* %call10.i) #3, !dbg !4091
  br label %if.end.46.i, !dbg !4047

if.end.46.i:                                      ; preds = %if.else.43.i, %do.body.36.i
  tail call void @llvm.dbg.value(metadata %struct._object* %call17.i, i64 0, metadata !3128, metadata !3839) #3, !dbg !4093
  %ob_refcnt51.i = getelementptr inbounds %struct._object, %struct._object* %call17.i, i64 0, i32 0, !dbg !4095
  %9 = load i64, i64* %ob_refcnt51.i, align 8, !dbg !4095, !tbaa !3930
  %dec52.i = add i64 %9, -1, !dbg !4095
  store i64 %dec52.i, i64* %ob_refcnt51.i, align 8, !dbg !4095, !tbaa !3930
  %cmp53.i = icmp eq i64 %dec52.i, 0, !dbg !4095
  br i1 %cmp53.i, label %if.else.56.i, label %cleanup.i, !dbg !4097

if.else.56.i:                                     ; preds = %if.end.46.i
  %ob_type57.i = getelementptr inbounds %struct._object, %struct._object* %call17.i, i64 0, i32 1, !dbg !4098
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type57.i, align 8, !dbg !4098, !tbaa !3875
  %tp_dealloc58.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i64 0, i32 4, !dbg !4098
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc58.i, align 8, !dbg !4098, !tbaa !3934
  tail call void %11(%struct._object* %call17.i) #3, !dbg !4098
  br label %cleanup.i, !dbg !4047

cleanup.i:                                        ; preds = %if.else.56.i, %if.end.46.i, %if.else.i, %if.then.20.i, %if.then.13.i, %for.body.i
  %incdec.ptr.i = getelementptr i8*, i8** %e.098.i, i64 1, !dbg !4100
  tail call void @llvm.dbg.value(metadata i8** %incdec.ptr.i, i64 0, metadata !3115, metadata !3839) #3, !dbg !4101
  %12 = load i8*, i8** %incdec.ptr.i, align 8, !dbg !4043, !tbaa !3870
  %cmp4.i = icmp eq i8* %12, null, !dbg !4044
  br i1 %cmp4.i, label %convertenviron.exit, label %for.body.i, !dbg !4045

convertenviron.exit:                              ; preds = %cleanup.i
  tail call void @llvm.dbg.value(metadata %struct._object* %call.i, i64 0, metadata !730, metadata !3839), !dbg !4102
  tail call void @llvm.dbg.value(metadata %struct._object* %call.i, i64 0, metadata !733, metadata !3839), !dbg !4103
  %cond = icmp eq %struct._object* %call.i, null, !dbg !4105
  br i1 %cond, label %cleanup.115, label %if.then.3, !dbg !4105

if.then.3:                                        ; preds = %for.cond.preheader.i, %if.end.i, %convertenviron.exit
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call.i, i64 0, i32 0, !dbg !4106
  %13 = load i64, i64* %ob_refcnt, align 8, !dbg !4106, !tbaa !3930
  %inc = add i64 %13, 1, !dbg !4106
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !4106, !tbaa !3930
  %call6 = tail call i32 @PyModule_AddObject(%struct._object* %call, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), %struct._object* %call.i) #3, !dbg !4109
  %cmp7 = icmp eq i32 %call6, 0, !dbg !4111
  br i1 %cmp7, label %do.body.10, label %cleanup.115, !dbg !4112

do.body.10:                                       ; preds = %if.then.3
  tail call void @llvm.dbg.value(metadata %struct._object* %call.i, i64 0, metadata !735, metadata !3839), !dbg !4113
  %14 = load i64, i64* %ob_refcnt, align 8, !dbg !4115, !tbaa !3930
  %dec = add i64 %14, -1, !dbg !4115
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4115, !tbaa !3930
  %cmp12 = icmp eq i64 %dec, 0, !dbg !4115
  br i1 %cmp12, label %if.else, label %if.end.14, !dbg !4117

if.else:                                          ; preds = %do.body.10
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call.i, i64 0, i32 1, !dbg !4118
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4118, !tbaa !3875
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i64 0, i32 4, !dbg !4118
  %16 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4118, !tbaa !3934
  tail call void %16(%struct._object* %call.i) #3, !dbg !4118
  br label %if.end.14

if.end.14:                                        ; preds = %do.body.10, %if.else
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !3132, metadata !3839) #3, !dbg !4120
  %call.i.156 = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.542, i64 0, i64 0), i64 0) #3, !dbg !4123
  %tobool.i = icmp eq i32 %call.i.156, 0, !dbg !4123
  br i1 %tobool.i, label %if.end.i.157, label %cleanup.115, !dbg !4125

if.end.i.157:                                     ; preds = %if.end.14
  %call1.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.543, i64 0, i64 0), i64 4) #3, !dbg !4126
  %tobool2.i = icmp eq i32 %call1.i, 0, !dbg !4126
  br i1 %tobool2.i, label %if.end.4.i, label %cleanup.115, !dbg !4128

if.end.4.i:                                       ; preds = %if.end.i.157
  %call5.i.158 = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.544, i64 0, i64 0), i64 2) #3, !dbg !4129
  %tobool6.i = icmp eq i32 %call5.i.158, 0, !dbg !4129
  br i1 %tobool6.i, label %if.end.8.i.159, label %cleanup.115, !dbg !4131

if.end.8.i.159:                                   ; preds = %if.end.4.i
  %call9.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.545, i64 0, i64 0), i64 1) #3, !dbg !4132
  %tobool10.i = icmp eq i32 %call9.i, 0, !dbg !4132
  br i1 %tobool10.i, label %if.end.12.i, label %cleanup.115, !dbg !4134

if.end.12.i:                                      ; preds = %if.end.8.i.159
  %call13.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.546, i64 0, i64 0), i64 65536) #3, !dbg !4135
  %tobool14.i = icmp eq i32 %call13.i, 0, !dbg !4135
  br i1 %tobool14.i, label %if.end.16.i, label %cleanup.115, !dbg !4137

if.end.16.i:                                      ; preds = %if.end.12.i
  %call17.i.160 = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.547, i64 0, i64 0), i64 238328) #3, !dbg !4138
  %tobool18.i = icmp eq i32 %call17.i.160, 0, !dbg !4138
  br i1 %tobool18.i, label %if.end.20.i, label %cleanup.115, !dbg !4140

if.end.20.i:                                      ; preds = %if.end.16.i
  %call21.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.548, i64 0, i64 0), i64 8) #3, !dbg !4141
  %tobool22.i = icmp eq i32 %call21.i, 0, !dbg !4141
  br i1 %tobool22.i, label %if.end.24.i, label %cleanup.115, !dbg !4143

if.end.24.i:                                      ; preds = %if.end.20.i
  %call25.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.549, i64 0, i64 0), i64 1) #3, !dbg !4144
  %tobool26.i = icmp eq i32 %call25.i, 0, !dbg !4144
  br i1 %tobool26.i, label %if.end.28.i, label %cleanup.115, !dbg !4146

if.end.28.i:                                      ; preds = %if.end.24.i
  %call29.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.550, i64 0, i64 0), i64 2) #3, !dbg !4147
  %tobool30.i = icmp eq i32 %call29.i, 0, !dbg !4147
  br i1 %tobool30.i, label %if.end.32.i, label %cleanup.115, !dbg !4149

if.end.32.i:                                      ; preds = %if.end.28.i
  %call33.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.551, i64 0, i64 0), i64 0) #3, !dbg !4150
  %tobool34.i = icmp eq i32 %call33.i, 0, !dbg !4150
  br i1 %tobool34.i, label %if.end.36.i, label %cleanup.115, !dbg !4152

if.end.36.i:                                      ; preds = %if.end.32.i
  %call37.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.552, i64 0, i64 0), i64 1) #3, !dbg !4153
  %tobool38.i = icmp eq i32 %call37.i, 0, !dbg !4153
  br i1 %tobool38.i, label %if.end.40.i, label %cleanup.115, !dbg !4155

if.end.40.i:                                      ; preds = %if.end.36.i
  %call41.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.553, i64 0, i64 0), i64 2) #3, !dbg !4156
  %tobool42.i = icmp eq i32 %call41.i, 0, !dbg !4156
  br i1 %tobool42.i, label %if.end.44.i, label %cleanup.115, !dbg !4158

if.end.44.i:                                      ; preds = %if.end.40.i
  %call45.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.554, i64 0, i64 0), i64 2048) #3, !dbg !4159
  %tobool46.i = icmp eq i32 %call45.i, 0, !dbg !4159
  br i1 %tobool46.i, label %if.end.48.i, label %cleanup.115, !dbg !4161

if.end.48.i:                                      ; preds = %if.end.44.i
  %call49.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.555, i64 0, i64 0), i64 2048) #3, !dbg !4162
  %tobool50.i = icmp eq i32 %call49.i, 0, !dbg !4162
  br i1 %tobool50.i, label %if.end.52.i, label %cleanup.115, !dbg !4164

if.end.52.i:                                      ; preds = %if.end.48.i
  %call53.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.556, i64 0, i64 0), i64 1024) #3, !dbg !4165
  %tobool54.i = icmp eq i32 %call53.i, 0, !dbg !4165
  br i1 %tobool54.i, label %if.end.56.i, label %cleanup.115, !dbg !4167

if.end.56.i:                                      ; preds = %if.end.52.i
  %call57.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.557, i64 0, i64 0), i64 4096) #3, !dbg !4168
  %tobool58.i = icmp eq i32 %call57.i, 0, !dbg !4168
  br i1 %tobool58.i, label %if.end.60.i, label %cleanup.115, !dbg !4170

if.end.60.i:                                      ; preds = %if.end.56.i
  %call61.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.558, i64 0, i64 0), i64 1052672) #3, !dbg !4171
  %tobool62.i = icmp eq i32 %call61.i, 0, !dbg !4171
  br i1 %tobool62.i, label %if.end.64.i, label %cleanup.115, !dbg !4173

if.end.64.i:                                      ; preds = %if.end.60.i
  %call65.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.559, i64 0, i64 0), i64 1052672) #3, !dbg !4174
  %tobool66.i = icmp eq i32 %call65.i, 0, !dbg !4174
  br i1 %tobool66.i, label %if.end.68.i, label %cleanup.115, !dbg !4176

if.end.68.i:                                      ; preds = %if.end.64.i
  %call69.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.560, i64 0, i64 0), i64 256) #3, !dbg !4177
  %tobool70.i = icmp eq i32 %call69.i, 0, !dbg !4177
  br i1 %tobool70.i, label %if.end.72.i, label %cleanup.115, !dbg !4179

if.end.72.i:                                      ; preds = %if.end.68.i
  %call73.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.561, i64 0, i64 0), i64 64) #3, !dbg !4180
  %tobool74.i = icmp eq i32 %call73.i, 0, !dbg !4180
  br i1 %tobool74.i, label %if.end.76.i, label %cleanup.115, !dbg !4182

if.end.76.i:                                      ; preds = %if.end.72.i
  %call77.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.562, i64 0, i64 0), i64 128) #3, !dbg !4183
  %tobool78.i = icmp eq i32 %call77.i, 0, !dbg !4183
  br i1 %tobool78.i, label %if.end.80.i, label %cleanup.115, !dbg !4185

if.end.80.i:                                      ; preds = %if.end.76.i
  %call81.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.563, i64 0, i64 0), i64 512) #3, !dbg !4186
  %tobool82.i = icmp eq i32 %call81.i, 0, !dbg !4186
  br i1 %tobool82.i, label %if.end.84.i, label %cleanup.115, !dbg !4188

if.end.84.i:                                      ; preds = %if.end.80.i
  %call85.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.564, i64 0, i64 0), i64 0) #3, !dbg !4189
  %tobool86.i = icmp eq i32 %call85.i, 0, !dbg !4189
  br i1 %tobool86.i, label %if.end.88.i, label %cleanup.115, !dbg !4191

if.end.88.i:                                      ; preds = %if.end.84.i
  %call89.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.565, i64 0, i64 0), i64 2097152) #3, !dbg !4192
  %tobool90.i = icmp eq i32 %call89.i, 0, !dbg !4192
  br i1 %tobool90.i, label %if.end.92.i, label %cleanup.115, !dbg !4194

if.end.92.i:                                      ; preds = %if.end.88.i
  %call93.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.566, i64 0, i64 0), i64 0) #3, !dbg !4195
  %tobool94.i = icmp eq i32 %call93.i, 0, !dbg !4195
  br i1 %tobool94.i, label %if.end.96.i, label %cleanup.115, !dbg !4197

if.end.96.i:                                      ; preds = %if.end.92.i
  %call97.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.567, i64 0, i64 0), i64 1) #3, !dbg !4198
  %tobool98.i = icmp eq i32 %call97.i, 0, !dbg !4198
  br i1 %tobool98.i, label %if.end.100.i, label %cleanup.115, !dbg !4200

if.end.100.i:                                     ; preds = %if.end.96.i
  %call101.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.568, i64 0, i64 0), i64 2) #3, !dbg !4201
  %tobool102.i = icmp eq i32 %call101.i, 0, !dbg !4201
  br i1 %tobool102.i, label %if.end.104.i, label %cleanup.115, !dbg !4203

if.end.104.i:                                     ; preds = %if.end.100.i
  %call105.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.569, i64 0, i64 0), i64 524288) #3, !dbg !4204
  %tobool106.i = icmp eq i32 %call105.i, 0, !dbg !4204
  br i1 %tobool106.i, label %if.end.108.i, label %cleanup.115, !dbg !4206

if.end.108.i:                                     ; preds = %if.end.104.i
  %call109.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.570, i64 0, i64 0), i64 3) #3, !dbg !4207
  %tobool110.i = icmp eq i32 %call109.i, 0, !dbg !4207
  br i1 %tobool110.i, label %if.end.112.i, label %cleanup.115, !dbg !4209

if.end.112.i:                                     ; preds = %if.end.108.i
  %call113.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.571, i64 0, i64 0), i64 4) #3, !dbg !4210
  %tobool114.i = icmp eq i32 %call113.i, 0, !dbg !4210
  br i1 %tobool114.i, label %if.end.116.i, label %cleanup.115, !dbg !4212

if.end.116.i:                                     ; preds = %if.end.112.i
  %call117.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.572, i64 0, i64 0), i64 3) #3, !dbg !4213
  %tobool118.i = icmp eq i32 %call117.i, 0, !dbg !4213
  br i1 %tobool118.i, label %if.end.120.i, label %cleanup.115, !dbg !4215

if.end.120.i:                                     ; preds = %if.end.116.i
  %call121.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.573, i64 0, i64 0), i64 8192) #3, !dbg !4216
  %tobool122.i = icmp eq i32 %call121.i, 0, !dbg !4216
  br i1 %tobool122.i, label %if.end.124.i, label %cleanup.115, !dbg !4218

if.end.124.i:                                     ; preds = %if.end.120.i
  %call125.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.574, i64 0, i64 0), i64 16384) #3, !dbg !4219
  %tobool126.i = icmp eq i32 %call125.i, 0, !dbg !4219
  br i1 %tobool126.i, label %if.end.128.i, label %cleanup.115, !dbg !4221

if.end.128.i:                                     ; preds = %if.end.124.i
  %call129.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.575, i64 0, i64 0), i64 65536) #3, !dbg !4222
  %tobool130.i = icmp eq i32 %call129.i, 0, !dbg !4222
  br i1 %tobool130.i, label %if.end.132.i, label %cleanup.115, !dbg !4224

if.end.132.i:                                     ; preds = %if.end.128.i
  %call133.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.576, i64 0, i64 0), i64 131072) #3, !dbg !4225
  %tobool134.i = icmp eq i32 %call133.i, 0, !dbg !4225
  br i1 %tobool134.i, label %if.end.136.i, label %cleanup.115, !dbg !4227

if.end.136.i:                                     ; preds = %if.end.132.i
  %call137.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.577, i64 0, i64 0), i64 262144) #3, !dbg !4228
  %tobool138.i = icmp eq i32 %call137.i, 0, !dbg !4228
  br i1 %tobool138.i, label %if.end.140.i, label %cleanup.115, !dbg !4230

if.end.140.i:                                     ; preds = %if.end.136.i
  %call141.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.578, i64 0, i64 0), i64 0) #3, !dbg !4231
  %tobool142.i = icmp eq i32 %call141.i, 0, !dbg !4231
  br i1 %tobool142.i, label %if.end.144.i, label %cleanup.115, !dbg !4233

if.end.144.i:                                     ; preds = %if.end.140.i
  %call145.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.579, i64 0, i64 0), i64 64) #3, !dbg !4234
  %tobool146.i = icmp eq i32 %call145.i, 0, !dbg !4234
  br i1 %tobool146.i, label %if.end.148.i, label %cleanup.115, !dbg !4236

if.end.148.i:                                     ; preds = %if.end.144.i
  %call149.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.580, i64 0, i64 0), i64 65) #3, !dbg !4237
  %tobool150.i = icmp eq i32 %call149.i, 0, !dbg !4237
  br i1 %tobool150.i, label %if.end.152.i, label %cleanup.115, !dbg !4239

if.end.152.i:                                     ; preds = %if.end.148.i
  %call153.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.581, i64 0, i64 0), i64 66) #3, !dbg !4240
  %tobool154.i = icmp eq i32 %call153.i, 0, !dbg !4240
  br i1 %tobool154.i, label %if.end.156.i, label %cleanup.115, !dbg !4242

if.end.156.i:                                     ; preds = %if.end.152.i
  %call157.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.582, i64 0, i64 0), i64 67) #3, !dbg !4243
  %tobool158.i = icmp eq i32 %call157.i, 0, !dbg !4243
  br i1 %tobool158.i, label %if.end.160.i, label %cleanup.115, !dbg !4245

if.end.160.i:                                     ; preds = %if.end.156.i
  %call161.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.583, i64 0, i64 0), i64 68) #3, !dbg !4246
  %tobool162.i = icmp eq i32 %call161.i, 0, !dbg !4246
  br i1 %tobool162.i, label %if.end.164.i, label %cleanup.115, !dbg !4248

if.end.164.i:                                     ; preds = %if.end.160.i
  %call165.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.584, i64 0, i64 0), i64 69) #3, !dbg !4249
  %tobool166.i = icmp eq i32 %call165.i, 0, !dbg !4249
  br i1 %tobool166.i, label %if.end.168.i, label %cleanup.115, !dbg !4251

if.end.168.i:                                     ; preds = %if.end.164.i
  %call169.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.585, i64 0, i64 0), i64 70) #3, !dbg !4252
  %tobool170.i = icmp eq i32 %call169.i, 0, !dbg !4252
  br i1 %tobool170.i, label %if.end.172.i, label %cleanup.115, !dbg !4254

if.end.172.i:                                     ; preds = %if.end.168.i
  %call173.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.586, i64 0, i64 0), i64 71) #3, !dbg !4255
  %tobool174.i = icmp eq i32 %call173.i, 0, !dbg !4255
  br i1 %tobool174.i, label %if.end.176.i, label %cleanup.115, !dbg !4257

if.end.176.i:                                     ; preds = %if.end.172.i
  %call177.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.587, i64 0, i64 0), i64 72) #3, !dbg !4258
  %tobool178.i = icmp eq i32 %call177.i, 0, !dbg !4258
  br i1 %tobool178.i, label %if.end.180.i, label %cleanup.115, !dbg !4260

if.end.180.i:                                     ; preds = %if.end.176.i
  %call181.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.588, i64 0, i64 0), i64 73) #3, !dbg !4261
  %tobool182.i = icmp eq i32 %call181.i, 0, !dbg !4261
  br i1 %tobool182.i, label %if.end.184.i, label %cleanup.115, !dbg !4263

if.end.184.i:                                     ; preds = %if.end.180.i
  %call185.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.589, i64 0, i64 0), i64 74) #3, !dbg !4264
  %tobool186.i = icmp eq i32 %call185.i, 0, !dbg !4264
  br i1 %tobool186.i, label %if.end.188.i, label %cleanup.115, !dbg !4266

if.end.188.i:                                     ; preds = %if.end.184.i
  %call189.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.590, i64 0, i64 0), i64 75) #3, !dbg !4267
  %tobool190.i = icmp eq i32 %call189.i, 0, !dbg !4267
  br i1 %tobool190.i, label %if.end.192.i, label %cleanup.115, !dbg !4269

if.end.192.i:                                     ; preds = %if.end.188.i
  %call193.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.591, i64 0, i64 0), i64 76) #3, !dbg !4270
  %tobool194.i = icmp eq i32 %call193.i, 0, !dbg !4270
  br i1 %tobool194.i, label %if.end.196.i, label %cleanup.115, !dbg !4272

if.end.196.i:                                     ; preds = %if.end.192.i
  %call197.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.592, i64 0, i64 0), i64 77) #3, !dbg !4273
  %tobool198.i = icmp eq i32 %call197.i, 0, !dbg !4273
  br i1 %tobool198.i, label %if.end.200.i, label %cleanup.115, !dbg !4275

if.end.200.i:                                     ; preds = %if.end.196.i
  %call201.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.593, i64 0, i64 0), i64 78) #3, !dbg !4276
  %tobool202.i = icmp eq i32 %call201.i, 0, !dbg !4276
  br i1 %tobool202.i, label %if.end.204.i, label %cleanup.115, !dbg !4278

if.end.204.i:                                     ; preds = %if.end.200.i
  %call205.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.594, i64 0, i64 0), i64 1) #3, !dbg !4279
  %tobool206.i = icmp eq i32 %call205.i, 0, !dbg !4279
  br i1 %tobool206.i, label %if.end.208.i, label %cleanup.115, !dbg !4281

if.end.208.i:                                     ; preds = %if.end.204.i
  %call209.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.595, i64 0, i64 0), i64 2) #3, !dbg !4282
  %tobool210.i = icmp eq i32 %call209.i, 0, !dbg !4282
  br i1 %tobool210.i, label %if.end.212.i, label %cleanup.115, !dbg !4284

if.end.212.i:                                     ; preds = %if.end.208.i
  %call213.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.596, i64 0, i64 0), i64 4) #3, !dbg !4285
  %tobool214.i = icmp eq i32 %call213.i, 0, !dbg !4285
  br i1 %tobool214.i, label %if.end.216.i, label %cleanup.115, !dbg !4287

if.end.216.i:                                     ; preds = %if.end.212.i
  %call217.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.597, i64 0, i64 0), i64 8) #3, !dbg !4288
  %tobool218.i = icmp eq i32 %call217.i, 0, !dbg !4288
  br i1 %tobool218.i, label %if.end.220.i, label %cleanup.115, !dbg !4290

if.end.220.i:                                     ; preds = %if.end.216.i
  %call221.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.598, i64 0, i64 0), i64 16) #3, !dbg !4291
  %tobool222.i = icmp eq i32 %call221.i, 0, !dbg !4291
  br i1 %tobool222.i, label %if.end.224.i, label %cleanup.115, !dbg !4293

if.end.224.i:                                     ; preds = %if.end.220.i
  %call225.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.599, i64 0, i64 0), i64 64) #3, !dbg !4294
  %tobool226.i = icmp eq i32 %call225.i, 0, !dbg !4294
  br i1 %tobool226.i, label %if.end.228.i, label %cleanup.115, !dbg !4296

if.end.228.i:                                     ; preds = %if.end.224.i
  %call229.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.600, i64 0, i64 0), i64 128) #3, !dbg !4297
  %tobool230.i = icmp eq i32 %call229.i, 0, !dbg !4297
  br i1 %tobool230.i, label %if.end.232.i, label %cleanup.115, !dbg !4299

if.end.232.i:                                     ; preds = %if.end.228.i
  %call233.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.601, i64 0, i64 0), i64 256) #3, !dbg !4300
  %tobool234.i = icmp eq i32 %call233.i, 0, !dbg !4300
  br i1 %tobool234.i, label %if.end.236.i, label %cleanup.115, !dbg !4302

if.end.236.i:                                     ; preds = %if.end.232.i
  %call237.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.602, i64 0, i64 0), i64 1024) #3, !dbg !4303
  %tobool238.i = icmp eq i32 %call237.i, 0, !dbg !4303
  br i1 %tobool238.i, label %if.end.240.i, label %cleanup.115, !dbg !4305

if.end.240.i:                                     ; preds = %if.end.236.i
  %call241.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.603, i64 0, i64 0), i64 2048) #3, !dbg !4306
  %tobool242.i = icmp eq i32 %call241.i, 0, !dbg !4306
  br i1 %tobool242.i, label %if.end.244.i, label %cleanup.115, !dbg !4308

if.end.244.i:                                     ; preds = %if.end.240.i
  %call245.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.604, i64 0, i64 0), i64 4096) #3, !dbg !4309
  %tobool246.i = icmp eq i32 %call245.i, 0, !dbg !4309
  br i1 %tobool246.i, label %if.end.248.i, label %cleanup.115, !dbg !4311

if.end.248.i:                                     ; preds = %if.end.244.i
  %call249.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.605, i64 0, i64 0), i64 0) #3, !dbg !4312
  %tobool250.i = icmp eq i32 %call249.i, 0, !dbg !4312
  br i1 %tobool250.i, label %if.end.252.i, label %cleanup.115, !dbg !4314

if.end.252.i:                                     ; preds = %if.end.248.i
  %call253.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.606, i64 0, i64 0), i64 2) #3, !dbg !4315
  %tobool254.i = icmp eq i32 %call253.i, 0, !dbg !4315
  br i1 %tobool254.i, label %if.end.256.i, label %cleanup.115, !dbg !4317

if.end.256.i:                                     ; preds = %if.end.252.i
  %call257.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.607, i64 0, i64 0), i64 1) #3, !dbg !4318
  %tobool258.i = icmp eq i32 %call257.i, 0, !dbg !4318
  br i1 %tobool258.i, label %if.end.260.i, label %cleanup.115, !dbg !4320

if.end.260.i:                                     ; preds = %if.end.256.i
  %call261.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.608, i64 0, i64 0), i64 5) #3, !dbg !4321
  %tobool262.i = icmp eq i32 %call261.i, 0, !dbg !4321
  br i1 %tobool262.i, label %if.end.264.i, label %cleanup.115, !dbg !4323

if.end.264.i:                                     ; preds = %if.end.260.i
  %call265.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.609, i64 0, i64 0), i64 3) #3, !dbg !4324
  %tobool266.i = icmp eq i32 %call265.i, 0, !dbg !4324
  br i1 %tobool266.i, label %if.end.268.i, label %cleanup.115, !dbg !4326

if.end.268.i:                                     ; preds = %if.end.264.i
  %call269.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.610, i64 0, i64 0), i64 4) #3, !dbg !4327
  %tobool270.i = icmp eq i32 %call269.i, 0, !dbg !4327
  br i1 %tobool270.i, label %if.end.272.i, label %cleanup.115, !dbg !4329

if.end.272.i:                                     ; preds = %if.end.268.i
  %call273.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.611, i64 0, i64 0), i64 1) #3, !dbg !4330
  %tobool274.i = icmp eq i32 %call273.i, 0, !dbg !4330
  br i1 %tobool274.i, label %if.end.276.i, label %cleanup.115, !dbg !4332

if.end.276.i:                                     ; preds = %if.end.272.i
  %call277.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.612, i64 0, i64 0), i64 2) #3, !dbg !4333
  %tobool278.i = icmp eq i32 %call277.i, 0, !dbg !4333
  br i1 %tobool278.i, label %if.end.280.i, label %cleanup.115, !dbg !4335

if.end.280.i:                                     ; preds = %if.end.276.i
  %call281.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.613, i64 0, i64 0), i64 0) #3, !dbg !4336
  %tobool282.i = icmp eq i32 %call281.i, 0, !dbg !4336
  br i1 %tobool282.i, label %if.end.284.i, label %cleanup.115, !dbg !4338

if.end.284.i:                                     ; preds = %if.end.280.i
  %call285.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.614, i64 0, i64 0), i64 4) #3, !dbg !4339
  %tobool286.i = icmp eq i32 %call285.i, 0, !dbg !4339
  br i1 %tobool286.i, label %if.end.288.i, label %cleanup.115, !dbg !4341

if.end.288.i:                                     ; preds = %if.end.284.i
  %call289.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.615, i64 0, i64 0), i64 16777216) #3, !dbg !4342
  %tobool290.i = icmp eq i32 %call289.i, 0, !dbg !4342
  br i1 %tobool290.i, label %if.end.292.i, label %cleanup.115, !dbg !4344

if.end.292.i:                                     ; preds = %if.end.288.i
  %call293.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.616, i64 0, i64 0), i64 2) #3, !dbg !4345
  %tobool294.i = icmp eq i32 %call293.i, 0, !dbg !4345
  br i1 %tobool294.i, label %if.end.296.i, label %cleanup.115, !dbg !4347

if.end.296.i:                                     ; preds = %if.end.292.i
  %call297.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.617, i64 0, i64 0), i64 1) #3, !dbg !4348
  %tobool298.i = icmp eq i32 %call297.i, 0, !dbg !4348
  br i1 %tobool298.i, label %if.end.300.i, label %cleanup.115, !dbg !4350

if.end.300.i:                                     ; preds = %if.end.296.i
  %call301.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.618, i64 0, i64 0), i64 3) #3, !dbg !4351
  %tobool302.i = icmp eq i32 %call301.i, 0, !dbg !4351
  br i1 %tobool302.i, label %if.end.304.i, label %cleanup.115, !dbg !4353

if.end.304.i:                                     ; preds = %if.end.300.i
  %call305.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.619, i64 0, i64 0), i64 4) #3, !dbg !4354
  %tobool306.i = icmp eq i32 %call305.i, 0, !dbg !4354
  br i1 %tobool306.i, label %if.end.308.i, label %cleanup.115, !dbg !4356

if.end.308.i:                                     ; preds = %if.end.304.i
  %call309.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.620, i64 0, i64 0), i64 6) #3, !dbg !4357
  %tobool310.i = icmp eq i32 %call309.i, 0, !dbg !4357
  br i1 %tobool310.i, label %if.end.312.i, label %cleanup.115, !dbg !4359

if.end.312.i:                                     ; preds = %if.end.308.i
  %call313.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.621, i64 0, i64 0), i64 1) #3, !dbg !4360
  %tobool314.i = icmp eq i32 %call313.i, 0, !dbg !4360
  br i1 %tobool314.i, label %if.end.316.i, label %cleanup.115, !dbg !4362

if.end.316.i:                                     ; preds = %if.end.312.i
  %call317.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.622, i64 0, i64 0), i64 2) #3, !dbg !4363
  %tobool318.i = icmp eq i32 %call317.i, 0, !dbg !4363
  br i1 %tobool318.i, label %if.end.320.i, label %cleanup.115, !dbg !4365

if.end.320.i:                                     ; preds = %if.end.316.i
  %call321.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.623, i64 0, i64 0), i64 0) #3, !dbg !4366
  %tobool322.i = icmp eq i32 %call321.i, 0, !dbg !4366
  br i1 %tobool322.i, label %if.end.324.i, label %cleanup.115, !dbg !4368

if.end.324.i:                                     ; preds = %if.end.320.i
  %call325.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.624, i64 0, i64 0), i64 3) #3, !dbg !4369
  %tobool326.i = icmp eq i32 %call325.i, 0, !dbg !4369
  br i1 %tobool326.i, label %if.end.328.i, label %cleanup.115, !dbg !4371

if.end.328.i:                                     ; preds = %if.end.324.i
  %call329.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.625, i64 0, i64 0), i64 0) #3, !dbg !4372
  %tobool330.i = icmp eq i32 %call329.i, 0, !dbg !4372
  br i1 %tobool330.i, label %if.end.332.i, label %cleanup.115, !dbg !4374

if.end.332.i:                                     ; preds = %if.end.328.i
  %call333.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.626, i64 0, i64 0), i64 1) #3, !dbg !4375
  %tobool334.i = icmp eq i32 %call333.i, 0, !dbg !4375
  br i1 %tobool334.i, label %if.end.336.i, label %cleanup.115, !dbg !4377

if.end.336.i:                                     ; preds = %if.end.332.i
  %call337.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.627, i64 0, i64 0), i64 2) #3, !dbg !4378
  %tobool338.i = icmp eq i32 %call337.i, 0, !dbg !4378
  br i1 %tobool338.i, label %if.end.340.i, label %cleanup.115, !dbg !4380

if.end.340.i:                                     ; preds = %if.end.336.i
  %call341.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.628, i64 0, i64 0), i64 3) #3, !dbg !4381
  %tobool342.i = icmp eq i32 %call341.i, 0, !dbg !4381
  br i1 %tobool342.i, label %if.end.344.i, label %cleanup.115, !dbg !4383

if.end.344.i:                                     ; preds = %if.end.340.i
  %call345.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.629, i64 0, i64 0), i64 5) #3, !dbg !4384
  %tobool346.i = icmp eq i32 %call345.i, 0, !dbg !4384
  br i1 %tobool346.i, label %if.end.348.i, label %cleanup.115, !dbg !4386

if.end.348.i:                                     ; preds = %if.end.344.i
  %call349.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.630, i64 0, i64 0), i64 1073741824) #3, !dbg !4387
  %tobool350.i = icmp eq i32 %call349.i, 0, !dbg !4387
  br i1 %tobool350.i, label %if.end.352.i, label %cleanup.115, !dbg !4389

if.end.352.i:                                     ; preds = %if.end.348.i
  %call353.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.631, i64 0, i64 0), i64 1) #3, !dbg !4390
  %tobool354.i = icmp eq i32 %call353.i, 0, !dbg !4390
  br i1 %tobool354.i, label %if.end.356.i, label %cleanup.115, !dbg !4392

if.end.356.i:                                     ; preds = %if.end.352.i
  %call357.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.632, i64 0, i64 0), i64 2) #3, !dbg !4393
  %tobool358.i = icmp eq i32 %call357.i, 0, !dbg !4393
  br i1 %tobool358.i, label %if.end.360.i, label %cleanup.115, !dbg !4395

if.end.360.i:                                     ; preds = %if.end.356.i
  %call361.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.633, i64 0, i64 0), i64 65536) #3, !dbg !4396
  %tobool362.i = icmp eq i32 %call361.i, 0, !dbg !4396
  br i1 %tobool362.i, label %if.end.364.i, label %cleanup.115, !dbg !4398

if.end.364.i:                                     ; preds = %if.end.360.i
  %call365.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.634, i64 0, i64 0), i64 1) #3, !dbg !4399
  %tobool366.i = icmp eq i32 %call365.i, 0, !dbg !4399
  br i1 %tobool366.i, label %if.end.368.i, label %cleanup.115, !dbg !4401

if.end.368.i:                                     ; preds = %if.end.364.i
  %call369.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.635, i64 0, i64 0), i64 2) #3, !dbg !4402
  %tobool370.i = icmp eq i32 %call369.i, 0, !dbg !4402
  br i1 %tobool370.i, label %if.end.372.i, label %cleanup.115, !dbg !4404

if.end.372.i:                                     ; preds = %if.end.368.i
  %call373.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.636, i64 0, i64 0), i64 256) #3, !dbg !4405
  %tobool374.i = icmp eq i32 %call373.i, 0, !dbg !4405
  br i1 %tobool374.i, label %if.end.376.i, label %cleanup.115, !dbg !4407

if.end.376.i:                                     ; preds = %if.end.372.i
  %call377.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.637, i64 0, i64 0), i64 0) #3, !dbg !4408
  %tobool378.i = icmp eq i32 %call377.i, 0, !dbg !4408
  br i1 %tobool378.i, label %if.end.380.i, label %cleanup.115, !dbg !4410

if.end.380.i:                                     ; preds = %if.end.376.i
  %call381.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.638, i64 0, i64 0), i64 4096) #3, !dbg !4411
  %tobool382.i = icmp eq i32 %call381.i, 0, !dbg !4411
  br i1 %tobool382.i, label %if.end.384.i, label %cleanup.115, !dbg !4413

if.end.384.i:                                     ; preds = %if.end.380.i
  %call385.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.639, i64 0, i64 0), i64 4) #3, !dbg !4414
  %tobool386.i = icmp eq i32 %call385.i, 0, !dbg !4414
  br i1 %tobool386.i, label %all_ins.exit, label %cleanup.115, !dbg !4416

all_ins.exit:                                     ; preds = %if.end.384.i
  %call389.i = tail call i32 @PyModule_AddIntConstant(%struct._object* %call, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.640, i64 0, i64 0), i64 8) #3, !dbg !4417
  %not.tobool390.i = icmp eq i32 %call389.i, 0, !dbg !4419
  br i1 %not.tobool390.i, label %if.end.19, label %cleanup.115, !dbg !4420

if.end.19:                                        ; preds = %all_ins.exit
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !3135, metadata !3839) #3, !dbg !4421
  %call.i.162 = tail call fastcc i32 @setup_confname_table(%struct.constdef* getelementptr inbounds ([20 x %struct.constdef], [20 x %struct.constdef]* @posix_constants_pathconf, i64 0, i64 0), i64 20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.641, i64 0, i64 0), %struct._object* %call) #3, !dbg !4424
  %tobool.i.163 = icmp eq i32 %call.i.162, 0, !dbg !4424
  br i1 %tobool.i.163, label %if.end.i.166, label %cleanup.115, !dbg !4426

if.end.i.166:                                     ; preds = %if.end.19
  %call1.i.164 = tail call fastcc i32 @setup_confname_table(%struct.constdef* getelementptr inbounds ([27 x %struct.constdef], [27 x %struct.constdef]* @posix_constants_confstr, i64 0, i64 0), i64 27, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.642, i64 0, i64 0), %struct._object* %call) #3, !dbg !4427
  %tobool2.i.165 = icmp eq i32 %call1.i.164, 0, !dbg !4427
  br i1 %tobool2.i.165, label %setup_confname_tables.exit, label %cleanup.115, !dbg !4429

setup_confname_tables.exit:                       ; preds = %if.end.i.166
  %call5.i.167 = tail call fastcc i32 @setup_confname_table(%struct.constdef* getelementptr inbounds ([134 x %struct.constdef], [134 x %struct.constdef]* @posix_constants_sysconf, i64 0, i64 0), i64 134, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.643, i64 0, i64 0), %struct._object* %call) #3, !dbg !4430
  %not.tobool6.i = icmp eq i32 %call5.i.167, 0, !dbg !4432
  br i1 %not.tobool6.i, label %if.end.23, label %cleanup.115, !dbg !4433

if.end.23:                                        ; preds = %setup_confname_tables.exit
  %17 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !4434, !tbaa !3870
  %ob_refcnt24 = getelementptr inbounds %struct._object, %struct._object* %17, i64 0, i32 0, !dbg !4434
  %18 = load i64, i64* %ob_refcnt24, align 8, !dbg !4434, !tbaa !3930
  %inc25 = add i64 %18, 1, !dbg !4434
  store i64 %inc25, i64* %ob_refcnt24, align 8, !dbg !4434, !tbaa !3930
  %call26 = tail call i32 @PyModule_AddObject(%struct._object* %call, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), %struct._object* %17) #3, !dbg !4435
  %19 = load %struct._object*, %struct._object** @posix_putenv_garbage, align 8, !dbg !4436, !tbaa !3870
  %cmp27 = icmp eq %struct._object* %19, null, !dbg !4438
  br i1 %cmp27, label %if.then.28, label %if.end.30, !dbg !4439

if.then.28:                                       ; preds = %if.end.23
  %call29 = tail call %struct._object* @PyDict_New() #3, !dbg !4440
  store %struct._object* %call29, %struct._object** @posix_putenv_garbage, align 8, !dbg !4441, !tbaa !3870
  br label %if.end.30, !dbg !4442

if.end.30:                                        ; preds = %if.then.28, %if.end.23
  %.b = load i1, i1* @initialized, align 1
  br i1 %.b, label %if.end.58, label %if.then.32, !dbg !4443

if.then.32:                                       ; preds = %if.end.30
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0), i8** getelementptr inbounds (%struct.PyStructSequence_Desc, %struct.PyStructSequence_Desc* @waitid_result_desc, i64 0, i32 0), align 8, !dbg !4444, !tbaa !4447
  %call33 = tail call i32 @PyStructSequence_InitType2(%struct._typeobject* nonnull @WaitidResultType, %struct.PyStructSequence_Desc* nonnull @waitid_result_desc) #3, !dbg !4449
  %cmp34 = icmp slt i32 %call33, 0, !dbg !4451
  br i1 %cmp34, label %cleanup.115, label %if.end.36, !dbg !4452

if.end.36:                                        ; preds = %if.then.32
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), i8** getelementptr inbounds (%struct.PyStructSequence_Desc, %struct.PyStructSequence_Desc* @stat_result_desc, i64 0, i32 0), align 8, !dbg !4453, !tbaa !4447
  %20 = load i64, i64* bitcast (i8** @PyStructSequence_UnnamedField to i64*), align 8, !dbg !4454, !tbaa !3870
  %21 = load %struct.PyStructSequence_Field*, %struct.PyStructSequence_Field** getelementptr inbounds (%struct.PyStructSequence_Desc, %struct.PyStructSequence_Desc* @stat_result_desc, i64 0, i32 2), align 8, !dbg !4455, !tbaa !4456
  %arrayidx = getelementptr %struct.PyStructSequence_Field, %struct.PyStructSequence_Field* %21, i64 7, !dbg !4457
  %22 = bitcast %struct.PyStructSequence_Field* %arrayidx to i64*, !dbg !4458
  store i64 %20, i64* %22, align 8, !dbg !4458, !tbaa !4459
  %23 = load i64, i64* bitcast (i8** @PyStructSequence_UnnamedField to i64*), align 8, !dbg !4461, !tbaa !3870
  %arrayidx37 = getelementptr %struct.PyStructSequence_Field, %struct.PyStructSequence_Field* %21, i64 8, !dbg !4462
  %24 = bitcast %struct.PyStructSequence_Field* %arrayidx37 to i64*, !dbg !4463
  store i64 %23, i64* %24, align 8, !dbg !4463, !tbaa !4459
  %25 = load i64, i64* bitcast (i8** @PyStructSequence_UnnamedField to i64*), align 8, !dbg !4464, !tbaa !3870
  %arrayidx39 = getelementptr %struct.PyStructSequence_Field, %struct.PyStructSequence_Field* %21, i64 9, !dbg !4465
  %26 = bitcast %struct.PyStructSequence_Field* %arrayidx39 to i64*, !dbg !4466
  store i64 %25, i64* %26, align 8, !dbg !4466, !tbaa !4459
  %call41 = tail call i32 @PyStructSequence_InitType2(%struct._typeobject* nonnull @StatResultType, %struct.PyStructSequence_Desc* nonnull @stat_result_desc) #3, !dbg !4467
  %cmp42 = icmp slt i32 %call41, 0, !dbg !4469
  br i1 %cmp42, label %cleanup.115, label %if.end.44, !dbg !4470

if.end.44:                                        ; preds = %if.end.36
  %27 = load i64, i64* bitcast (%struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)** getelementptr inbounds (%struct._typeobject, %struct._typeobject* @StatResultType, i64 0, i32 37) to i64*), align 8, !dbg !4471, !tbaa !4472
  store i64 %27, i64* bitcast (%struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)** @structseq_new to i64*), align 8, !dbg !4473, !tbaa !3870
  store %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @statresult_new, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)** getelementptr inbounds (%struct._typeobject, %struct._typeobject* @StatResultType, i64 0, i32 37), align 8, !dbg !4474, !tbaa !4472
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8** getelementptr inbounds (%struct.PyStructSequence_Desc, %struct.PyStructSequence_Desc* @statvfs_result_desc, i64 0, i32 0), align 8, !dbg !4475, !tbaa !4447
  %call45 = tail call i32 @PyStructSequence_InitType2(%struct._typeobject* nonnull @StatVFSResultType, %struct.PyStructSequence_Desc* nonnull @statvfs_result_desc) #3, !dbg !4476
  %cmp46 = icmp slt i32 %call45, 0, !dbg !4478
  br i1 %cmp46, label %cleanup.115, label %if.end.48, !dbg !4479

if.end.48:                                        ; preds = %if.end.44
  %call49 = tail call i64 @sysconf(i32 2) #3, !dbg !4480
  store i64 %call49, i64* @ticks_per_second, align 8, !dbg !4481, !tbaa !4482
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i64 0, i64 0), i8** getelementptr inbounds (%struct.PyStructSequence_Desc, %struct.PyStructSequence_Desc* @sched_param_desc, i64 0, i32 0), align 8, !dbg !4483, !tbaa !4447
  %call50 = tail call i32 @PyStructSequence_InitType2(%struct._typeobject* nonnull @SchedParamType, %struct.PyStructSequence_Desc* nonnull @sched_param_desc) #3, !dbg !4484
  %cmp51 = icmp slt i32 %call50, 0, !dbg !4486
  br i1 %cmp51, label %cleanup.115, label %if.end.53, !dbg !4487

if.end.53:                                        ; preds = %if.end.48
  store %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @sched_param_new, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)** getelementptr inbounds (%struct._typeobject, %struct._typeobject* @SchedParamType, i64 0, i32 37), align 8, !dbg !4488, !tbaa !4472
  %call54 = tail call i32 @PyStructSequence_InitType2(%struct._typeobject* nonnull @TerminalSizeType, %struct.PyStructSequence_Desc* nonnull @TerminalSize_desc) #3, !dbg !4489
  %cmp55 = icmp slt i32 %call54, 0, !dbg !4491
  br i1 %cmp55, label %cleanup.115, label %if.end.58, !dbg !4492

if.end.58:                                        ; preds = %if.end.53, %if.end.30
  %28 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @WaitidResultType, i64 0, i32 0, i32 0, i32 0), align 8, !dbg !4493, !tbaa !3930
  %inc59 = add i64 %28, 1, !dbg !4493
  store i64 %inc59, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @WaitidResultType, i64 0, i32 0, i32 0, i32 0), align 8, !dbg !4493, !tbaa !3930
  %call60 = tail call i32 @PyModule_AddObject(%struct._object* %call, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i64 0, i64 0), %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @WaitidResultType, i64 0, i32 0, i32 0)) #3, !dbg !4494
  %29 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @StatResultType, i64 0, i32 0, i32 0, i32 0), align 8, !dbg !4495, !tbaa !3930
  %inc61 = add i64 %29, 1, !dbg !4495
  store i64 %inc61, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @StatResultType, i64 0, i32 0, i32 0, i32 0), align 8, !dbg !4495, !tbaa !3930
  %call62 = tail call i32 @PyModule_AddObject(%struct._object* %call, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.13, i64 0, i64 0), %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @StatResultType, i64 0, i32 0, i32 0)) #3, !dbg !4496
  %30 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @StatVFSResultType, i64 0, i32 0, i32 0, i32 0), align 8, !dbg !4497, !tbaa !3930
  %inc63 = add i64 %30, 1, !dbg !4497
  store i64 %inc63, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @StatVFSResultType, i64 0, i32 0, i32 0, i32 0), align 8, !dbg !4497, !tbaa !3930
  %call64 = tail call i32 @PyModule_AddObject(%struct._object* %call, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @StatVFSResultType, i64 0, i32 0, i32 0)) #3, !dbg !4498
  %31 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @SchedParamType, i64 0, i32 0, i32 0, i32 0), align 8, !dbg !4499, !tbaa !3930
  %inc65 = add i64 %31, 1, !dbg !4499
  store i64 %inc65, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @SchedParamType, i64 0, i32 0, i32 0, i32 0), align 8, !dbg !4499, !tbaa !3930
  %call66 = tail call i32 @PyModule_AddObject(%struct._object* %call, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0), %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @SchedParamType, i64 0, i32 0, i32 0)) #3, !dbg !4500
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16, i64 0, i64 0), i8** getelementptr inbounds (%struct.PyStructSequence_Desc, %struct.PyStructSequence_Desc* @times_result_desc, i64 0, i32 0), align 8, !dbg !4501, !tbaa !4447
  %call67 = tail call i32 @PyStructSequence_InitType2(%struct._typeobject* nonnull @TimesResultType, %struct.PyStructSequence_Desc* nonnull @times_result_desc) #3, !dbg !4502
  %cmp68 = icmp slt i32 %call67, 0, !dbg !4504
  br i1 %cmp68, label %cleanup.115, label %if.end.70, !dbg !4505

if.end.70:                                        ; preds = %if.end.58
  %call71 = tail call i32 @PyModule_AddObject(%struct._object* %call, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @TimesResultType, i64 0, i32 0, i32 0)) #3, !dbg !4506
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.18, i64 0, i64 0), i8** getelementptr inbounds (%struct.PyStructSequence_Desc, %struct.PyStructSequence_Desc* @uname_result_desc, i64 0, i32 0), align 8, !dbg !4507, !tbaa !4447
  %call72 = tail call i32 @PyStructSequence_InitType2(%struct._typeobject* nonnull @UnameResultType, %struct.PyStructSequence_Desc* nonnull @uname_result_desc) #3, !dbg !4508
  %cmp73 = icmp slt i32 %call72, 0, !dbg !4510
  br i1 %cmp73, label %cleanup.115, label %if.end.75, !dbg !4511

if.end.75:                                        ; preds = %if.end.70
  %call76 = tail call i32 @PyModule_AddObject(%struct._object* %call, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0), %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @UnameResultType, i64 0, i32 0, i32 0)) #3, !dbg !4512
  %32 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @TerminalSizeType, i64 0, i32 0, i32 0, i32 0), align 8, !dbg !4513, !tbaa !3930
  %inc77 = add i64 %32, 1, !dbg !4513
  store i64 %inc77, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @TerminalSizeType, i64 0, i32 0, i32 0, i32 0), align 8, !dbg !4513, !tbaa !3930
  %call78 = tail call i32 @PyModule_AddObject(%struct._object* %call, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20, i64 0, i64 0), %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @TerminalSizeType, i64 0, i32 0, i32 0)) #3, !dbg !4514
  %call79 = tail call %struct._object* @PyLong_FromLong(i64 1000000000) #3, !dbg !4515
  store %struct._object* %call79, %struct._object** @billion, align 8, !dbg !4516, !tbaa !3870
  %tobool80 = icmp eq %struct._object* %call79, null, !dbg !4517
  br i1 %tobool80, label %cleanup.115, label %if.end.82, !dbg !4519

if.end.82:                                        ; preds = %if.end.75
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i32 0, i32 0), i64 0, metadata !3215, metadata !3839), !dbg !4520
  tail call void @llvm.dbg.value(metadata %struct._object* @_Py_NoneStruct, i64 0, metadata !3220, metadata !3839), !dbg !4522
  tail call void @llvm.dbg.value(metadata i8* undef, i64 0, metadata !3221, metadata !3839), !dbg !4524
  tail call void @llvm.dbg.value(metadata %struct._object* @_Py_NoneStruct, i64 0, metadata !3224, metadata !3839), !dbg !4525
  tail call void @llvm.dbg.value(metadata %struct._object* @_Py_NoneStruct, i64 0, metadata !3220, metadata !3839), !dbg !4527
  tail call void @llvm.dbg.value(metadata i8* undef, i64 0, metadata !3221, metadata !3839), !dbg !4530
  tail call void @llvm.dbg.value(metadata i32 -100, i64 0, metadata !3226, metadata !3839), !dbg !4531
  %call88 = tail call %struct._object* @PyList_New(i64 0) #3, !dbg !4532
  tail call void @llvm.dbg.value(metadata %struct._object* %call88, i64 0, metadata !731, metadata !3839), !dbg !4533
  %tobool89 = icmp eq %struct._object* %call88, null, !dbg !4534
  br i1 %tobool89, label %cleanup.115, label %for.body.preheader, !dbg !4536

for.body.preheader:                               ; preds = %if.end.82
  br label %for.body, !dbg !4537

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %33 = phi i8* [ %37, %for.inc ], [ getelementptr inbounds ([15 x i8], [15 x i8]* @.str.723, i64 0, i64 0), %for.body.preheader ]
  %trace.0176 = phi i8** [ %incdec.ptr, %for.inc ], [ getelementptr inbounds ([29 x i8*], [29 x i8*]* @have_functions, i64 0, i64 0), %for.body.preheader ]
  %call93 = tail call i64 @strlen(i8* %33) #11, !dbg !4537
  %call94 = tail call %struct._object* @PyUnicode_DecodeASCII(i8* %33, i64 %call93, i8* null) #3, !dbg !4538
  tail call void @llvm.dbg.value(metadata %struct._object* %call94, i64 0, metadata !739, metadata !3839), !dbg !4539
  %tobool95 = icmp eq %struct._object* %call94, null, !dbg !4540
  br i1 %tobool95, label %cleanup.115.loopexit, label %if.end.97, !dbg !4542

if.end.97:                                        ; preds = %for.body
  %call98 = tail call i32 @PyList_Append(%struct._object* %call88, %struct._object* %call94) #3, !dbg !4543
  %tobool99 = icmp eq i32 %call98, 0, !dbg !4543
  br i1 %tobool99, label %do.body.102, label %cleanup.115.loopexit, !dbg !4545

do.body.102:                                      ; preds = %if.end.97
  tail call void @llvm.dbg.value(metadata %struct._object* %call94, i64 0, metadata !743, metadata !3839), !dbg !4546
  %ob_refcnt104 = getelementptr inbounds %struct._object, %struct._object* %call94, i64 0, i32 0, !dbg !4548
  %34 = load i64, i64* %ob_refcnt104, align 8, !dbg !4548, !tbaa !3930
  %dec105 = add i64 %34, -1, !dbg !4548
  store i64 %dec105, i64* %ob_refcnt104, align 8, !dbg !4548, !tbaa !3930
  %cmp106 = icmp eq i64 %dec105, 0, !dbg !4548
  br i1 %cmp106, label %if.else.108, label %for.inc, !dbg !4550

if.else.108:                                      ; preds = %do.body.102
  %ob_type109 = getelementptr inbounds %struct._object, %struct._object* %call94, i64 0, i32 1, !dbg !4551
  %35 = load %struct._typeobject*, %struct._typeobject** %ob_type109, align 8, !dbg !4551, !tbaa !3875
  %tp_dealloc110 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %35, i64 0, i32 4, !dbg !4551
  %36 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc110, align 8, !dbg !4551, !tbaa !3934
  tail call void %36(%struct._object* %call94) #3, !dbg !4551
  br label %for.inc

for.inc:                                          ; preds = %do.body.102, %if.else.108
  %incdec.ptr = getelementptr i8*, i8** %trace.0176, i64 1, !dbg !4553
  tail call void @llvm.dbg.value(metadata i8** %incdec.ptr, i64 0, metadata !732, metadata !3839), !dbg !4554
  %37 = load i8*, i8** %incdec.ptr, align 8, !dbg !4555, !tbaa !3870
  %tobool92 = icmp eq i8* %37, null, !dbg !4556
  br i1 %tobool92, label %for.end, label %for.body, !dbg !4556

for.end:                                          ; preds = %for.inc
  %call114 = tail call i32 @PyModule_AddObject(%struct._object* %call, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.23, i64 0, i64 0), %struct._object* %call88) #3, !dbg !4557
  store i1 true, i1* @initialized, align 1
  br label %cleanup.115, !dbg !4558

cleanup.115.loopexit:                             ; preds = %for.body, %if.end.97
  br label %cleanup.115, !dbg !4559

cleanup.115:                                      ; preds = %cleanup.115.loopexit, %if.end, %setup_confname_tables.exit, %all_ins.exit, %if.end.i.166, %if.end.19, %if.end.384.i, %if.end.380.i, %if.end.376.i, %if.end.372.i, %if.end.368.i, %if.end.364.i, %if.end.360.i, %if.end.356.i, %if.end.352.i, %if.end.348.i, %if.end.344.i, %if.end.340.i, %if.end.336.i, %if.end.332.i, %if.end.328.i, %if.end.324.i, %if.end.320.i, %if.end.316.i, %if.end.312.i, %if.end.308.i, %if.end.304.i, %if.end.300.i, %if.end.296.i, %if.end.292.i, %if.end.288.i, %if.end.284.i, %if.end.280.i, %if.end.276.i, %if.end.272.i, %if.end.268.i, %if.end.264.i, %if.end.260.i, %if.end.256.i, %if.end.252.i, %if.end.248.i, %if.end.244.i, %if.end.240.i, %if.end.236.i, %if.end.232.i, %if.end.228.i, %if.end.224.i, %if.end.220.i, %if.end.216.i, %if.end.212.i, %if.end.208.i, %if.end.204.i, %if.end.200.i, %if.end.196.i, %if.end.192.i, %if.end.188.i, %if.end.184.i, %if.end.180.i, %if.end.176.i, %if.end.172.i, %if.end.168.i, %if.end.164.i, %if.end.160.i, %if.end.156.i, %if.end.152.i, %if.end.148.i, %if.end.144.i, %if.end.140.i, %if.end.136.i, %if.end.132.i, %if.end.128.i, %if.end.124.i, %if.end.120.i, %if.end.116.i, %if.end.112.i, %if.end.108.i, %if.end.104.i, %if.end.100.i, %if.end.96.i, %if.end.92.i, %if.end.88.i, %if.end.84.i, %if.end.80.i, %if.end.76.i, %if.end.72.i, %if.end.68.i, %if.end.64.i, %if.end.60.i, %if.end.56.i, %if.end.52.i, %if.end.48.i, %if.end.44.i, %if.end.40.i, %if.end.36.i, %if.end.32.i, %if.end.28.i, %if.end.24.i, %if.end.20.i, %if.end.16.i, %if.end.12.i, %if.end.8.i.159, %if.end.4.i, %if.end.i.157, %if.end.14, %convertenviron.exit, %if.end.82, %if.end.75, %if.end.70, %if.end.58, %if.end.53, %if.end.48, %if.end.44, %if.end.36, %if.then.32, %if.then.3, %entry, %for.end
  %retval.2 = phi %struct._object* [ %call, %for.end ], [ null, %entry ], [ null, %convertenviron.exit ], [ null, %if.then.3 ], [ null, %all_ins.exit ], [ null, %setup_confname_tables.exit ], [ null, %if.then.32 ], [ null, %if.end.36 ], [ null, %if.end.44 ], [ null, %if.end.48 ], [ null, %if.end.53 ], [ null, %if.end.58 ], [ null, %if.end.70 ], [ null, %if.end.75 ], [ null, %if.end.82 ], [ null, %if.end.14 ], [ null, %if.end.i.157 ], [ null, %if.end.4.i ], [ null, %if.end.8.i.159 ], [ null, %if.end.12.i ], [ null, %if.end.16.i ], [ null, %if.end.20.i ], [ null, %if.end.24.i ], [ null, %if.end.28.i ], [ null, %if.end.32.i ], [ null, %if.end.36.i ], [ null, %if.end.40.i ], [ null, %if.end.44.i ], [ null, %if.end.48.i ], [ null, %if.end.52.i ], [ null, %if.end.56.i ], [ null, %if.end.60.i ], [ null, %if.end.64.i ], [ null, %if.end.68.i ], [ null, %if.end.72.i ], [ null, %if.end.76.i ], [ null, %if.end.80.i ], [ null, %if.end.84.i ], [ null, %if.end.88.i ], [ null, %if.end.92.i ], [ null, %if.end.96.i ], [ null, %if.end.100.i ], [ null, %if.end.104.i ], [ null, %if.end.108.i ], [ null, %if.end.112.i ], [ null, %if.end.116.i ], [ null, %if.end.120.i ], [ null, %if.end.124.i ], [ null, %if.end.128.i ], [ null, %if.end.132.i ], [ null, %if.end.136.i ], [ null, %if.end.140.i ], [ null, %if.end.144.i ], [ null, %if.end.148.i ], [ null, %if.end.152.i ], [ null, %if.end.156.i ], [ null, %if.end.160.i ], [ null, %if.end.164.i ], [ null, %if.end.168.i ], [ null, %if.end.172.i ], [ null, %if.end.176.i ], [ null, %if.end.180.i ], [ null, %if.end.184.i ], [ null, %if.end.188.i ], [ null, %if.end.192.i ], [ null, %if.end.196.i ], [ null, %if.end.200.i ], [ null, %if.end.204.i ], [ null, %if.end.208.i ], [ null, %if.end.212.i ], [ null, %if.end.216.i ], [ null, %if.end.220.i ], [ null, %if.end.224.i ], [ null, %if.end.228.i ], [ null, %if.end.232.i ], [ null, %if.end.236.i ], [ null, %if.end.240.i ], [ null, %if.end.244.i ], [ null, %if.end.248.i ], [ null, %if.end.252.i ], [ null, %if.end.256.i ], [ null, %if.end.260.i ], [ null, %if.end.264.i ], [ null, %if.end.268.i ], [ null, %if.end.272.i ], [ null, %if.end.276.i ], [ null, %if.end.280.i ], [ null, %if.end.284.i ], [ null, %if.end.288.i ], [ null, %if.end.292.i ], [ null, %if.end.296.i ], [ null, %if.end.300.i ], [ null, %if.end.304.i ], [ null, %if.end.308.i ], [ null, %if.end.312.i ], [ null, %if.end.316.i ], [ null, %if.end.320.i ], [ null, %if.end.324.i ], [ null, %if.end.328.i ], [ null, %if.end.332.i ], [ null, %if.end.336.i ], [ null, %if.end.340.i ], [ null, %if.end.344.i ], [ null, %if.end.348.i ], [ null, %if.end.352.i ], [ null, %if.end.356.i ], [ null, %if.end.360.i ], [ null, %if.end.364.i ], [ null, %if.end.368.i ], [ null, %if.end.372.i ], [ null, %if.end.376.i ], [ null, %if.end.380.i ], [ null, %if.end.384.i ], [ null, %if.end.19 ], [ null, %if.end.i.166 ], [ null, %if.end ], [ null, %cleanup.115.loopexit ]
  ret %struct._object* %retval.2, !dbg !4559
}

declare %struct._object* @PyModule_Create2(%struct.PyModuleDef*, i32) #2

declare i32 @PyModule_AddObject(%struct._object*, i8*, %struct._object*) #2

declare %struct._object* @PyDict_New() #2

declare i32 @PyStructSequence_InitType2(%struct._typeobject*, %struct.PyStructSequence_Desc*) #2

; Function Attrs: nounwind uwtable
define internal %struct._object* @statresult_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._typeobject* %type, i64 0, metadata !3178, metadata !3839), !dbg !4560
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !3179, metadata !3839), !dbg !4561
  tail call void @llvm.dbg.value(metadata %struct._object* %kwds, i64 0, metadata !3180, metadata !3839), !dbg !4562
  %0 = load %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)** @structseq_new, align 8, !dbg !4563, !tbaa !3870
  %call = tail call %struct._object* %0(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #3, !dbg !4563
  %tobool = icmp eq %struct._object* %call, null, !dbg !4564
  br i1 %tobool, label %cleanup, label %for.cond.preheader, !dbg !4566

for.cond.preheader:                               ; preds = %entry
  %ob_item = getelementptr inbounds %struct._object, %struct._object* %call, i64 1, i32 1, !dbg !4567
  %arrayidx = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 10, !dbg !4568
  %1 = bitcast %struct._typeobject** %arrayidx to %struct._object**, !dbg !4568
  %2 = load %struct._object*, %struct._object** %1, align 8, !dbg !4568, !tbaa !3870
  %cmp1 = icmp eq %struct._object* %2, @_Py_NoneStruct, !dbg !4569
  br i1 %cmp1, label %do.body, label %for.inc, !dbg !4570

do.body:                                          ; preds = %for.cond.preheader
  tail call void @llvm.dbg.value(metadata %struct._object* @_Py_NoneStruct, i64 0, metadata !3183, metadata !3839), !dbg !4571
  %3 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !4573, !tbaa !3930
  %dec = add i64 %3, -1, !dbg !4573
  store i64 %dec, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !4573, !tbaa !3930
  %cmp3 = icmp eq i64 %dec, 0, !dbg !4573
  br i1 %cmp3, label %if.else, label %if.end.5, !dbg !4575

if.else:                                          ; preds = %do.body
  %4 = load %struct._typeobject*, %struct._typeobject** getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 1), align 8, !dbg !4576, !tbaa !3875
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i64 0, i32 4, !dbg !4576
  %5 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4576, !tbaa !3934
  tail call void %5(%struct._object* nonnull @_Py_NoneStruct) #3, !dbg !4576
  br label %if.end.5

if.end.5:                                         ; preds = %do.body, %if.else
  %arrayidx8 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 7, !dbg !4578
  %6 = bitcast %struct._typeobject** %arrayidx8 to %struct._object**, !dbg !4578
  %7 = load %struct._object*, %struct._object** %6, align 8, !dbg !4578, !tbaa !3870
  %ob_refcnt9 = getelementptr inbounds %struct._object, %struct._object* %7, i64 0, i32 0, !dbg !4578
  %8 = load i64, i64* %ob_refcnt9, align 8, !dbg !4578, !tbaa !3930
  %inc = add i64 %8, 1, !dbg !4578
  store i64 %inc, i64* %ob_refcnt9, align 8, !dbg !4578, !tbaa !3930
  %9 = ptrtoint %struct._object* %7 to i64, !dbg !4579
  %10 = bitcast %struct._typeobject** %arrayidx to i64*, !dbg !4580
  store i64 %9, i64* %10, align 8, !dbg !4580, !tbaa !3870
  br label %for.inc, !dbg !4581

for.inc:                                          ; preds = %for.cond.preheader, %if.end.5
  %arrayidx.1 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 11, !dbg !4568
  %11 = bitcast %struct._typeobject** %arrayidx.1 to %struct._object**, !dbg !4568
  %12 = load %struct._object*, %struct._object** %11, align 8, !dbg !4568, !tbaa !3870
  %cmp1.1 = icmp eq %struct._object* %12, @_Py_NoneStruct, !dbg !4569
  br i1 %cmp1.1, label %do.body.1, label %for.inc.1, !dbg !4570

cleanup:                                          ; preds = %for.inc.1, %if.end.5.2, %entry
  %retval.0 = phi %struct._object* [ null, %entry ], [ %call, %if.end.5.2 ], [ %call, %for.inc.1 ]
  ret %struct._object* %retval.0, !dbg !4582

do.body.1:                                        ; preds = %for.inc
  tail call void @llvm.dbg.value(metadata %struct._object* @_Py_NoneStruct, i64 0, metadata !3183, metadata !3839), !dbg !4571
  %13 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !4573, !tbaa !3930
  %dec.1 = add i64 %13, -1, !dbg !4573
  store i64 %dec.1, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !4573, !tbaa !3930
  %cmp3.1 = icmp eq i64 %dec.1, 0, !dbg !4573
  br i1 %cmp3.1, label %if.else.1, label %if.end.5.1, !dbg !4575

if.else.1:                                        ; preds = %do.body.1
  %14 = load %struct._typeobject*, %struct._typeobject** getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 1), align 8, !dbg !4576, !tbaa !3875
  %tp_dealloc.1 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i64 0, i32 4, !dbg !4576
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.1, align 8, !dbg !4576, !tbaa !3934
  tail call void %15(%struct._object* nonnull @_Py_NoneStruct) #3, !dbg !4576
  br label %if.end.5.1

if.end.5.1:                                       ; preds = %if.else.1, %do.body.1
  %arrayidx8.1 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 8, !dbg !4578
  %16 = bitcast %struct._typeobject** %arrayidx8.1 to %struct._object**, !dbg !4578
  %17 = load %struct._object*, %struct._object** %16, align 8, !dbg !4578, !tbaa !3870
  %ob_refcnt9.1 = getelementptr inbounds %struct._object, %struct._object* %17, i64 0, i32 0, !dbg !4578
  %18 = load i64, i64* %ob_refcnt9.1, align 8, !dbg !4578, !tbaa !3930
  %inc.1 = add i64 %18, 1, !dbg !4578
  store i64 %inc.1, i64* %ob_refcnt9.1, align 8, !dbg !4578, !tbaa !3930
  %19 = ptrtoint %struct._object* %17 to i64, !dbg !4579
  %20 = bitcast %struct._typeobject** %arrayidx.1 to i64*, !dbg !4580
  store i64 %19, i64* %20, align 8, !dbg !4580, !tbaa !3870
  br label %for.inc.1, !dbg !4581

for.inc.1:                                        ; preds = %if.end.5.1, %for.inc
  %arrayidx.2 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 12, !dbg !4568
  %21 = bitcast %struct._typeobject** %arrayidx.2 to %struct._object**, !dbg !4568
  %22 = load %struct._object*, %struct._object** %21, align 8, !dbg !4568, !tbaa !3870
  %cmp1.2 = icmp eq %struct._object* %22, @_Py_NoneStruct, !dbg !4569
  br i1 %cmp1.2, label %do.body.2, label %cleanup, !dbg !4570

do.body.2:                                        ; preds = %for.inc.1
  tail call void @llvm.dbg.value(metadata %struct._object* @_Py_NoneStruct, i64 0, metadata !3183, metadata !3839), !dbg !4571
  %23 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !4573, !tbaa !3930
  %dec.2 = add i64 %23, -1, !dbg !4573
  store i64 %dec.2, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !4573, !tbaa !3930
  %cmp3.2 = icmp eq i64 %dec.2, 0, !dbg !4573
  br i1 %cmp3.2, label %if.else.2, label %if.end.5.2, !dbg !4575

if.else.2:                                        ; preds = %do.body.2
  %24 = load %struct._typeobject*, %struct._typeobject** getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 1), align 8, !dbg !4576, !tbaa !3875
  %tp_dealloc.2 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %24, i64 0, i32 4, !dbg !4576
  %25 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.2, align 8, !dbg !4576, !tbaa !3934
  tail call void %25(%struct._object* nonnull @_Py_NoneStruct) #3, !dbg !4576
  br label %if.end.5.2

if.end.5.2:                                       ; preds = %if.else.2, %do.body.2
  %arrayidx8.2 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 9, !dbg !4578
  %26 = bitcast %struct._typeobject** %arrayidx8.2 to %struct._object**, !dbg !4578
  %27 = load %struct._object*, %struct._object** %26, align 8, !dbg !4578, !tbaa !3870
  %ob_refcnt9.2 = getelementptr inbounds %struct._object, %struct._object* %27, i64 0, i32 0, !dbg !4578
  %28 = load i64, i64* %ob_refcnt9.2, align 8, !dbg !4578, !tbaa !3930
  %inc.2 = add i64 %28, 1, !dbg !4578
  store i64 %inc.2, i64* %ob_refcnt9.2, align 8, !dbg !4578, !tbaa !3930
  %29 = ptrtoint %struct._object* %27 to i64, !dbg !4579
  %30 = bitcast %struct._typeobject** %arrayidx.2 to i64*, !dbg !4580
  store i64 %29, i64* %30, align 8, !dbg !4580, !tbaa !3870
  br label %cleanup, !dbg !4581
}

; Function Attrs: nounwind
declare i64 @sysconf(i32) #4

; Function Attrs: nounwind uwtable
define internal %struct._object* @sched_param_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  %priority = alloca %struct._object*, align 8
  tail call void @llvm.dbg.value(metadata %struct._typeobject* %type, i64 0, metadata !3192, metadata !3839), !dbg !4583
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !3193, metadata !3839), !dbg !4584
  tail call void @llvm.dbg.value(metadata %struct._object* %kwargs, i64 0, metadata !3194, metadata !3839), !dbg !4585
  %0 = bitcast %struct._object** %priority to i8*, !dbg !4586
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !4586
  tail call void @llvm.dbg.value(metadata %struct._object** %priority, i64 0, metadata !3196, metadata !3839), !dbg !4587
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %args, %struct._object* %kwargs, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.695, i64 0, i64 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @sched_param_new.kwlist, i64 0, i64 0), %struct._object** nonnull %priority) #3, !dbg !4588
  %tobool = icmp eq i32 %call, 0, !dbg !4588
  br i1 %tobool, label %cleanup, label %if.end, !dbg !4590

if.end:                                           ; preds = %entry
  %call1 = call %struct._object* @PyStructSequence_New(%struct._typeobject* %type) #3, !dbg !4591
  call void @llvm.dbg.value(metadata %struct._object* %call1, i64 0, metadata !3195, metadata !3839), !dbg !4592
  %tobool2 = icmp eq %struct._object* %call1, null, !dbg !4593
  br i1 %tobool2, label %cleanup, label %if.end.4, !dbg !4595

if.end.4:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct._object** %priority, i64 0, metadata !3196, metadata !3839), !dbg !4587
  %1 = load %struct._object*, %struct._object** %priority, align 8, !dbg !4596, !tbaa !3870
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i64 0, i32 0, !dbg !4596
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !4596, !tbaa !3930
  %inc = add i64 %2, 1, !dbg !4596
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !4596, !tbaa !3930
  call void @llvm.dbg.value(metadata %struct._object** %priority, i64 0, metadata !3196, metadata !3839), !dbg !4587
  %3 = ptrtoint %struct._object* %1 to i64, !dbg !4597
  %ob_item = getelementptr inbounds %struct._object, %struct._object* %call1, i64 1, i32 1, !dbg !4597
  %4 = bitcast %struct._typeobject** %ob_item to i64*, !dbg !4597
  store i64 %3, i64* %4, align 8, !dbg !4597, !tbaa !3870
  br label %cleanup, !dbg !4598

cleanup:                                          ; preds = %if.end, %entry, %if.end.4
  %retval.0 = phi %struct._object* [ %call1, %if.end.4 ], [ null, %entry ], [ null, %if.end ]
  call void @llvm.lifetime.end(i64 8, i8* %0) #3, !dbg !4599
  ret %struct._object* %retval.0, !dbg !4599
}

; Function Attrs: nounwind uwtable
define internal i32 @dir_fd_converter(%struct._object* %o, i8* nocapture %p) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %o, i64 0, metadata !3220, metadata !3839), !dbg !4600
  tail call void @llvm.dbg.value(metadata i8* %p, i64 0, metadata !3221, metadata !3839), !dbg !4601
  %cmp = icmp eq %struct._object* %o, @_Py_NoneStruct, !dbg !4602
  %0 = bitcast i8* %p to i32*, !dbg !4604
  br i1 %cmp, label %if.then, label %if.end, !dbg !4606

if.then:                                          ; preds = %entry
  store i32 -100, i32* %0, align 4, !dbg !4607, !tbaa !3890
  br label %return, !dbg !4608

if.end:                                           ; preds = %entry
  %call = tail call fastcc i32 @_fd_converter(%struct._object* %o, i32* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.722, i64 0, i64 0)), !dbg !4609
  br label %return, !dbg !4610

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ 1, %if.then ], [ %call, %if.end ]
  ret i32 %retval.0, !dbg !4611
}

declare %struct._object* @PyList_New(i64) #2

declare %struct._object* @PyUnicode_DecodeASCII(i8*, i64, i8*) #2

; Function Attrs: nounwind readonly
declare i64 @strlen(i8* nocapture) #5

declare i32 @PyList_Append(%struct._object*, %struct._object*) #2

; Function Attrs: nounwind uwtable
define internal %struct._object* @os_stat(%struct.PyModuleDef* nocapture readnone %module, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  %path = alloca %struct.path_t, align 8
  %dir_fd = alloca i32, align 4
  %follow_symlinks = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct.PyModuleDef* %module, i64 0, metadata !773, metadata !3839), !dbg !4612
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !774, metadata !3839), !dbg !4613
  tail call void @llvm.dbg.value(metadata %struct._object* %kwargs, i64 0, metadata !775, metadata !3839), !dbg !4614
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !776, metadata !3839), !dbg !4615
  %0 = bitcast %struct.path_t* %path to i8*, !dbg !4616
  call void @llvm.lifetime.start(i64 72, i8* %0) #3, !dbg !4616
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 72, i32 8, i1 false), !dbg !4617
  %1 = getelementptr %struct.path_t, %struct.path_t* %path, i64 0, i32 0, !dbg !4617
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i64 0, i64 0), i8** %1, align 8, !dbg !4617
  %2 = getelementptr %struct.path_t, %struct.path_t* %path, i64 0, i32 3, !dbg !4617
  store i32 1, i32* %2, align 4, !dbg !4617
  %3 = bitcast i32* %dir_fd to i8*, !dbg !4618
  call void @llvm.lifetime.start(i64 4, i8* %3) #3, !dbg !4618
  tail call void @llvm.dbg.value(metadata i32 -100, i64 0, metadata !778, metadata !3839), !dbg !4619
  store i32 -100, i32* %dir_fd, align 4, !dbg !4619, !tbaa !3890
  %4 = bitcast i32* %follow_symlinks to i8*, !dbg !4620
  call void @llvm.lifetime.start(i64 4, i8* %4) #3, !dbg !4620
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !779, metadata !3839), !dbg !4621
  store i32 1, i32* %follow_symlinks, align 4, !dbg !4621, !tbaa !3890
  tail call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !777, metadata !3839), !dbg !4617
  tail call void @llvm.dbg.value(metadata i32* %dir_fd, i64 0, metadata !778, metadata !3839), !dbg !4619
  tail call void @llvm.dbg.value(metadata i32* %follow_symlinks, i64 0, metadata !779, metadata !3839), !dbg !4621
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %args, %struct._object* %kwargs, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.172, i64 0, i64 0), i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @os_stat._keywords, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @path_converter, %struct.path_t* nonnull %path, i32 (%struct._object*, i8*)* nonnull @dir_fd_converter, i32* nonnull %dir_fd, i32* nonnull %follow_symlinks) #3, !dbg !4622
  %tobool = icmp eq i32 %call, 0, !dbg !4622
  br i1 %tobool, label %exit, label %if.end, !dbg !4624

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %dir_fd, i64 0, metadata !778, metadata !3839), !dbg !4619
  %5 = load i32, i32* %dir_fd, align 4, !dbg !4625, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %follow_symlinks, i64 0, metadata !779, metadata !3839), !dbg !4621
  %6 = load i32, i32* %follow_symlinks, align 4, !dbg !4626, !tbaa !3890
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !777, metadata !3839), !dbg !4617
  call void @llvm.dbg.value(metadata %struct.PyModuleDef* null, i64 0, metadata !821, metadata !3839) #3, !dbg !4627
  %call.i = call fastcc %struct._object* @posix_do_stat(%struct.path_t* nonnull %path, i32 %5, i32 %6) #3, !dbg !4629
  call void @llvm.dbg.value(metadata %struct._object* %call.i, i64 0, metadata !776, metadata !3839), !dbg !4615
  br label %exit, !dbg !4630

exit:                                             ; preds = %entry, %if.end
  %return_value.0 = phi %struct._object* [ %call.i, %if.end ], [ null, %entry ]
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !777, metadata !3839), !dbg !4617
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1054, metadata !3839) #3, !dbg !4631
  %cleanup.i = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 9, !dbg !4633
  %7 = load %struct._object*, %struct._object** %cleanup.i, align 8, !dbg !4633, !tbaa !4634
  %tobool.i = icmp eq %struct._object* %7, null, !dbg !4636
  br i1 %tobool.i, label %path_cleanup.exit, label %if.then.2.i, !dbg !4637

if.then.2.i:                                      ; preds = %exit
  call void @llvm.dbg.value(metadata %struct._object* %7, i64 0, metadata !1055, metadata !3839) #3, !dbg !4638
  store %struct._object* null, %struct._object** %cleanup.i, align 8, !dbg !4640, !tbaa !4634
  call void @llvm.dbg.value(metadata %struct._object* %7, i64 0, metadata !1059, metadata !3839) #3, !dbg !4642
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %7, i64 0, i32 0, !dbg !4644
  %8 = load i64, i64* %ob_refcnt.i, align 8, !dbg !4644, !tbaa !3930
  %dec.i = add i64 %8, -1, !dbg !4644
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !4644, !tbaa !3930
  %cmp5.i = icmp eq i64 %dec.i, 0, !dbg !4644
  br i1 %cmp5.i, label %if.else.i, label %path_cleanup.exit, !dbg !4646

if.else.i:                                        ; preds = %if.then.2.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %7, i64 0, i32 1, !dbg !4647
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !4647, !tbaa !3875
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i64 0, i32 4, !dbg !4647
  %10 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !4647, !tbaa !3934
  call void %10(%struct._object* %7) #3, !dbg !4647
  br label %path_cleanup.exit, !dbg !4649

path_cleanup.exit:                                ; preds = %exit, %if.then.2.i, %if.else.i
  call void @llvm.lifetime.end(i64 4, i8* %4) #3, !dbg !4650
  call void @llvm.lifetime.end(i64 4, i8* %3) #3, !dbg !4650
  call void @llvm.lifetime.end(i64 72, i8* %0) #3, !dbg !4650
  ret %struct._object* %return_value.0, !dbg !4651
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @os_access(%struct.PyModuleDef* nocapture readnone %module, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  %path = alloca %struct.path_t, align 8
  %mode = alloca i32, align 4
  %dir_fd = alloca i32, align 4
  %effective_ids = alloca i32, align 4
  %follow_symlinks = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct.PyModuleDef* %module, i64 0, metadata !1065, metadata !3839), !dbg !4652
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1066, metadata !3839), !dbg !4653
  tail call void @llvm.dbg.value(metadata %struct._object* %kwargs, i64 0, metadata !1067, metadata !3839), !dbg !4654
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1068, metadata !3839), !dbg !4655
  %0 = bitcast %struct.path_t* %path to i8*, !dbg !4656
  call void @llvm.lifetime.start(i64 72, i8* %0) #3, !dbg !4656
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 72, i32 8, i1 false), !dbg !4657
  %1 = getelementptr %struct.path_t, %struct.path_t* %path, i64 0, i32 0, !dbg !4657
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i64 0, i64 0), i8** %1, align 8, !dbg !4657
  %2 = getelementptr %struct.path_t, %struct.path_t* %path, i64 0, i32 3, !dbg !4657
  store i32 1, i32* %2, align 4, !dbg !4657
  %3 = bitcast i32* %mode to i8*, !dbg !4658
  call void @llvm.lifetime.start(i64 4, i8* %3) #3, !dbg !4658
  %4 = bitcast i32* %dir_fd to i8*, !dbg !4659
  call void @llvm.lifetime.start(i64 4, i8* %4) #3, !dbg !4659
  tail call void @llvm.dbg.value(metadata i32 -100, i64 0, metadata !1071, metadata !3839), !dbg !4660
  store i32 -100, i32* %dir_fd, align 4, !dbg !4660, !tbaa !3890
  %5 = bitcast i32* %effective_ids to i8*, !dbg !4661
  call void @llvm.lifetime.start(i64 4, i8* %5) #3, !dbg !4661
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1072, metadata !3839), !dbg !4662
  store i32 0, i32* %effective_ids, align 4, !dbg !4662, !tbaa !3890
  %6 = bitcast i32* %follow_symlinks to i8*, !dbg !4663
  call void @llvm.lifetime.start(i64 4, i8* %6) #3, !dbg !4663
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !1073, metadata !3839), !dbg !4664
  store i32 1, i32* %follow_symlinks, align 4, !dbg !4664, !tbaa !3890
  tail call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1069, metadata !3839), !dbg !4657
  tail call void @llvm.dbg.value(metadata i32* %mode, i64 0, metadata !1070, metadata !3839), !dbg !4665
  tail call void @llvm.dbg.value(metadata i32* %dir_fd, i64 0, metadata !1071, metadata !3839), !dbg !4660
  tail call void @llvm.dbg.value(metadata i32* %effective_ids, i64 0, metadata !1072, metadata !3839), !dbg !4662
  tail call void @llvm.dbg.value(metadata i32* %follow_symlinks, i64 0, metadata !1073, metadata !3839), !dbg !4664
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %args, %struct._object* %kwargs, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.186, i64 0, i64 0), i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @os_access._keywords, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @path_converter, %struct.path_t* nonnull %path, i32* nonnull %mode, i32 (%struct._object*, i8*)* nonnull @dir_fd_converter, i32* nonnull %dir_fd, i32* nonnull %effective_ids, i32* nonnull %follow_symlinks) #3, !dbg !4666
  %tobool = icmp eq i32 %call, 0, !dbg !4666
  br i1 %tobool, label %exit, label %if.end, !dbg !4668

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %mode, i64 0, metadata !1070, metadata !3839), !dbg !4665
  %7 = load i32, i32* %mode, align 4, !dbg !4669, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %dir_fd, i64 0, metadata !1071, metadata !3839), !dbg !4660
  %8 = load i32, i32* %dir_fd, align 4, !dbg !4670, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %effective_ids, i64 0, metadata !1072, metadata !3839), !dbg !4662
  %9 = load i32, i32* %effective_ids, align 4, !dbg !4671, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %follow_symlinks, i64 0, metadata !1073, metadata !3839), !dbg !4664
  %10 = load i32, i32* %follow_symlinks, align 4, !dbg !4672, !tbaa !3890
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1069, metadata !3839), !dbg !4657
  call void @llvm.dbg.value(metadata %struct.PyModuleDef* null, i64 0, metadata !1078, metadata !3839) #3, !dbg !4673
  call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1084, metadata !3839) #3, !dbg !4675
  %call.i = call %struct._ts* @PyEval_SaveThread() #3, !dbg !4676
  call void @llvm.dbg.value(metadata %struct._ts* %call.i, i64 0, metadata !1086, metadata !3839) #3, !dbg !4676
  %cmp.i = icmp ne i32 %8, -100, !dbg !4677
  %tobool.i = icmp ne i32 %9, 0, !dbg !4678
  %or.cond.i = or i1 %cmp.i, %tobool.i, !dbg !4679
  %or.cond.not.i = xor i1 %or.cond.i, true, !dbg !4679
  %tobool2.i = icmp ne i32 %10, 0, !dbg !4680
  %or.cond15.i = and i1 %tobool2.i, %or.cond.not.i, !dbg !4679
  %11 = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 5, !dbg !4681
  %12 = load i8*, i8** %11, align 8, !dbg !4681
  br i1 %or.cond15.i, label %if.else.i, label %if.then.i, !dbg !4679

if.then.i:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1088, metadata !3839) #3, !dbg !4682
  call void @llvm.dbg.value(metadata i32 256, i64 0, metadata !1088, metadata !3839) #3, !dbg !4682
  %..i = select i1 %tobool2.i, i32 0, i32 256, !dbg !4683
  %or7.i = or i32 %..i, 512, !dbg !4684
  call void @llvm.dbg.value(metadata i32 %or7.i, i64 0, metadata !1088, metadata !3839) #3, !dbg !4682
  %flags.1.i = select i1 %tobool.i, i32 %or7.i, i32 %..i, !dbg !4686
  %call9.i = call i32 @faccessat(i32 %8, i8* %12, i32 %7, i32 %flags.1.i) #3, !dbg !4687
  call void @llvm.dbg.value(metadata i32 %call9.i, i64 0, metadata !1085, metadata !3839) #3, !dbg !4688
  br label %os_access_impl.exit, !dbg !4689

if.else.i:                                        ; preds = %if.end
  %call11.i = call i32 @access(i8* %12, i32 %7) #3, !dbg !4690
  call void @llvm.dbg.value(metadata i32 %call11.i, i64 0, metadata !1085, metadata !3839) #3, !dbg !4688
  br label %os_access_impl.exit, !dbg !4691

os_access_impl.exit:                              ; preds = %if.then.i, %if.else.i
  %result.0.i = phi i32 [ %call11.i, %if.else.i ], [ %call9.i, %if.then.i ], !dbg !4691
  call void @PyEval_RestoreThread(%struct._ts* %call.i) #3, !dbg !4692
  %lnot.i = icmp eq i32 %result.0.i, 0, !dbg !4693
  %conv.i = zext i1 %lnot.i to i64, !dbg !4693
  %call14.i = call %struct._object* @PyBool_FromLong(i64 %conv.i) #3, !dbg !4694
  call void @llvm.dbg.value(metadata %struct._object* %call14.i, i64 0, metadata !1084, metadata !3839) #3, !dbg !4675
  call void @llvm.dbg.value(metadata %struct._object* %call14.i, i64 0, metadata !1068, metadata !3839), !dbg !4655
  br label %exit, !dbg !4695

exit:                                             ; preds = %entry, %os_access_impl.exit
  %return_value.0 = phi %struct._object* [ %call14.i, %os_access_impl.exit ], [ null, %entry ]
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1069, metadata !3839), !dbg !4657
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1054, metadata !3839) #3, !dbg !4696
  %cleanup.i = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 9, !dbg !4698
  %13 = load %struct._object*, %struct._object** %cleanup.i, align 8, !dbg !4698, !tbaa !4634
  %tobool.i.3 = icmp eq %struct._object* %13, null, !dbg !4699
  br i1 %tobool.i.3, label %path_cleanup.exit, label %if.then.2.i, !dbg !4700

if.then.2.i:                                      ; preds = %exit
  call void @llvm.dbg.value(metadata %struct._object* %13, i64 0, metadata !1055, metadata !3839) #3, !dbg !4701
  store %struct._object* null, %struct._object** %cleanup.i, align 8, !dbg !4702, !tbaa !4634
  call void @llvm.dbg.value(metadata %struct._object* %13, i64 0, metadata !1059, metadata !3839) #3, !dbg !4703
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %13, i64 0, i32 0, !dbg !4704
  %14 = load i64, i64* %ob_refcnt.i, align 8, !dbg !4704, !tbaa !3930
  %dec.i = add i64 %14, -1, !dbg !4704
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !4704, !tbaa !3930
  %cmp5.i = icmp eq i64 %dec.i, 0, !dbg !4704
  br i1 %cmp5.i, label %if.else.i.4, label %path_cleanup.exit, !dbg !4705

if.else.i.4:                                      ; preds = %if.then.2.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %13, i64 0, i32 1, !dbg !4706
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !4706, !tbaa !3875
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i64 0, i32 4, !dbg !4706
  %16 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !4706, !tbaa !3934
  call void %16(%struct._object* %13) #3, !dbg !4706
  br label %path_cleanup.exit, !dbg !4707

path_cleanup.exit:                                ; preds = %exit, %if.then.2.i, %if.else.i.4
  call void @llvm.lifetime.end(i64 4, i8* %6) #3, !dbg !4708
  call void @llvm.lifetime.end(i64 4, i8* %5) #3, !dbg !4708
  call void @llvm.lifetime.end(i64 4, i8* %4) #3, !dbg !4708
  call void @llvm.lifetime.end(i64 4, i8* %3) #3, !dbg !4708
  call void @llvm.lifetime.end(i64 72, i8* %0) #3, !dbg !4708
  ret %struct._object* %return_value.0, !dbg !4709
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @os_ttyname(%struct.PyModuleDef* nocapture readnone %module, %struct._object* %args) #0 {
entry:
  %fd = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct.PyModuleDef* %module, i64 0, metadata !1095, metadata !3839), !dbg !4710
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1096, metadata !3839), !dbg !4711
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1097, metadata !3839), !dbg !4712
  %0 = bitcast i32* %fd to i8*, !dbg !4713
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !4713
  tail call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !1098, metadata !3839), !dbg !4714
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.187, i64 0, i64 0), i32* nonnull %fd) #3, !dbg !4715
  %tobool = icmp eq i32 %call, 0, !dbg !4715
  br i1 %tobool, label %exit, label %if.end, !dbg !4717

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !1098, metadata !3839), !dbg !4714
  %1 = load i32, i32* %fd, align 4, !dbg !4718, !tbaa !3890
  call void @llvm.dbg.value(metadata %struct.PyModuleDef* null, i64 0, metadata !1104, metadata !3839) #3, !dbg !4719
  %call.i = call i8* @ttyname(i32 %1) #3, !dbg !4721
  call void @llvm.dbg.value(metadata i8* %call.i, i64 0, metadata !1106, metadata !3839) #3, !dbg !4722
  %cmp.i = icmp eq i8* %call.i, null, !dbg !4723
  br i1 %cmp.i, label %os_ttyname_impl.exit.thread, label %if.end.3, !dbg !4725

os_ttyname_impl.exit.thread:                      ; preds = %if.end
  %2 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !4726, !tbaa !3870
  %call.i.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %2) #3, !dbg !4728
  call void @llvm.dbg.value(metadata i8* %call.i, i64 0, metadata !1099, metadata !3839), !dbg !4729
  br label %exit, !dbg !4730

if.end.3:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata i8* %call.i, i64 0, metadata !1099, metadata !3839), !dbg !4729
  %call4 = call %struct._object* @PyUnicode_DecodeFSDefault(i8* %call.i) #3, !dbg !4731
  call void @llvm.dbg.value(metadata %struct._object* %call4, i64 0, metadata !1097, metadata !3839), !dbg !4712
  br label %exit, !dbg !4732

exit:                                             ; preds = %os_ttyname_impl.exit.thread, %entry, %if.end.3
  %return_value.0 = phi %struct._object* [ %call4, %if.end.3 ], [ null, %entry ], [ null, %os_ttyname_impl.exit.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !4733
  ret %struct._object* %return_value.0, !dbg !4734
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_chdir(%struct._object* nocapture readnone %self, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  %path = alloca %struct.path_t, align 8
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1111, metadata !3839), !dbg !4735
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1112, metadata !3839), !dbg !4736
  tail call void @llvm.dbg.value(metadata %struct._object* %kwargs, i64 0, metadata !1113, metadata !3839), !dbg !4737
  %0 = bitcast %struct.path_t* %path to i8*, !dbg !4738
  call void @llvm.lifetime.start(i64 72, i8* %0) #3, !dbg !4738
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1116, metadata !3839), !dbg !4739
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 72, i32 8, i1 false), !dbg !4740
  %function_name = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 0, !dbg !4741
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0), i8** %function_name, align 8, !dbg !4742, !tbaa !4743
  %allow_fd = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 3, !dbg !4744
  store i32 1, i32* %allow_fd, align 4, !dbg !4745, !tbaa !4746
  tail call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1114, metadata !3839), !dbg !4747
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %args, %struct._object* %kwargs, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.188, i64 0, i64 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @posix_chdir.keywords, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @path_converter, %struct.path_t* nonnull %path) #3, !dbg !4748
  %tobool = icmp eq i32 %call, 0, !dbg !4748
  br i1 %tobool, label %cleanup, label %if.end, !dbg !4750

if.end:                                           ; preds = %entry
  %call1 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !4751
  call void @llvm.dbg.value(metadata %struct._ts* %call1, i64 0, metadata !1117, metadata !3839), !dbg !4751
  %fd = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 6, !dbg !4752
  %1 = load i32, i32* %fd, align 8, !dbg !4752, !tbaa !4754
  %cmp = icmp eq i32 %1, -1, !dbg !4755
  br i1 %cmp, label %if.else, label %if.then.2, !dbg !4756

if.then.2:                                        ; preds = %if.end
  %call4 = call i32 @fchdir(i32 %1) #3, !dbg !4757
  call void @llvm.dbg.value(metadata i32 %call4, i64 0, metadata !1115, metadata !3839), !dbg !4758
  br label %if.end.6, !dbg !4759

if.else:                                          ; preds = %if.end
  %narrow = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 5, !dbg !4760
  %2 = load i8*, i8** %narrow, align 8, !dbg !4760, !tbaa !4761
  %call5 = call i32 @chdir(i8* %2) #3, !dbg !4762
  call void @llvm.dbg.value(metadata i32 %call5, i64 0, metadata !1115, metadata !3839), !dbg !4758
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.2
  %result.0 = phi i32 [ %call4, %if.then.2 ], [ %call5, %if.else ]
  call void @PyEval_RestoreThread(%struct._ts* %call1) #3, !dbg !4763
  %tobool7 = icmp eq i32 %result.0, 0, !dbg !4764
  br i1 %tobool7, label %if.end.10, label %if.then.8, !dbg !4766

if.then.8:                                        ; preds = %if.end.6
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1114, metadata !3839), !dbg !4747
  %path.idx = getelementptr %struct.path_t, %struct.path_t* %path, i64 0, i32 8
  %path.idx.val = load %struct._object*, %struct._object** %path.idx, align 8, !tbaa !4767
  %3 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !4768, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrnoWithFilenameObject(%struct._object* %3, %struct._object* %path.idx.val) #3, !dbg !4771
  call void @llvm.dbg.value(metadata %struct._object* %call.i, i64 0, metadata !1116, metadata !3839), !dbg !4739
  br label %exit, !dbg !4772

if.end.10:                                        ; preds = %if.end.6
  call void @llvm.dbg.value(metadata %struct._object* @_Py_NoneStruct, i64 0, metadata !1116, metadata !3839), !dbg !4739
  %4 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !4773, !tbaa !3930
  %inc = add i64 %4, 1, !dbg !4773
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !4773, !tbaa !3930
  br label %exit, !dbg !4773

exit:                                             ; preds = %if.end.10, %if.then.8
  %return_value.0 = phi %struct._object* [ %call.i, %if.then.8 ], [ @_Py_NoneStruct, %if.end.10 ]
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1114, metadata !3839), !dbg !4747
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1054, metadata !3839) #3, !dbg !4774
  %cleanup.i = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 9, !dbg !4776
  %5 = load %struct._object*, %struct._object** %cleanup.i, align 8, !dbg !4776, !tbaa !4634
  %tobool.i = icmp eq %struct._object* %5, null, !dbg !4777
  br i1 %tobool.i, label %cleanup, label %if.then.2.i, !dbg !4778

if.then.2.i:                                      ; preds = %exit
  call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !1055, metadata !3839) #3, !dbg !4779
  store %struct._object* null, %struct._object** %cleanup.i, align 8, !dbg !4780, !tbaa !4634
  call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !1059, metadata !3839) #3, !dbg !4781
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 0, !dbg !4782
  %6 = load i64, i64* %ob_refcnt.i, align 8, !dbg !4782, !tbaa !3930
  %dec.i = add i64 %6, -1, !dbg !4782
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !4782, !tbaa !3930
  %cmp5.i = icmp eq i64 %dec.i, 0, !dbg !4782
  br i1 %cmp5.i, label %if.else.i, label %cleanup, !dbg !4783

if.else.i:                                        ; preds = %if.then.2.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 1, !dbg !4784
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !4784, !tbaa !3875
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i64 0, i32 4, !dbg !4784
  %8 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !4784, !tbaa !3934
  call void %8(%struct._object* %5) #3, !dbg !4784
  br label %cleanup, !dbg !4785

cleanup:                                          ; preds = %if.else.i, %if.then.2.i, %exit, %entry
  %retval.0 = phi %struct._object* [ null, %entry ], [ %return_value.0, %exit ], [ %return_value.0, %if.then.2.i ], [ %return_value.0, %if.else.i ]
  call void @llvm.lifetime.end(i64 72, i8* %0) #3, !dbg !4786
  ret %struct._object* %retval.0, !dbg !4786
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_chmod(%struct._object* nocapture readnone %self, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  %path = alloca %struct.path_t, align 8
  %mode = alloca i32, align 4
  %dir_fd = alloca i32, align 4
  %follow_symlinks = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1121, metadata !3839), !dbg !4787
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1122, metadata !3839), !dbg !4788
  tail call void @llvm.dbg.value(metadata %struct._object* %kwargs, i64 0, metadata !1123, metadata !3839), !dbg !4789
  %0 = bitcast %struct.path_t* %path to i8*, !dbg !4790
  call void @llvm.lifetime.start(i64 72, i8* %0) #3, !dbg !4790
  %1 = bitcast i32* %mode to i8*, !dbg !4791
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !4791
  %2 = bitcast i32* %dir_fd to i8*, !dbg !4792
  call void @llvm.lifetime.start(i64 4, i8* %2) #3, !dbg !4792
  tail call void @llvm.dbg.value(metadata i32 -100, i64 0, metadata !1126, metadata !3839), !dbg !4793
  store i32 -100, i32* %dir_fd, align 4, !dbg !4793, !tbaa !3890
  %3 = bitcast i32* %follow_symlinks to i8*, !dbg !4794
  call void @llvm.lifetime.start(i64 4, i8* %3) #3, !dbg !4794
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !1127, metadata !3839), !dbg !4795
  store i32 1, i32* %follow_symlinks, align 4, !dbg !4795, !tbaa !3890
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1129, metadata !3839), !dbg !4796
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1130, metadata !3839), !dbg !4797
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 72, i32 8, i1 false), !dbg !4798
  %function_name = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 0, !dbg !4799
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i64 0, i64 0), i8** %function_name, align 8, !dbg !4800, !tbaa !4743
  %allow_fd = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 3, !dbg !4801
  store i32 1, i32* %allow_fd, align 4, !dbg !4802, !tbaa !4746
  tail call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1124, metadata !3839), !dbg !4803
  tail call void @llvm.dbg.value(metadata i32* %mode, i64 0, metadata !1125, metadata !3839), !dbg !4804
  tail call void @llvm.dbg.value(metadata i32* %dir_fd, i64 0, metadata !1126, metadata !3839), !dbg !4793
  tail call void @llvm.dbg.value(metadata i32* %follow_symlinks, i64 0, metadata !1127, metadata !3839), !dbg !4795
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %args, %struct._object* %kwargs, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.189, i64 0, i64 0), i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @posix_chmod.keywords, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @path_converter, %struct.path_t* nonnull %path, i32* nonnull %mode, i32 (%struct._object*, i8*)* nonnull @dir_fd_converter, i32* nonnull %dir_fd, i32* nonnull %follow_symlinks) #3, !dbg !4805
  %tobool = icmp eq i32 %call, 0, !dbg !4805
  br i1 %tobool, label %cleanup, label %if.end, !dbg !4807

if.end:                                           ; preds = %entry
  %call1 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !4808
  call void @llvm.dbg.value(metadata %struct._ts* %call1, i64 0, metadata !1131, metadata !3839), !dbg !4808
  %fd = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 6, !dbg !4809
  %4 = load i32, i32* %fd, align 8, !dbg !4809, !tbaa !4754
  %cmp = icmp eq i32 %4, -1, !dbg !4811
  br i1 %cmp, label %if.else, label %if.then.2, !dbg !4812

if.then.2:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata i32* %mode, i64 0, metadata !1125, metadata !3839), !dbg !4804
  %5 = load i32, i32* %mode, align 4, !dbg !4813, !tbaa !3890
  %call4 = call i32 @fchmod(i32 %4, i32 %5) #3, !dbg !4814
  call void @llvm.dbg.value(metadata i32 %call4, i64 0, metadata !1128, metadata !3839), !dbg !4815
  br label %if.end.21, !dbg !4816

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata i32* %dir_fd, i64 0, metadata !1126, metadata !3839), !dbg !4793
  %6 = load i32, i32* %dir_fd, align 4, !dbg !4817, !tbaa !3890
  %cmp5 = icmp eq i32 %6, -100, !dbg !4819
  call void @llvm.dbg.value(metadata i32* %follow_symlinks, i64 0, metadata !1127, metadata !3839), !dbg !4795
  %7 = load i32, i32* %follow_symlinks, align 4
  %tobool6 = icmp ne i32 %7, 0, !dbg !4820
  %or.cond = and i1 %cmp5, %tobool6, !dbg !4822
  %narrow18 = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 5, !dbg !4823
  %8 = load i8*, i8** %narrow18, align 8, !dbg !4823, !tbaa !4761
  call void @llvm.dbg.value(metadata i32* %mode, i64 0, metadata !1125, metadata !3839), !dbg !4804
  %9 = load i32, i32* %mode, align 4, !dbg !4824, !tbaa !3890
  br i1 %or.cond, label %if.else.17, label %if.then.7, !dbg !4822

if.then.7:                                        ; preds = %if.else
  %cond = select i1 %tobool6, i32 0, i32 256, !dbg !4825
  %call9 = call i32 @fchmodat(i32 %6, i8* %8, i32 %9, i32 %cond) #3, !dbg !4827
  call void @llvm.dbg.value(metadata i32 %call9, i64 0, metadata !1128, metadata !3839), !dbg !4815
  %tobool10 = icmp eq i32 %call9, 0, !dbg !4828
  br i1 %tobool10, label %land.end, label %land.lhs.true, !dbg !4829

land.lhs.true:                                    ; preds = %if.then.7
  %call11 = tail call i32* @__errno_location() #1, !dbg !4830
  %10 = load i32, i32* %call11, align 4, !dbg !4830, !tbaa !3890
  %cmp12 = icmp eq i32 %10, 95, !dbg !4831
  br i1 %cmp12, label %land.rhs, label %land.end, !dbg !4832

land.rhs:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata i32* %follow_symlinks, i64 0, metadata !1127, metadata !3839), !dbg !4795
  %11 = load i32, i32* %follow_symlinks, align 4, !dbg !4833, !tbaa !3890
  %lnot = icmp eq i32 %11, 0, !dbg !4834
  br label %land.end

land.end:                                         ; preds = %land.lhs.true, %if.then.7, %land.rhs
  %12 = phi i1 [ false, %if.then.7 ], [ %lnot, %land.rhs ], [ false, %land.lhs.true ]
  %land.ext = zext i1 %12 to i32, !dbg !4835
  call void @llvm.dbg.value(metadata i32 %land.ext, i64 0, metadata !1130, metadata !3839), !dbg !4797
  br label %if.end.21, !dbg !4837

if.else.17:                                       ; preds = %if.else
  %call19 = call i32 @chmod(i8* %8, i32 %9) #3, !dbg !4838
  call void @llvm.dbg.value(metadata i32 %call19, i64 0, metadata !1128, metadata !3839), !dbg !4815
  br label %if.end.21

if.end.21:                                        ; preds = %land.end, %if.else.17, %if.then.2
  %result.0 = phi i32 [ %call4, %if.then.2 ], [ %call19, %if.else.17 ], [ %call9, %land.end ]
  %fchmodat_nofollow_unsupported.0 = phi i32 [ 0, %if.then.2 ], [ 0, %if.else.17 ], [ %land.ext, %land.end ]
  call void @PyEval_RestoreThread(%struct._ts* %call1) #3, !dbg !4839
  %tobool22 = icmp eq i32 %result.0, 0, !dbg !4840
  br i1 %tobool22, label %if.end.35, label %if.then.23, !dbg !4842

if.then.23:                                       ; preds = %if.end.21
  %tobool24 = icmp eq i32 %fchmodat_nofollow_unsupported.0, 0, !dbg !4843
  br i1 %tobool24, label %if.else.32, label %if.then.25, !dbg !4846

if.then.25:                                       ; preds = %if.then.23
  call void @llvm.dbg.value(metadata i32* %dir_fd, i64 0, metadata !1126, metadata !3839), !dbg !4793
  %13 = load i32, i32* %dir_fd, align 4, !dbg !4847, !tbaa !3890
  %cmp26 = icmp eq i32 %13, -100, !dbg !4850
  call void @llvm.dbg.value(metadata i32* %follow_symlinks, i64 0, metadata !1127, metadata !3839), !dbg !4795
  %14 = load i32, i32* %follow_symlinks, align 4, !dbg !4851, !tbaa !3890
  %tobool.i.47 = icmp eq i32 %14, 0, !dbg !4852
  br i1 %cmp26, label %if.else.29, label %if.then.27, !dbg !4855

if.then.27:                                       ; preds = %if.then.25
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i32 0, i32 0), i64 0, metadata !3215, metadata !3839) #3, !dbg !4856
  br i1 %tobool.i.47, label %if.then.i, label %exit, !dbg !4858

if.then.i:                                        ; preds = %if.then.27
  %15 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4860, !tbaa !3870
  %call.i = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %15, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.721, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i64 0, i64 0)) #3, !dbg !4862
  br label %exit, !dbg !4863

if.else.29:                                       ; preds = %if.then.25
  br i1 %tobool.i.47, label %if.end.i, label %exit, !dbg !4864

if.end.i:                                         ; preds = %if.else.29
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i64 0, i64 0), i64 0, metadata !3207, metadata !3839) #3, !dbg !4865
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.171, i64 0, i64 0), i64 0, metadata !3208, metadata !3839) #3, !dbg !4867
  %16 = load %struct._object*, %struct._object** @PyExc_NotImplementedError, align 8, !dbg !4868, !tbaa !3870
  %call.i.i = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.720, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.174, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.171, i64 0, i64 0)) #3, !dbg !4869
  br label %exit, !dbg !4870

if.else.32:                                       ; preds = %if.then.23
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1124, metadata !3839), !dbg !4803
  %path.idx = getelementptr %struct.path_t, %struct.path_t* %path, i64 0, i32 8
  %path.idx.val = load %struct._object*, %struct._object** %path.idx, align 8, !tbaa !4767
  %17 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !4871, !tbaa !3870
  %call.i.48 = call %struct._object* @PyErr_SetFromErrnoWithFilenameObject(%struct._object* %17, %struct._object* %path.idx.val) #3, !dbg !4873
  call void @llvm.dbg.value(metadata %struct._object* %call.i.48, i64 0, metadata !1129, metadata !3839), !dbg !4796
  br label %exit

if.end.35:                                        ; preds = %if.end.21
  %18 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !4874, !tbaa !3930
  %inc = add i64 %18, 1, !dbg !4874
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !4874, !tbaa !3930
  call void @llvm.dbg.value(metadata %struct._object* @_Py_NoneStruct, i64 0, metadata !1129, metadata !3839), !dbg !4796
  br label %exit, !dbg !4875

exit:                                             ; preds = %if.then.27, %if.end.i, %if.else.29, %if.then.i, %if.else.32, %if.end.35
  %return_value.0 = phi %struct._object* [ %call.i.48, %if.else.32 ], [ @_Py_NoneStruct, %if.end.35 ], [ null, %if.then.27 ], [ null, %if.then.i ], [ null, %if.else.29 ], [ null, %if.end.i ]
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1124, metadata !3839), !dbg !4803
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1054, metadata !3839) #3, !dbg !4876
  %cleanup.i = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 9, !dbg !4878
  %19 = load %struct._object*, %struct._object** %cleanup.i, align 8, !dbg !4878, !tbaa !4634
  %tobool.i.49 = icmp eq %struct._object* %19, null, !dbg !4879
  br i1 %tobool.i.49, label %cleanup, label %if.then.2.i, !dbg !4880

if.then.2.i:                                      ; preds = %exit
  call void @llvm.dbg.value(metadata %struct._object* %19, i64 0, metadata !1055, metadata !3839) #3, !dbg !4881
  store %struct._object* null, %struct._object** %cleanup.i, align 8, !dbg !4882, !tbaa !4634
  call void @llvm.dbg.value(metadata %struct._object* %19, i64 0, metadata !1059, metadata !3839) #3, !dbg !4883
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %19, i64 0, i32 0, !dbg !4884
  %20 = load i64, i64* %ob_refcnt.i, align 8, !dbg !4884, !tbaa !3930
  %dec.i = add i64 %20, -1, !dbg !4884
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !4884, !tbaa !3930
  %cmp5.i = icmp eq i64 %dec.i, 0, !dbg !4884
  br i1 %cmp5.i, label %if.else.i, label %cleanup, !dbg !4885

if.else.i:                                        ; preds = %if.then.2.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %19, i64 0, i32 1, !dbg !4886
  %21 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !4886, !tbaa !3875
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %21, i64 0, i32 4, !dbg !4886
  %22 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !4886, !tbaa !3934
  call void %22(%struct._object* %19) #3, !dbg !4886
  br label %cleanup, !dbg !4887

cleanup:                                          ; preds = %if.else.i, %if.then.2.i, %exit, %entry
  %retval.0 = phi %struct._object* [ null, %entry ], [ %return_value.0, %exit ], [ %return_value.0, %if.then.2.i ], [ %return_value.0, %if.else.i ]
  call void @llvm.lifetime.end(i64 4, i8* %3) #3, !dbg !4888
  call void @llvm.lifetime.end(i64 4, i8* %2) #3, !dbg !4888
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !4888
  call void @llvm.lifetime.end(i64 72, i8* %0) #3, !dbg !4888
  ret %struct._object* %retval.0, !dbg !4888
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_fchmod(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %fd = alloca i32, align 4
  %mode = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1135, metadata !3839), !dbg !4889
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1136, metadata !3839), !dbg !4890
  %0 = bitcast i32* %fd to i8*, !dbg !4891
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !4891
  %1 = bitcast i32* %mode to i8*, !dbg !4891
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !4891
  tail call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !1137, metadata !3839), !dbg !4892
  tail call void @llvm.dbg.value(metadata i32* %mode, i64 0, metadata !1138, metadata !3839), !dbg !4893
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.190, i64 0, i64 0), i32* nonnull %fd, i32* nonnull %mode) #3, !dbg !4894
  %tobool = icmp eq i32 %call, 0, !dbg !4894
  br i1 %tobool, label %cleanup, label %if.end, !dbg !4896

if.end:                                           ; preds = %entry
  %call1 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !4897
  call void @llvm.dbg.value(metadata %struct._ts* %call1, i64 0, metadata !1140, metadata !3839), !dbg !4897
  call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !1137, metadata !3839), !dbg !4892
  %2 = load i32, i32* %fd, align 4, !dbg !4898, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %mode, i64 0, metadata !1138, metadata !3839), !dbg !4893
  %3 = load i32, i32* %mode, align 4, !dbg !4899, !tbaa !3890
  %call2 = call i32 @fchmod(i32 %2, i32 %3) #3, !dbg !4900
  call void @llvm.dbg.value(metadata i32 %call2, i64 0, metadata !1139, metadata !3839), !dbg !4901
  call void @PyEval_RestoreThread(%struct._ts* %call1) #3, !dbg !4902
  %cmp = icmp slt i32 %call2, 0, !dbg !4903
  br i1 %cmp, label %if.then.3, label %if.end.5, !dbg !4905

if.then.3:                                        ; preds = %if.end
  %4 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !4906, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %4) #3, !dbg !4908
  br label %cleanup, !dbg !4909

if.end.5:                                         ; preds = %if.end
  %5 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !4910, !tbaa !3930
  %inc = add i64 %5, 1, !dbg !4910
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !4910, !tbaa !3930
  br label %cleanup, !dbg !4910

cleanup:                                          ; preds = %entry, %if.end.5, %if.then.3
  %retval.0 = phi %struct._object* [ %call.i, %if.then.3 ], [ @_Py_NoneStruct, %if.end.5 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !4911
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !4911
  ret %struct._object* %retval.0, !dbg !4911
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_chown(%struct._object* nocapture readnone %self, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  %path = alloca %struct.path_t, align 8
  %uid = alloca i32, align 4
  %gid = alloca i32, align 4
  %dir_fd = alloca i32, align 4
  %follow_symlinks = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1144, metadata !3839), !dbg !4912
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1145, metadata !3839), !dbg !4913
  tail call void @llvm.dbg.value(metadata %struct._object* %kwargs, i64 0, metadata !1146, metadata !3839), !dbg !4914
  %0 = bitcast %struct.path_t* %path to i8*, !dbg !4915
  call void @llvm.lifetime.start(i64 72, i8* %0) #3, !dbg !4915
  %1 = bitcast i32* %uid to i8*, !dbg !4916
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !4916
  %2 = bitcast i32* %gid to i8*, !dbg !4917
  call void @llvm.lifetime.start(i64 4, i8* %2) #3, !dbg !4917
  %3 = bitcast i32* %dir_fd to i8*, !dbg !4918
  call void @llvm.lifetime.start(i64 4, i8* %3) #3, !dbg !4918
  tail call void @llvm.dbg.value(metadata i32 -100, i64 0, metadata !1150, metadata !3839), !dbg !4919
  store i32 -100, i32* %dir_fd, align 4, !dbg !4919, !tbaa !3890
  %4 = bitcast i32* %follow_symlinks to i8*, !dbg !4920
  call void @llvm.lifetime.start(i64 4, i8* %4) #3, !dbg !4920
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !1151, metadata !3839), !dbg !4921
  store i32 1, i32* %follow_symlinks, align 4, !dbg !4921, !tbaa !3890
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1153, metadata !3839), !dbg !4922
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 72, i32 8, i1 false), !dbg !4923
  %function_name = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 0, !dbg !4924
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0), i8** %function_name, align 8, !dbg !4925, !tbaa !4743
  %allow_fd = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 3, !dbg !4926
  store i32 1, i32* %allow_fd, align 4, !dbg !4927, !tbaa !4746
  tail call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1147, metadata !3839), !dbg !4928
  tail call void @llvm.dbg.value(metadata i32* %uid, i64 0, metadata !1148, metadata !3839), !dbg !4929
  tail call void @llvm.dbg.value(metadata i32* %gid, i64 0, metadata !1149, metadata !3839), !dbg !4930
  tail call void @llvm.dbg.value(metadata i32* %dir_fd, i64 0, metadata !1150, metadata !3839), !dbg !4919
  tail call void @llvm.dbg.value(metadata i32* %follow_symlinks, i64 0, metadata !1151, metadata !3839), !dbg !4921
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %args, %struct._object* %kwargs, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.193, i64 0, i64 0), i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @posix_chown.keywords, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @path_converter, %struct.path_t* nonnull %path, i32 (%struct._object*, i8*)* nonnull @_Py_Uid_Converter, i32* nonnull %uid, i32 (%struct._object*, i8*)* nonnull @_Py_Gid_Converter, i32* nonnull %gid, i32 (%struct._object*, i8*)* nonnull @dir_fd_converter, i32* nonnull %dir_fd, i32* nonnull %follow_symlinks) #3, !dbg !4931
  %tobool = icmp eq i32 %call, 0, !dbg !4931
  br i1 %tobool, label %cleanup, label %if.end, !dbg !4933

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %dir_fd, i64 0, metadata !1150, metadata !3839), !dbg !4919
  %5 = load i32, i32* %dir_fd, align 4, !dbg !4934, !tbaa !3890
  %fd = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 6, !dbg !4936
  %6 = load i32, i32* %fd, align 8, !dbg !4937, !tbaa !4754
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0), i64 0, metadata !939, metadata !3839) #3, !dbg !4938
  call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !940, metadata !3839) #3, !dbg !4940
  call void @llvm.dbg.value(metadata i32 %6, i64 0, metadata !941, metadata !3839) #3, !dbg !4941
  %cmp.i = icmp ne i32 %5, -100, !dbg !4942
  %cmp1.i = icmp ne i32 %6, -1, !dbg !4944
  %or.cond.i = and i1 %cmp.i, %cmp1.i, !dbg !4945
  br i1 %or.cond.i, label %dir_fd_and_fd_invalid.exit, label %lor.lhs.false, !dbg !4945

dir_fd_and_fd_invalid.exit:                       ; preds = %if.end
  %7 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4946, !tbaa !3870
  %call.i = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %7, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.182, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0)) #3, !dbg !4948
  br label %exit, !dbg !4949

lor.lhs.false:                                    ; preds = %if.end
  call void @llvm.dbg.value(metadata i32* %follow_symlinks, i64 0, metadata !1151, metadata !3839), !dbg !4921
  %8 = load i32, i32* %follow_symlinks, align 4, !dbg !4950, !tbaa !3890
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0), i64 0, metadata !944, metadata !3839) #3, !dbg !4951
  call void @llvm.dbg.value(metadata i32 %6, i64 0, metadata !945, metadata !3839) #3, !dbg !4953
  call void @llvm.dbg.value(metadata i32 %8, i64 0, metadata !946, metadata !3839) #3, !dbg !4954
  %cmp.i.45 = icmp slt i32 %6, 1, !dbg !4955
  %tobool.i = icmp ne i32 %8, 0, !dbg !4957
  %or.cond.i.46 = or i1 %cmp.i.45, %tobool.i, !dbg !4959
  br i1 %or.cond.i.46, label %if.end.7, label %fd_and_follow_symlinks_invalid.exit, !dbg !4959

fd_and_follow_symlinks_invalid.exit:              ; preds = %lor.lhs.false
  %9 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4960, !tbaa !3870
  %call.i.47 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %9, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.183, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0)) #3, !dbg !4962
  br label %exit, !dbg !4963

if.end.7:                                         ; preds = %lor.lhs.false
  %call8 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !4964
  call void @llvm.dbg.value(metadata %struct._ts* %call8, i64 0, metadata !1154, metadata !3839), !dbg !4964
  %10 = load i32, i32* %fd, align 8, !dbg !4965, !tbaa !4754
  %cmp = icmp eq i32 %10, -1, !dbg !4967
  br i1 %cmp, label %if.else, label %if.then.10, !dbg !4968

if.then.10:                                       ; preds = %if.end.7
  call void @llvm.dbg.value(metadata i32* %uid, i64 0, metadata !1148, metadata !3839), !dbg !4929
  %11 = load i32, i32* %uid, align 4, !dbg !4969, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %gid, i64 0, metadata !1149, metadata !3839), !dbg !4930
  %12 = load i32, i32* %gid, align 4, !dbg !4970, !tbaa !3890
  %call12 = call i32 @fchown(i32 %10, i32 %11, i32 %12) #3, !dbg !4971
  call void @llvm.dbg.value(metadata i32 %call12, i64 0, metadata !1152, metadata !3839), !dbg !4972
  br label %if.end.30, !dbg !4973

if.else:                                          ; preds = %if.end.7
  call void @llvm.dbg.value(metadata i32* %follow_symlinks, i64 0, metadata !1151, metadata !3839), !dbg !4921
  %13 = load i32, i32* %follow_symlinks, align 4, !dbg !4974, !tbaa !3890
  %tobool13 = icmp eq i32 %13, 0, !dbg !4974
  call void @llvm.dbg.value(metadata i32* %dir_fd, i64 0, metadata !1150, metadata !3839), !dbg !4919
  %14 = load i32, i32* %dir_fd, align 4
  %cmp14 = icmp eq i32 %14, -100, !dbg !4976
  %or.cond = and i1 %tobool13, %cmp14, !dbg !4977
  br i1 %or.cond, label %if.then.15, label %if.else.17, !dbg !4977

if.then.15:                                       ; preds = %if.else
  %narrow = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 5, !dbg !4978
  %15 = load i8*, i8** %narrow, align 8, !dbg !4978, !tbaa !4761
  call void @llvm.dbg.value(metadata i32* %uid, i64 0, metadata !1148, metadata !3839), !dbg !4929
  %16 = load i32, i32* %uid, align 4, !dbg !4979, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %gid, i64 0, metadata !1149, metadata !3839), !dbg !4930
  %17 = load i32, i32* %gid, align 4, !dbg !4980, !tbaa !3890
  %call16 = call i32 @lchown(i8* %15, i32 %16, i32 %17) #3, !dbg !4981
  call void @llvm.dbg.value(metadata i32 %call16, i64 0, metadata !1152, metadata !3839), !dbg !4972
  br label %if.end.30, !dbg !4982

if.else.17:                                       ; preds = %if.else
  %tobool20 = icmp ne i32 %13, 0, !dbg !4983
  %or.cond41 = and i1 %tobool20, %cmp14, !dbg !4986
  %narrow26 = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 5, !dbg !4987
  %18 = load i8*, i8** %narrow26, align 8, !dbg !4987, !tbaa !4761
  call void @llvm.dbg.value(metadata i32* %uid, i64 0, metadata !1148, metadata !3839), !dbg !4929
  %19 = load i32, i32* %uid, align 4, !dbg !4988, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %gid, i64 0, metadata !1149, metadata !3839), !dbg !4930
  %20 = load i32, i32* %gid, align 4, !dbg !4989, !tbaa !3890
  br i1 %or.cond41, label %if.else.25, label %if.then.21, !dbg !4986

if.then.21:                                       ; preds = %if.else.17
  %cond = select i1 %tobool20, i32 0, i32 256, !dbg !4990
  %call24 = call i32 @fchownat(i32 %14, i8* %18, i32 %19, i32 %20, i32 %cond) #3, !dbg !4991
  call void @llvm.dbg.value(metadata i32 %call24, i64 0, metadata !1152, metadata !3839), !dbg !4972
  br label %if.end.30, !dbg !4992

if.else.25:                                       ; preds = %if.else.17
  %call27 = call i32 @chown(i8* %18, i32 %19, i32 %20) #3, !dbg !4993
  call void @llvm.dbg.value(metadata i32 %call27, i64 0, metadata !1152, metadata !3839), !dbg !4972
  br label %if.end.30

if.end.30:                                        ; preds = %if.then.15, %if.else.25, %if.then.21, %if.then.10
  %result.0 = phi i32 [ %call12, %if.then.10 ], [ %call16, %if.then.15 ], [ %call27, %if.else.25 ], [ %call24, %if.then.21 ]
  call void @PyEval_RestoreThread(%struct._ts* %call8) #3, !dbg !4994
  %tobool31 = icmp eq i32 %result.0, 0, !dbg !4995
  br i1 %tobool31, label %if.end.34, label %if.then.32, !dbg !4997

if.then.32:                                       ; preds = %if.end.30
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1147, metadata !3839), !dbg !4928
  %path.idx = getelementptr %struct.path_t, %struct.path_t* %path, i64 0, i32 8
  %path.idx.val = load %struct._object*, %struct._object** %path.idx, align 8, !tbaa !4767
  %21 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !4998, !tbaa !3870
  %call.i.50 = call %struct._object* @PyErr_SetFromErrnoWithFilenameObject(%struct._object* %21, %struct._object* %path.idx.val) #3, !dbg !5001
  call void @llvm.dbg.value(metadata %struct._object* %call.i.50, i64 0, metadata !1153, metadata !3839), !dbg !4922
  br label %exit, !dbg !5002

if.end.34:                                        ; preds = %if.end.30
  call void @llvm.dbg.value(metadata %struct._object* @_Py_NoneStruct, i64 0, metadata !1153, metadata !3839), !dbg !4922
  %22 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !5003, !tbaa !3930
  %inc = add i64 %22, 1, !dbg !5003
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !5003, !tbaa !3930
  br label %exit, !dbg !5003

exit:                                             ; preds = %fd_and_follow_symlinks_invalid.exit, %dir_fd_and_fd_invalid.exit, %if.end.34, %if.then.32
  %return_value.0 = phi %struct._object* [ null, %dir_fd_and_fd_invalid.exit ], [ null, %fd_and_follow_symlinks_invalid.exit ], [ %call.i.50, %if.then.32 ], [ @_Py_NoneStruct, %if.end.34 ]
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1147, metadata !3839), !dbg !4928
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1054, metadata !3839) #3, !dbg !5004
  %cleanup.i = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 9, !dbg !5006
  %23 = load %struct._object*, %struct._object** %cleanup.i, align 8, !dbg !5006, !tbaa !4634
  %tobool.i.51 = icmp eq %struct._object* %23, null, !dbg !5007
  br i1 %tobool.i.51, label %cleanup, label %if.then.2.i, !dbg !5008

if.then.2.i:                                      ; preds = %exit
  call void @llvm.dbg.value(metadata %struct._object* %23, i64 0, metadata !1055, metadata !3839) #3, !dbg !5009
  store %struct._object* null, %struct._object** %cleanup.i, align 8, !dbg !5010, !tbaa !4634
  call void @llvm.dbg.value(metadata %struct._object* %23, i64 0, metadata !1059, metadata !3839) #3, !dbg !5011
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %23, i64 0, i32 0, !dbg !5012
  %24 = load i64, i64* %ob_refcnt.i, align 8, !dbg !5012, !tbaa !3930
  %dec.i = add i64 %24, -1, !dbg !5012
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !5012, !tbaa !3930
  %cmp5.i = icmp eq i64 %dec.i, 0, !dbg !5012
  br i1 %cmp5.i, label %if.else.i, label %cleanup, !dbg !5013

if.else.i:                                        ; preds = %if.then.2.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %23, i64 0, i32 1, !dbg !5014
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !5014, !tbaa !3875
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i64 0, i32 4, !dbg !5014
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !5014, !tbaa !3934
  call void %26(%struct._object* %23) #3, !dbg !5014
  br label %cleanup, !dbg !5015

cleanup:                                          ; preds = %if.else.i, %if.then.2.i, %exit, %entry
  %retval.0 = phi %struct._object* [ null, %entry ], [ %return_value.0, %exit ], [ %return_value.0, %if.then.2.i ], [ %return_value.0, %if.else.i ]
  call void @llvm.lifetime.end(i64 4, i8* %4) #3, !dbg !5016
  call void @llvm.lifetime.end(i64 4, i8* %3) #3, !dbg !5016
  call void @llvm.lifetime.end(i64 4, i8* %2) #3, !dbg !5016
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !5016
  call void @llvm.lifetime.end(i64 72, i8* %0) #3, !dbg !5016
  ret %struct._object* %retval.0, !dbg !5016
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_fchown(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %fd = alloca i32, align 4
  %uid = alloca i32, align 4
  %gid = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1158, metadata !3839), !dbg !5017
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1159, metadata !3839), !dbg !5018
  %0 = bitcast i32* %fd to i8*, !dbg !5019
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !5019
  %1 = bitcast i32* %uid to i8*, !dbg !5020
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !5020
  %2 = bitcast i32* %gid to i8*, !dbg !5021
  call void @llvm.lifetime.start(i64 4, i8* %2) #3, !dbg !5021
  tail call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !1160, metadata !3839), !dbg !5022
  tail call void @llvm.dbg.value(metadata i32* %uid, i64 0, metadata !1161, metadata !3839), !dbg !5023
  tail call void @llvm.dbg.value(metadata i32* %gid, i64 0, metadata !1162, metadata !3839), !dbg !5024
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.194, i64 0, i64 0), i32* nonnull %fd, i32 (%struct._object*, i8*)* nonnull @_Py_Uid_Converter, i32* nonnull %uid, i32 (%struct._object*, i8*)* nonnull @_Py_Gid_Converter, i32* nonnull %gid) #3, !dbg !5025
  %tobool = icmp eq i32 %call, 0, !dbg !5025
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5027

if.end:                                           ; preds = %entry
  %call1 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !5028
  call void @llvm.dbg.value(metadata %struct._ts* %call1, i64 0, metadata !1164, metadata !3839), !dbg !5028
  call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !1160, metadata !3839), !dbg !5022
  %3 = load i32, i32* %fd, align 4, !dbg !5029, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %uid, i64 0, metadata !1161, metadata !3839), !dbg !5023
  %4 = load i32, i32* %uid, align 4, !dbg !5030, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %gid, i64 0, metadata !1162, metadata !3839), !dbg !5024
  %5 = load i32, i32* %gid, align 4, !dbg !5031, !tbaa !3890
  %call2 = call i32 @fchown(i32 %3, i32 %4, i32 %5) #3, !dbg !5032
  call void @llvm.dbg.value(metadata i32 %call2, i64 0, metadata !1163, metadata !3839), !dbg !5033
  call void @PyEval_RestoreThread(%struct._ts* %call1) #3, !dbg !5034
  %cmp = icmp slt i32 %call2, 0, !dbg !5035
  br i1 %cmp, label %if.then.3, label %if.end.5, !dbg !5037

if.then.3:                                        ; preds = %if.end
  %6 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !5038, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %6) #3, !dbg !5040
  br label %cleanup, !dbg !5041

if.end.5:                                         ; preds = %if.end
  %7 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !5042, !tbaa !3930
  %inc = add i64 %7, 1, !dbg !5042
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !5042, !tbaa !3930
  br label %cleanup, !dbg !5042

cleanup:                                          ; preds = %entry, %if.end.5, %if.then.3
  %retval.0 = phi %struct._object* [ %call.i, %if.then.3 ], [ @_Py_NoneStruct, %if.end.5 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %2) #3, !dbg !5043
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !5043
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !5043
  ret %struct._object* %retval.0, !dbg !5043
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_lchown(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %path = alloca %struct.path_t, align 8
  %uid = alloca i32, align 4
  %gid = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1168, metadata !3839), !dbg !5044
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1169, metadata !3839), !dbg !5045
  %0 = bitcast %struct.path_t* %path to i8*, !dbg !5046
  call void @llvm.lifetime.start(i64 72, i8* %0) #3, !dbg !5046
  %1 = bitcast i32* %uid to i8*, !dbg !5047
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !5047
  %2 = bitcast i32* %gid to i8*, !dbg !5048
  call void @llvm.lifetime.start(i64 4, i8* %2) #3, !dbg !5048
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 72, i32 8, i1 false), !dbg !5049
  %function_name = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 0, !dbg !5050
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.32, i64 0, i64 0), i8** %function_name, align 8, !dbg !5051, !tbaa !4743
  tail call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1170, metadata !3839), !dbg !5052
  tail call void @llvm.dbg.value(metadata i32* %uid, i64 0, metadata !1171, metadata !3839), !dbg !5053
  tail call void @llvm.dbg.value(metadata i32* %gid, i64 0, metadata !1172, metadata !3839), !dbg !5054
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.195, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @path_converter, %struct.path_t* nonnull %path, i32 (%struct._object*, i8*)* nonnull @_Py_Uid_Converter, i32* nonnull %uid, i32 (%struct._object*, i8*)* nonnull @_Py_Gid_Converter, i32* nonnull %gid) #3, !dbg !5055
  %tobool = icmp eq i32 %call, 0, !dbg !5055
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5057

if.end:                                           ; preds = %entry
  %call1 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !5058
  call void @llvm.dbg.value(metadata %struct._ts* %call1, i64 0, metadata !1174, metadata !3839), !dbg !5058
  %narrow = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 5, !dbg !5059
  %3 = load i8*, i8** %narrow, align 8, !dbg !5059, !tbaa !4761
  call void @llvm.dbg.value(metadata i32* %uid, i64 0, metadata !1171, metadata !3839), !dbg !5053
  %4 = load i32, i32* %uid, align 4, !dbg !5060, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %gid, i64 0, metadata !1172, metadata !3839), !dbg !5054
  %5 = load i32, i32* %gid, align 4, !dbg !5061, !tbaa !3890
  %call2 = call i32 @lchown(i8* %3, i32 %4, i32 %5) #3, !dbg !5062
  call void @llvm.dbg.value(metadata i32 %call2, i64 0, metadata !1173, metadata !3839), !dbg !5063
  call void @PyEval_RestoreThread(%struct._ts* %call1) #3, !dbg !5064
  %cmp = icmp slt i32 %call2, 0, !dbg !5065
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1170, metadata !3839), !dbg !5052
  br i1 %cmp, label %if.then.3, label %if.end.5, !dbg !5067

if.then.3:                                        ; preds = %if.end
  %path.idx = getelementptr %struct.path_t, %struct.path_t* %path, i64 0, i32 8
  %path.idx.val = load %struct._object*, %struct._object** %path.idx, align 8, !tbaa !4767
  %6 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !5068, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrnoWithFilenameObject(%struct._object* %6, %struct._object* %path.idx.val) #3, !dbg !5071
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1170, metadata !3839), !dbg !5052
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1054, metadata !3839) #3, !dbg !5072
  %cleanup.i = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 9, !dbg !5074
  %7 = load %struct._object*, %struct._object** %cleanup.i, align 8, !dbg !5074, !tbaa !4634
  %tobool.i = icmp eq %struct._object* %7, null, !dbg !5075
  br i1 %tobool.i, label %cleanup, label %if.then.2.i, !dbg !5076

if.then.2.i:                                      ; preds = %if.then.3
  call void @llvm.dbg.value(metadata %struct._object* %7, i64 0, metadata !1055, metadata !3839) #3, !dbg !5077
  store %struct._object* null, %struct._object** %cleanup.i, align 8, !dbg !5078, !tbaa !4634
  call void @llvm.dbg.value(metadata %struct._object* %7, i64 0, metadata !1059, metadata !3839) #3, !dbg !5079
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %7, i64 0, i32 0, !dbg !5080
  %8 = load i64, i64* %ob_refcnt.i, align 8, !dbg !5080, !tbaa !3930
  %dec.i = add i64 %8, -1, !dbg !5080
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !5080, !tbaa !3930
  %cmp5.i = icmp eq i64 %dec.i, 0, !dbg !5080
  br i1 %cmp5.i, label %if.else.i, label %cleanup, !dbg !5081

if.else.i:                                        ; preds = %if.then.2.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %7, i64 0, i32 1, !dbg !5082
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !5082, !tbaa !3875
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i64 0, i32 4, !dbg !5082
  %10 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !5082, !tbaa !3934
  call void %10(%struct._object* %7) #3, !dbg !5082
  br label %cleanup, !dbg !5083

if.end.5:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1054, metadata !3839) #3, !dbg !5084
  %cleanup.i.11 = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 9, !dbg !5086
  %11 = load %struct._object*, %struct._object** %cleanup.i.11, align 8, !dbg !5086, !tbaa !4634
  %tobool.i.12 = icmp eq %struct._object* %11, null, !dbg !5087
  br i1 %tobool.i.12, label %path_cleanup.exit20, label %if.then.2.i.16, !dbg !5088

if.then.2.i.16:                                   ; preds = %if.end.5
  call void @llvm.dbg.value(metadata %struct._object* %11, i64 0, metadata !1055, metadata !3839) #3, !dbg !5089
  store %struct._object* null, %struct._object** %cleanup.i.11, align 8, !dbg !5090, !tbaa !4634
  call void @llvm.dbg.value(metadata %struct._object* %11, i64 0, metadata !1059, metadata !3839) #3, !dbg !5091
  %ob_refcnt.i.13 = getelementptr inbounds %struct._object, %struct._object* %11, i64 0, i32 0, !dbg !5092
  %12 = load i64, i64* %ob_refcnt.i.13, align 8, !dbg !5092, !tbaa !3930
  %dec.i.14 = add i64 %12, -1, !dbg !5092
  store i64 %dec.i.14, i64* %ob_refcnt.i.13, align 8, !dbg !5092, !tbaa !3930
  %cmp5.i.15 = icmp eq i64 %dec.i.14, 0, !dbg !5092
  br i1 %cmp5.i.15, label %if.else.i.19, label %path_cleanup.exit20, !dbg !5093

if.else.i.19:                                     ; preds = %if.then.2.i.16
  %ob_type.i.17 = getelementptr inbounds %struct._object, %struct._object* %11, i64 0, i32 1, !dbg !5094
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type.i.17, align 8, !dbg !5094, !tbaa !3875
  %tp_dealloc.i.18 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i64 0, i32 4, !dbg !5094
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i.18, align 8, !dbg !5094, !tbaa !3934
  call void %14(%struct._object* %11) #3, !dbg !5094
  br label %path_cleanup.exit20, !dbg !5095

path_cleanup.exit20:                              ; preds = %if.end.5, %if.then.2.i.16, %if.else.i.19
  %15 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !5096, !tbaa !3930
  %inc = add i64 %15, 1, !dbg !5096
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !5096, !tbaa !3930
  br label %cleanup, !dbg !5097

cleanup:                                          ; preds = %if.else.i, %if.then.2.i, %if.then.3, %entry, %path_cleanup.exit20
  %retval.0 = phi %struct._object* [ @_Py_NoneStruct, %path_cleanup.exit20 ], [ null, %entry ], [ null, %if.then.3 ], [ null, %if.then.2.i ], [ null, %if.else.i ]
  call void @llvm.lifetime.end(i64 4, i8* %2) #3, !dbg !5098
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !5098
  call void @llvm.lifetime.end(i64 72, i8* %0) #3, !dbg !5098
  ret %struct._object* %retval.0, !dbg !5098
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_chroot(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %path.i = alloca %struct.path_t, align 8
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1178, metadata !3839), !dbg !5099
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1179, metadata !3839), !dbg !5100
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i32 0, i32 0), i64 0, metadata !1187, metadata !3839) #3, !dbg !5101
  tail call void @llvm.dbg.value(metadata !1108, i64 0, metadata !1189, metadata !3839) #3, !dbg !5103
  tail call void @llvm.dbg.value(metadata i32 (i8*)* @chroot, i64 0, metadata !1190, metadata !3839) #3, !dbg !5104
  %0 = bitcast %struct.path_t* %path.i to i8*, !dbg !5105
  call void @llvm.lifetime.start(i64 72, i8* %0) #3, !dbg !5105
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 72, i32 8, i1 false) #3, !dbg !5106
  %function_name.i = getelementptr inbounds %struct.path_t, %struct.path_t* %path.i, i64 0, i32 0, !dbg !5107
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0), i8** %function_name.i, align 8, !dbg !5108, !tbaa !4743
  tail call void @llvm.dbg.value(metadata %struct.path_t* %path.i, i64 0, metadata !1191, metadata !3839) #3, !dbg !5109
  %call.i = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.196, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @path_converter, %struct.path_t* nonnull %path.i) #3, !dbg !5110
  %tobool.i = icmp eq i32 %call.i, 0, !dbg !5110
  br i1 %tobool.i, label %posix_1str.exit, label %if.end.i, !dbg !5112

if.end.i:                                         ; preds = %entry
  %call1.i = call %struct._ts* @PyEval_SaveThread() #3, !dbg !5113
  call void @llvm.dbg.value(metadata %struct._ts* %call1.i, i64 0, metadata !1193, metadata !3839) #3, !dbg !5113
  %narrow.i = getelementptr inbounds %struct.path_t, %struct.path_t* %path.i, i64 0, i32 5, !dbg !5114
  %1 = load i8*, i8** %narrow.i, align 8, !dbg !5114, !tbaa !4761
  %call2.i = call i32 @chroot(i8* %1) #3, !dbg !5115
  call void @llvm.dbg.value(metadata i32 %call2.i, i64 0, metadata !1192, metadata !3839) #3, !dbg !5116
  call void @PyEval_RestoreThread(%struct._ts* %call1.i) #3, !dbg !5117
  %cmp.i = icmp slt i32 %call2.i, 0, !dbg !5118
  call void @llvm.dbg.value(metadata %struct.path_t* %path.i, i64 0, metadata !1191, metadata !3839) #3, !dbg !5109
  br i1 %cmp.i, label %if.then.3.i, label %if.end.5.i, !dbg !5120

if.then.3.i:                                      ; preds = %if.end.i
  %path.idx.i = getelementptr %struct.path_t, %struct.path_t* %path.i, i64 0, i32 8, !dbg !5121
  %path.idx.val.i = load %struct._object*, %struct._object** %path.idx.i, align 8, !dbg !5121, !tbaa !4767
  %2 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !5122, !tbaa !3870
  %call.i.i = call %struct._object* @PyErr_SetFromErrnoWithFilenameObject(%struct._object* %2, %struct._object* %path.idx.val.i) #3, !dbg !5125
  call void @llvm.dbg.value(metadata %struct.path_t* %path.i, i64 0, metadata !1191, metadata !3839) #3, !dbg !5109
  call void @llvm.dbg.value(metadata %struct.path_t* %path.i, i64 0, metadata !1054, metadata !3839) #3, !dbg !5126
  %cleanup.i.i = getelementptr inbounds %struct.path_t, %struct.path_t* %path.i, i64 0, i32 9, !dbg !5128
  %3 = load %struct._object*, %struct._object** %cleanup.i.i, align 8, !dbg !5128, !tbaa !4634
  %tobool.i.i = icmp eq %struct._object* %3, null, !dbg !5129
  br i1 %tobool.i.i, label %posix_1str.exit, label %if.then.2.i.i, !dbg !5130

if.then.2.i.i:                                    ; preds = %if.then.3.i
  call void @llvm.dbg.value(metadata %struct._object* %3, i64 0, metadata !1055, metadata !3839) #3, !dbg !5131
  store %struct._object* null, %struct._object** %cleanup.i.i, align 8, !dbg !5132, !tbaa !4634
  call void @llvm.dbg.value(metadata %struct._object* %3, i64 0, metadata !1059, metadata !3839) #3, !dbg !5133
  %ob_refcnt.i.i = getelementptr inbounds %struct._object, %struct._object* %3, i64 0, i32 0, !dbg !5134
  %4 = load i64, i64* %ob_refcnt.i.i, align 8, !dbg !5134, !tbaa !3930
  %dec.i.i = add i64 %4, -1, !dbg !5134
  store i64 %dec.i.i, i64* %ob_refcnt.i.i, align 8, !dbg !5134, !tbaa !3930
  %cmp5.i.i = icmp eq i64 %dec.i.i, 0, !dbg !5134
  br i1 %cmp5.i.i, label %if.else.i.i, label %posix_1str.exit, !dbg !5135

if.else.i.i:                                      ; preds = %if.then.2.i.i
  %ob_type.i.i = getelementptr inbounds %struct._object, %struct._object* %3, i64 0, i32 1, !dbg !5136
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type.i.i, align 8, !dbg !5136, !tbaa !3875
  %tp_dealloc.i.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i64 0, i32 4, !dbg !5136
  %6 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i.i, align 8, !dbg !5136, !tbaa !3934
  call void %6(%struct._object* %3) #3, !dbg !5136
  br label %posix_1str.exit, !dbg !5137

if.end.5.i:                                       ; preds = %if.end.i
  call void @llvm.dbg.value(metadata %struct.path_t* %path.i, i64 0, metadata !1054, metadata !3839) #3, !dbg !5138
  %cleanup.i.1.i = getelementptr inbounds %struct.path_t, %struct.path_t* %path.i, i64 0, i32 9, !dbg !5140
  %7 = load %struct._object*, %struct._object** %cleanup.i.1.i, align 8, !dbg !5140, !tbaa !4634
  %tobool.i.2.i = icmp eq %struct._object* %7, null, !dbg !5141
  br i1 %tobool.i.2.i, label %path_cleanup.exit10.i, label %if.then.2.i.6.i, !dbg !5142

if.then.2.i.6.i:                                  ; preds = %if.end.5.i
  call void @llvm.dbg.value(metadata %struct._object* %7, i64 0, metadata !1055, metadata !3839) #3, !dbg !5143
  store %struct._object* null, %struct._object** %cleanup.i.1.i, align 8, !dbg !5144, !tbaa !4634
  call void @llvm.dbg.value(metadata %struct._object* %7, i64 0, metadata !1059, metadata !3839) #3, !dbg !5145
  %ob_refcnt.i.3.i = getelementptr inbounds %struct._object, %struct._object* %7, i64 0, i32 0, !dbg !5146
  %8 = load i64, i64* %ob_refcnt.i.3.i, align 8, !dbg !5146, !tbaa !3930
  %dec.i.4.i = add i64 %8, -1, !dbg !5146
  store i64 %dec.i.4.i, i64* %ob_refcnt.i.3.i, align 8, !dbg !5146, !tbaa !3930
  %cmp5.i.5.i = icmp eq i64 %dec.i.4.i, 0, !dbg !5146
  br i1 %cmp5.i.5.i, label %if.else.i.9.i, label %path_cleanup.exit10.i, !dbg !5147

if.else.i.9.i:                                    ; preds = %if.then.2.i.6.i
  %ob_type.i.7.i = getelementptr inbounds %struct._object, %struct._object* %7, i64 0, i32 1, !dbg !5148
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type.i.7.i, align 8, !dbg !5148, !tbaa !3875
  %tp_dealloc.i.8.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i64 0, i32 4, !dbg !5148
  %10 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i.8.i, align 8, !dbg !5148, !tbaa !3934
  call void %10(%struct._object* %7) #3, !dbg !5148
  br label %path_cleanup.exit10.i, !dbg !5149

path_cleanup.exit10.i:                            ; preds = %if.else.i.9.i, %if.then.2.i.6.i, %if.end.5.i
  %11 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !5150, !tbaa !3930
  %inc.i = add i64 %11, 1, !dbg !5150
  store i64 %inc.i, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !5150, !tbaa !3930
  br label %posix_1str.exit, !dbg !5151

posix_1str.exit:                                  ; preds = %entry, %if.then.3.i, %if.then.2.i.i, %if.else.i.i, %path_cleanup.exit10.i
  %retval.0.i = phi %struct._object* [ @_Py_NoneStruct, %path_cleanup.exit10.i ], [ null, %entry ], [ null, %if.then.3.i ], [ null, %if.then.2.i.i ], [ null, %if.else.i.i ], !dbg !5121
  call void @llvm.lifetime.end(i64 72, i8* %0) #3, !dbg !5152
  ret %struct._object* %retval.0.i, !dbg !5153
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_ctermid(%struct._object* nocapture readnone %self, %struct._object* nocapture readnone %noargs) #0 {
entry:
  %buffer = alloca [9 x i8], align 1
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1197, metadata !3839), !dbg !5154
  tail call void @llvm.dbg.value(metadata %struct._object* %noargs, i64 0, metadata !1198, metadata !3839), !dbg !5155
  %0 = getelementptr inbounds [9 x i8], [9 x i8]* %buffer, i64 0, i64 0, !dbg !5156
  call void @llvm.lifetime.start(i64 9, i8* %0) #3, !dbg !5156
  tail call void @llvm.dbg.declare(metadata [9 x i8]* %buffer, metadata !1200, metadata !3839), !dbg !5157
  %call = call i8* @ctermid(i8* %0) #3, !dbg !5158
  tail call void @llvm.dbg.value(metadata i8* %call, i64 0, metadata !1199, metadata !3839), !dbg !5159
  %cmp = icmp eq i8* %call, null, !dbg !5160
  br i1 %cmp, label %if.then, label %if.end, !dbg !5162

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !5163, !tbaa !3870
  %call.i = tail call %struct._object* @PyErr_SetFromErrno(%struct._object* %1) #3, !dbg !5165
  br label %cleanup, !dbg !5166

if.end:                                           ; preds = %entry
  %call3 = call %struct._object* @PyUnicode_DecodeFSDefault(i8* %0) #3, !dbg !5167
  br label %cleanup, !dbg !5168

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %struct._object* [ %call.i, %if.then ], [ %call3, %if.end ]
  call void @llvm.lifetime.end(i64 9, i8* %0) #3, !dbg !5169
  ret %struct._object* %retval.0, !dbg !5169
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_getcwd_unicode(%struct._object* nocapture readnone %self) #0 {
entry:
  %buf.i = alloca [1026 x i8], align 16
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1206, metadata !3839), !dbg !5170
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1211, metadata !3839) #3, !dbg !5171
  %0 = getelementptr inbounds [1026 x i8], [1026 x i8]* %buf.i, i64 0, i64 0, !dbg !5173
  call void @llvm.lifetime.start(i64 1026, i8* %0) #3, !dbg !5173
  %call.i = tail call %struct._ts* @PyEval_SaveThread() #3, !dbg !5174
  tail call void @llvm.dbg.value(metadata %struct._ts* %call.i, i64 0, metadata !1217, metadata !3839) #3, !dbg !5174
  %call1.i = call i8* @getcwd(i8* %0, i64 1026) #3, !dbg !5175
  call void @llvm.dbg.value(metadata i8* %call1.i, i64 0, metadata !1216, metadata !3839) #3, !dbg !5176
  call void @PyEval_RestoreThread(%struct._ts* %call.i) #3, !dbg !5177
  %cmp.i = icmp eq i8* %call1.i, null, !dbg !5178
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !5180

if.then.i:                                        ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !5181, !tbaa !3870
  %call.i.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %1) #3, !dbg !5183
  br label %posix_getcwd.exit, !dbg !5184

if.end.i:                                         ; preds = %entry
  %call10.i = call %struct._object* @PyUnicode_DecodeFSDefault(i8* %0) #3, !dbg !5185
  br label %posix_getcwd.exit, !dbg !5186

posix_getcwd.exit:                                ; preds = %if.then.i, %if.end.i
  %retval.0.i = phi %struct._object* [ %call.i.i, %if.then.i ], [ %call10.i, %if.end.i ], !dbg !5187
  call void @llvm.lifetime.end(i64 1026, i8* %0) #3, !dbg !5188
  call void @llvm.dbg.declare(metadata [1026 x i8]* %buf.i, metadata !1212, metadata !3839), !dbg !5189
  ret %struct._object* %retval.0.i, !dbg !5190
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_getcwd_bytes(%struct._object* nocapture readnone %self) #0 {
entry:
  %buf.i = alloca [1026 x i8], align 16
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1221, metadata !3839), !dbg !5191
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !1211, metadata !3839) #3, !dbg !5192
  %0 = getelementptr inbounds [1026 x i8], [1026 x i8]* %buf.i, i64 0, i64 0, !dbg !5194
  call void @llvm.lifetime.start(i64 1026, i8* %0) #3, !dbg !5194
  %call.i = tail call %struct._ts* @PyEval_SaveThread() #3, !dbg !5195
  tail call void @llvm.dbg.value(metadata %struct._ts* %call.i, i64 0, metadata !1217, metadata !3839) #3, !dbg !5195
  %call1.i = call i8* @getcwd(i8* %0, i64 1026) #3, !dbg !5196
  call void @llvm.dbg.value(metadata i8* %call1.i, i64 0, metadata !1216, metadata !3839) #3, !dbg !5197
  call void @PyEval_RestoreThread(%struct._ts* %call.i) #3, !dbg !5198
  %cmp.i = icmp eq i8* %call1.i, null, !dbg !5199
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !5200

if.then.i:                                        ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !5201, !tbaa !3870
  %call.i.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %1) #3, !dbg !5203
  br label %posix_getcwd.exit, !dbg !5204

if.end.i:                                         ; preds = %entry
  %call6.i = call i64 @strlen(i8* %0) #11, !dbg !5205
  %call7.i = call %struct._object* @PyBytes_FromStringAndSize(i8* %0, i64 %call6.i) #3, !dbg !5207
  br label %posix_getcwd.exit, !dbg !5208

posix_getcwd.exit:                                ; preds = %if.then.i, %if.end.i
  %retval.0.i = phi %struct._object* [ %call.i.i, %if.then.i ], [ %call7.i, %if.end.i ], !dbg !5209
  call void @llvm.lifetime.end(i64 1026, i8* %0) #3, !dbg !5210
  call void @llvm.dbg.declare(metadata [1026 x i8]* %buf.i, metadata !1212, metadata !3839), !dbg !5211
  ret %struct._object* %retval.0.i, !dbg !5212
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_link(%struct._object* nocapture readnone %self, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  %src = alloca %struct.path_t, align 8
  %dst = alloca %struct.path_t, align 8
  %src_dir_fd = alloca i32, align 4
  %dst_dir_fd = alloca i32, align 4
  %follow_symlinks = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1224, metadata !3839), !dbg !5213
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1225, metadata !3839), !dbg !5214
  tail call void @llvm.dbg.value(metadata %struct._object* %kwargs, i64 0, metadata !1226, metadata !3839), !dbg !5215
  %0 = bitcast %struct.path_t* %src to i8*, !dbg !5216
  call void @llvm.lifetime.start(i64 72, i8* %0) #3, !dbg !5216
  %1 = bitcast %struct.path_t* %dst to i8*, !dbg !5216
  call void @llvm.lifetime.start(i64 72, i8* %1) #3, !dbg !5216
  %2 = bitcast i32* %src_dir_fd to i8*, !dbg !5217
  call void @llvm.lifetime.start(i64 4, i8* %2) #3, !dbg !5217
  tail call void @llvm.dbg.value(metadata i32 -100, i64 0, metadata !1229, metadata !3839), !dbg !5218
  store i32 -100, i32* %src_dir_fd, align 4, !dbg !5218, !tbaa !3890
  %3 = bitcast i32* %dst_dir_fd to i8*, !dbg !5219
  call void @llvm.lifetime.start(i64 4, i8* %3) #3, !dbg !5219
  tail call void @llvm.dbg.value(metadata i32 -100, i64 0, metadata !1230, metadata !3839), !dbg !5220
  store i32 -100, i32* %dst_dir_fd, align 4, !dbg !5220, !tbaa !3890
  %4 = bitcast i32* %follow_symlinks to i8*, !dbg !5221
  call void @llvm.lifetime.start(i64 4, i8* %4) #3, !dbg !5221
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !1231, metadata !3839), !dbg !5222
  store i32 1, i32* %follow_symlinks, align 4, !dbg !5222, !tbaa !3890
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1232, metadata !3839), !dbg !5223
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 72, i32 8, i1 false), !dbg !5224
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 72, i32 8, i1 false), !dbg !5225
  %function_name = getelementptr inbounds %struct.path_t, %struct.path_t* %src, i64 0, i32 0, !dbg !5226
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.37, i64 0, i64 0), i8** %function_name, align 8, !dbg !5227, !tbaa !4743
  %function_name1 = getelementptr inbounds %struct.path_t, %struct.path_t* %dst, i64 0, i32 0, !dbg !5228
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.37, i64 0, i64 0), i8** %function_name1, align 8, !dbg !5229, !tbaa !4743
  tail call void @llvm.dbg.value(metadata %struct.path_t* %src, i64 0, metadata !1227, metadata !3839), !dbg !5230
  tail call void @llvm.dbg.value(metadata %struct.path_t* %dst, i64 0, metadata !1228, metadata !3839), !dbg !5231
  tail call void @llvm.dbg.value(metadata i32* %src_dir_fd, i64 0, metadata !1229, metadata !3839), !dbg !5218
  tail call void @llvm.dbg.value(metadata i32* %dst_dir_fd, i64 0, metadata !1230, metadata !3839), !dbg !5220
  tail call void @llvm.dbg.value(metadata i32* %follow_symlinks, i64 0, metadata !1231, metadata !3839), !dbg !5222
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %args, %struct._object* %kwargs, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.201, i64 0, i64 0), i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @posix_link.keywords, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @path_converter, %struct.path_t* nonnull %src, i32 (%struct._object*, i8*)* nonnull @path_converter, %struct.path_t* nonnull %dst, i32 (%struct._object*, i8*)* nonnull @dir_fd_converter, i32* nonnull %src_dir_fd, i32 (%struct._object*, i8*)* nonnull @dir_fd_converter, i32* nonnull %dst_dir_fd, i32* nonnull %follow_symlinks) #3, !dbg !5232
  %tobool = icmp eq i32 %call, 0, !dbg !5232
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5234

if.end:                                           ; preds = %entry
  %narrow = getelementptr inbounds %struct.path_t, %struct.path_t* %src, i64 0, i32 5, !dbg !5235
  %5 = load i8*, i8** %narrow, align 8, !dbg !5235, !tbaa !4761
  %tobool2 = icmp eq i8* %5, null, !dbg !5237
  br i1 %tobool2, label %lor.lhs.false, label %land.lhs.true, !dbg !5238

land.lhs.true:                                    ; preds = %if.end
  %wide = getelementptr inbounds %struct.path_t, %struct.path_t* %dst, i64 0, i32 4, !dbg !5239
  %6 = load i32*, i32** %wide, align 8, !dbg !5239, !tbaa !5241
  %tobool3 = icmp eq i32* %6, null, !dbg !5242
  br i1 %tobool3, label %lor.lhs.false, label %if.then.9, !dbg !5243

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end
  %wide4 = getelementptr inbounds %struct.path_t, %struct.path_t* %src, i64 0, i32 4, !dbg !5244
  %7 = load i32*, i32** %wide4, align 8, !dbg !5244, !tbaa !5241
  %tobool5 = icmp eq i32* %7, null, !dbg !5247
  %.pre = getelementptr inbounds %struct.path_t, %struct.path_t* %dst, i64 0, i32 5, !dbg !5248
  %8 = load i8*, i8** %.pre, align 8
  %tobool8 = icmp eq i8* %8, null, !dbg !5250
  %or.cond = or i1 %tobool5, %tobool8, !dbg !5251
  br i1 %or.cond, label %if.end.10, label %if.then.9, !dbg !5251

if.then.9:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %9 = load %struct._object*, %struct._object** @PyExc_NotImplementedError, align 8, !dbg !5252, !tbaa !3870
  call void @PyErr_SetString(%struct._object* %9, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.202, i64 0, i64 0)) #3, !dbg !5254
  br label %exit, !dbg !5255

if.end.10:                                        ; preds = %lor.lhs.false
  %call11 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !5256
  call void @llvm.dbg.value(metadata %struct._ts* %call11, i64 0, metadata !1234, metadata !3839), !dbg !5256
  call void @llvm.dbg.value(metadata i32* %src_dir_fd, i64 0, metadata !1229, metadata !3839), !dbg !5218
  %10 = load i32, i32* %src_dir_fd, align 4, !dbg !5257, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %dst_dir_fd, i64 0, metadata !1230, metadata !3839), !dbg !5220
  %11 = load i32, i32* %dst_dir_fd, align 4
  %notlhs = icmp eq i32 %10, -100, !dbg !5258
  %notrhs = icmp eq i32 %11, -100, !dbg !5258
  %or.cond.not = and i1 %notlhs, %notrhs, !dbg !5258
  call void @llvm.dbg.value(metadata i32* %follow_symlinks, i64 0, metadata !1231, metadata !3839), !dbg !5222
  %12 = load i32, i32* %follow_symlinks, align 4
  %tobool15 = icmp ne i32 %12, 0, !dbg !5259
  %or.cond35 = and i1 %or.cond.not, %tobool15, !dbg !5258
  %13 = load i8*, i8** %narrow, align 8, !dbg !5260, !tbaa !4761
  %14 = load i8*, i8** %.pre, align 8, !dbg !5248, !tbaa !4761
  br i1 %or.cond35, label %if.else, label %if.then.16, !dbg !5258

if.then.16:                                       ; preds = %if.end.10
  %cond = select i1 %tobool15, i32 1024, i32 0, !dbg !5261
  %call20 = call i32 @linkat(i32 %10, i8* %13, i32 %11, i8* %14, i32 %cond) #3, !dbg !5262
  call void @llvm.dbg.value(metadata i32 %call20, i64 0, metadata !1233, metadata !3839), !dbg !5263
  br label %if.end.24, !dbg !5264

if.else:                                          ; preds = %if.end.10
  %call23 = call i32 @link(i8* %13, i8* %14) #3, !dbg !5265
  call void @llvm.dbg.value(metadata i32 %call23, i64 0, metadata !1233, metadata !3839), !dbg !5263
  br label %if.end.24

if.end.24:                                        ; preds = %if.else, %if.then.16
  %result.0 = phi i32 [ %call23, %if.else ], [ %call20, %if.then.16 ]
  call void @PyEval_RestoreThread(%struct._ts* %call11) #3, !dbg !5266
  %tobool25 = icmp eq i32 %result.0, 0, !dbg !5267
  br i1 %tobool25, label %if.end.28, label %if.then.26, !dbg !5269

if.then.26:                                       ; preds = %if.end.24
  call void @llvm.dbg.value(metadata %struct.path_t* %src, i64 0, metadata !1227, metadata !3839), !dbg !5230
  call void @llvm.dbg.value(metadata %struct.path_t* %dst, i64 0, metadata !1228, metadata !3839), !dbg !5231
  %src.idx = getelementptr %struct.path_t, %struct.path_t* %src, i64 0, i32 8
  %src.idx.val = load %struct._object*, %struct._object** %src.idx, align 8, !tbaa !4767
  %dst.idx = getelementptr %struct.path_t, %struct.path_t* %dst, i64 0, i32 8
  %dst.idx.val = load %struct._object*, %struct._object** %dst.idx, align 8, !tbaa !4767
  %15 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !5270, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrnoWithFilenameObjects(%struct._object* %15, %struct._object* %src.idx.val, %struct._object* %dst.idx.val) #3, !dbg !5273
  call void @llvm.dbg.value(metadata %struct._object* %call.i, i64 0, metadata !1232, metadata !3839), !dbg !5223
  br label %exit, !dbg !5274

if.end.28:                                        ; preds = %if.end.24
  call void @llvm.dbg.value(metadata %struct._object* @_Py_NoneStruct, i64 0, metadata !1232, metadata !3839), !dbg !5223
  %16 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !5275, !tbaa !3930
  %inc = add i64 %16, 1, !dbg !5275
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !5275, !tbaa !3930
  br label %exit, !dbg !5275

exit:                                             ; preds = %if.end.28, %if.then.26, %if.then.9
  %return_value.0 = phi %struct._object* [ null, %if.then.9 ], [ %call.i, %if.then.26 ], [ @_Py_NoneStruct, %if.end.28 ]
  call void @llvm.dbg.value(metadata %struct.path_t* %src, i64 0, metadata !1227, metadata !3839), !dbg !5230
  call void @llvm.dbg.value(metadata %struct.path_t* %src, i64 0, metadata !1054, metadata !3839) #3, !dbg !5276
  %cleanup.i = getelementptr inbounds %struct.path_t, %struct.path_t* %src, i64 0, i32 9, !dbg !5278
  %17 = load %struct._object*, %struct._object** %cleanup.i, align 8, !dbg !5278, !tbaa !4634
  %tobool.i = icmp eq %struct._object* %17, null, !dbg !5279
  br i1 %tobool.i, label %path_cleanup.exit, label %if.then.2.i, !dbg !5280

if.then.2.i:                                      ; preds = %exit
  call void @llvm.dbg.value(metadata %struct._object* %17, i64 0, metadata !1055, metadata !3839) #3, !dbg !5281
  store %struct._object* null, %struct._object** %cleanup.i, align 8, !dbg !5282, !tbaa !4634
  call void @llvm.dbg.value(metadata %struct._object* %17, i64 0, metadata !1059, metadata !3839) #3, !dbg !5283
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %17, i64 0, i32 0, !dbg !5284
  %18 = load i64, i64* %ob_refcnt.i, align 8, !dbg !5284, !tbaa !3930
  %dec.i = add i64 %18, -1, !dbg !5284
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !5284, !tbaa !3930
  %cmp5.i = icmp eq i64 %dec.i, 0, !dbg !5284
  br i1 %cmp5.i, label %if.else.i, label %path_cleanup.exit, !dbg !5285

if.else.i:                                        ; preds = %if.then.2.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %17, i64 0, i32 1, !dbg !5286
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !5286, !tbaa !3875
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i64 0, i32 4, !dbg !5286
  %20 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !5286, !tbaa !3934
  call void %20(%struct._object* %17) #3, !dbg !5286
  br label %path_cleanup.exit, !dbg !5287

path_cleanup.exit:                                ; preds = %exit, %if.then.2.i, %if.else.i
  call void @llvm.dbg.value(metadata %struct.path_t* %dst, i64 0, metadata !1228, metadata !3839), !dbg !5231
  call void @llvm.dbg.value(metadata %struct.path_t* %dst, i64 0, metadata !1054, metadata !3839) #3, !dbg !5288
  %cleanup.i.39 = getelementptr inbounds %struct.path_t, %struct.path_t* %dst, i64 0, i32 9, !dbg !5290
  %21 = load %struct._object*, %struct._object** %cleanup.i.39, align 8, !dbg !5290, !tbaa !4634
  %tobool.i.40 = icmp eq %struct._object* %21, null, !dbg !5291
  br i1 %tobool.i.40, label %cleanup, label %if.then.2.i.44, !dbg !5292

if.then.2.i.44:                                   ; preds = %path_cleanup.exit
  call void @llvm.dbg.value(metadata %struct._object* %21, i64 0, metadata !1055, metadata !3839) #3, !dbg !5293
  store %struct._object* null, %struct._object** %cleanup.i.39, align 8, !dbg !5294, !tbaa !4634
  call void @llvm.dbg.value(metadata %struct._object* %21, i64 0, metadata !1059, metadata !3839) #3, !dbg !5295
  %ob_refcnt.i.41 = getelementptr inbounds %struct._object, %struct._object* %21, i64 0, i32 0, !dbg !5296
  %22 = load i64, i64* %ob_refcnt.i.41, align 8, !dbg !5296, !tbaa !3930
  %dec.i.42 = add i64 %22, -1, !dbg !5296
  store i64 %dec.i.42, i64* %ob_refcnt.i.41, align 8, !dbg !5296, !tbaa !3930
  %cmp5.i.43 = icmp eq i64 %dec.i.42, 0, !dbg !5296
  br i1 %cmp5.i.43, label %if.else.i.47, label %cleanup, !dbg !5297

if.else.i.47:                                     ; preds = %if.then.2.i.44
  %ob_type.i.45 = getelementptr inbounds %struct._object, %struct._object* %21, i64 0, i32 1, !dbg !5298
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type.i.45, align 8, !dbg !5298, !tbaa !3875
  %tp_dealloc.i.46 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %23, i64 0, i32 4, !dbg !5298
  %24 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i.46, align 8, !dbg !5298, !tbaa !3934
  call void %24(%struct._object* %21) #3, !dbg !5298
  br label %cleanup, !dbg !5299

cleanup:                                          ; preds = %if.else.i.47, %if.then.2.i.44, %path_cleanup.exit, %entry
  %retval.0 = phi %struct._object* [ null, %entry ], [ %return_value.0, %path_cleanup.exit ], [ %return_value.0, %if.then.2.i.44 ], [ %return_value.0, %if.else.i.47 ]
  call void @llvm.lifetime.end(i64 4, i8* %4) #3, !dbg !5300
  call void @llvm.lifetime.end(i64 4, i8* %3) #3, !dbg !5300
  call void @llvm.lifetime.end(i64 4, i8* %2) #3, !dbg !5300
  call void @llvm.lifetime.end(i64 72, i8* %1) #3, !dbg !5300
  call void @llvm.lifetime.end(i64 72, i8* %0) #3, !dbg !5300
  ret %struct._object* %retval.0, !dbg !5300
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_listdir(%struct._object* nocapture readnone %self, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  %path = alloca %struct.path_t, align 8
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1244, metadata !3839), !dbg !5301
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1245, metadata !3839), !dbg !5302
  tail call void @llvm.dbg.value(metadata %struct._object* %kwargs, i64 0, metadata !1246, metadata !3839), !dbg !5303
  %0 = bitcast %struct.path_t* %path to i8*, !dbg !5304
  call void @llvm.lifetime.start(i64 72, i8* %0) #3, !dbg !5304
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1248, metadata !3839), !dbg !5305
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 72, i32 8, i1 false), !dbg !5306
  %function_name = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 0, !dbg !5307
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.38, i64 0, i64 0), i8** %function_name, align 8, !dbg !5308, !tbaa !4743
  %nullable = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 2, !dbg !5309
  store i32 1, i32* %nullable, align 8, !dbg !5310, !tbaa !5311
  %allow_fd = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 3, !dbg !5312
  store i32 1, i32* %allow_fd, align 4, !dbg !5313, !tbaa !4746
  %fd = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 6, !dbg !5314
  store i32 -1, i32* %fd, align 8, !dbg !5315, !tbaa !4754
  tail call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1247, metadata !3839), !dbg !5316
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %args, %struct._object* %kwargs, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.203, i64 0, i64 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @posix_listdir.keywords, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @path_converter, %struct.path_t* nonnull %path) #3, !dbg !5317
  %tobool = icmp eq i32 %call, 0, !dbg !5317
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5319

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1247, metadata !3839), !dbg !5316
  call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1255, metadata !3839) #3, !dbg !5320
  call void @llvm.dbg.value(metadata %struct.__dirstream* null, i64 0, metadata !1257, metadata !3839) #3, !dbg !5322
  call void @llvm.dbg.value(metadata i32 -1, i64 0, metadata !1277, metadata !3839) #3, !dbg !5323
  %call.i = tail call i32* @__errno_location() #1, !dbg !5324
  store i32 0, i32* %call.i, align 4, !dbg !5325, !tbaa !3890
  %1 = load i32, i32* %fd, align 8, !dbg !5326, !tbaa !4754
  %cmp.i = icmp eq i32 %1, -1, !dbg !5327
  br i1 %cmp.i, label %if.else.i, label %if.then.i, !dbg !5328

if.then.i:                                        ; preds = %if.end
  %call3.i = call i32 @_Py_dup(i32 %1) #3, !dbg !5329
  call void @llvm.dbg.value(metadata i32 %call3.i, i64 0, metadata !1277, metadata !3839) #3, !dbg !5323
  %cmp4.i = icmp eq i32 %call3.i, -1, !dbg !5330
  br i1 %cmp4.i, label %_posix_listdir.exit, label %if.end.i, !dbg !5332

if.end.i:                                         ; preds = %if.then.i
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !1276, metadata !3839) #3, !dbg !5333
  %call6.i = call %struct._ts* @PyEval_SaveThread() #3, !dbg !5334
  call void @llvm.dbg.value(metadata %struct._ts* %call6.i, i64 0, metadata !1278, metadata !3839) #3, !dbg !5334
  %call7.i = call %struct.__dirstream* @fdopendir(i32 %call3.i) #3, !dbg !5335
  call void @llvm.dbg.value(metadata %struct.__dirstream* %call7.i, i64 0, metadata !1257, metadata !3839) #3, !dbg !5322
  call void @PyEval_RestoreThread(%struct._ts* %call6.i) #3, !dbg !5336
  br label %if.end.16.i, !dbg !5337

if.else.i:                                        ; preds = %if.end
  %narrow.i = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 5, !dbg !5338
  %2 = load i8*, i8** %narrow.i, align 8, !dbg !5338, !tbaa !4761
  %tobool.i = icmp eq i8* %2, null, !dbg !5340
  br i1 %tobool.i, label %if.end.12.i, label %if.then.8.i, !dbg !5341

if.then.8.i:                                      ; preds = %if.else.i
  call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !1282, metadata !3839) #3, !dbg !5342
  %object.i = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 8, !dbg !5343
  %3 = load %struct._object*, %struct._object** %object.i, align 8, !dbg !5343, !tbaa !4767
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %3, i64 0, i32 1, !dbg !5343
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !5343, !tbaa !3875
  %tp_flags.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i64 0, i32 19, !dbg !5343
  %5 = load i64, i64* %tp_flags.i, align 8, !dbg !5343, !tbaa !5345
  %and.i = lshr i64 %5, 27, !dbg !5346
  %and.lobit.i = and i64 %and.i, 1, !dbg !5346
  %6 = xor i64 %and.lobit.i, 1, !dbg !5346
  %lnot.ext.i = trunc i64 %6 to i32, !dbg !5346
  call void @llvm.dbg.value(metadata i32 %lnot.ext.i, i64 0, metadata !1276, metadata !3839) #3, !dbg !5333
  br label %if.end.12.i, !dbg !5347

if.end.12.i:                                      ; preds = %if.then.8.i, %if.else.i
  %name.0.i = phi i8* [ %2, %if.then.8.i ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.204, i64 0, i64 0), %if.else.i ], !dbg !5348
  %return_str.0.i = phi i32 [ %lnot.ext.i, %if.then.8.i ], [ 1, %if.else.i ], !dbg !5348
  %call14.i = call %struct._ts* @PyEval_SaveThread() #3, !dbg !5349
  call void @llvm.dbg.value(metadata %struct._ts* %call14.i, i64 0, metadata !1284, metadata !3839) #3, !dbg !5349
  %call15.i = call %struct.__dirstream* @opendir(i8* %name.0.i) #3, !dbg !5350
  call void @llvm.dbg.value(metadata %struct.__dirstream* %call15.i, i64 0, metadata !1257, metadata !3839) #3, !dbg !5322
  call void @PyEval_RestoreThread(%struct._ts* %call14.i) #3, !dbg !5351
  br label %if.end.16.i, !dbg !5348

if.end.16.i:                                      ; preds = %if.end.12.i, %if.end.i
  %fd.0.i = phi i32 [ %call3.i, %if.end.i ], [ -1, %if.end.12.i ], !dbg !5348
  %return_str.1.i = phi i32 [ 1, %if.end.i ], [ %return_str.0.i, %if.end.12.i ], !dbg !5348
  %dirp.0.i = phi %struct.__dirstream* [ %call7.i, %if.end.i ], [ %call15.i, %if.end.12.i ], !dbg !5348
  %cmp17.i = icmp eq %struct.__dirstream* %dirp.0.i, null, !dbg !5352
  br i1 %cmp17.i, label %if.then.18.i, label %if.end.26.i, !dbg !5353

if.then.18.i:                                     ; preds = %if.end.16.i
  %path.idx1.i = getelementptr %struct.path_t, %struct.path_t* %path, i64 0, i32 8, !dbg !5348
  %path.idx1.val.i = load %struct._object*, %struct._object** %path.idx1.i, align 8, !dbg !5348, !tbaa !4767
  %7 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !5354, !tbaa !3870
  %call.i.i = call %struct._object* @PyErr_SetFromErrnoWithFilenameObject(%struct._object* %7, %struct._object* %path.idx1.val.i) #3, !dbg !5356
  call void @llvm.dbg.value(metadata %struct._object* %call.i.i, i64 0, metadata !1255, metadata !3839) #3, !dbg !5320
  %cmp20.i = icmp eq i32 %fd.0.i, -1, !dbg !5357
  br i1 %cmp20.i, label %_posix_listdir.exit, label %if.then.21.i, !dbg !5358

if.then.21.i:                                     ; preds = %if.then.18.i
  %call23.i = call %struct._ts* @PyEval_SaveThread() #3, !dbg !5359
  call void @llvm.dbg.value(metadata %struct._ts* %call23.i, i64 0, metadata !1286, metadata !3839) #3, !dbg !5359
  %call24.i = call i32 @close(i32 %fd.0.i) #3, !dbg !5360
  call void @PyEval_RestoreThread(%struct._ts* %call23.i) #3, !dbg !5361
  br label %_posix_listdir.exit, !dbg !5362

if.end.26.i:                                      ; preds = %if.end.16.i
  %call27.i = call %struct._object* @PyList_New(i64 0) #3, !dbg !5363
  call void @llvm.dbg.value(metadata %struct._object* %call27.i, i64 0, metadata !1255, metadata !3839) #3, !dbg !5320
  %cmp28.i = icmp eq %struct._object* %call27.i, null, !dbg !5365
  br i1 %cmp28.i, label %if.then.161.i, label %for.cond.preheader.i, !dbg !5366

for.cond.preheader.i:                             ; preds = %if.end.26.i
  store i32 0, i32* %call.i, align 4, !dbg !5367, !tbaa !3890
  %call33.6.i = call %struct._ts* @PyEval_SaveThread() #3, !dbg !5368
  call void @llvm.dbg.value(metadata %struct._ts* %call33.6.i, i64 0, metadata !1292, metadata !3839) #3, !dbg !5368
  %call34.7.i = call %struct.dirent* @readdir64(%struct.__dirstream* %dirp.0.i) #3, !dbg !5369
  call void @llvm.dbg.value(metadata %struct.dirent* %call34.7.i, i64 0, metadata !1262, metadata !3839) #3, !dbg !5370
  call void @PyEval_RestoreThread(%struct._ts* %call33.6.i) #3, !dbg !5371
  %cmp35.8.i = icmp eq %struct.dirent* %call34.7.i, null, !dbg !5372
  br i1 %cmp35.8.i, label %if.then.36.i, label %if.end.47.lr.ph.i, !dbg !5373

if.end.47.lr.ph.i:                                ; preds = %for.cond.preheader.i
  %tobool67.i = icmp eq i32 %return_str.1.i, 0, !dbg !5374
  br i1 %tobool67.i, label %if.end.47.us.i.preheader, label %if.end.47.i.preheader, !dbg !5376

if.end.47.i.preheader:                            ; preds = %if.end.47.lr.ph.i
  br label %if.end.47.i, !dbg !5377

if.end.47.us.i.preheader:                         ; preds = %if.end.47.lr.ph.i
  br label %if.end.47.us.i, !dbg !5377

if.end.47.us.i:                                   ; preds = %if.end.47.us.i.preheader, %for.cond.backedge.us.i
  %call349.us.i = phi %struct.dirent* [ %call34.us.i, %for.cond.backedge.us.i ], [ %call34.7.i, %if.end.47.us.i.preheader ], !dbg !5348
  %arrayidx.us.i = getelementptr %struct.dirent, %struct.dirent* %call349.us.i, i64 0, i32 4, i64 0, !dbg !5377
  %8 = load i8, i8* %arrayidx.us.i, align 1, !dbg !5377, !tbaa !5379
  %cmp48.us.i = icmp eq i8 %8, 46, !dbg !5380
  br i1 %cmp48.us.i, label %land.lhs.true.us.i, label %if.end.82.us.i, !dbg !5381

land.lhs.true.us.i:                               ; preds = %if.end.47.us.i
  %call51.us.i = call i64 @strlen(i8* %arrayidx.us.i) #11, !dbg !5382
  %cmp52.us.i = icmp eq i64 %call51.us.i, 1, !dbg !5383
  br i1 %cmp52.us.i, label %for.cond.backedge.us.i, label %lor.lhs.false.us.i, !dbg !5384

lor.lhs.false.us.i:                               ; preds = %land.lhs.true.us.i
  %arrayidx55.us.i = getelementptr %struct.dirent, %struct.dirent* %call349.us.i, i64 0, i32 4, i64 1, !dbg !5385
  %9 = load i8, i8* %arrayidx55.us.i, align 1, !dbg !5385, !tbaa !5379
  %cmp57.us.i = icmp eq i8 %9, 46, !dbg !5386
  %cmp63.us.i = icmp eq i64 %call51.us.i, 2, !dbg !5387
  %or.cond.us.i = and i1 %cmp63.us.i, %cmp57.us.i, !dbg !5388
  br i1 %or.cond.us.i, label %for.cond.backedge.us.i, label %if.end.82.us.i, !dbg !5388

if.end.82.us.i:                                   ; preds = %lor.lhs.false.us.i, %if.end.47.us.i
  %call73.us.i = call i64 @strlen(i8* %arrayidx.us.i) #11, !dbg !5389
  %call81.us.i = call %struct._object* @PyBytes_FromStringAndSize(i8* %arrayidx.us.i, i64 %call73.us.i) #3, !dbg !5390
  call void @llvm.dbg.value(metadata %struct._object* %call81.us.i, i64 0, metadata !1256, metadata !3839) #3, !dbg !5391
  %cmp83.us.i = icmp eq %struct._object* %call81.us.i, null, !dbg !5392
  br i1 %cmp83.us.i, label %if.then.89.i.loopexit, label %if.end.106.us.i, !dbg !5393

if.end.106.us.i:                                  ; preds = %if.end.82.us.i
  %call107.us.i = call i32 @PyList_Append(%struct._object* %call27.i, %struct._object* %call81.us.i) #3, !dbg !5394
  %cmp108.us.i = icmp eq i32 %call107.us.i, 0, !dbg !5395
  %ob_refcnt148.us.i = getelementptr inbounds %struct._object, %struct._object* %call81.us.i, i64 0, i32 0, !dbg !5396
  %10 = load i64, i64* %ob_refcnt148.us.i, align 8, !dbg !5396, !tbaa !3930
  %dec149.us.i = add i64 %10, -1, !dbg !5396
  store i64 %dec149.us.i, i64* %ob_refcnt148.us.i, align 8, !dbg !5396, !tbaa !3930
  %cmp150.us.i = icmp eq i64 %dec149.us.i, 0, !dbg !5396
  br i1 %cmp108.us.i, label %do.body.146.us.i, label %do.body.111.i.loopexit, !dbg !5398

do.body.146.us.i:                                 ; preds = %if.end.106.us.i
  call void @llvm.dbg.value(metadata %struct._object* %call81.us.i, i64 0, metadata !1321, metadata !3839) #3, !dbg !5399
  br i1 %cmp150.us.i, label %if.else.153.us.i, label %for.cond.backedge.us.i, !dbg !5401

if.else.153.us.i:                                 ; preds = %do.body.146.us.i
  %ob_type154.us.i = getelementptr inbounds %struct._object, %struct._object* %call81.us.i, i64 0, i32 1, !dbg !5402
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type154.us.i, align 8, !dbg !5402, !tbaa !3875
  %tp_dealloc155.us.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i64 0, i32 4, !dbg !5402
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc155.us.i, align 8, !dbg !5402, !tbaa !3934
  call void %12(%struct._object* %call81.us.i) #3, !dbg !5402
  br label %for.cond.backedge.us.i, !dbg !5348

for.cond.backedge.us.i:                           ; preds = %if.else.153.us.i, %do.body.146.us.i, %lor.lhs.false.us.i, %land.lhs.true.us.i
  store i32 0, i32* %call.i, align 4, !dbg !5367, !tbaa !3890
  %call33.us.i = call %struct._ts* @PyEval_SaveThread() #3, !dbg !5368
  call void @llvm.dbg.value(metadata %struct._ts* %call33.us.i, i64 0, metadata !1292, metadata !3839) #3, !dbg !5368
  %call34.us.i = call %struct.dirent* @readdir64(%struct.__dirstream* %dirp.0.i) #3, !dbg !5369
  call void @llvm.dbg.value(metadata %struct.dirent* %call34.us.i, i64 0, metadata !1262, metadata !3839) #3, !dbg !5370
  call void @PyEval_RestoreThread(%struct._ts* %call33.us.i) #3, !dbg !5371
  %cmp35.us.i = icmp eq %struct.dirent* %call34.us.i, null, !dbg !5372
  br i1 %cmp35.us.i, label %if.then.36.i.loopexit, label %if.end.47.us.i, !dbg !5373

if.then.36.i.loopexit:                            ; preds = %for.cond.backedge.us.i
  br label %if.then.36.i, !dbg !5404

if.then.36.i.loopexit31:                          ; preds = %for.cond.backedge.i
  br label %if.then.36.i, !dbg !5404

if.then.36.i:                                     ; preds = %if.then.36.i.loopexit31, %if.then.36.i.loopexit, %for.cond.preheader.i
  %13 = load i32, i32* %call.i, align 4, !dbg !5404, !tbaa !3890
  %cmp38.i = icmp eq i32 %13, 0, !dbg !5405
  br i1 %cmp38.i, label %if.then.161.i, label %do.body.i, !dbg !5406

do.body.i:                                        ; preds = %if.then.36.i
  call void @llvm.dbg.value(metadata %struct._object* %call27.i, i64 0, metadata !1297, metadata !3839) #3, !dbg !5407
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %call27.i, i64 0, i32 0, !dbg !5409
  %14 = load i64, i64* %ob_refcnt.i, align 8, !dbg !5409, !tbaa !3930
  %dec.i = add i64 %14, -1, !dbg !5409
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !5409, !tbaa !3930
  %cmp41.i = icmp eq i64 %dec.i, 0, !dbg !5409
  br i1 %cmp41.i, label %if.else.43.i, label %if.end.45.i, !dbg !5411

if.else.43.i:                                     ; preds = %do.body.i
  %ob_type44.i = getelementptr inbounds %struct._object, %struct._object* %call27.i, i64 0, i32 1, !dbg !5412
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type44.i, align 8, !dbg !5412, !tbaa !3875
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i64 0, i32 4, !dbg !5412
  %16 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !5412, !tbaa !3934
  call void %16(%struct._object* %call27.i) #3, !dbg !5412
  br label %if.end.45.i, !dbg !5348

if.end.45.i:                                      ; preds = %if.else.43.i, %do.body.i
  %path.idx.i = getelementptr %struct.path_t, %struct.path_t* %path, i64 0, i32 8, !dbg !5348
  %path.idx.val.i = load %struct._object*, %struct._object** %path.idx.i, align 8, !dbg !5348, !tbaa !4767
  %17 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !5414, !tbaa !3870
  %call.i.2.i = call %struct._object* @PyErr_SetFromErrnoWithFilenameObject(%struct._object* %17, %struct._object* %path.idx.val.i) #3, !dbg !5416
  call void @llvm.dbg.value(metadata %struct._object* %call.i.2.i, i64 0, metadata !1255, metadata !3839) #3, !dbg !5320
  br label %if.then.161.i, !dbg !5417

if.end.47.i:                                      ; preds = %if.end.47.i.preheader, %for.cond.backedge.i
  %call349.i = phi %struct.dirent* [ %call34.i, %for.cond.backedge.i ], [ %call34.7.i, %if.end.47.i.preheader ], !dbg !5348
  %arrayidx.i = getelementptr %struct.dirent, %struct.dirent* %call349.i, i64 0, i32 4, i64 0, !dbg !5377
  %18 = load i8, i8* %arrayidx.i, align 1, !dbg !5377, !tbaa !5379
  %cmp48.i = icmp eq i8 %18, 46, !dbg !5380
  br i1 %cmp48.i, label %land.lhs.true.i, label %if.end.82.i, !dbg !5381

land.lhs.true.i:                                  ; preds = %if.end.47.i
  %call51.i = call i64 @strlen(i8* %arrayidx.i) #11, !dbg !5382
  %cmp52.i = icmp eq i64 %call51.i, 1, !dbg !5383
  br i1 %cmp52.i, label %for.cond.backedge.i, label %lor.lhs.false.i, !dbg !5384

for.cond.backedge.i:                              ; preds = %if.else.153.i, %do.body.146.i, %lor.lhs.false.i, %land.lhs.true.i
  store i32 0, i32* %call.i, align 4, !dbg !5367, !tbaa !3890
  %call33.i = call %struct._ts* @PyEval_SaveThread() #3, !dbg !5368
  call void @llvm.dbg.value(metadata %struct._ts* %call33.i, i64 0, metadata !1292, metadata !3839) #3, !dbg !5368
  %call34.i = call %struct.dirent* @readdir64(%struct.__dirstream* %dirp.0.i) #3, !dbg !5369
  call void @llvm.dbg.value(metadata %struct.dirent* %call34.i, i64 0, metadata !1262, metadata !3839) #3, !dbg !5370
  call void @PyEval_RestoreThread(%struct._ts* %call33.i) #3, !dbg !5371
  %cmp35.i = icmp eq %struct.dirent* %call34.i, null, !dbg !5372
  br i1 %cmp35.i, label %if.then.36.i.loopexit31, label %if.end.47.i, !dbg !5373

lor.lhs.false.i:                                  ; preds = %land.lhs.true.i
  %arrayidx55.i = getelementptr %struct.dirent, %struct.dirent* %call349.i, i64 0, i32 4, i64 1, !dbg !5385
  %19 = load i8, i8* %arrayidx55.i, align 1, !dbg !5385, !tbaa !5379
  %cmp57.i = icmp eq i8 %19, 46, !dbg !5386
  %cmp63.i = icmp eq i64 %call51.i, 2, !dbg !5387
  %or.cond.i = and i1 %cmp63.i, %cmp57.i, !dbg !5388
  br i1 %or.cond.i, label %for.cond.backedge.i, label %if.end.82.i, !dbg !5388

if.end.82.i:                                      ; preds = %lor.lhs.false.i, %if.end.47.i
  %call73.i = call i64 @strlen(i8* %arrayidx.i) #11, !dbg !5389
  %call74.i = call %struct._object* @PyUnicode_DecodeFSDefaultAndSize(i8* %arrayidx.i, i64 %call73.i) #3, !dbg !5418
  call void @llvm.dbg.value(metadata %struct._object* %call74.i, i64 0, metadata !1256, metadata !3839) #3, !dbg !5391
  %cmp83.i = icmp eq %struct._object* %call74.i, null, !dbg !5392
  br i1 %cmp83.i, label %if.then.89.i.loopexit29, label %if.end.106.i, !dbg !5393

if.then.89.i.loopexit:                            ; preds = %if.end.82.us.i
  br label %if.then.89.i, !dbg !5419

if.then.89.i.loopexit29:                          ; preds = %if.end.82.i
  br label %if.then.89.i, !dbg !5419

if.then.89.i:                                     ; preds = %if.then.89.i.loopexit29, %if.then.89.i.loopexit
  call void @llvm.dbg.value(metadata %struct._object* %call27.i, i64 0, metadata !1303, metadata !3839) #3, !dbg !5419
  call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1255, metadata !3839) #3, !dbg !5320
  call void @llvm.dbg.value(metadata %struct._object* %call27.i, i64 0, metadata !1307, metadata !3839) #3, !dbg !5421
  %ob_refcnt92.i = getelementptr inbounds %struct._object, %struct._object* %call27.i, i64 0, i32 0, !dbg !5423
  %20 = load i64, i64* %ob_refcnt92.i, align 8, !dbg !5423, !tbaa !3930
  %dec93.i = add i64 %20, -1, !dbg !5423
  store i64 %dec93.i, i64* %ob_refcnt92.i, align 8, !dbg !5423, !tbaa !3930
  %cmp94.i = icmp eq i64 %dec93.i, 0, !dbg !5423
  br i1 %cmp94.i, label %if.else.97.i, label %if.then.161.i, !dbg !5425

if.else.97.i:                                     ; preds = %if.then.89.i
  %ob_type98.i = getelementptr inbounds %struct._object, %struct._object* %call27.i, i64 0, i32 1, !dbg !5426
  %21 = load %struct._typeobject*, %struct._typeobject** %ob_type98.i, align 8, !dbg !5426, !tbaa !3875
  %tp_dealloc99.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %21, i64 0, i32 4, !dbg !5426
  %22 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc99.i, align 8, !dbg !5426, !tbaa !3934
  call void %22(%struct._object* %call27.i) #3, !dbg !5426
  br label %if.then.161.i, !dbg !5348

if.end.106.i:                                     ; preds = %if.end.82.i
  %call107.i = call i32 @PyList_Append(%struct._object* %call27.i, %struct._object* %call74.i) #3, !dbg !5394
  %cmp108.i = icmp eq i32 %call107.i, 0, !dbg !5395
  %ob_refcnt148.i = getelementptr inbounds %struct._object, %struct._object* %call74.i, i64 0, i32 0, !dbg !5396
  %23 = load i64, i64* %ob_refcnt148.i, align 8, !dbg !5396, !tbaa !3930
  %dec149.i = add i64 %23, -1, !dbg !5396
  store i64 %dec149.i, i64* %ob_refcnt148.i, align 8, !dbg !5396, !tbaa !3930
  %cmp150.i = icmp eq i64 %dec149.i, 0, !dbg !5396
  br i1 %cmp108.i, label %do.body.146.i, label %do.body.111.i.loopexit30, !dbg !5398

do.body.111.i.loopexit:                           ; preds = %if.end.106.us.i
  %cmp150.us.i.lcssa = phi i1 [ %cmp150.us.i, %if.end.106.us.i ]
  %call81.us.i.lcssa34 = phi %struct._object* [ %call81.us.i, %if.end.106.us.i ]
  br label %do.body.111.i, !dbg !5428

do.body.111.i.loopexit30:                         ; preds = %if.end.106.i
  %cmp150.i.lcssa = phi i1 [ %cmp150.i, %if.end.106.i ]
  %call74.i.lcssa35 = phi %struct._object* [ %call74.i, %if.end.106.i ]
  br label %do.body.111.i, !dbg !5428

do.body.111.i:                                    ; preds = %do.body.111.i.loopexit30, %do.body.111.i.loopexit
  %cmp150.lcssa.i = phi i1 [ %cmp150.us.i.lcssa, %do.body.111.i.loopexit ], [ %cmp150.i.lcssa, %do.body.111.i.loopexit30 ], !dbg !5348
  %v.0.lcssa5.i = phi %struct._object* [ %call81.us.i.lcssa34, %do.body.111.i.loopexit ], [ %call74.i.lcssa35, %do.body.111.i.loopexit30 ], !dbg !5348
  call void @llvm.dbg.value(metadata %struct._object* %call74.i, i64 0, metadata !1311, metadata !3839) #3, !dbg !5428
  br i1 %cmp150.lcssa.i, label %if.else.118.i, label %if.then.128.i, !dbg !5430

if.else.118.i:                                    ; preds = %do.body.111.i
  %ob_type119.i = getelementptr inbounds %struct._object, %struct._object* %v.0.lcssa5.i, i64 0, i32 1, !dbg !5431
  %24 = load %struct._typeobject*, %struct._typeobject** %ob_type119.i, align 8, !dbg !5431, !tbaa !3875
  %tp_dealloc120.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %24, i64 0, i32 4, !dbg !5431
  %25 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc120.i, align 8, !dbg !5431, !tbaa !3934
  call void %25(%struct._object* %v.0.lcssa5.i) #3, !dbg !5431
  br label %if.then.128.i, !dbg !5348

if.then.128.i:                                    ; preds = %if.else.118.i, %do.body.111.i
  call void @llvm.dbg.value(metadata %struct._object* %call27.i, i64 0, metadata !1315, metadata !3839) #3, !dbg !5434
  call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1255, metadata !3839) #3, !dbg !5320
  call void @llvm.dbg.value(metadata %struct._object* %call27.i, i64 0, metadata !1317, metadata !3839) #3, !dbg !5436
  %ob_refcnt131.i = getelementptr inbounds %struct._object, %struct._object* %call27.i, i64 0, i32 0, !dbg !5438
  %26 = load i64, i64* %ob_refcnt131.i, align 8, !dbg !5438, !tbaa !3930
  %dec132.i = add i64 %26, -1, !dbg !5438
  store i64 %dec132.i, i64* %ob_refcnt131.i, align 8, !dbg !5438, !tbaa !3930
  %cmp133.i = icmp eq i64 %dec132.i, 0, !dbg !5438
  br i1 %cmp133.i, label %if.else.136.i, label %if.then.161.i, !dbg !5440

if.else.136.i:                                    ; preds = %if.then.128.i
  %ob_type137.i = getelementptr inbounds %struct._object, %struct._object* %call27.i, i64 0, i32 1, !dbg !5441
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type137.i, align 8, !dbg !5441, !tbaa !3875
  %tp_dealloc138.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i64 0, i32 4, !dbg !5441
  %28 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc138.i, align 8, !dbg !5441, !tbaa !3934
  call void %28(%struct._object* %call27.i) #3, !dbg !5441
  br label %if.then.161.i, !dbg !5348

do.body.146.i:                                    ; preds = %if.end.106.i
  call void @llvm.dbg.value(metadata %struct._object* %call74.i, i64 0, metadata !1321, metadata !3839) #3, !dbg !5399
  br i1 %cmp150.i, label %if.else.153.i, label %for.cond.backedge.i, !dbg !5401

if.else.153.i:                                    ; preds = %do.body.146.i
  %ob_type154.i = getelementptr inbounds %struct._object, %struct._object* %call74.i, i64 0, i32 1, !dbg !5402
  %29 = load %struct._typeobject*, %struct._typeobject** %ob_type154.i, align 8, !dbg !5402, !tbaa !3875
  %tp_dealloc155.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %29, i64 0, i32 4, !dbg !5402
  %30 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc155.i, align 8, !dbg !5402, !tbaa !3934
  call void %30(%struct._object* %call74.i) #3, !dbg !5402
  br label %for.cond.backedge.i, !dbg !5348

if.then.161.i:                                    ; preds = %if.else.136.i, %if.then.128.i, %if.else.97.i, %if.then.89.i, %if.end.45.i, %if.then.36.i, %if.end.26.i
  %list.addr.24.i = phi %struct._object* [ null, %if.end.26.i ], [ %call27.i, %if.then.36.i ], [ %call.i.2.i, %if.end.45.i ], [ null, %if.then.89.i ], [ null, %if.else.97.i ], [ null, %if.then.128.i ], [ null, %if.else.136.i ], !dbg !5348
  %call163.i = call %struct._ts* @PyEval_SaveThread() #3, !dbg !5443
  call void @llvm.dbg.value(metadata %struct._ts* %call163.i, i64 0, metadata !1323, metadata !3839) #3, !dbg !5443
  %cmp164.i = icmp sgt i32 %fd.0.i, -1, !dbg !5444
  br i1 %cmp164.i, label %if.then.166.i, label %if.end.167.i, !dbg !5446

if.then.166.i:                                    ; preds = %if.then.161.i
  call void @rewinddir(%struct.__dirstream* %dirp.0.i) #3, !dbg !5447
  br label %if.end.167.i, !dbg !5447

if.end.167.i:                                     ; preds = %if.then.166.i, %if.then.161.i
  %call168.i = call i32 @closedir(%struct.__dirstream* %dirp.0.i) #3, !dbg !5448
  call void @PyEval_RestoreThread(%struct._ts* %call163.i) #3, !dbg !5449
  br label %_posix_listdir.exit, !dbg !5450

_posix_listdir.exit:                              ; preds = %if.then.i, %if.then.18.i, %if.then.21.i, %if.end.167.i
  %retval.0.i = phi %struct._object* [ null, %if.then.i ], [ %list.addr.24.i, %if.end.167.i ], [ %call.i.i, %if.then.18.i ], [ %call.i.i, %if.then.21.i ], !dbg !5348
  call void @llvm.dbg.value(metadata %struct._object* %retval.0.i, i64 0, metadata !1249, metadata !3839), !dbg !5451
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1247, metadata !3839), !dbg !5316
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1054, metadata !3839) #3, !dbg !5452
  %cleanup.i = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 9, !dbg !5454
  %31 = load %struct._object*, %struct._object** %cleanup.i, align 8, !dbg !5454, !tbaa !4634
  %tobool.i.6 = icmp eq %struct._object* %31, null, !dbg !5455
  br i1 %tobool.i.6, label %cleanup, label %if.then.2.i, !dbg !5456

if.then.2.i:                                      ; preds = %_posix_listdir.exit
  call void @llvm.dbg.value(metadata %struct._object* %31, i64 0, metadata !1055, metadata !3839) #3, !dbg !5457
  store %struct._object* null, %struct._object** %cleanup.i, align 8, !dbg !5458, !tbaa !4634
  call void @llvm.dbg.value(metadata %struct._object* %31, i64 0, metadata !1059, metadata !3839) #3, !dbg !5459
  %ob_refcnt.i.7 = getelementptr inbounds %struct._object, %struct._object* %31, i64 0, i32 0, !dbg !5460
  %32 = load i64, i64* %ob_refcnt.i.7, align 8, !dbg !5460, !tbaa !3930
  %dec.i.8 = add i64 %32, -1, !dbg !5460
  store i64 %dec.i.8, i64* %ob_refcnt.i.7, align 8, !dbg !5460, !tbaa !3930
  %cmp5.i = icmp eq i64 %dec.i.8, 0, !dbg !5460
  br i1 %cmp5.i, label %if.else.i.11, label %cleanup, !dbg !5461

if.else.i.11:                                     ; preds = %if.then.2.i
  %ob_type.i.9 = getelementptr inbounds %struct._object, %struct._object* %31, i64 0, i32 1, !dbg !5462
  %33 = load %struct._typeobject*, %struct._typeobject** %ob_type.i.9, align 8, !dbg !5462, !tbaa !3875
  %tp_dealloc.i.10 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %33, i64 0, i32 4, !dbg !5462
  %34 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i.10, align 8, !dbg !5462, !tbaa !3934
  call void %34(%struct._object* %31) #3, !dbg !5462
  br label %cleanup, !dbg !5463

cleanup:                                          ; preds = %if.else.i.11, %if.then.2.i, %_posix_listdir.exit, %entry
  %retval.0 = phi %struct._object* [ null, %entry ], [ %retval.0.i, %_posix_listdir.exit ], [ %retval.0.i, %if.then.2.i ], [ %retval.0.i, %if.else.i.11 ]
  call void @llvm.lifetime.end(i64 72, i8* %0) #3, !dbg !5464
  ret %struct._object* %retval.0, !dbg !5464
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_lstat(%struct._object* nocapture readnone %self, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  %path = alloca %struct.path_t, align 8
  %dir_fd = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1329, metadata !3839), !dbg !5465
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1330, metadata !3839), !dbg !5466
  tail call void @llvm.dbg.value(metadata %struct._object* %kwargs, i64 0, metadata !1331, metadata !3839), !dbg !5467
  %0 = bitcast %struct.path_t* %path to i8*, !dbg !5468
  call void @llvm.lifetime.start(i64 72, i8* %0) #3, !dbg !5468
  %1 = bitcast i32* %dir_fd to i8*, !dbg !5469
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !5469
  tail call void @llvm.dbg.value(metadata i32 -100, i64 0, metadata !1333, metadata !3839), !dbg !5470
  store i32 -100, i32* %dir_fd, align 4, !dbg !5470, !tbaa !3890
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1334, metadata !3839), !dbg !5471
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 72, i32 8, i1 false), !dbg !5472
  %function_name = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 0, !dbg !5473
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i64 0, i64 0), i8** %function_name, align 8, !dbg !5474, !tbaa !4743
  tail call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1332, metadata !3839), !dbg !5475
  tail call void @llvm.dbg.value(metadata i32* %dir_fd, i64 0, metadata !1333, metadata !3839), !dbg !5470
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %args, %struct._object* %kwargs, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.205, i64 0, i64 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @posix_lstat.keywords, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @path_converter, %struct.path_t* nonnull %path, i32 (%struct._object*, i8*)* nonnull @dir_fd_converter, i32* nonnull %dir_fd) #3, !dbg !5476
  %tobool = icmp eq i32 %call, 0, !dbg !5476
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5478

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %dir_fd, i64 0, metadata !1333, metadata !3839), !dbg !5470
  %2 = load i32, i32* %dir_fd, align 4, !dbg !5479, !tbaa !3890
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1332, metadata !3839), !dbg !5475
  %call1 = call fastcc %struct._object* @posix_do_stat(%struct.path_t* nonnull %path, i32 %2, i32 0), !dbg !5480
  call void @llvm.dbg.value(metadata %struct._object* %call1, i64 0, metadata !1335, metadata !3839), !dbg !5481
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1332, metadata !3839), !dbg !5475
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1054, metadata !3839) #3, !dbg !5482
  %cleanup.i = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 9, !dbg !5484
  %3 = load %struct._object*, %struct._object** %cleanup.i, align 8, !dbg !5484, !tbaa !4634
  %tobool.i = icmp eq %struct._object* %3, null, !dbg !5485
  br i1 %tobool.i, label %cleanup, label %if.then.2.i, !dbg !5486

if.then.2.i:                                      ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct._object* %3, i64 0, metadata !1055, metadata !3839) #3, !dbg !5487
  store %struct._object* null, %struct._object** %cleanup.i, align 8, !dbg !5488, !tbaa !4634
  call void @llvm.dbg.value(metadata %struct._object* %3, i64 0, metadata !1059, metadata !3839) #3, !dbg !5489
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %3, i64 0, i32 0, !dbg !5490
  %4 = load i64, i64* %ob_refcnt.i, align 8, !dbg !5490, !tbaa !3930
  %dec.i = add i64 %4, -1, !dbg !5490
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !5490, !tbaa !3930
  %cmp5.i = icmp eq i64 %dec.i, 0, !dbg !5490
  br i1 %cmp5.i, label %if.else.i, label %cleanup, !dbg !5491

if.else.i:                                        ; preds = %if.then.2.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %3, i64 0, i32 1, !dbg !5492
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !5492, !tbaa !3875
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i64 0, i32 4, !dbg !5492
  %6 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !5492, !tbaa !3934
  call void %6(%struct._object* %3) #3, !dbg !5492
  br label %cleanup, !dbg !5493

cleanup:                                          ; preds = %if.else.i, %if.then.2.i, %if.end, %entry
  %retval.0 = phi %struct._object* [ null, %entry ], [ %call1, %if.end ], [ %call1, %if.then.2.i ], [ %call1, %if.else.i ]
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !5494
  call void @llvm.lifetime.end(i64 72, i8* %0) #3, !dbg !5494
  ret %struct._object* %retval.0, !dbg !5494
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_mkdir(%struct._object* nocapture readnone %self, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  %path = alloca %struct.path_t, align 8
  %mode = alloca i32, align 4
  %dir_fd = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1338, metadata !3839), !dbg !5495
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1339, metadata !3839), !dbg !5496
  tail call void @llvm.dbg.value(metadata %struct._object* %kwargs, i64 0, metadata !1340, metadata !3839), !dbg !5497
  %0 = bitcast %struct.path_t* %path to i8*, !dbg !5498
  call void @llvm.lifetime.start(i64 72, i8* %0) #3, !dbg !5498
  %1 = bitcast i32* %mode to i8*, !dbg !5499
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !5499
  tail call void @llvm.dbg.value(metadata i32 511, i64 0, metadata !1342, metadata !3839), !dbg !5500
  store i32 511, i32* %mode, align 4, !dbg !5500, !tbaa !3890
  %2 = bitcast i32* %dir_fd to i8*, !dbg !5501
  call void @llvm.lifetime.start(i64 4, i8* %2) #3, !dbg !5501
  tail call void @llvm.dbg.value(metadata i32 -100, i64 0, metadata !1343, metadata !3839), !dbg !5502
  store i32 -100, i32* %dir_fd, align 4, !dbg !5502, !tbaa !3890
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1344, metadata !3839), !dbg !5503
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 72, i32 8, i1 false), !dbg !5504
  %function_name = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 0, !dbg !5505
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i64 0, i64 0), i8** %function_name, align 8, !dbg !5506, !tbaa !4743
  tail call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1341, metadata !3839), !dbg !5507
  tail call void @llvm.dbg.value(metadata i32* %mode, i64 0, metadata !1342, metadata !3839), !dbg !5500
  tail call void @llvm.dbg.value(metadata i32* %dir_fd, i64 0, metadata !1343, metadata !3839), !dbg !5502
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %args, %struct._object* %kwargs, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.206, i64 0, i64 0), i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @posix_mkdir.keywords, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @path_converter, %struct.path_t* nonnull %path, i32* nonnull %mode, i32 (%struct._object*, i8*)* nonnull @dir_fd_converter, i32* nonnull %dir_fd) #3, !dbg !5508
  %tobool = icmp eq i32 %call, 0, !dbg !5508
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5510

if.end:                                           ; preds = %entry
  %call1 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !5511
  call void @llvm.dbg.value(metadata %struct._ts* %call1, i64 0, metadata !1346, metadata !3839), !dbg !5511
  call void @llvm.dbg.value(metadata i32* %dir_fd, i64 0, metadata !1343, metadata !3839), !dbg !5502
  %3 = load i32, i32* %dir_fd, align 4, !dbg !5512, !tbaa !3890
  %cmp = icmp eq i32 %3, -100, !dbg !5514
  %narrow4 = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 5, !dbg !5515
  %4 = load i8*, i8** %narrow4, align 8, !dbg !5515, !tbaa !4761
  call void @llvm.dbg.value(metadata i32* %mode, i64 0, metadata !1342, metadata !3839), !dbg !5500
  %5 = load i32, i32* %mode, align 4, !dbg !5516, !tbaa !3890
  br i1 %cmp, label %if.else, label %if.then.2, !dbg !5517

if.then.2:                                        ; preds = %if.end
  %call3 = call i32 @mkdirat(i32 %3, i8* %4, i32 %5) #3, !dbg !5518
  call void @llvm.dbg.value(metadata i32 %call3, i64 0, metadata !1345, metadata !3839), !dbg !5519
  br label %if.end.6, !dbg !5520

if.else:                                          ; preds = %if.end
  %call5 = call i32 @mkdir(i8* %4, i32 %5) #3, !dbg !5521
  call void @llvm.dbg.value(metadata i32 %call5, i64 0, metadata !1345, metadata !3839), !dbg !5519
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.2
  %result.0 = phi i32 [ %call3, %if.then.2 ], [ %call5, %if.else ]
  call void @PyEval_RestoreThread(%struct._ts* %call1) #3, !dbg !5522
  %cmp7 = icmp slt i32 %result.0, 0, !dbg !5523
  br i1 %cmp7, label %if.then.8, label %if.end.10, !dbg !5525

if.then.8:                                        ; preds = %if.end.6
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1341, metadata !3839), !dbg !5507
  %path.idx = getelementptr %struct.path_t, %struct.path_t* %path, i64 0, i32 8
  %path.idx.val = load %struct._object*, %struct._object** %path.idx, align 8, !tbaa !4767
  %6 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !5526, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrnoWithFilenameObject(%struct._object* %6, %struct._object* %path.idx.val) #3, !dbg !5529
  call void @llvm.dbg.value(metadata %struct._object* %call.i, i64 0, metadata !1344, metadata !3839), !dbg !5503
  br label %exit, !dbg !5530

if.end.10:                                        ; preds = %if.end.6
  call void @llvm.dbg.value(metadata %struct._object* @_Py_NoneStruct, i64 0, metadata !1344, metadata !3839), !dbg !5503
  %7 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !5531, !tbaa !3930
  %inc = add i64 %7, 1, !dbg !5531
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !5531, !tbaa !3930
  br label %exit, !dbg !5531

exit:                                             ; preds = %if.end.10, %if.then.8
  %return_value.0 = phi %struct._object* [ %call.i, %if.then.8 ], [ @_Py_NoneStruct, %if.end.10 ]
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1341, metadata !3839), !dbg !5507
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1054, metadata !3839) #3, !dbg !5532
  %cleanup.i = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 9, !dbg !5534
  %8 = load %struct._object*, %struct._object** %cleanup.i, align 8, !dbg !5534, !tbaa !4634
  %tobool.i = icmp eq %struct._object* %8, null, !dbg !5535
  br i1 %tobool.i, label %cleanup, label %if.then.2.i, !dbg !5536

if.then.2.i:                                      ; preds = %exit
  call void @llvm.dbg.value(metadata %struct._object* %8, i64 0, metadata !1055, metadata !3839) #3, !dbg !5537
  store %struct._object* null, %struct._object** %cleanup.i, align 8, !dbg !5538, !tbaa !4634
  call void @llvm.dbg.value(metadata %struct._object* %8, i64 0, metadata !1059, metadata !3839) #3, !dbg !5539
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %8, i64 0, i32 0, !dbg !5540
  %9 = load i64, i64* %ob_refcnt.i, align 8, !dbg !5540, !tbaa !3930
  %dec.i = add i64 %9, -1, !dbg !5540
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !5540, !tbaa !3930
  %cmp5.i = icmp eq i64 %dec.i, 0, !dbg !5540
  br i1 %cmp5.i, label %if.else.i, label %cleanup, !dbg !5541

if.else.i:                                        ; preds = %if.then.2.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %8, i64 0, i32 1, !dbg !5542
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !5542, !tbaa !3875
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i64 0, i32 4, !dbg !5542
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !5542, !tbaa !3934
  call void %11(%struct._object* %8) #3, !dbg !5542
  br label %cleanup, !dbg !5543

cleanup:                                          ; preds = %if.else.i, %if.then.2.i, %exit, %entry
  %retval.0 = phi %struct._object* [ null, %entry ], [ %return_value.0, %exit ], [ %return_value.0, %if.then.2.i ], [ %return_value.0, %if.else.i ]
  call void @llvm.lifetime.end(i64 4, i8* %2) #3, !dbg !5544
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !5544
  call void @llvm.lifetime.end(i64 72, i8* %0) #3, !dbg !5544
  ret %struct._object* %retval.0, !dbg !5544
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_nice(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %increment = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1350, metadata !3839), !dbg !5545
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1351, metadata !3839), !dbg !5546
  %0 = bitcast i32* %increment to i8*, !dbg !5547
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !5547
  tail call void @llvm.dbg.value(metadata i32* %increment, i64 0, metadata !1352, metadata !3839), !dbg !5548
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.207, i64 0, i64 0), i32* nonnull %increment) #3, !dbg !5549
  %tobool = icmp eq i32 %call, 0, !dbg !5549
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5551

if.end:                                           ; preds = %entry
  %call1 = tail call i32* @__errno_location() #1, !dbg !5552
  store i32 0, i32* %call1, align 4, !dbg !5553, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %increment, i64 0, metadata !1352, metadata !3839), !dbg !5548
  %1 = load i32, i32* %increment, align 4, !dbg !5554, !tbaa !3890
  %call2 = call i32 @nice(i32 %1) #3, !dbg !5555
  call void @llvm.dbg.value(metadata i32 %call2, i64 0, metadata !1353, metadata !3839), !dbg !5556
  %cmp = icmp eq i32 %call2, -1, !dbg !5557
  br i1 %cmp, label %land.lhs.true, label %if.end.7, !dbg !5559

land.lhs.true:                                    ; preds = %if.end
  %2 = load i32, i32* %call1, align 4, !dbg !5560, !tbaa !3890
  %cmp4 = icmp eq i32 %2, 0, !dbg !5562
  br i1 %cmp4, label %if.end.7, label %if.then.5, !dbg !5563

if.then.5:                                        ; preds = %land.lhs.true
  %3 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !5564, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %3) #3, !dbg !5566
  br label %cleanup, !dbg !5567

if.end.7:                                         ; preds = %land.lhs.true, %if.end
  %conv = sext i32 %call2 to i64, !dbg !5568
  %call8 = call %struct._object* @PyLong_FromLong(i64 %conv) #3, !dbg !5569
  br label %cleanup, !dbg !5570

cleanup:                                          ; preds = %entry, %if.end.7, %if.then.5
  %retval.0 = phi %struct._object* [ %call.i, %if.then.5 ], [ %call8, %if.end.7 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !5571
  ret %struct._object* %retval.0, !dbg !5571
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_getpriority(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %which = alloca i32, align 4
  %who = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1356, metadata !3839), !dbg !5572
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1357, metadata !3839), !dbg !5573
  %0 = bitcast i32* %which to i8*, !dbg !5574
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !5574
  %1 = bitcast i32* %who to i8*, !dbg !5574
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !5574
  tail call void @llvm.dbg.value(metadata i32* %which, i64 0, metadata !1358, metadata !3839), !dbg !5575
  tail call void @llvm.dbg.value(metadata i32* %who, i64 0, metadata !1359, metadata !3839), !dbg !5576
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.208, i64 0, i64 0), i32* nonnull %which, i32* nonnull %who) #3, !dbg !5577
  %tobool = icmp eq i32 %call, 0, !dbg !5577
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5579

if.end:                                           ; preds = %entry
  %call2 = tail call i32* @__errno_location() #1, !dbg !5580
  store i32 0, i32* %call2, align 4, !dbg !5581, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %which, i64 0, metadata !1358, metadata !3839), !dbg !5575
  %2 = load i32, i32* %which, align 4, !dbg !5582, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %who, i64 0, metadata !1359, metadata !3839), !dbg !5576
  %3 = load i32, i32* %who, align 4, !dbg !5583, !tbaa !3890
  %call3 = call i32 @getpriority(i32 %2, i32 %3) #3, !dbg !5584
  call void @llvm.dbg.value(metadata i32 %call3, i64 0, metadata !1360, metadata !3839), !dbg !5585
  %4 = load i32, i32* %call2, align 4, !dbg !5586, !tbaa !3890
  %cmp = icmp eq i32 %4, 0, !dbg !5588
  br i1 %cmp, label %if.end.7, label %if.then.5, !dbg !5589

if.then.5:                                        ; preds = %if.end
  %5 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !5590, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %5) #3, !dbg !5592
  br label %cleanup, !dbg !5593

if.end.7:                                         ; preds = %if.end
  %conv = sext i32 %call3 to i64, !dbg !5594
  %call8 = call %struct._object* @PyLong_FromLong(i64 %conv) #3, !dbg !5595
  br label %cleanup, !dbg !5596

cleanup:                                          ; preds = %entry, %if.end.7, %if.then.5
  %retval.0 = phi %struct._object* [ %call.i, %if.then.5 ], [ %call8, %if.end.7 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !5597
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !5597
  ret %struct._object* %retval.0, !dbg !5597
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_setpriority(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %which = alloca i32, align 4
  %who = alloca i32, align 4
  %prio = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1363, metadata !3839), !dbg !5598
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1364, metadata !3839), !dbg !5599
  %0 = bitcast i32* %which to i8*, !dbg !5600
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !5600
  %1 = bitcast i32* %who to i8*, !dbg !5600
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !5600
  %2 = bitcast i32* %prio to i8*, !dbg !5600
  call void @llvm.lifetime.start(i64 4, i8* %2) #3, !dbg !5600
  tail call void @llvm.dbg.value(metadata i32* %which, i64 0, metadata !1365, metadata !3839), !dbg !5601
  tail call void @llvm.dbg.value(metadata i32* %who, i64 0, metadata !1366, metadata !3839), !dbg !5602
  tail call void @llvm.dbg.value(metadata i32* %prio, i64 0, metadata !1367, metadata !3839), !dbg !5603
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.209, i64 0, i64 0), i32* nonnull %which, i32* nonnull %who, i32* nonnull %prio) #3, !dbg !5604
  %tobool = icmp eq i32 %call, 0, !dbg !5604
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5606

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %which, i64 0, metadata !1365, metadata !3839), !dbg !5601
  %3 = load i32, i32* %which, align 4, !dbg !5607, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %who, i64 0, metadata !1366, metadata !3839), !dbg !5602
  %4 = load i32, i32* %who, align 4, !dbg !5608, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %prio, i64 0, metadata !1367, metadata !3839), !dbg !5603
  %5 = load i32, i32* %prio, align 4, !dbg !5609, !tbaa !3890
  %call2 = call i32 @setpriority(i32 %3, i32 %4, i32 %5) #3, !dbg !5610
  call void @llvm.dbg.value(metadata i32 %call2, i64 0, metadata !1368, metadata !3839), !dbg !5611
  %cmp = icmp eq i32 %call2, -1, !dbg !5612
  br i1 %cmp, label %if.then.3, label %if.end.5, !dbg !5614

if.then.3:                                        ; preds = %if.end
  %6 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !5615, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %6) #3, !dbg !5617
  br label %cleanup, !dbg !5618

if.end.5:                                         ; preds = %if.end
  %7 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !5619, !tbaa !3930
  %inc = add i64 %7, 1, !dbg !5619
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !5619, !tbaa !3930
  br label %cleanup, !dbg !5619

cleanup:                                          ; preds = %entry, %if.end.5, %if.then.3
  %retval.0 = phi %struct._object* [ %call.i, %if.then.3 ], [ @_Py_NoneStruct, %if.end.5 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %2) #3, !dbg !5620
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !5620
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !5620
  ret %struct._object* %retval.0, !dbg !5620
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_readlink(%struct._object* nocapture readnone %self, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  %path = alloca %struct.path_t, align 8
  %dir_fd = alloca i32, align 4
  %buffer = alloca [4096 x i8], align 16
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1371, metadata !3839), !dbg !5621
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1372, metadata !3839), !dbg !5622
  tail call void @llvm.dbg.value(metadata %struct._object* %kwargs, i64 0, metadata !1373, metadata !3839), !dbg !5623
  %0 = bitcast %struct.path_t* %path to i8*, !dbg !5624
  call void @llvm.lifetime.start(i64 72, i8* %0) #3, !dbg !5624
  %1 = bitcast i32* %dir_fd to i8*, !dbg !5625
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !5625
  tail call void @llvm.dbg.value(metadata i32 -100, i64 0, metadata !1375, metadata !3839), !dbg !5626
  store i32 -100, i32* %dir_fd, align 4, !dbg !5626, !tbaa !3890
  %2 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buffer, i64 0, i64 0, !dbg !5627
  call void @llvm.lifetime.start(i64 4096, i8* %2) #3, !dbg !5627
  tail call void @llvm.dbg.declare(metadata [4096 x i8]* %buffer, metadata !1376, metadata !3839), !dbg !5628
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1381, metadata !3839), !dbg !5629
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 72, i32 8, i1 false), !dbg !5630
  %function_name = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 0, !dbg !5631
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.44, i64 0, i64 0), i8** %function_name, align 8, !dbg !5632, !tbaa !4743
  tail call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1374, metadata !3839), !dbg !5633
  tail call void @llvm.dbg.value(metadata i32* %dir_fd, i64 0, metadata !1375, metadata !3839), !dbg !5626
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %args, %struct._object* %kwargs, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.210, i64 0, i64 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @posix_readlink.keywords, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @path_converter, %struct.path_t* nonnull %path, i32 (%struct._object*, i8*)* nonnull @dir_fd_converter, i32* nonnull %dir_fd) #3, !dbg !5634
  %tobool = icmp eq i32 %call, 0, !dbg !5634
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5636

if.end:                                           ; preds = %entry
  %call1 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !5637
  call void @llvm.dbg.value(metadata %struct._ts* %call1, i64 0, metadata !1382, metadata !3839), !dbg !5637
  call void @llvm.dbg.value(metadata i32* %dir_fd, i64 0, metadata !1375, metadata !3839), !dbg !5626
  %3 = load i32, i32* %dir_fd, align 4, !dbg !5638, !tbaa !3890
  %cmp = icmp eq i32 %3, -100, !dbg !5640
  %narrow4 = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 5, !dbg !5641
  %4 = load i8*, i8** %narrow4, align 8, !dbg !5641, !tbaa !4761
  br i1 %cmp, label %if.else, label %if.then.2, !dbg !5642

if.then.2:                                        ; preds = %if.end
  %call3 = call i64 @readlinkat(i32 %3, i8* %4, i8* %2, i64 4096) #3, !dbg !5643
  call void @llvm.dbg.value(metadata i64 %call3, i64 0, metadata !1380, metadata !3839), !dbg !5644
  br label %if.end.7, !dbg !5645

if.else:                                          ; preds = %if.end
  %call6 = call i64 @readlink(i8* %4, i8* %2, i64 4096) #3, !dbg !5646
  call void @llvm.dbg.value(metadata i64 %call6, i64 0, metadata !1380, metadata !3839), !dbg !5644
  br label %if.end.7

if.end.7:                                         ; preds = %if.else, %if.then.2
  %length.0 = phi i64 [ %call3, %if.then.2 ], [ %call6, %if.else ]
  call void @PyEval_RestoreThread(%struct._ts* %call1) #3, !dbg !5647
  %cmp8 = icmp slt i64 %length.0, 0, !dbg !5648
  %path.idx = getelementptr %struct.path_t, %struct.path_t* %path, i64 0, i32 8
  %path.idx.val = load %struct._object*, %struct._object** %path.idx, align 8, !tbaa !4767
  br i1 %cmp8, label %if.then.9, label %if.end.11, !dbg !5650

if.then.9:                                        ; preds = %if.end.7
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1374, metadata !3839), !dbg !5633
  %5 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !5651, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrnoWithFilenameObject(%struct._object* %5, %struct._object* %path.idx.val) #3, !dbg !5654
  call void @llvm.dbg.value(metadata %struct._object* %call.i, i64 0, metadata !1381, metadata !3839), !dbg !5629
  br label %exit, !dbg !5655

if.end.11:                                        ; preds = %if.end.7
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %path.idx.val, i64 0, i32 1, !dbg !5656
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5656, !tbaa !3875
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i64 0, i32 19, !dbg !5656
  %7 = load i64, i64* %tp_flags, align 8, !dbg !5656, !tbaa !5345
  %and = and i64 %7, 268435456, !dbg !5656
  %cmp12 = icmp eq i64 %and, 0, !dbg !5656
  br i1 %cmp12, label %if.else.16, label %if.then.13, !dbg !5658

if.then.13:                                       ; preds = %if.end.11
  %call15 = call %struct._object* @PyUnicode_DecodeFSDefaultAndSize(i8* %2, i64 %length.0) #3, !dbg !5659
  call void @llvm.dbg.value(metadata %struct._object* %call15, i64 0, metadata !1381, metadata !3839), !dbg !5629
  br label %exit, !dbg !5660

if.else.16:                                       ; preds = %if.end.11
  %call18 = call %struct._object* @PyBytes_FromStringAndSize(i8* %2, i64 %length.0) #3, !dbg !5661
  call void @llvm.dbg.value(metadata %struct._object* %call18, i64 0, metadata !1381, metadata !3839), !dbg !5629
  br label %exit

exit:                                             ; preds = %if.then.13, %if.else.16, %if.then.9
  %return_value.0 = phi %struct._object* [ %call.i, %if.then.9 ], [ %call15, %if.then.13 ], [ %call18, %if.else.16 ]
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1374, metadata !3839), !dbg !5633
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1054, metadata !3839) #3, !dbg !5662
  %cleanup.i = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 9, !dbg !5664
  %8 = load %struct._object*, %struct._object** %cleanup.i, align 8, !dbg !5664, !tbaa !4634
  %tobool.i = icmp eq %struct._object* %8, null, !dbg !5665
  br i1 %tobool.i, label %cleanup, label %if.then.2.i, !dbg !5666

if.then.2.i:                                      ; preds = %exit
  call void @llvm.dbg.value(metadata %struct._object* %8, i64 0, metadata !1055, metadata !3839) #3, !dbg !5667
  store %struct._object* null, %struct._object** %cleanup.i, align 8, !dbg !5668, !tbaa !4634
  call void @llvm.dbg.value(metadata %struct._object* %8, i64 0, metadata !1059, metadata !3839) #3, !dbg !5669
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %8, i64 0, i32 0, !dbg !5670
  %9 = load i64, i64* %ob_refcnt.i, align 8, !dbg !5670, !tbaa !3930
  %dec.i = add i64 %9, -1, !dbg !5670
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !5670, !tbaa !3930
  %cmp5.i = icmp eq i64 %dec.i, 0, !dbg !5670
  br i1 %cmp5.i, label %if.else.i, label %cleanup, !dbg !5671

if.else.i:                                        ; preds = %if.then.2.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %8, i64 0, i32 1, !dbg !5672
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !5672, !tbaa !3875
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i64 0, i32 4, !dbg !5672
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !5672, !tbaa !3934
  call void %11(%struct._object* %8) #3, !dbg !5672
  br label %cleanup, !dbg !5673

cleanup:                                          ; preds = %if.else.i, %if.then.2.i, %exit, %entry
  %retval.0 = phi %struct._object* [ null, %entry ], [ %return_value.0, %exit ], [ %return_value.0, %if.then.2.i ], [ %return_value.0, %if.else.i ]
  call void @llvm.lifetime.end(i64 4096, i8* %2) #3, !dbg !5674
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !5674
  call void @llvm.lifetime.end(i64 72, i8* %0) #3, !dbg !5674
  ret %struct._object* %retval.0, !dbg !5674
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_rename(%struct._object* nocapture readnone %self, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1386, metadata !3839), !dbg !5675
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1387, metadata !3839), !dbg !5676
  tail call void @llvm.dbg.value(metadata %struct._object* %kwargs, i64 0, metadata !1388, metadata !3839), !dbg !5677
  %call = tail call fastcc %struct._object* @internal_rename(%struct._object* %args, %struct._object* %kwargs, i32 0), !dbg !5678
  ret %struct._object* %call, !dbg !5679
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_replace(%struct._object* nocapture readnone %self, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1410, metadata !3839), !dbg !5680
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1411, metadata !3839), !dbg !5681
  tail call void @llvm.dbg.value(metadata %struct._object* %kwargs, i64 0, metadata !1412, metadata !3839), !dbg !5682
  %call = tail call fastcc %struct._object* @internal_rename(%struct._object* %args, %struct._object* %kwargs, i32 1), !dbg !5683
  ret %struct._object* %call, !dbg !5684
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_rmdir(%struct._object* nocapture readnone %self, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  %path = alloca %struct.path_t, align 8
  %dir_fd = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1415, metadata !3839), !dbg !5685
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1416, metadata !3839), !dbg !5686
  tail call void @llvm.dbg.value(metadata %struct._object* %kwargs, i64 0, metadata !1417, metadata !3839), !dbg !5687
  %0 = bitcast %struct.path_t* %path to i8*, !dbg !5688
  call void @llvm.lifetime.start(i64 72, i8* %0) #3, !dbg !5688
  %1 = bitcast i32* %dir_fd to i8*, !dbg !5689
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !5689
  tail call void @llvm.dbg.value(metadata i32 -100, i64 0, metadata !1419, metadata !3839), !dbg !5690
  store i32 -100, i32* %dir_fd, align 4, !dbg !5690, !tbaa !3890
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1421, metadata !3839), !dbg !5691
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 72, i32 8, i1 false), !dbg !5692
  %function_name = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 0, !dbg !5693
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.47, i64 0, i64 0), i8** %function_name, align 8, !dbg !5694, !tbaa !4743
  tail call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1418, metadata !3839), !dbg !5695
  tail call void @llvm.dbg.value(metadata i32* %dir_fd, i64 0, metadata !1419, metadata !3839), !dbg !5690
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %args, %struct._object* %kwargs, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.213, i64 0, i64 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @posix_rmdir.keywords, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @path_converter, %struct.path_t* nonnull %path, i32 (%struct._object*, i8*)* nonnull @dir_fd_converter, i32* nonnull %dir_fd) #3, !dbg !5696
  %tobool = icmp eq i32 %call, 0, !dbg !5696
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5698

if.end:                                           ; preds = %entry
  %call1 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !5699
  call void @llvm.dbg.value(metadata %struct._ts* %call1, i64 0, metadata !1422, metadata !3839), !dbg !5699
  call void @llvm.dbg.value(metadata i32* %dir_fd, i64 0, metadata !1419, metadata !3839), !dbg !5690
  %2 = load i32, i32* %dir_fd, align 4, !dbg !5700, !tbaa !3890
  %cmp = icmp eq i32 %2, -100, !dbg !5702
  %narrow4 = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 5, !dbg !5703
  %3 = load i8*, i8** %narrow4, align 8, !dbg !5703, !tbaa !4761
  br i1 %cmp, label %if.else, label %if.then.2, !dbg !5704

if.then.2:                                        ; preds = %if.end
  %call3 = call i32 @unlinkat(i32 %2, i8* %3, i32 512) #3, !dbg !5705
  call void @llvm.dbg.value(metadata i32 %call3, i64 0, metadata !1420, metadata !3839), !dbg !5706
  br label %if.end.6, !dbg !5707

if.else:                                          ; preds = %if.end
  %call5 = call i32 @rmdir(i8* %3) #3, !dbg !5708
  call void @llvm.dbg.value(metadata i32 %call5, i64 0, metadata !1420, metadata !3839), !dbg !5706
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.2
  %result.0 = phi i32 [ %call3, %if.then.2 ], [ %call5, %if.else ]
  call void @PyEval_RestoreThread(%struct._ts* %call1) #3, !dbg !5709
  %tobool7 = icmp eq i32 %result.0, 0, !dbg !5710
  br i1 %tobool7, label %if.end.10, label %if.then.8, !dbg !5712

if.then.8:                                        ; preds = %if.end.6
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1418, metadata !3839), !dbg !5695
  %path.idx = getelementptr %struct.path_t, %struct.path_t* %path, i64 0, i32 8
  %path.idx.val = load %struct._object*, %struct._object** %path.idx, align 8, !tbaa !4767
  %4 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !5713, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrnoWithFilenameObject(%struct._object* %4, %struct._object* %path.idx.val) #3, !dbg !5716
  call void @llvm.dbg.value(metadata %struct._object* %call.i, i64 0, metadata !1421, metadata !3839), !dbg !5691
  br label %exit, !dbg !5717

if.end.10:                                        ; preds = %if.end.6
  call void @llvm.dbg.value(metadata %struct._object* @_Py_NoneStruct, i64 0, metadata !1421, metadata !3839), !dbg !5691
  %5 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !5718, !tbaa !3930
  %inc = add i64 %5, 1, !dbg !5718
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !5718, !tbaa !3930
  br label %exit, !dbg !5718

exit:                                             ; preds = %if.end.10, %if.then.8
  %return_value.0 = phi %struct._object* [ %call.i, %if.then.8 ], [ @_Py_NoneStruct, %if.end.10 ]
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1418, metadata !3839), !dbg !5695
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1054, metadata !3839) #3, !dbg !5719
  %cleanup.i = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 9, !dbg !5721
  %6 = load %struct._object*, %struct._object** %cleanup.i, align 8, !dbg !5721, !tbaa !4634
  %tobool.i = icmp eq %struct._object* %6, null, !dbg !5722
  br i1 %tobool.i, label %cleanup, label %if.then.2.i, !dbg !5723

if.then.2.i:                                      ; preds = %exit
  call void @llvm.dbg.value(metadata %struct._object* %6, i64 0, metadata !1055, metadata !3839) #3, !dbg !5724
  store %struct._object* null, %struct._object** %cleanup.i, align 8, !dbg !5725, !tbaa !4634
  call void @llvm.dbg.value(metadata %struct._object* %6, i64 0, metadata !1059, metadata !3839) #3, !dbg !5726
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %6, i64 0, i32 0, !dbg !5727
  %7 = load i64, i64* %ob_refcnt.i, align 8, !dbg !5727, !tbaa !3930
  %dec.i = add i64 %7, -1, !dbg !5727
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !5727, !tbaa !3930
  %cmp5.i = icmp eq i64 %dec.i, 0, !dbg !5727
  br i1 %cmp5.i, label %if.else.i, label %cleanup, !dbg !5728

if.else.i:                                        ; preds = %if.then.2.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %6, i64 0, i32 1, !dbg !5729
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !5729, !tbaa !3875
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i64 0, i32 4, !dbg !5729
  %9 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !5729, !tbaa !3934
  call void %9(%struct._object* %6) #3, !dbg !5729
  br label %cleanup, !dbg !5730

cleanup:                                          ; preds = %if.else.i, %if.then.2.i, %exit, %entry
  %retval.0 = phi %struct._object* [ null, %entry ], [ %return_value.0, %exit ], [ %return_value.0, %if.then.2.i ], [ %return_value.0, %if.else.i ]
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !5731
  call void @llvm.lifetime.end(i64 72, i8* %0) #3, !dbg !5731
  ret %struct._object* %retval.0, !dbg !5731
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @stat_float_times(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %newval = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1426, metadata !3839), !dbg !5732
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1427, metadata !3839), !dbg !5733
  %0 = bitcast i32* %newval to i8*, !dbg !5734
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !5734
  tail call void @llvm.dbg.value(metadata i32 -1, i64 0, metadata !1428, metadata !3839), !dbg !5735
  store i32 -1, i32* %newval, align 4, !dbg !5735, !tbaa !3890
  tail call void @llvm.dbg.value(metadata i32* %newval, i64 0, metadata !1428, metadata !3839), !dbg !5735
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.214, i64 0, i64 0), i32* nonnull %newval) #3, !dbg !5736
  %tobool = icmp eq i32 %call, 0, !dbg !5736
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5738

if.end:                                           ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_DeprecationWarning, align 8, !dbg !5739, !tbaa !3870
  %call1 = call i32 @PyErr_WarnEx(%struct._object* %1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.215, i64 0, i64 0), i64 1) #3, !dbg !5741
  %tobool2 = icmp eq i32 %call1, 0, !dbg !5741
  br i1 %tobool2, label %if.end.4, label %cleanup, !dbg !5742

if.end.4:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata i32* %newval, i64 0, metadata !1428, metadata !3839), !dbg !5735
  %2 = load i32, i32* %newval, align 4, !dbg !5743, !tbaa !3890
  %cmp = icmp eq i32 %2, -1, !dbg !5745
  br i1 %cmp, label %if.then.5, label %if.end.7, !dbg !5746

if.then.5:                                        ; preds = %if.end.4
  %3 = load i32, i32* @_stat_float_times, align 4, !dbg !5747, !tbaa !3890
  %conv = sext i32 %3 to i64, !dbg !5747
  %call6 = call %struct._object* @PyBool_FromLong(i64 %conv) #3, !dbg !5748
  br label %cleanup, !dbg !5749

if.end.7:                                         ; preds = %if.end.4
  store i32 %2, i32* @_stat_float_times, align 4, !dbg !5750, !tbaa !3890
  %4 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !5751, !tbaa !3930
  %inc = add i64 %4, 1, !dbg !5751
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !5751, !tbaa !3930
  br label %cleanup, !dbg !5752

cleanup:                                          ; preds = %if.end, %entry, %if.end.7, %if.then.5
  %retval.0 = phi %struct._object* [ %call6, %if.then.5 ], [ @_Py_NoneStruct, %if.end.7 ], [ null, %entry ], [ null, %if.end ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !5753
  ret %struct._object* %retval.0, !dbg !5753
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_symlink(%struct._object* nocapture readnone %self, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  %src = alloca %struct.path_t, align 16
  %dst = alloca %struct.path_t, align 16
  %dir_fd = alloca i32, align 4
  %target_is_directory = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1431, metadata !3839), !dbg !5754
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1432, metadata !3839), !dbg !5755
  tail call void @llvm.dbg.value(metadata %struct._object* %kwargs, i64 0, metadata !1433, metadata !3839), !dbg !5756
  %0 = bitcast %struct.path_t* %src to i8*, !dbg !5757
  call void @llvm.lifetime.start(i64 72, i8* %0) #3, !dbg !5757
  %1 = bitcast %struct.path_t* %dst to i8*, !dbg !5758
  call void @llvm.lifetime.start(i64 72, i8* %1) #3, !dbg !5758
  %2 = bitcast i32* %dir_fd to i8*, !dbg !5759
  call void @llvm.lifetime.start(i64 4, i8* %2) #3, !dbg !5759
  tail call void @llvm.dbg.value(metadata i32 -100, i64 0, metadata !1436, metadata !3839), !dbg !5760
  store i32 -100, i32* %dir_fd, align 4, !dbg !5760, !tbaa !3890
  %3 = bitcast i32* %target_is_directory to i8*, !dbg !5761
  call void @llvm.lifetime.start(i64 4, i8* %3) #3, !dbg !5761
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1437, metadata !3839), !dbg !5762
  store i32 0, i32* %target_is_directory, align 4, !dbg !5762, !tbaa !3890
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 72, i32 16, i1 false), !dbg !5763
  %4 = bitcast %struct.path_t* %src to <2 x i8*>*, !dbg !5764
  store <2 x i8*> <i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.197, i64 0, i64 0)>, <2 x i8*>* %4, align 16, !dbg !5764, !tbaa !3870
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 72, i32 16, i1 false), !dbg !5765
  %5 = bitcast %struct.path_t* %dst to <2 x i8*>*, !dbg !5766
  store <2 x i8*> <i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.198, i64 0, i64 0)>, <2 x i8*>* %5, align 16, !dbg !5766, !tbaa !3870
  tail call void @llvm.dbg.value(metadata %struct.path_t* %src, i64 0, metadata !1434, metadata !3839), !dbg !5767
  tail call void @llvm.dbg.value(metadata %struct.path_t* %dst, i64 0, metadata !1435, metadata !3839), !dbg !5768
  tail call void @llvm.dbg.value(metadata i32* %dir_fd, i64 0, metadata !1436, metadata !3839), !dbg !5760
  tail call void @llvm.dbg.value(metadata i32* %target_is_directory, i64 0, metadata !1437, metadata !3839), !dbg !5762
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %args, %struct._object* %kwargs, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.217, i64 0, i64 0), i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @posix_symlink.keywords, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @path_converter, %struct.path_t* nonnull %src, i32 (%struct._object*, i8*)* nonnull @path_converter, %struct.path_t* nonnull %dst, i32* nonnull %target_is_directory, i32 (%struct._object*, i8*)* nonnull @dir_fd_converter, i32* nonnull %dir_fd) #3, !dbg !5769
  %tobool = icmp eq i32 %call, 0, !dbg !5769
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5771

if.end:                                           ; preds = %entry
  %narrow = getelementptr inbounds %struct.path_t, %struct.path_t* %src, i64 0, i32 5, !dbg !5772
  %6 = load i8*, i8** %narrow, align 16, !dbg !5772, !tbaa !4761
  %tobool3 = icmp eq i8* %6, null, !dbg !5774
  br i1 %tobool3, label %lor.lhs.false, label %land.lhs.true, !dbg !5775

land.lhs.true:                                    ; preds = %if.end
  %wide = getelementptr inbounds %struct.path_t, %struct.path_t* %dst, i64 0, i32 4, !dbg !5776
  %7 = load i32*, i32** %wide, align 8, !dbg !5776, !tbaa !5241
  %tobool4 = icmp eq i32* %7, null, !dbg !5778
  br i1 %tobool4, label %lor.lhs.false, label %if.then.10, !dbg !5779

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end
  %wide5 = getelementptr inbounds %struct.path_t, %struct.path_t* %src, i64 0, i32 4, !dbg !5780
  %8 = load i32*, i32** %wide5, align 8, !dbg !5780, !tbaa !5241
  %tobool6 = icmp eq i32* %8, null, !dbg !5783
  %.pre = getelementptr inbounds %struct.path_t, %struct.path_t* %dst, i64 0, i32 5, !dbg !5784
  %9 = load i8*, i8** %.pre, align 16
  %tobool9 = icmp eq i8* %9, null, !dbg !5786
  %or.cond = or i1 %tobool6, %tobool9, !dbg !5787
  br i1 %or.cond, label %if.end.11, label %if.then.10, !dbg !5787

if.then.10:                                       ; preds = %lor.lhs.false, %land.lhs.true
  %10 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !5788, !tbaa !3870
  call void @PyErr_SetString(%struct._object* %10, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.218, i64 0, i64 0)) #3, !dbg !5790
  call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1438, metadata !3839), !dbg !5791
  br label %exit, !dbg !5792

if.end.11:                                        ; preds = %lor.lhs.false
  %call12 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !5793
  call void @llvm.dbg.value(metadata %struct._ts* %call12, i64 0, metadata !1440, metadata !3839), !dbg !5793
  call void @llvm.dbg.value(metadata i32* %dir_fd, i64 0, metadata !1436, metadata !3839), !dbg !5760
  %11 = load i32, i32* %dir_fd, align 4, !dbg !5794, !tbaa !3890
  %cmp = icmp eq i32 %11, -100, !dbg !5795
  %12 = load i8*, i8** %narrow, align 16, !dbg !5796, !tbaa !4761
  %13 = load i8*, i8** %.pre, align 16, !dbg !5784, !tbaa !4761
  br i1 %cmp, label %if.else, label %if.then.13, !dbg !5797

if.then.13:                                       ; preds = %if.end.11
  %call16 = call i32 @symlinkat(i8* %12, i32 %11, i8* %13) #3, !dbg !5798
  call void @llvm.dbg.value(metadata i32 %call16, i64 0, metadata !1439, metadata !3839), !dbg !5799
  br label %if.end.20, !dbg !5800

if.else:                                          ; preds = %if.end.11
  %call19 = call i32 @symlink(i8* %12, i8* %13) #3, !dbg !5801
  call void @llvm.dbg.value(metadata i32 %call19, i64 0, metadata !1439, metadata !3839), !dbg !5799
  br label %if.end.20

if.end.20:                                        ; preds = %if.else, %if.then.13
  %result.0 = phi i32 [ %call16, %if.then.13 ], [ %call19, %if.else ]
  call void @PyEval_RestoreThread(%struct._ts* %call12) #3, !dbg !5802
  %tobool21 = icmp eq i32 %result.0, 0, !dbg !5803
  br i1 %tobool21, label %if.end.24, label %if.then.22, !dbg !5805

if.then.22:                                       ; preds = %if.end.20
  call void @llvm.dbg.value(metadata %struct.path_t* %src, i64 0, metadata !1434, metadata !3839), !dbg !5767
  call void @llvm.dbg.value(metadata %struct.path_t* %dst, i64 0, metadata !1435, metadata !3839), !dbg !5768
  %src.idx = getelementptr %struct.path_t, %struct.path_t* %src, i64 0, i32 8
  %src.idx.val = load %struct._object*, %struct._object** %src.idx, align 8, !tbaa !4767
  %dst.idx = getelementptr %struct.path_t, %struct.path_t* %dst, i64 0, i32 8
  %dst.idx.val = load %struct._object*, %struct._object** %dst.idx, align 8, !tbaa !4767
  %14 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !5806, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrnoWithFilenameObjects(%struct._object* %14, %struct._object* %src.idx.val, %struct._object* %dst.idx.val) #3, !dbg !5809
  call void @llvm.dbg.value(metadata %struct._object* %call.i, i64 0, metadata !1438, metadata !3839), !dbg !5791
  br label %exit, !dbg !5810

if.end.24:                                        ; preds = %if.end.20
  call void @llvm.dbg.value(metadata %struct._object* @_Py_NoneStruct, i64 0, metadata !1438, metadata !3839), !dbg !5791
  %15 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !5811, !tbaa !3930
  %inc = add i64 %15, 1, !dbg !5811
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !5811, !tbaa !3930
  br label %exit, !dbg !5812

exit:                                             ; preds = %if.end.24, %if.then.22, %if.then.10
  %return_value.0 = phi %struct._object* [ null, %if.then.10 ], [ %call.i, %if.then.22 ], [ @_Py_NoneStruct, %if.end.24 ]
  call void @llvm.dbg.value(metadata %struct.path_t* %src, i64 0, metadata !1434, metadata !3839), !dbg !5767
  call void @llvm.dbg.value(metadata %struct.path_t* %src, i64 0, metadata !1054, metadata !3839) #3, !dbg !5813
  %cleanup.i = getelementptr inbounds %struct.path_t, %struct.path_t* %src, i64 0, i32 9, !dbg !5815
  %16 = load %struct._object*, %struct._object** %cleanup.i, align 16, !dbg !5815, !tbaa !4634
  %tobool.i = icmp eq %struct._object* %16, null, !dbg !5816
  br i1 %tobool.i, label %path_cleanup.exit, label %if.then.2.i, !dbg !5817

if.then.2.i:                                      ; preds = %exit
  call void @llvm.dbg.value(metadata %struct._object* %16, i64 0, metadata !1055, metadata !3839) #3, !dbg !5818
  store %struct._object* null, %struct._object** %cleanup.i, align 16, !dbg !5819, !tbaa !4634
  call void @llvm.dbg.value(metadata %struct._object* %16, i64 0, metadata !1059, metadata !3839) #3, !dbg !5820
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %16, i64 0, i32 0, !dbg !5821
  %17 = load i64, i64* %ob_refcnt.i, align 8, !dbg !5821, !tbaa !3930
  %dec.i = add i64 %17, -1, !dbg !5821
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !5821, !tbaa !3930
  %cmp5.i = icmp eq i64 %dec.i, 0, !dbg !5821
  br i1 %cmp5.i, label %if.else.i, label %path_cleanup.exit, !dbg !5822

if.else.i:                                        ; preds = %if.then.2.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %16, i64 0, i32 1, !dbg !5823
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !5823, !tbaa !3875
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i64 0, i32 4, !dbg !5823
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !5823, !tbaa !3934
  call void %19(%struct._object* %16) #3, !dbg !5823
  br label %path_cleanup.exit, !dbg !5824

path_cleanup.exit:                                ; preds = %exit, %if.then.2.i, %if.else.i
  call void @llvm.dbg.value(metadata %struct.path_t* %dst, i64 0, metadata !1435, metadata !3839), !dbg !5768
  call void @llvm.dbg.value(metadata %struct.path_t* %dst, i64 0, metadata !1054, metadata !3839) #3, !dbg !5825
  %cleanup.i.33 = getelementptr inbounds %struct.path_t, %struct.path_t* %dst, i64 0, i32 9, !dbg !5827
  %20 = load %struct._object*, %struct._object** %cleanup.i.33, align 16, !dbg !5827, !tbaa !4634
  %tobool.i.34 = icmp eq %struct._object* %20, null, !dbg !5828
  br i1 %tobool.i.34, label %cleanup, label %if.then.2.i.38, !dbg !5829

if.then.2.i.38:                                   ; preds = %path_cleanup.exit
  call void @llvm.dbg.value(metadata %struct._object* %20, i64 0, metadata !1055, metadata !3839) #3, !dbg !5830
  store %struct._object* null, %struct._object** %cleanup.i.33, align 16, !dbg !5831, !tbaa !4634
  call void @llvm.dbg.value(metadata %struct._object* %20, i64 0, metadata !1059, metadata !3839) #3, !dbg !5832
  %ob_refcnt.i.35 = getelementptr inbounds %struct._object, %struct._object* %20, i64 0, i32 0, !dbg !5833
  %21 = load i64, i64* %ob_refcnt.i.35, align 8, !dbg !5833, !tbaa !3930
  %dec.i.36 = add i64 %21, -1, !dbg !5833
  store i64 %dec.i.36, i64* %ob_refcnt.i.35, align 8, !dbg !5833, !tbaa !3930
  %cmp5.i.37 = icmp eq i64 %dec.i.36, 0, !dbg !5833
  br i1 %cmp5.i.37, label %if.else.i.41, label %cleanup, !dbg !5834

if.else.i.41:                                     ; preds = %if.then.2.i.38
  %ob_type.i.39 = getelementptr inbounds %struct._object, %struct._object* %20, i64 0, i32 1, !dbg !5835
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type.i.39, align 8, !dbg !5835, !tbaa !3875
  %tp_dealloc.i.40 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %22, i64 0, i32 4, !dbg !5835
  %23 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i.40, align 8, !dbg !5835, !tbaa !3934
  call void %23(%struct._object* %20) #3, !dbg !5835
  br label %cleanup, !dbg !5836

cleanup:                                          ; preds = %if.else.i.41, %if.then.2.i.38, %path_cleanup.exit, %entry
  %retval.0 = phi %struct._object* [ null, %entry ], [ %return_value.0, %path_cleanup.exit ], [ %return_value.0, %if.then.2.i.38 ], [ %return_value.0, %if.else.i.41 ]
  call void @llvm.lifetime.end(i64 4, i8* %3) #3, !dbg !5837
  call void @llvm.lifetime.end(i64 4, i8* %2) #3, !dbg !5837
  call void @llvm.lifetime.end(i64 72, i8* %1) #3, !dbg !5837
  call void @llvm.lifetime.end(i64 72, i8* %0) #3, !dbg !5837
  ret %struct._object* %retval.0, !dbg !5837
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_system(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %command_obj = alloca %struct._object*, align 8
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1444, metadata !3839), !dbg !5838
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1445, metadata !3839), !dbg !5839
  %0 = bitcast %struct._object** %command_obj to i8*, !dbg !5840
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !5840
  tail call void @llvm.dbg.value(metadata %struct._object** %command_obj, i64 0, metadata !1447, metadata !3839), !dbg !5841
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.219, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @PyUnicode_FSConverter, %struct._object** nonnull %command_obj) #3, !dbg !5842
  %tobool = icmp eq i32 %call, 0, !dbg !5842
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5844

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct._object** %command_obj, i64 0, metadata !1447, metadata !3839), !dbg !5841
  %1 = load %struct._object*, %struct._object** %command_obj, align 8, !dbg !5845, !tbaa !3870
  %call1 = call i8* @PyBytes_AsString(%struct._object* %1) #3, !dbg !5846
  call void @llvm.dbg.value(metadata i8* %call1, i64 0, metadata !1448, metadata !3839), !dbg !5847
  %call2 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !5848
  call void @llvm.dbg.value(metadata %struct._ts* %call2, i64 0, metadata !1449, metadata !3839), !dbg !5848
  %call3 = call i32 @system(i8* %call1) #3, !dbg !5849
  %conv = sext i32 %call3 to i64, !dbg !5849
  call void @llvm.dbg.value(metadata i64 %conv, i64 0, metadata !1446, metadata !3839), !dbg !5850
  call void @PyEval_RestoreThread(%struct._ts* %call2) #3, !dbg !5851
  call void @llvm.dbg.value(metadata %struct._object** %command_obj, i64 0, metadata !1447, metadata !3839), !dbg !5841
  %2 = load %struct._object*, %struct._object** %command_obj, align 8, !dbg !5852, !tbaa !3870
  call void @llvm.dbg.value(metadata %struct._object* %2, i64 0, metadata !1451, metadata !3839), !dbg !5852
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %2, i64 0, i32 0, !dbg !5854
  %3 = load i64, i64* %ob_refcnt, align 8, !dbg !5854, !tbaa !3930
  %dec = add i64 %3, -1, !dbg !5854
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5854, !tbaa !3930
  %cmp = icmp eq i64 %dec, 0, !dbg !5854
  br i1 %cmp, label %if.else, label %if.end.6, !dbg !5856

if.else:                                          ; preds = %if.end
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %2, i64 0, i32 1, !dbg !5857
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5857, !tbaa !3875
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i64 0, i32 4, !dbg !5857
  %5 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5857, !tbaa !3934
  call void %5(%struct._object* %2) #3, !dbg !5857
  br label %if.end.6

if.end.6:                                         ; preds = %if.end, %if.else
  %call7 = call %struct._object* @PyLong_FromLong(i64 %conv) #3, !dbg !5859
  br label %cleanup, !dbg !5860

cleanup:                                          ; preds = %entry, %if.end.6
  %retval.0 = phi %struct._object* [ %call7, %if.end.6 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 8, i8* %0) #3, !dbg !5861
  ret %struct._object* %retval.0, !dbg !5861
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_umask(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %i = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1455, metadata !3839), !dbg !5862
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1456, metadata !3839), !dbg !5863
  %0 = bitcast i32* %i to i8*, !dbg !5864
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !5864
  tail call void @llvm.dbg.value(metadata i32* %i, i64 0, metadata !1457, metadata !3839), !dbg !5865
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.220, i64 0, i64 0), i32* nonnull %i) #3, !dbg !5866
  %tobool = icmp eq i32 %call, 0, !dbg !5866
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5868

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %i, i64 0, metadata !1457, metadata !3839), !dbg !5865
  %1 = load i32, i32* %i, align 4, !dbg !5869, !tbaa !3890
  %call1 = call i32 @umask(i32 %1) #3, !dbg !5870
  call void @llvm.dbg.value(metadata i32 %call1, i64 0, metadata !1457, metadata !3839), !dbg !5865
  store i32 %call1, i32* %i, align 4, !dbg !5871, !tbaa !3890
  %cmp = icmp slt i32 %call1, 0, !dbg !5872
  br i1 %cmp, label %if.then.2, label %if.end.4, !dbg !5874

if.then.2:                                        ; preds = %if.end
  %2 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !5875, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %2) #3, !dbg !5877
  br label %cleanup, !dbg !5878

if.end.4:                                         ; preds = %if.end
  %conv = sext i32 %call1 to i64, !dbg !5879
  %call5 = call %struct._object* @PyLong_FromLong(i64 %conv) #3, !dbg !5880
  br label %cleanup, !dbg !5881

cleanup:                                          ; preds = %entry, %if.end.4, %if.then.2
  %retval.0 = phi %struct._object* [ %call.i, %if.then.2 ], [ %call5, %if.end.4 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !5882
  ret %struct._object* %retval.0, !dbg !5882
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_uname(%struct._object* nocapture readnone %self, %struct._object* nocapture readnone %noargs) #0 {
entry:
  %u = alloca %struct.utsname, align 1
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1460, metadata !3839), !dbg !5883
  tail call void @llvm.dbg.value(metadata %struct._object* %noargs, i64 0, metadata !1461, metadata !3839), !dbg !5884
  %0 = getelementptr inbounds %struct.utsname, %struct.utsname* %u, i64 0, i32 0, i64 0, !dbg !5885
  call void @llvm.lifetime.start(i64 390, i8* %0) #3, !dbg !5885
  %call = tail call %struct._ts* @PyEval_SaveThread() #3, !dbg !5886
  tail call void @llvm.dbg.value(metadata %struct._ts* %call, i64 0, metadata !1477, metadata !3839), !dbg !5886
  tail call void @llvm.dbg.value(metadata %struct.utsname* %u, i64 0, metadata !1462, metadata !3839), !dbg !5887
  %call1 = call i32 @uname(%struct.utsname* nonnull %u) #3, !dbg !5888
  tail call void @llvm.dbg.value(metadata i32 %call1, i64 0, metadata !1475, metadata !3839), !dbg !5889
  tail call void @PyEval_RestoreThread(%struct._ts* %call) #3, !dbg !5890
  %cmp = icmp slt i32 %call1, 0, !dbg !5891
  br i1 %cmp, label %if.then, label %if.end, !dbg !5893

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !5894, !tbaa !3870
  %call.i = tail call %struct._object* @PyErr_SetFromErrno(%struct._object* %1) #3, !dbg !5896
  br label %cleanup.105, !dbg !5897

if.end:                                           ; preds = %entry
  %call3 = tail call %struct._object* @PyStructSequence_New(%struct._typeobject* nonnull @UnameResultType) #3, !dbg !5898
  tail call void @llvm.dbg.value(metadata %struct._object* %call3, i64 0, metadata !1476, metadata !3839), !dbg !5899
  %cmp4 = icmp eq %struct._object* %call3, null, !dbg !5900
  br i1 %cmp4, label %cleanup.105, label %if.end.6, !dbg !5902

if.end.6:                                         ; preds = %if.end
  %call7 = call %struct._object* @PyUnicode_DecodeFSDefault(i8* %0) #3, !dbg !5903
  call void @llvm.dbg.value(metadata %struct._object* %call7, i64 0, metadata !1479, metadata !3839), !dbg !5903
  %tobool = icmp eq %struct._object* %call7, null, !dbg !5904
  br i1 %tobool, label %do.body, label %if.end.12, !dbg !5903

do.body:                                          ; preds = %if.end.6
  call void @llvm.dbg.value(metadata %struct._object* %call3, i64 0, metadata !1481, metadata !3839), !dbg !5905
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call3, i64 0, i32 0, !dbg !5907
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !5907, !tbaa !3930
  %dec = add i64 %2, -1, !dbg !5907
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5907, !tbaa !3930
  %cmp9 = icmp eq i64 %dec, 0, !dbg !5907
  br i1 %cmp9, label %if.else, label %cleanup.105, !dbg !5909

if.else:                                          ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call3, i64 0, i32 1, !dbg !5910
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5910, !tbaa !3875
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 4, !dbg !5910
  %4 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5910, !tbaa !3934
  call void %4(%struct._object* %call3) #3, !dbg !5910
  br label %cleanup.105

if.end.12:                                        ; preds = %if.end.6
  %ob_item = getelementptr inbounds %struct._object, %struct._object* %call3, i64 1, i32 1, !dbg !5912
  %arrayidx = bitcast %struct._typeobject** %ob_item to %struct._object**, !dbg !5912
  store %struct._object* %call7, %struct._object** %arrayidx, align 8, !dbg !5912, !tbaa !3870
  %arraydecay14 = getelementptr inbounds %struct.utsname, %struct.utsname* %u, i64 0, i32 1, i64 0, !dbg !5914
  %call15 = call %struct._object* @PyUnicode_DecodeFSDefault(i8* %arraydecay14) #3, !dbg !5914
  call void @llvm.dbg.value(metadata %struct._object* %call15, i64 0, metadata !1485, metadata !3839), !dbg !5914
  %tobool16 = icmp eq %struct._object* %call15, null, !dbg !5915
  br i1 %tobool16, label %do.body.18, label %if.end.30, !dbg !5914

do.body.18:                                       ; preds = %if.end.12
  call void @llvm.dbg.value(metadata %struct._object* %call3, i64 0, metadata !1487, metadata !3839), !dbg !5916
  %ob_refcnt20 = getelementptr inbounds %struct._object, %struct._object* %call3, i64 0, i32 0, !dbg !5918
  %5 = load i64, i64* %ob_refcnt20, align 8, !dbg !5918, !tbaa !3930
  %dec21 = add i64 %5, -1, !dbg !5918
  store i64 %dec21, i64* %ob_refcnt20, align 8, !dbg !5918, !tbaa !3930
  %cmp22 = icmp eq i64 %dec21, 0, !dbg !5918
  br i1 %cmp22, label %if.else.24, label %cleanup.105, !dbg !5920

if.else.24:                                       ; preds = %do.body.18
  %ob_type25 = getelementptr inbounds %struct._object, %struct._object* %call3, i64 0, i32 1, !dbg !5921
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type25, align 8, !dbg !5921, !tbaa !3875
  %tp_dealloc26 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i64 0, i32 4, !dbg !5921
  %7 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc26, align 8, !dbg !5921, !tbaa !3934
  call void %7(%struct._object* %call3) #3, !dbg !5921
  br label %cleanup.105

if.end.30:                                        ; preds = %if.end.12
  %arrayidx32 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 1, !dbg !5923
  %8 = bitcast %struct._typeobject** %arrayidx32 to %struct._object**, !dbg !5923
  store %struct._object* %call15, %struct._object** %8, align 8, !dbg !5923, !tbaa !3870
  %arraydecay37 = getelementptr inbounds %struct.utsname, %struct.utsname* %u, i64 0, i32 2, i64 0, !dbg !5925
  %call38 = call %struct._object* @PyUnicode_DecodeFSDefault(i8* %arraydecay37) #3, !dbg !5925
  call void @llvm.dbg.value(metadata %struct._object* %call38, i64 0, metadata !1491, metadata !3839), !dbg !5925
  %tobool39 = icmp eq %struct._object* %call38, null, !dbg !5926
  br i1 %tobool39, label %do.body.41, label %if.end.53, !dbg !5925

do.body.41:                                       ; preds = %if.end.30
  call void @llvm.dbg.value(metadata %struct._object* %call3, i64 0, metadata !1493, metadata !3839), !dbg !5927
  %ob_refcnt43 = getelementptr inbounds %struct._object, %struct._object* %call3, i64 0, i32 0, !dbg !5929
  %9 = load i64, i64* %ob_refcnt43, align 8, !dbg !5929, !tbaa !3930
  %dec44 = add i64 %9, -1, !dbg !5929
  store i64 %dec44, i64* %ob_refcnt43, align 8, !dbg !5929, !tbaa !3930
  %cmp45 = icmp eq i64 %dec44, 0, !dbg !5929
  br i1 %cmp45, label %if.else.47, label %cleanup.105, !dbg !5931

if.else.47:                                       ; preds = %do.body.41
  %ob_type48 = getelementptr inbounds %struct._object, %struct._object* %call3, i64 0, i32 1, !dbg !5932
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type48, align 8, !dbg !5932, !tbaa !3875
  %tp_dealloc49 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i64 0, i32 4, !dbg !5932
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc49, align 8, !dbg !5932, !tbaa !3934
  call void %11(%struct._object* %call3) #3, !dbg !5932
  br label %cleanup.105

if.end.53:                                        ; preds = %if.end.30
  %arrayidx55 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 2, !dbg !5934
  %12 = bitcast %struct._typeobject** %arrayidx55 to %struct._object**, !dbg !5934
  store %struct._object* %call38, %struct._object** %12, align 8, !dbg !5934, !tbaa !3870
  %arraydecay60 = getelementptr inbounds %struct.utsname, %struct.utsname* %u, i64 0, i32 3, i64 0, !dbg !5936
  %call61 = call %struct._object* @PyUnicode_DecodeFSDefault(i8* %arraydecay60) #3, !dbg !5936
  call void @llvm.dbg.value(metadata %struct._object* %call61, i64 0, metadata !1497, metadata !3839), !dbg !5936
  %tobool62 = icmp eq %struct._object* %call61, null, !dbg !5937
  br i1 %tobool62, label %do.body.64, label %if.end.76, !dbg !5936

do.body.64:                                       ; preds = %if.end.53
  call void @llvm.dbg.value(metadata %struct._object* %call3, i64 0, metadata !1499, metadata !3839), !dbg !5938
  %ob_refcnt66 = getelementptr inbounds %struct._object, %struct._object* %call3, i64 0, i32 0, !dbg !5940
  %13 = load i64, i64* %ob_refcnt66, align 8, !dbg !5940, !tbaa !3930
  %dec67 = add i64 %13, -1, !dbg !5940
  store i64 %dec67, i64* %ob_refcnt66, align 8, !dbg !5940, !tbaa !3930
  %cmp68 = icmp eq i64 %dec67, 0, !dbg !5940
  br i1 %cmp68, label %if.else.70, label %cleanup.105, !dbg !5942

if.else.70:                                       ; preds = %do.body.64
  %ob_type71 = getelementptr inbounds %struct._object, %struct._object* %call3, i64 0, i32 1, !dbg !5943
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type71, align 8, !dbg !5943, !tbaa !3875
  %tp_dealloc72 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i64 0, i32 4, !dbg !5943
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc72, align 8, !dbg !5943, !tbaa !3934
  call void %15(%struct._object* %call3) #3, !dbg !5943
  br label %cleanup.105

if.end.76:                                        ; preds = %if.end.53
  %arrayidx78 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 3, !dbg !5945
  %16 = bitcast %struct._typeobject** %arrayidx78 to %struct._object**, !dbg !5945
  store %struct._object* %call61, %struct._object** %16, align 8, !dbg !5945, !tbaa !3870
  %arraydecay83 = getelementptr inbounds %struct.utsname, %struct.utsname* %u, i64 0, i32 4, i64 0, !dbg !5947
  %call84 = call %struct._object* @PyUnicode_DecodeFSDefault(i8* %arraydecay83) #3, !dbg !5947
  call void @llvm.dbg.value(metadata %struct._object* %call84, i64 0, metadata !1503, metadata !3839), !dbg !5947
  %tobool85 = icmp eq %struct._object* %call84, null, !dbg !5948
  br i1 %tobool85, label %do.body.87, label %if.end.99, !dbg !5947

do.body.87:                                       ; preds = %if.end.76
  call void @llvm.dbg.value(metadata %struct._object* %call3, i64 0, metadata !1505, metadata !3839), !dbg !5949
  %ob_refcnt89 = getelementptr inbounds %struct._object, %struct._object* %call3, i64 0, i32 0, !dbg !5951
  %17 = load i64, i64* %ob_refcnt89, align 8, !dbg !5951, !tbaa !3930
  %dec90 = add i64 %17, -1, !dbg !5951
  store i64 %dec90, i64* %ob_refcnt89, align 8, !dbg !5951, !tbaa !3930
  %cmp91 = icmp eq i64 %dec90, 0, !dbg !5951
  br i1 %cmp91, label %if.else.93, label %cleanup.105, !dbg !5953

if.else.93:                                       ; preds = %do.body.87
  %ob_type94 = getelementptr inbounds %struct._object, %struct._object* %call3, i64 0, i32 1, !dbg !5954
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type94, align 8, !dbg !5954, !tbaa !3875
  %tp_dealloc95 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i64 0, i32 4, !dbg !5954
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc95, align 8, !dbg !5954, !tbaa !3934
  call void %19(%struct._object* %call3) #3, !dbg !5954
  br label %cleanup.105

if.end.99:                                        ; preds = %if.end.76
  %arrayidx101 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 4, !dbg !5956
  %20 = bitcast %struct._typeobject** %arrayidx101 to %struct._object**, !dbg !5956
  store %struct._object* %call84, %struct._object** %20, align 8, !dbg !5956, !tbaa !3870
  br label %cleanup.105, !dbg !5958

cleanup.105:                                      ; preds = %if.end.99, %do.body.87, %if.else.93, %do.body.64, %if.else.70, %do.body.41, %if.else.47, %do.body.18, %if.else.24, %do.body, %if.else, %if.end, %if.then
  %retval.5 = phi %struct._object* [ %call.i, %if.then ], [ null, %if.end ], [ null, %if.else ], [ null, %do.body ], [ null, %if.else.24 ], [ null, %do.body.18 ], [ null, %if.else.47 ], [ null, %do.body.41 ], [ null, %if.else.70 ], [ null, %do.body.64 ], [ %call3, %if.end.99 ], [ null, %do.body.87 ], [ null, %if.else.93 ]
  call void @llvm.lifetime.end(i64 390, i8* %0) #3, !dbg !5959
  ret %struct._object* %retval.5, !dbg !5959
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_unlink(%struct._object* nocapture readnone %self, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  %path = alloca %struct.path_t, align 8
  %dir_fd = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1511, metadata !3839), !dbg !5960
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1512, metadata !3839), !dbg !5961
  tail call void @llvm.dbg.value(metadata %struct._object* %kwargs, i64 0, metadata !1513, metadata !3839), !dbg !5962
  %0 = bitcast %struct.path_t* %path to i8*, !dbg !5963
  call void @llvm.lifetime.start(i64 72, i8* %0) #3, !dbg !5963
  %1 = bitcast i32* %dir_fd to i8*, !dbg !5964
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !5964
  tail call void @llvm.dbg.value(metadata i32 -100, i64 0, metadata !1515, metadata !3839), !dbg !5965
  store i32 -100, i32* %dir_fd, align 4, !dbg !5965, !tbaa !3890
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1517, metadata !3839), !dbg !5966
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 72, i32 8, i1 false), !dbg !5967
  %function_name = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 0, !dbg !5968
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.53, i64 0, i64 0), i8** %function_name, align 8, !dbg !5969, !tbaa !4743
  tail call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1514, metadata !3839), !dbg !5970
  tail call void @llvm.dbg.value(metadata i32* %dir_fd, i64 0, metadata !1515, metadata !3839), !dbg !5965
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %args, %struct._object* %kwargs, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.221, i64 0, i64 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @posix_unlink.keywords, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @path_converter, %struct.path_t* nonnull %path, i32 (%struct._object*, i8*)* nonnull @dir_fd_converter, i32* nonnull %dir_fd) #3, !dbg !5971
  %tobool = icmp eq i32 %call, 0, !dbg !5971
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5973

if.end:                                           ; preds = %entry
  %call1 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !5974
  call void @llvm.dbg.value(metadata %struct._ts* %call1, i64 0, metadata !1518, metadata !3839), !dbg !5974
  call void @llvm.dbg.value(metadata i32* %dir_fd, i64 0, metadata !1515, metadata !3839), !dbg !5965
  %2 = load i32, i32* %dir_fd, align 4, !dbg !5975, !tbaa !3890
  %cmp = icmp eq i32 %2, -100, !dbg !5977
  %narrow4 = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 5, !dbg !5978
  %3 = load i8*, i8** %narrow4, align 8, !dbg !5978, !tbaa !4761
  br i1 %cmp, label %if.else, label %if.then.2, !dbg !5979

if.then.2:                                        ; preds = %if.end
  %call3 = call i32 @unlinkat(i32 %2, i8* %3, i32 0) #3, !dbg !5980
  call void @llvm.dbg.value(metadata i32 %call3, i64 0, metadata !1516, metadata !3839), !dbg !5981
  br label %if.end.6, !dbg !5982

if.else:                                          ; preds = %if.end
  %call5 = call i32 @unlink(i8* %3) #3, !dbg !5983
  call void @llvm.dbg.value(metadata i32 %call5, i64 0, metadata !1516, metadata !3839), !dbg !5981
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.2
  %result.0 = phi i32 [ %call3, %if.then.2 ], [ %call5, %if.else ]
  call void @PyEval_RestoreThread(%struct._ts* %call1) #3, !dbg !5984
  %tobool7 = icmp eq i32 %result.0, 0, !dbg !5985
  br i1 %tobool7, label %if.end.10, label %if.then.8, !dbg !5987

if.then.8:                                        ; preds = %if.end.6
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1514, metadata !3839), !dbg !5970
  %path.idx = getelementptr %struct.path_t, %struct.path_t* %path, i64 0, i32 8
  %path.idx.val = load %struct._object*, %struct._object** %path.idx, align 8, !tbaa !4767
  %4 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !5988, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrnoWithFilenameObject(%struct._object* %4, %struct._object* %path.idx.val) #3, !dbg !5991
  call void @llvm.dbg.value(metadata %struct._object* %call.i, i64 0, metadata !1517, metadata !3839), !dbg !5966
  br label %exit, !dbg !5992

if.end.10:                                        ; preds = %if.end.6
  call void @llvm.dbg.value(metadata %struct._object* @_Py_NoneStruct, i64 0, metadata !1517, metadata !3839), !dbg !5966
  %5 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !5993, !tbaa !3930
  %inc = add i64 %5, 1, !dbg !5993
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !5993, !tbaa !3930
  br label %exit, !dbg !5993

exit:                                             ; preds = %if.end.10, %if.then.8
  %return_value.0 = phi %struct._object* [ %call.i, %if.then.8 ], [ @_Py_NoneStruct, %if.end.10 ]
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1514, metadata !3839), !dbg !5970
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1054, metadata !3839) #3, !dbg !5994
  %cleanup.i = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 9, !dbg !5996
  %6 = load %struct._object*, %struct._object** %cleanup.i, align 8, !dbg !5996, !tbaa !4634
  %tobool.i = icmp eq %struct._object* %6, null, !dbg !5997
  br i1 %tobool.i, label %cleanup, label %if.then.2.i, !dbg !5998

if.then.2.i:                                      ; preds = %exit
  call void @llvm.dbg.value(metadata %struct._object* %6, i64 0, metadata !1055, metadata !3839) #3, !dbg !5999
  store %struct._object* null, %struct._object** %cleanup.i, align 8, !dbg !6000, !tbaa !4634
  call void @llvm.dbg.value(metadata %struct._object* %6, i64 0, metadata !1059, metadata !3839) #3, !dbg !6001
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %6, i64 0, i32 0, !dbg !6002
  %7 = load i64, i64* %ob_refcnt.i, align 8, !dbg !6002, !tbaa !3930
  %dec.i = add i64 %7, -1, !dbg !6002
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !6002, !tbaa !3930
  %cmp5.i = icmp eq i64 %dec.i, 0, !dbg !6002
  br i1 %cmp5.i, label %if.else.i, label %cleanup, !dbg !6003

if.else.i:                                        ; preds = %if.then.2.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %6, i64 0, i32 1, !dbg !6004
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !6004, !tbaa !3875
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i64 0, i32 4, !dbg !6004
  %9 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !6004, !tbaa !3934
  call void %9(%struct._object* %6) #3, !dbg !6004
  br label %cleanup, !dbg !6005

cleanup:                                          ; preds = %if.else.i, %if.then.2.i, %exit, %entry
  %retval.0 = phi %struct._object* [ null, %entry ], [ %return_value.0, %exit ], [ %return_value.0, %if.then.2.i ], [ %return_value.0, %if.else.i ]
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !6006
  call void @llvm.lifetime.end(i64 72, i8* %0) #3, !dbg !6006
  ret %struct._object* %retval.0, !dbg !6006
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_utime(%struct._object* nocapture readnone %self, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  %ts.i = alloca [2 x %struct.timespec], align 16
  %path = alloca %struct.path_t, align 8
  %times = alloca %struct._object*, align 8
  %ns = alloca %struct._object*, align 8
  %dir_fd = alloca i32, align 4
  %follow_symlinks = alloca i32, align 4
  %keywords = alloca [6 x i8*], align 16
  %a_sec = alloca i64, align 8
  %m_sec = alloca i64, align 8
  %a_nsec = alloca i64, align 8
  %m_nsec = alloca i64, align 8
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1522, metadata !3839), !dbg !6007
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1523, metadata !3839), !dbg !6008
  tail call void @llvm.dbg.value(metadata %struct._object* %kwargs, i64 0, metadata !1524, metadata !3839), !dbg !6009
  %0 = bitcast %struct.path_t* %path to i8*, !dbg !6010
  call void @llvm.lifetime.start(i64 72, i8* %0) #3, !dbg !6010
  %1 = bitcast %struct._object** %times to i8*, !dbg !6011
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !6011
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1526, metadata !3839), !dbg !6012
  store %struct._object* null, %struct._object** %times, align 8, !dbg !6012, !tbaa !3870
  %2 = bitcast %struct._object** %ns to i8*, !dbg !6013
  call void @llvm.lifetime.start(i64 8, i8* %2) #3, !dbg !6013
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1527, metadata !3839), !dbg !6014
  store %struct._object* null, %struct._object** %ns, align 8, !dbg !6014, !tbaa !3870
  %3 = bitcast i32* %dir_fd to i8*, !dbg !6015
  call void @llvm.lifetime.start(i64 4, i8* %3) #3, !dbg !6015
  tail call void @llvm.dbg.value(metadata i32 -100, i64 0, metadata !1528, metadata !3839), !dbg !6016
  store i32 -100, i32* %dir_fd, align 4, !dbg !6016, !tbaa !3890
  %4 = bitcast i32* %follow_symlinks to i8*, !dbg !6017
  call void @llvm.lifetime.start(i64 4, i8* %4) #3, !dbg !6017
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !1529, metadata !3839), !dbg !6018
  store i32 1, i32* %follow_symlinks, align 4, !dbg !6018, !tbaa !3890
  %5 = bitcast [6 x i8*]* %keywords to i8*, !dbg !6019
  call void @llvm.lifetime.start(i64 48, i8* %5) #3, !dbg !6019
  tail call void @llvm.dbg.declare(metadata [6 x i8*]* %keywords, metadata !1530, metadata !3839), !dbg !6020
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 48, i32 16, i1 false), !dbg !6020
  %6 = getelementptr [6 x i8*], [6 x i8*]* %keywords, i64 0, i64 0, !dbg !6020
  %7 = bitcast [6 x i8*]* %keywords to <2 x i8*>*, !dbg !6020
  store <2 x i8*> <i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.169, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.56, i64 0, i64 0)>, <2 x i8*>* %7, align 16, !dbg !6020
  %8 = getelementptr [6 x i8*], [6 x i8*]* %keywords, i64 0, i64 2, !dbg !6020
  %9 = bitcast i8** %8 to <2 x i8*>*, !dbg !6020
  store <2 x i8*> <i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.222, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.170, i64 0, i64 0)>, <2 x i8*>* %9, align 16, !dbg !6020
  %10 = getelementptr [6 x i8*], [6 x i8*]* %keywords, i64 0, i64 4, !dbg !6020
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.171, i64 0, i64 0), i8** %10, align 16, !dbg !6020
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1544, metadata !3839), !dbg !6021
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 72, i32 8, i1 false), !dbg !6022
  %function_name = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 0, !dbg !6023
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i64 0, i64 0), i8** %function_name, align 8, !dbg !6024, !tbaa !4743
  %allow_fd = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 3, !dbg !6025
  store i32 1, i32* %allow_fd, align 4, !dbg !6026, !tbaa !4746
  tail call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1525, metadata !3839), !dbg !6027
  tail call void @llvm.dbg.value(metadata %struct._object** %times, i64 0, metadata !1526, metadata !3839), !dbg !6012
  tail call void @llvm.dbg.value(metadata %struct._object** %ns, i64 0, metadata !1527, metadata !3839), !dbg !6014
  tail call void @llvm.dbg.value(metadata i32* %dir_fd, i64 0, metadata !1528, metadata !3839), !dbg !6016
  tail call void @llvm.dbg.value(metadata i32* %follow_symlinks, i64 0, metadata !1529, metadata !3839), !dbg !6018
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %args, %struct._object* %kwargs, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.223, i64 0, i64 0), i8** %6, i32 (%struct._object*, i8*)* nonnull @path_converter, %struct.path_t* nonnull %path, %struct._object** nonnull %times, %struct._object** nonnull %ns, i32 (%struct._object*, i8*)* nonnull @dir_fd_converter, i32* nonnull %dir_fd, i32* nonnull %follow_symlinks) #3, !dbg !6028
  %tobool = icmp eq i32 %call, 0, !dbg !6028
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %ts.i, metadata !1576, metadata !3839), !dbg !6030
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %ts.i, metadata !1591, metadata !3839), !dbg !6033
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %ts.i, metadata !1599, metadata !3839), !dbg !6036
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %ts.i, metadata !1605, metadata !3839), !dbg !6039
  br i1 %tobool, label %cleanup.96, label %if.end, !dbg !6041

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct._object** %times, i64 0, metadata !1526, metadata !3839), !dbg !6012
  %11 = load %struct._object*, %struct._object** %times, align 8, !dbg !6042, !tbaa !3870
  %tobool1 = icmp ne %struct._object* %11, null, !dbg !6044
  %cmp = icmp ne %struct._object* %11, @_Py_NoneStruct, !dbg !6046
  %or.cond = and i1 %tobool1, %cmp, !dbg !6047
  call void @llvm.dbg.value(metadata %struct._object** %ns, i64 0, metadata !1527, metadata !3839), !dbg !6014
  %12 = load %struct._object*, %struct._object** %ns, align 8
  %tobool3 = icmp ne %struct._object* %12, null, !dbg !6048
  %or.cond105 = and i1 %or.cond, %tobool3, !dbg !6047
  br i1 %or.cond105, label %if.then.4, label %if.end.5, !dbg !6047

if.then.4:                                        ; preds = %if.end
  %13 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6050, !tbaa !3870
  call void @PyErr_SetString(%struct._object* %13, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.224, i64 0, i64 0)) #3, !dbg !6052
  br label %exit, !dbg !6053

if.end.5:                                         ; preds = %if.end
  br i1 %or.cond, label %if.then.9, label %if.else, !dbg !6054

if.then.9:                                        ; preds = %if.end.5
  %14 = bitcast i64* %a_sec to i8*, !dbg !6055
  call void @llvm.lifetime.start(i64 8, i8* %14) #3, !dbg !6055
  %15 = bitcast i64* %m_sec to i8*, !dbg !6055
  call void @llvm.lifetime.start(i64 8, i8* %15) #3, !dbg !6055
  %16 = bitcast i64* %a_nsec to i8*, !dbg !6056
  call void @llvm.lifetime.start(i64 8, i8* %16) #3, !dbg !6056
  %17 = bitcast i64* %m_nsec to i8*, !dbg !6056
  call void @llvm.lifetime.start(i64 8, i8* %17) #3, !dbg !6056
  call void @llvm.dbg.value(metadata %struct._object** %times, i64 0, metadata !1526, metadata !3839), !dbg !6012
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i64 0, i32 1, !dbg !6042
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6042, !tbaa !3875
  %cmp10 = icmp eq %struct._typeobject* %18, @PyTuple_Type, !dbg !6042
  br i1 %cmp10, label %lor.lhs.false, label %if.then.13, !dbg !6057

lor.lhs.false:                                    ; preds = %if.then.9
  %call11 = call i64 @PyTuple_Size(%struct._object* %11) #3, !dbg !6058
  %cmp12 = icmp eq i64 %call11, 2, !dbg !6059
  br i1 %cmp12, label %if.end.14, label %if.then.13, !dbg !6060

if.then.13:                                       ; preds = %lor.lhs.false, %if.then.9
  %19 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !6061, !tbaa !3870
  call void @PyErr_SetString(%struct._object* %19, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.225, i64 0, i64 0)) #3, !dbg !6063
  br label %cleanup.thread, !dbg !6064

if.end.14:                                        ; preds = %lor.lhs.false
  call void @llvm.dbg.value(metadata %struct._object** %times, i64 0, metadata !1526, metadata !3839), !dbg !6012
  %20 = bitcast %struct._object** %times to %struct.PyTupleObject**, !dbg !6065
  %21 = load %struct.PyTupleObject*, %struct.PyTupleObject** %20, align 8, !dbg !6065, !tbaa !3870
  %arrayidx = getelementptr %struct.PyTupleObject, %struct.PyTupleObject* %21, i64 0, i32 1, i64 0, !dbg !6065
  %22 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !6065, !tbaa !3870
  call void @llvm.dbg.value(metadata i64* %a_sec, i64 0, metadata !1545, metadata !3839), !dbg !6067
  call void @llvm.dbg.value(metadata i64* %a_nsec, i64 0, metadata !1549, metadata !3839), !dbg !6068
  %call15 = call i32 @_PyTime_ObjectToTimespec(%struct._object* %22, i64* nonnull %a_sec, i64* nonnull %a_nsec, i32 0) #3, !dbg !6069
  %cmp16 = icmp eq i32 %call15, -1, !dbg !6070
  br i1 %cmp16, label %cleanup.thread, label %lor.lhs.false.17, !dbg !6071

lor.lhs.false.17:                                 ; preds = %if.end.14
  call void @llvm.dbg.value(metadata %struct._object** %times, i64 0, metadata !1526, metadata !3839), !dbg !6012
  %23 = load %struct.PyTupleObject*, %struct.PyTupleObject** %20, align 8, !dbg !6072, !tbaa !3870
  %arrayidx19 = getelementptr %struct.PyTupleObject, %struct.PyTupleObject* %23, i64 0, i32 1, i64 1, !dbg !6072
  %24 = load %struct._object*, %struct._object** %arrayidx19, align 8, !dbg !6072, !tbaa !3870
  call void @llvm.dbg.value(metadata i64* %m_sec, i64 0, metadata !1548, metadata !3839), !dbg !6073
  call void @llvm.dbg.value(metadata i64* %m_nsec, i64 0, metadata !1550, metadata !3839), !dbg !6074
  %call20 = call i32 @_PyTime_ObjectToTimespec(%struct._object* %24, i64* nonnull %m_sec, i64* nonnull %m_nsec, i32 0) #3, !dbg !6075
  %cmp21 = icmp eq i32 %call20, -1, !dbg !6076
  br i1 %cmp21, label %cleanup.thread, label %cleanup, !dbg !6077

cleanup.thread:                                   ; preds = %if.then.13, %lor.lhs.false.17, %if.end.14
  call void @llvm.lifetime.end(i64 8, i8* %17) #3, !dbg !6078
  call void @llvm.lifetime.end(i64 8, i8* %16) #3, !dbg !6078
  call void @llvm.lifetime.end(i64 8, i8* %15) #3, !dbg !6078
  call void @llvm.lifetime.end(i64 8, i8* %14) #3, !dbg !6078
  br label %exit

cleanup:                                          ; preds = %lor.lhs.false.17
  call void @llvm.dbg.value(metadata i64* %a_sec, i64 0, metadata !1545, metadata !3839), !dbg !6067
  %25 = load i64, i64* %a_sec, align 8, !dbg !6080, !tbaa !4482
  call void @llvm.dbg.value(metadata i64* %a_nsec, i64 0, metadata !1549, metadata !3839), !dbg !6068
  %26 = load i64, i64* %a_nsec, align 8, !dbg !6081, !tbaa !4482
  call void @llvm.dbg.value(metadata i64* %m_sec, i64 0, metadata !1548, metadata !3839), !dbg !6073
  %27 = load i64, i64* %m_sec, align 8, !dbg !6082, !tbaa !4482
  call void @llvm.dbg.value(metadata i64* %m_nsec, i64 0, metadata !1550, metadata !3839), !dbg !6074
  %28 = load i64, i64* %m_nsec, align 8, !dbg !6083, !tbaa !4482
  call void @llvm.lifetime.end(i64 8, i8* %17) #3, !dbg !6078
  call void @llvm.lifetime.end(i64 8, i8* %16) #3, !dbg !6078
  call void @llvm.lifetime.end(i64 8, i8* %15) #3, !dbg !6078
  call void @llvm.lifetime.end(i64 8, i8* %14) #3, !dbg !6078
  br label %if.end.55

if.else:                                          ; preds = %if.end.5
  br i1 %tobool3, label %if.then.28, label %if.end.55, !dbg !6084

if.then.28:                                       ; preds = %if.else
  %ob_type29 = getelementptr inbounds %struct._object, %struct._object* %12, i64 0, i32 1, !dbg !6085
  %29 = load %struct._typeobject*, %struct._typeobject** %ob_type29, align 8, !dbg !6085, !tbaa !3875
  %cmp30 = icmp eq %struct._typeobject* %29, @PyTuple_Type, !dbg !6085
  br i1 %cmp30, label %lor.lhs.false.31, label %if.then.34, !dbg !6089

lor.lhs.false.31:                                 ; preds = %if.then.28
  %call32 = call i64 @PyTuple_Size(%struct._object* %12) #3, !dbg !6090
  %cmp33 = icmp eq i64 %call32, 2, !dbg !6091
  br i1 %cmp33, label %if.end.35, label %if.then.34, !dbg !6092

if.then.34:                                       ; preds = %lor.lhs.false.31, %if.then.28
  %30 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !6093, !tbaa !3870
  call void @PyErr_SetString(%struct._object* %30, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.226, i64 0, i64 0)) #3, !dbg !6095
  br label %exit, !dbg !6096

if.end.35:                                        ; preds = %lor.lhs.false.31
  call void @llvm.dbg.value(metadata %struct._object** %ns, i64 0, metadata !1527, metadata !3839), !dbg !6014
  %31 = bitcast %struct._object** %ns to %struct.PyTupleObject**, !dbg !6097
  %32 = load %struct.PyTupleObject*, %struct.PyTupleObject** %31, align 8, !dbg !6097, !tbaa !3870
  %arrayidx38 = getelementptr %struct.PyTupleObject, %struct.PyTupleObject* %32, i64 0, i32 1, i64 0, !dbg !6097
  %33 = load %struct._object*, %struct._object** %arrayidx38, align 8, !dbg !6097, !tbaa !3870
  call void @llvm.dbg.value(metadata %struct._object* %33, i64 0, metadata !1559, metadata !3839) #3, !dbg !6099
  call void @llvm.dbg.value(metadata i64* undef, i64 0, metadata !1560, metadata !3839) #3, !dbg !6101
  call void @llvm.dbg.value(metadata i64* undef, i64 0, metadata !1561, metadata !3839) #3, !dbg !6102
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1562, metadata !3839) #3, !dbg !6103
  %34 = load %struct._object*, %struct._object** @billion, align 8, !dbg !6104, !tbaa !3870
  %call.i = call %struct._object* @PyNumber_Divmod(%struct._object* %33, %struct._object* %34) #3, !dbg !6105
  call void @llvm.dbg.value(metadata %struct._object* %call.i, i64 0, metadata !1563, metadata !3839) #3, !dbg !6106
  %tobool.i = icmp eq %struct._object* %call.i, null, !dbg !6107
  br i1 %tobool.i, label %exit, label %if.end.i, !dbg !6109

if.end.i:                                         ; preds = %if.end.35
  %ob_item.i = getelementptr inbounds %struct._object, %struct._object* %call.i, i64 1, i32 1, !dbg !6110
  %arrayidx.i = bitcast %struct._typeobject** %ob_item.i to %struct._object**, !dbg !6110
  %35 = load %struct._object*, %struct._object** %arrayidx.i, align 8, !dbg !6110, !tbaa !3870
  %call1.i = call i64 @_PyLong_AsTime_t(%struct._object* %35) #3, !dbg !6111
  %cmp.i = icmp eq i64 %call1.i, -1, !dbg !6112
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end.5.i, !dbg !6114

land.lhs.true.i:                                  ; preds = %if.end.i
  %call2.i = call %struct._object* @PyErr_Occurred() #3, !dbg !6115
  %tobool3.i = icmp eq %struct._object* %call2.i, null, !dbg !6115
  br i1 %tobool3.i, label %if.end.5.i, label %do.body.17.i, !dbg !6117

if.end.5.i:                                       ; preds = %land.lhs.true.i, %if.end.i
  %arrayidx7.i = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item.i, i64 1, !dbg !6118
  %36 = bitcast %struct._typeobject** %arrayidx7.i to %struct._object**, !dbg !6118
  %37 = load %struct._object*, %struct._object** %36, align 8, !dbg !6118, !tbaa !3870
  %call8.i = call i64 @PyLong_AsLong(%struct._object* %37) #3, !dbg !6119
  %cmp9.i = icmp eq i64 %call8.i, -1, !dbg !6120
  br i1 %cmp9.i, label %land.lhs.true.10.i, label %if.end.14.i, !dbg !6122

land.lhs.true.10.i:                               ; preds = %if.end.5.i
  %call11.i = call %struct._object* @PyErr_Occurred() #3, !dbg !6123
  %tobool12.i = icmp eq %struct._object* %call11.i, null, !dbg !6123
  br i1 %tobool12.i, label %if.end.14.i, label %do.body.17.i, !dbg !6125

if.end.14.i:                                      ; preds = %land.lhs.true.10.i, %if.end.5.i
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !1562, metadata !3839) #3, !dbg !6103
  br label %do.body.17.i, !dbg !6126

do.body.17.i:                                     ; preds = %if.end.14.i, %land.lhs.true.10.i, %land.lhs.true.i
  %38 = phi i64 [ %call8.i, %if.end.14.i ], [ -1, %land.lhs.true.10.i ], [ 0, %land.lhs.true.i ]
  %result.0.ph.i = phi i32 [ 1, %if.end.14.i ], [ 0, %land.lhs.true.10.i ], [ 0, %land.lhs.true.i ], !dbg !6127
  call void @llvm.dbg.value(metadata %struct._object* %call.i, i64 0, metadata !1564, metadata !3839) #3, !dbg !6128
  call void @llvm.dbg.value(metadata %struct._object* %call.i, i64 0, metadata !1566, metadata !3839) #3, !dbg !6130
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %call.i, i64 0, i32 0, !dbg !6132
  %39 = load i64, i64* %ob_refcnt.i, align 8, !dbg !6132, !tbaa !3930
  %dec.i = add i64 %39, -1, !dbg !6132
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !6132, !tbaa !3930
  %cmp18.i = icmp eq i64 %dec.i, 0, !dbg !6132
  br i1 %cmp18.i, label %if.else.i, label %split_py_long_to_s_and_ns.exit, !dbg !6134

if.else.i:                                        ; preds = %do.body.17.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %call.i, i64 0, i32 1, !dbg !6135
  %40 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !6135, !tbaa !3875
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %40, i64 0, i32 4, !dbg !6135
  %41 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !6135, !tbaa !3934
  call void %41(%struct._object* %call.i) #3, !dbg !6135
  br label %split_py_long_to_s_and_ns.exit, !dbg !6127

split_py_long_to_s_and_ns.exit:                   ; preds = %do.body.17.i, %if.else.i
  %tobool42 = icmp eq i32 %result.0.ph.i, 0, !dbg !6127
  br i1 %tobool42, label %exit, label %lor.lhs.false.43, !dbg !6137

lor.lhs.false.43:                                 ; preds = %split_py_long_to_s_and_ns.exit
  call void @llvm.dbg.value(metadata %struct._object** %ns, i64 0, metadata !1527, metadata !3839), !dbg !6014
  %42 = load %struct.PyTupleObject*, %struct.PyTupleObject** %31, align 8, !dbg !6138, !tbaa !3870
  %arrayidx45 = getelementptr %struct.PyTupleObject, %struct.PyTupleObject* %42, i64 0, i32 1, i64 1, !dbg !6138
  %43 = load %struct._object*, %struct._object** %arrayidx45, align 8, !dbg !6138, !tbaa !3870
  call void @llvm.dbg.value(metadata %struct._object* %43, i64 0, metadata !1559, metadata !3839) #3, !dbg !6139
  call void @llvm.dbg.value(metadata i64* undef, i64 0, metadata !1560, metadata !3839) #3, !dbg !6141
  call void @llvm.dbg.value(metadata i64* undef, i64 0, metadata !1561, metadata !3839) #3, !dbg !6142
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1562, metadata !3839) #3, !dbg !6143
  %44 = load %struct._object*, %struct._object** @billion, align 8, !dbg !6144, !tbaa !3870
  %call.i.112 = call %struct._object* @PyNumber_Divmod(%struct._object* %43, %struct._object* %44) #3, !dbg !6145
  call void @llvm.dbg.value(metadata %struct._object* %call.i.112, i64 0, metadata !1563, metadata !3839) #3, !dbg !6146
  %tobool.i.113 = icmp eq %struct._object* %call.i.112, null, !dbg !6147
  br i1 %tobool.i.113, label %exit, label %if.end.i.118, !dbg !6148

if.end.i.118:                                     ; preds = %lor.lhs.false.43
  %ob_item.i.114 = getelementptr inbounds %struct._object, %struct._object* %call.i.112, i64 1, i32 1, !dbg !6149
  %arrayidx.i.115 = bitcast %struct._typeobject** %ob_item.i.114 to %struct._object**, !dbg !6149
  %45 = load %struct._object*, %struct._object** %arrayidx.i.115, align 8, !dbg !6149, !tbaa !3870
  %call1.i.116 = call i64 @_PyLong_AsTime_t(%struct._object* %45) #3, !dbg !6150
  %cmp.i.117 = icmp eq i64 %call1.i.116, -1, !dbg !6151
  br i1 %cmp.i.117, label %land.lhs.true.i.121, label %if.end.5.i.125, !dbg !6152

land.lhs.true.i.121:                              ; preds = %if.end.i.118
  %call2.i.119 = call %struct._object* @PyErr_Occurred() #3, !dbg !6153
  %tobool3.i.120 = icmp eq %struct._object* %call2.i.119, null, !dbg !6153
  br i1 %tobool3.i.120, label %if.end.5.i.125, label %do.body.17.i.134, !dbg !6154

if.end.5.i.125:                                   ; preds = %land.lhs.true.i.121, %if.end.i.118
  %arrayidx7.i.122 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item.i.114, i64 1, !dbg !6155
  %46 = bitcast %struct._typeobject** %arrayidx7.i.122 to %struct._object**, !dbg !6155
  %47 = load %struct._object*, %struct._object** %46, align 8, !dbg !6155, !tbaa !3870
  %call8.i.123 = call i64 @PyLong_AsLong(%struct._object* %47) #3, !dbg !6156
  %cmp9.i.124 = icmp eq i64 %call8.i.123, -1, !dbg !6157
  br i1 %cmp9.i.124, label %land.lhs.true.10.i.128, label %if.end.14.i.129, !dbg !6158

land.lhs.true.10.i.128:                           ; preds = %if.end.5.i.125
  %call11.i.126 = call %struct._object* @PyErr_Occurred() #3, !dbg !6159
  %tobool12.i.127 = icmp eq %struct._object* %call11.i.126, null, !dbg !6159
  br i1 %tobool12.i.127, label %if.end.14.i.129, label %do.body.17.i.134, !dbg !6160

if.end.14.i.129:                                  ; preds = %land.lhs.true.10.i.128, %if.end.5.i.125
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !1562, metadata !3839) #3, !dbg !6143
  br label %do.body.17.i.134, !dbg !6161

do.body.17.i.134:                                 ; preds = %if.end.14.i.129, %land.lhs.true.10.i.128, %land.lhs.true.i.121
  %utime.sroa.28.0.oldload237 = phi i64 [ %call8.i.123, %if.end.14.i.129 ], [ -1, %land.lhs.true.10.i.128 ], [ 0, %land.lhs.true.i.121 ]
  %result.0.ph.i.130 = phi i32 [ 1, %if.end.14.i.129 ], [ 0, %land.lhs.true.10.i.128 ], [ 0, %land.lhs.true.i.121 ], !dbg !6162
  call void @llvm.dbg.value(metadata %struct._object* %call.i.112, i64 0, metadata !1564, metadata !3839) #3, !dbg !6163
  call void @llvm.dbg.value(metadata %struct._object* %call.i.112, i64 0, metadata !1566, metadata !3839) #3, !dbg !6164
  %ob_refcnt.i.131 = getelementptr inbounds %struct._object, %struct._object* %call.i.112, i64 0, i32 0, !dbg !6165
  %48 = load i64, i64* %ob_refcnt.i.131, align 8, !dbg !6165, !tbaa !3930
  %dec.i.132 = add i64 %48, -1, !dbg !6165
  store i64 %dec.i.132, i64* %ob_refcnt.i.131, align 8, !dbg !6165, !tbaa !3930
  %cmp18.i.133 = icmp eq i64 %dec.i.132, 0, !dbg !6165
  br i1 %cmp18.i.133, label %if.else.i.137, label %split_py_long_to_s_and_ns.exit139, !dbg !6166

if.else.i.137:                                    ; preds = %do.body.17.i.134
  %ob_type.i.135 = getelementptr inbounds %struct._object, %struct._object* %call.i.112, i64 0, i32 1, !dbg !6167
  %49 = load %struct._typeobject*, %struct._typeobject** %ob_type.i.135, align 8, !dbg !6167, !tbaa !3875
  %tp_dealloc.i.136 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %49, i64 0, i32 4, !dbg !6167
  %50 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i.136, align 8, !dbg !6167, !tbaa !3934
  call void %50(%struct._object* %call.i.112) #3, !dbg !6167
  br label %split_py_long_to_s_and_ns.exit139, !dbg !6162

split_py_long_to_s_and_ns.exit139:                ; preds = %do.body.17.i.134, %if.else.i.137
  %tobool49 = icmp eq i32 %result.0.ph.i.130, 0, !dbg !6162
  br i1 %tobool49, label %exit, label %if.end.55, !dbg !6168

if.end.55:                                        ; preds = %if.else, %cleanup, %split_py_long_to_s_and_ns.exit139
  %utime.sroa.28.0.oldload235 = phi i64 [ %utime.sroa.28.0.oldload237, %split_py_long_to_s_and_ns.exit139 ], [ %28, %cleanup ], [ 0, %if.else ]
  %51 = phi i64 [ %call1.i.116, %split_py_long_to_s_and_ns.exit139 ], [ %27, %cleanup ], [ 0, %if.else ]
  %52 = phi i64 [ %38, %split_py_long_to_s_and_ns.exit139 ], [ %26, %cleanup ], [ 0, %if.else ]
  %53 = phi i64 [ %call1.i, %split_py_long_to_s_and_ns.exit139 ], [ %25, %cleanup ], [ 0, %if.else ]
  %54 = phi i32 [ 0, %split_py_long_to_s_and_ns.exit139 ], [ 0, %cleanup ], [ 1, %if.else ]
  call void @llvm.dbg.value(metadata i32* %dir_fd, i64 0, metadata !1528, metadata !3839), !dbg !6016
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1525, metadata !3839), !dbg !6027
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i64 0, i64 0), i64 0, metadata !932, metadata !3839) #3, !dbg !6169
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !933, metadata !3839) #3, !dbg !6172
  call void @llvm.dbg.value(metadata i32 %56, i64 0, metadata !934, metadata !3839) #3, !dbg !6173
  %narrow.i = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 5, !dbg !6174
  %55 = load i8*, i8** %narrow.i, align 8, !dbg !6174, !tbaa !4761
  %tobool.i.140 = icmp eq i8* %55, null, !dbg !6176
  %56 = load i32, i32* %dir_fd, align 4, !dbg !6177, !tbaa !3890
  br i1 %tobool.i.140, label %land.lhs.true.i.142, label %lor.lhs.false.58, !dbg !6178

land.lhs.true.i.142:                              ; preds = %if.end.55
  %wide.i = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 4, !dbg !6179
  %57 = load i32*, i32** %wide.i, align 8, !dbg !6179, !tbaa !5241
  %tobool1.i = icmp eq i32* %57, null, !dbg !6180
  %cmp.i.141 = icmp ne i32 %56, -100, !dbg !6181
  %or.cond.i = and i1 %cmp.i.141, %tobool1.i, !dbg !6182
  br i1 %or.cond.i, label %path_and_dir_fd_invalid.exit, label %lor.lhs.false.58, !dbg !6182

path_and_dir_fd_invalid.exit:                     ; preds = %land.lhs.true.i.142
  %58 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6183, !tbaa !3870
  %call.i.143 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %58, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.181, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i64 0, i64 0)) #3, !dbg !6185
  br label %exit, !dbg !6186

lor.lhs.false.58:                                 ; preds = %if.end.55, %land.lhs.true.i.142
  call void @llvm.dbg.value(metadata i32* %dir_fd, i64 0, metadata !1528, metadata !3839), !dbg !6016
  %fd = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 6, !dbg !6187
  %59 = load i32, i32* %fd, align 8, !dbg !6188, !tbaa !4754
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i64 0, i64 0), i64 0, metadata !939, metadata !3839) #3, !dbg !6189
  call void @llvm.dbg.value(metadata i32 %56, i64 0, metadata !940, metadata !3839) #3, !dbg !6191
  call void @llvm.dbg.value(metadata i32 %59, i64 0, metadata !941, metadata !3839) #3, !dbg !6192
  %cmp.i.144 = icmp ne i32 %56, -100, !dbg !6193
  %cmp1.i = icmp ne i32 %59, -1, !dbg !6194
  %or.cond.i.145 = and i1 %cmp.i.144, %cmp1.i, !dbg !6195
  br i1 %or.cond.i.145, label %dir_fd_and_fd_invalid.exit, label %lor.lhs.false.61, !dbg !6195

dir_fd_and_fd_invalid.exit:                       ; preds = %lor.lhs.false.58
  %60 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6196, !tbaa !3870
  %call.i.146 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %60, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.182, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i64 0, i64 0)) #3, !dbg !6197
  br label %exit, !dbg !6198

lor.lhs.false.61:                                 ; preds = %lor.lhs.false.58
  call void @llvm.dbg.value(metadata i32* %follow_symlinks, i64 0, metadata !1529, metadata !3839), !dbg !6018
  %61 = load i32, i32* %follow_symlinks, align 4, !dbg !6199, !tbaa !3890
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i64 0, i64 0), i64 0, metadata !944, metadata !3839) #3, !dbg !6200
  call void @llvm.dbg.value(metadata i32 %59, i64 0, metadata !945, metadata !3839) #3, !dbg !6202
  call void @llvm.dbg.value(metadata i32 %61, i64 0, metadata !946, metadata !3839) #3, !dbg !6203
  %cmp.i.149 = icmp slt i32 %59, 1, !dbg !6204
  %tobool.i.150 = icmp ne i32 %61, 0, !dbg !6205
  %or.cond.i.151 = or i1 %cmp.i.149, %tobool.i.150, !dbg !6206
  br i1 %or.cond.i.151, label %if.end.66, label %fd_and_follow_symlinks_invalid.exit, !dbg !6206

fd_and_follow_symlinks_invalid.exit:              ; preds = %lor.lhs.false.61
  %62 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6207, !tbaa !3870
  %call.i.152 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %62, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.183, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i64 0, i64 0)) #3, !dbg !6208
  br label %exit, !dbg !6209

if.end.66:                                        ; preds = %lor.lhs.false.61
  %call67 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !6210
  call void @llvm.dbg.value(metadata %struct._ts* %call67, i64 0, metadata !1551, metadata !3839), !dbg !6210
  call void @llvm.dbg.value(metadata i32* %follow_symlinks, i64 0, metadata !1529, metadata !3839), !dbg !6018
  %63 = load i32, i32* %follow_symlinks, align 4, !dbg !6211, !tbaa !3890
  %tobool68 = icmp eq i32 %63, 0, !dbg !6211
  call void @llvm.dbg.value(metadata i32* %dir_fd, i64 0, metadata !1528, metadata !3839), !dbg !6016
  %64 = load i32, i32* %dir_fd, align 4
  %cmp70 = icmp eq i32 %64, -100, !dbg !6212
  %or.cond107 = and i1 %tobool68, %cmp70, !dbg !6213
  br i1 %or.cond107, label %if.then.71, label %if.else.73, !dbg !6213

if.then.71:                                       ; preds = %if.end.66
  %65 = load i8*, i8** %narrow.i, align 8, !dbg !6214, !tbaa !4761
  call void @llvm.dbg.value(metadata %struct.utime_t* undef, i64 0, metadata !1534, metadata !3839), !dbg !6215
  call void @llvm.dbg.value(metadata %struct.utime_t* undef, i64 0, metadata !1574, metadata !3839) #3, !dbg !6216
  call void @llvm.dbg.value(metadata i8* %65, i64 0, metadata !1575, metadata !3839) #3, !dbg !6217
  %66 = bitcast [2 x %struct.timespec]* %ts.i to i8*, !dbg !6030
  call void @llvm.lifetime.start(i64 32, i8* %66) #3, !dbg !6030
  %tobool.i.155 = icmp eq i32 %54, 0, !dbg !6218
  br i1 %tobool.i.155, label %if.else.i.156, label %utime_nofollow_symlinks.exit, !dbg !6030

if.else.i.156:                                    ; preds = %if.then.71
  %tv_sec.i = getelementptr [2 x %struct.timespec], [2 x %struct.timespec]* %ts.i, i64 0, i64 0, i32 0, !dbg !6220
  store i64 %53, i64* %tv_sec.i, align 16, !dbg !6220, !tbaa !6223
  %tv_nsec.i = getelementptr [2 x %struct.timespec], [2 x %struct.timespec]* %ts.i, i64 0, i64 0, i32 1, !dbg !6220
  store i64 %52, i64* %tv_nsec.i, align 8, !dbg !6220, !tbaa !6225
  %tv_sec3.i = getelementptr [2 x %struct.timespec], [2 x %struct.timespec]* %ts.i, i64 0, i64 1, i32 0, !dbg !6220
  store i64 %51, i64* %tv_sec3.i, align 16, !dbg !6220, !tbaa !6223
  %tv_nsec5.i = getelementptr [2 x %struct.timespec], [2 x %struct.timespec]* %ts.i, i64 0, i64 1, i32 1, !dbg !6220
  store i64 %utime.sroa.28.0.oldload235, i64* %tv_nsec5.i, align 8, !dbg !6220, !tbaa !6225
  %arraydecay.i = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %ts.i, i64 0, i64 0, !dbg !6220
  call void @llvm.dbg.value(metadata %struct.timespec* %arraydecay.i, i64 0, metadata !1580, metadata !3839) #3, !dbg !6030
  br label %utime_nofollow_symlinks.exit, !dbg !6226

utime_nofollow_symlinks.exit:                     ; preds = %if.then.71, %if.else.i.156
  %time.0.i = phi %struct.timespec* [ %arraydecay.i, %if.else.i.156 ], [ null, %if.then.71 ], !dbg !6226
  %call.i.157 = call i32 @utimensat(i32 -100, i8* %65, %struct.timespec* %time.0.i, i32 256) #3, !dbg !6227
  call void @llvm.lifetime.end(i64 32, i8* %66) #3, !dbg !6228
  call void @llvm.dbg.value(metadata i32 %call.i.157, i64 0, metadata !1543, metadata !3839), !dbg !6229
  br label %if.end.91, !dbg !6230

if.else.73:                                       ; preds = %if.end.66
  %tobool76 = icmp ne i32 %63, 0, !dbg !6231
  %or.cond108 = and i1 %tobool76, %cmp70, !dbg !6233
  br i1 %or.cond108, label %if.else.80, label %if.then.77, !dbg !6233

if.then.77:                                       ; preds = %if.else.73
  %67 = load i8*, i8** %narrow.i, align 8, !dbg !6234, !tbaa !4761
  call void @llvm.dbg.value(metadata %struct.utime_t* undef, i64 0, metadata !1534, metadata !3839), !dbg !6215
  call void @llvm.dbg.value(metadata %struct.utime_t* undef, i64 0, metadata !1586, metadata !3839) #3, !dbg !6235
  call void @llvm.dbg.value(metadata i32 %64, i64 0, metadata !1587, metadata !3839) #3, !dbg !6236
  call void @llvm.dbg.value(metadata i8* %67, i64 0, metadata !1588, metadata !3839) #3, !dbg !6237
  call void @llvm.dbg.value(metadata i32 %63, i64 0, metadata !1589, metadata !3839) #3, !dbg !6238
  %cond.i = select i1 %tobool76, i32 0, i32 256, !dbg !6239
  call void @llvm.dbg.value(metadata i32 %cond.i, i64 0, metadata !1590, metadata !3839) #3, !dbg !6240
  %68 = bitcast [2 x %struct.timespec]* %ts.i to i8*, !dbg !6033
  call void @llvm.lifetime.start(i64 32, i8* %68) #3, !dbg !6033
  %tobool1.i.162 = icmp eq i32 %54, 0, !dbg !6241
  br i1 %tobool1.i.162, label %if.else.i.170, label %utime_dir_fd.exit, !dbg !6033

if.else.i.170:                                    ; preds = %if.then.77
  %tv_sec.i.164 = getelementptr [2 x %struct.timespec], [2 x %struct.timespec]* %ts.i, i64 0, i64 0, i32 0, !dbg !6243
  store i64 %53, i64* %tv_sec.i.164, align 16, !dbg !6243, !tbaa !6223
  %tv_nsec.i.166 = getelementptr [2 x %struct.timespec], [2 x %struct.timespec]* %ts.i, i64 0, i64 0, i32 1, !dbg !6243
  store i64 %52, i64* %tv_nsec.i.166, align 8, !dbg !6243, !tbaa !6225
  %tv_sec4.i = getelementptr [2 x %struct.timespec], [2 x %struct.timespec]* %ts.i, i64 0, i64 1, i32 0, !dbg !6243
  store i64 %51, i64* %tv_sec4.i, align 16, !dbg !6243, !tbaa !6223
  %tv_nsec6.i = getelementptr [2 x %struct.timespec], [2 x %struct.timespec]* %ts.i, i64 0, i64 1, i32 1, !dbg !6243
  store i64 %utime.sroa.28.0.oldload235, i64* %tv_nsec6.i, align 8, !dbg !6243, !tbaa !6225
  %arraydecay.i.169 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %ts.i, i64 0, i64 0, !dbg !6243
  call void @llvm.dbg.value(metadata %struct.timespec* %arraydecay.i.169, i64 0, metadata !1592, metadata !3839) #3, !dbg !6033
  br label %utime_dir_fd.exit, !dbg !6246

utime_dir_fd.exit:                                ; preds = %if.then.77, %if.else.i.170
  %time.0.i.171 = phi %struct.timespec* [ %arraydecay.i.169, %if.else.i.170 ], [ null, %if.then.77 ], !dbg !6246
  %call.i.172 = call i32 @utimensat(i32 %64, i8* %67, %struct.timespec* %time.0.i.171, i32 %cond.i) #3, !dbg !6247
  call void @llvm.lifetime.end(i64 32, i8* %68) #3, !dbg !6248
  call void @llvm.dbg.value(metadata i32 %call.i.172, i64 0, metadata !1543, metadata !3839), !dbg !6229
  br label %if.end.91, !dbg !6249

if.else.80:                                       ; preds = %if.else.73
  %69 = load i32, i32* %fd, align 8, !dbg !6250, !tbaa !4754
  %cmp82 = icmp eq i32 %69, -1, !dbg !6251
  br i1 %cmp82, label %if.else.86, label %if.then.83, !dbg !6252

if.then.83:                                       ; preds = %if.else.80
  call void @llvm.dbg.value(metadata %struct.utime_t* undef, i64 0, metadata !1534, metadata !3839), !dbg !6215
  call void @llvm.dbg.value(metadata %struct.utime_t* undef, i64 0, metadata !1597, metadata !3839) #3, !dbg !6253
  call void @llvm.dbg.value(metadata i32 %69, i64 0, metadata !1598, metadata !3839) #3, !dbg !6254
  %70 = bitcast [2 x %struct.timespec]* %ts.i to i8*, !dbg !6036
  call void @llvm.lifetime.start(i64 32, i8* %70) #3, !dbg !6036
  %tobool.i.176 = icmp eq i32 %54, 0, !dbg !6255
  br i1 %tobool.i.176, label %if.else.i.186, label %utime_fd.exit, !dbg !6036

if.else.i.186:                                    ; preds = %if.then.83
  %tv_sec.i.178 = getelementptr [2 x %struct.timespec], [2 x %struct.timespec]* %ts.i, i64 0, i64 0, i32 0, !dbg !6257
  store i64 %53, i64* %tv_sec.i.178, align 16, !dbg !6257, !tbaa !6223
  %tv_nsec.i.180 = getelementptr [2 x %struct.timespec], [2 x %struct.timespec]* %ts.i, i64 0, i64 0, i32 1, !dbg !6257
  store i64 %52, i64* %tv_nsec.i.180, align 8, !dbg !6257, !tbaa !6225
  %tv_sec3.i.182 = getelementptr [2 x %struct.timespec], [2 x %struct.timespec]* %ts.i, i64 0, i64 1, i32 0, !dbg !6257
  store i64 %51, i64* %tv_sec3.i.182, align 16, !dbg !6257, !tbaa !6223
  %tv_nsec5.i.184 = getelementptr [2 x %struct.timespec], [2 x %struct.timespec]* %ts.i, i64 0, i64 1, i32 1, !dbg !6257
  store i64 %utime.sroa.28.0.oldload235, i64* %tv_nsec5.i.184, align 8, !dbg !6257, !tbaa !6225
  %arraydecay.i.185 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %ts.i, i64 0, i64 0, !dbg !6257
  call void @llvm.dbg.value(metadata %struct.timespec* %arraydecay.i.185, i64 0, metadata !1600, metadata !3839) #3, !dbg !6036
  br label %utime_fd.exit, !dbg !6260

utime_fd.exit:                                    ; preds = %if.then.83, %if.else.i.186
  %time.0.i.187 = phi %struct.timespec* [ %arraydecay.i.185, %if.else.i.186 ], [ null, %if.then.83 ], !dbg !6260
  %call.i.188 = call i32 @futimens(i32 %69, %struct.timespec* %time.0.i.187) #3, !dbg !6261
  call void @llvm.lifetime.end(i64 32, i8* %70) #3, !dbg !6262
  call void @llvm.dbg.value(metadata i32 %call.i.188, i64 0, metadata !1543, metadata !3839), !dbg !6229
  br label %if.end.91, !dbg !6263

if.else.86:                                       ; preds = %if.else.80
  %71 = load i8*, i8** %narrow.i, align 8, !dbg !6264, !tbaa !4761
  call void @llvm.dbg.value(metadata %struct.utime_t* undef, i64 0, metadata !1534, metadata !3839), !dbg !6215
  call void @llvm.dbg.value(metadata %struct.utime_t* undef, i64 0, metadata !1603, metadata !3839) #3, !dbg !6265
  call void @llvm.dbg.value(metadata i8* %71, i64 0, metadata !1604, metadata !3839) #3, !dbg !6266
  %72 = bitcast [2 x %struct.timespec]* %ts.i to i8*, !dbg !6039
  call void @llvm.lifetime.start(i64 32, i8* %72) #3, !dbg !6039
  %tobool.i.192 = icmp eq i32 %54, 0, !dbg !6267
  br i1 %tobool.i.192, label %if.else.i.202, label %utime_default.exit, !dbg !6039

if.else.i.202:                                    ; preds = %if.else.86
  %tv_sec.i.194 = getelementptr [2 x %struct.timespec], [2 x %struct.timespec]* %ts.i, i64 0, i64 0, i32 0, !dbg !6269
  store i64 %53, i64* %tv_sec.i.194, align 16, !dbg !6269, !tbaa !6223
  %tv_nsec.i.196 = getelementptr [2 x %struct.timespec], [2 x %struct.timespec]* %ts.i, i64 0, i64 0, i32 1, !dbg !6269
  store i64 %52, i64* %tv_nsec.i.196, align 8, !dbg !6269, !tbaa !6225
  %tv_sec3.i.198 = getelementptr [2 x %struct.timespec], [2 x %struct.timespec]* %ts.i, i64 0, i64 1, i32 0, !dbg !6269
  store i64 %51, i64* %tv_sec3.i.198, align 16, !dbg !6269, !tbaa !6223
  %tv_nsec5.i.200 = getelementptr [2 x %struct.timespec], [2 x %struct.timespec]* %ts.i, i64 0, i64 1, i32 1, !dbg !6269
  store i64 %utime.sroa.28.0.oldload235, i64* %tv_nsec5.i.200, align 8, !dbg !6269, !tbaa !6225
  %arraydecay.i.201 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %ts.i, i64 0, i64 0, !dbg !6269
  call void @llvm.dbg.value(metadata %struct.timespec* %arraydecay.i.201, i64 0, metadata !1606, metadata !3839) #3, !dbg !6039
  br label %utime_default.exit, !dbg !6272

utime_default.exit:                               ; preds = %if.else.86, %if.else.i.202
  %time.0.i.203 = phi %struct.timespec* [ %arraydecay.i.201, %if.else.i.202 ], [ null, %if.else.86 ], !dbg !6272
  %call.i.204 = call i32 @utimensat(i32 -100, i8* %71, %struct.timespec* %time.0.i.203, i32 0) #3, !dbg !6273
  call void @llvm.lifetime.end(i64 32, i8* %72) #3, !dbg !6274
  call void @llvm.dbg.value(metadata i32 %call.i.204, i64 0, metadata !1543, metadata !3839), !dbg !6229
  br label %if.end.91

if.end.91:                                        ; preds = %utime_dir_fd.exit, %utime_default.exit, %utime_fd.exit, %utime_nofollow_symlinks.exit
  %result.0 = phi i32 [ %call.i.157, %utime_nofollow_symlinks.exit ], [ %call.i.188, %utime_fd.exit ], [ %call.i.204, %utime_default.exit ], [ %call.i.172, %utime_dir_fd.exit ]
  call void @PyEval_RestoreThread(%struct._ts* %call67) #3, !dbg !6275
  %cmp92 = icmp slt i32 %result.0, 0, !dbg !6276
  br i1 %cmp92, label %if.then.93, label %if.end.95, !dbg !6278

if.then.93:                                       ; preds = %if.end.91
  %73 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !6279, !tbaa !3870
  %call.i.206 = call %struct._object* @PyErr_SetFromErrno(%struct._object* %73) #3, !dbg !6282
  call void @llvm.dbg.value(metadata %struct._object* %call.i.206, i64 0, metadata !1544, metadata !3839), !dbg !6021
  br label %exit, !dbg !6283

if.end.95:                                        ; preds = %if.end.91
  %74 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !6284, !tbaa !3930
  %inc = add i64 %74, 1, !dbg !6284
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !6284, !tbaa !3930
  call void @llvm.dbg.value(metadata %struct._object* @_Py_NoneStruct, i64 0, metadata !1544, metadata !3839), !dbg !6021
  br label %exit, !dbg !6285

exit:                                             ; preds = %lor.lhs.false.43, %if.end.35, %fd_and_follow_symlinks_invalid.exit, %dir_fd_and_fd_invalid.exit, %path_and_dir_fd_invalid.exit, %cleanup.thread, %split_py_long_to_s_and_ns.exit139, %split_py_long_to_s_and_ns.exit, %if.end.95, %if.then.93, %if.then.34, %if.then.4
  %return_value.0 = phi %struct._object* [ null, %if.then.4 ], [ null, %path_and_dir_fd_invalid.exit ], [ null, %dir_fd_and_fd_invalid.exit ], [ null, %fd_and_follow_symlinks_invalid.exit ], [ %call.i.206, %if.then.93 ], [ @_Py_NoneStruct, %if.end.95 ], [ null, %if.then.34 ], [ null, %split_py_long_to_s_and_ns.exit139 ], [ null, %split_py_long_to_s_and_ns.exit ], [ null, %cleanup.thread ], [ null, %if.end.35 ], [ null, %lor.lhs.false.43 ]
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1525, metadata !3839), !dbg !6027
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1054, metadata !3839) #3, !dbg !6286
  %cleanup.i = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 9, !dbg !6288
  %75 = load %struct._object*, %struct._object** %cleanup.i, align 8, !dbg !6288, !tbaa !4634
  %tobool.i.207 = icmp eq %struct._object* %75, null, !dbg !6289
  br i1 %tobool.i.207, label %cleanup.96, label %if.then.2.i, !dbg !6290

if.then.2.i:                                      ; preds = %exit
  call void @llvm.dbg.value(metadata %struct._object* %75, i64 0, metadata !1055, metadata !3839) #3, !dbg !6291
  store %struct._object* null, %struct._object** %cleanup.i, align 8, !dbg !6292, !tbaa !4634
  call void @llvm.dbg.value(metadata %struct._object* %75, i64 0, metadata !1059, metadata !3839) #3, !dbg !6293
  %ob_refcnt.i.208 = getelementptr inbounds %struct._object, %struct._object* %75, i64 0, i32 0, !dbg !6294
  %76 = load i64, i64* %ob_refcnt.i.208, align 8, !dbg !6294, !tbaa !3930
  %dec.i.209 = add i64 %76, -1, !dbg !6294
  store i64 %dec.i.209, i64* %ob_refcnt.i.208, align 8, !dbg !6294, !tbaa !3930
  %cmp5.i = icmp eq i64 %dec.i.209, 0, !dbg !6294
  br i1 %cmp5.i, label %if.else.i.212, label %cleanup.96, !dbg !6295

if.else.i.212:                                    ; preds = %if.then.2.i
  %ob_type.i.210 = getelementptr inbounds %struct._object, %struct._object* %75, i64 0, i32 1, !dbg !6296
  %77 = load %struct._typeobject*, %struct._typeobject** %ob_type.i.210, align 8, !dbg !6296, !tbaa !3875
  %tp_dealloc.i.211 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %77, i64 0, i32 4, !dbg !6296
  %78 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i.211, align 8, !dbg !6296, !tbaa !3934
  call void %78(%struct._object* %75) #3, !dbg !6296
  br label %cleanup.96, !dbg !6297

cleanup.96:                                       ; preds = %if.else.i.212, %if.then.2.i, %exit, %entry
  %retval.0 = phi %struct._object* [ null, %entry ], [ %return_value.0, %exit ], [ %return_value.0, %if.then.2.i ], [ %return_value.0, %if.else.i.212 ]
  call void @llvm.lifetime.end(i64 48, i8* %5) #3, !dbg !6298
  call void @llvm.lifetime.end(i64 4, i8* %4) #3, !dbg !6298
  call void @llvm.lifetime.end(i64 4, i8* %3) #3, !dbg !6298
  call void @llvm.lifetime.end(i64 8, i8* %2) #3, !dbg !6298
  call void @llvm.lifetime.end(i64 8, i8* %1) #3, !dbg !6298
  call void @llvm.lifetime.end(i64 72, i8* %0) #3, !dbg !6298
  ret %struct._object* %retval.0, !dbg !6298
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_times(%struct._object* nocapture readnone %self, %struct._object* nocapture readnone %noargs) #0 {
entry:
  %t = alloca %struct.tms, align 8
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1609, metadata !3839), !dbg !6299
  tail call void @llvm.dbg.value(metadata %struct._object* %noargs, i64 0, metadata !1610, metadata !3839), !dbg !6300
  %0 = bitcast %struct.tms* %t to i8*, !dbg !6301
  call void @llvm.lifetime.start(i64 32, i8* %0) #3, !dbg !6301
  %call = tail call i32* @__errno_location() #1, !dbg !6302
  store i32 0, i32* %call, align 4, !dbg !6303, !tbaa !3890
  tail call void @llvm.dbg.value(metadata %struct.tms* %t, i64 0, metadata !1611, metadata !3839), !dbg !6304
  %call1 = call i64 @times(%struct.tms* nonnull %t) #3, !dbg !6305
  tail call void @llvm.dbg.value(metadata i64 %call1, i64 0, metadata !1619, metadata !3839), !dbg !6306
  %cmp = icmp eq i64 %call1, -1, !dbg !6307
  br i1 %cmp, label %if.then, label %if.end, !dbg !6309

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !6310, !tbaa !3870
  %call.i = tail call %struct._object* @PyErr_SetFromErrno(%struct._object* %1) #3, !dbg !6312
  br label %cleanup, !dbg !6313

if.end:                                           ; preds = %entry
  %tms_utime = getelementptr inbounds %struct.tms, %struct.tms* %t, i64 0, i32 0, !dbg !6314
  %2 = load i64, i64* %tms_utime, align 8, !dbg !6314, !tbaa !6315
  %3 = load i64, i64* @ticks_per_second, align 8, !dbg !6317, !tbaa !4482
  %conv3 = sitofp i64 %3 to double, !dbg !6317
  %tms_stime = getelementptr inbounds %struct.tms, %struct.tms* %t, i64 0, i32 1, !dbg !6318
  %4 = load i64, i64* %tms_stime, align 8, !dbg !6318, !tbaa !6319
  %conv4 = sitofp i64 %4 to double, !dbg !6320
  %div6 = fdiv double %conv4, %conv3, !dbg !6321
  %tms_cutime = getelementptr inbounds %struct.tms, %struct.tms* %t, i64 0, i32 2, !dbg !6322
  %5 = load i64, i64* %tms_cutime, align 8, !dbg !6322, !tbaa !6323
  %conv7 = sitofp i64 %5 to double, !dbg !6324
  %div9 = fdiv double %conv7, %conv3, !dbg !6325
  %tms_cstime = getelementptr inbounds %struct.tms, %struct.tms* %t, i64 0, i32 3, !dbg !6326
  %6 = load i64, i64* %tms_cstime, align 8, !dbg !6326, !tbaa !6327
  %conv10 = sitofp i64 %6 to double, !dbg !6328
  %div12 = fdiv double %conv10, %conv3, !dbg !6329
  %conv13 = sitofp i64 %call1 to double, !dbg !6330
  %div15 = fdiv double %conv13, %conv3, !dbg !6331
  tail call void @llvm.dbg.value(metadata double %div, i64 0, metadata !1624, metadata !3839) #3, !dbg !6332
  tail call void @llvm.dbg.value(metadata double %div6, i64 0, metadata !1625, metadata !3839) #3, !dbg !6334
  tail call void @llvm.dbg.value(metadata double %div9, i64 0, metadata !1626, metadata !3839) #3, !dbg !6335
  tail call void @llvm.dbg.value(metadata double %div12, i64 0, metadata !1627, metadata !3839) #3, !dbg !6336
  tail call void @llvm.dbg.value(metadata double %div15, i64 0, metadata !1628, metadata !3839) #3, !dbg !6337
  %call.i.20 = tail call %struct._object* @PyStructSequence_New(%struct._typeobject* nonnull @TimesResultType) #3, !dbg !6338
  tail call void @llvm.dbg.value(metadata %struct._object* %call.i.20, i64 0, metadata !1629, metadata !3839) #3, !dbg !6339
  %cmp.i = icmp eq %struct._object* %call.i.20, null, !dbg !6340
  br i1 %cmp.i, label %cleanup, label %if.end.i, !dbg !6342

if.end.i:                                         ; preds = %if.end
  %conv = sitofp i64 %2 to double, !dbg !6343
  %div = fdiv double %conv, %conv3, !dbg !6344
  %call1.i = tail call %struct._object* @PyFloat_FromDouble(double %div) #3, !dbg !6345
  tail call void @llvm.dbg.value(metadata %struct._object* %call1.i, i64 0, metadata !1630, metadata !3839) #3, !dbg !6345
  %tobool.i = icmp eq %struct._object* %call1.i, null, !dbg !6346
  br i1 %tobool.i, label %do.body.i, label %if.end.6.i, !dbg !6345

do.body.i:                                        ; preds = %if.end.i
  tail call void @llvm.dbg.value(metadata %struct._object* %call.i.20, i64 0, metadata !1632, metadata !3839) #3, !dbg !6347
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %call.i.20, i64 0, i32 0, !dbg !6349
  %7 = load i64, i64* %ob_refcnt.i, align 8, !dbg !6349, !tbaa !3930
  %dec.i = add i64 %7, -1, !dbg !6349
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !6349, !tbaa !3930
  %cmp3.i = icmp eq i64 %dec.i, 0, !dbg !6349
  br i1 %cmp3.i, label %if.else.i, label %cleanup, !dbg !6351

if.else.i:                                        ; preds = %do.body.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %call.i.20, i64 0, i32 1, !dbg !6352
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !6352, !tbaa !3875
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i64 0, i32 4, !dbg !6352
  %9 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !6352, !tbaa !3934
  tail call void %9(%struct._object* %call.i.20) #3, !dbg !6352
  br label %cleanup, !dbg !6354

if.end.6.i:                                       ; preds = %if.end.i
  %ob_item.i = getelementptr inbounds %struct._object, %struct._object* %call.i.20, i64 1, i32 1, !dbg !6355
  %arrayidx.i = bitcast %struct._typeobject** %ob_item.i to %struct._object**, !dbg !6355
  store %struct._object* %call1.i, %struct._object** %arrayidx.i, align 8, !dbg !6355, !tbaa !3870
  %call8.i = tail call %struct._object* @PyFloat_FromDouble(double %div6) #3, !dbg !6357
  tail call void @llvm.dbg.value(metadata %struct._object* %call8.i, i64 0, metadata !1636, metadata !3839) #3, !dbg !6357
  %tobool9.i = icmp eq %struct._object* %call8.i, null, !dbg !6358
  br i1 %tobool9.i, label %do.body.11.i, label %if.end.23.i, !dbg !6357

do.body.11.i:                                     ; preds = %if.end.6.i
  tail call void @llvm.dbg.value(metadata %struct._object* %call.i.20, i64 0, metadata !1638, metadata !3839) #3, !dbg !6359
  %ob_refcnt13.i = getelementptr inbounds %struct._object, %struct._object* %call.i.20, i64 0, i32 0, !dbg !6361
  %10 = load i64, i64* %ob_refcnt13.i, align 8, !dbg !6361, !tbaa !3930
  %dec14.i = add i64 %10, -1, !dbg !6361
  store i64 %dec14.i, i64* %ob_refcnt13.i, align 8, !dbg !6361, !tbaa !3930
  %cmp15.i = icmp eq i64 %dec14.i, 0, !dbg !6361
  br i1 %cmp15.i, label %if.else.17.i, label %cleanup, !dbg !6363

if.else.17.i:                                     ; preds = %do.body.11.i
  %ob_type18.i = getelementptr inbounds %struct._object, %struct._object* %call.i.20, i64 0, i32 1, !dbg !6364
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type18.i, align 8, !dbg !6364, !tbaa !3875
  %tp_dealloc19.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i64 0, i32 4, !dbg !6364
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19.i, align 8, !dbg !6364, !tbaa !3934
  tail call void %12(%struct._object* %call.i.20) #3, !dbg !6364
  br label %cleanup, !dbg !6354

if.end.23.i:                                      ; preds = %if.end.6.i
  %arrayidx25.i = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item.i, i64 1, !dbg !6366
  %13 = bitcast %struct._typeobject** %arrayidx25.i to %struct._object**, !dbg !6366
  store %struct._object* %call8.i, %struct._object** %13, align 8, !dbg !6366, !tbaa !3870
  %call30.i = tail call %struct._object* @PyFloat_FromDouble(double %div9) #3, !dbg !6368
  tail call void @llvm.dbg.value(metadata %struct._object* %call30.i, i64 0, metadata !1642, metadata !3839) #3, !dbg !6368
  %tobool31.i = icmp eq %struct._object* %call30.i, null, !dbg !6369
  br i1 %tobool31.i, label %do.body.33.i, label %if.end.45.i, !dbg !6368

do.body.33.i:                                     ; preds = %if.end.23.i
  tail call void @llvm.dbg.value(metadata %struct._object* %call.i.20, i64 0, metadata !1644, metadata !3839) #3, !dbg !6370
  %ob_refcnt35.i = getelementptr inbounds %struct._object, %struct._object* %call.i.20, i64 0, i32 0, !dbg !6372
  %14 = load i64, i64* %ob_refcnt35.i, align 8, !dbg !6372, !tbaa !3930
  %dec36.i = add i64 %14, -1, !dbg !6372
  store i64 %dec36.i, i64* %ob_refcnt35.i, align 8, !dbg !6372, !tbaa !3930
  %cmp37.i = icmp eq i64 %dec36.i, 0, !dbg !6372
  br i1 %cmp37.i, label %if.else.39.i, label %cleanup, !dbg !6374

if.else.39.i:                                     ; preds = %do.body.33.i
  %ob_type40.i = getelementptr inbounds %struct._object, %struct._object* %call.i.20, i64 0, i32 1, !dbg !6375
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type40.i, align 8, !dbg !6375, !tbaa !3875
  %tp_dealloc41.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i64 0, i32 4, !dbg !6375
  %16 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc41.i, align 8, !dbg !6375, !tbaa !3934
  tail call void %16(%struct._object* %call.i.20) #3, !dbg !6375
  br label %cleanup, !dbg !6354

if.end.45.i:                                      ; preds = %if.end.23.i
  %arrayidx47.i = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item.i, i64 2, !dbg !6377
  %17 = bitcast %struct._typeobject** %arrayidx47.i to %struct._object**, !dbg !6377
  store %struct._object* %call30.i, %struct._object** %17, align 8, !dbg !6377, !tbaa !3870
  %call52.i = tail call %struct._object* @PyFloat_FromDouble(double %div12) #3, !dbg !6379
  tail call void @llvm.dbg.value(metadata %struct._object* %call52.i, i64 0, metadata !1648, metadata !3839) #3, !dbg !6379
  %tobool53.i = icmp eq %struct._object* %call52.i, null, !dbg !6380
  br i1 %tobool53.i, label %do.body.55.i, label %if.end.67.i, !dbg !6379

do.body.55.i:                                     ; preds = %if.end.45.i
  tail call void @llvm.dbg.value(metadata %struct._object* %call.i.20, i64 0, metadata !1650, metadata !3839) #3, !dbg !6381
  %ob_refcnt57.i = getelementptr inbounds %struct._object, %struct._object* %call.i.20, i64 0, i32 0, !dbg !6383
  %18 = load i64, i64* %ob_refcnt57.i, align 8, !dbg !6383, !tbaa !3930
  %dec58.i = add i64 %18, -1, !dbg !6383
  store i64 %dec58.i, i64* %ob_refcnt57.i, align 8, !dbg !6383, !tbaa !3930
  %cmp59.i = icmp eq i64 %dec58.i, 0, !dbg !6383
  br i1 %cmp59.i, label %if.else.61.i, label %cleanup, !dbg !6385

if.else.61.i:                                     ; preds = %do.body.55.i
  %ob_type62.i = getelementptr inbounds %struct._object, %struct._object* %call.i.20, i64 0, i32 1, !dbg !6386
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type62.i, align 8, !dbg !6386, !tbaa !3875
  %tp_dealloc63.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i64 0, i32 4, !dbg !6386
  %20 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc63.i, align 8, !dbg !6386, !tbaa !3934
  tail call void %20(%struct._object* %call.i.20) #3, !dbg !6386
  br label %cleanup, !dbg !6354

if.end.67.i:                                      ; preds = %if.end.45.i
  %arrayidx69.i = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item.i, i64 3, !dbg !6388
  %21 = bitcast %struct._typeobject** %arrayidx69.i to %struct._object**, !dbg !6388
  store %struct._object* %call52.i, %struct._object** %21, align 8, !dbg !6388, !tbaa !3870
  %call74.i = tail call %struct._object* @PyFloat_FromDouble(double %div15) #3, !dbg !6390
  tail call void @llvm.dbg.value(metadata %struct._object* %call74.i, i64 0, metadata !1654, metadata !3839) #3, !dbg !6390
  %tobool75.i = icmp eq %struct._object* %call74.i, null, !dbg !6391
  br i1 %tobool75.i, label %do.body.77.i, label %if.end.89.i, !dbg !6390

do.body.77.i:                                     ; preds = %if.end.67.i
  tail call void @llvm.dbg.value(metadata %struct._object* %call.i.20, i64 0, metadata !1656, metadata !3839) #3, !dbg !6392
  %ob_refcnt79.i = getelementptr inbounds %struct._object, %struct._object* %call.i.20, i64 0, i32 0, !dbg !6394
  %22 = load i64, i64* %ob_refcnt79.i, align 8, !dbg !6394, !tbaa !3930
  %dec80.i = add i64 %22, -1, !dbg !6394
  store i64 %dec80.i, i64* %ob_refcnt79.i, align 8, !dbg !6394, !tbaa !3930
  %cmp81.i = icmp eq i64 %dec80.i, 0, !dbg !6394
  br i1 %cmp81.i, label %if.else.83.i, label %cleanup, !dbg !6396

if.else.83.i:                                     ; preds = %do.body.77.i
  %ob_type84.i = getelementptr inbounds %struct._object, %struct._object* %call.i.20, i64 0, i32 1, !dbg !6397
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type84.i, align 8, !dbg !6397, !tbaa !3875
  %tp_dealloc85.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %23, i64 0, i32 4, !dbg !6397
  %24 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc85.i, align 8, !dbg !6397, !tbaa !3934
  tail call void %24(%struct._object* %call.i.20) #3, !dbg !6397
  br label %cleanup, !dbg !6354

if.end.89.i:                                      ; preds = %if.end.67.i
  %arrayidx91.i = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item.i, i64 4, !dbg !6399
  %25 = bitcast %struct._typeobject** %arrayidx91.i to %struct._object**, !dbg !6399
  store %struct._object* %call74.i, %struct._object** %25, align 8, !dbg !6399, !tbaa !3870
  br label %cleanup, !dbg !6401

cleanup:                                          ; preds = %if.end.89.i, %if.else.83.i, %do.body.77.i, %if.else.61.i, %do.body.55.i, %if.else.39.i, %do.body.33.i, %if.else.17.i, %do.body.11.i, %if.else.i, %do.body.i, %if.end, %if.then
  %retval.0 = phi %struct._object* [ %call.i, %if.then ], [ %call.i.20, %if.end.89.i ], [ null, %do.body.77.i ], [ null, %if.else.83.i ], [ null, %do.body.55.i ], [ null, %if.else.61.i ], [ null, %do.body.33.i ], [ null, %if.else.39.i ], [ null, %do.body.11.i ], [ null, %if.else.17.i ], [ null, %do.body.i ], [ null, %if.else.i ], [ null, %if.end ]
  call void @llvm.lifetime.end(i64 32, i8* %0) #3, !dbg !6402
  ret %struct._object* %retval.0, !dbg !6402
}

; Function Attrs: nounwind uwtable
define internal noalias %struct._object* @posix__exit(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %sts = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1662, metadata !3839), !dbg !6403
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1663, metadata !3839), !dbg !6404
  %0 = bitcast i32* %sts to i8*, !dbg !6405
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !6405
  tail call void @llvm.dbg.value(metadata i32* %sts, i64 0, metadata !1664, metadata !3839), !dbg !6406
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.227, i64 0, i64 0), i32* nonnull %sts) #3, !dbg !6407
  %tobool = icmp eq i32 %call, 0, !dbg !6407
  br i1 %tobool, label %if.then, label %if.end, !dbg !6409

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !6410
  ret %struct._object* null, !dbg !6411

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %sts, i64 0, metadata !1664, metadata !3839), !dbg !6406
  %1 = load i32, i32* %sts, align 4, !dbg !6412, !tbaa !3890
  call void @_exit(i32 %1) #12, !dbg !6413
  unreachable, !dbg !6413
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_execv(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %opath = alloca %struct._object*, align 8
  %argv = alloca %struct._object*, align 8
  %argc = alloca i64, align 8
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1667, metadata !3839), !dbg !6414
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1668, metadata !3839), !dbg !6415
  %0 = bitcast %struct._object** %opath to i8*, !dbg !6416
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !6416
  %1 = bitcast %struct._object** %argv to i8*, !dbg !6417
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !6417
  %2 = bitcast i64* %argc to i8*, !dbg !6418
  call void @llvm.lifetime.start(i64 8, i8* %2) #3, !dbg !6418
  tail call void @llvm.dbg.value(metadata %struct._object** %opath, i64 0, metadata !1669, metadata !3839), !dbg !6419
  tail call void @llvm.dbg.value(metadata %struct._object** %argv, i64 0, metadata !1671, metadata !3839), !dbg !6420
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.228, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @PyUnicode_FSConverter, %struct._object** nonnull %opath, %struct._object** nonnull %argv) #3, !dbg !6421
  %tobool = icmp eq i32 %call, 0, !dbg !6421
  br i1 %tobool, label %cleanup, label %if.end, !dbg !6423

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct._object** %opath, i64 0, metadata !1669, metadata !3839), !dbg !6419
  %3 = load %struct._object*, %struct._object** %opath, align 8, !dbg !6424, !tbaa !3870
  %call1 = call i8* @PyBytes_AsString(%struct._object* %3) #3, !dbg !6425
  call void @llvm.dbg.value(metadata i8* %call1, i64 0, metadata !1670, metadata !3839), !dbg !6426
  call void @llvm.dbg.value(metadata %struct._object** %argv, i64 0, metadata !1671, metadata !3839), !dbg !6420
  %4 = load %struct._object*, %struct._object** %argv, align 8, !dbg !6427, !tbaa !3870
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %4, i64 0, i32 1, !dbg !6427
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6427, !tbaa !3875
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i64 0, i32 19, !dbg !6427
  %6 = load i64, i64* %tp_flags, align 8, !dbg !6427, !tbaa !5345
  %7 = and i64 %6, 100663296, !dbg !6428
  %8 = icmp eq i64 %7, 0, !dbg !6428
  br i1 %8, label %if.then.6, label %if.end.11, !dbg !6428

if.then.6:                                        ; preds = %if.end
  %9 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !6429, !tbaa !3870
  call void @PyErr_SetString(%struct._object* %9, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.229, i64 0, i64 0)) #3, !dbg !6430
  call void @llvm.dbg.value(metadata %struct._object** %opath, i64 0, metadata !1669, metadata !3839), !dbg !6419
  %10 = load %struct._object*, %struct._object** %opath, align 8, !dbg !6431, !tbaa !3870
  call void @llvm.dbg.value(metadata %struct._object* %10, i64 0, metadata !1674, metadata !3839), !dbg !6431
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %10, i64 0, i32 0, !dbg !6433
  %11 = load i64, i64* %ob_refcnt, align 8, !dbg !6433, !tbaa !3930
  %dec = add i64 %11, -1, !dbg !6433
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6433, !tbaa !3930
  %cmp7 = icmp eq i64 %dec, 0, !dbg !6433
  br i1 %cmp7, label %if.else, label %cleanup, !dbg !6435

if.else:                                          ; preds = %if.then.6
  %ob_type9 = getelementptr inbounds %struct._object, %struct._object* %10, i64 0, i32 1, !dbg !6436
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type9, align 8, !dbg !6436, !tbaa !3875
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i64 0, i32 4, !dbg !6436
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6436, !tbaa !3934
  call void %13(%struct._object* %10) #3, !dbg !6436
  br label %cleanup

if.end.11:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct._object** %argv, i64 0, metadata !1671, metadata !3839), !dbg !6420
  %call12 = call i64 @PySequence_Size(%struct._object* %4) #3, !dbg !6438
  call void @llvm.dbg.value(metadata i64 %call12, i64 0, metadata !1673, metadata !3839), !dbg !6439
  store i64 %call12, i64* %argc, align 8, !dbg !6440, !tbaa !4482
  %cmp13 = icmp slt i64 %call12, 1, !dbg !6441
  br i1 %cmp13, label %if.then.14, label %if.end.27, !dbg !6442

if.then.14:                                       ; preds = %if.end.11
  %14 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6443, !tbaa !3870
  call void @PyErr_SetString(%struct._object* %14, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.230, i64 0, i64 0)) #3, !dbg !6444
  call void @llvm.dbg.value(metadata %struct._object** %opath, i64 0, metadata !1669, metadata !3839), !dbg !6419
  %15 = load %struct._object*, %struct._object** %opath, align 8, !dbg !6445, !tbaa !3870
  call void @llvm.dbg.value(metadata %struct._object* %15, i64 0, metadata !1678, metadata !3839), !dbg !6445
  %ob_refcnt17 = getelementptr inbounds %struct._object, %struct._object* %15, i64 0, i32 0, !dbg !6447
  %16 = load i64, i64* %ob_refcnt17, align 8, !dbg !6447, !tbaa !3930
  %dec18 = add i64 %16, -1, !dbg !6447
  store i64 %dec18, i64* %ob_refcnt17, align 8, !dbg !6447, !tbaa !3930
  %cmp19 = icmp eq i64 %dec18, 0, !dbg !6447
  br i1 %cmp19, label %if.else.21, label %cleanup, !dbg !6449

if.else.21:                                       ; preds = %if.then.14
  %ob_type22 = getelementptr inbounds %struct._object, %struct._object* %15, i64 0, i32 1, !dbg !6450
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type22, align 8, !dbg !6450, !tbaa !3875
  %tp_dealloc23 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i64 0, i32 4, !dbg !6450
  %18 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc23, align 8, !dbg !6450, !tbaa !3934
  call void %18(%struct._object* %15) #3, !dbg !6450
  br label %cleanup

if.end.27:                                        ; preds = %if.end.11
  call void @llvm.dbg.value(metadata %struct._object** %argv, i64 0, metadata !1671, metadata !3839), !dbg !6420
  %19 = load %struct._object*, %struct._object** %argv, align 8, !dbg !6452, !tbaa !3870
  call void @llvm.dbg.value(metadata i64* %argc, i64 0, metadata !1673, metadata !3839), !dbg !6439
  %call28 = call fastcc i8** @parse_arglist(%struct._object* %19, i64* nonnull %argc), !dbg !6453
  call void @llvm.dbg.value(metadata i8** %call28, i64 0, metadata !1672, metadata !3839), !dbg !6454
  %cmp29 = icmp eq i8** %call28, null, !dbg !6455
  br i1 %cmp29, label %do.body.31, label %if.end.43, !dbg !6456

do.body.31:                                       ; preds = %if.end.27
  call void @llvm.dbg.value(metadata %struct._object** %opath, i64 0, metadata !1669, metadata !3839), !dbg !6419
  %20 = load %struct._object*, %struct._object** %opath, align 8, !dbg !6457, !tbaa !3870
  call void @llvm.dbg.value(metadata %struct._object* %20, i64 0, metadata !1682, metadata !3839), !dbg !6457
  %ob_refcnt33 = getelementptr inbounds %struct._object, %struct._object* %20, i64 0, i32 0, !dbg !6459
  %21 = load i64, i64* %ob_refcnt33, align 8, !dbg !6459, !tbaa !3930
  %dec34 = add i64 %21, -1, !dbg !6459
  store i64 %dec34, i64* %ob_refcnt33, align 8, !dbg !6459, !tbaa !3930
  %cmp35 = icmp eq i64 %dec34, 0, !dbg !6459
  br i1 %cmp35, label %if.else.37, label %cleanup, !dbg !6461

if.else.37:                                       ; preds = %do.body.31
  %ob_type38 = getelementptr inbounds %struct._object, %struct._object* %20, i64 0, i32 1, !dbg !6462
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type38, align 8, !dbg !6462, !tbaa !3875
  %tp_dealloc39 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %22, i64 0, i32 4, !dbg !6462
  %23 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc39, align 8, !dbg !6462, !tbaa !3934
  call void %23(%struct._object* %20) #3, !dbg !6462
  br label %cleanup

if.end.43:                                        ; preds = %if.end.27
  %call44 = call i32 @execv(i8* %call1, i8** %call28) #3, !dbg !6464
  call void @llvm.dbg.value(metadata i64* %argc, i64 0, metadata !1673, metadata !3839), !dbg !6439
  %24 = load i64, i64* %argc, align 8, !dbg !6465, !tbaa !4482
  call void @llvm.dbg.value(metadata i8** %call28, i64 0, metadata !1720, metadata !3839) #3, !dbg !6466
  call void @llvm.dbg.value(metadata i64 %24, i64 0, metadata !1721, metadata !3839) #3, !dbg !6468
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !1722, metadata !3839) #3, !dbg !6469
  %cmp.5.i = icmp sgt i64 %24, 0, !dbg !6470
  br i1 %cmp.5.i, label %for.body.i.preheader, label %free_string_array.exit, !dbg !6473

for.body.i.preheader:                             ; preds = %if.end.43
  br label %for.body.i, !dbg !6474

for.body.i:                                       ; preds = %for.body.i.preheader, %for.body.i
  %i.06.i = phi i64 [ %inc.i, %for.body.i ], [ 0, %for.body.i.preheader ], !dbg !6475
  %arrayidx.i = getelementptr i8*, i8** %call28, i64 %i.06.i, !dbg !6474
  %25 = load i8*, i8** %arrayidx.i, align 8, !dbg !6474, !tbaa !3870
  call void @PyMem_Free(i8* %25) #3, !dbg !6476
  %inc.i = add nuw nsw i64 %i.06.i, 1, !dbg !6477
  call void @llvm.dbg.value(metadata i64 %inc.i, i64 0, metadata !1722, metadata !3839) #3, !dbg !6469
  %exitcond.i = icmp eq i64 %inc.i, %24, !dbg !6473
  br i1 %exitcond.i, label %free_string_array.exit.loopexit, label %for.body.i, !dbg !6473

free_string_array.exit.loopexit:                  ; preds = %for.body.i
  br label %free_string_array.exit, !dbg !6478

free_string_array.exit:                           ; preds = %free_string_array.exit.loopexit, %if.end.43
  %26 = bitcast i8** %call28 to i8*, !dbg !6478
  call void @PyMem_Free(i8* %26) #3, !dbg !6478
  call void @llvm.dbg.value(metadata %struct._object** %opath, i64 0, metadata !1669, metadata !3839), !dbg !6419
  %27 = load %struct._object*, %struct._object** %opath, align 8, !dbg !6479, !tbaa !3870
  call void @llvm.dbg.value(metadata %struct._object* %27, i64 0, metadata !1686, metadata !3839), !dbg !6479
  %ob_refcnt47 = getelementptr inbounds %struct._object, %struct._object* %27, i64 0, i32 0, !dbg !6481
  %28 = load i64, i64* %ob_refcnt47, align 8, !dbg !6481, !tbaa !3930
  %dec48 = add i64 %28, -1, !dbg !6481
  store i64 %dec48, i64* %ob_refcnt47, align 8, !dbg !6481, !tbaa !3930
  %cmp49 = icmp eq i64 %dec48, 0, !dbg !6481
  br i1 %cmp49, label %if.else.51, label %if.end.54, !dbg !6483

if.else.51:                                       ; preds = %free_string_array.exit
  %ob_type52 = getelementptr inbounds %struct._object, %struct._object* %27, i64 0, i32 1, !dbg !6484
  %29 = load %struct._typeobject*, %struct._typeobject** %ob_type52, align 8, !dbg !6484, !tbaa !3875
  %tp_dealloc53 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %29, i64 0, i32 4, !dbg !6484
  %30 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc53, align 8, !dbg !6484, !tbaa !3934
  call void %30(%struct._object* %27) #3, !dbg !6484
  br label %if.end.54

if.end.54:                                        ; preds = %free_string_array.exit, %if.else.51
  %31 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !6486, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %31) #3, !dbg !6488
  br label %cleanup, !dbg !6489

cleanup:                                          ; preds = %if.else.37, %do.body.31, %if.else.21, %if.then.14, %if.else, %if.then.6, %entry, %if.end.54
  %retval.0 = phi %struct._object* [ %call.i, %if.end.54 ], [ null, %entry ], [ null, %if.then.6 ], [ null, %if.else ], [ null, %if.then.14 ], [ null, %if.else.21 ], [ null, %do.body.31 ], [ null, %if.else.37 ]
  call void @llvm.lifetime.end(i64 8, i8* %2) #3, !dbg !6490
  call void @llvm.lifetime.end(i64 8, i8* %1) #3, !dbg !6490
  call void @llvm.lifetime.end(i64 8, i8* %0) #3, !dbg !6490
  ret %struct._object* %retval.0, !dbg !6490
}

; Function Attrs: nounwind uwtable
define internal noalias %struct._object* @posix_execve(%struct._object* nocapture readnone %self, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  %key2.i = alloca %struct._object*, align 8
  %val2.i = alloca %struct._object*, align 8
  %path = alloca %struct.path_t, align 8
  %argv = alloca %struct._object*, align 8
  %env = alloca %struct._object*, align 8
  %argc = alloca i64, align 8
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1725, metadata !3839), !dbg !6491
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1726, metadata !3839), !dbg !6492
  tail call void @llvm.dbg.value(metadata %struct._object* %kwargs, i64 0, metadata !1727, metadata !3839), !dbg !6493
  %0 = bitcast %struct.path_t* %path to i8*, !dbg !6494
  call void @llvm.lifetime.start(i64 72, i8* %0) #3, !dbg !6494
  %1 = bitcast %struct._object** %argv to i8*, !dbg !6495
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !6495
  %2 = bitcast %struct._object** %env to i8*, !dbg !6495
  call void @llvm.lifetime.start(i64 8, i8* %2) #3, !dbg !6495
  tail call void @llvm.dbg.value(metadata i8** null, i64 0, metadata !1731, metadata !3839), !dbg !6496
  %3 = bitcast i64* %argc to i8*, !dbg !6497
  call void @llvm.lifetime.start(i64 8, i8* %3) #3, !dbg !6497
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 72, i32 8, i1 false), !dbg !6498
  %function_name = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 0, !dbg !6499
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.59, i64 0, i64 0), i8** %function_name, align 8, !dbg !6500, !tbaa !4743
  %allow_fd = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 3, !dbg !6501
  store i32 1, i32* %allow_fd, align 4, !dbg !6502, !tbaa !4746
  tail call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1728, metadata !3839), !dbg !6503
  tail call void @llvm.dbg.value(metadata %struct._object** %argv, i64 0, metadata !1729, metadata !3839), !dbg !6504
  tail call void @llvm.dbg.value(metadata %struct._object** %env, i64 0, metadata !1730, metadata !3839), !dbg !6505
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %args, %struct._object* %kwargs, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.233, i64 0, i64 0), i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @posix_execve.keywords, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @path_converter, %struct.path_t* nonnull %path, %struct._object** nonnull %argv, %struct._object** nonnull %env) #3, !dbg !6506
  %tobool = icmp eq i32 %call, 0, !dbg !6506
  br i1 %tobool, label %cleanup, label %if.end, !dbg !6508

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct._object** %argv, i64 0, metadata !1729, metadata !3839), !dbg !6504
  %4 = load %struct._object*, %struct._object** %argv, align 8, !dbg !6509, !tbaa !3870
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %4, i64 0, i32 1, !dbg !6509
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6509, !tbaa !3875
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i64 0, i32 19, !dbg !6509
  %6 = load i64, i64* %tp_flags, align 8, !dbg !6509, !tbaa !5345
  %7 = and i64 %6, 100663296, !dbg !6511
  %8 = icmp eq i64 %7, 0, !dbg !6511
  br i1 %8, label %if.then.5, label %if.end.6, !dbg !6511

if.then.5:                                        ; preds = %if.end
  %9 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !6512, !tbaa !3870
  call void @PyErr_SetString(%struct._object* %9, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.234, i64 0, i64 0)) #3, !dbg !6514
  br label %if.end.30, !dbg !6515

if.end.6:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct._object** %argv, i64 0, metadata !1729, metadata !3839), !dbg !6504
  %call7 = call i64 @PySequence_Size(%struct._object* %4) #3, !dbg !6516
  call void @llvm.dbg.value(metadata i64 %call7, i64 0, metadata !1733, metadata !3839), !dbg !6517
  store i64 %call7, i64* %argc, align 8, !dbg !6518, !tbaa !4482
  call void @llvm.dbg.value(metadata %struct._object** %env, i64 0, metadata !1730, metadata !3839), !dbg !6505
  %10 = load %struct._object*, %struct._object** %env, align 8, !dbg !6519, !tbaa !3870
  %call8 = call i32 @PyMapping_Check(%struct._object* %10) #3, !dbg !6521
  %tobool9 = icmp eq i32 %call8, 0, !dbg !6521
  br i1 %tobool9, label %if.then.10, label %if.end.11, !dbg !6522

if.then.10:                                       ; preds = %if.end.6
  %11 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !6523, !tbaa !3870
  call void @PyErr_SetString(%struct._object* %11, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.235, i64 0, i64 0)) #3, !dbg !6525
  br label %if.end.30, !dbg !6526

if.end.11:                                        ; preds = %if.end.6
  call void @llvm.dbg.value(metadata %struct._object** %argv, i64 0, metadata !1729, metadata !3839), !dbg !6504
  %12 = load %struct._object*, %struct._object** %argv, align 8, !dbg !6527, !tbaa !3870
  call void @llvm.dbg.value(metadata i64* %argc, i64 0, metadata !1733, metadata !3839), !dbg !6517
  %call12 = call fastcc i8** @parse_arglist(%struct._object* %12, i64* nonnull %argc), !dbg !6528
  call void @llvm.dbg.value(metadata i8** %call12, i64 0, metadata !1731, metadata !3839), !dbg !6496
  %cmp13 = icmp eq i8** %call12, null, !dbg !6529
  br i1 %cmp13, label %if.end.30, label %if.end.15, !dbg !6531

if.end.15:                                        ; preds = %if.end.11
  call void @llvm.dbg.value(metadata %struct._object** %env, i64 0, metadata !1730, metadata !3839), !dbg !6505
  %13 = load %struct._object*, %struct._object** %env, align 8, !dbg !6532, !tbaa !3870
  call void @llvm.dbg.value(metadata %struct._object* %13, i64 0, metadata !1737, metadata !3839) #3, !dbg !6533
  call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1743, metadata !3839) #3, !dbg !6535
  call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1744, metadata !3839) #3, !dbg !6536
  %14 = bitcast %struct._object** %key2.i to i8*, !dbg !6537
  call void @llvm.lifetime.start(i64 8, i8* %14) #3, !dbg !6537
  %15 = bitcast %struct._object** %val2.i to i8*, !dbg !6537
  call void @llvm.lifetime.start(i64 8, i8* %15) #3, !dbg !6537
  %call.i = call i64 @PyMapping_Size(%struct._object* %13) #3, !dbg !6538
  call void @llvm.dbg.value(metadata i64 %call.i, i64 0, metadata !1740, metadata !3839) #3, !dbg !6539
  %cmp.i = icmp slt i64 %call.i, 0, !dbg !6540
  br i1 %cmp.i, label %parse_envlist.exit.thread, label %if.end.i, !dbg !6542

if.end.i:                                         ; preds = %if.end.15
  %add.i = add i64 %call.i, 1, !dbg !6543
  %cmp1.i = icmp ugt i64 %add.i, 1152921504606846975, !dbg !6543
  br i1 %cmp1.i, label %if.then.5.i, label %cond.end.i, !dbg !6543

cond.end.i:                                       ; preds = %if.end.i
  %mul.i = shl i64 %add.i, 3, !dbg !6544
  %call3.i = call i8* @PyMem_Malloc(i64 %mul.i) #3, !dbg !6544
  %16 = bitcast i8* %call3.i to i8**, !dbg !6544
  call void @llvm.dbg.value(metadata i8** %16, i64 0, metadata !1739, metadata !3839) #3, !dbg !6546
  %cmp4.i = icmp eq i8* %call3.i, null, !dbg !6547
  br i1 %cmp4.i, label %if.then.5.i, label %if.end.7.i, !dbg !6549

if.then.5.i:                                      ; preds = %cond.end.i, %if.end.i
  %call6.i = call %struct._object* @PyErr_NoMemory() #3, !dbg !6550
  br label %parse_envlist.exit.thread, !dbg !6552

if.end.7.i:                                       ; preds = %cond.end.i
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !1742, metadata !3839) #3, !dbg !6553
  %call8.i = call %struct._object* @PyMapping_Keys(%struct._object* %13) #3, !dbg !6554
  call void @llvm.dbg.value(metadata %struct._object* %call8.i, i64 0, metadata !1743, metadata !3839) #3, !dbg !6535
  %tobool.i = icmp eq %struct._object* %call8.i, null, !dbg !6555
  br i1 %tobool.i, label %while.end.i, label %if.end.10.i, !dbg !6557

if.end.10.i:                                      ; preds = %if.end.7.i
  %call11.i = call %struct._object* @PyMapping_Values(%struct._object* %13) #3, !dbg !6558
  call void @llvm.dbg.value(metadata %struct._object* %call11.i, i64 0, metadata !1744, metadata !3839) #3, !dbg !6536
  %tobool12.i = icmp eq %struct._object* %call11.i, null, !dbg !6559
  br i1 %tobool12.i, label %do.body.137.i, label %if.end.14.i, !dbg !6561

if.end.14.i:                                      ; preds = %if.end.10.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %call8.i, i64 0, i32 1, !dbg !6562
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !6562, !tbaa !3875
  %tp_flags.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i64 0, i32 19, !dbg !6562
  %18 = load i64, i64* %tp_flags.i, align 8, !dbg !6562, !tbaa !5345
  %and.i = and i64 %18, 33554432, !dbg !6562
  %cmp15.i = icmp eq i64 %and.i, 0, !dbg !6562
  br i1 %cmp15.i, label %if.then.20.i, label %lor.lhs.false.i, !dbg !6564

lor.lhs.false.i:                                  ; preds = %if.end.14.i
  %ob_type16.i = getelementptr inbounds %struct._object, %struct._object* %call11.i, i64 0, i32 1, !dbg !6565
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type16.i, align 8, !dbg !6565, !tbaa !3875
  %tp_flags17.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i64 0, i32 19, !dbg !6565
  %20 = load i64, i64* %tp_flags17.i, align 8, !dbg !6565, !tbaa !5345
  %and18.i = and i64 %20, 33554432, !dbg !6565
  %cmp19.i = icmp eq i64 %and18.i, 0, !dbg !6565
  br i1 %cmp19.i, label %if.then.20.i, label %for.cond.preheader.i, !dbg !6567

for.cond.preheader.i:                             ; preds = %lor.lhs.false.i
  %cmp23.277.i = icmp sgt i64 %call.i, 0, !dbg !6568
  br i1 %cmp23.277.i, label %for.body.lr.ph.i, label %do.body.109.i, !dbg !6569

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %21 = bitcast %struct._object** %key2.i to %struct.PyVarObject**, !dbg !6570
  %22 = bitcast %struct._object** %val2.i to %struct.PyVarObject**, !dbg !6571
  br label %for.body.i, !dbg !6569

if.then.20.i:                                     ; preds = %lor.lhs.false.i, %if.end.14.i
  %23 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !6572, !tbaa !3870
  %call21.i = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %23, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.236, i64 0, i64 0)) #3, !dbg !6574
  br label %do.body.137.i, !dbg !6575

for.body.i:                                       ; preds = %if.end.105.i, %for.body.lr.ph.i
  %pos.0279.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %inc108.i, %if.end.105.i ], !dbg !6576
  %call24.i = call %struct._object* @PyList_GetItem(%struct._object* %call8.i, i64 %pos.0279.i) #3, !dbg !6577
  call void @llvm.dbg.value(metadata %struct._object* %call24.i, i64 0, metadata !1745, metadata !3839) #3, !dbg !6578
  %call25.i = call %struct._object* @PyList_GetItem(%struct._object* %call11.i, i64 %pos.0279.i) #3, !dbg !6579
  call void @llvm.dbg.value(metadata %struct._object* %call25.i, i64 0, metadata !1746, metadata !3839) #3, !dbg !6580
  %tobool26.i = icmp ne %struct._object* %call24.i, null, !dbg !6581
  %tobool28.i = icmp ne %struct._object* %call25.i, null, !dbg !6583
  %or.cond.i = and i1 %tobool26.i, %tobool28.i, !dbg !6585
  br i1 %or.cond.i, label %if.end.30.i, label %do.body.137.i.loopexit, !dbg !6585

if.end.30.i:                                      ; preds = %for.body.i
  %call31.i = call i32 @PyUnicode_FSConverter(%struct._object* %call24.i, i8* %14) #3, !dbg !6586
  %cmp32.i = icmp eq i32 %call31.i, 0, !dbg !6588
  br i1 %cmp32.i, label %do.body.137.i.loopexit, label %if.end.34.i, !dbg !6589

if.end.34.i:                                      ; preds = %if.end.30.i
  %call35.i = call i32 @PyUnicode_FSConverter(%struct._object* %call25.i, i8* %15) #3, !dbg !6590
  %cmp36.i = icmp eq i32 %call35.i, 0, !dbg !6591
  call void @llvm.dbg.value(metadata %struct._object** %key2.i, i64 0, metadata !1747, metadata !3839) #3, !dbg !6592
  %24 = load %struct._object*, %struct._object** %key2.i, align 8, !dbg !6593, !tbaa !3870
  br i1 %cmp36.i, label %do.body.i, label %if.end.42.i, !dbg !6595

do.body.i:                                        ; preds = %if.end.34.i
  %.lcssa = phi %struct._object* [ %24, %if.end.34.i ]
  %pos.0279.i.lcssa90 = phi i64 [ %pos.0279.i, %if.end.34.i ]
  call void @llvm.dbg.value(metadata %struct._object* %24, i64 0, metadata !1753, metadata !3839) #3, !dbg !6593
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %.lcssa, i64 0, i32 0, !dbg !6596
  %25 = load i64, i64* %ob_refcnt.i, align 8, !dbg !6596, !tbaa !3930
  %dec.i = add i64 %25, -1, !dbg !6596
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !6596, !tbaa !3930
  %cmp38.i = icmp eq i64 %dec.i, 0, !dbg !6596
  br i1 %cmp38.i, label %if.else.i, label %do.body.137.i, !dbg !6598

if.else.i:                                        ; preds = %do.body.i
  %ob_type40.i = getelementptr inbounds %struct._object, %struct._object* %.lcssa, i64 0, i32 1, !dbg !6599
  %26 = load %struct._typeobject*, %struct._typeobject** %ob_type40.i, align 8, !dbg !6599, !tbaa !3875
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %26, i64 0, i32 4, !dbg !6599
  %27 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !6599, !tbaa !3934
  call void %27(%struct._object* %.lcssa) #3, !dbg !6599
  br label %do.body.137.i, !dbg !6576

if.end.42.i:                                      ; preds = %if.end.34.i
  %call43.i = call i8* @PyBytes_AsString(%struct._object* %24) #3, !dbg !6601
  call void @llvm.dbg.value(metadata i8* %call43.i, i64 0, metadata !1750, metadata !3839) #3, !dbg !6602
  call void @llvm.dbg.value(metadata %struct._object** %val2.i, i64 0, metadata !1748, metadata !3839) #3, !dbg !6603
  %28 = load %struct._object*, %struct._object** %val2.i, align 8, !dbg !6604, !tbaa !3870
  %call44.i = call i8* @PyBytes_AsString(%struct._object* %28) #3, !dbg !6605
  call void @llvm.dbg.value(metadata i8* %call44.i, i64 0, metadata !1751, metadata !3839) #3, !dbg !6606
  call void @llvm.dbg.value(metadata %struct._object** %key2.i, i64 0, metadata !1747, metadata !3839) #3, !dbg !6592
  %29 = load %struct.PyVarObject*, %struct.PyVarObject** %21, align 8, !dbg !6570, !tbaa !3870
  %ob_size.i = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %29, i64 0, i32 1, !dbg !6570
  %30 = load i64, i64* %ob_size.i, align 8, !dbg !6570, !tbaa !6607
  call void @llvm.dbg.value(metadata %struct._object** %val2.i, i64 0, metadata !1748, metadata !3839) #3, !dbg !6603
  %31 = load %struct.PyVarObject*, %struct.PyVarObject** %22, align 8, !dbg !6571, !tbaa !3870
  %ob_size45.i = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %31, i64 0, i32 1, !dbg !6571
  %32 = load i64, i64* %ob_size45.i, align 8, !dbg !6571, !tbaa !6607
  %add46.i = add i64 %30, 2, !dbg !6608
  %add47.i = add i64 %add46.i, %32, !dbg !6609
  call void @llvm.dbg.value(metadata i64 %add47.i, i64 0, metadata !1752, metadata !3839) #3, !dbg !6610
  %cmp48.i = icmp slt i64 %add47.i, 0, !dbg !6611
  br i1 %cmp48.i, label %if.then.56.i, label %cond.end.53.i, !dbg !6611

cond.end.53.i:                                    ; preds = %if.end.42.i
  %call52.i = call i8* @PyMem_Malloc(i64 %add47.i) #3, !dbg !6612
  call void @llvm.dbg.value(metadata i8* %call52.i, i64 0, metadata !1749, metadata !3839) #3, !dbg !6614
  %cmp55.i = icmp eq i8* %call52.i, null, !dbg !6615
  br i1 %cmp55.i, label %if.then.56.i, label %if.end.82.i, !dbg !6616

if.then.56.i:                                     ; preds = %cond.end.53.i, %if.end.42.i
  %pos.0279.i.lcssa91 = phi i64 [ %pos.0279.i, %cond.end.53.i ], [ %pos.0279.i, %if.end.42.i ]
  %call57.i = call %struct._object* @PyErr_NoMemory() #3, !dbg !6617
  call void @llvm.dbg.value(metadata %struct._object** %key2.i, i64 0, metadata !1747, metadata !3839) #3, !dbg !6592
  %33 = load %struct._object*, %struct._object** %key2.i, align 8, !dbg !6618, !tbaa !3870
  call void @llvm.dbg.value(metadata %struct._object* %33, i64 0, metadata !1760, metadata !3839) #3, !dbg !6618
  %ob_refcnt60.i = getelementptr inbounds %struct._object, %struct._object* %33, i64 0, i32 0, !dbg !6620
  %34 = load i64, i64* %ob_refcnt60.i, align 8, !dbg !6620, !tbaa !3930
  %dec61.i = add i64 %34, -1, !dbg !6620
  store i64 %dec61.i, i64* %ob_refcnt60.i, align 8, !dbg !6620, !tbaa !3930
  %cmp62.i = icmp eq i64 %dec61.i, 0, !dbg !6620
  br i1 %cmp62.i, label %if.else.64.i, label %if.end.67.i, !dbg !6622

if.else.64.i:                                     ; preds = %if.then.56.i
  %ob_type65.i = getelementptr inbounds %struct._object, %struct._object* %33, i64 0, i32 1, !dbg !6623
  %35 = load %struct._typeobject*, %struct._typeobject** %ob_type65.i, align 8, !dbg !6623, !tbaa !3875
  %tp_dealloc66.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %35, i64 0, i32 4, !dbg !6623
  %36 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc66.i, align 8, !dbg !6623, !tbaa !3934
  call void %36(%struct._object* %33) #3, !dbg !6623
  br label %if.end.67.i, !dbg !6576

if.end.67.i:                                      ; preds = %if.else.64.i, %if.then.56.i
  call void @llvm.dbg.value(metadata %struct._object** %val2.i, i64 0, metadata !1748, metadata !3839) #3, !dbg !6603
  %37 = load %struct._object*, %struct._object** %val2.i, align 8, !dbg !6625, !tbaa !3870
  call void @llvm.dbg.value(metadata %struct._object* %37, i64 0, metadata !1764, metadata !3839) #3, !dbg !6625
  %ob_refcnt72.i = getelementptr inbounds %struct._object, %struct._object* %37, i64 0, i32 0, !dbg !6627
  %38 = load i64, i64* %ob_refcnt72.i, align 8, !dbg !6627, !tbaa !3930
  %dec73.i = add i64 %38, -1, !dbg !6627
  store i64 %dec73.i, i64* %ob_refcnt72.i, align 8, !dbg !6627, !tbaa !3930
  %cmp74.i = icmp eq i64 %dec73.i, 0, !dbg !6627
  br i1 %cmp74.i, label %if.else.76.i, label %do.body.137.i, !dbg !6629

if.else.76.i:                                     ; preds = %if.end.67.i
  %ob_type77.i = getelementptr inbounds %struct._object, %struct._object* %37, i64 0, i32 1, !dbg !6630
  %39 = load %struct._typeobject*, %struct._typeobject** %ob_type77.i, align 8, !dbg !6630, !tbaa !3875
  %tp_dealloc78.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %39, i64 0, i32 4, !dbg !6630
  %40 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc78.i, align 8, !dbg !6630, !tbaa !3934
  call void %40(%struct._object* %37) #3, !dbg !6630
  br label %do.body.137.i, !dbg !6576

if.end.82.i:                                      ; preds = %cond.end.53.i
  %call83.i = call i32 (i8*, i64, i8*, ...) @PyOS_snprintf(i8* %call52.i, i64 %add47.i, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.237, i64 0, i64 0), i8* %call43.i, i8* %call44.i) #3, !dbg !6632
  %inc108.i = add nuw nsw i64 %pos.0279.i, 1, !dbg !6633
  call void @llvm.dbg.value(metadata i64 %inc108.i, i64 0, metadata !1742, metadata !3839) #3, !dbg !6553
  %arrayidx.i = getelementptr i8*, i8** %16, i64 %pos.0279.i, !dbg !6634
  store i8* %call52.i, i8** %arrayidx.i, align 8, !dbg !6635, !tbaa !3870
  call void @llvm.dbg.value(metadata %struct._object** %key2.i, i64 0, metadata !1747, metadata !3839) #3, !dbg !6592
  %41 = load %struct._object*, %struct._object** %key2.i, align 8, !dbg !6636, !tbaa !3870
  call void @llvm.dbg.value(metadata %struct._object* %41, i64 0, metadata !1766, metadata !3839) #3, !dbg !6636
  %ob_refcnt86.i = getelementptr inbounds %struct._object, %struct._object* %41, i64 0, i32 0, !dbg !6638
  %42 = load i64, i64* %ob_refcnt86.i, align 8, !dbg !6638, !tbaa !3930
  %dec87.i = add i64 %42, -1, !dbg !6638
  store i64 %dec87.i, i64* %ob_refcnt86.i, align 8, !dbg !6638, !tbaa !3930
  %cmp88.i = icmp eq i64 %dec87.i, 0, !dbg !6638
  br i1 %cmp88.i, label %if.else.90.i, label %if.end.93.i, !dbg !6640

if.else.90.i:                                     ; preds = %if.end.82.i
  %ob_type91.i = getelementptr inbounds %struct._object, %struct._object* %41, i64 0, i32 1, !dbg !6641
  %43 = load %struct._typeobject*, %struct._typeobject** %ob_type91.i, align 8, !dbg !6641, !tbaa !3875
  %tp_dealloc92.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %43, i64 0, i32 4, !dbg !6641
  %44 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc92.i, align 8, !dbg !6641, !tbaa !3934
  call void %44(%struct._object* %41) #3, !dbg !6641
  br label %if.end.93.i, !dbg !6576

if.end.93.i:                                      ; preds = %if.else.90.i, %if.end.82.i
  call void @llvm.dbg.value(metadata %struct._object** %val2.i, i64 0, metadata !1748, metadata !3839) #3, !dbg !6603
  %45 = load %struct._object*, %struct._object** %val2.i, align 8, !dbg !6643, !tbaa !3870
  call void @llvm.dbg.value(metadata %struct._object* %45, i64 0, metadata !1768, metadata !3839) #3, !dbg !6643
  %ob_refcnt98.i = getelementptr inbounds %struct._object, %struct._object* %45, i64 0, i32 0, !dbg !6645
  %46 = load i64, i64* %ob_refcnt98.i, align 8, !dbg !6645, !tbaa !3930
  %dec99.i = add i64 %46, -1, !dbg !6645
  store i64 %dec99.i, i64* %ob_refcnt98.i, align 8, !dbg !6645, !tbaa !3930
  %cmp100.i = icmp eq i64 %dec99.i, 0, !dbg !6645
  br i1 %cmp100.i, label %if.else.102.i, label %if.end.105.i, !dbg !6647

if.else.102.i:                                    ; preds = %if.end.93.i
  %ob_type103.i = getelementptr inbounds %struct._object, %struct._object* %45, i64 0, i32 1, !dbg !6648
  %47 = load %struct._typeobject*, %struct._typeobject** %ob_type103.i, align 8, !dbg !6648, !tbaa !3875
  %tp_dealloc104.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %47, i64 0, i32 4, !dbg !6648
  %48 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc104.i, align 8, !dbg !6648, !tbaa !3934
  call void %48(%struct._object* %45) #3, !dbg !6648
  br label %if.end.105.i, !dbg !6576

if.end.105.i:                                     ; preds = %if.else.102.i, %if.end.93.i
  call void @llvm.dbg.value(metadata i64 %inc108.i, i64 0, metadata !1741, metadata !3839) #3, !dbg !6650
  %cmp23.i = icmp slt i64 %inc108.i, %call.i, !dbg !6568
  br i1 %cmp23.i, label %for.body.i, label %do.body.109.i.loopexit, !dbg !6569

do.body.109.i.loopexit:                           ; preds = %if.end.105.i
  %inc108.i.lcssa = phi i64 [ %inc108.i, %if.end.105.i ]
  br label %do.body.109.i, !dbg !6651

do.body.109.i:                                    ; preds = %do.body.109.i.loopexit, %for.cond.preheader.i
  %envc.0.lcssa.i = phi i64 [ 0, %for.cond.preheader.i ], [ %inc108.i.lcssa, %do.body.109.i.loopexit ], !dbg !6576
  call void @llvm.dbg.value(metadata %struct._object* %call11.i, i64 0, metadata !1770, metadata !3839) #3, !dbg !6651
  %ob_refcnt111.i = getelementptr inbounds %struct._object, %struct._object* %call11.i, i64 0, i32 0, !dbg !6653
  %49 = load i64, i64* %ob_refcnt111.i, align 8, !dbg !6653, !tbaa !3930
  %dec112.i = add i64 %49, -1, !dbg !6653
  store i64 %dec112.i, i64* %ob_refcnt111.i, align 8, !dbg !6653, !tbaa !3930
  %cmp113.i = icmp eq i64 %dec112.i, 0, !dbg !6653
  br i1 %cmp113.i, label %if.else.115.i, label %if.end.118.i, !dbg !6655

if.else.115.i:                                    ; preds = %do.body.109.i
  %50 = load %struct._typeobject*, %struct._typeobject** %ob_type16.i, align 8, !dbg !6656, !tbaa !3875
  %tp_dealloc117.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %50, i64 0, i32 4, !dbg !6656
  %51 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc117.i, align 8, !dbg !6656, !tbaa !3934
  call void %51(%struct._object* %call11.i) #3, !dbg !6656
  br label %if.end.118.i, !dbg !6576

if.end.118.i:                                     ; preds = %if.else.115.i, %do.body.109.i
  call void @llvm.dbg.value(metadata %struct._object* %call8.i, i64 0, metadata !1772, metadata !3839) #3, !dbg !6658
  %ob_refcnt123.i = getelementptr inbounds %struct._object, %struct._object* %call8.i, i64 0, i32 0, !dbg !6660
  %52 = load i64, i64* %ob_refcnt123.i, align 8, !dbg !6660, !tbaa !3930
  %dec124.i = add i64 %52, -1, !dbg !6660
  store i64 %dec124.i, i64* %ob_refcnt123.i, align 8, !dbg !6660, !tbaa !3930
  %cmp125.i = icmp eq i64 %dec124.i, 0, !dbg !6660
  br i1 %cmp125.i, label %if.else.127.i, label %if.end.19, !dbg !6662

if.else.127.i:                                    ; preds = %if.end.118.i
  %53 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !6663, !tbaa !3875
  %tp_dealloc129.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %53, i64 0, i32 4, !dbg !6663
  %54 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc129.i, align 8, !dbg !6663, !tbaa !3934
  call void %54(%struct._object* %call8.i) #3, !dbg !6663
  br label %if.end.19, !dbg !6576

do.body.137.i.loopexit:                           ; preds = %for.body.i, %if.end.30.i
  %pos.0279.i.lcssa = phi i64 [ %pos.0279.i, %for.body.i ], [ %pos.0279.i, %if.end.30.i ]
  br label %do.body.137.i, !dbg !6665

do.body.137.i:                                    ; preds = %do.body.137.i.loopexit, %if.else.76.i, %if.end.67.i, %if.else.i, %do.body.i, %if.then.20.i, %if.end.10.i
  %envc.1266.i = phi i64 [ 0, %if.end.10.i ], [ 0, %if.then.20.i ], [ %pos.0279.i.lcssa91, %if.else.76.i ], [ %pos.0279.i.lcssa91, %if.end.67.i ], [ %pos.0279.i.lcssa90, %if.else.i ], [ %pos.0279.i.lcssa90, %do.body.i ], [ %pos.0279.i.lcssa, %do.body.137.i.loopexit ], !dbg !6576
  %vals.0264.i = phi %struct._object* [ null, %if.end.10.i ], [ %call11.i, %if.then.20.i ], [ %call11.i, %if.else.76.i ], [ %call11.i, %if.end.67.i ], [ %call11.i, %if.else.i ], [ %call11.i, %do.body.i ], [ %call11.i, %do.body.137.i.loopexit ], !dbg !6576
  call void @llvm.dbg.value(metadata %struct._object* %call8.i, i64 0, metadata !1776, metadata !3839) #3, !dbg !6665
  %ob_refcnt139.i = getelementptr inbounds %struct._object, %struct._object* %call8.i, i64 0, i32 0, !dbg !6667
  %55 = load i64, i64* %ob_refcnt139.i, align 8, !dbg !6667, !tbaa !3930
  %dec140.i = add i64 %55, -1, !dbg !6667
  store i64 %dec140.i, i64* %ob_refcnt139.i, align 8, !dbg !6667, !tbaa !3930
  %cmp141.i = icmp eq i64 %dec140.i, 0, !dbg !6667
  br i1 %cmp141.i, label %if.else.143.i, label %if.end.149.i, !dbg !6669

if.else.143.i:                                    ; preds = %do.body.137.i
  %ob_type144.i = getelementptr inbounds %struct._object, %struct._object* %call8.i, i64 0, i32 1, !dbg !6670
  %56 = load %struct._typeobject*, %struct._typeobject** %ob_type144.i, align 8, !dbg !6670, !tbaa !3875
  %tp_dealloc145.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %56, i64 0, i32 4, !dbg !6670
  %57 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc145.i, align 8, !dbg !6670, !tbaa !3934
  call void %57(%struct._object* %call8.i) #3, !dbg !6670
  br label %if.end.149.i, !dbg !6576

if.end.149.i:                                     ; preds = %if.else.143.i, %do.body.137.i
  call void @llvm.dbg.value(metadata %struct._object* %call11.i, i64 0, metadata !1779, metadata !3839) #3, !dbg !6672
  %cmp154.i = icmp eq %struct._object* %vals.0264.i, null, !dbg !6674
  br i1 %cmp154.i, label %while.cond.preheader.i, label %do.body.156.i, !dbg !6675

do.body.156.i:                                    ; preds = %if.end.149.i
  call void @llvm.dbg.value(metadata %struct._object* %call11.i, i64 0, metadata !1781, metadata !3839) #3, !dbg !6676
  %ob_refcnt158.i = getelementptr inbounds %struct._object, %struct._object* %vals.0264.i, i64 0, i32 0, !dbg !6678
  %58 = load i64, i64* %ob_refcnt158.i, align 8, !dbg !6678, !tbaa !3930
  %dec159.i = add i64 %58, -1, !dbg !6678
  store i64 %dec159.i, i64* %ob_refcnt158.i, align 8, !dbg !6678, !tbaa !3930
  %cmp160.i = icmp eq i64 %dec159.i, 0, !dbg !6678
  br i1 %cmp160.i, label %if.else.162.i, label %while.cond.preheader.i, !dbg !6680

if.else.162.i:                                    ; preds = %do.body.156.i
  %ob_type163.i = getelementptr inbounds %struct._object, %struct._object* %vals.0264.i, i64 0, i32 1, !dbg !6681
  %59 = load %struct._typeobject*, %struct._typeobject** %ob_type163.i, align 8, !dbg !6681, !tbaa !3875
  %tp_dealloc164.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %59, i64 0, i32 4, !dbg !6681
  %60 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc164.i, align 8, !dbg !6681, !tbaa !3934
  call void %60(%struct._object* %vals.0264.i) #3, !dbg !6681
  br label %while.cond.preheader.i, !dbg !6576

while.cond.preheader.i:                           ; preds = %if.else.162.i, %do.body.156.i, %if.end.149.i
  %dec171.274.i = add i64 %envc.1266.i, -1, !dbg !6683
  call void @llvm.dbg.value(metadata i64 %dec171.274.i, i64 0, metadata !1742, metadata !3839) #3, !dbg !6553
  %cmp172.275.i = icmp sgt i64 %dec171.274.i, -1, !dbg !6686
  br i1 %cmp172.275.i, label %while.body.i.preheader, label %while.end.i, !dbg !6687

while.body.i.preheader:                           ; preds = %while.cond.preheader.i
  br label %while.body.i, !dbg !6688

while.body.i:                                     ; preds = %while.body.i.preheader, %while.body.i
  %dec171276.i = phi i64 [ %dec171.i, %while.body.i ], [ %dec171.274.i, %while.body.i.preheader ], !dbg !6576
  %arrayidx173.i = getelementptr i8*, i8** %16, i64 %dec171276.i, !dbg !6688
  %61 = load i8*, i8** %arrayidx173.i, align 8, !dbg !6688, !tbaa !3870
  call void @PyMem_Free(i8* %61) #3, !dbg !6688
  %dec171.i = add i64 %dec171276.i, -1, !dbg !6683
  call void @llvm.dbg.value(metadata i64 %dec171.i, i64 0, metadata !1742, metadata !3839) #3, !dbg !6553
  %cmp172.i = icmp sgt i64 %dec171.i, -1, !dbg !6686
  br i1 %cmp172.i, label %while.body.i, label %while.end.i.loopexit, !dbg !6687

while.end.i.loopexit:                             ; preds = %while.body.i
  br label %while.end.i, !dbg !6689

while.end.i:                                      ; preds = %while.end.i.loopexit, %while.cond.preheader.i, %if.end.7.i
  call void @PyMem_Free(i8* %call3.i) #3, !dbg !6689
  br label %parse_envlist.exit.thread, !dbg !6690

parse_envlist.exit.thread:                        ; preds = %if.then.5.i, %while.end.i, %if.end.15
  call void @llvm.lifetime.end(i64 8, i8* %15) #3, !dbg !6691
  call void @llvm.lifetime.end(i64 8, i8* %14) #3, !dbg !6691
  call void @llvm.dbg.value(metadata i8** %16, i64 0, metadata !1732, metadata !3839), !dbg !6692
  br label %if.then.29, !dbg !6693

if.end.19:                                        ; preds = %if.else.127.i, %if.end.118.i
  %arrayidx133.i = getelementptr i8*, i8** %16, i64 %envc.0.lcssa.i, !dbg !6694
  store i8* null, i8** %arrayidx133.i, align 8, !dbg !6695, !tbaa !3870
  call void @llvm.dbg.value(metadata i64 %envc.0.lcssa.i, i64 0, metadata !1738, metadata !3839), !dbg !6696
  call void @llvm.dbg.value(metadata i64 %envc.0.lcssa.i, i64 0, metadata !1734, metadata !3839), !dbg !6697
  call void @llvm.dbg.value(metadata i64 %envc.0.lcssa.i, i64 0, metadata !1734, metadata !3839), !dbg !6697
  call void @llvm.lifetime.end(i64 8, i8* %15) #3, !dbg !6691
  call void @llvm.lifetime.end(i64 8, i8* %14) #3, !dbg !6691
  call void @llvm.dbg.value(metadata i8** %16, i64 0, metadata !1732, metadata !3839), !dbg !6692
  %fd = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 6, !dbg !6698
  %62 = load i32, i32* %fd, align 8, !dbg !6698, !tbaa !4754
  %cmp20 = icmp sgt i32 %62, -1, !dbg !6700
  br i1 %cmp20, label %if.then.21, label %if.else, !dbg !6701

if.then.21:                                       ; preds = %if.end.19
  %call23 = call i32 @fexecve(i32 %62, i8** %call12, i8** %16) #3, !dbg !6702
  br label %if.end.25, !dbg !6702

if.else:                                          ; preds = %if.end.19
  %narrow = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 5, !dbg !6703
  %63 = load i8*, i8** %narrow, align 8, !dbg !6703, !tbaa !4761
  %call24 = call i32 @execve(i8* %63, i8** %call12, i8** %16) #3, !dbg !6704
  br label %if.end.25

if.end.25:                                        ; preds = %if.else, %if.then.21
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1728, metadata !3839), !dbg !6503
  %path.idx = getelementptr %struct.path_t, %struct.path_t* %path, i64 0, i32 8
  %path.idx.val = load %struct._object*, %struct._object** %path.idx, align 8, !tbaa !4767
  %64 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !6705, !tbaa !3870
  %call.i.47 = call %struct._object* @PyErr_SetFromErrnoWithFilenameObject(%struct._object* %64, %struct._object* %path.idx.val) #3, !dbg !6707
  %dec.67 = add i64 %envc.0.lcssa.i, -1, !dbg !6708
  call void @llvm.dbg.value(metadata i64 %dec.67, i64 0, metadata !1734, metadata !3839), !dbg !6697
  call void @llvm.dbg.value(metadata i64 %dec.67, i64 0, metadata !1738, metadata !3839), !dbg !6696
  call void @llvm.dbg.value(metadata i64 %dec.67, i64 0, metadata !1734, metadata !3839), !dbg !6697
  call void @llvm.dbg.value(metadata i64 %dec.67, i64 0, metadata !1734, metadata !3839), !dbg !6697
  %cmp27.68 = icmp sgt i64 %dec.67, -1, !dbg !6711
  br i1 %cmp27.68, label %while.body.preheader, label %while.end, !dbg !6712

while.body.preheader:                             ; preds = %if.end.25
  br label %while.body, !dbg !6713

while.body:                                       ; preds = %while.body.preheader, %while.body
  %dec69 = phi i64 [ %dec, %while.body ], [ %dec.67, %while.body.preheader ]
  %arrayidx = getelementptr i8*, i8** %16, i64 %dec69, !dbg !6713
  %65 = load i8*, i8** %arrayidx, align 8, !dbg !6713, !tbaa !3870
  call void @PyMem_Free(i8* %65) #3, !dbg !6713
  %dec = add i64 %dec69, -1, !dbg !6708
  call void @llvm.dbg.value(metadata i64 %dec, i64 0, metadata !1734, metadata !3839), !dbg !6697
  call void @llvm.dbg.value(metadata i64 %dec, i64 0, metadata !1738, metadata !3839), !dbg !6696
  call void @llvm.dbg.value(metadata i64 %dec, i64 0, metadata !1734, metadata !3839), !dbg !6697
  call void @llvm.dbg.value(metadata i64 %dec, i64 0, metadata !1734, metadata !3839), !dbg !6697
  %cmp27 = icmp sgt i64 %dec, -1, !dbg !6711
  br i1 %cmp27, label %while.body, label %while.end.loopexit, !dbg !6712

while.end.loopexit:                               ; preds = %while.body
  br label %while.end, !dbg !6714

while.end:                                        ; preds = %while.end.loopexit, %if.end.25
  call void @PyMem_Free(i8* %call3.i) #3, !dbg !6714
  br label %if.then.29, !dbg !6714

if.then.29:                                       ; preds = %while.end, %parse_envlist.exit.thread
  call void @llvm.dbg.value(metadata i64* %argc, i64 0, metadata !1733, metadata !3839), !dbg !6517
  %66 = load i64, i64* %argc, align 8, !dbg !6715, !tbaa !4482
  call void @llvm.dbg.value(metadata i8** %call12, i64 0, metadata !1720, metadata !3839) #3, !dbg !6717
  call void @llvm.dbg.value(metadata i64 %66, i64 0, metadata !1721, metadata !3839) #3, !dbg !6719
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !1722, metadata !3839) #3, !dbg !6720
  %cmp.5.i = icmp sgt i64 %66, 0, !dbg !6721
  br i1 %cmp.5.i, label %for.body.i.49.preheader, label %free_string_array.exit, !dbg !6722

for.body.i.49.preheader:                          ; preds = %if.then.29
  br label %for.body.i.49, !dbg !6723

for.body.i.49:                                    ; preds = %for.body.i.49.preheader, %for.body.i.49
  %i.06.i = phi i64 [ %inc.i, %for.body.i.49 ], [ 0, %for.body.i.49.preheader ], !dbg !6724
  %arrayidx.i.48 = getelementptr i8*, i8** %call12, i64 %i.06.i, !dbg !6723
  %67 = load i8*, i8** %arrayidx.i.48, align 8, !dbg !6723, !tbaa !3870
  call void @PyMem_Free(i8* %67) #3, !dbg !6725
  %inc.i = add nuw nsw i64 %i.06.i, 1, !dbg !6726
  call void @llvm.dbg.value(metadata i64 %inc.i, i64 0, metadata !1722, metadata !3839) #3, !dbg !6720
  %exitcond.i = icmp eq i64 %inc.i, %66, !dbg !6722
  br i1 %exitcond.i, label %free_string_array.exit.loopexit, label %for.body.i.49, !dbg !6722

free_string_array.exit.loopexit:                  ; preds = %for.body.i.49
  br label %free_string_array.exit, !dbg !6727

free_string_array.exit:                           ; preds = %free_string_array.exit.loopexit, %if.then.29
  %68 = bitcast i8** %call12 to i8*, !dbg !6727
  call void @PyMem_Free(i8* %68) #3, !dbg !6727
  br label %if.end.30, !dbg !6724

if.end.30:                                        ; preds = %if.then.5, %if.then.10, %if.end.11, %free_string_array.exit
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1728, metadata !3839), !dbg !6503
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1054, metadata !3839) #3, !dbg !6728
  %cleanup.i = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 9, !dbg !6730
  %69 = load %struct._object*, %struct._object** %cleanup.i, align 8, !dbg !6730, !tbaa !4634
  %tobool.i.50 = icmp eq %struct._object* %69, null, !dbg !6731
  br i1 %tobool.i.50, label %cleanup, label %if.then.2.i, !dbg !6732

if.then.2.i:                                      ; preds = %if.end.30
  call void @llvm.dbg.value(metadata %struct._object* %69, i64 0, metadata !1055, metadata !3839) #3, !dbg !6733
  store %struct._object* null, %struct._object** %cleanup.i, align 8, !dbg !6734, !tbaa !4634
  call void @llvm.dbg.value(metadata %struct._object* %69, i64 0, metadata !1059, metadata !3839) #3, !dbg !6735
  %ob_refcnt.i.51 = getelementptr inbounds %struct._object, %struct._object* %69, i64 0, i32 0, !dbg !6736
  %70 = load i64, i64* %ob_refcnt.i.51, align 8, !dbg !6736, !tbaa !3930
  %dec.i.52 = add i64 %70, -1, !dbg !6736
  store i64 %dec.i.52, i64* %ob_refcnt.i.51, align 8, !dbg !6736, !tbaa !3930
  %cmp5.i = icmp eq i64 %dec.i.52, 0, !dbg !6736
  br i1 %cmp5.i, label %if.else.i.55, label %cleanup, !dbg !6737

if.else.i.55:                                     ; preds = %if.then.2.i
  %ob_type.i.53 = getelementptr inbounds %struct._object, %struct._object* %69, i64 0, i32 1, !dbg !6738
  %71 = load %struct._typeobject*, %struct._typeobject** %ob_type.i.53, align 8, !dbg !6738, !tbaa !3875
  %tp_dealloc.i.54 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %71, i64 0, i32 4, !dbg !6738
  %72 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i.54, align 8, !dbg !6738, !tbaa !3934
  call void %72(%struct._object* %69) #3, !dbg !6738
  br label %cleanup, !dbg !6739

cleanup:                                          ; preds = %if.else.i.55, %if.then.2.i, %if.end.30, %entry
  call void @llvm.lifetime.end(i64 8, i8* %3) #3, !dbg !6740
  call void @llvm.lifetime.end(i64 8, i8* %2) #3, !dbg !6740
  call void @llvm.lifetime.end(i64 8, i8* %1) #3, !dbg !6740
  call void @llvm.lifetime.end(i64 72, i8* %0) #3, !dbg !6740
  ret %struct._object* null, !dbg !6740
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_fork(%struct._object* nocapture readnone %self, %struct._object* nocapture readnone %noargs) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1786, metadata !3839), !dbg !6741
  tail call void @llvm.dbg.value(metadata %struct._object* %noargs, i64 0, metadata !1787, metadata !3839), !dbg !6742
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1791, metadata !3839), !dbg !6743
  tail call void @_PyImport_AcquireLock() #3, !dbg !6744
  %call = tail call i32 @fork() #3, !dbg !6745
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !1788, metadata !3839), !dbg !6746
  %cmp = icmp eq i32 %call, 0, !dbg !6747
  br i1 %cmp, label %if.end.5.thread, label %if.end, !dbg !6749

if.end.5.thread:                                  ; preds = %entry
  tail call void @PyOS_AfterFork() #3, !dbg !6750
  br label %if.end.8, !dbg !6752

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @_PyImport_ReleaseLock() #3, !dbg !6753
  tail call void @llvm.dbg.value(metadata i32 %call1, i64 0, metadata !1791, metadata !3839), !dbg !6743
  %cmp2 = icmp eq i32 %call, -1, !dbg !6755
  br i1 %cmp2, label %if.then.3, label %if.end.5, !dbg !6757

if.then.3:                                        ; preds = %if.end
  %0 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !6758, !tbaa !3870
  %call.i = tail call %struct._object* @PyErr_SetFromErrno(%struct._object* %0) #3, !dbg !6760
  br label %cleanup, !dbg !6761

if.end.5:                                         ; preds = %if.end
  %cmp6 = icmp slt i32 %call1, 0, !dbg !6762
  br i1 %cmp6, label %if.then.7, label %if.end.8, !dbg !6752

if.then.7:                                        ; preds = %if.end.5
  %1 = load %struct._object*, %struct._object** @PyExc_RuntimeError, align 8, !dbg !6764, !tbaa !3870
  tail call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.238, i64 0, i64 0)) #3, !dbg !6766
  br label %cleanup, !dbg !6767

if.end.8:                                         ; preds = %if.end.5.thread, %if.end.5
  %conv = sext i32 %call to i64, !dbg !6768
  %call9 = tail call %struct._object* @PyLong_FromLong(i64 %conv) #3, !dbg !6769
  br label %cleanup, !dbg !6770

cleanup:                                          ; preds = %if.end.8, %if.then.7, %if.then.3
  %retval.0 = phi %struct._object* [ %call.i, %if.then.3 ], [ null, %if.then.7 ], [ %call9, %if.end.8 ]
  ret %struct._object* %retval.0, !dbg !6771
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_sched_get_priority_max(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %policy = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1794, metadata !3839), !dbg !6772
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1795, metadata !3839), !dbg !6773
  %0 = bitcast i32* %policy to i8*, !dbg !6774
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !6774
  tail call void @llvm.dbg.value(metadata i32* %policy, i64 0, metadata !1796, metadata !3839), !dbg !6775
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.239, i64 0, i64 0), i32* nonnull %policy) #3, !dbg !6776
  %tobool = icmp eq i32 %call, 0, !dbg !6776
  br i1 %tobool, label %cleanup, label %if.end, !dbg !6778

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %policy, i64 0, metadata !1796, metadata !3839), !dbg !6775
  %1 = load i32, i32* %policy, align 4, !dbg !6779, !tbaa !3890
  %call1 = call i32 @sched_get_priority_max(i32 %1) #3, !dbg !6780
  call void @llvm.dbg.value(metadata i32 %call1, i64 0, metadata !1797, metadata !3839), !dbg !6781
  %cmp = icmp slt i32 %call1, 0, !dbg !6782
  br i1 %cmp, label %if.then.2, label %if.end.4, !dbg !6784

if.then.2:                                        ; preds = %if.end
  %2 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !6785, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %2) #3, !dbg !6787
  br label %cleanup, !dbg !6788

if.end.4:                                         ; preds = %if.end
  %conv = sext i32 %call1 to i64, !dbg !6789
  %call5 = call %struct._object* @PyLong_FromLong(i64 %conv) #3, !dbg !6790
  br label %cleanup, !dbg !6791

cleanup:                                          ; preds = %entry, %if.end.4, %if.then.2
  %retval.0 = phi %struct._object* [ %call.i, %if.then.2 ], [ %call5, %if.end.4 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !6792
  ret %struct._object* %retval.0, !dbg !6792
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_sched_get_priority_min(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %policy = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1800, metadata !3839), !dbg !6793
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1801, metadata !3839), !dbg !6794
  %0 = bitcast i32* %policy to i8*, !dbg !6795
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !6795
  tail call void @llvm.dbg.value(metadata i32* %policy, i64 0, metadata !1802, metadata !3839), !dbg !6796
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.240, i64 0, i64 0), i32* nonnull %policy) #3, !dbg !6797
  %tobool = icmp eq i32 %call, 0, !dbg !6797
  br i1 %tobool, label %cleanup, label %if.end, !dbg !6799

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %policy, i64 0, metadata !1802, metadata !3839), !dbg !6796
  %1 = load i32, i32* %policy, align 4, !dbg !6800, !tbaa !3890
  %call1 = call i32 @sched_get_priority_min(i32 %1) #3, !dbg !6801
  call void @llvm.dbg.value(metadata i32 %call1, i64 0, metadata !1803, metadata !3839), !dbg !6802
  %cmp = icmp slt i32 %call1, 0, !dbg !6803
  br i1 %cmp, label %if.then.2, label %if.end.4, !dbg !6805

if.then.2:                                        ; preds = %if.end
  %2 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !6806, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %2) #3, !dbg !6808
  br label %cleanup, !dbg !6809

if.end.4:                                         ; preds = %if.end
  %conv = sext i32 %call1 to i64, !dbg !6810
  %call5 = call %struct._object* @PyLong_FromLong(i64 %conv) #3, !dbg !6811
  br label %cleanup, !dbg !6812

cleanup:                                          ; preds = %entry, %if.end.4, %if.then.2
  %retval.0 = phi %struct._object* [ %call.i, %if.then.2 ], [ %call5, %if.end.4 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !6813
  ret %struct._object* %retval.0, !dbg !6813
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_sched_getparam(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %pid = alloca i32, align 4
  %param = alloca %struct.sched_param, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1806, metadata !3839), !dbg !6814
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1807, metadata !3839), !dbg !6815
  %0 = bitcast i32* %pid to i8*, !dbg !6816
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !6816
  %1 = bitcast %struct.sched_param* %param to i8*, !dbg !6817
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !6817
  tail call void @llvm.dbg.value(metadata i32* %pid, i64 0, metadata !1808, metadata !3839), !dbg !6818
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.241, i64 0, i64 0), i32* nonnull %pid) #3, !dbg !6819
  %tobool = icmp eq i32 %call, 0, !dbg !6819
  br i1 %tobool, label %cleanup, label %if.end, !dbg !6821

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %pid, i64 0, metadata !1808, metadata !3839), !dbg !6818
  %2 = load i32, i32* %pid, align 4, !dbg !6822, !tbaa !3890
  call void @llvm.dbg.value(metadata %struct.sched_param* %param, i64 0, metadata !1809, metadata !3839), !dbg !6824
  %call1 = call i32 @sched_getparam(i32 %2, %struct.sched_param* nonnull %param) #3, !dbg !6825
  %tobool2 = icmp eq i32 %call1, 0, !dbg !6825
  br i1 %tobool2, label %if.end.5, label %if.then.3, !dbg !6826

if.then.3:                                        ; preds = %if.end
  %3 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !6827, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %3) #3, !dbg !6829
  br label %cleanup, !dbg !6830

if.end.5:                                         ; preds = %if.end
  %call6 = call %struct._object* @PyStructSequence_New(%struct._typeobject* nonnull @SchedParamType) #3, !dbg !6831
  call void @llvm.dbg.value(metadata %struct._object* %call6, i64 0, metadata !1813, metadata !3839), !dbg !6832
  %tobool7 = icmp eq %struct._object* %call6, null, !dbg !6833
  br i1 %tobool7, label %cleanup, label %if.end.9, !dbg !6835

if.end.9:                                         ; preds = %if.end.5
  %__sched_priority = getelementptr inbounds %struct.sched_param, %struct.sched_param* %param, i64 0, i32 0, !dbg !6836
  %4 = load i32, i32* %__sched_priority, align 4, !dbg !6836, !tbaa !6837
  %conv = sext i32 %4 to i64, !dbg !6839
  %call10 = call %struct._object* @PyLong_FromLong(i64 %conv) #3, !dbg !6840
  call void @llvm.dbg.value(metadata %struct._object* %call10, i64 0, metadata !1814, metadata !3839), !dbg !6841
  %tobool11 = icmp eq %struct._object* %call10, null, !dbg !6842
  br i1 %tobool11, label %do.body, label %if.end.16, !dbg !6843

do.body:                                          ; preds = %if.end.9
  call void @llvm.dbg.value(metadata %struct._object* %call6, i64 0, metadata !1815, metadata !3839), !dbg !6844
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call6, i64 0, i32 0, !dbg !6846
  %5 = load i64, i64* %ob_refcnt, align 8, !dbg !6846, !tbaa !3930
  %dec = add i64 %5, -1, !dbg !6846
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6846, !tbaa !3930
  %cmp = icmp eq i64 %dec, 0, !dbg !6846
  br i1 %cmp, label %if.else, label %cleanup, !dbg !6848

if.else:                                          ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call6, i64 0, i32 1, !dbg !6849
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6849, !tbaa !3875
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i64 0, i32 4, !dbg !6849
  %7 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6849, !tbaa !3934
  call void %7(%struct._object* %call6) #3, !dbg !6849
  br label %cleanup

if.end.16:                                        ; preds = %if.end.9
  %ob_item = getelementptr inbounds %struct._object, %struct._object* %call6, i64 1, i32 1, !dbg !6851
  %arrayidx = bitcast %struct._typeobject** %ob_item to %struct._object**, !dbg !6851
  store %struct._object* %call10, %struct._object** %arrayidx, align 8, !dbg !6851, !tbaa !3870
  br label %cleanup, !dbg !6852

cleanup:                                          ; preds = %if.else, %do.body, %if.end.5, %entry, %if.end.16, %if.then.3
  %retval.0 = phi %struct._object* [ %call.i, %if.then.3 ], [ %call6, %if.end.16 ], [ null, %entry ], [ null, %if.end.5 ], [ null, %do.body ], [ null, %if.else ]
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !6853
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !6853
  ret %struct._object* %retval.0, !dbg !6853
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_sched_getscheduler(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %pid = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1821, metadata !3839), !dbg !6854
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1822, metadata !3839), !dbg !6855
  %0 = bitcast i32* %pid to i8*, !dbg !6856
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !6856
  tail call void @llvm.dbg.value(metadata i32* %pid, i64 0, metadata !1823, metadata !3839), !dbg !6857
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.242, i64 0, i64 0), i32* nonnull %pid) #3, !dbg !6858
  %tobool = icmp eq i32 %call, 0, !dbg !6858
  br i1 %tobool, label %cleanup, label %if.end, !dbg !6860

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %pid, i64 0, metadata !1823, metadata !3839), !dbg !6857
  %1 = load i32, i32* %pid, align 4, !dbg !6861, !tbaa !3890
  %call1 = call i32 @sched_getscheduler(i32 %1) #3, !dbg !6862
  call void @llvm.dbg.value(metadata i32 %call1, i64 0, metadata !1824, metadata !3839), !dbg !6863
  %cmp = icmp slt i32 %call1, 0, !dbg !6864
  br i1 %cmp, label %if.then.2, label %if.end.4, !dbg !6866

if.then.2:                                        ; preds = %if.end
  %2 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !6867, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %2) #3, !dbg !6869
  br label %cleanup, !dbg !6870

if.end.4:                                         ; preds = %if.end
  %conv = sext i32 %call1 to i64, !dbg !6871
  %call5 = call %struct._object* @PyLong_FromLong(i64 %conv) #3, !dbg !6872
  br label %cleanup, !dbg !6873

cleanup:                                          ; preds = %entry, %if.end.4, %if.then.2
  %retval.0 = phi %struct._object* [ %call.i, %if.then.2 ], [ %call5, %if.end.4 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !6874
  ret %struct._object* %retval.0, !dbg !6874
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_sched_rr_get_interval(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %pid = alloca i32, align 4
  %interval = alloca %struct.timespec, align 8
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1827, metadata !3839), !dbg !6875
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1828, metadata !3839), !dbg !6876
  %0 = bitcast i32* %pid to i8*, !dbg !6877
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !6877
  %1 = bitcast %struct.timespec* %interval to i8*, !dbg !6878
  call void @llvm.lifetime.start(i64 16, i8* %1) #3, !dbg !6878
  tail call void @llvm.dbg.value(metadata i32* %pid, i64 0, metadata !1829, metadata !3839), !dbg !6879
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.243, i64 0, i64 0), i32* nonnull %pid) #3, !dbg !6880
  %tobool = icmp eq i32 %call, 0, !dbg !6880
  br i1 %tobool, label %cleanup, label %if.end, !dbg !6882

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %pid, i64 0, metadata !1829, metadata !3839), !dbg !6879
  %2 = load i32, i32* %pid, align 4, !dbg !6883, !tbaa !3890
  call void @llvm.dbg.value(metadata %struct.timespec* %interval, i64 0, metadata !1830, metadata !3839), !dbg !6885
  %call1 = call i32 @sched_rr_get_interval(i32 %2, %struct.timespec* nonnull %interval) #3, !dbg !6886
  %tobool2 = icmp eq i32 %call1, 0, !dbg !6886
  br i1 %tobool2, label %if.end.5, label %if.then.3, !dbg !6887

if.then.3:                                        ; preds = %if.end
  %3 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !6888, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %3) #3, !dbg !6890
  br label %cleanup, !dbg !6891

if.end.5:                                         ; preds = %if.end
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %interval, i64 0, i32 0, !dbg !6892
  %4 = load i64, i64* %tv_sec, align 8, !dbg !6892, !tbaa !6223
  %conv = sitofp i64 %4 to double, !dbg !6893
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %interval, i64 0, i32 1, !dbg !6894
  %5 = load i64, i64* %tv_nsec, align 8, !dbg !6894, !tbaa !6225
  %conv6 = sitofp i64 %5 to double, !dbg !6895
  %mul = fmul double %conv6, 1.000000e-09, !dbg !6896
  %add = fadd double %conv, %mul, !dbg !6897
  %call7 = call %struct._object* @PyFloat_FromDouble(double %add) #3, !dbg !6898
  br label %cleanup, !dbg !6899

cleanup:                                          ; preds = %entry, %if.end.5, %if.then.3
  %retval.0 = phi %struct._object* [ %call.i, %if.then.3 ], [ %call7, %if.end.5 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 16, i8* %1) #3, !dbg !6900
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !6900
  ret %struct._object* %retval.0, !dbg !6900
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_sched_setparam(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %pid = alloca i32, align 4
  %param = alloca %struct.sched_param, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1833, metadata !3839), !dbg !6901
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1834, metadata !3839), !dbg !6902
  %0 = bitcast i32* %pid to i8*, !dbg !6903
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !6903
  %1 = bitcast %struct.sched_param* %param to i8*, !dbg !6904
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !6904
  tail call void @llvm.dbg.value(metadata i32* %pid, i64 0, metadata !1835, metadata !3839), !dbg !6905
  tail call void @llvm.dbg.value(metadata %struct.sched_param* %param, i64 0, metadata !1836, metadata !3839), !dbg !6906
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.244, i64 0, i64 0), i32* nonnull %pid, i32 (%struct._object*, %struct.sched_param*)* nonnull @convert_sched_param, %struct.sched_param* nonnull %param) #3, !dbg !6907
  %tobool = icmp eq i32 %call, 0, !dbg !6907
  br i1 %tobool, label %cleanup, label %if.end, !dbg !6909

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %pid, i64 0, metadata !1835, metadata !3839), !dbg !6905
  %2 = load i32, i32* %pid, align 4, !dbg !6910, !tbaa !3890
  call void @llvm.dbg.value(metadata %struct.sched_param* %param, i64 0, metadata !1836, metadata !3839), !dbg !6906
  %call1 = call i32 @sched_setparam(i32 %2, %struct.sched_param* nonnull %param) #3, !dbg !6912
  %tobool2 = icmp eq i32 %call1, 0, !dbg !6912
  br i1 %tobool2, label %if.end.5, label %if.then.3, !dbg !6913

if.then.3:                                        ; preds = %if.end
  %3 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !6914, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %3) #3, !dbg !6916
  br label %cleanup, !dbg !6917

if.end.5:                                         ; preds = %if.end
  %4 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !6918, !tbaa !3930
  %inc = add i64 %4, 1, !dbg !6918
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !6918, !tbaa !3930
  br label %cleanup, !dbg !6918

cleanup:                                          ; preds = %entry, %if.end.5, %if.then.3
  %retval.0 = phi %struct._object* [ %call.i, %if.then.3 ], [ @_Py_NoneStruct, %if.end.5 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !6919
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !6919
  ret %struct._object* %retval.0, !dbg !6919
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_sched_setscheduler(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %pid = alloca i32, align 4
  %policy = alloca i32, align 4
  %param = alloca %struct.sched_param, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1847, metadata !3839), !dbg !6920
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1848, metadata !3839), !dbg !6921
  %0 = bitcast i32* %pid to i8*, !dbg !6922
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !6922
  %1 = bitcast i32* %policy to i8*, !dbg !6923
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !6923
  %2 = bitcast %struct.sched_param* %param to i8*, !dbg !6924
  call void @llvm.lifetime.start(i64 4, i8* %2) #3, !dbg !6924
  tail call void @llvm.dbg.value(metadata i32* %pid, i64 0, metadata !1849, metadata !3839), !dbg !6925
  tail call void @llvm.dbg.value(metadata i32* %policy, i64 0, metadata !1850, metadata !3839), !dbg !6926
  tail call void @llvm.dbg.value(metadata %struct.sched_param* %param, i64 0, metadata !1851, metadata !3839), !dbg !6927
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.247, i64 0, i64 0), i32* nonnull %pid, i32* nonnull %policy, i32 (%struct._object*, %struct.sched_param*)* nonnull @convert_sched_param, %struct.sched_param* nonnull %param) #3, !dbg !6928
  %tobool = icmp eq i32 %call, 0, !dbg !6928
  br i1 %tobool, label %cleanup, label %if.end, !dbg !6930

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %pid, i64 0, metadata !1849, metadata !3839), !dbg !6925
  %3 = load i32, i32* %pid, align 4, !dbg !6931, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %policy, i64 0, metadata !1850, metadata !3839), !dbg !6926
  %4 = load i32, i32* %policy, align 4, !dbg !6933, !tbaa !3890
  call void @llvm.dbg.value(metadata %struct.sched_param* %param, i64 0, metadata !1851, metadata !3839), !dbg !6927
  %call1 = call i32 @sched_setscheduler(i32 %3, i32 %4, %struct.sched_param* nonnull %param) #3, !dbg !6934
  %cmp = icmp eq i32 %call1, -1, !dbg !6935
  br i1 %cmp, label %if.then.2, label %if.end.4, !dbg !6936

if.then.2:                                        ; preds = %if.end
  %5 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !6937, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %5) #3, !dbg !6939
  br label %cleanup, !dbg !6940

if.end.4:                                         ; preds = %if.end
  %6 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !6941, !tbaa !3930
  %inc = add i64 %6, 1, !dbg !6941
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !6941, !tbaa !3930
  br label %cleanup, !dbg !6941

cleanup:                                          ; preds = %entry, %if.end.4, %if.then.2
  %retval.0 = phi %struct._object* [ %call.i, %if.then.2 ], [ @_Py_NoneStruct, %if.end.4 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %2) #3, !dbg !6942
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !6942
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !6942
  ret %struct._object* %retval.0, !dbg !6942
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_sched_yield(%struct._object* nocapture readnone %self, %struct._object* nocapture readnone %noargs) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1854, metadata !3839), !dbg !6943
  tail call void @llvm.dbg.value(metadata %struct._object* %noargs, i64 0, metadata !1855, metadata !3839), !dbg !6944
  %call = tail call i32 @sched_yield() #3, !dbg !6945
  %tobool = icmp eq i32 %call, 0, !dbg !6945
  br i1 %tobool, label %if.end, label %if.then, !dbg !6947

if.then:                                          ; preds = %entry
  %0 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !6948, !tbaa !3870
  %call.i = tail call %struct._object* @PyErr_SetFromErrno(%struct._object* %0) #3, !dbg !6950
  br label %return, !dbg !6951

if.end:                                           ; preds = %entry
  %1 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !6952, !tbaa !3930
  %inc = add i64 %1, 1, !dbg !6952
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !6952, !tbaa !3930
  br label %return, !dbg !6952

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct._object* [ %call.i, %if.then ], [ @_Py_NoneStruct, %if.end ]
  ret %struct._object* %retval.0, !dbg !6953
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_sched_setaffinity(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %pid = alloca i32, align 4
  %iterable = alloca %struct._object*, align 8
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1858, metadata !3839), !dbg !6954
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1859, metadata !3839), !dbg !6955
  %0 = bitcast i32* %pid to i8*, !dbg !6956
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !6956
  tail call void @llvm.dbg.value(metadata %struct.cpu_set_t* null, i64 0, metadata !1863, metadata !3839), !dbg !6957
  %1 = bitcast %struct._object** %iterable to i8*, !dbg !6958
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !6958
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1873, metadata !3839), !dbg !6959
  tail call void @llvm.dbg.value(metadata i32* %pid, i64 0, metadata !1860, metadata !3839), !dbg !6960
  tail call void @llvm.dbg.value(metadata %struct._object** %iterable, i64 0, metadata !1872, metadata !3839), !dbg !6961
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.248, i64 0, i64 0), i32* nonnull %pid, %struct._object** nonnull %iterable) #3, !dbg !6962
  %tobool = icmp eq i32 %call, 0, !dbg !6962
  br i1 %tobool, label %cleanup.148, label %if.end, !dbg !6964

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct._object** %iterable, i64 0, metadata !1872, metadata !3839), !dbg !6961
  %2 = load %struct._object*, %struct._object** %iterable, align 8, !dbg !6965, !tbaa !3870
  %call1 = call %struct._object* @PyObject_GetIter(%struct._object* %2) #3, !dbg !6966
  call void @llvm.dbg.value(metadata %struct._object* %call1, i64 0, metadata !1873, metadata !3839), !dbg !6959
  %cmp = icmp eq %struct._object* %call1, null, !dbg !6967
  br i1 %cmp, label %cleanup.148, label %if.end.3, !dbg !6969

if.end.3:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 64, i64 0, metadata !1861, metadata !3839), !dbg !6970
  call void @llvm.dbg.value(metadata i64 8, i64 0, metadata !1862, metadata !3839), !dbg !6971
  %call5 = call %struct.cpu_set_t* @__sched_cpualloc(i64 64) #3, !dbg !6972
  call void @llvm.dbg.value(metadata %struct.cpu_set_t* %call5, i64 0, metadata !1863, metadata !3839), !dbg !6957
  %cmp6 = icmp eq %struct.cpu_set_t* %call5, null, !dbg !6973
  br i1 %cmp6, label %do.body.126.thread, label %do.body, !dbg !6975

do.body.126.thread:                               ; preds = %if.end.3
  %call9 = call %struct._object* @PyErr_NoMemory() #3, !dbg !6976
  call void @llvm.dbg.value(metadata %struct._object* %iterator.1, i64 0, metadata !1896, metadata !3839), !dbg !6978
  br label %do.body.131, !dbg !6980

do.body:                                          ; preds = %if.end.3
  %3 = getelementptr inbounds %struct.cpu_set_t, %struct.cpu_set_t* %call5, i64 0, i32 0, i64 0, !dbg !6981
  store i64 0, i64* %3, align 8, !dbg !6981
  %call11.247 = call %struct._object* @PyIter_Next(%struct._object* %call1) #3, !dbg !6983
  call void @llvm.dbg.value(metadata %struct._object* %call11.247, i64 0, metadata !1874, metadata !3839), !dbg !6984
  %tobool12.248 = icmp eq %struct._object* %call11.247, null, !dbg !6985
  br i1 %tobool12.248, label %if.then.100, label %while.body.preheader, !dbg !6985

while.body.preheader:                             ; preds = %do.body
  br label %while.body, !dbg !6986

while.body:                                       ; preds = %while.body.preheader, %while.cond.backedge
  %call11252 = phi %struct._object* [ %call11, %while.cond.backedge ], [ %call11.247, %while.body.preheader ]
  %ncpus.0251 = phi i32 [ %ncpus.2, %while.cond.backedge ], [ 64, %while.body.preheader ]
  %setsize.0250 = phi i64 [ %setsize.2, %while.cond.backedge ], [ 8, %while.body.preheader ]
  %mask.0249 = phi %struct.cpu_set_t* [ %mask.2, %while.cond.backedge ], [ %call5, %while.body.preheader ]
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call11252, i64 0, i32 1, !dbg !6986
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6986, !tbaa !3875
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i64 0, i32 19, !dbg !6986
  %5 = load i64, i64* %tp_flags, align 8, !dbg !6986, !tbaa !5345
  %and = and i64 %5, 16777216, !dbg !6986
  %cmp13 = icmp eq i64 %and, 0, !dbg !6986
  br i1 %cmp13, label %if.then.15, label %if.end.26, !dbg !6987

if.then.15:                                       ; preds = %while.body
  %.lcssa = phi %struct._typeobject* [ %4, %while.body ]
  %ob_type.lcssa = phi %struct._typeobject** [ %ob_type, %while.body ]
  %mask.0249.lcssa = phi %struct.cpu_set_t* [ %mask.0249, %while.body ]
  %call11252.lcssa = phi %struct._object* [ %call11252, %while.body ]
  %6 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !6988, !tbaa !3870
  %call17 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %6, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.249, i64 0, i64 0), %struct._typeobject* %.lcssa) #3, !dbg !6989
  call void @llvm.dbg.value(metadata %struct._object* %call11, i64 0, metadata !1877, metadata !3839), !dbg !6990
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call11252.lcssa, i64 0, i32 0, !dbg !6992
  %7 = load i64, i64* %ob_refcnt, align 8, !dbg !6992, !tbaa !3930
  %dec = add i64 %7, -1, !dbg !6992
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6992, !tbaa !3930
  %cmp19 = icmp eq i64 %dec, 0, !dbg !6992
  br i1 %cmp19, label %if.else, label %error, !dbg !6994

if.else:                                          ; preds = %if.then.15
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type.lcssa, align 8, !dbg !6995, !tbaa !3875
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i64 0, i32 4, !dbg !6995
  %9 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6995, !tbaa !3934
  call void %9(%struct._object* %call11252.lcssa) #3, !dbg !6995
  br label %error

if.end.26:                                        ; preds = %while.body
  %call27 = call i64 @PyLong_AsLong(%struct._object* %call11252) #3, !dbg !6997
  call void @llvm.dbg.value(metadata i64 %call27, i64 0, metadata !1875, metadata !3839), !dbg !6998
  call void @llvm.dbg.value(metadata %struct._object* %call11, i64 0, metadata !1881, metadata !3839), !dbg !6999
  %ob_refcnt30 = getelementptr inbounds %struct._object, %struct._object* %call11252, i64 0, i32 0, !dbg !7001
  %10 = load i64, i64* %ob_refcnt30, align 8, !dbg !7001, !tbaa !3930
  %dec31 = add i64 %10, -1, !dbg !7001
  store i64 %dec31, i64* %ob_refcnt30, align 8, !dbg !7001, !tbaa !3930
  %cmp32 = icmp eq i64 %dec31, 0, !dbg !7001
  br i1 %cmp32, label %if.else.35, label %if.end.38, !dbg !7003

if.else.35:                                       ; preds = %if.end.26
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7004, !tbaa !3875
  %tp_dealloc37 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i64 0, i32 4, !dbg !7004
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc37, align 8, !dbg !7004, !tbaa !3934
  call void %12(%struct._object* %call11252) #3, !dbg !7004
  br label %if.end.38

if.end.38:                                        ; preds = %if.end.26, %if.else.35
  %cmp41 = icmp slt i64 %call27, 0, !dbg !7006
  br i1 %cmp41, label %if.then.43, label %if.end.48, !dbg !7008

if.then.43:                                       ; preds = %if.end.38
  %mask.0249.lcssa324 = phi %struct.cpu_set_t* [ %mask.0249, %if.end.38 ]
  %call44 = call %struct._object* @PyErr_Occurred() #3, !dbg !7009
  %tobool45 = icmp eq %struct._object* %call44, null, !dbg !7009
  br i1 %tobool45, label %if.then.46, label %error, !dbg !7012

if.then.46:                                       ; preds = %if.then.43
  %13 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !7013, !tbaa !3870
  call void @PyErr_SetString(%struct._object* %13, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.250, i64 0, i64 0)) #3, !dbg !7014
  br label %error, !dbg !7014

if.end.48:                                        ; preds = %if.end.38
  %cmp49 = icmp sgt i64 %call27, 2147483646, !dbg !7015
  br i1 %cmp49, label %if.then.51, label %if.end.52, !dbg !7017

if.then.51:                                       ; preds = %if.end.48
  %mask.0249.lcssa325 = phi %struct.cpu_set_t* [ %mask.0249, %if.end.48 ]
  %14 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8, !dbg !7018, !tbaa !3870
  call void @PyErr_SetString(%struct._object* %14, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.251, i64 0, i64 0)) #3, !dbg !7020
  br label %error, !dbg !7021

if.end.52:                                        ; preds = %if.end.48
  %conv53 = sext i32 %ncpus.0251 to i64, !dbg !7022
  %cmp54 = icmp slt i64 %call27, %conv53, !dbg !7023
  br i1 %cmp54, label %if.end.87, label %while.body.61.lr.ph, !dbg !7024

while.body.61.lr.ph:                              ; preds = %if.end.52
  %add65 = add i64 %call27, 1, !dbg !7025
  %conv66 = trunc i64 %add65 to i32, !dbg !7028
  br label %while.body.61, !dbg !7029

while.body.61:                                    ; preds = %while.body.61.lr.ph, %while.body.61
  %newncpus.0245 = phi i32 [ %ncpus.0251, %while.body.61.lr.ph ], [ %conv66.mul68, %while.body.61 ]
  %cmp62 = icmp sgt i32 %newncpus.0245, 1073741823, !dbg !7030
  %mul68 = shl i32 %newncpus.0245, 1, !dbg !7031
  call void @llvm.dbg.value(metadata i32 %mul68, i64 0, metadata !1883, metadata !3839), !dbg !7032
  %conv66.mul68 = select i1 %cmp62, i32 %conv66, i32 %mul68, !dbg !7033
  %conv58 = sext i32 %conv66.mul68 to i64, !dbg !7034
  %cmp59 = icmp sgt i64 %conv58, %call27, !dbg !7037
  br i1 %cmp59, label %while.end, label %while.body.61, !dbg !7029

while.end:                                        ; preds = %while.body.61
  %conv58.lcssa = phi i64 [ %conv58, %while.body.61 ]
  %conv66.mul68.lcssa = phi i32 [ %conv66.mul68, %while.body.61 ]
  %call71 = call %struct.cpu_set_t* @__sched_cpualloc(i64 %conv58.lcssa) #3, !dbg !7038
  call void @llvm.dbg.value(metadata %struct.cpu_set_t* %call71, i64 0, metadata !1886, metadata !3839), !dbg !7039
  %cmp72 = icmp eq %struct.cpu_set_t* %call71, null, !dbg !7040
  br i1 %cmp72, label %cleanup, label %cleanup.thread, !dbg !7042

cleanup.thread:                                   ; preds = %while.end
  %sub79 = add nsw i64 %conv58.lcssa, 63, !dbg !7043
  %div80 = lshr i64 %sub79, 6, !dbg !7043
  %mul81 = shl nuw nsw i64 %div80, 3, !dbg !7043
  call void @llvm.dbg.value(metadata i64 %mul81, i64 0, metadata !1887, metadata !3839), !dbg !7044
  %15 = bitcast %struct.cpu_set_t* %call71 to i8*, !dbg !7045
  %16 = bitcast %struct.cpu_set_t* %mask.0249 to i8*, !dbg !7046
  %17 = icmp ule i64 %mul81, %setsize.0250, !dbg !7046
  %18 = sub i64 %mul81, %setsize.0250, !dbg !7046
  %19 = select i1 %17, i64 0, i64 %18, !dbg !7046
  %20 = getelementptr i8, i8* %15, i64 %setsize.0250, !dbg !7046
  call void @llvm.memset.p0i8.i64(i8* %20, i8 0, i64 %19, i32 1, i1 false), !dbg !7046
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 %setsize.0250, i32 8, i1 false), !dbg !7046
  call void @__sched_cpufree(%struct.cpu_set_t* %mask.0249) #3, !dbg !7047
  call void @llvm.dbg.value(metadata i64 %mul81, i64 0, metadata !1862, metadata !3839), !dbg !6971
  call void @llvm.dbg.value(metadata %struct.cpu_set_t* %call71, i64 0, metadata !1863, metadata !3839), !dbg !6957
  call void @llvm.dbg.value(metadata i32 %conv66.mul68, i64 0, metadata !1861, metadata !3839), !dbg !6970
  br label %if.end.87

cleanup:                                          ; preds = %while.end
  %mask.0249.lcssa326 = phi %struct.cpu_set_t* [ %mask.0249, %while.end ]
  %call75 = call %struct._object* @PyErr_NoMemory() #3, !dbg !7048
  br label %error

if.end.87:                                        ; preds = %cleanup.thread, %if.end.52
  %mask.2 = phi %struct.cpu_set_t* [ %mask.0249, %if.end.52 ], [ %call71, %cleanup.thread ]
  %setsize.2 = phi i64 [ %setsize.0250, %if.end.52 ], [ %mul81, %cleanup.thread ]
  %ncpus.2 = phi i32 [ %ncpus.0251, %if.end.52 ], [ %conv66.mul68.lcssa, %cleanup.thread ]
  call void @llvm.dbg.value(metadata i64 %call27, i64 0, metadata !1888, metadata !3839), !dbg !7050
  %mul88 = shl i64 %setsize.2, 3, !dbg !7050
  %cmp89 = icmp ult i64 %call27, %mul88, !dbg !7050
  br i1 %cmp89, label %cond.true, label %while.cond.backedge, !dbg !7050

cond.true:                                        ; preds = %if.end.87
  %rem = and i64 %call27, 63, !dbg !7051
  %shl = shl i64 1, %rem, !dbg !7051
  %div91 = lshr i64 %call27, 6, !dbg !7051
  %arrayidx = getelementptr %struct.cpu_set_t, %struct.cpu_set_t* %mask.2, i64 0, i32 0, i64 %div91, !dbg !7051
  %21 = load i64, i64* %arrayidx, align 8, !dbg !7051, !tbaa !4482
  %or = or i64 %21, %shl, !dbg !7051
  store i64 %or, i64* %arrayidx, align 8, !dbg !7051, !tbaa !4482
  br label %while.cond.backedge, !dbg !7051

while.cond.backedge:                              ; preds = %cond.true, %if.end.87
  %call11 = call %struct._object* @PyIter_Next(%struct._object* %call1) #3, !dbg !6983
  call void @llvm.dbg.value(metadata %struct._object* %call11, i64 0, metadata !1874, metadata !3839), !dbg !6984
  %tobool12 = icmp eq %struct._object* %call11, null, !dbg !6985
  br i1 %tobool12, label %if.then.100.loopexit, label %while.body, !dbg !6985

if.then.100.loopexit:                             ; preds = %while.cond.backedge
  %setsize.2.lcssa = phi i64 [ %setsize.2, %while.cond.backedge ]
  %mask.2.lcssa = phi %struct.cpu_set_t* [ %mask.2, %while.cond.backedge ]
  br label %if.then.100, !dbg !7053

if.then.100:                                      ; preds = %if.then.100.loopexit, %do.body
  %setsize.0.lcssa = phi i64 [ 8, %do.body ], [ %setsize.2.lcssa, %if.then.100.loopexit ]
  %mask.0.lcssa = phi %struct.cpu_set_t* [ %call5, %do.body ], [ %mask.2.lcssa, %if.then.100.loopexit ]
  call void @llvm.dbg.value(metadata %struct._object* %call1, i64 0, metadata !1890, metadata !3839), !dbg !7053
  call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1873, metadata !3839), !dbg !6959
  call void @llvm.dbg.value(metadata %struct._object* %call1, i64 0, metadata !1892, metadata !3839), !dbg !7055
  %ob_refcnt104 = getelementptr inbounds %struct._object, %struct._object* %call1, i64 0, i32 0, !dbg !7057
  %22 = load i64, i64* %ob_refcnt104, align 8, !dbg !7057, !tbaa !3930
  %dec105 = add i64 %22, -1, !dbg !7057
  store i64 %dec105, i64* %ob_refcnt104, align 8, !dbg !7057, !tbaa !3930
  %cmp106 = icmp eq i64 %dec105, 0, !dbg !7057
  br i1 %cmp106, label %if.else.109, label %if.end.115, !dbg !7059

if.else.109:                                      ; preds = %if.then.100
  %ob_type110 = getelementptr inbounds %struct._object, %struct._object* %call1, i64 0, i32 1, !dbg !7060
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type110, align 8, !dbg !7060, !tbaa !3875
  %tp_dealloc111 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %23, i64 0, i32 4, !dbg !7060
  %24 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc111, align 8, !dbg !7060, !tbaa !3934
  call void %24(%struct._object* %call1) #3, !dbg !7060
  br label %if.end.115

if.end.115:                                       ; preds = %if.else.109, %if.then.100
  call void @llvm.dbg.value(metadata i32* %pid, i64 0, metadata !1860, metadata !3839), !dbg !6960
  %25 = load i32, i32* %pid, align 4, !dbg !7062, !tbaa !3890
  %call118 = call i32 @sched_setaffinity(i32 %25, i64 %setsize.0.lcssa, %struct.cpu_set_t* %mask.0.lcssa) #3, !dbg !7064
  %tobool119 = icmp eq i32 %call118, 0, !dbg !7064
  br i1 %tobool119, label %if.end.122, label %if.then.120, !dbg !7065

if.then.120:                                      ; preds = %if.end.115
  %26 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !7066, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %26) #3, !dbg !7069
  br label %error, !dbg !7070

if.end.122:                                       ; preds = %if.end.115
  call void @__sched_cpufree(%struct.cpu_set_t* %mask.0.lcssa) #3, !dbg !7071
  %27 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !7072, !tbaa !3930
  %inc = add i64 %27, 1, !dbg !7072
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !7072, !tbaa !3930
  br label %cleanup.148, !dbg !7072

error:                                            ; preds = %if.then.46, %if.then.43, %if.else, %if.then.15, %cleanup, %if.then.51, %if.then.120
  %mask.0228 = phi %struct.cpu_set_t* [ %mask.0.lcssa, %if.then.120 ], [ %mask.0249.lcssa325, %if.then.51 ], [ %mask.0249.lcssa326, %cleanup ], [ %mask.0249.lcssa, %if.then.15 ], [ %mask.0249.lcssa, %if.else ], [ %mask.0249.lcssa324, %if.then.43 ], [ %mask.0249.lcssa324, %if.then.46 ]
  %iterator.1 = phi %struct._object* [ null, %if.then.120 ], [ %call1, %if.then.51 ], [ %call1, %cleanup ], [ %call1, %if.then.15 ], [ %call1, %if.else ], [ %call1, %if.then.43 ], [ %call1, %if.then.46 ]
  %tobool123 = icmp eq %struct.cpu_set_t* %mask.0228, null, !dbg !7073
  br i1 %tobool123, label %do.body.126, label %if.then.124, !dbg !7075

if.then.124:                                      ; preds = %error
  call void @__sched_cpufree(%struct.cpu_set_t* %mask.0228) #3, !dbg !7076
  br label %do.body.126, !dbg !7076

do.body.126:                                      ; preds = %error, %if.then.124
  call void @llvm.dbg.value(metadata %struct._object* %iterator.1, i64 0, metadata !1896, metadata !3839), !dbg !6978
  %cmp128 = icmp eq %struct._object* %iterator.1, null, !dbg !7077
  br i1 %cmp128, label %cleanup.148, label %do.body.131, !dbg !6980

do.body.131:                                      ; preds = %do.body.126.thread, %do.body.126
  %iterator.1221223 = phi %struct._object* [ %call1, %do.body.126.thread ], [ %iterator.1, %do.body.126 ]
  call void @llvm.dbg.value(metadata %struct._object* %iterator.1, i64 0, metadata !1898, metadata !3839), !dbg !7078
  %ob_refcnt134 = getelementptr inbounds %struct._object, %struct._object* %iterator.1221223, i64 0, i32 0, !dbg !7080
  %28 = load i64, i64* %ob_refcnt134, align 8, !dbg !7080, !tbaa !3930
  %dec135 = add i64 %28, -1, !dbg !7080
  store i64 %dec135, i64* %ob_refcnt134, align 8, !dbg !7080, !tbaa !3930
  %cmp136 = icmp eq i64 %dec135, 0, !dbg !7080
  br i1 %cmp136, label %if.else.139, label %cleanup.148, !dbg !7082

if.else.139:                                      ; preds = %do.body.131
  %ob_type140 = getelementptr inbounds %struct._object, %struct._object* %iterator.1221223, i64 0, i32 1, !dbg !7083
  %29 = load %struct._typeobject*, %struct._typeobject** %ob_type140, align 8, !dbg !7083, !tbaa !3875
  %tp_dealloc141 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %29, i64 0, i32 4, !dbg !7083
  %30 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc141, align 8, !dbg !7083, !tbaa !3934
  call void %30(%struct._object* %iterator.1221223) #3, !dbg !7083
  br label %cleanup.148

cleanup.148:                                      ; preds = %do.body.126, %do.body.131, %if.else.139, %if.end, %entry, %if.end.122
  %retval.0 = phi %struct._object* [ @_Py_NoneStruct, %if.end.122 ], [ null, %entry ], [ null, %if.end ], [ null, %if.else.139 ], [ null, %do.body.131 ], [ null, %do.body.126 ]
  call void @llvm.lifetime.end(i64 8, i8* %1) #3, !dbg !7085
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !7085
  ret %struct._object* %retval.0, !dbg !7085
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_sched_getaffinity(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %pid = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1903, metadata !3839), !dbg !7086
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1904, metadata !3839), !dbg !7087
  %0 = bitcast i32* %pid to i8*, !dbg !7088
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !7088
  tail call void @llvm.dbg.value(metadata %struct.cpu_set_t* null, i64 0, metadata !1910, metadata !3839), !dbg !7089
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1911, metadata !3839), !dbg !7090
  tail call void @llvm.dbg.value(metadata i32* %pid, i64 0, metadata !1905, metadata !3839), !dbg !7091
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.252, i64 0, i64 0), i32* nonnull %pid) #3, !dbg !7092
  %tobool = icmp eq i32 %call, 0, !dbg !7092
  br i1 %tobool, label %cleanup.96, label %while.body.preheader, !dbg !7094

while.body.preheader:                             ; preds = %entry
  call void @llvm.dbg.value(metadata i64 8, i64 0, metadata !1909, metadata !3839), !dbg !7095
  %call2.159 = call %struct.cpu_set_t* @__sched_cpualloc(i64 64) #3, !dbg !7096
  call void @llvm.dbg.value(metadata %struct.cpu_set_t* %call2.159, i64 0, metadata !1910, metadata !3839), !dbg !7089
  %cmp.160 = icmp eq %struct.cpu_set_t* %call2.159, null, !dbg !7098
  br i1 %cmp.160, label %if.then.4, label %if.end.6.preheader, !dbg !7100

if.end.6.preheader:                               ; preds = %while.body.preheader
  br label %if.end.6, !dbg !7091

while.body:                                       ; preds = %if.end.17
  %conv = sext i32 %mul22 to i64, !dbg !7101
  %sub = add nsw i64 %conv, 63, !dbg !7101
  %div = lshr i64 %sub, 6, !dbg !7101
  %mul = shl nuw nsw i64 %div, 3, !dbg !7101
  call void @llvm.dbg.value(metadata i64 %mul, i64 0, metadata !1909, metadata !3839), !dbg !7095
  %call2 = call %struct.cpu_set_t* @__sched_cpualloc(i64 %conv) #3, !dbg !7096
  call void @llvm.dbg.value(metadata %struct.cpu_set_t* %call2, i64 0, metadata !1910, metadata !3839), !dbg !7089
  %cmp = icmp eq %struct.cpu_set_t* %call2, null, !dbg !7098
  br i1 %cmp, label %if.then.4.loopexit, label %if.end.6, !dbg !7100

if.then.4.loopexit:                               ; preds = %while.body
  br label %if.then.4, !dbg !7102

if.then.4:                                        ; preds = %if.then.4.loopexit, %while.body.preheader
  %call5 = call %struct._object* @PyErr_NoMemory() #3, !dbg !7102
  br label %cleanup.96, !dbg !7103

if.end.6:                                         ; preds = %if.end.6.preheader, %while.body
  %call2164 = phi %struct.cpu_set_t* [ %call2, %while.body ], [ %call2.159, %if.end.6.preheader ]
  %mul163 = phi i64 [ %mul, %while.body ], [ 8, %if.end.6.preheader ]
  %div162 = phi i64 [ %div, %while.body ], [ 1, %if.end.6.preheader ]
  %ncpus.0161 = phi i32 [ %mul22, %while.body ], [ 64, %if.end.6.preheader ]
  call void @llvm.dbg.value(metadata i32* %pid, i64 0, metadata !1905, metadata !3839), !dbg !7091
  %1 = load i32, i32* %pid, align 4, !dbg !7104, !tbaa !3890
  %call7 = call i32 @sched_getaffinity(i32 %1, i64 %mul163, %struct.cpu_set_t* %call2164) #3, !dbg !7106
  %cmp8 = icmp eq i32 %call7, 0, !dbg !7107
  br i1 %cmp8, label %while.end, label %if.end.11, !dbg !7108

if.end.11:                                        ; preds = %if.end.6
  call void @__sched_cpufree(%struct.cpu_set_t* %call2164) #3, !dbg !7109
  %call12 = tail call i32* @__errno_location() #1, !dbg !7110
  %2 = load i32, i32* %call12, align 4, !dbg !7110, !tbaa !3890
  %cmp13 = icmp eq i32 %2, 22, !dbg !7112
  br i1 %cmp13, label %if.end.17, label %if.then.15, !dbg !7113

if.then.15:                                       ; preds = %if.end.11
  %3 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !7114, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %3) #3, !dbg !7116
  br label %cleanup.96, !dbg !7117

if.end.17:                                        ; preds = %if.end.11
  %cmp18 = icmp sgt i32 %ncpus.0161, 1073741823, !dbg !7118
  %mul22 = shl i32 %ncpus.0161, 1, !dbg !7120
  call void @llvm.dbg.value(metadata i32 %mul22, i64 0, metadata !1907, metadata !3839), !dbg !7121
  br i1 %cmp18, label %if.then.20, label %while.body, !dbg !7122

if.then.20:                                       ; preds = %if.end.17
  %4 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8, !dbg !7123, !tbaa !3870
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.253, i64 0, i64 0)) #3, !dbg !7125
  br label %cleanup.96, !dbg !7126

while.end:                                        ; preds = %if.end.6
  %div162.lcssa = phi i64 [ %div162, %if.end.6 ]
  %mul163.lcssa = phi i64 [ %mul163, %if.end.6 ]
  %call2164.lcssa = phi %struct.cpu_set_t* [ %call2164, %if.end.6 ]
  %call23 = call %struct._object* @PySet_New(%struct._object* null) #3, !dbg !7127
  call void @llvm.dbg.value(metadata %struct._object* %call23, i64 0, metadata !1911, metadata !3839), !dbg !7090
  %cmp24 = icmp eq %struct._object* %call23, null, !dbg !7128
  br i1 %cmp24, label %do.body.74.thread, label %if.end.27, !dbg !7130

do.body.74.thread:                                ; preds = %while.end
  call void @__sched_cpufree(%struct.cpu_set_t* %call2164.lcssa) #3, !dbg !7131
  call void @llvm.dbg.value(metadata %struct._object* %call23, i64 0, metadata !1926, metadata !3839), !dbg !7133
  br label %cleanup.96, !dbg !7135

if.end.27:                                        ; preds = %while.end
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1906, metadata !3839), !dbg !7136
  %call28 = call i32 @__sched_cpucount(i64 %mul163.lcssa, %struct.cpu_set_t* %call2164.lcssa) #3, !dbg !7137
  call void @llvm.dbg.value(metadata i32 %call28, i64 0, metadata !1908, metadata !3839), !dbg !7138
  %tobool29.156 = icmp eq i32 %call28, 0, !dbg !7139
  br i1 %tobool29.156, label %for.end, label %for.body.lr.ph, !dbg !7139

for.body.lr.ph:                                   ; preds = %if.end.27
  %mul31 = shl nuw i64 %div162.lcssa, 6, !dbg !7140
  br label %for.body.outer, !dbg !7139

for.body.outer:                                   ; preds = %for.inc, %for.body.lr.ph
  %cpu.0158.ph = phi i32 [ %inc, %for.inc ], [ 0, %for.body.lr.ph ]
  %count.0157.ph = phi i32 [ %dec, %for.inc ], [ %call28, %for.body.lr.ph ]
  br label %for.body, !dbg !7140

for.body:                                         ; preds = %for.body.outer, %for.inc.thread
  %cpu.0158 = phi i32 [ %inc.176, %for.inc.thread ], [ %cpu.0158.ph, %for.body.outer ]
  %conv30 = sext i32 %cpu.0158 to i64, !dbg !7140
  call void @llvm.dbg.value(metadata i64 %conv30, i64 0, metadata !1912, metadata !3839), !dbg !7140
  %cmp32 = icmp ult i64 %conv30, %mul31, !dbg !7140
  br i1 %cmp32, label %cond.end, label %for.inc.thread, !dbg !7140

cond.end:                                         ; preds = %for.body
  %div34 = lshr i64 %conv30, 6, !dbg !7141
  %arrayidx = getelementptr %struct.cpu_set_t, %struct.cpu_set_t* %call2164.lcssa, i64 0, i32 0, i64 %div34, !dbg !7141
  %5 = load i64, i64* %arrayidx, align 8, !dbg !7141, !tbaa !4482
  %rem = and i64 %conv30, 63, !dbg !7141
  %shl = shl i64 1, %rem, !dbg !7141
  %and = and i64 %5, %shl, !dbg !7141
  %cmp35 = icmp eq i64 %and, 0, !dbg !7141
  br i1 %cmp35, label %for.inc.thread, label %if.then.38, !dbg !7143

if.then.38:                                       ; preds = %cond.end
  %conv30.lcssa = phi i64 [ %conv30, %cond.end ]
  %cpu.0158.lcssa = phi i32 [ %cpu.0158, %cond.end ]
  %call41 = call %struct._object* @PyLong_FromLong(i64 %conv30.lcssa) #3, !dbg !7144
  call void @llvm.dbg.value(metadata %struct._object* %call41, i64 0, metadata !1918, metadata !3839), !dbg !7145
  %dec = add i32 %count.0157.ph, -1, !dbg !7146
  call void @llvm.dbg.value(metadata i32 %dec, i64 0, metadata !1908, metadata !3839), !dbg !7138
  %cmp42 = icmp eq %struct._object* %call41, null, !dbg !7147
  br i1 %cmp42, label %do.body.79.loopexit, label %if.end.45, !dbg !7149

if.end.45:                                        ; preds = %if.then.38
  %call46 = call i32 @PySet_Add(%struct._object* %call23, %struct._object* %call41) #3, !dbg !7150
  %tobool47 = icmp eq i32 %call46, 0, !dbg !7150
  %ob_refcnt59 = getelementptr inbounds %struct._object, %struct._object* %call41, i64 0, i32 0, !dbg !7151
  %6 = load i64, i64* %ob_refcnt59, align 8, !dbg !7151, !tbaa !3930
  %dec60 = add i64 %6, -1, !dbg !7151
  store i64 %dec60, i64* %ob_refcnt59, align 8, !dbg !7151, !tbaa !3930
  %cmp61 = icmp eq i64 %dec60, 0, !dbg !7151
  br i1 %tobool47, label %do.body.56, label %do.body, !dbg !7153

do.body:                                          ; preds = %if.end.45
  %cmp61.lcssa = phi i1 [ %cmp61, %if.end.45 ]
  %call41.lcssa214 = phi %struct._object* [ %call41, %if.end.45 ]
  call void @llvm.dbg.value(metadata %struct._object* %call41, i64 0, metadata !1920, metadata !3839), !dbg !7154
  br i1 %cmp61.lcssa, label %if.else, label %do.body.79, !dbg !7156

if.else:                                          ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call41.lcssa214, i64 0, i32 1, !dbg !7157
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7157, !tbaa !3875
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i64 0, i32 4, !dbg !7157
  %8 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7157, !tbaa !3934
  call void %8(%struct._object* %call41.lcssa214) #3, !dbg !7157
  br label %do.body.79

do.body.56:                                       ; preds = %if.end.45
  call void @llvm.dbg.value(metadata %struct._object* %call41, i64 0, metadata !1924, metadata !3839), !dbg !7160
  br i1 %cmp61, label %if.else.64, label %for.inc, !dbg !7162

if.else.64:                                       ; preds = %do.body.56
  %ob_type65 = getelementptr inbounds %struct._object, %struct._object* %call41, i64 0, i32 1, !dbg !7163
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type65, align 8, !dbg !7163, !tbaa !3875
  %tp_dealloc66 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i64 0, i32 4, !dbg !7163
  %10 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc66, align 8, !dbg !7163, !tbaa !3934
  call void %10(%struct._object* %call41) #3, !dbg !7163
  br label %for.inc

for.inc.thread:                                   ; preds = %cond.end, %for.body
  %inc.176 = add i32 %cpu.0158, 1, !dbg !7165
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !1906, metadata !3839), !dbg !7136
  br label %for.body, !dbg !7139

for.inc:                                          ; preds = %do.body.56, %if.else.64
  %inc = add i32 %cpu.0158.lcssa, 1, !dbg !7165
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !1906, metadata !3839), !dbg !7136
  %tobool29 = icmp eq i32 %dec, 0, !dbg !7139
  br i1 %tobool29, label %for.end.loopexit, label %for.body.outer, !dbg !7139

for.end.loopexit:                                 ; preds = %for.inc
  br label %for.end, !dbg !7166

for.end:                                          ; preds = %for.end.loopexit, %if.end.27
  call void @__sched_cpufree(%struct.cpu_set_t* %call2164.lcssa) #3, !dbg !7166
  br label %cleanup.96, !dbg !7167

do.body.79.loopexit:                              ; preds = %if.then.38
  br label %do.body.79, !dbg !7131

do.body.79:                                       ; preds = %do.body.79.loopexit, %if.else, %do.body
  call void @__sched_cpufree(%struct.cpu_set_t* %call2164.lcssa) #3, !dbg !7131
  call void @llvm.dbg.value(metadata %struct._object* %call23, i64 0, metadata !1926, metadata !3839), !dbg !7133
  call void @llvm.dbg.value(metadata %struct._object* %call23, i64 0, metadata !1928, metadata !3839), !dbg !7168
  %ob_refcnt82 = getelementptr inbounds %struct._object, %struct._object* %call23, i64 0, i32 0, !dbg !7170
  %11 = load i64, i64* %ob_refcnt82, align 8, !dbg !7170, !tbaa !3930
  %dec83 = add i64 %11, -1, !dbg !7170
  store i64 %dec83, i64* %ob_refcnt82, align 8, !dbg !7170, !tbaa !3930
  %cmp84 = icmp eq i64 %dec83, 0, !dbg !7170
  br i1 %cmp84, label %if.else.87, label %cleanup.96, !dbg !7172

if.else.87:                                       ; preds = %do.body.79
  %ob_type88 = getelementptr inbounds %struct._object, %struct._object* %call23, i64 0, i32 1, !dbg !7173
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type88, align 8, !dbg !7173, !tbaa !3875
  %tp_dealloc89 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i64 0, i32 4, !dbg !7173
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc89, align 8, !dbg !7173, !tbaa !3934
  call void %13(%struct._object* %call23) #3, !dbg !7173
  br label %cleanup.96

cleanup.96:                                       ; preds = %do.body.74.thread, %do.body.79, %if.else.87, %entry, %for.end, %if.then.20, %if.then.15, %if.then.4
  %retval.0 = phi %struct._object* [ %call5, %if.then.4 ], [ %call23, %for.end ], [ %call.i, %if.then.15 ], [ null, %if.then.20 ], [ null, %entry ], [ null, %if.else.87 ], [ null, %do.body.79 ], [ null, %do.body.74.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !7175
  ret %struct._object* %retval.0, !dbg !7175
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_openpty(%struct._object* nocapture readnone %self, %struct._object* nocapture readnone %noargs) #0 {
entry:
  %master_fd = alloca i32, align 4
  %slave_fd = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1933, metadata !3839), !dbg !7176
  tail call void @llvm.dbg.value(metadata %struct._object* %noargs, i64 0, metadata !1934, metadata !3839), !dbg !7177
  %0 = bitcast i32* %master_fd to i8*, !dbg !7178
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !7178
  tail call void @llvm.dbg.value(metadata i32 -1, i64 0, metadata !1935, metadata !3839), !dbg !7179
  store i32 -1, i32* %master_fd, align 4, !dbg !7179, !tbaa !3890
  %1 = bitcast i32* %slave_fd to i8*, !dbg !7178
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !7178
  tail call void @llvm.dbg.value(metadata i32 -1, i64 0, metadata !1936, metadata !3839), !dbg !7180
  store i32 -1, i32* %slave_fd, align 4, !dbg !7180, !tbaa !3890
  tail call void @llvm.dbg.value(metadata i32* %master_fd, i64 0, metadata !1935, metadata !3839), !dbg !7179
  tail call void @llvm.dbg.value(metadata i32* %slave_fd, i64 0, metadata !1936, metadata !3839), !dbg !7180
  %call = call i32 @openpty(i32* nonnull %master_fd, i32* nonnull %slave_fd, i8* null, %struct.termios* null, %struct.winsize* null) #3, !dbg !7181
  %cmp = icmp eq i32 %call, 0, !dbg !7183
  br i1 %cmp, label %if.end, label %posix_error, !dbg !7184

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %master_fd, i64 0, metadata !1935, metadata !3839), !dbg !7179
  %2 = load i32, i32* %master_fd, align 4, !dbg !7185, !tbaa !3890
  %call1 = call i32 @_Py_set_inheritable(i32 %2, i32 0, i32* null) #3, !dbg !7187
  %cmp2 = icmp slt i32 %call1, 0, !dbg !7188
  br i1 %cmp2, label %error, label %if.end.4, !dbg !7189

if.end.4:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata i32* %slave_fd, i64 0, metadata !1936, metadata !3839), !dbg !7180
  %3 = load i32, i32* %slave_fd, align 4, !dbg !7190, !tbaa !3890
  %call5 = call i32 @_Py_set_inheritable(i32 %3, i32 0, i32* null) #3, !dbg !7192
  %cmp6 = icmp slt i32 %call5, 0, !dbg !7193
  br i1 %cmp6, label %error, label %if.end.8, !dbg !7194

if.end.8:                                         ; preds = %if.end.4
  call void @llvm.dbg.value(metadata i32* %master_fd, i64 0, metadata !1935, metadata !3839), !dbg !7179
  %4 = load i32, i32* %master_fd, align 4, !dbg !7195, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %slave_fd, i64 0, metadata !1936, metadata !3839), !dbg !7180
  %5 = load i32, i32* %slave_fd, align 4, !dbg !7196, !tbaa !3890
  %call9 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.254, i64 0, i64 0), i32 %4, i32 %5) #3, !dbg !7197
  br label %cleanup, !dbg !7198

posix_error:                                      ; preds = %entry
  %6 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !7199, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %6) #3, !dbg !7201
  br label %error, !dbg !7202

error:                                            ; preds = %if.end.4, %if.end, %posix_error
  call void @llvm.dbg.value(metadata i32* %master_fd, i64 0, metadata !1935, metadata !3839), !dbg !7179
  %7 = load i32, i32* %master_fd, align 4, !dbg !7203, !tbaa !3890
  %cmp11 = icmp eq i32 %7, -1, !dbg !7205
  br i1 %cmp11, label %if.end.14, label %if.then.12, !dbg !7206

if.then.12:                                       ; preds = %error
  %call13 = call i32 @close(i32 %7) #3, !dbg !7207
  br label %if.end.14, !dbg !7207

if.end.14:                                        ; preds = %error, %if.then.12
  call void @llvm.dbg.value(metadata i32* %slave_fd, i64 0, metadata !1936, metadata !3839), !dbg !7180
  %8 = load i32, i32* %slave_fd, align 4, !dbg !7208, !tbaa !3890
  %cmp15 = icmp eq i32 %8, -1, !dbg !7210
  br i1 %cmp15, label %cleanup, label %if.then.16, !dbg !7211

if.then.16:                                       ; preds = %if.end.14
  %call17 = call i32 @close(i32 %8) #3, !dbg !7212
  br label %cleanup, !dbg !7212

cleanup:                                          ; preds = %if.then.16, %if.end.14, %if.end.8
  %retval.0 = phi %struct._object* [ %call9, %if.end.8 ], [ null, %if.end.14 ], [ null, %if.then.16 ]
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !7213
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !7213
  ret %struct._object* %retval.0, !dbg !7213
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_forkpty(%struct._object* nocapture readnone %self, %struct._object* nocapture readnone %noargs) #0 {
entry:
  %master_fd = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1939, metadata !3839), !dbg !7214
  tail call void @llvm.dbg.value(metadata %struct._object* %noargs, i64 0, metadata !1940, metadata !3839), !dbg !7215
  %0 = bitcast i32* %master_fd to i8*, !dbg !7216
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !7216
  tail call void @llvm.dbg.value(metadata i32 -1, i64 0, metadata !1941, metadata !3839), !dbg !7217
  store i32 -1, i32* %master_fd, align 4, !dbg !7217, !tbaa !3890
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1942, metadata !3839), !dbg !7218
  tail call void @_PyImport_AcquireLock() #3, !dbg !7219
  tail call void @llvm.dbg.value(metadata i32* %master_fd, i64 0, metadata !1941, metadata !3839), !dbg !7217
  %call = call i32 @forkpty(i32* nonnull %master_fd, i8* null, %struct.termios* null, %struct.winsize* null) #3, !dbg !7220
  call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !1943, metadata !3839), !dbg !7221
  %cmp = icmp eq i32 %call, 0, !dbg !7222
  br i1 %cmp, label %if.end.5.thread, label %if.end, !dbg !7224

if.end.5.thread:                                  ; preds = %entry
  call void @PyOS_AfterFork() #3, !dbg !7225
  br label %if.end.8, !dbg !7227

if.end:                                           ; preds = %entry
  %call1 = call i32 @_PyImport_ReleaseLock() #3, !dbg !7228
  call void @llvm.dbg.value(metadata i32 %call1, i64 0, metadata !1942, metadata !3839), !dbg !7218
  %cmp2 = icmp eq i32 %call, -1, !dbg !7230
  br i1 %cmp2, label %if.then.3, label %if.end.5, !dbg !7232

if.then.3:                                        ; preds = %if.end
  %1 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !7233, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %1) #3, !dbg !7235
  br label %cleanup, !dbg !7236

if.end.5:                                         ; preds = %if.end
  %cmp6 = icmp slt i32 %call1, 0, !dbg !7237
  br i1 %cmp6, label %if.then.7, label %if.end.8, !dbg !7227

if.then.7:                                        ; preds = %if.end.5
  %2 = load %struct._object*, %struct._object** @PyExc_RuntimeError, align 8, !dbg !7239, !tbaa !3870
  call void @PyErr_SetString(%struct._object* %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.238, i64 0, i64 0)) #3, !dbg !7241
  br label %cleanup, !dbg !7242

if.end.8:                                         ; preds = %if.end.5.thread, %if.end.5
  %conv = sext i32 %call to i64, !dbg !7243
  %call9 = call %struct._object* @PyLong_FromLong(i64 %conv) #3, !dbg !7244
  call void @llvm.dbg.value(metadata i32* %master_fd, i64 0, metadata !1941, metadata !3839), !dbg !7217
  %3 = load i32, i32* %master_fd, align 4, !dbg !7245, !tbaa !3890
  %call10 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.255, i64 0, i64 0), %struct._object* %call9, i32 %3) #3, !dbg !7246
  br label %cleanup, !dbg !7247

cleanup:                                          ; preds = %if.end.8, %if.then.7, %if.then.3
  %retval.0 = phi %struct._object* [ %call.i, %if.then.3 ], [ null, %if.then.7 ], [ %call10, %if.end.8 ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !7248
  ret %struct._object* %retval.0, !dbg !7248
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_getegid(%struct._object* nocapture readnone %self, %struct._object* nocapture readnone %noargs) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1946, metadata !3839), !dbg !7249
  tail call void @llvm.dbg.value(metadata %struct._object* %noargs, i64 0, metadata !1947, metadata !3839), !dbg !7250
  %call = tail call i32 @getegid() #3, !dbg !7251
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !698, metadata !3839) #3, !dbg !7252
  %cmp.i = icmp eq i32 %call, -1, !dbg !7254
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !7255

if.then.i:                                        ; preds = %entry
  %call.i = tail call %struct._object* @PyLong_FromLong(i64 -1) #3, !dbg !7256
  br label %_PyLong_FromGid.exit, !dbg !7257

if.end.i:                                         ; preds = %entry
  %conv.i = zext i32 %call to i64, !dbg !7258
  %call1.i = tail call %struct._object* @PyLong_FromUnsignedLong(i64 %conv.i) #3, !dbg !7259
  br label %_PyLong_FromGid.exit, !dbg !7260

_PyLong_FromGid.exit:                             ; preds = %if.then.i, %if.end.i
  %retval.0.i = phi %struct._object* [ %call.i, %if.then.i ], [ %call1.i, %if.end.i ], !dbg !7261
  ret %struct._object* %retval.0.i, !dbg !7262
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_geteuid(%struct._object* nocapture readnone %self, %struct._object* nocapture readnone %noargs) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1950, metadata !3839), !dbg !7263
  tail call void @llvm.dbg.value(metadata %struct._object* %noargs, i64 0, metadata !1951, metadata !3839), !dbg !7264
  %call = tail call i32 @geteuid() #3, !dbg !7265
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !693, metadata !3839) #3, !dbg !7266
  %cmp.i = icmp eq i32 %call, -1, !dbg !7268
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !7269

if.then.i:                                        ; preds = %entry
  %call.i = tail call %struct._object* @PyLong_FromLong(i64 -1) #3, !dbg !7270
  br label %_PyLong_FromUid.exit, !dbg !7271

if.end.i:                                         ; preds = %entry
  %conv.i = zext i32 %call to i64, !dbg !7272
  %call1.i = tail call %struct._object* @PyLong_FromUnsignedLong(i64 %conv.i) #3, !dbg !7273
  br label %_PyLong_FromUid.exit, !dbg !7274

_PyLong_FromUid.exit:                             ; preds = %if.then.i, %if.end.i
  %retval.0.i = phi %struct._object* [ %call.i, %if.then.i ], [ %call1.i, %if.end.i ], !dbg !7275
  ret %struct._object* %retval.0.i, !dbg !7276
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_getgid(%struct._object* nocapture readnone %self, %struct._object* nocapture readnone %noargs) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1954, metadata !3839), !dbg !7277
  tail call void @llvm.dbg.value(metadata %struct._object* %noargs, i64 0, metadata !1955, metadata !3839), !dbg !7278
  %call = tail call i32 @getgid() #3, !dbg !7279
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !698, metadata !3839) #3, !dbg !7280
  %cmp.i = icmp eq i32 %call, -1, !dbg !7282
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !7283

if.then.i:                                        ; preds = %entry
  %call.i = tail call %struct._object* @PyLong_FromLong(i64 -1) #3, !dbg !7284
  br label %_PyLong_FromGid.exit, !dbg !7285

if.end.i:                                         ; preds = %entry
  %conv.i = zext i32 %call to i64, !dbg !7286
  %call1.i = tail call %struct._object* @PyLong_FromUnsignedLong(i64 %conv.i) #3, !dbg !7287
  br label %_PyLong_FromGid.exit, !dbg !7288

_PyLong_FromGid.exit:                             ; preds = %if.then.i, %if.end.i
  %retval.0.i = phi %struct._object* [ %call.i, %if.then.i ], [ %call1.i, %if.end.i ], !dbg !7289
  ret %struct._object* %retval.0.i, !dbg !7290
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_getgrouplist(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %user = alloca i8*, align 8
  %ngroups = alloca i32, align 4
  %basegid = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1958, metadata !3839), !dbg !7291
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1959, metadata !3839), !dbg !7292
  %0 = bitcast i8** %user to i8*, !dbg !7293
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !7293
  %1 = bitcast i32* %ngroups to i8*, !dbg !7294
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !7294
  %2 = bitcast i32* %basegid to i8*, !dbg !7295
  call void @llvm.lifetime.start(i64 4, i8* %2) #3, !dbg !7295
  tail call void @llvm.dbg.value(metadata i32 65536, i64 0, metadata !1962, metadata !3839), !dbg !7296
  store i32 65536, i32* %ngroups, align 4, !dbg !7297, !tbaa !3890
  tail call void @llvm.dbg.value(metadata i8** %user, i64 0, metadata !1960, metadata !3839), !dbg !7298
  tail call void @llvm.dbg.value(metadata i32* %basegid, i64 0, metadata !1965, metadata !3839), !dbg !7299
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.256, i64 0, i64 0), i8** nonnull %user, i32 (%struct._object*, i8*)* nonnull @_Py_Gid_Converter, i32* nonnull %basegid) #3, !dbg !7300
  %tobool = icmp eq i32 %call, 0, !dbg !7300
  br i1 %tobool, label %cleanup.31, label %if.end, !dbg !7302

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %ngroups, i64 0, metadata !1962, metadata !3839), !dbg !7296
  %call1 = call i8* @PyMem_Malloc(i64 262144) #3, !dbg !7303
  %3 = bitcast i8* %call1 to i32*, !dbg !7303
  call void @llvm.dbg.value(metadata i32* %3, i64 0, metadata !1964, metadata !3839), !dbg !7304
  %cmp = icmp eq i8* %call1, null, !dbg !7305
  br i1 %cmp, label %if.then.3, label %if.end.5, !dbg !7307

if.then.3:                                        ; preds = %if.end
  %call4 = call %struct._object* @PyErr_NoMemory() #3, !dbg !7308
  br label %cleanup.31, !dbg !7309

if.end.5:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata i8** %user, i64 0, metadata !1960, metadata !3839), !dbg !7298
  %4 = load i8*, i8** %user, align 8, !dbg !7310, !tbaa !3870
  call void @llvm.dbg.value(metadata i32* %basegid, i64 0, metadata !1965, metadata !3839), !dbg !7299
  %5 = load i32, i32* %basegid, align 4, !dbg !7312, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %ngroups, i64 0, metadata !1962, metadata !3839), !dbg !7296
  %call6 = call i32 @getgrouplist(i8* %4, i32 %5, i32* %3, i32* nonnull %ngroups) #3, !dbg !7313
  %cmp7 = icmp eq i32 %call6, -1, !dbg !7314
  br i1 %cmp7, label %if.then.9, label %if.end.11, !dbg !7315

if.then.9:                                        ; preds = %if.end.5
  call void @PyMem_Free(i8* %call1) #3, !dbg !7316
  %6 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !7318, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %6) #3, !dbg !7320
  br label %cleanup.31, !dbg !7321

if.end.11:                                        ; preds = %if.end.5
  call void @llvm.dbg.value(metadata i32* %ngroups, i64 0, metadata !1962, metadata !3839), !dbg !7296
  %7 = load i32, i32* %ngroups, align 4, !dbg !7322, !tbaa !3890
  %conv12 = sext i32 %7 to i64, !dbg !7322
  %call13 = call %struct._object* @PyList_New(i64 %conv12) #3, !dbg !7323
  call void @llvm.dbg.value(metadata %struct._object* %call13, i64 0, metadata !1963, metadata !3839), !dbg !7324
  %cmp14 = icmp eq %struct._object* %call13, null, !dbg !7325
  br i1 %cmp14, label %if.then.16, label %for.cond.preheader, !dbg !7327

for.cond.preheader:                               ; preds = %if.end.11
  call void @llvm.dbg.value(metadata i32* %ngroups, i64 0, metadata !1962, metadata !3839), !dbg !7296
  %8 = load i32, i32* %ngroups, align 4, !dbg !7328, !tbaa !3890
  %cmp18.58 = icmp sgt i32 %8, 0, !dbg !7329
  br i1 %cmp18.58, label %for.body.lr.ph, label %for.end, !dbg !7330

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %ob_item = getelementptr inbounds %struct._object, %struct._object* %call13, i64 1, i32 1, !dbg !7331
  %9 = bitcast %struct._typeobject** %ob_item to %struct._object***, !dbg !7331
  br label %for.body, !dbg !7330

if.then.16:                                       ; preds = %if.end.11
  call void @PyMem_Free(i8* %call1) #3, !dbg !7332
  br label %cleanup.31, !dbg !7334

for.body:                                         ; preds = %for.body.lr.ph, %if.end.28
  %i.059 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %if.end.28 ]
  %idxprom = sext i32 %i.059 to i64, !dbg !7335
  %arrayidx = getelementptr i32, i32* %3, i64 %idxprom, !dbg !7335
  %10 = load i32, i32* %arrayidx, align 4, !dbg !7335, !tbaa !3890
  call void @llvm.dbg.value(metadata i32 %10, i64 0, metadata !698, metadata !3839) #3, !dbg !7336
  %cmp.i = icmp eq i32 %10, -1, !dbg !7338
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !7339

if.then.i:                                        ; preds = %for.body
  %call.i.57 = call %struct._object* @PyLong_FromLong(i64 -1) #3, !dbg !7340
  br label %_PyLong_FromGid.exit, !dbg !7341

if.end.i:                                         ; preds = %for.body
  %conv.i = zext i32 %10 to i64, !dbg !7342
  %call1.i = call %struct._object* @PyLong_FromUnsignedLong(i64 %conv.i) #3, !dbg !7343
  br label %_PyLong_FromGid.exit, !dbg !7344

_PyLong_FromGid.exit:                             ; preds = %if.then.i, %if.end.i
  %retval.0.i = phi %struct._object* [ %call.i.57, %if.then.i ], [ %call1.i, %if.end.i ], !dbg !7345
  call void @llvm.dbg.value(metadata %struct._object* %retval.0.i, i64 0, metadata !1966, metadata !3839), !dbg !7346
  %cmp21 = icmp eq %struct._object* %retval.0.i, null, !dbg !7347
  br i1 %cmp21, label %do.body, label %if.end.28, !dbg !7348

do.body:                                          ; preds = %_PyLong_FromGid.exit
  call void @llvm.dbg.value(metadata %struct._object* %call13, i64 0, metadata !1970, metadata !3839), !dbg !7349
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call13, i64 0, i32 0, !dbg !7351
  %11 = load i64, i64* %ob_refcnt, align 8, !dbg !7351, !tbaa !3930
  %dec = add i64 %11, -1, !dbg !7351
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7351, !tbaa !3930
  %cmp24 = icmp eq i64 %dec, 0, !dbg !7351
  br i1 %cmp24, label %if.else, label %if.end.27, !dbg !7353

if.else:                                          ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call13, i64 0, i32 1, !dbg !7354
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7354, !tbaa !3875
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i64 0, i32 4, !dbg !7354
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7354, !tbaa !3934
  call void %13(%struct._object* %call13) #3, !dbg !7354
  br label %if.end.27

if.end.27:                                        ; preds = %do.body, %if.else
  call void @PyMem_Free(i8* %call1) #3, !dbg !7356
  br label %cleanup.31

if.end.28:                                        ; preds = %_PyLong_FromGid.exit
  %14 = load %struct._object**, %struct._object*** %9, align 8, !dbg !7331, !tbaa !7357
  %arrayidx30 = getelementptr %struct._object*, %struct._object** %14, i64 %idxprom, !dbg !7331
  store %struct._object* %retval.0.i, %struct._object** %arrayidx30, align 8, !dbg !7331, !tbaa !3870
  %inc = add i32 %i.059, 1, !dbg !7359
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !1961, metadata !3839), !dbg !7360
  call void @llvm.dbg.value(metadata i32* %ngroups, i64 0, metadata !1962, metadata !3839), !dbg !7296
  %15 = load i32, i32* %ngroups, align 4, !dbg !7328, !tbaa !3890
  %cmp18 = icmp slt i32 %inc, %15, !dbg !7329
  br i1 %cmp18, label %for.body, label %for.end.loopexit, !dbg !7330

for.end.loopexit:                                 ; preds = %if.end.28
  br label %for.end, !dbg !7361

for.end:                                          ; preds = %for.end.loopexit, %for.cond.preheader
  call void @PyMem_Free(i8* %call1) #3, !dbg !7361
  br label %cleanup.31, !dbg !7362

cleanup.31:                                       ; preds = %if.end.27, %entry, %for.end, %if.then.16, %if.then.9, %if.then.3
  %retval.2 = phi %struct._object* [ %call4, %if.then.3 ], [ %call.i, %if.then.9 ], [ null, %if.then.16 ], [ %call13, %for.end ], [ null, %entry ], [ null, %if.end.27 ]
  call void @llvm.lifetime.end(i64 4, i8* %2) #3, !dbg !7363
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !7363
  call void @llvm.lifetime.end(i64 8, i8* %0) #3, !dbg !7363
  ret %struct._object* %retval.2, !dbg !7363
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_getgroups(%struct._object* nocapture readnone %self, %struct._object* nocapture readnone %noargs) #0 {
entry:
  %grouplist = alloca [65536 x i32], align 16
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1976, metadata !3839), !dbg !7364
  tail call void @llvm.dbg.value(metadata %struct._object* %noargs, i64 0, metadata !1977, metadata !3839), !dbg !7365
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1978, metadata !3839), !dbg !7366
  %0 = bitcast [65536 x i32]* %grouplist to i8*, !dbg !7367
  call void @llvm.lifetime.start(i64 262144, i8* %0) #3, !dbg !7367
  tail call void @llvm.dbg.declare(metadata [65536 x i32]* %grouplist, metadata !1979, metadata !3839), !dbg !7368
  %arraydecay = getelementptr inbounds [65536 x i32], [65536 x i32]* %grouplist, i64 0, i64 0, !dbg !7369
  tail call void @llvm.dbg.value(metadata i32* %arraydecay, i64 0, metadata !1983, metadata !3839), !dbg !7370
  %call = call i32 @getgroups(i32 65536, i32* %arraydecay) #3, !dbg !7371
  call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !1984, metadata !3839), !dbg !7372
  %cmp = icmp slt i32 %call, 0, !dbg !7373
  br i1 %cmp, label %if.then, label %if.end.29, !dbg !7375

if.then:                                          ; preds = %entry
  %call2 = tail call i32* @__errno_location() #1, !dbg !7376
  %1 = load i32, i32* %call2, align 4, !dbg !7376, !tbaa !3890
  %cmp3 = icmp eq i32 %1, 22, !dbg !7379
  br i1 %cmp3, label %if.then.4, label %if.else.26, !dbg !7380

if.then.4:                                        ; preds = %if.then
  %call5 = call i32 @getgroups(i32 0, i32* null) #3, !dbg !7381
  call void @llvm.dbg.value(metadata i32 %call5, i64 0, metadata !1984, metadata !3839), !dbg !7372
  switch i32 %call5, label %if.else [
    i32 -1, label %if.then.7
    i32 0, label %if.end.29
  ], !dbg !7383

if.then.7:                                        ; preds = %if.then.4
  %2 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !7384, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %2) #3, !dbg !7388
  br label %cleanup.55, !dbg !7389

if.else:                                          ; preds = %if.then.4
  %conv = sext i32 %call5 to i64, !dbg !7390
  %mul = shl nsw i64 %conv, 2, !dbg !7393
  %call12 = call i8* @PyMem_Malloc(i64 %mul) #3, !dbg !7394
  %3 = bitcast i8* %call12 to i32*, !dbg !7394
  call void @llvm.dbg.value(metadata i32* %3, i64 0, metadata !1983, metadata !3839), !dbg !7370
  %cmp13 = icmp eq i8* %call12, null, !dbg !7395
  br i1 %cmp13, label %if.then.15, label %if.end.18, !dbg !7397

if.then.15:                                       ; preds = %if.else
  store i32 22, i32* %call2, align 4, !dbg !7398, !tbaa !3890
  %4 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !7400, !tbaa !3870
  %call.i.86 = call %struct._object* @PyErr_SetFromErrno(%struct._object* %4) #3, !dbg !7402
  br label %cleanup.55, !dbg !7403

if.end.18:                                        ; preds = %if.else
  %call19 = call i32 @getgroups(i32 %call5, i32* %3) #3, !dbg !7404
  call void @llvm.dbg.value(metadata i32 %call19, i64 0, metadata !1984, metadata !3839), !dbg !7372
  %cmp20 = icmp eq i32 %call19, -1, !dbg !7405
  br i1 %cmp20, label %if.then.22, label %if.end.29, !dbg !7407

if.then.22:                                       ; preds = %if.end.18
  call void @PyMem_Free(i8* %call12) #3, !dbg !7408
  %5 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !7410, !tbaa !3870
  %call.i.87 = call %struct._object* @PyErr_SetFromErrno(%struct._object* %5) #3, !dbg !7412
  br label %cleanup.55, !dbg !7413

if.else.26:                                       ; preds = %if.then
  %6 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !7414, !tbaa !3870
  %call.i.88 = call %struct._object* @PyErr_SetFromErrno(%struct._object* %6) #3, !dbg !7417
  br label %cleanup.55, !dbg !7418

if.end.29:                                        ; preds = %if.then.4, %if.end.18, %entry
  %alt_grouplist.0 = phi i32* [ %3, %if.end.18 ], [ %arraydecay, %entry ], [ %arraydecay, %if.then.4 ]
  %n.0 = phi i32 [ %call19, %if.end.18 ], [ %call, %entry ], [ 0, %if.then.4 ]
  %conv30 = sext i32 %n.0 to i64, !dbg !7419
  %call31 = call %struct._object* @PyList_New(i64 %conv30) #3, !dbg !7420
  call void @llvm.dbg.value(metadata %struct._object* %call31, i64 0, metadata !1978, metadata !3839), !dbg !7366
  %cmp32 = icmp eq %struct._object* %call31, null, !dbg !7421
  br i1 %cmp32, label %if.end.49, label %for.cond.preheader, !dbg !7422

for.cond.preheader:                               ; preds = %if.end.29
  %cmp35.90 = icmp sgt i32 %n.0, 0, !dbg !7423
  br i1 %cmp35.90, label %for.body.lr.ph, label %if.end.49, !dbg !7424

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %ob_item = getelementptr inbounds %struct._object, %struct._object* %call31, i64 1, i32 1, !dbg !7425
  %7 = bitcast %struct._typeobject** %ob_item to %struct._object***, !dbg !7425
  br label %for.body, !dbg !7424

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %arrayidx = getelementptr i32, i32* %alt_grouplist.0, i64 %indvars.iv, !dbg !7426
  %8 = load i32, i32* %arrayidx, align 4, !dbg !7426, !tbaa !3890
  call void @llvm.dbg.value(metadata i32 %8, i64 0, metadata !698, metadata !3839) #3, !dbg !7427
  %cmp.i = icmp eq i32 %8, -1, !dbg !7429
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !7430

if.then.i:                                        ; preds = %for.body
  %call.i.89 = call %struct._object* @PyLong_FromLong(i64 -1) #3, !dbg !7431
  br label %_PyLong_FromGid.exit, !dbg !7432

if.end.i:                                         ; preds = %for.body
  %conv.i = zext i32 %8 to i64, !dbg !7433
  %call1.i = call %struct._object* @PyLong_FromUnsignedLong(i64 %conv.i) #3, !dbg !7434
  br label %_PyLong_FromGid.exit, !dbg !7435

_PyLong_FromGid.exit:                             ; preds = %if.then.i, %if.end.i
  %retval.0.i = phi %struct._object* [ %call.i.89, %if.then.i ], [ %call1.i, %if.end.i ], !dbg !7436
  call void @llvm.dbg.value(metadata %struct._object* %retval.0.i, i64 0, metadata !1988, metadata !3839), !dbg !7437
  %cmp38 = icmp eq %struct._object* %retval.0.i, null, !dbg !7438
  br i1 %cmp38, label %do.body, label %for.inc, !dbg !7439

do.body:                                          ; preds = %_PyLong_FromGid.exit
  call void @llvm.dbg.value(metadata %struct._object* %call31, i64 0, metadata !1992, metadata !3839), !dbg !7440
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call31, i64 0, i32 0, !dbg !7442
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !7442, !tbaa !3930
  %dec = add i64 %9, -1, !dbg !7442
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7442, !tbaa !3930
  %cmp41 = icmp eq i64 %dec, 0, !dbg !7442
  br i1 %cmp41, label %if.else.44, label %if.end.49, !dbg !7444

if.else.44:                                       ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call31, i64 0, i32 1, !dbg !7445
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7445, !tbaa !3875
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i64 0, i32 4, !dbg !7445
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7445, !tbaa !3934
  call void %11(%struct._object* %call31) #3, !dbg !7445
  br label %if.end.49

for.inc:                                          ; preds = %_PyLong_FromGid.exit
  %12 = load %struct._object**, %struct._object*** %7, align 8, !dbg !7425, !tbaa !7357
  %arrayidx48 = getelementptr %struct._object*, %struct._object** %12, i64 %indvars.iv, !dbg !7425
  store %struct._object* %retval.0.i, %struct._object** %arrayidx48, align 8, !dbg !7425, !tbaa !3870
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7424
  %cmp35 = icmp slt i64 %indvars.iv.next, %conv30, !dbg !7423
  br i1 %cmp35, label %for.body, label %if.end.49.loopexit, !dbg !7424

if.end.49.loopexit:                               ; preds = %for.inc
  br label %if.end.49, !dbg !7447

if.end.49:                                        ; preds = %if.end.49.loopexit, %for.cond.preheader, %if.else.44, %do.body, %if.end.29
  %result.3 = phi %struct._object* [ null, %if.end.29 ], [ null, %do.body ], [ null, %if.else.44 ], [ %call31, %for.cond.preheader ], [ %call31, %if.end.49.loopexit ]
  %cmp51 = icmp eq i32* %alt_grouplist.0, %arraydecay, !dbg !7447
  br i1 %cmp51, label %cleanup.55, label %if.then.53, !dbg !7449

if.then.53:                                       ; preds = %if.end.49
  %13 = bitcast i32* %alt_grouplist.0 to i8*, !dbg !7450
  call void @PyMem_Free(i8* %13) #3, !dbg !7452
  br label %cleanup.55, !dbg !7453

cleanup.55:                                       ; preds = %if.then.53, %if.end.49, %if.else.26, %if.then.22, %if.then.15, %if.then.7
  %retval.0 = phi %struct._object* [ %call.i, %if.then.7 ], [ %call.i.86, %if.then.15 ], [ %call.i.87, %if.then.22 ], [ %call.i.88, %if.else.26 ], [ %result.3, %if.end.49 ], [ %result.3, %if.then.53 ]
  call void @llvm.lifetime.end(i64 262144, i8* %0) #3, !dbg !7454
  ret %struct._object* %retval.0, !dbg !7454
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_getpid(%struct._object* nocapture readnone %self, %struct._object* nocapture readnone %noargs) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !1998, metadata !3839), !dbg !7455
  tail call void @llvm.dbg.value(metadata %struct._object* %noargs, i64 0, metadata !1999, metadata !3839), !dbg !7456
  %call = tail call i32 @getpid() #3, !dbg !7457
  %conv = sext i32 %call to i64, !dbg !7457
  %call1 = tail call %struct._object* @PyLong_FromLong(i64 %conv) #3, !dbg !7458
  ret %struct._object* %call1, !dbg !7459
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_getpgrp(%struct._object* nocapture readnone %self, %struct._object* nocapture readnone %noargs) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2002, metadata !3839), !dbg !7460
  tail call void @llvm.dbg.value(metadata %struct._object* %noargs, i64 0, metadata !2003, metadata !3839), !dbg !7461
  %call = tail call i32 @getpgrp() #3, !dbg !7462
  %conv = sext i32 %call to i64, !dbg !7462
  %call1 = tail call %struct._object* @PyLong_FromLong(i64 %conv) #3, !dbg !7463
  ret %struct._object* %call1, !dbg !7464
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_getppid(%struct._object* nocapture readnone %self, %struct._object* nocapture readnone %noargs) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2006, metadata !3839), !dbg !7465
  tail call void @llvm.dbg.value(metadata %struct._object* %noargs, i64 0, metadata !2007, metadata !3839), !dbg !7466
  %call = tail call i32 @getppid() #3, !dbg !7467
  %conv = sext i32 %call to i64, !dbg !7467
  %call1 = tail call %struct._object* @PyLong_FromLong(i64 %conv) #3, !dbg !7468
  ret %struct._object* %call1, !dbg !7469
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_getuid(%struct._object* nocapture readnone %self, %struct._object* nocapture readnone %noargs) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2010, metadata !3839), !dbg !7470
  tail call void @llvm.dbg.value(metadata %struct._object* %noargs, i64 0, metadata !2011, metadata !3839), !dbg !7471
  %call = tail call i32 @getuid() #3, !dbg !7472
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !693, metadata !3839) #3, !dbg !7473
  %cmp.i = icmp eq i32 %call, -1, !dbg !7475
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !7476

if.then.i:                                        ; preds = %entry
  %call.i = tail call %struct._object* @PyLong_FromLong(i64 -1) #3, !dbg !7477
  br label %_PyLong_FromUid.exit, !dbg !7478

if.end.i:                                         ; preds = %entry
  %conv.i = zext i32 %call to i64, !dbg !7479
  %call1.i = tail call %struct._object* @PyLong_FromUnsignedLong(i64 %conv.i) #3, !dbg !7480
  br label %_PyLong_FromUid.exit, !dbg !7481

_PyLong_FromUid.exit:                             ; preds = %if.then.i, %if.end.i
  %retval.0.i = phi %struct._object* [ %call.i, %if.then.i ], [ %call1.i, %if.end.i ], !dbg !7482
  ret %struct._object* %retval.0.i, !dbg !7483
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_getlogin(%struct._object* nocapture readnone %self, %struct._object* nocapture readnone %noargs) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2014, metadata !3839), !dbg !7484
  tail call void @llvm.dbg.value(metadata %struct._object* %noargs, i64 0, metadata !2015, metadata !3839), !dbg !7485
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !2016, metadata !3839), !dbg !7486
  %call = tail call i32* @__errno_location() #1, !dbg !7487
  %0 = load i32, i32* %call, align 4, !dbg !7487, !tbaa !3890
  tail call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !2018, metadata !3839), !dbg !7488
  store i32 0, i32* %call, align 4, !dbg !7489, !tbaa !3890
  %call2 = tail call i8* @getlogin() #3, !dbg !7490
  tail call void @llvm.dbg.value(metadata i8* %call2, i64 0, metadata !2017, metadata !3839), !dbg !7491
  %cmp = icmp eq i8* %call2, null, !dbg !7492
  br i1 %cmp, label %if.then, label %if.else.6, !dbg !7494

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %call, align 4, !dbg !7495, !tbaa !3890
  %tobool = icmp eq i32 %1, 0, !dbg !7495
  %2 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !7498, !tbaa !3870
  br i1 %tobool, label %if.else, label %if.then.4, !dbg !7499

if.then.4:                                        ; preds = %if.then
  %call.i = tail call %struct._object* @PyErr_SetFromErrno(%struct._object* %2) #3, !dbg !7500
  br label %if.end.8, !dbg !7502

if.else:                                          ; preds = %if.then
  tail call void @PyErr_SetString(%struct._object* %2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.257, i64 0, i64 0)) #3, !dbg !7503
  br label %if.end.8

if.else.6:                                        ; preds = %entry
  %call7 = tail call %struct._object* @PyUnicode_DecodeFSDefault(i8* %call2) #3, !dbg !7504
  tail call void @llvm.dbg.value(metadata %struct._object* %call7, i64 0, metadata !2016, metadata !3839), !dbg !7486
  br label %if.end.8

if.end.8:                                         ; preds = %if.then.4, %if.else, %if.else.6
  %result.0 = phi %struct._object* [ null, %if.then.4 ], [ null, %if.else ], [ %call7, %if.else.6 ]
  store i32 %0, i32* %call, align 4, !dbg !7505, !tbaa !3890
  ret %struct._object* %result.0, !dbg !7506
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_kill(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %pid = alloca i32, align 4
  %sig = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2021, metadata !3839), !dbg !7507
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2022, metadata !3839), !dbg !7508
  %0 = bitcast i32* %pid to i8*, !dbg !7509
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !7509
  %1 = bitcast i32* %sig to i8*, !dbg !7510
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !7510
  tail call void @llvm.dbg.value(metadata i32* %pid, i64 0, metadata !2023, metadata !3839), !dbg !7511
  tail call void @llvm.dbg.value(metadata i32* %sig, i64 0, metadata !2024, metadata !3839), !dbg !7512
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.258, i64 0, i64 0), i32* nonnull %pid, i32* nonnull %sig) #3, !dbg !7513
  %tobool = icmp eq i32 %call, 0, !dbg !7513
  br i1 %tobool, label %cleanup, label %if.end, !dbg !7515

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %pid, i64 0, metadata !2023, metadata !3839), !dbg !7511
  %2 = load i32, i32* %pid, align 4, !dbg !7516, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %sig, i64 0, metadata !2024, metadata !3839), !dbg !7512
  %3 = load i32, i32* %sig, align 4, !dbg !7518, !tbaa !3890
  %call1 = call i32 @kill(i32 %2, i32 %3) #3, !dbg !7519
  %cmp = icmp eq i32 %call1, -1, !dbg !7520
  br i1 %cmp, label %if.then.2, label %if.end.4, !dbg !7521

if.then.2:                                        ; preds = %if.end
  %4 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !7522, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %4) #3, !dbg !7524
  br label %cleanup, !dbg !7525

if.end.4:                                         ; preds = %if.end
  %5 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !7526, !tbaa !3930
  %inc = add i64 %5, 1, !dbg !7526
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !7526, !tbaa !3930
  br label %cleanup, !dbg !7527

cleanup:                                          ; preds = %entry, %if.end.4, %if.then.2
  %retval.0 = phi %struct._object* [ %call.i, %if.then.2 ], [ @_Py_NoneStruct, %if.end.4 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !7528
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !7528
  ret %struct._object* %retval.0, !dbg !7528
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_killpg(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %sig = alloca i32, align 4
  %pgid = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2027, metadata !3839), !dbg !7529
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2028, metadata !3839), !dbg !7530
  %0 = bitcast i32* %sig to i8*, !dbg !7531
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !7531
  %1 = bitcast i32* %pgid to i8*, !dbg !7532
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !7532
  tail call void @llvm.dbg.value(metadata i32* %sig, i64 0, metadata !2029, metadata !3839), !dbg !7533
  tail call void @llvm.dbg.value(metadata i32* %pgid, i64 0, metadata !2030, metadata !3839), !dbg !7534
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.259, i64 0, i64 0), i32* nonnull %pgid, i32* nonnull %sig) #3, !dbg !7535
  %tobool = icmp eq i32 %call, 0, !dbg !7535
  br i1 %tobool, label %cleanup, label %if.end, !dbg !7537

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %pgid, i64 0, metadata !2030, metadata !3839), !dbg !7534
  %2 = load i32, i32* %pgid, align 4, !dbg !7538, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %sig, i64 0, metadata !2029, metadata !3839), !dbg !7533
  %3 = load i32, i32* %sig, align 4, !dbg !7540, !tbaa !3890
  %call1 = call i32 @killpg(i32 %2, i32 %3) #3, !dbg !7541
  %cmp = icmp eq i32 %call1, -1, !dbg !7542
  br i1 %cmp, label %if.then.2, label %if.end.4, !dbg !7543

if.then.2:                                        ; preds = %if.end
  %4 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !7544, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %4) #3, !dbg !7546
  br label %cleanup, !dbg !7547

if.end.4:                                         ; preds = %if.end
  %5 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !7548, !tbaa !3930
  %inc = add i64 %5, 1, !dbg !7548
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !7548, !tbaa !3930
  br label %cleanup, !dbg !7549

cleanup:                                          ; preds = %entry, %if.end.4, %if.then.2
  %retval.0 = phi %struct._object* [ %call.i, %if.then.2 ], [ @_Py_NoneStruct, %if.end.4 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !7550
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !7550
  ret %struct._object* %retval.0, !dbg !7550
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_setuid(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %uid = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2033, metadata !3839), !dbg !7551
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2034, metadata !3839), !dbg !7552
  %0 = bitcast i32* %uid to i8*, !dbg !7553
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !7553
  tail call void @llvm.dbg.value(metadata i32* %uid, i64 0, metadata !2035, metadata !3839), !dbg !7554
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.260, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @_Py_Uid_Converter, i32* nonnull %uid) #3, !dbg !7555
  %tobool = icmp eq i32 %call, 0, !dbg !7555
  br i1 %tobool, label %cleanup, label %if.end, !dbg !7557

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %uid, i64 0, metadata !2035, metadata !3839), !dbg !7554
  %1 = load i32, i32* %uid, align 4, !dbg !7558, !tbaa !3890
  %call1 = call i32 @setuid(i32 %1) #3, !dbg !7560
  %cmp = icmp slt i32 %call1, 0, !dbg !7561
  br i1 %cmp, label %if.then.2, label %if.end.4, !dbg !7562

if.then.2:                                        ; preds = %if.end
  %2 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !7563, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %2) #3, !dbg !7565
  br label %cleanup, !dbg !7566

if.end.4:                                         ; preds = %if.end
  %3 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !7567, !tbaa !3930
  %inc = add i64 %3, 1, !dbg !7567
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !7567, !tbaa !3930
  br label %cleanup, !dbg !7568

cleanup:                                          ; preds = %entry, %if.end.4, %if.then.2
  %retval.0 = phi %struct._object* [ %call.i, %if.then.2 ], [ @_Py_NoneStruct, %if.end.4 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !7569
  ret %struct._object* %retval.0, !dbg !7569
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_seteuid(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %euid = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2038, metadata !3839), !dbg !7570
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2039, metadata !3839), !dbg !7571
  %0 = bitcast i32* %euid to i8*, !dbg !7572
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !7572
  tail call void @llvm.dbg.value(metadata i32* %euid, i64 0, metadata !2040, metadata !3839), !dbg !7573
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.261, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @_Py_Uid_Converter, i32* nonnull %euid) #3, !dbg !7574
  %tobool = icmp eq i32 %call, 0, !dbg !7574
  br i1 %tobool, label %cleanup, label %if.end, !dbg !7576

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %euid, i64 0, metadata !2040, metadata !3839), !dbg !7573
  %1 = load i32, i32* %euid, align 4, !dbg !7577, !tbaa !3890
  %call1 = call i32 @seteuid(i32 %1) #3, !dbg !7579
  %cmp = icmp slt i32 %call1, 0, !dbg !7580
  br i1 %cmp, label %if.then.2, label %if.else, !dbg !7581

if.then.2:                                        ; preds = %if.end
  %2 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !7582, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %2) #3, !dbg !7585
  br label %cleanup, !dbg !7586

if.else:                                          ; preds = %if.end
  %3 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !7587, !tbaa !3930
  %inc = add i64 %3, 1, !dbg !7587
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !7587, !tbaa !3930
  br label %cleanup, !dbg !7589

cleanup:                                          ; preds = %entry, %if.else, %if.then.2
  %retval.0 = phi %struct._object* [ %call.i, %if.then.2 ], [ @_Py_NoneStruct, %if.else ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !7590
  ret %struct._object* %retval.0, !dbg !7590
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_setegid(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %egid = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2043, metadata !3839), !dbg !7591
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2044, metadata !3839), !dbg !7592
  %0 = bitcast i32* %egid to i8*, !dbg !7593
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !7593
  tail call void @llvm.dbg.value(metadata i32* %egid, i64 0, metadata !2045, metadata !3839), !dbg !7594
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.262, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @_Py_Gid_Converter, i32* nonnull %egid) #3, !dbg !7595
  %tobool = icmp eq i32 %call, 0, !dbg !7595
  br i1 %tobool, label %cleanup, label %if.end, !dbg !7597

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %egid, i64 0, metadata !2045, metadata !3839), !dbg !7594
  %1 = load i32, i32* %egid, align 4, !dbg !7598, !tbaa !3890
  %call1 = call i32 @setegid(i32 %1) #3, !dbg !7600
  %cmp = icmp slt i32 %call1, 0, !dbg !7601
  br i1 %cmp, label %if.then.2, label %if.else, !dbg !7602

if.then.2:                                        ; preds = %if.end
  %2 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !7603, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %2) #3, !dbg !7606
  br label %cleanup, !dbg !7607

if.else:                                          ; preds = %if.end
  %3 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !7608, !tbaa !3930
  %inc = add i64 %3, 1, !dbg !7608
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !7608, !tbaa !3930
  br label %cleanup, !dbg !7610

cleanup:                                          ; preds = %entry, %if.else, %if.then.2
  %retval.0 = phi %struct._object* [ %call.i, %if.then.2 ], [ @_Py_NoneStruct, %if.else ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !7611
  ret %struct._object* %retval.0, !dbg !7611
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_setreuid(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %ruid = alloca i32, align 4
  %euid = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2048, metadata !3839), !dbg !7612
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2049, metadata !3839), !dbg !7613
  %0 = bitcast i32* %ruid to i8*, !dbg !7614
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !7614
  %1 = bitcast i32* %euid to i8*, !dbg !7614
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !7614
  tail call void @llvm.dbg.value(metadata i32* %ruid, i64 0, metadata !2050, metadata !3839), !dbg !7615
  tail call void @llvm.dbg.value(metadata i32* %euid, i64 0, metadata !2051, metadata !3839), !dbg !7616
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.263, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @_Py_Uid_Converter, i32* nonnull %ruid, i32 (%struct._object*, i8*)* nonnull @_Py_Uid_Converter, i32* nonnull %euid) #3, !dbg !7617
  %tobool = icmp eq i32 %call, 0, !dbg !7617
  br i1 %tobool, label %cleanup, label %if.end, !dbg !7619

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %ruid, i64 0, metadata !2050, metadata !3839), !dbg !7615
  %2 = load i32, i32* %ruid, align 4, !dbg !7620, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %euid, i64 0, metadata !2051, metadata !3839), !dbg !7616
  %3 = load i32, i32* %euid, align 4, !dbg !7622, !tbaa !3890
  %call1 = call i32 @setreuid(i32 %2, i32 %3) #3, !dbg !7623
  %cmp = icmp slt i32 %call1, 0, !dbg !7624
  br i1 %cmp, label %if.then.2, label %if.else, !dbg !7625

if.then.2:                                        ; preds = %if.end
  %4 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !7626, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %4) #3, !dbg !7629
  br label %cleanup, !dbg !7630

if.else:                                          ; preds = %if.end
  %5 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !7631, !tbaa !3930
  %inc = add i64 %5, 1, !dbg !7631
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !7631, !tbaa !3930
  br label %cleanup, !dbg !7633

cleanup:                                          ; preds = %entry, %if.else, %if.then.2
  %retval.0 = phi %struct._object* [ %call.i, %if.then.2 ], [ @_Py_NoneStruct, %if.else ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !7634
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !7634
  ret %struct._object* %retval.0, !dbg !7634
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_setregid(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %rgid = alloca i32, align 4
  %egid = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2054, metadata !3839), !dbg !7635
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2055, metadata !3839), !dbg !7636
  %0 = bitcast i32* %rgid to i8*, !dbg !7637
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !7637
  %1 = bitcast i32* %egid to i8*, !dbg !7637
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !7637
  tail call void @llvm.dbg.value(metadata i32* %rgid, i64 0, metadata !2056, metadata !3839), !dbg !7638
  tail call void @llvm.dbg.value(metadata i32* %egid, i64 0, metadata !2057, metadata !3839), !dbg !7639
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.264, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @_Py_Gid_Converter, i32* nonnull %rgid, i32 (%struct._object*, i8*)* nonnull @_Py_Gid_Converter, i32* nonnull %egid) #3, !dbg !7640
  %tobool = icmp eq i32 %call, 0, !dbg !7640
  br i1 %tobool, label %cleanup, label %if.end, !dbg !7642

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %rgid, i64 0, metadata !2056, metadata !3839), !dbg !7638
  %2 = load i32, i32* %rgid, align 4, !dbg !7643, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %egid, i64 0, metadata !2057, metadata !3839), !dbg !7639
  %3 = load i32, i32* %egid, align 4, !dbg !7645, !tbaa !3890
  %call1 = call i32 @setregid(i32 %2, i32 %3) #3, !dbg !7646
  %cmp = icmp slt i32 %call1, 0, !dbg !7647
  br i1 %cmp, label %if.then.2, label %if.else, !dbg !7648

if.then.2:                                        ; preds = %if.end
  %4 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !7649, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %4) #3, !dbg !7652
  br label %cleanup, !dbg !7653

if.else:                                          ; preds = %if.end
  %5 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !7654, !tbaa !3930
  %inc = add i64 %5, 1, !dbg !7654
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !7654, !tbaa !3930
  br label %cleanup, !dbg !7656

cleanup:                                          ; preds = %entry, %if.else, %if.then.2
  %retval.0 = phi %struct._object* [ %call.i, %if.then.2 ], [ @_Py_NoneStruct, %if.else ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !7657
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !7657
  ret %struct._object* %retval.0, !dbg !7657
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_setgid(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %gid = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2060, metadata !3839), !dbg !7658
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2061, metadata !3839), !dbg !7659
  %0 = bitcast i32* %gid to i8*, !dbg !7660
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !7660
  tail call void @llvm.dbg.value(metadata i32* %gid, i64 0, metadata !2062, metadata !3839), !dbg !7661
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.265, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @_Py_Gid_Converter, i32* nonnull %gid) #3, !dbg !7662
  %tobool = icmp eq i32 %call, 0, !dbg !7662
  br i1 %tobool, label %cleanup, label %if.end, !dbg !7664

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %gid, i64 0, metadata !2062, metadata !3839), !dbg !7661
  %1 = load i32, i32* %gid, align 4, !dbg !7665, !tbaa !3890
  %call1 = call i32 @setgid(i32 %1) #3, !dbg !7667
  %cmp = icmp slt i32 %call1, 0, !dbg !7668
  br i1 %cmp, label %if.then.2, label %if.end.4, !dbg !7669

if.then.2:                                        ; preds = %if.end
  %2 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !7670, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %2) #3, !dbg !7672
  br label %cleanup, !dbg !7673

if.end.4:                                         ; preds = %if.end
  %3 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !7674, !tbaa !3930
  %inc = add i64 %3, 1, !dbg !7674
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !7674, !tbaa !3930
  br label %cleanup, !dbg !7675

cleanup:                                          ; preds = %entry, %if.end.4, %if.then.2
  %retval.0 = phi %struct._object* [ %call.i, %if.then.2 ], [ @_Py_NoneStruct, %if.end.4 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !7676
  ret %struct._object* %retval.0, !dbg !7676
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_setgroups(%struct._object* nocapture readnone %self, %struct._object* %groups) #0 {
entry:
  %grouplist = alloca [65536 x i32], align 16
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2065, metadata !3839), !dbg !7677
  tail call void @llvm.dbg.value(metadata %struct._object* %groups, i64 0, metadata !2066, metadata !3839), !dbg !7678
  %0 = bitcast [65536 x i32]* %grouplist to i8*, !dbg !7679
  call void @llvm.lifetime.start(i64 262144, i8* %0) #3, !dbg !7679
  tail call void @llvm.dbg.declare(metadata [65536 x i32]* %grouplist, metadata !2069, metadata !3839), !dbg !7680
  %call = tail call i32 @PySequence_Check(%struct._object* %groups) #3, !dbg !7681
  %tobool = icmp eq i32 %call, 0, !dbg !7681
  br i1 %tobool, label %if.then, label %if.end, !dbg !7683

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !7684, !tbaa !3870
  tail call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.266, i64 0, i64 0)) #3, !dbg !7686
  br label %cleanup.60, !dbg !7687

if.end:                                           ; preds = %entry
  %call1 = tail call i64 @PySequence_Size(%struct._object* %groups) #3, !dbg !7688
  %conv = trunc i64 %call1 to i32, !dbg !7688
  tail call void @llvm.dbg.value(metadata i32 %conv, i64 0, metadata !2068, metadata !3839), !dbg !7689
  %cmp = icmp sgt i32 %conv, 65536, !dbg !7690
  br i1 %cmp, label %if.then.3, label %for.cond.preheader, !dbg !7692

for.cond.preheader:                               ; preds = %if.end
  %cmp5.94 = icmp sgt i32 %conv, 0, !dbg !7693
  br i1 %cmp5.94, label %for.body.lr.ph, label %for.end, !dbg !7694

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %sext102 = shl i64 %call1, 32, !dbg !7694
  %2 = ashr exact i64 %sext102, 32, !dbg !7694
  br label %for.body, !dbg !7694

if.then.3:                                        ; preds = %if.end
  %3 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !7695, !tbaa !3870
  tail call void @PyErr_SetString(%struct._object* %3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.267, i64 0, i64 0)) #3, !dbg !7697
  br label %cleanup.60, !dbg !7698

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %call8 = tail call %struct._object* @PySequence_GetItem(%struct._object* %groups, i64 %indvars.iv) #3, !dbg !7699
  tail call void @llvm.dbg.value(metadata %struct._object* %call8, i64 0, metadata !2070, metadata !3839), !dbg !7700
  %tobool9 = icmp eq %struct._object* %call8, null, !dbg !7701
  br i1 %tobool9, label %cleanup.60.loopexit, label %if.end.11, !dbg !7703

if.end.11:                                        ; preds = %for.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call8, i64 0, i32 1, !dbg !7704
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7704, !tbaa !3875
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i64 0, i32 19, !dbg !7704
  %5 = load i64, i64* %tp_flags, align 8, !dbg !7704, !tbaa !5345
  %and = and i64 %5, 16777216, !dbg !7704
  %cmp12 = icmp eq i64 %and, 0, !dbg !7704
  br i1 %cmp12, label %if.then.14, label %if.else.20, !dbg !7705

if.then.14:                                       ; preds = %if.end.11
  %ob_type.lcssa = phi %struct._typeobject** [ %ob_type, %if.end.11 ]
  %call8.lcssa121 = phi %struct._object* [ %call8, %if.end.11 ]
  %6 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !7706, !tbaa !3870
  tail call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.268, i64 0, i64 0)) #3, !dbg !7707
  tail call void @llvm.dbg.value(metadata %struct._object* %call8, i64 0, metadata !2074, metadata !3839), !dbg !7708
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call8.lcssa121, i64 0, i32 0, !dbg !7710
  %7 = load i64, i64* %ob_refcnt, align 8, !dbg !7710, !tbaa !3930
  %dec = add i64 %7, -1, !dbg !7710
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7710, !tbaa !3930
  %cmp15 = icmp eq i64 %dec, 0, !dbg !7710
  br i1 %cmp15, label %if.else, label %cleanup.60, !dbg !7712

if.else:                                          ; preds = %if.then.14
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type.lcssa, align 8, !dbg !7713, !tbaa !3875
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i64 0, i32 4, !dbg !7713
  %9 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7713, !tbaa !3934
  tail call void %9(%struct._object* %call8.lcssa121) #3, !dbg !7713
  br label %cleanup.60

if.else.20:                                       ; preds = %if.end.11
  %arrayidx = getelementptr [65536 x i32], [65536 x i32]* %grouplist, i64 0, i64 %indvars.iv, !dbg !7715
  %10 = bitcast i32* %arrayidx to i8*, !dbg !7716
  %call21 = call i32 @_Py_Gid_Converter(%struct._object* %call8, i8* %10), !dbg !7717
  %tobool22 = icmp eq i32 %call21, 0, !dbg !7717
  %ob_refcnt26 = getelementptr inbounds %struct._object, %struct._object* %call8, i64 0, i32 0, !dbg !7718
  %11 = load i64, i64* %ob_refcnt26, align 8, !dbg !7718, !tbaa !3930
  %dec27 = add i64 %11, -1, !dbg !7718
  store i64 %dec27, i64* %ob_refcnt26, align 8, !dbg !7718, !tbaa !3930
  %cmp28 = icmp eq i64 %dec27, 0, !dbg !7718
  br i1 %tobool22, label %do.body.24, label %do.body.39, !dbg !7720

do.body.24:                                       ; preds = %if.else.20
  %cmp28.lcssa = phi i1 [ %cmp28, %if.else.20 ]
  %ob_type.lcssa124 = phi %struct._typeobject** [ %ob_type, %if.else.20 ]
  %call8.lcssa122 = phi %struct._object* [ %call8, %if.else.20 ]
  tail call void @llvm.dbg.value(metadata %struct._object* %call8, i64 0, metadata !2078, metadata !3839), !dbg !7721
  br i1 %cmp28.lcssa, label %if.else.31, label %cleanup.60, !dbg !7723

if.else.31:                                       ; preds = %do.body.24
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type.lcssa124, align 8, !dbg !7724, !tbaa !3875
  %tp_dealloc33 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i64 0, i32 4, !dbg !7724
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc33, align 8, !dbg !7724, !tbaa !3934
  tail call void %13(%struct._object* %call8.lcssa122) #3, !dbg !7724
  br label %cleanup.60

do.body.39:                                       ; preds = %if.else.20
  tail call void @llvm.dbg.value(metadata %struct._object* %call8, i64 0, metadata !2083, metadata !3839), !dbg !7726
  br i1 %cmp28, label %if.else.46, label %for.inc, !dbg !7728

if.else.46:                                       ; preds = %do.body.39
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7729, !tbaa !3875
  %tp_dealloc48 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i64 0, i32 4, !dbg !7729
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc48, align 8, !dbg !7729, !tbaa !3934
  tail call void %15(%struct._object* %call8) #3, !dbg !7729
  br label %for.inc

for.inc:                                          ; preds = %do.body.39, %if.else.46
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7694
  %cmp5 = icmp slt i64 %indvars.iv.next, %2, !dbg !7693
  br i1 %cmp5, label %for.body, label %for.end.loopexit, !dbg !7694

for.end.loopexit:                                 ; preds = %for.inc
  br label %for.end, !dbg !7732

for.end:                                          ; preds = %for.end.loopexit, %for.cond.preheader
  %sext = shl i64 %call1, 32, !dbg !7732
  %conv52 = ashr exact i64 %sext, 32, !dbg !7732
  %arraydecay = getelementptr inbounds [65536 x i32], [65536 x i32]* %grouplist, i64 0, i64 0, !dbg !7734
  %call53 = call i32 @setgroups(i64 %conv52, i32* %arraydecay) #3, !dbg !7735
  %cmp54 = icmp slt i32 %call53, 0, !dbg !7736
  br i1 %cmp54, label %if.then.56, label %if.end.58, !dbg !7737

if.then.56:                                       ; preds = %for.end
  %16 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !7738, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %16) #3, !dbg !7740
  br label %cleanup.60, !dbg !7741

if.end.58:                                        ; preds = %for.end
  %17 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !7742, !tbaa !3930
  %inc59 = add i64 %17, 1, !dbg !7742
  store i64 %inc59, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !7742, !tbaa !3930
  br label %cleanup.60, !dbg !7743

cleanup.60.loopexit:                              ; preds = %for.body
  br label %cleanup.60, !dbg !7744

cleanup.60:                                       ; preds = %cleanup.60.loopexit, %do.body.24, %if.then.14, %if.else.31, %if.else, %if.end.58, %if.then.56, %if.then.3, %if.then
  %retval.2 = phi %struct._object* [ null, %if.then.3 ], [ %call.i, %if.then.56 ], [ @_Py_NoneStruct, %if.end.58 ], [ null, %if.then ], [ null, %if.else ], [ null, %if.else.31 ], [ null, %if.then.14 ], [ null, %do.body.24 ], [ null, %cleanup.60.loopexit ]
  call void @llvm.lifetime.end(i64 262144, i8* %0) #3, !dbg !7744
  ret %struct._object* %retval.2, !dbg !7744
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_initgroups(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %oname = alloca %struct._object*, align 8
  %gid = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2087, metadata !3839), !dbg !7745
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2088, metadata !3839), !dbg !7746
  %0 = bitcast %struct._object** %oname to i8*, !dbg !7747
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !7747
  %1 = bitcast i32* %gid to i8*, !dbg !7748
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !7748
  tail call void @llvm.dbg.value(metadata %struct._object** %oname, i64 0, metadata !2089, metadata !3839), !dbg !7749
  tail call void @llvm.dbg.value(metadata i32* %gid, i64 0, metadata !2092, metadata !3839), !dbg !7750
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.269, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @PyUnicode_FSConverter, %struct._object** nonnull %oname, i32 (%struct._object*, i8*)* nonnull @_Py_Gid_Converter, i32* nonnull %gid) #3, !dbg !7751
  %tobool = icmp eq i32 %call, 0, !dbg !7751
  br i1 %tobool, label %cleanup, label %if.end, !dbg !7753

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct._object** %oname, i64 0, metadata !2089, metadata !3839), !dbg !7749
  %2 = bitcast %struct._object** %oname to %struct.PyBytesObject**, !dbg !7754
  %3 = load %struct.PyBytesObject*, %struct.PyBytesObject** %2, align 8, !dbg !7754, !tbaa !3870
  %arraydecay = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %3, i64 0, i32 2, i64 0, !dbg !7754
  call void @llvm.dbg.value(metadata i8* %arraydecay, i64 0, metadata !2090, metadata !3839), !dbg !7755
  call void @llvm.dbg.value(metadata i32* %gid, i64 0, metadata !2092, metadata !3839), !dbg !7750
  %4 = load i32, i32* %gid, align 4, !dbg !7756, !tbaa !3890
  %call1 = call i32 @initgroups(i8* %arraydecay, i32 %4) #3, !dbg !7757
  call void @llvm.dbg.value(metadata i32 %call1, i64 0, metadata !2091, metadata !3839), !dbg !7758
  call void @llvm.dbg.value(metadata %struct._object** %oname, i64 0, metadata !2089, metadata !3839), !dbg !7749
  %5 = load %struct._object*, %struct._object** %oname, align 8, !dbg !7759, !tbaa !3870
  call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !2093, metadata !3839), !dbg !7759
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 0, !dbg !7761
  %6 = load i64, i64* %ob_refcnt, align 8, !dbg !7761, !tbaa !3930
  %dec = add i64 %6, -1, !dbg !7761
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7761, !tbaa !3930
  %cmp = icmp eq i64 %dec, 0, !dbg !7761
  br i1 %cmp, label %if.else, label %if.end.3, !dbg !7763

if.else:                                          ; preds = %if.end
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 1, !dbg !7764
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7764, !tbaa !3875
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i64 0, i32 4, !dbg !7764
  %8 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7764, !tbaa !3934
  call void %8(%struct._object* %5) #3, !dbg !7764
  br label %if.end.3

if.end.3:                                         ; preds = %if.end, %if.else
  %cmp4 = icmp eq i32 %call1, -1, !dbg !7766
  br i1 %cmp4, label %if.then.5, label %if.end.7, !dbg !7768

if.then.5:                                        ; preds = %if.end.3
  %9 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !7769, !tbaa !3870
  %call6 = call %struct._object* @PyErr_SetFromErrno(%struct._object* %9) #3, !dbg !7770
  br label %cleanup, !dbg !7771

if.end.7:                                         ; preds = %if.end.3
  %10 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !7772, !tbaa !3930
  %inc = add i64 %10, 1, !dbg !7772
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !7772, !tbaa !3930
  br label %cleanup, !dbg !7773

cleanup:                                          ; preds = %entry, %if.end.7, %if.then.5
  %retval.0 = phi %struct._object* [ %call6, %if.then.5 ], [ @_Py_NoneStruct, %if.end.7 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !7774
  call void @llvm.lifetime.end(i64 8, i8* %0) #3, !dbg !7774
  ret %struct._object* %retval.0, !dbg !7774
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_getpgid(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %pid = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2097, metadata !3839), !dbg !7775
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2098, metadata !3839), !dbg !7776
  %0 = bitcast i32* %pid to i8*, !dbg !7777
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !7777
  tail call void @llvm.dbg.value(metadata i32* %pid, i64 0, metadata !2099, metadata !3839), !dbg !7778
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.270, i64 0, i64 0), i32* nonnull %pid) #3, !dbg !7779
  %tobool = icmp eq i32 %call, 0, !dbg !7779
  br i1 %tobool, label %cleanup, label %if.end, !dbg !7781

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %pid, i64 0, metadata !2099, metadata !3839), !dbg !7778
  %1 = load i32, i32* %pid, align 4, !dbg !7782, !tbaa !3890
  %call1 = call i32 @getpgid(i32 %1) #3, !dbg !7783
  call void @llvm.dbg.value(metadata i32 %call1, i64 0, metadata !2100, metadata !3839), !dbg !7784
  %cmp = icmp slt i32 %call1, 0, !dbg !7785
  br i1 %cmp, label %if.then.2, label %if.end.4, !dbg !7787

if.then.2:                                        ; preds = %if.end
  %2 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !7788, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %2) #3, !dbg !7790
  br label %cleanup, !dbg !7791

if.end.4:                                         ; preds = %if.end
  %conv = sext i32 %call1 to i64, !dbg !7792
  %call5 = call %struct._object* @PyLong_FromLong(i64 %conv) #3, !dbg !7793
  br label %cleanup, !dbg !7794

cleanup:                                          ; preds = %entry, %if.end.4, %if.then.2
  %retval.0 = phi %struct._object* [ %call.i, %if.then.2 ], [ %call5, %if.end.4 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !7795
  ret %struct._object* %retval.0, !dbg !7795
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_setpgrp(%struct._object* nocapture readnone %self, %struct._object* nocapture readnone %noargs) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2103, metadata !3839), !dbg !7796
  tail call void @llvm.dbg.value(metadata %struct._object* %noargs, i64 0, metadata !2104, metadata !3839), !dbg !7797
  %call = tail call i32 @setpgrp() #3, !dbg !7798
  %cmp = icmp slt i32 %call, 0, !dbg !7800
  br i1 %cmp, label %if.then, label %if.end, !dbg !7801

if.then:                                          ; preds = %entry
  %0 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !7802, !tbaa !3870
  %call.i = tail call %struct._object* @PyErr_SetFromErrno(%struct._object* %0) #3, !dbg !7804
  br label %return, !dbg !7805

if.end:                                           ; preds = %entry
  %1 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !7806, !tbaa !3930
  %inc = add i64 %1, 1, !dbg !7806
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !7806, !tbaa !3930
  br label %return, !dbg !7807

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct._object* [ %call.i, %if.then ], [ @_Py_NoneStruct, %if.end ]
  ret %struct._object* %retval.0, !dbg !7808
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_wait(%struct._object* nocapture readnone %self, %struct._object* nocapture readnone %noargs) #0 {
entry:
  %status = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2107, metadata !3839), !dbg !7809
  tail call void @llvm.dbg.value(metadata %struct._object* %noargs, i64 0, metadata !2108, metadata !3839), !dbg !7810
  %0 = bitcast i32* %status to i8*, !dbg !7811
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !7811
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !2110, metadata !3839), !dbg !7812
  store i32 0, i32* %status, align 4, !dbg !7813, !tbaa !3890
  %call = tail call %struct._ts* @PyEval_SaveThread() #3, !dbg !7814
  tail call void @llvm.dbg.value(metadata %struct._ts* %call, i64 0, metadata !2111, metadata !3839), !dbg !7814
  %1 = bitcast i32* %status to %union.wait*, !dbg !7815
  %call1 = call i32 @wait(%union.wait* %1) #3, !dbg !7816
  call void @llvm.dbg.value(metadata i32 %call1, i64 0, metadata !2109, metadata !3839), !dbg !7817
  call void @PyEval_RestoreThread(%struct._ts* %call) #3, !dbg !7818
  %cmp = icmp eq i32 %call1, -1, !dbg !7819
  br i1 %cmp, label %if.then, label %if.end, !dbg !7821

if.then:                                          ; preds = %entry
  %2 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !7822, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %2) #3, !dbg !7824
  br label %cleanup, !dbg !7825

if.end:                                           ; preds = %entry
  %conv = sext i32 %call1 to i64, !dbg !7826
  %call3 = call %struct._object* @PyLong_FromLong(i64 %conv) #3, !dbg !7827
  call void @llvm.dbg.value(metadata i32* %status, i64 0, metadata !2110, metadata !3839), !dbg !7812
  %3 = load i32, i32* %status, align 4, !dbg !7828, !tbaa !3890
  %call4 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.271, i64 0, i64 0), %struct._object* %call3, i32 %3) #3, !dbg !7829
  br label %cleanup, !dbg !7830

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %struct._object* [ %call.i, %if.then ], [ %call4, %if.end ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !7831
  ret %struct._object* %retval.0, !dbg !7831
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_wait3(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %options = alloca i32, align 4
  %ru = alloca %struct.rusage, align 8
  %status = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2115, metadata !3839), !dbg !7832
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2116, metadata !3839), !dbg !7833
  %0 = bitcast i32* %options to i8*, !dbg !7834
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !7834
  %1 = bitcast %struct.rusage* %ru to i8*, !dbg !7835
  call void @llvm.lifetime.start(i64 144, i8* %1) #3, !dbg !7835
  %2 = bitcast i32* %status to i8*, !dbg !7836
  call void @llvm.lifetime.start(i64 4, i8* %2) #3, !dbg !7836
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !2200, metadata !3839), !dbg !7837
  store i32 0, i32* %status, align 4, !dbg !7838, !tbaa !3890
  tail call void @llvm.dbg.value(metadata i32* %options, i64 0, metadata !2118, metadata !3839), !dbg !7839
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.272, i64 0, i64 0), i32* nonnull %options) #3, !dbg !7840
  %tobool = icmp eq i32 %call, 0, !dbg !7840
  br i1 %tobool, label %cleanup, label %if.end, !dbg !7842

if.end:                                           ; preds = %entry
  %call1 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !7843
  call void @llvm.dbg.value(metadata %struct._ts* %call1, i64 0, metadata !2201, metadata !3839), !dbg !7843
  %3 = bitcast i32* %status to %union.wait*, !dbg !7844
  call void @llvm.dbg.value(metadata i32* %options, i64 0, metadata !2118, metadata !3839), !dbg !7839
  %4 = load i32, i32* %options, align 4, !dbg !7845, !tbaa !3890
  call void @llvm.dbg.value(metadata %struct.rusage* %ru, i64 0, metadata !2119, metadata !3839), !dbg !7846
  %call2 = call i32 @wait3(%union.wait* %3, i32 %4, %struct.rusage* nonnull %ru) #3, !dbg !7847
  call void @llvm.dbg.value(metadata i32 %call2, i64 0, metadata !2117, metadata !3839), !dbg !7848
  call void @PyEval_RestoreThread(%struct._ts* %call1) #3, !dbg !7849
  call void @llvm.dbg.value(metadata i32* %status, i64 0, metadata !2200, metadata !3839), !dbg !7837
  %5 = load i32, i32* %status, align 4, !dbg !7850, !tbaa !3890
  call void @llvm.dbg.value(metadata %struct.rusage* %ru, i64 0, metadata !2119, metadata !3839), !dbg !7846
  %call3 = call fastcc %struct._object* @wait_helper(i32 %call2, i32 %5, %struct.rusage* nonnull %ru), !dbg !7851
  br label %cleanup, !dbg !7852

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct._object* [ %call3, %if.end ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %2) #3, !dbg !7853
  call void @llvm.lifetime.end(i64 144, i8* %1) #3, !dbg !7853
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !7853
  ret %struct._object* %retval.0, !dbg !7853
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_wait4(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %pid = alloca i32, align 4
  %options = alloca i32, align 4
  %ru = alloca %struct.rusage, align 8
  %status = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2223, metadata !3839), !dbg !7854
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2224, metadata !3839), !dbg !7855
  %0 = bitcast i32* %pid to i8*, !dbg !7856
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !7856
  %1 = bitcast i32* %options to i8*, !dbg !7857
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !7857
  %2 = bitcast %struct.rusage* %ru to i8*, !dbg !7858
  call void @llvm.lifetime.start(i64 144, i8* %2) #3, !dbg !7858
  %3 = bitcast i32* %status to i8*, !dbg !7859
  call void @llvm.lifetime.start(i64 4, i8* %3) #3, !dbg !7859
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !2228, metadata !3839), !dbg !7860
  store i32 0, i32* %status, align 4, !dbg !7861, !tbaa !3890
  tail call void @llvm.dbg.value(metadata i32* %pid, i64 0, metadata !2225, metadata !3839), !dbg !7862
  tail call void @llvm.dbg.value(metadata i32* %options, i64 0, metadata !2226, metadata !3839), !dbg !7863
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.276, i64 0, i64 0), i32* nonnull %pid, i32* nonnull %options) #3, !dbg !7864
  %tobool = icmp eq i32 %call, 0, !dbg !7864
  br i1 %tobool, label %cleanup, label %if.end, !dbg !7866

if.end:                                           ; preds = %entry
  %call1 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !7867
  call void @llvm.dbg.value(metadata %struct._ts* %call1, i64 0, metadata !2229, metadata !3839), !dbg !7867
  call void @llvm.dbg.value(metadata i32* %pid, i64 0, metadata !2225, metadata !3839), !dbg !7862
  %4 = load i32, i32* %pid, align 4, !dbg !7868, !tbaa !3890
  %5 = bitcast i32* %status to %union.wait*, !dbg !7869
  call void @llvm.dbg.value(metadata i32* %options, i64 0, metadata !2226, metadata !3839), !dbg !7863
  %6 = load i32, i32* %options, align 4, !dbg !7870, !tbaa !3890
  call void @llvm.dbg.value(metadata %struct.rusage* %ru, i64 0, metadata !2227, metadata !3839), !dbg !7871
  %call2 = call i32 @wait4(i32 %4, %union.wait* %5, i32 %6, %struct.rusage* nonnull %ru) #3, !dbg !7872
  call void @llvm.dbg.value(metadata i32 %call2, i64 0, metadata !2225, metadata !3839), !dbg !7862
  store i32 %call2, i32* %pid, align 4, !dbg !7873, !tbaa !3890
  call void @PyEval_RestoreThread(%struct._ts* %call1) #3, !dbg !7874
  call void @llvm.dbg.value(metadata i32* %pid, i64 0, metadata !2225, metadata !3839), !dbg !7862
  %7 = load i32, i32* %pid, align 4, !dbg !7875, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %status, i64 0, metadata !2228, metadata !3839), !dbg !7860
  %8 = load i32, i32* %status, align 4, !dbg !7876, !tbaa !3890
  call void @llvm.dbg.value(metadata %struct.rusage* %ru, i64 0, metadata !2227, metadata !3839), !dbg !7871
  %call3 = call fastcc %struct._object* @wait_helper(i32 %7, i32 %8, %struct.rusage* nonnull %ru), !dbg !7877
  br label %cleanup, !dbg !7878

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct._object* [ %call3, %if.end ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %3) #3, !dbg !7879
  call void @llvm.lifetime.end(i64 144, i8* %2) #3, !dbg !7879
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !7879
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !7879
  ret %struct._object* %retval.0, !dbg !7879
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_waitid(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %idtype = alloca i32, align 4
  %id = alloca i32, align 4
  %options = alloca i32, align 4
  %si = alloca %struct.siginfo_t, align 8
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2233, metadata !3839), !dbg !7880
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2234, metadata !3839), !dbg !7881
  %0 = bitcast i32* %idtype to i8*, !dbg !7882
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !7882
  %1 = bitcast i32* %id to i8*, !dbg !7883
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !7883
  %2 = bitcast i32* %options to i8*, !dbg !7884
  call void @llvm.lifetime.start(i64 4, i8* %2) #3, !dbg !7884
  %3 = bitcast %struct.siginfo_t* %si to i8*, !dbg !7885
  call void @llvm.lifetime.start(i64 128, i8* %3) #3, !dbg !7885
  %si_pid = getelementptr inbounds %struct.siginfo_t, %struct.siginfo_t* %si, i64 0, i32 3, i32 0, i32 0, !dbg !7886
  store i32 0, i32* %si_pid, align 8, !dbg !7887, !tbaa !7888
  tail call void @llvm.dbg.value(metadata i32* %idtype, i64 0, metadata !2236, metadata !3839), !dbg !7890
  tail call void @llvm.dbg.value(metadata i32* %id, i64 0, metadata !2238, metadata !3839), !dbg !7891
  tail call void @llvm.dbg.value(metadata i32* %options, i64 0, metadata !2241, metadata !3839), !dbg !7892
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.277, i64 0, i64 0), i32* nonnull %idtype, i32* nonnull %id, i32* nonnull %options) #3, !dbg !7893
  %tobool = icmp eq i32 %call, 0, !dbg !7893
  br i1 %tobool, label %cleanup, label %if.end, !dbg !7895

if.end:                                           ; preds = %entry
  %call1 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !7896
  call void @llvm.dbg.value(metadata %struct._ts* %call1, i64 0, metadata !2303, metadata !3839), !dbg !7896
  call void @llvm.dbg.value(metadata i32* %idtype, i64 0, metadata !2236, metadata !3839), !dbg !7890
  %4 = load i32, i32* %idtype, align 4, !dbg !7897, !tbaa !5379
  call void @llvm.dbg.value(metadata i32* %id, i64 0, metadata !2238, metadata !3839), !dbg !7891
  %5 = load i32, i32* %id, align 4, !dbg !7898, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %options, i64 0, metadata !2241, metadata !3839), !dbg !7892
  %6 = load i32, i32* %options, align 4, !dbg !7899, !tbaa !3890
  call void @llvm.dbg.value(metadata %struct.siginfo_t* %si, i64 0, metadata !2243, metadata !3839), !dbg !7900
  %call2 = call i32 @waitid(i32 %4, i32 %5, %struct.siginfo_t* nonnull %si, i32 %6) #3, !dbg !7901
  call void @llvm.dbg.value(metadata i32 %call2, i64 0, metadata !2242, metadata !3839), !dbg !7902
  call void @PyEval_RestoreThread(%struct._ts* %call1) #3, !dbg !7903
  %cmp = icmp eq i32 %call2, -1, !dbg !7904
  br i1 %cmp, label %if.then.3, label %if.end.5, !dbg !7906

if.then.3:                                        ; preds = %if.end
  %7 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !7907, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %7) #3, !dbg !7909
  br label %cleanup, !dbg !7910

if.end.5:                                         ; preds = %if.end
  %8 = load i32, i32* %si_pid, align 8, !dbg !7911, !tbaa !7888
  %cmp9 = icmp eq i32 %8, 0, !dbg !7913
  br i1 %cmp9, label %if.then.10, label %if.end.11, !dbg !7914

if.then.10:                                       ; preds = %if.end.5
  %9 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !7915, !tbaa !3930
  %inc = add i64 %9, 1, !dbg !7915
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !7915, !tbaa !3930
  br label %cleanup, !dbg !7915

if.end.11:                                        ; preds = %if.end.5
  %call12 = call %struct._object* @PyStructSequence_New(%struct._typeobject* nonnull @WaitidResultType) #3, !dbg !7916
  call void @llvm.dbg.value(metadata %struct._object* %call12, i64 0, metadata !2235, metadata !3839), !dbg !7917
  %tobool13 = icmp eq %struct._object* %call12, null, !dbg !7918
  br i1 %tobool13, label %cleanup, label %if.end.15, !dbg !7920

if.end.15:                                        ; preds = %if.end.11
  %10 = load i32, i32* %si_pid, align 8, !dbg !7921, !tbaa !7888
  %conv = sext i32 %10 to i64, !dbg !7921
  %call19 = call %struct._object* @PyLong_FromLong(i64 %conv) #3, !dbg !7921
  %ob_item = getelementptr inbounds %struct._object, %struct._object* %call12, i64 1, i32 1, !dbg !7921
  %arrayidx = bitcast %struct._typeobject** %ob_item to %struct._object**, !dbg !7921
  store %struct._object* %call19, %struct._object** %arrayidx, align 8, !dbg !7921, !tbaa !3870
  %11 = getelementptr inbounds %struct.siginfo_t, %struct.siginfo_t* %si, i64 0, i32 3, i32 0, i32 1, !dbg !7922
  %12 = load i32, i32* %11, align 4, !dbg !7922, !tbaa !7923
  call void @llvm.dbg.value(metadata i32 %12, i64 0, metadata !693, metadata !3839) #3, !dbg !7924
  %cmp.i = icmp eq i32 %12, -1, !dbg !7926
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !7927

if.then.i:                                        ; preds = %if.end.15
  %call.i.64 = call %struct._object* @PyLong_FromLong(i64 -1) #3, !dbg !7928
  br label %_PyLong_FromUid.exit, !dbg !7929

if.end.i:                                         ; preds = %if.end.15
  %conv.i = zext i32 %12 to i64, !dbg !7930
  %call1.i = call %struct._object* @PyLong_FromUnsignedLong(i64 %conv.i) #3, !dbg !7931
  br label %_PyLong_FromUid.exit, !dbg !7932

_PyLong_FromUid.exit:                             ; preds = %if.then.i, %if.end.i
  %retval.0.i = phi %struct._object* [ %call.i.64, %if.then.i ], [ %call1.i, %if.end.i ], !dbg !7922
  %arrayidx24 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 1, !dbg !7922
  %13 = bitcast %struct._typeobject** %arrayidx24 to %struct._object**, !dbg !7922
  store %struct._object* %retval.0.i, %struct._object** %13, align 8, !dbg !7922, !tbaa !3870
  %si_signo = getelementptr inbounds %struct.siginfo_t, %struct.siginfo_t* %si, i64 0, i32 0, !dbg !7933
  %14 = load i32, i32* %si_signo, align 8, !dbg !7933, !tbaa !7934
  %conv25 = sext i32 %14 to i64, !dbg !7933
  %call26 = call %struct._object* @PyLong_FromLong(i64 %conv25) #3, !dbg !7933
  %arrayidx28 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 2, !dbg !7933
  %15 = bitcast %struct._typeobject** %arrayidx28 to %struct._object**, !dbg !7933
  store %struct._object* %call26, %struct._object** %15, align 8, !dbg !7933, !tbaa !3870
  %si_status = getelementptr inbounds %struct.siginfo_t, %struct.siginfo_t* %si, i64 0, i32 3, i32 0, i32 2, !dbg !7936
  %16 = load i32, i32* %si_status, align 8, !dbg !7936, !tbaa !7937
  %conv30 = sext i32 %16 to i64, !dbg !7936
  %call31 = call %struct._object* @PyLong_FromLong(i64 %conv30) #3, !dbg !7936
  %arrayidx33 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 3, !dbg !7936
  %17 = bitcast %struct._typeobject** %arrayidx33 to %struct._object**, !dbg !7936
  store %struct._object* %call31, %struct._object** %17, align 8, !dbg !7936, !tbaa !3870
  %si_code = getelementptr inbounds %struct.siginfo_t, %struct.siginfo_t* %si, i64 0, i32 2, !dbg !7939
  %18 = load i32, i32* %si_code, align 8, !dbg !7939, !tbaa !7940
  %conv34 = sext i32 %18 to i64, !dbg !7939
  %call35 = call %struct._object* @PyLong_FromLong(i64 %conv34) #3, !dbg !7939
  %arrayidx37 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 4, !dbg !7939
  %19 = bitcast %struct._typeobject** %arrayidx37 to %struct._object**, !dbg !7939
  store %struct._object* %call35, %struct._object** %19, align 8, !dbg !7939, !tbaa !3870
  %call38 = call %struct._object* @PyErr_Occurred() #3, !dbg !7941
  %tobool39 = icmp eq %struct._object* %call38, null, !dbg !7941
  br i1 %tobool39, label %cleanup, label %do.body, !dbg !7942

do.body:                                          ; preds = %_PyLong_FromUid.exit
  call void @llvm.dbg.value(metadata %struct._object* %call12, i64 0, metadata !2305, metadata !3839), !dbg !7943
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call12, i64 0, i32 0, !dbg !7945
  %20 = load i64, i64* %ob_refcnt, align 8, !dbg !7945, !tbaa !3930
  %dec = add i64 %20, -1, !dbg !7945
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7945, !tbaa !3930
  %cmp41 = icmp eq i64 %dec, 0, !dbg !7945
  br i1 %cmp41, label %if.else, label %cleanup, !dbg !7947

if.else:                                          ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call12, i64 0, i32 1, !dbg !7948
  %21 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7948, !tbaa !3875
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %21, i64 0, i32 4, !dbg !7948
  %22 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7948, !tbaa !3934
  call void %22(%struct._object* %call12) #3, !dbg !7948
  br label %cleanup

cleanup:                                          ; preds = %_PyLong_FromUid.exit, %if.else, %do.body, %if.end.11, %entry, %if.then.10, %if.then.3
  %retval.0 = phi %struct._object* [ %call.i, %if.then.3 ], [ @_Py_NoneStruct, %if.then.10 ], [ null, %entry ], [ null, %if.end.11 ], [ null, %do.body ], [ null, %if.else ], [ %call12, %_PyLong_FromUid.exit ]
  call void @llvm.lifetime.end(i64 128, i8* %3) #3, !dbg !7950
  call void @llvm.lifetime.end(i64 4, i8* %2) #3, !dbg !7950
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !7950
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !7950
  ret %struct._object* %retval.0, !dbg !7950
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_waitpid(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %pid = alloca i32, align 4
  %options = alloca i32, align 4
  %status = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2311, metadata !3839), !dbg !7951
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2312, metadata !3839), !dbg !7952
  %0 = bitcast i32* %pid to i8*, !dbg !7953
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !7953
  %1 = bitcast i32* %options to i8*, !dbg !7954
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !7954
  %2 = bitcast i32* %status to i8*, !dbg !7955
  call void @llvm.lifetime.start(i64 4, i8* %2) #3, !dbg !7955
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !2315, metadata !3839), !dbg !7956
  store i32 0, i32* %status, align 4, !dbg !7957, !tbaa !3890
  tail call void @llvm.dbg.value(metadata i32* %pid, i64 0, metadata !2313, metadata !3839), !dbg !7958
  tail call void @llvm.dbg.value(metadata i32* %options, i64 0, metadata !2314, metadata !3839), !dbg !7959
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.278, i64 0, i64 0), i32* nonnull %pid, i32* nonnull %options) #3, !dbg !7960
  %tobool = icmp eq i32 %call, 0, !dbg !7960
  br i1 %tobool, label %cleanup, label %if.end, !dbg !7962

if.end:                                           ; preds = %entry
  %call1 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !7963
  call void @llvm.dbg.value(metadata %struct._ts* %call1, i64 0, metadata !2316, metadata !3839), !dbg !7963
  call void @llvm.dbg.value(metadata i32* %pid, i64 0, metadata !2313, metadata !3839), !dbg !7958
  %3 = load i32, i32* %pid, align 4, !dbg !7964, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %options, i64 0, metadata !2314, metadata !3839), !dbg !7959
  %4 = load i32, i32* %options, align 4, !dbg !7965, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %status, i64 0, metadata !2315, metadata !3839), !dbg !7956
  %call2 = call i32 @waitpid(i32 %3, i32* nonnull %status, i32 %4) #3, !dbg !7966
  call void @llvm.dbg.value(metadata i32 %call2, i64 0, metadata !2313, metadata !3839), !dbg !7958
  store i32 %call2, i32* %pid, align 4, !dbg !7967, !tbaa !3890
  call void @PyEval_RestoreThread(%struct._ts* %call1) #3, !dbg !7968
  call void @llvm.dbg.value(metadata i32* %pid, i64 0, metadata !2313, metadata !3839), !dbg !7958
  %5 = load i32, i32* %pid, align 4, !dbg !7969, !tbaa !3890
  %cmp = icmp eq i32 %5, -1, !dbg !7971
  br i1 %cmp, label %if.then.3, label %if.end.5, !dbg !7972

if.then.3:                                        ; preds = %if.end
  %6 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !7973, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %6) #3, !dbg !7975
  br label %cleanup, !dbg !7976

if.end.5:                                         ; preds = %if.end
  %conv = sext i32 %5 to i64, !dbg !7977
  %call6 = call %struct._object* @PyLong_FromLong(i64 %conv) #3, !dbg !7978
  call void @llvm.dbg.value(metadata i32* %status, i64 0, metadata !2315, metadata !3839), !dbg !7956
  %7 = load i32, i32* %status, align 4, !dbg !7979, !tbaa !3890
  %call7 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.271, i64 0, i64 0), %struct._object* %call6, i32 %7) #3, !dbg !7980
  br label %cleanup, !dbg !7981

cleanup:                                          ; preds = %entry, %if.end.5, %if.then.3
  %retval.0 = phi %struct._object* [ %call.i, %if.then.3 ], [ %call7, %if.end.5 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %2) #3, !dbg !7982
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !7982
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !7982
  ret %struct._object* %retval.0, !dbg !7982
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_getsid(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %pid = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2320, metadata !3839), !dbg !7983
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2321, metadata !3839), !dbg !7984
  %0 = bitcast i32* %pid to i8*, !dbg !7985
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !7985
  tail call void @llvm.dbg.value(metadata i32* %pid, i64 0, metadata !2322, metadata !3839), !dbg !7986
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.279, i64 0, i64 0), i32* nonnull %pid) #3, !dbg !7987
  %tobool = icmp eq i32 %call, 0, !dbg !7987
  br i1 %tobool, label %cleanup, label %if.end, !dbg !7989

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %pid, i64 0, metadata !2322, metadata !3839), !dbg !7986
  %1 = load i32, i32* %pid, align 4, !dbg !7990, !tbaa !3890
  %call1 = call i32 @getsid(i32 %1) #3, !dbg !7991
  call void @llvm.dbg.value(metadata i32 %call1, i64 0, metadata !2323, metadata !3839), !dbg !7992
  %cmp = icmp slt i32 %call1, 0, !dbg !7993
  br i1 %cmp, label %if.then.2, label %if.end.4, !dbg !7995

if.then.2:                                        ; preds = %if.end
  %2 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !7996, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %2) #3, !dbg !7998
  br label %cleanup, !dbg !7999

if.end.4:                                         ; preds = %if.end
  %conv = sext i32 %call1 to i64, !dbg !8000
  %call5 = call %struct._object* @PyLong_FromLong(i64 %conv) #3, !dbg !8001
  br label %cleanup, !dbg !8002

cleanup:                                          ; preds = %entry, %if.end.4, %if.then.2
  %retval.0 = phi %struct._object* [ %call.i, %if.then.2 ], [ %call5, %if.end.4 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !8003
  ret %struct._object* %retval.0, !dbg !8003
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_setsid(%struct._object* nocapture readnone %self, %struct._object* nocapture readnone %noargs) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2326, metadata !3839), !dbg !8004
  tail call void @llvm.dbg.value(metadata %struct._object* %noargs, i64 0, metadata !2327, metadata !3839), !dbg !8005
  %call = tail call i32 @setsid() #3, !dbg !8006
  %cmp = icmp slt i32 %call, 0, !dbg !8008
  br i1 %cmp, label %if.then, label %if.end, !dbg !8009

if.then:                                          ; preds = %entry
  %0 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !8010, !tbaa !3870
  %call.i = tail call %struct._object* @PyErr_SetFromErrno(%struct._object* %0) #3, !dbg !8012
  br label %return, !dbg !8013

if.end:                                           ; preds = %entry
  %1 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !8014, !tbaa !3930
  %inc = add i64 %1, 1, !dbg !8014
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !8014, !tbaa !3930
  br label %return, !dbg !8015

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct._object* [ %call.i, %if.then ], [ @_Py_NoneStruct, %if.end ]
  ret %struct._object* %retval.0, !dbg !8016
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_setpgid(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %pid = alloca i32, align 4
  %pgrp = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2330, metadata !3839), !dbg !8017
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2331, metadata !3839), !dbg !8018
  %0 = bitcast i32* %pid to i8*, !dbg !8019
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !8019
  %1 = bitcast i32* %pgrp to i8*, !dbg !8020
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !8020
  tail call void @llvm.dbg.value(metadata i32* %pid, i64 0, metadata !2332, metadata !3839), !dbg !8021
  tail call void @llvm.dbg.value(metadata i32* %pgrp, i64 0, metadata !2333, metadata !3839), !dbg !8022
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.280, i64 0, i64 0), i32* nonnull %pid, i32* nonnull %pgrp) #3, !dbg !8023
  %tobool = icmp eq i32 %call, 0, !dbg !8023
  br i1 %tobool, label %cleanup, label %if.end, !dbg !8025

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %pid, i64 0, metadata !2332, metadata !3839), !dbg !8021
  %2 = load i32, i32* %pid, align 4, !dbg !8026, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %pgrp, i64 0, metadata !2333, metadata !3839), !dbg !8022
  %3 = load i32, i32* %pgrp, align 4, !dbg !8028, !tbaa !3890
  %call1 = call i32 @setpgid(i32 %2, i32 %3) #3, !dbg !8029
  %cmp = icmp slt i32 %call1, 0, !dbg !8030
  br i1 %cmp, label %if.then.2, label %if.end.4, !dbg !8031

if.then.2:                                        ; preds = %if.end
  %4 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !8032, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %4) #3, !dbg !8034
  br label %cleanup, !dbg !8035

if.end.4:                                         ; preds = %if.end
  %5 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !8036, !tbaa !3930
  %inc = add i64 %5, 1, !dbg !8036
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !8036, !tbaa !3930
  br label %cleanup, !dbg !8037

cleanup:                                          ; preds = %entry, %if.end.4, %if.then.2
  %retval.0 = phi %struct._object* [ %call.i, %if.then.2 ], [ @_Py_NoneStruct, %if.end.4 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !8038
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !8038
  ret %struct._object* %retval.0, !dbg !8038
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_tcgetpgrp(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %fd = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2336, metadata !3839), !dbg !8039
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2337, metadata !3839), !dbg !8040
  %0 = bitcast i32* %fd to i8*, !dbg !8041
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !8041
  tail call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2338, metadata !3839), !dbg !8042
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.281, i64 0, i64 0), i32* nonnull %fd) #3, !dbg !8043
  %tobool = icmp eq i32 %call, 0, !dbg !8043
  br i1 %tobool, label %cleanup, label %if.end, !dbg !8045

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2338, metadata !3839), !dbg !8042
  %1 = load i32, i32* %fd, align 4, !dbg !8046, !tbaa !3890
  %call1 = call i32 @tcgetpgrp(i32 %1) #3, !dbg !8047
  call void @llvm.dbg.value(metadata i32 %call1, i64 0, metadata !2339, metadata !3839), !dbg !8048
  %cmp = icmp slt i32 %call1, 0, !dbg !8049
  br i1 %cmp, label %if.then.2, label %if.end.4, !dbg !8051

if.then.2:                                        ; preds = %if.end
  %2 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !8052, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %2) #3, !dbg !8054
  br label %cleanup, !dbg !8055

if.end.4:                                         ; preds = %if.end
  %conv = sext i32 %call1 to i64, !dbg !8056
  %call5 = call %struct._object* @PyLong_FromLong(i64 %conv) #3, !dbg !8057
  br label %cleanup, !dbg !8058

cleanup:                                          ; preds = %entry, %if.end.4, %if.then.2
  %retval.0 = phi %struct._object* [ %call.i, %if.then.2 ], [ %call5, %if.end.4 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !8059
  ret %struct._object* %retval.0, !dbg !8059
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_tcsetpgrp(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %fd = alloca i32, align 4
  %pgid = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2342, metadata !3839), !dbg !8060
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2343, metadata !3839), !dbg !8061
  %0 = bitcast i32* %fd to i8*, !dbg !8062
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !8062
  %1 = bitcast i32* %pgid to i8*, !dbg !8063
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !8063
  tail call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2344, metadata !3839), !dbg !8064
  tail call void @llvm.dbg.value(metadata i32* %pgid, i64 0, metadata !2345, metadata !3839), !dbg !8065
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.282, i64 0, i64 0), i32* nonnull %fd, i32* nonnull %pgid) #3, !dbg !8066
  %tobool = icmp eq i32 %call, 0, !dbg !8066
  br i1 %tobool, label %cleanup, label %if.end, !dbg !8068

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2344, metadata !3839), !dbg !8064
  %2 = load i32, i32* %fd, align 4, !dbg !8069, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %pgid, i64 0, metadata !2345, metadata !3839), !dbg !8065
  %3 = load i32, i32* %pgid, align 4, !dbg !8071, !tbaa !3890
  %call1 = call i32 @tcsetpgrp(i32 %2, i32 %3) #3, !dbg !8072
  %cmp = icmp slt i32 %call1, 0, !dbg !8073
  br i1 %cmp, label %if.then.2, label %if.end.4, !dbg !8074

if.then.2:                                        ; preds = %if.end
  %4 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !8075, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %4) #3, !dbg !8077
  br label %cleanup, !dbg !8078

if.end.4:                                         ; preds = %if.end
  %5 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !8079, !tbaa !3930
  %inc = add i64 %5, 1, !dbg !8079
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !8079, !tbaa !3930
  br label %cleanup, !dbg !8080

cleanup:                                          ; preds = %entry, %if.end.4, %if.then.2
  %retval.0 = phi %struct._object* [ %call.i, %if.then.2 ], [ @_Py_NoneStruct, %if.end.4 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !8081
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !8081
  ret %struct._object* %retval.0, !dbg !8081
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_open(%struct._object* nocapture readnone %self, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  %path = alloca %struct.path_t, align 8
  %flags = alloca i32, align 4
  %mode = alloca i32, align 4
  %dir_fd = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2348, metadata !3839), !dbg !8082
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2349, metadata !3839), !dbg !8083
  tail call void @llvm.dbg.value(metadata %struct._object* %kwargs, i64 0, metadata !2350, metadata !3839), !dbg !8084
  %0 = bitcast %struct.path_t* %path to i8*, !dbg !8085
  call void @llvm.lifetime.start(i64 72, i8* %0) #3, !dbg !8085
  %1 = bitcast i32* %flags to i8*, !dbg !8086
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !8086
  %2 = bitcast i32* %mode to i8*, !dbg !8087
  call void @llvm.lifetime.start(i64 4, i8* %2) #3, !dbg !8087
  tail call void @llvm.dbg.value(metadata i32 511, i64 0, metadata !2353, metadata !3839), !dbg !8088
  store i32 511, i32* %mode, align 4, !dbg !8088, !tbaa !3890
  %3 = bitcast i32* %dir_fd to i8*, !dbg !8089
  call void @llvm.lifetime.start(i64 4, i8* %3) #3, !dbg !8089
  tail call void @llvm.dbg.value(metadata i32 -100, i64 0, metadata !2354, metadata !3839), !dbg !8090
  store i32 -100, i32* %dir_fd, align 4, !dbg !8090, !tbaa !3890
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !2356, metadata !3839), !dbg !8091
  tail call void @llvm.dbg.value(metadata i32* @_Py_open_cloexec_works, i64 0, metadata !2357, metadata !3839), !dbg !8092
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 72, i32 8, i1 false), !dbg !8093
  %function_name = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 0, !dbg !8094
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.105, i64 0, i64 0), i8** %function_name, align 8, !dbg !8095, !tbaa !4743
  tail call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !2351, metadata !3839), !dbg !8096
  tail call void @llvm.dbg.value(metadata i32* %flags, i64 0, metadata !2352, metadata !3839), !dbg !8097
  tail call void @llvm.dbg.value(metadata i32* %mode, i64 0, metadata !2353, metadata !3839), !dbg !8088
  tail call void @llvm.dbg.value(metadata i32* %dir_fd, i64 0, metadata !2354, metadata !3839), !dbg !8090
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %args, %struct._object* %kwargs, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.284, i64 0, i64 0), i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @posix_open.keywords, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @path_converter, %struct.path_t* nonnull %path, i32* nonnull %flags, i32* nonnull %mode, i32 (%struct._object*, i8*)* nonnull @dir_fd_converter, i32* nonnull %dir_fd) #3, !dbg !8098
  %tobool = icmp eq i32 %call, 0, !dbg !8098
  br i1 %tobool, label %cleanup, label %if.end, !dbg !8100

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %flags, i64 0, metadata !2352, metadata !3839), !dbg !8097
  %4 = load i32, i32* %flags, align 4, !dbg !8101, !tbaa !3890
  %or = or i32 %4, 524288, !dbg !8101
  call void @llvm.dbg.value(metadata i32 %or, i64 0, metadata !2352, metadata !3839), !dbg !8097
  store i32 %or, i32* %flags, align 4, !dbg !8101, !tbaa !3890
  %call1 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !8102
  call void @llvm.dbg.value(metadata %struct._ts* %call1, i64 0, metadata !2358, metadata !3839), !dbg !8102
  call void @llvm.dbg.value(metadata i32* %dir_fd, i64 0, metadata !2354, metadata !3839), !dbg !8090
  %5 = load i32, i32* %dir_fd, align 4, !dbg !8103, !tbaa !3890
  %cmp = icmp eq i32 %5, -100, !dbg !8105
  %narrow4 = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 5, !dbg !8106
  %6 = load i8*, i8** %narrow4, align 8, !dbg !8106, !tbaa !4761
  call void @llvm.dbg.value(metadata i32* %flags, i64 0, metadata !2352, metadata !3839), !dbg !8097
  %7 = load i32, i32* %flags, align 4, !dbg !8107, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %mode, i64 0, metadata !2353, metadata !3839), !dbg !8088
  %8 = load i32, i32* %mode, align 4, !dbg !8108, !tbaa !3890
  br i1 %cmp, label %if.else, label %if.then.2, !dbg !8109

if.then.2:                                        ; preds = %if.end
  %call3 = call i32 (i32, i8*, i32, ...) @openat64(i32 %5, i8* %6, i32 %7, i32 %8) #3, !dbg !8110
  call void @llvm.dbg.value(metadata i32 %call3, i64 0, metadata !2355, metadata !3839), !dbg !8111
  br label %if.end.6, !dbg !8112

if.else:                                          ; preds = %if.end
  %call5 = call i32 (i8*, i32, ...) @open64(i8* %6, i32 %7, i32 %8) #3, !dbg !8113
  call void @llvm.dbg.value(metadata i32 %call5, i64 0, metadata !2355, metadata !3839), !dbg !8111
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.2
  %fd.0 = phi i32 [ %call3, %if.then.2 ], [ %call5, %if.else ]
  call void @PyEval_RestoreThread(%struct._ts* %call1) #3, !dbg !8114
  %cmp7 = icmp eq i32 %fd.0, -1, !dbg !8115
  br i1 %cmp7, label %if.then.8, label %if.end.10, !dbg !8117

if.then.8:                                        ; preds = %if.end.6
  %9 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !8118, !tbaa !3870
  %object = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 8, !dbg !8120
  %10 = load %struct._object*, %struct._object** %object, align 8, !dbg !8120, !tbaa !4767
  %call9 = call %struct._object* @PyErr_SetFromErrnoWithFilenameObject(%struct._object* %9, %struct._object* %10) #3, !dbg !8121
  br label %exit, !dbg !8122

if.end.10:                                        ; preds = %if.end.6
  %call11 = call i32 @_Py_set_inheritable(i32 %fd.0, i32 0, i32* nonnull @_Py_open_cloexec_works) #3, !dbg !8123
  %cmp12 = icmp slt i32 %call11, 0, !dbg !8125
  br i1 %cmp12, label %if.then.13, label %if.end.15, !dbg !8126

if.then.13:                                       ; preds = %if.end.10
  %call14 = call i32 @close(i32 %fd.0) #3, !dbg !8127
  br label %exit, !dbg !8129

if.end.15:                                        ; preds = %if.end.10
  %conv = sext i32 %fd.0 to i64, !dbg !8130
  %call16 = call %struct._object* @PyLong_FromLong(i64 %conv) #3, !dbg !8131
  call void @llvm.dbg.value(metadata %struct._object* %call16, i64 0, metadata !2356, metadata !3839), !dbg !8091
  br label %exit, !dbg !8132

exit:                                             ; preds = %if.end.15, %if.then.13, %if.then.8
  %return_value.0 = phi %struct._object* [ null, %if.then.8 ], [ null, %if.then.13 ], [ %call16, %if.end.15 ]
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !2351, metadata !3839), !dbg !8096
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1054, metadata !3839) #3, !dbg !8133
  %cleanup.i = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 9, !dbg !8135
  %11 = load %struct._object*, %struct._object** %cleanup.i, align 8, !dbg !8135, !tbaa !4634
  %tobool.i = icmp eq %struct._object* %11, null, !dbg !8136
  br i1 %tobool.i, label %cleanup, label %if.then.2.i, !dbg !8137

if.then.2.i:                                      ; preds = %exit
  call void @llvm.dbg.value(metadata %struct._object* %11, i64 0, metadata !1055, metadata !3839) #3, !dbg !8138
  store %struct._object* null, %struct._object** %cleanup.i, align 8, !dbg !8139, !tbaa !4634
  call void @llvm.dbg.value(metadata %struct._object* %11, i64 0, metadata !1059, metadata !3839) #3, !dbg !8140
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %11, i64 0, i32 0, !dbg !8141
  %12 = load i64, i64* %ob_refcnt.i, align 8, !dbg !8141, !tbaa !3930
  %dec.i = add i64 %12, -1, !dbg !8141
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !8141, !tbaa !3930
  %cmp5.i = icmp eq i64 %dec.i, 0, !dbg !8141
  br i1 %cmp5.i, label %if.else.i, label %cleanup, !dbg !8142

if.else.i:                                        ; preds = %if.then.2.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %11, i64 0, i32 1, !dbg !8143
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !8143, !tbaa !3875
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i64 0, i32 4, !dbg !8143
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !8143, !tbaa !3934
  call void %14(%struct._object* %11) #3, !dbg !8143
  br label %cleanup, !dbg !8144

cleanup:                                          ; preds = %if.else.i, %if.then.2.i, %exit, %entry
  %retval.0 = phi %struct._object* [ null, %entry ], [ %return_value.0, %exit ], [ %return_value.0, %if.then.2.i ], [ %return_value.0, %if.else.i ]
  call void @llvm.lifetime.end(i64 4, i8* %3) #3, !dbg !8145
  call void @llvm.lifetime.end(i64 4, i8* %2) #3, !dbg !8145
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !8145
  call void @llvm.lifetime.end(i64 72, i8* %0) #3, !dbg !8145
  ret %struct._object* %retval.0, !dbg !8145
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_close_(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %fd = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2362, metadata !3839), !dbg !8146
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2363, metadata !3839), !dbg !8147
  %0 = bitcast i32* %fd to i8*, !dbg !8148
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !8148
  tail call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2364, metadata !3839), !dbg !8149
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.285, i64 0, i64 0), i32* nonnull %fd) #3, !dbg !8150
  %tobool = icmp eq i32 %call, 0, !dbg !8150
  br i1 %tobool, label %cleanup, label %if.end, !dbg !8152

if.end:                                           ; preds = %entry
  %call1 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !8153
  call void @llvm.dbg.value(metadata %struct._ts* %call1, i64 0, metadata !2366, metadata !3839), !dbg !8153
  call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2364, metadata !3839), !dbg !8149
  %1 = load i32, i32* %fd, align 4, !dbg !8154, !tbaa !3890
  %call2 = call i32 @close(i32 %1) #3, !dbg !8155
  call void @llvm.dbg.value(metadata i32 %call2, i64 0, metadata !2365, metadata !3839), !dbg !8156
  call void @PyEval_RestoreThread(%struct._ts* %call1) #3, !dbg !8157
  %cmp = icmp slt i32 %call2, 0, !dbg !8158
  br i1 %cmp, label %if.then.3, label %if.end.5, !dbg !8160

if.then.3:                                        ; preds = %if.end
  %2 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !8161, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %2) #3, !dbg !8163
  br label %cleanup, !dbg !8164

if.end.5:                                         ; preds = %if.end
  %3 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !8165, !tbaa !3930
  %inc = add i64 %3, 1, !dbg !8165
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !8165, !tbaa !3930
  br label %cleanup, !dbg !8166

cleanup:                                          ; preds = %entry, %if.end.5, %if.then.3
  %retval.0 = phi %struct._object* [ %call.i, %if.then.3 ], [ @_Py_NoneStruct, %if.end.5 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !8167
  ret %struct._object* %retval.0, !dbg !8167
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_closerange(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %fd_from = alloca i32, align 4
  %fd_to = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2370, metadata !3839), !dbg !8168
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2371, metadata !3839), !dbg !8169
  %0 = bitcast i32* %fd_from to i8*, !dbg !8170
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !8170
  %1 = bitcast i32* %fd_to to i8*, !dbg !8170
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !8170
  tail call void @llvm.dbg.value(metadata i32* %fd_from, i64 0, metadata !2372, metadata !3839), !dbg !8171
  tail call void @llvm.dbg.value(metadata i32* %fd_to, i64 0, metadata !2373, metadata !3839), !dbg !8172
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.286, i64 0, i64 0), i32* nonnull %fd_from, i32* nonnull %fd_to) #3, !dbg !8173
  %tobool = icmp eq i32 %call, 0, !dbg !8173
  br i1 %tobool, label %cleanup, label %if.end, !dbg !8175

if.end:                                           ; preds = %entry
  %call1 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !8176
  call void @llvm.dbg.value(metadata %struct._ts* %call1, i64 0, metadata !2375, metadata !3839), !dbg !8176
  call void @llvm.dbg.value(metadata i32* %fd_from, i64 0, metadata !2372, metadata !3839), !dbg !8171
  %2 = load i32, i32* %fd_from, align 4, !dbg !8177, !tbaa !3890
  call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !2374, metadata !3839), !dbg !8179
  call void @llvm.dbg.value(metadata i32* %fd_to, i64 0, metadata !2373, metadata !3839), !dbg !8172
  %3 = load i32, i32* %fd_to, align 4, !dbg !8180, !tbaa !3890
  %cmp.10 = icmp slt i32 %2, %3, !dbg !8182
  br i1 %cmp.10, label %for.body.preheader, label %for.end, !dbg !8183

for.body.preheader:                               ; preds = %if.end
  br label %for.body, !dbg !8184

for.body:                                         ; preds = %for.body.preheader, %for.body
  %i.011 = phi i32 [ %inc, %for.body ], [ %2, %for.body.preheader ]
  %call2 = call i32 @close(i32 %i.011) #3, !dbg !8184
  %inc = add i32 %i.011, 1, !dbg !8186
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !2374, metadata !3839), !dbg !8179
  call void @llvm.dbg.value(metadata i32* %fd_to, i64 0, metadata !2373, metadata !3839), !dbg !8172
  %4 = load i32, i32* %fd_to, align 4, !dbg !8180, !tbaa !3890
  %cmp = icmp slt i32 %inc, %4, !dbg !8182
  br i1 %cmp, label %for.body, label %for.end.loopexit, !dbg !8183

for.end.loopexit:                                 ; preds = %for.body
  br label %for.end, !dbg !8187

for.end:                                          ; preds = %for.end.loopexit, %if.end
  call void @PyEval_RestoreThread(%struct._ts* %call1) #3, !dbg !8187
  %5 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !8188, !tbaa !3930
  %inc3 = add i64 %5, 1, !dbg !8188
  store i64 %inc3, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !8188, !tbaa !3930
  br label %cleanup, !dbg !8188

cleanup:                                          ; preds = %entry, %for.end
  %retval.0 = phi %struct._object* [ @_Py_NoneStruct, %for.end ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !8189
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !8189
  ret %struct._object* %retval.0, !dbg !8189
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @device_encoding(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %fd = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2379, metadata !3839), !dbg !8190
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2380, metadata !3839), !dbg !8191
  %0 = bitcast i32* %fd to i8*, !dbg !8192
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !8192
  tail call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2381, metadata !3839), !dbg !8193
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.287, i64 0, i64 0), i32* nonnull %fd) #3, !dbg !8194
  %tobool = icmp eq i32 %call, 0, !dbg !8194
  br i1 %tobool, label %cleanup, label %if.end, !dbg !8196

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2381, metadata !3839), !dbg !8193
  %1 = load i32, i32* %fd, align 4, !dbg !8197, !tbaa !3890
  %call1 = call %struct._object* @_Py_device_encoding(i32 %1) #3, !dbg !8198
  br label %cleanup, !dbg !8199

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct._object* [ %call1, %if.end ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !8200
  ret %struct._object* %retval.0, !dbg !8200
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_dup(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %fd = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2384, metadata !3839), !dbg !8201
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2385, metadata !3839), !dbg !8202
  %0 = bitcast i32* %fd to i8*, !dbg !8203
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !8203
  tail call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2386, metadata !3839), !dbg !8204
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.288, i64 0, i64 0), i32* nonnull %fd) #3, !dbg !8205
  %tobool = icmp eq i32 %call, 0, !dbg !8205
  br i1 %tobool, label %cleanup, label %if.end, !dbg !8207

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2386, metadata !3839), !dbg !8204
  %1 = load i32, i32* %fd, align 4, !dbg !8208, !tbaa !3890
  %call1 = call i32 @_Py_dup(i32 %1) #3, !dbg !8209
  call void @llvm.dbg.value(metadata i32 %call1, i64 0, metadata !2386, metadata !3839), !dbg !8204
  store i32 %call1, i32* %fd, align 4, !dbg !8210, !tbaa !3890
  %cmp = icmp eq i32 %call1, -1, !dbg !8211
  br i1 %cmp, label %cleanup, label %if.end.3, !dbg !8213

if.end.3:                                         ; preds = %if.end
  %conv = sext i32 %call1 to i64, !dbg !8214
  %call4 = call %struct._object* @PyLong_FromLong(i64 %conv) #3, !dbg !8215
  br label %cleanup, !dbg !8216

cleanup:                                          ; preds = %if.end, %entry, %if.end.3
  %retval.0 = phi %struct._object* [ %call4, %if.end.3 ], [ null, %entry ], [ null, %if.end ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !8217
  ret %struct._object* %retval.0, !dbg !8217
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_dup2(%struct._object* nocapture readnone %self, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  %fd = alloca i32, align 4
  %fd2 = alloca i32, align 4
  %inheritable = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2389, metadata !3839), !dbg !8218
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2390, metadata !3839), !dbg !8219
  tail call void @llvm.dbg.value(metadata %struct._object* %kwargs, i64 0, metadata !2391, metadata !3839), !dbg !8220
  %0 = bitcast i32* %fd to i8*, !dbg !8221
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !8221
  %1 = bitcast i32* %fd2 to i8*, !dbg !8221
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !8221
  %2 = bitcast i32* %inheritable to i8*, !dbg !8222
  call void @llvm.lifetime.start(i64 4, i8* %2) #3, !dbg !8222
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !2394, metadata !3839), !dbg !8223
  store i32 1, i32* %inheritable, align 4, !dbg !8223, !tbaa !3890
  tail call void @llvm.dbg.value(metadata i32 -1, i64 0, metadata !2396, metadata !3839), !dbg !8224
  tail call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2392, metadata !3839), !dbg !8225
  tail call void @llvm.dbg.value(metadata i32* %fd2, i64 0, metadata !2393, metadata !3839), !dbg !8226
  tail call void @llvm.dbg.value(metadata i32* %inheritable, i64 0, metadata !2394, metadata !3839), !dbg !8223
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %args, %struct._object* %kwargs, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.292, i64 0, i64 0), i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @posix_dup2.keywords, i64 0, i64 0), i32* nonnull %fd, i32* nonnull %fd2, i32* nonnull %inheritable) #3, !dbg !8227
  %tobool = icmp eq i32 %call, 0, !dbg !8227
  br i1 %tobool, label %cleanup, label %if.end, !dbg !8229

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %inheritable, i64 0, metadata !2394, metadata !3839), !dbg !8223
  %3 = load i32, i32* %inheritable, align 4, !dbg !8230, !tbaa !3890
  %tobool1 = icmp eq i32 %3, 0, !dbg !8230
  br i1 %tobool1, label %if.then.2, label %if.then.21, !dbg !8231

if.then.2:                                        ; preds = %if.end
  %call3 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !8232
  call void @llvm.dbg.value(metadata %struct._ts* %call3, i64 0, metadata !2397, metadata !3839), !dbg !8232
  call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2392, metadata !3839), !dbg !8225
  %4 = load i32, i32* %fd, align 4, !dbg !8233, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %fd2, i64 0, metadata !2393, metadata !3839), !dbg !8226
  %5 = load i32, i32* %fd2, align 4, !dbg !8234, !tbaa !3890
  %call4 = call i32 @dup3(i32 %4, i32 %5, i32 524288) #3, !dbg !8235
  call void @llvm.dbg.value(metadata i32 %call4, i64 0, metadata !2395, metadata !3839), !dbg !8236
  call void @PyEval_RestoreThread(%struct._ts* %call3) #3, !dbg !8237
  %cmp5 = icmp slt i32 %call4, 0, !dbg !8238
  br i1 %cmp5, label %if.then.8, label %if.end.17, !dbg !8240

if.then.8:                                        ; preds = %if.then.2
  %call9 = tail call i32* @__errno_location() #1, !dbg !8241
  %6 = load i32, i32* %call9, align 4, !dbg !8241, !tbaa !3890
  %cmp10 = icmp eq i32 %6, 38, !dbg !8244
  br i1 %cmp10, label %if.then.21, label %if.then.13, !dbg !8245

if.then.13:                                       ; preds = %if.then.8
  %7 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !8246, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %7) #3, !dbg !8249
  br label %cleanup, !dbg !8250

if.end.17:                                        ; preds = %if.then.2
  %.pre = load i32, i32* %inheritable, align 4, !dbg !8251, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %inheritable, i64 0, metadata !2394, metadata !3839), !dbg !8223
  %tobool18 = icmp eq i32 %.pre, 0, !dbg !8251
  br i1 %tobool18, label %if.end.38, label %if.then.21, !dbg !8252

if.then.21:                                       ; preds = %if.end, %if.then.8, %if.end.17
  %call23 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !8253
  call void @llvm.dbg.value(metadata %struct._ts* %call23, i64 0, metadata !2401, metadata !3839), !dbg !8253
  call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2392, metadata !3839), !dbg !8225
  %8 = load i32, i32* %fd, align 4, !dbg !8254, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %fd2, i64 0, metadata !2393, metadata !3839), !dbg !8226
  %9 = load i32, i32* %fd2, align 4, !dbg !8255, !tbaa !3890
  %call24 = call i32 @dup2(i32 %8, i32 %9) #3, !dbg !8256
  call void @llvm.dbg.value(metadata i32 %call24, i64 0, metadata !2395, metadata !3839), !dbg !8236
  call void @PyEval_RestoreThread(%struct._ts* %call23) #3, !dbg !8257
  %cmp25 = icmp slt i32 %call24, 0, !dbg !8258
  br i1 %cmp25, label %if.then.27, label %if.end.29, !dbg !8260

if.then.27:                                       ; preds = %if.then.21
  %10 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !8261, !tbaa !3870
  %call.i.52 = call %struct._object* @PyErr_SetFromErrno(%struct._object* %10) #3, !dbg !8263
  br label %cleanup, !dbg !8264

if.end.29:                                        ; preds = %if.then.21
  call void @llvm.dbg.value(metadata i32* %inheritable, i64 0, metadata !2394, metadata !3839), !dbg !8223
  %11 = load i32, i32* %inheritable, align 4, !dbg !8265, !tbaa !3890
  %tobool30 = icmp eq i32 %11, 0, !dbg !8265
  br i1 %tobool30, label %land.lhs.true.31, label %if.end.38, !dbg !8267

land.lhs.true.31:                                 ; preds = %if.end.29
  call void @llvm.dbg.value(metadata i32* %fd2, i64 0, metadata !2393, metadata !3839), !dbg !8226
  %12 = load i32, i32* %fd2, align 4, !dbg !8268, !tbaa !3890
  %call32 = call i32 @_Py_set_inheritable(i32 %12, i32 0, i32* null) #3, !dbg !8270
  %cmp33 = icmp slt i32 %call32, 0, !dbg !8271
  br i1 %cmp33, label %if.then.35, label %if.end.38, !dbg !8272

if.then.35:                                       ; preds = %land.lhs.true.31
  call void @llvm.dbg.value(metadata i32* %fd2, i64 0, metadata !2393, metadata !3839), !dbg !8226
  %13 = load i32, i32* %fd2, align 4, !dbg !8273, !tbaa !3890
  %call36 = call i32 @close(i32 %13) #3, !dbg !8275
  br label %cleanup, !dbg !8276

if.end.38:                                        ; preds = %if.end.17, %if.end.29, %land.lhs.true.31
  %14 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !8277, !tbaa !3930
  %inc = add i64 %14, 1, !dbg !8277
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !8277, !tbaa !3930
  br label %cleanup, !dbg !8278

cleanup:                                          ; preds = %entry, %if.end.38, %if.then.35, %if.then.27, %if.then.13
  %retval.0 = phi %struct._object* [ %call.i, %if.then.13 ], [ %call.i.52, %if.then.27 ], [ @_Py_NoneStruct, %if.end.38 ], [ null, %if.then.35 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %2) #3, !dbg !8279
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !8279
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !8279
  ret %struct._object* %retval.0, !dbg !8279
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_lockf(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %fd = alloca i32, align 4
  %cmd = alloca i32, align 4
  %len = alloca i64, align 8
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2407, metadata !3839), !dbg !8280
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2408, metadata !3839), !dbg !8281
  %0 = bitcast i32* %fd to i8*, !dbg !8282
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !8282
  %1 = bitcast i32* %cmd to i8*, !dbg !8282
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !8282
  %2 = bitcast i64* %len to i8*, !dbg !8283
  call void @llvm.lifetime.start(i64 8, i8* %2) #3, !dbg !8283
  tail call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2409, metadata !3839), !dbg !8284
  tail call void @llvm.dbg.value(metadata i32* %cmd, i64 0, metadata !2410, metadata !3839), !dbg !8285
  tail call void @llvm.dbg.value(metadata i64* %len, i64 0, metadata !2412, metadata !3839), !dbg !8286
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.293, i64 0, i64 0), i32* nonnull %fd, i32* nonnull %cmd, i32 (%struct._object*, i8*)* nonnull @_parse_off_t, i64* nonnull %len) #3, !dbg !8287
  %tobool = icmp eq i32 %call, 0, !dbg !8287
  br i1 %tobool, label %cleanup, label %if.end, !dbg !8289

if.end:                                           ; preds = %entry
  %call1 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !8290
  call void @llvm.dbg.value(metadata %struct._ts* %call1, i64 0, metadata !2413, metadata !3839), !dbg !8290
  call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2409, metadata !3839), !dbg !8284
  %3 = load i32, i32* %fd, align 4, !dbg !8291, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %cmd, i64 0, metadata !2410, metadata !3839), !dbg !8285
  %4 = load i32, i32* %cmd, align 4, !dbg !8292, !tbaa !3890
  call void @llvm.dbg.value(metadata i64* %len, i64 0, metadata !2412, metadata !3839), !dbg !8286
  %5 = load i64, i64* %len, align 8, !dbg !8293, !tbaa !4482
  %call2 = call i32 @lockf64(i32 %3, i32 %4, i64 %5) #3, !dbg !8294
  call void @llvm.dbg.value(metadata i32 %call2, i64 0, metadata !2411, metadata !3839), !dbg !8295
  call void @PyEval_RestoreThread(%struct._ts* %call1) #3, !dbg !8296
  %cmp = icmp slt i32 %call2, 0, !dbg !8297
  br i1 %cmp, label %if.then.3, label %if.end.5, !dbg !8299

if.then.3:                                        ; preds = %if.end
  %6 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !8300, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %6) #3, !dbg !8302
  br label %cleanup, !dbg !8303

if.end.5:                                         ; preds = %if.end
  %7 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !8304, !tbaa !3930
  %inc = add i64 %7, 1, !dbg !8304
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !8304, !tbaa !3930
  br label %cleanup, !dbg !8304

cleanup:                                          ; preds = %entry, %if.end.5, %if.then.3
  %retval.0 = phi %struct._object* [ %call.i, %if.then.3 ], [ @_Py_NoneStruct, %if.end.5 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 8, i8* %2) #3, !dbg !8305
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !8305
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !8305
  ret %struct._object* %retval.0, !dbg !8305
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_lseek(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %fd = alloca i32, align 4
  %how = alloca i32, align 4
  %posobj = alloca %struct._object*, align 8
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2421, metadata !3839), !dbg !8306
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2422, metadata !3839), !dbg !8307
  %0 = bitcast i32* %fd to i8*, !dbg !8308
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !8308
  %1 = bitcast i32* %how to i8*, !dbg !8308
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !8308
  %2 = bitcast %struct._object** %posobj to i8*, !dbg !8309
  call void @llvm.lifetime.start(i64 8, i8* %2) #3, !dbg !8309
  tail call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2423, metadata !3839), !dbg !8310
  tail call void @llvm.dbg.value(metadata i32* %how, i64 0, metadata !2424, metadata !3839), !dbg !8311
  tail call void @llvm.dbg.value(metadata %struct._object** %posobj, i64 0, metadata !2427, metadata !3839), !dbg !8312
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.294, i64 0, i64 0), i32* nonnull %fd, %struct._object** nonnull %posobj, i32* nonnull %how) #3, !dbg !8313
  %tobool = icmp eq i32 %call, 0, !dbg !8313
  br i1 %tobool, label %cleanup, label %if.end, !dbg !8315

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %how, i64 0, metadata !2424, metadata !3839), !dbg !8311
  %3 = load i32, i32* %how, align 4, !dbg !8316, !tbaa !3890
  switch i32 %3, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb.1
    i32 2, label %sw.bb.2
  ], !dbg !8317

sw.bb:                                            ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !2424, metadata !3839), !dbg !8311
  store i32 0, i32* %how, align 4, !dbg !8318, !tbaa !3890
  br label %sw.epilog, !dbg !8320

sw.bb.1:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !2424, metadata !3839), !dbg !8311
  store i32 1, i32* %how, align 4, !dbg !8321, !tbaa !3890
  br label %sw.epilog, !dbg !8322

sw.bb.2:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 2, i64 0, metadata !2424, metadata !3839), !dbg !8311
  store i32 2, i32* %how, align 4, !dbg !8323, !tbaa !3890
  br label %sw.epilog, !dbg !8324

sw.epilog:                                        ; preds = %if.end, %sw.bb.2, %sw.bb.1, %sw.bb
  call void @llvm.dbg.value(metadata %struct._object** %posobj, i64 0, metadata !2427, metadata !3839), !dbg !8312
  %4 = load %struct._object*, %struct._object** %posobj, align 8, !dbg !8325, !tbaa !3870
  %call3 = call i64 @PyLong_AsLong(%struct._object* %4) #3, !dbg !8326
  call void @llvm.dbg.value(metadata i64 %call3, i64 0, metadata !2425, metadata !3839), !dbg !8327
  %call4 = call %struct._object* @PyErr_Occurred() #3, !dbg !8328
  %tobool5 = icmp eq %struct._object* %call4, null, !dbg !8328
  br i1 %tobool5, label %if.end.7, label %cleanup, !dbg !8330

if.end.7:                                         ; preds = %sw.epilog
  %call8 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !8331
  call void @llvm.dbg.value(metadata %struct._ts* %call8, i64 0, metadata !2428, metadata !3839), !dbg !8331
  call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2423, metadata !3839), !dbg !8310
  %5 = load i32, i32* %fd, align 4, !dbg !8332, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %how, i64 0, metadata !2424, metadata !3839), !dbg !8311
  %6 = load i32, i32* %how, align 4, !dbg !8333, !tbaa !3890
  %call9 = call i64 @lseek64(i32 %5, i64 %call3, i32 %6) #3, !dbg !8334
  call void @llvm.dbg.value(metadata i64 %call9, i64 0, metadata !2426, metadata !3839), !dbg !8335
  call void @PyEval_RestoreThread(%struct._ts* %call8) #3, !dbg !8336
  %cmp = icmp slt i64 %call9, 0, !dbg !8337
  br i1 %cmp, label %if.then.10, label %if.end.12, !dbg !8339

if.then.10:                                       ; preds = %if.end.7
  %7 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !8340, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %7) #3, !dbg !8342
  br label %cleanup, !dbg !8343

if.end.12:                                        ; preds = %if.end.7
  %call13 = call %struct._object* @PyLong_FromLong(i64 %call9) #3, !dbg !8344
  br label %cleanup, !dbg !8345

cleanup:                                          ; preds = %sw.epilog, %entry, %if.end.12, %if.then.10
  %retval.0 = phi %struct._object* [ %call.i, %if.then.10 ], [ %call13, %if.end.12 ], [ null, %entry ], [ null, %sw.epilog ]
  call void @llvm.lifetime.end(i64 8, i8* %2) #3, !dbg !8346
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !8346
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !8346
  ret %struct._object* %retval.0, !dbg !8346
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_read(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %fd = alloca i32, align 4
  %size = alloca i32, align 4
  %buffer = alloca %struct._object*, align 8
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2432, metadata !3839), !dbg !8347
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2433, metadata !3839), !dbg !8348
  %0 = bitcast i32* %fd to i8*, !dbg !8349
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !8349
  %1 = bitcast i32* %size to i8*, !dbg !8349
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !8349
  %2 = bitcast %struct._object** %buffer to i8*, !dbg !8350
  call void @llvm.lifetime.start(i64 8, i8* %2) #3, !dbg !8350
  tail call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2434, metadata !3839), !dbg !8351
  tail call void @llvm.dbg.value(metadata i32* %size, i64 0, metadata !2435, metadata !3839), !dbg !8352
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.295, i64 0, i64 0), i32* nonnull %fd, i32* nonnull %size) #3, !dbg !8353
  %tobool = icmp eq i32 %call, 0, !dbg !8353
  br i1 %tobool, label %cleanup, label %if.end, !dbg !8355

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %size, i64 0, metadata !2435, metadata !3839), !dbg !8352
  %3 = load i32, i32* %size, align 4, !dbg !8356, !tbaa !3890
  %cmp = icmp slt i32 %3, 0, !dbg !8358
  br i1 %cmp, label %if.then.1, label %if.end.4, !dbg !8359

if.then.1:                                        ; preds = %if.end
  %call2 = tail call i32* @__errno_location() #1, !dbg !8360
  store i32 22, i32* %call2, align 4, !dbg !8362, !tbaa !3890
  %4 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !8363, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %4) #3, !dbg !8365
  br label %cleanup, !dbg !8366

if.end.4:                                         ; preds = %if.end
  %conv = sext i32 %3 to i64, !dbg !8367
  %call5 = call %struct._object* @PyBytes_FromStringAndSize(i8* null, i64 %conv) #3, !dbg !8368
  call void @llvm.dbg.value(metadata %struct._object* %call5, i64 0, metadata !2437, metadata !3839), !dbg !8369
  store %struct._object* %call5, %struct._object** %buffer, align 8, !dbg !8370, !tbaa !3870
  %cmp6 = icmp eq %struct._object* %call5, null, !dbg !8371
  br i1 %cmp6, label %cleanup, label %if.end.9, !dbg !8373

if.end.9:                                         ; preds = %if.end.4
  %call10 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !8374
  call void @llvm.dbg.value(metadata %struct._ts* %call10, i64 0, metadata !2438, metadata !3839), !dbg !8374
  call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2434, metadata !3839), !dbg !8351
  %5 = load i32, i32* %fd, align 4, !dbg !8375, !tbaa !3890
  call void @llvm.dbg.value(metadata %struct._object** %buffer, i64 0, metadata !2437, metadata !3839), !dbg !8369
  %arraydecay = getelementptr inbounds %struct._object, %struct._object* %call5, i64 2, !dbg !8376
  %6 = bitcast %struct._object* %arraydecay to i8*, !dbg !8376
  call void @llvm.dbg.value(metadata i32* %size, i64 0, metadata !2435, metadata !3839), !dbg !8352
  %7 = load i32, i32* %size, align 4, !dbg !8377, !tbaa !3890
  %conv11 = sext i32 %7 to i64, !dbg !8377
  %call12 = call i64 @read(i32 %5, i8* %6, i64 %conv11) #3, !dbg !8378
  call void @llvm.dbg.value(metadata i64 %call12, i64 0, metadata !2436, metadata !3839), !dbg !8379
  call void @PyEval_RestoreThread(%struct._ts* %call10) #3, !dbg !8380
  %cmp13 = icmp slt i64 %call12, 0, !dbg !8381
  br i1 %cmp13, label %do.body, label %if.end.21, !dbg !8382

do.body:                                          ; preds = %if.end.9
  call void @llvm.dbg.value(metadata %struct._object** %buffer, i64 0, metadata !2437, metadata !3839), !dbg !8369
  %8 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !8383, !tbaa !3870
  call void @llvm.dbg.value(metadata %struct._object* %8, i64 0, metadata !2440, metadata !3839), !dbg !8383
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i64 0, i32 0, !dbg !8385
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !8385, !tbaa !3930
  %dec = add i64 %9, -1, !dbg !8385
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !8385, !tbaa !3930
  %cmp16 = icmp eq i64 %dec, 0, !dbg !8385
  br i1 %cmp16, label %if.else, label %if.end.19, !dbg !8387

if.else:                                          ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %8, i64 0, i32 1, !dbg !8388
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8388, !tbaa !3875
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i64 0, i32 4, !dbg !8388
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8388, !tbaa !3934
  call void %11(%struct._object* %8) #3, !dbg !8388
  br label %if.end.19

if.end.19:                                        ; preds = %do.body, %if.else
  %12 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !8390, !tbaa !3870
  %call.i.38 = call %struct._object* @PyErr_SetFromErrno(%struct._object* %12) #3, !dbg !8392
  br label %cleanup, !dbg !8393

if.end.21:                                        ; preds = %if.end.9
  call void @llvm.dbg.value(metadata i32* %size, i64 0, metadata !2435, metadata !3839), !dbg !8352
  %13 = load i32, i32* %size, align 4, !dbg !8394, !tbaa !3890
  %conv22 = sext i32 %13 to i64, !dbg !8394
  %cmp23 = icmp eq i64 %call12, %conv22, !dbg !8396
  br i1 %cmp23, label %if.end.27, label %if.then.25, !dbg !8397

if.then.25:                                       ; preds = %if.end.21
  call void @llvm.dbg.value(metadata %struct._object** %buffer, i64 0, metadata !2437, metadata !3839), !dbg !8369
  %call26 = call i32 @_PyBytes_Resize(%struct._object** nonnull %buffer, i64 %call12) #3, !dbg !8398
  br label %if.end.27, !dbg !8398

if.end.27:                                        ; preds = %if.end.21, %if.then.25
  call void @llvm.dbg.value(metadata %struct._object** %buffer, i64 0, metadata !2437, metadata !3839), !dbg !8369
  %14 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !8399, !tbaa !3870
  br label %cleanup, !dbg !8400

cleanup:                                          ; preds = %if.end.4, %entry, %if.end.27, %if.end.19, %if.then.1
  %retval.0 = phi %struct._object* [ %call.i, %if.then.1 ], [ %call.i.38, %if.end.19 ], [ %14, %if.end.27 ], [ null, %entry ], [ null, %if.end.4 ]
  call void @llvm.lifetime.end(i64 8, i8* %2) #3, !dbg !8401
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !8401
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !8401
  ret %struct._object* %retval.0, !dbg !8401
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_readv(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %fd = alloca i32, align 4
  %seq = alloca %struct._object*, align 8
  %iov = alloca %struct.iovec*, align 8
  %buf = alloca %struct.bufferinfo*, align 8
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2446, metadata !3839), !dbg !8402
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2447, metadata !3839), !dbg !8403
  %0 = bitcast i32* %fd to i8*, !dbg !8404
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !8404
  %1 = bitcast %struct._object** %seq to i8*, !dbg !8405
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !8405
  %2 = bitcast %struct.iovec** %iov to i8*, !dbg !8406
  call void @llvm.lifetime.start(i64 8, i8* %2) #3, !dbg !8406
  %3 = bitcast %struct.bufferinfo** %buf to i8*, !dbg !8407
  call void @llvm.lifetime.start(i64 8, i8* %3) #3, !dbg !8407
  tail call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2448, metadata !3839), !dbg !8408
  tail call void @llvm.dbg.value(metadata %struct._object** %seq, i64 0, metadata !2451, metadata !3839), !dbg !8409
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.296, i64 0, i64 0), i32* nonnull %fd, %struct._object** nonnull %seq) #3, !dbg !8410
  %tobool = icmp eq i32 %call, 0, !dbg !8410
  br i1 %tobool, label %cleanup, label %if.end, !dbg !8412

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct._object** %seq, i64 0, metadata !2451, metadata !3839), !dbg !8409
  %4 = load %struct._object*, %struct._object** %seq, align 8, !dbg !8413, !tbaa !3870
  %call1 = call i32 @PySequence_Check(%struct._object* %4) #3, !dbg !8415
  %tobool2 = icmp eq i32 %call1, 0, !dbg !8415
  br i1 %tobool2, label %if.then.3, label %if.end.4, !dbg !8416

if.then.3:                                        ; preds = %if.end
  %5 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !8417, !tbaa !3870
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.297, i64 0, i64 0)) #3, !dbg !8419
  br label %cleanup, !dbg !8420

if.end.4:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct._object** %seq, i64 0, metadata !2451, metadata !3839), !dbg !8409
  %6 = load %struct._object*, %struct._object** %seq, align 8, !dbg !8421, !tbaa !3870
  %call5 = call i64 @PySequence_Size(%struct._object* %6) #3, !dbg !8422
  %conv = trunc i64 %call5 to i32, !dbg !8422
  call void @llvm.dbg.value(metadata i32 %conv, i64 0, metadata !2449, metadata !3839), !dbg !8423
  call void @llvm.dbg.value(metadata %struct._object** %seq, i64 0, metadata !2451, metadata !3839), !dbg !8409
  %7 = load %struct._object*, %struct._object** %seq, align 8, !dbg !8424, !tbaa !3870
  call void @llvm.dbg.value(metadata %struct.iovec** %iov, i64 0, metadata !2452, metadata !3839), !dbg !8426
  call void @llvm.dbg.value(metadata %struct.bufferinfo** %buf, i64 0, metadata !2453, metadata !3839), !dbg !8427
  %call6 = call fastcc i64 @iov_setup(%struct.iovec** nonnull %iov, %struct.bufferinfo** nonnull %buf, %struct._object* %7, i32 %conv, i32 1), !dbg !8428
  %cmp = icmp slt i64 %call6, 0, !dbg !8429
  br i1 %cmp, label %cleanup, label %if.end.9, !dbg !8430

if.end.9:                                         ; preds = %if.end.4
  %call10 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !8431
  call void @llvm.dbg.value(metadata %struct._ts* %call10, i64 0, metadata !2454, metadata !3839), !dbg !8431
  call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2448, metadata !3839), !dbg !8408
  %8 = load i32, i32* %fd, align 4, !dbg !8432, !tbaa !3890
  call void @llvm.dbg.value(metadata %struct.iovec** %iov, i64 0, metadata !2452, metadata !3839), !dbg !8426
  %9 = load %struct.iovec*, %struct.iovec** %iov, align 8, !dbg !8433, !tbaa !3870
  %call11 = call i64 @readv(i32 %8, %struct.iovec* %9, i32 %conv) #3, !dbg !8434
  call void @llvm.dbg.value(metadata i64 %call11, i64 0, metadata !2450, metadata !3839), !dbg !8435
  call void @PyEval_RestoreThread(%struct._ts* %call10) #3, !dbg !8436
  call void @llvm.dbg.value(metadata %struct.iovec** %iov, i64 0, metadata !2452, metadata !3839), !dbg !8426
  %.cast = bitcast %struct.iovec* %9 to i8*, !dbg !8437
  call void @llvm.dbg.value(metadata %struct.bufferinfo** %buf, i64 0, metadata !2453, metadata !3839), !dbg !8427
  %10 = load %struct.bufferinfo*, %struct.bufferinfo** %buf, align 8, !dbg !8438, !tbaa !3870
  call void @llvm.dbg.value(metadata %struct.bufferinfo* %10, i64 0, metadata !2486, metadata !3839) #3, !dbg !8439
  call void @llvm.dbg.value(metadata i32 %conv, i64 0, metadata !2487, metadata !3839) #3, !dbg !8441
  call void @PyMem_Free(i8* %.cast) #3, !dbg !8442
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !2488, metadata !3839) #3, !dbg !8443
  %cmp.5.i = icmp sgt i32 %conv, 0, !dbg !8444
  br i1 %cmp.5.i, label %for.body.i.preheader, label %iov_cleanup.exit, !dbg !8447

for.body.i.preheader:                             ; preds = %if.end.9
  br label %for.body.i, !dbg !8448

for.body.i:                                       ; preds = %for.body.i.preheader, %for.body.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body.i ], [ 0, %for.body.i.preheader ], !dbg !8450
  %arrayidx.i = getelementptr %struct.bufferinfo, %struct.bufferinfo* %10, i64 %indvars.iv.i, !dbg !8448
  call void @PyBuffer_Release(%struct.bufferinfo* %arrayidx.i) #3, !dbg !8451
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !8447
  %lftr.wideiv = trunc i64 %indvars.iv.next.i to i32, !dbg !8447
  %exitcond = icmp eq i32 %lftr.wideiv, %conv, !dbg !8447
  br i1 %exitcond, label %iov_cleanup.exit.loopexit, label %for.body.i, !dbg !8447

iov_cleanup.exit.loopexit:                        ; preds = %for.body.i
  br label %iov_cleanup.exit, !dbg !8452

iov_cleanup.exit:                                 ; preds = %iov_cleanup.exit.loopexit, %if.end.9
  %11 = bitcast %struct.bufferinfo* %10 to i8*, !dbg !8452
  call void @PyMem_Free(i8* %11) #3, !dbg !8453
  %cmp12 = icmp slt i64 %call11, 0, !dbg !8454
  br i1 %cmp12, label %if.then.14, label %if.end.16, !dbg !8456

if.then.14:                                       ; preds = %iov_cleanup.exit
  %12 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !8457, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %12) #3, !dbg !8459
  br label %cleanup, !dbg !8460

if.end.16:                                        ; preds = %iov_cleanup.exit
  %call17 = call %struct._object* @PyLong_FromSsize_t(i64 %call11) #3, !dbg !8461
  br label %cleanup, !dbg !8462

cleanup:                                          ; preds = %if.end.4, %entry, %if.end.16, %if.then.14, %if.then.3
  %retval.0 = phi %struct._object* [ %call.i, %if.then.14 ], [ %call17, %if.end.16 ], [ null, %if.then.3 ], [ null, %entry ], [ null, %if.end.4 ]
  call void @llvm.lifetime.end(i64 8, i8* %3) #3, !dbg !8463
  call void @llvm.lifetime.end(i64 8, i8* %2) #3, !dbg !8463
  call void @llvm.lifetime.end(i64 8, i8* %1) #3, !dbg !8463
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !8463
  ret %struct._object* %retval.0, !dbg !8463
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_pread(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %fd = alloca i32, align 4
  %size = alloca i32, align 4
  %offset = alloca i64, align 8
  %buffer = alloca %struct._object*, align 8
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2491, metadata !3839), !dbg !8464
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2492, metadata !3839), !dbg !8465
  %0 = bitcast i32* %fd to i8*, !dbg !8466
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !8466
  %1 = bitcast i32* %size to i8*, !dbg !8466
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !8466
  %2 = bitcast i64* %offset to i8*, !dbg !8467
  call void @llvm.lifetime.start(i64 8, i8* %2) #3, !dbg !8467
  %3 = bitcast %struct._object** %buffer to i8*, !dbg !8468
  call void @llvm.lifetime.start(i64 8, i8* %3) #3, !dbg !8468
  tail call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2493, metadata !3839), !dbg !8469
  tail call void @llvm.dbg.value(metadata i32* %size, i64 0, metadata !2494, metadata !3839), !dbg !8470
  tail call void @llvm.dbg.value(metadata i64* %offset, i64 0, metadata !2495, metadata !3839), !dbg !8471
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.298, i64 0, i64 0), i32* nonnull %fd, i32* nonnull %size, i32 (%struct._object*, i8*)* nonnull @_parse_off_t, i64* nonnull %offset) #3, !dbg !8472
  %tobool = icmp eq i32 %call, 0, !dbg !8472
  br i1 %tobool, label %cleanup, label %if.end, !dbg !8474

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %size, i64 0, metadata !2494, metadata !3839), !dbg !8470
  %4 = load i32, i32* %size, align 4, !dbg !8475, !tbaa !3890
  %cmp = icmp slt i32 %4, 0, !dbg !8477
  br i1 %cmp, label %if.then.1, label %if.end.4, !dbg !8478

if.then.1:                                        ; preds = %if.end
  %call2 = tail call i32* @__errno_location() #1, !dbg !8479
  store i32 22, i32* %call2, align 4, !dbg !8481, !tbaa !3890
  %5 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !8482, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %5) #3, !dbg !8484
  br label %cleanup, !dbg !8485

if.end.4:                                         ; preds = %if.end
  %conv = sext i32 %4 to i64, !dbg !8486
  %call5 = call %struct._object* @PyBytes_FromStringAndSize(i8* null, i64 %conv) #3, !dbg !8487
  call void @llvm.dbg.value(metadata %struct._object* %call5, i64 0, metadata !2497, metadata !3839), !dbg !8489
  store %struct._object* %call5, %struct._object** %buffer, align 8, !dbg !8490, !tbaa !3870
  %cmp6 = icmp eq %struct._object* %call5, null, !dbg !8491
  br i1 %cmp6, label %cleanup, label %if.end.9, !dbg !8493

if.end.9:                                         ; preds = %if.end.4
  %call10 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !8494
  call void @llvm.dbg.value(metadata %struct._ts* %call10, i64 0, metadata !2498, metadata !3839), !dbg !8494
  call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2493, metadata !3839), !dbg !8469
  %6 = load i32, i32* %fd, align 4, !dbg !8495, !tbaa !3890
  call void @llvm.dbg.value(metadata %struct._object** %buffer, i64 0, metadata !2497, metadata !3839), !dbg !8489
  %arraydecay = getelementptr inbounds %struct._object, %struct._object* %call5, i64 2, !dbg !8496
  %7 = bitcast %struct._object* %arraydecay to i8*, !dbg !8496
  call void @llvm.dbg.value(metadata i32* %size, i64 0, metadata !2494, metadata !3839), !dbg !8470
  %8 = load i32, i32* %size, align 4, !dbg !8497, !tbaa !3890
  %conv11 = sext i32 %8 to i64, !dbg !8497
  call void @llvm.dbg.value(metadata i64* %offset, i64 0, metadata !2495, metadata !3839), !dbg !8471
  %9 = load i64, i64* %offset, align 8, !dbg !8498, !tbaa !4482
  %call12 = call i64 @pread64(i32 %6, i8* %7, i64 %conv11, i64 %9) #3, !dbg !8499
  call void @llvm.dbg.value(metadata i64 %call12, i64 0, metadata !2496, metadata !3839), !dbg !8500
  call void @PyEval_RestoreThread(%struct._ts* %call10) #3, !dbg !8501
  %cmp13 = icmp slt i64 %call12, 0, !dbg !8502
  br i1 %cmp13, label %do.body, label %if.end.21, !dbg !8503

do.body:                                          ; preds = %if.end.9
  call void @llvm.dbg.value(metadata %struct._object** %buffer, i64 0, metadata !2497, metadata !3839), !dbg !8489
  call void @llvm.dbg.value(metadata %struct._object* %call5, i64 0, metadata !2500, metadata !3839), !dbg !8487
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call5, i64 0, i32 0, !dbg !8504
  %10 = load i64, i64* %ob_refcnt, align 8, !dbg !8504, !tbaa !3930
  %dec = add i64 %10, -1, !dbg !8504
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !8504, !tbaa !3930
  %cmp16 = icmp eq i64 %dec, 0, !dbg !8504
  br i1 %cmp16, label %if.else, label %if.end.19, !dbg !8506

if.else:                                          ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call5, i64 0, i32 1, !dbg !8507
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8507, !tbaa !3875
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i64 0, i32 4, !dbg !8507
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8507, !tbaa !3934
  call void %12(%struct._object* %call5) #3, !dbg !8507
  br label %if.end.19

if.end.19:                                        ; preds = %do.body, %if.else
  %13 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !8509, !tbaa !3870
  %call.i.39 = call %struct._object* @PyErr_SetFromErrno(%struct._object* %13) #3, !dbg !8511
  br label %cleanup, !dbg !8512

if.end.21:                                        ; preds = %if.end.9
  call void @llvm.dbg.value(metadata i32* %size, i64 0, metadata !2494, metadata !3839), !dbg !8470
  %14 = load i32, i32* %size, align 4, !dbg !8513, !tbaa !3890
  %conv22 = sext i32 %14 to i64, !dbg !8513
  %cmp23 = icmp eq i64 %call12, %conv22, !dbg !8515
  br i1 %cmp23, label %cleanup, label %if.then.25, !dbg !8516

if.then.25:                                       ; preds = %if.end.21
  call void @llvm.dbg.value(metadata %struct._object** %buffer, i64 0, metadata !2497, metadata !3839), !dbg !8489
  %call26 = call i32 @_PyBytes_Resize(%struct._object** nonnull %buffer, i64 %call12) #3, !dbg !8517
  %.pre = load %struct._object*, %struct._object** %buffer, align 8, !dbg !8518, !tbaa !3870
  br label %cleanup, !dbg !8517

cleanup:                                          ; preds = %if.then.25, %if.end.21, %if.end.4, %entry, %if.end.19, %if.then.1
  %retval.0 = phi %struct._object* [ %call.i, %if.then.1 ], [ %call.i.39, %if.end.19 ], [ null, %entry ], [ null, %if.end.4 ], [ %call5, %if.end.21 ], [ %.pre, %if.then.25 ]
  call void @llvm.lifetime.end(i64 8, i8* %3) #3, !dbg !8519
  call void @llvm.lifetime.end(i64 8, i8* %2) #3, !dbg !8519
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !8519
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !8519
  ret %struct._object* %retval.0, !dbg !8519
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_write(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %pbuf = alloca %struct.bufferinfo, align 8
  %fd = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2506, metadata !3839), !dbg !8520
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2507, metadata !3839), !dbg !8521
  %0 = bitcast %struct.bufferinfo* %pbuf to i8*, !dbg !8522
  call void @llvm.lifetime.start(i64 80, i8* %0) #3, !dbg !8522
  %1 = bitcast i32* %fd to i8*, !dbg !8523
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !8523
  tail call void @llvm.dbg.value(metadata %struct.bufferinfo* %pbuf, i64 0, metadata !2508, metadata !3839), !dbg !8524
  tail call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2509, metadata !3839), !dbg !8525
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.299, i64 0, i64 0), i32* nonnull %fd, %struct.bufferinfo* nonnull %pbuf) #3, !dbg !8526
  %tobool = icmp eq i32 %call, 0, !dbg !8526
  br i1 %tobool, label %cleanup, label %if.end, !dbg !8528

if.end:                                           ; preds = %entry
  %len1 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %pbuf, i64 0, i32 2, !dbg !8529
  %2 = load i64, i64* %len1, align 8, !dbg !8529, !tbaa !8530
  call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !2511, metadata !3839), !dbg !8532
  %call2 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !8533
  call void @llvm.dbg.value(metadata %struct._ts* %call2, i64 0, metadata !2512, metadata !3839), !dbg !8533
  call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2509, metadata !3839), !dbg !8525
  %3 = load i32, i32* %fd, align 4, !dbg !8534, !tbaa !3890
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %pbuf, i64 0, i32 0, !dbg !8535
  %4 = load i8*, i8** %buf, align 8, !dbg !8535, !tbaa !8536
  %call3 = call i64 @write(i32 %3, i8* %4, i64 %2) #3, !dbg !8537
  call void @llvm.dbg.value(metadata i64 %call3, i64 0, metadata !2510, metadata !3839), !dbg !8538
  call void @PyEval_RestoreThread(%struct._ts* %call2) #3, !dbg !8539
  call void @llvm.dbg.value(metadata %struct.bufferinfo* %pbuf, i64 0, metadata !2508, metadata !3839), !dbg !8524
  call void @PyBuffer_Release(%struct.bufferinfo* nonnull %pbuf) #3, !dbg !8540
  %cmp = icmp slt i64 %call3, 0, !dbg !8541
  br i1 %cmp, label %if.then.4, label %if.end.6, !dbg !8543

if.then.4:                                        ; preds = %if.end
  %5 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !8544, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %5) #3, !dbg !8546
  br label %cleanup, !dbg !8547

if.end.6:                                         ; preds = %if.end
  %call7 = call %struct._object* @PyLong_FromSsize_t(i64 %call3) #3, !dbg !8548
  br label %cleanup, !dbg !8549

cleanup:                                          ; preds = %entry, %if.end.6, %if.then.4
  %retval.0 = phi %struct._object* [ %call.i, %if.then.4 ], [ %call7, %if.end.6 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !8550
  call void @llvm.lifetime.end(i64 80, i8* %0) #3, !dbg !8550
  ret %struct._object* %retval.0, !dbg !8550
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_writev(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %fd = alloca i32, align 4
  %seq = alloca %struct._object*, align 8
  %iov = alloca %struct.iovec*, align 8
  %buf = alloca %struct.bufferinfo*, align 8
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2516, metadata !3839), !dbg !8551
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2517, metadata !3839), !dbg !8552
  %0 = bitcast i32* %fd to i8*, !dbg !8553
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !8553
  %1 = bitcast %struct._object** %seq to i8*, !dbg !8554
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !8554
  %2 = bitcast %struct.iovec** %iov to i8*, !dbg !8555
  call void @llvm.lifetime.start(i64 8, i8* %2) #3, !dbg !8555
  %3 = bitcast %struct.bufferinfo** %buf to i8*, !dbg !8556
  call void @llvm.lifetime.start(i64 8, i8* %3) #3, !dbg !8556
  tail call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2518, metadata !3839), !dbg !8557
  tail call void @llvm.dbg.value(metadata %struct._object** %seq, i64 0, metadata !2521, metadata !3839), !dbg !8558
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.300, i64 0, i64 0), i32* nonnull %fd, %struct._object** nonnull %seq) #3, !dbg !8559
  %tobool = icmp eq i32 %call, 0, !dbg !8559
  br i1 %tobool, label %cleanup, label %if.end, !dbg !8561

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct._object** %seq, i64 0, metadata !2521, metadata !3839), !dbg !8558
  %4 = load %struct._object*, %struct._object** %seq, align 8, !dbg !8562, !tbaa !3870
  %call1 = call i32 @PySequence_Check(%struct._object* %4) #3, !dbg !8564
  %tobool2 = icmp eq i32 %call1, 0, !dbg !8564
  br i1 %tobool2, label %if.then.3, label %if.end.4, !dbg !8565

if.then.3:                                        ; preds = %if.end
  %5 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !8566, !tbaa !3870
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.301, i64 0, i64 0)) #3, !dbg !8568
  br label %cleanup, !dbg !8569

if.end.4:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct._object** %seq, i64 0, metadata !2521, metadata !3839), !dbg !8558
  %6 = load %struct._object*, %struct._object** %seq, align 8, !dbg !8570, !tbaa !3870
  %call5 = call i64 @PySequence_Size(%struct._object* %6) #3, !dbg !8571
  %conv = trunc i64 %call5 to i32, !dbg !8571
  call void @llvm.dbg.value(metadata i32 %conv, i64 0, metadata !2519, metadata !3839), !dbg !8572
  call void @llvm.dbg.value(metadata %struct._object** %seq, i64 0, metadata !2521, metadata !3839), !dbg !8558
  %7 = load %struct._object*, %struct._object** %seq, align 8, !dbg !8573, !tbaa !3870
  call void @llvm.dbg.value(metadata %struct.iovec** %iov, i64 0, metadata !2522, metadata !3839), !dbg !8575
  call void @llvm.dbg.value(metadata %struct.bufferinfo** %buf, i64 0, metadata !2523, metadata !3839), !dbg !8576
  %call6 = call fastcc i64 @iov_setup(%struct.iovec** nonnull %iov, %struct.bufferinfo** nonnull %buf, %struct._object* %7, i32 %conv, i32 0), !dbg !8577
  %cmp = icmp slt i64 %call6, 0, !dbg !8578
  br i1 %cmp, label %cleanup, label %if.end.9, !dbg !8579

if.end.9:                                         ; preds = %if.end.4
  %call10 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !8580
  call void @llvm.dbg.value(metadata %struct._ts* %call10, i64 0, metadata !2524, metadata !3839), !dbg !8580
  call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2518, metadata !3839), !dbg !8557
  %8 = load i32, i32* %fd, align 4, !dbg !8581, !tbaa !3890
  call void @llvm.dbg.value(metadata %struct.iovec** %iov, i64 0, metadata !2522, metadata !3839), !dbg !8575
  %9 = load %struct.iovec*, %struct.iovec** %iov, align 8, !dbg !8582, !tbaa !3870
  %call11 = call i64 @writev(i32 %8, %struct.iovec* %9, i32 %conv) #3, !dbg !8583
  call void @llvm.dbg.value(metadata i64 %call11, i64 0, metadata !2520, metadata !3839), !dbg !8584
  call void @PyEval_RestoreThread(%struct._ts* %call10) #3, !dbg !8585
  call void @llvm.dbg.value(metadata %struct.iovec** %iov, i64 0, metadata !2522, metadata !3839), !dbg !8575
  %.cast = bitcast %struct.iovec* %9 to i8*, !dbg !8586
  call void @llvm.dbg.value(metadata %struct.bufferinfo** %buf, i64 0, metadata !2523, metadata !3839), !dbg !8576
  %10 = load %struct.bufferinfo*, %struct.bufferinfo** %buf, align 8, !dbg !8587, !tbaa !3870
  call void @llvm.dbg.value(metadata %struct.bufferinfo* %10, i64 0, metadata !2486, metadata !3839) #3, !dbg !8588
  call void @llvm.dbg.value(metadata i32 %conv, i64 0, metadata !2487, metadata !3839) #3, !dbg !8590
  call void @PyMem_Free(i8* %.cast) #3, !dbg !8591
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !2488, metadata !3839) #3, !dbg !8592
  %cmp.5.i = icmp sgt i32 %conv, 0, !dbg !8593
  br i1 %cmp.5.i, label %for.body.i.preheader, label %iov_cleanup.exit, !dbg !8594

for.body.i.preheader:                             ; preds = %if.end.9
  br label %for.body.i, !dbg !8595

for.body.i:                                       ; preds = %for.body.i.preheader, %for.body.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body.i ], [ 0, %for.body.i.preheader ], !dbg !8596
  %arrayidx.i = getelementptr %struct.bufferinfo, %struct.bufferinfo* %10, i64 %indvars.iv.i, !dbg !8595
  call void @PyBuffer_Release(%struct.bufferinfo* %arrayidx.i) #3, !dbg !8597
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !8594
  %lftr.wideiv = trunc i64 %indvars.iv.next.i to i32, !dbg !8594
  %exitcond = icmp eq i32 %lftr.wideiv, %conv, !dbg !8594
  br i1 %exitcond, label %iov_cleanup.exit.loopexit, label %for.body.i, !dbg !8594

iov_cleanup.exit.loopexit:                        ; preds = %for.body.i
  br label %iov_cleanup.exit, !dbg !8598

iov_cleanup.exit:                                 ; preds = %iov_cleanup.exit.loopexit, %if.end.9
  %11 = bitcast %struct.bufferinfo* %10 to i8*, !dbg !8598
  call void @PyMem_Free(i8* %11) #3, !dbg !8599
  %cmp12 = icmp slt i64 %call11, 0, !dbg !8600
  br i1 %cmp12, label %if.then.14, label %if.end.16, !dbg !8602

if.then.14:                                       ; preds = %iov_cleanup.exit
  %12 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !8603, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %12) #3, !dbg !8605
  br label %cleanup, !dbg !8606

if.end.16:                                        ; preds = %iov_cleanup.exit
  %call17 = call %struct._object* @PyLong_FromSsize_t(i64 %call11) #3, !dbg !8607
  br label %cleanup, !dbg !8608

cleanup:                                          ; preds = %if.end.4, %entry, %if.end.16, %if.then.14, %if.then.3
  %retval.0 = phi %struct._object* [ %call.i, %if.then.14 ], [ %call17, %if.end.16 ], [ null, %if.then.3 ], [ null, %entry ], [ null, %if.end.4 ]
  call void @llvm.lifetime.end(i64 8, i8* %3) #3, !dbg !8609
  call void @llvm.lifetime.end(i64 8, i8* %2) #3, !dbg !8609
  call void @llvm.lifetime.end(i64 8, i8* %1) #3, !dbg !8609
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !8609
  ret %struct._object* %retval.0, !dbg !8609
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_pwrite(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %pbuf = alloca %struct.bufferinfo, align 8
  %fd = alloca i32, align 4
  %offset = alloca i64, align 8
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2528, metadata !3839), !dbg !8610
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2529, metadata !3839), !dbg !8611
  %0 = bitcast %struct.bufferinfo* %pbuf to i8*, !dbg !8612
  call void @llvm.lifetime.start(i64 80, i8* %0) #3, !dbg !8612
  %1 = bitcast i32* %fd to i8*, !dbg !8613
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !8613
  %2 = bitcast i64* %offset to i8*, !dbg !8614
  call void @llvm.lifetime.start(i64 8, i8* %2) #3, !dbg !8614
  tail call void @llvm.dbg.value(metadata %struct.bufferinfo* %pbuf, i64 0, metadata !2530, metadata !3839), !dbg !8615
  tail call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2531, metadata !3839), !dbg !8616
  tail call void @llvm.dbg.value(metadata i64* %offset, i64 0, metadata !2532, metadata !3839), !dbg !8617
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.302, i64 0, i64 0), i32* nonnull %fd, %struct.bufferinfo* nonnull %pbuf, i32 (%struct._object*, i8*)* nonnull @_parse_off_t, i64* nonnull %offset) #3, !dbg !8618
  %tobool = icmp eq i32 %call, 0, !dbg !8618
  br i1 %tobool, label %cleanup, label %if.end, !dbg !8620

if.end:                                           ; preds = %entry
  %call1 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !8621
  call void @llvm.dbg.value(metadata %struct._ts* %call1, i64 0, metadata !2534, metadata !3839), !dbg !8621
  call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2531, metadata !3839), !dbg !8616
  %3 = load i32, i32* %fd, align 4, !dbg !8622, !tbaa !3890
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %pbuf, i64 0, i32 0, !dbg !8623
  %4 = load i8*, i8** %buf, align 8, !dbg !8623, !tbaa !8536
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %pbuf, i64 0, i32 2, !dbg !8624
  %5 = load i64, i64* %len, align 8, !dbg !8624, !tbaa !8530
  call void @llvm.dbg.value(metadata i64* %offset, i64 0, metadata !2532, metadata !3839), !dbg !8617
  %6 = load i64, i64* %offset, align 8, !dbg !8625, !tbaa !4482
  %call2 = call i64 @pwrite64(i32 %3, i8* %4, i64 %5, i64 %6) #3, !dbg !8626
  call void @llvm.dbg.value(metadata i64 %call2, i64 0, metadata !2533, metadata !3839), !dbg !8627
  call void @PyEval_RestoreThread(%struct._ts* %call1) #3, !dbg !8628
  call void @llvm.dbg.value(metadata %struct.bufferinfo* %pbuf, i64 0, metadata !2530, metadata !3839), !dbg !8615
  call void @PyBuffer_Release(%struct.bufferinfo* nonnull %pbuf) #3, !dbg !8629
  %cmp = icmp slt i64 %call2, 0, !dbg !8630
  br i1 %cmp, label %if.then.3, label %if.end.5, !dbg !8632

if.then.3:                                        ; preds = %if.end
  %7 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !8633, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %7) #3, !dbg !8635
  br label %cleanup, !dbg !8636

if.end.5:                                         ; preds = %if.end
  %call6 = call %struct._object* @PyLong_FromSsize_t(i64 %call2) #3, !dbg !8637
  br label %cleanup, !dbg !8638

cleanup:                                          ; preds = %entry, %if.end.5, %if.then.3
  %retval.0 = phi %struct._object* [ %call.i, %if.then.3 ], [ %call6, %if.end.5 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 8, i8* %2) #3, !dbg !8639
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !8639
  call void @llvm.lifetime.end(i64 80, i8* %0) #3, !dbg !8639
  ret %struct._object* %retval.0, !dbg !8639
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_sendfile(%struct._object* nocapture readnone %self, %struct._object* %args, %struct._object* %kwdict) #0 {
entry:
  %in = alloca i32, align 4
  %out = alloca i32, align 4
  %offset = alloca i64, align 8
  %count = alloca i64, align 8
  %offobj = alloca %struct._object*, align 8
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2538, metadata !3839), !dbg !8640
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2539, metadata !3839), !dbg !8641
  tail call void @llvm.dbg.value(metadata %struct._object* %kwdict, i64 0, metadata !2540, metadata !3839), !dbg !8642
  %0 = bitcast i32* %in to i8*, !dbg !8643
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !8643
  %1 = bitcast i32* %out to i8*, !dbg !8643
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !8643
  %2 = bitcast i64* %offset to i8*, !dbg !8644
  call void @llvm.lifetime.start(i64 8, i8* %2) #3, !dbg !8644
  %3 = bitcast i64* %count to i8*, !dbg !8645
  call void @llvm.lifetime.start(i64 8, i8* %3) #3, !dbg !8645
  %4 = bitcast %struct._object** %offobj to i8*, !dbg !8646
  call void @llvm.lifetime.start(i64 8, i8* %4) #3, !dbg !8646
  tail call void @llvm.dbg.value(metadata i32* %in, i64 0, metadata !2541, metadata !3839), !dbg !8647
  tail call void @llvm.dbg.value(metadata i32* %out, i64 0, metadata !2542, metadata !3839), !dbg !8648
  tail call void @llvm.dbg.value(metadata i64* %count, i64 0, metadata !2545, metadata !3839), !dbg !8649
  tail call void @llvm.dbg.value(metadata %struct._object** %offobj, i64 0, metadata !2546, metadata !3839), !dbg !8650
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %args, %struct._object* %kwdict, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.307, i64 0, i64 0), i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @posix_sendfile.keywords, i64 0, i64 0), i32* nonnull %out, i32* nonnull %in, %struct._object** nonnull %offobj, i64* nonnull %count) #3, !dbg !8651
  %tobool = icmp eq i32 %call, 0, !dbg !8651
  br i1 %tobool, label %cleanup, label %if.end, !dbg !8653

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct._object** %offobj, i64 0, metadata !2546, metadata !3839), !dbg !8650
  %5 = load %struct._object*, %struct._object** %offobj, align 8, !dbg !8654, !tbaa !3870
  %cmp = icmp eq %struct._object* %5, @_Py_NoneStruct, !dbg !8655
  br i1 %cmp, label %if.then.1, label %if.end.9, !dbg !8656

if.then.1:                                        ; preds = %if.end
  %call2 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !8657
  call void @llvm.dbg.value(metadata %struct._ts* %call2, i64 0, metadata !2547, metadata !3839), !dbg !8657
  call void @llvm.dbg.value(metadata i32* %out, i64 0, metadata !2542, metadata !3839), !dbg !8648
  %6 = load i32, i32* %out, align 4, !dbg !8658, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %in, i64 0, metadata !2541, metadata !3839), !dbg !8647
  %7 = load i32, i32* %in, align 4, !dbg !8659, !tbaa !3890
  call void @llvm.dbg.value(metadata i64* %count, i64 0, metadata !2545, metadata !3839), !dbg !8649
  %8 = load i64, i64* %count, align 8, !dbg !8660, !tbaa !4482
  %call3 = call i64 @sendfile64(i32 %6, i32 %7, i64* null, i64 %8) #3, !dbg !8661
  call void @llvm.dbg.value(metadata i64 %call3, i64 0, metadata !2543, metadata !3839), !dbg !8662
  call void @PyEval_RestoreThread(%struct._ts* %call2) #3, !dbg !8663
  %cmp4 = icmp slt i64 %call3, 0, !dbg !8664
  br i1 %cmp4, label %if.then.5, label %if.end.7, !dbg !8666

if.then.5:                                        ; preds = %if.then.1
  %9 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !8667, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %9) #3, !dbg !8669
  br label %cleanup, !dbg !8670

if.end.7:                                         ; preds = %if.then.1
  %call8 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.308, i64 0, i64 0), i64 %call3) #3, !dbg !8671
  br label %cleanup, !dbg !8672

if.end.9:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !2417, metadata !3839) #3, !dbg !8673
  call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !2418, metadata !3839) #3, !dbg !8676
  %call.i.33 = call i64 @PyLong_AsLong(%struct._object* %5) #3, !dbg !8677
  store i64 %call.i.33, i64* %offset, align 8, !dbg !8678, !tbaa !4482
  %call1.i = call %struct._object* @PyErr_Occurred() #3, !dbg !8679
  %tobool.i = icmp eq %struct._object* %call1.i, null, !dbg !8679
  br i1 %tobool.i, label %if.end.13, label %cleanup, !dbg !8681

if.end.13:                                        ; preds = %if.end.9
  %call15 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !8682
  call void @llvm.dbg.value(metadata %struct._ts* %call15, i64 0, metadata !2551, metadata !3839), !dbg !8682
  call void @llvm.dbg.value(metadata i32* %out, i64 0, metadata !2542, metadata !3839), !dbg !8648
  %10 = load i32, i32* %out, align 4, !dbg !8683, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %in, i64 0, metadata !2541, metadata !3839), !dbg !8647
  %11 = load i32, i32* %in, align 4, !dbg !8684, !tbaa !3890
  call void @llvm.dbg.value(metadata i64* %count, i64 0, metadata !2545, metadata !3839), !dbg !8649
  %12 = load i64, i64* %count, align 8, !dbg !8685, !tbaa !4482
  call void @llvm.dbg.value(metadata i64* %offset, i64 0, metadata !2544, metadata !3839), !dbg !8686
  %call16 = call i64 @sendfile64(i32 %10, i32 %11, i64* nonnull %offset, i64 %12) #3, !dbg !8687
  call void @llvm.dbg.value(metadata i64 %call16, i64 0, metadata !2543, metadata !3839), !dbg !8662
  call void @PyEval_RestoreThread(%struct._ts* %call15) #3, !dbg !8688
  %cmp17 = icmp slt i64 %call16, 0, !dbg !8689
  br i1 %cmp17, label %if.then.18, label %if.end.20, !dbg !8691

if.then.18:                                       ; preds = %if.end.13
  %13 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !8692, !tbaa !3870
  %call.i.34 = call %struct._object* @PyErr_SetFromErrno(%struct._object* %13) #3, !dbg !8694
  br label %cleanup, !dbg !8695

if.end.20:                                        ; preds = %if.end.13
  %call21 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.308, i64 0, i64 0), i64 %call16) #3, !dbg !8696
  br label %cleanup, !dbg !8697

cleanup:                                          ; preds = %if.end.9, %entry, %if.end.20, %if.then.18, %if.end.7, %if.then.5
  %retval.0 = phi %struct._object* [ %call.i, %if.then.5 ], [ %call8, %if.end.7 ], [ %call.i.34, %if.then.18 ], [ %call21, %if.end.20 ], [ null, %entry ], [ null, %if.end.9 ]
  call void @llvm.lifetime.end(i64 8, i8* %4) #3, !dbg !8698
  call void @llvm.lifetime.end(i64 8, i8* %3) #3, !dbg !8698
  call void @llvm.lifetime.end(i64 8, i8* %2) #3, !dbg !8698
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !8698
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !8698
  ret %struct._object* %retval.0, !dbg !8698
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_fstat(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %fd = alloca i32, align 4
  %st = alloca %struct.stat, align 8
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2555, metadata !3839), !dbg !8699
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2556, metadata !3839), !dbg !8700
  %0 = bitcast i32* %fd to i8*, !dbg !8701
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !8701
  %1 = bitcast %struct.stat* %st to i8*, !dbg !8702
  call void @llvm.lifetime.start(i64 144, i8* %1) #3, !dbg !8702
  tail call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2557, metadata !3839), !dbg !8703
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.309, i64 0, i64 0), i32* nonnull %fd) #3, !dbg !8704
  %tobool = icmp eq i32 %call, 0, !dbg !8704
  br i1 %tobool, label %cleanup, label %if.end, !dbg !8706

if.end:                                           ; preds = %entry
  %call1 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !8707
  call void @llvm.dbg.value(metadata %struct._ts* %call1, i64 0, metadata !2560, metadata !3839), !dbg !8707
  call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2557, metadata !3839), !dbg !8703
  %2 = load i32, i32* %fd, align 4, !dbg !8708, !tbaa !3890
  call void @llvm.dbg.value(metadata %struct.stat* %st, i64 0, metadata !2558, metadata !3839), !dbg !8709
  %3 = bitcast %struct.stat* %st to %struct.stat64*, !dbg !8710
  call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !972, metadata !3839) #3, !dbg !8711
  call void @llvm.dbg.value(metadata %struct.stat64* %3, i64 0, metadata !973, metadata !3839) #3, !dbg !8711
  %call.i = call i32 @__fxstat64(i32 1, i32 %2, %struct.stat64* nonnull %3) #3, !dbg !8713
  call void @llvm.dbg.value(metadata i32 %call.i, i64 0, metadata !2559, metadata !3839), !dbg !8714
  call void @PyEval_RestoreThread(%struct._ts* %call1) #3, !dbg !8715
  %cmp = icmp eq i32 %call.i, 0, !dbg !8716
  br i1 %cmp, label %if.end.5, label %if.then.3, !dbg !8718

if.then.3:                                        ; preds = %if.end
  %4 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !8719, !tbaa !3870
  %call.i.11 = call %struct._object* @PyErr_SetFromErrno(%struct._object* %4) #3, !dbg !8722
  br label %cleanup, !dbg !8723

if.end.5:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.stat* %st, i64 0, metadata !2558, metadata !3839), !dbg !8709
  %call6 = call fastcc %struct._object* @_pystat_fromstructstat(%struct.stat* nonnull %st), !dbg !8724
  br label %cleanup, !dbg !8725

cleanup:                                          ; preds = %entry, %if.end.5, %if.then.3
  %retval.0 = phi %struct._object* [ %call.i.11, %if.then.3 ], [ %call6, %if.end.5 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 144, i8* %1) #3, !dbg !8726
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !8726
  ret %struct._object* %retval.0, !dbg !8726
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_isatty(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %fd = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2564, metadata !3839), !dbg !8727
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2565, metadata !3839), !dbg !8728
  %0 = bitcast i32* %fd to i8*, !dbg !8729
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !8729
  tail call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2566, metadata !3839), !dbg !8730
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.310, i64 0, i64 0), i32* nonnull %fd) #3, !dbg !8731
  %tobool = icmp eq i32 %call, 0, !dbg !8731
  br i1 %tobool, label %cleanup, label %if.end, !dbg !8733

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2566, metadata !3839), !dbg !8730
  %1 = load i32, i32* %fd, align 4, !dbg !8734, !tbaa !3890
  %call1 = call i32 @isatty(i32 %1) #3, !dbg !8735
  %conv = sext i32 %call1 to i64, !dbg !8735
  %call2 = call %struct._object* @PyBool_FromLong(i64 %conv) #3, !dbg !8736
  br label %cleanup, !dbg !8737

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct._object* [ %call2, %if.end ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !8738
  ret %struct._object* %retval.0, !dbg !8738
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_pipe(%struct._object* nocapture readnone %self, %struct._object* nocapture readnone %noargs) #0 {
entry:
  %fds = alloca [2 x i32], align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2569, metadata !3839), !dbg !8739
  tail call void @llvm.dbg.value(metadata %struct._object* %noargs, i64 0, metadata !2570, metadata !3839), !dbg !8740
  %0 = bitcast [2 x i32]* %fds to i8*, !dbg !8741
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !8741
  tail call void @llvm.dbg.declare(metadata [2 x i32]* %fds, metadata !2571, metadata !3839), !dbg !8742
  %call = tail call %struct._ts* @PyEval_SaveThread() #3, !dbg !8743
  tail call void @llvm.dbg.value(metadata %struct._ts* %call, i64 0, metadata !2574, metadata !3839), !dbg !8743
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %fds, i64 0, i64 0, !dbg !8744
  %call1 = call i32 @pipe2(i32* %arraydecay, i32 524288) #3, !dbg !8745
  call void @llvm.dbg.value(metadata i32 %call1, i64 0, metadata !2573, metadata !3839), !dbg !8746
  call void @PyEval_RestoreThread(%struct._ts* %call) #3, !dbg !8747
  %cmp = icmp eq i32 %call1, 0, !dbg !8748
  br i1 %cmp, label %entry.if.end.31_crit_edge, label %land.lhs.true, !dbg !8749

entry.if.end.31_crit_edge:                        ; preds = %entry
  %.pre = getelementptr [2 x i32], [2 x i32]* %fds, i64 0, i64 1, !dbg !8750
  br label %if.end.31, !dbg !8749

land.lhs.true:                                    ; preds = %entry
  %call2 = tail call i32* @__errno_location() #1, !dbg !8751
  %1 = load i32, i32* %call2, align 4, !dbg !8751, !tbaa !3890
  %cmp3 = icmp eq i32 %1, 38, !dbg !8753
  br i1 %cmp3, label %if.then, label %if.then.29, !dbg !8754

if.then:                                          ; preds = %land.lhs.true
  %call5 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !8755
  call void @llvm.dbg.value(metadata %struct._ts* %call5, i64 0, metadata !2576, metadata !3839), !dbg !8755
  %call7 = call i32 @pipe(i32* %arraydecay) #3, !dbg !8756
  call void @llvm.dbg.value(metadata i32 %call7, i64 0, metadata !2573, metadata !3839), !dbg !8746
  call void @PyEval_RestoreThread(%struct._ts* %call5) #3, !dbg !8757
  %cmp8 = icmp eq i32 %call7, 0, !dbg !8758
  br i1 %cmp8, label %if.then.9, label %if.then.29, !dbg !8760

if.then.9:                                        ; preds = %if.then
  %2 = load i32, i32* %arraydecay, align 4, !dbg !8761, !tbaa !3890
  %call10 = call i32 @_Py_set_inheritable(i32 %2, i32 0, i32* null) #3, !dbg !8764
  %cmp11 = icmp slt i32 %call10, 0, !dbg !8765
  br i1 %cmp11, label %if.then.12, label %if.end, !dbg !8766

if.then.12:                                       ; preds = %if.then.9
  %3 = load i32, i32* %arraydecay, align 4, !dbg !8767, !tbaa !3890
  %call14 = call i32 @close(i32 %3) #3, !dbg !8769
  %arrayidx15 = getelementptr [2 x i32], [2 x i32]* %fds, i64 0, i64 1, !dbg !8770
  %4 = load i32, i32* %arrayidx15, align 4, !dbg !8770, !tbaa !3890
  %call16 = call i32 @close(i32 %4) #3, !dbg !8771
  br label %cleanup, !dbg !8772

if.end:                                           ; preds = %if.then.9
  %arrayidx17 = getelementptr [2 x i32], [2 x i32]* %fds, i64 0, i64 1, !dbg !8773
  %5 = load i32, i32* %arrayidx17, align 4, !dbg !8773, !tbaa !3890
  %call18 = call i32 @_Py_set_inheritable(i32 %5, i32 0, i32* null) #3, !dbg !8775
  %cmp19 = icmp slt i32 %call18, 0, !dbg !8776
  br i1 %cmp19, label %if.then.20, label %if.end.31, !dbg !8777

if.then.20:                                       ; preds = %if.end
  %6 = load i32, i32* %arraydecay, align 4, !dbg !8778, !tbaa !3890
  %call22 = call i32 @close(i32 %6) #3, !dbg !8780
  %7 = load i32, i32* %arrayidx17, align 4, !dbg !8781, !tbaa !3890
  %call24 = call i32 @close(i32 %7) #3, !dbg !8782
  br label %cleanup, !dbg !8783

if.then.29:                                       ; preds = %if.then, %land.lhs.true
  %8 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !8784, !tbaa !3870
  %call30 = call %struct._object* @PyErr_SetFromErrno(%struct._object* %8) #3, !dbg !8786
  br label %cleanup, !dbg !8787

if.end.31:                                        ; preds = %entry.if.end.31_crit_edge, %if.end
  %arrayidx33.pre-phi = phi i32* [ %.pre, %entry.if.end.31_crit_edge ], [ %arrayidx17, %if.end ], !dbg !8750
  %9 = load i32, i32* %arraydecay, align 4, !dbg !8788, !tbaa !3890
  %10 = load i32, i32* %arrayidx33.pre-phi, align 4, !dbg !8750, !tbaa !3890
  %call34 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.254, i64 0, i64 0), i32 %9, i32 %10) #3, !dbg !8789
  br label %cleanup, !dbg !8790

cleanup:                                          ; preds = %if.end.31, %if.then.29, %if.then.20, %if.then.12
  %retval.0 = phi %struct._object* [ null, %if.then.12 ], [ null, %if.then.20 ], [ %call30, %if.then.29 ], [ %call34, %if.end.31 ]
  call void @llvm.lifetime.end(i64 8, i8* %0) #3, !dbg !8791
  ret %struct._object* %retval.0, !dbg !8791
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_pipe2(%struct._object* nocapture readnone %self, %struct._object* %arg) #0 {
entry:
  %fds = alloca [2 x i32], align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2582, metadata !3839), !dbg !8792
  tail call void @llvm.dbg.value(metadata %struct._object* %arg, i64 0, metadata !2583, metadata !3839), !dbg !8793
  %0 = bitcast [2 x i32]* %fds to i8*, !dbg !8794
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !8794
  tail call void @llvm.dbg.declare(metadata [2 x i32]* %fds, metadata !2585, metadata !3839), !dbg !8795
  %call = tail call i32 @_PyLong_AsInt(%struct._object* %arg) #3, !dbg !8796
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !2584, metadata !3839), !dbg !8797
  %cmp = icmp eq i32 %call, -1, !dbg !8798
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8800

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call %struct._object* @PyErr_Occurred() #3, !dbg !8801
  %tobool = icmp eq %struct._object* %call1, null, !dbg !8801
  br i1 %tobool, label %if.end, label %cleanup, !dbg !8803

if.end:                                           ; preds = %land.lhs.true, %entry
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %fds, i64 0, i64 0, !dbg !8804
  %call2 = call i32 @pipe2(i32* %arraydecay, i32 %call) #3, !dbg !8805
  call void @llvm.dbg.value(metadata i32 %call2, i64 0, metadata !2586, metadata !3839), !dbg !8806
  %cmp3 = icmp eq i32 %call2, 0, !dbg !8807
  br i1 %cmp3, label %if.end.6, label %if.then.4, !dbg !8809

if.then.4:                                        ; preds = %if.end
  %1 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !8810, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %1) #3, !dbg !8812
  br label %cleanup, !dbg !8813

if.end.6:                                         ; preds = %if.end
  %2 = load i32, i32* %arraydecay, align 4, !dbg !8814, !tbaa !3890
  %arrayidx7 = getelementptr [2 x i32], [2 x i32]* %fds, i64 0, i64 1, !dbg !8815
  %3 = load i32, i32* %arrayidx7, align 4, !dbg !8815, !tbaa !3890
  %call8 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.254, i64 0, i64 0), i32 %2, i32 %3) #3, !dbg !8816
  br label %cleanup, !dbg !8817

cleanup:                                          ; preds = %land.lhs.true, %if.end.6, %if.then.4
  %retval.0 = phi %struct._object* [ %call.i, %if.then.4 ], [ %call8, %if.end.6 ], [ null, %land.lhs.true ]
  call void @llvm.lifetime.end(i64 8, i8* %0) #3, !dbg !8818
  ret %struct._object* %retval.0, !dbg !8818
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_mkfifo(%struct._object* nocapture readnone %self, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  %path = alloca %struct.path_t, align 8
  %mode = alloca i32, align 4
  %dir_fd = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2589, metadata !3839), !dbg !8819
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2590, metadata !3839), !dbg !8820
  tail call void @llvm.dbg.value(metadata %struct._object* %kwargs, i64 0, metadata !2591, metadata !3839), !dbg !8821
  %0 = bitcast %struct.path_t* %path to i8*, !dbg !8822
  call void @llvm.lifetime.start(i64 72, i8* %0) #3, !dbg !8822
  %1 = bitcast i32* %mode to i8*, !dbg !8823
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !8823
  tail call void @llvm.dbg.value(metadata i32 438, i64 0, metadata !2593, metadata !3839), !dbg !8824
  store i32 438, i32* %mode, align 4, !dbg !8824, !tbaa !3890
  %2 = bitcast i32* %dir_fd to i8*, !dbg !8825
  call void @llvm.lifetime.start(i64 4, i8* %2) #3, !dbg !8825
  tail call void @llvm.dbg.value(metadata i32 -100, i64 0, metadata !2594, metadata !3839), !dbg !8826
  store i32 -100, i32* %dir_fd, align 4, !dbg !8826, !tbaa !3890
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !2596, metadata !3839), !dbg !8827
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 72, i32 8, i1 false), !dbg !8828
  tail call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !2592, metadata !3839), !dbg !8829
  tail call void @llvm.dbg.value(metadata i32* %mode, i64 0, metadata !2593, metadata !3839), !dbg !8824
  tail call void @llvm.dbg.value(metadata i32* %dir_fd, i64 0, metadata !2594, metadata !3839), !dbg !8826
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %args, %struct._object* %kwargs, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.311, i64 0, i64 0), i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @posix_mkfifo.keywords, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @path_converter, %struct.path_t* nonnull %path, i32* nonnull %mode, i32 (%struct._object*, i8*)* nonnull @dir_fd_converter, i32* nonnull %dir_fd) #3, !dbg !8830
  %tobool = icmp eq i32 %call, 0, !dbg !8830
  br i1 %tobool, label %cleanup, label %if.end, !dbg !8832

if.end:                                           ; preds = %entry
  %call1 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !8833
  call void @llvm.dbg.value(metadata %struct._ts* %call1, i64 0, metadata !2597, metadata !3839), !dbg !8833
  call void @llvm.dbg.value(metadata i32* %dir_fd, i64 0, metadata !2594, metadata !3839), !dbg !8826
  %3 = load i32, i32* %dir_fd, align 4, !dbg !8834, !tbaa !3890
  %cmp = icmp eq i32 %3, -100, !dbg !8836
  %narrow4 = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 5, !dbg !8837
  %4 = load i8*, i8** %narrow4, align 8, !dbg !8837, !tbaa !4761
  call void @llvm.dbg.value(metadata i32* %mode, i64 0, metadata !2593, metadata !3839), !dbg !8824
  %5 = load i32, i32* %mode, align 4, !dbg !8838, !tbaa !3890
  br i1 %cmp, label %if.else, label %if.then.2, !dbg !8839

if.then.2:                                        ; preds = %if.end
  %call3 = call i32 @mkfifoat(i32 %3, i8* %4, i32 %5) #3, !dbg !8840
  call void @llvm.dbg.value(metadata i32 %call3, i64 0, metadata !2595, metadata !3839), !dbg !8841
  br label %if.end.6, !dbg !8842

if.else:                                          ; preds = %if.end
  %call5 = call i32 @mkfifo(i8* %4, i32 %5) #3, !dbg !8843
  call void @llvm.dbg.value(metadata i32 %call5, i64 0, metadata !2595, metadata !3839), !dbg !8841
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.2
  %result.0 = phi i32 [ %call3, %if.then.2 ], [ %call5, %if.else ]
  call void @PyEval_RestoreThread(%struct._ts* %call1) #3, !dbg !8844
  %cmp7 = icmp slt i32 %result.0, 0, !dbg !8845
  br i1 %cmp7, label %if.then.8, label %if.end.10, !dbg !8847

if.then.8:                                        ; preds = %if.end.6
  %6 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !8848, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %6) #3, !dbg !8851
  call void @llvm.dbg.value(metadata %struct._object* %call.i, i64 0, metadata !2596, metadata !3839), !dbg !8827
  br label %exit, !dbg !8852

if.end.10:                                        ; preds = %if.end.6
  call void @llvm.dbg.value(metadata %struct._object* @_Py_NoneStruct, i64 0, metadata !2596, metadata !3839), !dbg !8827
  %7 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !8853, !tbaa !3930
  %inc = add i64 %7, 1, !dbg !8853
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !8853, !tbaa !3930
  br label %exit, !dbg !8853

exit:                                             ; preds = %if.end.10, %if.then.8
  %return_value.0 = phi %struct._object* [ %call.i, %if.then.8 ], [ @_Py_NoneStruct, %if.end.10 ]
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !2592, metadata !3839), !dbg !8829
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1054, metadata !3839) #3, !dbg !8854
  %cleanup.i = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 9, !dbg !8856
  %8 = load %struct._object*, %struct._object** %cleanup.i, align 8, !dbg !8856, !tbaa !4634
  %tobool.i = icmp eq %struct._object* %8, null, !dbg !8857
  br i1 %tobool.i, label %cleanup, label %if.then.2.i, !dbg !8858

if.then.2.i:                                      ; preds = %exit
  call void @llvm.dbg.value(metadata %struct._object* %8, i64 0, metadata !1055, metadata !3839) #3, !dbg !8859
  store %struct._object* null, %struct._object** %cleanup.i, align 8, !dbg !8860, !tbaa !4634
  call void @llvm.dbg.value(metadata %struct._object* %8, i64 0, metadata !1059, metadata !3839) #3, !dbg !8861
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %8, i64 0, i32 0, !dbg !8862
  %9 = load i64, i64* %ob_refcnt.i, align 8, !dbg !8862, !tbaa !3930
  %dec.i = add i64 %9, -1, !dbg !8862
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !8862, !tbaa !3930
  %cmp5.i = icmp eq i64 %dec.i, 0, !dbg !8862
  br i1 %cmp5.i, label %if.else.i, label %cleanup, !dbg !8863

if.else.i:                                        ; preds = %if.then.2.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %8, i64 0, i32 1, !dbg !8864
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !8864, !tbaa !3875
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i64 0, i32 4, !dbg !8864
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !8864, !tbaa !3934
  call void %11(%struct._object* %8) #3, !dbg !8864
  br label %cleanup, !dbg !8865

cleanup:                                          ; preds = %if.else.i, %if.then.2.i, %exit, %entry
  %retval.0 = phi %struct._object* [ null, %entry ], [ %return_value.0, %exit ], [ %return_value.0, %if.then.2.i ], [ %return_value.0, %if.else.i ]
  call void @llvm.lifetime.end(i64 4, i8* %2) #3, !dbg !8866
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !8866
  call void @llvm.lifetime.end(i64 72, i8* %0) #3, !dbg !8866
  ret %struct._object* %retval.0, !dbg !8866
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_mknod(%struct._object* nocapture readnone %self, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  %__dev.addr.i.21 = alloca i64, align 8
  %__dev.addr.i = alloca i64, align 8
  %path = alloca %struct.path_t, align 8
  %mode = alloca i32, align 4
  %device = alloca i32, align 4
  %dir_fd = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2601, metadata !3839), !dbg !8867
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2602, metadata !3839), !dbg !8868
  tail call void @llvm.dbg.value(metadata %struct._object* %kwargs, i64 0, metadata !2603, metadata !3839), !dbg !8869
  %0 = bitcast %struct.path_t* %path to i8*, !dbg !8870
  call void @llvm.lifetime.start(i64 72, i8* %0) #3, !dbg !8870
  %1 = bitcast i32* %mode to i8*, !dbg !8871
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !8871
  tail call void @llvm.dbg.value(metadata i32 438, i64 0, metadata !2605, metadata !3839), !dbg !8872
  store i32 438, i32* %mode, align 4, !dbg !8872, !tbaa !3890
  %2 = bitcast i32* %device to i8*, !dbg !8873
  call void @llvm.lifetime.start(i64 4, i8* %2) #3, !dbg !8873
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !2606, metadata !3839), !dbg !8874
  store i32 0, i32* %device, align 4, !dbg !8874, !tbaa !3890
  %3 = bitcast i32* %dir_fd to i8*, !dbg !8875
  call void @llvm.lifetime.start(i64 4, i8* %3) #3, !dbg !8875
  tail call void @llvm.dbg.value(metadata i32 -100, i64 0, metadata !2607, metadata !3839), !dbg !8876
  store i32 -100, i32* %dir_fd, align 4, !dbg !8876, !tbaa !3890
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !2609, metadata !3839), !dbg !8877
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 72, i32 8, i1 false), !dbg !8878
  tail call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !2604, metadata !3839), !dbg !8879
  tail call void @llvm.dbg.value(metadata i32* %mode, i64 0, metadata !2605, metadata !3839), !dbg !8872
  tail call void @llvm.dbg.value(metadata i32* %device, i64 0, metadata !2606, metadata !3839), !dbg !8874
  tail call void @llvm.dbg.value(metadata i32* %dir_fd, i64 0, metadata !2607, metadata !3839), !dbg !8876
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %args, %struct._object* %kwargs, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.313, i64 0, i64 0), i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @posix_mknod.keywords, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @path_converter, %struct.path_t* nonnull %path, i32* nonnull %mode, i32* nonnull %device, i32 (%struct._object*, i8*)* nonnull @dir_fd_converter, i32* nonnull %dir_fd) #3, !dbg !8880
  %tobool = icmp eq i32 %call, 0, !dbg !8880
  br i1 %tobool, label %cleanup, label %if.end, !dbg !8882

if.end:                                           ; preds = %entry
  %call1 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !8883
  call void @llvm.dbg.value(metadata %struct._ts* %call1, i64 0, metadata !2610, metadata !3839), !dbg !8883
  call void @llvm.dbg.value(metadata i32* %dir_fd, i64 0, metadata !2607, metadata !3839), !dbg !8876
  %4 = load i32, i32* %dir_fd, align 4, !dbg !8884, !tbaa !3890
  %cmp = icmp eq i32 %4, -100, !dbg !8886
  %narrow4 = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 5, !dbg !8887
  %5 = load i8*, i8** %narrow4, align 8, !dbg !8887, !tbaa !4761
  call void @llvm.dbg.value(metadata i32* %mode, i64 0, metadata !2605, metadata !3839), !dbg !8872
  %6 = load i32, i32* %mode, align 4, !dbg !8888, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %device, i64 0, metadata !2606, metadata !3839), !dbg !8874
  %7 = load i32, i32* %device, align 4, !dbg !8889, !tbaa !3890
  %conv5 = sext i32 %7 to i64, !dbg !8889
  br i1 %cmp, label %if.else, label %if.then.2, !dbg !8890

if.then.2:                                        ; preds = %if.end
  %8 = bitcast i64* %__dev.addr.i to i8*, !dbg !8891
  call void @llvm.lifetime.start(i64 8, i8* %8), !dbg !8891
  call void @llvm.dbg.value(metadata i32 %4, i64 0, metadata !2616, metadata !3839) #3, !dbg !8891
  call void @llvm.dbg.value(metadata i8* %5, i64 0, metadata !2617, metadata !3839) #3, !dbg !8891
  call void @llvm.dbg.value(metadata i32 %6, i64 0, metadata !2618, metadata !3839) #3, !dbg !8891
  call void @llvm.dbg.value(metadata i64 %conv5, i64 0, metadata !2619, metadata !3839) #3, !dbg !8891
  store i64 %conv5, i64* %__dev.addr.i, align 8, !dbg !8893, !tbaa !4482
  call void @llvm.dbg.value(metadata i64* %__dev.addr.i, i64 0, metadata !2619, metadata !3839) #3, !dbg !8891
  %call.i = call i32 @__xmknodat(i32 0, i32 %4, i8* nonnull %5, i32 %6, i64* nonnull %__dev.addr.i) #3, !dbg !8894
  call void @llvm.lifetime.end(i64 8, i8* %8), !dbg !8895
  call void @llvm.dbg.value(metadata i32 %call.i, i64 0, metadata !2608, metadata !3839), !dbg !8896
  br label %if.end.7, !dbg !8897

if.else:                                          ; preds = %if.end
  %9 = bitcast i64* %__dev.addr.i.21 to i8*, !dbg !8898
  call void @llvm.lifetime.start(i64 8, i8* %9), !dbg !8898
  call void @llvm.dbg.value(metadata i8* %5, i64 0, metadata !2624, metadata !3839) #3, !dbg !8898
  call void @llvm.dbg.value(metadata i32 %6, i64 0, metadata !2625, metadata !3839) #3, !dbg !8898
  call void @llvm.dbg.value(metadata i64 %conv5, i64 0, metadata !2626, metadata !3839) #3, !dbg !8898
  store i64 %conv5, i64* %__dev.addr.i.21, align 8, !dbg !8900, !tbaa !4482
  call void @llvm.dbg.value(metadata i64* %__dev.addr.i.21, i64 0, metadata !2626, metadata !3839) #3, !dbg !8898
  %call.i.22 = call i32 @__xmknod(i32 0, i8* nonnull %5, i32 %6, i64* nonnull %__dev.addr.i.21) #3, !dbg !8901
  call void @llvm.lifetime.end(i64 8, i8* %9), !dbg !8902
  call void @llvm.dbg.value(metadata i32 %call.i.22, i64 0, metadata !2608, metadata !3839), !dbg !8896
  br label %if.end.7

if.end.7:                                         ; preds = %if.else, %if.then.2
  %result.0 = phi i32 [ %call.i, %if.then.2 ], [ %call.i.22, %if.else ]
  call void @PyEval_RestoreThread(%struct._ts* %call1) #3, !dbg !8903
  %cmp8 = icmp slt i32 %result.0, 0, !dbg !8904
  br i1 %cmp8, label %if.then.10, label %if.end.12, !dbg !8906

if.then.10:                                       ; preds = %if.end.7
  %10 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !8907, !tbaa !3870
  %call.i.23 = call %struct._object* @PyErr_SetFromErrno(%struct._object* %10) #3, !dbg !8910
  call void @llvm.dbg.value(metadata %struct._object* %call.i.23, i64 0, metadata !2609, metadata !3839), !dbg !8877
  br label %exit, !dbg !8911

if.end.12:                                        ; preds = %if.end.7
  call void @llvm.dbg.value(metadata %struct._object* @_Py_NoneStruct, i64 0, metadata !2609, metadata !3839), !dbg !8877
  %11 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !8912, !tbaa !3930
  %inc = add i64 %11, 1, !dbg !8912
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !8912, !tbaa !3930
  br label %exit, !dbg !8912

exit:                                             ; preds = %if.end.12, %if.then.10
  %return_value.0 = phi %struct._object* [ %call.i.23, %if.then.10 ], [ @_Py_NoneStruct, %if.end.12 ]
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !2604, metadata !3839), !dbg !8879
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1054, metadata !3839) #3, !dbg !8913
  %cleanup.i = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 9, !dbg !8915
  %12 = load %struct._object*, %struct._object** %cleanup.i, align 8, !dbg !8915, !tbaa !4634
  %tobool.i = icmp eq %struct._object* %12, null, !dbg !8916
  br i1 %tobool.i, label %cleanup, label %if.then.2.i, !dbg !8917

if.then.2.i:                                      ; preds = %exit
  call void @llvm.dbg.value(metadata %struct._object* %12, i64 0, metadata !1055, metadata !3839) #3, !dbg !8918
  store %struct._object* null, %struct._object** %cleanup.i, align 8, !dbg !8919, !tbaa !4634
  call void @llvm.dbg.value(metadata %struct._object* %12, i64 0, metadata !1059, metadata !3839) #3, !dbg !8920
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %12, i64 0, i32 0, !dbg !8921
  %13 = load i64, i64* %ob_refcnt.i, align 8, !dbg !8921, !tbaa !3930
  %dec.i = add i64 %13, -1, !dbg !8921
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !8921, !tbaa !3930
  %cmp5.i = icmp eq i64 %dec.i, 0, !dbg !8921
  br i1 %cmp5.i, label %if.else.i, label %cleanup, !dbg !8922

if.else.i:                                        ; preds = %if.then.2.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %12, i64 0, i32 1, !dbg !8923
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !8923, !tbaa !3875
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i64 0, i32 4, !dbg !8923
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !8923, !tbaa !3934
  call void %15(%struct._object* %12) #3, !dbg !8923
  br label %cleanup, !dbg !8924

cleanup:                                          ; preds = %if.else.i, %if.then.2.i, %exit, %entry
  %retval.0 = phi %struct._object* [ null, %entry ], [ %return_value.0, %exit ], [ %return_value.0, %if.then.2.i ], [ %return_value.0, %if.else.i ]
  call void @llvm.lifetime.end(i64 4, i8* %3) #3, !dbg !8925
  call void @llvm.lifetime.end(i64 4, i8* %2) #3, !dbg !8925
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !8925
  call void @llvm.lifetime.end(i64 72, i8* %0) #3, !dbg !8925
  ret %struct._object* %retval.0, !dbg !8925
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_major(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %device = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2629, metadata !3839), !dbg !8926
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2630, metadata !3839), !dbg !8927
  %0 = bitcast i32* %device to i8*, !dbg !8928
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !8928
  tail call void @llvm.dbg.value(metadata i32* %device, i64 0, metadata !2631, metadata !3839), !dbg !8929
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.314, i64 0, i64 0), i32* nonnull %device) #3, !dbg !8930
  %tobool = icmp eq i32 %call, 0, !dbg !8930
  br i1 %tobool, label %cleanup, label %if.end, !dbg !8932

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %device, i64 0, metadata !2631, metadata !3839), !dbg !8929
  %1 = load i32, i32* %device, align 4, !dbg !8933, !tbaa !3890
  %conv = sext i32 %1 to i64, !dbg !8933
  tail call void @llvm.dbg.value(metadata i64 %conv, i64 0, metadata !2637, metadata !3839), !dbg !8934
  %shr.i = lshr i64 %conv, 8, !dbg !8936
  %and.i = and i64 %shr.i, 4095, !dbg !8937
  %shr1.i = lshr i64 %conv, 32, !dbg !8938
  %and2.i = and i64 %shr1.i, 4294963200, !dbg !8939
  %or.i = or i64 %and.i, %and2.i, !dbg !8940
  %call3 = call %struct._object* @PyLong_FromLong(i64 %or.i) #3, !dbg !8941
  br label %cleanup, !dbg !8942

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct._object* [ %call3, %if.end ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !8943
  ret %struct._object* %retval.0, !dbg !8943
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_minor(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %device = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2640, metadata !3839), !dbg !8944
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2641, metadata !3839), !dbg !8945
  %0 = bitcast i32* %device to i8*, !dbg !8946
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !8946
  tail call void @llvm.dbg.value(metadata i32* %device, i64 0, metadata !2642, metadata !3839), !dbg !8947
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.315, i64 0, i64 0), i32* nonnull %device) #3, !dbg !8948
  %tobool = icmp eq i32 %call, 0, !dbg !8948
  br i1 %tobool, label %cleanup, label %if.end, !dbg !8950

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %device, i64 0, metadata !2642, metadata !3839), !dbg !8947
  %1 = load i32, i32* %device, align 4, !dbg !8951, !tbaa !3890
  %conv = sext i32 %1 to i64, !dbg !8951
  tail call void @llvm.dbg.value(metadata i64 %conv, i64 0, metadata !2645, metadata !3839), !dbg !8952
  %and.i = and i64 %conv, 255, !dbg !8954
  %shr.i = lshr i64 %conv, 12, !dbg !8955
  %and1.i = and i64 %shr.i, 4294967040, !dbg !8956
  %or.i = or i64 %and1.i, %and.i, !dbg !8957
  %call3 = call %struct._object* @PyLong_FromLong(i64 %or.i) #3, !dbg !8958
  br label %cleanup, !dbg !8959

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct._object* [ %call3, %if.end ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !8960
  ret %struct._object* %retval.0, !dbg !8960
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_makedev(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %major = alloca i32, align 4
  %minor = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2648, metadata !3839), !dbg !8961
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2649, metadata !3839), !dbg !8962
  %0 = bitcast i32* %major to i8*, !dbg !8963
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !8963
  %1 = bitcast i32* %minor to i8*, !dbg !8963
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !8963
  tail call void @llvm.dbg.value(metadata i32* %major, i64 0, metadata !2650, metadata !3839), !dbg !8964
  tail call void @llvm.dbg.value(metadata i32* %minor, i64 0, metadata !2651, metadata !3839), !dbg !8965
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.316, i64 0, i64 0), i32* nonnull %major, i32* nonnull %minor) #3, !dbg !8966
  %tobool = icmp eq i32 %call, 0, !dbg !8966
  br i1 %tobool, label %cleanup, label %if.end, !dbg !8968

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %major, i64 0, metadata !2650, metadata !3839), !dbg !8964
  %2 = load i32, i32* %major, align 4, !dbg !8969, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %minor, i64 0, metadata !2651, metadata !3839), !dbg !8965
  %3 = load i32, i32* %minor, align 4, !dbg !8969, !tbaa !3890
  tail call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !2656, metadata !3839), !dbg !8970
  tail call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !2657, metadata !3839), !dbg !8970
  %and.i = and i32 %3, 255, !dbg !8972
  %and1.i = shl i32 %2, 8, !dbg !8973
  %shl.i = and i32 %and1.i, 1048320, !dbg !8973
  %or.i = or i32 %and.i, %shl.i, !dbg !8974
  %conv.i = zext i32 %or.i to i64, !dbg !8975
  %and2.i = and i32 %3, -256, !dbg !8976
  %conv3.i = zext i32 %and2.i to i64, !dbg !8977
  %shl4.i = shl nuw nsw i64 %conv3.i, 12, !dbg !8978
  %and6.i = and i32 %2, -4096, !dbg !8979
  %conv7.i = zext i32 %and6.i to i64, !dbg !8980
  %shl8.i = shl nuw i64 %conv7.i, 32, !dbg !8981
  %or5.i = or i64 %shl4.i, %shl8.i, !dbg !8982
  %or9.i = or i64 %or5.i, %conv.i, !dbg !8983
  %call2 = call %struct._object* @PyLong_FromLong(i64 %or9.i) #3, !dbg !8984
  br label %cleanup, !dbg !8985

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct._object* [ %call2, %if.end ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !8986
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !8986
  ret %struct._object* %retval.0, !dbg !8986
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_ftruncate(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %fd = alloca i32, align 4
  %length = alloca i64, align 8
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2660, metadata !3839), !dbg !8987
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2661, metadata !3839), !dbg !8988
  %0 = bitcast i32* %fd to i8*, !dbg !8989
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !8989
  %1 = bitcast i64* %length to i8*, !dbg !8990
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !8990
  tail call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2662, metadata !3839), !dbg !8991
  tail call void @llvm.dbg.value(metadata i64* %length, i64 0, metadata !2663, metadata !3839), !dbg !8992
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.317, i64 0, i64 0), i32* nonnull %fd, i32 (%struct._object*, i8*)* nonnull @_parse_off_t, i64* nonnull %length) #3, !dbg !8993
  %tobool = icmp eq i32 %call, 0, !dbg !8993
  br i1 %tobool, label %cleanup, label %if.end, !dbg !8995

if.end:                                           ; preds = %entry
  %call1 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !8996
  call void @llvm.dbg.value(metadata %struct._ts* %call1, i64 0, metadata !2665, metadata !3839), !dbg !8996
  call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2662, metadata !3839), !dbg !8991
  %2 = load i32, i32* %fd, align 4, !dbg !8997, !tbaa !3890
  call void @llvm.dbg.value(metadata i64* %length, i64 0, metadata !2663, metadata !3839), !dbg !8992
  %3 = load i64, i64* %length, align 8, !dbg !8998, !tbaa !4482
  %call2 = call i32 @ftruncate64(i32 %2, i64 %3) #3, !dbg !8999
  call void @llvm.dbg.value(metadata i32 %call2, i64 0, metadata !2664, metadata !3839), !dbg !9000
  call void @PyEval_RestoreThread(%struct._ts* %call1) #3, !dbg !9001
  %cmp = icmp slt i32 %call2, 0, !dbg !9002
  br i1 %cmp, label %if.then.3, label %if.end.5, !dbg !9004

if.then.3:                                        ; preds = %if.end
  %4 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !9005, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %4) #3, !dbg !9007
  br label %cleanup, !dbg !9008

if.end.5:                                         ; preds = %if.end
  %5 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !9009, !tbaa !3930
  %inc = add i64 %5, 1, !dbg !9009
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !9009, !tbaa !3930
  br label %cleanup, !dbg !9010

cleanup:                                          ; preds = %entry, %if.end.5, %if.then.3
  %retval.0 = phi %struct._object* [ %call.i, %if.then.3 ], [ @_Py_NoneStruct, %if.end.5 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 8, i8* %1) #3, !dbg !9011
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !9011
  ret %struct._object* %retval.0, !dbg !9011
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_truncate(%struct._object* nocapture readnone %self, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  %path = alloca %struct.path_t, align 8
  %length = alloca i64, align 8
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2669, metadata !3839), !dbg !9012
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2670, metadata !3839), !dbg !9013
  tail call void @llvm.dbg.value(metadata %struct._object* %kwargs, i64 0, metadata !2671, metadata !3839), !dbg !9014
  %0 = bitcast %struct.path_t* %path to i8*, !dbg !9015
  call void @llvm.lifetime.start(i64 72, i8* %0) #3, !dbg !9015
  %1 = bitcast i64* %length to i8*, !dbg !9016
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !9016
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !2675, metadata !3839), !dbg !9017
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 72, i32 8, i1 false), !dbg !9018
  %function_name = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 0, !dbg !9019
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.130, i64 0, i64 0), i8** %function_name, align 8, !dbg !9020, !tbaa !4743
  %allow_fd = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 3, !dbg !9021
  store i32 1, i32* %allow_fd, align 4, !dbg !9022, !tbaa !4746
  tail call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !2672, metadata !3839), !dbg !9023
  tail call void @llvm.dbg.value(metadata i64* %length, i64 0, metadata !2673, metadata !3839), !dbg !9024
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %args, %struct._object* %kwargs, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.319, i64 0, i64 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @posix_truncate.keywords, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @path_converter, %struct.path_t* nonnull %path, i32 (%struct._object*, i8*)* nonnull @_parse_off_t, i64* nonnull %length) #3, !dbg !9025
  %tobool = icmp eq i32 %call, 0, !dbg !9025
  br i1 %tobool, label %cleanup, label %if.end, !dbg !9027

if.end:                                           ; preds = %entry
  %call1 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !9028
  call void @llvm.dbg.value(metadata %struct._ts* %call1, i64 0, metadata !2676, metadata !3839), !dbg !9028
  %fd = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 6, !dbg !9029
  %2 = load i32, i32* %fd, align 8, !dbg !9029, !tbaa !4754
  %cmp = icmp eq i32 %2, -1, !dbg !9031
  br i1 %cmp, label %if.else, label %if.then.2, !dbg !9032

if.then.2:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata i64* %length, i64 0, metadata !2673, metadata !3839), !dbg !9024
  %3 = load i64, i64* %length, align 8, !dbg !9033, !tbaa !4482
  %call4 = call i32 @ftruncate64(i32 %2, i64 %3) #3, !dbg !9034
  call void @llvm.dbg.value(metadata i32 %call4, i64 0, metadata !2674, metadata !3839), !dbg !9035
  br label %if.end.6, !dbg !9036

if.else:                                          ; preds = %if.end
  %narrow = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 5, !dbg !9037
  %4 = load i8*, i8** %narrow, align 8, !dbg !9037, !tbaa !4761
  call void @llvm.dbg.value(metadata i64* %length, i64 0, metadata !2673, metadata !3839), !dbg !9024
  %5 = load i64, i64* %length, align 8, !dbg !9038, !tbaa !4482
  %call5 = call i32 @truncate64(i8* %4, i64 %5) #3, !dbg !9039
  call void @llvm.dbg.value(metadata i32 %call5, i64 0, metadata !2674, metadata !3839), !dbg !9035
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.2
  %res.0 = phi i32 [ %call4, %if.then.2 ], [ %call5, %if.else ]
  call void @PyEval_RestoreThread(%struct._ts* %call1) #3, !dbg !9040
  %cmp7 = icmp slt i32 %res.0, 0, !dbg !9041
  br i1 %cmp7, label %if.then.8, label %if.else.10, !dbg !9043

if.then.8:                                        ; preds = %if.end.6
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !2672, metadata !3839), !dbg !9023
  %path.idx = getelementptr %struct.path_t, %struct.path_t* %path, i64 0, i32 8
  %path.idx.val = load %struct._object*, %struct._object** %path.idx, align 8, !tbaa !4767
  %6 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !9044, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrnoWithFilenameObject(%struct._object* %6, %struct._object* %path.idx.val) #3, !dbg !9046
  call void @llvm.dbg.value(metadata %struct._object* %call.i, i64 0, metadata !2675, metadata !3839), !dbg !9017
  br label %if.end.11, !dbg !9047

if.else.10:                                       ; preds = %if.end.6
  %7 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !9048, !tbaa !3930
  %inc = add i64 %7, 1, !dbg !9048
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !9048, !tbaa !3930
  call void @llvm.dbg.value(metadata %struct._object* @_Py_NoneStruct, i64 0, metadata !2675, metadata !3839), !dbg !9017
  br label %if.end.11

if.end.11:                                        ; preds = %if.else.10, %if.then.8
  %result.0 = phi %struct._object* [ %call.i, %if.then.8 ], [ @_Py_NoneStruct, %if.else.10 ]
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !2672, metadata !3839), !dbg !9023
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1054, metadata !3839) #3, !dbg !9050
  %cleanup.i = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 9, !dbg !9052
  %8 = load %struct._object*, %struct._object** %cleanup.i, align 8, !dbg !9052, !tbaa !4634
  %tobool.i = icmp eq %struct._object* %8, null, !dbg !9053
  br i1 %tobool.i, label %cleanup, label %if.then.2.i, !dbg !9054

if.then.2.i:                                      ; preds = %if.end.11
  call void @llvm.dbg.value(metadata %struct._object* %8, i64 0, metadata !1055, metadata !3839) #3, !dbg !9055
  store %struct._object* null, %struct._object** %cleanup.i, align 8, !dbg !9056, !tbaa !4634
  call void @llvm.dbg.value(metadata %struct._object* %8, i64 0, metadata !1059, metadata !3839) #3, !dbg !9057
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %8, i64 0, i32 0, !dbg !9058
  %9 = load i64, i64* %ob_refcnt.i, align 8, !dbg !9058, !tbaa !3930
  %dec.i = add i64 %9, -1, !dbg !9058
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !9058, !tbaa !3930
  %cmp5.i = icmp eq i64 %dec.i, 0, !dbg !9058
  br i1 %cmp5.i, label %if.else.i, label %cleanup, !dbg !9059

if.else.i:                                        ; preds = %if.then.2.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %8, i64 0, i32 1, !dbg !9060
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !9060, !tbaa !3875
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i64 0, i32 4, !dbg !9060
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !9060, !tbaa !3934
  call void %11(%struct._object* %8) #3, !dbg !9060
  br label %cleanup, !dbg !9061

cleanup:                                          ; preds = %if.else.i, %if.then.2.i, %if.end.11, %entry
  %retval.0 = phi %struct._object* [ null, %entry ], [ %result.0, %if.end.11 ], [ %result.0, %if.then.2.i ], [ %result.0, %if.else.i ]
  call void @llvm.lifetime.end(i64 8, i8* %1) #3, !dbg !9062
  call void @llvm.lifetime.end(i64 72, i8* %0) #3, !dbg !9062
  ret %struct._object* %retval.0, !dbg !9062
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_posix_fallocate(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %len = alloca i64, align 8
  %offset = alloca i64, align 8
  %fd = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2680, metadata !3839), !dbg !9063
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2681, metadata !3839), !dbg !9064
  %0 = bitcast i64* %len to i8*, !dbg !9065
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !9065
  %1 = bitcast i64* %offset to i8*, !dbg !9065
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !9065
  %2 = bitcast i32* %fd to i8*, !dbg !9066
  call void @llvm.lifetime.start(i64 4, i8* %2) #3, !dbg !9066
  tail call void @llvm.dbg.value(metadata i64* %len, i64 0, metadata !2682, metadata !3839), !dbg !9067
  tail call void @llvm.dbg.value(metadata i64* %offset, i64 0, metadata !2683, metadata !3839), !dbg !9068
  tail call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2685, metadata !3839), !dbg !9069
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.320, i64 0, i64 0), i32* nonnull %fd, i32 (%struct._object*, i8*)* nonnull @_parse_off_t, i64* nonnull %offset, i32 (%struct._object*, i8*)* nonnull @_parse_off_t, i64* nonnull %len) #3, !dbg !9070
  %tobool = icmp eq i32 %call, 0, !dbg !9070
  br i1 %tobool, label %cleanup, label %if.end, !dbg !9072

if.end:                                           ; preds = %entry
  %call1 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !9073
  call void @llvm.dbg.value(metadata %struct._ts* %call1, i64 0, metadata !2686, metadata !3839), !dbg !9073
  call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2685, metadata !3839), !dbg !9069
  %3 = load i32, i32* %fd, align 4, !dbg !9074, !tbaa !3890
  call void @llvm.dbg.value(metadata i64* %offset, i64 0, metadata !2683, metadata !3839), !dbg !9068
  %4 = load i64, i64* %offset, align 8, !dbg !9075, !tbaa !4482
  call void @llvm.dbg.value(metadata i64* %len, i64 0, metadata !2682, metadata !3839), !dbg !9067
  %5 = load i64, i64* %len, align 8, !dbg !9076, !tbaa !4482
  %call2 = call i32 @posix_fallocate64(i32 %3, i64 %4, i64 %5) #3, !dbg !9077
  call void @llvm.dbg.value(metadata i32 %call2, i64 0, metadata !2684, metadata !3839), !dbg !9078
  call void @PyEval_RestoreThread(%struct._ts* %call1) #3, !dbg !9079
  %cmp = icmp eq i32 %call2, 0, !dbg !9080
  br i1 %cmp, label %if.end.6, label %if.then.3, !dbg !9082

if.then.3:                                        ; preds = %if.end
  %call4 = tail call i32* @__errno_location() #1, !dbg !9083
  store i32 %call2, i32* %call4, align 4, !dbg !9085, !tbaa !3890
  %6 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !9086, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %6) #3, !dbg !9088
  br label %cleanup, !dbg !9089

if.end.6:                                         ; preds = %if.end
  %7 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !9090, !tbaa !3930
  %inc = add i64 %7, 1, !dbg !9090
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !9090, !tbaa !3930
  br label %cleanup, !dbg !9090

cleanup:                                          ; preds = %entry, %if.end.6, %if.then.3
  %retval.0 = phi %struct._object* [ %call.i, %if.then.3 ], [ @_Py_NoneStruct, %if.end.6 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %2) #3, !dbg !9091
  call void @llvm.lifetime.end(i64 8, i8* %1) #3, !dbg !9091
  call void @llvm.lifetime.end(i64 8, i8* %0) #3, !dbg !9091
  ret %struct._object* %retval.0, !dbg !9091
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_posix_fadvise(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %len = alloca i64, align 8
  %offset = alloca i64, align 8
  %fd = alloca i32, align 4
  %advice = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2690, metadata !3839), !dbg !9092
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2691, metadata !3839), !dbg !9093
  %0 = bitcast i64* %len to i8*, !dbg !9094
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !9094
  %1 = bitcast i64* %offset to i8*, !dbg !9094
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !9094
  %2 = bitcast i32* %fd to i8*, !dbg !9095
  call void @llvm.lifetime.start(i64 4, i8* %2) #3, !dbg !9095
  %3 = bitcast i32* %advice to i8*, !dbg !9095
  call void @llvm.lifetime.start(i64 4, i8* %3) #3, !dbg !9095
  tail call void @llvm.dbg.value(metadata i64* %len, i64 0, metadata !2692, metadata !3839), !dbg !9096
  tail call void @llvm.dbg.value(metadata i64* %offset, i64 0, metadata !2693, metadata !3839), !dbg !9097
  tail call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2695, metadata !3839), !dbg !9098
  tail call void @llvm.dbg.value(metadata i32* %advice, i64 0, metadata !2696, metadata !3839), !dbg !9099
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.321, i64 0, i64 0), i32* nonnull %fd, i32 (%struct._object*, i8*)* nonnull @_parse_off_t, i64* nonnull %offset, i32 (%struct._object*, i8*)* nonnull @_parse_off_t, i64* nonnull %len, i32* nonnull %advice) #3, !dbg !9100
  %tobool = icmp eq i32 %call, 0, !dbg !9100
  br i1 %tobool, label %cleanup, label %if.end, !dbg !9102

if.end:                                           ; preds = %entry
  %call1 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !9103
  call void @llvm.dbg.value(metadata %struct._ts* %call1, i64 0, metadata !2697, metadata !3839), !dbg !9103
  call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2695, metadata !3839), !dbg !9098
  %4 = load i32, i32* %fd, align 4, !dbg !9104, !tbaa !3890
  call void @llvm.dbg.value(metadata i64* %offset, i64 0, metadata !2693, metadata !3839), !dbg !9097
  %5 = load i64, i64* %offset, align 8, !dbg !9105, !tbaa !4482
  call void @llvm.dbg.value(metadata i64* %len, i64 0, metadata !2692, metadata !3839), !dbg !9096
  %6 = load i64, i64* %len, align 8, !dbg !9106, !tbaa !4482
  call void @llvm.dbg.value(metadata i32* %advice, i64 0, metadata !2696, metadata !3839), !dbg !9099
  %7 = load i32, i32* %advice, align 4, !dbg !9107, !tbaa !3890
  %call2 = call i32 @posix_fadvise64(i32 %4, i64 %5, i64 %6, i32 %7) #3, !dbg !9108
  call void @llvm.dbg.value(metadata i32 %call2, i64 0, metadata !2694, metadata !3839), !dbg !9109
  call void @PyEval_RestoreThread(%struct._ts* %call1) #3, !dbg !9110
  %cmp = icmp eq i32 %call2, 0, !dbg !9111
  br i1 %cmp, label %if.end.6, label %if.then.3, !dbg !9113

if.then.3:                                        ; preds = %if.end
  %call4 = tail call i32* @__errno_location() #1, !dbg !9114
  store i32 %call2, i32* %call4, align 4, !dbg !9116, !tbaa !3890
  %8 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !9117, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %8) #3, !dbg !9119
  br label %cleanup, !dbg !9120

if.end.6:                                         ; preds = %if.end
  %9 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !9121, !tbaa !3930
  %inc = add i64 %9, 1, !dbg !9121
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !9121, !tbaa !3930
  br label %cleanup, !dbg !9121

cleanup:                                          ; preds = %entry, %if.end.6, %if.then.3
  %retval.0 = phi %struct._object* [ %call.i, %if.then.3 ], [ @_Py_NoneStruct, %if.end.6 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %3) #3, !dbg !9122
  call void @llvm.lifetime.end(i64 4, i8* %2) #3, !dbg !9122
  call void @llvm.lifetime.end(i64 8, i8* %1) #3, !dbg !9122
  call void @llvm.lifetime.end(i64 8, i8* %0) #3, !dbg !9122
  ret %struct._object* %retval.0, !dbg !9122
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_putenv(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %os1 = alloca %struct._object*, align 8
  %os2 = alloca %struct._object*, align 8
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2701, metadata !3839), !dbg !9123
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2702, metadata !3839), !dbg !9124
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !2703, metadata !3839), !dbg !9125
  %0 = bitcast %struct._object** %os1 to i8*, !dbg !9126
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !9126
  %1 = bitcast %struct._object** %os2 to i8*, !dbg !9126
  call void @llvm.lifetime.start(i64 8, i8* %1) #3, !dbg !9126
  tail call void @llvm.dbg.value(metadata %struct._object** %os1, i64 0, metadata !2704, metadata !3839), !dbg !9127
  tail call void @llvm.dbg.value(metadata %struct._object** %os2, i64 0, metadata !2705, metadata !3839), !dbg !9128
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.322, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @PyUnicode_FSConverter, %struct._object** nonnull %os1, i32 (%struct._object*, i8*)* nonnull @PyUnicode_FSConverter, %struct._object** nonnull %os2) #3, !dbg !9129
  %tobool = icmp eq i32 %call, 0, !dbg !9129
  br i1 %tobool, label %cleanup, label %if.end, !dbg !9131

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct._object** %os1, i64 0, metadata !2704, metadata !3839), !dbg !9127
  %2 = load %struct._object*, %struct._object** %os1, align 8, !dbg !9132, !tbaa !3870
  %call1 = call i8* @PyBytes_AsString(%struct._object* %2) #3, !dbg !9133
  call void @llvm.dbg.value(metadata i8* %call1, i64 0, metadata !2706, metadata !3839), !dbg !9134
  call void @llvm.dbg.value(metadata %struct._object** %os2, i64 0, metadata !2705, metadata !3839), !dbg !9128
  %3 = load %struct._object*, %struct._object** %os2, align 8, !dbg !9135, !tbaa !3870
  %call2 = call i8* @PyBytes_AsString(%struct._object* %3) #3, !dbg !9136
  call void @llvm.dbg.value(metadata i8* %call2, i64 0, metadata !2707, metadata !3839), !dbg !9137
  %call3 = call %struct._object* (i8*, ...) @PyBytes_FromFormat(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.237, i64 0, i64 0), i8* %call1, i8* %call2) #3, !dbg !9138
  call void @llvm.dbg.value(metadata %struct._object* %call3, i64 0, metadata !2703, metadata !3839), !dbg !9125
  %cmp = icmp eq %struct._object* %call3, null, !dbg !9139
  br i1 %cmp, label %if.then.4, label %if.end.6, !dbg !9141

if.then.4:                                        ; preds = %if.end
  %call5 = call %struct._object* @PyErr_NoMemory() #3, !dbg !9142
  br label %do.body.44, !dbg !9144

if.end.6:                                         ; preds = %if.end
  %ob_sval = getelementptr inbounds %struct._object, %struct._object* %call3, i64 2, !dbg !9145
  %arraydecay = bitcast %struct._object* %ob_sval to i8*, !dbg !9145
  call void @llvm.dbg.value(metadata i8* %arraydecay, i64 0, metadata !2708, metadata !3839), !dbg !9146
  %call7 = call i32 @putenv(i8* %arraydecay) #3, !dbg !9147
  %tobool8 = icmp eq i32 %call7, 0, !dbg !9147
  br i1 %tobool8, label %if.end.11, label %if.then.9, !dbg !9149

if.then.9:                                        ; preds = %if.end.6
  %4 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !9150, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %4) #3, !dbg !9153
  br label %do.body.44, !dbg !9154

if.end.11:                                        ; preds = %if.end.6
  %5 = load %struct._object*, %struct._object** @posix_putenv_garbage, align 8, !dbg !9155, !tbaa !3870
  call void @llvm.dbg.value(metadata %struct._object** %os1, i64 0, metadata !2704, metadata !3839), !dbg !9127
  %6 = load %struct._object*, %struct._object** %os1, align 8, !dbg !9156, !tbaa !3870
  %call12 = call i32 @PyDict_SetItem(%struct._object* %5, %struct._object* %6, %struct._object* %call3) #3, !dbg !9157
  %tobool13 = icmp eq i32 %call12, 0, !dbg !9157
  br i1 %tobool13, label %do.body, label %if.then.14, !dbg !9158

if.then.14:                                       ; preds = %if.end.11
  call void @PyErr_Clear() #3, !dbg !9159
  br label %do.body.20, !dbg !9161

do.body:                                          ; preds = %if.end.11
  call void @llvm.dbg.value(metadata %struct._object* %call3, i64 0, metadata !2709, metadata !3839), !dbg !9162
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call3, i64 0, i32 0, !dbg !9164
  %7 = load i64, i64* %ob_refcnt, align 8, !dbg !9164, !tbaa !3930
  %dec = add i64 %7, -1, !dbg !9164
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !9164, !tbaa !3930
  %cmp15 = icmp eq i64 %dec, 0, !dbg !9164
  br i1 %cmp15, label %if.else.17, label %do.body.20, !dbg !9166

if.else.17:                                       ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call3, i64 0, i32 1, !dbg !9167
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !9167, !tbaa !3875
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i64 0, i32 4, !dbg !9167
  %9 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !9167, !tbaa !3934
  call void %9(%struct._object* %call3) #3, !dbg !9167
  br label %do.body.20

do.body.20:                                       ; preds = %if.else.17, %do.body, %if.then.14
  call void @llvm.dbg.value(metadata %struct._object** %os1, i64 0, metadata !2704, metadata !3839), !dbg !9127
  %10 = load %struct._object*, %struct._object** %os1, align 8, !dbg !9169, !tbaa !3870
  call void @llvm.dbg.value(metadata %struct._object* %10, i64 0, metadata !2713, metadata !3839), !dbg !9169
  %ob_refcnt22 = getelementptr inbounds %struct._object, %struct._object* %10, i64 0, i32 0, !dbg !9171
  %11 = load i64, i64* %ob_refcnt22, align 8, !dbg !9171, !tbaa !3930
  %dec23 = add i64 %11, -1, !dbg !9171
  store i64 %dec23, i64* %ob_refcnt22, align 8, !dbg !9171, !tbaa !3930
  %cmp24 = icmp eq i64 %dec23, 0, !dbg !9171
  br i1 %cmp24, label %if.else.26, label %if.end.29, !dbg !9173

if.else.26:                                       ; preds = %do.body.20
  %ob_type27 = getelementptr inbounds %struct._object, %struct._object* %10, i64 0, i32 1, !dbg !9174
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type27, align 8, !dbg !9174, !tbaa !3875
  %tp_dealloc28 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i64 0, i32 4, !dbg !9174
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc28, align 8, !dbg !9174, !tbaa !3934
  call void %13(%struct._object* %10) #3, !dbg !9174
  br label %if.end.29

if.end.29:                                        ; preds = %do.body.20, %if.else.26
  call void @llvm.dbg.value(metadata %struct._object** %os2, i64 0, metadata !2705, metadata !3839), !dbg !9128
  %14 = load %struct._object*, %struct._object** %os2, align 8, !dbg !9176, !tbaa !3870
  call void @llvm.dbg.value(metadata %struct._object* %14, i64 0, metadata !2715, metadata !3839), !dbg !9176
  %ob_refcnt34 = getelementptr inbounds %struct._object, %struct._object* %14, i64 0, i32 0, !dbg !9178
  %15 = load i64, i64* %ob_refcnt34, align 8, !dbg !9178, !tbaa !3930
  %dec35 = add i64 %15, -1, !dbg !9178
  store i64 %dec35, i64* %ob_refcnt34, align 8, !dbg !9178, !tbaa !3930
  %cmp36 = icmp eq i64 %dec35, 0, !dbg !9178
  br i1 %cmp36, label %if.else.38, label %if.end.41, !dbg !9180

if.else.38:                                       ; preds = %if.end.29
  %ob_type39 = getelementptr inbounds %struct._object, %struct._object* %14, i64 0, i32 1, !dbg !9181
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type39, align 8, !dbg !9181, !tbaa !3875
  %tp_dealloc40 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %16, i64 0, i32 4, !dbg !9181
  %17 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc40, align 8, !dbg !9181, !tbaa !3934
  call void %17(%struct._object* %14) #3, !dbg !9181
  br label %if.end.41

if.end.41:                                        ; preds = %if.end.29, %if.else.38
  %18 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !9183, !tbaa !3930
  %inc = add i64 %18, 1, !dbg !9183
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !9183, !tbaa !3930
  br label %cleanup, !dbg !9183

do.body.44:                                       ; preds = %if.then.4, %if.then.9
  call void @llvm.dbg.value(metadata %struct._object** %os1, i64 0, metadata !2704, metadata !3839), !dbg !9127
  %19 = load %struct._object*, %struct._object** %os1, align 8, !dbg !9184, !tbaa !3870
  call void @llvm.dbg.value(metadata %struct._object* %19, i64 0, metadata !2717, metadata !3839), !dbg !9184
  %ob_refcnt46 = getelementptr inbounds %struct._object, %struct._object* %19, i64 0, i32 0, !dbg !9186
  %20 = load i64, i64* %ob_refcnt46, align 8, !dbg !9186, !tbaa !3930
  %dec47 = add i64 %20, -1, !dbg !9186
  store i64 %dec47, i64* %ob_refcnt46, align 8, !dbg !9186, !tbaa !3930
  %cmp48 = icmp eq i64 %dec47, 0, !dbg !9186
  br i1 %cmp48, label %if.else.50, label %if.end.53, !dbg !9188

if.else.50:                                       ; preds = %do.body.44
  %ob_type51 = getelementptr inbounds %struct._object, %struct._object* %19, i64 0, i32 1, !dbg !9189
  %21 = load %struct._typeobject*, %struct._typeobject** %ob_type51, align 8, !dbg !9189, !tbaa !3875
  %tp_dealloc52 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %21, i64 0, i32 4, !dbg !9189
  %22 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc52, align 8, !dbg !9189, !tbaa !3934
  call void %22(%struct._object* %19) #3, !dbg !9189
  br label %if.end.53

if.end.53:                                        ; preds = %do.body.44, %if.else.50
  call void @llvm.dbg.value(metadata %struct._object** %os2, i64 0, metadata !2705, metadata !3839), !dbg !9128
  %23 = load %struct._object*, %struct._object** %os2, align 8, !dbg !9191, !tbaa !3870
  call void @llvm.dbg.value(metadata %struct._object* %23, i64 0, metadata !2719, metadata !3839), !dbg !9191
  %ob_refcnt58 = getelementptr inbounds %struct._object, %struct._object* %23, i64 0, i32 0, !dbg !9193
  %24 = load i64, i64* %ob_refcnt58, align 8, !dbg !9193, !tbaa !3930
  %dec59 = add i64 %24, -1, !dbg !9193
  store i64 %dec59, i64* %ob_refcnt58, align 8, !dbg !9193, !tbaa !3930
  %cmp60 = icmp eq i64 %dec59, 0, !dbg !9193
  br i1 %cmp60, label %if.else.62, label %if.end.65, !dbg !9195

if.else.62:                                       ; preds = %if.end.53
  %ob_type63 = getelementptr inbounds %struct._object, %struct._object* %23, i64 0, i32 1, !dbg !9196
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type63, align 8, !dbg !9196, !tbaa !3875
  %tp_dealloc64 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i64 0, i32 4, !dbg !9196
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc64, align 8, !dbg !9196, !tbaa !3934
  call void %26(%struct._object* %23) #3, !dbg !9196
  br label %if.end.65

if.end.65:                                        ; preds = %if.end.53, %if.else.62
  call void @llvm.dbg.value(metadata %struct._object* %call3, i64 0, metadata !2721, metadata !3839), !dbg !9198
  br i1 %cmp, label %cleanup, label %do.body.71, !dbg !9200

do.body.71:                                       ; preds = %if.end.65
  call void @llvm.dbg.value(metadata %struct._object* %call3, i64 0, metadata !2723, metadata !3839), !dbg !9201
  %ob_refcnt73 = getelementptr inbounds %struct._object, %struct._object* %call3, i64 0, i32 0, !dbg !9203
  %27 = load i64, i64* %ob_refcnt73, align 8, !dbg !9203, !tbaa !3930
  %dec74 = add i64 %27, -1, !dbg !9203
  store i64 %dec74, i64* %ob_refcnt73, align 8, !dbg !9203, !tbaa !3930
  %cmp75 = icmp eq i64 %dec74, 0, !dbg !9203
  br i1 %cmp75, label %if.else.77, label %cleanup, !dbg !9205

if.else.77:                                       ; preds = %do.body.71
  %ob_type78 = getelementptr inbounds %struct._object, %struct._object* %call3, i64 0, i32 1, !dbg !9206
  %28 = load %struct._typeobject*, %struct._typeobject** %ob_type78, align 8, !dbg !9206, !tbaa !3875
  %tp_dealloc79 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %28, i64 0, i32 4, !dbg !9206
  %29 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc79, align 8, !dbg !9206, !tbaa !3934
  call void %29(%struct._object* %call3) #3, !dbg !9206
  br label %cleanup

cleanup:                                          ; preds = %if.end.65, %do.body.71, %if.else.77, %entry, %if.end.41
  %retval.0 = phi %struct._object* [ @_Py_NoneStruct, %if.end.41 ], [ null, %entry ], [ null, %if.else.77 ], [ null, %do.body.71 ], [ null, %if.end.65 ]
  call void @llvm.lifetime.end(i64 8, i8* %1) #3, !dbg !9208
  call void @llvm.lifetime.end(i64 8, i8* %0) #3, !dbg !9208
  ret %struct._object* %retval.0, !dbg !9208
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_unsetenv(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %name = alloca %struct._object*, align 8
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2728, metadata !3839), !dbg !9209
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2729, metadata !3839), !dbg !9210
  %0 = bitcast %struct._object** %name to i8*, !dbg !9211
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !9211
  tail call void @llvm.dbg.value(metadata %struct._object** %name, i64 0, metadata !2730, metadata !3839), !dbg !9212
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.323, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @PyUnicode_FSConverter, %struct._object** nonnull %name) #3, !dbg !9213
  %tobool = icmp eq i32 %call, 0, !dbg !9213
  br i1 %tobool, label %cleanup, label %if.end, !dbg !9215

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct._object** %name, i64 0, metadata !2730, metadata !3839), !dbg !9212
  %1 = bitcast %struct._object** %name to %struct.PyBytesObject**, !dbg !9216
  %2 = load %struct.PyBytesObject*, %struct.PyBytesObject** %1, align 8, !dbg !9216, !tbaa !3870
  %arraydecay = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %2, i64 0, i32 2, i64 0, !dbg !9216
  %call1 = call i32 @unsetenv(i8* %arraydecay) #3, !dbg !9217
  call void @llvm.dbg.value(metadata i32 %call1, i64 0, metadata !2731, metadata !3839), !dbg !9218
  %tobool2 = icmp eq i32 %call1, 0, !dbg !9219
  br i1 %tobool2, label %if.end.7, label %do.body, !dbg !9220

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct._object** %name, i64 0, metadata !2730, metadata !3839), !dbg !9212
  %3 = load %struct._object*, %struct._object** %name, align 8, !dbg !9221, !tbaa !3870
  call void @llvm.dbg.value(metadata %struct._object* %3, i64 0, metadata !2732, metadata !3839), !dbg !9221
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %3, i64 0, i32 0, !dbg !9223
  %4 = load i64, i64* %ob_refcnt, align 8, !dbg !9223, !tbaa !3930
  %dec = add i64 %4, -1, !dbg !9223
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !9223, !tbaa !3930
  %cmp = icmp eq i64 %dec, 0, !dbg !9223
  br i1 %cmp, label %if.else, label %if.end.5, !dbg !9225

if.else:                                          ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %3, i64 0, i32 1, !dbg !9226
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !9226, !tbaa !3875
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i64 0, i32 4, !dbg !9226
  %6 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !9226, !tbaa !3934
  call void %6(%struct._object* %3) #3, !dbg !9226
  br label %if.end.5

if.end.5:                                         ; preds = %do.body, %if.else
  %7 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !9228, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %7) #3, !dbg !9230
  br label %cleanup, !dbg !9231

if.end.7:                                         ; preds = %if.end
  %8 = load %struct._object*, %struct._object** @posix_putenv_garbage, align 8, !dbg !9232, !tbaa !3870
  call void @llvm.dbg.value(metadata %struct._object** %name, i64 0, metadata !2730, metadata !3839), !dbg !9212
  %9 = load %struct._object*, %struct._object** %name, align 8, !dbg !9234, !tbaa !3870
  %call8 = call i32 @PyDict_DelItem(%struct._object* %8, %struct._object* %9) #3, !dbg !9235
  %tobool9 = icmp eq i32 %call8, 0, !dbg !9235
  br i1 %tobool9, label %do.body.12, label %if.then.10, !dbg !9236

if.then.10:                                       ; preds = %if.end.7
  call void @PyErr_Clear() #3, !dbg !9237
  br label %do.body.12, !dbg !9239

do.body.12:                                       ; preds = %if.end.7, %if.then.10
  call void @llvm.dbg.value(metadata %struct._object** %name, i64 0, metadata !2730, metadata !3839), !dbg !9212
  %10 = load %struct._object*, %struct._object** %name, align 8, !dbg !9240, !tbaa !3870
  call void @llvm.dbg.value(metadata %struct._object* %10, i64 0, metadata !2736, metadata !3839), !dbg !9240
  %ob_refcnt14 = getelementptr inbounds %struct._object, %struct._object* %10, i64 0, i32 0, !dbg !9242
  %11 = load i64, i64* %ob_refcnt14, align 8, !dbg !9242, !tbaa !3930
  %dec15 = add i64 %11, -1, !dbg !9242
  store i64 %dec15, i64* %ob_refcnt14, align 8, !dbg !9242, !tbaa !3930
  %cmp16 = icmp eq i64 %dec15, 0, !dbg !9242
  br i1 %cmp16, label %if.else.18, label %if.end.21, !dbg !9244

if.else.18:                                       ; preds = %do.body.12
  %ob_type19 = getelementptr inbounds %struct._object, %struct._object* %10, i64 0, i32 1, !dbg !9245
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type19, align 8, !dbg !9245, !tbaa !3875
  %tp_dealloc20 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i64 0, i32 4, !dbg !9245
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc20, align 8, !dbg !9245, !tbaa !3934
  call void %13(%struct._object* %10) #3, !dbg !9245
  br label %if.end.21

if.end.21:                                        ; preds = %do.body.12, %if.else.18
  %14 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !9247, !tbaa !3930
  %inc = add i64 %14, 1, !dbg !9247
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !9247, !tbaa !3930
  br label %cleanup, !dbg !9247

cleanup:                                          ; preds = %entry, %if.end.21, %if.end.5
  %retval.0 = phi %struct._object* [ %call.i, %if.end.5 ], [ @_Py_NoneStruct, %if.end.21 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 8, i8* %0) #3, !dbg !9248
  ret %struct._object* %retval.0, !dbg !9248
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_strerror(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %code = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2740, metadata !3839), !dbg !9249
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2741, metadata !3839), !dbg !9250
  %0 = bitcast i32* %code to i8*, !dbg !9251
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !9251
  tail call void @llvm.dbg.value(metadata i32* %code, i64 0, metadata !2742, metadata !3839), !dbg !9252
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.324, i64 0, i64 0), i32* nonnull %code) #3, !dbg !9253
  %tobool = icmp eq i32 %call, 0, !dbg !9253
  br i1 %tobool, label %cleanup, label %if.end, !dbg !9255

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %code, i64 0, metadata !2742, metadata !3839), !dbg !9252
  %1 = load i32, i32* %code, align 4, !dbg !9256, !tbaa !3890
  %call1 = call i8* @strerror(i32 %1) #3, !dbg !9257
  call void @llvm.dbg.value(metadata i8* %call1, i64 0, metadata !2743, metadata !3839), !dbg !9258
  %cmp = icmp eq i8* %call1, null, !dbg !9259
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !9261

if.then.2:                                        ; preds = %if.end
  %2 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !9262, !tbaa !3870
  call void @PyErr_SetString(%struct._object* %2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.325, i64 0, i64 0)) #3, !dbg !9264
  br label %cleanup, !dbg !9265

if.end.3:                                         ; preds = %if.end
  %call4 = call %struct._object* @PyUnicode_DecodeLocale(i8* %call1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.326, i64 0, i64 0)) #3, !dbg !9266
  br label %cleanup, !dbg !9267

cleanup:                                          ; preds = %entry, %if.end.3, %if.then.2
  %retval.0 = phi %struct._object* [ null, %if.then.2 ], [ %call4, %if.end.3 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !9268
  ret %struct._object* %retval.0, !dbg !9268
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_fchdir(%struct._object* nocapture readnone %self, %struct._object* %fdobj) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2746, metadata !3839), !dbg !9269
  tail call void @llvm.dbg.value(metadata %struct._object* %fdobj, i64 0, metadata !2747, metadata !3839), !dbg !9270
  tail call void @llvm.dbg.value(metadata %struct._object* %fdobj, i64 0, metadata !2755, metadata !3839) #3, !dbg !9271
  tail call void @llvm.dbg.value(metadata i32 (i32)* @fchdir, i64 0, metadata !2756, metadata !3839) #3, !dbg !9273
  %call.i = tail call i32 @PyObject_AsFileDescriptor(%struct._object* %fdobj) #3, !dbg !9274
  tail call void @llvm.dbg.value(metadata i32 %call.i, i64 0, metadata !2757, metadata !3839) #3, !dbg !9275
  %cmp.i = icmp slt i32 %call.i, 0, !dbg !9276
  br i1 %cmp.i, label %posix_fildes.exit, label %if.end.i, !dbg !9278

if.end.i:                                         ; preds = %entry
  %call1.i = tail call %struct._ts* @PyEval_SaveThread() #3, !dbg !9279
  tail call void @llvm.dbg.value(metadata %struct._ts* %call1.i, i64 0, metadata !2759, metadata !3839) #3, !dbg !9279
  %call2.i = tail call i32 @fchdir(i32 %call.i) #3, !dbg !9280
  tail call void @llvm.dbg.value(metadata i32 %call2.i, i64 0, metadata !2758, metadata !3839) #3, !dbg !9281
  tail call void @PyEval_RestoreThread(%struct._ts* %call1.i) #3, !dbg !9282
  %cmp3.i = icmp slt i32 %call2.i, 0, !dbg !9283
  br i1 %cmp3.i, label %if.then.4.i, label %if.end.6.i, !dbg !9285

if.then.4.i:                                      ; preds = %if.end.i
  %0 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !9286, !tbaa !3870
  %call.i.i = tail call %struct._object* @PyErr_SetFromErrno(%struct._object* %0) #3, !dbg !9288
  br label %posix_fildes.exit, !dbg !9289

if.end.6.i:                                       ; preds = %if.end.i
  %1 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !9290, !tbaa !3930
  %inc.i = add i64 %1, 1, !dbg !9290
  store i64 %inc.i, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !9290, !tbaa !3930
  br label %posix_fildes.exit, !dbg !9291

posix_fildes.exit:                                ; preds = %entry, %if.then.4.i, %if.end.6.i
  %retval.0.i = phi %struct._object* [ %call.i.i, %if.then.4.i ], [ @_Py_NoneStruct, %if.end.6.i ], [ null, %entry ], !dbg !9292
  ret %struct._object* %retval.0.i, !dbg !9293
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_fsync(%struct._object* nocapture readnone %self, %struct._object* %fdobj) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2763, metadata !3839), !dbg !9294
  tail call void @llvm.dbg.value(metadata %struct._object* %fdobj, i64 0, metadata !2764, metadata !3839), !dbg !9295
  tail call void @llvm.dbg.value(metadata %struct._object* %fdobj, i64 0, metadata !2755, metadata !3839) #3, !dbg !9296
  tail call void @llvm.dbg.value(metadata i32 (i32)* @fsync, i64 0, metadata !2756, metadata !3839) #3, !dbg !9298
  %call.i = tail call i32 @PyObject_AsFileDescriptor(%struct._object* %fdobj) #3, !dbg !9299
  tail call void @llvm.dbg.value(metadata i32 %call.i, i64 0, metadata !2757, metadata !3839) #3, !dbg !9300
  %cmp.i = icmp slt i32 %call.i, 0, !dbg !9301
  br i1 %cmp.i, label %posix_fildes.exit, label %if.end.i, !dbg !9302

if.end.i:                                         ; preds = %entry
  %call1.i = tail call %struct._ts* @PyEval_SaveThread() #3, !dbg !9303
  tail call void @llvm.dbg.value(metadata %struct._ts* %call1.i, i64 0, metadata !2759, metadata !3839) #3, !dbg !9303
  %call2.i = tail call i32 @fsync(i32 %call.i) #3, !dbg !9304
  tail call void @llvm.dbg.value(metadata i32 %call2.i, i64 0, metadata !2758, metadata !3839) #3, !dbg !9305
  tail call void @PyEval_RestoreThread(%struct._ts* %call1.i) #3, !dbg !9306
  %cmp3.i = icmp slt i32 %call2.i, 0, !dbg !9307
  br i1 %cmp3.i, label %if.then.4.i, label %if.end.6.i, !dbg !9308

if.then.4.i:                                      ; preds = %if.end.i
  %0 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !9309, !tbaa !3870
  %call.i.i = tail call %struct._object* @PyErr_SetFromErrno(%struct._object* %0) #3, !dbg !9311
  br label %posix_fildes.exit, !dbg !9312

if.end.6.i:                                       ; preds = %if.end.i
  %1 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !9313, !tbaa !3930
  %inc.i = add i64 %1, 1, !dbg !9313
  store i64 %inc.i, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !9313, !tbaa !3930
  br label %posix_fildes.exit, !dbg !9314

posix_fildes.exit:                                ; preds = %entry, %if.then.4.i, %if.end.6.i
  %retval.0.i = phi %struct._object* [ %call.i.i, %if.then.4.i ], [ @_Py_NoneStruct, %if.end.6.i ], [ null, %entry ], !dbg !9315
  ret %struct._object* %retval.0.i, !dbg !9316
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_sync(%struct._object* nocapture readnone %self, %struct._object* nocapture readnone %noargs) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2767, metadata !3839), !dbg !9317
  tail call void @llvm.dbg.value(metadata %struct._object* %noargs, i64 0, metadata !2768, metadata !3839), !dbg !9318
  %call = tail call %struct._ts* @PyEval_SaveThread() #3, !dbg !9319
  tail call void @llvm.dbg.value(metadata %struct._ts* %call, i64 0, metadata !2769, metadata !3839), !dbg !9319
  tail call void @sync() #3, !dbg !9320
  tail call void @PyEval_RestoreThread(%struct._ts* %call) #3, !dbg !9321
  %0 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !9322, !tbaa !3930
  %inc = add i64 %0, 1, !dbg !9322
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !9322, !tbaa !3930
  ret %struct._object* @_Py_NoneStruct, !dbg !9322
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_fdatasync(%struct._object* nocapture readnone %self, %struct._object* %fdobj) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2773, metadata !3839), !dbg !9323
  tail call void @llvm.dbg.value(metadata %struct._object* %fdobj, i64 0, metadata !2774, metadata !3839), !dbg !9324
  tail call void @llvm.dbg.value(metadata %struct._object* %fdobj, i64 0, metadata !2755, metadata !3839) #3, !dbg !9325
  tail call void @llvm.dbg.value(metadata i32 (i32)* @fdatasync, i64 0, metadata !2756, metadata !3839) #3, !dbg !9327
  %call.i = tail call i32 @PyObject_AsFileDescriptor(%struct._object* %fdobj) #3, !dbg !9328
  tail call void @llvm.dbg.value(metadata i32 %call.i, i64 0, metadata !2757, metadata !3839) #3, !dbg !9329
  %cmp.i = icmp slt i32 %call.i, 0, !dbg !9330
  br i1 %cmp.i, label %posix_fildes.exit, label %if.end.i, !dbg !9331

if.end.i:                                         ; preds = %entry
  %call1.i = tail call %struct._ts* @PyEval_SaveThread() #3, !dbg !9332
  tail call void @llvm.dbg.value(metadata %struct._ts* %call1.i, i64 0, metadata !2759, metadata !3839) #3, !dbg !9332
  %call2.i = tail call i32 @fdatasync(i32 %call.i) #3, !dbg !9333
  tail call void @llvm.dbg.value(metadata i32 %call2.i, i64 0, metadata !2758, metadata !3839) #3, !dbg !9334
  tail call void @PyEval_RestoreThread(%struct._ts* %call1.i) #3, !dbg !9335
  %cmp3.i = icmp slt i32 %call2.i, 0, !dbg !9336
  br i1 %cmp3.i, label %if.then.4.i, label %if.end.6.i, !dbg !9337

if.then.4.i:                                      ; preds = %if.end.i
  %0 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !9338, !tbaa !3870
  %call.i.i = tail call %struct._object* @PyErr_SetFromErrno(%struct._object* %0) #3, !dbg !9340
  br label %posix_fildes.exit, !dbg !9341

if.end.6.i:                                       ; preds = %if.end.i
  %1 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !9342, !tbaa !3930
  %inc.i = add i64 %1, 1, !dbg !9342
  store i64 %inc.i, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !9342, !tbaa !3930
  br label %posix_fildes.exit, !dbg !9343

posix_fildes.exit:                                ; preds = %entry, %if.then.4.i, %if.end.6.i
  %retval.0.i = phi %struct._object* [ %call.i.i, %if.then.4.i ], [ @_Py_NoneStruct, %if.end.6.i ], [ null, %entry ], !dbg !9344
  ret %struct._object* %retval.0.i, !dbg !9345
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_WCOREDUMP(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %status = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2777, metadata !3839), !dbg !9346
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2778, metadata !3839), !dbg !9347
  %0 = bitcast i32* %status to i8*, !dbg !9348
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !9348
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !2779, metadata !3839), !dbg !9349
  store i32 0, i32* %status, align 4, !dbg !9350, !tbaa !3890
  tail call void @llvm.dbg.value(metadata i32* %status, i64 0, metadata !2779, metadata !3839), !dbg !9349
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.327, i64 0, i64 0), i32* nonnull %status) #3, !dbg !9351
  %tobool = icmp eq i32 %call, 0, !dbg !9351
  br i1 %tobool, label %cleanup, label %if.end, !dbg !9353

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %status, i64 0, metadata !2779, metadata !3839), !dbg !9349
  %1 = load i32, i32* %status, align 4, !dbg !9354, !tbaa !3890
  %and = and i32 %1, 128, !dbg !9354
  %conv.2 = zext i32 %and to i64, !dbg !9354
  %call1 = call %struct._object* @PyBool_FromLong(i64 %conv.2) #3, !dbg !9355
  br label %cleanup, !dbg !9356

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct._object* [ %call1, %if.end ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !9357
  ret %struct._object* %retval.0, !dbg !9357
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_WIFCONTINUED(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %status = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2782, metadata !3839), !dbg !9358
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2783, metadata !3839), !dbg !9359
  %0 = bitcast i32* %status to i8*, !dbg !9360
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !9360
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !2784, metadata !3839), !dbg !9361
  store i32 0, i32* %status, align 4, !dbg !9362, !tbaa !3890
  tail call void @llvm.dbg.value(metadata i32* %status, i64 0, metadata !2784, metadata !3839), !dbg !9361
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.328, i64 0, i64 0), i32* nonnull %status) #3, !dbg !9363
  %tobool = icmp eq i32 %call, 0, !dbg !9363
  br i1 %tobool, label %cleanup, label %if.end, !dbg !9365

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %status, i64 0, metadata !2784, metadata !3839), !dbg !9361
  %1 = load i32, i32* %status, align 4, !dbg !9366, !tbaa !3890
  %cmp = icmp eq i32 %1, 65535, !dbg !9366
  %conv1 = zext i1 %cmp to i64, !dbg !9366
  %call2 = call %struct._object* @PyBool_FromLong(i64 %conv1) #3, !dbg !9367
  br label %cleanup, !dbg !9368

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct._object* [ %call2, %if.end ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !9369
  ret %struct._object* %retval.0, !dbg !9369
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_WIFSTOPPED(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %status = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2787, metadata !3839), !dbg !9370
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2788, metadata !3839), !dbg !9371
  %0 = bitcast i32* %status to i8*, !dbg !9372
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !9372
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !2789, metadata !3839), !dbg !9373
  store i32 0, i32* %status, align 4, !dbg !9374, !tbaa !3890
  tail call void @llvm.dbg.value(metadata i32* %status, i64 0, metadata !2789, metadata !3839), !dbg !9373
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.329, i64 0, i64 0), i32* nonnull %status) #3, !dbg !9375
  %tobool = icmp eq i32 %call, 0, !dbg !9375
  br i1 %tobool, label %cleanup, label %if.end, !dbg !9377

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %status, i64 0, metadata !2789, metadata !3839), !dbg !9373
  %1 = load i32, i32* %status, align 4, !dbg !9378, !tbaa !3890
  %and = and i32 %1, 255, !dbg !9378
  %cmp = icmp eq i32 %and, 127, !dbg !9378
  %conv1 = zext i1 %cmp to i64, !dbg !9378
  %call2 = call %struct._object* @PyBool_FromLong(i64 %conv1) #3, !dbg !9379
  br label %cleanup, !dbg !9380

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct._object* [ %call2, %if.end ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !9381
  ret %struct._object* %retval.0, !dbg !9381
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_WIFSIGNALED(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %status = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2792, metadata !3839), !dbg !9382
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2793, metadata !3839), !dbg !9383
  %0 = bitcast i32* %status to i8*, !dbg !9384
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !9384
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !2794, metadata !3839), !dbg !9385
  store i32 0, i32* %status, align 4, !dbg !9386, !tbaa !3890
  tail call void @llvm.dbg.value(metadata i32* %status, i64 0, metadata !2794, metadata !3839), !dbg !9385
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.330, i64 0, i64 0), i32* nonnull %status) #3, !dbg !9387
  %tobool = icmp eq i32 %call, 0, !dbg !9387
  br i1 %tobool, label %cleanup, label %if.end, !dbg !9389

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %status, i64 0, metadata !2794, metadata !3839), !dbg !9385
  %1 = load i32, i32* %status, align 4, !dbg !9390, !tbaa !3890
  %and = shl i32 %1, 24, !dbg !9390
  %add = and i32 %and, 2130706432, !dbg !9390
  %sext = add nuw i32 %add, 16777216, !dbg !9390
  %shr = ashr i32 %sext, 25, !dbg !9390
  %cmp = icmp sgt i32 %shr, 0, !dbg !9390
  %conv3 = zext i1 %cmp to i64, !dbg !9390
  %call4 = call %struct._object* @PyBool_FromLong(i64 %conv3) #3, !dbg !9391
  br label %cleanup, !dbg !9392

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct._object* [ %call4, %if.end ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !9393
  ret %struct._object* %retval.0, !dbg !9393
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_WIFEXITED(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %status = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2797, metadata !3839), !dbg !9394
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2798, metadata !3839), !dbg !9395
  %0 = bitcast i32* %status to i8*, !dbg !9396
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !9396
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !2799, metadata !3839), !dbg !9397
  store i32 0, i32* %status, align 4, !dbg !9398, !tbaa !3890
  tail call void @llvm.dbg.value(metadata i32* %status, i64 0, metadata !2799, metadata !3839), !dbg !9397
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.331, i64 0, i64 0), i32* nonnull %status) #3, !dbg !9399
  %tobool = icmp eq i32 %call, 0, !dbg !9399
  br i1 %tobool, label %cleanup, label %if.end, !dbg !9401

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %status, i64 0, metadata !2799, metadata !3839), !dbg !9397
  %1 = load i32, i32* %status, align 4, !dbg !9402, !tbaa !3890
  %and = and i32 %1, 127, !dbg !9402
  %cmp = icmp eq i32 %and, 0, !dbg !9402
  %conv1 = zext i1 %cmp to i64, !dbg !9402
  %call2 = call %struct._object* @PyBool_FromLong(i64 %conv1) #3, !dbg !9403
  br label %cleanup, !dbg !9404

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct._object* [ %call2, %if.end ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !9405
  ret %struct._object* %retval.0, !dbg !9405
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_WEXITSTATUS(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %status = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2802, metadata !3839), !dbg !9406
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2803, metadata !3839), !dbg !9407
  %0 = bitcast i32* %status to i8*, !dbg !9408
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !9408
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !2804, metadata !3839), !dbg !9409
  store i32 0, i32* %status, align 4, !dbg !9410, !tbaa !3890
  tail call void @llvm.dbg.value(metadata i32* %status, i64 0, metadata !2804, metadata !3839), !dbg !9409
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.332, i64 0, i64 0), i32* nonnull %status) #3, !dbg !9411
  %tobool = icmp eq i32 %call, 0, !dbg !9411
  br i1 %tobool, label %cleanup, label %if.end, !dbg !9413

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %status, i64 0, metadata !2804, metadata !3839), !dbg !9409
  %1 = load i32, i32* %status, align 4, !dbg !9414, !tbaa !3890
  %and = lshr i32 %1, 8, !dbg !9414
  %shr.2 = and i32 %and, 255, !dbg !9414
  %call1 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.333, i64 0, i64 0), i32 %shr.2) #3, !dbg !9415
  br label %cleanup, !dbg !9416

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct._object* [ %call1, %if.end ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !9417
  ret %struct._object* %retval.0, !dbg !9417
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_WTERMSIG(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %status = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2807, metadata !3839), !dbg !9418
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2808, metadata !3839), !dbg !9419
  %0 = bitcast i32* %status to i8*, !dbg !9420
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !9420
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !2809, metadata !3839), !dbg !9421
  store i32 0, i32* %status, align 4, !dbg !9422, !tbaa !3890
  tail call void @llvm.dbg.value(metadata i32* %status, i64 0, metadata !2809, metadata !3839), !dbg !9421
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.334, i64 0, i64 0), i32* nonnull %status) #3, !dbg !9423
  %tobool = icmp eq i32 %call, 0, !dbg !9423
  br i1 %tobool, label %cleanup, label %if.end, !dbg !9425

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %status, i64 0, metadata !2809, metadata !3839), !dbg !9421
  %1 = load i32, i32* %status, align 4, !dbg !9426, !tbaa !3890
  %and = and i32 %1, 127, !dbg !9426
  %call1 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.333, i64 0, i64 0), i32 %and) #3, !dbg !9427
  br label %cleanup, !dbg !9428

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct._object* [ %call1, %if.end ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !9429
  ret %struct._object* %retval.0, !dbg !9429
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_WSTOPSIG(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %status = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2812, metadata !3839), !dbg !9430
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2813, metadata !3839), !dbg !9431
  %0 = bitcast i32* %status to i8*, !dbg !9432
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !9432
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !2814, metadata !3839), !dbg !9433
  store i32 0, i32* %status, align 4, !dbg !9434, !tbaa !3890
  tail call void @llvm.dbg.value(metadata i32* %status, i64 0, metadata !2814, metadata !3839), !dbg !9433
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.335, i64 0, i64 0), i32* nonnull %status) #3, !dbg !9435
  %tobool = icmp eq i32 %call, 0, !dbg !9435
  br i1 %tobool, label %cleanup, label %if.end, !dbg !9437

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %status, i64 0, metadata !2814, metadata !3839), !dbg !9433
  %1 = load i32, i32* %status, align 4, !dbg !9438, !tbaa !3890
  %and = lshr i32 %1, 8, !dbg !9438
  %shr.2 = and i32 %and, 255, !dbg !9438
  %call1 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.333, i64 0, i64 0), i32 %shr.2) #3, !dbg !9439
  br label %cleanup, !dbg !9440

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct._object* [ %call1, %if.end ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !9441
  ret %struct._object* %retval.0, !dbg !9441
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_fstatvfs(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %fd = alloca i32, align 4
  %st = alloca %struct.statvfs, align 8
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2817, metadata !3839), !dbg !9442
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2818, metadata !3839), !dbg !9443
  %0 = bitcast i32* %fd to i8*, !dbg !9444
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !9444
  %1 = bitcast %struct.statvfs* %st to i8*, !dbg !9445
  call void @llvm.lifetime.start(i64 112, i8* %1) #3, !dbg !9445
  tail call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2819, metadata !3839), !dbg !9446
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.336, i64 0, i64 0), i32* nonnull %fd) #3, !dbg !9447
  %tobool = icmp eq i32 %call, 0, !dbg !9447
  br i1 %tobool, label %cleanup, label %if.end, !dbg !9449

if.end:                                           ; preds = %entry
  %call1 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !9450
  call void @llvm.dbg.value(metadata %struct._ts* %call1, i64 0, metadata !2839, metadata !3839), !dbg !9450
  call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2819, metadata !3839), !dbg !9446
  %2 = load i32, i32* %fd, align 4, !dbg !9451, !tbaa !3890
  call void @llvm.dbg.value(metadata %struct.statvfs* %st, i64 0, metadata !2821, metadata !3839), !dbg !9452
  %call2 = call i32 @fstatvfs64(i32 %2, %struct.statvfs* nonnull %st) #3, !dbg !9453
  call void @llvm.dbg.value(metadata i32 %call2, i64 0, metadata !2820, metadata !3839), !dbg !9454
  call void @PyEval_RestoreThread(%struct._ts* %call1) #3, !dbg !9455
  %cmp = icmp eq i32 %call2, 0, !dbg !9456
  br i1 %cmp, label %if.end.5, label %if.then.3, !dbg !9458

if.then.3:                                        ; preds = %if.end
  %3 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !9459, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %3) #3, !dbg !9461
  br label %cleanup, !dbg !9462

if.end.5:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.statvfs* %st, i64 0, metadata !2821, metadata !3839), !dbg !9452
  %call6 = call fastcc %struct._object* @_pystatvfs_fromstructstatvfs(%struct.statvfs* byval nonnull align 8 %st), !dbg !9463
  br label %cleanup, !dbg !9464

cleanup:                                          ; preds = %entry, %if.end.5, %if.then.3
  %retval.0 = phi %struct._object* [ %call.i, %if.then.3 ], [ %call6, %if.end.5 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 112, i8* %1) #3, !dbg !9465
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !9465
  ret %struct._object* %retval.0, !dbg !9465
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_statvfs(%struct._object* nocapture readnone %self, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  %path = alloca %struct.path_t, align 8
  %st = alloca %struct.statvfs, align 8
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2853, metadata !3839), !dbg !9466
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2854, metadata !3839), !dbg !9467
  tail call void @llvm.dbg.value(metadata %struct._object* %kwargs, i64 0, metadata !2855, metadata !3839), !dbg !9468
  %0 = bitcast %struct.path_t* %path to i8*, !dbg !9469
  call void @llvm.lifetime.start(i64 72, i8* %0) #3, !dbg !9469
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !2858, metadata !3839), !dbg !9470
  %1 = bitcast %struct.statvfs* %st to i8*, !dbg !9471
  call void @llvm.lifetime.start(i64 112, i8* %1) #3, !dbg !9471
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 72, i32 8, i1 false), !dbg !9472
  %function_name = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 0, !dbg !9473
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.149, i64 0, i64 0), i8** %function_name, align 8, !dbg !9474, !tbaa !4743
  %allow_fd = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 3, !dbg !9475
  store i32 1, i32* %allow_fd, align 4, !dbg !9476, !tbaa !4746
  tail call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !2856, metadata !3839), !dbg !9477
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %args, %struct._object* %kwargs, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.337, i64 0, i64 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @posix_statvfs.keywords, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @path_converter, %struct.path_t* nonnull %path) #3, !dbg !9478
  %tobool = icmp eq i32 %call, 0, !dbg !9478
  br i1 %tobool, label %cleanup, label %if.end, !dbg !9480

if.end:                                           ; preds = %entry
  %call1 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !9481
  call void @llvm.dbg.value(metadata %struct._ts* %call1, i64 0, metadata !2860, metadata !3839), !dbg !9481
  %fd = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 6, !dbg !9482
  %2 = load i32, i32* %fd, align 8, !dbg !9482, !tbaa !4754
  %cmp = icmp eq i32 %2, -1, !dbg !9484
  br i1 %cmp, label %if.else, label %if.then.2, !dbg !9485

if.then.2:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.statvfs* %st, i64 0, metadata !2859, metadata !3839), !dbg !9486
  %call4 = call i32 @fstatvfs64(i32 %2, %struct.statvfs* nonnull %st) #3, !dbg !9487
  call void @llvm.dbg.value(metadata i32 %call4, i64 0, metadata !2857, metadata !3839), !dbg !9489
  br label %if.end.6, !dbg !9490

if.else:                                          ; preds = %if.end
  %narrow = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 5, !dbg !9491
  %3 = load i8*, i8** %narrow, align 8, !dbg !9491, !tbaa !4761
  call void @llvm.dbg.value(metadata %struct.statvfs* %st, i64 0, metadata !2859, metadata !3839), !dbg !9486
  %call5 = call i32 @statvfs64(i8* %3, %struct.statvfs* nonnull %st) #3, !dbg !9492
  call void @llvm.dbg.value(metadata i32 %call5, i64 0, metadata !2857, metadata !3839), !dbg !9489
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.2
  %result.0 = phi i32 [ %call4, %if.then.2 ], [ %call5, %if.else ]
  call void @PyEval_RestoreThread(%struct._ts* %call1) #3, !dbg !9493
  %tobool7 = icmp eq i32 %result.0, 0, !dbg !9494
  br i1 %tobool7, label %if.end.10, label %if.then.8, !dbg !9496

if.then.8:                                        ; preds = %if.end.6
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !2856, metadata !3839), !dbg !9477
  %path.idx = getelementptr %struct.path_t, %struct.path_t* %path, i64 0, i32 8
  %path.idx.val = load %struct._object*, %struct._object** %path.idx, align 8, !tbaa !4767
  %4 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !9497, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrnoWithFilenameObject(%struct._object* %4, %struct._object* %path.idx.val) #3, !dbg !9500
  call void @llvm.dbg.value(metadata %struct._object* %call.i, i64 0, metadata !2858, metadata !3839), !dbg !9470
  br label %exit, !dbg !9501

if.end.10:                                        ; preds = %if.end.6
  call void @llvm.dbg.value(metadata %struct.statvfs* %st, i64 0, metadata !2859, metadata !3839), !dbg !9486
  %call11 = call fastcc %struct._object* @_pystatvfs_fromstructstatvfs(%struct.statvfs* byval nonnull align 8 %st), !dbg !9502
  call void @llvm.dbg.value(metadata %struct._object* %call11, i64 0, metadata !2858, metadata !3839), !dbg !9470
  br label %exit, !dbg !9503

exit:                                             ; preds = %if.end.10, %if.then.8
  %return_value.0 = phi %struct._object* [ %call.i, %if.then.8 ], [ %call11, %if.end.10 ]
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !2856, metadata !3839), !dbg !9477
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1054, metadata !3839) #3, !dbg !9504
  %cleanup.i = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 9, !dbg !9506
  %5 = load %struct._object*, %struct._object** %cleanup.i, align 8, !dbg !9506, !tbaa !4634
  %tobool.i = icmp eq %struct._object* %5, null, !dbg !9507
  br i1 %tobool.i, label %cleanup, label %if.then.2.i, !dbg !9508

if.then.2.i:                                      ; preds = %exit
  call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !1055, metadata !3839) #3, !dbg !9509
  store %struct._object* null, %struct._object** %cleanup.i, align 8, !dbg !9510, !tbaa !4634
  call void @llvm.dbg.value(metadata %struct._object* %5, i64 0, metadata !1059, metadata !3839) #3, !dbg !9511
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 0, !dbg !9512
  %6 = load i64, i64* %ob_refcnt.i, align 8, !dbg !9512, !tbaa !3930
  %dec.i = add i64 %6, -1, !dbg !9512
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !9512, !tbaa !3930
  %cmp5.i = icmp eq i64 %dec.i, 0, !dbg !9512
  br i1 %cmp5.i, label %if.else.i, label %cleanup, !dbg !9513

if.else.i:                                        ; preds = %if.then.2.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %5, i64 0, i32 1, !dbg !9514
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !9514, !tbaa !3875
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i64 0, i32 4, !dbg !9514
  %8 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !9514, !tbaa !3934
  call void %8(%struct._object* %5) #3, !dbg !9514
  br label %cleanup, !dbg !9515

cleanup:                                          ; preds = %if.else.i, %if.then.2.i, %exit, %entry
  %retval.0 = phi %struct._object* [ null, %entry ], [ %return_value.0, %exit ], [ %return_value.0, %if.then.2.i ], [ %return_value.0, %if.else.i ]
  call void @llvm.lifetime.end(i64 112, i8* %1) #3, !dbg !9516
  call void @llvm.lifetime.end(i64 72, i8* %0) #3, !dbg !9516
  ret %struct._object* %retval.0, !dbg !9516
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_confstr(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %name = alloca i32, align 4
  %buffer = alloca [255 x i8], align 16
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2864, metadata !3839), !dbg !9517
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2865, metadata !3839), !dbg !9518
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !2866, metadata !3839), !dbg !9519
  %0 = bitcast i32* %name to i8*, !dbg !9520
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !9520
  %1 = getelementptr inbounds [255 x i8], [255 x i8]* %buffer, i64 0, i64 0, !dbg !9521
  call void @llvm.lifetime.start(i64 255, i8* %1) #3, !dbg !9521
  tail call void @llvm.dbg.declare(metadata [255 x i8]* %buffer, metadata !2868, metadata !3839), !dbg !9522
  tail call void @llvm.dbg.value(metadata i32* %name, i64 0, metadata !2867, metadata !3839), !dbg !9523
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.338, i64 0, i64 0), i32 (%struct._object*, i32*)* nonnull @conv_confstr_confname, i32* nonnull %name) #3, !dbg !9524
  %tobool = icmp eq i32 %call, 0, !dbg !9524
  br i1 %tobool, label %cleanup.23, label %if.end, !dbg !9526

if.end:                                           ; preds = %entry
  %call1 = tail call i32* @__errno_location() #1, !dbg !9527
  store i32 0, i32* %call1, align 4, !dbg !9528, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %name, i64 0, metadata !2867, metadata !3839), !dbg !9523
  %2 = load i32, i32* %name, align 4, !dbg !9529, !tbaa !3890
  %call2 = call i64 @confstr(i32 %2, i8* %1, i64 255) #3, !dbg !9530
  call void @llvm.dbg.value(metadata i64 %call2, i64 0, metadata !2872, metadata !3839), !dbg !9531
  %cmp = icmp eq i64 %call2, 0, !dbg !9532
  br i1 %cmp, label %if.then.3, label %if.end.8, !dbg !9534

if.then.3:                                        ; preds = %if.end
  %3 = load i32, i32* %call1, align 4, !dbg !9535, !tbaa !3890
  %tobool5 = icmp eq i32 %3, 0, !dbg !9535
  br i1 %tobool5, label %if.else, label %if.then.6, !dbg !9538

if.then.6:                                        ; preds = %if.then.3
  %4 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !9539, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %4) #3, !dbg !9542
  br label %cleanup.23, !dbg !9543

if.else:                                          ; preds = %if.then.3
  %5 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !9544, !tbaa !3930
  %inc = add i64 %5, 1, !dbg !9544
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !9544, !tbaa !3930
  br label %cleanup.23, !dbg !9544

if.end.8:                                         ; preds = %if.end
  %cmp9 = icmp ugt i64 %call2, 254, !dbg !9546
  br i1 %cmp9, label %if.then.10, label %if.else.18, !dbg !9547

if.then.10:                                       ; preds = %if.end.8
  %call11 = call i8* @PyMem_Malloc(i64 %call2) #3, !dbg !9548
  call void @llvm.dbg.value(metadata i8* %call11, i64 0, metadata !2873, metadata !3839), !dbg !9549
  %cmp12 = icmp eq i8* %call11, null, !dbg !9550
  br i1 %cmp12, label %cleanup, label %cleanup.thread, !dbg !9552

cleanup.thread:                                   ; preds = %if.then.10
  call void @llvm.dbg.value(metadata i32* %name, i64 0, metadata !2867, metadata !3839), !dbg !9523
  %6 = load i32, i32* %name, align 4, !dbg !9553, !tbaa !3890
  %call16 = call i64 @confstr(i32 %6, i8* %call11, i64 %call2) #3, !dbg !9554
  %sub = add i64 %call2, -1, !dbg !9555
  %call17 = call %struct._object* @PyUnicode_DecodeFSDefaultAndSize(i8* %call11, i64 %sub) #3, !dbg !9556
  call void @llvm.dbg.value(metadata %struct._object* %call17, i64 0, metadata !2866, metadata !3839), !dbg !9519
  call void @PyMem_Free(i8* %call11) #3, !dbg !9557
  br label %cleanup.23

cleanup:                                          ; preds = %if.then.10
  %call14 = call %struct._object* @PyErr_NoMemory() #3, !dbg !9558
  br label %cleanup.23

if.else.18:                                       ; preds = %if.end.8
  %sub20 = add i64 %call2, -1, !dbg !9559
  %call21 = call %struct._object* @PyUnicode_DecodeFSDefaultAndSize(i8* %1, i64 %sub20) #3, !dbg !9560
  call void @llvm.dbg.value(metadata %struct._object* %call21, i64 0, metadata !2866, metadata !3839), !dbg !9519
  br label %cleanup.23

cleanup.23:                                       ; preds = %if.else.18, %cleanup.thread, %cleanup, %entry, %if.else, %if.then.6
  %retval.1 = phi %struct._object* [ null, %if.then.6 ], [ @_Py_NoneStruct, %if.else ], [ %call14, %cleanup ], [ null, %entry ], [ %call21, %if.else.18 ], [ %call17, %cleanup.thread ]
  call void @llvm.lifetime.end(i64 255, i8* %1) #3, !dbg !9561
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !9561
  ret %struct._object* %retval.1, !dbg !9561
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_sysconf(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %name = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2904, metadata !3839), !dbg !9562
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2905, metadata !3839), !dbg !9563
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !2906, metadata !3839), !dbg !9564
  %0 = bitcast i32* %name to i8*, !dbg !9565
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !9565
  tail call void @llvm.dbg.value(metadata i32* %name, i64 0, metadata !2907, metadata !3839), !dbg !9566
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.368, i64 0, i64 0), i32 (%struct._object*, i32*)* nonnull @conv_sysconf_confname, i32* nonnull %name) #3, !dbg !9567
  %tobool = icmp eq i32 %call, 0, !dbg !9567
  br i1 %tobool, label %if.end.8, label %if.then, !dbg !9568

if.then:                                          ; preds = %entry
  %call1 = tail call i32* @__errno_location() #1, !dbg !9569
  store i32 0, i32* %call1, align 4, !dbg !9570, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %name, i64 0, metadata !2907, metadata !3839), !dbg !9566
  %1 = load i32, i32* %name, align 4, !dbg !9571, !tbaa !3890
  %call2 = call i64 @sysconf(i32 %1) #3, !dbg !9572
  call void @llvm.dbg.value(metadata i64 %call2, i64 0, metadata !2908, metadata !3839), !dbg !9573
  %cmp = icmp eq i64 %call2, -1, !dbg !9574
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !9576

land.lhs.true:                                    ; preds = %if.then
  %2 = load i32, i32* %call1, align 4, !dbg !9577, !tbaa !3890
  %cmp4 = icmp eq i32 %2, 0, !dbg !9579
  br i1 %cmp4, label %if.else, label %if.then.5, !dbg !9580

if.then.5:                                        ; preds = %land.lhs.true
  %3 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !9581, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %3) #3, !dbg !9583
  br label %if.end.8, !dbg !9584

if.else:                                          ; preds = %land.lhs.true, %if.then
  %call7 = call %struct._object* @PyLong_FromLong(i64 %call2) #3, !dbg !9585
  call void @llvm.dbg.value(metadata %struct._object* %call7, i64 0, metadata !2906, metadata !3839), !dbg !9564
  br label %if.end.8

if.end.8:                                         ; preds = %if.then.5, %if.else, %entry
  %result.1 = phi %struct._object* [ null, %entry ], [ null, %if.then.5 ], [ %call7, %if.else ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !9586
  ret %struct._object* %result.1, !dbg !9587
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_fpathconf(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %name = alloca i32, align 4
  %fd = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2917, metadata !3839), !dbg !9588
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2918, metadata !3839), !dbg !9589
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !2919, metadata !3839), !dbg !9590
  %0 = bitcast i32* %name to i8*, !dbg !9591
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !9591
  %1 = bitcast i32* %fd to i8*, !dbg !9591
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !9591
  tail call void @llvm.dbg.value(metadata i32* %name, i64 0, metadata !2920, metadata !3839), !dbg !9592
  tail call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2921, metadata !3839), !dbg !9593
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.503, i64 0, i64 0), i32* nonnull %fd, i32 (%struct._object*, i32*)* nonnull @conv_path_confname, i32* nonnull %name) #3, !dbg !9594
  %tobool = icmp eq i32 %call, 0, !dbg !9594
  br i1 %tobool, label %if.end.8, label %if.then, !dbg !9595

if.then:                                          ; preds = %entry
  %call1 = tail call i32* @__errno_location() #1, !dbg !9596
  store i32 0, i32* %call1, align 4, !dbg !9597, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !2921, metadata !3839), !dbg !9593
  %2 = load i32, i32* %fd, align 4, !dbg !9598, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %name, i64 0, metadata !2920, metadata !3839), !dbg !9592
  %3 = load i32, i32* %name, align 4, !dbg !9599, !tbaa !3890
  %call2 = call i64 @fpathconf(i32 %2, i32 %3) #3, !dbg !9600
  call void @llvm.dbg.value(metadata i64 %call2, i64 0, metadata !2922, metadata !3839), !dbg !9601
  %cmp = icmp eq i64 %call2, -1, !dbg !9602
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !9604

land.lhs.true:                                    ; preds = %if.then
  %4 = load i32, i32* %call1, align 4, !dbg !9605, !tbaa !3890
  %cmp4 = icmp eq i32 %4, 0, !dbg !9607
  br i1 %cmp4, label %if.else, label %if.then.5, !dbg !9608

if.then.5:                                        ; preds = %land.lhs.true
  %5 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !9609, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %5) #3, !dbg !9611
  br label %if.end.8, !dbg !9612

if.else:                                          ; preds = %land.lhs.true, %if.then
  %call7 = call %struct._object* @PyLong_FromLong(i64 %call2) #3, !dbg !9613
  call void @llvm.dbg.value(metadata %struct._object* %call7, i64 0, metadata !2919, metadata !3839), !dbg !9590
  br label %if.end.8

if.end.8:                                         ; preds = %if.then.5, %if.else, %entry
  %result.1 = phi %struct._object* [ null, %entry ], [ null, %if.then.5 ], [ %call7, %if.else ]
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !9614
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !9614
  ret %struct._object* %result.1, !dbg !9615
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_pathconf(%struct._object* nocapture readnone %self, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  %path = alloca %struct.path_t, align 8
  %name = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2931, metadata !3839), !dbg !9616
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2932, metadata !3839), !dbg !9617
  tail call void @llvm.dbg.value(metadata %struct._object* %kwargs, i64 0, metadata !2933, metadata !3839), !dbg !9618
  %0 = bitcast %struct.path_t* %path to i8*, !dbg !9619
  call void @llvm.lifetime.start(i64 72, i8* %0) #3, !dbg !9619
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !2935, metadata !3839), !dbg !9620
  %1 = bitcast i32* %name to i8*, !dbg !9621
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !9621
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 72, i32 8, i1 false), !dbg !9622
  %function_name = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 0, !dbg !9623
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.153, i64 0, i64 0), i8** %function_name, align 8, !dbg !9624, !tbaa !4743
  %allow_fd = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 3, !dbg !9625
  store i32 1, i32* %allow_fd, align 4, !dbg !9626, !tbaa !4746
  tail call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !2934, metadata !3839), !dbg !9627
  tail call void @llvm.dbg.value(metadata i32* %name, i64 0, metadata !2936, metadata !3839), !dbg !9628
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %args, %struct._object* %kwargs, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.525, i64 0, i64 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @posix_pathconf.keywords, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @path_converter, %struct.path_t* nonnull %path, i32 (%struct._object*, i32*)* nonnull @conv_path_confname, i32* nonnull %name) #3, !dbg !9629
  %tobool = icmp eq i32 %call, 0, !dbg !9629
  br i1 %tobool, label %if.end.20, label %if.then, !dbg !9630

if.then:                                          ; preds = %entry
  %call1 = tail call i32* @__errno_location() #1, !dbg !9631
  store i32 0, i32* %call1, align 4, !dbg !9632, !tbaa !3890
  %fd = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 6, !dbg !9633
  %2 = load i32, i32* %fd, align 8, !dbg !9633, !tbaa !4754
  %cmp = icmp eq i32 %2, -1, !dbg !9635
  br i1 %cmp, label %if.else, label %if.then.2, !dbg !9636

if.then.2:                                        ; preds = %if.then
  call void @llvm.dbg.value(metadata i32* %name, i64 0, metadata !2936, metadata !3839), !dbg !9628
  %3 = load i32, i32* %name, align 4, !dbg !9637, !tbaa !3890
  %call4 = call i64 @fpathconf(i32 %2, i32 %3) #3, !dbg !9638
  call void @llvm.dbg.value(metadata i64 %call4, i64 0, metadata !2937, metadata !3839), !dbg !9639
  br label %if.end, !dbg !9640

if.else:                                          ; preds = %if.then
  %narrow = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 5, !dbg !9641
  %4 = load i8*, i8** %narrow, align 8, !dbg !9641, !tbaa !4761
  call void @llvm.dbg.value(metadata i32* %name, i64 0, metadata !2936, metadata !3839), !dbg !9628
  %5 = load i32, i32* %name, align 4, !dbg !9642, !tbaa !3890
  %call5 = call i64 @pathconf(i8* %4, i32 %5) #3, !dbg !9643
  call void @llvm.dbg.value(metadata i64 %call5, i64 0, metadata !2937, metadata !3839), !dbg !9639
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.2
  %limit.0 = phi i64 [ %call4, %if.then.2 ], [ %call5, %if.else ]
  %cmp6 = icmp eq i64 %limit.0, -1, !dbg !9644
  br i1 %cmp6, label %land.lhs.true, label %if.else.17, !dbg !9646

land.lhs.true:                                    ; preds = %if.end
  %6 = load i32, i32* %call1, align 4, !dbg !9647, !tbaa !3890
  switch i32 %6, label %if.else.14 [
    i32 0, label %if.else.17
    i32 22, label %if.then.12
  ], !dbg !9649

if.then.12:                                       ; preds = %land.lhs.true
  %7 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !9650, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %7) #3, !dbg !9654
  br label %if.end.20, !dbg !9655

if.else.14:                                       ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !2934, metadata !3839), !dbg !9627
  %path.idx = getelementptr %struct.path_t, %struct.path_t* %path, i64 0, i32 8
  %path.idx.val = load %struct._object*, %struct._object** %path.idx, align 8, !tbaa !4767
  %8 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !9656, !tbaa !3870
  %call.i.24 = call %struct._object* @PyErr_SetFromErrnoWithFilenameObject(%struct._object* %8, %struct._object* %path.idx.val) #3, !dbg !9658
  call void @llvm.dbg.value(metadata %struct._object* %call.i.24, i64 0, metadata !2935, metadata !3839), !dbg !9620
  br label %if.end.20

if.else.17:                                       ; preds = %land.lhs.true, %if.end
  %call18 = call %struct._object* @PyLong_FromLong(i64 %limit.0) #3, !dbg !9659
  call void @llvm.dbg.value(metadata %struct._object* %call18, i64 0, metadata !2935, metadata !3839), !dbg !9620
  br label %if.end.20

if.end.20:                                        ; preds = %if.else.17, %if.else.14, %if.then.12, %entry
  %result.1 = phi %struct._object* [ null, %entry ], [ null, %if.then.12 ], [ %call.i.24, %if.else.14 ], [ %call18, %if.else.17 ]
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !2934, metadata !3839), !dbg !9627
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1054, metadata !3839) #3, !dbg !9660
  %cleanup.i = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 9, !dbg !9662
  %9 = load %struct._object*, %struct._object** %cleanup.i, align 8, !dbg !9662, !tbaa !4634
  %tobool.i = icmp eq %struct._object* %9, null, !dbg !9663
  br i1 %tobool.i, label %path_cleanup.exit, label %if.then.2.i, !dbg !9664

if.then.2.i:                                      ; preds = %if.end.20
  call void @llvm.dbg.value(metadata %struct._object* %9, i64 0, metadata !1055, metadata !3839) #3, !dbg !9665
  store %struct._object* null, %struct._object** %cleanup.i, align 8, !dbg !9666, !tbaa !4634
  call void @llvm.dbg.value(metadata %struct._object* %9, i64 0, metadata !1059, metadata !3839) #3, !dbg !9667
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %9, i64 0, i32 0, !dbg !9668
  %10 = load i64, i64* %ob_refcnt.i, align 8, !dbg !9668, !tbaa !3930
  %dec.i = add i64 %10, -1, !dbg !9668
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !9668, !tbaa !3930
  %cmp5.i = icmp eq i64 %dec.i, 0, !dbg !9668
  br i1 %cmp5.i, label %if.else.i, label %path_cleanup.exit, !dbg !9669

if.else.i:                                        ; preds = %if.then.2.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %9, i64 0, i32 1, !dbg !9670
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !9670, !tbaa !3875
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i64 0, i32 4, !dbg !9670
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !9670, !tbaa !3934
  call void %12(%struct._object* %9) #3, !dbg !9670
  br label %path_cleanup.exit, !dbg !9671

path_cleanup.exit:                                ; preds = %if.end.20, %if.then.2.i, %if.else.i
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !9672
  call void @llvm.lifetime.end(i64 72, i8* %0) #3, !dbg !9672
  ret %struct._object* %result.1, !dbg !9673
}

; Function Attrs: noreturn nounwind uwtable
define internal noalias %struct._object* @posix_abort(%struct._object* nocapture readnone %self, %struct._object* nocapture readnone %noargs) #6 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2942, metadata !3839), !dbg !9674
  tail call void @llvm.dbg.value(metadata %struct._object* %noargs, i64 0, metadata !2943, metadata !3839), !dbg !9675
  tail call void @abort() #12, !dbg !9676
  unreachable, !dbg !9676
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_getloadavg(%struct._object* nocapture readnone %self, %struct._object* nocapture readnone %noargs) #0 {
entry:
  %loadavg = alloca [3 x double], align 16
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2946, metadata !3839), !dbg !9677
  tail call void @llvm.dbg.value(metadata %struct._object* %noargs, i64 0, metadata !2947, metadata !3839), !dbg !9678
  %0 = bitcast [3 x double]* %loadavg to i8*, !dbg !9679
  call void @llvm.lifetime.start(i64 24, i8* %0) #3, !dbg !9679
  tail call void @llvm.dbg.declare(metadata [3 x double]* %loadavg, metadata !2948, metadata !3839), !dbg !9680
  %arraydecay = getelementptr inbounds [3 x double], [3 x double]* %loadavg, i64 0, i64 0, !dbg !9681
  %call = call i32 @getloadavg(double* %arraydecay, i32 3) #3, !dbg !9683
  %cmp = icmp eq i32 %call, 3, !dbg !9684
  br i1 %cmp, label %if.else, label %if.then, !dbg !9685

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !9686, !tbaa !3870
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.526, i64 0, i64 0)) #3, !dbg !9688
  br label %cleanup, !dbg !9689

if.else:                                          ; preds = %entry
  %2 = load double, double* %arraydecay, align 16, !dbg !9690, !tbaa !9691
  %arrayidx1 = getelementptr [3 x double], [3 x double]* %loadavg, i64 0, i64 1, !dbg !9693
  %3 = load double, double* %arrayidx1, align 8, !dbg !9693, !tbaa !9691
  %arrayidx2 = getelementptr [3 x double], [3 x double]* %loadavg, i64 0, i64 2, !dbg !9694
  %4 = load double, double* %arrayidx2, align 16, !dbg !9694, !tbaa !9691
  %call3 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.527, i64 0, i64 0), double %2, double %3, double %4) #3, !dbg !9695
  br label %cleanup, !dbg !9696

cleanup:                                          ; preds = %if.else, %if.then
  %retval.0 = phi %struct._object* [ null, %if.then ], [ %call3, %if.else ]
  call void @llvm.lifetime.end(i64 24, i8* %0) #3, !dbg !9697
  ret %struct._object* %retval.0, !dbg !9697
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_urandom(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %size = alloca i64, align 8
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2952, metadata !3839), !dbg !9698
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2953, metadata !3839), !dbg !9699
  %0 = bitcast i64* %size to i8*, !dbg !9700
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !9700
  tail call void @llvm.dbg.value(metadata i64* %size, i64 0, metadata !2954, metadata !3839), !dbg !9701
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.528, i64 0, i64 0), i64* nonnull %size) #3, !dbg !9702
  %tobool = icmp eq i32 %call, 0, !dbg !9702
  br i1 %tobool, label %cleanup, label %if.end, !dbg !9704

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i64* %size, i64 0, metadata !2954, metadata !3839), !dbg !9701
  %1 = load i64, i64* %size, align 8, !dbg !9705, !tbaa !4482
  %cmp = icmp slt i64 %1, 0, !dbg !9707
  br i1 %cmp, label %if.then.1, label %if.end.3, !dbg !9708

if.then.1:                                        ; preds = %if.end
  %2 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !9709, !tbaa !3870
  %call2 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %2, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.529, i64 0, i64 0)) #3, !dbg !9710
  br label %cleanup, !dbg !9711

if.end.3:                                         ; preds = %if.end
  %call4 = call %struct._object* @PyBytes_FromStringAndSize(i8* null, i64 %1) #3, !dbg !9712
  call void @llvm.dbg.value(metadata %struct._object* %call4, i64 0, metadata !2955, metadata !3839), !dbg !9713
  %cmp5 = icmp eq %struct._object* %call4, null, !dbg !9714
  br i1 %cmp5, label %cleanup, label %if.end.7, !dbg !9716

if.end.7:                                         ; preds = %if.end.3
  %ob_sval = getelementptr inbounds %struct._object, %struct._object* %call4, i64 2, !dbg !9717
  %arraydecay = bitcast %struct._object* %ob_sval to i8*, !dbg !9717
  %3 = getelementptr inbounds %struct._object, %struct._object* %call4, i64 1, i32 0, !dbg !9718
  %4 = load i64, i64* %3, align 8, !dbg !9718, !tbaa !6607
  %call8 = call i32 @_PyOS_URandom(i8* %arraydecay, i64 %4) #3, !dbg !9719
  call void @llvm.dbg.value(metadata i32 %call8, i64 0, metadata !2956, metadata !3839), !dbg !9720
  %cmp9 = icmp eq i32 %call8, -1, !dbg !9721
  br i1 %cmp9, label %do.body, label %cleanup, !dbg !9722

do.body:                                          ; preds = %if.end.7
  call void @llvm.dbg.value(metadata %struct._object* %call4, i64 0, metadata !2957, metadata !3839), !dbg !9723
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call4, i64 0, i32 0, !dbg !9725
  %5 = load i64, i64* %ob_refcnt, align 8, !dbg !9725, !tbaa !3930
  %dec = add i64 %5, -1, !dbg !9725
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !9725, !tbaa !3930
  %cmp11 = icmp eq i64 %dec, 0, !dbg !9725
  br i1 %cmp11, label %if.else, label %cleanup, !dbg !9727

if.else:                                          ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call4, i64 0, i32 1, !dbg !9728
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !9728, !tbaa !3875
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i64 0, i32 4, !dbg !9728
  %7 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !9728, !tbaa !3934
  call void %7(%struct._object* %call4) #3, !dbg !9728
  br label %cleanup

cleanup:                                          ; preds = %if.end.7, %if.else, %do.body, %if.end.3, %entry, %if.then.1
  %retval.0 = phi %struct._object* [ %call2, %if.then.1 ], [ null, %entry ], [ null, %if.end.3 ], [ null, %do.body ], [ null, %if.else ], [ %call4, %if.end.7 ]
  call void @llvm.lifetime.end(i64 8, i8* %0) #3, !dbg !9730
  ret %struct._object* %retval.0, !dbg !9730
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_setresuid(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %ruid = alloca i32, align 4
  %euid = alloca i32, align 4
  %suid = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2963, metadata !3839), !dbg !9731
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2964, metadata !3839), !dbg !9732
  %0 = bitcast i32* %ruid to i8*, !dbg !9733
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !9733
  %1 = bitcast i32* %euid to i8*, !dbg !9733
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !9733
  %2 = bitcast i32* %suid to i8*, !dbg !9733
  call void @llvm.lifetime.start(i64 4, i8* %2) #3, !dbg !9733
  tail call void @llvm.dbg.value(metadata i32* %ruid, i64 0, metadata !2965, metadata !3839), !dbg !9734
  tail call void @llvm.dbg.value(metadata i32* %euid, i64 0, metadata !2966, metadata !3839), !dbg !9735
  tail call void @llvm.dbg.value(metadata i32* %suid, i64 0, metadata !2967, metadata !3839), !dbg !9736
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.530, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @_Py_Uid_Converter, i32* nonnull %ruid, i32 (%struct._object*, i8*)* nonnull @_Py_Uid_Converter, i32* nonnull %euid, i32 (%struct._object*, i8*)* nonnull @_Py_Uid_Converter, i32* nonnull %suid) #3, !dbg !9737
  %tobool = icmp eq i32 %call, 0, !dbg !9737
  br i1 %tobool, label %cleanup, label %if.end, !dbg !9739

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %ruid, i64 0, metadata !2965, metadata !3839), !dbg !9734
  %3 = load i32, i32* %ruid, align 4, !dbg !9740, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %euid, i64 0, metadata !2966, metadata !3839), !dbg !9735
  %4 = load i32, i32* %euid, align 4, !dbg !9742, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %suid, i64 0, metadata !2967, metadata !3839), !dbg !9736
  %5 = load i32, i32* %suid, align 4, !dbg !9743, !tbaa !3890
  %call1 = call i32 @setresuid(i32 %3, i32 %4, i32 %5) #3, !dbg !9744
  %cmp = icmp slt i32 %call1, 0, !dbg !9745
  br i1 %cmp, label %if.then.2, label %if.end.4, !dbg !9746

if.then.2:                                        ; preds = %if.end
  %6 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !9747, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %6) #3, !dbg !9749
  br label %cleanup, !dbg !9750

if.end.4:                                         ; preds = %if.end
  %7 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !9751, !tbaa !3930
  %inc = add i64 %7, 1, !dbg !9751
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !9751, !tbaa !3930
  br label %cleanup, !dbg !9751

cleanup:                                          ; preds = %entry, %if.end.4, %if.then.2
  %retval.0 = phi %struct._object* [ %call.i, %if.then.2 ], [ @_Py_NoneStruct, %if.end.4 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %2) #3, !dbg !9752
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !9752
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !9752
  ret %struct._object* %retval.0, !dbg !9752
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_setresgid(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %rgid = alloca i32, align 4
  %egid = alloca i32, align 4
  %sgid = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2970, metadata !3839), !dbg !9753
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2971, metadata !3839), !dbg !9754
  %0 = bitcast i32* %rgid to i8*, !dbg !9755
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !9755
  %1 = bitcast i32* %egid to i8*, !dbg !9755
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !9755
  %2 = bitcast i32* %sgid to i8*, !dbg !9755
  call void @llvm.lifetime.start(i64 4, i8* %2) #3, !dbg !9755
  tail call void @llvm.dbg.value(metadata i32* %rgid, i64 0, metadata !2972, metadata !3839), !dbg !9756
  tail call void @llvm.dbg.value(metadata i32* %egid, i64 0, metadata !2973, metadata !3839), !dbg !9757
  tail call void @llvm.dbg.value(metadata i32* %sgid, i64 0, metadata !2974, metadata !3839), !dbg !9758
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.531, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @_Py_Gid_Converter, i32* nonnull %rgid, i32 (%struct._object*, i8*)* nonnull @_Py_Gid_Converter, i32* nonnull %egid, i32 (%struct._object*, i8*)* nonnull @_Py_Gid_Converter, i32* nonnull %sgid) #3, !dbg !9759
  %tobool = icmp eq i32 %call, 0, !dbg !9759
  br i1 %tobool, label %cleanup, label %if.end, !dbg !9761

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %rgid, i64 0, metadata !2972, metadata !3839), !dbg !9756
  %3 = load i32, i32* %rgid, align 4, !dbg !9762, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %egid, i64 0, metadata !2973, metadata !3839), !dbg !9757
  %4 = load i32, i32* %egid, align 4, !dbg !9764, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %sgid, i64 0, metadata !2974, metadata !3839), !dbg !9758
  %5 = load i32, i32* %sgid, align 4, !dbg !9765, !tbaa !3890
  %call1 = call i32 @setresgid(i32 %3, i32 %4, i32 %5) #3, !dbg !9766
  %cmp = icmp slt i32 %call1, 0, !dbg !9767
  br i1 %cmp, label %if.then.2, label %if.end.4, !dbg !9768

if.then.2:                                        ; preds = %if.end
  %6 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !9769, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %6) #3, !dbg !9771
  br label %cleanup, !dbg !9772

if.end.4:                                         ; preds = %if.end
  %7 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !9773, !tbaa !3930
  %inc = add i64 %7, 1, !dbg !9773
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !9773, !tbaa !3930
  br label %cleanup, !dbg !9773

cleanup:                                          ; preds = %entry, %if.end.4, %if.then.2
  %retval.0 = phi %struct._object* [ %call.i, %if.then.2 ], [ @_Py_NoneStruct, %if.end.4 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %2) #3, !dbg !9774
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !9774
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !9774
  ret %struct._object* %retval.0, !dbg !9774
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_getresuid(%struct._object* nocapture readnone %self, %struct._object* nocapture readnone %noargs) #0 {
entry:
  %ruid = alloca i32, align 4
  %euid = alloca i32, align 4
  %suid = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2977, metadata !3839), !dbg !9775
  tail call void @llvm.dbg.value(metadata %struct._object* %noargs, i64 0, metadata !2978, metadata !3839), !dbg !9776
  %0 = bitcast i32* %ruid to i8*, !dbg !9777
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !9777
  %1 = bitcast i32* %euid to i8*, !dbg !9777
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !9777
  %2 = bitcast i32* %suid to i8*, !dbg !9777
  call void @llvm.lifetime.start(i64 4, i8* %2) #3, !dbg !9777
  tail call void @llvm.dbg.value(metadata i32* %ruid, i64 0, metadata !2979, metadata !3839), !dbg !9778
  tail call void @llvm.dbg.value(metadata i32* %euid, i64 0, metadata !2980, metadata !3839), !dbg !9779
  tail call void @llvm.dbg.value(metadata i32* %suid, i64 0, metadata !2981, metadata !3839), !dbg !9780
  %call = call i32 @getresuid(i32* nonnull %ruid, i32* nonnull %euid, i32* nonnull %suid) #3, !dbg !9781
  %cmp = icmp slt i32 %call, 0, !dbg !9783
  br i1 %cmp, label %if.then, label %if.end, !dbg !9784

if.then:                                          ; preds = %entry
  %3 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !9785, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %3) #3, !dbg !9787
  br label %cleanup, !dbg !9788

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %ruid, i64 0, metadata !2979, metadata !3839), !dbg !9778
  %4 = load i32, i32* %ruid, align 4, !dbg !9789, !tbaa !3890
  call void @llvm.dbg.value(metadata i32 %4, i64 0, metadata !693, metadata !3839) #3, !dbg !9790
  %cmp.i = icmp eq i32 %4, -1, !dbg !9792
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !9793

if.then.i:                                        ; preds = %if.end
  %call.i.8 = call %struct._object* @PyLong_FromLong(i64 -1) #3, !dbg !9794
  br label %_PyLong_FromUid.exit, !dbg !9795

if.end.i:                                         ; preds = %if.end
  %conv.i = zext i32 %4 to i64, !dbg !9796
  %call1.i = call %struct._object* @PyLong_FromUnsignedLong(i64 %conv.i) #3, !dbg !9797
  br label %_PyLong_FromUid.exit, !dbg !9798

_PyLong_FromUid.exit:                             ; preds = %if.then.i, %if.end.i
  %retval.0.i = phi %struct._object* [ %call.i.8, %if.then.i ], [ %call1.i, %if.end.i ], !dbg !9799
  call void @llvm.dbg.value(metadata i32* %euid, i64 0, metadata !2980, metadata !3839), !dbg !9779
  %5 = load i32, i32* %euid, align 4, !dbg !9800, !tbaa !3890
  call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !693, metadata !3839) #3, !dbg !9801
  %cmp.i.9 = icmp eq i32 %5, -1, !dbg !9803
  br i1 %cmp.i.9, label %if.then.i.11, label %if.end.i.14, !dbg !9804

if.then.i.11:                                     ; preds = %_PyLong_FromUid.exit
  %call.i.10 = call %struct._object* @PyLong_FromLong(i64 -1) #3, !dbg !9805
  br label %_PyLong_FromUid.exit16, !dbg !9806

if.end.i.14:                                      ; preds = %_PyLong_FromUid.exit
  %conv.i.12 = zext i32 %5 to i64, !dbg !9807
  %call1.i.13 = call %struct._object* @PyLong_FromUnsignedLong(i64 %conv.i.12) #3, !dbg !9808
  br label %_PyLong_FromUid.exit16, !dbg !9809

_PyLong_FromUid.exit16:                           ; preds = %if.then.i.11, %if.end.i.14
  %retval.0.i.15 = phi %struct._object* [ %call.i.10, %if.then.i.11 ], [ %call1.i.13, %if.end.i.14 ], !dbg !9810
  call void @llvm.dbg.value(metadata i32* %suid, i64 0, metadata !2981, metadata !3839), !dbg !9780
  %6 = load i32, i32* %suid, align 4, !dbg !9811, !tbaa !3890
  call void @llvm.dbg.value(metadata i32 %6, i64 0, metadata !693, metadata !3839) #3, !dbg !9812
  %cmp.i.17 = icmp eq i32 %6, -1, !dbg !9814
  br i1 %cmp.i.17, label %if.then.i.19, label %if.end.i.22, !dbg !9815

if.then.i.19:                                     ; preds = %_PyLong_FromUid.exit16
  %call.i.18 = call %struct._object* @PyLong_FromLong(i64 -1) #3, !dbg !9816
  br label %_PyLong_FromUid.exit24, !dbg !9817

if.end.i.22:                                      ; preds = %_PyLong_FromUid.exit16
  %conv.i.20 = zext i32 %6 to i64, !dbg !9818
  %call1.i.21 = call %struct._object* @PyLong_FromUnsignedLong(i64 %conv.i.20) #3, !dbg !9819
  br label %_PyLong_FromUid.exit24, !dbg !9820

_PyLong_FromUid.exit24:                           ; preds = %if.then.i.19, %if.end.i.22
  %retval.0.i.23 = phi %struct._object* [ %call.i.18, %if.then.i.19 ], [ %call1.i.21, %if.end.i.22 ], !dbg !9821
  %call5 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.532, i64 0, i64 0), %struct._object* %retval.0.i, %struct._object* %retval.0.i.15, %struct._object* %retval.0.i.23) #3, !dbg !9822
  br label %cleanup, !dbg !9823

cleanup:                                          ; preds = %_PyLong_FromUid.exit24, %if.then
  %retval.0 = phi %struct._object* [ %call.i, %if.then ], [ %call5, %_PyLong_FromUid.exit24 ]
  call void @llvm.lifetime.end(i64 4, i8* %2) #3, !dbg !9824
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !9824
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !9824
  ret %struct._object* %retval.0, !dbg !9824
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_getresgid(%struct._object* nocapture readnone %self, %struct._object* nocapture readnone %noargs) #0 {
entry:
  %rgid = alloca i32, align 4
  %egid = alloca i32, align 4
  %sgid = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2984, metadata !3839), !dbg !9825
  tail call void @llvm.dbg.value(metadata %struct._object* %noargs, i64 0, metadata !2985, metadata !3839), !dbg !9826
  %0 = bitcast i32* %rgid to i8*, !dbg !9827
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !9827
  %1 = bitcast i32* %egid to i8*, !dbg !9827
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !9827
  %2 = bitcast i32* %sgid to i8*, !dbg !9827
  call void @llvm.lifetime.start(i64 4, i8* %2) #3, !dbg !9827
  tail call void @llvm.dbg.value(metadata i32* %rgid, i64 0, metadata !2986, metadata !3839), !dbg !9828
  tail call void @llvm.dbg.value(metadata i32* %egid, i64 0, metadata !2987, metadata !3839), !dbg !9829
  tail call void @llvm.dbg.value(metadata i32* %sgid, i64 0, metadata !2988, metadata !3839), !dbg !9830
  %call = call i32 @getresgid(i32* nonnull %rgid, i32* nonnull %egid, i32* nonnull %sgid) #3, !dbg !9831
  %cmp = icmp slt i32 %call, 0, !dbg !9833
  br i1 %cmp, label %if.then, label %if.end, !dbg !9834

if.then:                                          ; preds = %entry
  %3 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !9835, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrno(%struct._object* %3) #3, !dbg !9837
  br label %cleanup, !dbg !9838

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %rgid, i64 0, metadata !2986, metadata !3839), !dbg !9828
  %4 = load i32, i32* %rgid, align 4, !dbg !9839, !tbaa !3890
  call void @llvm.dbg.value(metadata i32 %4, i64 0, metadata !698, metadata !3839) #3, !dbg !9840
  %cmp.i = icmp eq i32 %4, -1, !dbg !9842
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !9843

if.then.i:                                        ; preds = %if.end
  %call.i.8 = call %struct._object* @PyLong_FromLong(i64 -1) #3, !dbg !9844
  br label %_PyLong_FromGid.exit, !dbg !9845

if.end.i:                                         ; preds = %if.end
  %conv.i = zext i32 %4 to i64, !dbg !9846
  %call1.i = call %struct._object* @PyLong_FromUnsignedLong(i64 %conv.i) #3, !dbg !9847
  br label %_PyLong_FromGid.exit, !dbg !9848

_PyLong_FromGid.exit:                             ; preds = %if.then.i, %if.end.i
  %retval.0.i = phi %struct._object* [ %call.i.8, %if.then.i ], [ %call1.i, %if.end.i ], !dbg !9849
  call void @llvm.dbg.value(metadata i32* %egid, i64 0, metadata !2987, metadata !3839), !dbg !9829
  %5 = load i32, i32* %egid, align 4, !dbg !9850, !tbaa !3890
  call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !698, metadata !3839) #3, !dbg !9851
  %cmp.i.9 = icmp eq i32 %5, -1, !dbg !9853
  br i1 %cmp.i.9, label %if.then.i.11, label %if.end.i.14, !dbg !9854

if.then.i.11:                                     ; preds = %_PyLong_FromGid.exit
  %call.i.10 = call %struct._object* @PyLong_FromLong(i64 -1) #3, !dbg !9855
  br label %_PyLong_FromGid.exit16, !dbg !9856

if.end.i.14:                                      ; preds = %_PyLong_FromGid.exit
  %conv.i.12 = zext i32 %5 to i64, !dbg !9857
  %call1.i.13 = call %struct._object* @PyLong_FromUnsignedLong(i64 %conv.i.12) #3, !dbg !9858
  br label %_PyLong_FromGid.exit16, !dbg !9859

_PyLong_FromGid.exit16:                           ; preds = %if.then.i.11, %if.end.i.14
  %retval.0.i.15 = phi %struct._object* [ %call.i.10, %if.then.i.11 ], [ %call1.i.13, %if.end.i.14 ], !dbg !9860
  call void @llvm.dbg.value(metadata i32* %sgid, i64 0, metadata !2988, metadata !3839), !dbg !9830
  %6 = load i32, i32* %sgid, align 4, !dbg !9861, !tbaa !3890
  call void @llvm.dbg.value(metadata i32 %6, i64 0, metadata !698, metadata !3839) #3, !dbg !9862
  %cmp.i.17 = icmp eq i32 %6, -1, !dbg !9864
  br i1 %cmp.i.17, label %if.then.i.19, label %if.end.i.22, !dbg !9865

if.then.i.19:                                     ; preds = %_PyLong_FromGid.exit16
  %call.i.18 = call %struct._object* @PyLong_FromLong(i64 -1) #3, !dbg !9866
  br label %_PyLong_FromGid.exit24, !dbg !9867

if.end.i.22:                                      ; preds = %_PyLong_FromGid.exit16
  %conv.i.20 = zext i32 %6 to i64, !dbg !9868
  %call1.i.21 = call %struct._object* @PyLong_FromUnsignedLong(i64 %conv.i.20) #3, !dbg !9869
  br label %_PyLong_FromGid.exit24, !dbg !9870

_PyLong_FromGid.exit24:                           ; preds = %if.then.i.19, %if.end.i.22
  %retval.0.i.23 = phi %struct._object* [ %call.i.18, %if.then.i.19 ], [ %call1.i.21, %if.end.i.22 ], !dbg !9871
  %call5 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.532, i64 0, i64 0), %struct._object* %retval.0.i, %struct._object* %retval.0.i.15, %struct._object* %retval.0.i.23) #3, !dbg !9872
  br label %cleanup, !dbg !9873

cleanup:                                          ; preds = %_PyLong_FromGid.exit24, %if.then
  %retval.0 = phi %struct._object* [ %call.i, %if.then ], [ %call5, %_PyLong_FromGid.exit24 ]
  call void @llvm.lifetime.end(i64 4, i8* %2) #3, !dbg !9874
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !9874
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !9874
  ret %struct._object* %retval.0, !dbg !9874
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_setxattr(%struct._object* nocapture readnone %self, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  %path = alloca %struct.path_t, align 8
  %attribute = alloca %struct.path_t, align 8
  %value = alloca %struct.bufferinfo, align 8
  %flags = alloca i32, align 4
  %follow_symlinks = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !2991, metadata !3839), !dbg !9875
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !2992, metadata !3839), !dbg !9876
  tail call void @llvm.dbg.value(metadata %struct._object* %kwargs, i64 0, metadata !2993, metadata !3839), !dbg !9877
  %0 = bitcast %struct.path_t* %path to i8*, !dbg !9878
  call void @llvm.lifetime.start(i64 72, i8* %0) #3, !dbg !9878
  %1 = bitcast %struct.path_t* %attribute to i8*, !dbg !9879
  call void @llvm.lifetime.start(i64 72, i8* %1) #3, !dbg !9879
  %2 = bitcast %struct.bufferinfo* %value to i8*, !dbg !9880
  call void @llvm.lifetime.start(i64 80, i8* %2) #3, !dbg !9880
  %3 = bitcast i32* %flags to i8*, !dbg !9881
  call void @llvm.lifetime.start(i64 4, i8* %3) #3, !dbg !9881
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !2997, metadata !3839), !dbg !9882
  store i32 0, i32* %flags, align 4, !dbg !9882, !tbaa !3890
  %4 = bitcast i32* %follow_symlinks to i8*, !dbg !9883
  call void @llvm.lifetime.start(i64 4, i8* %4) #3, !dbg !9883
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !2998, metadata !3839), !dbg !9884
  store i32 1, i32* %follow_symlinks, align 4, !dbg !9884, !tbaa !3890
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !3000, metadata !3839), !dbg !9885
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 72, i32 8, i1 false), !dbg !9886
  %function_name = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 0, !dbg !9887
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.161, i64 0, i64 0), i8** %function_name, align 8, !dbg !9888, !tbaa !4743
  %allow_fd = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 3, !dbg !9889
  store i32 1, i32* %allow_fd, align 4, !dbg !9890, !tbaa !4746
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 72, i32 8, i1 false), !dbg !9891
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 80, i32 8, i1 false), !dbg !9892
  tail call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !2994, metadata !3839), !dbg !9893
  tail call void @llvm.dbg.value(metadata %struct.path_t* %attribute, i64 0, metadata !2995, metadata !3839), !dbg !9894
  tail call void @llvm.dbg.value(metadata %struct.bufferinfo* %value, i64 0, metadata !2996, metadata !3839), !dbg !9895
  tail call void @llvm.dbg.value(metadata i32* %flags, i64 0, metadata !2997, metadata !3839), !dbg !9882
  tail call void @llvm.dbg.value(metadata i32* %follow_symlinks, i64 0, metadata !2998, metadata !3839), !dbg !9884
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %args, %struct._object* %kwargs, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.535, i64 0, i64 0), i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @posix_setxattr.keywords, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @path_converter, %struct.path_t* nonnull %path, i32 (%struct._object*, i8*)* nonnull @path_converter, %struct.path_t* nonnull %attribute, %struct.bufferinfo* nonnull %value, i32* nonnull %flags, i32* nonnull %follow_symlinks) #3, !dbg !9896
  %tobool = icmp eq i32 %call, 0, !dbg !9896
  br i1 %tobool, label %cleanup, label %if.end, !dbg !9898

if.end:                                           ; preds = %entry
  %fd = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 6, !dbg !9899
  %5 = load i32, i32* %fd, align 8, !dbg !9899, !tbaa !4754
  call void @llvm.dbg.value(metadata i32* %follow_symlinks, i64 0, metadata !2998, metadata !3839), !dbg !9884
  %6 = load i32, i32* %follow_symlinks, align 4, !dbg !9901, !tbaa !3890
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.161, i64 0, i64 0), i64 0, metadata !944, metadata !3839) #3, !dbg !9902
  call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !945, metadata !3839) #3, !dbg !9904
  call void @llvm.dbg.value(metadata i32 %6, i64 0, metadata !946, metadata !3839) #3, !dbg !9905
  %cmp.i = icmp slt i32 %5, 1, !dbg !9906
  %tobool.i = icmp ne i32 %6, 0, !dbg !9907
  %or.cond.i = or i1 %cmp.i, %tobool.i, !dbg !9908
  br i1 %or.cond.i, label %if.end.4, label %fd_and_follow_symlinks_invalid.exit, !dbg !9908

fd_and_follow_symlinks_invalid.exit:              ; preds = %if.end
  %7 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !9909, !tbaa !3870
  %call.i = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %7, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.183, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.161, i64 0, i64 0)) #3, !dbg !9910
  br label %exit, !dbg !9911

if.end.4:                                         ; preds = %if.end
  %call5 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !9912
  call void @llvm.dbg.value(metadata %struct._ts* %call5, i64 0, metadata !3001, metadata !3839), !dbg !9912
  %8 = load i32, i32* %fd, align 8, !dbg !9913, !tbaa !4754
  %cmp = icmp sgt i32 %8, -1, !dbg !9915
  br i1 %cmp, label %if.then.7, label %if.else, !dbg !9916

if.then.7:                                        ; preds = %if.end.4
  %narrow = getelementptr inbounds %struct.path_t, %struct.path_t* %attribute, i64 0, i32 5, !dbg !9917
  %9 = load i8*, i8** %narrow, align 8, !dbg !9917, !tbaa !4761
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %value, i64 0, i32 0, !dbg !9918
  %10 = load i8*, i8** %buf, align 8, !dbg !9918, !tbaa !8536
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %value, i64 0, i32 2, !dbg !9919
  %11 = load i64, i64* %len, align 8, !dbg !9919, !tbaa !8530
  call void @llvm.dbg.value(metadata i32* %flags, i64 0, metadata !2997, metadata !3839), !dbg !9882
  %12 = load i32, i32* %flags, align 4, !dbg !9920, !tbaa !3890
  %call9 = call i32 @fsetxattr(i32 %8, i8* %9, i8* %10, i64 %11, i32 %12) #3, !dbg !9921
  call void @llvm.dbg.value(metadata i32 %call9, i64 0, metadata !2999, metadata !3839), !dbg !9922
  br label %if.end.24, !dbg !9923

if.else:                                          ; preds = %if.end.4
  call void @llvm.dbg.value(metadata i32* %follow_symlinks, i64 0, metadata !2998, metadata !3839), !dbg !9884
  %13 = load i32, i32* %follow_symlinks, align 4, !dbg !9924, !tbaa !3890
  %tobool10 = icmp eq i32 %13, 0, !dbg !9924
  %narrow12 = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 5, !dbg !9926
  %14 = load i8*, i8** %narrow12, align 8, !dbg !9926, !tbaa !4761
  %narrow13 = getelementptr inbounds %struct.path_t, %struct.path_t* %attribute, i64 0, i32 5, !dbg !9927
  %15 = load i8*, i8** %narrow13, align 8, !dbg !9927, !tbaa !4761
  %buf14 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %value, i64 0, i32 0, !dbg !9928
  %16 = load i8*, i8** %buf14, align 8, !dbg !9928, !tbaa !8536
  %len15 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %value, i64 0, i32 2, !dbg !9929
  %17 = load i64, i64* %len15, align 8, !dbg !9929, !tbaa !8530
  call void @llvm.dbg.value(metadata i32* %flags, i64 0, metadata !2997, metadata !3839), !dbg !9882
  %18 = load i32, i32* %flags, align 4, !dbg !9930, !tbaa !3890
  br i1 %tobool10, label %if.else.17, label %if.then.11, !dbg !9931

if.then.11:                                       ; preds = %if.else
  %call16 = call i32 @setxattr(i8* %14, i8* %15, i8* %16, i64 %17, i32 %18) #3, !dbg !9932
  call void @llvm.dbg.value(metadata i32 %call16, i64 0, metadata !2999, metadata !3839), !dbg !9922
  br label %if.end.24, !dbg !9933

if.else.17:                                       ; preds = %if.else
  %call22 = call i32 @lsetxattr(i8* %14, i8* %15, i8* %16, i64 %17, i32 %18) #3, !dbg !9934
  call void @llvm.dbg.value(metadata i32 %call22, i64 0, metadata !2999, metadata !3839), !dbg !9922
  br label %if.end.24

if.end.24:                                        ; preds = %if.then.11, %if.else.17, %if.then.7
  %result.0 = phi i32 [ %call9, %if.then.7 ], [ %call16, %if.then.11 ], [ %call22, %if.else.17 ]
  call void @PyEval_RestoreThread(%struct._ts* %call5) #3, !dbg !9935
  %tobool25 = icmp eq i32 %result.0, 0, !dbg !9936
  br i1 %tobool25, label %if.end.28, label %if.then.26, !dbg !9938

if.then.26:                                       ; preds = %if.end.24
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !2994, metadata !3839), !dbg !9893
  %path.idx = getelementptr %struct.path_t, %struct.path_t* %path, i64 0, i32 8
  %path.idx.val = load %struct._object*, %struct._object** %path.idx, align 8, !tbaa !4767
  %19 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !9939, !tbaa !3870
  %call.i.39 = call %struct._object* @PyErr_SetFromErrnoWithFilenameObject(%struct._object* %19, %struct._object* %path.idx.val) #3, !dbg !9942
  call void @llvm.dbg.value(metadata %struct._object* %call.i.39, i64 0, metadata !3000, metadata !3839), !dbg !9885
  br label %exit, !dbg !9943

if.end.28:                                        ; preds = %if.end.24
  call void @llvm.dbg.value(metadata %struct._object* @_Py_NoneStruct, i64 0, metadata !3000, metadata !3839), !dbg !9885
  %20 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !9944, !tbaa !3930
  %inc = add i64 %20, 1, !dbg !9944
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !9944, !tbaa !3930
  br label %exit, !dbg !9944

exit:                                             ; preds = %fd_and_follow_symlinks_invalid.exit, %if.end.28, %if.then.26
  %return_value.0 = phi %struct._object* [ null, %fd_and_follow_symlinks_invalid.exit ], [ %call.i.39, %if.then.26 ], [ @_Py_NoneStruct, %if.end.28 ]
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !2994, metadata !3839), !dbg !9893
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1054, metadata !3839) #3, !dbg !9945
  %cleanup.i = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 9, !dbg !9947
  %21 = load %struct._object*, %struct._object** %cleanup.i, align 8, !dbg !9947, !tbaa !4634
  %tobool.i.40 = icmp eq %struct._object* %21, null, !dbg !9948
  br i1 %tobool.i.40, label %path_cleanup.exit, label %if.then.2.i, !dbg !9949

if.then.2.i:                                      ; preds = %exit
  call void @llvm.dbg.value(metadata %struct._object* %21, i64 0, metadata !1055, metadata !3839) #3, !dbg !9950
  store %struct._object* null, %struct._object** %cleanup.i, align 8, !dbg !9951, !tbaa !4634
  call void @llvm.dbg.value(metadata %struct._object* %21, i64 0, metadata !1059, metadata !3839) #3, !dbg !9952
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %21, i64 0, i32 0, !dbg !9953
  %22 = load i64, i64* %ob_refcnt.i, align 8, !dbg !9953, !tbaa !3930
  %dec.i = add i64 %22, -1, !dbg !9953
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !9953, !tbaa !3930
  %cmp5.i = icmp eq i64 %dec.i, 0, !dbg !9953
  br i1 %cmp5.i, label %if.else.i, label %path_cleanup.exit, !dbg !9954

if.else.i:                                        ; preds = %if.then.2.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %21, i64 0, i32 1, !dbg !9955
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !9955, !tbaa !3875
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %23, i64 0, i32 4, !dbg !9955
  %24 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !9955, !tbaa !3934
  call void %24(%struct._object* %21) #3, !dbg !9955
  br label %path_cleanup.exit, !dbg !9956

path_cleanup.exit:                                ; preds = %exit, %if.then.2.i, %if.else.i
  call void @llvm.dbg.value(metadata %struct.path_t* %attribute, i64 0, metadata !2995, metadata !3839), !dbg !9894
  call void @llvm.dbg.value(metadata %struct.path_t* %attribute, i64 0, metadata !1054, metadata !3839) #3, !dbg !9957
  %cleanup.i.41 = getelementptr inbounds %struct.path_t, %struct.path_t* %attribute, i64 0, i32 9, !dbg !9959
  %25 = load %struct._object*, %struct._object** %cleanup.i.41, align 8, !dbg !9959, !tbaa !4634
  %tobool.i.42 = icmp eq %struct._object* %25, null, !dbg !9960
  br i1 %tobool.i.42, label %path_cleanup.exit50, label %if.then.2.i.46, !dbg !9961

if.then.2.i.46:                                   ; preds = %path_cleanup.exit
  call void @llvm.dbg.value(metadata %struct._object* %25, i64 0, metadata !1055, metadata !3839) #3, !dbg !9962
  store %struct._object* null, %struct._object** %cleanup.i.41, align 8, !dbg !9963, !tbaa !4634
  call void @llvm.dbg.value(metadata %struct._object* %25, i64 0, metadata !1059, metadata !3839) #3, !dbg !9964
  %ob_refcnt.i.43 = getelementptr inbounds %struct._object, %struct._object* %25, i64 0, i32 0, !dbg !9965
  %26 = load i64, i64* %ob_refcnt.i.43, align 8, !dbg !9965, !tbaa !3930
  %dec.i.44 = add i64 %26, -1, !dbg !9965
  store i64 %dec.i.44, i64* %ob_refcnt.i.43, align 8, !dbg !9965, !tbaa !3930
  %cmp5.i.45 = icmp eq i64 %dec.i.44, 0, !dbg !9965
  br i1 %cmp5.i.45, label %if.else.i.49, label %path_cleanup.exit50, !dbg !9966

if.else.i.49:                                     ; preds = %if.then.2.i.46
  %ob_type.i.47 = getelementptr inbounds %struct._object, %struct._object* %25, i64 0, i32 1, !dbg !9967
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type.i.47, align 8, !dbg !9967, !tbaa !3875
  %tp_dealloc.i.48 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i64 0, i32 4, !dbg !9967
  %28 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i.48, align 8, !dbg !9967, !tbaa !3934
  call void %28(%struct._object* %25) #3, !dbg !9967
  br label %path_cleanup.exit50, !dbg !9968

path_cleanup.exit50:                              ; preds = %path_cleanup.exit, %if.then.2.i.46, %if.else.i.49
  call void @llvm.dbg.value(metadata %struct.bufferinfo* %value, i64 0, metadata !2996, metadata !3839), !dbg !9895
  call void @PyBuffer_Release(%struct.bufferinfo* nonnull %value) #3, !dbg !9969
  br label %cleanup, !dbg !9970

cleanup:                                          ; preds = %entry, %path_cleanup.exit50
  %retval.0 = phi %struct._object* [ %return_value.0, %path_cleanup.exit50 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* %4) #3, !dbg !9971
  call void @llvm.lifetime.end(i64 4, i8* %3) #3, !dbg !9971
  call void @llvm.lifetime.end(i64 80, i8* %2) #3, !dbg !9971
  call void @llvm.lifetime.end(i64 72, i8* %1) #3, !dbg !9971
  call void @llvm.lifetime.end(i64 72, i8* %0) #3, !dbg !9971
  ret %struct._object* %retval.0, !dbg !9971
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_getxattr(%struct._object* nocapture readnone %self, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  %path = alloca %struct.path_t, align 8
  %attribute = alloca %struct.path_t, align 8
  %follow_symlinks = alloca i32, align 4
  %buffer = alloca %struct._object*, align 8
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !3005, metadata !3839), !dbg !9972
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !3006, metadata !3839), !dbg !9973
  tail call void @llvm.dbg.value(metadata %struct._object* %kwargs, i64 0, metadata !3007, metadata !3839), !dbg !9974
  %0 = bitcast %struct.path_t* %path to i8*, !dbg !9975
  call void @llvm.lifetime.start(i64 72, i8* %0) #3, !dbg !9975
  %1 = bitcast %struct.path_t* %attribute to i8*, !dbg !9976
  call void @llvm.lifetime.start(i64 72, i8* %1) #3, !dbg !9976
  %2 = bitcast i32* %follow_symlinks to i8*, !dbg !9977
  call void @llvm.lifetime.start(i64 4, i8* %2) #3, !dbg !9977
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !3010, metadata !3839), !dbg !9978
  store i32 1, i32* %follow_symlinks, align 4, !dbg !9978, !tbaa !3890
  %3 = bitcast %struct._object** %buffer to i8*, !dbg !9979
  call void @llvm.lifetime.start(i64 8, i8* %3) #3, !dbg !9979
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !3011, metadata !3839), !dbg !9980
  store %struct._object* null, %struct._object** %buffer, align 8, !dbg !9980, !tbaa !3870
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 72, i32 8, i1 false), !dbg !9981
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 72, i32 8, i1 false), !dbg !9982
  %function_name = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 0, !dbg !9983
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.162, i64 0, i64 0), i8** %function_name, align 8, !dbg !9984, !tbaa !4743
  %function_name1 = getelementptr inbounds %struct.path_t, %struct.path_t* %attribute, i64 0, i32 0, !dbg !9985
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.162, i64 0, i64 0), i8** %function_name1, align 8, !dbg !9986, !tbaa !4743
  %allow_fd = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 3, !dbg !9987
  store i32 1, i32* %allow_fd, align 4, !dbg !9988, !tbaa !4746
  tail call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !3008, metadata !3839), !dbg !9989
  tail call void @llvm.dbg.value(metadata %struct.path_t* %attribute, i64 0, metadata !3009, metadata !3839), !dbg !9990
  tail call void @llvm.dbg.value(metadata i32* %follow_symlinks, i64 0, metadata !3010, metadata !3839), !dbg !9978
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %args, %struct._object* %kwargs, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.536, i64 0, i64 0), i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @posix_getxattr.keywords, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @path_converter, %struct.path_t* nonnull %path, i32 (%struct._object*, i8*)* nonnull @path_converter, %struct.path_t* nonnull %attribute, i32* nonnull %follow_symlinks) #3, !dbg !9991
  %tobool = icmp eq i32 %call, 0, !dbg !9991
  br i1 %tobool, label %cleanup.48, label %if.end, !dbg !9993

if.end:                                           ; preds = %entry
  %fd = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 6, !dbg !9994
  %4 = load i32, i32* %fd, align 8, !dbg !9994, !tbaa !4754
  call void @llvm.dbg.value(metadata i32* %follow_symlinks, i64 0, metadata !3010, metadata !3839), !dbg !9978
  %5 = load i32, i32* %follow_symlinks, align 4, !dbg !9996, !tbaa !3890
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.162, i64 0, i64 0), i64 0, metadata !944, metadata !3839) #3, !dbg !9997
  call void @llvm.dbg.value(metadata i32 %4, i64 0, metadata !945, metadata !3839) #3, !dbg !9999
  call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !946, metadata !3839) #3, !dbg !10000
  %cmp.i = icmp slt i32 %4, 1, !dbg !10001
  %tobool.i = icmp ne i32 %5, 0, !dbg !10002
  %or.cond.i = or i1 %cmp.i, %tobool.i, !dbg !10003
  br i1 %or.cond.i, label %for.cond.preheader, label %fd_and_follow_symlinks_invalid.exit, !dbg !10003

for.cond.preheader:                               ; preds = %if.end
  call void @llvm.dbg.value(metadata i64 128, i64 0, metadata !3018, metadata !3839), !dbg !10004
  %narrow = getelementptr inbounds %struct.path_t, %struct.path_t* %attribute, i64 0, i32 5, !dbg !10005
  %narrow21 = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 5, !dbg !10007
  %call10 = call %struct._object* @PyBytes_FromStringAndSize(i8* null, i64 128) #3, !dbg !10009
  call void @llvm.dbg.value(metadata %struct._object* %call10, i64 0, metadata !3011, metadata !3839), !dbg !9980
  store %struct._object* %call10, %struct._object** %buffer, align 8, !dbg !10010, !tbaa !3870
  %tobool11 = icmp eq %struct._object* %call10, null, !dbg !10011
  br i1 %tobool11, label %exit, label %if.end.13, !dbg !10013

fd_and_follow_symlinks_invalid.exit:              ; preds = %if.end
  %6 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10014, !tbaa !3870
  %call.i = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %6, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.183, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.162, i64 0, i64 0)) #3, !dbg !10015
  br label %exit, !dbg !10016

for.cond:                                         ; preds = %if.end.35
  call void @llvm.dbg.value(metadata i64 65536, i64 0, metadata !3018, metadata !3839), !dbg !10004
  %call10.1 = call %struct._object* @PyBytes_FromStringAndSize(i8* null, i64 65536) #3, !dbg !10009
  call void @llvm.dbg.value(metadata %struct._object* %call10, i64 0, metadata !3011, metadata !3839), !dbg !9980
  store %struct._object* %call10.1, %struct._object** %buffer, align 8, !dbg !10010, !tbaa !3870
  %tobool11.1 = icmp eq %struct._object* %call10.1, null, !dbg !10011
  br i1 %tobool11.1, label %exit, label %if.end.13.1, !dbg !10013

if.end.13:                                        ; preds = %for.cond.preheader
  %ob_sval = getelementptr inbounds %struct._object, %struct._object* %call10, i64 2, !dbg !10017
  %arraydecay = bitcast %struct._object* %ob_sval to i8*, !dbg !10017
  call void @llvm.dbg.value(metadata i8* %arraydecay, i64 0, metadata !3013, metadata !3839), !dbg !10018
  %call14 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !10019
  call void @llvm.dbg.value(metadata %struct._ts* %call14, i64 0, metadata !3019, metadata !3839), !dbg !10019
  %7 = load i32, i32* %fd, align 8, !dbg !10020, !tbaa !4754
  %cmp = icmp sgt i32 %7, -1, !dbg !10021
  br i1 %cmp, label %if.then.16, label %if.else, !dbg !10022

if.then.16:                                       ; preds = %if.end.13
  %8 = load i8*, i8** %narrow, align 8, !dbg !10005, !tbaa !4761
  %call18 = call i64 @fgetxattr(i32 %7, i8* %8, i8* %arraydecay, i64 128) #3, !dbg !10023
  call void @llvm.dbg.value(metadata i64 %call18, i64 0, metadata !3017, metadata !3839), !dbg !10024
  br label %if.end.29, !dbg !10025

if.else:                                          ; preds = %if.end.13
  call void @llvm.dbg.value(metadata i32* %follow_symlinks, i64 0, metadata !3010, metadata !3839), !dbg !9978
  %9 = load i32, i32* %follow_symlinks, align 4, !dbg !10026, !tbaa !3890
  %tobool19 = icmp eq i32 %9, 0, !dbg !10026
  %10 = load i8*, i8** %narrow21, align 8, !dbg !10007, !tbaa !4761
  %11 = load i8*, i8** %narrow, align 8, !dbg !10027, !tbaa !4761
  br i1 %tobool19, label %if.else.24, label %if.then.20, !dbg !10028

if.then.20:                                       ; preds = %if.else
  %call23 = call i64 @getxattr(i8* %10, i8* %11, i8* %arraydecay, i64 128) #3, !dbg !10029
  call void @llvm.dbg.value(metadata i64 %call23, i64 0, metadata !3017, metadata !3839), !dbg !10024
  br label %if.end.29, !dbg !10030

if.else.24:                                       ; preds = %if.else
  %call27 = call i64 @lgetxattr(i8* %10, i8* %11, i8* %arraydecay, i64 128) #3, !dbg !10031
  call void @llvm.dbg.value(metadata i64 %call27, i64 0, metadata !3017, metadata !3839), !dbg !10024
  br label %if.end.29

if.end.29:                                        ; preds = %if.then.20, %if.else.24, %if.then.16
  %result.0 = phi i64 [ %call18, %if.then.16 ], [ %call23, %if.then.20 ], [ %call27, %if.else.24 ]
  call void @PyEval_RestoreThread(%struct._ts* %call14) #3, !dbg !10032
  %cmp30 = icmp slt i64 %result.0, 0, !dbg !10033
  br i1 %cmp30, label %do.body, label %if.end.41, !dbg !10034

do.body:                                          ; preds = %if.end.29
  call void @llvm.dbg.value(metadata %struct._object** %buffer, i64 0, metadata !3011, metadata !3839), !dbg !9980
  %12 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !10035, !tbaa !3870
  call void @llvm.dbg.value(metadata %struct._object* %12, i64 0, metadata !3021, metadata !3839), !dbg !10035
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %12, i64 0, i32 0, !dbg !10037
  %13 = load i64, i64* %ob_refcnt, align 8, !dbg !10037, !tbaa !3930
  %dec = add i64 %13, -1, !dbg !10037
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10037, !tbaa !3930
  %cmp32 = icmp eq i64 %dec, 0, !dbg !10037
  br i1 %cmp32, label %if.else.34, label %if.end.35, !dbg !10039

if.else.34:                                       ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %12, i64 0, i32 1, !dbg !10040
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10040, !tbaa !3875
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i64 0, i32 4, !dbg !10040
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10040, !tbaa !3934
  call void %15(%struct._object* %12) #3, !dbg !10040
  br label %if.end.35

if.end.35:                                        ; preds = %do.body, %if.else.34
  call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !3011, metadata !3839), !dbg !9980
  store %struct._object* null, %struct._object** %buffer, align 8, !dbg !10042, !tbaa !3870
  %call36 = tail call i32* @__errno_location() #1, !dbg !10043
  %16 = load i32, i32* %call36, align 4, !dbg !10043, !tbaa !3890
  %cmp37 = icmp eq i32 %16, 34, !dbg !10045
  br i1 %cmp37, label %for.cond, label %if.end.39, !dbg !10046

if.end.39:                                        ; preds = %if.end.35.1, %if.end.35
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !3008, metadata !3839), !dbg !9989
  %path.idx = getelementptr %struct.path_t, %struct.path_t* %path, i64 0, i32 8
  %path.idx.val = load %struct._object*, %struct._object** %path.idx, align 8, !tbaa !4767
  %17 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !10047, !tbaa !3870
  %call.i.71 = call %struct._object* @PyErr_SetFromErrnoWithFilenameObject(%struct._object* %17, %struct._object* %path.idx.val) #3, !dbg !10049
  br label %exit, !dbg !10050

if.end.41:                                        ; preds = %if.end.29.1, %if.end.29
  %result.0.lcssa92 = phi i64 [ %result.0, %if.end.29 ], [ %result.0.1, %if.end.29.1 ]
  %.lcssa90 = phi i64 [ 128, %if.end.29 ], [ 65536, %if.end.29.1 ]
  %cmp42 = icmp eq i64 %result.0.lcssa92, %.lcssa90, !dbg !10051
  br i1 %cmp42, label %exit, label %if.then.43, !dbg !10053

if.then.43:                                       ; preds = %if.end.41
  call void @llvm.dbg.value(metadata %struct._object** %buffer, i64 0, metadata !3011, metadata !3839), !dbg !9980
  %call44 = call i32 @_PyBytes_Resize(%struct._object** nonnull %buffer, i64 %result.0.lcssa92) #3, !dbg !10054
  br label %exit, !dbg !10056

exit:                                             ; preds = %for.cond.preheader, %for.cond, %if.then.43, %if.end.41, %for.cond.1, %if.end.39, %fd_and_follow_symlinks_invalid.exit
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !3008, metadata !3839), !dbg !9989
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1054, metadata !3839) #3, !dbg !10057
  %cleanup.i = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 9, !dbg !10059
  %18 = load %struct._object*, %struct._object** %cleanup.i, align 8, !dbg !10059, !tbaa !4634
  %tobool.i.72 = icmp eq %struct._object* %18, null, !dbg !10060
  br i1 %tobool.i.72, label %path_cleanup.exit, label %if.then.2.i, !dbg !10061

if.then.2.i:                                      ; preds = %exit
  call void @llvm.dbg.value(metadata %struct._object* %18, i64 0, metadata !1055, metadata !3839) #3, !dbg !10062
  store %struct._object* null, %struct._object** %cleanup.i, align 8, !dbg !10063, !tbaa !4634
  call void @llvm.dbg.value(metadata %struct._object* %18, i64 0, metadata !1059, metadata !3839) #3, !dbg !10064
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %18, i64 0, i32 0, !dbg !10065
  %19 = load i64, i64* %ob_refcnt.i, align 8, !dbg !10065, !tbaa !3930
  %dec.i = add i64 %19, -1, !dbg !10065
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !10065, !tbaa !3930
  %cmp5.i = icmp eq i64 %dec.i, 0, !dbg !10065
  br i1 %cmp5.i, label %if.else.i, label %path_cleanup.exit, !dbg !10066

if.else.i:                                        ; preds = %if.then.2.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %18, i64 0, i32 1, !dbg !10067
  %20 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !10067, !tbaa !3875
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %20, i64 0, i32 4, !dbg !10067
  %21 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !10067, !tbaa !3934
  call void %21(%struct._object* %18) #3, !dbg !10067
  br label %path_cleanup.exit, !dbg !10068

path_cleanup.exit:                                ; preds = %exit, %if.then.2.i, %if.else.i
  call void @llvm.dbg.value(metadata %struct.path_t* %attribute, i64 0, metadata !3009, metadata !3839), !dbg !9990
  call void @llvm.dbg.value(metadata %struct.path_t* %attribute, i64 0, metadata !1054, metadata !3839) #3, !dbg !10069
  %cleanup.i.73 = getelementptr inbounds %struct.path_t, %struct.path_t* %attribute, i64 0, i32 9, !dbg !10071
  %22 = load %struct._object*, %struct._object** %cleanup.i.73, align 8, !dbg !10071, !tbaa !4634
  %tobool.i.74 = icmp eq %struct._object* %22, null, !dbg !10072
  br i1 %tobool.i.74, label %path_cleanup.exit82, label %if.then.2.i.78, !dbg !10073

if.then.2.i.78:                                   ; preds = %path_cleanup.exit
  call void @llvm.dbg.value(metadata %struct._object* %22, i64 0, metadata !1055, metadata !3839) #3, !dbg !10074
  store %struct._object* null, %struct._object** %cleanup.i.73, align 8, !dbg !10075, !tbaa !4634
  call void @llvm.dbg.value(metadata %struct._object* %22, i64 0, metadata !1059, metadata !3839) #3, !dbg !10076
  %ob_refcnt.i.75 = getelementptr inbounds %struct._object, %struct._object* %22, i64 0, i32 0, !dbg !10077
  %23 = load i64, i64* %ob_refcnt.i.75, align 8, !dbg !10077, !tbaa !3930
  %dec.i.76 = add i64 %23, -1, !dbg !10077
  store i64 %dec.i.76, i64* %ob_refcnt.i.75, align 8, !dbg !10077, !tbaa !3930
  %cmp5.i.77 = icmp eq i64 %dec.i.76, 0, !dbg !10077
  br i1 %cmp5.i.77, label %if.else.i.81, label %path_cleanup.exit82, !dbg !10078

if.else.i.81:                                     ; preds = %if.then.2.i.78
  %ob_type.i.79 = getelementptr inbounds %struct._object, %struct._object* %22, i64 0, i32 1, !dbg !10079
  %24 = load %struct._typeobject*, %struct._typeobject** %ob_type.i.79, align 8, !dbg !10079, !tbaa !3875
  %tp_dealloc.i.80 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %24, i64 0, i32 4, !dbg !10079
  %25 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i.80, align 8, !dbg !10079, !tbaa !3934
  call void %25(%struct._object* %22) #3, !dbg !10079
  br label %path_cleanup.exit82, !dbg !10080

path_cleanup.exit82:                              ; preds = %path_cleanup.exit, %if.then.2.i.78, %if.else.i.81
  call void @llvm.dbg.value(metadata %struct._object** %buffer, i64 0, metadata !3011, metadata !3839), !dbg !9980
  %26 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !10081, !tbaa !3870
  br label %cleanup.48, !dbg !10082

cleanup.48:                                       ; preds = %entry, %path_cleanup.exit82
  %retval.0 = phi %struct._object* [ %26, %path_cleanup.exit82 ], [ null, %entry ]
  call void @llvm.lifetime.end(i64 8, i8* %3) #3, !dbg !10083
  call void @llvm.lifetime.end(i64 4, i8* %2) #3, !dbg !10083
  call void @llvm.lifetime.end(i64 72, i8* %1) #3, !dbg !10083
  call void @llvm.lifetime.end(i64 72, i8* %0) #3, !dbg !10083
  ret %struct._object* %retval.0, !dbg !10083

if.end.13.1:                                      ; preds = %for.cond
  %ob_sval.1 = getelementptr inbounds %struct._object, %struct._object* %call10.1, i64 2, !dbg !10017
  %arraydecay.1 = bitcast %struct._object* %ob_sval.1 to i8*, !dbg !10017
  call void @llvm.dbg.value(metadata i8* %arraydecay, i64 0, metadata !3013, metadata !3839), !dbg !10018
  %call14.1 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !10019
  call void @llvm.dbg.value(metadata %struct._ts* %call14, i64 0, metadata !3019, metadata !3839), !dbg !10019
  %27 = load i32, i32* %fd, align 8, !dbg !10020, !tbaa !4754
  %cmp.1 = icmp sgt i32 %27, -1, !dbg !10021
  br i1 %cmp.1, label %if.then.16.1, label %if.else.1, !dbg !10022

if.else.1:                                        ; preds = %if.end.13.1
  call void @llvm.dbg.value(metadata i32* %follow_symlinks, i64 0, metadata !3010, metadata !3839), !dbg !9978
  %28 = load i32, i32* %follow_symlinks, align 4, !dbg !10026, !tbaa !3890
  %tobool19.1 = icmp eq i32 %28, 0, !dbg !10026
  %29 = load i8*, i8** %narrow21, align 8, !dbg !10007, !tbaa !4761
  %30 = load i8*, i8** %narrow, align 8, !dbg !10027, !tbaa !4761
  br i1 %tobool19.1, label %if.else.24.1, label %if.then.20.1, !dbg !10028

if.then.20.1:                                     ; preds = %if.else.1
  %call23.1 = call i64 @getxattr(i8* %29, i8* %30, i8* %arraydecay.1, i64 65536) #3, !dbg !10029
  call void @llvm.dbg.value(metadata i64 %call23, i64 0, metadata !3017, metadata !3839), !dbg !10024
  br label %if.end.29.1, !dbg !10030

if.else.24.1:                                     ; preds = %if.else.1
  %call27.1 = call i64 @lgetxattr(i8* %29, i8* %30, i8* %arraydecay.1, i64 65536) #3, !dbg !10031
  call void @llvm.dbg.value(metadata i64 %call27, i64 0, metadata !3017, metadata !3839), !dbg !10024
  br label %if.end.29.1

if.then.16.1:                                     ; preds = %if.end.13.1
  %31 = load i8*, i8** %narrow, align 8, !dbg !10005, !tbaa !4761
  %call18.1 = call i64 @fgetxattr(i32 %27, i8* %31, i8* %arraydecay.1, i64 65536) #3, !dbg !10023
  call void @llvm.dbg.value(metadata i64 %call18, i64 0, metadata !3017, metadata !3839), !dbg !10024
  br label %if.end.29.1, !dbg !10025

if.end.29.1:                                      ; preds = %if.then.16.1, %if.else.24.1, %if.then.20.1
  %result.0.1 = phi i64 [ %call18.1, %if.then.16.1 ], [ %call23.1, %if.then.20.1 ], [ %call27.1, %if.else.24.1 ]
  call void @PyEval_RestoreThread(%struct._ts* %call14.1) #3, !dbg !10032
  %cmp30.1 = icmp slt i64 %result.0.1, 0, !dbg !10033
  br i1 %cmp30.1, label %do.body.1, label %if.end.41, !dbg !10034

do.body.1:                                        ; preds = %if.end.29.1
  call void @llvm.dbg.value(metadata %struct._object** %buffer, i64 0, metadata !3011, metadata !3839), !dbg !9980
  %32 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !10035, !tbaa !3870
  call void @llvm.dbg.value(metadata %struct._object* %12, i64 0, metadata !3021, metadata !3839), !dbg !10035
  %ob_refcnt.1 = getelementptr inbounds %struct._object, %struct._object* %32, i64 0, i32 0, !dbg !10037
  %33 = load i64, i64* %ob_refcnt.1, align 8, !dbg !10037, !tbaa !3930
  %dec.1 = add i64 %33, -1, !dbg !10037
  store i64 %dec.1, i64* %ob_refcnt.1, align 8, !dbg !10037, !tbaa !3930
  %cmp32.1 = icmp eq i64 %dec.1, 0, !dbg !10037
  br i1 %cmp32.1, label %if.else.34.1, label %if.end.35.1, !dbg !10039

if.else.34.1:                                     ; preds = %do.body.1
  %ob_type.1 = getelementptr inbounds %struct._object, %struct._object* %32, i64 0, i32 1, !dbg !10040
  %34 = load %struct._typeobject*, %struct._typeobject** %ob_type.1, align 8, !dbg !10040, !tbaa !3875
  %tp_dealloc.1 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %34, i64 0, i32 4, !dbg !10040
  %35 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.1, align 8, !dbg !10040, !tbaa !3934
  call void %35(%struct._object* %32) #3, !dbg !10040
  br label %if.end.35.1

if.end.35.1:                                      ; preds = %if.else.34.1, %do.body.1
  call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !3011, metadata !3839), !dbg !9980
  store %struct._object* null, %struct._object** %buffer, align 8, !dbg !10042, !tbaa !3870
  %36 = load i32, i32* %call36, align 4, !dbg !10043, !tbaa !3890
  %cmp37.1 = icmp eq i32 %36, 34, !dbg !10045
  br i1 %cmp37.1, label %for.cond.1, label %if.end.39, !dbg !10046

for.cond.1:                                       ; preds = %if.end.35.1
  call void @llvm.dbg.value(metadata i64 65536, i64 0, metadata !3018, metadata !3839), !dbg !10004
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !3008, metadata !3839), !dbg !9989
  %path.idx69 = getelementptr %struct.path_t, %struct.path_t* %path, i64 0, i32 8
  %path.idx69.val = load %struct._object*, %struct._object** %path.idx69, align 8, !tbaa !4767
  %37 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !10084, !tbaa !3870
  %call.i.70 = call %struct._object* @PyErr_SetFromErrnoWithFilenameObject(%struct._object* %37, %struct._object* %path.idx69.val) #3, !dbg !10088
  br label %exit, !dbg !10089
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_removexattr(%struct._object* nocapture readnone %self, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  %path = alloca %struct.path_t, align 8
  %attribute = alloca %struct.path_t, align 8
  %follow_symlinks = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !3027, metadata !3839), !dbg !10090
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !3028, metadata !3839), !dbg !10091
  tail call void @llvm.dbg.value(metadata %struct._object* %kwargs, i64 0, metadata !3029, metadata !3839), !dbg !10092
  %0 = bitcast %struct.path_t* %path to i8*, !dbg !10093
  call void @llvm.lifetime.start(i64 72, i8* %0) #3, !dbg !10093
  %1 = bitcast %struct.path_t* %attribute to i8*, !dbg !10094
  call void @llvm.lifetime.start(i64 72, i8* %1) #3, !dbg !10094
  %2 = bitcast i32* %follow_symlinks to i8*, !dbg !10095
  call void @llvm.lifetime.start(i64 4, i8* %2) #3, !dbg !10095
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !3032, metadata !3839), !dbg !10096
  store i32 1, i32* %follow_symlinks, align 4, !dbg !10096, !tbaa !3890
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !3034, metadata !3839), !dbg !10097
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 72, i32 8, i1 false), !dbg !10098
  %function_name = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 0, !dbg !10099
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.163, i64 0, i64 0), i8** %function_name, align 8, !dbg !10100, !tbaa !4743
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 72, i32 8, i1 false), !dbg !10101
  %function_name1 = getelementptr inbounds %struct.path_t, %struct.path_t* %attribute, i64 0, i32 0, !dbg !10102
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.163, i64 0, i64 0), i8** %function_name1, align 8, !dbg !10103, !tbaa !4743
  %allow_fd = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 3, !dbg !10104
  store i32 1, i32* %allow_fd, align 4, !dbg !10105, !tbaa !4746
  tail call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !3030, metadata !3839), !dbg !10106
  tail call void @llvm.dbg.value(metadata %struct.path_t* %attribute, i64 0, metadata !3031, metadata !3839), !dbg !10107
  tail call void @llvm.dbg.value(metadata i32* %follow_symlinks, i64 0, metadata !3032, metadata !3839), !dbg !10096
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %args, %struct._object* %kwargs, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.537, i64 0, i64 0), i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @posix_removexattr.keywords, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @path_converter, %struct.path_t* nonnull %path, i32 (%struct._object*, i8*)* nonnull @path_converter, %struct.path_t* nonnull %attribute, i32* nonnull %follow_symlinks) #3, !dbg !10108
  %tobool = icmp eq i32 %call, 0, !dbg !10108
  br i1 %tobool, label %cleanup, label %if.end, !dbg !10110

if.end:                                           ; preds = %entry
  %fd = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 6, !dbg !10111
  %3 = load i32, i32* %fd, align 8, !dbg !10111, !tbaa !4754
  call void @llvm.dbg.value(metadata i32* %follow_symlinks, i64 0, metadata !3032, metadata !3839), !dbg !10096
  %4 = load i32, i32* %follow_symlinks, align 4, !dbg !10113, !tbaa !3890
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.163, i64 0, i64 0), i64 0, metadata !944, metadata !3839) #3, !dbg !10114
  call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !945, metadata !3839) #3, !dbg !10116
  call void @llvm.dbg.value(metadata i32 %4, i64 0, metadata !946, metadata !3839) #3, !dbg !10117
  %cmp.i = icmp slt i32 %3, 1, !dbg !10118
  %tobool.i = icmp ne i32 %4, 0, !dbg !10119
  %or.cond.i = or i1 %cmp.i, %tobool.i, !dbg !10120
  br i1 %or.cond.i, label %if.end.5, label %fd_and_follow_symlinks_invalid.exit, !dbg !10120

fd_and_follow_symlinks_invalid.exit:              ; preds = %if.end
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10121, !tbaa !3870
  %call.i = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %5, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.183, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.163, i64 0, i64 0)) #3, !dbg !10122
  br label %exit, !dbg !10123

if.end.5:                                         ; preds = %if.end
  %call6 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !10124
  call void @llvm.dbg.value(metadata %struct._ts* %call6, i64 0, metadata !3035, metadata !3839), !dbg !10124
  %6 = load i32, i32* %fd, align 8, !dbg !10125, !tbaa !4754
  %cmp = icmp sgt i32 %6, -1, !dbg !10127
  br i1 %cmp, label %if.then.8, label %if.else, !dbg !10128

if.then.8:                                        ; preds = %if.end.5
  %narrow = getelementptr inbounds %struct.path_t, %struct.path_t* %attribute, i64 0, i32 5, !dbg !10129
  %7 = load i8*, i8** %narrow, align 8, !dbg !10129, !tbaa !4761
  %call10 = call i32 @fremovexattr(i32 %6, i8* %7) #3, !dbg !10130
  call void @llvm.dbg.value(metadata i32 %call10, i64 0, metadata !3033, metadata !3839), !dbg !10131
  br label %if.end.21, !dbg !10132

if.else:                                          ; preds = %if.end.5
  call void @llvm.dbg.value(metadata i32* %follow_symlinks, i64 0, metadata !3032, metadata !3839), !dbg !10096
  %8 = load i32, i32* %follow_symlinks, align 4, !dbg !10133, !tbaa !3890
  %tobool11 = icmp eq i32 %8, 0, !dbg !10133
  %narrow13 = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 5, !dbg !10135
  %9 = load i8*, i8** %narrow13, align 8, !dbg !10135, !tbaa !4761
  %narrow14 = getelementptr inbounds %struct.path_t, %struct.path_t* %attribute, i64 0, i32 5, !dbg !10136
  %10 = load i8*, i8** %narrow14, align 8, !dbg !10136, !tbaa !4761
  br i1 %tobool11, label %if.else.16, label %if.then.12, !dbg !10137

if.then.12:                                       ; preds = %if.else
  %call15 = call i32 @removexattr(i8* %9, i8* %10) #3, !dbg !10138
  call void @llvm.dbg.value(metadata i32 %call15, i64 0, metadata !3033, metadata !3839), !dbg !10131
  br label %if.end.21, !dbg !10139

if.else.16:                                       ; preds = %if.else
  %call19 = call i32 @lremovexattr(i8* %9, i8* %10) #3, !dbg !10140
  call void @llvm.dbg.value(metadata i32 %call19, i64 0, metadata !3033, metadata !3839), !dbg !10131
  br label %if.end.21

if.end.21:                                        ; preds = %if.then.12, %if.else.16, %if.then.8
  %result.0 = phi i32 [ %call10, %if.then.8 ], [ %call15, %if.then.12 ], [ %call19, %if.else.16 ]
  call void @PyEval_RestoreThread(%struct._ts* %call6) #3, !dbg !10141
  %tobool22 = icmp eq i32 %result.0, 0, !dbg !10142
  br i1 %tobool22, label %if.end.25, label %if.then.23, !dbg !10144

if.then.23:                                       ; preds = %if.end.21
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !3030, metadata !3839), !dbg !10106
  %path.idx = getelementptr %struct.path_t, %struct.path_t* %path, i64 0, i32 8
  %path.idx.val = load %struct._object*, %struct._object** %path.idx, align 8, !tbaa !4767
  %11 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !10145, !tbaa !3870
  %call.i.34 = call %struct._object* @PyErr_SetFromErrnoWithFilenameObject(%struct._object* %11, %struct._object* %path.idx.val) #3, !dbg !10148
  call void @llvm.dbg.value(metadata %struct._object* %call.i.34, i64 0, metadata !3034, metadata !3839), !dbg !10097
  br label %exit, !dbg !10149

if.end.25:                                        ; preds = %if.end.21
  call void @llvm.dbg.value(metadata %struct._object* @_Py_NoneStruct, i64 0, metadata !3034, metadata !3839), !dbg !10097
  %12 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !10150, !tbaa !3930
  %inc = add i64 %12, 1, !dbg !10150
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !10150, !tbaa !3930
  br label %exit, !dbg !10150

exit:                                             ; preds = %fd_and_follow_symlinks_invalid.exit, %if.end.25, %if.then.23
  %return_value.0 = phi %struct._object* [ null, %fd_and_follow_symlinks_invalid.exit ], [ %call.i.34, %if.then.23 ], [ @_Py_NoneStruct, %if.end.25 ]
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !3030, metadata !3839), !dbg !10106
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1054, metadata !3839) #3, !dbg !10151
  %cleanup.i = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 9, !dbg !10153
  %13 = load %struct._object*, %struct._object** %cleanup.i, align 8, !dbg !10153, !tbaa !4634
  %tobool.i.35 = icmp eq %struct._object* %13, null, !dbg !10154
  br i1 %tobool.i.35, label %path_cleanup.exit, label %if.then.2.i, !dbg !10155

if.then.2.i:                                      ; preds = %exit
  call void @llvm.dbg.value(metadata %struct._object* %13, i64 0, metadata !1055, metadata !3839) #3, !dbg !10156
  store %struct._object* null, %struct._object** %cleanup.i, align 8, !dbg !10157, !tbaa !4634
  call void @llvm.dbg.value(metadata %struct._object* %13, i64 0, metadata !1059, metadata !3839) #3, !dbg !10158
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %13, i64 0, i32 0, !dbg !10159
  %14 = load i64, i64* %ob_refcnt.i, align 8, !dbg !10159, !tbaa !3930
  %dec.i = add i64 %14, -1, !dbg !10159
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !10159, !tbaa !3930
  %cmp5.i = icmp eq i64 %dec.i, 0, !dbg !10159
  br i1 %cmp5.i, label %if.else.i, label %path_cleanup.exit, !dbg !10160

if.else.i:                                        ; preds = %if.then.2.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %13, i64 0, i32 1, !dbg !10161
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !10161, !tbaa !3875
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i64 0, i32 4, !dbg !10161
  %16 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !10161, !tbaa !3934
  call void %16(%struct._object* %13) #3, !dbg !10161
  br label %path_cleanup.exit, !dbg !10162

path_cleanup.exit:                                ; preds = %exit, %if.then.2.i, %if.else.i
  call void @llvm.dbg.value(metadata %struct.path_t* %attribute, i64 0, metadata !3031, metadata !3839), !dbg !10107
  call void @llvm.dbg.value(metadata %struct.path_t* %attribute, i64 0, metadata !1054, metadata !3839) #3, !dbg !10163
  %cleanup.i.36 = getelementptr inbounds %struct.path_t, %struct.path_t* %attribute, i64 0, i32 9, !dbg !10165
  %17 = load %struct._object*, %struct._object** %cleanup.i.36, align 8, !dbg !10165, !tbaa !4634
  %tobool.i.37 = icmp eq %struct._object* %17, null, !dbg !10166
  br i1 %tobool.i.37, label %cleanup, label %if.then.2.i.41, !dbg !10167

if.then.2.i.41:                                   ; preds = %path_cleanup.exit
  call void @llvm.dbg.value(metadata %struct._object* %17, i64 0, metadata !1055, metadata !3839) #3, !dbg !10168
  store %struct._object* null, %struct._object** %cleanup.i.36, align 8, !dbg !10169, !tbaa !4634
  call void @llvm.dbg.value(metadata %struct._object* %17, i64 0, metadata !1059, metadata !3839) #3, !dbg !10170
  %ob_refcnt.i.38 = getelementptr inbounds %struct._object, %struct._object* %17, i64 0, i32 0, !dbg !10171
  %18 = load i64, i64* %ob_refcnt.i.38, align 8, !dbg !10171, !tbaa !3930
  %dec.i.39 = add i64 %18, -1, !dbg !10171
  store i64 %dec.i.39, i64* %ob_refcnt.i.38, align 8, !dbg !10171, !tbaa !3930
  %cmp5.i.40 = icmp eq i64 %dec.i.39, 0, !dbg !10171
  br i1 %cmp5.i.40, label %if.else.i.44, label %cleanup, !dbg !10172

if.else.i.44:                                     ; preds = %if.then.2.i.41
  %ob_type.i.42 = getelementptr inbounds %struct._object, %struct._object* %17, i64 0, i32 1, !dbg !10173
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type.i.42, align 8, !dbg !10173, !tbaa !3875
  %tp_dealloc.i.43 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i64 0, i32 4, !dbg !10173
  %20 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i.43, align 8, !dbg !10173, !tbaa !3934
  call void %20(%struct._object* %17) #3, !dbg !10173
  br label %cleanup, !dbg !10174

cleanup:                                          ; preds = %if.else.i.44, %if.then.2.i.41, %path_cleanup.exit, %entry
  %retval.0 = phi %struct._object* [ null, %entry ], [ %return_value.0, %path_cleanup.exit ], [ %return_value.0, %if.then.2.i.41 ], [ %return_value.0, %if.else.i.44 ]
  call void @llvm.lifetime.end(i64 4, i8* %2) #3, !dbg !10175
  call void @llvm.lifetime.end(i64 72, i8* %1) #3, !dbg !10175
  call void @llvm.lifetime.end(i64 72, i8* %0) #3, !dbg !10175
  ret %struct._object* %retval.0, !dbg !10175
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_listxattr(%struct._object* nocapture readnone %self, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  %path = alloca %struct.path_t, align 8
  %follow_symlinks = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !3039, metadata !3839), !dbg !10176
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !3040, metadata !3839), !dbg !10177
  tail call void @llvm.dbg.value(metadata %struct._object* %kwargs, i64 0, metadata !3041, metadata !3839), !dbg !10178
  %0 = bitcast %struct.path_t* %path to i8*, !dbg !10179
  call void @llvm.lifetime.start(i64 72, i8* %0) #3, !dbg !10179
  %1 = bitcast i32* %follow_symlinks to i8*, !dbg !10180
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !10180
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !3043, metadata !3839), !dbg !10181
  store i32 1, i32* %follow_symlinks, align 4, !dbg !10181, !tbaa !3890
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !3045, metadata !3839), !dbg !10182
  tail call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !3046, metadata !3839), !dbg !10183
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 72, i32 8, i1 false), !dbg !10184
  %function_name = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 0, !dbg !10185
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.164, i64 0, i64 0), i8** %function_name, align 8, !dbg !10186, !tbaa !4743
  %allow_fd = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 3, !dbg !10187
  store i32 1, i32* %allow_fd, align 4, !dbg !10188, !tbaa !4746
  %fd = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 6, !dbg !10189
  store i32 -1, i32* %fd, align 8, !dbg !10190, !tbaa !4754
  tail call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !3042, metadata !3839), !dbg !10191
  tail call void @llvm.dbg.value(metadata i32* %follow_symlinks, i64 0, metadata !3043, metadata !3839), !dbg !10181
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %args, %struct._object* %kwargs, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.538, i64 0, i64 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @posix_listxattr.keywords, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @path_converter, %struct.path_t* nonnull %path, i32* nonnull %follow_symlinks) #3, !dbg !10192
  %tobool = icmp eq i32 %call, 0, !dbg !10192
  br i1 %tobool, label %cleanup.95, label %if.end, !dbg !10194

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %fd, align 8, !dbg !10195, !tbaa !4754
  call void @llvm.dbg.value(metadata i32* %follow_symlinks, i64 0, metadata !3043, metadata !3839), !dbg !10181
  %3 = load i32, i32* %follow_symlinks, align 4, !dbg !10197, !tbaa !3890
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.164, i64 0, i64 0), i64 0, metadata !944, metadata !3839) #3, !dbg !10198
  call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !945, metadata !3839) #3, !dbg !10200
  call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !946, metadata !3839) #3, !dbg !10201
  %cmp.i = icmp slt i32 %2, 1, !dbg !10202
  %tobool.i = icmp ne i32 %3, 0, !dbg !10203
  %or.cond.i = or i1 %cmp.i, %tobool.i, !dbg !10204
  br i1 %or.cond.i, label %if.end.5, label %fd_and_follow_symlinks_invalid.exit, !dbg !10204

fd_and_follow_symlinks_invalid.exit:              ; preds = %if.end
  %4 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10205, !tbaa !3870
  %call.i = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %4, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.183, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.164, i64 0, i64 0)) #3, !dbg !10206
  br label %exit, !dbg !10207

if.end.5:                                         ; preds = %if.end
  %narrow = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 5, !dbg !10208
  %5 = load i8*, i8** %narrow, align 8, !dbg !10208, !tbaa !4761
  %tobool6 = icmp ne i8* %5, null, !dbg !10209
  %cond = select i1 %tobool6, i8* %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.204, i64 0, i64 0), !dbg !10209
  call void @llvm.dbg.value(metadata i8* %cond, i64 0, metadata !3047, metadata !3839), !dbg !10210
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !3044, metadata !3839), !dbg !10211
  call void @llvm.dbg.value(metadata i64 256, i64 0, metadata !3055, metadata !3839), !dbg !10212
  %call12 = call i8* @PyMem_Malloc(i64 256) #3, !dbg !10213
  call void @llvm.dbg.value(metadata i8* %call12, i64 0, metadata !3046, metadata !3839), !dbg !10183
  %tobool13 = icmp eq i8* %call12, null, !dbg !10214
  br i1 %tobool13, label %if.then.14, label %if.end.16, !dbg !10216

if.then.14:                                       ; preds = %for.inc.90, %if.end.5
  %call15 = call %struct._object* @PyErr_NoMemory() #3, !dbg !10217
  br label %exit, !dbg !10219

if.end.16:                                        ; preds = %if.end.5
  %call17 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !10220
  call void @llvm.dbg.value(metadata %struct._ts* %call17, i64 0, metadata !3056, metadata !3839), !dbg !10220
  %6 = load i32, i32* %fd, align 8, !dbg !10221, !tbaa !4754
  %cmp = icmp sgt i32 %6, -1, !dbg !10223
  br i1 %cmp, label %if.then.19, label %if.else, !dbg !10224

if.then.19:                                       ; preds = %if.end.16
  %call21 = call i64 @flistxattr(i32 %6, i8* %call12, i64 256) #3, !dbg !10225
  call void @llvm.dbg.value(metadata i64 %call21, i64 0, metadata !3054, metadata !3839), !dbg !10226
  br label %if.end.28, !dbg !10227

if.else:                                          ; preds = %if.end.16
  call void @llvm.dbg.value(metadata i32* %follow_symlinks, i64 0, metadata !3043, metadata !3839), !dbg !10181
  %7 = load i32, i32* %follow_symlinks, align 4, !dbg !10228, !tbaa !3890
  %tobool22 = icmp eq i32 %7, 0, !dbg !10228
  br i1 %tobool22, label %if.else.25, label %if.then.23, !dbg !10230

if.then.23:                                       ; preds = %if.else
  %call24 = call i64 @listxattr(i8* %cond, i8* %call12, i64 256) #3, !dbg !10231
  call void @llvm.dbg.value(metadata i64 %call24, i64 0, metadata !3054, metadata !3839), !dbg !10226
  br label %if.end.28, !dbg !10232

if.else.25:                                       ; preds = %if.else
  %call26 = call i64 @llistxattr(i8* %cond, i8* %call12, i64 256) #3, !dbg !10233
  call void @llvm.dbg.value(metadata i64 %call26, i64 0, metadata !3054, metadata !3839), !dbg !10226
  br label %if.end.28

if.end.28:                                        ; preds = %if.then.23, %if.else.25, %if.then.19
  %length.0 = phi i64 [ %call21, %if.then.19 ], [ %call24, %if.then.23 ], [ %call26, %if.else.25 ]
  call void @PyEval_RestoreThread(%struct._ts* %call17) #3, !dbg !10234
  %cmp29 = icmp slt i64 %length.0, 0, !dbg !10235
  br i1 %cmp29, label %if.then.30, label %if.end.36, !dbg !10237

if.then.30:                                       ; preds = %if.end.28
  %call31 = tail call i32* @__errno_location() #1, !dbg !10238
  %8 = load i32, i32* %call31, align 4, !dbg !10238, !tbaa !3890
  %cmp32 = icmp eq i32 %8, 34, !dbg !10241
  br i1 %cmp32, label %for.inc.90, label %if.end.34, !dbg !10242

if.end.34:                                        ; preds = %if.then.30.1, %if.then.30
  %call12.lcssa162 = phi i8* [ %call12, %if.then.30 ], [ %call12.1, %if.then.30.1 ]
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !3042, metadata !3839), !dbg !10191
  %path.idx = getelementptr %struct.path_t, %struct.path_t* %path, i64 0, i32 8
  %path.idx.val = load %struct._object*, %struct._object** %path.idx, align 8, !tbaa !4767
  %9 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !10243, !tbaa !3870
  %call.i.149 = call %struct._object* @PyErr_SetFromErrnoWithFilenameObject(%struct._object* %9, %struct._object* %path.idx.val) #3, !dbg !10245
  br label %exit, !dbg !10246

if.end.36:                                        ; preds = %if.end.28.1, %if.end.28
  %length.0.lcssa = phi i64 [ %length.0, %if.end.28 ], [ %length.0.1, %if.end.28.1 ]
  %call12.lcssa161 = phi i8* [ %call12, %if.end.28 ], [ %call12.1, %if.end.28.1 ]
  %call37 = call %struct._object* @PyList_New(i64 0) #3, !dbg !10247
  call void @llvm.dbg.value(metadata %struct._object* %call37, i64 0, metadata !3045, metadata !3839), !dbg !10182
  %tobool38 = icmp eq %struct._object* %call37, null, !dbg !10248
  br i1 %tobool38, label %exit, label %if.end.40, !dbg !10250

if.end.40:                                        ; preds = %if.end.36
  %add.ptr = getelementptr i8, i8* %call12.lcssa161, i64 %length.0.lcssa, !dbg !10251
  call void @llvm.dbg.value(metadata i8* %add.ptr, i64 0, metadata !3053, metadata !3839), !dbg !10252
  call void @llvm.dbg.value(metadata i8* %call12, i64 0, metadata !3048, metadata !3839), !dbg !10253
  call void @llvm.dbg.value(metadata i8* %call12, i64 0, metadata !3052, metadata !3839), !dbg !10254
  %cmp42.156 = icmp eq i8* %call12.lcssa161, %add.ptr, !dbg !10255
  br i1 %cmp42.156, label %exit, label %for.body.preheader, !dbg !10256

for.body.preheader:                               ; preds = %if.end.40
  br label %for.body, !dbg !10257

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %start.0159 = phi i8* [ %start.2, %for.inc ], [ %call12.lcssa161, %for.body.preheader ]
  %trace.0157 = phi i8* [ %incdec.ptr.pre-phi, %for.inc ], [ %call12.lcssa161, %for.body.preheader ]
  %10 = load i8, i8* %trace.0157, align 1, !dbg !10257, !tbaa !5379
  %tobool43 = icmp eq i8 %10, 0, !dbg !10257
  br i1 %tobool43, label %if.then.44, label %for.body.for.inc_crit_edge, !dbg !10258

for.body.for.inc_crit_edge:                       ; preds = %for.body
  %.pre = getelementptr i8, i8* %trace.0157, i64 1, !dbg !10259
  br label %for.inc, !dbg !10258

if.then.44:                                       ; preds = %for.body
  %sub.ptr.lhs.cast = ptrtoint i8* %trace.0157 to i64, !dbg !10260
  %sub.ptr.rhs.cast = ptrtoint i8* %start.0159 to i64, !dbg !10260
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10260
  %call45 = call %struct._object* @PyUnicode_DecodeFSDefaultAndSize(i8* %start.0159, i64 %sub.ptr.sub) #3, !dbg !10261
  call void @llvm.dbg.value(metadata %struct._object* %call45, i64 0, metadata !3064, metadata !3839), !dbg !10262
  %tobool46 = icmp eq %struct._object* %call45, null, !dbg !10263
  br i1 %tobool46, label %do.body, label %if.end.52, !dbg !10264

do.body:                                          ; preds = %if.then.44
  call void @llvm.dbg.value(metadata %struct._object* %call37, i64 0, metadata !3065, metadata !3839), !dbg !10265
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call37, i64 0, i32 0, !dbg !10267
  %11 = load i64, i64* %ob_refcnt, align 8, !dbg !10267, !tbaa !3930
  %dec = add i64 %11, -1, !dbg !10267
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10267, !tbaa !3930
  %cmp48 = icmp eq i64 %dec, 0, !dbg !10267
  br i1 %cmp48, label %if.else.50, label %exit, !dbg !10269

if.else.50:                                       ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call37, i64 0, i32 1, !dbg !10270
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10270, !tbaa !3875
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i64 0, i32 4, !dbg !10270
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10270, !tbaa !3934
  call void %13(%struct._object* %call37) #3, !dbg !10270
  br label %exit

if.end.52:                                        ; preds = %if.then.44
  %call53 = call i32 @PyList_Append(%struct._object* %call37, %struct._object* %call45) #3, !dbg !10272
  call void @llvm.dbg.value(metadata i32 %call53, i64 0, metadata !3058, metadata !3839), !dbg !10273
  call void @llvm.dbg.value(metadata %struct._object* %call45, i64 0, metadata !3069, metadata !3839), !dbg !10274
  %ob_refcnt56 = getelementptr inbounds %struct._object, %struct._object* %call45, i64 0, i32 0, !dbg !10276
  %14 = load i64, i64* %ob_refcnt56, align 8, !dbg !10276, !tbaa !3930
  %dec57 = add i64 %14, -1, !dbg !10276
  store i64 %dec57, i64* %ob_refcnt56, align 8, !dbg !10276, !tbaa !3930
  %cmp58 = icmp eq i64 %dec57, 0, !dbg !10276
  br i1 %cmp58, label %if.else.60, label %if.end.63, !dbg !10278

if.else.60:                                       ; preds = %if.end.52
  %ob_type61 = getelementptr inbounds %struct._object, %struct._object* %call45, i64 0, i32 1, !dbg !10279
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type61, align 8, !dbg !10279, !tbaa !3875
  %tp_dealloc62 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i64 0, i32 4, !dbg !10279
  %16 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc62, align 8, !dbg !10279, !tbaa !3934
  call void %16(%struct._object* %call45) #3, !dbg !10279
  br label %if.end.63

if.end.63:                                        ; preds = %if.end.52, %if.else.60
  %tobool66 = icmp eq i32 %call53, 0, !dbg !10281
  br i1 %tobool66, label %cleanup, label %do.body.68, !dbg !10282

do.body.68:                                       ; preds = %if.end.63
  call void @llvm.dbg.value(metadata %struct._object* %call37, i64 0, metadata !3071, metadata !3839), !dbg !10283
  %ob_refcnt70 = getelementptr inbounds %struct._object, %struct._object* %call37, i64 0, i32 0, !dbg !10285
  %17 = load i64, i64* %ob_refcnt70, align 8, !dbg !10285, !tbaa !3930
  %dec71 = add i64 %17, -1, !dbg !10285
  store i64 %dec71, i64* %ob_refcnt70, align 8, !dbg !10285, !tbaa !3930
  %cmp72 = icmp eq i64 %dec71, 0, !dbg !10285
  br i1 %cmp72, label %if.else.74, label %exit, !dbg !10287

if.else.74:                                       ; preds = %do.body.68
  %ob_type75 = getelementptr inbounds %struct._object, %struct._object* %call37, i64 0, i32 1, !dbg !10288
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type75, align 8, !dbg !10288, !tbaa !3875
  %tp_dealloc76 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i64 0, i32 4, !dbg !10288
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc76, align 8, !dbg !10288, !tbaa !3934
  call void %19(%struct._object* %call37) #3, !dbg !10288
  br label %exit

cleanup:                                          ; preds = %if.end.63
  %add.ptr81 = getelementptr i8, i8* %trace.0157, i64 1, !dbg !10290
  call void @llvm.dbg.value(metadata i8* %add.ptr81, i64 0, metadata !3048, metadata !3839), !dbg !10253
  br label %for.inc

for.inc:                                          ; preds = %for.body.for.inc_crit_edge, %cleanup
  %incdec.ptr.pre-phi = phi i8* [ %.pre, %for.body.for.inc_crit_edge ], [ %add.ptr81, %cleanup ], !dbg !10259
  %start.2 = phi i8* [ %start.0159, %for.body.for.inc_crit_edge ], [ %add.ptr81, %cleanup ]
  call void @llvm.dbg.value(metadata i8* %incdec.ptr.pre-phi, i64 0, metadata !3052, metadata !3839), !dbg !10254
  %cmp42 = icmp eq i8* %incdec.ptr.pre-phi, %add.ptr, !dbg !10255
  br i1 %cmp42, label %exit.loopexit, label %for.body, !dbg !10256

for.inc.90:                                       ; preds = %if.then.30
  call void @PyMem_Free(i8* %call12) #3, !dbg !10291
  call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !3046, metadata !3839), !dbg !10183
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !3044, metadata !3839), !dbg !10211
  call void @llvm.dbg.value(metadata i64 65536, i64 0, metadata !3055, metadata !3839), !dbg !10212
  %call12.1 = call i8* @PyMem_Malloc(i64 65536) #3, !dbg !10213
  call void @llvm.dbg.value(metadata i8* %call12, i64 0, metadata !3046, metadata !3839), !dbg !10183
  %tobool13.1 = icmp eq i8* %call12.1, null, !dbg !10214
  br i1 %tobool13.1, label %if.then.14, label %if.end.16.1, !dbg !10216

exit.loopexit:                                    ; preds = %for.inc
  br label %exit, !dbg !10191

exit:                                             ; preds = %exit.loopexit, %if.end.40, %if.else.74, %do.body.68, %if.else.50, %do.body, %if.end.36, %for.inc.90.1, %if.then.14, %if.end.34, %fd_and_follow_symlinks_invalid.exit
  %buffer.2 = phi i8* [ null, %fd_and_follow_symlinks_invalid.exit ], [ %call12.lcssa161, %if.end.36 ], [ null, %for.inc.90.1 ], [ null, %if.then.14 ], [ %call12.lcssa162, %if.end.34 ], [ %call12.lcssa161, %do.body ], [ %call12.lcssa161, %if.else.50 ], [ %call12.lcssa161, %do.body.68 ], [ %call12.lcssa161, %if.else.74 ], [ %call12.lcssa161, %if.end.40 ], [ %call12.lcssa161, %exit.loopexit ]
  %result.5 = phi %struct._object* [ null, %fd_and_follow_symlinks_invalid.exit ], [ null, %if.end.36 ], [ null, %for.inc.90.1 ], [ null, %if.then.14 ], [ null, %if.end.34 ], [ null, %do.body ], [ null, %if.else.50 ], [ null, %do.body.68 ], [ null, %if.else.74 ], [ %call37, %if.end.40 ], [ %call37, %exit.loopexit ]
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !3042, metadata !3839), !dbg !10191
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !1054, metadata !3839) #3, !dbg !10293
  %cleanup.i = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 9, !dbg !10295
  %20 = load %struct._object*, %struct._object** %cleanup.i, align 8, !dbg !10295, !tbaa !4634
  %tobool.i.150 = icmp eq %struct._object* %20, null, !dbg !10296
  br i1 %tobool.i.150, label %path_cleanup.exit, label %if.then.2.i, !dbg !10297

if.then.2.i:                                      ; preds = %exit
  call void @llvm.dbg.value(metadata %struct._object* %20, i64 0, metadata !1055, metadata !3839) #3, !dbg !10298
  store %struct._object* null, %struct._object** %cleanup.i, align 8, !dbg !10299, !tbaa !4634
  call void @llvm.dbg.value(metadata %struct._object* %20, i64 0, metadata !1059, metadata !3839) #3, !dbg !10300
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %20, i64 0, i32 0, !dbg !10301
  %21 = load i64, i64* %ob_refcnt.i, align 8, !dbg !10301, !tbaa !3930
  %dec.i = add i64 %21, -1, !dbg !10301
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !10301, !tbaa !3930
  %cmp5.i = icmp eq i64 %dec.i, 0, !dbg !10301
  br i1 %cmp5.i, label %if.else.i, label %path_cleanup.exit, !dbg !10302

if.else.i:                                        ; preds = %if.then.2.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %20, i64 0, i32 1, !dbg !10303
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !10303, !tbaa !3875
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %22, i64 0, i32 4, !dbg !10303
  %23 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !10303, !tbaa !3934
  call void %23(%struct._object* %20) #3, !dbg !10303
  br label %path_cleanup.exit, !dbg !10304

path_cleanup.exit:                                ; preds = %exit, %if.then.2.i, %if.else.i
  %tobool92 = icmp eq i8* %buffer.2, null, !dbg !10305
  br i1 %tobool92, label %cleanup.95, label %if.then.93, !dbg !10307

if.then.93:                                       ; preds = %path_cleanup.exit
  call void @PyMem_Free(i8* %buffer.2) #3, !dbg !10308
  br label %cleanup.95, !dbg !10308

cleanup.95:                                       ; preds = %if.then.93, %path_cleanup.exit, %entry
  %retval.0 = phi %struct._object* [ null, %entry ], [ %result.5, %path_cleanup.exit ], [ %result.5, %if.then.93 ]
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !10309
  call void @llvm.lifetime.end(i64 72, i8* %0) #3, !dbg !10309
  ret %struct._object* %retval.0, !dbg !10309

if.end.16.1:                                      ; preds = %for.inc.90
  %call17.1 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !10220
  call void @llvm.dbg.value(metadata %struct._ts* %call17, i64 0, metadata !3056, metadata !3839), !dbg !10220
  %24 = load i32, i32* %fd, align 8, !dbg !10221, !tbaa !4754
  %cmp.1 = icmp sgt i32 %24, -1, !dbg !10223
  br i1 %cmp.1, label %if.then.19.1, label %if.else.1, !dbg !10224

if.else.1:                                        ; preds = %if.end.16.1
  call void @llvm.dbg.value(metadata i32* %follow_symlinks, i64 0, metadata !3043, metadata !3839), !dbg !10181
  %25 = load i32, i32* %follow_symlinks, align 4, !dbg !10228, !tbaa !3890
  %tobool22.1 = icmp eq i32 %25, 0, !dbg !10228
  br i1 %tobool22.1, label %if.else.25.1, label %if.then.23.1, !dbg !10230

if.then.23.1:                                     ; preds = %if.else.1
  %call24.1 = call i64 @listxattr(i8* %cond, i8* %call12.1, i64 65536) #3, !dbg !10231
  call void @llvm.dbg.value(metadata i64 %call24, i64 0, metadata !3054, metadata !3839), !dbg !10226
  br label %if.end.28.1, !dbg !10232

if.else.25.1:                                     ; preds = %if.else.1
  %call26.1 = call i64 @llistxattr(i8* %cond, i8* %call12.1, i64 65536) #3, !dbg !10233
  call void @llvm.dbg.value(metadata i64 %call26, i64 0, metadata !3054, metadata !3839), !dbg !10226
  br label %if.end.28.1

if.then.19.1:                                     ; preds = %if.end.16.1
  %call21.1 = call i64 @flistxattr(i32 %24, i8* %call12.1, i64 65536) #3, !dbg !10225
  call void @llvm.dbg.value(metadata i64 %call21, i64 0, metadata !3054, metadata !3839), !dbg !10226
  br label %if.end.28.1, !dbg !10227

if.end.28.1:                                      ; preds = %if.then.19.1, %if.else.25.1, %if.then.23.1
  %length.0.1 = phi i64 [ %call21.1, %if.then.19.1 ], [ %call24.1, %if.then.23.1 ], [ %call26.1, %if.else.25.1 ]
  call void @PyEval_RestoreThread(%struct._ts* %call17.1) #3, !dbg !10234
  %cmp29.1 = icmp slt i64 %length.0.1, 0, !dbg !10235
  br i1 %cmp29.1, label %if.then.30.1, label %if.end.36, !dbg !10237

if.then.30.1:                                     ; preds = %if.end.28.1
  %26 = load i32, i32* %call31, align 4, !dbg !10238, !tbaa !3890
  %cmp32.1 = icmp eq i32 %26, 34, !dbg !10241
  br i1 %cmp32.1, label %for.inc.90.1, label %if.end.34, !dbg !10242

for.inc.90.1:                                     ; preds = %if.then.30.1
  call void @PyMem_Free(i8* %call12.1) #3, !dbg !10291
  call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !3046, metadata !3839), !dbg !10183
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !3044, metadata !3839), !dbg !10211
  call void @llvm.dbg.value(metadata i64 65536, i64 0, metadata !3055, metadata !3839), !dbg !10212
  call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !3042, metadata !3839), !dbg !10191
  %path.idx147 = getelementptr %struct.path_t, %struct.path_t* %path, i64 0, i32 8
  %path.idx147.val = load %struct._object*, %struct._object** %path.idx147, align 8, !tbaa !4767
  %27 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !10310, !tbaa !3870
  %call.i.148 = call %struct._object* @PyErr_SetFromErrnoWithFilenameObject(%struct._object* %27, %struct._object* %path.idx147.val) #3, !dbg !10314
  br label %exit, !dbg !10315
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @get_terminal_size(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %fd = alloca i32, align 4
  %w = alloca %struct.winsize, align 2
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !3077, metadata !3839), !dbg !10316
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !3078, metadata !3839), !dbg !10317
  %0 = bitcast i32* %fd to i8*, !dbg !10318
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !10318
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !10319, !tbaa !3870
  %call = tail call i32 @fileno(%struct._IO_FILE* %1) #3, !dbg !10320
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !3082, metadata !3839), !dbg !10321
  store i32 %call, i32* %fd, align 4, !dbg !10321, !tbaa !3890
  tail call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !3082, metadata !3839), !dbg !10321
  %call1 = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.539, i64 0, i64 0), i32* nonnull %fd) #3, !dbg !10322
  %tobool = icmp eq i32 %call1, 0, !dbg !10322
  br i1 %tobool, label %cleanup.26, label %if.end, !dbg !10324

if.end:                                           ; preds = %entry
  %2 = bitcast %struct.winsize* %w to i8*, !dbg !10325
  call void @llvm.lifetime.start(i64 8, i8* %2) #3, !dbg !10325
  call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !3082, metadata !3839), !dbg !10321
  %3 = load i32, i32* %fd, align 4, !dbg !10326, !tbaa !3890
  call void @llvm.dbg.value(metadata %struct.winsize* %w, i64 0, metadata !3083, metadata !3839), !dbg !10328
  %call2 = call i32 (i32, i64, ...) @ioctl(i32 %3, i64 21523, %struct.winsize* nonnull %w) #3, !dbg !10329
  %tobool3 = icmp eq i32 %call2, 0, !dbg !10329
  br i1 %tobool3, label %cleanup.cont, label %cleanup, !dbg !10330

cleanup:                                          ; preds = %if.end
  %4 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !10331, !tbaa !3870
  %call5 = call %struct._object* @PyErr_SetFromErrno(%struct._object* %4) #3, !dbg !10332
  call void @llvm.lifetime.end(i64 8, i8* %2) #3, !dbg !10333
  br label %cleanup.26

cleanup.cont:                                     ; preds = %if.end
  %ws_col = getelementptr inbounds %struct.winsize, %struct.winsize* %w, i64 0, i32 1, !dbg !10335
  %5 = load i16, i16* %ws_col, align 2, !dbg !10335, !tbaa !10336
  %ws_row = getelementptr inbounds %struct.winsize, %struct.winsize* %w, i64 0, i32 0, !dbg !10339
  %6 = load i16, i16* %ws_row, align 2, !dbg !10339, !tbaa !10340
  call void @llvm.lifetime.end(i64 8, i8* %2) #3, !dbg !10333
  %call8 = call %struct._object* @PyStructSequence_New(%struct._typeobject* nonnull @TerminalSizeType) #3, !dbg !10341
  call void @llvm.dbg.value(metadata %struct._object* %call8, i64 0, metadata !3081, metadata !3839), !dbg !10342
  %cmp = icmp eq %struct._object* %call8, null, !dbg !10343
  br i1 %cmp, label %cleanup.26, label %if.end.11, !dbg !10345

if.end.11:                                        ; preds = %cleanup.cont
  %phitmp40 = zext i16 %6 to i64, !dbg !10346
  %phitmp = zext i16 %5 to i64, !dbg !10346
  %call13 = call %struct._object* @PyLong_FromLong(i64 %phitmp) #3, !dbg !10347
  %ob_item = getelementptr inbounds %struct._object, %struct._object* %call8, i64 1, i32 1, !dbg !10347
  %arrayidx = bitcast %struct._typeobject** %ob_item to %struct._object**, !dbg !10347
  store %struct._object* %call13, %struct._object** %arrayidx, align 8, !dbg !10347, !tbaa !3870
  %call15 = call %struct._object* @PyLong_FromLong(i64 %phitmp40) #3, !dbg !10348
  %arrayidx17 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 1, !dbg !10348
  %7 = bitcast %struct._typeobject** %arrayidx17 to %struct._object**, !dbg !10348
  store %struct._object* %call15, %struct._object** %7, align 8, !dbg !10348, !tbaa !3870
  %call18 = call %struct._object* @PyErr_Occurred() #3, !dbg !10349
  %tobool19 = icmp eq %struct._object* %call18, null, !dbg !10349
  br i1 %tobool19, label %cleanup.26, label %do.body, !dbg !10350

do.body:                                          ; preds = %if.end.11
  call void @llvm.dbg.value(metadata %struct._object* %call8, i64 0, metadata !3092, metadata !3839), !dbg !10351
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call8, i64 0, i32 0, !dbg !10353
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !10353, !tbaa !3930
  %dec = add i64 %8, -1, !dbg !10353
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10353, !tbaa !3930
  %cmp21 = icmp eq i64 %dec, 0, !dbg !10353
  br i1 %cmp21, label %if.else, label %cleanup.26, !dbg !10355

if.else:                                          ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call8, i64 0, i32 1, !dbg !10356
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10356, !tbaa !3875
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i64 0, i32 4, !dbg !10356
  %10 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10356, !tbaa !3934
  call void %10(%struct._object* %call8) #3, !dbg !10356
  br label %cleanup.26

cleanup.26:                                       ; preds = %cleanup, %if.end.11, %if.else, %do.body, %cleanup.cont, %entry
  %retval.1 = phi %struct._object* [ %call5, %cleanup ], [ null, %entry ], [ null, %cleanup.cont ], [ null, %do.body ], [ null, %if.else ], [ %call8, %if.end.11 ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !10358
  ret %struct._object* %retval.1, !dbg !10358
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_cpu_count(%struct._object* nocapture readnone %self) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !3098, metadata !3839), !dbg !10359
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !3099, metadata !3839), !dbg !10360
  %call = tail call i64 @sysconf(i32 84) #3, !dbg !10361
  %conv = trunc i64 %call to i32, !dbg !10361
  tail call void @llvm.dbg.value(metadata i32 %conv, i64 0, metadata !3099, metadata !3839), !dbg !10360
  %cmp = icmp sgt i32 %conv, 0, !dbg !10362
  br i1 %cmp, label %if.then, label %if.else, !dbg !10364

if.then:                                          ; preds = %entry
  %sext = shl i64 %call, 32, !dbg !10365
  %conv2 = ashr exact i64 %sext, 32, !dbg !10365
  %call3 = tail call %struct._object* @PyLong_FromLong(i64 %conv2) #3, !dbg !10366
  br label %cleanup, !dbg !10367

if.else:                                          ; preds = %entry
  %0 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !10368, !tbaa !3930
  %inc = add i64 %0, 1, !dbg !10368
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !10368, !tbaa !3930
  br label %cleanup, !dbg !10368

cleanup:                                          ; preds = %if.else, %if.then
  %retval.0 = phi %struct._object* [ %call3, %if.then ], [ @_Py_NoneStruct, %if.else ]
  ret %struct._object* %retval.0, !dbg !10369
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_get_inheritable(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %fd = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !3102, metadata !3839), !dbg !10370
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !3103, metadata !3839), !dbg !10371
  %0 = bitcast i32* %fd to i8*, !dbg !10372
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !10372
  tail call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !3104, metadata !3839), !dbg !10373
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.540, i64 0, i64 0), i32* nonnull %fd) #3, !dbg !10374
  %tobool = icmp eq i32 %call, 0, !dbg !10374
  br i1 %tobool, label %cleanup, label %if.end, !dbg !10376

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !3104, metadata !3839), !dbg !10373
  %1 = load i32, i32* %fd, align 4, !dbg !10377, !tbaa !3890
  %call1 = call i32 @_Py_get_inheritable(i32 %1) #3, !dbg !10378
  call void @llvm.dbg.value(metadata i32 %call1, i64 0, metadata !3105, metadata !3839), !dbg !10379
  %cmp = icmp slt i32 %call1, 0, !dbg !10380
  br i1 %cmp, label %cleanup, label %if.end.3, !dbg !10382

if.end.3:                                         ; preds = %if.end
  %conv = sext i32 %call1 to i64, !dbg !10383
  %call4 = call %struct._object* @PyBool_FromLong(i64 %conv) #3, !dbg !10384
  br label %cleanup, !dbg !10385

cleanup:                                          ; preds = %if.end, %entry, %if.end.3
  %retval.0 = phi %struct._object* [ %call4, %if.end.3 ], [ null, %entry ], [ null, %if.end ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !10386
  ret %struct._object* %retval.0, !dbg !10386
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @posix_set_inheritable(%struct._object* nocapture readnone %self, %struct._object* %args) #0 {
entry:
  %fd = alloca i32, align 4
  %inheritable = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %self, i64 0, metadata !3108, metadata !3839), !dbg !10387
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !3109, metadata !3839), !dbg !10388
  %0 = bitcast i32* %fd to i8*, !dbg !10389
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !10389
  %1 = bitcast i32* %inheritable to i8*, !dbg !10389
  call void @llvm.lifetime.start(i64 4, i8* %1) #3, !dbg !10389
  tail call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !3110, metadata !3839), !dbg !10390
  tail call void @llvm.dbg.value(metadata i32* %inheritable, i64 0, metadata !3111, metadata !3839), !dbg !10391
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %args, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.541, i64 0, i64 0), i32* nonnull %fd, i32* nonnull %inheritable) #3, !dbg !10392
  %tobool = icmp eq i32 %call, 0, !dbg !10392
  br i1 %tobool, label %cleanup, label %if.end, !dbg !10394

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %fd, i64 0, metadata !3110, metadata !3839), !dbg !10390
  %2 = load i32, i32* %fd, align 4, !dbg !10395, !tbaa !3890
  call void @llvm.dbg.value(metadata i32* %inheritable, i64 0, metadata !3111, metadata !3839), !dbg !10391
  %3 = load i32, i32* %inheritable, align 4, !dbg !10397, !tbaa !3890
  %call1 = call i32 @_Py_set_inheritable(i32 %2, i32 %3, i32* null) #3, !dbg !10398
  %cmp = icmp slt i32 %call1, 0, !dbg !10399
  br i1 %cmp, label %cleanup, label %if.end.3, !dbg !10400

if.end.3:                                         ; preds = %if.end
  %4 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !10401, !tbaa !3930
  %inc = add i64 %4, 1, !dbg !10401
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !10401, !tbaa !3930
  br label %cleanup, !dbg !10401

cleanup:                                          ; preds = %if.end, %entry, %if.end.3
  %retval.0 = phi %struct._object* [ @_Py_NoneStruct, %if.end.3 ], [ null, %entry ], [ null, %if.end ]
  call void @llvm.lifetime.end(i64 4, i8* %1) #3, !dbg !10402
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !10402
  ret %struct._object* %retval.0, !dbg !10402
}

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #3

declare i32 @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object*, %struct._object*, i8*, i8**, ...) #2

; Function Attrs: nounwind uwtable
define internal i32 @path_converter(%struct._object* %o, i8* %p) #0 {
entry:
  %bytes = alloca %struct._object*, align 8
  %fd43 = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %o, i64 0, metadata !782, metadata !3839), !dbg !10403
  tail call void @llvm.dbg.value(metadata i8* %p, i64 0, metadata !783, metadata !3839), !dbg !10404
  %0 = bitcast %struct._object** %bytes to i8*, !dbg !10405
  call void @llvm.lifetime.start(i64 8, i8* %0) #3, !dbg !10405
  %cmp = icmp eq %struct._object* %o, null, !dbg !10406
  %cleanup.i = getelementptr inbounds i8, i8* %p, i64 64, !dbg !10408
  %1 = bitcast i8* %cleanup.i to %struct._object**, !dbg !10408
  br i1 %cmp, label %if.then, label %if.end, !dbg !10411

if.then:                                          ; preds = %entry
  %2 = load %struct._object*, %struct._object** %1, align 8, !dbg !10408, !tbaa !4634
  %tobool.i = icmp eq %struct._object* %2, null, !dbg !10412
  br i1 %tobool.i, label %cleanup.123, label %if.then.2.i, !dbg !10413

if.then.2.i:                                      ; preds = %if.then
  tail call void @llvm.dbg.value(metadata %struct._object* %2, i64 0, metadata !1055, metadata !3839) #3, !dbg !10414
  store %struct._object* null, %struct._object** %1, align 8, !dbg !10415, !tbaa !4634
  tail call void @llvm.dbg.value(metadata %struct._object* %2, i64 0, metadata !1059, metadata !3839) #3, !dbg !10416
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %2, i64 0, i32 0, !dbg !10417
  %3 = load i64, i64* %ob_refcnt.i, align 8, !dbg !10417, !tbaa !3930
  %dec.i = add i64 %3, -1, !dbg !10417
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !10417, !tbaa !3930
  %cmp5.i = icmp eq i64 %dec.i, 0, !dbg !10417
  br i1 %cmp5.i, label %if.else.i, label %cleanup.123, !dbg !10418

if.else.i:                                        ; preds = %if.then.2.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %2, i64 0, i32 1, !dbg !10419
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !10419, !tbaa !3875
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i64 0, i32 4, !dbg !10419
  %5 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !10419, !tbaa !3934
  tail call void %5(%struct._object* %2) #3, !dbg !10419
  br label %cleanup.123, !dbg !10420

if.end:                                           ; preds = %entry
  store %struct._object* null, %struct._object** %1, align 8, !dbg !10421, !tbaa !4634
  %cmp1 = icmp eq %struct._object* %o, @_Py_NoneStruct, !dbg !10422
  br i1 %cmp1, label %if.then.2, label %if.end.18, !dbg !10424

if.then.2:                                        ; preds = %if.end
  %nullable = getelementptr inbounds i8, i8* %p, i64 16, !dbg !10425
  %6 = bitcast i8* %nullable to i32*, !dbg !10425
  %7 = load i32, i32* %6, align 4, !dbg !10425, !tbaa !5311
  %tobool = icmp eq i32 %7, 0, !dbg !10428
  br i1 %tobool, label %if.then.3, label %if.end.15, !dbg !10429

if.then.3:                                        ; preds = %if.then.2
  %8 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !10430, !tbaa !3870
  %function_name = bitcast i8* %p to i8**, !dbg !10430
  %9 = load i8*, i8** %function_name, align 8, !dbg !10430, !tbaa !4743
  %tobool4 = icmp eq i8* %9, null, !dbg !10430
  %. = select i1 %tobool4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.21, i64 0, i64 0), i8* %9, !dbg !10430
  %tobool7 = icmp ne i8* %9, null, !dbg !10432
  %cond8 = select i1 %tobool7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.174, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.21, i64 0, i64 0), !dbg !10432
  %argument_name = getelementptr inbounds i8, i8* %p, i64 8, !dbg !10432
  %10 = bitcast i8* %argument_name to i8**, !dbg !10432
  %11 = load i8*, i8** %10, align 8, !dbg !10432, !tbaa !10435
  %tobool9 = icmp eq i8* %11, null, !dbg !10432
  %cond14 = select i1 %tobool9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.169, i64 0, i64 0), i8* %11, !dbg !10432
  %call = tail call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %8, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.173, i64 0, i64 0), i8* %., i8* %cond8, i8* %cond14) #3, !dbg !10436
  br label %cleanup.123, !dbg !10439

if.end.15:                                        ; preds = %if.then.2
  %wide = getelementptr inbounds i8, i8* %p, i64 24, !dbg !10440
  %length17 = getelementptr inbounds i8, i8* %p, i64 48, !dbg !10441
  %12 = bitcast i8* %length17 to i64*, !dbg !10441
  store i64 0, i64* %12, align 8, !dbg !10442, !tbaa !10443
  %object = getelementptr inbounds i8, i8* %p, i64 56, !dbg !10444
  %13 = bitcast i8* %object to %struct._object**, !dbg !10444
  call void @llvm.memset.p0i8.i64(i8* %wide, i8 0, i64 16, i32 8, i1 false), !dbg !10445
  store %struct._object* @_Py_NoneStruct, %struct._object** %13, align 8, !dbg !10446, !tbaa !4767
  %fd = getelementptr inbounds i8, i8* %p, i64 40, !dbg !10447
  %14 = bitcast i8* %fd to i32*, !dbg !10447
  store i32 -1, i32* %14, align 4, !dbg !10448, !tbaa !4754
  br label %cleanup.123, !dbg !10449

if.end.18:                                        ; preds = %if.end
  %call19 = tail call %struct._object* @PyUnicode_FromObject(%struct._object* %o) #3, !dbg !10450
  tail call void @llvm.dbg.value(metadata %struct._object* %call19, i64 0, metadata !785, metadata !3839), !dbg !10451
  %tobool20 = icmp eq %struct._object* %call19, null, !dbg !10452
  br i1 %tobool20, label %if.else.29, label %if.then.21, !dbg !10453

if.then.21:                                       ; preds = %if.end.18
  %call22 = call i32 @PyUnicode_FSConverter(%struct._object* %call19, i8* %0) #3, !dbg !10454
  call void @llvm.dbg.value(metadata i32 %call22, i64 0, metadata !789, metadata !3839), !dbg !10455
  call void @llvm.dbg.value(metadata %struct._object* %call19, i64 0, metadata !792, metadata !3839), !dbg !10456
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call19, i64 0, i32 0, !dbg !10458
  %15 = load i64, i64* %ob_refcnt, align 8, !dbg !10458, !tbaa !3930
  %dec = add i64 %15, -1, !dbg !10458
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10458, !tbaa !3930
  %cmp23 = icmp eq i64 %dec, 0, !dbg !10458
  br i1 %cmp23, label %if.else, label %if.end.25, !dbg !10460

if.else:                                          ; preds = %if.then.21
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call19, i64 0, i32 1, !dbg !10461
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10461, !tbaa !3875
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %16, i64 0, i32 4, !dbg !10461
  %17 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10461, !tbaa !3934
  call void %17(%struct._object* %call19) #3, !dbg !10461
  br label %if.end.25

if.end.25:                                        ; preds = %if.then.21, %if.else
  %tobool26 = icmp eq i32 %call22, 0, !dbg !10463
  br i1 %tobool26, label %if.end.57.thread, label %if.end.57, !dbg !10465

if.end.57.thread:                                 ; preds = %if.end.25
  call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !786, metadata !3839), !dbg !10466
  store %struct._object* null, %struct._object** %bytes, align 8, !dbg !10467, !tbaa !3870
  call void @llvm.dbg.value(metadata %struct._object** %bytes, i64 0, metadata !786, metadata !3839), !dbg !10466
  br label %if.then.59, !dbg !10468

if.else.29:                                       ; preds = %if.end.18
  tail call void @PyErr_Clear() #3, !dbg !10469
  %ob_type30 = getelementptr inbounds %struct._object, %struct._object* %o, i64 0, i32 1, !dbg !10470
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type30, align 8, !dbg !10470, !tbaa !3875
  %tp_as_buffer = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i64 0, i32 18, !dbg !10470
  %19 = load %struct.PyBufferProcs*, %struct.PyBufferProcs** %tp_as_buffer, align 8, !dbg !10470, !tbaa !10472
  %cmp31 = icmp eq %struct.PyBufferProcs* %19, null, !dbg !10470
  br i1 %cmp31, label %if.end.38.thread, label %land.lhs.true, !dbg !10470

land.lhs.true:                                    ; preds = %if.else.29
  %bf_getbuffer = getelementptr inbounds %struct.PyBufferProcs, %struct.PyBufferProcs* %19, i64 0, i32 0, !dbg !10473
  %20 = load i32 (%struct._object*, %struct.bufferinfo*, i32)*, i32 (%struct._object*, %struct.bufferinfo*, i32)** %bf_getbuffer, align 8, !dbg !10473, !tbaa !10475
  %cmp34 = icmp eq i32 (%struct._object*, %struct.bufferinfo*, i32)* %20, null, !dbg !10473
  br i1 %cmp34, label %if.end.38.thread, label %if.end.38, !dbg !10477

if.end.38.thread:                                 ; preds = %land.lhs.true, %if.else.29
  store %struct._object* null, %struct._object** %bytes, align 8, !dbg !10478, !tbaa !3870
  tail call void @llvm.dbg.value(metadata %struct._object** %bytes, i64 0, metadata !786, metadata !3839), !dbg !10466
  br label %if.then.40, !dbg !10479

if.end.38:                                        ; preds = %land.lhs.true
  %call36 = tail call %struct._object* @PyBytes_FromObject(%struct._object* %o) #3, !dbg !10480
  tail call void @llvm.dbg.value(metadata %struct._object* %call36, i64 0, metadata !786, metadata !3839), !dbg !10466
  store %struct._object* %call36, %struct._object** %bytes, align 8, !dbg !10478, !tbaa !3870
  tail call void @llvm.dbg.value(metadata %struct._object** %bytes, i64 0, metadata !786, metadata !3839), !dbg !10466
  %tobool39 = icmp eq %struct._object* %call36, null, !dbg !10481
  br i1 %tobool39, label %if.then.40, label %if.end.82, !dbg !10479

if.then.40:                                       ; preds = %if.end.38.thread, %if.end.38
  tail call void @PyErr_Clear() #3, !dbg !10482
  %allow_fd = getelementptr inbounds i8, i8* %p, i64 20, !dbg !10483
  %21 = bitcast i8* %allow_fd to i32*, !dbg !10483
  %22 = load i32, i32* %21, align 4, !dbg !10483, !tbaa !4746
  %tobool41 = icmp eq i32 %22, 0, !dbg !10484
  br i1 %tobool41, label %if.end.57, label %if.then.42, !dbg !10485

if.then.42:                                       ; preds = %if.then.40
  %23 = bitcast i32* %fd43 to i8*, !dbg !10486
  call void @llvm.lifetime.start(i64 4, i8* %23) #3, !dbg !10486
  tail call void @llvm.dbg.value(metadata i32* %fd43, i64 0, metadata !794, metadata !3839), !dbg !10487
  %call44 = call fastcc i32 @_fd_converter(%struct._object* %o, i32* nonnull %fd43, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.175, i64 0, i64 0)), !dbg !10488
  tail call void @llvm.dbg.value(metadata i32 %call44, i64 0, metadata !800, metadata !3839), !dbg !10489
  %tobool45 = icmp eq i32 %call44, 0, !dbg !10490
  br i1 %tobool45, label %cleanup.53, label %if.then.46, !dbg !10492

if.then.46:                                       ; preds = %if.then.42
  %wide47 = getelementptr inbounds i8, i8* %p, i64 24, !dbg !10493
  %length49 = getelementptr inbounds i8, i8* %p, i64 48, !dbg !10495
  %24 = bitcast i8* %length49 to i64*, !dbg !10495
  store i64 0, i64* %24, align 8, !dbg !10496, !tbaa !10443
  %object50 = getelementptr inbounds i8, i8* %p, i64 56, !dbg !10497
  %25 = bitcast i8* %object50 to %struct._object**, !dbg !10497
  call void @llvm.memset.p0i8.i64(i8* %wide47, i8 0, i64 16, i32 8, i1 false), !dbg !10498
  store %struct._object* %o, %struct._object** %25, align 8, !dbg !10499, !tbaa !4767
  tail call void @llvm.dbg.value(metadata i32* %fd43, i64 0, metadata !794, metadata !3839), !dbg !10487
  %26 = load i32, i32* %fd43, align 4, !dbg !10500, !tbaa !3890
  %fd51 = getelementptr inbounds i8, i8* %p, i64 40, !dbg !10501
  %27 = bitcast i8* %fd51 to i32*, !dbg !10501
  store i32 %26, i32* %27, align 4, !dbg !10502, !tbaa !4754
  call void @llvm.lifetime.end(i64 4, i8* %23) #3, !dbg !10503
  br label %cleanup.123

cleanup.53:                                       ; preds = %if.then.42
  call void @llvm.lifetime.end(i64 4, i8* %23) #3, !dbg !10503
  br label %if.end.57

if.end.57:                                        ; preds = %cleanup.53, %if.end.25, %if.then.40
  %.pr = load %struct._object*, %struct._object** %bytes, align 8, !dbg !10505, !tbaa !3870
  call void @llvm.dbg.value(metadata %struct._object** %bytes, i64 0, metadata !786, metadata !3839), !dbg !10466
  %tobool58 = icmp eq %struct._object* %.pr, null, !dbg !10505
  br i1 %tobool58, label %if.then.59, label %if.end.82, !dbg !10468

if.then.59:                                       ; preds = %if.end.57.thread, %if.end.57
  %call60 = call %struct._object* @PyErr_Occurred() #3, !dbg !10507
  %tobool61 = icmp eq %struct._object* %call60, null, !dbg !10507
  br i1 %tobool61, label %if.then.62, label %cleanup.123, !dbg !10510

if.then.62:                                       ; preds = %if.then.59
  %28 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !10511, !tbaa !3870
  %function_name63 = bitcast i8* %p to i8**, !dbg !10511
  %29 = load i8*, i8** %function_name63, align 8, !dbg !10511, !tbaa !4743
  %tobool64 = icmp eq i8* %29, null, !dbg !10511
  %.188 = select i1 %tobool64, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.21, i64 0, i64 0), i8* %29, !dbg !10511
  %tobool71 = icmp ne i8* %29, null, !dbg !10512
  %cond72 = select i1 %tobool71, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.174, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.21, i64 0, i64 0), !dbg !10512
  %argument_name73 = getelementptr inbounds i8, i8* %p, i64 8, !dbg !10512
  %30 = bitcast i8* %argument_name73 to i8**, !dbg !10512
  %31 = load i8*, i8** %30, align 8, !dbg !10512, !tbaa !10435
  %tobool74 = icmp eq i8* %31, null, !dbg !10512
  %cond79 = select i1 %tobool74, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.169, i64 0, i64 0), i8* %31, !dbg !10512
  %call80 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %28, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.176, i64 0, i64 0), i8* %.188, i8* %cond72, i8* %cond79) #3, !dbg !10515
  br label %cleanup.123, !dbg !10515

if.end.82:                                        ; preds = %if.end.38, %if.end.57
  %.in = phi %struct._object* [ %.pr, %if.end.57 ], [ %call36, %if.end.38 ]
  %32 = getelementptr inbounds %struct._object, %struct._object* %.in, i64 1, i32 0, !dbg !10518
  %33 = load i64, i64* %32, align 8, !dbg !10518, !tbaa !6607
  call void @llvm.dbg.value(metadata i64 %33, i64 0, metadata !787, metadata !3839), !dbg !10519
  %ob_sval = getelementptr inbounds %struct._object, %struct._object* %.in, i64 2, !dbg !10520
  %arraydecay = bitcast %struct._object* %ob_sval to i8*, !dbg !10520
  call void @llvm.dbg.value(metadata i8* %arraydecay, i64 0, metadata !788, metadata !3839), !dbg !10521
  %call83 = call i64 @strlen(i8* %arraydecay) #11, !dbg !10522
  %cmp84 = icmp eq i64 %33, %call83, !dbg !10523
  br i1 %cmp84, label %if.end.116, label %if.then.85, !dbg !10524

if.then.85:                                       ; preds = %if.end.82
  %34 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10525, !tbaa !3870
  %function_name86 = bitcast i8* %p to i8**, !dbg !10525
  %35 = load i8*, i8** %function_name86, align 8, !dbg !10525, !tbaa !4743
  %tobool87 = icmp eq i8* %35, null, !dbg !10525
  %.189 = select i1 %tobool87, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.21, i64 0, i64 0), i8* %35, !dbg !10525
  %tobool94 = icmp ne i8* %35, null, !dbg !10526
  %cond95 = select i1 %tobool94, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.174, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.21, i64 0, i64 0), !dbg !10526
  %argument_name96 = getelementptr inbounds i8, i8* %p, i64 8, !dbg !10526
  %36 = bitcast i8* %argument_name96 to i8**, !dbg !10526
  %37 = load i8*, i8** %36, align 8, !dbg !10526, !tbaa !10435
  %tobool97 = icmp eq i8* %37, null, !dbg !10526
  %cond102 = select i1 %tobool97, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.169, i64 0, i64 0), i8* %37, !dbg !10526
  %call103 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %34, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.177, i64 0, i64 0), i8* %.189, i8* %cond95, i8* %cond102) #3, !dbg !10529
  call void @llvm.dbg.value(metadata %struct._object** %bytes, i64 0, metadata !786, metadata !3839), !dbg !10466
  %38 = load %struct._object*, %struct._object** %bytes, align 8, !dbg !10532, !tbaa !3870
  call void @llvm.dbg.value(metadata %struct._object* %38, i64 0, metadata !801, metadata !3839), !dbg !10532
  %ob_refcnt106 = getelementptr inbounds %struct._object, %struct._object* %38, i64 0, i32 0, !dbg !10534
  %39 = load i64, i64* %ob_refcnt106, align 8, !dbg !10534, !tbaa !3930
  %dec107 = add i64 %39, -1, !dbg !10534
  store i64 %dec107, i64* %ob_refcnt106, align 8, !dbg !10534, !tbaa !3930
  %cmp108 = icmp eq i64 %dec107, 0, !dbg !10534
  br i1 %cmp108, label %if.else.110, label %cleanup.123, !dbg !10536

if.else.110:                                      ; preds = %if.then.85
  %ob_type111 = getelementptr inbounds %struct._object, %struct._object* %38, i64 0, i32 1, !dbg !10537
  %40 = load %struct._typeobject*, %struct._typeobject** %ob_type111, align 8, !dbg !10537, !tbaa !3875
  %tp_dealloc112 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %40, i64 0, i32 4, !dbg !10537
  %41 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc112, align 8, !dbg !10537, !tbaa !3934
  call void %41(%struct._object* %38) #3, !dbg !10537
  br label %cleanup.123

if.end.116:                                       ; preds = %if.end.82
  %42 = ptrtoint %struct._object* %.in to i64, !dbg !10539
  %wide117 = getelementptr inbounds i8, i8* %p, i64 24, !dbg !10540
  %43 = bitcast i8* %wide117 to i32**, !dbg !10540
  store i32* null, i32** %43, align 8, !dbg !10541, !tbaa !5241
  %narrow118 = getelementptr inbounds i8, i8* %p, i64 32, !dbg !10542
  %44 = bitcast i8* %narrow118 to %struct._object**, !dbg !10543
  store %struct._object* %ob_sval, %struct._object** %44, align 8, !dbg !10543, !tbaa !4761
  %length119 = getelementptr inbounds i8, i8* %p, i64 48, !dbg !10544
  %45 = bitcast i8* %length119 to i64*, !dbg !10544
  store i64 %33, i64* %45, align 8, !dbg !10545, !tbaa !10443
  %object120 = getelementptr inbounds i8, i8* %p, i64 56, !dbg !10546
  %46 = bitcast i8* %object120 to %struct._object**, !dbg !10546
  store %struct._object* %o, %struct._object** %46, align 8, !dbg !10547, !tbaa !4767
  %fd121 = getelementptr inbounds i8, i8* %p, i64 40, !dbg !10548
  %47 = bitcast i8* %fd121 to i32*, !dbg !10548
  store i32 -1, i32* %47, align 4, !dbg !10549, !tbaa !4754
  call void @llvm.dbg.value(metadata %struct._object** %bytes, i64 0, metadata !786, metadata !3839), !dbg !10466
  %48 = bitcast i8* %cleanup.i to i64*, !dbg !10550
  store i64 %42, i64* %48, align 8, !dbg !10550, !tbaa !4634
  br label %cleanup.123, !dbg !10551

cleanup.123:                                      ; preds = %if.else.i, %if.then.2.i, %if.then, %if.else.110, %if.then.85, %if.then.62, %if.then.59, %if.then.46, %if.end.116, %if.end.15, %if.then.3
  %retval.1 = phi i32 [ 1, %if.end.15 ], [ 0, %if.then.3 ], [ 131072, %if.end.116 ], [ %call44, %if.then.46 ], [ 0, %if.then.59 ], [ 0, %if.then.62 ], [ 0, %if.then.85 ], [ 0, %if.else.110 ], [ 1, %if.then ], [ 1, %if.then.2.i ], [ 1, %if.else.i ]
  call void @llvm.lifetime.end(i64 8, i8* %0) #3, !dbg !10552
  ret i32 %retval.1, !dbg !10552
}

declare %struct._object* @PyUnicode_FromObject(%struct._object*) #2

declare i32 @PyUnicode_FSConverter(%struct._object*, i8*) #2

declare void @PyErr_Clear() #2

declare %struct._object* @PyBytes_FromObject(%struct._object*) #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @_fd_converter(%struct._object* %o, i32* nocapture %p, i8* %allowed) #0 {
entry:
  %overflow = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._object* %o, i64 0, metadata !809, metadata !3839), !dbg !10553
  tail call void @llvm.dbg.value(metadata i32* %p, i64 0, metadata !810, metadata !3839), !dbg !10554
  tail call void @llvm.dbg.value(metadata i8* %allowed, i64 0, metadata !811, metadata !3839), !dbg !10555
  %0 = bitcast i32* %overflow to i8*, !dbg !10556
  call void @llvm.lifetime.start(i64 4, i8* %0) #3, !dbg !10556
  %call = tail call %struct._object* @PyNumber_Index(%struct._object* %o) #3, !dbg !10557
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !814, metadata !3839), !dbg !10558
  %cmp = icmp eq %struct._object* %call, null, !dbg !10559
  br i1 %cmp, label %if.then, label %if.end, !dbg !10561

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !10562, !tbaa !3870
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %o, i64 0, i32 1, !dbg !10564
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10564, !tbaa !3875
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i64 0, i32 1, !dbg !10565
  %3 = load i8*, i8** %tp_name, align 8, !dbg !10565, !tbaa !3879
  %call1 = tail call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.178, i64 0, i64 0), i8* %allowed, i8* %3) #3, !dbg !10566
  br label %cleanup, !dbg !10567

if.end:                                           ; preds = %entry
  tail call void @llvm.dbg.value(metadata i32* %overflow, i64 0, metadata !812, metadata !3839), !dbg !10568
  %call2 = call i64 @PyLong_AsLongAndOverflow(%struct._object* %call, i32* nonnull %overflow) #3, !dbg !10569
  call void @llvm.dbg.value(metadata i64 %call2, i64 0, metadata !813, metadata !3839), !dbg !10570
  call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !815, metadata !3839), !dbg !10571
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 0, !dbg !10573
  %4 = load i64, i64* %ob_refcnt, align 8, !dbg !10573, !tbaa !3930
  %dec = add i64 %4, -1, !dbg !10573
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10573, !tbaa !3930
  %cmp3 = icmp eq i64 %dec, 0, !dbg !10573
  br i1 %cmp3, label %if.else, label %if.end.6, !dbg !10575

if.else:                                          ; preds = %if.end
  %ob_type5 = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 1, !dbg !10576
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type5, align 8, !dbg !10576, !tbaa !3875
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i64 0, i32 4, !dbg !10576
  %6 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10576, !tbaa !3934
  call void %6(%struct._object* %call) #3, !dbg !10576
  br label %if.end.6

if.end.6:                                         ; preds = %if.end, %if.else
  call void @llvm.dbg.value(metadata i32* %overflow, i64 0, metadata !812, metadata !3839), !dbg !10568
  %7 = load i32, i32* %overflow, align 4, !dbg !10578, !tbaa !3890
  %cmp7 = icmp sgt i32 %7, 0, !dbg !10580
  %cmp8 = icmp sgt i64 %call2, 2147483647, !dbg !10581
  %or.cond = or i1 %cmp8, %cmp7, !dbg !10582
  br i1 %or.cond, label %if.then.9, label %if.end.10, !dbg !10582

if.then.9:                                        ; preds = %if.end.6
  %8 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8, !dbg !10583, !tbaa !3870
  call void @PyErr_SetString(%struct._object* %8, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.179, i64 0, i64 0)) #3, !dbg !10585
  br label %cleanup, !dbg !10586

if.end.10:                                        ; preds = %if.end.6
  %cmp11 = icmp slt i32 %7, 0, !dbg !10587
  %cmp13 = icmp slt i64 %call2, -2147483648, !dbg !10589
  %or.cond18 = or i1 %cmp13, %cmp11, !dbg !10590
  br i1 %or.cond18, label %if.then.14, label %if.end.15, !dbg !10590

if.then.14:                                       ; preds = %if.end.10
  %9 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8, !dbg !10591, !tbaa !3870
  call void @PyErr_SetString(%struct._object* %9, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.180, i64 0, i64 0)) #3, !dbg !10593
  br label %cleanup, !dbg !10594

if.end.15:                                        ; preds = %if.end.10
  %conv = trunc i64 %call2 to i32, !dbg !10595
  store i32 %conv, i32* %p, align 4, !dbg !10596, !tbaa !3890
  br label %cleanup, !dbg !10597

cleanup:                                          ; preds = %if.end.15, %if.then.14, %if.then.9, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 0, %if.then.9 ], [ 0, %if.then.14 ], [ 1, %if.end.15 ]
  call void @llvm.lifetime.end(i64 4, i8* %0) #3, !dbg !10598
  ret i32 %retval.0, !dbg !10598
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct._object* @posix_do_stat(%struct.path_t* nocapture readonly %path, i32 %dir_fd, i32 %follow_symlinks) #0 {
entry:
  %st = alloca %struct.stat, align 8
  tail call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !829, metadata !3839), !dbg !10599
  %0 = bitcast %struct.stat* %st to i8*, !dbg !10600
  call void @llvm.lifetime.start(i64 144, i8* %0) #3, !dbg !10600
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i64 0, i64 0), i64 0, metadata !932, metadata !3839) #3, !dbg !10601
  tail call void @llvm.dbg.value(metadata %struct.path_t* %path, i64 0, metadata !933, metadata !3839) #3, !dbg !10604
  tail call void @llvm.dbg.value(metadata i32 %dir_fd, i64 0, metadata !934, metadata !3839) #3, !dbg !10605
  %narrow.i = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 5, !dbg !10606
  %1 = load i8*, i8** %narrow.i, align 8, !dbg !10606, !tbaa !4761
  %tobool.i = icmp eq i8* %1, null, !dbg !10607
  br i1 %tobool.i, label %land.lhs.true.i, label %lor.lhs.false, !dbg !10608

land.lhs.true.i:                                  ; preds = %entry
  %wide.i = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 4, !dbg !10609
  %2 = load i32*, i32** %wide.i, align 8, !dbg !10609, !tbaa !5241
  %tobool1.i = icmp eq i32* %2, null, !dbg !10610
  %cmp.i = icmp ne i32 %dir_fd, -100, !dbg !10611
  %or.cond.i = and i1 %cmp.i, %tobool1.i, !dbg !10612
  br i1 %or.cond.i, label %path_and_dir_fd_invalid.exit, label %lor.lhs.false, !dbg !10612

path_and_dir_fd_invalid.exit:                     ; preds = %land.lhs.true.i
  %3 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10613, !tbaa !3870
  %call.i = tail call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %3, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.181, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i64 0, i64 0)) #3, !dbg !10614
  br label %cleanup, !dbg !10615

lor.lhs.false:                                    ; preds = %entry, %land.lhs.true.i
  %fd = getelementptr inbounds %struct.path_t, %struct.path_t* %path, i64 0, i32 6, !dbg !10616
  %4 = load i32, i32* %fd, align 4, !dbg !10617, !tbaa !4754
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i64 0, i64 0), i64 0, metadata !939, metadata !3839) #3, !dbg !10618
  tail call void @llvm.dbg.value(metadata i32 %dir_fd, i64 0, metadata !940, metadata !3839) #3, !dbg !10620
  tail call void @llvm.dbg.value(metadata i32 %4, i64 0, metadata !941, metadata !3839) #3, !dbg !10621
  %cmp.i.1 = icmp ne i32 %dir_fd, -100, !dbg !10622
  %cmp1.i = icmp ne i32 %4, -1, !dbg !10623
  %or.cond.i.2 = and i1 %cmp.i.1, %cmp1.i, !dbg !10624
  br i1 %or.cond.i.2, label %dir_fd_and_fd_invalid.exit, label %lor.lhs.false.3, !dbg !10624

dir_fd_and_fd_invalid.exit:                       ; preds = %lor.lhs.false
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10625, !tbaa !3870
  %call.i.3 = tail call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %5, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.182, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i64 0, i64 0)) #3, !dbg !10626
  br label %cleanup, !dbg !10627

lor.lhs.false.3:                                  ; preds = %lor.lhs.false
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i64 0, i64 0), i64 0, metadata !944, metadata !3839) #3, !dbg !10628
  tail call void @llvm.dbg.value(metadata i32 %4, i64 0, metadata !945, metadata !3839) #3, !dbg !10630
  tail call void @llvm.dbg.value(metadata i32 %follow_symlinks, i64 0, metadata !946, metadata !3839) #3, !dbg !10631
  %cmp.i.6 = icmp slt i32 %4, 1, !dbg !10632
  %tobool.i.7 = icmp ne i32 %follow_symlinks, 0, !dbg !10633
  %or.cond.i.8 = or i1 %tobool.i.7, %cmp.i.6, !dbg !10634
  br i1 %or.cond.i.8, label %if.end, label %fd_and_follow_symlinks_invalid.exit, !dbg !10634

fd_and_follow_symlinks_invalid.exit:              ; preds = %lor.lhs.false.3
  %6 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10635, !tbaa !3870
  %call.i.9 = tail call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %6, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.183, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i64 0, i64 0)) #3, !dbg !10636
  br label %cleanup, !dbg !10637

if.end:                                           ; preds = %lor.lhs.false.3
  %call7 = tail call %struct._ts* @PyEval_SaveThread() #3, !dbg !10638
  tail call void @llvm.dbg.value(metadata %struct._ts* %call7, i64 0, metadata !868, metadata !3839), !dbg !10638
  %7 = load i32, i32* %fd, align 4, !dbg !10639, !tbaa !4754
  %cmp = icmp eq i32 %7, -1, !dbg !10641
  br i1 %cmp, label %if.else, label %if.then.9, !dbg !10642

if.then.9:                                        ; preds = %if.end
  tail call void @llvm.dbg.value(metadata %struct.stat* %st, i64 0, metadata !833, metadata !3839), !dbg !10643
  %8 = bitcast %struct.stat* %st to %struct.stat64*, !dbg !10644
  tail call void @llvm.dbg.value(metadata i32 %7, i64 0, metadata !972, metadata !3839) #3, !dbg !10645
  tail call void @llvm.dbg.value(metadata %struct.stat64* %8, i64 0, metadata !973, metadata !3839) #3, !dbg !10645
  %call.i.12 = call i32 @__fxstat64(i32 1, i32 %7, %struct.stat64* nonnull %8) #3, !dbg !10647
  call void @llvm.dbg.value(metadata i32 %call.i.12, i64 0, metadata !867, metadata !3839), !dbg !10648
  br label %if.end.29, !dbg !10649

if.else:                                          ; preds = %if.end
  %tobool12 = icmp eq i32 %follow_symlinks, 0, !dbg !10650
  %cmp13 = icmp eq i32 %dir_fd, -100, !dbg !10652
  %or.cond = and i1 %cmp13, %tobool12, !dbg !10653
  br i1 %or.cond, label %if.then.14, label %if.else.16, !dbg !10653

if.then.14:                                       ; preds = %if.else
  %9 = load i8*, i8** %narrow.i, align 8, !dbg !10654, !tbaa !4761
  tail call void @llvm.dbg.value(metadata %struct.stat* %st, i64 0, metadata !833, metadata !3839), !dbg !10643
  %10 = bitcast %struct.stat* %st to %struct.stat64*, !dbg !10655
  tail call void @llvm.dbg.value(metadata i8* %9, i64 0, metadata !978, metadata !3839) #3, !dbg !10656
  tail call void @llvm.dbg.value(metadata %struct.stat64* %10, i64 0, metadata !979, metadata !3839) #3, !dbg !10656
  %call.i.13 = call i32 @__lxstat64(i32 1, i8* nonnull %9, %struct.stat64* nonnull %10) #3, !dbg !10658
  call void @llvm.dbg.value(metadata i32 %call.i.13, i64 0, metadata !867, metadata !3839), !dbg !10648
  br label %if.end.29, !dbg !10659

if.else.16:                                       ; preds = %if.else
  %or.cond36 = and i1 %cmp13, %tobool.i.7, !dbg !10660
  %11 = load i8*, i8** %narrow.i, align 8, !dbg !10662, !tbaa !4761
  br i1 %or.cond36, label %if.else.24, label %if.then.20, !dbg !10660

if.then.20:                                       ; preds = %if.else.16
  %cond = select i1 %tobool.i.7, i32 0, i32 256, !dbg !10663
  tail call void @llvm.dbg.value(metadata %struct.stat* %st, i64 0, metadata !833, metadata !3839), !dbg !10643
  %12 = bitcast %struct.stat* %st to %struct.stat64*, !dbg !10664
  tail call void @llvm.dbg.value(metadata i32 %dir_fd, i64 0, metadata !984, metadata !3839) #3, !dbg !10665
  tail call void @llvm.dbg.value(metadata i8* %11, i64 0, metadata !985, metadata !3839) #3, !dbg !10665
  tail call void @llvm.dbg.value(metadata %struct.stat64* %12, i64 0, metadata !986, metadata !3839) #3, !dbg !10665
  tail call void @llvm.dbg.value(metadata i32 %cond, i64 0, metadata !987, metadata !3839) #3, !dbg !10665
  %call.i.14 = call i32 @__fxstatat64(i32 1, i32 %dir_fd, i8* nonnull %11, %struct.stat64* nonnull %12, i32 %cond) #3, !dbg !10667
  call void @llvm.dbg.value(metadata i32 %call.i.14, i64 0, metadata !867, metadata !3839), !dbg !10648
  br label %if.end.29, !dbg !10668

if.else.24:                                       ; preds = %if.else.16
  tail call void @llvm.dbg.value(metadata %struct.stat* %st, i64 0, metadata !833, metadata !3839), !dbg !10643
  %13 = bitcast %struct.stat* %st to %struct.stat64*, !dbg !10669
  tail call void @llvm.dbg.value(metadata i8* %11, i64 0, metadata !990, metadata !3839) #3, !dbg !10670
  tail call void @llvm.dbg.value(metadata %struct.stat64* %13, i64 0, metadata !991, metadata !3839) #3, !dbg !10670
  %call.i.15 = call i32 @__xstat64(i32 1, i8* nonnull %11, %struct.stat64* nonnull %13) #3, !dbg !10672
  call void @llvm.dbg.value(metadata i32 %call.i.15, i64 0, metadata !867, metadata !3839), !dbg !10648
  br label %if.end.29

if.end.29:                                        ; preds = %if.then.14, %if.else.24, %if.then.20, %if.then.9
  %result.0 = phi i32 [ %call.i.12, %if.then.9 ], [ %call.i.13, %if.then.14 ], [ %call.i.15, %if.else.24 ], [ %call.i.14, %if.then.20 ]
  call void @PyEval_RestoreThread(%struct._ts* %call7) #3, !dbg !10673
  %cmp30 = icmp eq i32 %result.0, 0, !dbg !10674
  br i1 %cmp30, label %if.end.33, label %if.then.31, !dbg !10676

if.then.31:                                       ; preds = %if.end.29
  %path.idx = getelementptr %struct.path_t, %struct.path_t* %path, i64 0, i32 8
  %path.idx.val = load %struct._object*, %struct._object** %path.idx, align 8, !tbaa !4767
  %14 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !10677, !tbaa !3870
  %call.i.16 = call %struct._object* @PyErr_SetFromErrnoWithFilenameObject(%struct._object* %14, %struct._object* %path.idx.val) #3, !dbg !10680
  br label %cleanup, !dbg !10681

if.end.33:                                        ; preds = %if.end.29
  call void @llvm.dbg.value(metadata %struct.stat* %st, i64 0, metadata !833, metadata !3839), !dbg !10643
  %call34 = call fastcc %struct._object* @_pystat_fromstructstat(%struct.stat* nonnull %st), !dbg !10682
  br label %cleanup, !dbg !10683

cleanup:                                          ; preds = %fd_and_follow_symlinks_invalid.exit, %dir_fd_and_fd_invalid.exit, %path_and_dir_fd_invalid.exit, %if.end.33, %if.then.31
  %retval.0 = phi %struct._object* [ %call.i.16, %if.then.31 ], [ %call34, %if.end.33 ], [ null, %fd_and_follow_symlinks_invalid.exit ], [ null, %dir_fd_and_fd_invalid.exit ], [ null, %path_and_dir_fd_invalid.exit ]
  call void @llvm.lifetime.end(i64 144, i8* %0) #3, !dbg !10684
  ret %struct._object* %retval.0, !dbg !10684
}

declare %struct._ts* @PyEval_SaveThread() #2

declare void @PyEval_RestoreThread(%struct._ts*) #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct._object* @_pystat_fromstructstat(%struct.stat* nocapture readonly %st) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.stat* %st, i64 0, metadata !1002, metadata !3839), !dbg !10685
  %call = tail call %struct._object* @PyStructSequence_New(%struct._typeobject* nonnull @StatResultType) #3, !dbg !10686
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1006, metadata !3839), !dbg !10687
  %cmp = icmp eq %struct._object* %call, null, !dbg !10688
  br i1 %cmp, label %cleanup, label %if.end, !dbg !10690

if.end:                                           ; preds = %entry
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i64 0, i32 3, !dbg !10691
  %0 = load i32, i32* %st_mode, align 4, !dbg !10691, !tbaa !10692
  %conv = zext i32 %0 to i64, !dbg !10691
  %call1 = tail call %struct._object* @PyLong_FromLong(i64 %conv) #3, !dbg !10691
  %ob_item = getelementptr inbounds %struct._object, %struct._object* %call, i64 1, i32 1, !dbg !10691
  %arrayidx = bitcast %struct._typeobject** %ob_item to %struct._object**, !dbg !10691
  store %struct._object* %call1, %struct._object** %arrayidx, align 8, !dbg !10691, !tbaa !3870
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %st, i64 0, i32 1, !dbg !10694
  %1 = load i64, i64* %st_ino, align 8, !dbg !10694, !tbaa !10695
  %call2 = tail call %struct._object* @PyLong_FromLong(i64 %1) #3, !dbg !10694
  %arrayidx4 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 1, !dbg !10694
  %2 = bitcast %struct._typeobject** %arrayidx4 to %struct._object**, !dbg !10694
  store %struct._object* %call2, %struct._object** %2, align 8, !dbg !10694, !tbaa !3870
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %st, i64 0, i32 0, !dbg !10696
  %3 = load i64, i64* %st_dev, align 8, !dbg !10696, !tbaa !10697
  %call5 = tail call %struct._object* @PyLong_FromLongLong(i64 %3) #3, !dbg !10696
  %arrayidx7 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 2, !dbg !10696
  %4 = bitcast %struct._typeobject** %arrayidx7 to %struct._object**, !dbg !10696
  store %struct._object* %call5, %struct._object** %4, align 8, !dbg !10696, !tbaa !3870
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %st, i64 0, i32 2, !dbg !10698
  %5 = load i64, i64* %st_nlink, align 8, !dbg !10698, !tbaa !10699
  %call8 = tail call %struct._object* @PyLong_FromLong(i64 %5) #3, !dbg !10698
  %arrayidx10 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 3, !dbg !10698
  %6 = bitcast %struct._typeobject** %arrayidx10 to %struct._object**, !dbg !10698
  store %struct._object* %call8, %struct._object** %6, align 8, !dbg !10698, !tbaa !3870
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %st, i64 0, i32 4, !dbg !10700
  %7 = load i32, i32* %st_uid, align 4, !dbg !10700, !tbaa !10701
  tail call void @llvm.dbg.value(metadata i32 %7, i64 0, metadata !693, metadata !3839) #3, !dbg !10702
  %cmp.i = icmp eq i32 %7, -1, !dbg !10704
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !10705

if.then.i:                                        ; preds = %if.end
  %call.i = tail call %struct._object* @PyLong_FromLong(i64 -1) #3, !dbg !10706
  br label %_PyLong_FromUid.exit, !dbg !10707

if.end.i:                                         ; preds = %if.end
  %conv.i = zext i32 %7 to i64, !dbg !10708
  %call1.i = tail call %struct._object* @PyLong_FromUnsignedLong(i64 %conv.i) #3, !dbg !10709
  br label %_PyLong_FromUid.exit, !dbg !10710

_PyLong_FromUid.exit:                             ; preds = %if.then.i, %if.end.i
  %retval.0.i = phi %struct._object* [ %call.i, %if.then.i ], [ %call1.i, %if.end.i ], !dbg !10700
  %arrayidx13 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 4, !dbg !10700
  %8 = bitcast %struct._typeobject** %arrayidx13 to %struct._object**, !dbg !10700
  store %struct._object* %retval.0.i, %struct._object** %8, align 8, !dbg !10700, !tbaa !3870
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %st, i64 0, i32 5, !dbg !10711
  %9 = load i32, i32* %st_gid, align 4, !dbg !10711, !tbaa !10712
  tail call void @llvm.dbg.value(metadata i32 %9, i64 0, metadata !698, metadata !3839) #3, !dbg !10713
  %cmp.i.83 = icmp eq i32 %9, -1, !dbg !10715
  br i1 %cmp.i.83, label %if.then.i.85, label %if.end.i.88, !dbg !10716

if.then.i.85:                                     ; preds = %_PyLong_FromUid.exit
  %call.i.84 = tail call %struct._object* @PyLong_FromLong(i64 -1) #3, !dbg !10717
  br label %_PyLong_FromGid.exit, !dbg !10718

if.end.i.88:                                      ; preds = %_PyLong_FromUid.exit
  %conv.i.86 = zext i32 %9 to i64, !dbg !10719
  %call1.i.87 = tail call %struct._object* @PyLong_FromUnsignedLong(i64 %conv.i.86) #3, !dbg !10720
  br label %_PyLong_FromGid.exit, !dbg !10721

_PyLong_FromGid.exit:                             ; preds = %if.then.i.85, %if.end.i.88
  %retval.0.i.89 = phi %struct._object* [ %call.i.84, %if.then.i.85 ], [ %call1.i.87, %if.end.i.88 ], !dbg !10711
  %arrayidx16 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 5, !dbg !10711
  %10 = bitcast %struct._typeobject** %arrayidx16 to %struct._object**, !dbg !10711
  store %struct._object* %retval.0.i.89, %struct._object** %10, align 8, !dbg !10711, !tbaa !3870
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %st, i64 0, i32 8, !dbg !10722
  %11 = load i64, i64* %st_size, align 8, !dbg !10722, !tbaa !10723
  %call17 = tail call %struct._object* @PyLong_FromLong(i64 %11) #3, !dbg !10722
  %arrayidx19 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 6, !dbg !10722
  %12 = bitcast %struct._typeobject** %arrayidx19 to %struct._object**, !dbg !10722
  store %struct._object* %call17, %struct._object** %12, align 8, !dbg !10722, !tbaa !3870
  %tv_nsec = getelementptr inbounds %struct.stat, %struct.stat* %st, i64 0, i32 11, i32 1, !dbg !10724
  %13 = load i64, i64* %tv_nsec, align 8, !dbg !10724, !tbaa !10725
  tail call void @llvm.dbg.value(metadata i64 %13, i64 0, metadata !1003, metadata !3839), !dbg !10726
  %tv_nsec20 = getelementptr inbounds %struct.stat, %struct.stat* %st, i64 0, i32 12, i32 1, !dbg !10727
  %14 = load i64, i64* %tv_nsec20, align 8, !dbg !10727, !tbaa !10728
  tail call void @llvm.dbg.value(metadata i64 %14, i64 0, metadata !1004, metadata !3839), !dbg !10729
  %tv_nsec21 = getelementptr inbounds %struct.stat, %struct.stat* %st, i64 0, i32 13, i32 1, !dbg !10730
  %15 = load i64, i64* %tv_nsec21, align 8, !dbg !10730, !tbaa !10731
  tail call void @llvm.dbg.value(metadata i64 %15, i64 0, metadata !1005, metadata !3839), !dbg !10732
  %tv_sec = getelementptr inbounds %struct.stat, %struct.stat* %st, i64 0, i32 11, i32 0, !dbg !10733
  %16 = load i64, i64* %tv_sec, align 8, !dbg !10733, !tbaa !10734
  tail call fastcc void @fill_time(%struct._object* %call, i32 7, i64 %16, i64 %13), !dbg !10735
  %tv_sec24 = getelementptr inbounds %struct.stat, %struct.stat* %st, i64 0, i32 12, i32 0, !dbg !10736
  %17 = load i64, i64* %tv_sec24, align 8, !dbg !10736, !tbaa !10737
  tail call fastcc void @fill_time(%struct._object* %call, i32 8, i64 %17, i64 %14), !dbg !10738
  %tv_sec26 = getelementptr inbounds %struct.stat, %struct.stat* %st, i64 0, i32 13, i32 0, !dbg !10739
  %18 = load i64, i64* %tv_sec26, align 8, !dbg !10739, !tbaa !10740
  tail call fastcc void @fill_time(%struct._object* %call, i32 9, i64 %18, i64 %15), !dbg !10741
  %st_blksize = getelementptr inbounds %struct.stat, %struct.stat* %st, i64 0, i32 9, !dbg !10742
  %19 = load i64, i64* %st_blksize, align 8, !dbg !10742, !tbaa !10743
  %call27 = tail call %struct._object* @PyLong_FromLong(i64 %19) #3, !dbg !10742
  %arrayidx29 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 16, !dbg !10742
  %20 = bitcast %struct._typeobject** %arrayidx29 to %struct._object**, !dbg !10742
  store %struct._object* %call27, %struct._object** %20, align 8, !dbg !10742, !tbaa !3870
  %st_blocks = getelementptr inbounds %struct.stat, %struct.stat* %st, i64 0, i32 10, !dbg !10744
  %21 = load i64, i64* %st_blocks, align 8, !dbg !10744, !tbaa !10745
  %call30 = tail call %struct._object* @PyLong_FromLong(i64 %21) #3, !dbg !10744
  %arrayidx32 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 17, !dbg !10744
  %22 = bitcast %struct._typeobject** %arrayidx32 to %struct._object**, !dbg !10744
  store %struct._object* %call30, %struct._object** %22, align 8, !dbg !10744, !tbaa !3870
  %st_rdev = getelementptr inbounds %struct.stat, %struct.stat* %st, i64 0, i32 7, !dbg !10746
  %23 = load i64, i64* %st_rdev, align 8, !dbg !10746, !tbaa !10747
  %call33 = tail call %struct._object* @PyLong_FromLong(i64 %23) #3, !dbg !10746
  %arrayidx35 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 18, !dbg !10746
  %24 = bitcast %struct._typeobject** %arrayidx35 to %struct._object**, !dbg !10746
  store %struct._object* %call33, %struct._object** %24, align 8, !dbg !10746, !tbaa !3870
  %call36 = tail call %struct._object* @PyErr_Occurred() #3, !dbg !10748
  %tobool = icmp eq %struct._object* %call36, null, !dbg !10748
  br i1 %tobool, label %cleanup, label %do.body, !dbg !10749

do.body:                                          ; preds = %_PyLong_FromGid.exit
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1007, metadata !3839), !dbg !10750
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 0, !dbg !10752
  %25 = load i64, i64* %ob_refcnt, align 8, !dbg !10752, !tbaa !3930
  %dec = add i64 %25, -1, !dbg !10752
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10752, !tbaa !3930
  %cmp38 = icmp eq i64 %dec, 0, !dbg !10752
  br i1 %cmp38, label %if.else, label %cleanup, !dbg !10754

if.else:                                          ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 1, !dbg !10755
  %26 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10755, !tbaa !3875
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %26, i64 0, i32 4, !dbg !10755
  %27 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10755, !tbaa !3934
  tail call void %27(%struct._object* %call) #3, !dbg !10755
  br label %cleanup

cleanup:                                          ; preds = %_PyLong_FromGid.exit, %if.else, %do.body, %entry
  %retval.0 = phi %struct._object* [ null, %entry ], [ null, %do.body ], [ null, %if.else ], [ %call, %_PyLong_FromGid.exit ]
  ret %struct._object* %retval.0, !dbg !10757
}

; Function Attrs: nounwind
declare i32 @__fxstat64(i32, i32, %struct.stat64*) #4

; Function Attrs: nounwind
declare i32 @__lxstat64(i32, i8*, %struct.stat64*) #4

; Function Attrs: nounwind
declare i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) #4

; Function Attrs: nounwind
declare i32 @__xstat64(i32, i8*, %struct.stat64*) #4

declare %struct._object* @PyErr_SetFromErrnoWithFilenameObject(%struct._object*, %struct._object*) #2

declare %struct._object* @PyStructSequence_New(%struct._typeobject*) #2

declare %struct._object* @PyLong_FromLongLong(i64) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @fill_time(%struct._object* nocapture %v, i32 %index, i64 %sec, i64 %nsec) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %v, i64 0, metadata !1016, metadata !3839), !dbg !10758
  tail call void @llvm.dbg.value(metadata i32 %index, i64 0, metadata !1017, metadata !3839), !dbg !10759
  tail call void @llvm.dbg.value(metadata i64 %sec, i64 0, metadata !1018, metadata !3839), !dbg !10760
  tail call void @llvm.dbg.value(metadata i64 %nsec, i64 0, metadata !1019, metadata !3839), !dbg !10761
  %call = tail call %struct._object* @_PyLong_FromTime_t(i64 %sec) #3, !dbg !10762
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1020, metadata !3839), !dbg !10763
  %call1 = tail call %struct._object* @PyLong_FromUnsignedLong(i64 %nsec) #3, !dbg !10764
  tail call void @llvm.dbg.value(metadata %struct._object* %call1, i64 0, metadata !1021, metadata !3839), !dbg !10765
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1022, metadata !3839), !dbg !10766
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1023, metadata !3839), !dbg !10767
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1024, metadata !3839), !dbg !10768
  %tobool = icmp ne %struct._object* %call, null, !dbg !10769
  %tobool2 = icmp ne %struct._object* %call1, null, !dbg !10771
  %or.cond = and i1 %tobool, %tobool2, !dbg !10773
  br i1 %or.cond, label %if.end, label %do.body, !dbg !10773

if.end:                                           ; preds = %entry
  %0 = load %struct._object*, %struct._object** @billion, align 8, !dbg !10774, !tbaa !3870
  %call3 = tail call %struct._object* @PyNumber_Multiply(%struct._object* %call, %struct._object* %0) #3, !dbg !10775
  tail call void @llvm.dbg.value(metadata %struct._object* %call3, i64 0, metadata !1022, metadata !3839), !dbg !10766
  %tobool4 = icmp eq %struct._object* %call3, null, !dbg !10776
  br i1 %tobool4, label %do.body, label %if.end.6, !dbg !10778

if.end.6:                                         ; preds = %if.end
  %call7 = tail call %struct._object* @PyNumber_Add(%struct._object* %call3, %struct._object* %call1) #3, !dbg !10779
  tail call void @llvm.dbg.value(metadata %struct._object* %call7, i64 0, metadata !1023, metadata !3839), !dbg !10767
  %tobool8 = icmp eq %struct._object* %call7, null, !dbg !10780
  br i1 %tobool8, label %do.body, label %if.end.10, !dbg !10782

if.end.10:                                        ; preds = %if.end.6
  %1 = load i32, i32* @_stat_float_times, align 4, !dbg !10783, !tbaa !3890
  %tobool11 = icmp eq i32 %1, 0, !dbg !10783
  br i1 %tobool11, label %if.else, label %if.then.12, !dbg !10785

if.then.12:                                       ; preds = %if.end.10
  %conv = sitofp i64 %sec to double, !dbg !10786
  %conv13 = uitofp i64 %nsec to double, !dbg !10788
  %mul = fmul double %conv13, 1.000000e-09, !dbg !10789
  %add = fadd double %conv, %mul, !dbg !10790
  %call14 = tail call %struct._object* @PyFloat_FromDouble(double %add) #3, !dbg !10791
  tail call void @llvm.dbg.value(metadata %struct._object* %call14, i64 0, metadata !1024, metadata !3839), !dbg !10768
  %tobool15 = icmp eq %struct._object* %call14, null, !dbg !10792
  br i1 %tobool15, label %do.body, label %do.body.thread, !dbg !10794

if.else:                                          ; preds = %if.end.10
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1024, metadata !3839), !dbg !10768
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 0, !dbg !10795
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !10795, !tbaa !3930
  %inc = add i64 %2, 1, !dbg !10795
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !10795, !tbaa !3930
  br label %do.body.thread

do.body.thread:                                   ; preds = %if.else, %if.then.12
  %float_s.0 = phi %struct._object* [ %call14, %if.then.12 ], [ %call, %if.else ]
  %idxprom = sext i32 %index to i64, !dbg !10797
  %ob_item = getelementptr inbounds %struct._object, %struct._object* %v, i64 1, i32 1, !dbg !10797
  %3 = bitcast %struct._typeobject** %ob_item to [1 x %struct._object*]*, !dbg !10797
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %3, i64 0, i64 %idxprom, !dbg !10797
  store %struct._object* %call, %struct._object** %arrayidx, align 8, !dbg !10797, !tbaa !3870
  %add19 = add i32 %index, 3, !dbg !10798
  %idxprom20 = sext i32 %add19 to i64, !dbg !10798
  %arrayidx22 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %3, i64 0, i64 %idxprom20, !dbg !10798
  store %struct._object* %float_s.0, %struct._object** %arrayidx22, align 8, !dbg !10798, !tbaa !3870
  %add23 = add i32 %index, 6, !dbg !10799
  %idxprom24 = sext i32 %add23 to i64, !dbg !10799
  %arrayidx26 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %3, i64 0, i64 %idxprom24, !dbg !10799
  store %struct._object* %call7, %struct._object** %arrayidx26, align 8, !dbg !10799, !tbaa !3870
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1020, metadata !3839), !dbg !10763
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1024, metadata !3839), !dbg !10768
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1023, metadata !3839), !dbg !10767
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1025, metadata !3839), !dbg !10800
  br label %if.end.36, !dbg !10802

do.body:                                          ; preds = %if.then.12, %if.end.6, %if.end, %entry
  %ns_total.0 = phi %struct._object* [ %call7, %if.then.12 ], [ null, %if.end.6 ], [ null, %if.end ], [ null, %entry ]
  %s_in_ns.0 = phi %struct._object* [ %call3, %if.then.12 ], [ %call3, %if.end.6 ], [ null, %if.end ], [ null, %entry ]
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1025, metadata !3839), !dbg !10800
  %cmp = icmp eq %struct._object* %call, null, !dbg !10803
  br i1 %cmp, label %if.end.36, label %do.body.29, !dbg !10802

do.body.29:                                       ; preds = %do.body
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !1027, metadata !3839), !dbg !10804
  %ob_refcnt30 = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 0, !dbg !10806
  %4 = load i64, i64* %ob_refcnt30, align 8, !dbg !10806, !tbaa !3930
  %dec = add i64 %4, -1, !dbg !10806
  store i64 %dec, i64* %ob_refcnt30, align 8, !dbg !10806, !tbaa !3930
  %cmp31 = icmp eq i64 %dec, 0, !dbg !10806
  br i1 %cmp31, label %if.else.34, label %if.end.36, !dbg !10808

if.else.34:                                       ; preds = %do.body.29
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 1, !dbg !10809
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10809, !tbaa !3875
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i64 0, i32 4, !dbg !10809
  %6 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10809, !tbaa !3934
  tail call void %6(%struct._object* %call) #3, !dbg !10809
  br label %if.end.36

if.end.36:                                        ; preds = %do.body.thread, %if.else.34, %do.body.29, %do.body
  %s_in_ns.0175 = phi %struct._object* [ %call3, %do.body.thread ], [ %s_in_ns.0, %if.else.34 ], [ %s_in_ns.0, %do.body.29 ], [ %s_in_ns.0, %do.body ]
  %ns_total.0174 = phi %struct._object* [ null, %do.body.thread ], [ %ns_total.0, %if.else.34 ], [ %ns_total.0, %do.body.29 ], [ %ns_total.0, %do.body ]
  tail call void @llvm.dbg.value(metadata %struct._object* %call1, i64 0, metadata !1030, metadata !3839), !dbg !10811
  br i1 %tobool2, label %do.body.44, label %if.end.57, !dbg !10813

do.body.44:                                       ; preds = %if.end.36
  tail call void @llvm.dbg.value(metadata %struct._object* %call1, i64 0, metadata !1032, metadata !3839), !dbg !10814
  %ob_refcnt46 = getelementptr inbounds %struct._object, %struct._object* %call1, i64 0, i32 0, !dbg !10816
  %7 = load i64, i64* %ob_refcnt46, align 8, !dbg !10816, !tbaa !3930
  %dec47 = add i64 %7, -1, !dbg !10816
  store i64 %dec47, i64* %ob_refcnt46, align 8, !dbg !10816, !tbaa !3930
  %cmp48 = icmp eq i64 %dec47, 0, !dbg !10816
  br i1 %cmp48, label %if.else.51, label %if.end.57, !dbg !10818

if.else.51:                                       ; preds = %do.body.44
  %ob_type52 = getelementptr inbounds %struct._object, %struct._object* %call1, i64 0, i32 1, !dbg !10819
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type52, align 8, !dbg !10819, !tbaa !3875
  %tp_dealloc53 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i64 0, i32 4, !dbg !10819
  %9 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc53, align 8, !dbg !10819, !tbaa !3934
  tail call void %9(%struct._object* %call1) #3, !dbg !10819
  br label %if.end.57

if.end.57:                                        ; preds = %if.else.51, %do.body.44, %if.end.36
  tail call void @llvm.dbg.value(metadata %struct._object* %s_in_ns.0, i64 0, metadata !1035, metadata !3839), !dbg !10821
  %cmp62 = icmp eq %struct._object* %s_in_ns.0175, null, !dbg !10823
  br i1 %cmp62, label %if.end.78, label %do.body.65, !dbg !10824

do.body.65:                                       ; preds = %if.end.57
  tail call void @llvm.dbg.value(metadata %struct._object* %s_in_ns.0, i64 0, metadata !1037, metadata !3839), !dbg !10825
  %ob_refcnt67 = getelementptr inbounds %struct._object, %struct._object* %s_in_ns.0175, i64 0, i32 0, !dbg !10827
  %10 = load i64, i64* %ob_refcnt67, align 8, !dbg !10827, !tbaa !3930
  %dec68 = add i64 %10, -1, !dbg !10827
  store i64 %dec68, i64* %ob_refcnt67, align 8, !dbg !10827, !tbaa !3930
  %cmp69 = icmp eq i64 %dec68, 0, !dbg !10827
  br i1 %cmp69, label %if.else.72, label %if.end.78, !dbg !10829

if.else.72:                                       ; preds = %do.body.65
  %ob_type73 = getelementptr inbounds %struct._object, %struct._object* %s_in_ns.0175, i64 0, i32 1, !dbg !10830
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type73, align 8, !dbg !10830, !tbaa !3875
  %tp_dealloc74 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i64 0, i32 4, !dbg !10830
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc74, align 8, !dbg !10830, !tbaa !3934
  tail call void %12(%struct._object* %s_in_ns.0175) #3, !dbg !10830
  br label %if.end.78

if.end.78:                                        ; preds = %if.else.72, %do.body.65, %if.end.57
  tail call void @llvm.dbg.value(metadata %struct._object* %ns_total.0, i64 0, metadata !1040, metadata !3839), !dbg !10832
  %cmp83 = icmp eq %struct._object* %ns_total.0174, null, !dbg !10834
  br i1 %cmp83, label %if.end.120, label %do.body.86, !dbg !10835

do.body.86:                                       ; preds = %if.end.78
  tail call void @llvm.dbg.value(metadata %struct._object* %ns_total.0, i64 0, metadata !1042, metadata !3839), !dbg !10836
  %ob_refcnt88 = getelementptr inbounds %struct._object, %struct._object* %ns_total.0174, i64 0, i32 0, !dbg !10838
  %13 = load i64, i64* %ob_refcnt88, align 8, !dbg !10838, !tbaa !3930
  %dec89 = add i64 %13, -1, !dbg !10838
  store i64 %dec89, i64* %ob_refcnt88, align 8, !dbg !10838, !tbaa !3930
  %cmp90 = icmp eq i64 %dec89, 0, !dbg !10838
  br i1 %cmp90, label %if.else.93, label %if.end.120, !dbg !10840

if.else.93:                                       ; preds = %do.body.86
  %ob_type94 = getelementptr inbounds %struct._object, %struct._object* %ns_total.0174, i64 0, i32 1, !dbg !10841
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type94, align 8, !dbg !10841, !tbaa !3875
  %tp_dealloc95 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i64 0, i32 4, !dbg !10841
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc95, align 8, !dbg !10841, !tbaa !3934
  tail call void %15(%struct._object* %ns_total.0174) #3, !dbg !10841
  br label %if.end.120

if.end.120:                                       ; preds = %if.end.78, %do.body.86, %if.else.93
  ret void, !dbg !10843
}

declare %struct._object* @_PyLong_FromTime_t(i64) #2

declare %struct._object* @PyNumber_Multiply(%struct._object*, %struct._object*) #2

declare %struct._object* @PyNumber_Add(%struct._object*, %struct._object*) #2

declare %struct._object* @PyFloat_FromDouble(double) #2

; Function Attrs: nounwind
declare i32 @faccessat(i32, i8*, i32, i32) #4

; Function Attrs: nounwind
declare i32 @access(i8* nocapture readonly, i32) #4

declare %struct._object* @PyBool_FromLong(i64) #2

declare i32 @_PyArg_ParseTuple_SizeT(%struct._object*, i8*, ...) #2

declare %struct._object* @PyUnicode_DecodeFSDefault(i8*) #2

; Function Attrs: nounwind
declare i8* @ttyname(i32) #4

declare %struct._object* @PyErr_SetFromErrno(%struct._object*) #2

; Function Attrs: nounwind
declare i32 @fchdir(i32) #4

; Function Attrs: nounwind
declare i32 @chdir(i8*) #4

; Function Attrs: nounwind
declare i32 @fchmod(i32, i32) #4

; Function Attrs: nounwind
declare i32 @fchmodat(i32, i8*, i32, i32) #4

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #7

; Function Attrs: nounwind
declare i32 @chmod(i8* nocapture readonly, i32) #4

; Function Attrs: nounwind
declare i32 @fchown(i32, i32, i32) #4

; Function Attrs: nounwind
declare i32 @lchown(i8* nocapture readonly, i32, i32) #4

; Function Attrs: nounwind
declare i32 @fchownat(i32, i8*, i32, i32, i32) #4

; Function Attrs: nounwind
declare i32 @chown(i8* nocapture readonly, i32, i32) #4

; Function Attrs: nounwind
declare i32 @chroot(i8*) #4

; Function Attrs: nounwind
declare i8* @ctermid(i8* nocapture) #4

; Function Attrs: nounwind
declare i8* @getcwd(i8*, i64) #4

declare %struct._object* @PyBytes_FromStringAndSize(i8*, i64) #2

; Function Attrs: nounwind
declare i32 @linkat(i32, i8*, i32, i8*, i32) #4

; Function Attrs: nounwind
declare i32 @link(i8*, i8*) #4

declare %struct._object* @PyErr_SetFromErrnoWithFilenameObjects(%struct._object*, %struct._object*, %struct._object*) #2

declare i32 @_Py_dup(i32) #2

declare %struct.__dirstream* @fdopendir(i32) #2

; Function Attrs: nounwind
declare noalias %struct.__dirstream* @opendir(i8* nocapture readonly) #4

declare i32 @close(i32) #2

declare %struct.dirent* @readdir64(%struct.__dirstream*) #2

declare %struct._object* @PyUnicode_DecodeFSDefaultAndSize(i8*, i64) #2

; Function Attrs: nounwind
declare void @rewinddir(%struct.__dirstream*) #4

; Function Attrs: nounwind
declare i32 @closedir(%struct.__dirstream* nocapture) #4

; Function Attrs: nounwind
declare i32 @mkdirat(i32, i8*, i32) #4

; Function Attrs: nounwind
declare i32 @mkdir(i8* nocapture readonly, i32) #4

; Function Attrs: nounwind
declare i32 @nice(i32) #4

; Function Attrs: nounwind
declare i32 @getpriority(i32, i32) #4

; Function Attrs: nounwind
declare i32 @setpriority(i32, i32, i32) #4

; Function Attrs: nounwind
declare i64 @readlinkat(i32, i8*, i8*, i64) #4

; Function Attrs: nounwind
declare i64 @readlink(i8* nocapture readonly, i8* nocapture, i64) #4

; Function Attrs: nounwind uwtable
define internal fastcc %struct._object* @internal_rename(%struct._object* %args, %struct._object* %kwargs, i32 %is_replace) #0 {
entry:
  %src = alloca %struct.path_t, align 8
  %dst = alloca %struct.path_t, align 8
  %src_dir_fd = alloca i32, align 4
  %dst_dir_fd = alloca i32, align 4
  %format = alloca [24 x i8], align 16
  tail call void @llvm.dbg.value(metadata %struct._object* %args, i64 0, metadata !1391, metadata !3839), !dbg !10844
  tail call void @llvm.dbg.value(metadata %struct._object* %kwargs, i64 0, metadata !1392, metadata !3839), !dbg !10845
  tail call void @llvm.dbg.value(metadata i32 %is_replace, i64 0, metadata !1393, metadata !3839), !dbg !10846
  %tobool = icmp ne i32 %is_replace, 0, !dbg !10847
  %cond = select i1 %tobool, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.46, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i64 0, i64 0), !dbg !10847
  tail call void @llvm.dbg.value(metadata i8* %cond, i64 0, metadata !1394, metadata !3839), !dbg !10848
  %0 = bitcast %struct.path_t* %src to i8*, !dbg !10849
  call void @llvm.lifetime.start(i64 72, i8* %0) #3, !dbg !10849
  %1 = bitcast %struct.path_t* %dst to i8*, !dbg !10850
  call void @llvm.lifetime.start(i64 72, i8* %1) #3, !dbg !10850
  %2 = bitcast i32* %src_dir_fd to i8*, !dbg !10851
  call void @llvm.lifetime.start(i64 4, i8* %2) #3, !dbg !10851
  tail call void @llvm.dbg.value(metadata i32 -100, i64 0, metadata !1397, metadata !3839), !dbg !10852
  store i32 -100, i32* %src_dir_fd, align 4, !dbg !10852, !tbaa !3890
  %3 = bitcast i32* %dst_dir_fd to i8*, !dbg !10853
  call void @llvm.lifetime.start(i64 4, i8* %3) #3, !dbg !10853
  tail call void @llvm.dbg.value(metadata i32 -100, i64 0, metadata !1398, metadata !3839), !dbg !10854
  store i32 -100, i32* %dst_dir_fd, align 4, !dbg !10854, !tbaa !3890
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !1400, metadata !3839), !dbg !10855
  %4 = getelementptr inbounds [24 x i8], [24 x i8]* %format, i64 0, i64 0, !dbg !10856
  call void @llvm.lifetime.start(i64 24, i8* %4) #3, !dbg !10856
  tail call void @llvm.dbg.declare(metadata [24 x i8]* %format, metadata !1401, metadata !3839), !dbg !10857
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 72, i32 8, i1 false), !dbg !10858
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 72, i32 8, i1 false), !dbg !10859
  %function_name1 = getelementptr inbounds %struct.path_t, %struct.path_t* %src, i64 0, i32 0, !dbg !10860
  store i8* %cond, i8** %function_name1, align 8, !dbg !10861, !tbaa !4743
  %function_name2 = getelementptr inbounds %struct.path_t, %struct.path_t* %dst, i64 0, i32 0, !dbg !10862
  store i8* %cond, i8** %function_name2, align 8, !dbg !10863, !tbaa !4743
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.211, i64 0, i64 0), i64 12, i32 1, i1 false), !dbg !10864
  %call4 = call i8* @strcat(i8* %4, i8* %cond) #3, !dbg !10865
  call void @llvm.dbg.value(metadata %struct.path_t* %src, i64 0, metadata !1395, metadata !3839), !dbg !10866
  call void @llvm.dbg.value(metadata %struct.path_t* %dst, i64 0, metadata !1396, metadata !3839), !dbg !10867
  call void @llvm.dbg.value(metadata i32* %src_dir_fd, i64 0, metadata !1397, metadata !3839), !dbg !10852
  call void @llvm.dbg.value(metadata i32* %dst_dir_fd, i64 0, metadata !1398, metadata !3839), !dbg !10854
  %call6 = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %args, %struct._object* %kwargs, i8* %4, i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @internal_rename.keywords, i64 0, i64 0), i32 (%struct._object*, i8*)* nonnull @path_converter, %struct.path_t* nonnull %src, i32 (%struct._object*, i8*)* nonnull @path_converter, %struct.path_t* nonnull %dst, i32 (%struct._object*, i8*)* nonnull @dir_fd_converter, i32* nonnull %src_dir_fd, i32 (%struct._object*, i8*)* nonnull @dir_fd_converter, i32* nonnull %dst_dir_fd) #3, !dbg !10868
  %tobool7 = icmp eq i32 %call6, 0, !dbg !10868
  br i1 %tobool7, label %cleanup, label %if.end, !dbg !10870

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %src_dir_fd, i64 0, metadata !1397, metadata !3839), !dbg !10852
  %5 = load i32, i32* %src_dir_fd, align 4, !dbg !10871, !tbaa !3890
  %cmp = icmp ne i32 %5, -100, !dbg !10872
  call void @llvm.dbg.value(metadata i32* %dst_dir_fd, i64 0, metadata !1398, metadata !3839), !dbg !10854
  %6 = load i32, i32* %dst_dir_fd, align 4, !dbg !10873, !tbaa !3890
  %cmp8 = icmp ne i32 %6, -100, !dbg !10874
  %7 = or i1 %cmp, %cmp8, !dbg !10875
  %narrow = getelementptr inbounds %struct.path_t, %struct.path_t* %src, i64 0, i32 5, !dbg !10876
  %8 = load i8*, i8** %narrow, align 8, !dbg !10876, !tbaa !4761
  %tobool9 = icmp eq i8* %8, null, !dbg !10878
  br i1 %tobool9, label %lor.lhs.false, label %land.lhs.true, !dbg !10879

land.lhs.true:                                    ; preds = %if.end
  %wide = getelementptr inbounds %struct.path_t, %struct.path_t* %dst, i64 0, i32 4, !dbg !10880
  %9 = load i32*, i32** %wide, align 8, !dbg !10880, !tbaa !5241
  %tobool10 = icmp eq i32* %9, null, !dbg !10882
  br i1 %tobool10, label %lor.lhs.false, label %if.then.16, !dbg !10883

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end
  %wide11 = getelementptr inbounds %struct.path_t, %struct.path_t* %src, i64 0, i32 4, !dbg !10884
  %10 = load i32*, i32** %wide11, align 8, !dbg !10884, !tbaa !5241
  %tobool12 = icmp eq i32* %10, null, !dbg !10887
  br i1 %tobool12, label %if.end.18, label %land.lhs.true.13, !dbg !10888

land.lhs.true.13:                                 ; preds = %lor.lhs.false
  %narrow14 = getelementptr inbounds %struct.path_t, %struct.path_t* %dst, i64 0, i32 5, !dbg !10889
  %11 = load i8*, i8** %narrow14, align 8, !dbg !10889, !tbaa !4761
  %tobool15 = icmp eq i8* %11, null, !dbg !10891
  br i1 %tobool15, label %if.end.18, label %if.then.16, !dbg !10892

if.then.16:                                       ; preds = %land.lhs.true, %land.lhs.true.13
  %12 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10893, !tbaa !3870
  %call17 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %12, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.212, i64 0, i64 0), i8* %cond) #3, !dbg !10895
  br label %exit, !dbg !10896

if.end.18:                                        ; preds = %land.lhs.true.13, %lor.lhs.false
  %call19 = call %struct._ts* @PyEval_SaveThread() #3, !dbg !10897
  call void @llvm.dbg.value(metadata %struct._ts* %call19, i64 0, metadata !1406, metadata !3839), !dbg !10897
  br i1 %7, label %if.then.21, label %if.else, !dbg !10898

if.then.21:                                       ; preds = %if.end.18
  call void @llvm.dbg.value(metadata i32* %src_dir_fd, i64 0, metadata !1397, metadata !3839), !dbg !10852
  %13 = load i32, i32* %src_dir_fd, align 4, !dbg !10899, !tbaa !3890
  %14 = load i8*, i8** %narrow, align 8, !dbg !10901, !tbaa !4761
  call void @llvm.dbg.value(metadata i32* %dst_dir_fd, i64 0, metadata !1398, metadata !3839), !dbg !10854
  %15 = load i32, i32* %dst_dir_fd, align 4, !dbg !10902, !tbaa !3890
  %narrow23 = getelementptr inbounds %struct.path_t, %struct.path_t* %dst, i64 0, i32 5, !dbg !10903
  %16 = load i8*, i8** %narrow23, align 8, !dbg !10903, !tbaa !4761
  %call24 = call i32 @renameat(i32 %13, i8* %14, i32 %15, i8* %16) #3, !dbg !10904
  call void @llvm.dbg.value(metadata i32 %call24, i64 0, metadata !1405, metadata !3839), !dbg !10905
  br label %if.end.28, !dbg !10906

if.else:                                          ; preds = %if.end.18
  %17 = load i8*, i8** %narrow, align 8, !dbg !10907, !tbaa !4761
  %narrow26 = getelementptr inbounds %struct.path_t, %struct.path_t* %dst, i64 0, i32 5, !dbg !10908
  %18 = load i8*, i8** %narrow26, align 8, !dbg !10908, !tbaa !4761
  %call27 = call i32 @rename(i8* %17, i8* %18) #3, !dbg !10909
  call void @llvm.dbg.value(metadata i32 %call27, i64 0, metadata !1405, metadata !3839), !dbg !10905
  br label %if.end.28

if.end.28:                                        ; preds = %if.else, %if.then.21
  %result.0 = phi i32 [ %call24, %if.then.21 ], [ %call27, %if.else ]
  call void @PyEval_RestoreThread(%struct._ts* %call19) #3, !dbg !10910
  %tobool29 = icmp eq i32 %result.0, 0, !dbg !10911
  br i1 %tobool29, label %if.end.32, label %if.then.30, !dbg !10913

if.then.30:                                       ; preds = %if.end.28
  call void @llvm.dbg.value(metadata %struct.path_t* %src, i64 0, metadata !1395, metadata !3839), !dbg !10866
  call void @llvm.dbg.value(metadata %struct.path_t* %dst, i64 0, metadata !1396, metadata !3839), !dbg !10867
  %src.idx = getelementptr %struct.path_t, %struct.path_t* %src, i64 0, i32 8
  %src.idx.val = load %struct._object*, %struct._object** %src.idx, align 8, !tbaa !4767
  %dst.idx = getelementptr %struct.path_t, %struct.path_t* %dst, i64 0, i32 8
  %dst.idx.val = load %struct._object*, %struct._object** %dst.idx, align 8, !tbaa !4767
  %19 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !10914, !tbaa !3870
  %call.i = call %struct._object* @PyErr_SetFromErrnoWithFilenameObjects(%struct._object* %19, %struct._object* %src.idx.val, %struct._object* %dst.idx.val) #3, !dbg !10917
  call void @llvm.dbg.value(metadata %struct._object* %call.i, i64 0, metadata !1400, metadata !3839), !dbg !10855
  br label %exit, !dbg !10918

if.end.32:                                        ; preds = %if.end.28
  %20 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !10919, !tbaa !3930
  %inc = add i64 %20, 1, !dbg !10919
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i64 0, i32 0), align 8, !dbg !10919, !tbaa !3930
  call void @llvm.dbg.value(metadata %struct._object* @_Py_NoneStruct, i64 0, metadata !1400, metadata !3839), !dbg !10855
  br label %exit, !dbg !10920

exit:                                             ; preds = %if.end.32, %if.then.30, %if.then.16
  %return_value.0 = phi %struct._object* [ null, %if.then.16 ], [ %call.i, %if.then.30 ], [ @_Py_NoneStruct, %if.end.32 ]
  call void @llvm.dbg.value(metadata %struct.path_t* %src, i64 0, metadata !1395, metadata !3839), !dbg !10866
  call void @llvm.dbg.value(metadata %struct.path_t* %src, i64 0, metadata !1054, metadata !3839) #3, !dbg !10921
  %cleanup.i = getelementptr inbounds %struct.path_t, %struct.path_t* %src, i64 0, i32 9, !dbg !10923
  %21 = load %struct._object*, %struct._object** %cleanup.i, align 8, !dbg !10923, !tbaa !4634
  %tobool.i = icmp eq %struct._object* %21, null, !dbg !10924
  br i1 %tobool.i, label %path_cleanup.exit, label %if.then.2.i, !dbg !10925

if.then.2.i:                                      ; preds = %exit
  call void @llvm.dbg.value(metadata %struct._object* %21, i64 0, metadata !1055, metadata !3839) #3, !dbg !10926
  store %struct._object* null, %struct._object** %cleanup.i, align 8, !dbg !10927, !tbaa !4634
  call void @llvm.dbg.value(metadata %struct._object* %21, i64 0, metadata !1059, metadata !3839) #3, !dbg !10928
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %21, i64 0, i32 0, !dbg !10929
  %22 = load i64, i64* %ob_refcnt.i, align 8, !dbg !10929, !tbaa !3930
  %dec.i = add i64 %22, -1, !dbg !10929
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !10929, !tbaa !3930
  %cmp5.i = icmp eq i64 %dec.i, 0, !dbg !10929
  br i1 %cmp5.i, label %if.else.i, label %path_cleanup.exit, !dbg !10930

if.else.i:                                        ; preds = %if.then.2.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %21, i64 0, i32 1, !dbg !10931
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !10931, !tbaa !3875
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %23, i64 0, i32 4, !dbg !10931
  %24 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !10931, !tbaa !3934
  call void %24(%struct._object* %21) #3, !dbg !10931
  br label %path_cleanup.exit, !dbg !10932

path_cleanup.exit:                                ; preds = %exit, %if.then.2.i, %if.else.i
  call void @llvm.dbg.value(metadata %struct.path_t* %dst, i64 0, metadata !1396, metadata !3839), !dbg !10867
  call void @llvm.dbg.value(metadata %struct.path_t* %dst, i64 0, metadata !1054, metadata !3839) #3, !dbg !10933
  %cleanup.i.49 = getelementptr inbounds %struct.path_t, %struct.path_t* %dst, i64 0, i32 9, !dbg !10935
  %25 = load %struct._object*, %struct._object** %cleanup.i.49, align 8, !dbg !10935, !tbaa !4634
  %tobool.i.50 = icmp eq %struct._object* %25, null, !dbg !10936
  br i1 %tobool.i.50, label %cleanup, label %if.then.2.i.54, !dbg !10937

if.then.2.i.54:                                   ; preds = %path_cleanup.exit
  call void @llvm.dbg.value(metadata %struct._object* %25, i64 0, metadata !1055, metadata !3839) #3, !dbg !10938
  store %struct._object* null, %struct._object** %cleanup.i.49, align 8, !dbg !10939, !tbaa !4634
  call void @llvm.dbg.value(metadata %struct._object* %25, i64 0, metadata !1059, metadata !3839) #3, !dbg !10940
  %ob_refcnt.i.51 = getelementptr inbounds %struct._object, %struct._object* %25, i64 0, i32 0, !dbg !10941
  %26 = load i64, i64* %ob_refcnt.i.51, align 8, !dbg !10941, !tbaa !3930
  %dec.i.52 = add i64 %26, -1, !dbg !10941
  store i64 %dec.i.52, i64* %ob_refcnt.i.51, align 8, !dbg !10941, !tbaa !3930
  %cmp5.i.53 = icmp eq i64 %dec.i.52, 0, !dbg !10941
  br i1 %cmp5.i.53, label %if.else.i.57, label %cleanup, !dbg !10942

if.else.i.57:                                     ; preds = %if.then.2.i.54
  %ob_type.i.55 = getelementptr inbounds %struct._object, %struct._object* %25, i64 0, i32 1, !dbg !10943
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type.i.55, align 8, !dbg !10943, !tbaa !3875
  %tp_dealloc.i.56 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i64 0, i32 4, !dbg !10943
  %28 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i.56, align 8, !dbg !10943, !tbaa !3934
  call void %28(%struct._object* %25) #3, !dbg !10943
  br label %cleanup, !dbg !10944

cleanup:                                          ; preds = %if.else.i.57, %if.then.2.i.54, %path_cleanup.exit, %entry
  %retval.0 = phi %struct._object* [ null, %entry ], [ %return_value.0, %path_cleanup.exit ], [ %return_value.0, %if.then.2.i.54 ], [ %return_value.0, %if.else.i.57 ]
  call void @llvm.lifetime.end(i64 24, i8* %4) #3, !dbg !10945
  call void @llvm.lifetime.end(i64 4, i8* %3) #3, !dbg !10945
  call void @llvm.lifetime.end(i64 4, i8* %2) #3, !dbg !10945
  call void @llvm.lifetime.end(i64 72, i8* %1) #3, !dbg !10945
  call void @llvm.lifetime.end(i64 72, i8* %0) #3, !dbg !10945
  ret %struct._object* %retval.0, !dbg !10945
}

; Function Attrs: nounwind
declare i8* @strcat(i8*, i8* nocapture readonly) #4

; Function Attrs: nounwind
declare i32 @renameat(i32, i8*, i32, i8*) #4

; Function Attrs: nounwind
declare i32 @rename(i8* nocapture readonly, i8* nocapture readonly) #4

; Function Attrs: nounwind
declare i32 @unlinkat(i32, i8*, i32) #4

; Function Attrs: nounwind
declare i32 @rmdir(i8* nocapture readonly) #4

declare i32 @PyErr_WarnEx(%struct._object*, i8*, i64) #2

; Function Attrs: nounwind
declare i32 @symlinkat(i8*, i32, i8*) #4

; Function Attrs: nounwind
declare i32 @symlink(i8*, i8*) #4

declare i8* @PyBytes_AsString(%struct._object*) #2

declare i32 @system(i8* nocapture readonly) #2

; Function Attrs: nounwind
declare i32 @umask(i32) #4

; Function Attrs: nounwind
declare i32 @uname(%struct.utsname* nocapture) #4

; Function Attrs: nounwind
declare i32 @unlink(i8* nocapture readonly) #4

declare i64 @PyTuple_Size(%struct._object*) #2

declare i32 @_PyTime_ObjectToTimespec(%struct._object*, i64*, i64*, i32) #2

declare %struct._object* @PyNumber_Divmod(%struct._object*, %struct._object*) #2

declare i64 @_PyLong_AsTime_t(%struct._object*) #2

declare i64 @PyLong_AsLong(%struct._object*) #2

; Function Attrs: nounwind
declare i32 @utimensat(i32, i8*, %struct.timespec*, i32) #4

; Function Attrs: nounwind
declare i32 @futimens(i32, %struct.timespec*) #4

; Function Attrs: nounwind
declare i64 @times(%struct.tms* nocapture) #4

; Function Attrs: noreturn
declare void @_exit(i32) #8

declare i64 @PySequence_Size(%struct._object*) #2

; Function Attrs: nounwind uwtable
define internal fastcc i8** @parse_arglist(%struct._object* %argv, i64* nocapture %argc) #0 {
entry:
  %bytes.i = alloca %struct._object*, align 8
  tail call void @llvm.dbg.value(metadata %struct._object* %argv, i64 0, metadata !1692, metadata !3839), !dbg !10946
  tail call void @llvm.dbg.value(metadata i64* %argc, i64 0, metadata !1693, metadata !3839), !dbg !10947
  %0 = load i64, i64* %argc, align 8, !dbg !10948, !tbaa !4482
  %add = add i64 %0, 1, !dbg !10948
  %cmp = icmp ugt i64 %add, 1152921504606846975, !dbg !10948
  br i1 %cmp, label %if.then, label %cond.end, !dbg !10948

cond.end:                                         ; preds = %entry
  %mul = shl i64 %add, 3, !dbg !10949
  %call = tail call i8* @PyMem_Malloc(i64 %mul) #3, !dbg !10949
  %1 = bitcast i8* %call to i8**, !dbg !10949
  tail call void @llvm.dbg.value(metadata i8** %1, i64 0, metadata !1695, metadata !3839), !dbg !10951
  %cmp2 = icmp eq i8* %call, null, !dbg !10952
  br i1 %cmp2, label %if.then, label %for.cond.preheader, !dbg !10954

for.cond.preheader:                               ; preds = %cond.end
  %2 = load i64, i64* %argc, align 8, !dbg !10955, !tbaa !4482
  %cmp4.73 = icmp sgt i64 %2, 0, !dbg !10956
  br i1 %cmp4.73, label %for.body.lr.ph, label %for.end, !dbg !10957

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %argv, i64 0, i32 1, !dbg !10958
  %3 = bitcast %struct._object** %bytes.i to i8*, !dbg !10959
  %4 = bitcast %struct._object** %bytes.i to %struct.PyVarObject**, !dbg !10961
  br label %for.body, !dbg !10957

if.then:                                          ; preds = %entry, %cond.end
  %call3 = tail call %struct._object* @PyErr_NoMemory() #3, !dbg !10962
  br label %cleanup.35, !dbg !10964

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %conv75 = phi i64 [ 0, %for.body.lr.ph ], [ %conv, %for.inc ]
  %i.074 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc ]
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10958, !tbaa !3875
  %tp_as_sequence = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i64 0, i32 11, !dbg !10958
  %6 = load %struct.PySequenceMethods*, %struct.PySequenceMethods** %tp_as_sequence, align 8, !dbg !10958, !tbaa !10965
  %sq_item = getelementptr inbounds %struct.PySequenceMethods, %struct.PySequenceMethods* %6, i64 0, i32 3, !dbg !10958
  %7 = load %struct._object* (%struct._object*, i64)*, %struct._object* (%struct._object*, i64)** %sq_item, align 8, !dbg !10958, !tbaa !10966
  %call7 = call %struct._object* %7(%struct._object* %argv, i64 %conv75) #3, !dbg !10958
  call void @llvm.dbg.value(metadata %struct._object* %call7, i64 0, metadata !1696, metadata !3839), !dbg !10968
  %cmp8 = icmp eq %struct._object* %call7, null, !dbg !10969
  br i1 %cmp8, label %fail.loopexit, label %if.end.11, !dbg !10971

if.end.11:                                        ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct._object* %call7, i64 0, metadata !1710, metadata !3839) #3, !dbg !10972
  call void @llvm.dbg.value(metadata i8** %arrayidx, i64 0, metadata !1711, metadata !3839) #3, !dbg !10973
  call void @llvm.lifetime.start(i64 8, i8* %3) #3, !dbg !10959
  %call.i = call i32 @PyUnicode_FSConverter(%struct._object* %call7, i8* %3) #3, !dbg !10974
  %tobool.i = icmp eq i32 %call.i, 0, !dbg !10974
  br i1 %tobool.i, label %fsconvert_strdup.exit, label %if.end.i, !dbg !10976

if.end.i:                                         ; preds = %if.end.11
  %arrayidx = getelementptr i8*, i8** %1, i64 %conv75, !dbg !10977
  call void @llvm.dbg.value(metadata %struct._object** %bytes.i, i64 0, metadata !1712, metadata !3839) #3, !dbg !10978
  %8 = load %struct.PyVarObject*, %struct.PyVarObject** %4, align 8, !dbg !10961, !tbaa !3870
  %ob_size.i = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %8, i64 0, i32 1, !dbg !10961
  %9 = load i64, i64* %ob_size.i, align 8, !dbg !10961, !tbaa !6607
  call void @llvm.dbg.value(metadata i64 %9, i64 0, metadata !1713, metadata !3839) #3, !dbg !10979
  %add.i = add i64 %9, 1, !dbg !10980
  %call1.i = call i8* @PyMem_Malloc(i64 %add.i) #3, !dbg !10981
  store i8* %call1.i, i8** %arrayidx, align 8, !dbg !10982, !tbaa !3870
  %tobool2.i = icmp eq i8* %call1.i, null, !dbg !10983
  br i1 %tobool2.i, label %if.then.3.i, label %if.end.5.i, !dbg !10985

if.then.3.i:                                      ; preds = %if.end.i
  %call4.i = call %struct._object* @PyErr_NoMemory() #3, !dbg !10986
  br label %fsconvert_strdup.exit, !dbg !10988

if.end.5.i:                                       ; preds = %if.end.i
  call void @llvm.dbg.value(metadata %struct._object** %bytes.i, i64 0, metadata !1712, metadata !3839) #3, !dbg !10978
  %10 = load %struct._object*, %struct._object** %bytes.i, align 8, !dbg !10989, !tbaa !3870
  %call6.i = call i8* @PyBytes_AsString(%struct._object* %10) #3, !dbg !10990
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call1.i, i8* %call6.i, i64 %add.i, i32 1, i1 false) #3, !dbg !10991
  call void @llvm.dbg.value(metadata %struct._object** %bytes.i, i64 0, metadata !1712, metadata !3839) #3, !dbg !10978
  %11 = load %struct._object*, %struct._object** %bytes.i, align 8, !dbg !10992, !tbaa !3870
  call void @llvm.dbg.value(metadata %struct._object* %11, i64 0, metadata !1714, metadata !3839) #3, !dbg !10992
  %ob_refcnt.i = getelementptr inbounds %struct._object, %struct._object* %11, i64 0, i32 0, !dbg !10994
  %12 = load i64, i64* %ob_refcnt.i, align 8, !dbg !10994, !tbaa !3930
  %dec.i = add i64 %12, -1, !dbg !10994
  store i64 %dec.i, i64* %ob_refcnt.i, align 8, !dbg !10994, !tbaa !3930
  %cmp.i = icmp eq i64 %dec.i, 0, !dbg !10994
  br i1 %cmp.i, label %if.else.i, label %fsconvert_strdup.exit, !dbg !10996

if.else.i:                                        ; preds = %if.end.5.i
  %ob_type.i = getelementptr inbounds %struct._object, %struct._object* %11, i64 0, i32 1, !dbg !10997
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type.i, align 8, !dbg !10997, !tbaa !3875
  %tp_dealloc.i = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i64 0, i32 4, !dbg !10997
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc.i, align 8, !dbg !10997, !tbaa !3934
  call void %14(%struct._object* %11) #3, !dbg !10997
  br label %fsconvert_strdup.exit, !dbg !10999

fsconvert_strdup.exit:                            ; preds = %if.end.11, %if.then.3.i, %if.end.5.i, %if.else.i
  %retval.0.i = phi i1 [ true, %if.then.3.i ], [ true, %if.end.11 ], [ false, %if.end.5.i ], [ false, %if.else.i ]
  call void @llvm.lifetime.end(i64 8, i8* %3) #3, !dbg !11000
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call7, i64 0, i32 0, !dbg !11001
  %15 = load i64, i64* %ob_refcnt, align 8, !dbg !11001, !tbaa !3930
  %dec = add i64 %15, -1, !dbg !11001
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !11001, !tbaa !3930
  %cmp14 = icmp eq i64 %dec, 0, !dbg !11001
  br i1 %retval.0.i, label %do.body, label %do.body.20, !dbg !11003

do.body:                                          ; preds = %fsconvert_strdup.exit
  %cmp14.lcssa = phi i1 [ %cmp14, %fsconvert_strdup.exit ]
  %call7.lcssa122 = phi %struct._object* [ %call7, %fsconvert_strdup.exit ]
  %i.074.lcssa119 = phi i32 [ %i.074, %fsconvert_strdup.exit ]
  %conv75.lcssa116 = phi i64 [ %conv75, %fsconvert_strdup.exit ]
  call void @llvm.dbg.value(metadata %struct._object* %call7, i64 0, metadata !1700, metadata !3839), !dbg !11004
  br i1 %cmp14.lcssa, label %if.else, label %fail, !dbg !11006

if.else:                                          ; preds = %do.body
  %ob_type17 = getelementptr inbounds %struct._object, %struct._object* %call7.lcssa122, i64 0, i32 1, !dbg !11007
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type17, align 8, !dbg !11007, !tbaa !3875
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %16, i64 0, i32 4, !dbg !11007
  %17 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !11007, !tbaa !3934
  call void %17(%struct._object* %call7.lcssa122) #3, !dbg !11007
  br label %fail

do.body.20:                                       ; preds = %fsconvert_strdup.exit
  call void @llvm.dbg.value(metadata %struct._object* %call7, i64 0, metadata !1704, metadata !3839), !dbg !11009
  br i1 %cmp14, label %if.else.27, label %for.inc, !dbg !11011

if.else.27:                                       ; preds = %do.body.20
  %ob_type28 = getelementptr inbounds %struct._object, %struct._object* %call7, i64 0, i32 1, !dbg !11012
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type28, align 8, !dbg !11012, !tbaa !3875
  %tp_dealloc29 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i64 0, i32 4, !dbg !11012
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc29, align 8, !dbg !11012, !tbaa !3934
  call void %19(%struct._object* %call7) #3, !dbg !11012
  br label %for.inc

for.inc:                                          ; preds = %do.body.20, %if.else.27
  %inc = add i32 %i.074, 1, !dbg !11015
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !1694, metadata !3839), !dbg !11016
  %conv = sext i32 %inc to i64, !dbg !11017
  %20 = load i64, i64* %argc, align 8, !dbg !10955, !tbaa !4482
  %cmp4 = icmp slt i64 %conv, %20, !dbg !10956
  br i1 %cmp4, label %for.body, label %for.end.loopexit, !dbg !10957

for.end.loopexit:                                 ; preds = %for.inc
  %.lcssa125 = phi i64 [ %20, %for.inc ]
  br label %for.end, !dbg !11020

for.end:                                          ; preds = %for.end.loopexit, %for.cond.preheader
  %.lcssa = phi i64 [ %2, %for.cond.preheader ], [ %.lcssa125, %for.end.loopexit ]
  %arrayidx33 = getelementptr i8*, i8** %1, i64 %.lcssa, !dbg !11020
  store i8* null, i8** %arrayidx33, align 8, !dbg !11021, !tbaa !3870
  br label %cleanup.35, !dbg !11022

fail.loopexit:                                    ; preds = %for.body
  %i.074.lcssa = phi i32 [ %i.074, %for.body ]
  %conv75.lcssa = phi i64 [ %conv75, %for.body ]
  br label %fail, !dbg !11023

fail:                                             ; preds = %fail.loopexit, %do.body, %if.else
  %i.074121 = phi i32 [ %i.074.lcssa, %fail.loopexit ], [ %i.074.lcssa119, %do.body ], [ %i.074.lcssa119, %if.else ]
  %conv75118 = phi i64 [ %conv75.lcssa, %fail.loopexit ], [ %conv75.lcssa116, %do.body ], [ %conv75.lcssa116, %if.else ]
  store i64 %conv75118, i64* %argc, align 8, !dbg !11023, !tbaa !4482
  call void @llvm.dbg.value(metadata i8** %1, i64 0, metadata !1720, metadata !3839) #3, !dbg !11024
  call void @llvm.dbg.value(metadata i64 %conv, i64 0, metadata !1721, metadata !3839) #3, !dbg !11026
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !1722, metadata !3839) #3, !dbg !11027
  %cmp.5.i = icmp sgt i32 %i.074121, 0, !dbg !11028
  br i1 %cmp.5.i, label %for.body.i.preheader, label %free_string_array.exit, !dbg !11029

for.body.i.preheader:                             ; preds = %fail
  br label %for.body.i, !dbg !11030

for.body.i:                                       ; preds = %for.body.i.preheader, %for.body.i
  %i.06.i = phi i64 [ %inc.i, %for.body.i ], [ 0, %for.body.i.preheader ], !dbg !11031
  %arrayidx.i = getelementptr i8*, i8** %1, i64 %i.06.i, !dbg !11030
  %21 = load i8*, i8** %arrayidx.i, align 8, !dbg !11030, !tbaa !3870
  call void @PyMem_Free(i8* %21) #3, !dbg !11032
  %inc.i = add nuw nsw i64 %i.06.i, 1, !dbg !11033
  call void @llvm.dbg.value(metadata i64 %inc.i, i64 0, metadata !1722, metadata !3839) #3, !dbg !11027
  %exitcond.i = icmp eq i64 %inc.i, %conv75118, !dbg !11029
  br i1 %exitcond.i, label %free_string_array.exit.loopexit, label %for.body.i, !dbg !11029

free_string_array.exit.loopexit:                  ; preds = %for.body.i
  br label %free_string_array.exit, !dbg !11034

free_string_array.exit:                           ; preds = %free_string_array.exit.loopexit, %fail
  call void @PyMem_Free(i8* %call) #3, !dbg !11034
  br label %cleanup.35, !dbg !11035

cleanup.35:                                       ; preds = %free_string_array.exit, %for.end, %if.then
  %retval.0 = phi i8** [ null, %if.then ], [ null, %free_string_array.exit ], [ %1, %for.end ]
  ret i8** %retval.0, !dbg !11036
}

; Function Attrs: nounwind
declare i32 @execv(i8*, i8**) #4

declare i8* @PyMem_Malloc(i64) #2

declare %struct._object* @PyErr_NoMemory() #2

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #3

declare void @PyMem_Free(i8*) #2

declare i32 @PyMapping_Check(%struct._object*) #2

; Function Attrs: nounwind
declare i32 @fexecve(i32, i8**, i8**) #4

; Function Attrs: nounwind
declare i32 @execve(i8*, i8**, i8**) #4

declare i64 @PyMapping_Size(%struct._object*) #2

declare %struct._object* @PyMapping_Keys(%struct._object*) #2

declare %struct._object* @PyMapping_Values(%struct._object*) #2

declare %struct._object* @PyList_GetItem(%struct._object*, i64) #2

declare i32 @PyOS_snprintf(i8*, i64, i8*, ...) #2

declare void @_PyImport_AcquireLock() #2

; Function Attrs: nounwind
declare i32 @fork() #4

declare void @PyOS_AfterFork() #2

declare i32 @_PyImport_ReleaseLock() #2

; Function Attrs: nounwind
declare i32 @sched_get_priority_max(i32) #4

; Function Attrs: nounwind
declare i32 @sched_get_priority_min(i32) #4

; Function Attrs: nounwind
declare i32 @sched_getparam(i32, %struct.sched_param*) #4

; Function Attrs: nounwind
declare i32 @sched_getscheduler(i32) #4

; Function Attrs: nounwind
declare i32 @sched_rr_get_interval(i32, %struct.timespec*) #4

; Function Attrs: nounwind uwtable
define internal i32 @convert_sched_param(%struct._object* nocapture readonly %param, %struct.sched_param* nocapture %res) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %param, i64 0, metadata !1842, metadata !3839), !dbg !11037
  tail call void @llvm.dbg.value(metadata %struct.sched_param* %res, i64 0, metadata !1843, metadata !3839), !dbg !11038
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %param, i64 0, i32 1, !dbg !11039
  %0 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !11039, !tbaa !3875
  %cmp = icmp eq %struct._typeobject* %0, @SchedParamType, !dbg !11041
  br i1 %cmp, label %if.end, label %if.then, !dbg !11042

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !11043, !tbaa !3870
  tail call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.245, i64 0, i64 0)) #3, !dbg !11045
  br label %cleanup, !dbg !11046

if.end:                                           ; preds = %entry
  %ob_item = getelementptr inbounds %struct._object, %struct._object* %param, i64 1, i32 1, !dbg !11047
  %arrayidx = bitcast %struct._typeobject** %ob_item to %struct._object**, !dbg !11047
  %2 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !11047, !tbaa !3870
  %call = tail call i64 @PyLong_AsLong(%struct._object* %2) #3, !dbg !11048
  tail call void @llvm.dbg.value(metadata i64 %call, i64 0, metadata !1844, metadata !3839), !dbg !11049
  %cmp1 = icmp eq i64 %call, -1, !dbg !11050
  br i1 %cmp1, label %land.lhs.true, label %if.end.4, !dbg !11052

land.lhs.true:                                    ; preds = %if.end
  %call2 = tail call %struct._object* @PyErr_Occurred() #3, !dbg !11053
  %tobool = icmp eq %struct._object* %call2, null, !dbg !11053
  br i1 %tobool, label %if.end.8, label %cleanup, !dbg !11055

if.end.4:                                         ; preds = %if.end
  %call.off = add i64 %call, 2147483648, !dbg !11056
  %3 = icmp ugt i64 %call.off, 4294967295, !dbg !11056
  br i1 %3, label %if.then.7, label %if.end.8, !dbg !11056

if.then.7:                                        ; preds = %if.end.4
  %4 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8, !dbg !11058, !tbaa !3870
  tail call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.246, i64 0, i64 0)) #3, !dbg !11060
  br label %cleanup, !dbg !11061

if.end.8:                                         ; preds = %land.lhs.true, %if.end.4
  %conv = trunc i64 %call to i32, !dbg !11062
  %__sched_priority = getelementptr inbounds %struct.sched_param, %struct.sched_param* %res, i64 0, i32 0, !dbg !11063
  store i32 %conv, i32* %__sched_priority, align 4, !dbg !11064, !tbaa !6837
  br label %cleanup, !dbg !11065

cleanup:                                          ; preds = %land.lhs.true, %if.end.8, %if.then.7, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 0, %if.then.7 ], [ 1, %if.end.8 ], [ 0, %land.lhs.true ]
  ret i32 %retval.0, !dbg !11066
}

; Function Attrs: nounwind
declare i32 @sched_setparam(i32, %struct.sched_param*) #4

; Function Attrs: nounwind
declare i32 @sched_setscheduler(i32, i32, %struct.sched_param*) #4

; Function Attrs: nounwind
declare i32 @sched_yield() #4

declare %struct._object* @PyObject_GetIter(%struct._object*) #2

; Function Attrs: nounwind
declare %struct.cpu_set_t* @__sched_cpualloc(i64) #4

declare %struct._object* @PyIter_Next(%struct._object*) #2

; Function Attrs: nounwind
declare void @__sched_cpufree(%struct.cpu_set_t*) #4

; Function Attrs: nounwind
declare i32 @sched_setaffinity(i32, i64, %struct.cpu_set_t*) #4

; Function Attrs: nounwind
declare i32 @sched_getaffinity(i32, i64, %struct.cpu_set_t*) #4

declare %struct._object* @PySet_New(%struct._object*) #2

; Function Attrs: nounwind
declare i32 @__sched_cpucount(i64, %struct.cpu_set_t*) #4

declare i32 @PySet_Add(%struct._object*, %struct._object*) #2

; Function Attrs: nounwind
declare i32 @openpty(i32*, i32*, i8*, %struct.termios*, %struct.winsize*) #4

declare i32 @_Py_set_inheritable(i32, i32, i32*) #2

declare %struct._object* @_Py_BuildValue_SizeT(i8*, ...) #2

; Function Attrs: nounwind
declare i32 @forkpty(i32*, i8*, %struct.termios*, %struct.winsize*) #4

; Function Attrs: nounwind
declare i32 @getegid() #4

; Function Attrs: nounwind
declare i32 @geteuid() #4

; Function Attrs: nounwind
declare i32 @getgid() #4

declare i32 @getgrouplist(i8*, i32, i32*, i32*) #2

; Function Attrs: nounwind
declare i32 @getgroups(i32, i32*) #4

; Function Attrs: nounwind
declare i32 @getpid() #4

; Function Attrs: nounwind
declare i32 @getpgrp() #4

; Function Attrs: nounwind
declare i32 @getppid() #4

; Function Attrs: nounwind
declare i32 @getuid() #4

declare i8* @getlogin() #2

; Function Attrs: nounwind
declare i32 @kill(i32, i32) #4

; Function Attrs: nounwind
declare i32 @killpg(i32, i32) #4

; Function Attrs: nounwind
declare i32 @setuid(i32) #4

; Function Attrs: nounwind
declare i32 @seteuid(i32) #4

; Function Attrs: nounwind
declare i32 @setegid(i32) #4

; Function Attrs: nounwind
declare i32 @setreuid(i32, i32) #4

; Function Attrs: nounwind
declare i32 @setregid(i32, i32) #4

; Function Attrs: nounwind
declare i32 @setgid(i32) #4

declare i32 @PySequence_Check(%struct._object*) #2

declare %struct._object* @PySequence_GetItem(%struct._object*, i64) #2

; Function Attrs: nounwind
declare i32 @setgroups(i64, i32*) #4

declare i32 @initgroups(i8*, i32) #2

; Function Attrs: nounwind
declare i32 @getpgid(i32) #4

; Function Attrs: nounwind
declare i32 @setpgrp() #4

declare i32 @wait(%union.wait*) #2

; Function Attrs: nounwind
declare i32 @wait3(%union.wait*, i32, %struct.rusage*) #4

; Function Attrs: nounwind uwtable
define internal fastcc %struct._object* @wait_helper(i32 %pid, i32 %status, %struct.rusage* nocapture readonly %ru) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i32 %pid, i64 0, metadata !2208, metadata !3839), !dbg !11067
  tail call void @llvm.dbg.value(metadata i32 %status, i64 0, metadata !2209, metadata !3839), !dbg !11068
  tail call void @llvm.dbg.value(metadata %struct.rusage* %ru, i64 0, metadata !2210, metadata !3839), !dbg !11069
  %cmp = icmp eq i32 %pid, -1, !dbg !11070
  br i1 %cmp, label %if.then, label %if.end, !dbg !11072

if.then:                                          ; preds = %entry
  %0 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !11073, !tbaa !3870
  %call.i = tail call %struct._object* @PyErr_SetFromErrno(%struct._object* %0) #3, !dbg !11075
  br label %cleanup.93, !dbg !11076

if.end:                                           ; preds = %entry
  %1 = load %struct._object*, %struct._object** @wait_helper.struct_rusage, align 8, !dbg !11077, !tbaa !3870
  %cmp1 = icmp eq %struct._object* %1, null, !dbg !11078
  br i1 %cmp1, label %if.then.2, label %if.end.14, !dbg !11079

if.then.2:                                        ; preds = %if.end
  %call3 = tail call %struct._object* @PyImport_ImportModuleNoBlock(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.274, i64 0, i64 0)) #3, !dbg !11080
  tail call void @llvm.dbg.value(metadata %struct._object* %call3, i64 0, metadata !2212, metadata !3839), !dbg !11081
  %cmp4 = icmp eq %struct._object* %call3, null, !dbg !11082
  br i1 %cmp4, label %cleanup.93, label %if.end.6, !dbg !11084

if.end.6:                                         ; preds = %if.then.2
  %call7 = tail call %struct._object* @_PyObject_GetAttrId(%struct._object* %call3, %struct._Py_Identifier* nonnull @wait_helper.PyId_struct_rusage) #3, !dbg !11085
  store %struct._object* %call7, %struct._object** @wait_helper.struct_rusage, align 8, !dbg !11086, !tbaa !3870
  tail call void @llvm.dbg.value(metadata %struct._object* %call3, i64 0, metadata !2215, metadata !3839), !dbg !11087
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call3, i64 0, i32 0, !dbg !11089
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !11089, !tbaa !3930
  %dec = add i64 %2, -1, !dbg !11089
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !11089, !tbaa !3930
  %cmp8 = icmp eq i64 %dec, 0, !dbg !11089
  br i1 %cmp8, label %if.else, label %if.end.10, !dbg !11091

if.else:                                          ; preds = %if.end.6
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call3, i64 0, i32 1, !dbg !11092
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !11092, !tbaa !3875
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i64 0, i32 4, !dbg !11092
  %4 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !11092, !tbaa !3934
  tail call void %4(%struct._object* %call3) #3, !dbg !11092
  %.pre = load %struct._object*, %struct._object** @wait_helper.struct_rusage, align 8, !dbg !11094, !tbaa !3870
  br label %if.end.10

if.end.10:                                        ; preds = %if.end.6, %if.else
  %.in = phi %struct._object* [ %call7, %if.end.6 ], [ %.pre, %if.else ]
  %not.cmp11 = icmp eq %struct._object* %.in, null, !dbg !11096
  br i1 %not.cmp11, label %cleanup.93, label %if.end.14

if.end.14:                                        ; preds = %if.end.10, %if.end
  %.in.140 = phi %struct._object* [ %.in, %if.end.10 ], [ %1, %if.end ]
  %5 = bitcast %struct._object* %.in.140 to %struct._typeobject*, !dbg !11097
  %call15 = tail call %struct._object* @PyStructSequence_New(%struct._typeobject* %5) #3, !dbg !11098
  tail call void @llvm.dbg.value(metadata %struct._object* %call15, i64 0, metadata !2211, metadata !3839), !dbg !11099
  %tobool = icmp eq %struct._object* %call15, null, !dbg !11100
  br i1 %tobool, label %cleanup.93, label %if.end.17, !dbg !11102

if.end.17:                                        ; preds = %if.end.14
  %tv_sec = getelementptr inbounds %struct.rusage, %struct.rusage* %ru, i64 0, i32 0, i32 0, !dbg !11103
  %6 = load i64, i64* %tv_sec, align 8, !dbg !11103, !tbaa !11104
  %conv = sitofp i64 %6 to double, !dbg !11103
  %tv_usec = getelementptr inbounds %struct.rusage, %struct.rusage* %ru, i64 0, i32 0, i32 1, !dbg !11103
  %7 = load i64, i64* %tv_usec, align 8, !dbg !11103, !tbaa !11107
  %conv19 = sitofp i64 %7 to double, !dbg !11103
  %mul = fmul double %conv19, 1.000000e-06, !dbg !11103
  %add = fadd double %conv, %mul, !dbg !11103
  %call20 = tail call %struct._object* @PyFloat_FromDouble(double %add) #3, !dbg !11103
  %ob_item = getelementptr inbounds %struct._object, %struct._object* %call15, i64 1, i32 1, !dbg !11103
  %arrayidx = bitcast %struct._typeobject** %ob_item to %struct._object**, !dbg !11103
  store %struct._object* %call20, %struct._object** %arrayidx, align 8, !dbg !11103, !tbaa !3870
  %tv_sec21 = getelementptr inbounds %struct.rusage, %struct.rusage* %ru, i64 0, i32 1, i32 0, !dbg !11108
  %8 = load i64, i64* %tv_sec21, align 8, !dbg !11108, !tbaa !11109
  %conv22 = sitofp i64 %8 to double, !dbg !11108
  %tv_usec24 = getelementptr inbounds %struct.rusage, %struct.rusage* %ru, i64 0, i32 1, i32 1, !dbg !11108
  %9 = load i64, i64* %tv_usec24, align 8, !dbg !11108, !tbaa !11110
  %conv25 = sitofp i64 %9 to double, !dbg !11108
  %mul26 = fmul double %conv25, 1.000000e-06, !dbg !11108
  %add27 = fadd double %conv22, %mul26, !dbg !11108
  %call28 = tail call %struct._object* @PyFloat_FromDouble(double %add27) #3, !dbg !11108
  %arrayidx30 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 1, !dbg !11108
  %10 = bitcast %struct._typeobject** %arrayidx30 to %struct._object**, !dbg !11108
  store %struct._object* %call28, %struct._object** %10, align 8, !dbg !11108, !tbaa !3870
  %ru_maxrss = getelementptr inbounds %struct.rusage, %struct.rusage* %ru, i64 0, i32 2, i32 0, !dbg !11111
  %11 = load i64, i64* %ru_maxrss, align 8, !dbg !11111, !tbaa !4482
  %call31 = tail call %struct._object* @PyLong_FromLong(i64 %11) #3, !dbg !11111
  %arrayidx33 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 2, !dbg !11111
  %12 = bitcast %struct._typeobject** %arrayidx33 to %struct._object**, !dbg !11111
  store %struct._object* %call31, %struct._object** %12, align 8, !dbg !11111, !tbaa !3870
  %ru_ixrss = getelementptr inbounds %struct.rusage, %struct.rusage* %ru, i64 0, i32 3, i32 0, !dbg !11112
  %13 = load i64, i64* %ru_ixrss, align 8, !dbg !11112, !tbaa !4482
  %call34 = tail call %struct._object* @PyLong_FromLong(i64 %13) #3, !dbg !11112
  %arrayidx36 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 3, !dbg !11112
  %14 = bitcast %struct._typeobject** %arrayidx36 to %struct._object**, !dbg !11112
  store %struct._object* %call34, %struct._object** %14, align 8, !dbg !11112, !tbaa !3870
  %ru_idrss = getelementptr inbounds %struct.rusage, %struct.rusage* %ru, i64 0, i32 4, i32 0, !dbg !11113
  %15 = load i64, i64* %ru_idrss, align 8, !dbg !11113, !tbaa !4482
  %call37 = tail call %struct._object* @PyLong_FromLong(i64 %15) #3, !dbg !11113
  %arrayidx39 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 4, !dbg !11113
  %16 = bitcast %struct._typeobject** %arrayidx39 to %struct._object**, !dbg !11113
  store %struct._object* %call37, %struct._object** %16, align 8, !dbg !11113, !tbaa !3870
  %ru_isrss = getelementptr inbounds %struct.rusage, %struct.rusage* %ru, i64 0, i32 5, i32 0, !dbg !11114
  %17 = load i64, i64* %ru_isrss, align 8, !dbg !11114, !tbaa !4482
  %call40 = tail call %struct._object* @PyLong_FromLong(i64 %17) #3, !dbg !11114
  %arrayidx42 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 5, !dbg !11114
  %18 = bitcast %struct._typeobject** %arrayidx42 to %struct._object**, !dbg !11114
  store %struct._object* %call40, %struct._object** %18, align 8, !dbg !11114, !tbaa !3870
  %ru_minflt = getelementptr inbounds %struct.rusage, %struct.rusage* %ru, i64 0, i32 6, i32 0, !dbg !11115
  %19 = load i64, i64* %ru_minflt, align 8, !dbg !11115, !tbaa !4482
  %call43 = tail call %struct._object* @PyLong_FromLong(i64 %19) #3, !dbg !11115
  %arrayidx45 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 6, !dbg !11115
  %20 = bitcast %struct._typeobject** %arrayidx45 to %struct._object**, !dbg !11115
  store %struct._object* %call43, %struct._object** %20, align 8, !dbg !11115, !tbaa !3870
  %ru_majflt = getelementptr inbounds %struct.rusage, %struct.rusage* %ru, i64 0, i32 7, i32 0, !dbg !11116
  %21 = load i64, i64* %ru_majflt, align 8, !dbg !11116, !tbaa !4482
  %call46 = tail call %struct._object* @PyLong_FromLong(i64 %21) #3, !dbg !11116
  %arrayidx48 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 7, !dbg !11116
  %22 = bitcast %struct._typeobject** %arrayidx48 to %struct._object**, !dbg !11116
  store %struct._object* %call46, %struct._object** %22, align 8, !dbg !11116, !tbaa !3870
  %ru_nswap = getelementptr inbounds %struct.rusage, %struct.rusage* %ru, i64 0, i32 8, i32 0, !dbg !11117
  %23 = load i64, i64* %ru_nswap, align 8, !dbg !11117, !tbaa !4482
  %call49 = tail call %struct._object* @PyLong_FromLong(i64 %23) #3, !dbg !11117
  %arrayidx51 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 8, !dbg !11117
  %24 = bitcast %struct._typeobject** %arrayidx51 to %struct._object**, !dbg !11117
  store %struct._object* %call49, %struct._object** %24, align 8, !dbg !11117, !tbaa !3870
  %ru_inblock = getelementptr inbounds %struct.rusage, %struct.rusage* %ru, i64 0, i32 9, i32 0, !dbg !11118
  %25 = load i64, i64* %ru_inblock, align 8, !dbg !11118, !tbaa !4482
  %call52 = tail call %struct._object* @PyLong_FromLong(i64 %25) #3, !dbg !11118
  %arrayidx54 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 9, !dbg !11118
  %26 = bitcast %struct._typeobject** %arrayidx54 to %struct._object**, !dbg !11118
  store %struct._object* %call52, %struct._object** %26, align 8, !dbg !11118, !tbaa !3870
  %ru_oublock = getelementptr inbounds %struct.rusage, %struct.rusage* %ru, i64 0, i32 10, i32 0, !dbg !11119
  %27 = load i64, i64* %ru_oublock, align 8, !dbg !11119, !tbaa !4482
  %call55 = tail call %struct._object* @PyLong_FromLong(i64 %27) #3, !dbg !11119
  %arrayidx57 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 10, !dbg !11119
  %28 = bitcast %struct._typeobject** %arrayidx57 to %struct._object**, !dbg !11119
  store %struct._object* %call55, %struct._object** %28, align 8, !dbg !11119, !tbaa !3870
  %ru_msgsnd = getelementptr inbounds %struct.rusage, %struct.rusage* %ru, i64 0, i32 11, i32 0, !dbg !11120
  %29 = load i64, i64* %ru_msgsnd, align 8, !dbg !11120, !tbaa !4482
  %call58 = tail call %struct._object* @PyLong_FromLong(i64 %29) #3, !dbg !11120
  %arrayidx60 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 11, !dbg !11120
  %30 = bitcast %struct._typeobject** %arrayidx60 to %struct._object**, !dbg !11120
  store %struct._object* %call58, %struct._object** %30, align 8, !dbg !11120, !tbaa !3870
  %ru_msgrcv = getelementptr inbounds %struct.rusage, %struct.rusage* %ru, i64 0, i32 12, i32 0, !dbg !11121
  %31 = load i64, i64* %ru_msgrcv, align 8, !dbg !11121, !tbaa !4482
  %call61 = tail call %struct._object* @PyLong_FromLong(i64 %31) #3, !dbg !11121
  %arrayidx63 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 12, !dbg !11121
  %32 = bitcast %struct._typeobject** %arrayidx63 to %struct._object**, !dbg !11121
  store %struct._object* %call61, %struct._object** %32, align 8, !dbg !11121, !tbaa !3870
  %ru_nsignals = getelementptr inbounds %struct.rusage, %struct.rusage* %ru, i64 0, i32 13, i32 0, !dbg !11122
  %33 = load i64, i64* %ru_nsignals, align 8, !dbg !11122, !tbaa !4482
  %call64 = tail call %struct._object* @PyLong_FromLong(i64 %33) #3, !dbg !11122
  %arrayidx66 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 13, !dbg !11122
  %34 = bitcast %struct._typeobject** %arrayidx66 to %struct._object**, !dbg !11122
  store %struct._object* %call64, %struct._object** %34, align 8, !dbg !11122, !tbaa !3870
  %ru_nvcsw = getelementptr inbounds %struct.rusage, %struct.rusage* %ru, i64 0, i32 14, i32 0, !dbg !11123
  %35 = load i64, i64* %ru_nvcsw, align 8, !dbg !11123, !tbaa !4482
  %call67 = tail call %struct._object* @PyLong_FromLong(i64 %35) #3, !dbg !11123
  %arrayidx69 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 14, !dbg !11123
  %36 = bitcast %struct._typeobject** %arrayidx69 to %struct._object**, !dbg !11123
  store %struct._object* %call67, %struct._object** %36, align 8, !dbg !11123, !tbaa !3870
  %ru_nivcsw = getelementptr inbounds %struct.rusage, %struct.rusage* %ru, i64 0, i32 15, i32 0, !dbg !11124
  %37 = load i64, i64* %ru_nivcsw, align 8, !dbg !11124, !tbaa !4482
  %call70 = tail call %struct._object* @PyLong_FromLong(i64 %37) #3, !dbg !11124
  %arrayidx72 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 15, !dbg !11124
  %38 = bitcast %struct._typeobject** %arrayidx72 to %struct._object**, !dbg !11124
  store %struct._object* %call70, %struct._object** %38, align 8, !dbg !11124, !tbaa !3870
  %call73 = tail call %struct._object* @PyErr_Occurred() #3, !dbg !11125
  %tobool74 = icmp eq %struct._object* %call73, null, !dbg !11125
  br i1 %tobool74, label %if.end.89, label %do.body.76, !dbg !11126

do.body.76:                                       ; preds = %if.end.17
  tail call void @llvm.dbg.value(metadata %struct._object* %call15, i64 0, metadata !2217, metadata !3839), !dbg !11127
  %ob_refcnt78 = getelementptr inbounds %struct._object, %struct._object* %call15, i64 0, i32 0, !dbg !11129
  %39 = load i64, i64* %ob_refcnt78, align 8, !dbg !11129, !tbaa !3930
  %dec79 = add i64 %39, -1, !dbg !11129
  store i64 %dec79, i64* %ob_refcnt78, align 8, !dbg !11129, !tbaa !3930
  %cmp80 = icmp eq i64 %dec79, 0, !dbg !11129
  br i1 %cmp80, label %if.else.83, label %cleanup.93, !dbg !11131

if.else.83:                                       ; preds = %do.body.76
  %ob_type84 = getelementptr inbounds %struct._object, %struct._object* %call15, i64 0, i32 1, !dbg !11132
  %40 = load %struct._typeobject*, %struct._typeobject** %ob_type84, align 8, !dbg !11132, !tbaa !3875
  %tp_dealloc85 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %40, i64 0, i32 4, !dbg !11132
  %41 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc85, align 8, !dbg !11132, !tbaa !3934
  tail call void %41(%struct._object* %call15) #3, !dbg !11132
  br label %cleanup.93

if.end.89:                                        ; preds = %if.end.17
  %conv90 = sext i32 %pid to i64, !dbg !11134
  %call91 = tail call %struct._object* @PyLong_FromLong(i64 %conv90) #3, !dbg !11135
  %call92 = tail call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.275, i64 0, i64 0), %struct._object* %call91, i32 %status, %struct._object* %call15) #3, !dbg !11136
  br label %cleanup.93, !dbg !11137

cleanup.93:                                       ; preds = %if.end.10, %if.then.2, %if.else.83, %do.body.76, %if.end.14, %if.end.89, %if.then
  %retval.1 = phi %struct._object* [ %call.i, %if.then ], [ %call92, %if.end.89 ], [ null, %if.end.10 ], [ null, %if.end.14 ], [ null, %do.body.76 ], [ null, %if.else.83 ], [ null, %if.then.2 ]
  ret %struct._object* %retval.1, !dbg !11138
}

declare %struct._object* @PyImport_ImportModuleNoBlock(i8*) #2

declare %struct._object* @_PyObject_GetAttrId(%struct._object*, %struct._Py_Identifier*) #2

; Function Attrs: nounwind
declare i32 @wait4(i32, %union.wait*, i32, %struct.rusage*) #4

declare i32 @waitid(i32, i32, %struct.siginfo_t*, i32) #2

declare i32 @waitpid(i32, i32*, i32) #2

; Function Attrs: nounwind
declare i32 @getsid(i32) #4

; Function Attrs: nounwind
declare i32 @setsid() #4

; Function Attrs: nounwind
declare i32 @setpgid(i32, i32) #4

; Function Attrs: nounwind
declare i32 @tcgetpgrp(i32) #4

; Function Attrs: nounwind
declare i32 @tcsetpgrp(i32, i32) #4

declare i32 @openat64(i32, i8*, i32, ...) #2

declare i32 @open64(i8* nocapture readonly, i32, ...) #2

declare %struct._object* @_Py_device_encoding(i32) #2

; Function Attrs: nounwind
declare i32 @dup3(i32, i32, i32) #4

; Function Attrs: nounwind
declare i32 @dup2(i32, i32) #4

; Function Attrs: nounwind uwtable
define internal i32 @_parse_off_t(%struct._object* %arg, i8* nocapture %addr) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %arg, i64 0, metadata !2417, metadata !3839), !dbg !11139
  tail call void @llvm.dbg.value(metadata i8* %addr, i64 0, metadata !2418, metadata !3839), !dbg !11140
  %call = tail call i64 @PyLong_AsLong(%struct._object* %arg) #3, !dbg !11141
  %0 = bitcast i8* %addr to i64*, !dbg !11142
  store i64 %call, i64* %0, align 8, !dbg !11143, !tbaa !4482
  %call1 = tail call %struct._object* @PyErr_Occurred() #3, !dbg !11144
  %tobool = icmp eq %struct._object* %call1, null, !dbg !11144
  %. = zext i1 %tobool to i32, !dbg !11145
  ret i32 %., !dbg !11146
}

declare i32 @lockf64(i32, i32, i64) #2

; Function Attrs: nounwind
declare i64 @lseek64(i32, i64, i32) #4

declare i64 @read(i32, i8* nocapture, i64) #2

declare i32 @_PyBytes_Resize(%struct._object**, i64) #2

; Function Attrs: nounwind uwtable
define internal fastcc i64 @iov_setup(%struct.iovec** nocapture %iov, %struct.bufferinfo** nocapture %buf, %struct._object* %seq, i32 %cnt, i32 %type) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.iovec** %iov, i64 0, metadata !2462, metadata !3839), !dbg !11147
  tail call void @llvm.dbg.value(metadata %struct.bufferinfo** %buf, i64 0, metadata !2463, metadata !3839), !dbg !11148
  tail call void @llvm.dbg.value(metadata %struct._object* %seq, i64 0, metadata !2464, metadata !3839), !dbg !11149
  tail call void @llvm.dbg.value(metadata i32 %cnt, i64 0, metadata !2465, metadata !3839), !dbg !11150
  tail call void @llvm.dbg.value(metadata i32 %type, i64 0, metadata !2466, metadata !3839), !dbg !11151
  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !2470, metadata !3839), !dbg !11152
  %conv = sext i32 %cnt to i64, !dbg !11153
  %cmp = icmp slt i32 %cnt, 0, !dbg !11153
  br i1 %cmp, label %cond.end.thread, label %cond.end, !dbg !11153

cond.end.thread:                                  ; preds = %entry
  store %struct.iovec* null, %struct.iovec** %iov, align 8, !dbg !11154, !tbaa !3870
  br label %if.then, !dbg !11155

cond.end:                                         ; preds = %entry
  %mul = shl nsw i64 %conv, 4, !dbg !11156
  %call = tail call i8* @PyMem_Malloc(i64 %mul) #3, !dbg !11156
  %0 = bitcast %struct.iovec** %iov to i8**, !dbg !11154
  store i8* %call, i8** %0, align 8, !dbg !11154, !tbaa !3870
  %cmp3 = icmp eq i8* %call, null, !dbg !11158
  br i1 %cmp3, label %if.then, label %cond.end.14, !dbg !11155

if.then:                                          ; preds = %cond.end.thread, %cond.end
  %call5 = tail call %struct._object* @PyErr_NoMemory() #3, !dbg !11160
  br label %cleanup.69, !dbg !11162

cond.end.14:                                      ; preds = %cond.end
  %mul12 = mul nsw i64 %conv, 80, !dbg !11163
  %call13 = tail call i8* @PyMem_Malloc(i64 %mul12) #3, !dbg !11163
  %1 = bitcast %struct.bufferinfo** %buf to i8**, !dbg !11164
  store i8* %call13, i8** %1, align 8, !dbg !11164, !tbaa !3870
  %cmp16 = icmp eq i8* %call13, null, !dbg !11165
  br i1 %cmp16, label %if.then.18, label %for.cond.preheader, !dbg !11167

for.cond.preheader:                               ; preds = %cond.end.14
  %cmp21.125 = icmp sgt i32 %cnt, 0, !dbg !11168
  br i1 %cmp21.125, label %for.body.preheader, label %cleanup.69, !dbg !11169

for.body.preheader:                               ; preds = %for.cond.preheader
  br label %for.body, !dbg !11170

if.then.18:                                       ; preds = %cond.end.14
  %2 = load i8*, i8** %0, align 8, !dbg !11171, !tbaa !3870
  tail call void @PyMem_Free(i8* %2) #3, !dbg !11173
  %call19 = tail call %struct._object* @PyErr_NoMemory() #3, !dbg !11174
  br label %cleanup.69, !dbg !11175

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %indvars.iv134 = phi i64 [ %indvars.iv.next135, %for.inc ], [ 0, %for.body.preheader ]
  %total.0126 = phi i64 [ %add, %for.inc ], [ 0, %for.body.preheader ]
  %call24 = tail call %struct._object* @PySequence_GetItem(%struct._object* %seq, i64 %indvars.iv134) #3, !dbg !11170
  tail call void @llvm.dbg.value(metadata %struct._object* %call24, i64 0, metadata !2471, metadata !3839), !dbg !11176
  %cmp25 = icmp eq %struct._object* %call24, null, !dbg !11177
  br i1 %cmp25, label %fail.loopexit, label %if.end.28, !dbg !11179

if.end.28:                                        ; preds = %for.body
  %3 = load %struct.bufferinfo*, %struct.bufferinfo** %buf, align 8, !dbg !11180, !tbaa !3870
  %arrayidx = getelementptr %struct.bufferinfo, %struct.bufferinfo* %3, i64 %indvars.iv134, !dbg !11181
  %call29 = tail call i32 @PyObject_GetBuffer(%struct._object* %call24, %struct.bufferinfo* %arrayidx, i32 %type) #3, !dbg !11182
  %cmp30 = icmp eq i32 %call29, -1, !dbg !11183
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call24, i64 0, i32 0, !dbg !11184
  %4 = load i64, i64* %ob_refcnt, align 8, !dbg !11184, !tbaa !3930
  %dec = add i64 %4, -1, !dbg !11184
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !11184, !tbaa !3930
  %cmp33 = icmp eq i64 %dec, 0, !dbg !11184
  br i1 %cmp30, label %do.body, label %do.body.38, !dbg !11186

do.body:                                          ; preds = %if.end.28
  %cmp33.lcssa = phi i1 [ %cmp33, %if.end.28 ]
  %call24.lcssa153 = phi %struct._object* [ %call24, %if.end.28 ]
  %indvars.iv134.lcssa151 = phi i64 [ %indvars.iv134, %if.end.28 ]
  %5 = trunc i64 %indvars.iv134.lcssa151 to i32, !dbg !11187
  tail call void @llvm.dbg.value(metadata %struct._object* %call24, i64 0, metadata !2475, metadata !3839), !dbg !11187
  br i1 %cmp33.lcssa, label %if.else, label %fail, !dbg !11189

if.else:                                          ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call24.lcssa153, i64 0, i32 1, !dbg !11190
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !11190, !tbaa !3875
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i64 0, i32 4, !dbg !11190
  %7 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !11190, !tbaa !3934
  tail call void %7(%struct._object* %call24.lcssa153) #3, !dbg !11190
  br label %fail

do.body.38:                                       ; preds = %if.end.28
  tail call void @llvm.dbg.value(metadata %struct._object* %call24, i64 0, metadata !2479, metadata !3839), !dbg !11192
  br i1 %cmp33, label %if.else.45, label %for.inc, !dbg !11194

if.else.45:                                       ; preds = %do.body.38
  %ob_type46 = getelementptr inbounds %struct._object, %struct._object* %call24, i64 0, i32 1, !dbg !11195
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type46, align 8, !dbg !11195, !tbaa !3875
  %tp_dealloc47 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i64 0, i32 4, !dbg !11195
  %9 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc47, align 8, !dbg !11195, !tbaa !3934
  tail call void %9(%struct._object* %call24) #3, !dbg !11195
  br label %for.inc

for.inc:                                          ; preds = %do.body.38, %if.else.45
  %10 = load %struct.bufferinfo*, %struct.bufferinfo** %buf, align 8, !dbg !11198, !tbaa !3870
  %buf53 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %10, i64 %indvars.iv134, i32 0, !dbg !11199
  %11 = bitcast i8** %buf53 to i64*, !dbg !11199
  %12 = load i64, i64* %11, align 8, !dbg !11199, !tbaa !8536
  %13 = load %struct.iovec*, %struct.iovec** %iov, align 8, !dbg !11200, !tbaa !3870
  %arrayidx55 = getelementptr %struct.iovec, %struct.iovec* %13, i64 %indvars.iv134, !dbg !11201
  %14 = bitcast %struct.iovec* %arrayidx55 to i64*, !dbg !11202
  store i64 %12, i64* %14, align 8, !dbg !11202, !tbaa !11203
  %15 = load %struct.bufferinfo*, %struct.bufferinfo** %buf, align 8, !dbg !11205, !tbaa !3870
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %15, i64 %indvars.iv134, i32 2, !dbg !11206
  %16 = load i64, i64* %len, align 8, !dbg !11206, !tbaa !8530
  tail call void @llvm.dbg.value(metadata i64 %16, i64 0, metadata !2469, metadata !3839), !dbg !11207
  %17 = load %struct.iovec*, %struct.iovec** %iov, align 8, !dbg !11208, !tbaa !3870
  %iov_len = getelementptr inbounds %struct.iovec, %struct.iovec* %17, i64 %indvars.iv134, i32 1, !dbg !11209
  store i64 %16, i64* %iov_len, align 8, !dbg !11210, !tbaa !11211
  %add = add i64 %16, %total.0126, !dbg !11212
  tail call void @llvm.dbg.value(metadata i64 %add, i64 0, metadata !2470, metadata !3839), !dbg !11152
  %indvars.iv.next135 = add nuw nsw i64 %indvars.iv134, 1, !dbg !11169
  %cmp21 = icmp slt i64 %indvars.iv.next135, %conv, !dbg !11168
  br i1 %cmp21, label %for.body, label %cleanup.69.loopexit, !dbg !11169

fail.loopexit:                                    ; preds = %for.body
  %indvars.iv134.lcssa = phi i64 [ %indvars.iv134, %for.body ]
  %18 = trunc i64 %indvars.iv134.lcssa to i32, !dbg !11213
  br label %fail, !dbg !11213

fail:                                             ; preds = %fail.loopexit, %do.body, %if.else
  %i.0127130 = phi i32 [ %18, %fail.loopexit ], [ %5, %do.body ], [ %5, %if.else ]
  %19 = load i8*, i8** %0, align 8, !dbg !11213, !tbaa !3870
  tail call void @PyMem_Free(i8* %19) #3, !dbg !11214
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !2468, metadata !3839), !dbg !11215
  %cmp61.123 = icmp sgt i32 %i.0127130, 0, !dbg !11216
  br i1 %cmp61.123, label %for.body.63.preheader, label %for.end.68, !dbg !11219

for.body.63.preheader:                            ; preds = %fail
  br label %for.body.63, !dbg !11220

for.body.63:                                      ; preds = %for.body.63.preheader, %for.body.63
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body.63 ], [ 0, %for.body.63.preheader ]
  %20 = load %struct.bufferinfo*, %struct.bufferinfo** %buf, align 8, !dbg !11220, !tbaa !3870
  %arrayidx65 = getelementptr %struct.bufferinfo, %struct.bufferinfo* %20, i64 %indvars.iv, !dbg !11222
  tail call void @PyBuffer_Release(%struct.bufferinfo* %arrayidx65) #3, !dbg !11223
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !11219
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !11219
  %exitcond = icmp eq i32 %lftr.wideiv, %i.0127130, !dbg !11219
  br i1 %exitcond, label %for.end.68.loopexit, label %for.body.63, !dbg !11219

for.end.68.loopexit:                              ; preds = %for.body.63
  br label %for.end.68, !dbg !11224

for.end.68:                                       ; preds = %for.end.68.loopexit, %fail
  %21 = load i8*, i8** %1, align 8, !dbg !11224, !tbaa !3870
  tail call void @PyMem_Free(i8* %21) #3, !dbg !11225
  br label %cleanup.69, !dbg !11226

cleanup.69.loopexit:                              ; preds = %for.inc
  %add.lcssa = phi i64 [ %add, %for.inc ]
  br label %cleanup.69, !dbg !11227

cleanup.69:                                       ; preds = %cleanup.69.loopexit, %for.cond.preheader, %for.end.68, %if.then.18, %if.then
  %retval.0 = phi i64 [ -1, %if.then ], [ -1, %if.then.18 ], [ -1, %for.end.68 ], [ 0, %for.cond.preheader ], [ %add.lcssa, %cleanup.69.loopexit ]
  ret i64 %retval.0, !dbg !11227
}

declare i64 @readv(i32, %struct.iovec*, i32) #2

declare %struct._object* @PyLong_FromSsize_t(i64) #2

declare i32 @PyObject_GetBuffer(%struct._object*, %struct.bufferinfo*, i32) #2

declare void @PyBuffer_Release(%struct.bufferinfo*) #2

declare i64 @pread64(i32, i8*, i64, i64) #2

declare i64 @write(i32, i8* nocapture readonly, i64) #2

declare i64 @writev(i32, %struct.iovec*, i32) #2

declare i64 @pwrite64(i32, i8*, i64, i64) #2

; Function Attrs: nounwind
declare i64 @sendfile64(i32, i32, i64*, i64) #4

; Function Attrs: nounwind
declare i32 @isatty(i32) #4

; Function Attrs: nounwind
declare i32 @pipe2(i32*, i32) #4

; Function Attrs: nounwind
declare i32 @pipe(i32*) #4

declare i32 @_PyLong_AsInt(%struct._object*) #2

; Function Attrs: nounwind
declare i32 @mkfifoat(i32, i8*, i32) #4

; Function Attrs: nounwind
declare i32 @mkfifo(i8*, i32) #4

; Function Attrs: nounwind
declare i32 @__xmknodat(i32, i32, i8*, i32, i64*) #4

; Function Attrs: nounwind
declare i32 @__xmknod(i32, i8*, i32, i64*) #4

; Function Attrs: nounwind
declare i32 @ftruncate64(i32, i64) #4

; Function Attrs: nounwind
declare i32 @truncate64(i8*, i64) #4

declare i32 @posix_fallocate64(i32, i64, i64) #2

; Function Attrs: nounwind
declare i32 @posix_fadvise64(i32, i64, i64, i32) #4

declare %struct._object* @PyBytes_FromFormat(i8*, ...) #2

; Function Attrs: nounwind
declare i32 @putenv(i8*) #4

declare i32 @PyDict_SetItem(%struct._object*, %struct._object*, %struct._object*) #2

; Function Attrs: nounwind
declare i32 @unsetenv(i8* nocapture readonly) #4

declare i32 @PyDict_DelItem(%struct._object*, %struct._object*) #2

; Function Attrs: nounwind
declare i8* @strerror(i32) #4

declare %struct._object* @PyUnicode_DecodeLocale(i8*, i8*) #2

declare i32 @PyObject_AsFileDescriptor(%struct._object*) #2

declare i32 @fsync(i32) #2

; Function Attrs: nounwind
declare void @sync() #4

declare i32 @fdatasync(i32) #2

; Function Attrs: nounwind
declare i32 @fstatvfs64(i32, %struct.statvfs* nocapture) #4

; Function Attrs: nounwind uwtable
define internal fastcc %struct._object* @_pystatvfs_fromstructstatvfs(%struct.statvfs* byval nocapture readonly align 8 %st) #0 {
entry:
  tail call void @llvm.dbg.declare(metadata %struct.statvfs* %st, metadata !2845, metadata !3839), !dbg !11228
  %call = tail call %struct._object* @PyStructSequence_New(%struct._typeobject* nonnull @StatVFSResultType) #3, !dbg !11229
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !2846, metadata !3839), !dbg !11230
  %cmp = icmp eq %struct._object* %call, null, !dbg !11231
  br i1 %cmp, label %cleanup, label %if.end, !dbg !11233

if.end:                                           ; preds = %entry
  %f_bsize = getelementptr inbounds %struct.statvfs, %struct.statvfs* %st, i64 0, i32 0, !dbg !11234
  %0 = load i64, i64* %f_bsize, align 8, !dbg !11234, !tbaa !11235
  %call1 = tail call %struct._object* @PyLong_FromLong(i64 %0) #3, !dbg !11234
  %ob_item = getelementptr inbounds %struct._object, %struct._object* %call, i64 1, i32 1, !dbg !11234
  %arrayidx = bitcast %struct._typeobject** %ob_item to %struct._object**, !dbg !11234
  store %struct._object* %call1, %struct._object** %arrayidx, align 8, !dbg !11234, !tbaa !3870
  %f_frsize = getelementptr inbounds %struct.statvfs, %struct.statvfs* %st, i64 0, i32 1, !dbg !11237
  %1 = load i64, i64* %f_frsize, align 8, !dbg !11237, !tbaa !11238
  %call2 = tail call %struct._object* @PyLong_FromLong(i64 %1) #3, !dbg !11237
  %arrayidx4 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 1, !dbg !11237
  %2 = bitcast %struct._typeobject** %arrayidx4 to %struct._object**, !dbg !11237
  store %struct._object* %call2, %struct._object** %2, align 8, !dbg !11237, !tbaa !3870
  %f_blocks = getelementptr inbounds %struct.statvfs, %struct.statvfs* %st, i64 0, i32 2, !dbg !11239
  %3 = load i64, i64* %f_blocks, align 8, !dbg !11239, !tbaa !11240
  %call5 = tail call %struct._object* @PyLong_FromLong(i64 %3) #3, !dbg !11239
  %arrayidx7 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 2, !dbg !11239
  %4 = bitcast %struct._typeobject** %arrayidx7 to %struct._object**, !dbg !11239
  store %struct._object* %call5, %struct._object** %4, align 8, !dbg !11239, !tbaa !3870
  %f_bfree = getelementptr inbounds %struct.statvfs, %struct.statvfs* %st, i64 0, i32 3, !dbg !11241
  %5 = load i64, i64* %f_bfree, align 8, !dbg !11241, !tbaa !11242
  %call8 = tail call %struct._object* @PyLong_FromLong(i64 %5) #3, !dbg !11241
  %arrayidx10 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 3, !dbg !11241
  %6 = bitcast %struct._typeobject** %arrayidx10 to %struct._object**, !dbg !11241
  store %struct._object* %call8, %struct._object** %6, align 8, !dbg !11241, !tbaa !3870
  %f_bavail = getelementptr inbounds %struct.statvfs, %struct.statvfs* %st, i64 0, i32 4, !dbg !11243
  %7 = load i64, i64* %f_bavail, align 8, !dbg !11243, !tbaa !11244
  %call11 = tail call %struct._object* @PyLong_FromLong(i64 %7) #3, !dbg !11243
  %arrayidx13 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 4, !dbg !11243
  %8 = bitcast %struct._typeobject** %arrayidx13 to %struct._object**, !dbg !11243
  store %struct._object* %call11, %struct._object** %8, align 8, !dbg !11243, !tbaa !3870
  %f_files = getelementptr inbounds %struct.statvfs, %struct.statvfs* %st, i64 0, i32 5, !dbg !11245
  %9 = load i64, i64* %f_files, align 8, !dbg !11245, !tbaa !11246
  %call14 = tail call %struct._object* @PyLong_FromLong(i64 %9) #3, !dbg !11245
  %arrayidx16 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 5, !dbg !11245
  %10 = bitcast %struct._typeobject** %arrayidx16 to %struct._object**, !dbg !11245
  store %struct._object* %call14, %struct._object** %10, align 8, !dbg !11245, !tbaa !3870
  %f_ffree = getelementptr inbounds %struct.statvfs, %struct.statvfs* %st, i64 0, i32 6, !dbg !11247
  %11 = load i64, i64* %f_ffree, align 8, !dbg !11247, !tbaa !11248
  %call17 = tail call %struct._object* @PyLong_FromLong(i64 %11) #3, !dbg !11247
  %arrayidx19 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 6, !dbg !11247
  %12 = bitcast %struct._typeobject** %arrayidx19 to %struct._object**, !dbg !11247
  store %struct._object* %call17, %struct._object** %12, align 8, !dbg !11247, !tbaa !3870
  %f_favail = getelementptr inbounds %struct.statvfs, %struct.statvfs* %st, i64 0, i32 7, !dbg !11249
  %13 = load i64, i64* %f_favail, align 8, !dbg !11249, !tbaa !11250
  %call20 = tail call %struct._object* @PyLong_FromLong(i64 %13) #3, !dbg !11249
  %arrayidx22 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 7, !dbg !11249
  %14 = bitcast %struct._typeobject** %arrayidx22 to %struct._object**, !dbg !11249
  store %struct._object* %call20, %struct._object** %14, align 8, !dbg !11249, !tbaa !3870
  %f_flag = getelementptr inbounds %struct.statvfs, %struct.statvfs* %st, i64 0, i32 9, !dbg !11251
  %15 = load i64, i64* %f_flag, align 8, !dbg !11251, !tbaa !11252
  %call23 = tail call %struct._object* @PyLong_FromLong(i64 %15) #3, !dbg !11251
  %arrayidx25 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 8, !dbg !11251
  %16 = bitcast %struct._typeobject** %arrayidx25 to %struct._object**, !dbg !11251
  store %struct._object* %call23, %struct._object** %16, align 8, !dbg !11251, !tbaa !3870
  %f_namemax = getelementptr inbounds %struct.statvfs, %struct.statvfs* %st, i64 0, i32 10, !dbg !11253
  %17 = load i64, i64* %f_namemax, align 8, !dbg !11253, !tbaa !11254
  %call26 = tail call %struct._object* @PyLong_FromLong(i64 %17) #3, !dbg !11253
  %arrayidx28 = getelementptr %struct._typeobject*, %struct._typeobject** %ob_item, i64 9, !dbg !11253
  %18 = bitcast %struct._typeobject** %arrayidx28 to %struct._object**, !dbg !11253
  store %struct._object* %call26, %struct._object** %18, align 8, !dbg !11253, !tbaa !3870
  %call29 = tail call %struct._object* @PyErr_Occurred() #3, !dbg !11255
  %tobool = icmp eq %struct._object* %call29, null, !dbg !11255
  br i1 %tobool, label %cleanup, label %do.body, !dbg !11256

do.body:                                          ; preds = %if.end
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !2847, metadata !3839), !dbg !11257
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 0, !dbg !11259
  %19 = load i64, i64* %ob_refcnt, align 8, !dbg !11259, !tbaa !3930
  %dec = add i64 %19, -1, !dbg !11259
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !11259, !tbaa !3930
  %cmp31 = icmp eq i64 %dec, 0, !dbg !11259
  br i1 %cmp31, label %if.else, label %cleanup, !dbg !11261

if.else:                                          ; preds = %do.body
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 1, !dbg !11262
  %20 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !11262, !tbaa !3875
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %20, i64 0, i32 4, !dbg !11262
  %21 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !11262, !tbaa !3934
  tail call void %21(%struct._object* %call) #3, !dbg !11262
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.else, %do.body, %entry
  %retval.0 = phi %struct._object* [ null, %entry ], [ null, %do.body ], [ null, %if.else ], [ %call, %if.end ]
  ret %struct._object* %retval.0, !dbg !11264
}

; Function Attrs: nounwind
declare i32 @statvfs64(i8* nocapture readonly, %struct.statvfs* nocapture) #4

; Function Attrs: nounwind uwtable
define internal i32 @conv_confstr_confname(%struct._object* %arg, i32* nocapture %valuep) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %arg, i64 0, metadata !2880, metadata !3839), !dbg !11265
  tail call void @llvm.dbg.value(metadata i32* %valuep, i64 0, metadata !2881, metadata !3839), !dbg !11266
  %call = tail call fastcc i32 @conv_confname(%struct._object* %arg, i32* %valuep, %struct.constdef* getelementptr inbounds ([27 x %struct.constdef], [27 x %struct.constdef]* @posix_constants_confstr, i64 0, i64 0), i64 27), !dbg !11267
  ret i32 %call, !dbg !11268
}

; Function Attrs: nounwind
declare i64 @confstr(i32, i8*, i64) #4

; Function Attrs: nounwind uwtable
define internal fastcc i32 @conv_confname(%struct._object* %arg, i32* nocapture %valuep, %struct.constdef* nocapture readonly %table, i64 %tablesize) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %arg, i64 0, metadata !2887, metadata !3839), !dbg !11269
  tail call void @llvm.dbg.value(metadata i32* %valuep, i64 0, metadata !2888, metadata !3839), !dbg !11270
  tail call void @llvm.dbg.value(metadata %struct.constdef* %table, i64 0, metadata !2889, metadata !3839), !dbg !11271
  tail call void @llvm.dbg.value(metadata i64 %tablesize, i64 0, metadata !2890, metadata !3839), !dbg !11272
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %arg, i64 0, i32 1, !dbg !11273
  %0 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !11273, !tbaa !3875
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %0, i64 0, i32 19, !dbg !11273
  %1 = load i64, i64* %tp_flags, align 8, !dbg !11273, !tbaa !5345
  %and = and i64 %1, 16777216, !dbg !11273
  %cmp = icmp eq i64 %and, 0, !dbg !11273
  br i1 %cmp, label %if.else, label %if.then, !dbg !11274

if.then:                                          ; preds = %entry
  %call = tail call i64 @PyLong_AsLong(%struct._object* %arg) #3, !dbg !11275
  %conv = trunc i64 %call to i32, !dbg !11275
  store i32 %conv, i32* %valuep, align 4, !dbg !11277, !tbaa !3890
  br label %return, !dbg !11278

if.else:                                          ; preds = %entry
  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !2891, metadata !3839), !dbg !11279
  tail call void @llvm.dbg.value(metadata i64 %tablesize, i64 0, metadata !2895, metadata !3839), !dbg !11280
  %and4 = and i64 %1, 268435456, !dbg !11281
  %cmp5 = icmp eq i64 %and4, 0, !dbg !11281
  br i1 %cmp5, label %if.then.7, label %if.end, !dbg !11283

if.then.7:                                        ; preds = %if.else
  %2 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !11284, !tbaa !3870
  tail call void @PyErr_SetString(%struct._object* %2, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.339, i64 0, i64 0)) #3, !dbg !11286
  br label %return, !dbg !11287

if.end:                                           ; preds = %if.else
  %call8 = tail call i8* @PyUnicode_AsUTF8(%struct._object* %arg) #3, !dbg !11288
  tail call void @llvm.dbg.value(metadata i8* %call8, i64 0, metadata !2897, metadata !3839), !dbg !11289
  %cmp9 = icmp eq i8* %call8, null, !dbg !11290
  br i1 %cmp9, label %return, label %while.cond.preheader, !dbg !11292

while.cond.preheader:                             ; preds = %if.end
  %cmp13.54.56 = icmp eq i64 %tablesize, 0, !dbg !11293
  br i1 %cmp13.54.56, label %while.end, label %while.body.lr.ph.preheader, !dbg !11294

while.body.lr.ph.preheader:                       ; preds = %while.cond.preheader
  br label %while.body.lr.ph, !dbg !11294

while.cond.outer.loopexit:                        ; preds = %while.body
  %div.lcssa = phi i64 [ %div, %while.body ]
  %lo.055.lcssa = phi i64 [ %lo.055, %while.body ]
  %cmp13.54 = icmp ult i64 %lo.055.lcssa, %div.lcssa, !dbg !11293
  br i1 %cmp13.54, label %while.body.lr.ph, label %while.end.loopexit73, !dbg !11294

while.body.lr.ph:                                 ; preds = %while.body.lr.ph.preheader, %while.cond.outer.loopexit
  %lo.0.ph58 = phi i64 [ %lo.055.lcssa, %while.cond.outer.loopexit ], [ 0, %while.body.lr.ph.preheader ]
  %hi.0.ph57 = phi i64 [ %div.lcssa, %while.cond.outer.loopexit ], [ %tablesize, %while.body.lr.ph.preheader ]
  br label %while.body, !dbg !11294

while.body:                                       ; preds = %while.body.lr.ph, %if.then.22
  %lo.055 = phi i64 [ %lo.0.ph58, %while.body.lr.ph ], [ %add23, %if.then.22 ]
  %add = add i64 %lo.055, %hi.0.ph57, !dbg !11295
  %div = lshr i64 %add, 1, !dbg !11296
  tail call void @llvm.dbg.value(metadata i64 %div, i64 0, metadata !2894, metadata !3839), !dbg !11297
  %name = getelementptr inbounds %struct.constdef, %struct.constdef* %table, i64 %div, i32 0, !dbg !11298
  %3 = load i8*, i8** %name, align 8, !dbg !11298, !tbaa !11299
  %call15 = tail call i32 @strcmp(i8* %call8, i8* %3) #3, !dbg !11298
  tail call void @llvm.dbg.value(metadata i32 %call15, i64 0, metadata !2896, metadata !3839), !dbg !11301
  %cmp16 = icmp slt i32 %call15, 0, !dbg !11302
  br i1 %cmp16, label %while.cond.outer.loopexit, label %if.else.19, !dbg !11304

if.else.19:                                       ; preds = %while.body
  %cmp20 = icmp sgt i32 %call15, 0, !dbg !11305
  br i1 %cmp20, label %if.then.22, label %if.else.24, !dbg !11307

if.then.22:                                       ; preds = %if.else.19
  %add23 = add nuw i64 %div, 1, !dbg !11308
  tail call void @llvm.dbg.value(metadata i64 %add23, i64 0, metadata !2891, metadata !3839), !dbg !11279
  %cmp13 = icmp ult i64 %add23, %hi.0.ph57, !dbg !11293
  br i1 %cmp13, label %while.body, label %while.end.loopexit, !dbg !11294

if.else.24:                                       ; preds = %if.else.19
  %div.lcssa80 = phi i64 [ %div, %if.else.19 ]
  %value = getelementptr inbounds %struct.constdef, %struct.constdef* %table, i64 %div.lcssa80, i32 1, !dbg !11309
  %4 = load i64, i64* %value, align 8, !dbg !11309, !tbaa !11311
  %conv26 = trunc i64 %4 to i32, !dbg !11312
  store i32 %conv26, i32* %valuep, align 4, !dbg !11313, !tbaa !3890
  br label %return, !dbg !11314

while.end.loopexit:                               ; preds = %if.then.22
  br label %while.end, !dbg !11315

while.end.loopexit73:                             ; preds = %while.cond.outer.loopexit
  br label %while.end, !dbg !11315

while.end:                                        ; preds = %while.end.loopexit73, %while.end.loopexit, %while.cond.preheader
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !11315, !tbaa !3870
  tail call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.340, i64 0, i64 0)) #3, !dbg !11316
  br label %return, !dbg !11317

return:                                           ; preds = %if.then.7, %if.else.24, %while.end, %if.end, %if.then
  %retval.1 = phi i32 [ 1, %if.then ], [ 1, %if.else.24 ], [ 0, %while.end ], [ 0, %if.then.7 ], [ 0, %if.end ]
  ret i32 %retval.1, !dbg !11318
}

declare i8* @PyUnicode_AsUTF8(%struct._object*) #2

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) #5

; Function Attrs: nounwind uwtable
define internal i32 @conv_sysconf_confname(%struct._object* %arg, i32* nocapture %valuep) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %arg, i64 0, metadata !2913, metadata !3839), !dbg !11319
  tail call void @llvm.dbg.value(metadata i32* %valuep, i64 0, metadata !2914, metadata !3839), !dbg !11320
  %call = tail call fastcc i32 @conv_confname(%struct._object* %arg, i32* %valuep, %struct.constdef* getelementptr inbounds ([134 x %struct.constdef], [134 x %struct.constdef]* @posix_constants_sysconf, i64 0, i64 0), i64 134), !dbg !11321
  ret i32 %call, !dbg !11322
}

; Function Attrs: nounwind uwtable
define internal i32 @conv_path_confname(%struct._object* %arg, i32* nocapture %valuep) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._object* %arg, i64 0, metadata !2927, metadata !3839), !dbg !11323
  tail call void @llvm.dbg.value(metadata i32* %valuep, i64 0, metadata !2928, metadata !3839), !dbg !11324
  %call = tail call fastcc i32 @conv_confname(%struct._object* %arg, i32* %valuep, %struct.constdef* getelementptr inbounds ([20 x %struct.constdef], [20 x %struct.constdef]* @posix_constants_pathconf, i64 0, i64 0), i64 20), !dbg !11325
  ret i32 %call, !dbg !11326
}

; Function Attrs: nounwind
declare i64 @fpathconf(i32, i32) #4

; Function Attrs: nounwind
declare i64 @pathconf(i8*, i32) #4

; Function Attrs: noreturn nounwind
declare void @abort() #9

; Function Attrs: nounwind
declare i32 @getloadavg(double*, i32) #4

declare i32 @_PyOS_URandom(i8*, i64) #2

; Function Attrs: nounwind
declare i32 @setresuid(i32, i32, i32) #4

; Function Attrs: nounwind
declare i32 @setresgid(i32, i32, i32) #4

; Function Attrs: nounwind
declare i32 @getresuid(i32*, i32*, i32*) #4

; Function Attrs: nounwind
declare i32 @getresgid(i32*, i32*, i32*) #4

; Function Attrs: nounwind
declare i32 @fsetxattr(i32, i8*, i8*, i64, i32) #4

; Function Attrs: nounwind
declare i32 @setxattr(i8*, i8*, i8*, i64, i32) #4

; Function Attrs: nounwind
declare i32 @lsetxattr(i8*, i8*, i8*, i64, i32) #4

; Function Attrs: nounwind
declare i64 @fgetxattr(i32, i8*, i8*, i64) #4

; Function Attrs: nounwind
declare i64 @getxattr(i8*, i8*, i8*, i64) #4

; Function Attrs: nounwind
declare i64 @lgetxattr(i8*, i8*, i8*, i64) #4

; Function Attrs: nounwind
declare i32 @fremovexattr(i32, i8*) #4

; Function Attrs: nounwind
declare i32 @removexattr(i8*, i8*) #4

; Function Attrs: nounwind
declare i32 @lremovexattr(i8*, i8*) #4

; Function Attrs: nounwind
declare i64 @flistxattr(i32, i8*, i64) #4

; Function Attrs: nounwind
declare i64 @listxattr(i8*, i8*, i64) #4

; Function Attrs: nounwind
declare i64 @llistxattr(i8*, i8*, i64) #4

; Function Attrs: nounwind
declare i32 @fileno(%struct._IO_FILE* nocapture) #4

; Function Attrs: nounwind
declare i32 @ioctl(i32, i64, ...) #4

declare i32 @_Py_get_inheritable(i32) #2

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #5

declare %struct._object* @PyDict_GetItem(%struct._object*, %struct._object*) #2

declare i32 @PyModule_AddIntConstant(%struct._object*, i8*, i64) #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @setup_confname_table(%struct.constdef* %table, i64 %tablesize, i8* %tablename, %struct._object* %module) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.constdef* %table, i64 0, metadata !3140, metadata !3839), !dbg !11327
  tail call void @llvm.dbg.value(metadata i64 %tablesize, i64 0, metadata !3141, metadata !3839), !dbg !11328
  tail call void @llvm.dbg.value(metadata i8* %tablename, i64 0, metadata !3142, metadata !3839), !dbg !11329
  tail call void @llvm.dbg.value(metadata %struct._object* %module, i64 0, metadata !3143, metadata !3839), !dbg !11330
  tail call void @llvm.dbg.value(metadata %struct._object* null, i64 0, metadata !3144, metadata !3839), !dbg !11331
  %0 = bitcast %struct.constdef* %table to i8*, !dbg !11332
  tail call void @qsort(i8* %0, i64 %tablesize, i64 16, i32 (i8*, i8*)* nonnull @cmp_constdefs) #3, !dbg !11333
  %call = tail call %struct._object* @PyDict_New() #3, !dbg !11334
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !3144, metadata !3839), !dbg !11331
  %cmp = icmp eq %struct._object* %call, null, !dbg !11335
  br i1 %cmp, label %cleanup.43, label %for.cond.preheader, !dbg !11337

for.cond.preheader:                               ; preds = %entry
  %cmp1.73 = icmp eq i64 %tablesize, 0, !dbg !11338
  br i1 %cmp1.73, label %for.end, label %for.body.preheader, !dbg !11339

for.body.preheader:                               ; preds = %for.cond.preheader
  br label %for.body, !dbg !11340

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %i.074 = phi i64 [ %inc, %for.inc ], [ 0, %for.body.preheader ]
  %value = getelementptr inbounds %struct.constdef, %struct.constdef* %table, i64 %i.074, i32 1, !dbg !11340
  %1 = load i64, i64* %value, align 8, !dbg !11340, !tbaa !11311
  %call2 = tail call %struct._object* @PyLong_FromLong(i64 %1) #3, !dbg !11341
  tail call void @llvm.dbg.value(metadata %struct._object* %call2, i64 0, metadata !3146, metadata !3839), !dbg !11342
  %cond = icmp eq %struct._object* %call2, null, !dbg !11343
  br i1 %cond, label %if.end.14.loopexit, label %lor.lhs.false, !dbg !11343

lor.lhs.false:                                    ; preds = %for.body
  %name = getelementptr inbounds %struct.constdef, %struct.constdef* %table, i64 %i.074, i32 0, !dbg !11344
  %2 = load i8*, i8** %name, align 8, !dbg !11344, !tbaa !11299
  %call5 = tail call i32 @PyDict_SetItemString(%struct._object* %call, i8* %2, %struct._object* %call2) #3, !dbg !11345
  %cmp6 = icmp eq i32 %call5, -1, !dbg !11346
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call2, i64 0, i32 0, !dbg !11347
  %3 = load i64, i64* %ob_refcnt, align 8, !dbg !11347, !tbaa !3930
  %dec = add i64 %3, -1, !dbg !11347
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !11347, !tbaa !3930
  %cmp11 = icmp eq i64 %dec, 0, !dbg !11347
  br i1 %cmp6, label %do.body.10, label %do.body.30, !dbg !11349

do.body.10:                                       ; preds = %lor.lhs.false
  %cmp11.lcssa = phi i1 [ %cmp11, %lor.lhs.false ]
  %call2.lcssa84 = phi %struct._object* [ %call2, %lor.lhs.false ]
  tail call void @llvm.dbg.value(metadata %struct._object* %call2, i64 0, metadata !3150, metadata !3839), !dbg !11350
  tail call void @llvm.dbg.value(metadata %struct._object* %call2, i64 0, metadata !3154, metadata !3839), !dbg !11352
  br i1 %cmp11.lcssa, label %if.else, label %if.end.14, !dbg !11354

if.else:                                          ; preds = %do.body.10
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %call2.lcssa84, i64 0, i32 1, !dbg !11355
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !11355, !tbaa !3875
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i64 0, i32 4, !dbg !11355
  %5 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !11355, !tbaa !3934
  tail call void %5(%struct._object* %call2.lcssa84) #3, !dbg !11355
  br label %if.end.14

if.end.14.loopexit:                               ; preds = %for.body
  br label %if.end.14, !dbg !11357

if.end.14:                                        ; preds = %if.end.14.loopexit, %if.else, %do.body.10
  tail call void @llvm.dbg.value(metadata %struct._object* %call, i64 0, metadata !3157, metadata !3839), !dbg !11357
  %ob_refcnt19 = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 0, !dbg !11359
  %6 = load i64, i64* %ob_refcnt19, align 8, !dbg !11359, !tbaa !3930
  %dec20 = add i64 %6, -1, !dbg !11359
  store i64 %dec20, i64* %ob_refcnt19, align 8, !dbg !11359, !tbaa !3930
  %cmp21 = icmp eq i64 %dec20, 0, !dbg !11359
  br i1 %cmp21, label %if.else.23, label %cleanup.43, !dbg !11361

if.else.23:                                       ; preds = %if.end.14
  %ob_type24 = getelementptr inbounds %struct._object, %struct._object* %call, i64 0, i32 1, !dbg !11362
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type24, align 8, !dbg !11362, !tbaa !3875
  %tp_dealloc25 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i64 0, i32 4, !dbg !11362
  %8 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc25, align 8, !dbg !11362, !tbaa !3934
  tail call void %8(%struct._object* %call) #3, !dbg !11362
  br label %cleanup.43

do.body.30:                                       ; preds = %lor.lhs.false
  tail call void @llvm.dbg.value(metadata %struct._object* %call2, i64 0, metadata !3159, metadata !3839), !dbg !11364
  br i1 %cmp11, label %if.else.36, label %for.inc, !dbg !11366

if.else.36:                                       ; preds = %do.body.30
  %ob_type37 = getelementptr inbounds %struct._object, %struct._object* %call2, i64 0, i32 1, !dbg !11367
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type37, align 8, !dbg !11367, !tbaa !3875
  %tp_dealloc38 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i64 0, i32 4, !dbg !11367
  %10 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc38, align 8, !dbg !11367, !tbaa !3934
  tail call void %10(%struct._object* %call2) #3, !dbg !11367
  br label %for.inc

for.inc:                                          ; preds = %do.body.30, %if.else.36
  %inc = add nuw i64 %i.074, 1, !dbg !11370
  tail call void @llvm.dbg.value(metadata i64 %inc, i64 0, metadata !3145, metadata !3839), !dbg !11371
  %cmp1 = icmp ult i64 %inc, %tablesize, !dbg !11338
  br i1 %cmp1, label %for.body, label %for.end.loopexit, !dbg !11339

for.end.loopexit:                                 ; preds = %for.inc
  br label %for.end, !dbg !11372

for.end:                                          ; preds = %for.end.loopexit, %for.cond.preheader
  %call42 = tail call i32 @PyModule_AddObject(%struct._object* %module, i8* %tablename, %struct._object* %call) #3, !dbg !11372
  br label %cleanup.43, !dbg !11373

cleanup.43:                                       ; preds = %if.end.14, %if.else.23, %entry, %for.end
  %retval.2 = phi i32 [ %call42, %for.end ], [ -1, %entry ], [ -1, %if.else.23 ], [ -1, %if.end.14 ]
  ret i32 %retval.2, !dbg !11374
}

declare void @qsort(i8*, i64, i64, i32 (i8*, i8*)* nocapture) #2

; Function Attrs: nounwind readonly uwtable
define internal i32 @cmp_constdefs(i8* nocapture readonly %v1, i8* nocapture readonly %v2) #10 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %v1, i64 0, metadata !3167, metadata !3839), !dbg !11375
  tail call void @llvm.dbg.value(metadata i8* %v2, i64 0, metadata !3168, metadata !3839), !dbg !11376
  %name = bitcast i8* %v1 to i8**, !dbg !11377
  %0 = load i8*, i8** %name, align 8, !dbg !11377, !tbaa !11299
  %name1 = bitcast i8* %v2 to i8**, !dbg !11377
  %1 = load i8*, i8** %name1, align 8, !dbg !11377, !tbaa !11299
  %call = tail call i32 @strcmp(i8* %0, i8* %1) #3, !dbg !11377
  ret i32 %call, !dbg !11378
}

declare i32 @PyDict_SetItemString(%struct._object*, i8*, %struct._object*) #2

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readonly uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readonly }
attributes #12 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3836, !3837}
!llvm.ident = !{!3838}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/final)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !267, subprograms: !688, globals: !3227)
!1 = !DIFile(filename: "./Modules/posixmodule.c", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!2 = !{!3, !221, !226, !232, !238, !253, !262}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 72, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "/usr/include/bits/confname.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220}
!6 = !DIEnumerator(name: "_SC_ARG_MAX", value: 0)
!7 = !DIEnumerator(name: "_SC_CHILD_MAX", value: 1)
!8 = !DIEnumerator(name: "_SC_CLK_TCK", value: 2)
!9 = !DIEnumerator(name: "_SC_NGROUPS_MAX", value: 3)
!10 = !DIEnumerator(name: "_SC_OPEN_MAX", value: 4)
!11 = !DIEnumerator(name: "_SC_STREAM_MAX", value: 5)
!12 = !DIEnumerator(name: "_SC_TZNAME_MAX", value: 6)
!13 = !DIEnumerator(name: "_SC_JOB_CONTROL", value: 7)
!14 = !DIEnumerator(name: "_SC_SAVED_IDS", value: 8)
!15 = !DIEnumerator(name: "_SC_REALTIME_SIGNALS", value: 9)
!16 = !DIEnumerator(name: "_SC_PRIORITY_SCHEDULING", value: 10)
!17 = !DIEnumerator(name: "_SC_TIMERS", value: 11)
!18 = !DIEnumerator(name: "_SC_ASYNCHRONOUS_IO", value: 12)
!19 = !DIEnumerator(name: "_SC_PRIORITIZED_IO", value: 13)
!20 = !DIEnumerator(name: "_SC_SYNCHRONIZED_IO", value: 14)
!21 = !DIEnumerator(name: "_SC_FSYNC", value: 15)
!22 = !DIEnumerator(name: "_SC_MAPPED_FILES", value: 16)
!23 = !DIEnumerator(name: "_SC_MEMLOCK", value: 17)
!24 = !DIEnumerator(name: "_SC_MEMLOCK_RANGE", value: 18)
!25 = !DIEnumerator(name: "_SC_MEMORY_PROTECTION", value: 19)
!26 = !DIEnumerator(name: "_SC_MESSAGE_PASSING", value: 20)
!27 = !DIEnumerator(name: "_SC_SEMAPHORES", value: 21)
!28 = !DIEnumerator(name: "_SC_SHARED_MEMORY_OBJECTS", value: 22)
!29 = !DIEnumerator(name: "_SC_AIO_LISTIO_MAX", value: 23)
!30 = !DIEnumerator(name: "_SC_AIO_MAX", value: 24)
!31 = !DIEnumerator(name: "_SC_AIO_PRIO_DELTA_MAX", value: 25)
!32 = !DIEnumerator(name: "_SC_DELAYTIMER_MAX", value: 26)
!33 = !DIEnumerator(name: "_SC_MQ_OPEN_MAX", value: 27)
!34 = !DIEnumerator(name: "_SC_MQ_PRIO_MAX", value: 28)
!35 = !DIEnumerator(name: "_SC_VERSION", value: 29)
!36 = !DIEnumerator(name: "_SC_PAGESIZE", value: 30)
!37 = !DIEnumerator(name: "_SC_RTSIG_MAX", value: 31)
!38 = !DIEnumerator(name: "_SC_SEM_NSEMS_MAX", value: 32)
!39 = !DIEnumerator(name: "_SC_SEM_VALUE_MAX", value: 33)
!40 = !DIEnumerator(name: "_SC_SIGQUEUE_MAX", value: 34)
!41 = !DIEnumerator(name: "_SC_TIMER_MAX", value: 35)
!42 = !DIEnumerator(name: "_SC_BC_BASE_MAX", value: 36)
!43 = !DIEnumerator(name: "_SC_BC_DIM_MAX", value: 37)
!44 = !DIEnumerator(name: "_SC_BC_SCALE_MAX", value: 38)
!45 = !DIEnumerator(name: "_SC_BC_STRING_MAX", value: 39)
!46 = !DIEnumerator(name: "_SC_COLL_WEIGHTS_MAX", value: 40)
!47 = !DIEnumerator(name: "_SC_EQUIV_CLASS_MAX", value: 41)
!48 = !DIEnumerator(name: "_SC_EXPR_NEST_MAX", value: 42)
!49 = !DIEnumerator(name: "_SC_LINE_MAX", value: 43)
!50 = !DIEnumerator(name: "_SC_RE_DUP_MAX", value: 44)
!51 = !DIEnumerator(name: "_SC_CHARCLASS_NAME_MAX", value: 45)
!52 = !DIEnumerator(name: "_SC_2_VERSION", value: 46)
!53 = !DIEnumerator(name: "_SC_2_C_BIND", value: 47)
!54 = !DIEnumerator(name: "_SC_2_C_DEV", value: 48)
!55 = !DIEnumerator(name: "_SC_2_FORT_DEV", value: 49)
!56 = !DIEnumerator(name: "_SC_2_FORT_RUN", value: 50)
!57 = !DIEnumerator(name: "_SC_2_SW_DEV", value: 51)
!58 = !DIEnumerator(name: "_SC_2_LOCALEDEF", value: 52)
!59 = !DIEnumerator(name: "_SC_PII", value: 53)
!60 = !DIEnumerator(name: "_SC_PII_XTI", value: 54)
!61 = !DIEnumerator(name: "_SC_PII_SOCKET", value: 55)
!62 = !DIEnumerator(name: "_SC_PII_INTERNET", value: 56)
!63 = !DIEnumerator(name: "_SC_PII_OSI", value: 57)
!64 = !DIEnumerator(name: "_SC_POLL", value: 58)
!65 = !DIEnumerator(name: "_SC_SELECT", value: 59)
!66 = !DIEnumerator(name: "_SC_UIO_MAXIOV", value: 60)
!67 = !DIEnumerator(name: "_SC_IOV_MAX", value: 60)
!68 = !DIEnumerator(name: "_SC_PII_INTERNET_STREAM", value: 61)
!69 = !DIEnumerator(name: "_SC_PII_INTERNET_DGRAM", value: 62)
!70 = !DIEnumerator(name: "_SC_PII_OSI_COTS", value: 63)
!71 = !DIEnumerator(name: "_SC_PII_OSI_CLTS", value: 64)
!72 = !DIEnumerator(name: "_SC_PII_OSI_M", value: 65)
!73 = !DIEnumerator(name: "_SC_T_IOV_MAX", value: 66)
!74 = !DIEnumerator(name: "_SC_THREADS", value: 67)
!75 = !DIEnumerator(name: "_SC_THREAD_SAFE_FUNCTIONS", value: 68)
!76 = !DIEnumerator(name: "_SC_GETGR_R_SIZE_MAX", value: 69)
!77 = !DIEnumerator(name: "_SC_GETPW_R_SIZE_MAX", value: 70)
!78 = !DIEnumerator(name: "_SC_LOGIN_NAME_MAX", value: 71)
!79 = !DIEnumerator(name: "_SC_TTY_NAME_MAX", value: 72)
!80 = !DIEnumerator(name: "_SC_THREAD_DESTRUCTOR_ITERATIONS", value: 73)
!81 = !DIEnumerator(name: "_SC_THREAD_KEYS_MAX", value: 74)
!82 = !DIEnumerator(name: "_SC_THREAD_STACK_MIN", value: 75)
!83 = !DIEnumerator(name: "_SC_THREAD_THREADS_MAX", value: 76)
!84 = !DIEnumerator(name: "_SC_THREAD_ATTR_STACKADDR", value: 77)
!85 = !DIEnumerator(name: "_SC_THREAD_ATTR_STACKSIZE", value: 78)
!86 = !DIEnumerator(name: "_SC_THREAD_PRIORITY_SCHEDULING", value: 79)
!87 = !DIEnumerator(name: "_SC_THREAD_PRIO_INHERIT", value: 80)
!88 = !DIEnumerator(name: "_SC_THREAD_PRIO_PROTECT", value: 81)
!89 = !DIEnumerator(name: "_SC_THREAD_PROCESS_SHARED", value: 82)
!90 = !DIEnumerator(name: "_SC_NPROCESSORS_CONF", value: 83)
!91 = !DIEnumerator(name: "_SC_NPROCESSORS_ONLN", value: 84)
!92 = !DIEnumerator(name: "_SC_PHYS_PAGES", value: 85)
!93 = !DIEnumerator(name: "_SC_AVPHYS_PAGES", value: 86)
!94 = !DIEnumerator(name: "_SC_ATEXIT_MAX", value: 87)
!95 = !DIEnumerator(name: "_SC_PASS_MAX", value: 88)
!96 = !DIEnumerator(name: "_SC_XOPEN_VERSION", value: 89)
!97 = !DIEnumerator(name: "_SC_XOPEN_XCU_VERSION", value: 90)
!98 = !DIEnumerator(name: "_SC_XOPEN_UNIX", value: 91)
!99 = !DIEnumerator(name: "_SC_XOPEN_CRYPT", value: 92)
!100 = !DIEnumerator(name: "_SC_XOPEN_ENH_I18N", value: 93)
!101 = !DIEnumerator(name: "_SC_XOPEN_SHM", value: 94)
!102 = !DIEnumerator(name: "_SC_2_CHAR_TERM", value: 95)
!103 = !DIEnumerator(name: "_SC_2_C_VERSION", value: 96)
!104 = !DIEnumerator(name: "_SC_2_UPE", value: 97)
!105 = !DIEnumerator(name: "_SC_XOPEN_XPG2", value: 98)
!106 = !DIEnumerator(name: "_SC_XOPEN_XPG3", value: 99)
!107 = !DIEnumerator(name: "_SC_XOPEN_XPG4", value: 100)
!108 = !DIEnumerator(name: "_SC_CHAR_BIT", value: 101)
!109 = !DIEnumerator(name: "_SC_CHAR_MAX", value: 102)
!110 = !DIEnumerator(name: "_SC_CHAR_MIN", value: 103)
!111 = !DIEnumerator(name: "_SC_INT_MAX", value: 104)
!112 = !DIEnumerator(name: "_SC_INT_MIN", value: 105)
!113 = !DIEnumerator(name: "_SC_LONG_BIT", value: 106)
!114 = !DIEnumerator(name: "_SC_WORD_BIT", value: 107)
!115 = !DIEnumerator(name: "_SC_MB_LEN_MAX", value: 108)
!116 = !DIEnumerator(name: "_SC_NZERO", value: 109)
!117 = !DIEnumerator(name: "_SC_SSIZE_MAX", value: 110)
!118 = !DIEnumerator(name: "_SC_SCHAR_MAX", value: 111)
!119 = !DIEnumerator(name: "_SC_SCHAR_MIN", value: 112)
!120 = !DIEnumerator(name: "_SC_SHRT_MAX", value: 113)
!121 = !DIEnumerator(name: "_SC_SHRT_MIN", value: 114)
!122 = !DIEnumerator(name: "_SC_UCHAR_MAX", value: 115)
!123 = !DIEnumerator(name: "_SC_UINT_MAX", value: 116)
!124 = !DIEnumerator(name: "_SC_ULONG_MAX", value: 117)
!125 = !DIEnumerator(name: "_SC_USHRT_MAX", value: 118)
!126 = !DIEnumerator(name: "_SC_NL_ARGMAX", value: 119)
!127 = !DIEnumerator(name: "_SC_NL_LANGMAX", value: 120)
!128 = !DIEnumerator(name: "_SC_NL_MSGMAX", value: 121)
!129 = !DIEnumerator(name: "_SC_NL_NMAX", value: 122)
!130 = !DIEnumerator(name: "_SC_NL_SETMAX", value: 123)
!131 = !DIEnumerator(name: "_SC_NL_TEXTMAX", value: 124)
!132 = !DIEnumerator(name: "_SC_XBS5_ILP32_OFF32", value: 125)
!133 = !DIEnumerator(name: "_SC_XBS5_ILP32_OFFBIG", value: 126)
!134 = !DIEnumerator(name: "_SC_XBS5_LP64_OFF64", value: 127)
!135 = !DIEnumerator(name: "_SC_XBS5_LPBIG_OFFBIG", value: 128)
!136 = !DIEnumerator(name: "_SC_XOPEN_LEGACY", value: 129)
!137 = !DIEnumerator(name: "_SC_XOPEN_REALTIME", value: 130)
!138 = !DIEnumerator(name: "_SC_XOPEN_REALTIME_THREADS", value: 131)
!139 = !DIEnumerator(name: "_SC_ADVISORY_INFO", value: 132)
!140 = !DIEnumerator(name: "_SC_BARRIERS", value: 133)
!141 = !DIEnumerator(name: "_SC_BASE", value: 134)
!142 = !DIEnumerator(name: "_SC_C_LANG_SUPPORT", value: 135)
!143 = !DIEnumerator(name: "_SC_C_LANG_SUPPORT_R", value: 136)
!144 = !DIEnumerator(name: "_SC_CLOCK_SELECTION", value: 137)
!145 = !DIEnumerator(name: "_SC_CPUTIME", value: 138)
!146 = !DIEnumerator(name: "_SC_THREAD_CPUTIME", value: 139)
!147 = !DIEnumerator(name: "_SC_DEVICE_IO", value: 140)
!148 = !DIEnumerator(name: "_SC_DEVICE_SPECIFIC", value: 141)
!149 = !DIEnumerator(name: "_SC_DEVICE_SPECIFIC_R", value: 142)
!150 = !DIEnumerator(name: "_SC_FD_MGMT", value: 143)
!151 = !DIEnumerator(name: "_SC_FIFO", value: 144)
!152 = !DIEnumerator(name: "_SC_PIPE", value: 145)
!153 = !DIEnumerator(name: "_SC_FILE_ATTRIBUTES", value: 146)
!154 = !DIEnumerator(name: "_SC_FILE_LOCKING", value: 147)
!155 = !DIEnumerator(name: "_SC_FILE_SYSTEM", value: 148)
!156 = !DIEnumerator(name: "_SC_MONOTONIC_CLOCK", value: 149)
!157 = !DIEnumerator(name: "_SC_MULTI_PROCESS", value: 150)
!158 = !DIEnumerator(name: "_SC_SINGLE_PROCESS", value: 151)
!159 = !DIEnumerator(name: "_SC_NETWORKING", value: 152)
!160 = !DIEnumerator(name: "_SC_READER_WRITER_LOCKS", value: 153)
!161 = !DIEnumerator(name: "_SC_SPIN_LOCKS", value: 154)
!162 = !DIEnumerator(name: "_SC_REGEXP", value: 155)
!163 = !DIEnumerator(name: "_SC_REGEX_VERSION", value: 156)
!164 = !DIEnumerator(name: "_SC_SHELL", value: 157)
!165 = !DIEnumerator(name: "_SC_SIGNALS", value: 158)
!166 = !DIEnumerator(name: "_SC_SPAWN", value: 159)
!167 = !DIEnumerator(name: "_SC_SPORADIC_SERVER", value: 160)
!168 = !DIEnumerator(name: "_SC_THREAD_SPORADIC_SERVER", value: 161)
!169 = !DIEnumerator(name: "_SC_SYSTEM_DATABASE", value: 162)
!170 = !DIEnumerator(name: "_SC_SYSTEM_DATABASE_R", value: 163)
!171 = !DIEnumerator(name: "_SC_TIMEOUTS", value: 164)
!172 = !DIEnumerator(name: "_SC_TYPED_MEMORY_OBJECTS", value: 165)
!173 = !DIEnumerator(name: "_SC_USER_GROUPS", value: 166)
!174 = !DIEnumerator(name: "_SC_USER_GROUPS_R", value: 167)
!175 = !DIEnumerator(name: "_SC_2_PBS", value: 168)
!176 = !DIEnumerator(name: "_SC_2_PBS_ACCOUNTING", value: 169)
!177 = !DIEnumerator(name: "_SC_2_PBS_LOCATE", value: 170)
!178 = !DIEnumerator(name: "_SC_2_PBS_MESSAGE", value: 171)
!179 = !DIEnumerator(name: "_SC_2_PBS_TRACK", value: 172)
!180 = !DIEnumerator(name: "_SC_SYMLOOP_MAX", value: 173)
!181 = !DIEnumerator(name: "_SC_STREAMS", value: 174)
!182 = !DIEnumerator(name: "_SC_2_PBS_CHECKPOINT", value: 175)
!183 = !DIEnumerator(name: "_SC_V6_ILP32_OFF32", value: 176)
!184 = !DIEnumerator(name: "_SC_V6_ILP32_OFFBIG", value: 177)
!185 = !DIEnumerator(name: "_SC_V6_LP64_OFF64", value: 178)
!186 = !DIEnumerator(name: "_SC_V6_LPBIG_OFFBIG", value: 179)
!187 = !DIEnumerator(name: "_SC_HOST_NAME_MAX", value: 180)
!188 = !DIEnumerator(name: "_SC_TRACE", value: 181)
!189 = !DIEnumerator(name: "_SC_TRACE_EVENT_FILTER", value: 182)
!190 = !DIEnumerator(name: "_SC_TRACE_INHERIT", value: 183)
!191 = !DIEnumerator(name: "_SC_TRACE_LOG", value: 184)
!192 = !DIEnumerator(name: "_SC_LEVEL1_ICACHE_SIZE", value: 185)
!193 = !DIEnumerator(name: "_SC_LEVEL1_ICACHE_ASSOC", value: 186)
!194 = !DIEnumerator(name: "_SC_LEVEL1_ICACHE_LINESIZE", value: 187)
!195 = !DIEnumerator(name: "_SC_LEVEL1_DCACHE_SIZE", value: 188)
!196 = !DIEnumerator(name: "_SC_LEVEL1_DCACHE_ASSOC", value: 189)
!197 = !DIEnumerator(name: "_SC_LEVEL1_DCACHE_LINESIZE", value: 190)
!198 = !DIEnumerator(name: "_SC_LEVEL2_CACHE_SIZE", value: 191)
!199 = !DIEnumerator(name: "_SC_LEVEL2_CACHE_ASSOC", value: 192)
!200 = !DIEnumerator(name: "_SC_LEVEL2_CACHE_LINESIZE", value: 193)
!201 = !DIEnumerator(name: "_SC_LEVEL3_CACHE_SIZE", value: 194)
!202 = !DIEnumerator(name: "_SC_LEVEL3_CACHE_ASSOC", value: 195)
!203 = !DIEnumerator(name: "_SC_LEVEL3_CACHE_LINESIZE", value: 196)
!204 = !DIEnumerator(name: "_SC_LEVEL4_CACHE_SIZE", value: 197)
!205 = !DIEnumerator(name: "_SC_LEVEL4_CACHE_ASSOC", value: 198)
!206 = !DIEnumerator(name: "_SC_LEVEL4_CACHE_LINESIZE", value: 199)
!207 = !DIEnumerator(name: "_SC_IPV6", value: 235)
!208 = !DIEnumerator(name: "_SC_RAW_SOCKETS", value: 236)
!209 = !DIEnumerator(name: "_SC_V7_ILP32_OFF32", value: 237)
!210 = !DIEnumerator(name: "_SC_V7_ILP32_OFFBIG", value: 238)
!211 = !DIEnumerator(name: "_SC_V7_LP64_OFF64", value: 239)
!212 = !DIEnumerator(name: "_SC_V7_LPBIG_OFFBIG", value: 240)
!213 = !DIEnumerator(name: "_SC_SS_REPL_MAX", value: 241)
!214 = !DIEnumerator(name: "_SC_TRACE_EVENT_NAME_MAX", value: 242)
!215 = !DIEnumerator(name: "_SC_TRACE_NAME_MAX", value: 243)
!216 = !DIEnumerator(name: "_SC_TRACE_SYS_MAX", value: 244)
!217 = !DIEnumerator(name: "_SC_TRACE_USER_EVENT_MAX", value: 245)
!218 = !DIEnumerator(name: "_SC_XOPEN_STREAMS", value: 246)
!219 = !DIEnumerator(name: "_SC_THREAD_ROBUST_PRIO_INHERIT", value: 247)
!220 = !DIEnumerator(name: "_SC_THREAD_ROBUST_PRIO_PROTECT", value: 248)
!221 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !222, line: 57, size: 32, align: 32, elements: !223)
!222 = !DIFile(filename: "Include/pytime.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!223 = !{!224, !225}
!224 = !DIEnumerator(name: "_PyTime_ROUND_DOWN", value: 0)
!225 = !DIEnumerator(name: "_PyTime_ROUND_UP", value: 1)
!226 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !227, line: 100, size: 32, align: 32, elements: !228)
!227 = !DIFile(filename: "/usr/include/sys/wait.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!228 = !{!229, !230, !231}
!229 = !DIEnumerator(name: "P_ALL", value: 0)
!230 = !DIEnumerator(name: "P_PID", value: 1)
!231 = !DIEnumerator(name: "P_PGID", value: 2)
!232 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__priority_which", file: !233, line: 292, size: 32, align: 32, elements: !234)
!233 = !DIFile(filename: "/usr/include/bits/resource.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!234 = !{!235, !236, !237}
!235 = !DIEnumerator(name: "PRIO_PROCESS", value: 0)
!236 = !DIEnumerator(name: "PRIO_PGRP", value: 1)
!237 = !DIEnumerator(name: "PRIO_USER", value: 2)
!238 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !239, line: 80, size: 32, align: 32, elements: !240)
!239 = !DIFile(filename: "/usr/include/bits/statvfs.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!240 = !{!241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252}
!241 = !DIEnumerator(name: "ST_RDONLY", value: 1)
!242 = !DIEnumerator(name: "ST_NOSUID", value: 2)
!243 = !DIEnumerator(name: "ST_NODEV", value: 4)
!244 = !DIEnumerator(name: "ST_NOEXEC", value: 8)
!245 = !DIEnumerator(name: "ST_SYNCHRONOUS", value: 16)
!246 = !DIEnumerator(name: "ST_MANDLOCK", value: 64)
!247 = !DIEnumerator(name: "ST_WRITE", value: 128)
!248 = !DIEnumerator(name: "ST_APPEND", value: 256)
!249 = !DIEnumerator(name: "ST_IMMUTABLE", value: 512)
!250 = !DIEnumerator(name: "ST_NOATIME", value: 1024)
!251 = !DIEnumerator(name: "ST_NODIRATIME", value: 2048)
!252 = !DIEnumerator(name: "ST_RELATIME", value: 4096)
!253 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !254, line: 246, size: 32, align: 32, elements: !255)
!254 = !DIFile(filename: "/usr/include/bits/siginfo.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!255 = !{!256, !257, !258, !259, !260, !261}
!256 = !DIEnumerator(name: "CLD_EXITED", value: 1)
!257 = !DIEnumerator(name: "CLD_KILLED", value: 2)
!258 = !DIEnumerator(name: "CLD_DUMPED", value: 3)
!259 = !DIEnumerator(name: "CLD_TRAPPED", value: 4)
!260 = !DIEnumerator(name: "CLD_STOPPED", value: 5)
!261 = !DIEnumerator(name: "CLD_CONTINUED", value: 6)
!262 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !263, line: 29, size: 32, align: 32, elements: !264)
!263 = !DIFile(filename: "/usr/include/sys/xattr.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!264 = !{!265, !266}
!265 = !DIEnumerator(name: "XATTR_CREATE", value: 1)
!266 = !DIEnumerator(name: "XATTR_REPLACE", value: 2)
!267 = !{!268, !273, !275, !276, !287, !366, !612, !613, !314, !614, !630, !631, !639, !647, !648, !651, !364, !282, !652, !322, !653, !655, !656, !658, !667, !669, !671, !505, !272, !677, !349, !678, !684, !687}
!268 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !269, line: 80, baseType: !270)
!269 = !DIFile(filename: "/usr/include/sys/types.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!270 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !271, line: 134, baseType: !272)
!271 = !DIFile(filename: "/usr/include/bits/types.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!272 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!273 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !269, line: 65, baseType: !274)
!274 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !271, line: 135, baseType: !272)
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 64, align: 64)
!277 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyObject", file: !278, line: 109, baseType: !279)
!278 = !DIFile(filename: "Include/object.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!279 = !DICompositeType(tag: DW_TAG_structure_type, name: "_object", file: !278, line: 105, size: 128, align: 64, elements: !280)
!280 = !{!281, !288}
!281 = !DIDerivedType(tag: DW_TAG_member, name: "ob_refcnt", scope: !279, file: !278, line: 107, baseType: !282, size: 64, align: 64)
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_ssize_t", file: !283, line: 177, baseType: !284)
!283 = !DIFile(filename: "Include/pyport.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!284 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !285, line: 102, baseType: !286)
!285 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!286 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !271, line: 181, baseType: !287)
!287 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "ob_type", scope: !279, file: !278, line: 108, baseType: !289, size: 64, align: 64, offset: 64)
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !290, size: 64, align: 64)
!290 = !DICompositeType(tag: DW_TAG_structure_type, name: "_typeobject", file: !278, line: 334, size: 3200, align: 64, elements: !291)
!291 = !{!292, !298, !302, !303, !304, !309, !372, !377, !382, !383, !388, !440, !471, !483, !489, !490, !491, !493, !495, !526, !527, !528, !537, !538, !543, !544, !546, !548, !558, !561, !579, !580, !581, !583, !585, !586, !588, !593, !598, !603, !604, !605, !606, !607, !608, !609, !610, !611}
!292 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !290, file: !278, line: 335, baseType: !293, size: 192, align: 64)
!293 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyVarObject", file: !278, line: 114, baseType: !294)
!294 = !DICompositeType(tag: DW_TAG_structure_type, file: !278, line: 111, size: 192, align: 64, elements: !295)
!295 = !{!296, !297}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !294, file: !278, line: 112, baseType: !277, size: 128, align: 64)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "ob_size", scope: !294, file: !278, line: 113, baseType: !282, size: 64, align: 64, offset: 128)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "tp_name", scope: !290, file: !278, line: 336, baseType: !299, size: 64, align: 64, offset: 192)
!299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !300, size: 64, align: 64)
!300 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !301)
!301 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "tp_basicsize", scope: !290, file: !278, line: 337, baseType: !282, size: 64, align: 64, offset: 256)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "tp_itemsize", scope: !290, file: !278, line: 337, baseType: !282, size: 64, align: 64, offset: 320)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dealloc", scope: !290, file: !278, line: 341, baseType: !305, size: 64, align: 64, offset: 384)
!305 = !DIDerivedType(tag: DW_TAG_typedef, name: "destructor", file: !278, line: 308, baseType: !306)
!306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !307, size: 64, align: 64)
!307 = !DISubroutineType(types: !308)
!308 = !{null, !276}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "tp_print", scope: !290, file: !278, line: 342, baseType: !310, size: 64, align: 64, offset: 448)
!310 = !DIDerivedType(tag: DW_TAG_typedef, name: "printfunc", file: !278, line: 314, baseType: !311)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64, align: 64)
!312 = !DISubroutineType(types: !313)
!313 = !{!314, !276, !315, !314}
!314 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 64, align: 64)
!316 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !285, line: 48, baseType: !317)
!317 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !318, line: 246, size: 1728, align: 64, elements: !319)
!318 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!319 = !{!320, !321, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !341, !342, !343, !344, !346, !348, !350, !354, !357, !359, !360, !361, !362, !363, !367, !368}
!320 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !317, file: !318, line: 247, baseType: !314, size: 32, align: 32)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !317, file: !318, line: 252, baseType: !322, size: 64, align: 64, offset: 64)
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 64, align: 64)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !317, file: !318, line: 253, baseType: !322, size: 64, align: 64, offset: 128)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !317, file: !318, line: 254, baseType: !322, size: 64, align: 64, offset: 192)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !317, file: !318, line: 255, baseType: !322, size: 64, align: 64, offset: 256)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !317, file: !318, line: 256, baseType: !322, size: 64, align: 64, offset: 320)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !317, file: !318, line: 257, baseType: !322, size: 64, align: 64, offset: 384)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !317, file: !318, line: 258, baseType: !322, size: 64, align: 64, offset: 448)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !317, file: !318, line: 259, baseType: !322, size: 64, align: 64, offset: 512)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !317, file: !318, line: 261, baseType: !322, size: 64, align: 64, offset: 576)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !317, file: !318, line: 262, baseType: !322, size: 64, align: 64, offset: 640)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !317, file: !318, line: 263, baseType: !322, size: 64, align: 64, offset: 704)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !317, file: !318, line: 265, baseType: !334, size: 64, align: 64, offset: 768)
!334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 64, align: 64)
!335 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !318, line: 161, size: 192, align: 64, elements: !336)
!336 = !{!337, !338, !340}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !335, file: !318, line: 162, baseType: !334, size: 64, align: 64)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !335, file: !318, line: 163, baseType: !339, size: 64, align: 64, offset: 64)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64, align: 64)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !335, file: !318, line: 167, baseType: !314, size: 32, align: 32, offset: 128)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !317, file: !318, line: 267, baseType: !339, size: 64, align: 64, offset: 832)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !317, file: !318, line: 269, baseType: !314, size: 32, align: 32, offset: 896)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !317, file: !318, line: 273, baseType: !314, size: 32, align: 32, offset: 928)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !317, file: !318, line: 275, baseType: !345, size: 64, align: 64, offset: 960)
!345 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !271, line: 140, baseType: !287)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !317, file: !318, line: 279, baseType: !347, size: 16, align: 16, offset: 1024)
!347 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !317, file: !318, line: 280, baseType: !349, size: 8, align: 8, offset: 1040)
!349 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !317, file: !318, line: 281, baseType: !351, size: 8, align: 8, offset: 1048)
!351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 8, align: 8, elements: !352)
!352 = !{!353}
!353 = !DISubrange(count: 1)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !317, file: !318, line: 285, baseType: !355, size: 64, align: 64, offset: 1088)
!355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !356, size: 64, align: 64)
!356 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !318, line: 155, baseType: null)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !317, file: !318, line: 294, baseType: !358, size: 64, align: 64, offset: 1152)
!358 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !271, line: 141, baseType: !287)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !317, file: !318, line: 303, baseType: !275, size: 64, align: 64, offset: 1216)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !317, file: !318, line: 304, baseType: !275, size: 64, align: 64, offset: 1280)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !317, file: !318, line: 305, baseType: !275, size: 64, align: 64, offset: 1344)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !317, file: !318, line: 306, baseType: !275, size: 64, align: 64, offset: 1408)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !317, file: !318, line: 307, baseType: !364, size: 64, align: 64, offset: 1472)
!364 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !365, line: 62, baseType: !366)
!365 = !DIFile(filename: "/home/juneyoung.lee/llvm-install-3.7.0/bin/../lib/clang/3.7.0/include/stddef.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!366 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !317, file: !318, line: 309, baseType: !314, size: 32, align: 32, offset: 1536)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !317, file: !318, line: 311, baseType: !369, size: 160, align: 8, offset: 1568)
!369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 160, align: 8, elements: !370)
!370 = !{!371}
!371 = !DISubrange(count: 20)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattr", scope: !290, file: !278, line: 343, baseType: !373, size: 64, align: 64, offset: 512)
!373 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrfunc", file: !278, line: 316, baseType: !374)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 64, align: 64)
!375 = !DISubroutineType(types: !376)
!376 = !{!276, !276, !322}
!377 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattr", scope: !290, file: !278, line: 344, baseType: !378, size: 64, align: 64, offset: 576)
!378 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrfunc", file: !278, line: 318, baseType: !379)
!379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !380, size: 64, align: 64)
!380 = !DISubroutineType(types: !381)
!381 = !{!314, !276, !322, !276}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "tp_reserved", scope: !290, file: !278, line: 345, baseType: !275, size: 64, align: 64, offset: 640)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "tp_repr", scope: !290, file: !278, line: 346, baseType: !384, size: 64, align: 64, offset: 704)
!384 = !DIDerivedType(tag: DW_TAG_typedef, name: "reprfunc", file: !278, line: 320, baseType: !385)
!385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !386, size: 64, align: 64)
!386 = !DISubroutineType(types: !387)
!387 = !{!276, !276}
!388 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_number", scope: !290, file: !278, line: 350, baseType: !389, size: 64, align: 64, offset: 768)
!389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 64, align: 64)
!390 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyNumberMethods", file: !278, line: 278, baseType: !391)
!391 = !DICompositeType(tag: DW_TAG_structure_type, file: !278, line: 236, size: 2176, align: 64, elements: !392)
!392 = !{!393, !398, !399, !400, !401, !402, !407, !409, !410, !411, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439}
!393 = !DIDerivedType(tag: DW_TAG_member, name: "nb_add", scope: !391, file: !278, line: 241, baseType: !394, size: 64, align: 64)
!394 = !DIDerivedType(tag: DW_TAG_typedef, name: "binaryfunc", file: !278, line: 166, baseType: !395)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 64, align: 64)
!396 = !DISubroutineType(types: !397)
!397 = !{!276, !276, !276}
!398 = !DIDerivedType(tag: DW_TAG_member, name: "nb_subtract", scope: !391, file: !278, line: 242, baseType: !394, size: 64, align: 64, offset: 64)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "nb_multiply", scope: !391, file: !278, line: 243, baseType: !394, size: 64, align: 64, offset: 128)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "nb_remainder", scope: !391, file: !278, line: 244, baseType: !394, size: 64, align: 64, offset: 192)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "nb_divmod", scope: !391, file: !278, line: 245, baseType: !394, size: 64, align: 64, offset: 256)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "nb_power", scope: !391, file: !278, line: 246, baseType: !403, size: 64, align: 64, offset: 320)
!403 = !DIDerivedType(tag: DW_TAG_typedef, name: "ternaryfunc", file: !278, line: 167, baseType: !404)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64, align: 64)
!405 = !DISubroutineType(types: !406)
!406 = !{!276, !276, !276, !276}
!407 = !DIDerivedType(tag: DW_TAG_member, name: "nb_negative", scope: !391, file: !278, line: 247, baseType: !408, size: 64, align: 64, offset: 384)
!408 = !DIDerivedType(tag: DW_TAG_typedef, name: "unaryfunc", file: !278, line: 165, baseType: !385)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "nb_positive", scope: !391, file: !278, line: 248, baseType: !408, size: 64, align: 64, offset: 448)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "nb_absolute", scope: !391, file: !278, line: 249, baseType: !408, size: 64, align: 64, offset: 512)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bool", scope: !391, file: !278, line: 250, baseType: !412, size: 64, align: 64, offset: 576)
!412 = !DIDerivedType(tag: DW_TAG_typedef, name: "inquiry", file: !278, line: 168, baseType: !413)
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 64, align: 64)
!414 = !DISubroutineType(types: !415)
!415 = !{!314, !276}
!416 = !DIDerivedType(tag: DW_TAG_member, name: "nb_invert", scope: !391, file: !278, line: 251, baseType: !408, size: 64, align: 64, offset: 640)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "nb_lshift", scope: !391, file: !278, line: 252, baseType: !394, size: 64, align: 64, offset: 704)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "nb_rshift", scope: !391, file: !278, line: 253, baseType: !394, size: 64, align: 64, offset: 768)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "nb_and", scope: !391, file: !278, line: 254, baseType: !394, size: 64, align: 64, offset: 832)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "nb_xor", scope: !391, file: !278, line: 255, baseType: !394, size: 64, align: 64, offset: 896)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "nb_or", scope: !391, file: !278, line: 256, baseType: !394, size: 64, align: 64, offset: 960)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "nb_int", scope: !391, file: !278, line: 257, baseType: !408, size: 64, align: 64, offset: 1024)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "nb_reserved", scope: !391, file: !278, line: 258, baseType: !275, size: 64, align: 64, offset: 1088)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "nb_float", scope: !391, file: !278, line: 259, baseType: !408, size: 64, align: 64, offset: 1152)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_add", scope: !391, file: !278, line: 261, baseType: !394, size: 64, align: 64, offset: 1216)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_subtract", scope: !391, file: !278, line: 262, baseType: !394, size: 64, align: 64, offset: 1280)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_multiply", scope: !391, file: !278, line: 263, baseType: !394, size: 64, align: 64, offset: 1344)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_remainder", scope: !391, file: !278, line: 264, baseType: !394, size: 64, align: 64, offset: 1408)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_power", scope: !391, file: !278, line: 265, baseType: !403, size: 64, align: 64, offset: 1472)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_lshift", scope: !391, file: !278, line: 266, baseType: !394, size: 64, align: 64, offset: 1536)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_rshift", scope: !391, file: !278, line: 267, baseType: !394, size: 64, align: 64, offset: 1600)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_and", scope: !391, file: !278, line: 268, baseType: !394, size: 64, align: 64, offset: 1664)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_xor", scope: !391, file: !278, line: 269, baseType: !394, size: 64, align: 64, offset: 1728)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_or", scope: !391, file: !278, line: 270, baseType: !394, size: 64, align: 64, offset: 1792)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "nb_floor_divide", scope: !391, file: !278, line: 272, baseType: !394, size: 64, align: 64, offset: 1856)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "nb_true_divide", scope: !391, file: !278, line: 273, baseType: !394, size: 64, align: 64, offset: 1920)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_floor_divide", scope: !391, file: !278, line: 274, baseType: !394, size: 64, align: 64, offset: 1984)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_true_divide", scope: !391, file: !278, line: 275, baseType: !394, size: 64, align: 64, offset: 2048)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "nb_index", scope: !391, file: !278, line: 277, baseType: !408, size: 64, align: 64, offset: 2112)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_sequence", scope: !290, file: !278, line: 351, baseType: !441, size: 64, align: 64, offset: 832)
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 64, align: 64)
!442 = !DIDerivedType(tag: DW_TAG_typedef, name: "PySequenceMethods", file: !278, line: 292, baseType: !443)
!443 = !DICompositeType(tag: DW_TAG_structure_type, file: !278, line: 280, size: 640, align: 64, elements: !444)
!444 = !{!445, !450, !451, !456, !457, !458, !463, !464, !469, !470}
!445 = !DIDerivedType(tag: DW_TAG_member, name: "sq_length", scope: !443, file: !278, line: 281, baseType: !446, size: 64, align: 64)
!446 = !DIDerivedType(tag: DW_TAG_typedef, name: "lenfunc", file: !278, line: 169, baseType: !447)
!447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 64, align: 64)
!448 = !DISubroutineType(types: !449)
!449 = !{!282, !276}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "sq_concat", scope: !443, file: !278, line: 282, baseType: !394, size: 64, align: 64, offset: 64)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "sq_repeat", scope: !443, file: !278, line: 283, baseType: !452, size: 64, align: 64, offset: 128)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeargfunc", file: !278, line: 170, baseType: !453)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 64, align: 64)
!454 = !DISubroutineType(types: !455)
!455 = !{!276, !276, !282}
!456 = !DIDerivedType(tag: DW_TAG_member, name: "sq_item", scope: !443, file: !278, line: 284, baseType: !452, size: 64, align: 64, offset: 192)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_slice", scope: !443, file: !278, line: 285, baseType: !275, size: 64, align: 64, offset: 256)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "sq_ass_item", scope: !443, file: !278, line: 286, baseType: !459, size: 64, align: 64, offset: 320)
!459 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeobjargproc", file: !278, line: 172, baseType: !460)
!460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 64, align: 64)
!461 = !DISubroutineType(types: !462)
!462 = !{!314, !276, !282, !276}
!463 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_ass_slice", scope: !443, file: !278, line: 287, baseType: !275, size: 64, align: 64, offset: 384)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "sq_contains", scope: !443, file: !278, line: 288, baseType: !465, size: 64, align: 64, offset: 448)
!465 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjproc", file: !278, line: 231, baseType: !466)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64, align: 64)
!467 = !DISubroutineType(types: !468)
!468 = !{!314, !276, !276}
!469 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_concat", scope: !443, file: !278, line: 290, baseType: !394, size: 64, align: 64, offset: 512)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_repeat", scope: !443, file: !278, line: 291, baseType: !452, size: 64, align: 64, offset: 576)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_mapping", scope: !290, file: !278, line: 352, baseType: !472, size: 64, align: 64, offset: 896)
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64, align: 64)
!473 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMappingMethods", file: !278, line: 298, baseType: !474)
!474 = !DICompositeType(tag: DW_TAG_structure_type, file: !278, line: 294, size: 192, align: 64, elements: !475)
!475 = !{!476, !477, !478}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "mp_length", scope: !474, file: !278, line: 295, baseType: !446, size: 64, align: 64)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "mp_subscript", scope: !474, file: !278, line: 296, baseType: !394, size: 64, align: 64, offset: 64)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "mp_ass_subscript", scope: !474, file: !278, line: 297, baseType: !479, size: 64, align: 64, offset: 128)
!479 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjargproc", file: !278, line: 174, baseType: !480)
!480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !481, size: 64, align: 64)
!481 = !DISubroutineType(types: !482)
!482 = !{!314, !276, !276, !276}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "tp_hash", scope: !290, file: !278, line: 356, baseType: !484, size: 64, align: 64, offset: 960)
!484 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashfunc", file: !278, line: 321, baseType: !485)
!485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 64, align: 64)
!486 = !DISubroutineType(types: !487)
!487 = !{!488, !276}
!488 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_hash_t", file: !283, line: 186, baseType: !282)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "tp_call", scope: !290, file: !278, line: 357, baseType: !403, size: 64, align: 64, offset: 1024)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "tp_str", scope: !290, file: !278, line: 358, baseType: !384, size: 64, align: 64, offset: 1088)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattro", scope: !290, file: !278, line: 359, baseType: !492, size: 64, align: 64, offset: 1152)
!492 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrofunc", file: !278, line: 317, baseType: !395)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattro", scope: !290, file: !278, line: 360, baseType: !494, size: 64, align: 64, offset: 1216)
!494 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrofunc", file: !278, line: 319, baseType: !480)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_buffer", scope: !290, file: !278, line: 363, baseType: !496, size: 64, align: 64, offset: 1280)
!496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !497, size: 64, align: 64)
!497 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyBufferProcs", file: !278, line: 304, baseType: !498)
!498 = !DICompositeType(tag: DW_TAG_structure_type, file: !278, line: 301, size: 128, align: 64, elements: !499)
!499 = !{!500, !521}
!500 = !DIDerivedType(tag: DW_TAG_member, name: "bf_getbuffer", scope: !498, file: !278, line: 302, baseType: !501, size: 64, align: 64)
!501 = !DIDerivedType(tag: DW_TAG_typedef, name: "getbufferproc", file: !278, line: 193, baseType: !502)
!502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !503, size: 64, align: 64)
!503 = !DISubroutineType(types: !504)
!504 = !{!314, !276, !505, !314}
!505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !506, size: 64, align: 64)
!506 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_buffer", file: !278, line: 191, baseType: !507)
!507 = !DICompositeType(tag: DW_TAG_structure_type, name: "bufferinfo", file: !278, line: 178, size: 640, align: 64, elements: !508)
!508 = !{!509, !510, !511, !512, !513, !514, !515, !516, !518, !519, !520}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !507, file: !278, line: 179, baseType: !275, size: 64, align: 64)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "obj", scope: !507, file: !278, line: 180, baseType: !276, size: 64, align: 64, offset: 64)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !507, file: !278, line: 181, baseType: !282, size: 64, align: 64, offset: 128)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "itemsize", scope: !507, file: !278, line: 182, baseType: !282, size: 64, align: 64, offset: 192)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "readonly", scope: !507, file: !278, line: 184, baseType: !314, size: 32, align: 32, offset: 256)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "ndim", scope: !507, file: !278, line: 185, baseType: !314, size: 32, align: 32, offset: 288)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !507, file: !278, line: 186, baseType: !322, size: 64, align: 64, offset: 320)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "shape", scope: !507, file: !278, line: 187, baseType: !517, size: 64, align: 64, offset: 384)
!517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 64, align: 64)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "strides", scope: !507, file: !278, line: 188, baseType: !517, size: 64, align: 64, offset: 448)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "suboffsets", scope: !507, file: !278, line: 189, baseType: !517, size: 64, align: 64, offset: 512)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !507, file: !278, line: 190, baseType: !275, size: 64, align: 64, offset: 576)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "bf_releasebuffer", scope: !498, file: !278, line: 303, baseType: !522, size: 64, align: 64, offset: 64)
!522 = !DIDerivedType(tag: DW_TAG_typedef, name: "releasebufferproc", file: !278, line: 194, baseType: !523)
!523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !524, size: 64, align: 64)
!524 = !DISubroutineType(types: !525)
!525 = !{null, !276, !505}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "tp_flags", scope: !290, file: !278, line: 366, baseType: !366, size: 64, align: 64, offset: 1344)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "tp_doc", scope: !290, file: !278, line: 368, baseType: !299, size: 64, align: 64, offset: 1408)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "tp_traverse", scope: !290, file: !278, line: 372, baseType: !529, size: 64, align: 64, offset: 1472)
!529 = !DIDerivedType(tag: DW_TAG_typedef, name: "traverseproc", file: !278, line: 233, baseType: !530)
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 64, align: 64)
!531 = !DISubroutineType(types: !532)
!532 = !{!314, !276, !533, !275}
!533 = !DIDerivedType(tag: DW_TAG_typedef, name: "visitproc", file: !278, line: 232, baseType: !534)
!534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !535, size: 64, align: 64)
!535 = !DISubroutineType(types: !536)
!536 = !{!314, !276, !275}
!537 = !DIDerivedType(tag: DW_TAG_member, name: "tp_clear", scope: !290, file: !278, line: 375, baseType: !412, size: 64, align: 64, offset: 1536)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "tp_richcompare", scope: !290, file: !278, line: 379, baseType: !539, size: 64, align: 64, offset: 1600)
!539 = !DIDerivedType(tag: DW_TAG_typedef, name: "richcmpfunc", file: !278, line: 322, baseType: !540)
!540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !541, size: 64, align: 64)
!541 = !DISubroutineType(types: !542)
!542 = !{!276, !276, !276, !314}
!543 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklistoffset", scope: !290, file: !278, line: 382, baseType: !282, size: 64, align: 64, offset: 1664)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iter", scope: !290, file: !278, line: 385, baseType: !545, size: 64, align: 64, offset: 1728)
!545 = !DIDerivedType(tag: DW_TAG_typedef, name: "getiterfunc", file: !278, line: 323, baseType: !385)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iternext", scope: !290, file: !278, line: 386, baseType: !547, size: 64, align: 64, offset: 1792)
!547 = !DIDerivedType(tag: DW_TAG_typedef, name: "iternextfunc", file: !278, line: 324, baseType: !385)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "tp_methods", scope: !290, file: !278, line: 389, baseType: !549, size: 64, align: 64, offset: 1856)
!549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 64, align: 64)
!550 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyMethodDef", file: !551, line: 40, size: 256, align: 64, elements: !552)
!551 = !DIFile(filename: "Include/methodobject.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!552 = !{!553, !554, !556, !557}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "ml_name", scope: !550, file: !551, line: 41, baseType: !299, size: 64, align: 64)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "ml_meth", scope: !550, file: !551, line: 42, baseType: !555, size: 64, align: 64, offset: 64)
!555 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCFunction", file: !551, line: 18, baseType: !395)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flags", scope: !550, file: !551, line: 43, baseType: !314, size: 32, align: 32, offset: 128)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "ml_doc", scope: !550, file: !551, line: 45, baseType: !299, size: 64, align: 64, offset: 192)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "tp_members", scope: !290, file: !278, line: 390, baseType: !559, size: 64, align: 64, offset: 1920)
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !560, size: 64, align: 64)
!560 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyMemberDef", file: !278, line: 390, flags: DIFlagFwdDecl)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getset", scope: !290, file: !278, line: 391, baseType: !562, size: 64, align: 64, offset: 1984)
!562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !563, size: 64, align: 64)
!563 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyGetSetDef", file: !564, line: 11, size: 320, align: 64, elements: !565)
!564 = !DIFile(filename: "Include/descrobject.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!565 = !{!566, !567, !572, !577, !578}
!566 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !563, file: !564, line: 12, baseType: !322, size: 64, align: 64)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !563, file: !564, line: 13, baseType: !568, size: 64, align: 64, offset: 64)
!568 = !DIDerivedType(tag: DW_TAG_typedef, name: "getter", file: !564, line: 8, baseType: !569)
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 64, align: 64)
!570 = !DISubroutineType(types: !571)
!571 = !{!276, !276, !275}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !563, file: !564, line: 14, baseType: !573, size: 64, align: 64, offset: 128)
!573 = !DIDerivedType(tag: DW_TAG_typedef, name: "setter", file: !564, line: 9, baseType: !574)
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64, align: 64)
!575 = !DISubroutineType(types: !576)
!576 = !{!314, !276, !276, !275}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !563, file: !564, line: 15, baseType: !322, size: 64, align: 64, offset: 192)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "closure", scope: !563, file: !564, line: 16, baseType: !275, size: 64, align: 64, offset: 256)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "tp_base", scope: !290, file: !278, line: 392, baseType: !289, size: 64, align: 64, offset: 2048)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dict", scope: !290, file: !278, line: 393, baseType: !276, size: 64, align: 64, offset: 2112)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_get", scope: !290, file: !278, line: 394, baseType: !582, size: 64, align: 64, offset: 2176)
!582 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrgetfunc", file: !278, line: 325, baseType: !404)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_set", scope: !290, file: !278, line: 395, baseType: !584, size: 64, align: 64, offset: 2240)
!584 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrsetfunc", file: !278, line: 326, baseType: !480)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dictoffset", scope: !290, file: !278, line: 396, baseType: !282, size: 64, align: 64, offset: 2304)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "tp_init", scope: !290, file: !278, line: 397, baseType: !587, size: 64, align: 64, offset: 2368)
!587 = !DIDerivedType(tag: DW_TAG_typedef, name: "initproc", file: !278, line: 327, baseType: !480)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "tp_alloc", scope: !290, file: !278, line: 398, baseType: !589, size: 64, align: 64, offset: 2432)
!589 = !DIDerivedType(tag: DW_TAG_typedef, name: "allocfunc", file: !278, line: 329, baseType: !590)
!590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 64, align: 64)
!591 = !DISubroutineType(types: !592)
!592 = !{!276, !289, !282}
!593 = !DIDerivedType(tag: DW_TAG_member, name: "tp_new", scope: !290, file: !278, line: 399, baseType: !594, size: 64, align: 64, offset: 2496)
!594 = !DIDerivedType(tag: DW_TAG_typedef, name: "newfunc", file: !278, line: 328, baseType: !595)
!595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !596, size: 64, align: 64)
!596 = !DISubroutineType(types: !597)
!597 = !{!276, !289, !276, !276}
!598 = !DIDerivedType(tag: DW_TAG_member, name: "tp_free", scope: !290, file: !278, line: 400, baseType: !599, size: 64, align: 64, offset: 2560)
!599 = !DIDerivedType(tag: DW_TAG_typedef, name: "freefunc", file: !278, line: 307, baseType: !600)
!600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !601, size: 64, align: 64)
!601 = !DISubroutineType(types: !602)
!602 = !{null, !275}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "tp_is_gc", scope: !290, file: !278, line: 401, baseType: !412, size: 64, align: 64, offset: 2624)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "tp_bases", scope: !290, file: !278, line: 402, baseType: !276, size: 64, align: 64, offset: 2688)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "tp_mro", scope: !290, file: !278, line: 403, baseType: !276, size: 64, align: 64, offset: 2752)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "tp_cache", scope: !290, file: !278, line: 404, baseType: !276, size: 64, align: 64, offset: 2816)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "tp_subclasses", scope: !290, file: !278, line: 405, baseType: !276, size: 64, align: 64, offset: 2880)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklist", scope: !290, file: !278, line: 406, baseType: !276, size: 64, align: 64, offset: 2944)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "tp_del", scope: !290, file: !278, line: 407, baseType: !305, size: 64, align: 64, offset: 3008)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "tp_version_tag", scope: !290, file: !278, line: 410, baseType: !272, size: 32, align: 32, offset: 3072)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "tp_finalize", scope: !290, file: !278, line: 412, baseType: !305, size: 64, align: 64, offset: 3136)
!612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64, align: 64)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !273, size: 64, align: 64)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 64, align: 64)
!615 = !DIDerivedType(tag: DW_TAG_typedef, name: "path_t", file: !1, line: 775, baseType: !616)
!616 = !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 764, size: 576, align: 64, elements: !617)
!617 = !{!618, !619, !620, !621, !622, !625, !626, !627, !628, !629}
!618 = !DIDerivedType(tag: DW_TAG_member, name: "function_name", scope: !616, file: !1, line: 765, baseType: !299, size: 64, align: 64)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "argument_name", scope: !616, file: !1, line: 766, baseType: !299, size: 64, align: 64, offset: 64)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "nullable", scope: !616, file: !1, line: 767, baseType: !314, size: 32, align: 32, offset: 128)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "allow_fd", scope: !616, file: !1, line: 768, baseType: !314, size: 32, align: 32, offset: 160)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "wide", scope: !616, file: !1, line: 769, baseType: !623, size: 64, align: 64, offset: 192)
!623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 64, align: 64)
!624 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !365, line: 90, baseType: !314)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "narrow", scope: !616, file: !1, line: 770, baseType: !322, size: 64, align: 64, offset: 256)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !616, file: !1, line: 771, baseType: !314, size: 32, align: 32, offset: 320)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !616, file: !1, line: 772, baseType: !282, size: 64, align: 64, offset: 384)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !616, file: !1, line: 773, baseType: !276, size: 64, align: 64, offset: 448)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !616, file: !1, line: 774, baseType: !276, size: 64, align: 64, offset: 512)
!630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64, align: 64)
!631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 64, align: 64)
!632 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyBytesObject", file: !633, line: 41, baseType: !634)
!633 = !DIFile(filename: "Include/bytesobject.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!634 = !DICompositeType(tag: DW_TAG_structure_type, file: !633, line: 31, size: 320, align: 64, elements: !635)
!635 = !{!636, !637, !638}
!636 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !634, file: !633, line: 32, baseType: !293, size: 192, align: 64)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "ob_shash", scope: !634, file: !633, line: 33, baseType: !488, size: 64, align: 64, offset: 192)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "ob_sval", scope: !634, file: !633, line: 34, baseType: !351, size: 8, align: 8, offset: 256)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 64, align: 64)
!640 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTupleObject", file: !641, line: 33, baseType: !642)
!641 = !DIFile(filename: "Include/tupleobject.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!642 = !DICompositeType(tag: DW_TAG_structure_type, file: !641, line: 25, size: 256, align: 64, elements: !643)
!643 = !{!644, !645}
!644 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !642, file: !641, line: 26, baseType: !293, size: 192, align: 64)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "ob_item", scope: !642, file: !641, line: 27, baseType: !646, size: 64, align: 64, offset: 192)
!646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !276, size: 64, align: 64, elements: !352)
!647 = !DIBasicType(name: "long long int", size: 64, align: 64, encoding: DW_ATE_signed)
!648 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_t", file: !649, line: 59, baseType: !650)
!649 = !DIFile(filename: "/usr/include/time.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!650 = !DIDerivedType(tag: DW_TAG_typedef, name: "__clock_t", file: !271, line: 144, baseType: !287)
!651 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !322, size: 64, align: 64)
!653 = !DIDerivedType(tag: DW_TAG_typedef, name: "__cpu_mask", file: !654, line: 119, baseType: !366)
!654 = !DIFile(filename: "/usr/include/bits/sched.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 64, align: 64)
!656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !657, size: 64, align: 64)
!657 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !653)
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 64, align: 64)
!659 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyListObject", file: !660, line: 40, baseType: !661)
!660 = !DIFile(filename: "Include/listobject.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!661 = !DICompositeType(tag: DW_TAG_structure_type, file: !660, line: 23, size: 320, align: 64, elements: !662)
!662 = !{!663, !664, !666}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !661, file: !660, line: 24, baseType: !293, size: 192, align: 64)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "ob_item", scope: !661, file: !660, line: 26, baseType: !665, size: 64, align: 64, offset: 192)
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 64, align: 64)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !661, file: !660, line: 39, baseType: !282, size: 64, align: 64, offset: 256)
!667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !668, size: 64, align: 64)
!668 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTypeObject", file: !278, line: 422, baseType: !290)
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 64, align: 64)
!670 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !285, line: 92, baseType: !358)
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 64, align: 64)
!672 = !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !673, line: 43, size: 128, align: 64, elements: !674)
!673 = !DIFile(filename: "/usr/include/bits/uio.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!674 = !{!675, !676}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !672, file: !673, line: 45, baseType: !275, size: 64, align: 64)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !672, file: !673, line: 46, baseType: !364, size: 64, align: 64, offset: 64)
!677 = !DIBasicType(name: "long long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 64, align: 64)
!679 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !680)
!680 = !DICompositeType(tag: DW_TAG_structure_type, name: "constdef", file: !1, line: 9331, size: 128, align: 64, elements: !681)
!681 = !{!682, !683}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !680, file: !1, line: 9332, baseType: !322, size: 64, align: 64)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !680, file: !1, line: 9333, baseType: !287, size: 64, align: 64, offset: 64)
!684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !685, size: 64, align: 64)
!685 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyStructSequence", file: !686, line: 35, baseType: !640)
!686 = !DIFile(filename: "Include/structseq.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 64, align: 64)
!688 = !{!689, !694, !699, !712, !725, !745, !780, !805, !817, !825, !928, !935, !942, !947, !974, !980, !988, !992, !997, !1011, !1050, !1063, !1074, !1091, !1100, !1107, !1109, !1119, !1133, !1142, !1156, !1166, !1176, !1180, !1195, !1204, !1207, !1219, !1222, !1236, !1242, !1250, !1327, !1336, !1348, !1354, !1361, !1369, !1384, !1389, !1408, !1413, !1424, !1429, !1442, !1453, !1458, !1509, !1520, !1553, !1569, !1582, !1593, !1601, !1607, !1620, !1660, !1665, !1688, !1706, !1716, !1723, !1735, !1784, !1792, !1798, !1804, !1819, !1825, !1831, !1837, !1845, !1852, !1856, !1901, !1931, !1937, !1944, !1948, !1952, !1956, !1974, !1996, !2000, !2004, !2008, !2012, !2019, !2025, !2031, !2036, !2041, !2046, !2052, !2058, !2063, !2085, !2095, !2101, !2105, !2113, !2203, !2221, !2231, !2309, !2318, !2324, !2328, !2334, !2340, !2346, !2360, !2368, !2377, !2382, !2387, !2405, !2415, !2419, !2430, !2444, !2456, !2481, !2489, !2504, !2514, !2526, !2536, !2553, !2562, !2567, !2580, !2587, !2599, !2612, !2620, !2627, !2632, !2638, !2643, !2646, !2652, !2658, !2667, !2678, !2688, !2699, !2726, !2738, !2744, !2748, !2761, !2765, !2771, !2775, !2780, !2785, !2790, !2795, !2800, !2805, !2810, !2815, !2841, !2851, !2862, !2876, !2882, !2902, !2911, !2915, !2925, !2929, !2940, !2944, !2950, !2961, !2968, !2975, !2982, !2989, !3003, !3025, !3037, !3075, !3096, !3100, !3106, !3112, !3130, !3133, !3136, !3161, !3174, !3190, !3197, !3203, !3209, !3213, !3218, !3222}
!689 = !DISubprogram(name: "_PyLong_FromUid", scope: !1, file: !1, line: 396, type: !690, isLocal: false, isDefinition: true, scopeLine: 397, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i32)* @_PyLong_FromUid, variables: !692)
!690 = !DISubroutineType(types: !691)
!691 = !{!276, !268}
!692 = !{!693}
!693 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "uid", arg: 1, scope: !689, file: !1, line: 396, type: !268)
!694 = !DISubprogram(name: "_PyLong_FromGid", scope: !1, file: !1, line: 404, type: !695, isLocal: false, isDefinition: true, scopeLine: 405, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i32)* @_PyLong_FromGid, variables: !697)
!695 = !DISubroutineType(types: !696)
!696 = !{!276, !273}
!697 = !{!698}
!698 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "gid", arg: 1, scope: !694, file: !1, line: 404, type: !273)
!699 = !DISubprogram(name: "_Py_Uid_Converter", scope: !1, file: !1, line: 412, type: !535, isLocal: false, isDefinition: true, scopeLine: 413, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i8*)* @_Py_Uid_Converter, variables: !700)
!700 = !{!701, !702, !703, !704, !705, !706, !707, !708, !710}
!701 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "obj", arg: 1, scope: !699, file: !1, line: 412, type: !276)
!702 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "p", arg: 2, scope: !699, file: !1, line: 412, type: !275)
!703 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "uid", scope: !699, file: !1, line: 414, type: !268)
!704 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !699, file: !1, line: 415, type: !276)
!705 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "overflow", scope: !699, file: !1, line: 416, type: !314)
!706 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !699, file: !1, line: 417, type: !287)
!707 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "uresult", scope: !699, file: !1, line: 418, type: !366)
!708 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !709, file: !1, line: 498, type: !276)
!709 = distinct !DILexicalBlock(scope: !699, file: !1, line: 498, column: 5)
!710 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !711, file: !1, line: 513, type: !276)
!711 = distinct !DILexicalBlock(scope: !699, file: !1, line: 513, column: 5)
!712 = !DISubprogram(name: "_Py_Gid_Converter", scope: !1, file: !1, line: 518, type: !535, isLocal: false, isDefinition: true, scopeLine: 519, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i8*)* @_Py_Gid_Converter, variables: !713)
!713 = !{!714, !715, !716, !717, !718, !719, !720, !721, !723}
!714 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "obj", arg: 1, scope: !712, file: !1, line: 518, type: !276)
!715 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "p", arg: 2, scope: !712, file: !1, line: 518, type: !275)
!716 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "gid", scope: !712, file: !1, line: 520, type: !273)
!717 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !712, file: !1, line: 521, type: !276)
!718 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "overflow", scope: !712, file: !1, line: 522, type: !314)
!719 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !712, file: !1, line: 523, type: !287)
!720 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "uresult", scope: !712, file: !1, line: 524, type: !366)
!721 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !722, file: !1, line: 605, type: !276)
!722 = distinct !DILexicalBlock(scope: !712, file: !1, line: 605, column: 5)
!723 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !724, file: !1, line: 620, type: !276)
!724 = distinct !DILexicalBlock(scope: !712, file: !1, line: 620, column: 5)
!725 = !DISubprogram(name: "PyInit_posix", scope: !1, file: !1, line: 12208, type: !726, isLocal: false, isDefinition: true, scopeLine: 12209, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* ()* @PyInit_posix, variables: !728)
!726 = !DISubroutineType(types: !727)
!727 = !{!276}
!728 = !{!729, !730, !731, !732, !733, !735, !737, !739, !743}
!729 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "m", scope: !725, file: !1, line: 12210, type: !276)
!730 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "v", scope: !725, file: !1, line: 12210, type: !276)
!731 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "list", scope: !725, file: !1, line: 12211, type: !276)
!732 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "trace", scope: !725, file: !1, line: 12212, type: !652)
!733 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xincref_tmp", scope: !734, file: !1, line: 12224, type: !276)
!734 = distinct !DILexicalBlock(scope: !725, file: !1, line: 12224, column: 5)
!735 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !736, file: !1, line: 12227, type: !276)
!736 = distinct !DILexicalBlock(scope: !725, file: !1, line: 12227, column: 5)
!737 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ignored", scope: !738, file: !1, line: 12357, type: !314)
!738 = distinct !DILexicalBlock(scope: !725, file: !1, line: 12356, column: 5)
!739 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "unicode", scope: !740, file: !1, line: 12373, type: !276)
!740 = distinct !DILexicalBlock(scope: !741, file: !1, line: 12372, column: 51)
!741 = distinct !DILexicalBlock(scope: !742, file: !1, line: 12372, column: 5)
!742 = distinct !DILexicalBlock(scope: !725, file: !1, line: 12372, column: 5)
!743 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !744, file: !1, line: 12378, type: !276)
!744 = distinct !DILexicalBlock(scope: !740, file: !1, line: 12378, column: 9)
!745 = !DISubprogram(name: "os_stat", scope: !1, file: !1, line: 2480, type: !746, isLocal: true, isDefinition: true, scopeLine: 2481, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct._object*, %struct._object*)* @os_stat, variables: !772)
!746 = !DISubroutineType(types: !747)
!747 = !{!276, !748, !276, !276}
!748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !749, size: 64, align: 64)
!749 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyModuleDef", file: !750, line: 57, baseType: !751)
!750 = !DIFile(filename: "Include/moduleobject.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!751 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyModuleDef", file: !750, line: 47, size: 832, align: 64, elements: !752)
!752 = !{!753, !762, !763, !764, !765, !768, !769, !770, !771}
!753 = !DIDerivedType(tag: DW_TAG_member, name: "m_base", scope: !751, file: !750, line: 48, baseType: !754, size: 320, align: 64)
!754 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyModuleDef_Base", file: !750, line: 38, baseType: !755)
!755 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyModuleDef_Base", file: !750, line: 33, size: 320, align: 64, elements: !756)
!756 = !{!757, !758, !760, !761}
!757 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !755, file: !750, line: 34, baseType: !277, size: 128, align: 64)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "m_init", scope: !755, file: !750, line: 35, baseType: !759, size: 64, align: 64, offset: 128)
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !726, size: 64, align: 64)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "m_index", scope: !755, file: !750, line: 36, baseType: !282, size: 64, align: 64, offset: 192)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "m_copy", scope: !755, file: !750, line: 37, baseType: !276, size: 64, align: 64, offset: 256)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "m_name", scope: !751, file: !750, line: 49, baseType: !299, size: 64, align: 64, offset: 320)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "m_doc", scope: !751, file: !750, line: 50, baseType: !299, size: 64, align: 64, offset: 384)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !751, file: !750, line: 51, baseType: !282, size: 64, align: 64, offset: 448)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "m_methods", scope: !751, file: !750, line: 52, baseType: !766, size: 64, align: 64, offset: 512)
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 64, align: 64)
!767 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMethodDef", file: !551, line: 47, baseType: !550)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "m_reload", scope: !751, file: !750, line: 53, baseType: !412, size: 64, align: 64, offset: 576)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "m_traverse", scope: !751, file: !750, line: 54, baseType: !529, size: 64, align: 64, offset: 640)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "m_clear", scope: !751, file: !750, line: 55, baseType: !412, size: 64, align: 64, offset: 704)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "m_free", scope: !751, file: !750, line: 56, baseType: !599, size: 64, align: 64, offset: 768)
!772 = !{!773, !774, !775, !776, !777, !778, !779}
!773 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !745, file: !1, line: 2480, type: !748)
!774 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !745, file: !1, line: 2480, type: !276)
!775 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !745, file: !1, line: 2480, type: !276)
!776 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !745, file: !1, line: 2482, type: !276)
!777 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "path", scope: !745, file: !1, line: 2484, type: !615)
!778 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dir_fd", scope: !745, file: !1, line: 2485, type: !314)
!779 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "follow_symlinks", scope: !745, file: !1, line: 2486, type: !314)
!780 = !DISubprogram(name: "path_converter", scope: !1, file: !1, line: 788, type: !535, isLocal: true, isDefinition: true, scopeLine: 788, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i8*)* @path_converter, variables: !781)
!781 = !{!782, !783, !784, !785, !786, !787, !788, !789, !792, !794, !800, !801}
!782 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "o", arg: 1, scope: !780, file: !1, line: 788, type: !276)
!783 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "p", arg: 2, scope: !780, file: !1, line: 788, type: !275)
!784 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "path", scope: !780, file: !1, line: 789, type: !614)
!785 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "unicode", scope: !780, file: !1, line: 790, type: !276)
!786 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bytes", scope: !780, file: !1, line: 790, type: !276)
!787 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "length", scope: !780, file: !1, line: 791, type: !282)
!788 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "narrow", scope: !780, file: !1, line: 792, type: !322)
!789 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "converted", scope: !790, file: !1, line: 847, type: !314)
!790 = distinct !DILexicalBlock(scope: !791, file: !1, line: 824, column: 18)
!791 = distinct !DILexicalBlock(scope: !780, file: !1, line: 824, column: 9)
!792 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !793, file: !1, line: 848, type: !276)
!793 = distinct !DILexicalBlock(scope: !790, file: !1, line: 848, column: 9)
!794 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !795, file: !1, line: 862, type: !314)
!795 = distinct !DILexicalBlock(scope: !796, file: !1, line: 861, column: 33)
!796 = distinct !DILexicalBlock(scope: !797, file: !1, line: 861, column: 17)
!797 = distinct !DILexicalBlock(scope: !798, file: !1, line: 859, column: 21)
!798 = distinct !DILexicalBlock(scope: !799, file: !1, line: 859, column: 13)
!799 = distinct !DILexicalBlock(scope: !791, file: !1, line: 853, column: 10)
!800 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !795, file: !1, line: 863, type: !314)
!801 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !802, file: !1, line: 902, type: !276)
!802 = distinct !DILexicalBlock(scope: !803, file: !1, line: 902, column: 9)
!803 = distinct !DILexicalBlock(scope: !804, file: !1, line: 900, column: 35)
!804 = distinct !DILexicalBlock(scope: !780, file: !1, line: 900, column: 9)
!805 = !DISubprogram(name: "_fd_converter", scope: !1, file: !1, line: 640, type: !806, isLocal: true, isDefinition: true, scopeLine: 641, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i32*, i8*)* @_fd_converter, variables: !808)
!806 = !DISubroutineType(types: !807)
!807 = !{!314, !276, !687, !299}
!808 = !{!809, !810, !811, !812, !813, !814, !815}
!809 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "o", arg: 1, scope: !805, file: !1, line: 640, type: !276)
!810 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "p", arg: 2, scope: !805, file: !1, line: 640, type: !687)
!811 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "allowed", arg: 3, scope: !805, file: !1, line: 640, type: !299)
!812 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "overflow", scope: !805, file: !1, line: 642, type: !314)
!813 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "long_value", scope: !805, file: !1, line: 643, type: !287)
!814 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !805, file: !1, line: 645, type: !276)
!815 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !816, file: !1, line: 654, type: !276)
!816 = distinct !DILexicalBlock(scope: !805, file: !1, line: 654, column: 5)
!817 = !DISubprogram(name: "os_stat_impl", scope: !1, file: !1, line: 2502, type: !818, isLocal: true, isDefinition: true, scopeLine: 2504, flags: DIFlagPrototyped, isOptimized: true, variables: !820)
!818 = !DISubroutineType(types: !819)
!819 = !{!276, !748, !614, !314, !314}
!820 = !{!821, !822, !823, !824}
!821 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !817, file: !1, line: 2502, type: !748)
!822 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "path", arg: 2, scope: !817, file: !1, line: 2502, type: !614)
!823 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dir_fd", arg: 3, scope: !817, file: !1, line: 2502, type: !314)
!824 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "follow_symlinks", arg: 4, scope: !817, file: !1, line: 2502, type: !314)
!825 = !DISubprogram(name: "posix_do_stat", scope: !1, file: !1, line: 2313, type: !826, isLocal: true, isDefinition: true, scopeLine: 2315, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.path_t*, i32, i32)* @posix_do_stat, variables: !828)
!826 = !DISubroutineType(types: !827)
!827 = !{!276, !322, !614, !314, !314}
!828 = !{!829, !830, !831, !832, !833, !867, !868}
!829 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "function_name", arg: 1, scope: !825, file: !1, line: 2313, type: !322)
!830 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "path", arg: 2, scope: !825, file: !1, line: 2313, type: !614)
!831 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dir_fd", arg: 3, scope: !825, file: !1, line: 2314, type: !314)
!832 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "follow_symlinks", arg: 4, scope: !825, file: !1, line: 2314, type: !314)
!833 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "st", scope: !825, file: !1, line: 2316, type: !834)
!834 = !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !835, line: 46, size: 1152, align: 64, elements: !836)
!835 = !DIFile(filename: "/usr/include/bits/stat.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!836 = !{!837, !839, !841, !843, !845, !846, !847, !848, !849, !850, !852, !854, !861, !862, !863}
!837 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !834, file: !835, line: 48, baseType: !838, size: 64, align: 64)
!838 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !271, line: 133, baseType: !366)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !834, file: !835, line: 53, baseType: !840, size: 64, align: 64, offset: 64)
!840 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !271, line: 136, baseType: !366)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !834, file: !835, line: 61, baseType: !842, size: 64, align: 64, offset: 128)
!842 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !271, line: 139, baseType: !366)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !834, file: !835, line: 62, baseType: !844, size: 32, align: 32, offset: 192)
!844 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !271, line: 138, baseType: !272)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !834, file: !835, line: 64, baseType: !270, size: 32, align: 32, offset: 224)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !834, file: !835, line: 65, baseType: !274, size: 32, align: 32, offset: 256)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !834, file: !835, line: 67, baseType: !314, size: 32, align: 32, offset: 288)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !834, file: !835, line: 69, baseType: !838, size: 64, align: 64, offset: 320)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !834, file: !835, line: 74, baseType: !345, size: 64, align: 64, offset: 384)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !834, file: !835, line: 78, baseType: !851, size: 64, align: 64, offset: 448)
!851 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !271, line: 162, baseType: !287)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !834, file: !835, line: 80, baseType: !853, size: 64, align: 64, offset: 512)
!853 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !271, line: 167, baseType: !287)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !834, file: !835, line: 91, baseType: !855, size: 128, align: 64, offset: 576)
!855 = !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !649, line: 120, size: 128, align: 64, elements: !856)
!856 = !{!857, !859}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !855, file: !649, line: 122, baseType: !858, size: 64, align: 64)
!858 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !271, line: 148, baseType: !287)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !855, file: !649, line: 123, baseType: !860, size: 64, align: 64, offset: 64)
!860 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !271, line: 184, baseType: !287)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !834, file: !835, line: 92, baseType: !855, size: 128, align: 64, offset: 704)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !834, file: !835, line: 93, baseType: !855, size: 128, align: 64, offset: 832)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "__unused", scope: !834, file: !835, line: 106, baseType: !864, size: 192, align: 64, offset: 960)
!864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !860, size: 192, align: 64, elements: !865)
!865 = !{!866}
!866 = !DISubrange(count: 3)
!867 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !825, file: !1, line: 2317, type: !314)
!868 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !869, file: !1, line: 2329, type: !870)
!869 = distinct !DILexicalBlock(scope: !825, file: !1, line: 2329, column: 5)
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 64, align: 64)
!871 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyThreadState", file: !872, line: 139, baseType: !873)
!872 = !DIFile(filename: "Include/pystate.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!873 = !DICompositeType(tag: DW_TAG_structure_type, name: "_ts", file: !872, line: 69, size: 1536, align: 64, elements: !874)
!874 = !{!875, !877, !878, !898, !901, !902, !903, !904, !905, !906, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !873, file: !872, line: 72, baseType: !876, size: 64, align: 64)
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64, align: 64)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !873, file: !872, line: 73, baseType: !876, size: 64, align: 64, offset: 64)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "interp", scope: !873, file: !872, line: 74, baseType: !879, size: 64, align: 64, offset: 128)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64, align: 64)
!880 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyInterpreterState", file: !872, line: 44, baseType: !881)
!881 = !DICompositeType(tag: DW_TAG_structure_type, name: "_is", file: !872, line: 19, size: 832, align: 64, elements: !882)
!882 = !{!883, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !881, file: !872, line: 21, baseType: !884, size: 64, align: 64)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64, align: 64)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "tstate_head", scope: !881, file: !872, line: 22, baseType: !876, size: 64, align: 64, offset: 64)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "modules", scope: !881, file: !872, line: 24, baseType: !276, size: 64, align: 64, offset: 128)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "modules_by_index", scope: !881, file: !872, line: 25, baseType: !276, size: 64, align: 64, offset: 192)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "sysdict", scope: !881, file: !872, line: 26, baseType: !276, size: 64, align: 64, offset: 256)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "builtins", scope: !881, file: !872, line: 27, baseType: !276, size: 64, align: 64, offset: 320)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "importlib", scope: !881, file: !872, line: 28, baseType: !276, size: 64, align: 64, offset: 384)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "codec_search_path", scope: !881, file: !872, line: 30, baseType: !276, size: 64, align: 64, offset: 448)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "codec_search_cache", scope: !881, file: !872, line: 31, baseType: !276, size: 64, align: 64, offset: 512)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "codec_error_registry", scope: !881, file: !872, line: 32, baseType: !276, size: 64, align: 64, offset: 576)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "codecs_initialized", scope: !881, file: !872, line: 33, baseType: !314, size: 32, align: 32, offset: 640)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "fscodec_initialized", scope: !881, file: !872, line: 34, baseType: !314, size: 32, align: 32, offset: 672)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "dlopenflags", scope: !881, file: !872, line: 37, baseType: !314, size: 32, align: 32, offset: 704)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "builtins_copy", scope: !881, file: !872, line: 43, baseType: !276, size: 64, align: 64, offset: 768)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !873, file: !872, line: 76, baseType: !899, size: 64, align: 64, offset: 192)
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 64, align: 64)
!900 = !DICompositeType(tag: DW_TAG_structure_type, name: "_frame", file: !872, line: 50, flags: DIFlagFwdDecl)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "recursion_depth", scope: !873, file: !872, line: 77, baseType: !314, size: 32, align: 32, offset: 256)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "overflowed", scope: !873, file: !872, line: 78, baseType: !301, size: 8, align: 8, offset: 288)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "recursion_critical", scope: !873, file: !872, line: 80, baseType: !301, size: 8, align: 8, offset: 296)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "tracing", scope: !873, file: !872, line: 85, baseType: !314, size: 32, align: 32, offset: 320)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "use_tracing", scope: !873, file: !872, line: 86, baseType: !314, size: 32, align: 32, offset: 352)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "c_profilefunc", scope: !873, file: !872, line: 88, baseType: !907, size: 64, align: 64, offset: 384)
!907 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_tracefunc", file: !872, line: 54, baseType: !908)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64, align: 64)
!909 = !DISubroutineType(types: !910)
!910 = !{!314, !276, !899, !314, !276}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "c_tracefunc", scope: !873, file: !872, line: 89, baseType: !907, size: 64, align: 64, offset: 448)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "c_profileobj", scope: !873, file: !872, line: 90, baseType: !276, size: 64, align: 64, offset: 512)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "c_traceobj", scope: !873, file: !872, line: 91, baseType: !276, size: 64, align: 64, offset: 576)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "curexc_type", scope: !873, file: !872, line: 93, baseType: !276, size: 64, align: 64, offset: 640)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "curexc_value", scope: !873, file: !872, line: 94, baseType: !276, size: 64, align: 64, offset: 704)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "curexc_traceback", scope: !873, file: !872, line: 95, baseType: !276, size: 64, align: 64, offset: 768)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "exc_type", scope: !873, file: !872, line: 97, baseType: !276, size: 64, align: 64, offset: 832)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "exc_value", scope: !873, file: !872, line: 98, baseType: !276, size: 64, align: 64, offset: 896)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "exc_traceback", scope: !873, file: !872, line: 99, baseType: !276, size: 64, align: 64, offset: 960)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !873, file: !872, line: 101, baseType: !276, size: 64, align: 64, offset: 1024)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "gilstate_counter", scope: !873, file: !872, line: 103, baseType: !314, size: 32, align: 32, offset: 1088)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "async_exc", scope: !873, file: !872, line: 105, baseType: !276, size: 64, align: 64, offset: 1152)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "thread_id", scope: !873, file: !872, line: 106, baseType: !287, size: 64, align: 64, offset: 1216)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "trash_delete_nesting", scope: !873, file: !872, line: 108, baseType: !314, size: 32, align: 32, offset: 1280)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "trash_delete_later", scope: !873, file: !872, line: 109, baseType: !276, size: 64, align: 64, offset: 1344)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "on_delete", scope: !873, file: !872, line: 134, baseType: !600, size: 64, align: 64, offset: 1408)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "on_delete_data", scope: !873, file: !872, line: 135, baseType: !275, size: 64, align: 64, offset: 1472)
!928 = !DISubprogram(name: "path_and_dir_fd_invalid", scope: !1, file: !1, line: 957, type: !929, isLocal: true, isDefinition: true, scopeLine: 957, flags: DIFlagPrototyped, isOptimized: true, variables: !931)
!929 = !DISubroutineType(types: !930)
!930 = !{!314, !322, !614, !314}
!931 = !{!932, !933, !934}
!932 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "function_name", arg: 1, scope: !928, file: !1, line: 957, type: !322)
!933 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "path", arg: 2, scope: !928, file: !1, line: 957, type: !614)
!934 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dir_fd", arg: 3, scope: !928, file: !1, line: 957, type: !314)
!935 = !DISubprogram(name: "dir_fd_and_fd_invalid", scope: !1, file: !1, line: 968, type: !936, isLocal: true, isDefinition: true, scopeLine: 968, flags: DIFlagPrototyped, isOptimized: true, variables: !938)
!936 = !DISubroutineType(types: !937)
!937 = !{!314, !322, !314, !314}
!938 = !{!939, !940, !941}
!939 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "function_name", arg: 1, scope: !935, file: !1, line: 968, type: !322)
!940 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dir_fd", arg: 2, scope: !935, file: !1, line: 968, type: !314)
!941 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fd", arg: 3, scope: !935, file: !1, line: 968, type: !314)
!942 = !DISubprogram(name: "fd_and_follow_symlinks_invalid", scope: !1, file: !1, line: 979, type: !936, isLocal: true, isDefinition: true, scopeLine: 980, flags: DIFlagPrototyped, isOptimized: true, variables: !943)
!943 = !{!944, !945, !946}
!944 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "function_name", arg: 1, scope: !942, file: !1, line: 979, type: !322)
!945 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fd", arg: 2, scope: !942, file: !1, line: 979, type: !314)
!946 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "follow_symlinks", arg: 3, scope: !942, file: !1, line: 980, type: !314)
!947 = !DISubprogram(name: "fstat64", scope: !948, file: !948, line: 517, type: !949, isLocal: false, isDefinition: true, scopeLine: 518, flags: DIFlagPrototyped, isOptimized: true, variables: !971)
!948 = !DIFile(filename: "/usr/include/sys/stat.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!949 = !DISubroutineType(types: !950)
!950 = !{!314, !314, !951}
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 64, align: 64)
!952 = !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !835, line: 119, size: 1152, align: 64, elements: !953)
!953 = !{!954, !955, !957, !958, !959, !960, !961, !962, !963, !964, !965, !967, !968, !969, !970}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !952, file: !835, line: 121, baseType: !838, size: 64, align: 64)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !952, file: !835, line: 123, baseType: !956, size: 64, align: 64, offset: 64)
!956 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !271, line: 137, baseType: !366)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !952, file: !835, line: 124, baseType: !842, size: 64, align: 64, offset: 128)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !952, file: !835, line: 125, baseType: !844, size: 32, align: 32, offset: 192)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !952, file: !835, line: 132, baseType: !270, size: 32, align: 32, offset: 224)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !952, file: !835, line: 133, baseType: !274, size: 32, align: 32, offset: 256)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !952, file: !835, line: 135, baseType: !314, size: 32, align: 32, offset: 288)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !952, file: !835, line: 136, baseType: !838, size: 64, align: 64, offset: 320)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !952, file: !835, line: 137, baseType: !345, size: 64, align: 64, offset: 384)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !952, file: !835, line: 143, baseType: !851, size: 64, align: 64, offset: 448)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !952, file: !835, line: 144, baseType: !966, size: 64, align: 64, offset: 512)
!966 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !271, line: 168, baseType: !287)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !952, file: !835, line: 152, baseType: !855, size: 128, align: 64, offset: 576)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !952, file: !835, line: 153, baseType: !855, size: 128, align: 64, offset: 704)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !952, file: !835, line: 154, baseType: !855, size: 128, align: 64, offset: 832)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "__unused", scope: !952, file: !835, line: 164, baseType: !864, size: 192, align: 64, offset: 960)
!971 = !{!972, !973}
!972 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "__fd", arg: 1, scope: !947, file: !948, line: 517, type: !314)
!973 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "__statbuf", arg: 2, scope: !947, file: !948, line: 517, type: !951)
!974 = !DISubprogram(name: "lstat64", scope: !948, file: !948, line: 510, type: !975, isLocal: false, isDefinition: true, scopeLine: 511, flags: DIFlagPrototyped, isOptimized: true, variables: !977)
!975 = !DISubroutineType(types: !976)
!976 = !{!314, !299, !951}
!977 = !{!978, !979}
!978 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "__path", arg: 1, scope: !974, file: !948, line: 510, type: !299)
!979 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "__statbuf", arg: 2, scope: !974, file: !948, line: 510, type: !951)
!980 = !DISubprogram(name: "fstatat64", scope: !948, file: !948, line: 524, type: !981, isLocal: false, isDefinition: true, scopeLine: 526, flags: DIFlagPrototyped, isOptimized: true, variables: !983)
!981 = !DISubroutineType(types: !982)
!982 = !{!314, !314, !299, !951, !314}
!983 = !{!984, !985, !986, !987}
!984 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "__fd", arg: 1, scope: !980, file: !948, line: 524, type: !314)
!985 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "__filename", arg: 2, scope: !980, file: !948, line: 524, type: !299)
!986 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "__statbuf", arg: 3, scope: !980, file: !948, line: 524, type: !951)
!987 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "__flag", arg: 4, scope: !980, file: !948, line: 524, type: !314)
!988 = !DISubprogram(name: "stat64", scope: !948, file: !948, line: 503, type: !975, isLocal: false, isDefinition: true, scopeLine: 504, flags: DIFlagPrototyped, isOptimized: true, variables: !989)
!989 = !{!990, !991}
!990 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "__path", arg: 1, scope: !988, file: !948, line: 503, type: !299)
!991 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "__statbuf", arg: 2, scope: !988, file: !948, line: 503, type: !951)
!992 = !DISubprogram(name: "path_error", scope: !1, file: !1, line: 1305, type: !993, isLocal: true, isDefinition: true, scopeLine: 1306, flags: DIFlagPrototyped, isOptimized: true, variables: !995)
!993 = !DISubroutineType(types: !994)
!994 = !{!276, !614}
!995 = !{!996}
!996 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "path", arg: 1, scope: !992, file: !1, line: 1305, type: !614)
!997 = !DISubprogram(name: "_pystat_fromstructstat", scope: !1, file: !1, line: 2205, type: !998, isLocal: true, isDefinition: true, scopeLine: 2206, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.stat*)* @_pystat_fromstructstat, variables: !1001)
!998 = !DISubroutineType(types: !999)
!999 = !{!276, !1000}
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 64, align: 64)
!1001 = !{!1002, !1003, !1004, !1005, !1006, !1007}
!1002 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "st", arg: 1, scope: !997, file: !1, line: 2205, type: !1000)
!1003 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ansec", scope: !997, file: !1, line: 2207, type: !366)
!1004 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mnsec", scope: !997, file: !1, line: 2207, type: !366)
!1005 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cnsec", scope: !997, file: !1, line: 2207, type: !366)
!1006 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "v", scope: !997, file: !1, line: 2208, type: !276)
!1007 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1008, file: !1, line: 2302, type: !276)
!1008 = distinct !DILexicalBlock(scope: !1009, file: !1, line: 2302, column: 9)
!1009 = distinct !DILexicalBlock(scope: !1010, file: !1, line: 2301, column: 27)
!1010 = distinct !DILexicalBlock(scope: !997, file: !1, line: 2301, column: 9)
!1011 = !DISubprogram(name: "fill_time", scope: !1, file: !1, line: 2159, type: !1012, isLocal: true, isDefinition: true, scopeLine: 2160, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct._object*, i32, i64, i64)* @fill_time, variables: !1015)
!1012 = !DISubroutineType(types: !1013)
!1013 = !{null, !276, !314, !1014, !366}
!1014 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !649, line: 75, baseType: !858)
!1015 = !{!1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1027, !1030, !1032, !1035, !1037, !1040, !1042, !1045, !1047}
!1016 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "v", arg: 1, scope: !1011, file: !1, line: 2159, type: !276)
!1017 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "index", arg: 2, scope: !1011, file: !1, line: 2159, type: !314)
!1018 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "sec", arg: 3, scope: !1011, file: !1, line: 2159, type: !1014)
!1019 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nsec", arg: 4, scope: !1011, file: !1, line: 2159, type: !366)
!1020 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !1011, file: !1, line: 2161, type: !276)
!1021 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ns_fractional", scope: !1011, file: !1, line: 2162, type: !276)
!1022 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s_in_ns", scope: !1011, file: !1, line: 2163, type: !276)
!1023 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ns_total", scope: !1011, file: !1, line: 2164, type: !276)
!1024 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "float_s", scope: !1011, file: !1, line: 2165, type: !276)
!1025 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1026, file: !1, line: 2195, type: !276)
!1026 = distinct !DILexicalBlock(scope: !1011, file: !1, line: 2195, column: 5)
!1027 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1028, file: !1, line: 2195, type: !276)
!1028 = distinct !DILexicalBlock(scope: !1029, file: !1, line: 2195, column: 5)
!1029 = distinct !DILexicalBlock(scope: !1026, file: !1, line: 2195, column: 5)
!1030 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1031, file: !1, line: 2196, type: !276)
!1031 = distinct !DILexicalBlock(scope: !1011, file: !1, line: 2196, column: 5)
!1032 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1033, file: !1, line: 2196, type: !276)
!1033 = distinct !DILexicalBlock(scope: !1034, file: !1, line: 2196, column: 5)
!1034 = distinct !DILexicalBlock(scope: !1031, file: !1, line: 2196, column: 5)
!1035 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1036, file: !1, line: 2197, type: !276)
!1036 = distinct !DILexicalBlock(scope: !1011, file: !1, line: 2197, column: 5)
!1037 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1038, file: !1, line: 2197, type: !276)
!1038 = distinct !DILexicalBlock(scope: !1039, file: !1, line: 2197, column: 5)
!1039 = distinct !DILexicalBlock(scope: !1036, file: !1, line: 2197, column: 5)
!1040 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1041, file: !1, line: 2198, type: !276)
!1041 = distinct !DILexicalBlock(scope: !1011, file: !1, line: 2198, column: 5)
!1042 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1043, file: !1, line: 2198, type: !276)
!1043 = distinct !DILexicalBlock(scope: !1044, file: !1, line: 2198, column: 5)
!1044 = distinct !DILexicalBlock(scope: !1041, file: !1, line: 2198, column: 5)
!1045 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1046, file: !1, line: 2199, type: !276)
!1046 = distinct !DILexicalBlock(scope: !1011, file: !1, line: 2199, column: 5)
!1047 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1048, file: !1, line: 2199, type: !276)
!1048 = distinct !DILexicalBlock(scope: !1049, file: !1, line: 2199, column: 5)
!1049 = distinct !DILexicalBlock(scope: !1046, file: !1, line: 2199, column: 5)
!1050 = !DISubprogram(name: "path_cleanup", scope: !1, file: !1, line: 781, type: !1051, isLocal: true, isDefinition: true, scopeLine: 781, flags: DIFlagPrototyped, isOptimized: true, variables: !1053)
!1051 = !DISubroutineType(types: !1052)
!1052 = !{null, !614}
!1053 = !{!1054, !1055, !1059}
!1054 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "path", arg: 1, scope: !1050, file: !1, line: 781, type: !614)
!1055 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1056, file: !1, line: 783, type: !276)
!1056 = distinct !DILexicalBlock(scope: !1057, file: !1, line: 783, column: 9)
!1057 = distinct !DILexicalBlock(scope: !1058, file: !1, line: 782, column: 24)
!1058 = distinct !DILexicalBlock(scope: !1050, file: !1, line: 782, column: 9)
!1059 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1060, file: !1, line: 783, type: !276)
!1060 = distinct !DILexicalBlock(scope: !1061, file: !1, line: 783, column: 9)
!1061 = distinct !DILexicalBlock(scope: !1062, file: !1, line: 783, column: 9)
!1062 = distinct !DILexicalBlock(scope: !1056, file: !1, line: 783, column: 9)
!1063 = !DISubprogram(name: "os_access", scope: !1, file: !1, line: 2622, type: !746, isLocal: true, isDefinition: true, scopeLine: 2623, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct._object*, %struct._object*)* @os_access, variables: !1064)
!1064 = !{!1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073}
!1065 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !1063, file: !1, line: 2622, type: !748)
!1066 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1063, file: !1, line: 2622, type: !276)
!1067 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !1063, file: !1, line: 2622, type: !276)
!1068 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !1063, file: !1, line: 2624, type: !276)
!1069 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "path", scope: !1063, file: !1, line: 2626, type: !615)
!1070 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mode", scope: !1063, file: !1, line: 2627, type: !314)
!1071 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dir_fd", scope: !1063, file: !1, line: 2628, type: !314)
!1072 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "effective_ids", scope: !1063, file: !1, line: 2629, type: !314)
!1073 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "follow_symlinks", scope: !1063, file: !1, line: 2630, type: !314)
!1074 = !DISubprogram(name: "os_access_impl", scope: !1, file: !1, line: 2646, type: !1075, isLocal: true, isDefinition: true, scopeLine: 2648, flags: DIFlagPrototyped, isOptimized: true, variables: !1077)
!1075 = !DISubroutineType(types: !1076)
!1076 = !{!276, !748, !614, !314, !314, !314, !314}
!1077 = !{!1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1088}
!1078 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !1074, file: !1, line: 2646, type: !748)
!1079 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "path", arg: 2, scope: !1074, file: !1, line: 2646, type: !614)
!1080 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mode", arg: 3, scope: !1074, file: !1, line: 2646, type: !314)
!1081 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dir_fd", arg: 4, scope: !1074, file: !1, line: 2646, type: !314)
!1082 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "effective_ids", arg: 5, scope: !1074, file: !1, line: 2646, type: !314)
!1083 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "follow_symlinks", arg: 6, scope: !1074, file: !1, line: 2646, type: !314)
!1084 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !1074, file: !1, line: 2649, type: !276)
!1085 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1074, file: !1, line: 2654, type: !314)
!1086 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !1087, file: !1, line: 2690, type: !870)
!1087 = distinct !DILexicalBlock(scope: !1074, file: !1, line: 2690, column: 5)
!1088 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "flags", scope: !1089, file: !1, line: 2695, type: !314)
!1089 = distinct !DILexicalBlock(scope: !1090, file: !1, line: 2694, column: 27)
!1090 = distinct !DILexicalBlock(scope: !1087, file: !1, line: 2692, column: 9)
!1091 = !DISubprogram(name: "os_ttyname", scope: !1, file: !1, line: 2758, type: !1092, isLocal: true, isDefinition: true, scopeLine: 2759, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct._object*)* @os_ttyname, variables: !1094)
!1092 = !DISubroutineType(types: !1093)
!1093 = !{!276, !748, !276}
!1094 = !{!1095, !1096, !1097, !1098, !1099}
!1095 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !1091, file: !1, line: 2758, type: !748)
!1096 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1091, file: !1, line: 2758, type: !276)
!1097 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !1091, file: !1, line: 2760, type: !276)
!1098 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !1091, file: !1, line: 2761, type: !314)
!1099 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_return_value", scope: !1091, file: !1, line: 2762, type: !322)
!1100 = !DISubprogram(name: "os_ttyname_impl", scope: !1, file: !1, line: 2778, type: !1101, isLocal: true, isDefinition: true, scopeLine: 2780, flags: DIFlagPrototyped, isOptimized: true, variables: !1103)
!1101 = !DISubroutineType(types: !1102)
!1102 = !{!322, !748, !314}
!1103 = !{!1104, !1105, !1106}
!1104 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !1100, file: !1, line: 2778, type: !748)
!1105 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fd", arg: 2, scope: !1100, file: !1, line: 2778, type: !314)
!1106 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !1100, file: !1, line: 2781, type: !322)
!1107 = !DISubprogram(name: "posix_error", scope: !1, file: !1, line: 1267, type: !726, isLocal: true, isDefinition: true, scopeLine: 1268, flags: DIFlagPrototyped, isOptimized: true, variables: !1108)
!1108 = !{}
!1109 = !DISubprogram(name: "posix_chdir", scope: !1, file: !1, line: 2823, type: !405, isLocal: true, isDefinition: true, scopeLine: 2824, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_chdir, variables: !1110)
!1110 = !{!1111, !1112, !1113, !1114, !1115, !1116, !1117}
!1111 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1109, file: !1, line: 2823, type: !276)
!1112 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1109, file: !1, line: 2823, type: !276)
!1113 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !1109, file: !1, line: 2823, type: !276)
!1114 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "path", scope: !1109, file: !1, line: 2825, type: !615)
!1115 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1109, file: !1, line: 2826, type: !314)
!1116 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !1109, file: !1, line: 2827, type: !276)
!1117 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !1118, file: !1, line: 2840, type: !870)
!1118 = distinct !DILexicalBlock(scope: !1109, file: !1, line: 2840, column: 5)
!1119 = !DISubprogram(name: "posix_chmod", scope: !1, file: !1, line: 2902, type: !405, isLocal: true, isDefinition: true, scopeLine: 2903, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_chmod, variables: !1120)
!1120 = !{!1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131}
!1121 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1119, file: !1, line: 2902, type: !276)
!1122 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1119, file: !1, line: 2902, type: !276)
!1123 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !1119, file: !1, line: 2902, type: !276)
!1124 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "path", scope: !1119, file: !1, line: 2904, type: !615)
!1125 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mode", scope: !1119, file: !1, line: 2905, type: !314)
!1126 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dir_fd", scope: !1119, file: !1, line: 2906, type: !314)
!1127 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "follow_symlinks", scope: !1119, file: !1, line: 2907, type: !314)
!1128 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1119, file: !1, line: 2908, type: !314)
!1129 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !1119, file: !1, line: 2909, type: !276)
!1130 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fchmodat_nofollow_unsupported", scope: !1119, file: !1, line: 2918, type: !314)
!1131 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !1132, file: !1, line: 2967, type: !870)
!1132 = distinct !DILexicalBlock(scope: !1119, file: !1, line: 2967, column: 5)
!1133 = !DISubprogram(name: "posix_fchmod", scope: !1, file: !1, line: 3037, type: !396, isLocal: true, isDefinition: true, scopeLine: 3038, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_fchmod, variables: !1134)
!1134 = !{!1135, !1136, !1137, !1138, !1139, !1140}
!1135 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1133, file: !1, line: 3037, type: !276)
!1136 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1133, file: !1, line: 3037, type: !276)
!1137 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !1133, file: !1, line: 3039, type: !314)
!1138 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mode", scope: !1133, file: !1, line: 3039, type: !314)
!1139 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1133, file: !1, line: 3039, type: !314)
!1140 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !1141, file: !1, line: 3042, type: !870)
!1141 = distinct !DILexicalBlock(scope: !1133, file: !1, line: 3042, column: 5)
!1142 = !DISubprogram(name: "posix_chown", scope: !1, file: !1, line: 3247, type: !405, isLocal: true, isDefinition: true, scopeLine: 3248, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_chown, variables: !1143)
!1143 = !{!1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154}
!1144 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1142, file: !1, line: 3247, type: !276)
!1145 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1142, file: !1, line: 3247, type: !276)
!1146 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !1142, file: !1, line: 3247, type: !276)
!1147 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "path", scope: !1142, file: !1, line: 3249, type: !615)
!1148 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "uid", scope: !1142, file: !1, line: 3250, type: !268)
!1149 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "gid", scope: !1142, file: !1, line: 3251, type: !273)
!1150 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dir_fd", scope: !1142, file: !1, line: 3252, type: !314)
!1151 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "follow_symlinks", scope: !1142, file: !1, line: 3253, type: !314)
!1152 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1142, file: !1, line: 3254, type: !314)
!1153 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !1142, file: !1, line: 3255, type: !276)
!1154 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !1155, file: !1, line: 3297, type: !870)
!1155 = distinct !DILexicalBlock(scope: !1142, file: !1, line: 3297, column: 5)
!1156 = !DISubprogram(name: "posix_fchown", scope: !1, file: !1, line: 3338, type: !396, isLocal: true, isDefinition: true, scopeLine: 3339, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_fchown, variables: !1157)
!1157 = !{!1158, !1159, !1160, !1161, !1162, !1163, !1164}
!1158 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1156, file: !1, line: 3338, type: !276)
!1159 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1156, file: !1, line: 3338, type: !276)
!1160 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !1156, file: !1, line: 3340, type: !314)
!1161 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "uid", scope: !1156, file: !1, line: 3341, type: !268)
!1162 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "gid", scope: !1156, file: !1, line: 3342, type: !273)
!1163 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1156, file: !1, line: 3343, type: !314)
!1164 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !1165, file: !1, line: 3348, type: !870)
!1165 = distinct !DILexicalBlock(scope: !1156, file: !1, line: 3348, column: 5)
!1166 = !DISubprogram(name: "posix_lchown", scope: !1, file: !1, line: 3365, type: !396, isLocal: true, isDefinition: true, scopeLine: 3366, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_lchown, variables: !1167)
!1167 = !{!1168, !1169, !1170, !1171, !1172, !1173, !1174}
!1168 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1166, file: !1, line: 3365, type: !276)
!1169 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1166, file: !1, line: 3365, type: !276)
!1170 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "path", scope: !1166, file: !1, line: 3367, type: !615)
!1171 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "uid", scope: !1166, file: !1, line: 3368, type: !268)
!1172 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "gid", scope: !1166, file: !1, line: 3369, type: !273)
!1173 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1166, file: !1, line: 3370, type: !314)
!1174 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !1175, file: !1, line: 3378, type: !870)
!1175 = distinct !DILexicalBlock(scope: !1166, file: !1, line: 3378, column: 5)
!1176 = !DISubprogram(name: "posix_chroot", scope: !1, file: !1, line: 3176, type: !396, isLocal: true, isDefinition: true, scopeLine: 3177, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_chroot, variables: !1177)
!1177 = !{!1178, !1179}
!1178 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1176, file: !1, line: 3176, type: !276)
!1179 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1176, file: !1, line: 3176, type: !276)
!1180 = !DISubprogram(name: "posix_1str", scope: !1, file: !1, line: 1351, type: !1181, isLocal: true, isDefinition: true, scopeLine: 1353, flags: DIFlagPrototyped, isOptimized: true, variables: !1186)
!1181 = !DISubroutineType(types: !1182)
!1182 = !{!276, !299, !276, !322, !1183}
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 64, align: 64)
!1184 = !DISubroutineType(types: !1185)
!1185 = !{!314, !299}
!1186 = !{!1187, !1188, !1189, !1190, !1191, !1192, !1193}
!1187 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "func_name", arg: 1, scope: !1180, file: !1, line: 1351, type: !299)
!1188 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1180, file: !1, line: 1351, type: !276)
!1189 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "format", arg: 3, scope: !1180, file: !1, line: 1351, type: !322)
!1190 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "func", arg: 4, scope: !1180, file: !1, line: 1352, type: !1183)
!1191 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "path", scope: !1180, file: !1, line: 1354, type: !615)
!1192 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1180, file: !1, line: 1355, type: !314)
!1193 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !1194, file: !1, line: 1361, type: !870)
!1194 = distinct !DILexicalBlock(scope: !1180, file: !1, line: 1361, column: 5)
!1195 = !DISubprogram(name: "posix_ctermid", scope: !1, file: !1, line: 2798, type: !396, isLocal: true, isDefinition: true, scopeLine: 2799, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_ctermid, variables: !1196)
!1196 = !{!1197, !1198, !1199, !1200}
!1197 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1195, file: !1, line: 2798, type: !276)
!1198 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "noargs", arg: 2, scope: !1195, file: !1, line: 2798, type: !276)
!1199 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !1195, file: !1, line: 2800, type: !322)
!1200 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer", scope: !1195, file: !1, line: 2801, type: !1201)
!1201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 72, align: 8, elements: !1202)
!1202 = !{!1203}
!1203 = !DISubrange(count: 9)
!1204 = !DISubprogram(name: "posix_getcwd_unicode", scope: !1, file: !1, line: 3450, type: !386, isLocal: true, isDefinition: true, scopeLine: 3451, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @posix_getcwd_unicode, variables: !1205)
!1205 = !{!1206}
!1206 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1204, file: !1, line: 3450, type: !276)
!1207 = !DISubprogram(name: "posix_getcwd", scope: !1, file: !1, line: 3394, type: !1208, isLocal: true, isDefinition: true, scopeLine: 3395, flags: DIFlagPrototyped, isOptimized: true, variables: !1210)
!1208 = !DISubroutineType(types: !1209)
!1209 = !{!276, !314}
!1210 = !{!1211, !1212, !1216, !1217}
!1211 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "use_bytes", arg: 1, scope: !1207, file: !1, line: 3394, type: !314)
!1212 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !1207, file: !1, line: 3396, type: !1213)
!1213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 8208, align: 8, elements: !1214)
!1214 = !{!1215}
!1215 = !DISubrange(count: 1026)
!1216 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1207, file: !1, line: 3397, type: !322)
!1217 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !1218, file: !1, line: 3435, type: !870)
!1218 = distinct !DILexicalBlock(scope: !1207, file: !1, line: 3435, column: 5)
!1219 = !DISubprogram(name: "posix_getcwd_bytes", scope: !1, file: !1, line: 3460, type: !386, isLocal: true, isDefinition: true, scopeLine: 3461, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @posix_getcwd_bytes, variables: !1220)
!1220 = !{!1221}
!1221 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1219, file: !1, line: 3460, type: !276)
!1222 = !DISubprogram(name: "posix_link", scope: !1, file: !1, line: 3485, type: !405, isLocal: true, isDefinition: true, scopeLine: 3486, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_link, variables: !1223)
!1223 = !{!1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234}
!1224 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1222, file: !1, line: 3485, type: !276)
!1225 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1222, file: !1, line: 3485, type: !276)
!1226 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !1222, file: !1, line: 3485, type: !276)
!1227 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "src", scope: !1222, file: !1, line: 3487, type: !615)
!1228 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dst", scope: !1222, file: !1, line: 3487, type: !615)
!1229 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "src_dir_fd", scope: !1222, file: !1, line: 3488, type: !314)
!1230 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dst_dir_fd", scope: !1222, file: !1, line: 3489, type: !314)
!1231 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "follow_symlinks", scope: !1222, file: !1, line: 3490, type: !314)
!1232 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !1222, file: !1, line: 3491, type: !276)
!1233 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1222, file: !1, line: 3497, type: !314)
!1234 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !1235, file: !1, line: 3538, type: !870)
!1235 = distinct !DILexicalBlock(scope: !1222, file: !1, line: 3538, column: 5)
!1236 = !DISubprogram(name: "path_error2", scope: !1, file: !1, line: 1317, type: !1237, isLocal: true, isDefinition: true, scopeLine: 1318, flags: DIFlagPrototyped, isOptimized: true, variables: !1239)
!1237 = !DISubroutineType(types: !1238)
!1238 = !{!276, !614, !614}
!1239 = !{!1240, !1241}
!1240 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "path", arg: 1, scope: !1236, file: !1, line: 1317, type: !614)
!1241 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "path2", arg: 2, scope: !1236, file: !1, line: 1317, type: !614)
!1242 = !DISubprogram(name: "posix_listdir", scope: !1, file: !1, line: 3846, type: !405, isLocal: true, isDefinition: true, scopeLine: 3847, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_listdir, variables: !1243)
!1243 = !{!1244, !1245, !1246, !1247, !1248, !1249}
!1244 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1242, file: !1, line: 3846, type: !276)
!1245 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1242, file: !1, line: 3846, type: !276)
!1246 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !1242, file: !1, line: 3846, type: !276)
!1247 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "path", scope: !1242, file: !1, line: 3848, type: !615)
!1248 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "list", scope: !1242, file: !1, line: 3849, type: !276)
!1249 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !1242, file: !1, line: 3851, type: !276)
!1250 = !DISubprogram(name: "_posix_listdir", scope: !1, file: !1, line: 3739, type: !1251, isLocal: true, isDefinition: true, scopeLine: 3740, flags: DIFlagPrototyped, isOptimized: true, variables: !1253)
!1251 = !DISubroutineType(types: !1252)
!1252 = !{!276, !614, !276}
!1253 = !{!1254, !1255, !1256, !1257, !1262, !1276, !1277, !1278, !1282, !1284, !1286, !1292, !1297, !1303, !1307, !1311, !1315, !1317, !1321, !1323}
!1254 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "path", arg: 1, scope: !1250, file: !1, line: 3739, type: !614)
!1255 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "list", arg: 2, scope: !1250, file: !1, line: 3739, type: !276)
!1256 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "v", scope: !1250, file: !1, line: 3741, type: !276)
!1257 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dirp", scope: !1250, file: !1, line: 3742, type: !1258)
!1258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1259, size: 64, align: 64)
!1259 = !DIDerivedType(tag: DW_TAG_typedef, name: "DIR", file: !1260, line: 128, baseType: !1261)
!1260 = !DIFile(filename: "/usr/include/dirent.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!1261 = !DICompositeType(tag: DW_TAG_structure_type, name: "__dirstream", file: !1260, line: 128, flags: DIFlagFwdDecl)
!1262 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ep", scope: !1250, file: !1, line: 3743, type: !1263)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 64, align: 64)
!1264 = !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !1265, line: 22, size: 2240, align: 64, elements: !1266)
!1265 = !DIFile(filename: "/usr/include/bits/dirent.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!1266 = !{!1267, !1268, !1269, !1270, !1272}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !1264, file: !1265, line: 28, baseType: !956, size: 64, align: 64)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !1264, file: !1265, line: 29, baseType: !358, size: 64, align: 64, offset: 64)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !1264, file: !1265, line: 31, baseType: !347, size: 16, align: 16, offset: 128)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !1264, file: !1265, line: 32, baseType: !1271, size: 8, align: 8, offset: 144)
!1271 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1264, file: !1265, line: 33, baseType: !1273, size: 2048, align: 8, offset: 152)
!1273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 2048, align: 8, elements: !1274)
!1274 = !{!1275}
!1275 = !DISubrange(count: 256)
!1276 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_str", scope: !1250, file: !1, line: 3744, type: !314)
!1277 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !1250, file: !1, line: 3746, type: !314)
!1278 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !1279, file: !1, line: 3759, type: !870)
!1279 = distinct !DILexicalBlock(scope: !1280, file: !1, line: 3759, column: 9)
!1280 = distinct !DILexicalBlock(scope: !1281, file: !1, line: 3751, column: 25)
!1281 = distinct !DILexicalBlock(scope: !1250, file: !1, line: 3751, column: 9)
!1282 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !1283, file: !1, line: 3766, type: !322)
!1283 = distinct !DILexicalBlock(scope: !1281, file: !1, line: 3765, column: 5)
!1284 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !1285, file: !1, line: 3777, type: !870)
!1285 = distinct !DILexicalBlock(scope: !1283, file: !1, line: 3777, column: 9)
!1286 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !1287, file: !1, line: 3786, type: !870)
!1287 = distinct !DILexicalBlock(scope: !1288, file: !1, line: 3786, column: 13)
!1288 = distinct !DILexicalBlock(scope: !1289, file: !1, line: 3785, column: 23)
!1289 = distinct !DILexicalBlock(scope: !1290, file: !1, line: 3785, column: 13)
!1290 = distinct !DILexicalBlock(scope: !1291, file: !1, line: 3782, column: 23)
!1291 = distinct !DILexicalBlock(scope: !1250, file: !1, line: 3782, column: 9)
!1292 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !1293, file: !1, line: 3798, type: !870)
!1293 = distinct !DILexicalBlock(scope: !1294, file: !1, line: 3798, column: 9)
!1294 = distinct !DILexicalBlock(scope: !1295, file: !1, line: 3796, column: 14)
!1295 = distinct !DILexicalBlock(scope: !1296, file: !1, line: 3796, column: 5)
!1296 = distinct !DILexicalBlock(scope: !1250, file: !1, line: 3796, column: 5)
!1297 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1298, file: !1, line: 3805, type: !276)
!1298 = distinct !DILexicalBlock(scope: !1299, file: !1, line: 3805, column: 17)
!1299 = distinct !DILexicalBlock(scope: !1300, file: !1, line: 3804, column: 20)
!1300 = distinct !DILexicalBlock(scope: !1301, file: !1, line: 3802, column: 17)
!1301 = distinct !DILexicalBlock(scope: !1302, file: !1, line: 3801, column: 25)
!1302 = distinct !DILexicalBlock(scope: !1294, file: !1, line: 3801, column: 13)
!1303 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1304, file: !1, line: 3819, type: !276)
!1304 = distinct !DILexicalBlock(scope: !1305, file: !1, line: 3819, column: 13)
!1305 = distinct !DILexicalBlock(scope: !1306, file: !1, line: 3818, column: 24)
!1306 = distinct !DILexicalBlock(scope: !1294, file: !1, line: 3818, column: 13)
!1307 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1308, file: !1, line: 3819, type: !276)
!1308 = distinct !DILexicalBlock(scope: !1309, file: !1, line: 3819, column: 13)
!1309 = distinct !DILexicalBlock(scope: !1310, file: !1, line: 3819, column: 13)
!1310 = distinct !DILexicalBlock(scope: !1304, file: !1, line: 3819, column: 13)
!1311 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1312, file: !1, line: 3823, type: !276)
!1312 = distinct !DILexicalBlock(scope: !1313, file: !1, line: 3823, column: 13)
!1313 = distinct !DILexicalBlock(scope: !1314, file: !1, line: 3822, column: 42)
!1314 = distinct !DILexicalBlock(scope: !1294, file: !1, line: 3822, column: 13)
!1315 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1316, file: !1, line: 3824, type: !276)
!1316 = distinct !DILexicalBlock(scope: !1313, file: !1, line: 3824, column: 13)
!1317 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1318, file: !1, line: 3824, type: !276)
!1318 = distinct !DILexicalBlock(scope: !1319, file: !1, line: 3824, column: 13)
!1319 = distinct !DILexicalBlock(scope: !1320, file: !1, line: 3824, column: 13)
!1320 = distinct !DILexicalBlock(scope: !1316, file: !1, line: 3824, column: 13)
!1321 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1322, file: !1, line: 3827, type: !276)
!1322 = distinct !DILexicalBlock(scope: !1294, file: !1, line: 3827, column: 9)
!1323 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !1324, file: !1, line: 3832, type: !870)
!1324 = distinct !DILexicalBlock(scope: !1325, file: !1, line: 3832, column: 9)
!1325 = distinct !DILexicalBlock(scope: !1326, file: !1, line: 3831, column: 23)
!1326 = distinct !DILexicalBlock(scope: !1250, file: !1, line: 3831, column: 9)
!1327 = !DISubprogram(name: "posix_lstat", scope: !1, file: !1, line: 2514, type: !405, isLocal: true, isDefinition: true, scopeLine: 2515, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_lstat, variables: !1328)
!1328 = !{!1329, !1330, !1331, !1332, !1333, !1334, !1335}
!1329 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1327, file: !1, line: 2514, type: !276)
!1330 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1327, file: !1, line: 2514, type: !276)
!1331 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !1327, file: !1, line: 2514, type: !276)
!1332 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "path", scope: !1327, file: !1, line: 2517, type: !615)
!1333 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dir_fd", scope: !1327, file: !1, line: 2518, type: !314)
!1334 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "follow_symlinks", scope: !1327, file: !1, line: 2519, type: !314)
!1335 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !1327, file: !1, line: 2520, type: !276)
!1336 = !DISubprogram(name: "posix_mkdir", scope: !1, file: !1, line: 4100, type: !405, isLocal: true, isDefinition: true, scopeLine: 4101, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_mkdir, variables: !1337)
!1337 = !{!1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346}
!1338 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1336, file: !1, line: 4100, type: !276)
!1339 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1336, file: !1, line: 4100, type: !276)
!1340 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !1336, file: !1, line: 4100, type: !276)
!1341 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "path", scope: !1336, file: !1, line: 4102, type: !615)
!1342 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mode", scope: !1336, file: !1, line: 4103, type: !314)
!1343 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dir_fd", scope: !1336, file: !1, line: 4104, type: !314)
!1344 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !1336, file: !1, line: 4106, type: !276)
!1345 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1336, file: !1, line: 4107, type: !314)
!1346 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !1347, file: !1, line: 4134, type: !870)
!1347 = distinct !DILexicalBlock(scope: !1336, file: !1, line: 4134, column: 5)
!1348 = !DISubprogram(name: "posix_nice", scope: !1, file: !1, line: 4171, type: !396, isLocal: true, isDefinition: true, scopeLine: 4172, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_nice, variables: !1349)
!1349 = !{!1350, !1351, !1352, !1353}
!1350 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1348, file: !1, line: 4171, type: !276)
!1351 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1348, file: !1, line: 4171, type: !276)
!1352 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "increment", scope: !1348, file: !1, line: 4173, type: !314)
!1353 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !1348, file: !1, line: 4173, type: !314)
!1354 = !DISubprogram(name: "posix_getpriority", scope: !1, file: !1, line: 4208, type: !396, isLocal: true, isDefinition: true, scopeLine: 4209, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_getpriority, variables: !1355)
!1355 = !{!1356, !1357, !1358, !1359, !1360}
!1356 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1354, file: !1, line: 4208, type: !276)
!1357 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1354, file: !1, line: 4208, type: !276)
!1358 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "which", scope: !1354, file: !1, line: 4210, type: !314)
!1359 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "who", scope: !1354, file: !1, line: 4210, type: !314)
!1360 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "retval", scope: !1354, file: !1, line: 4210, type: !314)
!1361 = !DISubprogram(name: "posix_setpriority", scope: !1, file: !1, line: 4229, type: !396, isLocal: true, isDefinition: true, scopeLine: 4230, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_setpriority, variables: !1362)
!1362 = !{!1363, !1364, !1365, !1366, !1367, !1368}
!1363 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1361, file: !1, line: 4229, type: !276)
!1364 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1361, file: !1, line: 4229, type: !276)
!1365 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "which", scope: !1361, file: !1, line: 4231, type: !314)
!1366 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "who", scope: !1361, file: !1, line: 4231, type: !314)
!1367 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "prio", scope: !1361, file: !1, line: 4231, type: !314)
!1368 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "retval", scope: !1361, file: !1, line: 4231, type: !314)
!1369 = !DISubprogram(name: "posix_readlink", scope: !1, file: !1, line: 7079, type: !405, isLocal: true, isDefinition: true, scopeLine: 7080, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_readlink, variables: !1370)
!1370 = !{!1371, !1372, !1373, !1374, !1375, !1376, !1380, !1381, !1382}
!1371 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1369, file: !1, line: 7079, type: !276)
!1372 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1369, file: !1, line: 7079, type: !276)
!1373 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !1369, file: !1, line: 7079, type: !276)
!1374 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "path", scope: !1369, file: !1, line: 7081, type: !615)
!1375 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dir_fd", scope: !1369, file: !1, line: 7082, type: !314)
!1376 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer", scope: !1369, file: !1, line: 7083, type: !1377)
!1377 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 32768, align: 8, elements: !1378)
!1378 = !{!1379}
!1379 = !DISubrange(count: 4096)
!1380 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "length", scope: !1369, file: !1, line: 7084, type: !284)
!1381 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !1369, file: !1, line: 7085, type: !276)
!1382 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !1383, file: !1, line: 7100, type: !870)
!1383 = distinct !DILexicalBlock(scope: !1369, file: !1, line: 7100, column: 5)
!1384 = !DISubprogram(name: "posix_rename", scope: !1, file: !1, line: 4339, type: !405, isLocal: true, isDefinition: true, scopeLine: 4340, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_rename, variables: !1385)
!1385 = !{!1386, !1387, !1388}
!1386 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1384, file: !1, line: 4339, type: !276)
!1387 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1384, file: !1, line: 4339, type: !276)
!1388 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !1384, file: !1, line: 4339, type: !276)
!1389 = !DISubprogram(name: "internal_rename", scope: !1, file: !1, line: 4244, type: !541, isLocal: true, isDefinition: true, scopeLine: 4245, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, i32)* @internal_rename, variables: !1390)
!1390 = !{!1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1405, !1406}
!1391 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 1, scope: !1389, file: !1, line: 4244, type: !276)
!1392 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 2, scope: !1389, file: !1, line: 4244, type: !276)
!1393 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "is_replace", arg: 3, scope: !1389, file: !1, line: 4244, type: !314)
!1394 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "function_name", scope: !1389, file: !1, line: 4246, type: !322)
!1395 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "src", scope: !1389, file: !1, line: 4247, type: !615)
!1396 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dst", scope: !1389, file: !1, line: 4248, type: !615)
!1397 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "src_dir_fd", scope: !1389, file: !1, line: 4249, type: !314)
!1398 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dst_dir_fd", scope: !1389, file: !1, line: 4250, type: !314)
!1399 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dir_fd_specified", scope: !1389, file: !1, line: 4251, type: !314)
!1400 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !1389, file: !1, line: 4252, type: !276)
!1401 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "format", scope: !1389, file: !1, line: 4253, type: !1402)
!1402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 192, align: 8, elements: !1403)
!1403 = !{!1404}
!1404 = !DISubrange(count: 24)
!1405 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1389, file: !1, line: 4260, type: !314)
!1406 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !1407, file: !1, line: 4305, type: !870)
!1407 = distinct !DILexicalBlock(scope: !1389, file: !1, line: 4305, column: 5)
!1408 = !DISubprogram(name: "posix_replace", scope: !1, file: !1, line: 4355, type: !405, isLocal: true, isDefinition: true, scopeLine: 4356, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_replace, variables: !1409)
!1409 = !{!1410, !1411, !1412}
!1410 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1408, file: !1, line: 4355, type: !276)
!1411 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1408, file: !1, line: 4355, type: !276)
!1412 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !1408, file: !1, line: 4355, type: !276)
!1413 = !DISubprogram(name: "posix_rmdir", scope: !1, file: !1, line: 4370, type: !405, isLocal: true, isDefinition: true, scopeLine: 4371, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_rmdir, variables: !1414)
!1414 = !{!1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422}
!1415 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1413, file: !1, line: 4370, type: !276)
!1416 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1413, file: !1, line: 4370, type: !276)
!1417 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !1413, file: !1, line: 4370, type: !276)
!1418 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "path", scope: !1413, file: !1, line: 4372, type: !615)
!1419 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dir_fd", scope: !1413, file: !1, line: 4373, type: !314)
!1420 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1413, file: !1, line: 4375, type: !314)
!1421 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !1413, file: !1, line: 4376, type: !276)
!1422 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !1423, file: !1, line: 4390, type: !870)
!1423 = distinct !DILexicalBlock(scope: !1413, file: !1, line: 4390, column: 5)
!1424 = !DISubprogram(name: "stat_float_times", scope: !1, file: !1, line: 2139, type: !396, isLocal: true, isDefinition: true, scopeLine: 2140, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @stat_float_times, variables: !1425)
!1425 = !{!1426, !1427, !1428}
!1426 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1424, file: !1, line: 2139, type: !276)
!1427 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1424, file: !1, line: 2139, type: !276)
!1428 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newval", scope: !1424, file: !1, line: 2141, type: !314)
!1429 = !DISubprogram(name: "posix_symlink", scope: !1, file: !1, line: 7289, type: !405, isLocal: true, isDefinition: true, scopeLine: 7290, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_symlink, variables: !1430)
!1430 = !{!1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440}
!1431 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1429, file: !1, line: 7289, type: !276)
!1432 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1429, file: !1, line: 7289, type: !276)
!1433 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !1429, file: !1, line: 7289, type: !276)
!1434 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "src", scope: !1429, file: !1, line: 7291, type: !615)
!1435 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dst", scope: !1429, file: !1, line: 7292, type: !615)
!1436 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dir_fd", scope: !1429, file: !1, line: 7293, type: !314)
!1437 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "target_is_directory", scope: !1429, file: !1, line: 7294, type: !314)
!1438 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !1429, file: !1, line: 7297, type: !276)
!1439 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1429, file: !1, line: 7301, type: !314)
!1440 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !1441, file: !1, line: 7367, type: !870)
!1441 = distinct !DILexicalBlock(scope: !1429, file: !1, line: 7367, column: 5)
!1442 = !DISubprogram(name: "posix_system", scope: !1, file: !1, line: 4427, type: !396, isLocal: true, isDefinition: true, scopeLine: 4428, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_system, variables: !1443)
!1443 = !{!1444, !1445, !1446, !1447, !1448, !1449, !1451}
!1444 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1442, file: !1, line: 4427, type: !276)
!1445 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1442, file: !1, line: 4427, type: !276)
!1446 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sts", scope: !1442, file: !1, line: 4429, type: !287)
!1447 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "command_obj", scope: !1442, file: !1, line: 4439, type: !276)
!1448 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "command", scope: !1442, file: !1, line: 4440, type: !322)
!1449 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !1450, file: !1, line: 4446, type: !870)
!1450 = distinct !DILexicalBlock(scope: !1442, file: !1, line: 4446, column: 5)
!1451 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1452, file: !1, line: 4449, type: !276)
!1452 = distinct !DILexicalBlock(scope: !1442, file: !1, line: 4449, column: 5)
!1453 = !DISubprogram(name: "posix_umask", scope: !1, file: !1, line: 4461, type: !396, isLocal: true, isDefinition: true, scopeLine: 4462, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_umask, variables: !1454)
!1454 = !{!1455, !1456, !1457}
!1455 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1453, file: !1, line: 4461, type: !276)
!1456 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1453, file: !1, line: 4461, type: !276)
!1457 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1453, file: !1, line: 4463, type: !314)
!1458 = !DISubprogram(name: "posix_uname", scope: !1, file: !1, line: 4613, type: !396, isLocal: true, isDefinition: true, scopeLine: 4614, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_uname, variables: !1459)
!1459 = !{!1460, !1461, !1462, !1475, !1476, !1477, !1479, !1481, !1485, !1487, !1491, !1493, !1497, !1499, !1503, !1505}
!1460 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1458, file: !1, line: 4613, type: !276)
!1461 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "noargs", arg: 2, scope: !1458, file: !1, line: 4613, type: !276)
!1462 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "u", scope: !1458, file: !1, line: 4615, type: !1463)
!1463 = !DICompositeType(tag: DW_TAG_structure_type, name: "utsname", file: !1464, line: 48, size: 3120, align: 8, elements: !1465)
!1464 = !DIFile(filename: "/usr/include/sys/utsname.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!1465 = !{!1466, !1470, !1471, !1472, !1473, !1474}
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "sysname", scope: !1463, file: !1464, line: 51, baseType: !1467, size: 520, align: 8)
!1467 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 520, align: 8, elements: !1468)
!1468 = !{!1469}
!1469 = !DISubrange(count: 65)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "nodename", scope: !1463, file: !1464, line: 54, baseType: !1467, size: 520, align: 8, offset: 520)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1463, file: !1464, line: 57, baseType: !1467, size: 520, align: 8, offset: 1040)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1463, file: !1464, line: 59, baseType: !1467, size: 520, align: 8, offset: 1560)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1463, file: !1464, line: 62, baseType: !1467, size: 520, align: 8, offset: 2080)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "domainname", scope: !1463, file: !1464, line: 67, baseType: !1467, size: 520, align: 8, offset: 2600)
!1475 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1458, file: !1, line: 4616, type: !314)
!1476 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !1458, file: !1, line: 4617, type: !276)
!1477 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !1478, file: !1, line: 4619, type: !870)
!1478 = distinct !DILexicalBlock(scope: !1458, file: !1, line: 4619, column: 5)
!1479 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "o", scope: !1480, file: !1, line: 4639, type: !276)
!1480 = distinct !DILexicalBlock(scope: !1458, file: !1, line: 4639, column: 5)
!1481 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1482, file: !1, line: 4639, type: !276)
!1482 = distinct !DILexicalBlock(scope: !1483, file: !1, line: 4639, column: 5)
!1483 = distinct !DILexicalBlock(scope: !1484, file: !1, line: 4639, column: 5)
!1484 = distinct !DILexicalBlock(scope: !1480, file: !1, line: 4639, column: 5)
!1485 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "o", scope: !1486, file: !1, line: 4640, type: !276)
!1486 = distinct !DILexicalBlock(scope: !1458, file: !1, line: 4640, column: 5)
!1487 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1488, file: !1, line: 4640, type: !276)
!1488 = distinct !DILexicalBlock(scope: !1489, file: !1, line: 4640, column: 5)
!1489 = distinct !DILexicalBlock(scope: !1490, file: !1, line: 4640, column: 5)
!1490 = distinct !DILexicalBlock(scope: !1486, file: !1, line: 4640, column: 5)
!1491 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "o", scope: !1492, file: !1, line: 4641, type: !276)
!1492 = distinct !DILexicalBlock(scope: !1458, file: !1, line: 4641, column: 5)
!1493 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1494, file: !1, line: 4641, type: !276)
!1494 = distinct !DILexicalBlock(scope: !1495, file: !1, line: 4641, column: 5)
!1495 = distinct !DILexicalBlock(scope: !1496, file: !1, line: 4641, column: 5)
!1496 = distinct !DILexicalBlock(scope: !1492, file: !1, line: 4641, column: 5)
!1497 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "o", scope: !1498, file: !1, line: 4642, type: !276)
!1498 = distinct !DILexicalBlock(scope: !1458, file: !1, line: 4642, column: 5)
!1499 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1500, file: !1, line: 4642, type: !276)
!1500 = distinct !DILexicalBlock(scope: !1501, file: !1, line: 4642, column: 5)
!1501 = distinct !DILexicalBlock(scope: !1502, file: !1, line: 4642, column: 5)
!1502 = distinct !DILexicalBlock(scope: !1498, file: !1, line: 4642, column: 5)
!1503 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "o", scope: !1504, file: !1, line: 4643, type: !276)
!1504 = distinct !DILexicalBlock(scope: !1458, file: !1, line: 4643, column: 5)
!1505 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1506, file: !1, line: 4643, type: !276)
!1506 = distinct !DILexicalBlock(scope: !1507, file: !1, line: 4643, column: 5)
!1507 = distinct !DILexicalBlock(scope: !1508, file: !1, line: 4643, column: 5)
!1508 = distinct !DILexicalBlock(scope: !1504, file: !1, line: 4643, column: 5)
!1509 = !DISubprogram(name: "posix_unlink", scope: !1, file: !1, line: 4527, type: !405, isLocal: true, isDefinition: true, scopeLine: 4528, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_unlink, variables: !1510)
!1510 = !{!1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518}
!1511 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1509, file: !1, line: 4527, type: !276)
!1512 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1509, file: !1, line: 4527, type: !276)
!1513 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !1509, file: !1, line: 4527, type: !276)
!1514 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "path", scope: !1509, file: !1, line: 4529, type: !615)
!1515 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dir_fd", scope: !1509, file: !1, line: 4530, type: !314)
!1516 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1509, file: !1, line: 4532, type: !314)
!1517 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !1509, file: !1, line: 4533, type: !276)
!1518 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !1519, file: !1, line: 4547, type: !870)
!1519 = distinct !DILexicalBlock(scope: !1509, file: !1, line: 4547, column: 5)
!1520 = !DISubprogram(name: "posix_utime", scope: !1, file: !1, line: 4846, type: !405, isLocal: true, isDefinition: true, scopeLine: 4847, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_utime, variables: !1521)
!1521 = !{!1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1534, !1543, !1544, !1545, !1548, !1549, !1550, !1551}
!1522 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1520, file: !1, line: 4846, type: !276)
!1523 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1520, file: !1, line: 4846, type: !276)
!1524 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !1520, file: !1, line: 4846, type: !276)
!1525 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "path", scope: !1520, file: !1, line: 4848, type: !615)
!1526 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "times", scope: !1520, file: !1, line: 4849, type: !276)
!1527 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ns", scope: !1520, file: !1, line: 4850, type: !276)
!1528 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dir_fd", scope: !1520, file: !1, line: 4851, type: !314)
!1529 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "follow_symlinks", scope: !1520, file: !1, line: 4852, type: !314)
!1530 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "keywords", scope: !1520, file: !1, line: 4853, type: !1531)
!1531 = !DICompositeType(tag: DW_TAG_array_type, baseType: !322, size: 384, align: 64, elements: !1532)
!1532 = !{!1533}
!1533 = !DISubrange(count: 6)
!1534 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "utime", scope: !1520, file: !1, line: 4856, type: !1535)
!1535 = !DIDerivedType(tag: DW_TAG_typedef, name: "utime_t", file: !1, line: 4684, baseType: !1536)
!1536 = !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 4678, size: 320, align: 64, elements: !1537)
!1537 = !{!1538, !1539, !1540, !1541, !1542}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "now", scope: !1536, file: !1, line: 4679, baseType: !314, size: 32, align: 32)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "atime_s", scope: !1536, file: !1, line: 4680, baseType: !1014, size: 64, align: 64, offset: 64)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "atime_ns", scope: !1536, file: !1, line: 4681, baseType: !287, size: 64, align: 64, offset: 128)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "mtime_s", scope: !1536, file: !1, line: 4682, baseType: !1014, size: 64, align: 64, offset: 192)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "mtime_ns", scope: !1536, file: !1, line: 4683, baseType: !287, size: 64, align: 64, offset: 256)
!1543 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1520, file: !1, line: 4862, type: !314)
!1544 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !1520, file: !1, line: 4865, type: !276)
!1545 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "a_sec", scope: !1546, file: !1, line: 4894, type: !1014)
!1546 = distinct !DILexicalBlock(scope: !1547, file: !1, line: 4893, column: 38)
!1547 = distinct !DILexicalBlock(scope: !1520, file: !1, line: 4893, column: 9)
!1548 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "m_sec", scope: !1546, file: !1, line: 4894, type: !1014)
!1549 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "a_nsec", scope: !1546, file: !1, line: 4895, type: !287)
!1550 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "m_nsec", scope: !1546, file: !1, line: 4895, type: !287)
!1551 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !1552, file: !1, line: 4985, type: !870)
!1552 = distinct !DILexicalBlock(scope: !1520, file: !1, line: 4985, column: 5)
!1553 = !DISubprogram(name: "split_py_long_to_s_and_ns", scope: !1, file: !1, line: 4825, type: !1554, isLocal: true, isDefinition: true, scopeLine: 4826, flags: DIFlagPrototyped, isOptimized: true, variables: !1558)
!1554 = !DISubroutineType(types: !1555)
!1555 = !{!314, !276, !1556, !1557}
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64, align: 64)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 64, align: 64)
!1558 = !{!1559, !1560, !1561, !1562, !1563, !1564, !1566}
!1559 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "py_long", arg: 1, scope: !1553, file: !1, line: 4825, type: !276)
!1560 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s", arg: 2, scope: !1553, file: !1, line: 4825, type: !1556)
!1561 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ns", arg: 3, scope: !1553, file: !1, line: 4825, type: !1557)
!1562 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1553, file: !1, line: 4827, type: !314)
!1563 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "divmod", scope: !1553, file: !1, line: 4828, type: !276)
!1564 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1565, file: !1, line: 4841, type: !276)
!1565 = distinct !DILexicalBlock(scope: !1553, file: !1, line: 4841, column: 5)
!1566 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1567, file: !1, line: 4841, type: !276)
!1567 = distinct !DILexicalBlock(scope: !1568, file: !1, line: 4841, column: 5)
!1568 = distinct !DILexicalBlock(scope: !1565, file: !1, line: 4841, column: 5)
!1569 = !DISubprogram(name: "utime_nofollow_symlinks", scope: !1, file: !1, line: 4789, type: !1570, isLocal: true, isDefinition: true, scopeLine: 4790, flags: DIFlagPrototyped, isOptimized: true, variables: !1573)
!1570 = !DISubroutineType(types: !1571)
!1571 = !{!314, !1572, !322}
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 64, align: 64)
!1573 = !{!1574, !1575, !1576, !1580}
!1574 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "utime", arg: 1, scope: !1569, file: !1, line: 4789, type: !1572)
!1575 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "path", arg: 2, scope: !1569, file: !1, line: 4789, type: !322)
!1576 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ts", scope: !1569, file: !1, line: 4792, type: !1577)
!1577 = !DICompositeType(tag: DW_TAG_array_type, baseType: !855, size: 256, align: 64, elements: !1578)
!1578 = !{!1579}
!1579 = !DISubrange(count: 2)
!1580 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "time", scope: !1569, file: !1, line: 4792, type: !1581)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64, align: 64)
!1582 = !DISubprogram(name: "utime_dir_fd", scope: !1, file: !1, line: 4744, type: !1583, isLocal: true, isDefinition: true, scopeLine: 4745, flags: DIFlagPrototyped, isOptimized: true, variables: !1585)
!1583 = !DISubroutineType(types: !1584)
!1584 = !{!314, !1572, !314, !322, !314}
!1585 = !{!1586, !1587, !1588, !1589, !1590, !1591, !1592}
!1586 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "utime", arg: 1, scope: !1582, file: !1, line: 4744, type: !1572)
!1587 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dir_fd", arg: 2, scope: !1582, file: !1, line: 4744, type: !314)
!1588 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "path", arg: 3, scope: !1582, file: !1, line: 4744, type: !322)
!1589 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "follow_symlinks", arg: 4, scope: !1582, file: !1, line: 4744, type: !314)
!1590 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "flags", scope: !1582, file: !1, line: 4747, type: !314)
!1591 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ts", scope: !1582, file: !1, line: 4748, type: !1577)
!1592 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "time", scope: !1582, file: !1, line: 4748, type: !1581)
!1593 = !DISubprogram(name: "utime_fd", scope: !1, file: !1, line: 4769, type: !1594, isLocal: true, isDefinition: true, scopeLine: 4770, flags: DIFlagPrototyped, isOptimized: true, variables: !1596)
!1594 = !DISubroutineType(types: !1595)
!1595 = !{!314, !1572, !314}
!1596 = !{!1597, !1598, !1599, !1600}
!1597 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "utime", arg: 1, scope: !1593, file: !1, line: 4769, type: !1572)
!1598 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fd", arg: 2, scope: !1593, file: !1, line: 4769, type: !314)
!1599 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ts", scope: !1593, file: !1, line: 4772, type: !1577)
!1600 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "time", scope: !1593, file: !1, line: 4772, type: !1581)
!1601 = !DISubprogram(name: "utime_default", scope: !1, file: !1, line: 4805, type: !1570, isLocal: true, isDefinition: true, scopeLine: 4806, flags: DIFlagPrototyped, isOptimized: true, variables: !1602)
!1602 = !{!1603, !1604, !1605, !1606}
!1603 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "utime", arg: 1, scope: !1601, file: !1, line: 4805, type: !1572)
!1604 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "path", arg: 2, scope: !1601, file: !1, line: 4805, type: !322)
!1605 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ts", scope: !1601, file: !1, line: 4808, type: !1577)
!1606 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "time", scope: !1601, file: !1, line: 4808, type: !1581)
!1607 = !DISubprogram(name: "posix_times", scope: !1, file: !1, line: 7565, type: !396, isLocal: true, isDefinition: true, scopeLine: 7566, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_times, variables: !1608)
!1608 = !{!1609, !1610, !1611, !1619}
!1609 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1607, file: !1, line: 7565, type: !276)
!1610 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "noargs", arg: 2, scope: !1607, file: !1, line: 7565, type: !276)
!1611 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t", scope: !1607, file: !1, line: 7567, type: !1612)
!1612 = !DICompositeType(tag: DW_TAG_structure_type, name: "tms", file: !1613, line: 34, size: 256, align: 64, elements: !1614)
!1613 = !DIFile(filename: "/usr/include/sys/times.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!1614 = !{!1615, !1616, !1617, !1618}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "tms_utime", scope: !1612, file: !1613, line: 36, baseType: !648, size: 64, align: 64)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "tms_stime", scope: !1612, file: !1613, line: 37, baseType: !648, size: 64, align: 64, offset: 64)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "tms_cutime", scope: !1612, file: !1613, line: 39, baseType: !648, size: 64, align: 64, offset: 128)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "tms_cstime", scope: !1612, file: !1613, line: 40, baseType: !648, size: 64, align: 64, offset: 192)
!1619 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !1607, file: !1, line: 7568, type: !648)
!1620 = !DISubprogram(name: "build_times_result", scope: !1, file: !1, line: 7504, type: !1621, isLocal: true, isDefinition: true, scopeLine: 7507, flags: DIFlagPrototyped, isOptimized: true, variables: !1623)
!1621 = !DISubroutineType(types: !1622)
!1622 = !{!276, !651, !651, !651, !651, !651}
!1623 = !{!1624, !1625, !1626, !1627, !1628, !1629, !1630, !1632, !1636, !1638, !1642, !1644, !1648, !1650, !1654, !1656}
!1624 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user", arg: 1, scope: !1620, file: !1, line: 7504, type: !651)
!1625 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "system", arg: 2, scope: !1620, file: !1, line: 7504, type: !651)
!1626 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "children_user", arg: 3, scope: !1620, file: !1, line: 7505, type: !651)
!1627 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "children_system", arg: 4, scope: !1620, file: !1, line: 7505, type: !651)
!1628 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "elapsed", arg: 5, scope: !1620, file: !1, line: 7506, type: !651)
!1629 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !1620, file: !1, line: 7508, type: !276)
!1630 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "o", scope: !1631, file: !1, line: 7522, type: !276)
!1631 = distinct !DILexicalBlock(scope: !1620, file: !1, line: 7522, column: 5)
!1632 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1633, file: !1, line: 7522, type: !276)
!1633 = distinct !DILexicalBlock(scope: !1634, file: !1, line: 7522, column: 5)
!1634 = distinct !DILexicalBlock(scope: !1635, file: !1, line: 7522, column: 5)
!1635 = distinct !DILexicalBlock(scope: !1631, file: !1, line: 7522, column: 5)
!1636 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "o", scope: !1637, file: !1, line: 7523, type: !276)
!1637 = distinct !DILexicalBlock(scope: !1620, file: !1, line: 7523, column: 5)
!1638 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1639, file: !1, line: 7523, type: !276)
!1639 = distinct !DILexicalBlock(scope: !1640, file: !1, line: 7523, column: 5)
!1640 = distinct !DILexicalBlock(scope: !1641, file: !1, line: 7523, column: 5)
!1641 = distinct !DILexicalBlock(scope: !1637, file: !1, line: 7523, column: 5)
!1642 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "o", scope: !1643, file: !1, line: 7524, type: !276)
!1643 = distinct !DILexicalBlock(scope: !1620, file: !1, line: 7524, column: 5)
!1644 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1645, file: !1, line: 7524, type: !276)
!1645 = distinct !DILexicalBlock(scope: !1646, file: !1, line: 7524, column: 5)
!1646 = distinct !DILexicalBlock(scope: !1647, file: !1, line: 7524, column: 5)
!1647 = distinct !DILexicalBlock(scope: !1643, file: !1, line: 7524, column: 5)
!1648 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "o", scope: !1649, file: !1, line: 7525, type: !276)
!1649 = distinct !DILexicalBlock(scope: !1620, file: !1, line: 7525, column: 5)
!1650 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1651, file: !1, line: 7525, type: !276)
!1651 = distinct !DILexicalBlock(scope: !1652, file: !1, line: 7525, column: 5)
!1652 = distinct !DILexicalBlock(scope: !1653, file: !1, line: 7525, column: 5)
!1653 = distinct !DILexicalBlock(scope: !1649, file: !1, line: 7525, column: 5)
!1654 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "o", scope: !1655, file: !1, line: 7526, type: !276)
!1655 = distinct !DILexicalBlock(scope: !1620, file: !1, line: 7526, column: 5)
!1656 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1657, file: !1, line: 7526, type: !276)
!1657 = distinct !DILexicalBlock(scope: !1658, file: !1, line: 7526, column: 5)
!1658 = distinct !DILexicalBlock(scope: !1659, file: !1, line: 7526, column: 5)
!1659 = distinct !DILexicalBlock(scope: !1655, file: !1, line: 7526, column: 5)
!1660 = !DISubprogram(name: "posix__exit", scope: !1, file: !1, line: 5036, type: !396, isLocal: true, isDefinition: true, scopeLine: 5037, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix__exit, variables: !1661)
!1661 = !{!1662, !1663, !1664}
!1662 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1660, file: !1, line: 5036, type: !276)
!1663 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1660, file: !1, line: 5036, type: !276)
!1664 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sts", scope: !1660, file: !1, line: 5038, type: !314)
!1665 = !DISubprogram(name: "posix_execv", scope: !1, file: !1, line: 5188, type: !396, isLocal: true, isDefinition: true, scopeLine: 5189, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_execv, variables: !1666)
!1666 = !{!1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1678, !1682, !1686}
!1667 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1665, file: !1, line: 5188, type: !276)
!1668 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1665, file: !1, line: 5188, type: !276)
!1669 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "opath", scope: !1665, file: !1, line: 5190, type: !276)
!1670 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "path", scope: !1665, file: !1, line: 5191, type: !322)
!1671 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "argv", scope: !1665, file: !1, line: 5192, type: !276)
!1672 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "argvlist", scope: !1665, file: !1, line: 5193, type: !652)
!1673 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "argc", scope: !1665, file: !1, line: 5194, type: !282)
!1674 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1675, file: !1, line: 5207, type: !276)
!1675 = distinct !DILexicalBlock(scope: !1676, file: !1, line: 5207, column: 9)
!1676 = distinct !DILexicalBlock(scope: !1677, file: !1, line: 5204, column: 54)
!1677 = distinct !DILexicalBlock(scope: !1665, file: !1, line: 5204, column: 9)
!1678 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1679, file: !1, line: 5213, type: !276)
!1679 = distinct !DILexicalBlock(scope: !1680, file: !1, line: 5213, column: 9)
!1680 = distinct !DILexicalBlock(scope: !1681, file: !1, line: 5211, column: 19)
!1681 = distinct !DILexicalBlock(scope: !1665, file: !1, line: 5211, column: 9)
!1682 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1683, file: !1, line: 5219, type: !276)
!1683 = distinct !DILexicalBlock(scope: !1684, file: !1, line: 5219, column: 9)
!1684 = distinct !DILexicalBlock(scope: !1685, file: !1, line: 5218, column: 27)
!1685 = distinct !DILexicalBlock(scope: !1665, file: !1, line: 5218, column: 9)
!1686 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1687, file: !1, line: 5228, type: !276)
!1687 = distinct !DILexicalBlock(scope: !1665, file: !1, line: 5228, column: 5)
!1688 = !DISubprogram(name: "parse_arglist", scope: !1, file: !1, line: 5152, type: !1689, isLocal: true, isDefinition: true, scopeLine: 5153, flags: DIFlagPrototyped, isOptimized: true, function: i8** (%struct._object*, i64*)* @parse_arglist, variables: !1691)
!1689 = !DISubroutineType(types: !1690)
!1690 = !{!652, !276, !517}
!1691 = !{!1692, !1693, !1694, !1695, !1696, !1700, !1704}
!1692 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argv", arg: 1, scope: !1688, file: !1, line: 5152, type: !276)
!1693 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argc", arg: 2, scope: !1688, file: !1, line: 5152, type: !517)
!1694 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1688, file: !1, line: 5154, type: !314)
!1695 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "argvlist", scope: !1688, file: !1, line: 5155, type: !652)
!1696 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "item", scope: !1697, file: !1, line: 5161, type: !276)
!1697 = distinct !DILexicalBlock(scope: !1698, file: !1, line: 5160, column: 33)
!1698 = distinct !DILexicalBlock(scope: !1699, file: !1, line: 5160, column: 5)
!1699 = distinct !DILexicalBlock(scope: !1688, file: !1, line: 5160, column: 5)
!1700 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1701, file: !1, line: 5165, type: !276)
!1701 = distinct !DILexicalBlock(scope: !1702, file: !1, line: 5165, column: 13)
!1702 = distinct !DILexicalBlock(scope: !1703, file: !1, line: 5164, column: 52)
!1703 = distinct !DILexicalBlock(scope: !1697, file: !1, line: 5164, column: 13)
!1704 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1705, file: !1, line: 5168, type: !276)
!1705 = distinct !DILexicalBlock(scope: !1697, file: !1, line: 5168, column: 9)
!1706 = !DISubprogram(name: "fsconvert_strdup", scope: !1, file: !1, line: 5056, type: !1707, isLocal: true, isDefinition: true, scopeLine: 5057, flags: DIFlagPrototyped, isOptimized: true, variables: !1709)
!1707 = !DISubroutineType(types: !1708)
!1708 = !{!314, !276, !652}
!1709 = !{!1710, !1711, !1712, !1713, !1714}
!1710 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "o", arg: 1, scope: !1706, file: !1, line: 5056, type: !276)
!1711 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "out", arg: 2, scope: !1706, file: !1, line: 5056, type: !652)
!1712 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bytes", scope: !1706, file: !1, line: 5058, type: !276)
!1713 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !1706, file: !1, line: 5059, type: !282)
!1714 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1715, file: !1, line: 5069, type: !276)
!1715 = distinct !DILexicalBlock(scope: !1706, file: !1, line: 5069, column: 5)
!1716 = !DISubprogram(name: "free_string_array", scope: !1, file: !1, line: 5047, type: !1717, isLocal: true, isDefinition: true, scopeLine: 5048, flags: DIFlagPrototyped, isOptimized: true, variables: !1719)
!1717 = !DISubroutineType(types: !1718)
!1718 = !{null, !652, !282}
!1719 = !{!1720, !1721, !1722}
!1720 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "array", arg: 1, scope: !1716, file: !1, line: 5047, type: !652)
!1721 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "count", arg: 2, scope: !1716, file: !1, line: 5047, type: !282)
!1722 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1716, file: !1, line: 5049, type: !282)
!1723 = !DISubprogram(name: "posix_execve", scope: !1, file: !1, line: 5245, type: !405, isLocal: true, isDefinition: true, scopeLine: 5246, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_execve, variables: !1724)
!1724 = !{!1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734}
!1725 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1723, file: !1, line: 5245, type: !276)
!1726 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1723, file: !1, line: 5245, type: !276)
!1727 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !1723, file: !1, line: 5245, type: !276)
!1728 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "path", scope: !1723, file: !1, line: 5247, type: !615)
!1729 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "argv", scope: !1723, file: !1, line: 5248, type: !276)
!1730 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "env", scope: !1723, file: !1, line: 5248, type: !276)
!1731 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "argvlist", scope: !1723, file: !1, line: 5249, type: !652)
!1732 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "envlist", scope: !1723, file: !1, line: 5250, type: !652)
!1733 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "argc", scope: !1723, file: !1, line: 5251, type: !282)
!1734 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "envc", scope: !1723, file: !1, line: 5251, type: !282)
!1735 = !DISubprogram(name: "parse_envlist", scope: !1, file: !1, line: 5076, type: !1689, isLocal: true, isDefinition: true, scopeLine: 5077, flags: DIFlagPrototyped, isOptimized: true, variables: !1736)
!1736 = !{!1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1760, !1764, !1766, !1768, !1770, !1772, !1774, !1776, !1779, !1781}
!1737 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "env", arg: 1, scope: !1735, file: !1, line: 5076, type: !276)
!1738 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "envc_ptr", arg: 2, scope: !1735, file: !1, line: 5076, type: !517)
!1739 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "envlist", scope: !1735, file: !1, line: 5078, type: !652)
!1740 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1735, file: !1, line: 5079, type: !282)
!1741 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pos", scope: !1735, file: !1, line: 5079, type: !282)
!1742 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "envc", scope: !1735, file: !1, line: 5079, type: !282)
!1743 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "keys", scope: !1735, file: !1, line: 5080, type: !276)
!1744 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vals", scope: !1735, file: !1, line: 5080, type: !276)
!1745 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "key", scope: !1735, file: !1, line: 5081, type: !276)
!1746 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val", scope: !1735, file: !1, line: 5081, type: !276)
!1747 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "key2", scope: !1735, file: !1, line: 5081, type: !276)
!1748 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val2", scope: !1735, file: !1, line: 5081, type: !276)
!1749 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p", scope: !1735, file: !1, line: 5082, type: !322)
!1750 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !1735, file: !1, line: 5082, type: !322)
!1751 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "v", scope: !1735, file: !1, line: 5082, type: !322)
!1752 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !1735, file: !1, line: 5083, type: !364)
!1753 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1754, file: !1, line: 5115, type: !276)
!1754 = distinct !DILexicalBlock(scope: !1755, file: !1, line: 5115, column: 13)
!1755 = distinct !DILexicalBlock(scope: !1756, file: !1, line: 5114, column: 53)
!1756 = distinct !DILexicalBlock(scope: !1757, file: !1, line: 5114, column: 13)
!1757 = distinct !DILexicalBlock(scope: !1758, file: !1, line: 5106, column: 35)
!1758 = distinct !DILexicalBlock(scope: !1759, file: !1, line: 5106, column: 5)
!1759 = distinct !DILexicalBlock(scope: !1735, file: !1, line: 5106, column: 5)
!1760 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1761, file: !1, line: 5126, type: !276)
!1761 = distinct !DILexicalBlock(scope: !1762, file: !1, line: 5126, column: 13)
!1762 = distinct !DILexicalBlock(scope: !1763, file: !1, line: 5124, column: 24)
!1763 = distinct !DILexicalBlock(scope: !1757, file: !1, line: 5124, column: 13)
!1764 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1765, file: !1, line: 5127, type: !276)
!1765 = distinct !DILexicalBlock(scope: !1762, file: !1, line: 5127, column: 13)
!1766 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1767, file: !1, line: 5132, type: !276)
!1767 = distinct !DILexicalBlock(scope: !1757, file: !1, line: 5132, column: 9)
!1768 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1769, file: !1, line: 5133, type: !276)
!1769 = distinct !DILexicalBlock(scope: !1757, file: !1, line: 5133, column: 9)
!1770 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1771, file: !1, line: 5135, type: !276)
!1771 = distinct !DILexicalBlock(scope: !1735, file: !1, line: 5135, column: 5)
!1772 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1773, file: !1, line: 5136, type: !276)
!1773 = distinct !DILexicalBlock(scope: !1735, file: !1, line: 5136, column: 5)
!1774 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1775, file: !1, line: 5143, type: !276)
!1775 = distinct !DILexicalBlock(scope: !1735, file: !1, line: 5143, column: 5)
!1776 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1777, file: !1, line: 5143, type: !276)
!1777 = distinct !DILexicalBlock(scope: !1778, file: !1, line: 5143, column: 5)
!1778 = distinct !DILexicalBlock(scope: !1775, file: !1, line: 5143, column: 5)
!1779 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1780, file: !1, line: 5144, type: !276)
!1780 = distinct !DILexicalBlock(scope: !1735, file: !1, line: 5144, column: 5)
!1781 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1782, file: !1, line: 5144, type: !276)
!1782 = distinct !DILexicalBlock(scope: !1783, file: !1, line: 5144, column: 5)
!1783 = distinct !DILexicalBlock(scope: !1780, file: !1, line: 5144, column: 5)
!1784 = !DISubprogram(name: "posix_fork", scope: !1, file: !1, line: 5530, type: !396, isLocal: true, isDefinition: true, scopeLine: 5531, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_fork, variables: !1785)
!1785 = !{!1786, !1787, !1788, !1791}
!1786 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1784, file: !1, line: 5530, type: !276)
!1787 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "noargs", arg: 2, scope: !1784, file: !1, line: 5530, type: !276)
!1788 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pid", scope: !1784, file: !1, line: 5532, type: !1789)
!1789 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !269, line: 98, baseType: !1790)
!1790 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !271, line: 142, baseType: !314)
!1791 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1784, file: !1, line: 5533, type: !314)
!1792 = !DISubprogram(name: "posix_sched_get_priority_max", scope: !1, file: !1, line: 5564, type: !396, isLocal: true, isDefinition: true, scopeLine: 5565, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_sched_get_priority_max, variables: !1793)
!1793 = !{!1794, !1795, !1796, !1797}
!1794 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1792, file: !1, line: 5564, type: !276)
!1795 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1792, file: !1, line: 5564, type: !276)
!1796 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "policy", scope: !1792, file: !1, line: 5566, type: !314)
!1797 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "max", scope: !1792, file: !1, line: 5566, type: !314)
!1798 = !DISubprogram(name: "posix_sched_get_priority_min", scope: !1, file: !1, line: 5581, type: !396, isLocal: true, isDefinition: true, scopeLine: 5582, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_sched_get_priority_min, variables: !1799)
!1799 = !{!1800, !1801, !1802, !1803}
!1800 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1798, file: !1, line: 5581, type: !276)
!1801 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1798, file: !1, line: 5581, type: !276)
!1802 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "policy", scope: !1798, file: !1, line: 5583, type: !314)
!1803 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "min", scope: !1798, file: !1, line: 5583, type: !314)
!1804 = !DISubprogram(name: "posix_sched_getparam", scope: !1, file: !1, line: 5713, type: !396, isLocal: true, isDefinition: true, scopeLine: 5714, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_sched_getparam, variables: !1805)
!1805 = !{!1806, !1807, !1808, !1809, !1813, !1814, !1815}
!1806 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1804, file: !1, line: 5713, type: !276)
!1807 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1804, file: !1, line: 5713, type: !276)
!1808 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pid", scope: !1804, file: !1, line: 5715, type: !1789)
!1809 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "param", scope: !1804, file: !1, line: 5716, type: !1810)
!1810 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_param", file: !654, line: 73, size: 32, align: 32, elements: !1811)
!1811 = !{!1812}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "__sched_priority", scope: !1810, file: !654, line: 75, baseType: !314, size: 32, align: 32)
!1813 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1804, file: !1, line: 5717, type: !276)
!1814 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "priority", scope: !1804, file: !1, line: 5717, type: !276)
!1815 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1816, file: !1, line: 5728, type: !276)
!1816 = distinct !DILexicalBlock(scope: !1817, file: !1, line: 5728, column: 9)
!1817 = distinct !DILexicalBlock(scope: !1818, file: !1, line: 5727, column: 20)
!1818 = distinct !DILexicalBlock(scope: !1804, file: !1, line: 5727, column: 9)
!1819 = !DISubprogram(name: "posix_sched_getscheduler", scope: !1, file: !1, line: 5603, type: !396, isLocal: true, isDefinition: true, scopeLine: 5604, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_sched_getscheduler, variables: !1820)
!1820 = !{!1821, !1822, !1823, !1824}
!1821 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1819, file: !1, line: 5603, type: !276)
!1822 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1819, file: !1, line: 5603, type: !276)
!1823 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pid", scope: !1819, file: !1, line: 5605, type: !1789)
!1824 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "policy", scope: !1819, file: !1, line: 5606, type: !314)
!1825 = !DISubprogram(name: "posix_sched_rr_get_interval", scope: !1, file: !1, line: 5763, type: !396, isLocal: true, isDefinition: true, scopeLine: 5764, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_sched_rr_get_interval, variables: !1826)
!1826 = !{!1827, !1828, !1829, !1830}
!1827 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1825, file: !1, line: 5763, type: !276)
!1828 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1825, file: !1, line: 5763, type: !276)
!1829 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pid", scope: !1825, file: !1, line: 5765, type: !1789)
!1830 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "interval", scope: !1825, file: !1, line: 5766, type: !855)
!1831 = !DISubprogram(name: "posix_sched_setparam", scope: !1, file: !1, line: 5741, type: !396, isLocal: true, isDefinition: true, scopeLine: 5742, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_sched_setparam, variables: !1832)
!1832 = !{!1833, !1834, !1835, !1836}
!1833 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1831, file: !1, line: 5741, type: !276)
!1834 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1831, file: !1, line: 5741, type: !276)
!1835 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pid", scope: !1831, file: !1, line: 5743, type: !1789)
!1836 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "param", scope: !1831, file: !1, line: 5744, type: !1810)
!1837 = !DISubprogram(name: "convert_sched_param", scope: !1, file: !1, line: 5653, type: !1838, isLocal: true, isDefinition: true, scopeLine: 5654, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, %struct.sched_param*)* @convert_sched_param, variables: !1841)
!1838 = !DISubroutineType(types: !1839)
!1839 = !{!314, !276, !1840}
!1840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 64, align: 64)
!1841 = !{!1842, !1843, !1844}
!1842 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "param", arg: 1, scope: !1837, file: !1, line: 5653, type: !276)
!1843 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "res", arg: 2, scope: !1837, file: !1, line: 5653, type: !1840)
!1844 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "priority", scope: !1837, file: !1, line: 5655, type: !287)
!1845 = !DISubprogram(name: "posix_sched_setscheduler", scope: !1, file: !1, line: 5683, type: !396, isLocal: true, isDefinition: true, scopeLine: 5684, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_sched_setscheduler, variables: !1846)
!1846 = !{!1847, !1848, !1849, !1850, !1851}
!1847 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1845, file: !1, line: 5683, type: !276)
!1848 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1845, file: !1, line: 5683, type: !276)
!1849 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pid", scope: !1845, file: !1, line: 5685, type: !1789)
!1850 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "policy", scope: !1845, file: !1, line: 5686, type: !314)
!1851 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "param", scope: !1845, file: !1, line: 5687, type: !1810)
!1852 = !DISubprogram(name: "posix_sched_yield", scope: !1, file: !1, line: 5782, type: !396, isLocal: true, isDefinition: true, scopeLine: 5783, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_sched_yield, variables: !1853)
!1853 = !{!1854, !1855}
!1854 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1852, file: !1, line: 5782, type: !276)
!1855 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "noargs", arg: 2, scope: !1852, file: !1, line: 5782, type: !276)
!1856 = !DISubprogram(name: "posix_sched_setaffinity", scope: !1, file: !1, line: 5799, type: !396, isLocal: true, isDefinition: true, scopeLine: 5800, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_sched_setaffinity, variables: !1857)
!1857 = !{!1858, !1859, !1860, !1861, !1862, !1863, !1872, !1873, !1874, !1875, !1877, !1881, !1883, !1886, !1887, !1888, !1890, !1892, !1896, !1898}
!1858 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1856, file: !1, line: 5799, type: !276)
!1859 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1856, file: !1, line: 5799, type: !276)
!1860 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pid", scope: !1856, file: !1, line: 5801, type: !1789)
!1861 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ncpus", scope: !1856, file: !1, line: 5802, type: !314)
!1862 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "setsize", scope: !1856, file: !1, line: 5803, type: !364)
!1863 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mask", scope: !1856, file: !1, line: 5804, type: !1864)
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 64, align: 64)
!1865 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpu_set_t", file: !654, line: 129, baseType: !1866)
!1866 = !DICompositeType(tag: DW_TAG_structure_type, file: !654, line: 126, size: 1024, align: 64, elements: !1867)
!1867 = !{!1868}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "__bits", scope: !1866, file: !654, line: 128, baseType: !1869, size: 1024, align: 64)
!1869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !653, size: 1024, align: 64, elements: !1870)
!1870 = !{!1871}
!1871 = !DISubrange(count: 16)
!1872 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iterable", scope: !1856, file: !1, line: 5805, type: !276)
!1873 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iterator", scope: !1856, file: !1, line: 5805, type: !276)
!1874 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "item", scope: !1856, file: !1, line: 5805, type: !276)
!1875 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cpu", scope: !1876, file: !1, line: 5825, type: !287)
!1876 = distinct !DILexicalBlock(scope: !1856, file: !1, line: 5824, column: 44)
!1877 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1878, file: !1, line: 5831, type: !276)
!1878 = distinct !DILexicalBlock(scope: !1879, file: !1, line: 5831, column: 13)
!1879 = distinct !DILexicalBlock(scope: !1880, file: !1, line: 5826, column: 34)
!1880 = distinct !DILexicalBlock(scope: !1876, file: !1, line: 5826, column: 13)
!1881 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1882, file: !1, line: 5835, type: !276)
!1882 = distinct !DILexicalBlock(scope: !1876, file: !1, line: 5835, column: 9)
!1883 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newncpus", scope: !1884, file: !1, line: 5847, type: !314)
!1884 = distinct !DILexicalBlock(scope: !1885, file: !1, line: 5845, column: 27)
!1885 = distinct !DILexicalBlock(scope: !1876, file: !1, line: 5845, column: 13)
!1886 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newmask", scope: !1884, file: !1, line: 5848, type: !1864)
!1887 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newsetsize", scope: !1884, file: !1, line: 5849, type: !364)
!1888 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__cpu", scope: !1889, file: !1, line: 5869, type: !364)
!1889 = distinct !DILexicalBlock(scope: !1876, file: !1, line: 5869, column: 9)
!1890 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1891, file: !1, line: 5871, type: !276)
!1891 = distinct !DILexicalBlock(scope: !1856, file: !1, line: 5871, column: 5)
!1892 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1893, file: !1, line: 5871, type: !276)
!1893 = distinct !DILexicalBlock(scope: !1894, file: !1, line: 5871, column: 5)
!1894 = distinct !DILexicalBlock(scope: !1895, file: !1, line: 5871, column: 5)
!1895 = distinct !DILexicalBlock(scope: !1891, file: !1, line: 5871, column: 5)
!1896 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1897, file: !1, line: 5883, type: !276)
!1897 = distinct !DILexicalBlock(scope: !1856, file: !1, line: 5883, column: 5)
!1898 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1899, file: !1, line: 5883, type: !276)
!1899 = distinct !DILexicalBlock(scope: !1900, file: !1, line: 5883, column: 5)
!1900 = distinct !DILexicalBlock(scope: !1897, file: !1, line: 5883, column: 5)
!1901 = !DISubprogram(name: "posix_sched_getaffinity", scope: !1, file: !1, line: 5893, type: !396, isLocal: true, isDefinition: true, scopeLine: 5894, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_sched_getaffinity, variables: !1902)
!1902 = !{!1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1918, !1920, !1924, !1926, !1928}
!1903 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1901, file: !1, line: 5893, type: !276)
!1904 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1901, file: !1, line: 5893, type: !276)
!1905 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pid", scope: !1901, file: !1, line: 5895, type: !1789)
!1906 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cpu", scope: !1901, file: !1, line: 5896, type: !314)
!1907 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ncpus", scope: !1901, file: !1, line: 5896, type: !314)
!1908 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "count", scope: !1901, file: !1, line: 5896, type: !314)
!1909 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "setsize", scope: !1901, file: !1, line: 5897, type: !364)
!1910 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mask", scope: !1901, file: !1, line: 5898, type: !1864)
!1911 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1901, file: !1, line: 5899, type: !276)
!1912 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__cpu", scope: !1913, file: !1, line: 5928, type: !364)
!1913 = distinct !DILexicalBlock(scope: !1914, file: !1, line: 5928, column: 13)
!1914 = distinct !DILexicalBlock(scope: !1915, file: !1, line: 5928, column: 13)
!1915 = distinct !DILexicalBlock(scope: !1916, file: !1, line: 5927, column: 69)
!1916 = distinct !DILexicalBlock(scope: !1917, file: !1, line: 5927, column: 5)
!1917 = distinct !DILexicalBlock(scope: !1901, file: !1, line: 5927, column: 5)
!1918 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cpu_num", scope: !1919, file: !1, line: 5929, type: !276)
!1919 = distinct !DILexicalBlock(scope: !1914, file: !1, line: 5928, column: 46)
!1920 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1921, file: !1, line: 5934, type: !276)
!1921 = distinct !DILexicalBlock(scope: !1922, file: !1, line: 5934, column: 17)
!1922 = distinct !DILexicalBlock(scope: !1923, file: !1, line: 5933, column: 42)
!1923 = distinct !DILexicalBlock(scope: !1919, file: !1, line: 5933, column: 17)
!1924 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1925, file: !1, line: 5937, type: !276)
!1925 = distinct !DILexicalBlock(scope: !1919, file: !1, line: 5937, column: 13)
!1926 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1927, file: !1, line: 5946, type: !276)
!1927 = distinct !DILexicalBlock(scope: !1901, file: !1, line: 5946, column: 5)
!1928 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1929, file: !1, line: 5946, type: !276)
!1929 = distinct !DILexicalBlock(scope: !1930, file: !1, line: 5946, column: 5)
!1930 = distinct !DILexicalBlock(scope: !1927, file: !1, line: 5946, column: 5)
!1931 = !DISubprogram(name: "posix_openpty", scope: !1, file: !1, line: 5986, type: !396, isLocal: true, isDefinition: true, scopeLine: 5987, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_openpty, variables: !1932)
!1932 = !{!1933, !1934, !1935, !1936}
!1933 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1931, file: !1, line: 5986, type: !276)
!1934 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "noargs", arg: 2, scope: !1931, file: !1, line: 5986, type: !276)
!1935 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "master_fd", scope: !1931, file: !1, line: 5988, type: !314)
!1936 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "slave_fd", scope: !1931, file: !1, line: 5988, type: !314)
!1937 = !DISubprogram(name: "posix_forkpty", scope: !1, file: !1, line: 6083, type: !396, isLocal: true, isDefinition: true, scopeLine: 6084, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_forkpty, variables: !1938)
!1938 = !{!1939, !1940, !1941, !1942, !1943}
!1939 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1937, file: !1, line: 6083, type: !276)
!1940 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "noargs", arg: 2, scope: !1937, file: !1, line: 6083, type: !276)
!1941 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "master_fd", scope: !1937, file: !1, line: 6085, type: !314)
!1942 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1937, file: !1, line: 6085, type: !314)
!1943 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pid", scope: !1937, file: !1, line: 6086, type: !1789)
!1944 = !DISubprogram(name: "posix_getegid", scope: !1, file: !1, line: 6116, type: !396, isLocal: true, isDefinition: true, scopeLine: 6117, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_getegid, variables: !1945)
!1945 = !{!1946, !1947}
!1946 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1944, file: !1, line: 6116, type: !276)
!1947 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "noargs", arg: 2, scope: !1944, file: !1, line: 6116, type: !276)
!1948 = !DISubprogram(name: "posix_geteuid", scope: !1, file: !1, line: 6129, type: !396, isLocal: true, isDefinition: true, scopeLine: 6130, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_geteuid, variables: !1949)
!1949 = !{!1950, !1951}
!1950 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1948, file: !1, line: 6129, type: !276)
!1951 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "noargs", arg: 2, scope: !1948, file: !1, line: 6129, type: !276)
!1952 = !DISubprogram(name: "posix_getgid", scope: !1, file: !1, line: 6142, type: !396, isLocal: true, isDefinition: true, scopeLine: 6143, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_getgid, variables: !1953)
!1953 = !{!1954, !1955}
!1954 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1952, file: !1, line: 6142, type: !276)
!1955 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "noargs", arg: 2, scope: !1952, file: !1, line: 6142, type: !276)
!1956 = !DISubprogram(name: "posix_getgrouplist", scope: !1, file: !1, line: 6167, type: !396, isLocal: true, isDefinition: true, scopeLine: 6168, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_getgrouplist, variables: !1957)
!1957 = !{!1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1970}
!1958 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1956, file: !1, line: 6167, type: !276)
!1959 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1956, file: !1, line: 6167, type: !276)
!1960 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "user", scope: !1956, file: !1, line: 6176, type: !299)
!1961 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1956, file: !1, line: 6177, type: !314)
!1962 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ngroups", scope: !1956, file: !1, line: 6177, type: !314)
!1963 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "list", scope: !1956, file: !1, line: 6178, type: !276)
!1964 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "groups", scope: !1956, file: !1, line: 6182, type: !613)
!1965 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "basegid", scope: !1956, file: !1, line: 6182, type: !273)
!1966 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "o", scope: !1967, file: !1, line: 6218, type: !276)
!1967 = distinct !DILexicalBlock(scope: !1968, file: !1, line: 6214, column: 35)
!1968 = distinct !DILexicalBlock(scope: !1969, file: !1, line: 6214, column: 5)
!1969 = distinct !DILexicalBlock(scope: !1956, file: !1, line: 6214, column: 5)
!1970 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1971, file: !1, line: 6221, type: !276)
!1971 = distinct !DILexicalBlock(scope: !1972, file: !1, line: 6221, column: 13)
!1972 = distinct !DILexicalBlock(scope: !1973, file: !1, line: 6220, column: 24)
!1973 = distinct !DILexicalBlock(scope: !1967, file: !1, line: 6220, column: 13)
!1974 = !DISubprogram(name: "posix_getgroups", scope: !1, file: !1, line: 6240, type: !396, isLocal: true, isDefinition: true, scopeLine: 6241, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_getgroups, variables: !1975)
!1975 = !{!1976, !1977, !1978, !1979, !1983, !1984, !1985, !1988, !1992}
!1976 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1974, file: !1, line: 6240, type: !276)
!1977 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "noargs", arg: 2, scope: !1974, file: !1, line: 6240, type: !276)
!1978 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1974, file: !1, line: 6242, type: !276)
!1979 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "grouplist", scope: !1974, file: !1, line: 6250, type: !1980)
!1980 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 2097152, align: 32, elements: !1981)
!1981 = !{!1982}
!1982 = !DISubrange(count: 65536)
!1983 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "alt_grouplist", scope: !1974, file: !1, line: 6260, type: !613)
!1984 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1974, file: !1, line: 6261, type: !314)
!1985 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1986, file: !1, line: 6321, type: !314)
!1986 = distinct !DILexicalBlock(scope: !1987, file: !1, line: 6320, column: 25)
!1987 = distinct !DILexicalBlock(scope: !1974, file: !1, line: 6320, column: 9)
!1988 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "o", scope: !1989, file: !1, line: 6323, type: !276)
!1989 = distinct !DILexicalBlock(scope: !1990, file: !1, line: 6322, column: 33)
!1990 = distinct !DILexicalBlock(scope: !1991, file: !1, line: 6322, column: 9)
!1991 = distinct !DILexicalBlock(scope: !1986, file: !1, line: 6322, column: 9)
!1992 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1993, file: !1, line: 6325, type: !276)
!1993 = distinct !DILexicalBlock(scope: !1994, file: !1, line: 6325, column: 17)
!1994 = distinct !DILexicalBlock(scope: !1995, file: !1, line: 6324, column: 28)
!1995 = distinct !DILexicalBlock(scope: !1989, file: !1, line: 6324, column: 17)
!1996 = !DISubprogram(name: "posix_getpid", scope: !1, file: !1, line: 6154, type: !396, isLocal: true, isDefinition: true, scopeLine: 6155, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_getpid, variables: !1997)
!1997 = !{!1998, !1999}
!1998 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1996, file: !1, line: 6154, type: !276)
!1999 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "noargs", arg: 2, scope: !1996, file: !1, line: 6154, type: !276)
!2000 = !DISubprogram(name: "posix_getpgrp", scope: !1, file: !1, line: 6407, type: !396, isLocal: true, isDefinition: true, scopeLine: 6408, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_getpgrp, variables: !2001)
!2001 = !{!2002, !2003}
!2002 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2000, file: !1, line: 6407, type: !276)
!2003 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "noargs", arg: 2, scope: !2000, file: !1, line: 6407, type: !276)
!2004 = !DISubprogram(name: "posix_getppid", scope: !1, file: !1, line: 6489, type: !396, isLocal: true, isDefinition: true, scopeLine: 6490, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_getppid, variables: !2005)
!2005 = !{!2006, !2007}
!2006 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2004, file: !1, line: 6489, type: !276)
!2007 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "noargs", arg: 2, scope: !2004, file: !1, line: 6489, type: !276)
!2008 = !DISubprogram(name: "posix_getuid", scope: !1, file: !1, line: 6545, type: !396, isLocal: true, isDefinition: true, scopeLine: 6546, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_getuid, variables: !2009)
!2009 = !{!2010, !2011}
!2010 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2008, file: !1, line: 6545, type: !276)
!2011 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "noargs", arg: 2, scope: !2008, file: !1, line: 6545, type: !276)
!2012 = !DISubprogram(name: "posix_getlogin", scope: !1, file: !1, line: 6506, type: !396, isLocal: true, isDefinition: true, scopeLine: 6507, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_getlogin, variables: !2013)
!2013 = !{!2014, !2015, !2016, !2017, !2018}
!2014 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2012, file: !1, line: 6506, type: !276)
!2015 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "noargs", arg: 2, scope: !2012, file: !1, line: 6506, type: !276)
!2016 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !2012, file: !1, line: 6508, type: !276)
!2017 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !2012, file: !1, line: 6520, type: !322)
!2018 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "old_errno", scope: !2012, file: !1, line: 6521, type: !314)
!2019 = !DISubprogram(name: "posix_kill", scope: !1, file: !1, line: 6558, type: !396, isLocal: true, isDefinition: true, scopeLine: 6559, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_kill, variables: !2020)
!2020 = !{!2021, !2022, !2023, !2024}
!2021 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2019, file: !1, line: 6558, type: !276)
!2022 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2019, file: !1, line: 6558, type: !276)
!2023 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pid", scope: !2019, file: !1, line: 6560, type: !1789)
!2024 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sig", scope: !2019, file: !1, line: 6561, type: !314)
!2025 = !DISubprogram(name: "posix_killpg", scope: !1, file: !1, line: 6577, type: !396, isLocal: true, isDefinition: true, scopeLine: 6578, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_killpg, variables: !2026)
!2026 = !{!2027, !2028, !2029, !2030}
!2027 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2025, file: !1, line: 6577, type: !276)
!2028 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2025, file: !1, line: 6577, type: !276)
!2029 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sig", scope: !2025, file: !1, line: 6579, type: !314)
!2030 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pgid", scope: !2025, file: !1, line: 6580, type: !1789)
!2031 = !DISubprogram(name: "posix_setuid", scope: !1, file: !1, line: 6671, type: !396, isLocal: true, isDefinition: true, scopeLine: 6672, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_setuid, variables: !2032)
!2032 = !{!2033, !2034, !2035}
!2033 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2031, file: !1, line: 6671, type: !276)
!2034 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2031, file: !1, line: 6671, type: !276)
!2035 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "uid", scope: !2031, file: !1, line: 6673, type: !268)
!2036 = !DISubprogram(name: "posix_seteuid", scope: !1, file: !1, line: 6690, type: !396, isLocal: true, isDefinition: true, scopeLine: 6691, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_seteuid, variables: !2037)
!2037 = !{!2038, !2039, !2040}
!2038 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2036, file: !1, line: 6690, type: !276)
!2039 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2036, file: !1, line: 6690, type: !276)
!2040 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "euid", scope: !2036, file: !1, line: 6692, type: !268)
!2041 = !DISubprogram(name: "posix_setegid", scope: !1, file: !1, line: 6710, type: !396, isLocal: true, isDefinition: true, scopeLine: 6711, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_setegid, variables: !2042)
!2042 = !{!2043, !2044, !2045}
!2043 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2041, file: !1, line: 6710, type: !276)
!2044 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2041, file: !1, line: 6710, type: !276)
!2045 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "egid", scope: !2041, file: !1, line: 6712, type: !273)
!2046 = !DISubprogram(name: "posix_setreuid", scope: !1, file: !1, line: 6730, type: !396, isLocal: true, isDefinition: true, scopeLine: 6731, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_setreuid, variables: !2047)
!2047 = !{!2048, !2049, !2050, !2051}
!2048 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2046, file: !1, line: 6730, type: !276)
!2049 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2046, file: !1, line: 6730, type: !276)
!2050 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ruid", scope: !2046, file: !1, line: 6732, type: !268)
!2051 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "euid", scope: !2046, file: !1, line: 6732, type: !268)
!2052 = !DISubprogram(name: "posix_setregid", scope: !1, file: !1, line: 6752, type: !396, isLocal: true, isDefinition: true, scopeLine: 6753, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_setregid, variables: !2053)
!2053 = !{!2054, !2055, !2056, !2057}
!2054 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2052, file: !1, line: 6752, type: !276)
!2055 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2052, file: !1, line: 6752, type: !276)
!2056 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rgid", scope: !2052, file: !1, line: 6754, type: !273)
!2057 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "egid", scope: !2052, file: !1, line: 6754, type: !273)
!2058 = !DISubprogram(name: "posix_setgid", scope: !1, file: !1, line: 6774, type: !396, isLocal: true, isDefinition: true, scopeLine: 6775, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_setgid, variables: !2059)
!2059 = !{!2060, !2061, !2062}
!2060 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2058, file: !1, line: 6774, type: !276)
!2061 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2058, file: !1, line: 6774, type: !276)
!2062 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "gid", scope: !2058, file: !1, line: 6776, type: !273)
!2063 = !DISubprogram(name: "posix_setgroups", scope: !1, file: !1, line: 6792, type: !396, isLocal: true, isDefinition: true, scopeLine: 6793, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_setgroups, variables: !2064)
!2064 = !{!2065, !2066, !2067, !2068, !2069, !2070, !2074, !2078, !2083}
!2065 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2063, file: !1, line: 6792, type: !276)
!2066 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "groups", arg: 2, scope: !2063, file: !1, line: 6792, type: !276)
!2067 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !2063, file: !1, line: 6794, type: !314)
!2068 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !2063, file: !1, line: 6794, type: !314)
!2069 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "grouplist", scope: !2063, file: !1, line: 6795, type: !1980)
!2070 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "elem", scope: !2071, file: !1, line: 6807, type: !276)
!2071 = distinct !DILexicalBlock(scope: !2072, file: !1, line: 6806, column: 30)
!2072 = distinct !DILexicalBlock(scope: !2073, file: !1, line: 6806, column: 5)
!2073 = distinct !DILexicalBlock(scope: !2063, file: !1, line: 6806, column: 5)
!2074 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2075, file: !1, line: 6814, type: !276)
!2075 = distinct !DILexicalBlock(scope: !2076, file: !1, line: 6814, column: 13)
!2076 = distinct !DILexicalBlock(scope: !2077, file: !1, line: 6811, column: 34)
!2077 = distinct !DILexicalBlock(scope: !2071, file: !1, line: 6811, column: 13)
!2078 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2079, file: !1, line: 6818, type: !276)
!2079 = distinct !DILexicalBlock(scope: !2080, file: !1, line: 6818, column: 17)
!2080 = distinct !DILexicalBlock(scope: !2081, file: !1, line: 6817, column: 58)
!2081 = distinct !DILexicalBlock(scope: !2082, file: !1, line: 6817, column: 17)
!2082 = distinct !DILexicalBlock(scope: !2077, file: !1, line: 6816, column: 16)
!2083 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2084, file: !1, line: 6822, type: !276)
!2084 = distinct !DILexicalBlock(scope: !2071, file: !1, line: 6822, column: 9)
!2085 = !DISubprogram(name: "posix_initgroups", scope: !1, file: !1, line: 6349, type: !396, isLocal: true, isDefinition: true, scopeLine: 6350, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_initgroups, variables: !2086)
!2086 = !{!2087, !2088, !2089, !2090, !2091, !2092, !2093}
!2087 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2085, file: !1, line: 6349, type: !276)
!2088 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2085, file: !1, line: 6349, type: !276)
!2089 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oname", scope: !2085, file: !1, line: 6351, type: !276)
!2090 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "username", scope: !2085, file: !1, line: 6352, type: !322)
!2091 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !2085, file: !1, line: 6353, type: !314)
!2092 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "gid", scope: !2085, file: !1, line: 6357, type: !273)
!2093 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2094, file: !1, line: 6373, type: !276)
!2094 = distinct !DILexicalBlock(scope: !2085, file: !1, line: 6373, column: 5)
!2095 = !DISubprogram(name: "posix_getpgid", scope: !1, file: !1, line: 6388, type: !396, isLocal: true, isDefinition: true, scopeLine: 6389, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_getpgid, variables: !2096)
!2096 = !{!2097, !2098, !2099, !2100}
!2097 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2095, file: !1, line: 6388, type: !276)
!2098 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2095, file: !1, line: 6388, type: !276)
!2099 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pid", scope: !2095, file: !1, line: 6390, type: !1789)
!2100 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pgid", scope: !2095, file: !1, line: 6390, type: !1789)
!2101 = !DISubprogram(name: "posix_setpgrp", scope: !1, file: !1, line: 6424, type: !396, isLocal: true, isDefinition: true, scopeLine: 6425, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_setpgrp, variables: !2102)
!2102 = !{!2103, !2104}
!2103 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2101, file: !1, line: 6424, type: !276)
!2104 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "noargs", arg: 2, scope: !2101, file: !1, line: 6424, type: !276)
!2105 = !DISubprogram(name: "posix_wait", scope: !1, file: !1, line: 7048, type: !396, isLocal: true, isDefinition: true, scopeLine: 7049, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_wait, variables: !2106)
!2106 = !{!2107, !2108, !2109, !2110, !2111}
!2107 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2105, file: !1, line: 7048, type: !276)
!2108 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "noargs", arg: 2, scope: !2105, file: !1, line: 7048, type: !276)
!2109 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pid", scope: !2105, file: !1, line: 7050, type: !1789)
!2110 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "status", scope: !2105, file: !1, line: 7051, type: !314)
!2111 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !2112, file: !1, line: 7054, type: !870)
!2112 = distinct !DILexicalBlock(scope: !2105, file: !1, line: 7054, column: 5)
!2113 = !DISubprogram(name: "posix_wait3", scope: !1, file: !1, line: 6899, type: !396, isLocal: true, isDefinition: true, scopeLine: 6900, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_wait3, variables: !2114)
!2114 = !{!2115, !2116, !2117, !2118, !2119, !2200, !2201}
!2115 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2113, file: !1, line: 6899, type: !276)
!2116 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2113, file: !1, line: 6899, type: !276)
!2117 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pid", scope: !2113, file: !1, line: 6901, type: !1789)
!2118 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "options", scope: !2113, file: !1, line: 6902, type: !314)
!2119 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ru", scope: !2113, file: !1, line: 6903, type: !2120)
!2120 = !DICompositeType(tag: DW_TAG_structure_type, name: "rusage", file: !233, line: 187, size: 1152, align: 64, elements: !2121)
!2121 = !{!2122, !2129, !2130, !2135, !2140, !2145, !2150, !2155, !2160, !2165, !2170, !2175, !2180, !2185, !2190, !2195}
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "ru_utime", scope: !2120, file: !233, line: 190, baseType: !2123, size: 128, align: 64)
!2123 = !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !2124, line: 30, size: 128, align: 64, elements: !2125)
!2124 = !DIFile(filename: "/usr/include/bits/time.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!2125 = !{!2126, !2127}
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2123, file: !2124, line: 32, baseType: !858, size: 64, align: 64)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !2123, file: !2124, line: 33, baseType: !2128, size: 64, align: 64, offset: 64)
!2128 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !271, line: 150, baseType: !287)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "ru_stime", scope: !2120, file: !233, line: 192, baseType: !2123, size: 128, align: 64, offset: 128)
!2130 = !DIDerivedType(tag: DW_TAG_member, scope: !2120, file: !233, line: 194, baseType: !2131, size: 64, align: 64, offset: 256)
!2131 = !DICompositeType(tag: DW_TAG_union_type, scope: !2120, file: !233, line: 194, size: 64, align: 64, elements: !2132)
!2132 = !{!2133, !2134}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "ru_maxrss", scope: !2131, file: !233, line: 196, baseType: !287, size: 64, align: 64)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_maxrss_word", scope: !2131, file: !233, line: 197, baseType: !860, size: 64, align: 64)
!2135 = !DIDerivedType(tag: DW_TAG_member, scope: !2120, file: !233, line: 202, baseType: !2136, size: 64, align: 64, offset: 320)
!2136 = !DICompositeType(tag: DW_TAG_union_type, scope: !2120, file: !233, line: 202, size: 64, align: 64, elements: !2137)
!2137 = !{!2138, !2139}
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "ru_ixrss", scope: !2136, file: !233, line: 204, baseType: !287, size: 64, align: 64)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_ixrss_word", scope: !2136, file: !233, line: 205, baseType: !860, size: 64, align: 64)
!2140 = !DIDerivedType(tag: DW_TAG_member, scope: !2120, file: !233, line: 208, baseType: !2141, size: 64, align: 64, offset: 384)
!2141 = !DICompositeType(tag: DW_TAG_union_type, scope: !2120, file: !233, line: 208, size: 64, align: 64, elements: !2142)
!2142 = !{!2143, !2144}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "ru_idrss", scope: !2141, file: !233, line: 210, baseType: !287, size: 64, align: 64)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_idrss_word", scope: !2141, file: !233, line: 211, baseType: !860, size: 64, align: 64)
!2145 = !DIDerivedType(tag: DW_TAG_member, scope: !2120, file: !233, line: 214, baseType: !2146, size: 64, align: 64, offset: 448)
!2146 = !DICompositeType(tag: DW_TAG_union_type, scope: !2120, file: !233, line: 214, size: 64, align: 64, elements: !2147)
!2147 = !{!2148, !2149}
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "ru_isrss", scope: !2146, file: !233, line: 216, baseType: !287, size: 64, align: 64)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_isrss_word", scope: !2146, file: !233, line: 217, baseType: !860, size: 64, align: 64)
!2150 = !DIDerivedType(tag: DW_TAG_member, scope: !2120, file: !233, line: 221, baseType: !2151, size: 64, align: 64, offset: 512)
!2151 = !DICompositeType(tag: DW_TAG_union_type, scope: !2120, file: !233, line: 221, size: 64, align: 64, elements: !2152)
!2152 = !{!2153, !2154}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "ru_minflt", scope: !2151, file: !233, line: 223, baseType: !287, size: 64, align: 64)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_minflt_word", scope: !2151, file: !233, line: 224, baseType: !860, size: 64, align: 64)
!2155 = !DIDerivedType(tag: DW_TAG_member, scope: !2120, file: !233, line: 227, baseType: !2156, size: 64, align: 64, offset: 576)
!2156 = !DICompositeType(tag: DW_TAG_union_type, scope: !2120, file: !233, line: 227, size: 64, align: 64, elements: !2157)
!2157 = !{!2158, !2159}
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "ru_majflt", scope: !2156, file: !233, line: 229, baseType: !287, size: 64, align: 64)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_majflt_word", scope: !2156, file: !233, line: 230, baseType: !860, size: 64, align: 64)
!2160 = !DIDerivedType(tag: DW_TAG_member, scope: !2120, file: !233, line: 233, baseType: !2161, size: 64, align: 64, offset: 640)
!2161 = !DICompositeType(tag: DW_TAG_union_type, scope: !2120, file: !233, line: 233, size: 64, align: 64, elements: !2162)
!2162 = !{!2163, !2164}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "ru_nswap", scope: !2161, file: !233, line: 235, baseType: !287, size: 64, align: 64)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_nswap_word", scope: !2161, file: !233, line: 236, baseType: !860, size: 64, align: 64)
!2165 = !DIDerivedType(tag: DW_TAG_member, scope: !2120, file: !233, line: 240, baseType: !2166, size: 64, align: 64, offset: 704)
!2166 = !DICompositeType(tag: DW_TAG_union_type, scope: !2120, file: !233, line: 240, size: 64, align: 64, elements: !2167)
!2167 = !{!2168, !2169}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "ru_inblock", scope: !2166, file: !233, line: 242, baseType: !287, size: 64, align: 64)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_inblock_word", scope: !2166, file: !233, line: 243, baseType: !860, size: 64, align: 64)
!2170 = !DIDerivedType(tag: DW_TAG_member, scope: !2120, file: !233, line: 246, baseType: !2171, size: 64, align: 64, offset: 768)
!2171 = !DICompositeType(tag: DW_TAG_union_type, scope: !2120, file: !233, line: 246, size: 64, align: 64, elements: !2172)
!2172 = !{!2173, !2174}
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "ru_oublock", scope: !2171, file: !233, line: 248, baseType: !287, size: 64, align: 64)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_oublock_word", scope: !2171, file: !233, line: 249, baseType: !860, size: 64, align: 64)
!2175 = !DIDerivedType(tag: DW_TAG_member, scope: !2120, file: !233, line: 252, baseType: !2176, size: 64, align: 64, offset: 832)
!2176 = !DICompositeType(tag: DW_TAG_union_type, scope: !2120, file: !233, line: 252, size: 64, align: 64, elements: !2177)
!2177 = !{!2178, !2179}
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "ru_msgsnd", scope: !2176, file: !233, line: 254, baseType: !287, size: 64, align: 64)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_msgsnd_word", scope: !2176, file: !233, line: 255, baseType: !860, size: 64, align: 64)
!2180 = !DIDerivedType(tag: DW_TAG_member, scope: !2120, file: !233, line: 258, baseType: !2181, size: 64, align: 64, offset: 896)
!2181 = !DICompositeType(tag: DW_TAG_union_type, scope: !2120, file: !233, line: 258, size: 64, align: 64, elements: !2182)
!2182 = !{!2183, !2184}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "ru_msgrcv", scope: !2181, file: !233, line: 260, baseType: !287, size: 64, align: 64)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_msgrcv_word", scope: !2181, file: !233, line: 261, baseType: !860, size: 64, align: 64)
!2185 = !DIDerivedType(tag: DW_TAG_member, scope: !2120, file: !233, line: 264, baseType: !2186, size: 64, align: 64, offset: 960)
!2186 = !DICompositeType(tag: DW_TAG_union_type, scope: !2120, file: !233, line: 264, size: 64, align: 64, elements: !2187)
!2187 = !{!2188, !2189}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "ru_nsignals", scope: !2186, file: !233, line: 266, baseType: !287, size: 64, align: 64)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_nsignals_word", scope: !2186, file: !233, line: 267, baseType: !860, size: 64, align: 64)
!2190 = !DIDerivedType(tag: DW_TAG_member, scope: !2120, file: !233, line: 272, baseType: !2191, size: 64, align: 64, offset: 1024)
!2191 = !DICompositeType(tag: DW_TAG_union_type, scope: !2120, file: !233, line: 272, size: 64, align: 64, elements: !2192)
!2192 = !{!2193, !2194}
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "ru_nvcsw", scope: !2191, file: !233, line: 274, baseType: !287, size: 64, align: 64)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_nvcsw_word", scope: !2191, file: !233, line: 275, baseType: !860, size: 64, align: 64)
!2195 = !DIDerivedType(tag: DW_TAG_member, scope: !2120, file: !233, line: 279, baseType: !2196, size: 64, align: 64, offset: 1088)
!2196 = !DICompositeType(tag: DW_TAG_union_type, scope: !2120, file: !233, line: 279, size: 64, align: 64, elements: !2197)
!2197 = !{!2198, !2199}
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "ru_nivcsw", scope: !2196, file: !233, line: 281, baseType: !287, size: 64, align: 64)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_nivcsw_word", scope: !2196, file: !233, line: 282, baseType: !860, size: 64, align: 64)
!2200 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "status", scope: !2113, file: !1, line: 6904, type: !314)
!2201 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !2202, file: !1, line: 6910, type: !870)
!2202 = distinct !DILexicalBlock(scope: !2113, file: !1, line: 6910, column: 5)
!2203 = !DISubprogram(name: "wait_helper", scope: !1, file: !1, line: 6834, type: !2204, isLocal: true, isDefinition: true, scopeLine: 6835, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i32, i32, %struct.rusage*)* @wait_helper, variables: !2207)
!2204 = !DISubroutineType(types: !2205)
!2205 = !{!276, !1789, !314, !2206}
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2120, size: 64, align: 64)
!2207 = !{!2208, !2209, !2210, !2211, !2212, !2215, !2217}
!2208 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pid", arg: 1, scope: !2203, file: !1, line: 6834, type: !1789)
!2209 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 2, scope: !2203, file: !1, line: 6834, type: !314)
!2210 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ru", arg: 3, scope: !2203, file: !1, line: 6834, type: !2206)
!2211 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !2203, file: !1, line: 6836, type: !276)
!2212 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "m", scope: !2213, file: !1, line: 6844, type: !276)
!2213 = distinct !DILexicalBlock(scope: !2214, file: !1, line: 6843, column: 32)
!2214 = distinct !DILexicalBlock(scope: !2203, file: !1, line: 6843, column: 9)
!2215 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2216, file: !1, line: 6848, type: !276)
!2216 = distinct !DILexicalBlock(scope: !2213, file: !1, line: 6848, column: 9)
!2217 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2218, file: !1, line: 6885, type: !276)
!2218 = distinct !DILexicalBlock(scope: !2219, file: !1, line: 6885, column: 9)
!2219 = distinct !DILexicalBlock(scope: !2220, file: !1, line: 6884, column: 27)
!2220 = distinct !DILexicalBlock(scope: !2203, file: !1, line: 6884, column: 9)
!2221 = !DISubprogram(name: "posix_wait4", scope: !1, file: !1, line: 6924, type: !396, isLocal: true, isDefinition: true, scopeLine: 6925, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_wait4, variables: !2222)
!2222 = !{!2223, !2224, !2225, !2226, !2227, !2228, !2229}
!2223 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2221, file: !1, line: 6924, type: !276)
!2224 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2221, file: !1, line: 6924, type: !276)
!2225 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pid", scope: !2221, file: !1, line: 6926, type: !1789)
!2226 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "options", scope: !2221, file: !1, line: 6927, type: !314)
!2227 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ru", scope: !2221, file: !1, line: 6928, type: !2120)
!2228 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "status", scope: !2221, file: !1, line: 6929, type: !314)
!2229 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !2230, file: !1, line: 6935, type: !870)
!2230 = distinct !DILexicalBlock(scope: !2221, file: !1, line: 6935, column: 5)
!2231 = !DISubprogram(name: "posix_waitid", scope: !1, file: !1, line: 6955, type: !396, isLocal: true, isDefinition: true, scopeLine: 6956, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_waitid, variables: !2232)
!2232 = !{!2233, !2234, !2235, !2236, !2238, !2241, !2242, !2243, !2303, !2305}
!2233 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2231, file: !1, line: 6955, type: !276)
!2234 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2231, file: !1, line: 6955, type: !276)
!2235 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !2231, file: !1, line: 6957, type: !276)
!2236 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "idtype", scope: !2231, file: !1, line: 6958, type: !2237)
!2237 = !DIDerivedType(tag: DW_TAG_typedef, name: "idtype_t", file: !227, line: 105, baseType: !226)
!2238 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "id", scope: !2231, file: !1, line: 6959, type: !2239)
!2239 = !DIDerivedType(tag: DW_TAG_typedef, name: "id_t", file: !269, line: 104, baseType: !2240)
!2240 = !DIDerivedType(tag: DW_TAG_typedef, name: "__id_t", file: !271, line: 147, baseType: !272)
!2241 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "options", scope: !2231, file: !1, line: 6960, type: !314)
!2242 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !2231, file: !1, line: 6960, type: !314)
!2243 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "si", scope: !2231, file: !1, line: 6961, type: !2244)
!2244 = !DIDerivedType(tag: DW_TAG_typedef, name: "siginfo_t", file: !254, line: 127, baseType: !2245)
!2245 = !DICompositeType(tag: DW_TAG_structure_type, file: !254, line: 62, size: 1024, align: 64, elements: !2246)
!2246 = !{!2247, !2248, !2249, !2250}
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !2245, file: !254, line: 64, baseType: !314, size: 32, align: 32)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !2245, file: !254, line: 65, baseType: !314, size: 32, align: 32, offset: 32)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !2245, file: !254, line: 67, baseType: !314, size: 32, align: 32, offset: 64)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !2245, file: !254, line: 126, baseType: !2251, size: 896, align: 64, offset: 128)
!2251 = !DICompositeType(tag: DW_TAG_union_type, scope: !2245, file: !254, line: 69, size: 896, align: 64, elements: !2252)
!2252 = !{!2253, !2257, !2262, !2273, !2279, !2288, !2292, !2297}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !2251, file: !254, line: 71, baseType: !2254, size: 896, align: 32)
!2254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 896, align: 32, elements: !2255)
!2255 = !{!2256}
!2256 = !DISubrange(count: 28)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !2251, file: !254, line: 78, baseType: !2258, size: 64, align: 32)
!2258 = !DICompositeType(tag: DW_TAG_structure_type, scope: !2251, file: !254, line: 74, size: 64, align: 32, elements: !2259)
!2259 = !{!2260, !2261}
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !2258, file: !254, line: 76, baseType: !1790, size: 32, align: 32)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !2258, file: !254, line: 77, baseType: !270, size: 32, align: 32, offset: 32)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !2251, file: !254, line: 86, baseType: !2263, size: 128, align: 64)
!2263 = !DICompositeType(tag: DW_TAG_structure_type, scope: !2251, file: !254, line: 81, size: 128, align: 64, elements: !2264)
!2264 = !{!2265, !2266, !2267}
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "si_tid", scope: !2263, file: !254, line: 83, baseType: !314, size: 32, align: 32)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "si_overrun", scope: !2263, file: !254, line: 84, baseType: !314, size: 32, align: 32, offset: 32)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "si_sigval", scope: !2263, file: !254, line: 85, baseType: !2268, size: 64, align: 64, offset: 64)
!2268 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !254, line: 36, baseType: !2269)
!2269 = !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !254, line: 32, size: 64, align: 64, elements: !2270)
!2270 = !{!2271, !2272}
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !2269, file: !254, line: 34, baseType: !314, size: 32, align: 32)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !2269, file: !254, line: 35, baseType: !275, size: 64, align: 64)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !2251, file: !254, line: 94, baseType: !2274, size: 128, align: 64)
!2274 = !DICompositeType(tag: DW_TAG_structure_type, scope: !2251, file: !254, line: 89, size: 128, align: 64, elements: !2275)
!2275 = !{!2276, !2277, !2278}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !2274, file: !254, line: 91, baseType: !1790, size: 32, align: 32)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !2274, file: !254, line: 92, baseType: !270, size: 32, align: 32, offset: 32)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "si_sigval", scope: !2274, file: !254, line: 93, baseType: !2268, size: 64, align: 64, offset: 64)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !2251, file: !254, line: 104, baseType: !2280, size: 256, align: 64)
!2280 = !DICompositeType(tag: DW_TAG_structure_type, scope: !2251, file: !254, line: 97, size: 256, align: 64, elements: !2281)
!2281 = !{!2282, !2283, !2284, !2285, !2287}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !2280, file: !254, line: 99, baseType: !1790, size: 32, align: 32)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !2280, file: !254, line: 100, baseType: !270, size: 32, align: 32, offset: 32)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "si_status", scope: !2280, file: !254, line: 101, baseType: !314, size: 32, align: 32, offset: 64)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "si_utime", scope: !2280, file: !254, line: 102, baseType: !2286, size: 64, align: 64, offset: 128)
!2286 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigchld_clock_t", file: !254, line: 58, baseType: !650)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "si_stime", scope: !2280, file: !254, line: 103, baseType: !2286, size: 64, align: 64, offset: 192)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !2251, file: !254, line: 110, baseType: !2289, size: 64, align: 64)
!2289 = !DICompositeType(tag: DW_TAG_structure_type, scope: !2251, file: !254, line: 107, size: 64, align: 64, elements: !2290)
!2290 = !{!2291}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "si_addr", scope: !2289, file: !254, line: 109, baseType: !275, size: 64, align: 64)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !2251, file: !254, line: 117, baseType: !2293, size: 128, align: 64)
!2293 = !DICompositeType(tag: DW_TAG_structure_type, scope: !2251, file: !254, line: 113, size: 128, align: 64, elements: !2294)
!2294 = !{!2295, !2296}
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "si_band", scope: !2293, file: !254, line: 115, baseType: !287, size: 64, align: 64)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "si_fd", scope: !2293, file: !254, line: 116, baseType: !314, size: 32, align: 32, offset: 64)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !2251, file: !254, line: 125, baseType: !2298, size: 128, align: 64)
!2298 = !DICompositeType(tag: DW_TAG_structure_type, scope: !2251, file: !254, line: 120, size: 128, align: 64, elements: !2299)
!2299 = !{!2300, !2301, !2302}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2298, file: !254, line: 122, baseType: !275, size: 64, align: 64)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2298, file: !254, line: 123, baseType: !314, size: 32, align: 32, offset: 64)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2298, file: !254, line: 124, baseType: !272, size: 32, align: 32, offset: 96)
!2303 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !2304, file: !1, line: 6965, type: !870)
!2304 = distinct !DILexicalBlock(scope: !2231, file: !1, line: 6965, column: 5)
!2305 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2306, file: !1, line: 6984, type: !276)
!2306 = distinct !DILexicalBlock(scope: !2307, file: !1, line: 6984, column: 9)
!2307 = distinct !DILexicalBlock(scope: !2308, file: !1, line: 6983, column: 27)
!2308 = distinct !DILexicalBlock(scope: !2231, file: !1, line: 6983, column: 9)
!2309 = !DISubprogram(name: "posix_waitpid", scope: !1, file: !1, line: 6998, type: !396, isLocal: true, isDefinition: true, scopeLine: 6999, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_waitpid, variables: !2310)
!2310 = !{!2311, !2312, !2313, !2314, !2315, !2316}
!2311 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2309, file: !1, line: 6998, type: !276)
!2312 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2309, file: !1, line: 6998, type: !276)
!2313 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pid", scope: !2309, file: !1, line: 7000, type: !1789)
!2314 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "options", scope: !2309, file: !1, line: 7001, type: !314)
!2315 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "status", scope: !2309, file: !1, line: 7002, type: !314)
!2316 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !2317, file: !1, line: 7007, type: !870)
!2317 = distinct !DILexicalBlock(scope: !2309, file: !1, line: 7007, column: 5)
!2318 = !DISubprogram(name: "posix_getsid", scope: !1, file: !1, line: 7591, type: !396, isLocal: true, isDefinition: true, scopeLine: 7592, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_getsid, variables: !2319)
!2319 = !{!2320, !2321, !2322, !2323}
!2320 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2318, file: !1, line: 7591, type: !276)
!2321 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2318, file: !1, line: 7591, type: !276)
!2322 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pid", scope: !2318, file: !1, line: 7593, type: !1789)
!2323 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sid", scope: !2318, file: !1, line: 7594, type: !314)
!2324 = !DISubprogram(name: "posix_setsid", scope: !1, file: !1, line: 7611, type: !396, isLocal: true, isDefinition: true, scopeLine: 7612, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_setsid, variables: !2325)
!2325 = !{!2326, !2327}
!2326 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2324, file: !1, line: 7611, type: !276)
!2327 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "noargs", arg: 2, scope: !2324, file: !1, line: 7611, type: !276)
!2328 = !DISubprogram(name: "posix_setpgid", scope: !1, file: !1, line: 7626, type: !396, isLocal: true, isDefinition: true, scopeLine: 7627, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_setpgid, variables: !2329)
!2329 = !{!2330, !2331, !2332, !2333}
!2330 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2328, file: !1, line: 7626, type: !276)
!2331 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2328, file: !1, line: 7626, type: !276)
!2332 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pid", scope: !2328, file: !1, line: 7628, type: !1789)
!2333 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pgrp", scope: !2328, file: !1, line: 7629, type: !314)
!2334 = !DISubprogram(name: "posix_tcgetpgrp", scope: !1, file: !1, line: 7646, type: !396, isLocal: true, isDefinition: true, scopeLine: 7647, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_tcgetpgrp, variables: !2335)
!2335 = !{!2336, !2337, !2338, !2339}
!2336 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2334, file: !1, line: 7646, type: !276)
!2337 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2334, file: !1, line: 7646, type: !276)
!2338 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !2334, file: !1, line: 7648, type: !314)
!2339 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pgid", scope: !2334, file: !1, line: 7649, type: !1789)
!2340 = !DISubprogram(name: "posix_tcsetpgrp", scope: !1, file: !1, line: 7666, type: !396, isLocal: true, isDefinition: true, scopeLine: 7667, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_tcsetpgrp, variables: !2341)
!2341 = !{!2342, !2343, !2344, !2345}
!2342 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2340, file: !1, line: 7666, type: !276)
!2343 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2340, file: !1, line: 7666, type: !276)
!2344 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !2340, file: !1, line: 7668, type: !314)
!2345 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pgid", scope: !2340, file: !1, line: 7669, type: !1789)
!2346 = !DISubprogram(name: "posix_open", scope: !1, file: !1, line: 7695, type: !405, isLocal: true, isDefinition: true, scopeLine: 7696, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_open, variables: !2347)
!2347 = !{!2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358}
!2348 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2346, file: !1, line: 7695, type: !276)
!2349 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2346, file: !1, line: 7695, type: !276)
!2350 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !2346, file: !1, line: 7695, type: !276)
!2351 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "path", scope: !2346, file: !1, line: 7697, type: !615)
!2352 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "flags", scope: !2346, file: !1, line: 7698, type: !314)
!2353 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mode", scope: !2346, file: !1, line: 7699, type: !314)
!2354 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dir_fd", scope: !2346, file: !1, line: 7700, type: !314)
!2355 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !2346, file: !1, line: 7701, type: !314)
!2356 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !2346, file: !1, line: 7702, type: !276)
!2357 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "atomic_flag_works", scope: !2346, file: !1, line: 7705, type: !687)
!2358 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !2359, file: !1, line: 7729, type: !870)
!2359 = distinct !DILexicalBlock(scope: !2346, file: !1, line: 7729, column: 5)
!2360 = !DISubprogram(name: "posix_close_", scope: !1, file: !1, line: 7771, type: !396, isLocal: true, isDefinition: true, scopeLine: 7772, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_close_, variables: !2361)
!2361 = !{!2362, !2363, !2364, !2365, !2366}
!2362 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2360, file: !1, line: 7771, type: !276)
!2363 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2360, file: !1, line: 7771, type: !276)
!2364 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !2360, file: !1, line: 7773, type: !314)
!2365 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !2360, file: !1, line: 7773, type: !314)
!2366 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !2367, file: !1, line: 7778, type: !870)
!2367 = distinct !DILexicalBlock(scope: !2360, file: !1, line: 7778, column: 5)
!2368 = !DISubprogram(name: "posix_closerange", scope: !1, file: !1, line: 7793, type: !396, isLocal: true, isDefinition: true, scopeLine: 7794, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_closerange, variables: !2369)
!2369 = !{!2370, !2371, !2372, !2373, !2374, !2375}
!2370 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2368, file: !1, line: 7793, type: !276)
!2371 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2368, file: !1, line: 7793, type: !276)
!2372 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd_from", scope: !2368, file: !1, line: 7795, type: !314)
!2373 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd_to", scope: !2368, file: !1, line: 7795, type: !314)
!2374 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !2368, file: !1, line: 7795, type: !314)
!2375 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !2376, file: !1, line: 7798, type: !870)
!2376 = distinct !DILexicalBlock(scope: !2368, file: !1, line: 7798, column: 5)
!2377 = !DISubprogram(name: "device_encoding", scope: !1, file: !1, line: 10491, type: !396, isLocal: true, isDefinition: true, scopeLine: 10492, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @device_encoding, variables: !2378)
!2378 = !{!2379, !2380, !2381}
!2379 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2377, file: !1, line: 10491, type: !276)
!2380 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2377, file: !1, line: 10491, type: !276)
!2381 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !2377, file: !1, line: 10493, type: !314)
!2382 = !DISubprogram(name: "posix_dup", scope: !1, file: !1, line: 7812, type: !396, isLocal: true, isDefinition: true, scopeLine: 7813, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_dup, variables: !2383)
!2383 = !{!2384, !2385, !2386}
!2384 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2382, file: !1, line: 7812, type: !276)
!2385 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2382, file: !1, line: 7812, type: !276)
!2386 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !2382, file: !1, line: 7814, type: !314)
!2387 = !DISubprogram(name: "posix_dup2", scope: !1, file: !1, line: 7832, type: !405, isLocal: true, isDefinition: true, scopeLine: 7833, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_dup2, variables: !2388)
!2388 = !{!2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2401}
!2389 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2387, file: !1, line: 7832, type: !276)
!2390 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2387, file: !1, line: 7832, type: !276)
!2391 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !2387, file: !1, line: 7832, type: !276)
!2392 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !2387, file: !1, line: 7835, type: !314)
!2393 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd2", scope: !2387, file: !1, line: 7835, type: !314)
!2394 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "inheritable", scope: !2387, file: !1, line: 7836, type: !314)
!2395 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !2387, file: !1, line: 7837, type: !314)
!2396 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dup3_works", scope: !2387, file: !1, line: 7841, type: !314)
!2397 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !2398, file: !1, line: 7878, type: !870)
!2398 = distinct !DILexicalBlock(scope: !2399, file: !1, line: 7878, column: 9)
!2399 = distinct !DILexicalBlock(scope: !2400, file: !1, line: 7877, column: 42)
!2400 = distinct !DILexicalBlock(scope: !2387, file: !1, line: 7877, column: 9)
!2401 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !2402, file: !1, line: 7892, type: !870)
!2402 = distinct !DILexicalBlock(scope: !2403, file: !1, line: 7892, column: 9)
!2403 = distinct !DILexicalBlock(scope: !2404, file: !1, line: 7890, column: 5)
!2404 = distinct !DILexicalBlock(scope: !2387, file: !1, line: 7889, column: 9)
!2405 = !DISubprogram(name: "posix_lockf", scope: !1, file: !1, line: 7922, type: !396, isLocal: true, isDefinition: true, scopeLine: 7923, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_lockf, variables: !2406)
!2406 = !{!2407, !2408, !2409, !2410, !2411, !2412, !2413}
!2407 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2405, file: !1, line: 7922, type: !276)
!2408 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2405, file: !1, line: 7922, type: !276)
!2409 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !2405, file: !1, line: 7924, type: !314)
!2410 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cmd", scope: !2405, file: !1, line: 7924, type: !314)
!2411 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !2405, file: !1, line: 7924, type: !314)
!2412 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !2405, file: !1, line: 7925, type: !670)
!2413 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !2414, file: !1, line: 7930, type: !870)
!2414 = distinct !DILexicalBlock(scope: !2405, file: !1, line: 7930, column: 5)
!2415 = !DISubprogram(name: "_parse_off_t", scope: !1, file: !1, line: 1005, type: !535, isLocal: true, isDefinition: true, scopeLine: 1006, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i8*)* @_parse_off_t, variables: !2416)
!2416 = !{!2417, !2418}
!2417 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 1, scope: !2415, file: !1, line: 1005, type: !276)
!2418 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "addr", arg: 2, scope: !2415, file: !1, line: 1005, type: !275)
!2419 = !DISubprogram(name: "posix_lseek", scope: !1, file: !1, line: 7948, type: !396, isLocal: true, isDefinition: true, scopeLine: 7949, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_lseek, variables: !2420)
!2420 = !{!2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428}
!2421 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2419, file: !1, line: 7948, type: !276)
!2422 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2419, file: !1, line: 7948, type: !276)
!2423 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !2419, file: !1, line: 7950, type: !314)
!2424 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "how", scope: !2419, file: !1, line: 7950, type: !314)
!2425 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pos", scope: !2419, file: !1, line: 7954, type: !670)
!2426 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !2419, file: !1, line: 7954, type: !670)
!2427 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "posobj", scope: !2419, file: !1, line: 7956, type: !276)
!2428 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !2429, file: !1, line: 7978, type: !870)
!2429 = distinct !DILexicalBlock(scope: !2419, file: !1, line: 7978, column: 5)
!2430 = !DISubprogram(name: "posix_read", scope: !1, file: !1, line: 8001, type: !396, isLocal: true, isDefinition: true, scopeLine: 8002, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_read, variables: !2431)
!2431 = !{!2432, !2433, !2434, !2435, !2436, !2437, !2438, !2440}
!2432 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2430, file: !1, line: 8001, type: !276)
!2433 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2430, file: !1, line: 8001, type: !276)
!2434 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !2430, file: !1, line: 8003, type: !314)
!2435 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !2430, file: !1, line: 8003, type: !314)
!2436 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !2430, file: !1, line: 8004, type: !282)
!2437 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer", scope: !2430, file: !1, line: 8005, type: !276)
!2438 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !2439, file: !1, line: 8019, type: !870)
!2439 = distinct !DILexicalBlock(scope: !2430, file: !1, line: 8019, column: 5)
!2440 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2441, file: !1, line: 8023, type: !276)
!2441 = distinct !DILexicalBlock(scope: !2442, file: !1, line: 8023, column: 9)
!2442 = distinct !DILexicalBlock(scope: !2443, file: !1, line: 8022, column: 16)
!2443 = distinct !DILexicalBlock(scope: !2430, file: !1, line: 8022, column: 9)
!2444 = !DISubprogram(name: "posix_readv", scope: !1, file: !1, line: 8100, type: !396, isLocal: true, isDefinition: true, scopeLine: 8101, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_readv, variables: !2445)
!2445 = !{!2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454}
!2446 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2444, file: !1, line: 8100, type: !276)
!2447 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2444, file: !1, line: 8100, type: !276)
!2448 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !2444, file: !1, line: 8102, type: !314)
!2449 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cnt", scope: !2444, file: !1, line: 8102, type: !314)
!2450 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !2444, file: !1, line: 8103, type: !282)
!2451 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seq", scope: !2444, file: !1, line: 8104, type: !276)
!2452 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iov", scope: !2444, file: !1, line: 8105, type: !671)
!2453 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !2444, file: !1, line: 8106, type: !505)
!2454 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !2455, file: !1, line: 8120, type: !870)
!2455 = distinct !DILexicalBlock(scope: !2444, file: !1, line: 8120, column: 5)
!2456 = !DISubprogram(name: "iov_setup", scope: !1, file: !1, line: 8034, type: !2457, isLocal: true, isDefinition: true, scopeLine: 8035, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct.iovec**, %struct.bufferinfo**, %struct._object*, i32, i32)* @iov_setup, variables: !2461)
!2457 = !DISubroutineType(types: !2458)
!2458 = !{!282, !2459, !2460, !276, !314, !314}
!2459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 64, align: 64)
!2460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !505, size: 64, align: 64)
!2461 = !{!2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2475, !2479}
!2462 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "iov", arg: 1, scope: !2456, file: !1, line: 8034, type: !2459)
!2463 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "buf", arg: 2, scope: !2456, file: !1, line: 8034, type: !2460)
!2464 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "seq", arg: 3, scope: !2456, file: !1, line: 8034, type: !276)
!2465 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "cnt", arg: 4, scope: !2456, file: !1, line: 8034, type: !314)
!2466 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 5, scope: !2456, file: !1, line: 8034, type: !314)
!2467 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !2456, file: !1, line: 8036, type: !314)
!2468 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !2456, file: !1, line: 8036, type: !314)
!2469 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "blen", scope: !2456, file: !1, line: 8037, type: !282)
!2470 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "total", scope: !2456, file: !1, line: 8037, type: !282)
!2471 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "item", scope: !2472, file: !1, line: 8053, type: !276)
!2472 = distinct !DILexicalBlock(scope: !2473, file: !1, line: 8052, column: 31)
!2473 = distinct !DILexicalBlock(scope: !2474, file: !1, line: 8052, column: 5)
!2474 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 8052, column: 5)
!2475 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2476, file: !1, line: 8057, type: !276)
!2476 = distinct !DILexicalBlock(scope: !2477, file: !1, line: 8057, column: 13)
!2477 = distinct !DILexicalBlock(scope: !2478, file: !1, line: 8056, column: 63)
!2478 = distinct !DILexicalBlock(scope: !2472, file: !1, line: 8056, column: 13)
!2479 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2480, file: !1, line: 8060, type: !276)
!2480 = distinct !DILexicalBlock(scope: !2472, file: !1, line: 8060, column: 9)
!2481 = !DISubprogram(name: "iov_cleanup", scope: !1, file: !1, line: 8078, type: !2482, isLocal: true, isDefinition: true, scopeLine: 8079, flags: DIFlagPrototyped, isOptimized: true, variables: !2484)
!2482 = !DISubroutineType(types: !2483)
!2483 = !{null, !671, !505, !314}
!2484 = !{!2485, !2486, !2487, !2488}
!2485 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "iov", arg: 1, scope: !2481, file: !1, line: 8078, type: !671)
!2486 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "buf", arg: 2, scope: !2481, file: !1, line: 8078, type: !505)
!2487 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "cnt", arg: 3, scope: !2481, file: !1, line: 8078, type: !314)
!2488 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !2481, file: !1, line: 8080, type: !314)
!2489 = !DISubprogram(name: "posix_pread", scope: !1, file: !1, line: 8139, type: !396, isLocal: true, isDefinition: true, scopeLine: 8140, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_pread, variables: !2490)
!2490 = !{!2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2500}
!2491 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2489, file: !1, line: 8139, type: !276)
!2492 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2489, file: !1, line: 8139, type: !276)
!2493 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !2489, file: !1, line: 8141, type: !314)
!2494 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !2489, file: !1, line: 8141, type: !314)
!2495 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset", scope: !2489, file: !1, line: 8142, type: !670)
!2496 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !2489, file: !1, line: 8143, type: !282)
!2497 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer", scope: !2489, file: !1, line: 8144, type: !276)
!2498 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !2499, file: !1, line: 8159, type: !870)
!2499 = distinct !DILexicalBlock(scope: !2489, file: !1, line: 8159, column: 5)
!2500 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2501, file: !1, line: 8163, type: !276)
!2501 = distinct !DILexicalBlock(scope: !2502, file: !1, line: 8163, column: 9)
!2502 = distinct !DILexicalBlock(scope: !2503, file: !1, line: 8162, column: 16)
!2503 = distinct !DILexicalBlock(scope: !2489, file: !1, line: 8162, column: 9)
!2504 = !DISubprogram(name: "posix_write", scope: !1, file: !1, line: 8177, type: !396, isLocal: true, isDefinition: true, scopeLine: 8178, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_write, variables: !2505)
!2505 = !{!2506, !2507, !2508, !2509, !2510, !2511, !2512}
!2506 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2504, file: !1, line: 8177, type: !276)
!2507 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2504, file: !1, line: 8177, type: !276)
!2508 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pbuf", scope: !2504, file: !1, line: 8179, type: !506)
!2509 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !2504, file: !1, line: 8180, type: !314)
!2510 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !2504, file: !1, line: 8181, type: !282)
!2511 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !2504, file: !1, line: 8181, type: !282)
!2512 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !2513, file: !1, line: 8190, type: !870)
!2513 = distinct !DILexicalBlock(scope: !2504, file: !1, line: 8190, column: 5)
!2514 = !DISubprogram(name: "posix_writev", scope: !1, file: !1, line: 8497, type: !396, isLocal: true, isDefinition: true, scopeLine: 8498, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_writev, variables: !2515)
!2515 = !{!2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524}
!2516 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2514, file: !1, line: 8497, type: !276)
!2517 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2514, file: !1, line: 8497, type: !276)
!2518 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !2514, file: !1, line: 8499, type: !314)
!2519 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cnt", scope: !2514, file: !1, line: 8499, type: !314)
!2520 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !2514, file: !1, line: 8500, type: !282)
!2521 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seq", scope: !2514, file: !1, line: 8501, type: !276)
!2522 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iov", scope: !2514, file: !1, line: 8502, type: !671)
!2523 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !2514, file: !1, line: 8503, type: !505)
!2524 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !2525, file: !1, line: 8517, type: !870)
!2525 = distinct !DILexicalBlock(scope: !2514, file: !1, line: 8517, column: 5)
!2526 = !DISubprogram(name: "posix_pwrite", scope: !1, file: !1, line: 8536, type: !396, isLocal: true, isDefinition: true, scopeLine: 8537, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_pwrite, variables: !2527)
!2527 = !{!2528, !2529, !2530, !2531, !2532, !2533, !2534}
!2528 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2526, file: !1, line: 8536, type: !276)
!2529 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2526, file: !1, line: 8536, type: !276)
!2530 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pbuf", scope: !2526, file: !1, line: 8538, type: !506)
!2531 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !2526, file: !1, line: 8539, type: !314)
!2532 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset", scope: !2526, file: !1, line: 8540, type: !670)
!2533 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !2526, file: !1, line: 8541, type: !282)
!2534 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !2535, file: !1, line: 8550, type: !870)
!2535 = distinct !DILexicalBlock(scope: !2526, file: !1, line: 8550, column: 5)
!2536 = !DISubprogram(name: "posix_sendfile", scope: !1, file: !1, line: 8213, type: !405, isLocal: true, isDefinition: true, scopeLine: 8214, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_sendfile, variables: !2537)
!2537 = !{!2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2551}
!2538 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2536, file: !1, line: 8213, type: !276)
!2539 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2536, file: !1, line: 8213, type: !276)
!2540 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwdict", arg: 3, scope: !2536, file: !1, line: 8213, type: !276)
!2541 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "in", scope: !2536, file: !1, line: 8215, type: !314)
!2542 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "out", scope: !2536, file: !1, line: 8215, type: !314)
!2543 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !2536, file: !1, line: 8216, type: !282)
!2544 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset", scope: !2536, file: !1, line: 8217, type: !670)
!2545 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "count", scope: !2536, file: !1, line: 8316, type: !282)
!2546 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offobj", scope: !2536, file: !1, line: 8317, type: !276)
!2547 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !2548, file: !1, line: 8325, type: !870)
!2548 = distinct !DILexicalBlock(scope: !2549, file: !1, line: 8325, column: 9)
!2549 = distinct !DILexicalBlock(scope: !2550, file: !1, line: 8324, column: 28)
!2550 = distinct !DILexicalBlock(scope: !2536, file: !1, line: 8324, column: 9)
!2551 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !2552, file: !1, line: 8335, type: !870)
!2552 = distinct !DILexicalBlock(scope: !2536, file: !1, line: 8335, column: 5)
!2553 = !DISubprogram(name: "posix_fstat", scope: !1, file: !1, line: 8351, type: !396, isLocal: true, isDefinition: true, scopeLine: 8352, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_fstat, variables: !2554)
!2554 = !{!2555, !2556, !2557, !2558, !2559, !2560}
!2555 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2553, file: !1, line: 8351, type: !276)
!2556 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2553, file: !1, line: 8351, type: !276)
!2557 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !2553, file: !1, line: 8353, type: !314)
!2558 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "st", scope: !2553, file: !1, line: 8354, type: !834)
!2559 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !2553, file: !1, line: 8355, type: !314)
!2560 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !2561, file: !1, line: 8358, type: !870)
!2561 = distinct !DILexicalBlock(scope: !2553, file: !1, line: 8358, column: 5)
!2562 = !DISubprogram(name: "posix_isatty", scope: !1, file: !1, line: 8378, type: !396, isLocal: true, isDefinition: true, scopeLine: 8379, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_isatty, variables: !2563)
!2563 = !{!2564, !2565, !2566}
!2564 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2562, file: !1, line: 8378, type: !276)
!2565 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2562, file: !1, line: 8378, type: !276)
!2566 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !2562, file: !1, line: 8380, type: !314)
!2567 = !DISubprogram(name: "posix_pipe", scope: !1, file: !1, line: 8394, type: !396, isLocal: true, isDefinition: true, scopeLine: 8395, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_pipe, variables: !2568)
!2568 = !{!2569, !2570, !2571, !2573, !2574, !2576}
!2569 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2567, file: !1, line: 8394, type: !276)
!2570 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "noargs", arg: 2, scope: !2567, file: !1, line: 8394, type: !276)
!2571 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fds", scope: !2567, file: !1, line: 8396, type: !2572)
!2572 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 64, align: 32, elements: !1578)
!2573 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !2567, file: !1, line: 8402, type: !314)
!2574 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !2575, file: !1, line: 8428, type: !870)
!2575 = distinct !DILexicalBlock(scope: !2567, file: !1, line: 8428, column: 5)
!2576 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !2577, file: !1, line: 8435, type: !870)
!2577 = distinct !DILexicalBlock(scope: !2578, file: !1, line: 8435, column: 9)
!2578 = distinct !DILexicalBlock(scope: !2579, file: !1, line: 8433, column: 5)
!2579 = distinct !DILexicalBlock(scope: !2567, file: !1, line: 8432, column: 9)
!2580 = !DISubprogram(name: "posix_pipe2", scope: !1, file: !1, line: 8471, type: !396, isLocal: true, isDefinition: true, scopeLine: 8472, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_pipe2, variables: !2581)
!2581 = !{!2582, !2583, !2584, !2585, !2586}
!2582 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2580, file: !1, line: 8471, type: !276)
!2583 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !2580, file: !1, line: 8471, type: !276)
!2584 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "flags", scope: !2580, file: !1, line: 8473, type: !314)
!2585 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fds", scope: !2580, file: !1, line: 8474, type: !2572)
!2586 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !2580, file: !1, line: 8475, type: !314)
!2587 = !DISubprogram(name: "posix_mkfifo", scope: !1, file: !1, line: 8571, type: !405, isLocal: true, isDefinition: true, scopeLine: 8572, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_mkfifo, variables: !2588)
!2588 = !{!2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597}
!2589 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2587, file: !1, line: 8571, type: !276)
!2590 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2587, file: !1, line: 8571, type: !276)
!2591 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !2587, file: !1, line: 8571, type: !276)
!2592 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "path", scope: !2587, file: !1, line: 8573, type: !615)
!2593 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mode", scope: !2587, file: !1, line: 8574, type: !314)
!2594 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dir_fd", scope: !2587, file: !1, line: 8575, type: !314)
!2595 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !2587, file: !1, line: 8576, type: !314)
!2596 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !2587, file: !1, line: 8577, type: !276)
!2597 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !2598, file: !1, line: 8592, type: !870)
!2598 = distinct !DILexicalBlock(scope: !2587, file: !1, line: 8592, column: 5)
!2599 = !DISubprogram(name: "posix_mknod", scope: !1, file: !1, line: 8632, type: !405, isLocal: true, isDefinition: true, scopeLine: 8633, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_mknod, variables: !2600)
!2600 = !{!2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610}
!2601 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2599, file: !1, line: 8632, type: !276)
!2602 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2599, file: !1, line: 8632, type: !276)
!2603 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !2599, file: !1, line: 8632, type: !276)
!2604 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "path", scope: !2599, file: !1, line: 8634, type: !615)
!2605 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mode", scope: !2599, file: !1, line: 8635, type: !314)
!2606 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "device", scope: !2599, file: !1, line: 8636, type: !314)
!2607 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dir_fd", scope: !2599, file: !1, line: 8637, type: !314)
!2608 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !2599, file: !1, line: 8638, type: !314)
!2609 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !2599, file: !1, line: 8639, type: !276)
!2610 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !2611, file: !1, line: 8654, type: !870)
!2611 = distinct !DILexicalBlock(scope: !2599, file: !1, line: 8654, column: 5)
!2612 = !DISubprogram(name: "mknodat", scope: !948, file: !948, line: 492, type: !2613, isLocal: false, isDefinition: true, scopeLine: 494, flags: DIFlagPrototyped, isOptimized: true, variables: !2615)
!2613 = !DISubroutineType(types: !2614)
!2614 = !{!314, !314, !299, !844, !838}
!2615 = !{!2616, !2617, !2618, !2619}
!2616 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "__fd", arg: 1, scope: !2612, file: !948, line: 492, type: !314)
!2617 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "__path", arg: 2, scope: !2612, file: !948, line: 492, type: !299)
!2618 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "__mode", arg: 3, scope: !2612, file: !948, line: 492, type: !844)
!2619 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "__dev", arg: 4, scope: !2612, file: !948, line: 492, type: !838)
!2620 = !DISubprogram(name: "mknod", scope: !948, file: !948, line: 484, type: !2621, isLocal: false, isDefinition: true, scopeLine: 485, flags: DIFlagPrototyped, isOptimized: true, variables: !2623)
!2621 = !DISubroutineType(types: !2622)
!2622 = !{!314, !299, !844, !838}
!2623 = !{!2624, !2625, !2626}
!2624 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "__path", arg: 1, scope: !2620, file: !948, line: 484, type: !299)
!2625 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "__mode", arg: 2, scope: !2620, file: !948, line: 484, type: !844)
!2626 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "__dev", arg: 3, scope: !2620, file: !948, line: 484, type: !838)
!2627 = !DISubprogram(name: "posix_major", scope: !1, file: !1, line: 8683, type: !396, isLocal: true, isDefinition: true, scopeLine: 8684, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_major, variables: !2628)
!2628 = !{!2629, !2630, !2631}
!2629 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2627, file: !1, line: 8683, type: !276)
!2630 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2627, file: !1, line: 8683, type: !276)
!2631 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "device", scope: !2627, file: !1, line: 8685, type: !314)
!2632 = !DISubprogram(name: "gnu_dev_major", scope: !2633, file: !2633, line: 44, type: !2634, isLocal: false, isDefinition: true, scopeLine: 45, flags: DIFlagPrototyped, isOptimized: true, variables: !2636)
!2633 = !DIFile(filename: "/usr/include/sys/sysmacros.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!2634 = !DISubroutineType(types: !2635)
!2635 = !{!272, !677}
!2636 = !{!2637}
!2637 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "__dev", arg: 1, scope: !2632, file: !2633, line: 44, type: !677)
!2638 = !DISubprogram(name: "posix_minor", scope: !1, file: !1, line: 8696, type: !396, isLocal: true, isDefinition: true, scopeLine: 8697, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_minor, variables: !2639)
!2639 = !{!2640, !2641, !2642}
!2640 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2638, file: !1, line: 8696, type: !276)
!2641 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2638, file: !1, line: 8696, type: !276)
!2642 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "device", scope: !2638, file: !1, line: 8698, type: !314)
!2643 = !DISubprogram(name: "gnu_dev_minor", scope: !2633, file: !2633, line: 50, type: !2634, isLocal: false, isDefinition: true, scopeLine: 51, flags: DIFlagPrototyped, isOptimized: true, variables: !2644)
!2644 = !{!2645}
!2645 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "__dev", arg: 1, scope: !2643, file: !2633, line: 50, type: !677)
!2646 = !DISubprogram(name: "posix_makedev", scope: !1, file: !1, line: 8709, type: !396, isLocal: true, isDefinition: true, scopeLine: 8710, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_makedev, variables: !2647)
!2647 = !{!2648, !2649, !2650, !2651}
!2648 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2646, file: !1, line: 8709, type: !276)
!2649 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2646, file: !1, line: 8709, type: !276)
!2650 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "major", scope: !2646, file: !1, line: 8711, type: !314)
!2651 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "minor", scope: !2646, file: !1, line: 8711, type: !314)
!2652 = !DISubprogram(name: "gnu_dev_makedev", scope: !2633, file: !2633, line: 56, type: !2653, isLocal: false, isDefinition: true, scopeLine: 57, flags: DIFlagPrototyped, isOptimized: true, variables: !2655)
!2653 = !DISubroutineType(types: !2654)
!2654 = !{!677, !272, !272}
!2655 = !{!2656, !2657}
!2656 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "__major", arg: 1, scope: !2652, file: !2633, line: 56, type: !272)
!2657 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "__minor", arg: 2, scope: !2652, file: !2633, line: 56, type: !272)
!2658 = !DISubprogram(name: "posix_ftruncate", scope: !1, file: !1, line: 8725, type: !396, isLocal: true, isDefinition: true, scopeLine: 8726, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_ftruncate, variables: !2659)
!2659 = !{!2660, !2661, !2662, !2663, !2664, !2665}
!2660 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2658, file: !1, line: 8725, type: !276)
!2661 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2658, file: !1, line: 8725, type: !276)
!2662 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !2658, file: !1, line: 8727, type: !314)
!2663 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "length", scope: !2658, file: !1, line: 8728, type: !670)
!2664 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !2658, file: !1, line: 8729, type: !314)
!2665 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !2666, file: !1, line: 8734, type: !870)
!2666 = distinct !DILexicalBlock(scope: !2658, file: !1, line: 8734, column: 5)
!2667 = !DISubprogram(name: "posix_truncate", scope: !1, file: !1, line: 8752, type: !405, isLocal: true, isDefinition: true, scopeLine: 8753, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_truncate, variables: !2668)
!2668 = !{!2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676}
!2669 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2667, file: !1, line: 8752, type: !276)
!2670 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2667, file: !1, line: 8752, type: !276)
!2671 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !2667, file: !1, line: 8752, type: !276)
!2672 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "path", scope: !2667, file: !1, line: 8754, type: !615)
!2673 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "length", scope: !2667, file: !1, line: 8755, type: !670)
!2674 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !2667, file: !1, line: 8756, type: !314)
!2675 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !2667, file: !1, line: 8757, type: !276)
!2676 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !2677, file: !1, line: 8770, type: !870)
!2677 = distinct !DILexicalBlock(scope: !2667, file: !1, line: 8770, column: 5)
!2678 = !DISubprogram(name: "posix_posix_fallocate", scope: !1, file: !1, line: 8796, type: !396, isLocal: true, isDefinition: true, scopeLine: 8797, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_posix_fallocate, variables: !2679)
!2679 = !{!2680, !2681, !2682, !2683, !2684, !2685, !2686}
!2680 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2678, file: !1, line: 8796, type: !276)
!2681 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2678, file: !1, line: 8796, type: !276)
!2682 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !2678, file: !1, line: 8798, type: !670)
!2683 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset", scope: !2678, file: !1, line: 8798, type: !670)
!2684 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !2678, file: !1, line: 8799, type: !314)
!2685 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !2678, file: !1, line: 8799, type: !314)
!2686 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !2687, file: !1, line: 8805, type: !870)
!2687 = distinct !DILexicalBlock(scope: !2678, file: !1, line: 8805, column: 5)
!2688 = !DISubprogram(name: "posix_posix_fadvise", scope: !1, file: !1, line: 8828, type: !396, isLocal: true, isDefinition: true, scopeLine: 8829, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_posix_fadvise, variables: !2689)
!2689 = !{!2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697}
!2690 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2688, file: !1, line: 8828, type: !276)
!2691 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2688, file: !1, line: 8828, type: !276)
!2692 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !2688, file: !1, line: 8830, type: !670)
!2693 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset", scope: !2688, file: !1, line: 8830, type: !670)
!2694 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !2688, file: !1, line: 8831, type: !314)
!2695 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !2688, file: !1, line: 8831, type: !314)
!2696 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "advice", scope: !2688, file: !1, line: 8831, type: !314)
!2697 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !2698, file: !1, line: 8837, type: !870)
!2698 = distinct !DILexicalBlock(scope: !2688, file: !1, line: 8837, column: 5)
!2699 = !DISubprogram(name: "posix_putenv", scope: !1, file: !1, line: 8858, type: !396, isLocal: true, isDefinition: true, scopeLine: 8859, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_putenv, variables: !2700)
!2700 = !{!2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2713, !2715, !2717, !2719, !2721, !2723}
!2701 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2699, file: !1, line: 8858, type: !276)
!2702 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2699, file: !1, line: 8858, type: !276)
!2703 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newstr", scope: !2699, file: !1, line: 8860, type: !276)
!2704 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "os1", scope: !2699, file: !1, line: 8890, type: !276)
!2705 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "os2", scope: !2699, file: !1, line: 8890, type: !276)
!2706 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s1", scope: !2699, file: !1, line: 8891, type: !322)
!2707 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s2", scope: !2699, file: !1, line: 8891, type: !322)
!2708 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newenv", scope: !2699, file: !1, line: 8892, type: !322)
!2709 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2710, file: !1, line: 8924, type: !276)
!2710 = distinct !DILexicalBlock(scope: !2711, file: !1, line: 8924, column: 9)
!2711 = distinct !DILexicalBlock(scope: !2712, file: !1, line: 8923, column: 10)
!2712 = distinct !DILexicalBlock(scope: !2699, file: !1, line: 8919, column: 9)
!2713 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2714, file: !1, line: 8928, type: !276)
!2714 = distinct !DILexicalBlock(scope: !2699, file: !1, line: 8928, column: 5)
!2715 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2716, file: !1, line: 8929, type: !276)
!2716 = distinct !DILexicalBlock(scope: !2699, file: !1, line: 8929, column: 5)
!2717 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2718, file: !1, line: 8935, type: !276)
!2718 = distinct !DILexicalBlock(scope: !2699, file: !1, line: 8935, column: 5)
!2719 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2720, file: !1, line: 8936, type: !276)
!2720 = distinct !DILexicalBlock(scope: !2699, file: !1, line: 8936, column: 5)
!2721 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2722, file: !1, line: 8938, type: !276)
!2722 = distinct !DILexicalBlock(scope: !2699, file: !1, line: 8938, column: 5)
!2723 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2724, file: !1, line: 8938, type: !276)
!2724 = distinct !DILexicalBlock(scope: !2725, file: !1, line: 8938, column: 5)
!2725 = distinct !DILexicalBlock(scope: !2722, file: !1, line: 8938, column: 5)
!2726 = !DISubprogram(name: "posix_unsetenv", scope: !1, file: !1, line: 8949, type: !396, isLocal: true, isDefinition: true, scopeLine: 8950, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_unsetenv, variables: !2727)
!2727 = !{!2728, !2729, !2730, !2731, !2732, !2736}
!2728 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2726, file: !1, line: 8949, type: !276)
!2729 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2726, file: !1, line: 8949, type: !276)
!2730 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !2726, file: !1, line: 8951, type: !276)
!2731 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "err", scope: !2726, file: !1, line: 8953, type: !314)
!2732 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2733, file: !1, line: 8966, type: !276)
!2733 = distinct !DILexicalBlock(scope: !2734, file: !1, line: 8966, column: 9)
!2734 = distinct !DILexicalBlock(scope: !2735, file: !1, line: 8965, column: 14)
!2735 = distinct !DILexicalBlock(scope: !2726, file: !1, line: 8965, column: 9)
!2736 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2737, file: !1, line: 8980, type: !276)
!2737 = distinct !DILexicalBlock(scope: !2726, file: !1, line: 8980, column: 5)
!2738 = !DISubprogram(name: "posix_strerror", scope: !1, file: !1, line: 8990, type: !396, isLocal: true, isDefinition: true, scopeLine: 8991, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_strerror, variables: !2739)
!2739 = !{!2740, !2741, !2742, !2743}
!2740 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2738, file: !1, line: 8990, type: !276)
!2741 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2738, file: !1, line: 8990, type: !276)
!2742 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "code", scope: !2738, file: !1, line: 8992, type: !314)
!2743 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "message", scope: !2738, file: !1, line: 8993, type: !322)
!2744 = !DISubprogram(name: "posix_fchdir", scope: !1, file: !1, line: 2877, type: !396, isLocal: true, isDefinition: true, scopeLine: 2878, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_fchdir, variables: !2745)
!2745 = !{!2746, !2747}
!2746 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2744, file: !1, line: 2877, type: !276)
!2747 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fdobj", arg: 2, scope: !2744, file: !1, line: 2877, type: !276)
!2748 = !DISubprogram(name: "posix_fildes", scope: !1, file: !1, line: 1332, type: !2749, isLocal: true, isDefinition: true, scopeLine: 1333, flags: DIFlagPrototyped, isOptimized: true, variables: !2754)
!2749 = !DISubroutineType(types: !2750)
!2750 = !{!276, !276, !2751}
!2751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2752, size: 64, align: 64)
!2752 = !DISubroutineType(types: !2753)
!2753 = !{!314, !314}
!2754 = !{!2755, !2756, !2757, !2758, !2759}
!2755 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fdobj", arg: 1, scope: !2748, file: !1, line: 1332, type: !276)
!2756 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "func", arg: 2, scope: !2748, file: !1, line: 1332, type: !2751)
!2757 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !2748, file: !1, line: 1334, type: !314)
!2758 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !2748, file: !1, line: 1335, type: !314)
!2759 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !2760, file: !1, line: 1341, type: !870)
!2760 = distinct !DILexicalBlock(scope: !2748, file: !1, line: 1341, column: 5)
!2761 = !DISubprogram(name: "posix_fsync", scope: !1, file: !1, line: 3188, type: !396, isLocal: true, isDefinition: true, scopeLine: 3189, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_fsync, variables: !2762)
!2762 = !{!2763, !2764}
!2763 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2761, file: !1, line: 3188, type: !276)
!2764 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fdobj", arg: 2, scope: !2761, file: !1, line: 3188, type: !276)
!2765 = !DISubprogram(name: "posix_sync", scope: !1, file: !1, line: 3200, type: !396, isLocal: true, isDefinition: true, scopeLine: 3201, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_sync, variables: !2766)
!2766 = !{!2767, !2768, !2769}
!2767 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2765, file: !1, line: 3200, type: !276)
!2768 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "noargs", arg: 2, scope: !2765, file: !1, line: 3200, type: !276)
!2769 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !2770, file: !1, line: 3202, type: !870)
!2770 = distinct !DILexicalBlock(scope: !2765, file: !1, line: 3202, column: 5)
!2771 = !DISubprogram(name: "posix_fdatasync", scope: !1, file: !1, line: 3221, type: !396, isLocal: true, isDefinition: true, scopeLine: 3222, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_fdatasync, variables: !2772)
!2772 = !{!2773, !2774}
!2773 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2771, file: !1, line: 3221, type: !276)
!2774 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fdobj", arg: 2, scope: !2771, file: !1, line: 3221, type: !276)
!2775 = !DISubprogram(name: "posix_WCOREDUMP", scope: !1, file: !1, line: 9014, type: !396, isLocal: true, isDefinition: true, scopeLine: 9015, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_WCOREDUMP, variables: !2776)
!2776 = !{!2777, !2778, !2779}
!2777 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2775, file: !1, line: 9014, type: !276)
!2778 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2775, file: !1, line: 9014, type: !276)
!2779 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "status", scope: !2775, file: !1, line: 9016, type: !314)
!2780 = !DISubprogram(name: "posix_WIFCONTINUED", scope: !1, file: !1, line: 9033, type: !396, isLocal: true, isDefinition: true, scopeLine: 9034, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_WIFCONTINUED, variables: !2781)
!2781 = !{!2782, !2783, !2784}
!2782 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2780, file: !1, line: 9033, type: !276)
!2783 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2780, file: !1, line: 9033, type: !276)
!2784 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "status", scope: !2780, file: !1, line: 9035, type: !314)
!2785 = !DISubprogram(name: "posix_WIFSTOPPED", scope: !1, file: !1, line: 9051, type: !396, isLocal: true, isDefinition: true, scopeLine: 9052, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_WIFSTOPPED, variables: !2786)
!2786 = !{!2787, !2788, !2789}
!2787 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2785, file: !1, line: 9051, type: !276)
!2788 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2785, file: !1, line: 9051, type: !276)
!2789 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "status", scope: !2785, file: !1, line: 9053, type: !314)
!2790 = !DISubprogram(name: "posix_WIFSIGNALED", scope: !1, file: !1, line: 9069, type: !396, isLocal: true, isDefinition: true, scopeLine: 9070, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_WIFSIGNALED, variables: !2791)
!2791 = !{!2792, !2793, !2794}
!2792 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2790, file: !1, line: 9069, type: !276)
!2793 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2790, file: !1, line: 9069, type: !276)
!2794 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "status", scope: !2790, file: !1, line: 9071, type: !314)
!2795 = !DISubprogram(name: "posix_WIFEXITED", scope: !1, file: !1, line: 9088, type: !396, isLocal: true, isDefinition: true, scopeLine: 9089, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_WIFEXITED, variables: !2796)
!2796 = !{!2797, !2798, !2799}
!2797 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2795, file: !1, line: 9088, type: !276)
!2798 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2795, file: !1, line: 9088, type: !276)
!2799 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "status", scope: !2795, file: !1, line: 9090, type: !314)
!2800 = !DISubprogram(name: "posix_WEXITSTATUS", scope: !1, file: !1, line: 9106, type: !396, isLocal: true, isDefinition: true, scopeLine: 9107, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_WEXITSTATUS, variables: !2801)
!2801 = !{!2802, !2803, !2804}
!2802 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2800, file: !1, line: 9106, type: !276)
!2803 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2800, file: !1, line: 9106, type: !276)
!2804 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "status", scope: !2800, file: !1, line: 9108, type: !314)
!2805 = !DISubprogram(name: "posix_WTERMSIG", scope: !1, file: !1, line: 9125, type: !396, isLocal: true, isDefinition: true, scopeLine: 9126, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_WTERMSIG, variables: !2806)
!2806 = !{!2807, !2808, !2809}
!2807 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2805, file: !1, line: 9125, type: !276)
!2808 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2805, file: !1, line: 9125, type: !276)
!2809 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "status", scope: !2805, file: !1, line: 9127, type: !314)
!2810 = !DISubprogram(name: "posix_WSTOPSIG", scope: !1, file: !1, line: 9144, type: !396, isLocal: true, isDefinition: true, scopeLine: 9145, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_WSTOPSIG, variables: !2811)
!2811 = !{!2812, !2813, !2814}
!2812 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2810, file: !1, line: 9144, type: !276)
!2813 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2810, file: !1, line: 9144, type: !276)
!2814 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "status", scope: !2810, file: !1, line: 9146, type: !314)
!2815 = !DISubprogram(name: "posix_fstatvfs", scope: !1, file: !1, line: 9216, type: !396, isLocal: true, isDefinition: true, scopeLine: 9217, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_fstatvfs, variables: !2816)
!2816 = !{!2817, !2818, !2819, !2820, !2821, !2839}
!2817 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2815, file: !1, line: 9216, type: !276)
!2818 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2815, file: !1, line: 9216, type: !276)
!2819 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !2815, file: !1, line: 9218, type: !314)
!2820 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !2815, file: !1, line: 9218, type: !314)
!2821 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "st", scope: !2815, file: !1, line: 9219, type: !2822)
!2822 = !DICompositeType(tag: DW_TAG_structure_type, name: "statvfs", file: !239, line: 29, size: 896, align: 64, elements: !2823)
!2823 = !{!2824, !2825, !2826, !2828, !2829, !2830, !2832, !2833, !2834, !2835, !2836, !2837}
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "f_bsize", scope: !2822, file: !239, line: 31, baseType: !366, size: 64, align: 64)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "f_frsize", scope: !2822, file: !239, line: 32, baseType: !366, size: 64, align: 64, offset: 64)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "f_blocks", scope: !2822, file: !239, line: 41, baseType: !2827, size: 64, align: 64, offset: 128)
!2827 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsblkcnt64_t", file: !271, line: 172, baseType: !366)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "f_bfree", scope: !2822, file: !239, line: 42, baseType: !2827, size: 64, align: 64, offset: 192)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "f_bavail", scope: !2822, file: !239, line: 43, baseType: !2827, size: 64, align: 64, offset: 256)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "f_files", scope: !2822, file: !239, line: 44, baseType: !2831, size: 64, align: 64, offset: 320)
!2831 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsfilcnt64_t", file: !271, line: 176, baseType: !366)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "f_ffree", scope: !2822, file: !239, line: 45, baseType: !2831, size: 64, align: 64, offset: 384)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "f_favail", scope: !2822, file: !239, line: 46, baseType: !2831, size: 64, align: 64, offset: 448)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "f_fsid", scope: !2822, file: !239, line: 48, baseType: !366, size: 64, align: 64, offset: 512)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "f_flag", scope: !2822, file: !239, line: 52, baseType: !366, size: 64, align: 64, offset: 576)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "f_namemax", scope: !2822, file: !239, line: 53, baseType: !366, size: 64, align: 64, offset: 640)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "__f_spare", scope: !2822, file: !239, line: 54, baseType: !2838, size: 192, align: 32, offset: 704)
!2838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 192, align: 32, elements: !1532)
!2839 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !2840, file: !1, line: 9223, type: !870)
!2840 = distinct !DILexicalBlock(scope: !2815, file: !1, line: 9223, column: 5)
!2841 = !DISubprogram(name: "_pystatvfs_fromstructstatvfs", scope: !1, file: !1, line: 9168, type: !2842, isLocal: true, isDefinition: true, scopeLine: 9168, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.statvfs*)* @_pystatvfs_fromstructstatvfs, variables: !2844)
!2842 = !DISubroutineType(types: !2843)
!2843 = !{!276, !2822}
!2844 = !{!2845, !2846, !2847}
!2845 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "st", arg: 1, scope: !2841, file: !1, line: 9168, type: !2822)
!2846 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "v", scope: !2841, file: !1, line: 9169, type: !276)
!2847 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2848, file: !1, line: 9203, type: !276)
!2848 = distinct !DILexicalBlock(scope: !2849, file: !1, line: 9203, column: 9)
!2849 = distinct !DILexicalBlock(scope: !2850, file: !1, line: 9202, column: 27)
!2850 = distinct !DILexicalBlock(scope: !2841, file: !1, line: 9202, column: 9)
!2851 = !DISubprogram(name: "posix_statvfs", scope: !1, file: !1, line: 9246, type: !405, isLocal: true, isDefinition: true, scopeLine: 9247, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_statvfs, variables: !2852)
!2852 = !{!2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860}
!2853 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2851, file: !1, line: 9246, type: !276)
!2854 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2851, file: !1, line: 9246, type: !276)
!2855 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !2851, file: !1, line: 9246, type: !276)
!2856 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "path", scope: !2851, file: !1, line: 9249, type: !615)
!2857 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !2851, file: !1, line: 9250, type: !314)
!2858 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !2851, file: !1, line: 9251, type: !276)
!2859 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "st", scope: !2851, file: !1, line: 9252, type: !2822)
!2860 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !2861, file: !1, line: 9264, type: !870)
!2861 = distinct !DILexicalBlock(scope: !2851, file: !1, line: 9264, column: 5)
!2862 = !DISubprogram(name: "posix_confstr", scope: !1, file: !1, line: 9717, type: !396, isLocal: true, isDefinition: true, scopeLine: 9718, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_confstr, variables: !2863)
!2863 = !{!2864, !2865, !2866, !2867, !2868, !2872, !2873}
!2864 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2862, file: !1, line: 9717, type: !276)
!2865 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2862, file: !1, line: 9717, type: !276)
!2866 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !2862, file: !1, line: 9719, type: !276)
!2867 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !2862, file: !1, line: 9720, type: !314)
!2868 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer", scope: !2862, file: !1, line: 9721, type: !2869)
!2869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 2040, align: 8, elements: !2870)
!2870 = !{!2871}
!2871 = !DISubrange(count: 255)
!2872 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !2862, file: !1, line: 9722, type: !364)
!2873 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !2874, file: !1, line: 9740, type: !322)
!2874 = distinct !DILexicalBlock(scope: !2875, file: !1, line: 9739, column: 32)
!2875 = distinct !DILexicalBlock(scope: !2862, file: !1, line: 9739, column: 9)
!2876 = !DISubprogram(name: "conv_confstr_confname", scope: !1, file: !1, line: 9705, type: !2877, isLocal: true, isDefinition: true, scopeLine: 9706, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i32*)* @conv_confstr_confname, variables: !2879)
!2877 = !DISubroutineType(types: !2878)
!2878 = !{!314, !276, !687}
!2879 = !{!2880, !2881}
!2880 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 1, scope: !2876, file: !1, line: 9705, type: !276)
!2881 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "valuep", arg: 2, scope: !2876, file: !1, line: 9705, type: !687)
!2882 = !DISubprogram(name: "conv_confname", scope: !1, file: !1, line: 9337, type: !2883, isLocal: true, isDefinition: true, scopeLine: 9339, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i32*, %struct.constdef*, i64)* @conv_confname, variables: !2886)
!2883 = !DISubroutineType(types: !2884)
!2884 = !{!314, !276, !687, !2885, !364}
!2885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 64, align: 64)
!2886 = !{!2887, !2888, !2889, !2890, !2891, !2894, !2895, !2896, !2897, !2898, !2901}
!2887 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 1, scope: !2882, file: !1, line: 9337, type: !276)
!2888 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "valuep", arg: 2, scope: !2882, file: !1, line: 9337, type: !687)
!2889 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "table", arg: 3, scope: !2882, file: !1, line: 9337, type: !2885)
!2890 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tablesize", arg: 4, scope: !2882, file: !1, line: 9338, type: !364)
!2891 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lo", scope: !2892, file: !1, line: 9346, type: !364)
!2892 = distinct !DILexicalBlock(scope: !2893, file: !1, line: 9344, column: 10)
!2893 = distinct !DILexicalBlock(scope: !2882, file: !1, line: 9340, column: 9)
!2894 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mid", scope: !2892, file: !1, line: 9347, type: !364)
!2895 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hi", scope: !2892, file: !1, line: 9348, type: !364)
!2896 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cmp", scope: !2892, file: !1, line: 9349, type: !314)
!2897 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "confname", scope: !2892, file: !1, line: 9350, type: !299)
!2898 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1_len", scope: !2899, file: !1, line: 9361, type: !364)
!2899 = distinct !DILexicalBlock(scope: !2900, file: !1, line: 9361, column: 19)
!2900 = distinct !DILexicalBlock(scope: !2892, file: !1, line: 9359, column: 25)
!2901 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s2_len", scope: !2899, file: !1, line: 9361, type: !364)
!2902 = !DISubprogram(name: "posix_sysconf", scope: !1, file: !1, line: 10263, type: !396, isLocal: true, isDefinition: true, scopeLine: 10264, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_sysconf, variables: !2903)
!2903 = !{!2904, !2905, !2906, !2907, !2908}
!2904 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2902, file: !1, line: 10263, type: !276)
!2905 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2902, file: !1, line: 10263, type: !276)
!2906 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !2902, file: !1, line: 10265, type: !276)
!2907 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !2902, file: !1, line: 10266, type: !314)
!2908 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !2909, file: !1, line: 10269, type: !287)
!2909 = distinct !DILexicalBlock(scope: !2910, file: !1, line: 10268, column: 77)
!2910 = distinct !DILexicalBlock(scope: !2902, file: !1, line: 10268, column: 9)
!2911 = !DISubprogram(name: "conv_sysconf_confname", scope: !1, file: !1, line: 10251, type: !2877, isLocal: true, isDefinition: true, scopeLine: 10252, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i32*)* @conv_sysconf_confname, variables: !2912)
!2912 = !{!2913, !2914}
!2913 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 1, scope: !2911, file: !1, line: 10251, type: !276)
!2914 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "valuep", arg: 2, scope: !2911, file: !1, line: 10251, type: !687)
!2915 = !DISubprogram(name: "posix_fpathconf", scope: !1, file: !1, line: 9481, type: !396, isLocal: true, isDefinition: true, scopeLine: 9482, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_fpathconf, variables: !2916)
!2916 = !{!2917, !2918, !2919, !2920, !2921, !2922}
!2917 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2915, file: !1, line: 9481, type: !276)
!2918 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2915, file: !1, line: 9481, type: !276)
!2919 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !2915, file: !1, line: 9483, type: !276)
!2920 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !2915, file: !1, line: 9484, type: !314)
!2921 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !2915, file: !1, line: 9484, type: !314)
!2922 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "limit", scope: !2923, file: !1, line: 9488, type: !287)
!2923 = distinct !DILexicalBlock(scope: !2924, file: !1, line: 9487, column: 54)
!2924 = distinct !DILexicalBlock(scope: !2915, file: !1, line: 9486, column: 9)
!2925 = !DISubprogram(name: "conv_path_confname", scope: !1, file: !1, line: 9466, type: !2877, isLocal: true, isDefinition: true, scopeLine: 9467, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i32*)* @conv_path_confname, variables: !2926)
!2926 = !{!2927, !2928}
!2927 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 1, scope: !2925, file: !1, line: 9466, type: !276)
!2928 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "valuep", arg: 2, scope: !2925, file: !1, line: 9466, type: !687)
!2929 = !DISubprogram(name: "posix_pathconf", scope: !1, file: !1, line: 9511, type: !405, isLocal: true, isDefinition: true, scopeLine: 9512, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_pathconf, variables: !2930)
!2930 = !{!2931, !2932, !2933, !2934, !2935, !2936, !2937}
!2931 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2929, file: !1, line: 9511, type: !276)
!2932 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2929, file: !1, line: 9511, type: !276)
!2933 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !2929, file: !1, line: 9511, type: !276)
!2934 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "path", scope: !2929, file: !1, line: 9513, type: !615)
!2935 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !2929, file: !1, line: 9514, type: !276)
!2936 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !2929, file: !1, line: 9515, type: !314)
!2937 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "limit", scope: !2938, file: !1, line: 9526, type: !287)
!2938 = distinct !DILexicalBlock(scope: !2939, file: !1, line: 9525, column: 65)
!2939 = distinct !DILexicalBlock(scope: !2929, file: !1, line: 9523, column: 9)
!2940 = !DISubprogram(name: "posix_abort", scope: !1, file: !1, line: 10363, type: !396, isLocal: true, isDefinition: true, scopeLine: 10364, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_abort, variables: !2941)
!2941 = !{!2942, !2943}
!2942 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2940, file: !1, line: 10363, type: !276)
!2943 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "noargs", arg: 2, scope: !2940, file: !1, line: 10363, type: !276)
!2944 = !DISubprogram(name: "posix_getloadavg", scope: !1, file: !1, line: 10474, type: !396, isLocal: true, isDefinition: true, scopeLine: 10475, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_getloadavg, variables: !2945)
!2945 = !{!2946, !2947, !2948}
!2946 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2944, file: !1, line: 10474, type: !276)
!2947 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "noargs", arg: 2, scope: !2944, file: !1, line: 10474, type: !276)
!2948 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "loadavg", scope: !2944, file: !1, line: 10476, type: !2949)
!2949 = !DICompositeType(tag: DW_TAG_array_type, baseType: !651, size: 192, align: 64, elements: !865)
!2950 = !DISubprogram(name: "posix_urandom", scope: !1, file: !1, line: 10890, type: !396, isLocal: true, isDefinition: true, scopeLine: 10891, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_urandom, variables: !2951)
!2951 = !{!2952, !2953, !2954, !2955, !2956, !2957}
!2952 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2950, file: !1, line: 10890, type: !276)
!2953 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2950, file: !1, line: 10890, type: !276)
!2954 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !2950, file: !1, line: 10892, type: !282)
!2955 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !2950, file: !1, line: 10893, type: !276)
!2956 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !2950, file: !1, line: 10894, type: !314)
!2957 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2958, file: !1, line: 10909, type: !276)
!2958 = distinct !DILexicalBlock(scope: !2959, file: !1, line: 10909, column: 9)
!2959 = distinct !DILexicalBlock(scope: !2960, file: !1, line: 10908, column: 20)
!2960 = distinct !DILexicalBlock(scope: !2950, file: !1, line: 10908, column: 9)
!2961 = !DISubprogram(name: "posix_setresuid", scope: !1, file: !1, line: 10507, type: !396, isLocal: true, isDefinition: true, scopeLine: 10508, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_setresuid, variables: !2962)
!2962 = !{!2963, !2964, !2965, !2966, !2967}
!2963 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2961, file: !1, line: 10507, type: !276)
!2964 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2961, file: !1, line: 10507, type: !276)
!2965 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ruid", scope: !2961, file: !1, line: 10510, type: !268)
!2966 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "euid", scope: !2961, file: !1, line: 10510, type: !268)
!2967 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "suid", scope: !2961, file: !1, line: 10510, type: !268)
!2968 = !DISubprogram(name: "posix_setresgid", scope: !1, file: !1, line: 10528, type: !396, isLocal: true, isDefinition: true, scopeLine: 10529, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_setresgid, variables: !2969)
!2969 = !{!2970, !2971, !2972, !2973, !2974}
!2970 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2968, file: !1, line: 10528, type: !276)
!2971 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2968, file: !1, line: 10528, type: !276)
!2972 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rgid", scope: !2968, file: !1, line: 10530, type: !273)
!2973 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "egid", scope: !2968, file: !1, line: 10530, type: !273)
!2974 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sgid", scope: !2968, file: !1, line: 10530, type: !273)
!2975 = !DISubprogram(name: "posix_getresuid", scope: !1, file: !1, line: 10548, type: !396, isLocal: true, isDefinition: true, scopeLine: 10549, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_getresuid, variables: !2976)
!2976 = !{!2977, !2978, !2979, !2980, !2981}
!2977 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2975, file: !1, line: 10548, type: !276)
!2978 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "noargs", arg: 2, scope: !2975, file: !1, line: 10548, type: !276)
!2979 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ruid", scope: !2975, file: !1, line: 10550, type: !268)
!2980 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "euid", scope: !2975, file: !1, line: 10550, type: !268)
!2981 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "suid", scope: !2975, file: !1, line: 10550, type: !268)
!2982 = !DISubprogram(name: "posix_getresgid", scope: !1, file: !1, line: 10565, type: !396, isLocal: true, isDefinition: true, scopeLine: 10566, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_getresgid, variables: !2983)
!2983 = !{!2984, !2985, !2986, !2987, !2988}
!2984 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2982, file: !1, line: 10565, type: !276)
!2985 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "noargs", arg: 2, scope: !2982, file: !1, line: 10565, type: !276)
!2986 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rgid", scope: !2982, file: !1, line: 10567, type: !268)
!2987 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "egid", scope: !2982, file: !1, line: 10567, type: !268)
!2988 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sgid", scope: !2982, file: !1, line: 10567, type: !268)
!2989 = !DISubprogram(name: "posix_setxattr", scope: !1, file: !1, line: 10665, type: !405, isLocal: true, isDefinition: true, scopeLine: 10666, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_setxattr, variables: !2990)
!2990 = !{!2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001}
!2991 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2989, file: !1, line: 10665, type: !276)
!2992 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2989, file: !1, line: 10665, type: !276)
!2993 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !2989, file: !1, line: 10665, type: !276)
!2994 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "path", scope: !2989, file: !1, line: 10667, type: !615)
!2995 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "attribute", scope: !2989, file: !1, line: 10668, type: !615)
!2996 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !2989, file: !1, line: 10669, type: !506)
!2997 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "flags", scope: !2989, file: !1, line: 10670, type: !314)
!2998 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "follow_symlinks", scope: !2989, file: !1, line: 10671, type: !314)
!2999 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !2989, file: !1, line: 10672, type: !314)
!3000 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !2989, file: !1, line: 10673, type: !276)
!3001 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !3002, file: !1, line: 10693, type: !870)
!3002 = distinct !DILexicalBlock(scope: !2989, file: !1, line: 10693, column: 5)
!3003 = !DISubprogram(name: "posix_getxattr", scope: !1, file: !1, line: 10588, type: !405, isLocal: true, isDefinition: true, scopeLine: 10589, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_getxattr, variables: !3004)
!3004 = !{!3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3017, !3018, !3019, !3021}
!3005 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !3003, file: !1, line: 10588, type: !276)
!3006 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !3003, file: !1, line: 10588, type: !276)
!3007 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !3003, file: !1, line: 10588, type: !276)
!3008 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "path", scope: !3003, file: !1, line: 10590, type: !615)
!3009 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "attribute", scope: !3003, file: !1, line: 10591, type: !615)
!3010 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "follow_symlinks", scope: !3003, file: !1, line: 10592, type: !314)
!3011 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer", scope: !3003, file: !1, line: 10593, type: !276)
!3012 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !3003, file: !1, line: 10594, type: !314)
!3013 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ptr", scope: !3014, file: !1, line: 10612, type: !275)
!3014 = distinct !DILexicalBlock(scope: !3015, file: !1, line: 10611, column: 24)
!3015 = distinct !DILexicalBlock(scope: !3016, file: !1, line: 10611, column: 5)
!3016 = distinct !DILexicalBlock(scope: !3003, file: !1, line: 10611, column: 5)
!3017 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !3014, file: !1, line: 10613, type: !284)
!3018 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer_size", scope: !3014, file: !1, line: 10615, type: !282)
!3019 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !3020, file: !1, line: 10625, type: !870)
!3020 = distinct !DILexicalBlock(scope: !3014, file: !1, line: 10625, column: 9)
!3021 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3022, file: !1, line: 10635, type: !276)
!3022 = distinct !DILexicalBlock(scope: !3023, file: !1, line: 10635, column: 13)
!3023 = distinct !DILexicalBlock(scope: !3024, file: !1, line: 10634, column: 25)
!3024 = distinct !DILexicalBlock(scope: !3014, file: !1, line: 10634, column: 13)
!3025 = !DISubprogram(name: "posix_removexattr", scope: !1, file: !1, line: 10730, type: !405, isLocal: true, isDefinition: true, scopeLine: 10731, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_removexattr, variables: !3026)
!3026 = !{!3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035}
!3027 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !3025, file: !1, line: 10730, type: !276)
!3028 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !3025, file: !1, line: 10730, type: !276)
!3029 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !3025, file: !1, line: 10730, type: !276)
!3030 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "path", scope: !3025, file: !1, line: 10732, type: !615)
!3031 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "attribute", scope: !3025, file: !1, line: 10733, type: !615)
!3032 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "follow_symlinks", scope: !3025, file: !1, line: 10734, type: !314)
!3033 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !3025, file: !1, line: 10735, type: !314)
!3034 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !3025, file: !1, line: 10736, type: !276)
!3035 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !3036, file: !1, line: 10754, type: !870)
!3036 = distinct !DILexicalBlock(scope: !3025, file: !1, line: 10754, column: 5)
!3037 = !DISubprogram(name: "posix_listxattr", scope: !1, file: !1, line: 10789, type: !405, isLocal: true, isDefinition: true, scopeLine: 10790, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @posix_listxattr, variables: !3038)
!3038 = !{!3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3052, !3053, !3054, !3055, !3056, !3058, !3064, !3065, !3069, !3071}
!3039 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !3037, file: !1, line: 10789, type: !276)
!3040 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !3037, file: !1, line: 10789, type: !276)
!3041 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !3037, file: !1, line: 10789, type: !276)
!3042 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "path", scope: !3037, file: !1, line: 10791, type: !615)
!3043 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "follow_symlinks", scope: !3037, file: !1, line: 10792, type: !314)
!3044 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !3037, file: !1, line: 10793, type: !282)
!3045 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !3037, file: !1, line: 10794, type: !276)
!3046 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer", scope: !3037, file: !1, line: 10795, type: !322)
!3047 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !3037, file: !1, line: 10796, type: !322)
!3048 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "start", scope: !3049, file: !1, line: 10813, type: !322)
!3049 = distinct !DILexicalBlock(scope: !3050, file: !1, line: 10812, column: 24)
!3050 = distinct !DILexicalBlock(scope: !3051, file: !1, line: 10812, column: 5)
!3051 = distinct !DILexicalBlock(scope: !3037, file: !1, line: 10812, column: 5)
!3052 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "trace", scope: !3049, file: !1, line: 10813, type: !322)
!3053 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "end", scope: !3049, file: !1, line: 10813, type: !322)
!3054 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "length", scope: !3049, file: !1, line: 10814, type: !284)
!3055 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer_size", scope: !3049, file: !1, line: 10816, type: !282)
!3056 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !3057, file: !1, line: 10828, type: !870)
!3057 = distinct !DILexicalBlock(scope: !3049, file: !1, line: 10828, column: 9)
!3058 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "error", scope: !3059, file: !1, line: 10855, type: !314)
!3059 = distinct !DILexicalBlock(scope: !3060, file: !1, line: 10854, column: 26)
!3060 = distinct !DILexicalBlock(scope: !3061, file: !1, line: 10854, column: 17)
!3061 = distinct !DILexicalBlock(scope: !3062, file: !1, line: 10853, column: 61)
!3062 = distinct !DILexicalBlock(scope: !3063, file: !1, line: 10853, column: 9)
!3063 = distinct !DILexicalBlock(scope: !3049, file: !1, line: 10853, column: 9)
!3064 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "attribute", scope: !3059, file: !1, line: 10856, type: !276)
!3065 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3066, file: !1, line: 10859, type: !276)
!3066 = distinct !DILexicalBlock(scope: !3067, file: !1, line: 10859, column: 21)
!3067 = distinct !DILexicalBlock(scope: !3068, file: !1, line: 10858, column: 33)
!3068 = distinct !DILexicalBlock(scope: !3059, file: !1, line: 10858, column: 21)
!3069 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3070, file: !1, line: 10864, type: !276)
!3070 = distinct !DILexicalBlock(scope: !3059, file: !1, line: 10864, column: 17)
!3071 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3072, file: !1, line: 10866, type: !276)
!3072 = distinct !DILexicalBlock(scope: !3073, file: !1, line: 10866, column: 21)
!3073 = distinct !DILexicalBlock(scope: !3074, file: !1, line: 10865, column: 28)
!3074 = distinct !DILexicalBlock(scope: !3059, file: !1, line: 10865, column: 21)
!3075 = !DISubprogram(name: "get_terminal_size", scope: !1, file: !1, line: 10952, type: !396, isLocal: true, isDefinition: true, scopeLine: 10953, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @get_terminal_size, variables: !3076)
!3076 = !{!3077, !3078, !3079, !3080, !3081, !3082, !3083, !3092}
!3077 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !3075, file: !1, line: 10952, type: !276)
!3078 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !3075, file: !1, line: 10952, type: !276)
!3079 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "columns", scope: !3075, file: !1, line: 10954, type: !314)
!3080 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lines", scope: !3075, file: !1, line: 10954, type: !314)
!3081 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "termsize", scope: !3075, file: !1, line: 10955, type: !276)
!3082 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !3075, file: !1, line: 10957, type: !314)
!3083 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "w", scope: !3084, file: !1, line: 10971, type: !3085)
!3084 = distinct !DILexicalBlock(scope: !3075, file: !1, line: 10970, column: 5)
!3085 = !DICompositeType(tag: DW_TAG_structure_type, name: "winsize", file: !3086, line: 27, size: 64, align: 16, elements: !3087)
!3086 = !DIFile(filename: "/usr/include/bits/ioctl-types.h", directory: "/home/juneyoung.lee/simplberry/simplberry/simplberry-tests/programs/Python-3.4.1")
!3087 = !{!3088, !3089, !3090, !3091}
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "ws_row", scope: !3085, file: !3086, line: 29, baseType: !347, size: 16, align: 16)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "ws_col", scope: !3085, file: !3086, line: 30, baseType: !347, size: 16, align: 16, offset: 16)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "ws_xpixel", scope: !3085, file: !3086, line: 31, baseType: !347, size: 16, align: 16, offset: 32)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "ws_ypixel", scope: !3085, file: !3086, line: 32, baseType: !347, size: 16, align: 16, offset: 48)
!3092 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3093, file: !1, line: 11014, type: !276)
!3093 = distinct !DILexicalBlock(scope: !3094, file: !1, line: 11014, column: 9)
!3094 = distinct !DILexicalBlock(scope: !3095, file: !1, line: 11013, column: 27)
!3095 = distinct !DILexicalBlock(scope: !3075, file: !1, line: 11013, column: 9)
!3096 = !DISubprogram(name: "posix_cpu_count", scope: !1, file: !1, line: 11027, type: !386, isLocal: true, isDefinition: true, scopeLine: 11028, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @posix_cpu_count, variables: !3097)
!3097 = !{!3098, !3099}
!3098 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !3096, file: !1, line: 11027, type: !276)
!3099 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ncpu", scope: !3096, file: !1, line: 11029, type: !314)
!3100 = !DISubprogram(name: "posix_get_inheritable", scope: !1, file: !1, line: 11062, type: !396, isLocal: true, isDefinition: true, scopeLine: 11063, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_get_inheritable, variables: !3101)
!3101 = !{!3102, !3103, !3104, !3105}
!3102 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !3100, file: !1, line: 11062, type: !276)
!3103 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !3100, file: !1, line: 11062, type: !276)
!3104 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !3100, file: !1, line: 11064, type: !314)
!3105 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "inheritable", scope: !3100, file: !1, line: 11065, type: !314)
!3106 = !DISubprogram(name: "posix_set_inheritable", scope: !1, file: !1, line: 11085, type: !396, isLocal: true, isDefinition: true, scopeLine: 11086, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @posix_set_inheritable, variables: !3107)
!3107 = !{!3108, !3109, !3110, !3111}
!3108 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !3106, file: !1, line: 11085, type: !276)
!3109 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !3106, file: !1, line: 11085, type: !276)
!3110 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !3106, file: !1, line: 11087, type: !314)
!3111 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "inheritable", scope: !3106, file: !1, line: 11087, type: !314)
!3112 = !DISubprogram(name: "convertenviron", scope: !1, file: !1, line: 1185, type: !726, isLocal: true, isDefinition: true, scopeLine: 1186, flags: DIFlagPrototyped, isOptimized: true, variables: !3113)
!3113 = !{!3114, !3115, !3116, !3120, !3121, !3122, !3126, !3128}
!3114 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "d", scope: !3112, file: !1, line: 1187, type: !276)
!3115 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "e", scope: !3112, file: !1, line: 1191, type: !652)
!3116 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !3117, file: !1, line: 1237, type: !276)
!3117 = distinct !DILexicalBlock(scope: !3118, file: !1, line: 1236, column: 40)
!3118 = distinct !DILexicalBlock(scope: !3119, file: !1, line: 1236, column: 5)
!3119 = distinct !DILexicalBlock(scope: !3112, file: !1, line: 1236, column: 5)
!3120 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "v", scope: !3117, file: !1, line: 1238, type: !276)
!3121 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p", scope: !3117, file: !1, line: 1239, type: !322)
!3122 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3123, file: !1, line: 1250, type: !276)
!3123 = distinct !DILexicalBlock(scope: !3124, file: !1, line: 1250, column: 13)
!3124 = distinct !DILexicalBlock(scope: !3125, file: !1, line: 1248, column: 24)
!3125 = distinct !DILexicalBlock(scope: !3117, file: !1, line: 1248, column: 13)
!3126 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3127, file: !1, line: 1257, type: !276)
!3127 = distinct !DILexicalBlock(scope: !3117, file: !1, line: 1257, column: 9)
!3128 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3129, file: !1, line: 1258, type: !276)
!3129 = distinct !DILexicalBlock(scope: !3117, file: !1, line: 1258, column: 9)
!3130 = !DISubprogram(name: "all_ins", scope: !1, file: !1, line: 11647, type: !414, isLocal: true, isDefinition: true, scopeLine: 11648, flags: DIFlagPrototyped, isOptimized: true, variables: !3131)
!3131 = !{!3132}
!3132 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "m", arg: 1, scope: !3130, file: !1, line: 11647, type: !276)
!3133 = !DISubprogram(name: "setup_confname_tables", scope: !1, file: !1, line: 10330, type: !414, isLocal: true, isDefinition: true, scopeLine: 10331, flags: DIFlagPrototyped, isOptimized: true, variables: !3134)
!3134 = !{!3135}
!3135 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !3133, file: !1, line: 10330, type: !276)
!3136 = !DISubprogram(name: "setup_confname_table", scope: !1, file: !1, line: 10305, type: !3137, isLocal: true, isDefinition: true, scopeLine: 10307, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.constdef*, i64, i8*, %struct._object*)* @setup_confname_table, variables: !3139)
!3137 = !DISubroutineType(types: !3138)
!3138 = !{!314, !2885, !364, !322, !276}
!3139 = !{!3140, !3141, !3142, !3143, !3144, !3145, !3146, !3150, !3154, !3157, !3159}
!3140 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "table", arg: 1, scope: !3136, file: !1, line: 10305, type: !2885)
!3141 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tablesize", arg: 2, scope: !3136, file: !1, line: 10305, type: !364)
!3142 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tablename", arg: 3, scope: !3136, file: !1, line: 10306, type: !322)
!3143 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 4, scope: !3136, file: !1, line: 10306, type: !276)
!3144 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "d", scope: !3136, file: !1, line: 10308, type: !276)
!3145 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !3136, file: !1, line: 10309, type: !364)
!3146 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "o", scope: !3147, file: !1, line: 10317, type: !276)
!3147 = distinct !DILexicalBlock(scope: !3148, file: !1, line: 10316, column: 35)
!3148 = distinct !DILexicalBlock(scope: !3149, file: !1, line: 10316, column: 5)
!3149 = distinct !DILexicalBlock(scope: !3136, file: !1, line: 10316, column: 5)
!3150 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !3151, file: !1, line: 10319, type: !276)
!3151 = distinct !DILexicalBlock(scope: !3152, file: !1, line: 10319, column: 13)
!3152 = distinct !DILexicalBlock(scope: !3153, file: !1, line: 10318, column: 75)
!3153 = distinct !DILexicalBlock(scope: !3147, file: !1, line: 10318, column: 13)
!3154 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3155, file: !1, line: 10319, type: !276)
!3155 = distinct !DILexicalBlock(scope: !3156, file: !1, line: 10319, column: 13)
!3156 = distinct !DILexicalBlock(scope: !3151, file: !1, line: 10319, column: 13)
!3157 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3158, file: !1, line: 10320, type: !276)
!3158 = distinct !DILexicalBlock(scope: !3152, file: !1, line: 10320, column: 13)
!3159 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3160, file: !1, line: 10323, type: !276)
!3160 = distinct !DILexicalBlock(scope: !3147, file: !1, line: 10323, column: 9)
!3161 = !DISubprogram(name: "cmp_constdefs", scope: !1, file: !1, line: 10294, type: !3162, isLocal: true, isDefinition: true, scopeLine: 10295, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i8*)* @cmp_constdefs, variables: !3166)
!3162 = !DISubroutineType(types: !3163)
!3163 = !{!314, !3164, !3164}
!3164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3165, size: 64, align: 64)
!3165 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!3166 = !{!3167, !3168, !3169, !3170, !3171, !3173}
!3167 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "v1", arg: 1, scope: !3161, file: !1, line: 10294, type: !3164)
!3168 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "v2", arg: 2, scope: !3161, file: !1, line: 10294, type: !3164)
!3169 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c1", scope: !3161, file: !1, line: 10296, type: !678)
!3170 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c2", scope: !3161, file: !1, line: 10298, type: !678)
!3171 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1_len", scope: !3172, file: !1, line: 10301, type: !364)
!3172 = distinct !DILexicalBlock(scope: !3161, file: !1, line: 10301, column: 12)
!3173 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s2_len", scope: !3172, file: !1, line: 10301, type: !364)
!3174 = !DISubprogram(name: "statresult_new", scope: !1, file: !1, line: 2105, type: !3175, isLocal: true, isDefinition: true, scopeLine: 2106, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @statresult_new, variables: !3177)
!3175 = !DISubroutineType(types: !3176)
!3176 = !{!276, !667, !276, !276}
!3177 = !{!3178, !3179, !3180, !3181, !3182, !3183}
!3178 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !3174, file: !1, line: 2105, type: !667)
!3179 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !3174, file: !1, line: 2105, type: !276)
!3180 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !3174, file: !1, line: 2105, type: !276)
!3181 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !3174, file: !1, line: 2107, type: !684)
!3182 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !3174, file: !1, line: 2108, type: !314)
!3183 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !3184, file: !1, line: 2118, type: !276)
!3184 = distinct !DILexicalBlock(scope: !3185, file: !1, line: 2118, column: 13)
!3185 = distinct !DILexicalBlock(scope: !3186, file: !1, line: 2117, column: 46)
!3186 = distinct !DILexicalBlock(scope: !3187, file: !1, line: 2117, column: 13)
!3187 = distinct !DILexicalBlock(scope: !3188, file: !1, line: 2116, column: 30)
!3188 = distinct !DILexicalBlock(scope: !3189, file: !1, line: 2116, column: 5)
!3189 = distinct !DILexicalBlock(scope: !3174, file: !1, line: 2116, column: 5)
!3190 = !DISubprogram(name: "sched_param_new", scope: !1, file: !1, line: 5621, type: !3175, isLocal: true, isDefinition: true, scopeLine: 5622, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @sched_param_new, variables: !3191)
!3191 = !{!3192, !3193, !3194, !3195, !3196}
!3192 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !3190, file: !1, line: 5621, type: !667)
!3193 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !3190, file: !1, line: 5621, type: !276)
!3194 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !3190, file: !1, line: 5621, type: !276)
!3195 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !3190, file: !1, line: 5623, type: !276)
!3196 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "priority", scope: !3190, file: !1, line: 5623, type: !276)
!3197 = !DISubprogram(name: "fd_specified", scope: !1, file: !1, line: 939, type: !3198, isLocal: true, isDefinition: true, scopeLine: 939, flags: DIFlagPrototyped, isOptimized: true, variables: !3200)
!3198 = !DISubroutineType(types: !3199)
!3199 = !{!314, !322, !314}
!3200 = !{!3201, !3202}
!3201 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "function_name", arg: 1, scope: !3197, file: !1, line: 939, type: !322)
!3202 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fd", arg: 2, scope: !3197, file: !1, line: 939, type: !314)
!3203 = !DISubprogram(name: "argument_unavailable_error", scope: !1, file: !1, line: 916, type: !3204, isLocal: true, isDefinition: true, scopeLine: 916, flags: DIFlagPrototyped, isOptimized: true, variables: !3206)
!3204 = !DISubroutineType(types: !3205)
!3205 = !{null, !322, !322}
!3206 = !{!3207, !3208}
!3207 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "function_name", arg: 1, scope: !3203, file: !1, line: 916, type: !322)
!3208 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argument_name", arg: 2, scope: !3203, file: !1, line: 916, type: !322)
!3209 = !DISubprogram(name: "follow_symlinks_specified", scope: !1, file: !1, line: 948, type: !3198, isLocal: true, isDefinition: true, scopeLine: 948, flags: DIFlagPrototyped, isOptimized: true, variables: !3210)
!3210 = !{!3211, !3212}
!3211 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "function_name", arg: 1, scope: !3209, file: !1, line: 948, type: !322)
!3212 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "follow_symlinks", arg: 2, scope: !3209, file: !1, line: 948, type: !314)
!3213 = !DISubprogram(name: "dir_fd_and_follow_symlinks_invalid", scope: !1, file: !1, line: 991, type: !936, isLocal: true, isDefinition: true, scopeLine: 992, flags: DIFlagPrototyped, isOptimized: true, variables: !3214)
!3214 = !{!3215, !3216, !3217}
!3215 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "function_name", arg: 1, scope: !3213, file: !1, line: 991, type: !322)
!3216 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dir_fd", arg: 2, scope: !3213, file: !1, line: 991, type: !314)
!3217 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "follow_symlinks", arg: 3, scope: !3213, file: !1, line: 992, type: !314)
!3218 = !DISubprogram(name: "dir_fd_converter", scope: !1, file: !1, line: 671, type: !535, isLocal: true, isDefinition: true, scopeLine: 672, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i8*)* @dir_fd_converter, variables: !3219)
!3219 = !{!3220, !3221}
!3220 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "o", arg: 1, scope: !3218, file: !1, line: 671, type: !276)
!3221 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "p", arg: 2, scope: !3218, file: !1, line: 671, type: !275)
!3222 = !DISubprogram(name: "dir_fd_unavailable", scope: !1, file: !1, line: 925, type: !535, isLocal: true, isDefinition: true, scopeLine: 926, flags: DIFlagPrototyped, isOptimized: true, variables: !3223)
!3223 = !{!3224, !3225, !3226}
!3224 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "o", arg: 1, scope: !3222, file: !1, line: 925, type: !276)
!3225 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "p", arg: 2, scope: !3222, file: !1, line: 925, type: !275)
!3226 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dir_fd", scope: !3222, file: !1, line: 927, type: !314)
!3227 = !{!3228, !3229, !3230, !3231, !3232, !3233, !3234, !3235, !3236, !3237, !3238, !3239, !3243, !3247, !3251, !3252, !3256, !3257, !3261, !3265, !3267, !3271, !3275, !3279, !3283, !3284, !3288, !3292, !3296, !3300, !3304, !3308, !3312, !3313, !3317, !3318, !3322, !3324, !3328, !3329, !3333, !3337, !3341, !3345, !3346, !3350, !3351, !3355, !3359, !3360, !3364, !3365, !3366, !3370, !3371, !3375, !3379, !3380, !3384, !3385, !3389, !3393, !3397, !3398, !3399, !3403, !3407, !3411, !3412, !3416, !3420, !3424, !3428, !3432, !3436, !3438, !3442, !3446, !3450, !3454, !3458, !3462, !3466, !3470, !3471, !3472, !3473, !3474, !3478, !3482, !3486, !3487, !3491, !3495, !3499, !3503, !3504, !3508, !3512, !3516, !3520, !3521, !3522, !3523, !3531, !3535, !3539, !3543, !3544, !3548, !3552, !3553, !3554, !3558, !3559, !3563, !3564, !3565, !3569, !3573, !3574, !3575, !3579, !3583, !3584, !3588, !3592, !3593, !3594, !3598, !3599, !3603, !3604, !3605, !3606, !3610, !3611, !3615, !3616, !3620, !3621, !3622, !3626, !3630, !3631, !3635, !3639, !3643, !3644, !3645, !3649, !3653, !3654, !3658, !3662, !3666, !3670, !3671, !3675, !3679, !3680, !3681, !3685, !3689, !3690, !3694, !3698, !3702, !3706, !3707, !3709, !3710, !3711, !3715, !3719, !3723, !3727, !3728, !3732, !3736, !3737, !3738, !3742, !3743, !3745, !3749, !3750, !3754, !3755, !3756, !3760, !3764, !3765, !3766, !3767, !3780, !3784, !3787, !3788, !3792, !3794, !3795, !3799, !3803, !3804, !3805, !3809, !3811, !3812, !3813, !3817, !3819, !3820, !3824, !3825, !3826, !3830, !3831, !3832}
!3228 = !DIGlobalVariable(name: "WaitidResultType", scope: !0, file: !1, line: 2093, type: !668, isLocal: true, isDefinition: true, variable: %struct._typeobject* @WaitidResultType)
!3229 = !DIGlobalVariable(name: "initialized", scope: !0, file: !1, line: 2096, type: !314, isLocal: true, isDefinition: true)
!3230 = !DIGlobalVariable(name: "StatResultType", scope: !0, file: !1, line: 2097, type: !668, isLocal: true, isDefinition: true, variable: %struct._typeobject* @StatResultType)
!3231 = !DIGlobalVariable(name: "StatVFSResultType", scope: !0, file: !1, line: 2098, type: !668, isLocal: true, isDefinition: true, variable: %struct._typeobject* @StatVFSResultType)
!3232 = !DIGlobalVariable(name: "SchedParamType", scope: !0, file: !1, line: 2100, type: !668, isLocal: true, isDefinition: true, variable: %struct._typeobject* @SchedParamType)
!3233 = !DIGlobalVariable(name: "structseq_new", scope: !0, file: !1, line: 2102, type: !594, isLocal: true, isDefinition: true, variable: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)** @structseq_new)
!3234 = !DIGlobalVariable(name: "UnameResultType", scope: !0, file: !1, line: 4608, type: !668, isLocal: true, isDefinition: true, variable: %struct._typeobject* @UnameResultType)
!3235 = !DIGlobalVariable(name: "TimesResultType", scope: !0, file: !1, line: 7495, type: !668, isLocal: true, isDefinition: true, variable: %struct._typeobject* @TimesResultType)
!3236 = !DIGlobalVariable(name: "posix_putenv_garbage", scope: !0, file: !1, line: 8855, type: !276, isLocal: true, isDefinition: true, variable: %struct._object** @posix_putenv_garbage)
!3237 = !DIGlobalVariable(name: "TerminalSizeType", scope: !0, file: !1, line: 10917, type: !668, isLocal: true, isDefinition: true, variable: %struct._typeobject* @TerminalSizeType)
!3238 = !DIGlobalVariable(name: "posixmodule", scope: !0, file: !1, line: 12064, type: !751, isLocal: true, isDefinition: true, variable: %struct.PyModuleDef* @posixmodule)
!3239 = !DIGlobalVariable(name: "posix__doc__", scope: !0, file: !1, line: 36, type: !3240, isLocal: true, isDefinition: true, variable: [259 x i8]* @posix__doc__)
!3240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 2072, align: 8, elements: !3241)
!3241 = !{!3242}
!3242 = !DISubrange(count: 259)
!3243 = !DIGlobalVariable(name: "posix_methods", scope: !0, file: !1, line: 11163, type: !3244, isLocal: true, isDefinition: true, variable: [146 x %struct.PyMethodDef]* @posix_methods)
!3244 = !DICompositeType(tag: DW_TAG_array_type, baseType: !767, size: 37376, align: 64, elements: !3245)
!3245 = !{!3246}
!3246 = !DISubrange(count: 146)
!3247 = !DIGlobalVariable(name: "_keywords", scope: !745, file: !1, line: 2483, type: !3248, isLocal: true, isDefinition: true, variable: [4 x i8*]* @os_stat._keywords)
!3248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !322, size: 256, align: 64, elements: !3249)
!3249 = !{!3250}
!3250 = !DISubrange(count: 4)
!3251 = !DIGlobalVariable(name: "_stat_float_times", scope: !0, file: !1, line: 2129, type: !314, isLocal: true, isDefinition: true, variable: i32* @_stat_float_times)
!3252 = !DIGlobalVariable(name: "os_stat__doc__", scope: !0, file: !1, line: 2449, type: !3253, isLocal: true, isDefinition: true, variable: [784 x i8]* @os_stat__doc__)
!3253 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 6272, align: 8, elements: !3254)
!3254 = !{!3255}
!3255 = !DISubrange(count: 784)
!3256 = !DIGlobalVariable(name: "_keywords", scope: !1063, file: !1, line: 2625, type: !1531, isLocal: true, isDefinition: true, variable: [6 x i8*]* @os_access._keywords)
!3257 = !DIGlobalVariable(name: "os_access__doc__", scope: !0, file: !1, line: 2583, type: !3258, isLocal: true, isDefinition: true, variable: [1149 x i8]* @os_access__doc__)
!3258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 9192, align: 8, elements: !3259)
!3259 = !{!3260}
!3260 = !DISubrange(count: 1149)
!3261 = !DIGlobalVariable(name: "os_ttyname__doc__", scope: !0, file: !1, line: 2742, type: !3262, isLocal: true, isDefinition: true, variable: [128 x i8]* @os_ttyname__doc__)
!3262 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 1024, align: 8, elements: !3263)
!3263 = !{!3264}
!3264 = !DISubrange(count: 128)
!3265 = !DIGlobalVariable(name: "keywords", scope: !1109, file: !1, line: 2828, type: !3266, isLocal: true, isDefinition: true, variable: [2 x i8*]* @posix_chdir.keywords)
!3266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !322, size: 128, align: 64, elements: !1578)
!3267 = !DIGlobalVariable(name: "posix_chdir__doc__", scope: !0, file: !1, line: 2814, type: !3268, isLocal: true, isDefinition: true, variable: [260 x i8]* @posix_chdir__doc__)
!3268 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 2080, align: 8, elements: !3269)
!3269 = !{!3270}
!3270 = !DISubrange(count: 260)
!3271 = !DIGlobalVariable(name: "keywords", scope: !1119, file: !1, line: 2910, type: !3272, isLocal: true, isDefinition: true, variable: [5 x i8*]* @posix_chmod.keywords)
!3272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !322, size: 320, align: 64, elements: !3273)
!3273 = !{!3274}
!3274 = !DISubrange(count: 5)
!3275 = !DIGlobalVariable(name: "posix_chmod__doc__", scope: !0, file: !1, line: 2884, type: !3276, isLocal: true, isDefinition: true, variable: [845 x i8]* @posix_chmod__doc__)
!3276 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 6760, align: 8, elements: !3277)
!3277 = !{!3278}
!3278 = !DISubrange(count: 845)
!3279 = !DIGlobalVariable(name: "posix_fchmod__doc__", scope: !0, file: !1, line: 3031, type: !3280, isLocal: true, isDefinition: true, variable: [124 x i8]* @posix_fchmod__doc__)
!3280 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 992, align: 8, elements: !3281)
!3281 = !{!3282}
!3282 = !DISubrange(count: 124)
!3283 = !DIGlobalVariable(name: "keywords", scope: !1142, file: !1, line: 3256, type: !1531, isLocal: true, isDefinition: true, variable: [6 x i8*]* @posix_chown.keywords)
!3284 = !DIGlobalVariable(name: "posix_chown__doc__", scope: !0, file: !1, line: 3229, type: !3285, isLocal: true, isDefinition: true, variable: [874 x i8]* @posix_chown__doc__)
!3285 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 6992, align: 8, elements: !3286)
!3286 = !{!3287}
!3287 = !DISubrange(count: 874)
!3288 = !DIGlobalVariable(name: "posix_fchown__doc__", scope: !0, file: !1, line: 3332, type: !3289, isLocal: true, isDefinition: true, variable: [159 x i8]* @posix_fchown__doc__)
!3289 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 1272, align: 8, elements: !3290)
!3290 = !{!3291}
!3291 = !DISubrange(count: 159)
!3292 = !DIGlobalVariable(name: "posix_lchown__doc__", scope: !0, file: !1, line: 3358, type: !3293, isLocal: true, isDefinition: true, variable: [199 x i8]* @posix_lchown__doc__)
!3293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 1592, align: 8, elements: !3294)
!3294 = !{!3295}
!3295 = !DISubrange(count: 199)
!3296 = !DIGlobalVariable(name: "posix_chroot__doc__", scope: !0, file: !1, line: 3171, type: !3297, isLocal: true, isDefinition: true, variable: [45 x i8]* @posix_chroot__doc__)
!3297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 360, align: 8, elements: !3298)
!3298 = !{!3299}
!3299 = !DISubrange(count: 45)
!3300 = !DIGlobalVariable(name: "posix_ctermid__doc__", scope: !0, file: !1, line: 2793, type: !3301, isLocal: true, isDefinition: true, variable: [83 x i8]* @posix_ctermid__doc__)
!3301 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 664, align: 8, elements: !3302)
!3302 = !{!3303}
!3303 = !DISubrange(count: 83)
!3304 = !DIGlobalVariable(name: "posix_getcwd__doc__", scope: !0, file: !1, line: 3445, type: !3305, isLocal: true, isDefinition: true, variable: [86 x i8]* @posix_getcwd__doc__)
!3305 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 688, align: 8, elements: !3306)
!3306 = !{!3307}
!3307 = !DISubrange(count: 86)
!3308 = !DIGlobalVariable(name: "posix_getcwdb__doc__", scope: !0, file: !1, line: 3455, type: !3309, isLocal: true, isDefinition: true, variable: [85 x i8]* @posix_getcwdb__doc__)
!3309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 680, align: 8, elements: !3310)
!3310 = !{!3311}
!3311 = !DISubrange(count: 85)
!3312 = !DIGlobalVariable(name: "keywords", scope: !1222, file: !1, line: 3492, type: !1531, isLocal: true, isDefinition: true, variable: [6 x i8*]* @posix_link.keywords)
!3313 = !DIGlobalVariable(name: "posix_link__doc__", scope: !0, file: !1, line: 3470, type: !3314, isLocal: true, isDefinition: true, variable: [657 x i8]* @posix_link__doc__)
!3314 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 5256, align: 8, elements: !3315)
!3315 = !{!3316}
!3316 = !DISubrange(count: 657)
!3317 = !DIGlobalVariable(name: "keywords", scope: !1242, file: !1, line: 3850, type: !3266, isLocal: true, isDefinition: true, variable: [2 x i8*]* @posix_listdir.keywords)
!3318 = !DIGlobalVariable(name: "posix_listdir__doc__", scope: !0, file: !1, line: 3569, type: !3319, isLocal: true, isDefinition: true, variable: [611 x i8]* @posix_listdir__doc__)
!3319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 4888, align: 8, elements: !3320)
!3320 = !{!3321}
!3321 = !DISubrange(count: 611)
!3322 = !DIGlobalVariable(name: "keywords", scope: !1327, file: !1, line: 2516, type: !3323, isLocal: true, isDefinition: true, variable: [3 x i8*]* @posix_lstat.keywords)
!3323 = !DICompositeType(tag: DW_TAG_array_type, baseType: !322, size: 192, align: 64, elements: !865)
!3324 = !DIGlobalVariable(name: "posix_lstat__doc__", scope: !0, file: !1, line: 2508, type: !3325, isLocal: true, isDefinition: true, variable: [140 x i8]* @posix_lstat__doc__)
!3325 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 1120, align: 8, elements: !3326)
!3326 = !{!3327}
!3327 = !DISubrange(count: 140)
!3328 = !DIGlobalVariable(name: "keywords", scope: !1336, file: !1, line: 4105, type: !3248, isLocal: true, isDefinition: true, variable: [4 x i8*]* @posix_mkdir.keywords)
!3329 = !DIGlobalVariable(name: "posix_mkdir__doc__", scope: !0, file: !1, line: 4088, type: !3330, isLocal: true, isDefinition: true, variable: [371 x i8]* @posix_mkdir__doc__)
!3330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 2968, align: 8, elements: !3331)
!3331 = !{!3332}
!3332 = !DISubrange(count: 371)
!3333 = !DIGlobalVariable(name: "posix_nice__doc__", scope: !0, file: !1, line: 4166, type: !3334, isLocal: true, isDefinition: true, variable: [96 x i8]* @posix_nice__doc__)
!3334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 768, align: 8, elements: !3335)
!3335 = !{!3336}
!3336 = !DISubrange(count: 96)
!3337 = !DIGlobalVariable(name: "posix_getpriority__doc__", scope: !0, file: !1, line: 4203, type: !3338, isLocal: true, isDefinition: true, variable: [78 x i8]* @posix_getpriority__doc__)
!3338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 624, align: 8, elements: !3339)
!3339 = !{!3340}
!3340 = !DISubrange(count: 78)
!3341 = !DIGlobalVariable(name: "posix_setpriority__doc__", scope: !0, file: !1, line: 4224, type: !3342, isLocal: true, isDefinition: true, variable: [72 x i8]* @posix_setpriority__doc__)
!3342 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 576, align: 8, elements: !3343)
!3343 = !{!3344}
!3344 = !DISubrange(count: 72)
!3345 = !DIGlobalVariable(name: "keywords", scope: !1369, file: !1, line: 7086, type: !3323, isLocal: true, isDefinition: true, variable: [3 x i8*]* @posix_readlink.keywords)
!3346 = !DIGlobalVariable(name: "readlink__doc__", scope: !0, file: !1, line: 7066, type: !3347, isLocal: true, isDefinition: true, variable: [381 x i8]* @readlink__doc__)
!3347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 3048, align: 8, elements: !3348)
!3348 = !{!3349}
!3349 = !DISubrange(count: 381)
!3350 = !DIGlobalVariable(name: "keywords", scope: !1389, file: !1, line: 4254, type: !3272, isLocal: true, isDefinition: true, variable: [5 x i8*]* @internal_rename.keywords)
!3351 = !DIGlobalVariable(name: "posix_rename__doc__", scope: !0, file: !1, line: 4328, type: !3352, isLocal: true, isDefinition: true, variable: [442 x i8]* @posix_rename__doc__)
!3352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 3536, align: 8, elements: !3353)
!3353 = !{!3354}
!3354 = !DISubrange(count: 442)
!3355 = !DIGlobalVariable(name: "posix_replace__doc__", scope: !0, file: !1, line: 4344, type: !3356, isLocal: true, isDefinition: true, variable: [472 x i8]* @posix_replace__doc__)
!3356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 3776, align: 8, elements: !3357)
!3357 = !{!3358}
!3358 = !DISubrange(count: 472)
!3359 = !DIGlobalVariable(name: "keywords", scope: !1413, file: !1, line: 4374, type: !3323, isLocal: true, isDefinition: true, variable: [3 x i8*]* @posix_rmdir.keywords)
!3360 = !DIGlobalVariable(name: "posix_rmdir__doc__", scope: !0, file: !1, line: 4360, type: !3361, isLocal: true, isDefinition: true, variable: [317 x i8]* @posix_rmdir__doc__)
!3361 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 2536, align: 8, elements: !3362)
!3362 = !{!3363}
!3363 = !DISubrange(count: 317)
!3364 = !DIGlobalVariable(name: "stat_float_times__doc__", scope: !0, file: !1, line: 2131, type: !3268, isLocal: true, isDefinition: true, variable: [260 x i8]* @stat_float_times__doc__)
!3365 = !DIGlobalVariable(name: "keywords", scope: !1429, file: !1, line: 7295, type: !3272, isLocal: true, isDefinition: true, variable: [5 x i8*]* @posix_symlink.keywords)
!3366 = !DIGlobalVariable(name: "posix_symlink__doc__", scope: !0, file: !1, line: 7128, type: !3367, isLocal: true, isDefinition: true, variable: [638 x i8]* @posix_symlink__doc__)
!3367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 5104, align: 8, elements: !3368)
!3368 = !{!3369}
!3369 = !DISubrange(count: 638)
!3370 = !DIGlobalVariable(name: "posix_system__doc__", scope: !0, file: !1, line: 4422, type: !3338, isLocal: true, isDefinition: true, variable: [78 x i8]* @posix_system__doc__)
!3371 = !DIGlobalVariable(name: "posix_umask__doc__", scope: !0, file: !1, line: 4456, type: !3372, isLocal: true, isDefinition: true, variable: [90 x i8]* @posix_umask__doc__)
!3372 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 720, align: 8, elements: !3373)
!3373 = !{!3374}
!3374 = !DISubrange(count: 90)
!3375 = !DIGlobalVariable(name: "posix_uname__doc__", scope: !0, file: !1, line: 4578, type: !3376, isLocal: true, isDefinition: true, variable: [198 x i8]* @posix_uname__doc__)
!3376 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 1584, align: 8, elements: !3377)
!3377 = !{!3378}
!3378 = !DISubrange(count: 198)
!3379 = !DIGlobalVariable(name: "keywords", scope: !1509, file: !1, line: 4531, type: !3323, isLocal: true, isDefinition: true, variable: [3 x i8*]* @posix_unlink.keywords)
!3380 = !DIGlobalVariable(name: "posix_unlink__doc__", scope: !0, file: !1, line: 4508, type: !3381, isLocal: true, isDefinition: true, variable: [332 x i8]* @posix_unlink__doc__)
!3381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 2656, align: 8, elements: !3382)
!3382 = !{!3383}
!3383 = !DISubrange(count: 332)
!3384 = !DIGlobalVariable(name: "posix_remove__doc__", scope: !0, file: !1, line: 4517, type: !3381, isLocal: true, isDefinition: true, variable: [332 x i8]* @posix_remove__doc__)
!3385 = !DIGlobalVariable(name: "posix_utime__doc__", scope: !0, file: !1, line: 4652, type: !3386, isLocal: true, isDefinition: true, variable: [1254 x i8]* @posix_utime__doc__)
!3386 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 10032, align: 8, elements: !3387)
!3387 = !{!3388}
!3388 = !DISubrange(count: 1254)
!3389 = !DIGlobalVariable(name: "posix_times__doc__", scope: !0, file: !1, line: 7533, type: !3390, isLocal: true, isDefinition: true, variable: [207 x i8]* @posix_times__doc__)
!3390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 1656, align: 8, elements: !3391)
!3391 = !{!3392}
!3392 = !DISubrange(count: 207)
!3393 = !DIGlobalVariable(name: "posix__exit__doc__", scope: !0, file: !1, line: 5031, type: !3394, isLocal: true, isDefinition: true, variable: [89 x i8]* @posix__exit__doc__)
!3394 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 712, align: 8, elements: !3395)
!3395 = !{!3396}
!3396 = !DISubrange(count: 89)
!3397 = !DIGlobalVariable(name: "posix_execv__doc__", scope: !0, file: !1, line: 5180, type: !3289, isLocal: true, isDefinition: true, variable: [159 x i8]* @posix_execv__doc__)
!3398 = !DIGlobalVariable(name: "keywords", scope: !1723, file: !1, line: 5252, type: !3248, isLocal: true, isDefinition: true, variable: [4 x i8*]* @posix_execve.keywords)
!3399 = !DIGlobalVariable(name: "posix_execve__doc__", scope: !0, file: !1, line: 5232, type: !3400, isLocal: true, isDefinition: true, variable: [434 x i8]* @posix_execve__doc__)
!3400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 3472, align: 8, elements: !3401)
!3401 = !{!3402}
!3402 = !DISubrange(count: 434)
!3403 = !DIGlobalVariable(name: "posix_fork__doc__", scope: !0, file: !1, line: 5524, type: !3404, isLocal: true, isDefinition: true, variable: [99 x i8]* @posix_fork__doc__)
!3404 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 792, align: 8, elements: !3405)
!3405 = !{!3406}
!3406 = !DISubrange(count: 99)
!3407 = !DIGlobalVariable(name: "posix_sched_get_priority_max__doc__", scope: !0, file: !1, line: 5559, type: !3408, isLocal: true, isDefinition: true, variable: [82 x i8]* @posix_sched_get_priority_max__doc__)
!3408 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 656, align: 8, elements: !3409)
!3409 = !{!3410}
!3410 = !DISubrange(count: 82)
!3411 = !DIGlobalVariable(name: "posix_sched_get_priority_min__doc__", scope: !0, file: !1, line: 5576, type: !3408, isLocal: true, isDefinition: true, variable: [82 x i8]* @posix_sched_get_priority_min__doc__)
!3412 = !DIGlobalVariable(name: "posix_sched_getparam__doc__", scope: !0, file: !1, line: 5707, type: !3413, isLocal: true, isDefinition: true, variable: [172 x i8]* @posix_sched_getparam__doc__)
!3413 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 1376, align: 8, elements: !3414)
!3414 = !{!3415}
!3415 = !DISubrange(count: 172)
!3416 = !DIGlobalVariable(name: "posix_sched_getscheduler__doc__", scope: !0, file: !1, line: 5597, type: !3417, isLocal: true, isDefinition: true, variable: [162 x i8]* @posix_sched_getscheduler__doc__)
!3417 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 1296, align: 8, elements: !3418)
!3418 = !{!3419}
!3419 = !DISubrange(count: 162)
!3420 = !DIGlobalVariable(name: "posix_sched_rr_get_interval__doc__", scope: !0, file: !1, line: 5758, type: !3421, isLocal: true, isDefinition: true, variable: [111 x i8]* @posix_sched_rr_get_interval__doc__)
!3421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 888, align: 8, elements: !3422)
!3422 = !{!3423}
!3423 = !DISubrange(count: 111)
!3424 = !DIGlobalVariable(name: "posix_sched_setparam__doc__", scope: !0, file: !1, line: 5735, type: !3425, isLocal: true, isDefinition: true, variable: [122 x i8]* @posix_sched_setparam__doc__)
!3425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 976, align: 8, elements: !3426)
!3426 = !{!3427}
!3427 = !DISubrange(count: 122)
!3428 = !DIGlobalVariable(name: "posix_sched_setscheduler__doc__", scope: !0, file: !1, line: 5676, type: !3429, isLocal: true, isDefinition: true, variable: [174 x i8]* @posix_sched_setscheduler__doc__)
!3429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 1392, align: 8, elements: !3430)
!3430 = !{!3431}
!3431 = !DISubrange(count: 174)
!3432 = !DIGlobalVariable(name: "posix_sched_yield__doc__", scope: !0, file: !1, line: 5777, type: !3433, isLocal: true, isDefinition: true, variable: [47 x i8]* @posix_sched_yield__doc__)
!3433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 376, align: 8, elements: !3434)
!3434 = !{!3435}
!3435 = !DISubrange(count: 47)
!3436 = !DIGlobalVariable(name: "NCPUS_START", scope: !0, file: !1, line: 5792, type: !3437, isLocal: true, isDefinition: true, variable: i32 64)
!3437 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !314)
!3438 = !DIGlobalVariable(name: "posix_sched_setaffinity__doc__", scope: !0, file: !1, line: 5794, type: !3439, isLocal: true, isDefinition: true, variable: [94 x i8]* @posix_sched_setaffinity__doc__)
!3439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 752, align: 8, elements: !3440)
!3440 = !{!3441}
!3441 = !DISubrange(count: 94)
!3442 = !DIGlobalVariable(name: "posix_sched_getaffinity__doc__", scope: !0, file: !1, line: 5887, type: !3443, isLocal: true, isDefinition: true, variable: [139 x i8]* @posix_sched_getaffinity__doc__)
!3443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 1112, align: 8, elements: !3444)
!3444 = !{!3445}
!3445 = !DISubrange(count: 139)
!3446 = !DIGlobalVariable(name: "posix_openpty__doc__", scope: !0, file: !1, line: 5981, type: !3447, isLocal: true, isDefinition: true, variable: [112 x i8]* @posix_openpty__doc__)
!3447 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 896, align: 8, elements: !3448)
!3448 = !{!3449}
!3449 = !DISubrange(count: 112)
!3450 = !DIGlobalVariable(name: "posix_forkpty__doc__", scope: !0, file: !1, line: 6076, type: !3451, isLocal: true, isDefinition: true, variable: [226 x i8]* @posix_forkpty__doc__)
!3451 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 1808, align: 8, elements: !3452)
!3452 = !{!3453}
!3453 = !DISubrange(count: 226)
!3454 = !DIGlobalVariable(name: "posix_getegid__doc__", scope: !0, file: !1, line: 6111, type: !3455, isLocal: true, isDefinition: true, variable: [68 x i8]* @posix_getegid__doc__)
!3455 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 544, align: 8, elements: !3456)
!3456 = !{!3457}
!3457 = !DISubrange(count: 68)
!3458 = !DIGlobalVariable(name: "posix_geteuid__doc__", scope: !0, file: !1, line: 6124, type: !3459, isLocal: true, isDefinition: true, variable: [67 x i8]* @posix_geteuid__doc__)
!3459 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 536, align: 8, elements: !3460)
!3460 = !{!3461}
!3461 = !DISubrange(count: 67)
!3462 = !DIGlobalVariable(name: "posix_getgid__doc__", scope: !0, file: !1, line: 6137, type: !3463, isLocal: true, isDefinition: true, variable: [56 x i8]* @posix_getgid__doc__)
!3463 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 448, align: 8, elements: !3464)
!3464 = !{!3465}
!3465 = !DISubrange(count: 56)
!3466 = !DIGlobalVariable(name: "posix_getgrouplist__doc__", scope: !0, file: !1, line: 6160, type: !3467, isLocal: true, isDefinition: true, variable: [186 x i8]* @posix_getgrouplist__doc__)
!3467 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 1488, align: 8, elements: !3468)
!3468 = !{!3469}
!3469 = !DISubrange(count: 186)
!3470 = !DIGlobalVariable(name: "posix_getgroups__doc__", scope: !0, file: !1, line: 6235, type: !3394, isLocal: true, isDefinition: true, variable: [89 x i8]* @posix_getgroups__doc__)
!3471 = !DIGlobalVariable(name: "posix_getpid__doc__", scope: !0, file: !1, line: 6149, type: !3433, isLocal: true, isDefinition: true, variable: [47 x i8]* @posix_getpid__doc__)
!3472 = !DIGlobalVariable(name: "posix_getpgrp__doc__", scope: !0, file: !1, line: 6402, type: !3463, isLocal: true, isDefinition: true, variable: [56 x i8]* @posix_getpgrp__doc__)
!3473 = !DIGlobalVariable(name: "posix_getppid__doc__", scope: !0, file: !1, line: 6482, type: !3376, isLocal: true, isDefinition: true, variable: [198 x i8]* @posix_getppid__doc__)
!3474 = !DIGlobalVariable(name: "posix_getuid__doc__", scope: !0, file: !1, line: 6540, type: !3475, isLocal: true, isDefinition: true, variable: [55 x i8]* @posix_getuid__doc__)
!3475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 440, align: 8, elements: !3476)
!3476 = !{!3477}
!3477 = !DISubrange(count: 55)
!3478 = !DIGlobalVariable(name: "posix_getlogin__doc__", scope: !0, file: !1, line: 6501, type: !3479, isLocal: true, isDefinition: true, variable: [52 x i8]* @posix_getlogin__doc__)
!3479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 416, align: 8, elements: !3480)
!3480 = !{!3481}
!3481 = !DISubrange(count: 52)
!3482 = !DIGlobalVariable(name: "posix_kill__doc__", scope: !0, file: !1, line: 6553, type: !3483, isLocal: true, isDefinition: true, variable: [46 x i8]* @posix_kill__doc__)
!3483 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 368, align: 8, elements: !3484)
!3484 = !{!3485}
!3485 = !DISubrange(count: 46)
!3486 = !DIGlobalVariable(name: "posix_killpg__doc__", scope: !0, file: !1, line: 6572, type: !3475, isLocal: true, isDefinition: true, variable: [55 x i8]* @posix_killpg__doc__)
!3487 = !DIGlobalVariable(name: "posix_setuid__doc__", scope: !0, file: !1, line: 6666, type: !3488, isLocal: true, isDefinition: true, variable: [48 x i8]* @posix_setuid__doc__)
!3488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 384, align: 8, elements: !3489)
!3489 = !{!3490}
!3490 = !DISubrange(count: 48)
!3491 = !DIGlobalVariable(name: "posix_seteuid__doc__", scope: !0, file: !1, line: 6685, type: !3492, isLocal: true, isDefinition: true, variable: [59 x i8]* @posix_seteuid__doc__)
!3492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 472, align: 8, elements: !3493)
!3493 = !{!3494}
!3494 = !DISubrange(count: 59)
!3495 = !DIGlobalVariable(name: "posix_setegid__doc__", scope: !0, file: !1, line: 6705, type: !3496, isLocal: true, isDefinition: true, variable: [60 x i8]* @posix_setegid__doc__)
!3496 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 480, align: 8, elements: !3497)
!3497 = !{!3498}
!3498 = !DISubrange(count: 60)
!3499 = !DIGlobalVariable(name: "posix_setreuid__doc__", scope: !0, file: !1, line: 6725, type: !3500, isLocal: true, isDefinition: true, variable: [77 x i8]* @posix_setreuid__doc__)
!3500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 616, align: 8, elements: !3501)
!3501 = !{!3502}
!3502 = !DISubrange(count: 77)
!3503 = !DIGlobalVariable(name: "posix_setregid__doc__", scope: !0, file: !1, line: 6747, type: !3338, isLocal: true, isDefinition: true, variable: [78 x i8]* @posix_setregid__doc__)
!3504 = !DIGlobalVariable(name: "posix_setgid__doc__", scope: !0, file: !1, line: 6769, type: !3505, isLocal: true, isDefinition: true, variable: [49 x i8]* @posix_setgid__doc__)
!3505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 392, align: 8, elements: !3506)
!3506 = !{!3507}
!3507 = !DISubrange(count: 49)
!3508 = !DIGlobalVariable(name: "posix_setgroups__doc__", scope: !0, file: !1, line: 6787, type: !3509, isLocal: true, isDefinition: true, variable: [64 x i8]* @posix_setgroups__doc__)
!3509 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 512, align: 8, elements: !3510)
!3510 = !{!3511}
!3511 = !DISubrange(count: 64)
!3512 = !DIGlobalVariable(name: "posix_initgroups__doc__", scope: !0, file: !1, line: 6342, type: !3513, isLocal: true, isDefinition: true, variable: [197 x i8]* @posix_initgroups__doc__)
!3513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 1576, align: 8, elements: !3514)
!3514 = !{!3515}
!3515 = !DISubrange(count: 197)
!3516 = !DIGlobalVariable(name: "posix_getpgid__doc__", scope: !0, file: !1, line: 6383, type: !3517, isLocal: true, isDefinition: true, variable: [54 x i8]* @posix_getpgid__doc__)
!3517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 432, align: 8, elements: !3518)
!3518 = !{!3519}
!3519 = !DISubrange(count: 54)
!3520 = !DIGlobalVariable(name: "posix_setpgrp__doc__", scope: !0, file: !1, line: 6419, type: !3475, isLocal: true, isDefinition: true, variable: [55 x i8]* @posix_setpgrp__doc__)
!3521 = !DIGlobalVariable(name: "posix_wait__doc__", scope: !0, file: !1, line: 7043, type: !1467, isLocal: true, isDefinition: true, variable: [65 x i8]* @posix_wait__doc__)
!3522 = !DIGlobalVariable(name: "struct_rusage", scope: !2203, file: !1, line: 6837, type: !276, isLocal: true, isDefinition: true, variable: %struct._object** @wait_helper.struct_rusage)
!3523 = !DIGlobalVariable(name: "PyId_struct_rusage", scope: !2203, file: !1, line: 6838, type: !3524, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @wait_helper.PyId_struct_rusage)
!3524 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Py_Identifier", file: !278, line: 144, baseType: !3525)
!3525 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Py_Identifier", file: !278, line: 140, size: 192, align: 64, elements: !3526)
!3526 = !{!3527, !3529, !3530}
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3525, file: !278, line: 141, baseType: !3528, size: 64, align: 64)
!3528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3525, size: 64, align: 64)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !3525, file: !278, line: 142, baseType: !299, size: 64, align: 64, offset: 64)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !3525, file: !278, line: 143, baseType: !276, size: 64, align: 64, offset: 128)
!3531 = !DIGlobalVariable(name: "posix_wait3__doc__", scope: !0, file: !1, line: 6894, type: !3532, isLocal: true, isDefinition: true, variable: [81 x i8]* @posix_wait3__doc__)
!3532 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 648, align: 8, elements: !3533)
!3533 = !{!3534}
!3534 = !DISubrange(count: 81)
!3535 = !DIGlobalVariable(name: "posix_wait4__doc__", scope: !0, file: !1, line: 6919, type: !3536, isLocal: true, isDefinition: true, variable: [92 x i8]* @posix_wait4__doc__)
!3536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 736, align: 8, elements: !3537)
!3537 = !{!3538}
!3538 = !DISubrange(count: 92)
!3539 = !DIGlobalVariable(name: "posix_waitid__doc__", scope: !0, file: !1, line: 6944, type: !3540, isLocal: true, isDefinition: true, variable: [424 x i8]* @posix_waitid__doc__)
!3540 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 3392, align: 8, elements: !3541)
!3541 = !{!3542}
!3542 = !DISubrange(count: 424)
!3543 = !DIGlobalVariable(name: "posix_waitpid__doc__", scope: !0, file: !1, line: 6993, type: !3305, isLocal: true, isDefinition: true, variable: [86 x i8]* @posix_waitpid__doc__)
!3544 = !DIGlobalVariable(name: "posix_getsid__doc__", scope: !0, file: !1, line: 7586, type: !3545, isLocal: true, isDefinition: true, variable: [51 x i8]* @posix_getsid__doc__)
!3545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 408, align: 8, elements: !3546)
!3546 = !{!3547}
!3547 = !DISubrange(count: 51)
!3548 = !DIGlobalVariable(name: "posix_setsid__doc__", scope: !0, file: !1, line: 7606, type: !3549, isLocal: true, isDefinition: true, variable: [41 x i8]* @posix_setsid__doc__)
!3549 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 328, align: 8, elements: !3550)
!3550 = !{!3551}
!3551 = !DISubrange(count: 41)
!3552 = !DIGlobalVariable(name: "posix_setpgid__doc__", scope: !0, file: !1, line: 7621, type: !3479, isLocal: true, isDefinition: true, variable: [52 x i8]* @posix_setpgid__doc__)
!3553 = !DIGlobalVariable(name: "posix_tcgetpgrp__doc__", scope: !0, file: !1, line: 7641, type: !3536, isLocal: true, isDefinition: true, variable: [92 x i8]* @posix_tcgetpgrp__doc__)
!3554 = !DIGlobalVariable(name: "posix_tcsetpgrp__doc__", scope: !0, file: !1, line: 7661, type: !3555, isLocal: true, isDefinition: true, variable: [87 x i8]* @posix_tcsetpgrp__doc__)
!3555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 696, align: 8, elements: !3556)
!3556 = !{!3557}
!3557 = !DISubrange(count: 87)
!3558 = !DIGlobalVariable(name: "keywords", scope: !2346, file: !1, line: 7703, type: !3272, isLocal: true, isDefinition: true, variable: [5 x i8*]* @posix_open.keywords)
!3559 = !DIGlobalVariable(name: "posix_open__doc__", scope: !0, file: !1, line: 7685, type: !3560, isLocal: true, isDefinition: true, variable: [379 x i8]* @posix_open__doc__)
!3560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 3032, align: 8, elements: !3561)
!3561 = !{!3562}
!3562 = !DISubrange(count: 379)
!3563 = !DIGlobalVariable(name: "posix_close__doc__", scope: !0, file: !1, line: 7762, type: !3475, isLocal: true, isDefinition: true, variable: [55 x i8]* @posix_close__doc__)
!3564 = !DIGlobalVariable(name: "posix_closerange__doc__", scope: !0, file: !1, line: 7788, type: !3334, isLocal: true, isDefinition: true, variable: [96 x i8]* @posix_closerange__doc__)
!3565 = !DIGlobalVariable(name: "device_encoding__doc__", scope: !0, file: !1, line: 10485, type: !3566, isLocal: true, isDefinition: true, variable: [129 x i8]* @device_encoding__doc__)
!3566 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 1032, align: 8, elements: !3567)
!3567 = !{!3568}
!3568 = !DISubrange(count: 129)
!3569 = !DIGlobalVariable(name: "posix_dup__doc__", scope: !0, file: !1, line: 7807, type: !3570, isLocal: true, isDefinition: true, variable: [57 x i8]* @posix_dup__doc__)
!3570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 456, align: 8, elements: !3571)
!3571 = !{!3572}
!3572 = !DISubrange(count: 57)
!3573 = !DIGlobalVariable(name: "keywords", scope: !2387, file: !1, line: 7834, type: !3248, isLocal: true, isDefinition: true, variable: [4 x i8*]* @posix_dup2.keywords)
!3574 = !DIGlobalVariable(name: "posix_dup2__doc__", scope: !0, file: !1, line: 7827, type: !3505, isLocal: true, isDefinition: true, variable: [49 x i8]* @posix_dup2__doc__)
!3575 = !DIGlobalVariable(name: "posix_lockf__doc__", scope: !0, file: !1, line: 7913, type: !3576, isLocal: true, isDefinition: true, variable: [241 x i8]* @posix_lockf__doc__)
!3576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 1928, align: 8, elements: !3577)
!3577 = !{!3578}
!3578 = !DISubrange(count: 241)
!3579 = !DIGlobalVariable(name: "posix_lseek__doc__", scope: !0, file: !1, line: 7942, type: !3580, isLocal: true, isDefinition: true, variable: [148 x i8]* @posix_lseek__doc__)
!3580 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 1184, align: 8, elements: !3581)
!3581 = !{!3582}
!3582 = !DISubrange(count: 148)
!3583 = !DIGlobalVariable(name: "posix_read__doc__", scope: !0, file: !1, line: 7996, type: !3475, isLocal: true, isDefinition: true, variable: [55 x i8]* @posix_read__doc__)
!3584 = !DIGlobalVariable(name: "posix_readv__doc__", scope: !0, file: !1, line: 8090, type: !3585, isLocal: true, isDefinition: true, variable: [373 x i8]* @posix_readv__doc__)
!3585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 2984, align: 8, elements: !3586)
!3586 = !{!3587}
!3587 = !DISubrange(count: 373)
!3588 = !DIGlobalVariable(name: "posix_pread__doc__", scope: !0, file: !1, line: 8133, type: !3589, isLocal: true, isDefinition: true, variable: [181 x i8]* @posix_pread__doc__)
!3589 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 1448, align: 8, elements: !3590)
!3590 = !{!3591}
!3591 = !DISubrange(count: 181)
!3592 = !DIGlobalVariable(name: "posix_write__doc__", scope: !0, file: !1, line: 8172, type: !3459, isLocal: true, isDefinition: true, variable: [67 x i8]* @posix_write__doc__)
!3593 = !DIGlobalVariable(name: "posix_writev__doc__", scope: !0, file: !1, line: 8489, type: !3240, isLocal: true, isDefinition: true, variable: [259 x i8]* @posix_writev__doc__)
!3594 = !DIGlobalVariable(name: "posix_pwrite__doc__", scope: !0, file: !1, line: 8530, type: !3595, isLocal: true, isDefinition: true, variable: [131 x i8]* @posix_pwrite__doc__)
!3595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 1048, align: 8, elements: !3596)
!3596 = !{!3597}
!3597 = !DISubrange(count: 131)
!3598 = !DIGlobalVariable(name: "keywords", scope: !2536, file: !1, line: 8318, type: !3272, isLocal: true, isDefinition: true, variable: [5 x i8*]* @posix_sendfile.keywords)
!3599 = !DIGlobalVariable(name: "posix_sendfile__doc__", scope: !0, file: !1, line: 8206, type: !3600, isLocal: true, isDefinition: true, variable: [216 x i8]* @posix_sendfile__doc__)
!3600 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 1728, align: 8, elements: !3601)
!3601 = !{!3602}
!3602 = !DISubrange(count: 216)
!3603 = !DIGlobalVariable(name: "posix_fstat__doc__", scope: !0, file: !1, line: 8345, type: !3404, isLocal: true, isDefinition: true, variable: [99 x i8]* @posix_fstat__doc__)
!3604 = !DIGlobalVariable(name: "posix_isatty__doc__", scope: !0, file: !1, line: 8372, type: !3566, isLocal: true, isDefinition: true, variable: [129 x i8]* @posix_isatty__doc__)
!3605 = !DIGlobalVariable(name: "posix_pipe__doc__", scope: !0, file: !1, line: 8389, type: !3488, isLocal: true, isDefinition: true, variable: [48 x i8]* @posix_pipe__doc__)
!3606 = !DIGlobalVariable(name: "posix_pipe2__doc__", scope: !0, file: !1, line: 8463, type: !3607, isLocal: true, isDefinition: true, variable: [176 x i8]* @posix_pipe2__doc__)
!3607 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 1408, align: 8, elements: !3608)
!3608 = !{!3609}
!3609 = !DISubrange(count: 176)
!3610 = !DIGlobalVariable(name: "keywords", scope: !2587, file: !1, line: 8578, type: !3248, isLocal: true, isDefinition: true, variable: [4 x i8*]* @posix_mkfifo.keywords)
!3611 = !DIGlobalVariable(name: "posix_mkfifo__doc__", scope: !0, file: !1, line: 8561, type: !3612, isLocal: true, isDefinition: true, variable: [346 x i8]* @posix_mkfifo__doc__)
!3612 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 2768, align: 8, elements: !3613)
!3613 = !{!3614}
!3614 = !DISubrange(count: 346)
!3615 = !DIGlobalVariable(name: "keywords", scope: !2599, file: !1, line: 8640, type: !3272, isLocal: true, isDefinition: true, variable: [5 x i8*]* @posix_mknod.keywords)
!3616 = !DIGlobalVariable(name: "posix_mknod__doc__", scope: !0, file: !1, line: 8616, type: !3617, isLocal: true, isDefinition: true, variable: [699 x i8]* @posix_mknod__doc__)
!3617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 5592, align: 8, elements: !3618)
!3618 = !{!3619}
!3619 = !DISubrange(count: 699)
!3620 = !DIGlobalVariable(name: "posix_major__doc__", scope: !0, file: !1, line: 8678, type: !3555, isLocal: true, isDefinition: true, variable: [87 x i8]* @posix_major__doc__)
!3621 = !DIGlobalVariable(name: "posix_minor__doc__", scope: !0, file: !1, line: 8691, type: !3555, isLocal: true, isDefinition: true, variable: [87 x i8]* @posix_minor__doc__)
!3622 = !DIGlobalVariable(name: "posix_makedev__doc__", scope: !0, file: !1, line: 8704, type: !3623, isLocal: true, isDefinition: true, variable: [109 x i8]* @posix_makedev__doc__)
!3623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 872, align: 8, elements: !3624)
!3624 = !{!3625}
!3625 = !DISubrange(count: 109)
!3626 = !DIGlobalVariable(name: "posix_ftruncate__doc__", scope: !0, file: !1, line: 8720, type: !3627, isLocal: true, isDefinition: true, variable: [62 x i8]* @posix_ftruncate__doc__)
!3627 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 496, align: 8, elements: !3628)
!3628 = !{!3629}
!3629 = !DISubrange(count: 62)
!3630 = !DIGlobalVariable(name: "keywords", scope: !2667, file: !1, line: 8758, type: !3323, isLocal: true, isDefinition: true, variable: [3 x i8*]* @posix_truncate.keywords)
!3631 = !DIGlobalVariable(name: "posix_truncate__doc__", scope: !0, file: !1, line: 8745, type: !3632, isLocal: true, isDefinition: true, variable: [217 x i8]* @posix_truncate__doc__)
!3632 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 1736, align: 8, elements: !3633)
!3633 = !{!3634}
!3634 = !DISubrange(count: 217)
!3635 = !DIGlobalVariable(name: "posix_posix_fallocate__doc__", scope: !0, file: !1, line: 8790, type: !3636, isLocal: true, isDefinition: true, variable: [158 x i8]* @posix_posix_fallocate__doc__)
!3636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 1264, align: 8, elements: !3637)
!3637 = !{!3638}
!3638 = !DISubrange(count: 158)
!3639 = !DIGlobalVariable(name: "posix_posix_fadvise__doc__", scope: !0, file: !1, line: 8817, type: !3640, isLocal: true, isDefinition: true, variable: [400 x i8]* @posix_posix_fadvise__doc__)
!3640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 3200, align: 8, elements: !3641)
!3641 = !{!3642}
!3642 = !DISubrange(count: 400)
!3643 = !DIGlobalVariable(name: "posix_putenv__doc__", scope: !0, file: !1, line: 8849, type: !3492, isLocal: true, isDefinition: true, variable: [59 x i8]* @posix_putenv__doc__)
!3644 = !DIGlobalVariable(name: "posix_unsetenv__doc__", scope: !0, file: !1, line: 8944, type: !3433, isLocal: true, isDefinition: true, variable: [47 x i8]* @posix_unsetenv__doc__)
!3645 = !DIGlobalVariable(name: "posix_strerror__doc__", scope: !0, file: !1, line: 8985, type: !3646, isLocal: true, isDefinition: true, variable: [71 x i8]* @posix_strerror__doc__)
!3646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 568, align: 8, elements: !3647)
!3647 = !{!3648}
!3648 = !DISubrange(count: 71)
!3649 = !DIGlobalVariable(name: "posix_fchdir__doc__", scope: !0, file: !1, line: 2871, type: !3650, isLocal: true, isDefinition: true, variable: [142 x i8]* @posix_fchdir__doc__)
!3650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 1136, align: 8, elements: !3651)
!3651 = !{!3652}
!3652 = !DISubrange(count: 142)
!3653 = !DIGlobalVariable(name: "posix_fsync__doc__", scope: !0, file: !1, line: 3183, type: !3509, isLocal: true, isDefinition: true, variable: [64 x i8]* @posix_fsync__doc__)
!3654 = !DIGlobalVariable(name: "posix_sync__doc__", scope: !0, file: !1, line: 3195, type: !3655, isLocal: true, isDefinition: true, variable: [43 x i8]* @posix_sync__doc__)
!3655 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 344, align: 8, elements: !3656)
!3656 = !{!3657}
!3657 = !DISubrange(count: 43)
!3658 = !DIGlobalVariable(name: "posix_fdatasync__doc__", scope: !0, file: !1, line: 3215, type: !3659, isLocal: true, isDefinition: true, variable: [104 x i8]* @posix_fdatasync__doc__)
!3659 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 832, align: 8, elements: !3660)
!3660 = !{!3661}
!3661 = !DISubrange(count: 104)
!3662 = !DIGlobalVariable(name: "posix_WCOREDUMP__doc__", scope: !0, file: !1, line: 9009, type: !3663, isLocal: true, isDefinition: true, variable: [100 x i8]* @posix_WCOREDUMP__doc__)
!3663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 800, align: 8, elements: !3664)
!3664 = !{!3665}
!3665 = !DISubrange(count: 100)
!3666 = !DIGlobalVariable(name: "posix_WIFCONTINUED__doc__", scope: !0, file: !1, line: 9027, type: !3667, isLocal: true, isDefinition: true, variable: [115 x i8]* @posix_WIFCONTINUED__doc__)
!3667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 920, align: 8, elements: !3668)
!3668 = !{!3669}
!3669 = !DISubrange(count: 115)
!3670 = !DIGlobalVariable(name: "posix_WIFSTOPPED__doc__", scope: !0, file: !1, line: 9046, type: !3555, isLocal: true, isDefinition: true, variable: [87 x i8]* @posix_WIFSTOPPED__doc__)
!3671 = !DIGlobalVariable(name: "posix_WIFSIGNALED__doc__", scope: !0, file: !1, line: 9064, type: !3672, isLocal: true, isDefinition: true, variable: [103 x i8]* @posix_WIFSIGNALED__doc__)
!3672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 824, align: 8, elements: !3673)
!3673 = !{!3674}
!3674 = !DISubrange(count: 103)
!3675 = !DIGlobalVariable(name: "posix_WIFEXITED__doc__", scope: !0, file: !1, line: 9082, type: !3676, isLocal: true, isDefinition: true, variable: [110 x i8]* @posix_WIFEXITED__doc__)
!3676 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 880, align: 8, elements: !3677)
!3677 = !{!3678}
!3678 = !DISubrange(count: 110)
!3679 = !DIGlobalVariable(name: "posix_WEXITSTATUS__doc__", scope: !0, file: !1, line: 9101, type: !3338, isLocal: true, isDefinition: true, variable: [78 x i8]* @posix_WEXITSTATUS__doc__)
!3680 = !DIGlobalVariable(name: "posix_WTERMSIG__doc__", scope: !0, file: !1, line: 9119, type: !3623, isLocal: true, isDefinition: true, variable: [109 x i8]* @posix_WTERMSIG__doc__)
!3681 = !DIGlobalVariable(name: "posix_WSTOPSIG__doc__", scope: !0, file: !1, line: 9138, type: !3682, isLocal: true, isDefinition: true, variable: [106 x i8]* @posix_WSTOPSIG__doc__)
!3682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 848, align: 8, elements: !3683)
!3683 = !{!3684}
!3684 = !DISubrange(count: 106)
!3685 = !DIGlobalVariable(name: "posix_fstatvfs__doc__", scope: !0, file: !1, line: 9210, type: !3686, isLocal: true, isDefinition: true, variable: [108 x i8]* @posix_fstatvfs__doc__)
!3686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 864, align: 8, elements: !3687)
!3687 = !{!3688}
!3688 = !DISubrange(count: 108)
!3689 = !DIGlobalVariable(name: "keywords", scope: !2851, file: !1, line: 9248, type: !3266, isLocal: true, isDefinition: true, variable: [2 x i8*]* @posix_statvfs.keywords)
!3690 = !DIGlobalVariable(name: "posix_statvfs__doc__", scope: !0, file: !1, line: 9237, type: !3691, isLocal: true, isDefinition: true, variable: [251 x i8]* @posix_statvfs__doc__)
!3691 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 2008, align: 8, elements: !3692)
!3692 = !{!3693}
!3693 = !DISubrange(count: 251)
!3694 = !DIGlobalVariable(name: "posix_constants_confstr", scope: !0, file: !1, line: 9551, type: !3695, isLocal: true, isDefinition: true, variable: [27 x %struct.constdef]* @posix_constants_confstr)
!3695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !680, size: 3456, align: 64, elements: !3696)
!3696 = !{!3697}
!3697 = !DISubrange(count: 27)
!3698 = !DIGlobalVariable(name: "posix_confstr__doc__", scope: !0, file: !1, line: 9712, type: !3699, isLocal: true, isDefinition: true, variable: [79 x i8]* @posix_confstr__doc__)
!3699 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 632, align: 8, elements: !3700)
!3700 = !{!3701}
!3701 = !DISubrange(count: 79)
!3702 = !DIGlobalVariable(name: "posix_constants_sysconf", scope: !0, file: !1, line: 9755, type: !3703, isLocal: true, isDefinition: true, variable: [134 x %struct.constdef]* @posix_constants_sysconf)
!3703 = !DICompositeType(tag: DW_TAG_array_type, baseType: !680, size: 17152, align: 64, elements: !3704)
!3704 = !{!3705}
!3705 = !DISubrange(count: 134)
!3706 = !DIGlobalVariable(name: "posix_sysconf__doc__", scope: !0, file: !1, line: 10258, type: !3408, isLocal: true, isDefinition: true, variable: [82 x i8]* @posix_sysconf__doc__)
!3707 = !DIGlobalVariable(name: "posix_constants_pathconf", scope: !0, file: !1, line: 9378, type: !3708, isLocal: true, isDefinition: true, variable: [20 x %struct.constdef]* @posix_constants_pathconf)
!3708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !680, size: 2560, align: 64, elements: !370)
!3709 = !DIGlobalVariable(name: "posix_fpathconf__doc__", scope: !0, file: !1, line: 9475, type: !3566, isLocal: true, isDefinition: true, variable: [129 x i8]* @posix_fpathconf__doc__)
!3710 = !DIGlobalVariable(name: "keywords", scope: !2929, file: !1, line: 9516, type: !3323, isLocal: true, isDefinition: true, variable: [3 x i8*]* @posix_pathconf.keywords)
!3711 = !DIGlobalVariable(name: "posix_pathconf__doc__", scope: !0, file: !1, line: 9503, type: !3712, isLocal: true, isDefinition: true, variable: [278 x i8]* @posix_pathconf__doc__)
!3712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 2224, align: 8, elements: !3713)
!3713 = !{!3714}
!3714 = !DISubrange(count: 278)
!3715 = !DIGlobalVariable(name: "posix_abort__doc__", scope: !0, file: !1, line: 10357, type: !3716, isLocal: true, isDefinition: true, variable: [163 x i8]* @posix_abort__doc__)
!3716 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 1304, align: 8, elements: !3717)
!3717 = !{!3718}
!3718 = !DISubrange(count: 163)
!3719 = !DIGlobalVariable(name: "posix_getloadavg__doc__", scope: !0, file: !1, line: 10467, type: !3720, isLocal: true, isDefinition: true, variable: [193 x i8]* @posix_getloadavg__doc__)
!3720 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 1544, align: 8, elements: !3721)
!3721 = !{!3722}
!3722 = !DISubrange(count: 193)
!3723 = !DIGlobalVariable(name: "posix_urandom__doc__", scope: !0, file: !1, line: 10885, type: !3724, isLocal: true, isDefinition: true, variable: [73 x i8]* @posix_urandom__doc__)
!3724 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 584, align: 8, elements: !3725)
!3725 = !{!3726}
!3726 = !DISubrange(count: 73)
!3727 = !DIGlobalVariable(name: "posix_setresuid__doc__", scope: !0, file: !1, line: 10502, type: !3536, isLocal: true, isDefinition: true, variable: [92 x i8]* @posix_setresuid__doc__)
!3728 = !DIGlobalVariable(name: "posix_setresgid__doc__", scope: !0, file: !1, line: 10523, type: !3729, isLocal: true, isDefinition: true, variable: [93 x i8]* @posix_setresgid__doc__)
!3729 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 744, align: 8, elements: !3730)
!3730 = !{!3731}
!3731 = !DISubrange(count: 93)
!3732 = !DIGlobalVariable(name: "posix_getresuid__doc__", scope: !0, file: !1, line: 10543, type: !3733, isLocal: true, isDefinition: true, variable: [107 x i8]* @posix_getresuid__doc__)
!3733 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 856, align: 8, elements: !3734)
!3734 = !{!3735}
!3735 = !DISubrange(count: 107)
!3736 = !DIGlobalVariable(name: "posix_getresgid__doc__", scope: !0, file: !1, line: 10560, type: !3686, isLocal: true, isDefinition: true, variable: [108 x i8]* @posix_getresgid__doc__)
!3737 = !DIGlobalVariable(name: "keywords", scope: !2989, file: !1, line: 10674, type: !1531, isLocal: true, isDefinition: true, variable: [6 x i8*]* @posix_setxattr.keywords)
!3738 = !DIGlobalVariable(name: "posix_setxattr__doc__", scope: !0, file: !1, line: 10656, type: !3739, isLocal: true, isDefinition: true, variable: [347 x i8]* @posix_setxattr__doc__)
!3739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 2776, align: 8, elements: !3740)
!3740 = !{!3741}
!3741 = !DISubrange(count: 347)
!3742 = !DIGlobalVariable(name: "keywords", scope: !3003, file: !1, line: 10595, type: !3248, isLocal: true, isDefinition: true, variable: [4 x i8*]* @posix_getxattr.keywords)
!3743 = !DIGlobalVariable(name: "buffer_sizes", scope: !3003, file: !1, line: 10614, type: !3744, isLocal: true, isDefinition: true)
!3744 = !DICompositeType(tag: DW_TAG_array_type, baseType: !282, size: 192, align: 64, elements: !865)
!3745 = !DIGlobalVariable(name: "posix_getxattr__doc__", scope: !0, file: !1, line: 10578, type: !3746, isLocal: true, isDefinition: true, variable: [349 x i8]* @posix_getxattr__doc__)
!3746 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 2792, align: 8, elements: !3747)
!3747 = !{!3748}
!3748 = !DISubrange(count: 349)
!3749 = !DIGlobalVariable(name: "keywords", scope: !3025, file: !1, line: 10737, type: !3248, isLocal: true, isDefinition: true, variable: [4 x i8*]* @posix_removexattr.keywords)
!3750 = !DIGlobalVariable(name: "posix_removexattr__doc__", scope: !0, file: !1, line: 10721, type: !3751, isLocal: true, isDefinition: true, variable: [331 x i8]* @posix_removexattr__doc__)
!3751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 2648, align: 8, elements: !3752)
!3752 = !{!3753}
!3753 = !DISubrange(count: 331)
!3754 = !DIGlobalVariable(name: "keywords", scope: !3037, file: !1, line: 10797, type: !3323, isLocal: true, isDefinition: true, variable: [3 x i8*]* @posix_listxattr.keywords)
!3755 = !DIGlobalVariable(name: "buffer_sizes", scope: !3037, file: !1, line: 10815, type: !3744, isLocal: true, isDefinition: true)
!3756 = !DIGlobalVariable(name: "posix_listxattr__doc__", scope: !0, file: !1, line: 10778, type: !3757, isLocal: true, isDefinition: true, variable: [393 x i8]* @posix_listxattr__doc__)
!3757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 3144, align: 8, elements: !3758)
!3758 = !{!3759}
!3759 = !DISubrange(count: 393)
!3760 = !DIGlobalVariable(name: "termsize__doc__", scope: !0, file: !1, line: 10936, type: !3761, isLocal: true, isDefinition: true, variable: [467 x i8]* @termsize__doc__)
!3761 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 3736, align: 8, elements: !3762)
!3762 = !{!3763}
!3763 = !DISubrange(count: 467)
!3764 = !DIGlobalVariable(name: "posix_cpu_count__doc__", scope: !0, file: !1, line: 11021, type: !3676, isLocal: true, isDefinition: true, variable: [110 x i8]* @posix_cpu_count__doc__)
!3765 = !DIGlobalVariable(name: "get_inheritable__doc__", scope: !0, file: !1, line: 11056, type: !3394, isLocal: true, isDefinition: true, variable: [89 x i8]* @get_inheritable__doc__)
!3766 = !DIGlobalVariable(name: "set_inheritable__doc__", scope: !0, file: !1, line: 11079, type: !3729, isLocal: true, isDefinition: true, variable: [93 x i8]* @set_inheritable__doc__)
!3767 = !DIGlobalVariable(name: "waitid_result_desc", scope: !0, file: !1, line: 2087, type: !3768, isLocal: true, isDefinition: true, variable: %struct.PyStructSequence_Desc* @waitid_result_desc)
!3768 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyStructSequence_Desc", file: !686, line: 20, baseType: !3769)
!3769 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyStructSequence_Desc", file: !686, line: 15, size: 256, align: 64, elements: !3770)
!3770 = !{!3771, !3772, !3773, !3779}
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3769, file: !686, line: 16, baseType: !322, size: 64, align: 64)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !3769, file: !686, line: 17, baseType: !322, size: 64, align: 64, offset: 64)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "fields", scope: !3769, file: !686, line: 18, baseType: !3774, size: 64, align: 64, offset: 128)
!3774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3775, size: 64, align: 64)
!3775 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyStructSequence_Field", file: !686, line: 10, size: 128, align: 64, elements: !3776)
!3776 = !{!3777, !3778}
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3775, file: !686, line: 11, baseType: !322, size: 64, align: 64)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !3775, file: !686, line: 12, baseType: !322, size: 64, align: 64, offset: 64)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "n_in_sequence", scope: !3769, file: !686, line: 19, baseType: !314, size: 32, align: 32, offset: 192)
!3780 = !DIGlobalVariable(name: "waitid_result__doc__", scope: !0, file: !1, line: 2070, type: !3781, isLocal: true, isDefinition: true, variable: [221 x i8]* @waitid_result__doc__)
!3781 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 1768, align: 8, elements: !3782)
!3782 = !{!3783}
!3783 = !DISubrange(count: 221)
!3784 = !DIGlobalVariable(name: "waitid_result_fields", scope: !0, file: !1, line: 2078, type: !3785, isLocal: true, isDefinition: true, variable: [6 x %struct.PyStructSequence_Field]* @waitid_result_fields)
!3785 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3786, size: 768, align: 64, elements: !1532)
!3786 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyStructSequence_Field", file: !686, line: 13, baseType: !3775)
!3787 = !DIGlobalVariable(name: "stat_result_desc", scope: !0, file: !1, line: 2033, type: !3768, isLocal: true, isDefinition: true, variable: %struct.PyStructSequence_Desc* @stat_result_desc)
!3788 = !DIGlobalVariable(name: "stat_result__doc__", scope: !0, file: !1, line: 1947, type: !3789, isLocal: true, isDefinition: true, variable: [398 x i8]* @stat_result__doc__)
!3789 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 3184, align: 8, elements: !3790)
!3790 = !{!3791}
!3791 = !DISubrange(count: 398)
!3792 = !DIGlobalVariable(name: "stat_result_fields", scope: !0, file: !1, line: 1958, type: !3793, isLocal: true, isDefinition: true, variable: [20 x %struct.PyStructSequence_Field]* @stat_result_fields)
!3793 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3786, size: 2560, align: 64, elements: !370)
!3794 = !DIGlobalVariable(name: "statvfs_result_desc", scope: !0, file: !1, line: 2062, type: !3768, isLocal: true, isDefinition: true, variable: %struct.PyStructSequence_Desc* @statvfs_result_desc)
!3795 = !DIGlobalVariable(name: "statvfs_result__doc__", scope: !0, file: !1, line: 2040, type: !3796, isLocal: true, isDefinition: true, variable: [287 x i8]* @statvfs_result__doc__)
!3796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 2296, align: 8, elements: !3797)
!3797 = !{!3798}
!3798 = !DISubrange(count: 287)
!3799 = !DIGlobalVariable(name: "statvfs_result_fields", scope: !0, file: !1, line: 2048, type: !3800, isLocal: true, isDefinition: true, variable: [11 x %struct.PyStructSequence_Field]* @statvfs_result_fields)
!3800 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3786, size: 1408, align: 64, elements: !3801)
!3801 = !{!3802}
!3802 = !DISubrange(count: 11)
!3803 = !DIGlobalVariable(name: "ticks_per_second", scope: !0, file: !1, line: 7563, type: !287, isLocal: true, isDefinition: true, variable: i64* @ticks_per_second)
!3804 = !DIGlobalVariable(name: "sched_param_desc", scope: !0, file: !1, line: 5645, type: !3768, isLocal: true, isDefinition: true, variable: %struct.PyStructSequence_Desc* @sched_param_desc)
!3805 = !DIGlobalVariable(name: "sched_param__doc__", scope: !0, file: !1, line: 5636, type: !3806, isLocal: true, isDefinition: true, variable: [97 x i8]* @sched_param__doc__)
!3806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 776, align: 8, elements: !3807)
!3807 = !{!3808}
!3808 = !DISubrange(count: 97)
!3809 = !DIGlobalVariable(name: "sched_param_fields", scope: !0, file: !1, line: 5640, type: !3810, isLocal: true, isDefinition: true, variable: [2 x %struct.PyStructSequence_Field]* @sched_param_fields)
!3810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3786, size: 256, align: 64, elements: !1578)
!3811 = !DIGlobalVariable(name: "kwlist", scope: !3190, file: !1, line: 5624, type: !3266, isLocal: true, isDefinition: true, variable: [2 x i8*]* @sched_param_new.kwlist)
!3812 = !DIGlobalVariable(name: "TerminalSize_desc", scope: !0, file: !1, line: 10928, type: !3768, isLocal: true, isDefinition: true, variable: %struct.PyStructSequence_Desc* @TerminalSize_desc)
!3813 = !DIGlobalVariable(name: "TerminalSize_docstring", scope: !0, file: !1, line: 10919, type: !3814, isLocal: true, isDefinition: true, variable: [61 x i8]* @TerminalSize_docstring)
!3814 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 488, align: 8, elements: !3815)
!3815 = !{!3816}
!3816 = !DISubrange(count: 61)
!3817 = !DIGlobalVariable(name: "TerminalSize_fields", scope: !0, file: !1, line: 10922, type: !3818, isLocal: true, isDefinition: true, variable: [3 x %struct.PyStructSequence_Field]* @TerminalSize_fields)
!3818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3786, size: 384, align: 64, elements: !865)
!3819 = !DIGlobalVariable(name: "times_result_desc", scope: !0, file: !1, line: 7488, type: !3768, isLocal: true, isDefinition: true, variable: %struct.PyStructSequence_Desc* @times_result_desc)
!3820 = !DIGlobalVariable(name: "times_result__doc__", scope: !0, file: !1, line: 7479, type: !3821, isLocal: true, isDefinition: true, variable: [264 x i8]* @times_result__doc__)
!3821 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 2112, align: 8, elements: !3822)
!3822 = !{!3823}
!3823 = !DISubrange(count: 264)
!3824 = !DIGlobalVariable(name: "times_result_fields", scope: !0, file: !1, line: 7470, type: !3785, isLocal: true, isDefinition: true, variable: [6 x %struct.PyStructSequence_Field]* @times_result_fields)
!3825 = !DIGlobalVariable(name: "uname_result_desc", scope: !0, file: !1, line: 4601, type: !3768, isLocal: true, isDefinition: true, variable: %struct.PyStructSequence_Desc* @uname_result_desc)
!3826 = !DIGlobalVariable(name: "uname_result__doc__", scope: !0, file: !1, line: 4593, type: !3827, isLocal: true, isDefinition: true, variable: [246 x i8]* @uname_result__doc__)
!3827 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 1968, align: 8, elements: !3828)
!3828 = !{!3829}
!3829 = !DISubrange(count: 246)
!3830 = !DIGlobalVariable(name: "uname_result_fields", scope: !0, file: !1, line: 4584, type: !3785, isLocal: true, isDefinition: true, variable: [6 x %struct.PyStructSequence_Field]* @uname_result_fields)
!3831 = !DIGlobalVariable(name: "billion", scope: !0, file: !1, line: 2156, type: !276, isLocal: true, isDefinition: true, variable: %struct._object** @billion)
!3832 = !DIGlobalVariable(name: "have_functions", scope: !0, file: !1, line: 12077, type: !3833, isLocal: true, isDefinition: true, variable: [29 x i8*]* @have_functions)
!3833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !322, size: 1856, align: 64, elements: !3834)
!3834 = !{!3835}
!3835 = !DISubrange(count: 29)
!3836 = !{i32 2, !"Dwarf Version", i32 4}
!3837 = !{i32 2, !"Debug Info Version", i32 3}
!3838 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
!3839 = !DIExpression()
!3840 = !DILocation(line: 396, column: 23, scope: !689)
!3841 = !DILocation(line: 398, column: 13, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !689, file: !1, line: 398, column: 9)
!3843 = !DILocation(line: 398, column: 9, scope: !689)
!3844 = !DILocation(line: 399, column: 16, scope: !3842)
!3845 = !DILocation(line: 399, column: 9, scope: !3842)
!3846 = !DILocation(line: 400, column: 36, scope: !689)
!3847 = !DILocation(line: 400, column: 12, scope: !689)
!3848 = !DILocation(line: 400, column: 5, scope: !689)
!3849 = !DILocation(line: 401, column: 1, scope: !689)
!3850 = !DILocation(line: 404, column: 23, scope: !694)
!3851 = !DILocation(line: 406, column: 13, scope: !3852)
!3852 = distinct !DILexicalBlock(scope: !694, file: !1, line: 406, column: 9)
!3853 = !DILocation(line: 406, column: 9, scope: !694)
!3854 = !DILocation(line: 407, column: 16, scope: !3852)
!3855 = !DILocation(line: 407, column: 9, scope: !3852)
!3856 = !DILocation(line: 408, column: 36, scope: !694)
!3857 = !DILocation(line: 408, column: 12, scope: !694)
!3858 = !DILocation(line: 408, column: 5, scope: !694)
!3859 = !DILocation(line: 409, column: 1, scope: !694)
!3860 = !DILocation(line: 412, column: 29, scope: !699)
!3861 = !DILocation(line: 412, column: 40, scope: !699)
!3862 = !DILocation(line: 416, column: 5, scope: !699)
!3863 = !DILocation(line: 420, column: 13, scope: !699)
!3864 = !DILocation(line: 415, column: 15, scope: !699)
!3865 = !DILocation(line: 421, column: 15, scope: !3866)
!3866 = distinct !DILexicalBlock(scope: !699, file: !1, line: 421, column: 9)
!3867 = !DILocation(line: 421, column: 9, scope: !699)
!3868 = !DILocation(line: 422, column: 22, scope: !3869)
!3869 = distinct !DILexicalBlock(scope: !3866, file: !1, line: 421, column: 24)
!3870 = !{!3871, !3871, i64 0}
!3871 = !{!"any pointer", !3872, i64 0}
!3872 = !{!"omnipotent char", !3873, i64 0}
!3873 = !{!"Simple C/C++ TBAA"}
!3874 = !DILocation(line: 424, column: 22, scope: !3869)
!3875 = !{!3876, !3871, i64 8}
!3876 = !{!"_object", !3877, i64 0, !3871, i64 8}
!3877 = !{!"long", !3872, i64 0}
!3878 = !DILocation(line: 424, column: 36, scope: !3869)
!3879 = !{!3880, !3871, i64 24}
!3880 = !{!"_typeobject", !3881, i64 0, !3871, i64 24, !3877, i64 32, !3877, i64 40, !3871, i64 48, !3871, i64 56, !3871, i64 64, !3871, i64 72, !3871, i64 80, !3871, i64 88, !3871, i64 96, !3871, i64 104, !3871, i64 112, !3871, i64 120, !3871, i64 128, !3871, i64 136, !3871, i64 144, !3871, i64 152, !3871, i64 160, !3877, i64 168, !3871, i64 176, !3871, i64 184, !3871, i64 192, !3871, i64 200, !3877, i64 208, !3871, i64 216, !3871, i64 224, !3871, i64 232, !3871, i64 240, !3871, i64 248, !3871, i64 256, !3871, i64 264, !3871, i64 272, !3871, i64 280, !3877, i64 288, !3871, i64 296, !3871, i64 304, !3871, i64 312, !3871, i64 320, !3871, i64 328, !3871, i64 336, !3871, i64 344, !3871, i64 352, !3871, i64 360, !3871, i64 368, !3871, i64 376, !3882, i64 384, !3871, i64 392}
!3881 = !{!"", !3876, i64 0, !3877, i64 16}
!3882 = !{!"int", !3872, i64 0}
!3883 = !DILocation(line: 422, column: 9, scope: !3869)
!3884 = !DILocation(line: 425, column: 9, scope: !3869)
!3885 = !DILocation(line: 416, column: 9, scope: !699)
!3886 = !DILocation(line: 441, column: 14, scope: !699)
!3887 = !DILocation(line: 417, column: 10, scope: !699)
!3888 = !DILocation(line: 443, column: 10, scope: !3889)
!3889 = distinct !DILexicalBlock(scope: !699, file: !1, line: 443, column: 9)
!3890 = !{!3882, !3882, i64 0}
!3891 = !DILocation(line: 443, column: 9, scope: !699)
!3892 = !DILocation(line: 444, column: 15, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3889, file: !1, line: 443, column: 20)
!3894 = !DILocation(line: 414, column: 11, scope: !699)
!3895 = !DILocation(line: 446, column: 20, scope: !3896)
!3896 = distinct !DILexicalBlock(scope: !3893, file: !1, line: 446, column: 13)
!3897 = !DILocation(line: 446, column: 13, scope: !3893)
!3898 = !DILocation(line: 447, column: 17, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3900, file: !1, line: 447, column: 17)
!3900 = distinct !DILexicalBlock(scope: !3896, file: !1, line: 446, column: 27)
!3901 = !DILocation(line: 447, column: 17, scope: !3900)
!3902 = !DILocation(line: 454, column: 20, scope: !3903)
!3903 = distinct !DILexicalBlock(scope: !3893, file: !1, line: 454, column: 13)
!3904 = !DILocation(line: 459, column: 23, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3893, file: !1, line: 458, column: 13)
!3906 = !DILocation(line: 454, column: 13, scope: !3893)
!3907 = !DILocation(line: 464, column: 18, scope: !3908)
!3908 = distinct !DILexicalBlock(scope: !699, file: !1, line: 464, column: 9)
!3909 = !DILocation(line: 464, column: 9, scope: !699)
!3910 = !DILocation(line: 472, column: 15, scope: !699)
!3911 = !DILocation(line: 418, column: 19, scope: !699)
!3912 = !DILocation(line: 473, column: 9, scope: !3913)
!3913 = distinct !DILexicalBlock(scope: !699, file: !1, line: 473, column: 9)
!3914 = !DILocation(line: 473, column: 9, scope: !699)
!3915 = !DILocation(line: 474, column: 36, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !3917, file: !1, line: 474, column: 13)
!3917 = distinct !DILexicalBlock(scope: !3913, file: !1, line: 473, column: 27)
!3918 = !DILocation(line: 474, column: 13, scope: !3916)
!3919 = !DILocation(line: 474, column: 13, scope: !3917)
!3920 = !DILocation(line: 479, column: 11, scope: !699)
!3921 = !DILocation(line: 488, column: 13, scope: !3922)
!3922 = distinct !DILexicalBlock(scope: !699, file: !1, line: 488, column: 9)
!3923 = !DILocation(line: 493, column: 28, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !699, file: !1, line: 492, column: 9)
!3925 = !DILocation(line: 488, column: 9, scope: !699)
!3926 = !DILocation(line: 498, column: 5, scope: !3927)
!3927 = !DILexicalBlockFile(scope: !709, file: !1, discriminator: 1)
!3928 = !DILocation(line: 498, column: 5, scope: !3929)
!3929 = distinct !DILexicalBlock(scope: !709, file: !1, line: 498, column: 5)
!3930 = !{!3876, !3877, i64 0}
!3931 = !DILocation(line: 498, column: 5, scope: !709)
!3932 = !DILocation(line: 498, column: 5, scope: !3933)
!3933 = !DILexicalBlockFile(scope: !3929, file: !1, discriminator: 3)
!3934 = !{!3880, !3871, i64 48}
!3935 = !DILocation(line: 499, column: 6, scope: !699)
!3936 = !DILocation(line: 499, column: 17, scope: !699)
!3937 = !DILocation(line: 500, column: 5, scope: !699)
!3938 = !DILocation(line: 503, column: 21, scope: !699)
!3939 = !DILocation(line: 503, column: 5, scope: !699)
!3940 = !DILocation(line: 505, column: 5, scope: !699)
!3941 = !DILocation(line: 508, column: 21, scope: !699)
!3942 = !DILocation(line: 508, column: 5, scope: !699)
!3943 = !DILocation(line: 513, column: 5, scope: !3944)
!3944 = !DILexicalBlockFile(scope: !711, file: !1, discriminator: 1)
!3945 = !DILocation(line: 513, column: 5, scope: !3946)
!3946 = distinct !DILexicalBlock(scope: !711, file: !1, line: 513, column: 5)
!3947 = !DILocation(line: 513, column: 5, scope: !711)
!3948 = !DILocation(line: 513, column: 5, scope: !3949)
!3949 = !DILexicalBlockFile(scope: !3946, file: !1, discriminator: 3)
!3950 = !DILocation(line: 515, column: 1, scope: !699)
!3951 = !DILocation(line: 518, column: 29, scope: !712)
!3952 = !DILocation(line: 518, column: 40, scope: !712)
!3953 = !DILocation(line: 522, column: 5, scope: !712)
!3954 = !DILocation(line: 526, column: 13, scope: !712)
!3955 = !DILocation(line: 521, column: 15, scope: !712)
!3956 = !DILocation(line: 527, column: 15, scope: !3957)
!3957 = distinct !DILexicalBlock(scope: !712, file: !1, line: 527, column: 9)
!3958 = !DILocation(line: 527, column: 9, scope: !712)
!3959 = !DILocation(line: 528, column: 22, scope: !3960)
!3960 = distinct !DILexicalBlock(scope: !3957, file: !1, line: 527, column: 24)
!3961 = !DILocation(line: 530, column: 22, scope: !3960)
!3962 = !DILocation(line: 530, column: 36, scope: !3960)
!3963 = !DILocation(line: 528, column: 9, scope: !3960)
!3964 = !DILocation(line: 531, column: 9, scope: !3960)
!3965 = !DILocation(line: 522, column: 9, scope: !712)
!3966 = !DILocation(line: 547, column: 14, scope: !712)
!3967 = !DILocation(line: 523, column: 10, scope: !712)
!3968 = !DILocation(line: 549, column: 10, scope: !3969)
!3969 = distinct !DILexicalBlock(scope: !712, file: !1, line: 549, column: 9)
!3970 = !DILocation(line: 549, column: 9, scope: !712)
!3971 = !DILocation(line: 550, column: 15, scope: !3972)
!3972 = distinct !DILexicalBlock(scope: !3969, file: !1, line: 549, column: 20)
!3973 = !DILocation(line: 520, column: 11, scope: !712)
!3974 = !DILocation(line: 552, column: 20, scope: !3975)
!3975 = distinct !DILexicalBlock(scope: !3972, file: !1, line: 552, column: 13)
!3976 = !DILocation(line: 552, column: 13, scope: !3972)
!3977 = !DILocation(line: 553, column: 17, scope: !3978)
!3978 = distinct !DILexicalBlock(scope: !3979, file: !1, line: 553, column: 17)
!3979 = distinct !DILexicalBlock(scope: !3975, file: !1, line: 552, column: 27)
!3980 = !DILocation(line: 553, column: 17, scope: !3979)
!3981 = !DILocation(line: 560, column: 20, scope: !3982)
!3982 = distinct !DILexicalBlock(scope: !3972, file: !1, line: 560, column: 13)
!3983 = !DILocation(line: 566, column: 23, scope: !3984)
!3984 = distinct !DILexicalBlock(scope: !3972, file: !1, line: 565, column: 13)
!3985 = !DILocation(line: 560, column: 13, scope: !3972)
!3986 = !DILocation(line: 571, column: 18, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !712, file: !1, line: 571, column: 9)
!3988 = !DILocation(line: 571, column: 9, scope: !712)
!3989 = !DILocation(line: 579, column: 15, scope: !712)
!3990 = !DILocation(line: 524, column: 19, scope: !712)
!3991 = !DILocation(line: 580, column: 9, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !712, file: !1, line: 580, column: 9)
!3993 = !DILocation(line: 580, column: 9, scope: !712)
!3994 = !DILocation(line: 581, column: 36, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !3996, file: !1, line: 581, column: 13)
!3996 = distinct !DILexicalBlock(scope: !3992, file: !1, line: 580, column: 27)
!3997 = !DILocation(line: 581, column: 13, scope: !3995)
!3998 = !DILocation(line: 581, column: 13, scope: !3996)
!3999 = !DILocation(line: 586, column: 11, scope: !712)
!4000 = !DILocation(line: 595, column: 13, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !712, file: !1, line: 595, column: 9)
!4002 = !DILocation(line: 600, column: 28, scope: !4003)
!4003 = distinct !DILexicalBlock(scope: !712, file: !1, line: 599, column: 9)
!4004 = !DILocation(line: 595, column: 9, scope: !712)
!4005 = !DILocation(line: 605, column: 5, scope: !4006)
!4006 = !DILexicalBlockFile(scope: !722, file: !1, discriminator: 1)
!4007 = !DILocation(line: 605, column: 5, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !722, file: !1, line: 605, column: 5)
!4009 = !DILocation(line: 605, column: 5, scope: !722)
!4010 = !DILocation(line: 605, column: 5, scope: !4011)
!4011 = !DILexicalBlockFile(scope: !4008, file: !1, discriminator: 3)
!4012 = !DILocation(line: 606, column: 6, scope: !712)
!4013 = !DILocation(line: 606, column: 17, scope: !712)
!4014 = !DILocation(line: 607, column: 5, scope: !712)
!4015 = !DILocation(line: 610, column: 21, scope: !712)
!4016 = !DILocation(line: 610, column: 5, scope: !712)
!4017 = !DILocation(line: 612, column: 5, scope: !712)
!4018 = !DILocation(line: 615, column: 21, scope: !712)
!4019 = !DILocation(line: 615, column: 5, scope: !712)
!4020 = !DILocation(line: 620, column: 5, scope: !4021)
!4021 = !DILexicalBlockFile(scope: !724, file: !1, discriminator: 1)
!4022 = !DILocation(line: 620, column: 5, scope: !4023)
!4023 = distinct !DILexicalBlock(scope: !724, file: !1, line: 620, column: 5)
!4024 = !DILocation(line: 620, column: 5, scope: !724)
!4025 = !DILocation(line: 620, column: 5, scope: !4026)
!4026 = !DILexicalBlockFile(scope: !4023, file: !1, discriminator: 3)
!4027 = !DILocation(line: 622, column: 1, scope: !712)
!4028 = !DILocation(line: 12218, column: 9, scope: !725)
!4029 = !DILocation(line: 12210, column: 15, scope: !725)
!4030 = !DILocation(line: 12219, column: 11, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !725, file: !1, line: 12219, column: 9)
!4032 = !DILocation(line: 12219, column: 9, scope: !725)
!4033 = !DILocation(line: 1194, column: 9, scope: !3112, inlinedAt: !4034)
!4034 = distinct !DILocation(line: 12223, column: 9, scope: !725)
!4035 = !DILocation(line: 1187, column: 15, scope: !3112, inlinedAt: !4034)
!4036 = !DILocation(line: 1195, column: 11, scope: !4037, inlinedAt: !4034)
!4037 = distinct !DILexicalBlock(scope: !3112, file: !1, line: 1195, column: 9)
!4038 = !DILocation(line: 1195, column: 9, scope: !3112, inlinedAt: !4034)
!4039 = !DILocation(line: 1233, column: 9, scope: !4040, inlinedAt: !4034)
!4040 = distinct !DILexicalBlock(scope: !3112, file: !1, line: 1233, column: 9)
!4041 = !DILocation(line: 1233, column: 17, scope: !4040, inlinedAt: !4034)
!4042 = !DILocation(line: 1233, column: 9, scope: !3112, inlinedAt: !4034)
!4043 = !DILocation(line: 1236, column: 23, scope: !3118, inlinedAt: !4034)
!4044 = !DILocation(line: 1236, column: 26, scope: !3118, inlinedAt: !4034)
!4045 = !DILocation(line: 1236, column: 5, scope: !3119, inlinedAt: !4034)
!4046 = !DILocation(line: 1239, column: 19, scope: !3117, inlinedAt: !4034)
!4047 = !DILocation(line: 12223, column: 9, scope: !725)
!4048 = !DILocation(line: 1239, column: 15, scope: !3117, inlinedAt: !4034)
!4049 = !DILocation(line: 1240, column: 15, scope: !4050, inlinedAt: !4034)
!4050 = distinct !DILexicalBlock(scope: !3117, file: !1, line: 1240, column: 13)
!4051 = !DILocation(line: 1240, column: 13, scope: !3117, inlinedAt: !4034)
!4052 = !DILocation(line: 1242, column: 50, scope: !3117, inlinedAt: !4034)
!4053 = !DILocation(line: 1242, column: 43, scope: !3117, inlinedAt: !4034)
!4054 = !DILocation(line: 1242, column: 13, scope: !3117, inlinedAt: !4034)
!4055 = !DILocation(line: 1237, column: 19, scope: !3117, inlinedAt: !4034)
!4056 = !DILocation(line: 1243, column: 15, scope: !4057, inlinedAt: !4034)
!4057 = distinct !DILexicalBlock(scope: !3117, file: !1, line: 1243, column: 13)
!4058 = !DILocation(line: 1243, column: 13, scope: !3117, inlinedAt: !4034)
!4059 = !DILocation(line: 1244, column: 13, scope: !4060, inlinedAt: !4034)
!4060 = distinct !DILexicalBlock(scope: !4057, file: !1, line: 1243, column: 24)
!4061 = !DILocation(line: 1245, column: 13, scope: !4060, inlinedAt: !4034)
!4062 = !DILocation(line: 1247, column: 40, scope: !3117, inlinedAt: !4034)
!4063 = !DILocation(line: 1247, column: 44, scope: !3117, inlinedAt: !4034)
!4064 = !DILocation(line: 1247, column: 13, scope: !3117, inlinedAt: !4034)
!4065 = !DILocation(line: 1238, column: 19, scope: !3117, inlinedAt: !4034)
!4066 = !DILocation(line: 1248, column: 15, scope: !3125, inlinedAt: !4034)
!4067 = !DILocation(line: 1248, column: 13, scope: !3117, inlinedAt: !4034)
!4068 = !DILocation(line: 1249, column: 13, scope: !3124, inlinedAt: !4034)
!4069 = !DILocation(line: 1250, column: 13, scope: !4070, inlinedAt: !4034)
!4070 = !DILexicalBlockFile(scope: !3123, file: !1, discriminator: 1)
!4071 = !DILocation(line: 1250, column: 13, scope: !4072, inlinedAt: !4034)
!4072 = distinct !DILexicalBlock(scope: !3123, file: !1, line: 1250, column: 13)
!4073 = !DILocation(line: 1250, column: 13, scope: !3123, inlinedAt: !4034)
!4074 = !DILocation(line: 1250, column: 13, scope: !4075, inlinedAt: !4034)
!4075 = !DILexicalBlockFile(scope: !4072, file: !1, discriminator: 3)
!4076 = !DILocation(line: 1253, column: 13, scope: !4077, inlinedAt: !4034)
!4077 = distinct !DILexicalBlock(scope: !3117, file: !1, line: 1253, column: 13)
!4078 = !DILocation(line: 1253, column: 34, scope: !4077, inlinedAt: !4034)
!4079 = !DILocation(line: 1253, column: 13, scope: !3117, inlinedAt: !4034)
!4080 = !DILocation(line: 1254, column: 17, scope: !4081, inlinedAt: !4034)
!4081 = distinct !DILexicalBlock(scope: !4082, file: !1, line: 1254, column: 17)
!4082 = distinct !DILexicalBlock(scope: !4077, file: !1, line: 1253, column: 43)
!4083 = !DILocation(line: 1254, column: 41, scope: !4081, inlinedAt: !4034)
!4084 = !DILocation(line: 1254, column: 17, scope: !4082, inlinedAt: !4034)
!4085 = !DILocation(line: 1255, column: 17, scope: !4081, inlinedAt: !4034)
!4086 = !DILocation(line: 1257, column: 9, scope: !4087, inlinedAt: !4034)
!4087 = !DILexicalBlockFile(scope: !3127, file: !1, discriminator: 1)
!4088 = !DILocation(line: 1257, column: 9, scope: !4089, inlinedAt: !4034)
!4089 = distinct !DILexicalBlock(scope: !3127, file: !1, line: 1257, column: 9)
!4090 = !DILocation(line: 1257, column: 9, scope: !3127, inlinedAt: !4034)
!4091 = !DILocation(line: 1257, column: 9, scope: !4092, inlinedAt: !4034)
!4092 = !DILexicalBlockFile(scope: !4089, file: !1, discriminator: 3)
!4093 = !DILocation(line: 1258, column: 9, scope: !4094, inlinedAt: !4034)
!4094 = !DILexicalBlockFile(scope: !3129, file: !1, discriminator: 1)
!4095 = !DILocation(line: 1258, column: 9, scope: !4096, inlinedAt: !4034)
!4096 = distinct !DILexicalBlock(scope: !3129, file: !1, line: 1258, column: 9)
!4097 = !DILocation(line: 1258, column: 9, scope: !3129, inlinedAt: !4034)
!4098 = !DILocation(line: 1258, column: 9, scope: !4099, inlinedAt: !4034)
!4099 = !DILexicalBlockFile(scope: !4096, file: !1, discriminator: 3)
!4100 = !DILocation(line: 1236, column: 36, scope: !3118, inlinedAt: !4034)
!4101 = !DILocation(line: 1191, column: 12, scope: !3112, inlinedAt: !4034)
!4102 = !DILocation(line: 12210, column: 19, scope: !725)
!4103 = !DILocation(line: 12224, column: 5, scope: !4104)
!4104 = !DILexicalBlockFile(scope: !734, file: !1, discriminator: 1)
!4105 = !DILocation(line: 12224, column: 5, scope: !734)
!4106 = !DILocation(line: 12224, column: 5, scope: !4107)
!4107 = !DILexicalBlockFile(scope: !4108, file: !1, discriminator: 2)
!4108 = distinct !DILexicalBlock(scope: !734, file: !1, line: 12224, column: 5)
!4109 = !DILocation(line: 12225, column: 22, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !725, file: !1, line: 12225, column: 9)
!4111 = !DILocation(line: 12225, column: 58, scope: !4110)
!4112 = !DILocation(line: 12225, column: 9, scope: !725)
!4113 = !DILocation(line: 12227, column: 5, scope: !4114)
!4114 = !DILexicalBlockFile(scope: !736, file: !1, discriminator: 1)
!4115 = !DILocation(line: 12227, column: 5, scope: !4116)
!4116 = distinct !DILexicalBlock(scope: !736, file: !1, line: 12227, column: 5)
!4117 = !DILocation(line: 12227, column: 5, scope: !736)
!4118 = !DILocation(line: 12227, column: 5, scope: !4119)
!4119 = !DILexicalBlockFile(scope: !4116, file: !1, discriminator: 3)
!4120 = !DILocation(line: 11647, column: 19, scope: !3130, inlinedAt: !4121)
!4121 = distinct !DILocation(line: 12229, column: 9, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !725, file: !1, line: 12229, column: 9)
!4123 = !DILocation(line: 11650, column: 9, scope: !4124, inlinedAt: !4121)
!4124 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11650, column: 9)
!4125 = !DILocation(line: 11650, column: 9, scope: !3130, inlinedAt: !4121)
!4126 = !DILocation(line: 11653, column: 9, scope: !4127, inlinedAt: !4121)
!4127 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11653, column: 9)
!4128 = !DILocation(line: 11653, column: 9, scope: !3130, inlinedAt: !4121)
!4129 = !DILocation(line: 11656, column: 9, scope: !4130, inlinedAt: !4121)
!4130 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11656, column: 9)
!4131 = !DILocation(line: 11656, column: 9, scope: !3130, inlinedAt: !4121)
!4132 = !DILocation(line: 11659, column: 9, scope: !4133, inlinedAt: !4121)
!4133 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11659, column: 9)
!4134 = !DILocation(line: 11659, column: 9, scope: !3130, inlinedAt: !4121)
!4135 = !DILocation(line: 11662, column: 9, scope: !4136, inlinedAt: !4121)
!4136 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11662, column: 9)
!4137 = !DILocation(line: 11662, column: 9, scope: !3130, inlinedAt: !4121)
!4138 = !DILocation(line: 11665, column: 9, scope: !4139, inlinedAt: !4121)
!4139 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11665, column: 9)
!4140 = !DILocation(line: 11665, column: 9, scope: !3130, inlinedAt: !4121)
!4141 = !DILocation(line: 11668, column: 9, scope: !4142, inlinedAt: !4121)
!4142 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11668, column: 9)
!4143 = !DILocation(line: 11668, column: 9, scope: !3130, inlinedAt: !4121)
!4144 = !DILocation(line: 11671, column: 9, scope: !4145, inlinedAt: !4121)
!4145 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11671, column: 9)
!4146 = !DILocation(line: 11671, column: 9, scope: !3130, inlinedAt: !4121)
!4147 = !DILocation(line: 11674, column: 9, scope: !4148, inlinedAt: !4121)
!4148 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11674, column: 9)
!4149 = !DILocation(line: 11674, column: 9, scope: !3130, inlinedAt: !4121)
!4150 = !DILocation(line: 11677, column: 9, scope: !4151, inlinedAt: !4121)
!4151 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11677, column: 9)
!4152 = !DILocation(line: 11677, column: 9, scope: !3130, inlinedAt: !4121)
!4153 = !DILocation(line: 11680, column: 9, scope: !4154, inlinedAt: !4121)
!4154 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11680, column: 9)
!4155 = !DILocation(line: 11680, column: 9, scope: !3130, inlinedAt: !4121)
!4156 = !DILocation(line: 11683, column: 9, scope: !4157, inlinedAt: !4121)
!4157 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11683, column: 9)
!4158 = !DILocation(line: 11683, column: 9, scope: !3130, inlinedAt: !4121)
!4159 = !DILocation(line: 11686, column: 9, scope: !4160, inlinedAt: !4121)
!4160 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11686, column: 9)
!4161 = !DILocation(line: 11686, column: 9, scope: !3130, inlinedAt: !4121)
!4162 = !DILocation(line: 11689, column: 9, scope: !4163, inlinedAt: !4121)
!4163 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11689, column: 9)
!4164 = !DILocation(line: 11689, column: 9, scope: !3130, inlinedAt: !4121)
!4165 = !DILocation(line: 11692, column: 9, scope: !4166, inlinedAt: !4121)
!4166 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11692, column: 9)
!4167 = !DILocation(line: 11692, column: 9, scope: !3130, inlinedAt: !4121)
!4168 = !DILocation(line: 11695, column: 9, scope: !4169, inlinedAt: !4121)
!4169 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11695, column: 9)
!4170 = !DILocation(line: 11695, column: 9, scope: !3130, inlinedAt: !4121)
!4171 = !DILocation(line: 11698, column: 9, scope: !4172, inlinedAt: !4121)
!4172 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11698, column: 9)
!4173 = !DILocation(line: 11698, column: 9, scope: !3130, inlinedAt: !4121)
!4174 = !DILocation(line: 11701, column: 9, scope: !4175, inlinedAt: !4121)
!4175 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11701, column: 9)
!4176 = !DILocation(line: 11701, column: 9, scope: !3130, inlinedAt: !4121)
!4177 = !DILocation(line: 11704, column: 9, scope: !4178, inlinedAt: !4121)
!4178 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11704, column: 9)
!4179 = !DILocation(line: 11704, column: 9, scope: !3130, inlinedAt: !4121)
!4180 = !DILocation(line: 11707, column: 9, scope: !4181, inlinedAt: !4121)
!4181 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11707, column: 9)
!4182 = !DILocation(line: 11707, column: 9, scope: !3130, inlinedAt: !4121)
!4183 = !DILocation(line: 11710, column: 9, scope: !4184, inlinedAt: !4121)
!4184 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11710, column: 9)
!4185 = !DILocation(line: 11710, column: 9, scope: !3130, inlinedAt: !4121)
!4186 = !DILocation(line: 11713, column: 9, scope: !4187, inlinedAt: !4121)
!4187 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11713, column: 9)
!4188 = !DILocation(line: 11713, column: 9, scope: !3130, inlinedAt: !4121)
!4189 = !DILocation(line: 11725, column: 9, scope: !4190, inlinedAt: !4121)
!4190 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11725, column: 9)
!4191 = !DILocation(line: 11725, column: 9, scope: !3130, inlinedAt: !4121)
!4192 = !DILocation(line: 11740, column: 9, scope: !4193, inlinedAt: !4121)
!4193 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11740, column: 9)
!4194 = !DILocation(line: 11740, column: 9, scope: !3130, inlinedAt: !4121)
!4195 = !DILocation(line: 11749, column: 9, scope: !4196, inlinedAt: !4121)
!4196 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11749, column: 9)
!4197 = !DILocation(line: 11749, column: 9, scope: !3130, inlinedAt: !4121)
!4198 = !DILocation(line: 11752, column: 9, scope: !4199, inlinedAt: !4121)
!4199 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11752, column: 9)
!4200 = !DILocation(line: 11752, column: 9, scope: !3130, inlinedAt: !4121)
!4201 = !DILocation(line: 11755, column: 9, scope: !4202, inlinedAt: !4121)
!4202 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11755, column: 9)
!4203 = !DILocation(line: 11755, column: 9, scope: !3130, inlinedAt: !4121)
!4204 = !DILocation(line: 11758, column: 9, scope: !4205, inlinedAt: !4121)
!4205 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11758, column: 9)
!4206 = !DILocation(line: 11758, column: 9, scope: !3130, inlinedAt: !4121)
!4207 = !DILocation(line: 11761, column: 9, scope: !4208, inlinedAt: !4121)
!4208 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11761, column: 9)
!4209 = !DILocation(line: 11761, column: 9, scope: !3130, inlinedAt: !4121)
!4210 = !DILocation(line: 11766, column: 9, scope: !4211, inlinedAt: !4121)
!4211 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11766, column: 9)
!4212 = !DILocation(line: 11766, column: 9, scope: !3130, inlinedAt: !4121)
!4213 = !DILocation(line: 11769, column: 9, scope: !4214, inlinedAt: !4121)
!4214 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11769, column: 9)
!4215 = !DILocation(line: 11769, column: 9, scope: !3130, inlinedAt: !4121)
!4216 = !DILocation(line: 11799, column: 9, scope: !4217, inlinedAt: !4121)
!4217 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11799, column: 9)
!4218 = !DILocation(line: 11799, column: 9, scope: !3130, inlinedAt: !4121)
!4219 = !DILocation(line: 11803, column: 9, scope: !4220, inlinedAt: !4121)
!4220 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11803, column: 9)
!4221 = !DILocation(line: 11803, column: 9, scope: !3130, inlinedAt: !4121)
!4222 = !DILocation(line: 11807, column: 9, scope: !4223, inlinedAt: !4121)
!4223 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11807, column: 9)
!4224 = !DILocation(line: 11807, column: 9, scope: !3130, inlinedAt: !4121)
!4225 = !DILocation(line: 11811, column: 9, scope: !4226, inlinedAt: !4121)
!4226 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11811, column: 9)
!4227 = !DILocation(line: 11811, column: 9, scope: !3130, inlinedAt: !4121)
!4228 = !DILocation(line: 11819, column: 9, scope: !4229, inlinedAt: !4121)
!4229 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11819, column: 9)
!4230 = !DILocation(line: 11819, column: 9, scope: !3130, inlinedAt: !4121)
!4231 = !DILocation(line: 11824, column: 9, scope: !4232, inlinedAt: !4121)
!4232 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11824, column: 9)
!4233 = !DILocation(line: 11824, column: 9, scope: !3130, inlinedAt: !4121)
!4234 = !DILocation(line: 11827, column: 9, scope: !4235, inlinedAt: !4121)
!4235 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11827, column: 9)
!4236 = !DILocation(line: 11827, column: 9, scope: !3130, inlinedAt: !4121)
!4237 = !DILocation(line: 11830, column: 9, scope: !4238, inlinedAt: !4121)
!4238 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11830, column: 9)
!4239 = !DILocation(line: 11830, column: 9, scope: !3130, inlinedAt: !4121)
!4240 = !DILocation(line: 11833, column: 9, scope: !4241, inlinedAt: !4121)
!4241 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11833, column: 9)
!4242 = !DILocation(line: 11833, column: 9, scope: !3130, inlinedAt: !4121)
!4243 = !DILocation(line: 11836, column: 9, scope: !4244, inlinedAt: !4121)
!4244 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11836, column: 9)
!4245 = !DILocation(line: 11836, column: 9, scope: !3130, inlinedAt: !4121)
!4246 = !DILocation(line: 11839, column: 9, scope: !4247, inlinedAt: !4121)
!4247 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11839, column: 9)
!4248 = !DILocation(line: 11839, column: 9, scope: !3130, inlinedAt: !4121)
!4249 = !DILocation(line: 11842, column: 9, scope: !4250, inlinedAt: !4121)
!4250 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11842, column: 9)
!4251 = !DILocation(line: 11842, column: 9, scope: !3130, inlinedAt: !4121)
!4252 = !DILocation(line: 11845, column: 9, scope: !4253, inlinedAt: !4121)
!4253 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11845, column: 9)
!4254 = !DILocation(line: 11845, column: 9, scope: !3130, inlinedAt: !4121)
!4255 = !DILocation(line: 11848, column: 9, scope: !4256, inlinedAt: !4121)
!4256 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11848, column: 9)
!4257 = !DILocation(line: 11848, column: 9, scope: !3130, inlinedAt: !4121)
!4258 = !DILocation(line: 11851, column: 9, scope: !4259, inlinedAt: !4121)
!4259 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11851, column: 9)
!4260 = !DILocation(line: 11851, column: 9, scope: !3130, inlinedAt: !4121)
!4261 = !DILocation(line: 11854, column: 9, scope: !4262, inlinedAt: !4121)
!4262 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11854, column: 9)
!4263 = !DILocation(line: 11854, column: 9, scope: !3130, inlinedAt: !4121)
!4264 = !DILocation(line: 11857, column: 9, scope: !4265, inlinedAt: !4121)
!4265 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11857, column: 9)
!4266 = !DILocation(line: 11857, column: 9, scope: !3130, inlinedAt: !4121)
!4267 = !DILocation(line: 11860, column: 9, scope: !4268, inlinedAt: !4121)
!4268 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11860, column: 9)
!4269 = !DILocation(line: 11860, column: 9, scope: !3130, inlinedAt: !4121)
!4270 = !DILocation(line: 11863, column: 9, scope: !4271, inlinedAt: !4121)
!4271 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11863, column: 9)
!4272 = !DILocation(line: 11863, column: 9, scope: !3130, inlinedAt: !4121)
!4273 = !DILocation(line: 11866, column: 9, scope: !4274, inlinedAt: !4121)
!4274 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11866, column: 9)
!4275 = !DILocation(line: 11866, column: 9, scope: !3130, inlinedAt: !4121)
!4276 = !DILocation(line: 11869, column: 9, scope: !4277, inlinedAt: !4121)
!4277 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11869, column: 9)
!4278 = !DILocation(line: 11869, column: 9, scope: !3130, inlinedAt: !4121)
!4279 = !DILocation(line: 11877, column: 9, scope: !4280, inlinedAt: !4121)
!4280 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11877, column: 9)
!4281 = !DILocation(line: 11877, column: 9, scope: !3130, inlinedAt: !4121)
!4282 = !DILocation(line: 11880, column: 9, scope: !4283, inlinedAt: !4121)
!4283 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11880, column: 9)
!4284 = !DILocation(line: 11880, column: 9, scope: !3130, inlinedAt: !4121)
!4285 = !DILocation(line: 11885, column: 9, scope: !4286, inlinedAt: !4121)
!4286 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11885, column: 9)
!4287 = !DILocation(line: 11885, column: 9, scope: !3130, inlinedAt: !4121)
!4288 = !DILocation(line: 11888, column: 9, scope: !4289, inlinedAt: !4121)
!4289 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11888, column: 9)
!4290 = !DILocation(line: 11888, column: 9, scope: !3130, inlinedAt: !4121)
!4291 = !DILocation(line: 11891, column: 9, scope: !4292, inlinedAt: !4121)
!4292 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11891, column: 9)
!4293 = !DILocation(line: 11891, column: 9, scope: !3130, inlinedAt: !4121)
!4294 = !DILocation(line: 11894, column: 9, scope: !4295, inlinedAt: !4121)
!4295 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11894, column: 9)
!4296 = !DILocation(line: 11894, column: 9, scope: !3130, inlinedAt: !4121)
!4297 = !DILocation(line: 11897, column: 9, scope: !4298, inlinedAt: !4121)
!4298 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11897, column: 9)
!4299 = !DILocation(line: 11897, column: 9, scope: !3130, inlinedAt: !4121)
!4300 = !DILocation(line: 11900, column: 9, scope: !4301, inlinedAt: !4121)
!4301 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11900, column: 9)
!4302 = !DILocation(line: 11900, column: 9, scope: !3130, inlinedAt: !4121)
!4303 = !DILocation(line: 11903, column: 9, scope: !4304, inlinedAt: !4121)
!4304 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11903, column: 9)
!4305 = !DILocation(line: 11903, column: 9, scope: !3130, inlinedAt: !4121)
!4306 = !DILocation(line: 11906, column: 9, scope: !4307, inlinedAt: !4121)
!4307 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11906, column: 9)
!4308 = !DILocation(line: 11906, column: 9, scope: !3130, inlinedAt: !4121)
!4309 = !DILocation(line: 11909, column: 9, scope: !4310, inlinedAt: !4121)
!4310 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11909, column: 9)
!4311 = !DILocation(line: 11909, column: 9, scope: !3130, inlinedAt: !4121)
!4312 = !DILocation(line: 11925, column: 9, scope: !4313, inlinedAt: !4121)
!4313 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11925, column: 9)
!4314 = !DILocation(line: 11925, column: 9, scope: !3130, inlinedAt: !4121)
!4315 = !DILocation(line: 11928, column: 9, scope: !4316, inlinedAt: !4121)
!4316 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11928, column: 9)
!4317 = !DILocation(line: 11928, column: 9, scope: !3130, inlinedAt: !4121)
!4318 = !DILocation(line: 11931, column: 9, scope: !4319, inlinedAt: !4121)
!4319 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11931, column: 9)
!4320 = !DILocation(line: 11931, column: 9, scope: !3130, inlinedAt: !4121)
!4321 = !DILocation(line: 11934, column: 9, scope: !4322, inlinedAt: !4121)
!4322 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11934, column: 9)
!4323 = !DILocation(line: 11934, column: 9, scope: !3130, inlinedAt: !4121)
!4324 = !DILocation(line: 11937, column: 9, scope: !4325, inlinedAt: !4121)
!4325 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11937, column: 9)
!4326 = !DILocation(line: 11937, column: 9, scope: !3130, inlinedAt: !4121)
!4327 = !DILocation(line: 11940, column: 9, scope: !4328, inlinedAt: !4121)
!4328 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11940, column: 9)
!4329 = !DILocation(line: 11940, column: 9, scope: !3130, inlinedAt: !4121)
!4330 = !DILocation(line: 11945, column: 9, scope: !4331, inlinedAt: !4121)
!4331 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11945, column: 9)
!4332 = !DILocation(line: 11945, column: 9, scope: !3130, inlinedAt: !4121)
!4333 = !DILocation(line: 11946, column: 9, scope: !4334, inlinedAt: !4121)
!4334 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11946, column: 9)
!4335 = !DILocation(line: 11946, column: 9, scope: !3130, inlinedAt: !4121)
!4336 = !DILocation(line: 11947, column: 9, scope: !4337, inlinedAt: !4121)
!4337 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11947, column: 9)
!4338 = !DILocation(line: 11947, column: 9, scope: !3130, inlinedAt: !4121)
!4339 = !DILocation(line: 11950, column: 9, scope: !4340, inlinedAt: !4121)
!4340 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11950, column: 9)
!4341 = !DILocation(line: 11950, column: 9, scope: !3130, inlinedAt: !4121)
!4342 = !DILocation(line: 11953, column: 9, scope: !4343, inlinedAt: !4121)
!4343 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11953, column: 9)
!4344 = !DILocation(line: 11953, column: 9, scope: !3130, inlinedAt: !4121)
!4345 = !DILocation(line: 11956, column: 9, scope: !4346, inlinedAt: !4121)
!4346 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11956, column: 9)
!4347 = !DILocation(line: 11956, column: 9, scope: !3130, inlinedAt: !4121)
!4348 = !DILocation(line: 11959, column: 9, scope: !4349, inlinedAt: !4121)
!4349 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11959, column: 9)
!4350 = !DILocation(line: 11959, column: 9, scope: !3130, inlinedAt: !4121)
!4351 = !DILocation(line: 11962, column: 9, scope: !4352, inlinedAt: !4121)
!4352 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11962, column: 9)
!4353 = !DILocation(line: 11962, column: 9, scope: !3130, inlinedAt: !4121)
!4354 = !DILocation(line: 11965, column: 9, scope: !4355, inlinedAt: !4121)
!4355 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11965, column: 9)
!4356 = !DILocation(line: 11965, column: 9, scope: !3130, inlinedAt: !4121)
!4357 = !DILocation(line: 11968, column: 9, scope: !4358, inlinedAt: !4121)
!4358 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11968, column: 9)
!4359 = !DILocation(line: 11968, column: 9, scope: !3130, inlinedAt: !4121)
!4360 = !DILocation(line: 11973, column: 9, scope: !4361, inlinedAt: !4121)
!4361 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11973, column: 9)
!4362 = !DILocation(line: 11973, column: 9, scope: !3130, inlinedAt: !4121)
!4363 = !DILocation(line: 11976, column: 9, scope: !4364, inlinedAt: !4121)
!4364 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11976, column: 9)
!4365 = !DILocation(line: 11976, column: 9, scope: !3130, inlinedAt: !4121)
!4366 = !DILocation(line: 11979, column: 9, scope: !4367, inlinedAt: !4121)
!4367 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11979, column: 9)
!4368 = !DILocation(line: 11979, column: 9, scope: !3130, inlinedAt: !4121)
!4369 = !DILocation(line: 11982, column: 9, scope: !4370, inlinedAt: !4121)
!4370 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11982, column: 9)
!4371 = !DILocation(line: 11982, column: 9, scope: !3130, inlinedAt: !4121)
!4372 = !DILocation(line: 11994, column: 9, scope: !4373, inlinedAt: !4121)
!4373 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11994, column: 9)
!4374 = !DILocation(line: 11994, column: 9, scope: !3130, inlinedAt: !4121)
!4375 = !DILocation(line: 11995, column: 9, scope: !4376, inlinedAt: !4121)
!4376 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11995, column: 9)
!4377 = !DILocation(line: 11995, column: 9, scope: !3130, inlinedAt: !4121)
!4378 = !DILocation(line: 11996, column: 9, scope: !4379, inlinedAt: !4121)
!4379 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 11996, column: 9)
!4380 = !DILocation(line: 11996, column: 9, scope: !3130, inlinedAt: !4121)
!4381 = !DILocation(line: 12001, column: 9, scope: !4382, inlinedAt: !4121)
!4382 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 12001, column: 9)
!4383 = !DILocation(line: 12001, column: 9, scope: !3130, inlinedAt: !4121)
!4384 = !DILocation(line: 12004, column: 9, scope: !4385, inlinedAt: !4121)
!4385 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 12004, column: 9)
!4386 = !DILocation(line: 12004, column: 9, scope: !3130, inlinedAt: !4121)
!4387 = !DILocation(line: 12007, column: 9, scope: !4388, inlinedAt: !4121)
!4388 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 12007, column: 9)
!4389 = !DILocation(line: 12007, column: 9, scope: !3130, inlinedAt: !4121)
!4390 = !DILocation(line: 12024, column: 9, scope: !4391, inlinedAt: !4121)
!4391 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 12024, column: 9)
!4392 = !DILocation(line: 12024, column: 9, scope: !3130, inlinedAt: !4121)
!4393 = !DILocation(line: 12025, column: 9, scope: !4394, inlinedAt: !4121)
!4394 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 12025, column: 9)
!4395 = !DILocation(line: 12025, column: 9, scope: !3130, inlinedAt: !4121)
!4396 = !DILocation(line: 12026, column: 9, scope: !4397, inlinedAt: !4121)
!4397 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 12026, column: 9)
!4398 = !DILocation(line: 12026, column: 9, scope: !3130, inlinedAt: !4121)
!4399 = !DILocation(line: 12030, column: 9, scope: !4400, inlinedAt: !4121)
!4400 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 12030, column: 9)
!4401 = !DILocation(line: 12030, column: 9, scope: !3130, inlinedAt: !4121)
!4402 = !DILocation(line: 12033, column: 9, scope: !4403, inlinedAt: !4121)
!4403 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 12033, column: 9)
!4404 = !DILocation(line: 12033, column: 9, scope: !3130, inlinedAt: !4121)
!4405 = !DILocation(line: 12036, column: 9, scope: !4406, inlinedAt: !4121)
!4406 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 12036, column: 9)
!4407 = !DILocation(line: 12036, column: 9, scope: !3130, inlinedAt: !4121)
!4408 = !DILocation(line: 12039, column: 9, scope: !4409, inlinedAt: !4121)
!4409 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 12039, column: 9)
!4410 = !DILocation(line: 12039, column: 9, scope: !3130, inlinedAt: !4121)
!4411 = !DILocation(line: 12042, column: 9, scope: !4412, inlinedAt: !4121)
!4412 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 12042, column: 9)
!4413 = !DILocation(line: 12042, column: 9, scope: !3130, inlinedAt: !4121)
!4414 = !DILocation(line: 12045, column: 9, scope: !4415, inlinedAt: !4121)
!4415 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 12045, column: 9)
!4416 = !DILocation(line: 12045, column: 9, scope: !3130, inlinedAt: !4121)
!4417 = !DILocation(line: 12048, column: 9, scope: !4418, inlinedAt: !4121)
!4418 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 12048, column: 9)
!4419 = !DILocation(line: 12051, column: 5, scope: !3130, inlinedAt: !4121)
!4420 = !DILocation(line: 12229, column: 9, scope: !725)
!4421 = !DILocation(line: 10330, column: 33, scope: !3133, inlinedAt: !4422)
!4422 = distinct !DILocation(line: 12232, column: 9, scope: !4423)
!4423 = distinct !DILexicalBlock(scope: !725, file: !1, line: 12232, column: 9)
!4424 = !DILocation(line: 10333, column: 9, scope: !4425, inlinedAt: !4422)
!4425 = distinct !DILexicalBlock(scope: !3133, file: !1, line: 10333, column: 9)
!4426 = !DILocation(line: 10333, column: 9, scope: !3133, inlinedAt: !4422)
!4427 = !DILocation(line: 10340, column: 9, scope: !4428, inlinedAt: !4422)
!4428 = distinct !DILexicalBlock(scope: !3133, file: !1, line: 10340, column: 9)
!4429 = !DILocation(line: 10340, column: 9, scope: !3133, inlinedAt: !4422)
!4430 = !DILocation(line: 10347, column: 9, scope: !4431, inlinedAt: !4422)
!4431 = distinct !DILexicalBlock(scope: !3133, file: !1, line: 10347, column: 9)
!4432 = !DILocation(line: 10353, column: 5, scope: !3133, inlinedAt: !4422)
!4433 = !DILocation(line: 12232, column: 9, scope: !725)
!4434 = !DILocation(line: 12235, column: 5, scope: !725)
!4435 = !DILocation(line: 12236, column: 5, scope: !725)
!4436 = !DILocation(line: 12239, column: 9, scope: !4437)
!4437 = distinct !DILexicalBlock(scope: !725, file: !1, line: 12239, column: 9)
!4438 = !DILocation(line: 12239, column: 30, scope: !4437)
!4439 = !DILocation(line: 12239, column: 9, scope: !725)
!4440 = !DILocation(line: 12240, column: 32, scope: !4437)
!4441 = !DILocation(line: 12240, column: 30, scope: !4437)
!4442 = !DILocation(line: 12240, column: 9, scope: !4437)
!4443 = !DILocation(line: 12243, column: 9, scope: !725)
!4444 = !DILocation(line: 12245, column: 33, scope: !4445)
!4445 = distinct !DILexicalBlock(scope: !4446, file: !1, line: 12243, column: 23)
!4446 = distinct !DILexicalBlock(scope: !725, file: !1, line: 12243, column: 9)
!4447 = !{!4448, !3871, i64 0}
!4448 = !{!"PyStructSequence_Desc", !3871, i64 0, !3871, i64 8, !3871, i64 16, !3882, i64 24}
!4449 = !DILocation(line: 12246, column: 13, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4445, file: !1, line: 12246, column: 13)
!4451 = !DILocation(line: 12246, column: 80, scope: !4450)
!4452 = !DILocation(line: 12246, column: 13, scope: !4445)
!4453 = !DILocation(line: 12250, column: 31, scope: !4445)
!4454 = !DILocation(line: 12251, column: 43, scope: !4445)
!4455 = !DILocation(line: 12251, column: 26, scope: !4445)
!4456 = !{!4448, !3871, i64 16}
!4457 = !DILocation(line: 12251, column: 9, scope: !4445)
!4458 = !DILocation(line: 12251, column: 41, scope: !4445)
!4459 = !{!4460, !3871, i64 0}
!4460 = !{!"PyStructSequence_Field", !3871, i64 0, !3871, i64 8}
!4461 = !DILocation(line: 12252, column: 43, scope: !4445)
!4462 = !DILocation(line: 12252, column: 9, scope: !4445)
!4463 = !DILocation(line: 12252, column: 41, scope: !4445)
!4464 = !DILocation(line: 12253, column: 43, scope: !4445)
!4465 = !DILocation(line: 12253, column: 9, scope: !4445)
!4466 = !DILocation(line: 12253, column: 41, scope: !4445)
!4467 = !DILocation(line: 12254, column: 13, scope: !4468)
!4468 = distinct !DILexicalBlock(scope: !4445, file: !1, line: 12254, column: 13)
!4469 = !DILocation(line: 12254, column: 76, scope: !4468)
!4470 = !DILocation(line: 12254, column: 13, scope: !4445)
!4471 = !DILocation(line: 12256, column: 40, scope: !4445)
!4472 = !{!3880, !3871, i64 312}
!4473 = !DILocation(line: 12256, column: 23, scope: !4445)
!4474 = !DILocation(line: 12257, column: 31, scope: !4445)
!4475 = !DILocation(line: 12259, column: 34, scope: !4445)
!4476 = !DILocation(line: 12260, column: 13, scope: !4477)
!4477 = distinct !DILexicalBlock(scope: !4445, file: !1, line: 12260, column: 13)
!4478 = !DILocation(line: 12261, column: 62, scope: !4477)
!4479 = !DILocation(line: 12260, column: 13, scope: !4445)
!4480 = !DILocation(line: 12265, column: 28, scope: !4445)
!4481 = !DILocation(line: 12265, column: 26, scope: !4445)
!4482 = !{!3877, !3877, i64 0}
!4483 = !DILocation(line: 12274, column: 31, scope: !4445)
!4484 = !DILocation(line: 12275, column: 13, scope: !4485)
!4485 = distinct !DILexicalBlock(scope: !4445, file: !1, line: 12275, column: 13)
!4486 = !DILocation(line: 12275, column: 76, scope: !4485)
!4487 = !DILocation(line: 12275, column: 13, scope: !4445)
!4488 = !DILocation(line: 12277, column: 31, scope: !4445)
!4489 = !DILocation(line: 12281, column: 13, scope: !4490)
!4490 = distinct !DILexicalBlock(scope: !4445, file: !1, line: 12281, column: 13)
!4491 = !DILocation(line: 12282, column: 60, scope: !4490)
!4492 = !DILocation(line: 12281, column: 13, scope: !4445)
!4493 = !DILocation(line: 12286, column: 5, scope: !725)
!4494 = !DILocation(line: 12287, column: 5, scope: !725)
!4495 = !DILocation(line: 12289, column: 5, scope: !725)
!4496 = !DILocation(line: 12290, column: 5, scope: !725)
!4497 = !DILocation(line: 12291, column: 5, scope: !725)
!4498 = !DILocation(line: 12292, column: 5, scope: !725)
!4499 = !DILocation(line: 12296, column: 5, scope: !725)
!4500 = !DILocation(line: 12297, column: 5, scope: !725)
!4501 = !DILocation(line: 12300, column: 28, scope: !725)
!4502 = !DILocation(line: 12301, column: 9, scope: !4503)
!4503 = distinct !DILexicalBlock(scope: !725, file: !1, line: 12301, column: 9)
!4504 = !DILocation(line: 12301, column: 74, scope: !4503)
!4505 = !DILocation(line: 12301, column: 9, scope: !725)
!4506 = !DILocation(line: 12303, column: 5, scope: !725)
!4507 = !DILocation(line: 12305, column: 28, scope: !725)
!4508 = !DILocation(line: 12306, column: 9, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !725, file: !1, line: 12306, column: 9)
!4510 = !DILocation(line: 12306, column: 74, scope: !4509)
!4511 = !DILocation(line: 12306, column: 9, scope: !725)
!4512 = !DILocation(line: 12308, column: 5, scope: !725)
!4513 = !DILocation(line: 12348, column: 5, scope: !725)
!4514 = !DILocation(line: 12349, column: 5, scope: !725)
!4515 = !DILocation(line: 12351, column: 15, scope: !725)
!4516 = !DILocation(line: 12351, column: 13, scope: !725)
!4517 = !DILocation(line: 12352, column: 10, scope: !4518)
!4518 = distinct !DILexicalBlock(scope: !725, file: !1, line: 12352, column: 9)
!4519 = !DILocation(line: 12352, column: 9, scope: !725)
!4520 = !DILocation(line: 991, column: 42, scope: !3213, inlinedAt: !4521)
!4521 = distinct !DILocation(line: 12360, column: 5, scope: !738)
!4522 = !DILocation(line: 671, column: 28, scope: !3218, inlinedAt: !4523)
!4523 = distinct !DILocation(line: 12361, column: 5, scope: !738)
!4524 = !DILocation(line: 671, column: 37, scope: !3218, inlinedAt: !4523)
!4525 = !DILocation(line: 925, column: 30, scope: !3222, inlinedAt: !4526)
!4526 = distinct !DILocation(line: 12362, column: 5, scope: !738)
!4527 = !DILocation(line: 671, column: 28, scope: !3218, inlinedAt: !4528)
!4528 = distinct !DILocation(line: 928, column: 10, scope: !4529, inlinedAt: !4526)
!4529 = distinct !DILexicalBlock(scope: !3222, file: !1, line: 928, column: 9)
!4530 = !DILocation(line: 671, column: 37, scope: !3218, inlinedAt: !4528)
!4531 = !DILocation(line: 927, column: 9, scope: !3222, inlinedAt: !4526)
!4532 = !DILocation(line: 12369, column: 12, scope: !725)
!4533 = !DILocation(line: 12211, column: 15, scope: !725)
!4534 = !DILocation(line: 12370, column: 10, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !725, file: !1, line: 12370, column: 9)
!4536 = !DILocation(line: 12370, column: 9, scope: !725)
!4537 = !DILocation(line: 12373, column: 59, scope: !740)
!4538 = !DILocation(line: 12373, column: 29, scope: !740)
!4539 = !DILocation(line: 12373, column: 19, scope: !740)
!4540 = !DILocation(line: 12374, column: 14, scope: !4541)
!4541 = distinct !DILexicalBlock(scope: !740, file: !1, line: 12374, column: 13)
!4542 = !DILocation(line: 12374, column: 13, scope: !740)
!4543 = !DILocation(line: 12376, column: 13, scope: !4544)
!4544 = distinct !DILexicalBlock(scope: !740, file: !1, line: 12376, column: 13)
!4545 = !DILocation(line: 12376, column: 13, scope: !740)
!4546 = !DILocation(line: 12378, column: 9, scope: !4547)
!4547 = !DILexicalBlockFile(scope: !744, file: !1, discriminator: 1)
!4548 = !DILocation(line: 12378, column: 9, scope: !4549)
!4549 = distinct !DILexicalBlock(scope: !744, file: !1, line: 12378, column: 9)
!4550 = !DILocation(line: 12378, column: 9, scope: !744)
!4551 = !DILocation(line: 12378, column: 9, scope: !4552)
!4552 = !DILexicalBlockFile(scope: !4549, file: !1, discriminator: 3)
!4553 = !DILocation(line: 12372, column: 47, scope: !741)
!4554 = !DILocation(line: 12212, column: 12, scope: !725)
!4555 = !DILocation(line: 12372, column: 34, scope: !741)
!4556 = !DILocation(line: 12372, column: 5, scope: !742)
!4557 = !DILocation(line: 12380, column: 5, scope: !725)
!4558 = !DILocation(line: 12384, column: 5, scope: !725)
!4559 = !DILocation(line: 12385, column: 1, scope: !725)
!4560 = !DILocation(line: 2105, column: 30, scope: !3174)
!4561 = !DILocation(line: 2105, column: 46, scope: !3174)
!4562 = !DILocation(line: 2105, column: 62, scope: !3174)
!4563 = !DILocation(line: 2110, column: 33, scope: !3174)
!4564 = !DILocation(line: 2111, column: 10, scope: !4565)
!4565 = distinct !DILexicalBlock(scope: !3174, file: !1, line: 2111, column: 9)
!4566 = !DILocation(line: 2111, column: 9, scope: !3174)
!4567 = !DILocation(line: 2117, column: 21, scope: !3186)
!4568 = !DILocation(line: 2117, column: 13, scope: !3186)
!4569 = !DILocation(line: 2117, column: 34, scope: !3186)
!4570 = !DILocation(line: 2117, column: 13, scope: !3187)
!4571 = !DILocation(line: 2118, column: 13, scope: !4572)
!4572 = !DILexicalBlockFile(scope: !3184, file: !1, discriminator: 1)
!4573 = !DILocation(line: 2118, column: 13, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !3184, file: !1, line: 2118, column: 13)
!4575 = !DILocation(line: 2118, column: 13, scope: !3184)
!4576 = !DILocation(line: 2118, column: 13, scope: !4577)
!4577 = !DILexicalBlockFile(scope: !4574, file: !1, discriminator: 3)
!4578 = !DILocation(line: 2119, column: 13, scope: !3185)
!4579 = !DILocation(line: 2120, column: 36, scope: !3185)
!4580 = !DILocation(line: 2120, column: 34, scope: !3185)
!4581 = !DILocation(line: 2121, column: 9, scope: !3185)
!4582 = !DILocation(line: 2124, column: 1, scope: !3174)
!4583 = !DILocation(line: 5621, column: 31, scope: !3190)
!4584 = !DILocation(line: 5621, column: 47, scope: !3190)
!4585 = !DILocation(line: 5621, column: 63, scope: !3190)
!4586 = !DILocation(line: 5623, column: 5, scope: !3190)
!4587 = !DILocation(line: 5623, column: 21, scope: !3190)
!4588 = !DILocation(line: 5626, column: 10, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !3190, file: !1, line: 5626, column: 9)
!4590 = !DILocation(line: 5626, column: 9, scope: !3190)
!4591 = !DILocation(line: 5628, column: 11, scope: !3190)
!4592 = !DILocation(line: 5623, column: 15, scope: !3190)
!4593 = !DILocation(line: 5629, column: 10, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !3190, file: !1, line: 5629, column: 9)
!4595 = !DILocation(line: 5629, column: 9, scope: !3190)
!4596 = !DILocation(line: 5631, column: 5, scope: !3190)
!4597 = !DILocation(line: 5632, column: 5, scope: !3190)
!4598 = !DILocation(line: 5633, column: 5, scope: !3190)
!4599 = !DILocation(line: 5634, column: 1, scope: !3190)
!4600 = !DILocation(line: 671, column: 28, scope: !3218)
!4601 = !DILocation(line: 671, column: 37, scope: !3218)
!4602 = !DILocation(line: 673, column: 11, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !3218, file: !1, line: 673, column: 9)
!4604 = !DILocation(line: 674, column: 10, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4603, file: !1, line: 673, column: 23)
!4606 = !DILocation(line: 673, column: 9, scope: !3218)
!4607 = !DILocation(line: 674, column: 19, scope: !4605)
!4608 = !DILocation(line: 675, column: 9, scope: !4605)
!4609 = !DILocation(line: 677, column: 12, scope: !3218)
!4610 = !DILocation(line: 677, column: 5, scope: !3218)
!4611 = !DILocation(line: 678, column: 1, scope: !3218)
!4612 = !DILocation(line: 2480, column: 22, scope: !745)
!4613 = !DILocation(line: 2480, column: 40, scope: !745)
!4614 = !DILocation(line: 2480, column: 56, scope: !745)
!4615 = !DILocation(line: 2482, column: 15, scope: !745)
!4616 = !DILocation(line: 2484, column: 5, scope: !745)
!4617 = !DILocation(line: 2484, column: 12, scope: !745)
!4618 = !DILocation(line: 2485, column: 5, scope: !745)
!4619 = !DILocation(line: 2485, column: 9, scope: !745)
!4620 = !DILocation(line: 2486, column: 5, scope: !745)
!4621 = !DILocation(line: 2486, column: 9, scope: !745)
!4622 = !DILocation(line: 2488, column: 10, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !745, file: !1, line: 2488, column: 9)
!4624 = !DILocation(line: 2488, column: 9, scope: !745)
!4625 = !DILocation(line: 2492, column: 48, scope: !745)
!4626 = !DILocation(line: 2492, column: 56, scope: !745)
!4627 = !DILocation(line: 2502, column: 27, scope: !817, inlinedAt: !4628)
!4628 = distinct !DILocation(line: 2492, column: 20, scope: !745)
!4629 = !DILocation(line: 2505, column: 12, scope: !817, inlinedAt: !4628)
!4630 = !DILocation(line: 2492, column: 5, scope: !745)
!4631 = !DILocation(line: 781, column: 22, scope: !1050, inlinedAt: !4632)
!4632 = distinct !DILocation(line: 2496, column: 5, scope: !745)
!4633 = !DILocation(line: 782, column: 15, scope: !1058, inlinedAt: !4632)
!4634 = !{!4635, !3871, i64 64}
!4635 = !{!"", !3871, i64 0, !3871, i64 8, !3882, i64 16, !3882, i64 20, !3871, i64 24, !3871, i64 32, !3882, i64 40, !3877, i64 48, !3871, i64 56, !3871, i64 64}
!4636 = !DILocation(line: 782, column: 9, scope: !1058, inlinedAt: !4632)
!4637 = !DILocation(line: 782, column: 9, scope: !1050, inlinedAt: !4632)
!4638 = !DILocation(line: 783, column: 9, scope: !4639, inlinedAt: !4632)
!4639 = !DILexicalBlockFile(scope: !1056, file: !1, discriminator: 1)
!4640 = !DILocation(line: 783, column: 9, scope: !4641, inlinedAt: !4632)
!4641 = !DILexicalBlockFile(scope: !1061, file: !1, discriminator: 2)
!4642 = !DILocation(line: 783, column: 9, scope: !4643, inlinedAt: !4632)
!4643 = !DILexicalBlockFile(scope: !1060, file: !1, discriminator: 4)
!4644 = !DILocation(line: 783, column: 9, scope: !4645, inlinedAt: !4632)
!4645 = distinct !DILexicalBlock(scope: !1060, file: !1, line: 783, column: 9)
!4646 = !DILocation(line: 783, column: 9, scope: !1060, inlinedAt: !4632)
!4647 = !DILocation(line: 783, column: 9, scope: !4648, inlinedAt: !4632)
!4648 = !DILexicalBlockFile(scope: !4645, file: !1, discriminator: 6)
!4649 = !DILocation(line: 2496, column: 5, scope: !745)
!4650 = !DILocation(line: 2499, column: 1, scope: !745)
!4651 = !DILocation(line: 2498, column: 5, scope: !745)
!4652 = !DILocation(line: 2622, column: 24, scope: !1063)
!4653 = !DILocation(line: 2622, column: 42, scope: !1063)
!4654 = !DILocation(line: 2622, column: 58, scope: !1063)
!4655 = !DILocation(line: 2624, column: 15, scope: !1063)
!4656 = !DILocation(line: 2626, column: 5, scope: !1063)
!4657 = !DILocation(line: 2626, column: 12, scope: !1063)
!4658 = !DILocation(line: 2627, column: 5, scope: !1063)
!4659 = !DILocation(line: 2628, column: 5, scope: !1063)
!4660 = !DILocation(line: 2628, column: 9, scope: !1063)
!4661 = !DILocation(line: 2629, column: 5, scope: !1063)
!4662 = !DILocation(line: 2629, column: 9, scope: !1063)
!4663 = !DILocation(line: 2630, column: 5, scope: !1063)
!4664 = !DILocation(line: 2630, column: 9, scope: !1063)
!4665 = !DILocation(line: 2627, column: 9, scope: !1063)
!4666 = !DILocation(line: 2632, column: 10, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !1063, file: !1, line: 2632, column: 9)
!4668 = !DILocation(line: 2632, column: 9, scope: !1063)
!4669 = !DILocation(line: 2636, column: 50, scope: !1063)
!4670 = !DILocation(line: 2636, column: 56, scope: !1063)
!4671 = !DILocation(line: 2636, column: 64, scope: !1063)
!4672 = !DILocation(line: 2636, column: 79, scope: !1063)
!4673 = !DILocation(line: 2646, column: 29, scope: !1074, inlinedAt: !4674)
!4674 = distinct !DILocation(line: 2636, column: 20, scope: !1063)
!4675 = !DILocation(line: 2649, column: 15, scope: !1074, inlinedAt: !4674)
!4676 = !DILocation(line: 2690, column: 5, scope: !1087, inlinedAt: !4674)
!4677 = !DILocation(line: 2692, column: 17, scope: !1090, inlinedAt: !4674)
!4678 = !DILocation(line: 2693, column: 9, scope: !1090, inlinedAt: !4674)
!4679 = !DILocation(line: 2692, column: 36, scope: !1090, inlinedAt: !4674)
!4680 = !DILocation(line: 2694, column: 10, scope: !1090, inlinedAt: !4674)
!4681 = !DILocation(line: 2704, column: 31, scope: !1090, inlinedAt: !4674)
!4682 = !DILocation(line: 2695, column: 13, scope: !1089, inlinedAt: !4674)
!4683 = !DILocation(line: 2696, column: 13, scope: !1089, inlinedAt: !4674)
!4684 = !DILocation(line: 2699, column: 19, scope: !4685, inlinedAt: !4674)
!4685 = distinct !DILexicalBlock(scope: !1089, file: !1, line: 2698, column: 13)
!4686 = !DILocation(line: 2698, column: 13, scope: !1089, inlinedAt: !4674)
!4687 = !DILocation(line: 2700, column: 18, scope: !1089, inlinedAt: !4674)
!4688 = !DILocation(line: 2654, column: 9, scope: !1074, inlinedAt: !4674)
!4689 = !DILocation(line: 2701, column: 5, scope: !1089, inlinedAt: !4674)
!4690 = !DILocation(line: 2704, column: 18, scope: !1090, inlinedAt: !4674)
!4691 = !DILocation(line: 2636, column: 20, scope: !1063)
!4692 = !DILocation(line: 2705, column: 5, scope: !1087, inlinedAt: !4674)
!4693 = !DILocation(line: 2706, column: 36, scope: !1074, inlinedAt: !4674)
!4694 = !DILocation(line: 2706, column: 20, scope: !1074, inlinedAt: !4674)
!4695 = !DILocation(line: 2636, column: 5, scope: !1063)
!4696 = !DILocation(line: 781, column: 22, scope: !1050, inlinedAt: !4697)
!4697 = distinct !DILocation(line: 2640, column: 5, scope: !1063)
!4698 = !DILocation(line: 782, column: 15, scope: !1058, inlinedAt: !4697)
!4699 = !DILocation(line: 782, column: 9, scope: !1058, inlinedAt: !4697)
!4700 = !DILocation(line: 782, column: 9, scope: !1050, inlinedAt: !4697)
!4701 = !DILocation(line: 783, column: 9, scope: !4639, inlinedAt: !4697)
!4702 = !DILocation(line: 783, column: 9, scope: !4641, inlinedAt: !4697)
!4703 = !DILocation(line: 783, column: 9, scope: !4643, inlinedAt: !4697)
!4704 = !DILocation(line: 783, column: 9, scope: !4645, inlinedAt: !4697)
!4705 = !DILocation(line: 783, column: 9, scope: !1060, inlinedAt: !4697)
!4706 = !DILocation(line: 783, column: 9, scope: !4648, inlinedAt: !4697)
!4707 = !DILocation(line: 2640, column: 5, scope: !1063)
!4708 = !DILocation(line: 2643, column: 1, scope: !1063)
!4709 = !DILocation(line: 2642, column: 5, scope: !1063)
!4710 = !DILocation(line: 2758, column: 25, scope: !1091)
!4711 = !DILocation(line: 2758, column: 43, scope: !1091)
!4712 = !DILocation(line: 2760, column: 15, scope: !1091)
!4713 = !DILocation(line: 2761, column: 5, scope: !1091)
!4714 = !DILocation(line: 2761, column: 9, scope: !1091)
!4715 = !DILocation(line: 2764, column: 10, scope: !4716)
!4716 = distinct !DILexicalBlock(scope: !1091, file: !1, line: 2764, column: 9)
!4717 = !DILocation(line: 2764, column: 9, scope: !1091)
!4718 = !DILocation(line: 2768, column: 45, scope: !1091)
!4719 = !DILocation(line: 2778, column: 30, scope: !1100, inlinedAt: !4720)
!4720 = distinct !DILocation(line: 2768, column: 21, scope: !1091)
!4721 = !DILocation(line: 2783, column: 11, scope: !1100, inlinedAt: !4720)
!4722 = !DILocation(line: 2781, column: 11, scope: !1100, inlinedAt: !4720)
!4723 = !DILocation(line: 2784, column: 13, scope: !4724, inlinedAt: !4720)
!4724 = distinct !DILexicalBlock(scope: !1100, file: !1, line: 2784, column: 9)
!4725 = !DILocation(line: 2784, column: 9, scope: !1100, inlinedAt: !4720)
!4726 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !4727)
!4727 = distinct !DILocation(line: 2785, column: 9, scope: !4724, inlinedAt: !4720)
!4728 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !4727)
!4729 = !DILocation(line: 2762, column: 11, scope: !1091)
!4730 = !DILocation(line: 2769, column: 9, scope: !1091)
!4731 = !DILocation(line: 2771, column: 20, scope: !1091)
!4732 = !DILocation(line: 2771, column: 5, scope: !1091)
!4733 = !DILocation(line: 2775, column: 1, scope: !1091)
!4734 = !DILocation(line: 2774, column: 5, scope: !1091)
!4735 = !DILocation(line: 2823, column: 23, scope: !1109)
!4736 = !DILocation(line: 2823, column: 39, scope: !1109)
!4737 = !DILocation(line: 2823, column: 55, scope: !1109)
!4738 = !DILocation(line: 2825, column: 5, scope: !1109)
!4739 = !DILocation(line: 2827, column: 15, scope: !1109)
!4740 = !DILocation(line: 2830, column: 5, scope: !1109)
!4741 = !DILocation(line: 2831, column: 10, scope: !1109)
!4742 = !DILocation(line: 2831, column: 24, scope: !1109)
!4743 = !{!4635, !3871, i64 0}
!4744 = !DILocation(line: 2833, column: 10, scope: !1109)
!4745 = !DILocation(line: 2833, column: 19, scope: !1109)
!4746 = !{!4635, !3882, i64 20}
!4747 = !DILocation(line: 2825, column: 12, scope: !1109)
!4748 = !DILocation(line: 2835, column: 10, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !1109, file: !1, line: 2835, column: 9)
!4750 = !DILocation(line: 2835, column: 9, scope: !1109)
!4751 = !DILocation(line: 2840, column: 5, scope: !1118)
!4752 = !DILocation(line: 2849, column: 14, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !1118, file: !1, line: 2849, column: 9)
!4754 = !{!4635, !3882, i64 40}
!4755 = !DILocation(line: 2849, column: 17, scope: !4753)
!4756 = !DILocation(line: 2849, column: 9, scope: !1118)
!4757 = !DILocation(line: 2850, column: 18, scope: !4753)
!4758 = !DILocation(line: 2826, column: 9, scope: !1109)
!4759 = !DILocation(line: 2850, column: 9, scope: !4753)
!4760 = !DILocation(line: 2853, column: 29, scope: !4753)
!4761 = !{!4635, !3871, i64 32}
!4762 = !DILocation(line: 2853, column: 18, scope: !4753)
!4763 = !DILocation(line: 2855, column: 5, scope: !1118)
!4764 = !DILocation(line: 2857, column: 9, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !1109, file: !1, line: 2857, column: 9)
!4766 = !DILocation(line: 2857, column: 9, scope: !1109)
!4767 = !{!4635, !3871, i64 56}
!4768 = !DILocation(line: 1311, column: 49, scope: !992, inlinedAt: !4769)
!4769 = distinct !DILocation(line: 2858, column: 24, scope: !4770)
!4770 = distinct !DILexicalBlock(scope: !4765, file: !1, line: 2857, column: 17)
!4771 = !DILocation(line: 1311, column: 12, scope: !992, inlinedAt: !4769)
!4772 = !DILocation(line: 2859, column: 9, scope: !4770)
!4773 = !DILocation(line: 2863, column: 5, scope: !1109)
!4774 = !DILocation(line: 781, column: 22, scope: !1050, inlinedAt: !4775)
!4775 = distinct !DILocation(line: 2866, column: 5, scope: !1109)
!4776 = !DILocation(line: 782, column: 15, scope: !1058, inlinedAt: !4775)
!4777 = !DILocation(line: 782, column: 9, scope: !1058, inlinedAt: !4775)
!4778 = !DILocation(line: 782, column: 9, scope: !1050, inlinedAt: !4775)
!4779 = !DILocation(line: 783, column: 9, scope: !4639, inlinedAt: !4775)
!4780 = !DILocation(line: 783, column: 9, scope: !4641, inlinedAt: !4775)
!4781 = !DILocation(line: 783, column: 9, scope: !4643, inlinedAt: !4775)
!4782 = !DILocation(line: 783, column: 9, scope: !4645, inlinedAt: !4775)
!4783 = !DILocation(line: 783, column: 9, scope: !1060, inlinedAt: !4775)
!4784 = !DILocation(line: 783, column: 9, scope: !4648, inlinedAt: !4775)
!4785 = !DILocation(line: 2866, column: 5, scope: !1109)
!4786 = !DILocation(line: 2868, column: 1, scope: !1109)
!4787 = !DILocation(line: 2902, column: 23, scope: !1119)
!4788 = !DILocation(line: 2902, column: 39, scope: !1119)
!4789 = !DILocation(line: 2902, column: 55, scope: !1119)
!4790 = !DILocation(line: 2904, column: 5, scope: !1119)
!4791 = !DILocation(line: 2905, column: 5, scope: !1119)
!4792 = !DILocation(line: 2906, column: 5, scope: !1119)
!4793 = !DILocation(line: 2906, column: 9, scope: !1119)
!4794 = !DILocation(line: 2907, column: 5, scope: !1119)
!4795 = !DILocation(line: 2907, column: 9, scope: !1119)
!4796 = !DILocation(line: 2909, column: 15, scope: !1119)
!4797 = !DILocation(line: 2918, column: 9, scope: !1119)
!4798 = !DILocation(line: 2921, column: 5, scope: !1119)
!4799 = !DILocation(line: 2922, column: 10, scope: !1119)
!4800 = !DILocation(line: 2922, column: 24, scope: !1119)
!4801 = !DILocation(line: 2924, column: 10, scope: !1119)
!4802 = !DILocation(line: 2924, column: 19, scope: !1119)
!4803 = !DILocation(line: 2904, column: 12, scope: !1119)
!4804 = !DILocation(line: 2905, column: 9, scope: !1119)
!4805 = !DILocation(line: 2926, column: 10, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !1119, file: !1, line: 2926, column: 9)
!4807 = !DILocation(line: 2926, column: 9, scope: !1119)
!4808 = !DILocation(line: 2967, column: 5, scope: !1132)
!4809 = !DILocation(line: 2969, column: 14, scope: !4810)
!4810 = distinct !DILexicalBlock(scope: !1132, file: !1, line: 2969, column: 9)
!4811 = !DILocation(line: 2969, column: 17, scope: !4810)
!4812 = !DILocation(line: 2969, column: 9, scope: !1132)
!4813 = !DILocation(line: 2970, column: 34, scope: !4810)
!4814 = !DILocation(line: 2970, column: 18, scope: !4810)
!4815 = !DILocation(line: 2908, column: 9, scope: !1119)
!4816 = !DILocation(line: 2970, column: 9, scope: !4810)
!4817 = !DILocation(line: 2979, column: 10, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4810, file: !1, line: 2979, column: 9)
!4819 = !DILocation(line: 2979, column: 17, scope: !4818)
!4820 = !DILocation(line: 2979, column: 40, scope: !4821)
!4821 = !DILexicalBlockFile(scope: !4818, file: !1, discriminator: 1)
!4822 = !DILocation(line: 2979, column: 36, scope: !4818)
!4823 = !DILocation(line: 3003, column: 29, scope: !4818)
!4824 = !DILocation(line: 3003, column: 37, scope: !4818)
!4825 = !DILocation(line: 2991, column: 27, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4818, file: !1, line: 2979, column: 57)
!4827 = !DILocation(line: 2990, column: 18, scope: !4826)
!4828 = !DILocation(line: 2997, column: 26, scope: !4826)
!4829 = !DILocation(line: 2997, column: 33, scope: !4826)
!4830 = !DILocation(line: 2998, column: 28, scope: !4826)
!4831 = !DILocation(line: 2998, column: 34, scope: !4826)
!4832 = !DILocation(line: 2998, column: 46, scope: !4826)
!4833 = !DILocation(line: 2999, column: 27, scope: !4826)
!4834 = !DILocation(line: 2999, column: 26, scope: !4826)
!4835 = !DILocation(line: 2998, column: 72, scope: !4836)
!4836 = !DILexicalBlockFile(scope: !4826, file: !1, discriminator: 2)
!4837 = !DILocation(line: 3000, column: 5, scope: !4826)
!4838 = !DILocation(line: 3003, column: 18, scope: !4818)
!4839 = !DILocation(line: 3004, column: 5, scope: !1132)
!4840 = !DILocation(line: 3006, column: 9, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !1119, file: !1, line: 3006, column: 9)
!4842 = !DILocation(line: 3006, column: 9, scope: !1119)
!4843 = !DILocation(line: 3008, column: 13, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !4845, file: !1, line: 3008, column: 13)
!4845 = distinct !DILexicalBlock(scope: !4841, file: !1, line: 3006, column: 17)
!4846 = !DILocation(line: 3008, column: 13, scope: !4845)
!4847 = !DILocation(line: 3009, column: 17, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4849, file: !1, line: 3009, column: 17)
!4849 = distinct !DILexicalBlock(scope: !4844, file: !1, line: 3008, column: 44)
!4850 = !DILocation(line: 3009, column: 24, scope: !4848)
!4851 = !DILocation(line: 3013, column: 52, scope: !4848)
!4852 = !DILocation(line: 949, column: 9, scope: !4853, inlinedAt: !4854)
!4853 = distinct !DILexicalBlock(scope: !3209, file: !1, line: 949, column: 9)
!4854 = distinct !DILocation(line: 3013, column: 17, scope: !4848)
!4855 = !DILocation(line: 3009, column: 17, scope: !4849)
!4856 = !DILocation(line: 991, column: 42, scope: !3213, inlinedAt: !4857)
!4857 = distinct !DILocation(line: 3010, column: 17, scope: !4848)
!4858 = !DILocation(line: 993, column: 36, scope: !4859, inlinedAt: !4857)
!4859 = distinct !DILexicalBlock(scope: !3213, file: !1, line: 993, column: 9)
!4860 = !DILocation(line: 994, column: 22, scope: !4861, inlinedAt: !4857)
!4861 = distinct !DILexicalBlock(scope: !4859, file: !1, line: 993, column: 59)
!4862 = !DILocation(line: 994, column: 9, scope: !4861, inlinedAt: !4857)
!4863 = !DILocation(line: 997, column: 9, scope: !4861, inlinedAt: !4857)
!4864 = !DILocation(line: 949, column: 9, scope: !3209, inlinedAt: !4854)
!4865 = !DILocation(line: 916, column: 34, scope: !3203, inlinedAt: !4866)
!4866 = distinct !DILocation(line: 952, column: 5, scope: !3209, inlinedAt: !4854)
!4867 = !DILocation(line: 916, column: 55, scope: !3203, inlinedAt: !4866)
!4868 = !DILocation(line: 917, column: 18, scope: !3203, inlinedAt: !4866)
!4869 = !DILocation(line: 917, column: 5, scope: !3203, inlinedAt: !4866)
!4870 = !DILocation(line: 953, column: 5, scope: !3209, inlinedAt: !4854)
!4871 = !DILocation(line: 1311, column: 49, scope: !992, inlinedAt: !4872)
!4872 = distinct !DILocation(line: 3017, column: 28, scope: !4844)
!4873 = !DILocation(line: 1311, column: 12, scope: !992, inlinedAt: !4872)
!4874 = !DILocation(line: 3022, column: 5, scope: !1119)
!4875 = !DILocation(line: 3023, column: 5, scope: !1119)
!4876 = !DILocation(line: 781, column: 22, scope: !1050, inlinedAt: !4877)
!4877 = distinct !DILocation(line: 3025, column: 5, scope: !1119)
!4878 = !DILocation(line: 782, column: 15, scope: !1058, inlinedAt: !4877)
!4879 = !DILocation(line: 782, column: 9, scope: !1058, inlinedAt: !4877)
!4880 = !DILocation(line: 782, column: 9, scope: !1050, inlinedAt: !4877)
!4881 = !DILocation(line: 783, column: 9, scope: !4639, inlinedAt: !4877)
!4882 = !DILocation(line: 783, column: 9, scope: !4641, inlinedAt: !4877)
!4883 = !DILocation(line: 783, column: 9, scope: !4643, inlinedAt: !4877)
!4884 = !DILocation(line: 783, column: 9, scope: !4645, inlinedAt: !4877)
!4885 = !DILocation(line: 783, column: 9, scope: !1060, inlinedAt: !4877)
!4886 = !DILocation(line: 783, column: 9, scope: !4648, inlinedAt: !4877)
!4887 = !DILocation(line: 3025, column: 5, scope: !1119)
!4888 = !DILocation(line: 3027, column: 1, scope: !1119)
!4889 = !DILocation(line: 3037, column: 24, scope: !1133)
!4890 = !DILocation(line: 3037, column: 40, scope: !1133)
!4891 = !DILocation(line: 3039, column: 5, scope: !1133)
!4892 = !DILocation(line: 3039, column: 9, scope: !1133)
!4893 = !DILocation(line: 3039, column: 13, scope: !1133)
!4894 = !DILocation(line: 3040, column: 10, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !1133, file: !1, line: 3040, column: 9)
!4896 = !DILocation(line: 3040, column: 9, scope: !1133)
!4897 = !DILocation(line: 3042, column: 5, scope: !1141)
!4898 = !DILocation(line: 3043, column: 18, scope: !1141)
!4899 = !DILocation(line: 3043, column: 22, scope: !1141)
!4900 = !DILocation(line: 3043, column: 11, scope: !1141)
!4901 = !DILocation(line: 3039, column: 19, scope: !1133)
!4902 = !DILocation(line: 3044, column: 5, scope: !1141)
!4903 = !DILocation(line: 3045, column: 13, scope: !4904)
!4904 = distinct !DILexicalBlock(scope: !1133, file: !1, line: 3045, column: 9)
!4905 = !DILocation(line: 3045, column: 9, scope: !1133)
!4906 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !4907)
!4907 = distinct !DILocation(line: 3046, column: 16, scope: !4904)
!4908 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !4907)
!4909 = !DILocation(line: 3046, column: 9, scope: !4904)
!4910 = !DILocation(line: 3047, column: 5, scope: !1133)
!4911 = !DILocation(line: 3048, column: 1, scope: !1133)
!4912 = !DILocation(line: 3247, column: 23, scope: !1142)
!4913 = !DILocation(line: 3247, column: 39, scope: !1142)
!4914 = !DILocation(line: 3247, column: 55, scope: !1142)
!4915 = !DILocation(line: 3249, column: 5, scope: !1142)
!4916 = !DILocation(line: 3250, column: 5, scope: !1142)
!4917 = !DILocation(line: 3251, column: 5, scope: !1142)
!4918 = !DILocation(line: 3252, column: 5, scope: !1142)
!4919 = !DILocation(line: 3252, column: 9, scope: !1142)
!4920 = !DILocation(line: 3253, column: 5, scope: !1142)
!4921 = !DILocation(line: 3253, column: 9, scope: !1142)
!4922 = !DILocation(line: 3255, column: 15, scope: !1142)
!4923 = !DILocation(line: 3259, column: 5, scope: !1142)
!4924 = !DILocation(line: 3260, column: 10, scope: !1142)
!4925 = !DILocation(line: 3260, column: 24, scope: !1142)
!4926 = !DILocation(line: 3262, column: 10, scope: !1142)
!4927 = !DILocation(line: 3262, column: 19, scope: !1142)
!4928 = !DILocation(line: 3249, column: 12, scope: !1142)
!4929 = !DILocation(line: 3250, column: 11, scope: !1142)
!4930 = !DILocation(line: 3251, column: 11, scope: !1142)
!4931 = !DILocation(line: 3264, column: 10, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !1142, file: !1, line: 3264, column: 9)
!4933 = !DILocation(line: 3264, column: 9, scope: !1142)
!4934 = !DILocation(line: 3280, column: 40, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !1142, file: !1, line: 3280, column: 9)
!4936 = !DILocation(line: 3280, column: 53, scope: !4935)
!4937 = !DILocation(line: 3281, column: 54, scope: !4935)
!4938 = !DILocation(line: 968, column: 29, scope: !935, inlinedAt: !4939)
!4939 = distinct !DILocation(line: 3280, column: 9, scope: !4935)
!4940 = !DILocation(line: 968, column: 48, scope: !935, inlinedAt: !4939)
!4941 = !DILocation(line: 968, column: 60, scope: !935, inlinedAt: !4939)
!4942 = !DILocation(line: 969, column: 17, scope: !4943, inlinedAt: !4939)
!4943 = distinct !DILexicalBlock(scope: !935, file: !1, line: 969, column: 9)
!4944 = !DILocation(line: 969, column: 43, scope: !4943, inlinedAt: !4939)
!4945 = !DILocation(line: 969, column: 36, scope: !4943, inlinedAt: !4939)
!4946 = !DILocation(line: 970, column: 22, scope: !4947, inlinedAt: !4939)
!4947 = distinct !DILexicalBlock(scope: !4943, file: !1, line: 969, column: 51)
!4948 = !DILocation(line: 970, column: 9, scope: !4947, inlinedAt: !4939)
!4949 = !DILocation(line: 3280, column: 57, scope: !4935)
!4950 = !DILocation(line: 3281, column: 58, scope: !4935)
!4951 = !DILocation(line: 979, column: 38, scope: !942, inlinedAt: !4952)
!4952 = distinct !DILocation(line: 3281, column: 9, scope: !4935)
!4953 = !DILocation(line: 979, column: 57, scope: !942, inlinedAt: !4952)
!4954 = !DILocation(line: 980, column: 36, scope: !942, inlinedAt: !4952)
!4955 = !DILocation(line: 981, column: 13, scope: !4956, inlinedAt: !4952)
!4956 = distinct !DILexicalBlock(scope: !942, file: !1, line: 981, column: 9)
!4957 = !DILocation(line: 981, column: 23, scope: !4958, inlinedAt: !4952)
!4958 = !DILexicalBlockFile(scope: !4956, file: !1, discriminator: 1)
!4959 = !DILocation(line: 981, column: 18, scope: !4956, inlinedAt: !4952)
!4960 = !DILocation(line: 982, column: 22, scope: !4961, inlinedAt: !4952)
!4961 = distinct !DILexicalBlock(scope: !4956, file: !1, line: 981, column: 41)
!4962 = !DILocation(line: 982, column: 9, scope: !4961, inlinedAt: !4952)
!4963 = !DILocation(line: 3280, column: 9, scope: !1142)
!4964 = !DILocation(line: 3297, column: 5, scope: !1155)
!4965 = !DILocation(line: 3299, column: 14, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !1155, file: !1, line: 3299, column: 9)
!4967 = !DILocation(line: 3299, column: 17, scope: !4966)
!4968 = !DILocation(line: 3299, column: 9, scope: !1155)
!4969 = !DILocation(line: 3300, column: 34, scope: !4966)
!4970 = !DILocation(line: 3300, column: 39, scope: !4966)
!4971 = !DILocation(line: 3300, column: 18, scope: !4966)
!4972 = !DILocation(line: 3254, column: 9, scope: !1142)
!4973 = !DILocation(line: 3300, column: 9, scope: !4966)
!4974 = !DILocation(line: 3304, column: 11, scope: !4975)
!4975 = distinct !DILexicalBlock(scope: !4966, file: !1, line: 3304, column: 9)
!4976 = !DILocation(line: 3304, column: 39, scope: !4975)
!4977 = !DILocation(line: 3304, column: 28, scope: !4975)
!4978 = !DILocation(line: 3305, column: 30, scope: !4975)
!4979 = !DILocation(line: 3305, column: 38, scope: !4975)
!4980 = !DILocation(line: 3305, column: 43, scope: !4975)
!4981 = !DILocation(line: 3305, column: 18, scope: !4975)
!4982 = !DILocation(line: 3305, column: 9, scope: !4975)
!4983 = !DILocation(line: 3309, column: 41, scope: !4984)
!4984 = !DILexicalBlockFile(scope: !4985, file: !1, discriminator: 1)
!4985 = distinct !DILexicalBlock(scope: !4975, file: !1, line: 3309, column: 9)
!4986 = !DILocation(line: 3309, column: 36, scope: !4985)
!4987 = !DILocation(line: 3314, column: 29, scope: !4985)
!4988 = !DILocation(line: 3314, column: 37, scope: !4985)
!4989 = !DILocation(line: 3314, column: 42, scope: !4985)
!4990 = !DILocation(line: 3311, column: 27, scope: !4985)
!4991 = !DILocation(line: 3310, column: 18, scope: !4985)
!4992 = !DILocation(line: 3310, column: 9, scope: !4985)
!4993 = !DILocation(line: 3314, column: 18, scope: !4985)
!4994 = !DILocation(line: 3315, column: 5, scope: !1155)
!4995 = !DILocation(line: 3317, column: 9, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !1142, file: !1, line: 3317, column: 9)
!4997 = !DILocation(line: 3317, column: 9, scope: !1142)
!4998 = !DILocation(line: 1311, column: 49, scope: !992, inlinedAt: !4999)
!4999 = distinct !DILocation(line: 3318, column: 24, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !4996, file: !1, line: 3317, column: 17)
!5001 = !DILocation(line: 1311, column: 12, scope: !992, inlinedAt: !4999)
!5002 = !DILocation(line: 3319, column: 9, scope: !5000)
!5003 = !DILocation(line: 3323, column: 5, scope: !1142)
!5004 = !DILocation(line: 781, column: 22, scope: !1050, inlinedAt: !5005)
!5005 = distinct !DILocation(line: 3326, column: 5, scope: !1142)
!5006 = !DILocation(line: 782, column: 15, scope: !1058, inlinedAt: !5005)
!5007 = !DILocation(line: 782, column: 9, scope: !1058, inlinedAt: !5005)
!5008 = !DILocation(line: 782, column: 9, scope: !1050, inlinedAt: !5005)
!5009 = !DILocation(line: 783, column: 9, scope: !4639, inlinedAt: !5005)
!5010 = !DILocation(line: 783, column: 9, scope: !4641, inlinedAt: !5005)
!5011 = !DILocation(line: 783, column: 9, scope: !4643, inlinedAt: !5005)
!5012 = !DILocation(line: 783, column: 9, scope: !4645, inlinedAt: !5005)
!5013 = !DILocation(line: 783, column: 9, scope: !1060, inlinedAt: !5005)
!5014 = !DILocation(line: 783, column: 9, scope: !4648, inlinedAt: !5005)
!5015 = !DILocation(line: 3326, column: 5, scope: !1142)
!5016 = !DILocation(line: 3328, column: 1, scope: !1142)
!5017 = !DILocation(line: 3338, column: 24, scope: !1156)
!5018 = !DILocation(line: 3338, column: 40, scope: !1156)
!5019 = !DILocation(line: 3340, column: 5, scope: !1156)
!5020 = !DILocation(line: 3341, column: 5, scope: !1156)
!5021 = !DILocation(line: 3342, column: 5, scope: !1156)
!5022 = !DILocation(line: 3340, column: 9, scope: !1156)
!5023 = !DILocation(line: 3341, column: 11, scope: !1156)
!5024 = !DILocation(line: 3342, column: 11, scope: !1156)
!5025 = !DILocation(line: 3344, column: 10, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !1156, file: !1, line: 3344, column: 9)
!5027 = !DILocation(line: 3344, column: 9, scope: !1156)
!5028 = !DILocation(line: 3348, column: 5, scope: !1165)
!5029 = !DILocation(line: 3349, column: 18, scope: !1165)
!5030 = !DILocation(line: 3349, column: 22, scope: !1165)
!5031 = !DILocation(line: 3349, column: 27, scope: !1165)
!5032 = !DILocation(line: 3349, column: 11, scope: !1165)
!5033 = !DILocation(line: 3343, column: 9, scope: !1156)
!5034 = !DILocation(line: 3350, column: 5, scope: !1165)
!5035 = !DILocation(line: 3351, column: 13, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !1156, file: !1, line: 3351, column: 9)
!5037 = !DILocation(line: 3351, column: 9, scope: !1156)
!5038 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !5039)
!5039 = distinct !DILocation(line: 3352, column: 16, scope: !5036)
!5040 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !5039)
!5041 = !DILocation(line: 3352, column: 9, scope: !5036)
!5042 = !DILocation(line: 3353, column: 5, scope: !1156)
!5043 = !DILocation(line: 3354, column: 1, scope: !1156)
!5044 = !DILocation(line: 3365, column: 24, scope: !1166)
!5045 = !DILocation(line: 3365, column: 40, scope: !1166)
!5046 = !DILocation(line: 3367, column: 5, scope: !1166)
!5047 = !DILocation(line: 3368, column: 5, scope: !1166)
!5048 = !DILocation(line: 3369, column: 5, scope: !1166)
!5049 = !DILocation(line: 3371, column: 5, scope: !1166)
!5050 = !DILocation(line: 3372, column: 10, scope: !1166)
!5051 = !DILocation(line: 3372, column: 24, scope: !1166)
!5052 = !DILocation(line: 3367, column: 12, scope: !1166)
!5053 = !DILocation(line: 3368, column: 11, scope: !1166)
!5054 = !DILocation(line: 3369, column: 11, scope: !1166)
!5055 = !DILocation(line: 3373, column: 10, scope: !5056)
!5056 = distinct !DILexicalBlock(scope: !1166, file: !1, line: 3373, column: 9)
!5057 = !DILocation(line: 3373, column: 9, scope: !1166)
!5058 = !DILocation(line: 3378, column: 5, scope: !1175)
!5059 = !DILocation(line: 3379, column: 23, scope: !1175)
!5060 = !DILocation(line: 3379, column: 31, scope: !1175)
!5061 = !DILocation(line: 3379, column: 36, scope: !1175)
!5062 = !DILocation(line: 3379, column: 11, scope: !1175)
!5063 = !DILocation(line: 3370, column: 9, scope: !1166)
!5064 = !DILocation(line: 3380, column: 5, scope: !1175)
!5065 = !DILocation(line: 3381, column: 13, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !1166, file: !1, line: 3381, column: 9)
!5067 = !DILocation(line: 3381, column: 9, scope: !1166)
!5068 = !DILocation(line: 1311, column: 49, scope: !992, inlinedAt: !5069)
!5069 = distinct !DILocation(line: 3382, column: 9, scope: !5070)
!5070 = distinct !DILexicalBlock(scope: !5066, file: !1, line: 3381, column: 18)
!5071 = !DILocation(line: 1311, column: 12, scope: !992, inlinedAt: !5069)
!5072 = !DILocation(line: 781, column: 22, scope: !1050, inlinedAt: !5073)
!5073 = distinct !DILocation(line: 3383, column: 9, scope: !5070)
!5074 = !DILocation(line: 782, column: 15, scope: !1058, inlinedAt: !5073)
!5075 = !DILocation(line: 782, column: 9, scope: !1058, inlinedAt: !5073)
!5076 = !DILocation(line: 782, column: 9, scope: !1050, inlinedAt: !5073)
!5077 = !DILocation(line: 783, column: 9, scope: !4639, inlinedAt: !5073)
!5078 = !DILocation(line: 783, column: 9, scope: !4641, inlinedAt: !5073)
!5079 = !DILocation(line: 783, column: 9, scope: !4643, inlinedAt: !5073)
!5080 = !DILocation(line: 783, column: 9, scope: !4645, inlinedAt: !5073)
!5081 = !DILocation(line: 783, column: 9, scope: !1060, inlinedAt: !5073)
!5082 = !DILocation(line: 783, column: 9, scope: !4648, inlinedAt: !5073)
!5083 = !DILocation(line: 3383, column: 9, scope: !5070)
!5084 = !DILocation(line: 781, column: 22, scope: !1050, inlinedAt: !5085)
!5085 = distinct !DILocation(line: 3386, column: 5, scope: !1166)
!5086 = !DILocation(line: 782, column: 15, scope: !1058, inlinedAt: !5085)
!5087 = !DILocation(line: 782, column: 9, scope: !1058, inlinedAt: !5085)
!5088 = !DILocation(line: 782, column: 9, scope: !1050, inlinedAt: !5085)
!5089 = !DILocation(line: 783, column: 9, scope: !4639, inlinedAt: !5085)
!5090 = !DILocation(line: 783, column: 9, scope: !4641, inlinedAt: !5085)
!5091 = !DILocation(line: 783, column: 9, scope: !4643, inlinedAt: !5085)
!5092 = !DILocation(line: 783, column: 9, scope: !4645, inlinedAt: !5085)
!5093 = !DILocation(line: 783, column: 9, scope: !1060, inlinedAt: !5085)
!5094 = !DILocation(line: 783, column: 9, scope: !4648, inlinedAt: !5085)
!5095 = !DILocation(line: 3386, column: 5, scope: !1166)
!5096 = !DILocation(line: 3387, column: 5, scope: !1166)
!5097 = !DILocation(line: 3388, column: 5, scope: !1166)
!5098 = !DILocation(line: 3389, column: 1, scope: !1166)
!5099 = !DILocation(line: 3176, column: 24, scope: !1176)
!5100 = !DILocation(line: 3176, column: 40, scope: !1176)
!5101 = !DILocation(line: 1351, column: 24, scope: !1180, inlinedAt: !5102)
!5102 = distinct !DILocation(line: 3178, column: 12, scope: !1176)
!5103 = !DILocation(line: 1351, column: 57, scope: !1180, inlinedAt: !5102)
!5104 = !DILocation(line: 1352, column: 18, scope: !1180, inlinedAt: !5102)
!5105 = !DILocation(line: 1354, column: 5, scope: !1180, inlinedAt: !5102)
!5106 = !DILocation(line: 1356, column: 5, scope: !1180, inlinedAt: !5102)
!5107 = !DILocation(line: 1357, column: 10, scope: !1180, inlinedAt: !5102)
!5108 = !DILocation(line: 1357, column: 24, scope: !1180, inlinedAt: !5102)
!5109 = !DILocation(line: 1354, column: 12, scope: !1180, inlinedAt: !5102)
!5110 = !DILocation(line: 1358, column: 10, scope: !5111, inlinedAt: !5102)
!5111 = distinct !DILexicalBlock(scope: !1180, file: !1, line: 1358, column: 9)
!5112 = !DILocation(line: 1358, column: 9, scope: !1180, inlinedAt: !5102)
!5113 = !DILocation(line: 1361, column: 5, scope: !1194, inlinedAt: !5102)
!5114 = !DILocation(line: 1362, column: 24, scope: !1194, inlinedAt: !5102)
!5115 = !DILocation(line: 1362, column: 11, scope: !1194, inlinedAt: !5102)
!5116 = !DILocation(line: 1355, column: 9, scope: !1180, inlinedAt: !5102)
!5117 = !DILocation(line: 1363, column: 5, scope: !1194, inlinedAt: !5102)
!5118 = !DILocation(line: 1364, column: 13, scope: !5119, inlinedAt: !5102)
!5119 = distinct !DILexicalBlock(scope: !1180, file: !1, line: 1364, column: 9)
!5120 = !DILocation(line: 1364, column: 9, scope: !1180, inlinedAt: !5102)
!5121 = !DILocation(line: 3178, column: 12, scope: !1176)
!5122 = !DILocation(line: 1311, column: 49, scope: !992, inlinedAt: !5123)
!5123 = distinct !DILocation(line: 1365, column: 9, scope: !5124, inlinedAt: !5102)
!5124 = distinct !DILexicalBlock(scope: !5119, file: !1, line: 1364, column: 18)
!5125 = !DILocation(line: 1311, column: 12, scope: !992, inlinedAt: !5123)
!5126 = !DILocation(line: 781, column: 22, scope: !1050, inlinedAt: !5127)
!5127 = distinct !DILocation(line: 1366, column: 9, scope: !5124, inlinedAt: !5102)
!5128 = !DILocation(line: 782, column: 15, scope: !1058, inlinedAt: !5127)
!5129 = !DILocation(line: 782, column: 9, scope: !1058, inlinedAt: !5127)
!5130 = !DILocation(line: 782, column: 9, scope: !1050, inlinedAt: !5127)
!5131 = !DILocation(line: 783, column: 9, scope: !4639, inlinedAt: !5127)
!5132 = !DILocation(line: 783, column: 9, scope: !4641, inlinedAt: !5127)
!5133 = !DILocation(line: 783, column: 9, scope: !4643, inlinedAt: !5127)
!5134 = !DILocation(line: 783, column: 9, scope: !4645, inlinedAt: !5127)
!5135 = !DILocation(line: 783, column: 9, scope: !1060, inlinedAt: !5127)
!5136 = !DILocation(line: 783, column: 9, scope: !4648, inlinedAt: !5127)
!5137 = !DILocation(line: 1366, column: 9, scope: !5124, inlinedAt: !5102)
!5138 = !DILocation(line: 781, column: 22, scope: !1050, inlinedAt: !5139)
!5139 = distinct !DILocation(line: 1369, column: 5, scope: !1180, inlinedAt: !5102)
!5140 = !DILocation(line: 782, column: 15, scope: !1058, inlinedAt: !5139)
!5141 = !DILocation(line: 782, column: 9, scope: !1058, inlinedAt: !5139)
!5142 = !DILocation(line: 782, column: 9, scope: !1050, inlinedAt: !5139)
!5143 = !DILocation(line: 783, column: 9, scope: !4639, inlinedAt: !5139)
!5144 = !DILocation(line: 783, column: 9, scope: !4641, inlinedAt: !5139)
!5145 = !DILocation(line: 783, column: 9, scope: !4643, inlinedAt: !5139)
!5146 = !DILocation(line: 783, column: 9, scope: !4645, inlinedAt: !5139)
!5147 = !DILocation(line: 783, column: 9, scope: !1060, inlinedAt: !5139)
!5148 = !DILocation(line: 783, column: 9, scope: !4648, inlinedAt: !5139)
!5149 = !DILocation(line: 1369, column: 5, scope: !1180, inlinedAt: !5102)
!5150 = !DILocation(line: 1370, column: 5, scope: !1180, inlinedAt: !5102)
!5151 = !DILocation(line: 1371, column: 5, scope: !1180, inlinedAt: !5102)
!5152 = !DILocation(line: 1372, column: 1, scope: !1180, inlinedAt: !5102)
!5153 = !DILocation(line: 3178, column: 5, scope: !1176)
!5154 = !DILocation(line: 2798, column: 25, scope: !1195)
!5155 = !DILocation(line: 2798, column: 41, scope: !1195)
!5156 = !DILocation(line: 2801, column: 5, scope: !1195)
!5157 = !DILocation(line: 2801, column: 10, scope: !1195)
!5158 = !DILocation(line: 2806, column: 11, scope: !1195)
!5159 = !DILocation(line: 2800, column: 11, scope: !1195)
!5160 = !DILocation(line: 2808, column: 13, scope: !5161)
!5161 = distinct !DILexicalBlock(scope: !1195, file: !1, line: 2808, column: 9)
!5162 = !DILocation(line: 2808, column: 9, scope: !1195)
!5163 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !5164)
!5164 = distinct !DILocation(line: 2809, column: 16, scope: !5161)
!5165 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !5164)
!5166 = !DILocation(line: 2809, column: 9, scope: !5161)
!5167 = !DILocation(line: 2810, column: 12, scope: !1195)
!5168 = !DILocation(line: 2810, column: 5, scope: !1195)
!5169 = !DILocation(line: 2811, column: 1, scope: !1195)
!5170 = !DILocation(line: 3450, column: 32, scope: !1204)
!5171 = !DILocation(line: 3394, column: 18, scope: !1207, inlinedAt: !5172)
!5172 = distinct !DILocation(line: 3452, column: 12, scope: !1204)
!5173 = !DILocation(line: 3396, column: 5, scope: !1207, inlinedAt: !5172)
!5174 = !DILocation(line: 3435, column: 5, scope: !1218, inlinedAt: !5172)
!5175 = !DILocation(line: 3436, column: 11, scope: !1218, inlinedAt: !5172)
!5176 = !DILocation(line: 3397, column: 11, scope: !1207, inlinedAt: !5172)
!5177 = !DILocation(line: 3437, column: 5, scope: !1218, inlinedAt: !5172)
!5178 = !DILocation(line: 3438, column: 13, scope: !5179, inlinedAt: !5172)
!5179 = distinct !DILexicalBlock(scope: !1207, file: !1, line: 3438, column: 9)
!5180 = !DILocation(line: 3438, column: 9, scope: !1207, inlinedAt: !5172)
!5181 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !5182)
!5182 = distinct !DILocation(line: 3439, column: 16, scope: !5179, inlinedAt: !5172)
!5183 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !5182)
!5184 = !DILocation(line: 3439, column: 9, scope: !5179, inlinedAt: !5172)
!5185 = !DILocation(line: 3442, column: 12, scope: !1207, inlinedAt: !5172)
!5186 = !DILocation(line: 3442, column: 5, scope: !1207, inlinedAt: !5172)
!5187 = !DILocation(line: 3452, column: 12, scope: !1204)
!5188 = !DILocation(line: 3443, column: 1, scope: !1207, inlinedAt: !5172)
!5189 = !DILocation(line: 3396, column: 10, scope: !1207, inlinedAt: !5172)
!5190 = !DILocation(line: 3452, column: 5, scope: !1204)
!5191 = !DILocation(line: 3460, column: 30, scope: !1219)
!5192 = !DILocation(line: 3394, column: 18, scope: !1207, inlinedAt: !5193)
!5193 = distinct !DILocation(line: 3462, column: 12, scope: !1219)
!5194 = !DILocation(line: 3396, column: 5, scope: !1207, inlinedAt: !5193)
!5195 = !DILocation(line: 3435, column: 5, scope: !1218, inlinedAt: !5193)
!5196 = !DILocation(line: 3436, column: 11, scope: !1218, inlinedAt: !5193)
!5197 = !DILocation(line: 3397, column: 11, scope: !1207, inlinedAt: !5193)
!5198 = !DILocation(line: 3437, column: 5, scope: !1218, inlinedAt: !5193)
!5199 = !DILocation(line: 3438, column: 13, scope: !5179, inlinedAt: !5193)
!5200 = !DILocation(line: 3438, column: 9, scope: !1207, inlinedAt: !5193)
!5201 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !5202)
!5202 = distinct !DILocation(line: 3439, column: 16, scope: !5179, inlinedAt: !5193)
!5203 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !5202)
!5204 = !DILocation(line: 3439, column: 9, scope: !5179, inlinedAt: !5193)
!5205 = !DILocation(line: 3441, column: 47, scope: !5206, inlinedAt: !5193)
!5206 = distinct !DILexicalBlock(scope: !1207, file: !1, line: 3440, column: 9)
!5207 = !DILocation(line: 3441, column: 16, scope: !5206, inlinedAt: !5193)
!5208 = !DILocation(line: 3441, column: 9, scope: !5206, inlinedAt: !5193)
!5209 = !DILocation(line: 3462, column: 12, scope: !1219)
!5210 = !DILocation(line: 3443, column: 1, scope: !1207, inlinedAt: !5193)
!5211 = !DILocation(line: 3396, column: 10, scope: !1207, inlinedAt: !5193)
!5212 = !DILocation(line: 3462, column: 5, scope: !1219)
!5213 = !DILocation(line: 3485, column: 22, scope: !1222)
!5214 = !DILocation(line: 3485, column: 38, scope: !1222)
!5215 = !DILocation(line: 3485, column: 54, scope: !1222)
!5216 = !DILocation(line: 3487, column: 5, scope: !1222)
!5217 = !DILocation(line: 3488, column: 5, scope: !1222)
!5218 = !DILocation(line: 3488, column: 9, scope: !1222)
!5219 = !DILocation(line: 3489, column: 5, scope: !1222)
!5220 = !DILocation(line: 3489, column: 9, scope: !1222)
!5221 = !DILocation(line: 3490, column: 5, scope: !1222)
!5222 = !DILocation(line: 3490, column: 9, scope: !1222)
!5223 = !DILocation(line: 3491, column: 15, scope: !1222)
!5224 = !DILocation(line: 3500, column: 5, scope: !1222)
!5225 = !DILocation(line: 3501, column: 5, scope: !1222)
!5226 = !DILocation(line: 3502, column: 9, scope: !1222)
!5227 = !DILocation(line: 3502, column: 23, scope: !1222)
!5228 = !DILocation(line: 3503, column: 9, scope: !1222)
!5229 = !DILocation(line: 3503, column: 23, scope: !1222)
!5230 = !DILocation(line: 3487, column: 12, scope: !1222)
!5231 = !DILocation(line: 3487, column: 17, scope: !1222)
!5232 = !DILocation(line: 3504, column: 10, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !1222, file: !1, line: 3504, column: 9)
!5234 = !DILocation(line: 3504, column: 9, scope: !1222)
!5235 = !DILocation(line: 3519, column: 14, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !1222, file: !1, line: 3519, column: 9)
!5237 = !DILocation(line: 3519, column: 10, scope: !5236)
!5238 = !DILocation(line: 3519, column: 21, scope: !5236)
!5239 = !DILocation(line: 3519, column: 28, scope: !5240)
!5240 = !DILexicalBlockFile(scope: !5236, file: !1, discriminator: 1)
!5241 = !{!4635, !3871, i64 24}
!5242 = !DILocation(line: 3519, column: 24, scope: !5236)
!5243 = !DILocation(line: 3519, column: 34, scope: !5236)
!5244 = !DILocation(line: 3519, column: 42, scope: !5245)
!5245 = !DILexicalBlockFile(scope: !5246, file: !1, discriminator: 3)
!5246 = !DILexicalBlockFile(scope: !5236, file: !1, discriminator: 2)
!5247 = !DILocation(line: 3519, column: 38, scope: !5236)
!5248 = !DILocation(line: 3548, column: 39, scope: !5249)
!5249 = distinct !DILexicalBlock(scope: !1235, file: !1, line: 3540, column: 9)
!5250 = !DILocation(line: 3519, column: 50, scope: !5236)
!5251 = !DILocation(line: 3519, column: 47, scope: !5236)
!5252 = !DILocation(line: 3520, column: 25, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5236, file: !1, line: 3519, column: 63)
!5254 = !DILocation(line: 3520, column: 9, scope: !5253)
!5255 = !DILocation(line: 3522, column: 9, scope: !5253)
!5256 = !DILocation(line: 3538, column: 5, scope: !1235)
!5257 = !DILocation(line: 3540, column: 10, scope: !5249)
!5258 = !DILocation(line: 3540, column: 40, scope: !5249)
!5259 = !DILocation(line: 3542, column: 11, scope: !5249)
!5260 = !DILocation(line: 3548, column: 27, scope: !5249)
!5261 = !DILocation(line: 3545, column: 13, scope: !5249)
!5262 = !DILocation(line: 3543, column: 18, scope: !5249)
!5263 = !DILocation(line: 3497, column: 9, scope: !1222)
!5264 = !DILocation(line: 3543, column: 9, scope: !5249)
!5265 = !DILocation(line: 3548, column: 18, scope: !5249)
!5266 = !DILocation(line: 3549, column: 5, scope: !1235)
!5267 = !DILocation(line: 3551, column: 9, scope: !5268)
!5268 = distinct !DILexicalBlock(scope: !1222, file: !1, line: 3551, column: 9)
!5269 = !DILocation(line: 3551, column: 9, scope: !1222)
!5270 = !DILocation(line: 1323, column: 50, scope: !1236, inlinedAt: !5271)
!5271 = distinct !DILocation(line: 3552, column: 24, scope: !5272)
!5272 = distinct !DILexicalBlock(scope: !5268, file: !1, line: 3551, column: 17)
!5273 = !DILocation(line: 1323, column: 12, scope: !1236, inlinedAt: !5271)
!5274 = !DILocation(line: 3553, column: 9, scope: !5272)
!5275 = !DILocation(line: 3558, column: 5, scope: !1222)
!5276 = !DILocation(line: 781, column: 22, scope: !1050, inlinedAt: !5277)
!5277 = distinct !DILocation(line: 3561, column: 5, scope: !1222)
!5278 = !DILocation(line: 782, column: 15, scope: !1058, inlinedAt: !5277)
!5279 = !DILocation(line: 782, column: 9, scope: !1058, inlinedAt: !5277)
!5280 = !DILocation(line: 782, column: 9, scope: !1050, inlinedAt: !5277)
!5281 = !DILocation(line: 783, column: 9, scope: !4639, inlinedAt: !5277)
!5282 = !DILocation(line: 783, column: 9, scope: !4641, inlinedAt: !5277)
!5283 = !DILocation(line: 783, column: 9, scope: !4643, inlinedAt: !5277)
!5284 = !DILocation(line: 783, column: 9, scope: !4645, inlinedAt: !5277)
!5285 = !DILocation(line: 783, column: 9, scope: !1060, inlinedAt: !5277)
!5286 = !DILocation(line: 783, column: 9, scope: !4648, inlinedAt: !5277)
!5287 = !DILocation(line: 3561, column: 5, scope: !1222)
!5288 = !DILocation(line: 781, column: 22, scope: !1050, inlinedAt: !5289)
!5289 = distinct !DILocation(line: 3562, column: 5, scope: !1222)
!5290 = !DILocation(line: 782, column: 15, scope: !1058, inlinedAt: !5289)
!5291 = !DILocation(line: 782, column: 9, scope: !1058, inlinedAt: !5289)
!5292 = !DILocation(line: 782, column: 9, scope: !1050, inlinedAt: !5289)
!5293 = !DILocation(line: 783, column: 9, scope: !4639, inlinedAt: !5289)
!5294 = !DILocation(line: 783, column: 9, scope: !4641, inlinedAt: !5289)
!5295 = !DILocation(line: 783, column: 9, scope: !4643, inlinedAt: !5289)
!5296 = !DILocation(line: 783, column: 9, scope: !4645, inlinedAt: !5289)
!5297 = !DILocation(line: 783, column: 9, scope: !1060, inlinedAt: !5289)
!5298 = !DILocation(line: 783, column: 9, scope: !4648, inlinedAt: !5289)
!5299 = !DILocation(line: 3562, column: 5, scope: !1222)
!5300 = !DILocation(line: 3564, column: 1, scope: !1222)
!5301 = !DILocation(line: 3846, column: 25, scope: !1242)
!5302 = !DILocation(line: 3846, column: 41, scope: !1242)
!5303 = !DILocation(line: 3846, column: 57, scope: !1242)
!5304 = !DILocation(line: 3848, column: 5, scope: !1242)
!5305 = !DILocation(line: 3849, column: 15, scope: !1242)
!5306 = !DILocation(line: 3853, column: 5, scope: !1242)
!5307 = !DILocation(line: 3854, column: 10, scope: !1242)
!5308 = !DILocation(line: 3854, column: 24, scope: !1242)
!5309 = !DILocation(line: 3855, column: 10, scope: !1242)
!5310 = !DILocation(line: 3855, column: 19, scope: !1242)
!5311 = !{!4635, !3882, i64 16}
!5312 = !DILocation(line: 3857, column: 10, scope: !1242)
!5313 = !DILocation(line: 3857, column: 19, scope: !1242)
!5314 = !DILocation(line: 3858, column: 10, scope: !1242)
!5315 = !DILocation(line: 3858, column: 13, scope: !1242)
!5316 = !DILocation(line: 3848, column: 12, scope: !1242)
!5317 = !DILocation(line: 3861, column: 10, scope: !5318)
!5318 = distinct !DILexicalBlock(scope: !1242, file: !1, line: 3861, column: 9)
!5319 = !DILocation(line: 3861, column: 9, scope: !1242)
!5320 = !DILocation(line: 3739, column: 40, scope: !1250, inlinedAt: !5321)
!5321 = distinct !DILocation(line: 3869, column: 20, scope: !1242)
!5322 = !DILocation(line: 3742, column: 10, scope: !1250, inlinedAt: !5321)
!5323 = !DILocation(line: 3746, column: 9, scope: !1250, inlinedAt: !5321)
!5324 = !DILocation(line: 3749, column: 5, scope: !1250, inlinedAt: !5321)
!5325 = !DILocation(line: 3749, column: 11, scope: !1250, inlinedAt: !5321)
!5326 = !DILocation(line: 3751, column: 15, scope: !1281, inlinedAt: !5321)
!5327 = !DILocation(line: 3751, column: 18, scope: !1281, inlinedAt: !5321)
!5328 = !DILocation(line: 3751, column: 9, scope: !1250, inlinedAt: !5321)
!5329 = !DILocation(line: 3753, column: 14, scope: !1280, inlinedAt: !5321)
!5330 = !DILocation(line: 3754, column: 16, scope: !5331, inlinedAt: !5321)
!5331 = distinct !DILexicalBlock(scope: !1280, file: !1, line: 3754, column: 13)
!5332 = !DILocation(line: 3754, column: 13, scope: !1280, inlinedAt: !5321)
!5333 = !DILocation(line: 3744, column: 9, scope: !1250, inlinedAt: !5321)
!5334 = !DILocation(line: 3759, column: 9, scope: !1279, inlinedAt: !5321)
!5335 = !DILocation(line: 3760, column: 16, scope: !1279, inlinedAt: !5321)
!5336 = !DILocation(line: 3761, column: 9, scope: !1279, inlinedAt: !5321)
!5337 = !DILocation(line: 3762, column: 5, scope: !1280, inlinedAt: !5321)
!5338 = !DILocation(line: 3767, column: 19, scope: !5339, inlinedAt: !5321)
!5339 = distinct !DILexicalBlock(scope: !1283, file: !1, line: 3767, column: 13)
!5340 = !DILocation(line: 3767, column: 13, scope: !5339, inlinedAt: !5321)
!5341 = !DILocation(line: 3767, column: 13, scope: !1283, inlinedAt: !5321)
!5342 = !DILocation(line: 3766, column: 15, scope: !1283, inlinedAt: !5321)
!5343 = !DILocation(line: 3770, column: 28, scope: !5344, inlinedAt: !5321)
!5344 = distinct !DILexicalBlock(scope: !5339, file: !1, line: 3767, column: 27)
!5345 = !{!3880, !3877, i64 168}
!5346 = !DILocation(line: 3770, column: 26, scope: !5344, inlinedAt: !5321)
!5347 = !DILocation(line: 3771, column: 9, scope: !5344, inlinedAt: !5321)
!5348 = !DILocation(line: 3869, column: 20, scope: !1242)
!5349 = !DILocation(line: 3777, column: 9, scope: !1285, inlinedAt: !5321)
!5350 = !DILocation(line: 3778, column: 16, scope: !1285, inlinedAt: !5321)
!5351 = !DILocation(line: 3779, column: 9, scope: !1285, inlinedAt: !5321)
!5352 = !DILocation(line: 3782, column: 14, scope: !1291, inlinedAt: !5321)
!5353 = !DILocation(line: 3782, column: 9, scope: !1250, inlinedAt: !5321)
!5354 = !DILocation(line: 1311, column: 49, scope: !992, inlinedAt: !5355)
!5355 = distinct !DILocation(line: 3783, column: 16, scope: !1290, inlinedAt: !5321)
!5356 = !DILocation(line: 1311, column: 12, scope: !992, inlinedAt: !5355)
!5357 = !DILocation(line: 3785, column: 16, scope: !1289, inlinedAt: !5321)
!5358 = !DILocation(line: 3785, column: 13, scope: !1290, inlinedAt: !5321)
!5359 = !DILocation(line: 3786, column: 13, scope: !1287, inlinedAt: !5321)
!5360 = !DILocation(line: 3787, column: 13, scope: !1287, inlinedAt: !5321)
!5361 = !DILocation(line: 3788, column: 13, scope: !1287, inlinedAt: !5321)
!5362 = !DILocation(line: 3789, column: 9, scope: !1288, inlinedAt: !5321)
!5363 = !DILocation(line: 3793, column: 17, scope: !5364, inlinedAt: !5321)
!5364 = distinct !DILexicalBlock(scope: !1250, file: !1, line: 3793, column: 9)
!5365 = !DILocation(line: 3793, column: 32, scope: !5364, inlinedAt: !5321)
!5366 = !DILocation(line: 3793, column: 9, scope: !1250, inlinedAt: !5321)
!5367 = !DILocation(line: 3797, column: 15, scope: !1294, inlinedAt: !5321)
!5368 = !DILocation(line: 3798, column: 9, scope: !1293, inlinedAt: !5321)
!5369 = !DILocation(line: 3799, column: 14, scope: !1293, inlinedAt: !5321)
!5370 = !DILocation(line: 3743, column: 20, scope: !1250, inlinedAt: !5321)
!5371 = !DILocation(line: 3800, column: 9, scope: !1293, inlinedAt: !5321)
!5372 = !DILocation(line: 3801, column: 16, scope: !1302, inlinedAt: !5321)
!5373 = !DILocation(line: 3801, column: 13, scope: !1294, inlinedAt: !5321)
!5374 = !DILocation(line: 3814, column: 13, scope: !5375, inlinedAt: !5321)
!5375 = distinct !DILexicalBlock(scope: !1294, file: !1, line: 3814, column: 13)
!5376 = !DILocation(line: 3814, column: 13, scope: !1294, inlinedAt: !5321)
!5377 = !DILocation(line: 3810, column: 13, scope: !5378, inlinedAt: !5321)
!5378 = distinct !DILexicalBlock(scope: !1294, file: !1, line: 3810, column: 13)
!5379 = !{!3872, !3872, i64 0}
!5380 = !DILocation(line: 3810, column: 27, scope: !5378, inlinedAt: !5321)
!5381 = !DILocation(line: 3810, column: 34, scope: !5378, inlinedAt: !5321)
!5382 = !DILocation(line: 3811, column: 14, scope: !5378, inlinedAt: !5321)
!5383 = !DILocation(line: 3811, column: 25, scope: !5378, inlinedAt: !5321)
!5384 = !DILocation(line: 3811, column: 30, scope: !5378, inlinedAt: !5321)
!5385 = !DILocation(line: 3812, column: 15, scope: !5378, inlinedAt: !5321)
!5386 = !DILocation(line: 3812, column: 29, scope: !5378, inlinedAt: !5321)
!5387 = !DILocation(line: 3812, column: 50, scope: !5378, inlinedAt: !5321)
!5388 = !DILocation(line: 3812, column: 36, scope: !5378, inlinedAt: !5321)
!5389 = !DILocation(line: 3815, column: 62, scope: !5375, inlinedAt: !5321)
!5390 = !DILocation(line: 3817, column: 17, scope: !5375, inlinedAt: !5321)
!5391 = !DILocation(line: 3741, column: 15, scope: !1250, inlinedAt: !5321)
!5392 = !DILocation(line: 3818, column: 15, scope: !1306, inlinedAt: !5321)
!5393 = !DILocation(line: 3818, column: 13, scope: !1294, inlinedAt: !5321)
!5394 = !DILocation(line: 3822, column: 13, scope: !1314, inlinedAt: !5321)
!5395 = !DILocation(line: 3822, column: 36, scope: !1314, inlinedAt: !5321)
!5396 = !DILocation(line: 3827, column: 9, scope: !5397, inlinedAt: !5321)
!5397 = distinct !DILexicalBlock(scope: !1322, file: !1, line: 3827, column: 9)
!5398 = !DILocation(line: 3822, column: 13, scope: !1294, inlinedAt: !5321)
!5399 = !DILocation(line: 3827, column: 9, scope: !5400, inlinedAt: !5321)
!5400 = !DILexicalBlockFile(scope: !1322, file: !1, discriminator: 1)
!5401 = !DILocation(line: 3827, column: 9, scope: !1322, inlinedAt: !5321)
!5402 = !DILocation(line: 3827, column: 9, scope: !5403, inlinedAt: !5321)
!5403 = !DILexicalBlockFile(scope: !5397, file: !1, discriminator: 3)
!5404 = !DILocation(line: 3802, column: 17, scope: !1300, inlinedAt: !5321)
!5405 = !DILocation(line: 3802, column: 23, scope: !1300, inlinedAt: !5321)
!5406 = !DILocation(line: 3802, column: 17, scope: !1301, inlinedAt: !5321)
!5407 = !DILocation(line: 3805, column: 17, scope: !5408, inlinedAt: !5321)
!5408 = !DILexicalBlockFile(scope: !1298, file: !1, discriminator: 1)
!5409 = !DILocation(line: 3805, column: 17, scope: !5410, inlinedAt: !5321)
!5410 = distinct !DILexicalBlock(scope: !1298, file: !1, line: 3805, column: 17)
!5411 = !DILocation(line: 3805, column: 17, scope: !1298, inlinedAt: !5321)
!5412 = !DILocation(line: 3805, column: 17, scope: !5413, inlinedAt: !5321)
!5413 = !DILexicalBlockFile(scope: !5410, file: !1, discriminator: 3)
!5414 = !DILocation(line: 1311, column: 49, scope: !992, inlinedAt: !5415)
!5415 = distinct !DILocation(line: 3806, column: 24, scope: !1299, inlinedAt: !5321)
!5416 = !DILocation(line: 1311, column: 12, scope: !992, inlinedAt: !5415)
!5417 = !DILocation(line: 3807, column: 17, scope: !1299, inlinedAt: !5321)
!5418 = !DILocation(line: 3815, column: 17, scope: !5375, inlinedAt: !5321)
!5419 = !DILocation(line: 3819, column: 13, scope: !5420, inlinedAt: !5321)
!5420 = !DILexicalBlockFile(scope: !1304, file: !1, discriminator: 1)
!5421 = !DILocation(line: 3819, column: 13, scope: !5422, inlinedAt: !5321)
!5422 = !DILexicalBlockFile(scope: !1308, file: !1, discriminator: 4)
!5423 = !DILocation(line: 3819, column: 13, scope: !5424, inlinedAt: !5321)
!5424 = distinct !DILexicalBlock(scope: !1308, file: !1, line: 3819, column: 13)
!5425 = !DILocation(line: 3819, column: 13, scope: !1308, inlinedAt: !5321)
!5426 = !DILocation(line: 3819, column: 13, scope: !5427, inlinedAt: !5321)
!5427 = !DILexicalBlockFile(scope: !5424, file: !1, discriminator: 6)
!5428 = !DILocation(line: 3823, column: 13, scope: !5429, inlinedAt: !5321)
!5429 = !DILexicalBlockFile(scope: !1312, file: !1, discriminator: 1)
!5430 = !DILocation(line: 3823, column: 13, scope: !1312, inlinedAt: !5321)
!5431 = !DILocation(line: 3823, column: 13, scope: !5432, inlinedAt: !5321)
!5432 = !DILexicalBlockFile(scope: !5433, file: !1, discriminator: 3)
!5433 = distinct !DILexicalBlock(scope: !1312, file: !1, line: 3823, column: 13)
!5434 = !DILocation(line: 3824, column: 13, scope: !5435, inlinedAt: !5321)
!5435 = !DILexicalBlockFile(scope: !1316, file: !1, discriminator: 1)
!5436 = !DILocation(line: 3824, column: 13, scope: !5437, inlinedAt: !5321)
!5437 = !DILexicalBlockFile(scope: !1318, file: !1, discriminator: 4)
!5438 = !DILocation(line: 3824, column: 13, scope: !5439, inlinedAt: !5321)
!5439 = distinct !DILexicalBlock(scope: !1318, file: !1, line: 3824, column: 13)
!5440 = !DILocation(line: 3824, column: 13, scope: !1318, inlinedAt: !5321)
!5441 = !DILocation(line: 3824, column: 13, scope: !5442, inlinedAt: !5321)
!5442 = !DILexicalBlockFile(scope: !5439, file: !1, discriminator: 6)
!5443 = !DILocation(line: 3832, column: 9, scope: !1324, inlinedAt: !5321)
!5444 = !DILocation(line: 3834, column: 16, scope: !5445, inlinedAt: !5321)
!5445 = distinct !DILexicalBlock(scope: !1324, file: !1, line: 3834, column: 13)
!5446 = !DILocation(line: 3834, column: 13, scope: !1324, inlinedAt: !5321)
!5447 = !DILocation(line: 3835, column: 13, scope: !5445, inlinedAt: !5321)
!5448 = !DILocation(line: 3837, column: 9, scope: !1324, inlinedAt: !5321)
!5449 = !DILocation(line: 3838, column: 9, scope: !1324, inlinedAt: !5321)
!5450 = !DILocation(line: 3839, column: 5, scope: !1325, inlinedAt: !5321)
!5451 = !DILocation(line: 3851, column: 15, scope: !1242)
!5452 = !DILocation(line: 781, column: 22, scope: !1050, inlinedAt: !5453)
!5453 = distinct !DILocation(line: 3871, column: 5, scope: !1242)
!5454 = !DILocation(line: 782, column: 15, scope: !1058, inlinedAt: !5453)
!5455 = !DILocation(line: 782, column: 9, scope: !1058, inlinedAt: !5453)
!5456 = !DILocation(line: 782, column: 9, scope: !1050, inlinedAt: !5453)
!5457 = !DILocation(line: 783, column: 9, scope: !4639, inlinedAt: !5453)
!5458 = !DILocation(line: 783, column: 9, scope: !4641, inlinedAt: !5453)
!5459 = !DILocation(line: 783, column: 9, scope: !4643, inlinedAt: !5453)
!5460 = !DILocation(line: 783, column: 9, scope: !4645, inlinedAt: !5453)
!5461 = !DILocation(line: 783, column: 9, scope: !1060, inlinedAt: !5453)
!5462 = !DILocation(line: 783, column: 9, scope: !4648, inlinedAt: !5453)
!5463 = !DILocation(line: 3871, column: 5, scope: !1242)
!5464 = !DILocation(line: 3873, column: 1, scope: !1242)
!5465 = !DILocation(line: 2514, column: 23, scope: !1327)
!5466 = !DILocation(line: 2514, column: 39, scope: !1327)
!5467 = !DILocation(line: 2514, column: 55, scope: !1327)
!5468 = !DILocation(line: 2517, column: 5, scope: !1327)
!5469 = !DILocation(line: 2518, column: 5, scope: !1327)
!5470 = !DILocation(line: 2518, column: 9, scope: !1327)
!5471 = !DILocation(line: 2519, column: 9, scope: !1327)
!5472 = !DILocation(line: 2522, column: 5, scope: !1327)
!5473 = !DILocation(line: 2523, column: 10, scope: !1327)
!5474 = !DILocation(line: 2523, column: 24, scope: !1327)
!5475 = !DILocation(line: 2517, column: 12, scope: !1327)
!5476 = !DILocation(line: 2524, column: 10, scope: !5477)
!5477 = distinct !DILexicalBlock(scope: !1327, file: !1, line: 2524, column: 9)
!5478 = !DILocation(line: 2524, column: 9, scope: !1327)
!5479 = !DILocation(line: 2533, column: 50, scope: !1327)
!5480 = !DILocation(line: 2533, column: 20, scope: !1327)
!5481 = !DILocation(line: 2520, column: 15, scope: !1327)
!5482 = !DILocation(line: 781, column: 22, scope: !1050, inlinedAt: !5483)
!5483 = distinct !DILocation(line: 2534, column: 5, scope: !1327)
!5484 = !DILocation(line: 782, column: 15, scope: !1058, inlinedAt: !5483)
!5485 = !DILocation(line: 782, column: 9, scope: !1058, inlinedAt: !5483)
!5486 = !DILocation(line: 782, column: 9, scope: !1050, inlinedAt: !5483)
!5487 = !DILocation(line: 783, column: 9, scope: !4639, inlinedAt: !5483)
!5488 = !DILocation(line: 783, column: 9, scope: !4641, inlinedAt: !5483)
!5489 = !DILocation(line: 783, column: 9, scope: !4643, inlinedAt: !5483)
!5490 = !DILocation(line: 783, column: 9, scope: !4645, inlinedAt: !5483)
!5491 = !DILocation(line: 783, column: 9, scope: !1060, inlinedAt: !5483)
!5492 = !DILocation(line: 783, column: 9, scope: !4648, inlinedAt: !5483)
!5493 = !DILocation(line: 2534, column: 5, scope: !1327)
!5494 = !DILocation(line: 2536, column: 1, scope: !1327)
!5495 = !DILocation(line: 4100, column: 23, scope: !1336)
!5496 = !DILocation(line: 4100, column: 39, scope: !1336)
!5497 = !DILocation(line: 4100, column: 55, scope: !1336)
!5498 = !DILocation(line: 4102, column: 5, scope: !1336)
!5499 = !DILocation(line: 4103, column: 5, scope: !1336)
!5500 = !DILocation(line: 4103, column: 9, scope: !1336)
!5501 = !DILocation(line: 4104, column: 5, scope: !1336)
!5502 = !DILocation(line: 4104, column: 9, scope: !1336)
!5503 = !DILocation(line: 4106, column: 15, scope: !1336)
!5504 = !DILocation(line: 4109, column: 5, scope: !1336)
!5505 = !DILocation(line: 4110, column: 10, scope: !1336)
!5506 = !DILocation(line: 4110, column: 24, scope: !1336)
!5507 = !DILocation(line: 4102, column: 12, scope: !1336)
!5508 = !DILocation(line: 4111, column: 10, scope: !5509)
!5509 = distinct !DILexicalBlock(scope: !1336, file: !1, line: 4111, column: 9)
!5510 = !DILocation(line: 4111, column: 9, scope: !1336)
!5511 = !DILocation(line: 4134, column: 5, scope: !1347)
!5512 = !DILocation(line: 4136, column: 9, scope: !5513)
!5513 = distinct !DILexicalBlock(scope: !1347, file: !1, line: 4136, column: 9)
!5514 = !DILocation(line: 4136, column: 16, scope: !5513)
!5515 = !DILocation(line: 4143, column: 29, scope: !5513)
!5516 = !DILocation(line: 4143, column: 37, scope: !5513)
!5517 = !DILocation(line: 4136, column: 9, scope: !1347)
!5518 = !DILocation(line: 4137, column: 18, scope: !5513)
!5519 = !DILocation(line: 4107, column: 9, scope: !1336)
!5520 = !DILocation(line: 4137, column: 9, scope: !5513)
!5521 = !DILocation(line: 4143, column: 18, scope: !5513)
!5522 = !DILocation(line: 4145, column: 5, scope: !1347)
!5523 = !DILocation(line: 4146, column: 16, scope: !5524)
!5524 = distinct !DILexicalBlock(scope: !1336, file: !1, line: 4146, column: 9)
!5525 = !DILocation(line: 4146, column: 9, scope: !1336)
!5526 = !DILocation(line: 1311, column: 49, scope: !992, inlinedAt: !5527)
!5527 = distinct !DILocation(line: 4147, column: 24, scope: !5528)
!5528 = distinct !DILexicalBlock(scope: !5524, file: !1, line: 4146, column: 21)
!5529 = !DILocation(line: 1311, column: 12, scope: !992, inlinedAt: !5527)
!5530 = !DILocation(line: 4148, column: 9, scope: !5528)
!5531 = !DILocation(line: 4152, column: 5, scope: !1336)
!5532 = !DILocation(line: 781, column: 22, scope: !1050, inlinedAt: !5533)
!5533 = distinct !DILocation(line: 4154, column: 5, scope: !1336)
!5534 = !DILocation(line: 782, column: 15, scope: !1058, inlinedAt: !5533)
!5535 = !DILocation(line: 782, column: 9, scope: !1058, inlinedAt: !5533)
!5536 = !DILocation(line: 782, column: 9, scope: !1050, inlinedAt: !5533)
!5537 = !DILocation(line: 783, column: 9, scope: !4639, inlinedAt: !5533)
!5538 = !DILocation(line: 783, column: 9, scope: !4641, inlinedAt: !5533)
!5539 = !DILocation(line: 783, column: 9, scope: !4643, inlinedAt: !5533)
!5540 = !DILocation(line: 783, column: 9, scope: !4645, inlinedAt: !5533)
!5541 = !DILocation(line: 783, column: 9, scope: !1060, inlinedAt: !5533)
!5542 = !DILocation(line: 783, column: 9, scope: !4648, inlinedAt: !5533)
!5543 = !DILocation(line: 4154, column: 5, scope: !1336)
!5544 = !DILocation(line: 4156, column: 1, scope: !1336)
!5545 = !DILocation(line: 4171, column: 22, scope: !1348)
!5546 = !DILocation(line: 4171, column: 38, scope: !1348)
!5547 = !DILocation(line: 4173, column: 5, scope: !1348)
!5548 = !DILocation(line: 4173, column: 9, scope: !1348)
!5549 = !DILocation(line: 4175, column: 10, scope: !5550)
!5550 = distinct !DILexicalBlock(scope: !1348, file: !1, line: 4175, column: 9)
!5551 = !DILocation(line: 4175, column: 9, scope: !1348)
!5552 = !DILocation(line: 4188, column: 5, scope: !1348)
!5553 = !DILocation(line: 4188, column: 11, scope: !1348)
!5554 = !DILocation(line: 4189, column: 18, scope: !1348)
!5555 = !DILocation(line: 4189, column: 13, scope: !1348)
!5556 = !DILocation(line: 4173, column: 20, scope: !1348)
!5557 = !DILocation(line: 4194, column: 15, scope: !5558)
!5558 = distinct !DILexicalBlock(scope: !1348, file: !1, line: 4194, column: 9)
!5559 = !DILocation(line: 4194, column: 21, scope: !5558)
!5560 = !DILocation(line: 4194, column: 24, scope: !5561)
!5561 = !DILexicalBlockFile(scope: !5558, file: !1, discriminator: 1)
!5562 = !DILocation(line: 4194, column: 30, scope: !5558)
!5563 = !DILocation(line: 4194, column: 9, scope: !1348)
!5564 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !5565)
!5565 = distinct !DILocation(line: 4196, column: 16, scope: !5558)
!5566 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !5565)
!5567 = !DILocation(line: 4196, column: 9, scope: !5558)
!5568 = !DILocation(line: 4197, column: 28, scope: !1348)
!5569 = !DILocation(line: 4197, column: 12, scope: !1348)
!5570 = !DILocation(line: 4197, column: 5, scope: !1348)
!5571 = !DILocation(line: 4198, column: 1, scope: !1348)
!5572 = !DILocation(line: 4208, column: 29, scope: !1354)
!5573 = !DILocation(line: 4208, column: 45, scope: !1354)
!5574 = !DILocation(line: 4210, column: 5, scope: !1354)
!5575 = !DILocation(line: 4210, column: 9, scope: !1354)
!5576 = !DILocation(line: 4210, column: 16, scope: !1354)
!5577 = !DILocation(line: 4212, column: 10, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !1354, file: !1, line: 4212, column: 9)
!5579 = !DILocation(line: 4212, column: 9, scope: !1354)
!5580 = !DILocation(line: 4214, column: 5, scope: !1354)
!5581 = !DILocation(line: 4214, column: 11, scope: !1354)
!5582 = !DILocation(line: 4215, column: 26, scope: !1354)
!5583 = !DILocation(line: 4215, column: 33, scope: !1354)
!5584 = !DILocation(line: 4215, column: 14, scope: !1354)
!5585 = !DILocation(line: 4210, column: 21, scope: !1354)
!5586 = !DILocation(line: 4216, column: 9, scope: !5587)
!5587 = distinct !DILexicalBlock(scope: !1354, file: !1, line: 4216, column: 9)
!5588 = !DILocation(line: 4216, column: 15, scope: !5587)
!5589 = !DILocation(line: 4216, column: 9, scope: !1354)
!5590 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !5591)
!5591 = distinct !DILocation(line: 4217, column: 16, scope: !5587)
!5592 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !5591)
!5593 = !DILocation(line: 4217, column: 9, scope: !5587)
!5594 = !DILocation(line: 4218, column: 28, scope: !1354)
!5595 = !DILocation(line: 4218, column: 12, scope: !1354)
!5596 = !DILocation(line: 4218, column: 5, scope: !1354)
!5597 = !DILocation(line: 4219, column: 1, scope: !1354)
!5598 = !DILocation(line: 4229, column: 29, scope: !1361)
!5599 = !DILocation(line: 4229, column: 45, scope: !1361)
!5600 = !DILocation(line: 4231, column: 5, scope: !1361)
!5601 = !DILocation(line: 4231, column: 9, scope: !1361)
!5602 = !DILocation(line: 4231, column: 16, scope: !1361)
!5603 = !DILocation(line: 4231, column: 21, scope: !1361)
!5604 = !DILocation(line: 4233, column: 10, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !1361, file: !1, line: 4233, column: 9)
!5606 = !DILocation(line: 4233, column: 9, scope: !1361)
!5607 = !DILocation(line: 4235, column: 26, scope: !1361)
!5608 = !DILocation(line: 4235, column: 33, scope: !1361)
!5609 = !DILocation(line: 4235, column: 38, scope: !1361)
!5610 = !DILocation(line: 4235, column: 14, scope: !1361)
!5611 = !DILocation(line: 4231, column: 27, scope: !1361)
!5612 = !DILocation(line: 4236, column: 16, scope: !5613)
!5613 = distinct !DILexicalBlock(scope: !1361, file: !1, line: 4236, column: 9)
!5614 = !DILocation(line: 4236, column: 9, scope: !1361)
!5615 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !5616)
!5616 = distinct !DILocation(line: 4237, column: 16, scope: !5613)
!5617 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !5616)
!5618 = !DILocation(line: 4237, column: 9, scope: !5613)
!5619 = !DILocation(line: 4238, column: 5, scope: !1361)
!5620 = !DILocation(line: 4239, column: 1, scope: !1361)
!5621 = !DILocation(line: 7079, column: 26, scope: !1369)
!5622 = !DILocation(line: 7079, column: 42, scope: !1369)
!5623 = !DILocation(line: 7079, column: 58, scope: !1369)
!5624 = !DILocation(line: 7081, column: 5, scope: !1369)
!5625 = !DILocation(line: 7082, column: 5, scope: !1369)
!5626 = !DILocation(line: 7082, column: 9, scope: !1369)
!5627 = !DILocation(line: 7083, column: 5, scope: !1369)
!5628 = !DILocation(line: 7083, column: 10, scope: !1369)
!5629 = !DILocation(line: 7085, column: 15, scope: !1369)
!5630 = !DILocation(line: 7088, column: 5, scope: !1369)
!5631 = !DILocation(line: 7089, column: 10, scope: !1369)
!5632 = !DILocation(line: 7089, column: 24, scope: !1369)
!5633 = !DILocation(line: 7081, column: 12, scope: !1369)
!5634 = !DILocation(line: 7090, column: 10, scope: !5635)
!5635 = distinct !DILexicalBlock(scope: !1369, file: !1, line: 7090, column: 9)
!5636 = !DILocation(line: 7090, column: 9, scope: !1369)
!5637 = !DILocation(line: 7100, column: 5, scope: !1383)
!5638 = !DILocation(line: 7102, column: 9, scope: !5639)
!5639 = distinct !DILexicalBlock(scope: !1383, file: !1, line: 7102, column: 9)
!5640 = !DILocation(line: 7102, column: 16, scope: !5639)
!5641 = !DILocation(line: 7106, column: 32, scope: !5639)
!5642 = !DILocation(line: 7102, column: 9, scope: !1383)
!5643 = !DILocation(line: 7103, column: 18, scope: !5639)
!5644 = !DILocation(line: 7084, column: 13, scope: !1369)
!5645 = !DILocation(line: 7103, column: 9, scope: !5639)
!5646 = !DILocation(line: 7106, column: 18, scope: !5639)
!5647 = !DILocation(line: 7107, column: 5, scope: !1383)
!5648 = !DILocation(line: 7109, column: 16, scope: !5649)
!5649 = distinct !DILexicalBlock(scope: !1369, file: !1, line: 7109, column: 9)
!5650 = !DILocation(line: 7109, column: 9, scope: !1369)
!5651 = !DILocation(line: 1311, column: 49, scope: !992, inlinedAt: !5652)
!5652 = distinct !DILocation(line: 7110, column: 24, scope: !5653)
!5653 = distinct !DILexicalBlock(scope: !5649, file: !1, line: 7109, column: 21)
!5654 = !DILocation(line: 1311, column: 12, scope: !992, inlinedAt: !5652)
!5655 = !DILocation(line: 7111, column: 9, scope: !5653)
!5656 = !DILocation(line: 7114, column: 9, scope: !5657)
!5657 = distinct !DILexicalBlock(scope: !1369, file: !1, line: 7114, column: 9)
!5658 = !DILocation(line: 7114, column: 9, scope: !1369)
!5659 = !DILocation(line: 7115, column: 24, scope: !5657)
!5660 = !DILocation(line: 7115, column: 9, scope: !5657)
!5661 = !DILocation(line: 7117, column: 24, scope: !5657)
!5662 = !DILocation(line: 781, column: 22, scope: !1050, inlinedAt: !5663)
!5663 = distinct !DILocation(line: 7119, column: 5, scope: !1369)
!5664 = !DILocation(line: 782, column: 15, scope: !1058, inlinedAt: !5663)
!5665 = !DILocation(line: 782, column: 9, scope: !1058, inlinedAt: !5663)
!5666 = !DILocation(line: 782, column: 9, scope: !1050, inlinedAt: !5663)
!5667 = !DILocation(line: 783, column: 9, scope: !4639, inlinedAt: !5663)
!5668 = !DILocation(line: 783, column: 9, scope: !4641, inlinedAt: !5663)
!5669 = !DILocation(line: 783, column: 9, scope: !4643, inlinedAt: !5663)
!5670 = !DILocation(line: 783, column: 9, scope: !4645, inlinedAt: !5663)
!5671 = !DILocation(line: 783, column: 9, scope: !1060, inlinedAt: !5663)
!5672 = !DILocation(line: 783, column: 9, scope: !4648, inlinedAt: !5663)
!5673 = !DILocation(line: 7119, column: 5, scope: !1369)
!5674 = !DILocation(line: 7121, column: 1, scope: !1369)
!5675 = !DILocation(line: 4339, column: 24, scope: !1384)
!5676 = !DILocation(line: 4339, column: 40, scope: !1384)
!5677 = !DILocation(line: 4339, column: 56, scope: !1384)
!5678 = !DILocation(line: 4341, column: 12, scope: !1384)
!5679 = !DILocation(line: 4341, column: 5, scope: !1384)
!5680 = !DILocation(line: 4355, column: 25, scope: !1408)
!5681 = !DILocation(line: 4355, column: 41, scope: !1408)
!5682 = !DILocation(line: 4355, column: 57, scope: !1408)
!5683 = !DILocation(line: 4357, column: 12, scope: !1408)
!5684 = !DILocation(line: 4357, column: 5, scope: !1408)
!5685 = !DILocation(line: 4370, column: 23, scope: !1413)
!5686 = !DILocation(line: 4370, column: 39, scope: !1413)
!5687 = !DILocation(line: 4370, column: 55, scope: !1413)
!5688 = !DILocation(line: 4372, column: 5, scope: !1413)
!5689 = !DILocation(line: 4373, column: 5, scope: !1413)
!5690 = !DILocation(line: 4373, column: 9, scope: !1413)
!5691 = !DILocation(line: 4376, column: 15, scope: !1413)
!5692 = !DILocation(line: 4378, column: 5, scope: !1413)
!5693 = !DILocation(line: 4379, column: 10, scope: !1413)
!5694 = !DILocation(line: 4379, column: 24, scope: !1413)
!5695 = !DILocation(line: 4372, column: 12, scope: !1413)
!5696 = !DILocation(line: 4380, column: 10, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !1413, file: !1, line: 4380, column: 9)
!5698 = !DILocation(line: 4380, column: 9, scope: !1413)
!5699 = !DILocation(line: 4390, column: 5, scope: !1423)
!5700 = !DILocation(line: 4399, column: 9, scope: !5701)
!5701 = distinct !DILexicalBlock(scope: !1423, file: !1, line: 4399, column: 9)
!5702 = !DILocation(line: 4399, column: 16, scope: !5701)
!5703 = !DILocation(line: 4403, column: 29, scope: !5701)
!5704 = !DILocation(line: 4399, column: 9, scope: !1423)
!5705 = !DILocation(line: 4400, column: 18, scope: !5701)
!5706 = !DILocation(line: 4375, column: 9, scope: !1413)
!5707 = !DILocation(line: 4400, column: 9, scope: !5701)
!5708 = !DILocation(line: 4403, column: 18, scope: !5701)
!5709 = !DILocation(line: 4405, column: 5, scope: !1423)
!5710 = !DILocation(line: 4407, column: 9, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !1413, file: !1, line: 4407, column: 9)
!5712 = !DILocation(line: 4407, column: 9, scope: !1413)
!5713 = !DILocation(line: 1311, column: 49, scope: !992, inlinedAt: !5714)
!5714 = distinct !DILocation(line: 4408, column: 24, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5711, file: !1, line: 4407, column: 17)
!5716 = !DILocation(line: 1311, column: 12, scope: !992, inlinedAt: !5714)
!5717 = !DILocation(line: 4409, column: 9, scope: !5715)
!5718 = !DILocation(line: 4413, column: 5, scope: !1413)
!5719 = !DILocation(line: 781, column: 22, scope: !1050, inlinedAt: !5720)
!5720 = distinct !DILocation(line: 4416, column: 5, scope: !1413)
!5721 = !DILocation(line: 782, column: 15, scope: !1058, inlinedAt: !5720)
!5722 = !DILocation(line: 782, column: 9, scope: !1058, inlinedAt: !5720)
!5723 = !DILocation(line: 782, column: 9, scope: !1050, inlinedAt: !5720)
!5724 = !DILocation(line: 783, column: 9, scope: !4639, inlinedAt: !5720)
!5725 = !DILocation(line: 783, column: 9, scope: !4641, inlinedAt: !5720)
!5726 = !DILocation(line: 783, column: 9, scope: !4643, inlinedAt: !5720)
!5727 = !DILocation(line: 783, column: 9, scope: !4645, inlinedAt: !5720)
!5728 = !DILocation(line: 783, column: 9, scope: !1060, inlinedAt: !5720)
!5729 = !DILocation(line: 783, column: 9, scope: !4648, inlinedAt: !5720)
!5730 = !DILocation(line: 4416, column: 5, scope: !1413)
!5731 = !DILocation(line: 4418, column: 1, scope: !1413)
!5732 = !DILocation(line: 2139, column: 28, scope: !1424)
!5733 = !DILocation(line: 2139, column: 44, scope: !1424)
!5734 = !DILocation(line: 2141, column: 5, scope: !1424)
!5735 = !DILocation(line: 2141, column: 9, scope: !1424)
!5736 = !DILocation(line: 2142, column: 10, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !1424, file: !1, line: 2142, column: 9)
!5738 = !DILocation(line: 2142, column: 9, scope: !1424)
!5739 = !DILocation(line: 2144, column: 22, scope: !5740)
!5740 = distinct !DILexicalBlock(scope: !1424, file: !1, line: 2144, column: 9)
!5741 = !DILocation(line: 2144, column: 9, scope: !5740)
!5742 = !DILocation(line: 2144, column: 9, scope: !1424)
!5743 = !DILocation(line: 2148, column: 9, scope: !5744)
!5744 = distinct !DILexicalBlock(scope: !1424, file: !1, line: 2148, column: 9)
!5745 = !DILocation(line: 2148, column: 16, scope: !5744)
!5746 = !DILocation(line: 2148, column: 9, scope: !1424)
!5747 = !DILocation(line: 2150, column: 32, scope: !5744)
!5748 = !DILocation(line: 2150, column: 16, scope: !5744)
!5749 = !DILocation(line: 2150, column: 9, scope: !5744)
!5750 = !DILocation(line: 2151, column: 23, scope: !1424)
!5751 = !DILocation(line: 2152, column: 5, scope: !1424)
!5752 = !DILocation(line: 2153, column: 5, scope: !1424)
!5753 = !DILocation(line: 2154, column: 1, scope: !1424)
!5754 = !DILocation(line: 7289, column: 25, scope: !1429)
!5755 = !DILocation(line: 7289, column: 41, scope: !1429)
!5756 = !DILocation(line: 7289, column: 57, scope: !1429)
!5757 = !DILocation(line: 7291, column: 5, scope: !1429)
!5758 = !DILocation(line: 7292, column: 5, scope: !1429)
!5759 = !DILocation(line: 7293, column: 5, scope: !1429)
!5760 = !DILocation(line: 7293, column: 9, scope: !1429)
!5761 = !DILocation(line: 7294, column: 5, scope: !1429)
!5762 = !DILocation(line: 7294, column: 9, scope: !1429)
!5763 = !DILocation(line: 7304, column: 5, scope: !1429)
!5764 = !DILocation(line: 7305, column: 23, scope: !1429)
!5765 = !DILocation(line: 7307, column: 5, scope: !1429)
!5766 = !DILocation(line: 7308, column: 23, scope: !1429)
!5767 = !DILocation(line: 7291, column: 12, scope: !1429)
!5768 = !DILocation(line: 7292, column: 12, scope: !1429)
!5769 = !DILocation(line: 7323, column: 10, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !1429, file: !1, line: 7323, column: 9)
!5771 = !DILocation(line: 7323, column: 9, scope: !1429)
!5772 = !DILocation(line: 7336, column: 14, scope: !5773)
!5773 = distinct !DILexicalBlock(scope: !1429, file: !1, line: 7336, column: 9)
!5774 = !DILocation(line: 7336, column: 10, scope: !5773)
!5775 = !DILocation(line: 7336, column: 21, scope: !5773)
!5776 = !DILocation(line: 7336, column: 28, scope: !5777)
!5777 = !DILexicalBlockFile(scope: !5773, file: !1, discriminator: 1)
!5778 = !DILocation(line: 7336, column: 24, scope: !5773)
!5779 = !DILocation(line: 7336, column: 34, scope: !5773)
!5780 = !DILocation(line: 7336, column: 42, scope: !5781)
!5781 = !DILexicalBlockFile(scope: !5782, file: !1, discriminator: 3)
!5782 = !DILexicalBlockFile(scope: !5773, file: !1, discriminator: 2)
!5783 = !DILocation(line: 7336, column: 38, scope: !5773)
!5784 = !DILocation(line: 7373, column: 42, scope: !5785)
!5785 = distinct !DILexicalBlock(scope: !1441, file: !1, line: 7369, column: 9)
!5786 = !DILocation(line: 7336, column: 50, scope: !5773)
!5787 = !DILocation(line: 7336, column: 47, scope: !5773)
!5788 = !DILocation(line: 7337, column: 25, scope: !5789)
!5789 = distinct !DILexicalBlock(scope: !5773, file: !1, line: 7336, column: 63)
!5790 = !DILocation(line: 7337, column: 9, scope: !5789)
!5791 = !DILocation(line: 7297, column: 15, scope: !1429)
!5792 = !DILocation(line: 7340, column: 9, scope: !5789)
!5793 = !DILocation(line: 7367, column: 5, scope: !1441)
!5794 = !DILocation(line: 7369, column: 9, scope: !5785)
!5795 = !DILocation(line: 7369, column: 16, scope: !5785)
!5796 = !DILocation(line: 7370, column: 32, scope: !5785)
!5797 = !DILocation(line: 7369, column: 9, scope: !1441)
!5798 = !DILocation(line: 7370, column: 18, scope: !5785)
!5799 = !DILocation(line: 7301, column: 9, scope: !1429)
!5800 = !DILocation(line: 7370, column: 9, scope: !5785)
!5801 = !DILocation(line: 7373, column: 18, scope: !5785)
!5802 = !DILocation(line: 7374, column: 5, scope: !1441)
!5803 = !DILocation(line: 7376, column: 9, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !1429, file: !1, line: 7376, column: 9)
!5805 = !DILocation(line: 7376, column: 9, scope: !1429)
!5806 = !DILocation(line: 1323, column: 50, scope: !1236, inlinedAt: !5807)
!5807 = distinct !DILocation(line: 7377, column: 24, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !5804, file: !1, line: 7376, column: 17)
!5809 = !DILocation(line: 1323, column: 12, scope: !1236, inlinedAt: !5807)
!5810 = !DILocation(line: 7378, column: 9, scope: !5808)
!5811 = !DILocation(line: 7383, column: 5, scope: !1429)
!5812 = !DILocation(line: 7384, column: 5, scope: !1429)
!5813 = !DILocation(line: 781, column: 22, scope: !1050, inlinedAt: !5814)
!5814 = distinct !DILocation(line: 7386, column: 5, scope: !1429)
!5815 = !DILocation(line: 782, column: 15, scope: !1058, inlinedAt: !5814)
!5816 = !DILocation(line: 782, column: 9, scope: !1058, inlinedAt: !5814)
!5817 = !DILocation(line: 782, column: 9, scope: !1050, inlinedAt: !5814)
!5818 = !DILocation(line: 783, column: 9, scope: !4639, inlinedAt: !5814)
!5819 = !DILocation(line: 783, column: 9, scope: !4641, inlinedAt: !5814)
!5820 = !DILocation(line: 783, column: 9, scope: !4643, inlinedAt: !5814)
!5821 = !DILocation(line: 783, column: 9, scope: !4645, inlinedAt: !5814)
!5822 = !DILocation(line: 783, column: 9, scope: !1060, inlinedAt: !5814)
!5823 = !DILocation(line: 783, column: 9, scope: !4648, inlinedAt: !5814)
!5824 = !DILocation(line: 7386, column: 5, scope: !1429)
!5825 = !DILocation(line: 781, column: 22, scope: !1050, inlinedAt: !5826)
!5826 = distinct !DILocation(line: 7387, column: 5, scope: !1429)
!5827 = !DILocation(line: 782, column: 15, scope: !1058, inlinedAt: !5826)
!5828 = !DILocation(line: 782, column: 9, scope: !1058, inlinedAt: !5826)
!5829 = !DILocation(line: 782, column: 9, scope: !1050, inlinedAt: !5826)
!5830 = !DILocation(line: 783, column: 9, scope: !4639, inlinedAt: !5826)
!5831 = !DILocation(line: 783, column: 9, scope: !4641, inlinedAt: !5826)
!5832 = !DILocation(line: 783, column: 9, scope: !4643, inlinedAt: !5826)
!5833 = !DILocation(line: 783, column: 9, scope: !4645, inlinedAt: !5826)
!5834 = !DILocation(line: 783, column: 9, scope: !1060, inlinedAt: !5826)
!5835 = !DILocation(line: 783, column: 9, scope: !4648, inlinedAt: !5826)
!5836 = !DILocation(line: 7387, column: 5, scope: !1429)
!5837 = !DILocation(line: 7389, column: 1, scope: !1429)
!5838 = !DILocation(line: 4427, column: 24, scope: !1442)
!5839 = !DILocation(line: 4427, column: 40, scope: !1442)
!5840 = !DILocation(line: 4439, column: 5, scope: !1442)
!5841 = !DILocation(line: 4439, column: 15, scope: !1442)
!5842 = !DILocation(line: 4441, column: 10, scope: !5843)
!5843 = distinct !DILexicalBlock(scope: !1442, file: !1, line: 4441, column: 9)
!5844 = !DILocation(line: 4441, column: 9, scope: !1442)
!5845 = !DILocation(line: 4445, column: 32, scope: !1442)
!5846 = !DILocation(line: 4445, column: 15, scope: !1442)
!5847 = !DILocation(line: 4440, column: 11, scope: !1442)
!5848 = !DILocation(line: 4446, column: 5, scope: !1450)
!5849 = !DILocation(line: 4447, column: 11, scope: !1450)
!5850 = !DILocation(line: 4429, column: 10, scope: !1442)
!5851 = !DILocation(line: 4448, column: 5, scope: !1450)
!5852 = !DILocation(line: 4449, column: 5, scope: !5853)
!5853 = !DILexicalBlockFile(scope: !1452, file: !1, discriminator: 1)
!5854 = !DILocation(line: 4449, column: 5, scope: !5855)
!5855 = distinct !DILexicalBlock(scope: !1452, file: !1, line: 4449, column: 5)
!5856 = !DILocation(line: 4449, column: 5, scope: !1452)
!5857 = !DILocation(line: 4449, column: 5, scope: !5858)
!5858 = !DILexicalBlockFile(scope: !5855, file: !1, discriminator: 3)
!5859 = !DILocation(line: 4451, column: 12, scope: !1442)
!5860 = !DILocation(line: 4451, column: 5, scope: !1442)
!5861 = !DILocation(line: 4452, column: 1, scope: !1442)
!5862 = !DILocation(line: 4461, column: 23, scope: !1453)
!5863 = !DILocation(line: 4461, column: 39, scope: !1453)
!5864 = !DILocation(line: 4463, column: 5, scope: !1453)
!5865 = !DILocation(line: 4463, column: 9, scope: !1453)
!5866 = !DILocation(line: 4464, column: 10, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !1453, file: !1, line: 4464, column: 9)
!5868 = !DILocation(line: 4464, column: 9, scope: !1453)
!5869 = !DILocation(line: 4466, column: 20, scope: !1453)
!5870 = !DILocation(line: 4466, column: 14, scope: !1453)
!5871 = !DILocation(line: 4466, column: 7, scope: !1453)
!5872 = !DILocation(line: 4467, column: 11, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !1453, file: !1, line: 4467, column: 9)
!5874 = !DILocation(line: 4467, column: 9, scope: !1453)
!5875 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !5876)
!5876 = distinct !DILocation(line: 4468, column: 16, scope: !5873)
!5877 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !5876)
!5878 = !DILocation(line: 4468, column: 9, scope: !5873)
!5879 = !DILocation(line: 4469, column: 28, scope: !1453)
!5880 = !DILocation(line: 4469, column: 12, scope: !1453)
!5881 = !DILocation(line: 4469, column: 5, scope: !1453)
!5882 = !DILocation(line: 4470, column: 1, scope: !1453)
!5883 = !DILocation(line: 4613, column: 23, scope: !1458)
!5884 = !DILocation(line: 4613, column: 39, scope: !1458)
!5885 = !DILocation(line: 4615, column: 5, scope: !1458)
!5886 = !DILocation(line: 4619, column: 5, scope: !1478)
!5887 = !DILocation(line: 4615, column: 20, scope: !1458)
!5888 = !DILocation(line: 4620, column: 11, scope: !1478)
!5889 = !DILocation(line: 4616, column: 9, scope: !1458)
!5890 = !DILocation(line: 4621, column: 5, scope: !1478)
!5891 = !DILocation(line: 4622, column: 13, scope: !5892)
!5892 = distinct !DILexicalBlock(scope: !1458, file: !1, line: 4622, column: 9)
!5893 = !DILocation(line: 4622, column: 9, scope: !1458)
!5894 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !5895)
!5895 = distinct !DILocation(line: 4623, column: 16, scope: !5892)
!5896 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !5895)
!5897 = !DILocation(line: 4623, column: 9, scope: !5892)
!5898 = !DILocation(line: 4625, column: 13, scope: !1458)
!5899 = !DILocation(line: 4617, column: 15, scope: !1458)
!5900 = !DILocation(line: 4626, column: 15, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !1458, file: !1, line: 4626, column: 9)
!5902 = !DILocation(line: 4626, column: 9, scope: !1458)
!5903 = !DILocation(line: 4639, column: 5, scope: !1480)
!5904 = !DILocation(line: 4639, column: 5, scope: !1484)
!5905 = !DILocation(line: 4639, column: 5, scope: !5906)
!5906 = !DILexicalBlockFile(scope: !1482, file: !1, discriminator: 3)
!5907 = !DILocation(line: 4639, column: 5, scope: !5908)
!5908 = distinct !DILexicalBlock(scope: !1482, file: !1, line: 4639, column: 5)
!5909 = !DILocation(line: 4639, column: 5, scope: !1482)
!5910 = !DILocation(line: 4639, column: 5, scope: !5911)
!5911 = !DILexicalBlockFile(scope: !5908, file: !1, discriminator: 5)
!5912 = !DILocation(line: 4639, column: 5, scope: !5913)
!5913 = !DILexicalBlockFile(scope: !1480, file: !1, discriminator: 1)
!5914 = !DILocation(line: 4640, column: 5, scope: !1486)
!5915 = !DILocation(line: 4640, column: 5, scope: !1490)
!5916 = !DILocation(line: 4640, column: 5, scope: !5917)
!5917 = !DILexicalBlockFile(scope: !1488, file: !1, discriminator: 3)
!5918 = !DILocation(line: 4640, column: 5, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !1488, file: !1, line: 4640, column: 5)
!5920 = !DILocation(line: 4640, column: 5, scope: !1488)
!5921 = !DILocation(line: 4640, column: 5, scope: !5922)
!5922 = !DILexicalBlockFile(scope: !5919, file: !1, discriminator: 5)
!5923 = !DILocation(line: 4640, column: 5, scope: !5924)
!5924 = !DILexicalBlockFile(scope: !1486, file: !1, discriminator: 1)
!5925 = !DILocation(line: 4641, column: 5, scope: !1492)
!5926 = !DILocation(line: 4641, column: 5, scope: !1496)
!5927 = !DILocation(line: 4641, column: 5, scope: !5928)
!5928 = !DILexicalBlockFile(scope: !1494, file: !1, discriminator: 3)
!5929 = !DILocation(line: 4641, column: 5, scope: !5930)
!5930 = distinct !DILexicalBlock(scope: !1494, file: !1, line: 4641, column: 5)
!5931 = !DILocation(line: 4641, column: 5, scope: !1494)
!5932 = !DILocation(line: 4641, column: 5, scope: !5933)
!5933 = !DILexicalBlockFile(scope: !5930, file: !1, discriminator: 5)
!5934 = !DILocation(line: 4641, column: 5, scope: !5935)
!5935 = !DILexicalBlockFile(scope: !1492, file: !1, discriminator: 1)
!5936 = !DILocation(line: 4642, column: 5, scope: !1498)
!5937 = !DILocation(line: 4642, column: 5, scope: !1502)
!5938 = !DILocation(line: 4642, column: 5, scope: !5939)
!5939 = !DILexicalBlockFile(scope: !1500, file: !1, discriminator: 3)
!5940 = !DILocation(line: 4642, column: 5, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !1500, file: !1, line: 4642, column: 5)
!5942 = !DILocation(line: 4642, column: 5, scope: !1500)
!5943 = !DILocation(line: 4642, column: 5, scope: !5944)
!5944 = !DILexicalBlockFile(scope: !5941, file: !1, discriminator: 5)
!5945 = !DILocation(line: 4642, column: 5, scope: !5946)
!5946 = !DILexicalBlockFile(scope: !1498, file: !1, discriminator: 1)
!5947 = !DILocation(line: 4643, column: 5, scope: !1504)
!5948 = !DILocation(line: 4643, column: 5, scope: !1508)
!5949 = !DILocation(line: 4643, column: 5, scope: !5950)
!5950 = !DILexicalBlockFile(scope: !1506, file: !1, discriminator: 3)
!5951 = !DILocation(line: 4643, column: 5, scope: !5952)
!5952 = distinct !DILexicalBlock(scope: !1506, file: !1, line: 4643, column: 5)
!5953 = !DILocation(line: 4643, column: 5, scope: !1506)
!5954 = !DILocation(line: 4643, column: 5, scope: !5955)
!5955 = !DILexicalBlockFile(scope: !5952, file: !1, discriminator: 5)
!5956 = !DILocation(line: 4643, column: 5, scope: !5957)
!5957 = !DILexicalBlockFile(scope: !1504, file: !1, discriminator: 1)
!5958 = !DILocation(line: 4643, column: 5, scope: !1458)
!5959 = !DILocation(line: 4648, column: 1, scope: !1458)
!5960 = !DILocation(line: 4527, column: 24, scope: !1509)
!5961 = !DILocation(line: 4527, column: 40, scope: !1509)
!5962 = !DILocation(line: 4527, column: 56, scope: !1509)
!5963 = !DILocation(line: 4529, column: 5, scope: !1509)
!5964 = !DILocation(line: 4530, column: 5, scope: !1509)
!5965 = !DILocation(line: 4530, column: 9, scope: !1509)
!5966 = !DILocation(line: 4533, column: 15, scope: !1509)
!5967 = !DILocation(line: 4535, column: 5, scope: !1509)
!5968 = !DILocation(line: 4536, column: 10, scope: !1509)
!5969 = !DILocation(line: 4536, column: 24, scope: !1509)
!5970 = !DILocation(line: 4529, column: 12, scope: !1509)
!5971 = !DILocation(line: 4537, column: 10, scope: !5972)
!5972 = distinct !DILexicalBlock(scope: !1509, file: !1, line: 4537, column: 9)
!5973 = !DILocation(line: 4537, column: 9, scope: !1509)
!5974 = !DILocation(line: 4547, column: 5, scope: !1519)
!5975 = !DILocation(line: 4556, column: 9, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !1519, file: !1, line: 4556, column: 9)
!5977 = !DILocation(line: 4556, column: 16, scope: !5976)
!5978 = !DILocation(line: 4560, column: 30, scope: !5976)
!5979 = !DILocation(line: 4556, column: 9, scope: !1519)
!5980 = !DILocation(line: 4557, column: 18, scope: !5976)
!5981 = !DILocation(line: 4532, column: 9, scope: !1509)
!5982 = !DILocation(line: 4557, column: 9, scope: !5976)
!5983 = !DILocation(line: 4560, column: 18, scope: !5976)
!5984 = !DILocation(line: 4562, column: 5, scope: !1519)
!5985 = !DILocation(line: 4564, column: 9, scope: !5986)
!5986 = distinct !DILexicalBlock(scope: !1509, file: !1, line: 4564, column: 9)
!5987 = !DILocation(line: 4564, column: 9, scope: !1509)
!5988 = !DILocation(line: 1311, column: 49, scope: !992, inlinedAt: !5989)
!5989 = distinct !DILocation(line: 4565, column: 24, scope: !5990)
!5990 = distinct !DILexicalBlock(scope: !5986, file: !1, line: 4564, column: 17)
!5991 = !DILocation(line: 1311, column: 12, scope: !992, inlinedAt: !5989)
!5992 = !DILocation(line: 4566, column: 9, scope: !5990)
!5993 = !DILocation(line: 4570, column: 5, scope: !1509)
!5994 = !DILocation(line: 781, column: 22, scope: !1050, inlinedAt: !5995)
!5995 = distinct !DILocation(line: 4573, column: 5, scope: !1509)
!5996 = !DILocation(line: 782, column: 15, scope: !1058, inlinedAt: !5995)
!5997 = !DILocation(line: 782, column: 9, scope: !1058, inlinedAt: !5995)
!5998 = !DILocation(line: 782, column: 9, scope: !1050, inlinedAt: !5995)
!5999 = !DILocation(line: 783, column: 9, scope: !4639, inlinedAt: !5995)
!6000 = !DILocation(line: 783, column: 9, scope: !4641, inlinedAt: !5995)
!6001 = !DILocation(line: 783, column: 9, scope: !4643, inlinedAt: !5995)
!6002 = !DILocation(line: 783, column: 9, scope: !4645, inlinedAt: !5995)
!6003 = !DILocation(line: 783, column: 9, scope: !1060, inlinedAt: !5995)
!6004 = !DILocation(line: 783, column: 9, scope: !4648, inlinedAt: !5995)
!6005 = !DILocation(line: 4573, column: 5, scope: !1509)
!6006 = !DILocation(line: 4575, column: 1, scope: !1509)
!6007 = !DILocation(line: 4846, column: 23, scope: !1520)
!6008 = !DILocation(line: 4846, column: 39, scope: !1520)
!6009 = !DILocation(line: 4846, column: 55, scope: !1520)
!6010 = !DILocation(line: 4848, column: 5, scope: !1520)
!6011 = !DILocation(line: 4849, column: 5, scope: !1520)
!6012 = !DILocation(line: 4849, column: 15, scope: !1520)
!6013 = !DILocation(line: 4850, column: 5, scope: !1520)
!6014 = !DILocation(line: 4850, column: 15, scope: !1520)
!6015 = !DILocation(line: 4851, column: 5, scope: !1520)
!6016 = !DILocation(line: 4851, column: 9, scope: !1520)
!6017 = !DILocation(line: 4852, column: 5, scope: !1520)
!6018 = !DILocation(line: 4852, column: 9, scope: !1520)
!6019 = !DILocation(line: 4853, column: 5, scope: !1520)
!6020 = !DILocation(line: 4853, column: 11, scope: !1520)
!6021 = !DILocation(line: 4865, column: 15, scope: !1520)
!6022 = !DILocation(line: 4867, column: 5, scope: !1520)
!6023 = !DILocation(line: 4868, column: 10, scope: !1520)
!6024 = !DILocation(line: 4868, column: 24, scope: !1520)
!6025 = !DILocation(line: 4871, column: 10, scope: !1520)
!6026 = !DILocation(line: 4871, column: 19, scope: !1520)
!6027 = !DILocation(line: 4848, column: 12, scope: !1520)
!6028 = !DILocation(line: 4873, column: 10, scope: !6029)
!6029 = distinct !DILexicalBlock(scope: !1520, file: !1, line: 4873, column: 9)
!6030 = !DILocation(line: 4792, column: 5, scope: !1569, inlinedAt: !6031)
!6031 = distinct !DILocation(line: 4989, column: 18, scope: !6032)
!6032 = distinct !DILexicalBlock(scope: !1552, file: !1, line: 4988, column: 9)
!6033 = !DILocation(line: 4748, column: 5, scope: !1582, inlinedAt: !6034)
!6034 = distinct !DILocation(line: 4995, column: 18, scope: !6035)
!6035 = distinct !DILexicalBlock(scope: !6032, file: !1, line: 4994, column: 9)
!6036 = !DILocation(line: 4772, column: 5, scope: !1593, inlinedAt: !6037)
!6037 = distinct !DILocation(line: 5001, column: 18, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6035, file: !1, line: 5000, column: 9)
!6039 = !DILocation(line: 4808, column: 5, scope: !1601, inlinedAt: !6040)
!6040 = distinct !DILocation(line: 5005, column: 14, scope: !6038)
!6041 = !DILocation(line: 4873, column: 9, scope: !1520)
!6042 = !DILocation(line: 4896, column: 14, scope: !6043)
!6043 = distinct !DILexicalBlock(scope: !1546, file: !1, line: 4896, column: 13)
!6044 = !DILocation(line: 4886, column: 9, scope: !6045)
!6045 = distinct !DILexicalBlock(scope: !1520, file: !1, line: 4886, column: 9)
!6046 = !DILocation(line: 4886, column: 25, scope: !6045)
!6047 = !DILocation(line: 4886, column: 15, scope: !6045)
!6048 = !DILocation(line: 4886, column: 40, scope: !6049)
!6049 = !DILexicalBlockFile(scope: !6045, file: !1, discriminator: 2)
!6050 = !DILocation(line: 4887, column: 25, scope: !6051)
!6051 = distinct !DILexicalBlock(scope: !6045, file: !1, line: 4886, column: 44)
!6052 = !DILocation(line: 4887, column: 9, scope: !6051)
!6053 = !DILocation(line: 4890, column: 9, scope: !6051)
!6054 = !DILocation(line: 4893, column: 15, scope: !1547)
!6055 = !DILocation(line: 4894, column: 9, scope: !1546)
!6056 = !DILocation(line: 4895, column: 9, scope: !1546)
!6057 = !DILocation(line: 4896, column: 40, scope: !6043)
!6058 = !DILocation(line: 4896, column: 44, scope: !6043)
!6059 = !DILocation(line: 4896, column: 64, scope: !6043)
!6060 = !DILocation(line: 4896, column: 13, scope: !1546)
!6061 = !DILocation(line: 4897, column: 29, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6043, file: !1, line: 4896, column: 71)
!6063 = !DILocation(line: 4897, column: 13, scope: !6062)
!6064 = !DILocation(line: 4900, column: 13, scope: !6062)
!6065 = !DILocation(line: 4903, column: 38, scope: !6066)
!6066 = distinct !DILexicalBlock(scope: !1546, file: !1, line: 4903, column: 13)
!6067 = !DILocation(line: 4894, column: 16, scope: !1546)
!6068 = !DILocation(line: 4895, column: 14, scope: !1546)
!6069 = !DILocation(line: 4903, column: 13, scope: !6066)
!6070 = !DILocation(line: 4904, column: 75, scope: !6066)
!6071 = !DILocation(line: 4904, column: 81, scope: !6066)
!6072 = !DILocation(line: 4905, column: 38, scope: !6066)
!6073 = !DILocation(line: 4894, column: 23, scope: !1546)
!6074 = !DILocation(line: 4895, column: 22, scope: !1546)
!6075 = !DILocation(line: 4905, column: 13, scope: !6066)
!6076 = !DILocation(line: 4906, column: 75, scope: !6066)
!6077 = !DILocation(line: 4903, column: 13, scope: !1546)
!6078 = !DILocation(line: 4913, column: 5, scope: !6079)
!6079 = !DILexicalBlockFile(scope: !1547, file: !1, discriminator: 1)
!6080 = !DILocation(line: 4909, column: 25, scope: !1546)
!6081 = !DILocation(line: 4910, column: 26, scope: !1546)
!6082 = !DILocation(line: 4911, column: 25, scope: !1546)
!6083 = !DILocation(line: 4912, column: 26, scope: !1546)
!6084 = !DILocation(line: 4914, column: 14, scope: !1547)
!6085 = !DILocation(line: 4915, column: 14, scope: !6086)
!6086 = distinct !DILexicalBlock(scope: !6087, file: !1, line: 4915, column: 13)
!6087 = distinct !DILexicalBlock(scope: !6088, file: !1, line: 4914, column: 18)
!6088 = distinct !DILexicalBlock(scope: !1547, file: !1, line: 4914, column: 14)
!6089 = !DILocation(line: 4915, column: 37, scope: !6086)
!6090 = !DILocation(line: 4915, column: 41, scope: !6086)
!6091 = !DILocation(line: 4915, column: 58, scope: !6086)
!6092 = !DILocation(line: 4915, column: 13, scope: !6087)
!6093 = !DILocation(line: 4916, column: 29, scope: !6094)
!6094 = distinct !DILexicalBlock(scope: !6086, file: !1, line: 4915, column: 65)
!6095 = !DILocation(line: 4916, column: 13, scope: !6094)
!6096 = !DILocation(line: 4918, column: 13, scope: !6094)
!6097 = !DILocation(line: 4921, column: 40, scope: !6098)
!6098 = distinct !DILexicalBlock(scope: !6087, file: !1, line: 4921, column: 13)
!6099 = !DILocation(line: 4825, column: 37, scope: !1553, inlinedAt: !6100)
!6100 = distinct !DILocation(line: 4921, column: 14, scope: !6098)
!6101 = !DILocation(line: 4825, column: 54, scope: !1553, inlinedAt: !6100)
!6102 = !DILocation(line: 4825, column: 63, scope: !1553, inlinedAt: !6100)
!6103 = !DILocation(line: 4827, column: 9, scope: !1553, inlinedAt: !6100)
!6104 = !DILocation(line: 4829, column: 39, scope: !1553, inlinedAt: !6100)
!6105 = !DILocation(line: 4829, column: 14, scope: !1553, inlinedAt: !6100)
!6106 = !DILocation(line: 4828, column: 15, scope: !1553, inlinedAt: !6100)
!6107 = !DILocation(line: 4830, column: 10, scope: !6108, inlinedAt: !6100)
!6108 = distinct !DILexicalBlock(scope: !1553, file: !1, line: 4830, column: 9)
!6109 = !DILocation(line: 4830, column: 9, scope: !1553, inlinedAt: !6100)
!6110 = !DILocation(line: 4832, column: 27, scope: !1553, inlinedAt: !6100)
!6111 = !DILocation(line: 4832, column: 10, scope: !1553, inlinedAt: !6100)
!6112 = !DILocation(line: 4833, column: 13, scope: !6113, inlinedAt: !6100)
!6113 = distinct !DILexicalBlock(scope: !1553, file: !1, line: 4833, column: 9)
!6114 = !DILocation(line: 4833, column: 20, scope: !6113, inlinedAt: !6100)
!6115 = !DILocation(line: 4833, column: 23, scope: !6116, inlinedAt: !6100)
!6116 = !DILexicalBlockFile(scope: !6113, file: !1, discriminator: 1)
!6117 = !DILocation(line: 4833, column: 9, scope: !1553, inlinedAt: !6100)
!6118 = !DILocation(line: 4835, column: 25, scope: !1553, inlinedAt: !6100)
!6119 = !DILocation(line: 4835, column: 11, scope: !1553, inlinedAt: !6100)
!6120 = !DILocation(line: 4836, column: 14, scope: !6121, inlinedAt: !6100)
!6121 = distinct !DILexicalBlock(scope: !1553, file: !1, line: 4836, column: 9)
!6122 = !DILocation(line: 4836, column: 21, scope: !6121, inlinedAt: !6100)
!6123 = !DILocation(line: 4836, column: 24, scope: !6124, inlinedAt: !6100)
!6124 = !DILexicalBlockFile(scope: !6121, file: !1, discriminator: 1)
!6125 = !DILocation(line: 4836, column: 9, scope: !1553, inlinedAt: !6100)
!6126 = !DILocation(line: 4839, column: 5, scope: !1553, inlinedAt: !6100)
!6127 = !DILocation(line: 4921, column: 14, scope: !6098)
!6128 = !DILocation(line: 4841, column: 5, scope: !6129, inlinedAt: !6100)
!6129 = !DILexicalBlockFile(scope: !1565, file: !1, discriminator: 1)
!6130 = !DILocation(line: 4841, column: 5, scope: !6131, inlinedAt: !6100)
!6131 = !DILexicalBlockFile(scope: !1567, file: !1, discriminator: 4)
!6132 = !DILocation(line: 4841, column: 5, scope: !6133, inlinedAt: !6100)
!6133 = distinct !DILexicalBlock(scope: !1567, file: !1, line: 4841, column: 5)
!6134 = !DILocation(line: 4841, column: 5, scope: !1567, inlinedAt: !6100)
!6135 = !DILocation(line: 4841, column: 5, scope: !6136, inlinedAt: !6100)
!6136 = !DILexicalBlockFile(scope: !6133, file: !1, discriminator: 6)
!6137 = !DILocation(line: 4922, column: 72, scope: !6098)
!6138 = !DILocation(line: 4923, column: 40, scope: !6098)
!6139 = !DILocation(line: 4825, column: 37, scope: !1553, inlinedAt: !6140)
!6140 = distinct !DILocation(line: 4923, column: 14, scope: !6098)
!6141 = !DILocation(line: 4825, column: 54, scope: !1553, inlinedAt: !6140)
!6142 = !DILocation(line: 4825, column: 63, scope: !1553, inlinedAt: !6140)
!6143 = !DILocation(line: 4827, column: 9, scope: !1553, inlinedAt: !6140)
!6144 = !DILocation(line: 4829, column: 39, scope: !1553, inlinedAt: !6140)
!6145 = !DILocation(line: 4829, column: 14, scope: !1553, inlinedAt: !6140)
!6146 = !DILocation(line: 4828, column: 15, scope: !1553, inlinedAt: !6140)
!6147 = !DILocation(line: 4830, column: 10, scope: !6108, inlinedAt: !6140)
!6148 = !DILocation(line: 4830, column: 9, scope: !1553, inlinedAt: !6140)
!6149 = !DILocation(line: 4832, column: 27, scope: !1553, inlinedAt: !6140)
!6150 = !DILocation(line: 4832, column: 10, scope: !1553, inlinedAt: !6140)
!6151 = !DILocation(line: 4833, column: 13, scope: !6113, inlinedAt: !6140)
!6152 = !DILocation(line: 4833, column: 20, scope: !6113, inlinedAt: !6140)
!6153 = !DILocation(line: 4833, column: 23, scope: !6116, inlinedAt: !6140)
!6154 = !DILocation(line: 4833, column: 9, scope: !1553, inlinedAt: !6140)
!6155 = !DILocation(line: 4835, column: 25, scope: !1553, inlinedAt: !6140)
!6156 = !DILocation(line: 4835, column: 11, scope: !1553, inlinedAt: !6140)
!6157 = !DILocation(line: 4836, column: 14, scope: !6121, inlinedAt: !6140)
!6158 = !DILocation(line: 4836, column: 21, scope: !6121, inlinedAt: !6140)
!6159 = !DILocation(line: 4836, column: 24, scope: !6124, inlinedAt: !6140)
!6160 = !DILocation(line: 4836, column: 9, scope: !1553, inlinedAt: !6140)
!6161 = !DILocation(line: 4839, column: 5, scope: !1553, inlinedAt: !6140)
!6162 = !DILocation(line: 4923, column: 14, scope: !6098)
!6163 = !DILocation(line: 4841, column: 5, scope: !6129, inlinedAt: !6140)
!6164 = !DILocation(line: 4841, column: 5, scope: !6131, inlinedAt: !6140)
!6165 = !DILocation(line: 4841, column: 5, scope: !6133, inlinedAt: !6140)
!6166 = !DILocation(line: 4841, column: 5, scope: !1567, inlinedAt: !6140)
!6167 = !DILocation(line: 4841, column: 5, scope: !6136, inlinedAt: !6140)
!6168 = !DILocation(line: 4921, column: 13, scope: !6087)
!6169 = !DILocation(line: 957, column: 31, scope: !928, inlinedAt: !6170)
!6170 = distinct !DILocation(line: 4938, column: 9, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !1520, file: !1, line: 4938, column: 9)
!6172 = !DILocation(line: 957, column: 54, scope: !928, inlinedAt: !6170)
!6173 = !DILocation(line: 957, column: 64, scope: !928, inlinedAt: !6170)
!6174 = !DILocation(line: 958, column: 16, scope: !6175, inlinedAt: !6170)
!6175 = distinct !DILexicalBlock(scope: !928, file: !1, line: 958, column: 9)
!6176 = !DILocation(line: 958, column: 10, scope: !6175, inlinedAt: !6170)
!6177 = !DILocation(line: 4938, column: 49, scope: !6171)
!6178 = !DILocation(line: 958, column: 23, scope: !6175, inlinedAt: !6170)
!6179 = !DILocation(line: 958, column: 33, scope: !6175, inlinedAt: !6170)
!6180 = !DILocation(line: 958, column: 27, scope: !6175, inlinedAt: !6170)
!6181 = !DILocation(line: 958, column: 49, scope: !6175, inlinedAt: !6170)
!6182 = !DILocation(line: 958, column: 38, scope: !6175, inlinedAt: !6170)
!6183 = !DILocation(line: 959, column: 22, scope: !6184, inlinedAt: !6170)
!6184 = distinct !DILexicalBlock(scope: !6175, file: !1, line: 958, column: 69)
!6185 = !DILocation(line: 959, column: 9, scope: !6184, inlinedAt: !6170)
!6186 = !DILocation(line: 4938, column: 57, scope: !6171)
!6187 = !DILocation(line: 4939, column: 53, scope: !6171)
!6188 = !DILocation(line: 4940, column: 54, scope: !6171)
!6189 = !DILocation(line: 968, column: 29, scope: !935, inlinedAt: !6190)
!6190 = distinct !DILocation(line: 4939, column: 9, scope: !6171)
!6191 = !DILocation(line: 968, column: 48, scope: !935, inlinedAt: !6190)
!6192 = !DILocation(line: 968, column: 60, scope: !935, inlinedAt: !6190)
!6193 = !DILocation(line: 969, column: 17, scope: !4943, inlinedAt: !6190)
!6194 = !DILocation(line: 969, column: 43, scope: !4943, inlinedAt: !6190)
!6195 = !DILocation(line: 969, column: 36, scope: !4943, inlinedAt: !6190)
!6196 = !DILocation(line: 970, column: 22, scope: !4947, inlinedAt: !6190)
!6197 = !DILocation(line: 970, column: 9, scope: !4947, inlinedAt: !6190)
!6198 = !DILocation(line: 4939, column: 57, scope: !6171)
!6199 = !DILocation(line: 4940, column: 58, scope: !6171)
!6200 = !DILocation(line: 979, column: 38, scope: !942, inlinedAt: !6201)
!6201 = distinct !DILocation(line: 4940, column: 9, scope: !6171)
!6202 = !DILocation(line: 979, column: 57, scope: !942, inlinedAt: !6201)
!6203 = !DILocation(line: 980, column: 36, scope: !942, inlinedAt: !6201)
!6204 = !DILocation(line: 981, column: 13, scope: !4956, inlinedAt: !6201)
!6205 = !DILocation(line: 981, column: 23, scope: !4958, inlinedAt: !6201)
!6206 = !DILocation(line: 981, column: 18, scope: !4956, inlinedAt: !6201)
!6207 = !DILocation(line: 982, column: 22, scope: !4961, inlinedAt: !6201)
!6208 = !DILocation(line: 982, column: 9, scope: !4961, inlinedAt: !6201)
!6209 = !DILocation(line: 4938, column: 9, scope: !1520)
!6210 = !DILocation(line: 4985, column: 5, scope: !1552)
!6211 = !DILocation(line: 4988, column: 11, scope: !6032)
!6212 = !DILocation(line: 4988, column: 39, scope: !6032)
!6213 = !DILocation(line: 4988, column: 28, scope: !6032)
!6214 = !DILocation(line: 4989, column: 55, scope: !6032)
!6215 = !DILocation(line: 4856, column: 13, scope: !1520)
!6216 = !DILocation(line: 4789, column: 34, scope: !1569, inlinedAt: !6031)
!6217 = !DILocation(line: 4789, column: 47, scope: !1569, inlinedAt: !6031)
!6218 = !DILocation(line: 4792, column: 5, scope: !6219, inlinedAt: !6031)
!6219 = distinct !DILexicalBlock(scope: !1569, file: !1, line: 4792, column: 5)
!6220 = !DILocation(line: 4792, column: 5, scope: !6221, inlinedAt: !6031)
!6221 = !DILexicalBlockFile(scope: !6222, file: !1, discriminator: 2)
!6222 = distinct !DILexicalBlock(scope: !6219, file: !1, line: 4792, column: 5)
!6223 = !{!6224, !3877, i64 0}
!6224 = !{!"timespec", !3877, i64 0, !3877, i64 8}
!6225 = !{!6224, !3877, i64 8}
!6226 = !DILocation(line: 4989, column: 18, scope: !6032)
!6227 = !DILocation(line: 4793, column: 12, scope: !1569, inlinedAt: !6031)
!6228 = !DILocation(line: 4798, column: 1, scope: !1569, inlinedAt: !6031)
!6229 = !DILocation(line: 4862, column: 9, scope: !1520)
!6230 = !DILocation(line: 4989, column: 9, scope: !6032)
!6231 = !DILocation(line: 4994, column: 41, scope: !6232)
!6232 = !DILexicalBlockFile(scope: !6035, file: !1, discriminator: 1)
!6233 = !DILocation(line: 4994, column: 36, scope: !6035)
!6234 = !DILocation(line: 4995, column: 52, scope: !6035)
!6235 = !DILocation(line: 4744, column: 23, scope: !1582, inlinedAt: !6034)
!6236 = !DILocation(line: 4744, column: 34, scope: !1582, inlinedAt: !6034)
!6237 = !DILocation(line: 4744, column: 48, scope: !1582, inlinedAt: !6034)
!6238 = !DILocation(line: 4744, column: 58, scope: !1582, inlinedAt: !6034)
!6239 = !DILocation(line: 4747, column: 17, scope: !1582, inlinedAt: !6034)
!6240 = !DILocation(line: 4747, column: 9, scope: !1582, inlinedAt: !6034)
!6241 = !DILocation(line: 4748, column: 5, scope: !6242, inlinedAt: !6034)
!6242 = distinct !DILexicalBlock(scope: !1582, file: !1, line: 4748, column: 5)
!6243 = !DILocation(line: 4748, column: 5, scope: !6244, inlinedAt: !6034)
!6244 = !DILexicalBlockFile(scope: !6245, file: !1, discriminator: 2)
!6245 = distinct !DILexicalBlock(scope: !6242, file: !1, line: 4748, column: 5)
!6246 = !DILocation(line: 4995, column: 18, scope: !6035)
!6247 = !DILocation(line: 4749, column: 12, scope: !1582, inlinedAt: !6034)
!6248 = !DILocation(line: 4760, column: 1, scope: !1582, inlinedAt: !6034)
!6249 = !DILocation(line: 4995, column: 9, scope: !6035)
!6250 = !DILocation(line: 5000, column: 14, scope: !6038)
!6251 = !DILocation(line: 5000, column: 17, scope: !6038)
!6252 = !DILocation(line: 5000, column: 9, scope: !6035)
!6253 = !DILocation(line: 4769, column: 19, scope: !1593, inlinedAt: !6037)
!6254 = !DILocation(line: 4769, column: 30, scope: !1593, inlinedAt: !6037)
!6255 = !DILocation(line: 4772, column: 5, scope: !6256, inlinedAt: !6037)
!6256 = distinct !DILexicalBlock(scope: !1593, file: !1, line: 4772, column: 5)
!6257 = !DILocation(line: 4772, column: 5, scope: !6258, inlinedAt: !6037)
!6258 = !DILexicalBlockFile(scope: !6259, file: !1, discriminator: 2)
!6259 = distinct !DILexicalBlock(scope: !6256, file: !1, line: 4772, column: 5)
!6260 = !DILocation(line: 5001, column: 18, scope: !6038)
!6261 = !DILocation(line: 4773, column: 12, scope: !1593, inlinedAt: !6037)
!6262 = !DILocation(line: 4778, column: 1, scope: !1593, inlinedAt: !6037)
!6263 = !DILocation(line: 5001, column: 9, scope: !6038)
!6264 = !DILocation(line: 5005, column: 41, scope: !6038)
!6265 = !DILocation(line: 4805, column: 24, scope: !1601, inlinedAt: !6040)
!6266 = !DILocation(line: 4805, column: 37, scope: !1601, inlinedAt: !6040)
!6267 = !DILocation(line: 4808, column: 5, scope: !6268, inlinedAt: !6040)
!6268 = distinct !DILexicalBlock(scope: !1601, file: !1, line: 4808, column: 5)
!6269 = !DILocation(line: 4808, column: 5, scope: !6270, inlinedAt: !6040)
!6270 = !DILexicalBlockFile(scope: !6271, file: !1, discriminator: 2)
!6271 = distinct !DILexicalBlock(scope: !6268, file: !1, line: 4808, column: 5)
!6272 = !DILocation(line: 5005, column: 14, scope: !6038)
!6273 = !DILocation(line: 4809, column: 12, scope: !1601, inlinedAt: !6040)
!6274 = !DILocation(line: 4820, column: 1, scope: !1601, inlinedAt: !6040)
!6275 = !DILocation(line: 5007, column: 5, scope: !1552)
!6276 = !DILocation(line: 5009, column: 16, scope: !6277)
!6277 = distinct !DILexicalBlock(scope: !1520, file: !1, line: 5009, column: 9)
!6278 = !DILocation(line: 5009, column: 9, scope: !1520)
!6279 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !6280)
!6280 = distinct !DILocation(line: 5011, column: 24, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6277, file: !1, line: 5009, column: 21)
!6282 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !6280)
!6283 = !DILocation(line: 5012, column: 9, scope: !6281)
!6284 = !DILocation(line: 5017, column: 5, scope: !1520)
!6285 = !DILocation(line: 5018, column: 5, scope: !1520)
!6286 = !DILocation(line: 781, column: 22, scope: !1050, inlinedAt: !6287)
!6287 = distinct !DILocation(line: 5021, column: 5, scope: !1520)
!6288 = !DILocation(line: 782, column: 15, scope: !1058, inlinedAt: !6287)
!6289 = !DILocation(line: 782, column: 9, scope: !1058, inlinedAt: !6287)
!6290 = !DILocation(line: 782, column: 9, scope: !1050, inlinedAt: !6287)
!6291 = !DILocation(line: 783, column: 9, scope: !4639, inlinedAt: !6287)
!6292 = !DILocation(line: 783, column: 9, scope: !4641, inlinedAt: !6287)
!6293 = !DILocation(line: 783, column: 9, scope: !4643, inlinedAt: !6287)
!6294 = !DILocation(line: 783, column: 9, scope: !4645, inlinedAt: !6287)
!6295 = !DILocation(line: 783, column: 9, scope: !1060, inlinedAt: !6287)
!6296 = !DILocation(line: 783, column: 9, scope: !4648, inlinedAt: !6287)
!6297 = !DILocation(line: 5021, column: 5, scope: !1520)
!6298 = !DILocation(line: 5027, column: 1, scope: !1520)
!6299 = !DILocation(line: 7565, column: 23, scope: !1607)
!6300 = !DILocation(line: 7565, column: 39, scope: !1607)
!6301 = !DILocation(line: 7567, column: 5, scope: !1607)
!6302 = !DILocation(line: 7569, column: 5, scope: !1607)
!6303 = !DILocation(line: 7569, column: 11, scope: !1607)
!6304 = !DILocation(line: 7567, column: 16, scope: !1607)
!6305 = !DILocation(line: 7570, column: 9, scope: !1607)
!6306 = !DILocation(line: 7568, column: 13, scope: !1607)
!6307 = !DILocation(line: 7571, column: 11, scope: !6308)
!6308 = distinct !DILexicalBlock(scope: !1607, file: !1, line: 7571, column: 9)
!6309 = !DILocation(line: 7571, column: 9, scope: !1607)
!6310 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !6311)
!6311 = distinct !DILocation(line: 7572, column: 16, scope: !6308)
!6312 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !6311)
!6313 = !DILocation(line: 7572, column: 9, scope: !6308)
!6314 = !DILocation(line: 7574, column: 36, scope: !1607)
!6315 = !{!6316, !3877, i64 0}
!6316 = !{!"tms", !3877, i64 0, !3877, i64 8, !3877, i64 16, !3877, i64 24}
!6317 = !DILocation(line: 7574, column: 48, scope: !1607)
!6318 = !DILocation(line: 7575, column: 36, scope: !1607)
!6319 = !{!6316, !3877, i64 8}
!6320 = !DILocation(line: 7575, column: 26, scope: !1607)
!6321 = !DILocation(line: 7575, column: 46, scope: !1607)
!6322 = !DILocation(line: 7576, column: 36, scope: !1607)
!6323 = !{!6316, !3877, i64 16}
!6324 = !DILocation(line: 7576, column: 26, scope: !1607)
!6325 = !DILocation(line: 7576, column: 47, scope: !1607)
!6326 = !DILocation(line: 7577, column: 36, scope: !1607)
!6327 = !{!6316, !3877, i64 24}
!6328 = !DILocation(line: 7577, column: 26, scope: !1607)
!6329 = !DILocation(line: 7577, column: 47, scope: !1607)
!6330 = !DILocation(line: 7578, column: 26, scope: !1607)
!6331 = !DILocation(line: 7578, column: 36, scope: !1607)
!6332 = !DILocation(line: 7504, column: 27, scope: !1620, inlinedAt: !6333)
!6333 = distinct !DILocation(line: 7573, column: 12, scope: !1607)
!6334 = !DILocation(line: 7504, column: 40, scope: !1620, inlinedAt: !6333)
!6335 = !DILocation(line: 7505, column: 12, scope: !1620, inlinedAt: !6333)
!6336 = !DILocation(line: 7505, column: 34, scope: !1620, inlinedAt: !6333)
!6337 = !DILocation(line: 7506, column: 12, scope: !1620, inlinedAt: !6333)
!6338 = !DILocation(line: 7508, column: 23, scope: !1620, inlinedAt: !6333)
!6339 = !DILocation(line: 7508, column: 15, scope: !1620, inlinedAt: !6333)
!6340 = !DILocation(line: 7509, column: 15, scope: !6341, inlinedAt: !6333)
!6341 = distinct !DILexicalBlock(scope: !1620, file: !1, line: 7509, column: 9)
!6342 = !DILocation(line: 7509, column: 9, scope: !1620, inlinedAt: !6333)
!6343 = !DILocation(line: 7574, column: 26, scope: !1607)
!6344 = !DILocation(line: 7574, column: 46, scope: !1607)
!6345 = !DILocation(line: 7522, column: 5, scope: !1631, inlinedAt: !6333)
!6346 = !DILocation(line: 7522, column: 5, scope: !1635, inlinedAt: !6333)
!6347 = !DILocation(line: 7522, column: 5, scope: !6348, inlinedAt: !6333)
!6348 = !DILexicalBlockFile(scope: !1633, file: !1, discriminator: 3)
!6349 = !DILocation(line: 7522, column: 5, scope: !6350, inlinedAt: !6333)
!6350 = distinct !DILexicalBlock(scope: !1633, file: !1, line: 7522, column: 5)
!6351 = !DILocation(line: 7522, column: 5, scope: !1633, inlinedAt: !6333)
!6352 = !DILocation(line: 7522, column: 5, scope: !6353, inlinedAt: !6333)
!6353 = !DILexicalBlockFile(scope: !6350, file: !1, discriminator: 5)
!6354 = !DILocation(line: 7573, column: 12, scope: !1607)
!6355 = !DILocation(line: 7522, column: 5, scope: !6356, inlinedAt: !6333)
!6356 = !DILexicalBlockFile(scope: !1631, file: !1, discriminator: 1)
!6357 = !DILocation(line: 7523, column: 5, scope: !1637, inlinedAt: !6333)
!6358 = !DILocation(line: 7523, column: 5, scope: !1641, inlinedAt: !6333)
!6359 = !DILocation(line: 7523, column: 5, scope: !6360, inlinedAt: !6333)
!6360 = !DILexicalBlockFile(scope: !1639, file: !1, discriminator: 3)
!6361 = !DILocation(line: 7523, column: 5, scope: !6362, inlinedAt: !6333)
!6362 = distinct !DILexicalBlock(scope: !1639, file: !1, line: 7523, column: 5)
!6363 = !DILocation(line: 7523, column: 5, scope: !1639, inlinedAt: !6333)
!6364 = !DILocation(line: 7523, column: 5, scope: !6365, inlinedAt: !6333)
!6365 = !DILexicalBlockFile(scope: !6362, file: !1, discriminator: 5)
!6366 = !DILocation(line: 7523, column: 5, scope: !6367, inlinedAt: !6333)
!6367 = !DILexicalBlockFile(scope: !1637, file: !1, discriminator: 1)
!6368 = !DILocation(line: 7524, column: 5, scope: !1643, inlinedAt: !6333)
!6369 = !DILocation(line: 7524, column: 5, scope: !1647, inlinedAt: !6333)
!6370 = !DILocation(line: 7524, column: 5, scope: !6371, inlinedAt: !6333)
!6371 = !DILexicalBlockFile(scope: !1645, file: !1, discriminator: 3)
!6372 = !DILocation(line: 7524, column: 5, scope: !6373, inlinedAt: !6333)
!6373 = distinct !DILexicalBlock(scope: !1645, file: !1, line: 7524, column: 5)
!6374 = !DILocation(line: 7524, column: 5, scope: !1645, inlinedAt: !6333)
!6375 = !DILocation(line: 7524, column: 5, scope: !6376, inlinedAt: !6333)
!6376 = !DILexicalBlockFile(scope: !6373, file: !1, discriminator: 5)
!6377 = !DILocation(line: 7524, column: 5, scope: !6378, inlinedAt: !6333)
!6378 = !DILexicalBlockFile(scope: !1643, file: !1, discriminator: 1)
!6379 = !DILocation(line: 7525, column: 5, scope: !1649, inlinedAt: !6333)
!6380 = !DILocation(line: 7525, column: 5, scope: !1653, inlinedAt: !6333)
!6381 = !DILocation(line: 7525, column: 5, scope: !6382, inlinedAt: !6333)
!6382 = !DILexicalBlockFile(scope: !1651, file: !1, discriminator: 3)
!6383 = !DILocation(line: 7525, column: 5, scope: !6384, inlinedAt: !6333)
!6384 = distinct !DILexicalBlock(scope: !1651, file: !1, line: 7525, column: 5)
!6385 = !DILocation(line: 7525, column: 5, scope: !1651, inlinedAt: !6333)
!6386 = !DILocation(line: 7525, column: 5, scope: !6387, inlinedAt: !6333)
!6387 = !DILexicalBlockFile(scope: !6384, file: !1, discriminator: 5)
!6388 = !DILocation(line: 7525, column: 5, scope: !6389, inlinedAt: !6333)
!6389 = !DILexicalBlockFile(scope: !1649, file: !1, discriminator: 1)
!6390 = !DILocation(line: 7526, column: 5, scope: !1655, inlinedAt: !6333)
!6391 = !DILocation(line: 7526, column: 5, scope: !1659, inlinedAt: !6333)
!6392 = !DILocation(line: 7526, column: 5, scope: !6393, inlinedAt: !6333)
!6393 = !DILexicalBlockFile(scope: !1657, file: !1, discriminator: 3)
!6394 = !DILocation(line: 7526, column: 5, scope: !6395, inlinedAt: !6333)
!6395 = distinct !DILexicalBlock(scope: !1657, file: !1, line: 7526, column: 5)
!6396 = !DILocation(line: 7526, column: 5, scope: !1657, inlinedAt: !6333)
!6397 = !DILocation(line: 7526, column: 5, scope: !6398, inlinedAt: !6333)
!6398 = !DILexicalBlockFile(scope: !6395, file: !1, discriminator: 5)
!6399 = !DILocation(line: 7526, column: 5, scope: !6400, inlinedAt: !6333)
!6400 = !DILexicalBlockFile(scope: !1655, file: !1, discriminator: 1)
!6401 = !DILocation(line: 7526, column: 5, scope: !1620, inlinedAt: !6333)
!6402 = !DILocation(line: 7579, column: 1, scope: !1607)
!6403 = !DILocation(line: 5036, column: 23, scope: !1660)
!6404 = !DILocation(line: 5036, column: 39, scope: !1660)
!6405 = !DILocation(line: 5038, column: 5, scope: !1660)
!6406 = !DILocation(line: 5038, column: 9, scope: !1660)
!6407 = !DILocation(line: 5039, column: 10, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !1660, file: !1, line: 5039, column: 9)
!6409 = !DILocation(line: 5039, column: 9, scope: !1660)
!6410 = !DILocation(line: 5043, column: 1, scope: !1660)
!6411 = !DILocation(line: 5040, column: 9, scope: !6408)
!6412 = !DILocation(line: 5041, column: 11, scope: !1660)
!6413 = !DILocation(line: 5041, column: 5, scope: !1660)
!6414 = !DILocation(line: 5188, column: 23, scope: !1665)
!6415 = !DILocation(line: 5188, column: 39, scope: !1665)
!6416 = !DILocation(line: 5190, column: 5, scope: !1665)
!6417 = !DILocation(line: 5192, column: 5, scope: !1665)
!6418 = !DILocation(line: 5194, column: 5, scope: !1665)
!6419 = !DILocation(line: 5190, column: 15, scope: !1665)
!6420 = !DILocation(line: 5192, column: 15, scope: !1665)
!6421 = !DILocation(line: 5199, column: 10, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !1665, file: !1, line: 5199, column: 9)
!6423 = !DILocation(line: 5199, column: 9, scope: !1665)
!6424 = !DILocation(line: 5203, column: 29, scope: !1665)
!6425 = !DILocation(line: 5203, column: 12, scope: !1665)
!6426 = !DILocation(line: 5191, column: 11, scope: !1665)
!6427 = !DILocation(line: 5204, column: 10, scope: !1677)
!6428 = !DILocation(line: 5204, column: 29, scope: !1677)
!6429 = !DILocation(line: 5205, column: 25, scope: !1676)
!6430 = !DILocation(line: 5205, column: 9, scope: !1676)
!6431 = !DILocation(line: 5207, column: 9, scope: !6432)
!6432 = !DILexicalBlockFile(scope: !1675, file: !1, discriminator: 1)
!6433 = !DILocation(line: 5207, column: 9, scope: !6434)
!6434 = distinct !DILexicalBlock(scope: !1675, file: !1, line: 5207, column: 9)
!6435 = !DILocation(line: 5207, column: 9, scope: !1675)
!6436 = !DILocation(line: 5207, column: 9, scope: !6437)
!6437 = !DILexicalBlockFile(scope: !6434, file: !1, discriminator: 3)
!6438 = !DILocation(line: 5210, column: 12, scope: !1665)
!6439 = !DILocation(line: 5194, column: 16, scope: !1665)
!6440 = !DILocation(line: 5210, column: 10, scope: !1665)
!6441 = !DILocation(line: 5211, column: 14, scope: !1681)
!6442 = !DILocation(line: 5211, column: 9, scope: !1665)
!6443 = !DILocation(line: 5212, column: 25, scope: !1680)
!6444 = !DILocation(line: 5212, column: 9, scope: !1680)
!6445 = !DILocation(line: 5213, column: 9, scope: !6446)
!6446 = !DILexicalBlockFile(scope: !1679, file: !1, discriminator: 1)
!6447 = !DILocation(line: 5213, column: 9, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !1679, file: !1, line: 5213, column: 9)
!6449 = !DILocation(line: 5213, column: 9, scope: !1679)
!6450 = !DILocation(line: 5213, column: 9, scope: !6451)
!6451 = !DILexicalBlockFile(scope: !6448, file: !1, discriminator: 3)
!6452 = !DILocation(line: 5217, column: 30, scope: !1665)
!6453 = !DILocation(line: 5217, column: 16, scope: !1665)
!6454 = !DILocation(line: 5193, column: 12, scope: !1665)
!6455 = !DILocation(line: 5218, column: 18, scope: !1685)
!6456 = !DILocation(line: 5218, column: 9, scope: !1665)
!6457 = !DILocation(line: 5219, column: 9, scope: !6458)
!6458 = !DILexicalBlockFile(scope: !1683, file: !1, discriminator: 1)
!6459 = !DILocation(line: 5219, column: 9, scope: !6460)
!6460 = distinct !DILexicalBlock(scope: !1683, file: !1, line: 5219, column: 9)
!6461 = !DILocation(line: 5219, column: 9, scope: !1683)
!6462 = !DILocation(line: 5219, column: 9, scope: !6463)
!6463 = !DILexicalBlockFile(scope: !6460, file: !1, discriminator: 3)
!6464 = !DILocation(line: 5223, column: 5, scope: !1665)
!6465 = !DILocation(line: 5227, column: 33, scope: !1665)
!6466 = !DILocation(line: 5047, column: 26, scope: !1716, inlinedAt: !6467)
!6467 = distinct !DILocation(line: 5227, column: 5, scope: !1665)
!6468 = !DILocation(line: 5047, column: 44, scope: !1716, inlinedAt: !6467)
!6469 = !DILocation(line: 5049, column: 16, scope: !1716, inlinedAt: !6467)
!6470 = !DILocation(line: 5050, column: 19, scope: !6471, inlinedAt: !6467)
!6471 = distinct !DILexicalBlock(scope: !6472, file: !1, line: 5050, column: 5)
!6472 = distinct !DILexicalBlock(scope: !1716, file: !1, line: 5050, column: 5)
!6473 = !DILocation(line: 5050, column: 5, scope: !6472, inlinedAt: !6467)
!6474 = !DILocation(line: 5051, column: 20, scope: !6471, inlinedAt: !6467)
!6475 = !DILocation(line: 5227, column: 5, scope: !1665)
!6476 = !DILocation(line: 5051, column: 9, scope: !6471, inlinedAt: !6467)
!6477 = !DILocation(line: 5050, column: 29, scope: !6471, inlinedAt: !6467)
!6478 = !DILocation(line: 5052, column: 5, scope: !1716, inlinedAt: !6467)
!6479 = !DILocation(line: 5228, column: 5, scope: !6480)
!6480 = !DILexicalBlockFile(scope: !1687, file: !1, discriminator: 1)
!6481 = !DILocation(line: 5228, column: 5, scope: !6482)
!6482 = distinct !DILexicalBlock(scope: !1687, file: !1, line: 5228, column: 5)
!6483 = !DILocation(line: 5228, column: 5, scope: !1687)
!6484 = !DILocation(line: 5228, column: 5, scope: !6485)
!6485 = !DILexicalBlockFile(scope: !6482, file: !1, discriminator: 3)
!6486 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !6487)
!6487 = distinct !DILocation(line: 5229, column: 12, scope: !1665)
!6488 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !6487)
!6489 = !DILocation(line: 5229, column: 5, scope: !1665)
!6490 = !DILocation(line: 5230, column: 1, scope: !1665)
!6491 = !DILocation(line: 5245, column: 24, scope: !1723)
!6492 = !DILocation(line: 5245, column: 40, scope: !1723)
!6493 = !DILocation(line: 5245, column: 56, scope: !1723)
!6494 = !DILocation(line: 5247, column: 5, scope: !1723)
!6495 = !DILocation(line: 5248, column: 5, scope: !1723)
!6496 = !DILocation(line: 5249, column: 12, scope: !1723)
!6497 = !DILocation(line: 5251, column: 5, scope: !1723)
!6498 = !DILocation(line: 5258, column: 5, scope: !1723)
!6499 = !DILocation(line: 5259, column: 10, scope: !1723)
!6500 = !DILocation(line: 5259, column: 24, scope: !1723)
!6501 = !DILocation(line: 5261, column: 10, scope: !1723)
!6502 = !DILocation(line: 5261, column: 19, scope: !1723)
!6503 = !DILocation(line: 5247, column: 12, scope: !1723)
!6504 = !DILocation(line: 5248, column: 15, scope: !1723)
!6505 = !DILocation(line: 5248, column: 22, scope: !1723)
!6506 = !DILocation(line: 5263, column: 10, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !1723, file: !1, line: 5263, column: 9)
!6508 = !DILocation(line: 5263, column: 9, scope: !1723)
!6509 = !DILocation(line: 5269, column: 10, scope: !6510)
!6510 = distinct !DILexicalBlock(scope: !1723, file: !1, line: 5269, column: 9)
!6511 = !DILocation(line: 5269, column: 29, scope: !6510)
!6512 = !DILocation(line: 5270, column: 25, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6510, file: !1, line: 5269, column: 54)
!6514 = !DILocation(line: 5270, column: 9, scope: !6513)
!6515 = !DILocation(line: 5272, column: 9, scope: !6513)
!6516 = !DILocation(line: 5274, column: 12, scope: !1723)
!6517 = !DILocation(line: 5251, column: 16, scope: !1723)
!6518 = !DILocation(line: 5274, column: 10, scope: !1723)
!6519 = !DILocation(line: 5275, column: 26, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !1723, file: !1, line: 5275, column: 9)
!6521 = !DILocation(line: 5275, column: 10, scope: !6520)
!6522 = !DILocation(line: 5275, column: 9, scope: !1723)
!6523 = !DILocation(line: 5276, column: 25, scope: !6524)
!6524 = distinct !DILexicalBlock(scope: !6520, file: !1, line: 5275, column: 32)
!6525 = !DILocation(line: 5276, column: 9, scope: !6524)
!6526 = !DILocation(line: 5278, column: 9, scope: !6524)
!6527 = !DILocation(line: 5281, column: 30, scope: !1723)
!6528 = !DILocation(line: 5281, column: 16, scope: !1723)
!6529 = !DILocation(line: 5282, column: 18, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !1723, file: !1, line: 5282, column: 9)
!6531 = !DILocation(line: 5282, column: 9, scope: !1723)
!6532 = !DILocation(line: 5286, column: 29, scope: !1723)
!6533 = !DILocation(line: 5076, column: 25, scope: !1735, inlinedAt: !6534)
!6534 = distinct !DILocation(line: 5286, column: 15, scope: !1723)
!6535 = !DILocation(line: 5080, column: 15, scope: !1735, inlinedAt: !6534)
!6536 = !DILocation(line: 5080, column: 27, scope: !1735, inlinedAt: !6534)
!6537 = !DILocation(line: 5081, column: 5, scope: !1735, inlinedAt: !6534)
!6538 = !DILocation(line: 5085, column: 9, scope: !1735, inlinedAt: !6534)
!6539 = !DILocation(line: 5079, column: 16, scope: !1735, inlinedAt: !6534)
!6540 = !DILocation(line: 5086, column: 11, scope: !6541, inlinedAt: !6534)
!6541 = distinct !DILexicalBlock(scope: !1735, file: !1, line: 5086, column: 9)
!6542 = !DILocation(line: 5086, column: 9, scope: !1735, inlinedAt: !6534)
!6543 = !DILocation(line: 5088, column: 15, scope: !1735, inlinedAt: !6534)
!6544 = !DILocation(line: 5088, column: 15, scope: !6545, inlinedAt: !6534)
!6545 = !DILexicalBlockFile(scope: !1735, file: !1, discriminator: 2)
!6546 = !DILocation(line: 5078, column: 12, scope: !1735, inlinedAt: !6534)
!6547 = !DILocation(line: 5089, column: 17, scope: !6548, inlinedAt: !6534)
!6548 = distinct !DILexicalBlock(scope: !1735, file: !1, line: 5089, column: 9)
!6549 = !DILocation(line: 5089, column: 9, scope: !1735, inlinedAt: !6534)
!6550 = !DILocation(line: 5090, column: 9, scope: !6551, inlinedAt: !6534)
!6551 = distinct !DILexicalBlock(scope: !6548, file: !1, line: 5089, column: 26)
!6552 = !DILocation(line: 5091, column: 9, scope: !6551, inlinedAt: !6534)
!6553 = !DILocation(line: 5079, column: 24, scope: !1735, inlinedAt: !6534)
!6554 = !DILocation(line: 5094, column: 12, scope: !1735, inlinedAt: !6534)
!6555 = !DILocation(line: 5095, column: 10, scope: !6556, inlinedAt: !6534)
!6556 = distinct !DILexicalBlock(scope: !1735, file: !1, line: 5095, column: 9)
!6557 = !DILocation(line: 5095, column: 9, scope: !1735, inlinedAt: !6534)
!6558 = !DILocation(line: 5097, column: 12, scope: !1735, inlinedAt: !6534)
!6559 = !DILocation(line: 5098, column: 10, scope: !6560, inlinedAt: !6534)
!6560 = distinct !DILexicalBlock(scope: !1735, file: !1, line: 5098, column: 9)
!6561 = !DILocation(line: 5098, column: 9, scope: !1735, inlinedAt: !6534)
!6562 = !DILocation(line: 5100, column: 10, scope: !6563, inlinedAt: !6534)
!6563 = distinct !DILexicalBlock(scope: !1735, file: !1, line: 5100, column: 9)
!6564 = !DILocation(line: 5100, column: 29, scope: !6563, inlinedAt: !6534)
!6565 = !DILocation(line: 5100, column: 33, scope: !6566, inlinedAt: !6534)
!6566 = !DILexicalBlockFile(scope: !6563, file: !1, discriminator: 1)
!6567 = !DILocation(line: 5100, column: 9, scope: !1735, inlinedAt: !6534)
!6568 = !DILocation(line: 5106, column: 23, scope: !1758, inlinedAt: !6534)
!6569 = !DILocation(line: 5106, column: 5, scope: !1759, inlinedAt: !6534)
!6570 = !DILocation(line: 5121, column: 15, scope: !1757, inlinedAt: !6534)
!6571 = !DILocation(line: 5121, column: 40, scope: !1757, inlinedAt: !6534)
!6572 = !DILocation(line: 5101, column: 22, scope: !6573, inlinedAt: !6534)
!6573 = distinct !DILexicalBlock(scope: !6563, file: !1, line: 5100, column: 53)
!6574 = !DILocation(line: 5101, column: 9, scope: !6573, inlinedAt: !6534)
!6575 = !DILocation(line: 5103, column: 9, scope: !6573, inlinedAt: !6534)
!6576 = !DILocation(line: 5286, column: 15, scope: !1723)
!6577 = !DILocation(line: 5107, column: 15, scope: !1757, inlinedAt: !6534)
!6578 = !DILocation(line: 5081, column: 15, scope: !1735, inlinedAt: !6534)
!6579 = !DILocation(line: 5108, column: 15, scope: !1757, inlinedAt: !6534)
!6580 = !DILocation(line: 5081, column: 21, scope: !1735, inlinedAt: !6534)
!6581 = !DILocation(line: 5109, column: 14, scope: !6582, inlinedAt: !6534)
!6582 = distinct !DILexicalBlock(scope: !1757, file: !1, line: 5109, column: 13)
!6583 = !DILocation(line: 5109, column: 22, scope: !6584, inlinedAt: !6534)
!6584 = !DILexicalBlockFile(scope: !6582, file: !1, discriminator: 1)
!6585 = !DILocation(line: 5109, column: 18, scope: !6582, inlinedAt: !6534)
!6586 = !DILocation(line: 5112, column: 13, scope: !6587, inlinedAt: !6534)
!6587 = distinct !DILexicalBlock(scope: !1757, file: !1, line: 5112, column: 13)
!6588 = !DILocation(line: 5112, column: 47, scope: !6587, inlinedAt: !6534)
!6589 = !DILocation(line: 5112, column: 13, scope: !1757, inlinedAt: !6534)
!6590 = !DILocation(line: 5114, column: 13, scope: !1756, inlinedAt: !6534)
!6591 = !DILocation(line: 5114, column: 47, scope: !1756, inlinedAt: !6534)
!6592 = !DILocation(line: 5081, column: 27, scope: !1735, inlinedAt: !6534)
!6593 = !DILocation(line: 5115, column: 13, scope: !6594, inlinedAt: !6534)
!6594 = !DILexicalBlockFile(scope: !1754, file: !1, discriminator: 1)
!6595 = !DILocation(line: 5114, column: 13, scope: !1757, inlinedAt: !6534)
!6596 = !DILocation(line: 5115, column: 13, scope: !6597, inlinedAt: !6534)
!6597 = distinct !DILexicalBlock(scope: !1754, file: !1, line: 5115, column: 13)
!6598 = !DILocation(line: 5115, column: 13, scope: !1754, inlinedAt: !6534)
!6599 = !DILocation(line: 5115, column: 13, scope: !6600, inlinedAt: !6534)
!6600 = !DILexicalBlockFile(scope: !6597, file: !1, discriminator: 3)
!6601 = !DILocation(line: 5119, column: 13, scope: !1757, inlinedAt: !6534)
!6602 = !DILocation(line: 5082, column: 15, scope: !1735, inlinedAt: !6534)
!6603 = !DILocation(line: 5081, column: 34, scope: !1735, inlinedAt: !6534)
!6604 = !DILocation(line: 5120, column: 30, scope: !1757, inlinedAt: !6534)
!6605 = !DILocation(line: 5120, column: 13, scope: !1757, inlinedAt: !6534)
!6606 = !DILocation(line: 5082, column: 19, scope: !1735, inlinedAt: !6534)
!6607 = !{!3881, !3877, i64 16}
!6608 = !DILocation(line: 5121, column: 38, scope: !1757, inlinedAt: !6534)
!6609 = !DILocation(line: 5121, column: 63, scope: !1757, inlinedAt: !6534)
!6610 = !DILocation(line: 5083, column: 12, scope: !1735, inlinedAt: !6534)
!6611 = !DILocation(line: 5123, column: 13, scope: !1757, inlinedAt: !6534)
!6612 = !DILocation(line: 5123, column: 13, scope: !6613, inlinedAt: !6534)
!6613 = !DILexicalBlockFile(scope: !1757, file: !1, discriminator: 2)
!6614 = !DILocation(line: 5082, column: 11, scope: !1735, inlinedAt: !6534)
!6615 = !DILocation(line: 5124, column: 15, scope: !1763, inlinedAt: !6534)
!6616 = !DILocation(line: 5124, column: 13, scope: !1757, inlinedAt: !6534)
!6617 = !DILocation(line: 5125, column: 13, scope: !1762, inlinedAt: !6534)
!6618 = !DILocation(line: 5126, column: 13, scope: !6619, inlinedAt: !6534)
!6619 = !DILexicalBlockFile(scope: !1761, file: !1, discriminator: 1)
!6620 = !DILocation(line: 5126, column: 13, scope: !6621, inlinedAt: !6534)
!6621 = distinct !DILexicalBlock(scope: !1761, file: !1, line: 5126, column: 13)
!6622 = !DILocation(line: 5126, column: 13, scope: !1761, inlinedAt: !6534)
!6623 = !DILocation(line: 5126, column: 13, scope: !6624, inlinedAt: !6534)
!6624 = !DILexicalBlockFile(scope: !6621, file: !1, discriminator: 3)
!6625 = !DILocation(line: 5127, column: 13, scope: !6626, inlinedAt: !6534)
!6626 = !DILexicalBlockFile(scope: !1765, file: !1, discriminator: 1)
!6627 = !DILocation(line: 5127, column: 13, scope: !6628, inlinedAt: !6534)
!6628 = distinct !DILexicalBlock(scope: !1765, file: !1, line: 5127, column: 13)
!6629 = !DILocation(line: 5127, column: 13, scope: !1765, inlinedAt: !6534)
!6630 = !DILocation(line: 5127, column: 13, scope: !6631, inlinedAt: !6534)
!6631 = !DILexicalBlockFile(scope: !6628, file: !1, discriminator: 3)
!6632 = !DILocation(line: 5130, column: 9, scope: !1757, inlinedAt: !6534)
!6633 = !DILocation(line: 5106, column: 31, scope: !1758, inlinedAt: !6534)
!6634 = !DILocation(line: 5131, column: 9, scope: !1757, inlinedAt: !6534)
!6635 = !DILocation(line: 5131, column: 25, scope: !1757, inlinedAt: !6534)
!6636 = !DILocation(line: 5132, column: 9, scope: !6637, inlinedAt: !6534)
!6637 = !DILexicalBlockFile(scope: !1767, file: !1, discriminator: 1)
!6638 = !DILocation(line: 5132, column: 9, scope: !6639, inlinedAt: !6534)
!6639 = distinct !DILexicalBlock(scope: !1767, file: !1, line: 5132, column: 9)
!6640 = !DILocation(line: 5132, column: 9, scope: !1767, inlinedAt: !6534)
!6641 = !DILocation(line: 5132, column: 9, scope: !6642, inlinedAt: !6534)
!6642 = !DILexicalBlockFile(scope: !6639, file: !1, discriminator: 3)
!6643 = !DILocation(line: 5133, column: 9, scope: !6644, inlinedAt: !6534)
!6644 = !DILexicalBlockFile(scope: !1769, file: !1, discriminator: 1)
!6645 = !DILocation(line: 5133, column: 9, scope: !6646, inlinedAt: !6534)
!6646 = distinct !DILexicalBlock(scope: !1769, file: !1, line: 5133, column: 9)
!6647 = !DILocation(line: 5133, column: 9, scope: !1769, inlinedAt: !6534)
!6648 = !DILocation(line: 5133, column: 9, scope: !6649, inlinedAt: !6534)
!6649 = !DILexicalBlockFile(scope: !6646, file: !1, discriminator: 3)
!6650 = !DILocation(line: 5079, column: 19, scope: !1735, inlinedAt: !6534)
!6651 = !DILocation(line: 5135, column: 5, scope: !6652, inlinedAt: !6534)
!6652 = !DILexicalBlockFile(scope: !1771, file: !1, discriminator: 1)
!6653 = !DILocation(line: 5135, column: 5, scope: !6654, inlinedAt: !6534)
!6654 = distinct !DILexicalBlock(scope: !1771, file: !1, line: 5135, column: 5)
!6655 = !DILocation(line: 5135, column: 5, scope: !1771, inlinedAt: !6534)
!6656 = !DILocation(line: 5135, column: 5, scope: !6657, inlinedAt: !6534)
!6657 = !DILexicalBlockFile(scope: !6654, file: !1, discriminator: 3)
!6658 = !DILocation(line: 5136, column: 5, scope: !6659, inlinedAt: !6534)
!6659 = !DILexicalBlockFile(scope: !1773, file: !1, discriminator: 1)
!6660 = !DILocation(line: 5136, column: 5, scope: !6661, inlinedAt: !6534)
!6661 = distinct !DILexicalBlock(scope: !1773, file: !1, line: 5136, column: 5)
!6662 = !DILocation(line: 5136, column: 5, scope: !1773, inlinedAt: !6534)
!6663 = !DILocation(line: 5136, column: 5, scope: !6664, inlinedAt: !6534)
!6664 = !DILexicalBlockFile(scope: !6661, file: !1, discriminator: 3)
!6665 = !DILocation(line: 5143, column: 5, scope: !6666, inlinedAt: !6534)
!6666 = !DILexicalBlockFile(scope: !1777, file: !1, discriminator: 4)
!6667 = !DILocation(line: 5143, column: 5, scope: !6668, inlinedAt: !6534)
!6668 = distinct !DILexicalBlock(scope: !1777, file: !1, line: 5143, column: 5)
!6669 = !DILocation(line: 5143, column: 5, scope: !1777, inlinedAt: !6534)
!6670 = !DILocation(line: 5143, column: 5, scope: !6671, inlinedAt: !6534)
!6671 = !DILexicalBlockFile(scope: !6668, file: !1, discriminator: 6)
!6672 = !DILocation(line: 5144, column: 5, scope: !6673, inlinedAt: !6534)
!6673 = !DILexicalBlockFile(scope: !1780, file: !1, discriminator: 1)
!6674 = !DILocation(line: 5144, column: 5, scope: !1783, inlinedAt: !6534)
!6675 = !DILocation(line: 5144, column: 5, scope: !1780, inlinedAt: !6534)
!6676 = !DILocation(line: 5144, column: 5, scope: !6677, inlinedAt: !6534)
!6677 = !DILexicalBlockFile(scope: !1782, file: !1, discriminator: 4)
!6678 = !DILocation(line: 5144, column: 5, scope: !6679, inlinedAt: !6534)
!6679 = distinct !DILexicalBlock(scope: !1782, file: !1, line: 5144, column: 5)
!6680 = !DILocation(line: 5144, column: 5, scope: !1782, inlinedAt: !6534)
!6681 = !DILocation(line: 5144, column: 5, scope: !6682, inlinedAt: !6534)
!6682 = !DILexicalBlockFile(scope: !6679, file: !1, discriminator: 6)
!6683 = !DILocation(line: 5145, column: 12, scope: !6684, inlinedAt: !6534)
!6684 = !DILexicalBlockFile(scope: !6685, file: !1, discriminator: 2)
!6685 = !DILexicalBlockFile(scope: !1735, file: !1, discriminator: 1)
!6686 = !DILocation(line: 5145, column: 19, scope: !1735, inlinedAt: !6534)
!6687 = !DILocation(line: 5145, column: 5, scope: !1735, inlinedAt: !6534)
!6688 = !DILocation(line: 5146, column: 9, scope: !1735, inlinedAt: !6534)
!6689 = !DILocation(line: 5147, column: 5, scope: !1735, inlinedAt: !6534)
!6690 = !DILocation(line: 5148, column: 5, scope: !1735, inlinedAt: !6534)
!6691 = !DILocation(line: 5149, column: 1, scope: !1735, inlinedAt: !6534)
!6692 = !DILocation(line: 5250, column: 12, scope: !1723)
!6693 = !DILocation(line: 5287, column: 9, scope: !1723)
!6694 = !DILocation(line: 5138, column: 5, scope: !1735, inlinedAt: !6534)
!6695 = !DILocation(line: 5138, column: 19, scope: !1735, inlinedAt: !6534)
!6696 = !DILocation(line: 5076, column: 42, scope: !1735, inlinedAt: !6534)
!6697 = !DILocation(line: 5251, column: 22, scope: !1723)
!6698 = !DILocation(line: 5291, column: 14, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !1723, file: !1, line: 5291, column: 9)
!6700 = !DILocation(line: 5291, column: 17, scope: !6699)
!6701 = !DILocation(line: 5291, column: 9, scope: !1723)
!6702 = !DILocation(line: 5292, column: 9, scope: !6699)
!6703 = !DILocation(line: 5295, column: 21, scope: !6699)
!6704 = !DILocation(line: 5295, column: 9, scope: !6699)
!6705 = !DILocation(line: 1311, column: 49, scope: !992, inlinedAt: !6706)
!6706 = distinct !DILocation(line: 5299, column: 5, scope: !1723)
!6707 = !DILocation(line: 1311, column: 12, scope: !992, inlinedAt: !6706)
!6708 = !DILocation(line: 5301, column: 12, scope: !6709)
!6709 = !DILexicalBlockFile(scope: !6710, file: !1, discriminator: 2)
!6710 = !DILexicalBlockFile(scope: !1723, file: !1, discriminator: 1)
!6711 = !DILocation(line: 5301, column: 19, scope: !1723)
!6712 = !DILocation(line: 5301, column: 5, scope: !1723)
!6713 = !DILocation(line: 5302, column: 9, scope: !1723)
!6714 = !DILocation(line: 5303, column: 5, scope: !1723)
!6715 = !DILocation(line: 5306, column: 37, scope: !6716)
!6716 = distinct !DILexicalBlock(scope: !1723, file: !1, line: 5305, column: 9)
!6717 = !DILocation(line: 5047, column: 26, scope: !1716, inlinedAt: !6718)
!6718 = distinct !DILocation(line: 5306, column: 9, scope: !6716)
!6719 = !DILocation(line: 5047, column: 44, scope: !1716, inlinedAt: !6718)
!6720 = !DILocation(line: 5049, column: 16, scope: !1716, inlinedAt: !6718)
!6721 = !DILocation(line: 5050, column: 19, scope: !6471, inlinedAt: !6718)
!6722 = !DILocation(line: 5050, column: 5, scope: !6472, inlinedAt: !6718)
!6723 = !DILocation(line: 5051, column: 20, scope: !6471, inlinedAt: !6718)
!6724 = !DILocation(line: 5306, column: 9, scope: !6716)
!6725 = !DILocation(line: 5051, column: 9, scope: !6471, inlinedAt: !6718)
!6726 = !DILocation(line: 5050, column: 29, scope: !6471, inlinedAt: !6718)
!6727 = !DILocation(line: 5052, column: 5, scope: !1716, inlinedAt: !6718)
!6728 = !DILocation(line: 781, column: 22, scope: !1050, inlinedAt: !6729)
!6729 = distinct !DILocation(line: 5307, column: 5, scope: !1723)
!6730 = !DILocation(line: 782, column: 15, scope: !1058, inlinedAt: !6729)
!6731 = !DILocation(line: 782, column: 9, scope: !1058, inlinedAt: !6729)
!6732 = !DILocation(line: 782, column: 9, scope: !1050, inlinedAt: !6729)
!6733 = !DILocation(line: 783, column: 9, scope: !4639, inlinedAt: !6729)
!6734 = !DILocation(line: 783, column: 9, scope: !4641, inlinedAt: !6729)
!6735 = !DILocation(line: 783, column: 9, scope: !4643, inlinedAt: !6729)
!6736 = !DILocation(line: 783, column: 9, scope: !4645, inlinedAt: !6729)
!6737 = !DILocation(line: 783, column: 9, scope: !1060, inlinedAt: !6729)
!6738 = !DILocation(line: 783, column: 9, scope: !4648, inlinedAt: !6729)
!6739 = !DILocation(line: 5307, column: 5, scope: !1723)
!6740 = !DILocation(line: 5309, column: 1, scope: !1723)
!6741 = !DILocation(line: 5530, column: 22, scope: !1784)
!6742 = !DILocation(line: 5530, column: 38, scope: !1784)
!6743 = !DILocation(line: 5533, column: 9, scope: !1784)
!6744 = !DILocation(line: 5534, column: 5, scope: !1784)
!6745 = !DILocation(line: 5535, column: 11, scope: !1784)
!6746 = !DILocation(line: 5532, column: 11, scope: !1784)
!6747 = !DILocation(line: 5536, column: 13, scope: !6748)
!6748 = distinct !DILexicalBlock(scope: !1784, file: !1, line: 5536, column: 9)
!6749 = !DILocation(line: 5536, column: 9, scope: !1784)
!6750 = !DILocation(line: 5538, column: 9, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6748, file: !1, line: 5536, column: 19)
!6752 = !DILocation(line: 5545, column: 9, scope: !1784)
!6753 = !DILocation(line: 5541, column: 18, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !6748, file: !1, line: 5539, column: 12)
!6755 = !DILocation(line: 5543, column: 13, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !1784, file: !1, line: 5543, column: 9)
!6757 = !DILocation(line: 5543, column: 9, scope: !1784)
!6758 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !6759)
!6759 = distinct !DILocation(line: 5544, column: 16, scope: !6756)
!6760 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !6759)
!6761 = !DILocation(line: 5544, column: 9, scope: !6756)
!6762 = !DILocation(line: 5545, column: 16, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !1784, file: !1, line: 5545, column: 9)
!6764 = !DILocation(line: 5547, column: 25, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6763, file: !1, line: 5545, column: 21)
!6766 = !DILocation(line: 5547, column: 9, scope: !6765)
!6767 = !DILocation(line: 5549, column: 9, scope: !6765)
!6768 = !DILocation(line: 5551, column: 27, scope: !1784)
!6769 = !DILocation(line: 5551, column: 12, scope: !1784)
!6770 = !DILocation(line: 5551, column: 5, scope: !1784)
!6771 = !DILocation(line: 5552, column: 1, scope: !1784)
!6772 = !DILocation(line: 5564, column: 40, scope: !1792)
!6773 = !DILocation(line: 5564, column: 56, scope: !1792)
!6774 = !DILocation(line: 5566, column: 5, scope: !1792)
!6775 = !DILocation(line: 5566, column: 9, scope: !1792)
!6776 = !DILocation(line: 5568, column: 10, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !1792, file: !1, line: 5568, column: 9)
!6778 = !DILocation(line: 5568, column: 9, scope: !1792)
!6779 = !DILocation(line: 5570, column: 34, scope: !1792)
!6780 = !DILocation(line: 5570, column: 11, scope: !1792)
!6781 = !DILocation(line: 5566, column: 17, scope: !1792)
!6782 = !DILocation(line: 5571, column: 13, scope: !6783)
!6783 = distinct !DILexicalBlock(scope: !1792, file: !1, line: 5571, column: 9)
!6784 = !DILocation(line: 5571, column: 9, scope: !1792)
!6785 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !6786)
!6786 = distinct !DILocation(line: 5572, column: 16, scope: !6783)
!6787 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !6786)
!6788 = !DILocation(line: 5572, column: 9, scope: !6783)
!6789 = !DILocation(line: 5573, column: 28, scope: !1792)
!6790 = !DILocation(line: 5573, column: 12, scope: !1792)
!6791 = !DILocation(line: 5573, column: 5, scope: !1792)
!6792 = !DILocation(line: 5574, column: 1, scope: !1792)
!6793 = !DILocation(line: 5581, column: 40, scope: !1798)
!6794 = !DILocation(line: 5581, column: 56, scope: !1798)
!6795 = !DILocation(line: 5583, column: 5, scope: !1798)
!6796 = !DILocation(line: 5583, column: 9, scope: !1798)
!6797 = !DILocation(line: 5585, column: 10, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !1798, file: !1, line: 5585, column: 9)
!6799 = !DILocation(line: 5585, column: 9, scope: !1798)
!6800 = !DILocation(line: 5587, column: 34, scope: !1798)
!6801 = !DILocation(line: 5587, column: 11, scope: !1798)
!6802 = !DILocation(line: 5583, column: 17, scope: !1798)
!6803 = !DILocation(line: 5588, column: 13, scope: !6804)
!6804 = distinct !DILexicalBlock(scope: !1798, file: !1, line: 5588, column: 9)
!6805 = !DILocation(line: 5588, column: 9, scope: !1798)
!6806 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !6807)
!6807 = distinct !DILocation(line: 5589, column: 16, scope: !6804)
!6808 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !6807)
!6809 = !DILocation(line: 5589, column: 9, scope: !6804)
!6810 = !DILocation(line: 5590, column: 28, scope: !1798)
!6811 = !DILocation(line: 5590, column: 12, scope: !1798)
!6812 = !DILocation(line: 5590, column: 5, scope: !1798)
!6813 = !DILocation(line: 5591, column: 1, scope: !1798)
!6814 = !DILocation(line: 5713, column: 32, scope: !1804)
!6815 = !DILocation(line: 5713, column: 48, scope: !1804)
!6816 = !DILocation(line: 5715, column: 5, scope: !1804)
!6817 = !DILocation(line: 5716, column: 5, scope: !1804)
!6818 = !DILocation(line: 5715, column: 11, scope: !1804)
!6819 = !DILocation(line: 5719, column: 10, scope: !6820)
!6820 = distinct !DILexicalBlock(scope: !1804, file: !1, line: 5719, column: 9)
!6821 = !DILocation(line: 5719, column: 9, scope: !1804)
!6822 = !DILocation(line: 5721, column: 24, scope: !6823)
!6823 = distinct !DILexicalBlock(scope: !1804, file: !1, line: 5721, column: 9)
!6824 = !DILocation(line: 5716, column: 24, scope: !1804)
!6825 = !DILocation(line: 5721, column: 9, scope: !6823)
!6826 = !DILocation(line: 5721, column: 9, scope: !1804)
!6827 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !6828)
!6828 = distinct !DILocation(line: 5722, column: 16, scope: !6823)
!6829 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !6828)
!6830 = !DILocation(line: 5722, column: 9, scope: !6823)
!6831 = !DILocation(line: 5723, column: 11, scope: !1804)
!6832 = !DILocation(line: 5717, column: 15, scope: !1804)
!6833 = !DILocation(line: 5724, column: 10, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !1804, file: !1, line: 5724, column: 9)
!6835 = !DILocation(line: 5724, column: 9, scope: !1804)
!6836 = !DILocation(line: 5726, column: 38, scope: !1804)
!6837 = !{!6838, !3882, i64 0}
!6838 = !{!"sched_param", !3882, i64 0}
!6839 = !DILocation(line: 5726, column: 32, scope: !1804)
!6840 = !DILocation(line: 5726, column: 16, scope: !1804)
!6841 = !DILocation(line: 5717, column: 21, scope: !1804)
!6842 = !DILocation(line: 5727, column: 10, scope: !1818)
!6843 = !DILocation(line: 5727, column: 9, scope: !1804)
!6844 = !DILocation(line: 5728, column: 9, scope: !6845)
!6845 = !DILexicalBlockFile(scope: !1816, file: !1, discriminator: 1)
!6846 = !DILocation(line: 5728, column: 9, scope: !6847)
!6847 = distinct !DILexicalBlock(scope: !1816, file: !1, line: 5728, column: 9)
!6848 = !DILocation(line: 5728, column: 9, scope: !1816)
!6849 = !DILocation(line: 5728, column: 9, scope: !6850)
!6850 = !DILexicalBlockFile(scope: !6847, file: !1, discriminator: 3)
!6851 = !DILocation(line: 5731, column: 5, scope: !1804)
!6852 = !DILocation(line: 5732, column: 5, scope: !1804)
!6853 = !DILocation(line: 5733, column: 1, scope: !1804)
!6854 = !DILocation(line: 5603, column: 36, scope: !1819)
!6855 = !DILocation(line: 5603, column: 52, scope: !1819)
!6856 = !DILocation(line: 5605, column: 5, scope: !1819)
!6857 = !DILocation(line: 5605, column: 11, scope: !1819)
!6858 = !DILocation(line: 5608, column: 10, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !1819, file: !1, line: 5608, column: 9)
!6860 = !DILocation(line: 5608, column: 9, scope: !1819)
!6861 = !DILocation(line: 5610, column: 33, scope: !1819)
!6862 = !DILocation(line: 5610, column: 14, scope: !1819)
!6863 = !DILocation(line: 5606, column: 9, scope: !1819)
!6864 = !DILocation(line: 5611, column: 16, scope: !6865)
!6865 = distinct !DILexicalBlock(scope: !1819, file: !1, line: 5611, column: 9)
!6866 = !DILocation(line: 5611, column: 9, scope: !1819)
!6867 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !6868)
!6868 = distinct !DILocation(line: 5612, column: 16, scope: !6865)
!6869 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !6868)
!6870 = !DILocation(line: 5612, column: 9, scope: !6865)
!6871 = !DILocation(line: 5613, column: 28, scope: !1819)
!6872 = !DILocation(line: 5613, column: 12, scope: !1819)
!6873 = !DILocation(line: 5613, column: 5, scope: !1819)
!6874 = !DILocation(line: 5614, column: 1, scope: !1819)
!6875 = !DILocation(line: 5763, column: 39, scope: !1825)
!6876 = !DILocation(line: 5763, column: 55, scope: !1825)
!6877 = !DILocation(line: 5765, column: 5, scope: !1825)
!6878 = !DILocation(line: 5766, column: 5, scope: !1825)
!6879 = !DILocation(line: 5765, column: 11, scope: !1825)
!6880 = !DILocation(line: 5768, column: 10, scope: !6881)
!6881 = distinct !DILexicalBlock(scope: !1825, file: !1, line: 5768, column: 9)
!6882 = !DILocation(line: 5768, column: 9, scope: !1825)
!6883 = !DILocation(line: 5770, column: 31, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !1825, file: !1, line: 5770, column: 9)
!6885 = !DILocation(line: 5766, column: 21, scope: !1825)
!6886 = !DILocation(line: 5770, column: 9, scope: !6884)
!6887 = !DILocation(line: 5770, column: 9, scope: !1825)
!6888 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !6889)
!6889 = distinct !DILocation(line: 5771, column: 16, scope: !6884)
!6890 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !6889)
!6891 = !DILocation(line: 5771, column: 9, scope: !6884)
!6892 = !DILocation(line: 5772, column: 48, scope: !1825)
!6893 = !DILocation(line: 5772, column: 31, scope: !1825)
!6894 = !DILocation(line: 5772, column: 71, scope: !1825)
!6895 = !DILocation(line: 5772, column: 62, scope: !1825)
!6896 = !DILocation(line: 5772, column: 61, scope: !1825)
!6897 = !DILocation(line: 5772, column: 55, scope: !1825)
!6898 = !DILocation(line: 5772, column: 12, scope: !1825)
!6899 = !DILocation(line: 5772, column: 5, scope: !1825)
!6900 = !DILocation(line: 5773, column: 1, scope: !1825)
!6901 = !DILocation(line: 5741, column: 32, scope: !1831)
!6902 = !DILocation(line: 5741, column: 48, scope: !1831)
!6903 = !DILocation(line: 5743, column: 5, scope: !1831)
!6904 = !DILocation(line: 5744, column: 5, scope: !1831)
!6905 = !DILocation(line: 5743, column: 11, scope: !1831)
!6906 = !DILocation(line: 5744, column: 24, scope: !1831)
!6907 = !DILocation(line: 5746, column: 10, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !1831, file: !1, line: 5746, column: 9)
!6909 = !DILocation(line: 5746, column: 9, scope: !1831)
!6910 = !DILocation(line: 5749, column: 24, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !1831, file: !1, line: 5749, column: 9)
!6912 = !DILocation(line: 5749, column: 9, scope: !6911)
!6913 = !DILocation(line: 5749, column: 9, scope: !1831)
!6914 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !6915)
!6915 = distinct !DILocation(line: 5750, column: 16, scope: !6911)
!6916 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !6915)
!6917 = !DILocation(line: 5750, column: 9, scope: !6911)
!6918 = !DILocation(line: 5751, column: 5, scope: !1831)
!6919 = !DILocation(line: 5752, column: 1, scope: !1831)
!6920 = !DILocation(line: 5683, column: 36, scope: !1845)
!6921 = !DILocation(line: 5683, column: 52, scope: !1845)
!6922 = !DILocation(line: 5685, column: 5, scope: !1845)
!6923 = !DILocation(line: 5686, column: 5, scope: !1845)
!6924 = !DILocation(line: 5687, column: 5, scope: !1845)
!6925 = !DILocation(line: 5685, column: 11, scope: !1845)
!6926 = !DILocation(line: 5686, column: 9, scope: !1845)
!6927 = !DILocation(line: 5687, column: 24, scope: !1845)
!6928 = !DILocation(line: 5689, column: 10, scope: !6929)
!6929 = distinct !DILexicalBlock(scope: !1845, file: !1, line: 5689, column: 9)
!6930 = !DILocation(line: 5689, column: 9, scope: !1845)
!6931 = !DILocation(line: 5698, column: 28, scope: !6932)
!6932 = distinct !DILexicalBlock(scope: !1845, file: !1, line: 5698, column: 9)
!6933 = !DILocation(line: 5698, column: 33, scope: !6932)
!6934 = !DILocation(line: 5698, column: 9, scope: !6932)
!6935 = !DILocation(line: 5698, column: 49, scope: !6932)
!6936 = !DILocation(line: 5698, column: 9, scope: !1845)
!6937 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !6938)
!6938 = distinct !DILocation(line: 5699, column: 16, scope: !6932)
!6939 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !6938)
!6940 = !DILocation(line: 5699, column: 9, scope: !6932)
!6941 = !DILocation(line: 5700, column: 5, scope: !1845)
!6942 = !DILocation(line: 5701, column: 1, scope: !1845)
!6943 = !DILocation(line: 5782, column: 29, scope: !1852)
!6944 = !DILocation(line: 5782, column: 45, scope: !1852)
!6945 = !DILocation(line: 5784, column: 9, scope: !6946)
!6946 = distinct !DILexicalBlock(scope: !1852, file: !1, line: 5784, column: 9)
!6947 = !DILocation(line: 5784, column: 9, scope: !1852)
!6948 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !6949)
!6949 = distinct !DILocation(line: 5785, column: 16, scope: !6946)
!6950 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !6949)
!6951 = !DILocation(line: 5785, column: 9, scope: !6946)
!6952 = !DILocation(line: 5786, column: 5, scope: !1852)
!6953 = !DILocation(line: 5787, column: 1, scope: !1852)
!6954 = !DILocation(line: 5799, column: 35, scope: !1856)
!6955 = !DILocation(line: 5799, column: 51, scope: !1856)
!6956 = !DILocation(line: 5801, column: 5, scope: !1856)
!6957 = !DILocation(line: 5804, column: 16, scope: !1856)
!6958 = !DILocation(line: 5805, column: 5, scope: !1856)
!6959 = !DILocation(line: 5805, column: 26, scope: !1856)
!6960 = !DILocation(line: 5801, column: 11, scope: !1856)
!6961 = !DILocation(line: 5805, column: 15, scope: !1856)
!6962 = !DILocation(line: 5807, column: 10, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !1856, file: !1, line: 5807, column: 9)
!6964 = !DILocation(line: 5807, column: 9, scope: !1856)
!6965 = !DILocation(line: 5811, column: 33, scope: !1856)
!6966 = !DILocation(line: 5811, column: 16, scope: !1856)
!6967 = !DILocation(line: 5812, column: 18, scope: !6968)
!6968 = distinct !DILexicalBlock(scope: !1856, file: !1, line: 5812, column: 9)
!6969 = !DILocation(line: 5812, column: 9, scope: !1856)
!6970 = !DILocation(line: 5802, column: 9, scope: !1856)
!6971 = !DILocation(line: 5803, column: 12, scope: !1856)
!6972 = !DILocation(line: 5817, column: 12, scope: !1856)
!6973 = !DILocation(line: 5818, column: 14, scope: !6974)
!6974 = distinct !DILexicalBlock(scope: !1856, file: !1, line: 5818, column: 9)
!6975 = !DILocation(line: 5818, column: 9, scope: !1856)
!6976 = !DILocation(line: 5819, column: 9, scope: !6977)
!6977 = distinct !DILexicalBlock(scope: !6974, file: !1, line: 5818, column: 23)
!6978 = !DILocation(line: 5883, column: 5, scope: !6979)
!6979 = !DILexicalBlockFile(scope: !1897, file: !1, discriminator: 1)
!6980 = !DILocation(line: 5883, column: 5, scope: !1897)
!6981 = !DILocation(line: 5822, column: 5, scope: !6982)
!6982 = !DILexicalBlockFile(scope: !1856, file: !1, discriminator: 1)
!6983 = !DILocation(line: 5824, column: 20, scope: !1856)
!6984 = !DILocation(line: 5805, column: 44, scope: !1856)
!6985 = !DILocation(line: 5824, column: 5, scope: !1856)
!6986 = !DILocation(line: 5826, column: 14, scope: !1880)
!6987 = !DILocation(line: 5826, column: 13, scope: !1876)
!6988 = !DILocation(line: 5827, column: 26, scope: !1879)
!6989 = !DILocation(line: 5827, column: 13, scope: !1879)
!6990 = !DILocation(line: 5831, column: 13, scope: !6991)
!6991 = !DILexicalBlockFile(scope: !1878, file: !1, discriminator: 1)
!6992 = !DILocation(line: 5831, column: 13, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !1878, file: !1, line: 5831, column: 13)
!6994 = !DILocation(line: 5831, column: 13, scope: !1878)
!6995 = !DILocation(line: 5831, column: 13, scope: !6996)
!6996 = !DILexicalBlockFile(scope: !6993, file: !1, discriminator: 3)
!6997 = !DILocation(line: 5834, column: 15, scope: !1876)
!6998 = !DILocation(line: 5825, column: 14, scope: !1876)
!6999 = !DILocation(line: 5835, column: 9, scope: !7000)
!7000 = !DILexicalBlockFile(scope: !1882, file: !1, discriminator: 1)
!7001 = !DILocation(line: 5835, column: 9, scope: !7002)
!7002 = distinct !DILexicalBlock(scope: !1882, file: !1, line: 5835, column: 9)
!7003 = !DILocation(line: 5835, column: 9, scope: !1882)
!7004 = !DILocation(line: 5835, column: 9, scope: !7005)
!7005 = !DILexicalBlockFile(scope: !7002, file: !1, discriminator: 3)
!7006 = !DILocation(line: 5836, column: 17, scope: !7007)
!7007 = distinct !DILexicalBlock(scope: !1876, file: !1, line: 5836, column: 13)
!7008 = !DILocation(line: 5836, column: 13, scope: !1876)
!7009 = !DILocation(line: 5837, column: 18, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !7011, file: !1, line: 5837, column: 17)
!7011 = distinct !DILexicalBlock(scope: !7007, file: !1, line: 5836, column: 22)
!7012 = !DILocation(line: 5837, column: 17, scope: !7011)
!7013 = !DILocation(line: 5838, column: 33, scope: !7010)
!7014 = !DILocation(line: 5838, column: 17, scope: !7010)
!7015 = !DILocation(line: 5841, column: 17, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !1876, file: !1, line: 5841, column: 13)
!7017 = !DILocation(line: 5841, column: 13, scope: !1876)
!7018 = !DILocation(line: 5842, column: 29, scope: !7019)
!7019 = distinct !DILexicalBlock(scope: !7016, file: !1, line: 5841, column: 32)
!7020 = !DILocation(line: 5842, column: 13, scope: !7019)
!7021 = !DILocation(line: 5843, column: 13, scope: !7019)
!7022 = !DILocation(line: 5845, column: 20, scope: !1885)
!7023 = !DILocation(line: 5845, column: 17, scope: !1885)
!7024 = !DILocation(line: 5845, column: 13, scope: !1876)
!7025 = !DILocation(line: 5852, column: 36, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !7027, file: !1, line: 5851, column: 21)
!7027 = distinct !DILexicalBlock(scope: !1884, file: !1, line: 5850, column: 37)
!7028 = !DILocation(line: 5852, column: 32, scope: !7026)
!7029 = !DILocation(line: 5850, column: 13, scope: !1884)
!7030 = !DILocation(line: 5851, column: 30, scope: !7026)
!7031 = !DILocation(line: 5854, column: 41, scope: !7026)
!7032 = !DILocation(line: 5847, column: 17, scope: !1884)
!7033 = !DILocation(line: 5851, column: 21, scope: !7027)
!7034 = !DILocation(line: 5850, column: 20, scope: !7035)
!7035 = !DILexicalBlockFile(scope: !7036, file: !1, discriminator: 2)
!7036 = !DILexicalBlockFile(scope: !1884, file: !1, discriminator: 1)
!7037 = !DILocation(line: 5850, column: 29, scope: !1884)
!7038 = !DILocation(line: 5856, column: 23, scope: !1884)
!7039 = !DILocation(line: 5848, column: 24, scope: !1884)
!7040 = !DILocation(line: 5857, column: 25, scope: !7041)
!7041 = distinct !DILexicalBlock(scope: !1884, file: !1, line: 5857, column: 17)
!7042 = !DILocation(line: 5857, column: 17, scope: !1884)
!7043 = !DILocation(line: 5861, column: 26, scope: !1884)
!7044 = !DILocation(line: 5849, column: 20, scope: !1884)
!7045 = !DILocation(line: 5862, column: 13, scope: !7036)
!7046 = !DILocation(line: 5863, column: 13, scope: !1884)
!7047 = !DILocation(line: 5864, column: 13, scope: !1884)
!7048 = !DILocation(line: 5858, column: 17, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !7041, file: !1, line: 5857, column: 34)
!7050 = !DILocation(line: 5869, column: 9, scope: !1889)
!7051 = !DILocation(line: 5869, column: 9, scope: !7052)
!7052 = !DILexicalBlockFile(scope: !1889, file: !1, discriminator: 1)
!7053 = !DILocation(line: 5871, column: 5, scope: !7054)
!7054 = !DILexicalBlockFile(scope: !1891, file: !1, discriminator: 1)
!7055 = !DILocation(line: 5871, column: 5, scope: !7056)
!7056 = !DILexicalBlockFile(scope: !1893, file: !1, discriminator: 4)
!7057 = !DILocation(line: 5871, column: 5, scope: !7058)
!7058 = distinct !DILexicalBlock(scope: !1893, file: !1, line: 5871, column: 5)
!7059 = !DILocation(line: 5871, column: 5, scope: !1893)
!7060 = !DILocation(line: 5871, column: 5, scope: !7061)
!7061 = !DILexicalBlockFile(scope: !7058, file: !1, discriminator: 6)
!7062 = !DILocation(line: 5873, column: 27, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !1856, file: !1, line: 5873, column: 9)
!7064 = !DILocation(line: 5873, column: 9, scope: !7063)
!7065 = !DILocation(line: 5873, column: 9, scope: !1856)
!7066 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !7067)
!7067 = distinct !DILocation(line: 5874, column: 9, scope: !7068)
!7068 = distinct !DILexicalBlock(scope: !7063, file: !1, line: 5873, column: 48)
!7069 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !7067)
!7070 = !DILocation(line: 5875, column: 9, scope: !7068)
!7071 = !DILocation(line: 5877, column: 5, scope: !1856)
!7072 = !DILocation(line: 5878, column: 5, scope: !1856)
!7073 = !DILocation(line: 5881, column: 9, scope: !7074)
!7074 = distinct !DILexicalBlock(scope: !1856, file: !1, line: 5881, column: 9)
!7075 = !DILocation(line: 5881, column: 9, scope: !1856)
!7076 = !DILocation(line: 5882, column: 9, scope: !7074)
!7077 = !DILocation(line: 5883, column: 5, scope: !1900)
!7078 = !DILocation(line: 5883, column: 5, scope: !7079)
!7079 = !DILexicalBlockFile(scope: !1899, file: !1, discriminator: 4)
!7080 = !DILocation(line: 5883, column: 5, scope: !7081)
!7081 = distinct !DILexicalBlock(scope: !1899, file: !1, line: 5883, column: 5)
!7082 = !DILocation(line: 5883, column: 5, scope: !1899)
!7083 = !DILocation(line: 5883, column: 5, scope: !7084)
!7084 = !DILexicalBlockFile(scope: !7081, file: !1, discriminator: 6)
!7085 = !DILocation(line: 5885, column: 1, scope: !1856)
!7086 = !DILocation(line: 5893, column: 35, scope: !1901)
!7087 = !DILocation(line: 5893, column: 51, scope: !1901)
!7088 = !DILocation(line: 5895, column: 5, scope: !1901)
!7089 = !DILocation(line: 5898, column: 16, scope: !1901)
!7090 = !DILocation(line: 5899, column: 15, scope: !1901)
!7091 = !DILocation(line: 5895, column: 11, scope: !1901)
!7092 = !DILocation(line: 5901, column: 10, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !1901, file: !1, line: 5901, column: 9)
!7094 = !DILocation(line: 5901, column: 9, scope: !1901)
!7095 = !DILocation(line: 5897, column: 12, scope: !1901)
!7096 = !DILocation(line: 5908, column: 16, scope: !7097)
!7097 = distinct !DILexicalBlock(scope: !1901, file: !1, line: 5906, column: 15)
!7098 = !DILocation(line: 5909, column: 18, scope: !7099)
!7099 = distinct !DILexicalBlock(scope: !7097, file: !1, line: 5909, column: 13)
!7100 = !DILocation(line: 5909, column: 13, scope: !7097)
!7101 = !DILocation(line: 5907, column: 19, scope: !7097)
!7102 = !DILocation(line: 5910, column: 20, scope: !7099)
!7103 = !DILocation(line: 5910, column: 13, scope: !7099)
!7104 = !DILocation(line: 5911, column: 31, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !7097, file: !1, line: 5911, column: 13)
!7106 = !DILocation(line: 5911, column: 13, scope: !7105)
!7107 = !DILocation(line: 5911, column: 51, scope: !7105)
!7108 = !DILocation(line: 5911, column: 13, scope: !7097)
!7109 = !DILocation(line: 5913, column: 9, scope: !7097)
!7110 = !DILocation(line: 5914, column: 13, scope: !7111)
!7111 = distinct !DILexicalBlock(scope: !7097, file: !1, line: 5914, column: 13)
!7112 = !DILocation(line: 5914, column: 19, scope: !7111)
!7113 = !DILocation(line: 5914, column: 13, scope: !7097)
!7114 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !7115)
!7115 = distinct !DILocation(line: 5915, column: 20, scope: !7111)
!7116 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !7115)
!7117 = !DILocation(line: 5915, column: 13, scope: !7111)
!7118 = !DILocation(line: 5916, column: 19, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !7097, file: !1, line: 5916, column: 13)
!7120 = !DILocation(line: 5921, column: 23, scope: !7097)
!7121 = !DILocation(line: 5896, column: 14, scope: !1901)
!7122 = !DILocation(line: 5916, column: 13, scope: !7097)
!7123 = !DILocation(line: 5917, column: 29, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7119, file: !1, line: 5916, column: 34)
!7125 = !DILocation(line: 5917, column: 13, scope: !7124)
!7126 = !DILocation(line: 5919, column: 13, scope: !7124)
!7127 = !DILocation(line: 5924, column: 11, scope: !1901)
!7128 = !DILocation(line: 5925, column: 13, scope: !7129)
!7129 = distinct !DILexicalBlock(scope: !1901, file: !1, line: 5925, column: 9)
!7130 = !DILocation(line: 5925, column: 9, scope: !1901)
!7131 = !DILocation(line: 5945, column: 9, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !1901, file: !1, line: 5944, column: 9)
!7133 = !DILocation(line: 5946, column: 5, scope: !7134)
!7134 = !DILexicalBlockFile(scope: !1927, file: !1, discriminator: 1)
!7135 = !DILocation(line: 5946, column: 5, scope: !1927)
!7136 = !DILocation(line: 5896, column: 9, scope: !1901)
!7137 = !DILocation(line: 5927, column: 27, scope: !1917)
!7138 = !DILocation(line: 5896, column: 21, scope: !1901)
!7139 = !DILocation(line: 5927, column: 5, scope: !1917)
!7140 = !DILocation(line: 5928, column: 13, scope: !1913)
!7141 = !DILocation(line: 5928, column: 13, scope: !7142)
!7142 = !DILexicalBlockFile(scope: !1913, file: !1, discriminator: 1)
!7143 = !DILocation(line: 5928, column: 13, scope: !1915)
!7144 = !DILocation(line: 5929, column: 33, scope: !1919)
!7145 = !DILocation(line: 5929, column: 23, scope: !1919)
!7146 = !DILocation(line: 5930, column: 13, scope: !1919)
!7147 = !DILocation(line: 5931, column: 25, scope: !7148)
!7148 = distinct !DILexicalBlock(scope: !1919, file: !1, line: 5931, column: 17)
!7149 = !DILocation(line: 5931, column: 17, scope: !1919)
!7150 = !DILocation(line: 5933, column: 17, scope: !1923)
!7151 = !DILocation(line: 5937, column: 13, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !1925, file: !1, line: 5937, column: 13)
!7153 = !DILocation(line: 5933, column: 17, scope: !1919)
!7154 = !DILocation(line: 5934, column: 17, scope: !7155)
!7155 = !DILexicalBlockFile(scope: !1921, file: !1, discriminator: 1)
!7156 = !DILocation(line: 5934, column: 17, scope: !1921)
!7157 = !DILocation(line: 5934, column: 17, scope: !7158)
!7158 = !DILexicalBlockFile(scope: !7159, file: !1, discriminator: 3)
!7159 = distinct !DILexicalBlock(scope: !1921, file: !1, line: 5934, column: 17)
!7160 = !DILocation(line: 5937, column: 13, scope: !7161)
!7161 = !DILexicalBlockFile(scope: !1925, file: !1, discriminator: 1)
!7162 = !DILocation(line: 5937, column: 13, scope: !1925)
!7163 = !DILocation(line: 5937, column: 13, scope: !7164)
!7164 = !DILexicalBlockFile(scope: !7152, file: !1, discriminator: 3)
!7165 = !DILocation(line: 5927, column: 65, scope: !1916)
!7166 = !DILocation(line: 5940, column: 5, scope: !1901)
!7167 = !DILocation(line: 5941, column: 5, scope: !1901)
!7168 = !DILocation(line: 5946, column: 5, scope: !7169)
!7169 = !DILexicalBlockFile(scope: !1929, file: !1, discriminator: 4)
!7170 = !DILocation(line: 5946, column: 5, scope: !7171)
!7171 = distinct !DILexicalBlock(scope: !1929, file: !1, line: 5946, column: 5)
!7172 = !DILocation(line: 5946, column: 5, scope: !1929)
!7173 = !DILocation(line: 5946, column: 5, scope: !7174)
!7174 = !DILexicalBlockFile(scope: !7171, file: !1, discriminator: 6)
!7175 = !DILocation(line: 5948, column: 1, scope: !1901)
!7176 = !DILocation(line: 5986, column: 25, scope: !1931)
!7177 = !DILocation(line: 5986, column: 41, scope: !1931)
!7178 = !DILocation(line: 5988, column: 5, scope: !1931)
!7179 = !DILocation(line: 5988, column: 9, scope: !1931)
!7180 = !DILocation(line: 5988, column: 25, scope: !1931)
!7181 = !DILocation(line: 6000, column: 9, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !1931, file: !1, line: 6000, column: 9)
!7183 = !DILocation(line: 6000, column: 58, scope: !7182)
!7184 = !DILocation(line: 6000, column: 9, scope: !1931)
!7185 = !DILocation(line: 6003, column: 29, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !1931, file: !1, line: 6003, column: 9)
!7187 = !DILocation(line: 6003, column: 9, scope: !7186)
!7188 = !DILocation(line: 6003, column: 49, scope: !7186)
!7189 = !DILocation(line: 6003, column: 9, scope: !1931)
!7190 = !DILocation(line: 6005, column: 29, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !1931, file: !1, line: 6005, column: 9)
!7192 = !DILocation(line: 6005, column: 9, scope: !7191)
!7193 = !DILocation(line: 6005, column: 48, scope: !7191)
!7194 = !DILocation(line: 6005, column: 9, scope: !1931)
!7195 = !DILocation(line: 6060, column: 34, scope: !1931)
!7196 = !DILocation(line: 6060, column: 45, scope: !1931)
!7197 = !DILocation(line: 6060, column: 12, scope: !1931)
!7198 = !DILocation(line: 6060, column: 5, scope: !1931)
!7199 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !7200)
!7200 = distinct !DILocation(line: 6063, column: 5, scope: !1931)
!7201 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !7200)
!7202 = !DILocation(line: 6063, column: 5, scope: !1931)
!7203 = !DILocation(line: 6067, column: 9, scope: !7204)
!7204 = distinct !DILexicalBlock(scope: !1931, file: !1, line: 6067, column: 9)
!7205 = !DILocation(line: 6067, column: 19, scope: !7204)
!7206 = !DILocation(line: 6067, column: 9, scope: !1931)
!7207 = !DILocation(line: 6068, column: 9, scope: !7204)
!7208 = !DILocation(line: 6069, column: 9, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !1931, file: !1, line: 6069, column: 9)
!7210 = !DILocation(line: 6069, column: 18, scope: !7209)
!7211 = !DILocation(line: 6069, column: 9, scope: !1931)
!7212 = !DILocation(line: 6070, column: 9, scope: !7209)
!7213 = !DILocation(line: 6072, column: 1, scope: !1931)
!7214 = !DILocation(line: 6083, column: 25, scope: !1937)
!7215 = !DILocation(line: 6083, column: 41, scope: !1937)
!7216 = !DILocation(line: 6085, column: 5, scope: !1937)
!7217 = !DILocation(line: 6085, column: 9, scope: !1937)
!7218 = !DILocation(line: 6085, column: 25, scope: !1937)
!7219 = !DILocation(line: 6088, column: 5, scope: !1937)
!7220 = !DILocation(line: 6089, column: 11, scope: !1937)
!7221 = !DILocation(line: 6086, column: 11, scope: !1937)
!7222 = !DILocation(line: 6090, column: 13, scope: !7223)
!7223 = distinct !DILexicalBlock(scope: !1937, file: !1, line: 6090, column: 9)
!7224 = !DILocation(line: 6090, column: 9, scope: !1937)
!7225 = !DILocation(line: 6092, column: 9, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7223, file: !1, line: 6090, column: 19)
!7227 = !DILocation(line: 6099, column: 9, scope: !1937)
!7228 = !DILocation(line: 6095, column: 18, scope: !7229)
!7229 = distinct !DILexicalBlock(scope: !7223, file: !1, line: 6093, column: 12)
!7230 = !DILocation(line: 6097, column: 13, scope: !7231)
!7231 = distinct !DILexicalBlock(scope: !1937, file: !1, line: 6097, column: 9)
!7232 = !DILocation(line: 6097, column: 9, scope: !1937)
!7233 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !7234)
!7234 = distinct !DILocation(line: 6098, column: 16, scope: !7231)
!7235 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !7234)
!7236 = !DILocation(line: 6098, column: 9, scope: !7231)
!7237 = !DILocation(line: 6099, column: 16, scope: !7238)
!7238 = distinct !DILexicalBlock(scope: !1937, file: !1, line: 6099, column: 9)
!7239 = !DILocation(line: 6101, column: 25, scope: !7240)
!7240 = distinct !DILexicalBlock(scope: !7238, file: !1, line: 6099, column: 21)
!7241 = !DILocation(line: 6101, column: 9, scope: !7240)
!7242 = !DILocation(line: 6103, column: 9, scope: !7240)
!7243 = !DILocation(line: 6105, column: 49, scope: !1937)
!7244 = !DILocation(line: 6105, column: 34, scope: !1937)
!7245 = !DILocation(line: 6105, column: 55, scope: !1937)
!7246 = !DILocation(line: 6105, column: 12, scope: !1937)
!7247 = !DILocation(line: 6105, column: 5, scope: !1937)
!7248 = !DILocation(line: 6106, column: 1, scope: !1937)
!7249 = !DILocation(line: 6116, column: 25, scope: !1944)
!7250 = !DILocation(line: 6116, column: 41, scope: !1944)
!7251 = !DILocation(line: 6118, column: 28, scope: !1944)
!7252 = !DILocation(line: 404, column: 23, scope: !694, inlinedAt: !7253)
!7253 = distinct !DILocation(line: 6118, column: 12, scope: !1944)
!7254 = !DILocation(line: 406, column: 13, scope: !3852, inlinedAt: !7253)
!7255 = !DILocation(line: 406, column: 9, scope: !694, inlinedAt: !7253)
!7256 = !DILocation(line: 407, column: 16, scope: !3852, inlinedAt: !7253)
!7257 = !DILocation(line: 407, column: 9, scope: !3852, inlinedAt: !7253)
!7258 = !DILocation(line: 408, column: 36, scope: !694, inlinedAt: !7253)
!7259 = !DILocation(line: 408, column: 12, scope: !694, inlinedAt: !7253)
!7260 = !DILocation(line: 408, column: 5, scope: !694, inlinedAt: !7253)
!7261 = !DILocation(line: 6118, column: 12, scope: !1944)
!7262 = !DILocation(line: 6118, column: 5, scope: !1944)
!7263 = !DILocation(line: 6129, column: 25, scope: !1948)
!7264 = !DILocation(line: 6129, column: 41, scope: !1948)
!7265 = !DILocation(line: 6131, column: 28, scope: !1948)
!7266 = !DILocation(line: 396, column: 23, scope: !689, inlinedAt: !7267)
!7267 = distinct !DILocation(line: 6131, column: 12, scope: !1948)
!7268 = !DILocation(line: 398, column: 13, scope: !3842, inlinedAt: !7267)
!7269 = !DILocation(line: 398, column: 9, scope: !689, inlinedAt: !7267)
!7270 = !DILocation(line: 399, column: 16, scope: !3842, inlinedAt: !7267)
!7271 = !DILocation(line: 399, column: 9, scope: !3842, inlinedAt: !7267)
!7272 = !DILocation(line: 400, column: 36, scope: !689, inlinedAt: !7267)
!7273 = !DILocation(line: 400, column: 12, scope: !689, inlinedAt: !7267)
!7274 = !DILocation(line: 400, column: 5, scope: !689, inlinedAt: !7267)
!7275 = !DILocation(line: 6131, column: 12, scope: !1948)
!7276 = !DILocation(line: 6131, column: 5, scope: !1948)
!7277 = !DILocation(line: 6142, column: 24, scope: !1952)
!7278 = !DILocation(line: 6142, column: 40, scope: !1952)
!7279 = !DILocation(line: 6144, column: 28, scope: !1952)
!7280 = !DILocation(line: 404, column: 23, scope: !694, inlinedAt: !7281)
!7281 = distinct !DILocation(line: 6144, column: 12, scope: !1952)
!7282 = !DILocation(line: 406, column: 13, scope: !3852, inlinedAt: !7281)
!7283 = !DILocation(line: 406, column: 9, scope: !694, inlinedAt: !7281)
!7284 = !DILocation(line: 407, column: 16, scope: !3852, inlinedAt: !7281)
!7285 = !DILocation(line: 407, column: 9, scope: !3852, inlinedAt: !7281)
!7286 = !DILocation(line: 408, column: 36, scope: !694, inlinedAt: !7281)
!7287 = !DILocation(line: 408, column: 12, scope: !694, inlinedAt: !7281)
!7288 = !DILocation(line: 408, column: 5, scope: !694, inlinedAt: !7281)
!7289 = !DILocation(line: 6144, column: 12, scope: !1952)
!7290 = !DILocation(line: 6144, column: 5, scope: !1952)
!7291 = !DILocation(line: 6167, column: 30, scope: !1956)
!7292 = !DILocation(line: 6167, column: 46, scope: !1956)
!7293 = !DILocation(line: 6176, column: 5, scope: !1956)
!7294 = !DILocation(line: 6177, column: 5, scope: !1956)
!7295 = !DILocation(line: 6182, column: 5, scope: !1956)
!7296 = !DILocation(line: 6177, column: 12, scope: !1956)
!7297 = !DILocation(line: 6184, column: 13, scope: !1956)
!7298 = !DILocation(line: 6176, column: 17, scope: !1956)
!7299 = !DILocation(line: 6182, column: 20, scope: !1956)
!7300 = !DILocation(line: 6190, column: 10, scope: !7301)
!7301 = distinct !DILexicalBlock(scope: !1956, file: !1, line: 6190, column: 9)
!7302 = !DILocation(line: 6190, column: 9, scope: !1956)
!7303 = !DILocation(line: 6198, column: 14, scope: !1956)
!7304 = !DILocation(line: 6182, column: 12, scope: !1956)
!7305 = !DILocation(line: 6200, column: 16, scope: !7306)
!7306 = distinct !DILexicalBlock(scope: !1956, file: !1, line: 6200, column: 9)
!7307 = !DILocation(line: 6200, column: 9, scope: !1956)
!7308 = !DILocation(line: 6201, column: 16, scope: !7306)
!7309 = !DILocation(line: 6201, column: 9, scope: !7306)
!7310 = !DILocation(line: 6203, column: 22, scope: !7311)
!7311 = distinct !DILexicalBlock(scope: !1956, file: !1, line: 6203, column: 9)
!7312 = !DILocation(line: 6203, column: 28, scope: !7311)
!7313 = !DILocation(line: 6203, column: 9, scope: !7311)
!7314 = !DILocation(line: 6203, column: 55, scope: !7311)
!7315 = !DILocation(line: 6203, column: 9, scope: !1956)
!7316 = !DILocation(line: 6204, column: 9, scope: !7317)
!7317 = distinct !DILexicalBlock(scope: !7311, file: !1, line: 6203, column: 62)
!7318 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !7319)
!7319 = distinct !DILocation(line: 6205, column: 16, scope: !7317)
!7320 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !7319)
!7321 = !DILocation(line: 6205, column: 9, scope: !7317)
!7322 = !DILocation(line: 6208, column: 23, scope: !1956)
!7323 = !DILocation(line: 6208, column: 12, scope: !1956)
!7324 = !DILocation(line: 6178, column: 15, scope: !1956)
!7325 = !DILocation(line: 6209, column: 14, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !1956, file: !1, line: 6209, column: 9)
!7327 = !DILocation(line: 6209, column: 9, scope: !1956)
!7328 = !DILocation(line: 6214, column: 21, scope: !1968)
!7329 = !DILocation(line: 6214, column: 19, scope: !1968)
!7330 = !DILocation(line: 6214, column: 5, scope: !1969)
!7331 = !DILocation(line: 6225, column: 9, scope: !1967)
!7332 = !DILocation(line: 6210, column: 9, scope: !7333)
!7333 = distinct !DILexicalBlock(scope: !7326, file: !1, line: 6209, column: 23)
!7334 = !DILocation(line: 6211, column: 9, scope: !7333)
!7335 = !DILocation(line: 6218, column: 39, scope: !1967)
!7336 = !DILocation(line: 404, column: 23, scope: !694, inlinedAt: !7337)
!7337 = distinct !DILocation(line: 6218, column: 23, scope: !1967)
!7338 = !DILocation(line: 406, column: 13, scope: !3852, inlinedAt: !7337)
!7339 = !DILocation(line: 406, column: 9, scope: !694, inlinedAt: !7337)
!7340 = !DILocation(line: 407, column: 16, scope: !3852, inlinedAt: !7337)
!7341 = !DILocation(line: 407, column: 9, scope: !3852, inlinedAt: !7337)
!7342 = !DILocation(line: 408, column: 36, scope: !694, inlinedAt: !7337)
!7343 = !DILocation(line: 408, column: 12, scope: !694, inlinedAt: !7337)
!7344 = !DILocation(line: 408, column: 5, scope: !694, inlinedAt: !7337)
!7345 = !DILocation(line: 6218, column: 23, scope: !1967)
!7346 = !DILocation(line: 6218, column: 19, scope: !1967)
!7347 = !DILocation(line: 6220, column: 15, scope: !1973)
!7348 = !DILocation(line: 6220, column: 13, scope: !1967)
!7349 = !DILocation(line: 6221, column: 13, scope: !7350)
!7350 = !DILexicalBlockFile(scope: !1971, file: !1, discriminator: 1)
!7351 = !DILocation(line: 6221, column: 13, scope: !7352)
!7352 = distinct !DILexicalBlock(scope: !1971, file: !1, line: 6221, column: 13)
!7353 = !DILocation(line: 6221, column: 13, scope: !1971)
!7354 = !DILocation(line: 6221, column: 13, scope: !7355)
!7355 = !DILexicalBlockFile(scope: !7352, file: !1, discriminator: 3)
!7356 = !DILocation(line: 6222, column: 13, scope: !1972)
!7357 = !{!7358, !3871, i64 24}
!7358 = !{!"", !3881, i64 0, !3871, i64 24, !3877, i64 32}
!7359 = !DILocation(line: 6214, column: 31, scope: !1968)
!7360 = !DILocation(line: 6177, column: 9, scope: !1956)
!7361 = !DILocation(line: 6228, column: 5, scope: !1956)
!7362 = !DILocation(line: 6230, column: 5, scope: !1956)
!7363 = !DILocation(line: 6231, column: 1, scope: !1956)
!7364 = !DILocation(line: 6240, column: 27, scope: !1974)
!7365 = !DILocation(line: 6240, column: 43, scope: !1974)
!7366 = !DILocation(line: 6242, column: 15, scope: !1974)
!7367 = !DILocation(line: 6250, column: 5, scope: !1974)
!7368 = !DILocation(line: 6250, column: 11, scope: !1974)
!7369 = !DILocation(line: 6260, column: 28, scope: !1974)
!7370 = !DILocation(line: 6260, column: 12, scope: !1974)
!7371 = !DILocation(line: 6291, column: 9, scope: !1974)
!7372 = !DILocation(line: 6261, column: 9, scope: !1974)
!7373 = !DILocation(line: 6292, column: 11, scope: !7374)
!7374 = distinct !DILexicalBlock(scope: !1974, file: !1, line: 6292, column: 9)
!7375 = !DILocation(line: 6292, column: 9, scope: !1974)
!7376 = !DILocation(line: 6293, column: 13, scope: !7377)
!7377 = distinct !DILexicalBlock(scope: !7378, file: !1, line: 6293, column: 13)
!7378 = distinct !DILexicalBlock(scope: !7374, file: !1, line: 6292, column: 16)
!7379 = !DILocation(line: 6293, column: 19, scope: !7377)
!7380 = !DILocation(line: 6293, column: 13, scope: !7378)
!7381 = !DILocation(line: 6294, column: 17, scope: !7382)
!7382 = distinct !DILexicalBlock(scope: !7377, file: !1, line: 6293, column: 30)
!7383 = !DILocation(line: 6295, column: 17, scope: !7382)
!7384 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !7385)
!7385 = distinct !DILocation(line: 6296, column: 24, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !7387, file: !1, line: 6295, column: 26)
!7387 = distinct !DILexicalBlock(scope: !7382, file: !1, line: 6295, column: 17)
!7388 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !7385)
!7389 = !DILocation(line: 6296, column: 17, scope: !7386)
!7390 = !DILocation(line: 6302, column: 46, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !7392, file: !1, line: 6301, column: 20)
!7392 = distinct !DILexicalBlock(scope: !7382, file: !1, line: 6298, column: 17)
!7393 = !DILocation(line: 6302, column: 48, scope: !7391)
!7394 = !DILocation(line: 6302, column: 33, scope: !7391)
!7395 = !DILocation(line: 6303, column: 35, scope: !7396)
!7396 = distinct !DILexicalBlock(scope: !7391, file: !1, line: 6303, column: 21)
!7397 = !DILocation(line: 6303, column: 21, scope: !7391)
!7398 = !DILocation(line: 6304, column: 27, scope: !7399)
!7399 = distinct !DILexicalBlock(scope: !7396, file: !1, line: 6303, column: 44)
!7400 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !7401)
!7401 = distinct !DILocation(line: 6305, column: 28, scope: !7399)
!7402 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !7401)
!7403 = !DILocation(line: 6305, column: 21, scope: !7399)
!7404 = !DILocation(line: 6307, column: 21, scope: !7391)
!7405 = !DILocation(line: 6308, column: 23, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7391, file: !1, line: 6308, column: 21)
!7407 = !DILocation(line: 6308, column: 21, scope: !7391)
!7408 = !DILocation(line: 6309, column: 21, scope: !7409)
!7409 = distinct !DILexicalBlock(scope: !7406, file: !1, line: 6308, column: 30)
!7410 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !7411)
!7411 = distinct !DILocation(line: 6310, column: 28, scope: !7409)
!7412 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !7411)
!7413 = !DILocation(line: 6310, column: 21, scope: !7409)
!7414 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !7415)
!7415 = distinct !DILocation(line: 6314, column: 20, scope: !7416)
!7416 = distinct !DILexicalBlock(scope: !7377, file: !1, line: 6313, column: 16)
!7417 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !7415)
!7418 = !DILocation(line: 6314, column: 13, scope: !7416)
!7419 = !DILocation(line: 6319, column: 25, scope: !1974)
!7420 = !DILocation(line: 6319, column: 14, scope: !1974)
!7421 = !DILocation(line: 6320, column: 16, scope: !1987)
!7422 = !DILocation(line: 6320, column: 9, scope: !1974)
!7423 = !DILocation(line: 6322, column: 23, scope: !1990)
!7424 = !DILocation(line: 6322, column: 9, scope: !1991)
!7425 = !DILocation(line: 6329, column: 13, scope: !1989)
!7426 = !DILocation(line: 6323, column: 43, scope: !1989)
!7427 = !DILocation(line: 404, column: 23, scope: !694, inlinedAt: !7428)
!7428 = distinct !DILocation(line: 6323, column: 27, scope: !1989)
!7429 = !DILocation(line: 406, column: 13, scope: !3852, inlinedAt: !7428)
!7430 = !DILocation(line: 406, column: 9, scope: !694, inlinedAt: !7428)
!7431 = !DILocation(line: 407, column: 16, scope: !3852, inlinedAt: !7428)
!7432 = !DILocation(line: 407, column: 9, scope: !3852, inlinedAt: !7428)
!7433 = !DILocation(line: 408, column: 36, scope: !694, inlinedAt: !7428)
!7434 = !DILocation(line: 408, column: 12, scope: !694, inlinedAt: !7428)
!7435 = !DILocation(line: 408, column: 5, scope: !694, inlinedAt: !7428)
!7436 = !DILocation(line: 6323, column: 27, scope: !1989)
!7437 = !DILocation(line: 6323, column: 23, scope: !1989)
!7438 = !DILocation(line: 6324, column: 19, scope: !1995)
!7439 = !DILocation(line: 6324, column: 17, scope: !1989)
!7440 = !DILocation(line: 6325, column: 17, scope: !7441)
!7441 = !DILexicalBlockFile(scope: !1993, file: !1, discriminator: 1)
!7442 = !DILocation(line: 6325, column: 17, scope: !7443)
!7443 = distinct !DILexicalBlock(scope: !1993, file: !1, line: 6325, column: 17)
!7444 = !DILocation(line: 6325, column: 17, scope: !1993)
!7445 = !DILocation(line: 6325, column: 17, scope: !7446)
!7446 = !DILexicalBlockFile(scope: !7443, file: !1, discriminator: 3)
!7447 = !DILocation(line: 6333, column: 23, scope: !7448)
!7448 = distinct !DILexicalBlock(scope: !1974, file: !1, line: 6333, column: 9)
!7449 = !DILocation(line: 6333, column: 9, scope: !1974)
!7450 = !DILocation(line: 6334, column: 20, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !7448, file: !1, line: 6333, column: 37)
!7452 = !DILocation(line: 6334, column: 9, scope: !7451)
!7453 = !DILocation(line: 6335, column: 5, scope: !7451)
!7454 = !DILocation(line: 6338, column: 1, scope: !1974)
!7455 = !DILocation(line: 6154, column: 24, scope: !1996)
!7456 = !DILocation(line: 6154, column: 40, scope: !1996)
!7457 = !DILocation(line: 6156, column: 27, scope: !1996)
!7458 = !DILocation(line: 6156, column: 12, scope: !1996)
!7459 = !DILocation(line: 6156, column: 5, scope: !1996)
!7460 = !DILocation(line: 6407, column: 25, scope: !2000)
!7461 = !DILocation(line: 6407, column: 41, scope: !2000)
!7462 = !DILocation(line: 6412, column: 27, scope: !2000)
!7463 = !DILocation(line: 6412, column: 12, scope: !2000)
!7464 = !DILocation(line: 6412, column: 5, scope: !2000)
!7465 = !DILocation(line: 6489, column: 25, scope: !2004)
!7466 = !DILocation(line: 6489, column: 41, scope: !2004)
!7467 = !DILocation(line: 6494, column: 27, scope: !2004)
!7468 = !DILocation(line: 6494, column: 12, scope: !2004)
!7469 = !DILocation(line: 6494, column: 5, scope: !2004)
!7470 = !DILocation(line: 6545, column: 24, scope: !2008)
!7471 = !DILocation(line: 6545, column: 40, scope: !2008)
!7472 = !DILocation(line: 6547, column: 28, scope: !2008)
!7473 = !DILocation(line: 396, column: 23, scope: !689, inlinedAt: !7474)
!7474 = distinct !DILocation(line: 6547, column: 12, scope: !2008)
!7475 = !DILocation(line: 398, column: 13, scope: !3842, inlinedAt: !7474)
!7476 = !DILocation(line: 398, column: 9, scope: !689, inlinedAt: !7474)
!7477 = !DILocation(line: 399, column: 16, scope: !3842, inlinedAt: !7474)
!7478 = !DILocation(line: 399, column: 9, scope: !3842, inlinedAt: !7474)
!7479 = !DILocation(line: 400, column: 36, scope: !689, inlinedAt: !7474)
!7480 = !DILocation(line: 400, column: 12, scope: !689, inlinedAt: !7474)
!7481 = !DILocation(line: 400, column: 5, scope: !689, inlinedAt: !7474)
!7482 = !DILocation(line: 6547, column: 12, scope: !2008)
!7483 = !DILocation(line: 6547, column: 5, scope: !2008)
!7484 = !DILocation(line: 6506, column: 26, scope: !2012)
!7485 = !DILocation(line: 6506, column: 42, scope: !2012)
!7486 = !DILocation(line: 6508, column: 15, scope: !2012)
!7487 = !DILocation(line: 6521, column: 21, scope: !2012)
!7488 = !DILocation(line: 6521, column: 9, scope: !2012)
!7489 = !DILocation(line: 6523, column: 11, scope: !2012)
!7490 = !DILocation(line: 6524, column: 12, scope: !2012)
!7491 = !DILocation(line: 6520, column: 11, scope: !2012)
!7492 = !DILocation(line: 6525, column: 14, scope: !7493)
!7493 = distinct !DILexicalBlock(scope: !2012, file: !1, line: 6525, column: 9)
!7494 = !DILocation(line: 6525, column: 9, scope: !2012)
!7495 = !DILocation(line: 6526, column: 13, scope: !7496)
!7496 = distinct !DILexicalBlock(scope: !7497, file: !1, line: 6526, column: 13)
!7497 = distinct !DILexicalBlock(scope: !7493, file: !1, line: 6525, column: 23)
!7498 = !DILocation(line: 6529, column: 29, scope: !7496)
!7499 = !DILocation(line: 6526, column: 13, scope: !7497)
!7500 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !7501)
!7501 = distinct !DILocation(line: 6527, column: 13, scope: !7496)
!7502 = !DILocation(line: 6527, column: 13, scope: !7496)
!7503 = !DILocation(line: 6529, column: 13, scope: !7496)
!7504 = !DILocation(line: 6532, column: 18, scope: !7493)
!7505 = !DILocation(line: 6533, column: 11, scope: !2012)
!7506 = !DILocation(line: 6535, column: 5, scope: !2012)
!7507 = !DILocation(line: 6558, column: 22, scope: !2019)
!7508 = !DILocation(line: 6558, column: 38, scope: !2019)
!7509 = !DILocation(line: 6560, column: 5, scope: !2019)
!7510 = !DILocation(line: 6561, column: 5, scope: !2019)
!7511 = !DILocation(line: 6560, column: 11, scope: !2019)
!7512 = !DILocation(line: 6561, column: 9, scope: !2019)
!7513 = !DILocation(line: 6562, column: 10, scope: !7514)
!7514 = distinct !DILexicalBlock(scope: !2019, file: !1, line: 6562, column: 9)
!7515 = !DILocation(line: 6562, column: 9, scope: !2019)
!7516 = !DILocation(line: 6564, column: 14, scope: !7517)
!7517 = distinct !DILexicalBlock(scope: !2019, file: !1, line: 6564, column: 9)
!7518 = !DILocation(line: 6564, column: 19, scope: !7517)
!7519 = !DILocation(line: 6564, column: 9, scope: !7517)
!7520 = !DILocation(line: 6564, column: 24, scope: !7517)
!7521 = !DILocation(line: 6564, column: 9, scope: !2019)
!7522 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !7523)
!7523 = distinct !DILocation(line: 6565, column: 16, scope: !7517)
!7524 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !7523)
!7525 = !DILocation(line: 6565, column: 9, scope: !7517)
!7526 = !DILocation(line: 6566, column: 5, scope: !2019)
!7527 = !DILocation(line: 6567, column: 5, scope: !2019)
!7528 = !DILocation(line: 6568, column: 1, scope: !2019)
!7529 = !DILocation(line: 6577, column: 24, scope: !2025)
!7530 = !DILocation(line: 6577, column: 40, scope: !2025)
!7531 = !DILocation(line: 6579, column: 5, scope: !2025)
!7532 = !DILocation(line: 6580, column: 5, scope: !2025)
!7533 = !DILocation(line: 6579, column: 9, scope: !2025)
!7534 = !DILocation(line: 6580, column: 11, scope: !2025)
!7535 = !DILocation(line: 6585, column: 10, scope: !7536)
!7536 = distinct !DILexicalBlock(scope: !2025, file: !1, line: 6585, column: 9)
!7537 = !DILocation(line: 6585, column: 9, scope: !2025)
!7538 = !DILocation(line: 6587, column: 16, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !2025, file: !1, line: 6587, column: 9)
!7540 = !DILocation(line: 6587, column: 22, scope: !7539)
!7541 = !DILocation(line: 6587, column: 9, scope: !7539)
!7542 = !DILocation(line: 6587, column: 27, scope: !7539)
!7543 = !DILocation(line: 6587, column: 9, scope: !2025)
!7544 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !7545)
!7545 = distinct !DILocation(line: 6588, column: 16, scope: !7539)
!7546 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !7545)
!7547 = !DILocation(line: 6588, column: 9, scope: !7539)
!7548 = !DILocation(line: 6589, column: 5, scope: !2025)
!7549 = !DILocation(line: 6590, column: 5, scope: !2025)
!7550 = !DILocation(line: 6591, column: 1, scope: !2025)
!7551 = !DILocation(line: 6671, column: 24, scope: !2031)
!7552 = !DILocation(line: 6671, column: 40, scope: !2031)
!7553 = !DILocation(line: 6673, column: 5, scope: !2031)
!7554 = !DILocation(line: 6673, column: 11, scope: !2031)
!7555 = !DILocation(line: 6674, column: 10, scope: !7556)
!7556 = distinct !DILexicalBlock(scope: !2031, file: !1, line: 6674, column: 9)
!7557 = !DILocation(line: 6674, column: 9, scope: !2031)
!7558 = !DILocation(line: 6676, column: 16, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !2031, file: !1, line: 6676, column: 9)
!7560 = !DILocation(line: 6676, column: 9, scope: !7559)
!7561 = !DILocation(line: 6676, column: 21, scope: !7559)
!7562 = !DILocation(line: 6676, column: 9, scope: !2031)
!7563 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !7564)
!7564 = distinct !DILocation(line: 6677, column: 16, scope: !7559)
!7565 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !7564)
!7566 = !DILocation(line: 6677, column: 9, scope: !7559)
!7567 = !DILocation(line: 6678, column: 5, scope: !2031)
!7568 = !DILocation(line: 6679, column: 5, scope: !2031)
!7569 = !DILocation(line: 6680, column: 1, scope: !2031)
!7570 = !DILocation(line: 6690, column: 26, scope: !2036)
!7571 = !DILocation(line: 6690, column: 42, scope: !2036)
!7572 = !DILocation(line: 6692, column: 5, scope: !2036)
!7573 = !DILocation(line: 6692, column: 11, scope: !2036)
!7574 = !DILocation(line: 6693, column: 10, scope: !7575)
!7575 = distinct !DILexicalBlock(scope: !2036, file: !1, line: 6693, column: 9)
!7576 = !DILocation(line: 6693, column: 9, scope: !2036)
!7577 = !DILocation(line: 6695, column: 17, scope: !7578)
!7578 = distinct !DILexicalBlock(scope: !2036, file: !1, line: 6695, column: 9)
!7579 = !DILocation(line: 6695, column: 9, scope: !7578)
!7580 = !DILocation(line: 6695, column: 23, scope: !7578)
!7581 = !DILocation(line: 6695, column: 9, scope: !2036)
!7582 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !7583)
!7583 = distinct !DILocation(line: 6696, column: 16, scope: !7584)
!7584 = distinct !DILexicalBlock(scope: !7578, file: !1, line: 6695, column: 28)
!7585 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !7583)
!7586 = !DILocation(line: 6696, column: 9, scope: !7584)
!7587 = !DILocation(line: 6698, column: 9, scope: !7588)
!7588 = distinct !DILexicalBlock(scope: !7578, file: !1, line: 6697, column: 12)
!7589 = !DILocation(line: 6699, column: 9, scope: !7588)
!7590 = !DILocation(line: 6701, column: 1, scope: !2036)
!7591 = !DILocation(line: 6710, column: 26, scope: !2041)
!7592 = !DILocation(line: 6710, column: 42, scope: !2041)
!7593 = !DILocation(line: 6712, column: 5, scope: !2041)
!7594 = !DILocation(line: 6712, column: 11, scope: !2041)
!7595 = !DILocation(line: 6713, column: 10, scope: !7596)
!7596 = distinct !DILexicalBlock(scope: !2041, file: !1, line: 6713, column: 9)
!7597 = !DILocation(line: 6713, column: 9, scope: !2041)
!7598 = !DILocation(line: 6715, column: 17, scope: !7599)
!7599 = distinct !DILexicalBlock(scope: !2041, file: !1, line: 6715, column: 9)
!7600 = !DILocation(line: 6715, column: 9, scope: !7599)
!7601 = !DILocation(line: 6715, column: 23, scope: !7599)
!7602 = !DILocation(line: 6715, column: 9, scope: !2041)
!7603 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !7604)
!7604 = distinct !DILocation(line: 6716, column: 16, scope: !7605)
!7605 = distinct !DILexicalBlock(scope: !7599, file: !1, line: 6715, column: 28)
!7606 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !7604)
!7607 = !DILocation(line: 6716, column: 9, scope: !7605)
!7608 = !DILocation(line: 6718, column: 9, scope: !7609)
!7609 = distinct !DILexicalBlock(scope: !7599, file: !1, line: 6717, column: 12)
!7610 = !DILocation(line: 6719, column: 9, scope: !7609)
!7611 = !DILocation(line: 6721, column: 1, scope: !2041)
!7612 = !DILocation(line: 6730, column: 27, scope: !2046)
!7613 = !DILocation(line: 6730, column: 43, scope: !2046)
!7614 = !DILocation(line: 6732, column: 5, scope: !2046)
!7615 = !DILocation(line: 6732, column: 11, scope: !2046)
!7616 = !DILocation(line: 6732, column: 17, scope: !2046)
!7617 = !DILocation(line: 6733, column: 10, scope: !7618)
!7618 = distinct !DILexicalBlock(scope: !2046, file: !1, line: 6733, column: 9)
!7619 = !DILocation(line: 6733, column: 9, scope: !2046)
!7620 = !DILocation(line: 6737, column: 18, scope: !7621)
!7621 = distinct !DILexicalBlock(scope: !2046, file: !1, line: 6737, column: 9)
!7622 = !DILocation(line: 6737, column: 24, scope: !7621)
!7623 = !DILocation(line: 6737, column: 9, scope: !7621)
!7624 = !DILocation(line: 6737, column: 30, scope: !7621)
!7625 = !DILocation(line: 6737, column: 9, scope: !2046)
!7626 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !7627)
!7627 = distinct !DILocation(line: 6738, column: 16, scope: !7628)
!7628 = distinct !DILexicalBlock(scope: !7621, file: !1, line: 6737, column: 35)
!7629 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !7627)
!7630 = !DILocation(line: 6738, column: 9, scope: !7628)
!7631 = !DILocation(line: 6740, column: 9, scope: !7632)
!7632 = distinct !DILexicalBlock(scope: !7621, file: !1, line: 6739, column: 12)
!7633 = !DILocation(line: 6741, column: 9, scope: !7632)
!7634 = !DILocation(line: 6743, column: 1, scope: !2046)
!7635 = !DILocation(line: 6752, column: 27, scope: !2052)
!7636 = !DILocation(line: 6752, column: 43, scope: !2052)
!7637 = !DILocation(line: 6754, column: 5, scope: !2052)
!7638 = !DILocation(line: 6754, column: 11, scope: !2052)
!7639 = !DILocation(line: 6754, column: 17, scope: !2052)
!7640 = !DILocation(line: 6755, column: 10, scope: !7641)
!7641 = distinct !DILexicalBlock(scope: !2052, file: !1, line: 6755, column: 9)
!7642 = !DILocation(line: 6755, column: 9, scope: !2052)
!7643 = !DILocation(line: 6759, column: 18, scope: !7644)
!7644 = distinct !DILexicalBlock(scope: !2052, file: !1, line: 6759, column: 9)
!7645 = !DILocation(line: 6759, column: 24, scope: !7644)
!7646 = !DILocation(line: 6759, column: 9, scope: !7644)
!7647 = !DILocation(line: 6759, column: 30, scope: !7644)
!7648 = !DILocation(line: 6759, column: 9, scope: !2052)
!7649 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !7650)
!7650 = distinct !DILocation(line: 6760, column: 16, scope: !7651)
!7651 = distinct !DILexicalBlock(scope: !7644, file: !1, line: 6759, column: 35)
!7652 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !7650)
!7653 = !DILocation(line: 6760, column: 9, scope: !7651)
!7654 = !DILocation(line: 6762, column: 9, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !7644, file: !1, line: 6761, column: 12)
!7656 = !DILocation(line: 6763, column: 9, scope: !7655)
!7657 = !DILocation(line: 6765, column: 1, scope: !2052)
!7658 = !DILocation(line: 6774, column: 24, scope: !2058)
!7659 = !DILocation(line: 6774, column: 40, scope: !2058)
!7660 = !DILocation(line: 6776, column: 5, scope: !2058)
!7661 = !DILocation(line: 6776, column: 11, scope: !2058)
!7662 = !DILocation(line: 6777, column: 10, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !2058, file: !1, line: 6777, column: 9)
!7664 = !DILocation(line: 6777, column: 9, scope: !2058)
!7665 = !DILocation(line: 6779, column: 16, scope: !7666)
!7666 = distinct !DILexicalBlock(scope: !2058, file: !1, line: 6779, column: 9)
!7667 = !DILocation(line: 6779, column: 9, scope: !7666)
!7668 = !DILocation(line: 6779, column: 21, scope: !7666)
!7669 = !DILocation(line: 6779, column: 9, scope: !2058)
!7670 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !7671)
!7671 = distinct !DILocation(line: 6780, column: 16, scope: !7666)
!7672 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !7671)
!7673 = !DILocation(line: 6780, column: 9, scope: !7666)
!7674 = !DILocation(line: 6781, column: 5, scope: !2058)
!7675 = !DILocation(line: 6782, column: 5, scope: !2058)
!7676 = !DILocation(line: 6783, column: 1, scope: !2058)
!7677 = !DILocation(line: 6792, column: 27, scope: !2063)
!7678 = !DILocation(line: 6792, column: 43, scope: !2063)
!7679 = !DILocation(line: 6795, column: 5, scope: !2063)
!7680 = !DILocation(line: 6795, column: 11, scope: !2063)
!7681 = !DILocation(line: 6797, column: 10, scope: !7682)
!7682 = distinct !DILexicalBlock(scope: !2063, file: !1, line: 6797, column: 9)
!7683 = !DILocation(line: 6797, column: 9, scope: !2063)
!7684 = !DILocation(line: 6798, column: 25, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7682, file: !1, line: 6797, column: 36)
!7686 = !DILocation(line: 6798, column: 9, scope: !7685)
!7687 = !DILocation(line: 6799, column: 9, scope: !7685)
!7688 = !DILocation(line: 6801, column: 11, scope: !2063)
!7689 = !DILocation(line: 6794, column: 12, scope: !2063)
!7690 = !DILocation(line: 6802, column: 13, scope: !7691)
!7691 = distinct !DILexicalBlock(scope: !2063, file: !1, line: 6802, column: 9)
!7692 = !DILocation(line: 6802, column: 9, scope: !2063)
!7693 = !DILocation(line: 6806, column: 18, scope: !2072)
!7694 = !DILocation(line: 6806, column: 5, scope: !2073)
!7695 = !DILocation(line: 6803, column: 25, scope: !7696)
!7696 = distinct !DILexicalBlock(scope: !7691, file: !1, line: 6802, column: 27)
!7697 = !DILocation(line: 6803, column: 9, scope: !7696)
!7698 = !DILocation(line: 6804, column: 9, scope: !7696)
!7699 = !DILocation(line: 6808, column: 16, scope: !2071)
!7700 = !DILocation(line: 6807, column: 19, scope: !2071)
!7701 = !DILocation(line: 6809, column: 14, scope: !7702)
!7702 = distinct !DILexicalBlock(scope: !2071, file: !1, line: 6809, column: 13)
!7703 = !DILocation(line: 6809, column: 13, scope: !2071)
!7704 = !DILocation(line: 6811, column: 14, scope: !2077)
!7705 = !DILocation(line: 6811, column: 13, scope: !2071)
!7706 = !DILocation(line: 6812, column: 29, scope: !2076)
!7707 = !DILocation(line: 6812, column: 13, scope: !2076)
!7708 = !DILocation(line: 6814, column: 13, scope: !7709)
!7709 = !DILexicalBlockFile(scope: !2075, file: !1, discriminator: 1)
!7710 = !DILocation(line: 6814, column: 13, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !2075, file: !1, line: 6814, column: 13)
!7712 = !DILocation(line: 6814, column: 13, scope: !2075)
!7713 = !DILocation(line: 6814, column: 13, scope: !7714)
!7714 = !DILexicalBlockFile(scope: !7711, file: !1, discriminator: 3)
!7715 = !DILocation(line: 6817, column: 43, scope: !2081)
!7716 = !DILocation(line: 6817, column: 42, scope: !2081)
!7717 = !DILocation(line: 6817, column: 18, scope: !2081)
!7718 = !DILocation(line: 6818, column: 17, scope: !7719)
!7719 = distinct !DILexicalBlock(scope: !2079, file: !1, line: 6818, column: 17)
!7720 = !DILocation(line: 6817, column: 17, scope: !2082)
!7721 = !DILocation(line: 6818, column: 17, scope: !7722)
!7722 = !DILexicalBlockFile(scope: !2079, file: !1, discriminator: 1)
!7723 = !DILocation(line: 6818, column: 17, scope: !2079)
!7724 = !DILocation(line: 6818, column: 17, scope: !7725)
!7725 = !DILexicalBlockFile(scope: !7719, file: !1, discriminator: 3)
!7726 = !DILocation(line: 6822, column: 9, scope: !7727)
!7727 = !DILexicalBlockFile(scope: !2084, file: !1, discriminator: 1)
!7728 = !DILocation(line: 6822, column: 9, scope: !2084)
!7729 = !DILocation(line: 6822, column: 9, scope: !7730)
!7730 = !DILexicalBlockFile(scope: !7731, file: !1, discriminator: 3)
!7731 = distinct !DILexicalBlock(scope: !2084, file: !1, line: 6822, column: 9)
!7732 = !DILocation(line: 6825, column: 19, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !2063, file: !1, line: 6825, column: 9)
!7734 = !DILocation(line: 6825, column: 24, scope: !7733)
!7735 = !DILocation(line: 6825, column: 9, scope: !7733)
!7736 = !DILocation(line: 6825, column: 35, scope: !7733)
!7737 = !DILocation(line: 6825, column: 9, scope: !2063)
!7738 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !7739)
!7739 = distinct !DILocation(line: 6826, column: 16, scope: !7733)
!7740 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !7739)
!7741 = !DILocation(line: 6826, column: 9, scope: !7733)
!7742 = !DILocation(line: 6827, column: 5, scope: !2063)
!7743 = !DILocation(line: 6828, column: 5, scope: !2063)
!7744 = !DILocation(line: 6829, column: 1, scope: !2063)
!7745 = !DILocation(line: 6349, column: 28, scope: !2085)
!7746 = !DILocation(line: 6349, column: 44, scope: !2085)
!7747 = !DILocation(line: 6351, column: 5, scope: !2085)
!7748 = !DILocation(line: 6357, column: 5, scope: !2085)
!7749 = !DILocation(line: 6351, column: 15, scope: !2085)
!7750 = !DILocation(line: 6357, column: 11, scope: !2085)
!7751 = !DILocation(line: 6365, column: 10, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !2085, file: !1, line: 6365, column: 9)
!7753 = !DILocation(line: 6365, column: 9, scope: !2085)
!7754 = !DILocation(line: 6370, column: 16, scope: !2085)
!7755 = !DILocation(line: 6352, column: 11, scope: !2085)
!7756 = !DILocation(line: 6372, column: 32, scope: !2085)
!7757 = !DILocation(line: 6372, column: 11, scope: !2085)
!7758 = !DILocation(line: 6353, column: 9, scope: !2085)
!7759 = !DILocation(line: 6373, column: 5, scope: !7760)
!7760 = !DILexicalBlockFile(scope: !2094, file: !1, discriminator: 1)
!7761 = !DILocation(line: 6373, column: 5, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !2094, file: !1, line: 6373, column: 5)
!7763 = !DILocation(line: 6373, column: 5, scope: !2094)
!7764 = !DILocation(line: 6373, column: 5, scope: !7765)
!7765 = !DILexicalBlockFile(scope: !7762, file: !1, discriminator: 3)
!7766 = !DILocation(line: 6374, column: 13, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !2085, file: !1, line: 6374, column: 9)
!7768 = !DILocation(line: 6374, column: 9, scope: !2085)
!7769 = !DILocation(line: 6375, column: 35, scope: !7767)
!7770 = !DILocation(line: 6375, column: 16, scope: !7767)
!7771 = !DILocation(line: 6375, column: 9, scope: !7767)
!7772 = !DILocation(line: 6377, column: 5, scope: !2085)
!7773 = !DILocation(line: 6378, column: 5, scope: !2085)
!7774 = !DILocation(line: 6379, column: 1, scope: !2085)
!7775 = !DILocation(line: 6388, column: 25, scope: !2095)
!7776 = !DILocation(line: 6388, column: 41, scope: !2095)
!7777 = !DILocation(line: 6390, column: 5, scope: !2095)
!7778 = !DILocation(line: 6390, column: 11, scope: !2095)
!7779 = !DILocation(line: 6391, column: 10, scope: !7780)
!7780 = distinct !DILexicalBlock(scope: !2095, file: !1, line: 6391, column: 9)
!7781 = !DILocation(line: 6391, column: 9, scope: !2095)
!7782 = !DILocation(line: 6393, column: 20, scope: !2095)
!7783 = !DILocation(line: 6393, column: 12, scope: !2095)
!7784 = !DILocation(line: 6390, column: 16, scope: !2095)
!7785 = !DILocation(line: 6394, column: 14, scope: !7786)
!7786 = distinct !DILexicalBlock(scope: !2095, file: !1, line: 6394, column: 9)
!7787 = !DILocation(line: 6394, column: 9, scope: !2095)
!7788 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !7789)
!7789 = distinct !DILocation(line: 6395, column: 16, scope: !7786)
!7790 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !7789)
!7791 = !DILocation(line: 6395, column: 9, scope: !7786)
!7792 = !DILocation(line: 6396, column: 27, scope: !2095)
!7793 = !DILocation(line: 6396, column: 12, scope: !2095)
!7794 = !DILocation(line: 6396, column: 5, scope: !2095)
!7795 = !DILocation(line: 6397, column: 1, scope: !2095)
!7796 = !DILocation(line: 6424, column: 25, scope: !2101)
!7797 = !DILocation(line: 6424, column: 41, scope: !2101)
!7798 = !DILocation(line: 6429, column: 9, scope: !7799)
!7799 = distinct !DILexicalBlock(scope: !2101, file: !1, line: 6429, column: 9)
!7800 = !DILocation(line: 6429, column: 19, scope: !7799)
!7801 = !DILocation(line: 6429, column: 9, scope: !2101)
!7802 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !7803)
!7803 = distinct !DILocation(line: 6431, column: 16, scope: !7799)
!7804 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !7803)
!7805 = !DILocation(line: 6431, column: 9, scope: !7799)
!7806 = !DILocation(line: 6432, column: 5, scope: !2101)
!7807 = !DILocation(line: 6433, column: 5, scope: !2101)
!7808 = !DILocation(line: 6434, column: 1, scope: !2101)
!7809 = !DILocation(line: 7048, column: 22, scope: !2105)
!7810 = !DILocation(line: 7048, column: 38, scope: !2105)
!7811 = !DILocation(line: 7051, column: 5, scope: !2105)
!7812 = !DILocation(line: 7051, column: 15, scope: !2105)
!7813 = !DILocation(line: 7052, column: 29, scope: !2105)
!7814 = !DILocation(line: 7054, column: 5, scope: !2112)
!7815 = !DILocation(line: 7055, column: 16, scope: !2112)
!7816 = !DILocation(line: 7055, column: 11, scope: !2112)
!7817 = !DILocation(line: 7050, column: 11, scope: !2105)
!7818 = !DILocation(line: 7056, column: 5, scope: !2112)
!7819 = !DILocation(line: 7057, column: 13, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !2105, file: !1, line: 7057, column: 9)
!7821 = !DILocation(line: 7057, column: 9, scope: !2105)
!7822 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !7823)
!7823 = distinct !DILocation(line: 7058, column: 16, scope: !7820)
!7824 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !7823)
!7825 = !DILocation(line: 7058, column: 9, scope: !7820)
!7826 = !DILocation(line: 7060, column: 47, scope: !2105)
!7827 = !DILocation(line: 7060, column: 32, scope: !2105)
!7828 = !DILocation(line: 7060, column: 53, scope: !2105)
!7829 = !DILocation(line: 7060, column: 12, scope: !2105)
!7830 = !DILocation(line: 7060, column: 5, scope: !2105)
!7831 = !DILocation(line: 7061, column: 1, scope: !2105)
!7832 = !DILocation(line: 6899, column: 23, scope: !2113)
!7833 = !DILocation(line: 6899, column: 39, scope: !2113)
!7834 = !DILocation(line: 6902, column: 5, scope: !2113)
!7835 = !DILocation(line: 6903, column: 5, scope: !2113)
!7836 = !DILocation(line: 6904, column: 5, scope: !2113)
!7837 = !DILocation(line: 6904, column: 15, scope: !2113)
!7838 = !DILocation(line: 6905, column: 29, scope: !2113)
!7839 = !DILocation(line: 6902, column: 9, scope: !2113)
!7840 = !DILocation(line: 6907, column: 10, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !2113, file: !1, line: 6907, column: 9)
!7842 = !DILocation(line: 6907, column: 9, scope: !2113)
!7843 = !DILocation(line: 6910, column: 5, scope: !2202)
!7844 = !DILocation(line: 6911, column: 17, scope: !2202)
!7845 = !DILocation(line: 6911, column: 26, scope: !2202)
!7846 = !DILocation(line: 6903, column: 19, scope: !2113)
!7847 = !DILocation(line: 6911, column: 11, scope: !2202)
!7848 = !DILocation(line: 6901, column: 11, scope: !2113)
!7849 = !DILocation(line: 6912, column: 5, scope: !2202)
!7850 = !DILocation(line: 6914, column: 29, scope: !2113)
!7851 = !DILocation(line: 6914, column: 12, scope: !2113)
!7852 = !DILocation(line: 6914, column: 5, scope: !2113)
!7853 = !DILocation(line: 6915, column: 1, scope: !2113)
!7854 = !DILocation(line: 6924, column: 23, scope: !2221)
!7855 = !DILocation(line: 6924, column: 39, scope: !2221)
!7856 = !DILocation(line: 6926, column: 5, scope: !2221)
!7857 = !DILocation(line: 6927, column: 5, scope: !2221)
!7858 = !DILocation(line: 6928, column: 5, scope: !2221)
!7859 = !DILocation(line: 6929, column: 5, scope: !2221)
!7860 = !DILocation(line: 6929, column: 15, scope: !2221)
!7861 = !DILocation(line: 6930, column: 29, scope: !2221)
!7862 = !DILocation(line: 6926, column: 11, scope: !2221)
!7863 = !DILocation(line: 6927, column: 9, scope: !2221)
!7864 = !DILocation(line: 6932, column: 10, scope: !7865)
!7865 = distinct !DILexicalBlock(scope: !2221, file: !1, line: 6932, column: 9)
!7866 = !DILocation(line: 6932, column: 9, scope: !2221)
!7867 = !DILocation(line: 6935, column: 5, scope: !2230)
!7868 = !DILocation(line: 6936, column: 17, scope: !2230)
!7869 = !DILocation(line: 6936, column: 22, scope: !2230)
!7870 = !DILocation(line: 6936, column: 31, scope: !2230)
!7871 = !DILocation(line: 6928, column: 19, scope: !2221)
!7872 = !DILocation(line: 6936, column: 11, scope: !2230)
!7873 = !DILocation(line: 6936, column: 9, scope: !2230)
!7874 = !DILocation(line: 6937, column: 5, scope: !2230)
!7875 = !DILocation(line: 6939, column: 24, scope: !2221)
!7876 = !DILocation(line: 6939, column: 29, scope: !2221)
!7877 = !DILocation(line: 6939, column: 12, scope: !2221)
!7878 = !DILocation(line: 6939, column: 5, scope: !2221)
!7879 = !DILocation(line: 6940, column: 1, scope: !2221)
!7880 = !DILocation(line: 6955, column: 24, scope: !2231)
!7881 = !DILocation(line: 6955, column: 40, scope: !2231)
!7882 = !DILocation(line: 6958, column: 5, scope: !2231)
!7883 = !DILocation(line: 6959, column: 5, scope: !2231)
!7884 = !DILocation(line: 6960, column: 5, scope: !2231)
!7885 = !DILocation(line: 6961, column: 5, scope: !2231)
!7886 = !DILocation(line: 6962, column: 8, scope: !2231)
!7887 = !DILocation(line: 6962, column: 15, scope: !2231)
!7888 = !{!7889, !3882, i64 0}
!7889 = !{!"", !3882, i64 0, !3882, i64 4}
!7890 = !DILocation(line: 6958, column: 14, scope: !2231)
!7891 = !DILocation(line: 6959, column: 10, scope: !2231)
!7892 = !DILocation(line: 6960, column: 9, scope: !2231)
!7893 = !DILocation(line: 6963, column: 10, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !2231, file: !1, line: 6963, column: 9)
!7895 = !DILocation(line: 6963, column: 9, scope: !2231)
!7896 = !DILocation(line: 6965, column: 5, scope: !2304)
!7897 = !DILocation(line: 6966, column: 18, scope: !2304)
!7898 = !DILocation(line: 6966, column: 26, scope: !2304)
!7899 = !DILocation(line: 6966, column: 35, scope: !2304)
!7900 = !DILocation(line: 6961, column: 15, scope: !2231)
!7901 = !DILocation(line: 6966, column: 11, scope: !2304)
!7902 = !DILocation(line: 6960, column: 18, scope: !2231)
!7903 = !DILocation(line: 6967, column: 5, scope: !2304)
!7904 = !DILocation(line: 6968, column: 13, scope: !7905)
!7905 = distinct !DILexicalBlock(scope: !2231, file: !1, line: 6968, column: 9)
!7906 = !DILocation(line: 6968, column: 9, scope: !2231)
!7907 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !7908)
!7908 = distinct !DILocation(line: 6969, column: 16, scope: !7905)
!7909 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !7908)
!7910 = !DILocation(line: 6969, column: 9, scope: !7905)
!7911 = !DILocation(line: 6971, column: 12, scope: !7912)
!7912 = distinct !DILexicalBlock(scope: !2231, file: !1, line: 6971, column: 9)
!7913 = !DILocation(line: 6971, column: 19, scope: !7912)
!7914 = !DILocation(line: 6971, column: 9, scope: !2231)
!7915 = !DILocation(line: 6972, column: 9, scope: !7912)
!7916 = !DILocation(line: 6974, column: 14, scope: !2231)
!7917 = !DILocation(line: 6957, column: 15, scope: !2231)
!7918 = !DILocation(line: 6975, column: 10, scope: !7919)
!7919 = distinct !DILexicalBlock(scope: !2231, file: !1, line: 6975, column: 9)
!7920 = !DILocation(line: 6975, column: 9, scope: !2231)
!7921 = !DILocation(line: 6978, column: 5, scope: !2231)
!7922 = !DILocation(line: 6979, column: 5, scope: !2231)
!7923 = !{!7889, !3882, i64 4}
!7924 = !DILocation(line: 396, column: 23, scope: !689, inlinedAt: !7925)
!7925 = distinct !DILocation(line: 6979, column: 5, scope: !2231)
!7926 = !DILocation(line: 398, column: 13, scope: !3842, inlinedAt: !7925)
!7927 = !DILocation(line: 398, column: 9, scope: !689, inlinedAt: !7925)
!7928 = !DILocation(line: 399, column: 16, scope: !3842, inlinedAt: !7925)
!7929 = !DILocation(line: 399, column: 9, scope: !3842, inlinedAt: !7925)
!7930 = !DILocation(line: 400, column: 36, scope: !689, inlinedAt: !7925)
!7931 = !DILocation(line: 400, column: 12, scope: !689, inlinedAt: !7925)
!7932 = !DILocation(line: 400, column: 5, scope: !689, inlinedAt: !7925)
!7933 = !DILocation(line: 6980, column: 5, scope: !2231)
!7934 = !{!7935, !3882, i64 0}
!7935 = !{!"", !3882, i64 0, !3882, i64 4, !3882, i64 8, !3872, i64 16}
!7936 = !DILocation(line: 6981, column: 5, scope: !2231)
!7937 = !{!7938, !3882, i64 8}
!7938 = !{!"", !3882, i64 0, !3882, i64 4, !3882, i64 8, !3877, i64 16, !3877, i64 24}
!7939 = !DILocation(line: 6982, column: 5, scope: !2231)
!7940 = !{!7935, !3882, i64 8}
!7941 = !DILocation(line: 6983, column: 9, scope: !2308)
!7942 = !DILocation(line: 6983, column: 9, scope: !2231)
!7943 = !DILocation(line: 6984, column: 9, scope: !7944)
!7944 = !DILexicalBlockFile(scope: !2306, file: !1, discriminator: 1)
!7945 = !DILocation(line: 6984, column: 9, scope: !7946)
!7946 = distinct !DILexicalBlock(scope: !2306, file: !1, line: 6984, column: 9)
!7947 = !DILocation(line: 6984, column: 9, scope: !2306)
!7948 = !DILocation(line: 6984, column: 9, scope: !7949)
!7949 = !DILexicalBlockFile(scope: !7946, file: !1, discriminator: 3)
!7950 = !DILocation(line: 6989, column: 1, scope: !2231)
!7951 = !DILocation(line: 6998, column: 25, scope: !2309)
!7952 = !DILocation(line: 6998, column: 41, scope: !2309)
!7953 = !DILocation(line: 7000, column: 5, scope: !2309)
!7954 = !DILocation(line: 7001, column: 5, scope: !2309)
!7955 = !DILocation(line: 7002, column: 5, scope: !2309)
!7956 = !DILocation(line: 7002, column: 15, scope: !2309)
!7957 = !DILocation(line: 7003, column: 29, scope: !2309)
!7958 = !DILocation(line: 7000, column: 11, scope: !2309)
!7959 = !DILocation(line: 7001, column: 9, scope: !2309)
!7960 = !DILocation(line: 7005, column: 10, scope: !7961)
!7961 = distinct !DILexicalBlock(scope: !2309, file: !1, line: 7005, column: 9)
!7962 = !DILocation(line: 7005, column: 9, scope: !2309)
!7963 = !DILocation(line: 7007, column: 5, scope: !2317)
!7964 = !DILocation(line: 7008, column: 19, scope: !2317)
!7965 = !DILocation(line: 7008, column: 33, scope: !2317)
!7966 = !DILocation(line: 7008, column: 11, scope: !2317)
!7967 = !DILocation(line: 7008, column: 9, scope: !2317)
!7968 = !DILocation(line: 7009, column: 5, scope: !2317)
!7969 = !DILocation(line: 7010, column: 9, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !2309, file: !1, line: 7010, column: 9)
!7971 = !DILocation(line: 7010, column: 13, scope: !7970)
!7972 = !DILocation(line: 7010, column: 9, scope: !2309)
!7973 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !7974)
!7974 = distinct !DILocation(line: 7011, column: 16, scope: !7970)
!7975 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !7974)
!7976 = !DILocation(line: 7011, column: 9, scope: !7970)
!7977 = !DILocation(line: 7013, column: 47, scope: !2309)
!7978 = !DILocation(line: 7013, column: 32, scope: !2309)
!7979 = !DILocation(line: 7013, column: 53, scope: !2309)
!7980 = !DILocation(line: 7013, column: 12, scope: !2309)
!7981 = !DILocation(line: 7013, column: 5, scope: !2309)
!7982 = !DILocation(line: 7014, column: 1, scope: !2309)
!7983 = !DILocation(line: 7591, column: 24, scope: !2318)
!7984 = !DILocation(line: 7591, column: 40, scope: !2318)
!7985 = !DILocation(line: 7593, column: 5, scope: !2318)
!7986 = !DILocation(line: 7593, column: 11, scope: !2318)
!7987 = !DILocation(line: 7595, column: 10, scope: !7988)
!7988 = distinct !DILexicalBlock(scope: !2318, file: !1, line: 7595, column: 9)
!7989 = !DILocation(line: 7595, column: 9, scope: !2318)
!7990 = !DILocation(line: 7597, column: 18, scope: !2318)
!7991 = !DILocation(line: 7597, column: 11, scope: !2318)
!7992 = !DILocation(line: 7594, column: 9, scope: !2318)
!7993 = !DILocation(line: 7598, column: 13, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !2318, file: !1, line: 7598, column: 9)
!7995 = !DILocation(line: 7598, column: 9, scope: !2318)
!7996 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !7997)
!7997 = distinct !DILocation(line: 7599, column: 16, scope: !7994)
!7998 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !7997)
!7999 = !DILocation(line: 7599, column: 9, scope: !7994)
!8000 = !DILocation(line: 7600, column: 28, scope: !2318)
!8001 = !DILocation(line: 7600, column: 12, scope: !2318)
!8002 = !DILocation(line: 7600, column: 5, scope: !2318)
!8003 = !DILocation(line: 7601, column: 1, scope: !2318)
!8004 = !DILocation(line: 7611, column: 24, scope: !2324)
!8005 = !DILocation(line: 7611, column: 40, scope: !2324)
!8006 = !DILocation(line: 7613, column: 9, scope: !8007)
!8007 = distinct !DILexicalBlock(scope: !2324, file: !1, line: 7613, column: 9)
!8008 = !DILocation(line: 7613, column: 18, scope: !8007)
!8009 = !DILocation(line: 7613, column: 9, scope: !2324)
!8010 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !8011)
!8011 = distinct !DILocation(line: 7614, column: 16, scope: !8007)
!8012 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !8011)
!8013 = !DILocation(line: 7614, column: 9, scope: !8007)
!8014 = !DILocation(line: 7615, column: 5, scope: !2324)
!8015 = !DILocation(line: 7616, column: 5, scope: !2324)
!8016 = !DILocation(line: 7617, column: 1, scope: !2324)
!8017 = !DILocation(line: 7626, column: 25, scope: !2328)
!8018 = !DILocation(line: 7626, column: 41, scope: !2328)
!8019 = !DILocation(line: 7628, column: 5, scope: !2328)
!8020 = !DILocation(line: 7629, column: 5, scope: !2328)
!8021 = !DILocation(line: 7628, column: 11, scope: !2328)
!8022 = !DILocation(line: 7629, column: 9, scope: !2328)
!8023 = !DILocation(line: 7630, column: 10, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !2328, file: !1, line: 7630, column: 9)
!8025 = !DILocation(line: 7630, column: 9, scope: !2328)
!8026 = !DILocation(line: 7632, column: 17, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !2328, file: !1, line: 7632, column: 9)
!8028 = !DILocation(line: 7632, column: 22, scope: !8027)
!8029 = !DILocation(line: 7632, column: 9, scope: !8027)
!8030 = !DILocation(line: 7632, column: 28, scope: !8027)
!8031 = !DILocation(line: 7632, column: 9, scope: !2328)
!8032 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !8033)
!8033 = distinct !DILocation(line: 7633, column: 16, scope: !8027)
!8034 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !8033)
!8035 = !DILocation(line: 7633, column: 9, scope: !8027)
!8036 = !DILocation(line: 7634, column: 5, scope: !2328)
!8037 = !DILocation(line: 7635, column: 5, scope: !2328)
!8038 = !DILocation(line: 7636, column: 1, scope: !2328)
!8039 = !DILocation(line: 7646, column: 27, scope: !2334)
!8040 = !DILocation(line: 7646, column: 43, scope: !2334)
!8041 = !DILocation(line: 7648, column: 5, scope: !2334)
!8042 = !DILocation(line: 7648, column: 9, scope: !2334)
!8043 = !DILocation(line: 7650, column: 10, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !2334, file: !1, line: 7650, column: 9)
!8045 = !DILocation(line: 7650, column: 9, scope: !2334)
!8046 = !DILocation(line: 7652, column: 22, scope: !2334)
!8047 = !DILocation(line: 7652, column: 12, scope: !2334)
!8048 = !DILocation(line: 7649, column: 11, scope: !2334)
!8049 = !DILocation(line: 7653, column: 14, scope: !8050)
!8050 = distinct !DILexicalBlock(scope: !2334, file: !1, line: 7653, column: 9)
!8051 = !DILocation(line: 7653, column: 9, scope: !2334)
!8052 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !8053)
!8053 = distinct !DILocation(line: 7654, column: 16, scope: !8050)
!8054 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !8053)
!8055 = !DILocation(line: 7654, column: 9, scope: !8050)
!8056 = !DILocation(line: 7655, column: 27, scope: !2334)
!8057 = !DILocation(line: 7655, column: 12, scope: !2334)
!8058 = !DILocation(line: 7655, column: 5, scope: !2334)
!8059 = !DILocation(line: 7656, column: 1, scope: !2334)
!8060 = !DILocation(line: 7666, column: 27, scope: !2340)
!8061 = !DILocation(line: 7666, column: 43, scope: !2340)
!8062 = !DILocation(line: 7668, column: 5, scope: !2340)
!8063 = !DILocation(line: 7669, column: 5, scope: !2340)
!8064 = !DILocation(line: 7668, column: 9, scope: !2340)
!8065 = !DILocation(line: 7669, column: 11, scope: !2340)
!8066 = !DILocation(line: 7670, column: 10, scope: !8067)
!8067 = distinct !DILexicalBlock(scope: !2340, file: !1, line: 7670, column: 9)
!8068 = !DILocation(line: 7670, column: 9, scope: !2340)
!8069 = !DILocation(line: 7672, column: 19, scope: !8070)
!8070 = distinct !DILexicalBlock(scope: !2340, file: !1, line: 7672, column: 9)
!8071 = !DILocation(line: 7672, column: 23, scope: !8070)
!8072 = !DILocation(line: 7672, column: 9, scope: !8070)
!8073 = !DILocation(line: 7672, column: 29, scope: !8070)
!8074 = !DILocation(line: 7672, column: 9, scope: !2340)
!8075 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !8076)
!8076 = distinct !DILocation(line: 7673, column: 16, scope: !8070)
!8077 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !8076)
!8078 = !DILocation(line: 7673, column: 9, scope: !8070)
!8079 = !DILocation(line: 7674, column: 5, scope: !2340)
!8080 = !DILocation(line: 7675, column: 5, scope: !2340)
!8081 = !DILocation(line: 7676, column: 1, scope: !2340)
!8082 = !DILocation(line: 7695, column: 22, scope: !2346)
!8083 = !DILocation(line: 7695, column: 38, scope: !2346)
!8084 = !DILocation(line: 7695, column: 54, scope: !2346)
!8085 = !DILocation(line: 7697, column: 5, scope: !2346)
!8086 = !DILocation(line: 7698, column: 5, scope: !2346)
!8087 = !DILocation(line: 7699, column: 5, scope: !2346)
!8088 = !DILocation(line: 7699, column: 9, scope: !2346)
!8089 = !DILocation(line: 7700, column: 5, scope: !2346)
!8090 = !DILocation(line: 7700, column: 9, scope: !2346)
!8091 = !DILocation(line: 7702, column: 15, scope: !2346)
!8092 = !DILocation(line: 7705, column: 10, scope: !2346)
!8093 = !DILocation(line: 7710, column: 5, scope: !2346)
!8094 = !DILocation(line: 7711, column: 10, scope: !2346)
!8095 = !DILocation(line: 7711, column: 24, scope: !2346)
!8096 = !DILocation(line: 7697, column: 12, scope: !2346)
!8097 = !DILocation(line: 7698, column: 9, scope: !2346)
!8098 = !DILocation(line: 7712, column: 10, scope: !8099)
!8099 = distinct !DILexicalBlock(scope: !2346, file: !1, line: 7712, column: 9)
!8100 = !DILocation(line: 7712, column: 9, scope: !2346)
!8101 = !DILocation(line: 7726, column: 11, scope: !2346)
!8102 = !DILocation(line: 7729, column: 5, scope: !2359)
!8103 = !DILocation(line: 7736, column: 9, scope: !8104)
!8104 = distinct !DILexicalBlock(scope: !2359, file: !1, line: 7736, column: 9)
!8105 = !DILocation(line: 7736, column: 16, scope: !8104)
!8106 = !DILocation(line: 7740, column: 24, scope: !8104)
!8107 = !DILocation(line: 7740, column: 32, scope: !8104)
!8108 = !DILocation(line: 7740, column: 39, scope: !8104)
!8109 = !DILocation(line: 7736, column: 9, scope: !2359)
!8110 = !DILocation(line: 7737, column: 14, scope: !8104)
!8111 = !DILocation(line: 7701, column: 9, scope: !2346)
!8112 = !DILocation(line: 7737, column: 9, scope: !8104)
!8113 = !DILocation(line: 7740, column: 14, scope: !8104)
!8114 = !DILocation(line: 7741, column: 5, scope: !2359)
!8115 = !DILocation(line: 7743, column: 12, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !2346, file: !1, line: 7743, column: 9)
!8117 = !DILocation(line: 7743, column: 9, scope: !2346)
!8118 = !DILocation(line: 7744, column: 46, scope: !8119)
!8119 = distinct !DILexicalBlock(scope: !8116, file: !1, line: 7743, column: 19)
!8120 = !DILocation(line: 7744, column: 66, scope: !8119)
!8121 = !DILocation(line: 7744, column: 9, scope: !8119)
!8122 = !DILocation(line: 7745, column: 9, scope: !8119)
!8123 = !DILocation(line: 7749, column: 9, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !2346, file: !1, line: 7749, column: 9)
!8125 = !DILocation(line: 7749, column: 55, scope: !8124)
!8126 = !DILocation(line: 7749, column: 9, scope: !2346)
!8127 = !DILocation(line: 7750, column: 9, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8124, file: !1, line: 7749, column: 60)
!8129 = !DILocation(line: 7751, column: 9, scope: !8128)
!8130 = !DILocation(line: 7755, column: 36, scope: !2346)
!8131 = !DILocation(line: 7755, column: 20, scope: !2346)
!8132 = !DILocation(line: 7755, column: 5, scope: !2346)
!8133 = !DILocation(line: 781, column: 22, scope: !1050, inlinedAt: !8134)
!8134 = distinct !DILocation(line: 7758, column: 5, scope: !2346)
!8135 = !DILocation(line: 782, column: 15, scope: !1058, inlinedAt: !8134)
!8136 = !DILocation(line: 782, column: 9, scope: !1058, inlinedAt: !8134)
!8137 = !DILocation(line: 782, column: 9, scope: !1050, inlinedAt: !8134)
!8138 = !DILocation(line: 783, column: 9, scope: !4639, inlinedAt: !8134)
!8139 = !DILocation(line: 783, column: 9, scope: !4641, inlinedAt: !8134)
!8140 = !DILocation(line: 783, column: 9, scope: !4643, inlinedAt: !8134)
!8141 = !DILocation(line: 783, column: 9, scope: !4645, inlinedAt: !8134)
!8142 = !DILocation(line: 783, column: 9, scope: !1060, inlinedAt: !8134)
!8143 = !DILocation(line: 783, column: 9, scope: !4648, inlinedAt: !8134)
!8144 = !DILocation(line: 7758, column: 5, scope: !2346)
!8145 = !DILocation(line: 7760, column: 1, scope: !2346)
!8146 = !DILocation(line: 7771, column: 24, scope: !2360)
!8147 = !DILocation(line: 7771, column: 40, scope: !2360)
!8148 = !DILocation(line: 7773, column: 5, scope: !2360)
!8149 = !DILocation(line: 7773, column: 9, scope: !2360)
!8150 = !DILocation(line: 7774, column: 10, scope: !8151)
!8151 = distinct !DILexicalBlock(scope: !2360, file: !1, line: 7774, column: 9)
!8152 = !DILocation(line: 7774, column: 9, scope: !2360)
!8153 = !DILocation(line: 7778, column: 5, scope: !2367)
!8154 = !DILocation(line: 7779, column: 17, scope: !2367)
!8155 = !DILocation(line: 7779, column: 11, scope: !2367)
!8156 = !DILocation(line: 7773, column: 13, scope: !2360)
!8157 = !DILocation(line: 7780, column: 5, scope: !2367)
!8158 = !DILocation(line: 7781, column: 13, scope: !8159)
!8159 = distinct !DILexicalBlock(scope: !2360, file: !1, line: 7781, column: 9)
!8160 = !DILocation(line: 7781, column: 9, scope: !2360)
!8161 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !8162)
!8162 = distinct !DILocation(line: 7782, column: 16, scope: !8159)
!8163 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !8162)
!8164 = !DILocation(line: 7782, column: 9, scope: !8159)
!8165 = !DILocation(line: 7783, column: 5, scope: !2360)
!8166 = !DILocation(line: 7784, column: 5, scope: !2360)
!8167 = !DILocation(line: 7785, column: 1, scope: !2360)
!8168 = !DILocation(line: 7793, column: 28, scope: !2368)
!8169 = !DILocation(line: 7793, column: 44, scope: !2368)
!8170 = !DILocation(line: 7795, column: 5, scope: !2368)
!8171 = !DILocation(line: 7795, column: 9, scope: !2368)
!8172 = !DILocation(line: 7795, column: 18, scope: !2368)
!8173 = !DILocation(line: 7796, column: 10, scope: !8174)
!8174 = distinct !DILexicalBlock(scope: !2368, file: !1, line: 7796, column: 9)
!8175 = !DILocation(line: 7796, column: 9, scope: !2368)
!8176 = !DILocation(line: 7798, column: 5, scope: !2376)
!8177 = !DILocation(line: 7799, column: 14, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !2376, file: !1, line: 7799, column: 5)
!8179 = !DILocation(line: 7795, column: 25, scope: !2368)
!8180 = !DILocation(line: 7799, column: 27, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8178, file: !1, line: 7799, column: 5)
!8182 = !DILocation(line: 7799, column: 25, scope: !8181)
!8183 = !DILocation(line: 7799, column: 5, scope: !8178)
!8184 = !DILocation(line: 7801, column: 13, scope: !8185)
!8185 = distinct !DILexicalBlock(scope: !8181, file: !1, line: 7800, column: 13)
!8186 = !DILocation(line: 7799, column: 35, scope: !8181)
!8187 = !DILocation(line: 7802, column: 5, scope: !2376)
!8188 = !DILocation(line: 7803, column: 5, scope: !2368)
!8189 = !DILocation(line: 7804, column: 1, scope: !2368)
!8190 = !DILocation(line: 10491, column: 27, scope: !2377)
!8191 = !DILocation(line: 10491, column: 43, scope: !2377)
!8192 = !DILocation(line: 10493, column: 5, scope: !2377)
!8193 = !DILocation(line: 10493, column: 9, scope: !2377)
!8194 = !DILocation(line: 10495, column: 10, scope: !8195)
!8195 = distinct !DILexicalBlock(scope: !2377, file: !1, line: 10495, column: 9)
!8196 = !DILocation(line: 10495, column: 9, scope: !2377)
!8197 = !DILocation(line: 10498, column: 32, scope: !2377)
!8198 = !DILocation(line: 10498, column: 12, scope: !2377)
!8199 = !DILocation(line: 10498, column: 5, scope: !2377)
!8200 = !DILocation(line: 10499, column: 1, scope: !2377)
!8201 = !DILocation(line: 7812, column: 21, scope: !2382)
!8202 = !DILocation(line: 7812, column: 37, scope: !2382)
!8203 = !DILocation(line: 7814, column: 5, scope: !2382)
!8204 = !DILocation(line: 7814, column: 9, scope: !2382)
!8205 = !DILocation(line: 7816, column: 10, scope: !8206)
!8206 = distinct !DILexicalBlock(scope: !2382, file: !1, line: 7816, column: 9)
!8207 = !DILocation(line: 7816, column: 9, scope: !2382)
!8208 = !DILocation(line: 7819, column: 18, scope: !2382)
!8209 = !DILocation(line: 7819, column: 10, scope: !2382)
!8210 = !DILocation(line: 7819, column: 8, scope: !2382)
!8211 = !DILocation(line: 7820, column: 12, scope: !8212)
!8212 = distinct !DILexicalBlock(scope: !2382, file: !1, line: 7820, column: 9)
!8213 = !DILocation(line: 7820, column: 9, scope: !2382)
!8214 = !DILocation(line: 7823, column: 28, scope: !2382)
!8215 = !DILocation(line: 7823, column: 12, scope: !2382)
!8216 = !DILocation(line: 7823, column: 5, scope: !2382)
!8217 = !DILocation(line: 7824, column: 1, scope: !2382)
!8218 = !DILocation(line: 7832, column: 22, scope: !2387)
!8219 = !DILocation(line: 7832, column: 38, scope: !2387)
!8220 = !DILocation(line: 7832, column: 54, scope: !2387)
!8221 = !DILocation(line: 7835, column: 5, scope: !2387)
!8222 = !DILocation(line: 7836, column: 5, scope: !2387)
!8223 = !DILocation(line: 7836, column: 9, scope: !2387)
!8224 = !DILocation(line: 7841, column: 9, scope: !2387)
!8225 = !DILocation(line: 7835, column: 9, scope: !2387)
!8226 = !DILocation(line: 7835, column: 13, scope: !2387)
!8227 = !DILocation(line: 7844, column: 10, scope: !8228)
!8228 = distinct !DILexicalBlock(scope: !2387, file: !1, line: 7844, column: 9)
!8229 = !DILocation(line: 7844, column: 9, scope: !2387)
!8230 = !DILocation(line: 7877, column: 10, scope: !2400)
!8231 = !DILocation(line: 7877, column: 22, scope: !2400)
!8232 = !DILocation(line: 7878, column: 9, scope: !2398)
!8233 = !DILocation(line: 7879, column: 20, scope: !2398)
!8234 = !DILocation(line: 7879, column: 24, scope: !2398)
!8235 = !DILocation(line: 7879, column: 15, scope: !2398)
!8236 = !DILocation(line: 7837, column: 9, scope: !2387)
!8237 = !DILocation(line: 7880, column: 9, scope: !2398)
!8238 = !DILocation(line: 7881, column: 17, scope: !8239)
!8239 = distinct !DILexicalBlock(scope: !2399, file: !1, line: 7881, column: 13)
!8240 = !DILocation(line: 7881, column: 13, scope: !2399)
!8241 = !DILocation(line: 7883, column: 31, scope: !8242)
!8242 = distinct !DILexicalBlock(scope: !8243, file: !1, line: 7882, column: 17)
!8243 = distinct !DILexicalBlock(scope: !8239, file: !1, line: 7881, column: 22)
!8244 = !DILocation(line: 7883, column: 37, scope: !8242)
!8245 = !DILocation(line: 7884, column: 17, scope: !8243)
!8246 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !8247)
!8247 = distinct !DILocation(line: 7885, column: 24, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8243, file: !1, line: 7884, column: 17)
!8249 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !8247)
!8250 = !DILocation(line: 7885, column: 17, scope: !8248)
!8251 = !DILocation(line: 7889, column: 9, scope: !2404)
!8252 = !DILocation(line: 7889, column: 21, scope: !2404)
!8253 = !DILocation(line: 7892, column: 9, scope: !2402)
!8254 = !DILocation(line: 7893, column: 20, scope: !2402)
!8255 = !DILocation(line: 7893, column: 24, scope: !2402)
!8256 = !DILocation(line: 7893, column: 15, scope: !2402)
!8257 = !DILocation(line: 7894, column: 9, scope: !2402)
!8258 = !DILocation(line: 7895, column: 17, scope: !8259)
!8259 = distinct !DILexicalBlock(scope: !2403, file: !1, line: 7895, column: 13)
!8260 = !DILocation(line: 7895, column: 13, scope: !2403)
!8261 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !8262)
!8262 = distinct !DILocation(line: 7896, column: 20, scope: !8259)
!8263 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !8262)
!8264 = !DILocation(line: 7896, column: 13, scope: !8259)
!8265 = !DILocation(line: 7898, column: 14, scope: !8266)
!8266 = distinct !DILexicalBlock(scope: !2403, file: !1, line: 7898, column: 13)
!8267 = !DILocation(line: 7898, column: 26, scope: !8266)
!8268 = !DILocation(line: 7898, column: 49, scope: !8269)
!8269 = !DILexicalBlockFile(scope: !8266, file: !1, discriminator: 1)
!8270 = !DILocation(line: 7898, column: 29, scope: !8266)
!8271 = !DILocation(line: 7898, column: 63, scope: !8266)
!8272 = !DILocation(line: 7898, column: 13, scope: !2403)
!8273 = !DILocation(line: 7899, column: 19, scope: !8274)
!8274 = distinct !DILexicalBlock(scope: !8266, file: !1, line: 7898, column: 68)
!8275 = !DILocation(line: 7899, column: 13, scope: !8274)
!8276 = !DILocation(line: 7900, column: 13, scope: !8274)
!8277 = !DILocation(line: 7908, column: 5, scope: !2387)
!8278 = !DILocation(line: 7909, column: 5, scope: !2387)
!8279 = !DILocation(line: 7910, column: 1, scope: !2387)
!8280 = !DILocation(line: 7922, column: 23, scope: !2405)
!8281 = !DILocation(line: 7922, column: 39, scope: !2405)
!8282 = !DILocation(line: 7924, column: 5, scope: !2405)
!8283 = !DILocation(line: 7925, column: 5, scope: !2405)
!8284 = !DILocation(line: 7924, column: 9, scope: !2405)
!8285 = !DILocation(line: 7924, column: 13, scope: !2405)
!8286 = !DILocation(line: 7925, column: 11, scope: !2405)
!8287 = !DILocation(line: 7926, column: 10, scope: !8288)
!8288 = distinct !DILexicalBlock(scope: !2405, file: !1, line: 7926, column: 9)
!8289 = !DILocation(line: 7926, column: 9, scope: !2405)
!8290 = !DILocation(line: 7930, column: 5, scope: !2414)
!8291 = !DILocation(line: 7931, column: 17, scope: !2414)
!8292 = !DILocation(line: 7931, column: 21, scope: !2414)
!8293 = !DILocation(line: 7931, column: 26, scope: !2414)
!8294 = !DILocation(line: 7931, column: 11, scope: !2414)
!8295 = !DILocation(line: 7924, column: 18, scope: !2405)
!8296 = !DILocation(line: 7932, column: 5, scope: !2414)
!8297 = !DILocation(line: 7934, column: 13, scope: !8298)
!8298 = distinct !DILexicalBlock(scope: !2405, file: !1, line: 7934, column: 9)
!8299 = !DILocation(line: 7934, column: 9, scope: !2405)
!8300 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !8301)
!8301 = distinct !DILocation(line: 7935, column: 16, scope: !8298)
!8302 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !8301)
!8303 = !DILocation(line: 7935, column: 9, scope: !8298)
!8304 = !DILocation(line: 7937, column: 5, scope: !2405)
!8305 = !DILocation(line: 7938, column: 1, scope: !2405)
!8306 = !DILocation(line: 7948, column: 23, scope: !2419)
!8307 = !DILocation(line: 7948, column: 39, scope: !2419)
!8308 = !DILocation(line: 7950, column: 5, scope: !2419)
!8309 = !DILocation(line: 7956, column: 5, scope: !2419)
!8310 = !DILocation(line: 7950, column: 9, scope: !2419)
!8311 = !DILocation(line: 7950, column: 13, scope: !2419)
!8312 = !DILocation(line: 7956, column: 15, scope: !2419)
!8313 = !DILocation(line: 7957, column: 10, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !2419, file: !1, line: 7957, column: 9)
!8315 = !DILocation(line: 7957, column: 9, scope: !2419)
!8316 = !DILocation(line: 7961, column: 13, scope: !2419)
!8317 = !DILocation(line: 7961, column: 5, scope: !2419)
!8318 = !DILocation(line: 7962, column: 17, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !2419, file: !1, line: 7961, column: 18)
!8320 = !DILocation(line: 7962, column: 29, scope: !8319)
!8321 = !DILocation(line: 7963, column: 17, scope: !8319)
!8322 = !DILocation(line: 7963, column: 29, scope: !8319)
!8323 = !DILocation(line: 7964, column: 17, scope: !8319)
!8324 = !DILocation(line: 7964, column: 29, scope: !8319)
!8325 = !DILocation(line: 7969, column: 25, scope: !2419)
!8326 = !DILocation(line: 7969, column: 11, scope: !2419)
!8327 = !DILocation(line: 7954, column: 11, scope: !2419)
!8328 = !DILocation(line: 7973, column: 9, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !2419, file: !1, line: 7973, column: 9)
!8330 = !DILocation(line: 7973, column: 9, scope: !2419)
!8331 = !DILocation(line: 7978, column: 5, scope: !2429)
!8332 = !DILocation(line: 7982, column: 17, scope: !2429)
!8333 = !DILocation(line: 7982, column: 26, scope: !2429)
!8334 = !DILocation(line: 7982, column: 11, scope: !2429)
!8335 = !DILocation(line: 7954, column: 16, scope: !2419)
!8336 = !DILocation(line: 7984, column: 5, scope: !2429)
!8337 = !DILocation(line: 7985, column: 13, scope: !8338)
!8338 = distinct !DILexicalBlock(scope: !2419, file: !1, line: 7985, column: 9)
!8339 = !DILocation(line: 7985, column: 9, scope: !2419)
!8340 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !8341)
!8341 = distinct !DILocation(line: 7986, column: 16, scope: !8338)
!8342 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !8341)
!8343 = !DILocation(line: 7986, column: 9, scope: !8338)
!8344 = !DILocation(line: 7989, column: 12, scope: !2419)
!8345 = !DILocation(line: 7989, column: 5, scope: !2419)
!8346 = !DILocation(line: 7993, column: 1, scope: !2419)
!8347 = !DILocation(line: 8001, column: 22, scope: !2430)
!8348 = !DILocation(line: 8001, column: 38, scope: !2430)
!8349 = !DILocation(line: 8003, column: 5, scope: !2430)
!8350 = !DILocation(line: 8005, column: 5, scope: !2430)
!8351 = !DILocation(line: 8003, column: 9, scope: !2430)
!8352 = !DILocation(line: 8003, column: 13, scope: !2430)
!8353 = !DILocation(line: 8006, column: 10, scope: !8354)
!8354 = distinct !DILexicalBlock(scope: !2430, file: !1, line: 8006, column: 9)
!8355 = !DILocation(line: 8006, column: 9, scope: !2430)
!8356 = !DILocation(line: 8008, column: 9, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !2430, file: !1, line: 8008, column: 9)
!8358 = !DILocation(line: 8008, column: 14, scope: !8357)
!8359 = !DILocation(line: 8008, column: 9, scope: !2430)
!8360 = !DILocation(line: 8009, column: 9, scope: !8361)
!8361 = distinct !DILexicalBlock(scope: !8357, file: !1, line: 8008, column: 19)
!8362 = !DILocation(line: 8009, column: 15, scope: !8361)
!8363 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !8364)
!8364 = distinct !DILocation(line: 8010, column: 16, scope: !8361)
!8365 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !8364)
!8366 = !DILocation(line: 8010, column: 9, scope: !8361)
!8367 = !DILocation(line: 8012, column: 54, scope: !2430)
!8368 = !DILocation(line: 8012, column: 14, scope: !2430)
!8369 = !DILocation(line: 8005, column: 15, scope: !2430)
!8370 = !DILocation(line: 8012, column: 12, scope: !2430)
!8371 = !DILocation(line: 8013, column: 16, scope: !8372)
!8372 = distinct !DILexicalBlock(scope: !2430, file: !1, line: 8013, column: 9)
!8373 = !DILocation(line: 8013, column: 9, scope: !2430)
!8374 = !DILocation(line: 8019, column: 5, scope: !2439)
!8375 = !DILocation(line: 8020, column: 14, scope: !2439)
!8376 = !DILocation(line: 8020, column: 18, scope: !2439)
!8377 = !DILocation(line: 8020, column: 45, scope: !2439)
!8378 = !DILocation(line: 8020, column: 9, scope: !2439)
!8379 = !DILocation(line: 8004, column: 16, scope: !2430)
!8380 = !DILocation(line: 8021, column: 5, scope: !2439)
!8381 = !DILocation(line: 8022, column: 11, scope: !2443)
!8382 = !DILocation(line: 8022, column: 9, scope: !2430)
!8383 = !DILocation(line: 8023, column: 9, scope: !8384)
!8384 = !DILexicalBlockFile(scope: !2441, file: !1, discriminator: 1)
!8385 = !DILocation(line: 8023, column: 9, scope: !8386)
!8386 = distinct !DILexicalBlock(scope: !2441, file: !1, line: 8023, column: 9)
!8387 = !DILocation(line: 8023, column: 9, scope: !2441)
!8388 = !DILocation(line: 8023, column: 9, scope: !8389)
!8389 = !DILexicalBlockFile(scope: !8386, file: !1, discriminator: 3)
!8390 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !8391)
!8391 = distinct !DILocation(line: 8024, column: 16, scope: !2442)
!8392 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !8391)
!8393 = !DILocation(line: 8024, column: 9, scope: !2442)
!8394 = !DILocation(line: 8026, column: 14, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !2430, file: !1, line: 8026, column: 9)
!8396 = !DILocation(line: 8026, column: 11, scope: !8395)
!8397 = !DILocation(line: 8026, column: 9, scope: !2430)
!8398 = !DILocation(line: 8027, column: 9, scope: !8395)
!8399 = !DILocation(line: 8028, column: 12, scope: !2430)
!8400 = !DILocation(line: 8028, column: 5, scope: !2430)
!8401 = !DILocation(line: 8029, column: 1, scope: !2430)
!8402 = !DILocation(line: 8100, column: 23, scope: !2444)
!8403 = !DILocation(line: 8100, column: 39, scope: !2444)
!8404 = !DILocation(line: 8102, column: 5, scope: !2444)
!8405 = !DILocation(line: 8104, column: 5, scope: !2444)
!8406 = !DILocation(line: 8105, column: 5, scope: !2444)
!8407 = !DILocation(line: 8106, column: 5, scope: !2444)
!8408 = !DILocation(line: 8102, column: 9, scope: !2444)
!8409 = !DILocation(line: 8104, column: 15, scope: !2444)
!8410 = !DILocation(line: 8108, column: 10, scope: !8411)
!8411 = distinct !DILexicalBlock(scope: !2444, file: !1, line: 8108, column: 9)
!8412 = !DILocation(line: 8108, column: 9, scope: !2444)
!8413 = !DILocation(line: 8110, column: 27, scope: !8414)
!8414 = distinct !DILexicalBlock(scope: !2444, file: !1, line: 8110, column: 9)
!8415 = !DILocation(line: 8110, column: 10, scope: !8414)
!8416 = !DILocation(line: 8110, column: 9, scope: !2444)
!8417 = !DILocation(line: 8111, column: 25, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !8414, file: !1, line: 8110, column: 33)
!8419 = !DILocation(line: 8111, column: 9, scope: !8418)
!8420 = !DILocation(line: 8113, column: 9, scope: !8418)
!8421 = !DILocation(line: 8115, column: 27, scope: !2444)
!8422 = !DILocation(line: 8115, column: 11, scope: !2444)
!8423 = !DILocation(line: 8102, column: 13, scope: !2444)
!8424 = !DILocation(line: 8117, column: 31, scope: !8425)
!8425 = distinct !DILexicalBlock(scope: !2444, file: !1, line: 8117, column: 9)
!8426 = !DILocation(line: 8105, column: 19, scope: !2444)
!8427 = !DILocation(line: 8106, column: 16, scope: !2444)
!8428 = !DILocation(line: 8117, column: 9, scope: !8425)
!8429 = !DILocation(line: 8117, column: 57, scope: !8425)
!8430 = !DILocation(line: 8117, column: 9, scope: !2444)
!8431 = !DILocation(line: 8120, column: 5, scope: !2455)
!8432 = !DILocation(line: 8121, column: 15, scope: !2455)
!8433 = !DILocation(line: 8121, column: 19, scope: !2455)
!8434 = !DILocation(line: 8121, column: 9, scope: !2455)
!8435 = !DILocation(line: 8103, column: 16, scope: !2444)
!8436 = !DILocation(line: 8122, column: 5, scope: !2455)
!8437 = !DILocation(line: 8124, column: 17, scope: !2444)
!8438 = !DILocation(line: 8124, column: 22, scope: !2444)
!8439 = !DILocation(line: 8078, column: 43, scope: !2481, inlinedAt: !8440)
!8440 = distinct !DILocation(line: 8124, column: 5, scope: !2444)
!8441 = !DILocation(line: 8078, column: 52, scope: !2481, inlinedAt: !8440)
!8442 = !DILocation(line: 8081, column: 5, scope: !2481, inlinedAt: !8440)
!8443 = !DILocation(line: 8080, column: 9, scope: !2481, inlinedAt: !8440)
!8444 = !DILocation(line: 8082, column: 19, scope: !8445, inlinedAt: !8440)
!8445 = distinct !DILexicalBlock(scope: !8446, file: !1, line: 8082, column: 5)
!8446 = distinct !DILexicalBlock(scope: !2481, file: !1, line: 8082, column: 5)
!8447 = !DILocation(line: 8082, column: 5, scope: !8446, inlinedAt: !8440)
!8448 = !DILocation(line: 8083, column: 27, scope: !8449, inlinedAt: !8440)
!8449 = distinct !DILexicalBlock(scope: !8445, file: !1, line: 8082, column: 31)
!8450 = !DILocation(line: 8124, column: 5, scope: !2444)
!8451 = !DILocation(line: 8083, column: 9, scope: !8449, inlinedAt: !8440)
!8452 = !DILocation(line: 8085, column: 15, scope: !2481, inlinedAt: !8440)
!8453 = !DILocation(line: 8085, column: 5, scope: !2481, inlinedAt: !8440)
!8454 = !DILocation(line: 8125, column: 11, scope: !8455)
!8455 = distinct !DILexicalBlock(scope: !2444, file: !1, line: 8125, column: 9)
!8456 = !DILocation(line: 8125, column: 9, scope: !2444)
!8457 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !8458)
!8458 = distinct !DILocation(line: 8126, column: 16, scope: !8455)
!8459 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !8458)
!8460 = !DILocation(line: 8126, column: 9, scope: !8455)
!8461 = !DILocation(line: 8128, column: 12, scope: !2444)
!8462 = !DILocation(line: 8128, column: 5, scope: !2444)
!8463 = !DILocation(line: 8129, column: 1, scope: !2444)
!8464 = !DILocation(line: 8139, column: 23, scope: !2489)
!8465 = !DILocation(line: 8139, column: 39, scope: !2489)
!8466 = !DILocation(line: 8141, column: 5, scope: !2489)
!8467 = !DILocation(line: 8142, column: 5, scope: !2489)
!8468 = !DILocation(line: 8144, column: 5, scope: !2489)
!8469 = !DILocation(line: 8141, column: 9, scope: !2489)
!8470 = !DILocation(line: 8141, column: 13, scope: !2489)
!8471 = !DILocation(line: 8142, column: 11, scope: !2489)
!8472 = !DILocation(line: 8145, column: 10, scope: !8473)
!8473 = distinct !DILexicalBlock(scope: !2489, file: !1, line: 8145, column: 9)
!8474 = !DILocation(line: 8145, column: 9, scope: !2489)
!8475 = !DILocation(line: 8148, column: 9, scope: !8476)
!8476 = distinct !DILexicalBlock(scope: !2489, file: !1, line: 8148, column: 9)
!8477 = !DILocation(line: 8148, column: 14, scope: !8476)
!8478 = !DILocation(line: 8148, column: 9, scope: !2489)
!8479 = !DILocation(line: 8149, column: 9, scope: !8480)
!8480 = distinct !DILexicalBlock(scope: !8476, file: !1, line: 8148, column: 19)
!8481 = !DILocation(line: 8149, column: 15, scope: !8480)
!8482 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !8483)
!8483 = distinct !DILocation(line: 8150, column: 16, scope: !8480)
!8484 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !8483)
!8485 = !DILocation(line: 8150, column: 9, scope: !8480)
!8486 = !DILocation(line: 8152, column: 54, scope: !2489)
!8487 = !DILocation(line: 8163, column: 9, scope: !8488)
!8488 = !DILexicalBlockFile(scope: !2501, file: !1, discriminator: 1)
!8489 = !DILocation(line: 8144, column: 15, scope: !2489)
!8490 = !DILocation(line: 8152, column: 12, scope: !2489)
!8491 = !DILocation(line: 8153, column: 16, scope: !8492)
!8492 = distinct !DILexicalBlock(scope: !2489, file: !1, line: 8153, column: 9)
!8493 = !DILocation(line: 8153, column: 9, scope: !2489)
!8494 = !DILocation(line: 8159, column: 5, scope: !2499)
!8495 = !DILocation(line: 8160, column: 15, scope: !2499)
!8496 = !DILocation(line: 8160, column: 19, scope: !2499)
!8497 = !DILocation(line: 8160, column: 46, scope: !2499)
!8498 = !DILocation(line: 8160, column: 52, scope: !2499)
!8499 = !DILocation(line: 8160, column: 9, scope: !2499)
!8500 = !DILocation(line: 8143, column: 16, scope: !2489)
!8501 = !DILocation(line: 8161, column: 5, scope: !2499)
!8502 = !DILocation(line: 8162, column: 11, scope: !2503)
!8503 = !DILocation(line: 8162, column: 9, scope: !2489)
!8504 = !DILocation(line: 8163, column: 9, scope: !8505)
!8505 = distinct !DILexicalBlock(scope: !2501, file: !1, line: 8163, column: 9)
!8506 = !DILocation(line: 8163, column: 9, scope: !2501)
!8507 = !DILocation(line: 8163, column: 9, scope: !8508)
!8508 = !DILexicalBlockFile(scope: !8505, file: !1, discriminator: 3)
!8509 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !8510)
!8510 = distinct !DILocation(line: 8164, column: 16, scope: !2502)
!8511 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !8510)
!8512 = !DILocation(line: 8164, column: 9, scope: !2502)
!8513 = !DILocation(line: 8166, column: 14, scope: !8514)
!8514 = distinct !DILexicalBlock(scope: !2489, file: !1, line: 8166, column: 9)
!8515 = !DILocation(line: 8166, column: 11, scope: !8514)
!8516 = !DILocation(line: 8166, column: 9, scope: !2489)
!8517 = !DILocation(line: 8167, column: 9, scope: !8514)
!8518 = !DILocation(line: 8168, column: 12, scope: !2489)
!8519 = !DILocation(line: 8169, column: 1, scope: !2489)
!8520 = !DILocation(line: 8177, column: 23, scope: !2504)
!8521 = !DILocation(line: 8177, column: 39, scope: !2504)
!8522 = !DILocation(line: 8179, column: 5, scope: !2504)
!8523 = !DILocation(line: 8180, column: 5, scope: !2504)
!8524 = !DILocation(line: 8179, column: 15, scope: !2504)
!8525 = !DILocation(line: 8180, column: 9, scope: !2504)
!8526 = !DILocation(line: 8183, column: 10, scope: !8527)
!8527 = distinct !DILexicalBlock(scope: !2504, file: !1, line: 8183, column: 9)
!8528 = !DILocation(line: 8183, column: 9, scope: !2504)
!8529 = !DILocation(line: 8189, column: 16, scope: !2504)
!8530 = !{!8531, !3877, i64 16}
!8531 = !{!"bufferinfo", !3871, i64 0, !3871, i64 8, !3877, i64 16, !3877, i64 24, !3882, i64 32, !3882, i64 36, !3871, i64 40, !3871, i64 48, !3871, i64 56, !3871, i64 64, !3871, i64 72}
!8532 = !DILocation(line: 8181, column: 22, scope: !2504)
!8533 = !DILocation(line: 8190, column: 5, scope: !2513)
!8534 = !DILocation(line: 8196, column: 18, scope: !2513)
!8535 = !DILocation(line: 8196, column: 27, scope: !2513)
!8536 = !{!8531, !3871, i64 0}
!8537 = !DILocation(line: 8196, column: 12, scope: !2513)
!8538 = !DILocation(line: 8181, column: 16, scope: !2504)
!8539 = !DILocation(line: 8198, column: 5, scope: !2513)
!8540 = !DILocation(line: 8199, column: 5, scope: !2504)
!8541 = !DILocation(line: 8200, column: 14, scope: !8542)
!8542 = distinct !DILexicalBlock(scope: !2504, file: !1, line: 8200, column: 9)
!8543 = !DILocation(line: 8200, column: 9, scope: !2504)
!8544 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !8545)
!8545 = distinct !DILocation(line: 8201, column: 16, scope: !8542)
!8546 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !8545)
!8547 = !DILocation(line: 8201, column: 9, scope: !8542)
!8548 = !DILocation(line: 8202, column: 12, scope: !2504)
!8549 = !DILocation(line: 8202, column: 5, scope: !2504)
!8550 = !DILocation(line: 8203, column: 1, scope: !2504)
!8551 = !DILocation(line: 8497, column: 24, scope: !2514)
!8552 = !DILocation(line: 8497, column: 40, scope: !2514)
!8553 = !DILocation(line: 8499, column: 5, scope: !2514)
!8554 = !DILocation(line: 8501, column: 5, scope: !2514)
!8555 = !DILocation(line: 8502, column: 5, scope: !2514)
!8556 = !DILocation(line: 8503, column: 5, scope: !2514)
!8557 = !DILocation(line: 8499, column: 9, scope: !2514)
!8558 = !DILocation(line: 8501, column: 15, scope: !2514)
!8559 = !DILocation(line: 8504, column: 10, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !2514, file: !1, line: 8504, column: 9)
!8561 = !DILocation(line: 8504, column: 9, scope: !2514)
!8562 = !DILocation(line: 8506, column: 27, scope: !8563)
!8563 = distinct !DILexicalBlock(scope: !2514, file: !1, line: 8506, column: 9)
!8564 = !DILocation(line: 8506, column: 10, scope: !8563)
!8565 = !DILocation(line: 8506, column: 9, scope: !2514)
!8566 = !DILocation(line: 8507, column: 25, scope: !8567)
!8567 = distinct !DILexicalBlock(scope: !8563, file: !1, line: 8506, column: 33)
!8568 = !DILocation(line: 8507, column: 9, scope: !8567)
!8569 = !DILocation(line: 8509, column: 9, scope: !8567)
!8570 = !DILocation(line: 8511, column: 27, scope: !2514)
!8571 = !DILocation(line: 8511, column: 11, scope: !2514)
!8572 = !DILocation(line: 8499, column: 13, scope: !2514)
!8573 = !DILocation(line: 8513, column: 31, scope: !8574)
!8574 = distinct !DILexicalBlock(scope: !2514, file: !1, line: 8513, column: 9)
!8575 = !DILocation(line: 8502, column: 19, scope: !2514)
!8576 = !DILocation(line: 8503, column: 16, scope: !2514)
!8577 = !DILocation(line: 8513, column: 9, scope: !8574)
!8578 = !DILocation(line: 8513, column: 55, scope: !8574)
!8579 = !DILocation(line: 8513, column: 9, scope: !2514)
!8580 = !DILocation(line: 8517, column: 5, scope: !2525)
!8581 = !DILocation(line: 8518, column: 18, scope: !2525)
!8582 = !DILocation(line: 8518, column: 22, scope: !2525)
!8583 = !DILocation(line: 8518, column: 11, scope: !2525)
!8584 = !DILocation(line: 8500, column: 16, scope: !2514)
!8585 = !DILocation(line: 8519, column: 5, scope: !2525)
!8586 = !DILocation(line: 8521, column: 17, scope: !2514)
!8587 = !DILocation(line: 8521, column: 22, scope: !2514)
!8588 = !DILocation(line: 8078, column: 43, scope: !2481, inlinedAt: !8589)
!8589 = distinct !DILocation(line: 8521, column: 5, scope: !2514)
!8590 = !DILocation(line: 8078, column: 52, scope: !2481, inlinedAt: !8589)
!8591 = !DILocation(line: 8081, column: 5, scope: !2481, inlinedAt: !8589)
!8592 = !DILocation(line: 8080, column: 9, scope: !2481, inlinedAt: !8589)
!8593 = !DILocation(line: 8082, column: 19, scope: !8445, inlinedAt: !8589)
!8594 = !DILocation(line: 8082, column: 5, scope: !8446, inlinedAt: !8589)
!8595 = !DILocation(line: 8083, column: 27, scope: !8449, inlinedAt: !8589)
!8596 = !DILocation(line: 8521, column: 5, scope: !2514)
!8597 = !DILocation(line: 8083, column: 9, scope: !8449, inlinedAt: !8589)
!8598 = !DILocation(line: 8085, column: 15, scope: !2481, inlinedAt: !8589)
!8599 = !DILocation(line: 8085, column: 5, scope: !2481, inlinedAt: !8589)
!8600 = !DILocation(line: 8522, column: 13, scope: !8601)
!8601 = distinct !DILexicalBlock(scope: !2514, file: !1, line: 8522, column: 9)
!8602 = !DILocation(line: 8522, column: 9, scope: !2514)
!8603 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !8604)
!8604 = distinct !DILocation(line: 8523, column: 16, scope: !8601)
!8605 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !8604)
!8606 = !DILocation(line: 8523, column: 9, scope: !8601)
!8607 = !DILocation(line: 8525, column: 12, scope: !2514)
!8608 = !DILocation(line: 8525, column: 5, scope: !2514)
!8609 = !DILocation(line: 8526, column: 1, scope: !2514)
!8610 = !DILocation(line: 8536, column: 24, scope: !2526)
!8611 = !DILocation(line: 8536, column: 40, scope: !2526)
!8612 = !DILocation(line: 8538, column: 5, scope: !2526)
!8613 = !DILocation(line: 8539, column: 5, scope: !2526)
!8614 = !DILocation(line: 8540, column: 5, scope: !2526)
!8615 = !DILocation(line: 8538, column: 15, scope: !2526)
!8616 = !DILocation(line: 8539, column: 9, scope: !2526)
!8617 = !DILocation(line: 8540, column: 11, scope: !2526)
!8618 = !DILocation(line: 8543, column: 10, scope: !8619)
!8619 = distinct !DILexicalBlock(scope: !2526, file: !1, line: 8543, column: 9)
!8620 = !DILocation(line: 8543, column: 9, scope: !2526)
!8621 = !DILocation(line: 8550, column: 5, scope: !2535)
!8622 = !DILocation(line: 8551, column: 19, scope: !2535)
!8623 = !DILocation(line: 8551, column: 28, scope: !2535)
!8624 = !DILocation(line: 8551, column: 46, scope: !2535)
!8625 = !DILocation(line: 8551, column: 51, scope: !2535)
!8626 = !DILocation(line: 8551, column: 12, scope: !2535)
!8627 = !DILocation(line: 8541, column: 16, scope: !2526)
!8628 = !DILocation(line: 8552, column: 5, scope: !2535)
!8629 = !DILocation(line: 8553, column: 5, scope: !2526)
!8630 = !DILocation(line: 8554, column: 14, scope: !8631)
!8631 = distinct !DILexicalBlock(scope: !2526, file: !1, line: 8554, column: 9)
!8632 = !DILocation(line: 8554, column: 9, scope: !2526)
!8633 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !8634)
!8634 = distinct !DILocation(line: 8555, column: 16, scope: !8631)
!8635 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !8634)
!8636 = !DILocation(line: 8555, column: 9, scope: !8631)
!8637 = !DILocation(line: 8556, column: 12, scope: !2526)
!8638 = !DILocation(line: 8556, column: 5, scope: !2526)
!8639 = !DILocation(line: 8557, column: 1, scope: !2526)
!8640 = !DILocation(line: 8213, column: 26, scope: !2536)
!8641 = !DILocation(line: 8213, column: 42, scope: !2536)
!8642 = !DILocation(line: 8213, column: 58, scope: !2536)
!8643 = !DILocation(line: 8215, column: 5, scope: !2536)
!8644 = !DILocation(line: 8217, column: 5, scope: !2536)
!8645 = !DILocation(line: 8316, column: 5, scope: !2536)
!8646 = !DILocation(line: 8317, column: 5, scope: !2536)
!8647 = !DILocation(line: 8215, column: 9, scope: !2536)
!8648 = !DILocation(line: 8215, column: 13, scope: !2536)
!8649 = !DILocation(line: 8316, column: 16, scope: !2536)
!8650 = !DILocation(line: 8317, column: 15, scope: !2536)
!8651 = !DILocation(line: 8320, column: 10, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !2536, file: !1, line: 8320, column: 9)
!8653 = !DILocation(line: 8320, column: 9, scope: !2536)
!8654 = !DILocation(line: 8324, column: 9, scope: !2550)
!8655 = !DILocation(line: 8324, column: 16, scope: !2550)
!8656 = !DILocation(line: 8324, column: 9, scope: !2536)
!8657 = !DILocation(line: 8325, column: 9, scope: !2548)
!8658 = !DILocation(line: 8326, column: 24, scope: !2548)
!8659 = !DILocation(line: 8326, column: 29, scope: !2548)
!8660 = !DILocation(line: 8326, column: 39, scope: !2548)
!8661 = !DILocation(line: 8326, column: 15, scope: !2548)
!8662 = !DILocation(line: 8216, column: 16, scope: !2536)
!8663 = !DILocation(line: 8327, column: 9, scope: !2548)
!8664 = !DILocation(line: 8328, column: 17, scope: !8665)
!8665 = distinct !DILexicalBlock(scope: !2549, file: !1, line: 8328, column: 13)
!8666 = !DILocation(line: 8328, column: 13, scope: !2549)
!8667 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !8668)
!8668 = distinct !DILocation(line: 8329, column: 20, scope: !8665)
!8669 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !8668)
!8670 = !DILocation(line: 8329, column: 13, scope: !8665)
!8671 = !DILocation(line: 8330, column: 16, scope: !2549)
!8672 = !DILocation(line: 8330, column: 9, scope: !2549)
!8673 = !DILocation(line: 1005, column: 24, scope: !2415, inlinedAt: !8674)
!8674 = distinct !DILocation(line: 8333, column: 10, scope: !8675)
!8675 = distinct !DILexicalBlock(scope: !2536, file: !1, line: 8333, column: 9)
!8676 = !DILocation(line: 1005, column: 35, scope: !2415, inlinedAt: !8674)
!8677 = !DILocation(line: 1008, column: 23, scope: !2415, inlinedAt: !8674)
!8678 = !DILocation(line: 1008, column: 21, scope: !2415, inlinedAt: !8674)
!8679 = !DILocation(line: 1012, column: 9, scope: !8680, inlinedAt: !8674)
!8680 = distinct !DILexicalBlock(scope: !2415, file: !1, line: 1012, column: 9)
!8681 = !DILocation(line: 8333, column: 9, scope: !2536)
!8682 = !DILocation(line: 8335, column: 5, scope: !2552)
!8683 = !DILocation(line: 8336, column: 20, scope: !2552)
!8684 = !DILocation(line: 8336, column: 25, scope: !2552)
!8685 = !DILocation(line: 8336, column: 38, scope: !2552)
!8686 = !DILocation(line: 8217, column: 11, scope: !2536)
!8687 = !DILocation(line: 8336, column: 11, scope: !2552)
!8688 = !DILocation(line: 8337, column: 5, scope: !2552)
!8689 = !DILocation(line: 8338, column: 13, scope: !8690)
!8690 = distinct !DILexicalBlock(scope: !2536, file: !1, line: 8338, column: 9)
!8691 = !DILocation(line: 8338, column: 9, scope: !2536)
!8692 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !8693)
!8693 = distinct !DILocation(line: 8339, column: 16, scope: !8690)
!8694 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !8693)
!8695 = !DILocation(line: 8339, column: 9, scope: !8690)
!8696 = !DILocation(line: 8340, column: 12, scope: !2536)
!8697 = !DILocation(line: 8340, column: 5, scope: !2536)
!8698 = !DILocation(line: 8342, column: 1, scope: !2536)
!8699 = !DILocation(line: 8351, column: 23, scope: !2553)
!8700 = !DILocation(line: 8351, column: 39, scope: !2553)
!8701 = !DILocation(line: 8353, column: 5, scope: !2553)
!8702 = !DILocation(line: 8354, column: 5, scope: !2553)
!8703 = !DILocation(line: 8353, column: 9, scope: !2553)
!8704 = !DILocation(line: 8356, column: 10, scope: !8705)
!8705 = distinct !DILexicalBlock(scope: !2553, file: !1, line: 8356, column: 9)
!8706 = !DILocation(line: 8356, column: 9, scope: !2553)
!8707 = !DILocation(line: 8358, column: 5, scope: !2561)
!8708 = !DILocation(line: 8359, column: 17, scope: !2561)
!8709 = !DILocation(line: 8354, column: 17, scope: !2553)
!8710 = !DILocation(line: 8359, column: 11, scope: !2561)
!8711 = !DILocation(line: 517, column: 1, scope: !947, inlinedAt: !8712)
!8712 = distinct !DILocation(line: 8359, column: 11, scope: !2561)
!8713 = !DILocation(line: 519, column: 10, scope: !947, inlinedAt: !8712)
!8714 = !DILocation(line: 8355, column: 9, scope: !2553)
!8715 = !DILocation(line: 8360, column: 5, scope: !2561)
!8716 = !DILocation(line: 8361, column: 13, scope: !8717)
!8717 = distinct !DILexicalBlock(scope: !2553, file: !1, line: 8361, column: 9)
!8718 = !DILocation(line: 8361, column: 9, scope: !2553)
!8719 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !8720)
!8720 = distinct !DILocation(line: 8365, column: 16, scope: !8721)
!8721 = distinct !DILexicalBlock(scope: !8717, file: !1, line: 8361, column: 19)
!8722 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !8720)
!8723 = !DILocation(line: 8365, column: 9, scope: !8721)
!8724 = !DILocation(line: 8369, column: 12, scope: !2553)
!8725 = !DILocation(line: 8369, column: 5, scope: !2553)
!8726 = !DILocation(line: 8370, column: 1, scope: !2553)
!8727 = !DILocation(line: 8378, column: 24, scope: !2562)
!8728 = !DILocation(line: 8378, column: 40, scope: !2562)
!8729 = !DILocation(line: 8380, column: 5, scope: !2562)
!8730 = !DILocation(line: 8380, column: 9, scope: !2562)
!8731 = !DILocation(line: 8381, column: 10, scope: !8732)
!8732 = distinct !DILexicalBlock(scope: !2562, file: !1, line: 8381, column: 9)
!8733 = !DILocation(line: 8381, column: 9, scope: !2562)
!8734 = !DILocation(line: 8385, column: 35, scope: !2562)
!8735 = !DILocation(line: 8385, column: 28, scope: !2562)
!8736 = !DILocation(line: 8385, column: 12, scope: !2562)
!8737 = !DILocation(line: 8385, column: 5, scope: !2562)
!8738 = !DILocation(line: 8386, column: 1, scope: !2562)
!8739 = !DILocation(line: 8394, column: 22, scope: !2567)
!8740 = !DILocation(line: 8394, column: 38, scope: !2567)
!8741 = !DILocation(line: 8396, column: 5, scope: !2567)
!8742 = !DILocation(line: 8396, column: 9, scope: !2567)
!8743 = !DILocation(line: 8428, column: 5, scope: !2575)
!8744 = !DILocation(line: 8429, column: 17, scope: !2575)
!8745 = !DILocation(line: 8429, column: 11, scope: !2575)
!8746 = !DILocation(line: 8402, column: 9, scope: !2567)
!8747 = !DILocation(line: 8430, column: 5, scope: !2575)
!8748 = !DILocation(line: 8432, column: 13, scope: !2579)
!8749 = !DILocation(line: 8432, column: 18, scope: !2579)
!8750 = !DILocation(line: 8458, column: 42, scope: !2567)
!8751 = !DILocation(line: 8432, column: 21, scope: !8752)
!8752 = !DILexicalBlockFile(scope: !2579, file: !1, discriminator: 1)
!8753 = !DILocation(line: 8432, column: 27, scope: !2579)
!8754 = !DILocation(line: 8432, column: 9, scope: !2567)
!8755 = !DILocation(line: 8435, column: 9, scope: !2577)
!8756 = !DILocation(line: 8436, column: 15, scope: !2577)
!8757 = !DILocation(line: 8437, column: 9, scope: !2577)
!8758 = !DILocation(line: 8439, column: 17, scope: !8759)
!8759 = distinct !DILexicalBlock(scope: !2578, file: !1, line: 8439, column: 13)
!8760 = !DILocation(line: 8439, column: 13, scope: !2578)
!8761 = !DILocation(line: 8440, column: 37, scope: !8762)
!8762 = distinct !DILexicalBlock(scope: !8763, file: !1, line: 8440, column: 17)
!8763 = distinct !DILexicalBlock(scope: !8759, file: !1, line: 8439, column: 23)
!8764 = !DILocation(line: 8440, column: 17, scope: !8762)
!8765 = !DILocation(line: 8440, column: 54, scope: !8762)
!8766 = !DILocation(line: 8440, column: 17, scope: !8763)
!8767 = !DILocation(line: 8441, column: 23, scope: !8768)
!8768 = distinct !DILexicalBlock(scope: !8762, file: !1, line: 8440, column: 59)
!8769 = !DILocation(line: 8441, column: 17, scope: !8768)
!8770 = !DILocation(line: 8442, column: 23, scope: !8768)
!8771 = !DILocation(line: 8442, column: 17, scope: !8768)
!8772 = !DILocation(line: 8443, column: 17, scope: !8768)
!8773 = !DILocation(line: 8445, column: 37, scope: !8774)
!8774 = distinct !DILexicalBlock(scope: !8763, file: !1, line: 8445, column: 17)
!8775 = !DILocation(line: 8445, column: 17, scope: !8774)
!8776 = !DILocation(line: 8445, column: 54, scope: !8774)
!8777 = !DILocation(line: 8445, column: 17, scope: !8763)
!8778 = !DILocation(line: 8446, column: 23, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8774, file: !1, line: 8445, column: 59)
!8780 = !DILocation(line: 8446, column: 17, scope: !8779)
!8781 = !DILocation(line: 8447, column: 23, scope: !8779)
!8782 = !DILocation(line: 8447, column: 17, scope: !8779)
!8783 = !DILocation(line: 8448, column: 17, scope: !8779)
!8784 = !DILocation(line: 8456, column: 35, scope: !8785)
!8785 = distinct !DILexicalBlock(scope: !2567, file: !1, line: 8455, column: 9)
!8786 = !DILocation(line: 8456, column: 16, scope: !8785)
!8787 = !DILocation(line: 8456, column: 9, scope: !8785)
!8788 = !DILocation(line: 8458, column: 34, scope: !2567)
!8789 = !DILocation(line: 8458, column: 12, scope: !2567)
!8790 = !DILocation(line: 8458, column: 5, scope: !2567)
!8791 = !DILocation(line: 8459, column: 1, scope: !2567)
!8792 = !DILocation(line: 8471, column: 23, scope: !2580)
!8793 = !DILocation(line: 8471, column: 39, scope: !2580)
!8794 = !DILocation(line: 8474, column: 5, scope: !2580)
!8795 = !DILocation(line: 8474, column: 9, scope: !2580)
!8796 = !DILocation(line: 8477, column: 13, scope: !2580)
!8797 = !DILocation(line: 8473, column: 9, scope: !2580)
!8798 = !DILocation(line: 8478, column: 15, scope: !8799)
!8799 = distinct !DILexicalBlock(scope: !2580, file: !1, line: 8478, column: 9)
!8800 = !DILocation(line: 8478, column: 21, scope: !8799)
!8801 = !DILocation(line: 8478, column: 24, scope: !8802)
!8802 = !DILexicalBlockFile(scope: !8799, file: !1, discriminator: 1)
!8803 = !DILocation(line: 8478, column: 9, scope: !2580)
!8804 = !DILocation(line: 8481, column: 17, scope: !2580)
!8805 = !DILocation(line: 8481, column: 11, scope: !2580)
!8806 = !DILocation(line: 8475, column: 9, scope: !2580)
!8807 = !DILocation(line: 8482, column: 13, scope: !8808)
!8808 = distinct !DILexicalBlock(scope: !2580, file: !1, line: 8482, column: 9)
!8809 = !DILocation(line: 8482, column: 9, scope: !2580)
!8810 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !8811)
!8811 = distinct !DILocation(line: 8483, column: 16, scope: !8808)
!8812 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !8811)
!8813 = !DILocation(line: 8483, column: 9, scope: !8808)
!8814 = !DILocation(line: 8484, column: 34, scope: !2580)
!8815 = !DILocation(line: 8484, column: 42, scope: !2580)
!8816 = !DILocation(line: 8484, column: 12, scope: !2580)
!8817 = !DILocation(line: 8484, column: 5, scope: !2580)
!8818 = !DILocation(line: 8485, column: 1, scope: !2580)
!8819 = !DILocation(line: 8571, column: 24, scope: !2587)
!8820 = !DILocation(line: 8571, column: 40, scope: !2587)
!8821 = !DILocation(line: 8571, column: 56, scope: !2587)
!8822 = !DILocation(line: 8573, column: 5, scope: !2587)
!8823 = !DILocation(line: 8574, column: 5, scope: !2587)
!8824 = !DILocation(line: 8574, column: 9, scope: !2587)
!8825 = !DILocation(line: 8575, column: 5, scope: !2587)
!8826 = !DILocation(line: 8575, column: 9, scope: !2587)
!8827 = !DILocation(line: 8577, column: 15, scope: !2587)
!8828 = !DILocation(line: 8580, column: 5, scope: !2587)
!8829 = !DILocation(line: 8573, column: 12, scope: !2587)
!8830 = !DILocation(line: 8581, column: 10, scope: !8831)
!8831 = distinct !DILexicalBlock(scope: !2587, file: !1, line: 8581, column: 9)
!8832 = !DILocation(line: 8581, column: 9, scope: !2587)
!8833 = !DILocation(line: 8592, column: 5, scope: !2598)
!8834 = !DILocation(line: 8594, column: 9, scope: !8835)
!8835 = distinct !DILexicalBlock(scope: !2598, file: !1, line: 8594, column: 9)
!8836 = !DILocation(line: 8594, column: 16, scope: !8835)
!8837 = !DILocation(line: 8598, column: 30, scope: !8835)
!8838 = !DILocation(line: 8598, column: 38, scope: !8835)
!8839 = !DILocation(line: 8594, column: 9, scope: !2598)
!8840 = !DILocation(line: 8595, column: 18, scope: !8835)
!8841 = !DILocation(line: 8576, column: 9, scope: !2587)
!8842 = !DILocation(line: 8595, column: 9, scope: !8835)
!8843 = !DILocation(line: 8598, column: 18, scope: !8835)
!8844 = !DILocation(line: 8599, column: 5, scope: !2598)
!8845 = !DILocation(line: 8601, column: 16, scope: !8846)
!8846 = distinct !DILexicalBlock(scope: !2587, file: !1, line: 8601, column: 9)
!8847 = !DILocation(line: 8601, column: 9, scope: !2587)
!8848 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !8849)
!8849 = distinct !DILocation(line: 8602, column: 24, scope: !8850)
!8850 = distinct !DILexicalBlock(scope: !8846, file: !1, line: 8601, column: 21)
!8851 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !8849)
!8852 = !DILocation(line: 8603, column: 9, scope: !8850)
!8853 = !DILocation(line: 8607, column: 5, scope: !2587)
!8854 = !DILocation(line: 781, column: 22, scope: !1050, inlinedAt: !8855)
!8855 = distinct !DILocation(line: 8610, column: 5, scope: !2587)
!8856 = !DILocation(line: 782, column: 15, scope: !1058, inlinedAt: !8855)
!8857 = !DILocation(line: 782, column: 9, scope: !1058, inlinedAt: !8855)
!8858 = !DILocation(line: 782, column: 9, scope: !1050, inlinedAt: !8855)
!8859 = !DILocation(line: 783, column: 9, scope: !4639, inlinedAt: !8855)
!8860 = !DILocation(line: 783, column: 9, scope: !4641, inlinedAt: !8855)
!8861 = !DILocation(line: 783, column: 9, scope: !4643, inlinedAt: !8855)
!8862 = !DILocation(line: 783, column: 9, scope: !4645, inlinedAt: !8855)
!8863 = !DILocation(line: 783, column: 9, scope: !1060, inlinedAt: !8855)
!8864 = !DILocation(line: 783, column: 9, scope: !4648, inlinedAt: !8855)
!8865 = !DILocation(line: 8610, column: 5, scope: !2587)
!8866 = !DILocation(line: 8612, column: 1, scope: !2587)
!8867 = !DILocation(line: 8632, column: 23, scope: !2599)
!8868 = !DILocation(line: 8632, column: 39, scope: !2599)
!8869 = !DILocation(line: 8632, column: 55, scope: !2599)
!8870 = !DILocation(line: 8634, column: 5, scope: !2599)
!8871 = !DILocation(line: 8635, column: 5, scope: !2599)
!8872 = !DILocation(line: 8635, column: 9, scope: !2599)
!8873 = !DILocation(line: 8636, column: 5, scope: !2599)
!8874 = !DILocation(line: 8636, column: 9, scope: !2599)
!8875 = !DILocation(line: 8637, column: 5, scope: !2599)
!8876 = !DILocation(line: 8637, column: 9, scope: !2599)
!8877 = !DILocation(line: 8639, column: 15, scope: !2599)
!8878 = !DILocation(line: 8642, column: 5, scope: !2599)
!8879 = !DILocation(line: 8634, column: 12, scope: !2599)
!8880 = !DILocation(line: 8643, column: 10, scope: !8881)
!8881 = distinct !DILexicalBlock(scope: !2599, file: !1, line: 8643, column: 9)
!8882 = !DILocation(line: 8643, column: 9, scope: !2599)
!8883 = !DILocation(line: 8654, column: 5, scope: !2611)
!8884 = !DILocation(line: 8656, column: 9, scope: !8885)
!8885 = distinct !DILexicalBlock(scope: !2611, file: !1, line: 8656, column: 9)
!8886 = !DILocation(line: 8656, column: 16, scope: !8885)
!8887 = !DILocation(line: 8660, column: 29, scope: !8885)
!8888 = !DILocation(line: 8660, column: 37, scope: !8885)
!8889 = !DILocation(line: 8660, column: 43, scope: !8885)
!8890 = !DILocation(line: 8656, column: 9, scope: !2611)
!8891 = !DILocation(line: 492, column: 1, scope: !2612, inlinedAt: !8892)
!8892 = distinct !DILocation(line: 8657, column: 18, scope: !8885)
!8893 = !DILocation(line: 8657, column: 18, scope: !8885)
!8894 = !DILocation(line: 495, column: 10, scope: !2612, inlinedAt: !8892)
!8895 = !DILocation(line: 495, column: 3, scope: !2612, inlinedAt: !8892)
!8896 = !DILocation(line: 8638, column: 9, scope: !2599)
!8897 = !DILocation(line: 8657, column: 9, scope: !8885)
!8898 = !DILocation(line: 484, column: 1, scope: !2620, inlinedAt: !8899)
!8899 = distinct !DILocation(line: 8660, column: 18, scope: !8885)
!8900 = !DILocation(line: 8660, column: 18, scope: !8885)
!8901 = !DILocation(line: 486, column: 10, scope: !2620, inlinedAt: !8899)
!8902 = !DILocation(line: 486, column: 3, scope: !2620, inlinedAt: !8899)
!8903 = !DILocation(line: 8661, column: 5, scope: !2611)
!8904 = !DILocation(line: 8663, column: 16, scope: !8905)
!8905 = distinct !DILexicalBlock(scope: !2599, file: !1, line: 8663, column: 9)
!8906 = !DILocation(line: 8663, column: 9, scope: !2599)
!8907 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !8908)
!8908 = distinct !DILocation(line: 8664, column: 24, scope: !8909)
!8909 = distinct !DILexicalBlock(scope: !8905, file: !1, line: 8663, column: 21)
!8910 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !8908)
!8911 = !DILocation(line: 8665, column: 9, scope: !8909)
!8912 = !DILocation(line: 8669, column: 5, scope: !2599)
!8913 = !DILocation(line: 781, column: 22, scope: !1050, inlinedAt: !8914)
!8914 = distinct !DILocation(line: 8672, column: 5, scope: !2599)
!8915 = !DILocation(line: 782, column: 15, scope: !1058, inlinedAt: !8914)
!8916 = !DILocation(line: 782, column: 9, scope: !1058, inlinedAt: !8914)
!8917 = !DILocation(line: 782, column: 9, scope: !1050, inlinedAt: !8914)
!8918 = !DILocation(line: 783, column: 9, scope: !4639, inlinedAt: !8914)
!8919 = !DILocation(line: 783, column: 9, scope: !4641, inlinedAt: !8914)
!8920 = !DILocation(line: 783, column: 9, scope: !4643, inlinedAt: !8914)
!8921 = !DILocation(line: 783, column: 9, scope: !4645, inlinedAt: !8914)
!8922 = !DILocation(line: 783, column: 9, scope: !1060, inlinedAt: !8914)
!8923 = !DILocation(line: 783, column: 9, scope: !4648, inlinedAt: !8914)
!8924 = !DILocation(line: 8672, column: 5, scope: !2599)
!8925 = !DILocation(line: 8674, column: 1, scope: !2599)
!8926 = !DILocation(line: 8683, column: 23, scope: !2627)
!8927 = !DILocation(line: 8683, column: 39, scope: !2627)
!8928 = !DILocation(line: 8685, column: 5, scope: !2627)
!8929 = !DILocation(line: 8685, column: 9, scope: !2627)
!8930 = !DILocation(line: 8686, column: 10, scope: !8931)
!8931 = distinct !DILexicalBlock(scope: !2627, file: !1, line: 8686, column: 9)
!8932 = !DILocation(line: 8686, column: 9, scope: !2627)
!8933 = !DILocation(line: 8688, column: 34, scope: !2627)
!8934 = !DILocation(line: 44, column: 1, scope: !2632, inlinedAt: !8935)
!8935 = distinct !DILocation(line: 8688, column: 34, scope: !2627)
!8936 = !DILocation(line: 46, column: 18, scope: !2632, inlinedAt: !8935)
!8937 = !DILocation(line: 46, column: 24, scope: !2632, inlinedAt: !8935)
!8938 = !DILocation(line: 46, column: 58, scope: !2632, inlinedAt: !8935)
!8939 = !DILocation(line: 46, column: 65, scope: !2632, inlinedAt: !8935)
!8940 = !DILocation(line: 46, column: 33, scope: !2632, inlinedAt: !8935)
!8941 = !DILocation(line: 8688, column: 12, scope: !2627)
!8942 = !DILocation(line: 8688, column: 5, scope: !2627)
!8943 = !DILocation(line: 8689, column: 1, scope: !2627)
!8944 = !DILocation(line: 8696, column: 23, scope: !2638)
!8945 = !DILocation(line: 8696, column: 39, scope: !2638)
!8946 = !DILocation(line: 8698, column: 5, scope: !2638)
!8947 = !DILocation(line: 8698, column: 9, scope: !2638)
!8948 = !DILocation(line: 8699, column: 10, scope: !8949)
!8949 = distinct !DILexicalBlock(scope: !2638, file: !1, line: 8699, column: 9)
!8950 = !DILocation(line: 8699, column: 9, scope: !2638)
!8951 = !DILocation(line: 8701, column: 34, scope: !2638)
!8952 = !DILocation(line: 50, column: 1, scope: !2643, inlinedAt: !8953)
!8953 = distinct !DILocation(line: 8701, column: 34, scope: !2638)
!8954 = !DILocation(line: 52, column: 17, scope: !2643, inlinedAt: !8953)
!8955 = !DILocation(line: 52, column: 50, scope: !2643, inlinedAt: !8953)
!8956 = !DILocation(line: 52, column: 57, scope: !2643, inlinedAt: !8953)
!8957 = !DILocation(line: 52, column: 25, scope: !2643, inlinedAt: !8953)
!8958 = !DILocation(line: 8701, column: 12, scope: !2638)
!8959 = !DILocation(line: 8701, column: 5, scope: !2638)
!8960 = !DILocation(line: 8702, column: 1, scope: !2638)
!8961 = !DILocation(line: 8709, column: 25, scope: !2646)
!8962 = !DILocation(line: 8709, column: 41, scope: !2646)
!8963 = !DILocation(line: 8711, column: 5, scope: !2646)
!8964 = !DILocation(line: 8711, column: 9, scope: !2646)
!8965 = !DILocation(line: 8711, column: 16, scope: !2646)
!8966 = !DILocation(line: 8712, column: 10, scope: !8967)
!8967 = distinct !DILexicalBlock(scope: !2646, file: !1, line: 8712, column: 9)
!8968 = !DILocation(line: 8712, column: 9, scope: !2646)
!8969 = !DILocation(line: 8714, column: 34, scope: !2646)
!8970 = !DILocation(line: 56, column: 1, scope: !2652, inlinedAt: !8971)
!8971 = distinct !DILocation(line: 8714, column: 34, scope: !2646)
!8972 = !DILocation(line: 58, column: 20, scope: !2652, inlinedAt: !8971)
!8973 = !DILocation(line: 58, column: 49, scope: !2652, inlinedAt: !8971)
!8974 = !DILocation(line: 58, column: 28, scope: !2652, inlinedAt: !8971)
!8975 = !DILocation(line: 58, column: 11, scope: !2652, inlinedAt: !8971)
!8976 = !DILocation(line: 59, column: 42, scope: !2652, inlinedAt: !8971)
!8977 = !DILocation(line: 59, column: 8, scope: !2652, inlinedAt: !8971)
!8978 = !DILocation(line: 59, column: 52, scope: !2652, inlinedAt: !8971)
!8979 = !DILocation(line: 60, column: 42, scope: !2652, inlinedAt: !8971)
!8980 = !DILocation(line: 60, column: 8, scope: !2652, inlinedAt: !8971)
!8981 = !DILocation(line: 60, column: 53, scope: !2652, inlinedAt: !8971)
!8982 = !DILocation(line: 59, column: 4, scope: !2652, inlinedAt: !8971)
!8983 = !DILocation(line: 60, column: 4, scope: !2652, inlinedAt: !8971)
!8984 = !DILocation(line: 8714, column: 12, scope: !2646)
!8985 = !DILocation(line: 8714, column: 5, scope: !2646)
!8986 = !DILocation(line: 8715, column: 1, scope: !2646)
!8987 = !DILocation(line: 8725, column: 27, scope: !2658)
!8988 = !DILocation(line: 8725, column: 43, scope: !2658)
!8989 = !DILocation(line: 8727, column: 5, scope: !2658)
!8990 = !DILocation(line: 8728, column: 5, scope: !2658)
!8991 = !DILocation(line: 8727, column: 9, scope: !2658)
!8992 = !DILocation(line: 8728, column: 11, scope: !2658)
!8993 = !DILocation(line: 8731, column: 10, scope: !8994)
!8994 = distinct !DILexicalBlock(scope: !2658, file: !1, line: 8731, column: 9)
!8995 = !DILocation(line: 8731, column: 9, scope: !2658)
!8996 = !DILocation(line: 8734, column: 5, scope: !2666)
!8997 = !DILocation(line: 8735, column: 21, scope: !2666)
!8998 = !DILocation(line: 8735, column: 25, scope: !2666)
!8999 = !DILocation(line: 8735, column: 11, scope: !2666)
!9000 = !DILocation(line: 8729, column: 9, scope: !2658)
!9001 = !DILocation(line: 8736, column: 5, scope: !2666)
!9002 = !DILocation(line: 8737, column: 13, scope: !9003)
!9003 = distinct !DILexicalBlock(scope: !2658, file: !1, line: 8737, column: 9)
!9004 = !DILocation(line: 8737, column: 9, scope: !2658)
!9005 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !9006)
!9006 = distinct !DILocation(line: 8738, column: 16, scope: !9003)
!9007 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !9006)
!9008 = !DILocation(line: 8738, column: 9, scope: !9003)
!9009 = !DILocation(line: 8739, column: 5, scope: !2658)
!9010 = !DILocation(line: 8740, column: 5, scope: !2658)
!9011 = !DILocation(line: 8741, column: 1, scope: !2658)
!9012 = !DILocation(line: 8752, column: 26, scope: !2667)
!9013 = !DILocation(line: 8752, column: 42, scope: !2667)
!9014 = !DILocation(line: 8752, column: 58, scope: !2667)
!9015 = !DILocation(line: 8754, column: 5, scope: !2667)
!9016 = !DILocation(line: 8755, column: 5, scope: !2667)
!9017 = !DILocation(line: 8757, column: 15, scope: !2667)
!9018 = !DILocation(line: 8760, column: 5, scope: !2667)
!9019 = !DILocation(line: 8761, column: 10, scope: !2667)
!9020 = !DILocation(line: 8761, column: 24, scope: !2667)
!9021 = !DILocation(line: 8763, column: 10, scope: !2667)
!9022 = !DILocation(line: 8763, column: 19, scope: !2667)
!9023 = !DILocation(line: 8754, column: 12, scope: !2667)
!9024 = !DILocation(line: 8755, column: 11, scope: !2667)
!9025 = !DILocation(line: 8765, column: 10, scope: !9026)
!9026 = distinct !DILexicalBlock(scope: !2667, file: !1, line: 8765, column: 9)
!9027 = !DILocation(line: 8765, column: 9, scope: !2667)
!9028 = !DILocation(line: 8770, column: 5, scope: !2677)
!9029 = !DILocation(line: 8772, column: 14, scope: !9030)
!9030 = distinct !DILexicalBlock(scope: !2677, file: !1, line: 8772, column: 9)
!9031 = !DILocation(line: 8772, column: 17, scope: !9030)
!9032 = !DILocation(line: 8772, column: 9, scope: !2677)
!9033 = !DILocation(line: 8773, column: 34, scope: !9030)
!9034 = !DILocation(line: 8773, column: 15, scope: !9030)
!9035 = !DILocation(line: 8756, column: 9, scope: !2667)
!9036 = !DILocation(line: 8773, column: 9, scope: !9030)
!9037 = !DILocation(line: 8776, column: 29, scope: !9030)
!9038 = !DILocation(line: 8776, column: 37, scope: !9030)
!9039 = !DILocation(line: 8776, column: 15, scope: !9030)
!9040 = !DILocation(line: 8777, column: 5, scope: !2677)
!9041 = !DILocation(line: 8778, column: 13, scope: !9042)
!9042 = distinct !DILexicalBlock(scope: !2667, file: !1, line: 8778, column: 9)
!9043 = !DILocation(line: 8778, column: 9, scope: !2667)
!9044 = !DILocation(line: 1311, column: 49, scope: !992, inlinedAt: !9045)
!9045 = distinct !DILocation(line: 8779, column: 18, scope: !9042)
!9046 = !DILocation(line: 1311, column: 12, scope: !992, inlinedAt: !9045)
!9047 = !DILocation(line: 8779, column: 9, scope: !9042)
!9048 = !DILocation(line: 8781, column: 9, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9042, file: !1, line: 8780, column: 10)
!9050 = !DILocation(line: 781, column: 22, scope: !1050, inlinedAt: !9051)
!9051 = distinct !DILocation(line: 8784, column: 5, scope: !2667)
!9052 = !DILocation(line: 782, column: 15, scope: !1058, inlinedAt: !9051)
!9053 = !DILocation(line: 782, column: 9, scope: !1058, inlinedAt: !9051)
!9054 = !DILocation(line: 782, column: 9, scope: !1050, inlinedAt: !9051)
!9055 = !DILocation(line: 783, column: 9, scope: !4639, inlinedAt: !9051)
!9056 = !DILocation(line: 783, column: 9, scope: !4641, inlinedAt: !9051)
!9057 = !DILocation(line: 783, column: 9, scope: !4643, inlinedAt: !9051)
!9058 = !DILocation(line: 783, column: 9, scope: !4645, inlinedAt: !9051)
!9059 = !DILocation(line: 783, column: 9, scope: !1060, inlinedAt: !9051)
!9060 = !DILocation(line: 783, column: 9, scope: !4648, inlinedAt: !9051)
!9061 = !DILocation(line: 8784, column: 5, scope: !2667)
!9062 = !DILocation(line: 8786, column: 1, scope: !2667)
!9063 = !DILocation(line: 8796, column: 33, scope: !2678)
!9064 = !DILocation(line: 8796, column: 49, scope: !2678)
!9065 = !DILocation(line: 8798, column: 5, scope: !2678)
!9066 = !DILocation(line: 8799, column: 5, scope: !2678)
!9067 = !DILocation(line: 8798, column: 11, scope: !2678)
!9068 = !DILocation(line: 8798, column: 16, scope: !2678)
!9069 = !DILocation(line: 8799, column: 14, scope: !2678)
!9070 = !DILocation(line: 8801, column: 10, scope: !9071)
!9071 = distinct !DILexicalBlock(scope: !2678, file: !1, line: 8801, column: 9)
!9072 = !DILocation(line: 8801, column: 9, scope: !2678)
!9073 = !DILocation(line: 8805, column: 5, scope: !2687)
!9074 = !DILocation(line: 8806, column: 27, scope: !2687)
!9075 = !DILocation(line: 8806, column: 31, scope: !2687)
!9076 = !DILocation(line: 8806, column: 39, scope: !2687)
!9077 = !DILocation(line: 8806, column: 11, scope: !2687)
!9078 = !DILocation(line: 8799, column: 9, scope: !2678)
!9079 = !DILocation(line: 8807, column: 5, scope: !2687)
!9080 = !DILocation(line: 8808, column: 13, scope: !9081)
!9081 = distinct !DILexicalBlock(scope: !2678, file: !1, line: 8808, column: 9)
!9082 = !DILocation(line: 8808, column: 9, scope: !2678)
!9083 = !DILocation(line: 8809, column: 9, scope: !9084)
!9084 = distinct !DILexicalBlock(scope: !9081, file: !1, line: 8808, column: 19)
!9085 = !DILocation(line: 8809, column: 15, scope: !9084)
!9086 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !9087)
!9087 = distinct !DILocation(line: 8810, column: 16, scope: !9084)
!9088 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !9087)
!9089 = !DILocation(line: 8810, column: 9, scope: !9084)
!9090 = !DILocation(line: 8812, column: 5, scope: !2678)
!9091 = !DILocation(line: 8813, column: 1, scope: !2678)
!9092 = !DILocation(line: 8828, column: 31, scope: !2688)
!9093 = !DILocation(line: 8828, column: 47, scope: !2688)
!9094 = !DILocation(line: 8830, column: 5, scope: !2688)
!9095 = !DILocation(line: 8831, column: 5, scope: !2688)
!9096 = !DILocation(line: 8830, column: 11, scope: !2688)
!9097 = !DILocation(line: 8830, column: 16, scope: !2688)
!9098 = !DILocation(line: 8831, column: 14, scope: !2688)
!9099 = !DILocation(line: 8831, column: 18, scope: !2688)
!9100 = !DILocation(line: 8833, column: 10, scope: !9101)
!9101 = distinct !DILexicalBlock(scope: !2688, file: !1, line: 8833, column: 9)
!9102 = !DILocation(line: 8833, column: 9, scope: !2688)
!9103 = !DILocation(line: 8837, column: 5, scope: !2698)
!9104 = !DILocation(line: 8838, column: 25, scope: !2698)
!9105 = !DILocation(line: 8838, column: 29, scope: !2698)
!9106 = !DILocation(line: 8838, column: 37, scope: !2698)
!9107 = !DILocation(line: 8838, column: 42, scope: !2698)
!9108 = !DILocation(line: 8838, column: 11, scope: !2698)
!9109 = !DILocation(line: 8831, column: 9, scope: !2688)
!9110 = !DILocation(line: 8839, column: 5, scope: !2698)
!9111 = !DILocation(line: 8840, column: 13, scope: !9112)
!9112 = distinct !DILexicalBlock(scope: !2688, file: !1, line: 8840, column: 9)
!9113 = !DILocation(line: 8840, column: 9, scope: !2688)
!9114 = !DILocation(line: 8841, column: 9, scope: !9115)
!9115 = distinct !DILexicalBlock(scope: !9112, file: !1, line: 8840, column: 19)
!9116 = !DILocation(line: 8841, column: 15, scope: !9115)
!9117 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !9118)
!9118 = distinct !DILocation(line: 8842, column: 16, scope: !9115)
!9119 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !9118)
!9120 = !DILocation(line: 8842, column: 9, scope: !9115)
!9121 = !DILocation(line: 8844, column: 5, scope: !2688)
!9122 = !DILocation(line: 8845, column: 1, scope: !2688)
!9123 = !DILocation(line: 8858, column: 24, scope: !2699)
!9124 = !DILocation(line: 8858, column: 40, scope: !2699)
!9125 = !DILocation(line: 8860, column: 15, scope: !2699)
!9126 = !DILocation(line: 8890, column: 5, scope: !2699)
!9127 = !DILocation(line: 8890, column: 15, scope: !2699)
!9128 = !DILocation(line: 8890, column: 21, scope: !2699)
!9129 = !DILocation(line: 8894, column: 10, scope: !9130)
!9130 = distinct !DILexicalBlock(scope: !2699, file: !1, line: 8894, column: 9)
!9131 = !DILocation(line: 8894, column: 9, scope: !2699)
!9132 = !DILocation(line: 8899, column: 27, scope: !2699)
!9133 = !DILocation(line: 8899, column: 10, scope: !2699)
!9134 = !DILocation(line: 8891, column: 11, scope: !2699)
!9135 = !DILocation(line: 8900, column: 27, scope: !2699)
!9136 = !DILocation(line: 8900, column: 10, scope: !2699)
!9137 = !DILocation(line: 8891, column: 16, scope: !2699)
!9138 = !DILocation(line: 8902, column: 14, scope: !2699)
!9139 = !DILocation(line: 8903, column: 16, scope: !9140)
!9140 = distinct !DILexicalBlock(scope: !2699, file: !1, line: 8903, column: 9)
!9141 = !DILocation(line: 8903, column: 9, scope: !2699)
!9142 = !DILocation(line: 8904, column: 9, scope: !9143)
!9143 = distinct !DILexicalBlock(scope: !9140, file: !1, line: 8903, column: 25)
!9144 = !DILocation(line: 8905, column: 9, scope: !9143)
!9145 = !DILocation(line: 8908, column: 14, scope: !2699)
!9146 = !DILocation(line: 8892, column: 11, scope: !2699)
!9147 = !DILocation(line: 8909, column: 9, scope: !9148)
!9148 = distinct !DILexicalBlock(scope: !2699, file: !1, line: 8909, column: 9)
!9149 = !DILocation(line: 8909, column: 9, scope: !2699)
!9150 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !9151)
!9151 = distinct !DILocation(line: 8910, column: 9, scope: !9152)
!9152 = distinct !DILexicalBlock(scope: !9148, file: !1, line: 8909, column: 25)
!9153 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !9151)
!9154 = !DILocation(line: 8911, column: 9, scope: !9152)
!9155 = !DILocation(line: 8919, column: 24, scope: !2712)
!9156 = !DILocation(line: 8919, column: 46, scope: !2712)
!9157 = !DILocation(line: 8919, column: 9, scope: !2712)
!9158 = !DILocation(line: 8919, column: 9, scope: !2699)
!9159 = !DILocation(line: 8921, column: 9, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !2712, file: !1, line: 8919, column: 60)
!9161 = !DILocation(line: 8922, column: 5, scope: !9160)
!9162 = !DILocation(line: 8924, column: 9, scope: !9163)
!9163 = !DILexicalBlockFile(scope: !2710, file: !1, discriminator: 1)
!9164 = !DILocation(line: 8924, column: 9, scope: !9165)
!9165 = distinct !DILexicalBlock(scope: !2710, file: !1, line: 8924, column: 9)
!9166 = !DILocation(line: 8924, column: 9, scope: !2710)
!9167 = !DILocation(line: 8924, column: 9, scope: !9168)
!9168 = !DILexicalBlockFile(scope: !9165, file: !1, discriminator: 3)
!9169 = !DILocation(line: 8928, column: 5, scope: !9170)
!9170 = !DILexicalBlockFile(scope: !2714, file: !1, discriminator: 1)
!9171 = !DILocation(line: 8928, column: 5, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !2714, file: !1, line: 8928, column: 5)
!9173 = !DILocation(line: 8928, column: 5, scope: !2714)
!9174 = !DILocation(line: 8928, column: 5, scope: !9175)
!9175 = !DILexicalBlockFile(scope: !9172, file: !1, discriminator: 3)
!9176 = !DILocation(line: 8929, column: 5, scope: !9177)
!9177 = !DILexicalBlockFile(scope: !2716, file: !1, discriminator: 1)
!9178 = !DILocation(line: 8929, column: 5, scope: !9179)
!9179 = distinct !DILexicalBlock(scope: !2716, file: !1, line: 8929, column: 5)
!9180 = !DILocation(line: 8929, column: 5, scope: !2716)
!9181 = !DILocation(line: 8929, column: 5, scope: !9182)
!9182 = !DILexicalBlockFile(scope: !9179, file: !1, discriminator: 3)
!9183 = !DILocation(line: 8931, column: 5, scope: !2699)
!9184 = !DILocation(line: 8935, column: 5, scope: !9185)
!9185 = !DILexicalBlockFile(scope: !2718, file: !1, discriminator: 1)
!9186 = !DILocation(line: 8935, column: 5, scope: !9187)
!9187 = distinct !DILexicalBlock(scope: !2718, file: !1, line: 8935, column: 5)
!9188 = !DILocation(line: 8935, column: 5, scope: !2718)
!9189 = !DILocation(line: 8935, column: 5, scope: !9190)
!9190 = !DILexicalBlockFile(scope: !9187, file: !1, discriminator: 3)
!9191 = !DILocation(line: 8936, column: 5, scope: !9192)
!9192 = !DILexicalBlockFile(scope: !2720, file: !1, discriminator: 1)
!9193 = !DILocation(line: 8936, column: 5, scope: !9194)
!9194 = distinct !DILexicalBlock(scope: !2720, file: !1, line: 8936, column: 5)
!9195 = !DILocation(line: 8936, column: 5, scope: !2720)
!9196 = !DILocation(line: 8936, column: 5, scope: !9197)
!9197 = !DILexicalBlockFile(scope: !9194, file: !1, discriminator: 3)
!9198 = !DILocation(line: 8938, column: 5, scope: !9199)
!9199 = !DILexicalBlockFile(scope: !2722, file: !1, discriminator: 1)
!9200 = !DILocation(line: 8938, column: 5, scope: !2722)
!9201 = !DILocation(line: 8938, column: 5, scope: !9202)
!9202 = !DILexicalBlockFile(scope: !2724, file: !1, discriminator: 4)
!9203 = !DILocation(line: 8938, column: 5, scope: !9204)
!9204 = distinct !DILexicalBlock(scope: !2724, file: !1, line: 8938, column: 5)
!9205 = !DILocation(line: 8938, column: 5, scope: !2724)
!9206 = !DILocation(line: 8938, column: 5, scope: !9207)
!9207 = !DILexicalBlockFile(scope: !9204, file: !1, discriminator: 6)
!9208 = !DILocation(line: 8940, column: 1, scope: !2699)
!9209 = !DILocation(line: 8949, column: 26, scope: !2726)
!9210 = !DILocation(line: 8949, column: 42, scope: !2726)
!9211 = !DILocation(line: 8951, column: 5, scope: !2726)
!9212 = !DILocation(line: 8951, column: 15, scope: !2726)
!9213 = !DILocation(line: 8956, column: 10, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !2726, file: !1, line: 8956, column: 9)
!9215 = !DILocation(line: 8956, column: 9, scope: !2726)
!9216 = !DILocation(line: 8964, column: 20, scope: !2726)
!9217 = !DILocation(line: 8964, column: 11, scope: !2726)
!9218 = !DILocation(line: 8953, column: 9, scope: !2726)
!9219 = !DILocation(line: 8965, column: 9, scope: !2735)
!9220 = !DILocation(line: 8965, column: 9, scope: !2726)
!9221 = !DILocation(line: 8966, column: 9, scope: !9222)
!9222 = !DILexicalBlockFile(scope: !2733, file: !1, discriminator: 1)
!9223 = !DILocation(line: 8966, column: 9, scope: !9224)
!9224 = distinct !DILexicalBlock(scope: !2733, file: !1, line: 8966, column: 9)
!9225 = !DILocation(line: 8966, column: 9, scope: !2733)
!9226 = !DILocation(line: 8966, column: 9, scope: !9227)
!9227 = !DILexicalBlockFile(scope: !9224, file: !1, discriminator: 3)
!9228 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !9229)
!9229 = distinct !DILocation(line: 8967, column: 16, scope: !2734)
!9230 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !9229)
!9231 = !DILocation(line: 8967, column: 9, scope: !2734)
!9232 = !DILocation(line: 8976, column: 24, scope: !9233)
!9233 = distinct !DILexicalBlock(scope: !2726, file: !1, line: 8976, column: 9)
!9234 = !DILocation(line: 8976, column: 46, scope: !9233)
!9235 = !DILocation(line: 8976, column: 9, scope: !9233)
!9236 = !DILocation(line: 8976, column: 9, scope: !2726)
!9237 = !DILocation(line: 8978, column: 9, scope: !9238)
!9238 = distinct !DILexicalBlock(scope: !9233, file: !1, line: 8976, column: 53)
!9239 = !DILocation(line: 8979, column: 5, scope: !9238)
!9240 = !DILocation(line: 8980, column: 5, scope: !9241)
!9241 = !DILexicalBlockFile(scope: !2737, file: !1, discriminator: 1)
!9242 = !DILocation(line: 8980, column: 5, scope: !9243)
!9243 = distinct !DILexicalBlock(scope: !2737, file: !1, line: 8980, column: 5)
!9244 = !DILocation(line: 8980, column: 5, scope: !2737)
!9245 = !DILocation(line: 8980, column: 5, scope: !9246)
!9246 = !DILexicalBlockFile(scope: !9243, file: !1, discriminator: 3)
!9247 = !DILocation(line: 8981, column: 5, scope: !2726)
!9248 = !DILocation(line: 8982, column: 1, scope: !2726)
!9249 = !DILocation(line: 8990, column: 26, scope: !2738)
!9250 = !DILocation(line: 8990, column: 42, scope: !2738)
!9251 = !DILocation(line: 8992, column: 5, scope: !2738)
!9252 = !DILocation(line: 8992, column: 9, scope: !2738)
!9253 = !DILocation(line: 8994, column: 10, scope: !9254)
!9254 = distinct !DILexicalBlock(scope: !2738, file: !1, line: 8994, column: 9)
!9255 = !DILocation(line: 8994, column: 9, scope: !2738)
!9256 = !DILocation(line: 8996, column: 24, scope: !2738)
!9257 = !DILocation(line: 8996, column: 15, scope: !2738)
!9258 = !DILocation(line: 8993, column: 11, scope: !2738)
!9259 = !DILocation(line: 8997, column: 17, scope: !9260)
!9260 = distinct !DILexicalBlock(scope: !2738, file: !1, line: 8997, column: 9)
!9261 = !DILocation(line: 8997, column: 9, scope: !2738)
!9262 = !DILocation(line: 8998, column: 25, scope: !9263)
!9263 = distinct !DILexicalBlock(scope: !9260, file: !1, line: 8997, column: 26)
!9264 = !DILocation(line: 8998, column: 9, scope: !9263)
!9265 = !DILocation(line: 9000, column: 9, scope: !9263)
!9266 = !DILocation(line: 9002, column: 12, scope: !2738)
!9267 = !DILocation(line: 9002, column: 5, scope: !2738)
!9268 = !DILocation(line: 9003, column: 1, scope: !2738)
!9269 = !DILocation(line: 2877, column: 24, scope: !2744)
!9270 = !DILocation(line: 2877, column: 40, scope: !2744)
!9271 = !DILocation(line: 1332, column: 24, scope: !2748, inlinedAt: !9272)
!9272 = distinct !DILocation(line: 2879, column: 12, scope: !2744)
!9273 = !DILocation(line: 1332, column: 37, scope: !2748, inlinedAt: !9272)
!9274 = !DILocation(line: 1336, column: 10, scope: !2748, inlinedAt: !9272)
!9275 = !DILocation(line: 1334, column: 9, scope: !2748, inlinedAt: !9272)
!9276 = !DILocation(line: 1337, column: 12, scope: !9277, inlinedAt: !9272)
!9277 = distinct !DILexicalBlock(scope: !2748, file: !1, line: 1337, column: 9)
!9278 = !DILocation(line: 1337, column: 9, scope: !2748, inlinedAt: !9272)
!9279 = !DILocation(line: 1341, column: 5, scope: !2760, inlinedAt: !9272)
!9280 = !DILocation(line: 1342, column: 11, scope: !2760, inlinedAt: !9272)
!9281 = !DILocation(line: 1335, column: 9, scope: !2748, inlinedAt: !9272)
!9282 = !DILocation(line: 1343, column: 5, scope: !2760, inlinedAt: !9272)
!9283 = !DILocation(line: 1344, column: 13, scope: !9284, inlinedAt: !9272)
!9284 = distinct !DILexicalBlock(scope: !2748, file: !1, line: 1344, column: 9)
!9285 = !DILocation(line: 1344, column: 9, scope: !2748, inlinedAt: !9272)
!9286 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !9287)
!9287 = distinct !DILocation(line: 1345, column: 16, scope: !9284, inlinedAt: !9272)
!9288 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !9287)
!9289 = !DILocation(line: 1345, column: 9, scope: !9284, inlinedAt: !9272)
!9290 = !DILocation(line: 1346, column: 5, scope: !2748, inlinedAt: !9272)
!9291 = !DILocation(line: 1347, column: 5, scope: !2748, inlinedAt: !9272)
!9292 = !DILocation(line: 2879, column: 12, scope: !2744)
!9293 = !DILocation(line: 2879, column: 5, scope: !2744)
!9294 = !DILocation(line: 3188, column: 23, scope: !2761)
!9295 = !DILocation(line: 3188, column: 39, scope: !2761)
!9296 = !DILocation(line: 1332, column: 24, scope: !2748, inlinedAt: !9297)
!9297 = distinct !DILocation(line: 3190, column: 12, scope: !2761)
!9298 = !DILocation(line: 1332, column: 37, scope: !2748, inlinedAt: !9297)
!9299 = !DILocation(line: 1336, column: 10, scope: !2748, inlinedAt: !9297)
!9300 = !DILocation(line: 1334, column: 9, scope: !2748, inlinedAt: !9297)
!9301 = !DILocation(line: 1337, column: 12, scope: !9277, inlinedAt: !9297)
!9302 = !DILocation(line: 1337, column: 9, scope: !2748, inlinedAt: !9297)
!9303 = !DILocation(line: 1341, column: 5, scope: !2760, inlinedAt: !9297)
!9304 = !DILocation(line: 1342, column: 11, scope: !2760, inlinedAt: !9297)
!9305 = !DILocation(line: 1335, column: 9, scope: !2748, inlinedAt: !9297)
!9306 = !DILocation(line: 1343, column: 5, scope: !2760, inlinedAt: !9297)
!9307 = !DILocation(line: 1344, column: 13, scope: !9284, inlinedAt: !9297)
!9308 = !DILocation(line: 1344, column: 9, scope: !2748, inlinedAt: !9297)
!9309 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !9310)
!9310 = distinct !DILocation(line: 1345, column: 16, scope: !9284, inlinedAt: !9297)
!9311 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !9310)
!9312 = !DILocation(line: 1345, column: 9, scope: !9284, inlinedAt: !9297)
!9313 = !DILocation(line: 1346, column: 5, scope: !2748, inlinedAt: !9297)
!9314 = !DILocation(line: 1347, column: 5, scope: !2748, inlinedAt: !9297)
!9315 = !DILocation(line: 3190, column: 12, scope: !2761)
!9316 = !DILocation(line: 3190, column: 5, scope: !2761)
!9317 = !DILocation(line: 3200, column: 22, scope: !2765)
!9318 = !DILocation(line: 3200, column: 38, scope: !2765)
!9319 = !DILocation(line: 3202, column: 5, scope: !2770)
!9320 = !DILocation(line: 3203, column: 5, scope: !2770)
!9321 = !DILocation(line: 3204, column: 5, scope: !2770)
!9322 = !DILocation(line: 3205, column: 5, scope: !2765)
!9323 = !DILocation(line: 3221, column: 27, scope: !2771)
!9324 = !DILocation(line: 3221, column: 43, scope: !2771)
!9325 = !DILocation(line: 1332, column: 24, scope: !2748, inlinedAt: !9326)
!9326 = distinct !DILocation(line: 3223, column: 12, scope: !2771)
!9327 = !DILocation(line: 1332, column: 37, scope: !2748, inlinedAt: !9326)
!9328 = !DILocation(line: 1336, column: 10, scope: !2748, inlinedAt: !9326)
!9329 = !DILocation(line: 1334, column: 9, scope: !2748, inlinedAt: !9326)
!9330 = !DILocation(line: 1337, column: 12, scope: !9277, inlinedAt: !9326)
!9331 = !DILocation(line: 1337, column: 9, scope: !2748, inlinedAt: !9326)
!9332 = !DILocation(line: 1341, column: 5, scope: !2760, inlinedAt: !9326)
!9333 = !DILocation(line: 1342, column: 11, scope: !2760, inlinedAt: !9326)
!9334 = !DILocation(line: 1335, column: 9, scope: !2748, inlinedAt: !9326)
!9335 = !DILocation(line: 1343, column: 5, scope: !2760, inlinedAt: !9326)
!9336 = !DILocation(line: 1344, column: 13, scope: !9284, inlinedAt: !9326)
!9337 = !DILocation(line: 1344, column: 9, scope: !2748, inlinedAt: !9326)
!9338 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !9339)
!9339 = distinct !DILocation(line: 1345, column: 16, scope: !9284, inlinedAt: !9326)
!9340 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !9339)
!9341 = !DILocation(line: 1345, column: 9, scope: !9284, inlinedAt: !9326)
!9342 = !DILocation(line: 1346, column: 5, scope: !2748, inlinedAt: !9326)
!9343 = !DILocation(line: 1347, column: 5, scope: !2748, inlinedAt: !9326)
!9344 = !DILocation(line: 3223, column: 12, scope: !2771)
!9345 = !DILocation(line: 3223, column: 5, scope: !2771)
!9346 = !DILocation(line: 9014, column: 27, scope: !2775)
!9347 = !DILocation(line: 9014, column: 43, scope: !2775)
!9348 = !DILocation(line: 9016, column: 5, scope: !2775)
!9349 = !DILocation(line: 9016, column: 15, scope: !2775)
!9350 = !DILocation(line: 9017, column: 29, scope: !2775)
!9351 = !DILocation(line: 9019, column: 10, scope: !9352)
!9352 = distinct !DILexicalBlock(scope: !2775, file: !1, line: 9019, column: 9)
!9353 = !DILocation(line: 9019, column: 9, scope: !2775)
!9354 = !DILocation(line: 9022, column: 28, scope: !2775)
!9355 = !DILocation(line: 9022, column: 12, scope: !2775)
!9356 = !DILocation(line: 9022, column: 5, scope: !2775)
!9357 = !DILocation(line: 9023, column: 1, scope: !2775)
!9358 = !DILocation(line: 9033, column: 30, scope: !2780)
!9359 = !DILocation(line: 9033, column: 46, scope: !2780)
!9360 = !DILocation(line: 9035, column: 5, scope: !2780)
!9361 = !DILocation(line: 9035, column: 15, scope: !2780)
!9362 = !DILocation(line: 9036, column: 29, scope: !2780)
!9363 = !DILocation(line: 9038, column: 10, scope: !9364)
!9364 = distinct !DILexicalBlock(scope: !2780, file: !1, line: 9038, column: 9)
!9365 = !DILocation(line: 9038, column: 9, scope: !2780)
!9366 = !DILocation(line: 9041, column: 28, scope: !2780)
!9367 = !DILocation(line: 9041, column: 12, scope: !2780)
!9368 = !DILocation(line: 9041, column: 5, scope: !2780)
!9369 = !DILocation(line: 9042, column: 1, scope: !2780)
!9370 = !DILocation(line: 9051, column: 28, scope: !2785)
!9371 = !DILocation(line: 9051, column: 44, scope: !2785)
!9372 = !DILocation(line: 9053, column: 5, scope: !2785)
!9373 = !DILocation(line: 9053, column: 15, scope: !2785)
!9374 = !DILocation(line: 9054, column: 29, scope: !2785)
!9375 = !DILocation(line: 9056, column: 10, scope: !9376)
!9376 = distinct !DILexicalBlock(scope: !2785, file: !1, line: 9056, column: 9)
!9377 = !DILocation(line: 9056, column: 9, scope: !2785)
!9378 = !DILocation(line: 9059, column: 28, scope: !2785)
!9379 = !DILocation(line: 9059, column: 12, scope: !2785)
!9380 = !DILocation(line: 9059, column: 5, scope: !2785)
!9381 = !DILocation(line: 9060, column: 1, scope: !2785)
!9382 = !DILocation(line: 9069, column: 29, scope: !2790)
!9383 = !DILocation(line: 9069, column: 45, scope: !2790)
!9384 = !DILocation(line: 9071, column: 5, scope: !2790)
!9385 = !DILocation(line: 9071, column: 15, scope: !2790)
!9386 = !DILocation(line: 9072, column: 29, scope: !2790)
!9387 = !DILocation(line: 9074, column: 10, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !2790, file: !1, line: 9074, column: 9)
!9389 = !DILocation(line: 9074, column: 9, scope: !2790)
!9390 = !DILocation(line: 9077, column: 28, scope: !2790)
!9391 = !DILocation(line: 9077, column: 12, scope: !2790)
!9392 = !DILocation(line: 9077, column: 5, scope: !2790)
!9393 = !DILocation(line: 9078, column: 1, scope: !2790)
!9394 = !DILocation(line: 9088, column: 27, scope: !2795)
!9395 = !DILocation(line: 9088, column: 43, scope: !2795)
!9396 = !DILocation(line: 9090, column: 5, scope: !2795)
!9397 = !DILocation(line: 9090, column: 15, scope: !2795)
!9398 = !DILocation(line: 9091, column: 29, scope: !2795)
!9399 = !DILocation(line: 9093, column: 10, scope: !9400)
!9400 = distinct !DILexicalBlock(scope: !2795, file: !1, line: 9093, column: 9)
!9401 = !DILocation(line: 9093, column: 9, scope: !2795)
!9402 = !DILocation(line: 9096, column: 28, scope: !2795)
!9403 = !DILocation(line: 9096, column: 12, scope: !2795)
!9404 = !DILocation(line: 9096, column: 5, scope: !2795)
!9405 = !DILocation(line: 9097, column: 1, scope: !2795)
!9406 = !DILocation(line: 9106, column: 29, scope: !2800)
!9407 = !DILocation(line: 9106, column: 45, scope: !2800)
!9408 = !DILocation(line: 9108, column: 5, scope: !2800)
!9409 = !DILocation(line: 9108, column: 15, scope: !2800)
!9410 = !DILocation(line: 9109, column: 29, scope: !2800)
!9411 = !DILocation(line: 9111, column: 10, scope: !9412)
!9412 = distinct !DILexicalBlock(scope: !2800, file: !1, line: 9111, column: 9)
!9413 = !DILocation(line: 9111, column: 9, scope: !2800)
!9414 = !DILocation(line: 9114, column: 31, scope: !2800)
!9415 = !DILocation(line: 9114, column: 12, scope: !2800)
!9416 = !DILocation(line: 9114, column: 5, scope: !2800)
!9417 = !DILocation(line: 9115, column: 1, scope: !2800)
!9418 = !DILocation(line: 9125, column: 26, scope: !2805)
!9419 = !DILocation(line: 9125, column: 42, scope: !2805)
!9420 = !DILocation(line: 9127, column: 5, scope: !2805)
!9421 = !DILocation(line: 9127, column: 15, scope: !2805)
!9422 = !DILocation(line: 9128, column: 29, scope: !2805)
!9423 = !DILocation(line: 9130, column: 10, scope: !9424)
!9424 = distinct !DILexicalBlock(scope: !2805, file: !1, line: 9130, column: 9)
!9425 = !DILocation(line: 9130, column: 9, scope: !2805)
!9426 = !DILocation(line: 9133, column: 31, scope: !2805)
!9427 = !DILocation(line: 9133, column: 12, scope: !2805)
!9428 = !DILocation(line: 9133, column: 5, scope: !2805)
!9429 = !DILocation(line: 9134, column: 1, scope: !2805)
!9430 = !DILocation(line: 9144, column: 26, scope: !2810)
!9431 = !DILocation(line: 9144, column: 42, scope: !2810)
!9432 = !DILocation(line: 9146, column: 5, scope: !2810)
!9433 = !DILocation(line: 9146, column: 15, scope: !2810)
!9434 = !DILocation(line: 9147, column: 29, scope: !2810)
!9435 = !DILocation(line: 9149, column: 10, scope: !9436)
!9436 = distinct !DILexicalBlock(scope: !2810, file: !1, line: 9149, column: 9)
!9437 = !DILocation(line: 9149, column: 9, scope: !2810)
!9438 = !DILocation(line: 9152, column: 31, scope: !2810)
!9439 = !DILocation(line: 9152, column: 12, scope: !2810)
!9440 = !DILocation(line: 9152, column: 5, scope: !2810)
!9441 = !DILocation(line: 9153, column: 1, scope: !2810)
!9442 = !DILocation(line: 9216, column: 26, scope: !2815)
!9443 = !DILocation(line: 9216, column: 42, scope: !2815)
!9444 = !DILocation(line: 9218, column: 5, scope: !2815)
!9445 = !DILocation(line: 9219, column: 5, scope: !2815)
!9446 = !DILocation(line: 9218, column: 9, scope: !2815)
!9447 = !DILocation(line: 9221, column: 10, scope: !9448)
!9448 = distinct !DILexicalBlock(scope: !2815, file: !1, line: 9221, column: 9)
!9449 = !DILocation(line: 9221, column: 9, scope: !2815)
!9450 = !DILocation(line: 9223, column: 5, scope: !2840)
!9451 = !DILocation(line: 9224, column: 20, scope: !2840)
!9452 = !DILocation(line: 9219, column: 20, scope: !2815)
!9453 = !DILocation(line: 9224, column: 11, scope: !2840)
!9454 = !DILocation(line: 9218, column: 13, scope: !2815)
!9455 = !DILocation(line: 9225, column: 5, scope: !2840)
!9456 = !DILocation(line: 9226, column: 13, scope: !9457)
!9457 = distinct !DILexicalBlock(scope: !2815, file: !1, line: 9226, column: 9)
!9458 = !DILocation(line: 9226, column: 9, scope: !2815)
!9459 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !9460)
!9460 = distinct !DILocation(line: 9227, column: 16, scope: !9457)
!9461 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !9460)
!9462 = !DILocation(line: 9227, column: 9, scope: !9457)
!9463 = !DILocation(line: 9229, column: 12, scope: !2815)
!9464 = !DILocation(line: 9229, column: 5, scope: !2815)
!9465 = !DILocation(line: 9230, column: 1, scope: !2815)
!9466 = !DILocation(line: 9246, column: 25, scope: !2851)
!9467 = !DILocation(line: 9246, column: 41, scope: !2851)
!9468 = !DILocation(line: 9246, column: 57, scope: !2851)
!9469 = !DILocation(line: 9249, column: 5, scope: !2851)
!9470 = !DILocation(line: 9251, column: 15, scope: !2851)
!9471 = !DILocation(line: 9252, column: 5, scope: !2851)
!9472 = !DILocation(line: 9254, column: 5, scope: !2851)
!9473 = !DILocation(line: 9255, column: 10, scope: !2851)
!9474 = !DILocation(line: 9255, column: 24, scope: !2851)
!9475 = !DILocation(line: 9257, column: 10, scope: !2851)
!9476 = !DILocation(line: 9257, column: 19, scope: !2851)
!9477 = !DILocation(line: 9249, column: 12, scope: !2851)
!9478 = !DILocation(line: 9259, column: 10, scope: !9479)
!9479 = distinct !DILexicalBlock(scope: !2851, file: !1, line: 9259, column: 9)
!9480 = !DILocation(line: 9259, column: 9, scope: !2851)
!9481 = !DILocation(line: 9264, column: 5, scope: !2861)
!9482 = !DILocation(line: 9266, column: 14, scope: !9483)
!9483 = distinct !DILexicalBlock(scope: !2861, file: !1, line: 9266, column: 9)
!9484 = !DILocation(line: 9266, column: 17, scope: !9483)
!9485 = !DILocation(line: 9266, column: 9, scope: !2861)
!9486 = !DILocation(line: 9252, column: 20, scope: !2851)
!9487 = !DILocation(line: 9274, column: 18, scope: !9488)
!9488 = distinct !DILexicalBlock(scope: !9483, file: !1, line: 9266, column: 24)
!9489 = !DILocation(line: 9250, column: 9, scope: !2851)
!9490 = !DILocation(line: 9275, column: 5, scope: !9488)
!9491 = !DILocation(line: 9278, column: 31, scope: !9483)
!9492 = !DILocation(line: 9278, column: 18, scope: !9483)
!9493 = !DILocation(line: 9279, column: 5, scope: !2861)
!9494 = !DILocation(line: 9281, column: 9, scope: !9495)
!9495 = distinct !DILexicalBlock(scope: !2851, file: !1, line: 9281, column: 9)
!9496 = !DILocation(line: 9281, column: 9, scope: !2851)
!9497 = !DILocation(line: 1311, column: 49, scope: !992, inlinedAt: !9498)
!9498 = distinct !DILocation(line: 9282, column: 24, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9495, file: !1, line: 9281, column: 17)
!9500 = !DILocation(line: 1311, column: 12, scope: !992, inlinedAt: !9498)
!9501 = !DILocation(line: 9283, column: 9, scope: !9499)
!9502 = !DILocation(line: 9286, column: 20, scope: !2851)
!9503 = !DILocation(line: 9286, column: 5, scope: !2851)
!9504 = !DILocation(line: 781, column: 22, scope: !1050, inlinedAt: !9505)
!9505 = distinct !DILocation(line: 9289, column: 5, scope: !2851)
!9506 = !DILocation(line: 782, column: 15, scope: !1058, inlinedAt: !9505)
!9507 = !DILocation(line: 782, column: 9, scope: !1058, inlinedAt: !9505)
!9508 = !DILocation(line: 782, column: 9, scope: !1050, inlinedAt: !9505)
!9509 = !DILocation(line: 783, column: 9, scope: !4639, inlinedAt: !9505)
!9510 = !DILocation(line: 783, column: 9, scope: !4641, inlinedAt: !9505)
!9511 = !DILocation(line: 783, column: 9, scope: !4643, inlinedAt: !9505)
!9512 = !DILocation(line: 783, column: 9, scope: !4645, inlinedAt: !9505)
!9513 = !DILocation(line: 783, column: 9, scope: !1060, inlinedAt: !9505)
!9514 = !DILocation(line: 783, column: 9, scope: !4648, inlinedAt: !9505)
!9515 = !DILocation(line: 9289, column: 5, scope: !2851)
!9516 = !DILocation(line: 9291, column: 1, scope: !2851)
!9517 = !DILocation(line: 9717, column: 25, scope: !2862)
!9518 = !DILocation(line: 9717, column: 41, scope: !2862)
!9519 = !DILocation(line: 9719, column: 15, scope: !2862)
!9520 = !DILocation(line: 9720, column: 5, scope: !2862)
!9521 = !DILocation(line: 9721, column: 5, scope: !2862)
!9522 = !DILocation(line: 9721, column: 10, scope: !2862)
!9523 = !DILocation(line: 9720, column: 9, scope: !2862)
!9524 = !DILocation(line: 9724, column: 10, scope: !9525)
!9525 = distinct !DILexicalBlock(scope: !2862, file: !1, line: 9724, column: 9)
!9526 = !DILocation(line: 9724, column: 9, scope: !2862)
!9527 = !DILocation(line: 9727, column: 5, scope: !2862)
!9528 = !DILocation(line: 9727, column: 11, scope: !2862)
!9529 = !DILocation(line: 9728, column: 19, scope: !2862)
!9530 = !DILocation(line: 9728, column: 11, scope: !2862)
!9531 = !DILocation(line: 9722, column: 12, scope: !2862)
!9532 = !DILocation(line: 9729, column: 13, scope: !9533)
!9533 = distinct !DILexicalBlock(scope: !2862, file: !1, line: 9729, column: 9)
!9534 = !DILocation(line: 9729, column: 9, scope: !2862)
!9535 = !DILocation(line: 9730, column: 13, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9537, file: !1, line: 9730, column: 13)
!9537 = distinct !DILexicalBlock(scope: !9533, file: !1, line: 9729, column: 19)
!9538 = !DILocation(line: 9730, column: 13, scope: !9537)
!9539 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !9540)
!9540 = distinct !DILocation(line: 9731, column: 13, scope: !9541)
!9541 = distinct !DILexicalBlock(scope: !9536, file: !1, line: 9730, column: 20)
!9542 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !9540)
!9543 = !DILocation(line: 9732, column: 13, scope: !9541)
!9544 = !DILocation(line: 9735, column: 13, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9536, file: !1, line: 9734, column: 14)
!9546 = !DILocation(line: 9739, column: 13, scope: !2875)
!9547 = !DILocation(line: 9739, column: 9, scope: !2862)
!9548 = !DILocation(line: 9740, column: 21, scope: !2874)
!9549 = !DILocation(line: 9740, column: 15, scope: !2874)
!9550 = !DILocation(line: 9741, column: 17, scope: !9551)
!9551 = distinct !DILexicalBlock(scope: !2874, file: !1, line: 9741, column: 13)
!9552 = !DILocation(line: 9741, column: 13, scope: !2874)
!9553 = !DILocation(line: 9743, column: 17, scope: !2874)
!9554 = !DILocation(line: 9743, column: 9, scope: !2874)
!9555 = !DILocation(line: 9744, column: 59, scope: !2874)
!9556 = !DILocation(line: 9744, column: 18, scope: !2874)
!9557 = !DILocation(line: 9745, column: 9, scope: !2874)
!9558 = !DILocation(line: 9742, column: 20, scope: !9551)
!9559 = !DILocation(line: 9748, column: 62, scope: !2875)
!9560 = !DILocation(line: 9748, column: 18, scope: !2875)
!9561 = !DILocation(line: 9750, column: 1, scope: !2862)
!9562 = !DILocation(line: 10263, column: 25, scope: !2902)
!9563 = !DILocation(line: 10263, column: 41, scope: !2902)
!9564 = !DILocation(line: 10265, column: 15, scope: !2902)
!9565 = !DILocation(line: 10266, column: 5, scope: !2902)
!9566 = !DILocation(line: 10266, column: 9, scope: !2902)
!9567 = !DILocation(line: 10268, column: 9, scope: !2910)
!9568 = !DILocation(line: 10268, column: 9, scope: !2902)
!9569 = !DILocation(line: 10271, column: 9, scope: !2909)
!9570 = !DILocation(line: 10271, column: 15, scope: !2909)
!9571 = !DILocation(line: 10272, column: 25, scope: !2909)
!9572 = !DILocation(line: 10272, column: 17, scope: !2909)
!9573 = !DILocation(line: 10269, column: 14, scope: !2909)
!9574 = !DILocation(line: 10273, column: 19, scope: !9575)
!9575 = distinct !DILexicalBlock(scope: !2909, file: !1, line: 10273, column: 13)
!9576 = !DILocation(line: 10273, column: 25, scope: !9575)
!9577 = !DILocation(line: 10273, column: 28, scope: !9578)
!9578 = !DILexicalBlockFile(scope: !9575, file: !1, discriminator: 1)
!9579 = !DILocation(line: 10273, column: 34, scope: !9575)
!9580 = !DILocation(line: 10273, column: 13, scope: !2909)
!9581 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !9582)
!9582 = distinct !DILocation(line: 10274, column: 13, scope: !9575)
!9583 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !9582)
!9584 = !DILocation(line: 10274, column: 13, scope: !9575)
!9585 = !DILocation(line: 10276, column: 22, scope: !9575)
!9586 = !DILocation(line: 10279, column: 1, scope: !2902)
!9587 = !DILocation(line: 10278, column: 5, scope: !2902)
!9588 = !DILocation(line: 9481, column: 27, scope: !2915)
!9589 = !DILocation(line: 9481, column: 43, scope: !2915)
!9590 = !DILocation(line: 9483, column: 15, scope: !2915)
!9591 = !DILocation(line: 9484, column: 5, scope: !2915)
!9592 = !DILocation(line: 9484, column: 9, scope: !2915)
!9593 = !DILocation(line: 9484, column: 15, scope: !2915)
!9594 = !DILocation(line: 9486, column: 9, scope: !2924)
!9595 = !DILocation(line: 9486, column: 9, scope: !2915)
!9596 = !DILocation(line: 9490, column: 9, scope: !2923)
!9597 = !DILocation(line: 9490, column: 15, scope: !2923)
!9598 = !DILocation(line: 9491, column: 27, scope: !2923)
!9599 = !DILocation(line: 9491, column: 31, scope: !2923)
!9600 = !DILocation(line: 9491, column: 17, scope: !2923)
!9601 = !DILocation(line: 9488, column: 14, scope: !2923)
!9602 = !DILocation(line: 9492, column: 19, scope: !9603)
!9603 = distinct !DILexicalBlock(scope: !2923, file: !1, line: 9492, column: 13)
!9604 = !DILocation(line: 9492, column: 25, scope: !9603)
!9605 = !DILocation(line: 9492, column: 28, scope: !9606)
!9606 = !DILexicalBlockFile(scope: !9603, file: !1, discriminator: 1)
!9607 = !DILocation(line: 9492, column: 34, scope: !9603)
!9608 = !DILocation(line: 9492, column: 13, scope: !2923)
!9609 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !9610)
!9610 = distinct !DILocation(line: 9493, column: 13, scope: !9603)
!9611 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !9610)
!9612 = !DILocation(line: 9493, column: 13, scope: !9603)
!9613 = !DILocation(line: 9495, column: 22, scope: !9603)
!9614 = !DILocation(line: 9498, column: 1, scope: !2915)
!9615 = !DILocation(line: 9497, column: 5, scope: !2915)
!9616 = !DILocation(line: 9511, column: 26, scope: !2929)
!9617 = !DILocation(line: 9511, column: 42, scope: !2929)
!9618 = !DILocation(line: 9511, column: 58, scope: !2929)
!9619 = !DILocation(line: 9513, column: 5, scope: !2929)
!9620 = !DILocation(line: 9514, column: 15, scope: !2929)
!9621 = !DILocation(line: 9515, column: 5, scope: !2929)
!9622 = !DILocation(line: 9518, column: 5, scope: !2929)
!9623 = !DILocation(line: 9519, column: 10, scope: !2929)
!9624 = !DILocation(line: 9519, column: 24, scope: !2929)
!9625 = !DILocation(line: 9521, column: 10, scope: !2929)
!9626 = !DILocation(line: 9521, column: 19, scope: !2929)
!9627 = !DILocation(line: 9513, column: 12, scope: !2929)
!9628 = !DILocation(line: 9515, column: 9, scope: !2929)
!9629 = !DILocation(line: 9523, column: 9, scope: !2939)
!9630 = !DILocation(line: 9523, column: 9, scope: !2929)
!9631 = !DILocation(line: 9528, column: 5, scope: !2938)
!9632 = !DILocation(line: 9528, column: 11, scope: !2938)
!9633 = !DILocation(line: 9530, column: 14, scope: !9634)
!9634 = distinct !DILexicalBlock(scope: !2938, file: !1, line: 9530, column: 9)
!9635 = !DILocation(line: 9530, column: 17, scope: !9634)
!9636 = !DILocation(line: 9530, column: 9, scope: !2938)
!9637 = !DILocation(line: 9531, column: 36, scope: !9634)
!9638 = !DILocation(line: 9531, column: 17, scope: !9634)
!9639 = !DILocation(line: 9526, column: 10, scope: !2938)
!9640 = !DILocation(line: 9531, column: 9, scope: !9634)
!9641 = !DILocation(line: 9534, column: 31, scope: !9634)
!9642 = !DILocation(line: 9534, column: 39, scope: !9634)
!9643 = !DILocation(line: 9534, column: 17, scope: !9634)
!9644 = !DILocation(line: 9535, column: 15, scope: !9645)
!9645 = distinct !DILexicalBlock(scope: !2938, file: !1, line: 9535, column: 9)
!9646 = !DILocation(line: 9535, column: 21, scope: !9645)
!9647 = !DILocation(line: 9535, column: 24, scope: !9648)
!9648 = !DILexicalBlockFile(scope: !9645, file: !1, discriminator: 1)
!9649 = !DILocation(line: 9535, column: 9, scope: !2938)
!9650 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !9651)
!9651 = distinct !DILocation(line: 9538, column: 13, scope: !9652)
!9652 = distinct !DILexicalBlock(scope: !9653, file: !1, line: 9536, column: 13)
!9653 = distinct !DILexicalBlock(scope: !9645, file: !1, line: 9535, column: 36)
!9654 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !9651)
!9655 = !DILocation(line: 9538, column: 13, scope: !9652)
!9656 = !DILocation(line: 1311, column: 49, scope: !992, inlinedAt: !9657)
!9657 = distinct !DILocation(line: 9540, column: 22, scope: !9652)
!9658 = !DILocation(line: 1311, column: 12, scope: !992, inlinedAt: !9657)
!9659 = !DILocation(line: 9543, column: 18, scope: !9645)
!9660 = !DILocation(line: 781, column: 22, scope: !1050, inlinedAt: !9661)
!9661 = distinct !DILocation(line: 9545, column: 5, scope: !2929)
!9662 = !DILocation(line: 782, column: 15, scope: !1058, inlinedAt: !9661)
!9663 = !DILocation(line: 782, column: 9, scope: !1058, inlinedAt: !9661)
!9664 = !DILocation(line: 782, column: 9, scope: !1050, inlinedAt: !9661)
!9665 = !DILocation(line: 783, column: 9, scope: !4639, inlinedAt: !9661)
!9666 = !DILocation(line: 783, column: 9, scope: !4641, inlinedAt: !9661)
!9667 = !DILocation(line: 783, column: 9, scope: !4643, inlinedAt: !9661)
!9668 = !DILocation(line: 783, column: 9, scope: !4645, inlinedAt: !9661)
!9669 = !DILocation(line: 783, column: 9, scope: !1060, inlinedAt: !9661)
!9670 = !DILocation(line: 783, column: 9, scope: !4648, inlinedAt: !9661)
!9671 = !DILocation(line: 9545, column: 5, scope: !2929)
!9672 = !DILocation(line: 9547, column: 1, scope: !2929)
!9673 = !DILocation(line: 9546, column: 5, scope: !2929)
!9674 = !DILocation(line: 10363, column: 23, scope: !2940)
!9675 = !DILocation(line: 10363, column: 39, scope: !2940)
!9676 = !DILocation(line: 10365, column: 5, scope: !2940)
!9677 = !DILocation(line: 10474, column: 28, scope: !2944)
!9678 = !DILocation(line: 10474, column: 44, scope: !2944)
!9679 = !DILocation(line: 10476, column: 5, scope: !2944)
!9680 = !DILocation(line: 10476, column: 12, scope: !2944)
!9681 = !DILocation(line: 10477, column: 20, scope: !9682)
!9682 = distinct !DILexicalBlock(scope: !2944, file: !1, line: 10477, column: 9)
!9683 = !DILocation(line: 10477, column: 9, scope: !9682)
!9684 = !DILocation(line: 10477, column: 31, scope: !9682)
!9685 = !DILocation(line: 10477, column: 9, scope: !2944)
!9686 = !DILocation(line: 10478, column: 25, scope: !9687)
!9687 = distinct !DILexicalBlock(scope: !9682, file: !1, line: 10477, column: 36)
!9688 = !DILocation(line: 10478, column: 9, scope: !9687)
!9689 = !DILocation(line: 10479, column: 9, scope: !9687)
!9690 = !DILocation(line: 10481, column: 37, scope: !9682)
!9691 = !{!9692, !9692, i64 0}
!9692 = !{!"double", !3872, i64 0}
!9693 = !DILocation(line: 10481, column: 49, scope: !9682)
!9694 = !DILocation(line: 10481, column: 61, scope: !9682)
!9695 = !DILocation(line: 10481, column: 16, scope: !9682)
!9696 = !DILocation(line: 10481, column: 9, scope: !9682)
!9697 = !DILocation(line: 10482, column: 1, scope: !2944)
!9698 = !DILocation(line: 10890, column: 25, scope: !2950)
!9699 = !DILocation(line: 10890, column: 41, scope: !2950)
!9700 = !DILocation(line: 10892, column: 5, scope: !2950)
!9701 = !DILocation(line: 10892, column: 16, scope: !2950)
!9702 = !DILocation(line: 10897, column: 10, scope: !9703)
!9703 = distinct !DILexicalBlock(scope: !2950, file: !1, line: 10897, column: 9)
!9704 = !DILocation(line: 10897, column: 9, scope: !2950)
!9705 = !DILocation(line: 10899, column: 9, scope: !9706)
!9706 = distinct !DILexicalBlock(scope: !2950, file: !1, line: 10899, column: 9)
!9707 = !DILocation(line: 10899, column: 14, scope: !9706)
!9708 = !DILocation(line: 10899, column: 9, scope: !2950)
!9709 = !DILocation(line: 10900, column: 29, scope: !9706)
!9710 = !DILocation(line: 10900, column: 16, scope: !9706)
!9711 = !DILocation(line: 10900, column: 9, scope: !9706)
!9712 = !DILocation(line: 10902, column: 14, scope: !2950)
!9713 = !DILocation(line: 10893, column: 15, scope: !2950)
!9714 = !DILocation(line: 10903, column: 16, scope: !9715)
!9715 = distinct !DILexicalBlock(scope: !2950, file: !1, line: 10903, column: 9)
!9716 = !DILocation(line: 10903, column: 9, scope: !2950)
!9717 = !DILocation(line: 10906, column: 25, scope: !2950)
!9718 = !DILocation(line: 10907, column: 25, scope: !2950)
!9719 = !DILocation(line: 10906, column: 11, scope: !2950)
!9720 = !DILocation(line: 10894, column: 9, scope: !2950)
!9721 = !DILocation(line: 10908, column: 13, scope: !2960)
!9722 = !DILocation(line: 10908, column: 9, scope: !2950)
!9723 = !DILocation(line: 10909, column: 9, scope: !9724)
!9724 = !DILexicalBlockFile(scope: !2958, file: !1, discriminator: 1)
!9725 = !DILocation(line: 10909, column: 9, scope: !9726)
!9726 = distinct !DILexicalBlock(scope: !2958, file: !1, line: 10909, column: 9)
!9727 = !DILocation(line: 10909, column: 9, scope: !2958)
!9728 = !DILocation(line: 10909, column: 9, scope: !9729)
!9729 = !DILexicalBlockFile(scope: !9726, file: !1, discriminator: 3)
!9730 = !DILocation(line: 10913, column: 1, scope: !2950)
!9731 = !DILocation(line: 10507, column: 28, scope: !2961)
!9732 = !DILocation(line: 10507, column: 44, scope: !2961)
!9733 = !DILocation(line: 10510, column: 5, scope: !2961)
!9734 = !DILocation(line: 10510, column: 11, scope: !2961)
!9735 = !DILocation(line: 10510, column: 17, scope: !2961)
!9736 = !DILocation(line: 10510, column: 23, scope: !2961)
!9737 = !DILocation(line: 10511, column: 10, scope: !9738)
!9738 = distinct !DILexicalBlock(scope: !2961, file: !1, line: 10511, column: 9)
!9739 = !DILocation(line: 10511, column: 9, scope: !2961)
!9740 = !DILocation(line: 10516, column: 19, scope: !9741)
!9741 = distinct !DILexicalBlock(scope: !2961, file: !1, line: 10516, column: 9)
!9742 = !DILocation(line: 10516, column: 25, scope: !9741)
!9743 = !DILocation(line: 10516, column: 31, scope: !9741)
!9744 = !DILocation(line: 10516, column: 9, scope: !9741)
!9745 = !DILocation(line: 10516, column: 37, scope: !9741)
!9746 = !DILocation(line: 10516, column: 9, scope: !2961)
!9747 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !9748)
!9748 = distinct !DILocation(line: 10517, column: 16, scope: !9741)
!9749 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !9748)
!9750 = !DILocation(line: 10517, column: 9, scope: !9741)
!9751 = !DILocation(line: 10518, column: 5, scope: !2961)
!9752 = !DILocation(line: 10519, column: 1, scope: !2961)
!9753 = !DILocation(line: 10528, column: 28, scope: !2968)
!9754 = !DILocation(line: 10528, column: 44, scope: !2968)
!9755 = !DILocation(line: 10530, column: 5, scope: !2968)
!9756 = !DILocation(line: 10530, column: 11, scope: !2968)
!9757 = !DILocation(line: 10530, column: 17, scope: !2968)
!9758 = !DILocation(line: 10530, column: 23, scope: !2968)
!9759 = !DILocation(line: 10531, column: 10, scope: !9760)
!9760 = distinct !DILexicalBlock(scope: !2968, file: !1, line: 10531, column: 9)
!9761 = !DILocation(line: 10531, column: 9, scope: !2968)
!9762 = !DILocation(line: 10536, column: 19, scope: !9763)
!9763 = distinct !DILexicalBlock(scope: !2968, file: !1, line: 10536, column: 9)
!9764 = !DILocation(line: 10536, column: 25, scope: !9763)
!9765 = !DILocation(line: 10536, column: 31, scope: !9763)
!9766 = !DILocation(line: 10536, column: 9, scope: !9763)
!9767 = !DILocation(line: 10536, column: 37, scope: !9763)
!9768 = !DILocation(line: 10536, column: 9, scope: !2968)
!9769 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !9770)
!9770 = distinct !DILocation(line: 10537, column: 16, scope: !9763)
!9771 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !9770)
!9772 = !DILocation(line: 10537, column: 9, scope: !9763)
!9773 = !DILocation(line: 10538, column: 5, scope: !2968)
!9774 = !DILocation(line: 10539, column: 1, scope: !2968)
!9775 = !DILocation(line: 10548, column: 28, scope: !2975)
!9776 = !DILocation(line: 10548, column: 44, scope: !2975)
!9777 = !DILocation(line: 10550, column: 5, scope: !2975)
!9778 = !DILocation(line: 10550, column: 11, scope: !2975)
!9779 = !DILocation(line: 10550, column: 17, scope: !2975)
!9780 = !DILocation(line: 10550, column: 23, scope: !2975)
!9781 = !DILocation(line: 10551, column: 9, scope: !9782)
!9782 = distinct !DILexicalBlock(scope: !2975, file: !1, line: 10551, column: 9)
!9783 = !DILocation(line: 10551, column: 40, scope: !9782)
!9784 = !DILocation(line: 10551, column: 9, scope: !2975)
!9785 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !9786)
!9786 = distinct !DILocation(line: 10552, column: 16, scope: !9782)
!9787 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !9786)
!9788 = !DILocation(line: 10552, column: 9, scope: !9782)
!9789 = !DILocation(line: 10553, column: 51, scope: !2975)
!9790 = !DILocation(line: 396, column: 23, scope: !689, inlinedAt: !9791)
!9791 = distinct !DILocation(line: 10553, column: 35, scope: !2975)
!9792 = !DILocation(line: 398, column: 13, scope: !3842, inlinedAt: !9791)
!9793 = !DILocation(line: 398, column: 9, scope: !689, inlinedAt: !9791)
!9794 = !DILocation(line: 399, column: 16, scope: !3842, inlinedAt: !9791)
!9795 = !DILocation(line: 399, column: 9, scope: !3842, inlinedAt: !9791)
!9796 = !DILocation(line: 400, column: 36, scope: !689, inlinedAt: !9791)
!9797 = !DILocation(line: 400, column: 12, scope: !689, inlinedAt: !9791)
!9798 = !DILocation(line: 400, column: 5, scope: !689, inlinedAt: !9791)
!9799 = !DILocation(line: 10553, column: 35, scope: !2975)
!9800 = !DILocation(line: 10554, column: 51, scope: !2975)
!9801 = !DILocation(line: 396, column: 23, scope: !689, inlinedAt: !9802)
!9802 = distinct !DILocation(line: 10554, column: 35, scope: !2975)
!9803 = !DILocation(line: 398, column: 13, scope: !3842, inlinedAt: !9802)
!9804 = !DILocation(line: 398, column: 9, scope: !689, inlinedAt: !9802)
!9805 = !DILocation(line: 399, column: 16, scope: !3842, inlinedAt: !9802)
!9806 = !DILocation(line: 399, column: 9, scope: !3842, inlinedAt: !9802)
!9807 = !DILocation(line: 400, column: 36, scope: !689, inlinedAt: !9802)
!9808 = !DILocation(line: 400, column: 12, scope: !689, inlinedAt: !9802)
!9809 = !DILocation(line: 400, column: 5, scope: !689, inlinedAt: !9802)
!9810 = !DILocation(line: 10554, column: 35, scope: !2975)
!9811 = !DILocation(line: 10555, column: 51, scope: !2975)
!9812 = !DILocation(line: 396, column: 23, scope: !689, inlinedAt: !9813)
!9813 = distinct !DILocation(line: 10555, column: 35, scope: !2975)
!9814 = !DILocation(line: 398, column: 13, scope: !3842, inlinedAt: !9813)
!9815 = !DILocation(line: 398, column: 9, scope: !689, inlinedAt: !9813)
!9816 = !DILocation(line: 399, column: 16, scope: !3842, inlinedAt: !9813)
!9817 = !DILocation(line: 399, column: 9, scope: !3842, inlinedAt: !9813)
!9818 = !DILocation(line: 400, column: 36, scope: !689, inlinedAt: !9813)
!9819 = !DILocation(line: 400, column: 12, scope: !689, inlinedAt: !9813)
!9820 = !DILocation(line: 400, column: 5, scope: !689, inlinedAt: !9813)
!9821 = !DILocation(line: 10555, column: 35, scope: !2975)
!9822 = !DILocation(line: 10553, column: 12, scope: !2975)
!9823 = !DILocation(line: 10553, column: 5, scope: !2975)
!9824 = !DILocation(line: 10556, column: 1, scope: !2975)
!9825 = !DILocation(line: 10565, column: 28, scope: !2982)
!9826 = !DILocation(line: 10565, column: 44, scope: !2982)
!9827 = !DILocation(line: 10567, column: 5, scope: !2982)
!9828 = !DILocation(line: 10567, column: 11, scope: !2982)
!9829 = !DILocation(line: 10567, column: 17, scope: !2982)
!9830 = !DILocation(line: 10567, column: 23, scope: !2982)
!9831 = !DILocation(line: 10568, column: 9, scope: !9832)
!9832 = distinct !DILexicalBlock(scope: !2982, file: !1, line: 10568, column: 9)
!9833 = !DILocation(line: 10568, column: 40, scope: !9832)
!9834 = !DILocation(line: 10568, column: 9, scope: !2982)
!9835 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !9836)
!9836 = distinct !DILocation(line: 10569, column: 16, scope: !9832)
!9837 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !9836)
!9838 = !DILocation(line: 10569, column: 9, scope: !9832)
!9839 = !DILocation(line: 10570, column: 51, scope: !2982)
!9840 = !DILocation(line: 404, column: 23, scope: !694, inlinedAt: !9841)
!9841 = distinct !DILocation(line: 10570, column: 35, scope: !2982)
!9842 = !DILocation(line: 406, column: 13, scope: !3852, inlinedAt: !9841)
!9843 = !DILocation(line: 406, column: 9, scope: !694, inlinedAt: !9841)
!9844 = !DILocation(line: 407, column: 16, scope: !3852, inlinedAt: !9841)
!9845 = !DILocation(line: 407, column: 9, scope: !3852, inlinedAt: !9841)
!9846 = !DILocation(line: 408, column: 36, scope: !694, inlinedAt: !9841)
!9847 = !DILocation(line: 408, column: 12, scope: !694, inlinedAt: !9841)
!9848 = !DILocation(line: 408, column: 5, scope: !694, inlinedAt: !9841)
!9849 = !DILocation(line: 10570, column: 35, scope: !2982)
!9850 = !DILocation(line: 10571, column: 51, scope: !2982)
!9851 = !DILocation(line: 404, column: 23, scope: !694, inlinedAt: !9852)
!9852 = distinct !DILocation(line: 10571, column: 35, scope: !2982)
!9853 = !DILocation(line: 406, column: 13, scope: !3852, inlinedAt: !9852)
!9854 = !DILocation(line: 406, column: 9, scope: !694, inlinedAt: !9852)
!9855 = !DILocation(line: 407, column: 16, scope: !3852, inlinedAt: !9852)
!9856 = !DILocation(line: 407, column: 9, scope: !3852, inlinedAt: !9852)
!9857 = !DILocation(line: 408, column: 36, scope: !694, inlinedAt: !9852)
!9858 = !DILocation(line: 408, column: 12, scope: !694, inlinedAt: !9852)
!9859 = !DILocation(line: 408, column: 5, scope: !694, inlinedAt: !9852)
!9860 = !DILocation(line: 10571, column: 35, scope: !2982)
!9861 = !DILocation(line: 10572, column: 51, scope: !2982)
!9862 = !DILocation(line: 404, column: 23, scope: !694, inlinedAt: !9863)
!9863 = distinct !DILocation(line: 10572, column: 35, scope: !2982)
!9864 = !DILocation(line: 406, column: 13, scope: !3852, inlinedAt: !9863)
!9865 = !DILocation(line: 406, column: 9, scope: !694, inlinedAt: !9863)
!9866 = !DILocation(line: 407, column: 16, scope: !3852, inlinedAt: !9863)
!9867 = !DILocation(line: 407, column: 9, scope: !3852, inlinedAt: !9863)
!9868 = !DILocation(line: 408, column: 36, scope: !694, inlinedAt: !9863)
!9869 = !DILocation(line: 408, column: 12, scope: !694, inlinedAt: !9863)
!9870 = !DILocation(line: 408, column: 5, scope: !694, inlinedAt: !9863)
!9871 = !DILocation(line: 10572, column: 35, scope: !2982)
!9872 = !DILocation(line: 10570, column: 12, scope: !2982)
!9873 = !DILocation(line: 10570, column: 5, scope: !2982)
!9874 = !DILocation(line: 10573, column: 1, scope: !2982)
!9875 = !DILocation(line: 10665, column: 26, scope: !2989)
!9876 = !DILocation(line: 10665, column: 42, scope: !2989)
!9877 = !DILocation(line: 10665, column: 58, scope: !2989)
!9878 = !DILocation(line: 10667, column: 5, scope: !2989)
!9879 = !DILocation(line: 10668, column: 5, scope: !2989)
!9880 = !DILocation(line: 10669, column: 5, scope: !2989)
!9881 = !DILocation(line: 10670, column: 5, scope: !2989)
!9882 = !DILocation(line: 10670, column: 9, scope: !2989)
!9883 = !DILocation(line: 10671, column: 5, scope: !2989)
!9884 = !DILocation(line: 10671, column: 9, scope: !2989)
!9885 = !DILocation(line: 10673, column: 15, scope: !2989)
!9886 = !DILocation(line: 10677, column: 5, scope: !2989)
!9887 = !DILocation(line: 10678, column: 10, scope: !2989)
!9888 = !DILocation(line: 10678, column: 24, scope: !2989)
!9889 = !DILocation(line: 10679, column: 10, scope: !2989)
!9890 = !DILocation(line: 10679, column: 19, scope: !2989)
!9891 = !DILocation(line: 10680, column: 5, scope: !2989)
!9892 = !DILocation(line: 10681, column: 5, scope: !2989)
!9893 = !DILocation(line: 10667, column: 12, scope: !2989)
!9894 = !DILocation(line: 10668, column: 12, scope: !2989)
!9895 = !DILocation(line: 10669, column: 15, scope: !2989)
!9896 = !DILocation(line: 10682, column: 10, scope: !9897)
!9897 = distinct !DILexicalBlock(scope: !2989, file: !1, line: 10682, column: 9)
!9898 = !DILocation(line: 10682, column: 9, scope: !2989)
!9899 = !DILocation(line: 10690, column: 57, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !2989, file: !1, line: 10690, column: 9)
!9901 = !DILocation(line: 10690, column: 61, scope: !9900)
!9902 = !DILocation(line: 979, column: 38, scope: !942, inlinedAt: !9903)
!9903 = distinct !DILocation(line: 10690, column: 9, scope: !9900)
!9904 = !DILocation(line: 979, column: 57, scope: !942, inlinedAt: !9903)
!9905 = !DILocation(line: 980, column: 36, scope: !942, inlinedAt: !9903)
!9906 = !DILocation(line: 981, column: 13, scope: !4956, inlinedAt: !9903)
!9907 = !DILocation(line: 981, column: 23, scope: !4958, inlinedAt: !9903)
!9908 = !DILocation(line: 981, column: 18, scope: !4956, inlinedAt: !9903)
!9909 = !DILocation(line: 982, column: 22, scope: !4961, inlinedAt: !9903)
!9910 = !DILocation(line: 982, column: 9, scope: !4961, inlinedAt: !9903)
!9911 = !DILocation(line: 10690, column: 9, scope: !2989)
!9912 = !DILocation(line: 10693, column: 5, scope: !3002)
!9913 = !DILocation(line: 10694, column: 14, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !3002, file: !1, line: 10694, column: 9)
!9915 = !DILocation(line: 10694, column: 17, scope: !9914)
!9916 = !DILocation(line: 10694, column: 9, scope: !3002)
!9917 = !DILocation(line: 10695, column: 47, scope: !9914)
!9918 = !DILocation(line: 10696, column: 34, scope: !9914)
!9919 = !DILocation(line: 10696, column: 45, scope: !9914)
!9920 = !DILocation(line: 10696, column: 50, scope: !9914)
!9921 = !DILocation(line: 10695, column: 18, scope: !9914)
!9922 = !DILocation(line: 10672, column: 9, scope: !2989)
!9923 = !DILocation(line: 10695, column: 9, scope: !9914)
!9924 = !DILocation(line: 10697, column: 14, scope: !9925)
!9925 = distinct !DILexicalBlock(scope: !9914, file: !1, line: 10697, column: 14)
!9926 = !DILocation(line: 10698, column: 32, scope: !9925)
!9927 = !DILocation(line: 10698, column: 50, scope: !9925)
!9928 = !DILocation(line: 10699, column: 34, scope: !9925)
!9929 = !DILocation(line: 10699, column: 45, scope: !9925)
!9930 = !DILocation(line: 10699, column: 50, scope: !9925)
!9931 = !DILocation(line: 10697, column: 14, scope: !9914)
!9932 = !DILocation(line: 10698, column: 18, scope: !9925)
!9933 = !DILocation(line: 10698, column: 9, scope: !9925)
!9934 = !DILocation(line: 10701, column: 18, scope: !9925)
!9935 = !DILocation(line: 10703, column: 5, scope: !3002)
!9936 = !DILocation(line: 10705, column: 9, scope: !9937)
!9937 = distinct !DILexicalBlock(scope: !2989, file: !1, line: 10705, column: 9)
!9938 = !DILocation(line: 10705, column: 9, scope: !2989)
!9939 = !DILocation(line: 1311, column: 49, scope: !992, inlinedAt: !9940)
!9940 = distinct !DILocation(line: 10706, column: 24, scope: !9941)
!9941 = distinct !DILexicalBlock(scope: !9937, file: !1, line: 10705, column: 17)
!9942 = !DILocation(line: 1311, column: 12, scope: !992, inlinedAt: !9940)
!9943 = !DILocation(line: 10707, column: 9, scope: !9941)
!9944 = !DILocation(line: 10711, column: 5, scope: !2989)
!9945 = !DILocation(line: 781, column: 22, scope: !1050, inlinedAt: !9946)
!9946 = distinct !DILocation(line: 10714, column: 5, scope: !2989)
!9947 = !DILocation(line: 782, column: 15, scope: !1058, inlinedAt: !9946)
!9948 = !DILocation(line: 782, column: 9, scope: !1058, inlinedAt: !9946)
!9949 = !DILocation(line: 782, column: 9, scope: !1050, inlinedAt: !9946)
!9950 = !DILocation(line: 783, column: 9, scope: !4639, inlinedAt: !9946)
!9951 = !DILocation(line: 783, column: 9, scope: !4641, inlinedAt: !9946)
!9952 = !DILocation(line: 783, column: 9, scope: !4643, inlinedAt: !9946)
!9953 = !DILocation(line: 783, column: 9, scope: !4645, inlinedAt: !9946)
!9954 = !DILocation(line: 783, column: 9, scope: !1060, inlinedAt: !9946)
!9955 = !DILocation(line: 783, column: 9, scope: !4648, inlinedAt: !9946)
!9956 = !DILocation(line: 10714, column: 5, scope: !2989)
!9957 = !DILocation(line: 781, column: 22, scope: !1050, inlinedAt: !9958)
!9958 = distinct !DILocation(line: 10715, column: 5, scope: !2989)
!9959 = !DILocation(line: 782, column: 15, scope: !1058, inlinedAt: !9958)
!9960 = !DILocation(line: 782, column: 9, scope: !1058, inlinedAt: !9958)
!9961 = !DILocation(line: 782, column: 9, scope: !1050, inlinedAt: !9958)
!9962 = !DILocation(line: 783, column: 9, scope: !4639, inlinedAt: !9958)
!9963 = !DILocation(line: 783, column: 9, scope: !4641, inlinedAt: !9958)
!9964 = !DILocation(line: 783, column: 9, scope: !4643, inlinedAt: !9958)
!9965 = !DILocation(line: 783, column: 9, scope: !4645, inlinedAt: !9958)
!9966 = !DILocation(line: 783, column: 9, scope: !1060, inlinedAt: !9958)
!9967 = !DILocation(line: 783, column: 9, scope: !4648, inlinedAt: !9958)
!9968 = !DILocation(line: 10715, column: 5, scope: !2989)
!9969 = !DILocation(line: 10716, column: 5, scope: !2989)
!9970 = !DILocation(line: 10718, column: 5, scope: !2989)
!9971 = !DILocation(line: 10719, column: 1, scope: !2989)
!9972 = !DILocation(line: 10588, column: 26, scope: !3003)
!9973 = !DILocation(line: 10588, column: 42, scope: !3003)
!9974 = !DILocation(line: 10588, column: 58, scope: !3003)
!9975 = !DILocation(line: 10590, column: 5, scope: !3003)
!9976 = !DILocation(line: 10591, column: 5, scope: !3003)
!9977 = !DILocation(line: 10592, column: 5, scope: !3003)
!9978 = !DILocation(line: 10592, column: 9, scope: !3003)
!9979 = !DILocation(line: 10593, column: 5, scope: !3003)
!9980 = !DILocation(line: 10593, column: 15, scope: !3003)
!9981 = !DILocation(line: 10597, column: 5, scope: !3003)
!9982 = !DILocation(line: 10598, column: 5, scope: !3003)
!9983 = !DILocation(line: 10599, column: 10, scope: !3003)
!9984 = !DILocation(line: 10599, column: 24, scope: !3003)
!9985 = !DILocation(line: 10600, column: 15, scope: !3003)
!9986 = !DILocation(line: 10600, column: 29, scope: !3003)
!9987 = !DILocation(line: 10601, column: 10, scope: !3003)
!9988 = !DILocation(line: 10601, column: 19, scope: !3003)
!9989 = !DILocation(line: 10590, column: 12, scope: !3003)
!9990 = !DILocation(line: 10591, column: 12, scope: !3003)
!9991 = !DILocation(line: 10602, column: 10, scope: !9992)
!9992 = distinct !DILexicalBlock(scope: !3003, file: !1, line: 10602, column: 9)
!9993 = !DILocation(line: 10602, column: 9, scope: !3003)
!9994 = !DILocation(line: 10608, column: 57, scope: !9995)
!9995 = distinct !DILexicalBlock(scope: !3003, file: !1, line: 10608, column: 9)
!9996 = !DILocation(line: 10608, column: 61, scope: !9995)
!9997 = !DILocation(line: 979, column: 38, scope: !942, inlinedAt: !9998)
!9998 = distinct !DILocation(line: 10608, column: 9, scope: !9995)
!9999 = !DILocation(line: 979, column: 57, scope: !942, inlinedAt: !9998)
!10000 = !DILocation(line: 980, column: 36, scope: !942, inlinedAt: !9998)
!10001 = !DILocation(line: 981, column: 13, scope: !4956, inlinedAt: !9998)
!10002 = !DILocation(line: 981, column: 23, scope: !4958, inlinedAt: !9998)
!10003 = !DILocation(line: 981, column: 18, scope: !4956, inlinedAt: !9998)
!10004 = !DILocation(line: 10615, column: 20, scope: !3014)
!10005 = !DILocation(line: 10627, column: 51, scope: !10006)
!10006 = distinct !DILexicalBlock(scope: !3020, file: !1, line: 10626, column: 13)
!10007 = !DILocation(line: 10629, column: 36, scope: !10008)
!10008 = distinct !DILexicalBlock(scope: !10006, file: !1, line: 10628, column: 18)
!10009 = !DILocation(line: 10620, column: 18, scope: !3014)
!10010 = !DILocation(line: 10620, column: 16, scope: !3014)
!10011 = !DILocation(line: 10621, column: 14, scope: !10012)
!10012 = distinct !DILexicalBlock(scope: !3014, file: !1, line: 10621, column: 13)
!10013 = !DILocation(line: 10621, column: 13, scope: !3014)
!10014 = !DILocation(line: 982, column: 22, scope: !4961, inlinedAt: !9998)
!10015 = !DILocation(line: 982, column: 9, scope: !4961, inlinedAt: !9998)
!10016 = !DILocation(line: 10608, column: 9, scope: !3003)
!10017 = !DILocation(line: 10623, column: 15, scope: !3014)
!10018 = !DILocation(line: 10612, column: 15, scope: !3014)
!10019 = !DILocation(line: 10625, column: 9, scope: !3020)
!10020 = !DILocation(line: 10626, column: 18, scope: !10006)
!10021 = !DILocation(line: 10626, column: 21, scope: !10006)
!10022 = !DILocation(line: 10626, column: 13, scope: !3020)
!10023 = !DILocation(line: 10627, column: 22, scope: !10006)
!10024 = !DILocation(line: 10613, column: 17, scope: !3014)
!10025 = !DILocation(line: 10627, column: 13, scope: !10006)
!10026 = !DILocation(line: 10628, column: 18, scope: !10008)
!10027 = !DILocation(line: 10629, column: 54, scope: !10008)
!10028 = !DILocation(line: 10628, column: 18, scope: !10006)
!10029 = !DILocation(line: 10629, column: 22, scope: !10008)
!10030 = !DILocation(line: 10629, column: 13, scope: !10008)
!10031 = !DILocation(line: 10631, column: 22, scope: !10008)
!10032 = !DILocation(line: 10632, column: 9, scope: !3020)
!10033 = !DILocation(line: 10634, column: 20, scope: !3024)
!10034 = !DILocation(line: 10634, column: 13, scope: !3014)
!10035 = !DILocation(line: 10635, column: 13, scope: !10036)
!10036 = !DILexicalBlockFile(scope: !3022, file: !1, discriminator: 1)
!10037 = !DILocation(line: 10635, column: 13, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !3022, file: !1, line: 10635, column: 13)
!10039 = !DILocation(line: 10635, column: 13, scope: !3022)
!10040 = !DILocation(line: 10635, column: 13, scope: !10041)
!10041 = !DILexicalBlockFile(scope: !10038, file: !1, discriminator: 3)
!10042 = !DILocation(line: 10636, column: 20, scope: !3023)
!10043 = !DILocation(line: 10637, column: 17, scope: !10044)
!10044 = distinct !DILexicalBlock(scope: !3023, file: !1, line: 10637, column: 17)
!10045 = !DILocation(line: 10637, column: 23, scope: !10044)
!10046 = !DILocation(line: 10637, column: 17, scope: !3023)
!10047 = !DILocation(line: 1311, column: 49, scope: !992, inlinedAt: !10048)
!10048 = distinct !DILocation(line: 10639, column: 13, scope: !3023)
!10049 = !DILocation(line: 1311, column: 12, scope: !992, inlinedAt: !10048)
!10050 = !DILocation(line: 10640, column: 13, scope: !3023)
!10051 = !DILocation(line: 10643, column: 20, scope: !10052)
!10052 = distinct !DILexicalBlock(scope: !3014, file: !1, line: 10643, column: 13)
!10053 = !DILocation(line: 10643, column: 13, scope: !3014)
!10054 = !DILocation(line: 10645, column: 13, scope: !10055)
!10055 = distinct !DILexicalBlock(scope: !10052, file: !1, line: 10643, column: 36)
!10056 = !DILocation(line: 10646, column: 9, scope: !10055)
!10057 = !DILocation(line: 781, column: 22, scope: !1050, inlinedAt: !10058)
!10058 = distinct !DILocation(line: 10651, column: 5, scope: !3003)
!10059 = !DILocation(line: 782, column: 15, scope: !1058, inlinedAt: !10058)
!10060 = !DILocation(line: 782, column: 9, scope: !1058, inlinedAt: !10058)
!10061 = !DILocation(line: 782, column: 9, scope: !1050, inlinedAt: !10058)
!10062 = !DILocation(line: 783, column: 9, scope: !4639, inlinedAt: !10058)
!10063 = !DILocation(line: 783, column: 9, scope: !4641, inlinedAt: !10058)
!10064 = !DILocation(line: 783, column: 9, scope: !4643, inlinedAt: !10058)
!10065 = !DILocation(line: 783, column: 9, scope: !4645, inlinedAt: !10058)
!10066 = !DILocation(line: 783, column: 9, scope: !1060, inlinedAt: !10058)
!10067 = !DILocation(line: 783, column: 9, scope: !4648, inlinedAt: !10058)
!10068 = !DILocation(line: 10651, column: 5, scope: !3003)
!10069 = !DILocation(line: 781, column: 22, scope: !1050, inlinedAt: !10070)
!10070 = distinct !DILocation(line: 10652, column: 5, scope: !3003)
!10071 = !DILocation(line: 782, column: 15, scope: !1058, inlinedAt: !10070)
!10072 = !DILocation(line: 782, column: 9, scope: !1058, inlinedAt: !10070)
!10073 = !DILocation(line: 782, column: 9, scope: !1050, inlinedAt: !10070)
!10074 = !DILocation(line: 783, column: 9, scope: !4639, inlinedAt: !10070)
!10075 = !DILocation(line: 783, column: 9, scope: !4641, inlinedAt: !10070)
!10076 = !DILocation(line: 783, column: 9, scope: !4643, inlinedAt: !10070)
!10077 = !DILocation(line: 783, column: 9, scope: !4645, inlinedAt: !10070)
!10078 = !DILocation(line: 783, column: 9, scope: !1060, inlinedAt: !10070)
!10079 = !DILocation(line: 783, column: 9, scope: !4648, inlinedAt: !10070)
!10080 = !DILocation(line: 10652, column: 5, scope: !3003)
!10081 = !DILocation(line: 10653, column: 12, scope: !3003)
!10082 = !DILocation(line: 10653, column: 5, scope: !3003)
!10083 = !DILocation(line: 10654, column: 1, scope: !3003)
!10084 = !DILocation(line: 1311, column: 49, scope: !992, inlinedAt: !10085)
!10085 = distinct !DILocation(line: 10617, column: 13, scope: !10086)
!10086 = distinct !DILexicalBlock(scope: !10087, file: !1, line: 10616, column: 27)
!10087 = distinct !DILexicalBlock(scope: !3014, file: !1, line: 10616, column: 13)
!10088 = !DILocation(line: 1311, column: 12, scope: !992, inlinedAt: !10085)
!10089 = !DILocation(line: 10618, column: 13, scope: !10086)
!10090 = !DILocation(line: 10730, column: 29, scope: !3025)
!10091 = !DILocation(line: 10730, column: 45, scope: !3025)
!10092 = !DILocation(line: 10730, column: 61, scope: !3025)
!10093 = !DILocation(line: 10732, column: 5, scope: !3025)
!10094 = !DILocation(line: 10733, column: 5, scope: !3025)
!10095 = !DILocation(line: 10734, column: 5, scope: !3025)
!10096 = !DILocation(line: 10734, column: 9, scope: !3025)
!10097 = !DILocation(line: 10736, column: 15, scope: !3025)
!10098 = !DILocation(line: 10739, column: 5, scope: !3025)
!10099 = !DILocation(line: 10740, column: 10, scope: !3025)
!10100 = !DILocation(line: 10740, column: 24, scope: !3025)
!10101 = !DILocation(line: 10741, column: 5, scope: !3025)
!10102 = !DILocation(line: 10742, column: 15, scope: !3025)
!10103 = !DILocation(line: 10742, column: 29, scope: !3025)
!10104 = !DILocation(line: 10743, column: 10, scope: !3025)
!10105 = !DILocation(line: 10743, column: 19, scope: !3025)
!10106 = !DILocation(line: 10732, column: 12, scope: !3025)
!10107 = !DILocation(line: 10733, column: 12, scope: !3025)
!10108 = !DILocation(line: 10744, column: 10, scope: !10109)
!10109 = distinct !DILexicalBlock(scope: !3025, file: !1, line: 10744, column: 9)
!10110 = !DILocation(line: 10744, column: 9, scope: !3025)
!10111 = !DILocation(line: 10751, column: 60, scope: !10112)
!10112 = distinct !DILexicalBlock(scope: !3025, file: !1, line: 10751, column: 9)
!10113 = !DILocation(line: 10751, column: 64, scope: !10112)
!10114 = !DILocation(line: 979, column: 38, scope: !942, inlinedAt: !10115)
!10115 = distinct !DILocation(line: 10751, column: 9, scope: !10112)
!10116 = !DILocation(line: 979, column: 57, scope: !942, inlinedAt: !10115)
!10117 = !DILocation(line: 980, column: 36, scope: !942, inlinedAt: !10115)
!10118 = !DILocation(line: 981, column: 13, scope: !4956, inlinedAt: !10115)
!10119 = !DILocation(line: 981, column: 23, scope: !4958, inlinedAt: !10115)
!10120 = !DILocation(line: 981, column: 18, scope: !4956, inlinedAt: !10115)
!10121 = !DILocation(line: 982, column: 22, scope: !4961, inlinedAt: !10115)
!10122 = !DILocation(line: 982, column: 9, scope: !4961, inlinedAt: !10115)
!10123 = !DILocation(line: 10751, column: 9, scope: !3025)
!10124 = !DILocation(line: 10754, column: 5, scope: !3036)
!10125 = !DILocation(line: 10755, column: 14, scope: !10126)
!10126 = distinct !DILexicalBlock(scope: !3036, file: !1, line: 10755, column: 9)
!10127 = !DILocation(line: 10755, column: 17, scope: !10126)
!10128 = !DILocation(line: 10755, column: 9, scope: !3036)
!10129 = !DILocation(line: 10756, column: 50, scope: !10126)
!10130 = !DILocation(line: 10756, column: 18, scope: !10126)
!10131 = !DILocation(line: 10735, column: 9, scope: !3025)
!10132 = !DILocation(line: 10756, column: 9, scope: !10126)
!10133 = !DILocation(line: 10757, column: 14, scope: !10134)
!10134 = distinct !DILexicalBlock(scope: !10126, file: !1, line: 10757, column: 14)
!10135 = !DILocation(line: 10758, column: 35, scope: !10134)
!10136 = !DILocation(line: 10758, column: 53, scope: !10134)
!10137 = !DILocation(line: 10757, column: 14, scope: !10126)
!10138 = !DILocation(line: 10758, column: 18, scope: !10134)
!10139 = !DILocation(line: 10758, column: 9, scope: !10134)
!10140 = !DILocation(line: 10760, column: 18, scope: !10134)
!10141 = !DILocation(line: 10761, column: 5, scope: !3036)
!10142 = !DILocation(line: 10763, column: 9, scope: !10143)
!10143 = distinct !DILexicalBlock(scope: !3025, file: !1, line: 10763, column: 9)
!10144 = !DILocation(line: 10763, column: 9, scope: !3025)
!10145 = !DILocation(line: 1311, column: 49, scope: !992, inlinedAt: !10146)
!10146 = distinct !DILocation(line: 10764, column: 24, scope: !10147)
!10147 = distinct !DILexicalBlock(scope: !10143, file: !1, line: 10763, column: 17)
!10148 = !DILocation(line: 1311, column: 12, scope: !992, inlinedAt: !10146)
!10149 = !DILocation(line: 10765, column: 9, scope: !10147)
!10150 = !DILocation(line: 10769, column: 5, scope: !3025)
!10151 = !DILocation(line: 781, column: 22, scope: !1050, inlinedAt: !10152)
!10152 = distinct !DILocation(line: 10772, column: 5, scope: !3025)
!10153 = !DILocation(line: 782, column: 15, scope: !1058, inlinedAt: !10152)
!10154 = !DILocation(line: 782, column: 9, scope: !1058, inlinedAt: !10152)
!10155 = !DILocation(line: 782, column: 9, scope: !1050, inlinedAt: !10152)
!10156 = !DILocation(line: 783, column: 9, scope: !4639, inlinedAt: !10152)
!10157 = !DILocation(line: 783, column: 9, scope: !4641, inlinedAt: !10152)
!10158 = !DILocation(line: 783, column: 9, scope: !4643, inlinedAt: !10152)
!10159 = !DILocation(line: 783, column: 9, scope: !4645, inlinedAt: !10152)
!10160 = !DILocation(line: 783, column: 9, scope: !1060, inlinedAt: !10152)
!10161 = !DILocation(line: 783, column: 9, scope: !4648, inlinedAt: !10152)
!10162 = !DILocation(line: 10772, column: 5, scope: !3025)
!10163 = !DILocation(line: 781, column: 22, scope: !1050, inlinedAt: !10164)
!10164 = distinct !DILocation(line: 10773, column: 5, scope: !3025)
!10165 = !DILocation(line: 782, column: 15, scope: !1058, inlinedAt: !10164)
!10166 = !DILocation(line: 782, column: 9, scope: !1058, inlinedAt: !10164)
!10167 = !DILocation(line: 782, column: 9, scope: !1050, inlinedAt: !10164)
!10168 = !DILocation(line: 783, column: 9, scope: !4639, inlinedAt: !10164)
!10169 = !DILocation(line: 783, column: 9, scope: !4641, inlinedAt: !10164)
!10170 = !DILocation(line: 783, column: 9, scope: !4643, inlinedAt: !10164)
!10171 = !DILocation(line: 783, column: 9, scope: !4645, inlinedAt: !10164)
!10172 = !DILocation(line: 783, column: 9, scope: !1060, inlinedAt: !10164)
!10173 = !DILocation(line: 783, column: 9, scope: !4648, inlinedAt: !10164)
!10174 = !DILocation(line: 10773, column: 5, scope: !3025)
!10175 = !DILocation(line: 10776, column: 1, scope: !3025)
!10176 = !DILocation(line: 10789, column: 27, scope: !3037)
!10177 = !DILocation(line: 10789, column: 43, scope: !3037)
!10178 = !DILocation(line: 10789, column: 59, scope: !3037)
!10179 = !DILocation(line: 10791, column: 5, scope: !3037)
!10180 = !DILocation(line: 10792, column: 5, scope: !3037)
!10181 = !DILocation(line: 10792, column: 9, scope: !3037)
!10182 = !DILocation(line: 10794, column: 15, scope: !3037)
!10183 = !DILocation(line: 10795, column: 11, scope: !3037)
!10184 = !DILocation(line: 10799, column: 5, scope: !3037)
!10185 = !DILocation(line: 10800, column: 10, scope: !3037)
!10186 = !DILocation(line: 10800, column: 24, scope: !3037)
!10187 = !DILocation(line: 10801, column: 10, scope: !3037)
!10188 = !DILocation(line: 10801, column: 19, scope: !3037)
!10189 = !DILocation(line: 10802, column: 10, scope: !3037)
!10190 = !DILocation(line: 10802, column: 13, scope: !3037)
!10191 = !DILocation(line: 10791, column: 12, scope: !3037)
!10192 = !DILocation(line: 10803, column: 10, scope: !10193)
!10193 = distinct !DILexicalBlock(scope: !3037, file: !1, line: 10803, column: 9)
!10194 = !DILocation(line: 10803, column: 9, scope: !3037)
!10195 = !DILocation(line: 10808, column: 58, scope: !10196)
!10196 = distinct !DILexicalBlock(scope: !3037, file: !1, line: 10808, column: 9)
!10197 = !DILocation(line: 10808, column: 62, scope: !10196)
!10198 = !DILocation(line: 979, column: 38, scope: !942, inlinedAt: !10199)
!10199 = distinct !DILocation(line: 10808, column: 9, scope: !10196)
!10200 = !DILocation(line: 979, column: 57, scope: !942, inlinedAt: !10199)
!10201 = !DILocation(line: 980, column: 36, scope: !942, inlinedAt: !10199)
!10202 = !DILocation(line: 981, column: 13, scope: !4956, inlinedAt: !10199)
!10203 = !DILocation(line: 981, column: 23, scope: !4958, inlinedAt: !10199)
!10204 = !DILocation(line: 981, column: 18, scope: !4956, inlinedAt: !10199)
!10205 = !DILocation(line: 982, column: 22, scope: !4961, inlinedAt: !10199)
!10206 = !DILocation(line: 982, column: 9, scope: !4961, inlinedAt: !10199)
!10207 = !DILocation(line: 10808, column: 9, scope: !3037)
!10208 = !DILocation(line: 10811, column: 17, scope: !3037)
!10209 = !DILocation(line: 10811, column: 12, scope: !3037)
!10210 = !DILocation(line: 10796, column: 11, scope: !3037)
!10211 = !DILocation(line: 10793, column: 16, scope: !3037)
!10212 = !DILocation(line: 10816, column: 20, scope: !3049)
!10213 = !DILocation(line: 10822, column: 18, scope: !3049)
!10214 = !DILocation(line: 10823, column: 14, scope: !10215)
!10215 = distinct !DILexicalBlock(scope: !3049, file: !1, line: 10823, column: 13)
!10216 = !DILocation(line: 10823, column: 13, scope: !3049)
!10217 = !DILocation(line: 10824, column: 13, scope: !10218)
!10218 = distinct !DILexicalBlock(scope: !10215, file: !1, line: 10823, column: 22)
!10219 = !DILocation(line: 10825, column: 13, scope: !10218)
!10220 = !DILocation(line: 10828, column: 9, scope: !3057)
!10221 = !DILocation(line: 10829, column: 18, scope: !10222)
!10222 = distinct !DILexicalBlock(scope: !3057, file: !1, line: 10829, column: 13)
!10223 = !DILocation(line: 10829, column: 21, scope: !10222)
!10224 = !DILocation(line: 10829, column: 13, scope: !3057)
!10225 = !DILocation(line: 10830, column: 22, scope: !10222)
!10226 = !DILocation(line: 10814, column: 17, scope: !3049)
!10227 = !DILocation(line: 10830, column: 13, scope: !10222)
!10228 = !DILocation(line: 10831, column: 18, scope: !10229)
!10229 = distinct !DILexicalBlock(scope: !10222, file: !1, line: 10831, column: 18)
!10230 = !DILocation(line: 10831, column: 18, scope: !10222)
!10231 = !DILocation(line: 10832, column: 22, scope: !10229)
!10232 = !DILocation(line: 10832, column: 13, scope: !10229)
!10233 = !DILocation(line: 10834, column: 22, scope: !10229)
!10234 = !DILocation(line: 10835, column: 9, scope: !3057)
!10235 = !DILocation(line: 10837, column: 20, scope: !10236)
!10236 = distinct !DILexicalBlock(scope: !3049, file: !1, line: 10837, column: 13)
!10237 = !DILocation(line: 10837, column: 13, scope: !3049)
!10238 = !DILocation(line: 10838, column: 17, scope: !10239)
!10239 = distinct !DILexicalBlock(scope: !10240, file: !1, line: 10838, column: 17)
!10240 = distinct !DILexicalBlock(scope: !10236, file: !1, line: 10837, column: 25)
!10241 = !DILocation(line: 10838, column: 23, scope: !10239)
!10242 = !DILocation(line: 10838, column: 17, scope: !10240)
!10243 = !DILocation(line: 1311, column: 49, scope: !992, inlinedAt: !10244)
!10244 = distinct !DILocation(line: 10843, column: 13, scope: !10240)
!10245 = !DILocation(line: 1311, column: 12, scope: !992, inlinedAt: !10244)
!10246 = !DILocation(line: 10844, column: 13, scope: !10240)
!10247 = !DILocation(line: 10847, column: 18, scope: !3049)
!10248 = !DILocation(line: 10848, column: 14, scope: !10249)
!10249 = distinct !DILexicalBlock(scope: !3049, file: !1, line: 10848, column: 13)
!10250 = !DILocation(line: 10848, column: 13, scope: !3049)
!10251 = !DILocation(line: 10852, column: 22, scope: !3049)
!10252 = !DILocation(line: 10813, column: 31, scope: !3049)
!10253 = !DILocation(line: 10813, column: 15, scope: !3049)
!10254 = !DILocation(line: 10813, column: 23, scope: !3049)
!10255 = !DILocation(line: 10853, column: 44, scope: !3062)
!10256 = !DILocation(line: 10853, column: 9, scope: !3063)
!10257 = !DILocation(line: 10854, column: 18, scope: !3060)
!10258 = !DILocation(line: 10854, column: 17, scope: !3061)
!10259 = !DILocation(line: 10853, column: 57, scope: !3062)
!10260 = !DILocation(line: 10857, column: 72, scope: !3059)
!10261 = !DILocation(line: 10856, column: 39, scope: !3059)
!10262 = !DILocation(line: 10856, column: 27, scope: !3059)
!10263 = !DILocation(line: 10858, column: 22, scope: !3068)
!10264 = !DILocation(line: 10858, column: 21, scope: !3059)
!10265 = !DILocation(line: 10859, column: 21, scope: !10266)
!10266 = !DILexicalBlockFile(scope: !3066, file: !1, discriminator: 1)
!10267 = !DILocation(line: 10859, column: 21, scope: !10268)
!10268 = distinct !DILexicalBlock(scope: !3066, file: !1, line: 10859, column: 21)
!10269 = !DILocation(line: 10859, column: 21, scope: !3066)
!10270 = !DILocation(line: 10859, column: 21, scope: !10271)
!10271 = !DILexicalBlockFile(scope: !10268, file: !1, discriminator: 3)
!10272 = !DILocation(line: 10863, column: 25, scope: !3059)
!10273 = !DILocation(line: 10855, column: 21, scope: !3059)
!10274 = !DILocation(line: 10864, column: 17, scope: !10275)
!10275 = !DILexicalBlockFile(scope: !3070, file: !1, discriminator: 1)
!10276 = !DILocation(line: 10864, column: 17, scope: !10277)
!10277 = distinct !DILexicalBlock(scope: !3070, file: !1, line: 10864, column: 17)
!10278 = !DILocation(line: 10864, column: 17, scope: !3070)
!10279 = !DILocation(line: 10864, column: 17, scope: !10280)
!10280 = !DILexicalBlockFile(scope: !10277, file: !1, discriminator: 3)
!10281 = !DILocation(line: 10865, column: 21, scope: !3074)
!10282 = !DILocation(line: 10865, column: 21, scope: !3059)
!10283 = !DILocation(line: 10866, column: 21, scope: !10284)
!10284 = !DILexicalBlockFile(scope: !3072, file: !1, discriminator: 1)
!10285 = !DILocation(line: 10866, column: 21, scope: !10286)
!10286 = distinct !DILexicalBlock(scope: !3072, file: !1, line: 10866, column: 21)
!10287 = !DILocation(line: 10866, column: 21, scope: !3072)
!10288 = !DILocation(line: 10866, column: 21, scope: !10289)
!10289 = !DILexicalBlockFile(scope: !10286, file: !1, discriminator: 3)
!10290 = !DILocation(line: 10870, column: 31, scope: !3059)
!10291 = !DILocation(line: 10839, column: 17, scope: !10292)
!10292 = distinct !DILexicalBlock(scope: !10239, file: !1, line: 10838, column: 34)
!10293 = !DILocation(line: 781, column: 22, scope: !1050, inlinedAt: !10294)
!10294 = distinct !DILocation(line: 10876, column: 5, scope: !3037)
!10295 = !DILocation(line: 782, column: 15, scope: !1058, inlinedAt: !10294)
!10296 = !DILocation(line: 782, column: 9, scope: !1058, inlinedAt: !10294)
!10297 = !DILocation(line: 782, column: 9, scope: !1050, inlinedAt: !10294)
!10298 = !DILocation(line: 783, column: 9, scope: !4639, inlinedAt: !10294)
!10299 = !DILocation(line: 783, column: 9, scope: !4641, inlinedAt: !10294)
!10300 = !DILocation(line: 783, column: 9, scope: !4643, inlinedAt: !10294)
!10301 = !DILocation(line: 783, column: 9, scope: !4645, inlinedAt: !10294)
!10302 = !DILocation(line: 783, column: 9, scope: !1060, inlinedAt: !10294)
!10303 = !DILocation(line: 783, column: 9, scope: !4648, inlinedAt: !10294)
!10304 = !DILocation(line: 10876, column: 5, scope: !3037)
!10305 = !DILocation(line: 10877, column: 9, scope: !10306)
!10306 = distinct !DILexicalBlock(scope: !3037, file: !1, line: 10877, column: 9)
!10307 = !DILocation(line: 10877, column: 9, scope: !3037)
!10308 = !DILocation(line: 10878, column: 9, scope: !10306)
!10309 = !DILocation(line: 10880, column: 1, scope: !3037)
!10310 = !DILocation(line: 1311, column: 49, scope: !992, inlinedAt: !10311)
!10311 = distinct !DILocation(line: 10819, column: 13, scope: !10312)
!10312 = distinct !DILexicalBlock(scope: !10313, file: !1, line: 10817, column: 27)
!10313 = distinct !DILexicalBlock(scope: !3049, file: !1, line: 10817, column: 13)
!10314 = !DILocation(line: 1311, column: 12, scope: !992, inlinedAt: !10311)
!10315 = !DILocation(line: 10820, column: 13, scope: !10312)
!10316 = !DILocation(line: 10952, column: 29, scope: !3075)
!10317 = !DILocation(line: 10952, column: 45, scope: !3075)
!10318 = !DILocation(line: 10957, column: 5, scope: !3075)
!10319 = !DILocation(line: 10957, column: 21, scope: !3075)
!10320 = !DILocation(line: 10957, column: 14, scope: !3075)
!10321 = !DILocation(line: 10957, column: 9, scope: !3075)
!10322 = !DILocation(line: 10966, column: 10, scope: !10323)
!10323 = distinct !DILexicalBlock(scope: !3075, file: !1, line: 10966, column: 9)
!10324 = !DILocation(line: 10966, column: 9, scope: !3075)
!10325 = !DILocation(line: 10971, column: 9, scope: !3084)
!10326 = !DILocation(line: 10972, column: 19, scope: !10327)
!10327 = distinct !DILexicalBlock(scope: !3084, file: !1, line: 10972, column: 13)
!10328 = !DILocation(line: 10971, column: 24, scope: !3084)
!10329 = !DILocation(line: 10972, column: 13, scope: !10327)
!10330 = !DILocation(line: 10972, column: 13, scope: !3084)
!10331 = !DILocation(line: 10973, column: 39, scope: !10327)
!10332 = !DILocation(line: 10973, column: 20, scope: !10327)
!10333 = !DILocation(line: 10976, column: 5, scope: !10334)
!10334 = !DILexicalBlockFile(scope: !3075, file: !1, discriminator: 1)
!10335 = !DILocation(line: 10974, column: 21, scope: !3084)
!10336 = !{!10337, !10338, i64 2}
!10337 = !{!"winsize", !10338, i64 0, !10338, i64 2, !10338, i64 4, !10338, i64 6}
!10338 = !{!"short", !3872, i64 0}
!10339 = !DILocation(line: 10975, column: 19, scope: !3084)
!10340 = !{!10337, !10338, i64 0}
!10341 = !DILocation(line: 11008, column: 16, scope: !3075)
!10342 = !DILocation(line: 10955, column: 15, scope: !3075)
!10343 = !DILocation(line: 11009, column: 18, scope: !10344)
!10344 = distinct !DILexicalBlock(scope: !3075, file: !1, line: 11009, column: 9)
!10345 = !DILocation(line: 11009, column: 9, scope: !3075)
!10346 = !DILocation(line: 10976, column: 5, scope: !3075)
!10347 = !DILocation(line: 11011, column: 5, scope: !3075)
!10348 = !DILocation(line: 11012, column: 5, scope: !3075)
!10349 = !DILocation(line: 11013, column: 9, scope: !3095)
!10350 = !DILocation(line: 11013, column: 9, scope: !3075)
!10351 = !DILocation(line: 11014, column: 9, scope: !10352)
!10352 = !DILexicalBlockFile(scope: !3093, file: !1, discriminator: 1)
!10353 = !DILocation(line: 11014, column: 9, scope: !10354)
!10354 = distinct !DILexicalBlock(scope: !3093, file: !1, line: 11014, column: 9)
!10355 = !DILocation(line: 11014, column: 9, scope: !3093)
!10356 = !DILocation(line: 11014, column: 9, scope: !10357)
!10357 = !DILexicalBlockFile(scope: !10354, file: !1, discriminator: 3)
!10358 = !DILocation(line: 11018, column: 1, scope: !3075)
!10359 = !DILocation(line: 11027, column: 27, scope: !3096)
!10360 = !DILocation(line: 11029, column: 9, scope: !3096)
!10361 = !DILocation(line: 11037, column: 12, scope: !3096)
!10362 = !DILocation(line: 11050, column: 14, scope: !10363)
!10363 = distinct !DILexicalBlock(scope: !3096, file: !1, line: 11050, column: 9)
!10364 = !DILocation(line: 11050, column: 9, scope: !3096)
!10365 = !DILocation(line: 11051, column: 32, scope: !10363)
!10366 = !DILocation(line: 11051, column: 16, scope: !10363)
!10367 = !DILocation(line: 11051, column: 9, scope: !10363)
!10368 = !DILocation(line: 11053, column: 9, scope: !10363)
!10369 = !DILocation(line: 11054, column: 1, scope: !3096)
!10370 = !DILocation(line: 11062, column: 33, scope: !3100)
!10371 = !DILocation(line: 11062, column: 49, scope: !3100)
!10372 = !DILocation(line: 11064, column: 5, scope: !3100)
!10373 = !DILocation(line: 11064, column: 9, scope: !3100)
!10374 = !DILocation(line: 11067, column: 10, scope: !10375)
!10375 = distinct !DILexicalBlock(scope: !3100, file: !1, line: 11067, column: 9)
!10376 = !DILocation(line: 11067, column: 9, scope: !3100)
!10377 = !DILocation(line: 11073, column: 39, scope: !3100)
!10378 = !DILocation(line: 11073, column: 19, scope: !3100)
!10379 = !DILocation(line: 11065, column: 9, scope: !3100)
!10380 = !DILocation(line: 11074, column: 21, scope: !10381)
!10381 = distinct !DILexicalBlock(scope: !3100, file: !1, line: 11074, column: 9)
!10382 = !DILocation(line: 11074, column: 9, scope: !3100)
!10383 = !DILocation(line: 11076, column: 28, scope: !3100)
!10384 = !DILocation(line: 11076, column: 12, scope: !3100)
!10385 = !DILocation(line: 11076, column: 5, scope: !3100)
!10386 = !DILocation(line: 11077, column: 1, scope: !3100)
!10387 = !DILocation(line: 11085, column: 33, scope: !3106)
!10388 = !DILocation(line: 11085, column: 49, scope: !3106)
!10389 = !DILocation(line: 11087, column: 5, scope: !3106)
!10390 = !DILocation(line: 11087, column: 9, scope: !3106)
!10391 = !DILocation(line: 11087, column: 13, scope: !3106)
!10392 = !DILocation(line: 11089, column: 10, scope: !10393)
!10393 = distinct !DILexicalBlock(scope: !3106, file: !1, line: 11089, column: 9)
!10394 = !DILocation(line: 11089, column: 9, scope: !3106)
!10395 = !DILocation(line: 11095, column: 29, scope: !10396)
!10396 = distinct !DILexicalBlock(scope: !3106, file: !1, line: 11095, column: 9)
!10397 = !DILocation(line: 11095, column: 33, scope: !10396)
!10398 = !DILocation(line: 11095, column: 9, scope: !10396)
!10399 = !DILocation(line: 11095, column: 52, scope: !10396)
!10400 = !DILocation(line: 11095, column: 9, scope: !3106)
!10401 = !DILocation(line: 11097, column: 5, scope: !3106)
!10402 = !DILocation(line: 11098, column: 1, scope: !3106)
!10403 = !DILocation(line: 788, column: 26, scope: !780)
!10404 = !DILocation(line: 788, column: 35, scope: !780)
!10405 = !DILocation(line: 790, column: 5, scope: !780)
!10406 = !DILocation(line: 801, column: 11, scope: !10407)
!10407 = distinct !DILexicalBlock(scope: !780, file: !1, line: 801, column: 9)
!10408 = !DILocation(line: 782, column: 15, scope: !1058, inlinedAt: !10409)
!10409 = distinct !DILocation(line: 802, column: 9, scope: !10410)
!10410 = distinct !DILexicalBlock(scope: !10407, file: !1, line: 801, column: 20)
!10411 = !DILocation(line: 801, column: 9, scope: !780)
!10412 = !DILocation(line: 782, column: 9, scope: !1058, inlinedAt: !10409)
!10413 = !DILocation(line: 782, column: 9, scope: !1050, inlinedAt: !10409)
!10414 = !DILocation(line: 783, column: 9, scope: !4639, inlinedAt: !10409)
!10415 = !DILocation(line: 783, column: 9, scope: !4641, inlinedAt: !10409)
!10416 = !DILocation(line: 783, column: 9, scope: !4643, inlinedAt: !10409)
!10417 = !DILocation(line: 783, column: 9, scope: !4645, inlinedAt: !10409)
!10418 = !DILocation(line: 783, column: 9, scope: !1060, inlinedAt: !10409)
!10419 = !DILocation(line: 783, column: 9, scope: !4648, inlinedAt: !10409)
!10420 = !DILocation(line: 802, column: 9, scope: !10410)
!10421 = !DILocation(line: 807, column: 19, scope: !780)
!10422 = !DILocation(line: 809, column: 11, scope: !10423)
!10423 = distinct !DILexicalBlock(scope: !780, file: !1, line: 809, column: 9)
!10424 = !DILocation(line: 809, column: 9, scope: !780)
!10425 = !DILocation(line: 810, column: 20, scope: !10426)
!10426 = distinct !DILexicalBlock(scope: !10427, file: !1, line: 810, column: 13)
!10427 = distinct !DILexicalBlock(scope: !10423, file: !1, line: 809, column: 23)
!10428 = !DILocation(line: 810, column: 14, scope: !10426)
!10429 = !DILocation(line: 810, column: 13, scope: !10427)
!10430 = !DILocation(line: 811, column: 13, scope: !10431)
!10431 = distinct !DILexicalBlock(scope: !10426, file: !1, line: 810, column: 30)
!10432 = !DILocation(line: 811, column: 13, scope: !10433)
!10433 = !DILexicalBlockFile(scope: !10434, file: !1, discriminator: 4)
!10434 = !DILexicalBlockFile(scope: !10431, file: !1, discriminator: 3)
!10435 = !{!4635, !3871, i64 8}
!10436 = !DILocation(line: 811, column: 13, scope: !10437)
!10437 = !DILexicalBlockFile(scope: !10438, file: !1, discriminator: 8)
!10438 = !DILexicalBlockFile(scope: !10431, file: !1, discriminator: 7)
!10439 = !DILocation(line: 813, column: 13, scope: !10431)
!10440 = !DILocation(line: 815, column: 15, scope: !10427)
!10441 = !DILocation(line: 817, column: 15, scope: !10427)
!10442 = !DILocation(line: 817, column: 22, scope: !10427)
!10443 = !{!4635, !3877, i64 48}
!10444 = !DILocation(line: 818, column: 15, scope: !10427)
!10445 = !DILocation(line: 816, column: 22, scope: !10427)
!10446 = !DILocation(line: 818, column: 22, scope: !10427)
!10447 = !DILocation(line: 819, column: 15, scope: !10427)
!10448 = !DILocation(line: 819, column: 18, scope: !10427)
!10449 = !DILocation(line: 820, column: 9, scope: !10427)
!10450 = !DILocation(line: 823, column: 15, scope: !780)
!10451 = !DILocation(line: 790, column: 15, scope: !780)
!10452 = !DILocation(line: 824, column: 9, scope: !791)
!10453 = !DILocation(line: 824, column: 9, scope: !780)
!10454 = !DILocation(line: 847, column: 25, scope: !790)
!10455 = !DILocation(line: 847, column: 13, scope: !790)
!10456 = !DILocation(line: 848, column: 9, scope: !10457)
!10457 = !DILexicalBlockFile(scope: !793, file: !1, discriminator: 1)
!10458 = !DILocation(line: 848, column: 9, scope: !10459)
!10459 = distinct !DILexicalBlock(scope: !793, file: !1, line: 848, column: 9)
!10460 = !DILocation(line: 848, column: 9, scope: !793)
!10461 = !DILocation(line: 848, column: 9, scope: !10462)
!10462 = !DILexicalBlockFile(scope: !10459, file: !1, discriminator: 3)
!10463 = !DILocation(line: 849, column: 14, scope: !10464)
!10464 = distinct !DILexicalBlock(scope: !790, file: !1, line: 849, column: 13)
!10465 = !DILocation(line: 849, column: 13, scope: !790)
!10466 = !DILocation(line: 790, column: 25, scope: !780)
!10467 = !DILocation(line: 850, column: 19, scope: !10464)
!10468 = !DILocation(line: 877, column: 9, scope: !780)
!10469 = !DILocation(line: 854, column: 9, scope: !799)
!10470 = !DILocation(line: 855, column: 13, scope: !10471)
!10471 = distinct !DILexicalBlock(scope: !799, file: !1, line: 855, column: 13)
!10472 = !{!3880, !3871, i64 160}
!10473 = !DILocation(line: 855, column: 13, scope: !10474)
!10474 = !DILexicalBlockFile(scope: !10471, file: !1, discriminator: 1)
!10475 = !{!10476, !3871, i64 0}
!10476 = !{!"", !3871, i64 0, !3871, i64 8}
!10477 = !DILocation(line: 855, column: 13, scope: !799)
!10478 = !DILocation(line: 856, column: 19, scope: !10471)
!10479 = !DILocation(line: 859, column: 13, scope: !799)
!10480 = !DILocation(line: 856, column: 21, scope: !10471)
!10481 = !DILocation(line: 859, column: 14, scope: !798)
!10482 = !DILocation(line: 860, column: 13, scope: !797)
!10483 = !DILocation(line: 861, column: 23, scope: !796)
!10484 = !DILocation(line: 861, column: 17, scope: !796)
!10485 = !DILocation(line: 861, column: 17, scope: !797)
!10486 = !DILocation(line: 862, column: 17, scope: !795)
!10487 = !DILocation(line: 862, column: 21, scope: !795)
!10488 = !DILocation(line: 863, column: 30, scope: !795)
!10489 = !DILocation(line: 863, column: 21, scope: !795)
!10490 = !DILocation(line: 865, column: 21, scope: !10491)
!10491 = distinct !DILexicalBlock(scope: !795, file: !1, line: 865, column: 21)
!10492 = !DILocation(line: 865, column: 21, scope: !795)
!10493 = !DILocation(line: 866, column: 27, scope: !10494)
!10494 = distinct !DILexicalBlock(scope: !10491, file: !1, line: 865, column: 29)
!10495 = !DILocation(line: 868, column: 27, scope: !10494)
!10496 = !DILocation(line: 868, column: 34, scope: !10494)
!10497 = !DILocation(line: 869, column: 27, scope: !10494)
!10498 = !DILocation(line: 867, column: 34, scope: !10494)
!10499 = !DILocation(line: 869, column: 34, scope: !10494)
!10500 = !DILocation(line: 870, column: 32, scope: !10494)
!10501 = !DILocation(line: 870, column: 27, scope: !10494)
!10502 = !DILocation(line: 870, column: 30, scope: !10494)
!10503 = !DILocation(line: 873, column: 13, scope: !10504)
!10504 = !DILexicalBlockFile(scope: !796, file: !1, discriminator: 1)
!10505 = !DILocation(line: 877, column: 10, scope: !10506)
!10506 = distinct !DILexicalBlock(scope: !780, file: !1, line: 877, column: 9)
!10507 = !DILocation(line: 878, column: 14, scope: !10508)
!10508 = distinct !DILexicalBlock(scope: !10509, file: !1, line: 878, column: 13)
!10509 = distinct !DILexicalBlock(scope: !10506, file: !1, line: 877, column: 17)
!10510 = !DILocation(line: 878, column: 13, scope: !10509)
!10511 = !DILocation(line: 879, column: 13, scope: !10508)
!10512 = !DILocation(line: 879, column: 13, scope: !10513)
!10513 = !DILexicalBlockFile(scope: !10514, file: !1, discriminator: 4)
!10514 = !DILexicalBlockFile(scope: !10508, file: !1, discriminator: 3)
!10515 = !DILocation(line: 879, column: 13, scope: !10516)
!10516 = !DILexicalBlockFile(scope: !10517, file: !1, discriminator: 8)
!10517 = !DILexicalBlockFile(scope: !10508, file: !1, discriminator: 7)
!10518 = !DILocation(line: 890, column: 14, scope: !780)
!10519 = !DILocation(line: 791, column: 16, scope: !780)
!10520 = !DILocation(line: 899, column: 14, scope: !780)
!10521 = !DILocation(line: 792, column: 11, scope: !780)
!10522 = !DILocation(line: 900, column: 19, scope: !804)
!10523 = !DILocation(line: 900, column: 16, scope: !804)
!10524 = !DILocation(line: 900, column: 9, scope: !780)
!10525 = !DILocation(line: 901, column: 9, scope: !803)
!10526 = !DILocation(line: 901, column: 9, scope: !10527)
!10527 = !DILexicalBlockFile(scope: !10528, file: !1, discriminator: 4)
!10528 = !DILexicalBlockFile(scope: !803, file: !1, discriminator: 3)
!10529 = !DILocation(line: 901, column: 9, scope: !10530)
!10530 = !DILexicalBlockFile(scope: !10531, file: !1, discriminator: 8)
!10531 = !DILexicalBlockFile(scope: !803, file: !1, discriminator: 7)
!10532 = !DILocation(line: 902, column: 9, scope: !10533)
!10533 = !DILexicalBlockFile(scope: !802, file: !1, discriminator: 1)
!10534 = !DILocation(line: 902, column: 9, scope: !10535)
!10535 = distinct !DILexicalBlock(scope: !802, file: !1, line: 902, column: 9)
!10536 = !DILocation(line: 902, column: 9, scope: !802)
!10537 = !DILocation(line: 902, column: 9, scope: !10538)
!10538 = !DILexicalBlockFile(scope: !10535, file: !1, discriminator: 3)
!10539 = !DILocation(line: 911, column: 21, scope: !780)
!10540 = !DILocation(line: 906, column: 11, scope: !780)
!10541 = !DILocation(line: 906, column: 16, scope: !780)
!10542 = !DILocation(line: 907, column: 11, scope: !780)
!10543 = !DILocation(line: 907, column: 18, scope: !780)
!10544 = !DILocation(line: 908, column: 11, scope: !780)
!10545 = !DILocation(line: 908, column: 18, scope: !780)
!10546 = !DILocation(line: 909, column: 11, scope: !780)
!10547 = !DILocation(line: 909, column: 18, scope: !780)
!10548 = !DILocation(line: 910, column: 11, scope: !780)
!10549 = !DILocation(line: 910, column: 14, scope: !780)
!10550 = !DILocation(line: 911, column: 19, scope: !780)
!10551 = !DILocation(line: 912, column: 5, scope: !780)
!10552 = !DILocation(line: 913, column: 1, scope: !780)
!10553 = !DILocation(line: 640, column: 25, scope: !805)
!10554 = !DILocation(line: 640, column: 33, scope: !805)
!10555 = !DILocation(line: 640, column: 48, scope: !805)
!10556 = !DILocation(line: 642, column: 5, scope: !805)
!10557 = !DILocation(line: 645, column: 23, scope: !805)
!10558 = !DILocation(line: 645, column: 15, scope: !805)
!10559 = !DILocation(line: 646, column: 15, scope: !10560)
!10560 = distinct !DILexicalBlock(scope: !805, file: !1, line: 646, column: 9)
!10561 = !DILocation(line: 646, column: 9, scope: !805)
!10562 = !DILocation(line: 647, column: 22, scope: !10563)
!10563 = distinct !DILexicalBlock(scope: !10560, file: !1, line: 646, column: 24)
!10564 = !DILocation(line: 649, column: 31, scope: !10563)
!10565 = !DILocation(line: 649, column: 43, scope: !10563)
!10566 = !DILocation(line: 647, column: 9, scope: !10563)
!10567 = !DILocation(line: 650, column: 9, scope: !10563)
!10568 = !DILocation(line: 642, column: 9, scope: !805)
!10569 = !DILocation(line: 653, column: 18, scope: !805)
!10570 = !DILocation(line: 643, column: 10, scope: !805)
!10571 = !DILocation(line: 654, column: 5, scope: !10572)
!10572 = !DILexicalBlockFile(scope: !816, file: !1, discriminator: 1)
!10573 = !DILocation(line: 654, column: 5, scope: !10574)
!10574 = distinct !DILexicalBlock(scope: !816, file: !1, line: 654, column: 5)
!10575 = !DILocation(line: 654, column: 5, scope: !816)
!10576 = !DILocation(line: 654, column: 5, scope: !10577)
!10577 = !DILexicalBlockFile(scope: !10574, file: !1, discriminator: 3)
!10578 = !DILocation(line: 655, column: 9, scope: !10579)
!10579 = distinct !DILexicalBlock(scope: !805, file: !1, line: 655, column: 9)
!10580 = !DILocation(line: 655, column: 18, scope: !10579)
!10581 = !DILocation(line: 655, column: 36, scope: !10579)
!10582 = !DILocation(line: 655, column: 22, scope: !10579)
!10583 = !DILocation(line: 656, column: 25, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !10579, file: !1, line: 655, column: 47)
!10585 = !DILocation(line: 656, column: 9, scope: !10584)
!10586 = !DILocation(line: 658, column: 9, scope: !10584)
!10587 = !DILocation(line: 660, column: 18, scope: !10588)
!10588 = distinct !DILexicalBlock(scope: !805, file: !1, line: 660, column: 9)
!10589 = !DILocation(line: 660, column: 36, scope: !10588)
!10590 = !DILocation(line: 660, column: 22, scope: !10588)
!10591 = !DILocation(line: 661, column: 25, scope: !10592)
!10592 = distinct !DILexicalBlock(scope: !10588, file: !1, line: 660, column: 47)
!10593 = !DILocation(line: 661, column: 9, scope: !10592)
!10594 = !DILocation(line: 663, column: 9, scope: !10592)
!10595 = !DILocation(line: 666, column: 10, scope: !805)
!10596 = !DILocation(line: 666, column: 8, scope: !805)
!10597 = !DILocation(line: 667, column: 5, scope: !805)
!10598 = !DILocation(line: 668, column: 1, scope: !805)
!10599 = !DILocation(line: 2313, column: 21, scope: !825)
!10600 = !DILocation(line: 2316, column: 5, scope: !825)
!10601 = !DILocation(line: 957, column: 31, scope: !928, inlinedAt: !10602)
!10602 = distinct !DILocation(line: 2324, column: 9, scope: !10603)
!10603 = distinct !DILexicalBlock(scope: !825, file: !1, line: 2324, column: 9)
!10604 = !DILocation(line: 957, column: 54, scope: !928, inlinedAt: !10602)
!10605 = !DILocation(line: 957, column: 64, scope: !928, inlinedAt: !10602)
!10606 = !DILocation(line: 958, column: 16, scope: !6175, inlinedAt: !10602)
!10607 = !DILocation(line: 958, column: 10, scope: !6175, inlinedAt: !10602)
!10608 = !DILocation(line: 958, column: 23, scope: !6175, inlinedAt: !10602)
!10609 = !DILocation(line: 958, column: 33, scope: !6175, inlinedAt: !10602)
!10610 = !DILocation(line: 958, column: 27, scope: !6175, inlinedAt: !10602)
!10611 = !DILocation(line: 958, column: 49, scope: !6175, inlinedAt: !10602)
!10612 = !DILocation(line: 958, column: 38, scope: !6175, inlinedAt: !10602)
!10613 = !DILocation(line: 959, column: 22, scope: !6184, inlinedAt: !10602)
!10614 = !DILocation(line: 959, column: 9, scope: !6184, inlinedAt: !10602)
!10615 = !DILocation(line: 2324, column: 55, scope: !10603)
!10616 = !DILocation(line: 2325, column: 53, scope: !10603)
!10617 = !DILocation(line: 2326, column: 54, scope: !10603)
!10618 = !DILocation(line: 968, column: 29, scope: !935, inlinedAt: !10619)
!10619 = distinct !DILocation(line: 2325, column: 9, scope: !10603)
!10620 = !DILocation(line: 968, column: 48, scope: !935, inlinedAt: !10619)
!10621 = !DILocation(line: 968, column: 60, scope: !935, inlinedAt: !10619)
!10622 = !DILocation(line: 969, column: 17, scope: !4943, inlinedAt: !10619)
!10623 = !DILocation(line: 969, column: 43, scope: !4943, inlinedAt: !10619)
!10624 = !DILocation(line: 969, column: 36, scope: !4943, inlinedAt: !10619)
!10625 = !DILocation(line: 970, column: 22, scope: !4947, inlinedAt: !10619)
!10626 = !DILocation(line: 970, column: 9, scope: !4947, inlinedAt: !10619)
!10627 = !DILocation(line: 2325, column: 57, scope: !10603)
!10628 = !DILocation(line: 979, column: 38, scope: !942, inlinedAt: !10629)
!10629 = distinct !DILocation(line: 2326, column: 9, scope: !10603)
!10630 = !DILocation(line: 979, column: 57, scope: !942, inlinedAt: !10629)
!10631 = !DILocation(line: 980, column: 36, scope: !942, inlinedAt: !10629)
!10632 = !DILocation(line: 981, column: 13, scope: !4956, inlinedAt: !10629)
!10633 = !DILocation(line: 981, column: 23, scope: !4958, inlinedAt: !10629)
!10634 = !DILocation(line: 981, column: 18, scope: !4956, inlinedAt: !10629)
!10635 = !DILocation(line: 982, column: 22, scope: !4961, inlinedAt: !10629)
!10636 = !DILocation(line: 982, column: 9, scope: !4961, inlinedAt: !10629)
!10637 = !DILocation(line: 2324, column: 9, scope: !825)
!10638 = !DILocation(line: 2329, column: 5, scope: !869)
!10639 = !DILocation(line: 2330, column: 15, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !869, file: !1, line: 2330, column: 9)
!10641 = !DILocation(line: 2330, column: 18, scope: !10640)
!10642 = !DILocation(line: 2330, column: 9, scope: !869)
!10643 = !DILocation(line: 2316, column: 17, scope: !825)
!10644 = !DILocation(line: 2331, column: 18, scope: !10640)
!10645 = !DILocation(line: 517, column: 1, scope: !947, inlinedAt: !10646)
!10646 = distinct !DILocation(line: 2331, column: 18, scope: !10640)
!10647 = !DILocation(line: 519, column: 10, scope: !947, inlinedAt: !10646)
!10648 = !DILocation(line: 2317, column: 9, scope: !825)
!10649 = !DILocation(line: 2331, column: 9, scope: !10640)
!10650 = !DILocation(line: 2343, column: 11, scope: !10651)
!10651 = distinct !DILexicalBlock(scope: !10640, file: !1, line: 2343, column: 9)
!10652 = !DILocation(line: 2343, column: 39, scope: !10651)
!10653 = !DILocation(line: 2343, column: 28, scope: !10651)
!10654 = !DILocation(line: 2344, column: 30, scope: !10651)
!10655 = !DILocation(line: 2344, column: 18, scope: !10651)
!10656 = !DILocation(line: 510, column: 1, scope: !974, inlinedAt: !10657)
!10657 = distinct !DILocation(line: 2344, column: 18, scope: !10651)
!10658 = !DILocation(line: 512, column: 10, scope: !974, inlinedAt: !10657)
!10659 = !DILocation(line: 2344, column: 9, scope: !10651)
!10660 = !DILocation(line: 2348, column: 36, scope: !10661)
!10661 = distinct !DILexicalBlock(scope: !10651, file: !1, line: 2348, column: 9)
!10662 = !DILocation(line: 2353, column: 29, scope: !10661)
!10663 = !DILocation(line: 2350, column: 26, scope: !10661)
!10664 = !DILocation(line: 2349, column: 18, scope: !10661)
!10665 = !DILocation(line: 524, column: 1, scope: !980, inlinedAt: !10666)
!10666 = distinct !DILocation(line: 2349, column: 18, scope: !10661)
!10667 = !DILocation(line: 527, column: 10, scope: !980, inlinedAt: !10666)
!10668 = !DILocation(line: 2349, column: 9, scope: !10661)
!10669 = !DILocation(line: 2353, column: 18, scope: !10661)
!10670 = !DILocation(line: 503, column: 1, scope: !988, inlinedAt: !10671)
!10671 = distinct !DILocation(line: 2353, column: 18, scope: !10661)
!10672 = !DILocation(line: 505, column: 10, scope: !988, inlinedAt: !10671)
!10673 = !DILocation(line: 2354, column: 5, scope: !869)
!10674 = !DILocation(line: 2356, column: 16, scope: !10675)
!10675 = distinct !DILexicalBlock(scope: !825, file: !1, line: 2356, column: 9)
!10676 = !DILocation(line: 2356, column: 9, scope: !825)
!10677 = !DILocation(line: 1311, column: 49, scope: !992, inlinedAt: !10678)
!10678 = distinct !DILocation(line: 2357, column: 16, scope: !10679)
!10679 = distinct !DILexicalBlock(scope: !10675, file: !1, line: 2356, column: 22)
!10680 = !DILocation(line: 1311, column: 12, scope: !992, inlinedAt: !10678)
!10681 = !DILocation(line: 2357, column: 9, scope: !10679)
!10682 = !DILocation(line: 2360, column: 12, scope: !825)
!10683 = !DILocation(line: 2360, column: 5, scope: !825)
!10684 = !DILocation(line: 2361, column: 1, scope: !825)
!10685 = !DILocation(line: 2205, column: 37, scope: !997)
!10686 = !DILocation(line: 2208, column: 19, scope: !997)
!10687 = !DILocation(line: 2208, column: 15, scope: !997)
!10688 = !DILocation(line: 2209, column: 11, scope: !10689)
!10689 = distinct !DILexicalBlock(scope: !997, file: !1, line: 2209, column: 9)
!10690 = !DILocation(line: 2209, column: 9, scope: !997)
!10691 = !DILocation(line: 2212, column: 5, scope: !997)
!10692 = !{!10693, !3882, i64 24}
!10693 = !{!"stat", !3877, i64 0, !3877, i64 8, !3877, i64 16, !3882, i64 24, !3882, i64 28, !3882, i64 32, !3882, i64 36, !3877, i64 40, !3877, i64 48, !3877, i64 56, !3877, i64 64, !6224, i64 72, !6224, i64 88, !6224, i64 104, !3872, i64 120}
!10694 = !DILocation(line: 2217, column: 5, scope: !997)
!10695 = !{!10693, !3877, i64 8}
!10696 = !DILocation(line: 2222, column: 5, scope: !997)
!10697 = !{!10693, !3877, i64 0}
!10698 = !DILocation(line: 2227, column: 5, scope: !997)
!10699 = !{!10693, !3877, i64 16}
!10700 = !DILocation(line: 2232, column: 5, scope: !997)
!10701 = !{!10693, !3882, i64 28}
!10702 = !DILocation(line: 396, column: 23, scope: !689, inlinedAt: !10703)
!10703 = distinct !DILocation(line: 2232, column: 5, scope: !997)
!10704 = !DILocation(line: 398, column: 13, scope: !3842, inlinedAt: !10703)
!10705 = !DILocation(line: 398, column: 9, scope: !689, inlinedAt: !10703)
!10706 = !DILocation(line: 399, column: 16, scope: !3842, inlinedAt: !10703)
!10707 = !DILocation(line: 399, column: 9, scope: !3842, inlinedAt: !10703)
!10708 = !DILocation(line: 400, column: 36, scope: !689, inlinedAt: !10703)
!10709 = !DILocation(line: 400, column: 12, scope: !689, inlinedAt: !10703)
!10710 = !DILocation(line: 400, column: 5, scope: !689, inlinedAt: !10703)
!10711 = !DILocation(line: 2233, column: 5, scope: !997)
!10712 = !{!10693, !3882, i64 32}
!10713 = !DILocation(line: 404, column: 23, scope: !694, inlinedAt: !10714)
!10714 = distinct !DILocation(line: 2233, column: 5, scope: !997)
!10715 = !DILocation(line: 406, column: 13, scope: !3852, inlinedAt: !10714)
!10716 = !DILocation(line: 406, column: 9, scope: !694, inlinedAt: !10714)
!10717 = !DILocation(line: 407, column: 16, scope: !3852, inlinedAt: !10714)
!10718 = !DILocation(line: 407, column: 9, scope: !3852, inlinedAt: !10714)
!10719 = !DILocation(line: 408, column: 36, scope: !694, inlinedAt: !10714)
!10720 = !DILocation(line: 408, column: 12, scope: !694, inlinedAt: !10714)
!10721 = !DILocation(line: 408, column: 5, scope: !694, inlinedAt: !10714)
!10722 = !DILocation(line: 2239, column: 5, scope: !997)
!10723 = !{!10693, !3877, i64 48}
!10724 = !DILocation(line: 2243, column: 25, scope: !997)
!10725 = !{!10693, !3877, i64 80}
!10726 = !DILocation(line: 2207, column: 19, scope: !997)
!10727 = !DILocation(line: 2244, column: 25, scope: !997)
!10728 = !{!10693, !3877, i64 96}
!10729 = !DILocation(line: 2207, column: 26, scope: !997)
!10730 = !DILocation(line: 2245, column: 25, scope: !997)
!10731 = !{!10693, !3877, i64 112}
!10732 = !DILocation(line: 2207, column: 33, scope: !997)
!10733 = !DILocation(line: 2257, column: 25, scope: !997)
!10734 = !{!10693, !3877, i64 72}
!10735 = !DILocation(line: 2257, column: 5, scope: !997)
!10736 = !DILocation(line: 2258, column: 25, scope: !997)
!10737 = !{!10693, !3877, i64 88}
!10738 = !DILocation(line: 2258, column: 5, scope: !997)
!10739 = !DILocation(line: 2259, column: 25, scope: !997)
!10740 = !{!10693, !3877, i64 104}
!10741 = !DILocation(line: 2259, column: 5, scope: !997)
!10742 = !DILocation(line: 2262, column: 5, scope: !997)
!10743 = !{!10693, !3877, i64 56}
!10744 = !DILocation(line: 2266, column: 5, scope: !997)
!10745 = !{!10693, !3877, i64 64}
!10746 = !DILocation(line: 2270, column: 5, scope: !997)
!10747 = !{!10693, !3877, i64 40}
!10748 = !DILocation(line: 2301, column: 9, scope: !1010)
!10749 = !DILocation(line: 2301, column: 9, scope: !997)
!10750 = !DILocation(line: 2302, column: 9, scope: !10751)
!10751 = !DILexicalBlockFile(scope: !1008, file: !1, discriminator: 1)
!10752 = !DILocation(line: 2302, column: 9, scope: !10753)
!10753 = distinct !DILexicalBlock(scope: !1008, file: !1, line: 2302, column: 9)
!10754 = !DILocation(line: 2302, column: 9, scope: !1008)
!10755 = !DILocation(line: 2302, column: 9, scope: !10756)
!10756 = !DILexicalBlockFile(scope: !10753, file: !1, discriminator: 3)
!10757 = !DILocation(line: 2307, column: 1, scope: !997)
!10758 = !DILocation(line: 2159, column: 21, scope: !1011)
!10759 = !DILocation(line: 2159, column: 28, scope: !1011)
!10760 = !DILocation(line: 2159, column: 42, scope: !1011)
!10761 = !DILocation(line: 2159, column: 61, scope: !1011)
!10762 = !DILocation(line: 2161, column: 19, scope: !1011)
!10763 = !DILocation(line: 2161, column: 15, scope: !1011)
!10764 = !DILocation(line: 2162, column: 31, scope: !1011)
!10765 = !DILocation(line: 2162, column: 15, scope: !1011)
!10766 = !DILocation(line: 2163, column: 15, scope: !1011)
!10767 = !DILocation(line: 2164, column: 15, scope: !1011)
!10768 = !DILocation(line: 2165, column: 15, scope: !1011)
!10769 = !DILocation(line: 2167, column: 11, scope: !10770)
!10770 = distinct !DILexicalBlock(scope: !1011, file: !1, line: 2167, column: 9)
!10771 = !DILocation(line: 2167, column: 16, scope: !10772)
!10772 = !DILexicalBlockFile(scope: !10770, file: !1, discriminator: 1)
!10773 = !DILocation(line: 2167, column: 13, scope: !10770)
!10774 = !DILocation(line: 2170, column: 36, scope: !1011)
!10775 = !DILocation(line: 2170, column: 15, scope: !1011)
!10776 = !DILocation(line: 2171, column: 10, scope: !10777)
!10777 = distinct !DILexicalBlock(scope: !1011, file: !1, line: 2171, column: 9)
!10778 = !DILocation(line: 2171, column: 9, scope: !1011)
!10779 = !DILocation(line: 2174, column: 16, scope: !1011)
!10780 = !DILocation(line: 2175, column: 10, scope: !10781)
!10781 = distinct !DILexicalBlock(scope: !1011, file: !1, line: 2175, column: 9)
!10782 = !DILocation(line: 2175, column: 9, scope: !1011)
!10783 = !DILocation(line: 2178, column: 9, scope: !10784)
!10784 = distinct !DILexicalBlock(scope: !1011, file: !1, line: 2178, column: 9)
!10785 = !DILocation(line: 2178, column: 9, scope: !1011)
!10786 = !DILocation(line: 2179, column: 38, scope: !10787)
!10787 = distinct !DILexicalBlock(scope: !10784, file: !1, line: 2178, column: 28)
!10788 = !DILocation(line: 2179, column: 49, scope: !10787)
!10789 = !DILocation(line: 2179, column: 48, scope: !10787)
!10790 = !DILocation(line: 2179, column: 42, scope: !10787)
!10791 = !DILocation(line: 2179, column: 19, scope: !10787)
!10792 = !DILocation(line: 2180, column: 14, scope: !10793)
!10793 = distinct !DILexicalBlock(scope: !10787, file: !1, line: 2180, column: 13)
!10794 = !DILocation(line: 2180, column: 13, scope: !10787)
!10795 = !DILocation(line: 2185, column: 9, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !10784, file: !1, line: 2183, column: 10)
!10797 = !DILocation(line: 2188, column: 5, scope: !1011)
!10798 = !DILocation(line: 2189, column: 5, scope: !1011)
!10799 = !DILocation(line: 2190, column: 5, scope: !1011)
!10800 = !DILocation(line: 2195, column: 5, scope: !10801)
!10801 = !DILexicalBlockFile(scope: !1026, file: !1, discriminator: 1)
!10802 = !DILocation(line: 2195, column: 5, scope: !1026)
!10803 = !DILocation(line: 2195, column: 5, scope: !1029)
!10804 = !DILocation(line: 2195, column: 5, scope: !10805)
!10805 = !DILexicalBlockFile(scope: !1028, file: !1, discriminator: 4)
!10806 = !DILocation(line: 2195, column: 5, scope: !10807)
!10807 = distinct !DILexicalBlock(scope: !1028, file: !1, line: 2195, column: 5)
!10808 = !DILocation(line: 2195, column: 5, scope: !1028)
!10809 = !DILocation(line: 2195, column: 5, scope: !10810)
!10810 = !DILexicalBlockFile(scope: !10807, file: !1, discriminator: 6)
!10811 = !DILocation(line: 2196, column: 5, scope: !10812)
!10812 = !DILexicalBlockFile(scope: !1031, file: !1, discriminator: 1)
!10813 = !DILocation(line: 2196, column: 5, scope: !1031)
!10814 = !DILocation(line: 2196, column: 5, scope: !10815)
!10815 = !DILexicalBlockFile(scope: !1033, file: !1, discriminator: 4)
!10816 = !DILocation(line: 2196, column: 5, scope: !10817)
!10817 = distinct !DILexicalBlock(scope: !1033, file: !1, line: 2196, column: 5)
!10818 = !DILocation(line: 2196, column: 5, scope: !1033)
!10819 = !DILocation(line: 2196, column: 5, scope: !10820)
!10820 = !DILexicalBlockFile(scope: !10817, file: !1, discriminator: 6)
!10821 = !DILocation(line: 2197, column: 5, scope: !10822)
!10822 = !DILexicalBlockFile(scope: !1036, file: !1, discriminator: 1)
!10823 = !DILocation(line: 2197, column: 5, scope: !1039)
!10824 = !DILocation(line: 2197, column: 5, scope: !1036)
!10825 = !DILocation(line: 2197, column: 5, scope: !10826)
!10826 = !DILexicalBlockFile(scope: !1038, file: !1, discriminator: 4)
!10827 = !DILocation(line: 2197, column: 5, scope: !10828)
!10828 = distinct !DILexicalBlock(scope: !1038, file: !1, line: 2197, column: 5)
!10829 = !DILocation(line: 2197, column: 5, scope: !1038)
!10830 = !DILocation(line: 2197, column: 5, scope: !10831)
!10831 = !DILexicalBlockFile(scope: !10828, file: !1, discriminator: 6)
!10832 = !DILocation(line: 2198, column: 5, scope: !10833)
!10833 = !DILexicalBlockFile(scope: !1041, file: !1, discriminator: 1)
!10834 = !DILocation(line: 2198, column: 5, scope: !1044)
!10835 = !DILocation(line: 2198, column: 5, scope: !1041)
!10836 = !DILocation(line: 2198, column: 5, scope: !10837)
!10837 = !DILexicalBlockFile(scope: !1043, file: !1, discriminator: 4)
!10838 = !DILocation(line: 2198, column: 5, scope: !10839)
!10839 = distinct !DILexicalBlock(scope: !1043, file: !1, line: 2198, column: 5)
!10840 = !DILocation(line: 2198, column: 5, scope: !1043)
!10841 = !DILocation(line: 2198, column: 5, scope: !10842)
!10842 = !DILexicalBlockFile(scope: !10839, file: !1, discriminator: 6)
!10843 = !DILocation(line: 2200, column: 1, scope: !1011)
!10844 = !DILocation(line: 4244, column: 27, scope: !1389)
!10845 = !DILocation(line: 4244, column: 43, scope: !1389)
!10846 = !DILocation(line: 4244, column: 55, scope: !1389)
!10847 = !DILocation(line: 4246, column: 27, scope: !1389)
!10848 = !DILocation(line: 4246, column: 11, scope: !1389)
!10849 = !DILocation(line: 4247, column: 5, scope: !1389)
!10850 = !DILocation(line: 4248, column: 5, scope: !1389)
!10851 = !DILocation(line: 4249, column: 5, scope: !1389)
!10852 = !DILocation(line: 4249, column: 9, scope: !1389)
!10853 = !DILocation(line: 4250, column: 5, scope: !1389)
!10854 = !DILocation(line: 4250, column: 9, scope: !1389)
!10855 = !DILocation(line: 4252, column: 15, scope: !1389)
!10856 = !DILocation(line: 4253, column: 5, scope: !1389)
!10857 = !DILocation(line: 4253, column: 10, scope: !1389)
!10858 = !DILocation(line: 4263, column: 5, scope: !1389)
!10859 = !DILocation(line: 4264, column: 5, scope: !1389)
!10860 = !DILocation(line: 4265, column: 9, scope: !1389)
!10861 = !DILocation(line: 4265, column: 23, scope: !1389)
!10862 = !DILocation(line: 4266, column: 9, scope: !1389)
!10863 = !DILocation(line: 4266, column: 23, scope: !1389)
!10864 = !DILocation(line: 4267, column: 5, scope: !1389)
!10865 = !DILocation(line: 4268, column: 5, scope: !1389)
!10866 = !DILocation(line: 4247, column: 12, scope: !1389)
!10867 = !DILocation(line: 4248, column: 12, scope: !1389)
!10868 = !DILocation(line: 4269, column: 10, scope: !10869)
!10869 = distinct !DILexicalBlock(scope: !1389, file: !1, line: 4269, column: 9)
!10870 = !DILocation(line: 4269, column: 9, scope: !1389)
!10871 = !DILocation(line: 4276, column: 25, scope: !1389)
!10872 = !DILocation(line: 4276, column: 36, scope: !1389)
!10873 = !DILocation(line: 4277, column: 25, scope: !1389)
!10874 = !DILocation(line: 4277, column: 36, scope: !1389)
!10875 = !DILocation(line: 4276, column: 55, scope: !1389)
!10876 = !DILocation(line: 4285, column: 14, scope: !10877)
!10877 = distinct !DILexicalBlock(scope: !1389, file: !1, line: 4285, column: 9)
!10878 = !DILocation(line: 4285, column: 10, scope: !10877)
!10879 = !DILocation(line: 4285, column: 21, scope: !10877)
!10880 = !DILocation(line: 4285, column: 28, scope: !10881)
!10881 = !DILexicalBlockFile(scope: !10877, file: !1, discriminator: 1)
!10882 = !DILocation(line: 4285, column: 24, scope: !10877)
!10883 = !DILocation(line: 4285, column: 34, scope: !10877)
!10884 = !DILocation(line: 4285, column: 42, scope: !10885)
!10885 = !DILexicalBlockFile(scope: !10886, file: !1, discriminator: 3)
!10886 = !DILexicalBlockFile(scope: !10877, file: !1, discriminator: 2)
!10887 = !DILocation(line: 4285, column: 38, scope: !10877)
!10888 = !DILocation(line: 4285, column: 47, scope: !10877)
!10889 = !DILocation(line: 4285, column: 54, scope: !10890)
!10890 = !DILexicalBlockFile(scope: !10877, file: !1, discriminator: 4)
!10891 = !DILocation(line: 4285, column: 50, scope: !10877)
!10892 = !DILocation(line: 4285, column: 9, scope: !1389)
!10893 = !DILocation(line: 4286, column: 22, scope: !10894)
!10894 = distinct !DILexicalBlock(scope: !10877, file: !1, line: 4285, column: 63)
!10895 = !DILocation(line: 4286, column: 9, scope: !10894)
!10896 = !DILocation(line: 4288, column: 9, scope: !10894)
!10897 = !DILocation(line: 4305, column: 5, scope: !1407)
!10898 = !DILocation(line: 4307, column: 9, scope: !1407)
!10899 = !DILocation(line: 4308, column: 27, scope: !10900)
!10900 = distinct !DILexicalBlock(scope: !1407, file: !1, line: 4307, column: 9)
!10901 = !DILocation(line: 4308, column: 43, scope: !10900)
!10902 = !DILocation(line: 4308, column: 51, scope: !10900)
!10903 = !DILocation(line: 4308, column: 67, scope: !10900)
!10904 = !DILocation(line: 4308, column: 18, scope: !10900)
!10905 = !DILocation(line: 4260, column: 9, scope: !1389)
!10906 = !DILocation(line: 4308, column: 9, scope: !10900)
!10907 = !DILocation(line: 4311, column: 29, scope: !10900)
!10908 = !DILocation(line: 4311, column: 41, scope: !10900)
!10909 = !DILocation(line: 4311, column: 18, scope: !10900)
!10910 = !DILocation(line: 4312, column: 5, scope: !1407)
!10911 = !DILocation(line: 4314, column: 9, scope: !10912)
!10912 = distinct !DILexicalBlock(scope: !1389, file: !1, line: 4314, column: 9)
!10913 = !DILocation(line: 4314, column: 9, scope: !1389)
!10914 = !DILocation(line: 1323, column: 50, scope: !1236, inlinedAt: !10915)
!10915 = distinct !DILocation(line: 4315, column: 24, scope: !10916)
!10916 = distinct !DILexicalBlock(scope: !10912, file: !1, line: 4314, column: 17)
!10917 = !DILocation(line: 1323, column: 12, scope: !1236, inlinedAt: !10915)
!10918 = !DILocation(line: 4316, column: 9, scope: !10916)
!10919 = !DILocation(line: 4320, column: 5, scope: !1389)
!10920 = !DILocation(line: 4321, column: 5, scope: !1389)
!10921 = !DILocation(line: 781, column: 22, scope: !1050, inlinedAt: !10922)
!10922 = distinct !DILocation(line: 4323, column: 5, scope: !1389)
!10923 = !DILocation(line: 782, column: 15, scope: !1058, inlinedAt: !10922)
!10924 = !DILocation(line: 782, column: 9, scope: !1058, inlinedAt: !10922)
!10925 = !DILocation(line: 782, column: 9, scope: !1050, inlinedAt: !10922)
!10926 = !DILocation(line: 783, column: 9, scope: !4639, inlinedAt: !10922)
!10927 = !DILocation(line: 783, column: 9, scope: !4641, inlinedAt: !10922)
!10928 = !DILocation(line: 783, column: 9, scope: !4643, inlinedAt: !10922)
!10929 = !DILocation(line: 783, column: 9, scope: !4645, inlinedAt: !10922)
!10930 = !DILocation(line: 783, column: 9, scope: !1060, inlinedAt: !10922)
!10931 = !DILocation(line: 783, column: 9, scope: !4648, inlinedAt: !10922)
!10932 = !DILocation(line: 4323, column: 5, scope: !1389)
!10933 = !DILocation(line: 781, column: 22, scope: !1050, inlinedAt: !10934)
!10934 = distinct !DILocation(line: 4324, column: 5, scope: !1389)
!10935 = !DILocation(line: 782, column: 15, scope: !1058, inlinedAt: !10934)
!10936 = !DILocation(line: 782, column: 9, scope: !1058, inlinedAt: !10934)
!10937 = !DILocation(line: 782, column: 9, scope: !1050, inlinedAt: !10934)
!10938 = !DILocation(line: 783, column: 9, scope: !4639, inlinedAt: !10934)
!10939 = !DILocation(line: 783, column: 9, scope: !4641, inlinedAt: !10934)
!10940 = !DILocation(line: 783, column: 9, scope: !4643, inlinedAt: !10934)
!10941 = !DILocation(line: 783, column: 9, scope: !4645, inlinedAt: !10934)
!10942 = !DILocation(line: 783, column: 9, scope: !1060, inlinedAt: !10934)
!10943 = !DILocation(line: 783, column: 9, scope: !4648, inlinedAt: !10934)
!10944 = !DILocation(line: 4324, column: 5, scope: !1389)
!10945 = !DILocation(line: 4326, column: 1, scope: !1389)
!10946 = !DILocation(line: 5152, column: 25, scope: !1688)
!10947 = !DILocation(line: 5152, column: 43, scope: !1688)
!10948 = !DILocation(line: 5155, column: 23, scope: !1688)
!10949 = !DILocation(line: 5155, column: 23, scope: !10950)
!10950 = !DILexicalBlockFile(scope: !1688, file: !1, discriminator: 2)
!10951 = !DILocation(line: 5155, column: 12, scope: !1688)
!10952 = !DILocation(line: 5156, column: 18, scope: !10953)
!10953 = distinct !DILexicalBlock(scope: !1688, file: !1, line: 5156, column: 9)
!10954 = !DILocation(line: 5156, column: 9, scope: !1688)
!10955 = !DILocation(line: 5160, column: 21, scope: !1698)
!10956 = !DILocation(line: 5160, column: 19, scope: !1698)
!10957 = !DILocation(line: 5160, column: 5, scope: !1699)
!10958 = !DILocation(line: 5161, column: 26, scope: !1697)
!10959 = !DILocation(line: 5058, column: 5, scope: !1706, inlinedAt: !10960)
!10960 = distinct !DILocation(line: 5164, column: 14, scope: !1703)
!10961 = !DILocation(line: 5062, column: 12, scope: !1706, inlinedAt: !10960)
!10962 = !DILocation(line: 5157, column: 9, scope: !10963)
!10963 = distinct !DILexicalBlock(scope: !10953, file: !1, line: 5156, column: 27)
!10964 = !DILocation(line: 5158, column: 9, scope: !10963)
!10965 = !{!3880, !3871, i64 104}
!10966 = !{!10967, !3871, i64 24}
!10967 = !{!"", !3871, i64 0, !3871, i64 8, !3871, i64 16, !3871, i64 24, !3871, i64 32, !3871, i64 40, !3871, i64 48, !3871, i64 56, !3871, i64 64, !3871, i64 72}
!10968 = !DILocation(line: 5161, column: 19, scope: !1697)
!10969 = !DILocation(line: 5162, column: 18, scope: !10970)
!10970 = distinct !DILexicalBlock(scope: !1697, file: !1, line: 5162, column: 13)
!10971 = !DILocation(line: 5162, column: 13, scope: !1697)
!10972 = !DILocation(line: 5056, column: 32, scope: !1706, inlinedAt: !10960)
!10973 = !DILocation(line: 5056, column: 41, scope: !1706, inlinedAt: !10960)
!10974 = !DILocation(line: 5060, column: 10, scope: !10975, inlinedAt: !10960)
!10975 = distinct !DILexicalBlock(scope: !1706, file: !1, line: 5060, column: 9)
!10976 = !DILocation(line: 5060, column: 9, scope: !1706, inlinedAt: !10960)
!10977 = !DILocation(line: 5164, column: 38, scope: !1703)
!10978 = !DILocation(line: 5058, column: 15, scope: !1706, inlinedAt: !10960)
!10979 = !DILocation(line: 5059, column: 16, scope: !1706, inlinedAt: !10960)
!10980 = !DILocation(line: 5063, column: 29, scope: !1706, inlinedAt: !10960)
!10981 = !DILocation(line: 5063, column: 12, scope: !1706, inlinedAt: !10960)
!10982 = !DILocation(line: 5063, column: 10, scope: !1706, inlinedAt: !10960)
!10983 = !DILocation(line: 5064, column: 10, scope: !10984, inlinedAt: !10960)
!10984 = distinct !DILexicalBlock(scope: !1706, file: !1, line: 5064, column: 9)
!10985 = !DILocation(line: 5064, column: 9, scope: !1706, inlinedAt: !10960)
!10986 = !DILocation(line: 5065, column: 9, scope: !10987, inlinedAt: !10960)
!10987 = distinct !DILexicalBlock(scope: !10984, file: !1, line: 5064, column: 16)
!10988 = !DILocation(line: 5066, column: 9, scope: !10987, inlinedAt: !10960)
!10989 = !DILocation(line: 5068, column: 35, scope: !1706, inlinedAt: !10960)
!10990 = !DILocation(line: 5068, column: 18, scope: !1706, inlinedAt: !10960)
!10991 = !DILocation(line: 5068, column: 5, scope: !1706, inlinedAt: !10960)
!10992 = !DILocation(line: 5069, column: 5, scope: !10993, inlinedAt: !10960)
!10993 = !DILexicalBlockFile(scope: !1715, file: !1, discriminator: 1)
!10994 = !DILocation(line: 5069, column: 5, scope: !10995, inlinedAt: !10960)
!10995 = distinct !DILexicalBlock(scope: !1715, file: !1, line: 5069, column: 5)
!10996 = !DILocation(line: 5069, column: 5, scope: !1715, inlinedAt: !10960)
!10997 = !DILocation(line: 5069, column: 5, scope: !10998, inlinedAt: !10960)
!10998 = !DILexicalBlockFile(scope: !10995, file: !1, discriminator: 3)
!10999 = !DILocation(line: 5164, column: 14, scope: !1703)
!11000 = !DILocation(line: 5071, column: 1, scope: !1706, inlinedAt: !10960)
!11001 = !DILocation(line: 5165, column: 13, scope: !11002)
!11002 = distinct !DILexicalBlock(scope: !1701, file: !1, line: 5165, column: 13)
!11003 = !DILocation(line: 5164, column: 13, scope: !1697)
!11004 = !DILocation(line: 5165, column: 13, scope: !11005)
!11005 = !DILexicalBlockFile(scope: !1701, file: !1, discriminator: 1)
!11006 = !DILocation(line: 5165, column: 13, scope: !1701)
!11007 = !DILocation(line: 5165, column: 13, scope: !11008)
!11008 = !DILexicalBlockFile(scope: !11002, file: !1, discriminator: 3)
!11009 = !DILocation(line: 5168, column: 9, scope: !11010)
!11010 = !DILexicalBlockFile(scope: !1705, file: !1, discriminator: 1)
!11011 = !DILocation(line: 5168, column: 9, scope: !1705)
!11012 = !DILocation(line: 5168, column: 9, scope: !11013)
!11013 = !DILexicalBlockFile(scope: !11014, file: !1, discriminator: 3)
!11014 = distinct !DILexicalBlock(scope: !1705, file: !1, line: 5168, column: 9)
!11015 = !DILocation(line: 5160, column: 29, scope: !1698)
!11016 = !DILocation(line: 5154, column: 9, scope: !1688)
!11017 = !DILocation(line: 5160, column: 17, scope: !11018)
!11018 = !DILexicalBlockFile(scope: !11019, file: !1, discriminator: 2)
!11019 = !DILexicalBlockFile(scope: !1698, file: !1, discriminator: 1)
!11020 = !DILocation(line: 5170, column: 5, scope: !1688)
!11021 = !DILocation(line: 5170, column: 21, scope: !1688)
!11022 = !DILocation(line: 5171, column: 5, scope: !1688)
!11023 = !DILocation(line: 5173, column: 11, scope: !1688)
!11024 = !DILocation(line: 5047, column: 26, scope: !1716, inlinedAt: !11025)
!11025 = distinct !DILocation(line: 5174, column: 5, scope: !1688)
!11026 = !DILocation(line: 5047, column: 44, scope: !1716, inlinedAt: !11025)
!11027 = !DILocation(line: 5049, column: 16, scope: !1716, inlinedAt: !11025)
!11028 = !DILocation(line: 5050, column: 19, scope: !6471, inlinedAt: !11025)
!11029 = !DILocation(line: 5050, column: 5, scope: !6472, inlinedAt: !11025)
!11030 = !DILocation(line: 5051, column: 20, scope: !6471, inlinedAt: !11025)
!11031 = !DILocation(line: 5174, column: 5, scope: !1688)
!11032 = !DILocation(line: 5051, column: 9, scope: !6471, inlinedAt: !11025)
!11033 = !DILocation(line: 5050, column: 29, scope: !6471, inlinedAt: !11025)
!11034 = !DILocation(line: 5052, column: 5, scope: !1716, inlinedAt: !11025)
!11035 = !DILocation(line: 5175, column: 5, scope: !1688)
!11036 = !DILocation(line: 5176, column: 1, scope: !1688)
!11037 = !DILocation(line: 5653, column: 31, scope: !1837)
!11038 = !DILocation(line: 5653, column: 58, scope: !1837)
!11039 = !DILocation(line: 5657, column: 9, scope: !11040)
!11040 = distinct !DILexicalBlock(scope: !1837, file: !1, line: 5657, column: 9)
!11041 = !DILocation(line: 5657, column: 24, scope: !11040)
!11042 = !DILocation(line: 5657, column: 9, scope: !1837)
!11043 = !DILocation(line: 5658, column: 25, scope: !11044)
!11044 = distinct !DILexicalBlock(scope: !11040, file: !1, line: 5657, column: 44)
!11045 = !DILocation(line: 5658, column: 9, scope: !11044)
!11046 = !DILocation(line: 5659, column: 9, scope: !11044)
!11047 = !DILocation(line: 5661, column: 30, scope: !1837)
!11048 = !DILocation(line: 5661, column: 16, scope: !1837)
!11049 = !DILocation(line: 5655, column: 10, scope: !1837)
!11050 = !DILocation(line: 5662, column: 18, scope: !11051)
!11051 = distinct !DILexicalBlock(scope: !1837, file: !1, line: 5662, column: 9)
!11052 = !DILocation(line: 5662, column: 24, scope: !11051)
!11053 = !DILocation(line: 5662, column: 27, scope: !11054)
!11054 = !DILexicalBlockFile(scope: !11051, file: !1, discriminator: 1)
!11055 = !DILocation(line: 5662, column: 9, scope: !1837)
!11056 = !DILocation(line: 5664, column: 28, scope: !11057)
!11057 = distinct !DILexicalBlock(scope: !1837, file: !1, line: 5664, column: 9)
!11058 = !DILocation(line: 5665, column: 25, scope: !11059)
!11059 = distinct !DILexicalBlock(scope: !11057, file: !1, line: 5664, column: 51)
!11060 = !DILocation(line: 5665, column: 9, scope: !11059)
!11061 = !DILocation(line: 5666, column: 9, scope: !11059)
!11062 = !DILocation(line: 5668, column: 27, scope: !1837)
!11063 = !DILocation(line: 5668, column: 10, scope: !1837)
!11064 = !DILocation(line: 5668, column: 25, scope: !1837)
!11065 = !DILocation(line: 5669, column: 5, scope: !1837)
!11066 = !DILocation(line: 5670, column: 1, scope: !1837)
!11067 = !DILocation(line: 6834, column: 19, scope: !2203)
!11068 = !DILocation(line: 6834, column: 28, scope: !2203)
!11069 = !DILocation(line: 6834, column: 51, scope: !2203)
!11070 = !DILocation(line: 6840, column: 13, scope: !11071)
!11071 = distinct !DILexicalBlock(scope: !2203, file: !1, line: 6840, column: 9)
!11072 = !DILocation(line: 6840, column: 9, scope: !2203)
!11073 = !DILocation(line: 1269, column: 31, scope: !1107, inlinedAt: !11074)
!11074 = distinct !DILocation(line: 6841, column: 16, scope: !11071)
!11075 = !DILocation(line: 1269, column: 12, scope: !1107, inlinedAt: !11074)
!11076 = !DILocation(line: 6841, column: 9, scope: !11071)
!11077 = !DILocation(line: 6843, column: 9, scope: !2214)
!11078 = !DILocation(line: 6843, column: 23, scope: !2214)
!11079 = !DILocation(line: 6843, column: 9, scope: !2203)
!11080 = !DILocation(line: 6844, column: 23, scope: !2213)
!11081 = !DILocation(line: 6844, column: 19, scope: !2213)
!11082 = !DILocation(line: 6845, column: 15, scope: !11083)
!11083 = distinct !DILexicalBlock(scope: !2213, file: !1, line: 6845, column: 13)
!11084 = !DILocation(line: 6845, column: 13, scope: !2213)
!11085 = !DILocation(line: 6847, column: 25, scope: !2213)
!11086 = !DILocation(line: 6847, column: 23, scope: !2213)
!11087 = !DILocation(line: 6848, column: 9, scope: !11088)
!11088 = !DILexicalBlockFile(scope: !2216, file: !1, discriminator: 1)
!11089 = !DILocation(line: 6848, column: 9, scope: !11090)
!11090 = distinct !DILexicalBlock(scope: !2216, file: !1, line: 6848, column: 9)
!11091 = !DILocation(line: 6848, column: 9, scope: !2216)
!11092 = !DILocation(line: 6848, column: 9, scope: !11093)
!11093 = !DILexicalBlockFile(scope: !11090, file: !1, discriminator: 3)
!11094 = !DILocation(line: 6849, column: 13, scope: !11095)
!11095 = distinct !DILexicalBlock(scope: !2213, file: !1, line: 6849, column: 13)
!11096 = !DILocation(line: 6850, column: 13, scope: !11095)
!11097 = !DILocation(line: 6854, column: 51, scope: !2203)
!11098 = !DILocation(line: 6854, column: 14, scope: !2203)
!11099 = !DILocation(line: 6836, column: 15, scope: !2203)
!11100 = !DILocation(line: 6855, column: 10, scope: !11101)
!11101 = distinct !DILexicalBlock(scope: !2203, file: !1, line: 6855, column: 9)
!11102 = !DILocation(line: 6855, column: 9, scope: !2203)
!11103 = !DILocation(line: 6862, column: 5, scope: !2203)
!11104 = !{!11105, !3877, i64 0}
!11105 = !{!"rusage", !11106, i64 0, !11106, i64 16, !3872, i64 32, !3872, i64 40, !3872, i64 48, !3872, i64 56, !3872, i64 64, !3872, i64 72, !3872, i64 80, !3872, i64 88, !3872, i64 96, !3872, i64 104, !3872, i64 112, !3872, i64 120, !3872, i64 128, !3872, i64 136}
!11106 = !{!"timeval", !3877, i64 0, !3877, i64 8}
!11107 = !{!11105, !3877, i64 8}
!11108 = !DILocation(line: 6864, column: 5, scope: !2203)
!11109 = !{!11105, !3877, i64 16}
!11110 = !{!11105, !3877, i64 24}
!11111 = !DILocation(line: 6868, column: 5, scope: !2203)
!11112 = !DILocation(line: 6869, column: 5, scope: !2203)
!11113 = !DILocation(line: 6870, column: 5, scope: !2203)
!11114 = !DILocation(line: 6871, column: 5, scope: !2203)
!11115 = !DILocation(line: 6872, column: 5, scope: !2203)
!11116 = !DILocation(line: 6873, column: 5, scope: !2203)
!11117 = !DILocation(line: 6874, column: 5, scope: !2203)
!11118 = !DILocation(line: 6875, column: 5, scope: !2203)
!11119 = !DILocation(line: 6876, column: 5, scope: !2203)
!11120 = !DILocation(line: 6877, column: 5, scope: !2203)
!11121 = !DILocation(line: 6878, column: 5, scope: !2203)
!11122 = !DILocation(line: 6879, column: 5, scope: !2203)
!11123 = !DILocation(line: 6880, column: 5, scope: !2203)
!11124 = !DILocation(line: 6881, column: 5, scope: !2203)
!11125 = !DILocation(line: 6884, column: 9, scope: !2220)
!11126 = !DILocation(line: 6884, column: 9, scope: !2203)
!11127 = !DILocation(line: 6885, column: 9, scope: !11128)
!11128 = !DILexicalBlockFile(scope: !2218, file: !1, discriminator: 1)
!11129 = !DILocation(line: 6885, column: 9, scope: !11130)
!11130 = distinct !DILexicalBlock(scope: !2218, file: !1, line: 6885, column: 9)
!11131 = !DILocation(line: 6885, column: 9, scope: !2218)
!11132 = !DILocation(line: 6885, column: 9, scope: !11133)
!11133 = !DILexicalBlockFile(scope: !11130, file: !1, discriminator: 3)
!11134 = !DILocation(line: 6889, column: 48, scope: !2203)
!11135 = !DILocation(line: 6889, column: 33, scope: !2203)
!11136 = !DILocation(line: 6889, column: 12, scope: !2203)
!11137 = !DILocation(line: 6889, column: 5, scope: !2203)
!11138 = !DILocation(line: 6890, column: 1, scope: !2203)
!11139 = !DILocation(line: 1005, column: 24, scope: !2415)
!11140 = !DILocation(line: 1005, column: 35, scope: !2415)
!11141 = !DILocation(line: 1008, column: 23, scope: !2415)
!11142 = !DILocation(line: 1008, column: 7, scope: !2415)
!11143 = !DILocation(line: 1008, column: 21, scope: !2415)
!11144 = !DILocation(line: 1012, column: 9, scope: !8680)
!11145 = !DILocation(line: 1014, column: 5, scope: !2415)
!11146 = !DILocation(line: 1015, column: 1, scope: !2415)
!11147 = !DILocation(line: 8034, column: 26, scope: !2456)
!11148 = !DILocation(line: 8034, column: 43, scope: !2456)
!11149 = !DILocation(line: 8034, column: 58, scope: !2456)
!11150 = !DILocation(line: 8034, column: 67, scope: !2456)
!11151 = !DILocation(line: 8034, column: 76, scope: !2456)
!11152 = !DILocation(line: 8037, column: 22, scope: !2456)
!11153 = !DILocation(line: 8039, column: 12, scope: !2456)
!11154 = !DILocation(line: 8039, column: 10, scope: !2456)
!11155 = !DILocation(line: 8040, column: 9, scope: !2456)
!11156 = !DILocation(line: 8039, column: 12, scope: !11157)
!11157 = !DILexicalBlockFile(scope: !2456, file: !1, discriminator: 2)
!11158 = !DILocation(line: 8040, column: 14, scope: !11159)
!11159 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 8040, column: 9)
!11160 = !DILocation(line: 8041, column: 9, scope: !11161)
!11161 = distinct !DILexicalBlock(scope: !11159, file: !1, line: 8040, column: 23)
!11162 = !DILocation(line: 8042, column: 9, scope: !11161)
!11163 = !DILocation(line: 8045, column: 12, scope: !11157)
!11164 = !DILocation(line: 8045, column: 10, scope: !2456)
!11165 = !DILocation(line: 8046, column: 14, scope: !11166)
!11166 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 8046, column: 9)
!11167 = !DILocation(line: 8046, column: 9, scope: !2456)
!11168 = !DILocation(line: 8052, column: 19, scope: !2473)
!11169 = !DILocation(line: 8052, column: 5, scope: !2474)
!11170 = !DILocation(line: 8053, column: 26, scope: !2472)
!11171 = !DILocation(line: 8047, column: 19, scope: !11172)
!11172 = distinct !DILexicalBlock(scope: !11166, file: !1, line: 8046, column: 23)
!11173 = !DILocation(line: 8047, column: 9, scope: !11172)
!11174 = !DILocation(line: 8048, column: 9, scope: !11172)
!11175 = !DILocation(line: 8049, column: 9, scope: !11172)
!11176 = !DILocation(line: 8053, column: 19, scope: !2472)
!11177 = !DILocation(line: 8054, column: 18, scope: !11178)
!11178 = distinct !DILexicalBlock(scope: !2472, file: !1, line: 8054, column: 13)
!11179 = !DILocation(line: 8054, column: 13, scope: !2472)
!11180 = !DILocation(line: 8056, column: 40, scope: !2478)
!11181 = !DILocation(line: 8056, column: 39, scope: !2478)
!11182 = !DILocation(line: 8056, column: 13, scope: !2478)
!11183 = !DILocation(line: 8056, column: 56, scope: !2478)
!11184 = !DILocation(line: 8057, column: 13, scope: !11185)
!11185 = distinct !DILexicalBlock(scope: !2476, file: !1, line: 8057, column: 13)
!11186 = !DILocation(line: 8056, column: 13, scope: !2472)
!11187 = !DILocation(line: 8057, column: 13, scope: !11188)
!11188 = !DILexicalBlockFile(scope: !2476, file: !1, discriminator: 1)
!11189 = !DILocation(line: 8057, column: 13, scope: !2476)
!11190 = !DILocation(line: 8057, column: 13, scope: !11191)
!11191 = !DILexicalBlockFile(scope: !11185, file: !1, discriminator: 3)
!11192 = !DILocation(line: 8060, column: 9, scope: !11193)
!11193 = !DILexicalBlockFile(scope: !2480, file: !1, discriminator: 1)
!11194 = !DILocation(line: 8060, column: 9, scope: !2480)
!11195 = !DILocation(line: 8060, column: 9, scope: !11196)
!11196 = !DILexicalBlockFile(scope: !11197, file: !1, discriminator: 3)
!11197 = distinct !DILexicalBlock(scope: !2480, file: !1, line: 8060, column: 9)
!11198 = !DILocation(line: 8061, column: 31, scope: !2472)
!11199 = !DILocation(line: 8061, column: 40, scope: !2472)
!11200 = !DILocation(line: 8061, column: 10, scope: !2472)
!11201 = !DILocation(line: 8061, column: 9, scope: !2472)
!11202 = !DILocation(line: 8061, column: 28, scope: !2472)
!11203 = !{!11204, !3871, i64 0}
!11204 = !{!"iovec", !3871, i64 0, !3877, i64 8}
!11205 = !DILocation(line: 8062, column: 17, scope: !2472)
!11206 = !DILocation(line: 8062, column: 26, scope: !2472)
!11207 = !DILocation(line: 8037, column: 16, scope: !2456)
!11208 = !DILocation(line: 8063, column: 10, scope: !2472)
!11209 = !DILocation(line: 8063, column: 19, scope: !2472)
!11210 = !DILocation(line: 8063, column: 27, scope: !2472)
!11211 = !{!11204, !3877, i64 8}
!11212 = !DILocation(line: 8064, column: 15, scope: !2472)
!11213 = !DILocation(line: 8069, column: 15, scope: !2456)
!11214 = !DILocation(line: 8069, column: 5, scope: !2456)
!11215 = !DILocation(line: 8036, column: 12, scope: !2456)
!11216 = !DILocation(line: 8070, column: 19, scope: !11217)
!11217 = distinct !DILexicalBlock(scope: !11218, file: !1, line: 8070, column: 5)
!11218 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 8070, column: 5)
!11219 = !DILocation(line: 8070, column: 5, scope: !11218)
!11220 = !DILocation(line: 8071, column: 28, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !11217, file: !1, line: 8070, column: 29)
!11222 = !DILocation(line: 8071, column: 27, scope: !11221)
!11223 = !DILocation(line: 8071, column: 9, scope: !11221)
!11224 = !DILocation(line: 8073, column: 15, scope: !2456)
!11225 = !DILocation(line: 8073, column: 5, scope: !2456)
!11226 = !DILocation(line: 8074, column: 5, scope: !2456)
!11227 = !DILocation(line: 8075, column: 1, scope: !2456)
!11228 = !DILocation(line: 9168, column: 45, scope: !2841)
!11229 = !DILocation(line: 9169, column: 19, scope: !2841)
!11230 = !DILocation(line: 9169, column: 15, scope: !2841)
!11231 = !DILocation(line: 9170, column: 11, scope: !11232)
!11232 = distinct !DILexicalBlock(scope: !2841, file: !1, line: 9170, column: 9)
!11233 = !DILocation(line: 9170, column: 9, scope: !2841)
!11234 = !DILocation(line: 9174, column: 5, scope: !2841)
!11235 = !{!11236, !3877, i64 0}
!11236 = !{!"statvfs", !3877, i64 0, !3877, i64 8, !3877, i64 16, !3877, i64 24, !3877, i64 32, !3877, i64 40, !3877, i64 48, !3877, i64 56, !3877, i64 64, !3877, i64 72, !3877, i64 80, !3872, i64 88}
!11237 = !DILocation(line: 9175, column: 5, scope: !2841)
!11238 = !{!11236, !3877, i64 8}
!11239 = !DILocation(line: 9176, column: 5, scope: !2841)
!11240 = !{!11236, !3877, i64 16}
!11241 = !DILocation(line: 9177, column: 5, scope: !2841)
!11242 = !{!11236, !3877, i64 24}
!11243 = !DILocation(line: 9178, column: 5, scope: !2841)
!11244 = !{!11236, !3877, i64 32}
!11245 = !DILocation(line: 9179, column: 5, scope: !2841)
!11246 = !{!11236, !3877, i64 40}
!11247 = !DILocation(line: 9180, column: 5, scope: !2841)
!11248 = !{!11236, !3877, i64 48}
!11249 = !DILocation(line: 9181, column: 5, scope: !2841)
!11250 = !{!11236, !3877, i64 56}
!11251 = !DILocation(line: 9182, column: 5, scope: !2841)
!11252 = !{!11236, !3877, i64 72}
!11253 = !DILocation(line: 9183, column: 5, scope: !2841)
!11254 = !{!11236, !3877, i64 80}
!11255 = !DILocation(line: 9202, column: 9, scope: !2850)
!11256 = !DILocation(line: 9202, column: 9, scope: !2841)
!11257 = !DILocation(line: 9203, column: 9, scope: !11258)
!11258 = !DILexicalBlockFile(scope: !2848, file: !1, discriminator: 1)
!11259 = !DILocation(line: 9203, column: 9, scope: !11260)
!11260 = distinct !DILexicalBlock(scope: !2848, file: !1, line: 9203, column: 9)
!11261 = !DILocation(line: 9203, column: 9, scope: !2848)
!11262 = !DILocation(line: 9203, column: 9, scope: !11263)
!11263 = !DILexicalBlockFile(scope: !11260, file: !1, discriminator: 3)
!11264 = !DILocation(line: 9208, column: 1, scope: !2841)
!11265 = !DILocation(line: 9705, column: 33, scope: !2876)
!11266 = !DILocation(line: 9705, column: 43, scope: !2876)
!11267 = !DILocation(line: 9707, column: 12, scope: !2876)
!11268 = !DILocation(line: 9707, column: 5, scope: !2876)
!11269 = !DILocation(line: 9337, column: 25, scope: !2882)
!11270 = !DILocation(line: 9337, column: 35, scope: !2882)
!11271 = !DILocation(line: 9337, column: 60, scope: !2882)
!11272 = !DILocation(line: 9338, column: 22, scope: !2882)
!11273 = !DILocation(line: 9340, column: 9, scope: !2893)
!11274 = !DILocation(line: 9340, column: 9, scope: !2882)
!11275 = !DILocation(line: 9341, column: 19, scope: !11276)
!11276 = distinct !DILexicalBlock(scope: !2893, file: !1, line: 9340, column: 28)
!11277 = !DILocation(line: 9341, column: 17, scope: !11276)
!11278 = !DILocation(line: 9342, column: 9, scope: !11276)
!11279 = !DILocation(line: 9346, column: 16, scope: !2892)
!11280 = !DILocation(line: 9348, column: 16, scope: !2892)
!11281 = !DILocation(line: 9351, column: 14, scope: !11282)
!11282 = distinct !DILexicalBlock(scope: !2892, file: !1, line: 9351, column: 13)
!11283 = !DILocation(line: 9351, column: 13, scope: !2892)
!11284 = !DILocation(line: 9352, column: 29, scope: !11285)
!11285 = distinct !DILexicalBlock(scope: !11282, file: !1, line: 9351, column: 36)
!11286 = !DILocation(line: 9352, column: 13, scope: !11285)
!11287 = !DILocation(line: 9354, column: 13, scope: !11285)
!11288 = !DILocation(line: 9356, column: 20, scope: !2892)
!11289 = !DILocation(line: 9350, column: 21, scope: !2892)
!11290 = !DILocation(line: 9357, column: 22, scope: !11291)
!11291 = distinct !DILexicalBlock(scope: !2892, file: !1, line: 9357, column: 13)
!11292 = !DILocation(line: 9357, column: 13, scope: !2892)
!11293 = !DILocation(line: 9359, column: 19, scope: !2892)
!11294 = !DILocation(line: 9359, column: 9, scope: !2892)
!11295 = !DILocation(line: 9360, column: 23, scope: !2900)
!11296 = !DILocation(line: 9360, column: 29, scope: !2900)
!11297 = !DILocation(line: 9347, column: 16, scope: !2892)
!11298 = !DILocation(line: 9361, column: 19, scope: !2899)
!11299 = !{!11300, !3871, i64 0}
!11300 = !{!"constdef", !3871, i64 0, !3877, i64 8}
!11301 = !DILocation(line: 9349, column: 13, scope: !2892)
!11302 = !DILocation(line: 9362, column: 21, scope: !11303)
!11303 = distinct !DILexicalBlock(scope: !2900, file: !1, line: 9362, column: 17)
!11304 = !DILocation(line: 9362, column: 17, scope: !2900)
!11305 = !DILocation(line: 9364, column: 26, scope: !11306)
!11306 = distinct !DILexicalBlock(scope: !11303, file: !1, line: 9364, column: 22)
!11307 = !DILocation(line: 9364, column: 22, scope: !11303)
!11308 = !DILocation(line: 9365, column: 26, scope: !11306)
!11309 = !DILocation(line: 9367, column: 38, scope: !11310)
!11310 = distinct !DILexicalBlock(scope: !11306, file: !1, line: 9366, column: 18)
!11311 = !{!11300, !3877, i64 8}
!11312 = !DILocation(line: 9367, column: 27, scope: !11310)
!11313 = !DILocation(line: 9367, column: 25, scope: !11310)
!11314 = !DILocation(line: 9368, column: 17, scope: !11310)
!11315 = !DILocation(line: 9371, column: 25, scope: !2892)
!11316 = !DILocation(line: 9371, column: 9, scope: !2892)
!11317 = !DILocation(line: 9372, column: 9, scope: !2892)
!11318 = !DILocation(line: 9374, column: 1, scope: !2882)
!11319 = !DILocation(line: 10251, column: 33, scope: !2911)
!11320 = !DILocation(line: 10251, column: 43, scope: !2911)
!11321 = !DILocation(line: 10253, column: 12, scope: !2911)
!11322 = !DILocation(line: 10253, column: 5, scope: !2911)
!11323 = !DILocation(line: 9466, column: 30, scope: !2925)
!11324 = !DILocation(line: 9466, column: 40, scope: !2925)
!11325 = !DILocation(line: 9468, column: 12, scope: !2925)
!11326 = !DILocation(line: 9468, column: 5, scope: !2925)
!11327 = !DILocation(line: 10305, column: 39, scope: !3136)
!11328 = !DILocation(line: 10305, column: 53, scope: !3136)
!11329 = !DILocation(line: 10306, column: 28, scope: !3136)
!11330 = !DILocation(line: 10306, column: 49, scope: !3136)
!11331 = !DILocation(line: 10308, column: 15, scope: !3136)
!11332 = !DILocation(line: 10311, column: 11, scope: !3136)
!11333 = !DILocation(line: 10311, column: 5, scope: !3136)
!11334 = !DILocation(line: 10312, column: 9, scope: !3136)
!11335 = !DILocation(line: 10313, column: 11, scope: !11336)
!11336 = distinct !DILexicalBlock(scope: !3136, file: !1, line: 10313, column: 9)
!11337 = !DILocation(line: 10313, column: 9, scope: !3136)
!11338 = !DILocation(line: 10316, column: 17, scope: !3148)
!11339 = !DILocation(line: 10316, column: 5, scope: !3149)
!11340 = !DILocation(line: 10317, column: 48, scope: !3147)
!11341 = !DILocation(line: 10317, column: 23, scope: !3147)
!11342 = !DILocation(line: 10317, column: 19, scope: !3147)
!11343 = !DILocation(line: 10318, column: 23, scope: !3153)
!11344 = !DILocation(line: 10318, column: 59, scope: !3153)
!11345 = !DILocation(line: 10318, column: 26, scope: !3153)
!11346 = !DILocation(line: 10318, column: 68, scope: !3153)
!11347 = !DILocation(line: 10319, column: 13, scope: !11348)
!11348 = distinct !DILexicalBlock(scope: !3155, file: !1, line: 10319, column: 13)
!11349 = !DILocation(line: 10318, column: 13, scope: !3147)
!11350 = !DILocation(line: 10319, column: 13, scope: !11351)
!11351 = !DILexicalBlockFile(scope: !3151, file: !1, discriminator: 1)
!11352 = !DILocation(line: 10319, column: 13, scope: !11353)
!11353 = !DILexicalBlockFile(scope: !3155, file: !1, discriminator: 4)
!11354 = !DILocation(line: 10319, column: 13, scope: !3155)
!11355 = !DILocation(line: 10319, column: 13, scope: !11356)
!11356 = !DILexicalBlockFile(scope: !11348, file: !1, discriminator: 6)
!11357 = !DILocation(line: 10320, column: 13, scope: !11358)
!11358 = !DILexicalBlockFile(scope: !3158, file: !1, discriminator: 1)
!11359 = !DILocation(line: 10320, column: 13, scope: !11360)
!11360 = distinct !DILexicalBlock(scope: !3158, file: !1, line: 10320, column: 13)
!11361 = !DILocation(line: 10320, column: 13, scope: !3158)
!11362 = !DILocation(line: 10320, column: 13, scope: !11363)
!11363 = !DILexicalBlockFile(scope: !11360, file: !1, discriminator: 3)
!11364 = !DILocation(line: 10323, column: 9, scope: !11365)
!11365 = !DILexicalBlockFile(scope: !3160, file: !1, discriminator: 1)
!11366 = !DILocation(line: 10323, column: 9, scope: !3160)
!11367 = !DILocation(line: 10323, column: 9, scope: !11368)
!11368 = !DILexicalBlockFile(scope: !11369, file: !1, discriminator: 3)
!11369 = distinct !DILexicalBlock(scope: !3160, file: !1, line: 10323, column: 9)
!11370 = !DILocation(line: 10316, column: 30, scope: !3148)
!11371 = !DILocation(line: 10309, column: 12, scope: !3136)
!11372 = !DILocation(line: 10325, column: 12, scope: !3136)
!11373 = !DILocation(line: 10325, column: 5, scope: !3136)
!11374 = !DILocation(line: 10326, column: 1, scope: !3136)
!11375 = !DILocation(line: 10294, column: 27, scope: !3161)
!11376 = !DILocation(line: 10294, column: 44, scope: !3161)
!11377 = !DILocation(line: 10301, column: 12, scope: !3172)
!11378 = !DILocation(line: 10301, column: 5, scope: !3161)
